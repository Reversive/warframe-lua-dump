
main <?:0,0> (1212 instructions, 4848 bytes at 00000160E3D24B10)
0+ params, 185 slots, 0 upvalues, 0 locals, 247 constants, 200 functions
	1	[67]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[67]	LOADK    	R1 K1 ; R1 := "EE.Interface.Utilities"
	3	[67]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[68]	GETGLOBAL	R1 K0 ; R1 := 0x2d0fad09
	5	[68]	LOADK    	R2 K2 ; R2 := "Lotus.Interface.UIUtilities"
	6	[68]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[69]	GETGLOBAL	R2 K0 ; R2 := 0x2d0fad09
	8	[69]	LOADK    	R3 K3 ; R3 := "Lotus.Interface.LotusUtilities"
	9	[69]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[70]	GETGLOBAL	R3 K0 ; R3 := 0x2d0fad09
	11	[70]	LOADK    	R4 K4 ; R4 := "Lotus.Interface.UIStyleUtilities"
	12	[70]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[71]	GETGLOBAL	R4 K0 ; R4 := 0x2d0fad09
	14	[71]	LOADK    	R5 K5 ; R5 := "Lotus.Interface.CardUtilitiesRedux"
	15	[71]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[72]	GETGLOBAL	R5 K0 ; R5 := 0x2d0fad09
	17	[72]	LOADK    	R6 K6 ; R6 := "Lotus.Interface.RewardUtilities"
	18	[72]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[73]	GETGLOBAL	R6 K0 ; R6 := 0x2d0fad09
	20	[73]	LOADK    	R7 K7 ; R7 := "Lotus.Interface.StoreItemUtilities"
	21	[73]	CALL     	R6 2 2 ; R6 := R6(R7)
	22	[74]	GETGLOBAL	R7 K0 ; R7 := 0x2d0fad09
	23	[74]	LOADK    	R8 K8 ; R8 := "Lotus.Scripts.Effects.EffectsColorUtilities"
	24	[74]	CALL     	R7 2 2 ; R7 := R7(R8)
	25	[75]	GETGLOBAL	R8 K0 ; R8 := 0x2d0fad09
	26	[75]	LOADK    	R9 K9 ; R9 := "Lotus.Scripts.Nemesis.NemesisGenerator"
	27	[75]	CALL     	R8 2 2 ; R8 := R8(R9)
	28	[76]	GETGLOBAL	R9 K0 ; R9 := 0x2d0fad09
	29	[76]	LOADK    	R10 K10 ; R10 := "Lotus.Scripts.Libs.TransmissionSet"
	30	[76]	CALL     	R9 2 2 ; R9 := R9(R10)
	31	[79]	GETGLOBAL	R10 K0 ; R10 := 0x2d0fad09
	32	[79]	LOADK    	R11 K11 ; R11 := "Lotus.Scripts.PVP.PVPHelper"
	33	[79]	CALL     	R10 2 2 ; R10 := R10(R11)
	34	[80]	GETGLOBAL	R11 K0 ; R11 := 0x2d0fad09
	35	[80]	LOADK    	R12 K12 ; R12 := "Lotus.Interface.Components.ThemedProgressInfoGridItem"
	36	[80]	CALL     	R11 2 2 ; R11 := R11(R12)
	37	[82]	NEWTABLE 	R12 0 14 ; R12 := {}
	38	[83]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	39	[83]	LOADK    	R14 K15 ; R14 := "/Lotus/Types/Game/BaseCosmeticEnhancer"
	40	[83]	CALL     	R13 2 2 ; R13 := R13(R14)
	41	[83]	SETTABLE 	R12 K13 R13 ; R12["Enhancement"] := R13
	42	[84]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	43	[84]	LOADK    	R14 K17 ; R14 := "/Lotus/Upgrades/Mods/Fusers/LegendaryModFuser"
	44	[84]	CALL     	R13 2 2 ; R13 := R13(R14)
	45	[84]	SETTABLE 	R12 K16 R13 ; R12["LegendaryCore"] := R13
	46	[85]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	47	[85]	LOADK    	R14 K19 ; R14 := "/Lotus/Upgrades/Mods/Railjack/RailjackBaseMod"
	48	[85]	CALL     	R13 2 2 ; R13 := R13(R14)
	49	[85]	SETTABLE 	R12 K18 R13 ; R12["RailjackMod"] := R13
	50	[86]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	51	[86]	LOADK    	R14 K21 ; R14 := "/Lotus/Types/Game/LotusSigil"
	52	[86]	CALL     	R13 2 2 ; R13 := R13(R14)
	53	[86]	SETTABLE 	R12 K20 R13 ; R12["Sigil"] := R13
	54	[87]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	55	[87]	LOADK    	R14 K23 ; R14 := "/Lotus/Types/Items/MiscItems/VoidTearDrop"
	56	[87]	CALL     	R13 2 2 ; R13 := R13(R14)
	57	[87]	SETTABLE 	R12 K22 R13 ; R12["VoidTrace"] := R13
	58	[88]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	59	[88]	LOADK    	R14 K25 ; R14 := "/Lotus/Types/Game/KubrowPet/KubrowPetPowerSuit"
	60	[88]	CALL     	R13 2 2 ; R13 := R13(R14)
	61	[88]	SETTABLE 	R12 K24 R13 ; R12["KubrowPetSuit"] := R13
	62	[89]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	63	[89]	LOADK    	R14 K27 ; R14 := "/Lotus/Types/Game/CatbrowPet/CatbrowPetPowerSuit"
	64	[89]	CALL     	R13 2 2 ; R13 := R13(R14)
	65	[89]	SETTABLE 	R12 K26 R13 ; R12["CatbrowPetSuit"] := R13
	66	[90]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	67	[90]	LOADK    	R14 K29 ; R14 := "/Lotus/Types/Items/MiscItems/TransientMiscItem"
	68	[90]	CALL     	R13 2 2 ; R13 := R13(R14)
	69	[90]	SETTABLE 	R12 K28 R13 ; R12["TransientMiscItem"] := R13
	70	[91]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	71	[91]	LOADK    	R14 K31 ; R14 := "/Lotus/Types/Items/MiscItems/Kuva"
	72	[91]	CALL     	R13 2 2 ; R13 := R13(R14)
	73	[91]	SETTABLE 	R12 K30 R13 ; R12["KuvaItem"] := R13
	74	[92]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	75	[92]	LOADK    	R14 K33 ; R14 := "/Lotus/Types/Items/Events/OperationsCredits"
	76	[92]	CALL     	R13 2 2 ; R13 := R13(R14)
	77	[92]	SETTABLE 	R12 K32 R13 ; R12["ScarletCredits"] := R13
	78	[93]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	79	[93]	LOADK    	R14 K35 ; R14 := "/Lotus/Types/Items/SyndicateDogTags/NoraDogTag"
	80	[93]	CALL     	R13 2 2 ; R13 := R13(R14)
	81	[93]	SETTABLE 	R12 K34 R13 ; R12["NoraDogTag"] := R13
	82	[94]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	83	[94]	LOADK    	R14 K37 ; R14 := "/Lotus/Types/Restoratives/Consumable/NemesisBait"
	84	[94]	CALL     	R13 2 2 ; R13 := R13(R14)
	85	[94]	SETTABLE 	R12 K36 R13 ; R12["RequiemUltimatum"] := R13
	86	[95]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	87	[95]	LOADK    	R14 K39 ; R14 := "/Lotus/Types/Gameplay/Zariman/Resources/ZarimanDogTag"
	88	[95]	CALL     	R13 2 2 ; R13 := R13(R14)
	89	[95]	SETTABLE 	R12 K38 R13 ; R12["ZarimanDogTag"] := R13
	90	[96]	GETGLOBAL	R13 K14 ; R13 := 0x7ed0a956
	91	[96]	LOADK    	R14 K41 ; R14 := "/Lotus/Types/Gameplay/Zariman/Resources/ZarimanResourceItem"
	92	[96]	CALL     	R13 2 2 ; R13 := R13(R14)
	93	[96]	SETTABLE 	R12 K40 R13 ; R12["ZarimanResourceItem"] := R13
	94	[99]	OP_LOADBOOL	R13 1 0 ; R13 := true
	95	[99]	SETGLOBALHASH	R13 K42 ; mShowDuringLoadingScreen := R13
	96	[100]	LOADNIL  	R13 R13 ; R13 := nil
	97	[100]	SETGLOBALHASH	R13 K43 ; mDioramaLoader := R13
	98	[101]	LOADK    	R13 := 0.000000
	99	[101]	SETGLOBALHASH	R13 K44 ; mBG := R13
	100	[102]	LOADNIL  	R13 R13 ; R13 := nil
	101	[102]	SETGLOBALHASH	R13 K45 ; mDioramaLevel := R13
	102	[103]	LOADNIL  	R13 R13 ; R13 := nil
	103	[103]	SETGLOBALHASH	R13 K46 ; mPulseBG := R13
	104	[104]	LOADK    	R13 K48 ; R13 := ""
	105	[104]	SETGLOBALHASH	R13 K47 ; mPetName := R13
	106	[105]	LOADK    	R13 K48 ; R13 := ""
	107	[105]	SETGLOBALHASH	R13 K49 ; mKDriveName := R13
	108	[107]	NEWTABLE 	R13 0 0 ; R13 := {}
	109	[107]	SETGLOBALHASH	R13 K50 ; mSquadLoadoutsInfo := R13
	110	[109]	OP_LOADBOOL	R13 0 0 ; R13 := false
	111	[109]	SETGLOBALHASH	R13 K51 ; mAbortingAndWasDoingPvpChallenge := R13
	112	[111]	LOADNIL  	R13 R13 ; R13 := nil
	113	[111]	SETGLOBALHASH	R13 K52 ; mAnchorMgr := R13
	114	[112]	LOADNIL  	R13 R13 ; R13 := nil
	115	[112]	SETGLOBALHASH	R13 K53 ; mTimerMgr := R13
	116	[113]	OP_LOADBOOL	R13 0 0 ; R13 := false
	117	[113]	SETGLOBALHASH	R13 K54 ; mInitialized := R13
	118	[114]	OP_LOADBOOL	R13 0 0 ; R13 := false
	119	[114]	SETGLOBALHASH	R13 K55 ; mShouldClose := R13
	120	[115]	OP_LOADBOOL	R13 0 0 ; R13 := false
	121	[115]	SETGLOBALHASH	R13 K56 ; mWaitingForReturnToShip := R13
	122	[116]	OP_LOADBOOL	R13 0 0 ; R13 := false
	123	[116]	SETGLOBALHASH	R13 K57 ; mWaitingForDbUpdate := R13
	124	[117]	OP_LOADBOOL	R13 0 0 ; R13 := false
	125	[117]	SETGLOBALHASH	R13 K58 ; mWaitingForMissionComplete := R13
	126	[118]	OP_LOADBOOL	R13 0 0 ; R13 := false
	127	[118]	SETGLOBALHASH	R13 K59 ; mCloseWhenDbUpdateComplete := R13
	128	[119]	LOADK    	R13 := -1.000000
	129	[119]	SETGLOBALHASH	R13 K60 ; mAutoCloseDelay := R13
	130	[120]	LOADNIL  	R13 R13 ; R13 := nil
	131	[120]	SETGLOBALHASH	R13 K61 ; mCountdownMessage := R13
	132	[121]	LOADNIL  	R13 R13 ; R13 := nil
	133	[121]	SETGLOBALHASH	R13 K62 ; mPlayerMissionInfo := R13
	134	[122]	LOADK    	R13 := 1.000000
	135	[122]	SETGLOBALHASH	R13 K63 ; mFadeOut := R13
	136	[123]	OP_LOADBOOL	R13 0 0 ; R13 := false
	137	[123]	SETGLOBALHASH	R13 K64 ; mPanelTransitionOutActive := R13
	138	[124]	LOADK    	R13 := 0.000000
	139	[124]	SETGLOBALHASH	R13 K65 ; mPendingTallies := R13
	140	[125]	LOADNIL  	R13 R13 ; R13 := nil
	141	[125]	SETGLOBALHASH	R13 K66 ; mXpTallySoundInst := R13
	142	[126]	LOADK    	R13 := -1.000000
	143	[126]	SETGLOBALHASH	R13 K67 ; mReturningToLobbyTime := R13
	144	[127]	OP_LOADBOOL	R13 0 0 ; R13 := false
	145	[127]	SETGLOBALHASH	R13 K68 ; mOpenedFromPauseMenu := R13
	146	[128]	LOADNIL  	R13 R13 ; R13 := nil
	147	[128]	SETGLOBALHASH	R13 K69 ; mChildMovie := R13
	148	[129]	LOADNIL  	R13 R13 ; R13 := nil
	149	[129]	SETGLOBALHASH	R13 K70 ; mPvpMovie := R13
	150	[130]	OP_LOADBOOL	R13 0 0 ; R13 := false
	151	[130]	SETGLOBALHASH	R13 K71 ; mKudosScreenClosed := R13
	152	[131]	OP_LOADBOOL	R13 0 0 ; R13 := false
	153	[131]	SETGLOBALHASH	R13 K72 ; mMedalsValidated := R13
	154	[133]	LOADK    	R13 := 10.000000
	155	[133]	SETGLOBALHASH	R13 K73 ; AUTO_CLOSE_DELAY := R13
	156	[134]	LOADK    	R13 := 0.250000
	157	[134]	SETGLOBALHASH	R13 K74 ; AUTO_CLOSE_FADEOUT_TIME := R13
	158	[135]	LOADK    	R13 K76 ; R13 := 0.150000
	159	[135]	SETGLOBALHASH	R13 K75 ; PROGRESS_BAR_FILL_MIN_SECONDS := R13
	160	[136]	LOADK    	R13 := 1.250000
	161	[136]	SETGLOBALHASH	R13 K77 ; PROGRESS_BAR_FILL_MAX_SECONDS := R13
	162	[137]	LOADK    	R13 := 100.000000
	163	[137]	SETGLOBALHASH	R13 K78 ; PROGRESS_BAR_FILL_XP_PER_SECOND := R13
	164	[138]	LOADK    	R13 := 80.000000
	165	[138]	SETGLOBALHASH	R13 K79 ; BACKER_ALPHA := R13
	166	[139]	LOADK    	R13 := 30.000000
	167	[139]	SETGLOBALHASH	R13 K80 ; BORDER_ALPHA := R13
	168	[142]	NEWTABLE 	R13 0 12 ; R13 := {}
	169	[142]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	170	[142]	LOADK    	R15 K83 ; R15 := "Wave"
	171	[142]	CALL     	R14 2 2 ; R14 := R14(R15)
	172	[142]	SETTABLE 	R13 K81 R14 ; R13["WAVE_NUMBER"] := R14
	173	[143]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	174	[143]	LOADK    	R15 K85 ; R15 := "TimeElapsed"
	175	[143]	CALL     	R14 2 2 ; R14 := R14(R15)
	176	[143]	SETTABLE 	R13 K84 R14 ; R13["TIME_ELAPSED"] := R14
	177	[144]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	178	[144]	LOADK    	R15 K87 ; R15 := "Score"
	179	[144]	CALL     	R14 2 2 ; R14 := R14(R15)
	180	[144]	SETTABLE 	R13 K86 R14 ; R13["MISSION_SCORE"] := R14
	181	[145]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	182	[145]	LOADK    	R15 K89 ; R15 := "RescueEventScore"
	183	[145]	CALL     	R14 2 2 ; R14 := R14(R15)
	184	[145]	SETTABLE 	R13 K88 R14 ; R13["RESCUE_SCORE"] := R14
	185	[146]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	186	[146]	LOADK    	R15 K91 ; R15 := "HiveEventScore"
	187	[146]	CALL     	R14 2 2 ; R14 := R14(R15)
	188	[146]	SETTABLE 	R13 K90 R14 ; R13["HIVE_SCORE"] := R14
	189	[147]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	190	[147]	LOADK    	R15 K93 ; R15 := "FactionHunterSpawned"
	191	[147]	CALL     	R14 2 2 ; R14 := R14(R15)
	192	[147]	SETTABLE 	R13 K92 R14 ; R13["FACTION_HUNTER_SPAWNED"] := R14
	193	[148]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	194	[148]	LOADK    	R15 K95 ; R15 := "NumDeathSquadVictims"
	195	[148]	CALL     	R14 2 2 ; R14 := R14(R15)
	196	[148]	SETTABLE 	R13 K94 R14 ; R13["NUM_DEATH_SQUAD_VICTIMS"] := R14
	197	[149]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	198	[149]	LOADK    	R15 K97 ; R15 := "MoonEarth"
	199	[149]	CALL     	R14 2 2 ; R14 := R14(R15)
	200	[149]	SETTABLE 	R13 K96 R14 ; R13["REGION_TAG_MOON_EARTH"] := R14
	201	[150]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	202	[150]	LOADK    	R15 K99 ; R15 := "MoonVoid"
	203	[150]	CALL     	R14 2 2 ; R14 := R14(R15)
	204	[150]	SETTABLE 	R13 K98 R14 ; R13["REGION_TAG_MOON_VOID"] := R14
	205	[151]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	206	[151]	LOADK    	R15 K101 ; R15 := "EARNED_ITEM"
	207	[151]	CALL     	R14 2 2 ; R14 := R14(R15)
	208	[151]	SETTABLE 	R13 K100 R14 ; R13["EARNED_ITEM_TAG"] := R14
	209	[152]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	210	[152]	LOADK    	R15 K103 ; R15 := "CrewBattleNode556"
	211	[152]	CALL     	R14 2 2 ; R14 := R14(R15)
	212	[152]	SETTABLE 	R13 K102 R14 ; R13["FREE_FLIGHT_NODE"] := R14
	213	[153]	GETGLOBAL	R14 K82 ; R14 := 0x0469f296
	214	[153]	LOADK    	R15 K105 ; R15 := "MissionSuccess"
	215	[153]	CALL     	R14 2 2 ; R14 := R14(R15)
	216	[153]	SETTABLE 	R13 K104 R14 ; R13["NV_MISSION_SUCCESS"] := R14
	217	[156]	OP_LOADBOOL	R14 0 0 ; R14 := false
	218	[156]	SETGLOBALHASH	R14 K106 ; mAskedPauseMenuToClose := R14
	219	[158]	OP_LOADBOOL	R14 0 0 ; R14 := false
	220	[158]	SETGLOBALHASH	R14 K107 ; mQuestMissionChecked := R14
	221	[160]	LOADNIL  	R14 R14 ; R14 := nil
	222	[160]	SETGLOBALHASH	R14 K108 ; mAffinityGrid := R14
	223	[162]	OP_LOADBOOL	R14 0 0 ; R14 := false
	224	[162]	SETGLOBALHASH	R14 K109 ; mQueueUpdateButtons := R14
	225	[164]	LOADNIL  	R14 R14 ; R14 := nil
	226	[164]	SETGLOBALHASH	R14 K110 ; mRewardGrid := R14
	227	[165]	LOADNIL  	R14 R14 ; R14 := nil
	228	[165]	SETGLOBALHASH	R14 K111 ; mSearchBox := R14
	229	[166]	NEWTABLE 	R14 0 0 ; R14 := {}
	230	[166]	SETGLOBALHASH	R14 K112 ; mRewards := R14
	231	[167]	NEWTABLE 	R14 0 0 ; R14 := {}
	232	[167]	SETGLOBALHASH	R14 K113 ; mMods := R14
	233	[168]	LOADNIL  	R14 R14 ; R14 := nil
	234	[168]	SETGLOBALHASH	R14 K114 ; mStatsGrid := R14
	235	[169]	LOADNIL  	R14 R14 ; R14 := nil
	236	[169]	SETGLOBALHASH	R14 K115 ; mMission := R14
	237	[170]	LOADNIL  	R14 R14 ; R14 := nil
	238	[170]	SETGLOBALHASH	R14 K116 ; mGameData := R14
	239	[172]	NEWTABLE 	R14 0 0 ; R14 := {}
	240	[172]	SETGLOBALHASH	R14 K117 ; mOtherStuff := R14
	241	[173]	NEWTABLE 	R14 0 0 ; R14 := {}
	242	[173]	SETGLOBALHASH	R14 K118 ; mSortRewardItems := R14
	243	[175]	LOADK    	R14 := 5.000000
	244	[175]	SETGLOBALHASH	R14 K119 ; mFusionPointsSortPriority := R14
	245	[177]	NEWTABLE 	R14 0 0 ; R14 := {}
	246	[177]	SETGLOBALHASH	R14 K120 ; mStatTable := R14
	247	[179]	OP_LOADBOOL	R14 0 0 ; R14 := false
	248	[179]	SETGLOBALHASH	R14 K121 ; mMissionSuccessful := R14
	249	[180]	OP_LOADBOOL	R14 0 0 ; R14 := false
	250	[180]	SETGLOBALHASH	R14 K122 ; mMissionFailed := R14
	251	[181]	OP_LOADBOOL	R14 1 0 ; R14 := true
	252	[181]	SETGLOBALHASH	R14 K123 ; mInputBlocked := R14
	253	[182]	LOADK    	R14 := 8.000000
	254	[182]	SETGLOBALHASH	R14 K124 ; mMaxPlayers := R14
	255	[184]	NEWTABLE 	R14 0 5 ; R14 := {}
	256	[184]	SETTABLE 	R14 K126 K127 ; R14["Affinity"] := 0.000000
	257	[184]	SETTABLE 	R14 K128 K127 ; R14["Rewards"] := 0.000000
	258	[184]	SETTABLE 	R14 K129 K127 ; R14["Mods"] := 0.000000
	259	[184]	SETTABLE 	R14 K130 K127 ; R14["Stats"] := 0.000000
	260	[184]	SETTABLE 	R14 K131 K127 ; R14["Title"] := 0.000000
	261	[184]	SETGLOBALHASH	R14 K125 ; mPanelStartY := R14
	262	[186]	LOADNIL  	R14 R14 ; R14 := nil
	263	[186]	SETGLOBALHASH	R14 K132 ; mPlayerIconFx := R14
	264	[187]	LOADNIL  	R14 R14 ; R14 := nil
	265	[187]	SETGLOBALHASH	R14 K133 ; mLocalPlayerMissionStats := R14
	266	[189]	LOADNIL  	R14 R14 ; R14 := nil
	267	[189]	SETGLOBALHASH	R14 K134 ; mStatColumnSeparation := R14
	268	[190]	LOADNIL  	R14 R14 ; R14 := nil
	269	[190]	SETGLOBALHASH	R14 K135 ; mPlayersForStats := R14
	270	[192]	LOADK    	R14 := 0.000000
	271	[192]	SETGLOBALHASH	R14 K136 ; mNumberOfLoadoutSlotsUsed := R14
	272	[194]	NEWTABLE 	R14 0 4 ; R14 := {}
	273	[194]	SETTABLE 	R14 K138 K139 ; R14["ITEMS"] := 1.000000
	274	[194]	SETTABLE 	R14 K140 K141 ; R14["REP"] := 2.000000
	275	[194]	SETTABLE 	R14 K142 K143 ; R14["SCOREBOARD"] := 3.000000
	276	[194]	SETTABLE 	R14 K144 K145 ; R14["MASTERY"] := 4.000000
	277	[194]	SETGLOBALHASH	R14 K137 ; ScreenType := R14
	278	[195]	GETGLOBAL	R14 K137 ; R14 := ScreenType
	279	[195]	GETTABLE 	R14 R14 K140 ; R14 := R14["REP"]
	280	[195]	SETGLOBALHASH	R14 K146 ; mCurrentScreenType := R14
	281	[197]	OP_LOADBOOL	R14 0 0 ; R14 := false
	282	[197]	SETGLOBALHASH	R14 K147 ; mReputationScreenInitialized := R14
	283	[199]	OP_LOADBOOL	R14 0 0 ; R14 := false
	284	[199]	SETGLOBALHASH	R14 K148 ; mArchWingRequired := R14
	285	[200]	LOADNIL  	R14 R14 ; R14 := nil
	286	[200]	SETGLOBALHASH	R14 K149 ; mIntrinsicPoints := R14
	287	[202]	NEWTABLE 	R14 0 5 ; R14 := {}
	288	[202]	SETTABLE 	R14 K150 K151 ; R14["isPvp"] := false
	289	[202]	SETTABLE 	R14 K152 K151 ; R14["allPlayersCommitted"] := false
	290	[202]	SETTABLE 	R14 K153 K139 ; R14["pvpType"] := 1.000000
	291	[202]	SETTABLE 	R14 K155 K156 ; R14["CurrMapVoteId"] := nil
	292	[202]	SETTABLE 	R14 K157 K151 ; R14["MapVoteInProgress"] := false
	293	[204]	NEWTABLE 	R15 0 0 ; R15 := {}
	294	[205]	NEWTABLE 	R16 0 0 ; R16 := {}
	295	[206]	NEWTABLE 	R17 0 0 ; R17 := {}
	296	[207]	NEWTABLE 	R18 0 0 ; R18 := {}
	297	[208]	NEWTABLE 	R19 0 0 ; R19 := {}
	298	[209]	NEWTABLE 	R20 0 0 ; R20 := {}
	299	[211]	OP_LOADBOOL	R21 0 0 ; R21 := false
	300	[213]	LOADK    	R22 K48 ; R22 := ""
	301	[215]	NEWTABLE 	R23 0 3 ; R23 := {}
	302	[215]	SETTABLE 	R23 K158 K139 ; R23["QUICK_PREVIEW"] := 1.000000
	303	[215]	SETTABLE 	R23 K159 K141 ; R23["DETAILED_PREVIEW"] := 2.000000
	304	[215]	SETTABLE 	R23 K160 K143 ; R23["ACTUAL_EOM"] := 3.000000
	305	[217]	OP_LOADBOOL	R24 0 0 ; R24 := false
	306	[219]	NEWTABLE 	R25 0 0 ; R25 := {}
	307	[221]	OP_LOADBOOL	R26 0 0 ; R26 := false
	308	[222]	OP_LOADBOOL	R27 0 0 ; R27 := false
	309	[224]	LOADK    	R28 := 0.000000
	310	[225]	OP_LOADBOOL	R29 0 0 ; R29 := false
	311	[226]	OP_LOADBOOL	R30 0 0 ; R30 := false
	312	[227]	OP_LOADBOOL	R31 0 0 ; R31 := false
	313	[228]	OP_LOADBOOL	R32 0 0 ; R32 := false
	314	[230]	LOADNIL  	R33 R33 ; R33 := nil
	315	[231]	OP_LOADBOOL	R34 0 0 ; R34 := false
	316	[232]	OP_LOADBOOL	R35 0 0 ; R35 := false
	317	[233]	LOADNIL  	R36 R36 ; R36 := nil
	318	[234]	LOADK    	R37 K48 ; R37 := ""
	319	[235]	LOADK    	R38 := 0.000000
	320	[237]	LOADNIL  	R39 R39 ; R39 := nil
	321	[240]	NEWTABLE 	R40 0 0 ; R40 := {}
	322	[242]	OP_LOADBOOL	R41 0 0 ; R41 := false
	323	[243]	LOADNIL  	R42 R42 ; R42 := nil
	324	[244]	OP_LOADBOOL	R43 1 0 ; R43 := true
	325	[245]	LOADK    	R44 := 0.000000
	326	[246]	LOADK    	R45 K48 ; R45 := ""
	327	[247]	LOADNIL  	R46 R46 ; R46 := nil
	328	[248]	OP_LOADBOOL	R47 0 0 ; R47 := false
	329	[249]	LOADK    	R48 K48 ; R48 := ""
	330	[250]	LOADNIL  	R49 R49 ; R49 := nil
	331	[252]	LOADK    	R50 := 0.000000
	332	[254]	GETGLOBAL	R51 K14 ; R51 := 0x7ed0a956
	333	[254]	LOADK    	R52 K161 ; R52 := "/Lotus/Sounds/Lotus/TransmissionSets/Gamemodes/SpecialMissions/HardModeTransmissions"
	334	[254]	CALL     	R51 2 2 ; R51 := R51(R52)
	335	[256]	NEWTABLE 	R52 0 6 ; R52 := {}
	336	[258]	SETTABLE 	R52 K162 K127 ; R52["ALL"] := 0.000000
	337	[259]	SETTABLE 	R52 K163 K139 ; R52["MODS"] := 1.000000
	338	[260]	SETTABLE 	R52 K164 K141 ; R52["AVIONICS"] := 2.000000
	339	[261]	SETTABLE 	R52 K165 K143 ; R52["RELICS"] := 3.000000
	340	[262]	SETTABLE 	R52 K166 K145 ; R52["RESOURCES"] := 4.000000
	341	[263]	SETTABLE 	R52 K167 K168 ; R52["MISC"] := 5.000000
	342	[266]	NEWTABLE 	R53 5 0 ; R53 := {}
	343	[267]	NEWTABLE 	R54 0 2 ; R54 := {}
	344	[268]	GETGLOBAL	R55 K170 ; R55 := gRecipeItemType
	345	[268]	SETTABLE 	R54 K169 R55 ; R54["Type"] := R55
	346	[268]	SETTABLE 	R54 K171 K145 ; R54["Priority"] := 4.000000
	347	[268]	NEWTABLE 	R55 0 2 ; R55 := {}
	348	[269]	GETGLOBAL	R56 K172 ; R56 := gFusionBundleType
	349	[269]	SETTABLE 	R55 K169 R56 ; R55["Type"] := R56
	350	[269]	SETTABLE 	R55 K171 K173 ; R55["Priority"] := 10.000000
	351	[269]	NEWTABLE 	R56 0 2 ; R56 := {}
	352	[270]	GETTABLE 	R57 R12 K13 ; R57 := R12["Enhancement"]
	353	[270]	SETTABLE 	R56 K169 R57 ; R56["Type"] := R57
	354	[270]	SETTABLE 	R56 K171 K168 ; R56["Priority"] := 5.000000
	355	[270]	NEWTABLE 	R57 0 2 ; R57 := {}
	356	[271]	GETTABLE 	R58 R12 K36 ; R58 := R12["RequiemUltimatum"]
	357	[271]	SETTABLE 	R57 K169 R58 ; R57["Type"] := R58
	358	[271]	SETTABLE 	R57 K171 K174 ; R57["Priority"] := 6.000000
	359	[271]	NEWTABLE 	R58 0 2 ; R58 := {}
	360	[272]	GETGLOBAL	R59 K175 ; R59 := gLotusBoosterUpgradeType
	361	[272]	SETTABLE 	R58 K169 R59 ; R58["Type"] := R59
	362	[272]	SETTABLE 	R58 K171 K176 ; R58["Priority"] := 7.000000
	363	[273]	SETLIST  	R53 5 1 ; R53[(1-1)*FPF+i] := R(53+i), 1 <= i <= 5
	364	[287]	CLOSURE  	R54 0 ; R54 := closure(Function #1)
	365	[308]	CLOSURE  	R55 1 ; R55 := closure(Function #2)
	366	[308]	MOVE     	R0 R2 ; R0 := R2
	367	[323]	CLOSURE  	R56 2 ; R56 := closure(Function #3)
	368	[335]	CLOSURE  	R57 3 ; R57 := closure(Function #4)
	369	[335]	MOVE     	R0 R56 ; R0 := R56
	370	[335]	MOVE     	R0 R19 ; R0 := R19
	371	[335]	MOVE     	R0 R20 ; R0 := R20
	372	[348]	CLOSURE  	R58 4 ; R58 := closure(Function #5)
	373	[348]	MOVE     	R0 R0 ; R0 := R0
	374	[348]	MOVE     	R0 R20 ; R0 := R20
	375	[348]	MOVE     	R0 R19 ; R0 := R19
	376	[358]	CLOSURE  	R59 5 ; R59 := closure(Function #6)
	377	[362]	CLOSURE  	R60 6 ; R60 := closure(Function #7)
	378	[366]	CLOSURE  	R61 7 ; R61 := closure(Function #8)
	379	[366]	MOVE     	R0 R23 ; R0 := R23
	380	[370]	CLOSURE  	R62 8 ; R62 := closure(Function #9)
	381	[370]	MOVE     	R0 R34 ; R0 := R34
	382	[370]	MOVE     	R0 R61 ; R0 := R61
	383	[374]	CLOSURE  	R63 9 ; R63 := closure(Function #10)
	384	[374]	MOVE     	R0 R34 ; R0 := R34
	385	[374]	MOVE     	R0 R61 ; R0 := R61
	386	[378]	CLOSURE  	R64 10 ; R64 := closure(Function #11)
	387	[378]	MOVE     	R0 R35 ; R0 := R35
	388	[378]	MOVE     	R0 R61 ; R0 := R61
	389	[398]	CLOSURE  	R65 11 ; R65 := closure(Function #12)
	390	[398]	MOVE     	R0 R38 ; R0 := R38
	391	[398]	MOVE     	R0 R61 ; R0 := R61
	392	[405]	CLOSURE  	R66 12 ; R66 := closure(Function #13)
	393	[405]	MOVE     	R0 R2 ; R0 := R2
	394	[405]	MOVE     	R0 R65 ; R0 := R65
	395	[585]	CLOSURE  	R67 13 ; R67 := closure(Function #14)
	396	[585]	MOVE     	R0 R0 ; R0 := R0
	397	[585]	MOVE     	R0 R61 ; R0 := R61
	398	[585]	MOVE     	R0 R59 ; R0 := R59
	399	[585]	MOVE     	R0 R38 ; R0 := R38
	400	[585]	MOVE     	R0 R65 ; R0 := R65
	401	[589]	CLOSURE  	R68 14 ; R68 := closure(Function #15)
	402	[589]	MOVE     	R0 R67 ; R0 := R67
	403	[597]	CLOSURE  	R69 15 ; R69 := closure(Function #16)
	404	[619]	CLOSURE  	R70 16 ; R70 := closure(Function #17)
	405	[619]	MOVE     	R0 R29 ; R0 := R29
	406	[648]	CLOSURE  	R71 17 ; R71 := closure(Function #18)
	407	[648]	MOVE     	R0 R69 ; R0 := R69
	408	[648]	MOVE     	R0 R41 ; R0 := R41
	409	[648]	MOVE     	R0 R23 ; R0 := R23
	410	[648]	MOVE     	R0 R70 ; R0 := R70
	411	[661]	CLOSURE  	R72 18 ; R72 := closure(Function #19)
	412	[661]	MOVE     	R0 R23 ; R0 := R23
	413	[661]	MOVE     	R0 R27 ; R0 := R27
	414	[665]	CLOSURE  	R73 19 ; R73 := closure(Function #20)
	415	[665]	MOVE     	R0 R72 ; R0 := R72
	416	[663]	SETGLOBAL	R73 K177 ; DisablePause := R73
	417	[764]	CLOSURE  	R73 20 ; R73 := closure(Function #21)
	418	[764]	MOVE     	R0 R2 ; R0 := R2
	419	[764]	MOVE     	R0 R29 ; R0 := R29
	420	[764]	MOVE     	R0 R23 ; R0 := R23
	421	[764]	MOVE     	R0 R34 ; R0 := R34
	422	[764]	MOVE     	R0 R35 ; R0 := R35
	423	[764]	MOVE     	R0 R69 ; R0 := R69
	424	[764]	MOVE     	R0 R1 ; R0 := R1
	425	[764]	MOVE     	R0 R27 ; R0 := R27
	426	[764]	MOVE     	R0 R21 ; R0 := R21
	427	[764]	MOVE     	R0 R0 ; R0 := R0
	428	[764]	MOVE     	R0 R26 ; R0 := R26
	429	[667]	SETGLOBAL	R73 K178 ; Shutdown := R73
	430	[768]	CLOSURE  	R73 21 ; R73 := closure(Function #22)
	431	[772]	CLOSURE  	R74 22 ; R74 := closure(Function #23)
	432	[777]	CLOSURE  	R75 23 ; R75 := closure(Function #24)
	433	[777]	MOVE     	R0 R74 ; R0 := R74
	434	[797]	CLOSURE  	R76 24 ; R76 := closure(Function #25)
	435	[804]	CLOSURE  	R77 25 ; R77 := closure(Function #26)
	436	[804]	MOVE     	R0 R55 ; R0 := R55
	437	[804]	MOVE     	R0 R14 ; R0 := R14
	438	[804]	MOVE     	R0 R10 ; R0 := R10
	439	[817]	CLOSURE  	R78 26 ; R78 := closure(Function #27)
	440	[817]	MOVE     	R0 R12 ; R0 := R12
	441	[867]	CLOSURE  	R79 27 ; R79 := closure(Function #28)
	442	[867]	MOVE     	R0 R2 ; R0 := R2
	443	[867]	MOVE     	R0 R73 ; R0 := R73
	444	[875]	CLOSURE  	R80 28 ; R80 := closure(Function #29)
	445	[875]	MOVE     	R0 R79 ; R0 := R79
	446	[888]	CLOSURE  	R81 29 ; R81 := closure(Function #30)
	447	[888]	MOVE     	R0 R80 ; R0 := R80
	448	[888]	MOVE     	R0 R79 ; R0 := R79
	449	[888]	MOVE     	R0 R44 ; R0 := R44
	450	[948]	CLOSURE  	R82 30 ; R82 := closure(Function #31)
	451	[948]	MOVE     	R0 R33 ; R0 := R33
	452	[948]	MOVE     	R0 R81 ; R0 := R81
	453	[1010]	CLOSURE  	R83 31 ; R83 := closure(Function #32)
	454	[1010]	MOVE     	R0 R62 ; R0 := R62
	455	[1010]	MOVE     	R0 R63 ; R0 := R63
	456	[1010]	MOVE     	R0 R64 ; R0 := R64
	457	[1010]	MOVE     	R0 R68 ; R0 := R68
	458	[1010]	MOVE     	R0 R45 ; R0 := R45
	459	[1010]	MOVE     	R0 R36 ; R0 := R36
	460	[1010]	MOVE     	R0 R0 ; R0 := R0
	461	[1010]	MOVE     	R0 R33 ; R0 := R33
	462	[1010]	MOVE     	R0 R43 ; R0 := R43
	463	[1010]	MOVE     	R0 R61 ; R0 := R61
	464	[1018]	CLOSURE  	R84 32 ; R84 := closure(Function #33)
	465	[1018]	MOVE     	R0 R67 ; R0 := R67
	466	[1018]	MOVE     	R0 R33 ; R0 := R33
	467	[1018]	MOVE     	R0 R83 ; R0 := R83
	468	[1012]	SETGLOBAL	R84 K179 ; onViewportSizeChanged := R84
	469	[1143]	CLOSURE  	R84 33 ; R84 := closure(Function #34)
	470	[1143]	MOVE     	R0 R3 ; R0 := R3
	471	[1143]	MOVE     	R0 R42 ; R0 := R42
	472	[1143]	MOVE     	R0 R7 ; R0 := R7
	473	[1143]	MOVE     	R0 R60 ; R0 := R60
	474	[1143]	MOVE     	R0 R33 ; R0 := R33
	475	[1143]	MOVE     	R0 R43 ; R0 := R43
	476	[1143]	MOVE     	R0 R79 ; R0 := R79
	477	[1143]	MOVE     	R0 R46 ; R0 := R46
	478	[1143]	MOVE     	R0 R83 ; R0 := R83
	479	[1143]	MOVE     	R0 R0 ; R0 := R0
	480	[1143]	MOVE     	R0 R61 ; R0 := R61
	481	[1150]	CLOSURE  	R85 34 ; R85 := closure(Function #35)
	482	[1145]	SETGLOBAL	R85 K180 ; HideArrowFill := R85
	483	[1158]	CLOSURE  	R85 35 ; R85 := closure(Function #36)
	484	[1152]	SETGLOBAL	R85 K181 ; ShowArrowFill := R85
	485	[1185]	CLOSURE  	R85 36 ; R85 := closure(Function #37)
	486	[1193]	CLOSURE  	R86 37 ; R86 := closure(Function #38)
	487	[1219]	CLOSURE  	R87 38 ; R87 := closure(Function #39)
	488	[1219]	MOVE     	R0 R23 ; R0 := R23
	489	[1219]	MOVE     	R0 R86 ; R0 := R86
	490	[1219]	MOVE     	R0 R2 ; R0 := R2
	491	[1230]	CLOSURE  	R88 39 ; R88 := closure(Function #40)
	492	[1230]	MOVE     	R0 R85 ; R0 := R85
	493	[1230]	MOVE     	R0 R87 ; R0 := R87
	494	[1221]	SETGLOBAL	R88 K182 ; TransitionOut := R88
	495	[1260]	CLOSURE  	R88 40 ; R88 := closure(Function #41)
	496	[1260]	MOVE     	R0 R2 ; R0 := R2
	497	[1260]	MOVE     	R0 R87 ; R0 := R87
	498	[1260]	MOVE     	R0 R23 ; R0 := R23
	499	[1260]	MOVE     	R0 R0 ; R0 := R0
	500	[1265]	CLOSURE  	R89 41 ; R89 := closure(Function #42)
	501	[1265]	MOVE     	R0 R21 ; R0 := R21
	502	[1265]	MOVE     	R0 R88 ; R0 := R88
	503	[1273]	CLOSURE  	R90 42 ; R90 := closure(Function #43)
	504	[1282]	CLOSURE  	R91 43 ; R91 := closure(Function #44)
	505	[1282]	MOVE     	R0 R55 ; R0 := R55
	506	[1291]	CLOSURE  	R92 44 ; R92 := closure(Function #45)
	507	[1291]	MOVE     	R0 R55 ; R0 := R55
	508	[1304]	CLOSURE  	R93 45 ; R93 := closure(Function #46)
	509	[1304]	MOVE     	R0 R2 ; R0 := R2
	510	[1304]	MOVE     	R0 R91 ; R0 := R91
	511	[1304]	MOVE     	R0 R92 ; R0 := R92
	512	[1304]	MOVE     	R0 R23 ; R0 := R23
	513	[1311]	CLOSURE  	R94 46 ; R94 := closure(Function #47)
	514	[1311]	MOVE     	R0 R93 ; R0 := R93
	515	[1311]	MOVE     	R0 R88 ; R0 := R88
	516	[1306]	SETGLOBAL	R94 K183 ; ExitScreen := R94
	517	[1325]	CLOSURE  	R94 47 ; R94 := closure(Function #48)
	518	[1418]	CLOSURE  	R95 48 ; R95 := closure(Function #49)
	519	[1418]	MOVE     	R0 R29 ; R0 := R29
	520	[1418]	MOVE     	R0 R67 ; R0 := R67
	521	[1418]	MOVE     	R0 R71 ; R0 := R71
	522	[1418]	MOVE     	R0 R31 ; R0 := R31
	523	[1418]	MOVE     	R0 R2 ; R0 := R2
	524	[1418]	MOVE     	R0 R61 ; R0 := R61
	525	[1418]	MOVE     	R0 R34 ; R0 := R34
	526	[1418]	MOVE     	R0 R94 ; R0 := R94
	527	[1418]	MOVE     	R0 R84 ; R0 := R84
	528	[1418]	MOVE     	R0 R95 ; R0 := R95
	529	[1418]	MOVE     	R0 R22 ; R0 := R22
	530	[1418]	MOVE     	R0 R0 ; R0 := R0
	531	[1418]	MOVE     	R0 R55 ; R0 := R55
	532	[1418]	MOVE     	R0 R89 ; R0 := R89
	533	[1418]	MOVE     	R0 R23 ; R0 := R23
	534	[1418]	MOVE     	R0 R91 ; R0 := R91
	535	[1418]	MOVE     	R0 R92 ; R0 := R92
	536	[1418]	MOVE     	R0 R73 ; R0 := R73
	537	[1440]	CLOSURE  	R96 49 ; R96 := closure(Function #50)
	538	[1440]	MOVE     	R0 R2 ; R0 := R2
	539	[1453]	CLOSURE  	R97 50 ; R97 := closure(Function #51)
	540	[1453]	MOVE     	R0 R96 ; R0 := R96
	541	[1457]	CLOSURE  	R98 51 ; R98 := closure(Function #52)
	542	[1457]	MOVE     	R0 R55 ; R0 := R55
	543	[1461]	CLOSURE  	R99 52 ; R99 := closure(Function #53)
	544	[1461]	MOVE     	R0 R91 ; R0 := R91
	545	[1465]	CLOSURE  	R100 53 ; R100 := closure(Function #54)
	546	[1465]	MOVE     	R0 R55 ; R0 := R55
	547	[1469]	CLOSURE  	R101 54 ; R101 := closure(Function #55)
	548	[1469]	MOVE     	R0 R2 ; R0 := R2
	549	[1469]	MOVE     	R0 R55 ; R0 := R55
	550	[1484]	CLOSURE  	R102 55 ; R102 := closure(Function #56)
	551	[1484]	MOVE     	R0 R101 ; R0 := R101
	552	[1484]	MOVE     	R0 R45 ; R0 := R45
	553	[1541]	CLOSURE  	R103 56 ; R103 := closure(Function #57)
	554	[1541]	MOVE     	R0 R37 ; R0 := R37
	555	[1541]	MOVE     	R0 R14 ; R0 := R14
	556	[1541]	MOVE     	R0 R74 ; R0 := R74
	557	[1541]	MOVE     	R0 R75 ; R0 := R75
	558	[1541]	MOVE     	R0 R55 ; R0 := R55
	559	[1541]	MOVE     	R0 R100 ; R0 := R100
	560	[1541]	MOVE     	R0 R101 ; R0 := R101
	561	[1541]	MOVE     	R0 R0 ; R0 := R0
	562	[1603]	CLOSURE  	R104 57 ; R104 := closure(Function #58)
	563	[1603]	MOVE     	R0 R14 ; R0 := R14
	564	[1603]	MOVE     	R0 R99 ; R0 := R99
	565	[1603]	MOVE     	R0 R90 ; R0 := R90
	566	[1603]	MOVE     	R0 R98 ; R0 := R98
	567	[1603]	MOVE     	R0 R0 ; R0 := R0
	568	[1609]	CLOSURE  	R105 58 ; R105 := closure(Function #59)
	569	[1687]	CLOSURE  	R106 59 ; R106 := closure(Function #60)
	570	[1687]	MOVE     	R0 R76 ; R0 := R76
	571	[1687]	MOVE     	R0 R2 ; R0 := R2
	572	[1687]	MOVE     	R0 R105 ; R0 := R105
	573	[1694]	CLOSURE  	R107 60 ; R107 := closure(Function #61)
	574	[1689]	SETGLOBAL	R107 K184 ; OnOnslaughtBackgroundReady := R107
	575	[1701]	CLOSURE  	R107 61 ; R107 := closure(Function #62)
	576	[1701]	MOVE     	R0 R0 ; R0 := R0
	577	[1696]	SETGLOBAL	R107 K185 ; OnOnslaughtTransmissionReady := R107
	578	[1708]	CLOSURE  	R107 62 ; R107 := closure(Function #63)
	579	[1708]	MOVE     	R0 R0 ; R0 := R0
	580	[1703]	SETGLOBAL	R107 K186 ; OnOnslaughtMusicReady := R107
	581	[1803]	CLOSURE  	R107 63 ; R107 := closure(Function #64)
	582	[1803]	MOVE     	R0 R2 ; R0 := R2
	583	[1803]	MOVE     	R0 R102 ; R0 := R102
	584	[1803]	MOVE     	R0 R0 ; R0 := R0
	585	[1803]	MOVE     	R0 R105 ; R0 := R105
	586	[1859]	CLOSURE  	R108 64 ; R108 := closure(Function #65)
	587	[1859]	MOVE     	R0 R2 ; R0 := R2
	588	[1859]	MOVE     	R0 R23 ; R0 := R23
	589	[1859]	MOVE     	R0 R55 ; R0 := R55
	590	[1859]	MOVE     	R0 R0 ; R0 := R0
	591	[1940]	CLOSURE  	R109 65 ; R109 := closure(Function #66)
	592	[1940]	MOVE     	R0 R100 ; R0 := R100
	593	[1940]	MOVE     	R0 R107 ; R0 := R107
	594	[1940]	MOVE     	R0 R108 ; R0 := R108
	595	[1940]	MOVE     	R0 R2 ; R0 := R2
	596	[1940]	MOVE     	R0 R105 ; R0 := R105
	597	[1951]	CLOSURE  	R110 66 ; R110 := closure(Function #67)
	598	[1951]	MOVE     	R0 R106 ; R0 := R106
	599	[1951]	MOVE     	R0 R109 ; R0 := R109
	600	[1960]	CLOSURE  	R111 67 ; R111 := closure(Function #68)
	601	[1990]	CLOSURE  	R112 68 ; R112 := closure(Function #69)
	602	[1999]	CLOSURE  	R113 69 ; R113 := closure(Function #70)
	603	[1992]	SETGLOBAL	R113 K187 ; ZoomCam := R113
	604	[2045]	CLOSURE  	R113 70 ; R113 := closure(Function #71)
	605	[2001]	SETGLOBAL	R113 K188 ; PrepareCinematic := R113
	606	[2066]	CLOSURE  	R113 71 ; R113 := closure(Function #72)
	607	[2066]	MOVE     	R0 R2 ; R0 := R2
	608	[2066]	MOVE     	R0 R41 ; R0 := R41
	609	[2066]	MOVE     	R0 R85 ; R0 := R85
	610	[2077]	CLOSURE  	R114 72 ; R114 := closure(Function #73)
	611	[2077]	MOVE     	R0 R55 ; R0 := R55
	612	[2081]	CLOSURE  	R115 73 ; R115 := closure(Function #74)
	613	[2081]	MOVE     	R0 R55 ; R0 := R55
	614	[2102]	CLOSURE  	R116 74 ; R116 := closure(Function #75)
	615	[2102]	MOVE     	R0 R55 ; R0 := R55
	616	[2106]	CLOSURE  	R117 75 ; R117 := closure(Function #76)
	617	[2106]	MOVE     	R0 R55 ; R0 := R55
	618	[2110]	CLOSURE  	R118 76 ; R118 := closure(Function #77)
	619	[2110]	MOVE     	R0 R55 ; R0 := R55
	620	[2114]	CLOSURE  	R119 77 ; R119 := closure(Function #78)
	621	[2114]	MOVE     	R0 R55 ; R0 := R55
	622	[2118]	CLOSURE  	R120 78 ; R120 := closure(Function #79)
	623	[2118]	MOVE     	R0 R55 ; R0 := R55
	624	[2122]	CLOSURE  	R121 79 ; R121 := closure(Function #80)
	625	[2122]	MOVE     	R0 R55 ; R0 := R55
	626	[2246]	CLOSURE  	R122 80 ; R122 := closure(Function #81)
	627	[2246]	MOVE     	R0 R23 ; R0 := R23
	628	[2246]	MOVE     	R0 R51 ; R0 := R51
	629	[2246]	MOVE     	R0 R25 ; R0 := R25
	630	[2246]	MOVE     	R0 R9 ; R0 := R9
	631	[2246]	MOVE     	R0 R0 ; R0 := R0
	632	[2246]	MOVE     	R0 R100 ; R0 := R100
	633	[2246]	MOVE     	R0 R114 ; R0 := R114
	634	[2281]	CLOSURE  	R123 81 ; R123 := closure(Function #82)
	635	[2294]	CLOSURE  	R124 82 ; R124 := closure(Function #83)
	636	[2317]	CLOSURE  	R125 83 ; R125 := closure(Function #84)
	637	[2317]	MOVE     	R0 R55 ; R0 := R55
	638	[2317]	MOVE     	R0 R121 ; R0 := R121
	639	[2317]	MOVE     	R0 R100 ; R0 := R100
	640	[2375]	CLOSURE  	R126 84 ; R126 := closure(Function #85)
	641	[2375]	MOVE     	R0 R55 ; R0 := R55
	642	[2375]	MOVE     	R0 R121 ; R0 := R121
	643	[2375]	MOVE     	R0 R117 ; R0 := R117
	644	[2375]	MOVE     	R0 R116 ; R0 := R116
	645	[2375]	MOVE     	R0 R114 ; R0 := R114
	646	[2375]	MOVE     	R0 R115 ; R0 := R115
	647	[2375]	MOVE     	R0 R120 ; R0 := R120
	648	[2375]	MOVE     	R0 R100 ; R0 := R100
	649	[2375]	MOVE     	R0 R2 ; R0 := R2
	650	[2384]	CLOSURE  	R127 85 ; R127 := closure(Function #86)
	651	[2384]	MOVE     	R0 R2 ; R0 := R2
	652	[2384]	MOVE     	R0 R0 ; R0 := R0
	653	[2802]	CLOSURE  	R128 86 ; R128 := closure(Function #87)
	654	[2802]	MOVE     	R0 R2 ; R0 := R2
	655	[2802]	MOVE     	R0 R55 ; R0 := R55
	656	[2802]	MOVE     	R0 R79 ; R0 := R79
	657	[2802]	MOVE     	R0 R123 ; R0 := R123
	658	[2802]	MOVE     	R0 R0 ; R0 := R0
	659	[2802]	MOVE     	R0 R126 ; R0 := R126
	660	[2802]	MOVE     	R0 R125 ; R0 := R125
	661	[2802]	MOVE     	R0 R58 ; R0 := R58
	662	[2802]	MOVE     	R0 R124 ; R0 := R124
	663	[2802]	MOVE     	R0 R15 ; R0 := R15
	664	[2802]	MOVE     	R0 R17 ; R0 := R17
	665	[2802]	MOVE     	R0 R16 ; R0 := R16
	666	[2802]	MOVE     	R0 R66 ; R0 := R66
	667	[2802]	MOVE     	R0 R23 ; R0 := R23
	668	[2802]	MOVE     	R0 R127 ; R0 := R127
	669	[2802]	MOVE     	R0 R80 ; R0 := R80
	670	[2802]	MOVE     	R0 R44 ; R0 := R44
	671	[2802]	MOVE     	R0 R81 ; R0 := R81
	672	[2802]	MOVE     	R0 R84 ; R0 := R84
	673	[2806]	CLOSURE  	R129 87 ; R129 := closure(Function #88)
	674	[2806]	MOVE     	R0 R128 ; R0 := R128
	675	[2804]	SETGLOBAL	R129 K189 ; OnStatsReady := R129
	676	[2830]	CLOSURE  	R129 88 ; R129 := closure(Function #89)
	677	[2830]	MOVE     	R0 R2 ; R0 := R2
	678	[2847]	CLOSURE  	R130 89 ; R130 := closure(Function #90)
	679	[2847]	MOVE     	R0 R55 ; R0 := R55
	680	[2847]	MOVE     	R0 R23 ; R0 := R23
	681	[2847]	MOVE     	R0 R114 ; R0 := R114
	682	[2847]	MOVE     	R0 R5 ; R0 := R5
	683	[2847]	MOVE     	R0 R100 ; R0 := R100
	684	[2847]	MOVE     	R0 R92 ; R0 := R92
	685	[2878]	CLOSURE  	R131 90 ; R131 := closure(Function #91)
	686	[2878]	MOVE     	R0 R57 ; R0 := R57
	687	[2882]	CLOSURE  	R132 91 ; R132 := closure(Function #92)
	688	[2886]	CLOSURE  	R133 92 ; R133 := closure(Function #93)
	689	[3485]	CLOSURE  	R134 93 ; R134 := closure(Function #94)
	690	[3485]	MOVE     	R0 R23 ; R0 := R23
	691	[3485]	MOVE     	R0 R55 ; R0 := R55
	692	[3485]	MOVE     	R0 R0 ; R0 := R0
	693	[3485]	MOVE     	R0 R73 ; R0 := R73
	694	[3485]	MOVE     	R0 R97 ; R0 := R97
	695	[3485]	MOVE     	R0 R116 ; R0 := R116
	696	[3485]	MOVE     	R0 R14 ; R0 := R14
	697	[3485]	MOVE     	R0 R119 ; R0 := R119
	698	[3485]	MOVE     	R0 R13 ; R0 := R13
	699	[3485]	MOVE     	R0 R118 ; R0 := R118
	700	[3485]	MOVE     	R0 R114 ; R0 := R114
	701	[3485]	MOVE     	R0 R117 ; R0 := R117
	702	[3485]	MOVE     	R0 R120 ; R0 := R120
	703	[3485]	MOVE     	R0 R100 ; R0 := R100
	704	[3485]	MOVE     	R0 R121 ; R0 := R121
	705	[3485]	MOVE     	R0 R92 ; R0 := R92
	706	[3485]	MOVE     	R0 R2 ; R0 := R2
	707	[3485]	MOVE     	R0 R96 ; R0 := R96
	708	[3485]	MOVE     	R0 R76 ; R0 := R76
	709	[3485]	MOVE     	R0 R129 ; R0 := R129
	710	[3485]	MOVE     	R0 R74 ; R0 := R74
	711	[3485]	MOVE     	R0 R32 ; R0 := R32
	712	[3485]	MOVE     	R0 R133 ; R0 := R133
	713	[3500]	CLOSURE  	R135 94 ; R135 := closure(Function #95)
	714	[3500]	MOVE     	R0 R2 ; R0 := R2
	715	[3500]	MOVE     	R0 R0 ; R0 := R0
	716	[3508]	CLOSURE  	R136 95 ; R136 := closure(Function #96)
	717	[3508]	MOVE     	R0 R135 ; R0 := R135
	718	[3515]	CLOSURE  	R137 96 ; R137 := closure(Function #97)
	719	[3515]	MOVE     	R0 R0 ; R0 := R0
	720	[3541]	CLOSURE  	R138 97 ; R138 := closure(Function #98)
	721	[3646]	CLOSURE  	R139 98 ; R139 := closure(Function #99)
	722	[3646]	MOVE     	R0 R23 ; R0 := R23
	723	[3646]	MOVE     	R0 R137 ; R0 := R137
	724	[3646]	MOVE     	R0 R11 ; R0 := R11
	725	[3646]	MOVE     	R0 R138 ; R0 := R138
	726	[3646]	MOVE     	R0 R135 ; R0 := R135
	727	[3646]	MOVE     	R0 R136 ; R0 := R136
	728	[3646]	MOVE     	R0 R2 ; R0 := R2
	729	[3646]	MOVE     	R0 R0 ; R0 := R0
	730	[3954]	CLOSURE  	R140 99 ; R140 := closure(Function #100)
	731	[3954]	MOVE     	R0 R6 ; R0 := R6
	732	[3954]	MOVE     	R0 R111 ; R0 := R111
	733	[3954]	MOVE     	R0 R2 ; R0 := R2
	734	[3954]	MOVE     	R0 R23 ; R0 := R23
	735	[3954]	MOVE     	R0 R0 ; R0 := R0
	736	[3954]	MOVE     	R0 R11 ; R0 := R11
	737	[3954]	MOVE     	R0 R138 ; R0 := R138
	738	[3954]	MOVE     	R0 R135 ; R0 := R135
	739	[3954]	MOVE     	R0 R136 ; R0 := R136
	740	[4076]	CLOSURE  	R141 100 ; R141 := closure(Function #101)
	741	[4076]	MOVE     	R0 R0 ; R0 := R0
	742	[4076]	MOVE     	R0 R11 ; R0 := R11
	743	[4076]	MOVE     	R0 R138 ; R0 := R138
	744	[4076]	MOVE     	R0 R135 ; R0 := R135
	745	[4076]	MOVE     	R0 R2 ; R0 := R2
	746	[4076]	MOVE     	R0 R136 ; R0 := R136
	747	[4109]	CLOSURE  	R142 101 ; R142 := closure(Function #102)
	748	[4109]	MOVE     	R0 R11 ; R0 := R11
	749	[4109]	MOVE     	R0 R138 ; R0 := R138
	750	[4109]	MOVE     	R0 R0 ; R0 := R0
	751	[4124]	CLOSURE  	R143 102 ; R143 := closure(Function #103)
	752	[4124]	MOVE     	R0 R11 ; R0 := R11
	753	[4124]	MOVE     	R0 R138 ; R0 := R138
	754	[4152]	CLOSURE  	R144 103 ; R144 := closure(Function #104)
	755	[4152]	MOVE     	R0 R11 ; R0 := R11
	756	[4152]	MOVE     	R0 R138 ; R0 := R138
	757	[4152]	MOVE     	R0 R33 ; R0 := R33
	758	[4163]	CLOSURE  	R145 104 ; R145 := closure(Function #105)
	759	[4163]	MOVE     	R0 R11 ; R0 := R11
	760	[4163]	MOVE     	R0 R138 ; R0 := R138
	761	[4177]	CLOSURE  	R146 105 ; R146 := closure(Function #106)
	762	[4183]	CLOSURE  	R147 106 ; R147 := closure(Function #107)
	763	[4183]	MOVE     	R0 R1 ; R0 := R1
	764	[4197]	CLOSURE  	R148 107 ; R148 := closure(Function #108)
	765	[4197]	MOVE     	R0 R1 ; R0 := R1
	766	[4197]	MOVE     	R0 R146 ; R0 := R146
	767	[4205]	CLOSURE  	R149 108 ; R149 := closure(Function #109)
	768	[4205]	MOVE     	R0 R1 ; R0 := R1
	769	[4205]	MOVE     	R0 R146 ; R0 := R146
	770	[4241]	CLOSURE  	R150 109 ; R150 := closure(Function #110)
	771	[4241]	MOVE     	R0 R145 ; R0 := R145
	772	[4241]	MOVE     	R0 R143 ; R0 := R143
	773	[4241]	MOVE     	R0 R144 ; R0 := R144
	774	[4241]	MOVE     	R0 R142 ; R0 := R142
	775	[4241]	MOVE     	R0 R141 ; R0 := R141
	776	[4241]	MOVE     	R0 R139 ; R0 := R139
	777	[4241]	MOVE     	R0 R140 ; R0 := R140
	778	[4241]	MOVE     	R0 R1 ; R0 := R1
	779	[4241]	MOVE     	R0 R146 ; R0 := R146
	780	[4281]	CLOSURE  	R151 110 ; R151 := closure(Function #111)
	781	[4281]	MOVE     	R0 R147 ; R0 := R147
	782	[4281]	MOVE     	R0 R148 ; R0 := R148
	783	[4281]	MOVE     	R0 R149 ; R0 := R149
	784	[4281]	MOVE     	R0 R150 ; R0 := R150
	785	[4281]	MOVE     	R0 R92 ; R0 := R92
	786	[4281]	MOVE     	R0 R2 ; R0 := R2
	787	[4281]	MOVE     	R0 R96 ; R0 := R96
	788	[4411]	CLOSURE  	R152 111 ; R152 := closure(Function #112)
	789	[4411]	MOVE     	R0 R39 ; R0 := R39
	790	[4411]	MOVE     	R0 R6 ; R0 := R6
	791	[4411]	MOVE     	R0 R12 ; R0 := R12
	792	[4411]	MOVE     	R0 R0 ; R0 := R0
	793	[4458]	CLOSURE  	R153 112 ; R153 := closure(Function #113)
	794	[4458]	MOVE     	R0 R2 ; R0 := R2
	795	[4458]	MOVE     	R0 R40 ; R0 := R40
	796	[4458]	MOVE     	R0 R0 ; R0 := R0
	797	[4487]	CLOSURE  	R154 113 ; R154 := closure(Function #114)
	798	[4487]	MOVE     	R0 R152 ; R0 := R152
	799	[4487]	MOVE     	R0 R90 ; R0 := R90
	800	[4487]	MOVE     	R0 R153 ; R0 := R153
	801	[4487]	MOVE     	R0 R0 ; R0 := R0
	802	[4487]	MOVE     	R0 R111 ; R0 := R111
	803	[4522]	CLOSURE  	R155 114 ; R155 := closure(Function #115)
	804	[4522]	MOVE     	R0 R2 ; R0 := R2
	805	[4522]	MOVE     	R0 R0 ; R0 := R0
	806	[4522]	MOVE     	R0 R40 ; R0 := R40
	807	[4760]	CLOSURE  	R156 115 ; R156 := closure(Function #116)
	808	[4760]	MOVE     	R0 R2 ; R0 := R2
	809	[4760]	MOVE     	R0 R96 ; R0 := R96
	810	[4760]	MOVE     	R0 R0 ; R0 := R0
	811	[4760]	MOVE     	R0 R14 ; R0 := R14
	812	[4760]	MOVE     	R0 R39 ; R0 := R39
	813	[4760]	MOVE     	R0 R76 ; R0 := R76
	814	[4760]	MOVE     	R0 R110 ; R0 := R110
	815	[4760]	MOVE     	R0 R100 ; R0 := R100
	816	[4760]	MOVE     	R0 R107 ; R0 := R107
	817	[4760]	MOVE     	R0 R108 ; R0 := R108
	818	[4760]	MOVE     	R0 R99 ; R0 := R99
	819	[4760]	MOVE     	R0 R154 ; R0 := R154
	820	[4760]	MOVE     	R0 R155 ; R0 := R155
	821	[4760]	MOVE     	R0 R55 ; R0 := R55
	822	[4760]	MOVE     	R0 R6 ; R0 := R6
	823	[4760]	MOVE     	R0 R98 ; R0 := R98
	824	[4760]	MOVE     	R0 R40 ; R0 := R40
	825	[4799]	CLOSURE  	R157 116 ; R157 := closure(Function #117)
	826	[4799]	MOVE     	R0 R15 ; R0 := R15
	827	[4799]	MOVE     	R0 R16 ; R0 := R16
	828	[4925]	CLOSURE  	R158 117 ; R158 := closure(Function #118)
	829	[4925]	MOVE     	R0 R96 ; R0 := R96
	830	[4925]	MOVE     	R0 R2 ; R0 := R2
	831	[4925]	MOVE     	R0 R14 ; R0 := R14
	832	[4925]	MOVE     	R0 R18 ; R0 := R18
	833	[4925]	MOVE     	R0 R15 ; R0 := R15
	834	[4925]	MOVE     	R0 R17 ; R0 := R17
	835	[4925]	MOVE     	R0 R130 ; R0 := R130
	836	[4925]	MOVE     	R0 R16 ; R0 := R16
	837	[4925]	MOVE     	R0 R23 ; R0 := R23
	838	[4925]	MOVE     	R0 R12 ; R0 := R12
	839	[4925]	MOVE     	R0 R126 ; R0 := R126
	840	[4925]	MOVE     	R0 R125 ; R0 := R125
	841	[4925]	MOVE     	R0 R61 ; R0 := R61
	842	[4925]	MOVE     	R0 R157 ; R0 := R157
	843	[4925]	MOVE     	R0 R58 ; R0 := R58
	844	[4925]	MOVE     	R0 R0 ; R0 := R0
	845	[4925]	MOVE     	R0 R54 ; R0 := R54
	846	[4945]	CLOSURE  	R159 118 ; R159 := closure(Function #119)
	847	[4949]	CLOSURE  	R160 119 ; R160 := closure(Function #120)
	848	[4949]	MOVE     	R0 R1 ; R0 := R1
	849	[4957]	CLOSURE  	R161 120 ; R161 := closure(Function #121)
	850	[4957]	MOVE     	R0 R1 ; R0 := R1
	851	[4957]	MOVE     	R0 R159 ; R0 := R159
	852	[4965]	CLOSURE  	R162 121 ; R162 := closure(Function #122)
	853	[4965]	MOVE     	R0 R1 ; R0 := R1
	854	[4965]	MOVE     	R0 R159 ; R0 := R159
	855	[5003]	CLOSURE  	R163 122 ; R163 := closure(Function #123)
	856	[5003]	MOVE     	R0 R1 ; R0 := R1
	857	[5003]	MOVE     	R0 R159 ; R0 := R159
	858	[5118]	CLOSURE  	R164 123 ; R164 := closure(Function #124)
	859	[5118]	MOVE     	R0 R0 ; R0 := R0
	860	[5118]	MOVE     	R0 R160 ; R0 := R160
	861	[5118]	MOVE     	R0 R161 ; R0 := R161
	862	[5118]	MOVE     	R0 R162 ; R0 := R162
	863	[5118]	MOVE     	R0 R163 ; R0 := R163
	864	[5118]	MOVE     	R0 R52 ; R0 := R52
	865	[5118]	MOVE     	R0 R1 ; R0 := R1
	866	[5139]	CLOSURE  	R165 124 ; R165 := closure(Function #125)
	867	[5139]	MOVE     	R0 R53 ; R0 := R53
	868	[5156]	CLOSURE  	R166 125 ; R166 := closure(Function #126)
	869	[5156]	MOVE     	R0 R12 ; R0 := R12
	870	[5156]	MOVE     	R0 R52 ; R0 := R52
	871	[5314]	CLOSURE  	R167 126 ; R167 := closure(Function #127)
	872	[5314]	MOVE     	R0 R55 ; R0 := R55
	873	[5314]	MOVE     	R0 R17 ; R0 := R17
	874	[5314]	MOVE     	R0 R78 ; R0 := R78
	875	[5314]	MOVE     	R0 R12 ; R0 := R12
	876	[5314]	MOVE     	R0 R112 ; R0 := R112
	877	[5314]	MOVE     	R0 R23 ; R0 := R23
	878	[5314]	MOVE     	R0 R15 ; R0 := R15
	879	[5314]	MOVE     	R0 R2 ; R0 := R2
	880	[5314]	MOVE     	R0 R4 ; R0 := R4
	881	[5314]	MOVE     	R0 R52 ; R0 := R52
	882	[5664]	CLOSURE  	R168 127 ; R168 := closure(Function #128)
	883	[5664]	MOVE     	R0 R20 ; R0 := R20
	884	[5664]	MOVE     	R0 R32 ; R0 := R32
	885	[5664]	MOVE     	R0 R131 ; R0 := R131
	886	[5664]	MOVE     	R0 R6 ; R0 := R6
	887	[5664]	MOVE     	R0 R58 ; R0 := R58
	888	[5664]	MOVE     	R0 R0 ; R0 := R0
	889	[5664]	MOVE     	R0 R78 ; R0 := R78
	890	[5664]	MOVE     	R0 R23 ; R0 := R23
	891	[5664]	MOVE     	R0 R2 ; R0 := R2
	892	[5664]	MOVE     	R0 R55 ; R0 := R55
	893	[5664]	MOVE     	R0 R17 ; R0 := R17
	894	[5664]	MOVE     	R0 R12 ; R0 := R12
	895	[5664]	MOVE     	R0 R13 ; R0 := R13
	896	[5664]	MOVE     	R0 R18 ; R0 := R18
	897	[5664]	MOVE     	R0 R16 ; R0 := R16
	898	[5664]	MOVE     	R0 R116 ; R0 := R116
	899	[5664]	MOVE     	R0 R39 ; R0 := R39
	900	[5664]	MOVE     	R0 R1 ; R0 := R1
	901	[5664]	MOVE     	R0 R15 ; R0 := R15
	902	[5664]	MOVE     	R0 R165 ; R0 := R165
	903	[5664]	MOVE     	R0 R166 ; R0 := R166
	904	[5664]	MOVE     	R0 R52 ; R0 := R52
	905	[5664]	MOVE     	R0 R167 ; R0 := R167
	906	[5709]	CLOSURE  	R169 128 ; R169 := closure(Function #129)
	907	[5709]	MOVE     	R0 R0 ; R0 := R0
	908	[5709]	MOVE     	R0 R61 ; R0 := R61
	909	[5709]	MOVE     	R0 R82 ; R0 := R82
	910	[5709]	MOVE     	R0 R28 ; R0 := R28
	911	[5709]	MOVE     	R0 R66 ; R0 := R66
	912	[5717]	CLOSURE  	R170 129 ; R170 := closure(Function #130)
	913	[5723]	CLOSURE  	R171 130 ; R171 := closure(Function #131)
	914	[5720]	SETGLOBAL	R171 K190 ; SetupInitializeParams := R171
	915	[5763]	CLOSURE  	R171 131 ; R171 := closure(Function #132)
	916	[5763]	MOVE     	R0 R29 ; R0 := R29
	917	[5763]	MOVE     	R0 R95 ; R0 := R95
	918	[5725]	SETGLOBAL	R171 K191 ; ReturnedToShip := R171
	919	[5776]	CLOSURE  	R171 132 ; R171 := closure(Function #133)
	920	[5776]	MOVE     	R0 R23 ; R0 := R23
	921	[5776]	MOVE     	R0 R26 ; R0 := R26
	922	[5776]	MOVE     	R0 R31 ; R0 := R31
	923	[5776]	MOVE     	R0 R102 ; R0 := R102
	924	[5776]	MOVE     	R0 R48 ; R0 := R48
	925	[5776]	MOVE     	R0 R71 ; R0 := R71
	926	[5776]	MOVE     	R0 R95 ; R0 := R95
	927	[5765]	SETGLOBAL	R171 K192 ; ProgressScreenOpened := R171
	928	[5788]	CLOSURE  	R171 133 ; R171 := closure(Function #134)
	929	[5788]	MOVE     	R0 R67 ; R0 := R67
	930	[5796]	CLOSURE  	R172 134 ; R172 := closure(Function #135)
	931	[5967]	CLOSURE  	R173 135 ; R173 := closure(Function #136)
	932	[5967]	MOVE     	R0 R13 ; R0 := R13
	933	[5967]	MOVE     	R0 R29 ; R0 := R29
	934	[5967]	MOVE     	R0 R25 ; R0 := R25
	935	[5967]	MOVE     	R0 R122 ; R0 := R122
	936	[5967]	MOVE     	R0 R14 ; R0 := R14
	937	[5967]	MOVE     	R0 R0 ; R0 := R0
	938	[5967]	MOVE     	R0 R100 ; R0 := R100
	939	[5967]	MOVE     	R0 R103 ; R0 := R103
	940	[5967]	MOVE     	R0 R73 ; R0 := R73
	941	[5967]	MOVE     	R0 R74 ; R0 := R74
	942	[5967]	MOVE     	R0 R61 ; R0 := R61
	943	[5967]	MOVE     	R0 R134 ; R0 := R134
	944	[5967]	MOVE     	R0 R129 ; R0 := R129
	945	[5967]	MOVE     	R0 R104 ; R0 := R104
	946	[5967]	MOVE     	R0 R151 ; R0 := R151
	947	[5967]	MOVE     	R0 R156 ; R0 := R156
	948	[5967]	MOVE     	R0 R158 ; R0 := R158
	949	[5967]	MOVE     	R0 R164 ; R0 := R164
	950	[5967]	MOVE     	R0 R168 ; R0 := R168
	951	[5967]	MOVE     	R0 R169 ; R0 := R169
	952	[5967]	MOVE     	R0 R128 ; R0 := R128
	953	[5967]	MOVE     	R0 R94 ; R0 := R94
	954	[5967]	MOVE     	R0 R172 ; R0 := R172
	955	[5967]	MOVE     	R0 R70 ; R0 := R70
	956	[5967]	MOVE     	R0 R71 ; R0 := R71
	957	[6359]	CLOSURE  	R174 136 ; R174 := closure(Function #137)
	958	[6359]	MOVE     	R0 R2 ; R0 := R2
	959	[6359]	MOVE     	R0 R29 ; R0 := R29
	960	[6359]	MOVE     	R0 R92 ; R0 := R92
	961	[6359]	MOVE     	R0 R39 ; R0 := R39
	962	[6359]	MOVE     	R0 R171 ; R0 := R171
	963	[6359]	MOVE     	R0 R66 ; R0 := R66
	964	[6359]	MOVE     	R0 R55 ; R0 := R55
	965	[6359]	MOVE     	R0 R14 ; R0 := R14
	966	[6359]	MOVE     	R0 R48 ; R0 := R48
	967	[6359]	MOVE     	R0 R102 ; R0 := R102
	968	[6359]	MOVE     	R0 R101 ; R0 := R101
	969	[6359]	MOVE     	R0 R22 ; R0 := R22
	970	[6359]	MOVE     	R0 R23 ; R0 := R23
	971	[6359]	MOVE     	R0 R72 ; R0 := R72
	972	[6359]	MOVE     	R0 R35 ; R0 := R35
	973	[6359]	MOVE     	R0 R77 ; R0 := R77
	974	[6359]	MOVE     	R0 R0 ; R0 := R0
	975	[6359]	MOVE     	R0 R100 ; R0 := R100
	976	[6359]	MOVE     	R0 R61 ; R0 := R61
	977	[6359]	MOVE     	R0 R170 ; R0 := R170
	978	[6359]	MOVE     	R0 R64 ; R0 := R64
	979	[6359]	MOVE     	R0 R173 ; R0 := R173
	980	[6359]	MOVE     	R0 R95 ; R0 := R95
	981	[6359]	MOVE     	R0 R94 ; R0 := R94
	982	[6359]	MOVE     	R0 R26 ; R0 := R26
	983	[6359]	MOVE     	R0 R84 ; R0 := R84
	984	[6359]	MOVE     	R0 R67 ; R0 := R67
	985	[5969]	SETGLOBAL	R174 K193 ; Initialize := R174
	986	[6369]	CLOSURE  	R174 137 ; R174 := closure(Function #138)
	987	[6384]	CLOSURE  	R175 138 ; R175 := closure(Function #139)
	988	[6371]	SETGLOBAL	R175 K194 ; AutoClose := R175
	989	[6387]	CLOSURE  	R175 139 ; R175 := closure(Function #140)
	990	[6406]	CLOSURE  	R176 140 ; R176 := closure(Function #141)
	991	[6695]	CLOSURE  	R177 141 ; R177 := closure(Function #142)
	992	[6695]	MOVE     	R0 R23 ; R0 := R23
	993	[6695]	MOVE     	R0 R72 ; R0 := R72
	994	[6695]	MOVE     	R0 R113 ; R0 := R113
	995	[6695]	MOVE     	R0 R50 ; R0 := R50
	996	[6695]	MOVE     	R0 R87 ; R0 := R87
	997	[6695]	MOVE     	R0 R30 ; R0 := R30
	998	[6695]	MOVE     	R0 R29 ; R0 := R29
	999	[6695]	MOVE     	R0 R26 ; R0 := R26
	1000	[6695]	MOVE     	R0 R47 ; R0 := R47
	1001	[6695]	MOVE     	R0 R14 ; R0 := R14
	1002	[6695]	MOVE     	R0 R102 ; R0 := R102
	1003	[6695]	MOVE     	R0 R2 ; R0 := R2
	1004	[6695]	MOVE     	R0 R174 ; R0 := R174
	1005	[6695]	MOVE     	R0 R93 ; R0 := R93
	1006	[6695]	MOVE     	R0 R55 ; R0 := R55
	1007	[6695]	MOVE     	R0 R13 ; R0 := R13
	1008	[6695]	MOVE     	R0 R132 ; R0 := R132
	1009	[6695]	MOVE     	R0 R0 ; R0 := R0
	1010	[6695]	MOVE     	R0 R133 ; R0 := R133
	1011	[6695]	MOVE     	R0 R176 ; R0 := R176
	1012	[6695]	MOVE     	R0 R92 ; R0 := R92
	1013	[6695]	MOVE     	R0 R95 ; R0 := R95
	1014	[6695]	MOVE     	R0 R129 ; R0 := R129
	1015	[6695]	MOVE     	R0 R4 ; R0 := R4
	1016	[6695]	MOVE     	R0 R175 ; R0 := R175
	1017	[6695]	MOVE     	R0 R135 ; R0 := R135
	1018	[6695]	MOVE     	R0 R66 ; R0 := R66
	1019	[6695]	MOVE     	R0 R49 ; R0 := R49
	1020	[6408]	SETGLOBAL	R177 K195 ; Update := R177
	1021	[6737]	CLOSURE  	R177 142 ; R177 := closure(Function #143)
	1022	[6737]	MOVE     	R0 R17 ; R0 := R17
	1023	[6779]	CLOSURE  	R178 143 ; R178 := closure(Function #144)
	1024	[6779]	MOVE     	R0 R2 ; R0 := R2
	1025	[7101]	CLOSURE  	R179 144 ; R179 := closure(Function #145)
	1026	[7101]	MOVE     	R0 R177 ; R0 := R177
	1027	[7101]	MOVE     	R0 R17 ; R0 := R17
	1028	[7101]	MOVE     	R0 R58 ; R0 := R58
	1029	[7101]	MOVE     	R0 R0 ; R0 := R0
	1030	[7101]	MOVE     	R0 R8 ; R0 := R8
	1031	[7101]	MOVE     	R0 R178 ; R0 := R178
	1032	[7101]	MOVE     	R0 R28 ; R0 := R28
	1033	[7101]	MOVE     	R0 R12 ; R0 := R12
	1034	[7101]	MOVE     	R0 R16 ; R0 := R16
	1035	[7101]	MOVE     	R0 R73 ; R0 := R73
	1036	[7101]	MOVE     	R0 R14 ; R0 := R14
	1037	[7101]	MOVE     	R0 R55 ; R0 := R55
	1038	[7101]	MOVE     	R0 R6 ; R0 := R6
	1039	[7101]	MOVE     	R0 R92 ; R0 := R92
	1040	[7101]	MOVE     	R0 R2 ; R0 := R2
	1041	[7101]	MOVE     	R0 R96 ; R0 := R96
	1042	[7101]	MOVE     	R0 R129 ; R0 := R129
	1043	[7101]	MOVE     	R0 R124 ; R0 := R124
	1044	[7101]	MOVE     	R0 R168 ; R0 := R168
	1045	[7101]	MOVE     	R0 R100 ; R0 := R100
	1046	[7101]	MOVE     	R0 R174 ; R0 := R174
	1047	[6781]	SETGLOBAL	R179 K196 ; DbUpdateComplete := R179
	1048	[7105]	CLOSURE  	R179 145 ; R179 := closure(Function #146)
	1049	[7103]	SETGLOBAL	R179 K197 ; MainMenu := R179
	1050	[7126]	CLOSURE  	R179 146 ; R179 := closure(Function #147)
	1051	[7126]	MOVE     	R0 R23 ; R0 := R23
	1052	[7107]	SETGLOBAL	R179 K198 ; onRawInputEvent := R179
	1053	[7132]	CLOSURE  	R179 147 ; R179 := closure(Function #148)
	1054	[7128]	SETGLOBAL	R179 K199 ; PvpUpdateMapVoteCount := R179
	1055	[7138]	CLOSURE  	R179 148 ; R179 := closure(Function #149)
	1056	[7134]	SETGLOBAL	R179 K200 ; PvpSetNextMapsInfo := R179
	1057	[7144]	CLOSURE  	R179 149 ; R179 := closure(Function #150)
	1058	[7140]	SETGLOBAL	R179 K201 ; PvpShowWinningMap := R179
	1059	[7153]	CLOSURE  	R179 150 ; R179 := closure(Function #151)
	1060	[7153]	MOVE     	R0 R14 ; R0 := R14
	1061	[7153]	MOVE     	R0 R87 ; R0 := R87
	1062	[7146]	SETGLOBAL	R179 K202 ; PvpAllPlayersCommitted := R179
	1063	[7171]	CLOSURE  	R179 151 ; R179 := closure(Function #152)
	1064	[7171]	MOVE     	R0 R61 ; R0 := R61
	1065	[7171]	MOVE     	R0 R34 ; R0 := R34
	1066	[7155]	SETGLOBAL	R179 K203 ; onKeyDown_MENU_MOUSE_Z := R179
	1067	[7181]	CLOSURE  	R179 152 ; R179 := closure(Function #153)
	1068	[7173]	SETGLOBAL	R179 K204 ; ExitPvpAtEOM := R179
	1069	[7185]	CLOSURE  	R179 153 ; R179 := closure(Function #154)
	1070	[7185]	MOVE     	R0 R0 ; R0 := R0
	1071	[7191]	CLOSURE  	R180 154 ; R180 := closure(Function #155)
	1072	[7191]	MOVE     	R0 R88 ; R0 := R88
	1073	[7187]	SETGLOBAL	R180 K205 ; OnDoneButton := R180
	1074	[7204]	CLOSURE  	R180 155 ; R180 := closure(Function #156)
	1075	[7204]	MOVE     	R0 R31 ; R0 := R31
	1076	[7204]	MOVE     	R0 R0 ; R0 := R0
	1077	[7204]	MOVE     	R0 R1 ; R0 := R1
	1078	[7204]	MOVE     	R0 R2 ; R0 := R2
	1079	[7204]	MOVE     	R0 R95 ; R0 := R95
	1080	[7208]	CLOSURE  	R181 156 ; R181 := closure(Function #157)
	1081	[7208]	MOVE     	R0 R180 ; R0 := R180
	1082	[7206]	SETGLOBAL	R181 K206 ; PreviewDiorama := R181
	1083	[7212]	CLOSURE  	R181 157 ; R181 := closure(Function #158)
	1084	[7212]	MOVE     	R0 R180 ; R0 := R180
	1085	[7210]	SETGLOBAL	R181 K207 ; EndDioramaPreview := R181
	1086	[7233]	CLOSURE  	R181 158 ; R181 := closure(Function #159)
	1087	[7233]	MOVE     	R0 R73 ; R0 := R73
	1088	[7233]	MOVE     	R0 R2 ; R0 := R2
	1089	[7233]	MOVE     	R0 R23 ; R0 := R23
	1090	[7233]	MOVE     	R0 R179 ; R0 := R179
	1091	[7233]	MOVE     	R0 R31 ; R0 := R31
	1092	[7233]	MOVE     	R0 R180 ; R0 := R180
	1093	[7233]	MOVE     	R0 R93 ; R0 := R93
	1094	[7233]	MOVE     	R0 R88 ; R0 := R88
	1095	[7214]	SETGLOBAL	R181 K208 ; onKeyDown_MENU_CANCEL := R181
	1096	[7241]	CLOSURE  	R181 159 ; R181 := closure(Function #160)
	1097	[7235]	SETGLOBAL	R181 K209 ; RewardItemSelected := R181
	1098	[7249]	CLOSURE  	R181 160 ; R181 := closure(Function #161)
	1099	[7243]	SETGLOBAL	R181 K210 ; RewardItemFocused := R181
	1100	[7257]	CLOSURE  	R181 161 ; R181 := closure(Function #162)
	1101	[7251]	SETGLOBAL	R181 K211 ; RewardItemUnfocused := R181
	1102	[7267]	CLOSURE  	R181 162 ; R181 := closure(Function #163)
	1103	[7267]	MOVE     	R0 R46 ; R0 := R46
	1104	[7267]	MOVE     	R0 R33 ; R0 := R33
	1105	[7273]	CLOSURE  	R182 163 ; R182 := closure(Function #164)
	1106	[7302]	CLOSURE  	R183 164 ; R183 := closure(Function #165)
	1107	[7302]	MOVE     	R0 R93 ; R0 := R93
	1108	[7302]	MOVE     	R0 R79 ; R0 := R79
	1109	[7302]	MOVE     	R0 R182 ; R0 := R182
	1110	[7275]	SETGLOBAL	R183 K212 ; SelectPlayer := R183
	1111	[7321]	CLOSURE  	R183 165 ; R183 := closure(Function #166)
	1112	[7321]	MOVE     	R0 R181 ; R0 := R181
	1113	[7321]	MOVE     	R0 R0 ; R0 := R0
	1114	[7304]	SETGLOBAL	R183 K213 ; RollOverPlayer := R183
	1115	[7328]	CLOSURE  	R183 166 ; R183 := closure(Function #167)
	1116	[7328]	MOVE     	R0 R181 ; R0 := R181
	1117	[7323]	SETGLOBAL	R183 K214 ; RollOutPlayer := R183
	1118	[7335]	CLOSURE  	R183 167 ; R183 := closure(Function #168)
	1119	[7335]	MOVE     	R0 R0 ; R0 := R0
	1120	[7330]	SETGLOBAL	R183 K215 ; onKeyUp_MENU_LTRIGGER2 := R183
	1121	[7342]	CLOSURE  	R183 168 ; R183 := closure(Function #169)
	1122	[7342]	MOVE     	R0 R0 ; R0 := R0
	1123	[7337]	SETGLOBAL	R183 K216 ; onKeyUp_MENU_RTRIGGER2 := R183
	1124	[7349]	CLOSURE  	R183 169 ; R183 := closure(Function #170)
	1125	[7349]	MOVE     	R0 R0 ; R0 := R0
	1126	[7344]	SETGLOBAL	R183 K217 ; onKeyDown_MENU_LTRIGGER2 := R183
	1127	[7356]	CLOSURE  	R183 170 ; R183 := closure(Function #171)
	1128	[7356]	MOVE     	R0 R0 ; R0 := R0
	1129	[7351]	SETGLOBAL	R183 K218 ; onKeyDown_MENU_RTRIGGER2 := R183
	1130	[7362]	CLOSURE  	R183 171 ; R183 := closure(Function #172)
	1131	[7358]	SETGLOBAL	R183 K219 ; CategoryFocused := R183
	1132	[7368]	CLOSURE  	R183 172 ; R183 := closure(Function #173)
	1133	[7364]	SETGLOBAL	R183 K220 ; CategoryUnfocused := R183
	1134	[7375]	CLOSURE  	R183 173 ; R183 := closure(Function #174)
	1135	[7375]	MOVE     	R0 R68 ; R0 := R68
	1136	[7370]	SETGLOBAL	R183 K221 ; CategoryPressed := R183
	1137	[7381]	CLOSURE  	R183 174 ; R183 := closure(Function #175)
	1138	[7377]	SETGLOBAL	R183 K222 ; AffinityFocused := R183
	1139	[7389]	CLOSURE  	R183 175 ; R183 := closure(Function #176)
	1140	[7383]	SETGLOBAL	R183 K223 ; AffinityUnfocused := R183
	1141	[7395]	CLOSURE  	R183 176 ; R183 := closure(Function #177)
	1142	[7391]	SETGLOBAL	R183 K224 ; AffinitySelected := R183
	1143	[7401]	CLOSURE  	R183 177 ; R183 := closure(Function #178)
	1144	[7401]	MOVE     	R0 R35 ; R0 := R35
	1145	[7401]	MOVE     	R0 R84 ; R0 := R84
	1146	[7401]	MOVE     	R0 R95 ; R0 := R95
	1147	[7397]	SETGLOBAL	R183 K225 ; ExpandPressed := R183
	1148	[7408]	CLOSURE  	R183 178 ; R183 := closure(Function #179)
	1149	[7408]	MOVE     	R0 R33 ; R0 := R33
	1150	[7403]	SETGLOBAL	R183 K226 ; ExpandFocused := R183
	1151	[7415]	CLOSURE  	R183 179 ; R183 := closure(Function #180)
	1152	[7415]	MOVE     	R0 R33 ; R0 := R33
	1153	[7410]	SETGLOBAL	R183 K227 ; ExpandUnfocused := R183
	1154	[7419]	CLOSURE  	R183 180 ; R183 := closure(Function #181)
	1155	[7417]	SETGLOBAL	R183 K228 ; SetCountdownMessage := R183
	1156	[7453]	CLOSURE  	R183 181 ; R183 := closure(Function #182)
	1157	[7453]	MOVE     	R0 R24 ; R0 := R24
	1158	[7453]	MOVE     	R0 R2 ; R0 := R2
	1159	[7453]	MOVE     	R0 R137 ; R0 := R137
	1160	[7453]	MOVE     	R0 R168 ; R0 := R168
	1161	[7461]	CLOSURE  	R184 182 ; R184 := closure(Function #183)
	1162	[7461]	MOVE     	R0 R30 ; R0 := R30
	1163	[7461]	MOVE     	R0 R95 ; R0 := R95
	1164	[7455]	SETGLOBAL	R184 K229 ; HaveClosedAccoladeVoting := R184
	1165	[7465]	CLOSURE  	R184 183 ; R184 := closure(Function #184)
	1166	[7465]	MOVE     	R0 R183 ; R0 := R183
	1167	[7463]	SETGLOBAL	R184 K230 ; IconCacheFlushed := R184
	1168	[7473]	CLOSURE  	R184 184 ; R184 := closure(Function #185)
	1169	[7473]	MOVE     	R0 R24 ; R0 := R24
	1170	[7473]	MOVE     	R0 R183 ; R0 := R183
	1171	[7467]	SETGLOBAL	R184 K231 ; CommonResourcesReady := R184
	1172	[7477]	CLOSURE  	R184 185 ; R184 := closure(Function #186)
	1173	[7475]	SETGLOBAL	R184 K232 ; OpenedFromPauseMenu := R184
	1174	[7481]	CLOSURE  	R184 186 ; R184 := closure(Function #187)
	1175	[7481]	MOVE     	R0 R87 ; R0 := R87
	1176	[7479]	SETGLOBAL	R184 K233 ; OnLevelStreaming := R184
	1177	[7485]	CLOSURE  	R184 187 ; R184 := closure(Function #188)
	1178	[7483]	SETGLOBAL	R184 K234 ; OnGamepadTransition := R184
	1179	[7494]	CLOSURE  	R184 188 ; R184 := closure(Function #189)
	1180	[7494]	MOVE     	R0 R84 ; R0 := R84
	1181	[7487]	SETGLOBAL	R184 K235 ; OnStyleChangedCallback := R184
	1182	[7498]	CLOSURE  	R184 189 ; R184 := closure(Function #190)
	1183	[7496]	SETGLOBAL	R184 K236 ; SupportsThemes := R184
	1184	[7509]	CLOSURE  	R184 190 ; R184 := closure(Function #191)
	1185	[7509]	MOVE     	R0 R2 ; R0 := R2
	1186	[7509]	MOVE     	R0 R83 ; R0 := R83
	1187	[7500]	SETGLOBAL	R184 K237 ; ShowEndOfMatch := R184
	1188	[7515]	CLOSURE  	R184 191 ; R184 := closure(Function #192)
	1189	[7511]	SETGLOBAL	R184 K238 ; ShowEndOfMatchTitle := R184
	1190	[7548]	CLOSURE  	R184 192 ; R184 := closure(Function #193)
	1191	[7548]	MOVE     	R0 R37 ; R0 := R37
	1192	[7548]	MOVE     	R0 R0 ; R0 := R0
	1193	[7517]	SETGLOBAL	R184 K239 ; UpdateMissionCompleteTitle := R184
	1194	[7558]	CLOSURE  	R184 193 ; R184 := closure(Function #194)
	1195	[7550]	SETGLOBAL	R184 K240 ; OnTextAnimFrameEnter := R184
	1196	[7564]	CLOSURE  	R184 194 ; R184 := closure(Function #195)
	1197	[7560]	SETGLOBAL	R184 K241 ; OnArrowEndsFrameEnter := R184
	1198	[7572]	CLOSURE  	R184 195 ; R184 := closure(Function #196)
	1199	[7566]	SETGLOBAL	R184 K242 ; OnExpandArrowFrameEnter := R184
	1200	[7580]	CLOSURE  	R184 196 ; R184 := closure(Function #197)
	1201	[7580]	MOVE     	R0 R92 ; R0 := R92
	1202	[7580]	MOVE     	R0 R2 ; R0 := R2
	1203	[7574]	SETGLOBAL	R184 K243 ; ForceHideEOM := R184
	1204	[7584]	CLOSURE  	R184 197 ; R184 := closure(Function #198)
	1205	[7582]	SETGLOBAL	R184 K244 ; IsEndOfMatch := R184
	1206	[7589]	CLOSURE  	R184 198 ; R184 := closure(Function #199)
	1207	[7589]	MOVE     	R0 R87 ; R0 := R87
	1208	[7586]	SETGLOBAL	R184 K245 ; OnUserChangedFunction := R184
	1209	[7593]	CLOSURE  	R184 199 ; R184 := closure(Function #200)
	1210	[7593]	MOVE     	R0 R29 ; R0 := R29
	1211	[7591]	SETGLOBAL	R184 K246 ; IsForceHidden := R184
	1212	[7593]	RETURN   	R0 1 ; return 


function #1 <?:277,287> (16 instructions, 64 bytes at 00000160F4BBAC20)
0 params, 4 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[278]	LOADK    	R0 := 0.000000
	2	[280]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	3	[280]	GETGLOBAL	R2 K1 ; R2 := mPlayerMissionInfo
	4	[280]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[280]	TEST     	R1 1 ; if R1 then PC := 15
	6	[280]	JMP      	15 ; PC := 15
	7	[281]	GETGLOBAL	R1 K1 ; R1 := mPlayerMissionInfo
	8	[281]	GETTABLE 	R0 R1 K2 ; R0 := R1["mMissionCompleteCreditBonus"]
	9	[283]	GETGLOBAL	R1 K3 ; R1 := 0x3d106989
	10	[283]	LOADK    	R2 K4 ; R2 := "GetMissionCompleteCreditBonus: "
	11	[283]	GETGLOBAL	R3 K1 ; R3 := mPlayerMissionInfo
	12	[283]	GETTABLE 	R3 R3 K2 ; R3 := R3["mMissionCompleteCreditBonus"]
	13	[283]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	14	[283]	CALL     	R1 2 1 ; R1(R2)
	15	[286]	RETURN   	R0 2 ; return R0 
	16	[287]	RETURN   	R0 1 ; return 

function #2 <?:289,308> (43 instructions, 172 bytes at 00000160F4BBAE50)
0 params, 2 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[290]	GETGLOBAL	R0 K0 ; R0 := mMission
	2	[290]	EQ       	1 R0 K1 ; if R0 == nil then PC := 6
	3	[290]	JMP      	6 ; PC := 6
	4	[291]	GETGLOBAL	R0 K0 ; R0 := mMission
	5	[291]	RETURN   	R0 2 ; return R0 
	6	[294]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[294]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xcdc34211]
	8	[294]	CALL     	R0 1 2 ; R0 := R0()
	9	[294]	TEST     	R0 0 ; if not R0 then PC := 23
	10	[294]	JMP      	23 ; PC := 23
	11	[295]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	12	[295]	GETGLOBAL	R1 K4 ; R1 := 0xbe190284
	13	[295]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[295]	TEST     	R0 1 ; if R0 then PC := 34
	15	[295]	JMP      	34 ; PC := 34
	16	[296]	GETGLOBAL	R0 K4 ; R0 := 0xbe190284
	17	[296]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xef893aec]
	18	[296]	CALL     	R0 2 2 ; R0 := R0(R1)
	19	[296]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x8f89d633]
	20	[296]	CALL     	R0 2 2 ; R0 := R0(R1)
	21	[296]	SETGLOBALHASH	R0 K0 ; mMission := R0
	22	[297]	JMP      	34 ; PC := 34
	23	[299]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	24	[299]	GETGLOBAL	R1 K7 ; R1 := 0x25d99d89
	25	[299]	CALL     	R0 2 2 ; R0 := R0(R1)
	26	[299]	TEST     	R0 1 ; if R0 then PC := 34
	27	[299]	JMP      	34 ; PC := 34
	28	[300]	GETGLOBAL	R0 K7 ; R0 := 0x25d99d89
	29	[300]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0xb1c6f9c6]
	30	[300]	CALL     	R0 2 2 ; R0 := R0(R1)
	31	[300]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x8f89d633]
	32	[300]	CALL     	R0 2 2 ; R0 := R0(R1)
	33	[300]	SETGLOBALHASH	R0 K0 ; mMission := R0
	34	[303]	GETGLOBAL	R0 K0 ; R0 := mMission
	35	[303]	EQ       	1 R0 K1 ; if R0 == nil then PC := 39
	36	[303]	JMP      	39 ; PC := 39
	37	[304]	GETGLOBAL	R0 K0 ; R0 := mMission
	38	[304]	RETURN   	R0 2 ; return R0 
	39	[307]	GETGLOBAL	R0 K9 ; R0 := 0x6c97a788
	40	[307]	GETTABLE 	R0 R0 K10 ; R0 := R0[0x6e0e9f85]
	41	[307]	TAILCALL 	R0 1 0 ; R0,... := R0()
	42	[307]	RETURN   	R0 0 ; return R0,... 
	43	[308]	RETURN   	R0 1 ; return 

function #3 <?:310,323> (26 instructions, 104 bytes at 00000160F4BBB120)
2 params, 10 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[311]	GETGLOBAL	R2 K0 ; R2 := 0xcfc01047
	2	[311]	MOVE     	R3 R0 ; R3 := R0
	3	[311]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	4	[311]	JMP      	23 ; PC := 23
	5	[312]	LEN      	R7 R5 ; R7 := # R5
	6	[312]	LT       	0 K1 R7 ; if 0.000000 >= R7 then PC := 23
	7	[312]	JMP      	23 ; PC := 23
	8	[313]	LEN      	R7 R1 ; R7 := # R1
	9	[313]	LT       	0 K1 R7 ; if 0.000000 >= R7 then PC := 14
	10	[313]	JMP      	14 ; PC := 14
	11	[314]	MOVE     	R7 R1 ; R7 := R1
	12	[314]	LOADK    	R8 K2 ; R8 := "\r"
	13	[314]	CONCAT   	R1 R7 R8 ; R1 := R7 .. R8
	14	[316]	LT       	0 K3 R6 ; if 1.000000 >= R6 then PC := 20
	15	[316]	JMP      	20 ; PC := 20
	16	[317]	MOVE     	R7 R5 ; R7 := R5
	17	[317]	LOADK    	R8 K4 ; R8 := " x"
	18	[317]	MOVE     	R9 R6 ; R9 := R6
	19	[317]	CONCAT   	R5 R7 R9 ; R5 := R7 .. R8 .. R9
	20	[319]	MOVE     	R7 R1 ; R7 := R1
	21	[319]	MOVE     	R8 R5 ; R8 := R5
	22	[319]	CONCAT   	R1 R7 R8 ; R1 := R7 .. R8
	23	[311]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 5; R4 := R5 end
	24	[320]	JMP      	5 ; PC := 5
	25	[322]	RETURN   	R1 2 ; return R1 
	26	[323]	RETURN   	R0 1 ; return 

function #4 <?:325,335> (25 instructions, 100 bytes at 00000160F4BBB310)
1 param, 5 slots, 3 upvalues, 0 locals, 2 constants, 0 functions
	1	[326]	EQ       	0 R0 K0 ; if R0 ~= nil then PC := 5
	2	[326]	JMP      	5 ; PC := 5
	3	[327]	LOADK    	R1 K1 ; R1 := ""
	4	[327]	RETURN   	R1 2 ; return R1 
	5	[330]	LOADK    	R1 K1 ; R1 := ""
	6	[331]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[331]	GETUPVAL 	R3 U1 ; R3 := U1
	8	[331]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	9	[331]	TEST     	R3 1 ; if R3 then PC := 12
	10	[331]	JMP      	12 ; PC := 12
	11	[331]	NEWTABLE 	R3 0 0 ; R3 := {}
	12	[331]	MOVE     	R4 R1 ; R4 := R1
	13	[331]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	14	[331]	MOVE     	R1 R2 ; R1 := R2
	15	[332]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[332]	GETUPVAL 	R3 U2 ; R3 := U2
	17	[332]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	18	[332]	TEST     	R3 1 ; if R3 then PC := 21
	19	[332]	JMP      	21 ; PC := 21
	20	[332]	NEWTABLE 	R3 0 0 ; R3 := {}
	21	[332]	MOVE     	R4 R1 ; R4 := R1
	22	[332]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[332]	MOVE     	R1 R2 ; R1 := R2
	24	[334]	RETURN   	R1 2 ; return R1 
	25	[335]	RETURN   	R0 1 ; return 

function #5 <?:337,348> (29 instructions, 116 bytes at 00000160F4BBB4D0)
5 params, 9 slots, 3 upvalues, 0 locals, 4 constants, 0 functions
	1	[338]	TEST     	R0 1 ; if R0 then PC := 4
	2	[338]	JMP      	4 ; PC := 4
	3	[338]	LOADK    	R0 := 0.000000
	4	[340]	EQ       	1 R2 K0 ; if R2 == nil then PC := 27
	5	[340]	JMP      	27 ; PC := 27
	6	[340]	LT       	0 K1 R1 ; if 0.000000 >= R1 then PC := 27
	7	[340]	JMP      	27 ; PC := 27
	8	[340]	EQ       	1 R3 K0 ; if R3 == nil then PC := 27
	9	[340]	JMP      	27 ; PC := 27
	10	[341]	GETUPVAL 	R5 U0 ; R5 := U0
	11	[341]	GETTABLE 	R5 R5 K2 ; R5 := R5[0x06d055f9]
	12	[341]	MOVE     	R6 R4 ; R6 := R4
	13	[341]	GETUPVAL 	R7 U1 ; R7 := U1
	14	[341]	GETUPVAL 	R8 U2 ; R8 := U2
	15	[341]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	16	[342]	GETTABLE 	R6 R5 R2 ; R6 := R5[R2]
	17	[342]	TEST     	R6 1 ; if R6 then PC := 20
	18	[342]	JMP      	20 ; PC := 20
	19	[342]	NEWTABLE 	R6 0 0 ; R6 := {}
	20	[343]	SETTABLE 	R5 R2 R6 ; R5[R2] := R6
	21	[344]	GETTABLE 	R7 R6 R3 ; R7 := R6[R3]
	22	[344]	TEST     	R7 1 ; if R7 then PC := 25
	23	[344]	JMP      	25 ; PC := 25
	24	[344]	LOADK    	R7 := 0.000000
	25	[344]	ADD      	R7 R7 K3 ; R7 := R7 + 1.000000
	26	[344]	SETTABLE 	R6 R3 R7 ; R6[R3] := R7
	27	[347]	ADD      	R7 R0 R1 ; R7 := R0 + R1
	28	[347]	RETURN   	R7 2 ; return R7 
	29	[348]	RETURN   	R0 1 ; return 

function #6 <?:350,358> (23 instructions, 92 bytes at 00000160F4BBB6D0)
4 params, 8 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[351]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[351]	MOVE     	R5 R0 ; R5 := R0
	3	[351]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[351]	TEST     	R4 1 ; if R4 then PC := 23
	5	[351]	JMP      	23 ; PC := 23
	6	[352]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x830eea67]
	7	[352]	GETGLOBAL	R6 K2 ; R6 := 0x6c97a788
	8	[352]	GETTABLE 	R6 R6 K3 ; R6 := R6["VISIBILITY_CENTER"]
	9	[352]	MOVE     	R7 R1 ; R7 := R1
	10	[352]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	11	[353]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x830eea67]
	12	[353]	GETGLOBAL	R6 K2 ; R6 := 0x6c97a788
	13	[353]	GETTABLE 	R6 R6 K4 ; R6 := R6["VISIBILITY_SIZE"]
	14	[353]	MOVE     	R7 R2 ; R7 := R2
	15	[353]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	16	[354]	TEST     	R3 1 ; if R3 then PC := 23
	17	[354]	JMP      	23 ; PC := 23
	18	[355]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x830eea67]
	19	[355]	GETGLOBAL	R6 K2 ; R6 := 0x6c97a788
	20	[355]	GETTABLE 	R6 R6 K5 ; R6 := R6["VISIBILITY_FADE_SIZE"]
	21	[355]	LOADK    	R7 K6 ; R7 := 0.010000
	22	[355]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	23	[358]	RETURN   	R0 1 ; return 

function #7 <?:360,362> (12 instructions, 48 bytes at 00000160F4BBB8C0)
1 param, 3 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[361]	NEWTABLE 	R1 0 3 ; R1 := {}
	2	[361]	GETTABLE 	R2 R0 K1 ; R2 := R0["red"]
	3	[361]	DIV      	R2 R2 K2 ; R2 := R2 / 255.000000
	4	[361]	SETTABLE 	R1 K0 R2 ; R1["r"] := R2
	5	[361]	GETTABLE 	R2 R0 K4 ; R2 := R0["green"]
	6	[361]	DIV      	R2 R2 K2 ; R2 := R2 / 255.000000
	7	[361]	SETTABLE 	R1 K3 R2 ; R1["g"] := R2
	8	[361]	GETTABLE 	R2 R0 K6 ; R2 := R0["blue"]
	9	[361]	DIV      	R2 R2 K2 ; R2 := R2 / 255.000000
	10	[361]	SETTABLE 	R1 K5 R2 ; R1["b"] := R2
	11	[361]	RETURN   	R1 2 ; return R1 
	12	[362]	RETURN   	R0 1 ; return 

function #8 <?:364,366> (10 instructions, 40 bytes at 00000160F4BBBA50)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[365]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[365]	GETTABLE 	R0 R0 K1 ; R0 := R0["eomScreenMode"]
	3	[365]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[365]	GETTABLE 	R1 R1 K2 ; R1 := R1["QUICK_PREVIEW"]
	5	[365]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 8
	6	[365]	JMP      	8 ; PC := 8
	7	[365]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 8
	8	[365]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[365]	RETURN   	R0 2 ; return R0 
	10	[366]	RETURN   	R0 1 ; return 

function #9 <?:368,370> (7 instructions, 28 bytes at 00000160F4BBBBE0)
0 params, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[369]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[369]	TEST     	R0 1 ; if R0 then PC := 6
	3	[369]	JMP      	6 ; PC := 6
	4	[369]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[369]	CALL     	R0 1 2 ; R0 := R0()
	6	[369]	RETURN   	R0 2 ; return R0 
	7	[370]	RETURN   	R0 1 ; return 

function #10 <?:372,374> (10 instructions, 40 bytes at 00000160F4BBBCD0)
0 params, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[373]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[373]	TEST     	R0 0 ; if not R0 then PC := 8
	3	[373]	JMP      	8 ; PC := 8
	4	[373]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[373]	CALL     	R0 1 2 ; R0 := R0()
	6	[373]	JMP      	9 ; PC := 9
	7	[373]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 8
	8	[373]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[373]	RETURN   	R0 2 ; return R0 
	10	[374]	RETURN   	R0 1 ; return 

function #11 <?:376,378> (7 instructions, 28 bytes at 00000160F4BBBDE0)
0 params, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[377]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[377]	TEST     	R0 1 ; if R0 then PC := 6
	3	[377]	JMP      	6 ; PC := 6
	4	[377]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[377]	CALL     	R0 1 2 ; R0 := R0()
	6	[377]	RETURN   	R0 2 ; return R0 
	7	[378]	RETURN   	R0 1 ; return 

function #12 <?:380,398> (86 instructions, 344 bytes at 00000160F4BBBED0)
0 params, 10 slots, 2 upvalues, 0 locals, 14 constants, 0 functions
	1	[381]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[381]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x91a24e4b]
	3	[381]	LOADK    	R2 K2 ; R2 := "ExpandableArea.Progression.Affinity.MissionTime.Label"
	4	[381]	LOADK    	R3 := 33.000000
	5	[381]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	6	[382]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[383]	LOADK    	R2 := 13.000000
	8	[384]	LOADK    	R3 := 10.000000
	9	[385]	GETUPVAL 	R4 U1 ; R4 := U1
	10	[385]	CALL     	R4 1 2 ; R4 := R4()
	11	[385]	TEST     	R4 0 ; if not R4 then PC := 25
	12	[385]	JMP      	25 ; PC := 25
	13	[386]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	14	[386]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0x091c120e]
	15	[386]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[386]	GETGLOBAL	R5 K0 ; R5 := 0xae91e43b
	17	[386]	SELF     	R5 R5 K1 ; R6 := R5; R5 := R5[0x91a24e4b]
	18	[386]	LOADK    	R7 K4 ; R7 := "ExpandableArea.Progression.Affinity"
	19	[386]	LOADK    	R8 := 2.000000
	20	[386]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[386]	MUL      	R5 R5 K5 ; R5 := R5 * 2.000000
	22	[386]	SUB      	R1 R4 R5 ; R1 := R4 - R5
	23	[387]	LOADK    	R2 := 0.000000
	24	[388]	LOADK    	R3 := 0.000000
	25	[390]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	26	[390]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x67bc869f]
	27	[390]	LOADK    	R6 K7 ; R6 := "ExpandableArea.Progression.Affinity.MissionTime"
	28	[390]	LOADK    	R7 := 0.000000
	29	[390]	SUB      	R8 R1 R3 ; R8 := R1 - R3
	30	[390]	DIV      	R8 R8 K5 ; R8 := R8 / 2.000000
	31	[390]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	32	[391]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	33	[391]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x67bc869f]
	34	[391]	LOADK    	R6 K8 ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Mid"
	35	[391]	LOADK    	R7 := 12.000000
	36	[391]	MOVE     	R8 R0 ; R8 := R0
	37	[391]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	38	[392]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	39	[392]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x67bc869f]
	40	[392]	LOADK    	R6 K9 ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.LeftSwoop"
	41	[392]	LOADK    	R7 := 0.000000
	42	[392]	UNM      	R8 R0 ; R8 := ^ R0
	43	[392]	DIV      	R8 R8 K5 ; R8 := R8 / 2.000000
	44	[392]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	45	[393]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	46	[393]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x67bc869f]
	47	[393]	LOADK    	R6 K10 ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.RightSwoop"
	48	[393]	LOADK    	R7 := 0.000000
	49	[393]	DIV      	R8 R0 K5 ; R8 := R0 / 2.000000
	50	[393]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	51	[394]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	52	[394]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x67bc869f]
	53	[394]	LOADK    	R6 K11 ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Left"
	54	[394]	LOADK    	R7 := 0.000000
	55	[394]	UNM      	R8 R0 ; R8 := ^ R0
	56	[394]	DIV      	R8 R8 K5 ; R8 := R8 / 2.000000
	57	[394]	SUB      	R8 R8 K12 ; R8 := R8 - 16.000000
	58	[394]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	59	[395]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	60	[395]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x67bc869f]
	61	[395]	LOADK    	R6 K13 ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Right"
	62	[395]	LOADK    	R7 := 0.000000
	63	[395]	DIV      	R8 R0 K5 ; R8 := R0 / 2.000000
	64	[395]	ADD      	R8 R8 K12 ; R8 := R8 + 16.000000
	65	[395]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	66	[396]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	67	[396]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x67bc869f]
	68	[396]	LOADK    	R6 K11 ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Left"
	69	[396]	LOADK    	R7 := 12.000000
	70	[396]	SUB      	R8 R1 R0 ; R8 := R1 - R0
	71	[396]	DIV      	R8 R8 K5 ; R8 := R8 / 2.000000
	72	[396]	SUB      	R8 R8 R2 ; R8 := R8 - R2
	73	[396]	DIV      	R9 R3 K5 ; R9 := R3 / 2.000000
	74	[396]	SUB      	R8 R8 R9 ; R8 := R8 - R9
	75	[396]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	76	[397]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	77	[397]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x67bc869f]
	78	[397]	LOADK    	R6 K13 ; R6 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Right"
	79	[397]	LOADK    	R7 := 12.000000
	80	[397]	SUB      	R8 R1 R0 ; R8 := R1 - R0
	81	[397]	DIV      	R8 R8 K5 ; R8 := R8 / 2.000000
	82	[397]	SUB      	R8 R8 R2 ; R8 := R8 - R2
	83	[397]	DIV      	R9 R3 K5 ; R9 := R3 / 2.000000
	84	[397]	ADD      	R8 R8 R9 ; R8 := R8 + R9
	85	[397]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	86	[398]	RETURN   	R0 1 ; return 

function #13 <?:400,405> (22 instructions, 88 bytes at 00000160F829D8A0)
1 param, 8 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[401]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[401]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x817b1503]
	3	[401]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	4	[401]	MOVE     	R3 R0 ; R3 := R0
	5	[401]	LOADK    	R4 K2 ; R4 := "Compact"
	6	[401]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	7	[402]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	8	[402]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x42b04007]
	9	[402]	LOADK    	R4 K4 ; R4 := "<TIMER>"
	10	[402]	OP_LOADBOOL	R5 1 0 ; R5 := true
	11	[402]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	12	[402]	MOVE     	R3 R1 ; R3 := R1
	13	[402]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	14	[403]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	15	[403]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x5f56eeab]
	16	[403]	LOADK    	R5 K6 ; R5 := "ExpandableArea.Progression.Affinity.MissionTime.Label"
	17	[403]	LOADK    	R6 := 29.000000
	18	[403]	MOVE     	R7 R2 ; R7 := R2
	19	[403]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	20	[404]	GETUPVAL 	R3 U1 ; R3 := U1
	21	[404]	CALL     	R3 1 1 ; R3()
	22	[405]	RETURN   	R0 1 ; return 

function #14 <?:407,585> (662 instructions, 2648 bytes at 00000160F829DA90)
1 param, 65 slots, 5 upvalues, 0 locals, 102 constants, 1 function
	1	[408]	GETGLOBAL	R1 K0 ; R1 := 0x9ba7909f
	2	[408]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbcfb64ab]
	3	[408]	GETGLOBAL	R3 K2 ; R3 := 0x0032441c
	4	[408]	GETTABLE 	R3 R3 K3 ; R3 := R3["UIMovie_DetailedPurchaseDialog"]
	5	[408]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[409]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	7	[409]	MOVE     	R3 R1 ; R3 := R1
	8	[409]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[409]	TEST     	R2 1 ; if R2 then PC := 12
	10	[409]	JMP      	12 ; PC := 12
	11	[410]	RETURN   	R0 1 ; return 
	12	[413]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[413]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x44537adf]
	14	[413]	GETGLOBAL	R3 K6 ; R3 := 0xae91e43b
	15	[413]	CALL     	R2 2 3 ; R2,R3 := R2(R3)
	16	[414]	GETGLOBAL	R4 K6 ; R4 := 0xae91e43b
	17	[414]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0x091c120e]
	18	[414]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[414]	MUL      	R4 R4 K8 ; R4 := R4 * 0.100000
	20	[415]	GETGLOBAL	R5 K6 ; R5 := 0xae91e43b
	21	[415]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x2cc9d281]
	22	[415]	CALL     	R5 2 2 ; R5 := R5(R6)
	23	[415]	MUL      	R5 R5 K8 ; R5 := R5 * 0.100000
	24	[417]	GETGLOBAL	R6 K6 ; R6 := 0xae91e43b
	25	[417]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0x91a24e4b]
	26	[417]	LOADK    	R8 K11 ; R8 := "ExpandableArea.Progression.Affinity.Grid"
	27	[417]	LOADK    	R9 := 3.000000
	28	[417]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	29	[418]	GETUPVAL 	R7 U0 ; R7 := U0
	30	[418]	GETTABLE 	R7 R7 K12 ; R7 := R7[0x06d055f9]
	31	[418]	GETUPVAL 	R8 U1 ; R8 := U1
	32	[418]	CALL     	R8 1 2 ; R8 := R8()
	33	[418]	LOADK    	R9 := 512.000000
	34	[418]	LOADK    	R10 := 900.000000
	35	[418]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	36	[418]	SUB      	R7 R7 R6 ; R7 := R7 - R6
	37	[418]	SUB      	R7 R7 R5 ; R7 := R7 - R5
	38	[418]	ADD      	R7 R7 K13 ; R7 := R7 + 2.000000
	39	[419]	GETGLOBAL	R8 K14 ; R8 := mAffinityGrid
	40	[419]	EQ       	1 R8 K15 ; if R8 == nil then PC := 107
	41	[419]	JMP      	107 ; PC := 107
	42	[419]	GETGLOBAL	R8 K16 ; R8 := mRewardGrid
	43	[419]	EQ       	1 R8 K15 ; if R8 == nil then PC := 107
	44	[419]	JMP      	107 ; PC := 107
	45	[420]	GETGLOBAL	R8 K17 ; R8 := 0x5bced4c4
	46	[420]	GETTABLE 	R8 R8 K18 ; R8 := R8[0x99675e23]
	47	[420]	GETGLOBAL	R9 K14 ; R9 := mAffinityGrid
	48	[420]	GETTABLE 	R9 R9 K19 ; R9 := R9["mRowSeparation"]
	49	[420]	DIV      	R9 R7 R9 ; R9 := R7 / R9
	50	[420]	CALL     	R8 2 2 ; R8 := R8(R9)
	51	[421]	GETGLOBAL	R9 K17 ; R9 := 0x5bced4c4
	52	[421]	GETTABLE 	R9 R9 K18 ; R9 := R9[0x99675e23]
	53	[421]	GETGLOBAL	R10 K16 ; R10 := mRewardGrid
	54	[421]	GETTABLE 	R10 R10 K19 ; R10 := R10["mRowSeparation"]
	55	[421]	DIV      	R10 R7 R10 ; R10 := R7 / R10
	56	[421]	CALL     	R9 2 2 ; R9 := R9(R10)
	57	[422]	GETGLOBAL	R10 K14 ; R10 := mAffinityGrid
	58	[422]	GETTABLE 	R10 R10 K20 ; R10 := R10["mScrollBar"]
	59	[422]	SELF     	R10 R10 K21 ; R11 := R10; R10 := R10[0x425b8f0d]
	60	[422]	ADD      	R12 R7 K22 ; R12 := R7 + 6.000000
	61	[422]	CALL     	R10 3 1 ; R10(R11,R12)
	62	[423]	GETGLOBAL	R10 K14 ; R10 := mAffinityGrid
	63	[423]	SELF     	R10 R10 K23 ; R11 := R10; R10 := R10[0x4c4f8717]
	64	[423]	LOADK    	R12 := 1.000000
	65	[423]	OP_LOADBOOL	R13 1 0 ; R13 := true
	66	[423]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	67	[424]	GETGLOBAL	R10 K16 ; R10 := mRewardGrid
	68	[424]	GETTABLE 	R10 R10 K20 ; R10 := R10["mScrollBar"]
	69	[424]	SELF     	R10 R10 K21 ; R11 := R10; R10 := R10[0x425b8f0d]
	70	[424]	ADD      	R12 R7 K22 ; R12 := R7 + 6.000000
	71	[424]	CALL     	R10 3 1 ; R10(R11,R12)
	72	[425]	GETGLOBAL	R10 K16 ; R10 := mRewardGrid
	73	[425]	SELF     	R10 R10 K23 ; R11 := R10; R10 := R10[0x4c4f8717]
	74	[425]	LOADK    	R12 := 1.000000
	75	[425]	OP_LOADBOOL	R13 1 0 ; R13 := true
	76	[425]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	77	[426]	GETGLOBAL	R10 K14 ; R10 := mAffinityGrid
	78	[426]	GETTABLE 	R10 R10 K24 ; R10 := R10["mRows"]
	79	[426]	EQ       	0 R10 R8 ; if R10 ~= R8 then PC := 85
	80	[426]	JMP      	85 ; PC := 85
	81	[426]	GETGLOBAL	R10 K16 ; R10 := mRewardGrid
	82	[426]	GETTABLE 	R10 R10 K24 ; R10 := R10["mRows"]
	83	[426]	EQ       	1 R10 R9 ; if R10 == R9 then PC := 91
	84	[426]	JMP      	91 ; PC := 91
	85	[427]	GETGLOBAL	R10 K14 ; R10 := mAffinityGrid
	86	[427]	SETTABLE 	R10 K24 R8 ; R10["mRows"] := R8
	87	[428]	GETGLOBAL	R10 K16 ; R10 := mRewardGrid
	88	[428]	SETTABLE 	R10 K24 R9 ; R10["mRows"] := R9
	89	[429]	OP_LOADBOOL	R0 0 0 ; R0 := false
	90	[429]	JMP      	107 ; PC := 107
	91	[431]	GETGLOBAL	R10 K14 ; R10 := mAffinityGrid
	92	[431]	SELF     	R10 R10 K25 ; R11 := R10; R10 := R10[0x71e9ac81]
	93	[431]	LOADNIL  	R12 R12 ; R12 := nil
	94	[431]	OP_LOADBOOL	R13 0 0 ; R13 := false
	95	[431]	OP_LOADBOOL	R14 1 0 ; R14 := true
	96	[431]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	97	[432]	GETGLOBAL	R10 K16 ; R10 := mRewardGrid
	98	[432]	SELF     	R10 R10 K25 ; R11 := R10; R10 := R10[0x71e9ac81]
	99	[432]	LOADNIL  	R12 R12 ; R12 := nil
	100	[432]	OP_LOADBOOL	R13 0 0 ; R13 := false
	101	[432]	OP_LOADBOOL	R14 1 0 ; R14 := true
	102	[432]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	103	[433]	GETGLOBAL	R10 K16 ; R10 := mRewardGrid
	104	[433]	SELF     	R10 R10 K26 ; R11 := R10; R10 := R10[0xea061e98]
	105	[442]	CLOSURE  	R12 0 ; R12 := closure(Function #1)
	106	[433]	CALL     	R10 3 1 ; R10(R11,R12)
	107	[446]	GETUPVAL 	R10 U0 ; R10 := U0
	108	[446]	GETTABLE 	R10 R10 K27 ; R10 := R10[0xe5e5a417]
	109	[446]	GETGLOBAL	R11 K6 ; R11 := 0xae91e43b
	110	[446]	DIV      	R12 R7 K13 ; R12 := R7 / 2.000000
	111	[446]	ADD      	R12 R6 R12 ; R12 := R6 + R12
	112	[446]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	113	[447]	GETUPVAL 	R11 U0 ; R11 := U0
	114	[447]	GETTABLE 	R11 R11 K28 ; R11 := R11[0xd718f59b]
	115	[447]	GETGLOBAL	R12 K6 ; R12 := 0xae91e43b
	116	[447]	MOVE     	R13 R7 ; R13 := R7
	117	[447]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	118	[448]	GETUPVAL 	R12 U2 ; R12 := U2
	119	[448]	GETGLOBAL	R13 K29 ; R13 := 0xfee8dbfd
	120	[448]	MOVE     	R14 R10 ; R14 := R10
	121	[448]	MOVE     	R15 R11 ; R15 := R11
	122	[448]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	123	[449]	GETUPVAL 	R12 U2 ; R12 := U2
	124	[449]	GETGLOBAL	R13 K30 ; R13 := 0xbacf3724
	125	[449]	MOVE     	R14 R10 ; R14 := R10
	126	[449]	MOVE     	R15 R11 ; R15 := R11
	127	[449]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	128	[450]	GETUPVAL 	R12 U2 ; R12 := U2
	129	[450]	GETGLOBAL	R13 K31 ; R13 := 0x2bbc1c3b
	130	[450]	MOVE     	R14 R10 ; R14 := R10
	131	[450]	MOVE     	R15 R11 ; R15 := R11
	132	[450]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	133	[452]	GETGLOBAL	R12 K32 ; R12 := 0xcfc01047
	134	[452]	GETGLOBAL	R13 K2 ; R13 := 0x0032441c
	135	[452]	GETTABLE 	R13 R13 K33 ; R13 := R13["UIMaterial_Mods"]
	136	[452]	CALL     	R12 2 4 ; R12,R13,R14 := R12(R13)
	137	[452]	JMP      	149 ; PC := 149
	138	[453]	GETGLOBAL	R17 K32 ; R17 := 0xcfc01047
	139	[453]	MOVE     	R18 R16 ; R18 := R16
	140	[453]	CALL     	R17 2 4 ; R17,R18,R19 := R17(R18)
	141	[453]	JMP      	147 ; PC := 147
	142	[454]	GETUPVAL 	R22 U2 ; R22 := U2
	143	[454]	MOVE     	R23 R21 ; R23 := R21
	144	[454]	MOVE     	R24 R10 ; R24 := R10
	145	[454]	MOVE     	R25 R11 ; R25 := R11
	146	[454]	CALL     	R22 4 1 ; R22(R23,R24,R25)
	147	[453]	TFORLOOP 	R17 2 ; R20,R21 := R17(R18,R19); if R20 ~= nil then begin PC = 142; R19 := R20 end
	148	[454]	JMP      	142 ; PC := 142
	149	[452]	TFORLOOP 	R12 2 ; R15,R16 := R12(R13,R14); if R15 ~= nil then begin PC = 138; R14 := R15 end
	150	[455]	JMP      	138 ; PC := 138
	151	[458]	GETGLOBAL	R22 K32 ; R22 := 0xcfc01047
	152	[458]	GETGLOBAL	R23 K2 ; R23 := 0x0032441c
	153	[458]	GETTABLE 	R23 R23 K34 ; R23 := R23["UIMaterial_CosmeticEnhancersStore"]
	154	[458]	CALL     	R22 2 4 ; R22,R23,R24 := R22(R23)
	155	[458]	JMP      	161 ; PC := 161
	156	[459]	GETUPVAL 	R27 U2 ; R27 := U2
	157	[459]	MOVE     	R28 R26 ; R28 := R26
	158	[459]	MOVE     	R29 R10 ; R29 := R10
	159	[459]	MOVE     	R30 R11 ; R30 := R11
	160	[459]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	161	[458]	TFORLOOP 	R22 2 ; R25,R26 := R22(R23,R24); if R25 ~= nil then begin PC = 156; R24 := R25 end
	162	[459]	JMP      	156 ; PC := 156
	163	[462]	GETGLOBAL	R27 K35 ; R27 := 0xc8802016
	164	[462]	GETGLOBAL	R28 K2 ; R28 := 0x0032441c
	165	[462]	GETTABLE 	R28 R28 K36 ; R28 := R28["UIMaterial_RailjackModStore"]
	166	[462]	CALL     	R27 2 4 ; R27,R28,R29 := R27(R28)
	167	[462]	JMP      	173 ; PC := 173
	168	[463]	GETUPVAL 	R32 U2 ; R32 := U2
	169	[463]	MOVE     	R33 R31 ; R33 := R31
	170	[463]	MOVE     	R34 R10 ; R34 := R10
	171	[463]	MOVE     	R35 R11 ; R35 := R11
	172	[463]	CALL     	R32 4 1 ; R32(R33,R34,R35)
	173	[462]	TFORLOOP 	R27 2 ; R30,R31 := R27(R28,R29); if R30 ~= nil then begin PC = 168; R29 := R30 end
	174	[463]	JMP      	168 ; PC := 168
	175	[466]	GETGLOBAL	R32 K32 ; R32 := 0xcfc01047
	176	[466]	GETGLOBAL	R33 K2 ; R33 := 0x0032441c
	177	[466]	GETTABLE 	R33 R33 K37 ; R33 := R33["UIMaterial_FocusLensStore"]
	178	[466]	CALL     	R32 2 4 ; R32,R33,R34 := R32(R33)
	179	[466]	JMP      	185 ; PC := 185
	180	[467]	GETUPVAL 	R37 U2 ; R37 := U2
	181	[467]	MOVE     	R38 R36 ; R38 := R36
	182	[467]	MOVE     	R39 R10 ; R39 := R10
	183	[467]	MOVE     	R40 R11 ; R40 := R11
	184	[467]	CALL     	R37 4 1 ; R37(R38,R39,R40)
	185	[466]	TFORLOOP 	R32 2 ; R35,R36 := R32(R33,R34); if R35 ~= nil then begin PC = 180; R34 := R35 end
	186	[467]	JMP      	180 ; PC := 180
	187	[470]	GETUPVAL 	R37 U2 ; R37 := U2
	188	[470]	GETGLOBAL	R38 K2 ; R38 := 0x0032441c
	189	[470]	GETTABLE 	R38 R38 K38 ; R38 := R38["UIMaterial_SalvageMaterials"]
	190	[470]	GETTABLE 	R38 R38 K13 ; R38 := R38[2.000000]
	191	[470]	MOVE     	R39 R10 ; R39 := R10
	192	[470]	MOVE     	R40 R11 ; R40 := R11
	193	[470]	CALL     	R37 4 1 ; R37(R38,R39,R40)
	194	[471]	GETUPVAL 	R37 U2 ; R37 := U2
	195	[471]	GETGLOBAL	R38 K2 ; R38 := 0x0032441c
	196	[471]	GETTABLE 	R38 R38 K39 ; R38 := R38["UIMaterial_PigmentVisibilityRange"]
	197	[471]	MOVE     	R39 R10 ; R39 := R10
	198	[471]	MOVE     	R40 R11 ; R40 := R11
	199	[471]	CALL     	R37 4 1 ; R37(R38,R39,R40)
	200	[473]	GETGLOBAL	R37 K6 ; R37 := 0xae91e43b
	201	[473]	SELF     	R37 R37 K10 ; R38 := R37; R37 := R37[0x91a24e4b]
	202	[473]	LOADK    	R39 K40 ; R39 := "ExpandableArea.PlayerInfo.PlayerStats"
	203	[473]	LOADK    	R40 := 3.000000
	204	[473]	CALL     	R37 4 2 ; R37 := R37(R38,R39,R40)
	205	[473]	ADD      	R10 R37 K41 ; R10 := R37 + 90.000000
	206	[474]	SUB      	R37 K42 R10 ; R37 := 900.000000 - R10
	207	[474]	SUB      	R37 R37 R5 ; R37 := R37 - R5
	208	[474]	SUB      	R11 R37 K13 ; R11 := R37 - 2.000000
	209	[475]	GETGLOBAL	R37 K43 ; R37 := mStatsGrid
	210	[475]	EQ       	1 R37 K15 ; if R37 == nil then PC := 236
	211	[475]	JMP      	236 ; PC := 236
	212	[476]	GETGLOBAL	R37 K43 ; R37 := mStatsGrid
	213	[476]	GETGLOBAL	R38 K17 ; R38 := 0x5bced4c4
	214	[476]	GETTABLE 	R38 R38 K18 ; R38 := R38[0x99675e23]
	215	[476]	GETGLOBAL	R39 K43 ; R39 := mStatsGrid
	216	[476]	GETTABLE 	R39 R39 K45 ; R39 := R39["mForcedVerticalSeparation"]
	217	[476]	DIV      	R39 R11 R39 ; R39 := R11 / R39
	218	[476]	CALL     	R38 2 2 ; R38 := R38(R39)
	219	[476]	SETTABLE 	R37 K44 R38 ; R37["mVisibleElements"] := R38
	220	[477]	GETGLOBAL	R37 K43 ; R37 := mStatsGrid
	221	[477]	GETTABLE 	R37 R37 K20 ; R37 := R37["mScrollBar"]
	222	[477]	SELF     	R37 R37 K21 ; R38 := R37; R37 := R37[0x425b8f0d]
	223	[477]	ADD      	R39 R11 K46 ; R39 := R11 + 15.000000
	224	[477]	CALL     	R37 3 1 ; R37(R38,R39)
	225	[478]	GETGLOBAL	R37 K43 ; R37 := mStatsGrid
	226	[478]	SELF     	R37 R37 K23 ; R38 := R37; R37 := R37[0x4c4f8717]
	227	[478]	LOADK    	R39 := 1.000000
	228	[478]	OP_LOADBOOL	R40 1 0 ; R40 := true
	229	[478]	CALL     	R37 4 1 ; R37(R38,R39,R40)
	230	[479]	GETGLOBAL	R37 K43 ; R37 := mStatsGrid
	231	[479]	SELF     	R37 R37 K25 ; R38 := R37; R37 := R37[0x71e9ac81]
	232	[479]	LOADNIL  	R39 R39 ; R39 := nil
	233	[479]	OP_LOADBOOL	R40 0 0 ; R40 := false
	234	[479]	OP_LOADBOOL	R41 1 0 ; R41 := true
	235	[479]	CALL     	R37 5 1 ; R37(R38,R39,R40,R41)
	236	[481]	GETUPVAL 	R37 U0 ; R37 := U0
	237	[481]	GETTABLE 	R37 R37 K27 ; R37 := R37[0xe5e5a417]
	238	[481]	GETGLOBAL	R38 K6 ; R38 := 0xae91e43b
	239	[481]	DIV      	R39 R11 K13 ; R39 := R11 / 2.000000
	240	[481]	ADD      	R39 R10 R39 ; R39 := R10 + R39
	241	[481]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	242	[481]	MOVE     	R10 R37 ; R10 := R37
	243	[482]	GETUPVAL 	R37 U0 ; R37 := U0
	244	[482]	GETTABLE 	R37 R37 K28 ; R37 := R37[0xd718f59b]
	245	[482]	GETGLOBAL	R38 K6 ; R38 := 0xae91e43b
	246	[482]	MOVE     	R39 R11 ; R39 := R11
	247	[482]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	248	[482]	MOVE     	R11 R37 ; R11 := R37
	249	[483]	GETUPVAL 	R37 U2 ; R37 := U2
	250	[483]	GETGLOBAL	R38 K47 ; R38 := 0x1606c7e7
	251	[483]	MOVE     	R39 R10 ; R39 := R10
	252	[483]	MOVE     	R40 R11 ; R40 := R11
	253	[483]	CALL     	R37 4 1 ; R37(R38,R39,R40)
	254	[484]	GETUPVAL 	R37 U2 ; R37 := U2
	255	[484]	GETGLOBAL	R38 K48 ; R38 := 0xc13a88d8
	256	[484]	MOVE     	R39 R10 ; R39 := R10
	257	[484]	MOVE     	R40 R11 ; R40 := R11
	258	[484]	CALL     	R37 4 1 ; R37(R38,R39,R40)
	259	[486]	TEST     	R0 0 ; if not R0 then PC := 262
	260	[486]	JMP      	262 ; PC := 262
	261	[487]	RETURN   	R0 1 ; return 
	262	[490]	GETGLOBAL	R37 K4 ; R37 := 0x7b998233
	263	[490]	GETGLOBAL	R38 K49 ; R38 := mAnchorMgr
	264	[490]	CALL     	R37 2 2 ; R37 := R37(R38)
	265	[490]	TEST     	R37 1 ; if R37 then PC := 276
	266	[490]	JMP      	276 ; PC := 276
	267	[491]	GETGLOBAL	R37 K49 ; R37 := mAnchorMgr
	268	[491]	SELF     	R37 R37 K50 ; R38 := R37; R37 := R37[0xfaa69527]
	269	[491]	GETGLOBAL	R39 K6 ; R39 := 0xae91e43b
	270	[491]	SELF     	R39 R39 K51 ; R40 := R39; R39 := R39[0x6b837788]
	271	[491]	CALL     	R39 2 2 ; R39 := R39(R40)
	272	[491]	GETGLOBAL	R40 K6 ; R40 := 0xae91e43b
	273	[491]	SELF     	R40 R40 K52 ; R41 := R40; R40 := R40[0xaf9fda9f]
	274	[491]	CALL     	R40 2 0 ; R40,... := R40(R41)
	275	[491]	CALL     	R37 0 1 ; R37(R38,...)
	276	[494]	LOADK    	R37 := 25.000000
	277	[495]	SUB      	R38 R2 R4 ; R38 := R2 - R4
	278	[495]	SUB      	R38 R38 R37 ; R38 := R38 - R37
	279	[495]	DIV      	R38 R38 K13 ; R38 := R38 / 2.000000
	280	[495]	SETUPVAL 	R38 U3 ; U3 := R38
	281	[496]	GETGLOBAL	R38 K14 ; R38 := mAffinityGrid
	282	[496]	EQ       	1 R38 K15 ; if R38 == nil then PC := 377
	283	[496]	JMP      	377 ; PC := 377
	284	[497]	GETGLOBAL	R38 K14 ; R38 := mAffinityGrid
	285	[497]	GETGLOBAL	R39 K17 ; R39 := 0x5bced4c4
	286	[497]	GETTABLE 	R39 R39 K54 ; R39 := R39[0x55f27c30]
	287	[497]	GETUPVAL 	R40 U3 ; R40 := U3
	288	[497]	GETGLOBAL	R41 K14 ; R41 := mAffinityGrid
	289	[497]	GETTABLE 	R41 R41 K55 ; R41 := R41["mColumnSeparation"]
	290	[497]	DIV      	R40 R40 R41 ; R40 := R40 / R41
	291	[497]	CALL     	R39 2 2 ; R39 := R39(R40)
	292	[497]	SETTABLE 	R38 K53 R39 ; R38["mColumns"] := R39
	293	[498]	GETGLOBAL	R38 K14 ; R38 := mAffinityGrid
	294	[498]	GETGLOBAL	R39 K14 ; R39 := mAffinityGrid
	295	[498]	GETTABLE 	R39 R39 K53 ; R39 := R39["mColumns"]
	296	[498]	GETGLOBAL	R40 K14 ; R40 := mAffinityGrid
	297	[498]	GETTABLE 	R40 R40 K24 ; R40 := R40["mRows"]
	298	[498]	MUL      	R39 R39 R40 ; R39 := R39 * R40
	299	[498]	SETTABLE 	R38 K44 R39 ; R38["mVisibleElements"] := R39
	300	[499]	GETGLOBAL	R38 K14 ; R38 := mAffinityGrid
	301	[499]	GETTABLE 	R38 R38 K53 ; R38 := R38["mColumns"]
	302	[499]	GETGLOBAL	R39 K14 ; R39 := mAffinityGrid
	303	[499]	GETTABLE 	R39 R39 K55 ; R39 := R39["mColumnSeparation"]
	304	[499]	MUL      	R38 R38 R39 ; R38 := R38 * R39
	305	[499]	SETUPVAL 	R38 U3 ; U3 := R38
	306	[500]	GETGLOBAL	R38 K6 ; R38 := 0xae91e43b
	307	[500]	SELF     	R38 R38 K56 ; R39 := R38; R38 := R38[0x67bc869f]
	308	[500]	LOADK    	R40 K57 ; R40 := "ExpandableArea.Progression.Affinity.ScrollBar"
	309	[500]	LOADK    	R41 := 0.000000
	310	[500]	GETUPVAL 	R42 U3 ; R42 := U3
	311	[500]	CALL     	R38 5 1 ; R38(R39,R40,R41,R42)
	312	[502]	GETGLOBAL	R38 K14 ; R38 := mAffinityGrid
	313	[502]	GETTABLE 	R38 R38 K58 ; R38 := R38["mElements"]
	314	[502]	LEN      	R38 R38 ; R38 := # R38
	315	[502]	LOADK    	R39 := 1.000000
	316	[502]	LOADK    	R40 := -1.000000
	317	[502]	FORPREP  	R38 330 ; R38 -= R40; PC := 330
	318	[503]	GETGLOBAL	R42 K14 ; R42 := mAffinityGrid
	319	[503]	GETTABLE 	R42 R42 K58 ; R42 := R42["mElements"]
	320	[503]	GETTABLE 	R42 R42 R41 ; R42 := R42[R41]
	321	[503]	GETTABLE 	R42 R42 K59 ; R42 := R42["Filler"]
	322	[503]	TEST     	R42 0 ; if not R42 then PC := 330
	323	[503]	JMP      	330 ; PC := 330
	324	[504]	GETGLOBAL	R42 K14 ; R42 := mAffinityGrid
	325	[504]	SELF     	R42 R42 K60 ; R43 := R42; R42 := R42[0x9ae7e2d2]
	326	[504]	MOVE     	R44 R41 ; R44 := R41
	327	[504]	OP_LOADBOOL	R45 1 0 ; R45 := true
	328	[504]	OP_LOADBOOL	R46 1 0 ; R46 := true
	329	[504]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	330	[502]	FORLOOP  	R38 318 ; R38 += R40; if R38 <= R39 then begin PC := 318; R41 := R38 end
	331	[507]	GETGLOBAL	R42 K14 ; R42 := mAffinityGrid
	332	[507]	GETTABLE 	R42 R42 K58 ; R42 := R42["mElements"]
	333	[507]	LEN      	R42 R42 ; R42 := # R42
	334	[508]	GETGLOBAL	R43 K17 ; R43 := 0x5bced4c4
	335	[508]	GETTABLE 	R43 R43 K18 ; R43 := R43[0x99675e23]
	336	[508]	GETGLOBAL	R44 K14 ; R44 := mAffinityGrid
	337	[508]	GETTABLE 	R44 R44 K53 ; R44 := R44["mColumns"]
	338	[508]	DIV      	R44 R42 R44 ; R44 := R42 / R44
	339	[508]	CALL     	R43 2 2 ; R43 := R43(R44)
	340	[509]	GETGLOBAL	R44 K17 ; R44 := 0x5bced4c4
	341	[509]	GETTABLE 	R44 R44 K61 ; R44 := R44[0xb62ecfe0]
	342	[509]	GETGLOBAL	R45 K14 ; R45 := mAffinityGrid
	343	[509]	GETTABLE 	R45 R45 K24 ; R45 := R45["mRows"]
	344	[509]	GETGLOBAL	R46 K14 ; R46 := mAffinityGrid
	345	[509]	GETTABLE 	R46 R46 K53 ; R46 := R46["mColumns"]
	346	[509]	MUL      	R45 R45 R46 ; R45 := R45 * R46
	347	[509]	GETGLOBAL	R46 K14 ; R46 := mAffinityGrid
	348	[509]	GETTABLE 	R46 R46 K53 ; R46 := R46["mColumns"]
	349	[509]	MUL      	R46 R43 R46 ; R46 := R43 * R46
	350	[509]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	351	[510]	ADD      	R45 R42 K62 ; R45 := R42 + 1.000000
	352	[510]	MOVE     	R46 R44 ; R46 := R44
	353	[510]	LOADK    	R47 := 1.000000
	354	[510]	FORPREP  	R45 361 ; R45 -= R47; PC := 361
	355	[511]	GETGLOBAL	R49 K14 ; R49 := mAffinityGrid
	356	[511]	SELF     	R49 R49 K63 ; R50 := R49; R49 := R49[0xbad4316f]
	357	[511]	NEWTABLE 	R51 0 1 ; R51 := {}
	358	[511]	SETTABLE 	R51 K59 K64 ; R51["Filler"] := true
	359	[511]	OP_LOADBOOL	R52 1 0 ; R52 := true
	360	[511]	CALL     	R49 4 1 ; R49(R50,R51,R52)
	361	[510]	FORLOOP  	R45 355 ; R45 += R47; if R45 <= R46 then begin PC := 355; R48 := R45 end
	362	[514]	GETGLOBAL	R49 K14 ; R49 := mAffinityGrid
	363	[514]	SELF     	R49 R49 K25 ; R50 := R49; R49 := R49[0x71e9ac81]
	364	[514]	LOADNIL  	R51 R51 ; R51 := nil
	365	[514]	OP_LOADBOOL	R52 0 0 ; R52 := false
	366	[514]	OP_LOADBOOL	R53 1 0 ; R53 := true
	367	[514]	CALL     	R49 5 1 ; R49(R50,R51,R52,R53)
	368	[516]	GETGLOBAL	R49 K6 ; R49 := 0xae91e43b
	369	[516]	SELF     	R49 R49 K56 ; R50 := R49; R49 := R49[0x67bc869f]
	370	[516]	LOADK    	R51 K65 ; R51 := "ExpandableArea.Progression.Affinity"
	371	[516]	LOADK    	R52 := 0.000000
	372	[516]	SUB      	R53 R2 R4 ; R53 := R2 - R4
	373	[516]	UNM      	R53 R53 ; R53 := ^ R53
	374	[516]	DIV      	R53 R53 K13 ; R53 := R53 / 2.000000
	375	[516]	ADD      	R53 R53 K66 ; R53 := R53 + 3.000000
	376	[516]	CALL     	R49 5 1 ; R49(R50,R51,R52,R53)
	377	[519]	GETGLOBAL	R49 K16 ; R49 := mRewardGrid
	378	[519]	EQ       	1 R49 K15 ; if R49 == nil then PC := 458
	379	[519]	JMP      	458 ; PC := 458
	380	[520]	SUB      	R49 R2 R4 ; R49 := R2 - R4
	381	[520]	GETUPVAL 	R50 U3 ; R50 := U3
	382	[520]	SUB      	R49 R49 R50 ; R49 := R49 - R50
	383	[520]	SUB      	R49 R49 R37 ; R49 := R49 - R37
	384	[521]	GETGLOBAL	R50 K16 ; R50 := mRewardGrid
	385	[521]	GETGLOBAL	R51 K17 ; R51 := 0x5bced4c4
	386	[521]	GETTABLE 	R51 R51 K54 ; R51 := R51[0x55f27c30]
	387	[521]	GETGLOBAL	R52 K16 ; R52 := mRewardGrid
	388	[521]	GETTABLE 	R52 R52 K55 ; R52 := R52["mColumnSeparation"]
	389	[521]	DIV      	R52 R49 R52 ; R52 := R49 / R52
	390	[521]	CALL     	R51 2 2 ; R51 := R51(R52)
	391	[521]	SETTABLE 	R50 K53 R51 ; R50["mColumns"] := R51
	392	[522]	GETGLOBAL	R50 K16 ; R50 := mRewardGrid
	393	[522]	GETGLOBAL	R51 K16 ; R51 := mRewardGrid
	394	[522]	GETTABLE 	R51 R51 K53 ; R51 := R51["mColumns"]
	395	[522]	GETGLOBAL	R52 K16 ; R52 := mRewardGrid
	396	[522]	GETTABLE 	R52 R52 K24 ; R52 := R52["mRows"]
	397	[522]	MUL      	R51 R51 R52 ; R51 := R51 * R52
	398	[522]	SETTABLE 	R50 K44 R51 ; R50["mVisibleElements"] := R51
	399	[523]	GETGLOBAL	R50 K16 ; R50 := mRewardGrid
	400	[523]	GETTABLE 	R50 R50 K53 ; R50 := R50["mColumns"]
	401	[523]	GETGLOBAL	R51 K16 ; R51 := mRewardGrid
	402	[523]	GETTABLE 	R51 R51 K55 ; R51 := R51["mColumnSeparation"]
	403	[523]	MUL      	R49 R50 R51 ; R49 := R50 * R51
	404	[524]	GETGLOBAL	R50 K6 ; R50 := 0xae91e43b
	405	[524]	SELF     	R50 R50 K56 ; R51 := R50; R50 := R50[0x67bc869f]
	406	[524]	LOADK    	R52 K67 ; R52 := "ExpandableArea.Progression.Rewards.ScrollBar"
	407	[524]	LOADK    	R53 := 0.000000
	408	[524]	MOVE     	R54 R49 ; R54 := R49
	409	[524]	CALL     	R50 5 1 ; R50(R51,R52,R53,R54)
	410	[526]	GETGLOBAL	R50 K16 ; R50 := mRewardGrid
	411	[526]	GETTABLE 	R50 R50 K58 ; R50 := R50["mElements"]
	412	[526]	LEN      	R50 R50 ; R50 := # R50
	413	[526]	LOADK    	R51 := 1.000000
	414	[526]	LOADK    	R52 := -1.000000
	415	[526]	FORPREP  	R50 428 ; R50 -= R52; PC := 428
	416	[527]	GETGLOBAL	R54 K16 ; R54 := mRewardGrid
	417	[527]	GETTABLE 	R54 R54 K58 ; R54 := R54["mElements"]
	418	[527]	GETTABLE 	R54 R54 R53 ; R54 := R54[R53]
	419	[527]	GETTABLE 	R54 R54 K59 ; R54 := R54["Filler"]
	420	[527]	TEST     	R54 0 ; if not R54 then PC := 428
	421	[527]	JMP      	428 ; PC := 428
	422	[528]	GETGLOBAL	R54 K16 ; R54 := mRewardGrid
	423	[528]	SELF     	R54 R54 K60 ; R55 := R54; R54 := R54[0x9ae7e2d2]
	424	[528]	MOVE     	R56 R53 ; R56 := R53
	425	[528]	OP_LOADBOOL	R57 1 0 ; R57 := true
	426	[528]	OP_LOADBOOL	R58 1 0 ; R58 := true
	427	[528]	CALL     	R54 5 1 ; R54(R55,R56,R57,R58)
	428	[526]	FORLOOP  	R50 416 ; R50 += R52; if R50 <= R51 then begin PC := 416; R53 := R50 end
	429	[531]	GETGLOBAL	R54 K16 ; R54 := mRewardGrid
	430	[531]	SELF     	R54 R54 K68 ; R55 := R54; R54 := R54[0x37bcb720]
	431	[531]	CALL     	R54 2 1 ; R54(R55)
	432	[532]	GETGLOBAL	R54 K16 ; R54 := mRewardGrid
	433	[532]	SELF     	R54 R54 K25 ; R55 := R54; R54 := R54[0x71e9ac81]
	434	[532]	LOADNIL  	R56 R56 ; R56 := nil
	435	[532]	OP_LOADBOOL	R57 0 0 ; R57 := false
	436	[532]	OP_LOADBOOL	R58 1 0 ; R58 := true
	437	[532]	CALL     	R54 5 1 ; R54(R55,R56,R57,R58)
	438	[534]	LOADK    	R54 := -7.000000
	439	[535]	GETGLOBAL	R55 K6 ; R55 := 0xae91e43b
	440	[535]	SELF     	R55 R55 K56 ; R56 := R55; R55 := R55[0x67bc869f]
	441	[535]	LOADK    	R57 K69 ; R57 := "ExpandableArea.Progression.Rewards"
	442	[535]	LOADK    	R58 := 0.000000
	443	[535]	SUB      	R59 R2 R4 ; R59 := R2 - R4
	444	[535]	GETGLOBAL	R60 K16 ; R60 := mRewardGrid
	445	[535]	GETTABLE 	R60 R60 K70 ; R60 := R60["ElementWidth"]
	446	[535]	ADD      	R59 R59 R60 ; R59 := R59 + R60
	447	[535]	DIV      	R59 R59 K13 ; R59 := R59 / 2.000000
	448	[535]	SUB      	R59 R59 R49 ; R59 := R59 - R49
	449	[535]	ADD      	R59 R59 R54 ; R59 := R59 + R54
	450	[535]	CALL     	R55 5 1 ; R55(R56,R57,R58,R59)
	451	[536]	GETGLOBAL	R55 K6 ; R55 := 0xae91e43b
	452	[536]	SELF     	R55 R55 K56 ; R56 := R55; R55 := R55[0x67bc869f]
	453	[536]	LOADK    	R57 K71 ; R57 := "ExpandableArea.Progression.Rewards.SearchAndSort"
	454	[536]	LOADK    	R58 := 0.000000
	455	[536]	SUB      	R59 R49 K72 ; R59 := R49 - 527.000000
	456	[536]	SUB      	R59 R59 R54 ; R59 := R59 - R54
	457	[536]	CALL     	R55 5 1 ; R55(R56,R57,R58,R59)
	458	[539]	GETGLOBAL	R55 K6 ; R55 := 0xae91e43b
	459	[539]	SELF     	R55 R55 K56 ; R56 := R55; R55 := R55[0x67bc869f]
	460	[539]	LOADK    	R57 K73 ; R57 := "ExpandableArea.PlayerInfo.PlayerBar.Backer"
	461	[539]	LOADK    	R58 := 12.000000
	462	[539]	ADD      	R59 R2 K74 ; R59 := R2 + 100.000000
	463	[539]	CALL     	R55 5 1 ; R55(R56,R57,R58,R59)
	464	[541]	GETGLOBAL	R55 K6 ; R55 := 0xae91e43b
	465	[541]	SELF     	R55 R55 K56 ; R56 := R55; R55 := R55[0x67bc869f]
	466	[541]	LOADK    	R57 K75 ; R57 := "ExpandableArea.PlayerInfo.PlayerBar.TopLine"
	467	[541]	LOADK    	R58 := 12.000000
	468	[541]	ADD      	R59 R2 K74 ; R59 := R2 + 100.000000
	469	[541]	CALL     	R55 5 1 ; R55(R56,R57,R58,R59)
	470	[542]	GETGLOBAL	R55 K6 ; R55 := 0xae91e43b
	471	[542]	SELF     	R55 R55 K56 ; R56 := R55; R55 := R55[0x67bc869f]
	472	[542]	LOADK    	R57 K76 ; R57 := "ExpandableArea.PlayerInfo.PlayerBar.TopLineRight"
	473	[542]	LOADK    	R58 := 12.000000
	474	[542]	ADD      	R59 R2 K74 ; R59 := R2 + 100.000000
	475	[542]	CALL     	R55 5 1 ; R55(R56,R57,R58,R59)
	476	[543]	GETGLOBAL	R55 K6 ; R55 := 0xae91e43b
	477	[543]	SELF     	R55 R55 K56 ; R56 := R55; R55 := R55[0x67bc869f]
	478	[543]	LOADK    	R57 K77 ; R57 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
	479	[543]	LOADK    	R58 := 12.000000
	480	[543]	ADD      	R59 R2 K74 ; R59 := R2 + 100.000000
	481	[543]	CALL     	R55 5 1 ; R55(R56,R57,R58,R59)
	482	[545]	GETGLOBAL	R55 K6 ; R55 := 0xae91e43b
	483	[545]	SELF     	R55 R55 K56 ; R56 := R55; R55 := R55[0x67bc869f]
	484	[545]	LOADK    	R57 K78 ; R57 := "ExpandableArea.FullScreenFade"
	485	[545]	LOADK    	R58 := 12.000000
	486	[545]	ADD      	R59 R2 K74 ; R59 := R2 + 100.000000
	487	[545]	CALL     	R55 5 1 ; R55(R56,R57,R58,R59)
	488	[546]	GETGLOBAL	R55 K6 ; R55 := 0xae91e43b
	489	[546]	SELF     	R55 R55 K56 ; R56 := R55; R55 := R55[0x67bc869f]
	490	[546]	LOADK    	R57 K78 ; R57 := "ExpandableArea.FullScreenFade"
	491	[546]	LOADK    	R58 := 13.000000
	492	[546]	ADD      	R59 R3 K74 ; R59 := R3 + 100.000000
	493	[546]	CALL     	R55 5 1 ; R55(R56,R57,R58,R59)
	494	[547]	GETGLOBAL	R55 K6 ; R55 := 0xae91e43b
	495	[547]	SELF     	R55 R55 K56 ; R56 := R55; R55 := R55[0x67bc869f]
	496	[547]	LOADK    	R57 K79 ; R57 := "FullScreenFade"
	497	[547]	LOADK    	R58 := 12.000000
	498	[547]	ADD      	R59 R2 K74 ; R59 := R2 + 100.000000
	499	[547]	CALL     	R55 5 1 ; R55(R56,R57,R58,R59)
	500	[548]	GETGLOBAL	R55 K6 ; R55 := 0xae91e43b
	501	[548]	SELF     	R55 R55 K56 ; R56 := R55; R55 := R55[0x67bc869f]
	502	[548]	LOADK    	R57 K79 ; R57 := "FullScreenFade"
	503	[548]	LOADK    	R58 := 13.000000
	504	[548]	ADD      	R59 R3 K74 ; R59 := R3 + 100.000000
	505	[548]	CALL     	R55 5 1 ; R55(R56,R57,R58,R59)
	506	[550]	SUB      	R55 R2 R4 ; R55 := R2 - R4
	507	[551]	GETGLOBAL	R56 K6 ; R56 := 0xae91e43b
	508	[551]	SELF     	R56 R56 K56 ; R57 := R56; R56 := R56[0x67bc869f]
	509	[551]	LOADK    	R58 K80 ; R58 := "ExpandableArea.Progression.Tile"
	510	[551]	LOADK    	R59 := 12.000000
	511	[551]	ADD      	R60 R55 K81 ; R60 := R55 + 30.000000
	512	[551]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	513	[552]	GETGLOBAL	R56 K6 ; R56 := 0xae91e43b
	514	[552]	SELF     	R56 R56 K56 ; R57 := R56; R56 := R56[0x67bc869f]
	515	[552]	LOADK    	R58 K80 ; R58 := "ExpandableArea.Progression.Tile"
	516	[552]	LOADK    	R59 := 13.000000
	517	[552]	MOVE     	R60 R3 ; R60 := R3
	518	[552]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	519	[553]	GETGLOBAL	R56 K6 ; R56 := 0xae91e43b
	520	[553]	SELF     	R56 R56 K56 ; R57 := R56; R56 := R56[0x67bc869f]
	521	[553]	LOADK    	R58 K82 ; R58 := "ExpandableArea.Progression.Blurer"
	522	[553]	LOADK    	R59 := 12.000000
	523	[553]	ADD      	R60 R55 K81 ; R60 := R55 + 30.000000
	524	[553]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	525	[554]	GETGLOBAL	R56 K6 ; R56 := 0xae91e43b
	526	[554]	SELF     	R56 R56 K56 ; R57 := R56; R56 := R56[0x67bc869f]
	527	[554]	LOADK    	R58 K82 ; R58 := "ExpandableArea.Progression.Blurer"
	528	[554]	LOADK    	R59 := 13.000000
	529	[554]	MOVE     	R60 R3 ; R60 := R3
	530	[554]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	531	[556]	GETGLOBAL	R56 K6 ; R56 := 0xae91e43b
	532	[556]	SELF     	R56 R56 K56 ; R57 := R56; R56 := R56[0x67bc869f]
	533	[556]	LOADK    	R58 K83 ; R58 := "ExpandableArea.Progression.Lines.Mid"
	534	[556]	LOADK    	R59 := 12.000000
	535	[556]	MOVE     	R60 R55 ; R60 := R55
	536	[556]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	537	[557]	GETGLOBAL	R56 K6 ; R56 := 0xae91e43b
	538	[557]	SELF     	R56 R56 K56 ; R57 := R56; R56 := R56[0x67bc869f]
	539	[557]	LOADK    	R58 K84 ; R58 := "ExpandableArea.Progression.Lines.LeftCorner"
	540	[557]	LOADK    	R59 := 0.000000
	541	[557]	UNM      	R60 R55 ; R60 := ^ R55
	542	[557]	DIV      	R60 R60 K13 ; R60 := R60 / 2.000000
	543	[557]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	544	[558]	GETGLOBAL	R56 K6 ; R56 := 0xae91e43b
	545	[558]	SELF     	R56 R56 K56 ; R57 := R56; R56 := R56[0x67bc869f]
	546	[558]	LOADK    	R58 K85 ; R58 := "ExpandableArea.Progression.Lines.RightCorner"
	547	[558]	LOADK    	R59 := 0.000000
	548	[558]	DIV      	R60 R55 K13 ; R60 := R55 / 2.000000
	549	[558]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	550	[559]	GETGLOBAL	R56 K6 ; R56 := 0xae91e43b
	551	[559]	SELF     	R56 R56 K56 ; R57 := R56; R56 := R56[0x67bc869f]
	552	[559]	LOADK    	R58 K86 ; R58 := "ExpandableArea.Progression.Lines.LeftSide"
	553	[559]	LOADK    	R59 := 0.000000
	554	[559]	UNM      	R60 R55 ; R60 := ^ R55
	555	[559]	DIV      	R60 R60 K13 ; R60 := R60 / 2.000000
	556	[559]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	557	[560]	GETGLOBAL	R56 K6 ; R56 := 0xae91e43b
	558	[560]	SELF     	R56 R56 K56 ; R57 := R56; R56 := R56[0x67bc869f]
	559	[560]	LOADK    	R58 K87 ; R58 := "ExpandableArea.Progression.Lines.RightSide"
	560	[560]	LOADK    	R59 := 0.000000
	561	[560]	DIV      	R60 R55 K13 ; R60 := R55 / 2.000000
	562	[560]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	563	[561]	GETGLOBAL	R56 K6 ; R56 := 0xae91e43b
	564	[561]	SELF     	R56 R56 K56 ; R57 := R56; R56 := R56[0x67bc869f]
	565	[561]	LOADK    	R58 K86 ; R58 := "ExpandableArea.Progression.Lines.LeftSide"
	566	[561]	LOADK    	R59 := 13.000000
	567	[561]	MOVE     	R60 R3 ; R60 := R3
	568	[561]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	569	[562]	GETGLOBAL	R56 K6 ; R56 := 0xae91e43b
	570	[562]	SELF     	R56 R56 K56 ; R57 := R56; R56 := R56[0x67bc869f]
	571	[562]	LOADK    	R58 K87 ; R58 := "ExpandableArea.Progression.Lines.RightSide"
	572	[562]	LOADK    	R59 := 13.000000
	573	[562]	MOVE     	R60 R3 ; R60 := R3
	574	[562]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	575	[564]	ADD      	R56 R2 K74 ; R56 := R2 + 100.000000
	576	[564]	DIV      	R56 R56 K13 ; R56 := R56 / 2.000000
	577	[565]	GETUPVAL 	R57 U1 ; R57 := U1
	578	[565]	CALL     	R57 1 2 ; R57 := R57()
	579	[565]	TEST     	R57 1 ; if R57 then PC := 583
	580	[565]	JMP      	583 ; PC := 583
	581	[566]	DIV      	R57 R55 K13 ; R57 := R55 / 2.000000
	582	[566]	SUB      	R56 R57 K88 ; R56 := R57 - 18.000000
	583	[568]	GETGLOBAL	R57 K6 ; R57 := 0xae91e43b
	584	[568]	SELF     	R57 R57 K56 ; R58 := R57; R57 := R57[0x67bc869f]
	585	[568]	LOADK    	R59 K89 ; R59 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow"
	586	[568]	LOADK    	R60 := 0.000000
	587	[568]	MOVE     	R61 R56 ; R61 := R56
	588	[568]	CALL     	R57 5 1 ; R57(R58,R59,R60,R61)
	589	[569]	GETGLOBAL	R57 K6 ; R57 := 0xae91e43b
	590	[569]	SELF     	R57 R57 K56 ; R58 := R57; R57 := R57[0x67bc869f]
	591	[569]	LOADK    	R59 K75 ; R59 := "ExpandableArea.PlayerInfo.PlayerBar.TopLine"
	592	[569]	LOADK    	R60 := 0.000000
	593	[569]	SUB      	R61 R56 K90 ; R61 := R56 - 23.000000
	594	[569]	CALL     	R57 5 1 ; R57(R58,R59,R60,R61)
	595	[570]	GETGLOBAL	R57 K6 ; R57 := 0xae91e43b
	596	[570]	SELF     	R57 R57 K56 ; R58 := R57; R57 := R57[0x67bc869f]
	597	[570]	LOADK    	R59 K76 ; R59 := "ExpandableArea.PlayerInfo.PlayerBar.TopLineRight"
	598	[570]	LOADK    	R60 := 0.000000
	599	[570]	ADD      	R61 R56 K90 ; R61 := R56 + 23.000000
	600	[570]	CALL     	R57 5 1 ; R57(R58,R59,R60,R61)
	601	[572]	GETGLOBAL	R57 K6 ; R57 := 0xae91e43b
	602	[572]	SELF     	R57 R57 K56 ; R58 := R57; R57 := R57[0x67bc869f]
	603	[572]	LOADK    	R59 K91 ; R59 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn"
	604	[572]	LOADK    	R60 := 0.000000
	605	[572]	UNM      	R61 R56 ; R61 := ^ R56
	606	[572]	SUB      	R61 R61 K92 ; R61 := R61 - 17.000000
	607	[572]	CALL     	R57 5 1 ; R57(R58,R59,R60,R61)
	608	[574]	GETUPVAL 	R57 U4 ; R57 := U4
	609	[574]	CALL     	R57 1 1 ; R57()
	610	[576]	GETUPVAL 	R57 U0 ; R57 := U0
	611	[576]	GETTABLE 	R57 R57 K93 ; R57 := R57[0x0db7934d]
	612	[576]	GETGLOBAL	R58 K6 ; R58 := 0xae91e43b
	613	[576]	LOADK    	R59 := 100.000000
	614	[576]	CALL     	R57 3 2 ; R57 := R57(R58,R59)
	615	[577]	GETGLOBAL	R58 K94 ; R58 := 0x5dcb0a6f
	616	[577]	SELF     	R58 R58 K95 ; R59 := R58; R58 := R58[0x830eea67]
	617	[577]	GETGLOBAL	R60 K96 ; R60 := 0x6c97a788
	618	[577]	GETTABLE 	R60 R60 K97 ; R60 := R60["VISIBILITY_FADE_SIZE"]
	619	[577]	MOVE     	R61 R57 ; R61 := R57
	620	[577]	CALL     	R58 4 1 ; R58(R59,R60,R61)
	621	[578]	GETUPVAL 	R58 U0 ; R58 := U0
	622	[578]	GETTABLE 	R58 R58 K27 ; R58 := R58[0xe5e5a417]
	623	[578]	GETGLOBAL	R59 K6 ; R59 := 0xae91e43b
	624	[578]	MOVE     	R60 R6 ; R60 := R6
	625	[578]	CALL     	R58 3 2 ; R58 := R58(R59,R60)
	626	[578]	MOVE     	R10 R58 ; R10 := R58
	627	[579]	GETUPVAL 	R58 U0 ; R58 := U0
	628	[579]	GETTABLE 	R58 R58 K28 ; R58 := R58[0xd718f59b]
	629	[579]	GETGLOBAL	R59 K6 ; R59 := 0xae91e43b
	630	[579]	MUL      	R60 R7 K13 ; R60 := R7 * 2.000000
	631	[579]	CALL     	R58 3 2 ; R58 := R58(R59,R60)
	632	[579]	MOVE     	R11 R58 ; R11 := R58
	633	[580]	GETUPVAL 	R58 U2 ; R58 := U2
	634	[580]	GETGLOBAL	R59 K94 ; R59 := 0x5dcb0a6f
	635	[580]	MOVE     	R60 R10 ; R60 := R10
	636	[580]	MUL      	R61 R57 K98 ; R61 := R57 * 1.500000
	637	[580]	SUB      	R61 R11 R61 ; R61 := R11 - R61
	638	[580]	OP_LOADBOOL	R62 1 0 ; R62 := true
	639	[580]	CALL     	R58 5 1 ; R58(R59,R60,R61,R62)
	640	[582]	GETUPVAL 	R58 U0 ; R58 := U0
	641	[582]	GETTABLE 	R58 R58 K27 ; R58 := R58[0xe5e5a417]
	642	[582]	GETGLOBAL	R59 K6 ; R59 := 0xae91e43b
	643	[582]	GETGLOBAL	R60 K6 ; R60 := 0xae91e43b
	644	[582]	SELF     	R60 R60 K10 ; R61 := R60; R60 := R60[0x91a24e4b]
	645	[582]	LOADK    	R62 K99 ; R62 := "ExpandableArea.Progression.Affinity.MissionTime"
	646	[582]	LOADK    	R63 := 2.000000
	647	[582]	CALL     	R60 4 2 ; R60 := R60(R61,R62,R63)
	648	[582]	OP_LOADBOOL	R61 1 0 ; R61 := true
	649	[582]	CALL     	R58 4 2 ; R58 := R58(R59,R60,R61)
	650	[583]	GETUPVAL 	R59 U0 ; R59 := U0
	651	[583]	GETTABLE 	R59 R59 K28 ; R59 := R59[0xd718f59b]
	652	[583]	GETGLOBAL	R60 K6 ; R60 := 0xae91e43b
	653	[583]	GETUPVAL 	R61 U3 ; R61 := U3
	654	[583]	OP_LOADBOOL	R62 1 0 ; R62 := true
	655	[583]	CALL     	R59 4 2 ; R59 := R59(R60,R61,R62)
	656	[584]	GETUPVAL 	R60 U2 ; R60 := U2
	657	[584]	GETGLOBAL	R61 K100 ; R61 := 0xea90a9b2
	658	[584]	MOVE     	R62 R58 ; R62 := R58
	659	[584]	SUB      	R63 R59 K101 ; R63 := R59 - 0.200000
	660	[584]	OP_LOADBOOL	R64 1 0 ; R64 := true
	661	[584]	CALL     	R60 5 1 ; R60(R61,R62,R63,R64)
	662	[585]	RETURN   	R0 1 ; return 

function #15 <?:587,589> (4 instructions, 16 bytes at 00000160F829FF90)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[588]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[588]	OP_LOADBOOL	R1 1 0 ; R1 := true
	3	[588]	CALL     	R0 2 1 ; R0(R1)
	4	[589]	RETURN   	R0 1 ; return 

function #16 <?:591,597> (11 instructions, 44 bytes at 00000160F82A0060)
0 params, 2 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[592]	GETGLOBAL	R0 K0 ; R0 := 0x0032441c
	2	[592]	SETTABLE 	R0 K1 K2 ; R0["DisableLoadingDiorama"] := false
	3	[593]	GETGLOBAL	R0 K3 ; R0 := mDioramaLevel
	4	[593]	EQ       	1 R0 K4 ; if R0 == nil then PC := 11
	5	[593]	JMP      	11 ; PC := 11
	6	[594]	GETGLOBAL	R0 K5 ; R0 := 0x9ba7909f
	7	[594]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xb21930e8]
	8	[594]	CALL     	R0 2 1 ; R0(R1)
	9	[595]	LOADNIL  	R0 R0 ; R0 := nil
	10	[595]	SETGLOBALHASH	R0 K3 ; mDioramaLevel := R0
	11	[597]	RETURN   	R0 1 ; return 

function #17 <?:599,619> (39 instructions, 156 bytes at 00000160F82A01F0)
1 param, 5 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[600]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[600]	TEST     	R1 0 ; if not R1 then PC := 5
	3	[600]	JMP      	5 ; PC := 5
	4	[601]	RETURN   	R0 1 ; return 
	5	[604]	LOADNIL  	R1 R1 ; R1 := nil
	6	[605]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[605]	MOVE     	R3 R0 ; R3 := R0
	8	[605]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[605]	TEST     	R2 1 ; if R2 then PC := 18
	10	[605]	JMP      	18 ; PC := 18
	11	[605]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0xf2deaf69]
	12	[605]	GETGLOBAL	R4 K2 ; R4 := gLevelType
	13	[605]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	14	[605]	TEST     	R2 0 ; if not R2 then PC := 18
	15	[605]	JMP      	18 ; PC := 18
	16	[606]	MOVE     	R1 R0 ; R1 := R0
	17	[606]	JMP      	26 ; PC := 26
	18	[607]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	19	[607]	MOVE     	R3 R0 ; R3 := R0
	20	[607]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[607]	TEST     	R2 1 ; if R2 then PC := 26
	22	[607]	JMP      	26 ; PC := 26
	23	[608]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x1044f972]
	24	[608]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[608]	GETTABLE 	R1 R2 K4 ; R1 := R2["level"]
	26	[611]	GETGLOBAL	R2 K5 ; R2 := mDioramaLevel
	27	[611]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 30
	28	[611]	JMP      	30 ; PC := 30
	29	[612]	RETURN   	R0 1 ; return 
	30	[615]	GETGLOBAL	R2 K6 ; R2 := mDioramaLoader
	31	[615]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x522b2215]
	32	[615]	MOVE     	R4 R1 ; R4 := R1
	33	[615]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	34	[615]	TEST     	R2 0 ; if not R2 then PC := 39
	35	[615]	JMP      	39 ; PC := 39
	36	[616]	OP_LOADBOOL	R2 1 0 ; R2 := true
	37	[616]	SETGLOBALHASH	R2 K8 ; mInputBlocked := R2
	38	[617]	SETGLOBALHASH	R1 K5 ; mDioramaLevel := R1
	39	[619]	RETURN   	R0 1 ; return 

function #18 <?:621,648> (68 instructions, 272 bytes at 00000160F82A0480)
0 params, 7 slots, 4 upvalues, 0 locals, 26 constants, 0 functions
	1	[622]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[622]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[622]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	4	[622]	GETTABLE 	R2 R2 K3 ; R2 := R2["UIMovie_DetailedPurchaseDialog"]
	5	[622]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	6	[623]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	7	[623]	MOVE     	R2 R0 ; R2 := R0
	8	[623]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[623]	TEST     	R1 1 ; if R1 then PC := 12
	10	[623]	JMP      	12 ; PC := 12
	11	[624]	RETURN   	R0 1 ; return 
	12	[626]	GETGLOBAL	R1 K0 ; R1 := 0x9ba7909f
	13	[626]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbcfb64ab]
	14	[626]	GETGLOBAL	R3 K5 ; R3 := 0x82fd6cc3
	15	[626]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	16	[627]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	17	[627]	MOVE     	R3 R1 ; R3 := R1
	18	[627]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[627]	TEST     	R2 1 ; if R2 then PC := 25
	20	[627]	JMP      	25 ; PC := 25
	21	[628]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xe4162eed]
	22	[628]	LOADK    	R4 K7 ; R4 := "UnloadDiorama"
	23	[628]	LOADK    	R5 K8 ; R5 := ""
	24	[628]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	25	[631]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	26	[631]	GETGLOBAL	R3 K9 ; R3 := mDioramaLoader
	27	[631]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[631]	TEST     	R2 0 ; if not R2 then PC := 38
	29	[631]	JMP      	38 ; PC := 38
	30	[632]	GETGLOBAL	R2 K10 ; R2 := 0x2d0fad09
	31	[632]	LOADK    	R3 K11 ; R3 := "Lotus.Interface.Libs.DioramaLoader"
	32	[632]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[633]	GETTABLE 	R3 R2 K12 ; R3 := R2[0xbec1f4ee]
	34	[633]	GETGLOBAL	R4 K13 ; R4 := 0xae91e43b
	35	[633]	OP_LOADBOOL	R5 1 0 ; R5 := true
	36	[633]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	37	[633]	SETGLOBALHASH	R3 K9 ; mDioramaLoader := R3
	38	[636]	GETUPVAL 	R3 U0 ; R3 := U0
	39	[636]	CALL     	R3 1 1 ; R3()
	40	[637]	OP_LOADBOOL	R3 1 0 ; R3 := true
	41	[637]	SETUPVAL 	R3 U1 ; U1 := R3
	42	[638]	GETGLOBAL	R3 K2 ; R3 := 0x0032441c
	43	[638]	SETTABLE 	R3 K14 K15 ; R3["DisableLoadingDiorama"] := false
	44	[639]	GETGLOBAL	R3 K9 ; R3 := mDioramaLoader
	45	[639]	SETTABLE 	R3 K16 K15 ; R3["mSyncAvatars"] := false
	46	[641]	GETGLOBAL	R3 K17 ; R3 := _T
	47	[641]	GETTABLE 	R3 R3 K18 ; R3 := R3["eomScreenMode"]
	48	[641]	GETUPVAL 	R4 U2 ; R4 := U2
	49	[641]	GETTABLE 	R4 R4 K19 ; R4 := R4["ACTUAL_EOM"]
	50	[641]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 63
	51	[641]	JMP      	63 ; PC := 63
	52	[643]	GETGLOBAL	R3 K20 ; R3 := 0xbd496aa1
	53	[643]	GETTABLE 	R3 R3 K21 ; R3 := R3[0x42645da3]
	54	[643]	NEWTABLE 	R4 0 0 ; R4 := {}
	55	[643]	GETGLOBAL	R5 K22 ; R5 := 0x3e1de041
	56	[643]	SELF     	R5 R5 K23 ; R6 := R5; R5 := R5[0xed4e0128]
	57	[643]	CALL     	R5 2 0 ; R5,... := R5(R6)
	58	[643]	SETLIST  	R4 0 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
	59	[643]	OP_LOADBOOL	R5 1 0 ; R5 := true
	60	[643]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	61	[644]	SELF     	R4 R3 K24 ; R5 := R3; R4 := R3[0x28f42b1e]
	62	[644]	CALL     	R4 2 1 ; R4(R5)
	63	[647]	GETUPVAL 	R4 U3 ; R4 := U3
	64	[647]	GETGLOBAL	R5 K25 ; R5 := 0xb009bbc6
	65	[647]	GETGLOBAL	R6 K22 ; R6 := 0x3e1de041
	66	[647]	CALL     	R5 2 0 ; R5,... := R5(R6)
	67	[647]	CALL     	R4 0 1 ; R4(R5,...)
	68	[648]	RETURN   	R0 1 ; return 

function #19 <?:650,661> (36 instructions, 144 bytes at 00000160F82A0900)
0 params, 3 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[651]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[651]	GETTABLE 	R0 R0 K1 ; R0 := R0["eomScreenMode"]
	3	[651]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[651]	GETTABLE 	R1 R1 K2 ; R1 := R1["ACTUAL_EOM"]
	5	[651]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 36
	6	[651]	JMP      	36 ; PC := 36
	7	[651]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	8	[651]	GETGLOBAL	R1 K4 ; R1 := 0xbe190284
	9	[651]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[651]	TEST     	R0 1 ; if R0 then PC := 36
	11	[651]	JMP      	36 ; PC := 36
	12	[652]	GETGLOBAL	R0 K4 ; R0 := 0xbe190284
	13	[652]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xf230485c]
	14	[652]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[652]	TEST     	R0 1 ; if R0 then PC := 23
	16	[652]	JMP      	23 ; PC := 23
	17	[653]	OP_LOADBOOL	R0 1 0 ; R0 := true
	18	[653]	SETUPVAL 	R0 U1 ; U1 := R0
	19	[654]	GETGLOBAL	R0 K4 ; R0 := 0xbe190284
	20	[654]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xc02f2cb8]
	21	[654]	OP_LOADBOOL	R2 1 0 ; R2 := true
	22	[654]	CALL     	R0 3 1 ; R0(R1,R2)
	23	[656]	GETGLOBAL	R0 K7 ; R0 := mAskedPauseMenuToClose
	24	[656]	TEST     	R0 1 ; if R0 then PC := 36
	25	[656]	JMP      	36 ; PC := 36
	26	[656]	GETGLOBAL	R0 K4 ; R0 := 0xbe190284
	27	[656]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0x9ac735d2]
	28	[656]	CALL     	R0 2 2 ; R0 := R0(R1)
	29	[656]	TEST     	R0 0 ; if not R0 then PC := 36
	30	[656]	JMP      	36 ; PC := 36
	31	[657]	OP_LOADBOOL	R0 1 0 ; R0 := true
	32	[657]	SETGLOBALHASH	R0 K7 ; mAskedPauseMenuToClose := R0
	33	[658]	GETGLOBAL	R0 K4 ; R0 := 0xbe190284
	34	[658]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0xaeb5aa53]
	35	[658]	CALL     	R0 2 1 ; R0(R1)
	36	[661]	RETURN   	R0 1 ; return 

function #20 <?:663,665> (3 instructions, 12 bytes at 00000160F82A0B80)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[664]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[664]	CALL     	R0 1 1 ; R0()
	3	[665]	RETURN   	R0 1 ; return 

function #21 <?:667,764> (243 instructions, 972 bytes at 00000160F82A0C50)
0 params, 17 slots, 11 upvalues, 0 locals, 59 constants, 0 functions
	1	[668]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[668]	SETTABLE 	R0 K1 K2 ; R0["EOMOpen"] := nil
	3	[669]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[669]	GETTABLE 	R0 R0 K3 ; R0 := R0[0x9e3d3434]
	5	[669]	OP_LOADBOOL	R1 0 0 ; R1 := false
	6	[669]	CALL     	R0 2 1 ; R0(R1)
	7	[670]	GETGLOBAL	R0 K0 ; R0 := _T
	8	[670]	SETTABLE 	R0 K4 K2 ; R0["gToolTip"] := nil
	9	[671]	GETGLOBAL	R0 K0 ; R0 := _T
	10	[671]	SETTABLE 	R0 K5 K2 ; R0["InfoPopup_Data"] := nil
	11	[672]	GETGLOBAL	R0 K0 ; R0 := _T
	12	[672]	SETTABLE 	R0 K6 K2 ; R0["InfoPopup_Grid"] := nil
	13	[674]	GETGLOBAL	R0 K7 ; R0 := mWaitingForMissionComplete
	14	[674]	TEST     	R0 0 ; if not R0 then PC := 20
	15	[674]	JMP      	20 ; PC := 20
	16	[675]	GETUPVAL 	R0 U0 ; R0 := U0
	17	[675]	GETTABLE 	R0 R0 K8 ; R0 := R0[0x56d89411]
	18	[675]	OP_LOADBOOL	R1 0 0 ; R1 := false
	19	[675]	CALL     	R0 2 1 ; R0(R1)
	20	[677]	GETUPVAL 	R0 U1 ; R0 := U1
	21	[677]	TEST     	R0 0 ; if not R0 then PC := 27
	22	[677]	JMP      	27 ; PC := 27
	23	[678]	GETUPVAL 	R0 U0 ; R0 := U0
	24	[678]	GETTABLE 	R0 R0 K9 ; R0 := R0[0x154d0ad2]
	25	[678]	OP_LOADBOOL	R1 0 0 ; R1 := false
	26	[678]	CALL     	R0 2 1 ; R0(R1)
	27	[681]	GETUPVAL 	R0 U0 ; R0 := U0
	28	[681]	GETTABLE 	R0 R0 K10 ; R0 := R0[0xcdc34211]
	29	[681]	CALL     	R0 1 2 ; R0 := R0()
	30	[682]	GETGLOBAL	R1 K0 ; R1 := _T
	31	[682]	GETTABLE 	R1 R1 K11 ; R1 := R1["eomScreenMode"]
	32	[682]	GETUPVAL 	R2 U2 ; R2 := U2
	33	[682]	GETTABLE 	R2 R2 K12 ; R2 := R2["ACTUAL_EOM"]
	34	[682]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 37
	35	[682]	JMP      	37 ; PC := 37
	36	[682]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 37
	37	[682]	OP_LOADBOOL	R1 1 0 ; R1 := true
	38	[683]	TEST     	R1 1 ; if R1 then PC := 42
	39	[683]	JMP      	42 ; PC := 42
	40	[683]	TEST     	R0 1 ; if R0 then PC := 65
	41	[683]	JMP      	65 ; PC := 65
	42	[684]	GETGLOBAL	R2 K13 ; R2 := 0x76ea806b
	43	[684]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0x3f3ae64c]
	44	[684]	LOADK    	R4 := 0.000000
	45	[684]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	46	[685]	GETGLOBAL	R3 K15 ; R3 := 0x7b998233
	47	[685]	MOVE     	R4 R2 ; R4 := R2
	48	[685]	CALL     	R3 2 2 ; R3 := R3(R4)
	49	[685]	TEST     	R3 1 ; if R3 then PC := 65
	50	[685]	JMP      	65 ; PC := 65
	51	[686]	SELF     	R3 R2 K16 ; R4 := R2; R3 := R2[0x40e9c32b]
	52	[686]	CALL     	R3 2 2 ; R3 := R3(R4)
	53	[687]	LOADK    	R4 := 0.000000
	54	[688]	GETUPVAL 	R5 U3 ; R5 := U3
	55	[688]	TEST     	R5 0 ; if not R5 then PC := 58
	56	[688]	JMP      	58 ; PC := 58
	57	[689]	ADD      	R4 R4 K17 ; R4 := R4 + 1.000000
	58	[691]	GETUPVAL 	R5 U4 ; R5 := U4
	59	[691]	TEST     	R5 0 ; if not R5 then PC := 62
	60	[691]	JMP      	62 ; PC := 62
	61	[692]	ADD      	R4 R4 K18 ; R4 := R4 + 2.000000
	62	[694]	SELF     	R5 R3 K19 ; R6 := R3; R5 := R3[0x92d13f60]
	63	[694]	MOVE     	R7 R4 ; R7 := R4
	64	[694]	CALL     	R5 3 1 ; R5(R6,R7)
	65	[698]	GETUPVAL 	R5 U5 ; R5 := U5
	66	[698]	CALL     	R5 1 1 ; R5()
	67	[700]	GETUPVAL 	R5 U6 ; R5 := U6
	68	[700]	GETTABLE 	R5 R5 K20 ; R5 := R5[0xc4b927cd]
	69	[700]	CALL     	R5 1 1 ; R5()
	70	[702]	GETUPVAL 	R5 U7 ; R5 := U7
	71	[702]	TEST     	R5 0 ; if not R5 then PC := 88
	72	[702]	JMP      	88 ; PC := 88
	73	[702]	GETGLOBAL	R5 K15 ; R5 := 0x7b998233
	74	[702]	GETGLOBAL	R6 K21 ; R6 := 0xbe190284
	75	[702]	CALL     	R5 2 2 ; R5 := R5(R6)
	76	[702]	TEST     	R5 1 ; if R5 then PC := 88
	77	[702]	JMP      	88 ; PC := 88
	78	[702]	GETGLOBAL	R5 K0 ; R5 := _T
	79	[702]	GETTABLE 	R5 R5 K11 ; R5 := R5["eomScreenMode"]
	80	[702]	GETUPVAL 	R6 U2 ; R6 := U2
	81	[702]	GETTABLE 	R6 R6 K12 ; R6 := R6["ACTUAL_EOM"]
	82	[702]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 88
	83	[702]	JMP      	88 ; PC := 88
	84	[703]	GETGLOBAL	R5 K21 ; R5 := 0xbe190284
	85	[703]	SELF     	R5 R5 K22 ; R6 := R5; R5 := R5[0xc02f2cb8]
	86	[703]	OP_LOADBOOL	R7 0 0 ; R7 := false
	87	[703]	CALL     	R5 3 1 ; R5(R6,R7)
	88	[706]	GETGLOBAL	R5 K15 ; R5 := 0x7b998233
	89	[706]	GETGLOBAL	R6 K23 ; R6 := mPlayerIconFx
	90	[706]	CALL     	R5 2 2 ; R5 := R5(R6)
	91	[706]	TEST     	R5 1 ; if R5 then PC := 96
	92	[706]	JMP      	96 ; PC := 96
	93	[707]	GETGLOBAL	R5 K23 ; R5 := mPlayerIconFx
	94	[707]	SELF     	R5 R5 K24 ; R6 := R5; R5 := R5[0xa2880940]
	95	[707]	CALL     	R5 2 1 ; R5(R6)
	96	[710]	GETGLOBAL	R5 K15 ; R5 := 0x7b998233
	97	[710]	GETGLOBAL	R6 K25 ; R6 := mPvpMovie
	98	[710]	CALL     	R5 2 2 ; R5 := R5(R6)
	99	[710]	TEST     	R5 1 ; if R5 then PC := 104
	100	[710]	JMP      	104 ; PC := 104
	101	[711]	GETGLOBAL	R5 K25 ; R5 := mPvpMovie
	102	[711]	SELF     	R5 R5 K26 ; R6 := R5; R5 := R5[0x32302b4a]
	103	[711]	CALL     	R5 2 1 ; R5(R6)
	104	[714]	GETUPVAL 	R5 U8 ; R5 := U8
	105	[714]	TEST     	R5 0 ; if not R5 then PC := 168
	106	[714]	JMP      	168 ; PC := 168
	107	[715]	GETGLOBAL	R5 K15 ; R5 := 0x7b998233
	108	[715]	GETGLOBAL	R6 K27 ; R6 := mGameData
	109	[715]	CALL     	R5 2 2 ; R5 := R5(R6)
	110	[715]	TEST     	R5 1 ; if R5 then PC := 136
	111	[715]	JMP      	136 ; PC := 136
	112	[716]	GETGLOBAL	R5 K0 ; R5 := _T
	113	[716]	GETGLOBAL	R6 K27 ; R6 := mGameData
	114	[716]	SELF     	R6 R6 K29 ; R7 := R6; R6 := R6[0x4b0ebe0c]
	115	[716]	CALL     	R6 2 2 ; R6 := R6(R7)
	116	[716]	SETTABLE 	R5 K28 R6 ; R5["DesiredGoToNode"] := R6
	117	[718]	GETGLOBAL	R5 K27 ; R5 := mGameData
	118	[718]	SELF     	R5 R5 K30 ; R6 := R5; R5 := R5[0x30d7508a]
	119	[718]	CALL     	R5 2 2 ; R5 := R5(R6)
	120	[719]	GETUPVAL 	R6 U0 ; R6 := U0
	121	[719]	GETTABLE 	R6 R6 K31 ; R6 := R6[0x2090e949]
	122	[719]	MOVE     	R7 R5 ; R7 := R5
	123	[719]	CALL     	R6 2 2 ; R6 := R6(R7)
	124	[722]	GETGLOBAL	R7 K0 ; R7 := _T
	125	[722]	SETTABLE 	R7 K32 R6 ; R7["DesiredGoToNodeTag"] := R6
	126	[724]	GETGLOBAL	R7 K27 ; R7 := mGameData
	127	[724]	SELF     	R7 R7 K33 ; R8 := R7; R7 := R7[0x24e9c7b4]
	128	[724]	CALL     	R7 2 2 ; R7 := R7(R8)
	129	[725]	EQ       	1 R7 K34 ; if R7 == "" then PC := 134
	130	[725]	JMP      	134 ; PC := 134
	131	[726]	GETGLOBAL	R8 K0 ; R8 := _T
	132	[726]	SETTABLE 	R8 K35 R7 ; R8["MissionToSkipTo"] := R7
	133	[726]	JMP      	136 ; PC := 136
	134	[728]	GETGLOBAL	R8 K0 ; R8 := _T
	135	[728]	SETTABLE 	R8 K35 K2 ; R8["MissionToSkipTo"] := nil
	136	[732]	GETGLOBAL	R8 K0 ; R8 := _T
	137	[732]	GETTABLE 	R8 R8 K36 ; R8 := R8["TopMenuOpen"]
	138	[732]	TEST     	R8 0 ; if not R8 then PC := 154
	139	[732]	JMP      	154 ; PC := 154
	140	[733]	GETGLOBAL	R8 K37 ; R8 := 0x9ba7909f
	141	[733]	SELF     	R8 R8 K38 ; R9 := R8; R8 := R8[0xbcfb64ab]
	142	[733]	GETGLOBAL	R10 K39 ; R10 := 0x6a400c4e
	143	[733]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	144	[734]	GETGLOBAL	R9 K15 ; R9 := 0x7b998233
	145	[734]	MOVE     	R10 R8 ; R10 := R8
	146	[734]	CALL     	R9 2 2 ; R9 := R9(R10)
	147	[734]	TEST     	R9 1 ; if R9 then PC := 182
	148	[734]	JMP      	182 ; PC := 182
	149	[735]	SELF     	R9 R8 K40 ; R10 := R8; R9 := R8[0xe4162eed]
	150	[735]	LOADK    	R11 K41 ; R11 := "TriggerConsole"
	151	[735]	LOADK    	R12 K42 ; R12 := "SolarMapOrigin"
	152	[735]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	153	[736]	JMP      	182 ; PC := 182
	154	[738]	GETGLOBAL	R9 K0 ; R9 := _T
	155	[738]	SETTABLE 	R9 K43 K42 ; R9["triggeredConsoleTag"] := "SolarMapOrigin"
	156	[739]	GETUPVAL 	R9 U9 ; R9 := U9
	157	[739]	GETTABLE 	R9 R9 K44 ; R9 := R9[0xa9882367]
	158	[739]	LOADK    	R10 K45 ; R10 := "ConsoleTeleportAndActivate"
	159	[739]	CALL     	R9 2 2 ; R9 := R9(R10)
	160	[740]	GETGLOBAL	R10 K15 ; R10 := 0x7b998233
	161	[740]	MOVE     	R11 R9 ; R11 := R9
	162	[740]	CALL     	R10 2 2 ; R10 := R10(R11)
	163	[740]	TEST     	R10 1 ; if R10 then PC := 182
	164	[740]	JMP      	182 ; PC := 182
	165	[741]	SELF     	R10 R9 K46 ; R11 := R9; R10 := R9[0xd91e1179]
	166	[741]	CALL     	R10 2 1 ; R10(R11)
	167	[743]	JMP      	182 ; PC := 182
	168	[744]	TEST     	R0 1 ; if R0 then PC := 182
	169	[744]	JMP      	182 ; PC := 182
	170	[744]	GETGLOBAL	R10 K15 ; R10 := 0x7b998233
	171	[744]	GETGLOBAL	R11 K27 ; R11 := mGameData
	172	[744]	CALL     	R10 2 2 ; R10 := R10(R11)
	173	[744]	TEST     	R10 1 ; if R10 then PC := 182
	174	[744]	JMP      	182 ; PC := 182
	175	[745]	GETGLOBAL	R10 K0 ; R10 := _T
	176	[745]	GETGLOBAL	R11 K48 ; R11 := 0x0469f296
	177	[745]	GETGLOBAL	R12 K27 ; R12 := mGameData
	178	[745]	SELF     	R12 R12 K29 ; R13 := R12; R12 := R12[0x4b0ebe0c]
	179	[745]	CALL     	R12 2 0 ; R12,... := R12(R13)
	180	[745]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	181	[745]	SETTABLE 	R10 K47 R11 ; R10[0x7b998233] := R11
	182	[748]	GETGLOBAL	R10 K15 ; R10 := 0x7b998233
	183	[748]	GETGLOBAL	R11 K49 ; R11 := mRewardGrid
	184	[748]	CALL     	R10 2 2 ; R10 := R10(R11)
	185	[748]	TEST     	R10 1 ; if R10 then PC := 208
	186	[748]	JMP      	208 ; PC := 208
	187	[749]	GETGLOBAL	R10 K49 ; R10 := mRewardGrid
	188	[749]	SELF     	R10 R10 K50 ; R11 := R10; R10 := R10[0xc32ccf2e]
	189	[749]	CALL     	R10 2 2 ; R10 := R10(R11)
	190	[750]	GETGLOBAL	R11 K15 ; R11 := 0x7b998233
	191	[750]	MOVE     	R12 R10 ; R12 := R10
	192	[750]	CALL     	R11 2 2 ; R11 := R11(R12)
	193	[750]	TEST     	R11 1 ; if R11 then PC := 208
	194	[750]	JMP      	208 ; PC := 208
	195	[750]	GETGLOBAL	R11 K15 ; R11 := 0x7b998233
	196	[750]	GETGLOBAL	R12 K51 ; R12 := 0x25d99d89
	197	[750]	CALL     	R11 2 2 ; R11 := R11(R12)
	198	[750]	TEST     	R11 1 ; if R11 then PC := 208
	199	[750]	JMP      	208 ; PC := 208
	200	[751]	GETGLOBAL	R11 K52 ; R11 := 0xae91e43b
	201	[751]	SELF     	R11 R11 K53 ; R12 := R11; R11 := R11[0x492f9da2]
	202	[751]	CALL     	R11 2 2 ; R11 := R11(R12)
	203	[752]	GETGLOBAL	R12 K51 ; R12 := 0x25d99d89
	204	[752]	SELF     	R12 R12 K54 ; R13 := R12; R12 := R12[0x7855ea52]
	205	[752]	MOVE     	R14 R11 ; R14 := R11
	206	[752]	MOVE     	R15 R10 ; R15 := R10
	207	[752]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	208	[756]	GETGLOBAL	R12 K0 ; R12 := _T
	209	[756]	GETTABLE 	R12 R12 K36 ; R12 := R12["TopMenuOpen"]
	210	[756]	TEST     	R12 0 ; if not R12 then PC := 229
	211	[756]	JMP      	229 ; PC := 229
	212	[756]	GETUPVAL 	R12 U10 ; R12 := U10
	213	[756]	TEST     	R12 0 ; if not R12 then PC := 229
	214	[756]	JMP      	229 ; PC := 229
	215	[757]	GETGLOBAL	R12 K37 ; R12 := 0x9ba7909f
	216	[757]	SELF     	R12 R12 K38 ; R13 := R12; R12 := R12[0xbcfb64ab]
	217	[757]	GETGLOBAL	R14 K39 ; R14 := 0x6a400c4e
	218	[757]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	219	[758]	GETGLOBAL	R13 K15 ; R13 := 0x7b998233
	220	[758]	MOVE     	R14 R12 ; R14 := R12
	221	[758]	CALL     	R13 2 2 ; R13 := R13(R14)
	222	[758]	TEST     	R13 1 ; if R13 then PC := 243
	223	[758]	JMP      	243 ; PC := 243
	224	[759]	SELF     	R13 R12 K40 ; R14 := R12; R13 := R12[0xe4162eed]
	225	[759]	LOADK    	R15 K55 ; R15 := "SetWasUIEnabled"
	226	[759]	LOADK    	R16 K56 ; R16 := "false"
	227	[759]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	228	[760]	JMP      	243 ; PC := 243
	229	[761]	GETGLOBAL	R13 K0 ; R13 := _T
	230	[761]	GETTABLE 	R13 R13 K36 ; R13 := R13["TopMenuOpen"]
	231	[761]	TEST     	R13 1 ; if R13 then PC := 243
	232	[761]	JMP      	243 ; PC := 243
	233	[761]	GETUPVAL 	R13 U10 ; R13 := U10
	234	[761]	TEST     	R13 0 ; if not R13 then PC := 243
	235	[761]	JMP      	243 ; PC := 243
	236	[761]	GETGLOBAL	R13 K0 ; R13 := _T
	237	[761]	GETTABLE 	R13 R13 K57 ; R13 := R13["DisableUIInput"]
	238	[761]	TEST     	R13 0 ; if not R13 then PC := 243
	239	[761]	JMP      	243 ; PC := 243
	240	[762]	GETGLOBAL	R13 K0 ; R13 := _T
	241	[762]	GETTABLE 	R13 R13 K58 ; R13 := R13[0x80172c74]
	242	[762]	CALL     	R13 1 1 ; R13()
	243	[764]	RETURN   	R0 1 ; return 

function #22 <?:766,768> (14 instructions, 56 bytes at 00000160F82A1960)
0 params, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[767]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[767]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[767]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[767]	TEST     	R0 1 ; if R0 then PC := 11
	5	[767]	JMP      	11 ; PC := 11
	6	[767]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[767]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[767]	GETGLOBAL	R2 K3 ; R2 := gLotusPvpGameRulesType
	9	[767]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[767]	JMP      	13 ; PC := 13
	11	[767]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 12
	12	[767]	OP_LOADBOOL	R0 1 0 ; R0 := true
	13	[767]	RETURN   	R0 2 ; return R0 
	14	[768]	RETURN   	R0 1 ; return 

function #23 <?:770,772> (14 instructions, 56 bytes at 00000160F82A1AE0)
0 params, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[771]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[771]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[771]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[771]	TEST     	R0 1 ; if R0 then PC := 11
	5	[771]	JMP      	11 ; PC := 11
	6	[771]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[771]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[771]	GETGLOBAL	R2 K3 ; R2 := gLotusPveDeathmatchGameRulesType
	9	[771]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[771]	JMP      	13 ; PC := 13
	11	[771]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 12
	12	[771]	OP_LOADBOOL	R0 1 0 ; R0 := true
	13	[771]	RETURN   	R0 2 ; return R0 
	14	[772]	RETURN   	R0 1 ; return 

function #24 <?:774,777> (13 instructions, 52 bytes at 00000160F82A1C60)
0 params, 2 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[776]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[776]	CALL     	R0 1 2 ; R0 := R0()
	3	[776]	TEST     	R0 0 ; if not R0 then PC := 12
	4	[776]	JMP      	12 ; PC := 12
	5	[776]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	6	[776]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x5fe24169]
	7	[776]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[776]	EQ       	1 R0 K3 ; if R0 == 1.000000 then PC := 11
	9	[776]	JMP      	11 ; PC := 11
	10	[776]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 11
	11	[776]	OP_LOADBOOL	R0 1 0 ; R0 := true
	12	[776]	RETURN   	R0 2 ; return R0 
	13	[777]	RETURN   	R0 1 ; return 

function #25 <?:779,797> (51 instructions, 204 bytes at 00000160F82A1DE0)
0 params, 9 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[780]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[780]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[780]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[780]	TEST     	R0 1 ; if R0 then PC := 49
	5	[780]	JMP      	49 ; PC := 49
	6	[780]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[780]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x32316a21]
	8	[780]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[780]	TEST     	R0 0 ; if not R0 then PC := 49
	10	[780]	JMP      	49 ; PC := 49
	11	[781]	GETGLOBAL	R0 K3 ; R0 := 0x89326c93
	12	[781]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xfb64e76c]
	13	[781]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[782]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	15	[782]	MOVE     	R2 R0 ; R2 := R0
	16	[782]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[782]	TEST     	R1 1 ; if R1 then PC := 49
	18	[782]	JMP      	49 ; PC := 49
	19	[784]	LOADK    	R1 := 0.000000
	20	[784]	GETGLOBAL	R2 K5 ; R2 := 0xba7dfcd2
	21	[784]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x1ff3fca6]
	22	[784]	MOVE     	R4 R0 ; R4 := R0
	23	[784]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	24	[784]	SUB      	R2 R2 K7 ; R2 := R2 - 1.000000
	25	[784]	LOADK    	R3 := 1.000000
	26	[784]	FORPREP  	R1 48 ; R1 -= R3; PC := 48
	27	[785]	GETGLOBAL	R5 K5 ; R5 := 0xba7dfcd2
	28	[785]	SELF     	R5 R5 K8 ; R6 := R5; R5 := R5[0x94df81ff]
	29	[785]	MOVE     	R7 R0 ; R7 := R0
	30	[785]	MOVE     	R8 R4 ; R8 := R4
	31	[785]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	32	[786]	GETGLOBAL	R6 K9 ; R6 := 0x25d99d89
	33	[786]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0x69727e0b]
	34	[786]	CALL     	R6 2 2 ; R6 := R6(R7)
	35	[786]	SELF     	R6 R6 K11 ; R7 := R6; R6 := R6[0x11900845]
	36	[786]	MOVE     	R8 R5 ; R8 := R5
	37	[786]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	38	[787]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	39	[787]	MOVE     	R8 R6 ; R8 := R6
	40	[787]	CALL     	R7 2 2 ; R7 := R7(R8)
	41	[787]	TEST     	R7 1 ; if R7 then PC := 48
	42	[787]	JMP      	48 ; PC := 48
	43	[788]	GETTABLE 	R7 R6 K12 ; R7 := R6["mCategory"]
	44	[788]	EQ       	0 R7 K14 ; if R7 ~= 0.000000 then PC := 48
	45	[788]	JMP      	48 ; PC := 48
	46	[789]	OP_LOADBOOL	R7 1 0 ; R7 := true
	47	[789]	RETURN   	R7 2 ; return R7 
	48	[784]	FORLOOP  	R1 27 ; R1 += R3; if R1 <= R2 then begin PC := 27; R4 := R1 end
	49	[796]	OP_LOADBOOL	R7 0 0 ; R7 := false
	50	[796]	RETURN   	R7 2 ; return R7 
	51	[797]	RETURN   	R0 1 ; return 

function #26 <?:799,804> (12 instructions, 48 bytes at 00000160F82A2130)
0 params, 5 slots, 3 upvalues, 0 locals, 4 constants, 0 functions
	1	[800]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[800]	CALL     	R0 1 2 ; R0 := R0()
	3	[801]	GETTABLE 	R1 R0 K0 ; R1 := R0["location"]
	4	[801]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x6d604ba7]
	5	[801]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[803]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[803]	GETUPVAL 	R3 U2 ; R3 := U2
	8	[803]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x719234cc]
	9	[803]	MOVE     	R4 R1 ; R4 := R1
	10	[803]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[803]	SETTABLE 	R2 K2 R3 ; R2["pvpType"] := R3
	12	[804]	RETURN   	R0 1 ; return 

function #27 <?:806,817> (29 instructions, 116 bytes at 00000160F82A2290)
1 param, 4 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[808]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[808]	MOVE     	R2 R0 ; R2 := R0
	3	[808]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[808]	TEST     	R1 1 ; if R1 then PC := 11
	5	[808]	JMP      	11 ; PC := 11
	6	[808]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xf2deaf69]
	7	[808]	GETGLOBAL	R3 K2 ; R3 := gLotusArtifactUpgradeType
	8	[808]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	9	[808]	TEST     	R1 1 ; if R1 then PC := 13
	10	[808]	JMP      	13 ; PC := 13
	11	[809]	OP_LOADBOOL	R1 0 0 ; R1 := false
	12	[809]	RETURN   	R1 2 ; return R1 
	13	[812]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xf2deaf69]
	14	[812]	GETUPVAL 	R3 U0 ; R3 := U0
	15	[812]	GETTABLE 	R3 R3 K3 ; R3 := R3["Enhancement"]
	16	[812]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	17	[812]	TEST     	R1 1 ; if R1 then PC := 25
	18	[812]	JMP      	25 ; PC := 25
	19	[812]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xf2deaf69]
	20	[812]	GETUPVAL 	R3 U0 ; R3 := U0
	21	[812]	GETTABLE 	R3 R3 K4 ; R3 := R3["LegendaryCore"]
	22	[812]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	23	[812]	TEST     	R1 0 ; if not R1 then PC := 27
	24	[812]	JMP      	27 ; PC := 27
	25	[813]	OP_LOADBOOL	R1 0 0 ; R1 := false
	26	[813]	RETURN   	R1 2 ; return R1 
	27	[816]	OP_LOADBOOL	R1 1 0 ; R1 := true
	28	[816]	RETURN   	R1 2 ; return R1 
	29	[817]	RETURN   	R0 1 ; return 

function #28 <?:819,867> (122 instructions, 488 bytes at 00000160F82A24A0)
0 params, 21 slots, 2 upvalues, 0 locals, 24 constants, 1 function
	1	[820]	GETGLOBAL	R0 K0 ; R0 := mPlayersForStats
	2	[820]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 120
	3	[820]	JMP      	120 ; PC := 120
	4	[821]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[821]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xcdc34211]
	6	[821]	CALL     	R0 1 2 ; R0 := R0()
	7	[821]	TEST     	R0 1 ; if R0 then PC := 18
	8	[821]	JMP      	18 ; PC := 18
	9	[821]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	10	[821]	GETGLOBAL	R1 K4 ; R1 := mGameData
	11	[821]	CALL     	R0 2 2 ; R0 := R0(R1)
	12	[821]	TEST     	R0 1 ; if R0 then PC := 18
	13	[821]	JMP      	18 ; PC := 18
	14	[821]	GETGLOBAL	R0 K4 ; R0 := mGameData
	15	[821]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x01f12112]
	16	[821]	CALL     	R0 2 2 ; R0 := R0(R1)
	17	[821]	JMP      	20 ; PC := 20
	18	[821]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 19
	19	[821]	OP_LOADBOOL	R0 1 0 ; R0 := true
	20	[822]	TEST     	R0 1 ; if R0 then PC := 27
	21	[822]	JMP      	27 ; PC := 27
	22	[823]	GETGLOBAL	R1 K6 ; R1 := 0xe7f2b02f
	23	[823]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x6d0aa187]
	24	[823]	CALL     	R1 2 2 ; R1 := R1(R2)
	25	[823]	SETGLOBALHASH	R1 K0 ; mPlayersForStats := R1
	26	[823]	JMP      	56 ; PC := 56
	27	[825]	GETGLOBAL	R1 K4 ; R1 := mGameData
	28	[825]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xaebb9855]
	29	[825]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[825]	SETGLOBALHASH	R1 K0 ; mPlayersForStats := R1
	31	[828]	GETGLOBAL	R1 K0 ; R1 := mPlayersForStats
	32	[828]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 56
	33	[828]	JMP      	56 ; PC := 56
	34	[829]	NEWTABLE 	R1 0 0 ; R1 := {}
	35	[829]	SETGLOBALHASH	R1 K0 ; mPlayersForStats := R1
	36	[831]	GETGLOBAL	R1 K9 ; R1 := 0x76ea806b
	37	[831]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x3f3ae64c]
	38	[831]	LOADK    	R3 := 0.000000
	39	[831]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	40	[832]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	41	[832]	MOVE     	R3 R1 ; R3 := R1
	42	[832]	CALL     	R2 2 2 ; R2 := R2(R3)
	43	[832]	TEST     	R2 1 ; if R2 then PC := 56
	44	[832]	JMP      	56 ; PC := 56
	45	[833]	GETGLOBAL	R2 K11 ; R2 := 0x6c97a788
	46	[833]	GETTABLE 	R2 R2 K12 ; R2 := R2[0xd6ea5f1c]
	47	[833]	CALL     	R2 1 2 ; R2 := R2()
	48	[834]	SELF     	R3 R1 K14 ; R4 := R1; R3 := R1[0x5ca33548]
	49	[834]	CALL     	R3 2 2 ; R3 := R3(R4)
	50	[834]	SETTABLE 	R2 K13 R3 ; R2["name"] := R3
	51	[836]	GETGLOBAL	R3 K15 ; R3 := 0x33bdd652
	52	[836]	GETTABLE 	R3 R3 K16 ; R3 := R3[0x23d5322f]
	53	[836]	GETGLOBAL	R4 K0 ; R4 := mPlayersForStats
	54	[836]	MOVE     	R5 R2 ; R5 := R2
	55	[836]	CALL     	R3 3 1 ; R3(R4,R5)
	56	[841]	GETGLOBAL	R3 K17 ; R3 := 0xc8802016
	57	[841]	GETGLOBAL	R4 K0 ; R4 := mPlayersForStats
	58	[841]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	59	[841]	JMP      	71 ; PC := 71
	60	[842]	GETTABLE 	R8 R7 K13 ; R8 := R7["name"]
	61	[842]	GETUPVAL 	R9 U0 ; R9 := U0
	62	[842]	GETTABLE 	R9 R9 K18 ; R9 := R9["HIDDEN_PLAYER_NAME"]
	63	[842]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 71
	64	[842]	JMP      	71 ; PC := 71
	65	[843]	GETGLOBAL	R8 K15 ; R8 := 0x33bdd652
	66	[843]	GETTABLE 	R8 R8 K19 ; R8 := R8[0x9c1f3b5a]
	67	[843]	GETGLOBAL	R9 K0 ; R9 := mPlayersForStats
	68	[843]	MOVE     	R10 R6 ; R10 := R6
	69	[843]	CALL     	R8 3 1 ; R8(R9,R10)
	70	[844]	JMP      	73 ; PC := 73
	71	[841]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 60; R5 := R6 end
	72	[845]	JMP      	60 ; PC := 60
	73	[848]	GETUPVAL 	R8 U1 ; R8 := U1
	74	[848]	CALL     	R8 1 2 ; R8 := R8()
	75	[848]	TEST     	R8 0 ; if not R8 then PC := 97
	76	[848]	JMP      	97 ; PC := 97
	77	[848]	GETGLOBAL	R8 K0 ; R8 := mPlayersForStats
	78	[848]	TEST     	R8 0 ; if not R8 then PC := 97
	79	[848]	JMP      	97 ; PC := 97
	80	[849]	NEWTABLE 	R8 0 0 ; R8 := {}
	81	[850]	GETGLOBAL	R9 K17 ; R9 := 0xc8802016
	82	[850]	GETGLOBAL	R10 K0 ; R10 := mPlayersForStats
	83	[850]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	84	[850]	JMP      	90 ; PC := 90
	85	[851]	GETGLOBAL	R14 K15 ; R14 := 0x33bdd652
	86	[851]	GETTABLE 	R14 R14 K16 ; R14 := R14[0x23d5322f]
	87	[851]	MOVE     	R15 R8 ; R15 := R8
	88	[851]	MOVE     	R16 R13 ; R16 := R13
	89	[851]	CALL     	R14 3 1 ; R14(R15,R16)
	90	[850]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 85; R11 := R12 end
	91	[851]	JMP      	85 ; PC := 85
	92	[853]	GETGLOBAL	R14 K15 ; R14 := 0x33bdd652
	93	[853]	GETTABLE 	R14 R14 K20 ; R14 := R14[0xf21b1d8e]
	94	[853]	GETGLOBAL	R15 K0 ; R15 := mPlayersForStats
	95	[856]	CLOSURE  	R16 0 ; R16 := closure(Function #1)
	96	[853]	CALL     	R14 3 1 ; R14(R15,R16)
	97	[859]	GETGLOBAL	R14 K21 ; R14 := _T
	98	[859]	GETTABLE 	R14 R14 K22 ; R14 := R14["TestPlayerCount"]
	99	[859]	EQ       	1 R14 K1 ; if R14 == nil then PC := 120
	100	[859]	JMP      	120 ; PC := 120
	101	[859]	GETGLOBAL	R14 K0 ; R14 := mPlayersForStats
	102	[859]	LEN      	R14 R14 ; R14 := # R14
	103	[859]	LT       	0 K23 R14 ; if 0.000000 >= R14 then PC := 120
	104	[859]	JMP      	120 ; PC := 120
	105	[860]	LOADK    	R14 := 1.000000
	106	[860]	GETGLOBAL	R15 K21 ; R15 := _T
	107	[860]	GETTABLE 	R15 R15 K22 ; R15 := R15["TestPlayerCount"]
	108	[860]	GETGLOBAL	R16 K0 ; R16 := mPlayersForStats
	109	[860]	LEN      	R16 R16 ; R16 := # R16
	110	[860]	SUB      	R15 R15 R16 ; R15 := R15 - R16
	111	[860]	LOADK    	R16 := 1.000000
	112	[860]	FORPREP  	R14 119 ; R14 -= R16; PC := 119
	113	[861]	GETGLOBAL	R18 K15 ; R18 := 0x33bdd652
	114	[861]	GETTABLE 	R18 R18 K16 ; R18 := R18[0x23d5322f]
	115	[861]	GETGLOBAL	R19 K0 ; R19 := mPlayersForStats
	116	[861]	GETGLOBAL	R20 K0 ; R20 := mPlayersForStats
	117	[861]	GETTABLE 	R20 R20 R17 ; R20 := R20[R17]
	118	[861]	CALL     	R18 3 1 ; R18(R19,R20)
	119	[860]	FORLOOP  	R14 113 ; R14 += R16; if R14 <= R15 then begin PC := 113; R17 := R14 end
	120	[866]	GETGLOBAL	R18 K0 ; R18 := mPlayersForStats
	121	[866]	RETURN   	R18 2 ; return R18 
	122	[867]	RETURN   	R0 1 ; return 

function #29 <?:869,875> (36 instructions, 144 bytes at 00000160F5393660)
0 params, 7 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[870]	LOADK    	R0 := 4.000000
	2	[871]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	3	[871]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x6b837788]
	4	[871]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[871]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	6	[871]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xaf9fda9f]
	7	[871]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[871]	DIV      	R1 R1 R2 ; R1 := R1 / R2
	9	[871]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	10	[871]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x2cc9d281]
	11	[871]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[871]	MUL      	R1 R1 R2 ; R1 := R1 * R2
	13	[872]	GETGLOBAL	R2 K4 ; R2 := 0x5bced4c4
	14	[872]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb62ecfe0]
	15	[872]	LOADK    	R3 := 1600.000000
	16	[872]	MOVE     	R4 R1 ; R4 := R1
	17	[872]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	18	[872]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	19	[872]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0x091c120e]
	20	[872]	CALL     	R3 2 2 ; R3 := R3(R4)
	21	[872]	MUL      	R3 R3 K7 ; R3 := R3 * 0.100000
	22	[872]	SUB      	R2 R2 R3 ; R2 := R2 - R3
	23	[874]	GETGLOBAL	R3 K4 ; R3 := 0x5bced4c4
	24	[874]	GETTABLE 	R3 R3 K9 ; R3 := R3[0x55f27c30]
	25	[874]	GETGLOBAL	R4 K4 ; R4 := 0x5bced4c4
	26	[874]	GETTABLE 	R4 R4 K5 ; R4 := R4[0xb62ecfe0]
	27	[874]	GETUPVAL 	R5 U0 ; R5 := U0
	28	[874]	CALL     	R5 1 2 ; R5 := R5()
	29	[874]	LEN      	R5 R5 ; R5 := # R5
	30	[874]	MOVE     	R6 R0 ; R6 := R0
	31	[874]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	32	[874]	ADD      	R4 R4 K10 ; R4 := R4 + 1.000000
	33	[874]	DIV      	R4 R2 R4 ; R4 := R2 / R4
	34	[874]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[874]	SETGLOBALHASH	R3 K8 ; mStatColumnSeparation := R3
	36	[875]	RETURN   	R0 1 ; return 

function #30 <?:877,888> (24 instructions, 96 bytes at 00000160F53938F0)
1 param, 5 slots, 3 upvalues, 0 locals, 5 constants, 0 functions
	1	[878]	GETGLOBAL	R1 K0 ; R1 := mStatColumnSeparation
	2	[878]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 6
	3	[878]	JMP      	6 ; PC := 6
	4	[879]	GETUPVAL 	R1 U0 ; R1 := U0
	5	[879]	CALL     	R1 1 1 ; R1()
	6	[882]	GETUPVAL 	R1 U1 ; R1 := U1
	7	[882]	CALL     	R1 1 2 ; R1 := R1()
	8	[882]	LEN      	R1 R1 ; R1 := # R1
	9	[883]	GETGLOBAL	R2 K0 ; R2 := mStatColumnSeparation
	10	[883]	MUL      	R2 R2 K2 ; R2 := R2 * 0.500000
	11	[883]	UNM      	R2 R2 ; R2 := ^ R2
	12	[883]	SUB      	R3 R1 K3 ; R3 := R1 - 1.000000
	13	[883]	MUL      	R2 R2 R3 ; R2 := R2 * R3
	14	[884]	EQ       	0 R1 K3 ; if R1 ~= 1.000000 then PC := 19
	15	[884]	JMP      	19 ; PC := 19
	16	[885]	GETUPVAL 	R3 U2 ; R3 := U2
	17	[885]	DIV      	R3 R3 K4 ; R3 := R3 / 2.000000
	18	[885]	SUB      	R2 R2 R3 ; R2 := R2 - R3
	19	[887]	SUB      	R3 R0 K3 ; R3 := R0 - 1.000000
	20	[887]	GETGLOBAL	R4 K0 ; R4 := mStatColumnSeparation
	21	[887]	MUL      	R3 R3 R4 ; R3 := R3 * R4
	22	[887]	ADD      	R3 R2 R3 ; R3 := R2 + R3
	23	[887]	RETURN   	R3 2 ; return R3 
	24	[888]	RETURN   	R0 1 ; return 

function #31 <?:890,948> (212 instructions, 848 bytes at 00000160F5393AC0)
1 param, 27 slots, 2 upvalues, 0 locals, 55 constants, 0 functions
	1	[891]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[891]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 5
	3	[891]	JMP      	5 ; PC := 5
	4	[892]	RETURN   	R0 1 ; return 
	5	[895]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[895]	GETTABLE 	R1 R1 K1 ; R1 := R1["FloatingContentInt"]
	7	[897]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	8	[897]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x20b98db3]
	9	[897]	GETTABLE 	R4 R0 K4 ; R4 := R0["mClipName"]
	10	[897]	LOADK    	R5 K5 ; R5 := ".Label.text"
	11	[897]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	12	[897]	GETTABLE 	R5 R0 K6 ; R5 := R0["Label"]
	13	[897]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	14	[898]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	15	[898]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xf64b7262]
	16	[898]	GETTABLE 	R4 R0 K4 ; R4 := R0["mClipName"]
	17	[898]	LOADK    	R5 K6 ; R5 := "Label"
	18	[898]	LOADK    	R6 := 9.000000
	19	[898]	MOVE     	R7 R1 ; R7 := R1
	20	[898]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	21	[900]	LOADNIL  	R2 R2 ; R2 := nil
	22	[902]	GETTABLE 	R3 R0 K8 ; R3 := R0["Value"]
	23	[902]	LEN      	R3 R3 ; R3 := # R3
	24	[903]	GETGLOBAL	R4 K9 ; R4 := 0x03f57322
	25	[903]	GETTABLE 	R5 R0 K10 ; R5 := R0["Id"]
	26	[903]	CALL     	R4 2 2 ; R4 := R4(R5)
	27	[904]	GETGLOBAL	R5 K11 ; R5 := mStatTable
	28	[904]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	29	[905]	LT       	0 K12 R3 ; if 1.000000 >= R3 then PC := 50
	30	[905]	JMP      	50 ; PC := 50
	31	[906]	LOADK    	R6 := 1.000000
	32	[906]	GETTABLE 	R7 R5 K8 ; R7 := R5["Value"]
	33	[906]	LEN      	R7 R7 ; R7 := # R7
	34	[906]	LOADK    	R8 := 1.000000
	35	[906]	FORPREP  	R6 49 ; R6 -= R8; PC := 49
	36	[907]	GETTABLE 	R10 R5 K8 ; R10 := R5["Value"]
	37	[907]	GETTABLE 	R10 R10 R9 ; R10 := R10[R9]
	38	[907]	GETTABLE 	R11 R5 K13 ; R11 := R5["BestValue"]
	39	[907]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 49
	40	[907]	JMP      	49 ; PC := 49
	41	[909]	GETTABLE 	R10 R5 K13 ; R10 := R5["BestValue"]
	42	[909]	EQ       	0 R10 K14 ; if R10 ~= 0.000000 then PC := 47
	43	[909]	JMP      	47 ; PC := 47
	44	[909]	GETTABLE 	R10 R5 K15 ; R10 := R5["BestIsMax"]
	45	[909]	TEST     	R10 1 ; if R10 then PC := 49
	46	[909]	JMP      	49 ; PC := 49
	47	[910]	MOVE     	R2 R9 ; R2 := R9
	48	[911]	JMP      	50 ; PC := 50
	49	[906]	FORLOOP  	R6 36 ; R6 += R8; if R6 <= R7 then begin PC := 36; R9 := R6 end
	50	[917]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	51	[917]	SELF     	R10 R10 K16 ; R11 := R10; R10 := R10[0x6b837788]
	52	[917]	CALL     	R10 2 2 ; R10 := R10(R11)
	53	[917]	GETGLOBAL	R11 K2 ; R11 := 0xae91e43b
	54	[917]	SELF     	R11 R11 K17 ; R12 := R11; R11 := R11[0xaf9fda9f]
	55	[917]	CALL     	R11 2 2 ; R11 := R11(R12)
	56	[917]	DIV      	R10 R10 R11 ; R10 := R10 / R11
	57	[917]	GETGLOBAL	R11 K2 ; R11 := 0xae91e43b
	58	[917]	SELF     	R11 R11 K18 ; R12 := R11; R11 := R11[0x2cc9d281]
	59	[917]	CALL     	R11 2 2 ; R11 := R11(R12)
	60	[917]	MUL      	R10 R10 R11 ; R10 := R10 * R11
	61	[918]	GETGLOBAL	R11 K19 ; R11 := 0x5bced4c4
	62	[918]	GETTABLE 	R11 R11 K20 ; R11 := R11[0xb62ecfe0]
	63	[918]	LOADK    	R12 := 1600.000000
	64	[918]	MOVE     	R13 R10 ; R13 := R10
	65	[918]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	66	[918]	GETGLOBAL	R12 K2 ; R12 := 0xae91e43b
	67	[918]	SELF     	R12 R12 K21 ; R13 := R12; R12 := R12[0x091c120e]
	68	[918]	CALL     	R12 2 2 ; R12 := R12(R13)
	69	[918]	MUL      	R12 R12 K22 ; R12 := R12 * 0.100000
	70	[918]	SUB      	R11 R11 R12 ; R11 := R11 - R12
	71	[918]	SUB      	R11 R11 K23 ; R11 := R11 - 26.000000
	72	[919]	GETGLOBAL	R12 K2 ; R12 := 0xae91e43b
	73	[919]	SELF     	R12 R12 K7 ; R13 := R12; R12 := R12[0xf64b7262]
	74	[919]	GETTABLE 	R14 R0 K4 ; R14 := R0["mClipName"]
	75	[919]	LOADK    	R15 K6 ; R15 := "Label"
	76	[919]	LOADK    	R16 := 0.000000
	77	[919]	SUB      	R17 R11 K24 ; R17 := R11 - 24.000000
	78	[919]	UNM      	R17 R17 ; R17 := ^ R17
	79	[919]	DIV      	R17 R17 K25 ; R17 := R17 / 2.000000
	80	[919]	CALL     	R12 6 1 ; R12(R13,R14,R15,R16,R17)
	81	[920]	GETGLOBAL	R12 K2 ; R12 := 0xae91e43b
	82	[920]	SELF     	R12 R12 K7 ; R13 := R12; R12 := R12[0xf64b7262]
	83	[920]	GETTABLE 	R14 R0 K4 ; R14 := R0["mClipName"]
	84	[920]	LOADK    	R15 K26 ; R15 := "Backer"
	85	[920]	LOADK    	R16 := 12.000000
	86	[920]	MOVE     	R17 R11 ; R17 := R11
	87	[920]	CALL     	R12 6 1 ; R12(R13,R14,R15,R16,R17)
	88	[921]	GETGLOBAL	R12 K2 ; R12 := 0xae91e43b
	89	[921]	SELF     	R12 R12 K27 ; R13 := R12; R12 := R12[0x67bc869f]
	90	[921]	LOADK    	R14 K28 ; R14 := "ExpandableArea.PlayerInfo.PlayerStats.ScrollBar"
	91	[921]	LOADK    	R15 := 0.000000
	92	[921]	DIV      	R16 R11 K25 ; R16 := R11 / 2.000000
	93	[921]	ADD      	R16 R16 K29 ; R16 := R16 + 10.000000
	94	[921]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	95	[923]	LOADNIL  	R12 R12 ; R12 := nil
	96	[924]	LOADK    	R13 K30 ; R13 := ""
	97	[925]	LOADK    	R14 := 1.000000
	98	[925]	GETGLOBAL	R15 K19 ; R15 := 0x5bced4c4
	99	[925]	GETTABLE 	R15 R15 K31 ; R15 := R15[0xac1b386a]
	100	[925]	GETGLOBAL	R16 K32 ; R16 := mMaxPlayers
	101	[925]	MOVE     	R17 R3 ; R17 := R3
	102	[925]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	103	[925]	LOADK    	R16 := 1.000000
	104	[925]	FORPREP  	R14 161 ; R14 -= R16; PC := 161
	105	[926]	GETTABLE 	R18 R0 K4 ; R18 := R0["mClipName"]
	106	[926]	LOADK    	R19 K33 ; R19 := ".Value"
	107	[926]	MOVE     	R20 R17 ; R20 := R17
	108	[926]	CONCAT   	R12 R18 R20 ; R12 := R18 .. R19 .. R20
	109	[927]	GETTABLE 	R18 R5 K34 ; R18 := R5["IsRatio"]
	110	[927]	TEST     	R18 0 ; if not R18 then PC := 125
	111	[927]	JMP      	125 ; PC := 125
	112	[928]	GETGLOBAL	R18 K35 ; R18 := 0x7f5022cf
	113	[928]	GETTABLE 	R18 R18 K36 ; R18 := R18[0xe8072ded]
	114	[928]	LOADK    	R19 K37 ; R19 := "%d%%"
	115	[928]	GETGLOBAL	R20 K19 ; R20 := 0x5bced4c4
	116	[928]	GETTABLE 	R20 R20 K38 ; R20 := R20[0x55f27c30]
	117	[928]	GETTABLE 	R21 R0 K8 ; R21 := R0["Value"]
	118	[928]	GETTABLE 	R21 R21 R17 ; R21 := R21[R17]
	119	[928]	MUL      	R21 R21 K39 ; R21 := R21 * 100.000000
	120	[928]	ADD      	R21 R21 K40 ; R21 := R21 + 0.500000
	121	[928]	CALL     	R20 2 0 ; R20,... := R20(R21)
	122	[928]	CALL     	R18 0 2 ; R18 := R18(R19,...)
	123	[928]	MOVE     	R13 R18 ; R13 := R18
	124	[928]	JMP      	127 ; PC := 127
	125	[930]	GETTABLE 	R18 R0 K8 ; R18 := R0["Value"]
	126	[930]	GETTABLE 	R13 R18 R17 ; R13 := R18[R17]
	127	[933]	GETGLOBAL	R18 K2 ; R18 := 0xae91e43b
	128	[933]	SELF     	R18 R18 K27 ; R19 := R18; R18 := R18[0x67bc869f]
	129	[933]	MOVE     	R20 R12 ; R20 := R12
	130	[933]	LOADK    	R21 := 0.000000
	131	[933]	GETUPVAL 	R22 U1 ; R22 := U1
	132	[933]	MOVE     	R23 R17 ; R23 := R17
	133	[933]	CALL     	R22 2 2 ; R22 := R22(R23)
	134	[933]	ADD      	R22 R22 K41 ; R22 := R22 + 40.000000
	135	[933]	CALL     	R18 5 1 ; R18(R19,R20,R21,R22)
	136	[935]	GETGLOBAL	R18 K2 ; R18 := 0xae91e43b
	137	[935]	SELF     	R18 R18 K42 ; R19 := R18; R18 := R18[0xc0a3774b]
	138	[935]	MOVE     	R20 R12 ; R20 := R12
	139	[935]	LOADK    	R21 K43 ; R21 := "TopStat"
	140	[935]	LOADK    	R22 := 11.000000
	141	[935]	EQ       	1 R17 R2 ; if R17 == R2 then PC := 144
	142	[935]	JMP      	144 ; PC := 144
	143	[935]	OP_LOADBOOL	R23 0 1 ; R23 := false; PC := 144
	144	[935]	OP_LOADBOOL	R23 1 0 ; R23 := true
	145	[935]	CALL     	R18 6 1 ; R18(R19,R20,R21,R22,R23)
	146	[936]	GETGLOBAL	R18 K2 ; R18 := 0xae91e43b
	147	[936]	SELF     	R18 R18 K44 ; R19 := R18; R18 := R18[0x5f56eeab]
	148	[936]	MOVE     	R20 R12 ; R20 := R12
	149	[936]	LOADK    	R21 K45 ; R21 := ".Label"
	150	[936]	CONCAT   	R20 R20 R21 ; R20 := R20 .. R21
	151	[936]	LOADK    	R21 := 29.000000
	152	[936]	MOVE     	R22 R13 ; R22 := R13
	153	[936]	CALL     	R18 5 1 ; R18(R19,R20,R21,R22)
	154	[937]	GETGLOBAL	R18 K2 ; R18 := 0xae91e43b
	155	[937]	SELF     	R18 R18 K7 ; R19 := R18; R18 := R18[0xf64b7262]
	156	[937]	MOVE     	R20 R12 ; R20 := R12
	157	[937]	LOADK    	R21 K6 ; R21 := "Label"
	158	[937]	LOADK    	R22 := 9.000000
	159	[937]	MOVE     	R23 R1 ; R23 := R1
	160	[937]	CALL     	R18 6 1 ; R18(R19,R20,R21,R22,R23)
	161	[925]	FORLOOP  	R14 105 ; R14 += R16; if R14 <= R15 then begin PC := 105; R17 := R14 end
	162	[940]	GETUPVAL 	R18 U0 ; R18 := U0
	163	[940]	GETTABLE 	R18 R18 K46 ; R18 := R18["Content"]
	164	[941]	MOD      	R19 R4 K25 ; R19 := R4 % 2.000000
	165	[941]	EQ       	0 R19 K14 ; if R19 ~= 0.000000 then PC := 190
	166	[941]	JMP      	190 ; PC := 190
	167	[942]	GETGLOBAL	R19 K2 ; R19 := 0xae91e43b
	168	[942]	SELF     	R19 R19 K47 ; R20 := R19; R19 := R19[0x91e13703]
	169	[942]	GETTABLE 	R21 R0 K4 ; R21 := R0["mClipName"]
	170	[942]	LOADK    	R22 K48 ; R22 := ".Backer"
	171	[942]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	172	[942]	LOADK    	R22 K49 ; R22 := "RectEdgeColor"
	173	[942]	GETTABLE 	R23 R18 K50 ; R23 := R18["r"]
	174	[942]	GETTABLE 	R24 R18 K51 ; R24 := R18["g"]
	175	[942]	GETTABLE 	R25 R18 K52 ; R25 := R18["b"]
	176	[942]	LOADK    	R26 K53 ; R26 := 0.050000
	177	[942]	CALL     	R19 8 1 ; R19(R20,R21,R22,R23,R24,R25,R26)
	178	[943]	GETGLOBAL	R19 K2 ; R19 := 0xae91e43b
	179	[943]	SELF     	R19 R19 K47 ; R20 := R19; R19 := R19[0x91e13703]
	180	[943]	GETTABLE 	R21 R0 K4 ; R21 := R0["mClipName"]
	181	[943]	LOADK    	R22 K48 ; R22 := ".Backer"
	182	[943]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	183	[943]	LOADK    	R22 K54 ; R22 := "RectInnerColor"
	184	[943]	GETTABLE 	R23 R18 K50 ; R23 := R18["r"]
	185	[943]	GETTABLE 	R24 R18 K51 ; R24 := R18["g"]
	186	[943]	GETTABLE 	R25 R18 K52 ; R25 := R18["b"]
	187	[943]	LOADK    	R26 K53 ; R26 := 0.050000
	188	[943]	CALL     	R19 8 1 ; R19(R20,R21,R22,R23,R24,R25,R26)
	189	[943]	JMP      	212 ; PC := 212
	190	[945]	GETGLOBAL	R19 K2 ; R19 := 0xae91e43b
	191	[945]	SELF     	R19 R19 K47 ; R20 := R19; R19 := R19[0x91e13703]
	192	[945]	GETTABLE 	R21 R0 K4 ; R21 := R0["mClipName"]
	193	[945]	LOADK    	R22 K48 ; R22 := ".Backer"
	194	[945]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	195	[945]	LOADK    	R22 K49 ; R22 := "RectEdgeColor"
	196	[945]	LOADK    	R23 := 0.000000
	197	[945]	LOADK    	R24 := 0.000000
	198	[945]	LOADK    	R25 := 0.000000
	199	[945]	LOADK    	R26 := 0.000000
	200	[945]	CALL     	R19 8 1 ; R19(R20,R21,R22,R23,R24,R25,R26)
	201	[946]	GETGLOBAL	R19 K2 ; R19 := 0xae91e43b
	202	[946]	SELF     	R19 R19 K47 ; R20 := R19; R19 := R19[0x91e13703]
	203	[946]	GETTABLE 	R21 R0 K4 ; R21 := R0["mClipName"]
	204	[946]	LOADK    	R22 K48 ; R22 := ".Backer"
	205	[946]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	206	[946]	LOADK    	R22 K54 ; R22 := "RectInnerColor"
	207	[946]	LOADK    	R23 := 0.000000
	208	[946]	LOADK    	R24 := 0.000000
	209	[946]	LOADK    	R25 := 0.000000
	210	[946]	LOADK    	R26 := 0.000000
	211	[946]	CALL     	R19 8 1 ; R19(R20,R21,R22,R23,R24,R25,R26)
	212	[948]	RETURN   	R0 1 ; return 

function #32 <?:950,1010> (276 instructions, 1104 bytes at 00000160F5394770)
0 params, 20 slots, 10 upvalues, 0 locals, 39 constants, 1 function
	1	[951]	GETGLOBAL	R0 K0 ; R0 := mWaitingForMissionComplete
	2	[951]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[951]	JMP      	5 ; PC := 5
	4	[952]	RETURN   	R0 1 ; return 
	5	[955]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[955]	CALL     	R0 1 2 ; R0 := R0()
	7	[956]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[956]	CALL     	R1 1 2 ; R1 := R1()
	9	[957]	GETUPVAL 	R2 U2 ; R2 := U2
	10	[957]	CALL     	R2 1 2 ; R2 := R2()
	11	[959]	LOADK    	R3 K1 ; R3 := 0.200000
	12	[960]	LOADK    	R4 := 0.000000
	13	[961]	LOADK    	R5 := 90.000000
	14	[962]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	15	[962]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x6b837788]
	16	[962]	CALL     	R6 2 2 ; R6 := R6(R7)
	17	[962]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	18	[962]	SELF     	R7 R7 K4 ; R8 := R7; R7 := R7[0x091c120e]
	19	[962]	CALL     	R7 2 2 ; R7 := R7(R8)
	20	[962]	DIV      	R6 R6 R7 ; R6 := R6 / R7
	21	[963]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	22	[963]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0xaf9fda9f]
	23	[963]	CALL     	R7 2 2 ; R7 := R7(R8)
	24	[963]	DIV      	R7 R7 R6 ; R7 := R7 / R6
	25	[964]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	26	[964]	SELF     	R8 R8 K6 ; R9 := R8; R8 := R8[0x2cc9d281]
	27	[964]	CALL     	R8 2 2 ; R8 := R8(R9)
	28	[964]	SUB      	R7 R8 R7 ; R7 := R8 - R7
	29	[965]	DIV      	R7 R7 K7 ; R7 := R7 / 2.000000
	30	[966]	GETGLOBAL	R8 K8 ; R8 := 0x5bced4c4
	31	[966]	GETTABLE 	R8 R8 K9 ; R8 := R8[0xac1b386a]
	32	[966]	UNM      	R9 R5 ; R9 := ^ R5
	33	[966]	SUB      	R10 R7 R5 ; R10 := R7 - R5
	34	[966]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	35	[966]	MOVE     	R7 R8 ; R7 := R8
	36	[967]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	37	[967]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x67bc869f]
	38	[967]	LOADK    	R10 K11 ; R10 := "FullScreenFade"
	39	[967]	LOADK    	R11 := 1.000000
	40	[967]	MOVE     	R12 R7 ; R12 := R7
	41	[967]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	42	[968]	GETGLOBAL	R8 K12 ; R8 := mInitialized
	43	[968]	TEST     	R8 1 ; if R8 then PC := 62
	44	[968]	JMP      	62 ; PC := 62
	45	[968]	TEST     	R2 0 ; if not R2 then PC := 62
	46	[968]	JMP      	62 ; PC := 62
	47	[969]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	48	[969]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x67bc869f]
	49	[969]	LOADK    	R10 K13 ; R10 := "ExpandableArea"
	50	[969]	LOADK    	R11 := 1.000000
	51	[969]	MOVE     	R12 R5 ; R12 := R5
	52	[969]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	53	[970]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	54	[970]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x67bc869f]
	55	[970]	LOADK    	R10 K14 ; R10 := "ExpandableArea.FullScreenFade"
	56	[970]	LOADK    	R11 := 1.000000
	57	[970]	MOVE     	R12 R7 ; R12 := R7
	58	[970]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	59	[971]	GETUPVAL 	R8 U3 ; R8 := U3
	60	[971]	CALL     	R8 1 1 ; R8()
	61	[971]	JMP      	98 ; PC := 98
	62	[973]	GETGLOBAL	R8 K15 ; R8 := 0x25312c9b
	63	[973]	GETGLOBAL	R9 K2 ; R9 := 0xae91e43b
	64	[973]	LOADK    	R10 K13 ; R10 := "ExpandableArea"
	65	[973]	LOADK    	R11 := 2.000000
	66	[973]	NEWTABLE 	R12 2 0 ; R12 := {}
	67	[973]	LOADK    	R13 := 1.000000
	68	[973]	GETUPVAL 	R14 U3 ; R14 := U3
	69	[973]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	70	[973]	NEWTABLE 	R13 2 0 ; R13 := {}
	71	[973]	TEST     	R2 0 ; if not R2 then PC := 75
	72	[973]	JMP      	75 ; PC := 75
	73	[973]	TESTSET  	R14 R5 1 ; if R5 then PC := 76 else R14 := R5 
	74	[973]	JMP      	76 ; PC := 76
	75	[973]	LOADK    	R14 := 390.000000
	76	[973]	LOADK    	R15 := 1.000000
	77	[973]	SETLIST  	R13 2 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 2
	78	[973]	MOVE     	R14 R3 ; R14 := R3
	79	[973]	MOVE     	R15 R4 ; R15 := R4
	80	[973]	GETUPVAL 	R16 U3 ; R16 := U3
	81	[973]	CALL     	R8 9 1 ; R8(R9,R10,R11,R12,R13,R14,R15,R16)
	82	[974]	GETGLOBAL	R8 K15 ; R8 := 0x25312c9b
	83	[974]	GETGLOBAL	R9 K2 ; R9 := 0xae91e43b
	84	[974]	LOADK    	R10 K14 ; R10 := "ExpandableArea.FullScreenFade"
	85	[974]	LOADK    	R11 := 2.000000
	86	[974]	NEWTABLE 	R12 1 0 ; R12 := {}
	87	[974]	LOADK    	R13 := 1.000000
	88	[974]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	89	[974]	NEWTABLE 	R13 1 0 ; R13 := {}
	90	[974]	TEST     	R2 0 ; if not R2 then PC := 94
	91	[974]	JMP      	94 ; PC := 94
	92	[974]	TESTSET  	R14 R7 1 ; if R7 then PC := 95 else R14 := R7 
	93	[974]	JMP      	95 ; PC := 95
	94	[974]	LOADK    	R14 := 70.000000
	95	[974]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	96	[974]	MOVE     	R14 R3 ; R14 := R3
	97	[974]	CALL     	R8 7 1 ; R8(R9,R10,R11,R12,R13,R14)
	98	[977]	TEST     	R2 1 ; if R2 then PC := 104
	99	[977]	JMP      	104 ; PC := 104
	100	[977]	GETUPVAL 	R8 U4 ; R8 := U4
	101	[977]	LEN      	R8 R8 ; R8 := # R8
	102	[977]	EQ       	0 R8 K17 ; if R8 ~= 0.000000 then PC := 107
	103	[977]	JMP      	107 ; PC := 107
	104	[977]	LOADK    	R8 := -23.000000
	105	[977]	TEST     	R8 1 ; if R8 then PC := 108
	106	[977]	JMP      	108 ; PC := 108
	107	[977]	LOADK    	R8 := 0.000000
	108	[978]	GETGLOBAL	R9 K15 ; R9 := 0x25312c9b
	109	[978]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	110	[978]	LOADK    	R11 K18 ; R11 := "TopAnchor.Header.DescBacker"
	111	[978]	LOADK    	R12 := 2.000000
	112	[978]	NEWTABLE 	R13 1 0 ; R13 := {}
	113	[978]	LOADK    	R14 := 10.000000
	114	[978]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	115	[978]	NEWTABLE 	R14 1 0 ; R14 := {}
	116	[978]	TEST     	R2 0 ; if not R2 then PC := 121
	117	[978]	JMP      	121 ; PC := 121
	118	[978]	LOADK    	R15 := 0.000000
	119	[978]	TEST     	R15 1 ; if R15 then PC := 122
	120	[978]	JMP      	122 ; PC := 122
	121	[978]	LOADK    	R15 := 50.000000
	122	[978]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	123	[978]	MOVE     	R15 R3 ; R15 := R3
	124	[978]	CALL     	R9 7 1 ; R9(R10,R11,R12,R13,R14,R15)
	125	[979]	GETGLOBAL	R9 K15 ; R9 := 0x25312c9b
	126	[979]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	127	[979]	LOADK    	R11 K19 ; R11 := "TopAnchor.Header.Desc"
	128	[979]	LOADK    	R12 := 2.000000
	129	[979]	NEWTABLE 	R13 1 0 ; R13 := {}
	130	[979]	LOADK    	R14 := 10.000000
	131	[979]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	132	[979]	NEWTABLE 	R14 1 0 ; R14 := {}
	133	[979]	TEST     	R2 0 ; if not R2 then PC := 138
	134	[979]	JMP      	138 ; PC := 138
	135	[979]	LOADK    	R15 := 0.000000
	136	[979]	TEST     	R15 1 ; if R15 then PC := 139
	137	[979]	JMP      	139 ; PC := 139
	138	[979]	LOADK    	R15 := 100.000000
	139	[979]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	140	[979]	MOVE     	R15 R3 ; R15 := R3
	141	[979]	CALL     	R9 7 1 ; R9(R10,R11,R12,R13,R14,R15)
	142	[980]	GETGLOBAL	R9 K15 ; R9 := 0x25312c9b
	143	[980]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	144	[980]	LOADK    	R11 K20 ; R11 := "TopAnchor.Header.Lines"
	145	[980]	LOADK    	R12 := 2.000000
	146	[980]	NEWTABLE 	R13 1 0 ; R13 := {}
	147	[980]	LOADK    	R14 := 1.000000
	148	[980]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	149	[980]	NEWTABLE 	R14 1 0 ; R14 := {}
	150	[980]	ADD      	R15 K21 R8 ; R15 := 43.000000 + R8
	151	[980]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	152	[980]	MOVE     	R15 R3 ; R15 := R3
	153	[980]	CALL     	R9 7 1 ; R9(R10,R11,R12,R13,R14,R15)
	154	[981]	GETGLOBAL	R9 K15 ; R9 := 0x25312c9b
	155	[981]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	156	[981]	LOADK    	R11 K22 ; R11 := "TopAnchor.Header.ArrowEnds"
	157	[981]	LOADK    	R12 := 2.000000
	158	[981]	NEWTABLE 	R13 1 0 ; R13 := {}
	159	[981]	LOADK    	R14 := 1.000000
	160	[981]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	161	[981]	NEWTABLE 	R14 1 0 ; R14 := {}
	162	[981]	ADD      	R15 K21 R8 ; R15 := 43.000000 + R8
	163	[981]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	164	[981]	MOVE     	R15 R3 ; R15 := R3
	165	[981]	CALL     	R9 7 1 ; R9(R10,R11,R12,R13,R14,R15)
	166	[982]	GETGLOBAL	R9 K15 ; R9 := 0x25312c9b
	167	[982]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	168	[982]	LOADK    	R11 K23 ; R11 := "TopAnchor.Header.Backer"
	169	[982]	LOADK    	R12 := 2.000000
	170	[982]	NEWTABLE 	R13 1 0 ; R13 := {}
	171	[982]	LOADK    	R14 := 1.000000
	172	[982]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	173	[982]	NEWTABLE 	R14 1 0 ; R14 := {}
	174	[982]	ADD      	R15 K21 R8 ; R15 := 43.000000 + R8
	175	[982]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	176	[982]	MOVE     	R15 R3 ; R15 := R3
	177	[982]	CALL     	R9 7 1 ; R9(R10,R11,R12,R13,R14,R15)
	178	[984]	GETUPVAL 	R9 U5 ; R9 := U5
	179	[984]	EQ       	1 R9 R2 ; if R9 == R2 then PC := 202
	180	[984]	JMP      	202 ; PC := 202
	181	[985]	SETUPVAL 	R2 U5 ; U5 := R2
	182	[986]	GETGLOBAL	R9 K24 ; R9 := 0x38f10e85
	183	[986]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	184	[986]	LOADK    	R11 K25 ; R11 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.gotoAndPlay"
	185	[986]	GETUPVAL 	R12 U6 ; R12 := U6
	186	[986]	GETTABLE 	R12 R12 K26 ; R12 := R12[0x06d055f9]
	187	[986]	MOVE     	R13 R2 ; R13 := R2
	188	[986]	LOADK    	R14 K27 ; R14 := "Expand"
	189	[986]	LOADK    	R15 K28 ; R15 := "Collapse"
	190	[986]	CALL     	R12 4 0 ; R12,... := R12(R13,R14,R15)
	191	[986]	CALL     	R9 0 1 ; R9(R10,...)
	192	[987]	GETGLOBAL	R9 K24 ; R9 := 0x38f10e85
	193	[987]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	194	[987]	LOADK    	R11 K29 ; R11 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross.gotoAndPlay"
	195	[987]	GETUPVAL 	R12 U6 ; R12 := U6
	196	[987]	GETTABLE 	R12 R12 K26 ; R12 := R12[0x06d055f9]
	197	[987]	MOVE     	R13 R2 ; R13 := R2
	198	[987]	LOADK    	R14 K27 ; R14 := "Expand"
	199	[987]	LOADK    	R15 K28 ; R15 := "Collapse"
	200	[987]	CALL     	R12 4 0 ; R12,... := R12(R13,R14,R15)
	201	[987]	CALL     	R9 0 1 ; R9(R10,...)
	202	[990]	GETGLOBAL	R9 K2 ; R9 := 0xae91e43b
	203	[990]	SELF     	R9 R9 K30 ; R10 := R9; R9 := R9[0x91a24e4b]
	204	[990]	LOADK    	R11 K31 ; R11 := "TopAnchor.Header.Label"
	205	[990]	LOADK    	R12 := 9.000000
	206	[990]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	207	[991]	TEST     	R2 1 ; if R2 then PC := 213
	208	[991]	JMP      	213 ; PC := 213
	209	[991]	GETUPVAL 	R10 U7 ; R10 := U7
	210	[991]	GETTABLE 	R10 R10 K32 ; R10 := R10["FloatingContentHighlightInt"]
	211	[991]	TEST     	R10 1 ; if R10 then PC := 215
	212	[991]	JMP      	215 ; PC := 215
	213	[991]	GETUPVAL 	R10 U7 ; R10 := U7
	214	[991]	GETTABLE 	R10 R10 K33 ; R10 := R10["FloatingContentInt"]
	215	[992]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 220
	216	[992]	JMP      	220 ; PC := 220
	217	[992]	GETUPVAL 	R11 U8 ; R11 := U8
	218	[992]	TEST     	R11 0 ; if not R11 then PC := 239
	219	[992]	JMP      	239 ; PC := 239
	220	[997]	CLOSURE  	R11 0 ; R11 := closure(Function #1)
	221	[997]	GETUPVAL 	R0 U6 ; R0 := U6
	222	[997]	MOVE     	R0 R9 ; R0 := R9
	223	[997]	MOVE     	R0 R10 ; R0 := R10
	224	[999]	GETGLOBAL	R12 K15 ; R12 := 0x25312c9b
	225	[999]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	226	[999]	LOADK    	R14 K31 ; R14 := "TopAnchor.Header.Label"
	227	[999]	LOADK    	R15 := 2.000000
	228	[999]	NEWTABLE 	R16 2 0 ; R16 := {}
	229	[999]	LOADK    	R17 := 1.000000
	230	[999]	MOVE     	R18 R11 ; R18 := R11
	231	[999]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	232	[999]	NEWTABLE 	R17 2 0 ; R17 := {}
	233	[999]	ADD      	R18 K34 R8 ; R18 := 18.000000 + R8
	234	[999]	LOADK    	R19 := 1.000000
	235	[999]	SETLIST  	R17 2 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
	236	[999]	MOVE     	R18 R3 ; R18 := R3
	237	[999]	MOVE     	R19 R4 ; R19 := R4
	238	[999]	CALL     	R12 8 1 ; R12(R13,R14,R15,R16,R17,R18,R19)
	239	[1003]	GETGLOBAL	R12 K2 ; R12 := 0xae91e43b
	240	[1003]	SELF     	R12 R12 K35 ; R13 := R12; R12 := R12[0xaade900e]
	241	[1003]	LOADK    	R14 K36 ; R14 := "ExpandableArea.Progression"
	242	[1003]	LOADK    	R15 := 11.000000
	243	[1003]	MOVE     	R16 R1 ; R16 := R1
	244	[1003]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	245	[1004]	GETGLOBAL	R12 K2 ; R12 := 0xae91e43b
	246	[1004]	SELF     	R12 R12 K10 ; R13 := R12; R12 := R12[0x67bc869f]
	247	[1004]	LOADK    	R14 K36 ; R14 := "ExpandableArea.Progression"
	248	[1004]	LOADK    	R15 := 1.000000
	249	[1004]	GETUPVAL 	R16 U6 ; R16 := U6
	250	[1004]	GETTABLE 	R16 R16 K26 ; R16 := R16[0x06d055f9]
	251	[1004]	MOVE     	R17 R0 ; R17 := R0
	252	[1004]	LOADK    	R18 := 59.000000
	253	[1004]	LOADK    	R19 := 138.000000
	254	[1004]	CALL     	R16 4 0 ; R16,... := R16(R17,R18,R19)
	255	[1004]	CALL     	R12 0 1 ; R12(R13,...)
	256	[1006]	GETGLOBAL	R12 K2 ; R12 := 0xae91e43b
	257	[1006]	SELF     	R12 R12 K35 ; R13 := R12; R12 := R12[0xaade900e]
	258	[1006]	LOADK    	R14 K37 ; R14 := "ExpandableArea.PlayerInfo.PlayerStats"
	259	[1006]	LOADK    	R15 := 11.000000
	260	[1006]	MOVE     	R16 R0 ; R16 := R0
	261	[1006]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	262	[1007]	GETGLOBAL	R12 K2 ; R12 := 0xae91e43b
	263	[1007]	SELF     	R12 R12 K10 ; R13 := R12; R12 := R12[0x67bc869f]
	264	[1007]	LOADK    	R14 K38 ; R14 := "ExpandableArea.PlayerInfo"
	265	[1007]	LOADK    	R15 := 1.000000
	266	[1007]	GETUPVAL 	R16 U6 ; R16 := U6
	267	[1007]	GETTABLE 	R16 R16 K26 ; R16 := R16[0x06d055f9]
	268	[1007]	GETUPVAL 	R17 U9 ; R17 := U9
	269	[1007]	CALL     	R17 1 2 ; R17 := R17()
	270	[1007]	LOADK    	R18 := 345.000000
	271	[1007]	LOADK    	R19 := 0.000000
	272	[1007]	CALL     	R16 4 0 ; R16,... := R16(R17,R18,R19)
	273	[1007]	CALL     	R12 0 1 ; R12(R13,...)
	274	[1009]	OP_LOADBOOL	R12 0 0 ; R12 := false
	275	[1009]	SETUPVAL 	R12 U8 ; U8 := R12
	276	[1010]	RETURN   	R0 1 ; return 

function #33 <?:1012,1018> (8 instructions, 32 bytes at 00000160F53958F0)
2 params, 3 slots, 3 upvalues, 0 locals, 1 constant, 0 functions
	1	[1013]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1013]	CALL     	R2 1 1 ; R2()
	3	[1015]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[1015]	EQ       	1 R2 K0 ; if R2 == nil then PC := 8
	5	[1015]	JMP      	8 ; PC := 8
	6	[1016]	GETUPVAL 	R2 U2 ; R2 := U2
	7	[1016]	CALL     	R2 1 1 ; R2()
	8	[1018]	RETURN   	R0 1 ; return 

function #34 <?:1020,1143> (544 instructions, 2176 bytes at 00000160F5395A00)
0 params, 22 slots, 11 upvalues, 0 locals, 83 constants, 0 functions
	1	[1021]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1021]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x5d10207d]
	3	[1021]	LOADK    	R1 := 2.000000
	4	[1021]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[1022]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xa5d5c8f6]
	6	[1022]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[1023]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[1023]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x5d10207d]
	9	[1023]	LOADK    	R3 := 6.000000
	10	[1023]	OP_LOADBOOL	R4 1 0 ; R4 := true
	11	[1023]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	12	[1024]	GETUPVAL 	R3 U0 ; R3 := U0
	13	[1024]	GETTABLE 	R3 R3 K0 ; R3 := R3[0x5d10207d]
	14	[1024]	LOADK    	R4 := 9.000000
	15	[1024]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[1025]	SELF     	R4 R3 K2 ; R5 := R3; R4 := R3[0xa5d5c8f6]
	17	[1025]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[1026]	GETUPVAL 	R5 U0 ; R5 := U0
	19	[1026]	GETTABLE 	R5 R5 K0 ; R5 := R5[0x5d10207d]
	20	[1026]	LOADK    	R6 := 10.000000
	21	[1026]	CALL     	R5 2 2 ; R5 := R5(R6)
	22	[1027]	SELF     	R6 R5 K2 ; R7 := R5; R6 := R5[0xa5d5c8f6]
	23	[1027]	CALL     	R6 2 2 ; R6 := R6(R7)
	24	[1029]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	25	[1029]	GETUPVAL 	R8 U1 ; R8 := U1
	26	[1029]	CALL     	R7 2 2 ; R7 := R7(R8)
	27	[1029]	TEST     	R7 0 ; if not R7 then PC := 39
	28	[1029]	JMP      	39 ; PC := 39
	29	[1029]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	30	[1029]	GETGLOBAL	R8 K4 ; R8 := 0x1211d00f
	31	[1029]	CALL     	R7 2 2 ; R7 := R7(R8)
	32	[1029]	TEST     	R7 1 ; if R7 then PC := 39
	33	[1029]	JMP      	39 ; PC := 39
	34	[1030]	GETGLOBAL	R7 K4 ; R7 := 0x1211d00f
	35	[1030]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0x46a0ebf5]
	36	[1030]	GETGLOBAL	R9 K6 ; R9 := 0xe0187f16
	37	[1030]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	38	[1030]	SETUPVAL 	R7 U1 ; U1 := R7
	39	[1032]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	40	[1032]	GETUPVAL 	R8 U1 ; R8 := U1
	41	[1032]	CALL     	R7 2 2 ; R7 := R7(R8)
	42	[1032]	TEST     	R7 1 ; if R7 then PC := 93
	43	[1032]	JMP      	93 ; PC := 93
	44	[1033]	GETUPVAL 	R7 U0 ; R7 := U0
	45	[1033]	GETTABLE 	R7 R7 K0 ; R7 := R7[0x5d10207d]
	46	[1033]	LOADK    	R8 := 3.000000
	47	[1033]	OP_LOADBOOL	R9 0 0 ; R9 := false
	48	[1033]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	49	[1034]	GETUPVAL 	R8 U1 ; R8 := U1
	50	[1034]	SELF     	R8 R8 K7 ; R9 := R8; R8 := R8[0x986d2ab8]
	51	[1034]	GETGLOBAL	R10 K8 ; R10 := 0x0469f296
	52	[1034]	LOADK    	R11 K9 ; R11 := "TintColor"
	53	[1034]	CALL     	R10 2 2 ; R10 := R10(R11)
	54	[1034]	GETUPVAL 	R11 U2 ; R11 := U2
	55	[1034]	GETTABLE 	R11 R11 K10 ; R11 := R11[0x021dc4be]
	56	[1034]	GETTABLE 	R12 R0 K11 ; R12 := R0["red"]
	57	[1034]	MUL      	R12 R12 K12 ; R12 := R12 * 0.750000
	58	[1034]	CALL     	R11 2 2 ; R11 := R11(R12)
	59	[1034]	GETUPVAL 	R12 U2 ; R12 := U2
	60	[1034]	GETTABLE 	R12 R12 K10 ; R12 := R12[0x021dc4be]
	61	[1034]	GETTABLE 	R13 R0 K13 ; R13 := R0["green"]
	62	[1034]	MUL      	R13 R13 K12 ; R13 := R13 * 0.750000
	63	[1034]	CALL     	R12 2 2 ; R12 := R12(R13)
	64	[1034]	GETUPVAL 	R13 U2 ; R13 := U2
	65	[1034]	GETTABLE 	R13 R13 K10 ; R13 := R13[0x021dc4be]
	66	[1034]	GETTABLE 	R14 R0 K14 ; R14 := R0["blue"]
	67	[1034]	MUL      	R14 R14 K12 ; R14 := R14 * 0.750000
	68	[1034]	CALL     	R13 2 2 ; R13 := R13(R14)
	69	[1034]	LOADK    	R14 := 1.000000
	70	[1034]	CALL     	R8 7 1 ; R8(R9,R10,R11,R12,R13,R14)
	71	[1035]	GETUPVAL 	R8 U1 ; R8 := U1
	72	[1035]	SELF     	R8 R8 K7 ; R9 := R8; R8 := R8[0x986d2ab8]
	73	[1035]	GETGLOBAL	R10 K8 ; R10 := 0x0469f296
	74	[1035]	LOADK    	R11 K15 ; R11 := "VerticalTintColor"
	75	[1035]	CALL     	R10 2 2 ; R10 := R10(R11)
	76	[1035]	GETUPVAL 	R11 U2 ; R11 := U2
	77	[1035]	GETTABLE 	R11 R11 K10 ; R11 := R11[0x021dc4be]
	78	[1035]	GETTABLE 	R12 R7 K11 ; R12 := R7["red"]
	79	[1035]	MUL      	R12 R12 K12 ; R12 := R12 * 0.750000
	80	[1035]	CALL     	R11 2 2 ; R11 := R11(R12)
	81	[1035]	GETUPVAL 	R12 U2 ; R12 := U2
	82	[1035]	GETTABLE 	R12 R12 K10 ; R12 := R12[0x021dc4be]
	83	[1035]	GETTABLE 	R13 R7 K13 ; R13 := R7["green"]
	84	[1035]	MUL      	R13 R13 K12 ; R13 := R13 * 0.750000
	85	[1035]	CALL     	R12 2 2 ; R12 := R12(R13)
	86	[1035]	GETUPVAL 	R13 U2 ; R13 := U2
	87	[1035]	GETTABLE 	R13 R13 K10 ; R13 := R13[0x021dc4be]
	88	[1035]	GETTABLE 	R14 R7 K14 ; R14 := R7["blue"]
	89	[1035]	MUL      	R14 R14 K12 ; R14 := R14 * 0.750000
	90	[1035]	CALL     	R13 2 2 ; R13 := R13(R14)
	91	[1035]	LOADK    	R14 := 1.000000
	92	[1035]	CALL     	R8 7 1 ; R8(R9,R10,R11,R12,R13,R14)
	93	[1038]	GETUPVAL 	R8 U3 ; R8 := U3
	94	[1038]	MOVE     	R9 R0 ; R9 := R0
	95	[1038]	CALL     	R8 2 2 ; R8 := R8(R9)
	96	[1038]	MOVE     	R0 R8 ; R0 := R8
	97	[1039]	GETUPVAL 	R8 U3 ; R8 := U3
	98	[1039]	MOVE     	R9 R5 ; R9 := R5
	99	[1039]	CALL     	R8 2 2 ; R8 := R8(R9)
	100	[1039]	MOVE     	R5 R8 ; R5 := R8
	101	[1041]	NEWTABLE 	R8 0 0 ; R8 := {}
	102	[1041]	SETUPVAL 	R8 U4 ; U4 := R8
	103	[1042]	GETUPVAL 	R8 U4 ; R8 := U4
	104	[1042]	GETUPVAL 	R9 U3 ; R9 := U3
	105	[1042]	GETUPVAL 	R10 U0 ; R10 := U0
	106	[1042]	GETTABLE 	R10 R10 K0 ; R10 := R10[0x5d10207d]
	107	[1042]	LOADK    	R11 := 6.000000
	108	[1042]	CALL     	R10 2 0 ; R10,... := R10(R11)
	109	[1042]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	110	[1042]	SETTABLE 	R8 K16 R9 ; R8["Content"] := R9
	111	[1043]	GETUPVAL 	R8 U4 ; R8 := U4
	112	[1043]	SETTABLE 	R8 K17 R3 ; R8["FloatingContent"] := R3
	113	[1044]	GETUPVAL 	R8 U4 ; R8 := U4
	114	[1044]	SETTABLE 	R8 K18 R4 ; R8["FloatingContentInt"] := R4
	115	[1045]	GETUPVAL 	R8 U4 ; R8 := U4
	116	[1045]	SETTABLE 	R8 K19 R5 ; R8["FloatingContentHighlight"] := R5
	117	[1046]	GETUPVAL 	R8 U4 ; R8 := U4
	118	[1046]	SETTABLE 	R8 K20 R6 ; R8["FloatingContentHighlightInt"] := R6
	119	[1047]	GETUPVAL 	R8 U4 ; R8 := U4
	120	[1047]	SETTABLE 	R8 K21 R1 ; R8["Background1Int"] := R1
	121	[1048]	GETGLOBAL	R8 K22 ; R8 := mMissionFailed
	122	[1048]	TEST     	R8 0 ; if not R8 then PC := 132
	123	[1048]	JMP      	132 ; PC := 132
	124	[1049]	GETUPVAL 	R8 U4 ; R8 := U4
	125	[1049]	GETUPVAL 	R9 U0 ; R9 := U0
	126	[1049]	GETTABLE 	R9 R9 K0 ; R9 := R9[0x5d10207d]
	127	[1049]	LOADK    	R10 := 12.000000
	128	[1049]	OP_LOADBOOL	R11 1 0 ; R11 := true
	129	[1049]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	130	[1049]	SETTABLE 	R8 K23 R9 ; R8["SuccessInt"] := R9
	131	[1049]	JMP      	139 ; PC := 139
	132	[1051]	GETUPVAL 	R8 U4 ; R8 := U4
	133	[1051]	GETUPVAL 	R9 U0 ; R9 := U0
	134	[1051]	GETTABLE 	R9 R9 K0 ; R9 := R9[0x5d10207d]
	135	[1051]	LOADK    	R10 := 11.000000
	136	[1051]	OP_LOADBOOL	R11 1 0 ; R11 := true
	137	[1051]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	138	[1051]	SETTABLE 	R8 K23 R9 ; R8["SuccessInt"] := R9
	139	[1054]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	140	[1054]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	141	[1054]	LOADK    	R10 K26 ; R10 := "TopAnchor.Header.Desc"
	142	[1054]	LOADK    	R11 := 9.000000
	143	[1054]	MOVE     	R12 R4 ; R12 := R4
	144	[1054]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	145	[1055]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	146	[1055]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	147	[1055]	LOADK    	R10 K27 ; R10 := "TopAnchor.Header.DescBacker"
	148	[1055]	LOADK    	R11 := 9.000000
	149	[1055]	MOVE     	R12 R1 ; R12 := R1
	150	[1055]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	151	[1056]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	152	[1056]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	153	[1056]	LOADK    	R10 K28 ; R10 := "TopAnchor.Header.Lines"
	154	[1056]	LOADK    	R11 := 9.000000
	155	[1056]	MOVE     	R12 R6 ; R12 := R6
	156	[1056]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	157	[1057]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	158	[1057]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	159	[1057]	LOADK    	R10 K29 ; R10 := "TopAnchor.Header.ArrowEnds"
	160	[1057]	LOADK    	R11 := 9.000000
	161	[1057]	MOVE     	R12 R6 ; R12 := R6
	162	[1057]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	163	[1058]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	164	[1058]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	165	[1058]	LOADK    	R10 K30 ; R10 := "TopAnchor.Header.Backer"
	166	[1058]	LOADK    	R11 := 9.000000
	167	[1058]	MOVE     	R12 R1 ; R12 := R1
	168	[1058]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	169	[1060]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	170	[1060]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	171	[1060]	LOADK    	R10 K31 ; R10 := "BottomAnchor.NodeDetails"
	172	[1060]	LOADK    	R11 := 9.000000
	173	[1060]	MOVE     	R12 R2 ; R12 := R2
	174	[1060]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	175	[1062]	GETUPVAL 	R8 U5 ; R8 := U5
	176	[1062]	TEST     	R8 0 ; if not R8 then PC := 184
	177	[1062]	JMP      	184 ; PC := 184
	178	[1063]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	179	[1063]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	180	[1063]	LOADK    	R10 K32 ; R10 := "TopAnchor.Header.Label"
	181	[1063]	LOADK    	R11 := 9.000000
	182	[1063]	MOVE     	R12 R6 ; R12 := R6
	183	[1063]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	184	[1066]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	185	[1066]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	186	[1066]	LOADK    	R10 K33 ; R10 := "ExpandableArea.Progression.Tile"
	187	[1066]	LOADK    	R11 := 10.000000
	188	[1066]	LOADK    	R12 := 20.000000
	189	[1066]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	190	[1067]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	191	[1067]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	192	[1067]	LOADK    	R10 K33 ; R10 := "ExpandableArea.Progression.Tile"
	193	[1067]	LOADK    	R11 := 9.000000
	194	[1067]	MOVE     	R12 R4 ; R12 := R4
	195	[1067]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	196	[1068]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	197	[1068]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	198	[1068]	LOADK    	R10 K34 ; R10 := "ExpandableArea.Progression.Lines"
	199	[1068]	LOADK    	R11 := 9.000000
	200	[1068]	MOVE     	R12 R4 ; R12 := R4
	201	[1068]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	202	[1069]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	203	[1069]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	204	[1069]	LOADK    	R10 K34 ; R10 := "ExpandableArea.Progression.Lines"
	205	[1069]	LOADK    	R11 := 10.000000
	206	[1069]	LOADK    	R12 := 45.000000
	207	[1069]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	208	[1070]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	209	[1070]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	210	[1070]	LOADK    	R10 K35 ; R10 := "ExpandableArea.Progression.Affinity.MissionTime"
	211	[1070]	LOADK    	R11 := 9.000000
	212	[1070]	MOVE     	R12 R6 ; R12 := R6
	213	[1070]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	214	[1071]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	215	[1071]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	216	[1071]	LOADK    	R10 K36 ; R10 := "ExpandableArea.Progression.Affinity.MissionTime.Lines"
	217	[1071]	LOADK    	R11 := 9.000000
	218	[1071]	MOVE     	R12 R6 ; R12 := R6
	219	[1071]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	220	[1072]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	221	[1072]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	222	[1072]	LOADK    	R10 K36 ; R10 := "ExpandableArea.Progression.Affinity.MissionTime.Lines"
	223	[1072]	LOADK    	R11 := 10.000000
	224	[1072]	GETGLOBAL	R12 K37 ; R12 := BORDER_ALPHA
	225	[1072]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	226	[1074]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	227	[1074]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	228	[1074]	LOADK    	R10 K38 ; R10 := "MissionComplete.TextAnim"
	229	[1074]	LOADK    	R11 := 9.000000
	230	[1074]	MOVE     	R12 R6 ; R12 := R6
	231	[1074]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	232	[1075]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	233	[1075]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	234	[1075]	LOADK    	R10 K39 ; R10 := "MissionComplete.ArrowEndsAnim"
	235	[1075]	LOADK    	R11 := 9.000000
	236	[1075]	MOVE     	R12 R4 ; R12 := R4
	237	[1075]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	238	[1076]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	239	[1076]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	240	[1076]	LOADK    	R10 K40 ; R10 := "MissionComplete.LinesAnim"
	241	[1076]	LOADK    	R11 := 9.000000
	242	[1076]	MOVE     	R12 R4 ; R12 := R4
	243	[1076]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	244	[1077]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	245	[1077]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	246	[1077]	LOADK    	R10 K41 ; R10 := "MissionComplete.BackerAnim"
	247	[1077]	LOADK    	R11 := 9.000000
	248	[1077]	MOVE     	R12 R1 ; R12 := R1
	249	[1077]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	250	[1078]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	251	[1078]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x67bc869f]
	252	[1078]	LOADK    	R10 K42 ; R10 := "MissionComplete.LotusAnim"
	253	[1078]	LOADK    	R11 := 9.000000
	254	[1078]	MOVE     	R12 R1 ; R12 := R1
	255	[1078]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	256	[1080]	LOADK    	R8 := 1.000000
	257	[1080]	GETUPVAL 	R9 U6 ; R9 := U6
	258	[1080]	CALL     	R9 1 2 ; R9 := R9()
	259	[1080]	LEN      	R9 R9 ; R9 := # R9
	260	[1080]	LOADK    	R10 := 1.000000
	261	[1080]	FORPREP  	R8 388 ; R8 -= R10; PC := 388
	262	[1081]	LOADK    	R12 K43 ; R12 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
	263	[1081]	MOVE     	R13 R11 ; R13 := R11
	264	[1081]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	265	[1082]	GETGLOBAL	R13 K44 ; R13 := 0x34291f5c
	266	[1082]	GETTABLE 	R13 R13 K45 ; R13 := R13[0xa7a2e381]
	267	[1082]	CALL     	R13 1 2 ; R13 := R13()
	268	[1082]	TEST     	R13 0 ; if not R13 then PC := 299
	269	[1082]	JMP      	299 ; PC := 299
	270	[1084]	GETGLOBAL	R13 K24 ; R13 := 0xae91e43b
	271	[1084]	SELF     	R13 R13 K46 ; R14 := R13; R13 := R13[0xe261aa96]
	272	[1084]	MOVE     	R15 R12 ; R15 := R12
	273	[1084]	LOADK    	R16 K47 ; R16 := "Name"
	274	[1084]	LOADK    	R17 := 41.000000
	275	[1084]	LOADK    	R18 K48 ; R18 := "Arial Unicode MS"
	276	[1084]	CALL     	R13 6 1 ; R13(R14,R15,R16,R17,R18)
	277	[1085]	GETGLOBAL	R13 K24 ; R13 := 0xae91e43b
	278	[1085]	SELF     	R13 R13 K49 ; R14 := R13; R13 := R13[0xf64b7262]
	279	[1085]	MOVE     	R15 R12 ; R15 := R12
	280	[1085]	LOADK    	R16 K47 ; R16 := "Name"
	281	[1085]	LOADK    	R17 := 42.000000
	282	[1085]	LOADK    	R18 := 18.000000
	283	[1085]	CALL     	R13 6 1 ; R13(R14,R15,R16,R17,R18)
	284	[1086]	LOADK    	R13 K50 ; R13 := 1.200000
	285	[1087]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	286	[1087]	SELF     	R14 R14 K49 ; R15 := R14; R14 := R14[0xf64b7262]
	287	[1087]	MOVE     	R16 R12 ; R16 := R12
	288	[1087]	LOADK    	R17 K47 ; R17 := "Name"
	289	[1087]	LOADK    	R18 := 5.000000
	290	[1087]	MUL      	R19 R13 K51 ; R19 := R13 * 100.000000
	291	[1087]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	292	[1088]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	293	[1088]	SELF     	R14 R14 K49 ; R15 := R14; R14 := R14[0xf64b7262]
	294	[1088]	MOVE     	R16 R12 ; R16 := R12
	295	[1088]	LOADK    	R17 K47 ; R17 := "Name"
	296	[1088]	LOADK    	R18 := 6.000000
	297	[1088]	MUL      	R19 R13 K51 ; R19 := R13 * 100.000000
	298	[1088]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	299	[1090]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	300	[1090]	SELF     	R14 R14 K49 ; R15 := R14; R14 := R14[0xf64b7262]
	301	[1090]	MOVE     	R16 R12 ; R16 := R12
	302	[1090]	LOADK    	R17 K47 ; R17 := "Name"
	303	[1090]	LOADK    	R18 := 9.000000
	304	[1090]	MOVE     	R19 R6 ; R19 := R6
	305	[1090]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	306	[1091]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	307	[1091]	SELF     	R14 R14 K49 ; R15 := R14; R14 := R14[0xf64b7262]
	308	[1091]	MOVE     	R16 R12 ; R16 := R12
	309	[1091]	LOADK    	R17 K52 ; R17 := "Stat"
	310	[1091]	LOADK    	R18 := 9.000000
	311	[1091]	MOVE     	R19 R4 ; R19 := R4
	312	[1091]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	313	[1092]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	314	[1092]	SELF     	R14 R14 K49 ; R15 := R14; R14 := R14[0xf64b7262]
	315	[1092]	MOVE     	R16 R12 ; R16 := R12
	316	[1092]	LOADK    	R17 K53 ; R17 := "NameBackground"
	317	[1092]	LOADK    	R18 := 9.000000
	318	[1092]	MOVE     	R19 R1 ; R19 := R1
	319	[1092]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	320	[1093]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	321	[1093]	SELF     	R14 R14 K49 ; R15 := R14; R14 := R14[0xf64b7262]
	322	[1093]	MOVE     	R16 R12 ; R16 := R12
	323	[1093]	LOADK    	R17 K54 ; R17 := "StatBackground"
	324	[1093]	LOADK    	R18 := 9.000000
	325	[1093]	MOVE     	R19 R1 ; R19 := R1
	326	[1093]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	327	[1095]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	328	[1095]	SELF     	R14 R14 K55 ; R15 := R14; R14 := R14[0x91e13703]
	329	[1095]	MOVE     	R16 R12 ; R16 := R12
	330	[1095]	LOADK    	R17 K56 ; R17 := ".Icon"
	331	[1095]	CONCAT   	R16 R16 R17 ; R16 := R16 .. R17
	332	[1095]	LOADK    	R17 K57 ; R17 := "RectEdgeColor"
	333	[1095]	LOADK    	R18 := 0.000000
	334	[1095]	LOADK    	R19 := 0.000000
	335	[1095]	LOADK    	R20 := 0.000000
	336	[1095]	LOADK    	R21 := 0.000000
	337	[1095]	CALL     	R14 8 1 ; R14(R15,R16,R17,R18,R19,R20,R21)
	338	[1096]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	339	[1096]	SELF     	R14 R14 K55 ; R15 := R14; R14 := R14[0x91e13703]
	340	[1096]	MOVE     	R16 R12 ; R16 := R12
	341	[1096]	LOADK    	R17 K56 ; R17 := ".Icon"
	342	[1096]	CONCAT   	R16 R16 R17 ; R16 := R16 .. R17
	343	[1096]	LOADK    	R17 K58 ; R17 := "RectInnerColor"
	344	[1096]	LOADK    	R18 := 1.000000
	345	[1096]	LOADK    	R19 := 1.000000
	346	[1096]	LOADK    	R20 := 1.000000
	347	[1096]	LOADK    	R21 := 1.000000
	348	[1096]	CALL     	R14 8 1 ; R14(R15,R16,R17,R18,R19,R20,R21)
	349	[1098]	GETUPVAL 	R14 U7 ; R14 := U7
	350	[1098]	EQ       	0 R12 R14 ; if R12 ~= R14 then PC := 365
	351	[1098]	JMP      	365 ; PC := 365
	352	[1099]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	353	[1099]	SELF     	R14 R14 K55 ; R15 := R14; R14 := R14[0x91e13703]
	354	[1099]	MOVE     	R16 R12 ; R16 := R12
	355	[1099]	LOADK    	R17 K59 ; R17 := ".IconBacker"
	356	[1099]	CONCAT   	R16 R16 R17 ; R16 := R16 .. R17
	357	[1099]	LOADK    	R17 K57 ; R17 := "RectEdgeColor"
	358	[1099]	GETTABLE 	R18 R5 K60 ; R18 := R5["r"]
	359	[1099]	GETTABLE 	R19 R5 K61 ; R19 := R5["g"]
	360	[1099]	GETTABLE 	R20 R5 K62 ; R20 := R5["b"]
	361	[1099]	GETGLOBAL	R21 K63 ; R21 := BACKER_ALPHA
	362	[1099]	DIV      	R21 R21 K51 ; R21 := R21 / 100.000000
	363	[1099]	CALL     	R14 8 1 ; R14(R15,R16,R17,R18,R19,R20,R21)
	364	[1099]	JMP      	377 ; PC := 377
	365	[1101]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	366	[1101]	SELF     	R14 R14 K55 ; R15 := R14; R14 := R14[0x91e13703]
	367	[1101]	MOVE     	R16 R12 ; R16 := R12
	368	[1101]	LOADK    	R17 K59 ; R17 := ".IconBacker"
	369	[1101]	CONCAT   	R16 R16 R17 ; R16 := R16 .. R17
	370	[1101]	LOADK    	R17 K57 ; R17 := "RectEdgeColor"
	371	[1101]	GETTABLE 	R18 R5 K60 ; R18 := R5["r"]
	372	[1101]	GETTABLE 	R19 R5 K61 ; R19 := R5["g"]
	373	[1101]	GETTABLE 	R20 R5 K62 ; R20 := R5["b"]
	374	[1101]	GETGLOBAL	R21 K37 ; R21 := BORDER_ALPHA
	375	[1101]	DIV      	R21 R21 K51 ; R21 := R21 / 100.000000
	376	[1101]	CALL     	R14 8 1 ; R14(R15,R16,R17,R18,R19,R20,R21)
	377	[1103]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	378	[1103]	SELF     	R14 R14 K55 ; R15 := R14; R14 := R14[0x91e13703]
	379	[1103]	MOVE     	R16 R12 ; R16 := R12
	380	[1103]	LOADK    	R17 K59 ; R17 := ".IconBacker"
	381	[1103]	CONCAT   	R16 R16 R17 ; R16 := R16 .. R17
	382	[1103]	LOADK    	R17 K58 ; R17 := "RectInnerColor"
	383	[1103]	GETTABLE 	R18 R0 K60 ; R18 := R0["r"]
	384	[1103]	GETTABLE 	R19 R0 K61 ; R19 := R0["g"]
	385	[1103]	GETTABLE 	R20 R0 K62 ; R20 := R0["b"]
	386	[1103]	LOADK    	R21 := 1.000000
	387	[1103]	CALL     	R14 8 1 ; R14(R15,R16,R17,R18,R19,R20,R21)
	388	[1080]	FORLOOP  	R8 262 ; R8 += R10; if R8 <= R9 then begin PC := 262; R11 := R8 end
	389	[1106]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	390	[1106]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	391	[1106]	LOADK    	R16 K64 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconBacker"
	392	[1106]	LOADK    	R17 := 9.000000
	393	[1106]	MOVE     	R18 R1 ; R18 := R1
	394	[1106]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	395	[1107]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	396	[1107]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	397	[1107]	LOADK    	R16 K65 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconLabel"
	398	[1107]	LOADK    	R17 := 9.000000
	399	[1107]	MOVE     	R18 R4 ; R18 := R4
	400	[1107]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	401	[1109]	GETUPVAL 	R14 U8 ; R14 := U8
	402	[1109]	CALL     	R14 1 1 ; R14()
	403	[1111]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	404	[1111]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	405	[1111]	LOADK    	R16 K66 ; R16 := "FullScreenFade.Backer"
	406	[1111]	LOADK    	R17 := 9.000000
	407	[1111]	MOVE     	R18 R1 ; R18 := R1
	408	[1111]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	409	[1112]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	410	[1112]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	411	[1112]	LOADK    	R16 K66 ; R16 := "FullScreenFade.Backer"
	412	[1112]	LOADK    	R17 := 10.000000
	413	[1112]	GETGLOBAL	R18 K63 ; R18 := BACKER_ALPHA
	414	[1112]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	415	[1113]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	416	[1113]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	417	[1113]	LOADK    	R16 K67 ; R16 := "ExpandableArea.FullScreenFade.Backer"
	418	[1113]	LOADK    	R17 := 9.000000
	419	[1113]	MOVE     	R18 R1 ; R18 := R1
	420	[1113]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	421	[1114]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	422	[1114]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	423	[1114]	LOADK    	R16 K67 ; R16 := "ExpandableArea.FullScreenFade.Backer"
	424	[1114]	LOADK    	R17 := 10.000000
	425	[1114]	GETUPVAL 	R18 U9 ; R18 := U9
	426	[1114]	GETTABLE 	R18 R18 K68 ; R18 := R18[0x06d055f9]
	427	[1114]	GETUPVAL 	R19 U10 ; R19 := U10
	428	[1114]	CALL     	R19 1 2 ; R19 := R19()
	429	[1114]	LOADK    	R20 := 40.000000
	430	[1114]	GETGLOBAL	R21 K63 ; R21 := BACKER_ALPHA
	431	[1114]	CALL     	R18 4 0 ; R18,... := R18(R19,R20,R21)
	432	[1114]	CALL     	R14 0 1 ; R14(R15,...)
	433	[1115]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	434	[1115]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	435	[1115]	LOADK    	R16 K69 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.TopLine"
	436	[1115]	LOADK    	R17 := 9.000000
	437	[1115]	MOVE     	R18 R4 ; R18 := R4
	438	[1115]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	439	[1116]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	440	[1116]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	441	[1116]	LOADK    	R16 K70 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.TopLineRight"
	442	[1116]	LOADK    	R17 := 9.000000
	443	[1116]	MOVE     	R18 R4 ; R18 := R4
	444	[1116]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	445	[1117]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	446	[1117]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	447	[1117]	LOADK    	R16 K71 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
	448	[1117]	LOADK    	R17 := 9.000000
	449	[1117]	MOVE     	R18 R4 ; R18 := R4
	450	[1117]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	451	[1118]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	452	[1118]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	453	[1118]	LOADK    	R16 K69 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.TopLine"
	454	[1118]	LOADK    	R17 := 10.000000
	455	[1118]	GETGLOBAL	R18 K63 ; R18 := BACKER_ALPHA
	456	[1118]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	457	[1119]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	458	[1119]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	459	[1119]	LOADK    	R16 K70 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.TopLineRight"
	460	[1119]	LOADK    	R17 := 10.000000
	461	[1119]	GETGLOBAL	R18 K63 ; R18 := BACKER_ALPHA
	462	[1119]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	463	[1120]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	464	[1120]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	465	[1120]	LOADK    	R16 K71 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
	466	[1120]	LOADK    	R17 := 10.000000
	467	[1120]	GETGLOBAL	R18 K63 ; R18 := BACKER_ALPHA
	468	[1120]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	469	[1121]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	470	[1121]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	471	[1121]	LOADK    	R16 K72 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Tab"
	472	[1121]	LOADK    	R17 := 9.000000
	473	[1121]	MOVE     	R18 R4 ; R18 := R4
	474	[1121]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	475	[1122]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	476	[1122]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	477	[1122]	LOADK    	R16 K73 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
	478	[1122]	LOADK    	R17 := 9.000000
	479	[1122]	MOVE     	R18 R4 ; R18 := R4
	480	[1122]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	481	[1123]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	482	[1123]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	483	[1123]	LOADK    	R16 K74 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Fill"
	484	[1123]	LOADK    	R17 := 9.000000
	485	[1123]	MOVE     	R18 R1 ; R18 := R1
	486	[1123]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	487	[1124]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	488	[1124]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	489	[1124]	LOADK    	R16 K72 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Tab"
	490	[1124]	LOADK    	R17 := 10.000000
	491	[1124]	GETGLOBAL	R18 K63 ; R18 := BACKER_ALPHA
	492	[1124]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	493	[1125]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	494	[1125]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	495	[1125]	LOADK    	R16 K73 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
	496	[1125]	LOADK    	R17 := 10.000000
	497	[1125]	GETGLOBAL	R18 K63 ; R18 := BACKER_ALPHA
	498	[1125]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	499	[1126]	GETGLOBAL	R14 K24 ; R14 := 0xae91e43b
	500	[1126]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x67bc869f]
	501	[1126]	LOADK    	R16 K74 ; R16 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Fill"
	502	[1126]	LOADK    	R17 := 10.000000
	503	[1126]	GETGLOBAL	R18 K63 ; R18 := BACKER_ALPHA
	504	[1126]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	505	[1128]	GETGLOBAL	R14 K75 ; R14 := mInitialized
	506	[1128]	TEST     	R14 0 ; if not R14 then PC := 544
	507	[1128]	JMP      	544 ; PC := 544
	508	[1129]	GETGLOBAL	R14 K76 ; R14 := mAffinityGrid
	509	[1129]	EQ       	1 R14 K77 ; if R14 == nil then PC := 517
	510	[1129]	JMP      	517 ; PC := 517
	511	[1130]	GETGLOBAL	R14 K76 ; R14 := mAffinityGrid
	512	[1130]	SELF     	R14 R14 K78 ; R15 := R14; R14 := R14[0x71e9ac81]
	513	[1130]	LOADNIL  	R16 R16 ; R16 := nil
	514	[1130]	OP_LOADBOOL	R17 1 0 ; R17 := true
	515	[1130]	OP_LOADBOOL	R18 1 0 ; R18 := true
	516	[1130]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	517	[1133]	GETGLOBAL	R14 K79 ; R14 := mRewardGrid
	518	[1133]	EQ       	1 R14 K77 ; if R14 == nil then PC := 536
	519	[1133]	JMP      	536 ; PC := 536
	520	[1134]	GETGLOBAL	R14 K79 ; R14 := mRewardGrid
	521	[1134]	SELF     	R14 R14 K78 ; R15 := R14; R14 := R14[0x71e9ac81]
	522	[1134]	LOADNIL  	R16 R16 ; R16 := nil
	523	[1134]	OP_LOADBOOL	R17 1 0 ; R17 := true
	524	[1134]	OP_LOADBOOL	R18 1 0 ; R18 := true
	525	[1134]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	526	[1135]	GETGLOBAL	R14 K79 ; R14 := mRewardGrid
	527	[1135]	GETTABLE 	R14 R14 K80 ; R14 := R14["mSortMenu"]
	528	[1135]	SELF     	R14 R14 K78 ; R15 := R14; R14 := R14[0x71e9ac81]
	529	[1135]	LOADNIL  	R16 R16 ; R16 := nil
	530	[1135]	OP_LOADBOOL	R17 1 0 ; R17 := true
	531	[1135]	OP_LOADBOOL	R18 1 0 ; R18 := true
	532	[1135]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	533	[1136]	GETGLOBAL	R14 K81 ; R14 := mSearchBox
	534	[1136]	SELF     	R14 R14 K78 ; R15 := R14; R14 := R14[0x71e9ac81]
	535	[1136]	CALL     	R14 2 1 ; R14(R15)
	536	[1139]	GETGLOBAL	R14 K82 ; R14 := mStatsGrid
	537	[1139]	EQ       	1 R14 K77 ; if R14 == nil then PC := 544
	538	[1139]	JMP      	544 ; PC := 544
	539	[1140]	GETGLOBAL	R14 K82 ; R14 := mStatsGrid
	540	[1140]	SELF     	R14 R14 K78 ; R15 := R14; R14 := R14[0x71e9ac81]
	541	[1140]	LOADNIL  	R16 R16 ; R16 := nil
	542	[1140]	OP_LOADBOOL	R17 1 0 ; R17 := true
	543	[1140]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	544	[1143]	RETURN   	R0 1 ; return 

function #35 <?:1145,1150> (6 instructions, 24 bytes at 00000160F5397770)
0 params, 4 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[1149]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[1149]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xd5181643]
	3	[1149]	LOADK    	R2 K2 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Fill"
	4	[1149]	GETGLOBAL	R3 K3 ; R3 := 0xc35a924c
	5	[1149]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[1150]	RETURN   	R0 1 ; return 

function #36 <?:1152,1158> (6 instructions, 24 bytes at 00000160F53978B0)
0 params, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1157]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[1157]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xd5181643]
	3	[1157]	LOADK    	R2 K2 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Fill"
	4	[1157]	LOADNIL  	R3 R3 ; R3 := nil
	5	[1157]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[1158]	RETURN   	R0 1 ; return 

function #37 <?:1160,1185> (47 instructions, 188 bytes at 00000160F53979E0)
1 param, 6 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[1161]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[1161]	GETGLOBAL	R2 K1 ; R2 := mPulseBG
	3	[1161]	SETTABLE 	R1 K1 R2 ; R1["mPulseBG"] := R2
	4	[1162]	GETGLOBAL	R1 K1 ; R1 := mPulseBG
	5	[1162]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 8
	6	[1162]	JMP      	8 ; PC := 8
	7	[1163]	RETURN   	R0 1 ; return 
	8	[1166]	OP_LOADBOOL	R1 0 0 ; R1 := false
	9	[1167]	GETGLOBAL	R2 K1 ; R2 := mPulseBG
	10	[1167]	LT       	0 R2 K3 ; if R2 >= 0.000000 then PC := 13
	11	[1167]	JMP      	13 ; PC := 13
	12	[1168]	OP_LOADBOOL	R1 1 0 ; R1 := true
	13	[1171]	GETGLOBAL	R2 K1 ; R2 := mPulseBG
	14	[1171]	MUL      	R3 R0 K4 ; R3 := R0 * 4.000000
	15	[1171]	ADD      	R2 R2 R3 ; R2 := R2 + R3
	16	[1171]	SETGLOBALHASH	R2 K1 ; mPulseBG := R2
	17	[1172]	TEST     	R1 0 ; if not R1 then PC := 29
	18	[1172]	JMP      	29 ; PC := 29
	19	[1172]	GETGLOBAL	R2 K1 ; R2 := mPulseBG
	20	[1172]	LT       	0 K3 R2 ; if 0.000000 >= R2 then PC := 29
	21	[1172]	JMP      	29 ; PC := 29
	22	[1173]	LOADK    	R2 := 0.000000
	23	[1173]	SETGLOBALHASH	R2 K1 ; mPulseBG := R2
	24	[1174]	GETGLOBAL	R2 K5 ; R2 := 0x9ba7909f
	25	[1174]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xb21930e8]
	26	[1174]	CALL     	R2 2 1 ; R2(R3)
	27	[1175]	LOADNIL  	R2 R2 ; R2 := nil
	28	[1175]	SETGLOBALHASH	R2 K7 ; mDioramaLevel := R2
	29	[1178]	GETGLOBAL	R2 K1 ; R2 := mPulseBG
	30	[1178]	LT       	0 K8 R2 ; if 1.000000 >= R2 then PC := 39
	31	[1178]	JMP      	39 ; PC := 39
	32	[1179]	LOADNIL  	R2 R2 ; R2 := nil
	33	[1179]	SETGLOBALHASH	R2 K1 ; mPulseBG := R2
	34	[1180]	GETGLOBAL	R2 K9 ; R2 := 0xae91e43b
	35	[1180]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x58bec6d6]
	36	[1180]	LOADK    	R4 := 0.000000
	37	[1180]	CALL     	R2 3 1 ; R2(R3,R4)
	38	[1181]	RETURN   	R0 1 ; return 
	39	[1184]	GETGLOBAL	R2 K9 ; R2 := 0xae91e43b
	40	[1184]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x58bec6d6]
	41	[1184]	GETGLOBAL	R4 K11 ; R4 := 0x5bced4c4
	42	[1184]	GETTABLE 	R4 R4 K12 ; R4 := R4[0xe4a5b3ca]
	43	[1184]	GETGLOBAL	R5 K1 ; R5 := mPulseBG
	44	[1184]	CALL     	R4 2 2 ; R4 := R4(R5)
	45	[1184]	SUB      	R4 K8 R4 ; R4 := 1.000000 - R4
	46	[1184]	CALL     	R2 3 1 ; R2(R3,R4)
	47	[1185]	RETURN   	R0 1 ; return 

function #38 <?:1187,1193> (19 instructions, 76 bytes at 00000160F5397CF0)
0 params, 5 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[1188]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[1188]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	3	[1188]	LOADK    	R2 K2 ; R2 := "_root"
	4	[1188]	LOADK    	R3 := 10.000000
	5	[1188]	LOADK    	R4 := 0.000000
	6	[1188]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[1189]	GETGLOBAL	R0 K3 ; R0 := _T
	8	[1189]	GETTABLE 	R0 R0 K4 ; R0 := R0["SetButtons"]
	9	[1189]	EQ       	1 R0 K5 ; if R0 == nil then PC := 16
	10	[1189]	JMP      	16 ; PC := 16
	11	[1190]	GETGLOBAL	R0 K3 ; R0 := _T
	12	[1190]	GETTABLE 	R0 R0 K6 ; R0 := R0[0x1c5b546f]
	13	[1190]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	14	[1190]	LOADNIL  	R2 R2 ; R2 := nil
	15	[1190]	CALL     	R0 3 1 ; R0(R1,R2)
	16	[1192]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	17	[1192]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x32302b4a]
	18	[1192]	CALL     	R0 2 1 ; R0(R1)
	19	[1193]	RETURN   	R0 1 ; return 

function #39 <?:1195,1219> (75 instructions, 300 bytes at 00000160F5397ED0)
0 params, 3 slots, 3 upvalues, 0 locals, 24 constants, 0 functions
	1	[1196]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[1196]	GETTABLE 	R0 R0 K1 ; R0 := R0["eomScreenMode"]
	3	[1196]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[1196]	GETTABLE 	R1 R1 K2 ; R1 := R1["DETAILED_PREVIEW"]
	5	[1196]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 11
	6	[1196]	JMP      	11 ; PC := 11
	7	[1197]	GETUPVAL 	R0 U1 ; R0 := U1
	8	[1197]	CALL     	R0 1 1 ; R0()
	9	[1198]	RETURN   	R0 1 ; return 
	10	[1198]	JMP      	19 ; PC := 19
	11	[1199]	GETGLOBAL	R0 K0 ; R0 := _T
	12	[1199]	GETTABLE 	R0 R0 K1 ; R0 := R0["eomScreenMode"]
	13	[1199]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[1199]	GETTABLE 	R1 R1 K3 ; R1 := R1["ACTUAL_EOM"]
	15	[1199]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 19
	16	[1199]	JMP      	19 ; PC := 19
	17	[1200]	GETGLOBAL	R0 K4 ; R0 := 0x0032441c
	18	[1200]	SETTABLE 	R0 K5 K6 ; R0["NemesisEndBody"] := nil
	19	[1202]	GETGLOBAL	R0 K7 ; R0 := 0x7b998233
	20	[1202]	GETGLOBAL	R1 K8 ; R1 := 0xe7f2b02f
	21	[1202]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x565be9ee]
	22	[1202]	CALL     	R1 2 0 ; R1,... := R1(R2)
	23	[1202]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	24	[1202]	TEST     	R0 1 ; if R0 then PC := 40
	25	[1202]	JMP      	40 ; PC := 40
	26	[1202]	GETUPVAL 	R0 U2 ; R0 := U2
	27	[1202]	GETTABLE 	R0 R0 K10 ; R0 := R0[0xb73d420f]
	28	[1202]	CALL     	R0 1 2 ; R0 := R0()
	29	[1202]	GETUPVAL 	R1 U2 ; R1 := U2
	30	[1202]	GETTABLE 	R1 R1 K11 ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
	31	[1202]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 40
	32	[1202]	JMP      	40 ; PC := 40
	33	[1202]	GETUPVAL 	R0 U2 ; R0 := U2
	34	[1202]	GETTABLE 	R0 R0 K10 ; R0 := R0[0xb73d420f]
	35	[1202]	CALL     	R0 1 2 ; R0 := R0()
	36	[1202]	GETUPVAL 	R1 U2 ; R1 := U2
	37	[1202]	GETTABLE 	R1 R1 K12 ; R1 := R1["UI_MODE_IN_SPACE_HUB"]
	38	[1202]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 51
	39	[1202]	JMP      	51 ; PC := 51
	40	[1205]	GETGLOBAL	R0 K7 ; R0 := 0x7b998233
	41	[1205]	GETGLOBAL	R1 K13 ; R1 := mGameData
	42	[1205]	CALL     	R0 2 2 ; R0 := R0(R1)
	43	[1205]	TEST     	R0 1 ; if R0 then PC := 51
	44	[1205]	JMP      	51 ; PC := 51
	45	[1206]	GETGLOBAL	R0 K13 ; R0 := mGameData
	46	[1206]	SELF     	R0 R0 K14 ; R1 := R0; R0 := R0[0xa2ce04d3]
	47	[1206]	CALL     	R0 2 1 ; R0(R1)
	48	[1207]	GETGLOBAL	R0 K13 ; R0 := mGameData
	49	[1207]	SELF     	R0 R0 K15 ; R1 := R0; R0 := R0[0xa06ff1bf]
	50	[1207]	CALL     	R0 2 1 ; R0(R1)
	51	[1210]	GETGLOBAL	R0 K0 ; R0 := _T
	52	[1210]	SETTABLE 	R0 K16 K17 ; R0["hasMissionStats"] := false
	53	[1211]	GETGLOBAL	R0 K18 ; R0 := mInitialized
	54	[1211]	TEST     	R0 0 ; if not R0 then PC := 75
	55	[1211]	JMP      	75 ; PC := 75
	56	[1212]	OP_LOADBOOL	R0 1 0 ; R0 := true
	57	[1212]	SETGLOBALHASH	R0 K19 ; mInputBlocked := R0
	58	[1213]	GETGLOBAL	R0 K0 ; R0 := _T
	59	[1213]	GETTABLE 	R0 R0 K20 ; R0 := R0["IsInScreenStack"]
	60	[1213]	TEST     	R0 0 ; if not R0 then PC := 73
	61	[1213]	JMP      	73 ; PC := 73
	62	[1213]	GETGLOBAL	R0 K0 ; R0 := _T
	63	[1213]	GETTABLE 	R0 R0 K21 ; R0 := R0[0x1c5b5b33]
	64	[1213]	LOADK    	R1 K22 ; R1 := "EndOfMatch"
	65	[1213]	CALL     	R0 2 2 ; R0 := R0(R1)
	66	[1213]	TEST     	R0 0 ; if not R0 then PC := 73
	67	[1213]	JMP      	73 ; PC := 73
	68	[1214]	GETGLOBAL	R0 K0 ; R0 := _T
	69	[1214]	GETTABLE 	R0 R0 K23 ; R0 := R0[0x5e99b976]
	70	[1214]	LOADK    	R1 K22 ; R1 := "EndOfMatch"
	71	[1214]	CALL     	R0 2 1 ; R0(R1)
	72	[1214]	JMP      	75 ; PC := 75
	73	[1216]	GETUPVAL 	R0 U1 ; R0 := U1
	74	[1216]	CALL     	R0 1 1 ; R0()
	75	[1219]	RETURN   	R0 1 ; return 

function #40 <?:1221,1230> (17 instructions, 68 bytes at 00000160F4C162F0)
0 params, 2 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[1222]	GETGLOBAL	R0 K0 ; R0 := mDioramaLevel
	2	[1222]	TEST     	R0 0 ; if not R0 then PC := 15
	3	[1222]	JMP      	15 ; PC := 15
	4	[1223]	LOADNIL  	R0 R0 ; R0 := nil
	5	[1223]	SETGLOBALHASH	R0 K0 ; mDioramaLevel := R0
	6	[1224]	LOADK    	R0 := -1.000000
	7	[1224]	SETGLOBALHASH	R0 K1 ; mPulseBG := R0
	8	[1226]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[1226]	GETGLOBAL	R1 K2 ; R1 := 0xb693b6c1
	10	[1226]	CALL     	R1 1 0 ; R1,... := R1()
	11	[1226]	CALL     	R0 0 1 ; R0(R1,...)
	12	[1227]	GETGLOBAL	R0 K3 ; R0 := 0x9ba7909f
	13	[1227]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xb21930e8]
	14	[1227]	CALL     	R0 2 1 ; R0(R1)
	15	[1229]	GETUPVAL 	R0 U1 ; R0 := U1
	16	[1229]	CALL     	R0 1 1 ; R0()
	17	[1230]	RETURN   	R0 1 ; return 

function #41 <?:1232,1260> (64 instructions, 256 bytes at 00000160F4C164A0)
0 params, 3 slots, 4 upvalues, 0 locals, 19 constants, 0 functions
	1	[1233]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[1233]	SETGLOBALHASH	R0 K0 ; mInputBlocked := R0
	3	[1234]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[1234]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xcdc34211]
	5	[1234]	CALL     	R0 1 2 ; R0 := R0()
	6	[1235]	TEST     	R0 1 ; if R0 then PC := 10
	7	[1235]	JMP      	10 ; PC := 10
	8	[1236]	GETGLOBAL	R1 K2 ; R1 := 0x0032441c
	9	[1236]	SETTABLE 	R1 K3 K4 ; R1["NemesisEndBody"] := nil
	10	[1239]	TEST     	R0 1 ; if R0 then PC := 19
	11	[1239]	JMP      	19 ; PC := 19
	12	[1239]	GETGLOBAL	R1 K5 ; R1 := mOpenedFromPauseMenu
	13	[1239]	TEST     	R1 0 ; if not R1 then PC := 19
	14	[1239]	JMP      	19 ; PC := 19
	15	[1240]	GETGLOBAL	R1 K6 ; R1 := 0xae91e43b
	16	[1240]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x32302b4a]
	17	[1240]	CALL     	R1 2 1 ; R1(R2)
	18	[1241]	RETURN   	R0 1 ; return 
	19	[1243]	TEST     	R0 1 ; if R0 then PC := 23
	20	[1243]	JMP      	23 ; PC := 23
	21	[1244]	GETUPVAL 	R1 U1 ; R1 := U1
	22	[1244]	CALL     	R1 1 1 ; R1()
	23	[1246]	GETGLOBAL	R1 K8 ; R1 := _T
	24	[1246]	GETTABLE 	R1 R1 K9 ; R1 := R1["GoToPreviousScreen"]
	25	[1246]	EQ       	1 R1 K4 ; if R1 == nil then PC := 51
	26	[1246]	JMP      	51 ; PC := 51
	27	[1246]	GETGLOBAL	R1 K8 ; R1 := _T
	28	[1246]	GETTABLE 	R1 R1 K10 ; R1 := R1["eomScreenMode"]
	29	[1246]	GETUPVAL 	R2 U2 ; R2 := U2
	30	[1246]	GETTABLE 	R2 R2 K11 ; R2 := R2["ACTUAL_EOM"]
	31	[1246]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 51
	32	[1246]	JMP      	51 ; PC := 51
	33	[1247]	GETGLOBAL	R1 K8 ; R1 := _T
	34	[1247]	GETTABLE 	R1 R1 K12 ; R1 := R1[0x1c5b5b33]
	35	[1247]	LOADK    	R2 K13 ; R2 := "MissionStats"
	36	[1247]	CALL     	R1 2 2 ; R1 := R1(R2)
	37	[1247]	TEST     	R1 0 ; if not R1 then PC := 48
	38	[1247]	JMP      	48 ; PC := 48
	39	[1247]	GETGLOBAL	R1 K14 ; R1 := 0x7b998233
	40	[1247]	GETGLOBAL	R2 K15 ; R2 := 0xbe190284
	41	[1247]	CALL     	R1 2 2 ; R1 := R1(R2)
	42	[1247]	TEST     	R1 1 ; if R1 then PC := 48
	43	[1247]	JMP      	48 ; PC := 48
	44	[1248]	GETGLOBAL	R1 K8 ; R1 := _T
	45	[1248]	GETTABLE 	R1 R1 K16 ; R1 := R1[0x4e4e6b0c]
	46	[1248]	CALL     	R1 1 1 ; R1()
	47	[1248]	JMP      	59 ; PC := 59
	48	[1250]	GETUPVAL 	R1 U1 ; R1 := U1
	49	[1250]	CALL     	R1 1 1 ; R1()
	50	[1251]	JMP      	59 ; PC := 59
	51	[1253]	TEST     	R0 0 ; if not R0 then PC := 57
	52	[1253]	JMP      	57 ; PC := 57
	53	[1254]	GETGLOBAL	R1 K6 ; R1 := 0xae91e43b
	54	[1254]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x32302b4a]
	55	[1254]	CALL     	R1 2 1 ; R1(R2)
	56	[1254]	JMP      	59 ; PC := 59
	57	[1256]	GETUPVAL 	R1 U1 ; R1 := U1
	58	[1256]	CALL     	R1 1 1 ; R1()
	59	[1259]	GETUPVAL 	R1 U3 ; R1 := U3
	60	[1259]	GETTABLE 	R1 R1 K17 ; R1 := R1[0x659d451f]
	61	[1259]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	62	[1259]	GETTABLE 	R2 R2 K18 ; R2 := R2["UISound_GridOpenTwo"]
	63	[1259]	CALL     	R1 2 1 ; R1(R2)
	64	[1260]	RETURN   	R0 1 ; return 

function #42 <?:1262,1265> (5 instructions, 20 bytes at 00000160F4C168D0)
0 params, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[1263]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[1263]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[1264]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[1264]	CALL     	R0 1 1 ; R0()
	5	[1265]	RETURN   	R0 1 ; return 

function #43 <?:1267,1273> (19 instructions, 76 bytes at 00000160F4C169C0)
2 params, 7 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1268]	OP_LOADBOOL	R2 1 0 ; R2 := true
	2	[1269]	GETGLOBAL	R3 K0 ; R3 := mPlayerMissionInfo
	3	[1269]	EQ       	1 R3 K1 ; if R3 == nil then PC := 18
	4	[1269]	JMP      	18 ; PC := 18
	5	[1269]	GETGLOBAL	R3 K2 ; R3 := mArchWingRequired
	6	[1269]	TEST     	R3 0 ; if not R3 then PC := 18
	7	[1269]	JMP      	18 ; PC := 18
	8	[1269]	EQ       	1 R0 K4 ; if R0 == 2.000000 then PC := 18
	9	[1269]	JMP      	18 ; PC := 18
	10	[1269]	GETGLOBAL	R3 K0 ; R3 := mPlayerMissionInfo
	11	[1269]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x438225b2]
	12	[1269]	MOVE     	R5 R0 ; R5 := R0
	13	[1269]	MOVE     	R6 R1 ; R6 := R1
	14	[1269]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	15	[1269]	EQ       	0 R3 K6 ; if R3 ~= 0.000000 then PC := 18
	16	[1269]	JMP      	18 ; PC := 18
	17	[1270]	OP_LOADBOOL	R2 0 0 ; R2 := false
	18	[1272]	RETURN   	R2 2 ; return R2 
	19	[1273]	RETURN   	R0 1 ; return 

function #44 <?:1275,1282> (23 instructions, 92 bytes at 00000160F4C16B90)
0 params, 3 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[1276]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1276]	CALL     	R0 1 2 ; R0 := R0()
	3	[1277]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	4	[1277]	MOVE     	R2 R0 ; R2 := R0
	5	[1277]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[1277]	TEST     	R1 0 ; if not R1 then PC := 10
	7	[1277]	JMP      	10 ; PC := 10
	8	[1278]	OP_LOADBOOL	R1 0 0 ; R1 := false
	9	[1278]	RETURN   	R1 2 ; return R1 
	10	[1281]	GETTABLE 	R1 R0 K1 ; R1 := R0["missionType"]
	11	[1281]	EQ       	0 R1 K3 ; if R1 ~= 28.000000 then PC := 20
	12	[1281]	JMP      	20 ; PC := 20
	13	[1281]	GETTABLE 	R1 R0 K4 ; R1 := R0["sortieId"]
	14	[1281]	EQ       	0 R1 K5 ; if R1 ~= "" then PC := 20
	15	[1281]	JMP      	20 ; PC := 20
	16	[1281]	GETTABLE 	R1 R0 K6 ; R1 := R0["goalTag"]
	17	[1281]	GETGLOBAL	R2 K7 ; R2 := EMPTY_SYMBOL
	18	[1281]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 21
	19	[1281]	JMP      	21 ; PC := 21
	20	[1281]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 21
	21	[1281]	OP_LOADBOOL	R1 1 0 ; R1 := true
	22	[1281]	RETURN   	R1 2 ; return R1 
	23	[1282]	RETURN   	R0 1 ; return 

function #45 <?:1284,1291> (16 instructions, 64 bytes at 00000160F4C16D90)
0 params, 3 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[1285]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1285]	CALL     	R0 1 2 ; R0 := R0()
	3	[1286]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	4	[1286]	MOVE     	R2 R0 ; R2 := R0
	5	[1286]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[1286]	TEST     	R1 0 ; if not R1 then PC := 10
	7	[1286]	JMP      	10 ; PC := 10
	8	[1287]	OP_LOADBOOL	R1 0 0 ; R1 := false
	9	[1287]	RETURN   	R1 2 ; return R1 
	10	[1290]	GETTABLE 	R1 R0 K1 ; R1 := R0["missionType"]
	11	[1290]	EQ       	1 R1 K3 ; if R1 == 31.000000 then PC := 14
	12	[1290]	JMP      	14 ; PC := 14
	13	[1290]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 14
	14	[1290]	OP_LOADBOOL	R1 1 0 ; R1 := true
	15	[1290]	RETURN   	R1 2 ; return R1 
	16	[1291]	RETURN   	R0 1 ; return 

function #46 <?:1293,1304> (57 instructions, 228 bytes at 00000160F4C16F10)
0 params, 5 slots, 4 upvalues, 0 locals, 12 constants, 0 functions
	1	[1294]	GETGLOBAL	R0 K0 ; R0 := mWaitingForMissionComplete
	2	[1294]	TEST     	R0 1 ; if R0 then PC := 13
	3	[1294]	JMP      	13 ; PC := 13
	4	[1294]	GETGLOBAL	R0 K1 ; R0 := mWaitingForReturnToShip
	5	[1294]	TEST     	R0 0 ; if not R0 then PC := 15
	6	[1294]	JMP      	15 ; PC := 15
	7	[1294]	GETGLOBAL	R0 K2 ; R0 := mShouldClose
	8	[1294]	TEST     	R0 0 ; if not R0 then PC := 13
	9	[1294]	JMP      	13 ; PC := 13
	10	[1294]	GETGLOBAL	R0 K3 ; R0 := mAutoCloseDelay
	11	[1294]	EQ       	1 R0 K4 ; if R0 == -1.000000 then PC := 15
	12	[1294]	JMP      	15 ; PC := 15
	13	[1295]	OP_LOADBOOL	R0 1 0 ; R0 := true
	14	[1295]	RETURN   	R0 2 ; return R0 
	15	[1298]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[1298]	GETTABLE 	R0 R0 K5 ; R0 := R0[0xcdc34211]
	17	[1298]	CALL     	R0 1 2 ; R0 := R0()
	18	[1298]	TEST     	R0 0 ; if not R0 then PC := 23
	19	[1298]	JMP      	23 ; PC := 23
	20	[1298]	GETGLOBAL	R0 K6 ; R0 := 0xbe190284
	21	[1298]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x5d204145]
	22	[1298]	CALL     	R0 2 2 ; R0 := R0(R1)
	23	[1299]	GETUPVAL 	R1 U1 ; R1 := U1
	24	[1299]	CALL     	R1 1 2 ; R1 := R1()
	25	[1299]	TEST     	R1 0 ; if not R1 then PC := 28
	26	[1299]	JMP      	28 ; PC := 28
	27	[1299]	NOT      	R1 R0 ; R1 := not R0
	28	[1300]	GETUPVAL 	R2 U2 ; R2 := U2
	29	[1300]	CALL     	R2 1 2 ; R2 := R2()
	30	[1301]	GETUPVAL 	R3 U0 ; R3 := U0
	31	[1301]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xcdc34211]
	32	[1301]	CALL     	R3 1 2 ; R3 := R3()
	33	[1301]	TEST     	R3 0 ; if not R3 then PC := 56
	34	[1301]	JMP      	56 ; PC := 56
	35	[1301]	TEST     	R1 1 ; if R1 then PC := 54
	36	[1301]	JMP      	54 ; PC := 54
	37	[1302]	TEST     	R2 0 ; if not R2 then PC := 41
	38	[1302]	JMP      	41 ; PC := 41
	39	[1302]	TESTSET  	R3 R0 0 ; if not R0 then PC := 56 else R3 := R0 
	40	[1302]	JMP      	56 ; PC := 56
	41	[1303]	TESTSET  	R3 R0 1 ; if R0 then PC := 56 else R3 := R0 
	42	[1303]	JMP      	56 ; PC := 56
	43	[1303]	GETGLOBAL	R3 K6 ; R3 := 0xbe190284
	44	[1303]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x3790d299]
	45	[1303]	CALL     	R3 2 2 ; R3 := R3(R4)
	46	[1303]	TEST     	R3 1 ; if R3 then PC := 56
	47	[1303]	JMP      	56 ; PC := 56
	48	[1303]	GETGLOBAL	R3 K9 ; R3 := _T
	49	[1303]	GETTABLE 	R3 R3 K10 ; R3 := R3["eomScreenMode"]
	50	[1303]	GETUPVAL 	R4 U3 ; R4 := U3
	51	[1303]	GETTABLE 	R4 R4 K11 ; R4 := R4["ACTUAL_EOM"]
	52	[1303]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 55
	53	[1303]	JMP      	55 ; PC := 55
	54	[1303]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 55
	55	[1303]	OP_LOADBOOL	R3 1 0 ; R3 := true
	56	[1303]	RETURN   	R3 2 ; return R3 
	57	[1304]	RETURN   	R0 1 ; return 

function #47 <?:1306,1311> (7 instructions, 28 bytes at 00000160F4C17270)
0 params, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[1307]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1307]	CALL     	R0 1 2 ; R0 := R0()
	3	[1307]	TEST     	R0 1 ; if R0 then PC := 7
	4	[1307]	JMP      	7 ; PC := 7
	5	[1309]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[1309]	CALL     	R0 1 1 ; R0()
	7	[1311]	RETURN   	R0 1 ; return 

function #48 <?:1313,1325> (53 instructions, 212 bytes at 00000160F4C17360)
1 param, 7 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[1314]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[1314]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	3	[1314]	LOADK    	R3 K2 ; R3 := "TopAnchor.Header"
	4	[1314]	LOADK    	R4 := 11.000000
	5	[1314]	GETGLOBAL	R5 K3 ; R5 := ScreenType
	6	[1314]	GETTABLE 	R5 R5 K4 ; R5 := R5["MASTERY"]
	7	[1314]	EQ       	0 R0 R5 ; if R0 ~= R5 then PC := 10
	8	[1314]	JMP      	10 ; PC := 10
	9	[1314]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 10
	10	[1314]	OP_LOADBOOL	R5 1 0 ; R5 := true
	11	[1314]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	12	[1315]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	13	[1315]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	14	[1315]	LOADK    	R3 K5 ; R3 := "ExpandableArea"
	15	[1315]	LOADK    	R4 := 11.000000
	16	[1315]	GETGLOBAL	R5 K3 ; R5 := ScreenType
	17	[1315]	GETTABLE 	R5 R5 K6 ; R5 := R5["ITEMS"]
	18	[1315]	EQ       	1 R0 R5 ; if R0 == R5 then PC := 25
	19	[1315]	JMP      	25 ; PC := 25
	20	[1315]	GETGLOBAL	R5 K3 ; R5 := ScreenType
	21	[1315]	GETTABLE 	R5 R5 K7 ; R5 := R5["REP"]
	22	[1315]	EQ       	1 R0 R5 ; if R0 == R5 then PC := 25
	23	[1315]	JMP      	25 ; PC := 25
	24	[1315]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 25
	25	[1315]	OP_LOADBOOL	R5 1 0 ; R5 := true
	26	[1315]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	27	[1317]	GETGLOBAL	R1 K8 ; R1 := 0x7b998233
	28	[1317]	GETGLOBAL	R2 K9 ; R2 := mPvpMovie
	29	[1317]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[1317]	TEST     	R1 1 ; if R1 then PC := 52
	31	[1317]	JMP      	52 ; PC := 52
	32	[1318]	GETGLOBAL	R1 K3 ; R1 := ScreenType
	33	[1318]	GETTABLE 	R1 R1 K10 ; R1 := R1["SCOREBOARD"]
	34	[1318]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 37
	35	[1318]	JMP      	37 ; PC := 37
	36	[1318]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 37
	37	[1318]	OP_LOADBOOL	R1 1 0 ; R1 := true
	38	[1319]	GETGLOBAL	R2 K9 ; R2 := mPvpMovie
	39	[1319]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x368ad758]
	40	[1319]	MOVE     	R4 R1 ; R4 := R1
	41	[1319]	CALL     	R2 3 1 ; R2(R3,R4)
	42	[1320]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	43	[1320]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xbc838db9]
	44	[1320]	MOVE     	R4 R1 ; R4 := R1
	45	[1320]	CALL     	R2 3 1 ; R2(R3,R4)
	46	[1321]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	47	[1321]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xaade900e]
	48	[1321]	LOADK    	R4 K13 ; R4 := "FullScreenFade"
	49	[1321]	LOADK    	R5 := 11.000000
	50	[1321]	MOVE     	R6 R1 ; R6 := R1
	51	[1321]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	52	[1324]	SETGLOBALHASH	R0 K14 ; mCurrentScreenType := R0
	53	[1325]	RETURN   	R0 1 ; return 

function #49 <?:1327,1418> (317 instructions, 1268 bytes at 00000160F4C17710)
1 param, 16 slots, 18 upvalues, 0 locals, 71 constants, 7 functions
	1	[1328]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1328]	TEST     	R1 0 ; if not R1 then PC := 5
	3	[1328]	JMP      	5 ; PC := 5
	4	[1329]	RETURN   	R0 1 ; return 
	5	[1332]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[1332]	GETTABLE 	R1 R1 K1 ; R1 := R1["SetButtons"]
	7	[1332]	EQ       	1 R1 K2 ; if R1 == nil then PC := 21
	8	[1332]	JMP      	21 ; PC := 21
	9	[1332]	GETGLOBAL	R1 K3 ; R1 := mWaitingForMissionComplete
	10	[1332]	TEST     	R1 1 ; if R1 then PC := 21
	11	[1332]	JMP      	21 ; PC := 21
	12	[1332]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	13	[1332]	GETGLOBAL	R2 K5 ; R2 := 0xbe190284
	14	[1332]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[1332]	TEST     	R1 1 ; if R1 then PC := 21
	16	[1332]	JMP      	21 ; PC := 21
	17	[1332]	GETGLOBAL	R1 K0 ; R1 := _T
	18	[1332]	GETTABLE 	R1 R1 K6 ; R1 := R1["eomScreenMode"]
	19	[1332]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 24
	20	[1332]	JMP      	24 ; PC := 24
	21	[1333]	OP_LOADBOOL	R1 1 0 ; R1 := true
	22	[1333]	SETGLOBALHASH	R1 K7 ; mQueueUpdateButtons := R1
	23	[1334]	RETURN   	R0 1 ; return 
	24	[1337]	GETGLOBAL	R1 K7 ; R1 := mQueueUpdateButtons
	25	[1337]	TEST     	R1 0 ; if not R1 then PC := 43
	26	[1337]	JMP      	43 ; PC := 43
	27	[1338]	GETGLOBAL	R1 K8 ; R1 := 0x9ba7909f
	28	[1338]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xbcfb64ab]
	29	[1338]	GETGLOBAL	R3 K10 ; R3 := 0x0032441c
	30	[1338]	GETTABLE 	R3 R3 K11 ; R3 := R3["UIMovie_DetailedPurchaseDialog"]
	31	[1338]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	32	[1339]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	33	[1339]	MOVE     	R3 R1 ; R3 := R1
	34	[1339]	CALL     	R2 2 2 ; R2 := R2(R3)
	35	[1339]	TEST     	R2 1 ; if R2 then PC := 43
	36	[1339]	JMP      	43 ; PC := 43
	37	[1340]	SELF     	R2 R1 K12 ; R3 := R1; R2 := R1[0x32302b4a]
	38	[1340]	CALL     	R2 2 1 ; R2(R3)
	39	[1341]	GETUPVAL 	R2 U1 ; R2 := U1
	40	[1341]	CALL     	R2 1 1 ; R2()
	41	[1342]	GETUPVAL 	R2 U2 ; R2 := U2
	42	[1342]	CALL     	R2 1 1 ; R2()
	43	[1345]	OP_LOADBOOL	R2 0 0 ; R2 := false
	44	[1345]	SETGLOBALHASH	R2 K7 ; mQueueUpdateButtons := R2
	45	[1347]	GETUPVAL 	R2 U3 ; R2 := U3
	46	[1347]	TEST     	R2 0 ; if not R2 then PC := 57
	47	[1347]	JMP      	57 ; PC := 57
	48	[1348]	GETGLOBAL	R2 K0 ; R2 := _T
	49	[1348]	GETTABLE 	R2 R2 K13 ; R2 := R2[0x1c5b546f]
	50	[1348]	GETGLOBAL	R3 K14 ; R3 := 0xae91e43b
	51	[1348]	NEWTABLE 	R4 0 0 ; R4 := {}
	52	[1348]	GETGLOBAL	R5 K15 ; R5 := 0xcd0165a3
	53	[1348]	LOADK    	R6 := 1.000000
	54	[1348]	CALL     	R5 2 0 ; R5,... := R5(R6)
	55	[1348]	CALL     	R2 0 1 ; R2(R3,...)
	56	[1349]	RETURN   	R0 1 ; return 
	57	[1352]	NEWTABLE 	R2 0 0 ; R2 := {}
	58	[1353]	GETUPVAL 	R3 U4 ; R3 := U4
	59	[1353]	GETTABLE 	R3 R3 K16 ; R3 := R3[0xcdc34211]
	60	[1353]	CALL     	R3 1 2 ; R3 := R3()
	61	[1354]	GETUPVAL 	R4 U4 ; R4 := U4
	62	[1354]	GETTABLE 	R4 R4 K17 ; R4 := R4[0xf2104b9a]
	63	[1354]	CALL     	R4 1 2 ; R4 := R4()
	64	[1356]	GETUPVAL 	R5 U5 ; R5 := U5
	65	[1356]	CALL     	R5 1 2 ; R5 := R5()
	66	[1356]	TEST     	R5 1 ; if R5 then PC := 123
	67	[1356]	JMP      	123 ; PC := 123
	68	[1357]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	69	[1357]	GETGLOBAL	R6 K18 ; R6 := mPvpMovie
	70	[1357]	CALL     	R5 2 2 ; R5 := R5(R6)
	71	[1357]	TEST     	R5 1 ; if R5 then PC := 99
	72	[1357]	JMP      	99 ; PC := 99
	73	[1357]	GETGLOBAL	R5 K19 ; R5 := mCurrentScreenType
	74	[1357]	GETGLOBAL	R6 K20 ; R6 := ScreenType
	75	[1357]	GETTABLE 	R6 R6 K21 ; R6 := R6["SCOREBOARD"]
	76	[1357]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 99
	77	[1357]	JMP      	99 ; PC := 99
	78	[1357]	GETUPVAL 	R5 U6 ; R5 := U6
	79	[1357]	TEST     	R5 1 ; if R5 then PC := 99
	80	[1357]	JMP      	99 ; PC := 99
	81	[1358]	GETGLOBAL	R5 K14 ; R5 := 0xae91e43b
	82	[1358]	SELF     	R5 R5 K22 ; R6 := R5; R5 := R5[0x42b04007]
	83	[1358]	LOADK    	R7 K23 ; R7 := "/Lotus/Language/Labels/EOM_PVP_Stats"
	84	[1358]	OP_LOADBOOL	R8 1 0 ; R8 := true
	85	[1358]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	86	[1359]	GETGLOBAL	R6 K24 ; R6 := 0x33bdd652
	87	[1359]	GETTABLE 	R6 R6 K25 ; R6 := R6[0x23d5322f]
	88	[1359]	MOVE     	R7 R2 ; R7 := R2
	89	[1359]	NEWTABLE 	R8 0 3 ; R8 := {}
	90	[1359]	SETTABLE 	R8 K26 R5 ; R8["Label"] := R5
	91	[1364]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	92	[1364]	GETUPVAL 	R0 U7 ; R0 := U7
	93	[1364]	GETUPVAL 	R0 U8 ; R0 := U8
	94	[1364]	GETUPVAL 	R0 U9 ; R0 := U9
	95	[1364]	SETTABLE 	R8 K27 R9 ; R8["CallBack"] := R9
	96	[1364]	SETTABLE 	R8 K28 K29 ; R8["CallOut"] := "MENU_RTRIGGER1"
	97	[1359]	CALL     	R6 3 1 ; R6(R7,R8)
	98	[1364]	JMP      	123 ; PC := 123
	99	[1366]	GETGLOBAL	R6 K14 ; R6 := 0xae91e43b
	100	[1366]	SELF     	R6 R6 K22 ; R7 := R6; R6 := R6[0x42b04007]
	101	[1366]	GETUPVAL 	R8 U6 ; R8 := U6
	102	[1366]	TEST     	R8 0 ; if not R8 then PC := 107
	103	[1366]	JMP      	107 ; PC := 107
	104	[1366]	LOADK    	R8 K30 ; R8 := "/Lotus/Language/Labels/EOM_Progression"
	105	[1366]	TEST     	R8 1 ; if R8 then PC := 108
	106	[1366]	JMP      	108 ; PC := 108
	107	[1366]	LOADK    	R8 K31 ; R8 := "/Lotus/Language/Labels/EOM_Stats"
	108	[1366]	OP_LOADBOOL	R9 1 0 ; R9 := true
	109	[1366]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	110	[1367]	GETGLOBAL	R7 K24 ; R7 := 0x33bdd652
	111	[1367]	GETTABLE 	R7 R7 K25 ; R7 := R7[0x23d5322f]
	112	[1367]	MOVE     	R8 R2 ; R8 := R2
	113	[1367]	NEWTABLE 	R9 0 3 ; R9 := {}
	114	[1367]	SETTABLE 	R9 K26 R6 ; R9["Label"] := R6
	115	[1373]	CLOSURE  	R10 1 ; R10 := closure(Function #2)
	116	[1373]	GETUPVAL 	R0 U6 ; R0 := U6
	117	[1373]	GETUPVAL 	R0 U7 ; R0 := U7
	118	[1373]	GETUPVAL 	R0 U8 ; R0 := U8
	119	[1373]	GETUPVAL 	R0 U9 ; R0 := U9
	120	[1373]	SETTABLE 	R9 K27 R10 ; R9["CallBack"] := R10
	121	[1373]	SETTABLE 	R9 K28 K29 ; R9["CallOut"] := "MENU_RTRIGGER1"
	122	[1367]	CALL     	R7 3 1 ; R7(R8,R9)
	123	[1377]	GETUPVAL 	R7 U10 ; R7 := U10
	124	[1377]	EQ       	1 R7 K32 ; if R7 == "" then PC := 137
	125	[1377]	JMP      	137 ; PC := 137
	126	[1378]	GETGLOBAL	R7 K24 ; R7 := 0x33bdd652
	127	[1378]	GETTABLE 	R7 R7 K25 ; R7 := R7[0x23d5322f]
	128	[1378]	MOVE     	R8 R2 ; R8 := R2
	129	[1378]	NEWTABLE 	R9 0 3 ; R9 := {}
	130	[1378]	SETTABLE 	R9 K26 K33 ; R9["Label"] := "/Lotus/Language/Menu/LastMissionFailReason"
	131	[1378]	CLOSURE  	R10 2 ; R10 := closure(Function #3)
	132	[1378]	GETUPVAL 	R0 U11 ; R0 := U11
	133	[1378]	GETUPVAL 	R0 U10 ; R0 := U10
	134	[1378]	SETTABLE 	R9 K27 R10 ; R9["CallBack"] := R10
	135	[1378]	SETTABLE 	R9 K28 K34 ; R9["CallOut"] := "MENU_GENERIC2"
	136	[1378]	CALL     	R7 3 1 ; R7(R8,R9)
	137	[1381]	TEST     	R4 1 ; if R4 then PC := 215
	138	[1381]	JMP      	215 ; PC := 215
	139	[1381]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	140	[1381]	GETGLOBAL	R8 K35 ; R8 := mGameData
	141	[1381]	CALL     	R7 2 2 ; R7 := R7(R8)
	142	[1381]	TEST     	R7 1 ; if R7 then PC := 215
	143	[1381]	JMP      	215 ; PC := 215
	144	[1381]	GETGLOBAL	R7 K35 ; R7 := mGameData
	145	[1381]	SELF     	R7 R7 K36 ; R8 := R7; R7 := R7[0x4b0ebe0c]
	146	[1381]	CALL     	R7 2 2 ; R7 := R7(R8)
	147	[1381]	EQ       	1 R7 K32 ; if R7 == "" then PC := 215
	148	[1381]	JMP      	215 ; PC := 215
	149	[1383]	GETUPVAL 	R7 U12 ; R7 := U12
	150	[1383]	CALL     	R7 1 2 ; R7 := R7()
	151	[1385]	OP_LOADBOOL	R8 1 0 ; R8 := true
	152	[1386]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	153	[1386]	GETTABLE 	R10 R7 K37 ; R10 := R7["periodicMissionTag"]
	154	[1386]	CALL     	R9 2 2 ; R9 := R9(R10)
	155	[1386]	TEST     	R9 1 ; if R9 then PC := 163
	156	[1386]	JMP      	163 ; PC := 163
	157	[1387]	GETGLOBAL	R9 K38 ; R9 := 0x25d99d89
	158	[1387]	SELF     	R9 R9 K39 ; R10 := R9; R9 := R9[0xc3150d06]
	159	[1387]	GETTABLE 	R11 R7 K37 ; R11 := R7["periodicMissionTag"]
	160	[1387]	GETTABLE 	R12 R7 K40 ; R12 := R7["periodicMissionCooldown"]
	161	[1387]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	162	[1387]	MOVE     	R8 R9 ; R8 := R9
	163	[1389]	GETTABLE 	R9 R7 K41 ; R9 := R7["missionType"]
	164	[1389]	EQ       	1 R9 K43 ; if R9 == 28.000000 then PC := 167
	165	[1389]	JMP      	167 ; PC := 167
	166	[1389]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 167
	167	[1389]	OP_LOADBOOL	R9 1 0 ; R9 := true
	168	[1390]	GETTABLE 	R10 R7 K44 ; R10 := R7["levelOverride"]
	169	[1391]	GETGLOBAL	R11 K4 ; R11 := 0x7b998233
	170	[1391]	MOVE     	R12 R10 ; R12 := R10
	171	[1391]	CALL     	R11 2 2 ; R11 := R11(R12)
	172	[1391]	TEST     	R11 1 ; if R11 then PC := 192
	173	[1391]	JMP      	192 ; PC := 192
	174	[1391]	GETGLOBAL	R11 K45 ; R11 := 0x7f5022cf
	175	[1391]	GETTABLE 	R11 R11 K46 ; R11 := R11[0xa5c556b9]
	176	[1391]	GETGLOBAL	R12 K47 ; R12 := 0x64fb1586
	177	[1391]	SELF     	R13 R10 K48 ; R14 := R10; R13 := R10[0xed4e0128]
	178	[1391]	CALL     	R13 2 0 ; R13,... := R13(R14)
	179	[1391]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	180	[1391]	LOADK    	R13 K49 ; R13 := "Zariman"
	181	[1391]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	182	[1391]	EQ       	1 R11 K2 ; if R11 == nil then PC := 192
	183	[1391]	JMP      	192 ; PC := 192
	184	[1391]	GETUPVAL 	R11 U4 ; R11 := U4
	185	[1391]	GETTABLE 	R11 R11 K50 ; R11 := R11[0xb73d420f]
	186	[1391]	CALL     	R11 1 2 ; R11 := R11()
	187	[1391]	GETUPVAL 	R12 U4 ; R12 := U4
	188	[1391]	GETTABLE 	R12 R12 K51 ; R12 := R12["UI_MODE_IN_SPACE_HUB"]
	189	[1391]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 192
	190	[1391]	JMP      	192 ; PC := 192
	191	[1394]	OP_LOADBOOL	R9 1 0 ; R9 := true
	192	[1396]	TEST     	R8 0 ; if not R8 then PC := 215
	193	[1396]	JMP      	215 ; PC := 215
	194	[1396]	GETTABLE 	R11 R7 K52 ; R11 := R7["goalTag"]
	195	[1396]	GETGLOBAL	R12 K53 ; R12 := 0x0469f296
	196	[1396]	LOADK    	R13 K54 ; R13 := "TreasureHunt"
	197	[1396]	CALL     	R12 2 2 ; R12 := R12(R13)
	198	[1396]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 215
	199	[1396]	JMP      	215 ; PC := 215
	200	[1396]	TEST     	R9 1 ; if R9 then PC := 215
	201	[1396]	JMP      	215 ; PC := 215
	202	[1396]	GETGLOBAL	R11 K0 ; R11 := _T
	203	[1396]	GETTABLE 	R11 R11 K55 ; R11 := R11["HasDailyTribute"]
	204	[1396]	TEST     	R11 1 ; if R11 then PC := 215
	205	[1396]	JMP      	215 ; PC := 215
	206	[1397]	GETGLOBAL	R11 K24 ; R11 := 0x33bdd652
	207	[1397]	GETTABLE 	R11 R11 K25 ; R11 := R11[0x23d5322f]
	208	[1397]	MOVE     	R12 R2 ; R12 := R2
	209	[1397]	NEWTABLE 	R13 0 3 ; R13 := {}
	210	[1397]	SETTABLE 	R13 K26 K56 ; R13["Label"] := "/Lotus/Language/Menu/PlayLastMission"
	211	[1397]	GETUPVAL 	R14 U13 ; R14 := U13
	212	[1397]	SETTABLE 	R13 K27 R14 ; R13["CallBack"] := R14
	213	[1397]	SETTABLE 	R13 K28 K57 ; R13["CallOut"] := "MENU_GENERIC1"
	214	[1397]	CALL     	R11 3 1 ; R11(R12,R13)
	215	[1401]	GETGLOBAL	R11 K0 ; R11 := _T
	216	[1401]	GETTABLE 	R11 R11 K6 ; R11 := R11["eomScreenMode"]
	217	[1401]	GETUPVAL 	R12 U14 ; R12 := U14
	218	[1401]	GETTABLE 	R12 R12 K58 ; R12 := R12["DETAILED_PREVIEW"]
	219	[1401]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 230
	220	[1401]	JMP      	230 ; PC := 230
	221	[1402]	GETGLOBAL	R11 K24 ; R11 := 0x33bdd652
	222	[1402]	GETTABLE 	R11 R11 K25 ; R11 := R11[0x23d5322f]
	223	[1402]	MOVE     	R12 R2 ; R12 := R2
	224	[1402]	NEWTABLE 	R13 0 3 ; R13 := {}
	225	[1402]	SETTABLE 	R13 K26 K59 ; R13["Label"] := "/Lotus/Language/Menu/Global_Back"
	226	[1402]	CLOSURE  	R14 3 ; R14 := closure(Function #4)
	227	[1402]	SETTABLE 	R13 K27 R14 ; R13["CallBack"] := R14
	228	[1402]	SETTABLE 	R13 K28 K60 ; R13["CallOut"] := "MENU_CANCEL"
	229	[1402]	CALL     	R11 3 1 ; R11(R12,R13)
	230	[1405]	TEST     	R3 0 ; if not R3 then PC := 245
	231	[1405]	JMP      	245 ; PC := 245
	232	[1405]	GETUPVAL 	R11 U15 ; R11 := U15
	233	[1405]	CALL     	R11 1 2 ; R11 := R11()
	234	[1405]	TEST     	R11 1 ; if R11 then PC := 240
	235	[1405]	JMP      	240 ; PC := 240
	236	[1405]	GETUPVAL 	R11 U16 ; R11 := U16
	237	[1405]	CALL     	R11 1 2 ; R11 := R11()
	238	[1405]	TEST     	R11 0 ; if not R11 then PC := 261
	239	[1405]	JMP      	261 ; PC := 261
	240	[1405]	GETGLOBAL	R11 K5 ; R11 := 0xbe190284
	241	[1405]	SELF     	R11 R11 K61 ; R12 := R11; R11 := R11[0x5d204145]
	242	[1405]	CALL     	R11 2 2 ; R11 := R11(R12)
	243	[1405]	TEST     	R11 1 ; if R11 then PC := 261
	244	[1405]	JMP      	261 ; PC := 261
	245	[1405]	GETGLOBAL	R11 K0 ; R11 := _T
	246	[1405]	GETTABLE 	R11 R11 K6 ; R11 := R11["eomScreenMode"]
	247	[1405]	GETUPVAL 	R12 U14 ; R12 := U14
	248	[1405]	GETTABLE 	R12 R12 K62 ; R12 := R12["ACTUAL_EOM"]
	249	[1405]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 261
	250	[1405]	JMP      	261 ; PC := 261
	251	[1406]	GETGLOBAL	R11 K24 ; R11 := 0x33bdd652
	252	[1406]	GETTABLE 	R11 R11 K25 ; R11 := R11[0x23d5322f]
	253	[1406]	MOVE     	R12 R2 ; R12 := R2
	254	[1406]	NEWTABLE 	R13 0 4 ; R13 := {}
	255	[1406]	SETTABLE 	R13 K26 K63 ; R13["Label"] := "/Lotus/Language/Menu/Exit"
	256	[1406]	CLOSURE  	R14 4 ; R14 := closure(Function #5)
	257	[1406]	SETTABLE 	R13 K27 R14 ; R13["CallBack"] := R14
	258	[1406]	SETTABLE 	R13 K28 K60 ; R13["CallOut"] := "MENU_CANCEL"
	259	[1406]	SETTABLE 	R13 K64 R0 ; R13["Pulse"] := R0
	260	[1406]	CALL     	R11 3 1 ; R11(R12,R13)
	261	[1409]	GETUPVAL 	R11 U17 ; R11 := U17
	262	[1409]	CALL     	R11 1 2 ; R11 := R11()
	263	[1409]	TEST     	R11 0 ; if not R11 then PC := 287
	264	[1409]	JMP      	287 ; PC := 287
	265	[1409]	TEST     	R3 0 ; if not R3 then PC := 287
	266	[1409]	JMP      	287 ; PC := 287
	267	[1409]	GETGLOBAL	R11 K0 ; R11 := _T
	268	[1409]	GETTABLE 	R11 R11 K6 ; R11 := R11["eomScreenMode"]
	269	[1409]	GETUPVAL 	R12 U14 ; R12 := U14
	270	[1409]	GETTABLE 	R12 R12 K62 ; R12 := R12["ACTUAL_EOM"]
	271	[1409]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 287
	272	[1409]	JMP      	287 ; PC := 287
	273	[1409]	GETGLOBAL	R11 K65 ; R11 := 0x89326c93
	274	[1409]	SELF     	R11 R11 K66 ; R12 := R11; R11 := R11[0x18d05d30]
	275	[1409]	CALL     	R11 2 2 ; R11 := R11(R12)
	276	[1409]	TEST     	R11 1 ; if R11 then PC := 287
	277	[1409]	JMP      	287 ; PC := 287
	278	[1410]	GETGLOBAL	R11 K24 ; R11 := 0x33bdd652
	279	[1410]	GETTABLE 	R11 R11 K25 ; R11 := R11[0x23d5322f]
	280	[1410]	MOVE     	R12 R2 ; R12 := R2
	281	[1410]	NEWTABLE 	R13 0 3 ; R13 := {}
	282	[1410]	SETTABLE 	R13 K26 K67 ; R13["Label"] := "/Lotus/Language/Menu/ExitArenaUpperCase"
	283	[1410]	CLOSURE  	R14 5 ; R14 := closure(Function #6)
	284	[1410]	SETTABLE 	R13 K27 R14 ; R13["CallBack"] := R14
	285	[1410]	SETTABLE 	R13 K28 K60 ; R13["CallOut"] := "MENU_CANCEL"
	286	[1410]	CALL     	R11 3 1 ; R11(R12,R13)
	287	[1413]	TEST     	R3 0 ; if not R3 then PC := 309
	288	[1413]	JMP      	309 ; PC := 309
	289	[1413]	GETGLOBAL	R11 K0 ; R11 := _T
	290	[1413]	GETTABLE 	R11 R11 K6 ; R11 := R11["eomScreenMode"]
	291	[1413]	GETUPVAL 	R12 U14 ; R12 := U14
	292	[1413]	GETTABLE 	R12 R12 K62 ; R12 := R12["ACTUAL_EOM"]
	293	[1413]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 309
	294	[1413]	JMP      	309 ; PC := 309
	295	[1413]	GETGLOBAL	R11 K19 ; R11 := mCurrentScreenType
	296	[1413]	GETGLOBAL	R12 K20 ; R12 := ScreenType
	297	[1413]	GETTABLE 	R12 R12 K68 ; R12 := R12["MASTERY"]
	298	[1413]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 309
	299	[1413]	JMP      	309 ; PC := 309
	300	[1414]	GETGLOBAL	R11 K24 ; R11 := 0x33bdd652
	301	[1414]	GETTABLE 	R11 R11 K25 ; R11 := R11[0x23d5322f]
	302	[1414]	MOVE     	R12 R2 ; R12 := R2
	303	[1414]	NEWTABLE 	R13 0 3 ; R13 := {}
	304	[1414]	SETTABLE 	R13 K26 K69 ; R13["Label"] := "/Lotus/Language/Menu/Badlands_Continue"
	305	[1414]	CLOSURE  	R14 6 ; R14 := closure(Function #7)
	306	[1414]	SETTABLE 	R13 K27 R14 ; R13["CallBack"] := R14
	307	[1414]	SETTABLE 	R13 K28 K70 ; R13["CallOut"] := "MENU_SELECT"
	308	[1414]	CALL     	R11 3 1 ; R11(R12,R13)
	309	[1417]	GETGLOBAL	R11 K0 ; R11 := _T
	310	[1417]	GETTABLE 	R11 R11 K13 ; R11 := R11[0x1c5b546f]
	311	[1417]	GETGLOBAL	R12 K14 ; R12 := 0xae91e43b
	312	[1417]	MOVE     	R13 R2 ; R13 := R2
	313	[1417]	GETGLOBAL	R14 K15 ; R14 := 0xcd0165a3
	314	[1417]	LOADK    	R15 := 1.000000
	315	[1417]	CALL     	R14 2 0 ; R14,... := R14(R15)
	316	[1417]	CALL     	R11 0 1 ; R11(R12,...)
	317	[1418]	RETURN   	R0 1 ; return 

function #50 <?:1420,1440> (49 instructions, 196 bytes at 00000160F4C19150)
0 params, 5 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[1421]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1421]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	3	[1421]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1421]	TEST     	R0 0 ; if not R0 then PC := 8
	5	[1421]	JMP      	8 ; PC := 8
	6	[1422]	LOADNIL  	R0 R0 ; R0 := nil
	7	[1422]	RETURN   	R0 2 ; return R0 
	8	[1424]	GETGLOBAL	R0 K1 ; R0 := 0x89326c93
	9	[1424]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xfb64e76c]
	10	[1424]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[1425]	LOADNIL  	R1 R1 ; R1 := nil
	12	[1426]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	13	[1426]	MOVE     	R3 R0 ; R3 := R0
	14	[1426]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[1426]	TEST     	R2 1 ; if R2 then PC := 30
	16	[1426]	JMP      	30 ; PC := 30
	17	[1427]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[1427]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xcdc34211]
	19	[1427]	CALL     	R2 1 2 ; R2 := R2()
	20	[1427]	TEST     	R2 0 ; if not R2 then PC := 26
	21	[1427]	JMP      	26 ; PC := 26
	22	[1428]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0xa534c3ac]
	23	[1428]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[1428]	MOVE     	R1 R2 ; R1 := R2
	25	[1428]	JMP      	30 ; PC := 30
	26	[1430]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[1430]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x6ef45ebc]
	28	[1430]	CALL     	R2 1 2 ; R2 := R2()
	29	[1430]	MOVE     	R1 R2 ; R1 := R2
	30	[1433]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	31	[1433]	MOVE     	R3 R1 ; R3 := R1
	32	[1433]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[1433]	TEST     	R2 1 ; if R2 then PC := 48
	34	[1433]	JMP      	48 ; PC := 48
	35	[1433]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xf2deaf69]
	36	[1433]	GETGLOBAL	R4 K7 ; R4 := gLotusNpcAvatarType
	37	[1433]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	38	[1433]	TEST     	R2 0 ; if not R2 then PC := 48
	39	[1433]	JMP      	48 ; PC := 48
	40	[1434]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0xd4f67d6e]
	41	[1434]	CALL     	R2 2 2 ; R2 := R2(R3)
	42	[1435]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	43	[1435]	MOVE     	R4 R2 ; R4 := R2
	44	[1435]	CALL     	R3 2 2 ; R3 := R3(R4)
	45	[1435]	TEST     	R3 1 ; if R3 then PC := 48
	46	[1435]	JMP      	48 ; PC := 48
	47	[1436]	MOVE     	R1 R2 ; R1 := R2
	48	[1439]	RETURN   	R1 2 ; return R1 
	49	[1440]	RETURN   	R0 1 ; return 

function #51 <?:1442,1453> (42 instructions, 168 bytes at 00000160F4C19440)
0 params, 6 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[1444]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[1444]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0eb34c69]
	3	[1444]	GETGLOBAL	R2 K2 ; R2 := 0x0469f296
	4	[1444]	LOADK    	R3 K3 ; R3 := "Team1Score"
	5	[1444]	CALL     	R2 2 0 ; R2,... := R2(R3)
	6	[1444]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[1445]	GETGLOBAL	R1 K0 ; R1 := 0xbe190284
	8	[1445]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x0eb34c69]
	9	[1445]	GETGLOBAL	R3 K2 ; R3 := 0x0469f296
	10	[1445]	LOADK    	R4 K4 ; R4 := "Team2Score"
	11	[1445]	CALL     	R3 2 0 ; R3,... := R3(R4)
	12	[1445]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	13	[1446]	GETUPVAL 	R2 U0 ; R2 := U0
	14	[1446]	CALL     	R2 1 2 ; R2 := R2()
	15	[1447]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	16	[1447]	MOVE     	R4 R2 ; R4 := R2
	17	[1447]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[1447]	TEST     	R3 1 ; if R3 then PC := 27
	19	[1447]	JMP      	27 ; PC := 27
	20	[1447]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0x808b79e6]
	21	[1447]	CALL     	R3 2 2 ; R3 := R3(R4)
	22	[1447]	GETGLOBAL	R4 K2 ; R4 := 0x0469f296
	23	[1447]	LOADK    	R5 K7 ; R5 := "Team1"
	24	[1447]	CALL     	R4 2 2 ; R4 := R4(R5)
	25	[1447]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 28
	26	[1447]	JMP      	28 ; PC := 28
	27	[1447]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 28
	28	[1447]	OP_LOADBOOL	R3 1 0 ; R3 := true
	29	[1448]	TEST     	R3 0 ; if not R3 then PC := 37
	30	[1448]	JMP      	37 ; PC := 37
	31	[1449]	LT       	1 R1 R0 ; if R1 < R0 then PC := 34
	32	[1449]	JMP      	34 ; PC := 34
	33	[1449]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 34
	34	[1449]	OP_LOADBOOL	R4 1 0 ; R4 := true
	35	[1449]	RETURN   	R4 2 ; return R4 
	36	[1449]	JMP      	42 ; PC := 42
	37	[1451]	LT       	1 R0 R1 ; if R0 < R1 then PC := 40
	38	[1451]	JMP      	40 ; PC := 40
	39	[1451]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 40
	40	[1451]	OP_LOADBOOL	R4 1 0 ; R4 := true
	41	[1451]	RETURN   	R4 2 ; return R4 
	42	[1453]	RETURN   	R0 1 ; return 

function #52 <?:1455,1457> (9 instructions, 36 bytes at 00000160F4C19790)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1456]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1456]	CALL     	R0 1 2 ; R0 := R0()
	3	[1456]	GETTABLE 	R0 R0 K0 ; R0 := R0["missionType"]
	4	[1456]	EQ       	1 R0 K2 ; if R0 == 28.000000 then PC := 7
	5	[1456]	JMP      	7 ; PC := 7
	6	[1456]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 7
	7	[1456]	OP_LOADBOOL	R0 1 0 ; R0 := true
	8	[1456]	RETURN   	R0 2 ; return R0 
	9	[1457]	RETURN   	R0 1 ; return 

function #53 <?:1459,1461> (18 instructions, 72 bytes at 00000160F4C198E0)
1 param, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[1460]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1460]	CALL     	R1 1 2 ; R1 := R1()
	3	[1460]	TEST     	R1 0 ; if not R1 then PC := 17
	4	[1460]	JMP      	17 ; PC := 17
	5	[1460]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xb61abfd2]
	6	[1460]	LOADK    	R3 := 2.000000
	7	[1460]	LOADK    	R4 := 0.000000
	8	[1460]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	9	[1460]	GETTABLE 	R1 R1 K2 ; R1 := R1["mItemId"]
	10	[1460]	GETTABLE 	R1 R1 K3 ; R1 := R1["mId"]
	11	[1460]	GETGLOBAL	R2 K1 ; R2 := 0x6c97a788
	12	[1460]	GETTABLE 	R2 R2 K4 ; R2 := R2["InvalidItemID"]
	13	[1460]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 16
	14	[1460]	JMP      	16 ; PC := 16
	15	[1460]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 16
	16	[1460]	OP_LOADBOOL	R1 1 0 ; R1 := true
	17	[1460]	RETURN   	R1 2 ; return R1 
	18	[1461]	RETURN   	R0 1 ; return 

function #54 <?:1463,1465> (9 instructions, 36 bytes at 00000160F4C19A90)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1464]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1464]	CALL     	R0 1 2 ; R0 := R0()
	3	[1464]	GETTABLE 	R0 R0 K0 ; R0 := R0["missionType"]
	4	[1464]	EQ       	1 R0 K2 ; if R0 == 30.000000 then PC := 7
	5	[1464]	JMP      	7 ; PC := 7
	6	[1464]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 7
	7	[1464]	OP_LOADBOOL	R0 1 0 ; R0 := true
	8	[1464]	RETURN   	R0 2 ; return R0 
	9	[1465]	RETURN   	R0 1 ; return 

function #55 <?:1467,1469> (13 instructions, 52 bytes at 00000160F4C19BE0)
0 params, 5 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[1468]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[1468]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x42b04007]
	3	[1468]	LOADK    	R2 K2 ; R2 := "/Lotus/Language/Game/MissionName_"
	4	[1468]	GETUPVAL 	R3 U0 ; R3 := U0
	5	[1468]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x8a389d5f]
	6	[1468]	GETUPVAL 	R4 U1 ; R4 := U1
	7	[1468]	CALL     	R4 1 0 ; R4,... := R4()
	8	[1468]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	9	[1468]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	10	[1468]	OP_LOADBOOL	R3 0 0 ; R3 := false
	11	[1468]	TAILCALL 	R0 4 0 ; R0,... := R0(R1,R2,R3)
	12	[1468]	RETURN   	R0 0 ; return R0,... 
	13	[1469]	RETURN   	R0 1 ; return 

function #56 <?:1471,1484> (66 instructions, 264 bytes at 00000160F4C19D60)
1 param, 7 slots, 2 upvalues, 0 locals, 18 constants, 0 functions
	1	[1472]	LEN      	R1 R0 ; R1 := # R0
	2	[1472]	EQ       	0 R1 K0 ; if R1 ~= 0.000000 then PC := 18
	3	[1472]	JMP      	18 ; PC := 18
	4	[1472]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[1472]	GETGLOBAL	R2 K2 ; R2 := 0xbe190284
	6	[1472]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[1472]	TEST     	R1 1 ; if R1 then PC := 18
	8	[1472]	JMP      	18 ; PC := 18
	9	[1472]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	10	[1472]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xf2deaf69]
	11	[1472]	GETGLOBAL	R3 K4 ; R3 := gLotusDojoGameRulesType
	12	[1472]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	13	[1472]	TEST     	R1 1 ; if R1 then PC := 18
	14	[1472]	JMP      	18 ; PC := 18
	15	[1473]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[1473]	CALL     	R1 1 2 ; R1 := R1()
	17	[1473]	MOVE     	R0 R1 ; R0 := R1
	18	[1476]	SETUPVAL 	R0 U1 ; U1 := R0
	19	[1477]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	20	[1477]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xaade900e]
	21	[1477]	LOADK    	R3 K7 ; R3 := "TopAnchor.Header.DescBacker"
	22	[1477]	LOADK    	R4 := 11.000000
	23	[1477]	GETUPVAL 	R5 U1 ; R5 := U1
	24	[1477]	LEN      	R5 R5 ; R5 := # R5
	25	[1477]	EQ       	0 R5 K0 ; if R5 ~= 0.000000 then PC := 28
	26	[1477]	JMP      	28 ; PC := 28
	27	[1477]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 28
	28	[1477]	OP_LOADBOOL	R5 1 0 ; R5 := true
	29	[1477]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	30	[1478]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	31	[1478]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x20b98db3]
	32	[1478]	LOADK    	R3 K9 ; R3 := "TopAnchor.Header.Desc.text"
	33	[1478]	GETUPVAL 	R4 U1 ; R4 := U1
	34	[1478]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	35	[1479]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	36	[1479]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x91a24e4b]
	37	[1479]	LOADK    	R3 K11 ; R3 := "TopAnchor.Header.Desc"
	38	[1479]	LOADK    	R4 := 33.000000
	39	[1479]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	40	[1479]	SUB      	R1 R1 K12 ; R1 := R1 - 50.000000
	41	[1480]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	42	[1480]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x67bc869f]
	43	[1480]	LOADK    	R4 K14 ; R4 := "TopAnchor.Header.DescBacker.Mid"
	44	[1480]	LOADK    	R5 := 12.000000
	45	[1480]	MOVE     	R6 R1 ; R6 := R1
	46	[1480]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	47	[1481]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	48	[1481]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x67bc869f]
	49	[1481]	LOADK    	R4 K15 ; R4 := "TopAnchor.Header.DescBacker.Left"
	50	[1481]	LOADK    	R5 := 0.000000
	51	[1481]	UNM      	R6 R1 ; R6 := ^ R1
	52	[1481]	DIV      	R6 R6 K16 ; R6 := R6 / 2.000000
	53	[1481]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	54	[1482]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	55	[1482]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x67bc869f]
	56	[1482]	LOADK    	R4 K17 ; R4 := "TopAnchor.Header.DescBacker.Right"
	57	[1482]	LOADK    	R5 := 0.000000
	58	[1482]	DIV      	R6 R1 K16 ; R6 := R1 / 2.000000
	59	[1482]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	60	[1483]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	61	[1483]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x67bc869f]
	62	[1483]	LOADK    	R4 K7 ; R4 := "TopAnchor.Header.DescBacker"
	63	[1483]	LOADK    	R5 := 13.000000
	64	[1483]	LOADK    	R6 := 22.000000
	65	[1483]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	66	[1484]	RETURN   	R0 1 ; return 

function #57 <?:1486,1541> (194 instructions, 776 bytes at 00000160F4C1A2A0)
3 params, 14 slots, 8 upvalues, 0 locals, 53 constants, 0 functions
	1	[1487]	LOADK    	R3 K0 ; R3 := ""
	2	[1487]	SETUPVAL 	R3 U0 ; U0 := R3
	3	[1489]	TEST     	R0 0 ; if not R0 then PC := 39
	4	[1489]	JMP      	39 ; PC := 39
	5	[1489]	GETUPVAL 	R3 U1 ; R3 := U1
	6	[1489]	GETTABLE 	R3 R3 K1 ; R3 := R3["isPvp"]
	7	[1489]	TEST     	R3 0 ; if not R3 then PC := 39
	8	[1489]	JMP      	39 ; PC := 39
	9	[1490]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Game/CTF_Title"
	10	[1490]	SETUPVAL 	R3 U0 ; U0 := R3
	11	[1491]	GETUPVAL 	R3 U1 ; R3 := U1
	12	[1491]	GETTABLE 	R3 R3 K3 ; R3 := R3["pvpType"]
	13	[1491]	EQ       	0 R3 K5 ; if R3 ~= 3.000000 then PC := 18
	14	[1491]	JMP      	18 ; PC := 18
	15	[1492]	LOADK    	R3 K6 ; R3 := "/Lotus/Language/Game/DM_Title"
	16	[1492]	SETUPVAL 	R3 U0 ; U0 := R3
	17	[1492]	JMP      	122 ; PC := 122
	18	[1493]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[1493]	GETTABLE 	R3 R3 K3 ; R3 := R3["pvpType"]
	20	[1493]	EQ       	0 R3 K7 ; if R3 ~= 2.000000 then PC := 25
	21	[1493]	JMP      	25 ; PC := 25
	22	[1494]	LOADK    	R3 K8 ; R3 := "/Lotus/Language/Game/TDM_Title"
	23	[1494]	SETUPVAL 	R3 U0 ; U0 := R3
	24	[1494]	JMP      	122 ; PC := 122
	25	[1495]	GETUPVAL 	R3 U1 ; R3 := U1
	26	[1495]	GETTABLE 	R3 R3 K3 ; R3 := R3["pvpType"]
	27	[1495]	EQ       	0 R3 K9 ; if R3 ~= 4.000000 then PC := 32
	28	[1495]	JMP      	32 ; PC := 32
	29	[1496]	LOADK    	R3 K10 ; R3 := "/Lotus/Language/Game/SB_Title"
	30	[1496]	SETUPVAL 	R3 U0 ; U0 := R3
	31	[1496]	JMP      	122 ; PC := 122
	32	[1497]	GETUPVAL 	R3 U1 ; R3 := U1
	33	[1497]	GETTABLE 	R3 R3 K3 ; R3 := R3["pvpType"]
	34	[1497]	EQ       	0 R3 K11 ; if R3 ~= 5.000000 then PC := 122
	35	[1497]	JMP      	122 ; PC := 122
	36	[1498]	LOADK    	R3 K12 ; R3 := "/Lotus/Language/Game/VoidTear_Title"
	37	[1498]	SETUPVAL 	R3 U0 ; U0 := R3
	38	[1499]	JMP      	122 ; PC := 122
	39	[1500]	GETUPVAL 	R3 U2 ; R3 := U2
	40	[1500]	CALL     	R3 1 2 ; R3 := R3()
	41	[1500]	TEST     	R3 0 ; if not R3 then PC := 64
	42	[1500]	JMP      	64 ; PC := 64
	43	[1501]	GETUPVAL 	R3 U3 ; R3 := U3
	44	[1501]	CALL     	R3 1 2 ; R3 := R3()
	45	[1501]	TEST     	R3 0 ; if not R3 then PC := 50
	46	[1501]	JMP      	50 ; PC := 50
	47	[1502]	LOADK    	R3 K13 ; R3 := "/Lotus/Language/G1Quests/ProjectIndexTitle"
	48	[1502]	SETUPVAL 	R3 U0 ; U0 := R3
	49	[1502]	JMP      	122 ; PC := 122
	50	[1504]	GETUPVAL 	R3 U4 ; R3 := U4
	51	[1504]	CALL     	R3 1 2 ; R3 := R3()
	52	[1505]	GETTABLE 	R4 R3 K14 ; R4 := R3["goalTag"]
	53	[1505]	GETGLOBAL	R5 K15 ; R5 := 0x0469f296
	54	[1505]	LOADK    	R6 K16 ; R6 := "WaterFight"
	55	[1505]	CALL     	R5 2 2 ; R5 := R5(R6)
	56	[1505]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 61
	57	[1505]	JMP      	61 ; PC := 61
	58	[1506]	LOADK    	R4 K17 ; R4 := "/Lotus/Language/Alerts/TacAlertWaterFight"
	59	[1506]	SETUPVAL 	R4 U0 ; U0 := R4
	60	[1506]	JMP      	122 ; PC := 122
	61	[1508]	LOADK    	R4 K18 ; R4 := "/Lotus/Language/G1Quests/KelaEventTitle"
	62	[1508]	SETUPVAL 	R4 U0 ; U0 := R4
	63	[1510]	JMP      	122 ; PC := 122
	64	[1511]	GETUPVAL 	R4 U5 ; R4 := U5
	65	[1511]	CALL     	R4 1 2 ; R4 := R4()
	66	[1511]	TEST     	R4 0 ; if not R4 then PC := 70
	67	[1511]	JMP      	70 ; PC := 70
	68	[1512]	RETURN   	R0 1 ; return 
	69	[1512]	JMP      	122 ; PC := 122
	70	[1514]	GETUPVAL 	R4 U4 ; R4 := U4
	71	[1514]	CALL     	R4 1 2 ; R4 := R4()
	72	[1515]	GETGLOBAL	R5 K19 ; R5 := 0x7b998233
	73	[1515]	MOVE     	R6 R4 ; R6 := R4
	74	[1515]	CALL     	R5 2 2 ; R5 := R5(R6)
	75	[1515]	TEST     	R5 1 ; if R5 then PC := 122
	76	[1515]	JMP      	122 ; PC := 122
	77	[1516]	GETTABLE 	R5 R4 K20 ; R5 := R4["missionType"]
	78	[1516]	EQ       	1 R5 K21 ; if R5 == 28.000000 then PC := 81
	79	[1516]	JMP      	81 ; PC := 81
	80	[1516]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 81
	81	[1516]	OP_LOADBOOL	R5 1 0 ; R5 := true
	82	[1517]	TEST     	R0 1 ; if R0 then PC := 96
	83	[1517]	JMP      	96 ; PC := 96
	84	[1517]	TEST     	R5 0 ; if not R5 then PC := 96
	85	[1517]	JMP      	96 ; PC := 96
	86	[1517]	GETTABLE 	R6 R4 K22 ; R6 := R4["sortieId"]
	87	[1517]	EQ       	0 R6 K0 ; if R6 ~= "" then PC := 96
	88	[1517]	JMP      	96 ; PC := 96
	89	[1517]	GETTABLE 	R6 R4 K14 ; R6 := R4["goalTag"]
	90	[1517]	GETGLOBAL	R7 K23 ; R7 := EMPTY_SYMBOL
	91	[1517]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 96
	92	[1517]	JMP      	96 ; PC := 96
	93	[1518]	LOADK    	R6 K24 ; R6 := "/Lotus/Language/Labels/FreeRoamSummary"
	94	[1518]	SETUPVAL 	R6 U0 ; U0 := R6
	95	[1518]	JMP      	122 ; PC := 122
	96	[1519]	TEST     	R0 0 ; if not R0 then PC := 115
	97	[1519]	JMP      	115 ; PC := 115
	98	[1519]	TEST     	R2 1 ; if R2 then PC := 115
	99	[1519]	JMP      	115 ; PC := 115
	100	[1519]	GETGLOBAL	R6 K19 ; R6 := 0x7b998233
	101	[1519]	GETGLOBAL	R7 K25 ; R7 := 0xbe190284
	102	[1519]	CALL     	R6 2 2 ; R6 := R6(R7)
	103	[1519]	TEST     	R6 1 ; if R6 then PC := 115
	104	[1519]	JMP      	115 ; PC := 115
	105	[1519]	GETGLOBAL	R6 K25 ; R6 := 0xbe190284
	106	[1519]	SELF     	R6 R6 K26 ; R7 := R6; R6 := R6[0xf2deaf69]
	107	[1519]	GETGLOBAL	R8 K27 ; R8 := gLotusBaseGameRulesType
	108	[1519]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	109	[1519]	TEST     	R6 0 ; if not R6 then PC := 115
	110	[1519]	JMP      	115 ; PC := 115
	111	[1520]	GETUPVAL 	R6 U6 ; R6 := U6
	112	[1520]	CALL     	R6 1 2 ; R6 := R6()
	113	[1520]	SETUPVAL 	R6 U0 ; U0 := R6
	114	[1520]	JMP      	122 ; PC := 122
	115	[1522]	GETUPVAL 	R6 U7 ; R6 := U7
	116	[1522]	GETTABLE 	R6 R6 K28 ; R6 := R6[0x06d055f9]
	117	[1522]	MOVE     	R7 R1 ; R7 := R1
	118	[1522]	LOADK    	R8 K29 ; R8 := "/Lotus/Language/Menu/MissionStats_Complete"
	119	[1522]	LOADK    	R9 K30 ; R9 := "/Lotus/Language/Menu/MissionStats_Failed"
	120	[1522]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	121	[1522]	SETUPVAL 	R6 U0 ; U0 := R6
	122	[1527]	GETGLOBAL	R6 K31 ; R6 := 0xae91e43b
	123	[1527]	SELF     	R6 R6 K32 ; R7 := R6; R6 := R6[0x20b98db3]
	124	[1527]	LOADK    	R8 K33 ; R8 := "TopAnchor.Header.Label.text"
	125	[1527]	GETUPVAL 	R9 U0 ; R9 := U0
	126	[1527]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	127	[1528]	GETGLOBAL	R6 K31 ; R6 := 0xae91e43b
	128	[1528]	SELF     	R6 R6 K32 ; R7 := R6; R6 := R6[0x20b98db3]
	129	[1528]	LOADK    	R8 K34 ; R8 := "MissionComplete.TextAnim.Label.GrowAnim.Label.text"
	130	[1528]	GETUPVAL 	R9 U0 ; R9 := U0
	131	[1528]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	132	[1529]	GETGLOBAL	R6 K31 ; R6 := 0xae91e43b
	133	[1529]	SELF     	R6 R6 K35 ; R7 := R6; R6 := R6[0x5ee2cc30]
	134	[1529]	LOADK    	R8 K36 ; R8 := "MissionComplete.ArrowEndsAnim.ArrowEnds"
	135	[1529]	LOADK    	R9 K37 ; R9 := "OnArrowEndsFrameEnter"
	136	[1529]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	137	[1531]	LOADK    	R6 := 130.000000
	138	[1532]	GETGLOBAL	R7 K38 ; R7 := 0x5bced4c4
	139	[1532]	GETTABLE 	R7 R7 K39 ; R7 := R7[0xb62ecfe0]
	140	[1532]	GETGLOBAL	R8 K31 ; R8 := 0xae91e43b
	141	[1532]	SELF     	R8 R8 K40 ; R9 := R8; R8 := R8[0x91a24e4b]
	142	[1532]	LOADK    	R10 K41 ; R10 := "TopAnchor.Header.Label"
	143	[1532]	LOADK    	R11 := 33.000000
	144	[1532]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	145	[1532]	MOVE     	R9 R6 ; R9 := R6
	146	[1532]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	147	[1532]	ADD      	R7 R7 K42 ; R7 := R7 + 50.000000
	148	[1533]	DIV      	R8 R7 K7 ; R8 := R7 / 2.000000
	149	[1534]	GETGLOBAL	R9 K31 ; R9 := 0xae91e43b
	150	[1534]	SELF     	R9 R9 K43 ; R10 := R9; R9 := R9[0x67bc869f]
	151	[1534]	LOADK    	R11 K44 ; R11 := "TopAnchor.Header.Backer.Left"
	152	[1534]	LOADK    	R12 := 0.000000
	153	[1534]	UNM      	R13 R8 ; R13 := ^ R8
	154	[1534]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	155	[1535]	GETGLOBAL	R9 K31 ; R9 := 0xae91e43b
	156	[1535]	SELF     	R9 R9 K43 ; R10 := R9; R9 := R9[0x67bc869f]
	157	[1535]	LOADK    	R11 K45 ; R11 := "TopAnchor.Header.Backer.Mid"
	158	[1535]	LOADK    	R12 := 12.000000
	159	[1535]	SUB      	R13 R6 K7 ; R13 := R6 - 2.000000
	160	[1535]	SUB      	R13 R7 R13 ; R13 := R7 - R13
	161	[1535]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	162	[1536]	GETGLOBAL	R9 K31 ; R9 := 0xae91e43b
	163	[1536]	SELF     	R9 R9 K43 ; R10 := R9; R9 := R9[0x67bc869f]
	164	[1536]	LOADK    	R11 K46 ; R11 := "TopAnchor.Header.Backer.Right"
	165	[1536]	LOADK    	R12 := 0.000000
	166	[1536]	MOVE     	R13 R8 ; R13 := R8
	167	[1536]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	168	[1537]	GETGLOBAL	R9 K31 ; R9 := 0xae91e43b
	169	[1537]	SELF     	R9 R9 K43 ; R10 := R9; R9 := R9[0x67bc869f]
	170	[1537]	LOADK    	R11 K47 ; R11 := "TopAnchor.Header.Lines.Left"
	171	[1537]	LOADK    	R12 := 0.000000
	172	[1537]	UNM      	R13 R8 ; R13 := ^ R8
	173	[1537]	SUB      	R13 R13 K48 ; R13 := R13 - 16.000000
	174	[1537]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	175	[1538]	GETGLOBAL	R9 K31 ; R9 := 0xae91e43b
	176	[1538]	SELF     	R9 R9 K43 ; R10 := R9; R9 := R9[0x67bc869f]
	177	[1538]	LOADK    	R11 K49 ; R11 := "TopAnchor.Header.Lines.Right"
	178	[1538]	LOADK    	R12 := 0.000000
	179	[1538]	ADD      	R13 R8 K48 ; R13 := R8 + 16.000000
	180	[1538]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	181	[1539]	GETGLOBAL	R9 K31 ; R9 := 0xae91e43b
	182	[1539]	SELF     	R9 R9 K43 ; R10 := R9; R9 := R9[0x67bc869f]
	183	[1539]	LOADK    	R11 K50 ; R11 := "TopAnchor.Header.ArrowEnds.Left"
	184	[1539]	LOADK    	R12 := 0.000000
	185	[1539]	UNM      	R13 R8 ; R13 := ^ R8
	186	[1539]	SUB      	R13 R13 K51 ; R13 := R13 - 22.000000
	187	[1539]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	188	[1540]	GETGLOBAL	R9 K31 ; R9 := 0xae91e43b
	189	[1540]	SELF     	R9 R9 K43 ; R10 := R9; R9 := R9[0x67bc869f]
	190	[1540]	LOADK    	R11 K52 ; R11 := "TopAnchor.Header.ArrowEnds.Right"
	191	[1540]	LOADK    	R12 := 0.000000
	192	[1540]	ADD      	R13 R8 K51 ; R13 := R8 + 22.000000
	193	[1540]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	194	[1541]	RETURN   	R0 1 ; return 

function #58 <?:1543,1603> (146 instructions, 584 bytes at 00000160F4C1AF50)
0 params, 23 slots, 5 upvalues, 0 locals, 24 constants, 0 functions
	1	[1544]	GETGLOBAL	R0 K0 ; R0 := mGameData
	2	[1544]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x62c81b76]
	3	[1544]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1545]	LOADK    	R1 := 0.000000
	5	[1547]	NEWTABLE 	R2 0 0 ; R2 := {}
	6	[1548]	GETUPVAL 	R3 U0 ; R3 := U0
	7	[1548]	GETTABLE 	R3 R3 K2 ; R3 := R3["isPvp"]
	8	[1548]	TEST     	R3 0 ; if not R3 then PC := 16
	9	[1548]	JMP      	16 ; PC := 16
	10	[1549]	GETGLOBAL	R3 K3 ; R3 := 0x33bdd652
	11	[1549]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x23d5322f]
	12	[1549]	MOVE     	R4 R2 ; R4 := R2
	13	[1549]	LOADK    	R5 := 3.000000
	14	[1549]	CALL     	R3 3 1 ; R3(R4,R5)
	15	[1549]	JMP      	21 ; PC := 21
	16	[1551]	GETGLOBAL	R3 K3 ; R3 := 0x33bdd652
	17	[1551]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x23d5322f]
	18	[1551]	MOVE     	R4 R2 ; R4 := R2
	19	[1551]	LOADK    	R5 := 0.000000
	20	[1551]	CALL     	R3 3 1 ; R3(R4,R5)
	21	[1554]	GETUPVAL 	R3 U1 ; R3 := U1
	22	[1554]	MOVE     	R4 R0 ; R4 := R0
	23	[1554]	CALL     	R3 2 2 ; R3 := R3(R4)
	24	[1555]	GETGLOBAL	R4 K6 ; R4 := mArchWingRequired
	25	[1555]	TEST     	R4 1 ; if R4 then PC := 29
	26	[1555]	JMP      	29 ; PC := 29
	27	[1555]	TEST     	R3 0 ; if not R3 then PC := 34
	28	[1555]	JMP      	34 ; PC := 34
	29	[1556]	GETGLOBAL	R4 K3 ; R4 := 0x33bdd652
	30	[1556]	GETTABLE 	R4 R4 K4 ; R4 := R4[0x23d5322f]
	31	[1556]	MOVE     	R5 R2 ; R5 := R2
	32	[1556]	LOADK    	R6 := 2.000000
	33	[1556]	CALL     	R4 3 1 ; R4(R5,R6)
	34	[1559]	SELF     	R4 R0 K7 ; R5 := R0; R4 := R0[0xb61abfd2]
	35	[1559]	LOADK    	R6 := 1.000000
	36	[1559]	LOADK    	R7 := 0.000000
	37	[1559]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	38	[1559]	GETTABLE 	R4 R4 K8 ; R4 := R4["mItemId"]
	39	[1559]	GETTABLE 	R4 R4 K9 ; R4 := R4["mId"]
	40	[1559]	GETGLOBAL	R5 K5 ; R5 := 0x6c97a788
	41	[1559]	GETTABLE 	R5 R5 K10 ; R5 := R5["InvalidItemID"]
	42	[1559]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 49
	43	[1559]	JMP      	49 ; PC := 49
	44	[1562]	GETGLOBAL	R4 K3 ; R4 := 0x33bdd652
	45	[1562]	GETTABLE 	R4 R4 K4 ; R4 := R4[0x23d5322f]
	46	[1562]	MOVE     	R5 R2 ; R5 := R2
	47	[1562]	LOADK    	R6 := 1.000000
	48	[1562]	CALL     	R4 3 1 ; R4(R5,R6)
	49	[1565]	GETGLOBAL	R4 K0 ; R4 := mGameData
	50	[1565]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0xd8159207]
	51	[1565]	CALL     	R4 2 2 ; R4 := R4(R5)
	52	[1565]	LE       	0 K12 R4 ; if 3.000000 > R4 then PC := 86
	53	[1565]	JMP      	86 ; PC := 86
	54	[1565]	GETGLOBAL	R4 K13 ; R4 := 0x7b998233
	55	[1565]	GETGLOBAL	R5 K14 ; R5 := 0x89326c93
	56	[1565]	CALL     	R4 2 2 ; R4 := R4(R5)
	57	[1565]	TEST     	R4 1 ; if R4 then PC := 86
	58	[1565]	JMP      	86 ; PC := 86
	59	[1566]	GETGLOBAL	R4 K14 ; R4 := 0x89326c93
	60	[1566]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0xfb64e76c]
	61	[1566]	CALL     	R4 2 2 ; R4 := R4(R5)
	62	[1567]	GETGLOBAL	R5 K13 ; R5 := 0x7b998233
	63	[1567]	MOVE     	R6 R4 ; R6 := R4
	64	[1567]	CALL     	R5 2 2 ; R5 := R5(R6)
	65	[1567]	TEST     	R5 1 ; if R5 then PC := 86
	66	[1567]	JMP      	86 ; PC := 86
	67	[1568]	SELF     	R5 R4 K16 ; R6 := R4; R5 := R4[0x5578d98b]
	68	[1568]	CALL     	R5 2 2 ; R5 := R5(R6)
	69	[1569]	GETGLOBAL	R6 K13 ; R6 := 0x7b998233
	70	[1569]	MOVE     	R7 R5 ; R7 := R5
	71	[1569]	CALL     	R6 2 2 ; R6 := R6(R7)
	72	[1569]	TEST     	R6 1 ; if R6 then PC := 86
	73	[1569]	JMP      	86 ; PC := 86
	74	[1570]	LOADK    	R6 := 5.000000
	75	[1571]	SELF     	R7 R4 K1 ; R8 := R4; R7 := R4[0x62c81b76]
	76	[1571]	CALL     	R7 2 2 ; R7 := R7(R8)
	77	[1571]	GETTABLE 	R7 R7 K17 ; R7 := R7["mOperatorType"]
	78	[1571]	EQ       	0 R7 K18 ; if R7 ~= 4.000000 then PC := 81
	79	[1571]	JMP      	81 ; PC := 81
	80	[1572]	LOADK    	R6 := 9.000000
	81	[1574]	GETGLOBAL	R7 K3 ; R7 := 0x33bdd652
	82	[1574]	GETTABLE 	R7 R7 K4 ; R7 := R7[0x23d5322f]
	83	[1574]	MOVE     	R8 R2 ; R8 := R2
	84	[1574]	MOVE     	R9 R6 ; R9 := R6
	85	[1574]	CALL     	R7 3 1 ; R7(R8,R9)
	86	[1579]	GETGLOBAL	R7 K19 ; R7 := 0xc8802016
	87	[1579]	MOVE     	R8 R2 ; R8 := R2
	88	[1579]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	89	[1579]	JMP      	118 ; PC := 118
	90	[1580]	LOADK    	R12 := 0.000000
	91	[1580]	LOADK    	R13 := 6.000000
	92	[1580]	LOADK    	R14 := 1.000000
	93	[1580]	FORPREP  	R12 117 ; R12 -= R14; PC := 117
	94	[1581]	SELF     	R16 R0 K7 ; R17 := R0; R16 := R0[0xb61abfd2]
	95	[1581]	MOVE     	R18 R11 ; R18 := R11
	96	[1581]	MOVE     	R19 R15 ; R19 := R15
	97	[1581]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	98	[1582]	GETTABLE 	R17 R16 K8 ; R17 := R16["mItemId"]
	99	[1582]	GETTABLE 	R17 R17 K9 ; R17 := R17["mId"]
	100	[1582]	GETGLOBAL	R18 K5 ; R18 := 0x6c97a788
	101	[1582]	GETTABLE 	R18 R18 K10 ; R18 := R18["InvalidItemID"]
	102	[1582]	EQ       	1 R17 R18 ; if R17 == R18 then PC := 117
	103	[1582]	JMP      	117 ; PC := 117
	104	[1583]	EQ       	1 R11 K20 ; if R11 == 2.000000 then PC := 114
	105	[1583]	JMP      	114 ; PC := 114
	106	[1584]	GETUPVAL 	R17 U2 ; R17 := U2
	107	[1584]	MOVE     	R18 R11 ; R18 := R11
	108	[1584]	MOVE     	R19 R15 ; R19 := R15
	109	[1584]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	110	[1584]	TEST     	R17 0 ; if not R17 then PC := 117
	111	[1584]	JMP      	117 ; PC := 117
	112	[1585]	ADD      	R1 R1 K21 ; R1 := R1 + 1.000000
	113	[1586]	JMP      	117 ; PC := 117
	114	[1587]	TEST     	R3 1 ; if R3 then PC := 117
	115	[1587]	JMP      	117 ; PC := 117
	116	[1588]	ADD      	R1 R1 K21 ; R1 := R1 + 1.000000
	117	[1580]	FORLOOP  	R12 94 ; R12 += R14; if R12 <= R13 then begin PC := 94; R15 := R12 end
	118	[1579]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 90; R9 := R10 end
	119	[1591]	JMP      	90 ; PC := 90
	120	[1594]	TEST     	R3 0 ; if not R3 then PC := 123
	121	[1594]	JMP      	123 ; PC := 123
	122	[1595]	ADD      	R1 R1 K21 ; R1 := R1 + 1.000000
	123	[1598]	GETUPVAL 	R17 U3 ; R17 := U3
	124	[1598]	CALL     	R17 1 2 ; R17 := R17()
	125	[1598]	TEST     	R17 0 ; if not R17 then PC := 128
	126	[1598]	JMP      	128 ; PC := 128
	127	[1599]	ADD      	R1 R1 K21 ; R1 := R1 + 1.000000
	128	[1602]	GETUPVAL 	R17 U4 ; R17 := U4
	129	[1602]	GETTABLE 	R17 R17 K22 ; R17 := R17[0x06d055f9]
	130	[1602]	LT       	1 R1 K23 ; if R1 < 6.000000 then PC := 133
	131	[1602]	JMP      	133 ; PC := 133
	132	[1602]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 133
	133	[1602]	OP_LOADBOOL	R18 1 0 ; R18 := true
	134	[1602]	GETUPVAL 	R19 U4 ; R19 := U4
	135	[1602]	GETTABLE 	R19 R19 K22 ; R19 := R19[0x06d055f9]
	136	[1602]	LT       	1 K12 R1 ; if 3.000000 < R1 then PC := 139
	137	[1602]	JMP      	139 ; PC := 139
	138	[1602]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 139
	139	[1602]	OP_LOADBOOL	R20 1 0 ; R20 := true
	140	[1602]	LOADK    	R21 := 6.000000
	141	[1602]	LOADK    	R22 := 3.000000
	142	[1602]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	143	[1602]	MOVE     	R20 R1 ; R20 := R1
	144	[1602]	TAILCALL 	R17 4 0 ; R17,... := R17(R18,R19,R20)
	145	[1602]	RETURN   	R17 0 ; return R17,... 
	146	[1603]	RETURN   	R0 1 ; return 

function #59 <?:1605,1609> (15 instructions, 60 bytes at 00000160F4C1AFE0)
1 param, 5 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1606]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xf36b7a3d]
	2	[1606]	CALL     	R1 2 2 ; R1 := R1(R2)
	3	[1607]	LOADK    	R2 := 382.500000
	4	[1608]	NEWTABLE 	R3 0 3 ; R3 := {}
	5	[1608]	GETTABLE 	R4 R1 K2 ; R4 := R1["red"]
	6	[1608]	DIV      	R4 R4 R2 ; R4 := R4 / R2
	7	[1608]	SETTABLE 	R3 K1 R4 ; R3["r"] := R4
	8	[1608]	GETTABLE 	R4 R1 K4 ; R4 := R1["green"]
	9	[1608]	DIV      	R4 R4 R2 ; R4 := R4 / R2
	10	[1608]	SETTABLE 	R3 K3 R4 ; R3["g"] := R4
	11	[1608]	GETTABLE 	R4 R1 K6 ; R4 := R1["blue"]
	12	[1608]	DIV      	R4 R4 R2 ; R4 := R4 / R2
	13	[1608]	SETTABLE 	R3 K5 R4 ; R3["b"] := R4
	14	[1608]	RETURN   	R3 2 ; return R3 
	15	[1609]	RETURN   	R0 1 ; return 

function #60 <?:1611,1687> (211 instructions, 844 bytes at 00000160925440F0)
0 params, 33 slots, 3 upvalues, 0 locals, 59 constants, 0 functions
	1	[1612]	LOADK    	R0 := 0.000000
	2	[1613]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	3	[1613]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xfb64e76c]
	4	[1613]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[1614]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	6	[1614]	MOVE     	R3 R1 ; R3 := R1
	7	[1614]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[1614]	TEST     	R2 1 ; if R2 then PC := 16
	9	[1614]	JMP      	16 ; PC := 16
	10	[1615]	GETGLOBAL	R2 K3 ; R2 := 0xba7dfcd2
	11	[1615]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x26ed9862]
	12	[1615]	MOVE     	R4 R1 ; R4 := R1
	13	[1615]	OP_LOADBOOL	R5 1 0 ; R5 := true
	14	[1615]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	15	[1615]	MOVE     	R0 R2 ; R0 := R2
	16	[1619]	LOADNIL  	R2 R2 ; R2 := nil
	17	[1620]	GETGLOBAL	R3 K5 ; R3 := 0x0469f296
	18	[1620]	LOADK    	R4 K6 ; R4 := "ConclaveSyndicate"
	19	[1620]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[1620]	MOVE     	R2 R3 ; R2 := R3
	21	[1621]	GETGLOBAL	R3 K7 ; R3 := mGameData
	22	[1621]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xa4d581dc]
	23	[1621]	MOVE     	R5 R2 ; R5 := R2
	24	[1621]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	25	[1623]	GETGLOBAL	R4 K9 ; R4 := 0x7ed0a956
	26	[1623]	LOADK    	R5 K10 ; R5 := "/Lotus/Syndicates/"
	27	[1623]	SELF     	R6 R2 K11 ; R7 := R2; R6 := R2[0x6d604ba7]
	28	[1623]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[1623]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	30	[1623]	CALL     	R4 2 2 ; R4 := R4(R5)
	31	[1624]	GETGLOBAL	R5 K12 ; R5 := 0xb009bbc6
	32	[1624]	MOVE     	R6 R4 ; R6 := R4
	33	[1624]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[1625]	SELF     	R6 R5 K13 ; R7 := R5; R6 := R5[0x056dcf06]
	35	[1625]	CALL     	R6 2 2 ; R6 := R6(R7)
	36	[1627]	LOADK    	R7 := 1.000000
	37	[1627]	LOADK    	R8 := 2.000000
	38	[1627]	LOADK    	R9 := 1.000000
	39	[1627]	FORPREP  	R7 210 ; R7 -= R9; PC := 210
	40	[1629]	LOADK    	R11 := 0.000000
	41	[1630]	LOADNIL  	R12 R12 ; R12 := nil
	42	[1631]	LOADK    	R13 := 100.000000
	43	[1633]	GETUPVAL 	R14 U0 ; R14 := U0
	44	[1633]	CALL     	R14 1 2 ; R14 := R14()
	45	[1633]	TEST     	R14 0 ; if not R14 then PC := 210
	46	[1633]	JMP      	210 ; PC := 210
	47	[1635]	GETGLOBAL	R14 K14 ; R14 := 0x3584dca2
	48	[1635]	CALL     	R14 1 2 ; R14 := R14()
	49	[1637]	GETGLOBAL	R15 K2 ; R15 := 0x7b998233
	50	[1637]	MOVE     	R16 R1 ; R16 := R1
	51	[1637]	CALL     	R15 2 2 ; R15 := R15(R16)
	52	[1637]	TEST     	R15 1 ; if R15 then PC := 88
	53	[1637]	JMP      	88 ; PC := 88
	54	[1639]	LOADK    	R15 := 0.000000
	55	[1640]	LOADK    	R16 := 0.000000
	56	[1640]	GETGLOBAL	R17 K3 ; R17 := 0xba7dfcd2
	57	[1640]	SELF     	R17 R17 K15 ; R18 := R17; R17 := R17[0x1ff3fca6]
	58	[1640]	MOVE     	R19 R1 ; R19 := R1
	59	[1640]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	60	[1640]	SUB      	R17 R17 K16 ; R17 := R17 - 1.000000
	61	[1640]	LOADK    	R18 := 1.000000
	62	[1640]	FORPREP  	R16 87 ; R16 -= R18; PC := 87
	63	[1641]	GETGLOBAL	R20 K3 ; R20 := 0xba7dfcd2
	64	[1641]	SELF     	R20 R20 K17 ; R21 := R20; R20 := R20[0x94df81ff]
	65	[1641]	MOVE     	R22 R1 ; R22 := R1
	66	[1641]	MOVE     	R23 R19 ; R23 := R19
	67	[1641]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	68	[1642]	GETGLOBAL	R21 K7 ; R21 := mGameData
	69	[1642]	SELF     	R21 R21 K18 ; R22 := R21; R21 := R21[0x69727e0b]
	70	[1642]	CALL     	R21 2 2 ; R21 := R21(R22)
	71	[1642]	SELF     	R21 R21 K19 ; R22 := R21; R21 := R21[0x11900845]
	72	[1642]	MOVE     	R23 R20 ; R23 := R20
	73	[1642]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	74	[1643]	GETGLOBAL	R22 K2 ; R22 := 0x7b998233
	75	[1643]	MOVE     	R23 R21 ; R23 := R21
	76	[1643]	CALL     	R22 2 2 ; R22 := R22(R23)
	77	[1643]	TEST     	R22 1 ; if R22 then PC := 87
	78	[1643]	JMP      	87 ; PC := 87
	79	[1644]	GETTABLE 	R22 R21 K20 ; R22 := R21["mCategory"]
	80	[1644]	EQ       	0 R22 K22 ; if R22 ~= 0.000000 then PC := 87
	81	[1644]	JMP      	87 ; PC := 87
	82	[1645]	SUB      	R22 R10 K16 ; R22 := R10 - 1.000000
	83	[1645]	EQ       	0 R15 R22 ; if R15 ~= R22 then PC := 86
	84	[1645]	JMP      	86 ; PC := 86
	85	[1646]	MOVE     	R14 R20 ; R14 := R20
	86	[1648]	ADD      	R15 R15 K16 ; R15 := R15 + 1.000000
	87	[1640]	FORLOOP  	R16 63 ; R16 += R18; if R16 <= R17 then begin PC := 63; R19 := R16 end
	88	[1654]	GETGLOBAL	R22 K7 ; R22 := mGameData
	89	[1654]	SELF     	R22 R22 K18 ; R23 := R22; R22 := R22[0x69727e0b]
	90	[1654]	CALL     	R22 2 2 ; R22 := R22(R23)
	91	[1654]	SELF     	R22 R22 K19 ; R23 := R22; R22 := R22[0x11900845]
	92	[1654]	MOVE     	R24 R14 ; R24 := R14
	93	[1654]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	94	[1655]	GETGLOBAL	R23 K2 ; R23 := 0x7b998233
	95	[1655]	MOVE     	R24 R22 ; R24 := R22
	96	[1655]	CALL     	R23 2 2 ; R23 := R23(R24)
	97	[1655]	TEST     	R23 1 ; if R23 then PC := 210
	98	[1655]	JMP      	210 ; PC := 210
	99	[1657]	GETGLOBAL	R23 K12 ; R23 := 0xb009bbc6
	100	[1657]	GETTABLE 	R24 R22 K23 ; R24 := R22["mChallengeTypeRefID"]
	101	[1657]	CALL     	R23 2 2 ; R23 := R23(R24)
	102	[1658]	GETGLOBAL	R24 K7 ; R24 := mGameData
	103	[1658]	SELF     	R24 R24 K24 ; R25 := R24; R24 := R24[0x896fe205]
	104	[1658]	MOVE     	R26 R14 ; R26 := R14
	105	[1658]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	106	[1659]	LOADK    	R25 := 0.000000
	107	[1660]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	108	[1660]	MOVE     	R27 R24 ; R27 := R24
	109	[1660]	CALL     	R26 2 2 ; R26 := R26(R27)
	110	[1660]	TEST     	R26 1 ; if R26 then PC := 115
	111	[1660]	JMP      	115 ; PC := 115
	112	[1661]	SELF     	R26 R24 K25 ; R27 := R24; R26 := R24[0x958b6075]
	113	[1661]	CALL     	R26 2 2 ; R26 := R26(R27)
	114	[1661]	MOVE     	R25 R26 ; R25 := R26
	115	[1664]	GETGLOBAL	R26 K26 ; R26 := 0x03f57322
	116	[1664]	SELF     	R27 R22 K27 ; R28 := R22; R27 := R22[0xad30423b]
	117	[1664]	MOVE     	R29 R23 ; R29 := R23
	118	[1664]	CALL     	R27 3 0 ; R27,... := R27(R28,R29)
	119	[1664]	CALL     	R26 0 2 ; R26 := R26(R27,...)
	120	[1664]	MOVE     	R11 R26 ; R11 := R26
	121	[1666]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	122	[1666]	MOVE     	R27 R24 ; R27 := R24
	123	[1666]	CALL     	R26 2 2 ; R26 := R26(R27)
	124	[1666]	TEST     	R26 1 ; if R26 then PC := 137
	125	[1666]	JMP      	137 ; PC := 137
	126	[1666]	SELF     	R26 R24 K28 ; R27 := R24; R26 := R24[0x2698bd19]
	127	[1666]	CALL     	R26 2 2 ; R26 := R26(R27)
	128	[1666]	TEST     	R26 0 ; if not R26 then PC := 137
	129	[1666]	JMP      	137 ; PC := 137
	130	[1667]	GETGLOBAL	R26 K29 ; R26 := 0xae91e43b
	131	[1667]	SELF     	R26 R26 K30 ; R27 := R26; R26 := R26[0x42b04007]
	132	[1667]	LOADK    	R28 K31 ; R28 := "/Lotus/Language/Actions/CompleteXP"
	133	[1667]	OP_LOADBOOL	R29 0 0 ; R29 := false
	134	[1667]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	135	[1667]	MOVE     	R12 R26 ; R12 := R26
	136	[1667]	JMP      	144 ; PC := 144
	137	[1669]	LOADK    	R13 := 20.000000
	138	[1670]	GETGLOBAL	R26 K29 ; R26 := 0xae91e43b
	139	[1670]	SELF     	R26 R26 K30 ; R27 := R26; R26 := R26[0x42b04007]
	140	[1670]	LOADK    	R28 K32 ; R28 := "/Lotus/Language/Categories/IN_PROGRESS"
	141	[1670]	OP_LOADBOOL	R29 0 0 ; R29 := false
	142	[1670]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	143	[1670]	MOVE     	R12 R26 ; R12 := R26
	144	[1673]	EQ       	0 R12 K33 ; if R12 ~= nil then PC := 165
	145	[1673]	JMP      	165 ; PC := 165
	146	[1674]	GETGLOBAL	R26 K29 ; R26 := 0xae91e43b
	147	[1674]	SELF     	R26 R26 K30 ; R27 := R26; R26 := R26[0x42b04007]
	148	[1674]	LOADK    	R28 K34 ; R28 := "/Lotus/Language/Syndicates/Neutral"
	149	[1674]	OP_LOADBOOL	R29 0 0 ; R29 := false
	150	[1674]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	151	[1674]	MOVE     	R12 R26 ; R12 := R26
	152	[1675]	GETTABLE 	R26 R3 K35 ; R26 := R3["mTitle"]
	153	[1675]	EQ       	1 R26 K22 ; if R26 == 0.000000 then PC := 165
	154	[1675]	JMP      	165 ; PC := 165
	155	[1676]	SELF     	R26 R5 K36 ; R27 := R5; R26 := R5[0xb99a3ddc]
	156	[1676]	GETTABLE 	R28 R3 K35 ; R28 := R3["mTitle"]
	157	[1676]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	158	[1677]	GETGLOBAL	R27 K29 ; R27 := 0xae91e43b
	159	[1677]	SELF     	R27 R27 K30 ; R28 := R27; R27 := R27[0x42b04007]
	160	[1677]	SELF     	R29 R26 K11 ; R30 := R26; R29 := R26[0x6d604ba7]
	161	[1677]	CALL     	R29 2 2 ; R29 := R29(R30)
	162	[1677]	OP_LOADBOOL	R30 0 0 ; R30 := false
	163	[1677]	CALL     	R27 4 2 ; R27 := R27(R28,R29,R30)
	164	[1677]	MOVE     	R12 R27 ; R12 := R27
	165	[1681]	GETUPVAL 	R27 U1 ; R27 := U1
	166	[1681]	GETTABLE 	R27 R27 K37 ; R27 := R27[0xe6b719a2]
	167	[1681]	CALL     	R27 1 2 ; R27 := R27()
	168	[1681]	SELF     	R28 R6 K38 ; R29 := R6; R28 := R6[0xed4e0128]
	169	[1681]	CALL     	R28 2 2 ; R28 := R28(R29)
	170	[1681]	GETTABLE 	R27 R27 R28 ; R27 := R27[R28]
	171	[1682]	NEWTABLE 	R28 0 11 ; R28 := {}
	172	[1682]	SETTABLE 	R28 K39 R5 ; R28["Type"] := R5
	173	[1682]	SETTABLE 	R28 K40 K41 ; R28["Syndicate"] := true
	174	[1682]	GETGLOBAL	R29 K29 ; R29 := 0xae91e43b
	175	[1682]	SELF     	R29 R29 K30 ; R30 := R29; R29 := R29[0x42b04007]
	176	[1682]	LOADK    	R31 K43 ; R31 := "+<REPUTATION>"
	177	[1682]	OP_LOADBOOL	R32 1 0 ; R32 := true
	178	[1682]	CALL     	R29 4 2 ; R29 := R29(R30,R31,R32)
	179	[1682]	MOVE     	R30 R11 ; R30 := R11
	180	[1682]	CONCAT   	R29 R29 R30 ; R29 := R29 .. R30
	181	[1682]	SETTABLE 	R28 K42 R29 ; R28[0x3f3ae64c] := R29
	182	[1682]	SETTABLE 	R28 K44 R25 ; R28["Progress"] := R25
	183	[1682]	SETTABLE 	R28 K45 R6 ; R28[0x7b998233] := R6
	184	[1682]	SETTABLE 	R28 K46 K41 ; R28["Themed"] := true
	185	[1682]	GETGLOBAL	R29 K48 ; R29 := 0x603636ad
	186	[1682]	GETGLOBAL	R30 K49 ; R30 := 0x64fb1586
	187	[1682]	GETTABLE 	R31 R23 K50 ; R31 := R23["mLocName"]
	188	[1682]	CALL     	R30 2 2 ; R30 := R30(R31)
	189	[1682]	NEWTABLE 	R31 0 0 ; R31 := {}
	190	[1682]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	191	[1682]	SETTABLE 	R28 K47 R29 ; R28["Name"] := R29
	192	[1682]	SETTABLE 	R28 K51 R12 ; R28["Desc"] := R12
	193	[1682]	GETGLOBAL	R29 K49 ; R29 := 0x64fb1586
	194	[1682]	SELF     	R30 R5 K53 ; R31 := R5; R30 := R5[0x5660f6f0]
	195	[1682]	CALL     	R30 2 2 ; R30 := R30(R31)
	196	[1682]	SELF     	R30 R30 K54 ; R31 := R30; R30 := R30[0xa5d5c8f6]
	197	[1682]	CALL     	R30 2 0 ; R30,... := R30(R31)
	198	[1682]	CALL     	R29 0 2 ; R29 := R29(R30,...)
	199	[1682]	SETTABLE 	R28 K52 R29 ; R28["IconColor"] := R29
	200	[1682]	GETUPVAL 	R29 U2 ; R29 := U2
	201	[1682]	MOVE     	R30 R5 ; R30 := R5
	202	[1682]	CALL     	R29 2 2 ; R29 := R29(R30)
	203	[1682]	SETTABLE 	R28 K55 R29 ; R28["BackgroundColor"] := R29
	204	[1682]	SETTABLE 	R28 K56 R27 ; R28[0xae91e43b] := R27
	205	[1683]	GETGLOBAL	R29 K57 ; R29 := mAffinityGrid
	206	[1683]	SELF     	R29 R29 K58 ; R30 := R29; R29 := R29[0xbad4316f]
	207	[1683]	MOVE     	R31 R28 ; R31 := R28
	208	[1683]	OP_LOADBOOL	R32 1 0 ; R32 := true
	209	[1683]	CALL     	R29 4 1 ; R29(R30,R31,R32)
	210	[1627]	FORLOOP  	R7 40 ; R7 += R9; if R7 <= R8 then begin PC := 40; R10 := R7 end
	211	[1687]	RETURN   	R0 1 ; return 

function #61 <?:1689,1694> (14 instructions, 56 bytes at 0000016092544D10)
2 params, 7 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[1690]	TEST     	R0 0 ; if not R0 then PC := 14
	2	[1690]	JMP      	14 ; PC := 14
	3	[1691]	GETGLOBAL	R2 K0 ; R2 := mAffinityGrid
	4	[1691]	GETGLOBAL	R3 K2 ; R3 := 0xb009bbc6
	5	[1691]	MOVE     	R4 R1 ; R4 := R1
	6	[1691]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[1691]	SETTABLE 	R2 K1 R3 ; R2["OnslaughtBackground"] := R3
	8	[1692]	GETGLOBAL	R2 K0 ; R2 := mAffinityGrid
	9	[1692]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x71e9ac81]
	10	[1692]	LOADNIL  	R4 R4 ; R4 := nil
	11	[1692]	OP_LOADBOOL	R5 1 0 ; R5 := true
	12	[1692]	OP_LOADBOOL	R6 1 0 ; R6 := true
	13	[1692]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	14	[1694]	RETURN   	R0 1 ; return 

function #62 <?:1696,1701> (11 instructions, 44 bytes at 0000016092544ED0)
2 params, 6 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1697]	TEST     	R0 0 ; if not R0 then PC := 11
	2	[1697]	JMP      	11 ; PC := 11
	3	[1698]	GETGLOBAL	R2 K0 ; R2 := 0xb009bbc6
	4	[1698]	MOVE     	R3 R1 ; R3 := R1
	5	[1698]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[1699]	GETUPVAL 	R3 U0 ; R3 := U0
	7	[1699]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x659d451f]
	8	[1699]	SELF     	R4 R2 K2 ; R5 := R2; R4 := R2[0xbd368681]
	9	[1699]	CALL     	R4 2 0 ; R4,... := R4(R5)
	10	[1699]	CALL     	R3 0 1 ; R3(R4,...)
	11	[1701]	RETURN   	R0 1 ; return 

function #63 <?:1703,1708> (10 instructions, 40 bytes at 0000016092545020)
2 params, 5 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1704]	TEST     	R0 0 ; if not R0 then PC := 10
	2	[1704]	JMP      	10 ; PC := 10
	3	[1705]	GETGLOBAL	R2 K0 ; R2 := 0xb009bbc6
	4	[1705]	MOVE     	R3 R1 ; R3 := R1
	5	[1705]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[1706]	GETUPVAL 	R3 U0 ; R3 := U0
	7	[1706]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x659d451f]
	8	[1706]	MOVE     	R4 R2 ; R4 := R2
	9	[1706]	CALL     	R3 2 1 ; R3(R4)
	10	[1708]	RETURN   	R0 1 ; return 

function #64 <?:1710,1803> (234 instructions, 936 bytes at 0000016092545160)
0 params, 42 slots, 4 upvalues, 0 locals, 72 constants, 0 functions
	1	[1712]	GETGLOBAL	R0 K0 ; R0 := mReputationScreenInitialized
	2	[1712]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[1712]	JMP      	5 ; PC := 5
	4	[1713]	RETURN   	R0 1 ; return 
	5	[1715]	NEWTABLE 	R0 10 0 ; R0 := {}
	6	[1716]	LOADK    	R1 K1 ; R1 := "/Lotus/Language/Onslaught/RankS"
	7	[1717]	LOADK    	R2 K2 ; R2 := "/Lotus/Language/Onslaught/RankAP"
	8	[1717]	LOADK    	R3 K3 ; R3 := "/Lotus/Language/Onslaught/RankA"
	9	[1717]	LOADK    	R4 K4 ; R4 := "/Lotus/Language/Onslaught/RankAM"
	10	[1718]	LOADK    	R5 K5 ; R5 := "/Lotus/Language/Onslaught/RankBP"
	11	[1718]	LOADK    	R6 K6 ; R6 := "/Lotus/Language/Onslaught/RankB"
	12	[1718]	LOADK    	R7 K7 ; R7 := "/Lotus/Language/Onslaught/RankBM"
	13	[1719]	LOADK    	R8 K8 ; R8 := "/Lotus/Language/Onslaught/RankCP"
	14	[1719]	LOADK    	R9 K9 ; R9 := "/Lotus/Language/Onslaught/RankC"
	15	[1720]	LOADK    	R10 K10 ; R10 := "/Lotus/Language/Onslaught/RankCM"
	16	[1720]	SETLIST  	R0 10 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 10
	17	[1721]	GETGLOBAL	R1 K11 ; R1 := 0x0469f296
	18	[1721]	LOADK    	R2 K12 ; R2 := "AvgWaveRank"
	19	[1721]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[1722]	GETGLOBAL	R2 K11 ; R2 := 0x0469f296
	21	[1722]	LOADK    	R3 K13 ; R3 := "Kills"
	22	[1722]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[1723]	GETGLOBAL	R3 K11 ; R3 := 0x0469f296
	24	[1723]	LOADK    	R4 K14 ; R4 := "VIPKills"
	25	[1723]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[1724]	GETGLOBAL	R4 K11 ; R4 := 0x0469f296
	27	[1724]	LOADK    	R5 K15 ; R5 := "Score"
	28	[1724]	CALL     	R4 2 2 ; R4 := R4(R5)
	29	[1725]	GETGLOBAL	R5 K11 ; R5 := 0x0469f296
	30	[1725]	LOADK    	R6 K16 ; R6 := "WaveClearScore"
	31	[1725]	CALL     	R5 2 2 ; R5 := R5(R6)
	32	[1726]	GETGLOBAL	R6 K11 ; R6 := 0x0469f296
	33	[1726]	LOADK    	R7 K17 ; R7 := "Wave"
	34	[1726]	CALL     	R6 2 2 ; R6 := R6(R7)
	35	[1727]	LOADK    	R7 := 10.000000
	36	[1728]	LOADK    	R8 := 1000.000000
	37	[1730]	GETGLOBAL	R9 K18 ; R9 := 0xa94df70b
	38	[1730]	SELF     	R9 R9 K19 ; R10 := R9; R9 := R9[0x07408254]
	39	[1730]	GETGLOBAL	R11 K11 ; R11 := 0x0469f296
	40	[1730]	LOADK    	R12 K20 ; R12 := "LibrarySyndicate"
	41	[1730]	CALL     	R11 2 0 ; R11,... := R11(R12)
	42	[1730]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	43	[1731]	SELF     	R10 R9 K21 ; R11 := R9; R10 := R9[0x056dcf06]
	44	[1731]	CALL     	R10 2 2 ; R10 := R10(R11)
	45	[1732]	LOADK    	R11 := 10.000000
	46	[1733]	LOADK    	R12 := 0.000000
	47	[1734]	LOADK    	R13 := 0.000000
	48	[1735]	LOADK    	R14 := 0.000000
	49	[1736]	LOADK    	R15 := 0.000000
	50	[1737]	LOADK    	R16 := 1.000000
	51	[1739]	GETUPVAL 	R17 U0 ; R17 := U0
	52	[1739]	GETTABLE 	R17 R17 K22 ; R17 := R17[0xcdc34211]
	53	[1739]	CALL     	R17 1 2 ; R17 := R17()
	54	[1739]	TEST     	R17 0 ; if not R17 then PC := 93
	55	[1739]	JMP      	93 ; PC := 93
	56	[1740]	GETGLOBAL	R17 K23 ; R17 := 0xbe190284
	57	[1740]	SELF     	R17 R17 K24 ; R18 := R17; R17 := R17[0x0eb34c69]
	58	[1740]	MOVE     	R19 R1 ; R19 := R1
	59	[1740]	LOADK    	R20 := 10.000000
	60	[1740]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	61	[1740]	MOVE     	R11 R17 ; R11 := R17
	62	[1741]	GETGLOBAL	R17 K23 ; R17 := 0xbe190284
	63	[1741]	SELF     	R17 R17 K24 ; R18 := R17; R17 := R17[0x0eb34c69]
	64	[1741]	MOVE     	R19 R2 ; R19 := R2
	65	[1741]	LOADK    	R20 := 0.000000
	66	[1741]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	67	[1741]	MOVE     	R12 R17 ; R12 := R17
	68	[1742]	GETGLOBAL	R17 K23 ; R17 := 0xbe190284
	69	[1742]	SELF     	R17 R17 K24 ; R18 := R17; R17 := R17[0x0eb34c69]
	70	[1742]	MOVE     	R19 R3 ; R19 := R3
	71	[1742]	LOADK    	R20 := 0.000000
	72	[1742]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	73	[1742]	MOVE     	R13 R17 ; R13 := R17
	74	[1743]	GETGLOBAL	R17 K23 ; R17 := 0xbe190284
	75	[1743]	SELF     	R17 R17 K24 ; R18 := R17; R17 := R17[0x0eb34c69]
	76	[1743]	MOVE     	R19 R5 ; R19 := R5
	77	[1743]	LOADK    	R20 := 0.000000
	78	[1743]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	79	[1743]	MOVE     	R14 R17 ; R14 := R17
	80	[1744]	GETGLOBAL	R17 K23 ; R17 := 0xbe190284
	81	[1744]	SELF     	R17 R17 K24 ; R18 := R17; R17 := R17[0x0eb34c69]
	82	[1744]	MOVE     	R19 R4 ; R19 := R4
	83	[1744]	LOADK    	R20 := 0.000000
	84	[1744]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	85	[1744]	MOVE     	R15 R17 ; R15 := R17
	86	[1745]	GETGLOBAL	R17 K23 ; R17 := 0xbe190284
	87	[1745]	SELF     	R17 R17 K24 ; R18 := R17; R17 := R17[0x0eb34c69]
	88	[1745]	MOVE     	R19 R6 ; R19 := R6
	89	[1745]	LOADK    	R20 := 0.000000
	90	[1745]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	91	[1745]	ADD      	R16 R17 K25 ; R16 := R17 + 1.000000
	92	[1745]	JMP      	156 ; PC := 156
	93	[1747]	LOADNIL  	R17 R17 ; R17 := nil
	94	[1748]	GETGLOBAL	R18 K26 ; R18 := mGameData
	95	[1748]	SELF     	R18 R18 K27 ; R19 := R18; R18 := R18[0x79e70384]
	96	[1748]	CALL     	R18 2 2 ; R18 := R18(R19)
	97	[1749]	GETGLOBAL	R19 K28 ; R19 := 0x76ea806b
	98	[1749]	SELF     	R19 R19 K29 ; R20 := R19; R19 := R19[0x3f3ae64c]
	99	[1749]	LOADK    	R21 := 0.000000
	100	[1749]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	101	[1749]	SELF     	R19 R19 K30 ; R20 := R19; R19 := R19[0x5ca33548]
	102	[1749]	CALL     	R19 2 2 ; R19 := R19(R20)
	103	[1750]	LOADK    	R20 := 1.000000
	104	[1750]	LEN      	R21 R18 ; R21 := # R18
	105	[1750]	LOADK    	R22 := 1.000000
	106	[1750]	FORPREP  	R20 113 ; R20 -= R22; PC := 113
	107	[1751]	GETTABLE 	R24 R18 R23 ; R24 := R18[R23]
	108	[1751]	GETTABLE 	R24 R24 K31 ; R24 := R24["playerName"]
	109	[1751]	EQ       	0 R24 R19 ; if R24 ~= R19 then PC := 113
	110	[1751]	JMP      	113 ; PC := 113
	111	[1752]	GETTABLE 	R17 R18 R23 ; R17 := R18[R23]
	112	[1753]	JMP      	114 ; PC := 114
	113	[1750]	FORLOOP  	R20 107 ; R20 += R22; if R20 <= R21 then begin PC := 107; R23 := R20 end
	114	[1757]	GETGLOBAL	R24 K32 ; R24 := 0x7b998233
	115	[1757]	MOVE     	R25 R17 ; R25 := R17
	116	[1757]	CALL     	R24 2 2 ; R24 := R24(R25)
	117	[1757]	TEST     	R24 1 ; if R24 then PC := 156
	118	[1757]	JMP      	156 ; PC := 156
	119	[1758]	LOADK    	R24 := 1.000000
	120	[1758]	GETTABLE 	R25 R17 K33 ; R25 := R17["extraStats"]
	121	[1758]	LEN      	R25 R25 ; R25 := # R25
	122	[1758]	LOADK    	R26 := 1.000000
	123	[1758]	FORPREP  	R24 155 ; R24 -= R26; PC := 155
	124	[1759]	GETTABLE 	R28 R17 K33 ; R28 := R17["extraStats"]
	125	[1759]	GETTABLE 	R28 R28 R27 ; R28 := R28[R27]
	126	[1760]	GETTABLE 	R29 R28 K34 ; R29 := R28["name"]
	127	[1760]	EQ       	0 R29 K35 ; if R29 ~= "EEFinalRank" then PC := 131
	128	[1760]	JMP      	131 ; PC := 131
	129	[1761]	GETTABLE 	R11 R28 K36 ; R11 := R28["value"]
	130	[1761]	JMP      	155 ; PC := 155
	131	[1762]	GETTABLE 	R29 R28 K34 ; R29 := R28["name"]
	132	[1762]	EQ       	0 R29 K37 ; if R29 ~= "EEKills" then PC := 136
	133	[1762]	JMP      	136 ; PC := 136
	134	[1763]	GETTABLE 	R12 R28 K36 ; R12 := R28["value"]
	135	[1763]	JMP      	155 ; PC := 155
	136	[1764]	GETTABLE 	R29 R28 K34 ; R29 := R28["name"]
	137	[1764]	EQ       	0 R29 K38 ; if R29 ~= "EEVipKills" then PC := 141
	138	[1764]	JMP      	141 ; PC := 141
	139	[1765]	GETTABLE 	R13 R28 K36 ; R13 := R28["value"]
	140	[1765]	JMP      	155 ; PC := 155
	141	[1766]	GETTABLE 	R29 R28 K34 ; R29 := R28["name"]
	142	[1766]	EQ       	0 R29 K39 ; if R29 ~= "EETotal" then PC := 146
	143	[1766]	JMP      	146 ; PC := 146
	144	[1767]	GETTABLE 	R15 R28 K36 ; R15 := R28["value"]
	145	[1767]	JMP      	155 ; PC := 155
	146	[1768]	GETTABLE 	R29 R28 K34 ; R29 := R28["name"]
	147	[1768]	EQ       	0 R29 K40 ; if R29 ~= "EEWaveScore" then PC := 151
	148	[1768]	JMP      	151 ; PC := 151
	149	[1769]	GETTABLE 	R14 R28 K36 ; R14 := R28["value"]
	150	[1769]	JMP      	155 ; PC := 155
	151	[1770]	GETTABLE 	R29 R28 K34 ; R29 := R28["name"]
	152	[1770]	EQ       	0 R29 K41 ; if R29 ~= "EEWaveReached" then PC := 155
	153	[1770]	JMP      	155 ; PC := 155
	154	[1771]	GETTABLE 	R16 R28 K36 ; R16 := R28["value"]
	155	[1758]	FORLOOP  	R24 124 ; R24 += R26; if R24 <= R25 then begin PC := 124; R27 := R24 end
	156	[1777]	GETUPVAL 	R29 U1 ; R29 := U1
	157	[1777]	LOADK    	R30 K42 ; R30 := "/Lotus/Language/Menu/MenuGotoSimaris"
	158	[1777]	CALL     	R29 2 1 ; R29(R30)
	159	[1779]	GETGLOBAL	R29 K43 ; R29 := 0xae91e43b
	160	[1779]	SELF     	R29 R29 K44 ; R30 := R29; R29 := R29[0x42b04007]
	161	[1779]	GETTABLE 	R31 R0 R11 ; R31 := R0[R11]
	162	[1779]	OP_LOADBOOL	R32 0 0 ; R32 := false
	163	[1779]	CALL     	R29 4 2 ; R29 := R29(R30,R31,R32)
	164	[1781]	GETGLOBAL	R30 K43 ; R30 := 0xae91e43b
	165	[1781]	SELF     	R30 R30 K45 ; R31 := R30; R30 := R30[0x20b98db3]
	166	[1781]	LOADK    	R32 K46 ; R32 := "TopAnchor.Header.Label.text"
	167	[1781]	LOADK    	R33 K47 ; R33 := "/Lotus/Language/Onslaught/EndOfMatchWaves"
	168	[1781]	NEWTABLE 	R34 0 1 ; R34 := {}
	169	[1781]	SETTABLE 	R34 K48 R16 ; R34["VALUE"] := R16
	170	[1781]	CALL     	R30 5 1 ; R30(R31,R32,R33,R34)
	171	[1783]	GETGLOBAL	R30 K49 ; R30 := 0x603636ad
	172	[1783]	LOADK    	R31 K50 ; R31 := "/Lotus/Language/Onslaught/EndOfMatchKills"
	173	[1783]	NEWTABLE 	R32 0 0 ; R32 := {}
	174	[1783]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	175	[1783]	LOADK    	R31 K51 ; R31 := "   "
	176	[1783]	GETUPVAL 	R32 U2 ; R32 := U2
	177	[1783]	GETTABLE 	R32 R32 K52 ; R32 := R32[0x1142c7a8]
	178	[1783]	MUL      	R33 R12 R7 ; R33 := R12 * R7
	179	[1783]	CALL     	R32 2 2 ; R32 := R32(R33)
	180	[1783]	LOADK    	R33 K53 ; R33 := "\r"
	181	[1784]	GETGLOBAL	R34 K49 ; R34 := 0x603636ad
	182	[1784]	LOADK    	R35 K54 ; R35 := "/Lotus/Language/Onslaught/EndOfMatchVIP"
	183	[1784]	NEWTABLE 	R36 0 0 ; R36 := {}
	184	[1784]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	185	[1784]	LOADK    	R35 K51 ; R35 := "   "
	186	[1784]	GETUPVAL 	R36 U2 ; R36 := U2
	187	[1784]	GETTABLE 	R36 R36 K52 ; R36 := R36[0x1142c7a8]
	188	[1784]	MUL      	R37 R13 R8 ; R37 := R13 * R8
	189	[1784]	CALL     	R36 2 2 ; R36 := R36(R37)
	190	[1784]	LOADK    	R37 K53 ; R37 := "\r"
	191	[1785]	GETGLOBAL	R38 K49 ; R38 := 0x603636ad
	192	[1785]	LOADK    	R39 K55 ; R39 := "/Lotus/Language/Onslaught/EndOfMatchRounds"
	193	[1785]	NEWTABLE 	R40 0 0 ; R40 := {}
	194	[1785]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	195	[1785]	LOADK    	R39 K51 ; R39 := "   "
	196	[1785]	GETUPVAL 	R40 U2 ; R40 := U2
	197	[1785]	GETTABLE 	R40 R40 K52 ; R40 := R40[0x1142c7a8]
	198	[1785]	MOVE     	R41 R14 ; R41 := R14
	199	[1785]	CALL     	R40 2 2 ; R40 := R40(R41)
	200	[1785]	LOADK    	R41 K53 ; R41 := "\r"
	201	[1785]	CONCAT   	R30 R30 R41 ; R30 := R30 .. R31 .. R32 .. R33 .. R34 .. R35 .. R36 .. R37 .. R38 .. R39 .. R40 .. R41
	202	[1787]	NEWTABLE 	R31 0 9 ; R31 := {}
	203	[1787]	SETTABLE 	R31 K56 R9 ; R31["Type"] := R9
	204	[1787]	SETTABLE 	R31 K57 K58 ; R31["Onslaught"] := true
	205	[1787]	GETUPVAL 	R32 U2 ; R32 := U2
	206	[1787]	GETTABLE 	R32 R32 K52 ; R32 := R32[0x1142c7a8]
	207	[1787]	MOVE     	R33 R15 ; R33 := R15
	208	[1787]	CALL     	R32 2 2 ; R32 := R32(R33)
	209	[1787]	SETTABLE 	R31 K15 R32 ; R31["Score"] := R32
	210	[1787]	SETTABLE 	R31 K59 R10 ; R31["Icon"] := R10
	211	[1787]	SETTABLE 	R31 K60 K58 ; R31["Themed"] := true
	212	[1787]	GETGLOBAL	R32 K62 ; R32 := 0x7f5022cf
	213	[1787]	GETTABLE 	R32 R32 K63 ; R32 := R32[0x3f3e4d12]
	214	[1787]	MOVE     	R33 R30 ; R33 := R30
	215	[1787]	CALL     	R32 2 2 ; R32 := R32(R33)
	216	[1787]	SETTABLE 	R31 K61 R32 ; R31["Name"] := R32
	217	[1787]	LOADK    	R32 K65 ; R32 := "<font color=\"#FloatingContentHighlight\" size=\"50\"><b>"
	218	[1787]	MOVE     	R33 R29 ; R33 := R29
	219	[1787]	LOADK    	R34 K66 ; R34 := "</b> </font>"
	220	[1787]	CONCAT   	R32 R32 R34 ; R32 := R32 .. R33 .. R34
	221	[1787]	SETTABLE 	R31 K64 R32 ; R31["FinalRank"] := R32
	222	[1787]	SETTABLE 	R31 K67 K68 ; R31["IconColor"] := "0xFFFFFF"
	223	[1787]	GETUPVAL 	R32 U3 ; R32 := U3
	224	[1787]	MOVE     	R33 R9 ; R33 := R9
	225	[1787]	CALL     	R32 2 2 ; R32 := R32(R33)
	226	[1787]	SETTABLE 	R31 K69 R32 ; R31["BackgroundColor"] := R32
	227	[1788]	GETGLOBAL	R32 K70 ; R32 := mAffinityGrid
	228	[1788]	SELF     	R32 R32 K71 ; R33 := R32; R32 := R32[0xbad4316f]
	229	[1788]	MOVE     	R34 R31 ; R34 := R31
	230	[1788]	OP_LOADBOOL	R35 1 0 ; R35 := true
	231	[1788]	CALL     	R32 4 1 ; R32(R33,R34,R35)
	232	[1802]	OP_LOADBOOL	R32 1 0 ; R32 := true
	233	[1802]	SETGLOBALHASH	R32 K0 ; mReputationScreenInitialized := R32
	234	[1803]	RETURN   	R0 1 ; return 

function #65 <?:1805,1859> (196 instructions, 784 bytes at 00000160925466D0)
0 params, 24 slots, 4 upvalues, 0 locals, 55 constants, 0 functions
	1	[1806]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1806]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xcdc34211]
	3	[1806]	CALL     	R0 1 2 ; R0 := R0()
	4	[1806]	TEST     	R0 0 ; if not R0 then PC := 13
	5	[1806]	JMP      	13 ; PC := 13
	6	[1806]	GETGLOBAL	R0 K1 ; R0 := _T
	7	[1806]	GETTABLE 	R0 R0 K2 ; R0 := R0["eomScreenMode"]
	8	[1806]	GETUPVAL 	R1 U1 ; R1 := U1
	9	[1806]	GETTABLE 	R1 R1 K3 ; R1 := R1["ACTUAL_EOM"]
	10	[1806]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 13
	11	[1806]	JMP      	13 ; PC := 13
	12	[1807]	RETURN   	R0 1 ; return 
	13	[1810]	GETUPVAL 	R0 U2 ; R0 := U2
	14	[1810]	CALL     	R0 1 2 ; R0 := R0()
	15	[1811]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[1811]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x5e35d4d6]
	17	[1811]	CALL     	R1 1 2 ; R1 := R1()
	18	[1812]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0x3ad9ed31]
	19	[1812]	GETTABLE 	R4 R0 K6 ; R4 := R0["location"]
	20	[1812]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	21	[1813]	GETUPVAL 	R3 U0 ; R3 := U0
	22	[1813]	GETTABLE 	R3 R3 K7 ; R3 := R3[0xdc1248b0]
	23	[1813]	MOVE     	R4 R2 ; R4 := R2
	24	[1813]	MOVE     	R5 R0 ; R5 := R0
	25	[1813]	LOADNIL  	R6 R6 ; R6 := nil
	26	[1813]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	27	[1814]	GETTABLE 	R4 R3 K8 ; R4 := R3["mInvasionInfo"]
	28	[1815]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	29	[1815]	MOVE     	R6 R4 ; R6 := R4
	30	[1815]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[1815]	TEST     	R5 0 ; if not R5 then PC := 34
	32	[1815]	JMP      	34 ; PC := 34
	33	[1816]	RETURN   	R0 1 ; return 
	34	[1819]	GETGLOBAL	R5 K10 ; R5 := 0x25d99d89
	35	[1819]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0xbc93edaa]
	36	[1819]	CALL     	R5 2 2 ; R5 := R5(R6)
	37	[1820]	LOADK    	R6 := 0.000000
	38	[1821]	LOADK    	R7 := 1.000000
	39	[1821]	LEN      	R8 R5 ; R8 := # R5
	40	[1821]	LOADK    	R9 := 1.000000
	41	[1821]	FORPREP  	R7 51 ; R7 -= R9; PC := 51
	42	[1822]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	43	[1822]	GETTABLE 	R11 R11 K12 ; R11 := R11["mId"]
	44	[1822]	GETTABLE 	R11 R11 K12 ; R11 := R11["mId"]
	45	[1822]	GETTABLE 	R12 R4 K12 ; R12 := R4["mId"]
	46	[1822]	GETTABLE 	R12 R12 K12 ; R12 := R12["mId"]
	47	[1822]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 51
	48	[1822]	JMP      	51 ; PC := 51
	49	[1823]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	50	[1823]	GETTABLE 	R6 R11 K13 ; R6 := R11["mDelta"]
	51	[1821]	FORLOOP  	R7 42 ; R7 += R9; if R7 <= R8 then begin PC := 42; R10 := R7 end
	52	[1826]	EQ       	0 R6 K14 ; if R6 ~= 0.000000 then PC := 58
	53	[1826]	JMP      	58 ; PC := 58
	54	[1826]	GETGLOBAL	R11 K15 ; R11 := mMissionFailed
	55	[1826]	TEST     	R11 0 ; if not R11 then PC := 58
	56	[1826]	JMP      	58 ; PC := 58
	57	[1827]	RETURN   	R0 1 ; return 
	58	[1830]	GETTABLE 	R11 R4 K16 ; R11 := R4["mFaction"]
	59	[1830]	GETTABLE 	R12 R0 K17 ; R12 := R0["invasionAllyFaction"]
	60	[1830]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 63
	61	[1830]	JMP      	63 ; PC := 63
	62	[1830]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 63
	63	[1830]	OP_LOADBOOL	R11 1 0 ; R11 := true
	64	[1831]	LT       	1 K14 R6 ; if 0.000000 < R6 then PC := 71
	65	[1831]	JMP      	71 ; PC := 71
	66	[1831]	TESTSET  	R12 R11 0 ; if not R11 then PC := 72 else R12 := R11 
	67	[1831]	JMP      	72 ; PC := 72
	68	[1831]	EQ       	1 R6 K14 ; if R6 == 0.000000 then PC := 71
	69	[1831]	JMP      	71 ; PC := 71
	70	[1831]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 71
	71	[1831]	OP_LOADBOOL	R12 1 0 ; R12 := true
	72	[1832]	LOADK    	R13 := 0.000000
	73	[1833]	GETGLOBAL	R14 K15 ; R14 := mMissionFailed
	74	[1833]	TEST     	R14 1 ; if R14 then PC := 97
	75	[1833]	JMP      	97 ; PC := 97
	76	[1834]	GETUPVAL 	R14 U3 ; R14 := U3
	77	[1834]	GETTABLE 	R14 R14 K18 ; R14 := R14[0x06d055f9]
	78	[1834]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 81
	79	[1834]	JMP      	81 ; PC := 81
	80	[1834]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 81
	81	[1834]	OP_LOADBOOL	R15 1 0 ; R15 := true
	82	[1834]	LOADK    	R16 := 1.000000
	83	[1834]	LOADK    	R17 := -1.000000
	84	[1834]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	85	[1834]	MOVE     	R13 R14 ; R13 := R14
	86	[1835]	GETGLOBAL	R14 K1 ; R14 := _T
	87	[1835]	GETTABLE 	R14 R14 K2 ; R14 := R14["eomScreenMode"]
	88	[1835]	GETUPVAL 	R15 U1 ; R15 := U1
	89	[1835]	GETTABLE 	R15 R15 K3 ; R15 := R15["ACTUAL_EOM"]
	90	[1835]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 97
	91	[1835]	JMP      	97 ; PC := 97
	92	[1836]	TEST     	R11 0 ; if not R11 then PC := 96
	93	[1836]	JMP      	96 ; PC := 96
	94	[1837]	ADD      	R6 R6 K19 ; R6 := R6 + 1.000000
	95	[1837]	JMP      	97 ; PC := 97
	96	[1839]	SUB      	R6 R6 K19 ; R6 := R6 - 1.000000
	97	[1843]	LOADK    	R14 K20 ; R14 := ""
	98	[1844]	LT       	1 K14 R6 ; if 0.000000 < R6 then PC := 104
	99	[1844]	JMP      	104 ; PC := 104
	100	[1844]	EQ       	0 R6 K14 ; if R6 ~= 0.000000 then PC := 125
	101	[1844]	JMP      	125 ; PC := 125
	102	[1844]	TEST     	R11 0 ; if not R11 then PC := 125
	103	[1844]	JMP      	125 ; PC := 125
	104	[1845]	GETGLOBAL	R15 K21 ; R15 := 0x603636ad
	105	[1845]	GETUPVAL 	R16 U3 ; R16 := U3
	106	[1845]	GETTABLE 	R16 R16 K18 ; R16 := R16[0x06d055f9]
	107	[1845]	GETTABLE 	R17 R4 K22 ; R17 := R4["mAttackerName"]
	108	[1845]	GETGLOBAL	R18 K23 ; R18 := EMPTY_SYMBOL
	109	[1845]	EQ       	1 R17 R18 ; if R17 == R18 then PC := 112
	110	[1845]	JMP      	112 ; PC := 112
	111	[1845]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 112
	112	[1845]	OP_LOADBOOL	R17 1 0 ; R17 := true
	113	[1845]	GETUPVAL 	R18 U0 ; R18 := U0
	114	[1845]	GETTABLE 	R18 R18 K24 ; R18 := R18[0xc6c45c3a]
	115	[1845]	GETTABLE 	R19 R4 K16 ; R19 := R4["mFaction"]
	116	[1845]	CALL     	R18 2 2 ; R18 := R18(R19)
	117	[1845]	GETGLOBAL	R19 K25 ; R19 := 0x64fb1586
	118	[1845]	GETTABLE 	R20 R4 K22 ; R20 := R4["mAttackerName"]
	119	[1845]	CALL     	R19 2 0 ; R19,... := R19(R20)
	120	[1845]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	121	[1845]	NEWTABLE 	R17 0 0 ; R17 := {}
	122	[1845]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	123	[1845]	MOVE     	R14 R15 ; R14 := R15
	124	[1845]	JMP      	151 ; PC := 151
	125	[1847]	GETGLOBAL	R15 K26 ; R15 := 0x5bced4c4
	126	[1847]	GETTABLE 	R15 R15 K27 ; R15 := R15[0xe4a5b3ca]
	127	[1847]	MOVE     	R16 R6 ; R16 := R6
	128	[1847]	CALL     	R15 2 2 ; R15 := R15(R16)
	129	[1847]	MOVE     	R6 R15 ; R6 := R15
	130	[1848]	GETGLOBAL	R15 K21 ; R15 := 0x603636ad
	131	[1848]	GETUPVAL 	R16 U3 ; R16 := U3
	132	[1848]	GETTABLE 	R16 R16 K18 ; R16 := R16[0x06d055f9]
	133	[1848]	GETTABLE 	R17 R4 K28 ; R17 := R4["mDefenderName"]
	134	[1848]	GETGLOBAL	R18 K23 ; R18 := EMPTY_SYMBOL
	135	[1848]	EQ       	1 R17 R18 ; if R17 == R18 then PC := 138
	136	[1848]	JMP      	138 ; PC := 138
	137	[1848]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 138
	138	[1848]	OP_LOADBOOL	R17 1 0 ; R17 := true
	139	[1848]	GETUPVAL 	R18 U0 ; R18 := U0
	140	[1848]	GETTABLE 	R18 R18 K24 ; R18 := R18[0xc6c45c3a]
	141	[1848]	GETTABLE 	R19 R4 K29 ; R19 := R4["mAttackerMissionInfo"]
	142	[1848]	GETTABLE 	R19 R19 K30 ; R19 := R19["faction"]
	143	[1848]	CALL     	R18 2 2 ; R18 := R18(R19)
	144	[1848]	GETGLOBAL	R19 K25 ; R19 := 0x64fb1586
	145	[1848]	GETTABLE 	R20 R4 K28 ; R20 := R4["mDefenderName"]
	146	[1848]	CALL     	R19 2 0 ; R19,... := R19(R20)
	147	[1848]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	148	[1848]	NEWTABLE 	R17 0 0 ; R17 := {}
	149	[1848]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	150	[1848]	MOVE     	R14 R15 ; R14 := R15
	151	[1852]	GETUPVAL 	R15 U0 ; R15 := U0
	152	[1852]	GETTABLE 	R15 R15 K24 ; R15 := R15[0xc6c45c3a]
	153	[1852]	GETTABLE 	R16 R0 K17 ; R16 := R0["invasionAllyFaction"]
	154	[1852]	CALL     	R15 2 2 ; R15 := R15(R16)
	155	[1853]	GETGLOBAL	R16 K31 ; R16 := 0x7f5022cf
	156	[1853]	GETTABLE 	R16 R16 K32 ; R16 := R16[0x3f3e4d12]
	157	[1853]	GETGLOBAL	R17 K21 ; R17 := 0x603636ad
	158	[1853]	SELF     	R18 R1 K33 ; R19 := R1; R18 := R1[0xc1dee03f]
	159	[1853]	CALL     	R18 2 2 ; R18 := R18(R19)
	160	[1853]	GETTABLE 	R19 R2 K34 ; R19 := R2["region"]
	161	[1853]	ADD      	R19 R19 K19 ; R19 := R19 + 1.000000
	162	[1853]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	163	[1853]	GETTABLE 	R18 R18 K35 ; R18 := R18["name"]
	164	[1853]	NEWTABLE 	R19 0 0 ; R19 := {}
	165	[1853]	CALL     	R17 3 0 ; R17,... := R17(R18,R19)
	166	[1853]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	167	[1854]	MOVE     	R17 R15 ; R17 := R15
	168	[1854]	LOADK    	R18 K36 ; R18 := " "
	169	[1854]	GETTABLE 	R19 R3 K37 ; R19 := R3["mName"]
	170	[1854]	LOADK    	R20 K38 ; R20 := "<br>"
	171	[1854]	LOADK    	R21 K39 ; R21 := "<font color=\"#Content\">"
	172	[1854]	MOVE     	R22 R16 ; R22 := R16
	173	[1854]	LOADK    	R23 K40 ; R23 := "</font>"
	174	[1854]	CONCAT   	R17 R17 R23 ; R17 := R17 .. R18 .. R19 .. R20 .. R21 .. R22 .. R23
	175	[1855]	NEWTABLE 	R18 0 8 ; R18 := {}
	176	[1855]	SETTABLE 	R18 K41 K42 ; R18["Invasion"] := true
	177	[1855]	SETTABLE 	R18 K43 R6 ; R18["Score"] := R6
	178	[1855]	SETTABLE 	R18 K44 R13 ; R18["Delta"] := R13
	179	[1855]	GETGLOBAL	R19 K46 ; R19 := 0x6b3ec1d5
	180	[1855]	GETTABLE 	R20 R0 K17 ; R20 := R0["invasionAllyFaction"]
	181	[1855]	ADD      	R20 R20 K19 ; R20 := R20 + 1.000000
	182	[1855]	GETTABLE 	R19 R19 R20 ; R19 := R19[R20]
	183	[1855]	SETTABLE 	R18 K45 R19 ; R18["Icon"] := R19
	184	[1855]	GETGLOBAL	R19 K48 ; R19 := 0x74c5e454
	185	[1855]	SETTABLE 	R18 K47 R19 ; R18["Icon2"] := R19
	186	[1855]	SETTABLE 	R18 K49 K42 ; R18["Themed"] := true
	187	[1855]	SETTABLE 	R18 K50 R17 ; R18["Name"] := R17
	188	[1855]	SETTABLE 	R18 K51 R14 ; R18["CompletionFaction"] := R14
	189	[1856]	GETGLOBAL	R19 K52 ; R19 := mAffinityGrid
	190	[1856]	SELF     	R19 R19 K53 ; R20 := R19; R19 := R19[0xbad4316f]
	191	[1856]	MOVE     	R21 R18 ; R21 := R18
	192	[1856]	OP_LOADBOOL	R22 1 0 ; R22 := true
	193	[1856]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	194	[1858]	OP_LOADBOOL	R19 1 0 ; R19 := true
	195	[1858]	SETGLOBALHASH	R19 K54 ; mReputationScreenInitialized := R19
	196	[1859]	RETURN   	R0 1 ; return 

function #66 <?:1861,1940> (210 instructions, 840 bytes at 0000016092547160)
1 param, 36 slots, 5 upvalues, 0 locals, 61 constants, 1 function
	1	[1862]	GETGLOBAL	R1 K0 ; R1 := mReputationScreenInitialized
	2	[1862]	TEST     	R1 0 ; if not R1 then PC := 5
	3	[1862]	JMP      	5 ; PC := 5
	4	[1863]	RETURN   	R0 1 ; return 
	5	[1866]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[1866]	CALL     	R1 1 2 ; R1 := R1()
	7	[1866]	TEST     	R1 0 ; if not R1 then PC := 11
	8	[1866]	JMP      	11 ; PC := 11
	9	[1867]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[1867]	CALL     	R1 1 1 ; R1()
	11	[1870]	GETGLOBAL	R1 K1 ; R1 := 0x0032441c
	12	[1870]	GETTABLE 	R1 R1 K2 ; R1 := R1["gInvasionInfo"]
	13	[1870]	EQ       	1 R1 K3 ; if R1 == nil then PC := 17
	14	[1870]	JMP      	17 ; PC := 17
	15	[1871]	GETUPVAL 	R1 U2 ; R1 := U2
	16	[1871]	CALL     	R1 1 1 ; R1()
	17	[1874]	LEN      	R1 R0 ; R1 := # R0
	18	[1874]	EQ       	0 R1 K4 ; if R1 ~= 0.000000 then PC := 21
	19	[1874]	JMP      	21 ; PC := 21
	20	[1875]	RETURN   	R0 1 ; return 
	21	[1878]	LOADNIL  	R1 R2 ; R1 := R2 := nil
	22	[1880]	LOADK    	R3 K5 ; R3 := ""
	23	[1881]	NEWTABLE 	R4 0 0 ; R4 := {}
	24	[1883]	LOADK    	R5 := 1.000000
	25	[1883]	LEN      	R6 R0 ; R6 := # R0
	26	[1883]	LOADK    	R7 := 1.000000
	27	[1883]	FORPREP  	R5 34 ; R5 -= R7; PC := 34
	28	[1884]	GETTABLE 	R9 R0 R8 ; R9 := R0[R8]
	29	[1885]	GETGLOBAL	R10 K6 ; R10 := 0x33bdd652
	30	[1885]	GETTABLE 	R10 R10 K7 ; R10 := R10[0x23d5322f]
	31	[1885]	MOVE     	R11 R4 ; R11 := R4
	32	[1885]	MOVE     	R12 R9 ; R12 := R9
	33	[1885]	CALL     	R10 3 1 ; R10(R11,R12)
	34	[1883]	FORLOOP  	R5 28 ; R5 += R7; if R5 <= R6 then begin PC := 28; R8 := R5 end
	35	[1887]	GETGLOBAL	R10 K6 ; R10 := 0x33bdd652
	36	[1887]	GETTABLE 	R10 R10 K8 ; R10 := R10[0xf21b1d8e]
	37	[1887]	MOVE     	R11 R4 ; R11 := R4
	38	[1887]	CLOSURE  	R12 0 ; R12 := closure(Function #1)
	39	[1887]	CALL     	R10 3 1 ; R10(R11,R12)
	40	[1891]	LEN      	R10 R4 ; R10 := # R4
	41	[1892]	LOADK    	R11 := 1.000000
	42	[1892]	LEN      	R12 R4 ; R12 := # R4
	43	[1892]	LOADK    	R13 := 1.000000
	44	[1892]	FORPREP  	R11 60 ; R11 -= R13; PC := 60
	45	[1893]	GETTABLE 	R15 R4 R14 ; R15 := R4[R14]
	46	[1893]	GETTABLE 	R15 R15 K9 ; R15 := R15["mStanding"]
	47	[1893]	LT       	0 R15 K4 ; if R15 >= 0.000000 then PC := 60
	48	[1893]	JMP      	60 ; PC := 60
	49	[1895]	GETGLOBAL	R15 K6 ; R15 := 0x33bdd652
	50	[1895]	GETTABLE 	R15 R15 K7 ; R15 := R15[0x23d5322f]
	51	[1895]	MOVE     	R16 R4 ; R16 := R4
	52	[1895]	MOVE     	R17 R14 ; R17 := R14
	53	[1895]	GETTABLE 	R18 R4 R10 ; R18 := R4[R10]
	54	[1895]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	55	[1896]	GETGLOBAL	R15 K6 ; R15 := 0x33bdd652
	56	[1896]	GETTABLE 	R15 R15 K10 ; R15 := R15[0x9c1f3b5a]
	57	[1896]	MOVE     	R16 R4 ; R16 := R4
	58	[1896]	ADD      	R17 R10 K11 ; R17 := R10 + 1.000000
	59	[1896]	CALL     	R15 3 1 ; R15(R16,R17)
	60	[1892]	FORLOOP  	R11 45 ; R11 += R13; if R11 <= R12 then begin PC := 45; R14 := R11 end
	61	[1900]	LOADK    	R15 := 1.000000
	62	[1900]	GETGLOBAL	R16 K12 ; R16 := 0x5bced4c4
	63	[1900]	GETTABLE 	R16 R16 K13 ; R16 := R16[0xac1b386a]
	64	[1900]	LOADK    	R17 := 4.000000
	65	[1900]	LEN      	R18 R4 ; R18 := # R4
	66	[1900]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	67	[1900]	LOADK    	R17 := 1.000000
	68	[1900]	FORPREP  	R15 207 ; R15 -= R17; PC := 207
	69	[1901]	GETTABLE 	R19 R4 R18 ; R19 := R4[R18]
	70	[1901]	GETTABLE 	R19 R19 K14 ; R19 := R19["mTag"]
	71	[1902]	GETTABLE 	R20 R4 R18 ; R20 := R4[R18]
	72	[1902]	GETTABLE 	R20 R20 K9 ; R20 := R20["mStanding"]
	73	[1904]	GETGLOBAL	R21 K15 ; R21 := 0x0469f296
	74	[1904]	LOADK    	R22 K16 ; R22 := "CetusSyndicate"
	75	[1904]	CALL     	R21 2 2 ; R21 := R21(R22)
	76	[1905]	GETGLOBAL	R22 K15 ; R22 := 0x0469f296
	77	[1905]	LOADK    	R23 K17 ; R23 := "QuillSyndicate"
	78	[1905]	CALL     	R22 2 2 ; R22 := R22(R23)
	79	[1906]	GETGLOBAL	R23 K15 ; R23 := 0x0469f296
	80	[1906]	LOADK    	R24 K18 ; R24 := "VentKidsSyndicate"
	81	[1906]	CALL     	R23 2 2 ; R23 := R23(R24)
	82	[1907]	LOADK    	R24 K19 ; R24 := "/Lotus/Syndicates/"
	83	[1908]	EQ       	1 R19 R21 ; if R19 == R21 then PC := 87
	84	[1908]	JMP      	87 ; PC := 87
	85	[1908]	EQ       	0 R19 R22 ; if R19 ~= R22 then PC := 91
	86	[1908]	JMP      	91 ; PC := 91
	87	[1910]	MOVE     	R25 R24 ; R25 := R24
	88	[1910]	LOADK    	R26 K20 ; R26 := "Ostron/"
	89	[1910]	CONCAT   	R24 R25 R26 ; R24 := R25 .. R26
	90	[1910]	JMP      	101 ; PC := 101
	91	[1911]	EQ       	1 R19 R23 ; if R19 == R23 then PC := 98
	92	[1911]	JMP      	98 ; PC := 98
	93	[1911]	GETGLOBAL	R25 K15 ; R25 := 0x0469f296
	94	[1911]	LOADK    	R26 K21 ; R26 := "SolarisSyndicate"
	95	[1911]	CALL     	R25 2 2 ; R25 := R25(R26)
	96	[1911]	EQ       	0 R19 R25 ; if R19 ~= R25 then PC := 101
	97	[1911]	JMP      	101 ; PC := 101
	98	[1912]	MOVE     	R25 R24 ; R25 := R24
	99	[1912]	LOADK    	R26 K22 ; R26 := "Solaris/"
	100	[1912]	CONCAT   	R24 R25 R26 ; R24 := R25 .. R26
	101	[1914]	GETGLOBAL	R25 K23 ; R25 := 0xb009bbc6
	102	[1914]	GETGLOBAL	R26 K24 ; R26 := 0xa94df70b
	103	[1914]	SELF     	R26 R26 K25 ; R27 := R26; R26 := R26[0x07408254]
	104	[1914]	MOVE     	R28 R19 ; R28 := R19
	105	[1914]	CALL     	R26 3 0 ; R26,... := R26(R27,R28)
	106	[1914]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	107	[1914]	MOVE     	R1 R25 ; R1 := R25
	108	[1915]	GETGLOBAL	R25 K26 ; R25 := 0xae91e43b
	109	[1915]	SELF     	R25 R25 K27 ; R26 := R25; R25 := R25[0x42b04007]
	110	[1915]	SELF     	R27 R1 K28 ; R28 := R1; R27 := R1[0xdff9d2a7]
	111	[1915]	CALL     	R27 2 2 ; R27 := R27(R28)
	112	[1915]	SELF     	R27 R27 K29 ; R28 := R27; R27 := R27[0x6d604ba7]
	113	[1915]	CALL     	R27 2 2 ; R27 := R27(R28)
	114	[1915]	OP_LOADBOOL	R28 0 0 ; R28 := false
	115	[1915]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	116	[1915]	MOVE     	R3 R25 ; R3 := R25
	117	[1916]	SELF     	R25 R1 K30 ; R26 := R1; R25 := R1[0x056dcf06]
	118	[1916]	CALL     	R25 2 2 ; R25 := R25(R26)
	119	[1916]	MOVE     	R2 R25 ; R2 := R25
	120	[1918]	LOADK    	R25 := 0.000000
	121	[1919]	LOADK    	R26 := 0.000000
	122	[1920]	LOADK    	R27 := 0.000000
	123	[1921]	OP_LOADBOOL	R28 0 0 ; R28 := false
	124	[1922]	GETGLOBAL	R29 K31 ; R29 := _T
	125	[1922]	GETTABLE 	R29 R29 K32 ; R29 := R29["MissionEnded"]
	126	[1922]	TEST     	R29 1 ; if R29 then PC := 139
	127	[1922]	JMP      	139 ; PC := 139
	128	[1922]	GETUPVAL 	R29 U3 ; R29 := U3
	129	[1922]	GETTABLE 	R29 R29 K33 ; R29 := R29[0xcdc34211]
	130	[1922]	CALL     	R29 1 2 ; R29 := R29()
	131	[1922]	TEST     	R29 0 ; if not R29 then PC := 139
	132	[1922]	JMP      	139 ; PC := 139
	133	[1922]	GETGLOBAL	R29 K31 ; R29 := _T
	134	[1922]	GETTABLE 	R29 R29 K34 ; R29 := R29["eomScreenMode"]
	135	[1922]	GETGLOBAL	R30 K35 ; R30 := ScreenType
	136	[1922]	GETTABLE 	R30 R30 K36 ; R30 := R30["ACTUAL_EOM"]
	137	[1922]	EQ       	0 R29 R30 ; if R29 ~= R30 then PC := 148
	138	[1922]	JMP      	148 ; PC := 148
	139	[1924]	GETUPVAL 	R29 U3 ; R29 := U3
	140	[1924]	GETTABLE 	R29 R29 K37 ; R29 := R29[0x338a8686]
	141	[1924]	MOVE     	R30 R1 ; R30 := R1
	142	[1924]	CALL     	R29 2 5 ; R29,R30,R31,R32 := R29(R30)
	143	[1924]	MOVE     	R28 R32 ; R28 := R32
	144	[1924]	MOVE     	R27 R31 ; R27 := R31
	145	[1924]	MOVE     	R26 R30 ; R26 := R30
	146	[1924]	MOVE     	R25 R29 ; R25 := R29
	147	[1924]	JMP      	159 ; PC := 159
	148	[1926]	GETUPVAL 	R29 U3 ; R29 := U3
	149	[1926]	GETTABLE 	R29 R29 K37 ; R29 := R29[0x338a8686]
	150	[1926]	MOVE     	R30 R1 ; R30 := R1
	151	[1926]	MOVE     	R31 R20 ; R31 := R20
	152	[1926]	LOADNIL  	R32 R33 ; R32 := R33 := nil
	153	[1926]	OP_LOADBOOL	R34 1 0 ; R34 := true
	154	[1926]	CALL     	R29 6 5 ; R29,R30,R31,R32 := R29(R30,R31,R32,R33,R34)
	155	[1926]	MOVE     	R28 R32 ; R28 := R32
	156	[1926]	MOVE     	R27 R31 ; R27 := R31
	157	[1926]	MOVE     	R26 R30 ; R26 := R30
	158	[1926]	MOVE     	R25 R29 ; R25 := R29
	159	[1929]	GETGLOBAL	R29 K38 ; R29 := 0x64fb1586
	160	[1929]	SELF     	R30 R1 K39 ; R31 := R1; R30 := R1[0x6bd7c146]
	161	[1929]	CALL     	R30 2 0 ; R30,... := R30(R31)
	162	[1929]	CALL     	R29 0 2 ; R29 := R29(R30,...)
	163	[1930]	EQ       	1 R29 K5 ; if R29 == "" then PC := 174
	164	[1930]	JMP      	174 ; PC := 174
	165	[1931]	GETGLOBAL	R30 K26 ; R30 := 0xae91e43b
	166	[1931]	SELF     	R30 R30 K27 ; R31 := R30; R30 := R30[0x42b04007]
	167	[1931]	LOADK    	R32 K40 ; R32 := "<"
	168	[1931]	MOVE     	R33 R29 ; R33 := R29
	169	[1931]	LOADK    	R34 K41 ; R34 := ">"
	170	[1931]	CONCAT   	R32 R32 R34 ; R32 := R32 .. R33 .. R34
	171	[1931]	OP_LOADBOOL	R33 1 0 ; R33 := true
	172	[1931]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	173	[1931]	MOVE     	R29 R30 ; R29 := R30
	174	[1934]	GETUPVAL 	R30 U3 ; R30 := U3
	175	[1934]	GETTABLE 	R30 R30 K42 ; R30 := R30[0xe6b719a2]
	176	[1934]	CALL     	R30 1 2 ; R30 := R30()
	177	[1934]	SELF     	R31 R2 K43 ; R32 := R2; R31 := R2[0xed4e0128]
	178	[1934]	CALL     	R31 2 2 ; R31 := R31(R32)
	179	[1934]	GETTABLE 	R30 R30 R31 ; R30 := R30[R31]
	180	[1935]	NEWTABLE 	R31 0 12 ; R31 := {}
	181	[1935]	SETTABLE 	R31 K44 R1 ; R31["Type"] := R1
	182	[1935]	SETTABLE 	R31 K45 K46 ; R31["Syndicate"] := true
	183	[1935]	SETTABLE 	R31 K47 R25 ; R31["Level"] := R25
	184	[1935]	SETTABLE 	R31 K48 R26 ; R31["Standing"] := R26
	185	[1935]	SETTABLE 	R31 K49 R20 ; R31["NewStanding"] := R20
	186	[1935]	SETTABLE 	R31 K50 R27 ; R31["MaxStanding"] := R27
	187	[1935]	SETTABLE 	R31 K51 R2 ; R31["Icon"] := R2
	188	[1935]	SETTABLE 	R31 K52 K46 ; R31["Themed"] := true
	189	[1935]	SETTABLE 	R31 K53 R3 ; R31["Name"] := R3
	190	[1935]	GETGLOBAL	R32 K38 ; R32 := 0x64fb1586
	191	[1935]	SELF     	R33 R1 K55 ; R34 := R1; R33 := R1[0x5660f6f0]
	192	[1935]	CALL     	R33 2 2 ; R33 := R33(R34)
	193	[1935]	SELF     	R33 R33 K56 ; R34 := R33; R33 := R33[0xa5d5c8f6]
	194	[1935]	CALL     	R33 2 0 ; R33,... := R33(R34)
	195	[1935]	CALL     	R32 0 2 ; R32 := R32(R33,...)
	196	[1935]	SETTABLE 	R31 K54 R32 ; R31["IconColor"] := R32
	197	[1935]	GETUPVAL 	R32 U4 ; R32 := U4
	198	[1935]	MOVE     	R33 R1 ; R33 := R1
	199	[1935]	CALL     	R32 2 2 ; R32 := R32(R33)
	200	[1935]	SETTABLE 	R31 K57 R32 ; R31["BackgroundColor"] := R32
	201	[1935]	SETTABLE 	R31 K58 R30 ; R31["BackgroundIconPos"] := R30
	202	[1936]	GETGLOBAL	R32 K59 ; R32 := mAffinityGrid
	203	[1936]	SELF     	R32 R32 K60 ; R33 := R32; R32 := R32[0xbad4316f]
	204	[1936]	MOVE     	R34 R31 ; R34 := R31
	205	[1936]	OP_LOADBOOL	R35 1 0 ; R35 := true
	206	[1936]	CALL     	R32 4 1 ; R32(R33,R34,R35)
	207	[1900]	FORLOOP  	R15 69 ; R15 += R17; if R15 <= R16 then begin PC := 69; R18 := R15 end
	208	[1939]	OP_LOADBOOL	R32 1 0 ; R32 := true
	209	[1939]	SETGLOBALHASH	R32 K0 ; mReputationScreenInitialized := R32
	210	[1940]	RETURN   	R0 1 ; return 

function #67 <?:1943,1951> (10 instructions, 40 bytes at 0000016092547EF0)
2 params, 5 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[1945]	TEST     	R1 0 ; if not R1 then PC := 6
	2	[1945]	JMP      	6 ; PC := 6
	3	[1946]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[1946]	CALL     	R2 1 1 ; R2()
	5	[1946]	JMP      	10 ; PC := 10
	6	[1948]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[1948]	MOVE     	R3 R0 ; R3 := R0
	8	[1948]	OP_LOADBOOL	R4 0 0 ; R4 := false
	9	[1948]	CALL     	R2 3 1 ; R2(R3,R4)
	10	[1951]	RETURN   	R0 1 ; return 

function #68 <?:1954,1960> (15 instructions, 60 bytes at 0000016092548000)
2 params, 6 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1955]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[1955]	MOVE     	R3 R1 ; R3 := R1
	3	[1955]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[1955]	TEST     	R2 1 ; if R2 then PC := 13
	5	[1955]	JMP      	13 ; PC := 13
	6	[1956]	GETGLOBAL	R2 K1 ; R2 := 0xa94df70b
	7	[1956]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x8427bf69]
	8	[1956]	MOVE     	R4 R0 ; R4 := R0
	9	[1956]	MOVE     	R5 R1 ; R5 := R1
	10	[1956]	TAILCALL 	R2 4 0 ; R2,... := R2(R3,R4,R5)
	11	[1956]	RETURN   	R2 0 ; return R2,... 
	12	[1956]	JMP      	15 ; PC := 15
	13	[1958]	LOADK    	R2 := 0.000000
	14	[1958]	RETURN   	R2 2 ; return R2 
	15	[1960]	RETURN   	R0 1 ; return 

function #69 <?:1962,1990> (59 instructions, 236 bytes at 0000016092548170)
3 params, 15 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[1963]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[1963]	GETTABLE 	R4 R0 K1 ; R4 := R0["mItemType"]
	3	[1963]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[1963]	TEST     	R3 1 ; if R3 then PC := 12
	5	[1963]	JMP      	12 ; PC := 12
	6	[1963]	GETTABLE 	R3 R0 K1 ; R3 := R0["mItemType"]
	7	[1963]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0xf2deaf69]
	8	[1963]	GETGLOBAL	R5 K3 ; R5 := gLotusArtifactUpgradeType
	9	[1963]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	10	[1963]	TEST     	R3 1 ; if R3 then PC := 13
	11	[1963]	JMP      	13 ; PC := 13
	12	[1964]	RETURN   	R0 1 ; return 
	13	[1967]	EQ       	0 R1 K4 ; if R1 ~= nil then PC := 42
	14	[1967]	JMP      	42 ; PC := 42
	15	[1968]	GETGLOBAL	R3 K5 ; R3 := 0xce225efa
	16	[1968]	LOADK    	R4 := 0.000000
	17	[1968]	CALL     	R3 2 1 ; R3(R4)
	18	[1969]	GETGLOBAL	R3 K6 ; R3 := 0xc8802016
	19	[1969]	GETGLOBAL	R4 K7 ; R4 := mMods
	20	[1969]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	21	[1969]	JMP      	40 ; PC := 40
	22	[1970]	GETTABLE 	R8 R7 K8 ; R8 := R7["upg"]
	23	[1971]	GETTABLE 	R9 R0 K1 ; R9 := R0["mItemType"]
	24	[1971]	GETTABLE 	R10 R8 K1 ; R10 := R8["mItemType"]
	25	[1971]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 40
	26	[1971]	JMP      	40 ; PC := 40
	27	[1971]	GETTABLE 	R9 R7 K9 ; R9 := R7["FromEnemyCache"]
	28	[1971]	EQ       	0 R9 K4 ; if R9 ~= nil then PC := 40
	29	[1971]	JMP      	40 ; PC := 40
	30	[1972]	GETTABLE 	R9 R0 K10 ; R9 := R0["mUpgradeFingerprint"]
	31	[1973]	GETTABLE 	R10 R8 K10 ; R10 := R8["mUpgradeFingerprint"]
	32	[1974]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 40
	33	[1974]	JMP      	40 ; PC := 40
	34	[1975]	GETTABLE 	R11 R7 K8 ; R11 := R7["upg"]
	35	[1975]	GETTABLE 	R12 R8 K11 ; R12 := R8["mItemCount"]
	36	[1975]	GETTABLE 	R13 R0 K11 ; R13 := R0["mItemCount"]
	37	[1975]	ADD      	R12 R12 R13 ; R12 := R12 + R13
	38	[1975]	SETTABLE 	R11 K11 R12 ; R11["mItemCount"] := R12
	39	[1976]	RETURN   	R0 1 ; return 
	40	[1969]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 22; R5 := R6 end
	41	[1978]	JMP      	22 ; PC := 22
	42	[1984]	GETGLOBAL	R11 K12 ; R11 := 0x6c97a788
	43	[1984]	GETTABLE 	R11 R11 K13 ; R11 := R11[0x1aba4d9e]
	44	[1984]	CALL     	R11 1 2 ; R11 := R11()
	45	[1985]	GETTABLE 	R12 R0 K1 ; R12 := R0["mItemType"]
	46	[1985]	SETTABLE 	R11 K1 R12 ; R11["mItemType"] := R12
	47	[1986]	GETTABLE 	R12 R0 K10 ; R12 := R0["mUpgradeFingerprint"]
	48	[1986]	SETTABLE 	R11 K10 R12 ; R11["mUpgradeFingerprint"] := R12
	49	[1987]	GETTABLE 	R12 R0 K11 ; R12 := R0["mItemCount"]
	50	[1987]	SETTABLE 	R11 K11 R12 ; R11["mItemCount"] := R12
	51	[1989]	GETGLOBAL	R12 K14 ; R12 := 0x33bdd652
	52	[1989]	GETTABLE 	R12 R12 K15 ; R12 := R12[0x23d5322f]
	53	[1989]	GETGLOBAL	R13 K7 ; R13 := mMods
	54	[1989]	NEWTABLE 	R14 0 3 ; R14 := {}
	55	[1989]	SETTABLE 	R14 K8 R11 ; R14["upg"] := R11
	56	[1989]	SETTABLE 	R14 K9 R1 ; R14["FromEnemyCache"] := R1
	57	[1989]	SETTABLE 	R14 K16 R2 ; R14["SortPriority"] := R2
	58	[1989]	CALL     	R12 3 1 ; R12(R13,R14)
	59	[1990]	RETURN   	R0 1 ; return 

function #70 <?:1992,1999> (31 instructions, 124 bytes at 00000160925485D0)
1 param, 9 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1993]	LOADK    	R1 := 0.000000
	2	[1994]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	3	[1994]	MOVE     	R3 R0 ; R3 := R0
	4	[1994]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[1994]	TEST     	R2 1 ; if R2 then PC := 31
	6	[1994]	JMP      	31 ; PC := 31
	7	[1994]	LT       	0 R1 K1 ; if R1 >= 1.000000 then PC := 31
	8	[1994]	JMP      	31 ; PC := 31
	9	[1995]	GETGLOBAL	R2 K2 ; R2 := 0x42dcc9f5
	10	[1995]	GETGLOBAL	R3 K3 ; R3 := 0x67652851
	11	[1995]	CALL     	R3 1 2 ; R3 := R3()
	12	[1995]	MUL      	R3 R3 K4 ; R3 := R3 * 0.750000
	13	[1995]	ADD      	R3 R1 R3 ; R3 := R1 + R3
	14	[1995]	LOADK    	R4 := 0.000000
	15	[1995]	LOADK    	R5 := 1.000000
	16	[1995]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	17	[1995]	MOVE     	R1 R2 ; R1 := R2
	18	[1996]	SELF     	R2 R0 K5 ; R3 := R0; R2 := R0[0xacea6d71]
	19	[1996]	GETGLOBAL	R4 K6 ; R4 := 0x9bafffe3
	20	[1996]	LOADK    	R5 := 65.000000
	21	[1996]	LOADK    	R6 := 50.000000
	22	[1996]	GETGLOBAL	R7 K7 ; R7 := 0xa533083a
	23	[1996]	MOVE     	R8 R1 ; R8 := R1
	24	[1996]	CALL     	R7 2 0 ; R7,... := R7(R8)
	25	[1996]	CALL     	R4 0 0 ; R4,... := R4(R5,...)
	26	[1996]	CALL     	R2 0 1 ; R2(R3,...)
	27	[1997]	GETGLOBAL	R2 K8 ; R2 := 0xcbd666e1
	28	[1997]	LOADK    	R3 := 0.000000
	29	[1997]	CALL     	R2 2 1 ; R2(R3)
	30	[1997]	JMP      	2 ; PC := 2
	31	[1999]	RETURN   	R0 1 ; return 

function #71 <?:2001,2045> (135 instructions, 540 bytes at 0000016092585250)
1 param, 25 slots, 0 upvalues, 0 locals, 38 constants, 0 functions
	1	[2005]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xadbdc520]
	2	[2005]	CALL     	R1 2 2 ; R1 := R1(R2)
	3	[2006]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[2006]	MOVE     	R3 R1 ; R3 := R1
	5	[2006]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[2006]	TEST     	R2 0 ; if not R2 then PC := 9
	7	[2006]	JMP      	9 ; PC := 9
	8	[2007]	RETURN   	R0 1 ; return 
	9	[2010]	NEWTABLE 	R2 3 0 ; R2 := {}
	10	[2010]	GETGLOBAL	R3 K2 ; R3 := 0x0469f296
	11	[2010]	LOADK    	R4 K3 ; R4 := "Tenno"
	12	[2010]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[2010]	GETGLOBAL	R4 K2 ; R4 := 0x0469f296
	14	[2010]	LOADK    	R5 K4 ; R5 := "TennoA"
	15	[2010]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[2010]	GETGLOBAL	R5 K2 ; R5 := 0x0469f296
	17	[2010]	LOADK    	R6 K5 ; R6 := "TennoB"
	18	[2010]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[2010]	GETGLOBAL	R6 K2 ; R6 := 0x0469f296
	20	[2010]	LOADK    	R7 K6 ; R7 := "TennoC"
	21	[2010]	CALL     	R6 2 0 ; R6,... := R6(R7)
	22	[2010]	SETLIST  	R2 0 1 ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 0
	23	[2011]	NEWTABLE 	R3 0 0 ; R3 := {}
	24	[2012]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	25	[2012]	GETGLOBAL	R5 K7 ; R5 := 0x25d99d89
	26	[2012]	CALL     	R4 2 2 ; R4 := R4(R5)
	27	[2012]	TEST     	R4 1 ; if R4 then PC := 33
	28	[2012]	JMP      	33 ; PC := 33
	29	[2013]	GETGLOBAL	R4 K7 ; R4 := 0x25d99d89
	30	[2013]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xb4b6647c]
	31	[2013]	CALL     	R4 2 2 ; R4 := R4(R5)
	32	[2013]	MOVE     	R3 R4 ; R3 := R4
	33	[2015]	GETGLOBAL	R4 K9 ; R4 := _T
	34	[2015]	GETTABLE 	R4 R4 K10 ; R4 := R4["TestPlayerCount"]
	35	[2015]	EQ       	1 R4 K11 ; if R4 == nil then PC := 52
	36	[2015]	JMP      	52 ; PC := 52
	37	[2015]	LEN      	R4 R3 ; R4 := # R3
	38	[2015]	LT       	0 K12 R4 ; if 0.000000 >= R4 then PC := 52
	39	[2015]	JMP      	52 ; PC := 52
	40	[2016]	LEN      	R4 R3 ; R4 := # R3
	41	[2016]	ADD      	R4 R4 K13 ; R4 := R4 + 1.000000
	42	[2016]	GETGLOBAL	R5 K9 ; R5 := _T
	43	[2016]	GETTABLE 	R5 R5 K10 ; R5 := R5["TestPlayerCount"]
	44	[2016]	LOADK    	R6 := 1.000000
	45	[2016]	FORPREP  	R4 51 ; R4 -= R6; PC := 51
	46	[2017]	GETGLOBAL	R8 K14 ; R8 := 0x33bdd652
	47	[2017]	GETTABLE 	R8 R8 K15 ; R8 := R8[0x23d5322f]
	48	[2017]	MOVE     	R9 R3 ; R9 := R3
	49	[2017]	GETTABLE 	R10 R3 K13 ; R10 := R3[1.000000]
	50	[2017]	CALL     	R8 3 1 ; R8(R9,R10)
	51	[2016]	FORLOOP  	R4 46 ; R4 += R6; if R4 <= R5 then begin PC := 46; R7 := R4 end
	52	[2021]	LOADNIL  	R8 R8 ; R8 := nil
	53	[2022]	GETGLOBAL	R9 K16 ; R9 := 0xc8802016
	54	[2022]	MOVE     	R10 R2 ; R10 := R2
	55	[2022]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	56	[2022]	JMP      	114 ; PC := 114
	57	[2023]	LEN      	R14 R3 ; R14 := # R3
	58	[2023]	LE       	0 R12 R14 ; if R12 > R14 then PC := 114
	59	[2023]	JMP      	114 ; PC := 114
	60	[2024]	SELF     	R14 R1 K17 ; R15 := R1; R14 := R1[0x05909209]
	61	[2024]	GETGLOBAL	R16 K18 ; R16 := 0x88efc25e
	62	[2024]	LOADK    	R17 K19 ; R17 := "/Lotus/Types/Player/TennoDioramaAvatar"
	63	[2024]	CALL     	R16 2 2 ; R16 := R16(R17)
	64	[2024]	GETGLOBAL	R17 K20 ; R17 := ZERO_VECTOR
	65	[2024]	GETGLOBAL	R18 K21 ; R18 := ZERO_ROTATION
	66	[2024]	CALL     	R14 5 2 ; R14 := R14(R15,R16,R17,R18)
	67	[2024]	MOVE     	R8 R14 ; R8 := R14
	68	[2025]	SELF     	R14 R8 K22 ; R15 := R8; R14 := R8[0xde321e6f]
	69	[2025]	CALL     	R14 2 2 ; R14 := R14(R15)
	70	[2026]	GETTABLE 	R15 R3 R12 ; R15 := R3[R12]
	71	[2027]	SELF     	R16 R14 K23 ; R17 := R14; R16 := R14[0x9c596606]
	72	[2027]	MOVE     	R18 R15 ; R18 := R15
	73	[2027]	LOADK    	R19 := 0.000000
	74	[2027]	LOADK    	R20 := 1.000000
	75	[2027]	OP_LOADBOOL	R21 0 0 ; R21 := false
	76	[2027]	CALL     	R16 6 1 ; R16(R17,R18,R19,R20,R21)
	77	[2028]	SELF     	R16 R14 K23 ; R17 := R14; R16 := R14[0x9c596606]
	78	[2028]	MOVE     	R18 R15 ; R18 := R15
	79	[2028]	LOADK    	R19 := 0.000000
	80	[2028]	LOADK    	R20 := 2.000000
	81	[2028]	OP_LOADBOOL	R21 0 0 ; R21 := false
	82	[2028]	CALL     	R16 6 1 ; R16(R17,R18,R19,R20,R21)
	83	[2029]	SELF     	R16 R14 K23 ; R17 := R14; R16 := R14[0x9c596606]
	84	[2029]	MOVE     	R18 R15 ; R18 := R15
	85	[2029]	LOADK    	R19 := 0.000000
	86	[2029]	LOADK    	R20 := 3.000000
	87	[2029]	OP_LOADBOOL	R21 0 0 ; R21 := false
	88	[2029]	CALL     	R16 6 1 ; R16(R17,R18,R19,R20,R21)
	89	[2030]	SELF     	R16 R14 K23 ; R17 := R14; R16 := R14[0x9c596606]
	90	[2030]	MOVE     	R18 R15 ; R18 := R15
	91	[2030]	LOADK    	R19 := 0.000000
	92	[2030]	LOADK    	R20 := 0.000000
	93	[2030]	OP_LOADBOOL	R21 0 0 ; R21 := false
	94	[2030]	CALL     	R16 6 1 ; R16(R17,R18,R19,R20,R21)
	95	[2032]	SELF     	R16 R8 K25 ; R17 := R8; R16 := R8[0x26d544fc]
	96	[2032]	MOVE     	R18 R13 ; R18 := R13
	97	[2032]	CALL     	R16 3 1 ; R16(R17,R18)
	98	[2034]	SELF     	R16 R14 K26 ; R17 := R14; R16 := R14[0x4703255b]
	99	[2034]	LOADK    	R18 := 0.000000
	100	[2034]	LOADK    	R19 := 2.000000
	101	[2034]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	102	[2036]	SELF     	R16 R8 K22 ; R17 := R8; R16 := R8[0xde321e6f]
	103	[2036]	CALL     	R16 2 2 ; R16 := R16(R17)
	104	[2036]	SELF     	R16 R16 K28 ; R17 := R16; R16 := R16[0x2676deee]
	105	[2036]	CALL     	R16 2 2 ; R16 := R16(R17)
	106	[2037]	GETGLOBAL	R17 K1 ; R17 := 0x7b998233
	107	[2037]	MOVE     	R18 R16 ; R18 := R16
	108	[2037]	CALL     	R17 2 2 ; R17 := R17(R18)
	109	[2037]	TEST     	R17 1 ; if R17 then PC := 114
	110	[2037]	JMP      	114 ; PC := 114
	111	[2038]	SELF     	R17 R1 K29 ; R18 := R1; R17 := R1[0x59c96e77]
	112	[2038]	MOVE     	R19 R16 ; R19 := R16
	113	[2038]	CALL     	R17 3 1 ; R17(R18,R19)
	114	[2022]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 57; R11 := R12 end
	115	[2040]	JMP      	57 ; PC := 57
	116	[2043]	SELF     	R17 R1 K17 ; R18 := R1; R17 := R1[0x05909209]
	117	[2043]	GETGLOBAL	R19 K30 ; R19 := 0x6ae3251d
	118	[2043]	GETGLOBAL	R20 K31 ; R20 := 0xa421af95
	119	[2043]	LOADK    	R21 K32 ; R21 := 0.180000
	120	[2043]	LOADK    	R22 K33 ; R22 := 1.100000
	121	[2043]	LOADK    	R23 K34 ; R23 := 2.900000
	122	[2043]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	123	[2043]	GETGLOBAL	R21 K35 ; R21 := 0x00046924
	124	[2043]	LOADK    	R22 := 175.000000
	125	[2043]	LOADK    	R23 := -1.000000
	126	[2043]	LOADK    	R24 := 0.000000
	127	[2043]	CALL     	R21 4 0 ; R21,... := R21(R22,R23,R24)
	128	[2043]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	129	[2044]	SELF     	R18 R17 K36 ; R19 := R17; R18 := R17[0xd5f7912b]
	130	[2044]	GETGLOBAL	R20 K2 ; R20 := 0x0469f296
	131	[2044]	LOADK    	R21 K37 ; R21 := "ZoomCam"
	132	[2044]	CALL     	R20 2 2 ; R20 := R20(R21)
	133	[2044]	OP_LOADBOOL	R21 0 0 ; R21 := false
	134	[2044]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	135	[2045]	RETURN   	R0 1 ; return 

function #72 <?:2047,2066> (64 instructions, 256 bytes at 00000160925859E0)
1 param, 5 slots, 3 upvalues, 0 locals, 16 constants, 0 functions
	1	[2048]	GETGLOBAL	R1 K0 ; R1 := mWaitingForReturnToShip
	2	[2048]	TEST     	R1 1 ; if R1 then PC := 9
	3	[2048]	JMP      	9 ; PC := 9
	4	[2048]	GETUPVAL 	R1 U0 ; R1 := U0
	5	[2048]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xcdc34211]
	6	[2048]	CALL     	R1 1 2 ; R1 := R1()
	7	[2048]	TEST     	R1 0 ; if not R1 then PC := 12
	8	[2048]	JMP      	12 ; PC := 12
	9	[2048]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[2048]	TEST     	R1 0 ; if not R1 then PC := 64
	11	[2048]	JMP      	64 ; PC := 64
	12	[2049]	GETUPVAL 	R1 U2 ; R1 := U2
	13	[2049]	MOVE     	R2 R0 ; R2 := R0
	14	[2049]	CALL     	R1 2 1 ; R1(R2)
	15	[2050]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	16	[2050]	GETGLOBAL	R2 K3 ; R2 := mDioramaLoader
	17	[2050]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[2050]	TEST     	R1 1 ; if R1 then PC := 46
	19	[2050]	JMP      	46 ; PC := 46
	20	[2050]	GETGLOBAL	R1 K3 ; R1 := mDioramaLoader
	21	[2050]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xcfd9cd76]
	22	[2050]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[2050]	TEST     	R1 0 ; if not R1 then PC := 46
	24	[2050]	JMP      	46 ; PC := 46
	25	[2050]	GETGLOBAL	R1 K3 ; R1 := mDioramaLoader
	26	[2050]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x842bdef9]
	27	[2050]	CALL     	R1 2 2 ; R1 := R1(R2)
	28	[2050]	TEST     	R1 0 ; if not R1 then PC := 46
	29	[2050]	JMP      	46 ; PC := 46
	30	[2051]	GETGLOBAL	R1 K6 ; R1 := mBG
	31	[2051]	EQ       	0 R1 K7 ; if R1 ~= 1.000000 then PC := 39
	32	[2051]	JMP      	39 ; PC := 39
	33	[2052]	GETGLOBAL	R1 K3 ; R1 := mDioramaLoader
	34	[2052]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xa4497305]
	35	[2052]	CALL     	R1 2 1 ; R1(R2)
	36	[2053]	OP_LOADBOOL	R1 0 0 ; R1 := false
	37	[2053]	SETGLOBALHASH	R1 K9 ; mInputBlocked := R1
	38	[2053]	JMP      	46 ; PC := 46
	39	[2055]	LOADK    	R1 := 1.000000
	40	[2055]	SETGLOBALHASH	R1 K6 ; mBG := R1
	41	[2056]	GETGLOBAL	R1 K10 ; R1 := 0xae91e43b
	42	[2056]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x58bec6d6]
	43	[2056]	GETGLOBAL	R3 K6 ; R3 := mBG
	44	[2056]	CALL     	R1 3 1 ; R1(R2,R3)
	45	[2057]	RETURN   	R0 1 ; return 
	46	[2061]	GETGLOBAL	R1 K12 ; R1 := mPulseBG
	47	[2061]	TEST     	R1 1 ; if R1 then PC := 64
	48	[2061]	JMP      	64 ; PC := 64
	49	[2061]	GETGLOBAL	R1 K6 ; R1 := mBG
	50	[2061]	LT       	0 K13 R1 ; if 0.000000 >= R1 then PC := 64
	51	[2061]	JMP      	64 ; PC := 64
	52	[2062]	GETGLOBAL	R1 K14 ; R1 := 0x5bced4c4
	53	[2062]	GETTABLE 	R1 R1 K15 ; R1 := R1[0xb62ecfe0]
	54	[2062]	LOADK    	R2 := 0.000000
	55	[2062]	GETGLOBAL	R3 K6 ; R3 := mBG
	56	[2062]	MUL      	R4 R0 K7 ; R4 := R0 * 1.000000
	57	[2062]	SUB      	R3 R3 R4 ; R3 := R3 - R4
	58	[2062]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	59	[2062]	SETGLOBALHASH	R1 K6 ; mBG := R1
	60	[2063]	GETGLOBAL	R1 K10 ; R1 := 0xae91e43b
	61	[2063]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x58bec6d6]
	62	[2063]	GETGLOBAL	R3 K6 ; R3 := mBG
	63	[2063]	CALL     	R1 3 1 ; R1(R2,R3)
	64	[2066]	RETURN   	R0 1 ; return 

function #73 <?:2068,2077> (28 instructions, 112 bytes at 0000016092585DA0)
0 params, 6 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[2069]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2069]	CALL     	R0 1 2 ; R0 := R0()
	3	[2070]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[2070]	CALL     	R1 1 2 ; R1 := R1()
	5	[2070]	GETTABLE 	R1 R1 K0 ; R1 := R1["missionType"]
	6	[2071]	EQ       	0 R1 K2 ; if R1 ~= 8.000000 then PC := 11
	7	[2071]	JMP      	11 ; PC := 11
	8	[2072]	OP_LOADBOOL	R2 1 0 ; R2 := true
	9	[2072]	RETURN   	R2 2 ; return R2 
	10	[2072]	JMP      	26 ; PC := 26
	11	[2073]	EQ       	0 R1 K3 ; if R1 ~= 31.000000 then PC := 26
	12	[2073]	JMP      	26 ; PC := 26
	13	[2073]	GETGLOBAL	R2 K4 ; R2 := 0x7f5022cf
	14	[2073]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xa5c556b9]
	15	[2073]	GETGLOBAL	R3 K6 ; R3 := 0x64fb1586
	16	[2073]	GETTABLE 	R4 R0 K7 ; R4 := R0["levelOverride"]
	17	[2073]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xed4e0128]
	18	[2073]	CALL     	R4 2 0 ; R4,... := R4(R5)
	19	[2073]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	20	[2073]	LOADK    	R4 K9 ; R4 := "Defense"
	21	[2073]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	22	[2073]	TEST     	R2 0 ; if not R2 then PC := 26
	23	[2073]	JMP      	26 ; PC := 26
	24	[2074]	OP_LOADBOOL	R2 1 0 ; R2 := true
	25	[2074]	RETURN   	R2 2 ; return R2 
	26	[2076]	OP_LOADBOOL	R2 0 0 ; R2 := false
	27	[2076]	RETURN   	R2 2 ; return R2 
	28	[2077]	RETURN   	R0 1 ; return 

function #74 <?:2079,2081> (9 instructions, 36 bytes at 0000016092585FE0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2080]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2080]	CALL     	R0 1 2 ; R0 := R0()
	3	[2080]	GETTABLE 	R0 R0 K0 ; R0 := R0["missionType"]
	4	[2080]	EQ       	1 R0 K2 ; if R0 == 13.000000 then PC := 7
	5	[2080]	JMP      	7 ; PC := 7
	6	[2080]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 7
	7	[2080]	OP_LOADBOOL	R0 1 0 ; R0 := true
	8	[2080]	RETURN   	R0 2 ; return R0 
	9	[2081]	RETURN   	R0 1 ; return 

function #75 <?:2083,2102> (53 instructions, 212 bytes at 00000160925860F0)
0 params, 12 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[2084]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2084]	CALL     	R0 1 2 ; R0 := R0()
	3	[2085]	OP_LOADBOOL	R1 0 0 ; R1 := false
	4	[2087]	GETGLOBAL	R2 K0 ; R2 := 0x76ea806b
	5	[2087]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x3f3ae64c]
	6	[2087]	LOADK    	R4 := 0.000000
	7	[2087]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[2088]	SELF     	R3 R2 K2 ; R4 := R2; R3 := R2[0x80563238]
	9	[2088]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[2089]	SELF     	R4 R3 K3 ; R5 := R3; R4 := R3[0x69727e0b]
	11	[2089]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[2091]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	13	[2091]	MOVE     	R6 R4 ; R6 := R4
	14	[2091]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[2091]	TEST     	R5 1 ; if R5 then PC := 40
	16	[2091]	JMP      	40 ; PC := 40
	17	[2092]	GETGLOBAL	R5 K5 ; R5 := 0xc8802016
	18	[2092]	GETTABLE 	R6 R4 K6 ; R6 := R4["mGoals"]
	19	[2092]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	20	[2092]	JMP      	38 ; PC := 38
	21	[2093]	GETTABLE 	R10 R9 K7 ; R10 := R9["mRoaming"]
	22	[2093]	TEST     	R10 0 ; if not R10 then PC := 27
	23	[2093]	JMP      	27 ; PC := 27
	24	[2094]	OP_LOADBOOL	R1 1 0 ; R1 := true
	25	[2095]	JMP      	40 ; PC := 40
	26	[2095]	JMP      	38 ; PC := 38
	27	[2096]	GETTABLE 	R10 R9 K8 ; R10 := R9["mOptionalInMission"]
	28	[2096]	TEST     	R10 0 ; if not R10 then PC := 38
	29	[2096]	JMP      	38 ; PC := 38
	30	[2096]	GETGLOBAL	R10 K9 ; R10 := 0x0469f296
	31	[2096]	GETTABLE 	R11 R9 K10 ; R11 := R9["mNode"]
	32	[2096]	CALL     	R10 2 2 ; R10 := R10(R11)
	33	[2096]	GETTABLE 	R11 R0 K11 ; R11 := R0["location"]
	34	[2096]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 38
	35	[2096]	JMP      	38 ; PC := 38
	36	[2097]	OP_LOADBOOL	R10 1 0 ; R10 := true
	37	[2097]	RETURN   	R10 2 ; return R10 
	38	[2092]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 21; R7 := R8 end
	39	[2098]	JMP      	21 ; PC := 21
	40	[2101]	GETGLOBAL	R10 K4 ; R10 := 0x7b998233
	41	[2101]	GETTABLE 	R11 R0 K12 ; R11 := R0["goalId"]
	42	[2101]	CALL     	R10 2 2 ; R10 := R10(R11)
	43	[2101]	TEST     	R10 1 ; if R10 then PC := 48
	44	[2101]	JMP      	48 ; PC := 48
	45	[2101]	GETTABLE 	R10 R0 K12 ; R10 := R0["goalId"]
	46	[2101]	EQ       	0 R10 K13 ; if R10 ~= "" then PC := 51
	47	[2101]	JMP      	51 ; PC := 51
	48	[2101]	MOVE     	R10 R1 ; R10 := R1
	49	[2101]	JMP      	52 ; PC := 52
	50	[2101]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 51
	51	[2101]	OP_LOADBOOL	R10 1 0 ; R10 := true
	52	[2101]	RETURN   	R10 2 ; return R10 
	53	[2102]	RETURN   	R0 1 ; return 

function #76 <?:2104,2106> (9 instructions, 36 bytes at 0000016092586490)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2105]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2105]	CALL     	R0 1 2 ; R0 := R0()
	3	[2105]	GETTABLE 	R0 R0 K0 ; R0 := R0["missionType"]
	4	[2105]	EQ       	1 R0 K2 ; if R0 == 2.000000 then PC := 7
	5	[2105]	JMP      	7 ; PC := 7
	6	[2105]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 7
	7	[2105]	OP_LOADBOOL	R0 1 0 ; R0 := true
	8	[2105]	RETURN   	R0 2 ; return R0 
	9	[2106]	RETURN   	R0 1 ; return 

function #77 <?:2108,2110> (9 instructions, 36 bytes at 00000160925865E0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2109]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2109]	CALL     	R0 1 2 ; R0 := R0()
	3	[2109]	GETTABLE 	R0 R0 K0 ; R0 := R0["missionType"]
	4	[2109]	EQ       	1 R0 K2 ; if R0 == 3.000000 then PC := 7
	5	[2109]	JMP      	7 ; PC := 7
	6	[2109]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 7
	7	[2109]	OP_LOADBOOL	R0 1 0 ; R0 := true
	8	[2109]	RETURN   	R0 2 ; return R0 
	9	[2110]	RETURN   	R0 1 ; return 

function #78 <?:2112,2114> (9 instructions, 36 bytes at 0000016092586730)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2113]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2113]	CALL     	R0 1 2 ; R0 := R0()
	3	[2113]	GETTABLE 	R0 R0 K0 ; R0 := R0["missionType"]
	4	[2113]	EQ       	1 R0 K2 ; if R0 == 15.000000 then PC := 7
	5	[2113]	JMP      	7 ; PC := 7
	6	[2113]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 7
	7	[2113]	OP_LOADBOOL	R0 1 0 ; R0 := true
	8	[2113]	RETURN   	R0 2 ; return R0 
	9	[2114]	RETURN   	R0 1 ; return 

function #79 <?:2116,2118> (9 instructions, 36 bytes at 0000016092586880)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2117]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2117]	CALL     	R0 1 2 ; R0 := R0()
	3	[2117]	GETTABLE 	R0 R0 K0 ; R0 := R0["missionType"]
	4	[2117]	EQ       	1 R0 K2 ; if R0 == 17.000000 then PC := 7
	5	[2117]	JMP      	7 ; PC := 7
	6	[2117]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 7
	7	[2117]	OP_LOADBOOL	R0 1 0 ; R0 := true
	8	[2117]	RETURN   	R0 2 ; return R0 
	9	[2118]	RETURN   	R0 1 ; return 

function #80 <?:2120,2122> (23 instructions, 92 bytes at 00000160925869D0)
0 params, 3 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[2121]	GETGLOBAL	R0 K0 ; R0 := 0x7f5022cf
	2	[2121]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xa5c556b9]
	3	[2121]	GETGLOBAL	R1 K2 ; R1 := 0x64fb1586
	4	[2121]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[2121]	CALL     	R2 1 2 ; R2 := R2()
	6	[2121]	GETTABLE 	R2 R2 K3 ; R2 := R2["goalTag"]
	7	[2121]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[2121]	LOADK    	R2 K4 ; R2 := "TimeAttack"
	9	[2121]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[2121]	EQ       	0 R0 K5 ; if R0 ~= nil then PC := 21
	11	[2121]	JMP      	21 ; PC := 21
	12	[2121]	GETUPVAL 	R0 U0 ; R0 := U0
	13	[2121]	CALL     	R0 1 2 ; R0 := R0()
	14	[2121]	GETTABLE 	R0 R0 K6 ; R0 := R0["alertTag"]
	15	[2121]	GETGLOBAL	R1 K7 ; R1 := 0x0469f296
	16	[2121]	LOADK    	R2 K8 ; R2 := "SpeedRun"
	17	[2121]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[2121]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 21
	19	[2121]	JMP      	21 ; PC := 21
	20	[2121]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 21
	21	[2121]	OP_LOADBOOL	R0 1 0 ; R0 := true
	22	[2121]	RETURN   	R0 2 ; return R0 
	23	[2122]	RETURN   	R0 1 ; return 

function #81 <?:2124,2246> (485 instructions, 1940 bytes at 0000016092586CA0)
0 params, 15 slots, 7 upvalues, 0 locals, 84 constants, 0 functions
	1	[2125]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2125]	GETTABLE 	R0 R0 K1 ; R0 := R0["eomScreenMode"]
	3	[2125]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[2125]	GETTABLE 	R1 R1 K2 ; R1 := R1["ACTUAL_EOM"]
	5	[2125]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 8
	6	[2125]	JMP      	8 ; PC := 8
	7	[2125]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 8
	8	[2125]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[2127]	TEST     	R0 1 ; if R0 then PC := 12
	10	[2127]	JMP      	12 ; PC := 12
	11	[2130]	RETURN   	R0 1 ; return 
	12	[2133]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	13	[2133]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	14	[2133]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[2133]	TEST     	R1 1 ; if R1 then PC := 38
	16	[2133]	JMP      	38 ; PC := 38
	17	[2133]	GETGLOBAL	R1 K4 ; R1 := 0xbe190284
	18	[2133]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf2deaf69]
	19	[2133]	GETGLOBAL	R3 K6 ; R3 := gLotusBaseGameRulesType
	20	[2133]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	21	[2133]	TEST     	R1 0 ; if not R1 then PC := 38
	22	[2133]	JMP      	38 ; PC := 38
	23	[2133]	GETGLOBAL	R1 K4 ; R1 := 0xbe190284
	24	[2133]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xef893aec]
	25	[2133]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[2133]	GETTABLE 	R1 R1 K8 ; R1 := R1["tier"]
	27	[2133]	LT       	0 K9 R1 ; if 0.000000 >= R1 then PC := 38
	28	[2133]	JMP      	38 ; PC := 38
	29	[2134]	GETGLOBAL	R1 K10 ; R1 := 0xb009bbc6
	30	[2134]	GETUPVAL 	R2 U1 ; R2 := U1
	31	[2134]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0xed4e0128]
	32	[2134]	CALL     	R2 2 0 ; R2,... := R2(R3)
	33	[2134]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	34	[2135]	GETGLOBAL	R2 K0 ; R2 := _T
	35	[2135]	SELF     	R3 R1 K13 ; R4 := R1; R3 := R1[0xf83826b3]
	36	[2135]	CALL     	R3 2 2 ; R3 := R3(R4)
	37	[2135]	SETTABLE 	R2 K12 R3 ; R2["EndOfMissionVoiceOverride"] := R3
	38	[2138]	GETUPVAL 	R2 U2 ; R2 := U2
	39	[2138]	GETTABLE 	R2 R2 K14 ; R2 := R2["FactionHunterSpawned"]
	40	[2138]	EQ       	0 R2 K9 ; if R2 ~= 0.000000 then PC := 69
	41	[2138]	JMP      	69 ; PC := 69
	42	[2139]	GETUPVAL 	R2 U2 ; R2 := U2
	43	[2139]	GETTABLE 	R2 R2 K16 ; R2 := R2["NumDeathSquadVictims"]
	44	[2139]	EQ       	0 R2 K9 ; if R2 ~= 0.000000 then PC := 57
	45	[2139]	JMP      	57 ; PC := 57
	46	[2142]	GETUPVAL 	R2 U3 ; R2 := U3
	47	[2142]	GETTABLE 	R2 R2 K17 ; R2 := R2[0xf22cfc77]
	48	[2142]	GETGLOBAL	R3 K18 ; R3 := 0x2006ca73
	49	[2142]	GETGLOBAL	R4 K19 ; R4 := 0x0469f296
	50	[2142]	LOADK    	R5 K20 ; R5 := "MissionCompleteDeathSquadEscape"
	51	[2142]	CALL     	R4 2 2 ; R4 := R4(R5)
	52	[2142]	GETGLOBAL	R5 K21 ; R5 := 0x89326c93
	53	[2142]	SELF     	R5 R5 K22 ; R6 := R5; R5 := R5[0x78298275]
	54	[2142]	CALL     	R5 2 0 ; R5,... := R5(R6)
	55	[2142]	CALL     	R2 0 1 ; R2(R3,...)
	56	[2142]	JMP      	67 ; PC := 67
	57	[2146]	GETUPVAL 	R2 U3 ; R2 := U3
	58	[2146]	GETTABLE 	R2 R2 K17 ; R2 := R2[0xf22cfc77]
	59	[2146]	GETGLOBAL	R3 K18 ; R3 := 0x2006ca73
	60	[2146]	GETGLOBAL	R4 K19 ; R4 := 0x0469f296
	61	[2146]	LOADK    	R5 K23 ; R5 := "MissionCompleteDeathSquadNoEscape"
	62	[2146]	CALL     	R4 2 2 ; R4 := R4(R5)
	63	[2146]	GETGLOBAL	R5 K21 ; R5 := 0x89326c93
	64	[2146]	SELF     	R5 R5 K22 ; R6 := R5; R5 := R5[0x78298275]
	65	[2146]	CALL     	R5 2 0 ; R5,... := R5(R6)
	66	[2146]	CALL     	R2 0 1 ; R2(R3,...)
	67	[2148]	RETURN   	R0 1 ; return 
	68	[2148]	JMP      	190 ; PC := 190
	69	[2149]	GETGLOBAL	R2 K0 ; R2 := _T
	70	[2149]	GETTABLE 	R2 R2 K12 ; R2 := R2["EndOfMissionVoiceOverride"]
	71	[2149]	EQ       	1 R2 K24 ; if R2 == nil then PC := 84
	72	[2149]	JMP      	84 ; PC := 84
	73	[2150]	GETGLOBAL	R2 K0 ; R2 := _T
	74	[2150]	GETTABLE 	R2 R2 K12 ; R2 := R2["EndOfMissionVoiceOverride"]
	75	[2150]	EQ       	1 R2 K25 ; if R2 == "" then PC := 82
	76	[2150]	JMP      	82 ; PC := 82
	77	[2151]	GETUPVAL 	R2 U4 ; R2 := U4
	78	[2151]	GETTABLE 	R2 R2 K26 ; R2 := R2[0x659d451f]
	79	[2151]	GETGLOBAL	R3 K0 ; R3 := _T
	80	[2151]	GETTABLE 	R3 R3 K12 ; R3 := R3["EndOfMissionVoiceOverride"]
	81	[2151]	CALL     	R2 2 1 ; R2(R3)
	82	[2153]	RETURN   	R0 1 ; return 
	83	[2153]	JMP      	190 ; PC := 190
	84	[2154]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	85	[2154]	GETGLOBAL	R3 K0 ; R3 := _T
	86	[2154]	GETTABLE 	R3 R3 K27 ; R3 := R3["MissionTransmissionSet"]
	87	[2154]	CALL     	R2 2 2 ; R2 := R2(R3)
	88	[2154]	TEST     	R2 1 ; if R2 then PC := 190
	89	[2154]	JMP      	190 ; PC := 190
	90	[2155]	GETUPVAL 	R2 U5 ; R2 := U5
	91	[2155]	CALL     	R2 1 2 ; R2 := R2()
	92	[2155]	TEST     	R2 0 ; if not R2 then PC := 174
	93	[2155]	JMP      	174 ; PC := 174
	94	[2156]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	95	[2156]	GETGLOBAL	R3 K0 ; R3 := _T
	96	[2156]	GETTABLE 	R3 R3 K27 ; R3 := R3["MissionTransmissionSet"]
	97	[2156]	CALL     	R2 2 2 ; R2 := R2(R3)
	98	[2156]	TEST     	R2 1 ; if R2 then PC := 189
	99	[2156]	JMP      	189 ; PC := 189
	100	[2157]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	101	[2157]	SELF     	R2 R2 K28 ; R3 := R2; R2 := R2[0x0eb34c69]
	102	[2157]	GETGLOBAL	R4 K19 ; R4 := 0x0469f296
	103	[2157]	LOADK    	R5 K29 ; R5 := "Wave"
	104	[2157]	CALL     	R4 2 2 ; R4 := R4(R5)
	105	[2157]	LOADK    	R5 := 0.000000
	106	[2157]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	107	[2158]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	108	[2158]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x3f4e18b1]
	109	[2158]	CALL     	R3 2 2 ; R3 := R3(R4)
	110	[2158]	ADD      	R3 R3 K31 ; R3 := R3 + 1.000000
	111	[2159]	GETGLOBAL	R4 K21 ; R4 := 0x89326c93
	112	[2159]	SELF     	R4 R4 K22 ; R5 := R4; R4 := R4[0x78298275]
	113	[2159]	CALL     	R4 2 2 ; R4 := R4(R5)
	114	[2160]	LOADK    	R5 := -1.000000
	115	[2161]	LOADNIL  	R6 R6 ; R6 := nil
	116	[2163]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	117	[2163]	MOVE     	R8 R4 ; R8 := R4
	118	[2163]	CALL     	R7 2 2 ; R7 := R7(R8)
	119	[2163]	TEST     	R7 1 ; if R7 then PC := 132
	120	[2163]	JMP      	132 ; PC := 132
	121	[2163]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	122	[2163]	SELF     	R8 R4 K32 ; R9 := R4; R8 := R4[0xe79e7ef4]
	123	[2163]	CALL     	R8 2 0 ; R8,... := R8(R9)
	124	[2163]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	125	[2163]	TEST     	R7 1 ; if R7 then PC := 132
	126	[2163]	JMP      	132 ; PC := 132
	127	[2164]	SELF     	R7 R4 K32 ; R8 := R4; R7 := R4[0xe79e7ef4]
	128	[2164]	CALL     	R7 2 2 ; R7 := R7(R8)
	129	[2164]	SELF     	R7 R7 K33 ; R8 := R7; R7 := R7[0xb06572da]
	130	[2164]	CALL     	R7 2 2 ; R7 := R7(R8)
	131	[2164]	MOVE     	R5 R7 ; R5 := R7
	132	[2167]	EQ       	1 R3 R5 ; if R3 == R5 then PC := 139
	133	[2167]	JMP      	139 ; PC := 139
	134	[2168]	GETGLOBAL	R7 K19 ; R7 := 0x0469f296
	135	[2168]	LOADK    	R8 K34 ; R8 := "EndOfMatchLeftBehind"
	136	[2168]	CALL     	R7 2 2 ; R7 := R7(R8)
	137	[2168]	MOVE     	R6 R7 ; R6 := R7
	138	[2168]	JMP      	157 ; PC := 157
	139	[2169]	LE       	0 K35 R2 ; if 5.000000 > R2 then PC := 146
	140	[2169]	JMP      	146 ; PC := 146
	141	[2170]	GETGLOBAL	R7 K19 ; R7 := 0x0469f296
	142	[2170]	LOADK    	R8 K36 ; R8 := "EndOfMatchBest"
	143	[2170]	CALL     	R7 2 2 ; R7 := R7(R8)
	144	[2170]	MOVE     	R6 R7 ; R6 := R7
	145	[2170]	JMP      	157 ; PC := 157
	146	[2171]	LE       	0 K37 R2 ; if 2.000000 > R2 then PC := 153
	147	[2171]	JMP      	153 ; PC := 153
	148	[2172]	GETGLOBAL	R7 K19 ; R7 := 0x0469f296
	149	[2172]	LOADK    	R8 K38 ; R8 := "EndOfMatchGood"
	150	[2172]	CALL     	R7 2 2 ; R7 := R7(R8)
	151	[2172]	MOVE     	R6 R7 ; R6 := R7
	152	[2172]	JMP      	157 ; PC := 157
	153	[2174]	GETGLOBAL	R7 K19 ; R7 := 0x0469f296
	154	[2174]	LOADK    	R8 K39 ; R8 := "EndOfMatchPoor"
	155	[2174]	CALL     	R7 2 2 ; R7 := R7(R8)
	156	[2174]	MOVE     	R6 R7 ; R6 := R7
	157	[2176]	GETGLOBAL	R7 K0 ; R7 := _T
	158	[2176]	GETTABLE 	R7 R7 K27 ; R7 := R7["MissionTransmissionSet"]
	159	[2176]	SELF     	R7 R7 K40 ; R8 := R7; R7 := R7[0x10c9eef2]
	160	[2176]	MOVE     	R9 R6 ; R9 := R6
	161	[2176]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	162	[2177]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	163	[2177]	MOVE     	R9 R7 ; R9 := R7
	164	[2177]	CALL     	R8 2 2 ; R8 := R8(R9)
	165	[2177]	TEST     	R8 1 ; if R8 then PC := 189
	166	[2177]	JMP      	189 ; PC := 189
	167	[2178]	GETGLOBAL	R8 K4 ; R8 := 0xbe190284
	168	[2178]	SELF     	R8 R8 K41 ; R9 := R8; R8 := R8[0x8e07e77f]
	169	[2178]	SELF     	R10 R7 K11 ; R11 := R7; R10 := R7[0xed4e0128]
	170	[2178]	CALL     	R10 2 2 ; R10 := R10(R11)
	171	[2178]	LOADK    	R11 K42 ; R11 := "OnOnslaughtTransmissionReady"
	172	[2178]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	173	[2180]	JMP      	189 ; PC := 189
	174	[2181]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	175	[2181]	GETGLOBAL	R9 K0 ; R9 := _T
	176	[2181]	GETTABLE 	R9 R9 K27 ; R9 := R9["MissionTransmissionSet"]
	177	[2181]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0xf83826b3]
	178	[2181]	CALL     	R9 2 0 ; R9,... := R9(R10)
	179	[2181]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	180	[2181]	TEST     	R8 1 ; if R8 then PC := 189
	181	[2181]	JMP      	189 ; PC := 189
	182	[2182]	GETUPVAL 	R8 U4 ; R8 := U4
	183	[2182]	GETTABLE 	R8 R8 K26 ; R8 := R8[0x659d451f]
	184	[2182]	GETGLOBAL	R9 K0 ; R9 := _T
	185	[2182]	GETTABLE 	R9 R9 K27 ; R9 := R9["MissionTransmissionSet"]
	186	[2182]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0xf83826b3]
	187	[2182]	CALL     	R9 2 0 ; R9,... := R9(R10)
	188	[2182]	CALL     	R8 0 1 ; R8(R9,...)
	189	[2184]	RETURN   	R0 1 ; return 
	190	[2187]	GETUPVAL 	R8 U2 ; R8 := U2
	191	[2187]	GETTABLE 	R8 R8 K43 ; R8 := R8["MissionType"]
	192	[2188]	GETGLOBAL	R9 K21 ; R9 := 0x89326c93
	193	[2188]	SELF     	R9 R9 K44 ; R10 := R9; R9 := R9[0x98f20ca5]
	194	[2188]	CALL     	R9 2 2 ; R9 := R9(R10)
	195	[2188]	GETTABLE 	R9 R9 K45 ; R9 := R9["level"]
	196	[2189]	GETUPVAL 	R10 U2 ; R10 := U2
	197	[2189]	GETTABLE 	R10 R10 K46 ; R10 := R10["ExterminateMidCout"]
	198	[2189]	EQ       	1 R10 K47 ; if R10 == 9999.000000 then PC := 211
	199	[2189]	JMP      	211 ; PC := 211
	200	[2190]	GETUPVAL 	R10 U3 ; R10 := U3
	201	[2190]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	202	[2190]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	203	[2190]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	204	[2190]	LOADK    	R13 K48 ; R13 := "MissionComplete"
	205	[2190]	CALL     	R12 2 2 ; R12 := R12(R13)
	206	[2190]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	207	[2190]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	208	[2190]	CALL     	R13 2 0 ; R13,... := R13(R14)
	209	[2190]	CALL     	R10 0 1 ; R10(R11,...)
	210	[2190]	JMP      	485 ; PC := 485
	211	[2191]	GETGLOBAL	R10 K3 ; R10 := 0x7b998233
	212	[2191]	MOVE     	R11 R9 ; R11 := R9
	213	[2191]	CALL     	R10 2 2 ; R10 := R10(R11)
	214	[2191]	TEST     	R10 1 ; if R10 then PC := 235
	215	[2191]	JMP      	235 ; PC := 235
	216	[2191]	GETGLOBAL	R10 K49 ; R10 := 0x7f5022cf
	217	[2191]	GETTABLE 	R10 R10 K50 ; R10 := R10[0xa5c556b9]
	218	[2191]	SELF     	R11 R9 K11 ; R12 := R9; R11 := R9[0xed4e0128]
	219	[2191]	CALL     	R11 2 2 ; R11 := R11(R12)
	220	[2191]	LOADK    	R12 K51 ; R12 := "Dojo"
	221	[2191]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	222	[2191]	EQ       	1 R10 K24 ; if R10 == nil then PC := 235
	223	[2191]	JMP      	235 ; PC := 235
	224	[2192]	GETUPVAL 	R10 U3 ; R10 := U3
	225	[2192]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	226	[2192]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	227	[2192]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	228	[2192]	LOADK    	R13 K48 ; R13 := "MissionComplete"
	229	[2192]	CALL     	R12 2 2 ; R12 := R12(R13)
	230	[2192]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	231	[2192]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	232	[2192]	CALL     	R13 2 0 ; R13,... := R13(R14)
	233	[2192]	CALL     	R10 0 1 ; R10(R11,...)
	234	[2192]	JMP      	485 ; PC := 485
	235	[2193]	EQ       	0 R8 K9 ; if R8 ~= 0.000000 then PC := 248
	236	[2193]	JMP      	248 ; PC := 248
	237	[2194]	GETUPVAL 	R10 U3 ; R10 := U3
	238	[2194]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	239	[2194]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	240	[2194]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	241	[2194]	LOADK    	R13 K52 ; R13 := "MissionCompleteAsassinate"
	242	[2194]	CALL     	R12 2 2 ; R12 := R12(R13)
	243	[2194]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	244	[2194]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	245	[2194]	CALL     	R13 2 0 ; R13,... := R13(R14)
	246	[2194]	CALL     	R10 0 1 ; R10(R11,...)
	247	[2194]	JMP      	485 ; PC := 485
	248	[2195]	EQ       	0 R8 K31 ; if R8 ~= 1.000000 then PC := 261
	249	[2195]	JMP      	261 ; PC := 261
	250	[2196]	GETUPVAL 	R10 U3 ; R10 := U3
	251	[2196]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	252	[2196]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	253	[2196]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	254	[2196]	LOADK    	R13 K48 ; R13 := "MissionComplete"
	255	[2196]	CALL     	R12 2 2 ; R12 := R12(R13)
	256	[2196]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	257	[2196]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	258	[2196]	CALL     	R13 2 0 ; R13,... := R13(R14)
	259	[2196]	CALL     	R10 0 1 ; R10(R11,...)
	260	[2196]	JMP      	485 ; PC := 485
	261	[2197]	EQ       	0 R8 K37 ; if R8 ~= 2.000000 then PC := 274
	262	[2197]	JMP      	274 ; PC := 274
	263	[2198]	GETUPVAL 	R10 U3 ; R10 := U3
	264	[2198]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	265	[2198]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	266	[2198]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	267	[2198]	LOADK    	R13 K48 ; R13 := "MissionComplete"
	268	[2198]	CALL     	R12 2 2 ; R12 := R12(R13)
	269	[2198]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	270	[2198]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	271	[2198]	CALL     	R13 2 0 ; R13,... := R13(R14)
	272	[2198]	CALL     	R10 0 1 ; R10(R11,...)
	273	[2198]	JMP      	485 ; PC := 485
	274	[2199]	EQ       	0 R8 K53 ; if R8 ~= 3.000000 then PC := 287
	275	[2199]	JMP      	287 ; PC := 287
	276	[2200]	GETUPVAL 	R10 U3 ; R10 := U3
	277	[2200]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	278	[2200]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	279	[2200]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	280	[2200]	LOADK    	R13 K54 ; R13 := "MissionCompleteRescue"
	281	[2200]	CALL     	R12 2 2 ; R12 := R12(R13)
	282	[2200]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	283	[2200]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	284	[2200]	CALL     	R13 2 0 ; R13,... := R13(R14)
	285	[2200]	CALL     	R10 0 1 ; R10(R11,...)
	286	[2200]	JMP      	485 ; PC := 485
	287	[2201]	EQ       	0 R8 K55 ; if R8 ~= 4.000000 then PC := 300
	288	[2201]	JMP      	300 ; PC := 300
	289	[2202]	GETUPVAL 	R10 U3 ; R10 := U3
	290	[2202]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	291	[2202]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	292	[2202]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	293	[2202]	LOADK    	R13 K48 ; R13 := "MissionComplete"
	294	[2202]	CALL     	R12 2 2 ; R12 := R12(R13)
	295	[2202]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	296	[2202]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	297	[2202]	CALL     	R13 2 0 ; R13,... := R13(R14)
	298	[2202]	CALL     	R10 0 1 ; R10(R11,...)
	299	[2202]	JMP      	485 ; PC := 485
	300	[2203]	EQ       	0 R8 K35 ; if R8 ~= 5.000000 then PC := 313
	301	[2203]	JMP      	313 ; PC := 313
	302	[2204]	GETUPVAL 	R10 U3 ; R10 := U3
	303	[2204]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	304	[2204]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	305	[2204]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	306	[2204]	LOADK    	R13 K56 ; R13 := "MissionCompleteCapture"
	307	[2204]	CALL     	R12 2 2 ; R12 := R12(R13)
	308	[2204]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	309	[2204]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	310	[2204]	CALL     	R13 2 0 ; R13,... := R13(R14)
	311	[2204]	CALL     	R10 0 1 ; R10(R11,...)
	312	[2204]	JMP      	485 ; PC := 485
	313	[2205]	EQ       	0 R8 K57 ; if R8 ~= 6.000000 then PC := 326
	314	[2205]	JMP      	326 ; PC := 326
	315	[2206]	GETUPVAL 	R10 U3 ; R10 := U3
	316	[2206]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	317	[2206]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	318	[2206]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	319	[2206]	LOADK    	R13 K48 ; R13 := "MissionComplete"
	320	[2206]	CALL     	R12 2 2 ; R12 := R12(R13)
	321	[2206]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	322	[2206]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	323	[2206]	CALL     	R13 2 0 ; R13,... := R13(R14)
	324	[2206]	CALL     	R10 0 1 ; R10(R11,...)
	325	[2206]	JMP      	485 ; PC := 485
	326	[2207]	EQ       	0 R8 K58 ; if R8 ~= 7.000000 then PC := 339
	327	[2207]	JMP      	339 ; PC := 339
	328	[2208]	GETUPVAL 	R10 U3 ; R10 := U3
	329	[2208]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	330	[2208]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	331	[2208]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	332	[2208]	LOADK    	R13 K48 ; R13 := "MissionComplete"
	333	[2208]	CALL     	R12 2 2 ; R12 := R12(R13)
	334	[2208]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	335	[2208]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	336	[2208]	CALL     	R13 2 0 ; R13,... := R13(R14)
	337	[2208]	CALL     	R10 0 1 ; R10(R11,...)
	338	[2208]	JMP      	485 ; PC := 485
	339	[2209]	GETUPVAL 	R10 U6 ; R10 := U6
	340	[2209]	CALL     	R10 1 2 ; R10 := R10()
	341	[2209]	TEST     	R10 0 ; if not R10 then PC := 354
	342	[2209]	JMP      	354 ; PC := 354
	343	[2210]	GETUPVAL 	R10 U3 ; R10 := U3
	344	[2210]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	345	[2210]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	346	[2210]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	347	[2210]	LOADK    	R13 K59 ; R13 := "MissionCompleteDefend"
	348	[2210]	CALL     	R12 2 2 ; R12 := R12(R13)
	349	[2210]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	350	[2210]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	351	[2210]	CALL     	R13 2 0 ; R13,... := R13(R14)
	352	[2210]	CALL     	R10 0 1 ; R10(R11,...)
	353	[2210]	JMP      	485 ; PC := 485
	354	[2211]	EQ       	0 R8 K60 ; if R8 ~= 13.000000 then PC := 367
	355	[2211]	JMP      	367 ; PC := 367
	356	[2212]	GETUPVAL 	R10 U3 ; R10 := U3
	357	[2212]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	358	[2212]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	359	[2212]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	360	[2212]	LOADK    	R13 K61 ; R13 := "MissionCompleteTerritory"
	361	[2212]	CALL     	R12 2 2 ; R12 := R12(R13)
	362	[2212]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	363	[2212]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	364	[2212]	CALL     	R13 2 0 ; R13,... := R13(R14)
	365	[2212]	CALL     	R10 0 1 ; R10(R11,...)
	366	[2212]	JMP      	485 ; PC := 485
	367	[2213]	EQ       	0 R8 K62 ; if R8 ~= 14.000000 then PC := 380
	368	[2213]	JMP      	380 ; PC := 380
	369	[2214]	GETUPVAL 	R10 U3 ; R10 := U3
	370	[2214]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	371	[2214]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	372	[2214]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	373	[2214]	LOADK    	R13 K63 ; R13 := "MissionCompleteRetrieval"
	374	[2214]	CALL     	R12 2 2 ; R12 := R12(R13)
	375	[2214]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	376	[2214]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	377	[2214]	CALL     	R13 2 0 ; R13,... := R13(R14)
	378	[2214]	CALL     	R10 0 1 ; R10(R11,...)
	379	[2214]	JMP      	485 ; PC := 485
	380	[2215]	EQ       	0 R8 K64 ; if R8 ~= 15.000000 then PC := 393
	381	[2215]	JMP      	393 ; PC := 393
	382	[2216]	GETUPVAL 	R10 U3 ; R10 := U3
	383	[2216]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	384	[2216]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	385	[2216]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	386	[2216]	LOADK    	R13 K48 ; R13 := "MissionComplete"
	387	[2216]	CALL     	R12 2 2 ; R12 := R12(R13)
	388	[2216]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	389	[2216]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	390	[2216]	CALL     	R13 2 0 ; R13,... := R13(R14)
	391	[2216]	CALL     	R10 0 1 ; R10(R11,...)
	392	[2216]	JMP      	485 ; PC := 485
	393	[2217]	EQ       	1 R8 K65 ; if R8 == 11.000000 then PC := 403
	394	[2217]	JMP      	403 ; PC := 403
	395	[2217]	EQ       	1 R8 K66 ; if R8 == 16.000000 then PC := 403
	396	[2217]	JMP      	403 ; PC := 403
	397	[2217]	EQ       	1 R8 K67 ; if R8 == 17.000000 then PC := 403
	398	[2217]	JMP      	403 ; PC := 403
	399	[2217]	EQ       	1 R8 K68 ; if R8 == 18.000000 then PC := 403
	400	[2217]	JMP      	403 ; PC := 403
	401	[2217]	EQ       	0 R8 K69 ; if R8 ~= 10.000000 then PC := 405
	402	[2217]	JMP      	405 ; PC := 405
	403	[2218]	RETURN   	R0 1 ; return 
	404	[2218]	JMP      	485 ; PC := 485
	405	[2219]	EQ       	0 R8 K70 ; if R8 ~= 19.000000 then PC := 409
	406	[2219]	JMP      	409 ; PC := 409
	407	[2220]	RETURN   	R0 1 ; return 
	408	[2220]	JMP      	485 ; PC := 485
	409	[2221]	EQ       	0 R8 K71 ; if R8 ~= 23.000000 then PC := 412
	410	[2221]	JMP      	412 ; PC := 412
	411	[2221]	JMP      	485 ; PC := 485
	412	[2223]	EQ       	0 R8 K72 ; if R8 ~= 22.000000 then PC := 416
	413	[2223]	JMP      	416 ; PC := 416
	414	[2224]	RETURN   	R0 1 ; return 
	415	[2224]	JMP      	485 ; PC := 485
	416	[2225]	EQ       	0 R8 K73 ; if R8 ~= 25.000000 then PC := 419
	417	[2225]	JMP      	419 ; PC := 419
	418	[2225]	JMP      	485 ; PC := 485
	419	[2227]	EQ       	0 R8 K74 ; if R8 ~= 26.000000 then PC := 432
	420	[2227]	JMP      	432 ; PC := 432
	421	[2228]	GETUPVAL 	R10 U3 ; R10 := U3
	422	[2228]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	423	[2228]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	424	[2228]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	425	[2228]	LOADK    	R13 K48 ; R13 := "MissionComplete"
	426	[2228]	CALL     	R12 2 2 ; R12 := R12(R13)
	427	[2228]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	428	[2228]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	429	[2228]	CALL     	R13 2 0 ; R13,... := R13(R14)
	430	[2228]	CALL     	R10 0 1 ; R10(R11,...)
	431	[2228]	JMP      	485 ; PC := 485
	432	[2229]	EQ       	0 R8 K75 ; if R8 ~= 28.000000 then PC := 435
	433	[2229]	JMP      	435 ; PC := 435
	434	[2229]	JMP      	485 ; PC := 485
	435	[2231]	EQ       	0 R8 K76 ; if R8 ~= 35.000000 then PC := 448
	436	[2231]	JMP      	448 ; PC := 448
	437	[2232]	GETUPVAL 	R10 U3 ; R10 := U3
	438	[2232]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	439	[2232]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	440	[2232]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	441	[2232]	LOADK    	R13 K77 ; R13 := "MissionCompleteArmageddon"
	442	[2232]	CALL     	R12 2 2 ; R12 := R12(R13)
	443	[2232]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	444	[2232]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	445	[2232]	CALL     	R13 2 0 ; R13,... := R13(R14)
	446	[2232]	CALL     	R10 0 1 ; R10(R11,...)
	447	[2232]	JMP      	485 ; PC := 485
	448	[2234]	EQ       	1 R8 K78 ; if R8 == 21.000000 then PC := 458
	449	[2234]	JMP      	458 ; PC := 458
	450	[2235]	EQ       	1 R8 K79 ; if R8 == 27.000000 then PC := 458
	451	[2235]	JMP      	458 ; PC := 458
	452	[2236]	EQ       	1 R8 K80 ; if R8 == 32.000000 then PC := 458
	453	[2236]	JMP      	458 ; PC := 458
	454	[2237]	EQ       	1 R8 K81 ; if R8 == 33.000000 then PC := 458
	455	[2237]	JMP      	458 ; PC := 458
	456	[2238]	EQ       	0 R8 K82 ; if R8 ~= 34.000000 then PC := 475
	457	[2238]	JMP      	475 ; PC := 475
	458	[2240]	GETGLOBAL	R10 K3 ; R10 := 0x7b998233
	459	[2240]	GETGLOBAL	R11 K0 ; R11 := _T
	460	[2240]	GETTABLE 	R11 R11 K83 ; R11 := R11["TransmissionSet"]
	461	[2240]	CALL     	R10 2 2 ; R10 := R10(R11)
	462	[2240]	TEST     	R10 1 ; if R10 then PC := 485
	463	[2240]	JMP      	485 ; PC := 485
	464	[2241]	GETUPVAL 	R10 U3 ; R10 := U3
	465	[2241]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	466	[2241]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	467	[2241]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	468	[2241]	LOADK    	R13 K48 ; R13 := "MissionComplete"
	469	[2241]	CALL     	R12 2 2 ; R12 := R12(R13)
	470	[2241]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	471	[2241]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	472	[2241]	CALL     	R13 2 0 ; R13,... := R13(R14)
	473	[2241]	CALL     	R10 0 1 ; R10(R11,...)
	474	[2242]	JMP      	485 ; PC := 485
	475	[2244]	GETUPVAL 	R10 U3 ; R10 := U3
	476	[2244]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xf22cfc77]
	477	[2244]	GETGLOBAL	R11 K18 ; R11 := 0x2006ca73
	478	[2244]	GETGLOBAL	R12 K19 ; R12 := 0x0469f296
	479	[2244]	LOADK    	R13 K48 ; R13 := "MissionComplete"
	480	[2244]	CALL     	R12 2 2 ; R12 := R12(R13)
	481	[2244]	GETGLOBAL	R13 K21 ; R13 := 0x89326c93
	482	[2244]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x78298275]
	483	[2244]	CALL     	R13 2 0 ; R13,... := R13(R14)
	484	[2244]	CALL     	R10 0 1 ; R10(R11,...)
	485	[2246]	RETURN   	R0 1 ; return 

function #82 <?:2249,2281> (59 instructions, 236 bytes at 0000016092588680)
7 params, 18 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[2250]	GETGLOBAL	R7 K0 ; R7 := 0xce225efa
	2	[2250]	LOADK    	R8 := 0.000000
	3	[2250]	CALL     	R7 2 1 ; R7(R8)
	4	[2253]	GETGLOBAL	R7 K1 ; R7 := 0x03f57322
	5	[2253]	MOVE     	R8 R2 ; R8 := R2
	6	[2253]	CALL     	R7 2 2 ; R7 := R7(R8)
	7	[2254]	LOADK    	R8 := 0.000000
	8	[2255]	GETGLOBAL	R9 K2 ; R9 := 0xcfc01047
	9	[2255]	MOVE     	R10 R0 ; R10 := R0
	10	[2255]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	11	[2255]	JMP      	39 ; PC := 39
	12	[2257]	GETTABLE 	R14 R13 K3 ; R14 := R13["Label"]
	13	[2257]	EQ       	0 R14 R1 ; if R14 ~= R1 then PC := 38
	14	[2257]	JMP      	38 ; PC := 38
	15	[2258]	GETTABLE 	R14 R0 R12 ; R14 := R0[R12]
	16	[2258]	GETTABLE 	R14 R14 K4 ; R14 := R14["Value"]
	17	[2258]	LEN      	R14 R14 ; R14 := # R14
	18	[2259]	GETTABLE 	R15 R0 R12 ; R15 := R0[R12]
	19	[2259]	GETTABLE 	R15 R15 K4 ; R15 := R15["Value"]
	20	[2259]	ADD      	R16 R14 K5 ; R16 := R14 + 1.000000
	21	[2259]	SETTABLE 	R15 R16 R7 ; R15[R16] := R7
	22	[2261]	TEST     	R3 0 ; if not R3 then PC := 31
	23	[2261]	JMP      	31 ; PC := 31
	24	[2262]	GETTABLE 	R15 R0 R12 ; R15 := R0[R12]
	25	[2262]	GETTABLE 	R15 R15 K6 ; R15 := R15["BestValue"]
	26	[2262]	LT       	0 R15 R7 ; if R15 >= R7 then PC := 37
	27	[2262]	JMP      	37 ; PC := 37
	28	[2263]	GETTABLE 	R15 R0 R12 ; R15 := R0[R12]
	29	[2263]	SETTABLE 	R15 K6 R7 ; R15["BestValue"] := R7
	30	[2264]	JMP      	37 ; PC := 37
	31	[2266]	GETTABLE 	R15 R0 R12 ; R15 := R0[R12]
	32	[2266]	GETTABLE 	R15 R15 K6 ; R15 := R15["BestValue"]
	33	[2266]	LT       	0 R7 R15 ; if R7 >= R15 then PC := 37
	34	[2266]	JMP      	37 ; PC := 37
	35	[2267]	GETTABLE 	R15 R0 R12 ; R15 := R0[R12]
	36	[2267]	SETTABLE 	R15 K6 R7 ; R15["BestValue"] := R7
	37	[2271]	RETURN   	R0 2 ; return R0 
	38	[2273]	MOVE     	R8 R12 ; R8 := R12
	39	[2255]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 12; R11 := R12 end
	40	[2273]	JMP      	12 ; PC := 12
	41	[2277]	ADD      	R15 R8 K5 ; R15 := R8 + 1.000000
	42	[2277]	NEWTABLE 	R16 0 6 ; R16 := {}
	43	[2277]	SETTABLE 	R16 K3 R1 ; R16["Label"] := R1
	44	[2277]	NEWTABLE 	R17 0 0 ; R17 := {}
	45	[2277]	SETTABLE 	R16 K4 R17 ; R16["Value"] := R17
	46	[2277]	SETTABLE 	R16 K6 R7 ; R16["BestValue"] := R7
	47	[2277]	SETTABLE 	R16 K7 R3 ; R16["BestIsMax"] := R3
	48	[2277]	SETTABLE 	R16 K8 R4 ; R16["IsRatio"] := R4
	49	[2277]	SETTABLE 	R16 K9 R6 ; R16["HideValue"] := R6
	50	[2277]	SETTABLE 	R0 R15 R16 ; R0[R15] := R16
	51	[2278]	ADD      	R15 R8 K5 ; R15 := R8 + 1.000000
	52	[2278]	GETTABLE 	R15 R0 R15 ; R15 := R0[R15]
	53	[2278]	GETTABLE 	R15 R15 K4 ; R15 := R15["Value"]
	54	[2278]	SETTABLE 	R15 K5 R7 ; R15[1.000000] := R7
	55	[2279]	ADD      	R15 R8 K5 ; R15 := R8 + 1.000000
	56	[2279]	GETTABLE 	R15 R0 R15 ; R15 := R0[R15]
	57	[2279]	SETTABLE 	R15 K10 R5 ; R15["ProgressMax"] := R5
	58	[2280]	RETURN   	R0 2 ; return R0 
	59	[2281]	RETURN   	R0 1 ; return 

function #83 <?:2283,2294> (11 instructions, 44 bytes at 0000016092588A50)
8 params, 9 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[2284]	NEWTABLE 	R8 0 8 ; R8 := {}
	2	[2285]	SETTABLE 	R8 K0 R0 ; R8["Name"] := R0
	3	[2286]	SETTABLE 	R8 K1 R1 ; R8["Count"] := R1
	4	[2287]	SETTABLE 	R8 K2 R2 ; R8["TaxedCount"] := R2
	5	[2288]	SETTABLE 	R8 K3 R3 ; R8["Icon"] := R3
	6	[2289]	SETTABLE 	R8 K4 R4 ; R8["Background"] := R4
	7	[2290]	SETTABLE 	R8 K5 R5 ; R8["Material"] := R5
	8	[2291]	SETTABLE 	R8 K6 R6 ; R8["Color"] := R6
	9	[2292]	SETTABLE 	R8 K7 R7 ; R8["SortPriority"] := R7
	10	[2293]	RETURN   	R8 2 ; return R8 
	11	[2294]	RETURN   	R0 1 ; return 

function #84 <?:2296,2317> (57 instructions, 228 bytes at 0000016092588C30)
0 params, 8 slots, 3 upvalues, 0 locals, 10 constants, 0 functions
	1	[2297]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2297]	CALL     	R0 1 2 ; R0 := R0()
	3	[2298]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	4	[2298]	GETTABLE 	R2 R0 K1 ; R2 := R0["goalId"]
	5	[2298]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2298]	TEST     	R1 1 ; if R1 then PC := 42
	7	[2298]	JMP      	42 ; PC := 42
	8	[2298]	GETTABLE 	R1 R0 K1 ; R1 := R0["goalId"]
	9	[2298]	EQ       	1 R1 K2 ; if R1 == "" then PC := 42
	10	[2298]	JMP      	42 ; PC := 42
	11	[2299]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	12	[2299]	GETGLOBAL	R2 K3 ; R2 := mGameData
	13	[2299]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[2299]	TEST     	R1 1 ; if R1 then PC := 55
	15	[2299]	JMP      	55 ; PC := 55
	16	[2300]	GETGLOBAL	R1 K3 ; R1 := mGameData
	17	[2300]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x69727e0b]
	18	[2300]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[2300]	GETTABLE 	R1 R1 K5 ; R1 := R1["mGoals"]
	20	[2301]	LOADK    	R2 := 1.000000
	21	[2301]	LEN      	R3 R1 ; R3 := # R1
	22	[2301]	LOADK    	R4 := 1.000000
	23	[2301]	FORPREP  	R2 40 ; R2 -= R4; PC := 40
	24	[2302]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	25	[2302]	GETTABLE 	R6 R6 K6 ; R6 := R6["mId"]
	26	[2302]	GETTABLE 	R6 R6 K6 ; R6 := R6["mId"]
	27	[2302]	GETTABLE 	R7 R0 K1 ; R7 := R0["goalId"]
	28	[2302]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 40
	29	[2302]	JMP      	40 ; PC := 40
	30	[2303]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	31	[2303]	GETTABLE 	R7 R1 R5 ; R7 := R1[R5]
	32	[2303]	GETTABLE 	R7 R7 K7 ; R7 := R7["mIcon"]
	33	[2303]	CALL     	R6 2 2 ; R6 := R6(R7)
	34	[2303]	TEST     	R6 1 ; if R6 then PC := 55
	35	[2303]	JMP      	55 ; PC := 55
	36	[2304]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	37	[2304]	GETTABLE 	R6 R6 K7 ; R6 := R6["mIcon"]
	38	[2304]	RETURN   	R6 2 ; return R6 
	39	[2306]	JMP      	55 ; PC := 55
	40	[2301]	FORLOOP  	R2 24 ; R2 += R4; if R2 <= R3 then begin PC := 24; R5 := R2 end
	41	[2309]	JMP      	55 ; PC := 55
	42	[2310]	GETUPVAL 	R6 U1 ; R6 := U1
	43	[2310]	CALL     	R6 1 2 ; R6 := R6()
	44	[2310]	TEST     	R6 0 ; if not R6 then PC := 49
	45	[2310]	JMP      	49 ; PC := 49
	46	[2311]	LOADNIL  	R6 R6 ; R6 := nil
	47	[2311]	RETURN   	R6 2 ; return R6 
	48	[2311]	JMP      	55 ; PC := 55
	49	[2312]	GETUPVAL 	R6 U2 ; R6 := U2
	50	[2312]	CALL     	R6 1 2 ; R6 := R6()
	51	[2312]	TEST     	R6 0 ; if not R6 then PC := 55
	52	[2312]	JMP      	55 ; PC := 55
	53	[2313]	GETGLOBAL	R6 K8 ; R6 := 0x54ae1b8e
	54	[2313]	RETURN   	R6 2 ; return R6 
	55	[2316]	GETGLOBAL	R6 K9 ; R6 := 0xb9c98766
	56	[2316]	RETURN   	R6 2 ; return R6 
	57	[2317]	RETURN   	R0 1 ; return 

function #85 <?:2319,2375> (186 instructions, 744 bytes at 0000016092588F70)
1 param, 20 slots, 9 upvalues, 0 locals, 36 constants, 0 functions
	1	[2322]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2322]	CALL     	R2 1 2 ; R2 := R2()
	3	[2323]	GETTABLE 	R3 R2 K0 ; R3 := R2["maxWaveNum"]
	4	[2323]	EQ       	1 R3 K1 ; if R3 == 0.000000 then PC := 7
	5	[2323]	JMP      	7 ; PC := 7
	6	[2323]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 7
	7	[2323]	OP_LOADBOOL	R3 1 0 ; R3 := true
	8	[2324]	GETUPVAL 	R4 U1 ; R4 := U1
	9	[2324]	CALL     	R4 1 2 ; R4 := R4()
	10	[2325]	GETUPVAL 	R5 U2 ; R5 := U2
	11	[2325]	CALL     	R5 1 2 ; R5 := R5()
	12	[2325]	TEST     	R5 0 ; if not R5 then PC := 16
	13	[2325]	JMP      	16 ; PC := 16
	14	[2325]	TEST     	R3 1 ; if R3 then PC := 18
	15	[2325]	JMP      	18 ; PC := 18
	16	[2325]	TESTSET  	R5 R4 0 ; if not R4 then PC := 26 else R5 := R4 
	17	[2325]	JMP      	26 ; PC := 26
	18	[2325]	GETGLOBAL	R5 K2 ; R5 := 0x7f5022cf
	19	[2325]	GETTABLE 	R5 R5 K3 ; R5 := R5[0xa5c556b9]
	20	[2325]	GETGLOBAL	R6 K4 ; R6 := 0x64fb1586
	21	[2325]	GETTABLE 	R7 R2 K5 ; R7 := R2["goalTag"]
	22	[2325]	CALL     	R6 2 2 ; R6 := R6(R7)
	23	[2325]	LOADK    	R7 K6 ; R7 := "MechSurvival"
	24	[2325]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	25	[2325]	NOT      	R5 R5 ; R5 := not R5
	26	[2327]	GETUPVAL 	R6 U3 ; R6 := U3
	27	[2327]	CALL     	R6 1 2 ; R6 := R6()
	28	[2327]	TEST     	R6 0 ; if not R6 then PC := 111
	29	[2327]	JMP      	111 ; PC := 111
	30	[2328]	LOADK    	R6 K7 ; R6 := "/Lotus/Language/Menu/MissionScore"
	31	[2329]	EQ       	0 R0 K8 ; if R0 ~= 1.000000 then PC := 34
	32	[2329]	JMP      	34 ; PC := 34
	33	[2330]	LOADK    	R6 K9 ; R6 := "/Lotus/Language/Menu/MissionComplete"
	34	[2332]	GETGLOBAL	R7 K10 ; R7 := mGameData
	35	[2332]	SELF     	R7 R7 K11 ; R8 := R7; R7 := R7[0x69727e0b]
	36	[2332]	CALL     	R7 2 2 ; R7 := R7(R8)
	37	[2332]	GETTABLE 	R7 R7 K12 ; R7 := R7["mGoals"]
	38	[2333]	LOADNIL  	R8 R8 ; R8 := nil
	39	[2334]	LOADK    	R9 := 1.000000
	40	[2334]	LEN      	R10 R7 ; R10 := # R7
	41	[2334]	LOADK    	R11 := 1.000000
	42	[2334]	FORPREP  	R9 102 ; R9 -= R11; PC := 102
	43	[2335]	GETTABLE 	R13 R7 R12 ; R13 := R7[R12]
	44	[2336]	GETTABLE 	R14 R13 K13 ; R14 := R13["mId"]
	45	[2336]	GETTABLE 	R14 R14 K13 ; R14 := R14["mId"]
	46	[2336]	GETTABLE 	R15 R2 K14 ; R15 := R2["goalId"]
	47	[2336]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 58
	48	[2336]	JMP      	58 ; PC := 58
	49	[2336]	GETTABLE 	R14 R13 K15 ; R14 := R13["mOptionalInMission"]
	50	[2336]	TEST     	R14 0 ; if not R14 then PC := 102
	51	[2336]	JMP      	102 ; PC := 102
	52	[2336]	GETGLOBAL	R14 K16 ; R14 := 0x0469f296
	53	[2336]	GETTABLE 	R15 R13 K17 ; R15 := R13["mNode"]
	54	[2336]	CALL     	R14 2 2 ; R14 := R14(R15)
	55	[2336]	GETTABLE 	R15 R2 K18 ; R15 := R2["location"]
	56	[2336]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 102
	57	[2336]	JMP      	102 ; PC := 102
	58	[2337]	GETTABLE 	R14 R13 K19 ; R14 := R13["mScoreLocTag"]
	59	[2337]	EQ       	1 R14 K20 ; if R14 == "" then PC := 62
	60	[2337]	JMP      	62 ; PC := 62
	61	[2338]	GETTABLE 	R6 R13 K19 ; R6 := R13["mScoreLocTag"]
	62	[2340]	TEST     	R3 0 ; if not R3 then PC := 81
	63	[2340]	JMP      	81 ; PC := 81
	64	[2340]	GETUPVAL 	R14 U2 ; R14 := U2
	65	[2340]	CALL     	R14 1 2 ; R14 := R14()
	66	[2340]	TEST     	R14 0 ; if not R14 then PC := 81
	67	[2340]	JMP      	81 ; PC := 81
	68	[2340]	GETTABLE 	R14 R13 K21 ; R14 := R13["mScoreVar"]
	69	[2340]	GETGLOBAL	R15 K22 ; R15 := EMPTY_SYMBOL
	70	[2340]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 81
	71	[2340]	JMP      	81 ; PC := 81
	72	[2340]	GETTABLE 	R14 R13 K23 ; R14 := R13["mScoreSumTag"]
	73	[2340]	GETGLOBAL	R15 K22 ; R15 := EMPTY_SYMBOL
	74	[2340]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 81
	75	[2340]	JMP      	81 ; PC := 81
	76	[2340]	GETTABLE 	R14 R13 K24 ; R14 := R13["mScoreMaxTag"]
	77	[2340]	GETGLOBAL	R15 K22 ; R15 := EMPTY_SYMBOL
	78	[2340]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 81
	79	[2340]	JMP      	81 ; PC := 81
	80	[2342]	OP_LOADBOOL	R5 0 0 ; R5 := false
	81	[2344]	GETTABLE 	R14 R13 K21 ; R14 := R13["mScoreVar"]
	82	[2344]	GETGLOBAL	R15 K16 ; R15 := 0x0469f296
	83	[2344]	LOADK    	R16 K25 ; R16 := "Halloween"
	84	[2344]	CALL     	R15 2 2 ; R15 := R15(R16)
	85	[2344]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 92
	86	[2344]	JMP      	92 ; PC := 92
	87	[2344]	GETTABLE 	R14 R2 K0 ; R14 := R2["maxWaveNum"]
	88	[2344]	LT       	0 K1 R14 ; if 0.000000 >= R14 then PC := 92
	89	[2344]	JMP      	92 ; PC := 92
	90	[2345]	OP_LOADBOOL	R5 1 0 ; R5 := true
	91	[2345]	JMP      	103 ; PC := 103
	92	[2346]	GETTABLE 	R14 R13 K21 ; R14 := R13["mScoreVar"]
	93	[2346]	GETGLOBAL	R15 K16 ; R15 := 0x0469f296
	94	[2346]	LOADK    	R16 K26 ; R16 := "FomorianEventScore"
	95	[2346]	CALL     	R15 2 2 ; R15 := R15(R16)
	96	[2346]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 103
	97	[2346]	JMP      	103 ; PC := 103
	98	[2347]	NEWTABLE 	R14 0 1 ; R14 := {}
	99	[2347]	SETTABLE 	R14 K27 K20 ; R14["VALUE"] := ""
	100	[2347]	MOVE     	R8 R14 ; R8 := R14
	101	[2349]	JMP      	103 ; PC := 103
	102	[2334]	FORLOOP  	R9 43 ; R9 += R11; if R9 <= R10 then begin PC := 43; R12 := R9 end
	103	[2353]	GETGLOBAL	R14 K28 ; R14 := 0xae91e43b
	104	[2353]	SELF     	R14 R14 K29 ; R15 := R14; R14 := R14[0x42b04007]
	105	[2353]	MOVE     	R16 R6 ; R16 := R6
	106	[2353]	OP_LOADBOOL	R17 0 0 ; R17 := false
	107	[2353]	MOVE     	R18 R8 ; R18 := R8
	108	[2353]	CALL     	R14 5 2 ; R14 := R14(R15,R16,R17,R18)
	109	[2353]	MOVE     	R1 R14 ; R1 := R14
	110	[2353]	JMP      	171 ; PC := 171
	111	[2355]	TEST     	R3 0 ; if not R3 then PC := 171
	112	[2355]	JMP      	171 ; PC := 171
	113	[2356]	GETUPVAL 	R14 U4 ; R14 := U4
	114	[2356]	CALL     	R14 1 2 ; R14 := R14()
	115	[2356]	TEST     	R14 0 ; if not R14 then PC := 124
	116	[2356]	JMP      	124 ; PC := 124
	117	[2357]	GETGLOBAL	R14 K28 ; R14 := 0xae91e43b
	118	[2357]	SELF     	R14 R14 K29 ; R15 := R14; R14 := R14[0x42b04007]
	119	[2357]	LOADK    	R16 K30 ; R16 := "/Lotus/Language/Menu/Profile_Wave"
	120	[2357]	OP_LOADBOOL	R17 0 0 ; R17 := false
	121	[2357]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	122	[2357]	MOVE     	R1 R14 ; R1 := R14
	123	[2357]	JMP      	171 ; PC := 171
	124	[2358]	GETUPVAL 	R14 U5 ; R14 := U5
	125	[2358]	CALL     	R14 1 2 ; R14 := R14()
	126	[2358]	TEST     	R14 0 ; if not R14 then PC := 135
	127	[2358]	JMP      	135 ; PC := 135
	128	[2359]	GETGLOBAL	R14 K28 ; R14 := 0xae91e43b
	129	[2359]	SELF     	R14 R14 K29 ; R15 := R14; R14 := R14[0x42b04007]
	130	[2359]	LOADK    	R16 K31 ; R16 := "/Lotus/Language/Game/Round"
	131	[2359]	OP_LOADBOOL	R17 0 0 ; R17 := false
	132	[2359]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	133	[2359]	MOVE     	R1 R14 ; R1 := R14
	134	[2359]	JMP      	171 ; PC := 171
	135	[2360]	GETUPVAL 	R14 U2 ; R14 := U2
	136	[2360]	CALL     	R14 1 2 ; R14 := R14()
	137	[2360]	TEST     	R14 0 ; if not R14 then PC := 141
	138	[2360]	JMP      	141 ; PC := 141
	139	[2360]	TEST     	R3 1 ; if R3 then PC := 143
	140	[2360]	JMP      	143 ; PC := 143
	141	[2360]	TEST     	R4 0 ; if not R4 then PC := 150
	142	[2360]	JMP      	150 ; PC := 150
	143	[2361]	GETGLOBAL	R14 K28 ; R14 := 0xae91e43b
	144	[2361]	SELF     	R14 R14 K29 ; R15 := R14; R14 := R14[0x42b04007]
	145	[2361]	LOADK    	R16 K32 ; R16 := "/Lotus/Language/Menu/Profile_Time"
	146	[2361]	OP_LOADBOOL	R17 0 0 ; R17 := false
	147	[2361]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	148	[2361]	MOVE     	R1 R14 ; R1 := R14
	149	[2361]	JMP      	171 ; PC := 171
	150	[2362]	GETUPVAL 	R14 U6 ; R14 := U6
	151	[2362]	CALL     	R14 1 2 ; R14 := R14()
	152	[2362]	TEST     	R14 0 ; if not R14 then PC := 161
	153	[2362]	JMP      	161 ; PC := 161
	154	[2363]	GETGLOBAL	R14 K28 ; R14 := 0xae91e43b
	155	[2363]	SELF     	R14 R14 K29 ; R15 := R14; R14 := R14[0x42b04007]
	156	[2363]	LOADK    	R16 K33 ; R16 := "/Lotus/Language/Menu/Profile_Points"
	157	[2363]	OP_LOADBOOL	R17 0 0 ; R17 := false
	158	[2363]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	159	[2363]	MOVE     	R1 R14 ; R1 := R14
	160	[2363]	JMP      	171 ; PC := 171
	161	[2364]	GETUPVAL 	R14 U7 ; R14 := U7
	162	[2364]	CALL     	R14 1 2 ; R14 := R14()
	163	[2364]	TEST     	R14 0 ; if not R14 then PC := 171
	164	[2364]	JMP      	171 ; PC := 171
	165	[2365]	GETGLOBAL	R14 K28 ; R14 := 0xae91e43b
	166	[2365]	SELF     	R14 R14 K29 ; R15 := R14; R14 := R14[0x42b04007]
	167	[2365]	LOADK    	R16 K7 ; R16 := "/Lotus/Language/Menu/MissionScore"
	168	[2365]	OP_LOADBOOL	R17 0 0 ; R17 := false
	169	[2365]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	170	[2365]	MOVE     	R1 R14 ; R1 := R14
	171	[2369]	TEST     	R5 0 ; if not R5 then PC := 183
	172	[2369]	JMP      	183 ; PC := 183
	173	[2370]	MOVE     	R14 R1 ; R14 := R1
	174	[2370]	LOADK    	R15 K34 ; R15 := "\r"
	175	[2370]	GETUPVAL 	R16 U8 ; R16 := U8
	176	[2370]	GETTABLE 	R16 R16 K35 ; R16 := R16[0x817b1503]
	177	[2370]	GETGLOBAL	R17 K28 ; R17 := 0xae91e43b
	178	[2370]	MOVE     	R18 R0 ; R18 := R0
	179	[2370]	OP_LOADBOOL	R19 0 0 ; R19 := false
	180	[2370]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	181	[2370]	CONCAT   	R1 R14 R16 ; R1 := R14 .. R15 .. R16
	182	[2371]	LOADK    	R0 := 1.000000
	183	[2374]	MOVE     	R14 R1 ; R14 := R1
	184	[2374]	MOVE     	R15 R0 ; R15 := R0
	185	[2374]	RETURN   	R14 3 ; return R14, R15 
	186	[2375]	RETURN   	R0 1 ; return 

function #86 <?:2377,2384> (30 instructions, 120 bytes at 0000016092589B30)
2 params, 7 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[2378]	EQ       	0 R0 K0 ; if R0 ~= "MOST_CC_TIME" then PC := 11
	2	[2378]	JMP      	11 ; PC := 11
	3	[2379]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2379]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x817b1503]
	5	[2379]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	6	[2379]	MOVE     	R4 R1 ; R4 := R1
	7	[2379]	LOADK    	R5 K3 ; R5 := "Compact"
	8	[2379]	TAILCALL 	R2 4 0 ; R2,... := R2(R3,R4,R5)
	9	[2379]	RETURN   	R2 0 ; return R2,... 
	10	[2379]	JMP      	25 ; PC := 25
	11	[2380]	EQ       	1 R0 K4 ; if R0 == "MOST_ACCURATE" then PC := 17
	12	[2380]	JMP      	17 ; PC := 17
	13	[2380]	EQ       	1 R0 K5 ; if R0 == "MOST_DAMAGE" then PC := 17
	14	[2380]	JMP      	17 ; PC := 17
	15	[2380]	EQ       	0 R0 K6 ; if R0 ~= "LEAST_HURT" then PC := 25
	16	[2380]	JMP      	25 ; PC := 25
	17	[2381]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	18	[2381]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x42b04007]
	19	[2381]	LOADK    	R4 K8 ; R4 := "/Lotus/Language/Menu/ProgressPercentage"
	20	[2381]	OP_LOADBOOL	R5 1 0 ; R5 := true
	21	[2381]	NEWTABLE 	R6 0 1 ; R6 := {}
	22	[2381]	SETTABLE 	R6 K9 R1 ; R6["CURRENT"] := R1
	23	[2381]	TAILCALL 	R2 5 0 ; R2,... := R2(R3,R4,R5,R6)
	24	[2381]	RETURN   	R2 0 ; return R2,... 
	25	[2383]	GETUPVAL 	R2 U1 ; R2 := U1
	26	[2383]	GETTABLE 	R2 R2 K10 ; R2 := R2[0x1142c7a8]
	27	[2383]	MOVE     	R3 R1 ; R3 := R1
	28	[2383]	TAILCALL 	R2 2 0 ; R2,... := R2(R3)
	29	[2383]	RETURN   	R2 0 ; return R2,... 
	30	[2384]	RETURN   	R0 1 ; return 

function #87 <?:2387,2802> (1182 instructions, 4728 bytes at 0000016092589EA0)
1 param, 103 slots, 19 upvalues, 0 locals, 215 constants, 0 functions
	1	[2388]	GETGLOBAL	R1 K0 ; R1 := 0x76ea806b
	2	[2388]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x3f3ae64c]
	3	[2388]	LOADK    	R3 := 0.000000
	4	[2388]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[2389]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	6	[2389]	MOVE     	R3 R1 ; R3 := R1
	7	[2389]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[2389]	TEST     	R2 1 ; if R2 then PC := 15
	9	[2389]	JMP      	15 ; PC := 15
	10	[2389]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	11	[2389]	GETGLOBAL	R3 K3 ; R3 := mGameData
	12	[2389]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[2389]	TEST     	R2 0 ; if not R2 then PC := 16
	14	[2389]	JMP      	16 ; PC := 16
	15	[2390]	RETURN   	R0 1 ; return 
	16	[2393]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0x5ca33548]
	17	[2393]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[2395]	OP_LOADBOOL	R3 0 0 ; R3 := false
	19	[2396]	LOADNIL  	R4 R4 ; R4 := nil
	20	[2397]	GETUPVAL 	R5 U0 ; R5 := U0
	21	[2397]	GETTABLE 	R5 R5 K5 ; R5 := R5[0xcdc34211]
	22	[2397]	CALL     	R5 1 2 ; R5 := R5()
	23	[2398]	TEST     	R5 1 ; if R5 then PC := 36
	24	[2398]	JMP      	36 ; PC := 36
	25	[2398]	GETGLOBAL	R6 K3 ; R6 := mGameData
	26	[2398]	SELF     	R6 R6 K6 ; R7 := R6; R6 := R6[0x01f12112]
	27	[2398]	CALL     	R6 2 2 ; R6 := R6(R7)
	28	[2398]	TEST     	R6 0 ; if not R6 then PC := 36
	29	[2398]	JMP      	36 ; PC := 36
	30	[2399]	GETGLOBAL	R6 K3 ; R6 := mGameData
	31	[2399]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x79e70384]
	32	[2399]	CALL     	R6 2 2 ; R6 := R6(R7)
	33	[2399]	MOVE     	R4 R6 ; R4 := R6
	34	[2400]	OP_LOADBOOL	R3 1 0 ; R3 := true
	35	[2400]	JMP      	40 ; PC := 40
	36	[2402]	GETGLOBAL	R6 K3 ; R6 := mGameData
	37	[2402]	SELF     	R6 R6 K8 ; R7 := R6; R6 := R6[0xa8c9f8a6]
	38	[2402]	CALL     	R6 2 2 ; R6 := R6(R7)
	39	[2402]	MOVE     	R4 R6 ; R4 := R6
	40	[2404]	GETUPVAL 	R6 U1 ; R6 := U1
	41	[2404]	CALL     	R6 1 2 ; R6 := R6()
	42	[2406]	LEN      	R7 R4 ; R7 := # R4
	43	[2409]	LOADK    	R8 := 0.000000
	44	[2410]	LOADK    	R9 := 0.000000
	45	[2411]	LOADK    	R10 := 1.000000
	46	[2411]	MOVE     	R11 R7 ; R11 := R7
	47	[2411]	LOADK    	R12 := 1.000000
	48	[2411]	FORPREP  	R10 55 ; R10 -= R12; PC := 55
	49	[2412]	GETTABLE 	R14 R4 R13 ; R14 := R4[R13]
	50	[2412]	GETTABLE 	R14 R14 K9 ; R14 := R14["damageDealt"]
	51	[2412]	ADD      	R8 R8 R14 ; R8 := R8 + R14
	52	[2413]	GETTABLE 	R14 R4 R13 ; R14 := R4[R13]
	53	[2413]	GETTABLE 	R14 R14 K10 ; R14 := R14["damageTaken"]
	54	[2413]	ADD      	R9 R9 R14 ; R9 := R9 + R14
	55	[2411]	FORLOOP  	R10 49 ; R10 += R12; if R10 <= R11 then begin PC := 49; R13 := R10 end
	56	[2417]	GETUPVAL 	R14 U2 ; R14 := U2
	57	[2417]	CALL     	R14 1 2 ; R14 := R14()
	58	[2422]	LOADK    	R15 := 1.000000
	59	[2423]	LEN      	R16 R4 ; R16 := # R4
	60	[2423]	LE       	0 R15 R16 ; if R15 > R16 then PC := 145
	61	[2423]	JMP      	145 ; PC := 145
	62	[2424]	OP_LOADBOOL	R16 0 0 ; R16 := false
	63	[2425]	LOADNIL  	R17 R17 ; R17 := nil
	64	[2426]	LOADK    	R18 := 1.000000
	65	[2426]	LEN      	R19 R14 ; R19 := # R14
	66	[2426]	LOADK    	R20 := 1.000000
	67	[2426]	FORPREP  	R18 76 ; R18 -= R20; PC := 76
	68	[2427]	GETTABLE 	R22 R14 R21 ; R22 := R14[R21]
	69	[2427]	GETTABLE 	R22 R22 K11 ; R22 := R22["name"]
	70	[2427]	GETTABLE 	R23 R4 R15 ; R23 := R4[R15]
	71	[2427]	GETTABLE 	R23 R23 K12 ; R23 := R23["playerName"]
	72	[2427]	EQ       	0 R22 R23 ; if R22 ~= R23 then PC := 76
	73	[2427]	JMP      	76 ; PC := 76
	74	[2428]	GETTABLE 	R17 R14 R21 ; R17 := R14[R21]
	75	[2429]	OP_LOADBOOL	R16 1 0 ; R16 := true
	76	[2426]	FORLOOP  	R18 68 ; R18 += R20; if R18 <= R19 then begin PC := 68; R21 := R18 end
	77	[2433]	TEST     	R16 0 ; if not R16 then PC := 81
	78	[2433]	JMP      	81 ; PC := 81
	79	[2434]	ADD      	R15 R15 K13 ; R15 := R15 + 1.000000
	80	[2434]	JMP      	86 ; PC := 86
	81	[2436]	GETGLOBAL	R22 K14 ; R22 := 0x33bdd652
	82	[2436]	GETTABLE 	R22 R22 K15 ; R22 := R22[0x9c1f3b5a]
	83	[2436]	MOVE     	R23 R4 ; R23 := R4
	84	[2436]	MOVE     	R24 R15 ; R24 := R15
	85	[2436]	CALL     	R22 3 1 ; R22(R23,R24)
	86	[2440]	GETGLOBAL	R22 K2 ; R22 := 0x7b998233
	87	[2440]	MOVE     	R23 R17 ; R23 := R17
	88	[2440]	CALL     	R22 2 2 ; R22 := R22(R23)
	89	[2440]	TEST     	R22 1 ; if R22 then PC := 59
	90	[2440]	JMP      	59 ; PC := 59
	91	[2442]	GETUPVAL 	R22 U0 ; R22 := U0
	92	[2442]	GETTABLE 	R22 R22 K16 ; R22 := R22[0xf002fb6a]
	93	[2442]	GETGLOBAL	R23 K17 ; R23 := 0xae91e43b
	94	[2442]	MOVE     	R24 R17 ; R24 := R17
	95	[2442]	MOVE     	R25 R6 ; R25 := R6
	96	[2442]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	97	[2443]	LOADK    	R23 K18 ; R23 := ""
	98	[2445]	GETGLOBAL	R24 K2 ; R24 := 0x7b998233
	99	[2445]	GETTABLE 	R25 R22 K19 ; R25 := R22["NameWithRank"]
	100	[2445]	CALL     	R24 2 2 ; R24 := R24(R25)
	101	[2445]	TEST     	R24 1 ; if R24 then PC := 59
	102	[2445]	JMP      	59 ; PC := 59
	103	[2445]	GETGLOBAL	R24 K2 ; R24 := 0x7b998233
	104	[2445]	GETTABLE 	R25 R22 K20 ; R25 := R22["Name"]
	105	[2445]	CALL     	R24 2 2 ; R24 := R24(R25)
	106	[2445]	TEST     	R24 1 ; if R24 then PC := 59
	107	[2445]	JMP      	59 ; PC := 59
	108	[2446]	GETGLOBAL	R24 K2 ; R24 := 0x7b998233
	109	[2446]	GETTABLE 	R25 R22 K21 ; R25 := R22["WeaponInfo"]
	110	[2446]	CALL     	R24 2 2 ; R24 := R24(R25)
	111	[2446]	TEST     	R24 1 ; if R24 then PC := 116
	112	[2446]	JMP      	116 ; PC := 116
	113	[2447]	MOVE     	R24 R23 ; R24 := R23
	114	[2447]	GETTABLE 	R25 R22 K21 ; R25 := R22["WeaponInfo"]
	115	[2447]	CONCAT   	R23 R24 R25 ; R23 := R24 .. R25
	116	[2449]	GETGLOBAL	R24 K2 ; R24 := 0x7b998233
	117	[2449]	GETTABLE 	R25 R22 K22 ; R25 := R22["CompanionInfo"]
	118	[2449]	CALL     	R24 2 2 ; R24 := R24(R25)
	119	[2449]	TEST     	R24 1 ; if R24 then PC := 124
	120	[2449]	JMP      	124 ; PC := 124
	121	[2450]	MOVE     	R24 R23 ; R24 := R23
	122	[2450]	GETTABLE 	R25 R22 K22 ; R25 := R22["CompanionInfo"]
	123	[2450]	CONCAT   	R23 R24 R25 ; R23 := R24 .. R25
	124	[2452]	GETGLOBAL	R24 K2 ; R24 := 0x7b998233
	125	[2452]	GETTABLE 	R25 R22 K23 ; R25 := R22["AuraInfo"]
	126	[2452]	CALL     	R24 2 2 ; R24 := R24(R25)
	127	[2452]	TEST     	R24 1 ; if R24 then PC := 132
	128	[2452]	JMP      	132 ; PC := 132
	129	[2453]	MOVE     	R24 R23 ; R24 := R23
	130	[2453]	GETTABLE 	R25 R22 K23 ; R25 := R22["AuraInfo"]
	131	[2453]	CONCAT   	R23 R24 R25 ; R23 := R24 .. R25
	132	[2455]	EQ       	1 R23 K18 ; if R23 == "" then PC := 59
	133	[2455]	JMP      	59 ; PC := 59
	134	[2456]	GETGLOBAL	R24 K14 ; R24 := 0x33bdd652
	135	[2456]	GETTABLE 	R24 R24 K24 ; R24 := R24[0x23d5322f]
	136	[2456]	GETGLOBAL	R25 K25 ; R25 := mSquadLoadoutsInfo
	137	[2456]	NEWTABLE 	R26 0 3 ; R26 := {}
	138	[2456]	GETTABLE 	R27 R22 K20 ; R27 := R22["Name"]
	139	[2456]	SETTABLE 	R26 K20 R27 ; R26["Name"] := R27
	140	[2456]	GETTABLE 	R27 R22 K19 ; R27 := R22["NameWithRank"]
	141	[2456]	SETTABLE 	R26 K19 R27 ; R26["NameWithRank"] := R27
	142	[2456]	SETTABLE 	R26 K26 R23 ; R26["LoadoutDesc"] := R23
	143	[2456]	CALL     	R24 3 1 ; R24(R25,R26)
	144	[2459]	JMP      	59 ; PC := 59
	145	[2462]	GETGLOBAL	R24 K27 ; R24 := _T
	146	[2462]	GETTABLE 	R24 R24 K28 ; R24 := R24["TestPlayerCount"]
	147	[2462]	EQ       	1 R24 K29 ; if R24 == nil then PC := 165
	148	[2462]	JMP      	165 ; PC := 165
	149	[2462]	LEN      	R24 R4 ; R24 := # R4
	150	[2462]	LT       	0 K30 R24 ; if 0.000000 >= R24 then PC := 165
	151	[2462]	JMP      	165 ; PC := 165
	152	[2463]	LOADK    	R24 := 1.000000
	153	[2463]	GETGLOBAL	R25 K27 ; R25 := _T
	154	[2463]	GETTABLE 	R25 R25 K28 ; R25 := R25["TestPlayerCount"]
	155	[2463]	LEN      	R26 R4 ; R26 := # R4
	156	[2463]	SUB      	R25 R25 R26 ; R25 := R25 - R26
	157	[2463]	LOADK    	R26 := 1.000000
	158	[2463]	FORPREP  	R24 164 ; R24 -= R26; PC := 164
	159	[2464]	GETGLOBAL	R28 K14 ; R28 := 0x33bdd652
	160	[2464]	GETTABLE 	R28 R28 K24 ; R28 := R28[0x23d5322f]
	161	[2464]	MOVE     	R29 R4 ; R29 := R4
	162	[2464]	GETTABLE 	R30 R4 R27 ; R30 := R4[R27]
	163	[2464]	CALL     	R28 3 1 ; R28(R29,R30)
	164	[2463]	FORLOOP  	R24 159 ; R24 += R26; if R24 <= R25 then begin PC := 159; R27 := R24 end
	165	[2468]	LEN      	R7 R4 ; R7 := # R4
	166	[2471]	NEWTABLE 	R28 0 0 ; R28 := {}
	167	[2471]	SETGLOBALHASH	R28 K31 ; mStatTable := R28
	168	[2474]	GETGLOBAL	R28 K3 ; R28 := mGameData
	169	[2474]	SELF     	R28 R28 K32 ; R29 := R28; R28 := R28[0x5b050396]
	170	[2474]	CALL     	R28 2 2 ; R28 := R28(R29)
	171	[2476]	OP_LOADBOOL	R29 0 0 ; R29 := false
	172	[2476]	SETGLOBALHASH	R29 K33 ; mMissionSuccessful := R29
	173	[2477]	LOADK    	R29 := 1.000000
	174	[2477]	MOVE     	R30 R7 ; R30 := R7
	175	[2477]	LOADK    	R31 := 1.000000
	176	[2477]	FORPREP  	R29 650 ; R29 -= R31; PC := 650
	177	[2479]	GETTABLE 	R33 R4 R32 ; R33 := R4[R32]
	178	[2481]	LOADK    	R34 := 0.000000
	179	[2482]	LOADK    	R35 := 0.000000
	180	[2483]	LT       	0 K30 R8 ; if 0.000000 >= R8 then PC := 184
	181	[2483]	JMP      	184 ; PC := 184
	182	[2484]	GETTABLE 	R36 R33 K9 ; R36 := R33["damageDealt"]
	183	[2484]	DIV      	R34 R36 R8 ; R34 := R36 / R8
	184	[2486]	LT       	0 K30 R9 ; if 0.000000 >= R9 then PC := 188
	185	[2486]	JMP      	188 ; PC := 188
	186	[2487]	GETTABLE 	R36 R33 K10 ; R36 := R33["damageTaken"]
	187	[2487]	DIV      	R35 R36 R9 ; R35 := R36 / R9
	188	[2489]	GETUPVAL 	R36 U3 ; R36 := U3
	189	[2489]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	190	[2489]	LOADK    	R38 K34 ; R38 := "/Lotus/Language/Menu/MissionStats_DamageDealt"
	191	[2489]	MOVE     	R39 R34 ; R39 := R34
	192	[2489]	OP_LOADBOOL	R40 1 0 ; R40 := true
	193	[2489]	OP_LOADBOOL	R41 1 0 ; R41 := true
	194	[2489]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	195	[2489]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	196	[2490]	GETUPVAL 	R36 U3 ; R36 := U3
	197	[2490]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	198	[2490]	LOADK    	R38 K35 ; R38 := "/Lotus/Language/Menu/MissionStats_DamageTaken"
	199	[2490]	MOVE     	R39 R35 ; R39 := R35
	200	[2490]	OP_LOADBOOL	R40 0 0 ; R40 := false
	201	[2490]	OP_LOADBOOL	R41 1 0 ; R41 := true
	202	[2490]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	203	[2490]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	204	[2491]	GETUPVAL 	R36 U3 ; R36 := U3
	205	[2491]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	206	[2491]	LOADK    	R38 K36 ; R38 := "/Lotus/Language/Menu/Profile_TotalKills"
	207	[2491]	GETTABLE 	R39 R33 K37 ; R39 := R33["kills"]
	208	[2491]	OP_LOADBOOL	R40 1 0 ; R40 := true
	209	[2491]	OP_LOADBOOL	R41 0 0 ; R41 := false
	210	[2491]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	211	[2491]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	212	[2492]	GETUPVAL 	R36 U3 ; R36 := U3
	213	[2492]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	214	[2492]	LOADK    	R38 K38 ; R38 := "/Lotus/Language/Menu/MissionStats_HeadShots"
	215	[2492]	GETTABLE 	R39 R33 K39 ; R39 := R33["headshots"]
	216	[2492]	OP_LOADBOOL	R40 1 0 ; R40 := true
	217	[2492]	OP_LOADBOOL	R41 0 0 ; R41 := false
	218	[2492]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	219	[2492]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	220	[2493]	GETUPVAL 	R36 U3 ; R36 := U3
	221	[2493]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	222	[2493]	LOADK    	R38 K40 ; R38 := "/Lotus/Language/Menu/MissionStats_MeleeKills"
	223	[2493]	GETTABLE 	R39 R33 K41 ; R39 := R33["meleeKills"]
	224	[2493]	OP_LOADBOOL	R40 1 0 ; R40 := true
	225	[2493]	OP_LOADBOOL	R41 0 0 ; R41 := false
	226	[2493]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	227	[2493]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	228	[2494]	GETUPVAL 	R36 U3 ; R36 := U3
	229	[2494]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	230	[2494]	LOADK    	R38 K42 ; R38 := "/Lotus/Language/Menu/Profile_Deaths"
	231	[2494]	GETTABLE 	R39 R33 K43 ; R39 := R33["deaths"]
	232	[2494]	OP_LOADBOOL	R40 0 0 ; R40 := false
	233	[2494]	OP_LOADBOOL	R41 0 0 ; R41 := false
	234	[2494]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	235	[2494]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	236	[2495]	GETUPVAL 	R36 U3 ; R36 := U3
	237	[2495]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	238	[2495]	LOADK    	R38 K44 ; R38 := "/Lotus/Language/Menu/MissionStats_UpgradesReceived"
	239	[2495]	GETTABLE 	R39 R33 K45 ; R39 := R33["upgradesReceived"]
	240	[2495]	OP_LOADBOOL	R40 1 0 ; R40 := true
	241	[2495]	OP_LOADBOOL	R41 0 0 ; R41 := false
	242	[2495]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	243	[2495]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	244	[2496]	GETUPVAL 	R36 U3 ; R36 := U3
	245	[2496]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	246	[2496]	LOADK    	R38 K46 ; R38 := "/Lotus/Language/Menu/MissionStats_AbilitiesUsed"
	247	[2496]	GETTABLE 	R39 R33 K47 ; R39 := R33["abilitiesUsed"]
	248	[2496]	OP_LOADBOOL	R40 1 0 ; R40 := true
	249	[2496]	OP_LOADBOOL	R41 0 0 ; R41 := false
	250	[2496]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	251	[2496]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	252	[2498]	GETGLOBAL	R36 K27 ; R36 := _T
	253	[2498]	GETTABLE 	R36 R36 K48 ; R36 := R36["TestStatCount"]
	254	[2498]	TEST     	R36 0 ; if not R36 then PC := 320
	255	[2498]	JMP      	320 ; PC := 320
	256	[2499]	GETUPVAL 	R36 U3 ; R36 := U3
	257	[2499]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	258	[2499]	LOADK    	R38 K49 ; R38 := "test1"
	259	[2499]	MOVE     	R39 R34 ; R39 := R34
	260	[2499]	OP_LOADBOOL	R40 1 0 ; R40 := true
	261	[2499]	OP_LOADBOOL	R41 1 0 ; R41 := true
	262	[2499]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	263	[2499]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	264	[2500]	GETUPVAL 	R36 U3 ; R36 := U3
	265	[2500]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	266	[2500]	LOADK    	R38 K50 ; R38 := "test2"
	267	[2500]	MOVE     	R39 R35 ; R39 := R35
	268	[2500]	OP_LOADBOOL	R40 0 0 ; R40 := false
	269	[2500]	OP_LOADBOOL	R41 1 0 ; R41 := true
	270	[2500]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	271	[2500]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	272	[2501]	GETUPVAL 	R36 U3 ; R36 := U3
	273	[2501]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	274	[2501]	LOADK    	R38 K51 ; R38 := "test3"
	275	[2501]	GETTABLE 	R39 R33 K37 ; R39 := R33["kills"]
	276	[2501]	OP_LOADBOOL	R40 1 0 ; R40 := true
	277	[2501]	OP_LOADBOOL	R41 0 0 ; R41 := false
	278	[2501]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	279	[2501]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	280	[2502]	GETUPVAL 	R36 U3 ; R36 := U3
	281	[2502]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	282	[2502]	LOADK    	R38 K52 ; R38 := "test4"
	283	[2502]	GETTABLE 	R39 R33 K39 ; R39 := R33["headshots"]
	284	[2502]	OP_LOADBOOL	R40 1 0 ; R40 := true
	285	[2502]	OP_LOADBOOL	R41 0 0 ; R41 := false
	286	[2502]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	287	[2502]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	288	[2503]	GETUPVAL 	R36 U3 ; R36 := U3
	289	[2503]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	290	[2503]	LOADK    	R38 K53 ; R38 := "test5"
	291	[2503]	GETTABLE 	R39 R33 K41 ; R39 := R33["meleeKills"]
	292	[2503]	OP_LOADBOOL	R40 1 0 ; R40 := true
	293	[2503]	OP_LOADBOOL	R41 0 0 ; R41 := false
	294	[2503]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	295	[2503]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	296	[2504]	GETUPVAL 	R36 U3 ; R36 := U3
	297	[2504]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	298	[2504]	LOADK    	R38 K54 ; R38 := "test6"
	299	[2504]	GETTABLE 	R39 R33 K43 ; R39 := R33["deaths"]
	300	[2504]	OP_LOADBOOL	R40 0 0 ; R40 := false
	301	[2504]	OP_LOADBOOL	R41 0 0 ; R41 := false
	302	[2504]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	303	[2504]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	304	[2505]	GETUPVAL 	R36 U3 ; R36 := U3
	305	[2505]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	306	[2505]	LOADK    	R38 K55 ; R38 := "test7"
	307	[2505]	GETTABLE 	R39 R33 K45 ; R39 := R33["upgradesReceived"]
	308	[2505]	OP_LOADBOOL	R40 1 0 ; R40 := true
	309	[2505]	OP_LOADBOOL	R41 0 0 ; R41 := false
	310	[2505]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	311	[2505]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	312	[2506]	GETUPVAL 	R36 U3 ; R36 := U3
	313	[2506]	GETGLOBAL	R37 K31 ; R37 := mStatTable
	314	[2506]	LOADK    	R38 K56 ; R38 := "test8"
	315	[2506]	GETTABLE 	R39 R33 K47 ; R39 := R33["abilitiesUsed"]
	316	[2506]	OP_LOADBOOL	R40 1 0 ; R40 := true
	317	[2506]	OP_LOADBOOL	R41 0 0 ; R41 := false
	318	[2506]	CALL     	R36 6 2 ; R36 := R36(R37,R38,R39,R40,R41)
	319	[2506]	SETGLOBALHASH	R36 K31 ; mStatTable := R36
	320	[2509]	LOADK    	R36 := 0.000000
	321	[2510]	GETTABLE 	R37 R33 K57 ; R37 := R33["fireCount"]
	322	[2510]	GETTABLE 	R38 R33 K58 ; R38 := R33["fireMeleeCount"]
	323	[2510]	SUB      	R37 R37 R38 ; R37 := R37 - R38
	324	[2511]	LT       	0 K30 R37 ; if 0.000000 >= R37 then PC := 328
	325	[2511]	JMP      	328 ; PC := 328
	326	[2512]	GETTABLE 	R38 R33 K59 ; R38 := R33["hitCount"]
	327	[2512]	DIV      	R36 R38 R37 ; R36 := R38 / R37
	328	[2514]	GETUPVAL 	R38 U3 ; R38 := U3
	329	[2514]	GETGLOBAL	R39 K31 ; R39 := mStatTable
	330	[2514]	LOADK    	R40 K60 ; R40 := "/Lotus/Language/Menu/MissionStats_FireAccuracy"
	331	[2514]	MOVE     	R41 R36 ; R41 := R36
	332	[2514]	OP_LOADBOOL	R42 1 0 ; R42 := true
	333	[2514]	OP_LOADBOOL	R43 1 0 ; R43 := true
	334	[2514]	CALL     	R38 6 2 ; R38 := R38(R39,R40,R41,R42,R43)
	335	[2514]	SETGLOBALHASH	R38 K31 ; mStatTable := R38
	336	[2515]	GETUPVAL 	R38 U3 ; R38 := U3
	337	[2515]	GETGLOBAL	R39 K31 ; R39 := mStatTable
	338	[2515]	LOADK    	R40 K61 ; R40 := "/Lotus/Language/Menu/MissionStats_PickupCount"
	339	[2515]	GETTABLE 	R41 R33 K62 ; R41 := R33["pickupCount"]
	340	[2515]	OP_LOADBOOL	R42 1 0 ; R42 := true
	341	[2515]	OP_LOADBOOL	R43 0 0 ; R43 := false
	342	[2515]	CALL     	R38 6 2 ; R38 := R38(R39,R40,R41,R42,R43)
	343	[2515]	SETGLOBALHASH	R38 K31 ; mStatTable := R38
	344	[2516]	GETUPVAL 	R38 U3 ; R38 := U3
	345	[2516]	GETGLOBAL	R39 K31 ; R39 := mStatTable
	346	[2516]	LOADK    	R40 K63 ; R40 := "/Lotus/Language/Menu/MissionStats_Revives"
	347	[2516]	GETTABLE 	R41 R33 K64 ; R41 := R33["revives"]
	348	[2516]	OP_LOADBOOL	R42 1 0 ; R42 := true
	349	[2516]	OP_LOADBOOL	R43 0 0 ; R43 := false
	350	[2516]	CALL     	R38 6 2 ; R38 := R38(R39,R40,R41,R42,R43)
	351	[2516]	SETGLOBALHASH	R38 K31 ; mStatTable := R38
	352	[2519]	GETGLOBAL	R38 K65 ; R38 := 0x03f57322
	353	[2519]	GETUPVAL 	R39 U4 ; R39 := U4
	354	[2519]	GETTABLE 	R39 R39 K66 ; R39 := R39[0x74a11ec6]
	355	[2519]	GETTABLE 	R40 R33 K67 ; R40 := R33["playerMissionInfo"]
	356	[2519]	GETTABLE 	R40 R40 K68 ; R40 := R40["mMissionRating"]
	357	[2519]	LOADK    	R41 := 2.000000
	358	[2519]	CALL     	R39 3 0 ; R39,... := R39(R40,R41)
	359	[2519]	CALL     	R38 0 2 ; R38 := R38(R39,...)
	360	[2519]	MUL      	R38 K69 R38 ; R38 := 100.000000 * R38
	361	[2522]	TEST     	R3 1 ; if R3 then PC := 403
	362	[2522]	JMP      	403 ; PC := 403
	363	[2522]	GETTABLE 	R39 R33 K12 ; R39 := R33["playerName"]
	364	[2522]	EQ       	0 R39 R2 ; if R39 ~= R2 then PC := 403
	365	[2522]	JMP      	403 ; PC := 403
	366	[2522]	LT       	0 K30 R38 ; if 0.000000 >= R38 then PC := 403
	367	[2522]	JMP      	403 ; PC := 403
	368	[2522]	GETGLOBAL	R39 K70 ; R39 := 0x34291f5c
	369	[2522]	GETTABLE 	R39 R39 K71 ; R39 := R39[0x9ad21ae9]
	370	[2522]	CALL     	R39 1 2 ; R39 := R39()
	371	[2522]	TEST     	R39 0 ; if not R39 then PC := 403
	372	[2522]	JMP      	403 ; PC := 403
	373	[2522]	GETTABLE 	R39 R6 K72 ; R39 := R6["alertId"]
	374	[2522]	EQ       	1 R39 K18 ; if R39 == "" then PC := 403
	375	[2522]	JMP      	403 ; PC := 403
	376	[2522]	GETTABLE 	R39 R6 K73 ; R39 := R6["alertTag"]
	377	[2522]	EQ       	1 R39 K18 ; if R39 == "" then PC := 403
	378	[2522]	JMP      	403 ; PC := 403
	379	[2523]	GETGLOBAL	R39 K74 ; R39 := 0x89326c93
	380	[2523]	SELF     	R39 R39 K75 ; R40 := R39; R39 := R39[0xfb64e76c]
	381	[2523]	CALL     	R39 2 2 ; R39 := R39(R40)
	382	[2524]	GETGLOBAL	R40 K2 ; R40 := 0x7b998233
	383	[2524]	MOVE     	R41 R39 ; R41 := R39
	384	[2524]	CALL     	R40 2 2 ; R40 := R40(R41)
	385	[2524]	TEST     	R40 1 ; if R40 then PC := 403
	386	[2524]	JMP      	403 ; PC := 403
	387	[2525]	LOADK    	R40 K76 ; R40 := "ALERT_"
	388	[2525]	GETGLOBAL	R41 K77 ; R41 := 0x7f5022cf
	389	[2525]	GETTABLE 	R41 R41 K78 ; R41 := R41[0x3f3e4d12]
	390	[2525]	GETGLOBAL	R42 K79 ; R42 := 0x64fb1586
	391	[2525]	GETTABLE 	R43 R6 K73 ; R43 := R6["alertTag"]
	392	[2525]	CALL     	R42 2 0 ; R42,... := R42(R43)
	393	[2525]	CALL     	R41 0 2 ; R41 := R41(R42,...)
	394	[2525]	LOADK    	R42 K80 ; R42 := "_COMPLETED"
	395	[2525]	CONCAT   	R40 R40 R42 ; R40 := R40 .. R41 .. R42
	396	[2526]	GETGLOBAL	R41 K81 ; R41 := 0xba7dfcd2
	397	[2526]	SELF     	R41 R41 K82 ; R42 := R41; R41 := R41[0xf056b179]
	398	[2526]	MOVE     	R43 R39 ; R43 := R39
	399	[2526]	GETGLOBAL	R44 K83 ; R44 := 0x0469f296
	400	[2526]	MOVE     	R45 R40 ; R45 := R40
	401	[2526]	CALL     	R44 2 0 ; R44,... := R44(R45)
	402	[2526]	CALL     	R41 0 1 ; R41(R42,...)
	403	[2531]	TEST     	R5 1 ; if R5 then PC := 650
	404	[2531]	JMP      	650 ; PC := 650
	405	[2532]	GETTABLE 	R41 R33 K67 ; R41 := R33["playerMissionInfo"]
	406	[2532]	GETTABLE 	R41 R41 K84 ; R41 := R41["mIsMissionCompleted"]
	407	[2533]	LT       	1 K30 R38 ; if 0.000000 < R38 then PC := 411
	408	[2533]	JMP      	411 ; PC := 411
	409	[2533]	TEST     	R41 0 ; if not R41 then PC := 413
	410	[2533]	JMP      	413 ; PC := 413
	411	[2534]	OP_LOADBOOL	R42 1 0 ; R42 := true
	412	[2534]	SETGLOBALHASH	R42 K33 ; mMissionSuccessful := R42
	413	[2538]	GETTABLE 	R42 R33 K12 ; R42 := R33["playerName"]
	414	[2538]	EQ       	0 R42 R2 ; if R42 ~= R2 then PC := 650
	415	[2538]	JMP      	650 ; PC := 650
	416	[2540]	LOADK    	R42 := 0.000000
	417	[2541]	GETTABLE 	R43 R33 K67 ; R43 := R33["playerMissionInfo"]
	418	[2542]	GETTABLE 	R44 R43 K85 ; R44 := R43["mScore"]
	419	[2542]	LT       	0 K30 R44 ; if 0.000000 >= R44 then PC := 432
	420	[2542]	JMP      	432 ; PC := 432
	421	[2543]	GETUPVAL 	R44 U4 ; R44 := U4
	422	[2543]	GETTABLE 	R44 R44 K86 ; R44 := R44[0x06d055f9]
	423	[2543]	GETGLOBAL	R45 K33 ; R45 := mMissionSuccessful
	424	[2543]	EQ       	1 R45 K87 ; if R45 == false then PC := 427
	425	[2543]	JMP      	427 ; PC := 427
	426	[2543]	OP_LOADBOOL	R45 0 1 ; R45 := false; PC := 427
	427	[2543]	OP_LOADBOOL	R45 1 0 ; R45 := true
	428	[2543]	LOADK    	R46 := 0.000000
	429	[2543]	GETTABLE 	R47 R43 K85 ; R47 := R43["mScore"]
	430	[2543]	CALL     	R44 4 2 ; R44 := R44(R45,R46,R47)
	431	[2543]	MOVE     	R42 R44 ; R42 := R44
	432	[2546]	LT       	0 K30 R42 ; if 0.000000 >= R42 then PC := 458
	433	[2546]	JMP      	458 ; PC := 458
	434	[2546]	GETTABLE 	R44 R6 K88 ; R44 := R6["goalTag"]
	435	[2546]	GETGLOBAL	R45 K83 ; R45 := 0x0469f296
	436	[2546]	LOADK    	R46 K89 ; R46 := "KelaEvent"
	437	[2546]	CALL     	R45 2 2 ; R45 := R45(R46)
	438	[2546]	EQ       	1 R44 R45 ; if R44 == R45 then PC := 458
	439	[2546]	JMP      	458 ; PC := 458
	440	[2547]	GETUPVAL 	R44 U5 ; R44 := U5
	441	[2547]	MOVE     	R45 R42 ; R45 := R42
	442	[2547]	CALL     	R44 2 3 ; R44,R45 := R44(R45)
	443	[2548]	TEST     	R44 0 ; if not R44 then PC := 458
	444	[2548]	JMP      	458 ; PC := 458
	445	[2549]	GETGLOBAL	R46 K14 ; R46 := 0x33bdd652
	446	[2549]	GETTABLE 	R46 R46 K24 ; R46 := R46[0x23d5322f]
	447	[2549]	GETGLOBAL	R47 K90 ; R47 := mOtherStuff
	448	[2549]	NEWTABLE 	R48 0 6 ; R48 := {}
	449	[2549]	SETTABLE 	R48 K20 R44 ; R48["Name"] := R44
	450	[2549]	SETTABLE 	R48 K91 R45 ; R48["Count"] := R45
	451	[2549]	SETTABLE 	R48 K92 K93 ; R48["SortPriority"] := 25.000000
	452	[2549]	GETUPVAL 	R49 U6 ; R49 := U6
	453	[2549]	CALL     	R49 1 2 ; R49 := R49()
	454	[2549]	SETTABLE 	R48 K94 R49 ; R48["Icon"] := R49
	455	[2549]	SETTABLE 	R48 K95 K96 ; R48["Themed"] := true
	456	[2549]	SETTABLE 	R48 K97 K29 ; R48["Background"] := nil
	457	[2549]	CALL     	R46 3 1 ; R46(R47,R48)
	458	[2553]	GETTABLE 	R46 R43 K98 ; R46 := R43["mNemesisTaxInfo"]
	459	[2554]	GETTABLE 	R47 R46 K99 ; R47 := R46["mTaxedCredits"]
	460	[2555]	GETTABLE 	R48 R43 K100 ; R48 := R43["mTotalCredits"]
	461	[2556]	GETTABLE 	R49 R43 K101 ; R49 := R43["mFinalCredits"]
	462	[2557]	GETTABLE 	R50 R43 K102 ; R50 := R43["mMissionCompleteCreditBonus"]
	463	[2558]	GETTABLE 	R51 R43 K103 ; R51 := R43["mCreditsEarnedInMission"]
	464	[2559]	ADD      	R52 R49 R47 ; R52 := R49 + R47
	465	[2559]	SUB      	R52 R52 R48 ; R52 := R52 - R48
	466	[2561]	LOADK    	R53 := 0.000000
	467	[2562]	GETUPVAL 	R54 U7 ; R54 := U7
	468	[2562]	MOVE     	R55 R53 ; R55 := R53
	469	[2562]	MOVE     	R56 R50 ; R56 := R50
	470	[2562]	LOADK    	R57 K104 ; R57 := "Credits"
	471	[2562]	GETUPVAL 	R58 U4 ; R58 := U4
	472	[2562]	GETTABLE 	R58 R58 K105 ; R58 := R58[0x1142c7a8]
	473	[2562]	MOVE     	R59 R50 ; R59 := R50
	474	[2562]	CALL     	R58 2 2 ; R58 := R58(R59)
	475	[2562]	LOADK    	R59 K106 ; R59 := " "
	476	[2562]	GETGLOBAL	R60 K17 ; R60 := 0xae91e43b
	477	[2562]	SELF     	R60 R60 K107 ; R61 := R60; R60 := R60[0x42b04007]
	478	[2562]	LOADK    	R62 K108 ; R62 := "/Lotus/Language/Menu/MissionStats_CreditsBonus"
	479	[2562]	OP_LOADBOOL	R63 0 0 ; R63 := false
	480	[2562]	CALL     	R60 4 2 ; R60 := R60(R61,R62,R63)
	481	[2562]	CONCAT   	R58 R58 R60 ; R58 := R58 .. R59 .. R60
	482	[2562]	CALL     	R54 5 2 ; R54 := R54(R55,R56,R57,R58)
	483	[2562]	MOVE     	R53 R54 ; R53 := R54
	484	[2563]	GETUPVAL 	R54 U7 ; R54 := U7
	485	[2563]	MOVE     	R55 R53 ; R55 := R53
	486	[2563]	MOVE     	R56 R51 ; R56 := R51
	487	[2563]	LOADK    	R57 K104 ; R57 := "Credits"
	488	[2563]	GETUPVAL 	R58 U4 ; R58 := U4
	489	[2563]	GETTABLE 	R58 R58 K105 ; R58 := R58[0x1142c7a8]
	490	[2563]	MOVE     	R59 R51 ; R59 := R51
	491	[2563]	CALL     	R58 2 2 ; R58 := R58(R59)
	492	[2563]	LOADK    	R59 K106 ; R59 := " "
	493	[2563]	GETGLOBAL	R60 K17 ; R60 := 0xae91e43b
	494	[2563]	SELF     	R60 R60 K107 ; R61 := R60; R60 := R60[0x42b04007]
	495	[2563]	LOADK    	R62 K109 ; R62 := "/Lotus/Language/Menu/MissionStats_MissionCredits"
	496	[2563]	OP_LOADBOOL	R63 0 0 ; R63 := false
	497	[2563]	CALL     	R60 4 2 ; R60 := R60(R61,R62,R63)
	498	[2563]	CONCAT   	R58 R58 R60 ; R58 := R58 .. R59 .. R60
	499	[2563]	CALL     	R54 5 2 ; R54 := R54(R55,R56,R57,R58)
	500	[2563]	MOVE     	R53 R54 ; R53 := R54
	501	[2564]	GETUPVAL 	R54 U7 ; R54 := U7
	502	[2564]	MOVE     	R55 R53 ; R55 := R53
	503	[2564]	MOVE     	R56 R52 ; R56 := R52
	504	[2564]	LOADK    	R57 K104 ; R57 := "Credits"
	505	[2564]	GETUPVAL 	R58 U4 ; R58 := U4
	506	[2564]	GETTABLE 	R58 R58 K105 ; R58 := R58[0x1142c7a8]
	507	[2564]	MOVE     	R59 R52 ; R59 := R52
	508	[2564]	CALL     	R58 2 2 ; R58 := R58(R59)
	509	[2564]	LOADK    	R59 K106 ; R59 := " "
	510	[2564]	GETGLOBAL	R60 K17 ; R60 := 0xae91e43b
	511	[2564]	SELF     	R60 R60 K107 ; R61 := R60; R60 := R60[0x42b04007]
	512	[2564]	LOADK    	R62 K110 ; R62 := "/Lotus/Language/Menu/MissionStats_BoostedCredits"
	513	[2564]	OP_LOADBOOL	R63 0 0 ; R63 := false
	514	[2564]	CALL     	R60 4 2 ; R60 := R60(R61,R62,R63)
	515	[2564]	CONCAT   	R58 R58 R60 ; R58 := R58 .. R59 .. R60
	516	[2564]	CALL     	R54 5 2 ; R54 := R54(R55,R56,R57,R58)
	517	[2564]	MOVE     	R53 R54 ; R53 := R54
	518	[2566]	LT       	0 K30 R53 ; if 0.000000 >= R53 then PC := 540
	519	[2566]	JMP      	540 ; PC := 540
	520	[2567]	GETUPVAL 	R54 U8 ; R54 := U8
	521	[2567]	GETGLOBAL	R55 K77 ; R55 := 0x7f5022cf
	522	[2567]	GETTABLE 	R55 R55 K78 ; R55 := R55[0x3f3e4d12]
	523	[2567]	GETGLOBAL	R56 K17 ; R56 := 0xae91e43b
	524	[2567]	SELF     	R56 R56 K107 ; R57 := R56; R56 := R56[0x42b04007]
	525	[2567]	LOADK    	R58 K111 ; R58 := "/Lotus/Language/Menu/Store_BuyWithCredits"
	526	[2567]	OP_LOADBOOL	R59 0 0 ; R59 := false
	527	[2567]	CALL     	R56 4 0 ; R56,... := R56(R57,R58,R59)
	528	[2567]	CALL     	R55 0 2 ; R55 := R55(R56,...)
	529	[2567]	LOADK    	R56 := 1.000000
	530	[2567]	GETTABLE 	R57 R46 K99 ; R57 := R46["mTaxedCredits"]
	531	[2567]	GETGLOBAL	R58 K112 ; R58 := 0x9afd2e71
	532	[2567]	CALL     	R54 5 2 ; R54 := R54(R55,R56,R57,R58)
	533	[2568]	SETTABLE 	R54 K104 R53 ; R54["Credits"] := R53
	534	[2569]	SETTABLE 	R54 K95 K96 ; R54["Themed"] := true
	535	[2570]	GETGLOBAL	R55 K14 ; R55 := 0x33bdd652
	536	[2570]	GETTABLE 	R55 R55 K24 ; R55 := R55[0x23d5322f]
	537	[2570]	GETGLOBAL	R56 K90 ; R56 := mOtherStuff
	538	[2570]	MOVE     	R57 R54 ; R57 := R54
	539	[2570]	CALL     	R55 3 1 ; R55(R56,R57)
	540	[2573]	OP_LOADBOOL	R55 0 0 ; R55 := false
	541	[2573]	TEST     	R55 0 ; if not R55 then PC := 584
	542	[2573]	JMP      	584 ; PC := 584
	543	[2574]	GETTABLE 	R55 R43 K100 ; R55 := R43["mTotalCredits"]
	544	[2575]	LT       	0 K30 R55 ; if 0.000000 >= R55 then PC := 563
	545	[2575]	JMP      	563 ; PC := 563
	546	[2576]	GETGLOBAL	R56 K14 ; R56 := 0x33bdd652
	547	[2576]	GETTABLE 	R56 R56 K24 ; R56 := R56[0x23d5322f]
	548	[2576]	GETGLOBAL	R57 K90 ; R57 := mOtherStuff
	549	[2576]	GETUPVAL 	R58 U8 ; R58 := U8
	550	[2576]	GETGLOBAL	R59 K77 ; R59 := 0x7f5022cf
	551	[2576]	GETTABLE 	R59 R59 K78 ; R59 := R59[0x3f3e4d12]
	552	[2576]	GETGLOBAL	R60 K17 ; R60 := 0xae91e43b
	553	[2576]	SELF     	R60 R60 K107 ; R61 := R60; R60 := R60[0x42b04007]
	554	[2576]	LOADK    	R62 K113 ; R62 := "/Lotus/Language/Menu/MissionStats_TotalCredits"
	555	[2576]	OP_LOADBOOL	R63 0 0 ; R63 := false
	556	[2576]	CALL     	R60 4 0 ; R60,... := R60(R61,R62,R63)
	557	[2576]	CALL     	R59 0 2 ; R59 := R59(R60,...)
	558	[2576]	MOVE     	R60 R55 ; R60 := R55
	559	[2576]	LOADNIL  	R61 R61 ; R61 := nil
	560	[2576]	GETGLOBAL	R62 K112 ; R62 := 0x9afd2e71
	561	[2576]	CALL     	R58 5 0 ; R58,... := R58(R59,R60,R61,R62)
	562	[2576]	CALL     	R56 0 1 ; R56(R57,...)
	563	[2579]	LT       	0 K30 R49 ; if 0.000000 >= R49 then PC := 584
	564	[2579]	JMP      	584 ; PC := 584
	565	[2579]	EQ       	1 R49 R55 ; if R49 == R55 then PC := 584
	566	[2579]	JMP      	584 ; PC := 584
	567	[2580]	GETGLOBAL	R56 K14 ; R56 := 0x33bdd652
	568	[2580]	GETTABLE 	R56 R56 K24 ; R56 := R56[0x23d5322f]
	569	[2580]	GETGLOBAL	R57 K90 ; R57 := mOtherStuff
	570	[2580]	GETUPVAL 	R58 U8 ; R58 := U8
	571	[2580]	GETGLOBAL	R59 K77 ; R59 := 0x7f5022cf
	572	[2580]	GETTABLE 	R59 R59 K78 ; R59 := R59[0x3f3e4d12]
	573	[2580]	GETGLOBAL	R60 K17 ; R60 := 0xae91e43b
	574	[2580]	SELF     	R60 R60 K107 ; R61 := R60; R60 := R60[0x42b04007]
	575	[2580]	LOADK    	R62 K110 ; R62 := "/Lotus/Language/Menu/MissionStats_BoostedCredits"
	576	[2580]	OP_LOADBOOL	R63 0 0 ; R63 := false
	577	[2580]	CALL     	R60 4 0 ; R60,... := R60(R61,R62,R63)
	578	[2580]	CALL     	R59 0 2 ; R59 := R59(R60,...)
	579	[2580]	MOVE     	R60 R49 ; R60 := R49
	580	[2580]	LOADNIL  	R61 R61 ; R61 := nil
	581	[2580]	GETGLOBAL	R62 K112 ; R62 := 0x9afd2e71
	582	[2580]	CALL     	R58 5 0 ; R58,... := R58(R59,R60,R61,R62)
	583	[2580]	CALL     	R56 0 1 ; R56(R57,...)
	584	[2584]	GETTABLE 	R56 R43 K114 ; R56 := R43["mFusionPoints"]
	585	[2584]	LT       	0 K30 R56 ; if 0.000000 >= R56 then PC := 610
	586	[2584]	JMP      	610 ; PC := 610
	587	[2585]	GETUPVAL 	R56 U8 ; R56 := U8
	588	[2585]	GETGLOBAL	R57 K77 ; R57 := 0x7f5022cf
	589	[2585]	GETTABLE 	R57 R57 K78 ; R57 := R57[0x3f3e4d12]
	590	[2585]	GETGLOBAL	R58 K17 ; R58 := 0xae91e43b
	591	[2585]	SELF     	R58 R58 K107 ; R59 := R58; R58 := R58[0x42b04007]
	592	[2585]	LOADK    	R60 K115 ; R60 := "/Lotus/Language/Items/FusionBundle"
	593	[2585]	OP_LOADBOOL	R61 0 0 ; R61 := false
	594	[2585]	CALL     	R58 4 0 ; R58,... := R58(R59,R60,R61)
	595	[2585]	CALL     	R57 0 2 ; R57 := R57(R58,...)
	596	[2585]	LOADK    	R58 := 1.000000
	597	[2585]	GETTABLE 	R59 R46 K116 ; R59 := R46["mTaxedFusionPoints"]
	598	[2585]	GETGLOBAL	R60 K117 ; R60 := 0x457d7698
	599	[2585]	LOADNIL  	R61 R63 ; R61 := R62 := R63 := nil
	600	[2585]	GETGLOBAL	R64 K118 ; R64 := mFusionPointsSortPriority
	601	[2585]	CALL     	R56 9 2 ; R56 := R56(R57,R58,R59,R60,R61,R62,R63,R64)
	602	[2586]	GETTABLE 	R57 R43 K114 ; R57 := R43["mFusionPoints"]
	603	[2586]	SETTABLE 	R56 K119 R57 ; R56["Endo"] := R57
	604	[2587]	SETTABLE 	R56 K120 K121 ; R56["Description"] := "/Lotus/Language/Items/FusionPartDesc"
	605	[2588]	GETGLOBAL	R57 K14 ; R57 := 0x33bdd652
	606	[2588]	GETTABLE 	R57 R57 K24 ; R57 := R57[0x23d5322f]
	607	[2588]	GETGLOBAL	R58 K122 ; R58 := mSortRewardItems
	608	[2588]	MOVE     	R59 R56 ; R59 := R56
	609	[2588]	CALL     	R57 3 1 ; R57(R58,R59)
	610	[2591]	GETTABLE 	R57 R43 K123 ; R57 := R43["mCrewShipFusionPoints"]
	611	[2591]	LT       	0 K30 R57 ; if 0.000000 >= R57 then PC := 634
	612	[2591]	JMP      	634 ; PC := 634
	613	[2592]	GETUPVAL 	R57 U8 ; R57 := U8
	614	[2592]	GETGLOBAL	R58 K77 ; R58 := 0x7f5022cf
	615	[2592]	GETTABLE 	R58 R58 K78 ; R58 := R58[0x3f3e4d12]
	616	[2592]	GETGLOBAL	R59 K17 ; R59 := 0xae91e43b
	617	[2592]	SELF     	R59 R59 K107 ; R60 := R59; R59 := R59[0x42b04007]
	618	[2592]	LOADK    	R61 K124 ; R61 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
	619	[2592]	OP_LOADBOOL	R62 0 0 ; R62 := false
	620	[2592]	CALL     	R59 4 0 ; R59,... := R59(R60,R61,R62)
	621	[2592]	CALL     	R58 0 2 ; R58 := R58(R59,...)
	622	[2592]	GETTABLE 	R59 R43 K123 ; R59 := R43["mCrewShipFusionPoints"]
	623	[2592]	GETTABLE 	R60 R46 K125 ; R60 := R46["mTaxedCrewShipFusionPoints"]
	624	[2592]	GETGLOBAL	R61 K126 ; R61 := 0x1ae7e99f
	625	[2592]	LOADNIL  	R62 R64 ; R62 := R63 := R64 := nil
	626	[2592]	GETGLOBAL	R65 K118 ; R65 := mFusionPointsSortPriority
	627	[2592]	CALL     	R57 9 2 ; R57 := R57(R58,R59,R60,R61,R62,R63,R64,R65)
	628	[2593]	SETTABLE 	R57 K120 K127 ; R57["Description"] := "/Lotus/Language/Railjack/AvionicEndoDesc"
	629	[2594]	GETGLOBAL	R58 K14 ; R58 := 0x33bdd652
	630	[2594]	GETTABLE 	R58 R58 K24 ; R58 := R58[0x23d5322f]
	631	[2594]	GETGLOBAL	R59 K122 ; R59 := mSortRewardItems
	632	[2594]	MOVE     	R60 R57 ; R60 := R57
	633	[2594]	CALL     	R58 3 1 ; R58(R59,R60)
	634	[2597]	GETTABLE 	R58 R43 K128 ; R58 := R43["mCollectedUpgrades"]
	635	[2597]	SETUPVAL 	R58 U9 ; U9 := R58
	636	[2598]	GETGLOBAL	R58 K2 ; R58 := 0x7b998233
	637	[2598]	GETUPVAL 	R59 U9 ; R59 := U9
	638	[2598]	CALL     	R58 2 2 ; R58 := R58(R59)
	639	[2598]	TEST     	R58 0 ; if not R58 then PC := 643
	640	[2598]	JMP      	643 ; PC := 643
	641	[2599]	NEWTABLE 	R58 0 0 ; R58 := {}
	642	[2599]	SETUPVAL 	R58 U9 ; U9 := R58
	643	[2601]	GETTABLE 	R58 R43 K129 ; R58 := R43["mCollectedStoreItems"]
	644	[2601]	SETUPVAL 	R58 U10 ; U10 := R58
	645	[2604]	GETTABLE 	R58 R43 K130 ; R58 := R43["mCollectedMiscItems"]
	646	[2604]	SETUPVAL 	R58 U11 ; U11 := R58
	647	[2606]	GETUPVAL 	R58 U12 ; R58 := U12
	648	[2606]	GETTABLE 	R59 R43 K131 ; R59 := R43["mPlayedTime"]
	649	[2606]	CALL     	R58 2 1 ; R58(R59)
	650	[2477]	FORLOOP  	R29 177 ; R29 += R31; if R29 <= R30 then begin PC := 177; R32 := R29 end
	651	[2654]	GETGLOBAL	R58 K27 ; R58 := _T
	652	[2654]	GETTABLE 	R58 R58 K132 ; R58 := R58["eomScreenMode"]
	653	[2654]	GETUPVAL 	R59 U13 ; R59 := U13
	654	[2654]	GETTABLE 	R59 R59 K133 ; R59 := R59["ACTUAL_EOM"]
	655	[2654]	EQ       	1 R58 R59 ; if R58 == R59 then PC := 658
	656	[2654]	JMP      	658 ; PC := 658
	657	[2654]	OP_LOADBOOL	R58 0 1 ; R58 := false; PC := 658
	658	[2654]	OP_LOADBOOL	R58 1 0 ; R58 := true
	659	[2656]	NEWTABLE 	R59 0 0 ; R59 := {}
	660	[2657]	GETGLOBAL	R60 K134 ; R60 := 0xc8802016
	661	[2657]	MOVE     	R61 R28 ; R61 := R28
	662	[2657]	CALL     	R60 2 4 ; R60,R61,R62 := R60(R61)
	663	[2657]	JMP      	707 ; PC := 707
	664	[2658]	GETGLOBAL	R65 K2 ; R65 := 0x7b998233
	665	[2658]	MOVE     	R66 R64 ; R66 := R64
	666	[2658]	CALL     	R65 2 2 ; R65 := R65(R66)
	667	[2658]	TEST     	R65 1 ; if R65 then PC := 707
	668	[2658]	JMP      	707 ; PC := 707
	669	[2659]	SELF     	R65 R64 K135 ; R66 := R64; R65 := R64[0xaebe890f]
	670	[2659]	CALL     	R65 2 2 ; R65 := R65(R66)
	671	[2660]	GETTABLE 	R66 R64 K136 ; R66 := R64["winner"]
	672	[2660]	LOADK    	R67 K137 ; R67 := "<p><font face=\"Roboto Condensed\">"
	673	[2660]	GETGLOBAL	R68 K138 ; R68 := 0x603636ad
	674	[2660]	LOADK    	R69 K139 ; R69 := "/Lotus/Language/Medals/"
	675	[2660]	MOVE     	R70 R65 ; R70 := R65
	676	[2660]	CONCAT   	R69 R69 R70 ; R69 := R69 .. R70
	677	[2660]	NEWTABLE 	R70 0 1 ; R70 := {}
	678	[2660]	LOADK    	R71 K141 ; R71 := "</font><font face=\"Roboto\"><b>"
	679	[2660]	GETUPVAL 	R72 U14 ; R72 := U14
	680	[2660]	MOVE     	R73 R65 ; R73 := R65
	681	[2660]	GETTABLE 	R74 R64 K142 ; R74 := R64["raw"]
	682	[2660]	CALL     	R72 3 2 ; R72 := R72(R73,R74)
	683	[2660]	LOADK    	R73 K143 ; R73 := "</b></font><font face=\"Roboto Condensed\">"
	684	[2660]	CONCAT   	R71 R71 R73 ; R71 := R71 .. R72 .. R73
	685	[2660]	SETTABLE 	R70 K140 R71 ; R70["VALUE"] := R71
	686	[2660]	CALL     	R68 3 2 ; R68 := R68(R69,R70)
	687	[2660]	LOADK    	R69 K144 ; R69 := "</font></p>"
	688	[2660]	CONCAT   	R67 R67 R69 ; R67 := R67 .. R68 .. R69
	689	[2660]	SETTABLE 	R59 R66 R67 ; R59[R66] := R67
	690	[2663]	TEST     	R58 0 ; if not R58 then PC := 707
	691	[2663]	JMP      	707 ; PC := 707
	692	[2663]	GETTABLE 	R66 R64 K136 ; R66 := R64["winner"]
	693	[2663]	EQ       	0 R66 R2 ; if R66 ~= R2 then PC := 707
	694	[2663]	JMP      	707 ; PC := 707
	695	[2663]	GETGLOBAL	R66 K2 ; R66 := 0x7b998233
	696	[2663]	GETGLOBAL	R67 K145 ; R67 := 0xcb79539e
	697	[2663]	CALL     	R66 2 2 ; R66 := R66(R67)
	698	[2663]	TEST     	R66 1 ; if R66 then PC := 707
	699	[2663]	JMP      	707 ; PC := 707
	700	[2664]	GETGLOBAL	R66 K145 ; R66 := 0xcb79539e
	701	[2664]	SELF     	R66 R66 K146 ; R67 := R66; R66 := R66[0x8b8fb8b7]
	702	[2664]	GETGLOBAL	R68 K83 ; R68 := 0x0469f296
	703	[2664]	LOADK    	R69 K147 ; R69 := "MEDALS_TOP"
	704	[2664]	CALL     	R68 2 2 ; R68 := R68(R69)
	705	[2664]	MOVE     	R69 R65 ; R69 := R65
	706	[2664]	CALL     	R66 4 1 ; R66(R67,R68,R69)
	707	[2657]	TFORLOOP 	R60 2 ; R63,R64 := R60(R61,R62); if R63 ~= nil then begin PC = 664; R62 := R63 end
	708	[2666]	JMP      	664 ; PC := 664
	709	[2669]	GETUPVAL 	R66 U15 ; R66 := U15
	710	[2669]	CALL     	R66 1 1 ; R66()
	711	[2671]	LEN      	R66 R14 ; R66 := # R14
	712	[2672]	LOADK    	R67 := 1.000000
	713	[2672]	GETGLOBAL	R68 K148 ; R68 := mMaxPlayers
	714	[2672]	LOADK    	R69 := 1.000000
	715	[2672]	FORPREP  	R67 1146 ; R67 -= R69; PC := 1146
	716	[2673]	LOADK    	R71 K18 ; R71 := ""
	717	[2674]	LE       	0 R70 R7 ; if R70 > R7 then PC := 721
	718	[2674]	JMP      	721 ; PC := 721
	719	[2675]	GETTABLE 	R72 R4 R70 ; R72 := R4[R70]
	720	[2675]	GETTABLE 	R71 R72 K12 ; R71 := R72["playerName"]
	721	[2678]	LOADNIL  	R72 R72 ; R72 := nil
	722	[2680]	LOADK    	R73 := 0.000000
	723	[2681]	LOADK    	R74 := 1.000000
	724	[2681]	MOVE     	R75 R66 ; R75 := R66
	725	[2681]	LOADK    	R76 := 1.000000
	726	[2681]	FORPREP  	R74 732 ; R74 -= R76; PC := 732
	727	[2682]	GETTABLE 	R78 R14 R77 ; R78 := R14[R77]
	728	[2682]	GETTABLE 	R78 R78 K11 ; R78 := R78["name"]
	729	[2682]	EQ       	0 R78 R71 ; if R78 ~= R71 then PC := 732
	730	[2682]	JMP      	732 ; PC := 732
	731	[2683]	MOVE     	R73 R77 ; R73 := R77
	732	[2681]	FORLOOP  	R74 727 ; R74 += R76; if R74 <= R75 then begin PC := 727; R77 := R74 end
	733	[2687]	LOADK    	R78 K149 ; R78 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
	734	[2687]	MOVE     	R79 R70 ; R79 := R70
	735	[2687]	CONCAT   	R78 R78 R79 ; R78 := R78 .. R79
	736	[2688]	LOADNIL  	R79 R79 ; R79 := nil
	737	[2689]	EQ       	1 R14 K29 ; if R14 == nil then PC := 743
	738	[2689]	JMP      	743 ; PC := 743
	739	[2689]	LEN      	R80 R14 ; R80 := # R14
	740	[2689]	LE       	0 R73 R80 ; if R73 > R80 then PC := 743
	741	[2689]	JMP      	743 ; PC := 743
	742	[2690]	GETTABLE 	R79 R14 R73 ; R79 := R14[R73]
	743	[2693]	EQ       	1 R70 K13 ; if R70 == 1.000000 then PC := 753
	744	[2693]	JMP      	753 ; PC := 753
	745	[2694]	GETGLOBAL	R80 K150 ; R80 := 0x38f10e85
	746	[2694]	GETGLOBAL	R81 K17 ; R81 := 0xae91e43b
	747	[2694]	LOADK    	R82 K151 ; R82 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player1.duplicateMovieClip"
	748	[2694]	LOADK    	R83 K152 ; R83 := "Player"
	749	[2694]	MOVE     	R84 R70 ; R84 := R70
	750	[2694]	CONCAT   	R83 R83 R84 ; R83 := R83 .. R84
	751	[2694]	MOVE     	R84 R70 ; R84 := R70
	752	[2694]	CALL     	R80 5 1 ; R80(R81,R82,R83,R84)
	753	[2696]	GETGLOBAL	R80 K17 ; R80 := 0xae91e43b
	754	[2696]	SELF     	R80 R80 K153 ; R81 := R80; R80 := R80[0x1e5b5cfe]
	755	[2696]	MOVE     	R82 R78 ; R82 := R78
	756	[2696]	LOADK    	R83 K154 ; R83 := ".Btn"
	757	[2696]	CONCAT   	R82 R82 R83 ; R82 := R82 .. R83
	758	[2696]	LOADK    	R83 K155 ; R83 := "RollOverPlayer"
	759	[2696]	LOADK    	R84 K156 ; R84 := "RollOutPlayer"
	760	[2696]	LOADK    	R85 K157 ; R85 := "SelectPlayer"
	761	[2696]	LOADNIL  	R86 R86 ; R86 := nil
	762	[2696]	CALL     	R80 7 1 ; R80(R81,R82,R83,R84,R85,R86)
	763	[2697]	GETGLOBAL	R80 K17 ; R80 := 0xae91e43b
	764	[2697]	SELF     	R80 R80 K158 ; R81 := R80; R80 := R80[0xaade900e]
	765	[2697]	MOVE     	R82 R78 ; R82 := R78
	766	[2697]	LOADK    	R83 := 11.000000
	767	[2697]	GETGLOBAL	R84 K2 ; R84 := 0x7b998233
	768	[2697]	MOVE     	R85 R79 ; R85 := R79
	769	[2697]	CALL     	R84 2 2 ; R84 := R84(R85)
	770	[2697]	NOT      	R84 R84 ; R84 := not R84
	771	[2697]	CALL     	R80 5 1 ; R80(R81,R82,R83,R84)
	772	[2698]	GETGLOBAL	R80 K2 ; R80 := 0x7b998233
	773	[2698]	MOVE     	R81 R79 ; R81 := R79
	774	[2698]	CALL     	R80 2 2 ; R80 := R80(R81)
	775	[2698]	TEST     	R80 1 ; if R80 then PC := 1146
	776	[2698]	JMP      	1146 ; PC := 1146
	777	[2699]	GETGLOBAL	R80 K159 ; R80 := 0x0032441c
	778	[2699]	GETTABLE 	R80 R80 K160 ; R80 := R80["UITexture_ProfilePlaceHolder"]
	779	[2700]	LOADK    	R81 := 1.000000
	780	[2701]	GETGLOBAL	R82 K161 ; R82 := cjson
	781	[2701]	GETTABLE 	R82 R82 K162 ; R82 := R82[0x7ab914d8]
	782	[2701]	GETTABLE 	R83 R79 K163 ; R83 := R79["loadout"]
	783	[2701]	CALL     	R82 2 2 ; R82 := R82(R83)
	784	[2702]	GETGLOBAL	R83 K164 ; R83 := 0xce225efa
	785	[2702]	LOADK    	R84 := 0.000000
	786	[2702]	CALL     	R83 2 1 ; R83(R84)
	787	[2703]	GETGLOBAL	R83 K2 ; R83 := 0x7b998233
	788	[2703]	MOVE     	R84 R82 ; R84 := R82
	789	[2703]	CALL     	R83 2 2 ; R83 := R83(R84)
	790	[2703]	TEST     	R83 1 ; if R83 then PC := 814
	791	[2703]	JMP      	814 ; PC := 814
	792	[2704]	GETTABLE 	R83 R82 K165 ; R83 := R82["ProfileImage"]
	793	[2706]	GETGLOBAL	R84 K2 ; R84 := 0x7b998233
	794	[2706]	MOVE     	R85 R83 ; R85 := R83
	795	[2706]	CALL     	R84 2 2 ; R84 := R84(R85)
	796	[2706]	TEST     	R84 1 ; if R84 then PC := 812
	797	[2706]	JMP      	812 ; PC := 812
	798	[2706]	EQ       	1 R83 K18 ; if R83 == "" then PC := 812
	799	[2706]	JMP      	812 ; PC := 812
	800	[2707]	GETGLOBAL	R84 K166 ; R84 := 0xb009bbc6
	801	[2707]	MOVE     	R85 R83 ; R85 := R83
	802	[2707]	CALL     	R84 2 2 ; R84 := R84(R85)
	803	[2708]	GETGLOBAL	R85 K2 ; R85 := 0x7b998233
	804	[2708]	MOVE     	R86 R84 ; R86 := R84
	805	[2708]	CALL     	R85 2 2 ; R85 := R85(R86)
	806	[2708]	TEST     	R85 1 ; if R85 then PC := 838
	807	[2708]	JMP      	838 ; PC := 838
	808	[2709]	SELF     	R85 R84 K167 ; R86 := R84; R85 := R84[0x056dcf06]
	809	[2709]	CALL     	R85 2 2 ; R85 := R85(R86)
	810	[2709]	MOVE     	R72 R85 ; R72 := R85
	811	[2710]	JMP      	838 ; PC := 838
	812	[2712]	MOVE     	R72 R80 ; R72 := R80
	813	[2713]	JMP      	838 ; PC := 838
	814	[2714]	GETTABLE 	R85 R79 K11 ; R85 := R79["name"]
	815	[2714]	EQ       	0 R85 R2 ; if R85 ~= R2 then PC := 838
	816	[2714]	JMP      	838 ; PC := 838
	817	[2715]	GETGLOBAL	R85 K3 ; R85 := mGameData
	818	[2715]	SELF     	R85 R85 K168 ; R86 := R85; R85 := R85[0x62c81b76]
	819	[2715]	CALL     	R85 2 2 ; R85 := R85(R86)
	820	[2715]	SELF     	R85 R85 K169 ; R86 := R85; R85 := R85[0x5734fdfa]
	821	[2715]	CALL     	R85 2 2 ; R85 := R85(R86)
	822	[2717]	GETGLOBAL	R86 K2 ; R86 := 0x7b998233
	823	[2717]	GETTABLE 	R87 R85 K170 ; R87 := R85["mItemType"]
	824	[2717]	CALL     	R86 2 2 ; R86 := R86(R87)
	825	[2717]	TEST     	R86 1 ; if R86 then PC := 838
	826	[2717]	JMP      	838 ; PC := 838
	827	[2718]	GETGLOBAL	R86 K166 ; R86 := 0xb009bbc6
	828	[2718]	GETTABLE 	R87 R85 K170 ; R87 := R85["mItemType"]
	829	[2718]	CALL     	R86 2 2 ; R86 := R86(R87)
	830	[2719]	GETGLOBAL	R87 K2 ; R87 := 0x7b998233
	831	[2719]	MOVE     	R88 R86 ; R88 := R86
	832	[2719]	CALL     	R87 2 2 ; R87 := R87(R88)
	833	[2719]	TEST     	R87 1 ; if R87 then PC := 838
	834	[2719]	JMP      	838 ; PC := 838
	835	[2720]	SELF     	R87 R86 K167 ; R88 := R86; R87 := R86[0x056dcf06]
	836	[2720]	CALL     	R87 2 2 ; R87 := R87(R88)
	837	[2720]	MOVE     	R72 R87 ; R72 := R87
	838	[2724]	GETTABLE 	R81 R79 K171 ; R81 := R79["teamId"]
	839	[2726]	GETGLOBAL	R87 K172 ; R87 := mStatColumnSeparation
	840	[2726]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	841	[2726]	SELF     	R88 R88 K173 ; R89 := R88; R88 := R88[0x2ce15376]
	842	[2726]	MOVE     	R90 R78 ; R90 := R78
	843	[2726]	LOADK    	R91 K174 ; R91 := "Btn"
	844	[2726]	LOADK    	R92 := 0.000000
	845	[2726]	CALL     	R88 5 2 ; R88 := R88(R89,R90,R91,R92)
	846	[2726]	ADD      	R87 R87 R88 ; R87 := R87 + R88
	847	[2726]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	848	[2726]	SELF     	R88 R88 K173 ; R89 := R88; R88 := R88[0x2ce15376]
	849	[2726]	MOVE     	R90 R78 ; R90 := R78
	850	[2726]	LOADK    	R91 K20 ; R91 := "Name"
	851	[2726]	LOADK    	R92 := 0.000000
	852	[2726]	CALL     	R88 5 2 ; R88 := R88(R89,R90,R91,R92)
	853	[2726]	SUB      	R87 R87 R88 ; R87 := R87 - R88
	854	[2726]	SUB      	R87 R87 K175 ; R87 := R87 - 10.000000
	855	[2728]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	856	[2728]	SELF     	R88 R88 K176 ; R89 := R88; R88 := R88[0xf64b7262]
	857	[2728]	MOVE     	R90 R78 ; R90 := R78
	858	[2728]	LOADK    	R91 K174 ; R91 := "Btn"
	859	[2728]	LOADK    	R92 := 85.000000
	860	[2728]	MOVE     	R93 R70 ; R93 := R70
	861	[2728]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	862	[2729]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	863	[2729]	SELF     	R88 R88 K177 ; R89 := R88; R88 := R88[0x0c33ebb2]
	864	[2729]	MOVE     	R90 R78 ; R90 := R78
	865	[2729]	LOADK    	R91 K154 ; R91 := ".Btn"
	866	[2729]	CONCAT   	R90 R90 R91 ; R90 := R90 .. R91
	867	[2729]	LOADK    	R91 K178 ; R91 := "PlayerId"
	868	[2729]	MOVE     	R92 R73 ; R92 := R73
	869	[2729]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	870	[2730]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	871	[2730]	SELF     	R88 R88 K176 ; R89 := R88; R88 := R88[0xf64b7262]
	872	[2730]	MOVE     	R90 R78 ; R90 := R78
	873	[2730]	LOADK    	R91 K174 ; R91 := "Btn"
	874	[2730]	LOADK    	R92 := 12.000000
	875	[2730]	GETGLOBAL	R93 K172 ; R93 := mStatColumnSeparation
	876	[2730]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	877	[2731]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	878	[2731]	SELF     	R88 R88 K179 ; R89 := R88; R88 := R88[0xc0a3774b]
	879	[2731]	MOVE     	R90 R78 ; R90 := R78
	880	[2731]	LOADK    	R91 K20 ; R91 := "Name"
	881	[2731]	LOADK    	R92 := 46.000000
	882	[2731]	OP_LOADBOOL	R93 1 0 ; R93 := true
	883	[2731]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	884	[2732]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	885	[2732]	SELF     	R88 R88 K176 ; R89 := R88; R88 := R88[0xf64b7262]
	886	[2732]	MOVE     	R90 R78 ; R90 := R78
	887	[2732]	LOADK    	R91 K20 ; R91 := "Name"
	888	[2732]	LOADK    	R92 := 12.000000
	889	[2732]	MOVE     	R93 R87 ; R93 := R87
	890	[2732]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	891	[2733]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	892	[2733]	SELF     	R88 R88 K180 ; R89 := R88; R88 := R88[0xe261aa96]
	893	[2733]	MOVE     	R90 R78 ; R90 := R78
	894	[2733]	LOADK    	R91 K20 ; R91 := "Name"
	895	[2733]	LOADK    	R92 := 38.000000
	896	[2733]	LOADK    	R93 K181 ; R93 := "bottom"
	897	[2733]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	898	[2734]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	899	[2734]	SELF     	R88 R88 K180 ; R89 := R88; R88 := R88[0xe261aa96]
	900	[2734]	MOVE     	R90 R78 ; R90 := R78
	901	[2734]	LOADK    	R91 K20 ; R91 := "Name"
	902	[2734]	LOADK    	R92 := 29.000000
	903	[2734]	MOVE     	R93 R71 ; R93 := R71
	904	[2734]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	905	[2735]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	906	[2735]	SELF     	R88 R88 K179 ; R89 := R88; R88 := R88[0xc0a3774b]
	907	[2735]	MOVE     	R90 R78 ; R90 := R78
	908	[2735]	LOADK    	R91 K182 ; R91 := "Stat"
	909	[2735]	LOADK    	R92 := 46.000000
	910	[2735]	OP_LOADBOOL	R93 1 0 ; R93 := true
	911	[2735]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	912	[2736]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	913	[2736]	SELF     	R88 R88 K176 ; R89 := R88; R88 := R88[0xf64b7262]
	914	[2736]	MOVE     	R90 R78 ; R90 := R78
	915	[2736]	LOADK    	R91 K182 ; R91 := "Stat"
	916	[2736]	LOADK    	R92 := 12.000000
	917	[2736]	MOVE     	R93 R87 ; R93 := R87
	918	[2736]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	919	[2737]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	920	[2737]	SELF     	R88 R88 K176 ; R89 := R88; R88 := R88[0xf64b7262]
	921	[2737]	MOVE     	R90 R78 ; R90 := R78
	922	[2737]	LOADK    	R91 K182 ; R91 := "Stat"
	923	[2737]	LOADK    	R92 := 1.000000
	924	[2737]	LOADK    	R93 := 2.000000
	925	[2737]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	926	[2738]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	927	[2738]	SELF     	R88 R88 K176 ; R89 := R88; R88 := R88[0xf64b7262]
	928	[2738]	MOVE     	R90 R78 ; R90 := R78
	929	[2738]	LOADK    	R91 K183 ; R91 := "NameBackground"
	930	[2738]	LOADK    	R92 := 10.000000
	931	[2738]	LOADK    	R93 := 50.000000
	932	[2738]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	933	[2739]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	934	[2739]	SELF     	R88 R88 K176 ; R89 := R88; R88 := R88[0xf64b7262]
	935	[2739]	MOVE     	R90 R78 ; R90 := R78
	936	[2739]	LOADK    	R91 K184 ; R91 := "StatBackground"
	937	[2739]	LOADK    	R92 := 10.000000
	938	[2739]	LOADK    	R93 := 50.000000
	939	[2739]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	940	[2740]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	941	[2740]	SELF     	R88 R88 K180 ; R89 := R88; R88 := R88[0xe261aa96]
	942	[2740]	MOVE     	R90 R78 ; R90 := R78
	943	[2740]	LOADK    	R91 K183 ; R91 := "NameBackground"
	944	[2740]	LOADK    	R92 := 38.000000
	945	[2740]	LOADK    	R93 K185 ; R93 := "center"
	946	[2740]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	947	[2741]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	948	[2741]	SELF     	R88 R88 K180 ; R89 := R88; R88 := R88[0xe261aa96]
	949	[2741]	MOVE     	R90 R78 ; R90 := R78
	950	[2741]	LOADK    	R91 K184 ; R91 := "StatBackground"
	951	[2741]	LOADK    	R92 := 38.000000
	952	[2741]	LOADK    	R93 K185 ; R93 := "center"
	953	[2741]	CALL     	R88 6 1 ; R88(R89,R90,R91,R92,R93)
	954	[2743]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	955	[2743]	SELF     	R88 R88 K186 ; R89 := R88; R88 := R88[0xd5181643]
	956	[2743]	MOVE     	R90 R78 ; R90 := R78
	957	[2743]	LOADK    	R91 K187 ; R91 := ".NameBackground"
	958	[2743]	CONCAT   	R90 R90 R91 ; R90 := R90 .. R91
	959	[2743]	GETGLOBAL	R91 K188 ; R91 := 0x56ce295b
	960	[2743]	CALL     	R88 4 1 ; R88(R89,R90,R91)
	961	[2744]	GETGLOBAL	R88 K17 ; R88 := 0xae91e43b
	962	[2744]	SELF     	R88 R88 K186 ; R89 := R88; R88 := R88[0xd5181643]
	963	[2744]	MOVE     	R90 R78 ; R90 := R78
	964	[2744]	LOADK    	R91 K189 ; R91 := ".StatBackground"
	965	[2744]	CONCAT   	R90 R90 R91 ; R90 := R90 .. R91
	966	[2744]	GETGLOBAL	R91 K188 ; R91 := 0x56ce295b
	967	[2744]	CALL     	R88 4 1 ; R88(R89,R90,R91)
	968	[2746]	LOADK    	R88 := -11.000000
	969	[2747]	GETTABLE 	R89 R59 R71 ; R89 := R59[R71]
	970	[2748]	EQ       	1 R89 K29 ; if R89 == nil then PC := 980
	971	[2748]	JMP      	980 ; PC := 980
	972	[2748]	TEST     	R5 0 ; if not R5 then PC := 1002
	973	[2748]	JMP      	1002 ; PC := 1002
	974	[2748]	GETGLOBAL	R90 K27 ; R90 := _T
	975	[2748]	GETTABLE 	R90 R90 K132 ; R90 := R90["eomScreenMode"]
	976	[2748]	GETUPVAL 	R91 U13 ; R91 := U13
	977	[2748]	GETTABLE 	R91 R91 K133 ; R91 := R91["ACTUAL_EOM"]
	978	[2748]	EQ       	1 R90 R91 ; if R90 == R91 then PC := 1002
	979	[2748]	JMP      	1002 ; PC := 1002
	980	[2749]	GETGLOBAL	R90 K17 ; R90 := 0xae91e43b
	981	[2749]	SELF     	R90 R90 K180 ; R91 := R90; R90 := R90[0xe261aa96]
	982	[2749]	MOVE     	R92 R78 ; R92 := R78
	983	[2749]	LOADK    	R93 K182 ; R93 := "Stat"
	984	[2749]	LOADK    	R94 := 29.000000
	985	[2749]	LOADK    	R95 K18 ; R95 := ""
	986	[2749]	CALL     	R90 6 1 ; R90(R91,R92,R93,R94,R95)
	987	[2750]	GETGLOBAL	R90 K17 ; R90 := 0xae91e43b
	988	[2750]	SELF     	R90 R90 K176 ; R91 := R90; R90 := R90[0xf64b7262]
	989	[2750]	MOVE     	R92 R78 ; R92 := R78
	990	[2750]	LOADK    	R93 K183 ; R93 := "NameBackground"
	991	[2750]	LOADK    	R94 := 1.000000
	992	[2750]	LOADK    	R95 := -14.000000
	993	[2750]	CALL     	R90 6 1 ; R90(R91,R92,R93,R94,R95)
	994	[2751]	GETGLOBAL	R90 K17 ; R90 := 0xae91e43b
	995	[2751]	SELF     	R90 R90 K179 ; R91 := R90; R90 := R90[0xc0a3774b]
	996	[2751]	MOVE     	R92 R78 ; R92 := R78
	997	[2751]	LOADK    	R93 K184 ; R93 := "StatBackground"
	998	[2751]	LOADK    	R94 := 11.000000
	999	[2751]	OP_LOADBOOL	R95 0 0 ; R95 := false
	1000	[2751]	CALL     	R90 6 1 ; R90(R91,R92,R93,R94,R95)
	1001	[2751]	JMP      	1024 ; PC := 1024
	1002	[2753]	GETGLOBAL	R90 K17 ; R90 := 0xae91e43b
	1003	[2753]	SELF     	R90 R90 K180 ; R91 := R90; R90 := R90[0xe261aa96]
	1004	[2753]	MOVE     	R92 R78 ; R92 := R78
	1005	[2753]	LOADK    	R93 K182 ; R93 := "Stat"
	1006	[2753]	LOADK    	R94 := 29.000000
	1007	[2753]	MOVE     	R95 R89 ; R95 := R89
	1008	[2753]	CALL     	R90 6 1 ; R90(R91,R92,R93,R94,R95)
	1009	[2754]	GETGLOBAL	R90 K17 ; R90 := 0xae91e43b
	1010	[2754]	SELF     	R90 R90 K176 ; R91 := R90; R90 := R90[0xf64b7262]
	1011	[2754]	MOVE     	R92 R78 ; R92 := R78
	1012	[2754]	LOADK    	R93 K183 ; R93 := "NameBackground"
	1013	[2754]	LOADK    	R94 := 1.000000
	1014	[2754]	LOADK    	R95 := -25.000000
	1015	[2754]	CALL     	R90 6 1 ; R90(R91,R92,R93,R94,R95)
	1016	[2755]	GETGLOBAL	R90 K17 ; R90 := 0xae91e43b
	1017	[2755]	SELF     	R90 R90 K179 ; R91 := R90; R90 := R90[0xc0a3774b]
	1018	[2755]	MOVE     	R92 R78 ; R92 := R78
	1019	[2755]	LOADK    	R93 K184 ; R93 := "StatBackground"
	1020	[2755]	LOADK    	R94 := 11.000000
	1021	[2755]	OP_LOADBOOL	R95 1 0 ; R95 := true
	1022	[2755]	CALL     	R90 6 1 ; R90(R91,R92,R93,R94,R95)
	1023	[2756]	LOADK    	R88 := -22.000000
	1024	[2758]	EQ       	0 R71 K18 ; if R71 ~= "" then PC := 1033
	1025	[2758]	JMP      	1033 ; PC := 1033
	1026	[2759]	GETGLOBAL	R90 K17 ; R90 := 0xae91e43b
	1027	[2759]	SELF     	R90 R90 K179 ; R91 := R90; R90 := R90[0xc0a3774b]
	1028	[2759]	MOVE     	R92 R78 ; R92 := R78
	1029	[2759]	LOADK    	R93 K94 ; R93 := "Icon"
	1030	[2759]	LOADK    	R94 := 11.000000
	1031	[2759]	OP_LOADBOOL	R95 0 0 ; R95 := false
	1032	[2759]	CALL     	R90 6 1 ; R90(R91,R92,R93,R94,R95)
	1033	[2761]	EQ       	1 R72 K29 ; if R72 == nil then PC := 1052
	1034	[2761]	JMP      	1052 ; PC := 1052
	1035	[2762]	GETGLOBAL	R90 K17 ; R90 := 0xae91e43b
	1036	[2762]	SELF     	R90 R90 K190 ; R91 := R90; R90 := R90[0xef99134f]
	1037	[2762]	MOVE     	R92 R78 ; R92 := R78
	1038	[2762]	LOADK    	R93 K191 ; R93 := ".Icon"
	1039	[2762]	CONCAT   	R92 R92 R93 ; R92 := R92 .. R93
	1040	[2762]	MOVE     	R93 R72 ; R93 := R72
	1041	[2762]	GETGLOBAL	R94 K159 ; R94 := 0x0032441c
	1042	[2762]	GETTABLE 	R94 R94 K192 ; R94 := R94["UIMaterial_RectangleNoDepth"]
	1043	[2762]	CALL     	R90 5 1 ; R90(R91,R92,R93,R94)
	1044	[2763]	GETGLOBAL	R90 K17 ; R90 := 0xae91e43b
	1045	[2763]	SELF     	R90 R90 K186 ; R91 := R90; R90 := R90[0xd5181643]
	1046	[2763]	MOVE     	R92 R78 ; R92 := R78
	1047	[2763]	LOADK    	R93 K193 ; R93 := ".IconBacker"
	1048	[2763]	CONCAT   	R92 R92 R93 ; R92 := R92 .. R93
	1049	[2763]	GETGLOBAL	R93 K159 ; R93 := 0x0032441c
	1050	[2763]	GETTABLE 	R93 R93 K192 ; R93 := R93["UIMaterial_RectangleNoDepth"]
	1051	[2763]	CALL     	R90 4 1 ; R90(R91,R92,R93)
	1052	[2766]	GETGLOBAL	R90 K70 ; R90 := 0x34291f5c
	1053	[2766]	GETTABLE 	R90 R90 K194 ; R90 := R90[0xa7a2e381]
	1054	[2766]	CALL     	R90 1 2 ; R90 := R90()
	1055	[2766]	TEST     	R90 0 ; if not R90 then PC := 1064
	1056	[2766]	JMP      	1064 ; PC := 1064
	1057	[2767]	GETGLOBAL	R90 K17 ; R90 := 0xae91e43b
	1058	[2767]	SELF     	R90 R90 K180 ; R91 := R90; R90 := R90[0xe261aa96]
	1059	[2767]	MOVE     	R92 R78 ; R92 := R78
	1060	[2767]	LOADK    	R93 K20 ; R93 := "Name"
	1061	[2767]	LOADK    	R94 := 41.000000
	1062	[2767]	LOADK    	R95 K195 ; R95 := "Arial Unicode MS"
	1063	[2767]	CALL     	R90 6 1 ; R90(R91,R92,R93,R94,R95)
	1064	[2770]	GETGLOBAL	R90 K17 ; R90 := 0xae91e43b
	1065	[2770]	SELF     	R90 R90 K196 ; R91 := R90; R90 := R90[0x91a24e4b]
	1066	[2770]	MOVE     	R92 R78 ; R92 := R78
	1067	[2770]	LOADK    	R93 K197 ; R93 := ".Name"
	1068	[2770]	CONCAT   	R92 R92 R93 ; R92 := R92 .. R93
	1069	[2770]	LOADK    	R93 := 5.000000
	1070	[2770]	CALL     	R90 4 2 ; R90 := R90(R91,R92,R93)
	1071	[2770]	DIV      	R90 R90 K69 ; R90 := R90 / 100.000000
	1072	[2771]	GETGLOBAL	R91 K17 ; R91 := 0xae91e43b
	1073	[2771]	SELF     	R91 R91 K196 ; R92 := R91; R91 := R91[0x91a24e4b]
	1074	[2771]	MOVE     	R93 R78 ; R93 := R78
	1075	[2771]	LOADK    	R94 K198 ; R94 := ".Stat"
	1076	[2771]	CONCAT   	R93 R93 R94 ; R93 := R93 .. R94
	1077	[2771]	LOADK    	R94 := 5.000000
	1078	[2771]	CALL     	R91 4 2 ; R91 := R91(R92,R93,R94)
	1079	[2771]	DIV      	R91 R91 K69 ; R91 := R91 / 100.000000
	1080	[2773]	GETGLOBAL	R92 K17 ; R92 := 0xae91e43b
	1081	[2773]	SELF     	R92 R92 K176 ; R93 := R92; R92 := R92[0xf64b7262]
	1082	[2773]	MOVE     	R94 R78 ; R94 := R78
	1083	[2773]	LOADK    	R95 K20 ; R95 := "Name"
	1084	[2773]	LOADK    	R96 := 1.000000
	1085	[2773]	SUB      	R97 K13 R90 ; R97 := 1.000000 - R90
	1086	[2773]	MUL      	R97 K199 R97 ; R97 := 11.000000 * R97
	1087	[2773]	ADD      	R97 R88 R97 ; R97 := R88 + R97
	1088	[2773]	CALL     	R92 6 1 ; R92(R93,R94,R95,R96,R97)
	1089	[2774]	GETGLOBAL	R92 K17 ; R92 := 0xae91e43b
	1090	[2774]	SELF     	R92 R92 K176 ; R93 := R92; R92 := R92[0xf64b7262]
	1091	[2774]	MOVE     	R94 R78 ; R94 := R78
	1092	[2774]	LOADK    	R95 K182 ; R95 := "Stat"
	1093	[2774]	LOADK    	R96 := 1.000000
	1094	[2774]	SUB      	R97 K13 R91 ; R97 := 1.000000 - R91
	1095	[2774]	MUL      	R97 K200 R97 ; R97 := 22.000000 * R97
	1096	[2774]	ADD      	R97 K201 R97 ; R97 := -2.000000 + R97
	1097	[2774]	CALL     	R92 6 1 ; R92(R93,R94,R95,R96,R97)
	1098	[2776]	GETGLOBAL	R92 K17 ; R92 := 0xae91e43b
	1099	[2776]	SELF     	R92 R92 K196 ; R93 := R92; R92 := R92[0x91a24e4b]
	1100	[2776]	MOVE     	R94 R78 ; R94 := R78
	1101	[2776]	LOADK    	R95 K197 ; R95 := ".Name"
	1102	[2776]	CONCAT   	R94 R94 R95 ; R94 := R94 .. R95
	1103	[2776]	LOADK    	R95 := 33.000000
	1104	[2776]	CALL     	R92 4 2 ; R92 := R92(R93,R94,R95)
	1105	[2776]	MUL      	R92 R92 R90 ; R92 := R92 * R90
	1106	[2776]	ADD      	R92 R92 K202 ; R92 := R92 + 20.000000
	1107	[2777]	GETGLOBAL	R93 K17 ; R93 := 0xae91e43b
	1108	[2777]	SELF     	R93 R93 K196 ; R94 := R93; R93 := R93[0x91a24e4b]
	1109	[2777]	MOVE     	R95 R78 ; R95 := R78
	1110	[2777]	LOADK    	R96 K198 ; R96 := ".Stat"
	1111	[2777]	CONCAT   	R95 R95 R96 ; R95 := R95 .. R96
	1112	[2777]	LOADK    	R96 := 33.000000
	1113	[2777]	CALL     	R93 4 2 ; R93 := R93(R94,R95,R96)
	1114	[2777]	MUL      	R93 R93 R91 ; R93 := R93 * R91
	1115	[2777]	ADD      	R93 R93 K202 ; R93 := R93 + 20.000000
	1116	[2779]	GETGLOBAL	R94 K17 ; R94 := 0xae91e43b
	1117	[2779]	SELF     	R94 R94 K176 ; R95 := R94; R94 := R94[0xf64b7262]
	1118	[2779]	MOVE     	R96 R78 ; R96 := R78
	1119	[2779]	LOADK    	R97 K183 ; R97 := "NameBackground"
	1120	[2779]	LOADK    	R98 := 12.000000
	1121	[2779]	MOVE     	R99 R92 ; R99 := R92
	1122	[2779]	CALL     	R94 6 1 ; R94(R95,R96,R97,R98,R99)
	1123	[2780]	GETGLOBAL	R94 K17 ; R94 := 0xae91e43b
	1124	[2780]	SELF     	R94 R94 K176 ; R95 := R94; R94 := R94[0xf64b7262]
	1125	[2780]	MOVE     	R96 R78 ; R96 := R78
	1126	[2780]	LOADK    	R97 K184 ; R97 := "StatBackground"
	1127	[2780]	LOADK    	R98 := 12.000000
	1128	[2780]	MOVE     	R99 R93 ; R99 := R93
	1129	[2780]	CALL     	R94 6 1 ; R94(R95,R96,R97,R98,R99)
	1130	[2782]	EQ       	0 R70 K13 ; if R70 ~= 1.000000 then PC := 1138
	1131	[2782]	JMP      	1138 ; PC := 1138
	1132	[2783]	GETGLOBAL	R94 K203 ; R94 := 0x5bced4c4
	1133	[2783]	GETTABLE 	R94 R94 K204 ; R94 := R94[0xb62ecfe0]
	1134	[2783]	MOVE     	R95 R92 ; R95 := R92
	1135	[2783]	MOVE     	R96 R93 ; R96 := R93
	1136	[2783]	CALL     	R94 3 2 ; R94 := R94(R95,R96)
	1137	[2783]	SETUPVAL 	R94 U16 ; U16 := R94
	1138	[2785]	GETGLOBAL	R94 K17 ; R94 := 0xae91e43b
	1139	[2785]	SELF     	R94 R94 K205 ; R95 := R94; R94 := R94[0x67bc869f]
	1140	[2785]	MOVE     	R96 R78 ; R96 := R78
	1141	[2785]	LOADK    	R97 := 0.000000
	1142	[2785]	GETUPVAL 	R98 U17 ; R98 := U17
	1143	[2785]	MOVE     	R99 R70 ; R99 := R70
	1144	[2785]	CALL     	R98 2 0 ; R98,... := R98(R99)
	1145	[2785]	CALL     	R94 0 1 ; R94(R95,...)
	1146	[2672]	FORLOOP  	R67 716 ; R67 += R69; if R67 <= R68 then begin PC := 716; R70 := R67 end
	1147	[2789]	GETGLOBAL	R94 K17 ; R94 := 0xae91e43b
	1148	[2789]	SELF     	R94 R94 K186 ; R95 := R94; R94 := R94[0xd5181643]
	1149	[2789]	LOADK    	R96 K206 ; R96 := "ExpandableArea.PlayerInfo.PlayerBar.Backer"
	1150	[2789]	GETGLOBAL	R97 K159 ; R97 := 0x0032441c
	1151	[2789]	GETTABLE 	R97 R97 K192 ; R97 := R97["UIMaterial_RectangleNoDepth"]
	1152	[2789]	CALL     	R94 4 1 ; R94(R95,R96,R97)
	1153	[2791]	GETGLOBAL	R94 K134 ; R94 := 0xc8802016
	1154	[2791]	GETGLOBAL	R95 K31 ; R95 := mStatTable
	1155	[2791]	CALL     	R94 2 4 ; R94,R95,R96 := R94(R95)
	1156	[2791]	JMP      	1166 ; PC := 1166
	1157	[2792]	GETGLOBAL	R99 K207 ; R99 := mStatsGrid
	1158	[2792]	SELF     	R99 R99 K208 ; R100 := R99; R99 := R99[0xbad4316f]
	1159	[2792]	NEWTABLE 	R101 0 2 ; R101 := {}
	1160	[2792]	GETTABLE 	R102 R98 K209 ; R102 := R98["Label"]
	1161	[2792]	SETTABLE 	R101 K209 R102 ; R101["Label"] := R102
	1162	[2792]	GETTABLE 	R102 R98 K210 ; R102 := R98["Value"]
	1163	[2792]	SETTABLE 	R101 K210 R102 ; R101["Value"] := R102
	1164	[2792]	OP_LOADBOOL	R102 1 0 ; R102 := true
	1165	[2792]	CALL     	R99 4 1 ; R99(R100,R101,R102)
	1166	[2791]	TFORLOOP 	R94 2 ; R97,R98 := R94(R95,R96); if R97 ~= nil then begin PC = 1157; R96 := R97 end
	1167	[2792]	JMP      	1157 ; PC := 1157
	1168	[2795]	OP_LOADBOOL	R99 0 0 ; R99 := false
	1169	[2795]	TEST     	R99 0 ; if not R99 then PC := 1177
	1170	[2795]	JMP      	1177 ; PC := 1177
	1171	[2796]	GETGLOBAL	R99 K27 ; R99 := _T
	1172	[2796]	GETTABLE 	R99 R99 K211 ; R99 := R99["BackgroundMovie"]
	1173	[2796]	SELF     	R99 R99 K212 ; R100 := R99; R99 := R99[0xe4162eed]
	1174	[2796]	LOADK    	R101 K213 ; R101 := "ShowBlockingMessage"
	1175	[2796]	LOADK    	R102 := 0.000000
	1176	[2796]	CALL     	R99 4 1 ; R99(R100,R101,R102)
	1177	[2799]	GETGLOBAL	R99 K214 ; R99 := mInitialized
	1178	[2799]	TEST     	R99 0 ; if not R99 then PC := 1182
	1179	[2799]	JMP      	1182 ; PC := 1182
	1180	[2800]	GETUPVAL 	R99 U18 ; R99 := U18
	1181	[2800]	CALL     	R99 1 1 ; R99()
	1182	[2802]	RETURN   	R0 1 ; return 

function #88 <?:2804,2806> (3 instructions, 12 bytes at 000001608BA109F0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2805]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2805]	CALL     	R0 1 1 ; R0()
	3	[2806]	RETURN   	R0 1 ; return 

function #89 <?:2808,2830> (57 instructions, 228 bytes at 000001608BA10AA0)
0 params, 8 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[2809]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[2809]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[2809]	LOADK    	R2 := 0.000000
	4	[2809]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[2810]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[2810]	MOVE     	R2 R0 ; R2 := R0
	7	[2810]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[2810]	TEST     	R1 1 ; if R1 then PC := 57
	9	[2810]	JMP      	57 ; PC := 57
	10	[2810]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	11	[2810]	GETGLOBAL	R2 K3 ; R2 := mGameData
	12	[2810]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[2810]	TEST     	R1 1 ; if R1 then PC := 57
	14	[2810]	JMP      	57 ; PC := 57
	15	[2811]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0x5ca33548]
	16	[2811]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[2812]	LOADNIL  	R2 R2 ; R2 := nil
	18	[2813]	GETUPVAL 	R3 U0 ; R3 := U0
	19	[2813]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xcdc34211]
	20	[2813]	CALL     	R3 1 2 ; R3 := R3()
	21	[2813]	TEST     	R3 1 ; if R3 then PC := 33
	22	[2813]	JMP      	33 ; PC := 33
	23	[2813]	GETGLOBAL	R3 K3 ; R3 := mGameData
	24	[2813]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0x01f12112]
	25	[2813]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[2813]	TEST     	R3 0 ; if not R3 then PC := 33
	27	[2813]	JMP      	33 ; PC := 33
	28	[2814]	GETGLOBAL	R3 K3 ; R3 := mGameData
	29	[2814]	SELF     	R3 R3 K7 ; R4 := R3; R3 := R3[0x79e70384]
	30	[2814]	CALL     	R3 2 2 ; R3 := R3(R4)
	31	[2814]	MOVE     	R2 R3 ; R2 := R3
	32	[2814]	JMP      	37 ; PC := 37
	33	[2816]	GETGLOBAL	R3 K3 ; R3 := mGameData
	34	[2816]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xa8c9f8a6]
	35	[2816]	CALL     	R3 2 2 ; R3 := R3(R4)
	36	[2816]	MOVE     	R2 R3 ; R2 := R3
	37	[2819]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	38	[2819]	MOVE     	R4 R2 ; R4 := R2
	39	[2819]	CALL     	R3 2 2 ; R3 := R3(R4)
	40	[2819]	TEST     	R3 1 ; if R3 then PC := 57
	41	[2819]	JMP      	57 ; PC := 57
	42	[2820]	LOADK    	R3 := 1.000000
	43	[2820]	LEN      	R4 R2 ; R4 := # R2
	44	[2820]	LOADK    	R5 := 1.000000
	45	[2820]	FORPREP  	R3 56 ; R3 -= R5; PC := 56
	46	[2821]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	47	[2821]	GETTABLE 	R7 R7 K9 ; R7 := R7["playerName"]
	48	[2821]	EQ       	0 R7 R1 ; if R7 ~= R1 then PC := 56
	49	[2821]	JMP      	56 ; PC := 56
	50	[2822]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	51	[2822]	SETGLOBALHASH	R7 K10 ; mLocalPlayerMissionStats := R7
	52	[2823]	GETGLOBAL	R7 K10 ; R7 := mLocalPlayerMissionStats
	53	[2823]	GETTABLE 	R7 R7 K12 ; R7 := R7["playerMissionInfo"]
	54	[2823]	SETGLOBALHASH	R7 K11 ; mPlayerMissionInfo := R7
	55	[2825]	JMP      	57 ; PC := 57
	56	[2820]	FORLOOP  	R3 46 ; R3 += R5; if R3 <= R4 then begin PC := 46; R6 := R3 end
	57	[2830]	RETURN   	R0 1 ; return 

function #90 <?:2832,2847> (77 instructions, 308 bytes at 000001608BA10E10)
0 params, 6 slots, 6 upvalues, 0 locals, 22 constants, 0 functions
	1	[2833]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2833]	CALL     	R0 1 2 ; R0 := R0()
	3	[2834]	GETTABLE 	R1 R0 K0 ; R1 := R0["missionType"]
	4	[2836]	GETGLOBAL	R2 K1 ; R2 := _T
	5	[2836]	GETTABLE 	R2 R2 K2 ; R2 := R2["eomScreenMode"]
	6	[2836]	GETUPVAL 	R3 U1 ; R3 := U1
	7	[2836]	GETTABLE 	R3 R3 K3 ; R3 := R3["ACTUAL_EOM"]
	8	[2836]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 11
	9	[2836]	JMP      	11 ; PC := 11
	10	[2836]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 11
	11	[2836]	OP_LOADBOOL	R2 1 0 ; R2 := true
	12	[2837]	GETUPVAL 	R3 U2 ; R3 := U2
	13	[2837]	CALL     	R3 1 2 ; R3 := R3()
	14	[2837]	TEST     	R3 1 ; if R3 then PC := 18
	15	[2837]	JMP      	18 ; PC := 18
	16	[2837]	EQ       	0 R1 K5 ; if R1 ~= 13.000000 then PC := 25
	17	[2837]	JMP      	25 ; PC := 25
	18	[2838]	GETUPVAL 	R3 U3 ; R3 := U3
	19	[2838]	GETTABLE 	R3 R3 K6 ; R3 := R3[0xa54874f9]
	20	[2838]	MOVE     	R4 R2 ; R4 := R2
	21	[2838]	MOVE     	R5 R2 ; R5 := R2
	22	[2838]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	23	[2838]	RETURN   	R3 2 ; return R3 
	24	[2838]	JMP      	77 ; PC := 77
	25	[2839]	EQ       	1 R1 K7 ; if R1 == 2.000000 then PC := 48
	26	[2839]	JMP      	48 ; PC := 48
	27	[2839]	EQ       	1 R1 K8 ; if R1 == 17.000000 then PC := 48
	28	[2839]	JMP      	48 ; PC := 48
	29	[2839]	EQ       	1 R1 K9 ; if R1 == 33.000000 then PC := 48
	30	[2839]	JMP      	48 ; PC := 48
	31	[2839]	EQ       	1 R1 K10 ; if R1 == 34.000000 then PC := 48
	32	[2839]	JMP      	48 ; PC := 48
	33	[2839]	EQ       	1 R1 K11 ; if R1 == 35.000000 then PC := 48
	34	[2839]	JMP      	48 ; PC := 48
	35	[2840]	EQ       	1 R1 K12 ; if R1 == 27.000000 then PC := 48
	36	[2840]	JMP      	48 ; PC := 48
	37	[2840]	GETUPVAL 	R3 U4 ; R3 := U4
	38	[2840]	CALL     	R3 1 2 ; R3 := R3()
	39	[2840]	TEST     	R3 1 ; if R3 then PC := 48
	40	[2840]	JMP      	48 ; PC := 48
	41	[2840]	GETUPVAL 	R3 U5 ; R3 := U5
	42	[2840]	CALL     	R3 1 2 ; R3 := R3()
	43	[2840]	TEST     	R3 0 ; if not R3 then PC := 55
	44	[2840]	JMP      	55 ; PC := 55
	45	[2840]	GETTABLE 	R3 R0 K13 ; R3 := R0["scenarioId"]
	46	[2840]	EQ       	1 R3 K14 ; if R3 == "" then PC := 55
	47	[2840]	JMP      	55 ; PC := 55
	48	[2841]	GETUPVAL 	R3 U3 ; R3 := U3
	49	[2841]	GETTABLE 	R3 R3 K15 ; R3 := R3[0x1aa2b2cd]
	50	[2841]	LOADNIL  	R4 R4 ; R4 := nil
	51	[2841]	MOVE     	R5 R2 ; R5 := R2
	52	[2841]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	53	[2841]	RETURN   	R3 2 ; return R3 
	54	[2841]	JMP      	77 ; PC := 77
	55	[2842]	EQ       	0 R1 K16 ; if R1 ~= 32.000000 then PC := 64
	56	[2842]	JMP      	64 ; PC := 64
	57	[2843]	GETUPVAL 	R3 U3 ; R3 := U3
	58	[2843]	GETTABLE 	R3 R3 K17 ; R3 := R3[0x69b4dca4]
	59	[2843]	LOADNIL  	R4 R4 ; R4 := nil
	60	[2843]	MOVE     	R5 R2 ; R5 := R2
	61	[2843]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	62	[2843]	RETURN   	R3 2 ; return R3 
	63	[2843]	JMP      	77 ; PC := 77
	64	[2844]	EQ       	1 R1 K18 ; if R1 == 28.000000 then PC := 70
	65	[2844]	JMP      	70 ; PC := 70
	66	[2844]	GETUPVAL 	R3 U5 ; R3 := U5
	67	[2844]	CALL     	R3 1 2 ; R3 := R3()
	68	[2844]	TEST     	R3 0 ; if not R3 then PC := 77
	69	[2844]	JMP      	77 ; PC := 77
	70	[2844]	GETTABLE 	R3 R0 K19 ; R3 := R0["sortieId"]
	71	[2844]	EQ       	0 R3 K14 ; if R3 ~= "" then PC := 77
	72	[2844]	JMP      	77 ; PC := 77
	73	[2845]	GETGLOBAL	R3 K20 ; R3 := mGameData
	74	[2845]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x261f2922]
	75	[2845]	CALL     	R3 2 2 ; R3 := R3(R4)
	76	[2845]	RETURN   	R3 2 ; return R3 
	77	[2847]	RETURN   	R0 1 ; return 

function #91 <?:2849,2878> (65 instructions, 260 bytes at 000001608BA112B0)
1 param, 10 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[2850]	GETTABLE 	R1 R0 K0 ; R1 := R0["FullName"]
	2	[2850]	TEST     	R1 1 ; if R1 then PC := 5
	3	[2850]	JMP      	5 ; PC := 5
	4	[2850]	GETTABLE 	R1 R0 K1 ; R1 := R0["Name"]
	5	[2851]	GETTABLE 	R2 R0 K2 ; R2 := R0["RewardAdded"]
	6	[2851]	TEST     	R2 1 ; if R2 then PC := 31
	7	[2851]	JMP      	31 ; PC := 31
	8	[2852]	SETTABLE 	R0 K2 K3 ; R0["RewardAdded"] := true
	9	[2853]	GETTABLE 	R2 R0 K4 ; R2 := R0["Count"]
	10	[2854]	GETTABLE 	R3 R0 K5 ; R3 := R0["Credits"]
	11	[2854]	EQ       	1 R3 K6 ; if R3 == nil then PC := 24
	12	[2854]	JMP      	24 ; PC := 24
	13	[2855]	LOADK    	R1 K5 ; R1 := "Credits"
	14	[2856]	GETTABLE 	R3 R0 K5 ; R3 := R0["Credits"]
	15	[2856]	MUL      	R3 R2 R3 ; R3 := R2 * R3
	16	[2856]	SETTABLE 	R0 K4 R3 ; R0["Count"] := R3
	17	[2857]	GETGLOBAL	R3 K8 ; R3 := 0x5f0788c4
	18	[2857]	GETUPVAL 	R4 U0 ; R4 := U0
	19	[2857]	MOVE     	R5 R1 ; R5 := R1
	20	[2857]	CALL     	R4 2 0 ; R4,... := R4(R5)
	21	[2857]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	22	[2857]	SETTABLE 	R0 K7 R3 ; R0["MergeDesc"] := R3
	23	[2857]	JMP      	31 ; PC := 31
	24	[2858]	GETTABLE 	R3 R0 K9 ; R3 := R0["Endo"]
	25	[2858]	EQ       	1 R3 K6 ; if R3 == nil then PC := 31
	26	[2858]	JMP      	31 ; PC := 31
	27	[2859]	LOADK    	R1 K9 ; R1 := "Endo"
	28	[2860]	GETTABLE 	R3 R0 K9 ; R3 := R0["Endo"]
	29	[2860]	MUL      	R3 R2 R3 ; R3 := R2 * R3
	30	[2860]	SETTABLE 	R0 K4 R3 ; R0["Count"] := R3
	31	[2863]	GETGLOBAL	R3 K10 ; R3 := mRewards
	32	[2863]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	33	[2864]	EQ       	0 R3 K6 ; if R3 ~= nil then PC := 38
	34	[2864]	JMP      	38 ; PC := 38
	35	[2865]	GETGLOBAL	R4 K10 ; R4 := mRewards
	36	[2865]	SETTABLE 	R4 R1 R0 ; R4[R1] := R0
	37	[2865]	JMP      	65 ; PC := 65
	38	[2867]	GETGLOBAL	R4 K8 ; R4 := 0x5f0788c4
	39	[2867]	GETTABLE 	R5 R0 K7 ; R5 := R0["MergeDesc"]
	40	[2867]	TEST     	R5 1 ; if R5 then PC := 43
	41	[2867]	JMP      	43 ; PC := 43
	42	[2867]	LOADK    	R5 K11 ; R5 := ""
	43	[2867]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[2867]	SETTABLE 	R3 K7 R4 ; R3["MergeDesc"] := R4
	45	[2868]	GETTABLE 	R4 R3 K4 ; R4 := R3["Count"]
	46	[2868]	EQ       	1 R4 K6 ; if R4 == nil then PC := 55
	47	[2868]	JMP      	55 ; PC := 55
	48	[2868]	GETTABLE 	R4 R0 K4 ; R4 := R0["Count"]
	49	[2868]	EQ       	1 R4 K6 ; if R4 == nil then PC := 55
	50	[2868]	JMP      	55 ; PC := 55
	51	[2869]	GETTABLE 	R4 R3 K4 ; R4 := R3["Count"]
	52	[2869]	GETTABLE 	R5 R0 K4 ; R5 := R0["Count"]
	53	[2869]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	54	[2869]	SETTABLE 	R3 K4 R4 ; R3["Count"] := R4
	55	[2872]	GETGLOBAL	R4 K12 ; R4 := 0xcfc01047
	56	[2872]	MOVE     	R5 R0 ; R5 := R0
	57	[2872]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	58	[2872]	JMP      	63 ; PC := 63
	59	[2873]	GETTABLE 	R9 R3 R7 ; R9 := R3[R7]
	60	[2873]	EQ       	0 R9 K6 ; if R9 ~= nil then PC := 63
	61	[2873]	JMP      	63 ; PC := 63
	62	[2874]	SETTABLE 	R3 R7 R8 ; R3[R7] := R8
	63	[2872]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 59; R6 := R7 end
	64	[2875]	JMP      	59 ; PC := 59
	65	[2878]	RETURN   	R0 1 ; return 

function #92 <?:2880,2882> (8 instructions, 32 bytes at 000001608BA116A0)
0 params, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[2881]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2881]	GETTABLE 	R0 R0 K1 ; R0 := R0["UI_ContinueResponse"]
	3	[2881]	EQ       	1 R0 K2 ; if R0 == false then PC := 6
	4	[2881]	JMP      	6 ; PC := 6
	5	[2881]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 6
	6	[2881]	OP_LOADBOOL	R0 1 0 ; R0 := true
	7	[2881]	RETURN   	R0 2 ; return R0 
	8	[2882]	RETURN   	R0 1 ; return 

function #93 <?:2884,2886> (11 instructions, 44 bytes at 00000160FCFAD620)
0 params, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[2885]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[2885]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xf2deaf69]
	3	[2885]	GETGLOBAL	R2 K2 ; R2 := gLotusGameRulesType
	4	[2885]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[2885]	TEST     	R0 0 ; if not R0 then PC := 10
	6	[2885]	JMP      	10 ; PC := 10
	7	[2885]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	8	[2885]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xf5bdb4dc]
	9	[2885]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[2885]	RETURN   	R0 2 ; return R0 
	11	[2886]	RETURN   	R0 1 ; return 

function #94 <?:2888,3485> (1975 instructions, 7900 bytes at 00000160FCFAD780)
1 param, 132 slots, 23 upvalues, 0 locals, 168 constants, 0 functions
	1	[2890]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[2890]	LOADK    	R2 K1 ; R2 := "EndOfMatch.lua: GiveMissionRewards. success="
	3	[2890]	GETGLOBAL	R3 K2 ; R3 := 0x64fb1586
	4	[2890]	MOVE     	R4 R0 ; R4 := R0
	5	[2890]	CALL     	R3 2 2 ; R3 := R3(R4)
	6	[2890]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	7	[2890]	CALL     	R1 2 1 ; R1(R2)
	8	[2892]	GETGLOBAL	R1 K3 ; R1 := 0x76ea806b
	9	[2892]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x3f3ae64c]
	10	[2892]	LOADK    	R3 := 0.000000
	11	[2892]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[2893]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	13	[2893]	MOVE     	R3 R1 ; R3 := R1
	14	[2893]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[2893]	TEST     	R2 1 ; if R2 then PC := 27
	16	[2893]	JMP      	27 ; PC := 27
	17	[2893]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	18	[2893]	GETGLOBAL	R3 K6 ; R3 := mGameData
	19	[2893]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[2893]	TEST     	R2 1 ; if R2 then PC := 27
	21	[2893]	JMP      	27 ; PC := 27
	22	[2893]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	23	[2893]	GETGLOBAL	R3 K7 ; R3 := 0xbe190284
	24	[2893]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[2893]	TEST     	R2 0 ; if not R2 then PC := 28
	26	[2893]	JMP      	28 ; PC := 28
	27	[2894]	RETURN   	R0 1 ; return 
	28	[2897]	GETGLOBAL	R2 K8 ; R2 := _T
	29	[2897]	GETTABLE 	R2 R2 K9 ; R2 := R2["eomScreenMode"]
	30	[2897]	GETUPVAL 	R3 U0 ; R3 := U0
	31	[2897]	GETTABLE 	R3 R3 K10 ; R3 := R3["ACTUAL_EOM"]
	32	[2897]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 35
	33	[2897]	JMP      	35 ; PC := 35
	34	[2897]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 35
	35	[2897]	OP_LOADBOOL	R2 1 0 ; R2 := true
	36	[2899]	TEST     	R2 0 ; if not R2 then PC := 58
	37	[2899]	JMP      	58 ; PC := 58
	38	[2900]	GETGLOBAL	R3 K6 ; R3 := mGameData
	39	[2900]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0xeefc3319]
	40	[2900]	CALL     	R3 2 1 ; R3(R4)
	41	[2901]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	42	[2901]	GETGLOBAL	R4 K3 ; R4 := 0x76ea806b
	43	[2901]	CALL     	R3 2 2 ; R3 := R3(R4)
	44	[2901]	TEST     	R3 1 ; if R3 then PC := 58
	45	[2901]	JMP      	58 ; PC := 58
	46	[2902]	GETGLOBAL	R3 K6 ; R3 := mGameData
	47	[2902]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0xb18a9b66]
	48	[2902]	OP_LOADBOOL	R5 0 0 ; R5 := false
	49	[2902]	CALL     	R3 3 1 ; R3(R4,R5)
	50	[2903]	GETGLOBAL	R3 K3 ; R3 := 0x76ea806b
	51	[2903]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0x524772b5]
	52	[2903]	LOADK    	R5 := 0.000000
	53	[2903]	CALL     	R3 3 1 ; R3(R4,R5)
	54	[2904]	GETGLOBAL	R3 K6 ; R3 := mGameData
	55	[2904]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0xb18a9b66]
	56	[2904]	OP_LOADBOOL	R5 1 0 ; R5 := true
	57	[2904]	CALL     	R3 3 1 ; R3(R4,R5)
	58	[2908]	GETGLOBAL	R3 K14 ; R3 := 0x89326c93
	59	[2908]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0x7d108ddb]
	60	[2908]	CALL     	R3 2 2 ; R3 := R3(R4)
	61	[2909]	GETUPVAL 	R4 U1 ; R4 := U1
	62	[2909]	CALL     	R4 1 2 ; R4 := R4()
	63	[2911]	GETGLOBAL	R5 K0 ; R5 := 0x3d106989
	64	[2911]	LOADK    	R6 K16 ; R6 := "Connected: "
	65	[2911]	GETGLOBAL	R7 K2 ; R7 := 0x64fb1586
	66	[2911]	GETGLOBAL	R8 K7 ; R8 := 0xbe190284
	67	[2911]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0x7926b5dc]
	68	[2911]	CALL     	R8 2 0 ; R8,... := R8(R9)
	69	[2911]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	70	[2911]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	71	[2911]	CALL     	R5 2 1 ; R5(R6)
	72	[2913]	GETGLOBAL	R5 K14 ; R5 := 0x89326c93
	73	[2913]	SELF     	R5 R5 K18 ; R6 := R5; R5 := R5[0xc7fcada9]
	74	[2913]	GETGLOBAL	R7 K19 ; R7 := 0x89e9ee53
	75	[2913]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	76	[2914]	LOADNIL  	R6 R6 ; R6 := nil
	77	[2915]	GETGLOBAL	R7 K5 ; R7 := 0x7b998233
	78	[2915]	MOVE     	R8 R5 ; R8 := R5
	79	[2915]	CALL     	R7 2 2 ; R7 := R7(R8)
	80	[2915]	TEST     	R7 1 ; if R7 then PC := 83
	81	[2915]	JMP      	83 ; PC := 83
	82	[2916]	GETTABLE 	R6 R5 K20 ; R6 := R5[1.000000]
	83	[2918]	GETGLOBAL	R7 K5 ; R7 := 0x7b998233
	84	[2918]	MOVE     	R8 R6 ; R8 := R6
	85	[2918]	CALL     	R7 2 2 ; R7 := R7(R8)
	86	[2918]	TEST     	R7 0 ; if not R7 then PC := 91
	87	[2918]	JMP      	91 ; PC := 91
	88	[2919]	GETGLOBAL	R7 K0 ; R7 := 0x3d106989
	89	[2919]	LOADK    	R8 K21 ; R8 := "extractionTrigger is nil! Assuming that all players are touching by default."
	90	[2919]	CALL     	R7 2 1 ; R7(R8)
	91	[2922]	GETGLOBAL	R7 K14 ; R7 := 0x89326c93
	92	[2922]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0xc7fcada9]
	93	[2922]	GETGLOBAL	R9 K22 ; R9 := 0x32d8c192
	94	[2922]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	95	[2923]	LOADNIL  	R8 R8 ; R8 := nil
	96	[2924]	GETGLOBAL	R9 K5 ; R9 := 0x7b998233
	97	[2924]	MOVE     	R10 R7 ; R10 := R7
	98	[2924]	CALL     	R9 2 2 ; R9 := R9(R10)
	99	[2924]	TEST     	R9 1 ; if R9 then PC := 102
	100	[2924]	JMP      	102 ; PC := 102
	101	[2925]	GETTABLE 	R8 R7 K20 ; R8 := R7[1.000000]
	102	[2928]	GETGLOBAL	R9 K5 ; R9 := 0x7b998233
	103	[2928]	GETGLOBAL	R10 K23 ; R10 := 0xacaaef01
	104	[2928]	CALL     	R9 2 2 ; R9 := R9(R10)
	105	[2928]	TEST     	R9 1 ; if R9 then PC := 111
	106	[2928]	JMP      	111 ; PC := 111
	107	[2929]	GETUPVAL 	R9 U2 ; R9 := U2
	108	[2929]	GETTABLE 	R9 R9 K24 ; R9 := R9[0x659d451f]
	109	[2929]	GETGLOBAL	R10 K23 ; R10 := 0xacaaef01
	110	[2929]	CALL     	R9 2 1 ; R9(R10)
	111	[2933]	GETGLOBAL	R9 K5 ; R9 := 0x7b998233
	112	[2933]	MOVE     	R10 R8 ; R10 := R8
	113	[2933]	CALL     	R9 2 2 ; R9 := R9(R10)
	114	[2933]	TEST     	R9 1 ; if R9 then PC := 159
	115	[2933]	JMP      	159 ; PC := 159
	116	[2933]	GETGLOBAL	R9 K5 ; R9 := 0x7b998233
	117	[2933]	MOVE     	R10 R6 ; R10 := R6
	118	[2933]	CALL     	R9 2 2 ; R9 := R9(R10)
	119	[2933]	TEST     	R9 1 ; if R9 then PC := 159
	120	[2933]	JMP      	159 ; PC := 159
	121	[2934]	LOADK    	R9 := 0.000000
	122	[2935]	LOADK    	R10 := 0.000000
	123	[2936]	LOADK    	R11 := 1.000000
	124	[2936]	LEN      	R12 R3 ; R12 := # R3
	125	[2936]	LOADK    	R13 := 1.000000
	126	[2936]	FORPREP  	R11 149 ; R11 -= R13; PC := 149
	127	[2937]	LOADNIL  	R15 R15 ; R15 := nil
	128	[2938]	GETGLOBAL	R16 K5 ; R16 := 0x7b998233
	129	[2938]	GETTABLE 	R17 R3 R14 ; R17 := R3[R14]
	130	[2938]	CALL     	R16 2 2 ; R16 := R16(R17)
	131	[2938]	TEST     	R16 1 ; if R16 then PC := 149
	132	[2938]	JMP      	149 ; PC := 149
	133	[2939]	GETTABLE 	R16 R3 R14 ; R16 := R3[R14]
	134	[2939]	SELF     	R16 R16 K25 ; R17 := R16; R16 := R16[0xbb610e5b]
	135	[2939]	CALL     	R16 2 2 ; R16 := R16(R17)
	136	[2939]	MOVE     	R15 R16 ; R15 := R16
	137	[2940]	SELF     	R16 R6 K26 ; R17 := R6; R16 := R6[0x13d5d3fb]
	138	[2940]	MOVE     	R18 R15 ; R18 := R15
	139	[2940]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	140	[2940]	TEST     	R16 0 ; if not R16 then PC := 143
	141	[2940]	JMP      	143 ; PC := 143
	142	[2941]	ADD      	R9 R9 K20 ; R9 := R9 + 1.000000
	143	[2943]	SELF     	R16 R8 K26 ; R17 := R8; R16 := R8[0x13d5d3fb]
	144	[2943]	MOVE     	R18 R15 ; R18 := R15
	145	[2943]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	146	[2943]	TEST     	R16 0 ; if not R16 then PC := 149
	147	[2943]	JMP      	149 ; PC := 149
	148	[2944]	ADD      	R10 R10 K20 ; R10 := R10 + 1.000000
	149	[2936]	FORLOOP  	R11 127 ; R11 += R13; if R11 <= R12 then begin PC := 127; R14 := R11 end
	150	[2949]	LT       	0 R9 R10 ; if R9 >= R10 then PC := 159
	151	[2949]	JMP      	159 ; PC := 159
	152	[2950]	GETGLOBAL	R16 K0 ; R16 := 0x3d106989
	153	[2950]	LOADK    	R17 K27 ; R17 := "Alt trigger"
	154	[2950]	CALL     	R16 2 1 ; R16(R17)
	155	[2951]	GETGLOBAL	R16 K7 ; R16 := 0xbe190284
	156	[2951]	SELF     	R16 R16 K28 ; R17 := R16; R16 := R16[0x17e9eaa5]
	157	[2951]	CALL     	R16 2 1 ; R16(R17)
	158	[2952]	MOVE     	R6 R8 ; R6 := R8
	159	[2956]	GETGLOBAL	R16 K7 ; R16 := 0xbe190284
	160	[2956]	SELF     	R16 R16 K29 ; R17 := R16; R16 := R16[0x3c729041]
	161	[2956]	CALL     	R16 2 1 ; R16(R17)
	162	[2958]	LOADK    	R16 := 1.250000
	163	[2960]	LOADK    	R17 := 1.000000
	164	[2961]	GETGLOBAL	R18 K5 ; R18 := 0x7b998233
	165	[2961]	MOVE     	R19 R4 ; R19 := R4
	166	[2961]	CALL     	R18 2 2 ; R18 := R18(R19)
	167	[2961]	TEST     	R18 1 ; if R18 then PC := 175
	168	[2961]	JMP      	175 ; PC := 175
	169	[2962]	GETGLOBAL	R18 K30 ; R18 := 0x9bafffe3
	170	[2962]	LOADK    	R19 := 1.000000
	171	[2962]	LOADK    	R20 := 5.000000
	172	[2962]	GETTABLE 	R21 R4 K31 ; R21 := R4["difficulty"]
	173	[2962]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	174	[2962]	MOVE     	R17 R18 ; R17 := R18
	175	[2965]	TEST     	R0 0 ; if not R0 then PC := 217
	176	[2965]	JMP      	217 ; PC := 217
	177	[2965]	TEST     	R2 0 ; if not R2 then PC := 217
	178	[2965]	JMP      	217 ; PC := 217
	179	[2966]	GETUPVAL 	R18 U3 ; R18 := U3
	180	[2966]	CALL     	R18 1 2 ; R18 := R18()
	181	[2966]	TEST     	R18 1 ; if R18 then PC := 194
	182	[2966]	JMP      	194 ; PC := 194
	183	[2966]	GETGLOBAL	R18 K6 ; R18 := mGameData
	184	[2966]	SELF     	R18 R18 K32 ; R19 := R18; R18 := R18[0xc7a69995]
	185	[2966]	CALL     	R18 2 2 ; R18 := R18(R19)
	186	[2966]	TEST     	R18 0 ; if not R18 then PC := 194
	187	[2966]	JMP      	194 ; PC := 194
	188	[2967]	LOADK    	R18 := 1.000000
	189	[2968]	MUL      	R16 R16 R18 ; R16 := R16 * R18
	190	[2969]	GETGLOBAL	R19 K6 ; R19 := mGameData
	191	[2969]	SELF     	R19 R19 K33 ; R20 := R19; R19 := R19[0x661e3816]
	192	[2969]	OP_LOADBOOL	R21 0 0 ; R21 := false
	193	[2969]	CALL     	R19 3 1 ; R19(R20,R21)
	194	[2972]	GETUPVAL 	R19 U3 ; R19 := U3
	195	[2972]	CALL     	R19 1 2 ; R19 := R19()
	196	[2972]	TEST     	R19 0 ; if not R19 then PC := 213
	197	[2972]	JMP      	213 ; PC := 213
	198	[2972]	GETUPVAL 	R19 U4 ; R19 := U4
	199	[2972]	CALL     	R19 1 2 ; R19 := R19()
	200	[2972]	TEST     	R19 0 ; if not R19 then PC := 213
	201	[2972]	JMP      	213 ; PC := 213
	202	[2972]	GETGLOBAL	R19 K6 ; R19 := mGameData
	203	[2972]	SELF     	R19 R19 K34 ; R20 := R19; R19 := R19[0x3b25af29]
	204	[2972]	CALL     	R19 2 2 ; R19 := R19(R20)
	205	[2972]	TEST     	R19 0 ; if not R19 then PC := 213
	206	[2972]	JMP      	213 ; PC := 213
	207	[2973]	LOADK    	R19 := 1.000000
	208	[2974]	MUL      	R16 R16 R19 ; R16 := R16 * R19
	209	[2975]	GETGLOBAL	R20 K6 ; R20 := mGameData
	210	[2975]	SELF     	R20 R20 K35 ; R21 := R20; R20 := R20[0x78a80f52]
	211	[2975]	OP_LOADBOOL	R22 0 0 ; R22 := false
	212	[2975]	CALL     	R20 3 1 ; R20(R21,R22)
	213	[2978]	GETGLOBAL	R20 K7 ; R20 := 0xbe190284
	214	[2978]	SELF     	R20 R20 K36 ; R21 := R20; R20 := R20[0xcbb96198]
	215	[2978]	CALL     	R20 2 2 ; R20 := R20(R21)
	216	[2978]	MUL      	R16 R16 R20 ; R16 := R16 * R20
	217	[2981]	TEST     	R0 0 ; if not R0 then PC := 228
	218	[2981]	JMP      	228 ; PC := 228
	219	[2981]	TEST     	R2 0 ; if not R2 then PC := 228
	220	[2981]	JMP      	228 ; PC := 228
	221	[2981]	GETUPVAL 	R20 U5 ; R20 := U5
	222	[2981]	CALL     	R20 1 2 ; R20 := R20()
	223	[2981]	TEST     	R20 0 ; if not R20 then PC := 228
	224	[2981]	JMP      	228 ; PC := 228
	225	[2983]	GETGLOBAL	R20 K7 ; R20 := 0xbe190284
	226	[2983]	SELF     	R20 R20 K37 ; R21 := R20; R20 := R20[0x092cb9a1]
	227	[2983]	CALL     	R20 2 1 ; R20(R21)
	228	[2986]	LOADK    	R20 := 0.000000
	229	[2987]	LOADK    	R21 := 0.000000
	230	[2988]	LOADK    	R22 := 0.000000
	231	[2989]	LOADK    	R23 := 0.000000
	232	[2990]	LOADK    	R24 := 0.000000
	233	[2991]	LOADK    	R25 := 0.000000
	234	[2992]	LOADK    	R26 := 0.000000
	235	[2993]	LOADK    	R27 := 0.000000
	236	[2994]	LOADK    	R28 := 0.000000
	237	[2995]	LOADK    	R29 := 0.000000
	238	[2996]	LOADK    	R30 := 0.000000
	239	[2997]	LOADK    	R31 := 0.000000
	240	[2998]	LOADK    	R32 := 0.000000
	241	[2999]	LOADK    	R33 := 0.000000
	242	[3000]	LOADK    	R34 := 0.000000
	243	[3001]	LOADK    	R35 := 0.000000
	244	[3002]	LOADK    	R36 := 0.000000
	245	[3003]	LOADK    	R37 := 0.000000
	246	[3005]	LOADK    	R38 := 0.000000
	247	[3006]	LOADK    	R39 := 0.000000
	248	[3007]	LOADK    	R40 := 0.000000
	249	[3008]	LOADK    	R41 := 0.000000
	250	[3009]	LOADK    	R42 := 0.000000
	251	[3010]	LOADK    	R43 := 0.000000
	252	[3011]	LOADK    	R44 := 0.000000
	253	[3012]	LOADK    	R45 := 0.000000
	254	[3013]	LOADK    	R46 := 0.000000
	255	[3014]	LOADK    	R47 := 0.000000
	256	[3015]	LOADK    	R48 := 0.000000
	257	[3016]	LOADK    	R49 := 0.000000
	258	[3017]	LOADK    	R50 := 0.000000
	259	[3019]	GETGLOBAL	R51 K38 ; R51 := 0xc8802016
	260	[3019]	MOVE     	R52 R3 ; R52 := R3
	261	[3019]	CALL     	R51 2 4 ; R51,R52,R53 := R51(R52)
	262	[3019]	JMP      	1750 ; PC := 1750
	263	[3020]	LOADNIL  	R56 R57 ; R56 := R57 := nil
	264	[3023]	LOADK    	R58 := 5.000000
	265	[3025]	GETGLOBAL	R59 K5 ; R59 := 0x7b998233
	266	[3025]	MOVE     	R60 R55 ; R60 := R55
	267	[3025]	CALL     	R59 2 2 ; R59 := R59(R60)
	268	[3025]	TEST     	R59 1 ; if R59 then PC := 290
	269	[3025]	JMP      	290 ; PC := 290
	270	[3026]	SELF     	R59 R55 K40 ; R60 := R55; R59 := R55[0x62c81b76]
	271	[3026]	CALL     	R59 2 2 ; R59 := R59(R60)
	272	[3026]	GETTABLE 	R59 R59 K41 ; R59 := R59["mOperatorType"]
	273	[3026]	EQ       	0 R59 K42 ; if R59 ~= 4.000000 then PC := 276
	274	[3026]	JMP      	276 ; PC := 276
	275	[3027]	LOADK    	R58 := 9.000000
	276	[3030]	GETUPVAL 	R59 U3 ; R59 := U3
	277	[3030]	CALL     	R59 1 2 ; R59 := R59()
	278	[3030]	TEST     	R59 0 ; if not R59 then PC := 284
	279	[3030]	JMP      	284 ; PC := 284
	280	[3031]	SELF     	R59 R55 K25 ; R60 := R55; R59 := R55[0xbb610e5b]
	281	[3031]	CALL     	R59 2 2 ; R59 := R59(R60)
	282	[3031]	MOVE     	R56 R59 ; R56 := R59
	283	[3031]	JMP      	287 ; PC := 287
	284	[3033]	SELF     	R59 R55 K43 ; R60 := R55; R59 := R55[0xa534c3ac]
	285	[3033]	CALL     	R59 2 2 ; R59 := R59(R60)
	286	[3033]	MOVE     	R56 R59 ; R56 := R59
	287	[3035]	SELF     	R59 R55 K44 ; R60 := R55; R59 := R55[0x5578d98b]
	288	[3035]	CALL     	R59 2 2 ; R59 := R59(R60)
	289	[3035]	MOVE     	R57 R59 ; R57 := R59
	290	[3037]	LOADNIL  	R59 R59 ; R59 := nil
	291	[3038]	GETGLOBAL	R60 K5 ; R60 := 0x7b998233
	292	[3038]	MOVE     	R61 R56 ; R61 := R56
	293	[3038]	CALL     	R60 2 2 ; R60 := R60(R61)
	294	[3038]	TEST     	R60 1 ; if R60 then PC := 312
	295	[3038]	JMP      	312 ; PC := 312
	296	[3039]	SELF     	R60 R56 K45 ; R61 := R56; R60 := R56[0xf2deaf69]
	297	[3039]	GETGLOBAL	R62 K46 ; R62 := gLotusNpcAvatarType
	298	[3039]	CALL     	R60 3 2 ; R60 := R60(R61,R62)
	299	[3039]	TEST     	R60 0 ; if not R60 then PC := 309
	300	[3039]	JMP      	309 ; PC := 309
	301	[3040]	SELF     	R60 R56 K47 ; R61 := R56; R60 := R56[0xd4f67d6e]
	302	[3040]	CALL     	R60 2 2 ; R60 := R60(R61)
	303	[3041]	GETGLOBAL	R61 K5 ; R61 := 0x7b998233
	304	[3041]	MOVE     	R62 R60 ; R62 := R60
	305	[3041]	CALL     	R61 2 2 ; R61 := R61(R62)
	306	[3041]	TEST     	R61 1 ; if R61 then PC := 309
	307	[3041]	JMP      	309 ; PC := 309
	308	[3042]	MOVE     	R56 R60 ; R56 := R60
	309	[3045]	SELF     	R61 R56 K48 ; R62 := R56; R61 := R56[0xb8c8dfbd]
	310	[3045]	CALL     	R61 2 2 ; R61 := R61(R62)
	311	[3045]	MOVE     	R59 R61 ; R59 := R61
	312	[3048]	GETGLOBAL	R61 K5 ; R61 := 0x7b998233
	313	[3048]	MOVE     	R62 R59 ; R62 := R59
	314	[3048]	CALL     	R61 2 2 ; R61 := R61(R62)
	315	[3048]	TEST     	R61 1 ; if R61 then PC := 1735
	316	[3048]	JMP      	1735 ; PC := 1735
	317	[3049]	OP_LOADBOOL	R61 1 0 ; R61 := true
	318	[3050]	GETGLOBAL	R62 K5 ; R62 := 0x7b998233
	319	[3050]	MOVE     	R63 R6 ; R63 := R6
	320	[3050]	CALL     	R62 2 2 ; R62 := R62(R63)
	321	[3050]	TEST     	R62 1 ; if R62 then PC := 327
	322	[3050]	JMP      	327 ; PC := 327
	323	[3051]	SELF     	R62 R6 K26 ; R63 := R6; R62 := R6[0x13d5d3fb]
	324	[3051]	MOVE     	R64 R56 ; R64 := R56
	325	[3051]	CALL     	R62 3 2 ; R62 := R62(R63,R64)
	326	[3051]	MOVE     	R61 R62 ; R61 := R62
	327	[3053]	GETGLOBAL	R62 K0 ; R62 := 0x3d106989
	328	[3053]	SELF     	R63 R55 K49 ; R64 := R55; R63 := R55[0x5ca33548]
	329	[3053]	CALL     	R63 2 2 ; R63 := R63(R64)
	330	[3053]	LOADK    	R64 K50 ; R64 := " - IsInTrigger="
	331	[3053]	GETGLOBAL	R65 K2 ; R65 := 0x64fb1586
	332	[3053]	MOVE     	R66 R61 ; R66 := R61
	333	[3053]	CALL     	R65 2 2 ; R65 := R65(R66)
	334	[3053]	CONCAT   	R63 R63 R65 ; R63 := R63 .. R64 .. R65
	335	[3053]	CALL     	R62 2 1 ; R62(R63)
	336	[3055]	GETGLOBAL	R62 K39 ; R62 := 0x6c97a788
	337	[3055]	GETTABLE 	R62 R62 K52 ; R62 := R62[0xc1495463]
	338	[3055]	CALL     	R62 1 2 ; R62 := R62()
	339	[3055]	SETGLOBALHASH	R62 K51 ; mPlayerMissionInfo := R62
	340	[3057]	GETUPVAL 	R62 U2 ; R62 := U2
	341	[3057]	GETTABLE 	R62 R62 K53 ; R62 := R62[0x06d055f9]
	342	[3057]	GETUPVAL 	R63 U6 ; R63 := U6
	343	[3057]	GETTABLE 	R63 R63 K54 ; R63 := R63["isPvp"]
	344	[3057]	LOADK    	R64 := 3.000000
	345	[3057]	LOADK    	R65 := 0.000000
	346	[3057]	CALL     	R62 4 2 ; R62 := R62(R63,R64,R65)
	347	[3058]	TESTSET  	R63 R0 0 ; if not R0 then PC := 350 else R63 := R0 
	348	[3058]	JMP      	350 ; PC := 350
	349	[3058]	MOVE     	R63 R2 ; R63 := R2
	350	[3062]	SELF     	R64 R59 K55 ; R65 := R59; R64 := R59[0xb6731115]
	351	[3062]	MOVE     	R66 R62 ; R66 := R62
	352	[3062]	LOADK    	R67 := 0.000000
	353	[3062]	MOVE     	R68 R63 ; R68 := R63
	354	[3062]	CALL     	R64 5 2 ; R64 := R64(R65,R66,R67,R68)
	355	[3062]	MOVE     	R20 R64 ; R20 := R64
	356	[3063]	SELF     	R64 R59 K56 ; R65 := R59; R64 := R59[0x4fb6eaa9]
	357	[3063]	MOVE     	R66 R62 ; R66 := R62
	358	[3063]	LOADK    	R67 := 0.000000
	359	[3063]	CALL     	R64 4 2 ; R64 := R64(R65,R66,R67)
	360	[3063]	MOVE     	R38 R64 ; R38 := R64
	361	[3064]	GETUPVAL 	R64 U2 ; R64 := U2
	362	[3064]	GETTABLE 	R64 R64 K57 ; R64 := R64[0x74a11ec6]
	363	[3064]	MUL      	R65 R16 R20 ; R65 := R16 * R20
	364	[3064]	CALL     	R64 2 2 ; R64 := R64(R65)
	365	[3065]	GETGLOBAL	R65 K51 ; R65 := mPlayerMissionInfo
	366	[3065]	SELF     	R65 R65 K58 ; R66 := R65; R65 := R65[0x8d5b45c1]
	367	[3065]	MOVE     	R67 R62 ; R67 := R62
	368	[3065]	LOADK    	R68 := 0.000000
	369	[3065]	MOVE     	R69 R64 ; R69 := R64
	370	[3065]	CALL     	R65 5 1 ; R65(R66,R67,R68,R69)
	371	[3068]	SELF     	R65 R59 K55 ; R66 := R59; R65 := R59[0xb6731115]
	372	[3068]	MOVE     	R67 R62 ; R67 := R62
	373	[3068]	LOADK    	R68 := 1.000000
	374	[3068]	MOVE     	R69 R63 ; R69 := R63
	375	[3068]	CALL     	R65 5 2 ; R65 := R65(R66,R67,R68,R69)
	376	[3068]	MOVE     	R21 R65 ; R21 := R65
	377	[3069]	SELF     	R65 R59 K56 ; R66 := R59; R65 := R59[0x4fb6eaa9]
	378	[3069]	MOVE     	R67 R62 ; R67 := R62
	379	[3069]	LOADK    	R68 := 1.000000
	380	[3069]	CALL     	R65 4 2 ; R65 := R65(R66,R67,R68)
	381	[3069]	MOVE     	R39 R65 ; R39 := R65
	382	[3070]	GETUPVAL 	R65 U2 ; R65 := U2
	383	[3070]	GETTABLE 	R65 R65 K53 ; R65 := R65[0x06d055f9]
	384	[3070]	EQ       	1 R0 K59 ; if R0 == false then PC := 387
	385	[3070]	JMP      	387 ; PC := 387
	386	[3070]	OP_LOADBOOL	R66 0 1 ; R66 := false; PC := 387
	387	[3070]	OP_LOADBOOL	R66 1 0 ; R66 := true
	388	[3070]	LOADK    	R67 := 0.000000
	389	[3070]	GETUPVAL 	R68 U2 ; R68 := U2
	390	[3070]	GETTABLE 	R68 R68 K57 ; R68 := R68[0x74a11ec6]
	391	[3070]	MUL      	R69 R16 R21 ; R69 := R16 * R21
	392	[3070]	CALL     	R68 2 0 ; R68,... := R68(R69)
	393	[3070]	CALL     	R65 0 2 ; R65 := R65(R66,...)
	394	[3071]	GETGLOBAL	R66 K51 ; R66 := mPlayerMissionInfo
	395	[3071]	SELF     	R66 R66 K58 ; R67 := R66; R66 := R66[0x8d5b45c1]
	396	[3071]	MOVE     	R68 R62 ; R68 := R62
	397	[3071]	LOADK    	R69 := 1.000000
	398	[3071]	MOVE     	R70 R65 ; R70 := R65
	399	[3071]	CALL     	R66 5 1 ; R66(R67,R68,R69,R70)
	400	[3073]	SELF     	R66 R59 K55 ; R67 := R59; R66 := R59[0xb6731115]
	401	[3073]	MOVE     	R68 R62 ; R68 := R62
	402	[3073]	LOADK    	R69 := 2.000000
	403	[3073]	MOVE     	R70 R63 ; R70 := R63
	404	[3073]	CALL     	R66 5 2 ; R66 := R66(R67,R68,R69,R70)
	405	[3073]	MOVE     	R22 R66 ; R22 := R66
	406	[3074]	SELF     	R66 R59 K56 ; R67 := R59; R66 := R59[0x4fb6eaa9]
	407	[3074]	MOVE     	R68 R62 ; R68 := R62
	408	[3074]	LOADK    	R69 := 2.000000
	409	[3074]	CALL     	R66 4 2 ; R66 := R66(R67,R68,R69)
	410	[3074]	MOVE     	R40 R66 ; R40 := R66
	411	[3075]	GETUPVAL 	R66 U2 ; R66 := U2
	412	[3075]	GETTABLE 	R66 R66 K53 ; R66 := R66[0x06d055f9]
	413	[3075]	EQ       	1 R0 K59 ; if R0 == false then PC := 416
	414	[3075]	JMP      	416 ; PC := 416
	415	[3075]	OP_LOADBOOL	R67 0 1 ; R67 := false; PC := 416
	416	[3075]	OP_LOADBOOL	R67 1 0 ; R67 := true
	417	[3075]	LOADK    	R68 := 0.000000
	418	[3075]	GETUPVAL 	R69 U2 ; R69 := U2
	419	[3075]	GETTABLE 	R69 R69 K57 ; R69 := R69[0x74a11ec6]
	420	[3075]	MUL      	R70 R16 R22 ; R70 := R16 * R22
	421	[3075]	CALL     	R69 2 0 ; R69,... := R69(R70)
	422	[3075]	CALL     	R66 0 2 ; R66 := R66(R67,...)
	423	[3076]	GETGLOBAL	R67 K51 ; R67 := mPlayerMissionInfo
	424	[3076]	SELF     	R67 R67 K58 ; R68 := R67; R67 := R67[0x8d5b45c1]
	425	[3076]	MOVE     	R69 R62 ; R69 := R62
	426	[3076]	LOADK    	R70 := 2.000000
	427	[3076]	MOVE     	R71 R66 ; R71 := R66
	428	[3076]	CALL     	R67 5 1 ; R67(R68,R69,R70,R71)
	429	[3078]	SELF     	R67 R59 K55 ; R68 := R59; R67 := R59[0xb6731115]
	430	[3078]	MOVE     	R69 R62 ; R69 := R62
	431	[3078]	LOADK    	R70 := 3.000000
	432	[3078]	MOVE     	R71 R63 ; R71 := R63
	433	[3078]	CALL     	R67 5 2 ; R67 := R67(R68,R69,R70,R71)
	434	[3078]	MOVE     	R23 R67 ; R23 := R67
	435	[3079]	SELF     	R67 R59 K56 ; R68 := R59; R67 := R59[0x4fb6eaa9]
	436	[3079]	MOVE     	R69 R62 ; R69 := R62
	437	[3079]	LOADK    	R70 := 3.000000
	438	[3079]	CALL     	R67 4 2 ; R67 := R67(R68,R69,R70)
	439	[3079]	MOVE     	R41 R67 ; R41 := R67
	440	[3080]	GETUPVAL 	R67 U2 ; R67 := U2
	441	[3080]	GETTABLE 	R67 R67 K53 ; R67 := R67[0x06d055f9]
	442	[3080]	EQ       	1 R0 K59 ; if R0 == false then PC := 445
	443	[3080]	JMP      	445 ; PC := 445
	444	[3080]	OP_LOADBOOL	R68 0 1 ; R68 := false; PC := 445
	445	[3080]	OP_LOADBOOL	R68 1 0 ; R68 := true
	446	[3080]	LOADK    	R69 := 0.000000
	447	[3080]	GETUPVAL 	R70 U2 ; R70 := U2
	448	[3080]	GETTABLE 	R70 R70 K57 ; R70 := R70[0x74a11ec6]
	449	[3080]	MUL      	R71 R16 R23 ; R71 := R16 * R23
	450	[3080]	CALL     	R70 2 0 ; R70,... := R70(R71)
	451	[3080]	CALL     	R67 0 2 ; R67 := R67(R68,...)
	452	[3081]	GETGLOBAL	R68 K51 ; R68 := mPlayerMissionInfo
	453	[3081]	SELF     	R68 R68 K58 ; R69 := R68; R68 := R68[0x8d5b45c1]
	454	[3081]	MOVE     	R70 R62 ; R70 := R62
	455	[3081]	LOADK    	R71 := 3.000000
	456	[3081]	MOVE     	R72 R67 ; R72 := R67
	457	[3081]	CALL     	R68 5 1 ; R68(R69,R70,R71,R72)
	458	[3083]	SELF     	R68 R59 K55 ; R69 := R59; R68 := R59[0xb6731115]
	459	[3083]	MOVE     	R70 R62 ; R70 := R62
	460	[3083]	LOADK    	R71 := 4.000000
	461	[3083]	MOVE     	R72 R63 ; R72 := R63
	462	[3083]	CALL     	R68 5 2 ; R68 := R68(R69,R70,R71,R72)
	463	[3083]	MOVE     	R24 R68 ; R24 := R68
	464	[3084]	SELF     	R68 R59 K56 ; R69 := R59; R68 := R59[0x4fb6eaa9]
	465	[3084]	MOVE     	R70 R62 ; R70 := R62
	466	[3084]	LOADK    	R71 := 4.000000
	467	[3084]	CALL     	R68 4 2 ; R68 := R68(R69,R70,R71)
	468	[3084]	MOVE     	R42 R68 ; R42 := R68
	469	[3085]	GETUPVAL 	R68 U2 ; R68 := U2
	470	[3085]	GETTABLE 	R68 R68 K53 ; R68 := R68[0x06d055f9]
	471	[3085]	EQ       	1 R0 K59 ; if R0 == false then PC := 474
	472	[3085]	JMP      	474 ; PC := 474
	473	[3085]	OP_LOADBOOL	R69 0 1 ; R69 := false; PC := 474
	474	[3085]	OP_LOADBOOL	R69 1 0 ; R69 := true
	475	[3085]	LOADK    	R70 := 0.000000
	476	[3085]	GETUPVAL 	R71 U2 ; R71 := U2
	477	[3085]	GETTABLE 	R71 R71 K57 ; R71 := R71[0x74a11ec6]
	478	[3085]	MUL      	R72 R16 R24 ; R72 := R16 * R24
	479	[3085]	CALL     	R71 2 0 ; R71,... := R71(R72)
	480	[3085]	CALL     	R68 0 2 ; R68 := R68(R69,...)
	481	[3086]	GETGLOBAL	R69 K51 ; R69 := mPlayerMissionInfo
	482	[3086]	SELF     	R69 R69 K58 ; R70 := R69; R69 := R69[0x8d5b45c1]
	483	[3086]	MOVE     	R71 R62 ; R71 := R62
	484	[3086]	LOADK    	R72 := 4.000000
	485	[3086]	MOVE     	R73 R68 ; R73 := R68
	486	[3086]	CALL     	R69 5 1 ; R69(R70,R71,R72,R73)
	487	[3088]	SELF     	R69 R59 K55 ; R70 := R59; R69 := R59[0xb6731115]
	488	[3088]	MOVE     	R71 R62 ; R71 := R62
	489	[3088]	LOADK    	R72 := 5.000000
	490	[3088]	MOVE     	R73 R63 ; R73 := R63
	491	[3088]	CALL     	R69 5 2 ; R69 := R69(R70,R71,R72,R73)
	492	[3088]	MOVE     	R25 R69 ; R25 := R69
	493	[3089]	GETUPVAL 	R69 U2 ; R69 := U2
	494	[3089]	GETTABLE 	R69 R69 K57 ; R69 := R69[0x74a11ec6]
	495	[3089]	MUL      	R70 R16 R25 ; R70 := R16 * R25
	496	[3089]	CALL     	R69 2 2 ; R69 := R69(R70)
	497	[3090]	GETGLOBAL	R70 K51 ; R70 := mPlayerMissionInfo
	498	[3090]	SELF     	R70 R70 K58 ; R71 := R70; R70 := R70[0x8d5b45c1]
	499	[3090]	MOVE     	R72 R62 ; R72 := R62
	500	[3090]	LOADK    	R73 := 5.000000
	501	[3090]	MOVE     	R74 R69 ; R74 := R69
	502	[3090]	CALL     	R70 5 1 ; R70(R71,R72,R73,R74)
	503	[3092]	SELF     	R70 R59 K55 ; R71 := R59; R70 := R59[0xb6731115]
	504	[3092]	MOVE     	R72 R62 ; R72 := R62
	505	[3092]	LOADK    	R73 := 6.000000
	506	[3092]	MOVE     	R74 R63 ; R74 := R63
	507	[3092]	CALL     	R70 5 2 ; R70 := R70(R71,R72,R73,R74)
	508	[3092]	MOVE     	R26 R70 ; R26 := R70
	509	[3093]	GETUPVAL 	R70 U2 ; R70 := U2
	510	[3093]	GETTABLE 	R70 R70 K57 ; R70 := R70[0x74a11ec6]
	511	[3093]	MUL      	R71 R16 R26 ; R71 := R16 * R26
	512	[3093]	CALL     	R70 2 2 ; R70 := R70(R71)
	513	[3094]	GETGLOBAL	R71 K51 ; R71 := mPlayerMissionInfo
	514	[3094]	SELF     	R71 R71 K58 ; R72 := R71; R71 := R71[0x8d5b45c1]
	515	[3094]	MOVE     	R73 R62 ; R73 := R62
	516	[3094]	LOADK    	R74 := 6.000000
	517	[3094]	MOVE     	R75 R70 ; R75 := R70
	518	[3094]	CALL     	R71 5 1 ; R71(R72,R73,R74,R75)
	519	[3096]	SELF     	R71 R59 K60 ; R72 := R59; R71 := R59[0xad6e6461]
	520	[3096]	MOVE     	R73 R63 ; R73 := R63
	521	[3096]	CALL     	R71 3 2 ; R71 := R71(R72,R73)
	522	[3096]	MOVE     	R27 R71 ; R27 := R71
	523	[3097]	SELF     	R71 R59 K61 ; R72 := R59; R71 := R59[0x80a96711]
	524	[3097]	MOVE     	R73 R63 ; R73 := R63
	525	[3097]	CALL     	R71 3 2 ; R71 := R71(R72,R73)
	526	[3097]	MOVE     	R28 R71 ; R28 := R71
	527	[3098]	GETUPVAL 	R71 U2 ; R71 := U2
	528	[3098]	GETTABLE 	R71 R71 K53 ; R71 := R71[0x06d055f9]
	529	[3098]	EQ       	1 R0 K59 ; if R0 == false then PC := 532
	530	[3098]	JMP      	532 ; PC := 532
	531	[3098]	OP_LOADBOOL	R72 0 1 ; R72 := false; PC := 532
	532	[3098]	OP_LOADBOOL	R72 1 0 ; R72 := true
	533	[3098]	LOADK    	R73 := 0.000000
	534	[3098]	GETUPVAL 	R74 U2 ; R74 := U2
	535	[3098]	GETTABLE 	R74 R74 K57 ; R74 := R74[0x74a11ec6]
	536	[3098]	MUL      	R75 R16 R27 ; R75 := R16 * R27
	537	[3098]	CALL     	R74 2 0 ; R74,... := R74(R75)
	538	[3098]	CALL     	R71 0 2 ; R71 := R71(R72,...)
	539	[3099]	GETUPVAL 	R72 U2 ; R72 := U2
	540	[3099]	GETTABLE 	R72 R72 K53 ; R72 := R72[0x06d055f9]
	541	[3099]	EQ       	1 R0 K59 ; if R0 == false then PC := 544
	542	[3099]	JMP      	544 ; PC := 544
	543	[3099]	OP_LOADBOOL	R73 0 1 ; R73 := false; PC := 544
	544	[3099]	OP_LOADBOOL	R73 1 0 ; R73 := true
	545	[3099]	LOADK    	R74 := 0.000000
	546	[3099]	GETUPVAL 	R75 U2 ; R75 := U2
	547	[3099]	GETTABLE 	R75 R75 K57 ; R75 := R75[0x74a11ec6]
	548	[3099]	MUL      	R76 R16 R28 ; R76 := R16 * R28
	549	[3099]	CALL     	R75 2 0 ; R75,... := R75(R76)
	550	[3099]	CALL     	R72 0 2 ; R72 := R72(R73,...)
	551	[3100]	GETGLOBAL	R73 K51 ; R73 := mPlayerMissionInfo
	552	[3100]	SELF     	R73 R73 K58 ; R74 := R73; R73 := R73[0x8d5b45c1]
	553	[3100]	LOADK    	R75 := 1.000000
	554	[3100]	LOADK    	R76 := 0.000000
	555	[3100]	MOVE     	R77 R71 ; R77 := R71
	556	[3100]	CALL     	R73 5 1 ; R73(R74,R75,R76,R77)
	557	[3101]	GETGLOBAL	R73 K51 ; R73 := mPlayerMissionInfo
	558	[3101]	SELF     	R73 R73 K58 ; R74 := R73; R73 := R73[0x8d5b45c1]
	559	[3101]	LOADK    	R75 := 1.000000
	560	[3101]	LOADK    	R76 := 2.000000
	561	[3101]	MOVE     	R77 R72 ; R77 := R72
	562	[3101]	CALL     	R73 5 1 ; R73(R74,R75,R76,R77)
	563	[3104]	SELF     	R73 R59 K55 ; R74 := R59; R73 := R59[0xb6731115]
	564	[3104]	LOADK    	R75 := 2.000000
	565	[3104]	LOADK    	R76 := 0.000000
	566	[3104]	MOVE     	R77 R63 ; R77 := R63
	567	[3104]	CALL     	R73 5 2 ; R73 := R73(R74,R75,R76,R77)
	568	[3104]	MOVE     	R29 R73 ; R29 := R73
	569	[3105]	SELF     	R73 R59 K56 ; R74 := R59; R73 := R59[0x4fb6eaa9]
	570	[3105]	LOADK    	R75 := 2.000000
	571	[3105]	LOADK    	R76 := 0.000000
	572	[3105]	CALL     	R73 4 2 ; R73 := R73(R74,R75,R76)
	573	[3105]	MOVE     	R44 R73 ; R44 := R73
	574	[3106]	GETUPVAL 	R73 U2 ; R73 := U2
	575	[3106]	GETTABLE 	R73 R73 K53 ; R73 := R73[0x06d055f9]
	576	[3106]	EQ       	1 R0 K59 ; if R0 == false then PC := 579
	577	[3106]	JMP      	579 ; PC := 579
	578	[3106]	OP_LOADBOOL	R74 0 1 ; R74 := false; PC := 579
	579	[3106]	OP_LOADBOOL	R74 1 0 ; R74 := true
	580	[3106]	LOADK    	R75 := 0.000000
	581	[3106]	GETUPVAL 	R76 U2 ; R76 := U2
	582	[3106]	GETTABLE 	R76 R76 K57 ; R76 := R76[0x74a11ec6]
	583	[3106]	MUL      	R77 R16 R29 ; R77 := R16 * R29
	584	[3106]	CALL     	R76 2 0 ; R76,... := R76(R77)
	585	[3106]	CALL     	R73 0 2 ; R73 := R73(R74,...)
	586	[3107]	GETGLOBAL	R74 K51 ; R74 := mPlayerMissionInfo
	587	[3107]	SELF     	R74 R74 K58 ; R75 := R74; R74 := R74[0x8d5b45c1]
	588	[3107]	LOADK    	R76 := 2.000000
	589	[3107]	LOADK    	R77 := 0.000000
	590	[3107]	MOVE     	R78 R73 ; R78 := R73
	591	[3107]	CALL     	R74 5 1 ; R74(R75,R76,R77,R78)
	592	[3109]	SELF     	R74 R59 K55 ; R75 := R59; R74 := R59[0xb6731115]
	593	[3109]	LOADK    	R76 := 2.000000
	594	[3109]	LOADK    	R77 := 2.000000
	595	[3109]	MOVE     	R78 R63 ; R78 := R63
	596	[3109]	CALL     	R74 5 2 ; R74 := R74(R75,R76,R77,R78)
	597	[3109]	MOVE     	R30 R74 ; R30 := R74
	598	[3110]	SELF     	R74 R59 K56 ; R75 := R59; R74 := R59[0x4fb6eaa9]
	599	[3110]	LOADK    	R76 := 2.000000
	600	[3110]	LOADK    	R77 := 2.000000
	601	[3110]	CALL     	R74 4 2 ; R74 := R74(R75,R76,R77)
	602	[3110]	MOVE     	R45 R74 ; R45 := R74
	603	[3111]	GETUPVAL 	R74 U2 ; R74 := U2
	604	[3111]	GETTABLE 	R74 R74 K53 ; R74 := R74[0x06d055f9]
	605	[3111]	EQ       	1 R0 K59 ; if R0 == false then PC := 608
	606	[3111]	JMP      	608 ; PC := 608
	607	[3111]	OP_LOADBOOL	R75 0 1 ; R75 := false; PC := 608
	608	[3111]	OP_LOADBOOL	R75 1 0 ; R75 := true
	609	[3111]	LOADK    	R76 := 0.000000
	610	[3111]	GETUPVAL 	R77 U2 ; R77 := U2
	611	[3111]	GETTABLE 	R77 R77 K57 ; R77 := R77[0x74a11ec6]
	612	[3111]	MUL      	R78 R16 R30 ; R78 := R16 * R30
	613	[3111]	CALL     	R77 2 0 ; R77,... := R77(R78)
	614	[3111]	CALL     	R74 0 2 ; R74 := R74(R75,...)
	615	[3112]	GETGLOBAL	R75 K51 ; R75 := mPlayerMissionInfo
	616	[3112]	SELF     	R75 R75 K58 ; R76 := R75; R75 := R75[0x8d5b45c1]
	617	[3112]	LOADK    	R77 := 2.000000
	618	[3112]	LOADK    	R78 := 2.000000
	619	[3112]	MOVE     	R79 R74 ; R79 := R74
	620	[3112]	CALL     	R75 5 1 ; R75(R76,R77,R78,R79)
	621	[3114]	SELF     	R75 R59 K55 ; R76 := R59; R75 := R59[0xb6731115]
	622	[3114]	LOADK    	R77 := 2.000000
	623	[3114]	LOADK    	R78 := 3.000000
	624	[3114]	MOVE     	R79 R63 ; R79 := R63
	625	[3114]	CALL     	R75 5 2 ; R75 := R75(R76,R77,R78,R79)
	626	[3114]	MOVE     	R31 R75 ; R31 := R75
	627	[3115]	SELF     	R75 R59 K56 ; R76 := R59; R75 := R59[0x4fb6eaa9]
	628	[3115]	LOADK    	R77 := 2.000000
	629	[3115]	LOADK    	R78 := 3.000000
	630	[3115]	CALL     	R75 4 2 ; R75 := R75(R76,R77,R78)
	631	[3115]	MOVE     	R46 R75 ; R46 := R75
	632	[3116]	GETUPVAL 	R75 U2 ; R75 := U2
	633	[3116]	GETTABLE 	R75 R75 K53 ; R75 := R75[0x06d055f9]
	634	[3116]	EQ       	1 R0 K59 ; if R0 == false then PC := 637
	635	[3116]	JMP      	637 ; PC := 637
	636	[3116]	OP_LOADBOOL	R76 0 1 ; R76 := false; PC := 637
	637	[3116]	OP_LOADBOOL	R76 1 0 ; R76 := true
	638	[3116]	LOADK    	R77 := 0.000000
	639	[3116]	GETUPVAL 	R78 U2 ; R78 := U2
	640	[3116]	GETTABLE 	R78 R78 K57 ; R78 := R78[0x74a11ec6]
	641	[3116]	MUL      	R79 R16 R31 ; R79 := R16 * R31
	642	[3116]	CALL     	R78 2 0 ; R78,... := R78(R79)
	643	[3116]	CALL     	R75 0 2 ; R75 := R75(R76,...)
	644	[3117]	GETGLOBAL	R76 K51 ; R76 := mPlayerMissionInfo
	645	[3117]	SELF     	R76 R76 K58 ; R77 := R76; R76 := R76[0x8d5b45c1]
	646	[3117]	LOADK    	R78 := 2.000000
	647	[3117]	LOADK    	R79 := 3.000000
	648	[3117]	MOVE     	R80 R75 ; R80 := R75
	649	[3117]	CALL     	R76 5 1 ; R76(R77,R78,R79,R80)
	650	[3120]	SELF     	R76 R59 K62 ; R77 := R59; R76 := R59[0x3610f933]
	651	[3120]	CALL     	R76 2 2 ; R76 := R76(R77)
	652	[3120]	MOVE     	R33 R76 ; R33 := R76
	653	[3121]	SELF     	R76 R59 K63 ; R77 := R59; R76 := R59[0xfa4f44fc]
	654	[3121]	CALL     	R76 2 2 ; R76 := R76(R77)
	655	[3121]	MOVE     	R47 R76 ; R47 := R76
	656	[3122]	GETUPVAL 	R76 U2 ; R76 := U2
	657	[3122]	GETTABLE 	R76 R76 K53 ; R76 := R76[0x06d055f9]
	658	[3122]	EQ       	1 R0 K59 ; if R0 == false then PC := 661
	659	[3122]	JMP      	661 ; PC := 661
	660	[3122]	OP_LOADBOOL	R77 0 1 ; R77 := false; PC := 661
	661	[3122]	OP_LOADBOOL	R77 1 0 ; R77 := true
	662	[3122]	LOADK    	R78 := 0.000000
	663	[3122]	GETUPVAL 	R79 U2 ; R79 := U2
	664	[3122]	GETTABLE 	R79 R79 K57 ; R79 := R79[0x74a11ec6]
	665	[3122]	MUL      	R80 R16 R33 ; R80 := R16 * R33
	666	[3122]	CALL     	R79 2 0 ; R79,... := R79(R80)
	667	[3122]	CALL     	R76 0 2 ; R76 := R76(R77,...)
	668	[3123]	GETGLOBAL	R77 K51 ; R77 := mPlayerMissionInfo
	669	[3123]	SELF     	R77 R77 K58 ; R78 := R77; R77 := R77[0x8d5b45c1]
	670	[3123]	LOADK    	R79 := 6.000000
	671	[3123]	LOADK    	R80 := 0.000000
	672	[3123]	MOVE     	R81 R76 ; R81 := R76
	673	[3123]	CALL     	R77 5 1 ; R77(R78,R79,R80,R81)
	674	[3126]	SELF     	R77 R59 K55 ; R78 := R59; R77 := R59[0xb6731115]
	675	[3126]	LOADK    	R79 := 8.000000
	676	[3126]	LOADK    	R80 := 0.000000
	677	[3126]	MOVE     	R81 R63 ; R81 := R63
	678	[3126]	CALL     	R77 5 2 ; R77 := R77(R78,R79,R80,R81)
	679	[3126]	MOVE     	R34 R77 ; R34 := R77
	680	[3127]	SELF     	R77 R59 K56 ; R78 := R59; R77 := R59[0x4fb6eaa9]
	681	[3127]	LOADK    	R79 := 8.000000
	682	[3127]	LOADK    	R80 := 0.000000
	683	[3127]	CALL     	R77 4 2 ; R77 := R77(R78,R79,R80)
	684	[3127]	MOVE     	R48 R77 ; R48 := R77
	685	[3128]	GETUPVAL 	R77 U2 ; R77 := U2
	686	[3128]	GETTABLE 	R77 R77 K57 ; R77 := R77[0x74a11ec6]
	687	[3128]	MUL      	R78 R16 R34 ; R78 := R16 * R34
	688	[3128]	CALL     	R77 2 2 ; R77 := R77(R78)
	689	[3129]	GETGLOBAL	R78 K51 ; R78 := mPlayerMissionInfo
	690	[3129]	SELF     	R78 R78 K58 ; R79 := R78; R78 := R78[0x8d5b45c1]
	691	[3129]	LOADK    	R80 := 8.000000
	692	[3129]	LOADK    	R81 := 0.000000
	693	[3129]	MOVE     	R82 R77 ; R82 := R77
	694	[3129]	CALL     	R78 5 1 ; R78(R79,R80,R81,R82)
	695	[3131]	SELF     	R78 R59 K55 ; R79 := R59; R78 := R59[0xb6731115]
	696	[3131]	LOADK    	R80 := 8.000000
	697	[3131]	LOADK    	R81 := 4.000000
	698	[3131]	MOVE     	R82 R63 ; R82 := R63
	699	[3131]	CALL     	R78 5 2 ; R78 := R78(R79,R80,R81,R82)
	700	[3131]	MOVE     	R35 R78 ; R35 := R78
	701	[3132]	SELF     	R78 R59 K56 ; R79 := R59; R78 := R59[0x4fb6eaa9]
	702	[3132]	LOADK    	R80 := 8.000000
	703	[3132]	LOADK    	R81 := 4.000000
	704	[3132]	CALL     	R78 4 2 ; R78 := R78(R79,R80,R81)
	705	[3132]	MOVE     	R49 R78 ; R49 := R78
	706	[3133]	GETUPVAL 	R78 U2 ; R78 := U2
	707	[3133]	GETTABLE 	R78 R78 K53 ; R78 := R78[0x06d055f9]
	708	[3133]	EQ       	1 R0 K59 ; if R0 == false then PC := 711
	709	[3133]	JMP      	711 ; PC := 711
	710	[3133]	OP_LOADBOOL	R79 0 1 ; R79 := false; PC := 711
	711	[3133]	OP_LOADBOOL	R79 1 0 ; R79 := true
	712	[3133]	LOADK    	R80 := 0.000000
	713	[3133]	GETUPVAL 	R81 U2 ; R81 := U2
	714	[3133]	GETTABLE 	R81 R81 K57 ; R81 := R81[0x74a11ec6]
	715	[3133]	MUL      	R82 R16 R35 ; R82 := R16 * R35
	716	[3133]	CALL     	R81 2 0 ; R81,... := R81(R82)
	717	[3133]	CALL     	R78 0 2 ; R78 := R78(R79,...)
	718	[3134]	GETGLOBAL	R79 K51 ; R79 := mPlayerMissionInfo
	719	[3134]	SELF     	R79 R79 K58 ; R80 := R79; R79 := R79[0x8d5b45c1]
	720	[3134]	LOADK    	R81 := 8.000000
	721	[3134]	LOADK    	R82 := 4.000000
	722	[3134]	MOVE     	R83 R78 ; R83 := R78
	723	[3134]	CALL     	R79 5 1 ; R79(R80,R81,R82,R83)
	724	[3136]	SELF     	R79 R59 K55 ; R80 := R59; R79 := R59[0xb6731115]
	725	[3136]	LOADK    	R81 := 8.000000
	726	[3136]	LOADK    	R82 := 5.000000
	727	[3136]	MOVE     	R83 R63 ; R83 := R63
	728	[3136]	CALL     	R79 5 2 ; R79 := R79(R80,R81,R82,R83)
	729	[3136]	MOVE     	R36 R79 ; R36 := R79
	730	[3137]	GETUPVAL 	R79 U2 ; R79 := U2
	731	[3137]	GETTABLE 	R79 R79 K57 ; R79 := R79[0x74a11ec6]
	732	[3137]	MUL      	R80 R16 R36 ; R80 := R16 * R36
	733	[3137]	CALL     	R79 2 2 ; R79 := R79(R80)
	734	[3138]	GETGLOBAL	R80 K51 ; R80 := mPlayerMissionInfo
	735	[3138]	SELF     	R80 R80 K58 ; R81 := R80; R80 := R80[0x8d5b45c1]
	736	[3138]	LOADK    	R82 := 8.000000
	737	[3138]	LOADK    	R83 := 5.000000
	738	[3138]	MOVE     	R84 R79 ; R84 := R79
	739	[3138]	CALL     	R80 5 1 ; R80(R81,R82,R83,R84)
	740	[3141]	SELF     	R80 R59 K55 ; R81 := R59; R80 := R59[0xb6731115]
	741	[3141]	LOADK    	R82 := 7.000000
	742	[3141]	LOADK    	R83 := 2.000000
	743	[3141]	MOVE     	R84 R63 ; R84 := R63
	744	[3141]	CALL     	R80 5 2 ; R80 := R80(R81,R82,R83,R84)
	745	[3141]	MOVE     	R37 R80 ; R37 := R80
	746	[3142]	SELF     	R80 R59 K56 ; R81 := R59; R80 := R59[0x4fb6eaa9]
	747	[3142]	LOADK    	R82 := 7.000000
	748	[3142]	LOADK    	R83 := 2.000000
	749	[3142]	CALL     	R80 4 2 ; R80 := R80(R81,R82,R83)
	750	[3142]	MOVE     	R50 R80 ; R50 := R80
	751	[3143]	GETUPVAL 	R80 U2 ; R80 := U2
	752	[3143]	GETTABLE 	R80 R80 K57 ; R80 := R80[0x74a11ec6]
	753	[3143]	MUL      	R81 R16 R37 ; R81 := R16 * R37
	754	[3143]	CALL     	R80 2 2 ; R80 := R80(R81)
	755	[3144]	GETGLOBAL	R81 K51 ; R81 := mPlayerMissionInfo
	756	[3144]	SELF     	R81 R81 K58 ; R82 := R81; R81 := R81[0x8d5b45c1]
	757	[3144]	LOADK    	R83 := 7.000000
	758	[3144]	LOADK    	R84 := 2.000000
	759	[3144]	MOVE     	R85 R80 ; R85 := R80
	760	[3144]	CALL     	R81 5 1 ; R81(R82,R83,R84,R85)
	761	[3146]	GETGLOBAL	R81 K5 ; R81 := 0x7b998233
	762	[3146]	MOVE     	R82 R57 ; R82 := R57
	763	[3146]	CALL     	R81 2 2 ; R81 := R81(R82)
	764	[3146]	TEST     	R81 1 ; if R81 then PC := 802
	765	[3146]	JMP      	802 ; PC := 802
	766	[3147]	SELF     	R81 R57 K64 ; R82 := R57; R81 := R57[0xde321e6f]
	767	[3147]	CALL     	R81 2 2 ; R81 := R81(R82)
	768	[3148]	GETGLOBAL	R82 K5 ; R82 := 0x7b998233
	769	[3148]	MOVE     	R83 R81 ; R83 := R81
	770	[3148]	CALL     	R82 2 2 ; R82 := R82(R83)
	771	[3148]	TEST     	R82 1 ; if R82 then PC := 802
	772	[3148]	JMP      	802 ; PC := 802
	773	[3149]	SELF     	R82 R81 K55 ; R83 := R81; R82 := R81[0xb6731115]
	774	[3149]	MOVE     	R84 R58 ; R84 := R58
	775	[3149]	LOADK    	R85 := 2.000000
	776	[3149]	MOVE     	R86 R63 ; R86 := R63
	777	[3149]	CALL     	R82 5 2 ; R82 := R82(R83,R84,R85,R86)
	778	[3149]	MOVE     	R32 R82 ; R32 := R82
	779	[3150]	SELF     	R82 R81 K56 ; R83 := R81; R82 := R81[0x4fb6eaa9]
	780	[3150]	MOVE     	R84 R58 ; R84 := R58
	781	[3150]	LOADK    	R85 := 2.000000
	782	[3150]	CALL     	R82 4 2 ; R82 := R82(R83,R84,R85)
	783	[3150]	MOVE     	R43 R82 ; R43 := R82
	784	[3151]	GETUPVAL 	R82 U2 ; R82 := U2
	785	[3151]	GETTABLE 	R82 R82 K53 ; R82 := R82[0x06d055f9]
	786	[3151]	EQ       	1 R0 K59 ; if R0 == false then PC := 789
	787	[3151]	JMP      	789 ; PC := 789
	788	[3151]	OP_LOADBOOL	R83 0 1 ; R83 := false; PC := 789
	789	[3151]	OP_LOADBOOL	R83 1 0 ; R83 := true
	790	[3151]	LOADK    	R84 := 0.000000
	791	[3151]	GETUPVAL 	R85 U2 ; R85 := U2
	792	[3151]	GETTABLE 	R85 R85 K57 ; R85 := R85[0x74a11ec6]
	793	[3151]	MUL      	R86 R16 R32 ; R86 := R16 * R32
	794	[3151]	CALL     	R85 2 0 ; R85,... := R85(R86)
	795	[3151]	CALL     	R82 0 2 ; R82 := R82(R83,...)
	796	[3152]	GETGLOBAL	R83 K51 ; R83 := mPlayerMissionInfo
	797	[3152]	SELF     	R83 R83 K58 ; R84 := R83; R83 := R83[0x8d5b45c1]
	798	[3152]	MOVE     	R85 R58 ; R85 := R58
	799	[3152]	LOADK    	R86 := 2.000000
	800	[3152]	MOVE     	R87 R82 ; R87 := R82
	801	[3152]	CALL     	R83 5 1 ; R83(R84,R85,R86,R87)
	802	[3156]	OP_LOADBOOL	R83 0 0 ; R83 := false
	803	[3157]	TEST     	R83 0 ; if not R83 then PC := 958
	804	[3157]	JMP      	958 ; PC := 958
	805	[3158]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	806	[3158]	LOADK    	R85 K65 ; R85 := "\n\r===== Starting XPs ====="
	807	[3158]	CALL     	R84 2 1 ; R84(R85)
	808	[3159]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	809	[3159]	LOADK    	R85 K66 ; R85 := "suitXp: "
	810	[3159]	MOVE     	R86 R20 ; R86 := R20
	811	[3159]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	812	[3159]	CALL     	R84 2 1 ; R84(R85)
	813	[3160]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	814	[3160]	LOADK    	R85 K67 ; R85 := "rifleXp: "
	815	[3160]	MOVE     	R86 R22 ; R86 := R22
	816	[3160]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	817	[3160]	CALL     	R84 2 1 ; R84(R85)
	818	[3161]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	819	[3161]	LOADK    	R85 K68 ; R85 := "pistolXp: "
	820	[3161]	MOVE     	R86 R21 ; R86 := R21
	821	[3161]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	822	[3161]	CALL     	R84 2 1 ; R84(R85)
	823	[3162]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	824	[3162]	LOADK    	R85 K69 ; R85 := "meleeXp: "
	825	[3162]	MOVE     	R86 R23 ; R86 := R23
	826	[3162]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	827	[3162]	CALL     	R84 2 1 ; R84(R85)
	828	[3163]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	829	[3163]	LOADK    	R85 K70 ; R85 := "heavyXp: "
	830	[3163]	MOVE     	R86 R24 ; R86 := R24
	831	[3163]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	832	[3163]	CALL     	R84 2 1 ; R84(R85)
	833	[3164]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	834	[3164]	LOADK    	R85 K71 ; R85 := "specialAXp: "
	835	[3164]	MOVE     	R86 R25 ; R86 := R25
	836	[3164]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	837	[3164]	CALL     	R84 2 1 ; R84(R85)
	838	[3165]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	839	[3165]	LOADK    	R85 K72 ; R85 := "specialBXp: "
	840	[3165]	MOVE     	R86 R26 ; R86 := R26
	841	[3165]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	842	[3165]	CALL     	R84 2 1 ; R84(R85)
	843	[3166]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	844	[3166]	LOADK    	R85 K73 ; R85 := "sentinelXp: "
	845	[3166]	MOVE     	R86 R27 ; R86 := R27
	846	[3166]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	847	[3166]	CALL     	R84 2 1 ; R84(R85)
	848	[3167]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	849	[3167]	LOADK    	R85 K74 ; R85 := "sentinelWeaponXp: "
	850	[3167]	MOVE     	R86 R28 ; R86 := R28
	851	[3167]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	852	[3167]	CALL     	R84 2 1 ; R84(R85)
	853	[3168]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	854	[3168]	LOADK    	R85 K75 ; R85 := "archwingXp: "
	855	[3168]	MOVE     	R86 R29 ; R86 := R29
	856	[3168]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	857	[3168]	CALL     	R84 2 1 ; R84(R85)
	858	[3169]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	859	[3169]	LOADK    	R85 K76 ; R85 := "archwingWeaponXp: "
	860	[3169]	MOVE     	R86 R30 ; R86 := R30
	861	[3169]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	862	[3169]	CALL     	R84 2 1 ; R84(R85)
	863	[3170]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	864	[3170]	LOADK    	R85 K77 ; R85 := "archwingMeleeWeaponXp: "
	865	[3170]	MOVE     	R86 R31 ; R86 := R31
	866	[3170]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	867	[3170]	CALL     	R84 2 1 ; R84(R85)
	868	[3171]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	869	[3171]	LOADK    	R85 K78 ; R85 := "HoverboardXP: "
	870	[3171]	MOVE     	R86 R33 ; R86 := R33
	871	[3171]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	872	[3171]	CALL     	R84 2 1 ; R84(R85)
	873	[3172]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	874	[3172]	LOADK    	R85 K79 ; R85 := "MechXp: "
	875	[3172]	MOVE     	R86 R34 ; R86 := R34
	876	[3172]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	877	[3172]	CALL     	R84 2 1 ; R84(R85)
	878	[3173]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	879	[3173]	LOADK    	R85 K80 ; R85 := "MechHeavyXp: "
	880	[3173]	MOVE     	R86 R35 ; R86 := R35
	881	[3173]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	882	[3173]	CALL     	R84 2 1 ; R84(R85)
	883	[3174]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	884	[3174]	LOADK    	R85 K81 ; R85 := "MechSpecialXp: "
	885	[3174]	MOVE     	R86 R36 ; R86 := R36
	886	[3174]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	887	[3174]	CALL     	R84 2 1 ; R84(R85)
	888	[3176]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	889	[3176]	LOADK    	R85 K82 ; R85 := "Bonuses - multiplier = "
	890	[3176]	MOVE     	R86 R16 ; R86 := R16
	891	[3176]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	892	[3176]	CALL     	R84 2 1 ; R84(R85)
	893	[3177]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	894	[3177]	LOADK    	R85 K83 ; R85 := "suit: "
	895	[3177]	MOVE     	R86 R64 ; R86 := R64
	896	[3177]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	897	[3177]	CALL     	R84 2 1 ; R84(R85)
	898	[3178]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	899	[3178]	LOADK    	R85 K84 ; R85 := "rifle: "
	900	[3178]	MOVE     	R86 R66 ; R86 := R66
	901	[3178]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	902	[3178]	CALL     	R84 2 1 ; R84(R85)
	903	[3179]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	904	[3179]	LOADK    	R85 K85 ; R85 := "pistol: "
	905	[3179]	MOVE     	R86 R65 ; R86 := R65
	906	[3179]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	907	[3179]	CALL     	R84 2 1 ; R84(R85)
	908	[3180]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	909	[3180]	LOADK    	R85 K86 ; R85 := "melee: "
	910	[3180]	MOVE     	R86 R67 ; R86 := R67
	911	[3180]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	912	[3180]	CALL     	R84 2 1 ; R84(R85)
	913	[3181]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	914	[3181]	LOADK    	R85 K87 ; R85 := "specialA: "
	915	[3181]	MOVE     	R86 R69 ; R86 := R69
	916	[3181]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	917	[3181]	CALL     	R84 2 1 ; R84(R85)
	918	[3182]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	919	[3182]	LOADK    	R85 K88 ; R85 := "specialB: "
	920	[3182]	MOVE     	R86 R70 ; R86 := R70
	921	[3182]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	922	[3182]	CALL     	R84 2 1 ; R84(R85)
	923	[3183]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	924	[3183]	LOADK    	R85 K89 ; R85 := "sentinel: "
	925	[3183]	MOVE     	R86 R71 ; R86 := R71
	926	[3183]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	927	[3183]	CALL     	R84 2 1 ; R84(R85)
	928	[3184]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	929	[3184]	LOADK    	R85 K90 ; R85 := "sentinelWeapon: "
	930	[3184]	MOVE     	R86 R72 ; R86 := R72
	931	[3184]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	932	[3184]	CALL     	R84 2 1 ; R84(R85)
	933	[3185]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	934	[3185]	LOADK    	R85 K91 ; R85 := "archwing: "
	935	[3185]	MOVE     	R86 R73 ; R86 := R73
	936	[3185]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	937	[3185]	CALL     	R84 2 1 ; R84(R85)
	938	[3186]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	939	[3186]	LOADK    	R85 K92 ; R85 := "archwingWeapon: "
	940	[3186]	MOVE     	R86 R74 ; R86 := R74
	941	[3186]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	942	[3186]	CALL     	R84 2 1 ; R84(R85)
	943	[3187]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	944	[3187]	LOADK    	R85 K93 ; R85 := "archwingMeleeWeapon: "
	945	[3187]	MOVE     	R86 R75 ; R86 := R75
	946	[3187]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	947	[3187]	CALL     	R84 2 1 ; R84(R85)
	948	[3188]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	949	[3188]	LOADK    	R85 K94 ; R85 := "mechBonus: "
	950	[3188]	MOVE     	R86 R77 ; R86 := R77
	951	[3188]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	952	[3188]	CALL     	R84 2 1 ; R84(R85)
	953	[3189]	GETGLOBAL	R84 K0 ; R84 := 0x3d106989
	954	[3189]	LOADK    	R85 K95 ; R85 := "mechSpecialBonus: "
	955	[3189]	MOVE     	R86 R79 ; R86 := R79
	956	[3189]	CONCAT   	R85 R85 R86 ; R85 := R85 .. R86
	957	[3189]	CALL     	R84 2 1 ; R84(R85)
	958	[3192]	SELF     	R84 R55 K96 ; R85 := R55; R84 := R55[0x420402a9]
	959	[3192]	CALL     	R84 2 2 ; R84 := R84(R85)
	960	[3192]	TEST     	R84 0 ; if not R84 then PC := 1462
	961	[3192]	JMP      	1462 ; PC := 1462
	962	[3195]	LOADK    	R84 := 0.000000
	963	[3195]	LOADK    	R85 := 9.000000
	964	[3195]	LOADK    	R86 := 1.000000
	965	[3195]	FORPREP  	R84 974 ; R84 -= R86; PC := 974
	966	[3196]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	967	[3196]	SELF     	R88 R88 K97 ; R89 := R88; R88 := R88[0x582a6eb2]
	968	[3196]	MOVE     	R90 R87 ; R90 := R87
	969	[3196]	GETGLOBAL	R91 K6 ; R91 := mGameData
	970	[3196]	SELF     	R91 R91 K98 ; R92 := R91; R91 := R91[0xad94d866]
	971	[3196]	MOVE     	R93 R87 ; R93 := R87
	972	[3196]	CALL     	R91 3 0 ; R91,... := R91(R92,R93)
	973	[3196]	CALL     	R88 0 1 ; R88(R89,...)
	974	[3195]	FORLOOP  	R84 966 ; R84 += R86; if R84 <= R85 then begin PC := 966; R87 := R84 end
	975	[3200]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	976	[3200]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	977	[3200]	MOVE     	R90 R62 ; R90 := R62
	978	[3200]	LOADK    	R91 := 0.000000
	979	[3200]	MOVE     	R92 R20 ; R92 := R20
	980	[3200]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	981	[3201]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	982	[3201]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	983	[3201]	MOVE     	R90 R62 ; R90 := R62
	984	[3201]	LOADK    	R91 := 1.000000
	985	[3201]	MOVE     	R92 R21 ; R92 := R21
	986	[3201]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	987	[3202]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	988	[3202]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	989	[3202]	MOVE     	R90 R62 ; R90 := R62
	990	[3202]	LOADK    	R91 := 2.000000
	991	[3202]	MOVE     	R92 R22 ; R92 := R22
	992	[3202]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	993	[3203]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	994	[3203]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	995	[3203]	MOVE     	R90 R62 ; R90 := R62
	996	[3203]	LOADK    	R91 := 3.000000
	997	[3203]	MOVE     	R92 R23 ; R92 := R23
	998	[3203]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	999	[3204]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1000	[3204]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1001	[3204]	MOVE     	R90 R62 ; R90 := R62
	1002	[3204]	LOADK    	R91 := 4.000000
	1003	[3204]	MOVE     	R92 R24 ; R92 := R24
	1004	[3204]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1005	[3205]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1006	[3205]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1007	[3205]	MOVE     	R90 R62 ; R90 := R62
	1008	[3205]	LOADK    	R91 := 5.000000
	1009	[3205]	MOVE     	R92 R25 ; R92 := R25
	1010	[3205]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1011	[3206]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1012	[3206]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1013	[3206]	MOVE     	R90 R62 ; R90 := R62
	1014	[3206]	LOADK    	R91 := 6.000000
	1015	[3206]	MOVE     	R92 R26 ; R92 := R26
	1016	[3206]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1017	[3207]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1018	[3207]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1019	[3207]	LOADK    	R90 := 1.000000
	1020	[3207]	LOADK    	R91 := 0.000000
	1021	[3207]	MOVE     	R92 R27 ; R92 := R27
	1022	[3207]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1023	[3208]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1024	[3208]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1025	[3208]	LOADK    	R90 := 1.000000
	1026	[3208]	LOADK    	R91 := 2.000000
	1027	[3208]	MOVE     	R92 R28 ; R92 := R28
	1028	[3208]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1029	[3209]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1030	[3209]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1031	[3209]	LOADK    	R90 := 2.000000
	1032	[3209]	LOADK    	R91 := 0.000000
	1033	[3209]	MOVE     	R92 R29 ; R92 := R29
	1034	[3209]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1035	[3210]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1036	[3210]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1037	[3210]	LOADK    	R90 := 2.000000
	1038	[3210]	LOADK    	R91 := 2.000000
	1039	[3210]	MOVE     	R92 R30 ; R92 := R30
	1040	[3210]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1041	[3211]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1042	[3211]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1043	[3211]	LOADK    	R90 := 2.000000
	1044	[3211]	LOADK    	R91 := 3.000000
	1045	[3211]	MOVE     	R92 R31 ; R92 := R31
	1046	[3211]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1047	[3212]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1048	[3212]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1049	[3212]	MOVE     	R90 R58 ; R90 := R58
	1050	[3212]	LOADK    	R91 := 2.000000
	1051	[3212]	MOVE     	R92 R32 ; R92 := R32
	1052	[3212]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1053	[3213]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1054	[3213]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1055	[3213]	LOADK    	R90 := 6.000000
	1056	[3213]	LOADK    	R91 := 0.000000
	1057	[3213]	MOVE     	R92 R33 ; R92 := R33
	1058	[3213]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1059	[3214]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1060	[3214]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1061	[3214]	LOADK    	R90 := 8.000000
	1062	[3214]	LOADK    	R91 := 0.000000
	1063	[3214]	MOVE     	R92 R34 ; R92 := R34
	1064	[3214]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1065	[3215]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1066	[3215]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1067	[3215]	LOADK    	R90 := 8.000000
	1068	[3215]	LOADK    	R91 := 4.000000
	1069	[3215]	MOVE     	R92 R35 ; R92 := R35
	1070	[3215]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1071	[3216]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1072	[3216]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1073	[3216]	LOADK    	R90 := 8.000000
	1074	[3216]	LOADK    	R91 := 5.000000
	1075	[3216]	MOVE     	R92 R36 ; R92 := R36
	1076	[3216]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1077	[3217]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1078	[3217]	SELF     	R88 R88 K99 ; R89 := R88; R88 := R88[0xf813982e]
	1079	[3217]	LOADK    	R90 := 7.000000
	1080	[3217]	LOADK    	R91 := 2.000000
	1081	[3217]	MOVE     	R92 R37 ; R92 := R37
	1082	[3217]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1083	[3219]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1084	[3219]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1085	[3219]	MOVE     	R90 R62 ; R90 := R62
	1086	[3219]	LOADK    	R91 := 0.000000
	1087	[3219]	MOVE     	R92 R38 ; R92 := R38
	1088	[3219]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1089	[3220]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1090	[3220]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1091	[3220]	MOVE     	R90 R62 ; R90 := R62
	1092	[3220]	LOADK    	R91 := 1.000000
	1093	[3220]	MOVE     	R92 R39 ; R92 := R39
	1094	[3220]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1095	[3221]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1096	[3221]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1097	[3221]	MOVE     	R90 R62 ; R90 := R62
	1098	[3221]	LOADK    	R91 := 2.000000
	1099	[3221]	MOVE     	R92 R40 ; R92 := R40
	1100	[3221]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1101	[3222]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1102	[3222]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1103	[3222]	MOVE     	R90 R62 ; R90 := R62
	1104	[3222]	LOADK    	R91 := 3.000000
	1105	[3222]	MOVE     	R92 R41 ; R92 := R41
	1106	[3222]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1107	[3223]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1108	[3223]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1109	[3223]	MOVE     	R90 R62 ; R90 := R62
	1110	[3223]	LOADK    	R91 := 4.000000
	1111	[3223]	MOVE     	R92 R42 ; R92 := R42
	1112	[3223]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1113	[3224]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1114	[3224]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1115	[3224]	LOADK    	R90 := 2.000000
	1116	[3224]	LOADK    	R91 := 0.000000
	1117	[3224]	MOVE     	R92 R44 ; R92 := R44
	1118	[3224]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1119	[3225]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1120	[3225]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1121	[3225]	LOADK    	R90 := 2.000000
	1122	[3225]	LOADK    	R91 := 2.000000
	1123	[3225]	MOVE     	R92 R45 ; R92 := R45
	1124	[3225]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1125	[3226]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1126	[3226]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1127	[3226]	LOADK    	R90 := 2.000000
	1128	[3226]	LOADK    	R91 := 3.000000
	1129	[3226]	MOVE     	R92 R46 ; R92 := R46
	1130	[3226]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1131	[3227]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1132	[3227]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1133	[3227]	MOVE     	R90 R58 ; R90 := R58
	1134	[3227]	LOADK    	R91 := 2.000000
	1135	[3227]	MOVE     	R92 R43 ; R92 := R43
	1136	[3227]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1137	[3228]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1138	[3228]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1139	[3228]	LOADK    	R90 := 6.000000
	1140	[3228]	LOADK    	R91 := 0.000000
	1141	[3228]	MOVE     	R92 R47 ; R92 := R47
	1142	[3228]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1143	[3229]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1144	[3229]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1145	[3229]	LOADK    	R90 := 8.000000
	1146	[3229]	LOADK    	R91 := 0.000000
	1147	[3229]	MOVE     	R92 R48 ; R92 := R48
	1148	[3229]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1149	[3230]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1150	[3230]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1151	[3230]	LOADK    	R90 := 8.000000
	1152	[3230]	LOADK    	R91 := 4.000000
	1153	[3230]	MOVE     	R92 R49 ; R92 := R49
	1154	[3230]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1155	[3231]	GETGLOBAL	R88 K51 ; R88 := mPlayerMissionInfo
	1156	[3231]	SELF     	R88 R88 K100 ; R89 := R88; R88 := R88[0x1b2e72fa]
	1157	[3231]	LOADK    	R90 := 7.000000
	1158	[3231]	LOADK    	R91 := 2.000000
	1159	[3231]	MOVE     	R92 R50 ; R92 := R50
	1160	[3231]	CALL     	R88 5 1 ; R88(R89,R90,R91,R92)
	1161	[3233]	GETGLOBAL	R88 K6 ; R88 := mGameData
	1162	[3233]	SELF     	R88 R88 K40 ; R89 := R88; R88 := R88[0x62c81b76]
	1163	[3233]	CALL     	R88 2 2 ; R88 := R88(R89)
	1164	[3235]	GETTABLE 	R89 R88 K101 ; R89 := R88["mFocusSchool"]
	1165	[3236]	GETGLOBAL	R90 K5 ; R90 := 0x7b998233
	1166	[3236]	MOVE     	R91 R89 ; R91 := R89
	1167	[3236]	CALL     	R90 2 2 ; R90 := R90(R91)
	1168	[3236]	TEST     	R90 1 ; if R90 then PC := 1188
	1169	[3236]	JMP      	1188 ; PC := 1188
	1170	[3236]	EQ       	1 R89 K102 ; if R89 == 10.000000 then PC := 1188
	1171	[3236]	JMP      	1188 ; PC := 1188
	1172	[3237]	LOADK    	R90 := 0.000000
	1173	[3238]	LOADK    	R91 := 0.000000
	1174	[3238]	LOADK    	R92 := 6.000000
	1175	[3238]	LOADK    	R93 := 1.000000
	1176	[3238]	FORPREP  	R91 1182 ; R91 -= R93; PC := 1182
	1177	[3239]	SELF     	R95 R59 K103 ; R96 := R59; R95 := R59[0xa53a4f57]
	1178	[3239]	MOVE     	R97 R62 ; R97 := R62
	1179	[3239]	MOVE     	R98 R94 ; R98 := R94
	1180	[3239]	CALL     	R95 4 2 ; R95 := R95(R96,R97,R98)
	1181	[3239]	ADD      	R90 R90 R95 ; R90 := R90 + R95
	1182	[3238]	FORLOOP  	R91 1177 ; R91 += R93; if R91 <= R92 then begin PC := 1177; R94 := R91 end
	1183	[3241]	GETGLOBAL	R95 K51 ; R95 := mPlayerMissionInfo
	1184	[3241]	SELF     	R95 R95 K104 ; R96 := R95; R95 := R95[0x724bc4dd]
	1185	[3241]	MOVE     	R97 R89 ; R97 := R89
	1186	[3241]	MOVE     	R98 R90 ; R98 := R90
	1187	[3241]	CALL     	R95 4 1 ; R95(R96,R97,R98)
	1188	[3244]	SELF     	R95 R88 K105 ; R96 := R88; R95 := R88[0xb61abfd2]
	1189	[3244]	MOVE     	R97 R62 ; R97 := R62
	1190	[3244]	LOADK    	R98 := 0.000000
	1191	[3244]	CALL     	R95 4 2 ; R95 := R95(R96,R97,R98)
	1192	[3245]	GETGLOBAL	R96 K5 ; R96 := 0x7b998233
	1193	[3245]	MOVE     	R97 R95 ; R97 := R95
	1194	[3245]	CALL     	R96 2 2 ; R96 := R96(R97)
	1195	[3245]	TEST     	R96 1 ; if R96 then PC := 1203
	1196	[3245]	JMP      	1203 ; PC := 1203
	1197	[3246]	GETGLOBAL	R96 K51 ; R96 := mPlayerMissionInfo
	1198	[3246]	SELF     	R96 R96 K106 ; R97 := R96; R96 := R96[0x514bfe0e]
	1199	[3246]	MOVE     	R98 R62 ; R98 := R62
	1200	[3246]	LOADK    	R99 := 0.000000
	1201	[3246]	GETTABLE 	R100 R95 K107 ; R100 := R95["mXP"]
	1202	[3246]	CALL     	R96 5 1 ; R96(R97,R98,R99,R100)
	1203	[3249]	SELF     	R96 R88 K105 ; R97 := R88; R96 := R88[0xb61abfd2]
	1204	[3249]	MOVE     	R98 R62 ; R98 := R62
	1205	[3249]	LOADK    	R99 := 2.000000
	1206	[3249]	CALL     	R96 4 2 ; R96 := R96(R97,R98,R99)
	1207	[3250]	GETGLOBAL	R97 K5 ; R97 := 0x7b998233
	1208	[3250]	MOVE     	R98 R96 ; R98 := R96
	1209	[3250]	CALL     	R97 2 2 ; R97 := R97(R98)
	1210	[3250]	TEST     	R97 1 ; if R97 then PC := 1218
	1211	[3250]	JMP      	1218 ; PC := 1218
	1212	[3251]	GETGLOBAL	R97 K51 ; R97 := mPlayerMissionInfo
	1213	[3251]	SELF     	R97 R97 K106 ; R98 := R97; R97 := R97[0x514bfe0e]
	1214	[3251]	MOVE     	R99 R62 ; R99 := R62
	1215	[3251]	LOADK    	R100 := 2.000000
	1216	[3251]	GETTABLE 	R101 R96 K107 ; R101 := R96["mXP"]
	1217	[3251]	CALL     	R97 5 1 ; R97(R98,R99,R100,R101)
	1218	[3254]	SELF     	R97 R88 K105 ; R98 := R88; R97 := R88[0xb61abfd2]
	1219	[3254]	MOVE     	R99 R62 ; R99 := R62
	1220	[3254]	LOADK    	R100 := 1.000000
	1221	[3254]	CALL     	R97 4 2 ; R97 := R97(R98,R99,R100)
	1222	[3255]	GETGLOBAL	R98 K5 ; R98 := 0x7b998233
	1223	[3255]	MOVE     	R99 R97 ; R99 := R97
	1224	[3255]	CALL     	R98 2 2 ; R98 := R98(R99)
	1225	[3255]	TEST     	R98 1 ; if R98 then PC := 1233
	1226	[3255]	JMP      	1233 ; PC := 1233
	1227	[3256]	GETGLOBAL	R98 K51 ; R98 := mPlayerMissionInfo
	1228	[3256]	SELF     	R98 R98 K106 ; R99 := R98; R98 := R98[0x514bfe0e]
	1229	[3256]	MOVE     	R100 R62 ; R100 := R62
	1230	[3256]	LOADK    	R101 := 1.000000
	1231	[3256]	GETTABLE 	R102 R97 K107 ; R102 := R97["mXP"]
	1232	[3256]	CALL     	R98 5 1 ; R98(R99,R100,R101,R102)
	1233	[3259]	SELF     	R98 R88 K105 ; R99 := R88; R98 := R88[0xb61abfd2]
	1234	[3259]	MOVE     	R100 R58 ; R100 := R58
	1235	[3259]	LOADK    	R101 := 2.000000
	1236	[3259]	CALL     	R98 4 2 ; R98 := R98(R99,R100,R101)
	1237	[3260]	GETGLOBAL	R99 K5 ; R99 := 0x7b998233
	1238	[3260]	MOVE     	R100 R98 ; R100 := R98
	1239	[3260]	CALL     	R99 2 2 ; R99 := R99(R100)
	1240	[3260]	TEST     	R99 1 ; if R99 then PC := 1248
	1241	[3260]	JMP      	1248 ; PC := 1248
	1242	[3261]	GETGLOBAL	R99 K51 ; R99 := mPlayerMissionInfo
	1243	[3261]	SELF     	R99 R99 K106 ; R100 := R99; R99 := R99[0x514bfe0e]
	1244	[3261]	MOVE     	R101 R58 ; R101 := R58
	1245	[3261]	LOADK    	R102 := 2.000000
	1246	[3261]	GETTABLE 	R103 R98 K107 ; R103 := R98["mXP"]
	1247	[3261]	CALL     	R99 5 1 ; R99(R100,R101,R102,R103)
	1248	[3265]	SELF     	R99 R88 K105 ; R100 := R88; R99 := R88[0xb61abfd2]
	1249	[3265]	MOVE     	R101 R62 ; R101 := R62
	1250	[3265]	LOADK    	R102 := 3.000000
	1251	[3265]	CALL     	R99 4 2 ; R99 := R99(R100,R101,R102)
	1252	[3266]	GETGLOBAL	R100 K5 ; R100 := 0x7b998233
	1253	[3266]	MOVE     	R101 R99 ; R101 := R99
	1254	[3266]	CALL     	R100 2 2 ; R100 := R100(R101)
	1255	[3266]	TEST     	R100 1 ; if R100 then PC := 1263
	1256	[3266]	JMP      	1263 ; PC := 1263
	1257	[3267]	GETGLOBAL	R100 K51 ; R100 := mPlayerMissionInfo
	1258	[3267]	SELF     	R100 R100 K106 ; R101 := R100; R100 := R100[0x514bfe0e]
	1259	[3267]	MOVE     	R102 R62 ; R102 := R62
	1260	[3267]	LOADK    	R103 := 3.000000
	1261	[3267]	GETTABLE 	R104 R99 K107 ; R104 := R99["mXP"]
	1262	[3267]	CALL     	R100 5 1 ; R100(R101,R102,R103,R104)
	1263	[3270]	SELF     	R100 R88 K105 ; R101 := R88; R100 := R88[0xb61abfd2]
	1264	[3270]	MOVE     	R102 R62 ; R102 := R62
	1265	[3270]	LOADK    	R103 := 4.000000
	1266	[3270]	CALL     	R100 4 2 ; R100 := R100(R101,R102,R103)
	1267	[3271]	GETGLOBAL	R101 K5 ; R101 := 0x7b998233
	1268	[3271]	MOVE     	R102 R100 ; R102 := R100
	1269	[3271]	CALL     	R101 2 2 ; R101 := R101(R102)
	1270	[3271]	TEST     	R101 1 ; if R101 then PC := 1278
	1271	[3271]	JMP      	1278 ; PC := 1278
	1272	[3272]	GETGLOBAL	R101 K51 ; R101 := mPlayerMissionInfo
	1273	[3272]	SELF     	R101 R101 K106 ; R102 := R101; R101 := R101[0x514bfe0e]
	1274	[3272]	MOVE     	R103 R62 ; R103 := R62
	1275	[3272]	LOADK    	R104 := 4.000000
	1276	[3272]	GETTABLE 	R105 R100 K107 ; R105 := R100["mXP"]
	1277	[3272]	CALL     	R101 5 1 ; R101(R102,R103,R104,R105)
	1278	[3275]	SELF     	R101 R88 K105 ; R102 := R88; R101 := R88[0xb61abfd2]
	1279	[3275]	MOVE     	R103 R62 ; R103 := R62
	1280	[3275]	LOADK    	R104 := 5.000000
	1281	[3275]	CALL     	R101 4 2 ; R101 := R101(R102,R103,R104)
	1282	[3276]	GETGLOBAL	R102 K5 ; R102 := 0x7b998233
	1283	[3276]	MOVE     	R103 R101 ; R103 := R101
	1284	[3276]	CALL     	R102 2 2 ; R102 := R102(R103)
	1285	[3276]	TEST     	R102 1 ; if R102 then PC := 1293
	1286	[3276]	JMP      	1293 ; PC := 1293
	1287	[3277]	GETGLOBAL	R102 K51 ; R102 := mPlayerMissionInfo
	1288	[3277]	SELF     	R102 R102 K106 ; R103 := R102; R102 := R102[0x514bfe0e]
	1289	[3277]	MOVE     	R104 R62 ; R104 := R62
	1290	[3277]	LOADK    	R105 := 5.000000
	1291	[3277]	GETTABLE 	R106 R101 K107 ; R106 := R101["mXP"]
	1292	[3277]	CALL     	R102 5 1 ; R102(R103,R104,R105,R106)
	1293	[3280]	SELF     	R102 R88 K105 ; R103 := R88; R102 := R88[0xb61abfd2]
	1294	[3280]	MOVE     	R104 R62 ; R104 := R62
	1295	[3280]	LOADK    	R105 := 6.000000
	1296	[3280]	CALL     	R102 4 2 ; R102 := R102(R103,R104,R105)
	1297	[3281]	GETGLOBAL	R103 K5 ; R103 := 0x7b998233
	1298	[3281]	MOVE     	R104 R102 ; R104 := R102
	1299	[3281]	CALL     	R103 2 2 ; R103 := R103(R104)
	1300	[3281]	TEST     	R103 1 ; if R103 then PC := 1308
	1301	[3281]	JMP      	1308 ; PC := 1308
	1302	[3282]	GETGLOBAL	R103 K51 ; R103 := mPlayerMissionInfo
	1303	[3282]	SELF     	R103 R103 K106 ; R104 := R103; R103 := R103[0x514bfe0e]
	1304	[3282]	MOVE     	R105 R62 ; R105 := R62
	1305	[3282]	LOADK    	R106 := 6.000000
	1306	[3282]	GETTABLE 	R107 R102 K107 ; R107 := R102["mXP"]
	1307	[3282]	CALL     	R103 5 1 ; R103(R104,R105,R106,R107)
	1308	[3285]	SELF     	R103 R88 K105 ; R104 := R88; R103 := R88[0xb61abfd2]
	1309	[3285]	LOADK    	R105 := 1.000000
	1310	[3285]	LOADK    	R106 := 0.000000
	1311	[3285]	CALL     	R103 4 2 ; R103 := R103(R104,R105,R106)
	1312	[3286]	GETGLOBAL	R104 K5 ; R104 := 0x7b998233
	1313	[3286]	MOVE     	R105 R103 ; R105 := R103
	1314	[3286]	CALL     	R104 2 2 ; R104 := R104(R105)
	1315	[3286]	TEST     	R104 1 ; if R104 then PC := 1323
	1316	[3286]	JMP      	1323 ; PC := 1323
	1317	[3287]	GETGLOBAL	R104 K51 ; R104 := mPlayerMissionInfo
	1318	[3287]	SELF     	R104 R104 K106 ; R105 := R104; R104 := R104[0x514bfe0e]
	1319	[3287]	LOADK    	R106 := 1.000000
	1320	[3287]	LOADK    	R107 := 0.000000
	1321	[3287]	GETTABLE 	R108 R103 K107 ; R108 := R103["mXP"]
	1322	[3287]	CALL     	R104 5 1 ; R104(R105,R106,R107,R108)
	1323	[3290]	SELF     	R104 R88 K105 ; R105 := R88; R104 := R88[0xb61abfd2]
	1324	[3290]	LOADK    	R106 := 1.000000
	1325	[3290]	LOADK    	R107 := 2.000000
	1326	[3290]	CALL     	R104 4 2 ; R104 := R104(R105,R106,R107)
	1327	[3291]	GETGLOBAL	R105 K5 ; R105 := 0x7b998233
	1328	[3291]	MOVE     	R106 R104 ; R106 := R104
	1329	[3291]	CALL     	R105 2 2 ; R105 := R105(R106)
	1330	[3291]	TEST     	R105 1 ; if R105 then PC := 1338
	1331	[3291]	JMP      	1338 ; PC := 1338
	1332	[3292]	GETGLOBAL	R105 K51 ; R105 := mPlayerMissionInfo
	1333	[3292]	SELF     	R105 R105 K106 ; R106 := R105; R105 := R105[0x514bfe0e]
	1334	[3292]	LOADK    	R107 := 1.000000
	1335	[3292]	LOADK    	R108 := 2.000000
	1336	[3292]	GETTABLE 	R109 R104 K107 ; R109 := R104["mXP"]
	1337	[3292]	CALL     	R105 5 1 ; R105(R106,R107,R108,R109)
	1338	[3295]	SELF     	R105 R88 K105 ; R106 := R88; R105 := R88[0xb61abfd2]
	1339	[3295]	LOADK    	R107 := 6.000000
	1340	[3295]	LOADK    	R108 := 0.000000
	1341	[3295]	CALL     	R105 4 2 ; R105 := R105(R106,R107,R108)
	1342	[3296]	GETGLOBAL	R106 K5 ; R106 := 0x7b998233
	1343	[3296]	MOVE     	R107 R105 ; R107 := R105
	1344	[3296]	CALL     	R106 2 2 ; R106 := R106(R107)
	1345	[3296]	TEST     	R106 1 ; if R106 then PC := 1353
	1346	[3296]	JMP      	1353 ; PC := 1353
	1347	[3297]	GETGLOBAL	R106 K51 ; R106 := mPlayerMissionInfo
	1348	[3297]	SELF     	R106 R106 K106 ; R107 := R106; R106 := R106[0x514bfe0e]
	1349	[3297]	LOADK    	R108 := 6.000000
	1350	[3297]	LOADK    	R109 := 0.000000
	1351	[3297]	GETTABLE 	R110 R105 K107 ; R110 := R105["mXP"]
	1352	[3297]	CALL     	R106 5 1 ; R106(R107,R108,R109,R110)
	1353	[3300]	SELF     	R106 R88 K105 ; R107 := R88; R106 := R88[0xb61abfd2]
	1354	[3300]	LOADK    	R108 := 8.000000
	1355	[3300]	LOADK    	R109 := 0.000000
	1356	[3300]	CALL     	R106 4 2 ; R106 := R106(R107,R108,R109)
	1357	[3301]	GETGLOBAL	R107 K5 ; R107 := 0x7b998233
	1358	[3301]	MOVE     	R108 R106 ; R108 := R106
	1359	[3301]	CALL     	R107 2 2 ; R107 := R107(R108)
	1360	[3301]	TEST     	R107 1 ; if R107 then PC := 1368
	1361	[3301]	JMP      	1368 ; PC := 1368
	1362	[3302]	GETGLOBAL	R107 K51 ; R107 := mPlayerMissionInfo
	1363	[3302]	SELF     	R107 R107 K106 ; R108 := R107; R107 := R107[0x514bfe0e]
	1364	[3302]	LOADK    	R109 := 8.000000
	1365	[3302]	LOADK    	R110 := 0.000000
	1366	[3302]	GETTABLE 	R111 R106 K107 ; R111 := R106["mXP"]
	1367	[3302]	CALL     	R107 5 1 ; R107(R108,R109,R110,R111)
	1368	[3305]	SELF     	R107 R88 K105 ; R108 := R88; R107 := R88[0xb61abfd2]
	1369	[3305]	LOADK    	R109 := 8.000000
	1370	[3305]	LOADK    	R110 := 4.000000
	1371	[3305]	CALL     	R107 4 2 ; R107 := R107(R108,R109,R110)
	1372	[3306]	GETGLOBAL	R108 K5 ; R108 := 0x7b998233
	1373	[3306]	MOVE     	R109 R107 ; R109 := R107
	1374	[3306]	CALL     	R108 2 2 ; R108 := R108(R109)
	1375	[3306]	TEST     	R108 1 ; if R108 then PC := 1383
	1376	[3306]	JMP      	1383 ; PC := 1383
	1377	[3307]	GETGLOBAL	R108 K51 ; R108 := mPlayerMissionInfo
	1378	[3307]	SELF     	R108 R108 K106 ; R109 := R108; R108 := R108[0x514bfe0e]
	1379	[3307]	LOADK    	R110 := 8.000000
	1380	[3307]	LOADK    	R111 := 4.000000
	1381	[3307]	GETTABLE 	R112 R107 K107 ; R112 := R107["mXP"]
	1382	[3307]	CALL     	R108 5 1 ; R108(R109,R110,R111,R112)
	1383	[3310]	SELF     	R108 R88 K105 ; R109 := R88; R108 := R88[0xb61abfd2]
	1384	[3310]	LOADK    	R110 := 8.000000
	1385	[3310]	LOADK    	R111 := 5.000000
	1386	[3310]	CALL     	R108 4 2 ; R108 := R108(R109,R110,R111)
	1387	[3311]	GETGLOBAL	R109 K5 ; R109 := 0x7b998233
	1388	[3311]	MOVE     	R110 R108 ; R110 := R108
	1389	[3311]	CALL     	R109 2 2 ; R109 := R109(R110)
	1390	[3311]	TEST     	R109 1 ; if R109 then PC := 1398
	1391	[3311]	JMP      	1398 ; PC := 1398
	1392	[3312]	GETGLOBAL	R109 K51 ; R109 := mPlayerMissionInfo
	1393	[3312]	SELF     	R109 R109 K106 ; R110 := R109; R109 := R109[0x514bfe0e]
	1394	[3312]	LOADK    	R111 := 8.000000
	1395	[3312]	LOADK    	R112 := 5.000000
	1396	[3312]	GETTABLE 	R113 R108 K107 ; R113 := R108["mXP"]
	1397	[3312]	CALL     	R109 5 1 ; R109(R110,R111,R112,R113)
	1398	[3315]	GETUPVAL 	R109 U6 ; R109 := U6
	1399	[3315]	GETTABLE 	R109 R109 K54 ; R109 := R109["isPvp"]
	1400	[3315]	TEST     	R109 1 ; if R109 then PC := 1447
	1401	[3315]	JMP      	1447 ; PC := 1447
	1402	[3316]	SELF     	R109 R88 K105 ; R110 := R88; R109 := R88[0xb61abfd2]
	1403	[3316]	LOADK    	R111 := 2.000000
	1404	[3316]	LOADK    	R112 := 0.000000
	1405	[3316]	CALL     	R109 4 2 ; R109 := R109(R110,R111,R112)
	1406	[3317]	GETGLOBAL	R110 K5 ; R110 := 0x7b998233
	1407	[3317]	MOVE     	R111 R109 ; R111 := R109
	1408	[3317]	CALL     	R110 2 2 ; R110 := R110(R111)
	1409	[3317]	TEST     	R110 1 ; if R110 then PC := 1417
	1410	[3317]	JMP      	1417 ; PC := 1417
	1411	[3318]	GETGLOBAL	R110 K51 ; R110 := mPlayerMissionInfo
	1412	[3318]	SELF     	R110 R110 K106 ; R111 := R110; R110 := R110[0x514bfe0e]
	1413	[3318]	LOADK    	R112 := 2.000000
	1414	[3318]	LOADK    	R113 := 0.000000
	1415	[3318]	GETTABLE 	R114 R109 K107 ; R114 := R109["mXP"]
	1416	[3318]	CALL     	R110 5 1 ; R110(R111,R112,R113,R114)
	1417	[3321]	SELF     	R110 R88 K105 ; R111 := R88; R110 := R88[0xb61abfd2]
	1418	[3321]	LOADK    	R112 := 2.000000
	1419	[3321]	LOADK    	R113 := 2.000000
	1420	[3321]	CALL     	R110 4 2 ; R110 := R110(R111,R112,R113)
	1421	[3322]	GETGLOBAL	R111 K5 ; R111 := 0x7b998233
	1422	[3322]	MOVE     	R112 R110 ; R112 := R110
	1423	[3322]	CALL     	R111 2 2 ; R111 := R111(R112)
	1424	[3322]	TEST     	R111 1 ; if R111 then PC := 1432
	1425	[3322]	JMP      	1432 ; PC := 1432
	1426	[3323]	GETGLOBAL	R111 K51 ; R111 := mPlayerMissionInfo
	1427	[3323]	SELF     	R111 R111 K106 ; R112 := R111; R111 := R111[0x514bfe0e]
	1428	[3323]	LOADK    	R113 := 2.000000
	1429	[3323]	LOADK    	R114 := 2.000000
	1430	[3323]	GETTABLE 	R115 R110 K107 ; R115 := R110["mXP"]
	1431	[3323]	CALL     	R111 5 1 ; R111(R112,R113,R114,R115)
	1432	[3326]	SELF     	R111 R88 K105 ; R112 := R88; R111 := R88[0xb61abfd2]
	1433	[3326]	LOADK    	R113 := 2.000000
	1434	[3326]	LOADK    	R114 := 3.000000
	1435	[3326]	CALL     	R111 4 2 ; R111 := R111(R112,R113,R114)
	1436	[3327]	GETGLOBAL	R112 K5 ; R112 := 0x7b998233
	1437	[3327]	MOVE     	R113 R111 ; R113 := R111
	1438	[3327]	CALL     	R112 2 2 ; R112 := R112(R113)
	1439	[3327]	TEST     	R112 1 ; if R112 then PC := 1447
	1440	[3327]	JMP      	1447 ; PC := 1447
	1441	[3328]	GETGLOBAL	R112 K51 ; R112 := mPlayerMissionInfo
	1442	[3328]	SELF     	R112 R112 K106 ; R113 := R112; R112 := R112[0x514bfe0e]
	1443	[3328]	LOADK    	R114 := 2.000000
	1444	[3328]	LOADK    	R115 := 3.000000
	1445	[3328]	GETTABLE 	R116 R111 K107 ; R116 := R111["mXP"]
	1446	[3328]	CALL     	R112 5 1 ; R112(R113,R114,R115,R116)
	1447	[3332]	SELF     	R112 R88 K105 ; R113 := R88; R112 := R88[0xb61abfd2]
	1448	[3332]	LOADK    	R114 := 7.000000
	1449	[3332]	LOADK    	R115 := 2.000000
	1450	[3332]	CALL     	R112 4 2 ; R112 := R112(R113,R114,R115)
	1451	[3333]	GETGLOBAL	R113 K5 ; R113 := 0x7b998233
	1452	[3333]	MOVE     	R114 R112 ; R114 := R112
	1453	[3333]	CALL     	R113 2 2 ; R113 := R113(R114)
	1454	[3333]	TEST     	R113 1 ; if R113 then PC := 1462
	1455	[3333]	JMP      	1462 ; PC := 1462
	1456	[3334]	GETGLOBAL	R113 K51 ; R113 := mPlayerMissionInfo
	1457	[3334]	SELF     	R113 R113 K106 ; R114 := R113; R113 := R113[0x514bfe0e]
	1458	[3334]	LOADK    	R115 := 7.000000
	1459	[3334]	LOADK    	R116 := 2.000000
	1460	[3334]	GETTABLE 	R117 R112 K107 ; R117 := R112["mXP"]
	1461	[3334]	CALL     	R113 5 1 ; R113(R114,R115,R116,R117)
	1462	[3338]	GETGLOBAL	R113 K51 ; R113 := mPlayerMissionInfo
	1463	[3338]	SETTABLE 	R113 K108 K109 ; R113["mScore"] := 0.000000
	1464	[3339]	OP_LOADBOOL	R113 1 0 ; R113 := true
	1465	[3340]	GETUPVAL 	R114 U5 ; R114 := U5
	1466	[3340]	CALL     	R114 1 2 ; R114 := R114()
	1467	[3340]	TEST     	R114 0 ; if not R114 then PC := 1488
	1468	[3340]	JMP      	1488 ; PC := 1488
	1469	[3340]	GETUPVAL 	R114 U6 ; R114 := U6
	1470	[3340]	GETTABLE 	R114 R114 K54 ; R114 := R114["isPvp"]
	1471	[3340]	TEST     	R114 1 ; if R114 then PC := 1488
	1472	[3340]	JMP      	1488 ; PC := 1488
	1473	[3341]	OP_LOADBOOL	R113 0 0 ; R113 := false
	1474	[3342]	GETGLOBAL	R114 K51 ; R114 := mPlayerMissionInfo
	1475	[3342]	GETUPVAL 	R115 U2 ; R115 := U2
	1476	[3342]	GETTABLE 	R115 R115 K53 ; R115 := R115[0x06d055f9]
	1477	[3342]	EQ       	1 R0 K59 ; if R0 == false then PC := 1480
	1478	[3342]	JMP      	1480 ; PC := 1480
	1479	[3342]	OP_LOADBOOL	R116 0 1 ; R116 := false; PC := 1480
	1480	[3342]	OP_LOADBOOL	R116 1 0 ; R116 := true
	1481	[3342]	LOADK    	R117 := 0.000000
	1482	[3342]	GETGLOBAL	R118 K7 ; R118 := 0xbe190284
	1483	[3342]	SELF     	R118 R118 K110 ; R119 := R118; R118 := R118[0xd0df34ee]
	1484	[3342]	CALL     	R118 2 0 ; R118,... := R118(R119)
	1485	[3342]	CALL     	R115 0 2 ; R115 := R115(R116,...)
	1486	[3342]	SETTABLE 	R114 K108 R115 ; R114["mScore"] := R115
	1487	[3342]	JMP      	1638 ; PC := 1638
	1488	[3343]	GETUPVAL 	R114 U7 ; R114 := U7
	1489	[3343]	CALL     	R114 1 2 ; R114 := R114()
	1490	[3343]	TEST     	R114 0 ; if not R114 then PC := 1509
	1491	[3343]	JMP      	1509 ; PC := 1509
	1492	[3344]	GETGLOBAL	R114 K51 ; R114 := mPlayerMissionInfo
	1493	[3344]	GETUPVAL 	R115 U2 ; R115 := U2
	1494	[3344]	GETTABLE 	R115 R115 K53 ; R115 := R115[0x06d055f9]
	1495	[3344]	EQ       	1 R0 K59 ; if R0 == false then PC := 1498
	1496	[3344]	JMP      	1498 ; PC := 1498
	1497	[3344]	OP_LOADBOOL	R116 0 1 ; R116 := false; PC := 1498
	1498	[3344]	OP_LOADBOOL	R116 1 0 ; R116 := true
	1499	[3344]	LOADK    	R117 := 0.000000
	1500	[3344]	GETGLOBAL	R118 K7 ; R118 := 0xbe190284
	1501	[3344]	SELF     	R118 R118 K111 ; R119 := R118; R118 := R118[0x0eb34c69]
	1502	[3344]	GETUPVAL 	R120 U8 ; R120 := U8
	1503	[3344]	GETTABLE 	R120 R120 K112 ; R120 := R120["HIVE_SCORE"]
	1504	[3344]	LOADK    	R121 := 0.000000
	1505	[3344]	CALL     	R118 4 0 ; R118,... := R118(R119,R120,R121)
	1506	[3344]	CALL     	R115 0 2 ; R115 := R115(R116,...)
	1507	[3344]	SETTABLE 	R114 K108 R115 ; R114["mScore"] := R115
	1508	[3344]	JMP      	1638 ; PC := 1638
	1509	[3345]	GETUPVAL 	R114 U9 ; R114 := U9
	1510	[3345]	CALL     	R114 1 2 ; R114 := R114()
	1511	[3345]	TEST     	R114 0 ; if not R114 then PC := 1530
	1512	[3345]	JMP      	1530 ; PC := 1530
	1513	[3346]	GETGLOBAL	R114 K51 ; R114 := mPlayerMissionInfo
	1514	[3346]	GETUPVAL 	R115 U2 ; R115 := U2
	1515	[3346]	GETTABLE 	R115 R115 K53 ; R115 := R115[0x06d055f9]
	1516	[3346]	EQ       	1 R0 K59 ; if R0 == false then PC := 1519
	1517	[3346]	JMP      	1519 ; PC := 1519
	1518	[3346]	OP_LOADBOOL	R116 0 1 ; R116 := false; PC := 1519
	1519	[3346]	OP_LOADBOOL	R116 1 0 ; R116 := true
	1520	[3346]	LOADK    	R117 := 0.000000
	1521	[3346]	GETGLOBAL	R118 K7 ; R118 := 0xbe190284
	1522	[3346]	SELF     	R118 R118 K111 ; R119 := R118; R118 := R118[0x0eb34c69]
	1523	[3346]	GETUPVAL 	R120 U8 ; R120 := U8
	1524	[3346]	GETTABLE 	R120 R120 K113 ; R120 := R120["RESCUE_SCORE"]
	1525	[3346]	LOADK    	R121 := 0.000000
	1526	[3346]	CALL     	R118 4 0 ; R118,... := R118(R119,R120,R121)
	1527	[3346]	CALL     	R115 0 2 ; R115 := R115(R116,...)
	1528	[3346]	SETTABLE 	R114 K108 R115 ; R114["mScore"] := R115
	1529	[3346]	JMP      	1638 ; PC := 1638
	1530	[3347]	GETUPVAL 	R114 U10 ; R114 := U10
	1531	[3347]	CALL     	R114 1 2 ; R114 := R114()
	1532	[3347]	TEST     	R114 0 ; if not R114 then PC := 1571
	1533	[3347]	JMP      	1571 ; PC := 1571
	1534	[3348]	OP_LOADBOOL	R113 0 0 ; R113 := false
	1535	[3349]	GETGLOBAL	R114 K51 ; R114 := mPlayerMissionInfo
	1536	[3349]	GETUPVAL 	R115 U2 ; R115 := U2
	1537	[3349]	GETTABLE 	R115 R115 K53 ; R115 := R115[0x06d055f9]
	1538	[3349]	EQ       	1 R0 K59 ; if R0 == false then PC := 1541
	1539	[3349]	JMP      	1541 ; PC := 1541
	1540	[3349]	OP_LOADBOOL	R116 0 1 ; R116 := false; PC := 1541
	1541	[3349]	OP_LOADBOOL	R116 1 0 ; R116 := true
	1542	[3349]	LOADK    	R117 := 0.000000
	1543	[3349]	GETGLOBAL	R118 K7 ; R118 := 0xbe190284
	1544	[3349]	SELF     	R118 R118 K111 ; R119 := R118; R118 := R118[0x0eb34c69]
	1545	[3349]	GETUPVAL 	R120 U8 ; R120 := U8
	1546	[3349]	GETTABLE 	R120 R120 K114 ; R120 := R120["WAVE_NUMBER"]
	1547	[3349]	LOADK    	R121 := 0.000000
	1548	[3349]	CALL     	R118 4 0 ; R118,... := R118(R119,R120,R121)
	1549	[3349]	CALL     	R115 0 2 ; R115 := R115(R116,...)
	1550	[3349]	SETTABLE 	R114 K108 R115 ; R114["mScore"] := R115
	1551	[3351]	GETGLOBAL	R114 K51 ; R114 := mPlayerMissionInfo
	1552	[3351]	GETTABLE 	R114 R114 K108 ; R114 := R114["mScore"]
	1553	[3351]	LT       	0 K109 R114 ; if 0.000000 >= R114 then PC := 1560
	1554	[3351]	JMP      	1560 ; PC := 1560
	1555	[3354]	GETGLOBAL	R114 K51 ; R114 := mPlayerMissionInfo
	1556	[3354]	GETGLOBAL	R115 K51 ; R115 := mPlayerMissionInfo
	1557	[3354]	GETTABLE 	R115 R115 K108 ; R115 := R115["mScore"]
	1558	[3354]	SUB      	R115 R115 K20 ; R115 := R115 - 1.000000
	1559	[3354]	SETTABLE 	R114 K108 R115 ; R114["mScore"] := R115
	1560	[3357]	GETGLOBAL	R114 K51 ; R114 := mPlayerMissionInfo
	1561	[3357]	GETTABLE 	R114 R114 K108 ; R114 := R114["mScore"]
	1562	[3357]	LT       	0 K115 R114 ; if 1000.000000 >= R114 then PC := 1638
	1563	[3357]	JMP      	1638 ; PC := 1638
	1564	[3358]	GETGLOBAL	R114 K0 ; R114 := 0x3d106989
	1565	[3358]	LOADK    	R115 K116 ; R115 := "Extremely high score returned from NV_WAVE_NUMBER: "
	1566	[3358]	GETGLOBAL	R116 K51 ; R116 := mPlayerMissionInfo
	1567	[3358]	GETTABLE 	R116 R116 K108 ; R116 := R116["mScore"]
	1568	[3358]	CONCAT   	R115 R115 R116 ; R115 := R115 .. R116
	1569	[3358]	CALL     	R114 2 1 ; R114(R115)
	1570	[3359]	JMP      	1638 ; PC := 1638
	1571	[3360]	GETUPVAL 	R114 U11 ; R114 := U11
	1572	[3360]	CALL     	R114 1 2 ; R114 := R114()
	1573	[3360]	TEST     	R114 0 ; if not R114 then PC := 1593
	1574	[3360]	JMP      	1593 ; PC := 1593
	1575	[3361]	OP_LOADBOOL	R113 0 0 ; R113 := false
	1576	[3362]	GETGLOBAL	R114 K51 ; R114 := mPlayerMissionInfo
	1577	[3362]	GETUPVAL 	R115 U2 ; R115 := U2
	1578	[3362]	GETTABLE 	R115 R115 K53 ; R115 := R115[0x06d055f9]
	1579	[3362]	EQ       	1 R0 K59 ; if R0 == false then PC := 1582
	1580	[3362]	JMP      	1582 ; PC := 1582
	1581	[3362]	OP_LOADBOOL	R116 0 1 ; R116 := false; PC := 1582
	1582	[3362]	OP_LOADBOOL	R116 1 0 ; R116 := true
	1583	[3362]	LOADK    	R117 := 0.000000
	1584	[3362]	GETGLOBAL	R118 K7 ; R118 := 0xbe190284
	1585	[3362]	SELF     	R118 R118 K111 ; R119 := R118; R118 := R118[0x0eb34c69]
	1586	[3362]	GETUPVAL 	R120 U8 ; R120 := U8
	1587	[3362]	GETTABLE 	R120 R120 K117 ; R120 := R120["TIME_ELAPSED"]
	1588	[3362]	LOADK    	R121 := 0.000000
	1589	[3362]	CALL     	R118 4 0 ; R118,... := R118(R119,R120,R121)
	1590	[3362]	CALL     	R115 0 2 ; R115 := R115(R116,...)
	1591	[3362]	SETTABLE 	R114 K108 R115 ; R114["mScore"] := R115
	1592	[3362]	JMP      	1638 ; PC := 1638
	1593	[3363]	GETUPVAL 	R114 U12 ; R114 := U12
	1594	[3363]	CALL     	R114 1 2 ; R114 := R114()
	1595	[3363]	TEST     	R114 1 ; if R114 then PC := 1601
	1596	[3363]	JMP      	1601 ; PC := 1601
	1597	[3363]	GETUPVAL 	R114 U13 ; R114 := U13
	1598	[3363]	CALL     	R114 1 2 ; R114 := R114()
	1599	[3363]	TEST     	R114 0 ; if not R114 then PC := 1618
	1600	[3363]	JMP      	1618 ; PC := 1618
	1601	[3364]	GETGLOBAL	R114 K51 ; R114 := mPlayerMissionInfo
	1602	[3364]	GETUPVAL 	R115 U2 ; R115 := U2
	1603	[3364]	GETTABLE 	R115 R115 K53 ; R115 := R115[0x06d055f9]
	1604	[3364]	EQ       	1 R0 K59 ; if R0 == false then PC := 1607
	1605	[3364]	JMP      	1607 ; PC := 1607
	1606	[3364]	OP_LOADBOOL	R116 0 1 ; R116 := false; PC := 1607
	1607	[3364]	OP_LOADBOOL	R116 1 0 ; R116 := true
	1608	[3364]	LOADK    	R117 := 0.000000
	1609	[3364]	GETGLOBAL	R118 K7 ; R118 := 0xbe190284
	1610	[3364]	SELF     	R118 R118 K111 ; R119 := R118; R118 := R118[0x0eb34c69]
	1611	[3364]	GETUPVAL 	R120 U8 ; R120 := U8
	1612	[3364]	GETTABLE 	R120 R120 K118 ; R120 := R120["MISSION_SCORE"]
	1613	[3364]	LOADK    	R121 := 0.000000
	1614	[3364]	CALL     	R118 4 0 ; R118,... := R118(R119,R120,R121)
	1615	[3364]	CALL     	R115 0 2 ; R115 := R115(R116,...)
	1616	[3364]	SETTABLE 	R114 K108 R115 ; R114["mScore"] := R115
	1617	[3364]	JMP      	1638 ; PC := 1638
	1618	[3365]	GETUPVAL 	R114 U14 ; R114 := U14
	1619	[3365]	CALL     	R114 1 2 ; R114 := R114()
	1620	[3365]	TEST     	R114 0 ; if not R114 then PC := 1638
	1621	[3365]	JMP      	1638 ; PC := 1638
	1622	[3366]	GETGLOBAL	R114 K51 ; R114 := mPlayerMissionInfo
	1623	[3366]	GETUPVAL 	R115 U2 ; R115 := U2
	1624	[3366]	GETTABLE 	R115 R115 K53 ; R115 := R115[0x06d055f9]
	1625	[3366]	EQ       	1 R0 K59 ; if R0 == false then PC := 1628
	1626	[3366]	JMP      	1628 ; PC := 1628
	1627	[3366]	OP_LOADBOOL	R116 0 1 ; R116 := false; PC := 1628
	1628	[3366]	OP_LOADBOOL	R116 1 0 ; R116 := true
	1629	[3366]	LOADK    	R117 := 0.000000
	1630	[3366]	GETGLOBAL	R118 K7 ; R118 := 0xbe190284
	1631	[3366]	SELF     	R118 R118 K111 ; R119 := R118; R118 := R118[0x0eb34c69]
	1632	[3366]	GETUPVAL 	R120 U8 ; R120 := U8
	1633	[3366]	GETTABLE 	R120 R120 K117 ; R120 := R120["TIME_ELAPSED"]
	1634	[3366]	LOADK    	R121 := 0.000000
	1635	[3366]	CALL     	R118 4 0 ; R118,... := R118(R119,R120,R121)
	1636	[3366]	CALL     	R115 0 2 ; R115 := R115(R116,...)
	1637	[3366]	SETTABLE 	R114 K108 R115 ; R114["mScore"] := R115
	1638	[3369]	GETUPVAL 	R114 U15 ; R114 := U15
	1639	[3369]	CALL     	R114 1 2 ; R114 := R114()
	1640	[3369]	TEST     	R114 0 ; if not R114 then PC := 1673
	1641	[3369]	JMP      	1673 ; PC := 1673
	1642	[3369]	GETUPVAL 	R114 U16 ; R114 := U16
	1643	[3369]	GETTABLE 	R114 R114 K119 ; R114 := R114[0xcdc34211]
	1644	[3369]	CALL     	R114 1 2 ; R114 := R114()
	1645	[3369]	TEST     	R114 0 ; if not R114 then PC := 1673
	1646	[3369]	JMP      	1673 ; PC := 1673
	1647	[3370]	GETUPVAL 	R114 U17 ; R114 := U17
	1648	[3370]	CALL     	R114 1 2 ; R114 := R114()
	1649	[3371]	GETGLOBAL	R115 K5 ; R115 := 0x7b998233
	1650	[3371]	MOVE     	R116 R114 ; R116 := R114
	1651	[3371]	CALL     	R115 2 2 ; R115 := R115(R116)
	1652	[3371]	TEST     	R115 1 ; if R115 then PC := 1673
	1653	[3371]	JMP      	1673 ; PC := 1673
	1654	[3372]	SELF     	R115 R114 K48 ; R116 := R114; R115 := R114[0xb8c8dfbd]
	1655	[3372]	CALL     	R115 2 2 ; R115 := R115(R116)
	1656	[3373]	GETGLOBAL	R116 K5 ; R116 := 0x7b998233
	1657	[3373]	MOVE     	R117 R115 ; R117 := R115
	1658	[3373]	CALL     	R116 2 2 ; R116 := R116(R117)
	1659	[3373]	TEST     	R116 1 ; if R116 then PC := 1673
	1660	[3373]	JMP      	1673 ; PC := 1673
	1661	[3373]	GETGLOBAL	R116 K7 ; R116 := 0xbe190284
	1662	[3373]	SELF     	R116 R116 K120 ; R117 := R116; R116 := R116[0x5d204145]
	1663	[3373]	CALL     	R116 2 2 ; R116 := R116(R117)
	1664	[3373]	TEST     	R116 1 ; if R116 then PC := 1673
	1665	[3373]	JMP      	1673 ; PC := 1673
	1666	[3374]	SELF     	R116 R115 K121 ; R117 := R115; R116 := R115[0x864e4735]
	1667	[3374]	CALL     	R116 2 2 ; R116 := R116(R117)
	1668	[3375]	LT       	0 K109 R116 ; if 0.000000 >= R116 then PC := 1673
	1669	[3375]	JMP      	1673 ; PC := 1673
	1670	[3376]	SETGLOBALHASH	R116 K122 ; mIntrinsicPoints := R116
	1671	[3377]	GETGLOBAL	R117 K51 ; R117 := mPlayerMissionInfo
	1672	[3377]	SETTABLE 	R117 K123 R116 ; R117[0xb73d420f] := R116
	1673	[3384]	TEST     	R0 0 ; if not R0 then PC := 1684
	1674	[3384]	JMP      	1684 ; PC := 1684
	1675	[3384]	TEST     	R2 0 ; if not R2 then PC := 1684
	1676	[3384]	JMP      	1684 ; PC := 1684
	1677	[3385]	GETGLOBAL	R117 K51 ; R117 := mPlayerMissionInfo
	1678	[3385]	GETGLOBAL	R118 K7 ; R118 := 0xbe190284
	1679	[3385]	SELF     	R118 R118 K125 ; R119 := R118; R118 := R118[0xd4ca862a]
	1680	[3385]	CALL     	R118 2 2 ; R118 := R118(R119)
	1681	[3385]	DIV      	R118 R118 K126 ; R118 := R118 / 5.000000
	1682	[3385]	SETTABLE 	R117 K124 R118 ; R117["mMissionRating"] := R118
	1683	[3385]	JMP      	1686 ; PC := 1686
	1684	[3387]	GETGLOBAL	R117 K51 ; R117 := mPlayerMissionInfo
	1685	[3387]	SETTABLE 	R117 K124 K109 ; R117["mMissionRating"] := 0.000000
	1686	[3389]	GETGLOBAL	R117 K5 ; R117 := 0x7b998233
	1687	[3389]	GETGLOBAL	R118 K6 ; R118 := mGameData
	1688	[3389]	CALL     	R117 2 2 ; R117 := R117(R118)
	1689	[3389]	TEST     	R117 1 ; if R117 then PC := 1710
	1690	[3389]	JMP      	1710 ; PC := 1710
	1691	[3390]	TEST     	R113 0 ; if not R113 then PC := 1701
	1692	[3390]	JMP      	1701 ; PC := 1701
	1693	[3391]	GETGLOBAL	R117 K51 ; R117 := mPlayerMissionInfo
	1694	[3391]	GETGLOBAL	R118 K51 ; R118 := mPlayerMissionInfo
	1695	[3391]	GETTABLE 	R118 R118 K108 ; R118 := R118["mScore"]
	1696	[3391]	GETGLOBAL	R119 K6 ; R119 := mGameData
	1697	[3391]	SELF     	R119 R119 K127 ; R120 := R119; R119 := R119[0xf91bb3a5]
	1698	[3391]	CALL     	R119 2 2 ; R119 := R119(R120)
	1699	[3391]	MUL      	R118 R118 R119 ; R118 := R118 * R119
	1700	[3391]	SETTABLE 	R117 K108 R118 ; R117["mScore"] := R118
	1701	[3393]	GETGLOBAL	R117 K6 ; R117 := mGameData
	1702	[3393]	SELF     	R117 R117 K128 ; R118 := R117; R117 := R117[0xad87a3cb]
	1703	[3393]	MOVE     	R119 R55 ; R119 := R55
	1704	[3393]	GETGLOBAL	R120 K51 ; R120 := mPlayerMissionInfo
	1705	[3393]	CALL     	R117 4 1 ; R117(R118,R119,R120)
	1706	[3394]	GETGLOBAL	R117 K6 ; R117 := mGameData
	1707	[3394]	SELF     	R117 R117 K129 ; R118 := R117; R117 := R117[0x949675cc]
	1708	[3394]	MOVE     	R119 R55 ; R119 := R55
	1709	[3394]	CALL     	R117 3 1 ; R117(R118,R119)
	1710	[3396]	SELF     	R117 R55 K96 ; R118 := R55; R117 := R55[0x420402a9]
	1711	[3396]	CALL     	R117 2 2 ; R117 := R117(R118)
	1712	[3396]	TEST     	R117 0 ; if not R117 then PC := 1750
	1713	[3396]	JMP      	1750 ; PC := 1750
	1714	[3397]	GETUPVAL 	R117 U16 ; R117 := U16
	1715	[3397]	GETTABLE 	R117 R117 K119 ; R117 := R117[0xcdc34211]
	1716	[3397]	CALL     	R117 1 2 ; R117 := R117()
	1717	[3397]	TEST     	R117 0 ; if not R117 then PC := 1728
	1718	[3397]	JMP      	1728 ; PC := 1728
	1719	[3398]	GETGLOBAL	R117 K7 ; R117 := 0xbe190284
	1720	[3398]	SELF     	R117 R117 K130 ; R118 := R117; R117 := R117[0x16975799]
	1721	[3398]	MOVE     	R119 R55 ; R119 := R55
	1722	[3398]	TESTSET  	R120 R0 0 ; if not R0 then PC := 1725 else R120 := R0 
	1723	[3398]	JMP      	1725 ; PC := 1725
	1724	[3398]	MOVE     	R120 R2 ; R120 := R2
	1725	[3398]	OP_LOADBOOL	R121 0 0 ; R121 := false
	1726	[3398]	CALL     	R117 5 1 ; R117(R118,R119,R120,R121)
	1727	[3398]	JMP      	1750 ; PC := 1750
	1728	[3400]	GETGLOBAL	R117 K7 ; R117 := 0xbe190284
	1729	[3400]	SELF     	R117 R117 K130 ; R118 := R117; R117 := R117[0x16975799]
	1730	[3400]	MOVE     	R119 R55 ; R119 := R55
	1731	[3400]	MOVE     	R120 R0 ; R120 := R0
	1732	[3400]	OP_LOADBOOL	R121 0 0 ; R121 := false
	1733	[3400]	CALL     	R117 5 1 ; R117(R118,R119,R120,R121)
	1734	[3402]	JMP      	1750 ; PC := 1750
	1735	[3406]	LOADK    	R117 K131 ; R117 := "NULL"
	1736	[3407]	GETGLOBAL	R118 K5 ; R118 := 0x7b998233
	1737	[3407]	MOVE     	R119 R55 ; R119 := R55
	1738	[3407]	CALL     	R118 2 2 ; R118 := R118(R119)
	1739	[3407]	TEST     	R118 1 ; if R118 then PC := 1744
	1740	[3407]	JMP      	1744 ; PC := 1744
	1741	[3408]	SELF     	R118 R55 K49 ; R119 := R55; R118 := R55[0x5ca33548]
	1742	[3408]	CALL     	R118 2 2 ; R118 := R118(R119)
	1743	[3408]	MOVE     	R117 R118 ; R117 := R118
	1744	[3410]	GETGLOBAL	R118 K0 ; R118 := 0x3d106989
	1745	[3410]	LOADK    	R119 K132 ; R119 := "Cannot give end of match rewards for player "
	1746	[3410]	MOVE     	R120 R117 ; R120 := R117
	1747	[3410]	LOADK    	R121 K133 ; R121 := "! Avatar was NULL or InventoryController was wrong type"
	1748	[3410]	CONCAT   	R119 R119 R121 ; R119 := R119 .. R120 .. R121
	1749	[3410]	CALL     	R118 2 1 ; R118(R119)
	1750	[3019]	TFORLOOP 	R51 2 ; R54,R55 := R51(R52,R53); if R54 ~= nil then begin PC = 263; R53 := R54 end
	1751	[3411]	JMP      	263 ; PC := 263
	1752	[3414]	GETUPVAL 	R118 U16 ; R118 := U16
	1753	[3414]	GETTABLE 	R118 R118 K119 ; R118 := R118[0xcdc34211]
	1754	[3414]	CALL     	R118 1 2 ; R118 := R118()
	1755	[3414]	TEST     	R118 0 ; if not R118 then PC := 1769
	1756	[3414]	JMP      	1769 ; PC := 1769
	1757	[3414]	GETGLOBAL	R118 K8 ; R118 := _T
	1758	[3414]	GETTABLE 	R118 R118 K9 ; R118 := R118["eomScreenMode"]
	1759	[3414]	GETUPVAL 	R119 U0 ; R119 := U0
	1760	[3414]	GETTABLE 	R119 R119 K134 ; R119 := R119["DETAILED_PREVIEW"]
	1761	[3414]	EQ       	0 R118 R119 ; if R118 ~= R119 then PC := 1769
	1762	[3414]	JMP      	1769 ; PC := 1769
	1763	[3415]	GETUPVAL 	R118 U18 ; R118 := U18
	1764	[3415]	CALL     	R118 1 2 ; R118 := R118()
	1765	[3415]	TEST     	R118 0 ; if not R118 then PC := 1769
	1766	[3415]	JMP      	1769 ; PC := 1769
	1767	[3416]	GETUPVAL 	R118 U19 ; R118 := U19
	1768	[3416]	CALL     	R118 1 1 ; R118()
	1769	[3421]	GETGLOBAL	R118 K14 ; R118 := 0x89326c93
	1770	[3421]	SELF     	R118 R118 K135 ; R119 := R118; R118 := R118[0x18d05d30]
	1771	[3421]	CALL     	R118 2 2 ; R118 := R118(R119)
	1772	[3422]	TEST     	R118 1 ; if R118 then PC := 1776
	1773	[3422]	JMP      	1776 ; PC := 1776
	1774	[3422]	TEST     	R2 1 ; if R2 then PC := 1780
	1775	[3422]	JMP      	1780 ; PC := 1780
	1776	[3423]	GETGLOBAL	R119 K6 ; R119 := mGameData
	1777	[3423]	SELF     	R119 R119 K136 ; R120 := R119; R119 := R119[0x899d5f47]
	1778	[3423]	MOVE     	R121 R118 ; R121 := R118
	1779	[3423]	CALL     	R119 3 1 ; R119(R120,R121)
	1780	[3426]	GETUPVAL 	R119 U3 ; R119 := U3
	1781	[3426]	CALL     	R119 1 2 ; R119 := R119()
	1782	[3426]	TEST     	R119 1 ; if R119 then PC := 1786
	1783	[3426]	JMP      	1786 ; PC := 1786
	1784	[3426]	GETUPVAL 	R119 U20 ; R119 := U20
	1785	[3426]	CALL     	R119 1 2 ; R119 := R119()
	1786	[3428]	TEST     	R2 0 ; if not R2 then PC := 1793
	1787	[3428]	JMP      	1793 ; PC := 1793
	1788	[3428]	TEST     	R119 1 ; if R119 then PC := 1793
	1789	[3428]	JMP      	1793 ; PC := 1793
	1790	[3429]	GETGLOBAL	R120 K7 ; R120 := 0xbe190284
	1791	[3429]	SELF     	R120 R120 K137 ; R121 := R120; R120 := R120[0x0670ef1c]
	1792	[3429]	CALL     	R120 2 1 ; R120(R121)
	1793	[3432]	TEST     	R2 0 ; if not R2 then PC := 1975
	1794	[3432]	JMP      	1975 ; PC := 1975
	1795	[3433]	TEST     	R0 0 ; if not R0 then PC := 1819
	1796	[3433]	JMP      	1819 ; PC := 1819
	1797	[3435]	GETTABLE 	R120 R4 K138 ; R120 := R4["alertId"]
	1798	[3435]	EQ       	1 R120 K139 ; if R120 == "" then PC := 1806
	1799	[3435]	JMP      	1806 ; PC := 1806
	1800	[3435]	GETGLOBAL	R120 K6 ; R120 := mGameData
	1801	[3435]	SELF     	R120 R120 K140 ; R121 := R120; R120 := R120[0xcf6ac497]
	1802	[3435]	GETTABLE 	R122 R4 K138 ; R122 := R4["alertId"]
	1803	[3435]	CALL     	R120 3 2 ; R120 := R120(R121,R122)
	1804	[3435]	TEST     	R120 1 ; if R120 then PC := 1817
	1805	[3435]	JMP      	1817 ; PC := 1817
	1806	[3436]	GETTABLE 	R120 R4 K141 ; R120 := R4["periodicMissionTag"]
	1807	[3436]	GETGLOBAL	R121 K142 ; R121 := EMPTY_SYMBOL
	1808	[3436]	EQ       	1 R120 R121 ; if R120 == R121 then PC := 1819
	1809	[3436]	JMP      	1819 ; PC := 1819
	1810	[3436]	GETGLOBAL	R120 K6 ; R120 := mGameData
	1811	[3436]	SELF     	R120 R120 K143 ; R121 := R120; R120 := R120[0xc3150d06]
	1812	[3436]	GETTABLE 	R122 R4 K141 ; R122 := R4["periodicMissionTag"]
	1813	[3436]	GETTABLE 	R123 R4 K144 ; R123 := R4["periodicMissionCooldown"]
	1814	[3436]	CALL     	R120 4 2 ; R120 := R120(R121,R122,R123)
	1815	[3436]	TEST     	R120 1 ; if R120 then PC := 1819
	1816	[3436]	JMP      	1819 ; PC := 1819
	1817	[3438]	OP_LOADBOOL	R120 1 0 ; R120 := true
	1818	[3438]	SETUPVAL 	R120 U21 ; U21 := R120
	1819	[3442]	OP_LOADBOOL	R120 1 0 ; R120 := true
	1820	[3442]	SETGLOBALHASH	R120 K145 ; mWaitingForDbUpdate := R120
	1821	[3444]	GETUPVAL 	R120 U6 ; R120 := U6
	1822	[3444]	GETTABLE 	R120 R120 K54 ; R120 := R120["isPvp"]
	1823	[3444]	TEST     	R120 1 ; if R120 then PC := 1970
	1824	[3444]	JMP      	1970 ; PC := 1970
	1825	[3445]	TEST     	R0 0 ; if not R0 then PC := 1835
	1826	[3445]	JMP      	1835 ; PC := 1835
	1827	[3445]	GETGLOBAL	R120 K8 ; R120 := _T
	1828	[3445]	GETTABLE 	R120 R120 K146 ; R120 := R120["OnEndOfMatchMissionSuccess"]
	1829	[3445]	EQ       	1 R120 K147 ; if R120 == nil then PC := 1835
	1830	[3445]	JMP      	1835 ; PC := 1835
	1831	[3446]	GETGLOBAL	R120 K8 ; R120 := _T
	1832	[3446]	GETTABLE 	R120 R120 K148 ; R120 := R120[0x9b299e4b]
	1833	[3446]	CALL     	R120 1 1 ; R120()
	1834	[3446]	JMP      	1844 ; PC := 1844
	1835	[3447]	TEST     	R0 1 ; if R0 then PC := 1844
	1836	[3447]	JMP      	1844 ; PC := 1844
	1837	[3447]	GETGLOBAL	R120 K8 ; R120 := _T
	1838	[3447]	GETTABLE 	R120 R120 K149 ; R120 := R120["OnEndOfMatchMissionFail"]
	1839	[3447]	EQ       	1 R120 K147 ; if R120 == nil then PC := 1844
	1840	[3447]	JMP      	1844 ; PC := 1844
	1841	[3448]	GETGLOBAL	R120 K8 ; R120 := _T
	1842	[3448]	GETTABLE 	R120 R120 K150 ; R120 := R120[0xf962fa5c]
	1843	[3448]	CALL     	R120 1 1 ; R120()
	1844	[3451]	GETTABLE 	R120 R4 K151 ; R120 := R4["missionType"]
	1845	[3451]	EQ       	1 R120 K152 ; if R120 == 31.000000 then PC := 1848
	1846	[3451]	JMP      	1848 ; PC := 1848
	1847	[3451]	OP_LOADBOOL	R120 0 1 ; R120 := false; PC := 1848
	1848	[3451]	OP_LOADBOOL	R120 1 0 ; R120 := true
	1849	[3452]	TESTSET  	R121 R120 0 ; if not R120 then PC := 1858 else R121 := R120 
	1850	[3452]	JMP      	1858 ; PC := 1858
	1851	[3452]	GETTABLE 	R121 R4 K153 ; R121 := R4["location"]
	1852	[3452]	GETUPVAL 	R122 U8 ; R122 := U8
	1853	[3452]	GETTABLE 	R122 R122 K154 ; R122 := R122["FREE_FLIGHT_NODE"]
	1854	[3452]	EQ       	1 R121 R122 ; if R121 == R122 then PC := 1857
	1855	[3452]	JMP      	1857 ; PC := 1857
	1856	[3452]	OP_LOADBOOL	R121 0 1 ; R121 := false; PC := 1857
	1857	[3452]	OP_LOADBOOL	R121 1 0 ; R121 := true
	1858	[3453]	GETGLOBAL	R122 K7 ; R122 := 0xbe190284
	1859	[3453]	SELF     	R122 R122 K111 ; R123 := R122; R122 := R122[0x0eb34c69]
	1860	[3453]	GETGLOBAL	R124 K155 ; R124 := 0x0469f296
	1861	[3453]	LOADK    	R125 K156 ; R125 := "RJLichAssassinateComplete"
	1862	[3453]	CALL     	R124 2 2 ; R124 := R124(R125)
	1863	[3453]	LOADK    	R125 := 0.000000
	1864	[3453]	CALL     	R122 4 2 ; R122 := R122(R123,R124,R125)
	1865	[3453]	EQ       	1 R122 K20 ; if R122 == 1.000000 then PC := 1868
	1866	[3453]	JMP      	1868 ; PC := 1868
	1867	[3453]	OP_LOADBOOL	R122 0 1 ; R122 := false; PC := 1868
	1868	[3453]	OP_LOADBOOL	R122 1 0 ; R122 := true
	1869	[3455]	GETGLOBAL	R123 K8 ; R123 := _T
	1870	[3455]	GETTABLE 	R123 R123 K157 ; R123 := R123["AbortedRailjackMission"]
	1871	[3455]	TEST     	R123 0 ; if not R123 then PC := 1891
	1872	[3455]	JMP      	1891 ; PC := 1891
	1873	[3456]	GETGLOBAL	R123 K8 ; R123 := _T
	1874	[3456]	SETTABLE 	R123 K157 K147 ; R123["AbortedRailjackMission"] := nil
	1875	[3457]	GETUPVAL 	R123 U2 ; R123 := U2
	1876	[3457]	GETTABLE 	R123 R123 K53 ; R123 := R123[0x06d055f9]
	1877	[3457]	TESTSET  	R124 R121 1 ; if R121 then PC := 1880 else R124 := R121 
	1878	[3457]	JMP      	1880 ; PC := 1880
	1879	[3457]	MOVE     	R124 R122 ; R124 := R122
	1880	[3457]	LOADK    	R125 := 6.000000
	1881	[3457]	LOADK    	R126 := 5.000000
	1882	[3457]	CALL     	R123 4 2 ; R123 := R123(R124,R125,R126)
	1883	[3458]	GETGLOBAL	R124 K7 ; R124 := 0xbe190284
	1884	[3458]	SELF     	R124 R124 K158 ; R125 := R124; R124 := R124[0x12924388]
	1885	[3458]	MOVE     	R126 R123 ; R126 := R123
	1886	[3458]	LOADK    	R127 := 0.000000
	1887	[3458]	LOADK    	R128 := 0.000000
	1888	[3458]	LOADK    	R129 K159 ; R129 := "DbUpdateComplete"
	1889	[3458]	CALL     	R124 6 1 ; R124(R125,R126,R127,R128,R129)
	1890	[3458]	JMP      	1970 ; PC := 1970
	1891	[3459]	TEST     	R120 0 ; if not R120 then PC := 1911
	1892	[3459]	JMP      	1911 ; PC := 1911
	1893	[3459]	TEST     	R0 0 ; if not R0 then PC := 1911
	1894	[3459]	JMP      	1911 ; PC := 1911
	1895	[3459]	GETUPVAL 	R124 U10 ; R124 := U10
	1896	[3459]	CALL     	R124 1 2 ; R124 := R124()
	1897	[3459]	TEST     	R124 0 ; if not R124 then PC := 1911
	1898	[3459]	JMP      	1911 ; PC := 1911
	1899	[3459]	GETUPVAL 	R124 U22 ; R124 := U22
	1900	[3459]	CALL     	R124 1 2 ; R124 := R124()
	1901	[3459]	TEST     	R124 0 ; if not R124 then PC := 1911
	1902	[3459]	JMP      	1911 ; PC := 1911
	1903	[3460]	GETGLOBAL	R124 K7 ; R124 := 0xbe190284
	1904	[3460]	SELF     	R124 R124 K160 ; R125 := R124; R124 := R124[0x0f495200]
	1905	[3460]	OP_LOADBOOL	R126 1 0 ; R126 := true
	1906	[3460]	GETGLOBAL	R127 K161 ; R127 := 0xae91e43b
	1907	[3460]	LOADK    	R128 K159 ; R128 := "DbUpdateComplete"
	1908	[3460]	OP_LOADBOOL	R129 1 0 ; R129 := true
	1909	[3460]	CALL     	R124 6 1 ; R124(R125,R126,R127,R128,R129)
	1910	[3460]	JMP      	1970 ; PC := 1970
	1911	[3461]	TEST     	R120 0 ; if not R120 then PC := 1946
	1912	[3461]	JMP      	1946 ; PC := 1946
	1913	[3461]	TEST     	R0 0 ; if not R0 then PC := 1946
	1914	[3461]	JMP      	1946 ; PC := 1946
	1915	[3461]	GETGLOBAL	R124 K8 ; R124 := _T
	1916	[3461]	GETTABLE 	R124 R124 K162 ; R124 := R124["RailjackReturnToDojo"]
	1917	[3461]	TEST     	R124 1 ; if R124 then PC := 1946
	1918	[3461]	JMP      	1946 ; PC := 1946
	1919	[3462]	GETUPVAL 	R124 U10 ; R124 := U10
	1920	[3462]	CALL     	R124 1 2 ; R124 := R124()
	1921	[3462]	TEST     	R124 0 ; if not R124 then PC := 1930
	1922	[3462]	JMP      	1930 ; PC := 1930
	1923	[3462]	GETGLOBAL	R124 K8 ; R124 := _T
	1924	[3462]	GETTABLE 	R124 R124 K163 ; R124 := R124["RailjackStreamingToNextMission"]
	1925	[3462]	TEST     	R124 1 ; if R124 then PC := 1930
	1926	[3462]	JMP      	1930 ; PC := 1930
	1927	[3464]	OP_LOADBOOL	R124 1 0 ; R124 := true
	1928	[3464]	SETGLOBALHASH	R124 K164 ; mShowDuringLoadingScreen := R124
	1929	[3464]	JMP      	1970 ; PC := 1970
	1930	[3466]	GETUPVAL 	R124 U2 ; R124 := U2
	1931	[3466]	GETTABLE 	R124 R124 K53 ; R124 := R124[0x06d055f9]
	1932	[3466]	TESTSET  	R125 R121 1 ; if R121 then PC := 1935 else R125 := R121 
	1933	[3466]	JMP      	1935 ; PC := 1935
	1934	[3466]	MOVE     	R125 R122 ; R125 := R122
	1935	[3466]	LOADK    	R126 := 6.000000
	1936	[3466]	LOADK    	R127 := 5.000000
	1937	[3466]	CALL     	R124 4 2 ; R124 := R124(R125,R126,R127)
	1938	[3467]	GETGLOBAL	R125 K7 ; R125 := 0xbe190284
	1939	[3467]	SELF     	R125 R125 K158 ; R126 := R125; R125 := R125[0x12924388]
	1940	[3467]	MOVE     	R127 R124 ; R127 := R124
	1941	[3467]	LOADK    	R128 := 0.000000
	1942	[3467]	LOADK    	R129 := 0.000000
	1943	[3467]	LOADK    	R130 K159 ; R130 := "DbUpdateComplete"
	1944	[3467]	CALL     	R125 6 1 ; R125(R126,R127,R128,R129,R130)
	1945	[3468]	JMP      	1970 ; PC := 1970
	1946	[3470]	GETGLOBAL	R125 K8 ; R125 := _T
	1947	[3470]	SETTABLE 	R125 K162 K59 ; R125["RailjackReturnToDojo"] := false
	1948	[3471]	GETTABLE 	R125 R4 K151 ; R125 := R4["missionType"]
	1949	[3471]	EQ       	0 R125 K165 ; if R125 ~= 18.000000 then PC := 1955
	1950	[3471]	JMP      	1955 ; PC := 1955
	1951	[3471]	GETGLOBAL	R125 K8 ; R125 := _T
	1952	[3471]	GETTABLE 	R125 R125 K166 ; R125 := R125["raidIntermediateStage"]
	1953	[3471]	EQ       	1 R125 K167 ; if R125 == true then PC := 1958
	1954	[3471]	JMP      	1958 ; PC := 1958
	1955	[3471]	MOVE     	R125 R120 ; R125 := R120
	1956	[3471]	JMP      	1959 ; PC := 1959
	1957	[3471]	OP_LOADBOOL	R125 0 1 ; R125 := false; PC := 1958
	1958	[3471]	OP_LOADBOOL	R125 1 0 ; R125 := true
	1959	[3472]	GETGLOBAL	R126 K7 ; R126 := 0xbe190284
	1960	[3472]	SELF     	R126 R126 K160 ; R127 := R126; R126 := R126[0x0f495200]
	1961	[3472]	MOVE     	R128 R0 ; R128 := R0
	1962	[3472]	GETGLOBAL	R129 K161 ; R129 := 0xae91e43b
	1963	[3472]	LOADK    	R130 K159 ; R130 := "DbUpdateComplete"
	1964	[3472]	MOVE     	R131 R125 ; R131 := R125
	1965	[3472]	CALL     	R126 6 1 ; R126(R127,R128,R129,R130,R131)
	1966	[3474]	TEST     	R120 0 ; if not R120 then PC := 1970
	1967	[3474]	JMP      	1970 ; PC := 1970
	1968	[3475]	OP_LOADBOOL	R126 1 0 ; R126 := true
	1969	[3475]	SETGLOBALHASH	R126 K164 ; mShowDuringLoadingScreen := R126
	1970	[3480]	GETGLOBAL	R126 K51 ; R126 := mPlayerMissionInfo
	1971	[3480]	EQ       	1 R126 K147 ; if R126 == nil then PC := 1975
	1972	[3480]	JMP      	1975 ; PC := 1975
	1973	[3482]	GETUPVAL 	R126 U19 ; R126 := U19
	1974	[3482]	CALL     	R126 1 1 ; R126()
	1975	[3485]	RETURN   	R0 1 ; return 

function #95 <?:3487,3500> (42 instructions, 168 bytes at 00000160FCFB0D60)
0 params, 3 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[3488]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3488]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xb73d420f]
	3	[3488]	CALL     	R0 1 2 ; R0 := R0()
	4	[3488]	GETUPVAL 	R1 U0 ; R1 := U0
	5	[3488]	GETTABLE 	R1 R1 K1 ; R1 := R1["UI_MODE_IN_GAME"]
	6	[3488]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 9
	7	[3488]	JMP      	9 ; PC := 9
	8	[3489]	RETURN   	R0 1 ; return 
	9	[3492]	GETGLOBAL	R0 K2 ; R0 := mPendingTallies
	10	[3492]	LT       	0 K3 R0 ; if 0.000000 >= R0 then PC := 28
	11	[3492]	JMP      	28 ; PC := 28
	12	[3492]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	13	[3492]	GETGLOBAL	R1 K5 ; R1 := mXpTallySoundInst
	14	[3492]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[3492]	TEST     	R0 0 ; if not R0 then PC := 28
	16	[3492]	JMP      	28 ; PC := 28
	17	[3493]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	18	[3493]	GETGLOBAL	R1 K6 ; R1 := 0x1655cf1b
	19	[3493]	CALL     	R0 2 2 ; R0 := R0(R1)
	20	[3493]	TEST     	R0 1 ; if R0 then PC := 42
	21	[3493]	JMP      	42 ; PC := 42
	22	[3494]	GETUPVAL 	R0 U1 ; R0 := U1
	23	[3494]	GETTABLE 	R0 R0 K7 ; R0 := R0[0x659d451f]
	24	[3494]	GETGLOBAL	R1 K6 ; R1 := 0x1655cf1b
	25	[3494]	CALL     	R0 2 2 ; R0 := R0(R1)
	26	[3494]	SETGLOBALHASH	R0 K5 ; mXpTallySoundInst := R0
	27	[3495]	JMP      	42 ; PC := 42
	28	[3496]	GETGLOBAL	R0 K2 ; R0 := mPendingTallies
	29	[3496]	LE       	0 R0 K3 ; if R0 > 0.000000 then PC := 42
	30	[3496]	JMP      	42 ; PC := 42
	31	[3496]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	32	[3496]	GETGLOBAL	R1 K5 ; R1 := mXpTallySoundInst
	33	[3496]	CALL     	R0 2 2 ; R0 := R0(R1)
	34	[3496]	TEST     	R0 1 ; if R0 then PC := 42
	35	[3496]	JMP      	42 ; PC := 42
	36	[3497]	GETGLOBAL	R0 K5 ; R0 := mXpTallySoundInst
	37	[3497]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0x6cf1e476]
	38	[3497]	OP_LOADBOOL	R2 1 0 ; R2 := true
	39	[3497]	CALL     	R0 3 1 ; R0(R1,R2)
	40	[3498]	LOADNIL  	R0 R0 ; R0 := nil
	41	[3498]	SETGLOBALHASH	R0 K5 ; mXpTallySoundInst := R0
	42	[3500]	RETURN   	R0 1 ; return 

function #96 <?:3502,3508> (8 instructions, 32 bytes at 00000160FCFB1010)
2 params, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[3503]	GETGLOBAL	R2 K0 ; R2 := mPendingTallies
	2	[3503]	ADD      	R2 R2 R0 ; R2 := R2 + R0
	3	[3503]	SETGLOBALHASH	R2 K0 ; mPendingTallies := R2
	4	[3505]	TEST     	R1 1 ; if R1 then PC := 8
	5	[3505]	JMP      	8 ; PC := 8
	6	[3506]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[3506]	CALL     	R2 1 1 ; R2()
	8	[3508]	RETURN   	R0 1 ; return 

function #97 <?:3510,3515> (22 instructions, 88 bytes at 00000160FCFB1120)
3 params, 7 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[3511]	TEST     	R2 0 ; if not R2 then PC := 10
	2	[3511]	JMP      	10 ; PC := 10
	3	[3512]	LOADK    	R3 K0 ; R3 := "+"
	4	[3512]	GETUPVAL 	R4 U0 ; R4 := U0
	5	[3512]	GETTABLE 	R4 R4 K1 ; R4 := R4[0x1142c7a8]
	6	[3512]	MOVE     	R5 R1 ; R5 := R1
	7	[3512]	CALL     	R4 2 2 ; R4 := R4(R5)
	8	[3512]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	9	[3512]	RETURN   	R3 2 ; return R3 
	10	[3514]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	11	[3514]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x42b04007]
	12	[3514]	LOADK    	R5 K4 ; R5 := "<FOCUS>"
	13	[3514]	OP_LOADBOOL	R6 1 0 ; R6 := true
	14	[3514]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	15	[3514]	LOADK    	R4 K5 ; R4 := ""
	16	[3514]	GETUPVAL 	R5 U0 ; R5 := U0
	17	[3514]	GETTABLE 	R5 R5 K1 ; R5 := R5[0x1142c7a8]
	18	[3514]	MOVE     	R6 R1 ; R6 := R1
	19	[3514]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[3514]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	21	[3514]	RETURN   	R3 2 ; return R3 
	22	[3515]	RETURN   	R0 1 ; return 

function #98 <?:3517,3541> (39 instructions, 156 bytes at 00000160FCFB1300)
1 param, 4 slots, 0 upvalues, 0 locals, 42 constants, 0 functions
	1	[3518]	GETTABLE 	R1 R0 K0 ; R1 := R0["mProgressBar"]
	2	[3518]	SETTABLE 	R1 K1 K2 ; R1["mBgEdgeAlpha"] := 0.250000
	3	[3519]	GETTABLE 	R1 R0 K0 ; R1 := R0["mProgressBar"]
	4	[3519]	SETTABLE 	R1 K3 K2 ; R1["mBgInnerAlpha"] := 0.250000
	5	[3520]	GETTABLE 	R1 R0 K0 ; R1 := R0["mProgressBar"]
	6	[3520]	SETTABLE 	R1 K4 K5 ; R1["mFillEdgeAlpha"] := 0.000000
	7	[3521]	GETTABLE 	R1 R0 K0 ; R1 := R0["mProgressBar"]
	8	[3521]	SETTABLE 	R1 K6 K7 ; R1["mPadding"] := -5.000000
	9	[3522]	GETGLOBAL	R1 K9 ; R1 := mAffinityGrid
	10	[3522]	GETTABLE 	R1 R1 K10 ; R1 := R1["mRowSeparation"]
	11	[3522]	SUB      	R1 R1 K11 ; R1 := R1 - 10.000000
	12	[3522]	SUB      	R1 R1 K12 ; R1 := R1 - 5.000000
	13	[3522]	SETTABLE 	R0 K8 R1 ; R0["mIconSize"] := R1
	14	[3523]	SETTABLE 	R0 K13 K14 ; R0["mSkipResize"] := true
	15	[3524]	SETTABLE 	R0 K15 K14 ; R0["mToUpper"] := true
	16	[3525]	SETTABLE 	R0 K16 K2 ; R0["mBackerAlpha"] := 0.250000
	17	[3526]	SETTABLE 	R0 K17 K18 ; R0["mBackerIconAlpha"] := 0.100000
	18	[3527]	SETTABLE 	R0 K19 K20 ; R0["mBackerEdgeAlpha"] := 0.050000
	19	[3528]	SETTABLE 	R0 K21 K22 ; R0["mIconPaddingX"] := -4.000000
	20	[3529]	SETTABLE 	R0 K23 K22 ; R0["mIconPaddingY"] := -4.000000
	21	[3530]	SETTABLE 	R0 K24 K11 ; R0["mIconToTextPadding"] := 10.000000
	22	[3531]	SETTABLE 	R0 K25 K26 ; R0["mVerticalTextOffset"] := 0.130000
	23	[3532]	SETTABLE 	R0 K27 K14 ; R0["mExtendedProgressBar"] := true
	24	[3533]	SETTABLE 	R0 K28 K14 ; R0["mSeamlessProgressBar"] := true
	25	[3534]	SETTABLE 	R0 K29 K14 ; R0["mFlipIcon2"] := true
	26	[3535]	SETTABLE 	R0 K30 K31 ; R0["mShowIconBg2"] := false
	27	[3536]	GETGLOBAL	R1 K33 ; R1 := 0xfee8dbfd
	28	[3536]	SETTABLE 	R0 K32 R1 ; R0["mIconMaterial"] := R1
	29	[3537]	GETGLOBAL	R1 K35 ; R1 := 0xbacf3724
	30	[3537]	SETTABLE 	R0 K34 R1 ; R0["mTextMaterial"] := R1
	31	[3538]	GETGLOBAL	R1 K37 ; R1 := 0x2bbc1c3b
	32	[3538]	SETTABLE 	R0 K36 R1 ; R0["mRectMaterial"] := R1
	33	[3539]	SETTABLE 	R0 K38 K14 ; R0["mShowIconHighlight"] := true
	34	[3540]	SELF     	R1 R0 K39 ; R2 := R0; R1 := R0[0x8d77b2b2]
	35	[3540]	GETGLOBAL	R3 K9 ; R3 := mAffinityGrid
	36	[3540]	GETTABLE 	R3 R3 K40 ; R3 := R3["mColumnSeparation"]
	37	[3540]	SUB      	R3 R3 K41 ; R3 := R3 - 14.000000
	38	[3540]	CALL     	R1 3 1 ; R1(R2,R3)
	39	[3541]	RETURN   	R0 1 ; return 

function #99 <?:3543,3646> (140 instructions, 560 bytes at 00000160FCFB17A0)
1 param, 25 slots, 8 upvalues, 0 locals, 30 constants, 2 functions
	1	[3544]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[3545]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[3545]	JMP      	5 ; PC := 5
	4	[3546]	RETURN   	R0 1 ; return 
	5	[3549]	GETGLOBAL	R2 K2 ; R2 := _T
	6	[3549]	GETTABLE 	R2 R2 K3 ; R2 := R2["eomScreenMode"]
	7	[3549]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[3549]	GETTABLE 	R3 R3 K4 ; R3 := R3["QUICK_PREVIEW"]
	9	[3549]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 14
	10	[3549]	JMP      	14 ; PC := 14
	11	[3549]	GETTABLE 	R2 R0 K5 ; R2 := R0["ProgressInfo"]
	12	[3549]	EQ       	1 R2 K1 ; if R2 == nil then PC := 15
	13	[3549]	JMP      	15 ; PC := 15
	14	[3549]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[3549]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[3553]	SETTABLE 	R0 K6 K7 ; R0["InterpingFocusGain"] := true
	17	[3555]	LOADK    	R3 := 1000.000000
	18	[3557]	GETTABLE 	R4 R0 K8 ; R4 := R0["PolarityInfo"]
	19	[3558]	GETGLOBAL	R5 K9 ; R5 := mPlayerMissionInfo
	20	[3558]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0xf968443e]
	21	[3558]	GETTABLE 	R7 R4 K11 ; R7 := R4["PolarityType"]
	22	[3558]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	23	[3559]	GETGLOBAL	R6 K12 ; R6 := 0x5bced4c4
	24	[3559]	GETTABLE 	R6 R6 K13 ; R6 := R6[0x55f27c30]
	25	[3559]	MOD      	R7 R5 R3 ; R7 := R5 % R3
	26	[3559]	CALL     	R6 2 2 ; R6 := R6(R7)
	27	[3560]	GETGLOBAL	R7 K12 ; R7 := 0x5bced4c4
	28	[3560]	GETTABLE 	R7 R7 K13 ; R7 := R7[0x55f27c30]
	29	[3560]	DIV      	R8 R5 R3 ; R8 := R5 / R3
	30	[3560]	CALL     	R7 2 2 ; R7 := R7(R8)
	31	[3561]	GETTABLE 	R8 R0 K14 ; R8 := R0["FocusGained"]
	32	[3563]	GETUPVAL 	R9 U1 ; R9 := U1
	33	[3563]	MOVE     	R10 R4 ; R10 := R4
	34	[3563]	MOVE     	R11 R8 ; R11 := R8
	35	[3563]	OP_LOADBOOL	R12 1 0 ; R12 := true
	36	[3563]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	37	[3564]	GETUPVAL 	R10 U1 ; R10 := U1
	38	[3564]	MOVE     	R11 R4 ; R11 := R4
	39	[3564]	MOVE     	R12 R5 ; R12 := R5
	40	[3564]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	41	[3566]	GETUPVAL 	R11 U2 ; R11 := U2
	42	[3566]	GETTABLE 	R11 R11 K15 ; R11 := R11[0xae6791ba]
	43	[3566]	GETGLOBAL	R12 K16 ; R12 := 0xae91e43b
	44	[3566]	MOVE     	R13 R1 ; R13 := R1
	45	[3566]	GETTABLE 	R14 R0 K17 ; R14 := R0["Name"]
	46	[3566]	LOADNIL  	R15 R15 ; R15 := nil
	47	[3566]	MOVE     	R16 R9 ; R16 := R9
	48	[3566]	MOVE     	R17 R10 ; R17 := R10
	49	[3566]	CALL     	R11 7 2 ; R11 := R11(R12,R13,R14,R15,R16,R17)
	50	[3567]	GETUPVAL 	R12 U3 ; R12 := U3
	51	[3567]	MOVE     	R13 R11 ; R13 := R11
	52	[3567]	CALL     	R12 2 1 ; R12(R13)
	53	[3568]	SELF     	R12 R11 K18 ; R13 := R11; R12 := R11[0x71e9ac81]
	54	[3568]	CALL     	R12 2 1 ; R12(R13)
	55	[3569]	SELF     	R12 R11 K19 ; R13 := R11; R12 := R11[0x99dac1e9]
	56	[3569]	NEWTABLE 	R14 1 0 ; R14 := {}
	57	[3569]	MOVE     	R15 R6 ; R15 := R6
	58	[3569]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	59	[3569]	MOVE     	R15 R3 ; R15 := R3
	60	[3569]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	61	[3570]	SETTABLE 	R0 K5 R11 ; R0["ProgressInfo"] := R11
	62	[3572]	LOADK    	R12 := 0.000000
	63	[3574]	ADD      	R13 R5 R8 ; R13 := R5 + R8
	64	[3574]	SETTABLE 	R0 K20 R13 ; R0["TotalFocus"] := R13
	65	[3576]	TEST     	R2 0 ; if not R2 then PC := 117
	66	[3576]	JMP      	117 ; PC := 117
	67	[3577]	OP_LOADBOOL	R13 1 0 ; R13 := true
	68	[3612]	CLOSURE  	R14 0 ; R14 := closure(Function #1)
	69	[3612]	MOVE     	R0 R13 ; R0 := R13
	70	[3612]	GETUPVAL 	R0 U4 ; R0 := U4
	71	[3612]	MOVE     	R0 R8 ; R0 := R8
	72	[3612]	MOVE     	R0 R5 ; R0 := R5
	73	[3612]	MOVE     	R0 R3 ; R0 := R3
	74	[3612]	MOVE     	R0 R7 ; R0 := R7
	75	[3612]	MOVE     	R0 R12 ; R0 := R12
	76	[3612]	MOVE     	R0 R6 ; R0 := R6
	77	[3612]	MOVE     	R0 R11 ; R0 := R11
	78	[3612]	MOVE     	R0 R10 ; R0 := R10
	79	[3612]	GETUPVAL 	R0 U1 ; R0 := U1
	80	[3612]	MOVE     	R0 R4 ; R0 := R4
	81	[3612]	MOVE     	R0 R0 ; R0 := R0
	82	[3612]	MOVE     	R0 R9 ; R0 := R9
	83	[3614]	EQ       	1 R8 K21 ; if R8 == 0.000000 then PC := 114
	84	[3614]	JMP      	114 ; PC := 114
	85	[3615]	GETUPVAL 	R15 U5 ; R15 := U5
	86	[3615]	LOADK    	R16 := 1.000000
	87	[3615]	OP_LOADBOOL	R17 1 0 ; R17 := true
	88	[3615]	CALL     	R15 3 1 ; R15(R16,R17)
	89	[3618]	GETGLOBAL	R15 K22 ; R15 := 0x42dcc9f5
	90	[3618]	GETGLOBAL	R16 K23 ; R16 := PROGRESS_BAR_FILL_XP_PER_SECOND
	91	[3618]	DIV      	R16 R8 R16 ; R16 := R8 / R16
	92	[3618]	GETGLOBAL	R17 K24 ; R17 := PROGRESS_BAR_FILL_MIN_SECONDS
	93	[3618]	GETGLOBAL	R18 K25 ; R18 := PROGRESS_BAR_FILL_MAX_SECONDS
	94	[3618]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	95	[3619]	GETGLOBAL	R16 K26 ; R16 := 0x25312c9b
	96	[3619]	GETGLOBAL	R17 K16 ; R17 := 0xae91e43b
	97	[3619]	MOVE     	R18 R1 ; R18 := R1
	98	[3619]	LOADK    	R19 := 0.000000
	99	[3619]	NEWTABLE 	R20 1 0 ; R20 := {}
	100	[3619]	MOVE     	R21 R14 ; R21 := R14
	101	[3619]	SETLIST  	R20 1 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 1
	102	[3619]	NEWTABLE 	R21 1 0 ; R21 := {}
	103	[3619]	LOADK    	R22 := 1.000000
	104	[3619]	SETLIST  	R21 1 1 ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
	105	[3619]	MOVE     	R22 R15 ; R22 := R15
	106	[3619]	LOADK    	R23 := 2.000000
	107	[3629]	CLOSURE  	R24 1 ; R24 := closure(Function #2)
	108	[3629]	GETUPVAL 	R0 U5 ; R0 := U5
	109	[3629]	GETUPVAL 	R0 U6 ; R0 := U6
	110	[3629]	GETUPVAL 	R0 U7 ; R0 := U7
	111	[3629]	MOVE     	R0 R0 ; R0 := R0
	112	[3619]	CALL     	R16 9 1 ; R16(R17,R18,R19,R20,R21,R22,R23,R24)
	113	[3629]	JMP      	115 ; PC := 115
	114	[3631]	SETTABLE 	R0 K6 K28 ; R0["InterpingFocusGain"] := false
	115	[3632]	CLOSE    	R13 ; SAVE R13,...
	116	[3632]	JMP      	140 ; PC := 140
	117	[3634]	ADD      	R13 R5 R8 ; R13 := R5 + R8
	118	[3635]	GETGLOBAL	R14 K12 ; R14 := 0x5bced4c4
	119	[3635]	GETTABLE 	R14 R14 K13 ; R14 := R14[0x55f27c30]
	120	[3635]	DIV      	R15 R13 R3 ; R15 := R13 / R3
	121	[3635]	CALL     	R14 2 2 ; R14 := R14(R15)
	122	[3635]	LT       	0 R7 R14 ; if R7 >= R14 then PC := 126
	123	[3635]	JMP      	126 ; PC := 126
	124	[3637]	MOD      	R8 R13 R3 ; R8 := R13 % R3
	125	[3638]	LOADK    	R6 := 0.000000
	126	[3641]	SELF     	R14 R11 K19 ; R15 := R11; R14 := R11[0x99dac1e9]
	127	[3641]	NEWTABLE 	R16 2 0 ; R16 := {}
	128	[3641]	MOVE     	R17 R6 ; R17 := R6
	129	[3641]	MOVE     	R18 R8 ; R18 := R8
	130	[3641]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	131	[3641]	MOVE     	R17 R3 ; R17 := R3
	132	[3641]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	133	[3642]	SELF     	R14 R11 K29 ; R15 := R11; R14 := R11[0x9b71e815]
	134	[3642]	GETTABLE 	R16 R0 K17 ; R16 := R0["Name"]
	135	[3642]	LOADNIL  	R17 R17 ; R17 := nil
	136	[3642]	MOVE     	R18 R9 ; R18 := R9
	137	[3642]	MOVE     	R19 R10 ; R19 := R10
	138	[3642]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	139	[3644]	SETTABLE 	R0 K6 K28 ; R0["InterpingFocusGain"] := false
	140	[3646]	RETURN   	R0 1 ; return 

function #100 <?:3648,3954> (456 instructions, 1824 bytes at 00000160FCFB24E0)
1 param, 54 slots, 9 upvalues, 0 locals, 90 constants, 8 functions
	1	[3649]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[3650]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[3650]	JMP      	5 ; PC := 5
	4	[3651]	RETURN   	R0 1 ; return 
	5	[3654]	GETTABLE 	R2 R0 K2 ; R2 := R0["ItemType"]
	6	[3655]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	7	[3655]	GETTABLE 	R4 R0 K4 ; R4 := R0["Item"]
	8	[3655]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[3655]	TEST     	R3 0 ; if not R3 then PC := 15
	10	[3655]	JMP      	15 ; PC := 15
	11	[3656]	GETGLOBAL	R3 K5 ; R3 := 0xb009bbc6
	12	[3656]	GETTABLE 	R4 R0 K2 ; R4 := R0["ItemType"]
	13	[3656]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[3656]	SETTABLE 	R0 K4 R3 ; R0["Item"] := R3
	15	[3658]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	16	[3658]	MOVE     	R4 R2 ; R4 := R2
	17	[3658]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[3658]	TEST     	R3 0 ; if not R3 then PC := 21
	19	[3658]	JMP      	21 ; PC := 21
	20	[3659]	GETTABLE 	R2 R0 K4 ; R2 := R0["Item"]
	21	[3662]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	22	[3662]	GETTABLE 	R4 R0 K6 ; R4 := R0["Icon"]
	23	[3662]	CALL     	R3 2 2 ; R3 := R3(R4)
	24	[3662]	TEST     	R3 0 ; if not R3 then PC := 38
	25	[3662]	JMP      	38 ; PC := 38
	26	[3662]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	27	[3662]	GETTABLE 	R4 R0 K4 ; R4 := R0["Item"]
	28	[3662]	CALL     	R3 2 2 ; R3 := R3(R4)
	29	[3662]	TEST     	R3 1 ; if R3 then PC := 38
	30	[3662]	JMP      	38 ; PC := 38
	31	[3663]	GETUPVAL 	R3 U0 ; R3 := U0
	32	[3663]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x056dcf06]
	33	[3663]	GETTABLE 	R4 R0 K4 ; R4 := R0["Item"]
	34	[3663]	OP_LOADBOOL	R5 1 0 ; R5 := true
	35	[3663]	CALL     	R3 3 3 ; R3,R4 := R3(R4,R5)
	36	[3663]	SETTABLE 	R0 K7 R4 ; R0["Themed"] := R4
	37	[3663]	SETTABLE 	R0 K6 R3 ; R0["Icon"] := R3
	38	[3666]	GETTABLE 	R3 R0 K9 ; R3 := R0["LocTag"]
	39	[3667]	TEST     	R3 1 ; if R3 then PC := 52
	40	[3667]	JMP      	52 ; PC := 52
	41	[3668]	GETGLOBAL	R4 K3 ; R4 := 0x7b998233
	42	[3668]	GETTABLE 	R5 R0 K4 ; R5 := R0["Item"]
	43	[3668]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[3668]	TEST     	R4 1 ; if R4 then PC := 52
	45	[3668]	JMP      	52 ; PC := 52
	46	[3669]	GETGLOBAL	R4 K10 ; R4 := 0x64fb1586
	47	[3669]	GETTABLE 	R5 R0 K4 ; R5 := R0["Item"]
	48	[3669]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0xd3a9d01f]
	49	[3669]	CALL     	R5 2 0 ; R5,... := R5(R6)
	50	[3669]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	51	[3669]	MOVE     	R3 R4 ; R3 := R4
	52	[3672]	LOADK    	R4 K12 ; R4 := ""
	53	[3673]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	54	[3673]	MOVE     	R6 R3 ; R6 := R3
	55	[3673]	CALL     	R5 2 2 ; R5 := R5(R6)
	56	[3673]	TEST     	R5 1 ; if R5 then PC := 63
	57	[3673]	JMP      	63 ; PC := 63
	58	[3674]	GETGLOBAL	R5 K13 ; R5 := 0x6c97a788
	59	[3674]	GETTABLE 	R5 R5 K14 ; R5 := R5[0x834628e8]
	60	[3674]	MOVE     	R6 R3 ; R6 := R3
	61	[3674]	CALL     	R5 2 2 ; R5 := R5(R6)
	62	[3674]	MOVE     	R4 R5 ; R4 := R5
	63	[3677]	EQ       	0 R4 K12 ; if R4 ~= "" then PC := 71
	64	[3677]	JMP      	71 ; PC := 71
	65	[3678]	GETGLOBAL	R5 K15 ; R5 := 0xae91e43b
	66	[3678]	SELF     	R5 R5 K16 ; R6 := R5; R5 := R5[0x42b04007]
	67	[3678]	MOVE     	R7 R3 ; R7 := R3
	68	[3678]	OP_LOADBOOL	R8 1 0 ; R8 := true
	69	[3678]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	70	[3678]	MOVE     	R4 R5 ; R4 := R5
	71	[3681]	OP_LOADBOOL	R5 0 0 ; R5 := false
	72	[3682]	GETTABLE 	R6 R0 K17 ; R6 := R0["Slot"]
	73	[3682]	EQ       	0 R6 K18 ; if R6 ~= 0.000000 then PC := 92
	74	[3682]	JMP      	92 ; PC := 92
	75	[3683]	GETTABLE 	R6 R0 K19 ; R6 := R0["LoadoutType"]
	76	[3683]	EQ       	0 R6 K20 ; if R6 ~= 1.000000 then PC := 84
	77	[3683]	JMP      	84 ; PC := 84
	78	[3683]	GETGLOBAL	R6 K21 ; R6 := mPetName
	79	[3683]	EQ       	1 R6 K12 ; if R6 == "" then PC := 84
	80	[3683]	JMP      	84 ; PC := 84
	81	[3684]	GETGLOBAL	R4 K21 ; R4 := mPetName
	82	[3685]	OP_LOADBOOL	R5 1 0 ; R5 := true
	83	[3685]	JMP      	92 ; PC := 92
	84	[3686]	GETTABLE 	R6 R0 K19 ; R6 := R0["LoadoutType"]
	85	[3686]	EQ       	0 R6 K22 ; if R6 ~= 6.000000 then PC := 92
	86	[3686]	JMP      	92 ; PC := 92
	87	[3686]	GETGLOBAL	R6 K23 ; R6 := mKDriveName
	88	[3686]	EQ       	1 R6 K12 ; if R6 == "" then PC := 92
	89	[3686]	JMP      	92 ; PC := 92
	90	[3687]	GETGLOBAL	R4 K23 ; R4 := mKDriveName
	91	[3688]	OP_LOADBOOL	R5 1 0 ; R5 := true
	92	[3692]	TEST     	R5 0 ; if not R5 then PC := 106
	93	[3692]	JMP      	106 ; PC := 106
	94	[3692]	GETGLOBAL	R6 K24 ; R6 := 0x34291f5c
	95	[3692]	GETTABLE 	R6 R6 K25 ; R6 := R6[0xa7a2e381]
	96	[3692]	CALL     	R6 1 2 ; R6 := R6()
	97	[3692]	TEST     	R6 0 ; if not R6 then PC := 106
	98	[3692]	JMP      	106 ; PC := 106
	99	[3693]	GETGLOBAL	R6 K15 ; R6 := 0xae91e43b
	100	[3693]	SELF     	R6 R6 K26 ; R7 := R6; R6 := R6[0xe261aa96]
	101	[3693]	MOVE     	R8 R1 ; R8 := R1
	102	[3693]	LOADK    	R9 K27 ; R9 := "Name"
	103	[3693]	LOADK    	R10 := 41.000000
	104	[3693]	LOADK    	R11 K28 ; R11 := "Arial Unicode MS"
	105	[3693]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	106	[3697]	GETGLOBAL	R6 K29 ; R6 := 0x76ea806b
	107	[3697]	SELF     	R6 R6 K30 ; R7 := R6; R6 := R6[0x3f3ae64c]
	108	[3697]	LOADK    	R8 := 0.000000
	109	[3697]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	110	[3698]	SELF     	R7 R6 K31 ; R8 := R6; R7 := R6[0x80563238]
	111	[3698]	CALL     	R7 2 2 ; R7 := R7(R8)
	112	[3699]	SELF     	R8 R7 K32 ; R9 := R7; R8 := R7[0x62c81b76]
	113	[3699]	CALL     	R8 2 2 ; R8 := R8(R9)
	114	[3700]	SELF     	R9 R8 K33 ; R10 := R8; R9 := R8[0xb61abfd2]
	115	[3700]	GETTABLE 	R11 R0 K19 ; R11 := R0["LoadoutType"]
	116	[3700]	GETTABLE 	R12 R0 K17 ; R12 := R0["Slot"]
	117	[3700]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	118	[3702]	LOADNIL  	R10 R10 ; R10 := nil
	119	[3703]	GETGLOBAL	R11 K34 ; R11 := mAffinityGrid
	120	[3703]	GETTABLE 	R11 R11 K35 ; R11 := R11["ArchivedLoadout"]
	121	[3703]	EQ       	1 R11 K1 ; if R11 == nil then PC := 131
	122	[3703]	JMP      	131 ; PC := 131
	123	[3704]	GETGLOBAL	R11 K3 ; R11 := 0x7b998233
	124	[3704]	GETTABLE 	R12 R0 K36 ; R12 := R0["Expiry"]
	125	[3704]	CALL     	R11 2 2 ; R11 := R11(R12)
	126	[3704]	TEST     	R11 1 ; if R11 then PC := 154
	127	[3704]	JMP      	154 ; PC := 154
	128	[3705]	GETTABLE 	R11 R0 K36 ; R11 := R0["Expiry"]
	129	[3705]	GETTABLE 	R10 R11 K37 ; R10 := R11["sec"]
	130	[3706]	JMP      	154 ; PC := 154
	131	[3707]	EQ       	1 R9 K1 ; if R9 == nil then PC := 154
	132	[3707]	JMP      	154 ; PC := 154
	133	[3708]	SELF     	R11 R6 K31 ; R12 := R6; R11 := R6[0x80563238]
	134	[3708]	CALL     	R11 2 2 ; R11 := R11(R12)
	135	[3708]	SELF     	R11 R11 K38 ; R12 := R11; R11 := R11[0x25a6e75e]
	136	[3708]	CALL     	R11 2 2 ; R11 := R11(R12)
	137	[3708]	SELF     	R11 R11 K39 ; R12 := R11; R11 := R11[0xc70965fe]
	138	[3708]	GETTABLE 	R13 R9 K40 ; R13 := R9["mItemId"]
	139	[3708]	GETTABLE 	R13 R13 K41 ; R13 := R13["mId"]
	140	[3708]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	141	[3709]	EQ       	1 R11 K1 ; if R11 == nil then PC := 154
	142	[3709]	JMP      	154 ; PC := 154
	143	[3710]	GETTABLE 	R12 R11 K42 ; R12 := R11["mItemType"]
	144	[3715]	EQ       	1 R12 R2 ; if R12 == R2 then PC := 148
	145	[3715]	JMP      	148 ; PC := 148
	146	[3716]	LOADK    	R10 := 0.000000
	147	[3716]	JMP      	154 ; PC := 154
	148	[3717]	SELF     	R13 R11 K43 ; R14 := R11; R13 := R11[0xba568eef]
	149	[3717]	CALL     	R13 2 2 ; R13 := R13(R14)
	150	[3717]	TEST     	R13 0 ; if not R13 then PC := 154
	151	[3717]	JMP      	154 ; PC := 154
	152	[3718]	GETTABLE 	R13 R11 K44 ; R13 := R11["mExpiry"]
	153	[3718]	GETTABLE 	R10 R13 K37 ; R10 := R13["sec"]
	154	[3729]	GETGLOBAL	R13 K45 ; R13 := 0xa94df70b
	155	[3729]	SELF     	R13 R13 K46 ; R14 := R13; R13 := R13[0x757f0100]
	156	[3729]	MOVE     	R15 R2 ; R15 := R2
	157	[3729]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	158	[3730]	GETGLOBAL	R14 K45 ; R14 := 0xa94df70b
	159	[3730]	SELF     	R14 R14 K47 ; R15 := R14; R14 := R14[0x84fb4327]
	160	[3730]	MOVE     	R16 R2 ; R16 := R2
	161	[3730]	GETTABLE 	R17 R9 K48 ; R17 := R9["mPolarized"]
	162	[3730]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	163	[3731]	GETGLOBAL	R15 K49 ; R15 := 0x5bced4c4
	164	[3731]	GETTABLE 	R15 R15 K50 ; R15 := R15[0xac1b386a]
	165	[3731]	MOVE     	R16 R14 ; R16 := R14
	166	[3731]	GETUPVAL 	R17 U1 ; R17 := U1
	167	[3731]	GETTABLE 	R18 R0 K51 ; R18 := R0["StartXp"]
	168	[3731]	MOVE     	R19 R2 ; R19 := R2
	169	[3731]	CALL     	R17 3 0 ; R17,... := R17(R18,R19)
	170	[3731]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	171	[3732]	EQ       	1 R15 R14 ; if R15 == R14 then PC := 180
	172	[3732]	JMP      	180 ; PC := 180
	173	[3732]	GETTABLE 	R16 R0 K52 ; R16 := R0["FocusXp"]
	174	[3732]	EQ       	1 R16 K1 ; if R16 == nil then PC := 180
	175	[3732]	JMP      	180 ; PC := 180
	176	[3732]	GETTABLE 	R16 R0 K52 ; R16 := R0["FocusXp"]
	177	[3732]	EQ       	1 R16 K18 ; if R16 == 0.000000 then PC := 180
	178	[3732]	JMP      	180 ; PC := 180
	179	[3735]	MOVE     	R15 R14 ; R15 := R14
	180	[3759]	CLOSURE  	R16 0 ; R16 := closure(Function #1)
	181	[3759]	MOVE     	R0 R10 ; R0 := R10
	182	[3759]	GETUPVAL 	R0 U2 ; R0 := U2
	183	[3759]	MOVE     	R0 R13 ; R0 := R13
	184	[3761]	GETGLOBAL	R17 K53 ; R17 := _T
	185	[3761]	GETTABLE 	R17 R17 K54 ; R17 := R17["eomScreenMode"]
	186	[3761]	GETUPVAL 	R18 U3 ; R18 := U3
	187	[3761]	GETTABLE 	R18 R18 K55 ; R18 := R18["QUICK_PREVIEW"]
	188	[3761]	EQ       	1 R17 R18 ; if R17 == R18 then PC := 193
	189	[3761]	JMP      	193 ; PC := 193
	190	[3761]	GETTABLE 	R17 R0 K56 ; R17 := R0["ProgressInfo"]
	191	[3761]	EQ       	1 R17 K1 ; if R17 == nil then PC := 194
	192	[3761]	JMP      	194 ; PC := 194
	193	[3761]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 194
	194	[3761]	OP_LOADBOOL	R17 1 0 ; R17 := true
	195	[3764]	GETGLOBAL	R18 K45 ; R18 := 0xa94df70b
	196	[3764]	SELF     	R18 R18 K57 ; R19 := R18; R18 := R18[0x54c107f9]
	197	[3764]	GETTABLE 	R20 R0 K51 ; R20 := R0["StartXp"]
	198	[3764]	MOVE     	R21 R2 ; R21 := R2
	199	[3764]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	200	[3765]	GETGLOBAL	R19 K45 ; R19 := 0xa94df70b
	201	[3765]	SELF     	R19 R19 K58 ; R20 := R19; R19 := R19[0x4d058675]
	202	[3765]	GETTABLE 	R21 R0 K51 ; R21 := R0["StartXp"]
	203	[3765]	MOVE     	R22 R2 ; R22 := R2
	204	[3765]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	205	[3766]	GETUPVAL 	R20 U4 ; R20 := U4
	206	[3766]	GETTABLE 	R20 R20 K59 ; R20 := R20[0x06d055f9]
	207	[3766]	EQ       	1 R19 K18 ; if R19 == 0.000000 then PC := 210
	208	[3766]	JMP      	210 ; PC := 210
	209	[3766]	OP_LOADBOOL	R21 0 1 ; R21 := false; PC := 210
	210	[3766]	OP_LOADBOOL	R21 1 0 ; R21 := true
	211	[3766]	GETTABLE 	R22 R0 K51 ; R22 := R0["StartXp"]
	212	[3766]	MOVE     	R23 R19 ; R23 := R19
	213	[3766]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	214	[3766]	SUB      	R20 R20 R18 ; R20 := R20 - R18
	215	[3767]	GETGLOBAL	R21 K60 ; R21 := 0x7f5022cf
	216	[3767]	GETTABLE 	R21 R21 K61 ; R21 := R21[0x3f3e4d12]
	217	[3767]	MOVE     	R22 R4 ; R22 := R4
	218	[3767]	CALL     	R21 2 2 ; R21 := R21(R22)
	219	[3769]	GETGLOBAL	R22 K15 ; R22 := 0xae91e43b
	220	[3769]	SELF     	R22 R22 K62 ; R23 := R22; R22 := R22[0x20b98db3]
	221	[3769]	MOVE     	R24 R1 ; R24 := R1
	222	[3769]	LOADK    	R25 K63 ; R25 := ".Ratio.Label.text"
	223	[3769]	CONCAT   	R24 R24 R25 ; R24 := R24 .. R25
	224	[3769]	LOADK    	R25 K64 ; R25 := "/Lotus/Language/Menu/EndOfMatch_XP"
	225	[3769]	NEWTABLE 	R26 0 1 ; R26 := {}
	226	[3769]	GETUPVAL 	R27 U4 ; R27 := U4
	227	[3769]	GETTABLE 	R27 R27 K66 ; R27 := R27[0x1142c7a8]
	228	[3769]	GETTABLE 	R28 R0 K67 ; R28 := R0["XpGain"]
	229	[3769]	CALL     	R27 2 2 ; R27 := R27(R28)
	230	[3769]	SETTABLE 	R26 K65 R27 ; R26["XP"] := R27
	231	[3769]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	232	[3770]	GETGLOBAL	R22 K15 ; R22 := 0xae91e43b
	233	[3770]	SELF     	R22 R22 K68 ; R23 := R22; R22 := R22[0x91a24e4b]
	234	[3770]	MOVE     	R24 R1 ; R24 := R1
	235	[3770]	LOADK    	R25 K69 ; R25 := ".Ratio.Label"
	236	[3770]	CONCAT   	R24 R24 R25 ; R24 := R24 .. R25
	237	[3770]	LOADK    	R25 := 33.000000
	238	[3770]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	239	[3772]	GETGLOBAL	R23 K15 ; R23 := 0xae91e43b
	240	[3772]	SELF     	R23 R23 K62 ; R24 := R23; R23 := R23[0x20b98db3]
	241	[3772]	MOVE     	R25 R1 ; R25 := R1
	242	[3772]	LOADK    	R26 K63 ; R26 := ".Ratio.Label.text"
	243	[3772]	CONCAT   	R25 R25 R26 ; R25 := R25 .. R26
	244	[3772]	LOADK    	R26 K70 ; R26 := "/Lotus/Language/Menu/EndOfMatch_Bonus"
	245	[3772]	NEWTABLE 	R27 0 1 ; R27 := {}
	246	[3772]	GETUPVAL 	R28 U4 ; R28 := U4
	247	[3772]	GETTABLE 	R28 R28 K66 ; R28 := R28[0x1142c7a8]
	248	[3772]	GETTABLE 	R29 R0 K71 ; R29 := R0["XpBonus"]
	249	[3772]	CALL     	R28 2 2 ; R28 := R28(R29)
	250	[3772]	SETTABLE 	R27 K65 R28 ; R27["XP"] := R28
	251	[3772]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	252	[3773]	GETGLOBAL	R23 K15 ; R23 := 0xae91e43b
	253	[3773]	SELF     	R23 R23 K68 ; R24 := R23; R23 := R23[0x91a24e4b]
	254	[3773]	MOVE     	R25 R1 ; R25 := R1
	255	[3773]	LOADK    	R26 K69 ; R26 := ".Ratio.Label"
	256	[3773]	CONCAT   	R25 R25 R26 ; R25 := R25 .. R26
	257	[3773]	LOADK    	R26 := 33.000000
	258	[3773]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	259	[3775]	GETGLOBAL	R24 K72 ; R24 := 0x603636ad
	260	[3775]	LOADK    	R25 K64 ; R25 := "/Lotus/Language/Menu/EndOfMatch_XP"
	261	[3775]	NEWTABLE 	R26 0 1 ; R26 := {}
	262	[3775]	GETUPVAL 	R27 U4 ; R27 := U4
	263	[3775]	GETTABLE 	R27 R27 K66 ; R27 := R27[0x1142c7a8]
	264	[3775]	LOADK    	R28 := 0.000000
	265	[3775]	CALL     	R27 2 2 ; R27 := R27(R28)
	266	[3775]	SETTABLE 	R26 K65 R27 ; R26["XP"] := R27
	267	[3775]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	268	[3776]	GETUPVAL 	R25 U5 ; R25 := U5
	269	[3776]	GETTABLE 	R25 R25 K73 ; R25 := R25[0xae6791ba]
	270	[3776]	GETGLOBAL	R26 K15 ; R26 := 0xae91e43b
	271	[3776]	MOVE     	R27 R1 ; R27 := R1
	272	[3776]	MOVE     	R28 R21 ; R28 := R21
	273	[3776]	LOADK    	R29 K74 ; R29 := "\r"
	274	[3776]	MOVE     	R30 R16 ; R30 := R16
	275	[3776]	MOVE     	R31 R15 ; R31 := R15
	276	[3776]	CALL     	R30 2 2 ; R30 := R30(R31)
	277	[3776]	CONCAT   	R28 R28 R30 ; R28 := R28 .. R29 .. R30
	278	[3776]	MOVE     	R29 R24 ; R29 := R24
	279	[3776]	LOADNIL  	R30 R30 ; R30 := nil
	280	[3776]	LOADK    	R31 K75 ; R31 := " "
	281	[3776]	CALL     	R25 7 2 ; R25 := R25(R26,R27,R28,R29,R30,R31)
	282	[3777]	GETUPVAL 	R26 U6 ; R26 := U6
	283	[3777]	MOVE     	R27 R25 ; R27 := R25
	284	[3777]	CALL     	R26 2 1 ; R26(R27)
	285	[3778]	SETTABLE 	R25 K76 R22 ; R25["mBarLeftTextWidth"] := R22
	286	[3779]	SETTABLE 	R25 K77 R23 ; R25["mBarRightTextWidth"] := R23
	287	[3780]	SETTABLE 	R25 K78 K79 ; R25["mToUpper"] := false
	288	[3781]	SELF     	R26 R25 K80 ; R27 := R25; R26 := R25[0x99dac1e9]
	289	[3781]	NEWTABLE 	R28 1 0 ; R28 := {}
	290	[3781]	GETTABLE 	R29 R0 K51 ; R29 := R0["StartXp"]
	291	[3781]	SUB      	R29 R29 R18 ; R29 := R29 - R18
	292	[3781]	SETLIST  	R28 1 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 1
	293	[3781]	MOVE     	R29 R20 ; R29 := R20
	294	[3781]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	295	[3782]	SELF     	R26 R25 K81 ; R27 := R25; R26 := R25[0x71e9ac81]
	296	[3782]	CALL     	R26 2 1 ; R26(R27)
	297	[3783]	SETTABLE 	R0 K56 R25 ; R0["ProgressInfo"] := R25
	298	[3785]	EQ       	1 R10 K1 ; if R10 == nil then PC := 301
	299	[3785]	JMP      	301 ; PC := 301
	300	[3786]	RETURN   	R0 1 ; return 
	301	[3792]	CLOSURE  	R26 1 ; R26 := closure(Function #2)
	302	[3792]	MOVE     	R0 R25 ; R0 := R25
	303	[3792]	MOVE     	R0 R21 ; R0 := R21
	304	[3792]	MOVE     	R0 R16 ; R0 := R16
	305	[3792]	MOVE     	R0 R15 ; R0 := R15
	306	[3804]	CLOSURE  	R27 2 ; R27 := closure(Function #3)
	307	[3804]	MOVE     	R0 R26 ; R0 := R26
	308	[3804]	MOVE     	R0 R10 ; R0 := R10
	309	[3804]	MOVE     	R0 R27 ; R0 := R27
	310	[3806]	GETGLOBAL	R28 K3 ; R28 := 0x7b998233
	311	[3806]	GETGLOBAL	R29 K82 ; R29 := mTimerMgr
	312	[3806]	CALL     	R28 2 2 ; R28 := R28(R29)
	313	[3806]	TEST     	R28 1 ; if R28 then PC := 319
	314	[3806]	JMP      	319 ; PC := 319
	315	[3806]	TEST     	R10 0 ; if not R10 then PC := 319
	316	[3806]	JMP      	319 ; PC := 319
	317	[3807]	MOVE     	R28 R27 ; R28 := R27
	318	[3807]	CALL     	R28 1 1 ; R28()
	319	[3810]	GETTABLE 	R28 R0 K51 ; R28 := R0["StartXp"]
	320	[3810]	SUB      	R28 R28 R18 ; R28 := R28 - R18
	321	[3811]	LOADK    	R29 := 0.000000
	322	[3812]	LOADK    	R30 := 0.000000
	323	[3813]	LOADK    	R31 := 0.000000
	324	[3814]	OP_LOADBOOL	R32 0 0 ; R32 := false
	325	[3815]	MOVE     	R33 R24 ; R33 := R24
	326	[3816]	LOADK    	R34 K75 ; R34 := " "
	327	[3818]	LOADK    	R35 := 0.000000
	328	[3835]	CLOSURE  	R36 3 ; R36 := closure(Function #4)
	329	[3835]	MOVE     	R0 R15 ; R0 := R15
	330	[3835]	MOVE     	R0 R14 ; R0 := R14
	331	[3835]	GETUPVAL 	R0 U1 ; R0 := U1
	332	[3835]	MOVE     	R0 R2 ; R0 := R2
	333	[3835]	MOVE     	R0 R18 ; R0 := R18
	334	[3835]	MOVE     	R0 R19 ; R0 := R19
	335	[3835]	MOVE     	R0 R20 ; R0 := R20
	336	[3835]	MOVE     	R0 R28 ; R0 := R28
	337	[3835]	MOVE     	R0 R32 ; R0 := R32
	338	[3835]	MOVE     	R0 R29 ; R0 := R29
	339	[3835]	MOVE     	R0 R31 ; R0 := R31
	340	[3835]	MOVE     	R0 R35 ; R0 := R35
	341	[3835]	MOVE     	R0 R30 ; R0 := R30
	342	[3857]	CLOSURE  	R37 4 ; R37 := closure(Function #5)
	343	[3857]	MOVE     	R0 R33 ; R0 := R33
	344	[3857]	MOVE     	R0 R24 ; R0 := R24
	345	[3857]	MOVE     	R0 R34 ; R0 := R34
	346	[3857]	MOVE     	R0 R32 ; R0 := R32
	347	[3857]	MOVE     	R0 R31 ; R0 := R31
	348	[3857]	MOVE     	R0 R25 ; R0 := R25
	349	[3857]	MOVE     	R0 R28 ; R0 := R28
	350	[3857]	MOVE     	R0 R29 ; R0 := R29
	351	[3857]	MOVE     	R0 R20 ; R0 := R20
	352	[3857]	GETUPVAL 	R0 U4 ; R0 := U4
	353	[3857]	MOVE     	R0 R30 ; R0 := R30
	354	[3857]	MOVE     	R0 R0 ; R0 := R0
	355	[3857]	MOVE     	R0 R21 ; R0 := R21
	356	[3857]	MOVE     	R0 R16 ; R0 := R16
	357	[3859]	TEST     	R17 0 ; if not R17 then PC := 416
	358	[3859]	JMP      	416 ; PC := 416
	359	[3862]	GETTABLE 	R38 R0 K67 ; R38 := R0["XpGain"]
	360	[3863]	GETTABLE 	R39 R0 K51 ; R39 := R0["StartXp"]
	361	[3865]	OP_LOADBOOL	R40 1 0 ; R40 := true
	362	[3906]	CLOSURE  	R41 5 ; R41 := closure(Function #6)
	363	[3906]	MOVE     	R0 R40 ; R0 := R40
	364	[3906]	GETUPVAL 	R0 U7 ; R0 := U7
	365	[3906]	MOVE     	R0 R38 ; R0 := R38
	366	[3906]	MOVE     	R0 R39 ; R0 := R39
	367	[3906]	MOVE     	R0 R18 ; R0 := R18
	368	[3906]	MOVE     	R0 R19 ; R0 := R19
	369	[3906]	MOVE     	R0 R36 ; R0 := R36
	370	[3906]	MOVE     	R0 R37 ; R0 := R37
	371	[3906]	MOVE     	R0 R15 ; R0 := R15
	372	[3916]	CLOSURE  	R42 6 ; R42 := closure(Function #7)
	373	[3916]	GETUPVAL 	R0 U8 ; R0 := U8
	374	[3916]	GETUPVAL 	R0 U2 ; R0 := U2
	375	[3916]	GETUPVAL 	R0 U4 ; R0 := U4
	376	[3932]	CLOSURE  	R43 7 ; R43 := closure(Function #8)
	377	[3932]	MOVE     	R0 R38 ; R0 := R38
	378	[3932]	MOVE     	R0 R0 ; R0 := R0
	379	[3932]	MOVE     	R0 R39 ; R0 := R39
	380	[3932]	MOVE     	R0 R32 ; R0 := R32
	381	[3932]	MOVE     	R0 R29 ; R0 := R29
	382	[3932]	MOVE     	R0 R31 ; R0 := R31
	383	[3932]	MOVE     	R0 R15 ; R0 := R15
	384	[3932]	MOVE     	R0 R14 ; R0 := R14
	385	[3932]	MOVE     	R0 R1 ; R0 := R1
	386	[3932]	MOVE     	R0 R41 ; R0 := R41
	387	[3932]	MOVE     	R0 R42 ; R0 := R42
	388	[3934]	EQ       	1 R15 R14 ; if R15 == R14 then PC := 414
	389	[3934]	JMP      	414 ; PC := 414
	390	[3935]	GETUPVAL 	R44 U8 ; R44 := U8
	391	[3935]	LOADK    	R45 := 1.000000
	392	[3935]	OP_LOADBOOL	R46 1 0 ; R46 := true
	393	[3935]	CALL     	R44 3 1 ; R44(R45,R46)
	394	[3938]	GETGLOBAL	R44 K83 ; R44 := 0x42dcc9f5
	395	[3938]	GETGLOBAL	R45 K84 ; R45 := PROGRESS_BAR_FILL_XP_PER_SECOND
	396	[3938]	DIV      	R45 R38 R45 ; R45 := R38 / R45
	397	[3938]	GETGLOBAL	R46 K85 ; R46 := PROGRESS_BAR_FILL_MIN_SECONDS
	398	[3938]	GETGLOBAL	R47 K86 ; R47 := PROGRESS_BAR_FILL_MAX_SECONDS
	399	[3938]	CALL     	R44 4 2 ; R44 := R44(R45,R46,R47)
	400	[3939]	GETGLOBAL	R45 K87 ; R45 := 0x25312c9b
	401	[3939]	GETGLOBAL	R46 K15 ; R46 := 0xae91e43b
	402	[3939]	MOVE     	R47 R1 ; R47 := R1
	403	[3939]	LOADK    	R48 := 0.000000
	404	[3939]	NEWTABLE 	R49 1 0 ; R49 := {}
	405	[3939]	MOVE     	R50 R41 ; R50 := R41
	406	[3939]	SETLIST  	R49 1 1 ; R49[(1-1)*FPF+i] := R(49+i), 1 <= i <= 1
	407	[3939]	NEWTABLE 	R50 1 0 ; R50 := {}
	408	[3939]	LOADK    	R51 := 1.000000
	409	[3939]	SETLIST  	R50 1 1 ; R50[(1-1)*FPF+i] := R(50+i), 1 <= i <= 1
	410	[3939]	MOVE     	R51 R44 ; R51 := R44
	411	[3939]	LOADK    	R52 := 1.000000
	412	[3939]	MOVE     	R53 R43 ; R53 := R43
	413	[3939]	CALL     	R45 9 1 ; R45(R46,R47,R48,R49,R50,R51,R52,R53)
	414	[3940]	CLOSE    	R38 ; SAVE R38,...
	415	[3940]	JMP      	456 ; PC := 456
	416	[3942]	GETTABLE 	R38 R0 K51 ; R38 := R0["StartXp"]
	417	[3942]	GETTABLE 	R39 R0 K67 ; R39 := R0["XpGain"]
	418	[3942]	ADD      	R38 R38 R39 ; R38 := R38 + R39
	419	[3942]	GETTABLE 	R39 R0 K71 ; R39 := R0["XpBonus"]
	420	[3942]	ADD      	R38 R38 R39 ; R38 := R38 + R39
	421	[3943]	LE       	0 R19 R38 ; if R19 > R38 then PC := 426
	422	[3943]	JMP      	426 ; PC := 426
	423	[3945]	MOVE     	R39 R36 ; R39 := R36
	424	[3945]	MOVE     	R40 R38 ; R40 := R38
	425	[3945]	CALL     	R39 2 1 ; R39(R40)
	426	[3948]	GETGLOBAL	R39 K49 ; R39 := 0x5bced4c4
	427	[3948]	GETTABLE 	R39 R39 K89 ; R39 := R39[0xb62ecfe0]
	428	[3948]	LOADK    	R40 := 0.000000
	429	[3948]	GETTABLE 	R41 R0 K51 ; R41 := R0["StartXp"]
	430	[3948]	SUB      	R41 R41 R18 ; R41 := R41 - R18
	431	[3948]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	432	[3948]	MOVE     	R28 R39 ; R28 := R39
	433	[3949]	GETGLOBAL	R39 K83 ; R39 := 0x42dcc9f5
	434	[3949]	GETTABLE 	R40 R0 K51 ; R40 := R0["StartXp"]
	435	[3949]	GETTABLE 	R41 R0 K67 ; R41 := R0["XpGain"]
	436	[3949]	ADD      	R40 R40 R41 ; R40 := R40 + R41
	437	[3949]	SUB      	R40 R40 R18 ; R40 := R40 - R18
	438	[3949]	LOADK    	R41 := 0.000000
	439	[3949]	GETTABLE 	R42 R0 K67 ; R42 := R0["XpGain"]
	440	[3949]	CALL     	R39 4 2 ; R39 := R39(R40,R41,R42)
	441	[3949]	MOVE     	R29 R39 ; R29 := R39
	442	[3950]	GETGLOBAL	R39 K83 ; R39 := 0x42dcc9f5
	443	[3950]	GETTABLE 	R40 R0 K51 ; R40 := R0["StartXp"]
	444	[3950]	SUB      	R40 R18 R40 ; R40 := R18 - R40
	445	[3950]	GETTABLE 	R41 R0 K67 ; R41 := R0["XpGain"]
	446	[3950]	SUB      	R40 R40 R41 ; R40 := R40 - R41
	447	[3950]	LOADK    	R41 := 0.000000
	448	[3950]	GETTABLE 	R42 R0 K71 ; R42 := R0["XpBonus"]
	449	[3950]	CALL     	R39 4 2 ; R39 := R39(R40,R41,R42)
	450	[3950]	MOVE     	R30 R39 ; R30 := R39
	451	[3951]	OP_LOADBOOL	R32 1 0 ; R32 := true
	452	[3952]	MOVE     	R39 R37 ; R39 := R37
	453	[3952]	GETTABLE 	R40 R0 K71 ; R40 := R0["XpBonus"]
	454	[3952]	MOVE     	R41 R15 ; R41 := R15
	455	[3952]	CALL     	R39 3 1 ; R39(R40,R41)
	456	[3954]	RETURN   	R0 1 ; return 

function #101 <?:3956,4076> (245 instructions, 980 bytes at 0000016080236620)
1 param, 29 slots, 6 upvalues, 0 locals, 54 constants, 1 function
	1	[3957]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[3958]	LOADK    	R2 := 0.000000
	3	[3959]	GETGLOBAL	R3 K2 ; R3 := 0xed96efe7
	4	[3959]	SETTABLE 	R0 K1 R3 ; R0["Icon"] := R3
	5	[3960]	SETTABLE 	R0 K3 K4 ; R0["Themed"] := true
	6	[3962]	GETGLOBAL	R3 K5 ; R3 := 0x603636ad
	7	[3962]	LOADK    	R4 K6 ; R4 := "/Lotus/Language/Intrinsics/Intrinsics"
	8	[3962]	OP_LOADBOOL	R5 1 0 ; R5 := true
	9	[3962]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	10	[3963]	GETGLOBAL	R4 K7 ; R4 := 0xae91e43b
	11	[3963]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xe261aa96]
	12	[3963]	MOVE     	R6 R1 ; R6 := R1
	13	[3963]	LOADK    	R7 K9 ; R7 := "Name"
	14	[3963]	LOADK    	R8 := 38.000000
	15	[3963]	LOADK    	R9 K10 ; R9 := "bottom"
	16	[3963]	CALL     	R4 6 1 ; R4(R5,R6,R7,R8,R9)
	17	[3964]	GETUPVAL 	R4 U0 ; R4 := U0
	18	[3964]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x9f8ece2b]
	19	[3964]	GETGLOBAL	R5 K7 ; R5 := 0xae91e43b
	20	[3964]	MOVE     	R6 R1 ; R6 := R1
	21	[3964]	LOADK    	R7 K12 ; R7 := ".Name"
	22	[3964]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	23	[3964]	LOADK    	R7 := 2.000000
	24	[3964]	GETGLOBAL	R8 K13 ; R8 := 0x7f5022cf
	25	[3964]	GETTABLE 	R8 R8 K14 ; R8 := R8[0x3f3e4d12]
	26	[3964]	MOVE     	R9 R3 ; R9 := R3
	27	[3964]	CALL     	R8 2 2 ; R8 := R8(R9)
	28	[3964]	LOADK    	R9 K15 ; R9 := "..."
	29	[3964]	CALL     	R4 6 1 ; R4(R5,R6,R7,R8,R9)
	30	[3966]	LOADK    	R4 := 1000.000000
	31	[3967]	GETGLOBAL	R5 K16 ; R5 := mGameData
	32	[3967]	SELF     	R5 R5 K17 ; R6 := R5; R5 := R5[0xff9dbdb9]
	33	[3967]	LOADK    	R7 := 0.000000
	34	[3967]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	35	[3969]	GETGLOBAL	R6 K19 ; R6 := mPlayerMissionInfo
	36	[3969]	EQ       	1 R6 K20 ; if R6 == nil then PC := 48
	37	[3969]	JMP      	48 ; PC := 48
	38	[3969]	GETGLOBAL	R6 K19 ; R6 := mPlayerMissionInfo
	39	[3969]	GETTABLE 	R6 R6 K21 ; R6 := R6["mStartIntrinsicPoints"]
	40	[3969]	LT       	0 K22 R6 ; if 0.000000 >= R6 then PC := 48
	41	[3969]	JMP      	48 ; PC := 48
	42	[3969]	GETGLOBAL	R6 K19 ; R6 := mPlayerMissionInfo
	43	[3969]	GETTABLE 	R6 R6 K21 ; R6 := R6["mStartIntrinsicPoints"]
	44	[3969]	LT       	0 R6 R5 ; if R6 >= R5 then PC := 48
	45	[3969]	JMP      	48 ; PC := 48
	46	[3970]	GETGLOBAL	R6 K19 ; R6 := mPlayerMissionInfo
	47	[3970]	GETTABLE 	R5 R6 K21 ; R5 := R6["mStartIntrinsicPoints"]
	48	[3973]	MOD      	R6 R5 R4 ; R6 := R5 % R4
	49	[3974]	GETGLOBAL	R7 K23 ; R7 := 0x5bced4c4
	50	[3974]	GETTABLE 	R7 R7 K24 ; R7 := R7[0x55f27c30]
	51	[3974]	DIV      	R8 R5 R4 ; R8 := R5 / R4
	52	[3974]	CALL     	R7 2 2 ; R7 := R7(R8)
	53	[3975]	MOVE     	R8 R6 ; R8 := R6
	54	[3976]	MOVE     	R9 R7 ; R9 := R7
	55	[3978]	GETGLOBAL	R10 K13 ; R10 := 0x7f5022cf
	56	[3978]	GETTABLE 	R10 R10 K14 ; R10 := R10[0x3f3e4d12]
	57	[3978]	GETGLOBAL	R11 K5 ; R11 := 0x603636ad
	58	[3978]	LOADK    	R12 K25 ; R12 := "/Lotus/Language/Menu/Profile_Points"
	59	[3978]	OP_LOADBOOL	R13 1 0 ; R13 := true
	60	[3978]	CALL     	R11 3 0 ; R11,... := R11(R12,R13)
	61	[3978]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	62	[3979]	GETGLOBAL	R11 K7 ; R11 := 0xae91e43b
	63	[3979]	SELF     	R11 R11 K8 ; R12 := R11; R11 := R11[0xe261aa96]
	64	[3979]	MOVE     	R13 R1 ; R13 := R1
	65	[3979]	LOADK    	R14 K26 ; R14 := "Rank"
	66	[3979]	LOADK    	R15 := 29.000000
	67	[3979]	MOVE     	R16 R7 ; R16 := R7
	68	[3979]	LOADK    	R17 K27 ; R17 := " "
	69	[3979]	MOVE     	R18 R10 ; R18 := R10
	70	[3979]	CONCAT   	R16 R16 R18 ; R16 := R16 .. R17 .. R18
	71	[3979]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	72	[3981]	GETGLOBAL	R11 K7 ; R11 := 0xae91e43b
	73	[3981]	SELF     	R11 R11 K8 ; R12 := R11; R11 := R11[0xe261aa96]
	74	[3981]	MOVE     	R13 R1 ; R13 := R1
	75	[3981]	LOADK    	R14 K28 ; R14 := "XP"
	76	[3981]	LOADK    	R15 := 29.000000
	77	[3981]	LOADK    	R16 K29 ; R16 := ""
	78	[3981]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	79	[3982]	GETGLOBAL	R11 K7 ; R11 := 0xae91e43b
	80	[3982]	SELF     	R11 R11 K8 ; R12 := R11; R11 := R11[0xe261aa96]
	81	[3982]	MOVE     	R13 R1 ; R13 := R1
	82	[3982]	LOADK    	R14 K30 ; R14 := "BonusXP"
	83	[3982]	LOADK    	R15 := 29.000000
	84	[3982]	LOADK    	R16 K29 ; R16 := ""
	85	[3982]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	86	[3983]	GETGLOBAL	R11 K7 ; R11 := 0xae91e43b
	87	[3983]	SELF     	R11 R11 K31 ; R12 := R11; R11 := R11[0xf64b7262]
	88	[3983]	MOVE     	R13 R1 ; R13 := R1
	89	[3983]	LOADK    	R14 K32 ; R14 := "XPGain"
	90	[3983]	LOADK    	R15 := 12.000000
	91	[3983]	LOADK    	R16 K33 ; R16 := 0.100000
	92	[3983]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	93	[3984]	GETGLOBAL	R11 K7 ; R11 := 0xae91e43b
	94	[3984]	SELF     	R11 R11 K34 ; R12 := R11; R11 := R11[0xc0a3774b]
	95	[3984]	MOVE     	R13 R1 ; R13 := R1
	96	[3984]	LOADK    	R14 K32 ; R14 := "XPGain"
	97	[3984]	LOADK    	R15 := 11.000000
	98	[3984]	OP_LOADBOOL	R16 0 0 ; R16 := false
	99	[3984]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	100	[3985]	GETGLOBAL	R11 K7 ; R11 := 0xae91e43b
	101	[3985]	SELF     	R11 R11 K31 ; R12 := R11; R11 := R11[0xf64b7262]
	102	[3985]	MOVE     	R13 R1 ; R13 := R1
	103	[3985]	LOADK    	R14 K35 ; R14 := "XPBonus"
	104	[3985]	LOADK    	R15 := 12.000000
	105	[3985]	LOADK    	R16 K33 ; R16 := 0.100000
	106	[3985]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	107	[3986]	GETGLOBAL	R11 K7 ; R11 := 0xae91e43b
	108	[3986]	SELF     	R11 R11 K34 ; R12 := R11; R11 := R11[0xc0a3774b]
	109	[3986]	MOVE     	R13 R1 ; R13 := R1
	110	[3986]	LOADK    	R14 K35 ; R14 := "XPBonus"
	111	[3986]	LOADK    	R15 := 11.000000
	112	[3986]	OP_LOADBOOL	R16 0 0 ; R16 := false
	113	[3986]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	114	[3987]	GETGLOBAL	R11 K7 ; R11 := 0xae91e43b
	115	[3987]	SELF     	R11 R11 K34 ; R12 := R11; R11 := R11[0xc0a3774b]
	116	[3987]	MOVE     	R13 R1 ; R13 := R1
	117	[3987]	LOADK    	R14 K36 ; R14 := "XPBg"
	118	[3987]	LOADK    	R15 := 11.000000
	119	[3987]	OP_LOADBOOL	R16 1 0 ; R16 := true
	120	[3987]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	121	[3989]	OP_LOADBOOL	R11 0 0 ; R11 := false
	122	[3991]	DIV      	R12 R6 R4 ; R12 := R6 / R4
	123	[3993]	GETGLOBAL	R13 K7 ; R13 := 0xae91e43b
	124	[3993]	SELF     	R13 R13 K34 ; R14 := R13; R13 := R13[0xc0a3774b]
	125	[3993]	MOVE     	R15 R1 ; R15 := R1
	126	[3993]	LOADK    	R16 K37 ; R16 := "StartXP"
	127	[3993]	LOADK    	R17 := 11.000000
	128	[3993]	LT       	1 K22 R12 ; if 0.000000 < R12 then PC := 131
	129	[3993]	JMP      	131 ; PC := 131
	130	[3993]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 131
	131	[3993]	OP_LOADBOOL	R18 1 0 ; R18 := true
	132	[3993]	CALL     	R13 6 1 ; R13(R14,R15,R16,R17,R18)
	133	[3994]	LT       	0 K22 R12 ; if 0.000000 >= R12 then PC := 142
	134	[3994]	JMP      	142 ; PC := 142
	135	[3995]	GETGLOBAL	R13 K7 ; R13 := 0xae91e43b
	136	[3995]	SELF     	R13 R13 K31 ; R14 := R13; R13 := R13[0xf64b7262]
	137	[3995]	MOVE     	R15 R1 ; R15 := R1
	138	[3995]	LOADK    	R16 K37 ; R16 := "StartXP"
	139	[3995]	LOADK    	R17 := 12.000000
	140	[3995]	MUL      	R18 R12 R2 ; R18 := R12 * R2
	141	[3995]	CALL     	R13 6 1 ; R13(R14,R15,R16,R17,R18)
	142	[3998]	GETUPVAL 	R13 U1 ; R13 := U1
	143	[3998]	GETTABLE 	R13 R13 K38 ; R13 := R13[0xae6791ba]
	144	[3998]	GETGLOBAL	R14 K7 ; R14 := 0xae91e43b
	145	[3998]	MOVE     	R15 R1 ; R15 := R1
	146	[3998]	MOVE     	R16 R3 ; R16 := R3
	147	[3998]	MOVE     	R17 R7 ; R17 := R7
	148	[3998]	LOADK    	R18 K27 ; R18 := " "
	149	[3998]	MOVE     	R19 R10 ; R19 := R10
	150	[3998]	CONCAT   	R17 R17 R19 ; R17 := R17 .. R18 .. R19
	151	[3998]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	152	[3999]	GETUPVAL 	R14 U2 ; R14 := U2
	153	[3999]	MOVE     	R15 R13 ; R15 := R13
	154	[3999]	CALL     	R14 2 1 ; R14(R15)
	155	[4000]	SETTABLE 	R13 K39 K40 ; R13["mIconToTextPadding"] := 10.000000
	156	[4001]	SELF     	R14 R13 K41 ; R15 := R13; R14 := R13[0x99dac1e9]
	157	[4001]	NEWTABLE 	R16 1 0 ; R16 := {}
	158	[4001]	MOVE     	R17 R6 ; R17 := R6
	159	[4001]	SETLIST  	R16 1 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 1
	160	[4001]	MOVE     	R17 R4 ; R17 := R4
	161	[4001]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	162	[4002]	SELF     	R14 R13 K42 ; R15 := R13; R14 := R13[0x71e9ac81]
	163	[4002]	CALL     	R14 2 1 ; R14(R15)
	164	[4003]	SETTABLE 	R0 K43 R13 ; R0["ProgressInfo"] := R13
	165	[4005]	TEST     	R11 0 ; if not R11 then PC := 224
	166	[4005]	JMP      	224 ; PC := 224
	167	[4006]	MOVE     	R14 R1 ; R14 := R1
	168	[4006]	LOADK    	R15 K44 ; R15 := ".XPGain"
	169	[4006]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	170	[4007]	GETGLOBAL	R15 K45 ; R15 := mIntrinsicPoints
	171	[4008]	MOVE     	R16 R6 ; R16 := R6
	172	[4009]	LOADK    	R17 K29 ; R17 := ""
	173	[4011]	OP_LOADBOOL	R18 1 0 ; R18 := true
	174	[4060]	CLOSURE  	R19 0 ; R19 := closure(Function #1)
	175	[4060]	MOVE     	R0 R18 ; R0 := R18
	176	[4060]	GETUPVAL 	R0 U3 ; R0 := U3
	177	[4060]	MOVE     	R0 R15 ; R0 := R15
	178	[4060]	MOVE     	R0 R16 ; R0 := R16
	179	[4060]	MOVE     	R0 R6 ; R0 := R6
	180	[4060]	MOVE     	R0 R4 ; R0 := R4
	181	[4060]	MOVE     	R0 R1 ; R0 := R1
	182	[4060]	MOVE     	R0 R17 ; R0 := R17
	183	[4060]	MOVE     	R0 R9 ; R0 := R9
	184	[4060]	MOVE     	R0 R7 ; R0 := R7
	185	[4060]	MOVE     	R0 R8 ; R0 := R8
	186	[4060]	MOVE     	R0 R2 ; R0 := R2
	187	[4060]	MOVE     	R0 R13 ; R0 := R13
	188	[4060]	MOVE     	R0 R3 ; R0 := R3
	189	[4060]	MOVE     	R0 R10 ; R0 := R10
	190	[4060]	GETUPVAL 	R0 U4 ; R0 := U4
	191	[4060]	MOVE     	R0 R14 ; R0 := R14
	192	[4062]	GETUPVAL 	R20 U5 ; R20 := U5
	193	[4062]	LOADK    	R21 := 1.000000
	194	[4062]	OP_LOADBOOL	R22 1 0 ; R22 := true
	195	[4062]	CALL     	R20 3 1 ; R20(R21,R22)
	196	[4065]	GETGLOBAL	R20 K7 ; R20 := 0xae91e43b
	197	[4065]	SELF     	R20 R20 K34 ; R21 := R20; R20 := R20[0xc0a3774b]
	198	[4065]	MOVE     	R22 R1 ; R22 := R1
	199	[4065]	LOADK    	R23 K32 ; R23 := "XPGain"
	200	[4065]	LOADK    	R24 := 11.000000
	201	[4065]	OP_LOADBOOL	R25 1 0 ; R25 := true
	202	[4065]	CALL     	R20 6 1 ; R20(R21,R22,R23,R24,R25)
	203	[4066]	GETGLOBAL	R20 K46 ; R20 := 0x42dcc9f5
	204	[4066]	GETGLOBAL	R21 K47 ; R21 := PROGRESS_BAR_FILL_XP_PER_SECOND
	205	[4066]	DIV      	R21 R15 R21 ; R21 := R15 / R21
	206	[4066]	GETGLOBAL	R22 K48 ; R22 := PROGRESS_BAR_FILL_MIN_SECONDS
	207	[4066]	GETGLOBAL	R23 K49 ; R23 := PROGRESS_BAR_FILL_MAX_SECONDS
	208	[4066]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	209	[4067]	GETGLOBAL	R21 K50 ; R21 := 0x25312c9b
	210	[4067]	GETGLOBAL	R22 K7 ; R22 := 0xae91e43b
	211	[4067]	MOVE     	R23 R1 ; R23 := R1
	212	[4067]	LOADK    	R24 := 0.000000
	213	[4067]	NEWTABLE 	R25 1 0 ; R25 := {}
	214	[4067]	MOVE     	R26 R19 ; R26 := R19
	215	[4067]	SETLIST  	R25 1 1 ; R25[(1-1)*FPF+i] := R(25+i), 1 <= i <= 1
	216	[4067]	NEWTABLE 	R26 1 0 ; R26 := {}
	217	[4067]	LOADK    	R27 := 1.000000
	218	[4067]	SETLIST  	R26 1 1 ; R26[(1-1)*FPF+i] := R(26+i), 1 <= i <= 1
	219	[4067]	MOVE     	R27 R20 ; R27 := R20
	220	[4067]	LOADK    	R28 := 2.000000
	221	[4067]	CALL     	R21 8 1 ; R21(R22,R23,R24,R25,R26,R27,R28)
	222	[4067]	CLOSE    	R14 ; SAVE R14,...
	223	[4067]	JMP      	245 ; PC := 245
	224	[4069]	GETGLOBAL	R14 K45 ; R14 := mIntrinsicPoints
	225	[4069]	ADD      	R14 R5 R14 ; R14 := R5 + R14
	226	[4070]	GETGLOBAL	R15 K23 ; R15 := 0x5bced4c4
	227	[4070]	GETTABLE 	R15 R15 K24 ; R15 := R15[0x55f27c30]
	228	[4070]	DIV      	R16 R14 K52 ; R16 := R14 / 1000.000000
	229	[4070]	CALL     	R15 2 2 ; R15 := R15(R16)
	230	[4070]	MOVE     	R9 R15 ; R9 := R15
	231	[4071]	MOD      	R8 R14 K52 ; R8 := R14 % 1000.000000
	232	[4073]	SELF     	R15 R13 K53 ; R16 := R13; R15 := R13[0x9b71e815]
	233	[4073]	MOVE     	R17 R3 ; R17 := R3
	234	[4073]	MOVE     	R18 R9 ; R18 := R9
	235	[4073]	LOADK    	R19 K27 ; R19 := " "
	236	[4073]	MOVE     	R20 R10 ; R20 := R10
	237	[4073]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	238	[4073]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	239	[4074]	SELF     	R15 R13 K41 ; R16 := R13; R15 := R13[0x99dac1e9]
	240	[4074]	NEWTABLE 	R17 1 0 ; R17 := {}
	241	[4074]	MOVE     	R18 R8 ; R18 := R8
	242	[4074]	SETLIST  	R17 1 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
	243	[4074]	MOVE     	R18 R4 ; R18 := R4
	244	[4074]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	245	[4076]	RETURN   	R0 1 ; return 

function #102 <?:4078,4109> (114 instructions, 456 bytes at 0000016080236C70)
1 param, 13 slots, 3 upvalues, 0 locals, 50 constants, 0 functions
	1	[4079]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4080]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4080]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xae6791ba]
	4	[4080]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	5	[4080]	MOVE     	R4 R1 ; R4 := R1
	6	[4080]	GETTABLE 	R5 R0 K3 ; R5 := R0["Name"]
	7	[4080]	LOADK    	R6 K4 ; R6 := "\r"
	8	[4080]	GETTABLE 	R7 R0 K5 ; R7 := R0["Desc"]
	9	[4080]	TEST     	R7 1 ; if R7 then PC := 12
	10	[4080]	JMP      	12 ; PC := 12
	11	[4080]	LOADK    	R7 K6 ; R7 := ""
	12	[4080]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	13	[4080]	LOADNIL  	R6 R6 ; R6 := nil
	14	[4080]	GETTABLE 	R7 R0 K7 ; R7 := R0["Gain"]
	15	[4080]	CALL     	R2 6 2 ; R2 := R2(R3,R4,R5,R6,R7)
	16	[4081]	GETUPVAL 	R3 U1 ; R3 := U1
	17	[4081]	MOVE     	R4 R2 ; R4 := R2
	18	[4081]	CALL     	R3 2 1 ; R3(R4)
	19	[4082]	SETTABLE 	R2 K8 K9 ; R2["mToUpper"] := false
	20	[4083]	GETTABLE 	R3 R0 K11 ; R3 := R0["Icon"]
	21	[4083]	SETTABLE 	R2 K10 R3 ; R2["mIconBgExtra"] := R3
	22	[4084]	SETTABLE 	R2 K12 K13 ; R2["mIconBgExtraAlpha"] := 5.000000
	23	[4085]	GETGLOBAL	R3 K14 ; R3 := 0x7b998233
	24	[4085]	GETTABLE 	R4 R0 K15 ; R4 := R0["BackgroundIconPos"]
	25	[4085]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[4085]	TEST     	R3 1 ; if R3 then PC := 51
	27	[4085]	JMP      	51 ; PC := 51
	28	[4086]	GETTABLE 	R3 R0 K15 ; R3 := R0["BackgroundIconPos"]
	29	[4086]	GETTABLE 	R3 R3 K17 ; R3 := R3["Scale"]
	30	[4086]	DIV      	R3 R3 K18 ; R3 := R3 / 7.000000
	31	[4086]	SETTABLE 	R2 K16 R3 ; R2["mIconBgExtraWidth"] := R3
	32	[4087]	GETTABLE 	R3 R0 K15 ; R3 := R0["BackgroundIconPos"]
	33	[4087]	GETTABLE 	R3 R3 K17 ; R3 := R3["Scale"]
	34	[4087]	DIV      	R3 R3 K18 ; R3 := R3 / 7.000000
	35	[4087]	SETTABLE 	R2 K19 R3 ; R2["mIconBgExtraHeight"] := R3
	36	[4088]	GETTABLE 	R3 R0 K15 ; R3 := R0["BackgroundIconPos"]
	37	[4088]	GETTABLE 	R3 R3 K21 ; R3 := R3["X"]
	38	[4088]	DIV      	R3 R3 K22 ; R3 := R3 / 2.000000
	39	[4088]	SETTABLE 	R2 K20 R3 ; R2["mIconBgExtraOffsetX"] := R3
	40	[4089]	GETTABLE 	R3 R0 K15 ; R3 := R0["BackgroundIconPos"]
	41	[4089]	GETTABLE 	R3 R3 K24 ; R3 := R3["Y"]
	42	[4089]	DIV      	R3 R3 K22 ; R3 := R3 / 2.000000
	43	[4089]	SETTABLE 	R2 K23 R3 ; R2["mIconBgExtraOffsetY"] := R3
	44	[4090]	GETTABLE 	R3 R0 K15 ; R3 := R0["BackgroundIconPos"]
	45	[4090]	GETTABLE 	R3 R3 K25 ; R3 := R3["Alpha"]
	46	[4090]	EQ       	1 R3 K26 ; if R3 == nil then PC := 51
	47	[4090]	JMP      	51 ; PC := 51
	48	[4091]	GETTABLE 	R3 R0 K15 ; R3 := R0["BackgroundIconPos"]
	49	[4091]	GETTABLE 	R3 R3 K25 ; R3 := R3["Alpha"]
	50	[4091]	SETTABLE 	R2 K12 R3 ; R2[0x00000001] := R3
	51	[4094]	GETTABLE 	R3 R0 K27 ; R3 := R0["Standing"]
	52	[4094]	EQ       	1 R3 K26 ; if R3 == nil then PC := 106
	53	[4094]	JMP      	106 ; PC := 106
	54	[4095]	SETTABLE 	R2 K28 K29 ; R2["mLabelOffsetX"] := 52.000000
	55	[4096]	GETTABLE 	R3 R0 K30 ; R3 := R0["NewStanding"]
	56	[4096]	TEST     	R3 1 ; if R3 then PC := 59
	57	[4096]	JMP      	59 ; PC := 59
	58	[4096]	LOADK    	R3 := 0.000000
	59	[4097]	LT       	0 R3 K31 ; if R3 >= 0.000000 then PC := 65
	60	[4097]	JMP      	65 ; PC := 65
	61	[4098]	UNM      	R3 R3 ; R3 := ^ R3
	62	[4099]	GETTABLE 	R4 R2 K32 ; R4 := R2["mProgressBar"]
	63	[4099]	GETTABLE 	R4 R4 K33 ; R4 := R4["mBarColors"]
	64	[4099]	SETTABLE 	R4 K22 K35 ; R4[2.000000] := 12.000000
	65	[4101]	GETTABLE 	R4 R0 K27 ; R4 := R0["Standing"]
	66	[4101]	TEST     	R4 1 ; if R4 then PC := 69
	67	[4101]	JMP      	69 ; PC := 69
	68	[4101]	MOVE     	R4 R3 ; R4 := R3
	69	[4101]	SUB      	R4 R4 R3 ; R4 := R4 - R3
	70	[4102]	SELF     	R5 R2 K36 ; R6 := R2; R5 := R2[0x99dac1e9]
	71	[4102]	NEWTABLE 	R7 2 0 ; R7 := {}
	72	[4102]	MOVE     	R8 R4 ; R8 := R4
	73	[4102]	MOVE     	R9 R3 ; R9 := R3
	74	[4102]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	75	[4102]	GETTABLE 	R8 R0 K37 ; R8 := R0["MaxStanding"]
	76	[4102]	TEST     	R8 1 ; if R8 then PC := 79
	77	[4102]	JMP      	79 ; PC := 79
	78	[4102]	LOADK    	R8 := 5000.000000
	79	[4102]	LOADK    	R9 K38 ; R9 := "/Lotus/Language/Syndicates/SyndicateReputation"
	80	[4102]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	81	[4103]	SELF     	R5 R2 K39 ; R6 := R2; R5 := R2[0x9b71e815]
	82	[4103]	GETGLOBAL	R7 K40 ; R7 := 0x7f5022cf
	83	[4103]	GETTABLE 	R7 R7 K41 ; R7 := R7[0x3f3e4d12]
	84	[4103]	GETTABLE 	R8 R0 K3 ; R8 := R0["Name"]
	85	[4103]	CALL     	R7 2 2 ; R7 := R7(R8)
	86	[4103]	LOADNIL  	R8 R8 ; R8 := nil
	87	[4103]	GETUPVAL 	R9 U2 ; R9 := U2
	88	[4103]	GETTABLE 	R9 R9 K42 ; R9 := R9[0x06d055f9]
	89	[4103]	GETTABLE 	R10 R0 K30 ; R10 := R0["NewStanding"]
	90	[4103]	LT       	1 R10 K31 ; if R10 < 0.000000 then PC := 93
	91	[4103]	JMP      	93 ; PC := 93
	92	[4103]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 93
	93	[4103]	OP_LOADBOOL	R10 1 0 ; R10 := true
	94	[4103]	LOADK    	R11 K43 ; R11 := "<font color=\"#Negative\">-"
	95	[4103]	LOADK    	R12 K44 ; R12 := "<font color=\"#Positive\">+"
	96	[4103]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	97	[4103]	GETUPVAL 	R10 U2 ; R10 := U2
	98	[4103]	GETTABLE 	R10 R10 K45 ; R10 := R10[0x1142c7a8]
	99	[4103]	MOVE     	R11 R3 ; R11 := R3
	100	[4103]	CALL     	R10 2 2 ; R10 := R10(R11)
	101	[4103]	LOADK    	R11 K46 ; R11 := "</font>"
	102	[4103]	CONCAT   	R9 R9 R11 ; R9 := R9 .. R10 .. R11
	103	[4103]	GETTABLE 	R10 R0 K5 ; R10 := R0["Desc"]
	104	[4103]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	105	[4103]	JMP      	111 ; PC := 111
	106	[4105]	SELF     	R5 R2 K36 ; R6 := R2; R5 := R2[0x99dac1e9]
	107	[4105]	NEWTABLE 	R7 1 0 ; R7 := {}
	108	[4105]	GETTABLE 	R8 R0 K47 ; R8 := R0["Progress"]
	109	[4105]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	110	[4105]	CALL     	R5 3 1 ; R5(R6,R7)
	111	[4107]	SELF     	R5 R2 K48 ; R6 := R2; R5 := R2[0x71e9ac81]
	112	[4107]	CALL     	R5 2 1 ; R5(R6)
	113	[4108]	SETTABLE 	R0 K49 R2 ; R0["ProgressInfo"] := R2
	114	[4109]	RETURN   	R0 1 ; return 

function #103 <?:4111,4124> (34 instructions, 136 bytes at 00000160FB1475A0)
1 param, 9 slots, 2 upvalues, 0 locals, 20 constants, 0 functions
	1	[4112]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4113]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4113]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xae6791ba]
	4	[4113]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	5	[4113]	MOVE     	R4 R1 ; R4 := R1
	6	[4113]	GETTABLE 	R5 R0 K3 ; R5 := R0["Name"]
	7	[4113]	LOADNIL  	R6 R6 ; R6 := nil
	8	[4113]	GETTABLE 	R7 R0 K4 ; R7 := R0["Desc"]
	9	[4113]	TEST     	R7 1 ; if R7 then PC := 12
	10	[4113]	JMP      	12 ; PC := 12
	11	[4113]	GETTABLE 	R7 R0 K5 ; R7 := R0["FinalRank"]
	12	[4113]	GETTABLE 	R8 R0 K6 ; R8 := R0["Score"]
	13	[4113]	CALL     	R2 7 2 ; R2 := R2(R3,R4,R5,R6,R7,R8)
	14	[4114]	GETUPVAL 	R3 U1 ; R3 := U1
	15	[4114]	MOVE     	R4 R2 ; R4 := R2
	16	[4114]	CALL     	R3 2 1 ; R3(R4)
	17	[4115]	GETTABLE 	R3 R0 K5 ; R3 := R0["FinalRank"]
	18	[4115]	EQ       	1 R3 K7 ; if R3 == nil then PC := 22
	19	[4115]	JMP      	22 ; PC := 22
	20	[4116]	SETTABLE 	R2 K8 K9 ; R2["mToUpper"] := false
	21	[4117]	SETTABLE 	R2 K10 K11 ; R2["mTopRightOffset"] := 31.000000
	22	[4119]	GETGLOBAL	R3 K13 ; R3 := mAffinityGrid
	23	[4119]	GETTABLE 	R3 R3 K14 ; R3 := R3["OnslaughtBackground"]
	24	[4119]	SETTABLE 	R2 K12 R3 ; R2["mIconBgExtra"] := R3
	25	[4120]	SELF     	R3 R2 K15 ; R4 := R2; R3 := R2[0x99dac1e9]
	26	[4120]	NEWTABLE 	R5 1 0 ; R5 := {}
	27	[4120]	LOADK    	R6 := 1.000000
	28	[4120]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	29	[4120]	CALL     	R3 3 1 ; R3(R4,R5)
	30	[4121]	SELF     	R3 R2 K16 ; R4 := R2; R3 := R2[0x71e9ac81]
	31	[4121]	CALL     	R3 2 1 ; R3(R4)
	32	[4122]	SETTABLE 	R0 K17 R2 ; R0["ProgressInfo"] := R2
	33	[4123]	SETTABLE 	R0 K18 K19 ; R0["IconHeight"] := 76.000000
	34	[4124]	RETURN   	R0 1 ; return 

function #104 <?:4126,4152> (56 instructions, 224 bytes at 00000160FB1478C0)
1 param, 11 slots, 3 upvalues, 0 locals, 34 constants, 0 functions
	1	[4127]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4128]	GETGLOBAL	R2 K1 ; R2 := 0x38f10e85
	3	[4128]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	4	[4128]	MOVE     	R4 R1 ; R4 := R1
	5	[4128]	LOADK    	R5 K3 ; R5 := ".Background.duplicateMovieClip"
	6	[4128]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	7	[4128]	LOADK    	R5 K4 ; R5 := "Icon2"
	8	[4128]	LOADK    	R6 := 1234.000000
	9	[4128]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	10	[4129]	GETUPVAL 	R2 U0 ; R2 := U0
	11	[4129]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xae6791ba]
	12	[4129]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	13	[4129]	MOVE     	R4 R1 ; R4 := R1
	14	[4129]	GETTABLE 	R5 R0 K6 ; R5 := R0["Name"]
	15	[4129]	LOADNIL  	R6 R6 ; R6 := nil
	16	[4129]	GETTABLE 	R7 R0 K7 ; R7 := R0["Desc"]
	17	[4129]	LOADNIL  	R8 R8 ; R8 := nil
	18	[4129]	CALL     	R2 7 2 ; R2 := R2(R3,R4,R5,R6,R7,R8)
	19	[4130]	GETUPVAL 	R3 U1 ; R3 := U1
	20	[4130]	MOVE     	R4 R2 ; R4 := R2
	21	[4130]	CALL     	R3 2 1 ; R3(R4)
	22	[4131]	SETTABLE 	R2 K8 K9 ; R2["mToUpper"] := false
	23	[4132]	GETTABLE 	R3 R0 K4 ; R3 := R0["Icon2"]
	24	[4132]	SETTABLE 	R2 K10 R3 ; R2["mIcon2"] := R3
	25	[4133]	SETTABLE 	R2 K11 K12 ; R2["mIconSize2"] := 46.000000
	26	[4134]	GETUPVAL 	R3 U2 ; R3 := U2
	27	[4134]	GETTABLE 	R3 R3 K14 ; R3 := R3["FloatingContent"]
	28	[4134]	SETTABLE 	R2 K13 R3 ; R2["mIconColor2"] := R3
	29	[4135]	SETTABLE 	R2 K15 K12 ; R2["mIconBorderSize2"] := 46.000000
	30	[4136]	SETTABLE 	R2 K16 K17 ; R2["mIconPaddingX2"] := 4.000000
	31	[4137]	SETTABLE 	R2 K18 K19 ; R2["mIconPaddingY2"] := 8.000000
	32	[4139]	GETTABLE 	R3 R0 K20 ; R3 := R0["Delta"]
	33	[4140]	GETTABLE 	R4 R0 K21 ; R4 := R0["Score"]
	34	[4141]	LT       	0 K22 R3 ; if 0.000000 >= R3 then PC := 37
	35	[4141]	JMP      	37 ; PC := 37
	36	[4142]	SUB      	R4 R4 R3 ; R4 := R4 - R3
	37	[4144]	LT       	0 R3 K22 ; if R3 >= 0.000000 then PC := 43
	38	[4144]	JMP      	43 ; PC := 43
	39	[4145]	UNM      	R3 R3 ; R3 := ^ R3
	40	[4146]	GETTABLE 	R5 R2 K23 ; R5 := R2["mProgressBar"]
	41	[4146]	GETTABLE 	R5 R5 K24 ; R5 := R5["mBarColors"]
	42	[4146]	SETTABLE 	R5 K25 K27 ; R5[2.000000] := 12.000000
	43	[4148]	SELF     	R5 R2 K28 ; R6 := R2; R5 := R2[0x99dac1e9]
	44	[4148]	NEWTABLE 	R7 2 0 ; R7 := {}
	45	[4148]	MOVE     	R8 R4 ; R8 := R4
	46	[4148]	MOVE     	R9 R3 ; R9 := R3
	47	[4148]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	48	[4148]	LOADK    	R8 := 3.000000
	49	[4148]	LOADNIL  	R9 R9 ; R9 := nil
	50	[4148]	GETTABLE 	R10 R0 K29 ; R10 := R0["CompletionFaction"]
	51	[4148]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	52	[4149]	SELF     	R5 R2 K30 ; R6 := R2; R5 := R2[0x71e9ac81]
	53	[4149]	CALL     	R5 2 1 ; R5(R6)
	54	[4150]	SETTABLE 	R0 K31 R2 ; R0["ProgressInfo"] := R2
	55	[4151]	SETTABLE 	R0 K32 K33 ; R0["IconHeight"] := 76.000000
	56	[4152]	RETURN   	R0 1 ; return 

function #105 <?:4154,4163> (20 instructions, 80 bytes at 00000160FB147DB0)
1 param, 7 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[4155]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4156]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4156]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xae6791ba]
	4	[4156]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	5	[4156]	MOVE     	R4 R1 ; R4 := R1
	6	[4156]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	7	[4157]	GETUPVAL 	R3 U1 ; R3 := U1
	8	[4157]	MOVE     	R4 R2 ; R4 := R2
	9	[4157]	CALL     	R3 2 1 ; R3(R4)
	10	[4158]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0x99dac1e9]
	11	[4158]	NEWTABLE 	R5 1 0 ; R5 := {}
	12	[4158]	LOADK    	R6 := 0.000000
	13	[4158]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	14	[4158]	CALL     	R3 3 1 ; R3(R4,R5)
	15	[4159]	SETTABLE 	R2 K4 K5 ; R2["mProgressText"] := ""
	16	[4160]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0x71e9ac81]
	17	[4160]	CALL     	R3 2 1 ; R3(R4)
	18	[4161]	SETTABLE 	R0 K7 R2 ; R0["ProgressInfo"] := R2
	19	[4162]	SETTABLE 	R0 K8 K9 ; R0["IconHeight"] := 76.000000
	20	[4163]	RETURN   	R0 1 ; return 

function #106 <?:4165,4177> (32 instructions, 128 bytes at 00000160FB147FB0)
2 params, 6 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[4166]	GETTABLE 	R2 R0 K0 ; R2 := R0["Filler"]
	2	[4166]	TEST     	R2 1 ; if R2 then PC := 5
	3	[4166]	JMP      	5 ; PC := 5
	4	[4166]	GETTABLE 	R2 R0 K1 ; R2 := R0["EmptySlot"]
	5	[4167]	TEST     	R2 1 ; if R2 then PC := 12
	6	[4167]	JMP      	12 ; PC := 12
	7	[4167]	GETGLOBAL	R3 K2 ; R3 := mAffinityGrid
	8	[4167]	GETTABLE 	R3 R3 K3 ; R3 := R3["mPrevSelectedId"]
	9	[4167]	GETTABLE 	R4 R0 K4 ; R4 := R0["Id"]
	10	[4167]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 13
	11	[4167]	JMP      	13 ; PC := 13
	12	[4167]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 13
	13	[4167]	OP_LOADBOOL	R3 1 0 ; R3 := true
	14	[4169]	NEWTABLE 	R4 0 6 ; R4 := {}
	15	[4170]	SETTABLE 	R4 K5 K6 ; R4["HideCountThreshold"] := 0.000000
	16	[4171]	SETTABLE 	R4 K7 K8 ; R4["HideOwned"] := true
	17	[4172]	SETTABLE 	R4 K9 R2 ; R4[0x2bbc1c3b] := R2
	18	[4173]	SETTABLE 	R4 K10 R1 ; R4["IsFocused"] := R1
	19	[4174]	SETTABLE 	R4 K11 R3 ; R4["IsSelected"] := R3
	20	[4175]	TESTSET  	R5 R1 0 ; if not R1 then PC := 30 else R5 := R1 
	21	[4175]	JMP      	30 ; PC := 30
	22	[4175]	GETTABLE 	R5 R0 K13 ; R5 := R0["Locked"]
	23	[4175]	TEST     	R5 1 ; if R5 then PC := 28
	24	[4175]	JMP      	28 ; PC := 28
	25	[4175]	GETTABLE 	R5 R0 K14 ; R5 := R0["Hidden"]
	26	[4175]	NOT      	R5 R5 ; R5 := not R5
	27	[4175]	JMP      	30 ; PC := 30
	28	[4175]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 29
	29	[4175]	OP_LOADBOOL	R5 1 0 ; R5 := true
	30	[4175]	SETTABLE 	R4 K12 R5 ; R4["ShowInfoPopup"] := R5
	31	[4176]	RETURN   	R4 2 ; return R4 
	32	[4177]	RETURN   	R0 1 ; return 

function #107 <?:4179,4183> (12 instructions, 48 bytes at 00000160FB148260)
2 params, 6 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[4180]	TEST     	R1 1 ; if R1 then PC := 6
	2	[4180]	JMP      	6 ; PC := 6
	3	[4180]	GETGLOBAL	R2 K0 ; R2 := mAffinityGrid
	4	[4180]	GETTABLE 	R2 R2 K1 ; R2 := R2["mElements"]
	5	[4180]	GETTABLE 	R1 R2 K2 ; R1 := R2[1.000000]
	6	[4182]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[4182]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xbf9f30a4]
	8	[4182]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	9	[4182]	GETGLOBAL	R4 K0 ; R4 := mAffinityGrid
	10	[4182]	MOVE     	R5 R0 ; R5 := R0
	11	[4182]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	12	[4183]	RETURN   	R0 1 ; return 

function #108 <?:4185,4197> (44 instructions, 176 bytes at 00000160FB1483D0)
1 param, 9 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[4186]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4186]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[4186]	JMP      	5 ; PC := 5
	4	[4187]	RETURN   	R0 1 ; return 
	5	[4190]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[4190]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xb496de90]
	7	[4190]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	8	[4190]	GETGLOBAL	R3 K4 ; R3 := mAffinityGrid
	9	[4190]	MOVE     	R4 R0 ; R4 := R0
	10	[4190]	GETUPVAL 	R5 U1 ; R5 := U1
	11	[4190]	MOVE     	R6 R0 ; R6 := R0
	12	[4190]	OP_LOADBOOL	R7 1 0 ; R7 := true
	13	[4190]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	14	[4190]	CALL     	R1 0 1 ; R1(R2,...)
	15	[4192]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[4192]	GETTABLE 	R1 R1 K5 ; R1 := R1[0xfc3fed1f]
	17	[4192]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	18	[4192]	MOVE     	R3 R0 ; R3 := R0
	19	[4193]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	20	[4193]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x91a24e4b]
	21	[4193]	GETTABLE 	R6 R0 K0 ; R6 := R0["mClipName"]
	22	[4193]	LOADK    	R7 := 2.000000
	23	[4193]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	24	[4193]	GETTABLE 	R5 R0 K7 ; R5 := R0["ProgressInfo"]
	25	[4193]	GETTABLE 	R5 R5 K8 ; R5 := R5["mWidth"]
	26	[4193]	DIV      	R5 R5 K9 ; R5 := R5 / 2.000000
	27	[4193]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	28	[4194]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	29	[4194]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x91a24e4b]
	30	[4194]	GETTABLE 	R7 R0 K0 ; R7 := R0["mClipName"]
	31	[4194]	LOADK    	R8 := 3.000000
	32	[4194]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	33	[4194]	GETTABLE 	R6 R0 K7 ; R6 := R0["ProgressInfo"]
	34	[4194]	GETTABLE 	R6 R6 K10 ; R6 := R6["mHeight"]
	35	[4194]	DIV      	R6 R6 K9 ; R6 := R6 / 2.000000
	36	[4194]	ADD      	R5 R5 R6 ; R5 := R5 + R6
	37	[4195]	GETTABLE 	R6 R0 K7 ; R6 := R0["ProgressInfo"]
	38	[4195]	GETTABLE 	R6 R6 K8 ; R6 := R6["mWidth"]
	39	[4195]	ADD      	R6 R6 K11 ; R6 := R6 + 8.000000
	40	[4196]	GETTABLE 	R7 R0 K7 ; R7 := R0["ProgressInfo"]
	41	[4196]	GETTABLE 	R7 R7 K10 ; R7 := R7["mHeight"]
	42	[4196]	ADD      	R7 R7 K11 ; R7 := R7 + 8.000000
	43	[4192]	CALL     	R1 7 1 ; R1(R2,R3,R4,R5,R6,R7)
	44	[4197]	RETURN   	R0 1 ; return 

function #109 <?:4199,4205> (15 instructions, 60 bytes at 00000160FB1486B0)
1 param, 8 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[4200]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4200]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[4200]	JMP      	5 ; PC := 5
	4	[4201]	RETURN   	R0 1 ; return 
	5	[4204]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[4204]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xb496de90]
	7	[4204]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	8	[4204]	GETGLOBAL	R3 K4 ; R3 := mAffinityGrid
	9	[4204]	MOVE     	R4 R0 ; R4 := R0
	10	[4204]	GETUPVAL 	R5 U1 ; R5 := U1
	11	[4204]	MOVE     	R6 R0 ; R6 := R0
	12	[4204]	OP_LOADBOOL	R7 0 0 ; R7 := false
	13	[4204]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	14	[4204]	CALL     	R1 0 1 ; R1(R2,...)
	15	[4205]	RETURN   	R0 1 ; return 

function #110 <?:4207,4241> (107 instructions, 428 bytes at 00000160FB148840)
1 param, 9 slots, 9 upvalues, 0 locals, 24 constants, 0 functions
	1	[4208]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4208]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[4208]	JMP      	5 ; PC := 5
	4	[4209]	RETURN   	R0 1 ; return 
	5	[4212]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	6	[4212]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaf5300dc]
	7	[4212]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	8	[4212]	LOADK    	R4 K4 ; R4 := ".XP"
	9	[4212]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	10	[4212]	CALL     	R1 3 1 ; R1(R2,R3)
	11	[4213]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	12	[4213]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaf5300dc]
	13	[4213]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	14	[4213]	LOADK    	R4 K5 ; R4 := ".BonusXP"
	15	[4213]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	16	[4213]	CALL     	R1 3 1 ; R1(R2,R3)
	17	[4214]	SETTABLE 	R0 K6 K7 ; R0["IconHeight"] := 85.000000
	18	[4215]	GETTABLE 	R1 R0 K8 ; R1 := R0["Filler"]
	19	[4215]	TEST     	R1 0 ; if not R1 then PC := 37
	20	[4215]	JMP      	37 ; PC := 37
	21	[4216]	GETUPVAL 	R1 U0 ; R1 := U0
	22	[4216]	MOVE     	R2 R0 ; R2 := R0
	23	[4216]	CALL     	R1 2 1 ; R1(R2)
	24	[4218]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	25	[4218]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xc0a3774b]
	26	[4218]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	27	[4218]	LOADK    	R4 K10 ; R4 := "Seperator"
	28	[4218]	LOADK    	R5 := 11.000000
	29	[4218]	OP_LOADBOOL	R6 0 0 ; R6 := false
	30	[4218]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	31	[4219]	GETTABLE 	R1 R0 K11 ; R1 := R0["ProgressInfo"]
	32	[4219]	GETTABLE 	R1 R1 K12 ; R1 := R1["mProgressBar"]
	33	[4219]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x368ad758]
	34	[4219]	OP_LOADBOOL	R3 0 0 ; R3 := false
	35	[4219]	CALL     	R1 3 1 ; R1(R2,R3)
	36	[4219]	JMP      	87 ; PC := 87
	37	[4221]	GETTABLE 	R1 R0 K14 ; R1 := R0["Onslaught"]
	38	[4221]	TEST     	R1 0 ; if not R1 then PC := 44
	39	[4221]	JMP      	44 ; PC := 44
	40	[4222]	GETUPVAL 	R1 U1 ; R1 := U1
	41	[4222]	MOVE     	R2 R0 ; R2 := R0
	42	[4222]	CALL     	R1 2 1 ; R1(R2)
	43	[4222]	JMP      	75 ; PC := 75
	44	[4223]	GETTABLE 	R1 R0 K15 ; R1 := R0["Invasion"]
	45	[4223]	TEST     	R1 0 ; if not R1 then PC := 51
	46	[4223]	JMP      	51 ; PC := 51
	47	[4224]	GETUPVAL 	R1 U2 ; R1 := U2
	48	[4224]	MOVE     	R2 R0 ; R2 := R0
	49	[4224]	CALL     	R1 2 1 ; R1(R2)
	50	[4224]	JMP      	75 ; PC := 75
	51	[4225]	GETTABLE 	R1 R0 K16 ; R1 := R0["Syndicate"]
	52	[4225]	TEST     	R1 0 ; if not R1 then PC := 58
	53	[4225]	JMP      	58 ; PC := 58
	54	[4226]	GETUPVAL 	R1 U3 ; R1 := U3
	55	[4226]	MOVE     	R2 R0 ; R2 := R0
	56	[4226]	CALL     	R1 2 1 ; R1(R2)
	57	[4226]	JMP      	75 ; PC := 75
	58	[4227]	GETTABLE 	R1 R0 K17 ; R1 := R0["Intrinsic"]
	59	[4227]	TEST     	R1 0 ; if not R1 then PC := 65
	60	[4227]	JMP      	65 ; PC := 65
	61	[4228]	GETUPVAL 	R1 U4 ; R1 := U4
	62	[4228]	MOVE     	R2 R0 ; R2 := R0
	63	[4228]	CALL     	R1 2 1 ; R1(R2)
	64	[4228]	JMP      	75 ; PC := 75
	65	[4229]	GETTABLE 	R1 R0 K18 ; R1 := R0["PolarityInfo"]
	66	[4229]	EQ       	1 R1 K1 ; if R1 == nil then PC := 72
	67	[4229]	JMP      	72 ; PC := 72
	68	[4230]	GETUPVAL 	R1 U5 ; R1 := U5
	69	[4230]	MOVE     	R2 R0 ; R2 := R0
	70	[4230]	CALL     	R1 2 1 ; R1(R2)
	71	[4230]	JMP      	75 ; PC := 75
	72	[4232]	GETUPVAL 	R1 U6 ; R1 := U6
	73	[4232]	MOVE     	R2 R0 ; R2 := R0
	74	[4232]	CALL     	R1 2 1 ; R1(R2)
	75	[4235]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	76	[4235]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xc0a3774b]
	77	[4235]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	78	[4235]	LOADK    	R4 K10 ; R4 := "Seperator"
	79	[4235]	LOADK    	R5 := 11.000000
	80	[4235]	OP_LOADBOOL	R6 1 0 ; R6 := true
	81	[4235]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	82	[4236]	GETTABLE 	R1 R0 K11 ; R1 := R0["ProgressInfo"]
	83	[4236]	GETTABLE 	R1 R1 K12 ; R1 := R1["mProgressBar"]
	84	[4236]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x368ad758]
	85	[4236]	OP_LOADBOOL	R3 1 0 ; R3 := true
	86	[4236]	CALL     	R1 3 1 ; R1(R2,R3)
	87	[4239]	GETUPVAL 	R1 U7 ; R1 := U7
	88	[4239]	GETTABLE 	R1 R1 K19 ; R1 := R1[0xc339daf7]
	89	[4239]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	90	[4239]	GETGLOBAL	R3 K20 ; R3 := mAffinityGrid
	91	[4239]	MOVE     	R4 R0 ; R4 := R0
	92	[4239]	GETUPVAL 	R5 U8 ; R5 := U8
	93	[4239]	MOVE     	R6 R0 ; R6 := R0
	94	[4239]	GETGLOBAL	R7 K20 ; R7 := mAffinityGrid
	95	[4239]	SELF     	R7 R7 K21 ; R8 := R7; R7 := R7[0xed1ab921]
	96	[4239]	CALL     	R7 2 2 ; R7 := R7(R8)
	97	[4239]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 100
	98	[4239]	JMP      	100 ; PC := 100
	99	[4239]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 100
	100	[4239]	OP_LOADBOOL	R7 1 0 ; R7 := true
	101	[4239]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	102	[4239]	CALL     	R1 0 1 ; R1(R2,...)
	103	[4240]	GETTABLE 	R1 R0 K11 ; R1 := R0["ProgressInfo"]
	104	[4240]	SELF     	R1 R1 K22 ; R2 := R1; R1 := R1[0x89701469]
	105	[4240]	GETTABLE 	R3 R0 K23 ; R3 := R0["Level"]
	106	[4240]	CALL     	R1 3 1 ; R1(R2,R3)
	107	[4241]	RETURN   	R0 1 ; return 

function #111 <?:4243,4281> (121 instructions, 484 bytes at 00000160FB148E20)
0 params, 7 slots, 7 upvalues, 0 locals, 50 constants, 1 function
	1	[4244]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[4244]	LOADK    	R1 K1 ; R1 := "EE.Interface.Components.Grid"
	3	[4244]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4245]	GETTABLE 	R1 R0 K3 ; R1 := R0[0xda0c93a2]
	5	[4245]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	6	[4245]	LOADK    	R3 K5 ; R3 := "ExpandableArea.Progression.Affinity.Grid.Item"
	7	[4245]	LOADNIL  	R4 R4 ; R4 := nil
	8	[4245]	LOADK    	R5 := 2.000000
	9	[4245]	LOADK    	R6 := 3.000000
	10	[4245]	CALL     	R1 6 2 ; R1 := R1(R2,R3,R4,R5,R6)
	11	[4245]	SETGLOBALHASH	R1 K2 ; mAffinityGrid := R1
	12	[4246]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	13	[4246]	GETGLOBAL	R2 K7 ; R2 := 0xfee8dbfd
	14	[4246]	SETTABLE 	R1 K6 R2 ; R1["VisibleRangeMaterial"] := R2
	15	[4247]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	16	[4247]	GETGLOBAL	R2 K9 ; R2 := 0xbacf3724
	17	[4247]	SETTABLE 	R1 K8 R2 ; R1[0x6d604ba7] := R2
	18	[4248]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	19	[4248]	GETGLOBAL	R2 K11 ; R2 := 0x2bbc1c3b
	20	[4248]	SETTABLE 	R1 K10 R2 ; R1["RectangleVisibleRangeMaterial"] := R2
	21	[4249]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	22	[4249]	SETTABLE 	R1 K12 K13 ; R1["PopupPadding"] := 6.000000
	23	[4250]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	24	[4250]	SETTABLE 	R1 K14 K15 ; R1["mColumnSeparation"] := 330.000000
	25	[4251]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	26	[4251]	SETTABLE 	R1 K16 K17 ; R1["mRowSeparation"] := 100.000000
	27	[4252]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	28	[4252]	SETTABLE 	R1 K18 K19 ; R1["mScrollAlwaysVisible"] := true
	29	[4253]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	30	[4253]	GETGLOBAL	R2 K2 ; R2 := mAffinityGrid
	31	[4253]	GETTABLE 	R2 R2 K20 ; R2 := R2["mInitialDepth"]
	32	[4253]	ADD      	R2 R2 K21 ; R2 := R2 + 1000.000000
	33	[4253]	SETTABLE 	R1 K20 R2 ; R1["mInitialDepth"] := R2
	34	[4254]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	35	[4254]	SELF     	R1 R1 K22 ; R2 := R1; R1 := R1[0x1e5b5cfe]
	36	[4254]	LOADK    	R3 K23 ; R3 := "AffinitySelected"
	37	[4254]	LOADK    	R4 K24 ; R4 := "AffinityFocused"
	38	[4254]	LOADK    	R5 K25 ; R5 := "AffinityUnfocused"
	39	[4254]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	40	[4255]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	41	[4255]	SETTABLE 	R1 K26 K27 ; R1["mWrapAroundNavigation"] := false
	42	[4256]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	43	[4256]	SELF     	R1 R1 K28 ; R2 := R1; R1 := R1[0x3bc79f4f]
	44	[4256]	LOADK    	R3 K29 ; R3 := "ExpandableArea.Progression.Affinity.ScrollBar"
	45	[4256]	LOADK    	R4 := -6.000000
	46	[4256]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	47	[4257]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	48	[4257]	SELF     	R1 R1 K30 ; R2 := R1; R1 := R1[0x7220acb6]
	49	[4257]	CALL     	R1 2 1 ; R1(R2)
	50	[4258]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	51	[4258]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	52	[4258]	SETTABLE 	R1 K31 R2 ; R1["RepositionButton"] := R2
	53	[4259]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	54	[4259]	GETUPVAL 	R2 U0 ; R2 := U0
	55	[4259]	SETTABLE 	R1 K32 R2 ; R1["mClipCreatedCallback"] := R2
	56	[4260]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	57	[4260]	GETUPVAL 	R2 U1 ; R2 := U1
	58	[4260]	SETTABLE 	R1 K33 R2 ; R1["mOnFocusedCallback"] := R2
	59	[4261]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	60	[4261]	GETUPVAL 	R2 U2 ; R2 := U2
	61	[4261]	SETTABLE 	R1 K34 R2 ; R1["mOnUnfocusedCallback"] := R2
	62	[4262]	GETGLOBAL	R1 K2 ; R1 := mAffinityGrid
	63	[4262]	GETUPVAL 	R2 U3 ; R2 := U3
	64	[4262]	SETTABLE 	R1 K35 R2 ; R1["mElementDrawCallback"] := R2
	65	[4264]	GETUPVAL 	R1 U4 ; R1 := U4
	66	[4264]	CALL     	R1 1 2 ; R1 := R1()
	67	[4264]	TEST     	R1 0 ; if not R1 then PC := 104
	68	[4264]	JMP      	104 ; PC := 104
	69	[4264]	GETUPVAL 	R1 U5 ; R1 := U5
	70	[4264]	GETTABLE 	R1 R1 K36 ; R1 := R1[0xcdc34211]
	71	[4264]	CALL     	R1 1 2 ; R1 := R1()
	72	[4264]	TEST     	R1 0 ; if not R1 then PC := 104
	73	[4264]	JMP      	104 ; PC := 104
	74	[4265]	GETUPVAL 	R1 U6 ; R1 := U6
	75	[4265]	CALL     	R1 1 2 ; R1 := R1()
	76	[4266]	GETGLOBAL	R2 K37 ; R2 := 0x7b998233
	77	[4266]	MOVE     	R3 R1 ; R3 := R1
	78	[4266]	CALL     	R2 2 2 ; R2 := R2(R3)
	79	[4266]	TEST     	R2 1 ; if R2 then PC := 121
	80	[4266]	JMP      	121 ; PC := 121
	81	[4267]	SELF     	R2 R1 K38 ; R3 := R1; R2 := R1[0xb8c8dfbd]
	82	[4267]	CALL     	R2 2 2 ; R2 := R2(R3)
	83	[4268]	GETGLOBAL	R3 K37 ; R3 := 0x7b998233
	84	[4268]	MOVE     	R4 R2 ; R4 := R2
	85	[4268]	CALL     	R3 2 2 ; R3 := R3(R4)
	86	[4268]	TEST     	R3 1 ; if R3 then PC := 121
	87	[4268]	JMP      	121 ; PC := 121
	88	[4268]	GETGLOBAL	R3 K39 ; R3 := 0xbe190284
	89	[4268]	SELF     	R3 R3 K40 ; R4 := R3; R3 := R3[0x5d204145]
	90	[4268]	CALL     	R3 2 2 ; R3 := R3(R4)
	91	[4268]	TEST     	R3 1 ; if R3 then PC := 121
	92	[4268]	JMP      	121 ; PC := 121
	93	[4269]	SELF     	R3 R2 K41 ; R4 := R2; R3 := R2[0x864e4735]
	94	[4269]	CALL     	R3 2 2 ; R3 := R3(R4)
	95	[4270]	LT       	0 K42 R3 ; if 0.000000 >= R3 then PC := 121
	96	[4270]	JMP      	121 ; PC := 121
	97	[4271]	SETGLOBALHASH	R3 K43 ; mIntrinsicPoints := R3
	98	[4272]	GETGLOBAL	R4 K44 ; R4 := mPlayerMissionInfo
	99	[4272]	SETTABLE 	R4 K45 R3 ; R4["mMissionIntrinsicPoints"] := R3
	100	[4273]	GETGLOBAL	R4 K46 ; R4 := mNumberOfLoadoutSlotsUsed
	101	[4273]	ADD      	R4 R4 K47 ; R4 := R4 + 1.000000
	102	[4273]	SETGLOBALHASH	R4 K46 ; mNumberOfLoadoutSlotsUsed := R4
	103	[4276]	JMP      	121 ; PC := 121
	104	[4277]	GETGLOBAL	R4 K44 ; R4 := mPlayerMissionInfo
	105	[4277]	EQ       	1 R4 K48 ; if R4 == nil then PC := 121
	106	[4277]	JMP      	121 ; PC := 121
	107	[4277]	GETGLOBAL	R4 K44 ; R4 := mPlayerMissionInfo
	108	[4277]	GETTABLE 	R4 R4 K45 ; R4 := R4["mMissionIntrinsicPoints"]
	109	[4277]	LT       	0 K42 R4 ; if 0.000000 >= R4 then PC := 121
	110	[4277]	JMP      	121 ; PC := 121
	111	[4277]	GETGLOBAL	R4 K44 ; R4 := mPlayerMissionInfo
	112	[4277]	GETTABLE 	R4 R4 K49 ; R4 := R4["mMissionRating"]
	113	[4277]	LT       	0 K42 R4 ; if 0.000000 >= R4 then PC := 121
	114	[4277]	JMP      	121 ; PC := 121
	115	[4278]	GETGLOBAL	R4 K44 ; R4 := mPlayerMissionInfo
	116	[4278]	GETTABLE 	R4 R4 K45 ; R4 := R4["mMissionIntrinsicPoints"]
	117	[4278]	SETGLOBALHASH	R4 K43 ; mIntrinsicPoints := R4
	118	[4279]	GETGLOBAL	R4 K46 ; R4 := mNumberOfLoadoutSlotsUsed
	119	[4279]	ADD      	R4 R4 K47 ; R4 := R4 + 1.000000
	120	[4279]	SETGLOBALHASH	R4 K46 ; mNumberOfLoadoutSlotsUsed := R4
	121	[4281]	RETURN   	R0 1 ; return 

function #112 <?:4284,4411> (376 instructions, 1504 bytes at 00000160FB149730)
2 params, 31 slots, 4 upvalues, 0 locals, 62 constants, 0 functions
	1	[4290]	SETTABLE 	R0 K0 K1 ; R0["Icon"] := nil
	2	[4291]	SETTABLE 	R0 K2 K1 ; R0["Themed"] := nil
	3	[4293]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	4	[4293]	MOVE     	R8 R1 ; R8 := R1
	5	[4293]	CALL     	R7 2 2 ; R7 := R7(R8)
	6	[4293]	TEST     	R7 1 ; if R7 then PC := 178
	7	[4293]	JMP      	178 ; PC := 178
	8	[4293]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	9	[4293]	GETUPVAL 	R8 U0 ; R8 := U0
	10	[4293]	CALL     	R7 2 2 ; R7 := R7(R8)
	11	[4293]	TEST     	R7 1 ; if R7 then PC := 178
	12	[4293]	JMP      	178 ; PC := 178
	13	[4294]	GETTABLE 	R7 R1 K4 ; R7 := R1["NORMAL"]
	14	[4295]	GETTABLE 	R8 R0 K5 ; R8 := R0["LoadoutType"]
	15	[4295]	EQ       	0 R8 K7 ; if R8 ~= 1.000000 then PC := 19
	16	[4295]	JMP      	19 ; PC := 19
	17	[4296]	GETTABLE 	R7 R1 K8 ; R7 := R1["SENTINEL"]
	18	[4296]	JMP      	48 ; PC := 48
	19	[4297]	GETTABLE 	R8 R0 K5 ; R8 := R0["LoadoutType"]
	20	[4297]	EQ       	0 R8 K9 ; if R8 ~= 2.000000 then PC := 24
	21	[4297]	JMP      	24 ; PC := 24
	22	[4298]	GETTABLE 	R7 R1 K10 ; R7 := R1["ARCHWING"]
	23	[4298]	JMP      	48 ; PC := 48
	24	[4299]	GETTABLE 	R8 R0 K5 ; R8 := R0["LoadoutType"]
	25	[4299]	EQ       	0 R8 K11 ; if R8 ~= 5.000000 then PC := 29
	26	[4299]	JMP      	29 ; PC := 29
	27	[4300]	GETTABLE 	R7 R1 K12 ; R7 := R1["OPERATOR"]
	28	[4300]	JMP      	48 ; PC := 48
	29	[4301]	GETTABLE 	R8 R0 K5 ; R8 := R0["LoadoutType"]
	30	[4301]	EQ       	0 R8 K13 ; if R8 ~= 9.000000 then PC := 34
	31	[4301]	JMP      	34 ; PC := 34
	32	[4302]	GETTABLE 	R7 R1 K14 ; R7 := R1["OPERATOR_ADULT"]
	33	[4302]	JMP      	48 ; PC := 48
	34	[4303]	GETTABLE 	R8 R0 K5 ; R8 := R0["LoadoutType"]
	35	[4303]	EQ       	0 R8 K15 ; if R8 ~= 6.000000 then PC := 39
	36	[4303]	JMP      	39 ; PC := 39
	37	[4304]	GETTABLE 	R7 R1 K16 ; R7 := R1["KDRIVE"]
	38	[4304]	JMP      	48 ; PC := 48
	39	[4305]	GETTABLE 	R8 R0 K5 ; R8 := R0["LoadoutType"]
	40	[4305]	EQ       	0 R8 K17 ; if R8 ~= 8.000000 then PC := 44
	41	[4305]	JMP      	44 ; PC := 44
	42	[4306]	GETTABLE 	R7 R1 K18 ; R7 := R1["MECH"]
	43	[4306]	JMP      	48 ; PC := 48
	44	[4307]	GETTABLE 	R8 R0 K5 ; R8 := R0["LoadoutType"]
	45	[4307]	EQ       	0 R8 K19 ; if R8 ~= 7.000000 then PC := 48
	46	[4307]	JMP      	48 ; PC := 48
	47	[4308]	GETTABLE 	R7 R1 K20 ; R7 := R1["DATAKNIFE"]
	48	[4310]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	49	[4310]	MOVE     	R9 R7 ; R9 := R7
	50	[4310]	CALL     	R8 2 2 ; R8 := R8(R9)
	51	[4310]	TEST     	R8 1 ; if R8 then PC := 314
	52	[4310]	JMP      	314 ; PC := 314
	53	[4311]	GETTABLE 	R8 R0 K21 ; R8 := R0["Slot"]
	54	[4311]	ADD      	R8 R8 K7 ; R8 := R8 + 1.000000
	55	[4311]	GETTABLE 	R8 R7 R8 ; R8 := R7[R8]
	56	[4312]	GETGLOBAL	R9 K3 ; R9 := 0x7b998233
	57	[4312]	MOVE     	R10 R8 ; R10 := R8
	58	[4312]	CALL     	R9 2 2 ; R9 := R9(R10)
	59	[4312]	TEST     	R9 1 ; if R9 then PC := 314
	60	[4312]	JMP      	314 ; PC := 314
	61	[4313]	GETGLOBAL	R9 K22 ; R9 := 0xb009bbc6
	62	[4313]	GETTABLE 	R10 R8 K23 ; R10 := R8["ItemType"]
	63	[4313]	CALL     	R9 2 2 ; R9 := R9(R10)
	64	[4313]	MOVE     	R2 R9 ; R2 := R9
	65	[4314]	GETGLOBAL	R9 K24 ; R9 := 0x7ed0a956
	66	[4314]	GETTABLE 	R10 R8 K25 ; R10 := R8["FocusLens"]
	67	[4314]	CALL     	R9 2 2 ; R9 := R9(R10)
	68	[4314]	MOVE     	R3 R9 ; R3 := R9
	69	[4315]	GETTABLE 	R4 R8 K26 ; R4 := R8["Expiry"]
	70	[4317]	GETGLOBAL	R9 K3 ; R9 := 0x7b998233
	71	[4317]	MOVE     	R10 R2 ; R10 := R2
	72	[4317]	CALL     	R9 2 2 ; R9 := R9(R10)
	73	[4317]	TEST     	R9 1 ; if R9 then PC := 76
	74	[4317]	JMP      	76 ; PC := 76
	75	[4318]	GETTABLE 	R6 R8 K27 ; R6 := R8["LocTag"]
	76	[4321]	GETGLOBAL	R9 K3 ; R9 := 0x7b998233
	77	[4321]	GETTABLE 	R10 R8 K28 ; R10 := R8["ModularPartTypes"]
	78	[4321]	CALL     	R9 2 2 ; R9 := R9(R10)
	79	[4321]	TEST     	R9 1 ; if R9 then PC := 102
	80	[4321]	JMP      	102 ; PC := 102
	81	[4322]	LOADK    	R9 := 1.000000
	82	[4322]	GETTABLE 	R10 R8 K28 ; R10 := R8["ModularPartTypes"]
	83	[4322]	LEN      	R10 R10 ; R10 := # R10
	84	[4322]	LOADK    	R11 := 1.000000
	85	[4322]	FORPREP  	R9 92 ; R9 -= R11; PC := 92
	86	[4323]	GETTABLE 	R13 R8 K28 ; R13 := R8["ModularPartTypes"]
	87	[4323]	GETGLOBAL	R14 K22 ; R14 := 0xb009bbc6
	88	[4323]	GETTABLE 	R15 R8 K28 ; R15 := R8["ModularPartTypes"]
	89	[4323]	GETTABLE 	R15 R15 R12 ; R15 := R15[R12]
	90	[4323]	CALL     	R14 2 2 ; R14 := R14(R15)
	91	[4323]	SETTABLE 	R13 R12 R14 ; R13[R12] := R14
	92	[4322]	FORLOOP  	R9 86 ; R9 += R11; if R9 <= R10 then begin PC := 86; R12 := R9 end
	93	[4325]	GETUPVAL 	R13 U1 ; R13 := U1
	94	[4325]	GETTABLE 	R13 R13 K29 ; R13 := R13[0xda20bf25]
	95	[4325]	GETTABLE 	R14 R8 K28 ; R14 := R8["ModularPartTypes"]
	96	[4325]	LOADNIL  	R15 R15 ; R15 := nil
	97	[4325]	OP_LOADBOOL	R16 1 0 ; R16 := true
	98	[4325]	CALL     	R13 4 3 ; R13,R14 := R13(R14,R15,R16)
	99	[4325]	SETTABLE 	R0 K2 R14 ; R0["Themed"] := R14
	100	[4325]	SETTABLE 	R0 K0 R13 ; R0["Icon"] := R13
	101	[4325]	JMP      	109 ; PC := 109
	102	[4327]	GETUPVAL 	R13 U1 ; R13 := U1
	103	[4327]	GETTABLE 	R13 R13 K30 ; R13 := R13[0x056dcf06]
	104	[4327]	MOVE     	R14 R2 ; R14 := R2
	105	[4327]	OP_LOADBOOL	R15 1 0 ; R15 := true
	106	[4327]	CALL     	R13 3 3 ; R13,R14 := R13(R14,R15)
	107	[4327]	SETTABLE 	R0 K2 R14 ; R0["Themed"] := R14
	108	[4327]	SETTABLE 	R0 K0 R13 ; R0["Icon"] := R13
	109	[4330]	GETGLOBAL	R13 K3 ; R13 := 0x7b998233
	110	[4330]	MOVE     	R14 R2 ; R14 := R2
	111	[4330]	CALL     	R13 2 2 ; R13 := R13(R14)
	112	[4330]	TEST     	R13 1 ; if R13 then PC := 314
	113	[4330]	JMP      	314 ; PC := 314
	114	[4330]	GETTABLE 	R13 R8 K31 ; R13 := R8["WeaponUpgrades"]
	115	[4330]	EQ       	1 R13 K1 ; if R13 == nil then PC := 314
	116	[4330]	JMP      	314 ; PC := 314
	117	[4330]	SELF     	R13 R2 K32 ; R14 := R2; R13 := R2[0xf2deaf69]
	118	[4330]	GETUPVAL 	R15 U2 ; R15 := U2
	119	[4330]	GETTABLE 	R15 R15 K33 ; R15 := R15["KubrowPetSuit"]
	120	[4330]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	121	[4330]	TEST     	R13 1 ; if R13 then PC := 314
	122	[4330]	JMP      	314 ; PC := 314
	123	[4331]	GETUPVAL 	R13 U3 ; R13 := U3
	124	[4331]	GETTABLE 	R13 R13 K34 ; R13 := R13[0x06d055f9]
	125	[4331]	SELF     	R14 R2 K32 ; R15 := R2; R14 := R2[0xf2deaf69]
	126	[4331]	GETUPVAL 	R16 U2 ; R16 := U2
	127	[4331]	GETTABLE 	R16 R16 K35 ; R16 := R16["CatbrowPetSuit"]
	128	[4331]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	129	[4331]	LOADK    	R15 := 9.000000
	130	[4332]	GETUPVAL 	R16 U3 ; R16 := U3
	131	[4332]	GETTABLE 	R16 R16 K34 ; R16 := R16[0x06d055f9]
	132	[4332]	GETTABLE 	R17 R0 K21 ; R17 := R0["Slot"]
	133	[4332]	EQ       	1 R17 K36 ; if R17 == 0.000000 then PC := 136
	134	[4332]	JMP      	136 ; PC := 136
	135	[4332]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 136
	136	[4332]	OP_LOADBOOL	R17 1 0 ; R17 := true
	137	[4332]	LOADK    	R18 := 7.000000
	138	[4333]	LOADK    	R19 := 0.000000
	139	[4332]	CALL     	R16 4 0 ; R16,... := R16(R17,R18,R19)
	140	[4331]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	141	[4337]	LOADK    	R14 := 1.000000
	142	[4337]	GETTABLE 	R15 R8 K31 ; R15 := R8["WeaponUpgrades"]
	143	[4337]	LEN      	R15 R15 ; R15 := # R15
	144	[4337]	LOADK    	R16 := 1.000000
	145	[4337]	FORPREP  	R14 176 ; R14 -= R16; PC := 176
	146	[4338]	GETGLOBAL	R18 K24 ; R18 := 0x7ed0a956
	147	[4338]	GETTABLE 	R19 R8 K31 ; R19 := R8["WeaponUpgrades"]
	148	[4338]	GETTABLE 	R19 R19 R17 ; R19 := R19[R17]
	149	[4338]	CALL     	R18 2 2 ; R18 := R18(R19)
	150	[4339]	GETGLOBAL	R19 K3 ; R19 := 0x7b998233
	151	[4339]	MOVE     	R20 R18 ; R20 := R18
	152	[4339]	CALL     	R19 2 2 ; R19 := R19(R20)
	153	[4339]	TEST     	R19 1 ; if R19 then PC := 176
	154	[4339]	JMP      	176 ; PC := 176
	155	[4339]	SELF     	R19 R18 K32 ; R20 := R18; R19 := R18[0xf2deaf69]
	156	[4339]	GETGLOBAL	R21 K37 ; R21 := gLotusSuitCustomizationType
	157	[4339]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	158	[4339]	TEST     	R19 0 ; if not R19 then PC := 176
	159	[4339]	JMP      	176 ; PC := 176
	160	[4340]	GETUPVAL 	R19 U0 ; R19 := U0
	161	[4340]	SELF     	R19 R19 K38 ; R20 := R19; R19 := R19[0x105074fb]
	162	[4340]	MOVE     	R21 R18 ; R21 := R18
	163	[4340]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	164	[4341]	GETGLOBAL	R20 K3 ; R20 := 0x7b998233
	165	[4341]	MOVE     	R21 R19 ; R21 := R19
	166	[4341]	CALL     	R20 2 2 ; R20 := R20(R21)
	167	[4341]	TEST     	R20 1 ; if R20 then PC := 176
	168	[4341]	JMP      	176 ; PC := 176
	169	[4341]	SELF     	R20 R19 K39 ; R21 := R19; R20 := R19[0x06e65678]
	170	[4341]	MOVE     	R22 R13 ; R22 := R13
	171	[4341]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	172	[4341]	TEST     	R20 0 ; if not R20 then PC := 176
	173	[4341]	JMP      	176 ; PC := 176
	174	[4342]	MOVE     	R5 R19 ; R5 := R19
	175	[4343]	JMP      	314 ; PC := 314
	176	[4337]	FORLOOP  	R14 146 ; R14 += R16; if R14 <= R15 then begin PC := 146; R17 := R14 end
	177	[4349]	JMP      	314 ; PC := 314
	178	[4350]	GETGLOBAL	R20 K3 ; R20 := 0x7b998233
	179	[4350]	GETTABLE 	R21 R0 K40 ; R21 := R0["InventoryController"]
	180	[4350]	CALL     	R20 2 2 ; R20 := R20(R21)
	181	[4350]	TEST     	R20 0 ; if not R20 then PC := 188
	182	[4350]	JMP      	188 ; PC := 188
	183	[4350]	GETGLOBAL	R20 K3 ; R20 := 0x7b998233
	184	[4350]	GETTABLE 	R21 R0 K41 ; R21 := R0["ItemRes"]
	185	[4350]	CALL     	R20 2 2 ; R20 := R20(R21)
	186	[4350]	TEST     	R20 1 ; if R20 then PC := 314
	187	[4350]	JMP      	314 ; PC := 314
	188	[4351]	GETGLOBAL	R20 K3 ; R20 := 0x7b998233
	189	[4351]	GETTABLE 	R21 R0 K41 ; R21 := R0["ItemRes"]
	190	[4351]	CALL     	R20 2 2 ; R20 := R20(R21)
	191	[4351]	TEST     	R20 1 ; if R20 then PC := 195
	192	[4351]	JMP      	195 ; PC := 195
	193	[4352]	GETTABLE 	R2 R0 K41 ; R2 := R0["ItemRes"]
	194	[4352]	JMP      	204 ; PC := 204
	195	[4354]	GETTABLE 	R20 R0 K40 ; R20 := R0["InventoryController"]
	196	[4354]	SELF     	R20 R20 K42 ; R21 := R20; R20 := R20[0x2783de72]
	197	[4354]	GETGLOBAL	R22 K43 ; R22 := mGameData
	198	[4354]	SELF     	R22 R22 K44 ; R23 := R22; R22 := R22[0x62c81b76]
	199	[4354]	CALL     	R22 2 2 ; R22 := R22(R23)
	200	[4354]	GETTABLE 	R23 R0 K5 ; R23 := R0["LoadoutType"]
	201	[4354]	GETTABLE 	R24 R0 K21 ; R24 := R0["Slot"]
	202	[4354]	CALL     	R20 5 2 ; R20 := R20(R21,R22,R23,R24)
	203	[4354]	MOVE     	R2 R20 ; R2 := R20
	204	[4356]	GETGLOBAL	R20 K3 ; R20 := 0x7b998233
	205	[4356]	MOVE     	R21 R2 ; R21 := R2
	206	[4356]	CALL     	R20 2 2 ; R20 := R20(R21)
	207	[4356]	TEST     	R20 1 ; if R20 then PC := 254
	208	[4356]	JMP      	254 ; PC := 254
	209	[4356]	SELF     	R20 R2 K32 ; R21 := R2; R20 := R2[0xf2deaf69]
	210	[4356]	GETUPVAL 	R22 U2 ; R22 := U2
	211	[4356]	GETTABLE 	R22 R22 K33 ; R22 := R22["KubrowPetSuit"]
	212	[4356]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	213	[4356]	TEST     	R20 1 ; if R20 then PC := 254
	214	[4356]	JMP      	254 ; PC := 254
	215	[4357]	SELF     	R20 R2 K45 ; R21 := R2; R20 := R2[0x53ef4cf8]
	216	[4357]	CALL     	R20 2 2 ; R20 := R20(R21)
	217	[4357]	TEST     	R20 0 ; if not R20 then PC := 222
	218	[4357]	JMP      	222 ; PC := 222
	219	[4358]	SELF     	R20 R2 K45 ; R21 := R2; R20 := R2[0x53ef4cf8]
	220	[4358]	CALL     	R20 2 2 ; R20 := R20(R21)
	221	[4358]	MOVE     	R2 R20 ; R2 := R20
	222	[4361]	GETUPVAL 	R20 U3 ; R20 := U3
	223	[4361]	GETTABLE 	R20 R20 K34 ; R20 := R20[0x06d055f9]
	224	[4361]	SELF     	R21 R2 K32 ; R22 := R2; R21 := R2[0xf2deaf69]
	225	[4361]	GETUPVAL 	R23 U2 ; R23 := U2
	226	[4361]	GETTABLE 	R23 R23 K35 ; R23 := R23["CatbrowPetSuit"]
	227	[4361]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	228	[4361]	LOADK    	R22 := 9.000000
	229	[4362]	GETUPVAL 	R23 U3 ; R23 := U3
	230	[4362]	GETTABLE 	R23 R23 K34 ; R23 := R23[0x06d055f9]
	231	[4362]	GETTABLE 	R24 R0 K21 ; R24 := R0["Slot"]
	232	[4362]	EQ       	1 R24 K36 ; if R24 == 0.000000 then PC := 235
	233	[4362]	JMP      	235 ; PC := 235
	234	[4362]	OP_LOADBOOL	R24 0 1 ; R24 := false; PC := 235
	235	[4362]	OP_LOADBOOL	R24 1 0 ; R24 := true
	236	[4362]	LOADK    	R25 := 7.000000
	237	[4362]	LOADK    	R26 := 0.000000
	238	[4362]	CALL     	R23 4 0 ; R23,... := R23(R24,R25,R26)
	239	[4361]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	240	[4364]	SELF     	R21 R2 K46 ; R22 := R2; R21 := R2[0x68d708a7]
	241	[4364]	CALL     	R21 2 2 ; R21 := R21(R22)
	242	[4365]	SELF     	R22 R21 K47 ; R23 := R21; R22 := R21[0x2540510f]
	243	[4365]	MOVE     	R24 R20 ; R24 := R20
	244	[4365]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	245	[4366]	GETGLOBAL	R23 K3 ; R23 := 0x7b998233
	246	[4366]	MOVE     	R24 R22 ; R24 := R22
	247	[4366]	CALL     	R23 2 2 ; R23 := R23(R24)
	248	[4366]	TEST     	R23 1 ; if R23 then PC := 254
	249	[4366]	JMP      	254 ; PC := 254
	250	[4367]	GETGLOBAL	R23 K22 ; R23 := 0xb009bbc6
	251	[4367]	MOVE     	R24 R22 ; R24 := R22
	252	[4367]	CALL     	R23 2 2 ; R23 := R23(R24)
	253	[4367]	MOVE     	R5 R23 ; R5 := R23
	254	[4371]	LOADNIL  	R23 R23 ; R23 := nil
	255	[4372]	GETGLOBAL	R24 K48 ; R24 := 0x89326c93
	256	[4372]	SELF     	R24 R24 K49 ; R25 := R24; R24 := R24[0xfb64e76c]
	257	[4372]	CALL     	R24 2 2 ; R24 := R24(R25)
	258	[4373]	GETGLOBAL	R25 K3 ; R25 := 0x7b998233
	259	[4373]	MOVE     	R26 R24 ; R26 := R24
	260	[4373]	CALL     	R25 2 2 ; R25 := R25(R26)
	261	[4373]	TEST     	R25 1 ; if R25 then PC := 266
	262	[4373]	JMP      	266 ; PC := 266
	263	[4374]	SELF     	R25 R24 K44 ; R26 := R24; R25 := R24[0x62c81b76]
	264	[4374]	CALL     	R25 2 2 ; R25 := R25(R26)
	265	[4374]	MOVE     	R23 R25 ; R23 := R25
	266	[4377]	EQ       	0 R23 K1 ; if R23 ~= nil then PC := 272
	267	[4377]	JMP      	272 ; PC := 272
	268	[4378]	GETGLOBAL	R25 K43 ; R25 := mGameData
	269	[4378]	SELF     	R25 R25 K44 ; R26 := R25; R25 := R25[0x62c81b76]
	270	[4378]	CALL     	R25 2 2 ; R25 := R25(R26)
	271	[4378]	MOVE     	R23 R25 ; R23 := R25
	272	[4381]	SELF     	R25 R23 K50 ; R26 := R23; R25 := R23[0xb61abfd2]
	273	[4381]	GETTABLE 	R27 R0 K5 ; R27 := R0["LoadoutType"]
	274	[4381]	GETTABLE 	R28 R0 K21 ; R28 := R0["Slot"]
	275	[4381]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	276	[4382]	GETTABLE 	R3 R25 K51 ; R3 := R25["mFocusLens"]
	277	[4384]	GETTABLE 	R26 R0 K21 ; R26 := R0["Slot"]
	278	[4384]	GETGLOBAL	R27 K6 ; R27 := 0x6c97a788
	279	[4384]	GETTABLE 	R27 R27 K52 ; R27 := R27["NUM_NORMAL_LOADOUT_SLOTS"]
	280	[4384]	LE       	1 R27 R26 ; if R27 <= R26 then PC := 285
	281	[4384]	JMP      	285 ; PC := 285
	282	[4384]	GETTABLE 	R26 R0 K5 ; R26 := R0["LoadoutType"]
	283	[4384]	EQ       	0 R26 K17 ; if R26 ~= 8.000000 then PC := 314
	284	[4384]	JMP      	314 ; PC := 314
	285	[4385]	GETGLOBAL	R26 K53 ; R26 := 0x88efc25e
	286	[4385]	GETTABLE 	R27 R25 K54 ; R27 := R25["mItemType"]
	287	[4385]	CALL     	R26 2 2 ; R26 := R26(R27)
	288	[4385]	SETTABLE 	R0 K23 R26 ; R0["ItemType"] := R26
	289	[4386]	GETGLOBAL	R26 K3 ; R26 := 0x7b998233
	290	[4386]	MOVE     	R27 R2 ; R27 := R2
	291	[4386]	CALL     	R26 2 2 ; R26 := R26(R27)
	292	[4386]	TEST     	R26 0 ; if not R26 then PC := 314
	293	[4386]	JMP      	314 ; PC := 314
	294	[4386]	GETGLOBAL	R26 K3 ; R26 := 0x7b998233
	295	[4386]	GETTABLE 	R27 R0 K23 ; R27 := R0["ItemType"]
	296	[4386]	CALL     	R26 2 2 ; R26 := R26(R27)
	297	[4386]	TEST     	R26 1 ; if R26 then PC := 314
	298	[4386]	JMP      	314 ; PC := 314
	299	[4387]	GETGLOBAL	R26 K22 ; R26 := 0xb009bbc6
	300	[4387]	GETTABLE 	R27 R0 K23 ; R27 := R0["ItemType"]
	301	[4387]	CALL     	R26 2 2 ; R26 := R26(R27)
	302	[4388]	SELF     	R27 R26 K55 ; R28 := R26; R27 := R26[0xd3a9d01f]
	303	[4388]	CALL     	R27 2 2 ; R27 := R27(R28)
	304	[4388]	SELF     	R27 R27 K56 ; R28 := R27; R27 := R27[0x6d604ba7]
	305	[4388]	CALL     	R27 2 2 ; R27 := R27(R28)
	306	[4388]	MOVE     	R6 R27 ; R6 := R27
	307	[4389]	GETUPVAL 	R27 U1 ; R27 := U1
	308	[4389]	GETTABLE 	R27 R27 K30 ; R27 := R27[0x056dcf06]
	309	[4389]	MOVE     	R28 R26 ; R28 := R26
	310	[4389]	OP_LOADBOOL	R29 1 0 ; R29 := true
	311	[4389]	CALL     	R27 3 3 ; R27,R28 := R27(R28,R29)
	312	[4389]	SETTABLE 	R0 K2 R28 ; R0["Themed"] := R28
	313	[4389]	SETTABLE 	R0 K0 R27 ; R0["Icon"] := R27
	314	[4394]	SETTABLE 	R0 K57 R2 ; R0["Item"] := R2
	315	[4395]	GETGLOBAL	R27 K3 ; R27 := 0x7b998233
	316	[4395]	GETTABLE 	R28 R0 K23 ; R28 := R0["ItemType"]
	317	[4395]	CALL     	R27 2 2 ; R27 := R27(R28)
	318	[4395]	TEST     	R27 0 ; if not R27 then PC := 324
	319	[4395]	JMP      	324 ; PC := 324
	320	[4396]	GETGLOBAL	R27 K53 ; R27 := 0x88efc25e
	321	[4396]	MOVE     	R28 R2 ; R28 := R2
	322	[4396]	CALL     	R27 2 2 ; R27 := R27(R28)
	323	[4396]	SETTABLE 	R0 K23 R27 ; R0["ItemType"] := R27
	324	[4399]	GETGLOBAL	R27 K3 ; R27 := 0x7b998233
	325	[4399]	MOVE     	R28 R5 ; R28 := R5
	326	[4399]	CALL     	R27 2 2 ; R27 := R27(R28)
	327	[4399]	TEST     	R27 1 ; if R27 then PC := 337
	328	[4399]	JMP      	337 ; PC := 337
	329	[4400]	GETUPVAL 	R27 U1 ; R27 := U1
	330	[4400]	GETTABLE 	R27 R27 K30 ; R27 := R27[0x056dcf06]
	331	[4400]	MOVE     	R28 R5 ; R28 := R5
	332	[4400]	OP_LOADBOOL	R29 1 0 ; R29 := true
	333	[4400]	CALL     	R27 3 3 ; R27,R28 := R27(R28,R29)
	334	[4400]	SETTABLE 	R0 K2 R28 ; R0["Themed"] := R28
	335	[4400]	SETTABLE 	R0 K0 R27 ; R0["Icon"] := R27
	336	[4400]	JMP      	360 ; PC := 360
	337	[4401]	GETGLOBAL	R27 K3 ; R27 := 0x7b998233
	338	[4401]	MOVE     	R28 R2 ; R28 := R2
	339	[4401]	CALL     	R27 2 2 ; R27 := R27(R28)
	340	[4401]	TEST     	R27 1 ; if R27 then PC := 360
	341	[4401]	JMP      	360 ; PC := 360
	342	[4401]	SELF     	R27 R2 K32 ; R28 := R2; R27 := R2[0xf2deaf69]
	343	[4401]	GETGLOBAL	R29 K58 ; R29 := gLotusWeaponType
	344	[4401]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	345	[4401]	TEST     	R27 0 ; if not R27 then PC := 360
	346	[4401]	JMP      	360 ; PC := 360
	347	[4401]	SELF     	R27 R2 K59 ; R28 := R2; R27 := R2[0x81f3a598]
	348	[4401]	CALL     	R27 2 2 ; R27 := R27(R28)
	349	[4401]	TEST     	R27 0 ; if not R27 then PC := 360
	350	[4401]	JMP      	360 ; PC := 360
	351	[4402]	GETUPVAL 	R27 U1 ; R27 := U1
	352	[4402]	GETTABLE 	R27 R27 K29 ; R27 := R27[0xda20bf25]
	353	[4402]	SELF     	R28 R2 K60 ; R29 := R2; R28 := R2[0xde7a1002]
	354	[4402]	CALL     	R28 2 2 ; R28 := R28(R29)
	355	[4402]	LOADNIL  	R29 R29 ; R29 := nil
	356	[4402]	OP_LOADBOOL	R30 1 0 ; R30 := true
	357	[4402]	CALL     	R27 4 3 ; R27,R28 := R27(R28,R29,R30)
	358	[4402]	SETTABLE 	R0 K2 R28 ; R0["Themed"] := R28
	359	[4402]	SETTABLE 	R0 K0 R27 ; R0["Icon"] := R27
	360	[4404]	SETTABLE 	R0 K61 R3 ; R0[0xc8802016] := R3
	361	[4405]	SETTABLE 	R0 K26 R4 ; R0["Expiry"] := R4
	362	[4406]	TEST     	R6 0 ; if not R6 then PC := 366
	363	[4406]	JMP      	366 ; PC := 366
	364	[4407]	SETTABLE 	R0 K27 R6 ; R0["LocTag"] := R6
	365	[4407]	JMP      	376 ; PC := 376
	366	[4408]	GETGLOBAL	R27 K3 ; R27 := 0x7b998233
	367	[4408]	MOVE     	R28 R2 ; R28 := R2
	368	[4408]	CALL     	R27 2 2 ; R27 := R27(R28)
	369	[4408]	TEST     	R27 1 ; if R27 then PC := 376
	370	[4408]	JMP      	376 ; PC := 376
	371	[4409]	SELF     	R27 R2 K55 ; R28 := R2; R27 := R2[0xd3a9d01f]
	372	[4409]	CALL     	R27 2 2 ; R27 := R27(R28)
	373	[4409]	SELF     	R27 R27 K56 ; R28 := R27; R27 := R27[0x6d604ba7]
	374	[4409]	CALL     	R27 2 2 ; R27 := R27(R28)
	375	[4409]	SETTABLE 	R0 K27 R27 ; R0["LocTag"] := R27
	376	[4411]	RETURN   	R0 1 ; return 

function #113 <?:4413,4458> (119 instructions, 476 bytes at 00000160FB14A870)
3 params, 16 slots, 3 upvalues, 0 locals, 31 constants, 0 functions
	1	[4414]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[4414]	GETTABLE 	R4 R0 K1 ; R4 := R0["Lens"]
	3	[4414]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[4414]	TEST     	R3 0 ; if not R3 then PC := 8
	5	[4414]	JMP      	8 ; PC := 8
	6	[4415]	LOADK    	R3 := 0.000000
	7	[4415]	RETURN   	R3 2 ; return R3 
	8	[4418]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[4418]	GETTABLE 	R3 R3 K2 ; R3 := R3[0x12afd099]
	10	[4418]	GETTABLE 	R4 R0 K1 ; R4 := R0["Lens"]
	11	[4418]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[4419]	GETGLOBAL	R4 K3 ; R4 := mPlayerMissionInfo
	13	[4419]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x9de25d1e]
	14	[4419]	MOVE     	R6 R1 ; R6 := R1
	15	[4419]	MOVE     	R7 R2 ; R7 := R2
	16	[4419]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	17	[4421]	EQ       	0 R4 K5 ; if R4 ~= 0.000000 then PC := 21
	18	[4421]	JMP      	21 ; PC := 21
	19	[4422]	LOADK    	R5 := 0.000000
	20	[4422]	RETURN   	R5 2 ; return R5 
	21	[4425]	GETUPVAL 	R5 U1 ; R5 := U1
	22	[4425]	GETTABLE 	R6 R3 K6 ; R6 := R3["PolarityType"]
	23	[4425]	GETTABLE 	R5 R5 R6 ; R5 := R5[R6]
	24	[4426]	NEWTABLE 	R6 0 2 ; R6 := {}
	25	[4426]	NEWTABLE 	R7 1 0 ; R7 := {}
	26	[4426]	LOADK    	R8 K8 ; R8 := "+"
	27	[4426]	GETUPVAL 	R9 U2 ; R9 := U2
	28	[4426]	GETTABLE 	R9 R9 K9 ; R9 := R9[0x1142c7a8]
	29	[4426]	MOVE     	R10 R4 ; R10 := R4
	30	[4426]	CALL     	R9 2 2 ; R9 := R9(R10)
	31	[4426]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	32	[4426]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	33	[4426]	SETTABLE 	R6 K7 R7 ; R6["Desc"] := R7
	34	[4426]	GETTABLE 	R7 R0 K10 ; R7 := R0["ItemType"]
	35	[4426]	SETTABLE 	R6 K10 R7 ; R6["ItemType"] := R7
	36	[4427]	GETTABLE 	R7 R0 K11 ; R7 := R0["LocTag"]
	37	[4427]	EQ       	1 R7 K12 ; if R7 == nil then PC := 42
	38	[4427]	JMP      	42 ; PC := 42
	39	[4428]	GETTABLE 	R7 R0 K11 ; R7 := R0["LocTag"]
	40	[4428]	SETTABLE 	R6 K13 R7 ; R6["Label"] := R7
	41	[4428]	JMP      	53 ; PC := 53
	42	[4429]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	43	[4429]	GETTABLE 	R8 R0 K10 ; R8 := R0["ItemType"]
	44	[4429]	CALL     	R7 2 2 ; R7 := R7(R8)
	45	[4429]	TEST     	R7 1 ; if R7 then PC := 53
	46	[4429]	JMP      	53 ; PC := 53
	47	[4430]	GETGLOBAL	R7 K14 ; R7 := 0x64fb1586
	48	[4430]	GETTABLE 	R8 R0 K15 ; R8 := R0["Item"]
	49	[4430]	SELF     	R8 R8 K16 ; R9 := R8; R8 := R8[0xd3a9d01f]
	50	[4430]	CALL     	R8 2 0 ; R8,... := R8(R9)
	51	[4430]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	52	[4430]	SETTABLE 	R6 K13 R7 ; R6["Label"] := R7
	53	[4432]	GETGLOBAL	R7 K17 ; R7 := 0x6c97a788
	54	[4432]	GETTABLE 	R7 R7 K18 ; R7 := R7[0x834628e8]
	55	[4432]	GETTABLE 	R8 R6 K13 ; R8 := R6["Label"]
	56	[4432]	CALL     	R7 2 2 ; R7 := R7(R8)
	57	[4433]	EQ       	0 R7 K19 ; if R7 ~= "" then PC := 65
	58	[4433]	JMP      	65 ; PC := 65
	59	[4434]	GETGLOBAL	R8 K20 ; R8 := 0x603636ad
	60	[4434]	GETTABLE 	R9 R6 K13 ; R9 := R6["Label"]
	61	[4434]	NEWTABLE 	R10 0 0 ; R10 := {}
	62	[4434]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	63	[4434]	SETTABLE 	R6 K13 R8 ; R6["Label"] := R8
	64	[4434]	JMP      	66 ; PC := 66
	65	[4436]	SETTABLE 	R6 K13 R7 ; R6["Label"] := R7
	66	[4438]	GETGLOBAL	R8 K21 ; R8 := 0x7f5022cf
	67	[4438]	GETTABLE 	R8 R8 K22 ; R8 := R8[0x3f3e4d12]
	68	[4438]	GETTABLE 	R9 R6 K13 ; R9 := R6["Label"]
	69	[4438]	CALL     	R8 2 2 ; R8 := R8(R9)
	70	[4438]	SETTABLE 	R6 K13 R8 ; R6["Label"] := R8
	71	[4439]	EQ       	0 R5 K12 ; if R5 ~= nil then PC := 89
	72	[4439]	JMP      	89 ; PC := 89
	73	[4440]	NEWTABLE 	R8 0 4 ; R8 := {}
	74	[4440]	SETTABLE 	R8 K23 R4 ; R8["FocusGained"] := R4
	75	[4440]	SETTABLE 	R8 K24 R3 ; R8["PolarityInfo"] := R3
	76	[4440]	GETGLOBAL	R9 K25 ; R9 := 0xb009bbc6
	77	[4440]	GETTABLE 	R10 R0 K1 ; R10 := R0["Lens"]
	78	[4440]	CALL     	R9 2 2 ; R9 := R9(R10)
	79	[4440]	SETTABLE 	R8 K1 R9 ; R8["Lens"] := R9
	80	[4440]	NEWTABLE 	R9 1 0 ; R9 := {}
	81	[4440]	MOVE     	R10 R6 ; R10 := R6
	82	[4440]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	83	[4440]	SETTABLE 	R8 K26 R9 ; R8["ListItems"] := R9
	84	[4440]	MOVE     	R5 R8 ; R5 := R8
	85	[4441]	GETUPVAL 	R8 U1 ; R8 := U1
	86	[4441]	GETTABLE 	R9 R3 K6 ; R9 := R3["PolarityType"]
	87	[4441]	SETTABLE 	R8 R9 R5 ; R8[R9] := R5
	88	[4441]	JMP      	118 ; PC := 118
	89	[4443]	GETGLOBAL	R8 K27 ; R8 := 0xc8802016
	90	[4443]	GETTABLE 	R9 R5 K26 ; R9 := R5["ListItems"]
	91	[4443]	CALL     	R8 2 4 ; R8,R9,R10 := R8(R9)
	92	[4443]	JMP      	98 ; PC := 98
	93	[4444]	GETTABLE 	R13 R12 K10 ; R13 := R12["ItemType"]
	94	[4444]	GETTABLE 	R14 R0 K10 ; R14 := R0["ItemType"]
	95	[4444]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 98
	96	[4444]	JMP      	98 ; PC := 98
	97	[4445]	RETURN   	R4 2 ; return R4 
	98	[4443]	TFORLOOP 	R8 2 ; R11,R12 := R8(R9,R10); if R11 ~= nil then begin PC = 93; R10 := R11 end
	99	[4446]	JMP      	93 ; PC := 93
	100	[4449]	GETTABLE 	R13 R5 K24 ; R13 := R5["PolarityInfo"]
	101	[4449]	GETTABLE 	R13 R13 K28 ; R13 := R13["LensTier"]
	102	[4449]	GETTABLE 	R14 R3 K28 ; R14 := R3["LensTier"]
	103	[4449]	LT       	0 R13 R14 ; if R13 >= R14 then PC := 110
	104	[4449]	JMP      	110 ; PC := 110
	105	[4450]	SETTABLE 	R5 K24 R3 ; R5["PolarityInfo"] := R3
	106	[4451]	GETGLOBAL	R13 K25 ; R13 := 0xb009bbc6
	107	[4451]	GETTABLE 	R14 R0 K1 ; R14 := R0["Lens"]
	108	[4451]	CALL     	R13 2 2 ; R13 := R13(R14)
	109	[4451]	SETTABLE 	R5 K1 R13 ; R5["Lens"] := R13
	110	[4453]	GETTABLE 	R13 R5 K23 ; R13 := R5["FocusGained"]
	111	[4453]	ADD      	R13 R13 R4 ; R13 := R13 + R4
	112	[4453]	SETTABLE 	R5 K23 R13 ; R5["FocusGained"] := R13
	113	[4454]	GETGLOBAL	R13 K29 ; R13 := 0x33bdd652
	114	[4454]	GETTABLE 	R13 R13 K30 ; R13 := R13[0x23d5322f]
	115	[4454]	GETTABLE 	R14 R5 K26 ; R14 := R5["ListItems"]
	116	[4454]	MOVE     	R15 R6 ; R15 := R6
	117	[4454]	CALL     	R13 3 1 ; R13(R14,R15)
	118	[4457]	RETURN   	R4 2 ; return R4 
	119	[4458]	RETURN   	R0 1 ; return 

function #114 <?:4460,4487> (93 instructions, 372 bytes at 00000160FB14AEE0)
4 params, 17 slots, 5 upvalues, 0 locals, 28 constants, 0 functions
	1	[4461]	NEWTABLE 	R4 0 4 ; R4 := {}
	2	[4461]	SETTABLE 	R4 K0 R0 ; R4["LoadoutType"] := R0
	3	[4461]	SETTABLE 	R4 K1 R1 ; R4["Slot"] := R1
	4	[4461]	SETTABLE 	R4 K2 R2 ; R4["InventoryController"] := R2
	5	[4461]	SETTABLE 	R4 K3 R3 ; R4["ItemRes"] := R3
	6	[4462]	GETUPVAL 	R5 U0 ; R5 := U0
	7	[4462]	MOVE     	R6 R4 ; R6 := R4
	8	[4462]	GETGLOBAL	R7 K4 ; R7 := mAffinityGrid
	9	[4462]	GETTABLE 	R7 R7 K5 ; R7 := R7["ArchivedLoadout"]
	10	[4462]	CALL     	R5 3 1 ; R5(R6,R7)
	11	[4463]	GETGLOBAL	R5 K6 ; R5 := 0x7b998233
	12	[4463]	GETTABLE 	R6 R4 K7 ; R6 := R4["ItemType"]
	13	[4463]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[4463]	TEST     	R5 1 ; if R5 then PC := 91
	15	[4463]	JMP      	91 ; PC := 91
	16	[4464]	GETGLOBAL	R5 K8 ; R5 := 0xc8802016
	17	[4464]	GETGLOBAL	R6 K4 ; R6 := mAffinityGrid
	18	[4464]	GETTABLE 	R6 R6 K9 ; R6 := R6["mElements"]
	19	[4464]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	20	[4464]	JMP      	27 ; PC := 27
	21	[4465]	GETTABLE 	R10 R9 K7 ; R10 := R9["ItemType"]
	22	[4465]	GETTABLE 	R11 R4 K7 ; R11 := R4["ItemType"]
	23	[4465]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 27
	24	[4465]	JMP      	27 ; PC := 27
	25	[4466]	LOADNIL  	R10 R10 ; R10 := nil
	26	[4466]	RETURN   	R10 2 ; return R10 
	27	[4464]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 21; R7 := R8 end
	28	[4467]	JMP      	21 ; PC := 21
	29	[4469]	GETUPVAL 	R10 U1 ; R10 := U1
	30	[4469]	MOVE     	R11 R0 ; R11 := R0
	31	[4469]	MOVE     	R12 R1 ; R12 := R1
	32	[4469]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	33	[4469]	TEST     	R10 1 ; if R10 then PC := 39
	34	[4469]	JMP      	39 ; PC := 39
	35	[4469]	GETGLOBAL	R10 K4 ; R10 := mAffinityGrid
	36	[4469]	GETTABLE 	R10 R10 K10 ; R10 := R10["PlainsFreeRoamArchwing"]
	37	[4469]	TEST     	R10 0 ; if not R10 then PC := 91
	38	[4469]	JMP      	91 ; PC := 91
	39	[4470]	GETUPVAL 	R10 U2 ; R10 := U2
	40	[4470]	MOVE     	R11 R4 ; R11 := R4
	41	[4470]	MOVE     	R12 R0 ; R12 := R0
	42	[4470]	MOVE     	R13 R1 ; R13 := R1
	43	[4470]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	44	[4472]	GETGLOBAL	R10 K12 ; R10 := mPlayerMissionInfo
	45	[4472]	SELF     	R10 R10 K13 ; R11 := R10; R10 := R10[0x438225b2]
	46	[4472]	MOVE     	R12 R0 ; R12 := R0
	47	[4472]	MOVE     	R13 R1 ; R13 := R1
	48	[4472]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	49	[4472]	SETTABLE 	R4 K11 R10 ; R4["XpGain"] := R10
	50	[4473]	GETTABLE 	R10 R4 K11 ; R10 := R4["XpGain"]
	51	[4473]	LT       	0 K14 R10 ; if 0.000000 >= R10 then PC := 91
	52	[4473]	JMP      	91 ; PC := 91
	53	[4474]	GETGLOBAL	R10 K12 ; R10 := mPlayerMissionInfo
	54	[4474]	SELF     	R10 R10 K16 ; R11 := R10; R10 := R10[0x910ed20a]
	55	[4474]	MOVE     	R12 R0 ; R12 := R0
	56	[4474]	MOVE     	R13 R1 ; R13 := R1
	57	[4474]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	58	[4474]	SETTABLE 	R4 K15 R10 ; R4["StartXp"] := R10
	59	[4475]	GETUPVAL 	R10 U3 ; R10 := U3
	60	[4475]	GETTABLE 	R10 R10 K18 ; R10 := R10[0x06d055f9]
	61	[4475]	GETGLOBAL	R11 K19 ; R11 := mMissionFailed
	62	[4475]	LOADK    	R12 := 0.000000
	63	[4475]	GETGLOBAL	R13 K12 ; R13 := mPlayerMissionInfo
	64	[4475]	SELF     	R13 R13 K20 ; R14 := R13; R13 := R13[0x7d0d1635]
	65	[4475]	MOVE     	R15 R0 ; R15 := R0
	66	[4475]	MOVE     	R16 R1 ; R16 := R1
	67	[4475]	CALL     	R13 4 0 ; R13,... := R13(R14,R15,R16)
	68	[4475]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	69	[4475]	SETTABLE 	R4 K17 R10 ; R4["XpBonus"] := R10
	70	[4476]	SETTABLE 	R4 K21 K22 ; R4["Count"] := 1.000000
	71	[4478]	GETGLOBAL	R10 K23 ; R10 := 0xa94df70b
	72	[4478]	SELF     	R10 R10 K24 ; R11 := R10; R10 := R10[0x757f0100]
	73	[4478]	GETTABLE 	R12 R4 K7 ; R12 := R4["ItemType"]
	74	[4478]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	75	[4479]	GETGLOBAL	R11 K25 ; R11 := 0x5bced4c4
	76	[4479]	GETTABLE 	R11 R11 K26 ; R11 := R11[0xac1b386a]
	77	[4479]	MOVE     	R12 R10 ; R12 := R10
	78	[4479]	GETUPVAL 	R13 U4 ; R13 := U4
	79	[4479]	GETTABLE 	R14 R4 K15 ; R14 := R4["StartXp"]
	80	[4479]	GETTABLE 	R15 R4 K7 ; R15 := R4["ItemType"]
	81	[4479]	CALL     	R13 3 0 ; R13,... := R13(R14,R15)
	82	[4479]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	83	[4480]	LT       	0 R11 R10 ; if R11 >= R10 then PC := 91
	84	[4480]	JMP      	91 ; PC := 91
	85	[4481]	GETGLOBAL	R12 K4 ; R12 := mAffinityGrid
	86	[4481]	SELF     	R12 R12 K27 ; R13 := R12; R12 := R12[0xbad4316f]
	87	[4481]	MOVE     	R14 R4 ; R14 := R4
	88	[4481]	OP_LOADBOOL	R15 1 0 ; R15 := true
	89	[4481]	TAILCALL 	R12 4 0 ; R12,... := R12(R13,R14,R15)
	90	[4481]	RETURN   	R12 0 ; return R12,... 
	91	[4486]	LOADNIL  	R12 R12 ; R12 := nil
	92	[4486]	RETURN   	R12 2 ; return R12 
	93	[4487]	RETURN   	R0 1 ; return 

function #115 <?:4489,4522> (78 instructions, 312 bytes at 00000160FB234660)
2 params, 15 slots, 3 upvalues, 0 locals, 32 constants, 0 functions
	1	[4490]	NEWTABLE 	R2 0 5 ; R2 := {}
	2	[4491]	SETTABLE 	R2 K1 K2 ; R2[1.000000] := "/Lotus/Upgrades/Focus/AttackLens"
	3	[4492]	SETTABLE 	R2 K3 K4 ; R2[2.000000] := "/Lotus/Upgrades/Focus/DefenseLens"
	4	[4493]	SETTABLE 	R2 K5 K6 ; R2[3.000000] := "/Lotus/Upgrades/Focus/TacticLens"
	5	[4494]	SETTABLE 	R2 K7 K8 ; R2[4.000000] := "/Lotus/Upgrades/Focus/PowerLens"
	6	[4495]	SETTABLE 	R2 K9 K10 ; R2[7.000000] := "/Lotus/Upgrades/Focus/WardLens"
	7	[4498]	LOADK    	R3 := 0.000000
	8	[4498]	LOADK    	R4 := 9.000000
	9	[4498]	LOADK    	R5 := 1.000000
	10	[4498]	FORPREP  	R3 75 ; R3 -= R5; PC := 75
	11	[4499]	GETGLOBAL	R7 K11 ; R7 := mPlayerMissionInfo
	12	[4499]	SELF     	R7 R7 K12 ; R8 := R7; R7 := R7[0x7db2e929]
	13	[4499]	MOVE     	R9 R6 ; R9 := R6
	14	[4499]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	15	[4500]	LT       	0 K13 R7 ; if 0.000000 >= R7 then PC := 75
	16	[4500]	JMP      	75 ; PC := 75
	17	[4501]	GETGLOBAL	R8 K14 ; R8 := 0x7b998233
	18	[4501]	GETTABLE 	R9 R2 R6 ; R9 := R2[R6]
	19	[4501]	CALL     	R8 2 2 ; R8 := R8(R9)
	20	[4501]	TEST     	R8 1 ; if R8 then PC := 75
	21	[4501]	JMP      	75 ; PC := 75
	22	[4502]	NEWTABLE 	R8 0 1 ; R8 := {}
	23	[4502]	GETGLOBAL	R9 K16 ; R9 := 0x7ed0a956
	24	[4502]	GETTABLE 	R10 R2 R6 ; R10 := R2[R6]
	25	[4502]	CALL     	R9 2 2 ; R9 := R9(R10)
	26	[4502]	SETTABLE 	R8 K15 R9 ; R8["Lens"] := R9
	27	[4503]	GETUPVAL 	R9 U0 ; R9 := U0
	28	[4503]	GETTABLE 	R9 R9 K17 ; R9 := R9[0x12afd099]
	29	[4503]	GETTABLE 	R10 R8 K15 ; R10 := R8["Lens"]
	30	[4503]	CALL     	R9 2 2 ; R9 := R9(R10)
	31	[4504]	NEWTABLE 	R10 0 2 ; R10 := {}
	32	[4505]	GETGLOBAL	R11 K19 ; R11 := 0x603636ad
	33	[4505]	LOADK    	R12 K20 ; R12 := "/Lotus/Language/Categories/MISC"
	34	[4505]	NEWTABLE 	R13 0 0 ; R13 := {}
	35	[4505]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	36	[4505]	SETTABLE 	R10 K18 R11 ; R10[0x62c81b76] := R11
	37	[4506]	NEWTABLE 	R11 1 0 ; R11 := {}
	38	[4506]	LOADK    	R12 K22 ; R12 := "+"
	39	[4506]	GETUPVAL 	R13 U1 ; R13 := U1
	40	[4506]	GETTABLE 	R13 R13 K23 ; R13 := R13[0x1142c7a8]
	41	[4506]	MOVE     	R14 R7 ; R14 := R7
	42	[4506]	CALL     	R13 2 2 ; R13 := R13(R14)
	43	[4506]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	44	[4506]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	45	[4506]	SETTABLE 	R10 K21 R11 ; R10["Desc"] := R11
	46	[4509]	GETUPVAL 	R11 U2 ; R11 := U2
	47	[4509]	GETTABLE 	R12 R9 K24 ; R12 := R9["PolarityType"]
	48	[4509]	GETTABLE 	R11 R11 R12 ; R11 := R11[R12]
	49	[4510]	EQ       	0 R11 K25 ; if R11 ~= nil then PC := 67
	50	[4510]	JMP      	67 ; PC := 67
	51	[4511]	NEWTABLE 	R12 0 4 ; R12 := {}
	52	[4511]	SETTABLE 	R12 K26 R7 ; R12[0xde321e6f] := R7
	53	[4511]	SETTABLE 	R12 K27 R9 ; R12["PolarityInfo"] := R9
	54	[4511]	GETGLOBAL	R13 K28 ; R13 := 0xb009bbc6
	55	[4511]	GETTABLE 	R14 R8 K15 ; R14 := R8["Lens"]
	56	[4511]	CALL     	R13 2 2 ; R13 := R13(R14)
	57	[4511]	SETTABLE 	R12 K15 R13 ; R12["Lens"] := R13
	58	[4511]	NEWTABLE 	R13 1 0 ; R13 := {}
	59	[4511]	MOVE     	R14 R10 ; R14 := R10
	60	[4511]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	61	[4511]	SETTABLE 	R12 K29 R13 ; R12["ListItems"] := R13
	62	[4511]	MOVE     	R11 R12 ; R11 := R12
	63	[4512]	GETUPVAL 	R12 U2 ; R12 := U2
	64	[4512]	GETTABLE 	R13 R9 K24 ; R13 := R9["PolarityType"]
	65	[4512]	SETTABLE 	R12 R13 R11 ; R12[R13] := R11
	66	[4512]	JMP      	75 ; PC := 75
	67	[4514]	GETTABLE 	R12 R11 K26 ; R12 := R11["FocusGained"]
	68	[4514]	ADD      	R12 R12 R7 ; R12 := R12 + R7
	69	[4514]	SETTABLE 	R11 K26 R12 ; R11[0xde321e6f] := R12
	70	[4515]	GETGLOBAL	R12 K30 ; R12 := 0x33bdd652
	71	[4515]	GETTABLE 	R12 R12 K31 ; R12 := R12[0x23d5322f]
	72	[4515]	GETTABLE 	R13 R11 K29 ; R13 := R11["ListItems"]
	73	[4515]	MOVE     	R14 R10 ; R14 := R10
	74	[4515]	CALL     	R12 3 1 ; R12(R13,R14)
	75	[4498]	FORLOOP  	R3 11 ; R3 += R5; if R3 <= R4 then begin PC := 11; R6 := R3 end
	76	[4521]	LOADNIL  	R12 R12 ; R12 := nil
	77	[4521]	RETURN   	R12 2 ; return R12 
	78	[4522]	RETURN   	R0 1 ; return 

function #116 <?:4524,4760> (608 instructions, 2432 bytes at 00000160FB234D30)
0 params, 48 slots, 17 upvalues, 0 locals, 84 constants, 1 function
	1	[4525]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4525]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xcdc34211]
	3	[4525]	CALL     	R0 1 2 ; R0 := R0()
	4	[4526]	GETUPVAL 	R1 U1 ; R1 := U1
	5	[4526]	CALL     	R1 1 2 ; R1 := R1()
	6	[4527]	LOADNIL  	R2 R2 ; R2 := nil
	7	[4528]	LOADK    	R3 := 0.000000
	8	[4539]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	9	[4541]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	10	[4541]	MOVE     	R6 R1 ; R6 := R1
	11	[4541]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[4541]	TEST     	R5 1 ; if R5 then PC := 17
	13	[4541]	JMP      	17 ; PC := 17
	14	[4542]	SELF     	R5 R1 K2 ; R6 := R1; R5 := R1[0xb8c8dfbd]
	15	[4542]	CALL     	R5 2 2 ; R5 := R5(R6)
	16	[4542]	MOVE     	R2 R5 ; R2 := R5
	17	[4545]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	18	[4545]	MOVE     	R6 R2 ; R6 := R2
	19	[4545]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[4545]	TEST     	R5 0 ; if not R5 then PC := 43
	21	[4545]	JMP      	43 ; PC := 43
	22	[4546]	GETGLOBAL	R5 K3 ; R5 := 0x3d106989
	23	[4546]	LOADK    	R6 K4 ; R6 := "Cannot PopulateAffinityPanel local player! Avatar was NULL or InventoryController was wrong type"
	24	[4546]	CALL     	R5 2 1 ; R5(R6)
	25	[4548]	ADD      	R3 R3 K5 ; R3 := R3 + 1.000000
	26	[4549]	GETGLOBAL	R5 K6 ; R5 := mNumberOfLoadoutSlotsUsed
	27	[4549]	LE       	0 R3 R5 ; if R3 > R5 then PC := 42
	28	[4549]	JMP      	42 ; PC := 42
	29	[4550]	MOVE     	R5 R3 ; R5 := R3
	30	[4550]	LOADK    	R6 := 9.000000
	31	[4550]	LOADK    	R7 := 1.000000
	32	[4550]	FORPREP  	R5 41 ; R5 -= R7; PC := 41
	33	[4551]	GETGLOBAL	R9 K7 ; R9 := 0xae91e43b
	34	[4551]	SELF     	R9 R9 K8 ; R10 := R9; R9 := R9[0xaade900e]
	35	[4551]	MOVE     	R11 R4 ; R11 := R4
	36	[4551]	MOVE     	R12 R8 ; R12 := R8
	37	[4551]	CALL     	R11 2 2 ; R11 := R11(R12)
	38	[4551]	LOADK    	R12 := 11.000000
	39	[4551]	OP_LOADBOOL	R13 0 0 ; R13 := false
	40	[4551]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	41	[4550]	FORLOOP  	R5 33 ; R5 += R7; if R5 <= R6 then begin PC := 33; R8 := R5 end
	42	[4555]	RETURN   	R0 1 ; return 
	43	[4558]	GETUPVAL 	R9 U0 ; R9 := U0
	44	[4558]	GETTABLE 	R9 R9 K0 ; R9 := R9[0xcdc34211]
	45	[4558]	CALL     	R9 1 2 ; R9 := R9()
	46	[4558]	TEST     	R9 1 ; if R9 then PC := 57
	47	[4558]	JMP      	57 ; PC := 57
	48	[4558]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	49	[4558]	GETGLOBAL	R10 K9 ; R10 := mGameData
	50	[4558]	CALL     	R9 2 2 ; R9 := R9(R10)
	51	[4558]	TEST     	R9 1 ; if R9 then PC := 57
	52	[4558]	JMP      	57 ; PC := 57
	53	[4558]	GETGLOBAL	R9 K9 ; R9 := mGameData
	54	[4558]	SELF     	R9 R9 K10 ; R10 := R9; R9 := R9[0x01f12112]
	55	[4558]	CALL     	R9 2 2 ; R9 := R9(R10)
	56	[4558]	JMP      	59 ; PC := 59
	57	[4558]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 58
	58	[4558]	OP_LOADBOOL	R9 1 0 ; R9 := true
	59	[4561]	GETUPVAL 	R10 U2 ; R10 := U2
	60	[4561]	GETTABLE 	R10 R10 K11 ; R10 := R10[0x06d055f9]
	61	[4561]	GETUPVAL 	R11 U3 ; R11 := U3
	62	[4561]	GETTABLE 	R11 R11 K12 ; R11 := R11["isPvp"]
	63	[4561]	LOADK    	R12 := 3.000000
	64	[4561]	LOADK    	R13 := 0.000000
	65	[4561]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	66	[4563]	GETGLOBAL	R11 K14 ; R11 := 0x76ea806b
	67	[4563]	SELF     	R11 R11 K15 ; R12 := R11; R11 := R11[0x3f3ae64c]
	68	[4563]	LOADK    	R13 := 0.000000
	69	[4563]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	70	[4564]	TEST     	R0 1 ; if R0 then PC := 117
	71	[4564]	JMP      	117 ; PC := 117
	72	[4564]	GETGLOBAL	R12 K9 ; R12 := mGameData
	73	[4564]	SELF     	R12 R12 K10 ; R13 := R12; R12 := R12[0x01f12112]
	74	[4564]	CALL     	R12 2 2 ; R12 := R12(R13)
	75	[4564]	TEST     	R12 0 ; if not R12 then PC := 117
	76	[4564]	JMP      	117 ; PC := 117
	77	[4564]	GETGLOBAL	R12 K1 ; R12 := 0x7b998233
	78	[4564]	MOVE     	R13 R11 ; R13 := R11
	79	[4564]	CALL     	R12 2 2 ; R12 := R12(R13)
	80	[4564]	TEST     	R12 1 ; if R12 then PC := 117
	81	[4564]	JMP      	117 ; PC := 117
	82	[4564]	GETGLOBAL	R12 K1 ; R12 := 0x7b998233
	83	[4564]	GETGLOBAL	R13 K16 ; R13 := 0x89326c93
	84	[4564]	CALL     	R12 2 2 ; R12 := R12(R13)
	85	[4564]	TEST     	R12 1 ; if R12 then PC := 117
	86	[4564]	JMP      	117 ; PC := 117
	87	[4566]	GETGLOBAL	R12 K1 ; R12 := 0x7b998233
	88	[4566]	GETUPVAL 	R13 U4 ; R13 := U4
	89	[4566]	CALL     	R12 2 2 ; R12 := R12(R13)
	90	[4566]	TEST     	R12 1 ; if R12 then PC := 117
	91	[4566]	JMP      	117 ; PC := 117
	92	[4567]	SELF     	R12 R11 K17 ; R13 := R11; R12 := R11[0x5ca33548]
	93	[4567]	CALL     	R12 2 2 ; R12 := R12(R13)
	94	[4568]	GETGLOBAL	R13 K9 ; R13 := mGameData
	95	[4568]	SELF     	R13 R13 K18 ; R14 := R13; R13 := R13[0xaebb9855]
	96	[4568]	CALL     	R13 2 2 ; R13 := R13(R14)
	97	[4569]	LOADK    	R14 := 1.000000
	98	[4569]	LEN      	R15 R13 ; R15 := # R13
	99	[4569]	LOADK    	R16 := 1.000000
	100	[4569]	FORPREP  	R14 116 ; R14 -= R16; PC := 116
	101	[4570]	GETTABLE 	R18 R13 R17 ; R18 := R13[R17]
	102	[4570]	GETTABLE 	R18 R18 K19 ; R18 := R18["name"]
	103	[4570]	EQ       	0 R18 R12 ; if R18 ~= R12 then PC := 116
	104	[4570]	JMP      	116 ; PC := 116
	105	[4571]	GETGLOBAL	R18 K20 ; R18 := mAffinityGrid
	106	[4571]	GETGLOBAL	R19 K22 ; R19 := cjson
	107	[4571]	GETTABLE 	R19 R19 K23 ; R19 := R19[0x7ab914d8]
	108	[4571]	GETTABLE 	R20 R13 R17 ; R20 := R13[R17]
	109	[4571]	GETTABLE 	R20 R20 K24 ; R20 := R20["loadout"]
	110	[4571]	CALL     	R19 2 2 ; R19 := R19(R20)
	111	[4571]	SETTABLE 	R18 K21 R19 ; R18["ArchivedLoadout"] := R19
	112	[4572]	GETTABLE 	R18 R13 R17 ; R18 := R13[R17]
	113	[4572]	GETTABLE 	R18 R18 K26 ; R18 := R18["kubrowName"]
	114	[4572]	SETGLOBALHASH	R18 K25 ; mPetName := R18
	115	[4573]	JMP      	117 ; PC := 117
	116	[4569]	FORLOOP  	R14 101 ; R14 += R16; if R14 <= R15 then begin PC := 101; R17 := R14 end
	117	[4579]	OP_LOADBOOL	R18 0 0 ; R18 := false
	118	[4580]	GETUPVAL 	R19 U5 ; R19 := U5
	119	[4580]	CALL     	R19 1 2 ; R19 := R19()
	120	[4580]	TEST     	R19 0 ; if not R19 then PC := 124
	121	[4580]	JMP      	124 ; PC := 124
	122	[4580]	GETUPVAL 	R19 U3 ; R19 := U3
	123	[4580]	GETTABLE 	R19 R19 K12 ; R19 := R19["isPvp"]
	124	[4582]	GETGLOBAL	R20 K27 ; R20 := mLocalPlayerMissionStats
	125	[4582]	EQ       	1 R20 K28 ; if R20 == nil then PC := 139
	126	[4582]	JMP      	139 ; PC := 139
	127	[4582]	GETGLOBAL	R20 K27 ; R20 := mLocalPlayerMissionStats
	128	[4582]	GETTABLE 	R20 R20 K29 ; R20 := R20["affMods"]
	129	[4582]	LEN      	R20 R20 ; R20 := # R20
	130	[4582]	LT       	0 K30 R20 ; if 0.000000 >= R20 then PC := 139
	131	[4582]	JMP      	139 ; PC := 139
	132	[4583]	GETUPVAL 	R20 U6 ; R20 := U6
	133	[4583]	GETGLOBAL	R21 K27 ; R21 := mLocalPlayerMissionStats
	134	[4583]	GETTABLE 	R21 R21 K29 ; R21 := R21["affMods"]
	135	[4583]	MOVE     	R22 R19 ; R22 := R19
	136	[4583]	CALL     	R20 3 1 ; R20(R21,R22)
	137	[4584]	OP_LOADBOOL	R18 1 0 ; R18 := true
	138	[4584]	JMP      	153 ; PC := 153
	139	[4586]	GETUPVAL 	R20 U7 ; R20 := U7
	140	[4586]	CALL     	R20 1 2 ; R20 := R20()
	141	[4586]	TEST     	R20 0 ; if not R20 then PC := 146
	142	[4586]	JMP      	146 ; PC := 146
	143	[4587]	GETUPVAL 	R20 U8 ; R20 := U8
	144	[4587]	CALL     	R20 1 1 ; R20()
	145	[4588]	OP_LOADBOOL	R18 1 0 ; R18 := true
	146	[4590]	GETGLOBAL	R20 K31 ; R20 := 0x0032441c
	147	[4590]	GETTABLE 	R20 R20 K32 ; R20 := R20["gInvasionInfo"]
	148	[4590]	EQ       	1 R20 K28 ; if R20 == nil then PC := 153
	149	[4590]	JMP      	153 ; PC := 153
	150	[4591]	GETUPVAL 	R20 U9 ; R20 := U9
	151	[4591]	CALL     	R20 1 1 ; R20()
	152	[4592]	OP_LOADBOOL	R18 1 0 ; R18 := true
	153	[4596]	TEST     	R18 1 ; if R18 then PC := 161
	154	[4596]	JMP      	161 ; PC := 161
	155	[4596]	TEST     	R19 0 ; if not R19 then PC := 161
	156	[4596]	JMP      	161 ; PC := 161
	157	[4597]	GETUPVAL 	R20 U6 ; R20 := U6
	158	[4597]	NEWTABLE 	R21 0 0 ; R21 := {}
	159	[4597]	OP_LOADBOOL	R22 1 0 ; R22 := true
	160	[4597]	CALL     	R20 3 1 ; R20(R21,R22)
	161	[4600]	GETGLOBAL	R20 K9 ; R20 := mGameData
	162	[4600]	SELF     	R20 R20 K33 ; R21 := R20; R20 := R20[0x62c81b76]
	163	[4600]	CALL     	R20 2 2 ; R20 := R20(R21)
	164	[4601]	GETGLOBAL	R21 K20 ; R21 := mAffinityGrid
	165	[4601]	GETUPVAL 	R22 U10 ; R22 := U10
	166	[4601]	MOVE     	R23 R20 ; R23 := R20
	167	[4601]	CALL     	R22 2 2 ; R22 := R22(R23)
	168	[4601]	SETTABLE 	R21 K34 R22 ; R21["PlainsFreeRoamArchwing"] := R22
	169	[4603]	GETUPVAL 	R21 U11 ; R21 := U11
	170	[4603]	MOVE     	R22 R10 ; R22 := R10
	171	[4603]	LOADK    	R23 := 0.000000
	172	[4603]	MOVE     	R24 R2 ; R24 := R2
	173	[4603]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	174	[4604]	GETGLOBAL	R21 K35 ; R21 := _T
	175	[4604]	GETTABLE 	R21 R21 K36 ; R21 := R21["TestAffinityCount"]
	176	[4604]	TEST     	R21 0 ; if not R21 then PC := 208
	177	[4604]	JMP      	208 ; PC := 208
	178	[4605]	GETUPVAL 	R21 U11 ; R21 := U11
	179	[4605]	MOVE     	R22 R10 ; R22 := R10
	180	[4605]	LOADK    	R23 := 0.000000
	181	[4605]	MOVE     	R24 R2 ; R24 := R2
	182	[4605]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	183	[4606]	GETUPVAL 	R21 U11 ; R21 := U11
	184	[4606]	MOVE     	R22 R10 ; R22 := R10
	185	[4606]	LOADK    	R23 := 0.000000
	186	[4606]	MOVE     	R24 R2 ; R24 := R2
	187	[4606]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	188	[4607]	GETUPVAL 	R21 U11 ; R21 := U11
	189	[4607]	MOVE     	R22 R10 ; R22 := R10
	190	[4607]	LOADK    	R23 := 0.000000
	191	[4607]	MOVE     	R24 R2 ; R24 := R2
	192	[4607]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	193	[4608]	GETUPVAL 	R21 U11 ; R21 := U11
	194	[4608]	MOVE     	R22 R10 ; R22 := R10
	195	[4608]	LOADK    	R23 := 0.000000
	196	[4608]	MOVE     	R24 R2 ; R24 := R2
	197	[4608]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	198	[4609]	GETUPVAL 	R21 U11 ; R21 := U11
	199	[4609]	MOVE     	R22 R10 ; R22 := R10
	200	[4609]	LOADK    	R23 := 0.000000
	201	[4609]	MOVE     	R24 R2 ; R24 := R2
	202	[4609]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	203	[4610]	GETUPVAL 	R21 U11 ; R21 := U11
	204	[4610]	MOVE     	R22 R10 ; R22 := R10
	205	[4610]	LOADK    	R23 := 0.000000
	206	[4610]	MOVE     	R24 R2 ; R24 := R2
	207	[4610]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	208	[4612]	GETUPVAL 	R21 U11 ; R21 := U11
	209	[4612]	MOVE     	R22 R10 ; R22 := R10
	210	[4612]	LOADK    	R23 := 2.000000
	211	[4612]	MOVE     	R24 R2 ; R24 := R2
	212	[4612]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	213	[4613]	GETUPVAL 	R21 U11 ; R21 := U11
	214	[4613]	MOVE     	R22 R10 ; R22 := R10
	215	[4613]	LOADK    	R23 := 1.000000
	216	[4613]	MOVE     	R24 R2 ; R24 := R2
	217	[4613]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	218	[4614]	GETUPVAL 	R21 U11 ; R21 := U11
	219	[4614]	MOVE     	R22 R10 ; R22 := R10
	220	[4614]	LOADK    	R23 := 3.000000
	221	[4614]	MOVE     	R24 R2 ; R24 := R2
	222	[4614]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	223	[4615]	GETUPVAL 	R21 U11 ; R21 := U11
	224	[4615]	MOVE     	R22 R10 ; R22 := R10
	225	[4615]	LOADK    	R23 := 4.000000
	226	[4615]	MOVE     	R24 R2 ; R24 := R2
	227	[4615]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	228	[4616]	GETUPVAL 	R21 U11 ; R21 := U11
	229	[4616]	MOVE     	R22 R10 ; R22 := R10
	230	[4616]	LOADK    	R23 := 5.000000
	231	[4616]	MOVE     	R24 R2 ; R24 := R2
	232	[4616]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	233	[4617]	GETUPVAL 	R21 U11 ; R21 := U11
	234	[4617]	MOVE     	R22 R10 ; R22 := R10
	235	[4617]	LOADK    	R23 := 6.000000
	236	[4617]	MOVE     	R24 R2 ; R24 := R2
	237	[4617]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	238	[4619]	GETUPVAL 	R21 U11 ; R21 := U11
	239	[4619]	LOADK    	R22 := 8.000000
	240	[4619]	LOADK    	R23 := 0.000000
	241	[4619]	MOVE     	R24 R2 ; R24 := R2
	242	[4619]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	243	[4620]	GETUPVAL 	R21 U11 ; R21 := U11
	244	[4620]	LOADK    	R22 := 8.000000
	245	[4620]	LOADK    	R23 := 4.000000
	246	[4620]	MOVE     	R24 R2 ; R24 := R2
	247	[4620]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	248	[4621]	GETUPVAL 	R21 U11 ; R21 := U11
	249	[4621]	LOADK    	R22 := 8.000000
	250	[4621]	LOADK    	R23 := 5.000000
	251	[4621]	MOVE     	R24 R2 ; R24 := R2
	252	[4621]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	253	[4623]	GETUPVAL 	R21 U11 ; R21 := U11
	254	[4623]	LOADK    	R22 := 7.000000
	255	[4623]	LOADK    	R23 := 2.000000
	256	[4623]	MOVE     	R24 R2 ; R24 := R2
	257	[4623]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	258	[4625]	GETUPVAL 	R21 U12 ; R21 := U12
	259	[4625]	MOVE     	R22 R10 ; R22 := R10
	260	[4625]	MOVE     	R23 R2 ; R23 := R2
	261	[4625]	CALL     	R21 3 1 ; R21(R22,R23)
	262	[4627]	GETGLOBAL	R21 K16 ; R21 := 0x89326c93
	263	[4627]	SELF     	R21 R21 K37 ; R22 := R21; R21 := R21[0xfb64e76c]
	264	[4627]	CALL     	R21 2 2 ; R21 := R21(R22)
	265	[4628]	GETGLOBAL	R22 K1 ; R22 := 0x7b998233
	266	[4628]	MOVE     	R23 R21 ; R23 := R21
	267	[4628]	CALL     	R22 2 2 ; R22 := R22(R23)
	268	[4628]	TEST     	R22 1 ; if R22 then PC := 298
	269	[4628]	JMP      	298 ; PC := 298
	270	[4630]	SELF     	R22 R21 K38 ; R23 := R21; R22 := R21[0x5578d98b]
	271	[4630]	CALL     	R22 2 2 ; R22 := R22(R23)
	272	[4632]	LOADK    	R23 := 5.000000
	273	[4633]	SELF     	R24 R21 K33 ; R25 := R21; R24 := R21[0x62c81b76]
	274	[4633]	CALL     	R24 2 2 ; R24 := R24(R25)
	275	[4633]	GETTABLE 	R24 R24 K39 ; R24 := R24["mOperatorType"]
	276	[4633]	EQ       	0 R24 K40 ; if R24 ~= 4.000000 then PC := 279
	277	[4633]	JMP      	279 ; PC := 279
	278	[4634]	LOADK    	R23 := 9.000000
	279	[4636]	GETGLOBAL	R24 K1 ; R24 := 0x7b998233
	280	[4636]	MOVE     	R25 R22 ; R25 := R22
	281	[4636]	CALL     	R24 2 2 ; R24 := R24(R25)
	282	[4636]	TEST     	R24 1 ; if R24 then PC := 291
	283	[4636]	JMP      	291 ; PC := 291
	284	[4637]	GETUPVAL 	R24 U11 ; R24 := U11
	285	[4637]	MOVE     	R25 R23 ; R25 := R23
	286	[4637]	LOADK    	R26 := 2.000000
	287	[4637]	SELF     	R27 R22 K41 ; R28 := R22; R27 := R22[0xde321e6f]
	288	[4637]	CALL     	R27 2 0 ; R27,... := R27(R28)
	289	[4637]	CALL     	R24 0 1 ; R24(R25,...)
	290	[4637]	JMP      	298 ; PC := 298
	291	[4638]	TEST     	R9 0 ; if not R9 then PC := 298
	292	[4638]	JMP      	298 ; PC := 298
	293	[4639]	GETUPVAL 	R24 U11 ; R24 := U11
	294	[4639]	MOVE     	R25 R23 ; R25 := R23
	295	[4639]	LOADK    	R26 := 2.000000
	296	[4639]	LOADNIL  	R27 R27 ; R27 := nil
	297	[4639]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	298	[4643]	GETUPVAL 	R24 U13 ; R24 := U13
	299	[4643]	CALL     	R24 1 2 ; R24 := R24()
	300	[4643]	GETTABLE 	R24 R24 K42 ; R24 := R24["archwingRequired"]
	301	[4643]	EQ       	1 R24 K43 ; if R24 == true then PC := 307
	302	[4643]	JMP      	307 ; PC := 307
	303	[4643]	GETGLOBAL	R24 K20 ; R24 := mAffinityGrid
	304	[4643]	GETTABLE 	R24 R24 K34 ; R24 := R24["PlainsFreeRoamArchwing"]
	305	[4643]	TEST     	R24 0 ; if not R24 then PC := 326
	306	[4643]	JMP      	326 ; PC := 326
	307	[4644]	GETUPVAL 	R24 U11 ; R24 := U11
	308	[4644]	LOADK    	R25 := 2.000000
	309	[4644]	LOADK    	R26 := 0.000000
	310	[4644]	MOVE     	R27 R2 ; R27 := R2
	311	[4644]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	312	[4645]	GETGLOBAL	R24 K20 ; R24 := mAffinityGrid
	313	[4645]	GETTABLE 	R24 R24 K34 ; R24 := R24["PlainsFreeRoamArchwing"]
	314	[4645]	TEST     	R24 1 ; if R24 then PC := 326
	315	[4645]	JMP      	326 ; PC := 326
	316	[4646]	GETUPVAL 	R24 U11 ; R24 := U11
	317	[4646]	LOADK    	R25 := 2.000000
	318	[4646]	LOADK    	R26 := 2.000000
	319	[4646]	MOVE     	R27 R2 ; R27 := R2
	320	[4646]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	321	[4647]	GETUPVAL 	R24 U11 ; R24 := U11
	322	[4647]	LOADK    	R25 := 2.000000
	323	[4647]	LOADK    	R26 := 3.000000
	324	[4647]	MOVE     	R27 R2 ; R27 := R2
	325	[4647]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	326	[4651]	GETGLOBAL	R24 K44 ; R24 := mIntrinsicPoints
	327	[4651]	EQ       	1 R24 K28 ; if R24 == nil then PC := 335
	328	[4651]	JMP      	335 ; PC := 335
	329	[4652]	GETGLOBAL	R24 K20 ; R24 := mAffinityGrid
	330	[4652]	SELF     	R24 R24 K45 ; R25 := R24; R24 := R24[0xbad4316f]
	331	[4652]	NEWTABLE 	R26 0 1 ; R26 := {}
	332	[4652]	SETTABLE 	R26 K46 K43 ; R26["Intrinsic"] := true
	333	[4652]	OP_LOADBOOL	R27 1 0 ; R27 := true
	334	[4652]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	335	[4656]	GETUPVAL 	R24 U3 ; R24 := U3
	336	[4656]	GETTABLE 	R24 R24 K12 ; R24 := R24["isPvp"]
	337	[4656]	TEST     	R24 1 ; if R24 then PC := 502
	338	[4656]	JMP      	502 ; PC := 502
	339	[4658]	LOADNIL  	R24 R27 ; R24 := R25 := R26 := R27 := nil
	340	[4662]	SELF     	R28 R20 K47 ; R29 := R20; R28 := R20[0x8af486d8]
	341	[4662]	CALL     	R28 2 2 ; R28 := R28(R29)
	342	[4664]	TEST     	R0 0 ; if not R0 then PC := 482
	343	[4664]	JMP      	482 ; PC := 482
	344	[4665]	TEST     	R28 0 ; if not R28 then PC := 350
	345	[4665]	JMP      	350 ; PC := 350
	346	[4666]	GETTABLE 	R29 R20 K48 ; R29 := R20["mKubrowPetDetails"]
	347	[4666]	GETTABLE 	R29 R29 K49 ; R29 := R29["mName"]
	348	[4666]	SETGLOBALHASH	R29 K25 ; mPetName := R29
	349	[4666]	JMP      	352 ; PC := 352
	350	[4668]	LOADK    	R29 K50 ; R29 := ""
	351	[4668]	SETGLOBALHASH	R29 K25 ; mPetName := R29
	352	[4671]	SELF     	R29 R2 K51 ; R30 := R2; R29 := R2[0x2676deee]
	353	[4671]	CALL     	R29 2 2 ; R29 := R29(R30)
	354	[4671]	MOVE     	R25 R29 ; R25 := R29
	355	[4672]	GETGLOBAL	R29 K1 ; R29 := 0x7b998233
	356	[4672]	MOVE     	R30 R25 ; R30 := R25
	357	[4672]	CALL     	R29 2 2 ; R29 := R29(R30)
	358	[4672]	TEST     	R29 1 ; if R29 then PC := 380
	359	[4672]	JMP      	380 ; PC := 380
	360	[4673]	SELF     	R29 R25 K41 ; R30 := R25; R29 := R25[0xde321e6f]
	361	[4673]	CALL     	R29 2 2 ; R29 := R29(R30)
	362	[4673]	SELF     	R29 R29 K52 ; R30 := R29; R29 := R29[0xf7d48ee0]
	363	[4673]	CALL     	R29 2 2 ; R29 := R29(R30)
	364	[4673]	MOVE     	R24 R29 ; R24 := R29
	365	[4675]	TEST     	R28 1 ; if R28 then PC := 373
	366	[4675]	JMP      	373 ; PC := 373
	367	[4676]	SELF     	R29 R25 K41 ; R30 := R25; R29 := R25[0xde321e6f]
	368	[4676]	CALL     	R29 2 2 ; R29 := R29(R30)
	369	[4676]	SELF     	R29 R29 K53 ; R30 := R29; R29 := R29[0xe85a2361]
	370	[4676]	LOADK    	R31 := 1.000000
	371	[4676]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	372	[4676]	MOVE     	R27 R29 ; R27 := R29
	373	[4679]	SELF     	R29 R20 K55 ; R30 := R20; R29 := R20[0x5ea7c3b1]
	374	[4679]	CALL     	R29 2 2 ; R29 := R29(R30)
	375	[4679]	TEST     	R29 0 ; if not R29 then PC := 380
	376	[4679]	JMP      	380 ; PC := 380
	377	[4680]	SELF     	R29 R25 K56 ; R30 := R25; R29 := R25[0xdff9d2a7]
	378	[4680]	CALL     	R29 2 2 ; R29 := R29(R30)
	379	[4680]	SETGLOBALHASH	R29 K25 ; mPetName := R29
	380	[4684]	GETGLOBAL	R29 K1 ; R29 := 0x7b998233
	381	[4684]	MOVE     	R30 R25 ; R30 := R25
	382	[4684]	CALL     	R29 2 2 ; R29 := R29(R30)
	383	[4684]	TEST     	R29 1 ; if R29 then PC := 390
	384	[4684]	JMP      	390 ; PC := 390
	385	[4684]	GETGLOBAL	R29 K1 ; R29 := 0x7b998233
	386	[4684]	MOVE     	R30 R24 ; R30 := R24
	387	[4684]	CALL     	R29 2 2 ; R29 := R29(R30)
	388	[4684]	TEST     	R29 0 ; if not R29 then PC := 482
	389	[4684]	JMP      	482 ; PC := 482
	390	[4689]	SELF     	R29 R20 K57 ; R30 := R20; R29 := R20[0xc1a84a4b]
	391	[4689]	LOADK    	R31 := 1.000000
	392	[4689]	LOADK    	R32 := 0.000000
	393	[4689]	CALL     	R29 4 2 ; R29 := R29(R30,R31,R32)
	394	[4690]	GETGLOBAL	R30 K1 ; R30 := 0x7b998233
	395	[4690]	MOVE     	R31 R29 ; R31 := R29
	396	[4690]	CALL     	R30 2 2 ; R30 := R30(R31)
	397	[4690]	TEST     	R30 1 ; if R30 then PC := 453
	398	[4690]	JMP      	453 ; PC := 453
	399	[4690]	GETGLOBAL	R30 K1 ; R30 := 0x7b998233
	400	[4690]	GETTABLE 	R31 R29 K58 ; R31 := R29["mItem"]
	401	[4690]	CALL     	R30 2 2 ; R30 := R30(R31)
	402	[4690]	TEST     	R30 1 ; if R30 then PC := 453
	403	[4690]	JMP      	453 ; PC := 453
	404	[4690]	GETGLOBAL	R30 K1 ; R30 := 0x7b998233
	405	[4690]	GETTABLE 	R31 R29 K58 ; R31 := R29["mItem"]
	406	[4690]	GETTABLE 	R31 R31 K59 ; R31 := R31["mItemType"]
	407	[4690]	CALL     	R30 2 2 ; R30 := R30(R31)
	408	[4690]	TEST     	R30 1 ; if R30 then PC := 453
	409	[4690]	JMP      	453 ; PC := 453
	410	[4691]	GETGLOBAL	R30 K60 ; R30 := 0xb009bbc6
	411	[4691]	GETTABLE 	R31 R29 K58 ; R31 := R29["mItem"]
	412	[4691]	GETTABLE 	R31 R31 K59 ; R31 := R31["mItemType"]
	413	[4691]	CALL     	R30 2 2 ; R30 := R30(R31)
	414	[4691]	MOVE     	R24 R30 ; R24 := R30
	415	[4693]	GETTABLE 	R30 R29 K58 ; R30 := R29["mItem"]
	416	[4693]	GETTABLE 	R30 R30 K61 ; R30 := R30["mModularParts"]
	417	[4693]	LEN      	R30 R30 ; R30 := # R30
	418	[4693]	LT       	0 K30 R30 ; if 0.000000 >= R30 then PC := 427
	419	[4693]	JMP      	427 ; PC := 427
	420	[4694]	GETUPVAL 	R30 U14 ; R30 := U14
	421	[4694]	GETTABLE 	R30 R30 K62 ; R30 := R30[0xda20bf25]
	422	[4694]	GETTABLE 	R31 R29 K58 ; R31 := R29["mItem"]
	423	[4694]	GETTABLE 	R31 R31 K61 ; R31 := R31["mModularParts"]
	424	[4694]	LOADNIL  	R32 R32 ; R32 := nil
	425	[4694]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	426	[4694]	MOVE     	R26 R30 ; R26 := R30
	427	[4697]	GETTABLE 	R30 R29 K58 ; R30 := R29["mItem"]
	428	[4697]	SELF     	R30 R30 K63 ; R31 := R30; R30 := R30[0x68d708a7]
	429	[4697]	GETTABLE 	R32 R29 K64 ; R32 := R29["mCustSlot"]
	430	[4697]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	431	[4698]	SELF     	R31 R30 K65 ; R32 := R30; R31 := R30[0x2540510f]
	432	[4698]	LOADK    	R33 := 7.000000
	433	[4698]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	434	[4699]	GETGLOBAL	R32 K1 ; R32 := 0x7b998233
	435	[4699]	MOVE     	R33 R31 ; R33 := R31
	436	[4699]	CALL     	R32 2 2 ; R32 := R32(R33)
	437	[4699]	TEST     	R32 1 ; if R32 then PC := 453
	438	[4699]	JMP      	453 ; PC := 453
	439	[4700]	GETGLOBAL	R32 K60 ; R32 := 0xb009bbc6
	440	[4700]	MOVE     	R33 R31 ; R33 := R31
	441	[4700]	CALL     	R32 2 2 ; R32 := R32(R33)
	442	[4701]	GETGLOBAL	R33 K1 ; R33 := 0x7b998233
	443	[4701]	MOVE     	R34 R32 ; R34 := R32
	444	[4701]	CALL     	R33 2 2 ; R33 := R33(R34)
	445	[4701]	TEST     	R33 1 ; if R33 then PC := 453
	446	[4701]	JMP      	453 ; PC := 453
	447	[4702]	GETUPVAL 	R33 U14 ; R33 := U14
	448	[4702]	GETTABLE 	R33 R33 K66 ; R33 := R33[0x056dcf06]
	449	[4702]	MOVE     	R34 R32 ; R34 := R32
	450	[4702]	OP_LOADBOOL	R35 1 0 ; R35 := true
	451	[4702]	CALL     	R33 3 2 ; R33 := R33(R34,R35)
	452	[4702]	MOVE     	R26 R33 ; R26 := R33
	453	[4707]	TEST     	R28 1 ; if R28 then PC := 482
	454	[4707]	JMP      	482 ; PC := 482
	455	[4707]	GETGLOBAL	R33 K1 ; R33 := 0x7b998233
	456	[4707]	MOVE     	R34 R24 ; R34 := R24
	457	[4707]	CALL     	R33 2 2 ; R33 := R33(R34)
	458	[4707]	TEST     	R33 1 ; if R33 then PC := 482
	459	[4707]	JMP      	482 ; PC := 482
	460	[4708]	SELF     	R33 R20 K67 ; R34 := R20; R33 := R20[0xb61abfd2]
	461	[4708]	LOADK    	R35 := 1.000000
	462	[4708]	LOADK    	R36 := 2.000000
	463	[4708]	CALL     	R33 4 2 ; R33 := R33(R34,R35,R36)
	464	[4709]	GETGLOBAL	R34 K1 ; R34 := 0x7b998233
	465	[4709]	MOVE     	R35 R33 ; R35 := R33
	466	[4709]	CALL     	R34 2 2 ; R34 := R34(R35)
	467	[4709]	TEST     	R34 1 ; if R34 then PC := 482
	468	[4709]	JMP      	482 ; PC := 482
	469	[4709]	GETGLOBAL	R34 K1 ; R34 := 0x7b998233
	470	[4709]	GETTABLE 	R35 R33 K59 ; R35 := R33["mItemType"]
	471	[4709]	CALL     	R34 2 2 ; R34 := R34(R35)
	472	[4709]	TEST     	R34 1 ; if R34 then PC := 482
	473	[4709]	JMP      	482 ; PC := 482
	474	[4710]	GETGLOBAL	R34 K60 ; R34 := 0xb009bbc6
	475	[4710]	SELF     	R35 R20 K67 ; R36 := R20; R35 := R20[0xb61abfd2]
	476	[4710]	LOADK    	R37 := 1.000000
	477	[4710]	LOADK    	R38 := 2.000000
	478	[4710]	CALL     	R35 4 2 ; R35 := R35(R36,R37,R38)
	479	[4710]	GETTABLE 	R35 R35 K59 ; R35 := R35["mItemType"]
	480	[4710]	CALL     	R34 2 2 ; R34 := R34(R35)
	481	[4710]	MOVE     	R27 R34 ; R27 := R34
	482	[4716]	GETUPVAL 	R34 U11 ; R34 := U11
	483	[4716]	LOADK    	R35 := 1.000000
	484	[4716]	LOADK    	R36 := 0.000000
	485	[4716]	MOVE     	R37 R2 ; R37 := R2
	486	[4716]	MOVE     	R38 R24 ; R38 := R24
	487	[4716]	CALL     	R34 5 2 ; R34 := R34(R35,R36,R37,R38)
	488	[4717]	EQ       	1 R34 K28 ; if R34 == nil then PC := 496
	489	[4717]	JMP      	496 ; PC := 496
	490	[4718]	GETGLOBAL	R35 K1 ; R35 := 0x7b998233
	491	[4718]	MOVE     	R36 R26 ; R36 := R26
	492	[4718]	CALL     	R35 2 2 ; R35 := R35(R36)
	493	[4718]	TEST     	R35 1 ; if R35 then PC := 496
	494	[4718]	JMP      	496 ; PC := 496
	495	[4719]	SETTABLE 	R34 K68 R26 ; R34[0x7b998233] := R26
	496	[4723]	GETUPVAL 	R35 U11 ; R35 := U11
	497	[4723]	LOADK    	R36 := 1.000000
	498	[4723]	LOADK    	R37 := 2.000000
	499	[4723]	MOVE     	R38 R2 ; R38 := R2
	500	[4723]	MOVE     	R39 R27 ; R39 := R27
	501	[4723]	CALL     	R35 5 1 ; R35(R36,R37,R38,R39)
	502	[4726]	GETUPVAL 	R35 U15 ; R35 := U15
	503	[4726]	CALL     	R35 1 2 ; R35 := R35()
	504	[4726]	TEST     	R35 0 ; if not R35 then PC := 570
	505	[4726]	JMP      	570 ; PC := 570
	506	[4727]	LOADNIL  	R35 R36 ; R35 := R36 := nil
	507	[4729]	SELF     	R37 R20 K57 ; R38 := R20; R37 := R20[0xc1a84a4b]
	508	[4729]	LOADK    	R39 := 6.000000
	509	[4729]	LOADK    	R40 := 0.000000
	510	[4729]	CALL     	R37 4 2 ; R37 := R37(R38,R39,R40)
	511	[4730]	GETGLOBAL	R38 K1 ; R38 := 0x7b998233
	512	[4730]	MOVE     	R39 R37 ; R39 := R37
	513	[4730]	CALL     	R38 2 2 ; R38 := R38(R39)
	514	[4730]	TEST     	R38 1 ; if R38 then PC := 555
	515	[4730]	JMP      	555 ; PC := 555
	516	[4730]	GETGLOBAL	R38 K1 ; R38 := 0x7b998233
	517	[4730]	GETTABLE 	R39 R37 K58 ; R39 := R37["mItem"]
	518	[4730]	CALL     	R38 2 2 ; R38 := R38(R39)
	519	[4730]	TEST     	R38 1 ; if R38 then PC := 555
	520	[4730]	JMP      	555 ; PC := 555
	521	[4730]	GETGLOBAL	R38 K1 ; R38 := 0x7b998233
	522	[4730]	GETTABLE 	R39 R37 K58 ; R39 := R37["mItem"]
	523	[4730]	GETTABLE 	R39 R39 K59 ; R39 := R39["mItemType"]
	524	[4730]	CALL     	R38 2 2 ; R38 := R38(R39)
	525	[4730]	TEST     	R38 1 ; if R38 then PC := 555
	526	[4730]	JMP      	555 ; PC := 555
	527	[4731]	GETGLOBAL	R38 K60 ; R38 := 0xb009bbc6
	528	[4731]	GETTABLE 	R39 R37 K58 ; R39 := R37["mItem"]
	529	[4731]	GETTABLE 	R39 R39 K59 ; R39 := R39["mItemType"]
	530	[4731]	CALL     	R38 2 2 ; R38 := R38(R39)
	531	[4731]	MOVE     	R35 R38 ; R35 := R38
	532	[4732]	GETTABLE 	R38 R37 K58 ; R38 := R37["mItem"]
	533	[4732]	GETTABLE 	R38 R38 K61 ; R38 := R38["mModularParts"]
	534	[4732]	LEN      	R38 R38 ; R38 := # R38
	535	[4732]	LT       	0 K30 R38 ; if 0.000000 >= R38 then PC := 544
	536	[4732]	JMP      	544 ; PC := 544
	537	[4733]	GETUPVAL 	R38 U14 ; R38 := U14
	538	[4733]	GETTABLE 	R38 R38 K62 ; R38 := R38[0xda20bf25]
	539	[4733]	GETTABLE 	R39 R37 K58 ; R39 := R37["mItem"]
	540	[4733]	GETTABLE 	R39 R39 K61 ; R39 := R39["mModularParts"]
	541	[4733]	LOADNIL  	R40 R40 ; R40 := nil
	542	[4733]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	543	[4733]	MOVE     	R36 R38 ; R36 := R38
	544	[4735]	GETTABLE 	R38 R37 K58 ; R38 := R37["mItem"]
	545	[4735]	GETTABLE 	R38 R38 K69 ; R38 := R38["mItemName"]
	546	[4735]	EQ       	1 R38 K28 ; if R38 == nil then PC := 555
	547	[4735]	JMP      	555 ; PC := 555
	548	[4735]	GETTABLE 	R38 R37 K58 ; R38 := R37["mItem"]
	549	[4735]	GETTABLE 	R38 R38 K69 ; R38 := R38["mItemName"]
	550	[4735]	EQ       	1 R38 K50 ; if R38 == "" then PC := 555
	551	[4735]	JMP      	555 ; PC := 555
	552	[4736]	GETTABLE 	R38 R37 K58 ; R38 := R37["mItem"]
	553	[4736]	GETTABLE 	R38 R38 K69 ; R38 := R38["mItemName"]
	554	[4736]	SETGLOBALHASH	R38 K70 ; mKDriveName := R38
	555	[4739]	GETUPVAL 	R38 U11 ; R38 := U11
	556	[4739]	LOADK    	R39 := 6.000000
	557	[4739]	LOADK    	R40 := 0.000000
	558	[4739]	MOVE     	R41 R2 ; R41 := R2
	559	[4739]	MOVE     	R42 R35 ; R42 := R35
	560	[4739]	CALL     	R38 5 2 ; R38 := R38(R39,R40,R41,R42)
	561	[4739]	MOVE     	R37 R38 ; R37 := R38
	562	[4740]	EQ       	1 R37 K28 ; if R37 == nil then PC := 570
	563	[4740]	JMP      	570 ; PC := 570
	564	[4741]	GETGLOBAL	R38 K1 ; R38 := 0x7b998233
	565	[4741]	MOVE     	R39 R36 ; R39 := R36
	566	[4741]	CALL     	R38 2 2 ; R38 := R38(R39)
	567	[4741]	TEST     	R38 1 ; if R38 then PC := 570
	568	[4741]	JMP      	570 ; PC := 570
	569	[4742]	SETTABLE 	R37 K68 R36 ; R37[0x7b998233] := R36
	570	[4747]	GETGLOBAL	R38 K71 ; R38 := 0xcfc01047
	571	[4747]	GETUPVAL 	R39 U16 ; R39 := U16
	572	[4747]	CALL     	R38 2 4 ; R38,R39,R40 := R38(R39)
	573	[4747]	JMP      	606 ; PC := 606
	574	[4748]	GETTABLE 	R43 R42 K72 ; R43 := R42["FocusGained"]
	575	[4748]	LT       	0 K30 R43 ; if 0.000000 >= R43 then PC := 606
	576	[4748]	JMP      	606 ; PC := 606
	577	[4749]	GETUPVAL 	R43 U14 ; R43 := U14
	578	[4749]	GETTABLE 	R43 R43 K73 ; R43 := R43[0x4eec6d11]
	579	[4749]	GETGLOBAL	R44 K7 ; R44 := 0xae91e43b
	580	[4749]	GETTABLE 	R45 R42 K74 ; R45 := R42["Lens"]
	581	[4749]	NEWTABLE 	R46 0 1 ; R46 := {}
	582	[4749]	SETTABLE 	R46 K75 K43 ; R46["GetVisibilityMaterial"] := true
	583	[4749]	OP_LOADBOOL	R47 1 0 ; R47 := true
	584	[4749]	CALL     	R43 5 2 ; R43 := R43(R44,R45,R46,R47)
	585	[4750]	GETTABLE 	R44 R42 K72 ; R44 := R42["FocusGained"]
	586	[4750]	SETTABLE 	R43 K72 R44 ; R43["FocusGained"] := R44
	587	[4751]	GETTABLE 	R44 R42 K76 ; R44 := R42["PolarityInfo"]
	588	[4751]	SETTABLE 	R43 K76 R44 ; R43[0x8a489022] := R44
	589	[4752]	GETGLOBAL	R44 K7 ; R44 := 0xae91e43b
	590	[4752]	SELF     	R44 R44 K78 ; R45 := R44; R44 := R44[0x42b04007]
	591	[4752]	GETTABLE 	R46 R42 K76 ; R46 := R42["PolarityInfo"]
	592	[4752]	GETTABLE 	R46 R46 K79 ; R46 := R46["PolarityTag"]
	593	[4752]	OP_LOADBOOL	R47 1 0 ; R47 := true
	594	[4752]	CALL     	R44 4 2 ; R44 := R44(R45,R46,R47)
	595	[4752]	SETTABLE 	R43 K77 R44 ; R43["Name"] := R44
	596	[4753]	SETTABLE 	R43 K80 K43 ; R43["CustomEntry"] := true
	597	[4754]	SETTABLE 	R43 K81 K50 ; R43["Description"] := ""
	598	[4755]	SETTABLE 	R43 K82 K50 ; R43["LocalizedDesc"] := ""
	599	[4756]	GETTABLE 	R44 R42 K83 ; R44 := R42["ListItems"]
	600	[4756]	SETTABLE 	R43 K83 R44 ; R43["ListItems"] := R44
	601	[4757]	GETGLOBAL	R44 K20 ; R44 := mAffinityGrid
	602	[4757]	SELF     	R44 R44 K45 ; R45 := R44; R44 := R44[0xbad4316f]
	603	[4757]	MOVE     	R46 R43 ; R46 := R43
	604	[4757]	OP_LOADBOOL	R47 1 0 ; R47 := true
	605	[4757]	CALL     	R44 4 1 ; R44(R45,R46,R47)
	606	[4747]	TFORLOOP 	R38 2 ; R41,R42 := R38(R39,R40); if R41 ~= nil then begin PC = 574; R40 := R41 end
	607	[4758]	JMP      	574 ; PC := 574
	608	[4760]	RETURN   	R0 1 ; return 

function #117 <?:4762,4799> (100 instructions, 400 bytes at 00000160FB236960)
4 params, 29 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[4763]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[4763]	MOVE     	R5 R0 ; R5 := R0
	3	[4763]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[4763]	TEST     	R4 0 ; if not R4 then PC := 10
	5	[4763]	JMP      	10 ; PC := 10
	6	[4764]	MOVE     	R4 R1 ; R4 := R1
	7	[4764]	MOVE     	R5 R2 ; R5 := R2
	8	[4764]	MOVE     	R6 R3 ; R6 := R3
	9	[4764]	RETURN   	R4 4 ; return R4, R5, R6 
	10	[4767]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x54f81b64]
	11	[4767]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[4768]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0xc2c483ce]
	13	[4768]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[4770]	LOADK    	R6 := 1.000000
	15	[4770]	LEN      	R7 R4 ; R7 := # R4
	16	[4770]	LOADK    	R8 := 1.000000
	17	[4770]	FORPREP  	R6 50 ; R6 -= R8; PC := 50
	18	[4771]	OP_LOADBOOL	R10 0 0 ; R10 := false
	19	[4772]	LOADK    	R11 := 1.000000
	20	[4772]	GETUPVAL 	R12 U0 ; R12 := U0
	21	[4772]	LEN      	R12 R12 ; R12 := # R12
	22	[4772]	LOADK    	R13 := 1.000000
	23	[4772]	FORPREP  	R11 42 ; R11 -= R13; PC := 42
	24	[4773]	GETUPVAL 	R15 U0 ; R15 := U0
	25	[4773]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	26	[4773]	GETTABLE 	R15 R15 K3 ; R15 := R15["mItemType"]
	27	[4773]	GETTABLE 	R16 R4 R9 ; R16 := R4[R9]
	28	[4773]	GETTABLE 	R16 R16 K3 ; R16 := R16["mItemType"]
	29	[4773]	EQ       	0 R15 R16 ; if R15 ~= R16 then PC := 42
	30	[4773]	JMP      	42 ; PC := 42
	31	[4774]	GETUPVAL 	R15 U0 ; R15 := U0
	32	[4774]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	33	[4774]	GETUPVAL 	R16 U0 ; R16 := U0
	34	[4774]	GETTABLE 	R16 R16 R14 ; R16 := R16[R14]
	35	[4774]	GETTABLE 	R16 R16 K4 ; R16 := R16["mItemCount"]
	36	[4774]	GETTABLE 	R17 R4 R9 ; R17 := R4[R9]
	37	[4774]	GETTABLE 	R17 R17 K4 ; R17 := R17["mItemCount"]
	38	[4774]	ADD      	R16 R16 R17 ; R16 := R16 + R17
	39	[4774]	SETTABLE 	R15 K4 R16 ; R15["mItemCount"] := R16
	40	[4775]	OP_LOADBOOL	R10 1 0 ; R10 := true
	41	[4776]	JMP      	43 ; PC := 43
	42	[4772]	FORLOOP  	R11 24 ; R11 += R13; if R11 <= R12 then begin PC := 24; R14 := R11 end
	43	[4779]	TEST     	R10 1 ; if R10 then PC := 50
	44	[4779]	JMP      	50 ; PC := 50
	45	[4780]	GETGLOBAL	R15 K5 ; R15 := 0x33bdd652
	46	[4780]	GETTABLE 	R15 R15 K6 ; R15 := R15[0x23d5322f]
	47	[4780]	GETUPVAL 	R16 U0 ; R16 := U0
	48	[4780]	GETTABLE 	R17 R4 R9 ; R17 := R4[R9]
	49	[4780]	CALL     	R15 3 1 ; R15(R16,R17)
	50	[4770]	FORLOOP  	R6 18 ; R6 += R8; if R6 <= R7 then begin PC := 18; R9 := R6 end
	51	[4784]	LOADK    	R15 := 1.000000
	52	[4784]	LEN      	R16 R5 ; R16 := # R5
	53	[4784]	LOADK    	R17 := 1.000000
	54	[4784]	FORPREP  	R15 87 ; R15 -= R17; PC := 87
	55	[4785]	OP_LOADBOOL	R19 0 0 ; R19 := false
	56	[4786]	LOADK    	R20 := 1.000000
	57	[4786]	GETUPVAL 	R21 U1 ; R21 := U1
	58	[4786]	LEN      	R21 R21 ; R21 := # R21
	59	[4786]	LOADK    	R22 := 1.000000
	60	[4786]	FORPREP  	R20 79 ; R20 -= R22; PC := 79
	61	[4787]	GETUPVAL 	R24 U1 ; R24 := U1
	62	[4787]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	63	[4787]	GETTABLE 	R24 R24 K3 ; R24 := R24["mItemType"]
	64	[4787]	GETTABLE 	R25 R5 R18 ; R25 := R5[R18]
	65	[4787]	GETTABLE 	R25 R25 K3 ; R25 := R25["mItemType"]
	66	[4787]	EQ       	0 R24 R25 ; if R24 ~= R25 then PC := 79
	67	[4787]	JMP      	79 ; PC := 79
	68	[4788]	GETUPVAL 	R24 U1 ; R24 := U1
	69	[4788]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	70	[4788]	GETUPVAL 	R25 U1 ; R25 := U1
	71	[4788]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	72	[4788]	GETTABLE 	R25 R25 K4 ; R25 := R25["mItemCount"]
	73	[4788]	GETTABLE 	R26 R5 R18 ; R26 := R5[R18]
	74	[4788]	GETTABLE 	R26 R26 K4 ; R26 := R26["mItemCount"]
	75	[4788]	ADD      	R25 R25 R26 ; R25 := R25 + R26
	76	[4788]	SETTABLE 	R24 K4 R25 ; R24["mItemCount"] := R25
	77	[4789]	OP_LOADBOOL	R19 1 0 ; R19 := true
	78	[4790]	JMP      	80 ; PC := 80
	79	[4786]	FORLOOP  	R20 61 ; R20 += R22; if R20 <= R21 then begin PC := 61; R23 := R20 end
	80	[4793]	TEST     	R19 1 ; if R19 then PC := 87
	81	[4793]	JMP      	87 ; PC := 87
	82	[4794]	GETGLOBAL	R24 K5 ; R24 := 0x33bdd652
	83	[4794]	GETTABLE 	R24 R24 K6 ; R24 := R24[0x23d5322f]
	84	[4794]	GETUPVAL 	R25 U1 ; R25 := U1
	85	[4794]	GETTABLE 	R26 R5 R18 ; R26 := R5[R18]
	86	[4794]	CALL     	R24 3 1 ; R24(R25,R26)
	87	[4784]	FORLOOP  	R15 55 ; R15 += R17; if R15 <= R16 then begin PC := 55; R18 := R15 end
	88	[4798]	SELF     	R24 R0 K7 ; R25 := R0; R24 := R0[0x6be612e3]
	89	[4798]	CALL     	R24 2 2 ; R24 := R24(R25)
	90	[4798]	ADD      	R24 R1 R24 ; R24 := R1 + R24
	91	[4798]	SELF     	R25 R0 K8 ; R26 := R0; R25 := R0[0x8a489022]
	92	[4798]	OP_LOADBOOL	R27 0 0 ; R27 := false
	93	[4798]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	94	[4798]	ADD      	R25 R2 R25 ; R25 := R2 + R25
	95	[4798]	SELF     	R26 R0 K8 ; R27 := R0; R26 := R0[0x8a489022]
	96	[4798]	OP_LOADBOOL	R28 1 0 ; R28 := true
	97	[4798]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	98	[4798]	ADD      	R26 R3 R26 ; R26 := R3 + R26
	99	[4798]	RETURN   	R24 4 ; return R24, R25, R26 
	100	[4799]	RETURN   	R0 1 ; return 

function #118 <?:4801,4925> (400 instructions, 1600 bytes at 00000160FB236DD0)
1 param, 41 slots, 17 upvalues, 0 locals, 71 constants, 0 functions
	1	[4802]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4802]	CALL     	R1 1 2 ; R1 := R1()
	3	[4803]	LOADNIL  	R2 R2 ; R2 := nil
	4	[4804]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	5	[4804]	MOVE     	R4 R1 ; R4 := R1
	6	[4804]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[4804]	TEST     	R3 1 ; if R3 then PC := 12
	8	[4804]	JMP      	12 ; PC := 12
	9	[4805]	SELF     	R3 R1 K1 ; R4 := R1; R3 := R1[0xb8c8dfbd]
	10	[4805]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[4805]	MOVE     	R2 R3 ; R2 := R3
	12	[4807]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	13	[4807]	MOVE     	R4 R2 ; R4 := R2
	14	[4807]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[4807]	TEST     	R3 0 ; if not R3 then PC := 21
	16	[4807]	JMP      	21 ; PC := 21
	17	[4808]	GETGLOBAL	R3 K2 ; R3 := 0x3d106989
	18	[4808]	LOADK    	R4 K3 ; R4 := "Cannot PopulateRewardsPanel local player! Avatar was NULL or InventoryController was wrong type"
	19	[4808]	CALL     	R3 2 1 ; R3(R4)
	20	[4809]	RETURN   	R0 1 ; return 
	21	[4812]	OP_LOADBOOL	R3 0 0 ; R3 := false
	22	[4813]	GETUPVAL 	R4 U1 ; R4 := U1
	23	[4813]	GETTABLE 	R4 R4 K4 ; R4 := R4[0xcdc34211]
	24	[4813]	CALL     	R4 1 2 ; R4 := R4()
	25	[4813]	TEST     	R4 0 ; if not R4 then PC := 35
	26	[4813]	JMP      	35 ; PC := 35
	27	[4814]	GETUPVAL 	R4 U2 ; R4 := U2
	28	[4814]	GETTABLE 	R4 R4 K5 ; R4 := R4["isPvp"]
	29	[4814]	TEST     	R4 1 ; if R4 then PC := 35
	30	[4814]	JMP      	35 ; PC := 35
	31	[4815]	GETGLOBAL	R4 K6 ; R4 := 0xbe190284
	32	[4815]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0x9c1cc518]
	33	[4815]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[4815]	MOVE     	R3 R4 ; R3 := R4
	35	[4819]	TEST     	R0 1 ; if R0 then PC := 39
	36	[4819]	JMP      	39 ; PC := 39
	37	[4819]	TEST     	R3 0 ; if not R3 then PC := 40
	38	[4819]	JMP      	40 ; PC := 40
	39	[4820]	RETURN   	R0 1 ; return 
	40	[4823]	NEWTABLE 	R4 0 0 ; R4 := {}
	41	[4823]	SETUPVAL 	R4 U3 ; U3 := R4
	42	[4825]	SELF     	R4 R2 K8 ; R5 := R2; R4 := R2[0x54f81b64]
	43	[4825]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[4825]	SETUPVAL 	R4 U4 ; U4 := R4
	45	[4826]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	46	[4826]	GETUPVAL 	R5 U4 ; R5 := U4
	47	[4826]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[4826]	TEST     	R4 0 ; if not R4 then PC := 52
	49	[4826]	JMP      	52 ; PC := 52
	50	[4827]	NEWTABLE 	R4 0 0 ; R4 := {}
	51	[4827]	SETUPVAL 	R4 U4 ; U4 := R4
	52	[4829]	GETUPVAL 	R4 U6 ; R4 := U6
	53	[4829]	CALL     	R4 1 2 ; R4 := R4()
	54	[4829]	SETUPVAL 	R4 U5 ; U5 := R4
	55	[4830]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0xc2c483ce]
	56	[4830]	CALL     	R4 2 2 ; R4 := R4(R5)
	57	[4830]	SETUPVAL 	R4 U7 ; U7 := R4
	58	[4831]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	59	[4831]	GETUPVAL 	R5 U7 ; R5 := U7
	60	[4831]	CALL     	R4 2 2 ; R4 := R4(R5)
	61	[4831]	TEST     	R4 0 ; if not R4 then PC := 65
	62	[4831]	JMP      	65 ; PC := 65
	63	[4832]	NEWTABLE 	R4 0 0 ; R4 := {}
	64	[4832]	SETUPVAL 	R4 U7 ; U7 := R4
	65	[4834]	SELF     	R4 R2 K10 ; R5 := R2; R4 := R2[0x53748abf]
	66	[4834]	CALL     	R4 2 2 ; R4 := R4(R5)
	67	[4836]	LT       	0 K11 R4 ; if 0.000000 >= R4 then PC := 82
	68	[4836]	JMP      	82 ; PC := 82
	69	[4836]	GETGLOBAL	R5 K12 ; R5 := _T
	70	[4836]	GETTABLE 	R5 R5 K13 ; R5 := R5["eomScreenMode"]
	71	[4836]	GETUPVAL 	R6 U8 ; R6 := U8
	72	[4836]	GETTABLE 	R6 R6 K14 ; R6 := R6["ACTUAL_EOM"]
	73	[4836]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 82
	74	[4836]	JMP      	82 ; PC := 82
	75	[4837]	GETGLOBAL	R5 K15 ; R5 := 0x33bdd652
	76	[4837]	GETTABLE 	R5 R5 K16 ; R5 := R5[0x23d5322f]
	77	[4837]	GETUPVAL 	R6 U7 ; R6 := U7
	78	[4837]	NEWTABLE 	R7 0 2 ; R7 := {}
	79	[4837]	SETTABLE 	R7 K17 K18 ; R7["mIsMystery"] := true
	80	[4837]	SETTABLE 	R7 K19 R4 ; R7["mItemCount"] := R4
	81	[4837]	CALL     	R5 3 1 ; R5(R6,R7)
	82	[4840]	GETGLOBAL	R5 K12 ; R5 := _T
	83	[4840]	GETTABLE 	R5 R5 K13 ; R5 := R5["eomScreenMode"]
	84	[4840]	GETUPVAL 	R6 U8 ; R6 := U8
	85	[4840]	GETTABLE 	R6 R6 K14 ; R6 := R6["ACTUAL_EOM"]
	86	[4840]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 109
	87	[4840]	JMP      	109 ; PC := 109
	88	[4840]	GETGLOBAL	R5 K6 ; R5 := 0xbe190284
	89	[4840]	SELF     	R5 R5 K20 ; R6 := R5; R5 := R5[0xf2deaf69]
	90	[4840]	GETGLOBAL	R7 K21 ; R7 := gLotusGameRulesType
	91	[4840]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	92	[4840]	TEST     	R5 0 ; if not R5 then PC := 109
	93	[4840]	JMP      	109 ; PC := 109
	94	[4841]	GETGLOBAL	R5 K6 ; R5 := 0xbe190284
	95	[4841]	SELF     	R5 R5 K22 ; R6 := R5; R5 := R5[0x0185577b]
	96	[4841]	CALL     	R5 2 2 ; R5 := R5(R6)
	97	[4842]	LOADK    	R6 := 1.000000
	98	[4842]	MOVE     	R7 R5 ; R7 := R5
	99	[4842]	LOADK    	R8 := 1.000000
	100	[4842]	FORPREP  	R6 108 ; R6 -= R8; PC := 108
	101	[4843]	GETGLOBAL	R10 K15 ; R10 := 0x33bdd652
	102	[4843]	GETTABLE 	R10 R10 K16 ; R10 := R10[0x23d5322f]
	103	[4843]	GETUPVAL 	R11 U7 ; R11 := U7
	104	[4843]	NEWTABLE 	R12 0 2 ; R12 := {}
	105	[4843]	SETTABLE 	R12 K17 K18 ; R12["mIsMystery"] := true
	106	[4843]	SETTABLE 	R12 K19 K23 ; R12["mItemCount"] := 1.000000
	107	[4843]	CALL     	R10 3 1 ; R10(R11,R12)
	108	[4842]	FORLOOP  	R6 101 ; R6 += R8; if R6 <= R7 then begin PC := 101; R9 := R6 end
	109	[4848]	GETUPVAL 	R10 U7 ; R10 := U7
	110	[4848]	LEN      	R10 R10 ; R10 := # R10
	111	[4848]	LOADK    	R11 := 1.000000
	112	[4848]	LOADK    	R12 := -1.000000
	113	[4848]	FORPREP  	R10 142 ; R10 -= R12; PC := 142
	114	[4849]	GETUPVAL 	R14 U7 ; R14 := U7
	115	[4849]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	116	[4850]	GETTABLE 	R15 R14 K19 ; R15 := R14["mItemCount"]
	117	[4850]	LE       	1 R15 K11 ; if R15 <= 0.000000 then PC := 137
	118	[4850]	JMP      	137 ; PC := 137
	119	[4850]	GETGLOBAL	R15 K12 ; R15 := _T
	120	[4850]	GETTABLE 	R15 R15 K13 ; R15 := R15["eomScreenMode"]
	121	[4850]	GETUPVAL 	R16 U8 ; R16 := U8
	122	[4850]	GETTABLE 	R16 R16 K14 ; R16 := R16["ACTUAL_EOM"]
	123	[4850]	EQ       	0 R15 R16 ; if R15 ~= R16 then PC := 142
	124	[4850]	JMP      	142 ; PC := 142
	125	[4850]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	126	[4850]	GETTABLE 	R16 R14 K24 ; R16 := R14["mItemType"]
	127	[4850]	CALL     	R15 2 2 ; R15 := R15(R16)
	128	[4850]	TEST     	R15 1 ; if R15 then PC := 142
	129	[4850]	JMP      	142 ; PC := 142
	130	[4850]	GETTABLE 	R15 R14 K24 ; R15 := R14["mItemType"]
	131	[4850]	SELF     	R15 R15 K20 ; R16 := R15; R15 := R15[0xf2deaf69]
	132	[4850]	GETUPVAL 	R17 U9 ; R17 := U9
	133	[4850]	GETTABLE 	R17 R17 K25 ; R17 := R17["TransientMiscItem"]
	134	[4850]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	135	[4850]	TEST     	R15 0 ; if not R15 then PC := 142
	136	[4850]	JMP      	142 ; PC := 142
	137	[4851]	GETGLOBAL	R15 K15 ; R15 := 0x33bdd652
	138	[4851]	GETTABLE 	R15 R15 K26 ; R15 := R15[0x9c1f3b5a]
	139	[4851]	GETUPVAL 	R16 U7 ; R16 := U7
	140	[4851]	MOVE     	R17 R13 ; R17 := R13
	141	[4851]	CALL     	R15 3 1 ; R15(R16,R17)
	142	[4848]	FORLOOP  	R10 114 ; R10 += R12; if R10 <= R11 then begin PC := 114; R13 := R10 end
	143	[4856]	GETGLOBAL	R15 K27 ; R15 := 0x89326c93
	144	[4856]	SELF     	R15 R15 K28 ; R16 := R15; R15 := R15[0xded7d5cd]
	145	[4856]	CALL     	R15 2 2 ; R15 := R15(R16)
	146	[4857]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	147	[4857]	MOVE     	R17 R15 ; R17 := R15
	148	[4857]	CALL     	R16 2 2 ; R16 := R16(R17)
	149	[4857]	TEST     	R16 1 ; if R16 then PC := 191
	150	[4857]	JMP      	191 ; PC := 191
	151	[4857]	LEN      	R16 R15 ; R16 := # R15
	152	[4857]	LT       	0 K11 R16 ; if 0.000000 >= R16 then PC := 191
	153	[4857]	JMP      	191 ; PC := 191
	154	[4858]	OP_LOADBOOL	R16 0 0 ; R16 := false
	155	[4859]	SELF     	R17 R2 K29 ; R18 := R2; R17 := R2[0xac1cb923]
	156	[4859]	OP_LOADBOOL	R19 0 0 ; R19 := false
	157	[4859]	OP_LOADBOOL	R20 1 0 ; R20 := true
	158	[4859]	MOVE     	R21 R16 ; R21 := R16
	159	[4859]	CALL     	R17 5 2 ; R17 := R17(R18,R19,R20,R21)
	160	[4860]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	161	[4860]	MOVE     	R19 R17 ; R19 := R17
	162	[4860]	CALL     	R18 2 2 ; R18 := R18(R19)
	163	[4860]	TEST     	R18 1 ; if R18 then PC := 191
	164	[4860]	JMP      	191 ; PC := 191
	165	[4861]	LOADK    	R18 := 1.000000
	166	[4861]	LEN      	R19 R17 ; R19 := # R17
	167	[4861]	LOADK    	R20 := 1.000000
	168	[4861]	FORPREP  	R18 190 ; R18 -= R20; PC := 190
	169	[4862]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	170	[4862]	GETTABLE 	R23 R17 R21 ; R23 := R17[R21]
	171	[4862]	GETTABLE 	R23 R23 K24 ; R23 := R23["mItemType"]
	172	[4862]	CALL     	R22 2 2 ; R22 := R22(R23)
	173	[4862]	TEST     	R22 1 ; if R22 then PC := 190
	174	[4862]	JMP      	190 ; PC := 190
	175	[4862]	GETTABLE 	R22 R17 R21 ; R22 := R17[R21]
	176	[4862]	GETTABLE 	R22 R22 K19 ; R22 := R22["mItemCount"]
	177	[4862]	LT       	0 K11 R22 ; if 0.000000 >= R22 then PC := 190
	178	[4862]	JMP      	190 ; PC := 190
	179	[4863]	GETGLOBAL	R22 K15 ; R22 := 0x33bdd652
	180	[4863]	GETTABLE 	R22 R22 K16 ; R22 := R22[0x23d5322f]
	181	[4863]	GETUPVAL 	R23 U3 ; R23 := U3
	182	[4863]	NEWTABLE 	R24 0 2 ; R24 := {}
	183	[4863]	GETTABLE 	R25 R17 R21 ; R25 := R17[R21]
	184	[4863]	GETTABLE 	R25 R25 K24 ; R25 := R25["mItemType"]
	185	[4863]	SETTABLE 	R24 K24 R25 ; R24[0xae91e43b] := R25
	186	[4863]	GETTABLE 	R25 R17 R21 ; R25 := R17[R21]
	187	[4863]	GETTABLE 	R25 R25 K19 ; R25 := R25["mItemCount"]
	188	[4863]	SETTABLE 	R24 K19 R25 ; R24["mItemCount"] := R25
	189	[4863]	CALL     	R22 3 1 ; R22(R23,R24)
	190	[4861]	FORLOOP  	R18 169 ; R18 += R20; if R18 <= R19 then begin PC := 169; R21 := R18 end
	191	[4869]	GETGLOBAL	R22 K30 ; R22 := mPlayerMissionInfo
	192	[4869]	GETTABLE 	R22 R22 K31 ; R22 := R22["mScore"]
	193	[4869]	LT       	0 K11 R22 ; if 0.000000 >= R22 then PC := 214
	194	[4869]	JMP      	214 ; PC := 214
	195	[4870]	GETUPVAL 	R22 U10 ; R22 := U10
	196	[4870]	GETGLOBAL	R23 K30 ; R23 := mPlayerMissionInfo
	197	[4870]	GETTABLE 	R23 R23 K31 ; R23 := R23["mScore"]
	198	[4870]	CALL     	R22 2 3 ; R22,R23 := R22(R23)
	199	[4871]	TEST     	R22 0 ; if not R22 then PC := 214
	200	[4871]	JMP      	214 ; PC := 214
	201	[4872]	GETGLOBAL	R24 K15 ; R24 := 0x33bdd652
	202	[4872]	GETTABLE 	R24 R24 K16 ; R24 := R24[0x23d5322f]
	203	[4872]	GETGLOBAL	R25 K32 ; R25 := mOtherStuff
	204	[4872]	NEWTABLE 	R26 0 6 ; R26 := {}
	205	[4872]	SETTABLE 	R26 K33 R22 ; R26["Name"] := R22
	206	[4872]	SETTABLE 	R26 K34 R23 ; R26["Count"] := R23
	207	[4872]	GETUPVAL 	R27 U11 ; R27 := U11
	208	[4872]	CALL     	R27 1 2 ; R27 := R27()
	209	[4872]	SETTABLE 	R26 K35 R27 ; R26["Icon"] := R27
	210	[4872]	SETTABLE 	R26 K36 K37 ; R26["SortPriority"] := 25.000000
	211	[4872]	SETTABLE 	R26 K38 K18 ; R26["Themed"] := true
	212	[4872]	SETTABLE 	R26 K39 K40 ; R26["Background"] := nil
	213	[4872]	CALL     	R24 3 1 ; R24(R25,R26)
	214	[4876]	GETGLOBAL	R24 K12 ; R24 := _T
	215	[4876]	GETTABLE 	R24 R24 K13 ; R24 := R24["eomScreenMode"]
	216	[4876]	GETUPVAL 	R25 U8 ; R25 := U8
	217	[4876]	GETTABLE 	R25 R25 K41 ; R25 := R25["DETAILED_PREVIEW"]
	218	[4876]	EQ       	1 R24 R25 ; if R24 == R25 then PC := 229
	219	[4876]	JMP      	229 ; PC := 229
	220	[4876]	GETUPVAL 	R24 U12 ; R24 := U12
	221	[4876]	CALL     	R24 1 2 ; R24 := R24()
	222	[4876]	TEST     	R24 1 ; if R24 then PC := 229
	223	[4876]	JMP      	229 ; PC := 229
	224	[4876]	GETUPVAL 	R24 U1 ; R24 := U1
	225	[4876]	GETTABLE 	R24 R24 K4 ; R24 := R24[0xcdc34211]
	226	[4876]	CALL     	R24 1 2 ; R24 := R24()
	227	[4876]	TEST     	R24 1 ; if R24 then PC := 400
	228	[4876]	JMP      	400 ; PC := 400
	229	[4877]	LOADK    	R24 := 0.000000
	230	[4878]	LOADK    	R25 := 0.000000
	231	[4879]	LOADK    	R26 := 0.000000
	232	[4880]	LOADK    	R27 := 0.000000
	233	[4882]	GETGLOBAL	R28 K27 ; R28 := 0x89326c93
	234	[4882]	SELF     	R28 R28 K42 ; R29 := R28; R28 := R28[0xfb64e76c]
	235	[4882]	CALL     	R28 2 2 ; R28 := R28(R29)
	236	[4883]	GETGLOBAL	R29 K0 ; R29 := 0x7b998233
	237	[4883]	MOVE     	R30 R28 ; R30 := R28
	238	[4883]	CALL     	R29 2 2 ; R29 := R29(R30)
	239	[4883]	TEST     	R29 1 ; if R29 then PC := 279
	240	[4883]	JMP      	279 ; PC := 279
	241	[4885]	SELF     	R29 R28 K43 ; R30 := R28; R29 := R28[0x5578d98b]
	242	[4885]	CALL     	R29 2 2 ; R29 := R29(R30)
	243	[4886]	GETGLOBAL	R30 K0 ; R30 := 0x7b998233
	244	[4886]	MOVE     	R31 R29 ; R31 := R29
	245	[4886]	CALL     	R30 2 2 ; R30 := R30(R31)
	246	[4886]	TEST     	R30 1 ; if R30 then PC := 258
	247	[4886]	JMP      	258 ; PC := 258
	248	[4887]	GETUPVAL 	R30 U13 ; R30 := U13
	249	[4887]	SELF     	R31 R29 K44 ; R32 := R29; R31 := R29[0xde321e6f]
	250	[4887]	CALL     	R31 2 2 ; R31 := R31(R32)
	251	[4887]	MOVE     	R32 R24 ; R32 := R24
	252	[4887]	MOVE     	R33 R26 ; R33 := R26
	253	[4887]	MOVE     	R34 R27 ; R34 := R27
	254	[4887]	CALL     	R30 5 4 ; R30,R31,R32 := R30(R31,R32,R33,R34)
	255	[4887]	MOVE     	R27 R32 ; R27 := R32
	256	[4887]	MOVE     	R26 R31 ; R26 := R31
	257	[4887]	MOVE     	R24 R30 ; R24 := R30
	258	[4891]	SELF     	R30 R28 K45 ; R31 := R28; R30 := R28[0xbb610e5b]
	259	[4891]	CALL     	R30 2 2 ; R30 := R30(R31)
	260	[4892]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	261	[4892]	MOVE     	R32 R30 ; R32 := R30
	262	[4892]	CALL     	R31 2 2 ; R31 := R31(R32)
	263	[4892]	TEST     	R31 1 ; if R31 then PC := 279
	264	[4892]	JMP      	279 ; PC := 279
	265	[4892]	EQ       	1 R30 R1 ; if R30 == R1 then PC := 279
	266	[4892]	JMP      	279 ; PC := 279
	267	[4892]	EQ       	1 R30 R29 ; if R30 == R29 then PC := 279
	268	[4892]	JMP      	279 ; PC := 279
	269	[4893]	GETUPVAL 	R31 U13 ; R31 := U13
	270	[4893]	SELF     	R32 R30 K44 ; R33 := R30; R32 := R30[0xde321e6f]
	271	[4893]	CALL     	R32 2 2 ; R32 := R32(R33)
	272	[4893]	MOVE     	R33 R24 ; R33 := R24
	273	[4893]	MOVE     	R34 R26 ; R34 := R26
	274	[4893]	MOVE     	R35 R27 ; R35 := R27
	275	[4893]	CALL     	R31 5 4 ; R31,R32,R33 := R31(R32,R33,R34,R35)
	276	[4893]	MOVE     	R27 R33 ; R27 := R33
	277	[4893]	MOVE     	R26 R32 ; R26 := R32
	278	[4893]	MOVE     	R24 R31 ; R24 := R31
	279	[4897]	SELF     	R31 R2 K46 ; R32 := R2; R31 := R2[0x6be612e3]
	280	[4897]	CALL     	R31 2 2 ; R31 := R31(R32)
	281	[4897]	ADD      	R24 R31 R24 ; R24 := R31 + R24
	282	[4898]	GETUPVAL 	R31 U14 ; R31 := U14
	283	[4898]	MOVE     	R32 R25 ; R32 := R25
	284	[4898]	MOVE     	R33 R24 ; R33 := R24
	285	[4898]	LOADK    	R34 K47 ; R34 := "Credits"
	286	[4898]	GETUPVAL 	R35 U15 ; R35 := U15
	287	[4898]	GETTABLE 	R35 R35 K48 ; R35 := R35[0x1142c7a8]
	288	[4898]	MOVE     	R36 R24 ; R36 := R24
	289	[4898]	CALL     	R35 2 2 ; R35 := R35(R36)
	290	[4898]	LOADK    	R36 K49 ; R36 := " "
	291	[4898]	GETGLOBAL	R37 K50 ; R37 := 0xae91e43b
	292	[4898]	SELF     	R37 R37 K51 ; R38 := R37; R37 := R37[0x42b04007]
	293	[4898]	LOADK    	R39 K52 ; R39 := "/Lotus/Language/Menu/MissionStats_MissionCredits"
	294	[4898]	OP_LOADBOOL	R40 0 0 ; R40 := false
	295	[4898]	CALL     	R37 4 2 ; R37 := R37(R38,R39,R40)
	296	[4898]	CONCAT   	R35 R35 R37 ; R35 := R35 .. R36 .. R37
	297	[4898]	CALL     	R31 5 2 ; R31 := R31(R32,R33,R34,R35)
	298	[4898]	MOVE     	R25 R31 ; R25 := R31
	299	[4900]	GETUPVAL 	R31 U16 ; R31 := U16
	300	[4900]	CALL     	R31 1 2 ; R31 := R31()
	301	[4900]	MOVE     	R24 R31 ; R24 := R31
	302	[4901]	GETUPVAL 	R31 U14 ; R31 := U14
	303	[4901]	MOVE     	R32 R25 ; R32 := R25
	304	[4901]	MOVE     	R33 R24 ; R33 := R24
	305	[4901]	LOADK    	R34 K47 ; R34 := "Credits"
	306	[4901]	MOVE     	R35 R24 ; R35 := R24
	307	[4901]	LOADK    	R36 K49 ; R36 := " "
	308	[4901]	GETGLOBAL	R37 K50 ; R37 := 0xae91e43b
	309	[4901]	SELF     	R37 R37 K51 ; R38 := R37; R37 := R37[0x42b04007]
	310	[4901]	LOADK    	R39 K53 ; R39 := "/Lotus/Language/Menu/MissionStats_CreditsBonus"
	311	[4901]	OP_LOADBOOL	R40 0 0 ; R40 := false
	312	[4901]	CALL     	R37 4 2 ; R37 := R37(R38,R39,R40)
	313	[4901]	CONCAT   	R35 R35 R37 ; R35 := R35 .. R36 .. R37
	314	[4901]	CALL     	R31 5 2 ; R31 := R31(R32,R33,R34,R35)
	315	[4901]	MOVE     	R25 R31 ; R25 := R31
	316	[4903]	LT       	0 K11 R25 ; if 0.000000 >= R25 then PC := 339
	317	[4903]	JMP      	339 ; PC := 339
	318	[4904]	GETGLOBAL	R31 K54 ; R31 := 0x7f5022cf
	319	[4904]	GETTABLE 	R31 R31 K55 ; R31 := R31[0x3f3e4d12]
	320	[4904]	GETGLOBAL	R32 K50 ; R32 := 0xae91e43b
	321	[4904]	SELF     	R32 R32 K51 ; R33 := R32; R32 := R32[0x42b04007]
	322	[4904]	LOADK    	R34 K56 ; R34 := "/Lotus/Language/Menu/Store_BuyWithCredits"
	323	[4904]	OP_LOADBOOL	R35 1 0 ; R35 := true
	324	[4904]	CALL     	R32 4 0 ; R32,... := R32(R33,R34,R35)
	325	[4904]	CALL     	R31 0 2 ; R31 := R31(R32,...)
	326	[4905]	NEWTABLE 	R32 0 6 ; R32 := {}
	327	[4905]	SETTABLE 	R32 K33 R31 ; R32["Name"] := R31
	328	[4905]	SETTABLE 	R32 K34 K23 ; R32["Count"] := 1.000000
	329	[4905]	SETTABLE 	R32 K47 R25 ; R32["Credits"] := R25
	330	[4905]	GETGLOBAL	R33 K57 ; R33 := 0x9afd2e71
	331	[4905]	SETTABLE 	R32 K35 R33 ; R32["Icon"] := R33
	332	[4905]	SETTABLE 	R32 K38 K18 ; R32["Themed"] := true
	333	[4905]	SETTABLE 	R32 K39 K40 ; R32["Background"] := nil
	334	[4906]	GETGLOBAL	R33 K15 ; R33 := 0x33bdd652
	335	[4906]	GETTABLE 	R33 R33 K16 ; R33 := R33[0x23d5322f]
	336	[4906]	GETGLOBAL	R34 K32 ; R34 := mOtherStuff
	337	[4906]	MOVE     	R35 R32 ; R35 := R32
	338	[4906]	CALL     	R33 3 1 ; R33(R34,R35)
	339	[4909]	SELF     	R33 R2 K58 ; R34 := R2; R33 := R2[0x8a489022]
	340	[4909]	OP_LOADBOOL	R35 0 0 ; R35 := false
	341	[4909]	CALL     	R33 3 2 ; R33 := R33(R34,R35)
	342	[4909]	ADD      	R26 R33 R26 ; R26 := R33 + R26
	343	[4910]	GETGLOBAL	R33 K30 ; R33 := mPlayerMissionInfo
	344	[4910]	SETTABLE 	R33 K59 R26 ; R33["mFusionPoints"] := R26
	345	[4911]	LT       	0 K11 R26 ; if 0.000000 >= R26 then PC := 370
	346	[4911]	JMP      	370 ; PC := 370
	347	[4912]	GETGLOBAL	R33 K54 ; R33 := 0x7f5022cf
	348	[4912]	GETTABLE 	R33 R33 K55 ; R33 := R33[0x3f3e4d12]
	349	[4912]	GETGLOBAL	R34 K50 ; R34 := 0xae91e43b
	350	[4912]	SELF     	R34 R34 K51 ; R35 := R34; R34 := R34[0x42b04007]
	351	[4912]	LOADK    	R36 K60 ; R36 := "/Lotus/Language/Items/FusionBundle"
	352	[4912]	OP_LOADBOOL	R37 1 0 ; R37 := true
	353	[4912]	CALL     	R34 4 0 ; R34,... := R34(R35,R36,R37)
	354	[4912]	CALL     	R33 0 2 ; R33 := R33(R34,...)
	355	[4913]	NEWTABLE 	R34 0 7 ; R34 := {}
	356	[4913]	SETTABLE 	R34 K33 R33 ; R34["Name"] := R33
	357	[4913]	SETTABLE 	R34 K61 K62 ; R34["Description"] := "/Lotus/Language/Items/FusionPartDesc"
	358	[4913]	SETTABLE 	R34 K63 R26 ; R34["Endo"] := R26
	359	[4913]	SETTABLE 	R34 K34 K23 ; R34["Count"] := 1.000000
	360	[4913]	GETGLOBAL	R35 K64 ; R35 := 0x457d7698
	361	[4913]	SETTABLE 	R34 K35 R35 ; R34["Icon"] := R35
	362	[4913]	SETTABLE 	R34 K39 K40 ; R34["Background"] := nil
	363	[4913]	GETGLOBAL	R35 K65 ; R35 := mFusionPointsSortPriority
	364	[4913]	SETTABLE 	R34 K36 R35 ; R34["SortPriority"] := R35
	365	[4914]	GETGLOBAL	R35 K15 ; R35 := 0x33bdd652
	366	[4914]	GETTABLE 	R35 R35 K16 ; R35 := R35[0x23d5322f]
	367	[4914]	GETGLOBAL	R36 K66 ; R36 := mSortRewardItems
	368	[4914]	MOVE     	R37 R34 ; R37 := R34
	369	[4914]	CALL     	R35 3 1 ; R35(R36,R37)
	370	[4917]	SELF     	R35 R2 K58 ; R36 := R2; R35 := R2[0x8a489022]
	371	[4917]	OP_LOADBOOL	R37 1 0 ; R37 := true
	372	[4917]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	373	[4917]	ADD      	R27 R35 R27 ; R27 := R35 + R27
	374	[4918]	GETGLOBAL	R35 K30 ; R35 := mPlayerMissionInfo
	375	[4918]	SETTABLE 	R35 K67 R27 ; R35["mCrewShipFusionPoints"] := R27
	376	[4919]	LT       	0 K11 R27 ; if 0.000000 >= R27 then PC := 400
	377	[4919]	JMP      	400 ; PC := 400
	378	[4920]	GETGLOBAL	R35 K54 ; R35 := 0x7f5022cf
	379	[4920]	GETTABLE 	R35 R35 K55 ; R35 := R35[0x3f3e4d12]
	380	[4920]	GETGLOBAL	R36 K50 ; R36 := 0xae91e43b
	381	[4920]	SELF     	R36 R36 K51 ; R37 := R36; R36 := R36[0x42b04007]
	382	[4920]	LOADK    	R38 K68 ; R38 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
	383	[4920]	OP_LOADBOOL	R39 1 0 ; R39 := true
	384	[4920]	CALL     	R36 4 0 ; R36,... := R36(R37,R38,R39)
	385	[4920]	CALL     	R35 0 2 ; R35 := R35(R36,...)
	386	[4921]	NEWTABLE 	R36 0 6 ; R36 := {}
	387	[4921]	SETTABLE 	R36 K33 R35 ; R36["Name"] := R35
	388	[4921]	SETTABLE 	R36 K61 K69 ; R36["Description"] := "/Lotus/Language/Railjack/AvionicEndoDesc"
	389	[4921]	SETTABLE 	R36 K34 R27 ; R36["Count"] := R27
	390	[4921]	GETGLOBAL	R37 K70 ; R37 := 0x1ae7e99f
	391	[4921]	SETTABLE 	R36 K35 R37 ; R36["Icon"] := R37
	392	[4921]	SETTABLE 	R36 K39 K40 ; R36["Background"] := nil
	393	[4921]	GETGLOBAL	R37 K65 ; R37 := mFusionPointsSortPriority
	394	[4921]	SETTABLE 	R36 K36 R37 ; R36["SortPriority"] := R37
	395	[4922]	GETGLOBAL	R37 K15 ; R37 := 0x33bdd652
	396	[4922]	GETTABLE 	R37 R37 K16 ; R37 := R37[0x23d5322f]
	397	[4922]	GETGLOBAL	R38 K66 ; R38 := mSortRewardItems
	398	[4922]	MOVE     	R39 R36 ; R39 := R36
	399	[4922]	CALL     	R37 3 1 ; R37(R38,R39)
	400	[4925]	RETURN   	R0 1 ; return 

function #119 <?:4927,4945> (46 instructions, 184 bytes at 00000160FB238050)
2 params, 7 slots, 0 upvalues, 0 locals, 22 constants, 0 functions
	1	[4928]	GETTABLE 	R2 R0 K0 ; R2 := R0["Filler"]
	2	[4928]	TEST     	R2 1 ; if R2 then PC := 5
	3	[4928]	JMP      	5 ; PC := 5
	4	[4928]	GETTABLE 	R2 R0 K1 ; R2 := R0["EmptySlot"]
	5	[4929]	TEST     	R2 1 ; if R2 then PC := 12
	6	[4929]	JMP      	12 ; PC := 12
	7	[4929]	GETGLOBAL	R3 K2 ; R3 := mRewardGrid
	8	[4929]	GETTABLE 	R3 R3 K3 ; R3 := R3["mPrevSelectedId"]
	9	[4929]	GETTABLE 	R4 R0 K4 ; R4 := R0["Id"]
	10	[4929]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 13
	11	[4929]	JMP      	13 ; PC := 13
	12	[4929]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 13
	13	[4929]	OP_LOADBOOL	R3 1 0 ; R3 := true
	14	[4930]	GETTABLE 	R4 R0 K5 ; R4 := R0["LockedMsg"]
	15	[4932]	NEWTABLE 	R5 0 11 ; R5 := {}
	16	[4933]	SETTABLE 	R5 K6 K7 ; R5["HideCountThreshold"] := 0.000000
	17	[4934]	SETTABLE 	R5 K8 K9 ; R5["NoZoomedVisRange"] := true
	18	[4935]	NEWTABLE 	R6 0 1 ; R6 := {}
	19	[4935]	SETTABLE 	R6 K11 K12 ; R6["TagOverride"] := "/Lotus/Language/Menu/Crafting_Owned_Brief"
	20	[4935]	SETTABLE 	R5 K10 R6 ; R5["OwnedInfo"] := R6
	21	[4936]	SETTABLE 	R5 K13 R2 ; R5["IsFiller"] := R2
	22	[4937]	SETTABLE 	R5 K14 R1 ; R5["IsFocused"] := R1
	23	[4938]	SETTABLE 	R5 K15 R3 ; R5["IsSelected"] := R3
	24	[4939]	EQ       	0 R4 K17 ; if R4 ~= nil then PC := 27
	25	[4939]	JMP      	27 ; PC := 27
	26	[4939]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 27
	27	[4939]	OP_LOADBOOL	R6 1 0 ; R6 := true
	28	[4939]	SETTABLE 	R5 K16 R6 ; R5["Locked"] := R6
	29	[4940]	SETTABLE 	R5 K5 R4 ; R5["LockedMsg"] := R4
	30	[4941]	GETTABLE 	R6 R0 K18 ; R6 := R0["LockedIcon"]
	31	[4941]	SETTABLE 	R5 K18 R6 ; R5["LockedIcon"] := R6
	32	[4942]	GETTABLE 	R6 R0 K19 ; R6 := R0["LockedIconY"]
	33	[4942]	SETTABLE 	R5 K19 R6 ; R5["LockedIconY"] := R6
	34	[4943]	TESTSET  	R6 R1 0 ; if not R1 then PC := 44 else R6 := R1 
	35	[4943]	JMP      	44 ; PC := 44
	36	[4943]	GETTABLE 	R6 R0 K16 ; R6 := R0["Locked"]
	37	[4943]	TEST     	R6 1 ; if R6 then PC := 42
	38	[4943]	JMP      	42 ; PC := 42
	39	[4943]	GETTABLE 	R6 R0 K21 ; R6 := R0["Hidden"]
	40	[4943]	NOT      	R6 R6 ; R6 := not R6
	41	[4943]	JMP      	44 ; PC := 44
	42	[4943]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 43
	43	[4943]	OP_LOADBOOL	R6 1 0 ; R6 := true
	44	[4943]	SETTABLE 	R5 K20 R6 ; R5["ShowInfoPopup"] := R6
	45	[4944]	RETURN   	R5 2 ; return R5 
	46	[4945]	RETURN   	R0 1 ; return 

function #120 <?:4947,4949> (7 instructions, 28 bytes at 00000160FB2383F0)
2 params, 6 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[4948]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4948]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xbf9f30a4]
	3	[4948]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	4	[4948]	GETGLOBAL	R4 K2 ; R4 := mRewardGrid
	5	[4948]	MOVE     	R5 R0 ; R5 := R0
	6	[4948]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	7	[4949]	RETURN   	R0 1 ; return 

function #121 <?:4951,4957> (15 instructions, 60 bytes at 00000160FB238520)
1 param, 8 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[4952]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4952]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[4952]	JMP      	5 ; PC := 5
	4	[4953]	RETURN   	R0 1 ; return 
	5	[4956]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[4956]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xb496de90]
	7	[4956]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	8	[4956]	GETGLOBAL	R3 K4 ; R3 := mRewardGrid
	9	[4956]	MOVE     	R4 R0 ; R4 := R0
	10	[4956]	GETUPVAL 	R5 U1 ; R5 := U1
	11	[4956]	MOVE     	R6 R0 ; R6 := R0
	12	[4956]	OP_LOADBOOL	R7 1 0 ; R7 := true
	13	[4956]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	14	[4956]	CALL     	R1 0 1 ; R1(R2,...)
	15	[4957]	RETURN   	R0 1 ; return 

function #122 <?:4959,4965> (15 instructions, 60 bytes at 00000160FB2386B0)
1 param, 8 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[4960]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4960]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[4960]	JMP      	5 ; PC := 5
	4	[4961]	RETURN   	R0 1 ; return 
	5	[4964]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[4964]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xb496de90]
	7	[4964]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	8	[4964]	GETGLOBAL	R3 K4 ; R3 := mRewardGrid
	9	[4964]	MOVE     	R4 R0 ; R4 := R0
	10	[4964]	GETUPVAL 	R5 U1 ; R5 := U1
	11	[4964]	MOVE     	R6 R0 ; R6 := R0
	12	[4964]	OP_LOADBOOL	R7 0 0 ; R7 := false
	13	[4964]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	14	[4964]	CALL     	R1 0 1 ; R1(R2,...)
	15	[4965]	RETURN   	R0 1 ; return 

function #123 <?:4967,5003> (111 instructions, 444 bytes at 00000160FB238840)
1 param, 9 slots, 2 upvalues, 0 locals, 28 constants, 0 functions
	1	[4968]	GETTABLE 	R1 R0 K0 ; R1 := R0["mClipName"]
	2	[4968]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[4968]	JMP      	5 ; PC := 5
	4	[4969]	RETURN   	R0 1 ; return 
	5	[4972]	GETTABLE 	R1 R0 K2 ; R1 := R0["TaxedCount"]
	6	[4972]	EQ       	1 R1 K1 ; if R1 == nil then PC := 40
	7	[4972]	JMP      	40 ; PC := 40
	8	[4972]	GETTABLE 	R1 R0 K2 ; R1 := R0["TaxedCount"]
	9	[4972]	LT       	0 K3 R1 ; if 0.000000 >= R1 then PC := 40
	10	[4972]	JMP      	40 ; PC := 40
	11	[4973]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	12	[4973]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	13	[4973]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	14	[4973]	LOADK    	R4 K6 ; R4 := "Locked.LockIcon"
	15	[4973]	LOADK    	R5 := 12.000000
	16	[4973]	LOADK    	R6 := 50.000000
	17	[4973]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	18	[4974]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	19	[4974]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	20	[4974]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	21	[4974]	LOADK    	R4 K6 ; R4 := "Locked.LockIcon"
	22	[4974]	LOADK    	R5 := 13.000000
	23	[4974]	LOADK    	R6 := 50.000000
	24	[4974]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	25	[4976]	SETTABLE 	R0 K7 K9 ; R0["LockedIconColor"] := 12.000000
	26	[4977]	SETTABLE 	R0 K10 K11 ; R0["LockIconAlpha"] := 80.000000
	27	[4978]	SETTABLE 	R0 K12 K13 ; R0["LockedIconY"] := 18.000000
	28	[4979]	GETGLOBAL	R1 K15 ; R1 := 0x575a82ad
	29	[4979]	GETTABLE 	R1 R1 K16 ; R1 := R1[1.000000]
	30	[4979]	SETTABLE 	R0 K14 R1 ; R0["LockedIcon"] := R1
	31	[4980]	GETTABLE 	R1 R0 K2 ; R1 := R0["TaxedCount"]
	32	[4980]	LOADK    	R2 K18 ; R2 := "x "
	33	[4980]	GETGLOBAL	R3 K19 ; R3 := 0x603636ad
	34	[4980]	LOADK    	R4 K20 ; R4 := "/Lotus/Language/Nemesis/Stolen"
	35	[4980]	NEWTABLE 	R5 0 0 ; R5 := {}
	36	[4980]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	37	[4980]	CONCAT   	R1 R1 R3 ; R1 := R1 .. R2 .. R3
	38	[4980]	SETTABLE 	R0 K17 R1 ; R0["LockedMsg"] := R1
	39	[4980]	JMP      	95 ; PC := 95
	40	[4981]	GETTABLE 	R1 R0 K21 ; R1 := R0["Recovered"]
	41	[4981]	TEST     	R1 0 ; if not R1 then PC := 69
	42	[4981]	JMP      	69 ; PC := 69
	43	[4982]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	44	[4982]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	45	[4982]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	46	[4982]	LOADK    	R4 K6 ; R4 := "Locked.LockIcon"
	47	[4982]	LOADK    	R5 := 12.000000
	48	[4982]	LOADK    	R6 := 50.000000
	49	[4982]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	50	[4983]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	51	[4983]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	52	[4983]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	53	[4983]	LOADK    	R4 K6 ; R4 := "Locked.LockIcon"
	54	[4983]	LOADK    	R5 := 13.000000
	55	[4983]	LOADK    	R6 := 50.000000
	56	[4983]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	57	[4985]	SETTABLE 	R0 K7 K22 ; R0["LockedIconColor"] := 11.000000
	58	[4986]	SETTABLE 	R0 K10 K11 ; R0["LockIconAlpha"] := 80.000000
	59	[4987]	SETTABLE 	R0 K12 K13 ; R0["LockedIconY"] := 18.000000
	60	[4988]	GETGLOBAL	R1 K15 ; R1 := 0x575a82ad
	61	[4988]	GETTABLE 	R1 R1 K23 ; R1 := R1[2.000000]
	62	[4988]	SETTABLE 	R0 K14 R1 ; R0["LockedIcon"] := R1
	63	[4989]	GETGLOBAL	R1 K19 ; R1 := 0x603636ad
	64	[4989]	LOADK    	R2 K24 ; R2 := "/Lotus/Language/Game/Recovered"
	65	[4989]	NEWTABLE 	R3 0 0 ; R3 := {}
	66	[4989]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	67	[4989]	SETTABLE 	R0 K17 R1 ; R0["LockedMsg"] := R1
	68	[4989]	JMP      	95 ; PC := 95
	69	[4991]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	70	[4991]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	71	[4991]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	72	[4991]	LOADK    	R4 K6 ; R4 := "Locked.LockIcon"
	73	[4991]	LOADK    	R5 := 12.000000
	74	[4991]	LOADK    	R6 := 24.000000
	75	[4991]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	76	[4992]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	77	[4992]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	78	[4992]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	79	[4992]	LOADK    	R4 K6 ; R4 := "Locked.LockIcon"
	80	[4992]	LOADK    	R5 := 13.000000
	81	[4992]	LOADK    	R6 := 24.000000
	82	[4992]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	83	[4993]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	84	[4993]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf64b7262]
	85	[4993]	GETTABLE 	R3 R0 K0 ; R3 := R0["mClipName"]
	86	[4993]	LOADK    	R4 K6 ; R4 := "Locked.LockIcon"
	87	[4993]	LOADK    	R5 := 1.000000
	88	[4993]	LOADK    	R6 := 0.000000
	89	[4993]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	90	[4995]	SETTABLE 	R0 K7 K1 ; R0["LockedIconColor"] := nil
	91	[4996]	SETTABLE 	R0 K10 K1 ; R0["LockIconAlpha"] := nil
	92	[4997]	SETTABLE 	R0 K12 K1 ; R0["LockedIconY"] := nil
	93	[4998]	SETTABLE 	R0 K14 K1 ; R0["LockedIcon"] := nil
	94	[4999]	SETTABLE 	R0 K17 K1 ; R0["LockedMsg"] := nil
	95	[5002]	GETUPVAL 	R1 U0 ; R1 := U0
	96	[5002]	GETTABLE 	R1 R1 K25 ; R1 := R1[0xc339daf7]
	97	[5002]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	98	[5002]	GETGLOBAL	R3 K26 ; R3 := mRewardGrid
	99	[5002]	MOVE     	R4 R0 ; R4 := R0
	100	[5002]	GETUPVAL 	R5 U1 ; R5 := U1
	101	[5002]	MOVE     	R6 R0 ; R6 := R0
	102	[5002]	GETGLOBAL	R7 K26 ; R7 := mRewardGrid
	103	[5002]	SELF     	R7 R7 K27 ; R8 := R7; R7 := R7[0xed1ab921]
	104	[5002]	CALL     	R7 2 2 ; R7 := R7(R8)
	105	[5002]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 108
	106	[5002]	JMP      	108 ; PC := 108
	107	[5002]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 108
	108	[5002]	OP_LOADBOOL	R7 1 0 ; R7 := true
	109	[5002]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	110	[5002]	CALL     	R1 0 1 ; R1(R2,...)
	111	[5003]	RETURN   	R0 1 ; return 

function #124 <?:5005,5118> (305 instructions, 1220 bytes at 00000160FB238F20)
0 params, 15 slots, 7 upvalues, 0 locals, 121 constants, 5 functions
	1	[5006]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[5006]	LOADK    	R1 K1 ; R1 := "Lotus.Interface.Components.CategorizedGrid"
	3	[5006]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5007]	GETTABLE 	R1 R0 K3 ; R1 := R0[0x67d7b715]
	5	[5007]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	6	[5007]	LOADK    	R3 K5 ; R3 := "ExpandableArea.Progression.Rewards.Items.Item"
	7	[5007]	LOADK    	R4 := 5.000000
	8	[5007]	LOADK    	R5 := 2.000000
	9	[5007]	LOADK    	R6 K6 ; R6 := "ExpandableArea.Progression.Rewards.Categories.Menu"
	10	[5007]	LOADK    	R7 K7 ; R7 := "ExpandableArea.Progression.Rewards.SearchAndSort.SortMenu"
	11	[5007]	CALL     	R1 7 2 ; R1 := R1(R2,R3,R4,R5,R6,R7)
	12	[5007]	SETGLOBALHASH	R1 K2 ; mRewardGrid := R1
	13	[5008]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	14	[5008]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x1e5b5cfe]
	15	[5008]	LOADK    	R3 K9 ; R3 := "RewardItemSelected"
	16	[5008]	LOADK    	R4 K10 ; R4 := "RewardItemFocused"
	17	[5008]	LOADK    	R5 K11 ; R5 := "RewardItemUnfocused"
	18	[5008]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	19	[5009]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	20	[5009]	SETTABLE 	R1 K12 K13 ; R1["mShowLabels"] := true
	21	[5010]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	22	[5010]	SETTABLE 	R1 K14 K13 ; R1["SkipReinitializePos"] := true
	23	[5011]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	24	[5011]	SETTABLE 	R1 K15 K16 ; R1["Width"] := 750.000000
	25	[5012]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	26	[5012]	SETTABLE 	R1 K17 K18 ; R1["Height"] := 400.000000
	27	[5013]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	28	[5013]	SETTABLE 	R1 K19 K20 ; R1["ElementDimBuffer"] := 6.000000
	29	[5014]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	30	[5014]	SETTABLE 	R1 K21 K22 ; R1["ElementWidth"] := 144.000000
	31	[5015]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	32	[5015]	SETTABLE 	R1 K23 K22 ; R1["ElementHeight"] := 144.000000
	33	[5016]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	34	[5016]	SETTABLE 	R1 K24 K20 ; R1["PopupPadding"] := 6.000000
	35	[5017]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	36	[5017]	SETTABLE 	R1 K25 K13 ; R1["mScrollAlwaysVisible"] := true
	37	[5018]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	38	[5018]	GETGLOBAL	R2 K2 ; R2 := mRewardGrid
	39	[5018]	GETTABLE 	R2 R2 K21 ; R2 := R2["ElementWidth"]
	40	[5018]	DIV      	R2 R2 K27 ; R2 := R2 / 2.000000
	41	[5018]	ADD      	R2 R2 K28 ; R2 := R2 + 10.000000
	42	[5018]	SETTABLE 	R1 K26 R2 ; R1["mScrollBarHorizontalOffset"] := R2
	43	[5019]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	44	[5019]	SETTABLE 	R1 K29 K30 ; R1["mSelectedScale"] := 100.000000
	45	[5020]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	46	[5020]	GETTABLE 	R1 R1 K31 ; R1 := R1["mSortMenu"]
	47	[5020]	SELF     	R1 R1 K32 ; R2 := R1; R1 := R1[0x8d77b2b2]
	48	[5020]	LOADK    	R3 := 223.000000
	49	[5020]	CALL     	R1 3 1 ; R1(R2,R3)
	50	[5021]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	51	[5021]	SETTABLE 	R1 K33 K13 ; R1["mUseCornerForSelected"] := true
	52	[5022]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	53	[5022]	SETTABLE 	R1 K34 K35 ; R1["mSelectElementsOnFocus"] := false
	54	[5023]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	55	[5023]	SETTABLE 	R1 K36 K35 ; R1["mWrapAroundNavigation"] := false
	56	[5024]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	57	[5024]	SETTABLE 	R1 K37 K38 ; R1["mPrevSelectedId"] := nil
	58	[5025]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	59	[5025]	GETTABLE 	R1 R1 K39 ; R1 := R1["mCategoryMenu"]
	60	[5025]	SETTABLE 	R1 K40 K13 ; R1["mShowToolTips"] := true
	61	[5026]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	62	[5026]	GETTABLE 	R1 R1 K39 ; R1 := R1["mCategoryMenu"]
	63	[5026]	GETUPVAL 	R2 U0 ; R2 := U0
	64	[5026]	GETTABLE 	R2 R2 K42 ; R2 := R2["LEFT_ALIGNED"]
	65	[5026]	SETTABLE 	R1 K41 R2 ; R1["mAlign"] := R2
	66	[5027]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	67	[5027]	GETTABLE 	R1 R1 K39 ; R1 := R1["mCategoryMenu"]
	68	[5027]	SETTABLE 	R1 K43 K13 ; R1["mHideEmptyCategories"] := true
	69	[5028]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	70	[5028]	GETTABLE 	R1 R1 K39 ; R1 := R1["mCategoryMenu"]
	71	[5028]	SETTABLE 	R1 K44 K35 ; R1["mUseOriginalDimensions"] := false
	72	[5029]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	73	[5029]	GETGLOBAL	R2 K46 ; R2 := 0xfee8dbfd
	74	[5029]	SETTABLE 	R1 K45 R2 ; R1["VisibleRangeMaterial"] := R2
	75	[5030]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	76	[5030]	GETGLOBAL	R2 K48 ; R2 := 0xbacf3724
	77	[5030]	SETTABLE 	R1 K47 R2 ; R1["TextVisibleRangeMaterial"] := R2
	78	[5031]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	79	[5031]	GETGLOBAL	R2 K50 ; R2 := 0x2bbc1c3b
	80	[5031]	SETTABLE 	R1 K49 R2 ; R1["RectangleVisibleRangeMaterial"] := R2
	81	[5032]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	82	[5032]	GETUPVAL 	R2 U1 ; R2 := U1
	83	[5032]	SETTABLE 	R1 K51 R2 ; R1["mClipCreatedCallback"] := R2
	84	[5033]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	85	[5033]	GETUPVAL 	R2 U2 ; R2 := U2
	86	[5033]	SETTABLE 	R1 K52 R2 ; R1["mOnFocusedCallback"] := R2
	87	[5034]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	88	[5034]	GETUPVAL 	R2 U3 ; R2 := U3
	89	[5034]	SETTABLE 	R1 K53 R2 ; R1[0x7e4d43ce] := R2
	90	[5035]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	91	[5035]	GETUPVAL 	R2 U4 ; R2 := U4
	92	[5035]	SETTABLE 	R1 K54 R2 ; R1[0x34291f5c] := R2
	93	[5037]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	94	[5037]	SELF     	R1 R1 K55 ; R2 := R1; R1 := R1[0x06d36229]
	95	[5037]	NEWTABLE 	R3 0 3 ; R3 := {}
	96	[5037]	GETUPVAL 	R4 U5 ; R4 := U5
	97	[5037]	GETTABLE 	R4 R4 K57 ; R4 := R4["ALL"]
	98	[5037]	SETTABLE 	R3 K56 R4 ; R3["Category"] := R4
	99	[5037]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	100	[5037]	SELF     	R4 R4 K59 ; R5 := R4; R4 := R4[0x42b04007]
	101	[5037]	LOADK    	R6 K60 ; R6 := "/Lotus/Language/Menu/CategoryAll"
	102	[5037]	OP_LOADBOOL	R7 0 0 ; R7 := false
	103	[5037]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	104	[5037]	SETTABLE 	R3 K58 R4 ; R3[0xc0a3774b] := R4
	105	[5037]	GETGLOBAL	R4 K62 ; R4 := 0x0032441c
	106	[5037]	GETTABLE 	R4 R4 K63 ; R4 := R4["UICategoryIcon_AllOn"]
	107	[5037]	SETTABLE 	R3 K61 R4 ; R3["Icon"] := R4
	108	[5037]	CALL     	R1 3 1 ; R1(R2,R3)
	109	[5038]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	110	[5038]	SELF     	R1 R1 K55 ; R2 := R1; R1 := R1[0x06d36229]
	111	[5038]	NEWTABLE 	R3 0 3 ; R3 := {}
	112	[5038]	GETUPVAL 	R4 U5 ; R4 := U5
	113	[5038]	GETTABLE 	R4 R4 K64 ; R4 := R4["MODS"]
	114	[5038]	SETTABLE 	R3 K56 R4 ; R3["Category"] := R4
	115	[5038]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	116	[5038]	SELF     	R4 R4 K59 ; R5 := R4; R4 := R4[0x42b04007]
	117	[5038]	LOADK    	R6 K65 ; R6 := "/Lotus/Language/Categories/MOD"
	118	[5038]	OP_LOADBOOL	R7 0 0 ; R7 := false
	119	[5038]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	120	[5038]	SETTABLE 	R3 K58 R4 ; R3[0xc0a3774b] := R4
	121	[5038]	GETGLOBAL	R4 K62 ; R4 := 0x0032441c
	122	[5038]	GETTABLE 	R4 R4 K66 ; R4 := R4["UICategoryIcon_ModsOn"]
	123	[5038]	SETTABLE 	R3 K61 R4 ; R3["Icon"] := R4
	124	[5038]	CALL     	R1 3 1 ; R1(R2,R3)
	125	[5039]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	126	[5039]	SELF     	R1 R1 K55 ; R2 := R1; R1 := R1[0x06d36229]
	127	[5039]	NEWTABLE 	R3 0 3 ; R3 := {}
	128	[5039]	GETUPVAL 	R4 U5 ; R4 := U5
	129	[5039]	GETTABLE 	R4 R4 K67 ; R4 := R4["AVIONICS"]
	130	[5039]	SETTABLE 	R3 K56 R4 ; R3["Category"] := R4
	131	[5039]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	132	[5039]	SELF     	R4 R4 K59 ; R5 := R4; R4 := R4[0x42b04007]
	133	[5039]	LOADK    	R6 K68 ; R6 := "/Lotus/Language/Railjack/Avionics"
	134	[5039]	OP_LOADBOOL	R7 0 0 ; R7 := false
	135	[5039]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	136	[5039]	SETTABLE 	R3 K58 R4 ; R3[0xc0a3774b] := R4
	137	[5039]	GETGLOBAL	R4 K69 ; R4 := 0xe0200f0b
	138	[5039]	SETTABLE 	R3 K61 R4 ; R3["Icon"] := R4
	139	[5039]	CALL     	R1 3 1 ; R1(R2,R3)
	140	[5040]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	141	[5040]	SELF     	R1 R1 K55 ; R2 := R1; R1 := R1[0x06d36229]
	142	[5040]	NEWTABLE 	R3 0 3 ; R3 := {}
	143	[5040]	GETUPVAL 	R4 U5 ; R4 := U5
	144	[5040]	GETTABLE 	R4 R4 K70 ; R4 := R4["RELICS"]
	145	[5040]	SETTABLE 	R3 K56 R4 ; R3["Category"] := R4
	146	[5040]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	147	[5040]	SELF     	R4 R4 K59 ; R5 := R4; R4 := R4[0x42b04007]
	148	[5040]	LOADK    	R6 K71 ; R6 := "/Lotus/Language/Categories/RELICS"
	149	[5040]	OP_LOADBOOL	R7 0 0 ; R7 := false
	150	[5040]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	151	[5040]	SETTABLE 	R3 K58 R4 ; R3[0xc0a3774b] := R4
	152	[5040]	GETGLOBAL	R4 K72 ; R4 := 0x0ab5660f
	153	[5040]	SETTABLE 	R3 K61 R4 ; R3["Icon"] := R4
	154	[5040]	CALL     	R1 3 1 ; R1(R2,R3)
	155	[5041]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	156	[5041]	SELF     	R1 R1 K55 ; R2 := R1; R1 := R1[0x06d36229]
	157	[5041]	NEWTABLE 	R3 0 3 ; R3 := {}
	158	[5041]	GETUPVAL 	R4 U5 ; R4 := U5
	159	[5041]	GETTABLE 	R4 R4 K73 ; R4 := R4["RESOURCES"]
	160	[5041]	SETTABLE 	R3 K56 R4 ; R3["Category"] := R4
	161	[5041]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	162	[5041]	SELF     	R4 R4 K59 ; R5 := R4; R4 := R4[0x42b04007]
	163	[5041]	LOADK    	R6 K74 ; R6 := "/Lotus/Language/Categories/RESOURCES"
	164	[5041]	OP_LOADBOOL	R7 0 0 ; R7 := false
	165	[5041]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	166	[5041]	SETTABLE 	R3 K58 R4 ; R3[0xc0a3774b] := R4
	167	[5041]	GETGLOBAL	R4 K62 ; R4 := 0x0032441c
	168	[5041]	GETTABLE 	R4 R4 K75 ; R4 := R4["UICategoryIcon_MaterialsOn"]
	169	[5041]	SETTABLE 	R3 K61 R4 ; R3["Icon"] := R4
	170	[5041]	CALL     	R1 3 1 ; R1(R2,R3)
	171	[5042]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	172	[5042]	SELF     	R1 R1 K55 ; R2 := R1; R1 := R1[0x06d36229]
	173	[5042]	NEWTABLE 	R3 0 3 ; R3 := {}
	174	[5042]	GETUPVAL 	R4 U5 ; R4 := U5
	175	[5042]	GETTABLE 	R4 R4 K76 ; R4 := R4["MISC"]
	176	[5042]	SETTABLE 	R3 K56 R4 ; R3["Category"] := R4
	177	[5042]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	178	[5042]	SELF     	R4 R4 K59 ; R5 := R4; R4 := R4[0x42b04007]
	179	[5042]	LOADK    	R6 K77 ; R6 := "/Lotus/Language/Categories/MISC"
	180	[5042]	OP_LOADBOOL	R7 0 0 ; R7 := false
	181	[5042]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	182	[5042]	SETTABLE 	R3 K58 R4 ; R3[0xc0a3774b] := R4
	183	[5042]	GETGLOBAL	R4 K62 ; R4 := 0x0032441c
	184	[5042]	GETTABLE 	R4 R4 K78 ; R4 := R4["UICategoryIcon_MiscOn"]
	185	[5042]	SETTABLE 	R3 K61 R4 ; R3["Icon"] := R4
	186	[5042]	CALL     	R1 3 1 ; R1(R2,R3)
	187	[5043]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	188	[5043]	SELF     	R1 R1 K79 ; R2 := R1; R1 := R1[0xb029c588]
	189	[5043]	NEWTABLE 	R3 0 3 ; R3 := {}
	190	[5043]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	191	[5043]	SELF     	R4 R4 K59 ; R5 := R4; R4 := R4[0x42b04007]
	192	[5043]	LOADK    	R6 K80 ; R6 := "/Lotus/Language/Menu/SortImportance"
	193	[5043]	OP_LOADBOOL	R7 0 0 ; R7 := false
	194	[5043]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	195	[5043]	SETTABLE 	R3 K58 R4 ; R3[0xc0a3774b] := R4
	196	[5043]	SETTABLE 	R3 K81 K82 ; R3["SortId"] := "IMPORTANCE"
	197	[5056]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	198	[5056]	SETTABLE 	R3 K83 R4 ; R3["Attribute"] := R4
	199	[5043]	CALL     	R1 3 1 ; R1(R2,R3)
	200	[5057]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	201	[5057]	SELF     	R1 R1 K79 ; R2 := R1; R1 := R1[0xb029c588]
	202	[5057]	NEWTABLE 	R3 0 3 ; R3 := {}
	203	[5057]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	204	[5057]	SELF     	R4 R4 K59 ; R5 := R4; R4 := R4[0x42b04007]
	205	[5057]	LOADK    	R6 K84 ; R6 := "/Lotus/Language/Menu/SortName"
	206	[5057]	OP_LOADBOOL	R7 0 0 ; R7 := false
	207	[5057]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	208	[5057]	SETTABLE 	R3 K58 R4 ; R3[0xc0a3774b] := R4
	209	[5057]	SETTABLE 	R3 K81 K85 ; R3["SortId"] := "NAME"
	210	[5060]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	211	[5060]	SETTABLE 	R3 K83 R4 ; R3["Attribute"] := R4
	212	[5057]	CALL     	R1 3 1 ; R1(R2,R3)
	213	[5061]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	214	[5061]	SELF     	R1 R1 K86 ; R2 := R1; R1 := R1[0x492f9da2]
	215	[5061]	CALL     	R1 2 2 ; R1 := R1(R2)
	216	[5062]	GETGLOBAL	R2 K87 ; R2 := 0x25d99d89
	217	[5062]	SELF     	R2 R2 K88 ; R3 := R2; R2 := R2[0xb6b7ca1e]
	218	[5062]	MOVE     	R4 R1 ; R4 := R1
	219	[5062]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	220	[5063]	EQ       	0 R2 K89 ; if R2 ~= "" then PC := 223
	221	[5063]	JMP      	223 ; PC := 223
	222	[5064]	LOADK    	R2 K82 ; R2 := "IMPORTANCE"
	223	[5066]	GETGLOBAL	R3 K2 ; R3 := mRewardGrid
	224	[5066]	SELF     	R3 R3 K90 ; R4 := R3; R3 := R3[0x60125a4f]
	225	[5066]	MOVE     	R5 R2 ; R5 := R2
	226	[5066]	CALL     	R3 3 1 ; R3(R4,R5)
	227	[5068]	GETUPVAL 	R3 U6 ; R3 := U6
	228	[5068]	GETTABLE 	R3 R3 K91 ; R3 := R3[0x27658fab]
	229	[5068]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	230	[5068]	GETGLOBAL	R5 K2 ; R5 := mRewardGrid
	231	[5068]	CALL     	R3 3 1 ; R3(R4,R5)
	232	[5069]	GETGLOBAL	R3 K2 ; R3 := mRewardGrid
	233	[5069]	SELF     	R3 R3 K92 ; R4 := R3; R3 := R3[0x3bc79f4f]
	234	[5069]	LOADK    	R5 K93 ; R5 := "ExpandableArea.Progression.Rewards.ScrollBar"
	235	[5069]	GETGLOBAL	R6 K2 ; R6 := mRewardGrid
	236	[5069]	GETTABLE 	R6 R6 K19 ; R6 := R6["ElementDimBuffer"]
	237	[5069]	UNM      	R6 R6 ; R6 := ^ R6
	238	[5069]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	239	[5070]	GETGLOBAL	R3 K2 ; R3 := mRewardGrid
	240	[5070]	SELF     	R3 R3 K94 ; R4 := R3; R3 := R3[0x7220acb6]
	241	[5070]	CALL     	R3 2 1 ; R3(R4)
	242	[5072]	GETGLOBAL	R3 K2 ; R3 := mRewardGrid
	243	[5080]	CLOSURE  	R4 2 ; R4 := closure(Function #3)
	244	[5080]	SETTABLE 	R3 K95 R4 ; R3["AdditionalFilterFunction"] := R4
	245	[5082]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	246	[5082]	SELF     	R3 R3 K59 ; R4 := R3; R3 := R3[0x42b04007]
	247	[5082]	LOADK    	R5 K96 ; R5 := "/Lotus/Language/Menu/SearchPrompt"
	248	[5082]	OP_LOADBOOL	R6 0 0 ; R6 := false
	249	[5082]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	250	[5083]	GETGLOBAL	R4 K0 ; R4 := 0x2d0fad09
	251	[5083]	LOADK    	R5 K97 ; R5 := "Lotus.Interface.Components.ThemedInputField"
	252	[5083]	CALL     	R4 2 2 ; R4 := R4(R5)
	253	[5084]	GETTABLE 	R5 R4 K99 ; R5 := R4[0xae6791ba]
	254	[5084]	GETGLOBAL	R6 K4 ; R6 := 0xae91e43b
	255	[5084]	LOADK    	R7 K100 ; R7 := "ExpandableArea.Progression.Rewards.SearchAndSort.SearchBox"
	256	[5084]	LOADNIL  	R8 R9 ; R8 := R9 := nil
	257	[5084]	LOADK    	R10 K101 ; R10 := "<MENU_LTHUMB>"
	258	[5084]	LOADNIL  	R11 R13 ; R11 := R12 := R13 := nil
	259	[5084]	GETGLOBAL	R14 K102 ; R14 := mWaitingForMissionComplete
	260	[5084]	CALL     	R5 10 2 ; R5 := R5(R6,R7,R8,R9,R10,R11,R12,R13,R14)
	261	[5084]	SETGLOBALHASH	R5 K98 ; mSearchBox := R5
	262	[5085]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	263	[5085]	SELF     	R5 R5 K103 ; R6 := R5; R5 := R5[0xf87811f6]
	264	[5085]	GETGLOBAL	R7 K98 ; R7 := mSearchBox
	265	[5085]	GETTABLE 	R7 R7 K104 ; R7 := R7["TYPE"]
	266	[5085]	GETTABLE 	R7 R7 K105 ; R7 := R7["PLAIN"]
	267	[5085]	MOVE     	R8 R3 ; R8 := R3
	268	[5085]	MOVE     	R9 R3 ; R9 := R3
	269	[5085]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	270	[5086]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	271	[5086]	SETTABLE 	R5 K106 K107 ; R5["mMinSize"] := 223.000000
	272	[5087]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	273	[5087]	SETTABLE 	R5 K108 K107 ; R5["mMaxSize"] := 223.000000
	274	[5088]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	275	[5088]	SETTABLE 	R5 K109 K110 ; R5["mTextBuffer"] := 4.000000
	276	[5089]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	277	[5089]	GETGLOBAL	R6 K62 ; R6 := 0x0032441c
	278	[5089]	GETTABLE 	R6 R6 K112 ; R6 := R6["UITexture_Search"]
	279	[5089]	SETTABLE 	R5 K111 R6 ; R5["mAltButtonIcon"] := R6
	280	[5090]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	281	[5090]	SETTABLE 	R5 K113 K13 ; R5["mAltButtonVisible"] := true
	282	[5091]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	283	[5091]	SETTABLE 	R5 K114 K38 ; R5["mUnfocusedUnderlineColorOverride"] := nil
	284	[5092]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	285	[5092]	GETGLOBAL	R6 K98 ; R6 := mSearchBox
	286	[5092]	GETTABLE 	R6 R6 K116 ; R6 := R6["InputFieldTextChanged"]
	287	[5092]	SETTABLE 	R5 K115 R6 ; R5["BaseInputFieldTextChanged"] := R6
	288	[5093]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	289	[5107]	CLOSURE  	R6 3 ; R6 := closure(Function #4)
	290	[5107]	SETTABLE 	R5 K116 R6 ; R5["InputFieldTextChanged"] := R6
	291	[5108]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	292	[5108]	GETGLOBAL	R6 K98 ; R6 := mSearchBox
	293	[5108]	GETTABLE 	R6 R6 K118 ; R6 := R6["OnGamepadTransition"]
	294	[5108]	SETTABLE 	R5 K117 R6 ; R5["BaseOnGamepadTransition"] := R6
	295	[5109]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	296	[5115]	CLOSURE  	R6 4 ; R6 := closure(Function #5)
	297	[5115]	SETTABLE 	R5 K118 R6 ; R5["OnGamepadTransition"] := R6
	298	[5116]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	299	[5116]	SELF     	R5 R5 K119 ; R6 := R5; R5 := R5[0x6e6721d3]
	300	[5116]	LOADK    	R7 K96 ; R7 := "/Lotus/Language/Menu/SearchPrompt"
	301	[5116]	CALL     	R5 3 1 ; R5(R6,R7)
	302	[5117]	GETGLOBAL	R5 K98 ; R5 := mSearchBox
	303	[5117]	SELF     	R5 R5 K120 ; R6 := R5; R5 := R5[0x71e9ac81]
	304	[5117]	CALL     	R5 2 1 ; R5(R6)
	305	[5118]	RETURN   	R0 1 ; return 

function #125 <?:5120,5139> (48 instructions, 192 bytes at 0000016099F27CC0)
1 param, 10 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[5121]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5121]	MOVE     	R2 R0 ; R2 := R0
	3	[5121]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5121]	TEST     	R1 1 ; if R1 then PC := 46
	5	[5121]	JMP      	46 ; PC := 46
	6	[5122]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xf2deaf69]
	7	[5122]	GETGLOBAL	R3 K2 ; R3 := gMiscItemBaseType
	8	[5122]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	9	[5122]	TEST     	R1 0 ; if not R1 then PC := 23
	10	[5122]	JMP      	23 ; PC := 23
	11	[5123]	GETGLOBAL	R1 K3 ; R1 := 0xb009bbc6
	12	[5123]	MOVE     	R2 R0 ; R2 := R0
	13	[5123]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[5124]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	15	[5124]	MOVE     	R3 R1 ; R3 := R1
	16	[5124]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[5124]	TEST     	R2 1 ; if R2 then PC := 46
	18	[5124]	JMP      	46 ; PC := 46
	19	[5125]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0x2365060a]
	20	[5125]	TAILCALL 	R2 2 0 ; R2,... := R2(R3)
	21	[5125]	RETURN   	R2 0 ; return R2,... 
	22	[5126]	JMP      	46 ; PC := 46
	23	[5128]	GETGLOBAL	R2 K5 ; R2 := 0x7f5022cf
	24	[5128]	GETTABLE 	R2 R2 K6 ; R2 := R2[0xa5c556b9]
	25	[5128]	SELF     	R3 R0 K7 ; R4 := R0; R3 := R0[0xed4e0128]
	26	[5128]	CALL     	R3 2 2 ; R3 := R3(R4)
	27	[5128]	LOADK    	R4 K8 ; R4 := "Prime"
	28	[5128]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	29	[5128]	EQ       	1 R2 K9 ; if R2 == nil then PC := 33
	30	[5128]	JMP      	33 ; PC := 33
	31	[5129]	LOADK    	R2 := 6.000000
	32	[5129]	RETURN   	R2 2 ; return R2 
	33	[5131]	GETGLOBAL	R2 K10 ; R2 := 0xcfc01047
	34	[5131]	GETUPVAL 	R3 U0 ; R3 := U0
	35	[5131]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	36	[5131]	JMP      	44 ; PC := 44
	37	[5132]	SELF     	R7 R0 K1 ; R8 := R0; R7 := R0[0xf2deaf69]
	38	[5132]	GETTABLE 	R9 R6 K11 ; R9 := R6["Type"]
	39	[5132]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	40	[5132]	TEST     	R7 0 ; if not R7 then PC := 44
	41	[5132]	JMP      	44 ; PC := 44
	42	[5133]	GETTABLE 	R7 R6 K12 ; R7 := R6["Priority"]
	43	[5133]	RETURN   	R7 2 ; return R7 
	44	[5131]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 37; R4 := R5 end
	45	[5134]	JMP      	37 ; PC := 37
	46	[5138]	LOADK    	R7 := 3.000000
	47	[5138]	RETURN   	R7 2 ; return R7 
	48	[5139]	RETURN   	R0 1 ; return 

function #126 <?:5141,5156> (53 instructions, 212 bytes at 0000016099F27FD0)
1 param, 4 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[5142]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xf2deaf69]
	2	[5142]	GETGLOBAL	R3 K1 ; R3 := gLotusArtifactUpgradeType
	3	[5142]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	4	[5142]	TEST     	R1 0 ; if not R1 then PC := 30
	5	[5142]	JMP      	30 ; PC := 30
	6	[5142]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xf2deaf69]
	7	[5142]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[5142]	GETTABLE 	R3 R3 K2 ; R3 := R3["Enhancement"]
	9	[5142]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	10	[5142]	TEST     	R1 1 ; if R1 then PC := 30
	11	[5142]	JMP      	30 ; PC := 30
	12	[5143]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xf2deaf69]
	13	[5143]	GETUPVAL 	R3 U0 ; R3 := U0
	14	[5143]	GETTABLE 	R3 R3 K3 ; R3 := R3["RailjackMod"]
	15	[5143]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	16	[5143]	TEST     	R1 0 ; if not R1 then PC := 24
	17	[5143]	JMP      	24 ; PC := 24
	18	[5144]	NEWTABLE 	R1 1 0 ; R1 := {}
	19	[5144]	GETUPVAL 	R2 U1 ; R2 := U1
	20	[5144]	GETTABLE 	R2 R2 K4 ; R2 := R2["AVIONICS"]
	21	[5144]	SETLIST  	R1 1 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 1
	22	[5144]	RETURN   	R1 2 ; return R1 
	23	[5144]	JMP      	51 ; PC := 51
	24	[5146]	NEWTABLE 	R1 1 0 ; R1 := {}
	25	[5146]	GETUPVAL 	R2 U1 ; R2 := U1
	26	[5146]	GETTABLE 	R2 R2 K5 ; R2 := R2["MODS"]
	27	[5146]	SETLIST  	R1 1 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 1
	28	[5146]	RETURN   	R1 2 ; return R1 
	29	[5147]	JMP      	51 ; PC := 51
	30	[5148]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xf2deaf69]
	31	[5148]	GETGLOBAL	R3 K6 ; R3 := gMiscItemBaseType
	32	[5148]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	33	[5148]	TEST     	R1 0 ; if not R1 then PC := 51
	34	[5148]	JMP      	51 ; PC := 51
	35	[5149]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xf2deaf69]
	36	[5149]	GETGLOBAL	R3 K7 ; R3 := gVoidProjectionItemType
	37	[5149]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	38	[5149]	TEST     	R1 0 ; if not R1 then PC := 46
	39	[5149]	JMP      	46 ; PC := 46
	40	[5150]	NEWTABLE 	R1 1 0 ; R1 := {}
	41	[5150]	GETUPVAL 	R2 U1 ; R2 := U1
	42	[5150]	GETTABLE 	R2 R2 K8 ; R2 := R2["RELICS"]
	43	[5150]	SETLIST  	R1 1 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 1
	44	[5150]	RETURN   	R1 2 ; return R1 
	45	[5150]	JMP      	51 ; PC := 51
	46	[5152]	NEWTABLE 	R1 1 0 ; R1 := {}
	47	[5152]	GETUPVAL 	R2 U1 ; R2 := U1
	48	[5152]	GETTABLE 	R2 R2 K9 ; R2 := R2["RESOURCES"]
	49	[5152]	SETLIST  	R1 1 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 1
	50	[5152]	RETURN   	R1 2 ; return R1 
	51	[5155]	LOADNIL  	R1 R1 ; R1 := nil
	52	[5155]	RETURN   	R1 2 ; return R1 
	53	[5156]	RETURN   	R0 1 ; return 

function #127 <?:5158,5314> (420 instructions, 1680 bytes at 0000016099F282F0)
0 params, 71 slots, 10 upvalues, 0 locals, 80 constants, 2 functions
	1	[5159]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[5159]	SETGLOBALHASH	R0 K0 ; mMods := R0
	3	[5161]	LOADK    	R0 := 0.000000
	4	[5162]	NEWTABLE 	R1 0 0 ; R1 := {}
	5	[5163]	GETGLOBAL	R2 K1 ; R2 := mPlayerMissionInfo
	6	[5163]	GETTABLE 	R2 R2 K2 ; R2 := R2["mNemesisTaxInfo"]
	7	[5163]	GETTABLE 	R2 R2 K3 ; R2 := R2["mTaxedMiscItems"]
	8	[5164]	GETGLOBAL	R3 K1 ; R3 := mPlayerMissionInfo
	9	[5164]	GETTABLE 	R3 R3 K2 ; R3 := R3["mNemesisTaxInfo"]
	10	[5164]	GETTABLE 	R3 R3 K4 ; R3 := R3["mTaxedCollectedItems"]
	11	[5165]	LOADK    	R4 := 1.000000
	12	[5165]	LEN      	R5 R2 ; R5 := # R2
	13	[5165]	LOADK    	R6 := 1.000000
	14	[5165]	FORPREP  	R4 37 ; R4 -= R6; PC := 37
	15	[5166]	GETTABLE 	R8 R2 R7 ; R8 := R2[R7]
	16	[5167]	GETGLOBAL	R9 K5 ; R9 := 0x7b998233
	17	[5167]	MOVE     	R10 R8 ; R10 := R8
	18	[5167]	CALL     	R9 2 2 ; R9 := R9(R10)
	19	[5167]	TEST     	R9 1 ; if R9 then PC := 37
	20	[5167]	JMP      	37 ; PC := 37
	21	[5167]	GETGLOBAL	R9 K5 ; R9 := 0x7b998233
	22	[5167]	GETTABLE 	R10 R8 K6 ; R10 := R8["mItemType"]
	23	[5167]	CALL     	R9 2 2 ; R9 := R9(R10)
	24	[5167]	TEST     	R9 1 ; if R9 then PC := 37
	25	[5167]	JMP      	37 ; PC := 37
	26	[5167]	GETTABLE 	R9 R8 K6 ; R9 := R8["mItemType"]
	27	[5167]	SELF     	R9 R9 K7 ; R10 := R9; R9 := R9[0xf2deaf69]
	28	[5167]	GETGLOBAL	R11 K8 ; R11 := gLotusArtifactUpgradeType
	29	[5167]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	30	[5167]	TEST     	R9 0 ; if not R9 then PC := 37
	31	[5167]	JMP      	37 ; PC := 37
	32	[5168]	GETGLOBAL	R9 K9 ; R9 := 0x33bdd652
	33	[5168]	GETTABLE 	R9 R9 K10 ; R9 := R9[0x23d5322f]
	34	[5168]	MOVE     	R10 R1 ; R10 := R1
	35	[5168]	MOVE     	R11 R8 ; R11 := R8
	36	[5168]	CALL     	R9 3 1 ; R9(R10,R11)
	37	[5165]	FORLOOP  	R4 15 ; R4 += R6; if R4 <= R5 then begin PC := 15; R7 := R4 end
	38	[5171]	LOADK    	R9 := 1.000000
	39	[5171]	LEN      	R10 R3 ; R10 := # R3
	40	[5171]	LOADK    	R11 := 1.000000
	41	[5171]	FORPREP  	R9 76 ; R9 -= R11; PC := 76
	42	[5172]	GETTABLE 	R13 R3 R12 ; R13 := R3[R12]
	43	[5173]	GETGLOBAL	R14 K5 ; R14 := 0x7b998233
	44	[5173]	MOVE     	R15 R13 ; R15 := R13
	45	[5173]	CALL     	R14 2 2 ; R14 := R14(R15)
	46	[5173]	TEST     	R14 1 ; if R14 then PC := 76
	47	[5173]	JMP      	76 ; PC := 76
	48	[5173]	GETGLOBAL	R14 K5 ; R14 := 0x7b998233
	49	[5173]	GETTABLE 	R15 R13 K11 ; R15 := R13["storeItem"]
	50	[5173]	CALL     	R14 2 2 ; R14 := R14(R15)
	51	[5173]	TEST     	R14 1 ; if R14 then PC := 76
	52	[5173]	JMP      	76 ; PC := 76
	53	[5173]	GETGLOBAL	R14 K5 ; R14 := 0x7b998233
	54	[5173]	GETTABLE 	R15 R13 K11 ; R15 := R13["storeItem"]
	55	[5173]	SELF     	R15 R15 K12 ; R16 := R15; R15 := R15[0xf278f8a1]
	56	[5173]	CALL     	R15 2 0 ; R15,... := R15(R16)
	57	[5173]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	58	[5173]	TEST     	R14 1 ; if R14 then PC := 76
	59	[5173]	JMP      	76 ; PC := 76
	60	[5174]	GETTABLE 	R14 R13 K11 ; R14 := R13["storeItem"]
	61	[5174]	SELF     	R14 R14 K12 ; R15 := R14; R14 := R14[0xf278f8a1]
	62	[5174]	CALL     	R14 2 2 ; R14 := R14(R15)
	63	[5175]	SELF     	R15 R14 K7 ; R16 := R14; R15 := R14[0xf2deaf69]
	64	[5175]	GETGLOBAL	R17 K8 ; R17 := gLotusArtifactUpgradeType
	65	[5175]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	66	[5175]	TEST     	R15 0 ; if not R15 then PC := 76
	67	[5175]	JMP      	76 ; PC := 76
	68	[5176]	GETGLOBAL	R15 K9 ; R15 := 0x33bdd652
	69	[5176]	GETTABLE 	R15 R15 K10 ; R15 := R15[0x23d5322f]
	70	[5176]	MOVE     	R16 R1 ; R16 := R1
	71	[5176]	NEWTABLE 	R17 0 2 ; R17 := {}
	72	[5176]	SETTABLE 	R17 K6 R14 ; R17["mItemType"] := R14
	73	[5176]	GETTABLE 	R18 R13 K14 ; R18 := R13["itemCount"]
	74	[5176]	SETTABLE 	R17 K13 R18 ; R17["mItemCount"] := R18
	75	[5176]	CALL     	R15 3 1 ; R15(R16,R17)
	76	[5171]	FORLOOP  	R9 42 ; R9 += R11; if R9 <= R10 then begin PC := 42; R12 := R9 end
	77	[5182]	GETUPVAL 	R15 U0 ; R15 := U0
	78	[5182]	CALL     	R15 1 2 ; R15 := R15()
	79	[5183]	LOADNIL  	R16 R16 ; R16 := nil
	80	[5184]	GETTABLE 	R17 R15 K15 ; R17 := R15["alertId"]
	81	[5184]	EQ       	1 R17 K16 ; if R17 == "" then PC := 84
	82	[5184]	JMP      	84 ; PC := 84
	83	[5185]	LOADK    	R16 := 30.000000
	84	[5187]	GETGLOBAL	R17 K17 ; R17 := 0xc8802016
	85	[5187]	GETUPVAL 	R18 U1 ; R18 := U1
	86	[5187]	CALL     	R17 2 4 ; R17,R18,R19 := R17(R18)
	87	[5187]	JMP      	173 ; PC := 173
	88	[5188]	GETGLOBAL	R22 K5 ; R22 := 0x7b998233
	89	[5188]	GETTABLE 	R23 R21 K11 ; R23 := R21["storeItem"]
	90	[5188]	CALL     	R22 2 2 ; R22 := R22(R23)
	91	[5188]	TEST     	R22 1 ; if R22 then PC := 173
	92	[5188]	JMP      	173 ; PC := 173
	93	[5188]	GETGLOBAL	R22 K5 ; R22 := 0x7b998233
	94	[5188]	GETTABLE 	R23 R21 K11 ; R23 := R21["storeItem"]
	95	[5188]	SELF     	R23 R23 K12 ; R24 := R23; R23 := R23[0xf278f8a1]
	96	[5188]	CALL     	R23 2 0 ; R23,... := R23(R24)
	97	[5188]	CALL     	R22 0 2 ; R22 := R22(R23,...)
	98	[5188]	TEST     	R22 1 ; if R22 then PC := 173
	99	[5188]	JMP      	173 ; PC := 173
	100	[5188]	GETUPVAL 	R22 U2 ; R22 := U2
	101	[5188]	GETTABLE 	R23 R21 K11 ; R23 := R21["storeItem"]
	102	[5188]	SELF     	R23 R23 K12 ; R24 := R23; R23 := R23[0xf278f8a1]
	103	[5188]	CALL     	R23 2 0 ; R23,... := R23(R24)
	104	[5188]	CALL     	R22 0 2 ; R22 := R22(R23,...)
	105	[5188]	TEST     	R22 0 ; if not R22 then PC := 173
	106	[5188]	JMP      	173 ; PC := 173
	107	[5188]	GETTABLE 	R22 R21 K11 ; R22 := R21["storeItem"]
	108	[5188]	SELF     	R22 R22 K12 ; R23 := R22; R22 := R22[0xf278f8a1]
	109	[5188]	CALL     	R22 2 2 ; R22 := R22(R23)
	110	[5188]	SELF     	R22 R22 K7 ; R23 := R22; R22 := R22[0xf2deaf69]
	111	[5188]	GETUPVAL 	R24 U3 ; R24 := U3
	112	[5188]	GETTABLE 	R24 R24 K18 ; R24 := R24["Sigil"]
	113	[5188]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	114	[5188]	TEST     	R22 1 ; if R22 then PC := 173
	115	[5188]	JMP      	173 ; PC := 173
	116	[5189]	GETTABLE 	R22 R21 K11 ; R22 := R21["storeItem"]
	117	[5189]	SELF     	R22 R22 K12 ; R23 := R22; R22 := R22[0xf278f8a1]
	118	[5189]	CALL     	R22 2 2 ; R22 := R22(R23)
	119	[5190]	GETGLOBAL	R23 K19 ; R23 := 0x6c97a788
	120	[5190]	GETTABLE 	R23 R23 K20 ; R23 := R23[0x1aba4d9e]
	121	[5190]	CALL     	R23 1 2 ; R23 := R23()
	122	[5191]	SETTABLE 	R23 K6 R22 ; R23["mItemType"] := R22
	123	[5192]	GETTABLE 	R24 R21 K21 ; R24 := R21["levelOverride"]
	124	[5193]	SELF     	R25 R22 K7 ; R26 := R22; R25 := R22[0xf2deaf69]
	125	[5193]	GETGLOBAL	R27 K22 ; R27 := gRandomizedArtifactUpgradeType
	126	[5193]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	127	[5193]	TEST     	R25 1 ; if R25 then PC := 134
	128	[5193]	JMP      	134 ; PC := 134
	129	[5195]	GETTABLE 	R25 R23 K24 ; R25 := R23["mInstance"]
	130	[5195]	SELF     	R25 R25 K25 ; R26 := R25; R25 := R25[0x86ba2663]
	131	[5195]	MOVE     	R27 R24 ; R27 := R24
	132	[5195]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	133	[5195]	SETTABLE 	R23 K23 R25 ; R23["mUpgradeFingerprint"] := R25
	134	[5197]	GETTABLE 	R25 R21 K14 ; R25 := R21["itemCount"]
	135	[5197]	SETTABLE 	R23 K13 R25 ; R23["mItemCount"] := R25
	136	[5199]	GETUPVAL 	R25 U4 ; R25 := U4
	137	[5199]	MOVE     	R26 R23 ; R26 := R23
	138	[5199]	GETTABLE 	R27 R21 K26 ; R27 := R21["FromEnemyCache"]
	139	[5199]	MOVE     	R28 R16 ; R28 := R16
	140	[5199]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	141	[5201]	GETTABLE 	R25 R23 K24 ; R25 := R23["mInstance"]
	142	[5201]	SELF     	R25 R25 K27 ; R26 := R25; R25 := R25[0xc6b8b3f2]
	143	[5201]	GETTABLE 	R27 R23 K23 ; R27 := R23["mUpgradeFingerprint"]
	144	[5201]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	145	[5202]	EQ       	1 R25 K28 ; if R25 == 6.000000 then PC := 173
	146	[5202]	JMP      	173 ; PC := 173
	147	[5202]	GETGLOBAL	R26 K29 ; R26 := _T
	148	[5202]	GETTABLE 	R26 R26 K30 ; R26 := R26["eomScreenMode"]
	149	[5202]	GETUPVAL 	R27 U5 ; R27 := U5
	150	[5202]	GETTABLE 	R27 R27 K31 ; R27 := R27["ACTUAL_EOM"]
	151	[5202]	EQ       	0 R26 R27 ; if R26 ~= R27 then PC := 173
	152	[5202]	JMP      	173 ; PC := 173
	153	[5202]	GETGLOBAL	R26 K5 ; R26 := 0x7b998233
	154	[5202]	GETGLOBAL	R27 K32 ; R27 := 0x89326c93
	155	[5202]	CALL     	R26 2 2 ; R26 := R26(R27)
	156	[5202]	TEST     	R26 1 ; if R26 then PC := 173
	157	[5202]	JMP      	173 ; PC := 173
	158	[5204]	GETGLOBAL	R26 K32 ; R26 := 0x89326c93
	159	[5204]	SELF     	R26 R26 K33 ; R27 := R26; R26 := R26[0xfb64e76c]
	160	[5204]	CALL     	R26 2 2 ; R26 := R26(R27)
	161	[5205]	GETGLOBAL	R27 K5 ; R27 := 0x7b998233
	162	[5205]	MOVE     	R28 R26 ; R28 := R26
	163	[5205]	CALL     	R27 2 2 ; R27 := R27(R28)
	164	[5205]	TEST     	R27 1 ; if R27 then PC := 173
	165	[5205]	JMP      	173 ; PC := 173
	166	[5206]	GETGLOBAL	R27 K34 ; R27 := 0xba7dfcd2
	167	[5206]	SELF     	R27 R27 K35 ; R28 := R27; R27 := R27[0xf056b179]
	168	[5206]	MOVE     	R29 R26 ; R29 := R26
	169	[5206]	GETGLOBAL	R30 K36 ; R30 := 0x0469f296
	170	[5206]	LOADK    	R31 K37 ; R31 := "EARN_UPGRADE_MOD"
	171	[5206]	CALL     	R30 2 0 ; R30,... := R30(R31)
	172	[5206]	CALL     	R27 0 1 ; R27(R28,...)
	173	[5187]	TFORLOOP 	R17 2 ; R20,R21 := R17(R18,R19); if R20 ~= nil then begin PC = 88; R19 := R20 end
	174	[5209]	JMP      	88 ; PC := 88
	175	[5212]	GETGLOBAL	R27 K29 ; R27 := _T
	176	[5212]	GETTABLE 	R27 R27 K38 ; R27 := R27["TestModCount"]
	177	[5212]	TEST     	R27 0 ; if not R27 then PC := 198
	178	[5212]	JMP      	198 ; PC := 198
	179	[5213]	LOADK    	R27 := 1.000000
	180	[5213]	GETGLOBAL	R28 K39 ; R28 := 0x70177a2b
	181	[5213]	LEN      	R28 R28 ; R28 := # R28
	182	[5213]	LOADK    	R29 := 1.000000
	183	[5213]	FORPREP  	R27 197 ; R27 -= R29; PC := 197
	184	[5214]	GETGLOBAL	R31 K19 ; R31 := 0x6c97a788
	185	[5214]	GETTABLE 	R31 R31 K20 ; R31 := R31[0x1aba4d9e]
	186	[5214]	CALL     	R31 1 2 ; R31 := R31()
	187	[5215]	GETGLOBAL	R32 K40 ; R32 := 0xb009bbc6
	188	[5215]	GETGLOBAL	R33 K39 ; R33 := 0x70177a2b
	189	[5215]	GETTABLE 	R33 R33 R30 ; R33 := R33[R30]
	190	[5215]	CALL     	R32 2 2 ; R32 := R32(R33)
	191	[5215]	SETTABLE 	R31 K6 R32 ; R31["mItemType"] := R32
	192	[5216]	GETGLOBAL	R32 K9 ; R32 := 0x33bdd652
	193	[5216]	GETTABLE 	R32 R32 K10 ; R32 := R32[0x23d5322f]
	194	[5216]	GETUPVAL 	R33 U6 ; R33 := U6
	195	[5216]	MOVE     	R34 R31 ; R34 := R31
	196	[5216]	CALL     	R32 3 1 ; R32(R33,R34)
	197	[5213]	FORLOOP  	R27 184 ; R27 += R29; if R27 <= R28 then begin PC := 184; R30 := R27 end
	198	[5221]	GETGLOBAL	R32 K17 ; R32 := 0xc8802016
	199	[5221]	GETUPVAL 	R33 U6 ; R33 := U6
	200	[5221]	CALL     	R32 2 4 ; R32,R33,R34 := R32(R33)
	201	[5221]	JMP      	235 ; PC := 235
	202	[5222]	GETUPVAL 	R37 U2 ; R37 := U2
	203	[5222]	GETTABLE 	R38 R36 K6 ; R38 := R36["mItemType"]
	204	[5222]	CALL     	R37 2 2 ; R37 := R37(R38)
	205	[5222]	TEST     	R37 0 ; if not R37 then PC := 235
	206	[5222]	JMP      	235 ; PC := 235
	207	[5222]	GETGLOBAL	R37 K29 ; R37 := _T
	208	[5222]	GETTABLE 	R37 R37 K30 ; R37 := R37["eomScreenMode"]
	209	[5222]	GETUPVAL 	R38 U5 ; R38 := U5
	210	[5222]	GETTABLE 	R38 R38 K31 ; R38 := R38["ACTUAL_EOM"]
	211	[5222]	EQ       	1 R37 R38 ; if R37 == R38 then PC := 231
	212	[5222]	JMP      	231 ; PC := 231
	213	[5222]	GETUPVAL 	R37 U7 ; R37 := U7
	214	[5222]	GETTABLE 	R37 R37 K41 ; R37 := R37[0xcdc34211]
	215	[5222]	CALL     	R37 1 2 ; R37 := R37()
	216	[5222]	TEST     	R37 0 ; if not R37 then PC := 231
	217	[5222]	JMP      	231 ; PC := 231
	218	[5222]	GETGLOBAL	R37 K5 ; R37 := 0x7b998233
	219	[5222]	GETTABLE 	R38 R36 K6 ; R38 := R36["mItemType"]
	220	[5222]	CALL     	R37 2 2 ; R37 := R37(R38)
	221	[5222]	TEST     	R37 1 ; if R37 then PC := 235
	222	[5222]	JMP      	235 ; PC := 235
	223	[5222]	GETTABLE 	R37 R36 K6 ; R37 := R36["mItemType"]
	224	[5222]	SELF     	R37 R37 K7 ; R38 := R37; R37 := R37[0xf2deaf69]
	225	[5222]	GETGLOBAL	R39 K42 ; R39 := 0xa94df70b
	226	[5222]	SELF     	R39 R39 K43 ; R40 := R39; R39 := R39[0xbdb0dc65]
	227	[5222]	CALL     	R39 2 0 ; R39,... := R39(R40)
	228	[5222]	CALL     	R37 0 2 ; R37 := R37(R38,...)
	229	[5222]	TEST     	R37 1 ; if R37 then PC := 235
	230	[5222]	JMP      	235 ; PC := 235
	231	[5223]	GETUPVAL 	R37 U4 ; R37 := U4
	232	[5223]	MOVE     	R38 R36 ; R38 := R36
	233	[5223]	LOADNIL  	R39 R39 ; R39 := nil
	234	[5223]	CALL     	R37 3 1 ; R37(R38,R39)
	235	[5221]	TFORLOOP 	R32 2 ; R35,R36 := R32(R33,R34); if R35 ~= nil then begin PC = 202; R34 := R35 end
	236	[5224]	JMP      	202 ; PC := 202
	237	[5227]	NEWTABLE 	R37 0 0 ; R37 := {}
	238	[5228]	LOADK    	R38 := 1.000000
	239	[5228]	GETGLOBAL	R39 K0 ; R39 := mMods
	240	[5228]	LEN      	R39 R39 ; R39 := # R39
	241	[5228]	LOADK    	R40 := 1.000000
	242	[5228]	FORPREP  	R38 289 ; R38 -= R40; PC := 289
	243	[5229]	ADD      	R0 R0 K44 ; R0 := R0 + 1.000000
	244	[5230]	GETUPVAL 	R42 U8 ; R42 := U8
	245	[5230]	GETTABLE 	R42 R42 K45 ; R42 := R42[0xfc31b69e]
	246	[5230]	GETGLOBAL	R43 K0 ; R43 := mMods
	247	[5230]	GETTABLE 	R43 R43 R0 ; R43 := R43[R0]
	248	[5230]	GETTABLE 	R43 R43 K46 ; R43 := R43["upg"]
	249	[5230]	MOVE     	R44 R0 ; R44 := R0
	250	[5230]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	251	[5231]	GETGLOBAL	R43 K0 ; R43 := mMods
	252	[5231]	GETTABLE 	R43 R43 R0 ; R43 := R43[R0]
	253	[5231]	GETTABLE 	R43 R43 K26 ; R43 := R43["FromEnemyCache"]
	254	[5231]	TEST     	R43 1 ; if R43 then PC := 265
	255	[5231]	JMP      	265 ; PC := 265
	256	[5231]	GETGLOBAL	R43 K0 ; R43 := mMods
	257	[5231]	GETTABLE 	R43 R43 R0 ; R43 := R43[R0]
	258	[5231]	GETTABLE 	R43 R43 K46 ; R43 := R43["upg"]
	259	[5231]	GETTABLE 	R43 R43 K6 ; R43 := R43["mItemType"]
	260	[5231]	SELF     	R43 R43 K7 ; R44 := R43; R43 := R43[0xf2deaf69]
	261	[5231]	GETGLOBAL	R45 K42 ; R45 := 0xa94df70b
	262	[5231]	SELF     	R45 R45 K43 ; R46 := R45; R45 := R45[0xbdb0dc65]
	263	[5231]	CALL     	R45 2 0 ; R45,... := R45(R46)
	264	[5231]	CALL     	R43 0 2 ; R43 := R43(R44,...)
	265	[5231]	SETTABLE 	R42 K47 R43 ; R42["isIdentifiedMod"] := R43
	266	[5232]	GETGLOBAL	R43 K0 ; R43 := mMods
	267	[5232]	GETTABLE 	R43 R43 R0 ; R43 := R43[R0]
	268	[5232]	GETTABLE 	R43 R43 K48 ; R43 := R43["SortPriority"]
	269	[5232]	SETTABLE 	R42 K48 R43 ; R42["SortPriority"] := R43
	270	[5233]	GETTABLE 	R43 R42 K47 ; R43 := R42["isIdentifiedMod"]
	271	[5233]	TEST     	R43 0 ; if not R43 then PC := 282
	272	[5233]	JMP      	282 ; PC := 282
	273	[5234]	GETGLOBAL	R43 K50 ; R43 := 0xae91e43b
	274	[5234]	SELF     	R43 R43 K51 ; R44 := R43; R43 := R43[0x42b04007]
	275	[5234]	LOADK    	R45 K52 ; R45 := "/Lotus/Language/Game/IdentifiedItem"
	276	[5234]	OP_LOADBOOL	R46 0 0 ; R46 := false
	277	[5234]	NEWTABLE 	R47 0 1 ; R47 := {}
	278	[5234]	GETTABLE 	R48 R42 K49 ; R48 := R42["mName"]
	279	[5234]	SETTABLE 	R47 K53 R48 ; R47["ITEM_NAME"] := R48
	280	[5234]	CALL     	R43 5 2 ; R43 := R43(R44,R45,R46,R47)
	281	[5234]	SETTABLE 	R42 K49 R43 ; R42["mName"] := R43
	282	[5236]	GETGLOBAL	R43 K9 ; R43 := 0x33bdd652
	283	[5236]	GETTABLE 	R43 R43 K10 ; R43 := R43[0x23d5322f]
	284	[5236]	MOVE     	R44 R37 ; R44 := R37
	285	[5236]	MOVE     	R45 R42 ; R45 := R42
	286	[5236]	CALL     	R43 3 1 ; R43(R44,R45)
	287	[5237]	GETGLOBAL	R43 K54 ; R43 := 0xce225efa
	288	[5237]	CALL     	R43 1 1 ; R43()
	289	[5228]	FORLOOP  	R38 243 ; R38 += R40; if R38 <= R39 then begin PC := 243; R41 := R38 end
	290	[5240]	GETGLOBAL	R43 K55 ; R43 := 0x0032441c
	291	[5240]	GETTABLE 	R43 R43 K56 ; R43 := R43["NemesisEndBody"]
	292	[5242]	GETGLOBAL	R44 K5 ; R44 := 0x7b998233
	293	[5242]	MOVE     	R45 R43 ; R45 := R43
	294	[5242]	CALL     	R44 2 2 ; R44 := R44(R45)
	295	[5242]	TEST     	R44 1 ; if R44 then PC := 359
	296	[5242]	JMP      	359 ; PC := 359
	297	[5243]	GETTABLE 	R44 R43 K57 ; R44 := R43["RecoveredItemInfo"]
	298	[5244]	EQ       	1 R44 K58 ; if R44 == nil then PC := 359
	299	[5244]	JMP      	359 ; PC := 359
	300	[5255]	CLOSURE  	R45 0 ; R45 := closure(Function #1)
	301	[5255]	MOVE     	R0 R0 ; R0 := R0
	302	[5255]	GETUPVAL 	R0 U8 ; R0 := U8
	303	[5255]	MOVE     	R0 R37 ; R0 := R37
	304	[5257]	GETTABLE 	R46 R44 K59 ; R46 := R44["RecoveredMiscItems"]
	305	[5258]	LOADK    	R47 := 1.000000
	306	[5258]	LEN      	R48 R46 ; R48 := # R46
	307	[5258]	LOADK    	R49 := 1.000000
	308	[5258]	FORPREP  	R47 326 ; R47 -= R49; PC := 326
	309	[5259]	GETTABLE 	R51 R46 R50 ; R51 := R46[R50]
	310	[5260]	GETGLOBAL	R52 K60 ; R52 := 0x7ed0a956
	311	[5260]	GETTABLE 	R53 R51 K61 ; R53 := R51["ItemType"]
	312	[5260]	CALL     	R52 2 2 ; R52 := R52(R53)
	313	[5261]	GETGLOBAL	R53 K5 ; R53 := 0x7b998233
	314	[5261]	MOVE     	R54 R52 ; R54 := R52
	315	[5261]	CALL     	R53 2 2 ; R53 := R53(R54)
	316	[5261]	TEST     	R53 1 ; if R53 then PC := 326
	317	[5261]	JMP      	326 ; PC := 326
	318	[5261]	GETUPVAL 	R53 U2 ; R53 := U2
	319	[5261]	MOVE     	R54 R52 ; R54 := R52
	320	[5261]	CALL     	R53 2 2 ; R53 := R53(R54)
	321	[5261]	TEST     	R53 0 ; if not R53 then PC := 326
	322	[5261]	JMP      	326 ; PC := 326
	323	[5262]	MOVE     	R53 R45 ; R53 := R45
	324	[5262]	MOVE     	R54 R51 ; R54 := R51
	325	[5262]	CALL     	R53 2 1 ; R53(R54)
	326	[5258]	FORLOOP  	R47 309 ; R47 += R49; if R47 <= R48 then begin PC := 309; R50 := R47 end
	327	[5266]	GETTABLE 	R53 R44 K62 ; R53 := R44["RecoveredCollectedItems"]
	328	[5267]	LOADK    	R54 := 1.000000
	329	[5267]	LEN      	R55 R53 ; R55 := # R53
	330	[5267]	LOADK    	R56 := 1.000000
	331	[5267]	FORPREP  	R54 358 ; R54 -= R56; PC := 358
	332	[5268]	GETTABLE 	R58 R53 R57 ; R58 := R53[R57]
	333	[5269]	GETGLOBAL	R59 K40 ; R59 := 0xb009bbc6
	334	[5269]	GETTABLE 	R60 R58 K63 ; R60 := R58["StoreItem"]
	335	[5269]	CALL     	R59 2 2 ; R59 := R59(R60)
	336	[5270]	GETGLOBAL	R60 K5 ; R60 := 0x7b998233
	337	[5270]	MOVE     	R61 R59 ; R61 := R59
	338	[5270]	CALL     	R60 2 2 ; R60 := R60(R61)
	339	[5270]	TEST     	R60 1 ; if R60 then PC := 358
	340	[5270]	JMP      	358 ; PC := 358
	341	[5271]	SELF     	R60 R59 K12 ; R61 := R59; R60 := R59[0xf278f8a1]
	342	[5271]	CALL     	R60 2 2 ; R60 := R60(R61)
	343	[5271]	MOVE     	R59 R60 ; R59 := R60
	344	[5272]	GETGLOBAL	R60 K5 ; R60 := 0x7b998233
	345	[5272]	MOVE     	R61 R59 ; R61 := R59
	346	[5272]	CALL     	R60 2 2 ; R60 := R60(R61)
	347	[5272]	TEST     	R60 1 ; if R60 then PC := 358
	348	[5272]	JMP      	358 ; PC := 358
	349	[5272]	GETUPVAL 	R60 U2 ; R60 := U2
	350	[5272]	MOVE     	R61 R59 ; R61 := R59
	351	[5272]	CALL     	R60 2 2 ; R60 := R60(R61)
	352	[5272]	TEST     	R60 0 ; if not R60 then PC := 358
	353	[5272]	JMP      	358 ; PC := 358
	354	[5273]	SETTABLE 	R58 K61 R59 ; R58["ItemType"] := R59
	355	[5274]	MOVE     	R60 R45 ; R60 := R45
	356	[5274]	MOVE     	R61 R58 ; R61 := R58
	357	[5274]	CALL     	R60 2 1 ; R60(R61)
	358	[5267]	FORLOOP  	R54 332 ; R54 += R56; if R54 <= R55 then begin PC := 332; R57 := R54 end
	359	[5281]	GETGLOBAL	R60 K9 ; R60 := 0x33bdd652
	360	[5281]	GETTABLE 	R60 R60 K64 ; R60 := R60[0xf21b1d8e]
	361	[5281]	MOVE     	R61 R37 ; R61 := R37
	362	[5296]	CLOSURE  	R62 1 ; R62 := closure(Function #2)
	363	[5281]	CALL     	R60 3 1 ; R60(R61,R62)
	364	[5299]	LOADK    	R60 := 1.000000
	365	[5299]	LEN      	R61 R37 ; R61 := # R37
	366	[5299]	LOADK    	R62 := 1.000000
	367	[5299]	FORPREP  	R60 419 ; R60 -= R62; PC := 419
	368	[5300]	GETUPVAL 	R64 U8 ; R64 := U8
	369	[5300]	GETTABLE 	R64 R64 K65 ; R64 := R64[0x34c67ee0]
	370	[5300]	GETGLOBAL	R65 K66 ; R65 := mRewardGrid
	371	[5300]	GETGLOBAL	R66 K66 ; R66 := mRewardGrid
	372	[5300]	GETTABLE 	R66 R66 K67 ; R66 := R66["mUnfilteredElements"]
	373	[5300]	LEN      	R66 R66 ; R66 := # R66
	374	[5300]	ADD      	R66 R66 R63 ; R66 := R66 + R63
	375	[5300]	NEWTABLE 	R67 0 3 ; R67 := {}
	376	[5300]	GETTABLE 	R68 R37 R63 ; R68 := R37[R63]
	377	[5300]	SETTABLE 	R67 K68 R68 ; R67["Card"] := R68
	378	[5300]	NEWTABLE 	R68 1 0 ; R68 := {}
	379	[5300]	GETUPVAL 	R69 U9 ; R69 := U9
	380	[5300]	GETTABLE 	R69 R69 K70 ; R69 := R69["MODS"]
	381	[5300]	SETLIST  	R68 1 1 ; R68[(1-1)*FPF+i] := R(68+i), 1 <= i <= 1
	382	[5300]	SETTABLE 	R67 K69 R68 ; R67["Categories"] := R68
	383	[5300]	SETTABLE 	R67 K71 K72 ; R67["LockCategories"] := true
	384	[5300]	CALL     	R64 4 2 ; R64 := R64(R65,R66,R67)
	385	[5301]	GETTABLE 	R65 R64 K68 ; R65 := R64["Card"]
	386	[5301]	GETTABLE 	R65 R65 K73 ; R65 := R65["mUpgradeItemType"]
	387	[5302]	GETTABLE 	R66 R64 K68 ; R66 := R64["Card"]
	388	[5302]	GETTABLE 	R66 R66 K74 ; R66 := R66["Recovered"]
	389	[5302]	SETTABLE 	R64 K74 R66 ; R64["Recovered"] := R66
	390	[5303]	SETTABLE 	R64 K75 K44 ; R64["Count"] := 1.000000
	391	[5304]	GETTABLE 	R66 R37 R63 ; R66 := R37[R63]
	392	[5304]	GETTABLE 	R66 R66 K48 ; R66 := R66["SortPriority"]
	393	[5304]	TEST     	R66 1 ; if R66 then PC := 396
	394	[5304]	JMP      	396 ; PC := 396
	395	[5304]	LOADK    	R66 := 3.000000
	396	[5304]	GETTABLE 	R67 R64 K76 ; R67 := R64["mRarity"]
	397	[5304]	TEST     	R67 1 ; if R67 then PC := 400
	398	[5304]	JMP      	400 ; PC := 400
	399	[5304]	LOADK    	R67 := 0.000000
	400	[5304]	MUL      	R67 R67 K77 ; R67 := R67 * 0.200000
	401	[5304]	ADD      	R66 R66 R67 ; R66 := R66 + R67
	402	[5304]	ADD      	R66 R66 K78 ; R66 := R66 + 0.100000
	403	[5304]	SETTABLE 	R64 K48 R66 ; R64["SortPriority"] := R66
	404	[5305]	LOADK    	R66 := 1.000000
	405	[5305]	LEN      	R67 R1 ; R67 := # R1
	406	[5305]	LOADK    	R68 := 1.000000
	407	[5305]	FORPREP  	R66 416 ; R66 -= R68; PC := 416
	408	[5306]	GETTABLE 	R70 R1 R69 ; R70 := R1[R69]
	409	[5306]	GETTABLE 	R70 R70 K6 ; R70 := R70["mItemType"]
	410	[5306]	EQ       	0 R70 R65 ; if R70 ~= R65 then PC := 416
	411	[5306]	JMP      	416 ; PC := 416
	412	[5307]	GETTABLE 	R70 R1 R69 ; R70 := R1[R69]
	413	[5307]	GETTABLE 	R70 R70 K13 ; R70 := R70["mItemCount"]
	414	[5307]	SETTABLE 	R64 K79 R70 ; R64["TaxedCount"] := R70
	415	[5308]	JMP      	417 ; PC := 417
	416	[5305]	FORLOOP  	R66 408 ; R66 += R68; if R66 <= R67 then begin PC := 408; R69 := R66 end
	417	[5312]	GETGLOBAL	R70 K54 ; R70 := 0xce225efa
	418	[5312]	CALL     	R70 1 1 ; R70()
	419	[5299]	FORLOOP  	R60 368 ; R60 += R62; if R60 <= R61 then begin PC := 368; R63 := R60 end
	420	[5314]	RETURN   	R0 1 ; return 

function #128 <?:5316,5664> (1000 instructions, 4000 bytes at 0000016099F29D50)
3 params, 109 slots, 23 upvalues, 0 locals, 174 constants, 0 functions
	1	[5317]	GETGLOBAL	R3 K0 ; R3 := mRewardGrid
	2	[5317]	SELF     	R3 R3 K1 ; R4 := R3; R3 := R3[0x7c09c373]
	3	[5317]	OP_LOADBOOL	R5 1 0 ; R5 := true
	4	[5317]	OP_LOADBOOL	R6 1 0 ; R6 := true
	5	[5317]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	6	[5318]	NEWTABLE 	R3 0 0 ; R3 := {}
	7	[5318]	SETGLOBALHASH	R3 K2 ; mRewards := R3
	8	[5319]	NEWTABLE 	R3 0 0 ; R3 := {}
	9	[5319]	SETUPVAL 	R3 U0 ; U0 := R3
	10	[5321]	GETUPVAL 	R3 U1 ; R3 := U1
	11	[5321]	TEST     	R3 0 ; if not R3 then PC := 27
	12	[5321]	JMP      	27 ; PC := 27
	13	[5322]	GETUPVAL 	R3 U2 ; R3 := U2
	14	[5322]	NEWTABLE 	R4 0 4 ; R4 := {}
	15	[5323]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	16	[5323]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0x42b04007]
	17	[5323]	LOADK    	R7 K6 ; R7 := "/Lotus/Language/Menu/EndOfMission_RewardsAlreadyEarned"
	18	[5323]	OP_LOADBOOL	R8 0 0 ; R8 := false
	19	[5323]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	20	[5323]	SETTABLE 	R4 K3 R5 ; R4["Name"] := R5
	21	[5324]	GETGLOBAL	R5 K8 ; R5 := 0x0032441c
	22	[5324]	GETTABLE 	R5 R5 K9 ; R5 := R5["UITexture_Locked"]
	23	[5324]	SETTABLE 	R4 K7 R5 ; R4["Icon"] := R5
	24	[5325]	SETTABLE 	R4 K10 K11 ; R4["Themed"] := true
	25	[5326]	SETTABLE 	R4 K12 K13 ; R4["Background"] := nil
	26	[5322]	CALL     	R3 2 1 ; R3(R4)
	27	[5330]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	28	[5330]	GETTABLE 	R3 R3 K14 ; R3 := R3["NemesisEndBody"]
	29	[5332]	GETGLOBAL	R4 K15 ; R4 := 0x7b998233
	30	[5332]	MOVE     	R5 R3 ; R5 := R3
	31	[5332]	CALL     	R4 2 2 ; R4 := R4(R5)
	32	[5332]	TEST     	R4 1 ; if R4 then PC := 246
	33	[5332]	JMP      	246 ; PC := 246
	34	[5333]	GETGLOBAL	R4 K16 ; R4 := 0xb009bbc6
	35	[5333]	GETTABLE 	R5 R3 K17 ; R5 := R3["EphemeraReward"]
	36	[5333]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[5334]	GETGLOBAL	R5 K15 ; R5 := 0x7b998233
	38	[5334]	MOVE     	R6 R4 ; R6 := R4
	39	[5334]	CALL     	R5 2 2 ; R5 := R5(R6)
	40	[5334]	TEST     	R5 1 ; if R5 then PC := 53
	41	[5334]	JMP      	53 ; PC := 53
	42	[5335]	GETUPVAL 	R5 U2 ; R5 := U2
	43	[5335]	GETUPVAL 	R6 U3 ; R6 := U3
	44	[5335]	GETTABLE 	R6 R6 K18 ; R6 := R6[0x08681f50]
	45	[5335]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	46	[5335]	MOVE     	R8 R4 ; R8 := R4
	47	[5335]	NEWTABLE 	R9 0 1 ; R9 := {}
	48	[5335]	SETTABLE 	R9 K19 K11 ; R9["GetVisibilityMaterial"] := true
	49	[5335]	LOADNIL  	R10 R11 ; R10 := R11 := nil
	50	[5335]	OP_LOADBOOL	R12 1 0 ; R12 := true
	51	[5335]	CALL     	R6 7 0 ; R6,... := R6(R7,R8,R9,R10,R11,R12)
	52	[5335]	CALL     	R5 0 1 ; R5(R6,...)
	53	[5338]	GETGLOBAL	R5 K16 ; R5 := 0xb009bbc6
	54	[5338]	GETTABLE 	R6 R3 K20 ; R6 := R3["BaitReward"]
	55	[5338]	CALL     	R5 2 2 ; R5 := R5(R6)
	56	[5339]	GETGLOBAL	R6 K15 ; R6 := 0x7b998233
	57	[5339]	MOVE     	R7 R5 ; R7 := R5
	58	[5339]	CALL     	R6 2 2 ; R6 := R6(R7)
	59	[5339]	TEST     	R6 1 ; if R6 then PC := 72
	60	[5339]	JMP      	72 ; PC := 72
	61	[5340]	GETUPVAL 	R6 U2 ; R6 := U2
	62	[5340]	GETUPVAL 	R7 U3 ; R7 := U3
	63	[5340]	GETTABLE 	R7 R7 K18 ; R7 := R7[0x08681f50]
	64	[5340]	GETGLOBAL	R8 K4 ; R8 := 0xae91e43b
	65	[5340]	MOVE     	R9 R5 ; R9 := R5
	66	[5340]	NEWTABLE 	R10 0 1 ; R10 := {}
	67	[5340]	SETTABLE 	R10 K19 K11 ; R10["GetVisibilityMaterial"] := true
	68	[5340]	LOADNIL  	R11 R12 ; R11 := R12 := nil
	69	[5340]	OP_LOADBOOL	R13 1 0 ; R13 := true
	70	[5340]	CALL     	R7 7 0 ; R7,... := R7(R8,R9,R10,R11,R12,R13)
	71	[5340]	CALL     	R6 0 1 ; R6(R7,...)
	72	[5343]	GETTABLE 	R6 R3 K21 ; R6 := R3["WeaponRecipe"]
	73	[5343]	EQ       	1 R6 K13 ; if R6 == nil then PC := 94
	74	[5343]	JMP      	94 ; PC := 94
	75	[5344]	GETGLOBAL	R6 K16 ; R6 := 0xb009bbc6
	76	[5344]	GETTABLE 	R7 R3 K21 ; R7 := R3["WeaponRecipe"]
	77	[5344]	GETTABLE 	R7 R7 K22 ; R7 := R7["ItemType"]
	78	[5344]	CALL     	R6 2 2 ; R6 := R6(R7)
	79	[5345]	GETGLOBAL	R7 K15 ; R7 := 0x7b998233
	80	[5345]	MOVE     	R8 R6 ; R8 := R6
	81	[5345]	CALL     	R7 2 2 ; R7 := R7(R8)
	82	[5345]	TEST     	R7 1 ; if R7 then PC := 94
	83	[5345]	JMP      	94 ; PC := 94
	84	[5346]	GETUPVAL 	R7 U2 ; R7 := U2
	85	[5346]	GETUPVAL 	R8 U3 ; R8 := U3
	86	[5346]	GETTABLE 	R8 R8 K23 ; R8 := R8[0x4eec6d11]
	87	[5346]	GETGLOBAL	R9 K4 ; R9 := 0xae91e43b
	88	[5346]	MOVE     	R10 R6 ; R10 := R6
	89	[5346]	NEWTABLE 	R11 0 1 ; R11 := {}
	90	[5346]	SETTABLE 	R11 K19 K11 ; R11["GetVisibilityMaterial"] := true
	91	[5346]	OP_LOADBOOL	R12 1 0 ; R12 := true
	92	[5346]	CALL     	R8 5 0 ; R8,... := R8(R9,R10,R11,R12)
	93	[5346]	CALL     	R7 0 1 ; R7(R8,...)
	94	[5350]	GETTABLE 	R7 R3 K24 ; R7 := R3["RecoveredItemInfo"]
	95	[5351]	EQ       	1 R7 K13 ; if R7 == nil then PC := 246
	96	[5351]	JMP      	246 ; PC := 246
	97	[5352]	GETTABLE 	R8 R7 K25 ; R8 := R7["RecoveredCredits"]
	98	[5352]	EQ       	1 R8 K13 ; if R8 == nil then PC := 134
	99	[5352]	JMP      	134 ; PC := 134
	100	[5352]	GETTABLE 	R8 R7 K25 ; R8 := R7["RecoveredCredits"]
	101	[5352]	LT       	0 K26 R8 ; if 0.000000 >= R8 then PC := 134
	102	[5352]	JMP      	134 ; PC := 134
	103	[5353]	LOADK    	R8 := 0.000000
	104	[5354]	GETUPVAL 	R9 U4 ; R9 := U4
	105	[5354]	MOVE     	R10 R8 ; R10 := R8
	106	[5354]	GETTABLE 	R11 R7 K25 ; R11 := R7["RecoveredCredits"]
	107	[5354]	LOADK    	R12 K27 ; R12 := "Credits"
	108	[5354]	GETGLOBAL	R13 K28 ; R13 := 0x603636ad
	109	[5354]	LOADK    	R14 K29 ; R14 := "/Lotus/Language/Labels/RecoveredCredits"
	110	[5354]	NEWTABLE 	R15 0 1 ; R15 := {}
	111	[5354]	GETUPVAL 	R16 U5 ; R16 := U5
	112	[5354]	GETTABLE 	R16 R16 K31 ; R16 := R16[0x1142c7a8]
	113	[5354]	GETTABLE 	R17 R7 K25 ; R17 := R7["RecoveredCredits"]
	114	[5354]	CALL     	R16 2 2 ; R16 := R16(R17)
	115	[5354]	SETTABLE 	R15 K30 R16 ; R15["CREDITS"] := R16
	116	[5354]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	117	[5354]	OP_LOADBOOL	R14 1 0 ; R14 := true
	118	[5354]	CALL     	R9 6 2 ; R9 := R9(R10,R11,R12,R13,R14)
	119	[5354]	MOVE     	R8 R9 ; R8 := R9
	120	[5356]	GETUPVAL 	R9 U2 ; R9 := U2
	121	[5356]	NEWTABLE 	R10 0 6 ; R10 := {}
	122	[5357]	GETGLOBAL	R11 K28 ; R11 := 0x603636ad
	123	[5357]	LOADK    	R12 K32 ; R12 := "/Lotus/Language/Menu/MissionStats_TotalCredits"
	124	[5357]	NEWTABLE 	R13 0 0 ; R13 := {}
	125	[5357]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	126	[5357]	SETTABLE 	R10 K3 R11 ; R10["Name"] := R11
	127	[5358]	SETTABLE 	R10 K33 K34 ; R10["Count"] := 1.000000
	128	[5359]	SETTABLE 	R10 K27 R8 ; R10["Credits"] := R8
	129	[5360]	GETGLOBAL	R11 K35 ; R11 := 0x9afd2e71
	130	[5360]	SETTABLE 	R10 K7 R11 ; R10["Icon"] := R11
	131	[5361]	SETTABLE 	R10 K10 K11 ; R10["Themed"] := true
	132	[5362]	SETTABLE 	R10 K36 K11 ; R10["Recovered"] := true
	133	[5356]	CALL     	R9 2 1 ; R9(R10)
	134	[5366]	GETTABLE 	R9 R7 K37 ; R9 := R7["RecoveredFusionPoints"]
	135	[5366]	EQ       	1 R9 K13 ; if R9 == nil then PC := 154
	136	[5366]	JMP      	154 ; PC := 154
	137	[5366]	GETTABLE 	R9 R7 K37 ; R9 := R7["RecoveredFusionPoints"]
	138	[5366]	LT       	0 K26 R9 ; if 0.000000 >= R9 then PC := 154
	139	[5366]	JMP      	154 ; PC := 154
	140	[5367]	GETUPVAL 	R9 U2 ; R9 := U2
	141	[5367]	NEWTABLE 	R10 0 5 ; R10 := {}
	142	[5368]	GETGLOBAL	R11 K28 ; R11 := 0x603636ad
	143	[5368]	LOADK    	R12 K38 ; R12 := "/Lotus/Language/Items/FusionBundle"
	144	[5368]	NEWTABLE 	R13 0 0 ; R13 := {}
	145	[5368]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	146	[5368]	SETTABLE 	R10 K3 R11 ; R10["Name"] := R11
	147	[5369]	SETTABLE 	R10 K39 K40 ; R10["Description"] := "/Lotus/Language/Items/FusionPartDesc"
	148	[5370]	GETTABLE 	R11 R7 K37 ; R11 := R7["RecoveredFusionPoints"]
	149	[5370]	SETTABLE 	R10 K33 R11 ; R10["Count"] := R11
	150	[5371]	GETGLOBAL	R11 K41 ; R11 := 0x457d7698
	151	[5371]	SETTABLE 	R10 K7 R11 ; R10["Icon"] := R11
	152	[5372]	SETTABLE 	R10 K36 K11 ; R10["Recovered"] := true
	153	[5367]	CALL     	R9 2 1 ; R9(R10)
	154	[5376]	GETTABLE 	R9 R7 K42 ; R9 := R7["RecoveredCrewShipFusionPoints"]
	155	[5376]	EQ       	1 R9 K13 ; if R9 == nil then PC := 174
	156	[5376]	JMP      	174 ; PC := 174
	157	[5376]	GETTABLE 	R9 R7 K42 ; R9 := R7["RecoveredCrewShipFusionPoints"]
	158	[5376]	LT       	0 K26 R9 ; if 0.000000 >= R9 then PC := 174
	159	[5376]	JMP      	174 ; PC := 174
	160	[5377]	GETUPVAL 	R9 U2 ; R9 := U2
	161	[5377]	NEWTABLE 	R10 0 5 ; R10 := {}
	162	[5378]	GETGLOBAL	R11 K28 ; R11 := 0x603636ad
	163	[5378]	LOADK    	R12 K43 ; R12 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
	164	[5378]	NEWTABLE 	R13 0 0 ; R13 := {}
	165	[5378]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	166	[5378]	SETTABLE 	R10 K3 R11 ; R10["Name"] := R11
	167	[5379]	SETTABLE 	R10 K39 K44 ; R10["Description"] := "/Lotus/Language/Railjack/AvionicEndoDesc"
	168	[5380]	GETTABLE 	R11 R7 K42 ; R11 := R7["RecoveredCrewShipFusionPoints"]
	169	[5380]	SETTABLE 	R10 K33 R11 ; R10["Count"] := R11
	170	[5381]	GETGLOBAL	R11 K45 ; R11 := 0x1ae7e99f
	171	[5381]	SETTABLE 	R10 K7 R11 ; R10["Icon"] := R11
	172	[5382]	SETTABLE 	R10 K36 K11 ; R10["Recovered"] := true
	173	[5377]	CALL     	R9 2 1 ; R9(R10)
	174	[5386]	GETTABLE 	R9 R7 K46 ; R9 := R7["RecoveredMiscItems"]
	175	[5387]	LOADK    	R10 := 1.000000
	176	[5387]	LEN      	R11 R9 ; R11 := # R9
	177	[5387]	LOADK    	R12 := 1.000000
	178	[5387]	FORPREP  	R10 209 ; R10 -= R12; PC := 209
	179	[5388]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	180	[5389]	GETGLOBAL	R15 K47 ; R15 := 0x7ed0a956
	181	[5389]	GETTABLE 	R16 R14 K22 ; R16 := R14["ItemType"]
	182	[5389]	CALL     	R15 2 2 ; R15 := R15(R16)
	183	[5390]	GETGLOBAL	R16 K15 ; R16 := 0x7b998233
	184	[5390]	MOVE     	R17 R15 ; R17 := R15
	185	[5390]	CALL     	R16 2 2 ; R16 := R16(R17)
	186	[5390]	TEST     	R16 1 ; if R16 then PC := 209
	187	[5390]	JMP      	209 ; PC := 209
	188	[5390]	GETUPVAL 	R16 U6 ; R16 := U6
	189	[5390]	MOVE     	R17 R15 ; R17 := R15
	190	[5390]	CALL     	R16 2 2 ; R16 := R16(R17)
	191	[5390]	TEST     	R16 1 ; if R16 then PC := 209
	192	[5390]	JMP      	209 ; PC := 209
	193	[5391]	GETUPVAL 	R16 U3 ; R16 := U3
	194	[5391]	GETTABLE 	R16 R16 K23 ; R16 := R16[0x4eec6d11]
	195	[5391]	GETGLOBAL	R17 K4 ; R17 := 0xae91e43b
	196	[5391]	GETGLOBAL	R18 K16 ; R18 := 0xb009bbc6
	197	[5391]	MOVE     	R19 R15 ; R19 := R15
	198	[5391]	CALL     	R18 2 2 ; R18 := R18(R19)
	199	[5391]	NEWTABLE 	R19 0 1 ; R19 := {}
	200	[5391]	SETTABLE 	R19 K19 K11 ; R19["GetVisibilityMaterial"] := true
	201	[5391]	OP_LOADBOOL	R20 1 0 ; R20 := true
	202	[5391]	CALL     	R16 5 2 ; R16 := R16(R17,R18,R19,R20)
	203	[5392]	GETTABLE 	R17 R14 K48 ; R17 := R14["ItemCount"]
	204	[5392]	SETTABLE 	R16 K33 R17 ; R16["Count"] := R17
	205	[5393]	SETTABLE 	R16 K36 K11 ; R16["Recovered"] := true
	206	[5394]	GETUPVAL 	R17 U2 ; R17 := U2
	207	[5394]	MOVE     	R18 R16 ; R18 := R16
	208	[5394]	CALL     	R17 2 1 ; R17(R18)
	209	[5387]	FORLOOP  	R10 179 ; R10 += R12; if R10 <= R11 then begin PC := 179; R13 := R10 end
	210	[5398]	GETTABLE 	R17 R7 K49 ; R17 := R7["RecoveredCollectedItems"]
	211	[5399]	LOADK    	R18 := 1.000000
	212	[5399]	LEN      	R19 R17 ; R19 := # R17
	213	[5399]	LOADK    	R20 := 1.000000
	214	[5399]	FORPREP  	R18 245 ; R18 -= R20; PC := 245
	215	[5400]	GETTABLE 	R22 R17 R21 ; R22 := R17[R21]
	216	[5401]	GETGLOBAL	R23 K16 ; R23 := 0xb009bbc6
	217	[5401]	GETTABLE 	R24 R22 K50 ; R24 := R22["StoreItem"]
	218	[5401]	CALL     	R23 2 2 ; R23 := R23(R24)
	219	[5402]	GETGLOBAL	R24 K15 ; R24 := 0x7b998233
	220	[5402]	MOVE     	R25 R23 ; R25 := R23
	221	[5402]	CALL     	R24 2 2 ; R24 := R24(R25)
	222	[5402]	TEST     	R24 1 ; if R24 then PC := 245
	223	[5402]	JMP      	245 ; PC := 245
	224	[5402]	GETUPVAL 	R24 U6 ; R24 := U6
	225	[5402]	SELF     	R25 R23 K51 ; R26 := R23; R25 := R23[0xf278f8a1]
	226	[5402]	CALL     	R25 2 0 ; R25,... := R25(R26)
	227	[5402]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	228	[5402]	TEST     	R24 1 ; if R24 then PC := 245
	229	[5402]	JMP      	245 ; PC := 245
	230	[5403]	GETUPVAL 	R24 U3 ; R24 := U3
	231	[5403]	GETTABLE 	R24 R24 K18 ; R24 := R24[0x08681f50]
	232	[5403]	GETGLOBAL	R25 K4 ; R25 := 0xae91e43b
	233	[5403]	MOVE     	R26 R23 ; R26 := R23
	234	[5403]	NEWTABLE 	R27 0 1 ; R27 := {}
	235	[5403]	SETTABLE 	R27 K19 K11 ; R27["GetVisibilityMaterial"] := true
	236	[5403]	LOADNIL  	R28 R29 ; R28 := R29 := nil
	237	[5403]	OP_LOADBOOL	R30 1 0 ; R30 := true
	238	[5403]	CALL     	R24 7 2 ; R24 := R24(R25,R26,R27,R28,R29,R30)
	239	[5404]	GETTABLE 	R25 R22 K48 ; R25 := R22["ItemCount"]
	240	[5404]	SETTABLE 	R24 K33 R25 ; R24["Count"] := R25
	241	[5405]	SETTABLE 	R24 K36 K11 ; R24["Recovered"] := true
	242	[5406]	GETUPVAL 	R25 U2 ; R25 := U2
	243	[5406]	MOVE     	R26 R24 ; R26 := R24
	244	[5406]	CALL     	R25 2 1 ; R25(R26)
	245	[5399]	FORLOOP  	R18 215 ; R18 += R20; if R18 <= R19 then begin PC := 215; R21 := R18 end
	246	[5413]	GETGLOBAL	R25 K52 ; R25 := 0xc8802016
	247	[5413]	GETGLOBAL	R26 K53 ; R26 := mOtherStuff
	248	[5413]	CALL     	R25 2 4 ; R25,R26,R27 := R25(R26)
	249	[5413]	JMP      	253 ; PC := 253
	250	[5414]	GETUPVAL 	R30 U2 ; R30 := U2
	251	[5414]	MOVE     	R31 R29 ; R31 := R29
	252	[5414]	CALL     	R30 2 1 ; R30(R31)
	253	[5413]	TFORLOOP 	R25 2 ; R28,R29 := R25(R26,R27); if R28 ~= nil then begin PC = 250; R27 := R28 end
	254	[5414]	JMP      	250 ; PC := 250
	255	[5418]	LOADNIL  	R30 R30 ; R30 := nil
	256	[5419]	GETGLOBAL	R31 K15 ; R31 := 0x7b998233
	257	[5419]	GETGLOBAL	R32 K54 ; R32 := 0x89326c93
	258	[5419]	CALL     	R31 2 2 ; R31 := R31(R32)
	259	[5419]	TEST     	R31 1 ; if R31 then PC := 265
	260	[5419]	JMP      	265 ; PC := 265
	261	[5420]	GETGLOBAL	R31 K54 ; R31 := 0x89326c93
	262	[5420]	SELF     	R31 R31 K55 ; R32 := R31; R31 := R31[0xfb64e76c]
	263	[5420]	CALL     	R31 2 2 ; R31 := R31(R32)
	264	[5420]	MOVE     	R30 R31 ; R30 := R31
	265	[5423]	NEWTABLE 	R31 0 0 ; R31 := {}
	266	[5424]	GETGLOBAL	R32 K56 ; R32 := _T
	267	[5424]	GETTABLE 	R32 R32 K57 ; R32 := R32["eomScreenMode"]
	268	[5424]	GETUPVAL 	R33 U7 ; R33 := U7
	269	[5424]	GETTABLE 	R33 R33 K58 ; R33 := R33["ACTUAL_EOM"]
	270	[5424]	EQ       	1 R32 R33 ; if R32 == R33 then PC := 288
	271	[5424]	JMP      	288 ; PC := 288
	272	[5424]	GETUPVAL 	R32 U8 ; R32 := U8
	273	[5424]	GETTABLE 	R32 R32 K59 ; R32 := R32[0xcdc34211]
	274	[5424]	CALL     	R32 1 2 ; R32 := R32()
	275	[5424]	TEST     	R32 1 ; if R32 then PC := 287
	276	[5424]	JMP      	287 ; PC := 287
	277	[5424]	GETGLOBAL	R32 K56 ; R32 := _T
	278	[5424]	GETTABLE 	R32 R32 K57 ; R32 := R32["eomScreenMode"]
	279	[5424]	GETUPVAL 	R33 U7 ; R33 := U7
	280	[5424]	GETTABLE 	R33 R33 K60 ; R33 := R33["DETAILED_PREVIEW"]
	281	[5424]	EQ       	0 R32 R33 ; if R32 ~= R33 then PC := 287
	282	[5424]	JMP      	287 ; PC := 287
	283	[5424]	GETGLOBAL	R32 K61 ; R32 := mGameData
	284	[5424]	SELF     	R32 R32 K62 ; R33 := R32; R32 := R32[0x01f12112]
	285	[5424]	CALL     	R32 2 2 ; R32 := R32(R33)
	286	[5424]	JMP      	289 ; PC := 289
	287	[5424]	OP_LOADBOOL	R32 0 1 ; R32 := false; PC := 288
	288	[5424]	OP_LOADBOOL	R32 1 0 ; R32 := true
	289	[5425]	GETGLOBAL	R33 K63 ; R33 := mPlayerMissionInfo
	290	[5425]	GETTABLE 	R33 R33 K64 ; R33 := R33["mNemesisTaxInfo"]
	291	[5425]	GETTABLE 	R33 R33 K65 ; R33 := R33["mTaxedCollectedItems"]
	292	[5426]	LOADNIL  	R34 R34 ; R34 := nil
	293	[5427]	GETUPVAL 	R35 U9 ; R35 := U9
	294	[5427]	CALL     	R35 1 2 ; R35 := R35()
	295	[5428]	LOADNIL  	R36 R36 ; R36 := nil
	296	[5429]	GETTABLE 	R37 R35 K66 ; R37 := R35["alertId"]
	297	[5429]	EQ       	1 R37 K67 ; if R37 == "" then PC := 300
	298	[5429]	JMP      	300 ; PC := 300
	299	[5430]	LOADK    	R36 := 30.000000
	300	[5433]	GETGLOBAL	R37 K56 ; R37 := _T
	301	[5433]	GETTABLE 	R37 R37 K68 ; R37 := R37["TestStoreItems"]
	302	[5433]	TEST     	R37 0 ; if not R37 then PC := 325
	303	[5433]	JMP      	325 ; PC := 325
	304	[5434]	GETUPVAL 	R37 U10 ; R37 := U10
	305	[5434]	EQ       	0 R37 K13 ; if R37 ~= nil then PC := 309
	306	[5434]	JMP      	309 ; PC := 309
	307	[5435]	NEWTABLE 	R37 0 0 ; R37 := {}
	308	[5435]	SETUPVAL 	R37 U10 ; U10 := R37
	309	[5437]	LOADK    	R37 := 1.000000
	310	[5437]	GETGLOBAL	R38 K69 ; R38 := 0xfd8e2ef9
	311	[5437]	LEN      	R38 R38 ; R38 := # R38
	312	[5437]	LOADK    	R39 := 1.000000
	313	[5437]	FORPREP  	R37 324 ; R37 -= R39; PC := 324
	314	[5438]	GETGLOBAL	R41 K70 ; R41 := 0x33bdd652
	315	[5438]	GETTABLE 	R41 R41 K71 ; R41 := R41[0x23d5322f]
	316	[5438]	GETUPVAL 	R42 U10 ; R42 := U10
	317	[5438]	NEWTABLE 	R43 0 1 ; R43 := {}
	318	[5438]	GETGLOBAL	R44 K16 ; R44 := 0xb009bbc6
	319	[5438]	GETGLOBAL	R45 K69 ; R45 := 0xfd8e2ef9
	320	[5438]	GETTABLE 	R45 R45 R40 ; R45 := R45[R40]
	321	[5438]	CALL     	R44 2 2 ; R44 := R44(R45)
	322	[5438]	SETTABLE 	R43 K72 R44 ; R43["storeItem"] := R44
	323	[5438]	CALL     	R41 3 1 ; R41(R42,R43)
	324	[5437]	FORLOOP  	R37 314 ; R37 += R39; if R37 <= R38 then begin PC := 314; R40 := R37 end
	325	[5442]	GETGLOBAL	R41 K52 ; R41 := 0xc8802016
	326	[5442]	GETUPVAL 	R42 U10 ; R42 := U10
	327	[5442]	CALL     	R41 2 4 ; R41,R42,R43 := R41(R42)
	328	[5442]	JMP      	486 ; PC := 486
	329	[5443]	GETGLOBAL	R46 K15 ; R46 := 0x7b998233
	330	[5443]	GETTABLE 	R47 R45 K72 ; R47 := R45["storeItem"]
	331	[5443]	CALL     	R46 2 2 ; R46 := R46(R47)
	332	[5443]	TEST     	R46 1 ; if R46 then PC := 486
	333	[5443]	JMP      	486 ; PC := 486
	334	[5443]	GETTABLE 	R46 R45 K73 ; R46 := R45["isStripped"]
	335	[5443]	TEST     	R46 0 ; if not R46 then PC := 339
	336	[5443]	JMP      	339 ; PC := 339
	337	[5443]	TEST     	R32 0 ; if not R32 then PC := 486
	338	[5443]	JMP      	486 ; PC := 486
	339	[5444]	GETTABLE 	R46 R45 K72 ; R46 := R45["storeItem"]
	340	[5444]	SELF     	R46 R46 K51 ; R47 := R46; R46 := R46[0xf278f8a1]
	341	[5444]	CALL     	R46 2 2 ; R46 := R46(R47)
	342	[5444]	MOVE     	R34 R46 ; R34 := R46
	343	[5446]	GETGLOBAL	R46 K15 ; R46 := 0x7b998233
	344	[5446]	MOVE     	R47 R34 ; R47 := R34
	345	[5446]	CALL     	R46 2 2 ; R46 := R46(R47)
	346	[5446]	TEST     	R46 1 ; if R46 then PC := 359
	347	[5446]	JMP      	359 ; PC := 359
	348	[5446]	GETUPVAL 	R46 U6 ; R46 := U6
	349	[5446]	MOVE     	R47 R34 ; R47 := R34
	350	[5446]	CALL     	R46 2 2 ; R46 := R46(R47)
	351	[5446]	TEST     	R46 0 ; if not R46 then PC := 359
	352	[5446]	JMP      	359 ; PC := 359
	353	[5446]	SELF     	R46 R34 K74 ; R47 := R34; R46 := R34[0xf2deaf69]
	354	[5446]	GETUPVAL 	R48 U11 ; R48 := U11
	355	[5446]	GETTABLE 	R48 R48 K75 ; R48 := R48["Sigil"]
	356	[5446]	CALL     	R46 3 2 ; R46 := R46(R47,R48)
	357	[5446]	TEST     	R46 0 ; if not R46 then PC := 486
	358	[5446]	JMP      	486 ; PC := 486
	359	[5447]	GETUPVAL 	R46 U3 ; R46 := U3
	360	[5447]	GETTABLE 	R46 R46 K18 ; R46 := R46[0x08681f50]
	361	[5447]	GETGLOBAL	R47 K4 ; R47 := 0xae91e43b
	362	[5447]	GETTABLE 	R48 R45 K72 ; R48 := R45["storeItem"]
	363	[5447]	NEWTABLE 	R49 0 3 ; R49 := {}
	364	[5447]	SETTABLE 	R49 K76 R45 ; R49["ItemInfo"] := R45
	365	[5447]	GETGLOBAL	R50 K61 ; R50 := mGameData
	366	[5447]	SETTABLE 	R49 K77 R50 ; R49["GameData"] := R50
	367	[5447]	SETTABLE 	R49 K19 K11 ; R49["GetVisibilityMaterial"] := true
	368	[5447]	LOADNIL  	R50 R51 ; R50 := R51 := nil
	369	[5447]	OP_LOADBOOL	R52 1 0 ; R52 := true
	370	[5447]	CALL     	R46 7 2 ; R46 := R46(R47,R48,R49,R50,R51,R52)
	371	[5448]	SETTABLE 	R46 K78 K11 ; R46["HideEndoCount"] := true
	372	[5450]	GETTABLE 	R47 R45 K79 ; R47 := R45["FromEnemyCache"]
	373	[5450]	TEST     	R47 0 ; if not R47 then PC := 384
	374	[5450]	JMP      	384 ; PC := 384
	375	[5451]	GETGLOBAL	R47 K4 ; R47 := 0xae91e43b
	376	[5451]	SELF     	R47 R47 K5 ; R48 := R47; R47 := R47[0x42b04007]
	377	[5451]	LOADK    	R49 K80 ; R49 := "/Lotus/Language/Game/IdentifiedItem"
	378	[5451]	OP_LOADBOOL	R50 1 0 ; R50 := true
	379	[5451]	NEWTABLE 	R51 0 1 ; R51 := {}
	380	[5451]	GETTABLE 	R52 R46 K3 ; R52 := R46["Name"]
	381	[5451]	SETTABLE 	R51 K81 R52 ; R51["ITEM_NAME"] := R52
	382	[5451]	CALL     	R47 5 2 ; R47 := R47(R48,R49,R50,R51)
	383	[5451]	SETTABLE 	R46 K3 R47 ; R46["Name"] := R47
	384	[5454]	GETTABLE 	R47 R46 K82 ; R47 := R46["Category"]
	385	[5454]	EQ       	0 R47 K84 ; if R47 ~= 14.000000 then PC := 406
	386	[5454]	JMP      	406 ; PC := 406
	387	[5455]	SETTABLE 	R46 K33 K34 ; R46["Count"] := 1.000000
	388	[5456]	LOADK    	R47 := 1.000000
	389	[5456]	GETTABLE 	R48 R46 K85 ; R48 := R46["RawItem"]
	390	[5456]	GETTABLE 	R48 R48 K86 ; R48 := R48["itemCount"]
	391	[5456]	LOADK    	R49 := 1.000000
	392	[5456]	FORPREP  	R47 404 ; R47 -= R49; PC := 404
	393	[5457]	GETUPVAL 	R51 U4 ; R51 := U4
	394	[5457]	GETTABLE 	R52 R46 K27 ; R52 := R46["Credits"]
	395	[5457]	GETTABLE 	R53 R45 K72 ; R53 := R45["storeItem"]
	396	[5457]	SELF     	R53 R53 K87 ; R54 := R53; R53 := R53[0x4e485a6f]
	397	[5457]	CALL     	R53 2 2 ; R53 := R53(R54)
	398	[5457]	UNM      	R53 R53 ; R53 := ^ R53
	399	[5457]	LOADK    	R54 K27 ; R54 := "Credits"
	400	[5457]	GETTABLE 	R55 R46 K3 ; R55 := R46["Name"]
	401	[5457]	OP_LOADBOOL	R56 1 0 ; R56 := true
	402	[5457]	CALL     	R51 6 2 ; R51 := R51(R52,R53,R54,R55,R56)
	403	[5457]	SETTABLE 	R46 K27 R51 ; R46["Credits"] := R51
	404	[5456]	FORLOOP  	R47 393 ; R47 += R49; if R47 <= R48 then begin PC := 393; R50 := R47 end
	405	[5458]	JMP      	417 ; PC := 417
	406	[5459]	GETTABLE 	R51 R46 K82 ; R51 := R46["Category"]
	407	[5459]	EQ       	0 R51 K88 ; if R51 ~= 35.000000 then PC := 417
	408	[5459]	JMP      	417 ; PC := 417
	409	[5460]	GETTABLE 	R51 R46 K85 ; R51 := R46["RawItem"]
	410	[5460]	GETTABLE 	R51 R51 K86 ; R51 := R51["itemCount"]
	411	[5460]	GETTABLE 	R52 R45 K72 ; R52 := R45["storeItem"]
	412	[5460]	SELF     	R52 R52 K87 ; R53 := R52; R52 := R52[0x4e485a6f]
	413	[5460]	CALL     	R52 2 2 ; R52 := R52(R53)
	414	[5460]	UNM      	R52 R52 ; R52 := ^ R52
	415	[5460]	MUL      	R51 R51 R52 ; R51 := R51 * R52
	416	[5460]	SETTABLE 	R46 K89 R51 ; R46["Endo"] := R51
	417	[5463]	SETTABLE 	R46 K90 R36 ; R46["SortPriority"] := R36
	418	[5465]	SELF     	R51 R34 K74 ; R52 := R34; R51 := R34[0xf2deaf69]
	419	[5465]	GETUPVAL 	R53 U11 ; R53 := U11
	420	[5465]	GETTABLE 	R53 R53 K91 ; R53 := R53["Enhancement"]
	421	[5465]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	422	[5465]	TEST     	R51 0 ; if not R51 then PC := 434
	423	[5465]	JMP      	434 ; PC := 434
	424	[5466]	GETGLOBAL	R51 K92 ; R51 := 0x6c97a788
	425	[5466]	GETTABLE 	R51 R51 K93 ; R51 := R51[0x1aba4d9e]
	426	[5466]	CALL     	R51 1 2 ; R51 := R51()
	427	[5467]	SETTABLE 	R51 K94 R34 ; R51["mItemType"] := R34
	428	[5468]	GETTABLE 	R52 R51 K96 ; R52 := R51["mInstance"]
	429	[5468]	SELF     	R52 R52 K97 ; R53 := R52; R52 := R52[0x91fb01d5]
	430	[5468]	LOADK    	R54 K67 ; R54 := ""
	431	[5468]	CALL     	R52 3 2 ; R52 := R52(R53,R54)
	432	[5468]	SETTABLE 	R46 K95 R52 ; R46["ArcaneMaxRank"] := R52
	433	[5469]	SETTABLE 	R46 K98 K26 ; R46["ArcaneRank"] := 0.000000
	434	[5472]	LOADK    	R52 := 1.000000
	435	[5472]	LEN      	R53 R33 ; R53 := # R33
	436	[5472]	LOADK    	R54 := 1.000000
	437	[5472]	FORPREP  	R52 448 ; R52 -= R54; PC := 448
	438	[5473]	GETTABLE 	R56 R33 R55 ; R56 := R33[R55]
	439	[5473]	GETTABLE 	R56 R56 K72 ; R56 := R56["storeItem"]
	440	[5473]	SELF     	R56 R56 K51 ; R57 := R56; R56 := R56[0xf278f8a1]
	441	[5473]	CALL     	R56 2 2 ; R56 := R56(R57)
	442	[5473]	EQ       	0 R56 R34 ; if R56 ~= R34 then PC := 448
	443	[5473]	JMP      	448 ; PC := 448
	444	[5474]	GETTABLE 	R56 R33 R55 ; R56 := R33[R55]
	445	[5474]	GETTABLE 	R56 R56 K86 ; R56 := R56["itemCount"]
	446	[5474]	SETTABLE 	R46 K99 R56 ; R46["TaxedCount"] := R56
	447	[5475]	JMP      	449 ; PC := 449
	448	[5472]	FORLOOP  	R52 438 ; R52 += R54; if R52 <= R53 then begin PC := 438; R55 := R52 end
	449	[5479]	SETTABLE 	R46 K100 R34 ; R46["Type"] := R34
	450	[5480]	GETGLOBAL	R56 K70 ; R56 := 0x33bdd652
	451	[5480]	GETTABLE 	R56 R56 K71 ; R56 := R56[0x23d5322f]
	452	[5480]	MOVE     	R57 R31 ; R57 := R31
	453	[5480]	MOVE     	R58 R46 ; R58 := R46
	454	[5480]	CALL     	R56 3 1 ; R56(R57,R58)
	455	[5483]	GETTABLE 	R56 R46 K33 ; R56 := R46["Count"]
	456	[5484]	TEST     	R1 1 ; if R1 then PC := 486
	457	[5484]	JMP      	486 ; PC := 486
	458	[5484]	GETGLOBAL	R57 K15 ; R57 := 0x7b998233
	459	[5484]	GETGLOBAL	R58 K101 ; R58 := 0xba7dfcd2
	460	[5484]	CALL     	R57 2 2 ; R57 := R57(R58)
	461	[5484]	TEST     	R57 1 ; if R57 then PC := 486
	462	[5484]	JMP      	486 ; PC := 486
	463	[5484]	GETGLOBAL	R57 K15 ; R57 := 0x7b998233
	464	[5484]	MOVE     	R58 R30 ; R58 := R30
	465	[5484]	CALL     	R57 2 2 ; R57 := R57(R58)
	466	[5484]	TEST     	R57 1 ; if R57 then PC := 486
	467	[5484]	JMP      	486 ; PC := 486
	468	[5484]	GETGLOBAL	R57 K15 ; R57 := 0x7b998233
	469	[5484]	MOVE     	R58 R34 ; R58 := R34
	470	[5484]	CALL     	R57 2 2 ; R57 := R57(R58)
	471	[5484]	TEST     	R57 1 ; if R57 then PC := 486
	472	[5484]	JMP      	486 ; PC := 486
	473	[5484]	TEST     	R56 0 ; if not R56 then PC := 486
	474	[5484]	JMP      	486 ; PC := 486
	475	[5484]	LT       	0 K26 R56 ; if 0.000000 >= R56 then PC := 486
	476	[5484]	JMP      	486 ; PC := 486
	477	[5485]	GETGLOBAL	R57 K101 ; R57 := 0xba7dfcd2
	478	[5485]	SELF     	R57 R57 K102 ; R58 := R57; R57 := R57[0xd8da7235]
	479	[5485]	MOVE     	R59 R30 ; R59 := R30
	480	[5485]	GETUPVAL 	R60 U12 ; R60 := U12
	481	[5485]	GETTABLE 	R60 R60 K103 ; R60 := R60["EARNED_ITEM_TAG"]
	482	[5485]	MOVE     	R61 R56 ; R61 := R56
	483	[5485]	LOADNIL  	R62 R62 ; R62 := nil
	484	[5485]	MOVE     	R63 R34 ; R63 := R34
	485	[5485]	CALL     	R57 7 1 ; R57(R58,R59,R60,R61,R62,R63)
	486	[5442]	TFORLOOP 	R41 2 ; R44,R45 := R41(R42,R43); if R44 ~= nil then begin PC = 329; R43 := R44 end
	487	[5488]	JMP      	329 ; PC := 329
	488	[5491]	GETGLOBAL	R57 K52 ; R57 := 0xc8802016
	489	[5491]	MOVE     	R58 R31 ; R58 := R31
	490	[5491]	CALL     	R57 2 4 ; R57,R58,R59 := R57(R58)
	491	[5491]	JMP      	495 ; PC := 495
	492	[5492]	GETUPVAL 	R62 U2 ; R62 := U2
	493	[5492]	MOVE     	R63 R61 ; R63 := R61
	494	[5492]	CALL     	R62 2 1 ; R62(R63)
	495	[5491]	TFORLOOP 	R57 2 ; R60,R61 := R57(R58,R59); if R60 ~= nil then begin PC = 492; R59 := R60 end
	496	[5492]	JMP      	492 ; PC := 492
	497	[5496]	GETGLOBAL	R62 K52 ; R62 := 0xc8802016
	498	[5496]	GETUPVAL 	R63 U13 ; R63 := U13
	499	[5496]	CALL     	R62 2 4 ; R62,R63,R64 := R62(R63)
	500	[5496]	JMP      	533 ; PC := 533
	501	[5497]	GETTABLE 	R34 R66 K94 ; R34 := R66["mItemType"]
	502	[5499]	GETGLOBAL	R67 K15 ; R67 := 0x7b998233
	503	[5499]	MOVE     	R68 R34 ; R68 := R34
	504	[5499]	CALL     	R67 2 2 ; R67 := R67(R68)
	505	[5499]	TEST     	R67 1 ; if R67 then PC := 530
	506	[5499]	JMP      	530 ; PC := 530
	507	[5500]	GETGLOBAL	R67 K104 ; R67 := 0x6728fd22
	508	[5500]	MOVE     	R68 R34 ; R68 := R34
	509	[5500]	CALL     	R67 2 2 ; R67 := R67(R68)
	510	[5500]	TEST     	R67 0 ; if not R67 then PC := 516
	511	[5500]	JMP      	516 ; PC := 516
	512	[5501]	GETGLOBAL	R67 K16 ; R67 := 0xb009bbc6
	513	[5501]	MOVE     	R68 R34 ; R68 := R34
	514	[5501]	CALL     	R67 2 2 ; R67 := R67(R68)
	515	[5501]	MOVE     	R34 R67 ; R34 := R67
	516	[5504]	GETUPVAL 	R67 U2 ; R67 := U2
	517	[5504]	GETUPVAL 	R68 U3 ; R68 := U3
	518	[5504]	GETTABLE 	R68 R68 K23 ; R68 := R68[0x4eec6d11]
	519	[5504]	GETGLOBAL	R69 K4 ; R69 := 0xae91e43b
	520	[5504]	MOVE     	R70 R34 ; R70 := R34
	521	[5504]	NEWTABLE 	R71 0 3 ; R71 := {}
	522	[5504]	SETTABLE 	R71 K76 R66 ; R71["ItemInfo"] := R66
	523	[5504]	GETGLOBAL	R72 K61 ; R72 := mGameData
	524	[5504]	SETTABLE 	R71 K77 R72 ; R71["GameData"] := R72
	525	[5504]	SETTABLE 	R71 K19 K11 ; R71["GetVisibilityMaterial"] := true
	526	[5504]	OP_LOADBOOL	R72 1 0 ; R72 := true
	527	[5504]	CALL     	R68 5 0 ; R68,... := R68(R69,R70,R71,R72)
	528	[5504]	CALL     	R67 0 1 ; R67(R68,...)
	529	[5504]	JMP      	533 ; PC := 533
	530	[5506]	GETGLOBAL	R67 K105 ; R67 := 0x3d106989
	531	[5506]	LOADK    	R68 K106 ; R68 := "MissionStatsAndResults: invalid Consumable acquired during mission?"
	532	[5506]	CALL     	R67 2 1 ; R67(R68)
	533	[5496]	TFORLOOP 	R62 2 ; R65,R66 := R62(R63,R64); if R65 ~= nil then begin PC = 501; R64 := R65 end
	534	[5507]	JMP      	501 ; PC := 501
	535	[5510]	NEWTABLE 	R67 0 0 ; R67 := {}
	536	[5511]	GETGLOBAL	R68 K63 ; R68 := mPlayerMissionInfo
	537	[5511]	GETTABLE 	R68 R68 K64 ; R68 := R68["mNemesisTaxInfo"]
	538	[5511]	GETTABLE 	R68 R68 K107 ; R68 := R68["mTaxedMiscItems"]
	539	[5512]	LOADK    	R69 := 1.000000
	540	[5512]	LEN      	R70 R68 ; R70 := # R68
	541	[5512]	LOADK    	R71 := 1.000000
	542	[5512]	FORPREP  	R69 561 ; R69 -= R71; PC := 561
	543	[5513]	GETGLOBAL	R73 K15 ; R73 := 0x7b998233
	544	[5513]	GETTABLE 	R74 R68 R72 ; R74 := R68[R72]
	545	[5513]	GETTABLE 	R74 R74 K94 ; R74 := R74["mItemType"]
	546	[5513]	CALL     	R73 2 2 ; R73 := R73(R74)
	547	[5513]	TEST     	R73 1 ; if R73 then PC := 561
	548	[5513]	JMP      	561 ; PC := 561
	549	[5514]	GETTABLE 	R73 R68 R72 ; R73 := R68[R72]
	550	[5514]	GETTABLE 	R73 R73 K94 ; R73 := R73["mItemType"]
	551	[5514]	SELF     	R73 R73 K74 ; R74 := R73; R73 := R73[0xf2deaf69]
	552	[5514]	GETGLOBAL	R75 K108 ; R75 := gLotusArtifactUpgradeType
	553	[5514]	CALL     	R73 3 2 ; R73 := R73(R74,R75)
	554	[5514]	TEST     	R73 1 ; if R73 then PC := 561
	555	[5514]	JMP      	561 ; PC := 561
	556	[5515]	GETGLOBAL	R73 K70 ; R73 := 0x33bdd652
	557	[5515]	GETTABLE 	R73 R73 K71 ; R73 := R73[0x23d5322f]
	558	[5515]	MOVE     	R74 R67 ; R74 := R67
	559	[5515]	GETTABLE 	R75 R68 R72 ; R75 := R68[R72]
	560	[5515]	CALL     	R73 3 1 ; R73(R74,R75)
	561	[5512]	FORLOOP  	R69 543 ; R69 += R71; if R69 <= R70 then begin PC := 543; R72 := R69 end
	562	[5521]	GETGLOBAL	R73 K52 ; R73 := 0xc8802016
	563	[5521]	GETUPVAL 	R74 U14 ; R74 := U14
	564	[5521]	CALL     	R73 2 4 ; R73,R74,R75 := R73(R74)
	565	[5521]	JMP      	826 ; PC := 826
	566	[5522]	GETTABLE 	R34 R77 K94 ; R34 := R77["mItemType"]
	567	[5523]	GETTABLE 	R78 R77 K109 ; R78 := R77["mIsMystery"]
	568	[5523]	TEST     	R78 0 ; if not R78 then PC := 585
	569	[5523]	JMP      	585 ; PC := 585
	570	[5524]	GETUPVAL 	R78 U2 ; R78 := U2
	571	[5524]	NEWTABLE 	R79 0 4 ; R79 := {}
	572	[5525]	GETGLOBAL	R80 K4 ; R80 := 0xae91e43b
	573	[5525]	SELF     	R80 R80 K5 ; R81 := R80; R80 := R80[0x42b04007]
	574	[5525]	LOADK    	R82 K110 ; R82 := "/Lotus/Language/Game/UnidentifiedItem"
	575	[5525]	OP_LOADBOOL	R83 0 0 ; R83 := false
	576	[5525]	CALL     	R80 4 2 ; R80 := R80(R81,R82,R83)
	577	[5525]	SETTABLE 	R79 K3 R80 ; R79["Name"] := R80
	578	[5526]	GETTABLE 	R80 R77 K111 ; R80 := R77["mItemCount"]
	579	[5526]	SETTABLE 	R79 K33 R80 ; R79["Count"] := R80
	580	[5527]	GETGLOBAL	R80 K112 ; R80 := 0x5f3fe9ee
	581	[5527]	SETTABLE 	R79 K7 R80 ; R79["Icon"] := R80
	582	[5528]	SETTABLE 	R79 K90 K113 ; R79["SortPriority"] := 20.000000
	583	[5524]	CALL     	R78 2 1 ; R78(R79)
	584	[5529]	JMP      	826 ; PC := 826
	585	[5530]	GETGLOBAL	R78 K15 ; R78 := 0x7b998233
	586	[5530]	MOVE     	R79 R34 ; R79 := R34
	587	[5530]	CALL     	R78 2 2 ; R78 := R78(R79)
	588	[5530]	TEST     	R78 0 ; if not R78 then PC := 594
	589	[5530]	JMP      	594 ; PC := 594
	590	[5531]	GETGLOBAL	R78 K105 ; R78 := 0x3d106989
	591	[5531]	LOADK    	R79 K114 ; R79 := "MissionStatsAndResults: invalid miscItem in mMiscItems"
	592	[5531]	CALL     	R78 2 1 ; R78(R79)
	593	[5531]	JMP      	826 ; PC := 826
	594	[5533]	GETGLOBAL	R78 K104 ; R78 := 0x6728fd22
	595	[5533]	MOVE     	R79 R34 ; R79 := R34
	596	[5533]	CALL     	R78 2 2 ; R78 := R78(R79)
	597	[5533]	TEST     	R78 0 ; if not R78 then PC := 603
	598	[5533]	JMP      	603 ; PC := 603
	599	[5534]	GETGLOBAL	R78 K16 ; R78 := 0xb009bbc6
	600	[5534]	MOVE     	R79 R34 ; R79 := R34
	601	[5534]	CALL     	R78 2 2 ; R78 := R78(R79)
	602	[5534]	MOVE     	R34 R78 ; R34 := R78
	603	[5537]	GETGLOBAL	R78 K15 ; R78 := 0x7b998233
	604	[5537]	MOVE     	R79 R34 ; R79 := R34
	605	[5537]	CALL     	R78 2 2 ; R78 := R78(R79)
	606	[5537]	TEST     	R78 0 ; if not R78 then PC := 616
	607	[5537]	JMP      	616 ; PC := 616
	608	[5538]	GETGLOBAL	R78 K105 ; R78 := 0x3d106989
	609	[5538]	LOADK    	R79 K115 ; R79 := "MissionStatsAndResults: broken miscItem WRes: "
	610	[5538]	GETTABLE 	R80 R77 K94 ; R80 := R77["mItemType"]
	611	[5538]	SELF     	R80 R80 K116 ; R81 := R80; R80 := R80[0xed4e0128]
	612	[5538]	CALL     	R80 2 2 ; R80 := R80(R81)
	613	[5538]	CONCAT   	R79 R79 R80 ; R79 := R79 .. R80
	614	[5538]	CALL     	R78 2 1 ; R78(R79)
	615	[5538]	JMP      	826 ; PC := 826
	616	[5540]	GETGLOBAL	R78 K56 ; R78 := _T
	617	[5540]	GETTABLE 	R78 R78 K57 ; R78 := R78["eomScreenMode"]
	618	[5540]	GETUPVAL 	R79 U7 ; R79 := U7
	619	[5540]	GETTABLE 	R79 R79 K58 ; R79 := R79["ACTUAL_EOM"]
	620	[5540]	EQ       	1 R78 R79 ; if R78 == R79 then PC := 635
	621	[5540]	JMP      	635 ; PC := 635
	622	[5540]	GETGLOBAL	R78 K15 ; R78 := 0x7b998233
	623	[5540]	MOVE     	R79 R34 ; R79 := R34
	624	[5540]	CALL     	R78 2 2 ; R78 := R78(R79)
	625	[5540]	TEST     	R78 1 ; if R78 then PC := 635
	626	[5540]	JMP      	635 ; PC := 635
	627	[5540]	SELF     	R78 R34 K74 ; R79 := R34; R78 := R34[0xf2deaf69]
	628	[5540]	GETGLOBAL	R80 K117 ; R80 := gRecipeItemType
	629	[5540]	CALL     	R78 3 2 ; R78 := R78(R79,R80)
	630	[5540]	TEST     	R78 0 ; if not R78 then PC := 637
	631	[5540]	JMP      	637 ; PC := 637
	632	[5540]	GETUPVAL 	R78 U15 ; R78 := U15
	633	[5540]	CALL     	R78 1 2 ; R78 := R78()
	634	[5540]	JMP      	637 ; PC := 637
	635	[5540]	OP_LOADBOOL	R78 0 1 ; R78 := false; PC := 636
	636	[5540]	OP_LOADBOOL	R78 1 0 ; R78 := true
	637	[5541]	TEST     	R78 1 ; if R78 then PC := 826
	638	[5541]	JMP      	826 ; PC := 826
	639	[5542]	NEWTABLE 	R79 0 0 ; R79 := {}
	640	[5545]	SELF     	R80 R34 K74 ; R81 := R34; R80 := R34[0xf2deaf69]
	641	[5545]	GETGLOBAL	R82 K118 ; R82 := gFishItemType
	642	[5545]	CALL     	R80 3 2 ; R80 := R80(R81,R82)
	643	[5545]	TEST     	R80 0 ; if not R80 then PC := 687
	644	[5545]	JMP      	687 ; PC := 687
	645	[5546]	LOADNIL  	R80 R80 ; R80 := nil
	646	[5547]	GETGLOBAL	R81 K15 ; R81 := 0x7b998233
	647	[5547]	GETUPVAL 	R82 U16 ; R82 := U16
	648	[5547]	CALL     	R81 2 2 ; R81 := R81(R82)
	649	[5547]	TEST     	R81 1 ; if R81 then PC := 657
	650	[5547]	JMP      	657 ; PC := 657
	651	[5548]	GETUPVAL 	R81 U16 ; R81 := U16
	652	[5548]	SELF     	R81 R81 K119 ; R82 := R81; R81 := R81[0x105074fb]
	653	[5548]	MOVE     	R83 R34 ; R83 := R34
	654	[5548]	CALL     	R81 3 2 ; R81 := R81(R82,R83)
	655	[5548]	MOVE     	R80 R81 ; R80 := R81
	656	[5548]	JMP      	668 ; PC := 668
	657	[5550]	GETGLOBAL	R81 K16 ; R81 := 0xb009bbc6
	658	[5550]	LOADK    	R82 K120 ; R82 := "/Lotus/StoreItems/"
	659	[5550]	GETGLOBAL	R83 K121 ; R83 := 0x7f5022cf
	660	[5550]	GETTABLE 	R83 R83 K122 ; R83 := R83[0x1a94c9cc]
	661	[5550]	SELF     	R84 R34 K116 ; R85 := R34; R84 := R34[0xed4e0128]
	662	[5550]	CALL     	R84 2 2 ; R84 := R84(R85)
	663	[5550]	LOADK    	R85 := 8.000000
	664	[5550]	CALL     	R83 3 2 ; R83 := R83(R84,R85)
	665	[5550]	CONCAT   	R82 R82 R83 ; R82 := R82 .. R83
	666	[5550]	CALL     	R81 2 2 ; R81 := R81(R82)
	667	[5550]	MOVE     	R80 R81 ; R80 := R81
	668	[5553]	GETGLOBAL	R81 K15 ; R81 := 0x7b998233
	669	[5553]	MOVE     	R82 R80 ; R82 := R80
	670	[5553]	CALL     	R81 2 2 ; R81 := R81(R82)
	671	[5553]	TEST     	R81 1 ; if R81 then PC := 699
	672	[5553]	JMP      	699 ; PC := 699
	673	[5554]	GETUPVAL 	R81 U3 ; R81 := U3
	674	[5554]	GETTABLE 	R81 R81 K18 ; R81 := R81[0x08681f50]
	675	[5554]	GETGLOBAL	R82 K4 ; R82 := 0xae91e43b
	676	[5554]	MOVE     	R83 R80 ; R83 := R80
	677	[5554]	NEWTABLE 	R84 0 3 ; R84 := {}
	678	[5554]	SETTABLE 	R84 K76 R77 ; R84["ItemInfo"] := R77
	679	[5554]	GETGLOBAL	R85 K61 ; R85 := mGameData
	680	[5554]	SETTABLE 	R84 K77 R85 ; R84["GameData"] := R85
	681	[5554]	SETTABLE 	R84 K19 K11 ; R84["GetVisibilityMaterial"] := true
	682	[5554]	LOADNIL  	R85 R86 ; R85 := R86 := nil
	683	[5554]	OP_LOADBOOL	R87 1 0 ; R87 := true
	684	[5554]	CALL     	R81 7 2 ; R81 := R81(R82,R83,R84,R85,R86,R87)
	685	[5554]	MOVE     	R79 R81 ; R79 := R81
	686	[5555]	JMP      	699 ; PC := 699
	687	[5557]	GETUPVAL 	R81 U3 ; R81 := U3
	688	[5557]	GETTABLE 	R81 R81 K23 ; R81 := R81[0x4eec6d11]
	689	[5557]	GETGLOBAL	R82 K4 ; R82 := 0xae91e43b
	690	[5557]	MOVE     	R83 R34 ; R83 := R34
	691	[5557]	NEWTABLE 	R84 0 3 ; R84 := {}
	692	[5557]	SETTABLE 	R84 K76 R77 ; R84["ItemInfo"] := R77
	693	[5557]	GETGLOBAL	R85 K61 ; R85 := mGameData
	694	[5557]	SETTABLE 	R84 K77 R85 ; R84["GameData"] := R85
	695	[5557]	SETTABLE 	R84 K19 K11 ; R84["GetVisibilityMaterial"] := true
	696	[5557]	OP_LOADBOOL	R85 1 0 ; R85 := true
	697	[5557]	CALL     	R81 5 2 ; R81 := R81(R82,R83,R84,R85)
	698	[5557]	MOVE     	R79 R81 ; R79 := R81
	699	[5559]	GETTABLE 	R81 R77 K111 ; R81 := R77["mItemCount"]
	700	[5559]	SETTABLE 	R79 K33 R81 ; R79["Count"] := R81
	701	[5560]	LOADK    	R81 := 1.000000
	702	[5560]	LEN      	R82 R67 ; R82 := # R67
	703	[5560]	LOADK    	R83 := 1.000000
	704	[5560]	FORPREP  	R81 713 ; R81 -= R83; PC := 713
	705	[5561]	GETTABLE 	R85 R67 R84 ; R85 := R67[R84]
	706	[5561]	GETTABLE 	R85 R85 K94 ; R85 := R85["mItemType"]
	707	[5561]	EQ       	0 R85 R34 ; if R85 ~= R34 then PC := 713
	708	[5561]	JMP      	713 ; PC := 713
	709	[5562]	GETTABLE 	R85 R67 R84 ; R85 := R67[R84]
	710	[5562]	GETTABLE 	R85 R85 K111 ; R85 := R85["mItemCount"]
	711	[5562]	SETTABLE 	R79 K99 R85 ; R79["TaxedCount"] := R85
	712	[5563]	JMP      	714 ; PC := 714
	713	[5560]	FORLOOP  	R81 705 ; R81 += R83; if R81 <= R82 then begin PC := 705; R84 := R81 end
	714	[5567]	GETTABLE 	R85 R79 K33 ; R85 := R79["Count"]
	715	[5567]	EQ       	1 R85 K26 ; if R85 == 0.000000 then PC := 826
	716	[5567]	JMP      	826 ; PC := 826
	717	[5568]	SELF     	R85 R34 K74 ; R86 := R34; R85 := R34[0xf2deaf69]
	718	[5568]	GETUPVAL 	R87 U11 ; R87 := U11
	719	[5568]	GETTABLE 	R87 R87 K123 ; R87 := R87["KuvaItem"]
	720	[5568]	CALL     	R85 3 2 ; R85 := R85(R86,R87)
	721	[5568]	TEST     	R85 0 ; if not R85 then PC := 759
	722	[5568]	JMP      	759 ; PC := 759
	723	[5570]	GETGLOBAL	R85 K8 ; R85 := 0x0032441c
	724	[5570]	GETTABLE 	R85 R85 K124 ; R85 := R85["LastMissionKuva"]
	725	[5570]	EQ       	0 R85 K13 ; if R85 ~= nil then PC := 750
	726	[5570]	JMP      	750 ; PC := 750
	727	[5571]	GETTABLE 	R85 R35 K125 ; R85 := R35["periodicMissionTag"]
	728	[5571]	GETGLOBAL	R86 K126 ; R86 := EMPTY_SYMBOL
	729	[5571]	EQ       	1 R85 R86 ; if R85 == R86 then PC := 744
	730	[5571]	JMP      	744 ; PC := 744
	731	[5571]	GETGLOBAL	R85 K127 ; R85 := 0x76ea806b
	732	[5571]	SELF     	R85 R85 K128 ; R86 := R85; R85 := R85[0x3f3ae64c]
	733	[5571]	LOADK    	R87 := 0.000000
	734	[5571]	CALL     	R85 3 2 ; R85 := R85(R86,R87)
	735	[5571]	SELF     	R85 R85 K129 ; R86 := R85; R85 := R85[0x80563238]
	736	[5571]	CALL     	R85 2 2 ; R85 := R85(R86)
	737	[5571]	SELF     	R85 R85 K130 ; R86 := R85; R85 := R85[0xc3150d06]
	738	[5571]	GETTABLE 	R87 R35 K125 ; R87 := R35["periodicMissionTag"]
	739	[5571]	GETUPVAL 	R88 U8 ; R88 := U8
	740	[5571]	GETTABLE 	R88 R88 K131 ; R88 := R88["KUVA_TOWER_MISSION_INTERVAL"]
	741	[5571]	CALL     	R85 4 2 ; R85 := R85(R86,R87,R88)
	742	[5571]	TEST     	R85 0 ; if not R85 then PC := 826
	743	[5571]	JMP      	826 ; PC := 826
	744	[5572]	GETUPVAL 	R85 U2 ; R85 := U2
	745	[5572]	MOVE     	R86 R79 ; R86 := R79
	746	[5572]	CALL     	R85 2 1 ; R85(R86)
	747	[5573]	GETGLOBAL	R85 K8 ; R85 := 0x0032441c
	748	[5573]	SETTABLE 	R85 K124 R79 ; R85["LastMissionKuva"] := R79
	749	[5574]	JMP      	826 ; PC := 826
	750	[5576]	GETGLOBAL	R85 K8 ; R85 := 0x0032441c
	751	[5576]	GETTABLE 	R85 R85 K124 ; R85 := R85["LastMissionKuva"]
	752	[5576]	GETTABLE 	R86 R79 K99 ; R86 := R79["TaxedCount"]
	753	[5576]	SETTABLE 	R85 K99 R86 ; R85["TaxedCount"] := R86
	754	[5577]	GETUPVAL 	R85 U2 ; R85 := U2
	755	[5577]	GETGLOBAL	R86 K8 ; R86 := 0x0032441c
	756	[5577]	GETTABLE 	R86 R86 K124 ; R86 := R86["LastMissionKuva"]
	757	[5577]	CALL     	R85 2 1 ; R85(R86)
	758	[5578]	JMP      	826 ; PC := 826
	759	[5579]	SELF     	R85 R34 K74 ; R86 := R34; R85 := R34[0xf2deaf69]
	760	[5579]	GETUPVAL 	R87 U11 ; R87 := U11
	761	[5579]	GETTABLE 	R87 R87 K132 ; R87 := R87["ScarletCredits"]
	762	[5579]	CALL     	R85 3 2 ; R85 := R85(R86,R87)
	763	[5579]	TEST     	R85 0 ; if not R85 then PC := 769
	764	[5579]	JMP      	769 ; PC := 769
	765	[5580]	GETUPVAL 	R85 U2 ; R85 := U2
	766	[5580]	MOVE     	R86 R79 ; R86 := R79
	767	[5580]	CALL     	R85 2 1 ; R85(R86)
	768	[5580]	JMP      	826 ; PC := 826
	769	[5581]	SELF     	R85 R34 K74 ; R86 := R34; R85 := R34[0xf2deaf69]
	770	[5581]	GETUPVAL 	R87 U11 ; R87 := U11
	771	[5581]	GETTABLE 	R87 R87 K133 ; R87 := R87["NoraDogTag"]
	772	[5581]	CALL     	R85 3 2 ; R85 := R85(R86,R87)
	773	[5581]	TEST     	R85 0 ; if not R85 then PC := 820
	774	[5581]	JMP      	820 ; PC := 820
	775	[5582]	TEST     	R0 1 ; if R0 then PC := 826
	776	[5582]	JMP      	826 ; PC := 826
	777	[5582]	GETGLOBAL	R85 K15 ; R85 := 0x7b998233
	778	[5582]	GETGLOBAL	R86 K134 ; R86 := 0x25d99d89
	779	[5582]	CALL     	R85 2 2 ; R85 := R85(R86)
	780	[5582]	TEST     	R85 1 ; if R85 then PC := 826
	781	[5582]	JMP      	826 ; PC := 826
	782	[5583]	GETGLOBAL	R85 K134 ; R85 := 0x25d99d89
	783	[5583]	SELF     	R85 R85 K135 ; R86 := R85; R85 := R85[0x69727e0b]
	784	[5583]	CALL     	R85 2 2 ; R85 := R85(R86)
	785	[5583]	GETTABLE 	R85 R85 K136 ; R85 := R85["mSeasonInfo"]
	786	[5583]	GETTABLE 	R85 R85 K137 ; R85 := R85["mAffiliationTag"]
	787	[5584]	SELF     	R86 R85 K138 ; R87 := R85; R86 := R85[0x56c01834]
	788	[5584]	CALL     	R86 2 2 ; R86 := R86(R87)
	789	[5584]	TEST     	R86 0 ; if not R86 then PC := 826
	790	[5584]	JMP      	826 ; PC := 826
	791	[5585]	GETGLOBAL	R86 K16 ; R86 := 0xb009bbc6
	792	[5585]	GETGLOBAL	R87 K139 ; R87 := 0xa94df70b
	793	[5585]	SELF     	R87 R87 K140 ; R88 := R87; R87 := R87[0x07408254]
	794	[5585]	MOVE     	R89 R85 ; R89 := R85
	795	[5585]	CALL     	R87 3 0 ; R87,... := R87(R88,R89)
	796	[5585]	CALL     	R86 0 2 ; R86 := R86(R87,...)
	797	[5586]	GETUPVAL 	R87 U8 ; R87 := U8
	798	[5586]	GETTABLE 	R87 R87 K144 ; R87 := R87[0x338a8686]
	799	[5586]	MOVE     	R88 R86 ; R88 := R86
	800	[5586]	CALL     	R87 2 4 ; R87,R88,R89 := R87(R88)
	801	[5586]	SETTABLE 	R79 K143 R89 ; R79["MaxStanding"] := R89
	802	[5586]	SETTABLE 	R79 K142 R88 ; R79["Standing"] := R88
	803	[5586]	SETTABLE 	R79 K141 R87 ; R79["Level"] := R87
	804	[5587]	GETTABLE 	R87 R79 K33 ; R87 := R79["Count"]
	805	[5587]	SETTABLE 	R79 K145 R87 ; R79["NewStanding"] := R87
	806	[5588]	SETTABLE 	R79 K146 K11 ; R79["Syndicate"] := true
	807	[5589]	GETUPVAL 	R87 U17 ; R87 := U17
	808	[5589]	GETTABLE 	R87 R87 K147 ; R87 := R87[0x3972b419]
	809	[5589]	GETTABLE 	R88 R79 K7 ; R88 := R79["Icon"]
	810	[5589]	CALL     	R87 2 2 ; R87 := R87(R88)
	811	[5589]	TEST     	R87 0 ; if not R87 then PC := 814
	812	[5589]	JMP      	814 ; PC := 814
	813	[5590]	SETTABLE 	R79 K148 K149 ; R79["IconColor"] := 9.000000
	814	[5592]	GETGLOBAL	R87 K150 ; R87 := mAffinityGrid
	815	[5592]	SELF     	R87 R87 K151 ; R88 := R87; R87 := R87[0xbad4316f]
	816	[5592]	MOVE     	R89 R79 ; R89 := R79
	817	[5592]	OP_LOADBOOL	R90 1 0 ; R90 := true
	818	[5592]	CALL     	R87 4 1 ; R87(R88,R89,R90)
	819	[5594]	JMP      	826 ; PC := 826
	820	[5596]	SELF     	R87 R34 K153 ; R88 := R34; R87 := R34[0xb24acced]
	821	[5596]	CALL     	R87 2 2 ; R87 := R87(R88)
	822	[5596]	SETTABLE 	R79 K152 R87 ; R79["mRarity"] := R87
	823	[5597]	GETUPVAL 	R87 U2 ; R87 := U2
	824	[5597]	MOVE     	R88 R79 ; R88 := R79
	825	[5597]	CALL     	R87 2 1 ; R87(R88)
	826	[5521]	TFORLOOP 	R73 2 ; R76,R77 := R73(R74,R75); if R76 ~= nil then begin PC = 566; R75 := R76 end
	827	[5602]	JMP      	566 ; PC := 566
	828	[5605]	LOADK    	R87 := 1.000000
	829	[5605]	GETGLOBAL	R88 K154 ; R88 := mSortRewardItems
	830	[5605]	LEN      	R88 R88 ; R88 := # R88
	831	[5605]	LOADK    	R89 := 1.000000
	832	[5605]	FORPREP  	R87 837 ; R87 -= R89; PC := 837
	833	[5606]	GETUPVAL 	R91 U2 ; R91 := U2
	834	[5606]	GETGLOBAL	R92 K154 ; R92 := mSortRewardItems
	835	[5606]	GETTABLE 	R92 R92 R90 ; R92 := R92[R90]
	836	[5606]	CALL     	R91 2 1 ; R91(R92)
	837	[5605]	FORLOOP  	R87 833 ; R87 += R89; if R87 <= R88 then begin PC := 833; R90 := R87 end
	838	[5610]	GETGLOBAL	R91 K52 ; R91 := 0xc8802016
	839	[5610]	GETUPVAL 	R92 U18 ; R92 := U18
	840	[5610]	CALL     	R91 2 4 ; R91,R92,R93 := R91(R92)
	841	[5610]	JMP      	889 ; PC := 889
	842	[5611]	GETTABLE 	R34 R95 K94 ; R34 := R95["mItemType"]
	843	[5612]	GETGLOBAL	R96 K15 ; R96 := 0x7b998233
	844	[5612]	MOVE     	R97 R34 ; R97 := R34
	845	[5612]	CALL     	R96 2 2 ; R96 := R96(R97)
	846	[5612]	TEST     	R96 1 ; if R96 then PC := 889
	847	[5612]	JMP      	889 ; PC := 889
	848	[5612]	SELF     	R96 R34 K74 ; R97 := R34; R96 := R34[0xf2deaf69]
	849	[5612]	GETGLOBAL	R98 K108 ; R98 := gLotusArtifactUpgradeType
	850	[5612]	CALL     	R96 3 2 ; R96 := R96(R97,R98)
	851	[5612]	TEST     	R96 0 ; if not R96 then PC := 858
	852	[5612]	JMP      	858 ; PC := 858
	853	[5612]	GETUPVAL 	R96 U6 ; R96 := U6
	854	[5612]	MOVE     	R97 R34 ; R97 := R34
	855	[5612]	CALL     	R96 2 2 ; R96 := R96(R97)
	856	[5612]	TEST     	R96 1 ; if R96 then PC := 889
	857	[5612]	JMP      	889 ; PC := 889
	858	[5613]	GETUPVAL 	R96 U3 ; R96 := U3
	859	[5613]	GETTABLE 	R96 R96 K23 ; R96 := R96[0x4eec6d11]
	860	[5613]	GETGLOBAL	R97 K4 ; R97 := 0xae91e43b
	861	[5613]	GETGLOBAL	R98 K16 ; R98 := 0xb009bbc6
	862	[5613]	MOVE     	R99 R34 ; R99 := R34
	863	[5613]	CALL     	R98 2 2 ; R98 := R98(R99)
	864	[5613]	NEWTABLE 	R99 0 2 ; R99 := {}
	865	[5613]	SETTABLE 	R99 K76 R95 ; R99["ItemInfo"] := R95
	866	[5613]	SETTABLE 	R99 K19 K11 ; R99["GetVisibilityMaterial"] := true
	867	[5613]	OP_LOADBOOL	R100 1 0 ; R100 := true
	868	[5613]	CALL     	R96 5 2 ; R96 := R96(R97,R98,R99,R100)
	869	[5615]	SELF     	R97 R34 K74 ; R98 := R34; R97 := R34[0xf2deaf69]
	870	[5615]	GETUPVAL 	R99 U11 ; R99 := U11
	871	[5615]	GETTABLE 	R99 R99 K91 ; R99 := R99["Enhancement"]
	872	[5615]	CALL     	R97 3 2 ; R97 := R97(R98,R99)
	873	[5615]	TEST     	R97 0 ; if not R97 then PC := 886
	874	[5615]	JMP      	886 ; PC := 886
	875	[5616]	GETGLOBAL	R97 K92 ; R97 := 0x6c97a788
	876	[5616]	GETTABLE 	R97 R97 K93 ; R97 := R97[0x1aba4d9e]
	877	[5616]	CALL     	R97 1 2 ; R97 := R97()
	878	[5617]	SETTABLE 	R97 K94 R34 ; R97["mItemType"] := R34
	879	[5618]	GETTABLE 	R98 R97 K96 ; R98 := R97["mInstance"]
	880	[5618]	SELF     	R98 R98 K97 ; R99 := R98; R98 := R98[0x91fb01d5]
	881	[5618]	LOADK    	R100 K67 ; R100 := ""
	882	[5618]	CALL     	R98 3 2 ; R98 := R98(R99,R100)
	883	[5618]	SETTABLE 	R96 K95 R98 ; R96["ArcaneMaxRank"] := R98
	884	[5619]	SETTABLE 	R96 K98 K26 ; R96["ArcaneRank"] := 0.000000
	885	[5620]	SETTABLE 	R96 K155 R97 ; R96["Arcane"] := R97
	886	[5623]	GETUPVAL 	R98 U2 ; R98 := U2
	887	[5623]	MOVE     	R99 R96 ; R99 := R96
	888	[5623]	CALL     	R98 2 1 ; R98(R99)
	889	[5610]	TFORLOOP 	R91 2 ; R94,R95 := R91(R92,R93); if R94 ~= nil then begin PC = 842; R93 := R94 end
	890	[5624]	JMP      	842 ; PC := 842
	891	[5627]	LOADK    	R98 := 0.000000
	892	[5628]	GETGLOBAL	R99 K156 ; R99 := 0xcfc01047
	893	[5628]	GETGLOBAL	R100 K2 ; R100 := mRewards
	894	[5628]	CALL     	R99 2 4 ; R99,R100,R101 := R99(R100)
	895	[5628]	JMP      	981 ; PC := 981
	896	[5629]	SETTABLE 	R103 K157 R98 ; R103["Id"] := R98
	897	[5630]	GETTABLE 	R34 R103 K100 ; R34 := R103["Type"]
	898	[5631]	GETTABLE 	R104 R103 K27 ; R104 := R103["Credits"]
	899	[5631]	EQ       	1 R104 K13 ; if R104 == nil then PC := 903
	900	[5631]	JMP      	903 ; PC := 903
	901	[5632]	SETTABLE 	R103 K90 K158 ; R103["SortPriority"] := 24.000000
	902	[5632]	JMP      	952 ; PC := 952
	903	[5633]	GETGLOBAL	R104 K15 ; R104 := 0x7b998233
	904	[5633]	MOVE     	R105 R34 ; R105 := R34
	905	[5633]	CALL     	R104 2 2 ; R104 := R104(R105)
	906	[5633]	TEST     	R104 1 ; if R104 then PC := 952
	907	[5633]	JMP      	952 ; PC := 952
	908	[5634]	GETTABLE 	R104 R103 K90 ; R104 := R103["SortPriority"]
	909	[5634]	TEST     	R104 1 ; if R104 then PC := 914
	910	[5634]	JMP      	914 ; PC := 914
	911	[5634]	GETUPVAL 	R104 U19 ; R104 := U19
	912	[5634]	MOVE     	R105 R34 ; R105 := R34
	913	[5634]	CALL     	R104 2 2 ; R104 := R104(R105)
	914	[5634]	SETTABLE 	R103 K90 R104 ; R103["SortPriority"] := R104
	915	[5635]	SELF     	R104 R34 K74 ; R105 := R34; R104 := R34[0xf2deaf69]
	916	[5635]	GETUPVAL 	R106 U11 ; R106 := U11
	917	[5635]	GETTABLE 	R106 R106 K159 ; R106 := R106["ZarimanDogTag"]
	918	[5635]	CALL     	R104 3 2 ; R104 := R104(R105,R106)
	919	[5635]	TEST     	R104 1 ; if R104 then PC := 927
	920	[5635]	JMP      	927 ; PC := 927
	921	[5635]	SELF     	R104 R34 K74 ; R105 := R34; R104 := R34[0xf2deaf69]
	922	[5635]	GETUPVAL 	R106 U11 ; R106 := U11
	923	[5635]	GETTABLE 	R106 R106 K160 ; R106 := R106["ZarimanResourceItem"]
	924	[5635]	CALL     	R104 3 2 ; R104 := R104(R105,R106)
	925	[5635]	TEST     	R104 0 ; if not R104 then PC := 940
	926	[5635]	JMP      	940 ; PC := 940
	927	[5636]	GETGLOBAL	R104 K161 ; R104 := 0x5bced4c4
	928	[5636]	GETTABLE 	R104 R104 K162 ; R104 := R104[0x55f27c30]
	929	[5636]	GETTABLE 	R105 R103 K90 ; R105 := R103["SortPriority"]
	930	[5636]	CALL     	R104 2 2 ; R104 := R104(R105)
	931	[5636]	ADD      	R104 R104 K163 ; R104 := R104 + 0.900000
	932	[5636]	GETTABLE 	R105 R103 K152 ; R105 := R103["mRarity"]
	933	[5636]	TEST     	R105 1 ; if R105 then PC := 936
	934	[5636]	JMP      	936 ; PC := 936
	935	[5636]	LOADK    	R105 := 0.000000
	936	[5636]	MUL      	R105 R105 K164 ; R105 := R105 * 0.020000
	937	[5636]	ADD      	R104 R104 R105 ; R104 := R104 + R105
	938	[5636]	SETTABLE 	R103 K90 R104 ; R103["SortPriority"] := R104
	939	[5636]	JMP      	948 ; PC := 948
	940	[5638]	GETTABLE 	R104 R103 K90 ; R104 := R103["SortPriority"]
	941	[5638]	GETTABLE 	R105 R103 K152 ; R105 := R103["mRarity"]
	942	[5638]	TEST     	R105 1 ; if R105 then PC := 945
	943	[5638]	JMP      	945 ; PC := 945
	944	[5638]	LOADK    	R105 := 0.000000
	945	[5638]	MUL      	R105 R105 K165 ; R105 := R105 * 0.200000
	946	[5638]	ADD      	R104 R104 R105 ; R104 := R104 + R105
	947	[5638]	SETTABLE 	R103 K90 R104 ; R103["SortPriority"] := R104
	948	[5640]	GETUPVAL 	R104 U20 ; R104 := U20
	949	[5640]	MOVE     	R105 R34 ; R105 := R34
	950	[5640]	CALL     	R104 2 2 ; R104 := R104(R105)
	951	[5640]	SETTABLE 	R103 K166 R104 ; R103["Categories"] := R104
	952	[5642]	GETTABLE 	R104 R103 K166 ; R104 := R103["Categories"]
	953	[5642]	EQ       	0 R104 K13 ; if R104 ~= nil then PC := 960
	954	[5642]	JMP      	960 ; PC := 960
	955	[5643]	NEWTABLE 	R104 1 0 ; R104 := {}
	956	[5643]	GETUPVAL 	R105 U21 ; R105 := U21
	957	[5643]	GETTABLE 	R105 R105 K167 ; R105 := R105["MISC"]
	958	[5643]	SETLIST  	R104 1 1 ; R104[(1-1)*FPF+i] := R(104+i), 1 <= i <= 1
	959	[5643]	SETTABLE 	R103 K166 R104 ; R103["Categories"] := R104
	960	[5645]	SETTABLE 	R103 K168 K11 ; R103["CustomEntry"] := true
	961	[5646]	GETTABLE 	R104 R103 K3 ; R104 := R103["Name"]
	962	[5646]	SETTABLE 	R103 K169 R104 ; R103["SearchCache"] := R104
	963	[5647]	GETGLOBAL	R104 K15 ; R104 := 0x7b998233
	964	[5647]	GETTABLE 	R105 R103 K50 ; R105 := R103["StoreItem"]
	965	[5647]	CALL     	R104 2 2 ; R104 := R104(R105)
	966	[5647]	TEST     	R104 1 ; if R104 then PC := 975
	967	[5647]	JMP      	975 ; PC := 975
	968	[5648]	GETUPVAL 	R104 U3 ; R104 := U3
	969	[5648]	GETTABLE 	R104 R104 K170 ; R104 := R104[0x1ac299fb]
	970	[5648]	GETGLOBAL	R105 K4 ; R105 := 0xae91e43b
	971	[5648]	GETTABLE 	R106 R103 K50 ; R106 := R103["StoreItem"]
	972	[5648]	GETTABLE 	R107 R103 K3 ; R107 := R103["Name"]
	973	[5648]	CALL     	R104 4 2 ; R104 := R104(R105,R106,R107)
	974	[5648]	SETTABLE 	R103 K169 R104 ; R103["SearchCache"] := R104
	975	[5650]	GETGLOBAL	R104 K0 ; R104 := mRewardGrid
	976	[5650]	SELF     	R104 R104 K151 ; R105 := R104; R104 := R104[0xbad4316f]
	977	[5650]	MOVE     	R106 R103 ; R106 := R103
	978	[5650]	OP_LOADBOOL	R107 1 0 ; R107 := true
	979	[5650]	CALL     	R104 4 1 ; R104(R105,R106,R107)
	980	[5651]	ADD      	R98 R98 K34 ; R98 := R98 + 1.000000
	981	[5628]	TFORLOOP 	R99 2 ; R102,R103 := R99(R100,R101); if R102 ~= nil then begin PC = 896; R101 := R102 end
	982	[5651]	JMP      	896 ; PC := 896
	983	[5655]	GETUPVAL 	R104 U22 ; R104 := U22
	984	[5655]	CALL     	R104 1 1 ; R104()
	985	[5657]	GETGLOBAL	R104 K0 ; R104 := mRewardGrid
	986	[5657]	SELF     	R104 R104 K171 ; R105 := R104; R104 := R104[0x71e9ac81]
	987	[5657]	LOADNIL  	R106 R106 ; R106 := nil
	988	[5657]	OP_LOADBOOL	R107 1 0 ; R107 := true
	989	[5657]	OP_LOADBOOL	R108 1 0 ; R108 := true
	990	[5657]	CALL     	R104 5 1 ; R104(R105,R106,R107,R108)
	991	[5659]	GETGLOBAL	R104 K0 ; R104 := mRewardGrid
	992	[5659]	SELF     	R104 R104 K172 ; R105 := R104; R104 := R104[0x5fbddc1a]
	993	[5659]	CALL     	R104 2 2 ; R104 := R104(R105)
	994	[5661]	LT       	0 K26 R104 ; if 0.000000 >= R104 then PC := 1000
	995	[5661]	JMP      	1000 ; PC := 1000
	996	[5662]	GETGLOBAL	R105 K0 ; R105 := mRewardGrid
	997	[5662]	SELF     	R105 R105 K173 ; R106 := R105; R105 := R105[0x070daa5a]
	998	[5662]	LOADK    	R107 := 1.000000
	999	[5662]	CALL     	R105 3 1 ; R105(R106,R107)
	1000	[5664]	RETURN   	R0 1 ; return 

function #129 <?:5666,5709> (63 instructions, 252 bytes at 0000016099F2B200)
0 params, 8 slots, 5 upvalues, 0 locals, 24 constants, 3 functions
	1	[5667]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[5667]	LOADK    	R1 K1 ; R1 := "EE.Interface.Components.List"
	3	[5667]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5668]	GETTABLE 	R1 R0 K3 ; R1 := R0[0x9383bc56]
	5	[5668]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	6	[5668]	LOADK    	R3 K5 ; R3 := "ExpandableArea.PlayerInfo.PlayerStats.Stat"
	7	[5668]	GETUPVAL 	R4 U0 ; R4 := U0
	8	[5668]	GETTABLE 	R4 R4 K6 ; R4 := R4[0x06d055f9]
	9	[5668]	GETUPVAL 	R5 U1 ; R5 := U1
	10	[5668]	CALL     	R5 1 2 ; R5 := R5()
	11	[5668]	LOADK    	R6 := 5.000000
	12	[5668]	LOADK    	R7 := 7.000000
	13	[5668]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	14	[5668]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	15	[5668]	SETGLOBALHASH	R1 K2 ; mStatsGrid := R1
	16	[5669]	GETGLOBAL	R1 K2 ; R1 := mStatsGrid
	17	[5669]	SETTABLE 	R1 K7 K8 ; R1["mHideExtraClips"] := true
	18	[5670]	GETGLOBAL	R1 K2 ; R1 := mStatsGrid
	19	[5670]	SETTABLE 	R1 K9 K10 ; R1["mForcedVerticalSeparation"] := 49.000000
	20	[5671]	GETGLOBAL	R1 K2 ; R1 := mStatsGrid
	21	[5671]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x3bc79f4f]
	22	[5671]	LOADK    	R3 K12 ; R3 := "ExpandableArea.PlayerInfo.PlayerStats.ScrollBar"
	23	[5671]	LOADK    	R4 := 3.000000
	24	[5671]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	25	[5672]	GETGLOBAL	R1 K2 ; R1 := mStatsGrid
	26	[5672]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x7220acb6]
	27	[5672]	CALL     	R1 2 1 ; R1(R2)
	28	[5674]	GETGLOBAL	R1 K2 ; R1 := mStatsGrid
	29	[5692]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	30	[5692]	SETTABLE 	R1 K14 R2 ; R1["mClipCreatedCallback"] := R2
	31	[5693]	GETGLOBAL	R1 K2 ; R1 := mStatsGrid
	32	[5693]	GETUPVAL 	R2 U2 ; R2 := U2
	33	[5693]	SETTABLE 	R1 K15 R2 ; R1["mElementDrawCallback"] := R2
	34	[5694]	GETGLOBAL	R1 K2 ; R1 := mStatsGrid
	35	[5696]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	36	[5696]	SETTABLE 	R1 K16 R2 ; R1["mOnFocusedCallback"] := R2
	37	[5697]	GETGLOBAL	R1 K2 ; R1 := mStatsGrid
	38	[5699]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	39	[5699]	SETTABLE 	R1 K17 R2 ; R1["mOnUnfocusedCallback"] := R2
	40	[5701]	GETGLOBAL	R1 K18 ; R1 := 0x7b998233
	41	[5701]	GETGLOBAL	R2 K19 ; R2 := 0xbe190284
	42	[5701]	CALL     	R1 2 2 ; R1 := R1(R2)
	43	[5701]	TEST     	R1 1 ; if R1 then PC := 63
	44	[5701]	JMP      	63 ; PC := 63
	45	[5702]	GETGLOBAL	R1 K19 ; R1 := 0xbe190284
	46	[5702]	SELF     	R1 R1 K20 ; R2 := R1; R1 := R1[0xf2deaf69]
	47	[5702]	GETGLOBAL	R3 K21 ; R3 := gLotusGameRulesType
	48	[5702]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	49	[5702]	TEST     	R1 0 ; if not R1 then PC := 56
	50	[5702]	JMP      	56 ; PC := 56
	51	[5703]	GETGLOBAL	R1 K19 ; R1 := 0xbe190284
	52	[5703]	SELF     	R1 R1 K22 ; R2 := R1; R1 := R1[0x9fad7d24]
	53	[5703]	CALL     	R1 2 2 ; R1 := R1(R2)
	54	[5703]	SETUPVAL 	R1 U3 ; U3 := R1
	55	[5703]	JMP      	60 ; PC := 60
	56	[5705]	GETGLOBAL	R1 K19 ; R1 := 0xbe190284
	57	[5705]	SELF     	R1 R1 K23 ; R2 := R1; R1 := R1[0x8dc40238]
	58	[5705]	CALL     	R1 2 2 ; R1 := R1(R2)
	59	[5705]	SETUPVAL 	R1 U3 ; U3 := R1
	60	[5707]	GETUPVAL 	R1 U4 ; R1 := U4
	61	[5707]	GETUPVAL 	R2 U3 ; R2 := U3
	62	[5707]	CALL     	R1 2 1 ; R1(R2)
	63	[5709]	RETURN   	R0 1 ; return 

function #130 <?:5713,5717> (22 instructions, 88 bytes at 0000016091FC3660)
0 params, 5 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[5714]	GETGLOBAL	R0 K0 ; R0 := mPanelStartY
	2	[5714]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	3	[5714]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x91a24e4b]
	4	[5714]	LOADK    	R3 K4 ; R3 := "ExpandableArea.Progression.Affinity"
	5	[5714]	LOADK    	R4 := 1.000000
	6	[5714]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	7	[5714]	SETTABLE 	R0 K1 R1 ; R0["Affinity"] := R1
	8	[5715]	GETGLOBAL	R0 K0 ; R0 := mPanelStartY
	9	[5715]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	10	[5715]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x91a24e4b]
	11	[5715]	LOADK    	R3 K6 ; R3 := "ExpandableArea.Progression.Rewards"
	12	[5715]	LOADK    	R4 := 1.000000
	13	[5715]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	14	[5715]	SETTABLE 	R0 K5 R1 ; R0["Rewards"] := R1
	15	[5716]	GETGLOBAL	R0 K0 ; R0 := mPanelStartY
	16	[5716]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	17	[5716]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x91a24e4b]
	18	[5716]	LOADK    	R3 K8 ; R3 := "TopAnchor.Header"
	19	[5716]	LOADK    	R4 := 1.000000
	20	[5716]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	21	[5716]	SETTABLE 	R0 K7 R1 ; R0["Title"] := R1
	22	[5717]	RETURN   	R0 1 ; return 

function #131 <?:5720,5723> (8 instructions, 32 bytes at 0000016091FC3870)
2 params, 4 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5721]	GETGLOBAL	R2 K0 ; R2 := 0x0032441c
	2	[5721]	SETTABLE 	R2 K1 K2 ; R2["EndOfMatch_didActuallySetupStuff"] := true
	3	[5722]	GETGLOBAL	R2 K0 ; R2 := 0x0032441c
	4	[5722]	TESTSET  	R3 R0 0 ; if not R0 then PC := 7 else R3 := R0 
	5	[5722]	JMP      	7 ; PC := 7
	6	[5722]	MOVE     	R3 R1 ; R3 := R1
	7	[5722]	SETTABLE 	R2 K3 R3 ; R2["EndOfMatch_abortingAndWasDoingPvpChallenge"] := R3
	8	[5723]	RETURN   	R0 1 ; return 

function #132 <?:5725,5763> (98 instructions, 392 bytes at 0000016091FC3A60)
0 params, 8 slots, 2 upvalues, 0 locals, 30 constants, 0 functions
	1	[5726]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	2	[5726]	LOADK    	R1 K1 ; R1 := "ReturnedToShip"
	3	[5726]	CALL     	R0 2 1 ; R0(R1)
	4	[5727]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[5727]	TEST     	R0 0 ; if not R0 then PC := 11
	6	[5727]	JMP      	11 ; PC := 11
	7	[5728]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	8	[5728]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x32302b4a]
	9	[5728]	CALL     	R0 2 1 ; R0(R1)
	10	[5729]	RETURN   	R0 1 ; return 
	11	[5732]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	12	[5732]	LOADK    	R1 K1 ; R1 := "ReturnedToShip"
	13	[5732]	CALL     	R0 2 1 ; R0(R1)
	14	[5734]	OP_LOADBOOL	R0 0 0 ; R0 := false
	15	[5734]	SETGLOBALHASH	R0 K4 ; mShouldClose := R0
	16	[5735]	OP_LOADBOOL	R0 0 0 ; R0 := false
	17	[5735]	SETGLOBALHASH	R0 K5 ; mWaitingForDbUpdate := R0
	18	[5736]	OP_LOADBOOL	R0 0 0 ; R0 := false
	19	[5736]	SETGLOBALHASH	R0 K6 ; mInputBlocked := R0
	20	[5738]	GETGLOBAL	R0 K7 ; R0 := mWaitingForMissionComplete
	21	[5738]	TEST     	R0 1 ; if R0 then PC := 27
	22	[5738]	JMP      	27 ; PC := 27
	23	[5739]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	24	[5739]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0xbed40e9c]
	25	[5739]	OP_LOADBOOL	R2 0 0 ; R2 := false
	26	[5739]	CALL     	R0 3 1 ; R0(R1,R2)
	27	[5742]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	28	[5742]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0x5f56eeab]
	29	[5742]	LOADK    	R2 K10 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconLabel"
	30	[5742]	LOADK    	R3 := 29.000000
	31	[5742]	GETGLOBAL	R4 K2 ; R4 := 0xae91e43b
	32	[5742]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0x42b04007]
	33	[5742]	LOADK    	R6 K12 ; R6 := "<PREVIEW>"
	34	[5742]	OP_LOADBOOL	R7 1 0 ; R7 := true
	35	[5742]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	36	[5742]	CALL     	R0 0 1 ; R0(R1,...)
	37	[5743]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	38	[5743]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0x67bc869f]
	39	[5743]	LOADK    	R2 K10 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconLabel"
	40	[5743]	LOADK    	R3 := 10.000000
	41	[5743]	LOADK    	R4 := 60.000000
	42	[5743]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	43	[5744]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	44	[5744]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0x67bc869f]
	45	[5744]	LOADK    	R2 K14 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconBacker"
	46	[5744]	LOADK    	R3 := 10.000000
	47	[5744]	GETGLOBAL	R4 K15 ; R4 := BACKER_ALPHA
	48	[5744]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	49	[5745]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	50	[5745]	SELF     	R0 R0 K16 ; R1 := R0; R0 := R0[0xaade900e]
	51	[5745]	LOADK    	R2 K17 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn"
	52	[5745]	LOADK    	R3 := 11.000000
	53	[5745]	OP_LOADBOOL	R4 1 0 ; R4 := true
	54	[5745]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	55	[5747]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	56	[5747]	SELF     	R0 R0 K18 ; R1 := R0; R0 := R0[0x78f32995]
	57	[5747]	OP_LOADBOOL	R2 0 0 ; R2 := false
	58	[5747]	CALL     	R0 3 1 ; R0(R1,R2)
	59	[5748]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	60	[5748]	SELF     	R0 R0 K19 ; R1 := R0; R0 := R0[0x85b5d288]
	61	[5748]	GETGLOBAL	R2 K20 ; R2 := _T
	62	[5748]	GETTABLE 	R2 R2 K21 ; R2 := R2["LoadingMissionKey"]
	63	[5748]	NOT      	R2 R2 ; R2 := not R2
	64	[5748]	CALL     	R0 3 1 ; R0(R1,R2)
	65	[5749]	GETGLOBAL	R0 K22 ; R0 := 0x7b998233
	66	[5749]	GETGLOBAL	R1 K23 ; R1 := mPvpMovie
	67	[5749]	CALL     	R0 2 2 ; R0 := R0(R1)
	68	[5749]	TEST     	R0 1 ; if R0 then PC := 78
	69	[5749]	JMP      	78 ; PC := 78
	70	[5750]	GETGLOBAL	R0 K23 ; R0 := mPvpMovie
	71	[5750]	SELF     	R0 R0 K18 ; R1 := R0; R0 := R0[0x78f32995]
	72	[5750]	OP_LOADBOOL	R2 0 0 ; R2 := false
	73	[5750]	CALL     	R0 3 1 ; R0(R1,R2)
	74	[5751]	GETGLOBAL	R0 K23 ; R0 := mPvpMovie
	75	[5751]	SELF     	R0 R0 K19 ; R1 := R0; R0 := R0[0x85b5d288]
	76	[5751]	OP_LOADBOOL	R2 1 0 ; R2 := true
	77	[5751]	CALL     	R0 3 1 ; R0(R1,R2)
	78	[5753]	LOADK    	R0 := -1.000000
	79	[5753]	SETGLOBALHASH	R0 K24 ; mReturningToLobbyTime := R0
	80	[5755]	OP_LOADBOOL	R0 0 0 ; R0 := false
	81	[5755]	SETGLOBALHASH	R0 K25 ; mWaitingForReturnToShip := R0
	82	[5757]	GETUPVAL 	R0 U1 ; R0 := U1
	83	[5757]	OP_LOADBOOL	R1 1 0 ; R1 := true
	84	[5757]	CALL     	R0 2 1 ; R0(R1)
	85	[5759]	GETGLOBAL	R0 K26 ; R0 := mCurrentScreenType
	86	[5759]	GETGLOBAL	R1 K27 ; R1 := ScreenType
	87	[5759]	GETTABLE 	R1 R1 K28 ; R1 := R1["SCOREBOARD"]
	88	[5759]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 91
	89	[5759]	JMP      	91 ; PC := 91
	90	[5759]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 91
	91	[5759]	OP_LOADBOOL	R0 1 0 ; R0 := true
	92	[5760]	TEST     	R0 1 ; if R0 then PC := 98
	93	[5760]	JMP      	98 ; PC := 98
	94	[5761]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	95	[5761]	SELF     	R1 R1 K29 ; R2 := R1; R1 := R1[0xbc838db9]
	96	[5761]	OP_LOADBOOL	R3 0 0 ; R3 := false
	97	[5761]	CALL     	R1 3 1 ; R1(R2,R3)
	98	[5763]	RETURN   	R0 1 ; return 

function #133 <?:5765,5776> (25 instructions, 100 bytes at 0000016091FC4060)
0 params, 3 slots, 7 upvalues, 0 locals, 7 constants, 0 functions
	1	[5766]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[5766]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5766]	GETTABLE 	R1 R1 K2 ; R1 := R1["ACTUAL_EOM"]
	4	[5766]	SETTABLE 	R0 K1 R1 ; R0["eomScreenMode"] := R1
	5	[5767]	OP_LOADBOOL	R0 1 0 ; R0 := true
	6	[5767]	SETUPVAL 	R0 U1 ; U1 := R0
	7	[5768]	OP_LOADBOOL	R0 0 0 ; R0 := false
	8	[5768]	SETUPVAL 	R0 U2 ; U2 := R0
	9	[5769]	GETGLOBAL	R0 K3 ; R0 := mAutoCloseDelay
	10	[5769]	LT       	0 K4 R0 ; if 0.000000 >= R0 then PC := 17
	11	[5769]	JMP      	17 ; PC := 17
	12	[5770]	LOADK    	R0 := -1.000000
	13	[5770]	SETGLOBALHASH	R0 K3 ; mAutoCloseDelay := R0
	14	[5771]	GETUPVAL 	R0 U3 ; R0 := U3
	15	[5771]	GETUPVAL 	R1 U4 ; R1 := U4
	16	[5771]	CALL     	R0 2 1 ; R0(R1)
	17	[5773]	GETUPVAL 	R0 U5 ; R0 := U5
	18	[5773]	CALL     	R0 1 1 ; R0()
	19	[5774]	GETGLOBAL	R0 K5 ; R0 := 0xae91e43b
	20	[5774]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xbc838db9]
	21	[5774]	OP_LOADBOOL	R2 1 0 ; R2 := true
	22	[5774]	CALL     	R0 3 1 ; R0(R1,R2)
	23	[5775]	GETUPVAL 	R0 U6 ; R0 := U6
	24	[5775]	CALL     	R0 1 1 ; R0()
	25	[5776]	RETURN   	R0 1 ; return 

function #134 <?:5778,5788> (38 instructions, 152 bytes at 0000016091FC4270)
0 params, 8 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[5779]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[5779]	LOADK    	R1 K1 ; R1 := "EE.Interface.AnchorMgr"
	3	[5779]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5780]	GETTABLE 	R1 R0 K3 ; R1 := R0[0xae6791ba]
	5	[5780]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	6	[5780]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5780]	SETGLOBALHASH	R1 K2 ; mAnchorMgr := R1
	8	[5781]	GETGLOBAL	R1 K2 ; R1 := mAnchorMgr
	9	[5781]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x20ff29f7]
	10	[5781]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	11	[5781]	LOADK    	R4 K6 ; R4 := "TopAnchor"
	12	[5781]	NEWTABLE 	R5 2 0 ; R5 := {}
	13	[5781]	GETGLOBAL	R6 K2 ; R6 := mAnchorMgr
	14	[5781]	GETTABLE 	R6 R6 K7 ; R6 := R6["ANCHOR_H_CENTRE"]
	15	[5781]	GETGLOBAL	R7 K2 ; R7 := mAnchorMgr
	16	[5781]	GETTABLE 	R7 R7 K8 ; R7 := R7["ANCHOR_V_TOP"]
	17	[5781]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	18	[5781]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	19	[5782]	GETGLOBAL	R1 K2 ; R1 := mAnchorMgr
	20	[5782]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x20ff29f7]
	21	[5782]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	22	[5782]	LOADK    	R4 K9 ; R4 := "BottomAnchor"
	23	[5782]	NEWTABLE 	R5 2 0 ; R5 := {}
	24	[5782]	GETGLOBAL	R6 K2 ; R6 := mAnchorMgr
	25	[5782]	GETTABLE 	R6 R6 K7 ; R6 := R6["ANCHOR_H_CENTRE"]
	26	[5782]	GETGLOBAL	R7 K2 ; R7 := mAnchorMgr
	27	[5782]	GETTABLE 	R7 R7 K10 ; R7 := R7["ANCHOR_V_BOTTOM"]
	28	[5782]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	29	[5782]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	30	[5784]	GETUPVAL 	R1 U0 ; R1 := U0
	31	[5784]	CALL     	R1 1 1 ; R1()
	32	[5786]	GETGLOBAL	R1 K0 ; R1 := 0x2d0fad09
	33	[5786]	LOADK    	R2 K11 ; R2 := "Lotus.Interface.Libs.TimerMgr"
	34	[5786]	CALL     	R1 2 2 ; R1 := R1(R2)
	35	[5787]	GETTABLE 	R2 R1 K13 ; R2 := R1[0xde474187]
	36	[5787]	CALL     	R2 1 2 ; R2 := R2()
	37	[5787]	SETGLOBALHASH	R2 K12 ; mTimerMgr := R2
	38	[5788]	RETURN   	R0 1 ; return 

function #135 <?:5790,5796> (15 instructions, 60 bytes at 0000016091FC4590)
1 param, 6 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[5791]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5791]	GETGLOBAL	R2 K1 ; R2 := mPvpMovie
	3	[5791]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5791]	TEST     	R1 1 ; if R1 then PC := 13
	5	[5791]	JMP      	13 ; PC := 13
	6	[5792]	GETGLOBAL	R1 K1 ; R1 := mPvpMovie
	7	[5792]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xe4162eed]
	8	[5792]	LOADK    	R3 K3 ; R3 := "EaseInComplete"
	9	[5792]	GETGLOBAL	R4 K4 ; R4 := 0x64fb1586
	10	[5792]	NOT      	R5 R0 ; R5 := not R0
	11	[5792]	CALL     	R4 2 0 ; R4,... := R4(R5)
	12	[5792]	CALL     	R1 0 1 ; R1(R2,...)
	13	[5794]	OP_LOADBOOL	R1 0 0 ; R1 := false
	14	[5794]	SETGLOBALHASH	R1 K5 ; mInputBlocked := R1
	15	[5796]	RETURN   	R0 1 ; return 

function #136 <?:5798,5967> (460 instructions, 1840 bytes at 0000016091FC4770)
2 params, 15 slots, 25 upvalues, 0 locals, 77 constants, 0 functions
	1	[5799]	TEST     	R0 0 ; if not R0 then PC := 319
	2	[5799]	JMP      	319 ; PC := 319
	3	[5800]	GETGLOBAL	R2 K0 ; R2 := 0x0032441c
	4	[5800]	SETTABLE 	R2 K1 K2 ; R2["LastMissionKuva"] := nil
	5	[5802]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	6	[5802]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	7	[5802]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[5802]	TEST     	R2 1 ; if R2 then PC := 26
	9	[5802]	JMP      	26 ; PC := 26
	10	[5802]	GETGLOBAL	R2 K5 ; R2 := 0x89326c93
	11	[5802]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x18d05d30]
	12	[5802]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[5802]	TEST     	R2 1 ; if R2 then PC := 26
	14	[5802]	JMP      	26 ; PC := 26
	15	[5802]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	16	[5802]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x0eb34c69]
	17	[5802]	GETGLOBAL	R4 K8 ; R4 := 0x0469f296
	18	[5802]	LOADK    	R5 K9 ; R5 := "RJMissionAborted"
	19	[5802]	CALL     	R4 2 2 ; R4 := R4(R5)
	20	[5802]	LOADK    	R5 := 0.000000
	21	[5802]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	22	[5802]	EQ       	0 R2 K10 ; if R2 ~= 1.000000 then PC := 26
	23	[5802]	JMP      	26 ; PC := 26
	24	[5803]	GETGLOBAL	R2 K11 ; R2 := _T
	25	[5803]	SETTABLE 	R2 K12 K13 ; R2["AbortedRailjackMission"] := true
	26	[5806]	OP_LOADBOOL	R2 0 0 ; R2 := false
	27	[5807]	GETGLOBAL	R3 K11 ; R3 := _T
	28	[5807]	GETTABLE 	R3 R3 K12 ; R3 := R3["AbortedRailjackMission"]
	29	[5807]	TEST     	R3 0 ; if not R3 then PC := 55
	30	[5807]	JMP      	55 ; PC := 55
	31	[5808]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	32	[5808]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0x3790d299]
	33	[5808]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[5808]	TEST     	R3 1 ; if R3 then PC := 53
	35	[5808]	JMP      	53 ; PC := 53
	36	[5808]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	37	[5808]	SELF     	R3 R3 K7 ; R4 := R3; R3 := R3[0x0eb34c69]
	38	[5808]	GETGLOBAL	R5 K8 ; R5 := 0x0469f296
	39	[5808]	LOADK    	R6 K15 ; R6 := "RJMissionComplete"
	40	[5808]	CALL     	R5 2 2 ; R5 := R5(R6)
	41	[5808]	LOADK    	R6 := 0.000000
	42	[5808]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	43	[5808]	LT       	0 R3 K10 ; if R3 >= 1.000000 then PC := 53
	44	[5808]	JMP      	53 ; PC := 53
	45	[5808]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	46	[5808]	SELF     	R3 R3 K16 ; R4 := R3; R3 := R3[0xef893aec]
	47	[5808]	CALL     	R3 2 2 ; R3 := R3(R4)
	48	[5808]	GETTABLE 	R3 R3 K17 ; R3 := R3["location"]
	49	[5808]	GETUPVAL 	R4 U0 ; R4 := U0
	50	[5808]	GETTABLE 	R4 R4 K18 ; R4 := R4["FREE_FLIGHT_NODE"]
	51	[5808]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 54
	52	[5808]	JMP      	54 ; PC := 54
	53	[5808]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 54
	54	[5808]	OP_LOADBOOL	R2 1 0 ; R2 := true
	55	[5811]	OP_LOADBOOL	R3 0 0 ; R3 := false
	56	[5812]	GETGLOBAL	R4 K3 ; R4 := 0x7b998233
	57	[5812]	GETGLOBAL	R5 K4 ; R5 := 0xbe190284
	58	[5812]	CALL     	R4 2 2 ; R4 := R4(R5)
	59	[5812]	TEST     	R4 1 ; if R4 then PC := 91
	60	[5812]	JMP      	91 ; PC := 91
	61	[5812]	TEST     	R1 0 ; if not R1 then PC := 91
	62	[5812]	JMP      	91 ; PC := 91
	63	[5813]	GETGLOBAL	R4 K4 ; R4 := 0xbe190284
	64	[5813]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0xef893aec]
	65	[5813]	CALL     	R4 2 2 ; R4 := R4(R5)
	66	[5813]	GETTABLE 	R4 R4 K19 ; R4 := R4["levelOverride"]
	67	[5814]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	68	[5814]	MOVE     	R6 R4 ; R6 := R4
	69	[5814]	CALL     	R5 2 2 ; R5 := R5(R6)
	70	[5814]	TEST     	R5 1 ; if R5 then PC := 91
	71	[5814]	JMP      	91 ; PC := 91
	72	[5814]	GETGLOBAL	R5 K20 ; R5 := 0x7f5022cf
	73	[5814]	GETTABLE 	R5 R5 K21 ; R5 := R5[0xa5c556b9]
	74	[5814]	GETGLOBAL	R6 K22 ; R6 := 0x64fb1586
	75	[5814]	SELF     	R7 R4 K23 ; R8 := R4; R7 := R4[0xed4e0128]
	76	[5814]	CALL     	R7 2 0 ; R7,... := R7(R8)
	77	[5814]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	78	[5814]	LOADK    	R7 K24 ; R7 := "Zariman"
	79	[5814]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	80	[5814]	EQ       	1 R5 K2 ; if R5 == nil then PC := 91
	81	[5814]	JMP      	91 ; PC := 91
	82	[5815]	GETGLOBAL	R5 K4 ; R5 := 0xbe190284
	83	[5815]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x0eb34c69]
	84	[5815]	GETUPVAL 	R7 U0 ; R7 := U0
	85	[5815]	GETTABLE 	R7 R7 K25 ; R7 := R7["NV_MISSION_SUCCESS"]
	86	[5815]	LOADK    	R8 := 0.000000
	87	[5815]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	88	[5816]	EQ       	0 R5 K26 ; if R5 ~= 0.000000 then PC := 91
	89	[5816]	JMP      	91 ; PC := 91
	90	[5817]	OP_LOADBOOL	R3 1 0 ; R3 := true
	91	[5822]	GETGLOBAL	R6 K3 ; R6 := 0x7b998233
	92	[5822]	GETGLOBAL	R7 K4 ; R7 := 0xbe190284
	93	[5822]	CALL     	R6 2 2 ; R6 := R6(R7)
	94	[5822]	TEST     	R6 1 ; if R6 then PC := 104
	95	[5822]	JMP      	104 ; PC := 104
	96	[5822]	GETGLOBAL	R6 K4 ; R6 := 0xbe190284
	97	[5822]	SELF     	R6 R6 K28 ; R7 := R6; R6 := R6[0x5d204145]
	98	[5822]	CALL     	R6 2 2 ; R6 := R6(R7)
	99	[5822]	TEST     	R6 1 ; if R6 then PC := 104
	100	[5822]	JMP      	104 ; PC := 104
	101	[5822]	TESTSET  	R6 R2 1 ; if R2 then PC := 104 else R6 := R2 
	102	[5822]	JMP      	104 ; PC := 104
	103	[5822]	MOVE     	R6 R3 ; R6 := R3
	104	[5822]	SETGLOBALHASH	R6 K27 ; mMissionFailed := R6
	105	[5823]	GETGLOBAL	R6 K27 ; R6 := mMissionFailed
	106	[5823]	TEST     	R6 0 ; if not R6 then PC := 117
	107	[5823]	JMP      	117 ; PC := 117
	108	[5824]	GETGLOBAL	R6 K29 ; R6 := 0x3d106989
	109	[5824]	LOADK    	R7 K30 ; R7 := "Mission Failed"
	110	[5824]	CALL     	R6 2 1 ; R6(R7)
	111	[5825]	GETUPVAL 	R6 U1 ; R6 := U1
	112	[5825]	TEST     	R6 0 ; if not R6 then PC := 120
	113	[5825]	JMP      	120 ; PC := 120
	114	[5826]	OP_LOADBOOL	R6 0 0 ; R6 := false
	115	[5826]	SETUPVAL 	R6 U1 ; U1 := R6
	116	[5827]	JMP      	120 ; PC := 120
	117	[5829]	GETGLOBAL	R6 K29 ; R6 := 0x3d106989
	118	[5829]	LOADK    	R7 K31 ; R7 := "Mission Succeeded"
	119	[5829]	CALL     	R6 2 1 ; R6(R7)
	120	[5831]	TEST     	R1 0 ; if not R1 then PC := 226
	121	[5831]	JMP      	226 ; PC := 226
	122	[5831]	GETGLOBAL	R6 K3 ; R6 := 0x7b998233
	123	[5831]	GETGLOBAL	R7 K4 ; R7 := 0xbe190284
	124	[5831]	CALL     	R6 2 2 ; R6 := R6(R7)
	125	[5831]	TEST     	R6 1 ; if R6 then PC := 226
	126	[5831]	JMP      	226 ; PC := 226
	127	[5831]	GETGLOBAL	R6 K4 ; R6 := 0xbe190284
	128	[5831]	SELF     	R6 R6 K32 ; R7 := R6; R6 := R6[0x5c390f04]
	129	[5831]	CALL     	R6 2 2 ; R6 := R6(R7)
	130	[5831]	EQ       	1 R6 K34 ; if R6 == 23.000000 then PC := 226
	131	[5831]	JMP      	226 ; PC := 226
	132	[5832]	GETGLOBAL	R6 K27 ; R6 := mMissionFailed
	133	[5832]	TEST     	R6 1 ; if R6 then PC := 191
	134	[5832]	JMP      	191 ; PC := 191
	135	[5833]	GETUPVAL 	R6 U2 ; R6 := U2
	136	[5833]	GETGLOBAL	R7 K4 ; R7 := 0xbe190284
	137	[5833]	SELF     	R7 R7 K7 ; R8 := R7; R7 := R7[0x0eb34c69]
	138	[5833]	GETUPVAL 	R9 U0 ; R9 := U0
	139	[5833]	GETTABLE 	R9 R9 K36 ; R9 := R9["FACTION_HUNTER_SPAWNED"]
	140	[5833]	LOADK    	R10 := 999.000000
	141	[5833]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	142	[5833]	SETTABLE 	R6 K35 R7 ; R6["FactionHunterSpawned"] := R7
	143	[5834]	GETUPVAL 	R6 U2 ; R6 := U2
	144	[5834]	GETTABLE 	R6 R6 K35 ; R6 := R6["FactionHunterSpawned"]
	145	[5834]	EQ       	0 R6 K26 ; if R6 ~= 0.000000 then PC := 155
	146	[5834]	JMP      	155 ; PC := 155
	147	[5835]	GETUPVAL 	R6 U2 ; R6 := U2
	148	[5835]	GETGLOBAL	R7 K4 ; R7 := 0xbe190284
	149	[5835]	SELF     	R7 R7 K7 ; R8 := R7; R7 := R7[0x0eb34c69]
	150	[5835]	GETUPVAL 	R9 U0 ; R9 := U0
	151	[5835]	GETTABLE 	R9 R9 K38 ; R9 := R9["NUM_DEATH_SQUAD_VICTIMS"]
	152	[5835]	LOADK    	R10 := 0.000000
	153	[5835]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	154	[5835]	SETTABLE 	R6 K37 R7 ; R6["NumDeathSquadVictims"] := R7
	155	[5837]	GETUPVAL 	R6 U2 ; R6 := U2
	156	[5837]	GETGLOBAL	R7 K4 ; R7 := 0xbe190284
	157	[5837]	SELF     	R7 R7 K7 ; R8 := R7; R7 := R7[0x0eb34c69]
	158	[5837]	GETGLOBAL	R9 K8 ; R9 := 0x0469f296
	159	[5837]	LOADK    	R10 K40 ; R10 := "ExterminateMid"
	160	[5837]	CALL     	R9 2 2 ; R9 := R9(R10)
	161	[5837]	LOADK    	R10 K41 ; R10 := 9999.000000
	162	[5837]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	163	[5837]	SETTABLE 	R6 K39 R7 ; R6["ExterminateMidCout"] := R7
	164	[5838]	GETUPVAL 	R6 U2 ; R6 := U2
	165	[5838]	GETGLOBAL	R7 K4 ; R7 := 0xbe190284
	166	[5838]	SELF     	R7 R7 K32 ; R8 := R7; R7 := R7[0x5c390f04]
	167	[5838]	CALL     	R7 2 2 ; R7 := R7(R8)
	168	[5838]	SETTABLE 	R6 K42 R7 ; R6["MissionType"] := R7
	169	[5839]	GETGLOBAL	R6 K43 ; R6 := mTimerMgr
	170	[5839]	SELF     	R6 R6 K44 ; R7 := R6; R6 := R6[0xbd2e96ea]
	171	[5839]	LOADK    	R8 := 2.000000
	172	[5839]	GETUPVAL 	R9 U3 ; R9 := U3
	173	[5839]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	174	[5840]	GETUPVAL 	R6 U1 ; R6 := U1
	175	[5840]	TEST     	R6 1 ; if R6 then PC := 195
	176	[5840]	JMP      	195 ; PC := 195
	177	[5841]	GETUPVAL 	R6 U4 ; R6 := U4
	178	[5841]	GETTABLE 	R6 R6 K45 ; R6 := R6["isPvp"]
	179	[5841]	TEST     	R6 1 ; if R6 then PC := 186
	180	[5841]	JMP      	186 ; PC := 186
	181	[5842]	GETUPVAL 	R6 U5 ; R6 := U5
	182	[5842]	GETTABLE 	R6 R6 K46 ; R6 := R6[0x659d451f]
	183	[5842]	GETGLOBAL	R7 K47 ; R7 := 0xb9ae96ba
	184	[5842]	CALL     	R6 2 1 ; R6(R7)
	185	[5842]	JMP      	195 ; PC := 195
	186	[5844]	GETUPVAL 	R6 U5 ; R6 := U5
	187	[5844]	GETTABLE 	R6 R6 K46 ; R6 := R6[0x659d451f]
	188	[5844]	GETGLOBAL	R7 K48 ; R7 := 0x47615218
	189	[5844]	CALL     	R6 2 1 ; R6(R7)
	190	[5846]	JMP      	195 ; PC := 195
	191	[5848]	GETUPVAL 	R6 U5 ; R6 := U5
	192	[5848]	GETTABLE 	R6 R6 K46 ; R6 := R6[0x659d451f]
	193	[5848]	GETGLOBAL	R7 K49 ; R7 := 0xb64f5c91
	194	[5848]	CALL     	R6 2 1 ; R6(R7)
	195	[5852]	GETUPVAL 	R6 U4 ; R6 := U4
	196	[5852]	GETTABLE 	R6 R6 K45 ; R6 := R6["isPvp"]
	197	[5852]	TEST     	R6 1 ; if R6 then PC := 226
	198	[5852]	JMP      	226 ; PC := 226
	199	[5853]	GETGLOBAL	R6 K27 ; R6 := mMissionFailed
	200	[5853]	TEST     	R6 0 ; if not R6 then PC := 207
	201	[5853]	JMP      	207 ; PC := 207
	202	[5854]	GETUPVAL 	R6 U5 ; R6 := U5
	203	[5854]	GETTABLE 	R6 R6 K46 ; R6 := R6[0x659d451f]
	204	[5854]	GETGLOBAL	R7 K50 ; R7 := 0xf21adb2a
	205	[5854]	CALL     	R6 2 1 ; R6(R7)
	206	[5854]	JMP      	226 ; PC := 226
	207	[5856]	GETUPVAL 	R6 U6 ; R6 := U6
	208	[5856]	CALL     	R6 1 2 ; R6 := R6()
	209	[5856]	TEST     	R6 0 ; if not R6 then PC := 219
	210	[5856]	JMP      	219 ; PC := 219
	211	[5857]	GETGLOBAL	R6 K4 ; R6 := 0xbe190284
	212	[5857]	SELF     	R6 R6 K51 ; R7 := R6; R6 := R6[0x8e07e77f]
	213	[5857]	GETGLOBAL	R8 K52 ; R8 := 0x861db57d
	214	[5857]	SELF     	R8 R8 K23 ; R9 := R8; R8 := R8[0xed4e0128]
	215	[5857]	CALL     	R8 2 2 ; R8 := R8(R9)
	216	[5857]	LOADK    	R9 K53 ; R9 := "OnOnslaughtMusicReady"
	217	[5857]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	218	[5857]	JMP      	226 ; PC := 226
	219	[5859]	GETUPVAL 	R6 U1 ; R6 := U1
	220	[5859]	TEST     	R6 1 ; if R6 then PC := 226
	221	[5859]	JMP      	226 ; PC := 226
	222	[5860]	GETUPVAL 	R6 U5 ; R6 := U5
	223	[5860]	GETTABLE 	R6 R6 K46 ; R6 := R6[0x659d451f]
	224	[5860]	GETGLOBAL	R7 K54 ; R7 := 0xa464f0c2
	225	[5860]	CALL     	R6 2 1 ; R6(R7)
	226	[5867]	GETUPVAL 	R6 U7 ; R6 := U7
	227	[5867]	OP_LOADBOOL	R7 1 0 ; R7 := true
	228	[5867]	GETGLOBAL	R8 K27 ; R8 := mMissionFailed
	229	[5867]	NOT      	R8 R8 ; R8 := not R8
	230	[5867]	MOVE     	R9 R1 ; R9 := R1
	231	[5867]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	232	[5872]	GETUPVAL 	R6 U8 ; R6 := U8
	233	[5872]	CALL     	R6 1 2 ; R6 := R6()
	234	[5872]	TEST     	R6 1 ; if R6 then PC := 238
	235	[5872]	JMP      	238 ; PC := 238
	236	[5872]	GETUPVAL 	R6 U9 ; R6 := U9
	237	[5872]	CALL     	R6 1 2 ; R6 := R6()
	238	[5873]	TEST     	R6 0 ; if not R6 then PC := 245
	239	[5873]	JMP      	245 ; PC := 245
	240	[5873]	GETUPVAL 	R7 U10 ; R7 := U10
	241	[5873]	CALL     	R7 1 2 ; R7 := R7()
	242	[5873]	NOT      	R7 R7 ; R7 := not R7
	243	[5873]	JMP      	246 ; PC := 246
	244	[5873]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 245
	245	[5873]	OP_LOADBOOL	R7 1 0 ; R7 := true
	246	[5874]	TEST     	R7 0 ; if not R7 then PC := 286
	247	[5874]	JMP      	286 ; PC := 286
	248	[5875]	GETUPVAL 	R8 U11 ; R8 := U11
	249	[5875]	GETGLOBAL	R9 K27 ; R9 := mMissionFailed
	250	[5875]	NOT      	R9 R9 ; R9 := not R9
	251	[5875]	CALL     	R8 2 1 ; R8(R9)
	252	[5877]	GETUPVAL 	R8 U12 ; R8 := U12
	253	[5877]	CALL     	R8 1 1 ; R8()
	254	[5878]	GETUPVAL 	R8 U13 ; R8 := U13
	255	[5878]	CALL     	R8 1 2 ; R8 := R8()
	256	[5878]	SETGLOBALHASH	R8 K55 ; mNumberOfLoadoutSlotsUsed := R8
	257	[5880]	GETUPVAL 	R8 U14 ; R8 := U14
	258	[5880]	CALL     	R8 1 1 ; R8()
	259	[5881]	GETGLOBAL	R8 K56 ; R8 := 0xce225efa
	260	[5881]	CALL     	R8 1 1 ; R8()
	261	[5882]	GETUPVAL 	R8 U15 ; R8 := U15
	262	[5882]	GETGLOBAL	R9 K27 ; R9 := mMissionFailed
	263	[5882]	CALL     	R8 2 1 ; R8(R9)
	264	[5883]	GETGLOBAL	R8 K56 ; R8 := 0xce225efa
	265	[5883]	CALL     	R8 1 1 ; R8()
	266	[5884]	GETUPVAL 	R8 U16 ; R8 := U16
	267	[5884]	GETGLOBAL	R9 K27 ; R9 := mMissionFailed
	268	[5884]	CALL     	R8 2 1 ; R8(R9)
	269	[5885]	GETGLOBAL	R8 K56 ; R8 := 0xce225efa
	270	[5885]	CALL     	R8 1 1 ; R8()
	271	[5886]	GETUPVAL 	R8 U17 ; R8 := U17
	272	[5886]	CALL     	R8 1 1 ; R8()
	273	[5887]	GETGLOBAL	R8 K56 ; R8 := 0xce225efa
	274	[5887]	CALL     	R8 1 1 ; R8()
	275	[5888]	GETUPVAL 	R8 U18 ; R8 := U18
	276	[5888]	CALL     	R8 1 1 ; R8()
	277	[5889]	GETGLOBAL	R8 K56 ; R8 := 0xce225efa
	278	[5889]	CALL     	R8 1 1 ; R8()
	279	[5890]	GETUPVAL 	R8 U19 ; R8 := U19
	280	[5890]	CALL     	R8 1 1 ; R8()
	281	[5891]	GETGLOBAL	R8 K56 ; R8 := 0xce225efa
	282	[5891]	CALL     	R8 1 1 ; R8()
	283	[5892]	GETUPVAL 	R8 U20 ; R8 := U20
	284	[5892]	LOADNIL  	R9 R9 ; R9 := nil
	285	[5892]	CALL     	R8 2 1 ; R8(R9)
	286	[5896]	TEST     	R6 1 ; if R6 then PC := 290
	287	[5896]	JMP      	290 ; PC := 290
	288	[5896]	TEST     	R1 0 ; if not R1 then PC := 313
	289	[5896]	JMP      	313 ; PC := 313
	290	[5898]	GETGLOBAL	R8 K57 ; R8 := mCurrentScreenType
	291	[5898]	GETGLOBAL	R9 K58 ; R9 := ScreenType
	292	[5898]	GETTABLE 	R9 R9 K59 ; R9 := R9["SCOREBOARD"]
	293	[5898]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 307
	294	[5898]	JMP      	307 ; PC := 307
	295	[5898]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	296	[5898]	GETGLOBAL	R9 K60 ; R9 := mPvpMovie
	297	[5898]	CALL     	R8 2 2 ; R8 := R8(R9)
	298	[5898]	TEST     	R8 1 ; if R8 then PC := 307
	299	[5898]	JMP      	307 ; PC := 307
	300	[5899]	GETGLOBAL	R8 K60 ; R8 := mPvpMovie
	301	[5899]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0xe4162eed]
	302	[5899]	LOADK    	R10 K62 ; R10 := "PopulateScoreboard"
	303	[5899]	GETGLOBAL	R11 K22 ; R11 := 0x64fb1586
	304	[5899]	GETGLOBAL	R12 K63 ; R12 := mMissionSuccessful
	305	[5899]	CALL     	R11 2 0 ; R11,... := R11(R12)
	306	[5899]	CALL     	R8 0 1 ; R8(R9,...)
	307	[5901]	TEST     	R6 0 ; if not R6 then PC := 313
	308	[5901]	JMP      	313 ; PC := 313
	309	[5902]	GETUPVAL 	R8 U21 ; R8 := U21
	310	[5902]	GETGLOBAL	R9 K58 ; R9 := ScreenType
	311	[5902]	GETTABLE 	R9 R9 K59 ; R9 := R9["SCOREBOARD"]
	312	[5902]	CALL     	R8 2 1 ; R8(R9)
	313	[5906]	TEST     	R1 0 ; if not R1 then PC := 460
	314	[5906]	JMP      	460 ; PC := 460
	315	[5907]	GETUPVAL 	R8 U22 ; R8 := U22
	316	[5907]	GETGLOBAL	R9 K27 ; R9 := mMissionFailed
	317	[5907]	CALL     	R8 2 1 ; R8(R9)
	318	[5908]	JMP      	460 ; PC := 460
	319	[5910]	GETUPVAL 	R8 U12 ; R8 := U12
	320	[5910]	CALL     	R8 1 1 ; R8()
	321	[5911]	GETUPVAL 	R8 U13 ; R8 := U13
	322	[5911]	CALL     	R8 1 2 ; R8 := R8()
	323	[5911]	SETGLOBALHASH	R8 K55 ; mNumberOfLoadoutSlotsUsed := R8
	324	[5912]	GETUPVAL 	R8 U14 ; R8 := U14
	325	[5912]	CALL     	R8 1 1 ; R8()
	326	[5913]	GETGLOBAL	R8 K56 ; R8 := 0xce225efa
	327	[5913]	CALL     	R8 1 1 ; R8()
	328	[5914]	GETUPVAL 	R8 U17 ; R8 := U17
	329	[5914]	CALL     	R8 1 1 ; R8()
	330	[5915]	GETGLOBAL	R8 K56 ; R8 := 0xce225efa
	331	[5915]	CALL     	R8 1 1 ; R8()
	332	[5916]	GETUPVAL 	R8 U19 ; R8 := U19
	333	[5916]	CALL     	R8 1 1 ; R8()
	334	[5917]	GETGLOBAL	R8 K56 ; R8 := 0xce225efa
	335	[5917]	CALL     	R8 1 1 ; R8()
	336	[5918]	GETUPVAL 	R8 U20 ; R8 := U20
	337	[5918]	LOADNIL  	R9 R9 ; R9 := nil
	338	[5918]	CALL     	R8 2 1 ; R8(R9)
	339	[5920]	GETUPVAL 	R8 U7 ; R8 := U7
	340	[5920]	OP_LOADBOOL	R9 0 0 ; R9 := false
	341	[5920]	GETGLOBAL	R10 K63 ; R10 := mMissionSuccessful
	342	[5920]	TEST     	R10 1 ; if R10 then PC := 355
	343	[5920]	JMP      	355 ; PC := 355
	344	[5920]	GETGLOBAL	R10 K3 ; R10 := 0x7b998233
	345	[5920]	GETGLOBAL	R11 K0 ; R11 := 0x0032441c
	346	[5920]	GETTABLE 	R11 R11 K64 ; R11 := R11["MissionSuccessOverride"]
	347	[5920]	CALL     	R10 2 2 ; R10 := R10(R11)
	348	[5920]	TEST     	R10 1 ; if R10 then PC := 353
	349	[5920]	JMP      	353 ; PC := 353
	350	[5920]	GETGLOBAL	R10 K0 ; R10 := 0x0032441c
	351	[5920]	GETTABLE 	R10 R10 K64 ; R10 := R10["MissionSuccessOverride"]
	352	[5920]	JMP      	355 ; PC := 355
	353	[5920]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 354
	354	[5920]	OP_LOADBOOL	R10 1 0 ; R10 := true
	355	[5920]	MOVE     	R11 R1 ; R11 := R1
	356	[5920]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	357	[5921]	GETGLOBAL	R8 K0 ; R8 := 0x0032441c
	358	[5921]	SETTABLE 	R8 K64 K65 ; R8["MissionSuccessOverride"] := false
	359	[5923]	GETGLOBAL	R8 K63 ; R8 := mMissionSuccessful
	360	[5923]	NOT      	R8 R8 ; R8 := not R8
	361	[5923]	SETGLOBALHASH	R8 K27 ; mMissionFailed := R8
	362	[5924]	GETGLOBAL	R8 K27 ; R8 := mMissionFailed
	363	[5924]	TEST     	R8 0 ; if not R8 then PC := 370
	364	[5924]	JMP      	370 ; PC := 370
	365	[5925]	GETUPVAL 	R8 U5 ; R8 := U5
	366	[5925]	GETTABLE 	R8 R8 K46 ; R8 := R8[0x659d451f]
	367	[5925]	GETGLOBAL	R9 K49 ; R9 := 0xb64f5c91
	368	[5925]	CALL     	R8 2 1 ; R8(R9)
	369	[5925]	JMP      	377 ; PC := 377
	370	[5927]	GETUPVAL 	R8 U1 ; R8 := U1
	371	[5927]	TEST     	R8 1 ; if R8 then PC := 377
	372	[5927]	JMP      	377 ; PC := 377
	373	[5928]	GETUPVAL 	R8 U5 ; R8 := U5
	374	[5928]	GETTABLE 	R8 R8 K46 ; R8 := R8[0x659d451f]
	375	[5928]	GETGLOBAL	R9 K47 ; R9 := 0xb9ae96ba
	376	[5928]	CALL     	R8 2 1 ; R8(R9)
	377	[5932]	GETUPVAL 	R8 U18 ; R8 := U18
	378	[5932]	CALL     	R8 1 1 ; R8()
	379	[5933]	GETGLOBAL	R8 K56 ; R8 := 0xce225efa
	380	[5933]	CALL     	R8 1 1 ; R8()
	381	[5934]	GETUPVAL 	R8 U15 ; R8 := U15
	382	[5934]	CALL     	R8 1 1 ; R8()
	383	[5935]	GETGLOBAL	R8 K56 ; R8 := 0xce225efa
	384	[5935]	CALL     	R8 1 1 ; R8()
	385	[5937]	GETGLOBAL	R8 K57 ; R8 := mCurrentScreenType
	386	[5937]	GETGLOBAL	R9 K58 ; R9 := ScreenType
	387	[5937]	GETTABLE 	R9 R9 K59 ; R9 := R9["SCOREBOARD"]
	388	[5937]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 402
	389	[5937]	JMP      	402 ; PC := 402
	390	[5937]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	391	[5937]	GETGLOBAL	R9 K60 ; R9 := mPvpMovie
	392	[5937]	CALL     	R8 2 2 ; R8 := R8(R9)
	393	[5937]	TEST     	R8 1 ; if R8 then PC := 402
	394	[5937]	JMP      	402 ; PC := 402
	395	[5938]	GETGLOBAL	R8 K60 ; R8 := mPvpMovie
	396	[5938]	SELF     	R8 R8 K61 ; R9 := R8; R8 := R8[0xe4162eed]
	397	[5938]	LOADK    	R10 K66 ; R10 := "InitializeFanfare"
	398	[5938]	GETGLOBAL	R11 K22 ; R11 := 0x64fb1586
	399	[5938]	GETGLOBAL	R12 K63 ; R12 := mMissionSuccessful
	400	[5938]	CALL     	R11 2 0 ; R11,... := R11(R12)
	401	[5938]	CALL     	R8 0 1 ; R8(R9,...)
	402	[5941]	TEST     	R1 0 ; if not R1 then PC := 407
	403	[5941]	JMP      	407 ; PC := 407
	404	[5942]	GETUPVAL 	R8 U22 ; R8 := U22
	405	[5942]	GETGLOBAL	R9 K27 ; R9 := mMissionFailed
	406	[5942]	CALL     	R8 2 1 ; R8(R9)
	407	[5945]	GETGLOBAL	R8 K67 ; R8 := 0x2d0fad09
	408	[5945]	LOADK    	R9 K68 ; R9 := "Lotus.Interface.Libs.DioramaLoader"
	409	[5945]	CALL     	R8 2 2 ; R8 := R8(R9)
	410	[5946]	GETTABLE 	R9 R8 K70 ; R9 := R8[0xbec1f4ee]
	411	[5946]	GETGLOBAL	R10 K71 ; R10 := 0xae91e43b
	412	[5946]	OP_LOADBOOL	R11 1 0 ; R11 := true
	413	[5946]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	414	[5946]	SETGLOBALHASH	R9 K69 ; mDioramaLoader := R9
	415	[5948]	OP_LOADBOOL	R9 0 0 ; R9 := false
	416	[5949]	LOADNIL  	R10 R10 ; R10 := nil
	417	[5950]	GETGLOBAL	R11 K33 ; R11 := 0x6c97a788
	418	[5950]	GETTABLE 	R11 R11 K72 ; R11 := R11[0x6e0e9f85]
	419	[5950]	CALL     	R11 1 2 ; R11 := R11()
	420	[5951]	GETGLOBAL	R12 K3 ; R12 := 0x7b998233
	421	[5951]	GETTABLE 	R13 R11 K73 ; R13 := R11["levelKeyName"]
	422	[5951]	CALL     	R12 2 2 ; R12 := R12(R13)
	423	[5951]	TEST     	R12 1 ; if R12 then PC := 429
	424	[5951]	JMP      	429 ; PC := 429
	425	[5952]	GETGLOBAL	R12 K74 ; R12 := 0xb009bbc6
	426	[5952]	GETTABLE 	R13 R11 K73 ; R13 := R11["levelKeyName"]
	427	[5952]	CALL     	R12 2 2 ; R12 := R12(R13)
	428	[5952]	MOVE     	R10 R12 ; R10 := R12
	429	[5954]	TEST     	R9 0 ; if not R9 then PC := 440
	430	[5954]	JMP      	440 ; PC := 440
	431	[5955]	GETGLOBAL	R12 K3 ; R12 := 0x7b998233
	432	[5955]	GETGLOBAL	R13 K75 ; R13 := 0xa91ae65e
	433	[5955]	CALL     	R12 2 2 ; R12 := R12(R13)
	434	[5955]	TEST     	R12 1 ; if R12 then PC := 460
	435	[5955]	JMP      	460 ; PC := 460
	436	[5956]	GETUPVAL 	R12 U23 ; R12 := U23
	437	[5956]	GETGLOBAL	R13 K75 ; R13 := 0xa91ae65e
	438	[5956]	CALL     	R12 2 1 ; R12(R13)
	439	[5957]	JMP      	460 ; PC := 460
	440	[5958]	GETGLOBAL	R12 K3 ; R12 := 0x7b998233
	441	[5958]	MOVE     	R13 R10 ; R13 := R10
	442	[5958]	CALL     	R12 2 2 ; R12 := R12(R13)
	443	[5958]	TEST     	R12 1 ; if R12 then PC := 458
	444	[5958]	JMP      	458 ; PC := 458
	445	[5959]	GETGLOBAL	R12 K74 ; R12 := 0xb009bbc6
	446	[5959]	SELF     	R13 R10 K76 ; R14 := R10; R13 := R10[0x9b4bbe31]
	447	[5959]	CALL     	R13 2 0 ; R13,... := R13(R14)
	448	[5959]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	449	[5960]	GETGLOBAL	R13 K3 ; R13 := 0x7b998233
	450	[5960]	MOVE     	R14 R12 ; R14 := R12
	451	[5960]	CALL     	R13 2 2 ; R13 := R13(R14)
	452	[5960]	TEST     	R13 1 ; if R13 then PC := 460
	453	[5960]	JMP      	460 ; PC := 460
	454	[5961]	GETUPVAL 	R13 U23 ; R13 := U23
	455	[5961]	MOVE     	R14 R12 ; R14 := R12
	456	[5961]	CALL     	R13 2 1 ; R13(R14)
	457	[5962]	JMP      	460 ; PC := 460
	458	[5964]	GETUPVAL 	R13 U24 ; R13 := U24
	459	[5964]	CALL     	R13 1 1 ; R13()
	460	[5967]	RETURN   	R0 1 ; return 

function #137 <?:5969,6359> (1179 instructions, 4716 bytes at 0000016091FC5CE0)
0 params, 35 slots, 27 upvalues, 0 locals, 230 constants, 1 function
	1	[5970]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[5970]	GETTABLE 	R0 R0 K1 ; R0 := R0["DisableEOM"]
	3	[5970]	TEST     	R0 0 ; if not R0 then PC := 11
	4	[5970]	JMP      	11 ; PC := 11
	5	[5971]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[5971]	SETTABLE 	R0 K1 K2 ; R0["DisableEOM"] := nil
	7	[5972]	GETGLOBAL	R0 K3 ; R0 := 0xae91e43b
	8	[5972]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x32302b4a]
	9	[5972]	CALL     	R0 2 1 ; R0(R1)
	10	[5973]	RETURN   	R0 1 ; return 
	11	[5975]	GETGLOBAL	R0 K5 ; R0 := 0x3d106989
	12	[5975]	LOADK    	R1 K6 ; R1 := "Initialize"
	13	[5975]	CALL     	R0 2 1 ; R0(R1)
	14	[5977]	GETGLOBAL	R0 K3 ; R0 := 0xae91e43b
	15	[5977]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xc6a10ab1]
	16	[5977]	LOADK    	R2 := 0.000000
	17	[5977]	CALL     	R0 3 1 ; R0(R1,R2)
	18	[5978]	GETGLOBAL	R0 K3 ; R0 := 0xae91e43b
	19	[5978]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0xaade900e]
	20	[5978]	LOADK    	R2 K9 ; R2 := "FullScreenFade"
	21	[5978]	LOADK    	R3 := 11.000000
	22	[5978]	OP_LOADBOOL	R4 0 0 ; R4 := false
	23	[5978]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	24	[5980]	GETUPVAL 	R0 U0 ; R0 := U0
	25	[5980]	GETTABLE 	R0 R0 K10 ; R0 := R0[0xcdc34211]
	26	[5980]	CALL     	R0 1 2 ; R0 := R0()
	27	[5981]	GETGLOBAL	R1 K11 ; R1 := 0x0032441c
	28	[5981]	GETTABLE 	R1 R1 K12 ; R1 := R1["StalkerMode"]
	29	[5981]	TEST     	R1 0 ; if not R1 then PC := 60
	30	[5981]	JMP      	60 ; PC := 60
	31	[5982]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	32	[5982]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x67bc869f]
	33	[5982]	LOADK    	R3 K14 ; R3 := "_root"
	34	[5982]	LOADK    	R4 := 10.000000
	35	[5982]	LOADK    	R5 := 0.000000
	36	[5982]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	37	[5983]	TEST     	R0 0 ; if not R0 then PC := 49
	38	[5983]	JMP      	49 ; PC := 49
	39	[5983]	GETGLOBAL	R1 K15 ; R1 := 0x7b998233
	40	[5983]	GETGLOBAL	R2 K16 ; R2 := 0xbe190284
	41	[5983]	CALL     	R1 2 2 ; R1 := R1(R2)
	42	[5983]	TEST     	R1 1 ; if R1 then PC := 55
	43	[5983]	JMP      	55 ; PC := 55
	44	[5983]	GETGLOBAL	R1 K16 ; R1 := 0xbe190284
	45	[5983]	SELF     	R1 R1 K17 ; R2 := R1; R1 := R1[0x31e985af]
	46	[5983]	CALL     	R1 2 2 ; R1 := R1(R2)
	47	[5983]	TEST     	R1 0 ; if not R1 then PC := 55
	48	[5983]	JMP      	55 ; PC := 55
	49	[5984]	OP_LOADBOOL	R1 1 0 ; R1 := true
	50	[5984]	SETGLOBALHASH	R1 K18 ; mInitialized := R1
	51	[5985]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	52	[5985]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x32302b4a]
	53	[5985]	CALL     	R1 2 1 ; R1(R2)
	54	[5985]	JMP      	59 ; PC := 59
	55	[5987]	GETGLOBAL	R1 K19 ; R1 := 0x34291f5c
	56	[5987]	GETTABLE 	R1 R1 K20 ; R1 := R1[0x8ee24660]
	57	[5987]	OP_LOADBOOL	R2 1 0 ; R2 := true
	58	[5987]	CALL     	R1 2 1 ; R1(R2)
	59	[5989]	RETURN   	R0 1 ; return 
	60	[5992]	GETGLOBAL	R1 K0 ; R1 := _T
	61	[5992]	GETTABLE 	R1 R1 K21 ; R1 := R1["ForceHideEOM"]
	62	[5992]	TEST     	R1 0 ; if not R1 then PC := 88
	63	[5992]	JMP      	88 ; PC := 88
	64	[5993]	GETUPVAL 	R1 U0 ; R1 := U0
	65	[5993]	GETTABLE 	R1 R1 K22 ; R1 := R1[0x154d0ad2]
	66	[5993]	OP_LOADBOOL	R2 1 0 ; R2 := true
	67	[5993]	CALL     	R1 2 1 ; R1(R2)
	68	[5994]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	69	[5994]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x67bc869f]
	70	[5994]	LOADK    	R3 K14 ; R3 := "_root"
	71	[5994]	LOADK    	R4 := 10.000000
	72	[5994]	LOADK    	R5 := 0.000000
	73	[5994]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	74	[5995]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	75	[5995]	SELF     	R1 R1 K23 ; R2 := R1; R1 := R1[0x5477b639]
	76	[5995]	OP_LOADBOOL	R3 0 0 ; R3 := false
	77	[5995]	CALL     	R1 3 1 ; R1(R2,R3)
	78	[5996]	OP_LOADBOOL	R1 1 0 ; R1 := true
	79	[5996]	SETUPVAL 	R1 U1 ; U1 := R1
	80	[5997]	LOADK    	R1 K25 ; R1 := 0.010000
	81	[5997]	SETGLOBALHASH	R1 K24 ; AUTO_CLOSE_DELAY := R1
	82	[5998]	GETUPVAL 	R1 U2 ; R1 := U2
	83	[5998]	CALL     	R1 1 2 ; R1 := R1()
	84	[5998]	TEST     	R1 0 ; if not R1 then PC := 88
	85	[5998]	JMP      	88 ; PC := 88
	86	[5999]	GETGLOBAL	R1 K24 ; R1 := AUTO_CLOSE_DELAY
	87	[5999]	SETGLOBALHASH	R1 K26 ; mAutoCloseDelay := R1
	88	[6003]	GETGLOBAL	R1 K15 ; R1 := 0x7b998233
	89	[6003]	GETGLOBAL	R2 K27 ; R2 := 0x4c5fdf9c
	90	[6003]	CALL     	R1 2 2 ; R1 := R1(R2)
	91	[6003]	TEST     	R1 1 ; if R1 then PC := 101
	92	[6003]	JMP      	101 ; PC := 101
	93	[6003]	GETGLOBAL	R1 K11 ; R1 := 0x0032441c
	94	[6003]	GETTABLE 	R1 R1 K28 ; R1 := R1["UIColorObject_White"]
	95	[6003]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 101
	96	[6003]	JMP      	101 ; PC := 101
	97	[6004]	GETGLOBAL	R1 K29 ; R1 := 0x9ba7909f
	98	[6004]	SELF     	R1 R1 K30 ; R2 := R1; R1 := R1[0x6dd7aa66]
	99	[6004]	GETGLOBAL	R3 K27 ; R3 := 0x4c5fdf9c
	100	[6004]	CALL     	R1 3 1 ; R1(R2,R3)
	101	[6007]	GETGLOBAL	R1 K15 ; R1 := 0x7b998233
	102	[6007]	GETGLOBAL	R2 K31 ; R2 := 0xf5e16f12
	103	[6007]	CALL     	R1 2 2 ; R1 := R1(R2)
	104	[6007]	TEST     	R1 1 ; if R1 then PC := 119
	105	[6007]	JMP      	119 ; PC := 119
	106	[6008]	GETGLOBAL	R1 K29 ; R1 := 0x9ba7909f
	107	[6008]	SELF     	R1 R1 K32 ; R2 := R1; R1 := R1[0xbcfb64ab]
	108	[6008]	GETGLOBAL	R3 K31 ; R3 := 0xf5e16f12
	109	[6008]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	110	[6009]	GETGLOBAL	R2 K15 ; R2 := 0x7b998233
	111	[6009]	MOVE     	R3 R1 ; R3 := R1
	112	[6009]	CALL     	R2 2 2 ; R2 := R2(R3)
	113	[6009]	TEST     	R2 1 ; if R2 then PC := 119
	114	[6009]	JMP      	119 ; PC := 119
	115	[6010]	SELF     	R2 R1 K33 ; R3 := R1; R2 := R1[0xe4162eed]
	116	[6010]	LOADK    	R4 K34 ; R4 := "Close"
	117	[6010]	LOADK    	R5 K35 ; R5 := ""
	118	[6010]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	119	[6014]	GETGLOBAL	R2 K15 ; R2 := 0x7b998233
	120	[6014]	GETGLOBAL	R3 K16 ; R3 := 0xbe190284
	121	[6014]	CALL     	R2 2 2 ; R2 := R2(R3)
	122	[6014]	TEST     	R2 1 ; if R2 then PC := 128
	123	[6014]	JMP      	128 ; PC := 128
	124	[6015]	GETGLOBAL	R2 K16 ; R2 := 0xbe190284
	125	[6015]	SELF     	R2 R2 K36 ; R3 := R2; R2 := R2[0xa1c390fe]
	126	[6015]	CALL     	R2 2 2 ; R2 := R2(R3)
	127	[6015]	SETUPVAL 	R2 U3 ; U3 := R2
	128	[6018]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	129	[6018]	SELF     	R2 R2 K37 ; R3 := R2; R2 := R2[0x2002e1dc]
	130	[6018]	GETGLOBAL	R4 K0 ; R4 := _T
	131	[6018]	GETTABLE 	R4 R4 K38 ; R4 := R4["RadialSolarMapOpen"]
	132	[6018]	EQ       	1 R4 K39 ; if R4 == true then PC := 135
	133	[6018]	JMP      	135 ; PC := 135
	134	[6018]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 135
	135	[6018]	OP_LOADBOOL	R4 1 0 ; R4 := true
	136	[6018]	CALL     	R2 3 1 ; R2(R3,R4)
	137	[6020]	GETGLOBAL	R2 K11 ; R2 := 0x0032441c
	138	[6020]	GETTABLE 	R2 R2 K40 ; R2 := R2["EndOfMatch_didActuallySetupStuff"]
	139	[6020]	TEST     	R2 0 ; if not R2 then PC := 146
	140	[6020]	JMP      	146 ; PC := 146
	141	[6021]	GETGLOBAL	R2 K11 ; R2 := 0x0032441c
	142	[6021]	SETTABLE 	R2 K40 K2 ; R2["EndOfMatch_didActuallySetupStuff"] := nil
	143	[6022]	GETGLOBAL	R2 K11 ; R2 := 0x0032441c
	144	[6022]	GETTABLE 	R2 R2 K42 ; R2 := R2["EndOfMatch_abortingAndWasDoingPvpChallenge"]
	145	[6022]	SETGLOBALHASH	R2 K41 ; mAbortingAndWasDoingPvpChallenge := R2
	146	[6025]	GETUPVAL 	R2 U4 ; R2 := U4
	147	[6025]	CALL     	R2 1 1 ; R2()
	148	[6026]	GETUPVAL 	R2 U5 ; R2 := U5
	149	[6026]	LOADK    	R3 := 0.000000
	150	[6026]	CALL     	R2 2 1 ; R2(R3)
	151	[6028]	GETGLOBAL	R2 K0 ; R2 := _T
	152	[6028]	SETTABLE 	R2 K43 K39 ; R2["EOMOpen"] := true
	153	[6029]	GETUPVAL 	R2 U0 ; R2 := U0
	154	[6029]	GETTABLE 	R2 R2 K44 ; R2 := R2[0x9e3d3434]
	155	[6029]	OP_LOADBOOL	R3 1 0 ; R3 := true
	156	[6029]	CALL     	R2 2 1 ; R2(R3)
	157	[6031]	GETUPVAL 	R2 U6 ; R2 := U6
	158	[6031]	CALL     	R2 1 2 ; R2 := R2()
	159	[6032]	GETTABLE 	R3 R2 K45 ; R3 := R2["missionType"]
	160	[6033]	GETTABLE 	R4 R2 K47 ; R4 := R2["archwingRequired"]
	161	[6033]	TEST     	R4 0 ; if not R4 then PC := 165
	162	[6033]	JMP      	165 ; PC := 165
	163	[6033]	GETTABLE 	R4 R2 K48 ; R4 := R2["isSharkwingMission"]
	164	[6033]	NOT      	R4 R4 ; R4 := not R4
	165	[6033]	SETGLOBALHASH	R4 K46 ; mArchWingRequired := R4
	166	[6034]	GETUPVAL 	R4 U7 ; R4 := U7
	167	[6034]	EQ       	1 R3 K51 ; if R3 == 10.000000 then PC := 170
	168	[6034]	JMP      	170 ; PC := 170
	169	[6034]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 170
	170	[6034]	OP_LOADBOOL	R5 1 0 ; R5 := true
	171	[6034]	SETTABLE 	R4 K49 R5 ; R4["isPvp"] := R5
	172	[6035]	GETGLOBAL	R4 K15 ; R4 := 0x7b998233
	173	[6035]	GETGLOBAL	R5 K52 ; R5 := 0x25d99d89
	174	[6035]	CALL     	R4 2 2 ; R4 := R4(R5)
	175	[6035]	TEST     	R4 0 ; if not R4 then PC := 181
	176	[6035]	JMP      	181 ; PC := 181
	177	[6036]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	178	[6036]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x32302b4a]
	179	[6036]	CALL     	R4 2 1 ; R4(R5)
	180	[6037]	RETURN   	R0 1 ; return 
	181	[6039]	GETGLOBAL	R4 K52 ; R4 := 0x25d99d89
	182	[6039]	SETGLOBALHASH	R4 K53 ; mGameData := R4
	183	[6041]	GETGLOBAL	R4 K54 ; R4 := 0x7f5022cf
	184	[6041]	GETTABLE 	R4 R4 K55 ; R4 := R4[0x3f3e4d12]
	185	[6041]	GETUPVAL 	R5 U0 ; R5 := U0
	186	[6041]	GETTABLE 	R5 R5 K56 ; R5 := R5[0x4e234407]
	187	[6041]	MOVE     	R6 R2 ; R6 := R2
	188	[6041]	CALL     	R5 2 0 ; R5,... := R5(R6)
	189	[6041]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	190	[6041]	SETUPVAL 	R4 U8 ; U8 := R4
	191	[6042]	GETUPVAL 	R4 U9 ; R4 := U9
	192	[6042]	GETUPVAL 	R5 U8 ; R5 := U8
	193	[6042]	CALL     	R4 2 1 ; R4(R5)
	194	[6044]	GETUPVAL 	R4 U8 ; R4 := U8
	195	[6044]	LEN      	R4 R4 ; R4 := # R4
	196	[6044]	LT       	0 K57 R4 ; if 0.000000 >= R4 then PC := 251
	197	[6044]	JMP      	251 ; PC := 251
	198	[6045]	GETUPVAL 	R4 U0 ; R4 := U0
	199	[6045]	GETTABLE 	R4 R4 K58 ; R4 := R4[0x5e35d4d6]
	200	[6045]	CALL     	R4 1 2 ; R4 := R4()
	201	[6046]	SELF     	R5 R4 K59 ; R6 := R4; R5 := R4[0x5484bf3c]
	202	[6046]	GETTABLE 	R7 R2 K60 ; R7 := R2["location"]
	203	[6046]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	204	[6046]	GETTABLE 	R5 R5 K61 ; R5 := R5["name"]
	205	[6047]	LEN      	R6 R5 ; R6 := # R5
	206	[6047]	EQ       	0 R6 K57 ; if R6 ~= 0.000000 then PC := 222
	207	[6047]	JMP      	222 ; PC := 222
	208	[6048]	GETGLOBAL	R6 K62 ; R6 := 0xb009bbc6
	209	[6048]	GETTABLE 	R7 R2 K63 ; R7 := R2["levelKeyName"]
	210	[6048]	CALL     	R6 2 2 ; R6 := R6(R7)
	211	[6049]	GETGLOBAL	R7 K15 ; R7 := 0x7b998233
	212	[6049]	MOVE     	R8 R6 ; R8 := R6
	213	[6049]	CALL     	R7 2 2 ; R7 := R7(R8)
	214	[6049]	TEST     	R7 1 ; if R7 then PC := 222
	215	[6049]	JMP      	222 ; PC := 222
	216	[6050]	SELF     	R7 R4 K64 ; R8 := R4; R7 := R4[0xc1dee03f]
	217	[6050]	CALL     	R7 2 2 ; R7 := R7(R8)
	218	[6050]	SELF     	R8 R6 K65 ; R9 := R6; R8 := R6[0x6c053909]
	219	[6050]	CALL     	R8 2 2 ; R8 := R8(R9)
	220	[6050]	GETTABLE 	R7 R7 R8 ; R7 := R7[R8]
	221	[6050]	GETTABLE 	R5 R7 K61 ; R5 := R7["name"]
	222	[6054]	GETGLOBAL	R7 K54 ; R7 := 0x7f5022cf
	223	[6054]	GETTABLE 	R7 R7 K55 ; R7 := R7[0x3f3e4d12]
	224	[6054]	GETGLOBAL	R8 K66 ; R8 := 0x603636ad
	225	[6054]	LOADK    	R9 K67 ; R9 := "/Lotus/Language/Labels/CurrentMission"
	226	[6054]	NEWTABLE 	R10 0 4 ; R10 := {}
	227	[6055]	GETUPVAL 	R11 U8 ; R11 := U8
	228	[6055]	SETTABLE 	R10 K68 R11 ; R10["NODE"] := R11
	229	[6056]	GETGLOBAL	R11 K66 ; R11 := 0x603636ad
	230	[6056]	MOVE     	R12 R5 ; R12 := R5
	231	[6056]	NEWTABLE 	R13 0 0 ; R13 := {}
	232	[6056]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	233	[6056]	SETTABLE 	R10 K69 R11 ; R10["REGION"] := R11
	234	[6057]	GETUPVAL 	R11 U0 ; R11 := U0
	235	[6057]	GETTABLE 	R11 R11 K71 ; R11 := R11[0xc6c45c3a]
	236	[6057]	GETTABLE 	R12 R2 K72 ; R12 := R2["faction"]
	237	[6057]	CALL     	R11 2 2 ; R11 := R11(R12)
	238	[6057]	SETTABLE 	R10 K70 R11 ; R10["FACTION"] := R11
	239	[6058]	GETUPVAL 	R11 U10 ; R11 := U10
	240	[6058]	CALL     	R11 1 2 ; R11 := R11()
	241	[6058]	SETTABLE 	R10 K73 R11 ; R10["TYPE"] := R11
	242	[6054]	CALL     	R8 3 0 ; R8,... := R8(R9,R10)
	243	[6054]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	244	[6060]	GETGLOBAL	R8 K3 ; R8 := 0xae91e43b
	245	[6060]	SELF     	R8 R8 K74 ; R9 := R8; R8 := R8[0x5f56eeab]
	246	[6060]	LOADK    	R10 K75 ; R10 := "BottomAnchor.NodeDetails"
	247	[6060]	LOADK    	R11 := 29.000000
	248	[6060]	MOVE     	R12 R7 ; R12 := R7
	249	[6060]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	250	[6060]	JMP      	257 ; PC := 257
	251	[6062]	GETGLOBAL	R8 K3 ; R8 := 0xae91e43b
	252	[6062]	SELF     	R8 R8 K8 ; R9 := R8; R8 := R8[0xaade900e]
	253	[6062]	LOADK    	R10 K75 ; R10 := "BottomAnchor.NodeDetails"
	254	[6062]	LOADK    	R11 := 11.000000
	255	[6062]	OP_LOADBOOL	R12 0 0 ; R12 := false
	256	[6062]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	257	[6065]	GETGLOBAL	R8 K3 ; R8 := 0xae91e43b
	258	[6065]	SELF     	R8 R8 K13 ; R9 := R8; R8 := R8[0x67bc869f]
	259	[6065]	LOADK    	R10 K76 ; R10 := "TopAnchor.Header.DescBacker"
	260	[6065]	LOADK    	R11 := 10.000000
	261	[6065]	LOADK    	R12 := 50.000000
	262	[6065]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	263	[6066]	GETGLOBAL	R8 K3 ; R8 := 0xae91e43b
	264	[6066]	SELF     	R8 R8 K13 ; R9 := R8; R8 := R8[0x67bc869f]
	265	[6066]	LOADK    	R10 K77 ; R10 := "TopAnchor.Header.ArrowEnds"
	266	[6066]	LOADK    	R11 := 10.000000
	267	[6066]	GETGLOBAL	R12 K78 ; R12 := BORDER_ALPHA
	268	[6066]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	269	[6068]	TEST     	R0 0 ; if not R0 then PC := 317
	270	[6068]	JMP      	317 ; PC := 317
	271	[6068]	GETUPVAL 	R8 U7 ; R8 := U7
	272	[6068]	GETTABLE 	R8 R8 K49 ; R8 := R8["isPvp"]
	273	[6068]	TEST     	R8 1 ; if R8 then PC := 277
	274	[6068]	JMP      	277 ; PC := 277
	275	[6068]	EQ       	0 R3 K79 ; if R3 ~= 22.000000 then PC := 317
	276	[6068]	JMP      	317 ; PC := 317
	277	[6068]	GETGLOBAL	R8 K15 ; R8 := 0x7b998233
	278	[6068]	GETGLOBAL	R9 K80 ; R9 := 0xff8691c1
	279	[6068]	CALL     	R8 2 2 ; R8 := R8(R9)
	280	[6068]	TEST     	R8 1 ; if R8 then PC := 317
	281	[6068]	JMP      	317 ; PC := 317
	282	[6069]	GETGLOBAL	R8 K3 ; R8 := 0xae91e43b
	283	[6069]	SELF     	R8 R8 K82 ; R9 := R8; R8 := R8[0x1fd6abd0]
	284	[6069]	GETGLOBAL	R10 K80 ; R10 := 0xff8691c1
	285	[6069]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	286	[6069]	SETGLOBALHASH	R8 K81 ; mPvpMovie := R8
	287	[6070]	GETGLOBAL	R8 K15 ; R8 := 0x7b998233
	288	[6070]	GETGLOBAL	R9 K81 ; R9 := mPvpMovie
	289	[6070]	CALL     	R8 2 2 ; R8 := R8(R9)
	290	[6070]	TEST     	R8 1 ; if R8 then PC := 317
	291	[6070]	JMP      	317 ; PC := 317
	292	[6071]	GETGLOBAL	R8 K81 ; R8 := mPvpMovie
	293	[6071]	SELF     	R8 R8 K83 ; R9 := R8; R8 := R8[0x368ad758]
	294	[6071]	OP_LOADBOOL	R10 0 0 ; R10 := false
	295	[6071]	CALL     	R8 3 1 ; R8(R9,R10)
	296	[6072]	GETGLOBAL	R8 K15 ; R8 := 0x7b998233
	297	[6072]	GETGLOBAL	R9 K16 ; R9 := 0xbe190284
	298	[6072]	CALL     	R8 2 2 ; R8 := R8(R9)
	299	[6072]	TEST     	R8 1 ; if R8 then PC := 311
	300	[6072]	JMP      	311 ; PC := 311
	301	[6072]	GETGLOBAL	R8 K16 ; R8 := 0xbe190284
	302	[6072]	SELF     	R8 R8 K84 ; R9 := R8; R8 := R8[0xf2deaf69]
	303	[6072]	GETGLOBAL	R10 K85 ; R10 := gLotusBaseGameRulesType
	304	[6072]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	305	[6072]	TEST     	R8 0 ; if not R8 then PC := 313
	306	[6072]	JMP      	313 ; PC := 313
	307	[6072]	GETGLOBAL	R8 K16 ; R8 := 0xbe190284
	308	[6072]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0x31e985af]
	309	[6072]	CALL     	R8 2 2 ; R8 := R8(R9)
	310	[6072]	JMP      	313 ; PC := 313
	311	[6072]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 312
	312	[6072]	OP_LOADBOOL	R8 1 0 ; R8 := true
	313	[6073]	GETGLOBAL	R9 K81 ; R9 := mPvpMovie
	314	[6073]	SELF     	R9 R9 K86 ; R10 := R9; R9 := R9[0xbed40e9c]
	315	[6073]	MOVE     	R11 R8 ; R11 := R8
	316	[6073]	CALL     	R9 3 1 ; R9(R10,R11)
	317	[6077]	GETGLOBAL	R9 K15 ; R9 := 0x7b998233
	318	[6077]	GETGLOBAL	R10 K16 ; R10 := 0xbe190284
	319	[6077]	CALL     	R9 2 2 ; R9 := R9(R10)
	320	[6077]	TEST     	R9 1 ; if R9 then PC := 326
	321	[6077]	JMP      	326 ; PC := 326
	322	[6078]	GETGLOBAL	R9 K16 ; R9 := 0xbe190284
	323	[6078]	SELF     	R9 R9 K87 ; R10 := R9; R9 := R9[0x5353427c]
	324	[6078]	CALL     	R9 2 2 ; R9 := R9(R10)
	325	[6078]	SETUPVAL 	R9 U11 ; U11 := R9
	326	[6081]	GETGLOBAL	R9 K0 ; R9 := _T
	327	[6081]	GETUPVAL 	R10 U12 ; R10 := U12
	328	[6081]	GETTABLE 	R10 R10 K89 ; R10 := R10["ACTUAL_EOM"]
	329	[6081]	SETTABLE 	R9 K88 R10 ; R9["eomScreenMode"] := R10
	330	[6082]	GETGLOBAL	R9 K15 ; R9 := 0x7b998233
	331	[6082]	GETGLOBAL	R10 K3 ; R10 := 0xae91e43b
	332	[6082]	SELF     	R10 R10 K90 ; R11 := R10; R10 := R10[0x33abee92]
	333	[6082]	CALL     	R10 2 0 ; R10,... := R10(R11)
	334	[6082]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	335	[6082]	TEST     	R9 1 ; if R9 then PC := 351
	336	[6082]	JMP      	351 ; PC := 351
	337	[6082]	GETGLOBAL	R9 K3 ; R9 := 0xae91e43b
	338	[6082]	SELF     	R9 R9 K90 ; R10 := R9; R9 := R9[0x33abee92]
	339	[6082]	CALL     	R9 2 2 ; R9 := R9(R10)
	340	[6082]	GETGLOBAL	R10 K29 ; R10 := 0x9ba7909f
	341	[6082]	SELF     	R10 R10 K32 ; R11 := R10; R10 := R10[0xbcfb64ab]
	342	[6082]	GETGLOBAL	R12 K91 ; R12 := 0x6a400c4e
	343	[6082]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	344	[6082]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 351
	345	[6082]	JMP      	351 ; PC := 351
	346	[6083]	GETGLOBAL	R9 K0 ; R9 := _T
	347	[6083]	GETUPVAL 	R10 U12 ; R10 := U12
	348	[6083]	GETTABLE 	R10 R10 K92 ; R10 := R10["DETAILED_PREVIEW"]
	349	[6083]	SETTABLE 	R9 K88 R10 ; R9["eomScreenMode"] := R10
	350	[6083]	JMP      	391 ; PC := 391
	351	[6084]	GETGLOBAL	R9 K15 ; R9 := 0x7b998233
	352	[6084]	GETGLOBAL	R10 K16 ; R10 := 0xbe190284
	353	[6084]	CALL     	R9 2 2 ; R9 := R9(R10)
	354	[6084]	TEST     	R9 1 ; if R9 then PC := 391
	355	[6084]	JMP      	391 ; PC := 391
	356	[6085]	OP_LOADBOOL	R9 0 0 ; R9 := false
	357	[6086]	GETUPVAL 	R10 U7 ; R10 := U7
	358	[6086]	GETTABLE 	R10 R10 K49 ; R10 := R10["isPvp"]
	359	[6086]	TEST     	R10 0 ; if not R10 then PC := 377
	360	[6086]	JMP      	377 ; PC := 377
	361	[6086]	GETGLOBAL	R10 K16 ; R10 := 0xbe190284
	362	[6086]	SELF     	R10 R10 K84 ; R11 := R10; R10 := R10[0xf2deaf69]
	363	[6086]	GETGLOBAL	R12 K93 ; R12 := gLotusPvpGameRulesType
	364	[6086]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	365	[6086]	TEST     	R10 0 ; if not R10 then PC := 377
	366	[6086]	JMP      	377 ; PC := 377
	367	[6087]	GETGLOBAL	R10 K16 ; R10 := 0xbe190284
	368	[6087]	SELF     	R10 R10 K94 ; R11 := R10; R10 := R10[0x529b110d]
	369	[6087]	CALL     	R10 2 2 ; R10 := R10(R11)
	370	[6088]	EQ       	1 R10 K95 ; if R10 == 6.000000 then PC := 374
	371	[6088]	JMP      	374 ; PC := 374
	372	[6088]	EQ       	0 R10 K96 ; if R10 ~= 3.000000 then PC := 375
	373	[6088]	JMP      	375 ; PC := 375
	374	[6088]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 375
	375	[6088]	OP_LOADBOOL	R9 1 0 ; R9 := true
	376	[6088]	JMP      	383 ; PC := 383
	377	[6090]	TESTSET  	R9 R0 0 ; if not R0 then PC := 383 else R9 := R0 
	378	[6090]	JMP      	383 ; PC := 383
	379	[6090]	GETGLOBAL	R11 K16 ; R11 := 0xbe190284
	380	[6090]	SELF     	R11 R11 K17 ; R12 := R11; R11 := R11[0x31e985af]
	381	[6090]	CALL     	R11 2 2 ; R11 := R11(R12)
	382	[6090]	MOVE     	R9 R11 ; R9 := R11
	383	[6092]	TEST     	R9 0 ; if not R9 then PC := 391
	384	[6092]	JMP      	391 ; PC := 391
	385	[6093]	GETGLOBAL	R11 K0 ; R11 := _T
	386	[6093]	GETUPVAL 	R12 U12 ; R12 := U12
	387	[6093]	GETTABLE 	R12 R12 K97 ; R12 := R12["QUICK_PREVIEW"]
	388	[6093]	SETTABLE 	R11 K88 R12 ; R11["eomScreenMode"] := R12
	389	[6094]	GETGLOBAL	R11 K0 ; R11 := _T
	390	[6094]	SETTABLE 	R11 K98 K99 ; R11["eomInputIgnored"] := false
	391	[6099]	GETGLOBAL	R11 K15 ; R11 := 0x7b998233
	392	[6099]	MOVE     	R12 R2 ; R12 := R2
	393	[6099]	CALL     	R11 2 2 ; R11 := R11(R12)
	394	[6099]	TEST     	R11 1 ; if R11 then PC := 402
	395	[6099]	JMP      	402 ; PC := 402
	396	[6099]	EQ       	1 R3 K100 ; if R3 == 18.000000 then PC := 400
	397	[6099]	JMP      	400 ; PC := 400
	398	[6099]	EQ       	0 R3 K101 ; if R3 ~= 11.000000 then PC := 402
	399	[6099]	JMP      	402 ; PC := 402
	400	[6100]	OP_LOADBOOL	R11 0 0 ; R11 := false
	401	[6100]	SETGLOBALHASH	R11 K102 ; mShowDuringLoadingScreen := R11
	402	[6103]	GETGLOBAL	R11 K102 ; R11 := mShowDuringLoadingScreen
	403	[6103]	TEST     	R11 0 ; if not R11 then PC := 436
	404	[6103]	JMP      	436 ; PC := 436
	405	[6103]	GETGLOBAL	R11 K0 ; R11 := _T
	406	[6103]	GETTABLE 	R11 R11 K88 ; R11 := R11["eomScreenMode"]
	407	[6103]	GETUPVAL 	R12 U12 ; R12 := U12
	408	[6103]	GETTABLE 	R12 R12 K89 ; R12 := R12["ACTUAL_EOM"]
	409	[6103]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 436
	410	[6103]	JMP      	436 ; PC := 436
	411	[6103]	GETUPVAL 	R11 U7 ; R11 := U7
	412	[6103]	GETTABLE 	R11 R11 K49 ; R11 := R11["isPvp"]
	413	[6103]	TEST     	R11 1 ; if R11 then PC := 436
	414	[6103]	JMP      	436 ; PC := 436
	415	[6104]	GETGLOBAL	R11 K3 ; R11 := 0xae91e43b
	416	[6104]	SELF     	R11 R11 K103 ; R12 := R11; R11 := R11[0x78f32995]
	417	[6104]	OP_LOADBOOL	R13 1 0 ; R13 := true
	418	[6104]	CALL     	R11 3 1 ; R11(R12,R13)
	419	[6105]	GETGLOBAL	R11 K3 ; R11 := 0xae91e43b
	420	[6105]	SELF     	R11 R11 K104 ; R12 := R11; R11 := R11[0x85b5d288]
	421	[6105]	OP_LOADBOOL	R13 0 0 ; R13 := false
	422	[6105]	CALL     	R11 3 1 ; R11(R12,R13)
	423	[6106]	GETGLOBAL	R11 K15 ; R11 := 0x7b998233
	424	[6106]	GETGLOBAL	R12 K81 ; R12 := mPvpMovie
	425	[6106]	CALL     	R11 2 2 ; R11 := R11(R12)
	426	[6106]	TEST     	R11 1 ; if R11 then PC := 436
	427	[6106]	JMP      	436 ; PC := 436
	428	[6107]	GETGLOBAL	R11 K81 ; R11 := mPvpMovie
	429	[6107]	SELF     	R11 R11 K103 ; R12 := R11; R11 := R11[0x78f32995]
	430	[6107]	OP_LOADBOOL	R13 1 0 ; R13 := true
	431	[6107]	CALL     	R11 3 1 ; R11(R12,R13)
	432	[6108]	GETGLOBAL	R11 K81 ; R11 := mPvpMovie
	433	[6108]	SELF     	R11 R11 K104 ; R12 := R11; R11 := R11[0x85b5d288]
	434	[6108]	OP_LOADBOOL	R13 0 0 ; R13 := false
	435	[6108]	CALL     	R11 3 1 ; R11(R12,R13)
	436	[6112]	GETGLOBAL	R11 K0 ; R11 := _T
	437	[6112]	GETTABLE 	R11 R11 K88 ; R11 := R11["eomScreenMode"]
	438	[6112]	GETUPVAL 	R12 U12 ; R12 := U12
	439	[6112]	GETTABLE 	R12 R12 K89 ; R12 := R12["ACTUAL_EOM"]
	440	[6112]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 443
	441	[6112]	JMP      	443 ; PC := 443
	442	[6112]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 443
	443	[6112]	OP_LOADBOOL	R11 1 0 ; R11 := true
	444	[6113]	GETUPVAL 	R12 U13 ; R12 := U13
	445	[6113]	CALL     	R12 1 1 ; R12()
	446	[6116]	GETGLOBAL	R12 K105 ; R12 := 0x89326c93
	447	[6116]	SELF     	R12 R12 K106 ; R13 := R12; R12 := R12[0x18d05d30]
	448	[6116]	CALL     	R12 2 2 ; R12 := R12(R13)
	449	[6117]	TEST     	R12 1 ; if R12 then PC := 469
	450	[6117]	JMP      	469 ; PC := 469
	451	[6117]	TEST     	R11 0 ; if not R11 then PC := 469
	452	[6117]	JMP      	469 ; PC := 469
	453	[6118]	OP_LOADBOOL	R13 0 0 ; R13 := false
	454	[6118]	SETGLOBALHASH	R13 K107 ; mMedalsValidated := R13
	455	[6119]	LOADK    	R13 := 1.000000
	456	[6119]	GETGLOBAL	R14 K108 ; R14 := mMaxPlayers
	457	[6119]	LOADK    	R15 := 1.000000
	458	[6119]	FORPREP  	R13 468 ; R13 -= R15; PC := 468
	459	[6120]	LOADK    	R17 K109 ; R17 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
	460	[6120]	MOVE     	R18 R16 ; R18 := R16
	461	[6120]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	462	[6121]	GETGLOBAL	R18 K3 ; R18 := 0xae91e43b
	463	[6121]	SELF     	R18 R18 K13 ; R19 := R18; R18 := R18[0x67bc869f]
	464	[6121]	MOVE     	R20 R17 ; R20 := R17
	465	[6121]	LOADK    	R21 := 10.000000
	466	[6121]	LOADK    	R22 := 0.000000
	467	[6121]	CALL     	R18 5 1 ; R18(R19,R20,R21,R22)
	468	[6119]	FORLOOP  	R13 459 ; R13 += R15; if R13 <= R14 then begin PC := 459; R16 := R13 end
	469	[6125]	TESTSET  	R18 R11 0 ; if not R11 then PC := 474 else R18 := R11 
	470	[6125]	JMP      	474 ; PC := 474
	471	[6125]	GETGLOBAL	R18 K15 ; R18 := 0x7b998233
	472	[6125]	GETGLOBAL	R19 K81 ; R19 := mPvpMovie
	473	[6125]	CALL     	R18 2 2 ; R18 := R18(R19)
	474	[6125]	SETGLOBALHASH	R18 K110 ; mWaitingForMissionComplete := R18
	475	[6126]	GETGLOBAL	R18 K110 ; R18 := mWaitingForMissionComplete
	476	[6126]	TEST     	R18 0 ; if not R18 then PC := 497
	477	[6126]	JMP      	497 ; PC := 497
	478	[6127]	GETGLOBAL	R18 K3 ; R18 := 0xae91e43b
	479	[6127]	SELF     	R18 R18 K13 ; R19 := R18; R18 := R18[0x67bc869f]
	480	[6127]	LOADK    	R20 K111 ; R20 := "TopAnchor.Header"
	481	[6127]	LOADK    	R21 := 10.000000
	482	[6127]	LOADK    	R22 := 0.000000
	483	[6127]	CALL     	R18 5 1 ; R18(R19,R20,R21,R22)
	484	[6128]	GETGLOBAL	R18 K112 ; R18 := 0x38f10e85
	485	[6128]	GETGLOBAL	R19 K3 ; R19 := 0xae91e43b
	486	[6128]	LOADK    	R20 K113 ; R20 := "MissionComplete.gotoAndStop"
	487	[6128]	LOADK    	R21 K114 ; R21 := "2"
	488	[6128]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	489	[6129]	GETUPVAL 	R18 U0 ; R18 := U0
	490	[6129]	GETTABLE 	R18 R18 K115 ; R18 := R18[0x56d89411]
	491	[6129]	OP_LOADBOOL	R19 1 0 ; R19 := true
	492	[6129]	CALL     	R18 2 1 ; R18(R19)
	493	[6130]	GETGLOBAL	R18 K3 ; R18 := 0xae91e43b
	494	[6130]	SELF     	R18 R18 K86 ; R19 := R18; R18 := R18[0xbed40e9c]
	495	[6130]	OP_LOADBOOL	R20 1 0 ; R20 := true
	496	[6130]	CALL     	R18 3 1 ; R18(R19,R20)
	497	[6133]	TEST     	R11 1 ; if R11 then PC := 501
	498	[6133]	JMP      	501 ; PC := 501
	499	[6133]	TEST     	R0 1 ; if R0 then PC := 522
	500	[6133]	JMP      	522 ; PC := 522
	501	[6134]	GETGLOBAL	R18 K116 ; R18 := 0x76ea806b
	502	[6134]	SELF     	R18 R18 K117 ; R19 := R18; R18 := R18[0x3f3ae64c]
	503	[6134]	LOADK    	R20 := 0.000000
	504	[6134]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	505	[6135]	GETGLOBAL	R19 K15 ; R19 := 0x7b998233
	506	[6135]	MOVE     	R20 R18 ; R20 := R18
	507	[6135]	CALL     	R19 2 2 ; R19 := R19(R20)
	508	[6135]	TEST     	R19 0 ; if not R19 then PC := 511
	509	[6135]	JMP      	511 ; PC := 511
	510	[6136]	RETURN   	R0 1 ; return 
	511	[6138]	SELF     	R19 R18 K118 ; R20 := R18; R19 := R18[0x40e9c32b]
	512	[6138]	CALL     	R19 2 2 ; R19 := R19(R20)
	513	[6139]	SELF     	R20 R19 K119 ; R21 := R19; R20 := R19[0xbaca14fc]
	514	[6139]	CALL     	R20 2 2 ; R20 := R20(R21)
	515	[6141]	DIV      	R21 R20 K120 ; R21 := R20 / 2.000000
	516	[6141]	LE       	1 K121 R21 ; if 1.000000 <= R21 then PC := 519
	517	[6141]	JMP      	519 ; PC := 519
	518	[6141]	OP_LOADBOOL	R21 0 1 ; R21 := false; PC := 519
	519	[6141]	OP_LOADBOOL	R21 1 0 ; R21 := true
	520	[6141]	SETUPVAL 	R21 U14 ; U14 := R21
	521	[6141]	JMP      	524 ; PC := 524
	522	[6143]	OP_LOADBOOL	R21 1 0 ; R21 := true
	523	[6143]	SETUPVAL 	R21 U14 ; U14 := R21
	524	[6146]	GETUPVAL 	R21 U7 ; R21 := U7
	525	[6146]	GETTABLE 	R21 R21 K49 ; R21 := R21["isPvp"]
	526	[6146]	TEST     	R21 0 ; if not R21 then PC := 556
	527	[6146]	JMP      	556 ; PC := 556
	528	[6147]	GETUPVAL 	R21 U15 ; R21 := U15
	529	[6147]	CALL     	R21 1 1 ; R21()
	530	[6148]	LOADK    	R21 := 25.000000
	531	[6148]	SETGLOBALHASH	R21 K24 ; AUTO_CLOSE_DELAY := R21
	532	[6150]	GETGLOBAL	R21 K0 ; R21 := _T
	533	[6150]	GETTABLE 	R21 R21 K88 ; R21 := R21["eomScreenMode"]
	534	[6150]	GETUPVAL 	R22 U12 ; R22 := U12
	535	[6150]	GETTABLE 	R22 R22 K89 ; R22 := R22["ACTUAL_EOM"]
	536	[6150]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 561
	537	[6150]	JMP      	561 ; PC := 561
	538	[6150]	GETGLOBAL	R21 K0 ; R21 := _T
	539	[6150]	GETTABLE 	R21 R21 K122 ; R21 := R21["TopMenuOpen"]
	540	[6150]	TEST     	R21 0 ; if not R21 then PC := 561
	541	[6150]	JMP      	561 ; PC := 561
	542	[6152]	GETGLOBAL	R21 K29 ; R21 := 0x9ba7909f
	543	[6152]	SELF     	R21 R21 K32 ; R22 := R21; R21 := R21[0xbcfb64ab]
	544	[6152]	GETGLOBAL	R23 K91 ; R23 := 0x6a400c4e
	545	[6152]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	546	[6153]	GETGLOBAL	R22 K15 ; R22 := 0x7b998233
	547	[6153]	MOVE     	R23 R21 ; R23 := R21
	548	[6153]	CALL     	R22 2 2 ; R22 := R22(R23)
	549	[6153]	TEST     	R22 1 ; if R22 then PC := 561
	550	[6153]	JMP      	561 ; PC := 561
	551	[6154]	SELF     	R22 R21 K33 ; R23 := R21; R22 := R21[0xe4162eed]
	552	[6154]	LOADK    	R24 K123 ; R24 := "ForceClose"
	553	[6154]	LOADK    	R25 K35 ; R25 := ""
	554	[6154]	CALL     	R22 4 1 ; R22(R23,R24,R25)
	555	[6156]	JMP      	561 ; PC := 561
	556	[6157]	GETUPVAL 	R22 U11 ; R22 := U11
	557	[6157]	EQ       	1 R22 K35 ; if R22 == "" then PC := 561
	558	[6157]	JMP      	561 ; PC := 561
	559	[6158]	LOADK    	R22 := 14.000000
	560	[6158]	SETGLOBALHASH	R22 K24 ; AUTO_CLOSE_DELAY := R22
	561	[6161]	GETGLOBAL	R22 K3 ; R22 := 0xae91e43b
	562	[6161]	SELF     	R22 R22 K124 ; R23 := R22; R22 := R22[0xaa503602]
	563	[6161]	OP_LOADBOOL	R24 0 0 ; R24 := false
	564	[6161]	CALL     	R22 3 1 ; R22(R23,R24)
	565	[6163]	GETGLOBAL	R22 K3 ; R22 := 0xae91e43b
	566	[6163]	SELF     	R22 R22 K125 ; R23 := R22; R22 := R22[0x2d6bad65]
	567	[6163]	GETGLOBAL	R24 K11 ; R24 := 0x0032441c
	568	[6163]	GETTABLE 	R24 R24 K126 ; R24 := R24["UIMaterial_Plain"]
	569	[6163]	CALL     	R22 3 1 ; R22(R23,R24)
	570	[6165]	TEST     	R0 1 ; if R0 then PC := 578
	571	[6165]	JMP      	578 ; PC := 578
	572	[6166]	GETUPVAL 	R22 U16 ; R22 := U16
	573	[6166]	GETTABLE 	R22 R22 K127 ; R22 := R22[0x659d451f]
	574	[6166]	GETGLOBAL	R23 K11 ; R23 := 0x0032441c
	575	[6166]	GETTABLE 	R23 R23 K128 ; R23 := R23["UISound_GridOpen"]
	576	[6166]	CALL     	R22 2 1 ; R22(R23)
	577	[6166]	JMP      	611 ; PC := 611
	578	[6168]	GETGLOBAL	R22 K3 ; R22 := 0xae91e43b
	579	[6168]	SELF     	R22 R22 K129 ; R23 := R22; R22 := R22[0x767c0947]
	580	[6168]	OP_LOADBOOL	R24 1 0 ; R24 := true
	581	[6168]	CALL     	R22 3 1 ; R22(R23,R24)
	582	[6170]	GETGLOBAL	R22 K105 ; R22 := 0x89326c93
	583	[6170]	SELF     	R22 R22 K106 ; R23 := R22; R22 := R22[0x18d05d30]
	584	[6170]	CALL     	R22 2 2 ; R22 := R22(R23)
	585	[6170]	TEST     	R22 0 ; if not R22 then PC := 611
	586	[6170]	JMP      	611 ; PC := 611
	587	[6171]	TEST     	R11 0 ; if not R11 then PC := 611
	588	[6171]	JMP      	611 ; PC := 611
	589	[6172]	GETUPVAL 	R22 U17 ; R22 := U17
	590	[6172]	CALL     	R22 1 2 ; R22 := R22()
	591	[6172]	TEST     	R22 0 ; if not R22 then PC := 597
	592	[6172]	JMP      	597 ; PC := 597
	593	[6172]	GETGLOBAL	R22 K0 ; R22 := _T
	594	[6172]	GETTABLE 	R22 R22 K130 ; R22 := R22["EndlessExtermination_ForceEomForAll"]
	595	[6172]	TEST     	R22 1 ; if R22 then PC := 611
	596	[6172]	JMP      	611 ; PC := 611
	597	[6173]	GETUPVAL 	R22 U2 ; R22 := U2
	598	[6173]	CALL     	R22 1 2 ; R22 := R22()
	599	[6173]	TEST     	R22 1 ; if R22 then PC := 611
	600	[6173]	JMP      	611 ; PC := 611
	601	[6175]	GETGLOBAL	R22 K105 ; R22 := 0x89326c93
	602	[6175]	SELF     	R22 R22 K131 ; R23 := R22; R22 := R22[0x29ef273d]
	603	[6175]	CALL     	R22 2 2 ; R22 := R22(R23)
	604	[6176]	SELF     	R23 R22 K132 ; R24 := R22; R23 := R22[0x66905cb0]
	605	[6176]	CALL     	R23 2 2 ; R23 := R23(R24)
	606	[6176]	SELF     	R23 R23 K133 ; R24 := R23; R23 := R23[0x383d2e7d]
	607	[6176]	OP_LOADBOOL	R25 0 0 ; R25 := false
	608	[6176]	CALL     	R23 3 1 ; R23(R24,R25)
	609	[6177]	SELF     	R23 R22 K134 ; R24 := R22; R23 := R22[0xbe2e8ea1]
	610	[6177]	CALL     	R23 2 1 ; R23(R24)
	611	[6181]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	612	[6181]	SELF     	R23 R23 K74 ; R24 := R23; R23 := R23[0x5f56eeab]
	613	[6181]	LOADK    	R25 K135 ; R25 := "MainMenu.Label"
	614	[6181]	LOADK    	R26 := 29.000000
	615	[6181]	LOADK    	R27 K136 ; R27 := "MAIN MENU"
	616	[6181]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	617	[6182]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	618	[6182]	SELF     	R23 R23 K137 ; R24 := R23; R23 := R23[0x0c33ebb2]
	619	[6182]	LOADK    	R25 K138 ; R25 := "MainMenu"
	620	[6182]	LOADK    	R26 K139 ; R26 := "callback"
	621	[6182]	LOADK    	R27 K138 ; R27 := "MainMenu"
	622	[6182]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	623	[6183]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	624	[6183]	SELF     	R23 R23 K8 ; R24 := R23; R23 := R23[0xaade900e]
	625	[6183]	LOADK    	R25 K138 ; R25 := "MainMenu"
	626	[6183]	LOADK    	R26 := 11.000000
	627	[6183]	OP_LOADBOOL	R27 0 0 ; R27 := false
	628	[6183]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	629	[6184]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	630	[6184]	SELF     	R23 R23 K13 ; R24 := R23; R23 := R23[0x67bc869f]
	631	[6184]	LOADK    	R25 K140 ; R25 := "ExpandableArea"
	632	[6184]	LOADK    	R26 := 1.000000
	633	[6184]	LOADK    	R27 := 1600.000000
	634	[6184]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	635	[6186]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	636	[6186]	SELF     	R23 R23 K141 ; R24 := R23; R23 := R23[0x1e5b5cfe]
	637	[6186]	LOADK    	R25 K142 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn"
	638	[6186]	LOADK    	R26 K143 ; R26 := "PreviewDiorama"
	639	[6186]	LOADK    	R27 K144 ; R27 := "EndDioramaPreview"
	640	[6186]	LOADNIL  	R28 R29 ; R28 := R29 := nil
	641	[6186]	CALL     	R23 7 1 ; R23(R24,R25,R26,R27,R28,R29)
	642	[6187]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	643	[6187]	SELF     	R23 R23 K141 ; R24 := R23; R23 := R23[0x1e5b5cfe]
	644	[6187]	LOADK    	R25 K145 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Btn"
	645	[6187]	LOADK    	R26 K146 ; R26 := "ExpandFocused"
	646	[6187]	LOADK    	R27 K147 ; R27 := "ExpandUnfocused"
	647	[6187]	LOADNIL  	R28 R28 ; R28 := nil
	648	[6187]	LOADK    	R29 K148 ; R29 := "ExpandPressed"
	649	[6187]	CALL     	R23 7 1 ; R23(R24,R25,R26,R27,R28,R29)
	650	[6188]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	651	[6188]	SELF     	R23 R23 K149 ; R24 := R23; R23 := R23[0x5ee2cc30]
	652	[6188]	LOADK    	R25 K150 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow"
	653	[6188]	LOADK    	R26 K151 ; R26 := "OnExpandArrowFrameEnter"
	654	[6188]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	655	[6189]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	656	[6189]	SELF     	R23 R23 K149 ; R24 := R23; R23 := R23[0x5ee2cc30]
	657	[6189]	LOADK    	R25 K152 ; R25 := "MissionComplete.TextAnim"
	658	[6189]	LOADK    	R26 K153 ; R26 := "OnTextAnimFrameEnter"
	659	[6189]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	660	[6191]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	661	[6191]	SELF     	R23 R23 K154 ; R24 := R23; R23 := R23[0xd5181643]
	662	[6191]	LOADK    	R25 K155 ; R25 := "ExpandableArea.Progression.Lines.Mid"
	663	[6191]	GETGLOBAL	R26 K156 ; R26 := 0x5dcb0a6f
	664	[6191]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	665	[6192]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	666	[6192]	SELF     	R23 R23 K154 ; R24 := R23; R23 := R23[0xd5181643]
	667	[6192]	LOADK    	R25 K157 ; R25 := "ExpandableArea.Progression.Lines.LeftCorner"
	668	[6192]	GETGLOBAL	R26 K156 ; R26 := 0x5dcb0a6f
	669	[6192]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	670	[6193]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	671	[6193]	SELF     	R23 R23 K154 ; R24 := R23; R23 := R23[0xd5181643]
	672	[6193]	LOADK    	R25 K158 ; R25 := "ExpandableArea.Progression.Lines.RightCorner"
	673	[6193]	GETGLOBAL	R26 K156 ; R26 := 0x5dcb0a6f
	674	[6193]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	675	[6194]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	676	[6194]	SELF     	R23 R23 K154 ; R24 := R23; R23 := R23[0xd5181643]
	677	[6194]	LOADK    	R25 K159 ; R25 := "ExpandableArea.Progression.Lines.LeftSide"
	678	[6194]	GETGLOBAL	R26 K156 ; R26 := 0x5dcb0a6f
	679	[6194]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	680	[6195]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	681	[6195]	SELF     	R23 R23 K154 ; R24 := R23; R23 := R23[0xd5181643]
	682	[6195]	LOADK    	R25 K160 ; R25 := "ExpandableArea.Progression.Lines.RightSide"
	683	[6195]	GETGLOBAL	R26 K156 ; R26 := 0x5dcb0a6f
	684	[6195]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	685	[6197]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	686	[6197]	SELF     	R23 R23 K154 ; R24 := R23; R23 := R23[0xd5181643]
	687	[6197]	LOADK    	R25 K161 ; R25 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Mid"
	688	[6197]	GETGLOBAL	R26 K162 ; R26 := 0xea90a9b2
	689	[6197]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	690	[6198]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	691	[6198]	SELF     	R23 R23 K154 ; R24 := R23; R23 := R23[0xd5181643]
	692	[6198]	LOADK    	R25 K163 ; R25 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.LeftSwoop"
	693	[6198]	GETGLOBAL	R26 K162 ; R26 := 0xea90a9b2
	694	[6198]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	695	[6199]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	696	[6199]	SELF     	R23 R23 K154 ; R24 := R23; R23 := R23[0xd5181643]
	697	[6199]	LOADK    	R25 K164 ; R25 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.RightSwoop"
	698	[6199]	GETGLOBAL	R26 K162 ; R26 := 0xea90a9b2
	699	[6199]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	700	[6200]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	701	[6200]	SELF     	R23 R23 K154 ; R24 := R23; R23 := R23[0xd5181643]
	702	[6200]	LOADK    	R25 K165 ; R25 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Left"
	703	[6200]	GETGLOBAL	R26 K162 ; R26 := 0xea90a9b2
	704	[6200]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	705	[6201]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	706	[6201]	SELF     	R23 R23 K154 ; R24 := R23; R23 := R23[0xd5181643]
	707	[6201]	LOADK    	R25 K166 ; R25 := "ExpandableArea.Progression.Affinity.MissionTime.Lines.Right"
	708	[6201]	GETGLOBAL	R26 K162 ; R26 := 0xea90a9b2
	709	[6201]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	710	[6203]	GETUPVAL 	R23 U18 ; R23 := U18
	711	[6203]	CALL     	R23 1 2 ; R23 := R23()
	712	[6203]	TEST     	R23 1 ; if R23 then PC := 716
	713	[6203]	JMP      	716 ; PC := 716
	714	[6203]	TEST     	R11 0 ; if not R11 then PC := 723
	715	[6203]	JMP      	723 ; PC := 723
	716	[6204]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	717	[6204]	SELF     	R23 R23 K8 ; R24 := R23; R23 := R23[0xaade900e]
	718	[6204]	LOADK    	R25 K142 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn"
	719	[6204]	LOADK    	R26 := 11.000000
	720	[6204]	OP_LOADBOOL	R27 0 0 ; R27 := false
	721	[6204]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	722	[6204]	JMP      	745 ; PC := 745
	723	[6206]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	724	[6206]	SELF     	R23 R23 K74 ; R24 := R23; R23 := R23[0x5f56eeab]
	725	[6206]	LOADK    	R25 K167 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconLabel"
	726	[6206]	LOADK    	R26 := 29.000000
	727	[6206]	GETGLOBAL	R27 K3 ; R27 := 0xae91e43b
	728	[6206]	SELF     	R27 R27 K168 ; R28 := R27; R27 := R27[0x42b04007]
	729	[6206]	LOADK    	R29 K169 ; R29 := "<PREVIEW>"
	730	[6206]	OP_LOADBOOL	R30 1 0 ; R30 := true
	731	[6206]	CALL     	R27 4 0 ; R27,... := R27(R28,R29,R30)
	732	[6206]	CALL     	R23 0 1 ; R23(R24,...)
	733	[6207]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	734	[6207]	SELF     	R23 R23 K13 ; R24 := R23; R23 := R23[0x67bc869f]
	735	[6207]	LOADK    	R25 K167 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconLabel"
	736	[6207]	LOADK    	R26 := 10.000000
	737	[6207]	LOADK    	R27 := 60.000000
	738	[6207]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	739	[6208]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	740	[6208]	SELF     	R23 R23 K13 ; R24 := R23; R23 := R23[0x67bc869f]
	741	[6208]	LOADK    	R25 K170 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.PreviewBtn.IconBacker"
	742	[6208]	LOADK    	R26 := 10.000000
	743	[6208]	GETGLOBAL	R27 K171 ; R27 := BACKER_ALPHA
	744	[6208]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	745	[6211]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	746	[6211]	SELF     	R23 R23 K13 ; R24 := R23; R23 := R23[0x67bc869f]
	747	[6211]	LOADK    	R25 K150 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow"
	748	[6211]	LOADK    	R26 := 1.000000
	749	[6211]	LOADK    	R27 := 70.000000
	750	[6211]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	751	[6212]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	752	[6212]	SELF     	R23 R23 K8 ; R24 := R23; R23 := R23[0xaade900e]
	753	[6212]	LOADK    	R25 K150 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow"
	754	[6212]	LOADK    	R26 := 11.000000
	755	[6212]	OP_LOADBOOL	R27 0 0 ; R27 := false
	756	[6212]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	757	[6214]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	758	[6214]	SELF     	R23 R23 K13 ; R24 := R23; R23 := R23[0x67bc869f]
	759	[6214]	LOADK    	R25 K172 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.TopLine"
	760	[6214]	LOADK    	R26 := 1.000000
	761	[6214]	LOADK    	R27 := 70.000000
	762	[6214]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	763	[6215]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	764	[6215]	SELF     	R23 R23 K13 ; R24 := R23; R23 := R23[0x67bc869f]
	765	[6215]	LOADK    	R25 K173 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.TopLineRight"
	766	[6215]	LOADK    	R26 := 1.000000
	767	[6215]	LOADK    	R27 := 70.000000
	768	[6215]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	769	[6216]	GETGLOBAL	R23 K3 ; R23 := 0xae91e43b
	770	[6216]	SELF     	R23 R23 K13 ; R24 := R23; R23 := R23[0x67bc869f]
	771	[6216]	LOADK    	R25 K174 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
	772	[6216]	LOADK    	R26 := 1.000000
	773	[6216]	LOADK    	R27 := 0.000000
	774	[6216]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	775	[6218]	GETGLOBAL	R23 K112 ; R23 := 0x38f10e85
	776	[6218]	GETGLOBAL	R24 K3 ; R24 := 0xae91e43b
	777	[6218]	LOADK    	R25 K175 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.gotoAndStop"
	778	[6218]	LOADK    	R26 K176 ; R26 := "1"
	779	[6218]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	780	[6219]	GETGLOBAL	R23 K112 ; R23 := 0x38f10e85
	781	[6219]	GETGLOBAL	R24 K3 ; R24 := 0xae91e43b
	782	[6219]	LOADK    	R25 K177 ; R25 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross.gotoAndStop"
	783	[6219]	LOADK    	R26 K176 ; R26 := "1"
	784	[6219]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	785	[6221]	GETGLOBAL	R23 K15 ; R23 := 0x7b998233
	786	[6221]	GETGLOBAL	R24 K16 ; R24 := 0xbe190284
	787	[6221]	CALL     	R23 2 2 ; R23 := R23(R24)
	788	[6221]	TEST     	R23 1 ; if R23 then PC := 814
	789	[6221]	JMP      	814 ; PC := 814
	790	[6222]	GETGLOBAL	R23 K16 ; R23 := 0xbe190284
	791	[6222]	SELF     	R23 R23 K178 ; R24 := R23; R23 := R23[0x33307f92]
	792	[6222]	CALL     	R23 2 2 ; R23 := R23(R24)
	793	[6223]	GETGLOBAL	R24 K15 ; R24 := 0x7b998233
	794	[6223]	MOVE     	R25 R23 ; R25 := R23
	795	[6223]	CALL     	R24 2 2 ; R24 := R24(R25)
	796	[6223]	TEST     	R24 1 ; if R24 then PC := 814
	797	[6223]	JMP      	814 ; PC := 814
	798	[6223]	TEST     	R11 0 ; if not R11 then PC := 814
	799	[6223]	JMP      	814 ; PC := 814
	800	[6223]	TEST     	R0 0 ; if not R0 then PC := 814
	801	[6223]	JMP      	814 ; PC := 814
	802	[6225]	GETUPVAL 	R24 U2 ; R24 := U2
	803	[6225]	CALL     	R24 1 2 ; R24 := R24()
	804	[6225]	TEST     	R24 1 ; if R24 then PC := 809
	805	[6225]	JMP      	809 ; PC := 809
	806	[6226]	SELF     	R24 R23 K83 ; R25 := R23; R24 := R23[0x368ad758]
	807	[6226]	OP_LOADBOOL	R26 0 0 ; R26 := false
	808	[6226]	CALL     	R24 3 1 ; R24(R25,R26)
	809	[6229]	GETGLOBAL	R24 K16 ; R24 := 0xbe190284
	810	[6229]	SELF     	R24 R24 K179 ; R25 := R24; R24 := R24[0x603d0ebe]
	811	[6229]	CALL     	R24 2 1 ; R24(R25)
	812	[6230]	GETGLOBAL	R24 K0 ; R24 := _T
	813	[6230]	SETTABLE 	R24 K180 K39 ; R24["MissionEnded"] := true
	814	[6234]	GETGLOBAL	R24 K15 ; R24 := 0x7b998233
	815	[6234]	GETGLOBAL	R25 K181 ; R25 := mCountdownMessage
	816	[6234]	CALL     	R24 2 2 ; R24 := R24(R25)
	817	[6234]	TEST     	R24 0 ; if not R24 then PC := 856
	818	[6234]	JMP      	856 ; PC := 856
	819	[6235]	GETUPVAL 	R24 U7 ; R24 := U7
	820	[6235]	GETTABLE 	R24 R24 K49 ; R24 := R24["isPvp"]
	821	[6235]	TEST     	R24 0 ; if not R24 then PC := 850
	822	[6235]	JMP      	850 ; PC := 850
	823	[6236]	GETUPVAL 	R24 U7 ; R24 := U7
	824	[6236]	GETTABLE 	R24 R24 K182 ; R24 := R24["pvpType"]
	825	[6236]	EQ       	0 R24 K183 ; if R24 ~= 4.000000 then PC := 843
	826	[6236]	JMP      	843 ; PC := 843
	827	[6237]	TEST     	R11 0 ; if not R11 then PC := 836
	828	[6237]	JMP      	836 ; PC := 836
	829	[6238]	GETGLOBAL	R24 K3 ; R24 := 0xae91e43b
	830	[6238]	SELF     	R24 R24 K168 ; R25 := R24; R24 := R24[0x42b04007]
	831	[6238]	LOADK    	R26 K184 ; R26 := "/Lotus/Language/Menu/NextRoundTime"
	832	[6238]	OP_LOADBOOL	R27 0 0 ; R27 := false
	833	[6238]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	834	[6238]	SETGLOBALHASH	R24 K181 ; mCountdownMessage := R24
	835	[6238]	JMP      	856 ; PC := 856
	836	[6240]	GETGLOBAL	R24 K3 ; R24 := 0xae91e43b
	837	[6240]	SELF     	R24 R24 K168 ; R25 := R24; R24 := R24[0x42b04007]
	838	[6240]	LOADK    	R26 K185 ; R26 := "/Lotus/Language/Menu/NextHalfTime"
	839	[6240]	OP_LOADBOOL	R27 0 0 ; R27 := false
	840	[6240]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	841	[6240]	SETGLOBALHASH	R24 K181 ; mCountdownMessage := R24
	842	[6241]	JMP      	856 ; PC := 856
	843	[6243]	GETGLOBAL	R24 K3 ; R24 := 0xae91e43b
	844	[6243]	SELF     	R24 R24 K168 ; R25 := R24; R24 := R24[0x42b04007]
	845	[6243]	LOADK    	R26 K184 ; R26 := "/Lotus/Language/Menu/NextRoundTime"
	846	[6243]	OP_LOADBOOL	R27 0 0 ; R27 := false
	847	[6243]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	848	[6243]	SETGLOBALHASH	R24 K181 ; mCountdownMessage := R24
	849	[6244]	JMP      	856 ; PC := 856
	850	[6247]	GETGLOBAL	R24 K3 ; R24 := 0xae91e43b
	851	[6247]	SELF     	R24 R24 K168 ; R25 := R24; R24 := R24[0x42b04007]
	852	[6247]	LOADK    	R26 K186 ; R26 := "/Lotus/Language/Menu/EndOfMission_ReturnToMainMenu"
	853	[6247]	OP_LOADBOOL	R27 0 0 ; R27 := false
	854	[6247]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	855	[6247]	SETGLOBALHASH	R24 K181 ; mCountdownMessage := R24
	856	[6251]	GETUPVAL 	R24 U19 ; R24 := U19
	857	[6251]	CALL     	R24 1 1 ; R24()
	858	[6253]	GETGLOBAL	R24 K3 ; R24 := 0xae91e43b
	859	[6253]	SELF     	R24 R24 K187 ; R25 := R24; R24 := R24[0xef99134f]
	860	[6253]	LOADK    	R26 K188 ; R26 := "ExpandableArea.Progression.Tile"
	861	[6253]	GETGLOBAL	R27 K189 ; R27 := 0x2e279a6d
	862	[6253]	GETGLOBAL	R28 K156 ; R28 := 0x5dcb0a6f
	863	[6253]	CALL     	R24 5 1 ; R24(R25,R26,R27,R28)
	864	[6255]	TEST     	R0 1 ; if R0 then PC := 872
	865	[6255]	JMP      	872 ; PC := 872
	866	[6255]	GETGLOBAL	R24 K0 ; R24 := _T
	867	[6255]	GETTABLE 	R24 R24 K88 ; R24 := R24["eomScreenMode"]
	868	[6255]	GETUPVAL 	R25 U12 ; R25 := U12
	869	[6255]	GETTABLE 	R25 R25 K92 ; R25 := R25["DETAILED_PREVIEW"]
	870	[6255]	EQ       	0 R24 R25 ; if R24 ~= R25 then PC := 894
	871	[6255]	JMP      	894 ; PC := 894
	872	[6256]	LOADK    	R24 := 1.000000
	873	[6256]	LOADK    	R25 := 9.000000
	874	[6256]	LOADK    	R26 := 1.000000
	875	[6256]	FORPREP  	R24 893 ; R24 -= R26; PC := 893
	876	[6257]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	877	[6257]	SELF     	R28 R28 K154 ; R29 := R28; R28 := R28[0xd5181643]
	878	[6257]	LOADK    	R30 K190 ; R30 := "ExpandableArea.Progression.Affinity.Grid.Item"
	879	[6257]	MOVE     	R31 R27 ; R31 := R27
	880	[6257]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	881	[6257]	GETGLOBAL	R31 K11 ; R31 := 0x0032441c
	882	[6257]	GETTABLE 	R31 R31 K191 ; R31 := R31["UIMaterial_SmoothEdgeNoDepthTest"]
	883	[6257]	CALL     	R28 4 1 ; R28(R29,R30,R31)
	884	[6258]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	885	[6258]	SELF     	R28 R28 K154 ; R29 := R28; R28 := R28[0xd5181643]
	886	[6258]	LOADK    	R30 K190 ; R30 := "ExpandableArea.Progression.Affinity.Grid.Item"
	887	[6258]	MOVE     	R31 R27 ; R31 := R27
	888	[6258]	LOADK    	R32 K192 ; R32 := ".Info"
	889	[6258]	CONCAT   	R30 R30 R32 ; R30 := R30 .. R31 .. R32
	890	[6258]	GETGLOBAL	R31 K11 ; R31 := 0x0032441c
	891	[6258]	GETTABLE 	R31 R31 K191 ; R31 := R31["UIMaterial_SmoothEdgeNoDepthTest"]
	892	[6258]	CALL     	R28 4 1 ; R28(R29,R30,R31)
	893	[6256]	FORLOOP  	R24 876 ; R24 += R26; if R24 <= R25 then begin PC := 876; R27 := R24 end
	894	[6262]	GETUPVAL 	R28 U20 ; R28 := U20
	895	[6262]	CALL     	R28 1 2 ; R28 := R28()
	896	[6262]	TEST     	R28 0 ; if not R28 then PC := 904
	897	[6262]	JMP      	904 ; PC := 904
	898	[6263]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	899	[6263]	SELF     	R28 R28 K13 ; R29 := R28; R28 := R28[0x67bc869f]
	900	[6263]	LOADK    	R30 K193 ; R30 := "TopAnchor.Header.Desc"
	901	[6263]	LOADK    	R31 := 10.000000
	902	[6263]	LOADK    	R32 := 0.000000
	903	[6263]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	904	[6266]	GETUPVAL 	R28 U18 ; R28 := U18
	905	[6266]	CALL     	R28 1 2 ; R28 := R28()
	906	[6266]	TEST     	R28 0 ; if not R28 then PC := 951
	907	[6266]	JMP      	951 ; PC := 951
	908	[6267]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	909	[6267]	SELF     	R28 R28 K8 ; R29 := R28; R28 := R28[0xaade900e]
	910	[6267]	LOADK    	R30 K174 ; R30 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
	911	[6267]	LOADK    	R31 := 11.000000
	912	[6267]	OP_LOADBOOL	R32 1 0 ; R32 := true
	913	[6267]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	914	[6268]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	915	[6268]	SELF     	R28 R28 K8 ; R29 := R28; R28 := R28[0xaade900e]
	916	[6268]	LOADK    	R30 K194 ; R30 := "ExpandableArea.Progression.Rewards.Categories"
	917	[6268]	LOADK    	R31 := 11.000000
	918	[6268]	OP_LOADBOOL	R32 0 0 ; R32 := false
	919	[6268]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	920	[6269]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	921	[6269]	SELF     	R28 R28 K8 ; R29 := R28; R28 := R28[0xaade900e]
	922	[6269]	LOADK    	R30 K195 ; R30 := "ExpandableArea.Progression.Rewards.SearchAndSort"
	923	[6269]	LOADK    	R31 := 11.000000
	924	[6269]	OP_LOADBOOL	R32 0 0 ; R32 := false
	925	[6269]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	926	[6270]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	927	[6270]	SELF     	R28 R28 K13 ; R29 := R28; R28 := R28[0x67bc869f]
	928	[6270]	LOADK    	R30 K196 ; R30 := "ExpandableArea.Progression.Rewards.Items"
	929	[6270]	LOADK    	R31 := 1.000000
	930	[6270]	LOADK    	R32 := -6.000000
	931	[6270]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	932	[6271]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	933	[6271]	SELF     	R28 R28 K13 ; R29 := R28; R28 := R28[0x67bc869f]
	934	[6271]	LOADK    	R30 K197 ; R30 := "ExpandableArea.Progression.Affinity.Grid"
	935	[6271]	LOADK    	R31 := 1.000000
	936	[6271]	LOADK    	R32 := -6.000000
	937	[6271]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	938	[6272]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	939	[6272]	SELF     	R28 R28 K13 ; R29 := R28; R28 := R28[0x67bc869f]
	940	[6272]	LOADK    	R30 K198 ; R30 := "ExpandableArea.Progression.Rewards.ScrollBar"
	941	[6272]	LOADK    	R31 := 1.000000
	942	[6272]	LOADK    	R32 := -70.000000
	943	[6272]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	944	[6273]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	945	[6273]	SELF     	R28 R28 K13 ; R29 := R28; R28 := R28[0x67bc869f]
	946	[6273]	LOADK    	R30 K199 ; R30 := "ExpandableArea.Progression.Affinity.ScrollBar"
	947	[6273]	LOADK    	R31 := 1.000000
	948	[6273]	LOADK    	R32 := -2.000000
	949	[6273]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	950	[6273]	JMP      	988 ; PC := 988
	951	[6275]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	952	[6275]	SELF     	R28 R28 K8 ; R29 := R28; R28 := R28[0xaade900e]
	953	[6275]	LOADK    	R30 K174 ; R30 := "ExpandableArea.PlayerInfo.PlayerBar.BotLine"
	954	[6275]	LOADK    	R31 := 11.000000
	955	[6275]	OP_LOADBOOL	R32 0 0 ; R32 := false
	956	[6275]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	957	[6276]	GETGLOBAL	R28 K0 ; R28 := _T
	958	[6276]	GETTABLE 	R28 R28 K88 ; R28 := R28["eomScreenMode"]
	959	[6276]	GETUPVAL 	R29 U12 ; R29 := U12
	960	[6276]	GETTABLE 	R29 R29 K92 ; R29 := R29["DETAILED_PREVIEW"]
	961	[6276]	EQ       	0 R28 R29 ; if R28 ~= R29 then PC := 971
	962	[6276]	JMP      	971 ; PC := 971
	963	[6277]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	964	[6277]	SELF     	R28 R28 K13 ; R29 := R28; R28 := R28[0x67bc869f]
	965	[6277]	LOADK    	R30 K14 ; R30 := "_root"
	966	[6277]	LOADK    	R31 := 10.000000
	967	[6277]	LOADK    	R32 := 100.000000
	968	[6277]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	969	[6278]	OP_LOADBOOL	R28 0 0 ; R28 := false
	970	[6278]	SETGLOBALHASH	R28 K200 ; mInputBlocked := R28
	971	[6281]	TEST     	R0 0 ; if not R0 then PC := 982
	972	[6281]	JMP      	982 ; PC := 982
	973	[6281]	GETGLOBAL	R28 K0 ; R28 := _T
	974	[6281]	GETTABLE 	R28 R28 K88 ; R28 := R28["eomScreenMode"]
	975	[6281]	GETUPVAL 	R29 U12 ; R29 := U12
	976	[6281]	GETTABLE 	R29 R29 K89 ; R29 := R29["ACTUAL_EOM"]
	977	[6281]	EQ       	1 R28 R29 ; if R28 == R29 then PC := 982
	978	[6281]	JMP      	982 ; PC := 982
	979	[6281]	OP_LOADBOOL	R28 0 0 ; R28 := false
	980	[6281]	TEST     	R28 0 ; if not R28 then PC := 988
	981	[6281]	JMP      	988 ; PC := 988
	982	[6282]	GETGLOBAL	R28 K3 ; R28 := 0xae91e43b
	983	[6282]	SELF     	R28 R28 K8 ; R29 := R28; R28 := R28[0xaade900e]
	984	[6282]	LOADK    	R30 K150 ; R30 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow"
	985	[6282]	LOADK    	R31 := 11.000000
	986	[6282]	OP_LOADBOOL	R32 1 0 ; R32 := true
	987	[6282]	CALL     	R28 5 1 ; R28(R29,R30,R31,R32)
	988	[6286]	GETGLOBAL	R28 K15 ; R28 := 0x7b998233
	989	[6286]	GETGLOBAL	R29 K201 ; R29 := mPlayerMissionInfo
	990	[6286]	CALL     	R28 2 2 ; R28 := R28(R29)
	991	[6286]	TEST     	R28 0 ; if not R28 then PC := 997
	992	[6286]	JMP      	997 ; PC := 997
	993	[6287]	GETGLOBAL	R28 K50 ; R28 := 0x6c97a788
	994	[6287]	GETTABLE 	R28 R28 K202 ; R28 := R28[0xc1495463]
	995	[6287]	CALL     	R28 1 2 ; R28 := R28()
	996	[6287]	SETGLOBALHASH	R28 K201 ; mPlayerMissionInfo := R28
	997	[6290]	GETUPVAL 	R28 U21 ; R28 := U21
	998	[6290]	MOVE     	R29 R0 ; R29 := R0
	999	[6290]	MOVE     	R30 R11 ; R30 := R11
	1000	[6290]	CALL     	R28 3 1 ; R28(R29,R30)
	1001	[6292]	GETUPVAL 	R28 U22 ; R28 := U22
	1002	[6292]	CALL     	R28 1 1 ; R28()
	1003	[6294]	OP_LOADBOOL	R28 0 0 ; R28 := false
	1004	[6295]	TEST     	R0 0 ; if not R0 then PC := 1010
	1005	[6295]	JMP      	1010 ; PC := 1010
	1006	[6296]	GETGLOBAL	R29 K16 ; R29 := 0xbe190284
	1007	[6296]	SELF     	R29 R29 K203 ; R30 := R29; R29 := R29[0x5d204145]
	1008	[6296]	CALL     	R29 2 2 ; R29 := R29(R30)
	1009	[6296]	MOVE     	R28 R29 ; R28 := R29
	1010	[6298]	TESTSET  	R29 R0 0 ; if not R0 then PC := 1032 else R29 := R0 
	1011	[6298]	JMP      	1032 ; PC := 1032
	1012	[6298]	TEST     	R28 1 ; if R28 then PC := 1030
	1013	[6298]	JMP      	1030 ; PC := 1030
	1014	[6298]	EQ       	0 R3 K101 ; if R3 ~= 11.000000 then PC := 1030
	1015	[6298]	JMP      	1030 ; PC := 1030
	1016	[6298]	GETGLOBAL	R29 K0 ; R29 := _T
	1017	[6298]	GETTABLE 	R29 R29 K204 ; R29 := R29["InParkourTutorial"]
	1018	[6298]	TEST     	R29 1 ; if R29 then PC := 1030
	1019	[6298]	JMP      	1030 ; PC := 1030
	1020	[6298]	GETGLOBAL	R29 K11 ; R29 := 0x0032441c
	1021	[6298]	GETTABLE 	R29 R29 K205 ; R29 := R29["IsTrainingMissionPractise"]
	1022	[6298]	TEST     	R29 1 ; if R29 then PC := 1030
	1023	[6298]	JMP      	1030 ; PC := 1030
	1024	[6298]	GETGLOBAL	R29 K0 ; R29 := _T
	1025	[6298]	GETTABLE 	R29 R29 K88 ; R29 := R29["eomScreenMode"]
	1026	[6298]	GETUPVAL 	R30 U12 ; R30 := U12
	1027	[6298]	GETTABLE 	R30 R30 K89 ; R30 := R30["ACTUAL_EOM"]
	1028	[6298]	EQ       	1 R29 R30 ; if R29 == R30 then PC := 1031
	1029	[6298]	JMP      	1031 ; PC := 1031
	1030	[6298]	OP_LOADBOOL	R29 0 1 ; R29 := false; PC := 1031
	1031	[6298]	OP_LOADBOOL	R29 1 0 ; R29 := true
	1032	[6299]	TEST     	R29 0 ; if not R29 then PC := 1038
	1033	[6299]	JMP      	1038 ; PC := 1038
	1034	[6300]	GETUPVAL 	R30 U23 ; R30 := U23
	1035	[6300]	GETGLOBAL	R31 K206 ; R31 := ScreenType
	1036	[6300]	GETTABLE 	R31 R31 K207 ; R31 := R31["MASTERY"]
	1037	[6300]	CALL     	R30 2 1 ; R30(R31)
	1038	[6303]	GETGLOBAL	R30 K110 ; R30 := mWaitingForMissionComplete
	1039	[6303]	TEST     	R30 1 ; if R30 then PC := 1060
	1040	[6303]	JMP      	1060 ; PC := 1060
	1041	[6303]	GETGLOBAL	R30 K15 ; R30 := 0x7b998233
	1042	[6303]	GETGLOBAL	R31 K208 ; R31 := 0xe17197ce
	1043	[6303]	CALL     	R30 2 2 ; R30 := R30(R31)
	1044	[6303]	TEST     	R30 1 ; if R30 then PC := 1060
	1045	[6303]	JMP      	1060 ; PC := 1060
	1046	[6303]	GETGLOBAL	R30 K209 ; R30 := mCurrentScreenType
	1047	[6303]	GETGLOBAL	R31 K206 ; R31 := ScreenType
	1048	[6303]	GETTABLE 	R31 R31 K207 ; R31 := R31["MASTERY"]
	1049	[6303]	EQ       	1 R30 R31 ; if R30 == R31 then PC := 1060
	1050	[6303]	JMP      	1060 ; PC := 1060
	1051	[6304]	GETUPVAL 	R30 U0 ; R30 := U0
	1052	[6304]	GETTABLE 	R30 R30 K210 ; R30 := R30[0x5a22d251]
	1053	[6304]	GETGLOBAL	R31 K3 ; R31 := 0xae91e43b
	1054	[6304]	GETGLOBAL	R32 K208 ; R32 := 0xe17197ce
	1055	[6304]	LOADK    	R33 := 800.000000
	1056	[6304]	GETGLOBAL	R34 K211 ; R34 := mPanelStartY
	1057	[6304]	GETTABLE 	R34 R34 K212 ; R34 := R34["Title"]
	1058	[6304]	ADD      	R34 R34 K213 ; R34 := R34 + 15.000000
	1059	[6304]	CALL     	R30 5 1 ; R30(R31,R32,R33,R34)
	1060	[6307]	GETGLOBAL	R30 K209 ; R30 := mCurrentScreenType
	1061	[6307]	GETGLOBAL	R31 K206 ; R31 := ScreenType
	1062	[6307]	GETTABLE 	R31 R31 K207 ; R31 := R31["MASTERY"]
	1063	[6307]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 1108
	1064	[6307]	JMP      	1108 ; PC := 1108
	1065	[6308]	GETGLOBAL	R30 K15 ; R30 := 0x7b998233
	1066	[6308]	GETGLOBAL	R31 K214 ; R31 := 0xd3bbd565
	1067	[6308]	CALL     	R30 2 2 ; R30 := R30(R31)
	1068	[6308]	TEST     	R30 1 ; if R30 then PC := 1094
	1069	[6308]	JMP      	1094 ; PC := 1094
	1070	[6309]	GETGLOBAL	R30 K0 ; R30 := _T
	1071	[6309]	SETTABLE 	R30 K215 K39 ; R30["MasteryMovie_CompleteMode"] := true
	1072	[6310]	GETGLOBAL	R30 K3 ; R30 := 0xae91e43b
	1073	[6310]	SELF     	R30 R30 K82 ; R31 := R30; R30 := R30[0x1fd6abd0]
	1074	[6310]	GETGLOBAL	R32 K214 ; R32 := 0xd3bbd565
	1075	[6310]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	1076	[6310]	SETGLOBALHASH	R30 K216 ; mChildMovie := R30
	1077	[6311]	GETGLOBAL	R30 K15 ; R30 := 0x7b998233
	1078	[6311]	GETGLOBAL	R31 K216 ; R31 := mChildMovie
	1079	[6311]	CALL     	R30 2 2 ; R30 := R30(R31)
	1080	[6311]	TEST     	R30 1 ; if R30 then PC := 1094
	1081	[6311]	JMP      	1094 ; PC := 1094
	1082	[6312]	GETGLOBAL	R30 K0 ; R30 := _T
	1083	[6317]	CLOSURE  	R31 0 ; R31 := closure(Function #1)
	1084	[6317]	SETTABLE 	R30 K217 R31 ; R30["EOM_OnMasteryClosed"] := R31
	1085	[6319]	GETGLOBAL	R30 K216 ; R30 := mChildMovie
	1086	[6319]	SELF     	R30 R30 K33 ; R31 := R30; R30 := R30[0xe4162eed]
	1087	[6319]	LOADK    	R32 K218 ; R32 := "SetCallBack"
	1088	[6319]	LOADK    	R33 K217 ; R33 := "EOM_OnMasteryClosed"
	1089	[6319]	CALL     	R30 4 1 ; R30(R31,R32,R33)
	1090	[6320]	GETGLOBAL	R30 K3 ; R30 := 0xae91e43b
	1091	[6320]	SELF     	R30 R30 K83 ; R31 := R30; R30 := R30[0x368ad758]
	1092	[6320]	OP_LOADBOOL	R32 0 0 ; R32 := false
	1093	[6320]	CALL     	R30 3 1 ; R30(R31,R32)
	1094	[6324]	TEST     	R0 0 ; if not R0 then PC := 1108
	1095	[6324]	JMP      	1108 ; PC := 1108
	1096	[6324]	GETGLOBAL	R30 K15 ; R30 := 0x7b998233
	1097	[6324]	GETGLOBAL	R31 K0 ; R31 := _T
	1098	[6324]	GETTABLE 	R31 R31 K219 ; R31 := R31["SquadOverlay"]
	1099	[6324]	CALL     	R30 2 2 ; R30 := R30(R31)
	1100	[6324]	TEST     	R30 1 ; if R30 then PC := 1108
	1101	[6324]	JMP      	1108 ; PC := 1108
	1102	[6325]	GETGLOBAL	R30 K0 ; R30 := _T
	1103	[6325]	GETTABLE 	R30 R30 K219 ; R30 := R30["SquadOverlay"]
	1104	[6325]	SELF     	R30 R30 K33 ; R31 := R30; R30 := R30[0xe4162eed]
	1105	[6325]	LOADK    	R32 K220 ; R32 := "SetForceHidden"
	1106	[6325]	LOADK    	R33 K221 ; R33 := "true"
	1107	[6325]	CALL     	R30 4 1 ; R30(R31,R32,R33)
	1108	[6329]	TEST     	R0 1 ; if R0 then PC := 1115
	1109	[6329]	JMP      	1115 ; PC := 1115
	1110	[6329]	TEST     	R11 1 ; if R11 then PC := 1115
	1111	[6329]	JMP      	1115 ; PC := 1115
	1112	[6330]	OP_LOADBOOL	R30 0 0 ; R30 := false
	1113	[6330]	SETGLOBALHASH	R30 K200 ; mInputBlocked := R30
	1114	[6330]	JMP      	1155 ; PC := 1155
	1115	[6332]	TEST     	R0 1 ; if R0 then PC := 1144
	1116	[6332]	JMP      	1144 ; PC := 1144
	1117	[6332]	TEST     	R11 0 ; if not R11 then PC := 1144
	1118	[6332]	JMP      	1144 ; PC := 1144
	1119	[6333]	GETGLOBAL	R30 K29 ; R30 := 0x9ba7909f
	1120	[6333]	SELF     	R30 R30 K32 ; R31 := R30; R30 := R30[0xbcfb64ab]
	1121	[6333]	GETUPVAL 	R32 U16 ; R32 := U16
	1122	[6333]	GETTABLE 	R32 R32 K222 ; R32 := R32[0xc472e470]
	1123	[6333]	CALL     	R32 1 0 ; R32,... := R32()
	1124	[6333]	CALL     	R30 0 2 ; R30 := R30(R31,...)
	1125	[6334]	GETGLOBAL	R31 K15 ; R31 := 0x7b998233
	1126	[6334]	MOVE     	R32 R30 ; R32 := R30
	1127	[6334]	CALL     	R31 2 2 ; R31 := R31(R32)
	1128	[6334]	TEST     	R31 1 ; if R31 then PC := 1138
	1129	[6334]	JMP      	1138 ; PC := 1138
	1130	[6335]	SELF     	R31 R30 K33 ; R32 := R30; R31 := R30[0xe4162eed]
	1131	[6335]	LOADK    	R33 K223 ; R33 := "EnableInput"
	1132	[6335]	LOADK    	R34 K35 ; R34 := ""
	1133	[6335]	CALL     	R31 4 1 ; R31(R32,R33,R34)
	1134	[6336]	SELF     	R31 R30 K33 ; R32 := R30; R31 := R30[0xe4162eed]
	1135	[6336]	LOADK    	R33 K224 ; R33 := "DisableInput"
	1136	[6336]	LOADK    	R34 K35 ; R34 := ""
	1137	[6336]	CALL     	R31 4 1 ; R31(R32,R33,R34)
	1138	[6338]	GETUPVAL 	R31 U1 ; R31 := U1
	1139	[6338]	TEST     	R31 1 ; if R31 then PC := 1155
	1140	[6338]	JMP      	1155 ; PC := 1155
	1141	[6339]	OP_LOADBOOL	R31 1 0 ; R31 := true
	1142	[6339]	SETUPVAL 	R31 U24 ; U24 := R31
	1143	[6340]	JMP      	1155 ; PC := 1155
	1144	[6341]	GETGLOBAL	R31 K0 ; R31 := _T
	1145	[6341]	GETTABLE 	R31 R31 K88 ; R31 := R31["eomScreenMode"]
	1146	[6341]	GETUPVAL 	R32 U12 ; R32 := U12
	1147	[6341]	GETTABLE 	R32 R32 K97 ; R32 := R32["QUICK_PREVIEW"]
	1148	[6341]	EQ       	1 R31 R32 ; if R31 == R32 then PC := 1155
	1149	[6341]	JMP      	1155 ; PC := 1155
	1150	[6342]	GETUPVAL 	R31 U1 ; R31 := U1
	1151	[6342]	TEST     	R31 1 ; if R31 then PC := 1155
	1152	[6342]	JMP      	1155 ; PC := 1155
	1153	[6343]	OP_LOADBOOL	R31 1 0 ; R31 := true
	1154	[6343]	SETUPVAL 	R31 U24 ; U24 := R31
	1155	[6348]	GETGLOBAL	R31 K41 ; R31 := mAbortingAndWasDoingPvpChallenge
	1156	[6348]	TEST     	R31 0 ; if not R31 then PC := 1162
	1157	[6348]	JMP      	1162 ; PC := 1162
	1158	[6349]	GETUPVAL 	R31 U23 ; R31 := U23
	1159	[6349]	GETGLOBAL	R32 K206 ; R32 := ScreenType
	1160	[6349]	GETTABLE 	R32 R32 K225 ; R32 := R32["REP"]
	1161	[6349]	CALL     	R31 2 1 ; R31(R32)
	1162	[6352]	GETUPVAL 	R31 U17 ; R31 := U17
	1163	[6352]	CALL     	R31 1 2 ; R31 := R31()
	1164	[6352]	TEST     	R31 0 ; if not R31 then PC := 1173
	1165	[6352]	JMP      	1173 ; PC := 1173
	1166	[6353]	GETGLOBAL	R31 K16 ; R31 := 0xbe190284
	1167	[6353]	SELF     	R31 R31 K226 ; R32 := R31; R31 := R31[0x8e07e77f]
	1168	[6353]	GETGLOBAL	R33 K227 ; R33 := 0x6564d17e
	1169	[6353]	SELF     	R33 R33 K228 ; R34 := R33; R33 := R33[0xed4e0128]
	1170	[6353]	CALL     	R33 2 2 ; R33 := R33(R34)
	1171	[6353]	LOADK    	R34 K229 ; R34 := "OnOnslaughtBackgroundReady"
	1172	[6353]	CALL     	R31 4 1 ; R31(R32,R33,R34)
	1173	[6356]	GETUPVAL 	R31 U25 ; R31 := U25
	1174	[6356]	CALL     	R31 1 1 ; R31()
	1175	[6357]	GETUPVAL 	R31 U26 ; R31 := U26
	1176	[6357]	CALL     	R31 1 1 ; R31()
	1177	[6358]	OP_LOADBOOL	R31 1 0 ; R31 := true
	1178	[6358]	SETGLOBALHASH	R31 K18 ; mInitialized := R31
	1179	[6359]	RETURN   	R0 1 ; return 

function #138 <?:6361,6369> (26 instructions, 104 bytes at 0000016087706970)
0 params, 8 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[6362]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	2	[6362]	LOADK    	R1 K1 ; R1 := "EndOfMatch.lua - Close"
	3	[6362]	CALL     	R0 2 1 ; R0(R1)
	4	[6363]	LOADK    	R0 := -1.000000
	5	[6363]	SETGLOBALHASH	R0 K2 ; mAutoCloseDelay := R0
	6	[6364]	OP_LOADBOOL	R0 1 0 ; R0 := true
	7	[6364]	SETGLOBALHASH	R0 K3 ; mShouldClose := R0
	8	[6366]	GETGLOBAL	R0 K4 ; R0 := mShowDuringLoadingScreen
	9	[6366]	TEST     	R0 1 ; if R0 then PC := 26
	10	[6366]	JMP      	26 ; PC := 26
	11	[6367]	GETGLOBAL	R0 K5 ; R0 := 0x25312c9b
	12	[6367]	GETGLOBAL	R1 K6 ; R1 := 0xae91e43b
	13	[6367]	LOADK    	R2 K7 ; R2 := "_root"
	14	[6367]	LOADK    	R3 := 8.000000
	15	[6367]	NEWTABLE 	R4 2 0 ; R4 := {}
	16	[6367]	LOADK    	R5 := 10.000000
	17	[6367]	LOADK    	R6 K9 ; R6 := "background"
	18	[6367]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	19	[6367]	NEWTABLE 	R5 2 0 ; R5 := {}
	20	[6367]	LOADK    	R6 := 0.000000
	21	[6367]	LOADK    	R7 := 0.000000
	22	[6367]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	23	[6367]	LOADK    	R6 K10 ; R6 := 0.200000
	24	[6367]	LOADK    	R7 := 0.000000
	25	[6367]	CALL     	R0 8 1 ; R0(R1,R2,R3,R4,R5,R6,R7)
	26	[6369]	RETURN   	R0 1 ; return 

function #139 <?:6371,6384> (25 instructions, 100 bytes at 0000016087706C00)
1 param, 5 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[6372]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6372]	MOVE     	R2 R0 ; R2 := R0
	3	[6372]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6372]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6372]	JMP      	8 ; PC := 8
	6	[6373]	GETGLOBAL	R0 K1 ; R0 := AUTO_CLOSE_DELAY
	7	[6373]	JMP      	15 ; PC := 15
	8	[6375]	GETGLOBAL	R1 K2 ; R1 := 0x03f57322
	9	[6375]	MOVE     	R2 R0 ; R2 := R0
	10	[6375]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[6375]	MOVE     	R0 R1 ; R0 := R1
	12	[6376]	LE       	0 R0 K3 ; if R0 > 0.000000 then PC := 15
	13	[6376]	JMP      	15 ; PC := 15
	14	[6377]	LOADK    	R0 K4 ; R0 := 0.001000
	15	[6381]	GETGLOBAL	R1 K5 ; R1 := 0x3d106989
	16	[6381]	LOADK    	R2 K6 ; R2 := "Auto close delay="
	17	[6381]	GETGLOBAL	R3 K7 ; R3 := 0x64fb1586
	18	[6381]	MOVE     	R4 R0 ; R4 := R0
	19	[6381]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[6381]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	21	[6381]	CALL     	R1 2 1 ; R1(R2)
	22	[6382]	SETGLOBALHASH	R0 K8 ; mAutoCloseDelay := R0
	23	[6383]	LOADK    	R1 := 1.000000
	24	[6383]	RETURN   	R1 2 ; return R1 
	25	[6384]	RETURN   	R0 1 ; return 

function #140 <?:6386,6387> (1 instruction, 4 bytes at 0000016087706E70)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6387]	RETURN   	R0 1 ; return 

function #141 <?:6389,6406> (39 instructions, 156 bytes at 0000016087706F40)
0 params, 11 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[6391]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[6391]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xef893aec]
	3	[6391]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[6392]	LOADK    	R1 := 1.000000
	5	[6392]	GETGLOBAL	R2 K2 ; R2 := 0xf8376828
	6	[6392]	LEN      	R2 R2 ; R2 := # R2
	7	[6392]	LOADK    	R3 := 1.000000
	8	[6392]	FORPREP  	R1 36 ; R1 -= R3; PC := 36
	9	[6393]	GETGLOBAL	R5 K2 ; R5 := 0xf8376828
	10	[6393]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	11	[6394]	GETTABLE 	R6 R0 K3 ; R6 := R0["levelKeyName"]
	12	[6395]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 36
	13	[6395]	JMP      	36 ; PC := 36
	14	[6396]	GETGLOBAL	R7 K4 ; R7 := 0x89326c93
	15	[6396]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0x98f20ca5]
	16	[6396]	CALL     	R7 2 2 ; R7 := R7(R8)
	17	[6397]	SETTABLE 	R7 K6 K7 ; R7["loadFromLobby"] := false
	18	[6398]	SETTABLE 	R7 K8 K9 ; R7["migrateServer"] := true
	19	[6399]	GETGLOBAL	R8 K11 ; R8 := 0x7b998233
	20	[6399]	GETGLOBAL	R9 K12 ; R9 := 0xe7f2b02f
	21	[6399]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0x565be9ee]
	22	[6399]	CALL     	R9 2 0 ; R9,... := R9(R10)
	23	[6399]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	24	[6399]	NOT      	R8 R8 ; R8 := not R8
	25	[6399]	SETTABLE 	R7 K10 R8 ; R7["hostingMultiplayer"] := R8
	26	[6400]	GETGLOBAL	R8 K0 ; R8 := 0xbe190284
	27	[6400]	SELF     	R8 R8 K14 ; R9 := R8; R8 := R8[0x89ff11ba]
	28	[6400]	MOVE     	R10 R7 ; R10 := R7
	29	[6400]	CALL     	R8 3 1 ; R8(R9,R10)
	30	[6401]	GETGLOBAL	R8 K15 ; R8 := 0x34291f5c
	31	[6401]	GETTABLE 	R8 R8 K16 ; R8 := R8[0x4e0a1dfc]
	32	[6401]	MOVE     	R9 R7 ; R9 := R7
	33	[6401]	CALL     	R8 2 1 ; R8(R9)
	34	[6402]	OP_LOADBOOL	R8 1 0 ; R8 := true
	35	[6402]	RETURN   	R8 2 ; return R8 
	36	[6392]	FORLOOP  	R1 9 ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
	37	[6405]	OP_LOADBOOL	R8 0 0 ; R8 := false
	38	[6405]	RETURN   	R8 2 ; return R8 
	39	[6406]	RETURN   	R0 1 ; return 

function #142 <?:6408,6695> (828 instructions, 3312 bytes at 0000016087707250)
0 params, 31 slots, 28 upvalues, 0 locals, 131 constants, 3 functions
	1	[6409]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[6409]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[6409]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[6409]	TEST     	R0 1 ; if R0 then PC := 9
	5	[6409]	JMP      	9 ; PC := 9
	6	[6409]	GETGLOBAL	R0 K2 ; R0 := mInitialized
	7	[6409]	TEST     	R0 1 ; if R0 then PC := 10
	8	[6409]	JMP      	10 ; PC := 10
	9	[6410]	RETURN   	R0 1 ; return 
	10	[6413]	GETGLOBAL	R0 K3 ; R0 := _T
	11	[6413]	GETTABLE 	R0 R0 K4 ; R0 := R0["eomScreenMode"]
	12	[6413]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[6413]	GETTABLE 	R1 R1 K5 ; R1 := R1["ACTUAL_EOM"]
	14	[6413]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 17
	15	[6413]	JMP      	17 ; PC := 17
	16	[6413]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 17
	17	[6413]	OP_LOADBOOL	R0 1 0 ; R0 := true
	18	[6414]	GETUPVAL 	R1 U1 ; R1 := U1
	19	[6414]	CALL     	R1 1 1 ; R1()
	20	[6416]	GETGLOBAL	R1 K6 ; R1 := 0xb693b6c1
	21	[6416]	CALL     	R1 1 2 ; R1 := R1()
	22	[6417]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	23	[6417]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x8a8c8d5a]
	24	[6417]	MOVE     	R4 R1 ; R4 := R1
	25	[6417]	CALL     	R2 3 1 ; R2(R3,R4)
	26	[6419]	GETUPVAL 	R2 U2 ; R2 := U2
	27	[6419]	MOVE     	R3 R1 ; R3 := R1
	28	[6419]	CALL     	R2 2 1 ; R2(R3)
	29	[6421]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	30	[6421]	GETGLOBAL	R3 K8 ; R3 := 0x89326c93
	31	[6421]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[6421]	TEST     	R2 1 ; if R2 then PC := 39
	33	[6421]	JMP      	39 ; PC := 39
	34	[6421]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	35	[6421]	GETGLOBAL	R3 K9 ; R3 := 0xbe190284
	36	[6421]	CALL     	R2 2 2 ; R2 := R2(R3)
	37	[6421]	TEST     	R2 0 ; if not R2 then PC := 40
	38	[6421]	JMP      	40 ; PC := 40
	39	[6422]	RETURN   	R0 1 ; return 
	40	[6425]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	41	[6425]	GETGLOBAL	R3 K9 ; R3 := 0xbe190284
	42	[6425]	CALL     	R2 2 2 ; R2 := R2(R3)
	43	[6425]	TEST     	R2 1 ; if R2 then PC := 59
	44	[6425]	JMP      	59 ; PC := 59
	45	[6425]	GETGLOBAL	R2 K9 ; R2 := 0xbe190284
	46	[6425]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x8019cc24]
	47	[6425]	CALL     	R2 2 2 ; R2 := R2(R3)
	48	[6425]	TEST     	R2 0 ; if not R2 then PC := 59
	49	[6425]	JMP      	59 ; PC := 59
	50	[6425]	GETUPVAL 	R2 U3 ; R2 := U3
	51	[6425]	EQ       	0 R2 K11 ; if R2 ~= 0.000000 then PC := 59
	52	[6425]	JMP      	59 ; PC := 59
	53	[6426]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	54	[6426]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0x78f32995]
	55	[6426]	OP_LOADBOOL	R4 0 0 ; R4 := false
	56	[6426]	CALL     	R2 3 1 ; R2(R3,R4)
	57	[6427]	LOADK    	R2 := 1.000000
	58	[6427]	SETUPVAL 	R2 U3 ; U3 := R2
	59	[6434]	GETUPVAL 	R2 U3 ; R2 := U3
	60	[6434]	EQ       	0 R2 K13 ; if R2 ~= 1.000000 then PC := 79
	61	[6434]	JMP      	79 ; PC := 79
	62	[6434]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	63	[6434]	GETGLOBAL	R3 K9 ; R3 := 0xbe190284
	64	[6434]	CALL     	R2 2 2 ; R2 := R2(R3)
	65	[6434]	TEST     	R2 1 ; if R2 then PC := 72
	66	[6434]	JMP      	72 ; PC := 72
	67	[6434]	GETGLOBAL	R2 K9 ; R2 := 0xbe190284
	68	[6434]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x8019cc24]
	69	[6434]	CALL     	R2 2 2 ; R2 := R2(R3)
	70	[6434]	TEST     	R2 1 ; if R2 then PC := 79
	71	[6434]	JMP      	79 ; PC := 79
	72	[6435]	GETGLOBAL	R2 K14 ; R2 := 0x3d106989
	73	[6435]	LOADK    	R3 K15 ; R3 := "EOM - back in mission!"
	74	[6435]	CALL     	R2 2 1 ; R2(R3)
	75	[6436]	LOADK    	R2 := 2.000000
	76	[6436]	SETUPVAL 	R2 U3 ; U3 := R2
	77	[6437]	GETUPVAL 	R2 U4 ; R2 := U4
	78	[6437]	CALL     	R2 1 1 ; R2()
	79	[6440]	GETUPVAL 	R2 U5 ; R2 := U5
	80	[6440]	TEST     	R2 0 ; if not R2 then PC := 83
	81	[6440]	JMP      	83 ; PC := 83
	82	[6441]	RETURN   	R0 1 ; return 
	83	[6444]	GETUPVAL 	R2 U6 ; R2 := U6
	84	[6444]	TEST     	R2 1 ; if R2 then PC := 107
	85	[6444]	JMP      	107 ; PC := 107
	86	[6444]	GETGLOBAL	R2 K3 ; R2 := _T
	87	[6444]	GETTABLE 	R2 R2 K16 ; R2 := R2["UIInputEnabled"]
	88	[6444]	TEST     	R2 1 ; if R2 then PC := 107
	89	[6444]	JMP      	107 ; PC := 107
	90	[6444]	GETGLOBAL	R2 K17 ; R2 := mWaitingForMissionComplete
	91	[6444]	TEST     	R2 1 ; if R2 then PC := 107
	92	[6444]	JMP      	107 ; PC := 107
	93	[6444]	GETUPVAL 	R2 U7 ; R2 := U7
	94	[6444]	TEST     	R2 1 ; if R2 then PC := 98
	95	[6444]	JMP      	98 ; PC := 98
	96	[6444]	TEST     	R0 0 ; if not R0 then PC := 107
	97	[6444]	JMP      	107 ; PC := 107
	98	[6444]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	99	[6444]	GETGLOBAL	R3 K3 ; R3 := _T
	100	[6444]	GETTABLE 	R3 R3 K18 ; R3 := R3["EnableUIInput"]
	101	[6444]	CALL     	R2 2 2 ; R2 := R2(R3)
	102	[6444]	TEST     	R2 1 ; if R2 then PC := 107
	103	[6444]	JMP      	107 ; PC := 107
	104	[6445]	GETGLOBAL	R2 K3 ; R2 := _T
	105	[6445]	GETTABLE 	R2 R2 K19 ; R2 := R2[0x3b0face1]
	106	[6445]	CALL     	R2 1 1 ; R2()
	107	[6447]	GETGLOBAL	R2 K3 ; R2 := _T
	108	[6447]	GETTABLE 	R2 R2 K4 ; R2 := R2["eomScreenMode"]
	109	[6447]	EQ       	0 R2 K20 ; if R2 ~= nil then PC := 115
	110	[6447]	JMP      	115 ; PC := 115
	111	[6448]	GETGLOBAL	R2 K3 ; R2 := _T
	112	[6448]	GETUPVAL 	R3 U0 ; R3 := U0
	113	[6448]	GETTABLE 	R3 R3 K5 ; R3 := R3["ACTUAL_EOM"]
	114	[6448]	SETTABLE 	R2 K4 R3 ; R2["eomScreenMode"] := R3
	115	[6451]	GETGLOBAL	R2 K3 ; R2 := _T
	116	[6451]	GETTABLE 	R2 R2 K21 ; R2 := R2["HideEOM"]
	117	[6451]	EQ       	1 R2 K20 ; if R2 == nil then PC := 123
	118	[6451]	JMP      	123 ; PC := 123
	119	[6451]	GETGLOBAL	R2 K3 ; R2 := _T
	120	[6451]	GETTABLE 	R2 R2 K21 ; R2 := R2["HideEOM"]
	121	[6451]	LT       	1 K11 R2 ; if 0.000000 < R2 then PC := 124
	122	[6451]	JMP      	124 ; PC := 124
	123	[6451]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 124
	124	[6451]	OP_LOADBOOL	R2 1 0 ; R2 := true
	125	[6452]	GETUPVAL 	R3 U8 ; R3 := U8
	126	[6452]	EQ       	1 R3 R2 ; if R3 == R2 then PC := 136
	127	[6452]	JMP      	136 ; PC := 136
	128	[6453]	SETUPVAL 	R2 U8 ; U8 := R2
	129	[6454]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	130	[6454]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0xaade900e]
	131	[6454]	LOADK    	R5 K23 ; R5 := "_root"
	132	[6454]	LOADK    	R6 := 11.000000
	133	[6454]	GETUPVAL 	R7 U8 ; R7 := U8
	134	[6454]	NOT      	R7 R7 ; R7 := not R7
	135	[6454]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	136	[6458]	GETGLOBAL	R3 K8 ; R3 := 0x89326c93
	137	[6458]	SELF     	R3 R3 K24 ; R4 := R3; R3 := R3[0x18d05d30]
	138	[6458]	CALL     	R3 2 2 ; R3 := R3(R4)
	139	[6459]	TEST     	R3 1 ; if R3 then PC := 172
	140	[6459]	JMP      	172 ; PC := 172
	141	[6459]	TEST     	R0 0 ; if not R0 then PC := 172
	142	[6459]	JMP      	172 ; PC := 172
	143	[6461]	GETGLOBAL	R4 K25 ; R4 := mMedalsValidated
	144	[6461]	TEST     	R4 1 ; if R4 then PC := 172
	145	[6461]	JMP      	172 ; PC := 172
	146	[6461]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	147	[6461]	GETGLOBAL	R5 K26 ; R5 := mGameData
	148	[6461]	CALL     	R4 2 2 ; R4 := R4(R5)
	149	[6461]	TEST     	R4 1 ; if R4 then PC := 172
	150	[6461]	JMP      	172 ; PC := 172
	151	[6461]	GETGLOBAL	R4 K26 ; R4 := mGameData
	152	[6461]	SELF     	R4 R4 K27 ; R5 := R4; R4 := R4[0x93f95e26]
	153	[6461]	CALL     	R4 2 2 ; R4 := R4(R5)
	154	[6461]	TEST     	R4 0 ; if not R4 then PC := 172
	155	[6461]	JMP      	172 ; PC := 172
	156	[6462]	OP_LOADBOOL	R4 1 0 ; R4 := true
	157	[6462]	SETGLOBALHASH	R4 K25 ; mMedalsValidated := R4
	158	[6463]	LOADK    	R4 := 1.000000
	159	[6463]	GETGLOBAL	R5 K28 ; R5 := mMaxPlayers
	160	[6463]	LOADK    	R6 := 1.000000
	161	[6463]	FORPREP  	R4 171 ; R4 -= R6; PC := 171
	162	[6464]	LOADK    	R8 K29 ; R8 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
	163	[6464]	MOVE     	R9 R7 ; R9 := R7
	164	[6464]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	165	[6465]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	166	[6465]	SELF     	R9 R9 K30 ; R10 := R9; R9 := R9[0x67bc869f]
	167	[6465]	MOVE     	R11 R8 ; R11 := R8
	168	[6465]	LOADK    	R12 := 10.000000
	169	[6465]	LOADK    	R13 := 100.000000
	170	[6465]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	171	[6463]	FORLOOP  	R4 162 ; R4 += R6; if R4 <= R5 then begin PC := 162; R7 := R4 end
	172	[6470]	GETGLOBAL	R9 K3 ; R9 := _T
	173	[6470]	GETTABLE 	R9 R9 K4 ; R9 := R9["eomScreenMode"]
	174	[6470]	GETUPVAL 	R10 U0 ; R10 := U0
	175	[6470]	GETTABLE 	R10 R10 K31 ; R10 := R10["QUICK_PREVIEW"]
	176	[6470]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 188
	177	[6470]	JMP      	188 ; PC := 188
	178	[6470]	GETGLOBAL	R9 K3 ; R9 := _T
	179	[6470]	GETTABLE 	R9 R9 K32 ; R9 := R9["eomInputIgnored"]
	180	[6470]	TEST     	R9 1 ; if R9 then PC := 188
	181	[6470]	JMP      	188 ; PC := 188
	182	[6472]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	183	[6472]	SELF     	R9 R9 K33 ; R10 := R9; R9 := R9[0xbed40e9c]
	184	[6472]	OP_LOADBOOL	R11 1 0 ; R11 := true
	185	[6472]	CALL     	R9 3 1 ; R9(R10,R11)
	186	[6473]	GETGLOBAL	R9 K3 ; R9 := _T
	187	[6473]	SETTABLE 	R9 K32 K34 ; R9["eomInputIgnored"] := true
	188	[6476]	GETGLOBAL	R9 K8 ; R9 := 0x89326c93
	189	[6476]	SELF     	R9 R9 K24 ; R10 := R9; R9 := R9[0x18d05d30]
	190	[6476]	CALL     	R9 2 2 ; R9 := R9(R10)
	191	[6476]	TEST     	R9 1 ; if R9 then PC := 199
	192	[6476]	JMP      	199 ; PC := 199
	193	[6476]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	194	[6476]	GETGLOBAL	R10 K35 ; R10 := 0xe7f2b02f
	195	[6476]	SELF     	R10 R10 K36 ; R11 := R10; R10 := R10[0x565be9ee]
	196	[6476]	CALL     	R10 2 0 ; R10,... := R10(R11)
	197	[6476]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	198	[6476]	JMP      	201 ; PC := 201
	199	[6476]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 200
	200	[6476]	OP_LOADBOOL	R9 1 0 ; R9 := true
	201	[6478]	GETUPVAL 	R10 U9 ; R10 := U9
	202	[6478]	GETTABLE 	R10 R10 K37 ; R10 := R10["isPvp"]
	203	[6478]	TEST     	R10 1 ; if R10 then PC := 287
	204	[6478]	JMP      	287 ; PC := 287
	205	[6478]	GETGLOBAL	R10 K38 ; R10 := mReturningToLobbyTime
	206	[6478]	LE       	0 K11 R10 ; if 0.000000 > R10 then PC := 287
	207	[6478]	JMP      	287 ; PC := 287
	208	[6479]	GETGLOBAL	R10 K38 ; R10 := mReturningToLobbyTime
	209	[6479]	ADD      	R10 R10 R1 ; R10 := R10 + R1
	210	[6479]	SETGLOBALHASH	R10 K38 ; mReturningToLobbyTime := R10
	211	[6481]	GETGLOBAL	R10 K39 ; R10 := mShowDuringLoadingScreen
	212	[6481]	TEST     	R10 1 ; if R10 then PC := 252
	213	[6481]	JMP      	252 ; PC := 252
	214	[6482]	GETGLOBAL	R10 K40 ; R10 := 0x83f4e77c
	215	[6482]	SELF     	R10 R10 K41 ; R11 := R10; R10 := R10[0xac0a30b1]
	216	[6482]	CALL     	R10 2 2 ; R10 := R10(R11)
	217	[6482]	TEST     	R10 1 ; if R10 then PC := 224
	218	[6482]	JMP      	224 ; PC := 224
	219	[6482]	GETGLOBAL	R10 K40 ; R10 := 0x83f4e77c
	220	[6482]	SELF     	R10 R10 K42 ; R11 := R10; R10 := R10[0x47073d04]
	221	[6482]	CALL     	R10 2 2 ; R10 := R10(R11)
	222	[6482]	TEST     	R10 0 ; if not R10 then PC := 245
	223	[6482]	JMP      	245 ; PC := 245
	224	[6482]	GETGLOBAL	R10 K9 ; R10 := 0xbe190284
	225	[6482]	SELF     	R10 R10 K43 ; R11 := R10; R10 := R10[0x7926b5dc]
	226	[6482]	CALL     	R10 2 2 ; R10 := R10(R11)
	227	[6482]	TEST     	R10 0 ; if not R10 then PC := 245
	228	[6482]	JMP      	245 ; PC := 245
	229	[6482]	GETGLOBAL	R10 K8 ; R10 := 0x89326c93
	230	[6482]	SELF     	R10 R10 K24 ; R11 := R10; R10 := R10[0x18d05d30]
	231	[6482]	CALL     	R10 2 2 ; R10 := R10(R11)
	232	[6482]	TEST     	R10 1 ; if R10 then PC := 237
	233	[6482]	JMP      	237 ; PC := 237
	234	[6482]	GETGLOBAL	R10 K38 ; R10 := mReturningToLobbyTime
	235	[6482]	LT       	1 K44 R10 ; if 100.000000 < R10 then PC := 245
	236	[6482]	JMP      	245 ; PC := 245
	237	[6484]	GETGLOBAL	R10 K45 ; R10 := 0x34291f5c
	238	[6484]	GETTABLE 	R10 R10 K46 ; R10 := R10[0x056bfe8b]
	239	[6484]	CALL     	R10 1 2 ; R10 := R10()
	240	[6484]	TEST     	R10 0 ; if not R10 then PC := 252
	241	[6484]	JMP      	252 ; PC := 252
	242	[6484]	GETGLOBAL	R10 K38 ; R10 := mReturningToLobbyTime
	243	[6484]	LT       	0 K47 R10 ; if 7.000000 >= R10 then PC := 252
	244	[6484]	JMP      	252 ; PC := 252
	245	[6485]	GETGLOBAL	R10 K14 ; R10 := 0x3d106989
	246	[6485]	LOADK    	R11 K48 ; R11 := "EndOfMatch - disconnected, closing"
	247	[6485]	CALL     	R10 2 1 ; R10(R11)
	248	[6486]	GETGLOBAL	R10 K1 ; R10 := 0xae91e43b
	249	[6486]	SELF     	R10 R10 K49 ; R11 := R10; R10 := R10[0x32302b4a]
	250	[6486]	CALL     	R10 2 1 ; R10(R11)
	251	[6487]	RETURN   	R0 1 ; return 
	252	[6491]	GETGLOBAL	R10 K50 ; R10 := mWaitingForReturnToShip
	253	[6491]	TEST     	R10 1 ; if R10 then PC := 284
	254	[6491]	JMP      	284 ; PC := 284
	255	[6491]	GETGLOBAL	R10 K38 ; R10 := mReturningToLobbyTime
	256	[6491]	LT       	0 K51 R10 ; if 2.000000 >= R10 then PC := 284
	257	[6491]	JMP      	284 ; PC := 284
	258	[6492]	LOADK    	R10 K52 ; R10 := ""
	259	[6493]	GETGLOBAL	R11 K53 ; R11 := mWaitingForDbUpdate
	260	[6493]	TEST     	R11 0 ; if not R11 then PC := 269
	261	[6493]	JMP      	269 ; PC := 269
	262	[6494]	GETGLOBAL	R11 K1 ; R11 := 0xae91e43b
	263	[6494]	SELF     	R11 R11 K54 ; R12 := R11; R11 := R11[0x42b04007]
	264	[6494]	LOADK    	R13 K55 ; R13 := "/Lotus/Language/Menu/UpdatingDB"
	265	[6494]	OP_LOADBOOL	R14 0 0 ; R14 := false
	266	[6494]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	267	[6494]	MOVE     	R10 R11 ; R10 := R11
	268	[6494]	JMP      	275 ; PC := 275
	269	[6496]	GETGLOBAL	R11 K1 ; R11 := 0xae91e43b
	270	[6496]	SELF     	R11 R11 K54 ; R12 := R11; R11 := R11[0x42b04007]
	271	[6496]	LOADK    	R13 K56 ; R13 := "/Lotus/Language/Game/WaitingForPlayers"
	272	[6496]	OP_LOADBOOL	R14 0 0 ; R14 := false
	273	[6496]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	274	[6496]	MOVE     	R10 R11 ; R10 := R11
	275	[6499]	GETUPVAL 	R11 U10 ; R11 := U10
	276	[6499]	MOVE     	R12 R10 ; R12 := R10
	277	[6499]	CALL     	R11 2 1 ; R11(R12)
	278	[6500]	GETGLOBAL	R11 K1 ; R11 := 0xae91e43b
	279	[6500]	SELF     	R11 R11 K30 ; R12 := R11; R11 := R11[0x67bc869f]
	280	[6500]	LOADK    	R13 K23 ; R13 := "_root"
	281	[6500]	LOADK    	R14 := 10.000000
	282	[6500]	LOADK    	R15 := 100.000000
	283	[6500]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	284	[6503]	TEST     	R9 1 ; if R9 then PC := 287
	285	[6503]	JMP      	287 ; PC := 287
	286	[6504]	RETURN   	R0 1 ; return 
	287	[6508]	GETGLOBAL	R11 K50 ; R11 := mWaitingForReturnToShip
	288	[6508]	TEST     	R11 1 ; if R11 then PC := 320
	289	[6508]	JMP      	320 ; PC := 320
	290	[6508]	GETUPVAL 	R11 U11 ; R11 := U11
	291	[6508]	GETTABLE 	R11 R11 K57 ; R11 := R11[0xcdc34211]
	292	[6508]	CALL     	R11 1 2 ; R11 := R11()
	293	[6508]	TEST     	R11 0 ; if not R11 then PC := 320
	294	[6508]	JMP      	320 ; PC := 320
	295	[6508]	GETGLOBAL	R11 K8 ; R11 := 0x89326c93
	296	[6508]	SELF     	R11 R11 K24 ; R12 := R11; R11 := R11[0x18d05d30]
	297	[6508]	CALL     	R11 2 2 ; R11 := R11(R12)
	298	[6508]	TEST     	R11 0 ; if not R11 then PC := 320
	299	[6508]	JMP      	320 ; PC := 320
	300	[6509]	GETGLOBAL	R11 K9 ; R11 := 0xbe190284
	301	[6509]	SELF     	R11 R11 K58 ; R12 := R11; R11 := R11[0xef893aec]
	302	[6509]	CALL     	R11 2 2 ; R11 := R11(R12)
	303	[6509]	GETTABLE 	R11 R11 K59 ; R11 := R11["missionType"]
	304	[6510]	EQ       	0 R11 K61 ; if R11 ~= 18.000000 then PC := 320
	305	[6510]	JMP      	320 ; PC := 320
	306	[6510]	GETGLOBAL	R12 K3 ; R12 := _T
	307	[6510]	GETTABLE 	R12 R12 K62 ; R12 := R12["inventoriesCommitted"]
	308	[6510]	TEST     	R12 0 ; if not R12 then PC := 320
	309	[6510]	JMP      	320 ; PC := 320
	310	[6512]	GETGLOBAL	R12 K63 ; R12 := mAutoCloseDelay
	311	[6512]	LT       	0 R12 K11 ; if R12 >= 0.000000 then PC := 320
	312	[6512]	JMP      	320 ; PC := 320
	313	[6513]	GETGLOBAL	R12 K14 ; R12 := 0x3d106989
	314	[6513]	LOADK    	R13 K64 ; R13 := "Inventories committed, closing EOM"
	315	[6513]	CALL     	R12 2 1 ; R12(R13)
	316	[6514]	GETGLOBAL	R12 K3 ; R12 := _T
	317	[6514]	SETTABLE 	R12 K62 K65 ; R12["inventoriesCommitted"] := false
	318	[6516]	GETUPVAL 	R12 U12 ; R12 := U12
	319	[6516]	CALL     	R12 1 1 ; R12()
	320	[6522]	GETUPVAL 	R12 U6 ; R12 := U6
	321	[6522]	TEST     	R12 0 ; if not R12 then PC := 339
	322	[6522]	JMP      	339 ; PC := 339
	323	[6522]	GETGLOBAL	R12 K66 ; R12 := mInputBlocked
	324	[6522]	TEST     	R12 1 ; if R12 then PC := 339
	325	[6522]	JMP      	339 ; PC := 339
	326	[6522]	GETGLOBAL	R12 K53 ; R12 := mWaitingForDbUpdate
	327	[6522]	TEST     	R12 1 ; if R12 then PC := 339
	328	[6522]	JMP      	339 ; PC := 339
	329	[6522]	GETGLOBAL	R12 K50 ; R12 := mWaitingForReturnToShip
	330	[6522]	TEST     	R12 1 ; if R12 then PC := 339
	331	[6522]	JMP      	339 ; PC := 339
	332	[6522]	GETUPVAL 	R12 U13 ; R12 := U13
	333	[6522]	CALL     	R12 1 2 ; R12 := R12()
	334	[6522]	TEST     	R12 1 ; if R12 then PC := 339
	335	[6522]	JMP      	339 ; PC := 339
	336	[6523]	GETGLOBAL	R12 K1 ; R12 := 0xae91e43b
	337	[6523]	SELF     	R12 R12 K49 ; R13 := R12; R12 := R12[0x32302b4a]
	338	[6523]	CALL     	R12 2 1 ; R12(R13)
	339	[6526]	GETGLOBAL	R12 K50 ; R12 := mWaitingForReturnToShip
	340	[6526]	TEST     	R12 1 ; if R12 then PC := 542
	341	[6526]	JMP      	542 ; PC := 542
	342	[6526]	GETGLOBAL	R12 K67 ; R12 := mShouldClose
	343	[6526]	TEST     	R12 0 ; if not R12 then PC := 542
	344	[6526]	JMP      	542 ; PC := 542
	345	[6527]	GETUPVAL 	R12 U14 ; R12 := U14
	346	[6527]	CALL     	R12 1 2 ; R12 := R12()
	347	[6528]	GETTABLE 	R13 R12 K59 ; R13 := R12["missionType"]
	348	[6529]	GETTABLE 	R14 R12 K68 ; R14 := R12["goalTag"]
	349	[6532]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	350	[6532]	MOVE     	R16 R14 ; R16 := R14
	351	[6532]	CALL     	R15 2 2 ; R15 := R15(R16)
	352	[6532]	TEST     	R15 1 ; if R15 then PC := 365
	353	[6532]	JMP      	365 ; PC := 365
	354	[6532]	GETGLOBAL	R15 K69 ; R15 := 0x0469f296
	355	[6532]	LOADK    	R16 K70 ; R16 := "MoonQuestMissionThree"
	356	[6532]	CALL     	R15 2 2 ; R15 := R15(R16)
	357	[6532]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 365
	358	[6532]	JMP      	365 ; PC := 365
	359	[6533]	GETGLOBAL	R15 K26 ; R15 := mGameData
	360	[6533]	SELF     	R15 R15 K71 ; R16 := R15; R15 := R15[0x489e2f69]
	361	[6533]	GETUPVAL 	R17 U15 ; R17 := U15
	362	[6533]	GETTABLE 	R17 R17 K72 ; R17 := R17["REGION_TAG_MOON_VOID"]
	363	[6533]	CALL     	R15 3 1 ; R15(R16,R17)
	364	[6533]	JMP      	400 ; PC := 400
	365	[6534]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	366	[6534]	MOVE     	R16 R14 ; R16 := R14
	367	[6534]	CALL     	R15 2 2 ; R15 := R15(R16)
	368	[6534]	TEST     	R15 1 ; if R15 then PC := 381
	369	[6534]	JMP      	381 ; PC := 381
	370	[6534]	GETGLOBAL	R15 K69 ; R15 := 0x0469f296
	371	[6534]	LOADK    	R16 K73 ; R16 := "MoonQuestMissionFour"
	372	[6534]	CALL     	R15 2 2 ; R15 := R15(R16)
	373	[6534]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 381
	374	[6534]	JMP      	381 ; PC := 381
	375	[6535]	GETGLOBAL	R15 K26 ; R15 := mGameData
	376	[6535]	SELF     	R15 R15 K71 ; R16 := R15; R15 := R15[0x489e2f69]
	377	[6535]	GETUPVAL 	R17 U15 ; R17 := U15
	378	[6535]	GETTABLE 	R17 R17 K74 ; R17 := R17["REGION_TAG_MOON_EARTH"]
	379	[6535]	CALL     	R15 3 1 ; R15(R16,R17)
	380	[6535]	JMP      	400 ; PC := 400
	381	[6536]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	382	[6536]	MOVE     	R16 R14 ; R16 := R14
	383	[6536]	CALL     	R15 2 2 ; R15 := R15(R16)
	384	[6536]	TEST     	R15 1 ; if R15 then PC := 400
	385	[6536]	JMP      	400 ; PC := 400
	386	[6536]	GETGLOBAL	R15 K69 ; R15 := 0x0469f296
	387	[6536]	LOADK    	R16 K75 ; R16 := "MoonQuestMissionFive"
	388	[6536]	CALL     	R15 2 2 ; R15 := R15(R16)
	389	[6536]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 400
	390	[6536]	JMP      	400 ; PC := 400
	391	[6538]	GETGLOBAL	R15 K26 ; R15 := mGameData
	392	[6538]	SELF     	R15 R15 K71 ; R16 := R15; R15 := R15[0x489e2f69]
	393	[6538]	GETUPVAL 	R17 U15 ; R17 := U15
	394	[6538]	GETTABLE 	R17 R17 K74 ; R17 := R17["REGION_TAG_MOON_EARTH"]
	395	[6538]	CALL     	R15 3 1 ; R15(R16,R17)
	396	[6539]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	397	[6539]	SELF     	R15 R15 K49 ; R16 := R15; R15 := R15[0x32302b4a]
	398	[6539]	CALL     	R15 2 1 ; R15(R16)
	399	[6540]	RETURN   	R0 1 ; return 
	400	[6543]	GETGLOBAL	R15 K76 ; R15 := 0x9ba7909f
	401	[6543]	SELF     	R15 R15 K77 ; R16 := R15; R15 := R15[0xbf9494fc]
	402	[6543]	LOADK    	R17 K78 ; R17 := "LotusGameRules.DemoMode"
	403	[6543]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	404	[6543]	TEST     	R15 0 ; if not R15 then PC := 411
	405	[6543]	JMP      	411 ; PC := 411
	406	[6544]	GETGLOBAL	R15 K45 ; R15 := 0x34291f5c
	407	[6544]	GETTABLE 	R15 R15 K79 ; R15 := R15[0x8ee24660]
	408	[6544]	OP_LOADBOOL	R16 0 0 ; R16 := false
	409	[6544]	CALL     	R15 2 1 ; R15(R16)
	410	[6544]	JMP      	539 ; PC := 539
	411	[6545]	EQ       	0 R13 K61 ; if R13 ~= 18.000000 then PC := 417
	412	[6545]	JMP      	417 ; PC := 417
	413	[6545]	GETGLOBAL	R15 K3 ; R15 := _T
	414	[6545]	GETTABLE 	R15 R15 K80 ; R15 := R15["raidIntermediateStage"]
	415	[6545]	TEST     	R15 1 ; if R15 then PC := 421
	416	[6545]	JMP      	421 ; PC := 421
	417	[6545]	GETUPVAL 	R15 U9 ; R15 := U9
	418	[6545]	GETTABLE 	R15 R15 K37 ; R15 := R15["isPvp"]
	419	[6545]	TEST     	R15 0 ; if not R15 then PC := 425
	420	[6545]	JMP      	425 ; PC := 425
	421	[6546]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	422	[6546]	SELF     	R15 R15 K49 ; R16 := R15; R15 := R15[0x32302b4a]
	423	[6546]	CALL     	R15 2 1 ; R15(R16)
	424	[6546]	JMP      	539 ; PC := 539
	425	[6548]	EQ       	1 R13 K81 ; if R13 == 31.000000 then PC := 428
	426	[6548]	JMP      	428 ; PC := 428
	427	[6548]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 428
	428	[6548]	OP_LOADBOOL	R15 1 0 ; R15 := true
	429	[6549]	GETGLOBAL	R16 K9 ; R16 := 0xbe190284
	430	[6549]	SELF     	R16 R16 K82 ; R17 := R16; R16 := R16[0xf2deaf69]
	431	[6549]	GETGLOBAL	R18 K83 ; R18 := gLotusBaseGameRulesType
	432	[6549]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	433	[6549]	TEST     	R16 0 ; if not R16 then PC := 438
	434	[6549]	JMP      	438 ; PC := 438
	435	[6549]	GETGLOBAL	R16 K9 ; R16 := 0xbe190284
	436	[6549]	SELF     	R16 R16 K84 ; R17 := R16; R16 := R16[0x5d204145]
	437	[6549]	CALL     	R16 2 2 ; R16 := R16(R17)
	438	[6551]	TESTSET  	R17 R15 0 ; if not R15 then PC := 441 else R17 := R15 
	439	[6551]	JMP      	441 ; PC := 441
	440	[6551]	NOT      	R17 R16 ; R17 := not R16
	441	[6552]	TEST     	R17 0 ; if not R17 then PC := 451
	442	[6552]	JMP      	451 ; PC := 451
	443	[6552]	GETUPVAL 	R18 U16 ; R18 := U16
	444	[6552]	CALL     	R18 1 2 ; R18 := R18()
	445	[6552]	TEST     	R18 1 ; if R18 then PC := 451
	446	[6552]	JMP      	451 ; PC := 451
	447	[6553]	GETGLOBAL	R18 K1 ; R18 := 0xae91e43b
	448	[6553]	SELF     	R18 R18 K49 ; R19 := R18; R18 := R18[0x32302b4a]
	449	[6553]	CALL     	R18 2 1 ; R18(R19)
	450	[6553]	JMP      	539 ; PC := 539
	451	[6555]	GETGLOBAL	R18 K8 ; R18 := 0x89326c93
	452	[6555]	SELF     	R18 R18 K24 ; R19 := R18; R18 := R18[0x18d05d30]
	453	[6555]	CALL     	R18 2 2 ; R18 := R18(R19)
	454	[6555]	TEST     	R18 0 ; if not R18 then PC := 500
	455	[6555]	JMP      	500 ; PC := 500
	456	[6556]	TEST     	R17 1 ; if R17 then PC := 493
	457	[6556]	JMP      	493 ; PC := 493
	458	[6556]	GETUPVAL 	R18 U11 ; R18 := U11
	459	[6556]	GETTABLE 	R18 R18 K57 ; R18 := R18[0xcdc34211]
	460	[6556]	CALL     	R18 1 2 ; R18 := R18()
	461	[6556]	TEST     	R18 0 ; if not R18 then PC := 493
	462	[6556]	JMP      	493 ; PC := 493
	463	[6558]	TEST     	R15 0 ; if not R15 then PC := 472
	464	[6558]	JMP      	472 ; PC := 472
	465	[6558]	TEST     	R16 0 ; if not R16 then PC := 472
	466	[6558]	JMP      	472 ; PC := 472
	467	[6559]	GETGLOBAL	R18 K9 ; R18 := 0xbe190284
	468	[6559]	SELF     	R18 R18 K85 ; R19 := R18; R18 := R18[0x8a9ca6b8]
	469	[6563]	CLOSURE  	R20 0 ; R20 := closure(Function #1)
	470	[6563]	GETUPVAL 	R0 U11 ; R0 := U11
	471	[6559]	CALL     	R18 3 1 ; R18(R19,R20)
	472	[6570]	GETUPVAL 	R18 U17 ; R18 := U17
	473	[6570]	GETTABLE 	R18 R18 K86 ; R18 := R18[0x06d055f9]
	474	[6570]	MOVE     	R19 R16 ; R19 := R16
	475	[6570]	LOADK    	R20 := 0.000000
	476	[6570]	LOADK    	R21 := 1.000000
	477	[6570]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	478	[6571]	GETUPVAL 	R19 U17 ; R19 := U17
	479	[6571]	GETTABLE 	R19 R19 K86 ; R19 := R19[0x06d055f9]
	480	[6571]	EQ       	1 R13 K81 ; if R13 == 31.000000 then PC := 483
	481	[6571]	JMP      	483 ; PC := 483
	482	[6571]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 483
	483	[6571]	OP_LOADBOOL	R20 1 0 ; R20 := true
	484	[6571]	LOADK    	R21 := -1.000000
	485	[6571]	LOADK    	R22 := 0.000000
	486	[6571]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	487	[6572]	GETGLOBAL	R20 K9 ; R20 := 0xbe190284
	488	[6572]	SELF     	R20 R20 K87 ; R21 := R20; R20 := R20[0xf9bfc5d9]
	489	[6572]	MOVE     	R22 R18 ; R22 := R18
	490	[6572]	MOVE     	R23 R19 ; R23 := R19
	491	[6572]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	492	[6572]	JMP      	528 ; PC := 528
	493	[6577]	GETGLOBAL	R20 K8 ; R20 := 0x89326c93
	494	[6577]	SELF     	R20 R20 K88 ; R21 := R20; R20 := R20[0x29ef273d]
	495	[6577]	CALL     	R20 2 2 ; R20 := R20(R21)
	496	[6577]	SELF     	R20 R20 K89 ; R21 := R20; R20 := R20[0x0077d753]
	497	[6577]	OP_LOADBOOL	R22 1 0 ; R22 := true
	498	[6577]	CALL     	R20 3 1 ; R20(R21,R22)
	499	[6578]	JMP      	528 ; PC := 528
	500	[6579]	GETUPVAL 	R20 U18 ; R20 := U18
	501	[6579]	CALL     	R20 1 2 ; R20 := R20()
	502	[6579]	TEST     	R20 1 ; if R20 then PC := 506
	503	[6579]	JMP      	506 ; PC := 506
	504	[6579]	TEST     	R9 0 ; if not R9 then PC := 511
	505	[6579]	JMP      	511 ; PC := 511
	506	[6580]	GETGLOBAL	R20 K45 ; R20 := 0x34291f5c
	507	[6580]	GETTABLE 	R20 R20 K79 ; R20 := R20[0x8ee24660]
	508	[6580]	OP_LOADBOOL	R21 0 0 ; R21 := false
	509	[6580]	CALL     	R20 2 1 ; R20(R21)
	510	[6580]	JMP      	528 ; PC := 528
	511	[6581]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	512	[6581]	GETGLOBAL	R21 K35 ; R21 := 0xe7f2b02f
	513	[6581]	SELF     	R21 R21 K36 ; R22 := R21; R21 := R21[0x565be9ee]
	514	[6581]	CALL     	R21 2 0 ; R21,... := R21(R22)
	515	[6581]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	516	[6581]	TEST     	R20 1 ; if R20 then PC := 528
	517	[6581]	JMP      	528 ; PC := 528
	518	[6581]	GETGLOBAL	R20 K35 ; R20 := 0xe7f2b02f
	519	[6581]	SELF     	R20 R20 K36 ; R21 := R20; R20 := R20[0x565be9ee]
	520	[6581]	CALL     	R20 2 2 ; R20 := R20(R21)
	521	[6581]	SELF     	R20 R20 K90 ; R21 := R20; R20 := R20[0xdb45d630]
	522	[6581]	CALL     	R20 2 2 ; R20 := R20(R21)
	523	[6581]	TEST     	R20 0 ; if not R20 then PC := 528
	524	[6581]	JMP      	528 ; PC := 528
	525	[6582]	GETGLOBAL	R20 K9 ; R20 := 0xbe190284
	526	[6582]	SELF     	R20 R20 K91 ; R21 := R20; R20 := R20[0xd96e3d8a]
	527	[6582]	CALL     	R20 2 1 ; R20(R21)
	528	[6585]	TEST     	R17 0 ; if not R17 then PC := 534
	529	[6585]	JMP      	534 ; PC := 534
	530	[6586]	GETGLOBAL	R20 K1 ; R20 := 0xae91e43b
	531	[6586]	SELF     	R20 R20 K49 ; R21 := R20; R20 := R20[0x32302b4a]
	532	[6586]	CALL     	R20 2 1 ; R20(R21)
	533	[6586]	JMP      	539 ; PC := 539
	534	[6587]	GETGLOBAL	R20 K39 ; R20 := mShowDuringLoadingScreen
	535	[6587]	TEST     	R20 0 ; if not R20 then PC := 539
	536	[6587]	JMP      	539 ; PC := 539
	537	[6588]	OP_LOADBOOL	R20 1 0 ; R20 := true
	538	[6588]	SETGLOBALHASH	R20 K50 ; mWaitingForReturnToShip := R20
	539	[6593]	LOADK    	R20 := 0.000000
	540	[6593]	SETGLOBALHASH	R20 K38 ; mReturningToLobbyTime := R20
	541	[6594]	RETURN   	R0 1 ; return 
	542	[6597]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	543	[6597]	GETGLOBAL	R21 K92 ; R21 := mTimerMgr
	544	[6597]	CALL     	R20 2 2 ; R20 := R20(R21)
	545	[6597]	TEST     	R20 1 ; if R20 then PC := 551
	546	[6597]	JMP      	551 ; PC := 551
	547	[6598]	GETGLOBAL	R20 K92 ; R20 := mTimerMgr
	548	[6598]	SELF     	R20 R20 K93 ; R21 := R20; R20 := R20[0xfaa69527]
	549	[6598]	MOVE     	R22 R1 ; R22 := R1
	550	[6598]	CALL     	R20 3 1 ; R20(R21,R22)
	551	[6601]	GETGLOBAL	R20 K63 ; R20 := mAutoCloseDelay
	552	[6601]	LT       	0 K11 R20 ; if 0.000000 >= R20 then PC := 724
	553	[6601]	JMP      	724 ; PC := 724
	554	[6602]	GETGLOBAL	R20 K63 ; R20 := mAutoCloseDelay
	555	[6602]	SUB      	R20 R20 R1 ; R20 := R20 - R1
	556	[6602]	SETGLOBALHASH	R20 K63 ; mAutoCloseDelay := R20
	557	[6604]	GETGLOBAL	R20 K94 ; R20 := 0x5bced4c4
	558	[6604]	GETTABLE 	R20 R20 K95 ; R20 := R20[0x99675e23]
	559	[6604]	GETGLOBAL	R21 K63 ; R21 := mAutoCloseDelay
	560	[6604]	CALL     	R20 2 2 ; R20 := R20(R21)
	561	[6605]	LOADK    	R21 K52 ; R21 := ""
	562	[6606]	LT       	0 K11 R20 ; if 0.000000 >= R20 then PC := 576
	563	[6606]	JMP      	576 ; PC := 576
	564	[6606]	GETGLOBAL	R22 K96 ; R22 := mCountdownMessage
	565	[6606]	EQ       	1 R22 K20 ; if R22 == nil then PC := 576
	566	[6606]	JMP      	576 ; PC := 576
	567	[6607]	GETGLOBAL	R22 K97 ; R22 := 0x7f5022cf
	568	[6607]	GETTABLE 	R22 R22 K98 ; R22 := R22[0xe8072ded]
	569	[6607]	GETGLOBAL	R23 K96 ; R23 := mCountdownMessage
	570	[6607]	GETUPVAL 	R24 U17 ; R24 := U17
	571	[6607]	GETTABLE 	R24 R24 K99 ; R24 := R24[0x74a11ec6]
	572	[6607]	MOVE     	R25 R20 ; R25 := R20
	573	[6607]	CALL     	R24 2 0 ; R24,... := R24(R25)
	574	[6607]	CALL     	R22 0 2 ; R22 := R22(R23,...)
	575	[6607]	MOVE     	R21 R22 ; R21 := R22
	576	[6609]	GETUPVAL 	R22 U10 ; R22 := U10
	577	[6609]	MOVE     	R23 R21 ; R23 := R21
	578	[6609]	CALL     	R22 2 1 ; R22(R23)
	579	[6611]	GETGLOBAL	R22 K100 ; R22 := mQuestMissionChecked
	580	[6611]	TEST     	R22 1 ; if R22 then PC := 614
	581	[6611]	JMP      	614 ; PC := 614
	582	[6611]	GETGLOBAL	R22 K63 ; R22 := mAutoCloseDelay
	583	[6611]	GETGLOBAL	R23 K101 ; R23 := AUTO_CLOSE_DELAY
	584	[6611]	DIV      	R23 R23 K102 ; R23 := R23 / 3.000000
	585	[6611]	LT       	0 R22 R23 ; if R22 >= R23 then PC := 614
	586	[6611]	JMP      	614 ; PC := 614
	587	[6612]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	588	[6612]	GETGLOBAL	R23 K9 ; R23 := 0xbe190284
	589	[6612]	CALL     	R22 2 2 ; R22 := R22(R23)
	590	[6612]	TEST     	R22 1 ; if R22 then PC := 612
	591	[6612]	JMP      	612 ; PC := 612
	592	[6612]	GETGLOBAL	R22 K9 ; R22 := 0xbe190284
	593	[6612]	SELF     	R22 R22 K82 ; R23 := R22; R22 := R22[0xf2deaf69]
	594	[6612]	GETGLOBAL	R24 K83 ; R24 := gLotusBaseGameRulesType
	595	[6612]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	596	[6612]	TEST     	R22 0 ; if not R22 then PC := 612
	597	[6612]	JMP      	612 ; PC := 612
	598	[6612]	GETGLOBAL	R22 K9 ; R22 := 0xbe190284
	599	[6612]	SELF     	R22 R22 K84 ; R23 := R22; R22 := R22[0x5d204145]
	600	[6612]	CALL     	R22 2 2 ; R22 := R22(R23)
	601	[6612]	TEST     	R22 0 ; if not R22 then PC := 612
	602	[6612]	JMP      	612 ; PC := 612
	603	[6613]	GETUPVAL 	R22 U19 ; R22 := U19
	604	[6613]	CALL     	R22 1 2 ; R22 := R22()
	605	[6613]	TEST     	R22 0 ; if not R22 then PC := 612
	606	[6613]	JMP      	612 ; PC := 612
	607	[6614]	OP_LOADBOOL	R22 0 0 ; R22 := false
	608	[6614]	SETGLOBALHASH	R22 K39 ; mShowDuringLoadingScreen := R22
	609	[6615]	GETGLOBAL	R22 K1 ; R22 := 0xae91e43b
	610	[6615]	SELF     	R22 R22 K49 ; R23 := R22; R22 := R22[0x32302b4a]
	611	[6615]	CALL     	R22 2 1 ; R22(R23)
	612	[6618]	OP_LOADBOOL	R22 1 0 ; R22 := true
	613	[6618]	SETGLOBALHASH	R22 K100 ; mQuestMissionChecked := R22
	614	[6621]	GETGLOBAL	R22 K63 ; R22 := mAutoCloseDelay
	615	[6621]	LT       	0 R22 K11 ; if R22 >= 0.000000 then PC := 652
	616	[6621]	JMP      	652 ; PC := 652
	617	[6622]	GETGLOBAL	R22 K53 ; R22 := mWaitingForDbUpdate
	618	[6622]	TEST     	R22 1 ; if R22 then PC := 628
	619	[6622]	JMP      	628 ; PC := 628
	620	[6622]	GETUPVAL 	R22 U9 ; R22 := U9
	621	[6622]	GETTABLE 	R22 R22 K37 ; R22 := R22["isPvp"]
	622	[6622]	TEST     	R22 0 ; if not R22 then PC := 650
	623	[6622]	JMP      	650 ; PC := 650
	624	[6622]	GETUPVAL 	R22 U9 ; R22 := U9
	625	[6622]	GETTABLE 	R22 R22 K103 ; R22 := R22["allPlayersCommitted"]
	626	[6622]	TEST     	R22 1 ; if R22 then PC := 650
	627	[6622]	JMP      	650 ; PC := 650
	628	[6623]	GETUPVAL 	R22 U9 ; R22 := U9
	629	[6623]	GETTABLE 	R22 R22 K37 ; R22 := R22["isPvp"]
	630	[6623]	TEST     	R22 1 ; if R22 then PC := 641
	631	[6623]	JMP      	641 ; PC := 641
	632	[6623]	GETUPVAL 	R22 U6 ; R22 := U6
	633	[6623]	TEST     	R22 1 ; if R22 then PC := 639
	634	[6623]	JMP      	639 ; PC := 639
	635	[6623]	GETUPVAL 	R22 U20 ; R22 := U20
	636	[6623]	CALL     	R22 1 2 ; R22 := R22()
	637	[6623]	TEST     	R22 1 ; if R22 then PC := 641
	638	[6623]	JMP      	641 ; PC := 641
	639	[6624]	OP_LOADBOOL	R22 1 0 ; R22 := true
	640	[6624]	SETGLOBALHASH	R22 K104 ; mCloseWhenDbUpdateComplete := R22
	641	[6627]	GETGLOBAL	R22 K1 ; R22 := 0xae91e43b
	642	[6627]	SELF     	R22 R22 K54 ; R23 := R22; R22 := R22[0x42b04007]
	643	[6627]	LOADK    	R24 K55 ; R24 := "/Lotus/Language/Menu/UpdatingDB"
	644	[6627]	OP_LOADBOOL	R25 0 0 ; R25 := false
	645	[6627]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	646	[6628]	GETUPVAL 	R23 U10 ; R23 := U10
	647	[6628]	MOVE     	R24 R22 ; R24 := R22
	648	[6628]	CALL     	R23 2 1 ; R23(R24)
	649	[6628]	JMP      	652 ; PC := 652
	650	[6630]	GETUPVAL 	R23 U12 ; R23 := U12
	651	[6630]	CALL     	R23 1 1 ; R23()
	652	[6634]	GETGLOBAL	R23 K39 ; R23 := mShowDuringLoadingScreen
	653	[6634]	TEST     	R23 1 ; if R23 then PC := 724
	654	[6634]	JMP      	724 ; PC := 724
	655	[6635]	GETGLOBAL	R23 K63 ; R23 := mAutoCloseDelay
	656	[6635]	LE       	0 R23 K13 ; if R23 > 1.000000 then PC := 685
	657	[6635]	JMP      	685 ; PC := 685
	658	[6636]	GETUPVAL 	R23 U6 ; R23 := U6
	659	[6636]	TEST     	R23 0 ; if not R23 then PC := 664
	660	[6636]	JMP      	664 ; PC := 664
	661	[6637]	LOADK    	R23 := 0.000000
	662	[6637]	SETGLOBALHASH	R23 K105 ; mFadeOut := R23
	663	[6637]	JMP      	671 ; PC := 671
	664	[6639]	GETGLOBAL	R23 K106 ; R23 := 0x42dcc9f5
	665	[6639]	GETGLOBAL	R24 K105 ; R24 := mFadeOut
	666	[6639]	SUB      	R24 R24 R1 ; R24 := R24 - R1
	667	[6639]	LOADK    	R25 := 0.000000
	668	[6639]	LOADK    	R26 := 1.000000
	669	[6639]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	670	[6639]	SETGLOBALHASH	R23 K105 ; mFadeOut := R23
	671	[6641]	GETGLOBAL	R23 K1 ; R23 := 0xae91e43b
	672	[6641]	SELF     	R23 R23 K30 ; R24 := R23; R23 := R23[0x67bc869f]
	673	[6641]	LOADK    	R25 K23 ; R25 := "_root"
	674	[6641]	LOADK    	R26 := 10.000000
	675	[6641]	GETGLOBAL	R27 K105 ; R27 := mFadeOut
	676	[6641]	MUL      	R27 R27 K44 ; R27 := R27 * 100.000000
	677	[6641]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	678	[6642]	GETGLOBAL	R23 K1 ; R23 := 0xae91e43b
	679	[6642]	SELF     	R23 R23 K30 ; R24 := R23; R23 := R23[0x67bc869f]
	680	[6642]	LOADK    	R25 K107 ; R25 := "background"
	681	[6642]	LOADK    	R26 := 10.000000
	682	[6642]	GETGLOBAL	R27 K105 ; R27 := mFadeOut
	683	[6642]	MUL      	R27 R27 K44 ; R27 := R27 * 100.000000
	684	[6642]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	685	[6645]	GETGLOBAL	R23 K63 ; R23 := mAutoCloseDelay
	686	[6645]	GETGLOBAL	R24 K108 ; R24 := AUTO_CLOSE_FADEOUT_TIME
	687	[6645]	LE       	0 R23 R24 ; if R23 > R24 then PC := 724
	688	[6645]	JMP      	724 ; PC := 724
	689	[6645]	GETGLOBAL	R23 K109 ; R23 := mPanelTransitionOutActive
	690	[6645]	TEST     	R23 1 ; if R23 then PC := 724
	691	[6645]	JMP      	724 ; PC := 724
	692	[6646]	OP_LOADBOOL	R23 1 0 ; R23 := true
	693	[6646]	SETGLOBALHASH	R23 K109 ; mPanelTransitionOutActive := R23
	694	[6647]	GETGLOBAL	R23 K110 ; R23 := 0x25312c9b
	695	[6647]	GETGLOBAL	R24 K1 ; R24 := 0xae91e43b
	696	[6647]	LOADK    	R25 K111 ; R25 := "ExpandableArea.Progression.Affinity"
	697	[6647]	LOADK    	R26 := 2.000000
	698	[6647]	NEWTABLE 	R27 2 0 ; R27 := {}
	699	[6647]	LOADK    	R28 := 1.000000
	700	[6647]	LOADK    	R29 := 10.000000
	701	[6647]	SETLIST  	R27 2 1 ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 2
	702	[6647]	NEWTABLE 	R28 2 0 ; R28 := {}
	703	[6647]	LOADK    	R29 := 100.000000
	704	[6647]	LOADK    	R30 := 0.000000
	705	[6647]	SETLIST  	R28 2 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
	706	[6647]	LOADK    	R29 := 0.000000
	707	[6647]	LOADK    	R30 := 0.000000
	708	[6647]	CALL     	R23 8 1 ; R23(R24,R25,R26,R27,R28,R29,R30)
	709	[6648]	GETGLOBAL	R23 K110 ; R23 := 0x25312c9b
	710	[6648]	GETGLOBAL	R24 K1 ; R24 := 0xae91e43b
	711	[6648]	LOADK    	R25 K113 ; R25 := "ExpandableArea.Progression.Rewards"
	712	[6648]	LOADK    	R26 := 2.000000
	713	[6648]	NEWTABLE 	R27 2 0 ; R27 := {}
	714	[6648]	LOADK    	R28 := 1.000000
	715	[6648]	LOADK    	R29 := 10.000000
	716	[6648]	SETLIST  	R27 2 1 ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 2
	717	[6648]	NEWTABLE 	R28 2 0 ; R28 := {}
	718	[6648]	LOADK    	R29 := 300.000000
	719	[6648]	LOADK    	R30 := 0.000000
	720	[6648]	SETLIST  	R28 2 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
	721	[6648]	LOADK    	R29 := 0.000000
	722	[6648]	LOADK    	R30 := 0.000000
	723	[6648]	CALL     	R23 8 1 ; R23(R24,R25,R26,R27,R28,R29,R30)
	724	[6653]	GETGLOBAL	R23 K114 ; R23 := mQueueUpdateButtons
	725	[6653]	TEST     	R23 0 ; if not R23 then PC := 733
	726	[6653]	JMP      	733 ; PC := 733
	727	[6653]	GETGLOBAL	R23 K3 ; R23 := _T
	728	[6653]	GETTABLE 	R23 R23 K115 ; R23 := R23["SetButtons"]
	729	[6653]	EQ       	1 R23 K20 ; if R23 == nil then PC := 733
	730	[6653]	JMP      	733 ; PC := 733
	731	[6654]	GETUPVAL 	R23 U21 ; R23 := U21
	732	[6654]	CALL     	R23 1 1 ; R23()
	733	[6657]	GETGLOBAL	R23 K3 ; R23 := _T
	734	[6657]	GETTABLE 	R23 R23 K4 ; R23 := R23["eomScreenMode"]
	735	[6657]	GETUPVAL 	R24 U0 ; R24 := U0
	736	[6657]	GETTABLE 	R24 R24 K31 ; R24 := R24["QUICK_PREVIEW"]
	737	[6657]	EQ       	1 R23 R24 ; if R23 == R24 then PC := 767
	738	[6657]	JMP      	767 ; PC := 767
	739	[6658]	GETUPVAL 	R23 U22 ; R23 := U22
	740	[6658]	CALL     	R23 1 1 ; R23()
	741	[6660]	GETGLOBAL	R23 K0 ; R23 := 0x7b998233
	742	[6660]	GETGLOBAL	R24 K116 ; R24 := mRewardGrid
	743	[6660]	CALL     	R23 2 2 ; R23 := R23(R24)
	744	[6660]	TEST     	R23 1 ; if R23 then PC := 752
	745	[6660]	JMP      	752 ; PC := 752
	746	[6661]	GETGLOBAL	R23 K116 ; R23 := mRewardGrid
	747	[6661]	SELF     	R23 R23 K117 ; R24 := R23; R23 := R23[0x741d078c]
	748	[6666]	CLOSURE  	R25 1 ; R25 := closure(Function #2)
	749	[6666]	GETUPVAL 	R0 U23 ; R0 := U23
	750	[6666]	MOVE     	R0 R1 ; R0 := R1
	751	[6661]	CALL     	R23 3 1 ; R23(R24,R25)
	752	[6669]	GETGLOBAL	R23 K2 ; R23 := mInitialized
	753	[6669]	TEST     	R23 0 ; if not R23 then PC := 767
	754	[6669]	JMP      	767 ; PC := 767
	755	[6669]	GETGLOBAL	R23 K118 ; R23 := mPendingTallies
	756	[6669]	EQ       	0 R23 K11 ; if R23 ~= 0.000000 then PC := 767
	757	[6669]	JMP      	767 ; PC := 767
	758	[6669]	GETGLOBAL	R23 K63 ; R23 := mAutoCloseDelay
	759	[6669]	LT       	0 R23 K119 ; if R23 >= 3.500000 then PC := 767
	760	[6669]	JMP      	767 ; PC := 767
	761	[6670]	GETUPVAL 	R23 U24 ; R23 := U24
	762	[6670]	CALL     	R23 1 1 ; R23()
	763	[6671]	LOADK    	R23 := -1.000000
	764	[6671]	SETGLOBALHASH	R23 K118 ; mPendingTallies := R23
	765	[6672]	GETUPVAL 	R23 U25 ; R23 := U25
	766	[6672]	CALL     	R23 1 1 ; R23()
	767	[6676]	GETGLOBAL	R23 K3 ; R23 := _T
	768	[6676]	GETTABLE 	R23 R23 K120 ; R23 := R23["MissionEnded"]
	769	[6676]	TEST     	R23 1 ; if R23 then PC := 795
	770	[6676]	JMP      	795 ; PC := 795
	771	[6676]	GETUPVAL 	R23 U11 ; R23 := U11
	772	[6676]	GETTABLE 	R23 R23 K57 ; R23 := R23[0xcdc34211]
	773	[6676]	CALL     	R23 1 2 ; R23 := R23()
	774	[6676]	TEST     	R23 0 ; if not R23 then PC := 795
	775	[6676]	JMP      	795 ; PC := 795
	776	[6676]	TEST     	R0 1 ; if R0 then PC := 795
	777	[6676]	JMP      	795 ; PC := 795
	778	[6677]	GETGLOBAL	R23 K9 ; R23 := 0xbe190284
	779	[6677]	SELF     	R23 R23 K82 ; R24 := R23; R23 := R23[0xf2deaf69]
	780	[6677]	GETGLOBAL	R25 K121 ; R25 := gLotusGameRulesType
	781	[6677]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	782	[6677]	TEST     	R23 0 ; if not R23 then PC := 790
	783	[6677]	JMP      	790 ; PC := 790
	784	[6678]	GETUPVAL 	R23 U26 ; R23 := U26
	785	[6678]	GETGLOBAL	R24 K9 ; R24 := 0xbe190284
	786	[6678]	SELF     	R24 R24 K122 ; R25 := R24; R24 := R24[0x9fad7d24]
	787	[6678]	CALL     	R24 2 0 ; R24,... := R24(R25)
	788	[6678]	CALL     	R23 0 1 ; R23(R24,...)
	789	[6678]	JMP      	795 ; PC := 795
	790	[6680]	GETUPVAL 	R23 U26 ; R23 := U26
	791	[6680]	GETGLOBAL	R24 K9 ; R24 := 0xbe190284
	792	[6680]	SELF     	R24 R24 K123 ; R25 := R24; R24 := R24[0x8dc40238]
	793	[6680]	CALL     	R24 2 0 ; R24,... := R24(R25)
	794	[6680]	CALL     	R23 0 1 ; R23(R24,...)
	795	[6684]	GETGLOBAL	R23 K116 ; R23 := mRewardGrid
	796	[6684]	EQ       	1 R23 K20 ; if R23 == nil then PC := 828
	797	[6684]	JMP      	828 ; PC := 828
	798	[6684]	GETGLOBAL	R23 K116 ; R23 := mRewardGrid
	799	[6684]	GETTABLE 	R23 R23 K124 ; R23 := R23["mScrollBar"]
	800	[6684]	EQ       	1 R23 K20 ; if R23 == nil then PC := 828
	801	[6684]	JMP      	828 ; PC := 828
	802	[6685]	GETGLOBAL	R23 K94 ; R23 := 0x5bced4c4
	803	[6685]	GETTABLE 	R23 R23 K125 ; R23 := R23[0xe4a5b3ca]
	804	[6685]	GETGLOBAL	R24 K116 ; R24 := mRewardGrid
	805	[6685]	GETTABLE 	R24 R24 K124 ; R24 := R24["mScrollBar"]
	806	[6685]	GETTABLE 	R24 R24 K126 ; R24 := R24["mSmoothScroll"]
	807	[6685]	GETTABLE 	R24 R24 K127 ; R24 := R24["mTargetVal"]
	808	[6685]	GETGLOBAL	R25 K116 ; R25 := mRewardGrid
	809	[6685]	GETTABLE 	R25 R25 K124 ; R25 := R25["mScrollBar"]
	810	[6685]	GETTABLE 	R25 R25 K126 ; R25 := R25["mSmoothScroll"]
	811	[6685]	GETTABLE 	R25 R25 K128 ; R25 := R25["mCurVal"]
	812	[6685]	SUB      	R24 R24 R25 ; R24 := R24 - R25
	813	[6685]	CALL     	R23 2 2 ; R23 := R23(R24)
	814	[6685]	LT       	1 R23 K129 ; if R23 < 0.001000 then PC := 817
	815	[6685]	JMP      	817 ; PC := 817
	816	[6685]	OP_LOADBOOL	R23 0 1 ; R23 := false; PC := 817
	817	[6685]	OP_LOADBOOL	R23 1 0 ; R23 := true
	818	[6686]	GETUPVAL 	R24 U27 ; R24 := U27
	819	[6686]	EQ       	1 R24 R23 ; if R24 == R23 then PC := 827
	820	[6686]	JMP      	827 ; PC := 827
	821	[6687]	SETUPVAL 	R23 U27 ; U27 := R23
	822	[6689]	GETGLOBAL	R24 K116 ; R24 := mRewardGrid
	823	[6689]	SELF     	R24 R24 K130 ; R25 := R24; R24 := R24[0xea061e98]
	824	[6692]	CLOSURE  	R26 2 ; R26 := closure(Function #3)
	825	[6692]	MOVE     	R0 R23 ; R0 := R23
	826	[6689]	CALL     	R24 3 1 ; R24(R25,R26)
	827	[6693]	CLOSE    	R23 ; SAVE R23,...
	828	[6695]	RETURN   	R0 1 ; return 

function #143 <?:6699,6737> (81 instructions, 324 bytes at 00000160FF5561D0)
1 param, 13 slots, 1 upvalue, 0 locals, 22 constants, 0 functions
	1	[6701]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6701]	LEN      	R1 R1 ; R1 := # R1
	3	[6701]	LOADK    	R2 := 1.000000
	4	[6701]	LOADK    	R3 := -1.000000
	5	[6701]	FORPREP  	R1 25 ; R1 -= R3; PC := 25
	6	[6702]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	7	[6702]	GETUPVAL 	R6 U0 ; R6 := U0
	8	[6702]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	9	[6702]	GETTABLE 	R6 R6 K1 ; R6 := R6["storeItem"]
	10	[6702]	CALL     	R5 2 2 ; R5 := R5(R6)
	11	[6702]	TEST     	R5 1 ; if R5 then PC := 20
	12	[6702]	JMP      	20 ; PC := 20
	13	[6702]	GETUPVAL 	R5 U0 ; R5 := U0
	14	[6702]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	15	[6702]	GETTABLE 	R5 R5 K1 ; R5 := R5["storeItem"]
	16	[6702]	SELF     	R5 R5 K2 ; R6 := R5; R5 := R5[0xfe9eb1a5]
	17	[6702]	CALL     	R5 2 2 ; R5 := R5(R6)
	18	[6702]	EQ       	0 R5 K4 ; if R5 ~= 35.000000 then PC := 25
	19	[6702]	JMP      	25 ; PC := 25
	20	[6703]	GETGLOBAL	R5 K5 ; R5 := 0x33bdd652
	21	[6703]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x9c1f3b5a]
	22	[6703]	GETUPVAL 	R6 U0 ; R6 := U0
	23	[6703]	MOVE     	R7 R4 ; R7 := R4
	24	[6703]	CALL     	R5 3 1 ; R5(R6,R7)
	25	[6701]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	26	[6707]	LEN      	R5 R0 ; R5 := # R0
	27	[6707]	GETUPVAL 	R6 U0 ; R6 := U0
	28	[6707]	LEN      	R6 R6 ; R6 := # R6
	29	[6707]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 34
	30	[6707]	JMP      	34 ; PC := 34
	31	[6708]	GETGLOBAL	R5 K7 ; R5 := 0x3d106989
	32	[6708]	LOADK    	R6 K8 ; R6 := "WRONG NUM REWARDS"
	33	[6708]	CALL     	R5 2 1 ; R5(R6)
	34	[6711]	LOADK    	R5 := 1.000000
	35	[6711]	LEN      	R6 R0 ; R6 := # R0
	36	[6711]	LOADK    	R7 := 1.000000
	37	[6711]	FORPREP  	R5 80 ; R5 -= R7; PC := 80
	38	[6712]	GETTABLE 	R9 R0 R8 ; R9 := R0[R8]
	39	[6713]	GETGLOBAL	R10 K9 ; R10 := 0xb009bbc6
	40	[6713]	GETTABLE 	R11 R9 K10 ; R11 := R9["StoreItem"]
	41	[6713]	CALL     	R10 2 2 ; R10 := R10(R11)
	42	[6713]	SETTABLE 	R9 K1 R10 ; R9["storeItem"] := R10
	43	[6714]	GETTABLE 	R10 R9 K12 ; R10 := R9["ItemCount"]
	44	[6714]	SETTABLE 	R9 K11 R10 ; R9["itemCount"] := R10
	45	[6715]	GETTABLE 	R10 R9 K14 ; R10 := R9["UpgradeLevel"]
	46	[6715]	SETTABLE 	R9 K13 R10 ; R9["levelOverride"] := R10
	47	[6716]	GETTABLE 	R10 R9 K16 ; R10 := R9["Credits"]
	48	[6716]	SETTABLE 	R9 K15 R10 ; R9["credits"] := R10
	49	[6718]	GETTABLE 	R10 R9 K13 ; R10 := R9["levelOverride"]
	50	[6718]	EQ       	0 R10 K17 ; if R10 ~= nil then PC := 53
	51	[6718]	JMP      	53 ; PC := 53
	52	[6719]	SETTABLE 	R9 K13 K18 ; R9["levelOverride"] := 0.000000
	53	[6722]	GETUPVAL 	R10 U0 ; R10 := U0
	54	[6722]	LEN      	R10 R10 ; R10 := # R10
	55	[6722]	LE       	0 R8 R10 ; if R8 > R10 then PC := 80
	56	[6722]	JMP      	80 ; PC := 80
	57	[6723]	GETUPVAL 	R10 U0 ; R10 := U0
	58	[6723]	GETTABLE 	R10 R10 R8 ; R10 := R10[R8]
	59	[6724]	GETTABLE 	R11 R9 K1 ; R11 := R9["storeItem"]
	60	[6724]	GETTABLE 	R12 R10 K1 ; R12 := R10["storeItem"]
	61	[6724]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 66
	62	[6724]	JMP      	66 ; PC := 66
	63	[6725]	GETGLOBAL	R11 K7 ; R11 := 0x3d106989
	64	[6725]	LOADK    	R12 K19 ; R12 := "WRONG TYPE"
	65	[6725]	CALL     	R11 2 1 ; R11(R12)
	66	[6728]	GETTABLE 	R11 R9 K11 ; R11 := R9["itemCount"]
	67	[6728]	GETTABLE 	R12 R10 K11 ; R12 := R10["itemCount"]
	68	[6728]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 73
	69	[6728]	JMP      	73 ; PC := 73
	70	[6729]	GETGLOBAL	R11 K7 ; R11 := 0x3d106989
	71	[6729]	LOADK    	R12 K20 ; R12 := "WRONG COUNT"
	72	[6729]	CALL     	R11 2 1 ; R11(R12)
	73	[6732]	GETTABLE 	R11 R9 K13 ; R11 := R9["levelOverride"]
	74	[6732]	GETTABLE 	R12 R10 K13 ; R12 := R10["levelOverride"]
	75	[6732]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 80
	76	[6732]	JMP      	80 ; PC := 80
	77	[6733]	GETGLOBAL	R11 K7 ; R11 := 0x3d106989
	78	[6733]	LOADK    	R12 K21 ; R12 := "WRONG LEVEL"
	79	[6733]	CALL     	R11 2 1 ; R11(R12)
	80	[6711]	FORLOOP  	R5 38 ; R5 += R7; if R5 <= R6 then begin PC := 38; R8 := R5 end
	81	[6737]	RETURN   	R0 1 ; return 

function #144 <?:6739,6779> (100 instructions, 400 bytes at 00000160FF5567D0)
0 params, 17 slots, 1 upvalue, 0 locals, 33 constants, 0 functions
	1	[6740]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[6740]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	3	[6740]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[6740]	TEST     	R0 0 ; if not R0 then PC := 8
	5	[6740]	JMP      	8 ; PC := 8
	6	[6741]	OP_LOADBOOL	R0 0 0 ; R0 := false
	7	[6741]	RETURN   	R0 2 ; return R0 
	8	[6744]	GETGLOBAL	R0 K1 ; R0 := 0x89326c93
	9	[6744]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xfb64e76c]
	10	[6744]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[6745]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	12	[6745]	MOVE     	R2 R0 ; R2 := R0
	13	[6745]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[6745]	TEST     	R1 0 ; if not R1 then PC := 18
	15	[6745]	JMP      	18 ; PC := 18
	16	[6746]	OP_LOADBOOL	R1 0 0 ; R1 := false
	17	[6746]	RETURN   	R1 2 ; return R1 
	18	[6749]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0x5ca33548]
	19	[6749]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[6750]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	21	[6750]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x0eb34c69]
	22	[6750]	GETGLOBAL	R4 K6 ; R4 := 0x0469f296
	23	[6750]	MOVE     	R5 R1 ; R5 := R1
	24	[6750]	LOADK    	R6 K7 ; R6 := "NemesisSpawned"
	25	[6750]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	26	[6750]	CALL     	R4 2 2 ; R4 := R4(R5)
	27	[6750]	LOADK    	R5 := 0.000000
	28	[6750]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	29	[6750]	EQ       	0 R2 K8 ; if R2 ~= 0.000000 then PC := 33
	30	[6750]	JMP      	33 ; PC := 33
	31	[6751]	OP_LOADBOOL	R2 0 0 ; R2 := false
	32	[6751]	RETURN   	R2 2 ; return R2 
	33	[6754]	GETGLOBAL	R2 K9 ; R2 := 0x25d99d89
	34	[6754]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x600a0ad6]
	35	[6754]	CALL     	R2 2 2 ; R2 := R2(R3)
	36	[6755]	SELF     	R3 R2 K11 ; R4 := R2; R3 := R2[0xd8140b94]
	37	[6755]	CALL     	R3 2 2 ; R3 := R3(R4)
	38	[6755]	TEST     	R3 1 ; if R3 then PC := 42
	39	[6755]	JMP      	42 ; PC := 42
	40	[6756]	OP_LOADBOOL	R3 0 0 ; R3 := false
	41	[6756]	RETURN   	R3 2 ; return R3 
	42	[6759]	GETGLOBAL	R3 K12 ; R3 := 0xe7f2b02f
	43	[6759]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0x6923a4fa]
	44	[6759]	CALL     	R3 2 2 ; R3 := R3(R4)
	45	[6760]	EQ       	1 R3 K14 ; if R3 == "" then PC := 82
	46	[6760]	JMP      	82 ; PC := 82
	47	[6761]	GETGLOBAL	R4 K15 ; R4 := cjson
	48	[6761]	GETTABLE 	R4 R4 K16 ; R4 := R4[0x7ab914d8]
	49	[6761]	MOVE     	R5 R3 ; R5 := R3
	50	[6761]	CALL     	R4 2 2 ; R4 := R4(R5)
	51	[6762]	GETTABLE 	R5 R4 K17 ; R5 := R4["name"]
	52	[6762]	EQ       	1 R5 K18 ; if R5 == nil then PC := 82
	53	[6762]	JMP      	82 ; PC := 82
	54	[6763]	GETGLOBAL	R5 K19 ; R5 := 0x7f5022cf
	55	[6763]	GETTABLE 	R5 R5 K20 ; R5 := R5[0xa5c556b9]
	56	[6763]	GETTABLE 	R6 R4 K17 ; R6 := R4["name"]
	57	[6763]	GETUPVAL 	R7 U0 ; R7 := U0
	58	[6763]	GETTABLE 	R7 R7 K21 ; R7 := R7["NEMESIS_MISSION_TAG"]
	59	[6763]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	60	[6764]	EQ       	1 R5 K18 ; if R5 == nil then PC := 82
	61	[6764]	JMP      	82 ; PC := 82
	62	[6765]	GETGLOBAL	R6 K19 ; R6 := 0x7f5022cf
	63	[6765]	GETTABLE 	R6 R6 K22 ; R6 := R6[0x1a94c9cc]
	64	[6765]	GETTABLE 	R7 R4 K17 ; R7 := R4["name"]
	65	[6765]	LOADK    	R8 := 1.000000
	66	[6765]	SUB      	R9 R5 K23 ; R9 := R5 - 1.000000
	67	[6765]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	68	[6766]	GETTABLE 	R7 R2 K24 ; R7 := R2["mInfluenceNodes"]
	69	[6767]	LOADK    	R8 := 1.000000
	70	[6767]	LEN      	R9 R7 ; R9 := # R7
	71	[6767]	LOADK    	R10 := 1.000000
	72	[6767]	FORPREP  	R8 81 ; R8 -= R10; PC := 81
	73	[6768]	GETTABLE 	R12 R7 R11 ; R12 := R7[R11]
	74	[6768]	GETTABLE 	R12 R12 K25 ; R12 := R12["mNode"]
	75	[6768]	SELF     	R12 R12 K26 ; R13 := R12; R12 := R12[0x6d604ba7]
	76	[6768]	CALL     	R12 2 2 ; R12 := R12(R13)
	77	[6768]	EQ       	0 R12 R6 ; if R12 ~= R6 then PC := 81
	78	[6768]	JMP      	81 ; PC := 81
	79	[6769]	OP_LOADBOOL	R12 1 0 ; R12 := true
	80	[6769]	RETURN   	R12 2 ; return R12 
	81	[6767]	FORLOOP  	R8 73 ; R8 += R10; if R8 <= R9 then begin PC := 73; R11 := R8 end
	82	[6776]	GETUPVAL 	R12 U0 ; R12 := U0
	83	[6776]	GETTABLE 	R12 R12 K27 ; R12 := R12[0x5e35d4d6]
	84	[6776]	CALL     	R12 1 2 ; R12 := R12()
	85	[6777]	SELF     	R13 R12 K28 ; R14 := R12; R13 := R12[0x3ad9ed31]
	86	[6777]	GETGLOBAL	R15 K4 ; R15 := 0xbe190284
	87	[6777]	SELF     	R15 R15 K29 ; R16 := R15; R15 := R15[0xef893aec]
	88	[6777]	CALL     	R15 2 2 ; R15 := R15(R16)
	89	[6777]	GETTABLE 	R15 R15 K30 ; R15 := R15["location"]
	90	[6777]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	91	[6778]	GETTABLE 	R14 R13 K31 ; R14 := R13["missionTag"]
	92	[6778]	GETGLOBAL	R15 K6 ; R15 := 0x0469f296
	93	[6778]	LOADK    	R16 K32 ; R16 := "NemesisShowdown"
	94	[6778]	CALL     	R15 2 2 ; R15 := R15(R16)
	95	[6778]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 98
	96	[6778]	JMP      	98 ; PC := 98
	97	[6778]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 98
	98	[6778]	OP_LOADBOOL	R14 1 0 ; R14 := true
	99	[6778]	RETURN   	R14 2 ; return R14 
	100	[6779]	RETURN   	R0 1 ; return 

function #145 <?:6781,7101> (996 instructions, 3984 bytes at 00000160FF556E00)
2 params, 85 slots, 21 upvalues, 0 locals, 198 constants, 0 functions
	1	[6782]	OP_LOADBOOL	R2 0 0 ; R2 := false
	2	[6782]	SETGLOBALHASH	R2 K0 ; mWaitingForDbUpdate := R2
	3	[6784]	LOADK    	R2 := 5.000000
	4	[6785]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	5	[6785]	GETGLOBAL	R4 K2 ; R4 := mGameData
	6	[6785]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[6785]	TEST     	R3 0 ; if not R3 then PC := 40
	8	[6785]	JMP      	40 ; PC := 40
	9	[6785]	LT       	0 K3 R2 ; if 0.000000 >= R2 then PC := 40
	10	[6785]	JMP      	40 ; PC := 40
	11	[6786]	SUB      	R2 R2 K4 ; R2 := R2 - 1.000000
	12	[6787]	GETGLOBAL	R3 K5 ; R3 := 0x3d106989
	13	[6787]	LOADK    	R4 K6 ; R4 := "!Something stomped on mGameData! Trying to recover"
	14	[6787]	CALL     	R3 2 1 ; R3(R4)
	15	[6789]	GETGLOBAL	R3 K7 ; R3 := 0x76ea806b
	16	[6789]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x3f3ae64c]
	17	[6789]	LOADK    	R5 := 0.000000
	18	[6789]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	19	[6790]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	20	[6790]	MOVE     	R5 R3 ; R5 := R3
	21	[6790]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[6790]	TEST     	R4 1 ; if R4 then PC := 28
	23	[6790]	JMP      	28 ; PC := 28
	24	[6791]	SELF     	R4 R3 K9 ; R5 := R3; R4 := R3[0x80563238]
	25	[6791]	CALL     	R4 2 2 ; R4 := R4(R5)
	26	[6791]	SETGLOBALHASH	R4 K2 ; mGameData := R4
	27	[6791]	JMP      	31 ; PC := 31
	28	[6793]	GETGLOBAL	R4 K5 ; R4 := 0x3d106989
	29	[6793]	LOADK    	R5 K10 ; R5 := "No player profile!!!!"
	30	[6793]	CALL     	R4 2 1 ; R4(R5)
	31	[6795]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	32	[6795]	GETGLOBAL	R5 K2 ; R5 := mGameData
	33	[6795]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[6795]	TEST     	R4 0 ; if not R4 then PC := 4
	35	[6795]	JMP      	4 ; PC := 4
	36	[6796]	GETGLOBAL	R4 K11 ; R4 := 0xcbd666e1
	37	[6796]	LOADK    	R5 := 0.000000
	38	[6796]	CALL     	R4 2 1 ; R4(R5)
	39	[6797]	JMP      	4 ; PC := 4
	40	[6800]	LOADK    	R4 := 0.000000
	41	[6801]	TEST     	R0 0 ; if not R0 then PC := 572
	42	[6801]	JMP      	572 ; PC := 572
	43	[6801]	EQ       	1 R0 K12 ; if R0 == "false" then PC := 572
	44	[6801]	JMP      	572 ; PC := 572
	45	[6802]	GETGLOBAL	R5 K13 ; R5 := _T
	46	[6802]	SETTABLE 	R5 K14 K15 ; R5["gInventorySaved"] := true
	47	[6804]	GETGLOBAL	R5 K16 ; R5 := cjson
	48	[6804]	GETTABLE 	R5 R5 K17 ; R5 := R5[0x7ab914d8]
	49	[6804]	MOVE     	R6 R1 ; R6 := R1
	50	[6804]	CALL     	R5 2 2 ; R5 := R5(R6)
	51	[6806]	GETTABLE 	R6 R5 K18 ; R6 := R5["MissionRewards"]
	52	[6806]	EQ       	1 R6 K19 ; if R6 == nil then PC := 107
	53	[6806]	JMP      	107 ; PC := 107
	54	[6807]	GETUPVAL 	R6 U0 ; R6 := U0
	55	[6807]	GETTABLE 	R7 R5 K18 ; R7 := R5["MissionRewards"]
	56	[6807]	CALL     	R6 2 1 ; R6(R7)
	57	[6808]	GETTABLE 	R6 R5 K18 ; R6 := R5["MissionRewards"]
	58	[6808]	SETUPVAL 	R6 U1 ; U1 := R6
	59	[6810]	GETGLOBAL	R6 K20 ; R6 := 0xbe190284
	60	[6810]	SELF     	R6 R6 K21 ; R7 := R6; R6 := R6[0xf2deaf69]
	61	[6810]	GETGLOBAL	R8 K22 ; R8 := gLotusGameRulesType
	62	[6810]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	63	[6810]	TEST     	R6 0 ; if not R6 then PC := 107
	64	[6810]	JMP      	107 ; PC := 107
	65	[6812]	GETGLOBAL	R6 K2 ; R6 := mGameData
	66	[6812]	SELF     	R6 R6 K23 ; R7 := R6; R6 := R6[0x261f2922]
	67	[6812]	CALL     	R6 2 2 ; R6 := R6(R7)
	68	[6815]	GETGLOBAL	R7 K24 ; R7 := 0xc8802016
	69	[6815]	GETUPVAL 	R8 U1 ; R8 := U1
	70	[6815]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	71	[6815]	JMP      	95 ; PC := 95
	72	[6816]	GETTABLE 	R12 R11 K25 ; R12 := R11["credits"]
	73	[6816]	EQ       	1 R12 K19 ; if R12 == nil then PC := 88
	74	[6816]	JMP      	88 ; PC := 88
	75	[6818]	GETUPVAL 	R12 U2 ; R12 := U2
	76	[6818]	MOVE     	R13 R4 ; R13 := R4
	77	[6818]	GETTABLE 	R14 R11 K25 ; R14 := R11["credits"]
	78	[6818]	LOADK    	R15 K26 ; R15 := "Credits"
	79	[6818]	GETUPVAL 	R16 U3 ; R16 := U3
	80	[6818]	GETTABLE 	R16 R16 K27 ; R16 := R16[0x1142c7a8]
	81	[6818]	GETTABLE 	R17 R11 K25 ; R17 := R11["credits"]
	82	[6818]	CALL     	R16 2 2 ; R16 := R16(R17)
	83	[6818]	LOADK    	R17 K28 ; R17 := " collected credits"
	84	[6818]	CONCAT   	R16 R16 R17 ; R16 := R16 .. R17
	85	[6818]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	86	[6818]	MOVE     	R4 R12 ; R4 := R12
	87	[6818]	JMP      	95 ; PC := 95
	88	[6820]	GETGLOBAL	R12 K2 ; R12 := mGameData
	89	[6820]	SELF     	R12 R12 K29 ; R13 := R12; R12 := R12[0x1b746252]
	90	[6820]	GETTABLE 	R14 R11 K30 ; R14 := R11["storeItem"]
	91	[6820]	GETTABLE 	R15 R11 K31 ; R15 := R11["levelOverride"]
	92	[6820]	OP_LOADBOOL	R16 1 0 ; R16 := true
	93	[6820]	GETTABLE 	R17 R11 K32 ; R17 := R11["itemCount"]
	94	[6820]	CALL     	R12 6 1 ; R12(R13,R14,R15,R16,R17)
	95	[6815]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 72; R9 := R10 end
	96	[6821]	JMP      	72 ; PC := 72
	97	[6825]	LOADK    	R12 := 1.000000
	98	[6825]	LEN      	R13 R6 ; R13 := # R6
	99	[6825]	LOADK    	R14 := 1.000000
	100	[6825]	FORPREP  	R12 106 ; R12 -= R14; PC := 106
	101	[6826]	GETGLOBAL	R16 K33 ; R16 := 0x33bdd652
	102	[6826]	GETTABLE 	R16 R16 K34 ; R16 := R16[0x23d5322f]
	103	[6826]	GETUPVAL 	R17 U1 ; R17 := U1
	104	[6826]	GETTABLE 	R18 R6 R15 ; R18 := R6[R15]
	105	[6826]	CALL     	R16 3 1 ; R16(R17,R18)
	106	[6825]	FORLOOP  	R12 101 ; R12 += R14; if R12 <= R13 then begin PC := 101; R15 := R12 end
	107	[6831]	GETTABLE 	R16 R5 K35 ; R16 := R5["TotalCredits"]
	108	[6831]	EQ       	1 R16 K19 ; if R16 == nil then PC := 118
	109	[6831]	JMP      	118 ; PC := 118
	110	[6832]	GETGLOBAL	R16 K36 ; R16 := mPlayerMissionInfo
	111	[6832]	GETTABLE 	R17 R5 K35 ; R17 := R5["TotalCredits"]
	112	[6832]	GETTABLE 	R17 R17 K4 ; R17 := R17[1.000000]
	113	[6832]	SETTABLE 	R16 K37 R17 ; R16["mTotalCredits"] := R17
	114	[6833]	GETGLOBAL	R16 K36 ; R16 := mPlayerMissionInfo
	115	[6833]	GETTABLE 	R17 R5 K35 ; R17 := R5["TotalCredits"]
	116	[6833]	GETTABLE 	R17 R17 K39 ; R17 := R17[2.000000]
	117	[6833]	SETTABLE 	R16 K38 R17 ; R16["mFinalCredits"] := R17
	118	[6836]	GETTABLE 	R16 R5 K40 ; R16 := R5["NemesisRankUp"]
	119	[6836]	EQ       	1 R16 K19 ; if R16 == nil then PC := 145
	120	[6836]	JMP      	145 ; PC := 145
	121	[6837]	GETGLOBAL	R16 K41 ; R16 := 0x25d99d89
	122	[6837]	SELF     	R16 R16 K42 ; R17 := R16; R16 := R16[0x600a0ad6]
	123	[6837]	CALL     	R16 2 2 ; R16 := R16(R17)
	124	[6838]	GETUPVAL 	R17 U4 ; R17 := U4
	125	[6838]	GETTABLE 	R17 R17 K43 ; R17 := R17[0x6a965652]
	126	[6838]	MOVE     	R18 R16 ; R18 := R16
	127	[6838]	CALL     	R17 2 2 ; R17 := R17(R18)
	128	[6839]	GETGLOBAL	R18 K44 ; R18 := 0x603636ad
	129	[6839]	LOADK    	R19 K45 ; R19 := "/Lotus/Language/Kingpins/NemesisPopupRankupLabel"
	130	[6839]	OP_LOADBOOL	R20 0 0 ; R20 := false
	131	[6839]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	132	[6840]	GETGLOBAL	R19 K46 ; R19 := 0x0032441c
	133	[6840]	NEWTABLE 	R20 0 6 ; R20 := {}
	134	[6840]	SETTABLE 	R20 K48 K15 ; R20["OpenScreen"] := true
	135	[6840]	SETTABLE 	R20 K49 K15 ; R20["IsRankUp"] := true
	136	[6840]	GETTABLE 	R21 R5 K40 ; R21 := R5["NemesisRankUp"]
	137	[6840]	ADD      	R21 R21 K4 ; R21 := R21 + 1.000000
	138	[6840]	SETTABLE 	R20 K50 R21 ; R20["Rank"] := R21
	139	[6840]	SETTABLE 	R20 K51 R18 ; R20["Description"] := R18
	140	[6840]	GETTABLE 	R21 R17 K53 ; R21 := R17["mName"]
	141	[6840]	SETTABLE 	R20 K52 R21 ; R20["Name"] := R21
	142	[6840]	GETTABLE 	R21 R17 K55 ; R21 := R17["mFaction"]
	143	[6840]	SETTABLE 	R20 K54 R21 ; R20["FactionId"] := R21
	144	[6840]	SETTABLE 	R19 K47 R20 ; R19["NemesisPopup_Info"] := R20
	145	[6843]	GETTABLE 	R19 R5 K56 ; R19 := R5["NemesisTaxInfo"]
	146	[6843]	EQ       	1 R19 K19 ; if R19 == nil then PC := 273
	147	[6843]	JMP      	273 ; PC := 273
	148	[6844]	GETUPVAL 	R19 U4 ; R19 := U4
	149	[6844]	GETTABLE 	R19 R19 K57 ; R19 := R19[0x9d3fe9c0]
	150	[6844]	GETGLOBAL	R20 K58 ; R20 := 0x0469f296
	151	[6844]	LOADK    	R21 K59 ; R21 := "RewardsTaxed"
	152	[6844]	CALL     	R20 2 0 ; R20,... := R20(R21)
	153	[6844]	CALL     	R19 0 1 ; R19(R20,...)
	154	[6845]	GETGLOBAL	R19 K13 ; R19 := _T
	155	[6845]	SETTABLE 	R19 K60 K61 ; R19["EndOfMissionVoiceOverride"] := ""
	156	[6847]	GETGLOBAL	R19 K36 ; R19 := mPlayerMissionInfo
	157	[6847]	GETTABLE 	R19 R19 K62 ; R19 := R19["mNemesisTaxInfo"]
	158	[6847]	GETGLOBAL	R20 K64 ; R20 := 0x03f57322
	159	[6847]	GETTABLE 	R21 R5 K56 ; R21 := R5["NemesisTaxInfo"]
	160	[6847]	GETTABLE 	R21 R21 K65 ; R21 := R21["TaxRate"]
	161	[6847]	CALL     	R20 2 2 ; R20 := R20(R21)
	162	[6847]	SETTABLE 	R19 K63 R20 ; R19["mTaxRate"] := R20
	163	[6849]	GETTABLE 	R19 R5 K56 ; R19 := R5["NemesisTaxInfo"]
	164	[6849]	GETTABLE 	R19 R19 K66 ; R19 := R19["TaxedCredits"]
	165	[6849]	EQ       	1 R19 K19 ; if R19 == nil then PC := 174
	166	[6849]	JMP      	174 ; PC := 174
	167	[6850]	GETGLOBAL	R19 K36 ; R19 := mPlayerMissionInfo
	168	[6850]	GETTABLE 	R19 R19 K62 ; R19 := R19["mNemesisTaxInfo"]
	169	[6850]	GETGLOBAL	R20 K64 ; R20 := 0x03f57322
	170	[6850]	GETTABLE 	R21 R5 K56 ; R21 := R5["NemesisTaxInfo"]
	171	[6850]	GETTABLE 	R21 R21 K66 ; R21 := R21["TaxedCredits"]
	172	[6850]	CALL     	R20 2 2 ; R20 := R20(R21)
	173	[6850]	SETTABLE 	R19 K67 R20 ; R19["mTaxedCredits"] := R20
	174	[6853]	GETTABLE 	R19 R5 K56 ; R19 := R5["NemesisTaxInfo"]
	175	[6853]	GETTABLE 	R19 R19 K68 ; R19 := R19["TaxedFusionPoints"]
	176	[6853]	EQ       	1 R19 K19 ; if R19 == nil then PC := 185
	177	[6853]	JMP      	185 ; PC := 185
	178	[6854]	GETGLOBAL	R19 K36 ; R19 := mPlayerMissionInfo
	179	[6854]	GETTABLE 	R19 R19 K62 ; R19 := R19["mNemesisTaxInfo"]
	180	[6854]	GETGLOBAL	R20 K64 ; R20 := 0x03f57322
	181	[6854]	GETTABLE 	R21 R5 K56 ; R21 := R5["NemesisTaxInfo"]
	182	[6854]	GETTABLE 	R21 R21 K68 ; R21 := R21["TaxedFusionPoints"]
	183	[6854]	CALL     	R20 2 2 ; R20 := R20(R21)
	184	[6854]	SETTABLE 	R19 K69 R20 ; R19["mTaxedFusionPoints"] := R20
	185	[6857]	GETTABLE 	R19 R5 K56 ; R19 := R5["NemesisTaxInfo"]
	186	[6857]	GETTABLE 	R19 R19 K70 ; R19 := R19["TaxedCrewShipFusionPoints"]
	187	[6857]	EQ       	1 R19 K19 ; if R19 == nil then PC := 196
	188	[6857]	JMP      	196 ; PC := 196
	189	[6858]	GETGLOBAL	R19 K36 ; R19 := mPlayerMissionInfo
	190	[6858]	GETTABLE 	R19 R19 K62 ; R19 := R19["mNemesisTaxInfo"]
	191	[6858]	GETGLOBAL	R20 K64 ; R20 := 0x03f57322
	192	[6858]	GETTABLE 	R21 R5 K56 ; R21 := R5["NemesisTaxInfo"]
	193	[6858]	GETTABLE 	R21 R21 K70 ; R21 := R21["TaxedCrewShipFusionPoints"]
	194	[6858]	CALL     	R20 2 2 ; R20 := R20(R21)
	195	[6858]	SETTABLE 	R19 K71 R20 ; R19["mTaxedCrewShipFusionPoints"] := R20
	196	[6861]	GETTABLE 	R19 R5 K56 ; R19 := R5["NemesisTaxInfo"]
	197	[6861]	GETTABLE 	R19 R19 K72 ; R19 := R19["TaxedMiscItems"]
	198	[6861]	EQ       	1 R19 K19 ; if R19 == nil then PC := 227
	199	[6861]	JMP      	227 ; PC := 227
	200	[6862]	NEWTABLE 	R19 0 0 ; R19 := {}
	201	[6863]	LOADK    	R20 := 1.000000
	202	[6863]	GETTABLE 	R21 R5 K56 ; R21 := R5["NemesisTaxInfo"]
	203	[6863]	GETTABLE 	R21 R21 K72 ; R21 := R21["TaxedMiscItems"]
	204	[6863]	LEN      	R21 R21 ; R21 := # R21
	205	[6863]	LOADK    	R22 := 1.000000
	206	[6863]	FORPREP  	R20 223 ; R20 -= R22; PC := 223
	207	[6864]	GETTABLE 	R24 R5 K56 ; R24 := R5["NemesisTaxInfo"]
	208	[6864]	GETTABLE 	R24 R24 K72 ; R24 := R24["TaxedMiscItems"]
	209	[6864]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	210	[6865]	GETGLOBAL	R25 K33 ; R25 := 0x33bdd652
	211	[6865]	GETTABLE 	R25 R25 K34 ; R25 := R25[0x23d5322f]
	212	[6865]	MOVE     	R26 R19 ; R26 := R19
	213	[6865]	GETGLOBAL	R27 K73 ; R27 := 0x6c97a788
	214	[6865]	GETTABLE 	R27 R27 K74 ; R27 := R27[0x925e2bbb]
	215	[6865]	GETGLOBAL	R28 K75 ; R28 := 0x7ed0a956
	216	[6865]	GETTABLE 	R29 R24 K76 ; R29 := R24["ItemType"]
	217	[6865]	CALL     	R28 2 2 ; R28 := R28(R29)
	218	[6865]	GETGLOBAL	R29 K64 ; R29 := 0x03f57322
	219	[6865]	GETTABLE 	R30 R24 K77 ; R30 := R24["ItemCount"]
	220	[6865]	CALL     	R29 2 0 ; R29,... := R29(R30)
	221	[6865]	CALL     	R27 0 0 ; R27,... := R27(R28,...)
	222	[6865]	CALL     	R25 0 1 ; R25(R26,...)
	223	[6863]	FORLOOP  	R20 207 ; R20 += R22; if R20 <= R21 then begin PC := 207; R23 := R20 end
	224	[6868]	GETGLOBAL	R25 K36 ; R25 := mPlayerMissionInfo
	225	[6868]	GETTABLE 	R25 R25 K62 ; R25 := R25["mNemesisTaxInfo"]
	226	[6868]	SETTABLE 	R25 K78 R19 ; R25["mTaxedMiscItems"] := R19
	227	[6871]	GETTABLE 	R25 R5 K56 ; R25 := R5["NemesisTaxInfo"]
	228	[6871]	GETTABLE 	R25 R25 K79 ; R25 := R25["TaxedCollectedItems"]
	229	[6871]	EQ       	1 R25 K19 ; if R25 == nil then PC := 273
	230	[6871]	JMP      	273 ; PC := 273
	231	[6872]	NEWTABLE 	R25 0 0 ; R25 := {}
	232	[6873]	LOADK    	R26 := 1.000000
	233	[6873]	GETTABLE 	R27 R5 K56 ; R27 := R5["NemesisTaxInfo"]
	234	[6873]	GETTABLE 	R27 R27 K79 ; R27 := R27["TaxedCollectedItems"]
	235	[6873]	LEN      	R27 R27 ; R27 := # R27
	236	[6873]	LOADK    	R28 := 1.000000
	237	[6873]	FORPREP  	R26 269 ; R26 -= R28; PC := 269
	238	[6874]	GETTABLE 	R30 R5 K56 ; R30 := R5["NemesisTaxInfo"]
	239	[6874]	GETTABLE 	R30 R30 K79 ; R30 := R30["TaxedCollectedItems"]
	240	[6874]	GETTABLE 	R30 R30 R29 ; R30 := R30[R29]
	241	[6876]	GETGLOBAL	R31 K73 ; R31 := 0x6c97a788
	242	[6876]	GETTABLE 	R31 R31 K80 ; R31 := R31[0xab8a5261]
	243	[6876]	CALL     	R31 1 2 ; R31 := R31()
	244	[6877]	GETGLOBAL	R32 K81 ; R32 := 0xb009bbc6
	245	[6877]	GETTABLE 	R33 R30 K82 ; R33 := R30["StoreItem"]
	246	[6877]	CALL     	R32 2 2 ; R32 := R32(R33)
	247	[6877]	SETTABLE 	R31 K30 R32 ; R31["storeItem"] := R32
	248	[6879]	GETTABLE 	R32 R30 K77 ; R32 := R30["ItemCount"]
	249	[6879]	EQ       	1 R32 K19 ; if R32 == nil then PC := 256
	250	[6879]	JMP      	256 ; PC := 256
	251	[6880]	GETGLOBAL	R32 K64 ; R32 := 0x03f57322
	252	[6880]	GETTABLE 	R33 R30 K77 ; R33 := R30["ItemCount"]
	253	[6880]	CALL     	R32 2 2 ; R32 := R32(R33)
	254	[6880]	SETTABLE 	R31 K32 R32 ; R31["itemCount"] := R32
	255	[6880]	JMP      	257 ; PC := 257
	256	[6882]	SETTABLE 	R31 K32 K4 ; R31["itemCount"] := 1.000000
	257	[6885]	GETTABLE 	R32 R30 K83 ; R32 := R30["LevelOverride"]
	258	[6885]	EQ       	1 R32 K19 ; if R32 == nil then PC := 264
	259	[6885]	JMP      	264 ; PC := 264
	260	[6886]	GETGLOBAL	R32 K64 ; R32 := 0x03f57322
	261	[6886]	GETTABLE 	R33 R30 K83 ; R33 := R30["LevelOverride"]
	262	[6886]	CALL     	R32 2 2 ; R32 := R32(R33)
	263	[6886]	SETTABLE 	R31 K31 R32 ; R31["levelOverride"] := R32
	264	[6889]	GETGLOBAL	R32 K33 ; R32 := 0x33bdd652
	265	[6889]	GETTABLE 	R32 R32 K34 ; R32 := R32[0x23d5322f]
	266	[6889]	MOVE     	R33 R25 ; R33 := R25
	267	[6889]	MOVE     	R34 R31 ; R34 := R31
	268	[6889]	CALL     	R32 3 1 ; R32(R33,R34)
	269	[6873]	FORLOOP  	R26 238 ; R26 += R28; if R26 <= R27 then begin PC := 238; R29 := R26 end
	270	[6892]	GETGLOBAL	R32 K36 ; R32 := mPlayerMissionInfo
	271	[6892]	GETTABLE 	R32 R32 K62 ; R32 := R32["mNemesisTaxInfo"]
	272	[6892]	SETTABLE 	R32 K84 R25 ; R32["mTaxedCollectedItems"] := R25
	273	[6896]	LOADK    	R32 K85 ; R32 := "LichDefeatedPlayerTaunt"
	274	[6897]	GETGLOBAL	R33 K46 ; R33 := 0x0032441c
	275	[6897]	GETTABLE 	R33 R33 K86 ; R33 := R33["NemesisTaunt"]
	276	[6897]	EQ       	1 R33 K19 ; if R33 == nil then PC := 284
	277	[6897]	JMP      	284 ; PC := 284
	278	[6897]	GETGLOBAL	R33 K46 ; R33 := 0x0032441c
	279	[6897]	GETTABLE 	R33 R33 K86 ; R33 := R33["NemesisTaunt"]
	280	[6897]	SELF     	R33 R33 K87 ; R34 := R33; R33 := R33[0x56c01834]
	281	[6897]	CALL     	R33 2 2 ; R33 := R33(R34)
	282	[6897]	TEST     	R33 1 ; if R33 then PC := 326
	283	[6897]	JMP      	326 ; PC := 326
	284	[6898]	GETUPVAL 	R33 U5 ; R33 := U5
	285	[6898]	CALL     	R33 1 2 ; R33 := R33()
	286	[6898]	TEST     	R33 0 ; if not R33 then PC := 339
	287	[6898]	JMP      	339 ; PC := 339
	288	[6898]	GETGLOBAL	R33 K20 ; R33 := 0xbe190284
	289	[6898]	SELF     	R33 R33 K88 ; R34 := R33; R33 := R33[0x5d204145]
	290	[6898]	CALL     	R33 2 2 ; R33 := R33(R34)
	291	[6898]	TEST     	R33 0 ; if not R33 then PC := 339
	292	[6898]	JMP      	339 ; PC := 339
	293	[6899]	GETGLOBAL	R33 K46 ; R33 := 0x0032441c
	294	[6899]	GETGLOBAL	R34 K46 ; R34 := 0x0032441c
	295	[6899]	GETTABLE 	R34 R34 K89 ; R34 := R34["NemesisTauntCooldowns"]
	296	[6899]	TEST     	R34 1 ; if R34 then PC := 299
	297	[6899]	JMP      	299 ; PC := 299
	298	[6899]	NEWTABLE 	R34 0 0 ; R34 := {}
	299	[6899]	SETTABLE 	R33 K89 R34 ; R33["NemesisTauntCooldowns"] := R34
	300	[6900]	GETGLOBAL	R33 K46 ; R33 := 0x0032441c
	301	[6900]	GETTABLE 	R33 R33 K89 ; R33 := R33["NemesisTauntCooldowns"]
	302	[6900]	GETTABLE 	R33 R33 R32 ; R33 := R33[R32]
	303	[6900]	TEST     	R33 0 ; if not R33 then PC := 314
	304	[6900]	JMP      	314 ; PC := 314
	305	[6900]	GETGLOBAL	R33 K46 ; R33 := 0x0032441c
	306	[6900]	GETTABLE 	R33 R33 K89 ; R33 := R33["NemesisTauntCooldowns"]
	307	[6900]	GETTABLE 	R33 R33 R32 ; R33 := R33[R32]
	308	[6900]	ADD      	R33 R33 K90 ; R33 := R33 + 1200.000000
	309	[6900]	GETGLOBAL	R34 K20 ; R34 := 0xbe190284
	310	[6900]	SELF     	R34 R34 K91 ; R35 := R34; R34 := R34[0x715c5d7f]
	311	[6900]	CALL     	R34 2 2 ; R34 := R34(R35)
	312	[6900]	LT       	0 R33 R34 ; if R33 >= R34 then PC := 339
	313	[6900]	JMP      	339 ; PC := 339
	314	[6901]	GETGLOBAL	R33 K46 ; R33 := 0x0032441c
	315	[6901]	GETGLOBAL	R34 K58 ; R34 := 0x0469f296
	316	[6901]	MOVE     	R35 R32 ; R35 := R32
	317	[6901]	CALL     	R34 2 2 ; R34 := R34(R35)
	318	[6901]	SETTABLE 	R33 K86 R34 ; R33["NemesisTaunt"] := R34
	319	[6902]	GETGLOBAL	R33 K46 ; R33 := 0x0032441c
	320	[6902]	GETTABLE 	R33 R33 K89 ; R33 := R33["NemesisTauntCooldowns"]
	321	[6902]	GETGLOBAL	R34 K20 ; R34 := 0xbe190284
	322	[6902]	SELF     	R34 R34 K91 ; R35 := R34; R34 := R34[0x715c5d7f]
	323	[6902]	CALL     	R34 2 2 ; R34 := R34(R35)
	324	[6902]	SETTABLE 	R33 R32 R34 ; R33[R32] := R34
	325	[6904]	JMP      	339 ; PC := 339
	326	[6906]	GETGLOBAL	R33 K46 ; R33 := 0x0032441c
	327	[6906]	GETTABLE 	R33 R33 K86 ; R33 := R33["NemesisTaunt"]
	328	[6906]	GETGLOBAL	R34 K58 ; R34 := 0x0469f296
	329	[6906]	MOVE     	R35 R32 ; R35 := R32
	330	[6906]	CALL     	R34 2 2 ; R34 := R34(R35)
	331	[6906]	EQ       	0 R33 R34 ; if R33 ~= R34 then PC := 339
	332	[6906]	JMP      	339 ; PC := 339
	333	[6906]	GETUPVAL 	R33 U5 ; R33 := U5
	334	[6906]	CALL     	R33 1 2 ; R33 := R33()
	335	[6906]	TEST     	R33 1 ; if R33 then PC := 339
	336	[6906]	JMP      	339 ; PC := 339
	337	[6909]	GETGLOBAL	R33 K46 ; R33 := 0x0032441c
	338	[6909]	SETTABLE 	R33 K86 K19 ; R33["NemesisTaunt"] := nil
	339	[6913]	GETTABLE 	R33 R5 K92 ; R33 := R5["FusionPoints"]
	340	[6913]	EQ       	1 R33 K19 ; if R33 == nil then PC := 345
	341	[6913]	JMP      	345 ; PC := 345
	342	[6914]	GETGLOBAL	R33 K36 ; R33 := mPlayerMissionInfo
	343	[6914]	GETTABLE 	R34 R5 K92 ; R34 := R5["FusionPoints"]
	344	[6914]	SETTABLE 	R33 K93 R34 ; R33["mFusionPoints"] := R34
	345	[6917]	GETTABLE 	R33 R5 K94 ; R33 := R5["CrewShipFusionPoints"]
	346	[6917]	EQ       	1 R33 K19 ; if R33 == nil then PC := 351
	347	[6917]	JMP      	351 ; PC := 351
	348	[6918]	GETGLOBAL	R33 K36 ; R33 := mPlayerMissionInfo
	349	[6918]	GETTABLE 	R34 R5 K94 ; R34 := R5["CrewShipFusionPoints"]
	350	[6918]	SETTABLE 	R33 K95 R34 ; R33["mCrewShipFusionPoints"] := R34
	351	[6921]	GETGLOBAL	R33 K36 ; R33 := mPlayerMissionInfo
	352	[6921]	GETUPVAL 	R34 U6 ; R34 := U6
	353	[6921]	SETTABLE 	R33 K96 R34 ; R33["mPlayedTime"] := R34
	354	[6923]	GETTABLE 	R33 R5 K97 ; R33 := R5["BonusVoidTrace"]
	355	[6923]	EQ       	1 R33 K19 ; if R33 == nil then PC := 424
	356	[6923]	JMP      	424 ; PC := 424
	357	[6925]	GETGLOBAL	R33 K1 ; R33 := 0x7b998233
	358	[6925]	GETGLOBAL	R34 K98 ; R34 := 0x89326c93
	359	[6925]	SELF     	R34 R34 K99 ; R35 := R34; R34 := R34[0xfb64e76c]
	360	[6925]	CALL     	R34 2 0 ; R34,... := R34(R35)
	361	[6925]	CALL     	R33 0 2 ; R33 := R33(R34,...)
	362	[6925]	TEST     	R33 1 ; if R33 then PC := 387
	363	[6925]	JMP      	387 ; PC := 387
	364	[6926]	GETGLOBAL	R33 K98 ; R33 := 0x89326c93
	365	[6926]	SELF     	R33 R33 K99 ; R34 := R33; R33 := R33[0xfb64e76c]
	366	[6926]	CALL     	R33 2 2 ; R33 := R33(R34)
	367	[6926]	SELF     	R33 R33 K100 ; R34 := R33; R33 := R33[0xa534c3ac]
	368	[6926]	CALL     	R33 2 2 ; R33 := R33(R34)
	369	[6927]	GETGLOBAL	R34 K1 ; R34 := 0x7b998233
	370	[6927]	MOVE     	R35 R33 ; R35 := R33
	371	[6927]	CALL     	R34 2 2 ; R34 := R34(R35)
	372	[6927]	TEST     	R34 1 ; if R34 then PC := 387
	373	[6927]	JMP      	387 ; PC := 387
	374	[6927]	GETGLOBAL	R34 K1 ; R34 := 0x7b998233
	375	[6927]	SELF     	R35 R33 K101 ; R36 := R33; R35 := R33[0xb8c8dfbd]
	376	[6927]	CALL     	R35 2 0 ; R35,... := R35(R36)
	377	[6927]	CALL     	R34 0 2 ; R34 := R34(R35,...)
	378	[6927]	TEST     	R34 1 ; if R34 then PC := 387
	379	[6927]	JMP      	387 ; PC := 387
	380	[6928]	SELF     	R34 R33 K101 ; R35 := R33; R34 := R33[0xb8c8dfbd]
	381	[6928]	CALL     	R34 2 2 ; R34 := R34(R35)
	382	[6928]	SELF     	R34 R34 K102 ; R35 := R34; R34 := R34[0x39def7bf]
	383	[6928]	GETUPVAL 	R36 U7 ; R36 := U7
	384	[6928]	GETTABLE 	R36 R36 K103 ; R36 := R36["VoidTrace"]
	385	[6928]	GETTABLE 	R37 R5 K97 ; R37 := R5["BonusVoidTrace"]
	386	[6928]	CALL     	R34 4 1 ; R34(R35,R36,R37)
	387	[6933]	OP_LOADBOOL	R34 0 0 ; R34 := false
	388	[6934]	LOADK    	R35 := 1.000000
	389	[6934]	GETUPVAL 	R36 U8 ; R36 := U8
	390	[6934]	LEN      	R36 R36 ; R36 := # R36
	391	[6934]	LOADK    	R37 := 1.000000
	392	[6934]	FORPREP  	R35 410 ; R35 -= R37; PC := 410
	393	[6935]	GETUPVAL 	R39 U8 ; R39 := U8
	394	[6935]	GETTABLE 	R39 R39 R38 ; R39 := R39[R38]
	395	[6935]	GETTABLE 	R39 R39 K104 ; R39 := R39["mItemType"]
	396	[6935]	GETUPVAL 	R40 U7 ; R40 := U7
	397	[6935]	GETTABLE 	R40 R40 K103 ; R40 := R40["VoidTrace"]
	398	[6935]	EQ       	0 R39 R40 ; if R39 ~= R40 then PC := 410
	399	[6935]	JMP      	410 ; PC := 410
	400	[6936]	GETUPVAL 	R39 U8 ; R39 := U8
	401	[6936]	GETTABLE 	R39 R39 R38 ; R39 := R39[R38]
	402	[6936]	GETUPVAL 	R40 U8 ; R40 := U8
	403	[6936]	GETTABLE 	R40 R40 R38 ; R40 := R40[R38]
	404	[6936]	GETTABLE 	R40 R40 K105 ; R40 := R40["mItemCount"]
	405	[6936]	GETTABLE 	R41 R5 K97 ; R41 := R5["BonusVoidTrace"]
	406	[6936]	ADD      	R40 R40 R41 ; R40 := R40 + R41
	407	[6936]	SETTABLE 	R39 K105 R40 ; R39["mItemCount"] := R40
	408	[6937]	OP_LOADBOOL	R34 1 0 ; R34 := true
	409	[6938]	JMP      	411 ; PC := 411
	410	[6934]	FORLOOP  	R35 393 ; R35 += R37; if R35 <= R36 then begin PC := 393; R38 := R35 end
	411	[6942]	TEST     	R34 1 ; if R34 then PC := 424
	412	[6942]	JMP      	424 ; PC := 424
	413	[6943]	GETGLOBAL	R39 K73 ; R39 := 0x6c97a788
	414	[6943]	GETTABLE 	R39 R39 K74 ; R39 := R39[0x925e2bbb]
	415	[6943]	GETUPVAL 	R40 U7 ; R40 := U7
	416	[6943]	GETTABLE 	R40 R40 K103 ; R40 := R40["VoidTrace"]
	417	[6943]	GETTABLE 	R41 R5 K97 ; R41 := R5["BonusVoidTrace"]
	418	[6943]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	419	[6944]	GETGLOBAL	R40 K33 ; R40 := 0x33bdd652
	420	[6944]	GETTABLE 	R40 R40 K34 ; R40 := R40[0x23d5322f]
	421	[6944]	GETUPVAL 	R41 U8 ; R41 := U8
	422	[6944]	MOVE     	R42 R39 ; R42 := R39
	423	[6944]	CALL     	R40 3 1 ; R40(R41,R42)
	424	[6948]	GETTABLE 	R40 R5 K106 ; R40 := R5["ChallengeMissionRewards"]
	425	[6948]	TEST     	R40 0 ; if not R40 then PC := 448
	426	[6948]	JMP      	448 ; PC := 448
	427	[6949]	GETGLOBAL	R40 K107 ; R40 := 0xae91e43b
	428	[6949]	SELF     	R40 R40 K108 ; R41 := R40; R40 := R40[0x1fd6abd0]
	429	[6949]	GETGLOBAL	R42 K109 ; R42 := 0x52bea474
	430	[6949]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	431	[6950]	GETGLOBAL	R41 K16 ; R41 := cjson
	432	[6950]	GETTABLE 	R41 R41 K110 ; R41 := R41[0xb139d7bc]
	433	[6950]	NEWTABLE 	R42 0 1 ; R42 := {}
	434	[6950]	GETTABLE 	R43 R5 K106 ; R43 := R5["ChallengeMissionRewards"]
	435	[6950]	SETTABLE 	R42 K18 R43 ; R42["MissionRewards"] := R43
	436	[6950]	CALL     	R41 2 2 ; R41 := R41(R42)
	437	[6951]	SELF     	R42 R40 K111 ; R43 := R40; R42 := R40[0xf56f3887]
	438	[6951]	LOADK    	R44 K112 ; R44 := "SetInfo"
	439	[6951]	NEWTABLE 	R45 6 0 ; R45 := {}
	440	[6951]	LOADK    	R46 K113 ; R46 := "true"
	441	[6951]	LOADK    	R47 K12 ; R47 := "false"
	442	[6951]	MOVE     	R48 R41 ; R48 := R41
	443	[6951]	LOADK    	R49 K114 ; R49 := "3"
	444	[6951]	LOADK    	R50 K115 ; R50 := "4"
	445	[6951]	LOADK    	R51 K12 ; R51 := "false"
	446	[6951]	SETLIST  	R45 6 1 ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 6
	447	[6951]	CALL     	R42 4 1 ; R42(R43,R44,R45)
	448	[6954]	GETGLOBAL	R42 K1 ; R42 := 0x7b998233
	449	[6954]	GETGLOBAL	R43 K116 ; R43 := mPvpMovie
	450	[6954]	CALL     	R42 2 2 ; R42 := R42(R43)
	451	[6954]	TEST     	R42 1 ; if R42 then PC := 486
	452	[6954]	JMP      	486 ; PC := 486
	453	[6955]	GETUPVAL 	R42 U9 ; R42 := U9
	454	[6955]	CALL     	R42 1 2 ; R42 := R42()
	455	[6955]	TEST     	R42 1 ; if R42 then PC := 466
	456	[6955]	JMP      	466 ; PC := 466
	457	[6955]	GETTABLE 	R42 R5 K117 ; R42 := R5["DailyMissionBonus"]
	458	[6955]	EQ       	1 R42 K19 ; if R42 == nil then PC := 466
	459	[6955]	JMP      	466 ; PC := 466
	460	[6956]	GETGLOBAL	R42 K116 ; R42 := mPvpMovie
	461	[6956]	SELF     	R42 R42 K118 ; R43 := R42; R42 := R42[0xe4162eed]
	462	[6956]	LOADK    	R44 K119 ; R44 := "SetFirstWinOfDay"
	463	[6956]	LOADK    	R45 K61 ; R45 := ""
	464	[6956]	CALL     	R42 4 1 ; R42(R43,R44,R45)
	465	[6956]	JMP      	486 ; PC := 486
	466	[6957]	GETUPVAL 	R42 U9 ; R42 := U9
	467	[6957]	CALL     	R42 1 2 ; R42 := R42()
	468	[6957]	TEST     	R42 0 ; if not R42 then PC := 486
	469	[6957]	JMP      	486 ; PC := 486
	470	[6957]	GETTABLE 	R42 R5 K120 ; R42 := R5["DailyPVPWinBonus"]
	471	[6957]	EQ       	1 R42 K19 ; if R42 == nil then PC := 486
	472	[6957]	JMP      	486 ; PC := 486
	473	[6958]	GETUPVAL 	R42 U10 ; R42 := U10
	474	[6958]	GETTABLE 	R42 R42 K121 ; R42 := R42["pvpType"]
	475	[6958]	EQ       	1 R42 K122 ; if R42 == 3.000000 then PC := 478
	476	[6958]	JMP      	478 ; PC := 478
	477	[6958]	OP_LOADBOOL	R42 0 1 ; R42 := false; PC := 478
	478	[6958]	OP_LOADBOOL	R42 1 0 ; R42 := true
	479	[6959]	GETGLOBAL	R43 K116 ; R43 := mPvpMovie
	480	[6959]	SELF     	R43 R43 K118 ; R44 := R43; R43 := R43[0xe4162eed]
	481	[6959]	LOADK    	R45 K119 ; R45 := "SetFirstWinOfDay"
	482	[6959]	GETGLOBAL	R46 K123 ; R46 := 0x64fb1586
	483	[6959]	MOVE     	R47 R42 ; R47 := R42
	484	[6959]	CALL     	R46 2 0 ; R46,... := R46(R47)
	485	[6959]	CALL     	R43 0 1 ; R43(R44,...)
	486	[6964]	GETUPVAL 	R43 U11 ; R43 := U11
	487	[6964]	CALL     	R43 1 2 ; R43 := R43()
	488	[6965]	LOADNIL  	R44 R46 ; R44 := R45 := R46 := nil
	489	[6968]	GETGLOBAL	R47 K124 ; R47 := 0x7f5022cf
	490	[6968]	GETTABLE 	R47 R47 K125 ; R47 := R47[0xa5c556b9]
	491	[6968]	GETGLOBAL	R48 K123 ; R48 := 0x64fb1586
	492	[6968]	GETTABLE 	R49 R43 K126 ; R49 := R43["location"]
	493	[6968]	CALL     	R48 2 2 ; R48 := R48(R49)
	494	[6968]	LOADK    	R49 K127 ; R49 := "Nightwave"
	495	[6968]	CALL     	R47 3 2 ; R47 := R47(R48,R49)
	496	[6968]	TEST     	R47 0 ; if not R47 then PC := 535
	497	[6968]	JMP      	535 ; PC := 535
	498	[6969]	GETGLOBAL	R47 K128 ; R47 := 0xcfc01047
	499	[6969]	GETTABLE 	R48 R43 K129 ; R48 := R43["missionReward"]
	500	[6969]	GETTABLE 	R48 R48 K130 ; R48 := R48["countedItems"]
	501	[6969]	CALL     	R47 2 4 ; R47,R48,R49 := R47(R48)
	502	[6969]	JMP      	533 ; PC := 533
	503	[6970]	GETGLOBAL	R52 K81 ; R52 := 0xb009bbc6
	504	[6970]	GETTABLE 	R53 R51 K104 ; R53 := R51["mItemType"]
	505	[6970]	CALL     	R52 2 2 ; R52 := R52(R53)
	506	[6970]	MOVE     	R44 R52 ; R44 := R52
	507	[6971]	GETUPVAL 	R52 U12 ; R52 := U12
	508	[6971]	GETTABLE 	R52 R52 K131 ; R52 := R52[0x056dcf06]
	509	[6971]	MOVE     	R53 R44 ; R53 := R44
	510	[6971]	OP_LOADBOOL	R54 1 0 ; R54 := true
	511	[6971]	CALL     	R52 3 3 ; R52,R53 := R52(R53,R54)
	512	[6971]	MOVE     	R46 R53 ; R46 := R53
	513	[6971]	MOVE     	R45 R52 ; R45 := R52
	514	[6972]	GETGLOBAL	R52 K33 ; R52 := 0x33bdd652
	515	[6972]	GETTABLE 	R52 R52 K34 ; R52 := R52[0x23d5322f]
	516	[6972]	GETGLOBAL	R53 K132 ; R53 := mOtherStuff
	517	[6972]	NEWTABLE 	R54 0 5 ; R54 := {}
	518	[6972]	GETGLOBAL	R55 K107 ; R55 := 0xae91e43b
	519	[6972]	SELF     	R55 R55 K133 ; R56 := R55; R55 := R55[0x42b04007]
	520	[6972]	GETGLOBAL	R57 K123 ; R57 := 0x64fb1586
	521	[6972]	SELF     	R58 R44 K134 ; R59 := R44; R58 := R44[0xd3a9d01f]
	522	[6972]	CALL     	R58 2 0 ; R58,... := R58(R59)
	523	[6972]	CALL     	R57 0 2 ; R57 := R57(R58,...)
	524	[6972]	OP_LOADBOOL	R58 1 0 ; R58 := true
	525	[6972]	CALL     	R55 4 2 ; R55 := R55(R56,R57,R58)
	526	[6972]	SETTABLE 	R54 K52 R55 ; R54["Name"] := R55
	527	[6972]	GETTABLE 	R55 R51 K105 ; R55 := R51["mItemCount"]
	528	[6972]	SETTABLE 	R54 K135 R55 ; R54["Count"] := R55
	529	[6972]	SETTABLE 	R54 K136 R45 ; R54[0xbe190284] := R45
	530	[6972]	SETTABLE 	R54 K137 R46 ; R54[0xf2deaf69] := R46
	531	[6972]	SETTABLE 	R54 K138 K19 ; R54["Background"] := nil
	532	[6972]	CALL     	R52 3 1 ; R52(R53,R54)
	533	[6969]	TFORLOOP 	R47 2 ; R50,R51 := R47(R48,R49); if R50 ~= nil then begin PC = 503; R49 := R50 end
	534	[6972]	JMP      	503 ; PC := 503
	535	[6976]	GETTABLE 	R52 R5 K139 ; R52 := R5["ScenarioScoreChange"]
	536	[6976]	EQ       	1 R52 K19 ; if R52 == nil then PC := 572
	537	[6976]	JMP      	572 ; PC := 572
	538	[6977]	NEWTABLE 	R52 0 2 ; R52 := {}
	539	[6978]	GETUPVAL 	R53 U7 ; R53 := U7
	540	[6978]	GETTABLE 	R53 R53 K140 ; R53 := R53["ScarletCredits"]
	541	[6978]	SETTABLE 	R52 K104 R53 ; R52["mItemType"] := R53
	542	[6979]	GETTABLE 	R53 R5 K139 ; R53 := R5["ScenarioScoreChange"]
	543	[6979]	SETTABLE 	R52 K105 R53 ; R52["mItemCount"] := R53
	544	[6982]	GETGLOBAL	R53 K33 ; R53 := 0x33bdd652
	545	[6982]	GETTABLE 	R53 R53 K34 ; R53 := R53[0x23d5322f]
	546	[6982]	GETUPVAL 	R54 U8 ; R54 := U8
	547	[6982]	MOVE     	R55 R52 ; R55 := R52
	548	[6982]	CALL     	R53 3 1 ; R53(R54,R55)
	549	[6984]	GETGLOBAL	R53 K13 ; R53 := _T
	550	[6984]	GETTABLE 	R53 R53 K141 ; R53 := R53["SendScenarioHubEvent"]
	551	[6984]	TEST     	R53 0 ; if not R53 then PC := 572
	552	[6984]	JMP      	572 ; PC := 572
	553	[6985]	NEWTABLE 	R53 0 0 ; R53 := {}
	554	[6987]	GETTABLE 	R54 R43 K142 ; R54 := R43["missionType"]
	555	[6987]	EQ       	0 R54 K143 ; if R54 ~= 31.000000 then PC := 560
	556	[6987]	JMP      	560 ; PC := 560
	557	[6988]	GETTABLE 	R54 R5 K139 ; R54 := R5["ScenarioScoreChange"]
	558	[6988]	SETTABLE 	R53 K144 R54 ; R53["SpaceScore"] := R54
	559	[6988]	JMP      	562 ; PC := 562
	560	[6990]	GETTABLE 	R54 R5 K139 ; R54 := R5["ScenarioScoreChange"]
	561	[6990]	SETTABLE 	R53 K145 R54 ; R53["GroundScore"] := R54
	562	[6993]	GETGLOBAL	R54 K13 ; R54 := _T
	563	[6993]	GETTABLE 	R54 R54 K146 ; R54 := R54[0x136252c7]
	564	[6993]	LOADNIL  	R55 R56 ; R55 := R56 := nil
	565	[6993]	LOADK    	R57 K147 ; R57 := "Scores"
	566	[6993]	GETGLOBAL	R58 K16 ; R58 := cjson
	567	[6993]	GETTABLE 	R58 R58 K110 ; R58 := R58[0xb139d7bc]
	568	[6993]	MOVE     	R59 R53 ; R59 := R53
	569	[6993]	CALL     	R58 2 2 ; R58 := R58(R59)
	570	[6993]	LOADK    	R59 K148 ; R59 := "inc"
	571	[6993]	CALL     	R54 6 1 ; R54(R55,R56,R57,R58,R59)
	572	[6998]	GETUPVAL 	R54 U13 ; R54 := U13
	573	[6998]	CALL     	R54 1 2 ; R54 := R54()
	574	[6998]	TEST     	R54 0 ; if not R54 then PC := 607
	575	[6998]	JMP      	607 ; PC := 607
	576	[6998]	GETUPVAL 	R54 U14 ; R54 := U14
	577	[6998]	GETTABLE 	R54 R54 K149 ; R54 := R54[0xcdc34211]
	578	[6998]	CALL     	R54 1 2 ; R54 := R54()
	579	[6998]	TEST     	R54 0 ; if not R54 then PC := 607
	580	[6998]	JMP      	607 ; PC := 607
	581	[6999]	GETUPVAL 	R54 U15 ; R54 := U15
	582	[6999]	CALL     	R54 1 2 ; R54 := R54()
	583	[7000]	GETGLOBAL	R55 K1 ; R55 := 0x7b998233
	584	[7000]	MOVE     	R56 R54 ; R56 := R54
	585	[7000]	CALL     	R55 2 2 ; R55 := R55(R56)
	586	[7000]	TEST     	R55 1 ; if R55 then PC := 607
	587	[7000]	JMP      	607 ; PC := 607
	588	[7001]	SELF     	R55 R54 K101 ; R56 := R54; R55 := R54[0xb8c8dfbd]
	589	[7001]	CALL     	R55 2 2 ; R55 := R55(R56)
	590	[7002]	GETGLOBAL	R56 K1 ; R56 := 0x7b998233
	591	[7002]	MOVE     	R57 R55 ; R57 := R55
	592	[7002]	CALL     	R56 2 2 ; R56 := R56(R57)
	593	[7002]	TEST     	R56 1 ; if R56 then PC := 607
	594	[7002]	JMP      	607 ; PC := 607
	595	[7002]	GETGLOBAL	R56 K20 ; R56 := 0xbe190284
	596	[7002]	SELF     	R56 R56 K88 ; R57 := R56; R56 := R56[0x5d204145]
	597	[7002]	CALL     	R56 2 2 ; R56 := R56(R57)
	598	[7002]	TEST     	R56 1 ; if R56 then PC := 607
	599	[7002]	JMP      	607 ; PC := 607
	600	[7003]	SELF     	R56 R55 K150 ; R57 := R55; R56 := R55[0x864e4735]
	601	[7003]	CALL     	R56 2 2 ; R56 := R56(R57)
	602	[7004]	LT       	0 K3 R56 ; if 0.000000 >= R56 then PC := 607
	603	[7004]	JMP      	607 ; PC := 607
	604	[7005]	SETGLOBALHASH	R56 K151 ; mIntrinsicPoints := R56
	605	[7006]	GETGLOBAL	R57 K36 ; R57 := mPlayerMissionInfo
	606	[7006]	SETTABLE 	R57 K152 R56 ; R57["mMissionIntrinsicPoints"] := R56
	607	[7012]	GETGLOBAL	R57 K1 ; R57 := 0x7b998233
	608	[7012]	GETGLOBAL	R58 K2 ; R58 := mGameData
	609	[7012]	CALL     	R57 2 2 ; R57 := R57(R58)
	610	[7012]	TEST     	R57 1 ; if R57 then PC := 636
	611	[7012]	JMP      	636 ; PC := 636
	612	[7012]	GETGLOBAL	R57 K1 ; R57 := 0x7b998233
	613	[7012]	GETGLOBAL	R58 K36 ; R58 := mPlayerMissionInfo
	614	[7012]	CALL     	R57 2 2 ; R57 := R57(R58)
	615	[7012]	TEST     	R57 1 ; if R57 then PC := 636
	616	[7012]	JMP      	636 ; PC := 636
	617	[7012]	GETGLOBAL	R57 K1 ; R57 := 0x7b998233
	618	[7012]	GETGLOBAL	R58 K98 ; R58 := 0x89326c93
	619	[7012]	CALL     	R57 2 2 ; R57 := R57(R58)
	620	[7012]	TEST     	R57 1 ; if R57 then PC := 636
	621	[7012]	JMP      	636 ; PC := 636
	622	[7012]	GETGLOBAL	R57 K1 ; R57 := 0x7b998233
	623	[7012]	GETGLOBAL	R58 K98 ; R58 := 0x89326c93
	624	[7012]	SELF     	R58 R58 K99 ; R59 := R58; R58 := R58[0xfb64e76c]
	625	[7012]	CALL     	R58 2 0 ; R58,... := R58(R59)
	626	[7012]	CALL     	R57 0 2 ; R57 := R57(R58,...)
	627	[7012]	TEST     	R57 1 ; if R57 then PC := 636
	628	[7012]	JMP      	636 ; PC := 636
	629	[7013]	GETGLOBAL	R57 K2 ; R57 := mGameData
	630	[7013]	SELF     	R57 R57 K153 ; R58 := R57; R57 := R57[0xad87a3cb]
	631	[7013]	GETGLOBAL	R59 K98 ; R59 := 0x89326c93
	632	[7013]	SELF     	R59 R59 K99 ; R60 := R59; R59 := R59[0xfb64e76c]
	633	[7013]	CALL     	R59 2 2 ; R59 := R59(R60)
	634	[7013]	GETGLOBAL	R60 K36 ; R60 := mPlayerMissionInfo
	635	[7013]	CALL     	R57 4 1 ; R57(R58,R59,R60)
	636	[7015]	GETGLOBAL	R57 K20 ; R57 := 0xbe190284
	637	[7015]	SELF     	R57 R57 K154 ; R58 := R57; R57 := R57[0x3801d351]
	638	[7015]	CALL     	R57 2 1 ; R57(R58)
	639	[7017]	GETUPVAL 	R57 U13 ; R57 := U13
	640	[7017]	CALL     	R57 1 2 ; R57 := R57()
	641	[7017]	TEST     	R57 1 ; if R57 then PC := 684
	642	[7017]	JMP      	684 ; PC := 684
	643	[7018]	GETGLOBAL	R57 K7 ; R57 := 0x76ea806b
	644	[7018]	SELF     	R57 R57 K8 ; R58 := R57; R57 := R57[0x3f3ae64c]
	645	[7018]	LOADK    	R59 := 0.000000
	646	[7018]	CALL     	R57 3 2 ; R57 := R57(R58,R59)
	647	[7019]	GETGLOBAL	R58 K2 ; R58 := mGameData
	648	[7019]	SELF     	R58 R58 K155 ; R59 := R58; R58 := R58[0xa8c9f8a6]
	649	[7019]	CALL     	R58 2 2 ; R58 := R58(R59)
	650	[7020]	GETGLOBAL	R59 K1 ; R59 := 0x7b998233
	651	[7020]	MOVE     	R60 R57 ; R60 := R57
	652	[7020]	CALL     	R59 2 2 ; R59 := R59(R60)
	653	[7020]	TEST     	R59 1 ; if R59 then PC := 684
	654	[7020]	JMP      	684 ; PC := 684
	655	[7020]	GETGLOBAL	R59 K1 ; R59 := 0x7b998233
	656	[7020]	MOVE     	R60 R58 ; R60 := R58
	657	[7020]	CALL     	R59 2 2 ; R59 := R59(R60)
	658	[7020]	TEST     	R59 1 ; if R59 then PC := 684
	659	[7020]	JMP      	684 ; PC := 684
	660	[7021]	SELF     	R59 R57 K156 ; R60 := R57; R59 := R57[0x5ca33548]
	661	[7021]	CALL     	R59 2 2 ; R59 := R59(R60)
	662	[7022]	LOADK    	R60 := 1.000000
	663	[7022]	LEN      	R61 R58 ; R61 := # R58
	664	[7022]	LOADK    	R62 := 1.000000
	665	[7022]	FORPREP  	R60 683 ; R60 -= R62; PC := 683
	666	[7023]	GETTABLE 	R64 R58 R63 ; R64 := R58[R63]
	667	[7023]	GETTABLE 	R64 R64 K157 ; R64 := R64["playerName"]
	668	[7023]	EQ       	0 R64 R59 ; if R64 ~= R59 then PC := 683
	669	[7023]	JMP      	683 ; PC := 683
	670	[7024]	GETTABLE 	R64 R58 R63 ; R64 := R58[R63]
	671	[7024]	GETTABLE 	R64 R64 K158 ; R64 := R64["playerMissionInfo"]
	672	[7024]	GETUPVAL 	R65 U6 ; R65 := U6
	673	[7024]	SETTABLE 	R64 K96 R65 ; R64["mPlayedTime"] := R65
	674	[7025]	GETGLOBAL	R64 K2 ; R64 := mGameData
	675	[7025]	SELF     	R64 R64 K153 ; R65 := R64; R64 := R64[0xad87a3cb]
	676	[7025]	GETGLOBAL	R66 K98 ; R66 := 0x89326c93
	677	[7025]	SELF     	R66 R66 K99 ; R67 := R66; R66 := R66[0xfb64e76c]
	678	[7025]	CALL     	R66 2 2 ; R66 := R66(R67)
	679	[7025]	GETTABLE 	R67 R58 R63 ; R67 := R58[R63]
	680	[7025]	GETTABLE 	R67 R67 K158 ; R67 := R67["playerMissionInfo"]
	681	[7025]	CALL     	R64 4 1 ; R64(R65,R66,R67)
	682	[7026]	JMP      	684 ; PC := 684
	683	[7022]	FORLOOP  	R60 666 ; R60 += R62; if R60 <= R61 then begin PC := 666; R63 := R60 end
	684	[7033]	GETUPVAL 	R64 U16 ; R64 := U16
	685	[7033]	CALL     	R64 1 1 ; R64()
	686	[7036]	LOADK    	R4 := 0.000000
	687	[7037]	GETGLOBAL	R64 K1 ; R64 := 0x7b998233
	688	[7037]	GETGLOBAL	R65 K36 ; R65 := mPlayerMissionInfo
	689	[7037]	CALL     	R64 2 2 ; R64 := R64(R65)
	690	[7037]	TEST     	R64 1 ; if R64 then PC := 756
	691	[7037]	JMP      	756 ; PC := 756
	692	[7038]	GETGLOBAL	R64 K36 ; R64 := mPlayerMissionInfo
	693	[7038]	GETTABLE 	R64 R64 K62 ; R64 := R64["mNemesisTaxInfo"]
	694	[7038]	GETTABLE 	R64 R64 K67 ; R64 := R64["mTaxedCredits"]
	695	[7039]	GETGLOBAL	R65 K36 ; R65 := mPlayerMissionInfo
	696	[7039]	GETTABLE 	R65 R65 K37 ; R65 := R65["mTotalCredits"]
	697	[7040]	GETGLOBAL	R66 K36 ; R66 := mPlayerMissionInfo
	698	[7040]	GETTABLE 	R66 R66 K38 ; R66 := R66["mFinalCredits"]
	699	[7041]	GETGLOBAL	R67 K36 ; R67 := mPlayerMissionInfo
	700	[7041]	GETTABLE 	R67 R67 K159 ; R67 := R67["mMissionCompleteCreditBonus"]
	701	[7042]	GETGLOBAL	R68 K36 ; R68 := mPlayerMissionInfo
	702	[7042]	GETTABLE 	R68 R68 K160 ; R68 := R68["mCreditsEarnedInMission"]
	703	[7043]	ADD      	R69 R66 R64 ; R69 := R66 + R64
	704	[7043]	SUB      	R69 R69 R65 ; R69 := R69 - R65
	705	[7045]	GETUPVAL 	R70 U2 ; R70 := U2
	706	[7045]	MOVE     	R71 R4 ; R71 := R4
	707	[7045]	MOVE     	R72 R67 ; R72 := R67
	708	[7045]	LOADK    	R73 K26 ; R73 := "Credits"
	709	[7045]	GETUPVAL 	R74 U3 ; R74 := U3
	710	[7045]	GETTABLE 	R74 R74 K27 ; R74 := R74[0x1142c7a8]
	711	[7045]	MOVE     	R75 R67 ; R75 := R67
	712	[7045]	CALL     	R74 2 2 ; R74 := R74(R75)
	713	[7045]	LOADK    	R75 K161 ; R75 := " "
	714	[7045]	GETGLOBAL	R76 K107 ; R76 := 0xae91e43b
	715	[7045]	SELF     	R76 R76 K133 ; R77 := R76; R76 := R76[0x42b04007]
	716	[7045]	LOADK    	R78 K162 ; R78 := "/Lotus/Language/Menu/MissionStats_CreditsBonus"
	717	[7045]	OP_LOADBOOL	R79 0 0 ; R79 := false
	718	[7045]	CALL     	R76 4 2 ; R76 := R76(R77,R78,R79)
	719	[7045]	CONCAT   	R74 R74 R76 ; R74 := R74 .. R75 .. R76
	720	[7045]	CALL     	R70 5 2 ; R70 := R70(R71,R72,R73,R74)
	721	[7045]	MOVE     	R4 R70 ; R4 := R70
	722	[7046]	GETUPVAL 	R70 U2 ; R70 := U2
	723	[7046]	MOVE     	R71 R4 ; R71 := R4
	724	[7046]	MOVE     	R72 R68 ; R72 := R68
	725	[7046]	LOADK    	R73 K26 ; R73 := "Credits"
	726	[7046]	GETUPVAL 	R74 U3 ; R74 := U3
	727	[7046]	GETTABLE 	R74 R74 K27 ; R74 := R74[0x1142c7a8]
	728	[7046]	MOVE     	R75 R68 ; R75 := R68
	729	[7046]	CALL     	R74 2 2 ; R74 := R74(R75)
	730	[7046]	LOADK    	R75 K161 ; R75 := " "
	731	[7046]	GETGLOBAL	R76 K107 ; R76 := 0xae91e43b
	732	[7046]	SELF     	R76 R76 K133 ; R77 := R76; R76 := R76[0x42b04007]
	733	[7046]	LOADK    	R78 K163 ; R78 := "/Lotus/Language/Menu/MissionStats_MissionCredits"
	734	[7046]	OP_LOADBOOL	R79 0 0 ; R79 := false
	735	[7046]	CALL     	R76 4 2 ; R76 := R76(R77,R78,R79)
	736	[7046]	CONCAT   	R74 R74 R76 ; R74 := R74 .. R75 .. R76
	737	[7046]	CALL     	R70 5 2 ; R70 := R70(R71,R72,R73,R74)
	738	[7046]	MOVE     	R4 R70 ; R4 := R70
	739	[7047]	GETUPVAL 	R70 U2 ; R70 := U2
	740	[7047]	MOVE     	R71 R4 ; R71 := R4
	741	[7047]	MOVE     	R72 R69 ; R72 := R69
	742	[7047]	LOADK    	R73 K26 ; R73 := "Credits"
	743	[7047]	GETUPVAL 	R74 U3 ; R74 := U3
	744	[7047]	GETTABLE 	R74 R74 K27 ; R74 := R74[0x1142c7a8]
	745	[7047]	MOVE     	R75 R69 ; R75 := R69
	746	[7047]	CALL     	R74 2 2 ; R74 := R74(R75)
	747	[7047]	LOADK    	R75 K161 ; R75 := " "
	748	[7047]	GETGLOBAL	R76 K107 ; R76 := 0xae91e43b
	749	[7047]	SELF     	R76 R76 K133 ; R77 := R76; R76 := R76[0x42b04007]
	750	[7047]	LOADK    	R78 K164 ; R78 := "/Lotus/Language/Menu/MissionStats_BoostedCredits"
	751	[7047]	OP_LOADBOOL	R79 0 0 ; R79 := false
	752	[7047]	CALL     	R76 4 2 ; R76 := R76(R77,R78,R79)
	753	[7047]	CONCAT   	R74 R74 R76 ; R74 := R74 .. R75 .. R76
	754	[7047]	CALL     	R70 5 2 ; R70 := R70(R71,R72,R73,R74)
	755	[7047]	MOVE     	R4 R70 ; R4 := R70
	756	[7050]	LT       	0 K3 R4 ; if 0.000000 >= R4 then PC := 783
	757	[7050]	JMP      	783 ; PC := 783
	758	[7051]	GETGLOBAL	R70 K124 ; R70 := 0x7f5022cf
	759	[7051]	GETTABLE 	R70 R70 K165 ; R70 := R70[0x3f3e4d12]
	760	[7051]	GETGLOBAL	R71 K107 ; R71 := 0xae91e43b
	761	[7051]	SELF     	R71 R71 K133 ; R72 := R71; R71 := R71[0x42b04007]
	762	[7051]	LOADK    	R73 K166 ; R73 := "/Lotus/Language/Menu/Store_BuyWithCredits"
	763	[7051]	OP_LOADBOOL	R74 1 0 ; R74 := true
	764	[7051]	CALL     	R71 4 0 ; R71,... := R71(R72,R73,R74)
	765	[7051]	CALL     	R70 0 2 ; R70 := R70(R71,...)
	766	[7052]	NEWTABLE 	R71 0 7 ; R71 := {}
	767	[7052]	SETTABLE 	R71 K52 R70 ; R71["Name"] := R70
	768	[7052]	SETTABLE 	R71 K135 K4 ; R71["Count"] := 1.000000
	769	[7052]	SETTABLE 	R71 K26 R4 ; R71["Credits"] := R4
	770	[7052]	GETGLOBAL	R72 K36 ; R72 := mPlayerMissionInfo
	771	[7052]	GETTABLE 	R72 R72 K62 ; R72 := R72["mNemesisTaxInfo"]
	772	[7052]	GETTABLE 	R72 R72 K67 ; R72 := R72["mTaxedCredits"]
	773	[7052]	SETTABLE 	R71 K167 R72 ; R71["TaxedCount"] := R72
	774	[7052]	GETGLOBAL	R72 K168 ; R72 := 0x9afd2e71
	775	[7052]	SETTABLE 	R71 K136 R72 ; R71[0xbe190284] := R72
	776	[7052]	SETTABLE 	R71 K137 K15 ; R71["Themed"] := true
	777	[7052]	SETTABLE 	R71 K138 K19 ; R71["Background"] := nil
	778	[7053]	GETGLOBAL	R72 K33 ; R72 := 0x33bdd652
	779	[7053]	GETTABLE 	R72 R72 K34 ; R72 := R72[0x23d5322f]
	780	[7053]	GETGLOBAL	R73 K132 ; R73 := mOtherStuff
	781	[7053]	MOVE     	R74 R71 ; R74 := R71
	782	[7053]	CALL     	R72 3 1 ; R72(R73,R74)
	783	[7056]	OP_LOADBOOL	R72 0 0 ; R72 := false
	784	[7056]	TEST     	R72 0 ; if not R72 then PC := 828
	785	[7056]	JMP      	828 ; PC := 828
	786	[7057]	GETGLOBAL	R72 K36 ; R72 := mPlayerMissionInfo
	787	[7057]	GETTABLE 	R72 R72 K37 ; R72 := R72["mTotalCredits"]
	788	[7058]	LT       	0 K3 R72 ; if 0.000000 >= R72 then PC := 807
	789	[7058]	JMP      	807 ; PC := 807
	790	[7059]	GETGLOBAL	R73 K33 ; R73 := 0x33bdd652
	791	[7059]	GETTABLE 	R73 R73 K34 ; R73 := R73[0x23d5322f]
	792	[7059]	GETGLOBAL	R74 K132 ; R74 := mOtherStuff
	793	[7059]	GETUPVAL 	R75 U17 ; R75 := U17
	794	[7059]	GETGLOBAL	R76 K124 ; R76 := 0x7f5022cf
	795	[7059]	GETTABLE 	R76 R76 K165 ; R76 := R76[0x3f3e4d12]
	796	[7059]	GETGLOBAL	R77 K107 ; R77 := 0xae91e43b
	797	[7059]	SELF     	R77 R77 K133 ; R78 := R77; R77 := R77[0x42b04007]
	798	[7059]	LOADK    	R79 K169 ; R79 := "/Lotus/Language/Menu/MissionStats_TotalCredits"
	799	[7059]	OP_LOADBOOL	R80 0 0 ; R80 := false
	800	[7059]	CALL     	R77 4 0 ; R77,... := R77(R78,R79,R80)
	801	[7059]	CALL     	R76 0 2 ; R76 := R76(R77,...)
	802	[7059]	MOVE     	R77 R72 ; R77 := R72
	803	[7059]	LOADNIL  	R78 R78 ; R78 := nil
	804	[7059]	GETGLOBAL	R79 K168 ; R79 := 0x9afd2e71
	805	[7059]	CALL     	R75 5 0 ; R75,... := R75(R76,R77,R78,R79)
	806	[7059]	CALL     	R73 0 1 ; R73(R74,...)
	807	[7062]	GETGLOBAL	R73 K36 ; R73 := mPlayerMissionInfo
	808	[7062]	GETTABLE 	R73 R73 K38 ; R73 := R73["mFinalCredits"]
	809	[7063]	LT       	0 K3 R73 ; if 0.000000 >= R73 then PC := 828
	810	[7063]	JMP      	828 ; PC := 828
	811	[7064]	GETGLOBAL	R74 K33 ; R74 := 0x33bdd652
	812	[7064]	GETTABLE 	R74 R74 K34 ; R74 := R74[0x23d5322f]
	813	[7064]	GETGLOBAL	R75 K132 ; R75 := mOtherStuff
	814	[7064]	GETUPVAL 	R76 U17 ; R76 := U17
	815	[7064]	GETGLOBAL	R77 K124 ; R77 := 0x7f5022cf
	816	[7064]	GETTABLE 	R77 R77 K165 ; R77 := R77[0x3f3e4d12]
	817	[7064]	GETGLOBAL	R78 K107 ; R78 := 0xae91e43b
	818	[7064]	SELF     	R78 R78 K133 ; R79 := R78; R78 := R78[0x42b04007]
	819	[7064]	LOADK    	R80 K164 ; R80 := "/Lotus/Language/Menu/MissionStats_BoostedCredits"
	820	[7064]	OP_LOADBOOL	R81 0 0 ; R81 := false
	821	[7064]	CALL     	R78 4 0 ; R78,... := R78(R79,R80,R81)
	822	[7064]	CALL     	R77 0 2 ; R77 := R77(R78,...)
	823	[7064]	MOVE     	R78 R73 ; R78 := R73
	824	[7064]	LOADNIL  	R79 R79 ; R79 := nil
	825	[7064]	GETGLOBAL	R80 K168 ; R80 := 0x9afd2e71
	826	[7064]	CALL     	R76 5 0 ; R76,... := R76(R77,R78,R79,R80)
	827	[7064]	CALL     	R74 0 1 ; R74(R75,...)
	828	[7068]	GETGLOBAL	R74 K1 ; R74 := 0x7b998233
	829	[7068]	GETGLOBAL	R75 K36 ; R75 := mPlayerMissionInfo
	830	[7068]	CALL     	R74 2 2 ; R74 := R74(R75)
	831	[7068]	TEST     	R74 1 ; if R74 then PC := 866
	832	[7068]	JMP      	866 ; PC := 866
	833	[7068]	GETGLOBAL	R74 K36 ; R74 := mPlayerMissionInfo
	834	[7068]	GETTABLE 	R74 R74 K93 ; R74 := R74["mFusionPoints"]
	835	[7068]	LT       	0 K3 R74 ; if 0.000000 >= R74 then PC := 866
	836	[7068]	JMP      	866 ; PC := 866
	837	[7069]	GETGLOBAL	R74 K124 ; R74 := 0x7f5022cf
	838	[7069]	GETTABLE 	R74 R74 K165 ; R74 := R74[0x3f3e4d12]
	839	[7069]	GETGLOBAL	R75 K107 ; R75 := 0xae91e43b
	840	[7069]	SELF     	R75 R75 K133 ; R76 := R75; R75 := R75[0x42b04007]
	841	[7069]	LOADK    	R77 K170 ; R77 := "/Lotus/Language/Items/FusionBundle"
	842	[7069]	OP_LOADBOOL	R78 1 0 ; R78 := true
	843	[7069]	CALL     	R75 4 0 ; R75,... := R75(R76,R77,R78)
	844	[7069]	CALL     	R74 0 2 ; R74 := R74(R75,...)
	845	[7070]	NEWTABLE 	R75 0 8 ; R75 := {}
	846	[7070]	SETTABLE 	R75 K52 R74 ; R75["Name"] := R74
	847	[7070]	SETTABLE 	R75 K51 K171 ; R75["Description"] := "/Lotus/Language/Items/FusionPartDesc"
	848	[7070]	GETGLOBAL	R76 K36 ; R76 := mPlayerMissionInfo
	849	[7070]	GETTABLE 	R76 R76 K93 ; R76 := R76["mFusionPoints"]
	850	[7070]	SETTABLE 	R75 K172 R76 ; R75["Endo"] := R76
	851	[7070]	SETTABLE 	R75 K135 K4 ; R75["Count"] := 1.000000
	852	[7070]	GETGLOBAL	R76 K36 ; R76 := mPlayerMissionInfo
	853	[7070]	GETTABLE 	R76 R76 K62 ; R76 := R76["mNemesisTaxInfo"]
	854	[7070]	GETTABLE 	R76 R76 K69 ; R76 := R76["mTaxedFusionPoints"]
	855	[7070]	SETTABLE 	R75 K167 R76 ; R75["TaxedCount"] := R76
	856	[7070]	GETGLOBAL	R76 K173 ; R76 := 0x457d7698
	857	[7070]	SETTABLE 	R75 K136 R76 ; R75[0xbe190284] := R76
	858	[7070]	SETTABLE 	R75 K138 K19 ; R75["Background"] := nil
	859	[7070]	GETGLOBAL	R76 K175 ; R76 := mFusionPointsSortPriority
	860	[7070]	SETTABLE 	R75 K174 R76 ; R75[0x7b998233] := R76
	861	[7071]	GETGLOBAL	R76 K33 ; R76 := 0x33bdd652
	862	[7071]	GETTABLE 	R76 R76 K34 ; R76 := R76[0x23d5322f]
	863	[7071]	GETGLOBAL	R77 K176 ; R77 := mSortRewardItems
	864	[7071]	MOVE     	R78 R75 ; R78 := R75
	865	[7071]	CALL     	R76 3 1 ; R76(R77,R78)
	866	[7074]	GETGLOBAL	R76 K1 ; R76 := 0x7b998233
	867	[7074]	GETGLOBAL	R77 K36 ; R77 := mPlayerMissionInfo
	868	[7074]	CALL     	R76 2 2 ; R76 := R76(R77)
	869	[7074]	TEST     	R76 1 ; if R76 then PC := 903
	870	[7074]	JMP      	903 ; PC := 903
	871	[7074]	GETGLOBAL	R76 K36 ; R76 := mPlayerMissionInfo
	872	[7074]	GETTABLE 	R76 R76 K95 ; R76 := R76["mCrewShipFusionPoints"]
	873	[7074]	LT       	0 K3 R76 ; if 0.000000 >= R76 then PC := 903
	874	[7074]	JMP      	903 ; PC := 903
	875	[7075]	GETGLOBAL	R76 K124 ; R76 := 0x7f5022cf
	876	[7075]	GETTABLE 	R76 R76 K165 ; R76 := R76[0x3f3e4d12]
	877	[7075]	GETGLOBAL	R77 K107 ; R77 := 0xae91e43b
	878	[7075]	SELF     	R77 R77 K133 ; R78 := R77; R77 := R77[0x42b04007]
	879	[7075]	LOADK    	R79 K177 ; R79 := "/Lotus/Language/Menu/CrewShipFusionPointsName"
	880	[7075]	OP_LOADBOOL	R80 1 0 ; R80 := true
	881	[7075]	CALL     	R77 4 0 ; R77,... := R77(R78,R79,R80)
	882	[7075]	CALL     	R76 0 2 ; R76 := R76(R77,...)
	883	[7076]	NEWTABLE 	R77 0 7 ; R77 := {}
	884	[7076]	SETTABLE 	R77 K52 R76 ; R77["Name"] := R76
	885	[7076]	SETTABLE 	R77 K51 K178 ; R77["Description"] := "/Lotus/Language/Railjack/AvionicEndoDesc"
	886	[7076]	GETGLOBAL	R78 K36 ; R78 := mPlayerMissionInfo
	887	[7076]	GETTABLE 	R78 R78 K95 ; R78 := R78["mCrewShipFusionPoints"]
	888	[7076]	SETTABLE 	R77 K135 R78 ; R77["Count"] := R78
	889	[7076]	GETGLOBAL	R78 K36 ; R78 := mPlayerMissionInfo
	890	[7076]	GETTABLE 	R78 R78 K62 ; R78 := R78["mNemesisTaxInfo"]
	891	[7076]	GETTABLE 	R78 R78 K71 ; R78 := R78["mTaxedCrewShipFusionPoints"]
	892	[7076]	SETTABLE 	R77 K167 R78 ; R77["TaxedCount"] := R78
	893	[7076]	GETGLOBAL	R78 K179 ; R78 := 0x1ae7e99f
	894	[7076]	SETTABLE 	R77 K136 R78 ; R77[0xbe190284] := R78
	895	[7076]	SETTABLE 	R77 K138 K19 ; R77["Background"] := nil
	896	[7076]	GETGLOBAL	R78 K175 ; R78 := mFusionPointsSortPriority
	897	[7076]	SETTABLE 	R77 K174 R78 ; R77[0x7b998233] := R78
	898	[7077]	GETGLOBAL	R78 K33 ; R78 := 0x33bdd652
	899	[7077]	GETTABLE 	R78 R78 K34 ; R78 := R78[0x23d5322f]
	900	[7077]	GETGLOBAL	R79 K176 ; R79 := mSortRewardItems
	901	[7077]	MOVE     	R80 R77 ; R80 := R77
	902	[7077]	CALL     	R78 3 1 ; R78(R79,R80)
	903	[7080]	GETGLOBAL	R78 K180 ; R78 := mRewardGrid
	904	[7080]	EQ       	1 R78 K19 ; if R78 == nil then PC := 909
	905	[7080]	JMP      	909 ; PC := 909
	906	[7081]	GETUPVAL 	R78 U18 ; R78 := U18
	907	[7081]	OP_LOADBOOL	R79 1 0 ; R79 := true
	908	[7081]	CALL     	R78 2 1 ; R78(R79)
	909	[7084]	GETGLOBAL	R78 K1 ; R78 := 0x7b998233
	910	[7084]	GETGLOBAL	R79 K2 ; R79 := mGameData
	911	[7084]	CALL     	R78 2 2 ; R78 := R78(R79)
	912	[7084]	TEST     	R78 1 ; if R78 then PC := 988
	913	[7084]	JMP      	988 ; PC := 988
	914	[7085]	GETGLOBAL	R78 K2 ; R78 := mGameData
	915	[7085]	SELF     	R78 R78 K181 ; R79 := R78; R78 := R78[0x276d0d04]
	916	[7085]	CALL     	R78 2 1 ; R78(R79)
	917	[7086]	GETUPVAL 	R78 U19 ; R78 := U19
	918	[7086]	CALL     	R78 1 2 ; R78 := R78()
	919	[7086]	TEST     	R78 0 ; if not R78 then PC := 988
	920	[7086]	JMP      	988 ; PC := 988
	921	[7087]	GETGLOBAL	R78 K2 ; R78 := mGameData
	922	[7087]	SELF     	R78 R78 K182 ; R79 := R78; R78 := R78[0x1ddaa793]
	923	[7087]	LOADK    	R80 K183 ; R80 := "EEFinalRank"
	924	[7087]	GETGLOBAL	R81 K20 ; R81 := 0xbe190284
	925	[7087]	SELF     	R81 R81 K184 ; R82 := R81; R81 := R81[0x0eb34c69]
	926	[7087]	GETGLOBAL	R83 K58 ; R83 := 0x0469f296
	927	[7087]	LOADK    	R84 K185 ; R84 := "AvgWaveRank"
	928	[7087]	CALL     	R83 2 2 ; R83 := R83(R84)
	929	[7087]	LOADK    	R84 := 4.000000
	930	[7087]	CALL     	R81 4 0 ; R81,... := R81(R82,R83,R84)
	931	[7087]	CALL     	R78 0 1 ; R78(R79,...)
	932	[7088]	GETGLOBAL	R78 K2 ; R78 := mGameData
	933	[7088]	SELF     	R78 R78 K182 ; R79 := R78; R78 := R78[0x1ddaa793]
	934	[7088]	LOADK    	R80 K186 ; R80 := "EEKills"
	935	[7088]	GETGLOBAL	R81 K20 ; R81 := 0xbe190284
	936	[7088]	SELF     	R81 R81 K184 ; R82 := R81; R81 := R81[0x0eb34c69]
	937	[7088]	GETGLOBAL	R83 K58 ; R83 := 0x0469f296
	938	[7088]	LOADK    	R84 K187 ; R84 := "Kills"
	939	[7088]	CALL     	R83 2 2 ; R83 := R83(R84)
	940	[7088]	LOADK    	R84 := 0.000000
	941	[7088]	CALL     	R81 4 0 ; R81,... := R81(R82,R83,R84)
	942	[7088]	CALL     	R78 0 1 ; R78(R79,...)
	943	[7089]	GETGLOBAL	R78 K2 ; R78 := mGameData
	944	[7089]	SELF     	R78 R78 K182 ; R79 := R78; R78 := R78[0x1ddaa793]
	945	[7089]	LOADK    	R80 K188 ; R80 := "EEVipKills"
	946	[7089]	GETGLOBAL	R81 K20 ; R81 := 0xbe190284
	947	[7089]	SELF     	R81 R81 K184 ; R82 := R81; R81 := R81[0x0eb34c69]
	948	[7089]	GETGLOBAL	R83 K58 ; R83 := 0x0469f296
	949	[7089]	LOADK    	R84 K189 ; R84 := "VIPKills"
	950	[7089]	CALL     	R83 2 2 ; R83 := R83(R84)
	951	[7089]	LOADK    	R84 := 0.000000
	952	[7089]	CALL     	R81 4 0 ; R81,... := R81(R82,R83,R84)
	953	[7089]	CALL     	R78 0 1 ; R78(R79,...)
	954	[7090]	GETGLOBAL	R78 K2 ; R78 := mGameData
	955	[7090]	SELF     	R78 R78 K182 ; R79 := R78; R78 := R78[0x1ddaa793]
	956	[7090]	LOADK    	R80 K190 ; R80 := "EETotal"
	957	[7090]	GETGLOBAL	R81 K20 ; R81 := 0xbe190284
	958	[7090]	SELF     	R81 R81 K184 ; R82 := R81; R81 := R81[0x0eb34c69]
	959	[7090]	GETGLOBAL	R83 K58 ; R83 := 0x0469f296
	960	[7090]	LOADK    	R84 K191 ; R84 := "Score"
	961	[7090]	CALL     	R83 2 2 ; R83 := R83(R84)
	962	[7090]	LOADK    	R84 := 0.000000
	963	[7090]	CALL     	R81 4 0 ; R81,... := R81(R82,R83,R84)
	964	[7090]	CALL     	R78 0 1 ; R78(R79,...)
	965	[7091]	GETGLOBAL	R78 K2 ; R78 := mGameData
	966	[7091]	SELF     	R78 R78 K182 ; R79 := R78; R78 := R78[0x1ddaa793]
	967	[7091]	LOADK    	R80 K192 ; R80 := "EEWaveScore"
	968	[7091]	GETGLOBAL	R81 K20 ; R81 := 0xbe190284
	969	[7091]	SELF     	R81 R81 K184 ; R82 := R81; R81 := R81[0x0eb34c69]
	970	[7091]	GETGLOBAL	R83 K58 ; R83 := 0x0469f296
	971	[7091]	LOADK    	R84 K193 ; R84 := "WaveClearScore"
	972	[7091]	CALL     	R83 2 2 ; R83 := R83(R84)
	973	[7091]	LOADK    	R84 := 0.000000
	974	[7091]	CALL     	R81 4 0 ; R81,... := R81(R82,R83,R84)
	975	[7091]	CALL     	R78 0 1 ; R78(R79,...)
	976	[7092]	GETGLOBAL	R78 K2 ; R78 := mGameData
	977	[7092]	SELF     	R78 R78 K182 ; R79 := R78; R78 := R78[0x1ddaa793]
	978	[7092]	LOADK    	R80 K194 ; R80 := "EEWaveReached"
	979	[7092]	GETGLOBAL	R81 K20 ; R81 := 0xbe190284
	980	[7092]	SELF     	R81 R81 K184 ; R82 := R81; R81 := R81[0x0eb34c69]
	981	[7092]	GETGLOBAL	R83 K58 ; R83 := 0x0469f296
	982	[7092]	LOADK    	R84 K195 ; R84 := "Wave"
	983	[7092]	CALL     	R83 2 2 ; R83 := R83(R84)
	984	[7092]	LOADK    	R84 := 0.000000
	985	[7092]	CALL     	R81 4 2 ; R81 := R81(R82,R83,R84)
	986	[7092]	ADD      	R81 R81 K4 ; R81 := R81 + 1.000000
	987	[7092]	CALL     	R78 4 1 ; R78(R79,R80,R81)
	988	[7096]	GETGLOBAL	R78 K41 ; R78 := 0x25d99d89
	989	[7096]	SELF     	R78 R78 K196 ; R79 := R78; R78 := R78[0xd723c617]
	990	[7096]	CALL     	R78 2 1 ; R78(R79)
	991	[7098]	GETGLOBAL	R78 K197 ; R78 := mCloseWhenDbUpdateComplete
	992	[7098]	TEST     	R78 0 ; if not R78 then PC := 996
	993	[7098]	JMP      	996 ; PC := 996
	994	[7099]	GETUPVAL 	R78 U20 ; R78 := U20
	995	[7099]	CALL     	R78 1 1 ; R78()
	996	[7101]	RETURN   	R0 1 ; return 

function #146 <?:7103,7105> (1 instruction, 4 bytes at 00000160FF5592F0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[7105]	RETURN   	R0 1 ; return 

function #147 <?:7107,7126> (71 instructions, 284 bytes at 00000160FF5593C0)
3 params, 7 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[7111]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[7111]	GETGLOBAL	R5 K1 ; R5 := 0x89326c93
	3	[7111]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[7111]	TEST     	R4 1 ; if R4 then PC := 10
	5	[7111]	JMP      	10 ; PC := 10
	6	[7112]	GETGLOBAL	R4 K1 ; R4 := 0x89326c93
	7	[7112]	SELF     	R4 R4 K2 ; R5 := R4; R4 := R4[0x7d108ddb]
	8	[7112]	CALL     	R4 2 2 ; R4 := R4(R5)
	9	[7112]	MOVE     	R3 R4 ; R3 := R4
	10	[7114]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	11	[7114]	MOVE     	R5 R3 ; R5 := R3
	12	[7114]	CALL     	R4 2 2 ; R4 := R4(R5)
	13	[7114]	TEST     	R4 1 ; if R4 then PC := 30
	14	[7114]	JMP      	30 ; PC := 30
	15	[7114]	LEN      	R4 R3 ; R4 := # R3
	16	[7114]	LT       	1 K3 R4 ; if 1.000000 < R4 then PC := 30
	17	[7114]	JMP      	30 ; PC := 30
	18	[7114]	GETGLOBAL	R4 K4 ; R4 := mPanelTransitionOutActive
	19	[7114]	TEST     	R4 1 ; if R4 then PC := 30
	20	[7114]	JMP      	30 ; PC := 30
	21	[7114]	GETGLOBAL	R4 K5 ; R4 := mPendingTallies
	22	[7114]	LT       	1 K6 R4 ; if 0.000000 < R4 then PC := 30
	23	[7114]	JMP      	30 ; PC := 30
	24	[7114]	GETGLOBAL	R4 K7 ; R4 := mWaitingForDbUpdate
	25	[7114]	TEST     	R4 1 ; if R4 then PC := 30
	26	[7114]	JMP      	30 ; PC := 30
	27	[7114]	GETGLOBAL	R4 K8 ; R4 := mAutoCloseDelay
	28	[7114]	EQ       	0 R4 K9 ; if R4 ~= -1.000000 then PC := 31
	29	[7114]	JMP      	31 ; PC := 31
	30	[7115]	RETURN   	R0 1 ; return 
	31	[7118]	GETGLOBAL	R4 K10 ; R4 := 0x7f5022cf
	32	[7118]	GETTABLE 	R4 R4 K11 ; R4 := R4[0xa5c556b9]
	33	[7118]	MOVE     	R5 R1 ; R5 := R1
	34	[7118]	LOADK    	R6 K12 ; R6 := "_SPACE"
	35	[7118]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	36	[7118]	EQ       	1 R4 K13 ; if R4 == nil then PC := 69
	37	[7118]	JMP      	69 ; PC := 69
	38	[7118]	GETGLOBAL	R4 K14 ; R4 := _T
	39	[7118]	GETTABLE 	R4 R4 K15 ; R4 := R4["eomScreenMode"]
	40	[7118]	GETUPVAL 	R5 U0 ; R5 := U0
	41	[7118]	GETTABLE 	R5 R5 K16 ; R5 := R5["ACTUAL_EOM"]
	42	[7118]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 69
	43	[7118]	JMP      	69 ; PC := 69
	44	[7119]	EQ       	0 R2 K17 ; if R2 ~= "1" then PC := 69
	45	[7119]	JMP      	69 ; PC := 69
	46	[7119]	GETGLOBAL	R4 K8 ; R4 := mAutoCloseDelay
	47	[7119]	LT       	1 R4 K18 ; if R4 < 5.000000 then PC := 65
	48	[7119]	JMP      	65 ; PC := 65
	49	[7119]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	50	[7119]	GETGLOBAL	R5 K19 ; R5 := 0xbe190284
	51	[7119]	CALL     	R4 2 2 ; R4 := R4(R5)
	52	[7119]	TEST     	R4 1 ; if R4 then PC := 69
	53	[7119]	JMP      	69 ; PC := 69
	54	[7119]	GETGLOBAL	R4 K19 ; R4 := 0xbe190284
	55	[7119]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0xf2deaf69]
	56	[7119]	GETGLOBAL	R6 K21 ; R6 := gLotusBaseGameRulesType
	57	[7119]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	58	[7119]	TEST     	R4 0 ; if not R4 then PC := 69
	59	[7119]	JMP      	69 ; PC := 69
	60	[7119]	GETGLOBAL	R4 K19 ; R4 := 0xbe190284
	61	[7119]	SELF     	R4 R4 K22 ; R5 := R4; R4 := R4[0x5d204145]
	62	[7119]	CALL     	R4 2 2 ; R4 := R4(R5)
	63	[7119]	TEST     	R4 1 ; if R4 then PC := 69
	64	[7119]	JMP      	69 ; PC := 69
	65	[7120]	GETGLOBAL	R4 K23 ; R4 := AUTO_CLOSE_FADEOUT_TIME
	66	[7120]	SETGLOBALHASH	R4 K8 ; mAutoCloseDelay := R4
	67	[7121]	LOADK    	R4 := 1.000000
	68	[7121]	RETURN   	R4 2 ; return R4 
	69	[7125]	LOADNIL  	R4 R4 ; R4 := nil
	70	[7125]	RETURN   	R4 2 ; return R4 
	71	[7126]	RETURN   	R0 1 ; return 

function #148 <?:7128,7132> (11 instructions, 44 bytes at 00000160FF559840)
0 params, 4 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[7129]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7129]	GETGLOBAL	R1 K1 ; R1 := mPvpMovie
	3	[7129]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7129]	TEST     	R0 1 ; if R0 then PC := 11
	5	[7129]	JMP      	11 ; PC := 11
	6	[7130]	GETGLOBAL	R0 K1 ; R0 := mPvpMovie
	7	[7130]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xe4162eed]
	8	[7130]	LOADK    	R2 K3 ; R2 := "UpdateMapVote"
	9	[7130]	LOADK    	R3 K4 ; R3 := ""
	10	[7130]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	11	[7132]	RETURN   	R0 1 ; return 

function #149 <?:7134,7138> (11 instructions, 44 bytes at 00000160FF5599F0)
0 params, 4 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[7135]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7135]	GETGLOBAL	R1 K1 ; R1 := mPvpMovie
	3	[7135]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7135]	TEST     	R0 1 ; if R0 then PC := 11
	5	[7135]	JMP      	11 ; PC := 11
	6	[7136]	GETGLOBAL	R0 K1 ; R0 := mPvpMovie
	7	[7136]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xe4162eed]
	8	[7136]	LOADK    	R2 K3 ; R2 := "PopulateMapVote"
	9	[7136]	LOADK    	R3 K4 ; R3 := ""
	10	[7136]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	11	[7138]	RETURN   	R0 1 ; return 

function #150 <?:7140,7144> (11 instructions, 44 bytes at 00000160FF559BA0)
0 params, 4 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[7141]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7141]	GETGLOBAL	R1 K1 ; R1 := mPvpMovie
	3	[7141]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7141]	TEST     	R0 1 ; if R0 then PC := 11
	5	[7141]	JMP      	11 ; PC := 11
	6	[7142]	GETGLOBAL	R0 K1 ; R0 := mPvpMovie
	7	[7142]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xe4162eed]
	8	[7142]	LOADK    	R2 K3 ; R2 := "OnMapVotingFinished"
	9	[7142]	LOADK    	R3 K4 ; R3 := ""
	10	[7142]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	11	[7144]	RETURN   	R0 1 ; return 

function #151 <?:7146,7153> (10 instructions, 40 bytes at 00000160FF559D50)
0 params, 2 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[7147]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7147]	SETTABLE 	R0 K0 K1 ; R0["allPlayersCommitted"] := true
	3	[7148]	GETGLOBAL	R0 K2 ; R0 := mAutoCloseDelay
	4	[7148]	LT       	0 R0 K3 ; if R0 >= 0.000000 then PC := 8
	5	[7148]	JMP      	8 ; PC := 8
	6	[7149]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[7149]	CALL     	R0 1 1 ; R0()
	8	[7152]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[7152]	RETURN   	R0 2 ; return R0 
	10	[7153]	RETURN   	R0 1 ; return 

function #152 <?:7155,7171> (59 instructions, 236 bytes at 00000160FF597B50)
2 params, 9 slots, 2 upvalues, 0 locals, 16 constants, 0 functions
	1	[7156]	GETGLOBAL	R2 K0 ; R2 := mInputBlocked
	2	[7156]	TEST     	R2 1 ; if R2 then PC := 59
	3	[7156]	JMP      	59 ; PC := 59
	4	[7157]	GETGLOBAL	R2 K1 ; R2 := mStatsGrid
	5	[7157]	GETTABLE 	R2 R2 K2 ; R2 := R2["mScrollBar"]
	6	[7158]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	7	[7158]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x91a24e4b]
	8	[7158]	LOADK    	R5 K5 ; R5 := "_root"
	9	[7158]	LOADK    	R6 := 25.000000
	10	[7158]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	11	[7159]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	12	[7159]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x91a24e4b]
	13	[7159]	LOADK    	R6 K5 ; R6 := "_root"
	14	[7159]	LOADK    	R7 := 26.000000
	15	[7159]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	16	[7160]	GETUPVAL 	R5 U0 ; R5 := U0
	17	[7160]	CALL     	R5 1 2 ; R5 := R5()
	18	[7160]	TEST     	R5 1 ; if R5 then PC := 23
	19	[7160]	JMP      	23 ; PC := 23
	20	[7160]	GETUPVAL 	R5 U1 ; R5 := U1
	21	[7160]	TEST     	R5 0 ; if not R5 then PC := 34
	22	[7160]	JMP      	34 ; PC := 34
	23	[7160]	GETUPVAL 	R5 U0 ; R5 := U0
	24	[7160]	CALL     	R5 1 2 ; R5 := R5()
	25	[7160]	TEST     	R5 0 ; if not R5 then PC := 47
	26	[7160]	JMP      	47 ; PC := 47
	27	[7160]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	28	[7160]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x91a24e4b]
	29	[7160]	LOADK    	R7 K6 ; R7 := "ExpandableArea.PlayerInfo.PlayerStats"
	30	[7160]	LOADK    	R8 := 3.000000
	31	[7160]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	32	[7160]	LT       	0 R4 R5 ; if R4 >= R5 then PC := 47
	33	[7160]	JMP      	47 ; PC := 47
	34	[7161]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	35	[7161]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x91a24e4b]
	36	[7161]	LOADK    	R7 K7 ; R7 := "ExpandableArea.Progression.Affinity.ScrollBar"
	37	[7161]	LOADK    	R8 := 2.000000
	38	[7161]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	39	[7161]	ADD      	R5 R5 K8 ; R5 := R5 + 10.000000
	40	[7161]	LT       	0 R3 R5 ; if R3 >= R5 then PC := 45
	41	[7161]	JMP      	45 ; PC := 45
	42	[7162]	GETGLOBAL	R5 K9 ; R5 := mAffinityGrid
	43	[7162]	GETTABLE 	R2 R5 K2 ; R2 := R5["mScrollBar"]
	44	[7162]	JMP      	47 ; PC := 47
	45	[7164]	GETGLOBAL	R5 K10 ; R5 := mRewardGrid
	46	[7164]	GETTABLE 	R2 R5 K2 ; R2 := R5["mScrollBar"]
	47	[7167]	GETGLOBAL	R5 K11 ; R5 := 0x7b998233
	48	[7167]	MOVE     	R6 R2 ; R6 := R2
	49	[7167]	CALL     	R5 2 2 ; R5 := R5(R6)
	50	[7167]	TEST     	R5 1 ; if R5 then PC := 59
	51	[7167]	JMP      	59 ; PC := 59
	52	[7168]	SELF     	R5 R2 K12 ; R6 := R2; R5 := R2[0x30456f58]
	53	[7168]	GETGLOBAL	R7 K13 ; R7 := 0x03f57322
	54	[7168]	MOVE     	R8 R1 ; R8 := R1
	55	[7168]	CALL     	R7 2 2 ; R7 := R7(R8)
	56	[7168]	GETGLOBAL	R8 K14 ; R8 := 0x0032441c
	57	[7168]	GETTABLE 	R8 R8 K15 ; R8 := R8["UISound_Scroll"]
	58	[7168]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	59	[7171]	RETURN   	R0 1 ; return 

function #153 <?:7173,7181> (21 instructions, 84 bytes at 00000160FF597EF0)
1 param, 3 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[7174]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[7174]	MOVE     	R2 R0 ; R2 := R0
	3	[7174]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7174]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 21
	5	[7174]	JMP      	21 ; PC := 21
	6	[7175]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	7	[7175]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x32302b4a]
	8	[7175]	CALL     	R1 2 1 ; R1(R2)
	9	[7176]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	10	[7176]	GETGLOBAL	R2 K6 ; R2 := 0xbe190284
	11	[7176]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[7176]	TEST     	R1 1 ; if R1 then PC := 17
	13	[7176]	JMP      	17 ; PC := 17
	14	[7177]	GETGLOBAL	R1 K6 ; R1 := 0xbe190284
	15	[7177]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xc849bff9]
	16	[7177]	CALL     	R1 2 1 ; R1(R2)
	17	[7179]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	18	[7179]	GETTABLE 	R1 R1 K8 ; R1 := R1[0x8ee24660]
	19	[7179]	OP_LOADBOOL	R2 0 0 ; R2 := false
	20	[7179]	CALL     	R1 2 1 ; R1(R2)
	21	[7181]	RETURN   	R0 1 ; return 

function #154 <?:7183,7185> (6 instructions, 24 bytes at 00000160FF598100)
0 params, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[7184]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7184]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xdedfded7]
	3	[7184]	LOADK    	R1 K1 ; R1 := "/Lotus/Language/Menu/QuitGameConfirm"
	4	[7184]	LOADK    	R2 K2 ; R2 := "ExitPvpAtEOM"
	5	[7184]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[7185]	RETURN   	R0 1 ; return 

function #155 <?:7187,7191> (6 instructions, 24 bytes at 00000160FF598200)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[7188]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7188]	TEST     	R0 1 ; if R0 then PC := 6
	3	[7188]	JMP      	6 ; PC := 6
	4	[7189]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[7189]	CALL     	R0 1 1 ; R0()
	6	[7191]	RETURN   	R0 1 ; return 

function #156 <?:7193,7204> (41 instructions, 164 bytes at 00000160FF598310)
1 param, 11 slots, 5 upvalues, 0 locals, 10 constants, 0 functions
	1	[7194]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7194]	EQ       	0 R1 R0 ; if R1 ~= R0 then PC := 5
	3	[7194]	JMP      	5 ; PC := 5
	4	[7195]	RETURN   	R0 1 ; return 
	5	[7197]	SETUPVAL 	R0 U0 ; U0 := R0
	6	[7198]	GETGLOBAL	R1 K0 ; R1 := 0x25312c9b
	7	[7198]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	8	[7198]	LOADK    	R3 K2 ; R3 := "_root"
	9	[7198]	LOADK    	R4 := 2.000000
	10	[7198]	NEWTABLE 	R5 1 0 ; R5 := {}
	11	[7198]	LOADK    	R6 := 10.000000
	12	[7198]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	13	[7198]	NEWTABLE 	R6 0 0 ; R6 := {}
	14	[7198]	GETUPVAL 	R7 U1 ; R7 := U1
	15	[7198]	GETTABLE 	R7 R7 K4 ; R7 := R7[0x06d055f9]
	16	[7198]	MOVE     	R8 R0 ; R8 := R0
	17	[7198]	LOADK    	R9 := 0.000000
	18	[7198]	LOADK    	R10 := 100.000000
	19	[7198]	CALL     	R7 4 0 ; R7,... := R7(R8,R9,R10)
	20	[7198]	SETLIST  	R6 0 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 0
	21	[7198]	LOADK    	R7 K5 ; R7 := 0.200000
	22	[7198]	CALL     	R1 7 1 ; R1(R2,R3,R4,R5,R6,R7)
	23	[7199]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	24	[7199]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x5477b639]
	25	[7199]	NOT      	R3 R0 ; R3 := not R0
	26	[7199]	CALL     	R1 3 1 ; R1(R2,R3)
	27	[7200]	GETUPVAL 	R1 U2 ; R1 := U2
	28	[7200]	GETTABLE 	R1 R1 K7 ; R1 := R1[0x102f073a]
	29	[7200]	NOT      	R2 R0 ; R2 := not R0
	30	[7200]	CALL     	R1 2 1 ; R1(R2)
	31	[7201]	GETUPVAL 	R1 U3 ; R1 := U3
	32	[7201]	GETTABLE 	R1 R1 K8 ; R1 := R1[0x56d89411]
	33	[7201]	MOVE     	R2 R0 ; R2 := R0
	34	[7201]	CALL     	R1 2 1 ; R1(R2)
	35	[7202]	GETUPVAL 	R1 U3 ; R1 := U3
	36	[7202]	GETTABLE 	R1 R1 K9 ; R1 := R1[0x15deabb1]
	37	[7202]	MOVE     	R2 R0 ; R2 := R0
	38	[7202]	CALL     	R1 2 1 ; R1(R2)
	39	[7203]	GETUPVAL 	R1 U4 ; R1 := U4
	40	[7203]	CALL     	R1 1 1 ; R1()
	41	[7204]	RETURN   	R0 1 ; return 

function #157 <?:7206,7208> (4 instructions, 16 bytes at 00000160FF5985D0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7207]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7207]	OP_LOADBOOL	R1 1 0 ; R1 := true
	3	[7207]	CALL     	R0 2 1 ; R0(R1)
	4	[7208]	RETURN   	R0 1 ; return 

function #158 <?:7210,7212> (4 instructions, 16 bytes at 00000160FF5986A0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7211]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7211]	OP_LOADBOOL	R1 0 0 ; R1 := false
	3	[7211]	CALL     	R0 2 1 ; R0(R1)
	4	[7212]	RETURN   	R0 1 ; return 

function #159 <?:7214,7233> (49 instructions, 196 bytes at 00000160FF598770)
0 params, 2 slots, 8 upvalues, 0 locals, 9 constants, 0 functions
	1	[7215]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7215]	CALL     	R0 1 2 ; R0 := R0()
	3	[7215]	TEST     	R0 0 ; if not R0 then PC := 23
	4	[7215]	JMP      	23 ; PC := 23
	5	[7215]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[7215]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xcdc34211]
	7	[7215]	CALL     	R0 1 2 ; R0 := R0()
	8	[7215]	TEST     	R0 0 ; if not R0 then PC := 23
	9	[7215]	JMP      	23 ; PC := 23
	10	[7215]	GETGLOBAL	R0 K1 ; R0 := _T
	11	[7215]	GETTABLE 	R0 R0 K2 ; R0 := R0["eomScreenMode"]
	12	[7215]	GETUPVAL 	R1 U2 ; R1 := U2
	13	[7215]	GETTABLE 	R1 R1 K3 ; R1 := R1["ACTUAL_EOM"]
	14	[7215]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 23
	15	[7215]	JMP      	23 ; PC := 23
	16	[7215]	GETGLOBAL	R0 K4 ; R0 := 0x89326c93
	17	[7215]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x18d05d30]
	18	[7215]	CALL     	R0 2 2 ; R0 := R0(R1)
	19	[7215]	TEST     	R0 1 ; if R0 then PC := 23
	20	[7215]	JMP      	23 ; PC := 23
	21	[7216]	GETUPVAL 	R0 U3 ; R0 := U3
	22	[7216]	CALL     	R0 1 1 ; R0()
	23	[7219]	GETUPVAL 	R0 U4 ; R0 := U4
	24	[7219]	TEST     	R0 0 ; if not R0 then PC := 30
	25	[7219]	JMP      	30 ; PC := 30
	26	[7220]	GETUPVAL 	R0 U5 ; R0 := U5
	27	[7220]	OP_LOADBOOL	R1 0 0 ; R1 := false
	28	[7220]	CALL     	R0 2 1 ; R0(R1)
	29	[7221]	RETURN   	R0 1 ; return 
	30	[7224]	GETUPVAL 	R0 U6 ; R0 := U6
	31	[7224]	CALL     	R0 1 2 ; R0 := R0()
	32	[7224]	TEST     	R0 0 ; if not R0 then PC := 36
	33	[7224]	JMP      	36 ; PC := 36
	34	[7226]	OP_LOADBOOL	R0 1 0 ; R0 := true
	35	[7226]	RETURN   	R0 2 ; return R0 
	36	[7229]	GETGLOBAL	R0 K6 ; R0 := mInputBlocked
	37	[7229]	TEST     	R0 1 ; if R0 then PC := 49
	38	[7229]	JMP      	49 ; PC := 49
	39	[7229]	GETGLOBAL	R0 K7 ; R0 := mWaitingForDbUpdate
	40	[7229]	TEST     	R0 1 ; if R0 then PC := 49
	41	[7229]	JMP      	49 ; PC := 49
	42	[7229]	GETGLOBAL	R0 K8 ; R0 := mWaitingForReturnToShip
	43	[7229]	TEST     	R0 1 ; if R0 then PC := 49
	44	[7229]	JMP      	49 ; PC := 49
	45	[7230]	GETUPVAL 	R0 U7 ; R0 := U7
	46	[7230]	CALL     	R0 1 1 ; R0()
	47	[7231]	OP_LOADBOOL	R0 1 0 ; R0 := true
	48	[7231]	RETURN   	R0 2 ; return R0 
	49	[7233]	RETURN   	R0 1 ; return 

function #160 <?:7235,7241> (14 instructions, 56 bytes at 00000160FF598A60)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[7236]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[7236]	TEST     	R1 1 ; if R1 then PC := 7
	3	[7236]	JMP      	7 ; PC := 7
	4	[7236]	GETGLOBAL	R1 K1 ; R1 := mRewardGrid
	5	[7236]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 8
	6	[7236]	JMP      	8 ; PC := 8
	7	[7237]	RETURN   	R0 1 ; return 
	8	[7240]	GETGLOBAL	R1 K1 ; R1 := mRewardGrid
	9	[7240]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	10	[7240]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[7240]	MOVE     	R4 R0 ; R4 := R0
	12	[7240]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[7240]	CALL     	R1 0 1 ; R1(R2,...)
	14	[7241]	RETURN   	R0 1 ; return 

function #161 <?:7243,7249> (11 instructions, 44 bytes at 00000160FF598BF0)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7244]	GETGLOBAL	R1 K0 ; R1 := mRewardGrid
	2	[7244]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[7244]	JMP      	5 ; PC := 5
	4	[7245]	RETURN   	R0 1 ; return 
	5	[7248]	GETGLOBAL	R1 K0 ; R1 := mRewardGrid
	6	[7248]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xdf42446e]
	7	[7248]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	8	[7248]	MOVE     	R4 R0 ; R4 := R0
	9	[7248]	CALL     	R3 2 0 ; R3,... := R3(R4)
	10	[7248]	CALL     	R1 0 1 ; R1(R2,...)
	11	[7249]	RETURN   	R0 1 ; return 

function #162 <?:7251,7257> (11 instructions, 44 bytes at 00000160FF598D50)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7252]	GETGLOBAL	R1 K0 ; R1 := mRewardGrid
	2	[7252]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[7252]	JMP      	5 ; PC := 5
	4	[7253]	RETURN   	R0 1 ; return 
	5	[7256]	GETGLOBAL	R1 K0 ; R1 := mRewardGrid
	6	[7256]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	7	[7256]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	8	[7256]	MOVE     	R4 R0 ; R4 := R0
	9	[7256]	CALL     	R3 2 0 ; R3,... := R3(R4)
	10	[7256]	CALL     	R1 0 1 ; R1(R2,...)
	11	[7257]	RETURN   	R0 1 ; return 

function #163 <?:7259,7267> (46 instructions, 184 bytes at 00000160FF598EB0)
1 param, 9 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[7260]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7260]	EQ       	1 R1 K0 ; if R1 == nil then PC := 25
	3	[7260]	JMP      	25 ; PC := 25
	4	[7260]	GETUPVAL 	R1 U0 ; R1 := U0
	5	[7260]	EQ       	1 R1 R0 ; if R1 == R0 then PC := 25
	6	[7260]	JMP      	25 ; PC := 25
	7	[7261]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	8	[7261]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x91e13703]
	9	[7261]	GETUPVAL 	R3 U0 ; R3 := U0
	10	[7261]	LOADK    	R4 K3 ; R4 := ".IconBacker"
	11	[7261]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	12	[7261]	LOADK    	R4 K4 ; R4 := "RectEdgeColor"
	13	[7261]	GETUPVAL 	R5 U1 ; R5 := U1
	14	[7261]	GETTABLE 	R5 R5 K5 ; R5 := R5["FloatingContentHighlight"]
	15	[7261]	GETTABLE 	R5 R5 K6 ; R5 := R5["r"]
	16	[7261]	GETUPVAL 	R6 U1 ; R6 := U1
	17	[7261]	GETTABLE 	R6 R6 K5 ; R6 := R6["FloatingContentHighlight"]
	18	[7261]	GETTABLE 	R6 R6 K7 ; R6 := R6["g"]
	19	[7261]	GETUPVAL 	R7 U1 ; R7 := U1
	20	[7261]	GETTABLE 	R7 R7 K5 ; R7 := R7["FloatingContentHighlight"]
	21	[7261]	GETTABLE 	R7 R7 K8 ; R7 := R7["b"]
	22	[7261]	GETGLOBAL	R8 K9 ; R8 := BORDER_ALPHA
	23	[7261]	DIV      	R8 R8 K10 ; R8 := R8 / 100.000000
	24	[7261]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	25	[7263]	EQ       	1 R0 K0 ; if R0 == nil then PC := 46
	26	[7263]	JMP      	46 ; PC := 46
	27	[7264]	SETUPVAL 	R0 U0 ; U0 := R0
	28	[7265]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	29	[7265]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x91e13703]
	30	[7265]	GETUPVAL 	R3 U0 ; R3 := U0
	31	[7265]	LOADK    	R4 K3 ; R4 := ".IconBacker"
	32	[7265]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	33	[7265]	LOADK    	R4 K4 ; R4 := "RectEdgeColor"
	34	[7265]	GETUPVAL 	R5 U1 ; R5 := U1
	35	[7265]	GETTABLE 	R5 R5 K5 ; R5 := R5["FloatingContentHighlight"]
	36	[7265]	GETTABLE 	R5 R5 K6 ; R5 := R5["r"]
	37	[7265]	GETUPVAL 	R6 U1 ; R6 := U1
	38	[7265]	GETTABLE 	R6 R6 K5 ; R6 := R6["FloatingContentHighlight"]
	39	[7265]	GETTABLE 	R6 R6 K7 ; R6 := R6["g"]
	40	[7265]	GETUPVAL 	R7 U1 ; R7 := U1
	41	[7265]	GETTABLE 	R7 R7 K5 ; R7 := R7["FloatingContentHighlight"]
	42	[7265]	GETTABLE 	R7 R7 K8 ; R7 := R7["b"]
	43	[7265]	GETGLOBAL	R8 K11 ; R8 := BACKER_ALPHA
	44	[7265]	DIV      	R8 R8 K10 ; R8 := R8 / 100.000000
	45	[7265]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	46	[7267]	RETURN   	R0 1 ; return 

function #164 <?:7269,7273> (7 instructions, 28 bytes at 00000160FF5991B0)
1 param, 3 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[7270]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7270]	MOVE     	R2 R0 ; R2 := R0
	3	[7270]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7270]	TEST     	R1 1 ; if R1 then PC := 7
	5	[7270]	JMP      	7 ; PC := 7
	6	[7271]	SETGLOBALHASH	R0 K1 ; mChildMovie := R0
	7	[7273]	RETURN   	R0 1 ; return 

function #165 <?:7275,7302> (102 instructions, 408 bytes at 00000160FF5992D0)
1 param, 15 slots, 3 upvalues, 0 locals, 29 constants, 0 functions
	1	[7276]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[7277]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	3	[7277]	GETGLOBAL	R3 K1 ; R3 := 0xbe190284
	4	[7277]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[7277]	TEST     	R2 1 ; if R2 then PC := 38
	6	[7277]	JMP      	38 ; PC := 38
	7	[7278]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	8	[7278]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xd7d79b74]
	9	[7278]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[7279]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	11	[7279]	MOVE     	R4 R2 ; R4 := R2
	12	[7279]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[7279]	TEST     	R3 1 ; if R3 then PC := 38
	14	[7279]	JMP      	38 ; PC := 38
	15	[7279]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	16	[7279]	SELF     	R4 R2 K3 ; R5 := R2; R4 := R2[0xcd57f819]
	17	[7279]	CALL     	R4 2 0 ; R4,... := R4(R5)
	18	[7279]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	19	[7279]	TEST     	R3 1 ; if R3 then PC := 38
	20	[7279]	JMP      	38 ; PC := 38
	21	[7280]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0xcd57f819]
	22	[7280]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[7280]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x5163741e]
	24	[7280]	CALL     	R3 2 2 ; R3 := R3(R4)
	25	[7281]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	26	[7281]	MOVE     	R5 R3 ; R5 := R3
	27	[7281]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[7281]	TEST     	R4 1 ; if R4 then PC := 38
	29	[7281]	JMP      	38 ; PC := 38
	30	[7282]	SELF     	R4 R3 K5 ; R5 := R3; R4 := R3[0x9e4623d9]
	31	[7282]	CALL     	R4 2 2 ; R4 := R4(R5)
	32	[7283]	EQ       	1 R4 K7 ; if R4 == 4.000000 then PC := 37
	33	[7283]	JMP      	37 ; PC := 37
	34	[7283]	EQ       	1 R4 K8 ; if R4 == 3.000000 then PC := 37
	35	[7283]	JMP      	37 ; PC := 37
	36	[7283]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 37
	37	[7283]	OP_LOADBOOL	R1 1 0 ; R1 := true
	38	[7287]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	39	[7287]	GETGLOBAL	R6 K9 ; R6 := _T
	40	[7287]	GETTABLE 	R6 R6 K10 ; R6 := R6["isStreamingLevel"]
	41	[7287]	CALL     	R5 2 2 ; R5 := R5(R6)
	42	[7287]	TEST     	R5 1 ; if R5 then PC := 48
	43	[7287]	JMP      	48 ; PC := 48
	44	[7287]	GETGLOBAL	R5 K9 ; R5 := _T
	45	[7287]	GETTABLE 	R5 R5 K10 ; R5 := R5["isStreamingLevel"]
	46	[7287]	TEST     	R5 1 ; if R5 then PC := 49
	47	[7287]	JMP      	49 ; PC := 49
	48	[7287]	MOVE     	R5 R1 ; R5 := R1
	49	[7288]	TEST     	R5 1 ; if R5 then PC := 102
	50	[7288]	JMP      	102 ; PC := 102
	51	[7288]	GETGLOBAL	R6 K9 ; R6 := _T
	52	[7288]	GETTABLE 	R6 R6 K11 ; R6 := R6["OpenScreen"]
	53	[7288]	TEST     	R6 0 ; if not R6 then PC := 102
	54	[7288]	JMP      	102 ; PC := 102
	55	[7288]	GETUPVAL 	R6 U0 ; R6 := U0
	56	[7288]	CALL     	R6 1 2 ; R6 := R6()
	57	[7288]	TEST     	R6 1 ; if R6 then PC := 102
	58	[7288]	JMP      	102 ; PC := 102
	59	[7288]	GETGLOBAL	R6 K12 ; R6 := mWaitingForReturnToShip
	60	[7288]	TEST     	R6 1 ; if R6 then PC := 102
	61	[7288]	JMP      	102 ; PC := 102
	62	[7289]	LOADK    	R6 K13 ; R6 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
	63	[7289]	GETGLOBAL	R7 K14 ; R7 := 0x64fb1586
	64	[7289]	MOVE     	R8 R0 ; R8 := R0
	65	[7289]	CALL     	R7 2 2 ; R7 := R7(R8)
	66	[7289]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	67	[7290]	GETGLOBAL	R7 K15 ; R7 := 0x03f57322
	68	[7290]	GETGLOBAL	R8 K16 ; R8 := 0xae91e43b
	69	[7290]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0x5b638cce]
	70	[7290]	MOVE     	R10 R6 ; R10 := R6
	71	[7290]	LOADK    	R11 K18 ; R11 := ".Btn"
	72	[7290]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	73	[7290]	LOADK    	R11 K19 ; R11 := "PlayerId"
	74	[7290]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	75	[7290]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	76	[7291]	GETUPVAL 	R8 U1 ; R8 := U1
	77	[7291]	CALL     	R8 1 2 ; R8 := R8()
	78	[7292]	EQ       	1 R7 K20 ; if R7 == nil then PC := 85
	79	[7292]	JMP      	85 ; PC := 85
	80	[7292]	EQ       	1 R8 K20 ; if R8 == nil then PC := 85
	81	[7292]	JMP      	85 ; PC := 85
	82	[7292]	LEN      	R9 R8 ; R9 := # R8
	83	[7292]	LT       	0 R9 R7 ; if R9 >= R7 then PC := 86
	84	[7292]	JMP      	86 ; PC := 86
	85	[7293]	RETURN   	R0 1 ; return 
	86	[7296]	GETTABLE 	R9 R8 R7 ; R9 := R8[R7]
	87	[7297]	GETGLOBAL	R10 K9 ; R10 := _T
	88	[7297]	SETTABLE 	R10 K21 K22 ; R10["SelectedIsGuild"] := false
	89	[7298]	GETGLOBAL	R10 K9 ; R10 := _T
	90	[7298]	GETTABLE 	R11 R9 K24 ; R11 := R9["name"]
	91	[7298]	SETTABLE 	R10 K23 R11 ; R10["SelectedProfileName"] := R11
	92	[7299]	GETGLOBAL	R10 K9 ; R10 := _T
	93	[7299]	GETTABLE 	R11 R9 K26 ; R11 := R9["onlineId"]
	94	[7299]	SETTABLE 	R10 K25 R11 ; R10[0x7b998233] := R11
	95	[7300]	GETGLOBAL	R10 K9 ; R10 := _T
	96	[7300]	GETTABLE 	R10 R10 K27 ; R10 := R10[0x32bb15a6]
	97	[7300]	LOADK    	R11 K28 ; R11 := "Profile"
	98	[7300]	LOADNIL  	R12 R12 ; R12 := nil
	99	[7300]	OP_LOADBOOL	R13 0 0 ; R13 := false
	100	[7300]	GETUPVAL 	R14 U2 ; R14 := U2
	101	[7300]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	102	[7302]	RETURN   	R0 1 ; return 

function #166 <?:7304,7321> (66 instructions, 264 bytes at 00000160FF599960)
1 param, 15 slots, 2 upvalues, 0 locals, 19 constants, 0 functions
	1	[7305]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7305]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	3	[7305]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7305]	TEST     	R1 1 ; if R1 then PC := 66
	5	[7305]	JMP      	66 ; PC := 66
	6	[7305]	GETGLOBAL	R1 K2 ; R1 := mInputBlocked
	7	[7305]	TEST     	R1 1 ; if R1 then PC := 66
	8	[7305]	JMP      	66 ; PC := 66
	9	[7306]	LOADK    	R1 K3 ; R1 := "ExpandableArea.PlayerInfo.PlayerBar.Players.Player"
	10	[7306]	GETGLOBAL	R2 K4 ; R2 := 0x64fb1586
	11	[7306]	MOVE     	R3 R0 ; R3 := R0
	12	[7306]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[7306]	CONCAT   	R1 R1 R2 ; R1 := R1 .. R2
	14	[7307]	GETUPVAL 	R2 U0 ; R2 := U0
	15	[7307]	MOVE     	R3 R1 ; R3 := R1
	16	[7307]	CALL     	R2 2 1 ; R2(R3)
	17	[7309]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	18	[7309]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xae31ab92]
	19	[7309]	MOVE     	R4 R1 ; R4 := R1
	20	[7309]	LOADK    	R5 K6 ; R5 := "Name"
	21	[7309]	LOADK    	R6 := 29.000000
	22	[7309]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	23	[7310]	LOADK    	R3 := 1.000000
	24	[7310]	GETGLOBAL	R4 K7 ; R4 := mSquadLoadoutsInfo
	25	[7310]	LEN      	R4 R4 ; R4 := # R4
	26	[7310]	LOADK    	R5 := 1.000000
	27	[7310]	FORPREP  	R3 65 ; R3 -= R5; PC := 65
	28	[7311]	GETGLOBAL	R7 K7 ; R7 := mSquadLoadoutsInfo
	29	[7311]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	30	[7311]	GETTABLE 	R7 R7 K6 ; R7 := R7["Name"]
	31	[7311]	EQ       	0 R7 R2 ; if R7 ~= R2 then PC := 65
	32	[7311]	JMP      	65 ; PC := 65
	33	[7312]	GETGLOBAL	R7 K8 ; R7 := _T
	34	[7312]	GETGLOBAL	R8 K7 ; R8 := mSquadLoadoutsInfo
	35	[7312]	GETTABLE 	R8 R8 R6 ; R8 := R8[R6]
	36	[7312]	GETTABLE 	R8 R8 K10 ; R8 := R8["NameWithRank"]
	37	[7312]	LOADK    	R9 K11 ; R9 := "\n\r"
	38	[7312]	GETGLOBAL	R10 K7 ; R10 := mSquadLoadoutsInfo
	39	[7312]	GETTABLE 	R10 R10 R6 ; R10 := R10[R6]
	40	[7312]	GETTABLE 	R10 R10 K12 ; R10 := R10["LoadoutDesc"]
	41	[7312]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	42	[7312]	SETTABLE 	R7 K9 R8 ; R7[0xdf42446e] := R8
	43	[7313]	GETGLOBAL	R7 K8 ; R7 := _T
	44	[7313]	GETUPVAL 	R8 U1 ; R8 := U1
	45	[7313]	GETTABLE 	R8 R8 K14 ; R8 := R8[0x6d7e6810]
	46	[7313]	GETGLOBAL	R9 K1 ; R9 := 0xae91e43b
	47	[7313]	NEWTABLE 	R10 0 2 ; R10 := {}
	48	[7314]	GETGLOBAL	R11 K1 ; R11 := 0xae91e43b
	49	[7314]	SELF     	R11 R11 K16 ; R12 := R11; R11 := R11[0x91a24e4b]
	50	[7314]	MOVE     	R13 R1 ; R13 := R1
	51	[7314]	LOADK    	R14 := 2.000000
	52	[7314]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	53	[7314]	ADD      	R11 R11 K17 ; R11 := R11 + 26.000000
	54	[7314]	SETTABLE 	R10 K15 R11 ; R10["x"] := R11
	55	[7315]	GETGLOBAL	R11 K1 ; R11 := 0xae91e43b
	56	[7315]	SELF     	R11 R11 K16 ; R12 := R11; R11 := R11[0x91a24e4b]
	57	[7315]	MOVE     	R13 R1 ; R13 := R1
	58	[7315]	LOADK    	R14 := 3.000000
	59	[7315]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	60	[7315]	SUB      	R11 R11 K17 ; R11 := R11 - 26.000000
	61	[7315]	SETTABLE 	R10 K18 R11 ; R10["y"] := R11
	62	[7313]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	63	[7316]	SETTABLE 	R7 K13 R8 ; R7["gToolTipCoords"] := R8
	64	[7317]	JMP      	66 ; PC := 66
	65	[7310]	FORLOOP  	R3 28 ; R3 += R5; if R3 <= R4 then begin PC := 28; R6 := R3 end
	66	[7321]	RETURN   	R0 1 ; return 

function #167 <?:7323,7328> (11 instructions, 44 bytes at 00000160FF599D70)
1 param, 3 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[7324]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7324]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	3	[7324]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7324]	TEST     	R1 1 ; if R1 then PC := 9
	5	[7324]	JMP      	9 ; PC := 9
	6	[7325]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[7325]	LOADNIL  	R2 R2 ; R2 := nil
	8	[7325]	CALL     	R1 2 1 ; R1(R2)
	9	[7327]	GETGLOBAL	R1 K2 ; R1 := _T
	10	[7327]	SETTABLE 	R1 K3 K4 ; R1["gToolTip"] := nil
	11	[7328]	RETURN   	R0 1 ; return 

function #168 <?:7330,7335> (17 instructions, 68 bytes at 00000160FF599EE0)
0 params, 4 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[7331]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7331]	TEST     	R0 1 ; if R0 then PC := 15
	3	[7331]	JMP      	15 ; PC := 15
	4	[7331]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[7331]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	6	[7331]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[7331]	TEST     	R0 1 ; if R0 then PC := 15
	8	[7331]	JMP      	15 ; PC := 15
	9	[7332]	GETGLOBAL	R0 K2 ; R0 := mRewardGrid
	10	[7332]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x0b35b612]
	11	[7332]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[7332]	GETTABLE 	R2 R2 K4 ; R2 := R2["DECREMENT"]
	13	[7332]	OP_LOADBOOL	R3 0 0 ; R3 := false
	14	[7332]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	15	[7334]	OP_LOADBOOL	R0 1 0 ; R0 := true
	16	[7334]	RETURN   	R0 2 ; return R0 
	17	[7335]	RETURN   	R0 1 ; return 

function #169 <?:7337,7342> (17 instructions, 68 bytes at 00000160FF59A090)
0 params, 4 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[7338]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7338]	TEST     	R0 1 ; if R0 then PC := 15
	3	[7338]	JMP      	15 ; PC := 15
	4	[7338]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[7338]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	6	[7338]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[7338]	TEST     	R0 1 ; if R0 then PC := 15
	8	[7338]	JMP      	15 ; PC := 15
	9	[7339]	GETGLOBAL	R0 K2 ; R0 := mRewardGrid
	10	[7339]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x0b35b612]
	11	[7339]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[7339]	GETTABLE 	R2 R2 K4 ; R2 := R2["INCREMENT"]
	13	[7339]	OP_LOADBOOL	R3 0 0 ; R3 := false
	14	[7339]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	15	[7341]	OP_LOADBOOL	R0 1 0 ; R0 := true
	16	[7341]	RETURN   	R0 2 ; return R0 
	17	[7342]	RETURN   	R0 1 ; return 

function #170 <?:7344,7349> (17 instructions, 68 bytes at 00000160FF59A240)
0 params, 4 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[7345]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7345]	TEST     	R0 1 ; if R0 then PC := 15
	3	[7345]	JMP      	15 ; PC := 15
	4	[7345]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[7345]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	6	[7345]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[7345]	TEST     	R0 1 ; if R0 then PC := 15
	8	[7345]	JMP      	15 ; PC := 15
	9	[7346]	GETGLOBAL	R0 K2 ; R0 := mRewardGrid
	10	[7346]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x0b35b612]
	11	[7346]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[7346]	GETTABLE 	R2 R2 K4 ; R2 := R2["DECREMENT"]
	13	[7346]	OP_LOADBOOL	R3 1 0 ; R3 := true
	14	[7346]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	15	[7348]	OP_LOADBOOL	R0 1 0 ; R0 := true
	16	[7348]	RETURN   	R0 2 ; return R0 
	17	[7349]	RETURN   	R0 1 ; return 

function #171 <?:7351,7356> (17 instructions, 68 bytes at 00000160FF59A3F0)
0 params, 4 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[7352]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7352]	TEST     	R0 1 ; if R0 then PC := 15
	3	[7352]	JMP      	15 ; PC := 15
	4	[7352]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[7352]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	6	[7352]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[7352]	TEST     	R0 1 ; if R0 then PC := 15
	8	[7352]	JMP      	15 ; PC := 15
	9	[7353]	GETGLOBAL	R0 K2 ; R0 := mRewardGrid
	10	[7353]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x0b35b612]
	11	[7353]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[7353]	GETTABLE 	R2 R2 K4 ; R2 := R2["INCREMENT"]
	13	[7353]	OP_LOADBOOL	R3 1 0 ; R3 := true
	14	[7353]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	15	[7355]	OP_LOADBOOL	R0 1 0 ; R0 := true
	16	[7355]	RETURN   	R0 2 ; return R0 
	17	[7356]	RETURN   	R0 1 ; return 

function #172 <?:7358,7362> (17 instructions, 68 bytes at 00000160FF59A5A0)
1 param, 5 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[7359]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[7359]	TEST     	R1 1 ; if R1 then PC := 17
	3	[7359]	JMP      	17 ; PC := 17
	4	[7359]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[7359]	GETGLOBAL	R2 K2 ; R2 := mRewardGrid
	6	[7359]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCategoryMenu"]
	7	[7359]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[7359]	TEST     	R1 1 ; if R1 then PC := 17
	9	[7359]	JMP      	17 ; PC := 17
	10	[7360]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	11	[7360]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCategoryMenu"]
	12	[7360]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xdf42446e]
	13	[7360]	GETGLOBAL	R3 K5 ; R3 := 0x03f57322
	14	[7360]	MOVE     	R4 R0 ; R4 := R0
	15	[7360]	CALL     	R3 2 0 ; R3,... := R3(R4)
	16	[7360]	CALL     	R1 0 1 ; R1(R2,...)
	17	[7362]	RETURN   	R0 1 ; return 

function #173 <?:7364,7368> (14 instructions, 56 bytes at 00000160FF59A760)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[7365]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7365]	GETGLOBAL	R2 K1 ; R2 := mRewardGrid
	3	[7365]	GETTABLE 	R2 R2 K2 ; R2 := R2["mCategoryMenu"]
	4	[7365]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7365]	TEST     	R1 1 ; if R1 then PC := 14
	6	[7365]	JMP      	14 ; PC := 14
	7	[7366]	GETGLOBAL	R1 K1 ; R1 := mRewardGrid
	8	[7366]	GETTABLE 	R1 R1 K2 ; R1 := R1["mCategoryMenu"]
	9	[7366]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbce5a201]
	10	[7366]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[7366]	MOVE     	R4 R0 ; R4 := R0
	12	[7366]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[7366]	CALL     	R1 0 1 ; R1(R2,...)
	14	[7368]	RETURN   	R0 1 ; return 

function #174 <?:7370,7375> (20 instructions, 80 bytes at 00000160FF59A8F0)
1 param, 5 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[7371]	GETGLOBAL	R1 K0 ; R1 := mInputBlocked
	2	[7371]	TEST     	R1 1 ; if R1 then PC := 20
	3	[7371]	JMP      	20 ; PC := 20
	4	[7371]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[7371]	GETGLOBAL	R2 K2 ; R2 := mRewardGrid
	6	[7371]	GETTABLE 	R2 R2 K3 ; R2 := R2["mCategoryMenu"]
	7	[7371]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[7371]	TEST     	R1 1 ; if R1 then PC := 20
	9	[7371]	JMP      	20 ; PC := 20
	10	[7372]	GETGLOBAL	R1 K2 ; R1 := mRewardGrid
	11	[7372]	GETTABLE 	R1 R1 K3 ; R1 := R1["mCategoryMenu"]
	12	[7372]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x070daa5a]
	13	[7372]	GETGLOBAL	R3 K5 ; R3 := 0x03f57322
	14	[7372]	MOVE     	R4 R0 ; R4 := R0
	15	[7372]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[7372]	OP_LOADBOOL	R4 1 0 ; R4 := true
	17	[7372]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	18	[7373]	GETUPVAL 	R1 U0 ; R1 := U0
	19	[7373]	CALL     	R1 1 1 ; R1()
	20	[7375]	RETURN   	R0 1 ; return 

function #175 <?:7377,7381> (12 instructions, 48 bytes at 00000160FF59AAB0)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7378]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7378]	GETGLOBAL	R2 K1 ; R2 := mAffinityGrid
	3	[7378]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7378]	TEST     	R1 1 ; if R1 then PC := 12
	5	[7378]	JMP      	12 ; PC := 12
	6	[7379]	GETGLOBAL	R1 K1 ; R1 := mAffinityGrid
	7	[7379]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xdf42446e]
	8	[7379]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[7379]	MOVE     	R4 R0 ; R4 := R0
	10	[7379]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[7379]	CALL     	R1 0 1 ; R1(R2,...)
	12	[7381]	RETURN   	R0 1 ; return 

function #176 <?:7383,7389> (16 instructions, 64 bytes at 00000160FF59AC10)
1 param, 5 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[7384]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7384]	GETGLOBAL	R2 K1 ; R2 := mAffinityGrid
	3	[7384]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7384]	TEST     	R1 1 ; if R1 then PC := 12
	5	[7384]	JMP      	12 ; PC := 12
	6	[7385]	GETGLOBAL	R1 K1 ; R1 := mAffinityGrid
	7	[7385]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	8	[7385]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[7385]	MOVE     	R4 R0 ; R4 := R0
	10	[7385]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[7385]	CALL     	R1 0 1 ; R1(R2,...)
	12	[7387]	GETGLOBAL	R1 K4 ; R1 := _T
	13	[7387]	SETTABLE 	R1 K5 K6 ; R1["InfoPopup_Data"] := nil
	14	[7388]	GETGLOBAL	R1 K4 ; R1 := _T
	15	[7388]	SETTABLE 	R1 K7 K6 ; R1["InfoPopup_Grid"] := nil
	16	[7389]	RETURN   	R0 1 ; return 

function #177 <?:7391,7395> (12 instructions, 48 bytes at 00000160FF59ADD0)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7392]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7392]	GETGLOBAL	R2 K1 ; R2 := mAffinityGrid
	3	[7392]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7392]	TEST     	R1 1 ; if R1 then PC := 12
	5	[7392]	JMP      	12 ; PC := 12
	6	[7393]	GETGLOBAL	R1 K1 ; R1 := mAffinityGrid
	7	[7393]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x070daa5a]
	8	[7393]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	9	[7393]	MOVE     	R4 R0 ; R4 := R0
	10	[7393]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[7393]	CALL     	R1 0 1 ; R1(R2,...)
	12	[7395]	RETURN   	R0 1 ; return 

function #178 <?:7397,7401> (8 instructions, 32 bytes at 00000160FF59AF30)
0 params, 2 slots, 3 upvalues, 0 locals, 0 constants, 0 functions
	1	[7398]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7398]	NOT      	R0 R0 ; R0 := not R0
	3	[7398]	SETUPVAL 	R0 U0 ; U0 := R0
	4	[7399]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[7399]	CALL     	R0 1 1 ; R0()
	6	[7400]	GETUPVAL 	R0 U2 ; R0 := U2
	7	[7400]	CALL     	R0 1 1 ; R0()
	8	[7401]	RETURN   	R0 1 ; return 

function #179 <?:7403,7408> (27 instructions, 108 bytes at 00000160FF59B020)
0 params, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[7404]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[7404]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	3	[7404]	LOADK    	R2 K2 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Tab"
	4	[7404]	LOADK    	R3 := 9.000000
	5	[7404]	GETUPVAL 	R4 U0 ; R4 := U0
	6	[7404]	GETTABLE 	R4 R4 K3 ; R4 := R4["FloatingContentHighlightInt"]
	7	[7404]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	8	[7405]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	9	[7405]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	10	[7405]	LOADK    	R2 K4 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
	11	[7405]	LOADK    	R3 := 9.000000
	12	[7405]	GETUPVAL 	R4 U0 ; R4 := U0
	13	[7405]	GETTABLE 	R4 R4 K3 ; R4 := R4["FloatingContentHighlightInt"]
	14	[7405]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	15	[7406]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	16	[7406]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	17	[7406]	LOADK    	R2 K4 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
	18	[7406]	LOADK    	R3 := 5.000000
	19	[7406]	LOADK    	R4 := 120.000000
	20	[7406]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	21	[7407]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	22	[7407]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	23	[7407]	LOADK    	R2 K4 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
	24	[7407]	LOADK    	R3 := 6.000000
	25	[7407]	LOADK    	R4 := 120.000000
	26	[7407]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	27	[7408]	RETURN   	R0 1 ; return 

function #180 <?:7410,7415> (27 instructions, 108 bytes at 00000160FF59B210)
0 params, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[7411]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[7411]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	3	[7411]	LOADK    	R2 K2 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Tab"
	4	[7411]	LOADK    	R3 := 9.000000
	5	[7411]	GETUPVAL 	R4 U0 ; R4 := U0
	6	[7411]	GETTABLE 	R4 R4 K3 ; R4 := R4["FloatingContentInt"]
	7	[7411]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	8	[7412]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	9	[7412]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	10	[7412]	LOADK    	R2 K4 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
	11	[7412]	LOADK    	R3 := 9.000000
	12	[7412]	GETUPVAL 	R4 U0 ; R4 := U0
	13	[7412]	GETTABLE 	R4 R4 K3 ; R4 := R4["FloatingContentInt"]
	14	[7412]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	15	[7413]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	16	[7413]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	17	[7413]	LOADK    	R2 K4 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
	18	[7413]	LOADK    	R3 := 5.000000
	19	[7413]	LOADK    	R4 := 100.000000
	20	[7413]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	21	[7414]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	22	[7414]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	23	[7414]	LOADK    	R2 K4 ; R2 := "ExpandableArea.PlayerInfo.PlayerBar.Arrow.Cross"
	24	[7414]	LOADK    	R3 := 6.000000
	25	[7414]	LOADK    	R4 := 100.000000
	26	[7414]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	27	[7415]	RETURN   	R0 1 ; return 

function #181 <?:7417,7419> (7 instructions, 28 bytes at 00000160FF59B400)
1 param, 5 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[7418]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	2	[7418]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x42b04007]
	3	[7418]	MOVE     	R3 R0 ; R3 := R0
	4	[7418]	OP_LOADBOOL	R4 0 0 ; R4 := false
	5	[7418]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[7418]	SETGLOBALHASH	R1 K0 ; mCountdownMessage := R1
	7	[7419]	RETURN   	R0 1 ; return 

function #182 <?:7421,7453> (31 instructions, 124 bytes at 00000160FF59B530)
0 params, 4 slots, 4 upvalues, 0 locals, 8 constants, 1 function
	1	[7422]	GETGLOBAL	R0 K0 ; R0 := 0x0032441c
	2	[7422]	GETTABLE 	R0 R0 K1 ; R0 := R0["UIMaterial_FocusLensStore"]
	3	[7422]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 8
	4	[7422]	JMP      	8 ; PC := 8
	5	[7425]	OP_LOADBOOL	R0 1 0 ; R0 := true
	6	[7425]	SETUPVAL 	R0 U0 ; U0 := R0
	7	[7427]	RETURN   	R0 1 ; return 
	8	[7430]	GETUPVAL 	R0 U1 ; R0 := U1
	9	[7430]	GETTABLE 	R0 R0 K3 ; R0 := R0[0x8024bd2d]
	10	[7430]	CALL     	R0 1 1 ; R0()
	11	[7432]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	12	[7432]	GETGLOBAL	R1 K5 ; R1 := mAffinityGrid
	13	[7432]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[7432]	TEST     	R0 1 ; if R0 then PC := 21
	15	[7432]	JMP      	21 ; PC := 21
	16	[7435]	GETGLOBAL	R0 K5 ; R0 := mAffinityGrid
	17	[7435]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xea061e98]
	18	[7447]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	19	[7447]	GETUPVAL 	R0 U2 ; R0 := U2
	20	[7435]	CALL     	R0 3 1 ; R0(R1,R2)
	21	[7450]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	22	[7450]	GETGLOBAL	R1 K7 ; R1 := mRewardGrid
	23	[7450]	CALL     	R0 2 2 ; R0 := R0(R1)
	24	[7450]	TEST     	R0 1 ; if R0 then PC := 31
	25	[7450]	JMP      	31 ; PC := 31
	26	[7451]	GETUPVAL 	R0 U3 ; R0 := U3
	27	[7451]	OP_LOADBOOL	R1 1 0 ; R1 := true
	28	[7451]	OP_LOADBOOL	R2 1 0 ; R2 := true
	29	[7451]	OP_LOADBOOL	R3 1 0 ; R3 := true
	30	[7451]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	31	[7453]	RETURN   	R0 1 ; return 

function #183 <?:7455,7461> (10 instructions, 40 bytes at 00000160FF59BB00)
0 params, 2 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[7456]	SETGLOBALHASH	R0 K0 ; mChildMovie := R0
	2	[7457]	OP_LOADBOOL	R0 0 0 ; R0 := false
	3	[7457]	SETUPVAL 	R0 U0 ; U0 := R0
	4	[7458]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[7458]	SETGLOBALHASH	R0 K1 ; mKudosScreenClosed := R0
	6	[7459]	OP_LOADBOOL	R0 0 0 ; R0 := false
	7	[7459]	SETGLOBALHASH	R0 K2 ; mInputBlocked := R0
	8	[7460]	GETUPVAL 	R0 U1 ; R0 := U1
	9	[7460]	CALL     	R0 1 1 ; R0()
	10	[7461]	RETURN   	R0 1 ; return 

function #184 <?:7463,7465> (3 instructions, 12 bytes at 00000160F380A820)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7464]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7464]	CALL     	R0 1 1 ; R0()
	3	[7465]	RETURN   	R0 1 ; return 

function #185 <?:7467,7473> (8 instructions, 32 bytes at 00000160F380A8D0)
0 params, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[7468]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7468]	TEST     	R0 0 ; if not R0 then PC := 8
	3	[7468]	JMP      	8 ; PC := 8
	4	[7469]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[7469]	CALL     	R0 1 1 ; R0()
	6	[7471]	OP_LOADBOOL	R0 0 0 ; R0 := false
	7	[7471]	SETUPVAL 	R0 U0 ; U0 := R0
	8	[7473]	RETURN   	R0 1 ; return 

function #186 <?:7475,7477> (3 instructions, 12 bytes at 00000160F380A9C0)
0 params, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[7476]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[7476]	SETGLOBALHASH	R0 K0 ; mOpenedFromPauseMenu := R0
	3	[7477]	RETURN   	R0 1 ; return 

function #187 <?:7479,7481> (3 instructions, 12 bytes at 00000160F380AAB0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7480]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7480]	CALL     	R0 1 1 ; R0()
	3	[7481]	RETURN   	R0 1 ; return 

function #188 <?:7483,7485> (5 instructions, 20 bytes at 00000160F380AB80)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[7484]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 4
	2	[7484]	JMP      	4 ; PC := 4
	3	[7484]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 4
	4	[7484]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[7485]	RETURN   	R0 1 ; return 

function #189 <?:7487,7494> (17 instructions, 68 bytes at 00000160F380AC90)
0 params, 3 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[7488]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7488]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[7488]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7488]	TEST     	R0 1 ; if R0 then PC := 17
	5	[7488]	JMP      	17 ; PC := 17
	6	[7489]	GETGLOBAL	R0 K2 ; R0 := 0x76ea806b
	7	[7489]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x3f3ae64c]
	8	[7489]	LOADK    	R2 := 0.000000
	9	[7489]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[7490]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	11	[7490]	MOVE     	R2 R0 ; R2 := R0
	12	[7490]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[7490]	TEST     	R1 1 ; if R1 then PC := 17
	14	[7490]	JMP      	17 ; PC := 17
	15	[7491]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[7491]	CALL     	R1 1 1 ; R1()
	17	[7494]	RETURN   	R0 1 ; return 

function #190 <?:7496,7498> (3 instructions, 12 bytes at 00000160F380AE30)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[7497]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[7497]	RETURN   	R0 2 ; return R0 
	3	[7498]	RETURN   	R0 1 ; return 

function #191 <?:7500,7509> (23 instructions, 92 bytes at 00000160F380AF00)
0 params, 3 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[7501]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7501]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[7501]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7501]	TEST     	R0 1 ; if R0 then PC := 23
	5	[7501]	JMP      	23 ; PC := 23
	6	[7502]	OP_LOADBOOL	R0 0 0 ; R0 := false
	7	[7502]	SETGLOBALHASH	R0 K2 ; mWaitingForMissionComplete := R0
	8	[7503]	GETGLOBAL	R0 K3 ; R0 := mSearchBox
	9	[7503]	SETTABLE 	R0 K4 K5 ; R0["mSkipAutoFocus"] := false
	10	[7504]	GETGLOBAL	R0 K3 ; R0 := mSearchBox
	11	[7504]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xb61fb39f]
	12	[7504]	CALL     	R0 2 1 ; R0(R1)
	13	[7505]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	14	[7505]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xbed40e9c]
	15	[7505]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[7505]	CALL     	R0 3 1 ; R0(R1,R2)
	17	[7506]	GETUPVAL 	R0 U0 ; R0 := U0
	18	[7506]	GETTABLE 	R0 R0 K8 ; R0 := R0[0x56d89411]
	19	[7506]	OP_LOADBOOL	R1 0 0 ; R1 := false
	20	[7506]	CALL     	R0 2 1 ; R0(R1)
	21	[7507]	GETUPVAL 	R0 U1 ; R0 := U1
	22	[7507]	CALL     	R0 1 1 ; R0()
	23	[7509]	RETURN   	R0 1 ; return 

function #192 <?:7511,7515> (18 instructions, 72 bytes at 00000160F380B110)
0 params, 7 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[7512]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7512]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[7512]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7512]	TEST     	R0 1 ; if R0 then PC := 18
	5	[7512]	JMP      	18 ; PC := 18
	6	[7513]	GETGLOBAL	R0 K2 ; R0 := 0x25312c9b
	7	[7513]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	8	[7513]	LOADK    	R2 K3 ; R2 := "TopAnchor.Header"
	9	[7513]	LOADK    	R3 := 6.000000
	10	[7513]	NEWTABLE 	R4 1 0 ; R4 := {}
	11	[7513]	LOADK    	R5 := 10.000000
	12	[7513]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	13	[7513]	NEWTABLE 	R5 1 0 ; R5 := {}
	14	[7513]	LOADK    	R6 := 100.000000
	15	[7513]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	16	[7513]	LOADK    	R6 := 0.500000
	17	[7513]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	18	[7515]	RETURN   	R0 1 ; return 

function #193 <?:7517,7548> (83 instructions, 332 bytes at 00000160F380B2C0)
0 params, 12 slots, 2 upvalues, 0 locals, 22 constants, 1 function
	1	[7518]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7518]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[7518]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7518]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[7518]	JMP      	7 ; PC := 7
	6	[7519]	RETURN   	R0 1 ; return 
	7	[7522]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[7522]	LEN      	R0 R0 ; R0 := # R0
	9	[7522]	EQ       	0 R0 K2 ; if R0 ~= 0.000000 then PC := 18
	10	[7522]	JMP      	18 ; PC := 18
	11	[7523]	GETUPVAL 	R0 U1 ; R0 := U1
	12	[7523]	GETTABLE 	R0 R0 K3 ; R0 := R0[0x06d055f9]
	13	[7523]	GETGLOBAL	R1 K4 ; R1 := mMissionFailed
	14	[7523]	LOADK    	R2 K5 ; R2 := "/Lotus/Language/Menu/MissionStats_Failed"
	15	[7523]	LOADK    	R3 K6 ; R3 := "/Lotus/Language/Menu/MissionStats_Complete"
	16	[7523]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	17	[7523]	SETUPVAL 	R0 U0 ; U0 := R0
	18	[7525]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	19	[7525]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x20b98db3]
	20	[7525]	LOADK    	R2 K8 ; R2 := "MissionComplete.TextAnim.Label.GrowAnim.Label.text"
	21	[7525]	GETUPVAL 	R3 U0 ; R3 := U0
	22	[7525]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	23	[7527]	LOADK    	R0 := 130.000000
	24	[7528]	GETGLOBAL	R1 K9 ; R1 := 0x5bced4c4
	25	[7528]	GETTABLE 	R1 R1 K10 ; R1 := R1[0xb62ecfe0]
	26	[7528]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	27	[7528]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x91a24e4b]
	28	[7528]	LOADK    	R4 K12 ; R4 := "MissionComplete.TextAnim.Label.GrowAnim.Label"
	29	[7528]	LOADK    	R5 := 33.000000
	30	[7528]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	31	[7528]	MOVE     	R3 R0 ; R3 := R0
	32	[7528]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	33	[7528]	ADD      	R1 R1 K13 ; R1 := R1 + 50.000000
	34	[7529]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	35	[7529]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x91a24e4b]
	36	[7529]	LOADK    	R4 K14 ; R4 := "MissionComplete.BackerAnim.Backer.Mid"
	37	[7529]	LOADK    	R5 := 12.000000
	38	[7529]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	39	[7530]	SUB      	R3 R0 K15 ; R3 := R0 - 2.000000
	40	[7530]	SUB      	R1 R1 R3 ; R1 := R1 - R3
	41	[7541]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	42	[7541]	MOVE     	R0 R1 ; R0 := R1
	43	[7541]	MOVE     	R0 R2 ; R0 := R2
	44	[7543]	GETGLOBAL	R4 K16 ; R4 := 0x25312c9b
	45	[7543]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	46	[7543]	LOADK    	R6 K14 ; R6 := "MissionComplete.BackerAnim.Backer.Mid"
	47	[7543]	LOADK    	R7 := 2.000000
	48	[7543]	NEWTABLE 	R8 1 0 ; R8 := {}
	49	[7543]	MOVE     	R9 R3 ; R9 := R3
	50	[7543]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	51	[7543]	NEWTABLE 	R9 1 0 ; R9 := {}
	52	[7543]	LOADK    	R10 := 1.000000
	53	[7543]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	54	[7543]	LOADK    	R10 := 1.500000
	55	[7543]	CALL     	R4 7 1 ; R4(R5,R6,R7,R8,R9,R10)
	56	[7545]	DIV      	R4 R1 K15 ; R4 := R1 / 2.000000
	57	[7545]	ADD      	R4 R4 K18 ; R4 := R4 + 64.000000
	58	[7546]	GETGLOBAL	R5 K16 ; R5 := 0x25312c9b
	59	[7546]	GETGLOBAL	R6 K1 ; R6 := 0xae91e43b
	60	[7546]	LOADK    	R7 K19 ; R7 := "MissionComplete.ArrowEndsAnim.ArrowEnds.Left"
	61	[7546]	LOADK    	R8 := 2.000000
	62	[7546]	NEWTABLE 	R9 1 0 ; R9 := {}
	63	[7546]	LOADK    	R10 := 0.000000
	64	[7546]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	65	[7546]	NEWTABLE 	R10 1 0 ; R10 := {}
	66	[7546]	UNM      	R11 R4 ; R11 := ^ R4
	67	[7546]	SUB      	R11 R11 K20 ; R11 := R11 - 22.000000
	68	[7546]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	69	[7546]	LOADK    	R11 := 1.500000
	70	[7546]	CALL     	R5 7 1 ; R5(R6,R7,R8,R9,R10,R11)
	71	[7547]	GETGLOBAL	R5 K16 ; R5 := 0x25312c9b
	72	[7547]	GETGLOBAL	R6 K1 ; R6 := 0xae91e43b
	73	[7547]	LOADK    	R7 K21 ; R7 := "MissionComplete.ArrowEndsAnim.ArrowEnds.Right"
	74	[7547]	LOADK    	R8 := 2.000000
	75	[7547]	NEWTABLE 	R9 1 0 ; R9 := {}
	76	[7547]	LOADK    	R10 := 0.000000
	77	[7547]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	78	[7547]	NEWTABLE 	R10 1 0 ; R10 := {}
	79	[7547]	ADD      	R11 R4 K20 ; R11 := R4 + 22.000000
	80	[7547]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	81	[7547]	LOADK    	R11 := 1.500000
	82	[7547]	CALL     	R5 7 1 ; R5(R6,R7,R8,R9,R10,R11)
	83	[7548]	RETURN   	R0 1 ; return 

function #194 <?:7550,7558> (24 instructions, 96 bytes at 00000160F380BCF0)
2 params, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[7551]	EQ       	0 R1 K0 ; if R1 ~= "UpdateMissionCompleteTitle" then PC := 9
	2	[7551]	JMP      	9 ; PC := 9
	3	[7552]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	4	[7552]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xe4162eed]
	5	[7552]	LOADK    	R4 K0 ; R4 := "UpdateMissionCompleteTitle"
	6	[7552]	LOADK    	R5 K3 ; R5 := ""
	7	[7552]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	8	[7552]	JMP      	24 ; PC := 24
	9	[7553]	EQ       	0 R1 K4 ; if R1 ~= "ShowEndOfMatch" then PC := 17
	10	[7553]	JMP      	17 ; PC := 17
	11	[7554]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	12	[7554]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xe4162eed]
	13	[7554]	LOADK    	R4 K4 ; R4 := "ShowEndOfMatch"
	14	[7554]	LOADK    	R5 K3 ; R5 := ""
	15	[7554]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	16	[7554]	JMP      	24 ; PC := 24
	17	[7555]	EQ       	0 R1 K5 ; if R1 ~= "StopShowEndOfMatchTitle" then PC := 24
	18	[7555]	JMP      	24 ; PC := 24
	19	[7556]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	20	[7556]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xe4162eed]
	21	[7556]	LOADK    	R4 K6 ; R4 := "ShowEndOfMatchTitle"
	22	[7556]	LOADK    	R5 K3 ; R5 := ""
	23	[7556]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	24	[7558]	RETURN   	R0 1 ; return 

function #195 <?:7560,7564> (8 instructions, 32 bytes at 00000160F380BF20)
2 params, 6 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7561]	EQ       	0 R1 K0 ; if R1 ~= "UpdateMissionCompleteArrows" then PC := 8
	2	[7561]	JMP      	8 ; PC := 8
	3	[7562]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	4	[7562]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xe4162eed]
	5	[7562]	LOADK    	R4 K0 ; R4 := "UpdateMissionCompleteArrows"
	6	[7562]	LOADK    	R5 K3 ; R5 := ""
	7	[7562]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	8	[7564]	RETURN   	R0 1 ; return 

function #196 <?:7566,7572> (16 instructions, 64 bytes at 00000160F380C0B0)
2 params, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[7567]	EQ       	0 R1 K0 ; if R1 ~= "HideArrowFill" then PC := 9
	2	[7567]	JMP      	9 ; PC := 9
	3	[7568]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	4	[7568]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xe4162eed]
	5	[7568]	LOADK    	R4 K0 ; R4 := "HideArrowFill"
	6	[7568]	LOADK    	R5 K3 ; R5 := ""
	7	[7568]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	8	[7568]	JMP      	16 ; PC := 16
	9	[7569]	EQ       	0 R1 K4 ; if R1 ~= "ShowArrowFill" then PC := 16
	10	[7569]	JMP      	16 ; PC := 16
	11	[7570]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	12	[7570]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xe4162eed]
	13	[7570]	LOADK    	R4 K4 ; R4 := "ShowArrowFill"
	14	[7570]	LOADK    	R5 K3 ; R5 := ""
	15	[7570]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	16	[7572]	RETURN   	R0 1 ; return 

function #197 <?:7574,7580> (13 instructions, 52 bytes at 00000160F380C240)
0 params, 2 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[7575]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7575]	CALL     	R0 1 2 ; R0 := R0()
	3	[7575]	TEST     	R0 0 ; if not R0 then PC := 13
	4	[7575]	JMP      	13 ; PC := 13
	5	[7576]	OP_LOADBOOL	R0 0 0 ; R0 := false
	6	[7576]	SETGLOBALHASH	R0 K0 ; mWaitingForReturnToShip := R0
	7	[7577]	OP_LOADBOOL	R0 1 0 ; R0 := true
	8	[7577]	SETGLOBALHASH	R0 K1 ; mShouldClose := R0
	9	[7578]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[7578]	GETTABLE 	R0 R0 K2 ; R0 := R0[0x56d89411]
	11	[7578]	OP_LOADBOOL	R1 0 0 ; R1 := false
	12	[7578]	CALL     	R0 2 1 ; R0(R1)
	13	[7580]	RETURN   	R0 1 ; return 

function #198 <?:7582,7584> (3 instructions, 12 bytes at 00000160F380C3B0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[7583]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[7583]	RETURN   	R0 2 ; return R0 
	3	[7584]	RETURN   	R0 1 ; return 

function #199 <?:7586,7589> (6 instructions, 24 bytes at 00000160F380C480)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[7587]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	2	[7587]	LOADK    	R1 K1 ; R1 := "Closing EOM - User changed"
	3	[7587]	CALL     	R0 2 1 ; R0(R1)
	4	[7588]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[7588]	CALL     	R0 1 1 ; R0()
	6	[7589]	RETURN   	R0 1 ; return 

function #200 <?:7591,7593> (3 instructions, 12 bytes at 00000160F380C5F0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7592]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7592]	RETURN   	R0 2 ; return R0 
	3	[7593]	RETURN   	R0 1 ; return 
