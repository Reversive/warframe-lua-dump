
main <?:0,0> (1467 instructions, 5868 bytes at 00000160F8015CA0)
0+ params, 200 slots, 0 upvalues, 0 locals, 402 constants, 272 functions
	1	[2]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2]	SETTABLE 	R0 K1 K2 ; R0["MATCHMAKING_QUICKMATCH_GAMEMODE"] := 9.000000
	3	[3]	GETGLOBAL	R0 K0 ; R0 := _T
	4	[3]	SETTABLE 	R0 K3 K4 ; R0["MATCHMAKING_PRIVATE_GAMEMODE"] := 3.000000
	5	[4]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[4]	SETTABLE 	R0 K5 K6 ; R0["MATCHMAKING_INVITE_ONLY_GAMEMODE"] := 4.000000
	7	[5]	GETGLOBAL	R0 K0 ; R0 := _T
	8	[5]	SETTABLE 	R0 K7 K8 ; R0["MATCHMAKING_OFFLINE_GAMEMODE"] := 0.000000
	9	[6]	GETGLOBAL	R0 K0 ; R0 := _T
	10	[6]	SETTABLE 	R0 K9 K10 ; R0["MATCHMAKING_PVP_GAMEMODE"] := 6.000000
	11	[8]	GETGLOBAL	R0 K0 ; R0 := _T
	12	[8]	SETTABLE 	R0 K11 K8 ; R0["MENU_SUIT_AVATAR_PROGRESS"] := 0.000000
	13	[10]	GETGLOBAL	R0 K0 ; R0 := _T
	14	[10]	SETTABLE 	R0 K12 K13 ; R0["SHOW_LOCKED_ALERTS"] := false
	15	[12]	GETGLOBAL	R0 K0 ; R0 := _T
	16	[12]	SETTABLE 	R0 K14 K15 ; R0["gSelectedRegionId"] := -1.000000
	17	[13]	GETGLOBAL	R0 K0 ; R0 := _T
	18	[13]	SETTABLE 	R0 K16 K17 ; R0["gSelectedNodeName"] := ""
	19	[15]	GETGLOBAL	R0 K0 ; R0 := _T
	20	[15]	SETTABLE 	R0 K18 K19 ; R0["gShowingLoginScreen"] := true
	21	[18]	GETGLOBAL	R0 K0 ; R0 := _T
	22	[18]	NEWTABLE 	R1 0 0 ; R1 := {}
	23	[18]	SETTABLE 	R0 K20 R1 ; R0["CachedAlerts"] := R1
	24	[19]	GETGLOBAL	R0 K0 ; R0 := _T
	25	[19]	NEWTABLE 	R1 0 0 ; R1 := {}
	26	[19]	SETTABLE 	R0 K21 R1 ; R0["CachedInvasionInfo"] := R1
	27	[21]	GETGLOBAL	R0 K0 ; R0 := _T
	28	[21]	SETTABLE 	R0 K22 K23 ; R0["CachedConstructionProjects"] := nil
	29	[22]	GETGLOBAL	R0 K0 ; R0 := _T
	30	[22]	NEWTABLE 	R1 0 0 ; R1 := {}
	31	[22]	SETTABLE 	R0 K24 R1 ; R0["CachedSkullNodes"] := R1
	32	[23]	GETGLOBAL	R0 K0 ; R0 := _T
	33	[23]	NEWTABLE 	R1 0 0 ; R1 := {}
	34	[23]	SETTABLE 	R0 K25 R1 ; R0["CachedRegionStatus"] := R1
	35	[24]	GETGLOBAL	R0 K0 ; R0 := _T
	36	[24]	SETTABLE 	R0 K26 K23 ; R0["CachedFlashSales"] := nil
	37	[25]	GETGLOBAL	R0 K0 ; R0 := _T
	38	[25]	NEWTABLE 	R1 0 0 ; R1 := {}
	39	[25]	SETTABLE 	R0 K27 R1 ; R0["CachedVoidTraders"] := R1
	40	[26]	GETGLOBAL	R0 K0 ; R0 := _T
	41	[26]	SETTABLE 	R0 K28 K23 ; R0["CachedTennoAvatar"] := nil
	42	[28]	GETGLOBAL	R0 K0 ; R0 := _T
	43	[28]	NEWTABLE 	R1 0 0 ; R1 := {}
	44	[28]	SETTABLE 	R0 K29 R1 ; R0["CachedSyndicateMissions"] := R1
	45	[29]	GETGLOBAL	R0 K0 ; R0 := _T
	46	[29]	NEWTABLE 	R1 0 0 ; R1 := {}
	47	[29]	SETTABLE 	R0 K30 R1 ; R0["CachedNodesPendingDestruction"] := R1
	48	[30]	GETGLOBAL	R0 K0 ; R0 := _T
	49	[30]	NEWTABLE 	R1 0 0 ; R1 := {}
	50	[30]	SETTABLE 	R0 K31 R1 ; R0["CachedSortieMissions"] := R1
	51	[31]	GETGLOBAL	R0 K0 ; R0 := _T
	52	[31]	NEWTABLE 	R1 0 0 ; R1 := {}
	53	[31]	SETTABLE 	R0 K32 R1 ; R0["CachedLiteSortieMissions"] := R1
	54	[32]	GETGLOBAL	R0 K0 ; R0 := _T
	55	[32]	NEWTABLE 	R1 0 0 ; R1 := {}
	56	[32]	SETTABLE 	R0 K33 R1 ; R0["CachedActiveMissions"] := R1
	57	[33]	GETGLOBAL	R0 K0 ; R0 := _T
	58	[33]	NEWTABLE 	R1 0 0 ; R1 := {}
	59	[33]	SETTABLE 	R0 K34 R1 ; R0["CachedGhostTowerMissions"] := R1
	60	[34]	GETGLOBAL	R0 K0 ; R0 := _T
	61	[34]	NEWTABLE 	R1 0 0 ; R1 := {}
	62	[34]	SETTABLE 	R0 K35 R1 ; R0["CachedNemesisMissions"] := R1
	63	[35]	GETGLOBAL	R0 K0 ; R0 := _T
	64	[35]	NEWTABLE 	R1 0 0 ; R1 := {}
	65	[35]	SETTABLE 	R0 K36 R1 ; R0["CachedEliteAlertMissions"] := R1
	66	[36]	GETGLOBAL	R0 K0 ; R0 := _T
	67	[36]	NEWTABLE 	R1 0 0 ; R1 := {}
	68	[36]	SETTABLE 	R0 K37 R1 ; R0["CachedHardModeDailyMissions"] := R1
	69	[37]	GETGLOBAL	R0 K0 ; R0 := _T
	70	[37]	NEWTABLE 	R1 0 0 ; R1 := {}
	71	[37]	SETTABLE 	R0 K38 R1 ; R0["CachedVoidStormMissions"] := R1
	72	[150]	LOADK    	R0 := 6.000000
	73	[151]	NEWTABLE 	R1 0 2 ; R1 := {}
	74	[151]	GETGLOBAL	R2 K40 ; R2 := 0xb009bbc6
	75	[151]	LOADK    	R3 K41 ; R3 := "/Lotus/Types/Game/MissionDecks/KuvaMissionRewards/KuvaSiphonRewards"
	76	[151]	CALL     	R2 2 2 ; R2 := R2(R3)
	77	[151]	SETTABLE 	R1 K39 R2 ; R1["easy"] := R2
	78	[151]	GETGLOBAL	R2 K40 ; R2 := 0xb009bbc6
	79	[151]	LOADK    	R3 K43 ; R3 := "/Lotus/Types/Game/MissionDecks/KuvaMissionRewards/KuvaSiphonFloodRewards"
	80	[151]	CALL     	R2 2 2 ; R2 := R2(R3)
	81	[151]	SETTABLE 	R1 K42 R2 ; R1["hard"] := R2
	82	[153]	NEWTABLE 	R2 0 4 ; R2 := {}
	83	[153]	GETGLOBAL	R3 K45 ; R3 := 0x0469f296
	84	[153]	LOADK    	R4 K46 ; R4 := "TeshinHardModeInvite"
	85	[153]	CALL     	R3 2 2 ; R3 := R3(R4)
	86	[153]	SETTABLE 	R2 K44 R3 ; R2["NodeSymbol"] := R3
	87	[153]	SETTABLE 	R2 K47 K15 ; R2["InviteQueued"] := -1.000000
	88	[153]	GETGLOBAL	R3 K49 ; R3 := 0x7ed0a956
	89	[153]	LOADK    	R4 K50 ; R4 := "/Lotus/Sounds/Dialog/HardMode/Teshin/DTeshinGeneric0240Teshin"
	90	[153]	CALL     	R3 2 2 ; R3 := R3(R4)
	91	[153]	SETTABLE 	R2 K48 R3 ; R2["Transmission"] := R3
	92	[153]	GETGLOBAL	R3 K40 ; R3 := 0xb009bbc6
	93	[153]	LOADK    	R4 K52 ; R4 := "/Lotus/Types/Items/MiscItems/SteelEssence"
	94	[153]	CALL     	R3 2 2 ; R3 := R3(R4)
	95	[153]	SETTABLE 	R2 K51 R3 ; R2["DailyMissionReward"] := R3
	96	[155]	LOADK    	R3 K53 ; R3 := "Background::"
	97	[156]	GETGLOBAL	R4 K54 ; R4 := 0x2d0fad09
	98	[156]	LOADK    	R5 K55 ; R5 := "EE.Interface.Utilities"
	99	[156]	CALL     	R4 2 2 ; R4 := R4(R5)
	100	[157]	GETGLOBAL	R5 K54 ; R5 := 0x2d0fad09
	101	[157]	LOADK    	R6 K56 ; R6 := "Lotus.Interface.LotusUtilities"
	102	[157]	CALL     	R5 2 2 ; R5 := R5(R6)
	103	[158]	GETGLOBAL	R6 K54 ; R6 := 0x2d0fad09
	104	[158]	LOADK    	R7 K57 ; R7 := "Lotus.Interface.FortressUtilities"
	105	[158]	CALL     	R6 2 2 ; R6 := R6(R7)
	106	[159]	GETGLOBAL	R7 K54 ; R7 := 0x2d0fad09
	107	[159]	LOADK    	R8 K58 ; R8 := "Lotus.Interface.LotusNetworkUtilities"
	108	[159]	CALL     	R7 2 2 ; R7 := R7(R8)
	109	[160]	GETGLOBAL	R8 K54 ; R8 := 0x2d0fad09
	110	[160]	LOADK    	R9 K59 ; R9 := "Lotus.Interface.Libs.SortieGenerator"
	111	[160]	CALL     	R8 2 2 ; R8 := R8(R9)
	112	[161]	GETGLOBAL	R9 K54 ; R9 := 0x2d0fad09
	113	[161]	LOADK    	R10 K60 ; R10 := "Lotus.Interface.Libs.SyndicateMissionGenerator"
	114	[161]	CALL     	R9 2 2 ; R9 := R9(R10)
	115	[162]	GETGLOBAL	R10 K54 ; R10 := 0x2d0fad09
	116	[162]	LOADK    	R11 K61 ; R11 := "Lotus.Interface.Libs.ActiveMissionGenerator"
	117	[162]	CALL     	R10 2 2 ; R10 := R10(R11)
	118	[163]	GETGLOBAL	R11 K54 ; R11 := 0x2d0fad09
	119	[163]	LOADK    	R12 K62 ; R12 := "Lotus.Interface.Libs.InvasionMissionGenerator"
	120	[163]	CALL     	R11 2 2 ; R11 := R11(R12)
	121	[164]	GETGLOBAL	R12 K54 ; R12 := 0x2d0fad09
	122	[164]	LOADK    	R13 K63 ; R13 := "Lotus.Interface.CardUtilitiesRedux"
	123	[164]	CALL     	R12 2 2 ; R12 := R12(R13)
	124	[165]	GETGLOBAL	R13 K54 ; R13 := 0x2d0fad09
	125	[165]	LOADK    	R14 K64 ; R14 := "Lotus.Interface.TransmissionUtilities"
	126	[165]	CALL     	R13 2 2 ; R13 := R13(R14)
	127	[166]	GETGLOBAL	R14 K54 ; R14 := 0x2d0fad09
	128	[166]	LOADK    	R15 K65 ; R15 := "Lotus.Interface.UIUtilities"
	129	[166]	CALL     	R14 2 2 ; R14 := R14(R15)
	130	[167]	GETGLOBAL	R15 K54 ; R15 := 0x2d0fad09
	131	[167]	LOADK    	R16 K66 ; R16 := "Lotus.Interface.UIStyleUtilities"
	132	[167]	CALL     	R15 2 2 ; R15 := R15(R16)
	133	[168]	GETGLOBAL	R16 K54 ; R16 := 0x2d0fad09
	134	[168]	LOADK    	R17 K67 ; R17 := "Lotus.Scripts.RelayReconstructionUtilities"
	135	[168]	CALL     	R16 2 2 ; R16 := R16(R17)
	136	[169]	GETGLOBAL	R17 K54 ; R17 := 0x2d0fad09
	137	[169]	LOADK    	R18 K68 ; R18 := "Lotus.Interface.Libs.JukeBoxMgr"
	138	[169]	CALL     	R17 2 2 ; R17 := R17(R18)
	139	[170]	GETGLOBAL	R18 K54 ; R18 := 0x2d0fad09
	140	[170]	LOADK    	R19 K69 ; R19 := "Lotus.Interface.MissionRequirementUtilities"
	141	[170]	CALL     	R18 2 2 ; R18 := R18(R19)
	142	[171]	GETGLOBAL	R19 K54 ; R19 := 0x2d0fad09
	143	[171]	LOADK    	R20 K70 ; R20 := "Lotus.Interface.WorldStateUtilities"
	144	[171]	CALL     	R19 2 2 ; R19 := R19(R20)
	145	[172]	GETGLOBAL	R20 K54 ; R20 := 0x2d0fad09
	146	[172]	LOADK    	R21 K71 ; R21 := "Lotus.Scripts.Nemesis.NemesisGenerator"
	147	[172]	CALL     	R20 2 2 ; R20 := R20(R21)
	148	[173]	GETGLOBAL	R21 K54 ; R21 := 0x2d0fad09
	149	[173]	LOADK    	R22 K72 ; R22 := "Lotus.Interface.Libs.DioramaLoader"
	150	[173]	CALL     	R21 2 2 ; R21 := R21(R22)
	151	[174]	GETGLOBAL	R22 K54 ; R22 := 0x2d0fad09
	152	[174]	LOADK    	R23 K73 ; R23 := "Lotus.Interface.FocusUtilities"
	153	[174]	CALL     	R22 2 2 ; R22 := R22(R23)
	154	[176]	GETGLOBAL	R23 K54 ; R23 := 0x2d0fad09
	155	[176]	LOADK    	R24 K74 ; R24 := "Lotus.Interface.Libs.ActionFigureLoadoutLoader"
	156	[176]	CALL     	R23 2 2 ; R23 := R23(R24)
	157	[177]	GETGLOBAL	R24 K54 ; R24 := 0x2d0fad09
	158	[177]	LOADK    	R25 K75 ; R25 := "Lotus.Interface.Libs.DojoMgr"
	159	[177]	CALL     	R24 2 2 ; R24 := R24(R25)
	160	[178]	GETGLOBAL	R25 K54 ; R25 := 0x2d0fad09
	161	[178]	LOADK    	R26 K76 ; R26 := "Lotus.Powersuits.Operator.OperatorLib"
	162	[178]	CALL     	R25 2 2 ; R25 := R25(R26)
	163	[180]	LOADNIL  	R26 R26 ; R26 := nil
	164	[180]	SETGLOBALHASH	R26 K77 ; mTimerMgr := R26
	165	[181]	OP_LOADBOOL	R26 1 0 ; R26 := true
	166	[181]	SETGLOBALHASH	R26 K78 ; mQuestsNeedChecking := R26
	167	[182]	NEWTABLE 	R26 0 3 ; R26 := {}
	168	[182]	SETTABLE 	R26 K80 K13 ; R26["Initialized"] := false
	169	[182]	SETTABLE 	R26 K81 K13 ; R26["Shutdown"] := false
	170	[182]	SETTABLE 	R26 K82 K13 ; R26["StyleInit"] := false
	171	[182]	SETGLOBALHASH	R26 K79 ; mControl := R26
	172	[184]	LOADNIL  	R26 R26 ; R26 := nil
	173	[184]	SETGLOBALHASH	R26 K83 ; mNotificationsMovie := R26
	174	[185]	LOADNIL  	R26 R26 ; R26 := nil
	175	[185]	SETGLOBALHASH	R26 K84 ; mChildMovie := R26
	176	[186]	NEWTABLE 	R26 0 0 ; R26 := {}
	177	[186]	SETGLOBALHASH	R26 K85 ; screenStack := R26
	178	[187]	LOADNIL  	R26 R26 ; R26 := nil
	179	[187]	SETGLOBALHASH	R26 K86 ; queuedMovie := R26
	180	[188]	LOADNIL  	R26 R26 ; R26 := nil
	181	[188]	SETGLOBALHASH	R26 K87 ; queuedMovieCallback := R26
	182	[189]	NEWTABLE 	R26 0 0 ; R26 := {}
	183	[189]	SETGLOBALHASH	R26 K88 ; movies := R26
	184	[190]	OP_LOADBOOL	R26 0 0 ; R26 := false
	185	[190]	SETGLOBALHASH	R26 K89 ; mFadeInStarted := R26
	186	[191]	LOADNIL  	R26 R26 ; R26 := nil
	187	[191]	SETGLOBALHASH	R26 K90 ; mPreviousScreen := R26
	188	[193]	LOADNIL  	R26 R26 ; R26 := nil
	189	[193]	SETGLOBALHASH	R26 K91 ; mToolTip := R26
	190	[194]	LOADNIL  	R26 R26 ; R26 := nil
	191	[194]	SETGLOBALHASH	R26 K92 ; mInfoPopup := R26
	192	[195]	LOADNIL  	R26 R26 ; R26 := nil
	193	[195]	SETGLOBALHASH	R26 K93 ; mContextMenu := R26
	194	[196]	LOADNIL  	R26 R26 ; R26 := nil
	195	[196]	SETGLOBALHASH	R26 K94 ; mIMEOverlay := R26
	196	[197]	LOADNIL  	R26 R26 ; R26 := nil
	197	[197]	SETGLOBALHASH	R26 K95 ; mBlockingTaskPopup := R26
	198	[198]	OP_LOADBOOL	R26 0 0 ; R26 := false
	199	[198]	SETGLOBALHASH	R26 K96 ; mUnblockWhenAsyncDone := R26
	200	[199]	LOADNIL  	R26 R26 ; R26 := nil
	201	[199]	SETGLOBALHASH	R26 K97 ; mStyleBackgroundMovie := R26
	202	[201]	LOADNIL  	R26 R26 ; R26 := nil
	203	[201]	SETGLOBALHASH	R26 K98 ; mPurchaseParams := R26
	204	[202]	LOADK    	R26 := 1.000000
	205	[202]	SETGLOBALHASH	R26 K99 ; mQuantityToReceive := R26
	206	[203]	LOADNIL  	R26 R27 ; R26 := R27 := nil
	207	[204]	SETGLOBALHASH	R27 K100 ; mPurchaseTotalPrice := R27
	208	[205]	LOADNIL  	R27 R27 ; R27 := nil
	209	[205]	SETGLOBALHASH	R27 K101 ; mPurchaseUnitPrice := R27
	210	[206]	LOADK    	R27 := 1.000000
	211	[206]	SETGLOBALHASH	R27 K102 ; mPurchaseQuantityMultiplier := R27
	212	[208]	LOADNIL  	R27 R27 ; R27 := nil
	213	[208]	SETGLOBALHASH	R27 K103 ; mQueuedGoToScreen := R27
	214	[209]	LOADNIL  	R27 R27 ; R27 := nil
	215	[209]	SETGLOBALHASH	R27 K104 ; mQueuedGoToPreviousScreen := R27
	216	[210]	OP_LOADBOOL	R27 0 0 ; R27 := false
	217	[210]	SETGLOBALHASH	R27 K105 ; mQueuedLogoff := R27
	218	[212]	OP_LOADBOOL	R27 0 0 ; R27 := false
	219	[212]	SETGLOBALHASH	R27 K106 ; mAbortingQuickMatch := R27
	220	[214]	OP_LOADBOOL	R27 0 0 ; R27 := false
	221	[214]	SETGLOBALHASH	R27 K107 ; mNeedsToRespawnMenuAvatars := R27
	222	[216]	LOADNIL  	R27 R27 ; R27 := nil
	223	[216]	SETGLOBALHASH	R27 K108 ; mMenuSuitAvatar := R27
	224	[217]	OP_LOADBOOL	R27 0 0 ; R27 := false
	225	[217]	SETGLOBALHASH	R27 K109 ; mMenuSuitAvatarVisible := R27
	226	[219]	LOADNIL  	R27 R27 ; R27 := nil
	227	[219]	SETGLOBALHASH	R27 K110 ; connectionFailurePopup := R27
	228	[221]	LOADNIL  	R27 R27 ; R27 := nil
	229	[221]	SETGLOBALHASH	R27 K111 ; mPurchasePopupMovie := R27
	230	[222]	LOADNIL  	R27 R27 ; R27 := nil
	231	[222]	SETGLOBALHASH	R27 K112 ; mCurrentMode := R27
	232	[223]	LOADNIL  	R27 R27 ; R27 := nil
	233	[223]	SETGLOBALHASH	R27 K113 ; mCurrentGameRules := R27
	234	[224]	LOADNIL  	R27 R27 ; R27 := nil
	235	[224]	SETGLOBALHASH	R27 K114 ; mUIInputEnableTimer := R27
	236	[225]	NEWTABLE 	R27 0 3 ; R27 := {}
	237	[225]	SETTABLE 	R27 K116 K13 ; R27["Refresh"] := false
	238	[225]	SETTABLE 	R27 K117 K23 ; R27["Timer"] := nil
	239	[225]	SETTABLE 	R27 K118 K8 ; R27["LastRefreshTime"] := 0.000000
	240	[225]	SETGLOBALHASH	R27 K115 ; mFoundryNotification := R27
	241	[226]	NEWTABLE 	R27 0 5 ; R27 := {}
	242	[226]	SETTABLE 	R27 K120 K13 ; R27["IsLoading"] := false
	243	[226]	SETTABLE 	R27 K121 K17 ; R27["ScreenName"] := ""
	244	[226]	SETTABLE 	R27 K122 K23 ; R27["OpenFromMovie"] := nil
	245	[226]	SETTABLE 	R27 K123 K13 ; R27["IgnoreIfOpen"] := false
	246	[226]	SETTABLE 	R27 K124 K23 ; R27["Callback"] := nil
	247	[226]	SETGLOBALHASH	R27 K119 ; mOpenScreenAsyncInfo := R27
	248	[228]	LOADK    	R27 := 0.000000
	249	[228]	SETGLOBALHASH	R27 K125 ; mPurchasePolarityType := R27
	250	[229]	LOADNIL  	R27 R27 ; R27 := nil
	251	[229]	SETGLOBALHASH	R27 K126 ; mPurchaseOrigin := R27
	252	[230]	LOADK    	R27 K17 ; R27 := ""
	253	[230]	SETGLOBALHASH	R27 K127 ; mBinType := R27
	254	[231]	LOADK    	R27 K17 ; R27 := ""
	255	[231]	SETGLOBALHASH	R27 K128 ; mBaseSourceType := R27
	256	[233]	LOADNIL  	R27 R27 ; R27 := nil
	257	[233]	SETGLOBALHASH	R27 K129 ; mWebCmd := R27
	258	[235]	NEWTABLE 	R27 17 0 ; R27 := {}
	259	[236]	LOADK    	R28 K130 ; R28 := "PURCHASE_MARKET"
	260	[237]	LOADK    	R29 K131 ; R29 := "PURCHASE_VOID_TRADER"
	261	[238]	LOADK    	R30 K132 ; R30 := "PURCHASE_SYNDICATE_FAVOR"
	262	[239]	LOADK    	R31 K133 ; R31 := "PURCHASE_DAILY_DEAL"
	263	[240]	LOADK    	R32 K134 ; R32 := "PURCHASE_ARSENAL"
	264	[241]	LOADK    	R33 K135 ; R33 := "PURCHASE_PROFILE"
	265	[242]	LOADK    	R34 K136 ; R34 := "PURCHASE_HUB"
	266	[243]	LOADK    	R35 K137 ; R35 := "PURCHASE_VENDOR"
	267	[244]	LOADK    	R36 K138 ; R36 := "PURCHASE_APPEARANCE_PREVIEW"
	268	[245]	LOADK    	R37 K139 ; R37 := "PURCHASE_MUSEUM"
	269	[246]	LOADK    	R38 K140 ; R38 := "PURCHASE_OPERATOR"
	270	[247]	LOADK    	R39 K141 ; R39 := "PURCHASE_PLAYER_SHIP"
	271	[248]	LOADK    	R40 K142 ; R40 := "PURCHASE_CREWSHIP"
	272	[249]	LOADK    	R41 K143 ; R41 := "PURCHASE_MENU_STYLE"
	273	[250]	LOADK    	R42 K144 ; R42 := "PURCHASE_MENU_HUD"
	274	[251]	LOADK    	R43 K145 ; R43 := "PURCHASE_CHAT"
	275	[252]	LOADK    	R44 K146 ; R44 := "PURCHASE_INVENTORY"
	276	[254]	LOADK    	R45 K147 ; R45 := "PURCHASE_STAR_CHART"
	277	[254]	SETLIST  	R27 18 1 ; R27[(1-1)*FPF+i] := R(27+i), 1 <= i <= 18
	278	[256]	NEWTABLE 	R28 0 5 ; R28 := {}
	279	[258]	SETTABLE 	R28 K117 K15 ; R28["Timer"] := -1.000000
	280	[259]	SETTABLE 	R28 K148 K8 ; R28["InTime"] := 0.000000
	281	[260]	SETTABLE 	R28 K149 K8 ; R28["OutTime"] := 0.000000
	282	[261]	SETTABLE 	R28 K150 K8 ; R28["FinalVal"] := 0.000000
	283	[262]	SETTABLE 	R28 K151 K23 ; R28["FullCallback"] := nil
	284	[264]	LOADNIL  	R29 R29 ; R29 := nil
	285	[266]	NEWTABLE 	R30 0 6 ; R30 := {}
	286	[268]	GETGLOBAL	R31 K45 ; R31 := 0x0469f296
	287	[268]	LOADK    	R32 K153 ; R32 := "BackgroundMovie"
	288	[268]	CALL     	R31 2 2 ; R31 := R31(R32)
	289	[268]	SETTABLE 	R30 K152 R31 ; R30["WORLD_STATE_CALLBACK_IDENTIFIER"] := R31
	290	[269]	SETTABLE 	R30 K154 K23 ; R30["mWorldStateLastNightmareSeed"] := nil
	291	[270]	SETTABLE 	R30 K155 K23 ; R30["mWorldStateLastGhostTowerSeed"] := nil
	292	[271]	SETTABLE 	R30 K156 K23 ; R30["mWorldStateLastEliteAlertSeed"] := nil
	293	[272]	SETTABLE 	R30 K157 K13 ; R30["mWorldStateCallbackRegistered"] := false
	294	[273]	SETTABLE 	R30 K158 K13 ; R30["mForceRefreshWorldStatePostLogin"] := false
	295	[276]	LOADK    	R31 := 5.000000
	296	[277]	LOADK    	R32 := 3.000000
	297	[278]	OP_LOADBOOL	R33 0 0 ; R33 := false
	298	[280]	LOADNIL  	R34 R34 ; R34 := nil
	299	[281]	NEWTABLE 	R35 0 0 ; R35 := {}
	300	[285]	LOADK    	R36 := 1.000000
	301	[287]	LOADNIL  	R37 R37 ; R37 := nil
	302	[287]	SETGLOBALHASH	R37 K159 ; mProcessingOmegaWithPendingFingerprint := R37
	303	[288]	LOADNIL  	R37 R37 ; R37 := nil
	304	[288]	SETGLOBALHASH	R37 K160 ; mNewIdentifiedOmegaMods := R37
	305	[289]	LOADNIL  	R37 R37 ; R37 := nil
	306	[289]	SETGLOBALHASH	R37 K161 ; mOmegaWithPendingFingerprints := R37
	307	[290]	LOADNIL  	R37 R37 ; R37 := nil
	308	[290]	SETGLOBALHASH	R37 K162 ; mCheckingForIdentifiedOmegaMods := R37
	309	[291]	LOADNIL  	R37 R37 ; R37 := nil
	310	[291]	SETGLOBALHASH	R37 K163 ; mShowingIdentifiedOmegaModsDiorama := R37
	311	[292]	LOADNIL  	R37 R37 ; R37 := nil
	312	[292]	SETGLOBALHASH	R37 K164 ; mShouldShowDiorama := R37
	313	[295]	OP_LOADBOOL	R37 0 0 ; R37 := false
	314	[297]	LOADNIL  	R38 R38 ; R38 := nil
	315	[298]	NEWTABLE 	R39 0 8 ; R39 := {}
	316	[298]	SETTABLE 	R39 K165 K23 ; R39["Loader"] := nil
	317	[298]	SETTABLE 	R39 K120 K13 ; R39["IsLoading"] := false
	318	[298]	SETTABLE 	R39 K166 K23 ; R39["QueuedTransmission"] := nil
	319	[298]	SETTABLE 	R39 K167 K23 ; R39["SoundInst"] := nil
	320	[298]	NEWTABLE 	R40 0 0 ; R40 := {}
	321	[298]	SETTABLE 	R39 K168 R40 ; R39["WaitingTransmissions"] := R40
	322	[298]	SETTABLE 	R39 K169 K8 ; R39["DelayTime"] := 0.000000
	323	[298]	NEWTABLE 	R40 0 0 ; R40 := {}
	324	[298]	SETTABLE 	R39 K170 R40 ; R39["Callbacks"] := R40
	325	[298]	SETTABLE 	R39 K171 K13 ; R39["Playing"] := false
	326	[299]	NEWTABLE 	R40 0 2 ; R40 := {}
	327	[299]	SETTABLE 	R40 K172 K23 ; R40["Avatar"] := nil
	328	[299]	GETGLOBAL	R41 K174 ; R41 := 0xa421af95
	329	[299]	CALL     	R41 1 2 ; R41 := R41()
	330	[299]	SETTABLE 	R40 K173 R41 ; R40["TargetPos"] := R41
	331	[301]	OP_LOADBOOL	R41 0 0 ; R41 := false
	332	[301]	SETGLOBALHASH	R41 K175 ; mAdditionalScreenCreated := R41
	333	[302]	OP_LOADBOOL	R41 0 0 ; R41 := false
	334	[302]	SETGLOBALHASH	R41 K176 ; mNewFriendRequests := R41
	335	[303]	NEWTABLE 	R41 0 0 ; R41 := {}
	336	[303]	SETGLOBALHASH	R41 K177 ; mFriendRequests := R41
	337	[304]	LOADNIL  	R41 R41 ; R41 := nil
	338	[304]	SETGLOBALHASH	R41 K178 ; mFriendRequestActiveNotification := R41
	339	[306]	NEWTABLE 	R41 0 6 ; R41 := {}
	340	[307]	NEWTABLE 	R42 0 0 ; R42 := {}
	341	[307]	SETTABLE 	R41 K179 R42 ; R41["mBoosterPackResults"] := R42
	342	[308]	SETTABLE 	R41 K180 K8 ; R41["mCurrentPack"] := 0.000000
	343	[309]	SETTABLE 	R41 K181 K8 ; R41["mNumberOfCardsInPack"] := 0.000000
	344	[310]	SETTABLE 	R41 K182 K17 ; R41["mBoosterPackItemString"] := ""
	345	[311]	SETTABLE 	R41 K183 K8 ; R41["mNumberOfPacksToProcess"] := 0.000000
	346	[312]	SETTABLE 	R41 K184 K8 ; R41["mTotalPacksToProcess"] := 0.000000
	347	[315]	NEWTABLE 	R42 0 4 ; R42 := {}
	348	[315]	GETTABLE 	R43 R5 K186 ; R43 := R5["DECO_AREA_SHIP"]
	349	[315]	SETTABLE 	R42 K185 R43 ; R42["DecoArea"] := R43
	350	[315]	SETTABLE 	R42 K165 K23 ; R42["Loader"] := nil
	351	[315]	SETTABLE 	R42 K120 K13 ; R42["IsLoading"] := false
	352	[315]	NEWTABLE 	R43 0 6 ; R43 := {}
	353	[315]	SETTABLE 	R43 K188 K189 ; R43["RoomLoaderIndex"] := 1.000000
	354	[315]	SETTABLE 	R43 K190 K189 ; R43["DecoLoaderIndex"] := 1.000000
	355	[315]	SETTABLE 	R43 K191 K189 ; R43["RoomCreationIndex"] := 1.000000
	356	[315]	SETTABLE 	R43 K192 K189 ; R43["DecoCreationIndex"] := 1.000000
	357	[315]	NEWTABLE 	R44 0 0 ; R44 := {}
	358	[315]	SETTABLE 	R43 K193 R44 ; R43["DecosLoaded"] := R44
	359	[315]	SETTABLE 	R43 K194 K13 ; R43["LastLoad"] := false
	360	[315]	SETTABLE 	R42 K187 R43 ; R42["LoaderProgress"] := R43
	361	[316]	NEWTABLE 	R43 0 4 ; R43 := {}
	362	[316]	GETTABLE 	R44 R5 K195 ; R44 := R5["DECO_AREA_APARTMENT"]
	363	[316]	SETTABLE 	R43 K185 R44 ; R43["DecoArea"] := R44
	364	[316]	SETTABLE 	R43 K165 K23 ; R43["Loader"] := nil
	365	[316]	SETTABLE 	R43 K120 K13 ; R43["IsLoading"] := false
	366	[316]	NEWTABLE 	R44 0 6 ; R44 := {}
	367	[316]	SETTABLE 	R44 K188 K189 ; R44["RoomLoaderIndex"] := 1.000000
	368	[316]	SETTABLE 	R44 K190 K189 ; R44["DecoLoaderIndex"] := 1.000000
	369	[316]	SETTABLE 	R44 K191 K189 ; R44["RoomCreationIndex"] := 1.000000
	370	[316]	SETTABLE 	R44 K192 K189 ; R44["DecoCreationIndex"] := 1.000000
	371	[316]	NEWTABLE 	R45 0 0 ; R45 := {}
	372	[316]	SETTABLE 	R44 K193 R45 ; R44["DecosLoaded"] := R45
	373	[316]	SETTABLE 	R44 K194 K13 ; R44["LastLoad"] := false
	374	[316]	SETTABLE 	R43 K187 R44 ; R43["LoaderProgress"] := R44
	375	[317]	NEWTABLE 	R44 0 3 ; R44 := {}
	376	[317]	SETTABLE 	R44 K165 K23 ; R44["Loader"] := nil
	377	[317]	SETTABLE 	R44 K120 K13 ; R44["IsLoading"] := false
	378	[317]	SETTABLE 	R44 K196 K13 ; R44["IsFishTank"] := false
	379	[318]	NEWTABLE 	R45 0 5 ; R45 := {}
	380	[318]	NEWTABLE 	R46 0 0 ; R46 := {}
	381	[318]	SETTABLE 	R45 K197 R46 ; R45["Figures"] := R46
	382	[318]	NEWTABLE 	R46 0 0 ; R46 := {}
	383	[318]	SETTABLE 	R45 K198 R46 ; R45["PresetInfos"] := R46
	384	[318]	NEWTABLE 	R46 0 0 ; R46 := {}
	385	[318]	SETTABLE 	R45 K199 R46 ; R45["PresetIds"] := R46
	386	[318]	NEWTABLE 	R46 0 0 ; R46 := {}
	387	[318]	SETTABLE 	R45 K200 R46 ; R45["EnemyFigures"] := R46
	388	[318]	NEWTABLE 	R46 0 0 ; R46 := {}
	389	[318]	SETTABLE 	R45 K201 R46 ; R45["EnemyTypes"] := R46
	390	[320]	NEWTABLE 	R46 0 2 ; R46 := {}
	391	[320]	SETTABLE 	R46 K165 K23 ; R46["Loader"] := nil
	392	[320]	SETTABLE 	R46 K120 K13 ; R46["IsLoading"] := false
	393	[321]	NEWTABLE 	R47 0 3 ; R47 := {}
	394	[321]	SETTABLE 	R47 K165 K23 ; R47["Loader"] := nil
	395	[321]	SETTABLE 	R47 K120 K13 ; R47["IsLoading"] := false
	396	[321]	NEWTABLE 	R48 0 0 ; R48 := {}
	397	[321]	SETTABLE 	R47 K202 R48 ; R47["Upgrades"] := R48
	398	[323]	NEWTABLE 	R48 0 5 ; R48 := {}
	399	[323]	SETTABLE 	R48 K203 K23 ; R48["movie"] := nil
	400	[323]	SETTABLE 	R48 K204 K23 ; R48["timerId"] := nil
	401	[323]	SETTABLE 	R48 K205 K206 ; R48["timeToCheckDelay"] := 0.200000
	402	[323]	SETTABLE 	R48 K207 K8 ; R48["timeOpen"] := 0.000000
	403	[323]	SETTABLE 	R48 K208 K209 ; R48["minimumDisplayTime"] := 2.000000
	404	[325]	LOADNIL  	R49 R50 ; R49 := R50 := nil
	405	[328]	NEWTABLE 	R51 0 8 ; R51 := {}
	406	[329]	SETTABLE 	R51 K210 K211 ; R51["REGULAR_CREDITS"] := "Credits"
	407	[330]	SETTABLE 	R51 K212 K213 ; R51["PREMIUM_CREDITS"] := "Platinum"
	408	[331]	SETTABLE 	R51 K214 K215 ; R51["PRIME_BUCKS"] := "PrimeBucks"
	409	[332]	SETTABLE 	R51 K216 K217 ; R51["PRIME_TOKENS"] := "PrimeTokens"
	410	[333]	SETTABLE 	R51 K218 K219 ; R51["STANDING"] := "Standing"
	411	[334]	SETTABLE 	R51 K220 K221 ; R51["AMBULAS_DATA"] := "AmbulasData"
	412	[335]	SETTABLE 	R51 K222 K223 ; R51["ITEMS"] := "Items"
	413	[336]	SETTABLE 	R51 K224 K225 ; R51["FOCUS_XP"] := "FocusXp"
	414	[339]	NEWTABLE 	R52 0 4 ; R52 := {}
	415	[340]	SETTABLE 	R52 K226 K8 ; R52["DEFAULT"] := 0.000000
	416	[341]	SETTABLE 	R52 K227 K189 ; R52["OVERRIDE"] := 1.000000
	417	[342]	SETTABLE 	R52 K228 K209 ; R52["QUEUE"] := 2.000000
	418	[343]	SETTABLE 	R52 K229 K4 ; R52["FORCE_QUEUE"] := 3.000000
	419	[346]	LOADK    	R53 := 1.000000
	420	[346]	SETGLOBALHASH	R53 K230 ; mRefreshHighPriorityMessages := R53
	421	[347]	LOADK    	R53 := 1.000000
	422	[347]	SETGLOBALHASH	R53 K231 ; mHighPriorityMessageDelay := R53
	423	[348]	OP_LOADBOOL	R53 0 0 ; R53 := false
	424	[348]	SETGLOBALHASH	R53 K232 ; mBoughtShipFeatureItem := R53
	425	[351]	LOADNIL  	R53 R56 ; R53 := R54 := R55 := R56 := nil
	426	[356]	OP_LOADBOOL	R57 0 0 ; R57 := false
	427	[358]	LOADNIL  	R58 R59 ; R58 := R59 := nil
	428	[362]	GETGLOBAL	R60 K45 ; R60 := 0x0469f296
	429	[362]	LOADK    	R61 K233 ; R61 := "TennoConRelay"
	430	[362]	CALL     	R60 2 2 ; R60 := R60(R61)
	431	[363]	GETGLOBAL	R61 K45 ; R61 := 0x0469f296
	432	[363]	LOADK    	R62 K234 ; R62 := "TennoConRelayB"
	433	[363]	CALL     	R61 2 2 ; R61 := R61(R62)
	434	[364]	LOADNIL  	R62 R62 ; R62 := nil
	435	[366]	OP_LOADBOOL	R63 0 0 ; R63 := false
	436	[367]	LOADK    	R64 := 0.000000
	437	[369]	NEWTABLE 	R65 0 7 ; R65 := {}
	438	[370]	NEWTABLE 	R66 0 1 ; R66 := {}
	439	[370]	GETGLOBAL	R67 K40 ; R67 := 0xb009bbc6
	440	[370]	LOADK    	R68 K238 ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanCorruptedAISpec"
	441	[370]	CALL     	R67 2 2 ; R67 := R67(R68)
	442	[370]	SETTABLE 	R66 K237 R67 ; R66["enemySpec"] := R67
	443	[370]	SETTABLE 	R65 K236 R66 ; R65[33.000000] := R66
	444	[371]	NEWTABLE 	R66 0 1 ; R66 := {}
	445	[371]	GETGLOBAL	R67 K40 ; R67 := 0xb009bbc6
	446	[371]	LOADK    	R68 K239 ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanExterminateSpec"
	447	[371]	CALL     	R67 2 2 ; R67 := R67(R68)
	448	[371]	SETTABLE 	R66 K237 R67 ; R66["enemySpec"] := R67
	449	[371]	SETTABLE 	R65 K189 R66 ; R65[1.000000] := R66
	450	[372]	NEWTABLE 	R66 0 1 ; R66 := {}
	451	[372]	GETGLOBAL	R67 K40 ; R67 := 0xb009bbc6
	452	[372]	LOADK    	R68 K240 ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanSurvival"
	453	[372]	CALL     	R67 2 2 ; R67 := R67(R68)
	454	[372]	SETTABLE 	R66 K237 R67 ; R66["enemySpec"] := R67
	455	[372]	SETTABLE 	R65 K209 R66 ; R65[2.000000] := R66
	456	[373]	NEWTABLE 	R66 0 1 ; R66 := {}
	457	[373]	GETGLOBAL	R67 K40 ; R67 := 0xb009bbc6
	458	[373]	LOADK    	R68 K242 ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanEndlessAssassinateSpec"
	459	[373]	CALL     	R67 2 2 ; R67 := R67(R68)
	460	[373]	SETTABLE 	R66 K237 R67 ; R66["enemySpec"] := R67
	461	[373]	SETTABLE 	R65 K241 R66 ; R65[8.000000] := R66
	462	[374]	NEWTABLE 	R66 0 1 ; R66 := {}
	463	[374]	GETGLOBAL	R67 K40 ; R67 := 0xb009bbc6
	464	[374]	LOADK    	R68 K243 ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanMobileDefenseSpec"
	465	[374]	CALL     	R67 2 2 ; R67 := R67(R68)
	466	[374]	SETTABLE 	R66 K237 R67 ; R66["enemySpec"] := R67
	467	[374]	SETTABLE 	R65 K2 R66 ; R65[9.000000] := R66
	468	[375]	NEWTABLE 	R66 0 1 ; R66 := {}
	469	[375]	GETGLOBAL	R67 K40 ; R67 := 0xb009bbc6
	470	[375]	LOADK    	R68 K240 ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanSurvival"
	471	[375]	CALL     	R67 2 2 ; R67 := R67(R68)
	472	[375]	SETTABLE 	R66 K237 R67 ; R66["enemySpec"] := R67
	473	[375]	SETTABLE 	R65 K244 R66 ; R65[34.000000] := R66
	474	[376]	NEWTABLE 	R66 0 1 ; R66 := {}
	475	[376]	GETGLOBAL	R67 K40 ; R67 := 0xb009bbc6
	476	[376]	LOADK    	R68 K242 ; R68 := "/Lotus/Types/Game/EnemySpecs/Zariman/CorpusZarimanEndlessAssassinateSpec"
	477	[376]	CALL     	R67 2 2 ; R67 := R67(R68)
	478	[376]	SETTABLE 	R66 K237 R67 ; R66["enemySpec"] := R67
	479	[376]	SETTABLE 	R65 K245 R66 ; R65[35.000000] := R66
	480	[380]	NEWTABLE 	R66 3 0 ; R66 := {}
	481	[381]	GETGLOBAL	R67 K45 ; R67 := 0x0469f296
	482	[381]	LOADK    	R68 K246 ; R68 := "DisplayWarframeEntity1"
	483	[381]	CALL     	R67 2 2 ; R67 := R67(R68)
	484	[382]	GETGLOBAL	R68 K45 ; R68 := 0x0469f296
	485	[382]	LOADK    	R69 K247 ; R69 := "DisplayWarframeEntity2"
	486	[382]	CALL     	R68 2 2 ; R68 := R68(R69)
	487	[383]	GETGLOBAL	R69 K45 ; R69 := 0x0469f296
	488	[383]	LOADK    	R70 K248 ; R70 := "DisplayWarframeEntity3"
	489	[383]	CALL     	R69 2 2 ; R69 := R69(R70)
	490	[384]	GETGLOBAL	R70 K45 ; R70 := 0x0469f296
	491	[384]	LOADK    	R71 K249 ; R71 := "DisplayWarframeEntity4"
	492	[384]	CALL     	R70 2 0 ; R70,... := R70(R71)
	493	[385]	SETLIST  	R66 0 1 ; R66[(1-1)*FPF+i] := R(66+i), 1 <= i <= 0
	494	[388]	GETGLOBAL	R67 K0 ; R67 := _T
	495	[388]	SETTABLE 	R67 K250 K23 ; R67["Notifications"] := nil
	496	[389]	GETGLOBAL	R67 K0 ; R67 := _T
	497	[389]	NEWTABLE 	R68 0 0 ; R68 := {}
	498	[389]	SETTABLE 	R67 K251 R68 ; R67["remoteSuitEntities"] := R68
	499	[391]	GETGLOBAL	R67 K0 ; R67 := _T
	500	[391]	SETTABLE 	R67 K252 K13 ; R67["ActiveQuestLoaded"] := false
	501	[393]	LOADNIL  	R67 R67 ; R67 := nil
	502	[396]	GETGLOBAL	R68 K0 ; R68 := _T
	503	[396]	SETTABLE 	R68 K253 K23 ; R68["NeedsGoalCheck"] := nil
	504	[401]	GETGLOBAL	R68 K45 ; R68 := 0x0469f296
	505	[401]	LOADK    	R69 K254 ; R69 := "PersonalQuartersRoom"
	506	[401]	CALL     	R68 2 2 ; R68 := R68(R69)
	507	[402]	GETGLOBAL	R69 K49 ; R69 := 0x7ed0a956
	508	[402]	LOADK    	R70 K255 ; R70 := "/Lotus/Types/Game/ActionFigurePlaceableAreaTrigger"
	509	[402]	CALL     	R69 2 2 ; R69 := R69(R70)
	510	[403]	GETGLOBAL	R70 K49 ; R70 := 0x7ed0a956
	511	[403]	LOADK    	R71 K256 ; R71 := "/Lotus/Types/Items/ShipDecos/Vignettes/Warframes/WarframeAFItem"
	512	[403]	CALL     	R70 2 2 ; R70 := R70(R71)
	513	[405]	GETGLOBAL	R71 K49 ; R71 := 0x7ed0a956
	514	[405]	LOADK    	R72 K257 ; R72 := "/Lotus/Types/Items/MiscItems/Elitium"
	515	[405]	CALL     	R71 2 2 ; R71 := R71(R72)
	516	[406]	GETGLOBAL	R72 K49 ; R72 := 0x7ed0a956
	517	[406]	LOADK    	R73 K258 ; R73 := "/Lotus/Types/Enemies/TennoReplicants/SyndicateAllies/HexisAllyAgentDefense"
	518	[406]	CALL     	R72 2 2 ; R72 := R72(R73)
	519	[408]	GETGLOBAL	R73 K49 ; R73 := 0x7ed0a956
	520	[408]	LOADK    	R74 K259 ; R74 := "/Lotus/Objects/Tenno/Props/Ships/Events/WFRollerFloofDeco"
	521	[408]	CALL     	R73 2 2 ; R73 := R73(R74)
	522	[451]	CLOSURE  	R74 0 ; R74 := closure(Function #1)
	523	[410]	SETGLOBAL	R74 K81 ; Shutdown := R74
	524	[473]	CLOSURE  	R74 1 ; R74 := closure(Function #2)
	525	[477]	CLOSURE  	R75 2 ; R75 := closure(Function #3)
	526	[475]	SETGLOBAL	R75 K260 ; PurchasePlatinumFailed := R75
	527	[527]	CLOSURE  	R75 3 ; R75 := closure(Function #4)
	528	[527]	MOVE     	R0 R5 ; R0 := R5
	529	[527]	MOVE     	R0 R4 ; R0 := R4
	530	[531]	CLOSURE  	R76 4 ; R76 := closure(Function #5)
	531	[531]	MOVE     	R0 R75 ; R0 := R75
	532	[529]	SETGLOBAL	R76 K261 ; OnPurchasePlatinum := R76
	533	[545]	CLOSURE  	R76 5 ; R76 := closure(Function #6)
	534	[545]	MOVE     	R0 R75 ; R0 := R75
	535	[533]	SETGLOBAL	R76 K262 ; PurchasePlatinumOk := R76
	536	[569]	CLOSURE  	R76 6 ; R76 := closure(Function #7)
	537	[569]	MOVE     	R0 R5 ; R0 := R5
	538	[569]	MOVE     	R0 R4 ; R0 := R4
	539	[573]	CLOSURE  	R77 7 ; R77 := closure(Function #8)
	540	[573]	MOVE     	R0 R76 ; R0 := R76
	541	[571]	SETGLOBAL	R77 K263 ; PurchasePlatinumWithDialog := R77
	542	[589]	CLOSURE  	R77 8 ; R77 := closure(Function #9)
	543	[589]	MOVE     	R0 R4 ; R0 := R4
	544	[576]	SETGLOBAL	R77 K264 ; PurchasePrimeAccessPS4 := R77
	545	[637]	CLOSURE  	R77 9 ; R77 := closure(Function #10)
	546	[637]	MOVE     	R0 R51 ; R0 := R51
	547	[637]	MOVE     	R0 R5 ; R0 := R5
	548	[637]	MOVE     	R0 R4 ; R0 := R4
	549	[645]	CLOSURE  	R78 10 ; R78 := closure(Function #11)
	550	[645]	MOVE     	R0 R26 ; R0 := R26
	551	[645]	MOVE     	R0 R77 ; R0 := R77
	552	[645]	MOVE     	R0 R4 ; R0 := R4
	553	[639]	SETGLOBAL	R78 K265 ; ShowInsufficientFundsPopup := R78
	554	[657]	CLOSURE  	R78 11 ; R78 := closure(Function #12)
	555	[657]	MOVE     	R0 R5 ; R0 := R5
	556	[657]	MOVE     	R0 R4 ; R0 := R4
	557	[682]	CLOSURE  	R79 12 ; R79 := closure(Function #13)
	558	[717]	CLOSURE  	R80 13 ; R80 := closure(Function #14)
	559	[1031]	CLOSURE  	R81 14 ; R81 := closure(Function #15)
	560	[1031]	MOVE     	R0 R5 ; R0 := R5
	561	[1031]	MOVE     	R0 R51 ; R0 := R51
	562	[1031]	MOVE     	R0 R79 ; R0 := R79
	563	[1031]	MOVE     	R0 R80 ; R0 := R80
	564	[1040]	CLOSURE  	R82 15 ; R82 := closure(Function #16)
	565	[1040]	MOVE     	R0 R81 ; R0 := R81
	566	[1062]	CLOSURE  	R83 16 ; R83 := closure(Function #17)
	567	[1062]	MOVE     	R0 R5 ; R0 := R5
	568	[1042]	SETGLOBAL	R83 K266 ; OnSaveLoadOutComplete := R83
	569	[1070]	CLOSURE  	R83 17 ; R83 := closure(Function #18)
	570	[1064]	SETGLOBAL	R83 K267 ; AddToGear := R83
	571	[1086]	CLOSURE  	R83 18 ; R83 := closure(Function #19)
	572	[1086]	MOVE     	R0 R26 ; R0 := R26
	573	[1086]	MOVE     	R0 R4 ; R0 := R4
	574	[1216]	CLOSURE  	R84 19 ; R84 := closure(Function #20)
	575	[1216]	MOVE     	R0 R51 ; R0 := R51
	576	[1216]	MOVE     	R0 R4 ; R0 := R4
	577	[1216]	MOVE     	R0 R5 ; R0 := R5
	578	[1241]	CLOSURE  	R85 20 ; R85 := closure(Function #21)
	579	[1241]	MOVE     	R0 R54 ; R0 := R54
	580	[1241]	MOVE     	R0 R4 ; R0 := R4
	581	[1241]	MOVE     	R0 R74 ; R0 := R74
	582	[1218]	SETGLOBAL	R85 K268 ; OnPurchaseSlotResult := R85
	583	[1276]	CLOSURE  	R85 21 ; R85 := closure(Function #22)
	584	[1276]	MOVE     	R0 R77 ; R0 := R77
	585	[1276]	MOVE     	R0 R51 ; R0 := R51
	586	[1276]	MOVE     	R0 R54 ; R0 := R54
	587	[1243]	SETGLOBAL	R85 K269 ; ConfirmSlotPurchase := R85
	588	[1288]	CLOSURE  	R85 22 ; R85 := closure(Function #23)
	589	[1288]	MOVE     	R0 R5 ; R0 := R5
	590	[1288]	MOVE     	R0 R4 ; R0 := R4
	591	[1292]	CLOSURE  	R86 23 ; R86 := closure(Function #24)
	592	[1292]	MOVE     	R0 R5 ; R0 := R5
	593	[1290]	SETGLOBAL	R86 K270 ; OnInvalidBinError := R86
	594	[1314]	CLOSURE  	R86 24 ; R86 := closure(Function #25)
	595	[1314]	MOVE     	R0 R4 ; R0 := R4
	596	[1478]	CLOSURE  	R87 25 ; R87 := closure(Function #26)
	597	[1478]	MOVE     	R0 R5 ; R0 := R5
	598	[1478]	MOVE     	R0 R78 ; R0 := R78
	599	[1478]	MOVE     	R0 R74 ; R0 := R74
	600	[1478]	MOVE     	R0 R86 ; R0 := R86
	601	[1478]	MOVE     	R0 R70 ; R0 := R70
	602	[1478]	MOVE     	R0 R4 ; R0 := R4
	603	[1478]	MOVE     	R0 R51 ; R0 := R51
	604	[1478]	MOVE     	R0 R77 ; R0 := R77
	605	[1478]	MOVE     	R0 R83 ; R0 := R83
	606	[1478]	MOVE     	R0 R85 ; R0 := R85
	607	[1478]	MOVE     	R0 R84 ; R0 := R84
	608	[1482]	CLOSURE  	R88 26 ; R88 := closure(Function #27)
	609	[1482]	MOVE     	R0 R87 ; R0 := R87
	610	[1480]	SETGLOBAL	R88 K271 ; CheckPurchaseRequirements := R88
	611	[1561]	CLOSURE  	R88 27 ; R88 := closure(Function #28)
	612	[1561]	MOVE     	R0 R82 ; R0 := R82
	613	[1561]	MOVE     	R0 R51 ; R0 := R51
	614	[1561]	MOVE     	R0 R4 ; R0 := R4
	615	[1561]	MOVE     	R0 R5 ; R0 := R5
	616	[1561]	MOVE     	R0 R83 ; R0 := R83
	617	[1561]	MOVE     	R0 R87 ; R0 := R87
	618	[1572]	CLOSURE  	R89 28 ; R89 := closure(Function #29)
	619	[1572]	MOVE     	R0 R88 ; R0 := R88
	620	[1563]	SETGLOBAL	R89 K272 ; ShowUpgradeDurabilityPopupForGifting := R89
	621	[1588]	CLOSURE  	R89 29 ; R89 := closure(Function #30)
	622	[1588]	MOVE     	R0 R83 ; R0 := R83
	623	[1575]	SETGLOBAL	R89 K273 ; ConfirmCurrency := R89
	624	[1592]	CLOSURE  	R89 30 ; R89 := closure(Function #31)
	625	[1590]	SETGLOBAL	R89 K274 ; GetScreenStackSize := R89
	626	[1596]	CLOSURE  	R89 31 ; R89 := closure(Function #32)
	627	[1601]	CLOSURE  	R90 32 ; R90 := closure(Function #33)
	628	[1601]	MOVE     	R0 R89 ; R0 := R89
	629	[1606]	CLOSURE  	R91 33 ; R91 := closure(Function #34)
	630	[1606]	MOVE     	R0 R89 ; R0 := R89
	631	[1617]	CLOSURE  	R92 34 ; R92 := closure(Function #35)
	632	[1622]	CLOSURE  	R93 35 ; R93 := closure(Function #36)
	633	[1804]	CLOSURE  	R94 36 ; R94 := closure(Function #37)
	634	[1804]	MOVE     	R0 R5 ; R0 := R5
	635	[1804]	MOVE     	R0 R92 ; R0 := R92
	636	[1804]	MOVE     	R0 R25 ; R0 := R25
	637	[1804]	MOVE     	R0 R93 ; R0 := R93
	638	[1804]	MOVE     	R0 R17 ; R0 := R17
	639	[1804]	MOVE     	R0 R37 ; R0 := R37
	640	[1808]	CLOSURE  	R95 37 ; R95 := closure(Function #38)
	641	[1806]	SETGLOBAL	R95 K275 ; IsMenuSuitAvatarShowing := R95
	642	[1812]	CLOSURE  	R95 38 ; R95 := closure(Function #39)
	643	[1812]	MOVE     	R0 R94 ; R0 := R94
	644	[1810]	SETGLOBAL	R95 K276 ; SetupMenuSuit := R95
	645	[1819]	CLOSURE  	R95 39 ; R95 := closure(Function #40)
	646	[1819]	MOVE     	R0 R36 ; R0 := R36
	647	[1833]	CLOSURE  	R96 40 ; R96 := closure(Function #41)
	648	[1833]	MOVE     	R0 R95 ; R0 := R95
	649	[1833]	MOVE     	R0 R2 ; R0 := R2
	650	[1833]	MOVE     	R0 R5 ; R0 := R5
	651	[1821]	SETGLOBAL	R96 K277 ; OnInitialInventorySync := R96
	652	[1845]	CLOSURE  	R96 41 ; R96 := closure(Function #42)
	653	[1835]	SETGLOBAL	R96 K278 ; OnInboxSync := R96
	654	[1851]	CLOSURE  	R96 42 ; R96 := closure(Function #43)
	655	[1851]	MOVE     	R0 R4 ; R0 := R4
	656	[1847]	SETGLOBAL	R96 K279 ; OnSyncTwitchDrops := R96
	657	[1857]	CLOSURE  	R96 43 ; R96 := closure(Function #44)
	658	[1857]	MOVE     	R0 R4 ; R0 := R4
	659	[1853]	SETGLOBAL	R96 K280 ; OnSyncAmazonEntitlemments := R96
	660	[1860]	CLOSURE  	R96 44 ; R96 := closure(Function #45)
	661	[1859]	SETGLOBAL	R96 K281 ; OnLoginRewardSync := R96
	662	[1877]	CLOSURE  	R96 45 ; R96 := closure(Function #46)
	663	[1924]	CLOSURE  	R97 46 ; R97 := closure(Function #47)
	664	[1924]	MOVE     	R0 R5 ; R0 := R5
	665	[1924]	MOVE     	R0 R90 ; R0 := R90
	666	[1924]	MOVE     	R0 R94 ; R0 := R94
	667	[1952]	CLOSURE  	R98 47 ; R98 := closure(Function #48)
	668	[1952]	MOVE     	R0 R55 ; R0 := R55
	669	[1956]	CLOSURE  	R99 48 ; R99 := closure(Function #49)
	670	[1979]	CLOSURE  	R100 49 ; R100 := closure(Function #50)
	671	[1979]	MOVE     	R0 R4 ; R0 := R4
	672	[1979]	MOVE     	R0 R5 ; R0 := R5
	673	[1983]	CLOSURE  	R101 50 ; R101 := closure(Function #51)
	674	[1983]	MOVE     	R0 R100 ; R0 := R100
	675	[1981]	SETGLOBAL	R101 K282 ; PlayCameraTransition := R101
	676	[2012]	CLOSURE  	R101 51 ; R101 := closure(Function #52)
	677	[2016]	CLOSURE  	R102 52 ; R102 := closure(Function #53)
	678	[2016]	MOVE     	R0 R101 ; R0 := R101
	679	[2014]	SETGLOBAL	R102 K283 ; ClearCurrentCameraSpot := R102
	680	[2024]	CLOSURE  	R102 53 ; R102 := closure(Function #54)
	681	[2024]	MOVE     	R0 R28 ; R0 := R28
	682	[2028]	CLOSURE  	R103 54 ; R103 := closure(Function #55)
	683	[2028]	MOVE     	R0 R102 ; R0 := R102
	684	[2026]	SETGLOBAL	R103 K284 ; FadeInOut := R103
	685	[2144]	CLOSURE  	R103 55 ; R103 := closure(Function #56)
	686	[2144]	MOVE     	R0 R30 ; R0 := R30
	687	[2168]	CLOSURE  	R54 56 ; R54 := closure(Function #57)
	688	[2168]	MOVE     	R0 R4 ; R0 := R4
	689	[2172]	CLOSURE  	R104 57 ; R104 := closure(Function #58)
	690	[2172]	MOVE     	R0 R54 ; R0 := R54
	691	[2170]	SETGLOBAL	R104 K285 ; ShowBlockingMessage := R104
	692	[2176]	CLOSURE  	R104 58 ; R104 := closure(Function #59)
	693	[2176]	MOVE     	R0 R53 ; R0 := R53
	694	[2174]	SETGLOBAL	R104 K286 ; NotifyWorldStateChanged := R104
	695	[2183]	CLOSURE  	R104 59 ; R104 := closure(Function #60)
	696	[2183]	MOVE     	R0 R54 ; R0 := R54
	697	[2191]	CLOSURE  	R105 60 ; R105 := closure(Function #61)
	698	[2195]	CLOSURE  	R106 61 ; R106 := closure(Function #62)
	699	[2195]	MOVE     	R0 R105 ; R0 := R105
	700	[2193]	SETGLOBAL	R106 K287 ; SetGlobalLobbyMessage := R106
	701	[2205]	CLOSURE  	R106 62 ; R106 := closure(Function #63)
	702	[2238]	CLOSURE  	R107 63 ; R107 := closure(Function #64)
	703	[2257]	CLOSURE  	R108 64 ; R108 := closure(Function #65)
	704	[2257]	MOVE     	R0 R5 ; R0 := R5
	705	[2257]	MOVE     	R0 R35 ; R0 := R35
	706	[2298]	CLOSURE  	R109 65 ; R109 := closure(Function #66)
	707	[2298]	MOVE     	R0 R5 ; R0 := R5
	708	[2298]	MOVE     	R0 R35 ; R0 := R35
	709	[2302]	CLOSURE  	R110 66 ; R110 := closure(Function #67)
	710	[2302]	MOVE     	R0 R34 ; R0 := R34
	711	[2300]	SETGLOBAL	R110 K288 ; QuestCompleted := R110
	712	[2306]	CLOSURE  	R110 67 ; R110 := closure(Function #68)
	713	[2306]	MOVE     	R0 R5 ; R0 := R5
	714	[2310]	CLOSURE  	R111 68 ; R111 := closure(Function #69)
	715	[2310]	MOVE     	R0 R110 ; R0 := R110
	716	[2308]	SETGLOBAL	R111 K289 ; CheckQuests := R111
	717	[2323]	CLOSURE  	R111 69 ; R111 := closure(Function #70)
	718	[2323]	MOVE     	R0 R22 ; R0 := R22
	719	[2521]	CLOSURE  	R112 70 ; R112 := closure(Function #71)
	720	[2521]	MOVE     	R0 R4 ; R0 := R4
	721	[2521]	MOVE     	R0 R47 ; R0 := R47
	722	[2521]	MOVE     	R0 R111 ; R0 := R111
	723	[2521]	MOVE     	R0 R5 ; R0 := R5
	724	[2521]	MOVE     	R0 R107 ; R0 := R107
	725	[2665]	CLOSURE  	R113 71 ; R113 := closure(Function #72)
	726	[2665]	MOVE     	R0 R5 ; R0 := R5
	727	[2665]	MOVE     	R0 R30 ; R0 := R30
	728	[2665]	MOVE     	R0 R6 ; R0 := R6
	729	[2665]	MOVE     	R0 R4 ; R0 := R4
	730	[2665]	MOVE     	R0 R0 ; R0 := R0
	731	[2665]	MOVE     	R0 R1 ; R0 := R1
	732	[2797]	CLOSURE  	R114 72 ; R114 := closure(Function #73)
	733	[2797]	MOVE     	R0 R5 ; R0 := R5
	734	[2797]	MOVE     	R0 R30 ; R0 := R30
	735	[2797]	MOVE     	R0 R4 ; R0 := R4
	736	[2797]	MOVE     	R0 R72 ; R0 := R72
	737	[2797]	MOVE     	R0 R71 ; R0 := R71
	738	[2902]	CLOSURE  	R115 73 ; R115 := closure(Function #74)
	739	[2902]	MOVE     	R0 R5 ; R0 := R5
	740	[2902]	MOVE     	R0 R30 ; R0 := R30
	741	[2902]	MOVE     	R0 R4 ; R0 := R4
	742	[3026]	CLOSURE  	R116 74 ; R116 := closure(Function #75)
	743	[3026]	MOVE     	R0 R5 ; R0 := R5
	744	[3026]	MOVE     	R0 R4 ; R0 := R4
	745	[3026]	MOVE     	R0 R2 ; R0 := R2
	746	[3038]	CLOSURE  	R117 75 ; R117 := closure(Function #76)
	747	[3038]	MOVE     	R0 R53 ; R0 := R53
	748	[3052]	CLOSURE  	R118 76 ; R118 := closure(Function #77)
	749	[3052]	MOVE     	R0 R62 ; R0 := R62
	750	[3040]	SETGLOBAL	R118 K290 ; OnClaimRelayTasksComplete := R118
	751	[3062]	CLOSURE  	R118 77 ; R118 := closure(Function #78)
	752	[3062]	MOVE     	R0 R59 ; R0 := R59
	753	[3074]	CLOSURE  	R119 78 ; R119 := closure(Function #79)
	754	[3074]	MOVE     	R0 R119 ; R0 := R119
	755	[3134]	CLOSURE  	R120 79 ; R120 := closure(Function #80)
	756	[3134]	MOVE     	R0 R20 ; R0 := R20
	757	[3134]	MOVE     	R0 R5 ; R0 := R5
	758	[3134]	MOVE     	R0 R119 ; R0 := R119
	759	[3134]	MOVE     	R0 R4 ; R0 := R4
	760	[3185]	CLOSURE  	R121 80 ; R121 := closure(Function #81)
	761	[3185]	MOVE     	R0 R65 ; R0 := R65
	762	[3759]	CLOSURE  	R56 81 ; R56 := closure(Function #82)
	763	[3759]	MOVE     	R0 R59 ; R0 := R59
	764	[3759]	MOVE     	R0 R5 ; R0 := R5
	765	[3759]	MOVE     	R0 R117 ; R0 := R117
	766	[3759]	MOVE     	R0 R19 ; R0 := R19
	767	[3759]	MOVE     	R0 R11 ; R0 := R11
	768	[3759]	MOVE     	R0 R18 ; R0 := R18
	769	[3759]	MOVE     	R0 R60 ; R0 := R60
	770	[3759]	MOVE     	R0 R4 ; R0 := R4
	771	[3759]	MOVE     	R0 R16 ; R0 := R16
	772	[3759]	MOVE     	R0 R8 ; R0 := R8
	773	[3759]	MOVE     	R0 R9 ; R0 := R9
	774	[3759]	MOVE     	R0 R10 ; R0 := R10
	775	[3759]	MOVE     	R0 R115 ; R0 := R115
	776	[3759]	MOVE     	R0 R113 ; R0 := R113
	777	[3759]	MOVE     	R0 R114 ; R0 := R114
	778	[3759]	MOVE     	R0 R116 ; R0 := R116
	779	[3759]	MOVE     	R0 R118 ; R0 := R118
	780	[3759]	MOVE     	R0 R120 ; R0 := R120
	781	[3759]	MOVE     	R0 R121 ; R0 := R121
	782	[3763]	CLOSURE  	R122 82 ; R122 := closure(Function #83)
	783	[3763]	MOVE     	R0 R4 ; R0 := R4
	784	[3767]	CLOSURE  	R123 83 ; R123 := closure(Function #84)
	785	[3767]	MOVE     	R0 R122 ; R0 := R122
	786	[3765]	SETGLOBAL	R123 K291 ; ShowRequireExitMessage := R123
	787	[3782]	CLOSURE  	R123 84 ; R123 := closure(Function #85)
	788	[3782]	MOVE     	R0 R119 ; R0 := R119
	789	[3769]	SETGLOBAL	R123 K292 ; RequiemMovieDone := R123
	790	[3801]	CLOSURE  	R123 85 ; R123 := closure(Function #86)
	791	[3801]	MOVE     	R0 R5 ; R0 := R5
	792	[3801]	MOVE     	R0 R120 ; R0 := R120
	793	[3784]	SETGLOBAL	R123 K293 ; OnInventorySyncCallback := R123
	794	[3843]	CLOSURE  	R123 86 ; R123 := closure(Function #87)
	795	[3843]	MOVE     	R0 R5 ; R0 := R5
	796	[3843]	MOVE     	R0 R32 ; R0 := R32
	797	[3843]	MOVE     	R0 R31 ; R0 := R31
	798	[3843]	MOVE     	R0 R122 ; R0 := R122
	799	[3843]	MOVE     	R0 R33 ; R0 := R33
	800	[3843]	MOVE     	R0 R56 ; R0 := R56
	801	[3803]	SETGLOBAL	R123 K294 ; OnSyncWorldState := R123
	802	[3858]	CLOSURE  	R123 87 ; R123 := closure(Function #88)
	803	[3858]	MOVE     	R0 R30 ; R0 := R30
	804	[3868]	CLOSURE  	R124 88 ; R124 := closure(Function #89)
	805	[3873]	CLOSURE  	R125 89 ; R125 := closure(Function #90)
	806	[3873]	MOVE     	R0 R4 ; R0 := R4
	807	[3873]	MOVE     	R0 R123 ; R0 := R123
	808	[3870]	SETGLOBAL	R125 K295 ; RegisterWorldStateCallback := R125
	809	[3910]	CLOSURE  	R125 90 ; R125 := closure(Function #91)
	810	[3910]	MOVE     	R0 R52 ; R0 := R52
	811	[3910]	MOVE     	R0 R39 ; R0 := R39
	812	[3916]	CLOSURE  	R53 91 ; R53 := closure(Function #92)
	813	[3916]	MOVE     	R0 R56 ; R0 := R56
	814	[3921]	CLOSURE  	R126 92 ; R126 := closure(Function #93)
	815	[3921]	MOVE     	R0 R40 ; R0 := R40
	816	[3935]	CLOSURE  	R127 93 ; R127 := closure(Function #94)
	817	[3935]	MOVE     	R0 R38 ; R0 := R38
	818	[3941]	CLOSURE  	R128 94 ; R128 := closure(Function #95)
	819	[3941]	MOVE     	R0 R127 ; R0 := R127
	820	[3950]	CLOSURE  	R129 95 ; R129 := closure(Function #96)
	821	[3950]	MOVE     	R0 R128 ; R0 := R128
	822	[3950]	MOVE     	R0 R38 ; R0 := R38
	823	[3943]	SETGLOBAL	R129 K296 ; ToggleOmegaDiorama := R129
	824	[3965]	CLOSURE  	R129 96 ; R129 := closure(Function #97)
	825	[3965]	MOVE     	R0 R34 ; R0 := R34
	826	[3965]	MOVE     	R0 R108 ; R0 := R108
	827	[4012]	CLOSURE  	R130 97 ; R130 := closure(Function #98)
	828	[4012]	MOVE     	R0 R5 ; R0 := R5
	829	[4115]	CLOSURE  	R131 98 ; R131 := closure(Function #99)
	830	[4115]	MOVE     	R0 R4 ; R0 := R4
	831	[4014]	SETGLOBAL	R131 K297 ; OnRerollsCompleted := R131
	832	[4123]	CLOSURE  	R131 99 ; R131 := closure(Function #100)
	833	[4123]	MOVE     	R0 R38 ; R0 := R38
	834	[4117]	SETGLOBAL	R131 K298 ; OnFinishedShowingIdentifiedOmegas := R131
	835	[4225]	CLOSURE  	R131 100 ; R131 := closure(Function #101)
	836	[4225]	MOVE     	R0 R34 ; R0 := R34
	837	[4225]	MOVE     	R0 R109 ; R0 := R109
	838	[4225]	MOVE     	R0 R36 ; R0 := R36
	839	[4225]	MOVE     	R0 R128 ; R0 := R128
	840	[4239]	CLOSURE  	R132 101 ; R132 := closure(Function #102)
	841	[4239]	MOVE     	R0 R37 ; R0 := R37
	842	[4239]	MOVE     	R0 R34 ; R0 := R34
	843	[4239]	MOVE     	R0 R109 ; R0 := R109
	844	[4239]	MOVE     	R0 R12 ; R0 := R12
	845	[4323]	CLOSURE  	R133 102 ; R133 := closure(Function #103)
	846	[4323]	MOVE     	R0 R4 ; R0 := R4
	847	[4323]	MOVE     	R0 R5 ; R0 := R5
	848	[4323]	MOVE     	R0 R97 ; R0 := R97
	849	[4323]	MOVE     	R0 R93 ; R0 := R93
	850	[4323]	MOVE     	R0 R94 ; R0 := R94
	851	[4323]	MOVE     	R0 R3 ; R0 := R3
	852	[4323]	MOVE     	R0 R103 ; R0 := R103
	853	[4323]	MOVE     	R0 R54 ; R0 := R54
	854	[4371]	CLOSURE  	R134 103 ; R134 := closure(Function #104)
	855	[4371]	MOVE     	R0 R5 ; R0 := R5
	856	[4400]	CLOSURE  	R135 104 ; R135 := closure(Function #105)
	857	[4400]	MOVE     	R0 R5 ; R0 := R5
	858	[4400]	MOVE     	R0 R134 ; R0 := R134
	859	[4405]	CLOSURE  	R136 105 ; R136 := closure(Function #106)
	860	[4409]	CLOSURE  	R137 106 ; R137 := closure(Function #107)
	861	[4409]	MOVE     	R0 R136 ; R0 := R136
	862	[4407]	SETGLOBAL	R137 K299 ; ShowFragmentScreen := R137
	863	[4413]	CLOSURE  	R137 107 ; R137 := closure(Function #108)
	864	[4417]	CLOSURE  	R138 108 ; R138 := closure(Function #109)
	865	[4417]	MOVE     	R0 R137 ; R0 := R137
	866	[4415]	SETGLOBAL	R138 K300 ; ShowActionFigureScreen := R138
	867	[4421]	CLOSURE  	R138 109 ; R138 := closure(Function #110)
	868	[4425]	CLOSURE  	R139 110 ; R139 := closure(Function #111)
	869	[4425]	MOVE     	R0 R138 ; R0 := R138
	870	[4423]	SETGLOBAL	R139 K301 ; ShowLightCustScreen := R139
	871	[4665]	CLOSURE  	R139 111 ; R139 := closure(Function #112)
	872	[4665]	MOVE     	R0 R5 ; R0 := R5
	873	[4665]	MOVE     	R0 R73 ; R0 := R73
	874	[4665]	MOVE     	R0 R24 ; R0 := R24
	875	[4665]	MOVE     	R0 R45 ; R0 := R45
	876	[4665]	MOVE     	R0 R136 ; R0 := R136
	877	[4665]	MOVE     	R0 R137 ; R0 := R137
	878	[4665]	MOVE     	R0 R138 ; R0 := R138
	879	[4665]	MOVE     	R0 R68 ; R0 := R68
	880	[4665]	MOVE     	R0 R69 ; R0 := R69
	881	[4665]	MOVE     	R0 R23 ; R0 := R23
	882	[4665]	MOVE     	R0 R67 ; R0 := R67
	883	[4715]	CLOSURE  	R140 112 ; R140 := closure(Function #113)
	884	[4715]	MOVE     	R0 R4 ; R0 := R4
	885	[4715]	MOVE     	R0 R44 ; R0 := R44
	886	[4715]	MOVE     	R0 R14 ; R0 := R14
	887	[4721]	CLOSURE  	R141 113 ; R141 := closure(Function #114)
	888	[4721]	MOVE     	R0 R140 ; R0 := R140
	889	[4721]	MOVE     	R0 R44 ; R0 := R44
	890	[4717]	SETGLOBAL	R141 K302 ; OnVignetteStreamed := R141
	891	[4726]	CLOSURE  	R141 114 ; R141 := closure(Function #115)
	892	[4723]	SETGLOBAL	R141 K303 ; OnVignetteRemoved := R141
	893	[4747]	CLOSURE  	R141 115 ; R141 := closure(Function #116)
	894	[4747]	MOVE     	R0 R14 ; R0 := R14
	895	[4747]	MOVE     	R0 R140 ; R0 := R140
	896	[4753]	CLOSURE  	R142 116 ; R142 := closure(Function #117)
	897	[4753]	MOVE     	R0 R39 ; R0 := R39
	898	[4753]	MOVE     	R0 R13 ; R0 := R13
	899	[4763]	CLOSURE  	R143 117 ; R143 := closure(Function #118)
	900	[4813]	CLOSURE  	R144 118 ; R144 := closure(Function #119)
	901	[4813]	MOVE     	R0 R5 ; R0 := R5
	902	[4843]	CLOSURE  	R145 119 ; R145 := closure(Function #120)
	903	[4843]	MOVE     	R0 R144 ; R0 := R144
	904	[4815]	SETGLOBAL	R145 K304 ; OnHostFavouriteWarframeUpdated := R145
	905	[4860]	CLOSURE  	R145 120 ; R145 := closure(Function #121)
	906	[4860]	MOVE     	R0 R144 ; R0 := R144
	907	[4869]	CLOSURE  	R146 121 ; R146 := closure(Function #122)
	908	[4869]	MOVE     	R0 R145 ; R0 := R145
	909	[4862]	SETGLOBAL	R146 K305 ; UpdateShipFavouriteWarframe := R146
	910	[4896]	CLOSURE  	R146 122 ; R146 := closure(Function #123)
	911	[4896]	MOVE     	R0 R66 ; R0 := R66
	912	[4896]	MOVE     	R0 R144 ; R0 := R144
	913	[4905]	CLOSURE  	R147 123 ; R147 := closure(Function #124)
	914	[4905]	MOVE     	R0 R146 ; R0 := R146
	915	[4898]	SETGLOBAL	R147 K306 ; UpdateApartmentDisplayWarframe := R147
	916	[4941]	CLOSURE  	R147 124 ; R147 := closure(Function #125)
	917	[4945]	CLOSURE  	R148 125 ; R148 := closure(Function #126)
	918	[4945]	MOVE     	R0 R147 ; R0 := R147
	919	[4943]	SETGLOBAL	R148 K307 ; CreateHelminthSuitLoader := R148
	920	[4996]	CLOSURE  	R148 126 ; R148 := closure(Function #127)
	921	[4996]	MOVE     	R0 R21 ; R0 := R21
	922	[5013]	CLOSURE  	R149 127 ; R149 := closure(Function #128)
	923	[5037]	CLOSURE  	R150 128 ; R150 := closure(Function #129)
	924	[5037]	MOVE     	R0 R149 ; R0 := R149
	925	[5041]	CLOSURE  	R151 129 ; R151 := closure(Function #130)
	926	[5039]	SETGLOBAL	R151 K308 ; FriendRequestReceived := R151
	927	[5058]	CLOSURE  	R151 130 ; R151 := closure(Function #131)
	928	[5058]	MOVE     	R0 R4 ; R0 := R4
	929	[5043]	SETGLOBAL	R151 K309 ; FriendNotificationSelected := R151
	930	[5072]	CLOSURE  	R151 131 ; R151 := closure(Function #132)
	931	[5072]	MOVE     	R0 R149 ; R0 := R149
	932	[5060]	SETGLOBAL	R151 K310 ; FriendRequestOptionChosen := R151
	933	[5079]	CLOSURE  	R151 132 ; R151 := closure(Function #133)
	934	[5079]	MOVE     	R0 R4 ; R0 := R4
	935	[5074]	SETGLOBAL	R151 K311 ; OnGetFriendsResult := R151
	936	[5092]	CLOSURE  	R151 133 ; R151 := closure(Function #134)
	937	[5092]	MOVE     	R0 R4 ; R0 := R4
	938	[5096]	CLOSURE  	R152 134 ; R152 := closure(Function #135)
	939	[5096]	MOVE     	R0 R151 ; R0 := R151
	940	[5094]	SETGLOBAL	R152 K312 ; OnConfirmFriendResult := R152
	941	[5100]	CLOSURE  	R152 135 ; R152 := closure(Function #136)
	942	[5100]	MOVE     	R0 R151 ; R0 := R151
	943	[5098]	SETGLOBAL	R152 K313 ; OnRemoveFriendResult := R152
	944	[5107]	CLOSURE  	R152 136 ; R152 := closure(Function #137)
	945	[5107]	MOVE     	R0 R4 ; R0 := R4
	946	[5105]	SETGLOBAL	R152 K314 ; OnLeaveDojoSquadDone := R152
	947	[5229]	CLOSURE  	R152 137 ; R152 := closure(Function #138)
	948	[5229]	MOVE     	R0 R58 ; R0 := R58
	949	[5229]	MOVE     	R0 R5 ; R0 := R5
	950	[5229]	MOVE     	R0 R19 ; R0 := R19
	951	[5229]	MOVE     	R0 R7 ; R0 := R7
	952	[5288]	CLOSURE  	R153 138 ; R153 := closure(Function #139)
	953	[5288]	MOVE     	R0 R5 ; R0 := R5
	954	[5312]	CLOSURE  	R154 139 ; R154 := closure(Function #140)
	955	[5312]	MOVE     	R0 R153 ; R0 := R153
	956	[5330]	CLOSURE  	R155 140 ; R155 := closure(Function #141)
	957	[5330]	MOVE     	R0 R15 ; R0 := R15
	958	[5381]	CLOSURE  	R156 141 ; R156 := closure(Function #142)
	959	[5381]	MOVE     	R0 R15 ; R0 := R15
	960	[5395]	CLOSURE  	R157 142 ; R157 := closure(Function #143)
	961	[5395]	MOVE     	R0 R15 ; R0 := R15
	962	[5395]	MOVE     	R0 R155 ; R0 := R155
	963	[5395]	MOVE     	R0 R156 ; R0 := R156
	964	[5399]	CLOSURE  	R158 143 ; R158 := closure(Function #144)
	965	[5399]	MOVE     	R0 R157 ; R0 := R157
	966	[5397]	SETGLOBAL	R158 K315 ; StyleChangedCallback := R158
	967	[5791]	CLOSURE  	R158 144 ; R158 := closure(Function #145)
	968	[5791]	MOVE     	R0 R157 ; R0 := R157
	969	[5791]	MOVE     	R0 R42 ; R0 := R42
	970	[5791]	MOVE     	R0 R139 ; R0 := R139
	971	[5791]	MOVE     	R0 R5 ; R0 := R5
	972	[5791]	MOVE     	R0 R43 ; R0 := R43
	973	[5791]	MOVE     	R0 R47 ; R0 := R47
	974	[5791]	MOVE     	R0 R4 ; R0 := R4
	975	[5791]	MOVE     	R0 R44 ; R0 := R44
	976	[5791]	MOVE     	R0 R141 ; R0 := R141
	977	[5791]	MOVE     	R0 R148 ; R0 := R148
	978	[5791]	MOVE     	R0 R46 ; R0 := R46
	979	[5791]	MOVE     	R0 R140 ; R0 := R140
	980	[5791]	MOVE     	R0 R110 ; R0 := R110
	981	[5791]	MOVE     	R0 R63 ; R0 := R63
	982	[5791]	MOVE     	R0 R30 ; R0 := R30
	983	[5791]	MOVE     	R0 R94 ; R0 := R94
	984	[5791]	MOVE     	R0 R97 ; R0 := R97
	985	[5791]	MOVE     	R0 R98 ; R0 := R98
	986	[5791]	MOVE     	R0 R112 ; R0 := R112
	987	[5791]	MOVE     	R0 R133 ; R0 := R133
	988	[5791]	MOVE     	R0 R143 ; R0 := R143
	989	[5791]	MOVE     	R0 R131 ; R0 := R131
	990	[5791]	MOVE     	R0 R132 ; R0 := R132
	991	[5791]	MOVE     	R0 R154 ; R0 := R154
	992	[5791]	MOVE     	R0 R129 ; R0 := R129
	993	[5791]	MOVE     	R0 R130 ; R0 := R130
	994	[5791]	MOVE     	R0 R2 ; R0 := R2
	995	[5791]	MOVE     	R0 R74 ; R0 := R74
	996	[5791]	MOVE     	R0 R33 ; R0 := R33
	997	[5791]	MOVE     	R0 R103 ; R0 := R103
	998	[5791]	MOVE     	R0 R122 ; R0 := R122
	999	[5791]	MOVE     	R0 R17 ; R0 := R17
	1000	[5791]	MOVE     	R0 R39 ; R0 := R39
	1001	[5791]	MOVE     	R0 R13 ; R0 := R13
	1002	[5791]	MOVE     	R0 R142 ; R0 := R142
	1003	[5791]	MOVE     	R0 R40 ; R0 := R40
	1004	[5791]	MOVE     	R0 R58 ; R0 := R58
	1005	[5791]	MOVE     	R0 R152 ; R0 := R152
	1006	[5791]	MOVE     	R0 R28 ; R0 := R28
	1007	[5791]	MOVE     	R0 R29 ; R0 := R29
	1008	[5791]	MOVE     	R0 R49 ; R0 := R49
	1009	[5791]	MOVE     	R0 R50 ; R0 := R50
	1010	[5791]	MOVE     	R0 R150 ; R0 := R150
	1011	[5401]	SETGLOBAL	R158 K316 ; Update := R158
	1012	[5800]	CLOSURE  	R158 145 ; R158 := closure(Function #146)
	1013	[5805]	CLOSURE  	R159 146 ; R159 := closure(Function #147)
	1014	[5805]	MOVE     	R0 R3 ; R0 := R3
	1015	[5805]	MOVE     	R0 R90 ; R0 := R90
	1016	[5817]	CLOSURE  	R160 147 ; R160 := closure(Function #148)
	1017	[5817]	MOVE     	R0 R3 ; R0 := R3
	1018	[5817]	MOVE     	R0 R91 ; R0 := R91
	1019	[5823]	CLOSURE  	R161 148 ; R161 := closure(Function #149)
	1020	[5823]	MOVE     	R0 R3 ; R0 := R3
	1021	[5819]	SETGLOBAL	R161 K317 ; ForceClearChildMovie := R161
	1022	[5834]	CLOSURE  	R161 149 ; R161 := closure(Function #150)
	1023	[5834]	MOVE     	R0 R54 ; R0 := R54
	1024	[5825]	SETGLOBAL	R161 K318 ; OnMovieLoaded := R161
	1025	[5879]	CLOSURE  	R161 150 ; R161 := closure(Function #151)
	1026	[5879]	MOVE     	R0 R3 ; R0 := R3
	1027	[5879]	MOVE     	R0 R106 ; R0 := R106
	1028	[5879]	MOVE     	R0 R54 ; R0 := R54
	1029	[5879]	MOVE     	R0 R89 ; R0 := R89
	1030	[5883]	CLOSURE  	R162 151 ; R162 := closure(Function #152)
	1031	[5883]	MOVE     	R0 R161 ; R0 := R161
	1032	[5881]	SETGLOBAL	R162 K319 ; OpenScreenAsyncContextReset := R162
	1033	[5897]	CLOSURE  	R162 152 ; R162 := closure(Function #153)
	1034	[5904]	CLOSURE  	R163 153 ; R163 := closure(Function #154)
	1035	[5904]	MOVE     	R0 R54 ; R0 := R54
	1036	[5908]	CLOSURE  	R164 154 ; R164 := closure(Function #155)
	1037	[5908]	MOVE     	R0 R163 ; R0 := R163
	1038	[5906]	SETGLOBAL	R164 K320 ; TerminateQuickMatch := R164
	1039	[5919]	CLOSURE  	R164 155 ; R164 := closure(Function #156)
	1040	[5919]	MOVE     	R0 R158 ; R0 := R158
	1041	[5919]	MOVE     	R0 R91 ; R0 := R91
	1042	[5919]	MOVE     	R0 R4 ; R0 := R4
	1043	[5980]	CLOSURE  	R165 156 ; R165 := closure(Function #157)
	1044	[5980]	MOVE     	R0 R5 ; R0 := R5
	1045	[5980]	MOVE     	R0 R99 ; R0 := R99
	1046	[5980]	MOVE     	R0 R104 ; R0 := R104
	1047	[5980]	MOVE     	R0 R3 ; R0 := R3
	1048	[5980]	MOVE     	R0 R106 ; R0 := R106
	1049	[5980]	MOVE     	R0 R91 ; R0 := R91
	1050	[5980]	MOVE     	R0 R4 ; R0 := R4
	1051	[5980]	MOVE     	R0 R90 ; R0 := R90
	1052	[6011]	CLOSURE  	R166 157 ; R166 := closure(Function #158)
	1053	[6011]	MOVE     	R0 R3 ; R0 := R3
	1054	[6011]	MOVE     	R0 R90 ; R0 := R90
	1055	[6015]	CLOSURE  	R167 158 ; R167 := closure(Function #159)
	1056	[6020]	CLOSURE  	R168 159 ; R168 := closure(Function #160)
	1057	[6020]	MOVE     	R0 R89 ; R0 := R89
	1058	[6030]	CLOSURE  	R169 160 ; R169 := closure(Function #161)
	1059	[6043]	CLOSURE  	R170 161 ; R170 := closure(Function #162)
	1060	[6043]	MOVE     	R0 R169 ; R0 := R169
	1061	[6062]	CLOSURE  	R171 162 ; R171 := closure(Function #163)
	1062	[6066]	CLOSURE  	R172 163 ; R172 := closure(Function #164)
	1063	[6066]	MOVE     	R0 R171 ; R0 := R171
	1064	[6064]	SETGLOBAL	R172 K321 ; ClearToMainMenu := R172
	1065	[6079]	CLOSURE  	R172 164 ; R172 := closure(Function #165)
	1066	[6079]	MOVE     	R0 R171 ; R0 := R171
	1067	[6079]	MOVE     	R0 R165 ; R0 := R165
	1068	[6079]	MOVE     	R0 R170 ; R0 := R170
	1069	[6122]	CLOSURE  	R173 165 ; R173 := closure(Function #166)
	1070	[6122]	MOVE     	R0 R99 ; R0 := R99
	1071	[6122]	MOVE     	R0 R104 ; R0 := R104
	1072	[6122]	MOVE     	R0 R3 ; R0 := R3
	1073	[6122]	MOVE     	R0 R91 ; R0 := R91
	1074	[6186]	CLOSURE  	R174 166 ; R174 := closure(Function #167)
	1075	[6212]	CLOSURE  	R175 167 ; R175 := closure(Function #168)
	1076	[6212]	MOVE     	R0 R4 ; R0 := R4
	1077	[6212]	MOVE     	R0 R5 ; R0 := R5
	1078	[6239]	CLOSURE  	R176 168 ; R176 := closure(Function #169)
	1079	[6239]	MOVE     	R0 R5 ; R0 := R5
	1080	[6243]	CLOSURE  	R177 169 ; R177 := closure(Function #170)
	1081	[6241]	SETGLOBAL	R177 K322 ; OnFcmKickOut := R177
	1082	[6265]	CLOSURE  	R177 170 ; R177 := closure(Function #171)
	1083	[6265]	MOVE     	R0 R4 ; R0 := R4
	1084	[6245]	SETGLOBAL	R177 K323 ; OnWeGamePopUp := R177
	1085	[6294]	CLOSURE  	R177 171 ; R177 := closure(Function #172)
	1086	[6294]	MOVE     	R0 R48 ; R0 := R48
	1087	[6294]	MOVE     	R0 R177 ; R0 := R177
	1088	[6298]	CLOSURE  	R178 172 ; R178 := closure(Function #173)
	1089	[6298]	MOVE     	R0 R15 ; R0 := R15
	1090	[6296]	SETGLOBAL	R178 K324 ; ToggleForcedColorCorrection := R178
	1091	[6524]	CLOSURE  	R178 173 ; R178 := closure(Function #174)
	1092	[6524]	MOVE     	R0 R156 ; R0 := R156
	1093	[6524]	MOVE     	R0 R5 ; R0 := R5
	1094	[6524]	MOVE     	R0 R7 ; R0 := R7
	1095	[6524]	MOVE     	R0 R35 ; R0 := R35
	1096	[6524]	MOVE     	R0 R26 ; R0 := R26
	1097	[6524]	MOVE     	R0 R4 ; R0 := R4
	1098	[6524]	MOVE     	R0 R174 ; R0 := R174
	1099	[6524]	MOVE     	R0 R177 ; R0 := R177
	1100	[6524]	MOVE     	R0 R161 ; R0 := R161
	1101	[6524]	MOVE     	R0 R162 ; R0 := R162
	1102	[6524]	MOVE     	R0 R165 ; R0 := R165
	1103	[6524]	MOVE     	R0 R172 ; R0 := R172
	1104	[6524]	MOVE     	R0 R173 ; R0 := R173
	1105	[6524]	MOVE     	R0 R164 ; R0 := R164
	1106	[6524]	MOVE     	R0 R158 ; R0 := R158
	1107	[6524]	MOVE     	R0 R106 ; R0 := R106
	1108	[6524]	MOVE     	R0 R169 ; R0 := R169
	1109	[6524]	MOVE     	R0 R166 ; R0 := R166
	1110	[6524]	MOVE     	R0 R167 ; R0 := R167
	1111	[6524]	MOVE     	R0 R159 ; R0 := R159
	1112	[6524]	MOVE     	R0 R160 ; R0 := R160
	1113	[6524]	MOVE     	R0 R168 ; R0 := R168
	1114	[6524]	MOVE     	R0 R175 ; R0 := R175
	1115	[6524]	MOVE     	R0 R176 ; R0 := R176
	1116	[6524]	MOVE     	R0 R96 ; R0 := R96
	1117	[6524]	MOVE     	R0 R125 ; R0 := R125
	1118	[6524]	MOVE     	R0 R126 ; R0 := R126
	1119	[6524]	MOVE     	R0 R56 ; R0 := R56
	1120	[6524]	MOVE     	R0 R123 ; R0 := R123
	1121	[6524]	MOVE     	R0 R30 ; R0 := R30
	1122	[6524]	MOVE     	R0 R17 ; R0 := R17
	1123	[6524]	MOVE     	R0 R127 ; R0 := R127
	1124	[6300]	SETGLOBAL	R178 K325 ; Initialize := R178
	1125	[6528]	CLOSURE  	R178 174 ; R178 := closure(Function #175)
	1126	[6528]	MOVE     	R0 R4 ; R0 := R4
	1127	[6526]	SETGLOBAL	R178 K326 ; Logoff := R178
	1128	[6533]	CLOSURE  	R178 175 ; R178 := closure(Function #176)
	1129	[6530]	SETGLOBAL	R178 K327 ; DebugSwitchProfile := R178
	1130	[6546]	CLOSURE  	R178 176 ; R178 := closure(Function #177)
	1131	[6546]	MOVE     	R0 R104 ; R0 := R104
	1132	[6546]	MOVE     	R0 R102 ; R0 := R102
	1133	[6546]	MOVE     	R0 R103 ; R0 := R103
	1134	[6535]	SETGLOBAL	R178 K328 ; ConfirmLogoff := R178
	1135	[6561]	CLOSURE  	R178 177 ; R178 := closure(Function #178)
	1136	[6565]	CLOSURE  	R179 178 ; R179 := closure(Function #179)
	1137	[6565]	MOVE     	R0 R178 ; R0 := R178
	1138	[6563]	SETGLOBAL	R179 K329 ; CallMethodOnScreen := R179
	1139	[6576]	CLOSURE  	R179 179 ; R179 := closure(Function #180)
	1140	[6567]	SETGLOBAL	R179 K330 ; CallMethodOnScreenString := R179
	1141	[6581]	CLOSURE  	R179 180 ; R179 := closure(Function #181)
	1142	[6581]	MOVE     	R0 R178 ; R0 := R178
	1143	[6578]	SETGLOBAL	R179 K331 ; CallMethodOnTopScreen := R179
	1144	[6588]	CLOSURE  	R179 181 ; R179 := closure(Function #182)
	1145	[6588]	MOVE     	R0 R4 ; R0 := R4
	1146	[6583]	SETGLOBAL	R179 K332 ; SetBackgroundDepthTest := R179
	1147	[6600]	CLOSURE  	R179 182 ; R179 := closure(Function #183)
	1148	[6590]	SETGLOBAL	R179 K333 ; RefreshLoadout := R179
	1149	[6607]	CLOSURE  	R179 183 ; R179 := closure(Function #184)
	1150	[6602]	SETGLOBAL	R179 K334 ; CloseLoadout := R179
	1151	[6611]	CLOSURE  	R179 184 ; R179 := closure(Function #185)
	1152	[6611]	MOVE     	R0 R54 ; R0 := R54
	1153	[6615]	CLOSURE  	R180 185 ; R180 := closure(Function #186)
	1154	[6615]	MOVE     	R0 R54 ; R0 := R54
	1155	[6642]	CLOSURE  	R181 186 ; R181 := closure(Function #187)
	1156	[6642]	MOVE     	R0 R41 ; R0 := R41
	1157	[6642]	MOVE     	R0 R4 ; R0 := R4
	1158	[6646]	CLOSURE  	R182 187 ; R182 := closure(Function #188)
	1159	[6646]	MOVE     	R0 R181 ; R0 := R181
	1160	[6644]	SETGLOBAL	R182 K335 ; ProcessBoosterPacks := R182
	1161	[6755]	CLOSURE  	R182 188 ; R182 := closure(Function #189)
	1162	[6755]	MOVE     	R0 R41 ; R0 := R41
	1163	[6755]	MOVE     	R0 R83 ; R0 := R83
	1164	[6755]	MOVE     	R0 R180 ; R0 := R180
	1165	[6755]	MOVE     	R0 R181 ; R0 := R181
	1166	[6755]	MOVE     	R0 R5 ; R0 := R5
	1167	[6801]	CLOSURE  	R183 189 ; R183 := closure(Function #190)
	1168	[6801]	MOVE     	R0 R180 ; R0 := R180
	1169	[6801]	MOVE     	R0 R4 ; R0 := R4
	1170	[6801]	MOVE     	R0 R83 ; R0 := R83
	1171	[6801]	MOVE     	R0 R182 ; R0 := R182
	1172	[6757]	SETGLOBAL	R183 K336 ; OnPurchaseResults := R183
	1173	[6805]	CLOSURE  	R183 190 ; R183 := closure(Function #191)
	1174	[6805]	MOVE     	R0 R83 ; R0 := R83
	1175	[6803]	SETGLOBAL	R183 K337 ; ConfirmPopup := R183
	1176	[6842]	CLOSURE  	R183 191 ; R183 := closure(Function #192)
	1177	[6842]	MOVE     	R0 R83 ; R0 := R83
	1178	[6842]	MOVE     	R0 R27 ; R0 := R27
	1179	[6842]	MOVE     	R0 R75 ; R0 := R75
	1180	[6842]	MOVE     	R0 R76 ; R0 := R76
	1181	[6807]	SETGLOBAL	R183 K338 ; ConfirmPopupNotEnoughPlatinum := R183
	1182	[6875]	CLOSURE  	R183 192 ; R183 := closure(Function #193)
	1183	[6875]	MOVE     	R0 R83 ; R0 := R83
	1184	[6875]	MOVE     	R0 R82 ; R0 := R82
	1185	[6875]	MOVE     	R0 R87 ; R0 := R87
	1186	[6844]	SETGLOBAL	R183 K339 ; ConfirmDurability := R183
	1187	[6878]	CLOSURE  	R183 193 ; R183 := closure(Function #194)
	1188	[6877]	SETGLOBAL	R183 K340 ; ConfirmErrorPopup := R183
	1189	[6883]	CLOSURE  	R183 194 ; R183 := closure(Function #195)
	1190	[6880]	SETGLOBAL	R183 K341 ; OpenPrimeTokenPage := R183
	1191	[6887]	CLOSURE  	R183 195 ; R183 := closure(Function #196)
	1192	[6891]	CLOSURE  	R184 196 ; R184 := closure(Function #197)
	1193	[6908]	CLOSURE  	R185 197 ; R185 := closure(Function #198)
	1194	[6952]	CLOSURE  	R186 198 ; R186 := closure(Function #199)
	1195	[6952]	MOVE     	R0 R185 ; R0 := R185
	1196	[6952]	MOVE     	R0 R183 ; R0 := R183
	1197	[6952]	MOVE     	R0 R4 ; R0 := R4
	1198	[6952]	MOVE     	R0 R83 ; R0 := R83
	1199	[6952]	MOVE     	R0 R184 ; R0 := R184
	1200	[6952]	MOVE     	R0 R5 ; R0 := R5
	1201	[6952]	MOVE     	R0 R179 ; R0 := R179
	1202	[6910]	SETGLOBAL	R186 K342 ; ConfirmPurchase := R186
	1203	[7018]	CLOSURE  	R186 199 ; R186 := closure(Function #200)
	1204	[7018]	MOVE     	R0 R88 ; R0 := R88
	1205	[7018]	MOVE     	R0 R5 ; R0 := R5
	1206	[7018]	MOVE     	R0 R4 ; R0 := R4
	1207	[7018]	MOVE     	R0 R82 ; R0 := R82
	1208	[7018]	MOVE     	R0 R83 ; R0 := R83
	1209	[7018]	MOVE     	R0 R51 ; R0 := R51
	1210	[7018]	MOVE     	R0 R87 ; R0 := R87
	1211	[6954]	SETGLOBAL	R186 K343 ; BuyItem := R186
	1212	[7028]	CLOSURE  	R186 200 ; R186 := closure(Function #201)
	1213	[7028]	MOVE     	R0 R171 ; R0 := R171
	1214	[7028]	MOVE     	R0 R161 ; R0 := R161
	1215	[7036]	CLOSURE  	R187 201 ; R187 := closure(Function #202)
	1216	[7030]	SETGLOBAL	R187 K344 ; OpenPod := R187
	1217	[7044]	CLOSURE  	R187 202 ; R187 := closure(Function #203)
	1218	[7038]	SETGLOBAL	R187 K345 ; ClosePod := R187
	1219	[7048]	CLOSURE  	R187 203 ; R187 := closure(Function #204)
	1220	[7048]	MOVE     	R0 R4 ; R0 := R4
	1221	[7046]	SETGLOBAL	R187 K346 ; OnProfileFocused := R187
	1222	[7054]	CLOSURE  	R187 204 ; R187 := closure(Function #205)
	1223	[7054]	MOVE     	R0 R186 ; R0 := R186
	1224	[7050]	SETGLOBAL	R187 K347 ; ConfirmLobby := R187
	1225	[7058]	CLOSURE  	R187 205 ; R187 := closure(Function #206)
	1226	[7056]	SETGLOBAL	R187 K348 ; ExitLobby := R187
	1227	[7062]	CLOSURE  	R187 206 ; R187 := closure(Function #207)
	1228	[7062]	MOVE     	R0 R4 ; R0 := R4
	1229	[7060]	SETGLOBAL	R187 K349 ; RollOver := R187
	1230	[7065]	CLOSURE  	R187 207 ; R187 := closure(Function #208)
	1231	[7064]	SETGLOBAL	R187 K350 ; onViewportSizeChanged := R187
	1232	[7082]	CLOSURE  	R187 208 ; R187 := closure(Function #209)
	1233	[7082]	MOVE     	R0 R17 ; R0 := R17
	1234	[7067]	SETGLOBAL	R187 K252 ; ActiveQuestLoaded := R187
	1235	[7088]	CLOSURE  	R187 209 ; R187 := closure(Function #210)
	1236	[7088]	MOVE     	R0 R4 ; R0 := R4
	1237	[7084]	SETGLOBAL	R187 K351 ; OnAccountNameChangedCallback := R187
	1238	[7116]	CLOSURE  	R55 210 ; R55 := closure(Function #211)
	1239	[7116]	MOVE     	R0 R5 ; R0 := R5
	1240	[7146]	CLOSURE  	R187 211 ; R187 := closure(Function #212)
	1241	[7146]	MOVE     	R0 R4 ; R0 := R4
	1242	[7146]	MOVE     	R0 R187 ; R0 := R187
	1243	[7306]	CLOSURE  	R188 212 ; R188 := closure(Function #213)
	1244	[7306]	MOVE     	R0 R59 ; R0 := R59
	1245	[7306]	MOVE     	R0 R5 ; R0 := R5
	1246	[7306]	MOVE     	R0 R102 ; R0 := R102
	1247	[7306]	MOVE     	R0 R101 ; R0 := R101
	1248	[7306]	MOVE     	R0 R94 ; R0 := R94
	1249	[7306]	MOVE     	R0 R110 ; R0 := R110
	1250	[7306]	MOVE     	R0 R30 ; R0 := R30
	1251	[7306]	MOVE     	R0 R56 ; R0 := R56
	1252	[7306]	MOVE     	R0 R123 ; R0 := R123
	1253	[7306]	MOVE     	R0 R187 ; R0 := R187
	1254	[7306]	MOVE     	R0 R124 ; R0 := R124
	1255	[7306]	MOVE     	R0 R120 ; R0 := R120
	1256	[7306]	MOVE     	R0 R49 ; R0 := R49
	1257	[7148]	SETGLOBAL	R188 K352 ; OnLoginDone := R188
	1258	[7310]	CLOSURE  	R188 213 ; R188 := closure(Function #214)
	1259	[7310]	MOVE     	R0 R2 ; R0 := R2
	1260	[7308]	SETGLOBAL	R188 K353 ; QueueTeshinHardModeNag := R188
	1261	[7316]	CLOSURE  	R188 214 ; R188 := closure(Function #215)
	1262	[7316]	MOVE     	R0 R103 ; R0 := R103
	1263	[7312]	SETGLOBAL	R188 K354 ; DoLogoff := R188
	1264	[7328]	CLOSURE  	R188 215 ; R188 := closure(Function #216)
	1265	[7328]	MOVE     	R0 R5 ; R0 := R5
	1266	[7328]	MOVE     	R0 R4 ; R0 := R4
	1267	[7318]	SETGLOBAL	R188 K355 ; HttpRequestFailureCallback := R188
	1268	[7371]	CLOSURE  	R188 216 ; R188 := closure(Function #217)
	1269	[7371]	MOVE     	R0 R4 ; R0 := R4
	1270	[7330]	SETGLOBAL	R188 K356 ; HttpRequestAuthFailureCallback := R188
	1271	[7393]	CLOSURE  	R188 217 ; R188 := closure(Function #218)
	1272	[7393]	MOVE     	R0 R5 ; R0 := R5
	1273	[7393]	MOVE     	R0 R103 ; R0 := R103
	1274	[7373]	SETGLOBAL	R188 K357 ; OnUserChangedCallback := R188
	1275	[7407]	CLOSURE  	R188 218 ; R188 := closure(Function #219)
	1276	[7407]	MOVE     	R0 R57 ; R0 := R57
	1277	[7395]	SETGLOBAL	R188 K358 ; OnConfirmation := R188
	1278	[7414]	CLOSURE  	R188 219 ; R188 := closure(Function #220)
	1279	[7414]	MOVE     	R0 R57 ; R0 := R57
	1280	[7414]	MOVE     	R0 R4 ; R0 := R4
	1281	[7409]	SETGLOBAL	R188 K359 ; OnUserGamepadRemoved := R188
	1282	[7421]	CLOSURE  	R188 220 ; R188 := closure(Function #221)
	1283	[7421]	MOVE     	R0 R57 ; R0 := R57
	1284	[7421]	MOVE     	R0 R4 ; R0 := R4
	1285	[7416]	SETGLOBAL	R188 K360 ; OnUserGamepadRemovedSwitch := R188
	1286	[7427]	CLOSURE  	R188 221 ; R188 := closure(Function #222)
	1287	[7427]	MOVE     	R0 R4 ; R0 := R4
	1288	[7423]	SETGLOBAL	R188 K361 ; OnLoginExpired := R188
	1289	[7430]	CLOSURE  	R188 222 ; R188 := closure(Function #223)
	1290	[7429]	SETGLOBAL	R188 K362 ; GameInviteReceivedCallback := R188
	1291	[7437]	CLOSURE  	R188 223 ; R188 := closure(Function #224)
	1292	[7432]	SETGLOBAL	R188 K363 ; OnOnlinePlayTypeChanged := R188
	1293	[7444]	CLOSURE  	R188 224 ; R188 := closure(Function #225)
	1294	[7439]	SETGLOBAL	R188 K364 ; SelectMissionDeckRegion := R188
	1295	[7452]	CLOSURE  	R188 225 ; R188 := closure(Function #226)
	1296	[7452]	MOVE     	R0 R5 ; R0 := R5
	1297	[7452]	MOVE     	R0 R17 ; R0 := R17
	1298	[7446]	SETGLOBAL	R188 K365 ; IconCacheFlushed := R188
	1299	[7456]	CLOSURE  	R188 226 ; R188 := closure(Function #227)
	1300	[7456]	MOVE     	R0 R135 ; R0 := R135
	1301	[7454]	SETGLOBAL	R188 K366 ; UpdateShipDecoCapacity := R188
	1302	[7470]	CLOSURE  	R188 227 ; R188 := closure(Function #228)
	1303	[7470]	MOVE     	R0 R54 ; R0 := R54
	1304	[7470]	MOVE     	R0 R4 ; R0 := R4
	1305	[7470]	MOVE     	R0 R5 ; R0 := R5
	1306	[7470]	MOVE     	R0 R67 ; R0 := R67
	1307	[7470]	MOVE     	R0 R43 ; R0 := R43
	1308	[7470]	MOVE     	R0 R42 ; R0 := R42
	1309	[7458]	SETGLOBAL	R188 K367 ; OnShipDecosReset := R188
	1310	[7478]	CLOSURE  	R188 228 ; R188 := closure(Function #229)
	1311	[7478]	MOVE     	R0 R5 ; R0 := R5
	1312	[7478]	MOVE     	R0 R54 ; R0 := R54
	1313	[7472]	SETGLOBAL	R188 K368 ; ResetShipDecos := R188
	1314	[7629]	CLOSURE  	R67 229 ; R67 := closure(Function #230)
	1315	[7629]	MOVE     	R0 R5 ; R0 := R5
	1316	[7629]	MOVE     	R0 R135 ; R0 := R135
	1317	[7629]	MOVE     	R0 R139 ; R0 := R139
	1318	[7629]	MOVE     	R0 R67 ; R0 := R67
	1319	[7650]	CLOSURE  	R188 230 ; R188 := closure(Function #231)
	1320	[7650]	MOVE     	R0 R5 ; R0 := R5
	1321	[7650]	MOVE     	R0 R43 ; R0 := R43
	1322	[7650]	MOVE     	R0 R67 ; R0 := R67
	1323	[7650]	MOVE     	R0 R42 ; R0 := R42
	1324	[7631]	SETGLOBAL	R188 K369 ; RefreshShipDecos := R188
	1325	[7700]	CLOSURE  	R188 231 ; R188 := closure(Function #232)
	1326	[7700]	MOVE     	R0 R14 ; R0 := R14
	1327	[7700]	MOVE     	R0 R44 ; R0 := R44
	1328	[7712]	CLOSURE  	R189 232 ; R189 := closure(Function #233)
	1329	[7712]	MOVE     	R0 R5 ; R0 := R5
	1330	[7716]	CLOSURE  	R190 233 ; R190 := closure(Function #234)
	1331	[7716]	MOVE     	R0 R189 ; R0 := R189
	1332	[7714]	SETGLOBAL	R190 K370 ; RefreshLotusHelmetTrigger := R190
	1333	[7737]	CLOSURE  	R190 234 ; R190 := closure(Function #235)
	1334	[7737]	MOVE     	R0 R67 ; R0 := R67
	1335	[7737]	MOVE     	R0 R42 ; R0 := R42
	1336	[7737]	MOVE     	R0 R188 ; R0 := R188
	1337	[7737]	MOVE     	R0 R147 ; R0 := R147
	1338	[7737]	MOVE     	R0 R189 ; R0 := R189
	1339	[7737]	MOVE     	R0 R145 ; R0 := R145
	1340	[7718]	SETGLOBAL	R190 K371 ; SetupPlayerShip := R190
	1341	[7818]	CLOSURE  	R190 235 ; R190 := closure(Function #236)
	1342	[7818]	MOVE     	R0 R5 ; R0 := R5
	1343	[7818]	MOVE     	R0 R43 ; R0 := R43
	1344	[7818]	MOVE     	R0 R67 ; R0 := R67
	1345	[7818]	MOVE     	R0 R66 ; R0 := R66
	1346	[7818]	MOVE     	R0 R146 ; R0 := R146
	1347	[7739]	SETGLOBAL	R190 K372 ; SetupPlayerApartment := R190
	1348	[7850]	CLOSURE  	R190 236 ; R190 := closure(Function #237)
	1349	[7820]	SETGLOBAL	R190 K373 ; OnDojoData := R190
	1350	[7852]	OP_LOADBOOL	R190 0 0 ; R190 := false
	1351	[7853]	LOADK    	R191 := 0.000000
	1352	[7854]	LOADK    	R192 := 0.000000
	1353	[7868]	CLOSURE  	R193 237 ; R193 := closure(Function #238)
	1354	[7868]	MOVE     	R0 R190 ; R0 := R190
	1355	[7868]	MOVE     	R0 R191 ; R0 := R191
	1356	[7868]	MOVE     	R0 R192 ; R0 := R192
	1357	[7856]	SETGLOBAL	R193 K374 ; ConfirmLoadOrbiterMessage := R193
	1358	[7922]	CLOSURE  	R193 238 ; R193 := closure(Function #239)
	1359	[7922]	MOVE     	R0 R190 ; R0 := R190
	1360	[7922]	MOVE     	R0 R192 ; R0 := R192
	1361	[7922]	MOVE     	R0 R4 ; R0 := R4
	1362	[7926]	CLOSURE  	R194 239 ; R194 := closure(Function #240)
	1363	[7926]	MOVE     	R0 R152 ; R0 := R152
	1364	[7924]	SETGLOBAL	R194 K375 ; OnLoadHubMessage := R194
	1365	[7931]	CLOSURE  	R194 240 ; R194 := closure(Function #241)
	1366	[7936]	CLOSURE  	R195 241 ; R195 := closure(Function #242)
	1367	[7941]	CLOSURE  	R196 242 ; R196 := closure(Function #243)
	1368	[7945]	CLOSURE  	R197 243 ; R197 := closure(Function #244)
	1369	[7943]	SETGLOBAL	R197 K376 ; OnAccountRenameRelogConfirm := R197
	1370	[7957]	CLOSURE  	R197 244 ; R197 := closure(Function #245)
	1371	[7957]	MOVE     	R0 R193 ; R0 := R193
	1372	[7957]	MOVE     	R0 R194 ; R0 := R194
	1373	[7957]	MOVE     	R0 R195 ; R0 := R195
	1374	[7957]	MOVE     	R0 R196 ; R0 := R196
	1375	[7947]	SETGLOBAL	R197 K377 ; OnLoadOrbiterMessage := R197
	1376	[7986]	CLOSURE  	R197 245 ; R197 := closure(Function #246)
	1377	[7986]	MOVE     	R0 R4 ; R0 := R4
	1378	[7959]	SETGLOBAL	R197 K378 ; OnAccountRename := R197
	1379	[8009]	CLOSURE  	R197 246 ; R197 := closure(Function #247)
	1380	[8009]	MOVE     	R0 R5 ; R0 := R5
	1381	[7988]	SETGLOBAL	R197 K379 ; OnAccountRenameConfirm := R197
	1382	[8016]	CLOSURE  	R197 247 ; R197 := closure(Function #248)
	1383	[8016]	MOVE     	R0 R5 ; R0 := R5
	1384	[8011]	SETGLOBAL	R197 K380 ; OnBadNewNameAcknowledged := R197
	1385	[8087]	CLOSURE  	R197 248 ; R197 := closure(Function #249)
	1386	[8087]	MOVE     	R0 R5 ; R0 := R5
	1387	[8087]	MOVE     	R0 R4 ; R0 := R4
	1388	[8095]	CLOSURE  	R198 249 ; R198 := closure(Function #250)
	1389	[8095]	MOVE     	R0 R197 ; R0 := R197
	1390	[8089]	SETGLOBAL	R198 K381 ; AccountRename := R198
	1391	[8103]	CLOSURE  	R198 250 ; R198 := closure(Function #251)
	1392	[8103]	MOVE     	R0 R197 ; R0 := R197
	1393	[8097]	SETGLOBAL	R198 K382 ; OSKAccountRename := R198
	1394	[8108]	CLOSURE  	R198 251 ; R198 := closure(Function #252)
	1395	[8108]	MOVE     	R0 R5 ; R0 := R5
	1396	[8105]	SETGLOBAL	R198 K383 ; InitiateAccountRename := R198
	1397	[8288]	CLOSURE  	R198 252 ; R198 := closure(Function #253)
	1398	[8288]	MOVE     	R0 R5 ; R0 := R5
	1399	[8288]	MOVE     	R0 R59 ; R0 := R59
	1400	[8288]	MOVE     	R0 R118 ; R0 := R118
	1401	[8288]	MOVE     	R0 R16 ; R0 := R16
	1402	[8288]	MOVE     	R0 R62 ; R0 := R62
	1403	[8110]	SETGLOBAL	R198 K384 ; InitializeRegionChallenges := R198
	1404	[8292]	CLOSURE  	R198 253 ; R198 := closure(Function #254)
	1405	[8292]	MOVE     	R0 R95 ; R0 := R95
	1406	[8290]	SETGLOBAL	R198 K385 ; CheckNewOmega := R198
	1407	[8298]	CLOSURE  	R198 254 ; R198 := closure(Function #255)
	1408	[8294]	SETGLOBAL	R198 K386 ; ShowPurchaseCelebration := R198
	1409	[8360]	CLOSURE  	R198 255 ; R198 := closure(Function #256)
	1410	[8360]	MOVE     	R0 R5 ; R0 := R5
	1411	[8360]	MOVE     	R0 R23 ; R0 := R23
	1412	[8300]	SETGLOBAL	R198 K387 ; ApplyLoadOutChanges := R198
	1413	[8363]	CLOSURE  	R198 256 ; R198 := closure(Function #257)
	1414	[8362]	SETGLOBAL	R198 K388 ; OnLobbyReady := R198
	1415	[8366]	CLOSURE  	R198 257 ; R198 := closure(Function #258)
	1416	[8365]	SETGLOBAL	R198 K389 ; OnUpdateSessionSettings := R198
	1417	[8434]	CLOSURE  	R50 258 ; R50 := closure(Function #259)
	1418	[8434]	MOVE     	R0 R5 ; R0 := R5
	1419	[8434]	MOVE     	R0 R7 ; R0 := R7
	1420	[8438]	CLOSURE  	R198 259 ; R198 := closure(Function #260)
	1421	[8438]	MOVE     	R0 R50 ; R0 := R50
	1422	[8436]	SETGLOBAL	R198 K390 ; DebugLoadMission := R198
	1423	[8444]	CLOSURE  	R198 260 ; R198 := closure(Function #261)
	1424	[8440]	SETGLOBAL	R198 K391 ; ConfirmWeaponRetrieve := R198
	1425	[8474]	CLOSURE  	R198 261 ; R198 := closure(Function #262)
	1426	[8474]	MOVE     	R0 R5 ; R0 := R5
	1427	[8474]	MOVE     	R0 R54 ; R0 := R54
	1428	[8474]	MOVE     	R0 R4 ; R0 := R4
	1429	[8474]	MOVE     	R0 R77 ; R0 := R77
	1430	[8474]	MOVE     	R0 R64 ; R0 := R64
	1431	[8474]	MOVE     	R0 R63 ; R0 := R63
	1432	[8446]	SETGLOBAL	R198 K392 ; OnTrainingResultUploaded := R198
	1433	[8486]	CLOSURE  	R198 262 ; R198 := closure(Function #263)
	1434	[8486]	MOVE     	R0 R5 ; R0 := R5
	1435	[8486]	MOVE     	R0 R77 ; R0 := R77
	1436	[8486]	MOVE     	R0 R54 ; R0 := R54
	1437	[8486]	MOVE     	R0 R63 ; R0 := R63
	1438	[8486]	MOVE     	R0 R64 ; R0 := R64
	1439	[8490]	CLOSURE  	R199 263 ; R199 := closure(Function #264)
	1440	[8490]	MOVE     	R0 R198 ; R0 := R198
	1441	[8488]	SETGLOBAL	R199 K393 ; LevelUpRetry := R199
	1442	[8496]	CLOSURE  	R199 264 ; R199 := closure(Function #265)
	1443	[8496]	MOVE     	R0 R198 ; R0 := R198
	1444	[8492]	SETGLOBAL	R199 K394 ; LevelUpRetryConfirm := R199
	1445	[8518]	CLOSURE  	R199 265 ; R199 := closure(Function #266)
	1446	[8518]	MOVE     	R0 R5 ; R0 := R5
	1447	[8518]	MOVE     	R0 R4 ; R0 := R4
	1448	[8518]	MOVE     	R0 R54 ; R0 := R54
	1449	[8518]	MOVE     	R0 R63 ; R0 := R63
	1450	[8518]	MOVE     	R0 R64 ; R0 := R64
	1451	[8498]	SETGLOBAL	R199 K395 ; LevelUp := R199
	1452	[8522]	CLOSURE  	R199 266 ; R199 := closure(Function #267)
	1453	[8520]	SETGLOBAL	R199 K396 ; QueueMailboxNotification := R199
	1454	[8526]	CLOSURE  	R199 267 ; R199 := closure(Function #268)
	1455	[8526]	MOVE     	R0 R103 ; R0 := R103
	1456	[8524]	SETGLOBAL	R199 K397 ; ForceVersionLogoff := R199
	1457	[8533]	CLOSURE  	R199 268 ; R199 := closure(Function #269)
	1458	[8528]	SETGLOBAL	R199 K398 ; QuitGameConfirm := R199
	1459	[8541]	CLOSURE  	R199 269 ; R199 := closure(Function #270)
	1460	[8541]	MOVE     	R0 R4 ; R0 := R4
	1461	[8535]	SETGLOBAL	R199 K399 ; QuitGame := R199
	1462	[8571]	CLOSURE  	R199 270 ; R199 := closure(Function #271)
	1463	[8571]	MOVE     	R0 R20 ; R0 := R20
	1464	[8543]	SETGLOBAL	R199 K400 ; OnStartNemesis := R199
	1465	[8575]	CLOSURE  	R199 271 ; R199 := closure(Function #272)
	1466	[8573]	SETGLOBAL	R199 K401 ; ForceRefreshFoundryNotification := R199
	1467	[8575]	RETURN   	R0 1 ; return 


function #1 <?:410,451> (92 instructions, 368 bytes at 00000160888D0370)
0 params, 2 slots, 0 upvalues, 0 locals, 23 constants, 0 functions
	1	[411]	GETGLOBAL	R0 K0 ; R0 := mControl
	2	[411]	SETTABLE 	R0 K1 K2 ; R0["Shutdown"] := true
	3	[412]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	4	[412]	GETGLOBAL	R1 K4 ; R1 := mToolTip
	5	[412]	CALL     	R0 2 2 ; R0 := R0(R1)
	6	[412]	TEST     	R0 1 ; if R0 then PC := 11
	7	[412]	JMP      	11 ; PC := 11
	8	[413]	GETGLOBAL	R0 K4 ; R0 := mToolTip
	9	[413]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x32302b4a]
	10	[413]	CALL     	R0 2 1 ; R0(R1)
	11	[416]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	12	[416]	GETGLOBAL	R1 K6 ; R1 := mInfoPopup
	13	[416]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[416]	TEST     	R0 1 ; if R0 then PC := 19
	15	[416]	JMP      	19 ; PC := 19
	16	[417]	GETGLOBAL	R0 K6 ; R0 := mInfoPopup
	17	[417]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x32302b4a]
	18	[417]	CALL     	R0 2 1 ; R0(R1)
	19	[420]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	20	[420]	GETGLOBAL	R1 K7 ; R1 := mContextMenu
	21	[420]	CALL     	R0 2 2 ; R0 := R0(R1)
	22	[420]	TEST     	R0 1 ; if R0 then PC := 27
	23	[420]	JMP      	27 ; PC := 27
	24	[421]	GETGLOBAL	R0 K7 ; R0 := mContextMenu
	25	[421]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x32302b4a]
	26	[421]	CALL     	R0 2 1 ; R0(R1)
	27	[424]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	28	[424]	GETGLOBAL	R1 K8 ; R1 := mBlockingTaskPopup
	29	[424]	CALL     	R0 2 2 ; R0 := R0(R1)
	30	[424]	TEST     	R0 1 ; if R0 then PC := 35
	31	[424]	JMP      	35 ; PC := 35
	32	[425]	GETGLOBAL	R0 K8 ; R0 := mBlockingTaskPopup
	33	[425]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x32302b4a]
	34	[425]	CALL     	R0 2 1 ; R0(R1)
	35	[428]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	36	[428]	GETGLOBAL	R1 K9 ; R1 := mStyleBackgroundMovie
	37	[428]	CALL     	R0 2 2 ; R0 := R0(R1)
	38	[428]	TEST     	R0 1 ; if R0 then PC := 43
	39	[428]	JMP      	43 ; PC := 43
	40	[429]	GETGLOBAL	R0 K9 ; R0 := mStyleBackgroundMovie
	41	[429]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x32302b4a]
	42	[429]	CALL     	R0 2 1 ; R0(R1)
	43	[432]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	44	[432]	GETGLOBAL	R1 K10 ; R1 := mNotificationsMovie
	45	[432]	CALL     	R0 2 2 ; R0 := R0(R1)
	46	[432]	TEST     	R0 1 ; if R0 then PC := 51
	47	[432]	JMP      	51 ; PC := 51
	48	[433]	GETGLOBAL	R0 K10 ; R0 := mNotificationsMovie
	49	[433]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x32302b4a]
	50	[433]	CALL     	R0 2 1 ; R0(R1)
	51	[436]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	52	[436]	GETGLOBAL	R1 K11 ; R1 := _T
	53	[436]	GETTABLE 	R1 R1 K12 ; R1 := R1["DisableUIInput"]
	54	[436]	CALL     	R0 2 2 ; R0 := R0(R1)
	55	[436]	TEST     	R0 1 ; if R0 then PC := 60
	56	[436]	JMP      	60 ; PC := 60
	57	[437]	GETGLOBAL	R0 K11 ; R0 := _T
	58	[437]	GETTABLE 	R0 R0 K13 ; R0 := R0[0x80172c74]
	59	[437]	CALL     	R0 1 1 ; R0()
	60	[440]	GETGLOBAL	R0 K14 ; R0 := mOpenScreenAsyncInfo
	61	[440]	GETTABLE 	R0 R0 K15 ; R0 := R0["IsLoading"]
	62	[440]	TEST     	R0 0 ; if not R0 then PC := 72
	63	[440]	JMP      	72 ; PC := 72
	64	[441]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	65	[441]	GETGLOBAL	R1 K16 ; R1 := 0x9ba7909f
	66	[441]	CALL     	R0 2 2 ; R0 := R0(R1)
	67	[441]	TEST     	R0 1 ; if R0 then PC := 72
	68	[441]	JMP      	72 ; PC := 72
	69	[442]	GETGLOBAL	R0 K16 ; R0 := 0x9ba7909f
	70	[442]	SELF     	R0 R0 K17 ; R1 := R0; R0 := R0[0xf248fd5d]
	71	[442]	CALL     	R0 2 1 ; R0(R1)
	72	[446]	GETGLOBAL	R0 K18 ; R0 := mUIInputEnableTimer
	73	[446]	EQ       	1 R0 K19 ; if R0 == nil then PC := 92
	74	[446]	JMP      	92 ; PC := 92
	75	[446]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	76	[446]	GETGLOBAL	R1 K20 ; R1 := mTimerMgr
	77	[446]	CALL     	R0 2 2 ; R0 := R0(R1)
	78	[446]	TEST     	R0 1 ; if R0 then PC := 92
	79	[446]	JMP      	92 ; PC := 92
	80	[446]	GETGLOBAL	R0 K20 ; R0 := mTimerMgr
	81	[446]	GETTABLE 	R0 R0 K21 ; R0 := R0["mTimers"]
	82	[446]	GETGLOBAL	R1 K18 ; R1 := mUIInputEnableTimer
	83	[446]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	84	[446]	EQ       	1 R0 K19 ; if R0 == nil then PC := 92
	85	[446]	JMP      	92 ; PC := 92
	86	[449]	GETGLOBAL	R0 K20 ; R0 := mTimerMgr
	87	[449]	GETTABLE 	R0 R0 K21 ; R0 := R0["mTimers"]
	88	[449]	GETGLOBAL	R1 K18 ; R1 := mUIInputEnableTimer
	89	[449]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	90	[449]	GETTABLE 	R0 R0 K22 ; R0 := R0[0x75afeb61]
	91	[449]	CALL     	R0 1 1 ; R0()
	92	[451]	RETURN   	R0 1 ; return 

function #2 <?:453,473> (31 instructions, 124 bytes at 00000160888D0880)
5 params, 6 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[454]	GETGLOBAL	R5 K0 ; R5 := _T
	2	[454]	GETTABLE 	R5 R5 K1 ; R5 := R5["Credits"]
	3	[454]	EQ       	1 R5 R0 ; if R5 == R0 then PC := 7
	4	[454]	JMP      	7 ; PC := 7
	5	[455]	GETGLOBAL	R5 K0 ; R5 := _T
	6	[455]	SETTABLE 	R5 K1 R0 ; R5["Credits"] := R0
	7	[458]	GETGLOBAL	R5 K0 ; R5 := _T
	8	[458]	GETTABLE 	R5 R5 K2 ; R5 := R5["PremiumCredits"]
	9	[458]	EQ       	1 R5 R1 ; if R5 == R1 then PC := 13
	10	[458]	JMP      	13 ; PC := 13
	11	[459]	GETGLOBAL	R5 K0 ; R5 := _T
	12	[459]	SETTABLE 	R5 K2 R1 ; R5["PremiumCredits"] := R1
	13	[462]	GETGLOBAL	R5 K0 ; R5 := _T
	14	[462]	GETTABLE 	R5 R5 K3 ; R5 := R5["PurchasedPremiumCredits"]
	15	[462]	EQ       	1 R5 R2 ; if R5 == R2 then PC := 19
	16	[462]	JMP      	19 ; PC := 19
	17	[463]	GETGLOBAL	R5 K0 ; R5 := _T
	18	[463]	SETTABLE 	R5 K3 R2 ; R5["PurchasedPremiumCredits"] := R2
	19	[466]	GETGLOBAL	R5 K0 ; R5 := _T
	20	[466]	GETTABLE 	R5 R5 K4 ; R5 := R5["PrimeTokens"]
	21	[466]	EQ       	1 R5 R3 ; if R5 == R3 then PC := 25
	22	[466]	JMP      	25 ; PC := 25
	23	[467]	GETGLOBAL	R5 K0 ; R5 := _T
	24	[467]	SETTABLE 	R5 K4 R3 ; R5["PrimeTokens"] := R3
	25	[470]	GETGLOBAL	R5 K0 ; R5 := _T
	26	[470]	GETTABLE 	R5 R5 K5 ; R5 := R5["PlayerXP"]
	27	[470]	EQ       	1 R5 R4 ; if R5 == R4 then PC := 31
	28	[470]	JMP      	31 ; PC := 31
	29	[471]	GETGLOBAL	R5 K0 ; R5 := _T
	30	[471]	SETTABLE 	R5 K5 R4 ; R5["PlayerXP"] := R4
	31	[473]	RETURN   	R0 1 ; return 

function #3 <?:475,477> (1 instruction, 4 bytes at 00000160888D0B20)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[477]	RETURN   	R0 1 ; return 

function #4 <?:479,527> (128 instructions, 512 bytes at 00000160888D0BF0)
0 params, 14 slots, 2 upvalues, 0 locals, 29 constants, 0 functions
	1	[480]	LOADK    	R0 K0 ; R0 := ""
	2	[481]	GETGLOBAL	R1 K1 ; R1 := 0x76ea806b
	3	[481]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x3f3ae64c]
	4	[481]	LOADK    	R3 := 0.000000
	5	[481]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[483]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[483]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x49d9480e]
	8	[483]	CALL     	R2 1 2 ; R2 := R2()
	9	[483]	TEST     	R2 1 ; if R2 then PC := 16
	10	[483]	JMP      	16 ; PC := 16
	11	[483]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[483]	GETTABLE 	R2 R2 K4 ; R2 := R2[0x7d0219ae]
	13	[483]	CALL     	R2 1 2 ; R2 := R2()
	14	[483]	TEST     	R2 0 ; if not R2 then PC := 18
	15	[483]	JMP      	18 ; PC := 18
	16	[484]	LOADK    	R0 K5 ; R0 := "https://dev.warframe.com/gameplatinum?"
	17	[484]	JMP      	33 ; PC := 33
	18	[485]	GETUPVAL 	R2 U0 ; R2 := U0
	19	[485]	GETTABLE 	R2 R2 K6 ; R2 := R2[0x28822185]
	20	[485]	CALL     	R2 1 2 ; R2 := R2()
	21	[485]	TEST     	R2 0 ; if not R2 then PC := 25
	22	[485]	JMP      	25 ; PC := 25
	23	[486]	LOADK    	R0 K7 ; R0 := "https://test.warframe.com/gameplatinum?"
	24	[486]	JMP      	33 ; PC := 33
	25	[487]	GETGLOBAL	R2 K8 ; R2 := 0x34291f5c
	26	[487]	GETTABLE 	R2 R2 K9 ; R2 := R2[0xa7a2e381]
	27	[487]	CALL     	R2 1 2 ; R2 := R2()
	28	[487]	TEST     	R2 0 ; if not R2 then PC := 32
	29	[487]	JMP      	32 ; PC := 32
	30	[488]	LOADK    	R0 K10 ; R0 := "https://store.wf.qq.com/?module=recharge"
	31	[488]	JMP      	33 ; PC := 33
	32	[490]	LOADK    	R0 K11 ; R0 := "https://warframe.com/gameplatinum?"
	33	[493]	SELF     	R2 R1 K12 ; R3 := R1; R2 := R1[0x1012c7ec]
	34	[493]	CALL     	R2 2 2 ; R2 := R2(R3)
	35	[494]	MOVE     	R3 R2 ; R3 := R2
	36	[494]	SELF     	R4 R1 K13 ; R5 := R1; R4 := R1[0x37346c0e]
	37	[494]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[494]	CONCAT   	R2 R3 R4 ; R2 := R3 .. R4
	39	[497]	LOADK    	R3 K0 ; R3 := ""
	40	[498]	SELF     	R4 R1 K14 ; R5 := R1; R4 := R1[0x80563238]
	41	[498]	CALL     	R4 2 2 ; R4 := R4(R5)
	42	[499]	GETGLOBAL	R5 K15 ; R5 := 0x7b998233
	43	[499]	MOVE     	R6 R4 ; R6 := R4
	44	[499]	CALL     	R5 2 2 ; R5 := R5(R6)
	45	[499]	TEST     	R5 1 ; if R5 then PC := 54
	46	[499]	JMP      	54 ; PC := 54
	47	[500]	SELF     	R5 R4 K16 ; R6 := R4; R5 := R4[0x104b2223]
	48	[500]	CALL     	R5 2 2 ; R5 := R5(R6)
	49	[501]	LOADK    	R6 K17 ; R6 := "&couponSku="
	50	[501]	GETGLOBAL	R7 K18 ; R7 := 0x64fb1586
	51	[501]	GETTABLE 	R8 R5 K19 ; R8 := R5["mCouponSku"]
	52	[501]	CALL     	R7 2 2 ; R7 := R7(R8)
	53	[501]	CONCAT   	R3 R6 R7 ; R3 := R6 .. R7
	54	[504]	LOADK    	R6 K0 ; R6 := ""
	55	[505]	GETGLOBAL	R7 K8 ; R7 := 0x34291f5c
	56	[505]	GETTABLE 	R7 R7 K20 ; R7 := R7[0xbcd06415]
	57	[505]	CALL     	R7 1 2 ; R7 := R7()
	58	[505]	TEST     	R7 0 ; if not R7 then PC := 61
	59	[505]	JMP      	61 ; PC := 61
	60	[506]	LOADK    	R6 K21 ; R6 := "&epic=1"
	61	[509]	OP_LOADBOOL	R7 0 0 ; R7 := false
	62	[510]	LOADK    	R8 K0 ; R8 := ""
	63	[512]	GETGLOBAL	R9 K8 ; R9 := 0x34291f5c
	64	[512]	GETTABLE 	R9 R9 K22 ; R9 := R9[0x9ad21ae9]
	65	[512]	CALL     	R9 1 2 ; R9 := R9()
	66	[512]	TEST     	R9 0 ; if not R9 then PC := 75
	67	[512]	JMP      	75 ; PC := 75
	68	[513]	GETUPVAL 	R9 U1 ; R9 := U1
	69	[513]	GETTABLE 	R9 R9 K23 ; R9 := R9[0x49d3de6e]
	70	[513]	LOADK    	R10 K0 ; R10 := ""
	71	[513]	CALL     	R9 2 3 ; R9,R10 := R9(R10)
	72	[513]	MOVE     	R8 R10 ; R8 := R10
	73	[513]	MOVE     	R7 R9 ; R7 := R9
	74	[513]	JMP      	121 ; PC := 121
	75	[514]	GETGLOBAL	R9 K8 ; R9 := 0x34291f5c
	76	[514]	GETTABLE 	R9 R9 K24 ; R9 := R9[0x86647daf]
	77	[514]	CALL     	R9 1 2 ; R9 := R9()
	78	[514]	TEST     	R9 0 ; if not R9 then PC := 87
	79	[514]	JMP      	87 ; PC := 87
	80	[515]	GETUPVAL 	R9 U1 ; R9 := U1
	81	[515]	GETTABLE 	R9 R9 K23 ; R9 := R9[0x49d3de6e]
	82	[515]	LOADK    	R10 K25 ; R10 := "PLATINUM"
	83	[515]	CALL     	R9 2 3 ; R9,R10 := R9(R10)
	84	[515]	MOVE     	R8 R10 ; R8 := R10
	85	[515]	MOVE     	R7 R9 ; R7 := R9
	86	[515]	JMP      	121 ; PC := 121
	87	[516]	GETGLOBAL	R9 K8 ; R9 := 0x34291f5c
	88	[516]	GETTABLE 	R9 R9 K26 ; R9 := R9[0xc84fa15a]
	89	[516]	CALL     	R9 1 2 ; R9 := R9()
	90	[516]	TEST     	R9 0 ; if not R9 then PC := 99
	91	[516]	JMP      	99 ; PC := 99
	92	[517]	GETUPVAL 	R9 U1 ; R9 := U1
	93	[517]	GETTABLE 	R9 R9 K23 ; R9 := R9[0x49d3de6e]
	94	[517]	LOADK    	R10 K25 ; R10 := "PLATINUM"
	95	[517]	CALL     	R9 2 3 ; R9,R10 := R9(R10)
	96	[517]	MOVE     	R8 R10 ; R8 := R10
	97	[517]	MOVE     	R7 R9 ; R7 := R9
	98	[517]	JMP      	121 ; PC := 121
	99	[518]	GETGLOBAL	R9 K8 ; R9 := 0x34291f5c
	100	[518]	GETTABLE 	R9 R9 K9 ; R9 := R9[0xa7a2e381]
	101	[518]	CALL     	R9 1 2 ; R9 := R9()
	102	[518]	TEST     	R9 0 ; if not R9 then PC := 111
	103	[518]	JMP      	111 ; PC := 111
	104	[519]	GETUPVAL 	R9 U1 ; R9 := U1
	105	[519]	GETTABLE 	R9 R9 K23 ; R9 := R9[0x49d3de6e]
	106	[519]	MOVE     	R10 R0 ; R10 := R0
	107	[519]	CALL     	R9 2 3 ; R9,R10 := R9(R10)
	108	[519]	MOVE     	R8 R10 ; R8 := R10
	109	[519]	MOVE     	R7 R9 ; R7 := R9
	110	[519]	JMP      	121 ; PC := 121
	111	[521]	GETUPVAL 	R9 U1 ; R9 := U1
	112	[521]	GETTABLE 	R9 R9 K23 ; R9 := R9[0x49d3de6e]
	113	[521]	MOVE     	R10 R0 ; R10 := R0
	114	[521]	MOVE     	R11 R2 ; R11 := R2
	115	[521]	MOVE     	R12 R3 ; R12 := R3
	116	[521]	MOVE     	R13 R6 ; R13 := R6
	117	[521]	CONCAT   	R10 R10 R13 ; R10 := R10 .. R11 .. R12 .. R13
	118	[521]	CALL     	R9 2 3 ; R9,R10 := R9(R10)
	119	[521]	MOVE     	R8 R10 ; R8 := R10
	120	[521]	MOVE     	R7 R9 ; R7 := R9
	121	[524]	TEST     	R7 1 ; if R7 then PC := 128
	122	[524]	JMP      	128 ; PC := 128
	123	[525]	GETUPVAL 	R9 U1 ; R9 := U1
	124	[525]	GETTABLE 	R9 R9 K27 ; R9 := R9[0xe0cba3ca]
	125	[525]	MOVE     	R10 R8 ; R10 := R8
	126	[525]	LOADK    	R11 K28 ; R11 := "PurchasePlatinumFailed"
	127	[525]	CALL     	R9 3 1 ; R9(R10,R11)
	128	[527]	RETURN   	R0 1 ; return 

function #5 <?:529,531> (3 instructions, 12 bytes at 00000160888D1450)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[530]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[530]	CALL     	R0 1 1 ; R0()
	3	[531]	RETURN   	R0 1 ; return 

function #6 <?:533,545> (41 instructions, 164 bytes at 00000160888D1520)
1 param, 6 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[534]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[534]	MOVE     	R2 R0 ; R2 := R0
	3	[534]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[534]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 24
	5	[534]	JMP      	24 ; PC := 24
	6	[535]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[535]	CALL     	R1 1 1 ; R1()
	8	[536]	GETGLOBAL	R1 K3 ; R1 := 0xcb79539e
	9	[536]	EQ       	1 R1 K4 ; if R1 == nil then PC := 39
	10	[536]	JMP      	39 ; PC := 39
	11	[536]	GETGLOBAL	R1 K5 ; R1 := mPurchaseOrigin
	12	[536]	EQ       	1 R1 K4 ; if R1 == nil then PC := 39
	13	[536]	JMP      	39 ; PC := 39
	14	[537]	GETGLOBAL	R1 K3 ; R1 := 0xcb79539e
	15	[537]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x8b8fb8b7]
	16	[537]	GETGLOBAL	R3 K7 ; R3 := 0x0469f296
	17	[537]	LOADK    	R4 K8 ; R4 := "INSUFFICIENT_PLAT_POPUP"
	18	[537]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[537]	GETGLOBAL	R4 K5 ; R4 := mPurchaseOrigin
	20	[537]	LOADK    	R5 K9 ; R5 := "_STORE_OK"
	21	[537]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	22	[537]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	23	[538]	JMP      	39 ; PC := 39
	24	[540]	GETGLOBAL	R1 K3 ; R1 := 0xcb79539e
	25	[540]	EQ       	1 R1 K4 ; if R1 == nil then PC := 39
	26	[540]	JMP      	39 ; PC := 39
	27	[540]	GETGLOBAL	R1 K5 ; R1 := mPurchaseOrigin
	28	[540]	EQ       	1 R1 K4 ; if R1 == nil then PC := 39
	29	[540]	JMP      	39 ; PC := 39
	30	[541]	GETGLOBAL	R1 K3 ; R1 := 0xcb79539e
	31	[541]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x8b8fb8b7]
	32	[541]	GETGLOBAL	R3 K7 ; R3 := 0x0469f296
	33	[541]	LOADK    	R4 K8 ; R4 := "INSUFFICIENT_PLAT_POPUP"
	34	[541]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[541]	GETGLOBAL	R4 K5 ; R4 := mPurchaseOrigin
	36	[541]	LOADK    	R5 K10 ; R5 := "_STORE_CANCEL"
	37	[541]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	38	[541]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	39	[544]	LOADNIL  	R1 R1 ; R1 := nil
	40	[544]	SETGLOBALHASH	R1 K5 ; mPurchaseOrigin := R1
	41	[545]	RETURN   	R0 1 ; return 

function #7 <?:547,569> (54 instructions, 216 bytes at 00000160888D18B0)
1 param, 15 slots, 2 upvalues, 0 locals, 22 constants, 0 functions
	1	[548]	LOADK    	R1 K0 ; R1 := ""
	2	[550]	GETGLOBAL	R2 K1 ; R2 := 0x34291f5c
	3	[550]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xc84fa15a]
	4	[550]	CALL     	R2 1 2 ; R2 := R2()
	5	[550]	TEST     	R2 0 ; if not R2 then PC := 9
	6	[550]	JMP      	9 ; PC := 9
	7	[551]	LOADK    	R1 K3 ; R1 := "/Lotus/Language/Menu/Store_LaunchingBrowser_Switch"
	8	[551]	JMP      	10 ; PC := 10
	9	[553]	LOADK    	R1 K4 ; R1 := "/Lotus/Language/Menu/Store_LaunchingBrowser_Windows"
	10	[556]	GETGLOBAL	R2 K5 ; R2 := 0x76ea806b
	11	[556]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x3f3ae64c]
	12	[556]	LOADK    	R4 := 0.000000
	13	[556]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	14	[557]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	15	[557]	MOVE     	R4 R2 ; R4 := R2
	16	[557]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[557]	TEST     	R3 1 ; if R3 then PC := 48
	18	[557]	JMP      	48 ; PC := 48
	19	[558]	SELF     	R3 R2 K8 ; R4 := R2; R3 := R2[0x80563238]
	20	[558]	CALL     	R3 2 2 ; R3 := R3(R4)
	21	[559]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	22	[559]	MOVE     	R5 R3 ; R5 := R3
	23	[559]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[559]	TEST     	R4 1 ; if R4 then PC := 48
	25	[559]	JMP      	48 ; PC := 48
	26	[560]	SELF     	R4 R3 K9 ; R5 := R3; R4 := R3[0x104b2223]
	27	[560]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[561]	GETGLOBAL	R5 K1 ; R5 := 0x34291f5c
	29	[561]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x397b920f]
	30	[561]	GETTABLE 	R6 R4 K11 ; R6 := R4["mExpiry"]
	31	[561]	CALL     	R5 2 2 ; R5 := R5(R6)
	32	[562]	LT       	0 K12 R5 ; if 0.000000 >= R5 then PC := 48
	33	[562]	JMP      	48 ; PC := 48
	34	[563]	GETGLOBAL	R6 K13 ; R6 := 0xae91e43b
	35	[563]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x42b04007]
	36	[563]	LOADK    	R8 K15 ; R8 := "/Lotus/Language/Menu/Store_LaunchingBrowserDiscount_Windows"
	37	[563]	OP_LOADBOOL	R9 0 0 ; R9 := false
	38	[563]	NEWTABLE 	R10 0 1 ; R10 := {}
	39	[563]	GETUPVAL 	R11 U0 ; R11 := U0
	40	[563]	GETTABLE 	R11 R11 K17 ; R11 := R11[0x817b1503]
	41	[563]	GETGLOBAL	R12 K13 ; R12 := 0xae91e43b
	42	[563]	MOVE     	R13 R5 ; R13 := R5
	43	[563]	LOADK    	R14 K18 ; R14 := "HoursOrMinutes"
	44	[563]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	45	[563]	SETTABLE 	R10 K16 R11 ; R10["TIMELEFT"] := R11
	46	[563]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	47	[563]	MOVE     	R1 R6 ; R1 := R6
	48	[567]	SETGLOBALHASH	R0 K19 ; mPurchaseOrigin := R0
	49	[568]	GETUPVAL 	R6 U1 ; R6 := U1
	50	[568]	GETTABLE 	R6 R6 K20 ; R6 := R6[0xf616a184]
	51	[568]	MOVE     	R7 R1 ; R7 := R1
	52	[568]	LOADK    	R8 K21 ; R8 := "PurchasePlatinumOk"
	53	[568]	CALL     	R6 3 1 ; R6(R7,R8)
	54	[569]	RETURN   	R0 1 ; return 

function #8 <?:571,573> (4 instructions, 16 bytes at 000001608D7960B0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[572]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[572]	MOVE     	R2 R0 ; R2 := R0
	3	[572]	CALL     	R1 2 1 ; R1(R2)
	4	[573]	RETURN   	R0 1 ; return 

function #9 <?:576,589> (26 instructions, 104 bytes at 000001608D796180)
0 params, 5 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[577]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[577]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x86647daf]
	3	[577]	CALL     	R0 1 2 ; R0 := R0()
	4	[577]	TEST     	R0 0 ; if not R0 then PC := 26
	5	[577]	JMP      	26 ; PC := 26
	6	[578]	OP_LOADBOOL	R0 0 0 ; R0 := false
	7	[579]	LOADK    	R1 K2 ; R1 := ""
	8	[581]	GETGLOBAL	R2 K0 ; R2 := 0x34291f5c
	9	[581]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x86647daf]
	10	[581]	CALL     	R2 1 2 ; R2 := R2()
	11	[581]	TEST     	R2 0 ; if not R2 then PC := 19
	12	[581]	JMP      	19 ; PC := 19
	13	[582]	GETUPVAL 	R2 U0 ; R2 := U0
	14	[582]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x49d3de6e]
	15	[582]	LOADK    	R3 K4 ; R3 := "PRIME_ACCESS"
	16	[582]	CALL     	R2 2 3 ; R2,R3 := R2(R3)
	17	[582]	MOVE     	R1 R3 ; R1 := R3
	18	[582]	MOVE     	R0 R2 ; R0 := R2
	19	[585]	TEST     	R0 1 ; if R0 then PC := 26
	20	[585]	JMP      	26 ; PC := 26
	21	[586]	GETUPVAL 	R2 U0 ; R2 := U0
	22	[586]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xe0cba3ca]
	23	[586]	MOVE     	R3 R1 ; R3 := R1
	24	[586]	LOADK    	R4 K6 ; R4 := "PurchasePlatinumFailed"
	25	[586]	CALL     	R2 3 1 ; R2(R3,R4)
	26	[589]	RETURN   	R0 1 ; return 

function #10 <?:591,637> (92 instructions, 368 bytes at 000001608D796390)
5 params, 13 slots, 3 upvalues, 0 locals, 40 constants, 0 functions
	1	[592]	GETGLOBAL	R5 K0 ; R5 := 0x34291f5c
	2	[592]	GETTABLE 	R5 R5 K1 ; R5 := R5[0xe27b35bb]
	3	[592]	CALL     	R5 1 2 ; R5 := R5()
	4	[593]	SETTABLE 	R5 K2 K3 ; R5["dialogType"] := 0.000000
	5	[594]	LOADK    	R6 K4 ; R6 := ""
	6	[595]	LOADK    	R7 K5 ; R7 := "ConfirmPopup"
	7	[596]	GETUPVAL 	R8 U0 ; R8 := U0
	8	[596]	GETTABLE 	R8 R8 K6 ; R8 := R8["PRIME_BUCKS"]
	9	[596]	EQ       	0 R0 R8 ; if R0 ~= R8 then PC := 13
	10	[596]	JMP      	13 ; PC := 13
	11	[597]	LOADK    	R6 K7 ; R6 := "/Lotus/Language/Menu/Global_InsufficientPrimeBucks"
	12	[597]	JMP      	57 ; PC := 57
	13	[598]	GETUPVAL 	R8 U0 ; R8 := U0
	14	[598]	GETTABLE 	R8 R8 K8 ; R8 := R8["PREMIUM_CREDITS"]
	15	[598]	EQ       	0 R0 R8 ; if R0 ~= R8 then PC := 32
	16	[598]	JMP      	32 ; PC := 32
	17	[599]	SETGLOBALHASH	R4 K9 ; mPurchaseOrigin := R4
	18	[601]	TEST     	R1 0 ; if not R1 then PC := 22
	19	[601]	JMP      	22 ; PC := 22
	20	[602]	LOADK    	R6 K10 ; R6 := "/Lotus/Language/Menu/Global_InsufficientPurchasedPlatinum"
	21	[602]	JMP      	27 ; PC := 27
	22	[603]	TEST     	R3 0 ; if not R3 then PC := 26
	23	[603]	JMP      	26 ; PC := 26
	24	[604]	MOVE     	R6 R2 ; R6 := R2
	25	[604]	JMP      	27 ; PC := 27
	26	[606]	LOADK    	R6 K11 ; R6 := "/Lotus/Language/Menu/Global_InsufficientPlatinum"
	27	[608]	SETTABLE 	R5 K2 K12 ; R5["dialogType"] := 1.000000
	28	[609]	SETTABLE 	R5 K13 K14 ; R5["firstString"] := "/Lotus/Language/Menu/Store_GetPlatinum"
	29	[610]	SETTABLE 	R5 K15 K16 ; R5["secondString"] := "/Lotus/Language/Menu/ItemSelection_OK"
	30	[611]	LOADK    	R7 K17 ; R7 := "ConfirmPopupNotEnoughPlatinum"
	31	[611]	JMP      	57 ; PC := 57
	32	[612]	GETUPVAL 	R8 U0 ; R8 := U0
	33	[612]	GETTABLE 	R8 R8 K18 ; R8 := R8["REGULAR_CREDITS"]
	34	[612]	EQ       	0 R0 R8 ; if R0 ~= R8 then PC := 38
	35	[612]	JMP      	38 ; PC := 38
	36	[613]	LOADK    	R6 K19 ; R6 := "/Lotus/Language/Menu/Global_InsufficientCredits"
	37	[613]	JMP      	57 ; PC := 57
	38	[614]	GETUPVAL 	R8 U0 ; R8 := U0
	39	[614]	GETTABLE 	R8 R8 K20 ; R8 := R8["STANDING"]
	40	[614]	EQ       	0 R0 R8 ; if R0 ~= R8 then PC := 44
	41	[614]	JMP      	44 ; PC := 44
	42	[615]	LOADK    	R6 K21 ; R6 := "/Lotus/Language/Menu/Global_InsufficientStanding"
	43	[615]	JMP      	57 ; PC := 57
	44	[616]	GETUPVAL 	R8 U0 ; R8 := U0
	45	[616]	GETTABLE 	R8 R8 K22 ; R8 := R8["PRIME_TOKENS"]
	46	[616]	EQ       	0 R0 R8 ; if R0 ~= R8 then PC := 50
	47	[616]	JMP      	50 ; PC := 50
	48	[617]	LOADK    	R6 K23 ; R6 := "/Lotus/Language/Store/Global_InsufficientPrimeTokens"
	49	[617]	JMP      	57 ; PC := 57
	50	[618]	GETUPVAL 	R8 U0 ; R8 := U0
	51	[618]	GETTABLE 	R8 R8 K24 ; R8 := R8["FOCUS_XP"]
	52	[618]	EQ       	0 R0 R8 ; if R0 ~= R8 then PC := 56
	53	[618]	JMP      	56 ; PC := 56
	54	[619]	LOADK    	R6 K25 ; R6 := "/Lotus/Language/Store/Global_InsufficientFocusXP"
	55	[619]	JMP      	57 ; PC := 57
	56	[621]	LOADK    	R6 K26 ; R6 := "/Lotus/Language/Menu/Global_InsufficientFunds"
	57	[624]	EQ       	0 R2 K27 ; if R2 ~= nil then PC := 75
	58	[624]	JMP      	75 ; PC := 75
	59	[625]	GETGLOBAL	R8 K28 ; R8 := _T
	60	[625]	GETTABLE 	R8 R8 K29 ; R8 := R8["GenericVendor_NameOverride"]
	61	[625]	TEST     	R8 0 ; if not R8 then PC := 68
	62	[625]	JMP      	68 ; PC := 68
	63	[626]	GETGLOBAL	R8 K28 ; R8 := _T
	64	[626]	GETTABLE 	R2 R8 K29 ; R2 := R8["GenericVendor_NameOverride"]
	65	[627]	GETGLOBAL	R8 K28 ; R8 := _T
	66	[627]	SETTABLE 	R8 K29 K27 ; R8["GenericVendor_NameOverride"] := nil
	67	[627]	JMP      	75 ; PC := 75
	68	[629]	GETUPVAL 	R8 U1 ; R8 := U1
	69	[629]	GETTABLE 	R8 R8 K30 ; R8 := R8[0xc7ca0123]
	70	[629]	GETGLOBAL	R9 K31 ; R9 := 0xae91e43b
	71	[629]	GETGLOBAL	R10 K32 ; R10 := mPurchaseParams
	72	[629]	GETTABLE 	R10 R10 K33 ; R10 := R10["mStoreItem"]
	73	[629]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	74	[629]	MOVE     	R2 R8 ; R2 := R8
	75	[633]	GETGLOBAL	R8 K31 ; R8 := 0xae91e43b
	76	[633]	SELF     	R8 R8 K35 ; R9 := R8; R8 := R8[0x42b04007]
	77	[633]	MOVE     	R10 R6 ; R10 := R6
	78	[633]	OP_LOADBOOL	R11 0 0 ; R11 := false
	79	[633]	NEWTABLE 	R12 0 1 ; R12 := {}
	80	[633]	SETTABLE 	R12 K36 R2 ; R12["ITEM"] := R2
	81	[633]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	82	[633]	SETTABLE 	R5 K34 R8 ; R5["locString"] := R8
	83	[634]	SELF     	R8 R5 K37 ; R9 := R5; R8 := R5[0xe6ccc5b9]
	84	[634]	MOVE     	R10 R7 ; R10 := R7
	85	[634]	CALL     	R8 3 1 ; R8(R9,R10)
	86	[635]	GETUPVAL 	R8 U2 ; R8 := U2
	87	[635]	GETTABLE 	R8 R8 K38 ; R8 := R8[0xe99b84e7]
	88	[635]	MOVE     	R9 R5 ; R9 := R5
	89	[635]	CALL     	R8 2 1 ; R8(R9)
	90	[636]	GETGLOBAL	R8 K28 ; R8 := _T
	91	[636]	SETTABLE 	R8 K39 K27 ; R8["PurchaseSuccessLocOverride"] := nil
	92	[637]	RETURN   	R0 1 ; return 

function #11 <?:639,645> (20 instructions, 80 bytes at 000001608D796D00)
5 params, 11 slots, 3 upvalues, 0 locals, 3 constants, 0 functions
	1	[643]	SETUPVAL 	R5 U0 ; U0 := R5
	2	[644]	GETUPVAL 	R5 U1 ; R5 := U1
	3	[644]	MOVE     	R6 R0 ; R6 := R0
	4	[644]	GETUPVAL 	R7 U2 ; R7 := U2
	5	[644]	GETTABLE 	R7 R7 K0 ; R7 := R7[0x06d055f9]
	6	[644]	GETGLOBAL	R8 K1 ; R8 := 0x03f57322
	7	[644]	MOVE     	R9 R1 ; R9 := R1
	8	[644]	CALL     	R8 2 2 ; R8 := R8(R9)
	9	[644]	EQ       	1 R8 K2 ; if R8 == 1.000000 then PC := 12
	10	[644]	JMP      	12 ; PC := 12
	11	[644]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 12
	12	[644]	OP_LOADBOOL	R8 1 0 ; R8 := true
	13	[644]	OP_LOADBOOL	R9 1 0 ; R9 := true
	14	[644]	OP_LOADBOOL	R10 0 0 ; R10 := false
	15	[644]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	16	[644]	MOVE     	R8 R2 ; R8 := R2
	17	[644]	MOVE     	R9 R3 ; R9 := R3
	18	[644]	MOVE     	R10 R4 ; R10 := R4
	19	[644]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	20	[645]	RETURN   	R0 1 ; return 

function #12 <?:647,657> (38 instructions, 152 bytes at 000001608D796E90)
0 params, 12 slots, 2 upvalues, 0 locals, 17 constants, 0 functions
	1	[648]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[648]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xbecef34c]
	3	[648]	GETGLOBAL	R1 K1 ; R1 := mPurchaseParams
	4	[648]	GETTABLE 	R1 R1 K2 ; R1 := R1["mStoreItem"]
	5	[648]	CALL     	R0 2 3 ; R0,R1 := R0(R1)
	6	[649]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	7	[649]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x42b04007]
	8	[649]	GETGLOBAL	R4 K5 ; R4 := 0x64fb1586
	9	[649]	GETGLOBAL	R5 K1 ; R5 := mPurchaseParams
	10	[649]	GETTABLE 	R5 R5 K2 ; R5 := R5["mStoreItem"]
	11	[649]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0xd3a9d01f]
	12	[649]	CALL     	R5 2 0 ; R5,... := R5(R6)
	13	[649]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	14	[649]	OP_LOADBOOL	R5 0 0 ; R5 := false
	15	[649]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	16	[651]	GETGLOBAL	R3 K7 ; R3 := 0x76ea806b
	17	[651]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x3f3ae64c]
	18	[651]	LOADK    	R5 := 0.000000
	19	[651]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	20	[652]	SELF     	R4 R3 K9 ; R5 := R3; R4 := R3[0x80563238]
	21	[652]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[654]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	23	[654]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x42b04007]
	24	[654]	LOADK    	R7 K10 ; R7 := "/Lotus/Language/Menu/BuyItem_XPNeeded"
	25	[654]	OP_LOADBOOL	R8 0 0 ; R8 := false
	26	[654]	NEWTABLE 	R9 0 3 ; R9 := {}
	27	[654]	SETTABLE 	R9 K11 R2 ; R9["ITEM_NAME"] := R2
	28	[654]	SETTABLE 	R9 K12 R1 ; R9["XP_REQUIRED"] := R1
	29	[654]	SELF     	R10 R4 K14 ; R11 := R4; R10 := R4[0xefee6c91]
	30	[654]	CALL     	R10 2 2 ; R10 := R10(R11)
	31	[654]	SETTABLE 	R9 K13 R10 ; R9["XP_CURRENT"] := R10
	32	[654]	CALL     	R5 5 2 ; R5 := R5(R6,R7,R8,R9)
	33	[656]	GETUPVAL 	R6 U1 ; R6 := U1
	34	[656]	GETTABLE 	R6 R6 K15 ; R6 := R6[0xe0cba3ca]
	35	[656]	MOVE     	R7 R5 ; R7 := R5
	36	[656]	LOADK    	R8 K16 ; R8 := "ConfirmPopup"
	37	[656]	CALL     	R6 3 1 ; R6(R7,R8)
	38	[657]	RETURN   	R0 1 ; return 

function #13 <?:659,682> (46 instructions, 184 bytes at 000001608D797270)
1 param, 11 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[660]	GETGLOBAL	R1 K0 ; R1 := 0x76ea806b
	2	[660]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x3f3ae64c]
	3	[660]	LOADK    	R3 := 0.000000
	4	[660]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[661]	LOADNIL  	R2 R2 ; R2 := nil
	6	[662]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	7	[662]	MOVE     	R4 R1 ; R4 := R1
	8	[662]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[662]	TEST     	R3 1 ; if R3 then PC := 14
	10	[662]	JMP      	14 ; PC := 14
	11	[663]	SELF     	R3 R1 K3 ; R4 := R1; R3 := R1[0x80563238]
	12	[663]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[663]	MOVE     	R2 R3 ; R2 := R3
	14	[666]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	15	[666]	MOVE     	R4 R2 ; R4 := R2
	16	[666]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[666]	TEST     	R3 0 ; if not R3 then PC := 21
	18	[666]	JMP      	21 ; PC := 21
	19	[667]	LOADNIL  	R3 R3 ; R3 := nil
	20	[667]	RETURN   	R3 2 ; return R3 
	21	[670]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x69727e0b]
	22	[670]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[671]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	24	[671]	MOVE     	R5 R3 ; R5 := R3
	25	[671]	CALL     	R4 2 2 ; R4 := R4(R5)
	26	[671]	TEST     	R4 0 ; if not R4 then PC := 30
	27	[671]	JMP      	30 ; PC := 30
	28	[672]	LOADNIL  	R4 R4 ; R4 := nil
	29	[672]	RETURN   	R4 2 ; return R4 
	30	[675]	GETGLOBAL	R4 K5 ; R4 := 0xc8802016
	31	[675]	GETTABLE 	R5 R3 K6 ; R5 := R3["mVoidTraders"]
	32	[675]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	33	[675]	JMP      	42 ; PC := 42
	34	[676]	GETGLOBAL	R9 K7 ; R9 := 0x64fb1586
	35	[676]	MOVE     	R10 R0 ; R10 := R0
	36	[676]	CALL     	R9 2 2 ; R9 := R9(R10)
	37	[676]	GETTABLE 	R10 R8 K8 ; R10 := R8["mId"]
	38	[676]	GETTABLE 	R10 R10 K8 ; R10 := R10["mId"]
	39	[676]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 42
	40	[676]	JMP      	42 ; PC := 42
	41	[677]	RETURN   	R8 2 ; return R8 
	42	[675]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 34; R6 := R7 end
	43	[678]	JMP      	34 ; PC := 34
	44	[681]	LOADNIL  	R9 R9 ; R9 := nil
	45	[681]	RETURN   	R9 2 ; return R9 
	46	[682]	RETURN   	R0 1 ; return 

function #14 <?:684,717> (58 instructions, 232 bytes at 000001608D797540)
1 param, 14 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[685]	GETGLOBAL	R1 K0 ; R1 := 0x76ea806b
	2	[685]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x3f3ae64c]
	3	[685]	LOADK    	R3 := 0.000000
	4	[685]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[686]	LOADNIL  	R2 R2 ; R2 := nil
	6	[687]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	7	[687]	MOVE     	R4 R1 ; R4 := R1
	8	[687]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[687]	TEST     	R3 1 ; if R3 then PC := 14
	10	[687]	JMP      	14 ; PC := 14
	11	[688]	SELF     	R3 R1 K3 ; R4 := R1; R3 := R1[0x80563238]
	12	[688]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[688]	MOVE     	R2 R3 ; R2 := R3
	14	[691]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	15	[691]	MOVE     	R4 R2 ; R4 := R2
	16	[691]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[691]	TEST     	R3 0 ; if not R3 then PC := 21
	18	[691]	JMP      	21 ; PC := 21
	19	[692]	LOADNIL  	R3 R3 ; R3 := nil
	20	[692]	RETURN   	R3 2 ; return R3 
	21	[695]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x69727e0b]
	22	[695]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[696]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	24	[696]	MOVE     	R5 R3 ; R5 := R3
	25	[696]	CALL     	R4 2 2 ; R4 := R4(R5)
	26	[696]	TEST     	R4 0 ; if not R4 then PC := 30
	27	[696]	JMP      	30 ; PC := 30
	28	[697]	LOADNIL  	R4 R4 ; R4 := nil
	29	[697]	RETURN   	R4 2 ; return R4 
	30	[700]	GETGLOBAL	R4 K5 ; R4 := 0x64fb1586
	31	[700]	MOVE     	R5 R0 ; R5 := R0
	32	[700]	CALL     	R4 2 2 ; R4 := R4(R5)
	33	[701]	GETGLOBAL	R5 K6 ; R5 := 0xc8802016
	34	[701]	GETTABLE 	R6 R3 K7 ; R6 := R3["mPrimeVaultTraders"]
	35	[701]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	36	[701]	JMP      	54 ; PC := 54
	37	[702]	GETTABLE 	R10 R9 K8 ; R10 := R9["mId"]
	38	[702]	GETTABLE 	R10 R10 K8 ; R10 := R10["mId"]
	39	[702]	EQ       	0 R4 R10 ; if R4 ~= R10 then PC := 54
	40	[702]	JMP      	54 ; PC := 54
	41	[704]	GETGLOBAL	R10 K9 ; R10 := 0x34291f5c
	42	[704]	GETTABLE 	R10 R10 K10 ; R10 := R10[0x397b920f]
	43	[704]	GETTABLE 	R11 R9 K11 ; R11 := R9["mExpiry"]
	44	[704]	CALL     	R10 2 2 ; R10 := R10(R11)
	45	[705]	LOADNIL  	R11 R11 ; R11 := nil
	46	[706]	LT       	0 K12 R10 ; if 0.000000 >= R10 then PC := 50
	47	[706]	JMP      	50 ; PC := 50
	48	[707]	GETTABLE 	R11 R9 K13 ; R11 := R9["mManifest"]
	49	[707]	JMP      	51 ; PC := 51
	50	[709]	GETTABLE 	R11 R9 K14 ; R11 := R9["mNextManifest"]
	51	[712]	MOVE     	R12 R9 ; R12 := R9
	52	[712]	MOVE     	R13 R11 ; R13 := R11
	53	[712]	RETURN   	R12 3 ; return R12, R13 
	54	[701]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 37; R7 := R8 end
	55	[713]	JMP      	37 ; PC := 37
	56	[716]	LOADNIL  	R12 R12 ; R12 := nil
	57	[716]	RETURN   	R12 2 ; return R12 
	58	[717]	RETURN   	R0 1 ; return 

function #15 <?:719,1031> (748 instructions, 2992 bytes at 000001608D797910)
1 param, 73 slots, 4 upvalues, 0 locals, 99 constants, 0 functions
	1	[720]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[721]	NEWTABLE 	R2 0 0 ; R2 := {}
	3	[722]	LOADK    	R3 := 1.000000
	4	[723]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	5	[723]	SETGLOBALHASH	R4 K0 ; mBaseSourceType := R4
	6	[726]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	7	[726]	EQ       	1 R4 K3 ; if R4 == 0.000000 then PC := 45
	8	[726]	JMP      	45 ; PC := 45
	9	[727]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	10	[727]	EQ       	1 R4 K4 ; if R4 == 4.000000 then PC := 45
	11	[727]	JMP      	45 ; PC := 45
	12	[728]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	13	[728]	EQ       	1 R4 K5 ; if R4 == 5.000000 then PC := 45
	14	[728]	JMP      	45 ; PC := 45
	15	[729]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	16	[729]	EQ       	1 R4 K6 ; if R4 == 6.000000 then PC := 45
	17	[729]	JMP      	45 ; PC := 45
	18	[730]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	19	[730]	EQ       	1 R4 K7 ; if R4 == 8.000000 then PC := 45
	20	[730]	JMP      	45 ; PC := 45
	21	[731]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	22	[731]	EQ       	1 R4 K8 ; if R4 == 10.000000 then PC := 45
	23	[731]	JMP      	45 ; PC := 45
	24	[732]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	25	[732]	EQ       	1 R4 K9 ; if R4 == 11.000000 then PC := 45
	26	[732]	JMP      	45 ; PC := 45
	27	[733]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	28	[733]	EQ       	1 R4 K10 ; if R4 == 12.000000 then PC := 45
	29	[733]	JMP      	45 ; PC := 45
	30	[734]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	31	[734]	EQ       	1 R4 K11 ; if R4 == 13.000000 then PC := 45
	32	[734]	JMP      	45 ; PC := 45
	33	[735]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	34	[735]	EQ       	1 R4 K12 ; if R4 == 14.000000 then PC := 45
	35	[735]	JMP      	45 ; PC := 45
	36	[736]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	37	[736]	EQ       	1 R4 K13 ; if R4 == 15.000000 then PC := 45
	38	[736]	JMP      	45 ; PC := 45
	39	[737]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	40	[737]	EQ       	1 R4 K14 ; if R4 == 16.000000 then PC := 45
	41	[737]	JMP      	45 ; PC := 45
	42	[738]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSource"]
	43	[738]	EQ       	0 R4 K15 ; if R4 ~= 17.000000 then PC := 200
	44	[738]	JMP      	200 ; PC := 200
	45	[741]	LOADNIL  	R4 R6 ; R4 := R5 := R6 := nil
	46	[744]	GETTABLE 	R7 R0 K16 ; R7 := R0["mStoreItem"]
	47	[744]	SELF     	R7 R7 K17 ; R8 := R7; R7 := R7[0xc3bbc5cb]
	48	[744]	CALL     	R7 2 2 ; R7 := R7(R8)
	49	[744]	TEST     	R7 0 ; if not R7 then PC := 53
	50	[744]	JMP      	53 ; PC := 53
	51	[745]	GETGLOBAL	R7 K18 ; R7 := mPurchaseParams
	52	[745]	GETTABLE 	R6 R7 K19 ; R6 := R7["mDurability"]
	53	[748]	GETTABLE 	R7 R0 K20 ; R7 := R0["mCouponId"]
	54	[748]	GETTABLE 	R7 R7 K21 ; R7 := R7["mId"]
	55	[748]	EQ       	1 R7 K22 ; if R7 == "" then PC := 58
	56	[748]	JMP      	58 ; PC := 58
	57	[748]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 58
	58	[748]	OP_LOADBOOL	R7 1 0 ; R7 := true
	59	[749]	GETUPVAL 	R8 U0 ; R8 := U0
	60	[749]	GETTABLE 	R8 R8 K23 ; R8 := R8[0xe9947039]
	61	[749]	GETTABLE 	R9 R0 K16 ; R9 := R0["mStoreItem"]
	62	[749]	MOVE     	R10 R6 ; R10 := R6
	63	[749]	MOVE     	R11 R7 ; R11 := R7
	64	[749]	GETGLOBAL	R12 K24 ; R12 := _T
	65	[749]	GETTABLE 	R12 R12 K25 ; R12 := R12["purchasedItems"]
	66	[749]	CALL     	R8 5 3 ; R8,R9 := R8(R9,R10,R11,R12)
	67	[749]	MOVE     	R5 R9 ; R5 := R9
	68	[749]	MOVE     	R4 R8 ; R4 := R8
	69	[751]	GETTABLE 	R8 R0 K20 ; R8 := R0["mCouponId"]
	70	[751]	GETTABLE 	R8 R8 K21 ; R8 := R8["mId"]
	71	[751]	EQ       	1 R8 K22 ; if R8 == "" then PC := 98
	72	[751]	JMP      	98 ; PC := 98
	73	[751]	EQ       	0 R4 K3 ; if R4 ~= 0.000000 then PC := 98
	74	[751]	JMP      	98 ; PC := 98
	75	[751]	EQ       	0 R5 K3 ; if R5 ~= 0.000000 then PC := 98
	76	[751]	JMP      	98 ; PC := 98
	77	[754]	GETUPVAL 	R8 U0 ; R8 := U0
	78	[754]	GETTABLE 	R8 R8 K26 ; R8 := R8[0xcd71f5a1]
	79	[754]	GETTABLE 	R9 R0 K16 ; R9 := R0["mStoreItem"]
	80	[754]	CALL     	R8 2 2 ; R8 := R8(R9)
	81	[755]	GETGLOBAL	R9 K27 ; R9 := 0x7b998233
	82	[755]	MOVE     	R10 R8 ; R10 := R8
	83	[755]	CALL     	R9 2 2 ; R9 := R9(R10)
	84	[755]	TEST     	R9 1 ; if R9 then PC := 98
	85	[755]	JMP      	98 ; PC := 98
	86	[756]	GETUPVAL 	R9 U0 ; R9 := U0
	87	[756]	GETTABLE 	R9 R9 K23 ; R9 := R9[0xe9947039]
	88	[756]	GETTABLE 	R10 R0 K16 ; R10 := R0["mStoreItem"]
	89	[756]	MOVE     	R11 R6 ; R11 := R6
	90	[756]	OP_LOADBOOL	R12 0 0 ; R12 := false
	91	[756]	GETGLOBAL	R13 K24 ; R13 := _T
	92	[756]	GETTABLE 	R13 R13 K25 ; R13 := R13["purchasedItems"]
	93	[756]	LOADNIL  	R14 R14 ; R14 := nil
	94	[756]	OP_LOADBOOL	R15 1 0 ; R15 := true
	95	[756]	CALL     	R9 7 3 ; R9,R10 := R9(R10,R11,R12,R13,R14,R15)
	96	[756]	MOVE     	R5 R10 ; R5 := R10
	97	[756]	MOVE     	R4 R9 ; R4 := R9
	98	[760]	LT       	0 K3 R4 ; if 0.000000 >= R4 then PC := 112
	99	[760]	JMP      	112 ; PC := 112
	100	[760]	GETTABLE 	R9 R0 K28 ; R9 := R0["mUsePremium"]
	101	[760]	TEST     	R9 1 ; if R9 then PC := 112
	102	[760]	JMP      	112 ; PC := 112
	103	[761]	GETUPVAL 	R9 U1 ; R9 := U1
	104	[761]	GETTABLE 	R9 R9 K29 ; R9 := R9["REGULAR_CREDITS"]
	105	[761]	GETTABLE 	R10 R0 K30 ; R10 := R0["mQuantity"]
	106	[761]	MUL      	R10 R4 R10 ; R10 := R4 * R10
	107	[761]	SETTABLE 	R1 R9 R10 ; R1[R9] := R10
	108	[762]	GETUPVAL 	R9 U1 ; R9 := U1
	109	[762]	GETTABLE 	R9 R9 K29 ; R9 := R9["REGULAR_CREDITS"]
	110	[762]	SETTABLE 	R2 R9 R4 ; R2[R9] := R4
	111	[762]	JMP      	128 ; PC := 128
	112	[763]	LT       	0 K3 R5 ; if 0.000000 >= R5 then PC := 126
	113	[763]	JMP      	126 ; PC := 126
	114	[763]	GETTABLE 	R9 R0 K28 ; R9 := R0["mUsePremium"]
	115	[763]	TEST     	R9 0 ; if not R9 then PC := 126
	116	[763]	JMP      	126 ; PC := 126
	117	[764]	GETUPVAL 	R9 U1 ; R9 := U1
	118	[764]	GETTABLE 	R9 R9 K31 ; R9 := R9["PREMIUM_CREDITS"]
	119	[764]	GETTABLE 	R10 R0 K30 ; R10 := R0["mQuantity"]
	120	[764]	MUL      	R10 R5 R10 ; R10 := R5 * R10
	121	[764]	SETTABLE 	R1 R9 R10 ; R1[R9] := R10
	122	[765]	GETUPVAL 	R9 U1 ; R9 := U1
	123	[765]	GETTABLE 	R9 R9 K31 ; R9 := R9["PREMIUM_CREDITS"]
	124	[765]	SETTABLE 	R2 R9 R5 ; R2[R9] := R5
	125	[765]	JMP      	128 ; PC := 128
	126	[767]	LOADNIL  	R9 R9 ; R9 := nil
	127	[767]	RETURN   	R9 2 ; return R9 
	128	[770]	GETTABLE 	R9 R0 K20 ; R9 := R0["mCouponId"]
	129	[770]	GETTABLE 	R9 R9 K21 ; R9 := R9["mId"]
	130	[770]	EQ       	1 R9 K22 ; if R9 == "" then PC := 744
	131	[770]	JMP      	744 ; PC := 744
	132	[771]	GETGLOBAL	R9 K32 ; R9 := 0x76ea806b
	133	[771]	SELF     	R9 R9 K33 ; R10 := R9; R9 := R9[0x3f3ae64c]
	134	[771]	LOADK    	R11 := 0.000000
	135	[771]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	136	[772]	GETGLOBAL	R10 K27 ; R10 := 0x7b998233
	137	[772]	MOVE     	R11 R9 ; R11 := R9
	138	[772]	CALL     	R10 2 2 ; R10 := R10(R11)
	139	[772]	TEST     	R10 0 ; if not R10 then PC := 143
	140	[772]	JMP      	143 ; PC := 143
	141	[773]	LOADNIL  	R10 R10 ; R10 := nil
	142	[773]	RETURN   	R10 2 ; return R10 
	143	[776]	SELF     	R10 R9 K34 ; R11 := R9; R10 := R9[0x80563238]
	144	[776]	CALL     	R10 2 2 ; R10 := R10(R11)
	145	[777]	GETGLOBAL	R11 K27 ; R11 := 0x7b998233
	146	[777]	MOVE     	R12 R10 ; R12 := R10
	147	[777]	CALL     	R11 2 2 ; R11 := R11(R12)
	148	[777]	TEST     	R11 0 ; if not R11 then PC := 152
	149	[777]	JMP      	152 ; PC := 152
	150	[778]	LOADNIL  	R11 R11 ; R11 := nil
	151	[778]	RETURN   	R11 2 ; return R11 
	152	[781]	LOADNIL  	R11 R11 ; R11 := nil
	153	[782]	GETGLOBAL	R12 K35 ; R12 := 0xc8802016
	154	[782]	SELF     	R13 R10 K36 ; R14 := R10; R13 := R10[0x464542fe]
	155	[782]	CALL     	R13 2 0 ; R13,... := R13(R14)
	156	[782]	CALL     	R12 0 4 ; R12,R13,R14 := R12(R13,...)
	157	[782]	JMP      	166 ; PC := 166
	158	[783]	GETTABLE 	R17 R16 K21 ; R17 := R16["mId"]
	159	[783]	GETTABLE 	R17 R17 K21 ; R17 := R17["mId"]
	160	[783]	GETTABLE 	R18 R0 K20 ; R18 := R0["mCouponId"]
	161	[783]	GETTABLE 	R18 R18 K21 ; R18 := R18["mId"]
	162	[783]	EQ       	0 R17 R18 ; if R17 ~= R18 then PC := 166
	163	[783]	JMP      	166 ; PC := 166
	164	[784]	MOVE     	R11 R16 ; R11 := R16
	165	[785]	JMP      	168 ; PC := 168
	166	[782]	TFORLOOP 	R12 2 ; R15,R16 := R12(R13,R14); if R15 ~= nil then begin PC = 158; R14 := R15 end
	167	[786]	JMP      	158 ; PC := 158
	168	[789]	TEST     	R11 1 ; if R11 then PC := 172
	169	[789]	JMP      	172 ; PC := 172
	170	[790]	LOADNIL  	R17 R17 ; R17 := nil
	171	[790]	RETURN   	R17 2 ; return R17 
	172	[793]	SELF     	R17 R11 K37 ; R18 := R11; R17 := R11[0x96df49a3]
	173	[793]	GETTABLE 	R19 R0 K16 ; R19 := R0["mStoreItem"]
	174	[793]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	175	[793]	TEST     	R17 1 ; if R17 then PC := 179
	176	[793]	JMP      	179 ; PC := 179
	177	[794]	LOADNIL  	R17 R17 ; R17 := nil
	178	[794]	RETURN   	R17 2 ; return R17 
	179	[798]	GETTABLE 	R17 R0 K16 ; R17 := R0["mStoreItem"]
	180	[798]	SELF     	R17 R17 K38 ; R18 := R17; R17 := R17[0x0f5a34d1]
	181	[798]	CALL     	R17 2 2 ; R17 := R17(R18)
	182	[798]	TEST     	R17 0 ; if not R17 then PC := 186
	183	[798]	JMP      	186 ; PC := 186
	184	[799]	LOADNIL  	R17 R17 ; R17 := nil
	185	[799]	RETURN   	R17 2 ; return R17 
	186	[802]	GETGLOBAL	R17 K39 ; R17 := 0xcfc01047
	187	[802]	MOVE     	R18 R2 ; R18 := R2
	188	[802]	CALL     	R17 2 4 ; R17,R18,R19 := R17(R18)
	189	[802]	JMP      	197 ; PC := 197
	190	[803]	GETUPVAL 	R22 U0 ; R22 := U0
	191	[803]	GETTABLE 	R22 R22 K40 ; R22 := R22[0xebcd9651]
	192	[803]	GETTABLE 	R23 R1 R20 ; R23 := R1[R20]
	193	[803]	GETTABLE 	R24 R11 K41 ; R24 := R11["mAmount"]
	194	[803]	DIV      	R24 R24 K42 ; R24 := R24 / 100.000000
	195	[803]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	196	[803]	SETTABLE 	R1 R20 R22 ; R1[R20] := R22
	197	[802]	TFORLOOP 	R17 2 ; R20,R21 := R17(R18,R19); if R20 ~= nil then begin PC = 190; R19 := R20 end
	198	[803]	JMP      	190 ; PC := 190
	199	[805]	JMP      	744 ; PC := 744
	200	[807]	GETTABLE 	R22 R0 K1 ; R22 := R0["mSource"]
	201	[807]	EQ       	0 R22 K43 ; if R22 ~= 1.000000 then PC := 333
	202	[807]	JMP      	333 ; PC := 333
	203	[808]	GETUPVAL 	R22 U2 ; R22 := U2
	204	[808]	GETTABLE 	R23 R0 K44 ; R23 := R0["mSourceId"]
	205	[808]	CALL     	R22 2 2 ; R22 := R22(R23)
	206	[809]	TEST     	R22 1 ; if R22 then PC := 210
	207	[809]	JMP      	210 ; PC := 210
	208	[810]	LOADNIL  	R23 R23 ; R23 := nil
	209	[810]	RETURN   	R23 2 ; return R23 
	210	[813]	LOADNIL  	R23 R24 ; R23 := R24 := nil
	211	[815]	GETTABLE 	R25 R0 K45 ; R25 := R0["mExtraPurchaseInfoJson"]
	212	[815]	EQ       	1 R25 K22 ; if R25 == "" then PC := 226
	213	[815]	JMP      	226 ; PC := 226
	214	[816]	GETGLOBAL	R25 K46 ; R25 := cjson
	215	[816]	GETTABLE 	R25 R25 K47 ; R25 := R25[0x7ab914d8]
	216	[816]	GETTABLE 	R26 R0 K45 ; R26 := R0["mExtraPurchaseInfoJson"]
	217	[816]	CALL     	R25 2 2 ; R25 := R25(R26)
	218	[817]	GETTABLE 	R26 R25 K48 ; R26 := R25["ForcePrimeBucksPrice"]
	219	[817]	EQ       	1 R26 K49 ; if R26 == nil then PC := 222
	220	[817]	JMP      	222 ; PC := 222
	221	[818]	GETTABLE 	R23 R25 K48 ; R23 := R25["ForcePrimeBucksPrice"]
	222	[821]	GETTABLE 	R26 R25 K50 ; R26 := R25["ForceRegularPrice"]
	223	[821]	EQ       	1 R26 K49 ; if R26 == nil then PC := 226
	224	[821]	JMP      	226 ; PC := 226
	225	[822]	GETTABLE 	R24 R25 K50 ; R24 := R25["ForceRegularPrice"]
	226	[826]	EQ       	1 R23 K49 ; if R23 == nil then PC := 247
	227	[826]	JMP      	247 ; PC := 247
	228	[827]	GETUPVAL 	R26 U1 ; R26 := U1
	229	[827]	GETTABLE 	R26 R26 K51 ; R26 := R26["PRIME_BUCKS"]
	230	[827]	GETTABLE 	R27 R0 K30 ; R27 := R0["mQuantity"]
	231	[827]	MUL      	R27 R23 R27 ; R27 := R23 * R27
	232	[827]	SETTABLE 	R1 R26 R27 ; R1[R26] := R27
	233	[828]	GETUPVAL 	R26 U1 ; R26 := U1
	234	[828]	GETTABLE 	R26 R26 K51 ; R26 := R26["PRIME_BUCKS"]
	235	[828]	SETTABLE 	R2 R26 R23 ; R2[R26] := R23
	236	[830]	EQ       	1 R24 K49 ; if R24 == nil then PC := 315
	237	[830]	JMP      	315 ; PC := 315
	238	[831]	GETUPVAL 	R26 U1 ; R26 := U1
	239	[831]	GETTABLE 	R26 R26 K29 ; R26 := R26["REGULAR_CREDITS"]
	240	[831]	GETTABLE 	R27 R0 K30 ; R27 := R0["mQuantity"]
	241	[831]	MUL      	R27 R24 R27 ; R27 := R24 * R27
	242	[831]	SETTABLE 	R1 R26 R27 ; R1[R26] := R27
	243	[832]	GETUPVAL 	R26 U1 ; R26 := U1
	244	[832]	GETTABLE 	R26 R26 K29 ; R26 := R26["REGULAR_CREDITS"]
	245	[832]	SETTABLE 	R2 R26 R24 ; R2[R26] := R24
	246	[833]	JMP      	315 ; PC := 315
	247	[835]	GETGLOBAL	R26 K35 ; R26 := 0xc8802016
	248	[835]	GETTABLE 	R27 R22 K52 ; R27 := R22["mManifest"]
	249	[835]	CALL     	R26 2 4 ; R26,R27,R28 := R26(R27)
	250	[835]	JMP      	313 ; PC := 313
	251	[836]	GETTABLE 	R31 R30 K53 ; R31 := R30["mItemType"]
	252	[836]	GETTABLE 	R32 R0 K16 ; R32 := R0["mStoreItem"]
	253	[836]	EQ       	0 R31 R32 ; if R31 ~= R32 then PC := 313
	254	[836]	JMP      	313 ; PC := 313
	255	[837]	GETTABLE 	R31 R30 K54 ; R31 := R30["mPrimePrice"]
	256	[837]	LT       	0 K3 R31 ; if 0.000000 >= R31 then PC := 268
	257	[837]	JMP      	268 ; PC := 268
	258	[838]	GETUPVAL 	R31 U1 ; R31 := U1
	259	[838]	GETTABLE 	R31 R31 K51 ; R31 := R31["PRIME_BUCKS"]
	260	[838]	GETTABLE 	R32 R30 K54 ; R32 := R30["mPrimePrice"]
	261	[838]	GETTABLE 	R33 R0 K30 ; R33 := R0["mQuantity"]
	262	[838]	MUL      	R32 R32 R33 ; R32 := R32 * R33
	263	[838]	SETTABLE 	R1 R31 R32 ; R1[R31] := R32
	264	[839]	GETUPVAL 	R31 U1 ; R31 := U1
	265	[839]	GETTABLE 	R31 R31 K51 ; R31 := R31["PRIME_BUCKS"]
	266	[839]	GETTABLE 	R32 R30 K54 ; R32 := R30["mPrimePrice"]
	267	[839]	SETTABLE 	R2 R31 R32 ; R2[R31] := R32
	268	[842]	GETTABLE 	R31 R30 K55 ; R31 := R30["mRegularPrice"]
	269	[842]	LT       	0 K3 R31 ; if 0.000000 >= R31 then PC := 281
	270	[842]	JMP      	281 ; PC := 281
	271	[843]	GETUPVAL 	R31 U1 ; R31 := U1
	272	[843]	GETTABLE 	R31 R31 K29 ; R31 := R31["REGULAR_CREDITS"]
	273	[843]	GETTABLE 	R32 R30 K55 ; R32 := R30["mRegularPrice"]
	274	[843]	GETTABLE 	R33 R0 K30 ; R33 := R0["mQuantity"]
	275	[843]	MUL      	R32 R32 R33 ; R32 := R32 * R33
	276	[843]	SETTABLE 	R1 R31 R32 ; R1[R31] := R32
	277	[844]	GETUPVAL 	R31 U1 ; R31 := U1
	278	[844]	GETTABLE 	R31 R31 K29 ; R31 := R31["REGULAR_CREDITS"]
	279	[844]	GETTABLE 	R32 R30 K55 ; R32 := R30["mRegularPrice"]
	280	[844]	SETTABLE 	R2 R31 R32 ; R2[R31] := R32
	281	[847]	GETTABLE 	R31 R30 K56 ; R31 := R30["mItemPrices"]
	282	[847]	EQ       	1 R31 K49 ; if R31 == nil then PC := 315
	283	[847]	JMP      	315 ; PC := 315
	284	[848]	GETUPVAL 	R31 U1 ; R31 := U1
	285	[848]	GETTABLE 	R31 R31 K57 ; R31 := R31["ITEMS"]
	286	[848]	GETTABLE 	R32 R30 K56 ; R32 := R30["mItemPrices"]
	287	[848]	SETTABLE 	R1 R31 R32 ; R1[R31] := R32
	288	[849]	LOADK    	R31 := 1.000000
	289	[849]	GETUPVAL 	R32 U1 ; R32 := U1
	290	[849]	GETTABLE 	R32 R32 K57 ; R32 := R32["ITEMS"]
	291	[849]	GETTABLE 	R32 R1 R32 ; R32 := R1[R32]
	292	[849]	LEN      	R32 R32 ; R32 := # R32
	293	[849]	LOADK    	R33 := 1.000000
	294	[849]	FORPREP  	R31 307 ; R31 -= R33; PC := 307
	295	[850]	GETUPVAL 	R35 U1 ; R35 := U1
	296	[850]	GETTABLE 	R35 R35 K57 ; R35 := R35["ITEMS"]
	297	[850]	GETTABLE 	R35 R1 R35 ; R35 := R1[R35]
	298	[850]	GETTABLE 	R35 R35 R34 ; R35 := R35[R34]
	299	[850]	GETUPVAL 	R36 U1 ; R36 := U1
	300	[850]	GETTABLE 	R36 R36 K57 ; R36 := R36["ITEMS"]
	301	[850]	GETTABLE 	R36 R1 R36 ; R36 := R1[R36]
	302	[850]	GETTABLE 	R36 R36 R34 ; R36 := R36[R34]
	303	[850]	GETTABLE 	R36 R36 K58 ; R36 := R36["mItemCount"]
	304	[850]	GETTABLE 	R37 R0 K30 ; R37 := R0["mQuantity"]
	305	[850]	MUL      	R36 R36 R37 ; R36 := R36 * R37
	306	[850]	SETTABLE 	R35 K58 R36 ; R35["mItemCount"] := R36
	307	[849]	FORLOOP  	R31 295 ; R31 += R33; if R31 <= R32 then begin PC := 295; R34 := R31 end
	308	[852]	GETUPVAL 	R35 U1 ; R35 := U1
	309	[852]	GETTABLE 	R35 R35 K57 ; R35 := R35["ITEMS"]
	310	[852]	GETTABLE 	R36 R30 K56 ; R36 := R30["mItemPrices"]
	311	[852]	SETTABLE 	R2 R35 R36 ; R2[R35] := R36
	312	[855]	JMP      	315 ; PC := 315
	313	[835]	TFORLOOP 	R26 2 ; R29,R30 := R26(R27,R28); if R29 ~= nil then begin PC = 251; R28 := R29 end
	314	[856]	JMP      	251 ; PC := 251
	315	[860]	GETUPVAL 	R35 U1 ; R35 := U1
	316	[860]	GETTABLE 	R35 R35 K51 ; R35 := R35["PRIME_BUCKS"]
	317	[860]	GETTABLE 	R35 R1 R35 ; R35 := R1[R35]
	318	[860]	TEST     	R35 1 ; if R35 then PC := 744
	319	[860]	JMP      	744 ; PC := 744
	320	[860]	GETUPVAL 	R35 U1 ; R35 := U1
	321	[860]	GETTABLE 	R35 R35 K29 ; R35 := R35["REGULAR_CREDITS"]
	322	[860]	GETTABLE 	R35 R1 R35 ; R35 := R1[R35]
	323	[860]	TEST     	R35 1 ; if R35 then PC := 744
	324	[860]	JMP      	744 ; PC := 744
	325	[860]	GETUPVAL 	R35 U1 ; R35 := U1
	326	[860]	GETTABLE 	R35 R35 K57 ; R35 := R35["ITEMS"]
	327	[860]	GETTABLE 	R35 R1 R35 ; R35 := R1[R35]
	328	[860]	TEST     	R35 1 ; if R35 then PC := 744
	329	[860]	JMP      	744 ; PC := 744
	330	[861]	LOADNIL  	R35 R35 ; R35 := nil
	331	[861]	RETURN   	R35 2 ; return R35 
	332	[862]	JMP      	744 ; PC := 744
	333	[863]	GETTABLE 	R35 R0 K1 ; R35 := R0["mSource"]
	334	[863]	EQ       	0 R35 K59 ; if R35 ~= 18.000000 then PC := 406
	335	[863]	JMP      	406 ; PC := 406
	336	[865]	GETUPVAL 	R35 U3 ; R35 := U3
	337	[865]	GETTABLE 	R36 R0 K44 ; R36 := R0["mSourceId"]
	338	[865]	CALL     	R35 2 3 ; R35,R36 := R35(R36)
	339	[866]	TEST     	R35 1 ; if R35 then PC := 343
	340	[866]	JMP      	343 ; PC := 343
	341	[867]	LOADNIL  	R37 R37 ; R37 := nil
	342	[867]	RETURN   	R37 2 ; return R37 
	343	[870]	GETGLOBAL	R37 K35 ; R37 := 0xc8802016
	344	[870]	MOVE     	R38 R36 ; R38 := R36
	345	[870]	CALL     	R37 2 4 ; R37,R38,R39 := R37(R38)
	346	[870]	JMP      	391 ; PC := 391
	347	[871]	GETTABLE 	R42 R41 K53 ; R42 := R41["mItemType"]
	348	[871]	GETTABLE 	R43 R0 K16 ; R43 := R0["mStoreItem"]
	349	[871]	EQ       	0 R42 R43 ; if R42 ~= R43 then PC := 391
	350	[871]	JMP      	391 ; PC := 391
	351	[872]	GETTABLE 	R42 R41 K54 ; R42 := R41["mPrimePrice"]
	352	[872]	LT       	0 K3 R42 ; if 0.000000 >= R42 then PC := 364
	353	[872]	JMP      	364 ; PC := 364
	354	[873]	GETUPVAL 	R42 U1 ; R42 := U1
	355	[873]	GETTABLE 	R42 R42 K60 ; R42 := R42["PRIME_TOKENS"]
	356	[873]	GETTABLE 	R43 R41 K54 ; R43 := R41["mPrimePrice"]
	357	[873]	GETTABLE 	R44 R0 K30 ; R44 := R0["mQuantity"]
	358	[873]	MUL      	R43 R43 R44 ; R43 := R43 * R44
	359	[873]	SETTABLE 	R1 R42 R43 ; R1[R42] := R43
	360	[874]	GETUPVAL 	R42 U1 ; R42 := U1
	361	[874]	GETTABLE 	R42 R42 K60 ; R42 := R42["PRIME_TOKENS"]
	362	[874]	GETTABLE 	R43 R41 K54 ; R43 := R41["mPrimePrice"]
	363	[874]	SETTABLE 	R2 R42 R43 ; R2[R42] := R43
	364	[877]	GETTABLE 	R42 R41 K55 ; R42 := R41["mRegularPrice"]
	365	[877]	LT       	0 K3 R42 ; if 0.000000 >= R42 then PC := 393
	366	[877]	JMP      	393 ; PC := 393
	367	[878]	GETGLOBAL	R42 K61 ; R42 := 0x7ed0a956
	368	[878]	LOADK    	R43 K62 ; R43 := "/Lotus/Types/Items/MiscItems/SchismKey"
	369	[878]	CALL     	R42 2 2 ; R42 := R42(R43)
	370	[879]	GETUPVAL 	R43 U1 ; R43 := U1
	371	[879]	GETTABLE 	R43 R43 K57 ; R43 := R43["ITEMS"]
	372	[879]	NEWTABLE 	R44 1 0 ; R44 := {}
	373	[879]	NEWTABLE 	R45 0 2 ; R45 := {}
	374	[879]	SETTABLE 	R45 K53 R42 ; R45["mItemType"] := R42
	375	[879]	GETTABLE 	R46 R41 K55 ; R46 := R41["mRegularPrice"]
	376	[879]	GETTABLE 	R47 R0 K30 ; R47 := R0["mQuantity"]
	377	[879]	MUL      	R46 R46 R47 ; R46 := R46 * R47
	378	[879]	SETTABLE 	R45 K58 R46 ; R45["mItemCount"] := R46
	379	[879]	SETLIST  	R44 1 1 ; R44[(1-1)*FPF+i] := R(44+i), 1 <= i <= 1
	380	[879]	SETTABLE 	R1 R43 R44 ; R1[R43] := R44
	381	[880]	GETUPVAL 	R43 U1 ; R43 := U1
	382	[880]	GETTABLE 	R43 R43 K57 ; R43 := R43["ITEMS"]
	383	[880]	NEWTABLE 	R44 1 0 ; R44 := {}
	384	[880]	NEWTABLE 	R45 0 2 ; R45 := {}
	385	[880]	SETTABLE 	R45 K53 R42 ; R45["mItemType"] := R42
	386	[880]	GETTABLE 	R46 R41 K55 ; R46 := R41["mRegularPrice"]
	387	[880]	SETTABLE 	R45 K58 R46 ; R45["mItemCount"] := R46
	388	[880]	SETLIST  	R44 1 1 ; R44[(1-1)*FPF+i] := R(44+i), 1 <= i <= 1
	389	[880]	SETTABLE 	R2 R43 R44 ; R2[R43] := R44
	390	[883]	JMP      	393 ; PC := 393
	391	[870]	TFORLOOP 	R37 2 ; R40,R41 := R37(R38,R39); if R40 ~= nil then begin PC = 347; R39 := R40 end
	392	[884]	JMP      	347 ; PC := 347
	393	[887]	GETUPVAL 	R43 U1 ; R43 := U1
	394	[887]	GETTABLE 	R43 R43 K60 ; R43 := R43["PRIME_TOKENS"]
	395	[887]	GETTABLE 	R43 R1 R43 ; R43 := R1[R43]
	396	[887]	TEST     	R43 1 ; if R43 then PC := 744
	397	[887]	JMP      	744 ; PC := 744
	398	[887]	GETUPVAL 	R43 U1 ; R43 := U1
	399	[887]	GETTABLE 	R43 R43 K57 ; R43 := R43["ITEMS"]
	400	[887]	GETTABLE 	R43 R1 R43 ; R43 := R1[R43]
	401	[887]	TEST     	R43 1 ; if R43 then PC := 744
	402	[887]	JMP      	744 ; PC := 744
	403	[888]	LOADNIL  	R43 R43 ; R43 := nil
	404	[888]	RETURN   	R43 2 ; return R43 
	405	[889]	JMP      	744 ; PC := 744
	406	[891]	GETTABLE 	R43 R0 K1 ; R43 := R0["mSource"]
	407	[891]	EQ       	0 R43 K63 ; if R43 ~= 2.000000 then PC := 503
	408	[891]	JMP      	503 ; PC := 503
	409	[892]	GETTABLE 	R43 R0 K64 ; R43 := R0["mSyndicateTag"]
	410	[892]	SELF     	R43 R43 K65 ; R44 := R43; R43 := R43[0x56c01834]
	411	[892]	CALL     	R43 2 2 ; R43 := R43(R44)
	412	[892]	TEST     	R43 1 ; if R43 then PC := 416
	413	[892]	JMP      	416 ; PC := 416
	414	[893]	LOADNIL  	R43 R43 ; R43 := nil
	415	[893]	RETURN   	R43 2 ; return R43 
	416	[896]	GETGLOBAL	R43 K66 ; R43 := 0xa94df70b
	417	[896]	SELF     	R43 R43 K67 ; R44 := R43; R43 := R43[0x07408254]
	418	[896]	GETTABLE 	R45 R0 K64 ; R45 := R0["mSyndicateTag"]
	419	[896]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	420	[897]	GETGLOBAL	R44 K27 ; R44 := 0x7b998233
	421	[897]	MOVE     	R45 R43 ; R45 := R43
	422	[897]	CALL     	R44 2 2 ; R44 := R44(R45)
	423	[897]	TEST     	R44 0 ; if not R44 then PC := 427
	424	[897]	JMP      	427 ; PC := 427
	425	[898]	LOADNIL  	R44 R44 ; R44 := nil
	426	[898]	RETURN   	R44 2 ; return R44 
	427	[901]	GETTABLE 	R44 R0 K68 ; R44 := R0["mUseFreeFavor"]
	428	[901]	TEST     	R44 0 ; if not R44 then PC := 438
	429	[901]	JMP      	438 ; PC := 438
	430	[902]	GETTABLE 	R44 R0 K30 ; R44 := R0["mQuantity"]
	431	[902]	LT       	0 K43 R44 ; if 1.000000 >= R44 then PC := 435
	432	[902]	JMP      	435 ; PC := 435
	433	[903]	LOADNIL  	R44 R44 ; R44 := nil
	434	[903]	RETURN   	R44 2 ; return R44 
	435	[906]	NEWTABLE 	R44 0 0 ; R44 := {}
	436	[906]	NEWTABLE 	R45 0 0 ; R45 := {}
	437	[906]	RETURN   	R44 3 ; return R44, R45 
	438	[909]	GETGLOBAL	R44 K69 ; R44 := 0xb009bbc6
	439	[909]	SELF     	R45 R43 K70 ; R46 := R43; R45 := R43[0xcbbdc11b]
	440	[909]	CALL     	R45 2 0 ; R45,... := R45(R46)
	441	[909]	CALL     	R44 0 2 ; R44 := R44(R45,...)
	442	[911]	LOADNIL  	R45 R45 ; R45 := nil
	443	[912]	GETTABLE 	R46 R0 K71 ; R46 := R0["mIsSupplyDrop"]
	444	[912]	TEST     	R46 0 ; if not R46 then PC := 450
	445	[912]	JMP      	450 ; PC := 450
	446	[913]	SELF     	R46 R44 K72 ; R47 := R44; R46 := R44[0x45d282eb]
	447	[913]	CALL     	R46 2 2 ; R46 := R46(R47)
	448	[913]	MOVE     	R45 R46 ; R45 := R46
	449	[913]	JMP      	453 ; PC := 453
	450	[915]	SELF     	R46 R44 K73 ; R47 := R44; R46 := R44[0x3cab9eeb]
	451	[915]	CALL     	R46 2 2 ; R46 := R46(R47)
	452	[915]	MOVE     	R45 R46 ; R45 := R46
	453	[918]	GETGLOBAL	R46 K35 ; R46 := 0xc8802016
	454	[918]	MOVE     	R47 R45 ; R47 := R45
	455	[918]	CALL     	R46 2 4 ; R46,R47,R48 := R46(R47)
	456	[918]	JMP      	488 ; PC := 488
	457	[919]	GETTABLE 	R51 R50 K74 ; R51 := R50["storeItem"]
	458	[919]	GETTABLE 	R52 R0 K16 ; R52 := R0["mStoreItem"]
	459	[919]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 488
	460	[919]	JMP      	488 ; PC := 488
	461	[920]	GETTABLE 	R51 R50 K75 ; R51 := R50["standingCost"]
	462	[920]	LT       	0 K3 R51 ; if 0.000000 >= R51 then PC := 474
	463	[920]	JMP      	474 ; PC := 474
	464	[921]	GETUPVAL 	R51 U1 ; R51 := U1
	465	[921]	GETTABLE 	R51 R51 K76 ; R51 := R51["STANDING"]
	466	[921]	GETTABLE 	R52 R50 K75 ; R52 := R50["standingCost"]
	467	[921]	GETTABLE 	R53 R0 K30 ; R53 := R0["mQuantity"]
	468	[921]	MUL      	R52 R52 R53 ; R52 := R52 * R53
	469	[921]	SETTABLE 	R1 R51 R52 ; R1[R51] := R52
	470	[922]	GETUPVAL 	R51 U1 ; R51 := U1
	471	[922]	GETTABLE 	R51 R51 K76 ; R51 := R51["STANDING"]
	472	[922]	GETTABLE 	R52 R50 K75 ; R52 := R50["standingCost"]
	473	[922]	SETTABLE 	R2 R51 R52 ; R2[R51] := R52
	474	[924]	GETTABLE 	R51 R50 K77 ; R51 := R50["creditsCost"]
	475	[924]	LT       	0 K3 R51 ; if 0.000000 >= R51 then PC := 490
	476	[924]	JMP      	490 ; PC := 490
	477	[925]	GETUPVAL 	R51 U1 ; R51 := U1
	478	[925]	GETTABLE 	R51 R51 K29 ; R51 := R51["REGULAR_CREDITS"]
	479	[925]	GETTABLE 	R52 R50 K77 ; R52 := R50["creditsCost"]
	480	[925]	GETTABLE 	R53 R0 K30 ; R53 := R0["mQuantity"]
	481	[925]	MUL      	R52 R52 R53 ; R52 := R52 * R53
	482	[925]	SETTABLE 	R1 R51 R52 ; R1[R51] := R52
	483	[926]	GETUPVAL 	R51 U1 ; R51 := U1
	484	[926]	GETTABLE 	R51 R51 K29 ; R51 := R51["REGULAR_CREDITS"]
	485	[926]	GETTABLE 	R52 R50 K77 ; R52 := R50["creditsCost"]
	486	[926]	SETTABLE 	R2 R51 R52 ; R2[R51] := R52
	487	[928]	JMP      	490 ; PC := 490
	488	[918]	TFORLOOP 	R46 2 ; R49,R50 := R46(R47,R48); if R49 ~= nil then begin PC = 457; R48 := R49 end
	489	[929]	JMP      	457 ; PC := 457
	490	[932]	GETUPVAL 	R51 U1 ; R51 := U1
	491	[932]	GETTABLE 	R51 R51 K76 ; R51 := R51["STANDING"]
	492	[932]	GETTABLE 	R51 R1 R51 ; R51 := R1[R51]
	493	[932]	TEST     	R51 1 ; if R51 then PC := 744
	494	[932]	JMP      	744 ; PC := 744
	495	[932]	GETUPVAL 	R51 U1 ; R51 := U1
	496	[932]	GETTABLE 	R51 R51 K29 ; R51 := R51["REGULAR_CREDITS"]
	497	[932]	GETTABLE 	R51 R1 R51 ; R51 := R1[R51]
	498	[932]	TEST     	R51 1 ; if R51 then PC := 744
	499	[932]	JMP      	744 ; PC := 744
	500	[933]	LOADNIL  	R51 R51 ; R51 := nil
	501	[933]	RETURN   	R51 2 ; return R51 
	502	[934]	JMP      	744 ; PC := 744
	503	[935]	GETTABLE 	R51 R0 K1 ; R51 := R0["mSource"]
	504	[935]	EQ       	0 R51 K78 ; if R51 ~= 3.000000 then PC := 534
	505	[935]	JMP      	534 ; PC := 534
	506	[936]	GETUPVAL 	R51 U0 ; R51 := U0
	507	[936]	GETTABLE 	R51 R51 K79 ; R51 := R51[0xe87653f1]
	508	[936]	CALL     	R51 1 2 ; R51 := R51()
	509	[938]	GETGLOBAL	R52 K27 ; R52 := 0x7b998233
	510	[938]	MOVE     	R53 R51 ; R53 := R51
	511	[938]	CALL     	R52 2 2 ; R52 := R52(R53)
	512	[938]	TEST     	R52 1 ; if R52 then PC := 521
	513	[938]	JMP      	521 ; PC := 521
	514	[938]	GETTABLE 	R52 R51 K16 ; R52 := R51["mStoreItem"]
	515	[938]	GETTABLE 	R53 R0 K16 ; R53 := R0["mStoreItem"]
	516	[938]	EQ       	0 R52 R53 ; if R52 ~= R53 then PC := 521
	517	[938]	JMP      	521 ; PC := 521
	518	[938]	GETTABLE 	R52 R51 K80 ; R52 := R51["mSalePrice"]
	519	[938]	LE       	0 R52 K3 ; if R52 > 0.000000 then PC := 523
	520	[938]	JMP      	523 ; PC := 523
	521	[939]	LOADNIL  	R52 R52 ; R52 := nil
	522	[939]	RETURN   	R52 2 ; return R52 
	523	[942]	GETUPVAL 	R52 U1 ; R52 := U1
	524	[942]	GETTABLE 	R52 R52 K31 ; R52 := R52["PREMIUM_CREDITS"]
	525	[942]	GETTABLE 	R53 R51 K80 ; R53 := R51["mSalePrice"]
	526	[942]	GETTABLE 	R54 R0 K30 ; R54 := R0["mQuantity"]
	527	[942]	MUL      	R53 R53 R54 ; R53 := R53 * R54
	528	[942]	SETTABLE 	R1 R52 R53 ; R1[R52] := R53
	529	[943]	GETUPVAL 	R52 U1 ; R52 := U1
	530	[943]	GETTABLE 	R52 R52 K31 ; R52 := R52["PREMIUM_CREDITS"]
	531	[943]	GETTABLE 	R53 R51 K80 ; R53 := R51["mSalePrice"]
	532	[943]	SETTABLE 	R2 R52 R53 ; R2[R52] := R53
	533	[943]	JMP      	744 ; PC := 744
	534	[944]	GETTABLE 	R52 R0 K1 ; R52 := R0["mSource"]
	535	[944]	EQ       	0 R52 K81 ; if R52 ~= 7.000000 then PC := 744
	536	[944]	JMP      	744 ; PC := 744
	537	[946]	GETGLOBAL	R52 K61 ; R52 := 0x7ed0a956
	538	[946]	LOADK    	R53 K82 ; R53 := "/Lotus/Types/Items/Events/AmbulasDataFragment"
	539	[946]	CALL     	R52 2 2 ; R52 := R52(R53)
	540	[949]	LOADNIL  	R53 R53 ; R53 := nil
	541	[950]	GETGLOBAL	R54 K69 ; R54 := 0xb009bbc6
	542	[950]	GETTABLE 	R55 R0 K44 ; R55 := R0["mSourceId"]
	543	[950]	CALL     	R54 2 2 ; R54 := R54(R55)
	544	[951]	GETGLOBAL	R55 K27 ; R55 := 0x7b998233
	545	[951]	MOVE     	R56 R54 ; R56 := R54
	546	[951]	CALL     	R55 2 2 ; R55 := R55(R56)
	547	[951]	TEST     	R55 0 ; if not R55 then PC := 566
	548	[951]	JMP      	566 ; PC := 566
	549	[953]	GETGLOBAL	R55 K32 ; R55 := 0x76ea806b
	550	[953]	SELF     	R55 R55 K33 ; R56 := R55; R55 := R55[0x3f3ae64c]
	551	[953]	LOADK    	R57 := 0.000000
	552	[953]	CALL     	R55 3 2 ; R55 := R55(R56,R57)
	553	[953]	SELF     	R55 R55 K34 ; R56 := R55; R55 := R55[0x80563238]
	554	[953]	CALL     	R55 2 2 ; R55 := R55(R56)
	555	[954]	SELF     	R56 R55 K83 ; R57 := R55; R56 := R55[0xa2997b3c]
	556	[954]	LOADNIL  	R58 R58 ; R58 := nil
	557	[954]	GETTABLE 	R59 R0 K44 ; R59 := R0["mSourceId"]
	558	[954]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	559	[955]	GETTABLE 	R57 R56 K21 ; R57 := R56["mId"]
	560	[955]	GETTABLE 	R57 R57 K21 ; R57 := R57["mId"]
	561	[955]	GETTABLE 	R58 R0 K44 ; R58 := R0["mSourceId"]
	562	[955]	EQ       	0 R57 R58 ; if R57 ~= R58 then PC := 569
	563	[955]	JMP      	569 ; PC := 569
	564	[956]	GETTABLE 	R53 R56 K84 ; R53 := R56["mItemManifest"]
	565	[957]	JMP      	569 ; PC := 569
	566	[959]	SELF     	R57 R54 K85 ; R58 := R54; R57 := R54[0x60e4aa28]
	567	[959]	CALL     	R57 2 2 ; R57 := R57(R58)
	568	[959]	MOVE     	R53 R57 ; R53 := R57
	569	[962]	GETGLOBAL	R57 K27 ; R57 := 0x7b998233
	570	[962]	MOVE     	R58 R53 ; R58 := R53
	571	[962]	CALL     	R57 2 2 ; R57 := R57(R58)
	572	[962]	TEST     	R57 0 ; if not R57 then PC := 576
	573	[962]	JMP      	576 ; PC := 576
	574	[963]	LOADNIL  	R57 R57 ; R57 := nil
	575	[963]	RETURN   	R57 2 ; return R57 
	576	[966]	GETTABLE 	R57 R0 K16 ; R57 := R0["mStoreItem"]
	577	[968]	LOADNIL  	R58 R58 ; R58 := nil
	578	[969]	GETTABLE 	R59 R0 K45 ; R59 := R0["mExtraPurchaseInfoJson"]
	579	[969]	EQ       	1 R59 K22 ; if R59 == "" then PC := 589
	580	[969]	JMP      	589 ; PC := 589
	581	[970]	GETGLOBAL	R59 K46 ; R59 := cjson
	582	[970]	GETTABLE 	R59 R59 K47 ; R59 := R59[0x7ab914d8]
	583	[970]	GETTABLE 	R60 R0 K45 ; R60 := R0["mExtraPurchaseInfoJson"]
	584	[970]	CALL     	R59 2 2 ; R59 := R59(R60)
	585	[971]	GETTABLE 	R60 R59 K86 ; R60 := R59["ItemId"]
	586	[971]	EQ       	1 R60 K49 ; if R60 == nil then PC := 589
	587	[971]	JMP      	589 ; PC := 589
	588	[972]	GETTABLE 	R58 R59 K86 ; R58 := R59["ItemId"]
	589	[976]	OP_LOADBOOL	R60 0 0 ; R60 := false
	590	[977]	LOADK    	R61 := 1.000000
	591	[977]	LEN      	R62 R53 ; R62 := # R53
	592	[977]	LOADK    	R63 := 1.000000
	593	[977]	FORPREP  	R61 739 ; R61 -= R63; PC := 739
	594	[978]	GETTABLE 	R65 R53 R64 ; R65 := R53[R64]
	595	[980]	GETGLOBAL	R66 K27 ; R66 := 0x7b998233
	596	[980]	MOVE     	R67 R58 ; R67 := R58
	597	[980]	CALL     	R66 2 2 ; R66 := R66(R67)
	598	[980]	TEST     	R66 1 ; if R66 then PC := 605
	599	[980]	JMP      	605 ; PC := 605
	600	[980]	GETTABLE 	R66 R65 K21 ; R66 := R65["mId"]
	601	[980]	SELF     	R66 R66 K87 ; R67 := R66; R66 := R66[0xf537cfc7]
	602	[980]	CALL     	R66 2 2 ; R66 := R66(R67)
	603	[980]	EQ       	1 R58 R66 ; if R58 == R66 then PC := 613
	604	[980]	JMP      	613 ; PC := 613
	605	[980]	GETGLOBAL	R66 K27 ; R66 := 0x7b998233
	606	[980]	MOVE     	R67 R58 ; R67 := R58
	607	[980]	CALL     	R66 2 2 ; R66 := R66(R67)
	608	[980]	TEST     	R66 0 ; if not R66 then PC := 739
	609	[980]	JMP      	739 ; PC := 739
	610	[980]	GETTABLE 	R66 R65 K16 ; R66 := R65["mStoreItem"]
	611	[980]	EQ       	0 R66 R57 ; if R66 ~= R57 then PC := 739
	612	[980]	JMP      	739 ; PC := 739
	613	[981]	GETTABLE 	R66 R65 K55 ; R66 := R65["mRegularPrice"]
	614	[981]	GETTABLE 	R66 R66 K88 ; R66 := R66["minValue"]
	615	[981]	GETTABLE 	R67 R65 K55 ; R67 := R65["mRegularPrice"]
	616	[981]	GETTABLE 	R67 R67 K89 ; R67 := R67["maxValue"]
	617	[981]	EQ       	0 R66 R67 ; if R66 ~= R67 then PC := 636
	618	[981]	JMP      	636 ; PC := 636
	619	[981]	GETTABLE 	R66 R65 K55 ; R66 := R65["mRegularPrice"]
	620	[981]	GETTABLE 	R66 R66 K89 ; R66 := R66["maxValue"]
	621	[981]	LT       	0 K3 R66 ; if 0.000000 >= R66 then PC := 636
	622	[981]	JMP      	636 ; PC := 636
	623	[982]	GETUPVAL 	R66 U1 ; R66 := U1
	624	[982]	GETTABLE 	R66 R66 K29 ; R66 := R66["REGULAR_CREDITS"]
	625	[982]	GETTABLE 	R67 R65 K55 ; R67 := R65["mRegularPrice"]
	626	[982]	GETTABLE 	R67 R67 K89 ; R67 := R67["maxValue"]
	627	[982]	GETTABLE 	R68 R0 K30 ; R68 := R0["mQuantity"]
	628	[982]	MUL      	R67 R67 R68 ; R67 := R67 * R68
	629	[982]	SETTABLE 	R1 R66 R67 ; R1[R66] := R67
	630	[983]	GETUPVAL 	R66 U1 ; R66 := U1
	631	[983]	GETTABLE 	R66 R66 K29 ; R66 := R66["REGULAR_CREDITS"]
	632	[983]	GETTABLE 	R67 R65 K55 ; R67 := R65["mRegularPrice"]
	633	[983]	GETTABLE 	R67 R67 K89 ; R67 := R67["maxValue"]
	634	[983]	SETTABLE 	R2 R66 R67 ; R2[R66] := R67
	635	[984]	OP_LOADBOOL	R60 1 0 ; R60 := true
	636	[987]	GETTABLE 	R66 R65 K90 ; R66 := R65["mPremiumPrice"]
	637	[987]	GETTABLE 	R66 R66 K88 ; R66 := R66["minValue"]
	638	[987]	GETTABLE 	R67 R65 K90 ; R67 := R65["mPremiumPrice"]
	639	[987]	GETTABLE 	R67 R67 K89 ; R67 := R67["maxValue"]
	640	[987]	EQ       	0 R66 R67 ; if R66 ~= R67 then PC := 659
	641	[987]	JMP      	659 ; PC := 659
	642	[987]	GETTABLE 	R66 R65 K90 ; R66 := R65["mPremiumPrice"]
	643	[987]	GETTABLE 	R66 R66 K89 ; R66 := R66["maxValue"]
	644	[987]	LT       	0 K3 R66 ; if 0.000000 >= R66 then PC := 659
	645	[987]	JMP      	659 ; PC := 659
	646	[988]	GETUPVAL 	R66 U1 ; R66 := U1
	647	[988]	GETTABLE 	R66 R66 K31 ; R66 := R66["PREMIUM_CREDITS"]
	648	[988]	GETTABLE 	R67 R65 K90 ; R67 := R65["mPremiumPrice"]
	649	[988]	GETTABLE 	R67 R67 K89 ; R67 := R67["maxValue"]
	650	[988]	GETTABLE 	R68 R0 K30 ; R68 := R0["mQuantity"]
	651	[988]	MUL      	R67 R67 R68 ; R67 := R67 * R68
	652	[988]	SETTABLE 	R1 R66 R67 ; R1[R66] := R67
	653	[989]	GETUPVAL 	R66 U1 ; R66 := U1
	654	[989]	GETTABLE 	R66 R66 K31 ; R66 := R66["PREMIUM_CREDITS"]
	655	[989]	GETTABLE 	R67 R65 K90 ; R67 := R65["mPremiumPrice"]
	656	[989]	GETTABLE 	R67 R67 K89 ; R67 := R67["maxValue"]
	657	[989]	SETTABLE 	R2 R66 R67 ; R2[R66] := R67
	658	[990]	OP_LOADBOOL	R60 1 0 ; R60 := true
	659	[993]	GETTABLE 	R66 R65 K56 ; R66 := R65["mItemPrices"]
	660	[993]	EQ       	1 R66 K49 ; if R66 == nil then PC := 717
	661	[993]	JMP      	717 ; PC := 717
	662	[994]	OP_LOADBOOL	R60 1 0 ; R60 := true
	663	[995]	GETUPVAL 	R66 U1 ; R66 := U1
	664	[995]	GETTABLE 	R66 R66 K57 ; R66 := R66["ITEMS"]
	665	[995]	GETTABLE 	R67 R65 K56 ; R67 := R65["mItemPrices"]
	666	[995]	SETTABLE 	R1 R66 R67 ; R1[R66] := R67
	667	[996]	GETUPVAL 	R66 U1 ; R66 := U1
	668	[996]	GETTABLE 	R66 R66 K57 ; R66 := R66["ITEMS"]
	669	[996]	GETTABLE 	R67 R65 K56 ; R67 := R65["mItemPrices"]
	670	[996]	SETTABLE 	R2 R66 R67 ; R2[R66] := R67
	671	[998]	LOADK    	R66 := 1.000000
	672	[998]	GETUPVAL 	R67 U1 ; R67 := U1
	673	[998]	GETTABLE 	R67 R67 K57 ; R67 := R67["ITEMS"]
	674	[998]	GETTABLE 	R67 R1 R67 ; R67 := R1[R67]
	675	[998]	LEN      	R67 R67 ; R67 := # R67
	676	[998]	LOADK    	R68 := 1.000000
	677	[998]	FORPREP  	R66 716 ; R66 -= R68; PC := 716
	678	[999]	GETUPVAL 	R70 U1 ; R70 := U1
	679	[999]	GETTABLE 	R70 R70 K57 ; R70 := R70["ITEMS"]
	680	[999]	GETTABLE 	R70 R1 R70 ; R70 := R1[R70]
	681	[999]	GETTABLE 	R70 R70 R69 ; R70 := R70[R69]
	682	[999]	GETTABLE 	R70 R70 K53 ; R70 := R70["mItemType"]
	683	[999]	EQ       	0 R70 R52 ; if R70 ~= R52 then PC := 696
	684	[999]	JMP      	696 ; PC := 696
	685	[1001]	GETUPVAL 	R70 U1 ; R70 := U1
	686	[1001]	GETTABLE 	R70 R70 K91 ; R70 := R70["AMBULAS_DATA"]
	687	[1001]	GETTABLE 	R71 R65 K92 ; R71 := R65["mExtraCurrencyPrice"]
	688	[1001]	GETTABLE 	R72 R0 K30 ; R72 := R0["mQuantity"]
	689	[1001]	MUL      	R71 R71 R72 ; R71 := R71 * R72
	690	[1001]	SETTABLE 	R1 R70 R71 ; R1[R70] := R71
	691	[1002]	GETUPVAL 	R70 U1 ; R70 := U1
	692	[1002]	GETTABLE 	R70 R70 K91 ; R70 := R70["AMBULAS_DATA"]
	693	[1002]	GETTABLE 	R71 R65 K92 ; R71 := R65["mExtraCurrencyPrice"]
	694	[1002]	SETTABLE 	R2 R70 R71 ; R2[R70] := R71
	695	[1002]	JMP      	716 ; PC := 716
	696	[1004]	GETUPVAL 	R70 U1 ; R70 := U1
	697	[1004]	GETTABLE 	R70 R70 K57 ; R70 := R70["ITEMS"]
	698	[1004]	GETTABLE 	R70 R1 R70 ; R70 := R1[R70]
	699	[1004]	GETTABLE 	R70 R70 R69 ; R70 := R70[R69]
	700	[1004]	GETUPVAL 	R71 U1 ; R71 := U1
	701	[1004]	GETTABLE 	R71 R71 K57 ; R71 := R71["ITEMS"]
	702	[1004]	GETTABLE 	R71 R1 R71 ; R71 := R1[R71]
	703	[1004]	GETTABLE 	R71 R71 R69 ; R71 := R71[R69]
	704	[1004]	GETTABLE 	R71 R71 K58 ; R71 := R71["mItemCount"]
	705	[1004]	GETTABLE 	R72 R0 K30 ; R72 := R0["mQuantity"]
	706	[1004]	MUL      	R71 R71 R72 ; R71 := R71 * R72
	707	[1004]	SETTABLE 	R70 K58 R71 ; R70["mItemCount"] := R71
	708	[1005]	GETUPVAL 	R70 U1 ; R70 := U1
	709	[1005]	GETTABLE 	R70 R70 K57 ; R70 := R70["ITEMS"]
	710	[1005]	GETTABLE 	R70 R1 R70 ; R70 := R1[R70]
	711	[1005]	GETTABLE 	R70 R70 R69 ; R70 := R70[R69]
	712	[1005]	GETTABLE 	R70 R70 K58 ; R70 := R70["mItemCount"]
	713	[1005]	LE       	0 R70 K3 ; if R70 > 0.000000 then PC := 716
	714	[1005]	JMP      	716 ; PC := 716
	715	[1006]	OP_LOADBOOL	R60 0 0 ; R60 := false
	716	[998]	FORLOOP  	R66 678 ; R66 += R68; if R66 <= R67 then begin PC := 678; R69 := R66 end
	717	[1012]	GETTABLE 	R70 R65 K93 ; R70 := R65["mFocusXpCost"]
	718	[1012]	GETTABLE 	R70 R70 K94 ; R70 := R70["mCost"]
	719	[1012]	LT       	0 K3 R70 ; if 0.000000 >= R70 then PC := 737
	720	[1012]	JMP      	737 ; PC := 737
	721	[1013]	GETTABLE 	R70 R65 K93 ; R70 := R65["mFocusXpCost"]
	722	[1013]	GETTABLE 	R70 R70 K96 ; R70 := R70["mPolarity"]
	723	[1013]	SETGLOBALHASH	R70 K95 ; mPurchasePolarityType := R70
	724	[1014]	GETUPVAL 	R70 U1 ; R70 := U1
	725	[1014]	GETTABLE 	R70 R70 K97 ; R70 := R70["FOCUS_XP"]
	726	[1014]	GETTABLE 	R71 R65 K93 ; R71 := R65["mFocusXpCost"]
	727	[1014]	GETTABLE 	R71 R71 K94 ; R71 := R71["mCost"]
	728	[1014]	GETTABLE 	R72 R0 K30 ; R72 := R0["mQuantity"]
	729	[1014]	MUL      	R71 R71 R72 ; R71 := R71 * R72
	730	[1014]	SETTABLE 	R1 R70 R71 ; R1[R70] := R71
	731	[1015]	GETUPVAL 	R70 U1 ; R70 := U1
	732	[1015]	GETTABLE 	R70 R70 K97 ; R70 := R70["FOCUS_XP"]
	733	[1015]	GETTABLE 	R71 R65 K93 ; R71 := R65["mFocusXpCost"]
	734	[1015]	GETTABLE 	R71 R71 K94 ; R71 := R71["mCost"]
	735	[1015]	SETTABLE 	R2 R70 R71 ; R2[R70] := R71
	736	[1016]	OP_LOADBOOL	R60 1 0 ; R60 := true
	737	[1019]	GETTABLE 	R3 R65 K98 ; R3 := R65["mQuantityMultiplier"]
	738	[1021]	JMP      	740 ; PC := 740
	739	[977]	FORLOOP  	R61 594 ; R61 += R63; if R61 <= R62 then begin PC := 594; R64 := R61 end
	740	[1025]	TEST     	R60 1 ; if R60 then PC := 744
	741	[1025]	JMP      	744 ; PC := 744
	742	[1026]	LOADNIL  	R70 R70 ; R70 := nil
	743	[1026]	RETURN   	R70 2 ; return R70 
	744	[1030]	MOVE     	R70 R1 ; R70 := R1
	745	[1030]	MOVE     	R71 R2 ; R71 := R2
	746	[1030]	MOVE     	R72 R3 ; R72 := R3
	747	[1030]	RETURN   	R70 4 ; return R70, R71, R72 
	748	[1031]	RETURN   	R0 1 ; return 

function #16 <?:1033,1040> (11 instructions, 44 bytes at 000001608D799A10)
1 param, 7 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1034]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1034]	MOVE     	R2 R0 ; R2 := R0
	3	[1034]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	4	[1035]	EQ       	0 R3 K0 ; if R3 ~= nil then PC := 7
	5	[1035]	JMP      	7 ; PC := 7
	6	[1036]	LOADK    	R3 := 1.000000
	7	[1039]	MOVE     	R4 R1 ; R4 := R1
	8	[1039]	MOVE     	R5 R2 ; R5 := R2
	9	[1039]	MOVE     	R6 R3 ; R6 := R3
	10	[1039]	RETURN   	R4 4 ; return R4, R5, R6 
	11	[1040]	RETURN   	R0 1 ; return 

function #17 <?:1042,1062> (55 instructions, 220 bytes at 000001608D799B40)
2 params, 7 slots, 1 upvalue, 0 locals, 20 constants, 0 functions
	1	[1043]	TEST     	R0 1 ; if R0 then PC := 3
	2	[1043]	JMP      	3 ; PC := 3
	3	[1046]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[1046]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x8fbd62e4]
	5	[1046]	LOADK    	R3 K1 ; R3 := "OnUpdateSessionSettings"
	6	[1046]	CALL     	R2 2 1 ; R2(R3)
	7	[1048]	GETGLOBAL	R2 K2 ; R2 := _T
	8	[1048]	GETTABLE 	R2 R2 K3 ; R2 := R2["MenuSuitAvatar"]
	9	[1049]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	10	[1049]	MOVE     	R4 R2 ; R4 := R2
	11	[1049]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[1049]	TEST     	R3 0 ; if not R3 then PC := 18
	13	[1049]	JMP      	18 ; PC := 18
	14	[1050]	GETGLOBAL	R3 K5 ; R3 := 0x89326c93
	15	[1050]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0x78298275]
	16	[1050]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[1050]	MOVE     	R2 R3 ; R2 := R3
	18	[1052]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	19	[1052]	MOVE     	R4 R2 ; R4 := R2
	20	[1052]	CALL     	R3 2 2 ; R3 := R3(R4)
	21	[1052]	TEST     	R3 1 ; if R3 then PC := 55
	22	[1052]	JMP      	55 ; PC := 55
	23	[1053]	SELF     	R3 R2 K7 ; R4 := R2; R3 := R2[0xde321e6f]
	24	[1053]	CALL     	R3 2 2 ; R3 := R3(R4)
	25	[1053]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xcfd657f3]
	26	[1053]	OP_LOADBOOL	R5 0 0 ; R5 := false
	27	[1053]	CALL     	R3 3 1 ; R3(R4,R5)
	28	[1054]	SELF     	R3 R2 K7 ; R4 := R2; R3 := R2[0xde321e6f]
	29	[1054]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[1054]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x1d2dfe4a]
	31	[1054]	GETGLOBAL	R5 K10 ; R5 := 0x25d99d89
	32	[1054]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x62c81b76]
	33	[1054]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[1054]	LOADK    	R6 := 0.000000
	35	[1054]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	36	[1055]	GETUPVAL 	R3 U0 ; R3 := U0
	37	[1055]	GETTABLE 	R3 R3 K13 ; R3 := R3[0xcf1fcba4]
	38	[1055]	CALL     	R3 1 2 ; R3 := R3()
	39	[1055]	TEST     	R3 0 ; if not R3 then PC := 55
	40	[1055]	JMP      	55 ; PC := 55
	41	[1057]	LOADK    	R3 K14 ; R3 := "{\"loadout\":"
	42	[1057]	GETGLOBAL	R4 K15 ; R4 := 0xbe190284
	43	[1057]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0xe08c150e]
	44	[1057]	CALL     	R4 2 2 ; R4 := R4(R5)
	45	[1057]	LOADK    	R5 K17 ; R5 := "}"
	46	[1057]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	47	[1058]	GETGLOBAL	R4 K15 ; R4 := 0xbe190284
	48	[1058]	SELF     	R4 R4 K18 ; R5 := R4; R4 := R4[0x83bfaed0]
	49	[1058]	MOVE     	R6 R3 ; R6 := R3
	50	[1058]	CALL     	R4 3 1 ; R4(R5,R6)
	51	[1059]	GETGLOBAL	R4 K15 ; R4 := 0xbe190284
	52	[1059]	SELF     	R4 R4 K19 ; R5 := R4; R4 := R4[0x6dd14378]
	53	[1059]	MOVE     	R6 R2 ; R6 := R2
	54	[1059]	CALL     	R4 3 1 ; R4(R5,R6)
	55	[1062]	RETURN   	R0 1 ; return 

function #18 <?:1064,1070> (23 instructions, 92 bytes at 000001608D799F00)
1 param, 6 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[1065]	EQ       	0 R0 K1 ; if R0 ~= 4.000000 then PC := 21
	2	[1065]	JMP      	21 ; PC := 21
	3	[1065]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	4	[1065]	GETGLOBAL	R2 K3 ; R2 := 0x25d99d89
	5	[1065]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[1065]	TEST     	R1 1 ; if R1 then PC := 21
	7	[1065]	JMP      	21 ; PC := 21
	8	[1066]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	9	[1066]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xae7e2261]
	10	[1066]	GETGLOBAL	R3 K5 ; R3 := 0xb009bbc6
	11	[1066]	GETGLOBAL	R4 K6 ; R4 := mPurchaseParams
	12	[1066]	GETTABLE 	R4 R4 K7 ; R4 := R4["mStoreItem"]
	13	[1066]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xf278f8a1]
	14	[1066]	CALL     	R4 2 0 ; R4,... := R4(R5)
	15	[1066]	CALL     	R3 0 0 ; R3,... := R3(R4,...)
	16	[1066]	CALL     	R1 0 1 ; R1(R2,...)
	17	[1067]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	18	[1067]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xb6e2ab0d]
	19	[1067]	LOADK    	R3 K10 ; R3 := "OnSaveLoadOutComplete"
	20	[1067]	CALL     	R1 3 1 ; R1(R2,R3)
	21	[1069]	LOADNIL  	R1 R1 ; R1 := nil
	22	[1069]	SETGLOBALHASH	R1 K6 ; mPurchaseParams := R1
	23	[1070]	RETURN   	R0 1 ; return 

function #19 <?:1072,1086> (46 instructions, 184 bytes at 000001608D79A130)
1 param, 6 slots, 2 upvalues, 0 locals, 17 constants, 0 functions
	1	[1073]	SETGLOBALHASH	R1 K0 ; mPurchasePopupMovie := R1
	2	[1074]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	3	[1074]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[1074]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[1074]	TEST     	R1 1 ; if R1 then PC := 11
	6	[1074]	JMP      	11 ; PC := 11
	7	[1075]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[1075]	MOVE     	R2 R0 ; R2 := R0
	9	[1075]	GETGLOBAL	R3 K2 ; R3 := mPurchaseParams
	10	[1075]	CALL     	R1 3 1 ; R1(R2,R3)
	11	[1077]	TEST     	R0 0 ; if not R0 then PC := 38
	12	[1077]	JMP      	38 ; PC := 38
	13	[1077]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	14	[1077]	GETTABLE 	R1 R1 K3 ; R1 := R1["mStoreItem"]
	15	[1077]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xea735790]
	16	[1077]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[1077]	TEST     	R1 0 ; if not R1 then PC := 38
	18	[1077]	JMP      	38 ; PC := 38
	19	[1078]	GETGLOBAL	R1 K5 ; R1 := 0x603636ad
	20	[1078]	GETGLOBAL	R2 K2 ; R2 := mPurchaseParams
	21	[1078]	GETTABLE 	R2 R2 K3 ; R2 := R2["mStoreItem"]
	22	[1078]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xd3a9d01f]
	23	[1078]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[1078]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x6d604ba7]
	25	[1078]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[1078]	NEWTABLE 	R3 0 0 ; R3 := {}
	27	[1078]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	28	[1079]	GETUPVAL 	R2 U1 ; R2 := U1
	29	[1079]	GETTABLE 	R2 R2 K8 ; R2 := R2[0xe0cba3ca]
	30	[1079]	GETGLOBAL	R3 K5 ; R3 := 0x603636ad
	31	[1079]	LOADK    	R4 K9 ; R4 := "/Lotus/Language/Menu/EquippedGearOnPurchase"
	32	[1079]	NEWTABLE 	R5 0 1 ; R5 := {}
	33	[1079]	SETTABLE 	R5 K10 R1 ; R5["ITEM"] := R1
	34	[1079]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	35	[1079]	LOADK    	R4 K11 ; R4 := "AddToGear"
	36	[1079]	CALL     	R2 3 1 ; R2(R3,R4)
	37	[1079]	JMP      	40 ; PC := 40
	38	[1081]	LOADNIL  	R2 R2 ; R2 := nil
	39	[1081]	SETGLOBALHASH	R2 K2 ; mPurchaseParams := R2
	40	[1083]	LOADK    	R2 := 1.000000
	41	[1083]	SETGLOBALHASH	R2 K12 ; mQuantityToReceive := R2
	42	[1084]	GETGLOBAL	R2 K13 ; R2 := _T
	43	[1084]	SETTABLE 	R2 K14 K15 ; R2["purchasedItems"] := nil
	44	[1085]	GETGLOBAL	R2 K13 ; R2 := _T
	45	[1085]	SETTABLE 	R2 K16 K15 ; R2["PurchaseSuccessLocOverride"] := nil
	46	[1086]	RETURN   	R0 1 ; return 

function #20 <?:1088,1216> (366 instructions, 1464 bytes at 000001608D79A480)
0 params, 39 slots, 3 upvalues, 0 locals, 85 constants, 0 functions
	1	[1089]	GETGLOBAL	R0 K0 ; R0 := mPurchaseParams
	2	[1089]	GETTABLE 	R0 R0 K1 ; R0 := R0["mSkipConfirm"]
	3	[1089]	TEST     	R0 0 ; if not R0 then PC := 13
	4	[1089]	JMP      	13 ; PC := 13
	5	[1090]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	6	[1090]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xe4162eed]
	7	[1090]	LOADK    	R2 K4 ; R2 := "ConfirmPurchase"
	8	[1090]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	9	[1090]	LOADK    	R4 := 4.000000
	10	[1090]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[1090]	CALL     	R0 0 1 ; R0(R1,...)
	12	[1091]	RETURN   	R0 1 ; return 
	13	[1095]	LOADK    	R0 K7 ; R0 := ""
	14	[1096]	LOADK    	R1 K7 ; R1 := ""
	15	[1098]	NEWTABLE 	R2 0 0 ; R2 := {}
	16	[1099]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[1099]	GETTABLE 	R3 R3 K8 ; R3 := R3["REGULAR_CREDITS"]
	18	[1099]	SETTABLE 	R2 R3 K9 ; R2[R3] := "<CREDITS>"
	19	[1100]	GETUPVAL 	R3 U0 ; R3 := U0
	20	[1100]	GETTABLE 	R3 R3 K10 ; R3 := R3["PREMIUM_CREDITS"]
	21	[1100]	SETTABLE 	R2 R3 K11 ; R2[R3] := "<PLATINUM_CREDITS>"
	22	[1101]	GETUPVAL 	R3 U0 ; R3 := U0
	23	[1101]	GETTABLE 	R3 R3 K12 ; R3 := R3["PRIME_BUCKS"]
	24	[1101]	SETTABLE 	R2 R3 K13 ; R2[R3] := "<PRIME_BUCKS>"
	25	[1102]	GETUPVAL 	R3 U0 ; R3 := U0
	26	[1102]	GETTABLE 	R3 R3 K14 ; R3 := R3["PRIME_TOKENS"]
	27	[1102]	SETTABLE 	R2 R3 K15 ; R2[R3] := "<PRIME_TOKENS>"
	28	[1103]	GETUPVAL 	R3 U0 ; R3 := U0
	29	[1103]	GETTABLE 	R3 R3 K16 ; R3 := R3["STANDING"]
	30	[1103]	SETTABLE 	R2 R3 K17 ; R2[R3] := "<REPUTATION>"
	31	[1104]	GETUPVAL 	R3 U0 ; R3 := U0
	32	[1104]	GETTABLE 	R3 R3 K18 ; R3 := R3["AMBULAS_DATA"]
	33	[1104]	SETTABLE 	R2 R3 K19 ; R2[R3] := "<AMBULAS_DATA>"
	34	[1105]	GETUPVAL 	R3 U0 ; R3 := U0
	35	[1105]	GETTABLE 	R3 R3 K20 ; R3 := R3["FOCUS_XP"]
	36	[1105]	SETTABLE 	R2 R3 K21 ; R2[R3] := "<FOCUS>"
	37	[1107]	GETGLOBAL	R3 K0 ; R3 := mPurchaseParams
	38	[1107]	GETTABLE 	R3 R3 K22 ; R3 := R3["mStoreItem"]
	39	[1107]	SELF     	R3 R3 K23 ; R4 := R3; R3 := R3[0x075cb724]
	40	[1107]	CALL     	R3 2 2 ; R3 := R3(R4)
	41	[1107]	GETGLOBAL	R4 K24 ; R4 := mPurchaseQuantityMultiplier
	42	[1107]	MUL      	R3 R3 R4 ; R3 := R3 * R4
	43	[1108]	NEWTABLE 	R4 0 0 ; R4 := {}
	44	[1109]	OP_LOADBOOL	R5 1 0 ; R5 := true
	45	[1110]	GETGLOBAL	R6 K25 ; R6 := 0xcfc01047
	46	[1110]	GETGLOBAL	R7 K26 ; R7 := mPurchaseUnitPrice
	47	[1110]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	48	[1110]	JMP      	66 ; PC := 66
	49	[1111]	GETGLOBAL	R11 K27 ; R11 := 0x0b96777e
	50	[1111]	MOVE     	R12 R10 ; R12 := R10
	51	[1111]	CALL     	R11 2 2 ; R11 := R11(R12)
	52	[1111]	EQ       	1 R11 K28 ; if R11 == "table" then PC := 66
	53	[1111]	JMP      	66 ; PC := 66
	54	[1112]	DIV      	R11 R10 R3 ; R11 := R10 / R3
	55	[1112]	SETTABLE 	R4 R9 R11 ; R4[R9] := R11
	56	[1113]	GETGLOBAL	R11 K29 ; R11 := 0x5bced4c4
	57	[1113]	GETTABLE 	R11 R11 K30 ; R11 := R11[0x55f27c30]
	58	[1113]	GETTABLE 	R12 R4 R9 ; R12 := R4[R9]
	59	[1113]	CALL     	R11 2 2 ; R11 := R11(R12)
	60	[1113]	MUL      	R11 R11 R3 ; R11 := R11 * R3
	61	[1113]	EQ       	1 R11 R10 ; if R11 == R10 then PC := 66
	62	[1113]	JMP      	66 ; PC := 66
	63	[1114]	OP_LOADBOOL	R5 0 0 ; R5 := false
	64	[1115]	GETGLOBAL	R4 K26 ; R4 := mPurchaseUnitPrice
	65	[1116]	JMP      	68 ; PC := 68
	66	[1110]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 49; R8 := R9 end
	67	[1118]	JMP      	49 ; PC := 49
	68	[1121]	NEWTABLE 	R11 7 0 ; R11 := {}
	69	[1121]	GETUPVAL 	R12 U0 ; R12 := U0
	70	[1121]	GETTABLE 	R12 R12 K18 ; R12 := R12["AMBULAS_DATA"]
	71	[1121]	GETUPVAL 	R13 U0 ; R13 := U0
	72	[1121]	GETTABLE 	R13 R13 K20 ; R13 := R13["FOCUS_XP"]
	73	[1121]	GETUPVAL 	R14 U0 ; R14 := U0
	74	[1121]	GETTABLE 	R14 R14 K16 ; R14 := R14["STANDING"]
	75	[1121]	GETUPVAL 	R15 U0 ; R15 := U0
	76	[1121]	GETTABLE 	R15 R15 K12 ; R15 := R15["PRIME_BUCKS"]
	77	[1121]	GETUPVAL 	R16 U0 ; R16 := U0
	78	[1121]	GETTABLE 	R16 R16 K10 ; R16 := R16["PREMIUM_CREDITS"]
	79	[1121]	GETUPVAL 	R17 U0 ; R17 := U0
	80	[1121]	GETTABLE 	R17 R17 K8 ; R17 := R17["REGULAR_CREDITS"]
	81	[1121]	GETUPVAL 	R18 U0 ; R18 := U0
	82	[1121]	GETTABLE 	R18 R18 K31 ; R18 := R18["ITEMS"]
	83	[1121]	SETLIST  	R11 7 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 7
	84	[1123]	OP_LOADBOOL	R12 1 0 ; R12 := true
	85	[1124]	GETGLOBAL	R13 K32 ; R13 := 0xc8802016
	86	[1124]	MOVE     	R14 R11 ; R14 := R11
	87	[1124]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	88	[1124]	JMP      	185 ; PC := 185
	89	[1125]	GETUPVAL 	R18 U0 ; R18 := U0
	90	[1125]	GETTABLE 	R18 R18 K31 ; R18 := R18["ITEMS"]
	91	[1125]	EQ       	0 R17 R18 ; if R17 ~= R18 then PC := 134
	92	[1125]	JMP      	134 ; PC := 134
	93	[1126]	GETGLOBAL	R18 K33 ; R18 := mPurchaseTotalPrice
	94	[1126]	GETTABLE 	R18 R18 R17 ; R18 := R18[R17]
	95	[1126]	TEST     	R18 0 ; if not R18 then PC := 185
	96	[1126]	JMP      	185 ; PC := 185
	97	[1127]	OP_LOADBOOL	R12 0 0 ; R12 := false
	98	[1128]	LOADK    	R18 := 1.000000
	99	[1128]	GETGLOBAL	R19 K33 ; R19 := mPurchaseTotalPrice
	100	[1128]	GETTABLE 	R19 R19 R17 ; R19 := R19[R17]
	101	[1128]	LEN      	R19 R19 ; R19 := # R19
	102	[1128]	LOADK    	R20 := 1.000000
	103	[1128]	FORPREP  	R18 132 ; R18 -= R20; PC := 132
	104	[1129]	GETGLOBAL	R22 K33 ; R22 := mPurchaseTotalPrice
	105	[1129]	GETTABLE 	R22 R22 R17 ; R22 := R22[R17]
	106	[1129]	GETTABLE 	R22 R22 R21 ; R22 := R22[R21]
	107	[1130]	GETGLOBAL	R23 K34 ; R23 := 0xb009bbc6
	108	[1130]	GETTABLE 	R24 R22 K35 ; R24 := R22["mItemType"]
	109	[1130]	CALL     	R23 2 2 ; R23 := R23(R24)
	110	[1132]	EQ       	1 R1 K7 ; if R1 == "" then PC := 115
	111	[1132]	JMP      	115 ; PC := 115
	112	[1133]	MOVE     	R24 R1 ; R24 := R1
	113	[1133]	LOADK    	R25 K36 ; R25 := "\r"
	114	[1133]	CONCAT   	R1 R24 R25 ; R1 := R24 .. R25
	115	[1136]	MOVE     	R24 R1 ; R24 := R1
	116	[1136]	GETGLOBAL	R25 K2 ; R25 := 0xae91e43b
	117	[1136]	SELF     	R25 R25 K37 ; R26 := R25; R25 := R25[0x42b04007]
	118	[1136]	GETGLOBAL	R27 K5 ; R27 := 0x64fb1586
	119	[1136]	SELF     	R28 R23 K38 ; R29 := R23; R28 := R23[0xd3a9d01f]
	120	[1136]	CALL     	R28 2 0 ; R28,... := R28(R29)
	121	[1136]	CALL     	R27 0 2 ; R27 := R27(R28,...)
	122	[1136]	OP_LOADBOOL	R28 0 0 ; R28 := false
	123	[1136]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	124	[1136]	CONCAT   	R1 R24 R25 ; R1 := R24 .. R25
	125	[1137]	GETTABLE 	R24 R22 K39 ; R24 := R22["mItemCount"]
	126	[1137]	LT       	0 K40 R24 ; if 1.000000 >= R24 then PC := 132
	127	[1137]	JMP      	132 ; PC := 132
	128	[1138]	MOVE     	R24 R1 ; R24 := R1
	129	[1138]	LOADK    	R25 K41 ; R25 := " x "
	130	[1138]	GETTABLE 	R26 R22 K39 ; R26 := R22["mItemCount"]
	131	[1138]	CONCAT   	R1 R24 R26 ; R1 := R24 .. R25 .. R26
	132	[1128]	FORLOOP  	R18 104 ; R18 += R20; if R18 <= R19 then begin PC := 104; R21 := R18 end
	133	[1141]	JMP      	185 ; PC := 185
	134	[1143]	GETTABLE 	R24 R4 R17 ; R24 := R4[R17]
	135	[1143]	TEST     	R24 0 ; if not R24 then PC := 158
	136	[1143]	JMP      	158 ; PC := 158
	137	[1143]	GETTABLE 	R24 R4 R17 ; R24 := R4[R17]
	138	[1143]	LT       	0 K42 R24 ; if 0.000000 >= R24 then PC := 158
	139	[1143]	JMP      	158 ; PC := 158
	140	[1144]	OP_LOADBOOL	R12 0 0 ; R12 := false
	141	[1146]	EQ       	1 R0 K7 ; if R0 == "" then PC := 146
	142	[1146]	JMP      	146 ; PC := 146
	143	[1147]	MOVE     	R24 R0 ; R24 := R0
	144	[1147]	LOADK    	R25 K43 ; R25 := " + "
	145	[1147]	CONCAT   	R0 R24 R25 ; R0 := R24 .. R25
	146	[1150]	GETGLOBAL	R24 K2 ; R24 := 0xae91e43b
	147	[1150]	SELF     	R24 R24 K37 ; R25 := R24; R24 := R24[0x42b04007]
	148	[1150]	GETTABLE 	R26 R2 R17 ; R26 := R2[R17]
	149	[1150]	OP_LOADBOOL	R27 1 0 ; R27 := true
	150	[1150]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	151	[1151]	MOVE     	R25 R0 ; R25 := R0
	152	[1151]	MOVE     	R26 R24 ; R26 := R24
	153	[1151]	GETUPVAL 	R27 U1 ; R27 := U1
	154	[1151]	GETTABLE 	R27 R27 K44 ; R27 := R27[0x1142c7a8]
	155	[1151]	GETTABLE 	R28 R4 R17 ; R28 := R4[R17]
	156	[1151]	CALL     	R27 2 2 ; R27 := R27(R28)
	157	[1151]	CONCAT   	R0 R25 R27 ; R0 := R25 .. R26 .. R27
	158	[1153]	GETGLOBAL	R25 K33 ; R25 := mPurchaseTotalPrice
	159	[1153]	GETTABLE 	R25 R25 R17 ; R25 := R25[R17]
	160	[1153]	TEST     	R25 0 ; if not R25 then PC := 185
	161	[1153]	JMP      	185 ; PC := 185
	162	[1153]	GETGLOBAL	R25 K33 ; R25 := mPurchaseTotalPrice
	163	[1153]	GETTABLE 	R25 R25 R17 ; R25 := R25[R17]
	164	[1153]	LT       	0 K42 R25 ; if 0.000000 >= R25 then PC := 185
	165	[1153]	JMP      	185 ; PC := 185
	166	[1154]	OP_LOADBOOL	R12 0 0 ; R12 := false
	167	[1156]	EQ       	1 R1 K7 ; if R1 == "" then PC := 172
	168	[1156]	JMP      	172 ; PC := 172
	169	[1157]	MOVE     	R25 R1 ; R25 := R1
	170	[1157]	LOADK    	R26 K43 ; R26 := " + "
	171	[1157]	CONCAT   	R1 R25 R26 ; R1 := R25 .. R26
	172	[1160]	GETGLOBAL	R25 K2 ; R25 := 0xae91e43b
	173	[1160]	SELF     	R25 R25 K37 ; R26 := R25; R25 := R25[0x42b04007]
	174	[1160]	GETTABLE 	R27 R2 R17 ; R27 := R2[R17]
	175	[1160]	OP_LOADBOOL	R28 1 0 ; R28 := true
	176	[1160]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	177	[1161]	MOVE     	R26 R1 ; R26 := R1
	178	[1161]	MOVE     	R27 R25 ; R27 := R25
	179	[1161]	GETUPVAL 	R28 U1 ; R28 := U1
	180	[1161]	GETTABLE 	R28 R28 K44 ; R28 := R28[0x1142c7a8]
	181	[1161]	GETGLOBAL	R29 K33 ; R29 := mPurchaseTotalPrice
	182	[1161]	GETTABLE 	R29 R29 R17 ; R29 := R29[R17]
	183	[1161]	CALL     	R28 2 2 ; R28 := R28(R29)
	184	[1161]	CONCAT   	R1 R26 R28 ; R1 := R26 .. R27 .. R28
	185	[1124]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 89; R15 := R16 end
	186	[1163]	JMP      	89 ; PC := 89
	187	[1166]	GETUPVAL 	R26 U2 ; R26 := U2
	188	[1166]	GETTABLE 	R26 R26 K45 ; R26 := R26[0xc7ca0123]
	189	[1166]	GETGLOBAL	R27 K2 ; R27 := 0xae91e43b
	190	[1166]	GETGLOBAL	R28 K0 ; R28 := mPurchaseParams
	191	[1166]	GETTABLE 	R28 R28 K22 ; R28 := R28["mStoreItem"]
	192	[1166]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	193	[1169]	GETGLOBAL	R27 K0 ; R27 := mPurchaseParams
	194	[1169]	GETTABLE 	R27 R27 K22 ; R27 := R27["mStoreItem"]
	195	[1169]	SELF     	R27 R27 K46 ; R28 := R27; R27 := R27[0xc3bbc5cb]
	196	[1169]	CALL     	R27 2 2 ; R27 := R27(R28)
	197	[1169]	TEST     	R27 0 ; if not R27 then PC := 282
	198	[1169]	JMP      	282 ; PC := 282
	199	[1170]	OP_LOADBOOL	R27 1 0 ; R27 := true
	200	[1171]	GETGLOBAL	R28 K0 ; R28 := mPurchaseParams
	201	[1171]	GETTABLE 	R28 R28 K22 ; R28 := R28["mStoreItem"]
	202	[1171]	SELF     	R28 R28 K47 ; R29 := R28; R28 := R28[0xf278f8a1]
	203	[1171]	CALL     	R28 2 2 ; R28 := R28(R29)
	204	[1171]	SELF     	R28 R28 K48 ; R29 := R28; R28 := R28[0xf2deaf69]
	205	[1171]	GETGLOBAL	R30 K49 ; R30 := gLotusBoosterUpgradeType
	206	[1171]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	207	[1171]	TEST     	R28 0 ; if not R28 then PC := 218
	208	[1171]	JMP      	218 ; PC := 218
	209	[1172]	GETGLOBAL	R28 K34 ; R28 := 0xb009bbc6
	210	[1172]	GETGLOBAL	R29 K0 ; R29 := mPurchaseParams
	211	[1172]	GETTABLE 	R29 R29 K22 ; R29 := R29["mStoreItem"]
	212	[1172]	SELF     	R29 R29 K47 ; R30 := R29; R29 := R29[0xf278f8a1]
	213	[1172]	CALL     	R29 2 0 ; R29,... := R29(R30)
	214	[1172]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	215	[1173]	SELF     	R29 R28 K50 ; R30 := R28; R29 := R28[0x4bcc0a75]
	216	[1173]	CALL     	R29 2 2 ; R29 := R29(R30)
	217	[1173]	MOVE     	R27 R29 ; R27 := R29
	218	[1176]	TEST     	R27 0 ; if not R27 then PC := 268
	219	[1176]	JMP      	268 ; PC := 268
	220	[1177]	GETGLOBAL	R29 K2 ; R29 := 0xae91e43b
	221	[1177]	SELF     	R29 R29 K37 ; R30 := R29; R29 := R29[0x42b04007]
	222	[1177]	LOADK    	R31 K51 ; R31 := "/Lotus/Language/Menu/Global_DurabilityPermanent"
	223	[1177]	OP_LOADBOOL	R32 0 0 ; R32 := false
	224	[1177]	CALL     	R29 4 2 ; R29 := R29(R30,R31,R32)
	225	[1178]	GETGLOBAL	R30 K52 ; R30 := 0xa94df70b
	226	[1178]	SELF     	R30 R30 K53 ; R31 := R30; R30 := R30[0x2539e471]
	227	[1178]	GETGLOBAL	R32 K0 ; R32 := mPurchaseParams
	228	[1178]	GETTABLE 	R32 R32 K54 ; R32 := R32["mDurability"]
	229	[1178]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	230	[1180]	EQ       	0 R30 K55 ; if R30 ~= 259200.000000 then PC := 239
	231	[1180]	JMP      	239 ; PC := 239
	232	[1181]	GETGLOBAL	R31 K2 ; R31 := 0xae91e43b
	233	[1181]	SELF     	R31 R31 K37 ; R32 := R31; R31 := R31[0x42b04007]
	234	[1181]	LOADK    	R33 K56 ; R33 := "/Lotus/Language/Menu/Global_3Days"
	235	[1181]	OP_LOADBOOL	R34 0 0 ; R34 := false
	236	[1181]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	237	[1181]	MOVE     	R30 R31 ; R30 := R31
	238	[1181]	JMP      	263 ; PC := 263
	239	[1182]	EQ       	0 R30 K57 ; if R30 ~= 604800.000000 then PC := 248
	240	[1182]	JMP      	248 ; PC := 248
	241	[1183]	GETGLOBAL	R31 K2 ; R31 := 0xae91e43b
	242	[1183]	SELF     	R31 R31 K37 ; R32 := R31; R31 := R31[0x42b04007]
	243	[1183]	LOADK    	R33 K58 ; R33 := "/Lotus/Language/Menu/Global_7Days"
	244	[1183]	OP_LOADBOOL	R34 0 0 ; R34 := false
	245	[1183]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	246	[1183]	MOVE     	R30 R31 ; R30 := R31
	247	[1183]	JMP      	263 ; PC := 263
	248	[1185]	GETUPVAL 	R31 U1 ; R31 := U1
	249	[1185]	GETTABLE 	R31 R31 K59 ; R31 := R31[0x06d055f9]
	250	[1185]	LT       	1 K42 R30 ; if 0.000000 < R30 then PC := 253
	251	[1185]	JMP      	253 ; PC := 253
	252	[1185]	OP_LOADBOOL	R32 0 1 ; R32 := false; PC := 253
	253	[1185]	OP_LOADBOOL	R32 1 0 ; R32 := true
	254	[1185]	GETUPVAL 	R33 U2 ; R33 := U2
	255	[1185]	GETTABLE 	R33 R33 K60 ; R33 := R33[0x817b1503]
	256	[1185]	GETGLOBAL	R34 K2 ; R34 := 0xae91e43b
	257	[1185]	MOVE     	R35 R30 ; R35 := R30
	258	[1185]	OP_LOADBOOL	R36 1 0 ; R36 := true
	259	[1185]	CALL     	R33 4 2 ; R33 := R33(R34,R35,R36)
	260	[1185]	MOVE     	R34 R29 ; R34 := R29
	261	[1185]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	262	[1185]	MOVE     	R30 R31 ; R30 := R31
	263	[1187]	MOVE     	R31 R30 ; R31 := R30
	264	[1187]	LOADK    	R32 K61 ; R32 := " "
	265	[1187]	MOVE     	R33 R26 ; R33 := R26
	266	[1187]	CONCAT   	R26 R31 R33 ; R26 := R31 .. R32 .. R33
	267	[1187]	JMP      	282 ; PC := 282
	268	[1189]	GETGLOBAL	R31 K52 ; R31 := 0xa94df70b
	269	[1189]	SELF     	R31 R31 K62 ; R32 := R31; R31 := R31[0xbd680672]
	270	[1189]	GETGLOBAL	R33 K0 ; R33 := mPurchaseParams
	271	[1189]	GETTABLE 	R33 R33 K54 ; R33 := R33["mDurability"]
	272	[1189]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	273	[1190]	MOVE     	R32 R26 ; R32 := R26
	274	[1190]	LOADK    	R33 K63 ; R33 := " ("
	275	[1190]	GETGLOBAL	R34 K64 ; R34 := 0x603636ad
	276	[1190]	LOADK    	R35 K65 ; R35 := "/Lotus/Language/Menu/Global_BoosterUses"
	277	[1190]	NEWTABLE 	R36 0 1 ; R36 := {}
	278	[1190]	SETTABLE 	R36 K66 R31 ; R36["NUM_USES"] := R31
	279	[1190]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	280	[1190]	LOADK    	R35 K67 ; R35 := ")"
	281	[1190]	CONCAT   	R26 R32 R35 ; R26 := R32 .. R33 .. R34 .. R35
	282	[1194]	LOADK    	R32 K7 ; R32 := ""
	283	[1195]	NEWTABLE 	R33 0 4 ; R33 := {}
	284	[1195]	SETTABLE 	R33 K68 R26 ; R33["ITEM"] := R26
	285	[1195]	GETGLOBAL	R34 K70 ; R34 := mQuantityToReceive
	286	[1195]	MUL      	R34 R34 R3 ; R34 := R34 * R3
	287	[1195]	SETTABLE 	R33 K69 R34 ; R33[0x07000038] := R34
	288	[1195]	SETTABLE 	R33 K71 R0 ; R33["UNIT_PRICE"] := R0
	289	[1195]	SETTABLE 	R33 K72 R1 ; R33["PRICE"] := R1
	290	[1196]	GETGLOBAL	R34 K0 ; R34 := mPurchaseParams
	291	[1196]	GETTABLE 	R34 R34 K73 ; R34 := R34["mSource"]
	292	[1196]	EQ       	0 R34 K75 ; if R34 ~= 2.000000 then PC := 304
	293	[1196]	JMP      	304 ; PC := 304
	294	[1196]	TEST     	R12 0 ; if not R12 then PC := 304
	295	[1196]	JMP      	304 ; PC := 304
	296	[1197]	GETGLOBAL	R34 K2 ; R34 := 0xae91e43b
	297	[1197]	SELF     	R34 R34 K37 ; R35 := R34; R34 := R34[0x42b04007]
	298	[1197]	LOADK    	R36 K76 ; R36 := "/Lotus/Language/Menu/Global_FreePurchaseConfirmation"
	299	[1197]	OP_LOADBOOL	R37 0 0 ; R37 := false
	300	[1197]	MOVE     	R38 R33 ; R38 := R33
	301	[1197]	CALL     	R34 5 2 ; R34 := R34(R35,R36,R37,R38)
	302	[1197]	MOVE     	R32 R34 ; R32 := R34
	303	[1197]	JMP      	361 ; PC := 361
	304	[1198]	GETGLOBAL	R34 K70 ; R34 := mQuantityToReceive
	305	[1198]	LT       	0 K40 R34 ; if 1.000000 >= R34 then PC := 346
	306	[1198]	JMP      	346 ; PC := 346
	307	[1199]	GETGLOBAL	R34 K70 ; R34 := mQuantityToReceive
	308	[1199]	GETGLOBAL	R35 K0 ; R35 := mPurchaseParams
	309	[1199]	GETTABLE 	R35 R35 K77 ; R35 := R35["mQuantity"]
	310	[1199]	EQ       	1 R34 R35 ; if R34 == R35 then PC := 328
	311	[1199]	JMP      	328 ; PC := 328
	312	[1200]	GETGLOBAL	R34 K0 ; R34 := mPurchaseParams
	313	[1200]	GETTABLE 	R34 R34 K77 ; R34 := R34["mQuantity"]
	314	[1200]	SETTABLE 	R33 K78 R34 ; R33["QUANTITY_BOUGHT"] := R34
	315	[1201]	GETGLOBAL	R34 K70 ; R34 := mQuantityToReceive
	316	[1201]	GETGLOBAL	R35 K0 ; R35 := mPurchaseParams
	317	[1201]	GETTABLE 	R35 R35 K77 ; R35 := R35["mQuantity"]
	318	[1201]	SUB      	R34 R34 R35 ; R34 := R34 - R35
	319	[1201]	SETTABLE 	R33 K79 R34 ; R33["QUANTITY_FREE"] := R34
	320	[1202]	GETGLOBAL	R34 K2 ; R34 := 0xae91e43b
	321	[1202]	SELF     	R34 R34 K37 ; R35 := R34; R34 := R34[0x42b04007]
	322	[1202]	LOADK    	R36 K80 ; R36 := "/Lotus/Language/Menu/Global_BogoPurchaseConfirmation"
	323	[1202]	OP_LOADBOOL	R37 0 0 ; R37 := false
	324	[1202]	MOVE     	R38 R33 ; R38 := R33
	325	[1202]	CALL     	R34 5 2 ; R34 := R34(R35,R36,R37,R38)
	326	[1202]	MOVE     	R32 R34 ; R32 := R34
	327	[1202]	JMP      	361 ; PC := 361
	328	[1203]	TEST     	R5 1 ; if R5 then PC := 338
	329	[1203]	JMP      	338 ; PC := 338
	330	[1204]	GETGLOBAL	R34 K2 ; R34 := 0xae91e43b
	331	[1204]	SELF     	R34 R34 K37 ; R35 := R34; R34 := R34[0x42b04007]
	332	[1204]	LOADK    	R36 K81 ; R36 := "/Lotus/Language/Menu/Global_MultiBundlePurchaseConfirmation"
	333	[1204]	OP_LOADBOOL	R37 0 0 ; R37 := false
	334	[1204]	MOVE     	R38 R33 ; R38 := R33
	335	[1204]	CALL     	R34 5 2 ; R34 := R34(R35,R36,R37,R38)
	336	[1204]	MOVE     	R32 R34 ; R32 := R34
	337	[1204]	JMP      	361 ; PC := 361
	338	[1206]	GETGLOBAL	R34 K2 ; R34 := 0xae91e43b
	339	[1206]	SELF     	R34 R34 K37 ; R35 := R34; R34 := R34[0x42b04007]
	340	[1206]	LOADK    	R36 K82 ; R36 := "/Lotus/Language/Menu/Global_MultiPurchaseConfirmation"
	341	[1206]	OP_LOADBOOL	R37 0 0 ; R37 := false
	342	[1206]	MOVE     	R38 R33 ; R38 := R33
	343	[1206]	CALL     	R34 5 2 ; R34 := R34(R35,R36,R37,R38)
	344	[1206]	MOVE     	R32 R34 ; R32 := R34
	345	[1207]	JMP      	361 ; PC := 361
	346	[1209]	GETTABLE 	R34 R33 K69 ; R34 := R33["QUANTITY"]
	347	[1209]	LT       	0 K40 R34 ; if 1.000000 >= R34 then PC := 354
	348	[1209]	JMP      	354 ; PC := 354
	349	[1210]	MOVE     	R34 R26 ; R34 := R26
	350	[1210]	LOADK    	R35 K41 ; R35 := " x "
	351	[1210]	GETTABLE 	R36 R33 K69 ; R36 := R33["QUANTITY"]
	352	[1210]	CONCAT   	R34 R34 R36 ; R34 := R34 .. R35 .. R36
	353	[1210]	SETTABLE 	R33 K68 R34 ; R33["ITEM"] := R34
	354	[1212]	GETGLOBAL	R34 K2 ; R34 := 0xae91e43b
	355	[1212]	SELF     	R34 R34 K37 ; R35 := R34; R34 := R34[0x42b04007]
	356	[1212]	LOADK    	R36 K83 ; R36 := "/Lotus/Language/Menu/Global_PurchaseConfirmation"
	357	[1212]	OP_LOADBOOL	R37 0 0 ; R37 := false
	358	[1212]	MOVE     	R38 R33 ; R38 := R33
	359	[1212]	CALL     	R34 5 2 ; R34 := R34(R35,R36,R37,R38)
	360	[1212]	MOVE     	R32 R34 ; R32 := R34
	361	[1215]	GETUPVAL 	R34 U1 ; R34 := U1
	362	[1215]	GETTABLE 	R34 R34 K84 ; R34 := R34[0xdedfded7]
	363	[1215]	MOVE     	R35 R32 ; R35 := R32
	364	[1215]	LOADK    	R36 K4 ; R36 := "ConfirmPurchase"
	365	[1215]	CALL     	R34 3 1 ; R34(R35,R36)
	366	[1216]	RETURN   	R0 1 ; return 

function #21 <?:1218,1241> (56 instructions, 224 bytes at 0000016097B921B0)
2 params, 11 slots, 3 upvalues, 0 locals, 23 constants, 0 functions
	1	[1219]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1219]	LOADK    	R3 := 0.000000
	3	[1219]	CALL     	R2 2 1 ; R2(R3)
	4	[1221]	TEST     	R0 0 ; if not R0 then PC := 48
	5	[1221]	JMP      	48 ; PC := 48
	6	[1222]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[1222]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x659d451f]
	8	[1222]	GETGLOBAL	R3 K1 ; R3 := 0x0032441c
	9	[1222]	GETTABLE 	R3 R3 K2 ; R3 := R3["UISound_Purchase"]
	10	[1222]	CALL     	R2 2 1 ; R2(R3)
	11	[1224]	GETGLOBAL	R2 K3 ; R2 := 0x76ea806b
	12	[1224]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x3f3ae64c]
	13	[1224]	LOADK    	R4 := 0.000000
	14	[1224]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	15	[1225]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	16	[1225]	MOVE     	R4 R2 ; R4 := R2
	17	[1225]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[1225]	TEST     	R3 1 ; if R3 then PC := 54
	19	[1225]	JMP      	54 ; PC := 54
	20	[1226]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0x80563238]
	21	[1226]	CALL     	R3 2 2 ; R3 := R3(R4)
	22	[1227]	GETGLOBAL	R4 K5 ; R4 := 0x7b998233
	23	[1227]	MOVE     	R5 R3 ; R5 := R3
	24	[1227]	CALL     	R4 2 2 ; R4 := R4(R5)
	25	[1227]	TEST     	R4 1 ; if R4 then PC := 54
	26	[1227]	JMP      	54 ; PC := 54
	27	[1228]	GETUPVAL 	R4 U2 ; R4 := U2
	28	[1228]	SELF     	R5 R3 K7 ; R6 := R3; R5 := R3[0x1e11a6d0]
	29	[1228]	CALL     	R5 2 2 ; R5 := R5(R6)
	30	[1228]	SELF     	R6 R3 K8 ; R7 := R3; R6 := R3[0x9b466ee3]
	31	[1228]	CALL     	R6 2 2 ; R6 := R6(R7)
	32	[1228]	SELF     	R7 R3 K9 ; R8 := R3; R7 := R3[0x4ce20fca]
	33	[1228]	CALL     	R7 2 2 ; R7 := R7(R8)
	34	[1228]	SELF     	R8 R3 K10 ; R9 := R3; R8 := R3[0xbd6729ff]
	35	[1228]	CALL     	R8 2 2 ; R8 := R8(R9)
	36	[1228]	SELF     	R9 R3 K11 ; R10 := R3; R9 := R3[0xa59dbd63]
	37	[1228]	CALL     	R9 2 0 ; R9,... := R9(R10)
	38	[1228]	CALL     	R4 0 1 ; R4(R5,...)
	39	[1230]	GETGLOBAL	R4 K12 ; R4 := mPurchaseParams
	40	[1230]	EQ       	1 R4 K13 ; if R4 == nil then PC := 54
	41	[1230]	JMP      	54 ; PC := 54
	42	[1231]	GETGLOBAL	R4 K14 ; R4 := 0xae91e43b
	43	[1231]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0xe4162eed]
	44	[1231]	LOADK    	R6 K16 ; R6 := "CheckPurchaseRequirements"
	45	[1231]	LOADK    	R7 K17 ; R7 := ""
	46	[1231]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	47	[1234]	JMP      	54 ; PC := 54
	48	[1236]	GETGLOBAL	R4 K18 ; R4 := _T
	49	[1236]	SETTABLE 	R4 K19 K13 ; R4["PurchaseSuccessLocOverride"] := nil
	50	[1237]	GETUPVAL 	R4 U1 ; R4 := U1
	51	[1237]	GETTABLE 	R4 R4 K20 ; R4 := R4[0xe0cba3ca]
	52	[1237]	LOADK    	R5 K21 ; R5 := "/Lotus/Language/Menu/PurchaseFailure"
	53	[1237]	CALL     	R4 2 1 ; R4(R5)
	54	[1240]	LOADNIL  	R4 R4 ; R4 := nil
	55	[1240]	SETGLOBALHASH	R4 K22 ; mWebCmd := R4
	56	[1241]	RETURN   	R0 1 ; return 

function #22 <?:1243,1276> (109 instructions, 436 bytes at 0000016097B925A0)
1 param, 11 slots, 3 upvalues, 0 locals, 36 constants, 0 functions
	1	[1244]	EQ       	0 R0 K1 ; if R0 ~= 4.000000 then PC := 92
	2	[1244]	JMP      	92 ; PC := 92
	3	[1244]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	4	[1244]	EQ       	1 R1 K3 ; if R1 == nil then PC := 92
	5	[1244]	JMP      	92 ; PC := 92
	6	[1245]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	7	[1245]	GETGLOBAL	R2 K5 ; R2 := 0xcb79539e
	8	[1245]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[1245]	TEST     	R1 1 ; if R1 then PC := 21
	10	[1245]	JMP      	21 ; PC := 21
	11	[1246]	GETGLOBAL	R1 K5 ; R1 := 0xcb79539e
	12	[1246]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x8b8fb8b7]
	13	[1246]	GETGLOBAL	R3 K7 ; R3 := 0x0469f296
	14	[1246]	LOADK    	R4 K8 ; R4 := "SLOT_PROMPT_POPUP"
	15	[1246]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[1246]	LOADK    	R4 K9 ; R4 := "Baro_"
	17	[1246]	GETGLOBAL	R5 K10 ; R5 := mBinType
	18	[1246]	LOADK    	R6 K11 ; R6 := "_Purchase"
	19	[1246]	CONCAT   	R4 R4 R6 ; R4 := R4 .. R5 .. R6
	20	[1246]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	21	[1248]	GETGLOBAL	R1 K12 ; R1 := 0xa94df70b
	22	[1248]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x99c4ef3a]
	23	[1248]	GETGLOBAL	R3 K2 ; R3 := mPurchaseParams
	24	[1248]	GETTABLE 	R3 R3 K14 ; R3 := R3["mStoreItem"]
	25	[1248]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0xfe9eb1a5]
	26	[1248]	CALL     	R3 2 0 ; R3,... := R3(R4)
	27	[1248]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	28	[1249]	GETGLOBAL	R2 K16 ; R2 := 0x6c97a788
	29	[1249]	GETTABLE 	R2 R2 K17 ; R2 := R2["MiscBin"]
	30	[1249]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 34
	31	[1249]	JMP      	34 ; PC := 34
	32	[1249]	LE       	0 K18 R1 ; if 12.000000 > R1 then PC := 37
	33	[1249]	JMP      	37 ; PC := 37
	34	[1250]	GETGLOBAL	R2 K19 ; R2 := _T
	35	[1250]	SETTABLE 	R2 K20 K3 ; R2["PurchaseSuccessLocOverride"] := nil
	36	[1251]	RETURN   	R0 1 ; return 
	37	[1254]	GETGLOBAL	R2 K12 ; R2 := 0xa94df70b
	38	[1254]	SELF     	R2 R2 K21 ; R3 := R2; R2 := R2[0xd8cdfe4e]
	39	[1254]	MOVE     	R4 R1 ; R4 := R1
	40	[1254]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	41	[1255]	GETGLOBAL	R3 K19 ; R3 := _T
	42	[1255]	GETTABLE 	R3 R3 K22 ; R3 := R3["PremiumCredits"]
	43	[1255]	LT       	0 R3 R2 ; if R3 >= R2 then PC := 56
	44	[1255]	JMP      	56 ; PC := 56
	45	[1256]	GETUPVAL 	R3 U0 ; R3 := U0
	46	[1256]	GETUPVAL 	R4 U1 ; R4 := U1
	47	[1256]	GETTABLE 	R4 R4 K23 ; R4 := R4["PREMIUM_CREDITS"]
	48	[1256]	OP_LOADBOOL	R5 0 0 ; R5 := false
	49	[1256]	GETGLOBAL	R6 K24 ; R6 := 0xae91e43b
	50	[1256]	SELF     	R6 R6 K25 ; R7 := R6; R6 := R6[0x42b04007]
	51	[1256]	LOADK    	R8 K26 ; R8 := "/Lotus/Language/Menu/ItemInventory_SlotsMisc"
	52	[1256]	OP_LOADBOOL	R9 1 0 ; R9 := true
	53	[1256]	CALL     	R6 4 0 ; R6,... := R6(R7,R8,R9)
	54	[1256]	CALL     	R3 0 1 ; R3(R4,...)
	55	[1257]	RETURN   	R0 1 ; return 
	56	[1260]	GETGLOBAL	R3 K27 ; R3 := 0x76ea806b
	57	[1260]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x3f3ae64c]
	58	[1260]	LOADK    	R5 := 0.000000
	59	[1260]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	60	[1261]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	61	[1261]	MOVE     	R5 R3 ; R5 := R3
	62	[1261]	CALL     	R4 2 2 ; R4 := R4(R5)
	63	[1261]	TEST     	R4 1 ; if R4 then PC := 109
	64	[1261]	JMP      	109 ; PC := 109
	65	[1262]	SELF     	R4 R3 K29 ; R5 := R3; R4 := R3[0x80563238]
	66	[1262]	CALL     	R4 2 2 ; R4 := R4(R5)
	67	[1263]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	68	[1263]	MOVE     	R6 R4 ; R6 := R4
	69	[1263]	CALL     	R5 2 2 ; R5 := R5(R6)
	70	[1263]	TEST     	R5 1 ; if R5 then PC := 109
	71	[1263]	JMP      	109 ; PC := 109
	72	[1264]	GETUPVAL 	R5 U2 ; R5 := U2
	73	[1264]	LOADK    	R6 := 1.000000
	74	[1264]	CALL     	R5 2 1 ; R5(R6)
	75	[1265]	GETGLOBAL	R5 K30 ; R5 := 0x60cce7b4
	76	[1265]	GETGLOBAL	R6 K31 ; R6 := mWebCmd
	77	[1265]	EQ       	1 R6 K3 ; if R6 == nil then PC := 80
	78	[1265]	JMP      	80 ; PC := 80
	79	[1265]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 80
	80	[1265]	OP_LOADBOOL	R6 1 0 ; R6 := true
	81	[1265]	CALL     	R5 2 1 ; R5(R6)
	82	[1266]	GETGLOBAL	R5 K16 ; R5 := 0x6c97a788
	83	[1266]	GETTABLE 	R5 R5 K32 ; R5 := R5[0x2c6cc890]
	84	[1266]	MOVE     	R6 R1 ; R6 := R1
	85	[1266]	LOADK    	R7 K33 ; R7 := "OnPurchaseSlotResult"
	86	[1266]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	87	[1266]	SETGLOBALHASH	R5 K31 ; mWebCmd := R5
	88	[1267]	GETGLOBAL	R5 K31 ; R5 := mWebCmd
	89	[1267]	SELF     	R5 R5 K34 ; R6 := R5; R5 := R5[0xe4162eed]
	90	[1267]	CALL     	R5 2 1 ; R5(R6)
	91	[1269]	JMP      	109 ; PC := 109
	92	[1271]	GETGLOBAL	R5 K19 ; R5 := _T
	93	[1271]	SETTABLE 	R5 K20 K3 ; R5["PurchaseSuccessLocOverride"] := nil
	94	[1272]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	95	[1272]	GETGLOBAL	R6 K5 ; R6 := 0xcb79539e
	96	[1272]	CALL     	R5 2 2 ; R5 := R5(R6)
	97	[1272]	TEST     	R5 1 ; if R5 then PC := 109
	98	[1272]	JMP      	109 ; PC := 109
	99	[1273]	GETGLOBAL	R5 K5 ; R5 := 0xcb79539e
	100	[1273]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x8b8fb8b7]
	101	[1273]	GETGLOBAL	R7 K7 ; R7 := 0x0469f296
	102	[1273]	LOADK    	R8 K8 ; R8 := "SLOT_PROMPT_POPUP"
	103	[1273]	CALL     	R7 2 2 ; R7 := R7(R8)
	104	[1273]	LOADK    	R8 K9 ; R8 := "Baro_"
	105	[1273]	GETGLOBAL	R9 K10 ; R9 := mBinType
	106	[1273]	LOADK    	R10 K35 ; R10 := "_Cancel"
	107	[1273]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	108	[1273]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	109	[1276]	RETURN   	R0 1 ; return 

function #23 <?:1278,1288> (40 instructions, 160 bytes at 0000016097B92C20)
0 params, 9 slots, 2 upvalues, 0 locals, 19 constants, 0 functions
	1	[1279]	GETGLOBAL	R0 K0 ; R0 := 0xa94df70b
	2	[1279]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x99c4ef3a]
	3	[1279]	GETGLOBAL	R2 K2 ; R2 := mPurchaseParams
	4	[1279]	GETTABLE 	R2 R2 K3 ; R2 := R2["mStoreItem"]
	5	[1279]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xfe9eb1a5]
	6	[1279]	CALL     	R2 2 0 ; R2,... := R2(R3)
	7	[1279]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	8	[1280]	GETGLOBAL	R1 K5 ; R1 := 0x6c97a788
	9	[1280]	GETTABLE 	R1 R1 K6 ; R1 := R1["MiscBin"]
	10	[1280]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 14
	11	[1280]	JMP      	14 ; PC := 14
	12	[1280]	LE       	0 K7 R0 ; if 12.000000 > R0 then PC := 15
	13	[1280]	JMP      	15 ; PC := 15
	14	[1281]	RETURN   	R0 1 ; return 
	15	[1284]	GETGLOBAL	R1 K0 ; R1 := 0xa94df70b
	16	[1284]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xd8cdfe4e]
	17	[1284]	MOVE     	R3 R0 ; R3 := R0
	18	[1284]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	19	[1285]	GETGLOBAL	R2 K0 ; R2 := 0xa94df70b
	20	[1285]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x4ddd3d6e]
	21	[1285]	MOVE     	R4 R0 ; R4 := R0
	22	[1285]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[1286]	GETUPVAL 	R3 U0 ; R3 := U0
	24	[1286]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x780243ce]
	25	[1286]	MOVE     	R4 R0 ; R4 := R0
	26	[1286]	CALL     	R3 2 2 ; R3 := R3(R4)
	27	[1286]	SETGLOBALHASH	R3 K10 ; mBinType := R3
	28	[1287]	GETUPVAL 	R3 U1 ; R3 := U1
	29	[1287]	GETTABLE 	R3 R3 K12 ; R3 := R3[0xdedfded7]
	30	[1287]	GETGLOBAL	R4 K13 ; R4 := 0xae91e43b
	31	[1287]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0x42b04007]
	32	[1287]	LOADK    	R6 K15 ; R6 := "/Lotus/Language/Menu/Store_InsufficientSlotPurchase"
	33	[1287]	OP_LOADBOOL	R7 1 0 ; R7 := true
	34	[1287]	NEWTABLE 	R8 0 2 ; R8 := {}
	35	[1287]	SETTABLE 	R8 K16 R2 ; R8[0xe0cba3ca] := R2
	36	[1287]	SETTABLE 	R8 K17 R1 ; R8["COST"] := R1
	37	[1287]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	38	[1287]	LOADK    	R5 K18 ; R5 := "ConfirmSlotPurchase"
	39	[1287]	CALL     	R3 3 1 ; R3(R4,R5)
	40	[1288]	RETURN   	R0 1 ; return 

function #24 <?:1290,1292> (5 instructions, 20 bytes at 0000016097B92FB0)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1291]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1291]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x2dcaf529]
	3	[1291]	MOVE     	R2 R0 ; R2 := R0
	4	[1291]	CALL     	R1 2 1 ; R1(R2)
	5	[1292]	RETURN   	R0 1 ; return 

function #25 <?:1294,1314> (55 instructions, 220 bytes at 0000016097B930C0)
4 params, 15 slots, 1 upvalue, 0 locals, 19 constants, 0 functions
	1	[1295]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[1295]	MOVE     	R5 R0 ; R5 := R0
	3	[1295]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[1295]	TEST     	R4 0 ; if not R4 then PC := 10
	5	[1295]	JMP      	10 ; PC := 10
	6	[1296]	GETGLOBAL	R4 K1 ; R4 := _T
	7	[1296]	SETTABLE 	R4 K2 K3 ; R4["PurchaseSuccessLocOverride"] := nil
	8	[1297]	OP_LOADBOOL	R4 0 0 ; R4 := false
	9	[1297]	RETURN   	R4 2 ; return R4 
	10	[1301]	GETGLOBAL	R4 K4 ; R4 := 0xa94df70b
	11	[1301]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x0736562b]
	12	[1301]	MOVE     	R6 R1 ; R6 := R1
	13	[1301]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	14	[1302]	GETGLOBAL	R5 K6 ; R5 := 0x25d99d89
	15	[1302]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0xefee6c91]
	16	[1302]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[1303]	LT       	0 K8 R4 ; if 0.000000 >= R4 then PC := 53
	18	[1303]	JMP      	53 ; PC := 53
	19	[1303]	SELF     	R6 R0 K9 ; R7 := R0; R6 := R0[0xd83f6338]
	20	[1303]	MOVE     	R8 R1 ; R8 := R1
	21	[1303]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	22	[1303]	ADD      	R6 R2 R6 ; R6 := R2 + R6
	23	[1303]	LT       	0 R4 R6 ; if R4 >= R6 then PC := 53
	24	[1303]	JMP      	53 ; PC := 53
	25	[1305]	EQ       	0 R1 K11 ; if R1 ~= 7.000000 then PC := 30
	26	[1305]	JMP      	30 ; PC := 30
	27	[1305]	LE       	0 K12 R5 ; if 30.000000 > R5 then PC := 30
	28	[1305]	JMP      	30 ; PC := 30
	29	[1306]	ADD      	R4 R4 K12 ; R4 := R4 + 30.000000
	30	[1308]	GETGLOBAL	R6 K13 ; R6 := 0xae91e43b
	31	[1308]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x42b04007]
	32	[1308]	MOVE     	R8 R3 ; R8 := R3
	33	[1308]	OP_LOADBOOL	R9 0 0 ; R9 := false
	34	[1308]	NEWTABLE 	R10 0 1 ; R10 := {}
	35	[1308]	GETUPVAL 	R11 U0 ; R11 := U0
	36	[1308]	GETTABLE 	R11 R11 K16 ; R11 := R11[0x1142c7a8]
	37	[1308]	GETGLOBAL	R12 K4 ; R12 := 0xa94df70b
	38	[1308]	SELF     	R12 R12 K17 ; R13 := R12; R12 := R12[0x804ccab2]
	39	[1308]	MOVE     	R14 R1 ; R14 := R1
	40	[1308]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	41	[1308]	ADD      	R12 R4 R12 ; R12 := R4 + R12
	42	[1308]	CALL     	R11 2 2 ; R11 := R11(R12)
	43	[1308]	SETTABLE 	R10 K15 R11 ; R10["MAX"] := R11
	44	[1308]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	45	[1309]	GETUPVAL 	R7 U0 ; R7 := U0
	46	[1309]	GETTABLE 	R7 R7 K18 ; R7 := R7[0xe0cba3ca]
	47	[1309]	MOVE     	R8 R6 ; R8 := R6
	48	[1309]	CALL     	R7 2 1 ; R7(R8)
	49	[1310]	GETGLOBAL	R7 K1 ; R7 := _T
	50	[1310]	SETTABLE 	R7 K2 K3 ; R7["PurchaseSuccessLocOverride"] := nil
	51	[1311]	OP_LOADBOOL	R7 0 0 ; R7 := false
	52	[1311]	RETURN   	R7 2 ; return R7 
	53	[1313]	OP_LOADBOOL	R7 1 0 ; R7 := true
	54	[1313]	RETURN   	R7 2 ; return R7 
	55	[1314]	RETURN   	R0 1 ; return 

function #26 <?:1316,1478> (460 instructions, 1840 bytes at 0000016097B93470)
0 params, 31 slots, 11 upvalues, 0 locals, 78 constants, 1 function
	1	[1317]	GETGLOBAL	R0 K0 ; R0 := mPurchaseTotalPrice
	2	[1317]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 5
	3	[1317]	JMP      	5 ; PC := 5
	4	[1318]	RETURN   	R0 1 ; return 
	5	[1321]	OP_LOADBOOL	R0 0 0 ; R0 := false
	6	[1324]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[1324]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xbecef34c]
	8	[1324]	GETGLOBAL	R2 K3 ; R2 := mPurchaseParams
	9	[1324]	GETTABLE 	R2 R2 K4 ; R2 := R2["mStoreItem"]
	10	[1324]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[1324]	TEST     	R1 0 ; if not R1 then PC := 20
	12	[1324]	JMP      	20 ; PC := 20
	13	[1324]	GETGLOBAL	R1 K3 ; R1 := mPurchaseParams
	14	[1324]	GETTABLE 	R1 R1 K5 ; R1 := R1["mSource"]
	15	[1324]	EQ       	1 R1 K7 ; if R1 == 18.000000 then PC := 20
	16	[1324]	JMP      	20 ; PC := 20
	17	[1325]	GETUPVAL 	R1 U1 ; R1 := U1
	18	[1325]	CALL     	R1 1 1 ; R1()
	19	[1326]	RETURN   	R0 1 ; return 
	20	[1329]	LOADNIL  	R1 R1 ; R1 := nil
	21	[1330]	GETGLOBAL	R2 K8 ; R2 := 0x7b998233
	22	[1330]	GETGLOBAL	R3 K9 ; R3 := 0x25d99d89
	23	[1330]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[1330]	TEST     	R2 1 ; if R2 then PC := 47
	25	[1330]	JMP      	47 ; PC := 47
	26	[1331]	GETGLOBAL	R2 K9 ; R2 := 0x25d99d89
	27	[1331]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x25a6e75e]
	28	[1331]	CALL     	R2 2 2 ; R2 := R2(R3)
	29	[1331]	MOVE     	R1 R2 ; R1 := R2
	30	[1333]	GETUPVAL 	R2 U2 ; R2 := U2
	31	[1333]	GETGLOBAL	R3 K9 ; R3 := 0x25d99d89
	32	[1333]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x1e11a6d0]
	33	[1333]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[1333]	GETGLOBAL	R4 K9 ; R4 := 0x25d99d89
	35	[1333]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0x9b466ee3]
	36	[1333]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[1333]	GETGLOBAL	R5 K9 ; R5 := 0x25d99d89
	38	[1333]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0x4ce20fca]
	39	[1333]	CALL     	R5 2 2 ; R5 := R5(R6)
	40	[1333]	GETGLOBAL	R6 K9 ; R6 := 0x25d99d89
	41	[1333]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0xbd6729ff]
	42	[1333]	CALL     	R6 2 2 ; R6 := R6(R7)
	43	[1333]	GETGLOBAL	R7 K9 ; R7 := 0x25d99d89
	44	[1333]	SELF     	R7 R7 K15 ; R8 := R7; R7 := R7[0xa59dbd63]
	45	[1333]	CALL     	R7 2 0 ; R7,... := R7(R8)
	46	[1333]	CALL     	R2 0 1 ; R2(R3,...)
	47	[1336]	GETGLOBAL	R2 K3 ; R2 := mPurchaseParams
	48	[1336]	GETTABLE 	R2 R2 K4 ; R2 := R2["mStoreItem"]
	49	[1336]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0xfe9eb1a5]
	50	[1336]	CALL     	R2 2 2 ; R2 := R2(R3)
	51	[1336]	EQ       	0 R2 K18 ; if R2 ~= 19.000000 then PC := 69
	52	[1336]	JMP      	69 ; PC := 69
	53	[1337]	GETUPVAL 	R2 U3 ; R2 := U3
	54	[1337]	MOVE     	R3 R1 ; R3 := R1
	55	[1337]	GETGLOBAL	R4 K3 ; R4 := mPurchaseParams
	56	[1337]	GETTABLE 	R4 R4 K4 ; R4 := R4["mStoreItem"]
	57	[1337]	SELF     	R4 R4 K19 ; R5 := R4; R4 := R4[0x5c4cdd9b]
	58	[1337]	CALL     	R4 2 2 ; R4 := R4(R5)
	59	[1337]	GETGLOBAL	R5 K3 ; R5 := mPurchaseParams
	60	[1337]	GETTABLE 	R5 R5 K4 ; R5 := R5["mStoreItem"]
	61	[1337]	SELF     	R5 R5 K20 ; R6 := R5; R5 := R5[0x075cb724]
	62	[1337]	CALL     	R5 2 2 ; R5 := R5(R6)
	63	[1337]	LOADK    	R6 K21 ; R6 := "/Lotus/Language/Menu/BuyItem_ExceedBinMaxCapacity"
	64	[1337]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	65	[1337]	TEST     	R2 1 ; if R2 then PC := 123
	66	[1337]	JMP      	123 ; PC := 123
	67	[1338]	RETURN   	R0 1 ; return 
	68	[1339]	JMP      	123 ; PC := 123
	69	[1340]	GETGLOBAL	R2 K3 ; R2 := mPurchaseParams
	70	[1340]	GETTABLE 	R2 R2 K4 ; R2 := R2["mStoreItem"]
	71	[1340]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0xfe9eb1a5]
	72	[1340]	CALL     	R2 2 2 ; R2 := R2(R3)
	73	[1340]	EQ       	0 R2 K22 ; if R2 ~= 30.000000 then PC := 123
	74	[1340]	JMP      	123 ; PC := 123
	75	[1340]	GETGLOBAL	R2 K3 ; R2 := mPurchaseParams
	76	[1340]	GETTABLE 	R2 R2 K4 ; R2 := R2["mStoreItem"]
	77	[1340]	SELF     	R2 R2 K23 ; R3 := R2; R2 := R2[0xf278f8a1]
	78	[1340]	CALL     	R2 2 2 ; R2 := R2(R3)
	79	[1340]	SELF     	R2 R2 K24 ; R3 := R2; R2 := R2[0xf2deaf69]
	80	[1340]	GETUPVAL 	R4 U4 ; R4 := U4
	81	[1340]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	82	[1340]	TEST     	R2 0 ; if not R2 then PC := 123
	83	[1340]	JMP      	123 ; PC := 123
	84	[1343]	GETGLOBAL	R2 K8 ; R2 := 0x7b998233
	85	[1343]	MOVE     	R3 R1 ; R3 := R1
	86	[1343]	CALL     	R2 2 2 ; R2 := R2(R3)
	87	[1343]	TEST     	R2 0 ; if not R2 then PC := 92
	88	[1343]	JMP      	92 ; PC := 92
	89	[1344]	GETGLOBAL	R2 K25 ; R2 := _T
	90	[1344]	SETTABLE 	R2 K26 K1 ; R2["PurchaseSuccessLocOverride"] := nil
	91	[1345]	RETURN   	R0 1 ; return 
	92	[1348]	GETUPVAL 	R2 U0 ; R2 := U0
	93	[1348]	GETTABLE 	R2 R2 K27 ; R2 := R2[0x8a36a81b]
	94	[1348]	GETGLOBAL	R3 K9 ; R3 := 0x25d99d89
	95	[1348]	MOVE     	R4 R1 ; R4 := R1
	96	[1348]	GETGLOBAL	R5 K3 ; R5 := mPurchaseParams
	97	[1348]	GETTABLE 	R5 R5 K4 ; R5 := R5["mStoreItem"]
	98	[1348]	GETGLOBAL	R6 K25 ; R6 := _T
	99	[1348]	GETTABLE 	R6 R6 K28 ; R6 := R6["purchasedItems"]
	100	[1348]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	101	[1349]	GETGLOBAL	R3 K3 ; R3 := mPurchaseParams
	102	[1349]	GETTABLE 	R3 R3 K29 ; R3 := R3["mQuantity"]
	103	[1349]	GETGLOBAL	R4 K3 ; R4 := mPurchaseParams
	104	[1349]	GETTABLE 	R4 R4 K4 ; R4 := R4["mStoreItem"]
	105	[1349]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0x075cb724]
	106	[1349]	CALL     	R4 2 2 ; R4 := R4(R5)
	107	[1349]	MUL      	R3 R3 R4 ; R3 := R3 * R4
	108	[1349]	ADD      	R3 R2 R3 ; R3 := R2 + R3
	109	[1349]	LT       	0 K30 R3 ; if 138.000000 >= R3 then PC := 123
	110	[1349]	JMP      	123 ; PC := 123
	111	[1350]	GETGLOBAL	R3 K31 ; R3 := 0xae91e43b
	112	[1350]	SELF     	R3 R3 K32 ; R4 := R3; R3 := R3[0x42b04007]
	113	[1350]	LOADK    	R5 K33 ; R5 := "/Lotus/Language/Menu/BuyItem_ExceedShipDecoCapacity"
	114	[1350]	OP_LOADBOOL	R6 0 0 ; R6 := false
	115	[1350]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	116	[1351]	GETUPVAL 	R4 U5 ; R4 := U5
	117	[1351]	GETTABLE 	R4 R4 K34 ; R4 := R4[0xe0cba3ca]
	118	[1351]	MOVE     	R5 R3 ; R5 := R3
	119	[1351]	CALL     	R4 2 1 ; R4(R5)
	120	[1352]	GETGLOBAL	R4 K25 ; R4 := _T
	121	[1352]	SETTABLE 	R4 K26 K1 ; R4["PurchaseSuccessLocOverride"] := nil
	122	[1353]	RETURN   	R0 1 ; return 
	123	[1357]	GETGLOBAL	R4 K0 ; R4 := mPurchaseTotalPrice
	124	[1357]	GETUPVAL 	R5 U6 ; R5 := U6
	125	[1357]	GETTABLE 	R5 R5 K35 ; R5 := R5["REGULAR_CREDITS"]
	126	[1357]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	127	[1357]	TEST     	R4 0 ; if not R4 then PC := 146
	128	[1357]	JMP      	146 ; PC := 146
	129	[1357]	GETGLOBAL	R4 K25 ; R4 := _T
	130	[1357]	GETTABLE 	R4 R4 K36 ; R4 := R4["Credits"]
	131	[1357]	EQ       	1 R4 K1 ; if R4 == nil then PC := 146
	132	[1357]	JMP      	146 ; PC := 146
	133	[1358]	GETGLOBAL	R4 K0 ; R4 := mPurchaseTotalPrice
	134	[1358]	GETUPVAL 	R5 U6 ; R5 := U6
	135	[1358]	GETTABLE 	R5 R5 K35 ; R5 := R5["REGULAR_CREDITS"]
	136	[1358]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	137	[1358]	GETGLOBAL	R5 K25 ; R5 := _T
	138	[1358]	GETTABLE 	R5 R5 K36 ; R5 := R5["Credits"]
	139	[1358]	LT       	0 R5 R4 ; if R5 >= R4 then PC := 146
	140	[1358]	JMP      	146 ; PC := 146
	141	[1359]	GETUPVAL 	R4 U7 ; R4 := U7
	142	[1359]	GETUPVAL 	R5 U6 ; R5 := U6
	143	[1359]	GETTABLE 	R5 R5 K35 ; R5 := R5["REGULAR_CREDITS"]
	144	[1359]	CALL     	R4 2 1 ; R4(R5)
	145	[1360]	RETURN   	R0 1 ; return 
	146	[1364]	GETGLOBAL	R4 K0 ; R4 := mPurchaseTotalPrice
	147	[1364]	GETUPVAL 	R5 U6 ; R5 := U6
	148	[1364]	GETTABLE 	R5 R5 K37 ; R5 := R5["PREMIUM_CREDITS"]
	149	[1364]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	150	[1364]	TEST     	R4 0 ; if not R4 then PC := 180
	151	[1364]	JMP      	180 ; PC := 180
	152	[1365]	OP_LOADBOOL	R0 1 0 ; R0 := true
	153	[1366]	GETGLOBAL	R4 K0 ; R4 := mPurchaseTotalPrice
	154	[1366]	GETUPVAL 	R5 U6 ; R5 := U6
	155	[1366]	GETTABLE 	R5 R5 K37 ; R5 := R5["PREMIUM_CREDITS"]
	156	[1366]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	157	[1366]	GETUPVAL 	R5 U5 ; R5 := U5
	158	[1366]	GETTABLE 	R5 R5 K38 ; R5 := R5[0x06d055f9]
	159	[1366]	GETGLOBAL	R6 K3 ; R6 := mPurchaseParams
	160	[1366]	GETTABLE 	R6 R6 K4 ; R6 := R6["mStoreItem"]
	161	[1366]	SELF     	R6 R6 K39 ; R7 := R6; R6 := R6[0xd33115d5]
	162	[1366]	CALL     	R6 2 2 ; R6 := R6(R7)
	163	[1366]	GETGLOBAL	R7 K25 ; R7 := _T
	164	[1366]	GETTABLE 	R7 R7 K40 ; R7 := R7["PremiumCredits"]
	165	[1366]	GETGLOBAL	R8 K25 ; R8 := _T
	166	[1366]	GETTABLE 	R8 R8 K41 ; R8 := R8["PurchasedPremiumCredits"]
	167	[1366]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	168	[1366]	LT       	0 R5 R4 ; if R5 >= R4 then PC := 180
	169	[1366]	JMP      	180 ; PC := 180
	170	[1367]	GETUPVAL 	R4 U7 ; R4 := U7
	171	[1367]	GETUPVAL 	R5 U6 ; R5 := U6
	172	[1367]	GETTABLE 	R5 R5 K37 ; R5 := R5["PREMIUM_CREDITS"]
	173	[1367]	GETGLOBAL	R6 K3 ; R6 := mPurchaseParams
	174	[1367]	GETTABLE 	R6 R6 K4 ; R6 := R6["mStoreItem"]
	175	[1367]	SELF     	R6 R6 K39 ; R7 := R6; R6 := R6[0xd33115d5]
	176	[1367]	CALL     	R6 2 2 ; R6 := R6(R7)
	177	[1367]	NOT      	R6 R6 ; R6 := not R6
	178	[1367]	CALL     	R4 3 1 ; R4(R5,R6)
	179	[1368]	RETURN   	R0 1 ; return 
	180	[1372]	GETGLOBAL	R4 K0 ; R4 := mPurchaseTotalPrice
	181	[1372]	GETUPVAL 	R5 U6 ; R5 := U6
	182	[1372]	GETTABLE 	R5 R5 K42 ; R5 := R5["PRIME_BUCKS"]
	183	[1372]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	184	[1372]	TEST     	R4 0 ; if not R4 then PC := 205
	185	[1372]	JMP      	205 ; PC := 205
	186	[1373]	GETGLOBAL	R4 K8 ; R4 := 0x7b998233
	187	[1373]	GETGLOBAL	R5 K9 ; R5 := 0x25d99d89
	188	[1373]	CALL     	R4 2 2 ; R4 := R4(R5)
	189	[1373]	TEST     	R4 1 ; if R4 then PC := 205
	190	[1373]	JMP      	205 ; PC := 205
	191	[1373]	GETGLOBAL	R4 K0 ; R4 := mPurchaseTotalPrice
	192	[1373]	GETUPVAL 	R5 U6 ; R5 := U6
	193	[1373]	GETTABLE 	R5 R5 K42 ; R5 := R5["PRIME_BUCKS"]
	194	[1373]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	195	[1373]	GETGLOBAL	R5 K9 ; R5 := 0x25d99d89
	196	[1373]	SELF     	R5 R5 K43 ; R6 := R5; R5 := R5[0x592472fb]
	197	[1373]	CALL     	R5 2 2 ; R5 := R5(R6)
	198	[1373]	LT       	0 R5 R4 ; if R5 >= R4 then PC := 205
	199	[1373]	JMP      	205 ; PC := 205
	200	[1374]	GETUPVAL 	R4 U7 ; R4 := U7
	201	[1374]	GETUPVAL 	R5 U6 ; R5 := U6
	202	[1374]	GETTABLE 	R5 R5 K42 ; R5 := R5["PRIME_BUCKS"]
	203	[1374]	CALL     	R4 2 1 ; R4(R5)
	204	[1375]	RETURN   	R0 1 ; return 
	205	[1379]	GETGLOBAL	R4 K0 ; R4 := mPurchaseTotalPrice
	206	[1379]	GETUPVAL 	R5 U6 ; R5 := U6
	207	[1379]	GETTABLE 	R5 R5 K44 ; R5 := R5["PRIME_TOKENS"]
	208	[1379]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	209	[1379]	TEST     	R4 0 ; if not R4 then PC := 231
	210	[1379]	JMP      	231 ; PC := 231
	211	[1380]	OP_LOADBOOL	R0 1 0 ; R0 := true
	212	[1381]	GETGLOBAL	R4 K8 ; R4 := 0x7b998233
	213	[1381]	GETGLOBAL	R5 K9 ; R5 := 0x25d99d89
	214	[1381]	CALL     	R4 2 2 ; R4 := R4(R5)
	215	[1381]	TEST     	R4 1 ; if R4 then PC := 231
	216	[1381]	JMP      	231 ; PC := 231
	217	[1381]	GETGLOBAL	R4 K0 ; R4 := mPurchaseTotalPrice
	218	[1381]	GETUPVAL 	R5 U6 ; R5 := U6
	219	[1381]	GETTABLE 	R5 R5 K44 ; R5 := R5["PRIME_TOKENS"]
	220	[1381]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	221	[1381]	GETGLOBAL	R5 K9 ; R5 := 0x25d99d89
	222	[1381]	SELF     	R5 R5 K14 ; R6 := R5; R5 := R5[0xbd6729ff]
	223	[1381]	CALL     	R5 2 2 ; R5 := R5(R6)
	224	[1381]	LT       	0 R5 R4 ; if R5 >= R4 then PC := 231
	225	[1381]	JMP      	231 ; PC := 231
	226	[1382]	GETUPVAL 	R4 U7 ; R4 := U7
	227	[1382]	GETUPVAL 	R5 U6 ; R5 := U6
	228	[1382]	GETTABLE 	R5 R5 K44 ; R5 := R5["PRIME_TOKENS"]
	229	[1382]	CALL     	R4 2 1 ; R4(R5)
	230	[1383]	RETURN   	R0 1 ; return 
	231	[1387]	GETGLOBAL	R4 K0 ; R4 := mPurchaseTotalPrice
	232	[1387]	GETUPVAL 	R5 U6 ; R5 := U6
	233	[1387]	GETTABLE 	R5 R5 K45 ; R5 := R5["STANDING"]
	234	[1387]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	235	[1387]	TEST     	R4 0 ; if not R4 then PC := 266
	236	[1387]	JMP      	266 ; PC := 266
	237	[1388]	GETGLOBAL	R4 K3 ; R4 := mPurchaseParams
	238	[1388]	GETTABLE 	R4 R4 K46 ; R4 := R4["mSyndicateTag"]
	239	[1388]	SELF     	R4 R4 K47 ; R5 := R4; R4 := R4[0x56c01834]
	240	[1388]	CALL     	R4 2 2 ; R4 := R4(R5)
	241	[1388]	TEST     	R4 1 ; if R4 then PC := 247
	242	[1388]	JMP      	247 ; PC := 247
	243	[1390]	GETUPVAL 	R4 U8 ; R4 := U8
	244	[1390]	LOADNIL  	R5 R5 ; R5 := nil
	245	[1390]	CALL     	R4 2 1 ; R4(R5)
	246	[1391]	RETURN   	R0 1 ; return 
	247	[1394]	GETUPVAL 	R4 U0 ; R4 := U0
	248	[1394]	GETTABLE 	R4 R4 K48 ; R4 := R4[0x338a8686]
	249	[1394]	GETGLOBAL	R5 K49 ; R5 := 0xa94df70b
	250	[1394]	SELF     	R5 R5 K50 ; R6 := R5; R5 := R5[0x07408254]
	251	[1394]	GETGLOBAL	R7 K3 ; R7 := mPurchaseParams
	252	[1394]	GETTABLE 	R7 R7 K46 ; R7 := R7["mSyndicateTag"]
	253	[1394]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	254	[1394]	CALL     	R4 0 3 ; R4,R5 := R4(R5,...)
	255	[1395]	GETGLOBAL	R6 K0 ; R6 := mPurchaseTotalPrice
	256	[1395]	GETUPVAL 	R7 U6 ; R7 := U6
	257	[1395]	GETTABLE 	R7 R7 K45 ; R7 := R7["STANDING"]
	258	[1395]	GETTABLE 	R6 R6 R7 ; R6 := R6[R7]
	259	[1395]	LT       	0 R5 R6 ; if R5 >= R6 then PC := 266
	260	[1395]	JMP      	266 ; PC := 266
	261	[1396]	GETUPVAL 	R6 U7 ; R6 := U7
	262	[1396]	GETUPVAL 	R7 U6 ; R7 := U6
	263	[1396]	GETTABLE 	R7 R7 K45 ; R7 := R7["STANDING"]
	264	[1396]	CALL     	R6 2 1 ; R6(R7)
	265	[1397]	RETURN   	R0 1 ; return 
	266	[1401]	GETGLOBAL	R6 K0 ; R6 := mPurchaseTotalPrice
	267	[1401]	GETUPVAL 	R7 U6 ; R7 := U6
	268	[1401]	GETTABLE 	R7 R7 K51 ; R7 := R7["AMBULAS_DATA"]
	269	[1401]	GETTABLE 	R6 R6 R7 ; R6 := R6[R7]
	270	[1401]	TEST     	R6 0 ; if not R6 then PC := 301
	271	[1401]	JMP      	301 ; PC := 301
	272	[1402]	GETGLOBAL	R6 K52 ; R6 := 0x7ed0a956
	273	[1402]	LOADK    	R7 K53 ; R7 := "/Lotus/Types/Items/Events/AmbulasDataFragment"
	274	[1402]	CALL     	R6 2 2 ; R6 := R6(R7)
	275	[1403]	LOADK    	R7 := 0.000000
	276	[1405]	SELF     	R8 R1 K54 ; R9 := R1; R8 := R1[0xf4045b7e]
	277	[1405]	CALL     	R8 2 2 ; R8 := R8(R9)
	278	[1406]	LOADK    	R9 := 1.000000
	279	[1406]	LEN      	R10 R8 ; R10 := # R8
	280	[1406]	LOADK    	R11 := 1.000000
	281	[1406]	FORPREP  	R9 289 ; R9 -= R11; PC := 289
	282	[1407]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	283	[1407]	GETTABLE 	R13 R13 K55 ; R13 := R13["mItemType"]
	284	[1407]	EQ       	0 R13 R6 ; if R13 ~= R6 then PC := 289
	285	[1407]	JMP      	289 ; PC := 289
	286	[1408]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	287	[1408]	GETTABLE 	R7 R13 K56 ; R7 := R13["mItemCount"]
	288	[1409]	JMP      	290 ; PC := 290
	289	[1406]	FORLOOP  	R9 282 ; R9 += R11; if R9 <= R10 then begin PC := 282; R12 := R9 end
	290	[1413]	GETGLOBAL	R13 K0 ; R13 := mPurchaseTotalPrice
	291	[1413]	GETUPVAL 	R14 U6 ; R14 := U6
	292	[1413]	GETTABLE 	R14 R14 K51 ; R14 := R14["AMBULAS_DATA"]
	293	[1413]	GETTABLE 	R13 R13 R14 ; R13 := R13[R14]
	294	[1413]	LT       	0 R7 R13 ; if R7 >= R13 then PC := 301
	295	[1413]	JMP      	301 ; PC := 301
	296	[1414]	GETUPVAL 	R13 U7 ; R13 := U7
	297	[1414]	GETUPVAL 	R14 U6 ; R14 := U6
	298	[1414]	GETTABLE 	R14 R14 K51 ; R14 := R14["AMBULAS_DATA"]
	299	[1414]	CALL     	R13 2 1 ; R13(R14)
	300	[1415]	RETURN   	R0 1 ; return 
	301	[1419]	GETGLOBAL	R13 K0 ; R13 := mPurchaseTotalPrice
	302	[1419]	GETUPVAL 	R14 U6 ; R14 := U6
	303	[1419]	GETTABLE 	R14 R14 K57 ; R14 := R14["ITEMS"]
	304	[1419]	GETTABLE 	R13 R13 R14 ; R13 := R13[R14]
	305	[1419]	TEST     	R13 0 ; if not R13 then PC := 369
	306	[1419]	JMP      	369 ; PC := 369
	307	[1420]	LOADK    	R13 := 1.000000
	308	[1420]	GETGLOBAL	R14 K0 ; R14 := mPurchaseTotalPrice
	309	[1420]	GETUPVAL 	R15 U6 ; R15 := U6
	310	[1420]	GETTABLE 	R15 R15 K57 ; R15 := R15["ITEMS"]
	311	[1420]	GETTABLE 	R14 R14 R15 ; R14 := R14[R15]
	312	[1420]	LEN      	R14 R14 ; R14 := # R14
	313	[1420]	LOADK    	R15 := 1.000000
	314	[1420]	FORPREP  	R13 368 ; R13 -= R15; PC := 368
	315	[1421]	GETGLOBAL	R17 K0 ; R17 := mPurchaseTotalPrice
	316	[1421]	GETUPVAL 	R18 U6 ; R18 := U6
	317	[1421]	GETTABLE 	R18 R18 K57 ; R18 := R18["ITEMS"]
	318	[1421]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	319	[1421]	GETTABLE 	R17 R17 R16 ; R17 := R17[R16]
	320	[1422]	GETGLOBAL	R18 K8 ; R18 := 0x7b998233
	321	[1422]	GETTABLE 	R19 R17 K55 ; R19 := R17["mItemType"]
	322	[1422]	CALL     	R18 2 2 ; R18 := R18(R19)
	323	[1422]	TEST     	R18 1 ; if R18 then PC := 368
	324	[1422]	JMP      	368 ; PC := 368
	325	[1423]	GETUPVAL 	R18 U0 ; R18 := U0
	326	[1423]	GETTABLE 	R18 R18 K58 ; R18 := R18[0xb54b2e07]
	327	[1423]	GETGLOBAL	R19 K25 ; R19 := _T
	328	[1423]	GETTABLE 	R19 R19 K28 ; R19 := R19["purchasedItems"]
	329	[1423]	GETTABLE 	R20 R17 K55 ; R20 := R17["mItemType"]
	330	[1423]	SELF     	R20 R20 K59 ; R21 := R20; R20 := R20[0xed4e0128]
	331	[1423]	CALL     	R20 2 2 ; R20 := R20(R21)
	332	[1430]	CLOSURE  	R21 0 ; R21 := closure(Function #1)
	333	[1423]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	334	[1432]	LOADK    	R19 := 0.000000
	335	[1433]	TEST     	R18 0 ; if not R18 then PC := 360
	336	[1433]	JMP      	360 ; PC := 360
	337	[1434]	GETTABLE 	R20 R18 K60 ; R20 := R18[1.000000]
	338	[1434]	GETTABLE 	R21 R18 K61 ; R21 := R18[2.000000]
	339	[1434]	LOADK    	R22 := 1.000000
	340	[1434]	FORPREP  	R20 359 ; R20 -= R22; PC := 359
	341	[1435]	GETGLOBAL	R24 K25 ; R24 := _T
	342	[1435]	GETTABLE 	R24 R24 K28 ; R24 := R24["purchasedItems"]
	343	[1435]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	344	[1435]	GETTABLE 	R24 R24 K62 ; R24 := R24["count"]
	345	[1435]	TEST     	R24 0 ; if not R24 then PC := 353
	346	[1435]	JMP      	353 ; PC := 353
	347	[1436]	GETGLOBAL	R24 K25 ; R24 := _T
	348	[1436]	GETTABLE 	R24 R24 K28 ; R24 := R24["purchasedItems"]
	349	[1436]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	350	[1436]	GETTABLE 	R24 R24 K62 ; R24 := R24["count"]
	351	[1436]	ADD      	R19 R19 R24 ; R19 := R19 + R24
	352	[1436]	JMP      	359 ; PC := 359
	353	[1438]	GETGLOBAL	R24 K63 ; R24 := 0x5bced4c4
	354	[1438]	GETTABLE 	R24 R24 K64 ; R24 := R24[0xac1b386a]
	355	[1438]	ADD      	R25 R19 K60 ; R25 := R19 + 1.000000
	356	[1438]	LOADK    	R26 := 1.000000
	357	[1438]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	358	[1438]	MOVE     	R19 R24 ; R19 := R24
	359	[1434]	FORLOOP  	R20 341 ; R20 += R22; if R20 <= R21 then begin PC := 341; R23 := R20 end
	360	[1443]	GETTABLE 	R24 R17 K56 ; R24 := R17["mItemCount"]
	361	[1443]	LT       	0 R19 R24 ; if R19 >= R24 then PC := 368
	362	[1443]	JMP      	368 ; PC := 368
	363	[1444]	GETUPVAL 	R24 U7 ; R24 := U7
	364	[1444]	GETUPVAL 	R25 U6 ; R25 := U6
	365	[1444]	GETTABLE 	R25 R25 K57 ; R25 := R25["ITEMS"]
	366	[1444]	CALL     	R24 2 1 ; R24(R25)
	367	[1445]	RETURN   	R0 1 ; return 
	368	[1420]	FORLOOP  	R13 315 ; R13 += R15; if R13 <= R14 then begin PC := 315; R16 := R13 end
	369	[1451]	GETGLOBAL	R24 K0 ; R24 := mPurchaseTotalPrice
	370	[1451]	GETUPVAL 	R25 U6 ; R25 := U6
	371	[1451]	GETTABLE 	R25 R25 K65 ; R25 := R25["FOCUS_XP"]
	372	[1451]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	373	[1451]	TEST     	R24 0 ; if not R24 then PC := 401
	374	[1451]	JMP      	401 ; PC := 401
	375	[1452]	GETGLOBAL	R24 K9 ; R24 := 0x25d99d89
	376	[1452]	SELF     	R24 R24 K66 ; R25 := R24; R24 := R24[0xad94d866]
	377	[1452]	GETGLOBAL	R26 K67 ; R26 := mPurchasePolarityType
	378	[1452]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	379	[1453]	GETGLOBAL	R25 K25 ; R25 := _T
	380	[1453]	GETTABLE 	R25 R25 K68 ; R25 := R25["TennoWay_CurrentFocus"]
	381	[1453]	EQ       	1 R25 K1 ; if R25 == nil then PC := 385
	382	[1453]	JMP      	385 ; PC := 385
	383	[1454]	GETGLOBAL	R25 K25 ; R25 := _T
	384	[1454]	GETTABLE 	R24 R25 K68 ; R24 := R25["TennoWay_CurrentFocus"]
	385	[1456]	GETGLOBAL	R25 K8 ; R25 := 0x7b998233
	386	[1456]	GETGLOBAL	R26 K9 ; R26 := 0x25d99d89
	387	[1456]	CALL     	R25 2 2 ; R25 := R25(R26)
	388	[1456]	TEST     	R25 1 ; if R25 then PC := 401
	389	[1456]	JMP      	401 ; PC := 401
	390	[1456]	GETGLOBAL	R25 K0 ; R25 := mPurchaseTotalPrice
	391	[1456]	GETUPVAL 	R26 U6 ; R26 := U6
	392	[1456]	GETTABLE 	R26 R26 K65 ; R26 := R26["FOCUS_XP"]
	393	[1456]	GETTABLE 	R25 R25 R26 ; R25 := R25[R26]
	394	[1456]	LT       	0 R24 R25 ; if R24 >= R25 then PC := 401
	395	[1456]	JMP      	401 ; PC := 401
	396	[1457]	GETUPVAL 	R25 U7 ; R25 := U7
	397	[1457]	GETUPVAL 	R26 U6 ; R26 := U6
	398	[1457]	GETTABLE 	R26 R26 K65 ; R26 := R26["FOCUS_XP"]
	399	[1457]	CALL     	R25 2 1 ; R25(R26)
	400	[1458]	RETURN   	R0 1 ; return 
	401	[1462]	TEST     	R0 1 ; if R0 then PC := 458
	402	[1462]	JMP      	458 ; PC := 458
	403	[1462]	GETUPVAL 	R25 U0 ; R25 := U0
	404	[1462]	GETTABLE 	R25 R25 K69 ; R25 := R25[0x1fdb3a11]
	405	[1462]	GETGLOBAL	R26 K3 ; R26 := mPurchaseParams
	406	[1462]	GETTABLE 	R26 R26 K4 ; R26 := R26["mStoreItem"]
	407	[1462]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0xfe9eb1a5]
	408	[1462]	CALL     	R26 2 2 ; R26 := R26(R27)
	409	[1462]	GETGLOBAL	R27 K70 ; R27 := mQuantityToReceive
	410	[1462]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	411	[1462]	TEST     	R25 1 ; if R25 then PC := 458
	412	[1462]	JMP      	458 ; PC := 458
	413	[1463]	GETGLOBAL	R25 K49 ; R25 := 0xa94df70b
	414	[1463]	SELF     	R25 R25 K71 ; R26 := R25; R25 := R25[0x99c4ef3a]
	415	[1463]	GETGLOBAL	R27 K3 ; R27 := mPurchaseParams
	416	[1463]	GETTABLE 	R27 R27 K4 ; R27 := R27["mStoreItem"]
	417	[1463]	SELF     	R27 R27 K16 ; R28 := R27; R27 := R27[0xfe9eb1a5]
	418	[1463]	CALL     	R27 2 0 ; R27,... := R27(R28)
	419	[1463]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	420	[1464]	GETUPVAL 	R26 U0 ; R26 := U0
	421	[1464]	GETTABLE 	R26 R26 K72 ; R26 := R26[0xc10bb642]
	422	[1464]	MOVE     	R27 R1 ; R27 := R1
	423	[1464]	MOVE     	R28 R25 ; R28 := R25
	424	[1464]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	425	[1464]	TEST     	R26 1 ; if R26 then PC := 434
	426	[1464]	JMP      	434 ; PC := 434
	427	[1465]	GETGLOBAL	R26 K25 ; R26 := _T
	428	[1465]	SETTABLE 	R26 K26 K1 ; R26["PurchaseSuccessLocOverride"] := nil
	429	[1466]	GETUPVAL 	R26 U0 ; R26 := U0
	430	[1466]	GETTABLE 	R26 R26 K73 ; R26 := R26[0x7aef8b7f]
	431	[1466]	LOADK    	R27 K74 ; R27 := "OnInvalidBinError"
	432	[1466]	CALL     	R26 2 1 ; R26(R27)
	433	[1466]	JMP      	457 ; PC := 457
	434	[1467]	EQ       	0 R25 K75 ; if R25 ~= 11.000000 then PC := 447
	435	[1467]	JMP      	447 ; PC := 447
	436	[1468]	GETUPVAL 	R26 U3 ; R26 := U3
	437	[1468]	MOVE     	R27 R1 ; R27 := R1
	438	[1468]	MOVE     	R28 R25 ; R28 := R25
	439	[1468]	LOADK    	R29 := 1.000000
	440	[1468]	LOADK    	R30 K76 ; R30 := "/Lotus/Language/Labels/BuyItem_CrewCapacityReached"
	441	[1468]	CALL     	R26 5 2 ; R26 := R26(R27,R28,R29,R30)
	442	[1468]	TEST     	R26 0 ; if not R26 then PC := 457
	443	[1468]	JMP      	457 ; PC := 457
	444	[1469]	GETUPVAL 	R26 U9 ; R26 := U9
	445	[1469]	CALL     	R26 1 1 ; R26()
	446	[1470]	JMP      	457 ; PC := 457
	447	[1471]	GETUPVAL 	R26 U3 ; R26 := U3
	448	[1471]	MOVE     	R27 R1 ; R27 := R1
	449	[1471]	MOVE     	R28 R25 ; R28 := R25
	450	[1471]	LOADK    	R29 := 1.000000
	451	[1471]	LOADK    	R30 K77 ; R30 := "/Lotus/Language/Labels/BuyItem_BinCapacityReached"
	452	[1471]	CALL     	R26 5 2 ; R26 := R26(R27,R28,R29,R30)
	453	[1471]	TEST     	R26 0 ; if not R26 then PC := 457
	454	[1471]	JMP      	457 ; PC := 457
	455	[1472]	GETUPVAL 	R26 U9 ; R26 := U9
	456	[1472]	CALL     	R26 1 1 ; R26()
	457	[1474]	RETURN   	R0 1 ; return 
	458	[1477]	GETUPVAL 	R26 U10 ; R26 := U10
	459	[1477]	CALL     	R26 1 1 ; R26()
	460	[1478]	RETURN   	R0 1 ; return 

function #27 <?:1480,1482> (3 instructions, 12 bytes at 0000016097B94B20)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1481]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1481]	CALL     	R0 1 1 ; R0()
	3	[1482]	RETURN   	R0 1 ; return 

function #28 <?:1484,1561> (194 instructions, 776 bytes at 0000016097B94BF0)
0 params, 25 slots, 6 upvalues, 0 locals, 56 constants, 0 functions
	1	[1485]	LOADK    	R0 := -1.000000
	2	[1486]	LOADK    	R1 := 0.000000
	3	[1487]	GETGLOBAL	R2 K0 ; R2 := 0x34291f5c
	4	[1487]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xe27b35bb]
	5	[1487]	CALL     	R2 1 2 ; R2 := R2()
	6	[1488]	SETTABLE 	R2 K2 K3 ; R2["dialogType"] := 5.000000
	7	[1489]	SETTABLE 	R2 K4 K5 ; R2["locString"] := "/Lotus/Language/Menu/Global_DurabilityConfirmation"
	8	[1491]	GETGLOBAL	R3 K6 ; R3 := mPurchaseParams
	9	[1491]	SETTABLE 	R3 K7 K8 ; R3["mUsePremium"] := true
	10	[1493]	OP_LOADBOOL	R3 1 0 ; R3 := true
	11	[1494]	GETGLOBAL	R4 K6 ; R4 := mPurchaseParams
	12	[1494]	GETTABLE 	R4 R4 K9 ; R4 := R4["mStoreItem"]
	13	[1494]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0xf278f8a1]
	14	[1494]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[1494]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0xf2deaf69]
	16	[1494]	GETGLOBAL	R6 K12 ; R6 := gLotusBoosterUpgradeType
	17	[1494]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	18	[1494]	TEST     	R4 0 ; if not R4 then PC := 37
	19	[1494]	JMP      	37 ; PC := 37
	20	[1495]	GETGLOBAL	R4 K13 ; R4 := 0xb009bbc6
	21	[1495]	GETGLOBAL	R5 K6 ; R5 := mPurchaseParams
	22	[1495]	GETTABLE 	R5 R5 K9 ; R5 := R5["mStoreItem"]
	23	[1495]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0xf278f8a1]
	24	[1495]	CALL     	R5 2 0 ; R5,... := R5(R6)
	25	[1495]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	26	[1496]	SELF     	R5 R4 K14 ; R6 := R4; R5 := R4[0x4bcc0a75]
	27	[1496]	CALL     	R5 2 2 ; R5 := R5(R6)
	28	[1496]	MOVE     	R3 R5 ; R3 := R5
	29	[1498]	GETGLOBAL	R5 K15 ; R5 := _T
	30	[1498]	GETTABLE 	R5 R5 K16 ; R5 := R5["GiftParams"]
	31	[1498]	GETTABLE 	R5 R5 K17 ; R5 := R5["Item"]
	32	[1498]	EQ       	1 R5 K18 ; if R5 == nil then PC := 37
	33	[1498]	JMP      	37 ; PC := 37
	34	[1499]	GETGLOBAL	R5 K15 ; R5 := _T
	35	[1499]	GETTABLE 	R5 R5 K16 ; R5 := R5["GiftParams"]
	36	[1499]	SETTABLE 	R5 K19 R3 ; R5["BoosterIsTimed"] := R3
	37	[1503]	GETGLOBAL	R5 K20 ; R5 := 0xae91e43b
	38	[1503]	SELF     	R5 R5 K21 ; R6 := R5; R5 := R5[0x42b04007]
	39	[1503]	LOADK    	R7 K22 ; R7 := "/Lotus/Language/Menu/Global_DurabilityPermanent"
	40	[1503]	OP_LOADBOOL	R8 0 0 ; R8 := false
	41	[1503]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	42	[1505]	LOADK    	R6 := 0.000000
	43	[1505]	LOADK    	R7 := 2.000000
	44	[1505]	LOADK    	R8 := 1.000000
	45	[1505]	FORPREP  	R6 165 ; R6 -= R8; PC := 165
	46	[1506]	GETGLOBAL	R10 K6 ; R10 := mPurchaseParams
	47	[1506]	SETTABLE 	R10 K24 R9 ; R10["mDurability"] := R9
	48	[1507]	GETUPVAL 	R10 U0 ; R10 := U0
	49	[1507]	GETGLOBAL	R11 K6 ; R11 := mPurchaseParams
	50	[1507]	CALL     	R10 2 3 ; R10,R11 := R10(R11)
	51	[1509]	EQ       	1 R11 K18 ; if R11 == nil then PC := 165
	52	[1509]	JMP      	165 ; PC := 165
	53	[1509]	EQ       	1 R10 K18 ; if R10 == nil then PC := 165
	54	[1509]	JMP      	165 ; PC := 165
	55	[1510]	GETUPVAL 	R12 U1 ; R12 := U1
	56	[1510]	GETTABLE 	R12 R12 K25 ; R12 := R12["PREMIUM_CREDITS"]
	57	[1510]	GETTABLE 	R12 R10 R12 ; R12 := R10[R12]
	58	[1510]	EQ       	1 R12 K18 ; if R12 == nil then PC := 65
	59	[1510]	JMP      	65 ; PC := 65
	60	[1510]	GETUPVAL 	R12 U1 ; R12 := U1
	61	[1510]	GETTABLE 	R12 R12 K25 ; R12 := R12["PREMIUM_CREDITS"]
	62	[1510]	GETTABLE 	R12 R10 R12 ; R12 := R10[R12]
	63	[1510]	LT       	1 K26 R12 ; if 0.000000 < R12 then PC := 66
	64	[1510]	JMP      	66 ; PC := 66
	65	[1510]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 66
	66	[1510]	OP_LOADBOOL	R12 1 0 ; R12 := true
	67	[1511]	GETUPVAL 	R13 U2 ; R13 := U2
	68	[1511]	GETTABLE 	R13 R13 K27 ; R13 := R13[0x06d055f9]
	69	[1511]	MOVE     	R14 R12 ; R14 := R12
	70	[1511]	GETUPVAL 	R15 U1 ; R15 := U1
	71	[1511]	GETTABLE 	R15 R15 K25 ; R15 := R15["PREMIUM_CREDITS"]
	72	[1511]	GETTABLE 	R15 R10 R15 ; R15 := R10[R15]
	73	[1511]	GETUPVAL 	R16 U1 ; R16 := U1
	74	[1511]	GETTABLE 	R16 R16 K28 ; R16 := R16["REGULAR_CREDITS"]
	75	[1511]	GETTABLE 	R16 R10 R16 ; R16 := R10[R16]
	76	[1511]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	77	[1513]	LOADK    	R14 K29 ; R14 := "undefined"
	78	[1515]	MOVE     	R0 R9 ; R0 := R9
	79	[1516]	ADD      	R1 R1 K30 ; R1 := R1 + 1.000000
	80	[1518]	TEST     	R3 0 ; if not R3 then PC := 135
	81	[1518]	JMP      	135 ; PC := 135
	82	[1519]	GETGLOBAL	R15 K31 ; R15 := 0xa94df70b
	83	[1519]	SELF     	R15 R15 K32 ; R16 := R15; R15 := R15[0x2539e471]
	84	[1519]	MOVE     	R17 R9 ; R17 := R9
	85	[1519]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	86	[1521]	EQ       	0 R15 K33 ; if R15 ~= 259200.000000 then PC := 95
	87	[1521]	JMP      	95 ; PC := 95
	88	[1522]	GETGLOBAL	R16 K20 ; R16 := 0xae91e43b
	89	[1522]	SELF     	R16 R16 K21 ; R17 := R16; R16 := R16[0x42b04007]
	90	[1522]	LOADK    	R18 K34 ; R18 := "/Lotus/Language/Menu/Global_3Days"
	91	[1522]	OP_LOADBOOL	R19 0 0 ; R19 := false
	92	[1522]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	93	[1522]	MOVE     	R15 R16 ; R15 := R16
	94	[1522]	JMP      	119 ; PC := 119
	95	[1523]	EQ       	0 R15 K35 ; if R15 ~= 604800.000000 then PC := 104
	96	[1523]	JMP      	104 ; PC := 104
	97	[1524]	GETGLOBAL	R16 K20 ; R16 := 0xae91e43b
	98	[1524]	SELF     	R16 R16 K21 ; R17 := R16; R16 := R16[0x42b04007]
	99	[1524]	LOADK    	R18 K36 ; R18 := "/Lotus/Language/Menu/Global_7Days"
	100	[1524]	OP_LOADBOOL	R19 0 0 ; R19 := false
	101	[1524]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	102	[1524]	MOVE     	R15 R16 ; R15 := R16
	103	[1524]	JMP      	119 ; PC := 119
	104	[1526]	GETUPVAL 	R16 U2 ; R16 := U2
	105	[1526]	GETTABLE 	R16 R16 K27 ; R16 := R16[0x06d055f9]
	106	[1526]	LT       	1 K26 R15 ; if 0.000000 < R15 then PC := 109
	107	[1526]	JMP      	109 ; PC := 109
	108	[1526]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 109
	109	[1526]	OP_LOADBOOL	R17 1 0 ; R17 := true
	110	[1526]	GETUPVAL 	R18 U3 ; R18 := U3
	111	[1526]	GETTABLE 	R18 R18 K37 ; R18 := R18[0x817b1503]
	112	[1526]	GETGLOBAL	R19 K20 ; R19 := 0xae91e43b
	113	[1526]	MOVE     	R20 R15 ; R20 := R15
	114	[1526]	OP_LOADBOOL	R21 1 0 ; R21 := true
	115	[1526]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	116	[1526]	MOVE     	R19 R5 ; R19 := R5
	117	[1526]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	118	[1526]	MOVE     	R15 R16 ; R15 := R16
	119	[1529]	MOVE     	R16 R15 ; R16 := R15
	120	[1529]	LOADK    	R17 K38 ; R17 := " "
	121	[1529]	GETGLOBAL	R18 K20 ; R18 := 0xae91e43b
	122	[1529]	SELF     	R18 R18 K21 ; R19 := R18; R18 := R18[0x42b04007]
	123	[1529]	GETUPVAL 	R20 U2 ; R20 := U2
	124	[1529]	GETTABLE 	R20 R20 K27 ; R20 := R20[0x06d055f9]
	125	[1529]	MOVE     	R21 R12 ; R21 := R12
	126	[1529]	LOADK    	R22 K39 ; R22 := "<PLATINUM_CREDITS>"
	127	[1529]	LOADK    	R23 K40 ; R23 := "<CREDITS>"
	128	[1529]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	129	[1529]	MOVE     	R21 R13 ; R21 := R13
	130	[1529]	CONCAT   	R20 R20 R21 ; R20 := R20 .. R21
	131	[1529]	OP_LOADBOOL	R21 1 0 ; R21 := true
	132	[1529]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	133	[1529]	CONCAT   	R14 R16 R18 ; R14 := R16 .. R17 .. R18
	134	[1529]	JMP      	158 ; PC := 158
	135	[1531]	GETGLOBAL	R16 K31 ; R16 := 0xa94df70b
	136	[1531]	SELF     	R16 R16 K41 ; R17 := R16; R16 := R16[0xbd680672]
	137	[1531]	MOVE     	R18 R9 ; R18 := R9
	138	[1531]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	139	[1532]	GETGLOBAL	R17 K42 ; R17 := 0x603636ad
	140	[1532]	LOADK    	R18 K43 ; R18 := "/Lotus/Language/Menu/Global_BoosterUses"
	141	[1532]	NEWTABLE 	R19 0 1 ; R19 := {}
	142	[1532]	SETTABLE 	R19 K44 R16 ; R19["NUM_USES"] := R16
	143	[1532]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	144	[1532]	LOADK    	R18 K38 ; R18 := " "
	145	[1532]	GETGLOBAL	R19 K20 ; R19 := 0xae91e43b
	146	[1532]	SELF     	R19 R19 K21 ; R20 := R19; R19 := R19[0x42b04007]
	147	[1532]	GETUPVAL 	R21 U2 ; R21 := U2
	148	[1532]	GETTABLE 	R21 R21 K27 ; R21 := R21[0x06d055f9]
	149	[1532]	MOVE     	R22 R12 ; R22 := R12
	150	[1532]	LOADK    	R23 K39 ; R23 := "<PLATINUM_CREDITS>"
	151	[1532]	LOADK    	R24 K40 ; R24 := "<CREDITS>"
	152	[1532]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	153	[1532]	MOVE     	R22 R13 ; R22 := R13
	154	[1532]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	155	[1532]	OP_LOADBOOL	R22 1 0 ; R22 := true
	156	[1532]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	157	[1532]	CONCAT   	R14 R17 R19 ; R14 := R17 .. R18 .. R19
	158	[1535]	GETGLOBAL	R17 K6 ; R17 := mPurchaseParams
	159	[1535]	SETTABLE 	R17 K45 R13 ; R17["mExpectedPrice"] := R13
	160	[1537]	EQ       	0 R1 K30 ; if R1 ~= 1.000000 then PC := 164
	161	[1537]	JMP      	164 ; PC := 164
	162	[1538]	SETTABLE 	R2 K46 R14 ; R2["firstString"] := R14
	163	[1538]	JMP      	165 ; PC := 165
	164	[1540]	SETTABLE 	R2 K47 R14 ; R2["secondString"] := R14
	165	[1505]	FORLOOP  	R6 46 ; R6 += R8; if R6 <= R7 then begin PC := 46; R9 := R6 end
	166	[1545]	LT       	0 K30 R1 ; if 1.000000 >= R1 then PC := 177
	167	[1545]	JMP      	177 ; PC := 177
	168	[1546]	SETTABLE 	R2 K48 K49 ; R2["thirdString"] := "/Lotus/Language/Menu/ItemSelection_Cancel"
	169	[1547]	SELF     	R17 R2 K50 ; R18 := R2; R17 := R2[0xe6ccc5b9]
	170	[1547]	LOADK    	R19 K51 ; R19 := "ConfirmDurability"
	171	[1547]	CALL     	R17 3 1 ; R17(R18,R19)
	172	[1548]	GETUPVAL 	R17 U2 ; R17 := U2
	173	[1548]	GETTABLE 	R17 R17 K52 ; R17 := R17[0xe99b84e7]
	174	[1548]	MOVE     	R18 R2 ; R18 := R2
	175	[1548]	CALL     	R17 2 1 ; R17(R18)
	176	[1548]	JMP      	194 ; PC := 194
	177	[1550]	GETGLOBAL	R17 K6 ; R17 := mPurchaseParams
	178	[1550]	SETTABLE 	R17 K24 R0 ; R17["mDurability"] := R0
	179	[1551]	GETUPVAL 	R17 U0 ; R17 := U0
	180	[1551]	GETGLOBAL	R18 K6 ; R18 := mPurchaseParams
	181	[1551]	CALL     	R17 2 4 ; R17,R18,R19 := R17(R18)
	182	[1551]	SETGLOBALHASH	R19 K55 ; mPurchaseQuantityMultiplier := R19
	183	[1551]	SETGLOBALHASH	R18 K54 ; mPurchaseUnitPrice := R18
	184	[1551]	SETGLOBALHASH	R17 K53 ; mPurchaseTotalPrice := R17
	185	[1553]	GETGLOBAL	R17 K53 ; R17 := mPurchaseTotalPrice
	186	[1553]	EQ       	0 R17 K18 ; if R17 ~= nil then PC := 192
	187	[1553]	JMP      	192 ; PC := 192
	188	[1555]	GETUPVAL 	R17 U4 ; R17 := U4
	189	[1555]	LOADNIL  	R18 R18 ; R18 := nil
	190	[1555]	CALL     	R17 2 1 ; R17(R18)
	191	[1556]	RETURN   	R0 1 ; return 
	192	[1559]	GETUPVAL 	R17 U5 ; R17 := U5
	193	[1559]	CALL     	R17 1 1 ; R17()
	194	[1561]	RETURN   	R0 1 ; return 

function #29 <?:1563,1572> (28 instructions, 112 bytes at 0000016097B956B0)
0 params, 2 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[1564]	GETGLOBAL	R0 K1 ; R0 := 0x6c97a788
	2	[1564]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xf89a99f3]
	3	[1564]	CALL     	R0 1 2 ; R0 := R0()
	4	[1564]	SETGLOBALHASH	R0 K0 ; mPurchaseParams := R0
	5	[1565]	GETGLOBAL	R0 K0 ; R0 := mPurchaseParams
	6	[1565]	GETGLOBAL	R1 K4 ; R1 := _T
	7	[1565]	GETTABLE 	R1 R1 K5 ; R1 := R1["GiftParams"]
	8	[1565]	GETTABLE 	R1 R1 K6 ; R1 := R1["Item"]
	9	[1565]	SETTABLE 	R0 K3 R1 ; R0["mStoreItem"] := R1
	10	[1566]	GETGLOBAL	R0 K0 ; R0 := mPurchaseParams
	11	[1566]	GETGLOBAL	R1 K4 ; R1 := _T
	12	[1566]	GETTABLE 	R1 R1 K5 ; R1 := R1["GiftParams"]
	13	[1566]	GETTABLE 	R1 R1 K8 ; R1 := R1["Source"]
	14	[1566]	SETTABLE 	R0 K7 R1 ; R0["mSource"] := R1
	15	[1567]	GETGLOBAL	R0 K4 ; R0 := _T
	16	[1567]	GETTABLE 	R0 R0 K5 ; R0 := R0["GiftParams"]
	17	[1567]	GETTABLE 	R0 R0 K9 ; R0 := R0["CouponId"]
	18	[1567]	EQ       	1 R0 K10 ; if R0 == nil then PC := 26
	19	[1567]	JMP      	26 ; PC := 26
	20	[1568]	GETGLOBAL	R0 K0 ; R0 := mPurchaseParams
	21	[1568]	GETTABLE 	R0 R0 K11 ; R0 := R0["mCouponId"]
	22	[1568]	GETGLOBAL	R1 K4 ; R1 := _T
	23	[1568]	GETTABLE 	R1 R1 K5 ; R1 := R1["GiftParams"]
	24	[1568]	GETTABLE 	R1 R1 K9 ; R1 := R1["CouponId"]
	25	[1568]	SETTABLE 	R0 K12 R1 ; R0["mId"] := R1
	26	[1571]	GETUPVAL 	R0 U0 ; R0 := U0
	27	[1571]	CALL     	R0 1 1 ; R0()
	28	[1572]	RETURN   	R0 1 ; return 

function #30 <?:1575,1588> (25 instructions, 100 bytes at 0000016097B95920)
1 param, 5 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[1576]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[1576]	MOVE     	R2 R0 ; R2 := R0
	3	[1576]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1576]	EQ       	0 R1 K2 ; if R1 ~= 5.000000 then PC := 10
	5	[1576]	JMP      	10 ; PC := 10
	6	[1577]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[1577]	LOADNIL  	R2 R2 ; R2 := nil
	8	[1577]	CALL     	R1 2 1 ; R1(R2)
	9	[1578]	RETURN   	R0 1 ; return 
	10	[1581]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	11	[1581]	MOVE     	R2 R0 ; R2 := R0
	12	[1581]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[1581]	EQ       	0 R1 K3 ; if R1 ~= 4.000000 then PC := 18
	14	[1581]	JMP      	18 ; PC := 18
	15	[1582]	GETGLOBAL	R1 K4 ; R1 := mPurchaseParams
	16	[1582]	SETTABLE 	R1 K5 K6 ; R1["mUsePremium"] := false
	17	[1582]	JMP      	20 ; PC := 20
	18	[1584]	GETGLOBAL	R1 K4 ; R1 := mPurchaseParams
	19	[1584]	SETTABLE 	R1 K5 K7 ; R1["mUsePremium"] := true
	20	[1587]	GETGLOBAL	R1 K8 ; R1 := 0xae91e43b
	21	[1587]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xe4162eed]
	22	[1587]	LOADK    	R3 K10 ; R3 := "BuyItem"
	23	[1587]	LOADK    	R4 K11 ; R4 := "true"
	24	[1587]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	25	[1588]	RETURN   	R0 1 ; return 

function #31 <?:1590,1592> (4 instructions, 16 bytes at 0000016097B95B80)
0 params, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[1591]	GETGLOBAL	R0 K0 ; R0 := screenStack
	2	[1591]	LEN      	R0 R0 ; R0 := # R0
	3	[1591]	RETURN   	R0 2 ; return R0 
	4	[1592]	RETURN   	R0 1 ; return 

function #32 <?:1594,1596> (9 instructions, 36 bytes at 0000016097B95C70)
0 params, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[1595]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[1595]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x7e17ae26]
	3	[1595]	LOADK    	R2 K2 ; R2 := "ScreenStackUpdated"
	4	[1595]	GETGLOBAL	R3 K3 ; R3 := 0x64fb1586
	5	[1595]	GETGLOBAL	R4 K4 ; R4 := screenStack
	6	[1595]	LEN      	R4 R4 ; R4 := # R4
	7	[1595]	CALL     	R3 2 0 ; R3,... := R3(R4)
	8	[1595]	CALL     	R0 0 1 ; R0(R1,...)
	9	[1596]	RETURN   	R0 1 ; return 

function #33 <?:1598,1601> (8 instructions, 32 bytes at 0000016097B95E20)
1 param, 4 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1599]	GETGLOBAL	R1 K0 ; R1 := 0x33bdd652
	2	[1599]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x23d5322f]
	3	[1599]	GETGLOBAL	R2 K2 ; R2 := screenStack
	4	[1599]	MOVE     	R3 R0 ; R3 := R0
	5	[1599]	CALL     	R1 3 1 ; R1(R2,R3)
	6	[1600]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[1600]	CALL     	R1 1 1 ; R1()
	8	[1601]	RETURN   	R0 1 ; return 

function #34 <?:1603,1606> (8 instructions, 32 bytes at 0000016097B95F50)
1 param, 4 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1604]	GETGLOBAL	R1 K0 ; R1 := 0x33bdd652
	2	[1604]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x9c1f3b5a]
	3	[1604]	GETGLOBAL	R2 K2 ; R2 := screenStack
	4	[1604]	MOVE     	R3 R0 ; R3 := R0
	5	[1604]	CALL     	R1 3 1 ; R1(R2,R3)
	6	[1605]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[1605]	CALL     	R1 1 1 ; R1()
	8	[1606]	RETURN   	R0 1 ; return 

function #35 <?:1608,1617> (24 instructions, 96 bytes at 0000016097B96080)
2 params, 7 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[1609]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[1609]	MOVE     	R3 R0 ; R3 := R0
	3	[1609]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[1609]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[1609]	JMP      	7 ; PC := 7
	6	[1610]	RETURN   	R0 1 ; return 
	7	[1612]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0x768274d6]
	8	[1612]	MOVE     	R4 R1 ; R4 := R1
	9	[1612]	OP_LOADBOOL	R5 1 0 ; R5 := true
	10	[1612]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	11	[1613]	SELF     	R2 R0 K2 ; R3 := R0; R2 := R0[0xde321e6f]
	12	[1613]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[1613]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x2676deee]
	14	[1613]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[1614]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	16	[1614]	MOVE     	R4 R2 ; R4 := R2
	17	[1614]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[1614]	TEST     	R3 1 ; if R3 then PC := 24
	19	[1614]	JMP      	24 ; PC := 24
	20	[1615]	SELF     	R3 R2 K1 ; R4 := R2; R3 := R2[0x768274d6]
	21	[1615]	MOVE     	R5 R1 ; R5 := R1
	22	[1615]	OP_LOADBOOL	R6 1 0 ; R6 := true
	23	[1615]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	24	[1617]	RETURN   	R0 1 ; return 

function #36 <?:1619,1622> (24 instructions, 96 bytes at 0000016097B96240)
0 params, 3 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[1620]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1620]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[1620]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1620]	TEST     	R0 1 ; if R0 then PC := 21
	5	[1620]	JMP      	21 ; PC := 21
	6	[1620]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[1620]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x8019cc24]
	8	[1620]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[1620]	TEST     	R0 1 ; if R0 then PC := 23
	10	[1620]	JMP      	23 ; PC := 23
	11	[1621]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	12	[1621]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xf2deaf69]
	13	[1621]	GETGLOBAL	R2 K4 ; R2 := gLotusAttractModeGameRulesType
	14	[1621]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	15	[1621]	TEST     	R0 0 ; if not R0 then PC := 23
	16	[1621]	JMP      	23 ; PC := 23
	17	[1621]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	18	[1621]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x23ddc82a]
	19	[1621]	CALL     	R0 2 2 ; R0 := R0(R1)
	20	[1621]	JMP      	23 ; PC := 23
	21	[1621]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 22
	22	[1621]	OP_LOADBOOL	R0 1 0 ; R0 := true
	23	[1621]	RETURN   	R0 2 ; return R0 
	24	[1622]	RETURN   	R0 1 ; return 

function #37 <?:1624,1804> (476 instructions, 1904 bytes at 0000016097B96420)
0 params, 25 slots, 6 upvalues, 0 locals, 80 constants, 0 functions
	1	[1625]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[1626]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	3	[1626]	GETGLOBAL	R2 K1 ; R2 := mMenuSuitAvatar
	4	[1626]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[1626]	TEST     	R1 0 ; if not R1 then PC := 10
	6	[1626]	JMP      	10 ; PC := 10
	7	[1626]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	8	[1626]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xffe25891]
	9	[1626]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[1628]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	11	[1628]	GETGLOBAL	R3 K4 ; R3 := 0x89326c93
	12	[1628]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[1628]	TEST     	R2 0 ; if not R2 then PC := 16
	14	[1628]	JMP      	16 ; PC := 16
	15	[1629]	RETURN   	R0 1 ; return 
	16	[1632]	GETGLOBAL	R2 K4 ; R2 := 0x89326c93
	17	[1632]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x78298275]
	18	[1632]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[1632]	SETGLOBALHASH	R2 K1 ; mMenuSuitAvatar := R2
	20	[1634]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	21	[1634]	GETGLOBAL	R3 K1 ; R3 := mMenuSuitAvatar
	22	[1634]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[1634]	TEST     	R2 1 ; if R2 then PC := 30
	24	[1634]	JMP      	30 ; PC := 30
	25	[1634]	GETGLOBAL	R2 K6 ; R2 := mCurrentMode
	26	[1634]	GETUPVAL 	R3 U0 ; R3 := U0
	27	[1634]	GETTABLE 	R3 R3 K7 ; R3 := R3["UI_MODE_IN_SPACE_SHIP"]
	28	[1634]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 31
	29	[1634]	JMP      	31 ; PC := 31
	30	[1635]	RETURN   	R0 1 ; return 
	31	[1638]	LOADNIL  	R2 R2 ; R2 := nil
	32	[1639]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	33	[1639]	GETGLOBAL	R4 K8 ; R4 := 0x76ea806b
	34	[1639]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[1639]	TEST     	R3 1 ; if R3 then PC := 43
	36	[1639]	JMP      	43 ; PC := 43
	37	[1640]	GETGLOBAL	R3 K8 ; R3 := 0x76ea806b
	38	[1640]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x3f3ae64c]
	39	[1640]	LOADK    	R5 := 0.000000
	40	[1640]	OP_LOADBOOL	R6 0 0 ; R6 := false
	41	[1640]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	42	[1640]	MOVE     	R2 R3 ; R2 := R3
	43	[1643]	LOADNIL  	R3 R3 ; R3 := nil
	44	[1644]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	45	[1644]	MOVE     	R5 R2 ; R5 := R2
	46	[1644]	CALL     	R4 2 2 ; R4 := R4(R5)
	47	[1644]	TEST     	R4 1 ; if R4 then PC := 52
	48	[1644]	JMP      	52 ; PC := 52
	49	[1645]	SELF     	R4 R2 K10 ; R5 := R2; R4 := R2[0x80563238]
	50	[1645]	CALL     	R4 2 2 ; R4 := R4(R5)
	51	[1645]	MOVE     	R3 R4 ; R3 := R4
	52	[1648]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	53	[1648]	MOVE     	R5 R3 ; R5 := R3
	54	[1648]	CALL     	R4 2 2 ; R4 := R4(R5)
	55	[1648]	TEST     	R4 1 ; if R4 then PC := 66
	56	[1648]	JMP      	66 ; PC := 66
	57	[1648]	SELF     	R4 R3 K11 ; R5 := R3; R4 := R3[0x25a6e75e]
	58	[1648]	CALL     	R4 2 2 ; R4 := R4(R5)
	59	[1648]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0x8e7c3b5e]
	60	[1648]	CALL     	R4 2 2 ; R4 := R4(R5)
	61	[1648]	GETGLOBAL	R5 K13 ; R5 := 0x7ed0a956
	62	[1648]	LOADK    	R6 K14 ; R6 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
	63	[1648]	CALL     	R5 2 2 ; R5 := R5(R6)
	64	[1648]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 67
	65	[1648]	JMP      	67 ; PC := 67
	66	[1648]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 67
	67	[1648]	OP_LOADBOOL	R4 1 0 ; R4 := true
	68	[1649]	TEST     	R4 0 ; if not R4 then PC := 205
	69	[1649]	JMP      	205 ; PC := 205
	70	[1650]	OP_LOADBOOL	R5 1 0 ; R5 := true
	71	[1650]	TEST     	R5 1 ; if R5 then PC := 79
	72	[1650]	JMP      	79 ; PC := 79
	73	[1650]	GETGLOBAL	R5 K15 ; R5 := 0x9ba7909f
	74	[1650]	SELF     	R5 R5 K16 ; R6 := R5; R5 := R5[0xbf9494fc]
	75	[1650]	LOADK    	R7 K17 ; R7 := "Lotus.BypassQuestCommitments"
	76	[1650]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	77	[1650]	TEST     	R5 1 ; if R5 then PC := 102
	78	[1650]	JMP      	102 ; PC := 102
	79	[1651]	SELF     	R5 R3 K18 ; R6 := R3; R5 := R3[0xd3620ef3]
	80	[1651]	CALL     	R5 2 2 ; R5 := R5(R6)
	81	[1652]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	82	[1652]	MOVE     	R7 R5 ; R7 := R5
	83	[1652]	CALL     	R6 2 2 ; R6 := R6(R7)
	84	[1652]	TEST     	R6 1 ; if R6 then PC := 102
	85	[1652]	JMP      	102 ; PC := 102
	86	[1652]	SELF     	R6 R5 K19 ; R7 := R5; R6 := R5[0xf2deaf69]
	87	[1652]	GETGLOBAL	R8 K13 ; R8 := 0x7ed0a956
	88	[1652]	LOADK    	R9 K20 ; R9 := "/Lotus/Types/GameRules/CampFirstLoadFrontEndGameRules"
	89	[1652]	CALL     	R8 2 0 ; R8,... := R8(R9)
	90	[1652]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	91	[1652]	TEST     	R6 0 ; if not R6 then PC := 102
	92	[1652]	JMP      	102 ; PC := 102
	93	[1653]	GETUPVAL 	R6 U1 ; R6 := U1
	94	[1653]	GETGLOBAL	R7 K1 ; R7 := mMenuSuitAvatar
	95	[1653]	OP_LOADBOOL	R8 0 0 ; R8 := false
	96	[1653]	CALL     	R6 3 1 ; R6(R7,R8)
	97	[1654]	GETGLOBAL	R6 K21 ; R6 := _T
	98	[1654]	SETTABLE 	R6 K22 K23 ; R6["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
	99	[1655]	OP_LOADBOOL	R6 1 0 ; R6 := true
	100	[1655]	SETGLOBALHASH	R6 K24 ; mMenuSuitAvatarVisible := R6
	101	[1656]	RETURN   	R0 1 ; return 
	102	[1660]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	103	[1660]	GETGLOBAL	R7 K1 ; R7 := mMenuSuitAvatar
	104	[1660]	CALL     	R6 2 2 ; R6 := R6(R7)
	105	[1660]	TEST     	R6 1 ; if R6 then PC := 114
	106	[1660]	JMP      	114 ; PC := 114
	107	[1660]	GETGLOBAL	R6 K1 ; R6 := mMenuSuitAvatar
	108	[1660]	SELF     	R6 R6 K19 ; R7 := R6; R6 := R6[0xf2deaf69]
	109	[1660]	GETGLOBAL	R8 K13 ; R8 := 0x7ed0a956
	110	[1660]	LOADK    	R9 K25 ; R9 := "/Lotus/Types/Friendly/PlayerControllable/ControllableDrifterTennoAvatar"
	111	[1660]	CALL     	R8 2 0 ; R8,... := R8(R9)
	112	[1660]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	113	[1660]	JMP      	116 ; PC := 116
	114	[1660]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 115
	115	[1660]	OP_LOADBOOL	R6 1 0 ; R6 := true
	116	[1661]	TEST     	R6 0 ; if not R6 then PC := 205
	117	[1661]	JMP      	205 ; PC := 205
	118	[1662]	GETUPVAL 	R7 U0 ; R7 := U0
	119	[1662]	GETTABLE 	R7 R7 K12 ; R7 := R7[0x8e7c3b5e]
	120	[1662]	MOVE     	R8 R3 ; R8 := R3
	121	[1662]	CALL     	R7 2 3 ; R7,R8 := R7(R8)
	122	[1664]	EQ       	1 R8 K26 ; if R8 == nil then PC := 140
	123	[1664]	JMP      	140 ; PC := 140
	124	[1664]	LE       	0 R8 K27 ; if R8 > 7.000000 then PC := 140
	125	[1664]	JMP      	140 ; PC := 140
	126	[1666]	SELF     	R9 R3 K28 ; R10 := R3; R9 := R3[0x62c81b76]
	127	[1666]	CALL     	R9 2 2 ; R9 := R9(R10)
	128	[1667]	GETTABLE 	R10 R9 K29 ; R10 := R9["mAdultOperatorCustomization"]
	129	[1668]	SELF     	R11 R10 K30 ; R12 := R10; R11 := R10[0xb73354b4]
	130	[1668]	LOADK    	R13 := 14.000000
	131	[1668]	LOADK    	R14 := 1.000000
	132	[1668]	OP_LOADBOOL	R15 1 0 ; R15 := true
	133	[1668]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	134	[1669]	SELF     	R11 R3 K11 ; R12 := R3; R11 := R3[0x25a6e75e]
	135	[1669]	CALL     	R11 2 2 ; R11 := R11(R12)
	136	[1670]	SELF     	R12 R11 K32 ; R13 := R11; R12 := R11[0xabb55f13]
	137	[1670]	MOVE     	R14 R10 ; R14 := R10
	138	[1670]	OP_LOADBOOL	R15 1 0 ; R15 := true
	139	[1670]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	140	[1673]	SELF     	R12 R3 K33 ; R13 := R3; R12 := R3[0x24d4e4c1]
	141	[1673]	MOVE     	R14 R0 ; R14 := R0
	142	[1673]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	143	[1674]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	144	[1674]	MOVE     	R14 R12 ; R14 := R12
	145	[1674]	CALL     	R13 2 2 ; R13 := R13(R14)
	146	[1674]	TEST     	R13 1 ; if R13 then PC := 155
	147	[1674]	JMP      	155 ; PC := 155
	148	[1674]	SELF     	R13 R12 K34 ; R14 := R12; R13 := R12[0xd2d3875a]
	149	[1674]	CALL     	R13 2 2 ; R13 := R13(R14)
	150	[1674]	TEST     	R13 1 ; if R13 then PC := 155
	151	[1674]	JMP      	155 ; PC := 155
	152	[1676]	OP_LOADBOOL	R13 0 0 ; R13 := false
	153	[1676]	SETGLOBALHASH	R13 K24 ; mMenuSuitAvatarVisible := R13
	154	[1677]	RETURN   	R0 1 ; return 
	155	[1680]	GETGLOBAL	R13 K35 ; R13 := 0x3d106989
	156	[1680]	LOADK    	R14 K36 ; R14 := "LoadOut resource loader is done; showing avatar"
	157	[1680]	CALL     	R13 2 1 ; R13(R14)
	158	[1682]	SELF     	R13 R3 K37 ; R14 := R3; R13 := R3[0x121ec068]
	159	[1682]	CALL     	R13 2 1 ; R13(R14)
	160	[1684]	GETGLOBAL	R13 K8 ; R13 := 0x76ea806b
	161	[1684]	SELF     	R13 R13 K38 ; R14 := R13; R13 := R13[0x8792aaab]
	162	[1684]	CALL     	R13 2 2 ; R13 := R13(R14)
	163	[1684]	TEST     	R13 0 ; if not R13 then PC := 167
	164	[1684]	JMP      	167 ; PC := 167
	165	[1685]	SELF     	R13 R3 K39 ; R14 := R3; R13 := R3[0x41f4ba99]
	166	[1685]	CALL     	R13 2 1 ; R13(R14)
	167	[1688]	SELF     	R13 R3 K28 ; R14 := R3; R13 := R3[0x62c81b76]
	168	[1688]	CALL     	R13 2 2 ; R13 := R13(R14)
	169	[1689]	GETUPVAL 	R14 U1 ; R14 := U1
	170	[1689]	GETGLOBAL	R15 K1 ; R15 := mMenuSuitAvatar
	171	[1689]	OP_LOADBOOL	R16 1 0 ; R16 := true
	172	[1689]	CALL     	R14 3 1 ; R14(R15,R16)
	173	[1690]	OP_LOADBOOL	R14 1 0 ; R14 := true
	174	[1690]	SETGLOBALHASH	R14 K24 ; mMenuSuitAvatarVisible := R14
	175	[1694]	LOADNIL  	R14 R14 ; R14 := nil
	176	[1695]	GETTABLE 	R15 R13 K29 ; R15 := R13["mAdultOperatorCustomization"]
	177	[1696]	SELF     	R16 R15 K40 ; R17 := R15; R16 := R15[0x0549b427]
	178	[1696]	CALL     	R16 2 2 ; R16 := R16(R17)
	179	[1696]	TEST     	R16 0 ; if not R16 then PC := 186
	180	[1696]	JMP      	186 ; PC := 186
	181	[1697]	GETGLOBAL	R16 K13 ; R16 := 0x7ed0a956
	182	[1697]	LOADK    	R17 K41 ; R17 := "/Lotus/Types/Friendly/PlayerControllable/MaleControllableDrifterSuit"
	183	[1697]	CALL     	R16 2 2 ; R16 := R16(R17)
	184	[1697]	MOVE     	R14 R16 ; R14 := R16
	185	[1697]	JMP      	190 ; PC := 190
	186	[1699]	GETGLOBAL	R16 K13 ; R16 := 0x7ed0a956
	187	[1699]	LOADK    	R17 K42 ; R17 := "/Lotus/Types/Friendly/PlayerControllable/FemaleControllableDrifterSuit"
	188	[1699]	CALL     	R16 2 2 ; R16 := R16(R17)
	189	[1699]	MOVE     	R14 R16 ; R14 := R16
	190	[1701]	GETUPVAL 	R16 U2 ; R16 := U2
	191	[1701]	GETTABLE 	R16 R16 K43 ; R16 := R16[0x222e16f3]
	192	[1701]	GETGLOBAL	R17 K1 ; R17 := mMenuSuitAvatar
	193	[1701]	MOVE     	R18 R13 ; R18 := R13
	194	[1701]	OP_LOADBOOL	R19 0 0 ; R19 := false
	195	[1701]	OP_LOADBOOL	R20 1 0 ; R20 := true
	196	[1701]	MOVE     	R21 R14 ; R21 := R14
	197	[1701]	CALL     	R16 6 1 ; R16(R17,R18,R19,R20,R21)
	198	[1702]	GETGLOBAL	R16 K1 ; R16 := mMenuSuitAvatar
	199	[1702]	SELF     	R16 R16 K44 ; R17 := R16; R16 := R16[0x2e9b92e3]
	200	[1702]	LOADK    	R18 := 1.000000
	201	[1702]	CALL     	R16 3 1 ; R16(R17,R18)
	202	[1704]	OP_LOADBOOL	R16 1 0 ; R16 := true
	203	[1704]	SETGLOBALHASH	R16 K24 ; mMenuSuitAvatarVisible := R16
	204	[1705]	RETURN   	R0 1 ; return 
	205	[1709]	GETGLOBAL	R16 K4 ; R16 := 0x89326c93
	206	[1709]	SELF     	R16 R16 K45 ; R17 := R16; R16 := R16[0x18d05d30]
	207	[1709]	CALL     	R16 2 2 ; R16 := R16(R17)
	208	[1709]	TEST     	R16 1 ; if R16 then PC := 214
	209	[1709]	JMP      	214 ; PC := 214
	210	[1709]	GETUPVAL 	R16 U3 ; R16 := U3
	211	[1709]	CALL     	R16 1 2 ; R16 := R16()
	212	[1709]	TEST     	R16 1 ; if R16 then PC := 218
	213	[1709]	JMP      	218 ; PC := 218
	214	[1709]	GETGLOBAL	R16 K21 ; R16 := _T
	215	[1709]	GETTABLE 	R16 R16 K46 ; R16 := R16["streaming_prevLevel"]
	216	[1709]	TEST     	R16 0 ; if not R16 then PC := 223
	217	[1709]	JMP      	223 ; PC := 223
	218	[1710]	GETGLOBAL	R16 K21 ; R16 := _T
	219	[1710]	SETTABLE 	R16 K22 K23 ; R16["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
	220	[1711]	OP_LOADBOOL	R16 1 0 ; R16 := true
	221	[1711]	SETGLOBALHASH	R16 K24 ; mMenuSuitAvatarVisible := R16
	222	[1712]	RETURN   	R0 1 ; return 
	223	[1715]	GETUPVAL 	R16 U1 ; R16 := U1
	224	[1715]	GETGLOBAL	R17 K1 ; R17 := mMenuSuitAvatar
	225	[1715]	OP_LOADBOOL	R18 0 0 ; R18 := false
	226	[1715]	CALL     	R16 3 1 ; R16(R17,R18)
	227	[1716]	TEST     	R1 0 ; if not R1 then PC := 268
	228	[1716]	JMP      	268 ; PC := 268
	229	[1717]	GETGLOBAL	R16 K21 ; R16 := _T
	230	[1717]	SETTABLE 	R16 K22 K47 ; R16["MENU_SUIT_AVATAR_PROGRESS"] := 0.000000
	231	[1718]	GETGLOBAL	R16 K48 ; R16 := 0x00046924
	232	[1718]	CALL     	R16 1 2 ; R16 := R16()
	233	[1719]	GETUPVAL 	R17 U0 ; R17 := U0
	234	[1719]	GETTABLE 	R17 R17 K49 ; R17 := R17[0xf47b8ec3]
	235	[1719]	OP_LOADBOOL	R18 1 0 ; R18 := true
	236	[1719]	CALL     	R17 2 2 ; R17 := R17(R18)
	237	[1719]	TEST     	R17 0 ; if not R17 then PC := 240
	238	[1719]	JMP      	240 ; PC := 240
	239	[1720]	SETTABLE 	R16 K50 K51 ; R16["heading"] := 180.000000
	240	[1722]	GETGLOBAL	R17 K1 ; R17 := mMenuSuitAvatar
	241	[1722]	SELF     	R17 R17 K52 ; R18 := R17; R17 := R17[0x89c6dbf7]
	242	[1722]	MOVE     	R19 R16 ; R19 := R16
	243	[1722]	CALL     	R17 3 1 ; R17(R18,R19)
	244	[1723]	GETGLOBAL	R17 K8 ; R17 := 0x76ea806b
	245	[1723]	SELF     	R17 R17 K38 ; R18 := R17; R17 := R17[0x8792aaab]
	246	[1723]	CALL     	R17 2 2 ; R17 := R17(R18)
	247	[1723]	TEST     	R17 0 ; if not R17 then PC := 256
	248	[1723]	JMP      	256 ; PC := 256
	249	[1724]	GETGLOBAL	R17 K1 ; R17 := mMenuSuitAvatar
	250	[1724]	SELF     	R17 R17 K53 ; R18 := R17; R17 := R17[0x589ef1c1]
	251	[1724]	GETGLOBAL	R19 K1 ; R19 := mMenuSuitAvatar
	252	[1724]	SELF     	R19 R19 K54 ; R20 := R19; R19 := R19[0xd1586535]
	253	[1724]	CALL     	R19 2 2 ; R19 := R19(R20)
	254	[1724]	MOVE     	R20 R16 ; R20 := R16
	255	[1724]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	256	[1726]	GETGLOBAL	R17 K1 ; R17 := mMenuSuitAvatar
	257	[1726]	SELF     	R17 R17 K55 ; R18 := R17; R17 := R17[0xb2532845]
	258	[1726]	GETGLOBAL	R19 K56 ; R19 := 0x0469f296
	259	[1726]	LOADK    	R20 K57 ; R20 := "InstantKneel"
	260	[1726]	CALL     	R19 2 0 ; R19,... := R19(R20)
	261	[1726]	CALL     	R17 0 1 ; R17(R18,...)
	262	[1729]	GETGLOBAL	R17 K1 ; R17 := mMenuSuitAvatar
	263	[1729]	SELF     	R17 R17 K58 ; R18 := R17; R17 := R17[0xde321e6f]
	264	[1729]	CALL     	R17 2 2 ; R17 := R17(R18)
	265	[1729]	SELF     	R17 R17 K59 ; R18 := R17; R17 := R17[0xc7154a44]
	266	[1729]	OP_LOADBOOL	R19 0 0 ; R19 := false
	267	[1729]	CALL     	R17 3 1 ; R17(R18,R19)
	268	[1732]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	269	[1732]	MOVE     	R18 R2 ; R18 := R2
	270	[1732]	CALL     	R17 2 2 ; R17 := R17(R18)
	271	[1732]	TEST     	R17 0 ; if not R17 then PC := 301
	272	[1732]	JMP      	301 ; PC := 301
	273	[1734]	GETGLOBAL	R17 K1 ; R17 := mMenuSuitAvatar
	274	[1734]	SELF     	R17 R17 K58 ; R18 := R17; R17 := R17[0xde321e6f]
	275	[1734]	CALL     	R17 2 2 ; R17 := R17(R18)
	276	[1734]	SELF     	R17 R17 K60 ; R18 := R17; R17 := R17[0x374b084a]
	277	[1734]	CALL     	R17 2 1 ; R17(R18)
	278	[1735]	GETGLOBAL	R17 K1 ; R17 := mMenuSuitAvatar
	279	[1735]	SELF     	R17 R17 K58 ; R18 := R17; R17 := R17[0xde321e6f]
	280	[1735]	CALL     	R17 2 2 ; R17 := R17(R18)
	281	[1735]	SELF     	R17 R17 K61 ; R18 := R17; R17 := R17[0x1d2dfe4a]
	282	[1735]	GETGLOBAL	R19 K31 ; R19 := 0x6c97a788
	283	[1735]	GETTABLE 	R19 R19 K62 ; R19 := R19[0x17574a02]
	284	[1735]	CALL     	R19 1 0 ; R19,... := R19()
	285	[1735]	CALL     	R17 0 1 ; R17(R18,...)
	286	[1736]	GETGLOBAL	R17 K1 ; R17 := mMenuSuitAvatar
	287	[1736]	SELF     	R17 R17 K58 ; R18 := R17; R17 := R17[0xde321e6f]
	288	[1736]	CALL     	R17 2 2 ; R17 := R17(R18)
	289	[1736]	SELF     	R17 R17 K63 ; R18 := R17; R17 := R17[0x0c277ae1]
	290	[1736]	OP_LOADBOOL	R19 0 0 ; R19 := false
	291	[1736]	CALL     	R17 3 1 ; R17(R18,R19)
	292	[1738]	GETUPVAL 	R17 U1 ; R17 := U1
	293	[1738]	GETGLOBAL	R18 K1 ; R18 := mMenuSuitAvatar
	294	[1738]	OP_LOADBOOL	R19 1 0 ; R19 := true
	295	[1738]	CALL     	R17 3 1 ; R17(R18,R19)
	296	[1739]	OP_LOADBOOL	R17 1 0 ; R17 := true
	297	[1739]	SETGLOBALHASH	R17 K24 ; mMenuSuitAvatarVisible := R17
	298	[1740]	GETGLOBAL	R17 K21 ; R17 := _T
	299	[1740]	SETTABLE 	R17 K22 K23 ; R17["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
	300	[1741]	RETURN   	R0 1 ; return 
	301	[1744]	GETGLOBAL	R17 K21 ; R17 := _T
	302	[1744]	GETTABLE 	R17 R17 K64 ; R17 := R17["syncingInventory"]
	303	[1744]	TEST     	R17 0 ; if not R17 then PC := 351
	304	[1744]	JMP      	351 ; PC := 351
	305	[1746]	SELF     	R17 R3 K33 ; R18 := R3; R17 := R3[0x24d4e4c1]
	306	[1746]	MOVE     	R19 R0 ; R19 := R0
	307	[1746]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	308	[1747]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	309	[1747]	MOVE     	R19 R17 ; R19 := R17
	310	[1747]	CALL     	R18 2 2 ; R18 := R18(R19)
	311	[1747]	TEST     	R18 1 ; if R18 then PC := 350
	312	[1747]	JMP      	350 ; PC := 350
	313	[1748]	GETGLOBAL	R18 K21 ; R18 := _T
	314	[1748]	SELF     	R19 R17 K65 ; R20 := R17; R19 := R17[0x958b6075]
	315	[1748]	CALL     	R19 2 2 ; R19 := R19(R20)
	316	[1748]	SETTABLE 	R18 K22 R19 ; R18["MENU_SUIT_AVATAR_PROGRESS"] := R19
	317	[1749]	SELF     	R18 R17 K34 ; R19 := R17; R18 := R17[0xd2d3875a]
	318	[1749]	CALL     	R18 2 2 ; R18 := R18(R19)
	319	[1749]	TEST     	R18 0 ; if not R18 then PC := 350
	320	[1749]	JMP      	350 ; PC := 350
	321	[1750]	SELF     	R18 R3 K28 ; R19 := R3; R18 := R3[0x62c81b76]
	322	[1750]	CALL     	R18 2 2 ; R18 := R18(R19)
	323	[1751]	GETGLOBAL	R19 K21 ; R19 := _T
	324	[1751]	SETTABLE 	R19 K22 K23 ; R19["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
	325	[1752]	OP_LOADBOOL	R19 1 0 ; R19 := true
	326	[1752]	SETGLOBALHASH	R19 K24 ; mMenuSuitAvatarVisible := R19
	327	[1753]	GETGLOBAL	R19 K1 ; R19 := mMenuSuitAvatar
	328	[1753]	SELF     	R19 R19 K58 ; R20 := R19; R19 := R19[0xde321e6f]
	329	[1753]	CALL     	R19 2 2 ; R19 := R19(R20)
	330	[1753]	SELF     	R19 R19 K60 ; R20 := R19; R19 := R19[0x374b084a]
	331	[1753]	CALL     	R19 2 1 ; R19(R20)
	332	[1754]	GETGLOBAL	R19 K1 ; R19 := mMenuSuitAvatar
	333	[1754]	SELF     	R19 R19 K58 ; R20 := R19; R19 := R19[0xde321e6f]
	334	[1754]	CALL     	R19 2 2 ; R19 := R19(R20)
	335	[1754]	SELF     	R19 R19 K61 ; R20 := R19; R19 := R19[0x1d2dfe4a]
	336	[1754]	MOVE     	R21 R18 ; R21 := R18
	337	[1754]	CALL     	R19 3 1 ; R19(R20,R21)
	338	[1755]	GETGLOBAL	R19 K1 ; R19 := mMenuSuitAvatar
	339	[1755]	SELF     	R19 R19 K58 ; R20 := R19; R19 := R19[0xde321e6f]
	340	[1755]	CALL     	R19 2 2 ; R19 := R19(R20)
	341	[1755]	SELF     	R19 R19 K63 ; R20 := R19; R19 := R19[0x0c277ae1]
	342	[1755]	OP_LOADBOOL	R21 0 0 ; R21 := false
	343	[1755]	CALL     	R19 3 1 ; R19(R20,R21)
	344	[1756]	GETGLOBAL	R19 K1 ; R19 := mMenuSuitAvatar
	345	[1756]	SELF     	R19 R19 K66 ; R20 := R19; R19 := R19[0x5b89142c]
	346	[1756]	CALL     	R19 2 2 ; R19 := R19(R20)
	347	[1756]	SELF     	R19 R19 K67 ; R20 := R19; R19 := R19[0xe5586395]
	348	[1756]	MOVE     	R21 R18 ; R21 := R18
	349	[1756]	CALL     	R19 3 1 ; R19(R20,R21)
	350	[1759]	RETURN   	R0 1 ; return 
	351	[1762]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	352	[1762]	MOVE     	R20 R3 ; R20 := R3
	353	[1762]	CALL     	R19 2 2 ; R19 := R19(R20)
	354	[1762]	TEST     	R19 0 ; if not R19 then PC := 359
	355	[1762]	JMP      	359 ; PC := 359
	356	[1763]	OP_LOADBOOL	R19 0 0 ; R19 := false
	357	[1763]	SETGLOBALHASH	R19 K24 ; mMenuSuitAvatarVisible := R19
	358	[1764]	RETURN   	R0 1 ; return 
	359	[1767]	SELF     	R19 R3 K33 ; R20 := R3; R19 := R3[0x24d4e4c1]
	360	[1767]	MOVE     	R21 R0 ; R21 := R0
	361	[1767]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	362	[1769]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	363	[1769]	MOVE     	R21 R19 ; R21 := R19
	364	[1769]	CALL     	R20 2 2 ; R20 := R20(R21)
	365	[1769]	TEST     	R20 1 ; if R20 then PC := 378
	366	[1769]	JMP      	378 ; PC := 378
	367	[1769]	SELF     	R20 R19 K34 ; R21 := R19; R20 := R19[0xd2d3875a]
	368	[1769]	CALL     	R20 2 2 ; R20 := R20(R21)
	369	[1769]	TEST     	R20 1 ; if R20 then PC := 378
	370	[1769]	JMP      	378 ; PC := 378
	371	[1770]	GETGLOBAL	R20 K21 ; R20 := _T
	372	[1770]	SELF     	R21 R19 K65 ; R22 := R19; R21 := R19[0x958b6075]
	373	[1770]	CALL     	R21 2 2 ; R21 := R21(R22)
	374	[1770]	SETTABLE 	R20 K22 R21 ; R20["MENU_SUIT_AVATAR_PROGRESS"] := R21
	375	[1771]	OP_LOADBOOL	R20 0 0 ; R20 := false
	376	[1771]	SETGLOBALHASH	R20 K24 ; mMenuSuitAvatarVisible := R20
	377	[1772]	RETURN   	R0 1 ; return 
	378	[1775]	GETGLOBAL	R20 K35 ; R20 := 0x3d106989
	379	[1775]	LOADK    	R21 K36 ; R21 := "LoadOut resource loader is done; showing avatar"
	380	[1775]	CALL     	R20 2 1 ; R20(R21)
	381	[1777]	SELF     	R20 R3 K37 ; R21 := R3; R20 := R3[0x121ec068]
	382	[1777]	CALL     	R20 2 1 ; R20(R21)
	383	[1779]	GETGLOBAL	R20 K8 ; R20 := 0x76ea806b
	384	[1779]	SELF     	R20 R20 K38 ; R21 := R20; R20 := R20[0x8792aaab]
	385	[1779]	CALL     	R20 2 2 ; R20 := R20(R21)
	386	[1779]	TEST     	R20 0 ; if not R20 then PC := 410
	387	[1779]	JMP      	410 ; PC := 410
	388	[1780]	SELF     	R20 R3 K39 ; R21 := R3; R20 := R3[0x41f4ba99]
	389	[1780]	CALL     	R20 2 1 ; R20(R21)
	390	[1781]	GETGLOBAL	R20 K21 ; R20 := _T
	391	[1781]	GETTABLE 	R20 R20 K68 ; R20 := R20["Jukebox"]
	392	[1781]	EQ       	0 R20 K26 ; if R20 ~= nil then PC := 410
	393	[1781]	JMP      	410 ; PC := 410
	394	[1781]	SELF     	R20 R3 K69 ; R21 := R3; R20 := R3[0x4ae54c32]
	395	[1781]	GETUPVAL 	R22 U0 ; R22 := U0
	396	[1781]	GETTABLE 	R22 R22 K70 ; R22 := R22["SF_PERSONAL_QUARTERS"]
	397	[1781]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	398	[1781]	TEST     	R20 0 ; if not R20 then PC := 410
	399	[1781]	JMP      	410 ; PC := 410
	400	[1781]	GETGLOBAL	R20 K2 ; R20 := 0xbe190284
	401	[1781]	SELF     	R20 R20 K71 ; R21 := R20; R20 := R20[0x23ddc82a]
	402	[1781]	CALL     	R20 2 2 ; R20 := R20(R21)
	403	[1781]	TEST     	R20 1 ; if R20 then PC := 410
	404	[1781]	JMP      	410 ; PC := 410
	405	[1782]	GETUPVAL 	R20 U4 ; R20 := U4
	406	[1782]	GETTABLE 	R20 R20 K72 ; R20 := R20[0x687ae094]
	407	[1782]	GETGLOBAL	R21 K1 ; R21 := mMenuSuitAvatar
	408	[1782]	GETGLOBAL	R22 K73 ; R22 := 0xae91e43b
	409	[1782]	CALL     	R20 3 1 ; R20(R21,R22)
	410	[1785]	SELF     	R20 R3 K28 ; R21 := R3; R20 := R3[0x62c81b76]
	411	[1785]	CALL     	R20 2 2 ; R20 := R20(R21)
	412	[1786]	GETUPVAL 	R21 U1 ; R21 := U1
	413	[1786]	GETGLOBAL	R22 K1 ; R22 := mMenuSuitAvatar
	414	[1786]	OP_LOADBOOL	R23 1 0 ; R23 := true
	415	[1786]	CALL     	R21 3 1 ; R21(R22,R23)
	416	[1787]	OP_LOADBOOL	R21 1 0 ; R21 := true
	417	[1787]	SETGLOBALHASH	R21 K24 ; mMenuSuitAvatarVisible := R21
	418	[1788]	GETGLOBAL	R21 K21 ; R21 := _T
	419	[1788]	SETTABLE 	R21 K22 K23 ; R21["MENU_SUIT_AVATAR_PROGRESS"] := 1.000000
	420	[1789]	GETGLOBAL	R21 K1 ; R21 := mMenuSuitAvatar
	421	[1789]	SELF     	R21 R21 K58 ; R22 := R21; R21 := R21[0xde321e6f]
	422	[1789]	CALL     	R21 2 2 ; R21 := R21(R22)
	423	[1789]	SELF     	R21 R21 K60 ; R22 := R21; R21 := R21[0x374b084a]
	424	[1789]	CALL     	R21 2 1 ; R21(R22)
	425	[1790]	GETGLOBAL	R21 K2 ; R21 := 0xbe190284
	426	[1790]	SELF     	R21 R21 K74 ; R22 := R21; R21 := R21[0x417eba72]
	427	[1790]	MOVE     	R23 R20 ; R23 := R20
	428	[1790]	CALL     	R21 3 1 ; R21(R22,R23)
	429	[1791]	GETGLOBAL	R21 K1 ; R21 := mMenuSuitAvatar
	430	[1791]	SELF     	R21 R21 K58 ; R22 := R21; R21 := R21[0xde321e6f]
	431	[1791]	CALL     	R21 2 2 ; R21 := R21(R22)
	432	[1791]	SELF     	R21 R21 K61 ; R22 := R21; R21 := R21[0x1d2dfe4a]
	433	[1791]	MOVE     	R23 R20 ; R23 := R20
	434	[1791]	CALL     	R21 3 1 ; R21(R22,R23)
	435	[1792]	GETGLOBAL	R21 K1 ; R21 := mMenuSuitAvatar
	436	[1792]	SELF     	R21 R21 K58 ; R22 := R21; R21 := R21[0xde321e6f]
	437	[1792]	CALL     	R21 2 2 ; R21 := R21(R22)
	438	[1792]	SELF     	R21 R21 K63 ; R22 := R21; R21 := R21[0x0c277ae1]
	439	[1792]	OP_LOADBOOL	R23 0 0 ; R23 := false
	440	[1792]	CALL     	R21 3 1 ; R21(R22,R23)
	441	[1793]	GETGLOBAL	R21 K1 ; R21 := mMenuSuitAvatar
	442	[1793]	SELF     	R21 R21 K66 ; R22 := R21; R21 := R21[0x5b89142c]
	443	[1793]	CALL     	R21 2 2 ; R21 := R21(R22)
	444	[1793]	SELF     	R21 R21 K67 ; R22 := R21; R21 := R21[0xe5586395]
	445	[1793]	MOVE     	R23 R20 ; R23 := R20
	446	[1793]	CALL     	R21 3 1 ; R21(R22,R23)
	447	[1795]	GETGLOBAL	R21 K21 ; R21 := _T
	448	[1795]	GETGLOBAL	R22 K1 ; R22 := mMenuSuitAvatar
	449	[1795]	SELF     	R22 R22 K54 ; R23 := R22; R22 := R22[0xd1586535]
	450	[1795]	CALL     	R22 2 2 ; R22 := R22(R23)
	451	[1795]	SETTABLE 	R21 K75 R22 ; R21[0x3f3ae64c] := R22
	452	[1796]	GETGLOBAL	R21 K21 ; R21 := _T
	453	[1796]	GETGLOBAL	R22 K1 ; R22 := mMenuSuitAvatar
	454	[1796]	SELF     	R22 R22 K54 ; R23 := R22; R22 := R22[0xd1586535]
	455	[1796]	CALL     	R22 2 2 ; R22 := R22(R23)
	456	[1796]	SETTABLE 	R21 K76 R22 ; R21[0x7b998233] := R22
	457	[1798]	OP_LOADBOOL	R21 1 0 ; R21 := true
	458	[1798]	SETUPVAL 	R21 U5 ; U5 := R21
	459	[1800]	GETGLOBAL	R21 K4 ; R21 := 0x89326c93
	460	[1800]	SELF     	R21 R21 K77 ; R22 := R21; R21 := R21[0xfb64e76c]
	461	[1800]	CALL     	R21 2 2 ; R21 := R21(R22)
	462	[1801]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	463	[1801]	MOVE     	R23 R21 ; R23 := R21
	464	[1801]	CALL     	R22 2 2 ; R22 := R22(R23)
	465	[1801]	TEST     	R22 1 ; if R22 then PC := 476
	466	[1801]	JMP      	476 ; PC := 476
	467	[1801]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	468	[1801]	SELF     	R23 R21 K78 ; R24 := R21; R23 := R21[0xa534c3ac]
	469	[1801]	CALL     	R23 2 0 ; R23,... := R23(R24)
	470	[1801]	CALL     	R22 0 2 ; R22 := R22(R23,...)
	471	[1801]	TEST     	R22 0 ; if not R22 then PC := 476
	472	[1801]	JMP      	476 ; PC := 476
	473	[1802]	SELF     	R22 R21 K79 ; R23 := R21; R22 := R21[0xe8272a78]
	474	[1802]	GETGLOBAL	R24 K1 ; R24 := mMenuSuitAvatar
	475	[1802]	CALL     	R22 3 1 ; R22(R23,R24)
	476	[1804]	RETURN   	R0 1 ; return 

function #38 <?:1806,1808> (3 instructions, 12 bytes at 00000160FC1093C0)
0 params, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[1807]	GETGLOBAL	R0 K0 ; R0 := mMenuSuitAvatarVisible
	2	[1807]	RETURN   	R0 2 ; return R0 
	3	[1808]	RETURN   	R0 1 ; return 

function #39 <?:1810,1812> (3 instructions, 12 bytes at 00000160FC1094B0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1811]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1811]	CALL     	R0 1 1 ; R0()
	3	[1812]	RETURN   	R0 1 ; return 

function #40 <?:1814,1819> (9 instructions, 36 bytes at 00000160FC109580)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1815]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[1815]	SETGLOBALHASH	R0 K0 ; mCheckingForIdentifiedOmegaMods := R0
	3	[1816]	NEWTABLE 	R0 0 0 ; R0 := {}
	4	[1816]	SETGLOBALHASH	R0 K1 ; mOmegaWithPendingFingerprints := R0
	5	[1817]	NEWTABLE 	R0 0 0 ; R0 := {}
	6	[1817]	SETGLOBALHASH	R0 K2 ; mNewIdentifiedOmegaMods := R0
	7	[1818]	LOADK    	R0 := 1.000000
	8	[1818]	SETUPVAL 	R0 U0 ; U0 := R0
	9	[1819]	RETURN   	R0 1 ; return 

function #41 <?:1821,1833> (42 instructions, 168 bytes at 00000160FC1096D0)
2 params, 5 slots, 3 upvalues, 0 locals, 18 constants, 0 functions
	1	[1822]	GETGLOBAL	R2 K0 ; R2 := mFoundryNotification
	2	[1822]	SETTABLE 	R2 K1 K2 ; R2["Refresh"] := true
	3	[1823]	GETGLOBAL	R2 K3 ; R2 := _T
	4	[1823]	SETTABLE 	R2 K4 K5 ; R2["syncingInventory"] := false
	5	[1824]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[1824]	CALL     	R2 1 1 ; R2()
	7	[1825]	OP_LOADBOOL	R2 0 0 ; R2 := false
	8	[1825]	SETGLOBALHASH	R2 K6 ; mMenuSuitAvatarVisible := R2
	9	[1827]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	10	[1827]	GETGLOBAL	R3 K8 ; R3 := 0x25d99d89
	11	[1827]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[1827]	TEST     	R2 1 ; if R2 then PC := 42
	13	[1827]	JMP      	42 ; PC := 42
	14	[1827]	GETGLOBAL	R2 K8 ; R2 := 0x25d99d89
	15	[1827]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x21a1810f]
	16	[1827]	GETUPVAL 	R4 U1 ; R4 := U1
	17	[1827]	GETTABLE 	R4 R4 K10 ; R4 := R4["NodeSymbol"]
	18	[1827]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	19	[1827]	TEST     	R2 1 ; if R2 then PC := 42
	20	[1827]	JMP      	42 ; PC := 42
	21	[1827]	GETUPVAL 	R2 U2 ; R2 := U2
	22	[1827]	GETTABLE 	R2 R2 K11 ; R2 := R2[0xe0628359]
	23	[1827]	CALL     	R2 1 2 ; R2 := R2()
	24	[1827]	TEST     	R2 0 ; if not R2 then PC := 42
	25	[1827]	JMP      	42 ; PC := 42
	26	[1828]	GETGLOBAL	R2 K8 ; R2 := 0x25d99d89
	27	[1828]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0x25a6e75e]
	28	[1828]	CALL     	R2 2 2 ; R2 := R2(R3)
	29	[1828]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x8e7c3b5e]
	30	[1828]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[1828]	GETGLOBAL	R3 K14 ; R3 := 0x7ed0a956
	32	[1828]	LOADK    	R4 K15 ; R4 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
	33	[1828]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[1828]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 37
	35	[1828]	JMP      	37 ; PC := 37
	36	[1828]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 37
	37	[1828]	OP_LOADBOOL	R2 1 0 ; R2 := true
	38	[1829]	TEST     	R2 1 ; if R2 then PC := 42
	39	[1829]	JMP      	42 ; PC := 42
	40	[1830]	GETUPVAL 	R3 U1 ; R3 := U1
	41	[1830]	SETTABLE 	R3 K16 K17 ; R3["InviteQueued"] := 5.000000
	42	[1833]	RETURN   	R0 1 ; return 

function #42 <?:1835,1845> (27 instructions, 108 bytes at 00000160FC109A10)
2 params, 6 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1836]	GETGLOBAL	R2 K0 ; R2 := 0x76ea806b
	2	[1836]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x3f3ae64c]
	3	[1836]	LOADK    	R4 := 0.000000
	4	[1836]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	5	[1837]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	6	[1837]	MOVE     	R4 R2 ; R4 := R2
	7	[1837]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[1837]	TEST     	R3 1 ; if R3 then PC := 27
	9	[1837]	JMP      	27 ; PC := 27
	10	[1837]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0x22de02e1]
	11	[1837]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[1837]	TEST     	R3 0 ; if not R3 then PC := 27
	13	[1837]	JMP      	27 ; PC := 27
	14	[1838]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x80563238]
	15	[1838]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[1839]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	17	[1839]	MOVE     	R5 R3 ; R5 := R3
	18	[1839]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[1839]	TEST     	R4 1 ; if R4 then PC := 27
	20	[1839]	JMP      	27 ; PC := 27
	21	[1840]	SELF     	R4 R3 K5 ; R5 := R3; R4 := R3[0x1730e16b]
	22	[1840]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[1840]	TEST     	R4 0 ; if not R4 then PC := 27
	24	[1840]	JMP      	27 ; PC := 27
	25	[1841]	GETGLOBAL	R4 K6 ; R4 := _T
	26	[1841]	SETTABLE 	R4 K7 K8 ; R4["gQueueMailbox"] := true
	27	[1845]	RETURN   	R0 1 ; return 

function #43 <?:1847,1851> (22 instructions, 88 bytes at 00000160FC109C40)
2 params, 7 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[1848]	TEST     	R0 0 ; if not R0 then PC := 22
	2	[1848]	JMP      	22 ; PC := 22
	3	[1848]	EQ       	1 R1 K0 ; if R1 == "" then PC := 22
	4	[1848]	JMP      	22 ; PC := 22
	5	[1848]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	6	[1848]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	7	[1848]	MOVE     	R3 R1 ; R3 := R1
	8	[1848]	LOADK    	R4 K3 ; R4 := "/Lotus/Language/"
	9	[1848]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	10	[1848]	EQ       	1 R2 K4 ; if R2 == nil then PC := 22
	11	[1848]	JMP      	22 ; PC := 22
	12	[1849]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[1849]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xe0cba3ca]
	14	[1849]	GETGLOBAL	R3 K6 ; R3 := 0xae91e43b
	15	[1849]	SELF     	R3 R3 K7 ; R4 := R3; R3 := R3[0x42b04007]
	16	[1849]	MOVE     	R5 R1 ; R5 := R1
	17	[1849]	OP_LOADBOOL	R6 0 0 ; R6 := false
	18	[1849]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	19	[1849]	LOADNIL  	R4 R4 ; R4 := nil
	20	[1849]	LOADK    	R5 := 0.000000
	21	[1849]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	22	[1851]	RETURN   	R0 1 ; return 

function #44 <?:1853,1857> (22 instructions, 88 bytes at 00000160FC109E50)
2 params, 7 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[1854]	TEST     	R0 0 ; if not R0 then PC := 22
	2	[1854]	JMP      	22 ; PC := 22
	3	[1854]	EQ       	1 R1 K0 ; if R1 == "" then PC := 22
	4	[1854]	JMP      	22 ; PC := 22
	5	[1854]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	6	[1854]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	7	[1854]	MOVE     	R3 R1 ; R3 := R1
	8	[1854]	LOADK    	R4 K3 ; R4 := "/Lotus/Language/"
	9	[1854]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	10	[1854]	EQ       	1 R2 K4 ; if R2 == nil then PC := 22
	11	[1854]	JMP      	22 ; PC := 22
	12	[1855]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[1855]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xe0cba3ca]
	14	[1855]	GETGLOBAL	R3 K6 ; R3 := 0xae91e43b
	15	[1855]	SELF     	R3 R3 K7 ; R4 := R3; R3 := R3[0x42b04007]
	16	[1855]	MOVE     	R5 R1 ; R5 := R1
	17	[1855]	OP_LOADBOOL	R6 0 0 ; R6 := false
	18	[1855]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	19	[1855]	LOADNIL  	R4 R4 ; R4 := nil
	20	[1855]	LOADK    	R5 := 0.000000
	21	[1855]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	22	[1857]	RETURN   	R0 1 ; return 

function #45 <?:1859,1860> (1 instruction, 4 bytes at 00000160FC10A060)
2 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[1860]	RETURN   	R0 1 ; return 

function #46 <?:1862,1877> (46 instructions, 184 bytes at 00000160FC10A130)
3 params, 11 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[1863]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[1863]	GETGLOBAL	R4 K1 ; R4 := 0x354c41af
	3	[1863]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[1863]	TEST     	R3 1 ; if R3 then PC := 44
	5	[1863]	JMP      	44 ; PC := 44
	6	[1864]	GETGLOBAL	R3 K2 ; R3 := _T
	7	[1864]	GETTABLE 	R3 R3 K3 ; R3 := R3["InfoPopup_Data"]
	8	[1865]	EQ       	1 R3 K4 ; if R3 == nil then PC := 44
	9	[1865]	JMP      	44 ; PC := 44
	10	[1866]	GETTABLE 	R4 R0 K5 ; R4 := R0["UID"]
	11	[1866]	EQ       	1 R4 K4 ; if R4 == nil then PC := 21
	12	[1866]	JMP      	21 ; PC := 21
	13	[1866]	GETTABLE 	R4 R3 K6 ; R4 := R3["RawItem"]
	14	[1866]	EQ       	1 R4 K4 ; if R4 == nil then PC := 21
	15	[1866]	JMP      	21 ; PC := 21
	16	[1866]	GETTABLE 	R4 R3 K6 ; R4 := R3["RawItem"]
	17	[1866]	GETTABLE 	R4 R4 K5 ; R4 := R4["UID"]
	18	[1866]	GETTABLE 	R5 R0 K5 ; R5 := R0["UID"]
	19	[1866]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 44
	20	[1866]	JMP      	44 ; PC := 44
	21	[1867]	GETGLOBAL	R4 K7 ; R4 := 0xae91e43b
	22	[1867]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0x1fd6abd0]
	23	[1867]	GETGLOBAL	R6 K1 ; R6 := 0x354c41af
	24	[1867]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	25	[1868]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	26	[1868]	MOVE     	R6 R4 ; R6 := R4
	27	[1868]	CALL     	R5 2 2 ; R5 := R5(R6)
	28	[1868]	TEST     	R5 1 ; if R5 then PC := 44
	29	[1868]	JMP      	44 ; PC := 44
	30	[1869]	GETGLOBAL	R5 K2 ; R5 := _T
	31	[1869]	LOADK    	R6 K3 ; R6 := "InfoPopup_Data"
	32	[1869]	MOVE     	R7 R1 ; R7 := R1
	33	[1869]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	34	[1869]	SETTABLE 	R5 R6 R0 ; R5[R6] := R0
	35	[1870]	SELF     	R5 R4 K9 ; R6 := R4; R5 := R4[0xe4162eed]
	36	[1870]	LOADK    	R7 K10 ; R7 := "OverrideItemInfoData"
	37	[1870]	MOVE     	R8 R1 ; R8 := R1
	38	[1870]	LOADK    	R9 K11 ; R9 := ","
	39	[1870]	MOVE     	R10 R2 ; R10 := R2
	40	[1870]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	41	[1870]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	42	[1871]	OP_LOADBOOL	R5 1 0 ; R5 := true
	43	[1871]	RETURN   	R5 2 ; return R5 
	44	[1876]	OP_LOADBOOL	R5 0 0 ; R5 := false
	45	[1876]	RETURN   	R5 2 ; return R5 
	46	[1877]	RETURN   	R0 1 ; return 

function #47 <?:1879,1924> (138 instructions, 552 bytes at 00000160FC10A430)
0 params, 4 slots, 3 upvalues, 0 locals, 28 constants, 0 functions
	1	[1880]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[1880]	SETTABLE 	R0 K1 K2 ; R0["TopMenuOpen"] := false
	3	[1882]	GETGLOBAL	R0 K3 ; R0 := 0x0bad3ab5
	4	[1883]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	5	[1883]	MOVE     	R2 R0 ; R2 := R0
	6	[1883]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[1883]	TEST     	R1 1 ; if R1 then PC := 19
	8	[1883]	JMP      	19 ; PC := 19
	9	[1883]	GETGLOBAL	R1 K5 ; R1 := 0x9ba7909f
	10	[1883]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x5374b92e]
	11	[1883]	MOVE     	R3 R0 ; R3 := R0
	12	[1883]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	13	[1883]	TEST     	R1 1 ; if R1 then PC := 19
	14	[1883]	JMP      	19 ; PC := 19
	15	[1884]	GETGLOBAL	R1 K7 ; R1 := 0xae91e43b
	16	[1884]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x1fd6abd0]
	17	[1884]	MOVE     	R3 R0 ; R3 := R0
	18	[1884]	CALL     	R1 3 1 ; R1(R2,R3)
	19	[1887]	GETGLOBAL	R1 K5 ; R1 := 0x9ba7909f
	20	[1887]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xbcfb64ab]
	21	[1887]	GETGLOBAL	R3 K11 ; R3 := 0x997568cf
	22	[1887]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	23	[1887]	SETGLOBALHASH	R1 K9 ; mToolTip := R1
	24	[1888]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	25	[1888]	GETGLOBAL	R2 K9 ; R2 := mToolTip
	26	[1888]	CALL     	R1 2 2 ; R1 := R1(R2)
	27	[1888]	TEST     	R1 0 ; if not R1 then PC := 39
	28	[1888]	JMP      	39 ; PC := 39
	29	[1888]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	30	[1888]	GETGLOBAL	R2 K11 ; R2 := 0x997568cf
	31	[1888]	CALL     	R1 2 2 ; R1 := R1(R2)
	32	[1888]	TEST     	R1 1 ; if R1 then PC := 39
	33	[1888]	JMP      	39 ; PC := 39
	34	[1889]	GETGLOBAL	R1 K7 ; R1 := 0xae91e43b
	35	[1889]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x1fd6abd0]
	36	[1889]	GETGLOBAL	R3 K11 ; R3 := 0x997568cf
	37	[1889]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	38	[1889]	SETGLOBALHASH	R1 K9 ; mToolTip := R1
	39	[1892]	GETGLOBAL	R1 K5 ; R1 := 0x9ba7909f
	40	[1892]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xbcfb64ab]
	41	[1892]	GETGLOBAL	R3 K13 ; R3 := 0x354c41af
	42	[1892]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	43	[1892]	SETGLOBALHASH	R1 K12 ; mInfoPopup := R1
	44	[1893]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	45	[1893]	GETGLOBAL	R2 K12 ; R2 := mInfoPopup
	46	[1893]	CALL     	R1 2 2 ; R1 := R1(R2)
	47	[1893]	TEST     	R1 0 ; if not R1 then PC := 59
	48	[1893]	JMP      	59 ; PC := 59
	49	[1893]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	50	[1893]	GETGLOBAL	R2 K13 ; R2 := 0x354c41af
	51	[1893]	CALL     	R1 2 2 ; R1 := R1(R2)
	52	[1893]	TEST     	R1 1 ; if R1 then PC := 59
	53	[1893]	JMP      	59 ; PC := 59
	54	[1894]	GETGLOBAL	R1 K7 ; R1 := 0xae91e43b
	55	[1894]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x1fd6abd0]
	56	[1894]	GETGLOBAL	R3 K13 ; R3 := 0x354c41af
	57	[1894]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	58	[1894]	SETGLOBALHASH	R1 K12 ; mInfoPopup := R1
	59	[1897]	GETGLOBAL	R1 K5 ; R1 := 0x9ba7909f
	60	[1897]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xbcfb64ab]
	61	[1897]	GETGLOBAL	R3 K15 ; R3 := 0xfc29c5ee
	62	[1897]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	63	[1897]	SETGLOBALHASH	R1 K14 ; mContextMenu := R1
	64	[1898]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	65	[1898]	GETGLOBAL	R2 K14 ; R2 := mContextMenu
	66	[1898]	CALL     	R1 2 2 ; R1 := R1(R2)
	67	[1898]	TEST     	R1 0 ; if not R1 then PC := 79
	68	[1898]	JMP      	79 ; PC := 79
	69	[1898]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	70	[1898]	GETGLOBAL	R2 K15 ; R2 := 0xfc29c5ee
	71	[1898]	CALL     	R1 2 2 ; R1 := R1(R2)
	72	[1898]	TEST     	R1 1 ; if R1 then PC := 79
	73	[1898]	JMP      	79 ; PC := 79
	74	[1899]	GETGLOBAL	R1 K7 ; R1 := 0xae91e43b
	75	[1899]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x1fd6abd0]
	76	[1899]	GETGLOBAL	R3 K15 ; R3 := 0xfc29c5ee
	77	[1899]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	78	[1899]	SETGLOBALHASH	R1 K14 ; mContextMenu := R1
	79	[1902]	GETGLOBAL	R1 K16 ; R1 := mCurrentMode
	80	[1902]	GETUPVAL 	R2 U0 ; R2 := U0
	81	[1902]	GETTABLE 	R2 R2 K17 ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
	82	[1902]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 111
	83	[1902]	JMP      	111 ; PC := 111
	84	[1904]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	85	[1904]	GETGLOBAL	R2 K18 ; R2 := 0x2c15a601
	86	[1904]	CALL     	R1 2 2 ; R1 := R1(R2)
	87	[1904]	TEST     	R1 1 ; if R1 then PC := 99
	88	[1904]	JMP      	99 ; PC := 99
	89	[1904]	GETGLOBAL	R1 K5 ; R1 := 0x9ba7909f
	90	[1904]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x5374b92e]
	91	[1904]	GETGLOBAL	R3 K18 ; R3 := 0x2c15a601
	92	[1904]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	93	[1904]	TEST     	R1 1 ; if R1 then PC := 99
	94	[1904]	JMP      	99 ; PC := 99
	95	[1905]	GETGLOBAL	R1 K7 ; R1 := 0xae91e43b
	96	[1905]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x1fd6abd0]
	97	[1905]	GETGLOBAL	R3 K18 ; R3 := 0x2c15a601
	98	[1905]	CALL     	R1 3 1 ; R1(R2,R3)
	99	[1908]	GETGLOBAL	R1 K19 ; R1 := 0xbe190284
	100	[1908]	SELF     	R1 R1 K20 ; R2 := R1; R1 := R1[0x23ddc82a]
	101	[1908]	CALL     	R1 2 2 ; R1 := R1(R2)
	102	[1908]	TEST     	R1 1 ; if R1 then PC := 111
	103	[1908]	JMP      	111 ; PC := 111
	104	[1909]	LOADK    	R1 K22 ; R1 := "Default"
	105	[1909]	SETGLOBALHASH	R1 K21 ; queuedMovie := R1
	106	[1910]	GETUPVAL 	R1 U1 ; R1 := U1
	107	[1910]	GETGLOBAL	R2 K21 ; R2 := queuedMovie
	108	[1910]	CALL     	R1 2 1 ; R1(R2)
	109	[1912]	GETUPVAL 	R1 U2 ; R1 := U2
	110	[1912]	CALL     	R1 1 1 ; R1()
	111	[1916]	GETGLOBAL	R1 K23 ; R1 := 0x34291f5c
	112	[1916]	GETTABLE 	R1 R1 K24 ; R1 := R1[0x056bfe8b]
	113	[1916]	CALL     	R1 1 2 ; R1 := R1()
	114	[1916]	TEST     	R1 1 ; if R1 then PC := 136
	115	[1916]	JMP      	136 ; PC := 136
	116	[1917]	GETGLOBAL	R1 K5 ; R1 := 0x9ba7909f
	117	[1917]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xbcfb64ab]
	118	[1917]	GETGLOBAL	R3 K26 ; R3 := 0x16a51607
	119	[1917]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	120	[1917]	SETGLOBALHASH	R1 K25 ; mIMEOverlay := R1
	121	[1918]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	122	[1918]	GETGLOBAL	R2 K25 ; R2 := mIMEOverlay
	123	[1918]	CALL     	R1 2 2 ; R1 := R1(R2)
	124	[1918]	TEST     	R1 0 ; if not R1 then PC := 136
	125	[1918]	JMP      	136 ; PC := 136
	126	[1918]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	127	[1918]	GETGLOBAL	R2 K26 ; R2 := 0x16a51607
	128	[1918]	CALL     	R1 2 2 ; R1 := R1(R2)
	129	[1918]	TEST     	R1 1 ; if R1 then PC := 136
	130	[1918]	JMP      	136 ; PC := 136
	131	[1919]	GETGLOBAL	R1 K7 ; R1 := 0xae91e43b
	132	[1919]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x1fd6abd0]
	133	[1919]	GETGLOBAL	R3 K26 ; R3 := 0x16a51607
	134	[1919]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	135	[1919]	SETGLOBALHASH	R1 K25 ; mIMEOverlay := R1
	136	[1923]	OP_LOADBOOL	R1 0 0 ; R1 := false
	137	[1923]	SETGLOBALHASH	R1 K27 ; mAdditionalScreenCreated := R1
	138	[1924]	RETURN   	R0 1 ; return 

function #48 <?:1926,1952> (97 instructions, 388 bytes at 00000160FC10AB10)
0 params, 6 slots, 1 upvalue, 0 locals, 23 constants, 0 functions
	1	[1927]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1927]	GETGLOBAL	R1 K1 ; R1 := 0x22efbc9d
	3	[1927]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1927]	TEST     	R0 1 ; if R0 then PC := 26
	5	[1927]	JMP      	26 ; PC := 26
	6	[1927]	GETGLOBAL	R0 K2 ; R0 := 0x9ba7909f
	7	[1927]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x5374b92e]
	8	[1927]	GETGLOBAL	R2 K1 ; R2 := 0x22efbc9d
	9	[1927]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[1927]	TEST     	R0 1 ; if R0 then PC := 26
	11	[1927]	JMP      	26 ; PC := 26
	12	[1927]	GETGLOBAL	R0 K4 ; R0 := 0x0032441c
	13	[1927]	GETTABLE 	R0 R0 K5 ; R0 := R0["StalkerMode"]
	14	[1927]	TEST     	R0 1 ; if R0 then PC := 26
	15	[1927]	JMP      	26 ; PC := 26
	16	[1927]	GETGLOBAL	R0 K4 ; R0 := 0x0032441c
	17	[1927]	GETTABLE 	R0 R0 K6 ; R0 := R0["LoadingTutorial"]
	18	[1927]	TEST     	R0 1 ; if R0 then PC := 26
	19	[1927]	JMP      	26 ; PC := 26
	20	[1928]	GETGLOBAL	R0 K7 ; R0 := _T
	21	[1928]	GETGLOBAL	R1 K9 ; R1 := 0xae91e43b
	22	[1928]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x1fd6abd0]
	23	[1928]	GETGLOBAL	R3 K1 ; R3 := 0x22efbc9d
	24	[1928]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	25	[1928]	SETTABLE 	R0 K8 R1 ; R0["AcceptInvitePanel"] := R1
	26	[1931]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	27	[1931]	GETGLOBAL	R1 K11 ; R1 := 0x45c63724
	28	[1931]	CALL     	R0 2 2 ; R0 := R0(R1)
	29	[1931]	TEST     	R0 1 ; if R0 then PC := 41
	30	[1931]	JMP      	41 ; PC := 41
	31	[1931]	GETGLOBAL	R0 K2 ; R0 := 0x9ba7909f
	32	[1931]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x5374b92e]
	33	[1931]	GETGLOBAL	R2 K11 ; R2 := 0x45c63724
	34	[1931]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	35	[1931]	TEST     	R0 1 ; if R0 then PC := 41
	36	[1931]	JMP      	41 ; PC := 41
	37	[1932]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	38	[1932]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x1fd6abd0]
	39	[1932]	GETGLOBAL	R2 K11 ; R2 := 0x45c63724
	40	[1932]	CALL     	R0 3 1 ; R0(R1,R2)
	41	[1935]	GETGLOBAL	R0 K12 ; R0 := 0xdbf8fb8c
	42	[1936]	GETGLOBAL	R1 K2 ; R1 := 0x9ba7909f
	43	[1936]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0xbcfb64ab]
	44	[1936]	MOVE     	R3 R0 ; R3 := R0
	45	[1936]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	46	[1937]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	47	[1937]	MOVE     	R3 R1 ; R3 := R1
	48	[1937]	CALL     	R2 2 2 ; R2 := R2(R3)
	49	[1937]	TEST     	R2 0 ; if not R2 then PC := 57
	50	[1937]	JMP      	57 ; PC := 57
	51	[1938]	GETGLOBAL	R2 K7 ; R2 := _T
	52	[1938]	GETGLOBAL	R3 K2 ; R3 := 0x9ba7909f
	53	[1938]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0x6dd7aa66]
	54	[1938]	MOVE     	R5 R0 ; R5 := R0
	55	[1938]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	56	[1938]	SETTABLE 	R2 K14 R3 ; R2["SquadOverlay"] := R3
	57	[1941]	GETUPVAL 	R2 U0 ; R2 := U0
	58	[1941]	CALL     	R2 1 1 ; R2()
	59	[1944]	GETGLOBAL	R2 K16 ; R2 := 0x34291f5c
	60	[1944]	GETTABLE 	R2 R2 K17 ; R2 := R2[0xe6b41adb]
	61	[1944]	CALL     	R2 1 2 ; R2 := R2()
	62	[1944]	TEST     	R2 0 ; if not R2 then PC := 95
	63	[1944]	JMP      	95 ; PC := 95
	64	[1944]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	65	[1944]	GETGLOBAL	R3 K18 ; R3 := 0x3ace7bd2
	66	[1944]	CALL     	R2 2 2 ; R2 := R2(R3)
	67	[1944]	TEST     	R2 1 ; if R2 then PC := 95
	68	[1944]	JMP      	95 ; PC := 95
	69	[1944]	GETGLOBAL	R2 K2 ; R2 := 0x9ba7909f
	70	[1944]	SELF     	R2 R2 K19 ; R3 := R2; R2 := R2[0xbf9494fc]
	71	[1944]	LOADK    	R4 K20 ; R4 := "Flash.ShowTouchControls"
	72	[1944]	OP_LOADBOOL	R5 1 0 ; R5 := true
	73	[1944]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	74	[1944]	TEST     	R2 0 ; if not R2 then PC := 95
	75	[1944]	JMP      	95 ; PC := 95
	76	[1945]	GETGLOBAL	R2 K2 ; R2 := 0x9ba7909f
	77	[1945]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0xbcfb64ab]
	78	[1945]	GETGLOBAL	R4 K18 ; R4 := 0x3ace7bd2
	79	[1945]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	80	[1946]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	81	[1946]	MOVE     	R4 R2 ; R4 := R2
	82	[1946]	CALL     	R3 2 2 ; R3 := R3(R4)
	83	[1946]	TEST     	R3 0 ; if not R3 then PC := 95
	84	[1946]	JMP      	95 ; PC := 95
	85	[1946]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	86	[1946]	GETGLOBAL	R4 K18 ; R4 := 0x3ace7bd2
	87	[1946]	CALL     	R3 2 2 ; R3 := R3(R4)
	88	[1946]	TEST     	R3 1 ; if R3 then PC := 95
	89	[1946]	JMP      	95 ; PC := 95
	90	[1947]	GETGLOBAL	R3 K2 ; R3 := 0x9ba7909f
	91	[1947]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xcfba257f]
	92	[1947]	GETGLOBAL	R5 K18 ; R5 := 0x3ace7bd2
	93	[1947]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	94	[1947]	MOVE     	R2 R3 ; R2 := R3
	95	[1951]	OP_LOADBOOL	R3 1 0 ; R3 := true
	96	[1951]	SETGLOBALHASH	R3 K22 ; mAdditionalScreenCreated := R3
	97	[1952]	RETURN   	R0 1 ; return 

function #49 <?:1954,1956> (6 instructions, 24 bytes at 00000160FC10B0A0)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[1955]	EQ       	1 R0 K0 ; if R0 == "Lobby" then PC := 4
	2	[1955]	JMP      	4 ; PC := 4
	3	[1955]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 4
	4	[1955]	OP_LOADBOOL	R1 1 0 ; R1 := true
	5	[1955]	RETURN   	R1 2 ; return R1 
	6	[1956]	RETURN   	R0 1 ; return 

function #50 <?:1958,1979> (65 instructions, 260 bytes at 00000160FC10B1E0)
2 params, 9 slots, 2 upvalues, 0 locals, 18 constants, 0 functions
	1	[1959]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1959]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xa9882367]
	3	[1959]	MOVE     	R3 R0 ; R3 := R0
	4	[1959]	GETUPVAL 	R4 U0 ; R4 := U0
	5	[1959]	GETTABLE 	R4 R4 K1 ; R4 := R4[0x06d055f9]
	6	[1959]	GETUPVAL 	R5 U1 ; R5 := U1
	7	[1959]	GETTABLE 	R5 R5 K2 ; R5 := R5[0xcf1fcba4]
	8	[1959]	CALL     	R5 1 2 ; R5 := R5()
	9	[1959]	GETGLOBAL	R6 K3 ; R6 := 0x1211d00f
	10	[1959]	LOADNIL  	R7 R7 ; R7 := nil
	11	[1959]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	12	[1959]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	13	[1960]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	14	[1960]	MOVE     	R4 R2 ; R4 := R2
	15	[1960]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[1960]	TEST     	R3 1 ; if R3 then PC := 65
	17	[1960]	JMP      	65 ; PC := 65
	18	[1961]	GETGLOBAL	R3 K5 ; R3 := 0x89326c93
	19	[1961]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xded7d5cd]
	20	[1961]	CALL     	R3 2 2 ; R3 := R3(R4)
	21	[1963]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	22	[1963]	MOVE     	R5 R3 ; R5 := R3
	23	[1963]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[1963]	TEST     	R4 1 ; if R4 then PC := 29
	25	[1963]	JMP      	29 ; PC := 29
	26	[1963]	LEN      	R4 R3 ; R4 := # R3
	27	[1963]	EQ       	0 R4 K7 ; if R4 ~= 0.000000 then PC := 30
	28	[1963]	JMP      	30 ; PC := 30
	29	[1964]	RETURN   	R0 1 ; return 
	30	[1967]	LOADK    	R4 := 1.000000
	31	[1968]	EQ       	1 R1 K8 ; if R1 == nil then PC := 37
	32	[1968]	JMP      	37 ; PC := 37
	33	[1969]	GETGLOBAL	R5 K9 ; R5 := 0x03f57322
	34	[1969]	MOVE     	R6 R1 ; R6 := R1
	35	[1969]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[1969]	MOVE     	R4 R5 ; R4 := R5
	37	[1972]	GETTABLE 	R5 R3 K10 ; R5 := R3[1.000000]
	38	[1973]	GETGLOBAL	R6 K4 ; R6 := 0x7b998233
	39	[1973]	MOVE     	R7 R5 ; R7 := R5
	40	[1973]	CALL     	R6 2 2 ; R6 := R6(R7)
	41	[1973]	TEST     	R6 1 ; if R6 then PC := 60
	42	[1973]	JMP      	60 ; PC := 60
	43	[1973]	GETGLOBAL	R6 K4 ; R6 := 0x7b998233
	44	[1973]	SELF     	R7 R5 K11 ; R8 := R5; R7 := R5[0x0b4bcfb6]
	45	[1973]	CALL     	R7 2 0 ; R7,... := R7(R8)
	46	[1973]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	47	[1973]	TEST     	R6 1 ; if R6 then PC := 60
	48	[1973]	JMP      	60 ; PC := 60
	49	[1973]	SELF     	R6 R5 K11 ; R7 := R5; R6 := R5[0x0b4bcfb6]
	50	[1973]	CALL     	R6 2 2 ; R6 := R6(R7)
	51	[1973]	SELF     	R6 R6 K12 ; R7 := R6; R6 := R6[0xcbeafe74]
	52	[1973]	CALL     	R6 2 2 ; R6 := R6(R7)
	53	[1973]	TEST     	R6 1 ; if R6 then PC := 60
	54	[1973]	JMP      	60 ; PC := 60
	55	[1974]	SELF     	R6 R5 K11 ; R7 := R5; R6 := R5[0x0b4bcfb6]
	56	[1974]	CALL     	R6 2 2 ; R6 := R6(R7)
	57	[1974]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0x68f07b6a]
	58	[1974]	MOVE     	R8 R4 ; R8 := R4
	59	[1974]	CALL     	R6 3 1 ; R6(R7,R8)
	60	[1976]	SELF     	R6 R2 K14 ; R7 := R2; R6 := R2[0x8eb2112d]
	61	[1976]	LOADK    	R8 K15 ; R8 := "Activate"
	62	[1976]	CALL     	R6 3 1 ; R6(R7,R8)
	63	[1977]	GETGLOBAL	R6 K16 ; R6 := _T
	64	[1977]	SETTABLE 	R6 K17 R0 ; R6["gActiveCameraSpot"] := R0
	65	[1979]	RETURN   	R0 1 ; return 

function #51 <?:1981,1983> (5 instructions, 20 bytes at 00000160FC10B5E0)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1982]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[1982]	MOVE     	R3 R0 ; R3 := R0
	3	[1982]	MOVE     	R4 R1 ; R4 := R1
	4	[1982]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[1983]	RETURN   	R0 1 ; return 

function #52 <?:1985,2012> (86 instructions, 344 bytes at 00000160FC10B6D0)
1 param, 8 slots, 0 upvalues, 0 locals, 24 constants, 0 functions
	1	[1986]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1986]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	3	[1986]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1986]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[1986]	JMP      	7 ; PC := 7
	6	[1987]	RETURN   	R0 1 ; return 
	7	[1990]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	8	[1990]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xded7d5cd]
	9	[1990]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[1992]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	11	[1992]	MOVE     	R3 R1 ; R3 := R1
	12	[1992]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[1992]	TEST     	R2 1 ; if R2 then PC := 18
	14	[1992]	JMP      	18 ; PC := 18
	15	[1992]	LEN      	R2 R1 ; R2 := # R1
	16	[1992]	EQ       	0 R2 K3 ; if R2 ~= 0.000000 then PC := 22
	17	[1992]	JMP      	22 ; PC := 22
	18	[1993]	GETGLOBAL	R2 K4 ; R2 := 0x3d106989
	19	[1993]	LOADK    	R3 K5 ; R3 := "_ClearCurrentCameraSpot - no local player"
	20	[1993]	CALL     	R2 2 1 ; R2(R3)
	21	[1994]	RETURN   	R0 1 ; return 
	22	[1997]	EQ       	0 R0 K6 ; if R0 ~= nil then PC := 25
	23	[1997]	JMP      	25 ; PC := 25
	24	[1998]	LOADK    	R0 K7 ; R0 := 0.010000
	25	[2001]	GETTABLE 	R2 R1 K8 ; R2 := R1[1.000000]
	26	[2002]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	27	[2002]	MOVE     	R4 R2 ; R4 := R2
	28	[2002]	CALL     	R3 2 2 ; R3 := R3(R4)
	29	[2002]	TEST     	R3 1 ; if R3 then PC := 56
	30	[2002]	JMP      	56 ; PC := 56
	31	[2002]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	32	[2002]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0x0b4bcfb6]
	33	[2002]	CALL     	R4 2 0 ; R4,... := R4(R5)
	34	[2002]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	35	[2002]	TEST     	R3 1 ; if R3 then PC := 56
	36	[2002]	JMP      	56 ; PC := 56
	37	[2002]	SELF     	R3 R2 K9 ; R4 := R2; R3 := R2[0x0b4bcfb6]
	38	[2002]	CALL     	R3 2 2 ; R3 := R3(R4)
	39	[2002]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0xcbeafe74]
	40	[2002]	CALL     	R3 2 2 ; R3 := R3(R4)
	41	[2002]	TEST     	R3 1 ; if R3 then PC := 56
	42	[2002]	JMP      	56 ; PC := 56
	43	[2003]	SELF     	R3 R2 K9 ; R4 := R2; R3 := R2[0x0b4bcfb6]
	44	[2003]	CALL     	R3 2 2 ; R3 := R3(R4)
	45	[2003]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x68f07b6a]
	46	[2003]	LOADK    	R5 := 1.000000
	47	[2003]	CALL     	R3 3 1 ; R3(R4,R5)
	48	[2004]	SELF     	R3 R2 K9 ; R4 := R2; R3 := R2[0x0b4bcfb6]
	49	[2004]	CALL     	R3 2 2 ; R3 := R3(R4)
	50	[2004]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0x14c7f7dd]
	51	[2004]	LOADNIL  	R5 R5 ; R5 := nil
	52	[2004]	GETGLOBAL	R6 K13 ; R6 := 0x03f57322
	53	[2004]	MOVE     	R7 R0 ; R7 := R0
	54	[2004]	CALL     	R6 2 0 ; R6,... := R6(R7)
	55	[2004]	CALL     	R3 0 1 ; R3(R4,...)
	56	[2007]	GETGLOBAL	R3 K14 ; R3 := _T
	57	[2007]	GETTABLE 	R3 R3 K15 ; R3 := R3["gActiveCameraSpot"]
	58	[2007]	EQ       	1 R3 K16 ; if R3 == "LoginNoSuit" then PC := 80
	59	[2007]	JMP      	80 ; PC := 80
	60	[2007]	GETGLOBAL	R3 K14 ; R3 := _T
	61	[2007]	GETTABLE 	R3 R3 K15 ; R3 := R3["gActiveCameraSpot"]
	62	[2007]	EQ       	1 R3 K17 ; if R3 == "Login" then PC := 80
	63	[2007]	JMP      	80 ; PC := 80
	64	[2007]	GETGLOBAL	R3 K14 ; R3 := _T
	65	[2007]	GETTABLE 	R3 R3 K15 ; R3 := R3["gActiveCameraSpot"]
	66	[2007]	EQ       	1 R3 K18 ; if R3 == "OldLogin" then PC := 80
	67	[2007]	JMP      	80 ; PC := 80
	68	[2007]	GETGLOBAL	R3 K14 ; R3 := _T
	69	[2007]	GETTABLE 	R3 R3 K15 ; R3 := R3["gActiveCameraSpot"]
	70	[2007]	EQ       	1 R3 K19 ; if R3 == "Syndicate" then PC := 80
	71	[2007]	JMP      	80 ; PC := 80
	72	[2007]	GETGLOBAL	R3 K14 ; R3 := _T
	73	[2007]	GETTABLE 	R3 R3 K15 ; R3 := R3["gActiveCameraSpot"]
	74	[2007]	EQ       	1 R3 K20 ; if R3 == "LoginCamp" then PC := 80
	75	[2007]	JMP      	80 ; PC := 80
	76	[2007]	GETGLOBAL	R3 K14 ; R3 := _T
	77	[2007]	GETTABLE 	R3 R3 K15 ; R3 := R3["gActiveCameraSpot"]
	78	[2007]	EQ       	0 R3 K21 ; if R3 ~= "LoginCampPreview" then PC := 84
	79	[2007]	JMP      	84 ; PC := 84
	80	[2008]	GETGLOBAL	R3 K22 ; R3 := 0xbe190284
	81	[2008]	SELF     	R3 R3 K23 ; R4 := R3; R3 := R3[0xc02f2cb8]
	82	[2008]	OP_LOADBOOL	R5 0 0 ; R5 := false
	83	[2008]	CALL     	R3 3 1 ; R3(R4,R5)
	84	[2011]	GETGLOBAL	R3 K14 ; R3 := _T
	85	[2011]	SETTABLE 	R3 K15 K6 ; R3["gActiveCameraSpot"] := nil
	86	[2012]	RETURN   	R0 1 ; return 

function #53 <?:2014,2016> (4 instructions, 16 bytes at 00000160FC10BCB0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2015]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2015]	MOVE     	R2 R0 ; R2 := R0
	3	[2015]	CALL     	R1 2 1 ; R1(R2)
	4	[2016]	RETURN   	R0 1 ; return 

function #54 <?:2018,2024> (20 instructions, 80 bytes at 00000160FC10BD80)
4 params, 7 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[2019]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[2019]	SETTABLE 	R4 K0 K1 ; R4["Timer"] := 0.000000
	3	[2020]	GETUPVAL 	R4 U0 ; R4 := U0
	4	[2020]	GETGLOBAL	R5 K3 ; R5 := 0x03f57322
	5	[2020]	MOVE     	R6 R0 ; R6 := R0
	6	[2020]	CALL     	R5 2 2 ; R5 := R5(R6)
	7	[2020]	SETTABLE 	R4 K2 R5 ; R4["InTime"] := R5
	8	[2021]	GETUPVAL 	R4 U0 ; R4 := U0
	9	[2021]	GETGLOBAL	R5 K3 ; R5 := 0x03f57322
	10	[2021]	MOVE     	R6 R1 ; R6 := R1
	11	[2021]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[2021]	SETTABLE 	R4 K4 R5 ; R4["OutTime"] := R5
	13	[2022]	GETUPVAL 	R4 U0 ; R4 := U0
	14	[2022]	GETGLOBAL	R5 K3 ; R5 := 0x03f57322
	15	[2022]	MOVE     	R6 R2 ; R6 := R2
	16	[2022]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[2022]	SETTABLE 	R4 K5 R5 ; R4["FinalVal"] := R5
	18	[2023]	GETUPVAL 	R4 U0 ; R4 := U0
	19	[2023]	SETTABLE 	R4 K6 R3 ; R4["FullCallback"] := R3
	20	[2024]	RETURN   	R0 1 ; return 

function #55 <?:2026,2028> (6 instructions, 24 bytes at 00000160FC10BF50)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2027]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[2027]	MOVE     	R4 R0 ; R4 := R0
	3	[2027]	MOVE     	R5 R1 ; R5 := R1
	4	[2027]	MOVE     	R6 R2 ; R6 := R2
	5	[2027]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	6	[2028]	RETURN   	R0 1 ; return 

function #56 <?:2030,2144> (270 instructions, 1080 bytes at 00000160FC10C040)
1 param, 27 slots, 1 upvalue, 0 locals, 64 constants, 0 functions
	1	[2031]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[2031]	LOADK    	R2 K1 ; R2 := "Background.lua - _DoLogoff()"
	3	[2031]	CALL     	R1 2 1 ; R1(R2)
	4	[2033]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	5	[2033]	GETGLOBAL	R2 K3 ; R2 := _T
	6	[2033]	GETTABLE 	R2 R2 K4 ; R2 := R2["BackgroundMovie"]
	7	[2033]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[2033]	TEST     	R1 0 ; if not R1 then PC := 16
	9	[2033]	JMP      	16 ; PC := 16
	10	[2034]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	11	[2034]	LOADK    	R2 K5 ; R2 := "Queued"
	12	[2034]	CALL     	R1 2 1 ; R1(R2)
	13	[2035]	OP_LOADBOOL	R1 1 0 ; R1 := true
	14	[2035]	SETGLOBALHASH	R1 K6 ; mQueuedLogoff := R1
	15	[2036]	RETURN   	R0 1 ; return 
	16	[2038]	GETGLOBAL	R1 K7 ; R1 := 0x34291f5c
	17	[2038]	GETTABLE 	R1 R1 K8 ; R1 := R1[0x056bfe8b]
	18	[2038]	CALL     	R1 1 2 ; R1 := R1()
	19	[2038]	TEST     	R1 1 ; if R1 then PC := 25
	20	[2038]	JMP      	25 ; PC := 25
	21	[2039]	GETGLOBAL	R1 K9 ; R1 := 0x76ea806b
	22	[2039]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x524772b5]
	23	[2039]	LOADK    	R3 := 0.000000
	24	[2039]	CALL     	R1 3 1 ; R1(R2,R3)
	25	[2042]	GETGLOBAL	R1 K3 ; R1 := _T
	26	[2042]	SETTABLE 	R1 K11 K12 ; R1["PreviousLoggedInAccountId"] := nil
	27	[2043]	GETGLOBAL	R1 K9 ; R1 := 0x76ea806b
	28	[2043]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x3f3ae64c]
	29	[2043]	LOADK    	R3 := 0.000000
	30	[2043]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	31	[2044]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	32	[2044]	MOVE     	R3 R1 ; R3 := R1
	33	[2044]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[2044]	TEST     	R2 1 ; if R2 then PC := 83
	35	[2044]	JMP      	83 ; PC := 83
	36	[2045]	GETGLOBAL	R2 K3 ; R2 := _T
	37	[2045]	SELF     	R3 R1 K14 ; R4 := R1; R3 := R1[0xcac617c9]
	38	[2045]	CALL     	R3 2 2 ; R3 := R3(R4)
	39	[2045]	SETTABLE 	R2 K11 R3 ; R2["PreviousLoggedInAccountId"] := R3
	40	[2047]	SELF     	R2 R1 K15 ; R3 := R1; R2 := R1[0x80563238]
	41	[2047]	CALL     	R2 2 2 ; R2 := R2(R3)
	42	[2048]	SELF     	R3 R1 K16 ; R4 := R1; R3 := R1[0x40e9c32b]
	43	[2048]	CALL     	R3 2 2 ; R3 := R3(R4)
	44	[2049]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	45	[2049]	MOVE     	R5 R2 ; R5 := R2
	46	[2049]	CALL     	R4 2 2 ; R4 := R4(R5)
	47	[2049]	TEST     	R4 1 ; if R4 then PC := 67
	48	[2049]	JMP      	67 ; PC := 67
	49	[2052]	GETGLOBAL	R4 K17 ; R4 := 0x0032441c
	50	[2052]	SELF     	R5 R3 K19 ; R6 := R3; R5 := R3[0xd25ad6f2]
	51	[2052]	CALL     	R5 2 2 ; R5 := R5(R6)
	52	[2052]	SETTABLE 	R4 K18 R5 ; R4["PreviousLoggedInStreamerMode"] := R5
	53	[2054]	TEST     	R0 1 ; if R0 then PC := 67
	54	[2054]	JMP      	67 ; PC := 67
	55	[2055]	SELF     	R4 R2 K20 ; R5 := R2; R4 := R2[0x8e4b0c74]
	56	[2055]	CALL     	R4 2 2 ; R4 := R4(R5)
	57	[2056]	EQ       	1 R4 K12 ; if R4 == nil then PC := 61
	58	[2056]	JMP      	61 ; PC := 61
	59	[2057]	SELF     	R5 R2 K21 ; R6 := R2; R5 := R2[0x68838443]
	60	[2057]	CALL     	R5 2 1 ; R5(R6)
	61	[2059]	GETGLOBAL	R5 K22 ; R5 := 0xa94df70b
	62	[2059]	SELF     	R5 R5 K23 ; R6 := R5; R5 := R5[0x2b0141b8]
	63	[2059]	GETGLOBAL	R7 K24 ; R7 := 0x7ed0a956
	64	[2059]	LOADK    	R8 K25 ; R8 := "/Lotus/Levels/Proc/PlayerShip"
	65	[2059]	CALL     	R7 2 0 ; R7,... := R7(R8)
	66	[2059]	CALL     	R5 0 1 ; R5(R6,...)
	67	[2063]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	68	[2063]	MOVE     	R6 R2 ; R6 := R2
	69	[2063]	CALL     	R5 2 2 ; R5 := R5(R6)
	70	[2063]	TEST     	R5 1 ; if R5 then PC := 83
	71	[2063]	JMP      	83 ; PC := 83
	72	[2064]	GETUPVAL 	R5 U0 ; R5 := U0
	73	[2064]	GETTABLE 	R5 R5 K26 ; R5 := R5["mWorldStateCallbackRegistered"]
	74	[2064]	TEST     	R5 0 ; if not R5 then PC := 81
	75	[2064]	JMP      	81 ; PC := 81
	76	[2065]	SELF     	R5 R2 K27 ; R6 := R2; R5 := R2[0xa552fd85]
	77	[2065]	LOADK    	R7 K28 ; R7 := "OnSyncWorldState"
	78	[2065]	GETUPVAL 	R8 U0 ; R8 := U0
	79	[2065]	GETTABLE 	R8 R8 K29 ; R8 := R8["WORLD_STATE_CALLBACK_IDENTIFIER"]
	80	[2065]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	81	[2068]	SELF     	R5 R2 K30 ; R6 := R2; R5 := R2[0x75fa6bbb]
	82	[2068]	CALL     	R5 2 1 ; R5(R6)
	83	[2071]	GETUPVAL 	R5 U0 ; R5 := U0
	84	[2071]	SETTABLE 	R5 K26 K31 ; R5["mWorldStateCallbackRegistered"] := false
	85	[2073]	GETGLOBAL	R5 K3 ; R5 := _T
	86	[2073]	GETTABLE 	R5 R5 K32 ; R5 := R5[0x8e6a7b4e]
	87	[2073]	LOADK    	R6 K33 ; R6 := "MainMenu"
	88	[2073]	CALL     	R5 2 2 ; R5 := R5(R6)
	89	[2074]	TEST     	R5 1 ; if R5 then PC := 134
	90	[2074]	JMP      	134 ; PC := 134
	91	[2075]	GETGLOBAL	R6 K0 ; R6 := 0x3d106989
	92	[2075]	LOADK    	R7 K34 ; R7 := "Main menu not open"
	93	[2075]	CALL     	R6 2 1 ; R6(R7)
	94	[2076]	GETGLOBAL	R6 K35 ; R6 := screenStack
	95	[2076]	LEN      	R6 R6 ; R6 := # R6
	96	[2076]	LOADK    	R7 := 1.000000
	97	[2076]	LOADK    	R8 := -1.000000
	98	[2076]	FORPREP  	R6 123 ; R6 -= R8; PC := 123
	99	[2077]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	100	[2077]	GETGLOBAL	R11 K36 ; R11 := movies
	101	[2077]	GETGLOBAL	R12 K35 ; R12 := screenStack
	102	[2077]	GETTABLE 	R12 R12 R9 ; R12 := R12[R9]
	103	[2077]	GETTABLE 	R11 R11 R12 ; R11 := R11[R12]
	104	[2077]	CALL     	R10 2 2 ; R10 := R10(R11)
	105	[2077]	TEST     	R10 1 ; if R10 then PC := 123
	106	[2077]	JMP      	123 ; PC := 123
	107	[2078]	GETGLOBAL	R10 K37 ; R10 := 0x9ba7909f
	108	[2078]	SELF     	R10 R10 K38 ; R11 := R10; R10 := R10[0xbcfb64ab]
	109	[2078]	GETGLOBAL	R12 K36 ; R12 := movies
	110	[2078]	GETGLOBAL	R13 K35 ; R13 := screenStack
	111	[2078]	GETTABLE 	R13 R13 R9 ; R13 := R13[R9]
	112	[2078]	GETTABLE 	R12 R12 R13 ; R12 := R12[R13]
	113	[2078]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	114	[2079]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	115	[2079]	MOVE     	R12 R10 ; R12 := R10
	116	[2079]	CALL     	R11 2 2 ; R11 := R11(R12)
	117	[2079]	TEST     	R11 1 ; if R11 then PC := 123
	118	[2079]	JMP      	123 ; PC := 123
	119	[2080]	SELF     	R11 R10 K39 ; R12 := R10; R11 := R10[0xe4162eed]
	120	[2080]	LOADK    	R13 K40 ; R13 := "TransitionOut"
	121	[2080]	LOADK    	R14 K41 ; R14 := ""
	122	[2080]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	123	[2076]	FORLOOP  	R6 99 ; R6 += R8; if R6 <= R7 then begin PC := 99; R9 := R6 end
	124	[2084]	GETGLOBAL	R11 K9 ; R11 := 0x76ea806b
	125	[2084]	SELF     	R11 R11 K42 ; R12 := R11; R11 := R11[0x63e78018]
	126	[2084]	CALL     	R11 2 1 ; R11(R12)
	127	[2085]	TEST     	R0 0 ; if not R0 then PC := 192
	128	[2085]	JMP      	192 ; PC := 192
	129	[2086]	GETGLOBAL	R11 K9 ; R11 := 0x76ea806b
	130	[2086]	SELF     	R11 R11 K43 ; R12 := R11; R11 := R11[0x44ef46af]
	131	[2086]	OP_LOADBOOL	R13 0 0 ; R13 := false
	132	[2086]	CALL     	R11 3 1 ; R11(R12,R13)
	133	[2087]	JMP      	192 ; PC := 192
	134	[2089]	GETGLOBAL	R11 K35 ; R11 := screenStack
	135	[2089]	LEN      	R11 R11 ; R11 := # R11
	136	[2089]	LOADK    	R12 := 1.000000
	137	[2089]	LOADK    	R13 := -1.000000
	138	[2089]	FORPREP  	R11 191 ; R11 -= R13; PC := 191
	139	[2090]	GETGLOBAL	R15 K37 ; R15 := 0x9ba7909f
	140	[2090]	SELF     	R15 R15 K38 ; R16 := R15; R15 := R15[0xbcfb64ab]
	141	[2090]	GETGLOBAL	R17 K36 ; R17 := movies
	142	[2090]	GETGLOBAL	R18 K35 ; R18 := screenStack
	143	[2090]	GETTABLE 	R18 R18 R14 ; R18 := R18[R14]
	144	[2090]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	145	[2090]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	146	[2091]	EQ       	1 R15 K12 ; if R15 == nil then PC := 191
	147	[2091]	JMP      	191 ; PC := 191
	148	[2092]	GETGLOBAL	R16 K35 ; R16 := screenStack
	149	[2092]	GETTABLE 	R16 R16 R14 ; R16 := R16[R14]
	150	[2092]	EQ       	1 R16 K44 ; if R16 == "Default" then PC := 156
	151	[2092]	JMP      	156 ; PC := 156
	152	[2092]	GETGLOBAL	R16 K35 ; R16 := screenStack
	153	[2092]	GETTABLE 	R16 R16 R14 ; R16 := R16[R14]
	154	[2092]	EQ       	0 R16 K33 ; if R16 ~= "MainMenu" then PC := 170
	155	[2092]	JMP      	170 ; PC := 170
	156	[2093]	GETGLOBAL	R16 K9 ; R16 := 0x76ea806b
	157	[2093]	SELF     	R16 R16 K42 ; R17 := R16; R16 := R16[0x63e78018]
	158	[2093]	CALL     	R16 2 1 ; R16(R17)
	159	[2094]	TEST     	R0 0 ; if not R0 then PC := 165
	160	[2094]	JMP      	165 ; PC := 165
	161	[2095]	GETGLOBAL	R16 K9 ; R16 := 0x76ea806b
	162	[2095]	SELF     	R16 R16 K43 ; R17 := R16; R16 := R16[0x44ef46af]
	163	[2095]	OP_LOADBOOL	R18 0 0 ; R18 := false
	164	[2095]	CALL     	R16 3 1 ; R16(R17,R18)
	165	[2097]	SELF     	R16 R15 K39 ; R17 := R15; R16 := R15[0xe4162eed]
	166	[2097]	LOADK    	R18 K45 ; R18 := "LogOut"
	167	[2097]	LOADK    	R19 K41 ; R19 := ""
	168	[2097]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	169	[2097]	JMP      	191 ; PC := 191
	170	[2098]	GETGLOBAL	R16 K7 ; R16 := 0x34291f5c
	171	[2098]	GETTABLE 	R16 R16 K46 ; R16 := R16[0xff935e74]
	172	[2098]	CALL     	R16 1 2 ; R16 := R16()
	173	[2098]	TEST     	R16 0 ; if not R16 then PC := 184
	174	[2098]	JMP      	184 ; PC := 184
	175	[2098]	GETGLOBAL	R16 K35 ; R16 := screenStack
	176	[2098]	GETTABLE 	R16 R16 R14 ; R16 := R16[R14]
	177	[2098]	EQ       	0 R16 K47 ; if R16 ~= "Menu" then PC := 184
	178	[2098]	JMP      	184 ; PC := 184
	179	[2099]	SELF     	R16 R15 K39 ; R17 := R15; R16 := R15[0xe4162eed]
	180	[2099]	LOADK    	R18 K48 ; R18 := "HideForBigPic"
	181	[2099]	LOADK    	R19 K41 ; R19 := ""
	182	[2099]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	183	[2099]	JMP      	191 ; PC := 191
	184	[2100]	GETGLOBAL	R16 K49 ; R16 := 0xae91e43b
	185	[2100]	EQ       	1 R15 R16 ; if R15 == R16 then PC := 191
	186	[2100]	JMP      	191 ; PC := 191
	187	[2101]	SELF     	R16 R15 K39 ; R17 := R15; R16 := R15[0xe4162eed]
	188	[2101]	LOADK    	R18 K40 ; R18 := "TransitionOut"
	189	[2101]	LOADK    	R19 K41 ; R19 := ""
	190	[2101]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	191	[2089]	FORLOOP  	R11 139 ; R11 += R13; if R11 <= R12 then begin PC := 139; R14 := R11 end
	192	[2107]	GETGLOBAL	R16 K37 ; R16 := 0x9ba7909f
	193	[2107]	SELF     	R16 R16 K38 ; R17 := R16; R16 := R16[0xbcfb64ab]
	194	[2107]	GETGLOBAL	R18 K50 ; R18 := 0x3255839e
	195	[2107]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	196	[2108]	GETGLOBAL	R17 K2 ; R17 := 0x7b998233
	197	[2108]	MOVE     	R18 R16 ; R18 := R16
	198	[2108]	CALL     	R17 2 2 ; R17 := R17(R18)
	199	[2108]	TEST     	R17 1 ; if R17 then PC := 203
	200	[2108]	JMP      	203 ; PC := 203
	201	[2109]	SELF     	R17 R16 K51 ; R18 := R16; R17 := R16[0x32302b4a]
	202	[2109]	CALL     	R17 2 1 ; R17(R18)
	203	[2112]	GETGLOBAL	R17 K2 ; R17 := 0x7b998233
	204	[2112]	GETGLOBAL	R18 K3 ; R18 := _T
	205	[2112]	GETTABLE 	R18 R18 K52 ; R18 := R18["SquadOverlay"]
	206	[2112]	CALL     	R17 2 2 ; R17 := R17(R18)
	207	[2112]	TEST     	R17 1 ; if R17 then PC := 213
	208	[2112]	JMP      	213 ; PC := 213
	209	[2113]	GETGLOBAL	R17 K3 ; R17 := _T
	210	[2113]	GETTABLE 	R17 R17 K52 ; R17 := R17["SquadOverlay"]
	211	[2113]	SELF     	R17 R17 K51 ; R18 := R17; R17 := R17[0x32302b4a]
	212	[2113]	CALL     	R17 2 1 ; R17(R18)
	213	[2116]	GETGLOBAL	R17 K2 ; R17 := 0x7b998233
	214	[2116]	GETGLOBAL	R18 K53 ; R18 := mChildMovie
	215	[2116]	CALL     	R17 2 2 ; R17 := R17(R18)
	216	[2116]	TEST     	R17 1 ; if R17 then PC := 221
	217	[2116]	JMP      	221 ; PC := 221
	218	[2117]	GETGLOBAL	R17 K53 ; R17 := mChildMovie
	219	[2117]	SELF     	R17 R17 K51 ; R18 := R17; R17 := R17[0x32302b4a]
	220	[2117]	CALL     	R17 2 1 ; R17(R18)
	221	[2120]	LOADNIL  	R17 R17 ; R17 := nil
	222	[2120]	SETGLOBALHASH	R17 K53 ; mChildMovie := R17
	223	[2121]	OP_LOADBOOL	R17 0 0 ; R17 := false
	224	[2121]	SETGLOBALHASH	R17 K6 ; mQueuedLogoff := R17
	225	[2123]	LOADK    	R17 K44 ; R17 := "Default"
	226	[2123]	SETGLOBALHASH	R17 K54 ; queuedMovie := R17
	227	[2124]	NEWTABLE 	R17 1 0 ; R17 := {}
	228	[2124]	LOADK    	R18 K44 ; R18 := "Default"
	229	[2124]	SETLIST  	R17 1 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
	230	[2124]	SETGLOBALHASH	R17 K35 ; screenStack := R17
	231	[2126]	NEWTABLE 	R17 1 0 ; R17 := {}
	232	[2126]	LOADK    	R18 K55 ; R18 := "loadoutInProgress"
	233	[2126]	SETLIST  	R17 1 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
	234	[2128]	GETGLOBAL	R18 K56 ; R18 := 0xc8802016
	235	[2128]	MOVE     	R19 R17 ; R19 := R17
	236	[2128]	CALL     	R18 2 4 ; R18,R19,R20 := R18(R19)
	237	[2128]	JMP      	240 ; PC := 240
	238	[2129]	GETGLOBAL	R23 K3 ; R23 := _T
	239	[2129]	SETTABLE 	R23 R22 K12 ; R23[R22] := nil
	240	[2128]	TFORLOOP 	R18 2 ; R21,R22 := R18(R19,R20); if R21 ~= nil then begin PC = 238; R20 := R21 end
	241	[2129]	JMP      	238 ; PC := 238
	242	[2132]	GETGLOBAL	R23 K7 ; R23 := 0x34291f5c
	243	[2132]	GETTABLE 	R23 R23 K57 ; R23 := R23[0x9ad21ae9]
	244	[2132]	CALL     	R23 1 2 ; R23 := R23()
	245	[2132]	TEST     	R23 0 ; if not R23 then PC := 257
	246	[2132]	JMP      	257 ; PC := 257
	247	[2133]	GETGLOBAL	R23 K58 ; R23 := 0x83f4e77c
	248	[2133]	SELF     	R23 R23 K59 ; R24 := R23; R23 := R23[0x7d63f19c]
	249	[2133]	CALL     	R23 2 2 ; R23 := R23(R24)
	250	[2134]	GETGLOBAL	R24 K2 ; R24 := 0x7b998233
	251	[2134]	MOVE     	R25 R23 ; R25 := R23
	252	[2134]	CALL     	R24 2 2 ; R24 := R24(R25)
	253	[2134]	TEST     	R24 1 ; if R24 then PC := 257
	254	[2134]	JMP      	257 ; PC := 257
	255	[2135]	SELF     	R24 R23 K60 ; R25 := R23; R24 := R23[0x68a5045a]
	256	[2135]	CALL     	R24 2 1 ; R24(R25)
	257	[2139]	GETGLOBAL	R24 K2 ; R24 := 0x7b998233
	258	[2139]	GETGLOBAL	R25 K61 ; R25 := 0xbe190284
	259	[2139]	CALL     	R24 2 2 ; R24 := R24(R25)
	260	[2139]	TEST     	R24 1 ; if R24 then PC := 266
	261	[2139]	JMP      	266 ; PC := 266
	262	[2140]	GETGLOBAL	R24 K61 ; R24 := 0xbe190284
	263	[2140]	SELF     	R24 R24 K62 ; R25 := R24; R24 := R24[0x39c667a9]
	264	[2140]	OP_LOADBOOL	R26 1 0 ; R26 := true
	265	[2140]	CALL     	R24 3 1 ; R24(R25,R26)
	266	[2143]	GETGLOBAL	R24 K7 ; R24 := 0x34291f5c
	267	[2143]	GETTABLE 	R24 R24 K63 ; R24 := R24[0x8ee24660]
	268	[2143]	OP_LOADBOOL	R25 1 0 ; R25 := true
	269	[2143]	CALL     	R24 2 1 ; R24(R25)
	270	[2144]	RETURN   	R0 1 ; return 

function #57 <?:2146,2168> (50 instructions, 200 bytes at 00000160FC10CF20)
2 params, 5 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[2147]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	2	[2147]	MOVE     	R3 R0 ; R3 := R0
	3	[2147]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[2147]	MOVE     	R0 R2 ; R0 := R2
	5	[2148]	EQ       	1 R0 K1 ; if R0 == 1.000000 then PC := 9
	6	[2148]	JMP      	9 ; PC := 9
	7	[2148]	EQ       	0 R0 K2 ; if R0 ~= 2.000000 then PC := 36
	8	[2148]	JMP      	36 ; PC := 36
	9	[2149]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	10	[2149]	GETGLOBAL	R3 K4 ; R3 := mBlockingTaskPopup
	11	[2149]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2149]	TEST     	R2 0 ; if not R2 then PC := 50
	13	[2149]	JMP      	50 ; PC := 50
	14	[2150]	GETGLOBAL	R2 K5 ; R2 := 0x34291f5c
	15	[2150]	GETTABLE 	R2 R2 K6 ; R2 := R2[0xe27b35bb]
	16	[2150]	CALL     	R2 1 2 ; R2 := R2()
	17	[2151]	EQ       	0 R1 K7 ; if R1 ~= nil then PC := 21
	18	[2151]	JMP      	21 ; PC := 21
	19	[2152]	SETTABLE 	R2 K8 K9 ; R2["locString"] := "/Lotus/Language/Menu/NavBar_QuickMatchPleaseWait"
	20	[2152]	JMP      	22 ; PC := 22
	21	[2154]	SETTABLE 	R2 K8 R1 ; R2["locString"] := R1
	22	[2156]	GETGLOBAL	R3 K10 ; R3 := _T
	23	[2156]	EQ       	1 R0 K2 ; if R0 == 2.000000 then PC := 26
	24	[2156]	JMP      	26 ; PC := 26
	25	[2156]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 26
	26	[2156]	OP_LOADBOOL	R4 1 0 ; R4 := true
	27	[2156]	SETTABLE 	R3 K11 R4 ; R3["LiteModeBlocking"] := R4
	28	[2157]	GETUPVAL 	R3 U0 ; R3 := U0
	29	[2157]	GETTABLE 	R3 R3 K12 ; R3 := R3[0xe99b84e7]
	30	[2157]	MOVE     	R4 R2 ; R4 := R2
	31	[2157]	CALL     	R3 2 2 ; R3 := R3(R4)
	32	[2157]	SETGLOBALHASH	R3 K4 ; mBlockingTaskPopup := R3
	33	[2158]	GETGLOBAL	R3 K10 ; R3 := _T
	34	[2158]	SETTABLE 	R3 K11 K7 ; R3["LiteModeBlocking"] := nil
	35	[2159]	JMP      	50 ; PC := 50
	36	[2161]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	37	[2161]	GETGLOBAL	R4 K4 ; R4 := mBlockingTaskPopup
	38	[2161]	CALL     	R3 2 2 ; R3 := R3(R4)
	39	[2161]	TEST     	R3 1 ; if R3 then PC := 47
	40	[2161]	JMP      	47 ; PC := 47
	41	[2162]	GETGLOBAL	R3 K4 ; R3 := mBlockingTaskPopup
	42	[2162]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0x32302b4a]
	43	[2162]	CALL     	R3 2 1 ; R3(R4)
	44	[2163]	LOADNIL  	R3 R3 ; R3 := nil
	45	[2163]	SETGLOBALHASH	R3 K4 ; mBlockingTaskPopup := R3
	46	[2163]	JMP      	50 ; PC := 50
	47	[2165]	GETGLOBAL	R3 K14 ; R3 := 0x3d106989
	48	[2165]	LOADK    	R4 K15 ; R4 := "Tried to close non-existent blocking message"
	49	[2165]	CALL     	R3 2 1 ; R3(R4)
	50	[2168]	RETURN   	R0 1 ; return 

function #58 <?:2170,2172> (5 instructions, 20 bytes at 00000160FC10D340)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2171]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2171]	MOVE     	R3 R0 ; R3 := R0
	3	[2171]	MOVE     	R4 R1 ; R4 := R1
	4	[2171]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[2172]	RETURN   	R0 1 ; return 

function #59 <?:2174,2176> (4 instructions, 16 bytes at 00000160FC10D430)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2175]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2175]	MOVE     	R2 R0 ; R2 := R0
	3	[2175]	CALL     	R1 2 1 ; R1(R2)
	4	[2176]	RETURN   	R0 1 ; return 

function #60 <?:2178,2183> (9 instructions, 36 bytes at 00000160FC10D500)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[2179]	GETGLOBAL	R0 K0 ; R0 := mAbortingQuickMatch
	2	[2179]	TEST     	R0 1 ; if R0 then PC := 9
	3	[2179]	JMP      	9 ; PC := 9
	4	[2180]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[2180]	SETGLOBALHASH	R0 K1 ; mUnblockWhenAsyncDone := R0
	6	[2181]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[2181]	LOADK    	R1 := 1.000000
	8	[2181]	CALL     	R0 2 1 ; R0(R1)
	9	[2183]	RETURN   	R0 1 ; return 

function #61 <?:2185,2191> (25 instructions, 100 bytes at 00000160FC10D640)
1 param, 7 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[2186]	GETGLOBAL	R1 K0 ; R1 := screenStack
	2	[2186]	GETGLOBAL	R2 K0 ; R2 := screenStack
	3	[2186]	LEN      	R2 R2 ; R2 := # R2
	4	[2186]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	5	[2186]	EQ       	1 R1 K1 ; if R1 == "Lobby" then PC := 9
	6	[2186]	JMP      	9 ; PC := 9
	7	[2186]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 10
	8	[2186]	JMP      	10 ; PC := 10
	9	[2186]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 10
	10	[2186]	OP_LOADBOOL	R1 1 0 ; R1 := true
	11	[2187]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	12	[2187]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xaade900e]
	13	[2187]	LOADK    	R4 K5 ; R4 := "GlobalMessage"
	14	[2187]	LOADK    	R5 := 11.000000
	15	[2187]	MOVE     	R6 R1 ; R6 := R1
	16	[2187]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	17	[2188]	TEST     	R1 0 ; if not R1 then PC := 25
	18	[2188]	JMP      	25 ; PC := 25
	19	[2189]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	20	[2189]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x5f56eeab]
	21	[2189]	LOADK    	R4 K7 ; R4 := "GlobalMessage.Message"
	22	[2189]	LOADK    	R5 := 29.000000
	23	[2189]	MOVE     	R6 R0 ; R6 := R0
	24	[2189]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	25	[2191]	RETURN   	R0 1 ; return 

function #62 <?:2193,2195> (4 instructions, 16 bytes at 00000160FC14A3F0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2194]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2194]	MOVE     	R2 R0 ; R2 := R0
	3	[2194]	CALL     	R1 2 1 ; R1(R2)
	4	[2195]	RETURN   	R0 1 ; return 

function #63 <?:2197,2205> (28 instructions, 112 bytes at 00000160FC14A4C0)
1 param, 6 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[2198]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2198]	GETGLOBAL	R2 K1 ; R2 := movies
	3	[2198]	GETTABLE 	R2 R2 R0 ; R2 := R2[R0]
	4	[2198]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[2198]	TEST     	R1 1 ; if R1 then PC := 18
	6	[2198]	JMP      	18 ; PC := 18
	7	[2199]	GETGLOBAL	R1 K2 ; R1 := 0x9ba7909f
	8	[2199]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbcfb64ab]
	9	[2199]	GETGLOBAL	R3 K1 ; R3 := movies
	10	[2199]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	11	[2199]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[2200]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	13	[2200]	MOVE     	R3 R1 ; R3 := R1
	14	[2200]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[2200]	NOT      	R2 R2 ; R2 := not R2
	16	[2200]	RETURN   	R2 2 ; return R2 
	17	[2200]	JMP      	28 ; PC := 28
	18	[2202]	GETGLOBAL	R2 K4 ; R2 := 0x3d106989
	19	[2202]	LOADK    	R3 K5 ; R3 := "ERROR: Checking unrecognized screen ["
	20	[2202]	GETGLOBAL	R4 K6 ; R4 := 0x64fb1586
	21	[2202]	MOVE     	R5 R0 ; R5 := R0
	22	[2202]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[2202]	LOADK    	R5 K7 ; R5 := "] Check your spelling."
	24	[2202]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	25	[2202]	CALL     	R2 2 1 ; R2(R3)
	26	[2203]	OP_LOADBOOL	R2 0 0 ; R2 := false
	27	[2203]	RETURN   	R2 2 ; return R2 
	28	[2205]	RETURN   	R0 1 ; return 

function #64 <?:2207,2238> (61 instructions, 244 bytes at 00000160FC14A6F0)
1 param, 11 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[2211]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[2211]	MOVE     	R4 R0 ; R4 := R0
	3	[2211]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[2211]	TEST     	R3 0 ; if not R3 then PC := 9
	5	[2211]	JMP      	9 ; PC := 9
	6	[2212]	MOVE     	R3 R1 ; R3 := R1
	7	[2212]	MOVE     	R4 R2 ; R4 := R2
	8	[2212]	RETURN   	R3 3 ; return R3, R4 
	9	[2215]	SELF     	R3 R0 K1 ; R4 := R0; R3 := R0[0x104b2223]
	10	[2215]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[2216]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	12	[2216]	MOVE     	R5 R3 ; R5 := R3
	13	[2216]	CALL     	R4 2 2 ; R4 := R4(R5)
	14	[2216]	TEST     	R4 1 ; if R4 then PC := 24
	15	[2216]	JMP      	24 ; PC := 24
	16	[2216]	GETGLOBAL	R4 K2 ; R4 := 0x34291f5c
	17	[2216]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x397b920f]
	18	[2216]	GETTABLE 	R5 R3 K4 ; R5 := R3["mExpiry"]
	19	[2216]	CALL     	R4 2 2 ; R4 := R4(R5)
	20	[2216]	LT       	0 K5 R4 ; if 0.000000 >= R4 then PC := 24
	21	[2216]	JMP      	24 ; PC := 24
	22	[2217]	LOADK    	R1 := 1.000000
	23	[2218]	GETTABLE 	R2 R3 K4 ; R2 := R3["mExpiry"]
	24	[2221]	EQ       	0 R1 K6 ; if R1 ~= nil then PC := 58
	25	[2221]	JMP      	58 ; PC := 58
	26	[2221]	GETGLOBAL	R4 K7 ; R4 := _T
	27	[2221]	GETTABLE 	R4 R4 K8 ; R4 := R4["CachedFlashSales"]
	28	[2221]	TEST     	R4 0 ; if not R4 then PC := 58
	29	[2221]	JMP      	58 ; PC := 58
	30	[2222]	GETGLOBAL	R4 K9 ; R4 := 0xcfc01047
	31	[2222]	GETGLOBAL	R5 K7 ; R5 := _T
	32	[2222]	GETTABLE 	R5 R5 K8 ; R5 := R5["CachedFlashSales"]
	33	[2222]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	34	[2222]	JMP      	56 ; PC := 56
	35	[2225]	GETTABLE 	R9 R8 K10 ; R9 := R8["mDiscount"]
	36	[2225]	EQ       	1 R9 K5 ; if R9 == 0.000000 then PC := 56
	37	[2225]	JMP      	56 ; PC := 56
	38	[2226]	GETGLOBAL	R9 K2 ; R9 := 0x34291f5c
	39	[2226]	GETTABLE 	R9 R9 K3 ; R9 := R9[0x397b920f]
	40	[2226]	GETTABLE 	R10 R8 K11 ; R10 := R8["mStartDate"]
	41	[2226]	CALL     	R9 2 2 ; R9 := R9(R10)
	42	[2226]	LT       	0 R9 K5 ; if R9 >= 0.000000 then PC := 56
	43	[2226]	JMP      	56 ; PC := 56
	44	[2227]	GETGLOBAL	R9 K2 ; R9 := 0x34291f5c
	45	[2227]	GETTABLE 	R9 R9 K3 ; R9 := R9[0x397b920f]
	46	[2227]	GETTABLE 	R10 R8 K12 ; R10 := R8["mEndDate"]
	47	[2227]	CALL     	R9 2 2 ; R9 := R9(R10)
	48	[2227]	LT       	0 K5 R9 ; if 0.000000 >= R9 then PC := 56
	49	[2227]	JMP      	56 ; PC := 56
	50	[2228]	GETTABLE 	R9 R8 K13 ; R9 := R8["mShowInMarket"]
	51	[2228]	TEST     	R9 0 ; if not R9 then PC := 56
	52	[2228]	JMP      	56 ; PC := 56
	53	[2230]	LOADK    	R1 := 2.000000
	54	[2231]	GETTABLE 	R2 R8 K12 ; R2 := R8["mEndDate"]
	55	[2232]	JMP      	58 ; PC := 58
	56	[2222]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 35; R6 := R7 end
	57	[2233]	JMP      	35 ; PC := 35
	58	[2237]	MOVE     	R9 R1 ; R9 := R1
	59	[2237]	MOVE     	R10 R2 ; R10 := R2
	60	[2237]	RETURN   	R9 3 ; return R9, R10 
	61	[2238]	RETURN   	R0 1 ; return 

function #65 <?:2240,2257> (50 instructions, 200 bytes at 00000160FC14AA90)
0 params, 7 slots, 2 upvalues, 0 locals, 13 constants, 0 functions
	1	[2241]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2241]	GETGLOBAL	R1 K1 ; R1 := queuedMovie
	3	[2241]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2241]	TEST     	R0 0 ; if not R0 then PC := 31
	5	[2241]	JMP      	31 ; PC := 31
	6	[2241]	GETGLOBAL	R0 K2 ; R0 := _T
	7	[2241]	GETTABLE 	R0 R0 K3 ; R0 := R0["missionStatsPending"]
	8	[2241]	TEST     	R0 1 ; if R0 then PC := 31
	9	[2241]	JMP      	31 ; PC := 31
	10	[2241]	GETGLOBAL	R0 K2 ; R0 := _T
	11	[2241]	GETTABLE 	R0 R0 K4 ; R0 := R0["ActiveQuestLoaded"]
	12	[2241]	TEST     	R0 0 ; if not R0 then PC := 31
	13	[2241]	JMP      	31 ; PC := 31
	14	[2242]	GETGLOBAL	R0 K2 ; R0 := _T
	15	[2242]	GETTABLE 	R0 R0 K5 ; R0 := R0["MainMenuStateReady"]
	16	[2242]	TEST     	R0 1 ; if R0 then PC := 23
	17	[2242]	JMP      	23 ; PC := 23
	18	[2242]	GETGLOBAL	R0 K6 ; R0 := mCurrentMode
	19	[2242]	GETUPVAL 	R1 U0 ; R1 := U0
	20	[2242]	GETTABLE 	R1 R1 K7 ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
	21	[2242]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 31
	22	[2242]	JMP      	31 ; PC := 31
	23	[2243]	GETGLOBAL	R0 K2 ; R0 := _T
	24	[2243]	GETTABLE 	R0 R0 K8 ; R0 := R0["gQueueMailbox"]
	25	[2243]	TEST     	R0 1 ; if R0 then PC := 31
	26	[2243]	JMP      	31 ; PC := 31
	27	[2243]	GETGLOBAL	R0 K2 ; R0 := _T
	28	[2243]	GETTABLE 	R0 R0 K9 ; R0 := R0["OpeningMailbox"]
	29	[2243]	TEST     	R0 0 ; if not R0 then PC := 33
	30	[2243]	JMP      	33 ; PC := 33
	31	[2244]	OP_LOADBOOL	R0 0 0 ; R0 := false
	32	[2244]	RETURN   	R0 2 ; return R0 
	33	[2249]	LOADK    	R0 := 1.000000
	34	[2249]	GETUPVAL 	R1 U1 ; R1 := U1
	35	[2249]	LEN      	R1 R1 ; R1 := # R1
	36	[2249]	LOADK    	R2 := 1.000000
	37	[2249]	FORPREP  	R0 47 ; R0 -= R2; PC := 47
	38	[2250]	GETGLOBAL	R4 K10 ; R4 := 0x9ba7909f
	39	[2250]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0xbcfb64ab]
	40	[2250]	GETUPVAL 	R6 U1 ; R6 := U1
	41	[2250]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	42	[2250]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	43	[2251]	EQ       	1 R4 K12 ; if R4 == nil then PC := 47
	44	[2251]	JMP      	47 ; PC := 47
	45	[2252]	OP_LOADBOOL	R5 0 0 ; R5 := false
	46	[2252]	RETURN   	R5 2 ; return R5 
	47	[2249]	FORLOOP  	R0 38 ; R0 += R2; if R0 <= R1 then begin PC := 38; R3 := R0 end
	48	[2256]	OP_LOADBOOL	R5 1 0 ; R5 := true
	49	[2256]	RETURN   	R5 2 ; return R5 
	50	[2257]	RETURN   	R0 1 ; return 

function #66 <?:2260,2298> (89 instructions, 356 bytes at 00000160FC14AE00)
1 param, 10 slots, 2 upvalues, 0 locals, 17 constants, 0 functions
	1	[2261]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2261]	GETGLOBAL	R2 K1 ; R2 := 0x9ba7909f
	3	[2261]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2261]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[2261]	JMP      	8 ; PC := 8
	6	[2262]	OP_LOADBOOL	R1 0 0 ; R1 := false
	7	[2262]	RETURN   	R1 2 ; return R1 
	8	[2265]	GETGLOBAL	R1 K1 ; R1 := 0x9ba7909f
	9	[2265]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbcfb64ab]
	10	[2265]	GETGLOBAL	R3 K3 ; R3 := 0x0032441c
	11	[2265]	GETTABLE 	R3 R3 K4 ; R3 := R3["UIMovie_EndOfQuestMovie"]
	12	[2265]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	13	[2266]	EQ       	1 R1 K5 ; if R1 == nil then PC := 17
	14	[2266]	JMP      	17 ; PC := 17
	15	[2267]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[2267]	RETURN   	R2 2 ; return R2 
	17	[2270]	TEST     	R0 0 ; if not R0 then PC := 27
	18	[2270]	JMP      	27 ; PC := 27
	19	[2271]	GETGLOBAL	R2 K1 ; R2 := 0x9ba7909f
	20	[2271]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xbcfb64ab]
	21	[2271]	GETGLOBAL	R4 K6 ; R4 := 0x39803e25
	22	[2271]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[2272]	EQ       	1 R2 K5 ; if R2 == nil then PC := 27
	24	[2272]	JMP      	27 ; PC := 27
	25	[2273]	OP_LOADBOOL	R3 0 0 ; R3 := false
	26	[2273]	RETURN   	R3 2 ; return R3 
	27	[2277]	GETGLOBAL	R3 K1 ; R3 := 0x9ba7909f
	28	[2277]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0xbcfb64ab]
	29	[2277]	GETGLOBAL	R5 K3 ; R5 := 0x0032441c
	30	[2277]	GETTABLE 	R5 R5 K7 ; R5 := R5["UIMovie_SolarMap"]
	31	[2277]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	32	[2277]	MOVE     	R1 R3 ; R1 := R3
	33	[2278]	EQ       	1 R1 K5 ; if R1 == nil then PC := 37
	34	[2278]	JMP      	37 ; PC := 37
	35	[2279]	OP_LOADBOOL	R3 0 0 ; R3 := false
	36	[2279]	RETURN   	R3 2 ; return R3 
	37	[2282]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	38	[2282]	GETGLOBAL	R4 K8 ; R4 := queuedMovie
	39	[2282]	CALL     	R3 2 2 ; R3 := R3(R4)
	40	[2282]	TEST     	R3 0 ; if not R3 then PC := 55
	41	[2282]	JMP      	55 ; PC := 55
	42	[2282]	GETGLOBAL	R3 K9 ; R3 := _T
	43	[2282]	GETTABLE 	R3 R3 K10 ; R3 := R3["missionStatsPending"]
	44	[2282]	TEST     	R3 1 ; if R3 then PC := 55
	45	[2282]	JMP      	55 ; PC := 55
	46	[2282]	GETGLOBAL	R3 K11 ; R3 := mCurrentMode
	47	[2282]	GETUPVAL 	R4 U0 ; R4 := U0
	48	[2282]	GETTABLE 	R4 R4 K12 ; R4 := R4["UI_MODE_IN_SPACE_SHIP"]
	49	[2282]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 57
	50	[2282]	JMP      	57 ; PC := 57
	51	[2282]	GETGLOBAL	R3 K9 ; R3 := _T
	52	[2282]	GETTABLE 	R3 R3 K13 ; R3 := R3["MainMenuStateReady"]
	53	[2282]	TEST     	R3 1 ; if R3 then PC := 57
	54	[2282]	JMP      	57 ; PC := 57
	55	[2283]	OP_LOADBOOL	R3 0 0 ; R3 := false
	56	[2283]	RETURN   	R3 2 ; return R3 
	57	[2286]	GETGLOBAL	R3 K9 ; R3 := _T
	58	[2286]	GETTABLE 	R3 R3 K14 ; R3 := R3["gQueueMailbox"]
	59	[2286]	TEST     	R3 1 ; if R3 then PC := 69
	60	[2286]	JMP      	69 ; PC := 69
	61	[2286]	GETGLOBAL	R3 K9 ; R3 := _T
	62	[2286]	GETTABLE 	R3 R3 K15 ; R3 := R3["OpeningMailbox"]
	63	[2286]	TEST     	R3 1 ; if R3 then PC := 69
	64	[2286]	JMP      	69 ; PC := 69
	65	[2286]	GETGLOBAL	R3 K9 ; R3 := _T
	66	[2286]	GETTABLE 	R3 R3 K16 ; R3 := R3["QuestPickerOpen"]
	67	[2286]	TEST     	R3 0 ; if not R3 then PC := 71
	68	[2286]	JMP      	71 ; PC := 71
	69	[2287]	OP_LOADBOOL	R3 0 0 ; R3 := false
	70	[2287]	RETURN   	R3 2 ; return R3 
	71	[2290]	LOADK    	R3 := 1.000000
	72	[2290]	GETUPVAL 	R4 U1 ; R4 := U1
	73	[2290]	LEN      	R4 R4 ; R4 := # R4
	74	[2290]	LOADK    	R5 := 1.000000
	75	[2290]	FORPREP  	R3 86 ; R3 -= R5; PC := 86
	76	[2291]	GETGLOBAL	R7 K1 ; R7 := 0x9ba7909f
	77	[2291]	SELF     	R7 R7 K2 ; R8 := R7; R7 := R7[0xbcfb64ab]
	78	[2291]	GETUPVAL 	R9 U1 ; R9 := U1
	79	[2291]	GETTABLE 	R9 R9 R6 ; R9 := R9[R6]
	80	[2291]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	81	[2291]	MOVE     	R1 R7 ; R1 := R7
	82	[2292]	EQ       	1 R1 K5 ; if R1 == nil then PC := 86
	83	[2292]	JMP      	86 ; PC := 86
	84	[2293]	OP_LOADBOOL	R7 0 0 ; R7 := false
	85	[2293]	RETURN   	R7 2 ; return R7 
	86	[2290]	FORLOOP  	R3 76 ; R3 += R5; if R3 <= R4 then begin PC := 76; R6 := R3 end
	87	[2297]	OP_LOADBOOL	R7 1 0 ; R7 := true
	88	[2297]	RETURN   	R7 2 ; return R7 
	89	[2298]	RETURN   	R0 1 ; return 

function #67 <?:2300,2302> (2 instructions, 8 bytes at 00000160FC14B2B0)
1 param, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2301]	SETUPVAL 	R0 U0 ; U0 := R0
	2	[2302]	RETURN   	R0 1 ; return 

function #68 <?:2304,2306> (6 instructions, 24 bytes at 00000160FC14B380)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[2305]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2305]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x7c37aeec]
	3	[2305]	MOVE     	R2 R0 ; R2 := R0
	4	[2305]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	5	[2305]	RETURN   	R1 0 ; return R1,... 
	6	[2306]	RETURN   	R0 1 ; return 

function #69 <?:2308,2310> (7 instructions, 28 bytes at 00000160FC14B490)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[2309]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2309]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 5
	3	[2309]	JMP      	5 ; PC := 5
	4	[2309]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 5
	5	[2309]	OP_LOADBOOL	R2 1 0 ; R2 := true
	6	[2309]	CALL     	R1 2 1 ; R1(R2)
	7	[2310]	RETURN   	R0 1 ; return 

function #70 <?:2312,2323> (23 instructions, 92 bytes at 00000160FC14B5A0)
0 params, 8 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2313]	NEWTABLE 	R0 5 0 ; R0 := {}
	2	[2313]	LOADK    	R1 := 1.000000
	3	[2313]	LOADK    	R2 := 2.000000
	4	[2313]	LOADK    	R3 := 3.000000
	5	[2313]	LOADK    	R4 := 4.000000
	6	[2313]	LOADK    	R5 := 7.000000
	7	[2313]	SETLIST  	R0 5 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 5
	8	[2314]	NEWTABLE 	R1 0 0 ; R1 := {}
	9	[2316]	LOADK    	R2 := 1.000000
	10	[2316]	LEN      	R3 R0 ; R3 := # R0
	11	[2316]	LOADK    	R4 := 1.000000
	12	[2316]	FORPREP  	R2 21 ; R2 -= R4; PC := 21
	13	[2317]	GETUPVAL 	R6 U0 ; R6 := U0
	14	[2317]	GETTABLE 	R6 R6 K1 ; R6 := R6[0x09cec339]
	15	[2317]	GETTABLE 	R7 R0 R5 ; R7 := R0[R5]
	16	[2317]	CALL     	R6 2 2 ; R6 := R6(R7)
	17	[2317]	TEST     	R6 0 ; if not R6 then PC := 21
	18	[2317]	JMP      	21 ; PC := 21
	19	[2318]	GETTABLE 	R6 R0 R5 ; R6 := R0[R5]
	20	[2318]	SETTABLE 	R1 R6 K2 ; R1[R6] := true
	21	[2316]	FORLOOP  	R2 13 ; R2 += R4; if R2 <= R3 then begin PC := 13; R5 := R2 end
	22	[2322]	RETURN   	R1 2 ; return R1 
	23	[2323]	RETURN   	R0 1 ; return 

function #71 <?:2325,2521> (499 instructions, 1996 bytes at 00000160FC14B750)
3 params, 61 slots, 5 upvalues, 0 locals, 106 constants, 1 function
	1	[2326]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[2326]	MOVE     	R4 R1 ; R4 := R1
	3	[2326]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[2326]	TEST     	R3 0 ; if not R3 then PC := 7
	5	[2326]	JMP      	7 ; PC := 7
	6	[2327]	RETURN   	R0 1 ; return 
	7	[2329]	GETGLOBAL	R3 K1 ; R3 := _T
	8	[2329]	GETTABLE 	R3 R3 K2 ; R3 := R3["Notifications"]
	9	[2330]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 12
	10	[2330]	JMP      	12 ; PC := 12
	11	[2331]	RETURN   	R0 1 ; return 
	12	[2336]	LOADNIL  	R4 R9 ; R4 := R5 := R6 := R7 := R8 := R9 := nil
	13	[2342]	GETGLOBAL	R10 K1 ; R10 := _T
	14	[2342]	GETTABLE 	R10 R10 K4 ; R10 := R10["CachedGlobalUpgrades"]
	15	[2342]	EQ       	1 R10 K3 ; if R10 == nil then PC := 78
	16	[2342]	JMP      	78 ; PC := 78
	17	[2343]	GETGLOBAL	R10 K5 ; R10 := 0xcfc01047
	18	[2343]	GETGLOBAL	R11 K1 ; R11 := _T
	19	[2343]	GETTABLE 	R11 R11 K4 ; R11 := R11["CachedGlobalUpgrades"]
	20	[2343]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	21	[2343]	JMP      	76 ; PC := 76
	22	[2345]	GETGLOBAL	R15 K6 ; R15 := 0x34291f5c
	23	[2345]	GETTABLE 	R15 R15 K7 ; R15 := R15[0x397b920f]
	24	[2345]	GETTABLE 	R16 R14 K8 ; R16 := R14["mActivation"]
	25	[2345]	CALL     	R15 2 2 ; R15 := R15(R16)
	26	[2345]	LE       	0 R15 K9 ; if R15 > 0.000000 then PC := 76
	27	[2345]	JMP      	76 ; PC := 76
	28	[2346]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	29	[2346]	GETTABLE 	R16 R14 K10 ; R16 := R14["mUpgrade"]
	30	[2346]	CALL     	R15 2 2 ; R15 := R15(R16)
	31	[2346]	TEST     	R15 1 ; if R15 then PC := 76
	32	[2346]	JMP      	76 ; PC := 76
	33	[2347]	GETTABLE 	R15 R14 K11 ; R15 := R14["mNodes"]
	34	[2347]	LEN      	R15 R15 ; R15 := # R15
	35	[2347]	EQ       	0 R15 K9 ; if R15 ~= 0.000000 then PC := 76
	36	[2347]	JMP      	76 ; PC := 76
	37	[2349]	GETTABLE 	R15 R14 K10 ; R15 := R14["mUpgrade"]
	38	[2349]	SELF     	R15 R15 K12 ; R16 := R15; R15 := R15[0x9f236ac2]
	39	[2349]	CALL     	R15 2 2 ; R15 := R15(R16)
	40	[2349]	EQ       	0 R15 K14 ; if R15 ~= 172.000000 then PC := 48
	41	[2349]	JMP      	48 ; PC := 48
	42	[2350]	GETTABLE 	R15 R14 K10 ; R15 := R14["mUpgrade"]
	43	[2350]	SELF     	R15 R15 K15 ; R16 := R15; R15 := R15[0x0fbc7293]
	44	[2350]	CALL     	R15 2 2 ; R15 := R15(R16)
	45	[2350]	MOVE     	R8 R15 ; R8 := R15
	46	[2351]	GETTABLE 	R9 R14 K16 ; R9 := R14["mExpiryDate"]
	47	[2351]	JMP      	69 ; PC := 69
	48	[2352]	GETTABLE 	R15 R14 K10 ; R15 := R14["mUpgrade"]
	49	[2352]	SELF     	R15 R15 K12 ; R16 := R15; R15 := R15[0x9f236ac2]
	50	[2352]	CALL     	R15 2 2 ; R15 := R15(R16)
	51	[2352]	EQ       	0 R15 K17 ; if R15 ~= 170.000000 then PC := 59
	52	[2352]	JMP      	59 ; PC := 59
	53	[2353]	GETTABLE 	R15 R14 K10 ; R15 := R14["mUpgrade"]
	54	[2353]	SELF     	R15 R15 K15 ; R16 := R15; R15 := R15[0x0fbc7293]
	55	[2353]	CALL     	R15 2 2 ; R15 := R15(R16)
	56	[2353]	MOVE     	R4 R15 ; R4 := R15
	57	[2354]	GETTABLE 	R5 R14 K16 ; R5 := R14["mExpiryDate"]
	58	[2354]	JMP      	69 ; PC := 69
	59	[2355]	GETTABLE 	R15 R14 K10 ; R15 := R14["mUpgrade"]
	60	[2355]	SELF     	R15 R15 K12 ; R16 := R15; R15 := R15[0x9f236ac2]
	61	[2355]	CALL     	R15 2 2 ; R15 := R15(R16)
	62	[2355]	EQ       	0 R15 K18 ; if R15 ~= 164.000000 then PC := 69
	63	[2355]	JMP      	69 ; PC := 69
	64	[2356]	GETTABLE 	R15 R14 K10 ; R15 := R14["mUpgrade"]
	65	[2356]	SELF     	R15 R15 K15 ; R16 := R15; R15 := R15[0x0fbc7293]
	66	[2356]	CALL     	R15 2 2 ; R15 := R15(R16)
	67	[2356]	MOVE     	R6 R15 ; R6 := R15
	68	[2357]	GETTABLE 	R7 R14 K16 ; R7 := R14["mExpiryDate"]
	69	[2360]	EQ       	1 R4 K3 ; if R4 == nil then PC := 76
	70	[2360]	JMP      	76 ; PC := 76
	71	[2360]	EQ       	1 R6 K3 ; if R6 == nil then PC := 76
	72	[2360]	JMP      	76 ; PC := 76
	73	[2360]	EQ       	1 R8 K3 ; if R8 == nil then PC := 76
	74	[2360]	JMP      	76 ; PC := 76
	75	[2361]	JMP      	78 ; PC := 78
	76	[2343]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 22; R12 := R13 end
	77	[2363]	JMP      	22 ; PC := 22
	78	[2367]	LOADNIL  	R15 R15 ; R15 := nil
	79	[2368]	LOADK    	R16 := 0.000000
	80	[2369]	LOADNIL  	R17 R17 ; R17 := nil
	81	[2370]	LOADK    	R18 := 0.000000
	82	[2371]	SELF     	R19 R1 K19 ; R20 := R1; R19 := R1[0x62c81b76]
	83	[2371]	CALL     	R19 2 2 ; R19 := R19(R20)
	84	[2372]	SELF     	R20 R19 K20 ; R21 := R19; R20 := R19[0xb61abfd2]
	85	[2372]	LOADK    	R22 := 0.000000
	86	[2372]	LOADK    	R23 := 0.000000
	87	[2372]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	88	[2373]	GETTABLE 	R21 R20 K22 ; R21 := R20["mUmbraDate"]
	89	[2373]	SELF     	R21 R21 K23 ; R22 := R21; R21 := R21[0x56c01834]
	90	[2373]	CALL     	R21 2 2 ; R21 := R21(R22)
	91	[2373]	TEST     	R21 0 ; if not R21 then PC := 97
	92	[2373]	JMP      	97 ; PC := 97
	93	[2374]	LOADK    	R16 := 1.000000
	94	[2375]	SELF     	R21 R20 K24 ; R22 := R20; R21 := R20[0x54c2ec45]
	95	[2375]	CALL     	R21 2 2 ; R21 := R21(R22)
	96	[2375]	MOVE     	R15 R21 ; R15 := R21
	97	[2377]	GETTABLE 	R21 R20 K25 ; R21 := R20["mUpgradesExpiry"]
	98	[2377]	SELF     	R21 R21 K23 ; R22 := R21; R21 := R21[0x56c01834]
	99	[2377]	CALL     	R21 2 2 ; R21 := R21(R22)
	100	[2377]	TEST     	R21 0 ; if not R21 then PC := 193
	101	[2377]	JMP      	193 ; PC := 193
	102	[2378]	LOADK    	R18 := 1.000000
	103	[2379]	GETTABLE 	R17 R20 K25 ; R17 := R20["mUpgradesExpiry"]
	104	[2381]	GETGLOBAL	R21 K1 ; R21 := _T
	105	[2381]	GETTABLE 	R21 R21 K26 ; R21 := R21["CurrentInvigoration"]
	106	[2381]	EQ       	0 R21 K3 ; if R21 ~= nil then PC := 110
	107	[2381]	JMP      	110 ; PC := 110
	108	[2382]	GETGLOBAL	R21 K1 ; R21 := _T
	109	[2382]	SETTABLE 	R21 K26 K27 ; R21["CurrentInvigoration"] := ""
	110	[2384]	GETTABLE 	R21 R20 K28 ; R21 := R20["mOffensiveUpgrade"]
	111	[2384]	EQ       	1 R21 K3 ; if R21 == nil then PC := 121
	112	[2384]	JMP      	121 ; PC := 121
	113	[2384]	GETUPVAL 	R21 U0 ; R21 := U0
	114	[2384]	GETTABLE 	R21 R21 K29 ; R21 := R21[0x609b196e]
	115	[2384]	GETUPVAL 	R22 U1 ; R22 := U1
	116	[2384]	GETTABLE 	R22 R22 K30 ; R22 := R22["Upgrades"]
	117	[2384]	GETTABLE 	R23 R20 K28 ; R23 := R20["mOffensiveUpgrade"]
	118	[2384]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	119	[2384]	EQ       	1 R21 K31 ; if R21 == -1.000000 then PC := 122
	120	[2384]	JMP      	122 ; PC := 122
	121	[2384]	OP_LOADBOOL	R21 0 1 ; R21 := false; PC := 122
	122	[2384]	OP_LOADBOOL	R21 1 0 ; R21 := true
	123	[2385]	GETTABLE 	R22 R20 K32 ; R22 := R20["mDefensiveUpgrade"]
	124	[2385]	EQ       	1 R22 K3 ; if R22 == nil then PC := 134
	125	[2385]	JMP      	134 ; PC := 134
	126	[2385]	GETUPVAL 	R22 U0 ; R22 := U0
	127	[2385]	GETTABLE 	R22 R22 K29 ; R22 := R22[0x609b196e]
	128	[2385]	GETUPVAL 	R23 U1 ; R23 := U1
	129	[2385]	GETTABLE 	R23 R23 K30 ; R23 := R23["Upgrades"]
	130	[2385]	GETTABLE 	R24 R20 K32 ; R24 := R20["mDefensiveUpgrade"]
	131	[2385]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	132	[2385]	EQ       	1 R22 K31 ; if R22 == -1.000000 then PC := 135
	133	[2385]	JMP      	135 ; PC := 135
	134	[2385]	OP_LOADBOOL	R22 0 1 ; R22 := false; PC := 135
	135	[2385]	OP_LOADBOOL	R22 1 0 ; R22 := true
	136	[2386]	TEST     	R21 1 ; if R21 then PC := 140
	137	[2386]	JMP      	140 ; PC := 140
	138	[2386]	TEST     	R22 0 ; if not R22 then PC := 193
	139	[2386]	JMP      	193 ; PC := 193
	140	[2387]	GETGLOBAL	R23 K1 ; R23 := _T
	141	[2387]	GETGLOBAL	R24 K33 ; R24 := 0xae91e43b
	142	[2387]	SELF     	R24 R24 K34 ; R25 := R24; R24 := R24[0x42b04007]
	143	[2387]	LOADK    	R26 K35 ; R26 := "/Lotus/Language/Menu/LoadoutSelection_Loading"
	144	[2387]	OP_LOADBOOL	R27 0 0 ; R27 := false
	145	[2387]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	146	[2387]	SETTABLE 	R23 K26 R24 ; R23["CurrentInvigoration"] := R24
	147	[2388]	GETUPVAL 	R23 U1 ; R23 := U1
	148	[2388]	NEWTABLE 	R24 0 0 ; R24 := {}
	149	[2388]	SETTABLE 	R23 K30 R24 ; R23["Upgrades"] := R24
	150	[2389]	GETTABLE 	R23 R20 K28 ; R23 := R20["mOffensiveUpgrade"]
	151	[2389]	EQ       	1 R23 K3 ; if R23 == nil then PC := 159
	152	[2389]	JMP      	159 ; PC := 159
	153	[2390]	GETGLOBAL	R23 K36 ; R23 := 0x33bdd652
	154	[2390]	GETTABLE 	R23 R23 K37 ; R23 := R23[0x23d5322f]
	155	[2390]	GETUPVAL 	R24 U1 ; R24 := U1
	156	[2390]	GETTABLE 	R24 R24 K30 ; R24 := R24["Upgrades"]
	157	[2390]	GETTABLE 	R25 R20 K28 ; R25 := R20["mOffensiveUpgrade"]
	158	[2390]	CALL     	R23 3 1 ; R23(R24,R25)
	159	[2392]	GETTABLE 	R23 R20 K32 ; R23 := R20["mDefensiveUpgrade"]
	160	[2392]	EQ       	1 R23 K3 ; if R23 == nil then PC := 168
	161	[2392]	JMP      	168 ; PC := 168
	162	[2393]	GETGLOBAL	R23 K36 ; R23 := 0x33bdd652
	163	[2393]	GETTABLE 	R23 R23 K37 ; R23 := R23[0x23d5322f]
	164	[2393]	GETUPVAL 	R24 U1 ; R24 := U1
	165	[2393]	GETTABLE 	R24 R24 K30 ; R24 := R24["Upgrades"]
	166	[2393]	GETTABLE 	R25 R20 K32 ; R25 := R20["mDefensiveUpgrade"]
	167	[2393]	CALL     	R23 3 1 ; R23(R24,R25)
	168	[2395]	NEWTABLE 	R23 0 0 ; R23 := {}
	169	[2396]	LOADK    	R24 := 1.000000
	170	[2396]	GETUPVAL 	R25 U1 ; R25 := U1
	171	[2396]	GETTABLE 	R25 R25 K30 ; R25 := R25["Upgrades"]
	172	[2396]	LEN      	R25 R25 ; R25 := # R25
	173	[2396]	LOADK    	R26 := 1.000000
	174	[2396]	FORPREP  	R24 184 ; R24 -= R26; PC := 184
	175	[2397]	GETGLOBAL	R28 K36 ; R28 := 0x33bdd652
	176	[2397]	GETTABLE 	R28 R28 K37 ; R28 := R28[0x23d5322f]
	177	[2397]	MOVE     	R29 R23 ; R29 := R23
	178	[2397]	GETUPVAL 	R30 U1 ; R30 := U1
	179	[2397]	GETTABLE 	R30 R30 K30 ; R30 := R30["Upgrades"]
	180	[2397]	GETTABLE 	R30 R30 R27 ; R30 := R30[R27]
	181	[2397]	SELF     	R30 R30 K38 ; R31 := R30; R30 := R30[0xed4e0128]
	182	[2397]	CALL     	R30 2 0 ; R30,... := R30(R31)
	183	[2397]	CALL     	R28 0 1 ; R28(R29,...)
	184	[2396]	FORLOOP  	R24 175 ; R24 += R26; if R24 <= R25 then begin PC := 175; R27 := R24 end
	185	[2399]	GETUPVAL 	R28 U1 ; R28 := U1
	186	[2399]	GETGLOBAL	R29 K40 ; R29 := 0xbd496aa1
	187	[2399]	GETTABLE 	R29 R29 K41 ; R29 := R29[0x42645da3]
	188	[2399]	MOVE     	R30 R23 ; R30 := R23
	189	[2399]	CALL     	R29 2 2 ; R29 := R29(R30)
	190	[2399]	SETTABLE 	R28 K39 R29 ; R28["Loader"] := R29
	191	[2400]	GETUPVAL 	R28 U1 ; R28 := U1
	192	[2400]	SETTABLE 	R28 K42 K43 ; R28["IsLoading"] := true
	193	[2404]	LOADNIL  	R28 R28 ; R28 := nil
	194	[2405]	TEST     	R2 1 ; if R2 then PC := 210
	195	[2405]	JMP      	210 ; PC := 210
	196	[2405]	GETGLOBAL	R29 K1 ; R29 := _T
	197	[2405]	GETTABLE 	R29 R29 K44 ; R29 := R29["Notifications_RefreshPolarities"]
	198	[2405]	EQ       	0 R29 K3 ; if R29 ~= nil then PC := 210
	199	[2405]	JMP      	210 ; PC := 210
	200	[2405]	GETGLOBAL	R29 K0 ; R29 := 0x7b998233
	201	[2405]	GETGLOBAL	R30 K45 ; R30 := 0x25d99d89
	202	[2405]	CALL     	R29 2 2 ; R29 := R29(R30)
	203	[2405]	TEST     	R29 1 ; if R29 then PC := 210
	204	[2405]	JMP      	210 ; PC := 210
	205	[2407]	GETUPVAL 	R29 U2 ; R29 := U2
	206	[2407]	CALL     	R29 1 2 ; R29 := R29()
	207	[2407]	MOVE     	R28 R29 ; R28 := R29
	208	[2408]	GETGLOBAL	R29 K1 ; R29 := _T
	209	[2408]	SETTABLE 	R29 K44 K46 ; R29["Notifications_RefreshPolarities"] := false
	210	[2411]	LOADK    	R29 := 1.000000
	211	[2411]	GETTABLE 	R30 R3 K47 ; R30 := R3["mElements"]
	212	[2411]	LEN      	R30 R30 ; R30 := # R30
	213	[2411]	LOADK    	R31 := 1.000000
	214	[2411]	FORPREP  	R29 498 ; R29 -= R31; PC := 498
	215	[2412]	GETTABLE 	R33 R3 K47 ; R33 := R3["mElements"]
	216	[2412]	GETTABLE 	R33 R33 R32 ; R33 := R33[R32]
	217	[2413]	EQ       	1 R33 K3 ; if R33 == nil then PC := 498
	218	[2413]	JMP      	498 ; PC := 498
	219	[2414]	LOADK    	R34 := 0.000000
	220	[2415]	LOADNIL  	R35 R35 ; R35 := nil
	221	[2416]	GETTABLE 	R36 R33 K48 ; R36 := R33["Id"]
	222	[2418]	TEST     	R2 1 ; if R2 then PC := 362
	223	[2418]	JMP      	362 ; PC := 362
	224	[2421]	GETTABLE 	R37 R3 K49 ; R37 := R3["MAIL"]
	225	[2421]	EQ       	0 R36 R37 ; if R36 ~= R37 then PC := 231
	226	[2421]	JMP      	231 ; PC := 231
	227	[2422]	SELF     	R37 R1 K50 ; R38 := R1; R37 := R1[0xf5fb4cbf]
	228	[2422]	CALL     	R37 2 2 ; R37 := R37(R38)
	229	[2422]	MOVE     	R34 R37 ; R34 := R37
	230	[2422]	JMP      	362 ; PC := 362
	231	[2423]	GETTABLE 	R37 R3 K51 ; R37 := R3["FOUNDRY"]
	232	[2423]	EQ       	0 R36 R37 ; if R36 ~= R37 then PC := 325
	233	[2423]	JMP      	325 ; PC := 325
	234	[2424]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	235	[2424]	GETGLOBAL	R38 K52 ; R38 := 0xbe190284
	236	[2424]	CALL     	R37 2 2 ; R37 := R37(R38)
	237	[2424]	TEST     	R37 1 ; if R37 then PC := 362
	238	[2424]	JMP      	362 ; PC := 362
	239	[2424]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	240	[2424]	MOVE     	R38 R1 ; R38 := R1
	241	[2424]	CALL     	R37 2 2 ; R37 := R37(R38)
	242	[2424]	TEST     	R37 1 ; if R37 then PC := 362
	243	[2424]	JMP      	362 ; PC := 362
	244	[2424]	SELF     	R37 R1 K53 ; R38 := R1; R37 := R1[0x4ae54c32]
	245	[2424]	GETUPVAL 	R39 U3 ; R39 := U3
	246	[2424]	GETTABLE 	R39 R39 K54 ; R39 := R39["SF_FOUNDRY"]
	247	[2424]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	248	[2424]	TEST     	R37 0 ; if not R37 then PC := 362
	249	[2424]	JMP      	362 ; PC := 362
	250	[2425]	GETGLOBAL	R37 K55 ; R37 := mFoundryNotification
	251	[2425]	GETTABLE 	R37 R37 K56 ; R37 := R37["Refresh"]
	252	[2425]	TEST     	R37 0 ; if not R37 then PC := 323
	253	[2425]	JMP      	323 ; PC := 323
	254	[2426]	MOVE     	R37 R0 ; R37 := R0
	255	[2427]	GETGLOBAL	R38 K55 ; R38 := mFoundryNotification
	256	[2427]	GETTABLE 	R38 R38 K57 ; R38 := R38["LastRefreshTime"]
	257	[2427]	EQ       	1 R38 K9 ; if R38 == 0.000000 then PC := 264
	258	[2427]	JMP      	264 ; PC := 264
	259	[2428]	GETGLOBAL	R38 K58 ; R38 := 0x55156ff7
	260	[2428]	CALL     	R38 1 2 ; R38 := R38()
	261	[2428]	GETGLOBAL	R39 K55 ; R39 := mFoundryNotification
	262	[2428]	GETTABLE 	R39 R39 K57 ; R39 := R39["LastRefreshTime"]
	263	[2428]	SUB      	R37 R38 R39 ; R37 := R38 - R39
	264	[2430]	SELF     	R38 R1 K59 ; R39 := R1; R38 := R1[0x72d0092a]
	265	[2430]	GETGLOBAL	R40 K52 ; R40 := 0xbe190284
	266	[2430]	SELF     	R40 R40 K60 ; R41 := R40; R40 := R40[0xa1c390fe]
	267	[2430]	CALL     	R40 2 2 ; R40 := R40(R41)
	268	[2430]	MOVE     	R41 R37 ; R41 := R37
	269	[2430]	CALL     	R38 4 2 ; R38 := R38(R39,R40,R41)
	270	[2431]	GETGLOBAL	R39 K55 ; R39 := mFoundryNotification
	271	[2431]	GETGLOBAL	R40 K58 ; R40 := 0x55156ff7
	272	[2431]	CALL     	R40 1 2 ; R40 := R40()
	273	[2431]	SETTABLE 	R39 K57 R40 ; R39["LastRefreshTime"] := R40
	274	[2433]	GETTABLE 	R34 R38 K61 ; R34 := R38["mCount"]
	275	[2434]	GETGLOBAL	R39 K1 ; R39 := _T
	276	[2434]	GETTABLE 	R39 R39 K62 ; R39 := R39["ShowNotification"]
	277	[2434]	EQ       	1 R39 K3 ; if R39 == nil then PC := 299
	278	[2434]	JMP      	299 ; PC := 299
	279	[2435]	LOADK    	R39 := 1.000000
	280	[2435]	GETTABLE 	R40 R38 K63 ; R40 := R38["mReadySinceLastCheck"]
	281	[2435]	LEN      	R40 R40 ; R40 := # R40
	282	[2435]	LOADK    	R41 := 1.000000
	283	[2435]	FORPREP  	R39 298 ; R39 -= R41; PC := 298
	284	[2436]	GETGLOBAL	R43 K33 ; R43 := 0xae91e43b
	285	[2436]	SELF     	R43 R43 K34 ; R44 := R43; R43 := R43[0x42b04007]
	286	[2436]	LOADK    	R45 K64 ; R45 := "/Lotus/Language/Menu/Crafting_ReadyToClaim_Notification"
	287	[2436]	OP_LOADBOOL	R46 0 0 ; R46 := false
	288	[2436]	NEWTABLE 	R47 0 1 ; R47 := {}
	289	[2436]	GETTABLE 	R48 R38 K63 ; R48 := R38["mReadySinceLastCheck"]
	290	[2436]	GETTABLE 	R48 R48 R42 ; R48 := R48[R42]
	291	[2436]	SETTABLE 	R47 K65 R48 ; R47["RECIPE"] := R48
	292	[2436]	CALL     	R43 5 2 ; R43 := R43(R44,R45,R46,R47)
	293	[2437]	GETGLOBAL	R44 K1 ; R44 := _T
	294	[2437]	GETTABLE 	R44 R44 K66 ; R44 := R44[0x7dce37bc]
	295	[2437]	MOVE     	R45 R43 ; R45 := R43
	296	[2437]	LOADK    	R46 K67 ; R46 := "BuildComplete"
	297	[2437]	CALL     	R44 3 1 ; R44(R45,R46)
	298	[2435]	FORLOOP  	R39 284 ; R39 += R41; if R39 <= R40 then begin PC := 284; R42 := R39 end
	299	[2441]	GETGLOBAL	R44 K55 ; R44 := mFoundryNotification
	300	[2441]	SETTABLE 	R44 K56 K46 ; R44["Refresh"] := false
	301	[2442]	GETGLOBAL	R44 K55 ; R44 := mFoundryNotification
	302	[2442]	GETTABLE 	R44 R44 K68 ; R44 := R44["Timer"]
	303	[2442]	EQ       	1 R44 K3 ; if R44 == nil then PC := 312
	304	[2442]	JMP      	312 ; PC := 312
	305	[2443]	GETGLOBAL	R44 K69 ; R44 := mTimerMgr
	306	[2443]	SELF     	R44 R44 K70 ; R45 := R44; R44 := R44[0x775c858b]
	307	[2443]	GETGLOBAL	R46 K55 ; R46 := mFoundryNotification
	308	[2443]	GETTABLE 	R46 R46 K68 ; R46 := R46["Timer"]
	309	[2443]	CALL     	R44 3 1 ; R44(R45,R46)
	310	[2444]	GETGLOBAL	R44 K55 ; R44 := mFoundryNotification
	311	[2444]	SETTABLE 	R44 K68 K3 ; R44["Timer"] := nil
	312	[2447]	GETTABLE 	R44 R38 K71 ; R44 := R38["mTimeToNextClaimable"]
	313	[2447]	LE       	0 K9 R44 ; if 0.000000 > R44 then PC := 362
	314	[2447]	JMP      	362 ; PC := 362
	315	[2448]	GETGLOBAL	R44 K55 ; R44 := mFoundryNotification
	316	[2448]	GETGLOBAL	R45 K69 ; R45 := mTimerMgr
	317	[2448]	SELF     	R45 R45 K72 ; R46 := R45; R45 := R45[0xbd2e96ea]
	318	[2448]	GETTABLE 	R47 R38 K71 ; R47 := R38["mTimeToNextClaimable"]
	319	[2451]	CLOSURE  	R48 0 ; R48 := closure(Function #1)
	320	[2448]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	321	[2451]	SETTABLE 	R44 K68 R45 ; R44["Timer"] := R45
	322	[2452]	JMP      	362 ; PC := 362
	323	[2454]	GETTABLE 	R34 R33 K73 ; R34 := R33["Value"]
	324	[2456]	JMP      	362 ; PC := 362
	325	[2457]	GETTABLE 	R44 R3 K74 ; R44 := R3["MARKET"]
	326	[2457]	EQ       	0 R36 R44 ; if R36 ~= R44 then PC := 340
	327	[2457]	JMP      	340 ; PC := 340
	328	[2458]	SELF     	R44 R1 K53 ; R45 := R1; R44 := R1[0x4ae54c32]
	329	[2458]	GETUPVAL 	R46 U3 ; R46 := U3
	330	[2458]	GETTABLE 	R46 R46 K75 ; R46 := R46["SF_SOCIAL_MENU"]
	331	[2458]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	332	[2458]	TEST     	R44 0 ; if not R44 then PC := 362
	333	[2458]	JMP      	362 ; PC := 362
	334	[2459]	GETUPVAL 	R44 U4 ; R44 := U4
	335	[2459]	MOVE     	R45 R1 ; R45 := R1
	336	[2459]	CALL     	R44 2 3 ; R44,R45 := R44(R45)
	337	[2459]	MOVE     	R35 R45 ; R35 := R45
	338	[2459]	MOVE     	R34 R44 ; R34 := R44
	339	[2460]	JMP      	362 ; PC := 362
	340	[2461]	GETTABLE 	R44 R3 K76 ; R44 := R3["INC_FRIENDS"]
	341	[2461]	EQ       	0 R36 R44 ; if R36 ~= R44 then PC := 347
	342	[2461]	JMP      	347 ; PC := 347
	343	[2462]	SELF     	R44 R1 K77 ; R45 := R1; R44 := R1[0x016ec8be]
	344	[2462]	CALL     	R44 2 2 ; R44 := R44(R45)
	345	[2462]	MOVE     	R34 R44 ; R34 := R44
	346	[2462]	JMP      	362 ; PC := 362
	347	[2463]	GETTABLE 	R44 R3 K78 ; R44 := R3["ATTACK_POLARITY"]
	348	[2463]	LE       	0 R44 R36 ; if R44 > R36 then PC := 362
	349	[2463]	JMP      	362 ; PC := 362
	350	[2463]	GETTABLE 	R44 R3 K79 ; R44 := R3["WARD_POLARITY"]
	351	[2463]	LE       	0 R36 R44 ; if R36 > R44 then PC := 362
	352	[2463]	JMP      	362 ; PC := 362
	353	[2464]	EQ       	0 R28 K3 ; if R28 ~= nil then PC := 357
	354	[2464]	JMP      	357 ; PC := 357
	355	[2465]	GETTABLE 	R34 R33 K73 ; R34 := R33["Value"]
	356	[2465]	JMP      	362 ; PC := 362
	357	[2466]	GETTABLE 	R44 R33 K80 ; R44 := R33["Polarity"]
	358	[2466]	GETTABLE 	R44 R28 R44 ; R44 := R28[R44]
	359	[2466]	EQ       	1 R44 K3 ; if R44 == nil then PC := 362
	360	[2466]	JMP      	362 ; PC := 362
	361	[2467]	LOADK    	R34 := 1.000000
	362	[2472]	GETTABLE 	R44 R3 K81 ; R44 := R3["UMBRA_ECHO"]
	363	[2472]	EQ       	0 R36 R44 ; if R36 ~= R44 then PC := 368
	364	[2472]	JMP      	368 ; PC := 368
	365	[2473]	MOVE     	R34 R16 ; R34 := R16
	366	[2474]	MOVE     	R35 R15 ; R35 := R15
	367	[2474]	JMP      	474 ; PC := 474
	368	[2475]	GETTABLE 	R44 R3 K82 ; R44 := R3["INVIGORATION"]
	369	[2475]	EQ       	0 R36 R44 ; if R36 ~= R44 then PC := 374
	370	[2475]	JMP      	374 ; PC := 374
	371	[2476]	MOVE     	R34 R18 ; R34 := R18
	372	[2477]	MOVE     	R35 R17 ; R35 := R17
	373	[2477]	JMP      	474 ; PC := 474
	374	[2478]	GETTABLE 	R44 R3 K83 ; R44 := R3["DOUBLE_CREDIT"]
	375	[2478]	EQ       	0 R36 R44 ; if R36 ~= R44 then PC := 380
	376	[2478]	JMP      	380 ; PC := 380
	377	[2479]	MOVE     	R34 R4 ; R34 := R4
	378	[2480]	MOVE     	R35 R5 ; R35 := R5
	379	[2480]	JMP      	474 ; PC := 474
	380	[2481]	GETTABLE 	R44 R3 K84 ; R44 := R3["DOUBLE_AFFINITY"]
	381	[2481]	EQ       	0 R36 R44 ; if R36 ~= R44 then PC := 386
	382	[2481]	JMP      	386 ; PC := 386
	383	[2482]	MOVE     	R34 R6 ; R34 := R6
	384	[2483]	MOVE     	R35 R7 ; R35 := R7
	385	[2483]	JMP      	474 ; PC := 474
	386	[2484]	GETTABLE 	R44 R3 K85 ; R44 := R3["DOUBLE_PICKUP"]
	387	[2484]	EQ       	0 R36 R44 ; if R36 ~= R44 then PC := 392
	388	[2484]	JMP      	392 ; PC := 392
	389	[2485]	MOVE     	R34 R8 ; R34 := R8
	390	[2486]	MOVE     	R35 R9 ; R35 := R9
	391	[2486]	JMP      	474 ; PC := 474
	392	[2487]	GETTABLE 	R44 R3 K86 ; R44 := R3["EVOLVING_WEAPON"]
	393	[2487]	EQ       	0 R36 R44 ; if R36 ~= R44 then PC := 474
	394	[2487]	JMP      	474 ; PC := 474
	395	[2488]	GETGLOBAL	R44 K0 ; R44 := 0x7b998233
	396	[2488]	GETGLOBAL	R45 K45 ; R45 := 0x25d99d89
	397	[2488]	CALL     	R44 2 2 ; R44 := R44(R45)
	398	[2488]	TEST     	R44 1 ; if R44 then PC := 474
	399	[2488]	JMP      	474 ; PC := 474
	400	[2489]	GETGLOBAL	R44 K87 ; R44 := 0x89326c93
	401	[2489]	SELF     	R44 R44 K88 ; R45 := R44; R44 := R44[0x78298275]
	402	[2489]	CALL     	R44 2 2 ; R44 := R44(R45)
	403	[2490]	GETGLOBAL	R45 K0 ; R45 := 0x7b998233
	404	[2490]	MOVE     	R46 R44 ; R46 := R44
	405	[2490]	CALL     	R45 2 2 ; R45 := R45(R46)
	406	[2490]	TEST     	R45 1 ; if R45 then PC := 474
	407	[2490]	JMP      	474 ; PC := 474
	408	[2491]	SELF     	R45 R44 K89 ; R46 := R44; R45 := R44[0xde321e6f]
	409	[2491]	CALL     	R45 2 2 ; R45 := R45(R46)
	410	[2492]	NEWTABLE 	R46 3 0 ; R46 := {}
	411	[2492]	LOADK    	R47 := 0.000000
	412	[2492]	LOADK    	R48 := 1.000000
	413	[2492]	LOADK    	R49 := 5.000000
	414	[2492]	SETLIST  	R46 3 1 ; R46[(1-1)*FPF+i] := R(46+i), 1 <= i <= 3
	415	[2493]	NEWTABLE 	R47 3 0 ; R47 := {}
	416	[2493]	LOADK    	R48 := 1.000000
	417	[2493]	LOADK    	R49 := 2.000000
	418	[2493]	LOADK    	R50 := 3.000000
	419	[2493]	SETLIST  	R47 3 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 3
	420	[2494]	GETGLOBAL	R48 K90 ; R48 := 0xc8802016
	421	[2494]	MOVE     	R49 R46 ; R49 := R46
	422	[2494]	CALL     	R48 2 4 ; R48,R49,R50 := R48(R49)
	423	[2494]	JMP      	472 ; PC := 472
	424	[2495]	SELF     	R53 R45 K91 ; R54 := R45; R53 := R45[0xe85a2361]
	425	[2495]	MOVE     	R55 R52 ; R55 := R52
	426	[2495]	CALL     	R53 3 2 ; R53 := R53(R54,R55)
	427	[2496]	GETGLOBAL	R54 K0 ; R54 := 0x7b998233
	428	[2496]	MOVE     	R55 R53 ; R55 := R53
	429	[2496]	CALL     	R54 2 2 ; R54 := R54(R55)
	430	[2496]	TEST     	R54 1 ; if R54 then PC := 472
	431	[2496]	JMP      	472 ; PC := 472
	432	[2496]	SELF     	R54 R53 K92 ; R55 := R53; R54 := R53[0xc49a5a08]
	433	[2496]	CALL     	R54 2 2 ; R54 := R54(R55)
	434	[2496]	TEST     	R54 0 ; if not R54 then PC := 472
	435	[2496]	JMP      	472 ; PC := 472
	436	[2497]	GETGLOBAL	R54 K45 ; R54 := 0x25d99d89
	437	[2497]	SELF     	R54 R54 K93 ; R55 := R54; R54 := R54[0x81454478]
	438	[2497]	GETGLOBAL	R56 K94 ; R56 := 0x0469f296
	439	[2497]	SELF     	R57 R53 K38 ; R58 := R53; R57 := R53[0xed4e0128]
	440	[2497]	CALL     	R57 2 0 ; R57,... := R57(R58)
	441	[2497]	CALL     	R56 0 0 ; R56,... := R56(R57,...)
	442	[2497]	CALL     	R54 0 2 ; R54 := R54(R55,...)
	443	[2498]	GETGLOBAL	R55 K0 ; R55 := 0x7b998233
	444	[2498]	MOVE     	R56 R54 ; R56 := R54
	445	[2498]	CALL     	R55 2 2 ; R55 := R55(R56)
	446	[2498]	TEST     	R55 1 ; if R55 then PC := 472
	447	[2498]	JMP      	472 ; PC := 472
	448	[2499]	GETGLOBAL	R55 K45 ; R55 := 0x25d99d89
	449	[2499]	SELF     	R55 R55 K95 ; R56 := R55; R55 := R55[0x25a6e75e]
	450	[2499]	CALL     	R55 2 2 ; R55 := R55(R56)
	451	[2499]	SELF     	R55 R55 K96 ; R56 := R55; R55 := R55[0xc70965fe]
	452	[2499]	LOADK    	R57 := 0.000000
	453	[2499]	GETTABLE 	R58 R47 R51 ; R58 := R47[R51]
	454	[2499]	SELF     	R59 R53 K97 ; R60 := R53; R59 := R53[0x6daa621a]
	455	[2499]	CALL     	R59 2 2 ; R59 := R59(R60)
	456	[2499]	SELF     	R59 R59 K98 ; R60 := R59; R59 := R59[0xf537cfc7]
	457	[2499]	CALL     	R59 2 0 ; R59,... := R59(R60)
	458	[2499]	CALL     	R55 0 2 ; R55 := R55(R56,...)
	459	[2500]	GETGLOBAL	R56 K0 ; R56 := 0x7b998233
	460	[2500]	MOVE     	R57 R55 ; R57 := R55
	461	[2500]	CALL     	R56 2 2 ; R56 := R56(R57)
	462	[2500]	TEST     	R56 1 ; if R56 then PC := 472
	463	[2500]	JMP      	472 ; PC := 472
	464	[2500]	GETGLOBAL	R56 K99 ; R56 := 0x7f5022cf
	465	[2500]	GETTABLE 	R56 R56 K100 ; R56 := R56[0x41e2ae25]
	466	[2500]	GETTABLE 	R57 R55 K101 ; R57 := R55["mSkillTree"]
	467	[2500]	CALL     	R56 2 2 ; R56 := R56(R57)
	468	[2500]	GETTABLE 	R57 R54 K102 ; R57 := R54["rank"]
	469	[2500]	LT       	0 R56 R57 ; if R56 >= R57 then PC := 472
	470	[2500]	JMP      	472 ; PC := 472
	471	[2501]	LOADK    	R34 := 1.000000
	472	[2494]	TFORLOOP 	R48 2 ; R51,R52 := R48(R49,R50); if R51 ~= nil then begin PC = 424; R50 := R51 end
	473	[2504]	JMP      	424 ; PC := 424
	474	[2510]	GETTABLE 	R56 R33 K73 ; R56 := R33["Value"]
	475	[2510]	EQ       	0 R34 R56 ; if R34 ~= R56 then PC := 490
	476	[2510]	JMP      	490 ; PC := 490
	477	[2511]	EQ       	1 R35 K3 ; if R35 == nil then PC := 498
	478	[2511]	JMP      	498 ; PC := 498
	479	[2511]	GETTABLE 	R56 R33 K103 ; R56 := R33["Expiry"]
	480	[2511]	EQ       	1 R56 K3 ; if R56 == nil then PC := 487
	481	[2511]	JMP      	487 ; PC := 487
	482	[2511]	SELF     	R56 R35 K104 ; R57 := R35; R56 := R35[0x10f68684]
	483	[2511]	GETTABLE 	R58 R33 K103 ; R58 := R33["Expiry"]
	484	[2511]	CALL     	R56 3 2 ; R56 := R56(R57,R58)
	485	[2511]	JMP      	488 ; PC := 488
	486	[2511]	OP_LOADBOOL	R56 0 1 ; R56 := false; PC := 487
	487	[2511]	OP_LOADBOOL	R56 1 0 ; R56 := true
	488	[2511]	EQ       	1 R56 K9 ; if R56 == 0.000000 then PC := 498
	489	[2511]	JMP      	498 ; PC := 498
	490	[2512]	SETTABLE 	R33 K73 R34 ; R33["Value"] := R34
	491	[2513]	EQ       	0 R35 K3 ; if R35 ~= nil then PC := 495
	492	[2513]	JMP      	495 ; PC := 495
	493	[2514]	SETTABLE 	R33 K103 K3 ; R33["Expiry"] := nil
	494	[2514]	JMP      	498 ; PC := 498
	495	[2516]	SELF     	R56 R35 K105 ; R57 := R35; R56 := R35[0x8f89d633]
	496	[2516]	CALL     	R56 2 2 ; R56 := R56(R57)
	497	[2516]	SETTABLE 	R33 K103 R56 ; R33["Expiry"] := R56
	498	[2411]	FORLOOP  	R29 215 ; R29 += R31; if R29 <= R30 then begin PC := 215; R32 := R29 end
	499	[2521]	RETURN   	R0 1 ; return 

function #72 <?:2523,2665> (364 instructions, 1456 bytes at 00000160FC14D0D0)
1 param, 55 slots, 6 upvalues, 0 locals, 98 constants, 1 function
	1	[2525]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[2525]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x9718be96]
	3	[2525]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2525]	GETTABLE 	R2 R2 K2 ; R2 := R2["KUVA_TOWER_MISSION_INTERVAL"]
	5	[2525]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2526]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[2526]	GETTABLE 	R2 R2 K2 ; R2 := R2["KUVA_TOWER_MISSION_INTERVAL"]
	8	[2526]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[2526]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xa01111a5]
	10	[2526]	CALL     	R3 1 2 ; R3 := R3()
	11	[2526]	GETUPVAL 	R4 U0 ; R4 := U0
	12	[2526]	GETTABLE 	R4 R4 K2 ; R4 := R4["KUVA_TOWER_MISSION_INTERVAL"]
	13	[2526]	MOD      	R3 R3 R4 ; R3 := R3 % R4
	14	[2526]	SUB      	R2 R2 R3 ; R2 := R2 - R3
	15	[2528]	GETUPVAL 	R3 U1 ; R3 := U1
	16	[2528]	GETTABLE 	R3 R3 K4 ; R3 := R3["mWorldStateLastGhostTowerSeed"]
	17	[2528]	EQ       	0 R1 R3 ; if R1 ~= R3 then PC := 20
	18	[2528]	JMP      	20 ; PC := 20
	19	[2529]	RETURN   	R2 2 ; return R2 
	20	[2532]	GETUPVAL 	R3 U1 ; R3 := U1
	21	[2532]	SETTABLE 	R3 K4 R1 ; R3["mWorldStateLastGhostTowerSeed"] := R1
	22	[2533]	GETGLOBAL	R3 K5 ; R3 := 0x4f6851ff
	23	[2533]	MOVE     	R4 R1 ; R4 := R1
	24	[2533]	CALL     	R3 2 1 ; R3(R4)
	25	[2535]	GETGLOBAL	R3 K6 ; R3 := _T
	26	[2535]	NEWTABLE 	R4 0 0 ; R4 := {}
	27	[2535]	SETTABLE 	R3 K7 R4 ; R3["CachedGhostTowerMissions"] := R4
	28	[2537]	OP_LOADBOOL	R3 0 0 ; R3 := false
	29	[2538]	GETGLOBAL	R4 K8 ; R4 := 0x7ed0a956
	30	[2538]	LOADK    	R5 K9 ; R5 := "/Lotus/Types/Keys/WarWithinQuest/WarWithinQuestKeyChain"
	31	[2538]	CALL     	R4 2 2 ; R4 := R4(R5)
	32	[2539]	GETUPVAL 	R5 U0 ; R5 := U0
	33	[2539]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x52fb05b3]
	34	[2539]	MOVE     	R6 R4 ; R6 := R4
	35	[2539]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[2540]	GETGLOBAL	R6 K11 ; R6 := 0x0469f296
	37	[2540]	LOADK    	R7 K12 ; R7 := "KuvaSurvival"
	38	[2540]	CALL     	R6 2 2 ; R6 := R6(R7)
	39	[2541]	GETGLOBAL	R7 K13 ; R7 := 0x5bced4c4
	40	[2541]	GETTABLE 	R7 R7 K14 ; R7 := R7[0x55f27c30]
	41	[2541]	GETGLOBAL	R8 K15 ; R8 := 0xbe190284
	42	[2541]	SELF     	R8 R8 K16 ; R9 := R8; R8 := R8[0x67b221fa]
	43	[2541]	CALL     	R8 2 0 ; R8,... := R8(R9)
	44	[2541]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	45	[2541]	ADD      	R7 R7 R2 ; R7 := R7 + R2
	46	[2543]	GETUPVAL 	R8 U0 ; R8 := U0
	47	[2543]	GETTABLE 	R8 R8 K17 ; R8 := R8[0x5e35d4d6]
	48	[2543]	CALL     	R8 1 2 ; R8 := R8()
	49	[2544]	SELF     	R9 R8 K18 ; R10 := R8; R9 := R8[0xc1dee03f]
	50	[2544]	CALL     	R9 2 2 ; R9 := R9(R10)
	51	[2545]	GETUPVAL 	R10 U2 ; R10 := U2
	52	[2545]	GETTABLE 	R10 R10 K19 ; R10 := R10[0xf918a1ff]
	53	[2545]	CALL     	R10 1 2 ; R10 := R10()
	54	[2548]	NEWTABLE 	R11 0 0 ; R11 := {}
	55	[2549]	GETGLOBAL	R12 K20 ; R12 := 0xcfc01047
	56	[2549]	MOVE     	R13 R9 ; R13 := R9
	57	[2549]	CALL     	R12 2 4 ; R12,R13,R14 := R12(R13)
	58	[2549]	JMP      	92 ; PC := 92
	59	[2550]	GETUPVAL 	R17 U0 ; R17 := U0
	60	[2550]	GETTABLE 	R17 R17 K21 ; R17 := R17["REGION_ID_FORTRESS"]
	61	[2550]	EQ       	1 R15 R17 ; if R15 == R17 then PC := 92
	62	[2550]	JMP      	92 ; PC := 92
	63	[2550]	GETUPVAL 	R17 U0 ; R17 := U0
	64	[2550]	GETTABLE 	R17 R17 K22 ; R17 := R17["REGION_ID_DOJO"]
	65	[2550]	EQ       	1 R15 R17 ; if R15 == R17 then PC := 92
	66	[2550]	JMP      	92 ; PC := 92
	67	[2550]	GETUPVAL 	R17 U0 ; R17 := U0
	68	[2550]	GETTABLE 	R17 R17 K23 ; R17 := R17["REGION_ID_VOID"]
	69	[2550]	EQ       	1 R15 R17 ; if R15 == R17 then PC := 92
	70	[2550]	JMP      	92 ; PC := 92
	71	[2550]	GETUPVAL 	R17 U0 ; R17 := U0
	72	[2550]	GETTABLE 	R17 R17 K24 ; R17 := R17["REGION_ID_MOON"]
	73	[2550]	EQ       	1 R15 R17 ; if R15 == R17 then PC := 92
	74	[2550]	JMP      	92 ; PC := 92
	75	[2550]	GETUPVAL 	R17 U0 ; R17 := U0
	76	[2550]	GETTABLE 	R17 R17 K25 ; R17 := R17["REGION_ID_DARK_SECTOR"]
	77	[2550]	EQ       	1 R15 R17 ; if R15 == R17 then PC := 92
	78	[2550]	JMP      	92 ; PC := 92
	79	[2550]	GETUPVAL 	R17 U0 ; R17 := U0
	80	[2550]	GETTABLE 	R17 R17 K26 ; R17 := R17["REGION_ID_DEEP_SPACE"]
	81	[2550]	EQ       	1 R15 R17 ; if R15 == R17 then PC := 92
	82	[2550]	JMP      	92 ; PC := 92
	83	[2550]	GETUPVAL 	R17 U0 ; R17 := U0
	84	[2550]	GETTABLE 	R17 R17 K27 ; R17 := R17["REGION_ID_ZARIMAN"]
	85	[2550]	EQ       	1 R15 R17 ; if R15 == R17 then PC := 92
	86	[2550]	JMP      	92 ; PC := 92
	87	[2551]	GETGLOBAL	R17 K28 ; R17 := 0x33bdd652
	88	[2551]	GETTABLE 	R17 R17 K29 ; R17 := R17[0x23d5322f]
	89	[2551]	MOVE     	R18 R11 ; R18 := R11
	90	[2551]	MOVE     	R19 R16 ; R19 := R16
	91	[2551]	CALL     	R17 3 1 ; R17(R18,R19)
	92	[2549]	TFORLOOP 	R12 2 ; R15,R16 := R12(R13,R14); if R15 ~= nil then begin PC = 59; R14 := R15 end
	93	[2552]	JMP      	59 ; PC := 59
	94	[2555]	GETGLOBAL	R17 K28 ; R17 := 0x33bdd652
	95	[2555]	GETTABLE 	R17 R17 K30 ; R17 := R17[0xf21b1d8e]
	96	[2555]	MOVE     	R18 R11 ; R18 := R11
	97	[2558]	CLOSURE  	R19 0 ; R19 := closure(Function #1)
	98	[2558]	MOVE     	R0 R10 ; R0 := R10
	99	[2555]	CALL     	R17 3 1 ; R17(R18,R19)
	100	[2561]	LOADK    	R17 := 2.000000
	101	[2563]	NEWTABLE 	R18 0 0 ; R18 := {}
	102	[2564]	GETGLOBAL	R19 K31 ; R19 := 0xc8802016
	103	[2564]	MOVE     	R20 R11 ; R20 := R11
	104	[2564]	CALL     	R19 2 4 ; R19,R20,R21 := R19(R20)
	105	[2564]	JMP      	173 ; PC := 173
	106	[2565]	GETGLOBAL	R24 K20 ; R24 := 0xcfc01047
	107	[2565]	GETTABLE 	R25 R23 K32 ; R25 := R23["sectors"]
	108	[2565]	CALL     	R24 2 4 ; R24,R25,R26 := R24(R25)
	109	[2565]	JMP      	168 ; PC := 168
	110	[2566]	GETGLOBAL	R29 K33 ; R29 := 0x64fb1586
	111	[2566]	GETTABLE 	R30 R28 K34 ; R30 := R28["name"]
	112	[2566]	CALL     	R29 2 2 ; R29 := R29(R30)
	113	[2567]	GETTABLE 	R30 R28 K35 ; R30 := R28["mission"]
	114	[2568]	GETTABLE 	R31 R30 K36 ; R31 := R30["missionType"]
	115	[2570]	GETTABLE 	R32 R28 K37 ; R32 := R28["nodeType"]
	116	[2570]	EQ       	0 R32 K39 ; if R32 ~= 0.000000 then PC := 168
	117	[2570]	JMP      	168 ; PC := 168
	118	[2571]	EQ       	1 R29 K40 ; if R29 == "" then PC := 168
	119	[2571]	JMP      	168 ; PC := 168
	120	[2572]	GETGLOBAL	R32 K41 ; R32 := 0x7b998233
	121	[2572]	GETTABLE 	R33 R30 K42 ; R33 := R30["levelOverride"]
	122	[2572]	CALL     	R32 2 2 ; R32 := R32(R33)
	123	[2572]	TEST     	R32 1 ; if R32 then PC := 168
	124	[2572]	JMP      	168 ; PC := 168
	125	[2573]	GETTABLE 	R32 R30 K43 ; R32 := R30["archwingRequired"]
	126	[2573]	TEST     	R32 1 ; if R32 then PC := 168
	127	[2573]	JMP      	168 ; PC := 168
	128	[2574]	GETTABLE 	R32 R30 K44 ; R32 := R30["isSharkwingMission"]
	129	[2574]	TEST     	R32 1 ; if R32 then PC := 168
	130	[2574]	JMP      	168 ; PC := 168
	131	[2575]	EQ       	1 R31 K45 ; if R31 == 22.000000 then PC := 168
	132	[2575]	JMP      	168 ; PC := 168
	133	[2576]	EQ       	1 R31 K46 ; if R31 == 13.000000 then PC := 168
	134	[2576]	JMP      	168 ; PC := 168
	135	[2577]	EQ       	1 R31 K47 ; if R31 == 8.000000 then PC := 168
	136	[2577]	JMP      	168 ; PC := 168
	137	[2578]	EQ       	1 R31 K48 ; if R31 == 21.000000 then PC := 168
	138	[2578]	JMP      	168 ; PC := 168
	139	[2579]	EQ       	1 R31 K49 ; if R31 == 14.000000 then PC := 168
	140	[2579]	JMP      	168 ; PC := 168
	141	[2580]	EQ       	1 R31 K50 ; if R31 == 28.000000 then PC := 168
	142	[2580]	JMP      	168 ; PC := 168
	143	[2581]	EQ       	1 R31 K51 ; if R31 == 36.000000 then PC := 168
	144	[2581]	JMP      	168 ; PC := 168
	145	[2582]	EQ       	1 R31 K52 ; if R31 == 30.000000 then PC := 168
	146	[2582]	JMP      	168 ; PC := 168
	147	[2583]	EQ       	1 R31 K53 ; if R31 == 32.000000 then PC := 168
	148	[2583]	JMP      	168 ; PC := 168
	149	[2584]	EQ       	1 R31 K54 ; if R31 == 31.000000 then PC := 168
	150	[2584]	JMP      	168 ; PC := 168
	151	[2585]	GETTABLE 	R32 R30 K55 ; R32 := R30["goalTag"]
	152	[2585]	GETGLOBAL	R33 K56 ; R33 := EMPTY_SYMBOL
	153	[2585]	EQ       	1 R32 R33 ; if R32 == R33 then PC := 158
	154	[2585]	JMP      	158 ; PC := 158
	155	[2585]	GETTABLE 	R32 R30 K55 ; R32 := R30["goalTag"]
	156	[2585]	EQ       	0 R32 R6 ; if R32 ~= R6 then PC := 168
	157	[2585]	JMP      	168 ; PC := 168
	158	[2586]	GETGLOBAL	R32 K41 ; R32 := 0x7b998233
	159	[2586]	GETTABLE 	R33 R30 K57 ; R33 := R30["questReq"]
	160	[2586]	CALL     	R32 2 2 ; R32 := R32(R33)
	161	[2586]	TEST     	R32 0 ; if not R32 then PC := 168
	162	[2586]	JMP      	168 ; PC := 168
	163	[2588]	GETGLOBAL	R32 K28 ; R32 := 0x33bdd652
	164	[2588]	GETTABLE 	R32 R32 K29 ; R32 := R32[0x23d5322f]
	165	[2588]	MOVE     	R33 R18 ; R33 := R18
	166	[2588]	MOVE     	R34 R28 ; R34 := R28
	167	[2588]	CALL     	R32 3 1 ; R32(R33,R34)
	168	[2565]	TFORLOOP 	R24 2 ; R27,R28 := R24(R25,R26); if R27 ~= nil then begin PC = 110; R26 := R27 end
	169	[2589]	JMP      	110 ; PC := 110
	170	[2592]	EQ       	0 R22 R17 ; if R22 ~= R17 then PC := 173
	171	[2592]	JMP      	173 ; PC := 173
	172	[2593]	JMP      	175 ; PC := 175
	173	[2564]	TFORLOOP 	R19 2 ; R22,R23 := R19(R20,R21); if R22 ~= nil then begin PC = 106; R21 := R22 end
	174	[2594]	JMP      	106 ; PC := 106
	175	[2598]	GETUPVAL 	R32 U3 ; R32 := U3
	176	[2598]	GETTABLE 	R32 R32 K58 ; R32 := R32[0xb8f73de1]
	177	[2598]	MOVE     	R33 R18 ; R33 := R18
	178	[2598]	CALL     	R32 2 1 ; R32(R33)
	179	[2599]	OP_LOADBOOL	R32 0 0 ; R32 := false
	180	[2599]	TEST     	R32 0 ; if not R32 then PC := 199
	181	[2599]	JMP      	199 ; PC := 199
	182	[2599]	TEST     	R3 0 ; if not R3 then PC := 199
	183	[2599]	JMP      	199 ; PC := 199
	184	[2600]	GETGLOBAL	R32 K31 ; R32 := 0xc8802016
	185	[2600]	MOVE     	R33 R18 ; R33 := R18
	186	[2600]	CALL     	R32 2 4 ; R32,R33,R34 := R32(R33)
	187	[2600]	JMP      	197 ; PC := 197
	188	[2601]	GETGLOBAL	R37 K59 ; R37 := 0x3d106989
	189	[2601]	LOADK    	R38 K60 ; R38 := "KUVA node"
	190	[2601]	MOVE     	R39 R35 ; R39 := R35
	191	[2601]	LOADK    	R40 K61 ; R40 := "="
	192	[2601]	GETGLOBAL	R41 K33 ; R41 := 0x64fb1586
	193	[2601]	GETTABLE 	R42 R36 K34 ; R42 := R36["name"]
	194	[2601]	CALL     	R41 2 2 ; R41 := R41(R42)
	195	[2601]	CONCAT   	R38 R38 R41 ; R38 := R38 .. R39 .. R40 .. R41
	196	[2601]	CALL     	R37 2 1 ; R37(R38)
	197	[2600]	TFORLOOP 	R32 2 ; R35,R36 := R32(R33,R34); if R35 ~= nil then begin PC = 188; R34 := R35 end
	198	[2601]	JMP      	188 ; PC := 188
	199	[2605]	LOADNIL  	R37 R37 ; R37 := nil
	200	[2606]	SELF     	R38 R0 K62 ; R39 := R0; R38 := R0[0x69727e0b]
	201	[2606]	CALL     	R38 2 2 ; R38 := R38(R39)
	202	[2606]	SELF     	R38 R38 K63 ; R39 := R38; R38 := R38[0x21fec8ad]
	203	[2606]	GETGLOBAL	R40 K11 ; R40 := 0x0469f296
	204	[2606]	LOADK    	R41 K64 ; R41 := "KuvaFlood"
	205	[2606]	CALL     	R40 2 0 ; R40,... := R40(R41)
	206	[2606]	CALL     	R38 0 2 ; R38 := R38(R39,...)
	207	[2607]	TEST     	R38 0 ; if not R38 then PC := 222
	208	[2607]	JMP      	222 ; PC := 222
	209	[2607]	LEN      	R39 R38 ; R39 := # R38
	210	[2607]	LT       	0 K39 R39 ; if 0.000000 >= R39 then PC := 222
	211	[2607]	JMP      	222 ; PC := 222
	212	[2608]	SELF     	R39 R8 K65 ; R40 := R8; R39 := R8[0x3ad9ed31]
	213	[2608]	GETTABLE 	R41 R38 K66 ; R41 := R38[1.000000]
	214	[2608]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	215	[2608]	MOVE     	R37 R39 ; R37 := R39
	216	[2609]	GETGLOBAL	R39 K13 ; R39 := 0x5bced4c4
	217	[2609]	GETTABLE 	R39 R39 K67 ; R39 := R39[0xac1b386a]
	218	[2609]	GETUPVAL 	R40 U4 ; R40 := U4
	219	[2609]	LEN      	R41 R18 ; R41 := # R18
	220	[2609]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	221	[2609]	SETTABLE 	R18 R39 R37 ; R18[R39] := R37
	222	[2613]	GETGLOBAL	R39 K13 ; R39 := 0x5bced4c4
	223	[2613]	GETTABLE 	R39 R39 K14 ; R39 := R39[0x55f27c30]
	224	[2613]	GETUPVAL 	R40 U0 ; R40 := U0
	225	[2613]	GETTABLE 	R40 R40 K3 ; R40 := R40[0xa01111a5]
	226	[2613]	CALL     	R40 1 2 ; R40 := R40()
	227	[2613]	GETUPVAL 	R41 U0 ; R41 := U0
	228	[2613]	GETTABLE 	R41 R41 K2 ; R41 := R41["KUVA_TOWER_MISSION_INTERVAL"]
	229	[2613]	DIV      	R40 R40 R41 ; R40 := R40 / R41
	230	[2613]	CALL     	R39 2 2 ; R39 := R39(R40)
	231	[2613]	MOD      	R39 R39 K68 ; R39 := R39 % 2.000000
	232	[2615]	GETGLOBAL	R40 K31 ; R40 := 0xc8802016
	233	[2615]	MOVE     	R41 R18 ; R41 := R18
	234	[2615]	CALL     	R40 2 4 ; R40,R41,R42 := R40(R41)
	235	[2615]	JMP      	361 ; PC := 361
	236	[2616]	GETUPVAL 	R45 U4 ; R45 := U4
	237	[2616]	EQ       	1 R43 R45 ; if R43 == R45 then PC := 240
	238	[2616]	JMP      	240 ; PC := 240
	239	[2616]	OP_LOADBOOL	R45 0 1 ; R45 := false; PC := 240
	240	[2616]	OP_LOADBOOL	R45 1 0 ; R45 := true
	241	[2617]	GETUPVAL 	R46 U4 ; R46 := U4
	242	[2617]	MUL      	R46 R39 R46 ; R46 := R39 * R46
	243	[2617]	ADD      	R46 R43 R46 ; R46 := R43 + R46
	244	[2618]	GETGLOBAL	R47 K11 ; R47 := 0x0469f296
	245	[2618]	LOADK    	R48 K69 ; R48 := "KuvaMission"
	246	[2618]	MOVE     	R49 R46 ; R49 := R46
	247	[2618]	CONCAT   	R48 R48 R49 ; R48 := R48 .. R49
	248	[2618]	CALL     	R47 2 2 ; R47 := R47(R48)
	249	[2619]	GETGLOBAL	R48 K33 ; R48 := 0x64fb1586
	250	[2619]	GETTABLE 	R49 R44 K34 ; R49 := R44["name"]
	251	[2619]	CALL     	R48 2 2 ; R48 := R48(R49)
	252	[2620]	SELF     	R49 R0 K70 ; R50 := R0; R49 := R0[0xc3150d06]
	253	[2620]	MOVE     	R51 R47 ; R51 := R47
	254	[2620]	GETUPVAL 	R52 U0 ; R52 := U0
	255	[2620]	GETTABLE 	R52 R52 K2 ; R52 := R52["KUVA_TOWER_MISSION_INTERVAL"]
	256	[2620]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	257	[2620]	TEST     	R49 1 ; if R49 then PC := 265
	258	[2620]	JMP      	265 ; PC := 265
	259	[2620]	TESTSET  	R49 R37 0 ; if not R37 then PC := 265 else R49 := R37 
	260	[2620]	JMP      	265 ; PC := 265
	261	[2620]	EQ       	1 R37 R44 ; if R37 == R44 then PC := 264
	262	[2620]	JMP      	264 ; PC := 264
	263	[2620]	OP_LOADBOOL	R49 0 1 ; R49 := false; PC := 264
	264	[2620]	OP_LOADBOOL	R49 1 0 ; R49 := true
	265	[2622]	GETTABLE 	R50 R44 K35 ; R50 := R44["mission"]
	266	[2622]	SELF     	R50 R50 K71 ; R51 := R50; R50 := R50[0x8f89d633]
	267	[2622]	CALL     	R50 2 2 ; R50 := R50(R51)
	268	[2623]	GETUPVAL 	R51 U3 ; R51 := U3
	269	[2623]	GETTABLE 	R51 R51 K73 ; R51 := R51[0x06d055f9]
	270	[2623]	MOVE     	R52 R45 ; R52 := R45
	271	[2623]	LOADK    	R53 := 80.000000
	272	[2623]	LOADK    	R54 := 25.000000
	273	[2623]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	274	[2623]	SETTABLE 	R50 K72 R51 ; R50["minEnemyLevel"] := R51
	275	[2624]	GETUPVAL 	R51 U3 ; R51 := U3
	276	[2624]	GETTABLE 	R51 R51 K73 ; R51 := R51[0x06d055f9]
	277	[2624]	MOVE     	R52 R45 ; R52 := R45
	278	[2624]	LOADK    	R53 := 100.000000
	279	[2624]	LOADK    	R54 := 35.000000
	280	[2624]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	281	[2624]	SETTABLE 	R50 K74 R51 ; R50["maxEnemyLevel"] := R51
	282	[2625]	SETTABLE 	R50 K75 K66 ; R50["difficulty"] := 1.000000
	283	[2626]	GETUPVAL 	R51 U0 ; R51 := U0
	284	[2626]	GETTABLE 	R51 R51 K76 ; R51 := R51["KUVA_TOWER_GOAL_TAG"]
	285	[2626]	SETTABLE 	R50 K55 R51 ; R50["goalTag"] := R51
	286	[2627]	SETTABLE 	R50 K77 R47 ; R50["periodicMissionTag"] := R47
	287	[2628]	GETUPVAL 	R51 U0 ; R51 := U0
	288	[2628]	GETTABLE 	R51 R51 K2 ; R51 := R51["KUVA_TOWER_MISSION_INTERVAL"]
	289	[2628]	SETTABLE 	R50 K78 R51 ; R50["periodicMissionCooldown"] := R51
	290	[2630]	GETTABLE 	R51 R50 K36 ; R51 := R50["missionType"]
	291	[2630]	EQ       	0 R51 K68 ; if R51 ~= 2.000000 then PC := 295
	292	[2630]	JMP      	295 ; PC := 295
	293	[2631]	SETTABLE 	R50 K79 K80 ; R50["maxWaveNum"] := 5.000000
	294	[2631]	JMP      	324 ; PC := 324
	295	[2632]	GETTABLE 	R51 R50 K36 ; R51 := R50["missionType"]
	296	[2632]	EQ       	0 R51 K47 ; if R51 ~= 8.000000 then PC := 300
	297	[2632]	JMP      	300 ; PC := 300
	298	[2633]	SETTABLE 	R50 K79 K80 ; R50["maxWaveNum"] := 5.000000
	299	[2633]	JMP      	324 ; PC := 324
	300	[2634]	GETTABLE 	R51 R50 K36 ; R51 := R50["missionType"]
	301	[2634]	EQ       	0 R51 K46 ; if R51 ~= 13.000000 then PC := 305
	302	[2634]	JMP      	305 ; PC := 305
	303	[2635]	SETTABLE 	R50 K79 K68 ; R50["maxWaveNum"] := 2.000000
	304	[2635]	JMP      	324 ; PC := 324
	305	[2636]	GETTABLE 	R51 R50 K36 ; R51 := R50["missionType"]
	306	[2636]	EQ       	0 R51 K81 ; if R51 ~= 17.000000 then PC := 310
	307	[2636]	JMP      	310 ; PC := 310
	308	[2637]	SETTABLE 	R50 K79 K68 ; R50["maxWaveNum"] := 2.000000
	309	[2637]	JMP      	324 ; PC := 324
	310	[2638]	GETTABLE 	R51 R50 K36 ; R51 := R50["missionType"]
	311	[2638]	EQ       	0 R51 K82 ; if R51 ~= 7.000000 then PC := 315
	312	[2638]	JMP      	315 ; PC := 315
	313	[2639]	SETTABLE 	R50 K79 K68 ; R50["maxWaveNum"] := 2.000000
	314	[2639]	JMP      	324 ; PC := 324
	315	[2640]	GETTABLE 	R51 R50 K36 ; R51 := R50["missionType"]
	316	[2640]	EQ       	0 R51 K83 ; if R51 ~= 4.000000 then PC := 320
	317	[2640]	JMP      	320 ; PC := 320
	318	[2641]	SETTABLE 	R50 K79 K68 ; R50["maxWaveNum"] := 2.000000
	319	[2641]	JMP      	324 ; PC := 324
	320	[2642]	GETTABLE 	R51 R50 K36 ; R51 := R50["missionType"]
	321	[2642]	EQ       	0 R51 K53 ; if R51 ~= 32.000000 then PC := 324
	322	[2642]	JMP      	324 ; PC := 324
	323	[2643]	SETTABLE 	R50 K79 K66 ; R50["maxWaveNum"] := 1.000000
	324	[2646]	GETGLOBAL	R51 K84 ; R51 := 0x84883f05
	325	[2646]	GETTABLE 	R52 R50 K85 ; R52 := R50["seed"]
	326	[2646]	GETUPVAL 	R53 U0 ; R53 := U0
	327	[2646]	GETTABLE 	R53 R53 K86 ; R53 := R53[0xb53a8957]
	328	[2646]	CALL     	R53 1 2 ; R53 := R53()
	329	[2646]	MOD      	R53 R53 K87 ; R53 := R53 % 24.000000
	330	[2646]	CALL     	R51 3 1 ; R51(R52,R53)
	331	[2647]	GETGLOBAL	R51 K88 ; R51 := 0xffd438ab
	332	[2647]	CALL     	R51 1 2 ; R51 := R51()
	333	[2647]	SETTABLE 	R50 K85 R51 ; R50[0xa01111a5] := R51
	334	[2650]	TEST     	R45 0 ; if not R45 then PC := 341
	335	[2650]	JMP      	341 ; PC := 341
	336	[2651]	GETTABLE 	R51 R50 K89 ; R51 := R50["missionReward"]
	337	[2651]	GETUPVAL 	R52 U5 ; R52 := U5
	338	[2651]	GETTABLE 	R52 R52 K91 ; R52 := R52["hard"]
	339	[2651]	SETTABLE 	R51 K90 R52 ; R51["randomizedItems"] := R52
	340	[2651]	JMP      	345 ; PC := 345
	341	[2653]	GETTABLE 	R51 R50 K89 ; R51 := R50["missionReward"]
	342	[2653]	GETUPVAL 	R52 U5 ; R52 := U5
	343	[2653]	GETTABLE 	R52 R52 K92 ; R52 := R52["easy"]
	344	[2653]	SETTABLE 	R51 K90 R52 ; R51["randomizedItems"] := R52
	345	[2656]	GETGLOBAL	R51 K6 ; R51 := _T
	346	[2656]	GETTABLE 	R51 R51 K7 ; R51 := R51["CachedGhostTowerMissions"]
	347	[2656]	NEWTABLE 	R52 0 5 ; R52 := {}
	348	[2656]	SETTABLE 	R52 K93 R50 ; R52[0xc1dee03f] := R50
	349	[2656]	TESTSET  	R53 R5 1 ; if R5 then PC := 352 else R53 := R5 
	350	[2656]	JMP      	352 ; PC := 352
	351	[2656]	MOVE     	R53 R3 ; R53 := R3
	352	[2656]	SETTABLE 	R52 K94 R53 ; R52[0x5bced4c4] := R53
	353	[2656]	SETTABLE 	R52 K95 R49 ; R52[0x55f27c30] := R49
	354	[2656]	SETTABLE 	R52 K96 R7 ; R52[0xbe190284] := R7
	355	[2656]	SETTABLE 	R52 K97 R45 ; R52[0x67b221fa] := R45
	356	[2656]	SETTABLE 	R51 R48 R52 ; R51[R48] := R52
	357	[2659]	GETUPVAL 	R51 U4 ; R51 := U4
	358	[2659]	EQ       	0 R43 R51 ; if R43 ~= R51 then PC := 361
	359	[2659]	JMP      	361 ; PC := 361
	360	[2660]	JMP      	363 ; PC := 363
	361	[2615]	TFORLOOP 	R40 2 ; R43,R44 := R40(R41,R42); if R43 ~= nil then begin PC = 236; R42 := R43 end
	362	[2661]	JMP      	236 ; PC := 236
	363	[2664]	RETURN   	R2 2 ; return R2 
	364	[2665]	RETURN   	R0 1 ; return 

function #73 <?:2667,2797> (399 instructions, 1596 bytes at 00000160FC14E580)
1 param, 64 slots, 5 upvalues, 0 locals, 115 constants, 0 functions
	1	[2669]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2669]	GETTABLE 	R1 R1 K0 ; R1 := R1["ELITE_ALERT_MISSION_INTERVAL"]
	3	[2669]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2669]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xa01111a5]
	5	[2669]	CALL     	R2 1 2 ; R2 := R2()
	6	[2669]	GETUPVAL 	R3 U0 ; R3 := U0
	7	[2669]	GETTABLE 	R3 R3 K0 ; R3 := R3["ELITE_ALERT_MISSION_INTERVAL"]
	8	[2669]	MOD      	R2 R2 R3 ; R2 := R2 % R3
	9	[2669]	SUB      	R1 R1 R2 ; R1 := R1 - R2
	10	[2670]	GETGLOBAL	R2 K2 ; R2 := 0x34291f5c
	11	[2670]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x9718be96]
	12	[2670]	GETUPVAL 	R3 U0 ; R3 := U0
	13	[2670]	GETTABLE 	R3 R3 K0 ; R3 := R3["ELITE_ALERT_MISSION_INTERVAL"]
	14	[2670]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[2672]	GETUPVAL 	R3 U1 ; R3 := U1
	16	[2672]	GETTABLE 	R3 R3 K4 ; R3 := R3["mWorldStateLastEliteAlertSeed"]
	17	[2672]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 20
	18	[2672]	JMP      	20 ; PC := 20
	19	[2673]	RETURN   	R1 2 ; return R1 
	20	[2676]	GETUPVAL 	R3 U1 ; R3 := U1
	21	[2676]	SETTABLE 	R3 K4 R2 ; R3["mWorldStateLastEliteAlertSeed"] := R2
	22	[2677]	GETGLOBAL	R3 K5 ; R3 := 0x4f6851ff
	23	[2677]	MOVE     	R4 R2 ; R4 := R2
	24	[2677]	CALL     	R3 2 1 ; R3(R4)
	25	[2679]	GETGLOBAL	R3 K6 ; R3 := _T
	26	[2679]	NEWTABLE 	R4 0 0 ; R4 := {}
	27	[2679]	SETTABLE 	R3 K7 R4 ; R3["CachedEliteAlertMissions"] := R4
	28	[2681]	GETUPVAL 	R3 U0 ; R3 := U0
	29	[2681]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x5e35d4d6]
	30	[2681]	CALL     	R3 1 2 ; R3 := R3()
	31	[2682]	SELF     	R4 R3 K9 ; R5 := R3; R4 := R3[0xc1dee03f]
	32	[2682]	CALL     	R4 2 2 ; R4 := R4(R5)
	33	[2683]	GETGLOBAL	R5 K10 ; R5 := 0x5bced4c4
	34	[2683]	GETTABLE 	R5 R5 K11 ; R5 := R5[0x55f27c30]
	35	[2683]	GETGLOBAL	R6 K12 ; R6 := 0xbe190284
	36	[2683]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0x67b221fa]
	37	[2683]	CALL     	R6 2 0 ; R6,... := R6(R7)
	38	[2683]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	39	[2683]	ADD      	R5 R5 R1 ; R5 := R5 + R1
	40	[2684]	GETUPVAL 	R6 U2 ; R6 := U2
	41	[2684]	GETTABLE 	R6 R6 K14 ; R6 := R6[0x06d055f9]
	42	[2684]	GETUPVAL 	R7 U0 ; R7 := U0
	43	[2684]	GETTABLE 	R7 R7 K15 ; R7 := R7[0xb53a8957]
	44	[2684]	CALL     	R7 1 2 ; R7 := R7()
	45	[2684]	MOD      	R7 R7 K16 ; R7 := R7 % 2.000000
	46	[2684]	EQ       	1 R7 K17 ; if R7 == 0.000000 then PC := 49
	47	[2684]	JMP      	49 ; PC := 49
	48	[2684]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 49
	49	[2684]	OP_LOADBOOL	R7 1 0 ; R7 := true
	50	[2684]	GETUPVAL 	R8 U0 ; R8 := U0
	51	[2684]	GETTABLE 	R8 R8 K18 ; R8 := R8["ELITE_ALERT_PERIODIC_MISSION_TAG"]
	52	[2684]	GETUPVAL 	R9 U0 ; R9 := U0
	53	[2684]	GETTABLE 	R9 R9 K19 ; R9 := R9["ELITE_ALERT_PERIODIC_MISSION_TAG_ALT"]
	54	[2684]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	55	[2685]	SELF     	R7 R0 K20 ; R8 := R0; R7 := R0[0xc3150d06]
	56	[2685]	MOVE     	R9 R6 ; R9 := R6
	57	[2685]	GETUPVAL 	R10 U0 ; R10 := U0
	58	[2685]	GETTABLE 	R10 R10 K0 ; R10 := R10["ELITE_ALERT_MISSION_INTERVAL"]
	59	[2685]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	60	[2685]	EQ       	1 R7 K21 ; if R7 == false then PC := 63
	61	[2685]	JMP      	63 ; PC := 63
	62	[2685]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 63
	63	[2685]	OP_LOADBOOL	R7 1 0 ; R7 := true
	64	[2686]	GETUPVAL 	R8 U0 ; R8 := U0
	65	[2686]	GETTABLE 	R8 R8 K22 ; R8 := R8[0xe0628359]
	66	[2686]	CALL     	R8 1 3 ; R8,R9 := R8()
	67	[2687]	OP_LOADBOOL	R10 1 0 ; R10 := true
	68	[2688]	TEST     	R8 1 ; if R8 then PC := 98
	69	[2688]	JMP      	98 ; PC := 98
	70	[2689]	LOADK    	R11 := 1.000000
	71	[2689]	LEN      	R12 R4 ; R12 := # R4
	72	[2689]	LOADK    	R13 := 1.000000
	73	[2689]	FORPREP  	R11 97 ; R11 -= R13; PC := 97
	74	[2690]	GETUPVAL 	R15 U0 ; R15 := U0
	75	[2690]	GETTABLE 	R15 R15 K23 ; R15 := R15["REGION_ID_DOJO"]
	76	[2690]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 97
	77	[2690]	JMP      	97 ; PC := 97
	78	[2690]	GETUPVAL 	R15 U0 ; R15 := U0
	79	[2690]	GETTABLE 	R15 R15 K24 ; R15 := R15["REGION_ID_DARK_SECTOR"]
	80	[2690]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 97
	81	[2690]	JMP      	97 ; PC := 97
	82	[2690]	GETUPVAL 	R15 U0 ; R15 := U0
	83	[2690]	GETTABLE 	R15 R15 K25 ; R15 := R15["REGION_ID_DEEP_SPACE"]
	84	[2690]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 97
	85	[2690]	JMP      	97 ; PC := 97
	86	[2690]	GETUPVAL 	R15 U0 ; R15 := U0
	87	[2690]	GETTABLE 	R15 R15 K26 ; R15 := R15["REGION_ID_ZARIMAN"]
	88	[2690]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 97
	89	[2690]	JMP      	97 ; PC := 97
	90	[2690]	GETTABLE 	R15 R4 R14 ; R15 := R4[R14]
	91	[2690]	SELF     	R15 R15 K27 ; R16 := R15; R15 := R15[0x699fd1e2]
	92	[2690]	CALL     	R15 2 2 ; R15 := R15(R16)
	93	[2690]	EQ       	0 R15 K17 ; if R15 ~= 0.000000 then PC := 97
	94	[2690]	JMP      	97 ; PC := 97
	95	[2691]	OP_LOADBOOL	R10 0 0 ; R10 := false
	96	[2692]	JMP      	98 ; PC := 98
	97	[2689]	FORLOOP  	R11 74 ; R11 += R13; if R11 <= R12 then begin PC := 74; R14 := R11 end
	98	[2697]	TEST     	R8 1 ; if R8 then PC := 105
	99	[2697]	JMP      	105 ; PC := 105
	100	[2697]	TESTSET  	R15 R10 0 ; if not R10 then PC := 109 else R15 := R10 
	101	[2697]	JMP      	109 ; PC := 109
	102	[2697]	LEN      	R15 R9 ; R15 := # R9
	103	[2697]	LE       	0 R15 K29 ; if R15 > 20.000000 then PC := 107
	104	[2697]	JMP      	107 ; PC := 107
	105	[2697]	NOT      	R15 R7 ; R15 := not R7
	106	[2697]	JMP      	109 ; PC := 109
	107	[2697]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 108
	108	[2697]	OP_LOADBOOL	R15 1 0 ; R15 := true
	109	[2698]	LOADNIL  	R16 R16 ; R16 := nil
	110	[2700]	SELF     	R17 R0 K30 ; R18 := R0; R17 := R0[0x69727e0b]
	111	[2700]	CALL     	R17 2 2 ; R17 := R17(R18)
	112	[2700]	SELF     	R17 R17 K31 ; R18 := R17; R17 := R17[0x21fec8ad]
	113	[2700]	GETGLOBAL	R19 K32 ; R19 := 0x0469f296
	114	[2700]	LOADK    	R20 K33 ; R20 := "EliteAlert"
	115	[2700]	CALL     	R19 2 0 ; R19,... := R19(R20)
	116	[2700]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	117	[2701]	TEST     	R17 0 ; if not R17 then PC := 127
	118	[2701]	JMP      	127 ; PC := 127
	119	[2701]	LEN      	R18 R17 ; R18 := # R17
	120	[2701]	LT       	0 K17 R18 ; if 0.000000 >= R18 then PC := 127
	121	[2701]	JMP      	127 ; PC := 127
	122	[2702]	SELF     	R18 R3 K34 ; R19 := R3; R18 := R3[0x3ad9ed31]
	123	[2702]	GETTABLE 	R20 R17 K35 ; R20 := R17[1.000000]
	124	[2702]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	125	[2702]	MOVE     	R16 R18 ; R16 := R18
	126	[2702]	JMP      	256 ; PC := 256
	127	[2705]	NEWTABLE 	R18 0 0 ; R18 := {}
	128	[2706]	NEWTABLE 	R19 0 0 ; R19 := {}
	129	[2708]	LOADK    	R20 := 1.000000
	130	[2708]	LEN      	R21 R4 ; R21 := # R4
	131	[2708]	LOADK    	R22 := 1.000000
	132	[2708]	FORPREP  	R20 158 ; R20 -= R22; PC := 158
	133	[2709]	GETUPVAL 	R24 U0 ; R24 := U0
	134	[2709]	GETTABLE 	R24 R24 K36 ; R24 := R24["REGION_ID_FORTRESS"]
	135	[2709]	EQ       	1 R23 R24 ; if R23 == R24 then PC := 158
	136	[2709]	JMP      	158 ; PC := 158
	137	[2709]	GETUPVAL 	R24 U0 ; R24 := U0
	138	[2709]	GETTABLE 	R24 R24 K23 ; R24 := R24["REGION_ID_DOJO"]
	139	[2709]	EQ       	1 R23 R24 ; if R23 == R24 then PC := 158
	140	[2709]	JMP      	158 ; PC := 158
	141	[2709]	GETUPVAL 	R24 U0 ; R24 := U0
	142	[2709]	GETTABLE 	R24 R24 K24 ; R24 := R24["REGION_ID_DARK_SECTOR"]
	143	[2709]	EQ       	1 R23 R24 ; if R23 == R24 then PC := 158
	144	[2709]	JMP      	158 ; PC := 158
	145	[2709]	GETUPVAL 	R24 U0 ; R24 := U0
	146	[2709]	GETTABLE 	R24 R24 K25 ; R24 := R24["REGION_ID_DEEP_SPACE"]
	147	[2709]	EQ       	1 R23 R24 ; if R23 == R24 then PC := 158
	148	[2709]	JMP      	158 ; PC := 158
	149	[2709]	GETUPVAL 	R24 U0 ; R24 := U0
	150	[2709]	GETTABLE 	R24 R24 K26 ; R24 := R24["REGION_ID_ZARIMAN"]
	151	[2709]	EQ       	1 R23 R24 ; if R23 == R24 then PC := 158
	152	[2709]	JMP      	158 ; PC := 158
	153	[2710]	GETGLOBAL	R24 K37 ; R24 := 0x33bdd652
	154	[2710]	GETTABLE 	R24 R24 K38 ; R24 := R24[0x23d5322f]
	155	[2710]	MOVE     	R25 R19 ; R25 := R19
	156	[2710]	MOVE     	R26 R23 ; R26 := R23
	157	[2710]	CALL     	R24 3 1 ; R24(R25,R26)
	158	[2708]	FORLOOP  	R20 133 ; R20 += R22; if R20 <= R21 then begin PC := 133; R23 := R20 end
	159	[2714]	GETUPVAL 	R24 U2 ; R24 := U2
	160	[2714]	GETTABLE 	R24 R24 K39 ; R24 := R24[0xb8f73de1]
	161	[2714]	MOVE     	R25 R19 ; R25 := R19
	162	[2714]	CALL     	R24 2 1 ; R24(R25)
	163	[2716]	LOADNIL  	R24 R25 ; R24 := R25 := nil
	164	[2718]	OP_LOADBOOL	R26 0 0 ; R26 := false
	165	[2720]	TEST     	R26 0 ; if not R26 then PC := 185
	166	[2720]	JMP      	185 ; PC := 185
	167	[2721]	NEWTABLE 	R27 0 0 ; R27 := {}
	168	[2721]	MOVE     	R24 R27 ; R24 := R27
	169	[2722]	LOADK    	R27 := 1.000000
	170	[2722]	LEN      	R28 R19 ; R28 := # R19
	171	[2722]	LOADK    	R29 := 1.000000
	172	[2722]	FORPREP  	R27 179 ; R27 -= R29; PC := 179
	173	[2723]	GETTABLE 	R31 R19 R30 ; R31 := R19[R30]
	174	[2724]	GETGLOBAL	R32 K37 ; R32 := 0x33bdd652
	175	[2724]	GETTABLE 	R32 R32 K38 ; R32 := R32[0x23d5322f]
	176	[2724]	MOVE     	R33 R24 ; R33 := R24
	177	[2724]	GETTABLE 	R34 R4 R31 ; R34 := R4[R31]
	178	[2724]	CALL     	R32 3 1 ; R32(R33,R34)
	179	[2722]	FORLOOP  	R27 173 ; R27 += R29; if R27 <= R28 then begin PC := 173; R30 := R27 end
	180	[2726]	NEWTABLE 	R32 1 0 ; R32 := {}
	181	[2726]	LOADK    	R33 := 0.000000
	182	[2726]	SETLIST  	R32 1 1 ; R32[(1-1)*FPF+i] := R(32+i), 1 <= i <= 1
	183	[2726]	MOVE     	R25 R32 ; R25 := R32
	184	[2726]	JMP      	200 ; PC := 200
	185	[2728]	GETTABLE 	R32 R19 K35 ; R32 := R19[1.000000]
	186	[2729]	NEWTABLE 	R33 1 0 ; R33 := {}
	187	[2729]	GETTABLE 	R34 R4 R32 ; R34 := R4[R32]
	188	[2729]	SETLIST  	R33 1 1 ; R33[(1-1)*FPF+i] := R(33+i), 1 <= i <= 1
	189	[2729]	MOVE     	R24 R33 ; R24 := R33
	190	[2730]	NEWTABLE 	R33 7 0 ; R33 := {}
	191	[2730]	LOADK    	R34 := 2.000000
	192	[2730]	LOADK    	R35 := 8.000000
	193	[2730]	LOADK    	R36 := 13.000000
	194	[2730]	LOADK    	R37 := 21.000000
	195	[2730]	LOADK    	R38 := 17.000000
	196	[2730]	LOADK    	R39 := 27.000000
	197	[2730]	LOADK    	R40 := 32.000000
	198	[2730]	SETLIST  	R33 7 1 ; R33[(1-1)*FPF+i] := R(33+i), 1 <= i <= 7
	199	[2730]	MOVE     	R25 R33 ; R25 := R33
	200	[2733]	GETGLOBAL	R33 K40 ; R33 := 0xcfc01047
	201	[2733]	MOVE     	R34 R24 ; R34 := R24
	202	[2733]	CALL     	R33 2 4 ; R33,R34,R35 := R33(R34)
	203	[2733]	JMP      	249 ; PC := 249
	204	[2734]	GETGLOBAL	R38 K40 ; R38 := 0xcfc01047
	205	[2734]	GETTABLE 	R39 R37 K41 ; R39 := R37["sectors"]
	206	[2734]	CALL     	R38 2 4 ; R38,R39,R40 := R38(R39)
	207	[2734]	JMP      	247 ; PC := 247
	208	[2735]	GETGLOBAL	R43 K42 ; R43 := 0x64fb1586
	209	[2735]	GETTABLE 	R44 R42 K43 ; R44 := R42["name"]
	210	[2735]	CALL     	R43 2 2 ; R43 := R43(R44)
	211	[2737]	EQ       	1 R43 K44 ; if R43 == "" then PC := 247
	212	[2737]	JMP      	247 ; PC := 247
	213	[2738]	GETTABLE 	R44 R42 K45 ; R44 := R42["nodeType"]
	214	[2738]	EQ       	1 R44 K17 ; if R44 == 0.000000 then PC := 219
	215	[2738]	JMP      	219 ; PC := 219
	216	[2738]	GETTABLE 	R44 R42 K45 ; R44 := R42["nodeType"]
	217	[2738]	EQ       	0 R44 K46 ; if R44 ~= 4.000000 then PC := 247
	218	[2738]	JMP      	247 ; PC := 247
	219	[2739]	GETTABLE 	R44 R42 K47 ; R44 := R42["mission"]
	220	[2739]	GETTABLE 	R44 R44 K48 ; R44 := R44["goalTag"]
	221	[2739]	GETGLOBAL	R45 K49 ; R45 := EMPTY_SYMBOL
	222	[2739]	EQ       	0 R44 R45 ; if R44 ~= R45 then PC := 247
	223	[2739]	JMP      	247 ; PC := 247
	224	[2740]	GETTABLE 	R44 R42 K47 ; R44 := R42["mission"]
	225	[2740]	GETTABLE 	R44 R44 K50 ; R44 := R44["archwingRequired"]
	226	[2740]	TEST     	R44 1 ; if R44 then PC := 247
	227	[2740]	JMP      	247 ; PC := 247
	228	[2741]	GETGLOBAL	R44 K51 ; R44 := 0x7b998233
	229	[2741]	GETTABLE 	R45 R42 K47 ; R45 := R42["mission"]
	230	[2741]	GETTABLE 	R45 R45 K52 ; R45 := R45["levelOverride"]
	231	[2741]	CALL     	R44 2 2 ; R44 := R44(R45)
	232	[2741]	TEST     	R44 1 ; if R44 then PC := 247
	233	[2741]	JMP      	247 ; PC := 247
	234	[2742]	GETUPVAL 	R44 U2 ; R44 := U2
	235	[2742]	GETTABLE 	R44 R44 K53 ; R44 := R44[0x609b196e]
	236	[2742]	MOVE     	R45 R25 ; R45 := R25
	237	[2742]	GETTABLE 	R46 R42 K47 ; R46 := R42["mission"]
	238	[2742]	GETTABLE 	R46 R46 K54 ; R46 := R46["missionType"]
	239	[2742]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	240	[2742]	LT       	0 K17 R44 ; if 0.000000 >= R44 then PC := 247
	241	[2742]	JMP      	247 ; PC := 247
	242	[2744]	GETGLOBAL	R44 K37 ; R44 := 0x33bdd652
	243	[2744]	GETTABLE 	R44 R44 K38 ; R44 := R44[0x23d5322f]
	244	[2744]	MOVE     	R45 R18 ; R45 := R18
	245	[2744]	MOVE     	R46 R42 ; R46 := R42
	246	[2744]	CALL     	R44 3 1 ; R44(R45,R46)
	247	[2734]	TFORLOOP 	R38 2 ; R41,R42 := R38(R39,R40); if R41 ~= nil then begin PC = 208; R40 := R41 end
	248	[2745]	JMP      	208 ; PC := 208
	249	[2733]	TFORLOOP 	R33 2 ; R36,R37 := R33(R34,R35); if R36 ~= nil then begin PC = 204; R35 := R36 end
	250	[2746]	JMP      	204 ; PC := 204
	251	[2749]	GETUPVAL 	R44 U2 ; R44 := U2
	252	[2749]	GETTABLE 	R44 R44 K39 ; R44 := R44[0xb8f73de1]
	253	[2749]	MOVE     	R45 R18 ; R45 := R18
	254	[2749]	CALL     	R44 2 1 ; R44(R45)
	255	[2750]	GETTABLE 	R16 R18 K35 ; R16 := R18[1.000000]
	256	[2754]	TEST     	R16 1 ; if R16 then PC := 260
	257	[2754]	JMP      	260 ; PC := 260
	258	[2755]	LOADNIL  	R44 R44 ; R44 := nil
	259	[2755]	RETURN   	R44 2 ; return R44 
	260	[2758]	GETGLOBAL	R44 K42 ; R44 := 0x64fb1586
	261	[2758]	GETTABLE 	R45 R16 K43 ; R45 := R16["name"]
	262	[2758]	CALL     	R44 2 2 ; R44 := R44(R45)
	263	[2760]	GETTABLE 	R45 R16 K47 ; R45 := R16["mission"]
	264	[2760]	SELF     	R45 R45 K55 ; R46 := R45; R45 := R45[0x8f89d633]
	265	[2760]	CALL     	R45 2 2 ; R45 := R45(R46)
	266	[2762]	SELF     	R46 R45 K56 ; R47 := R45; R46 := R45[0xa76123ac]
	267	[2762]	CALL     	R46 2 1 ; R46(R47)
	268	[2763]	SELF     	R46 R45 K57 ; R47 := R45; R46 := R45[0x1a812eb5]
	269	[2763]	CALL     	R46 2 1 ; R46(R47)
	270	[2764]	SETTABLE 	R45 K58 K59 ; R45["minEnemyLevel"] := 60.000000
	271	[2765]	SETTABLE 	R45 K60 K61 ; R45["maxEnemyLevel"] := 80.000000
	272	[2766]	SETTABLE 	R45 K62 K35 ; R45["difficulty"] := 1.000000
	273	[2767]	SETTABLE 	R45 K63 K64 ; R45["maxSuitReq"] := true
	274	[2768]	SETTABLE 	R45 K65 R6 ; R45["periodicMissionTag"] := R6
	275	[2769]	GETUPVAL 	R46 U0 ; R46 := U0
	276	[2769]	GETTABLE 	R46 R46 K0 ; R46 := R46["ELITE_ALERT_MISSION_INTERVAL"]
	277	[2769]	SETTABLE 	R45 K66 R46 ; R45["periodicMissionCooldown"] := R46
	278	[2770]	GETGLOBAL	R46 K68 ; R46 := 0x0032441c
	279	[2770]	GETTABLE 	R46 R46 K69 ; R46 := R46["UITexture_EliteAlert"]
	280	[2770]	SETTABLE 	R45 K67 R46 ; R45[0x00000003] := R46
	281	[2772]	GETTABLE 	R46 R45 K54 ; R46 := R45["missionType"]
	282	[2772]	EQ       	0 R46 K70 ; if R46 ~= 8.000000 then PC := 291
	283	[2772]	JMP      	291 ; PC := 291
	284	[2772]	GETTABLE 	R46 R16 K71 ; R46 := R16["region"]
	285	[2772]	GETUPVAL 	R47 U0 ; R47 := U0
	286	[2772]	GETTABLE 	R47 R47 K72 ; R47 := R47["REGION_ID_MOON"]
	287	[2772]	EQ       	1 R46 R47 ; if R46 == R47 then PC := 291
	288	[2772]	JMP      	291 ; PC := 291
	289	[2773]	GETUPVAL 	R46 U3 ; R46 := U3
	290	[2773]	SETTABLE 	R45 K73 R46 ; R45["vipAgent"] := R46
	291	[2776]	GETTABLE 	R46 R45 K50 ; R46 := R45["archwingRequired"]
	292	[2776]	TEST     	R46 0 ; if not R46 then PC := 296
	293	[2776]	JMP      	296 ; PC := 296
	294	[2776]	GETTABLE 	R46 R45 K74 ; R46 := R45["isSharkwingMission"]
	295	[2776]	NOT      	R46 R46 ; R46 := not R46
	296	[2777]	TEST     	R46 0 ; if not R46 then PC := 304
	297	[2777]	JMP      	304 ; PC := 304
	298	[2778]	GETTABLE 	R47 R45 K58 ; R47 := R45["minEnemyLevel"]
	299	[2778]	DIV      	R47 R47 K16 ; R47 := R47 / 2.000000
	300	[2778]	SETTABLE 	R45 K58 R47 ; R45["minEnemyLevel"] := R47
	301	[2779]	GETTABLE 	R47 R45 K60 ; R47 := R45["maxEnemyLevel"]
	302	[2779]	DIV      	R47 R47 K16 ; R47 := R47 / 2.000000
	303	[2779]	SETTABLE 	R45 K60 R47 ; R45["maxEnemyLevel"] := R47
	304	[2782]	GETGLOBAL	R47 K75 ; R47 := 0x84883f05
	305	[2782]	GETTABLE 	R48 R45 K76 ; R48 := R45["seed"]
	306	[2782]	GETUPVAL 	R49 U0 ; R49 := U0
	307	[2782]	GETTABLE 	R49 R49 K15 ; R49 := R49[0xb53a8957]
	308	[2782]	CALL     	R49 1 2 ; R49 := R49()
	309	[2782]	MOD      	R49 R49 K77 ; R49 := R49 % 24.000000
	310	[2782]	CALL     	R47 3 1 ; R47(R48,R49)
	311	[2783]	GETGLOBAL	R47 K78 ; R47 := 0x0997dbe6
	312	[2783]	GETGLOBAL	R48 K79 ; R48 := 0x0c5e62f9
	313	[2783]	LOADK    	R49 := 0.000000
	314	[2783]	LOADK    	R50 K80 ; R50 := 1000000.000000
	315	[2783]	CALL     	R48 3 0 ; R48,... := R48(R49,R50)
	316	[2783]	CALL     	R47 0 2 ; R47 := R47(R48,...)
	317	[2783]	SETTABLE 	R45 K76 R47 ; R45["seed"] := R47
	318	[2785]	GETTABLE 	R47 R45 K81 ; R47 := R45["missionReward"]
	319	[2785]	SETTABLE 	R47 K82 K83 ; R47["credits"] := 50000.000000
	320	[2786]	GETTABLE 	R47 R45 K81 ; R47 := R45["missionReward"]
	321	[2786]	NEWTABLE 	R48 0 0 ; R48 := {}
	322	[2786]	GETGLOBAL	R49 K28 ; R49 := 0x6c97a788
	323	[2786]	GETTABLE 	R49 R49 K85 ; R49 := R49[0x925e2bbb]
	324	[2786]	GETUPVAL 	R50 U4 ; R50 := U4
	325	[2786]	LOADK    	R51 := 1.000000
	326	[2786]	CALL     	R49 3 0 ; R49,... := R49(R50,R51)
	327	[2786]	SETLIST  	R48 0 1 ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 0
	328	[2786]	SETTABLE 	R47 K84 R48 ; R47["countedItems"] := R48
	329	[2787]	GETTABLE 	R47 R45 K81 ; R47 := R45["missionReward"]
	330	[2787]	GETGLOBAL	R48 K87 ; R48 := 0xb009bbc6
	331	[2787]	GETGLOBAL	R49 K88 ; R49 := 0xa94df70b
	332	[2787]	SELF     	R49 R49 K89 ; R50 := R49; R49 := R49[0xc3b3ec6b]
	333	[2787]	CALL     	R49 2 0 ; R49,... := R49(R50)
	334	[2787]	CALL     	R48 0 2 ; R48 := R48(R49,...)
	335	[2787]	SETTABLE 	R47 K86 R48 ; R47["randomizedItems"] := R48
	336	[2789]	SELF     	R47 R45 K90 ; R48 := R45; R47 := R45[0xafd5ace5]
	337	[2789]	LOADK    	R49 := 19.000000
	338	[2789]	LOADK    	R50 := 3.000000
	339	[2789]	LOADK    	R51 := 10000.000000
	340	[2789]	GETGLOBAL	R52 K92 ; R52 := gTennoAvatarType
	341	[2789]	LOADNIL  	R53 R53 ; R53 := nil
	342	[2789]	LOADK    	R54 := 25.000000
	343	[2789]	GETGLOBAL	R55 K49 ; R55 := EMPTY_SYMBOL
	344	[2789]	CALL     	R47 9 1 ; R47(R48,R49,R50,R51,R52,R53,R54,R55)
	345	[2791]	GETUPVAL 	R47 U0 ; R47 := U0
	346	[2791]	GETTABLE 	R47 R47 K93 ; R47 := R47[0x67839867]
	347	[2791]	GETGLOBAL	R48 K94 ; R48 := 0x76ea806b
	348	[2791]	SELF     	R48 R48 K95 ; R49 := R48; R48 := R48[0x3f3ae64c]
	349	[2791]	LOADK    	R50 := 0.000000
	350	[2791]	CALL     	R48 3 2 ; R48 := R48(R49,R50)
	351	[2791]	SELF     	R48 R48 K96 ; R49 := R48; R48 := R48[0x5ca33548]
	352	[2791]	CALL     	R48 2 2 ; R48 := R48(R49)
	353	[2791]	MOVE     	R49 R45 ; R49 := R45
	354	[2791]	CALL     	R47 3 9 ; R47,R48,R49,R50,R51,R52,R53,R54 := R47(R48,R49)
	355	[2793]	GETGLOBAL	R55 K6 ; R55 := _T
	356	[2793]	GETTABLE 	R55 R55 K7 ; R55 := R55["CachedEliteAlertMissions"]
	357	[2793]	NEWTABLE 	R56 0 10 ; R56 := {}
	358	[2793]	SETTABLE 	R56 K97 R45 ; R56["mMissionInfo"] := R45
	359	[2793]	TESTSET  	R57 R15 0 ; if not R15 then PC := 362 else R57 := R15 
	360	[2793]	JMP      	362 ; PC := 362
	361	[2793]	MOVE     	R57 R8 ; R57 := R8
	362	[2793]	SETTABLE 	R56 K98 R57 ; R56["mUnlocked"] := R57
	363	[2793]	SETTABLE 	R56 K99 R15 ; R56["mVisible"] := R15
	364	[2793]	TESTSET  	R57 R15 0 ; if not R15 then PC := 367 else R57 := R15 
	365	[2793]	JMP      	367 ; PC := 367
	366	[2793]	MOVE     	R57 R8 ; R57 := R8
	367	[2793]	SETTABLE 	R56 K100 R57 ; R56["mShowInStarChart"] := R57
	368	[2793]	SETTABLE 	R56 K101 R5 ; R56["mExpiry"] := R5
	369	[2793]	SETTABLE 	R56 K102 R47 ; R56["mSuitStoreItem"] := R47
	370	[2793]	GETTABLE 	R57 R50 K104 ; R57 := R50["label"]
	371	[2793]	SETTABLE 	R56 K103 R57 ; R56["mSuitMod"] := R57
	372	[2793]	SETTABLE 	R56 K105 R51 ; R56["mWeaponStoreItem"] := R51
	373	[2793]	GETTABLE 	R57 R54 K104 ; R57 := R54["label"]
	374	[2793]	SETTABLE 	R56 K106 R57 ; R56["mWeaponMod"] := R57
	375	[2793]	SETTABLE 	R56 K107 R7 ; R56["mCompleted"] := R7
	376	[2793]	SETTABLE 	R55 R44 R56 ; R55[R44] := R56
	377	[2794]	GETGLOBAL	R55 K108 ; R55 := 0x3d106989
	378	[2794]	LOADK    	R56 K109 ; R56 := "EliteAlertMission at "
	379	[2794]	MOVE     	R57 R44 ; R57 := R44
	380	[2794]	LOADK    	R58 K110 ; R58 := " ("
	381	[2794]	GETGLOBAL	R59 K111 ; R59 := 0x603636ad
	382	[2794]	GETTABLE 	R60 R16 K71 ; R60 := R16["region"]
	383	[2794]	ADD      	R60 R60 K35 ; R60 := R60 + 1.000000
	384	[2794]	GETTABLE 	R60 R4 R60 ; R60 := R4[R60]
	385	[2794]	GETTABLE 	R60 R60 K43 ; R60 := R60["name"]
	386	[2794]	OP_LOADBOOL	R61 0 0 ; R61 := false
	387	[2794]	CALL     	R59 3 2 ; R59 := R59(R60,R61)
	388	[2794]	LOADK    	R60 K112 ; R60 := " - "
	389	[2794]	GETGLOBAL	R61 K111 ; R61 := 0x603636ad
	390	[2794]	GETGLOBAL	R62 K42 ; R62 := 0x64fb1586
	391	[2794]	GETTABLE 	R63 R16 K113 ; R63 := R16["locTag"]
	392	[2794]	CALL     	R62 2 2 ; R62 := R62(R63)
	393	[2794]	OP_LOADBOOL	R63 0 0 ; R63 := false
	394	[2794]	CALL     	R61 3 2 ; R61 := R61(R62,R63)
	395	[2794]	LOADK    	R62 K114 ; R62 := ")"
	396	[2794]	CONCAT   	R56 R56 R62 ; R56 := R56 .. R57 .. R58 .. R59 .. R60 .. R61 .. R62
	397	[2794]	CALL     	R55 2 1 ; R55(R56)
	398	[2796]	RETURN   	R1 2 ; return R1 
	399	[2797]	RETURN   	R0 1 ; return 

function #74 <?:2799,2902> (272 instructions, 1088 bytes at 00000160FC14F4E0)
1 param, 51 slots, 3 upvalues, 0 locals, 61 constants, 0 functions
	1	[2801]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[2801]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x9718be96]
	3	[2801]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2801]	GETTABLE 	R2 R2 K2 ; R2 := R2["NIGHTMARE_MISSION_INTERVAL"]
	5	[2801]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2802]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[2802]	GETTABLE 	R2 R2 K3 ; R2 := R2["mWorldStateLastNightmareSeed"]
	8	[2802]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 11
	9	[2802]	JMP      	11 ; PC := 11
	10	[2803]	RETURN   	R0 1 ; return 
	11	[2806]	GETUPVAL 	R2 U1 ; R2 := U1
	12	[2806]	SETTABLE 	R2 K3 R1 ; R2[0x0469f296] := R1
	13	[2808]	GETGLOBAL	R2 K4 ; R2 := _T
	14	[2808]	NEWTABLE 	R3 0 0 ; R3 := {}
	15	[2808]	SETTABLE 	R2 K5 R3 ; R2[0x3ad9ed31] := R3
	16	[2809]	GETGLOBAL	R2 K6 ; R2 := 0x1239e0a2
	17	[2809]	CALL     	R2 1 2 ; R2 := R2()
	18	[2809]	TEST     	R2 0 ; if not R2 then PC := 21
	19	[2809]	JMP      	21 ; PC := 21
	20	[2810]	RETURN   	R0 1 ; return 
	21	[2812]	GETGLOBAL	R2 K7 ; R2 := 0x9ba7909f
	22	[2812]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xbf9494fc]
	23	[2812]	LOADK    	R4 K9 ; R4 := "LotusGameRules.AlwaysNightmare"
	24	[2812]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	25	[2813]	OP_LOADBOOL	R3 0 0 ; R3 := false
	26	[2815]	GETUPVAL 	R4 U0 ; R4 := U0
	27	[2815]	GETTABLE 	R4 R4 K10 ; R4 := R4[0x5e35d4d6]
	28	[2815]	CALL     	R4 1 2 ; R4 := R4()
	29	[2816]	SELF     	R5 R4 K11 ; R6 := R4; R5 := R4[0xc1dee03f]
	30	[2816]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[2817]	SELF     	R6 R4 K12 ; R7 := R4; R6 := R4[0xd13b47be]
	32	[2817]	CALL     	R6 2 2 ; R6 := R6(R7)
	33	[2818]	NEWTABLE 	R7 0 0 ; R7 := {}
	34	[2819]	LOADK    	R8 := 1.000000
	35	[2819]	LEN      	R9 R5 ; R9 := # R5
	36	[2819]	LOADK    	R10 := 1.000000
	37	[2819]	FORPREP  	R8 43 ; R8 -= R10; PC := 43
	38	[2820]	GETGLOBAL	R12 K13 ; R12 := 0x33bdd652
	39	[2820]	GETTABLE 	R12 R12 K14 ; R12 := R12[0x23d5322f]
	40	[2820]	MOVE     	R13 R7 ; R13 := R7
	41	[2820]	NEWTABLE 	R14 0 0 ; R14 := {}
	42	[2820]	CALL     	R12 3 1 ; R12(R13,R14)
	43	[2819]	FORLOOP  	R8 38 ; R8 += R10; if R8 <= R9 then begin PC := 38; R11 := R8 end
	44	[2824]	LOADK    	R12 := 1.000000
	45	[2824]	LEN      	R13 R6 ; R13 := # R6
	46	[2824]	LOADK    	R14 := 1.000000
	47	[2824]	FORPREP  	R12 59 ; R12 -= R14; PC := 59
	48	[2825]	GETGLOBAL	R16 K15 ; R16 := 0xce225efa
	49	[2825]	LOADK    	R17 := 0.000000
	50	[2825]	CALL     	R16 2 1 ; R16(R17)
	51	[2826]	GETTABLE 	R16 R6 R15 ; R16 := R6[R15]
	52	[2828]	GETTABLE 	R17 R16 K16 ; R17 := R16["region"]
	53	[2828]	ADD      	R17 R17 K17 ; R17 := R17 + 1.000000
	54	[2829]	GETGLOBAL	R18 K13 ; R18 := 0x33bdd652
	55	[2829]	GETTABLE 	R18 R18 K14 ; R18 := R18[0x23d5322f]
	56	[2829]	GETTABLE 	R19 R7 R17 ; R19 := R7[R17]
	57	[2829]	MOVE     	R20 R16 ; R20 := R16
	58	[2829]	CALL     	R18 3 1 ; R18(R19,R20)
	59	[2824]	FORLOOP  	R12 48 ; R12 += R14; if R12 <= R13 then begin PC := 48; R15 := R12 end
	60	[2833]	GETGLOBAL	R18 K18 ; R18 := 0x4f6851ff
	61	[2833]	MOVE     	R19 R1 ; R19 := R1
	62	[2833]	CALL     	R18 2 1 ; R18(R19)
	63	[2834]	LOADK    	R18 := 1.000000
	64	[2834]	LEN      	R19 R5 ; R19 := # R5
	65	[2834]	LOADK    	R20 := 1.000000
	66	[2834]	FORPREP  	R18 75 ; R18 -= R20; PC := 75
	67	[2835]	GETTABLE 	R22 R7 R21 ; R22 := R7[R21]
	68	[2835]	LEN      	R22 R22 ; R22 := # R22
	69	[2835]	LT       	0 K19 R22 ; if 0.000000 >= R22 then PC := 75
	70	[2835]	JMP      	75 ; PC := 75
	71	[2836]	GETUPVAL 	R22 U2 ; R22 := U2
	72	[2836]	GETTABLE 	R22 R22 K20 ; R22 := R22[0xb8f73de1]
	73	[2836]	GETTABLE 	R23 R7 R21 ; R23 := R7[R21]
	74	[2836]	CALL     	R22 2 1 ; R22(R23)
	75	[2834]	FORLOOP  	R18 67 ; R18 += R20; if R18 <= R19 then begin PC := 67; R21 := R18 end
	76	[2840]	NEWTABLE 	R22 0 0 ; R22 := {}
	77	[2843]	LOADK    	R23 := 1.000000
	78	[2843]	LEN      	R24 R5 ; R24 := # R5
	79	[2843]	LOADK    	R25 := 1.000000
	80	[2843]	FORPREP  	R23 237 ; R23 -= R25; PC := 237
	81	[2844]	GETTABLE 	R27 R5 R26 ; R27 := R5[R26]
	82	[2844]	SELF     	R27 R27 K21 ; R28 := R27; R27 := R27[0x699fd1e2]
	83	[2844]	CALL     	R27 2 2 ; R27 := R27(R28)
	84	[2844]	EQ       	1 R27 K23 ; if R27 == 2.000000 then PC := 91
	85	[2844]	JMP      	91 ; PC := 91
	86	[2844]	TESTSET  	R27 R3 1 ; if R3 then PC := 92 else R27 := R3 
	87	[2844]	JMP      	92 ; PC := 92
	88	[2844]	MOVE     	R27 R2 ; R27 := R2
	89	[2844]	JMP      	92 ; PC := 92
	90	[2844]	OP_LOADBOOL	R27 0 1 ; R27 := false; PC := 91
	91	[2844]	OP_LOADBOOL	R27 1 0 ; R27 := true
	92	[2845]	LOADK    	R28 K24 ; R28 := "NightmareRegion"
	93	[2845]	MOVE     	R29 R26 ; R29 := R26
	94	[2845]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	95	[2846]	GETUPVAL 	R29 U0 ; R29 := U0
	96	[2846]	GETTABLE 	R29 R29 K25 ; R29 := R29["REGION_ID_DOJO"]
	97	[2846]	EQ       	1 R26 R29 ; if R26 == R29 then PC := 119
	98	[2846]	JMP      	119 ; PC := 119
	99	[2846]	GETUPVAL 	R29 U0 ; R29 := U0
	100	[2846]	GETTABLE 	R29 R29 K26 ; R29 := R29["REGION_ID_DARK_SECTOR"]
	101	[2846]	EQ       	1 R26 R29 ; if R26 == R29 then PC := 119
	102	[2846]	JMP      	119 ; PC := 119
	103	[2846]	GETUPVAL 	R29 U0 ; R29 := U0
	104	[2846]	GETTABLE 	R29 R29 K27 ; R29 := R29["REGION_ID_DEEP_SPACE"]
	105	[2846]	EQ       	1 R26 R29 ; if R26 == R29 then PC := 119
	106	[2846]	JMP      	119 ; PC := 119
	107	[2846]	GETUPVAL 	R29 U0 ; R29 := U0
	108	[2846]	GETTABLE 	R29 R29 K28 ; R29 := R29["REGION_ID_ZARIMAN"]
	109	[2846]	EQ       	1 R26 R29 ; if R26 == R29 then PC := 119
	110	[2846]	JMP      	119 ; PC := 119
	111	[2846]	SELF     	R29 R0 K29 ; R30 := R0; R29 := R0[0xc3150d06]
	112	[2846]	GETGLOBAL	R31 K30 ; R31 := 0x0469f296
	113	[2846]	MOVE     	R32 R28 ; R32 := R28
	114	[2846]	CALL     	R31 2 2 ; R31 := R31(R32)
	115	[2846]	GETUPVAL 	R32 U0 ; R32 := U0
	116	[2846]	GETTABLE 	R32 R32 K2 ; R32 := R32["NIGHTMARE_MISSION_INTERVAL"]
	117	[2846]	CALL     	R29 4 2 ; R29 := R29(R30,R31,R32)
	118	[2846]	JMP      	121 ; PC := 121
	119	[2846]	OP_LOADBOOL	R29 0 1 ; R29 := false; PC := 120
	120	[2846]	OP_LOADBOOL	R29 1 0 ; R29 := true
	121	[2848]	TEST     	R27 0 ; if not R27 then PC := 237
	122	[2848]	JMP      	237 ; PC := 237
	123	[2848]	TEST     	R29 0 ; if not R29 then PC := 237
	124	[2848]	JMP      	237 ; PC := 237
	125	[2848]	GETTABLE 	R30 R7 R26 ; R30 := R7[R26]
	126	[2848]	LEN      	R30 R30 ; R30 := # R30
	127	[2848]	LT       	0 K19 R30 ; if 0.000000 >= R30 then PC := 237
	128	[2848]	JMP      	237 ; PC := 237
	129	[2849]	LOADNIL  	R30 R30 ; R30 := nil
	130	[2850]	TEST     	R2 0 ; if not R2 then PC := 135
	131	[2850]	JMP      	135 ; PC := 135
	132	[2851]	GETTABLE 	R31 R7 R26 ; R31 := R7[R26]
	133	[2851]	LEN      	R30 R31 ; R30 := # R31
	134	[2851]	JMP      	136 ; PC := 136
	135	[2853]	LOADK    	R30 := 1.000000
	136	[2856]	LOADK    	R31 := 1.000000
	137	[2856]	GETTABLE 	R32 R7 R26 ; R32 := R7[R26]
	138	[2856]	LEN      	R32 R32 ; R32 := # R32
	139	[2856]	LOADK    	R33 := 1.000000
	140	[2856]	FORPREP  	R31 236 ; R31 -= R33; PC := 236
	141	[2857]	GETTABLE 	R35 R7 R26 ; R35 := R7[R26]
	142	[2857]	GETTABLE 	R35 R35 R34 ; R35 := R35[R34]
	143	[2858]	GETGLOBAL	R36 K31 ; R36 := 0x64fb1586
	144	[2858]	GETTABLE 	R37 R35 K32 ; R37 := R35["name"]
	145	[2858]	CALL     	R36 2 2 ; R36 := R36(R37)
	146	[2860]	EQ       	1 R36 K33 ; if R36 == "" then PC := 236
	147	[2860]	JMP      	236 ; PC := 236
	148	[2861]	GETGLOBAL	R37 K34 ; R37 := 0x7b998233
	149	[2861]	GETTABLE 	R38 R35 K35 ; R38 := R35["mission"]
	150	[2861]	GETTABLE 	R38 R38 K36 ; R38 := R38["levelOverride"]
	151	[2861]	CALL     	R37 2 2 ; R37 := R37(R38)
	152	[2861]	TEST     	R37 1 ; if R37 then PC := 236
	153	[2861]	JMP      	236 ; PC := 236
	154	[2862]	GETTABLE 	R37 R35 K37 ; R37 := R35["nodeType"]
	155	[2862]	EQ       	0 R37 K19 ; if R37 ~= 0.000000 then PC := 236
	156	[2862]	JMP      	236 ; PC := 236
	157	[2863]	GETGLOBAL	R37 K4 ; R37 := _T
	158	[2863]	GETTABLE 	R37 R37 K38 ; R37 := R37["CachedSortieMissions"]
	159	[2863]	GETTABLE 	R37 R37 R36 ; R37 := R37[R36]
	160	[2863]	EQ       	0 R37 K39 ; if R37 ~= nil then PC := 236
	161	[2863]	JMP      	236 ; PC := 236
	162	[2864]	GETGLOBAL	R37 K4 ; R37 := _T
	163	[2864]	GETTABLE 	R37 R37 K40 ; R37 := R37["CachedActiveMissions"]
	164	[2864]	GETTABLE 	R37 R37 R36 ; R37 := R37[R36]
	165	[2864]	EQ       	0 R37 K39 ; if R37 ~= nil then PC := 236
	166	[2864]	JMP      	236 ; PC := 236
	167	[2865]	GETGLOBAL	R37 K4 ; R37 := _T
	168	[2865]	GETTABLE 	R37 R37 K41 ; R37 := R37["CachedAlerts"]
	169	[2865]	GETTABLE 	R37 R37 R36 ; R37 := R37[R36]
	170	[2865]	EQ       	0 R37 K39 ; if R37 ~= nil then PC := 236
	171	[2865]	JMP      	236 ; PC := 236
	172	[2866]	GETGLOBAL	R37 K4 ; R37 := _T
	173	[2866]	GETTABLE 	R37 R37 K42 ; R37 := R37["CachedInvasionInfo"]
	174	[2866]	GETTABLE 	R37 R37 R36 ; R37 := R37[R36]
	175	[2866]	EQ       	0 R37 K39 ; if R37 ~= nil then PC := 236
	176	[2866]	JMP      	236 ; PC := 236
	177	[2867]	GETGLOBAL	R37 K43 ; R37 := 0x0032441c
	178	[2867]	GETTABLE 	R37 R37 K44 ; R37 := R37["CachedGoalInfo"]
	179	[2867]	GETTABLE 	R37 R37 R36 ; R37 := R37[R36]
	180	[2867]	EQ       	0 R37 K39 ; if R37 ~= nil then PC := 236
	181	[2867]	JMP      	236 ; PC := 236
	182	[2868]	GETGLOBAL	R37 K43 ; R37 := 0x0032441c
	183	[2868]	GETTABLE 	R37 R37 K45 ; R37 := R37["MergedGoalNodes"]
	184	[2868]	GETTABLE 	R37 R37 R36 ; R37 := R37[R36]
	185	[2868]	EQ       	0 R37 K39 ; if R37 ~= nil then PC := 236
	186	[2868]	JMP      	236 ; PC := 236
	187	[2869]	GETGLOBAL	R37 K4 ; R37 := _T
	188	[2869]	GETTABLE 	R37 R37 K46 ; R37 := R37["CachedSyndicateMissions"]
	189	[2869]	GETTABLE 	R37 R37 R36 ; R37 := R37[R36]
	190	[2869]	EQ       	0 R37 K39 ; if R37 ~= nil then PC := 236
	191	[2869]	JMP      	236 ; PC := 236
	192	[2870]	GETTABLE 	R37 R35 K35 ; R37 := R35["mission"]
	193	[2870]	GETTABLE 	R37 R37 K47 ; R37 := R37["archwingRequired"]
	194	[2870]	TEST     	R37 0 ; if not R37 then PC := 200
	195	[2870]	JMP      	200 ; PC := 200
	196	[2870]	GETTABLE 	R37 R35 K35 ; R37 := R35["mission"]
	197	[2870]	GETTABLE 	R37 R37 K48 ; R37 := R37["isSharkwingMission"]
	198	[2870]	TEST     	R37 0 ; if not R37 then PC := 236
	199	[2870]	JMP      	236 ; PC := 236
	200	[2871]	GETTABLE 	R37 R35 K35 ; R37 := R35["mission"]
	201	[2871]	GETTABLE 	R37 R37 K49 ; R37 := R37["missionType"]
	202	[2871]	EQ       	1 R37 K50 ; if R37 == 22.000000 then PC := 236
	203	[2871]	JMP      	236 ; PC := 236
	204	[2872]	GETTABLE 	R37 R35 K35 ; R37 := R35["mission"]
	205	[2872]	GETTABLE 	R37 R37 K49 ; R37 := R37["missionType"]
	206	[2872]	EQ       	1 R37 K51 ; if R37 == 28.000000 then PC := 236
	207	[2872]	JMP      	236 ; PC := 236
	208	[2873]	GETTABLE 	R37 R35 K35 ; R37 := R35["mission"]
	209	[2873]	GETTABLE 	R37 R37 K49 ; R37 := R37["missionType"]
	210	[2873]	EQ       	1 R37 K52 ; if R37 == 36.000000 then PC := 236
	211	[2873]	JMP      	236 ; PC := 236
	212	[2874]	GETTABLE 	R37 R35 K35 ; R37 := R35["mission"]
	213	[2874]	GETTABLE 	R37 R37 K49 ; R37 := R37["missionType"]
	214	[2874]	EQ       	1 R37 K53 ; if R37 == 30.000000 then PC := 236
	215	[2874]	JMP      	236 ; PC := 236
	216	[2875]	GETTABLE 	R37 R35 K35 ; R37 := R35["mission"]
	217	[2875]	GETTABLE 	R37 R37 K49 ; R37 := R37["missionType"]
	218	[2875]	EQ       	1 R37 K54 ; if R37 == 31.000000 then PC := 236
	219	[2875]	JMP      	236 ; PC := 236
	220	[2877]	SELF     	R37 R4 K55 ; R38 := R4; R37 := R4[0x3ad9ed31]
	221	[2877]	GETTABLE 	R39 R35 K32 ; R39 := R35["name"]
	222	[2877]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	223	[2877]	GETTABLE 	R37 R37 K35 ; R37 := R37["mission"]
	224	[2877]	GETTABLE 	R37 R37 K56 ; R37 := R37["faction"]
	225	[2878]	GETTABLE 	R38 R35 K35 ; R38 := R35["mission"]
	226	[2878]	GETTABLE 	R38 R38 K56 ; R38 := R38["faction"]
	227	[2878]	EQ       	0 R38 R37 ; if R38 ~= R37 then PC := 236
	228	[2878]	JMP      	236 ; PC := 236
	229	[2879]	LEN      	R38 R22 ; R38 := # R22
	230	[2879]	ADD      	R38 R38 K17 ; R38 := R38 + 1.000000
	231	[2879]	SETTABLE 	R22 R38 R35 ; R22[R38] := R35
	232	[2880]	SUB      	R30 R30 K17 ; R30 := R30 - 1.000000
	233	[2881]	EQ       	0 R30 K19 ; if R30 ~= 0.000000 then PC := 236
	234	[2881]	JMP      	236 ; PC := 236
	235	[2882]	JMP      	237 ; PC := 237
	236	[2856]	FORLOOP  	R31 141 ; R31 += R33; if R31 <= R32 then begin PC := 141; R34 := R31 end
	237	[2843]	FORLOOP  	R23 81 ; R23 += R25; if R23 <= R24 then begin PC := 81; R26 := R23 end
	238	[2890]	SELF     	R38 R0 K57 ; R39 := R0; R38 := R0[0x69727e0b]
	239	[2890]	CALL     	R38 2 2 ; R38 := R38(R39)
	240	[2890]	SELF     	R38 R38 K58 ; R39 := R38; R38 := R38[0x21fec8ad]
	241	[2890]	GETGLOBAL	R40 K30 ; R40 := 0x0469f296
	242	[2890]	LOADK    	R41 K59 ; R41 := "Nightmare"
	243	[2890]	CALL     	R40 2 0 ; R40,... := R40(R41)
	244	[2890]	CALL     	R38 0 2 ; R38 := R38(R39,...)
	245	[2891]	LOADK    	R39 := 1.000000
	246	[2891]	LEN      	R40 R38 ; R40 := # R38
	247	[2891]	LOADK    	R41 := 1.000000
	248	[2891]	FORPREP  	R39 255 ; R39 -= R41; PC := 255
	249	[2892]	LEN      	R43 R22 ; R43 := # R22
	250	[2892]	ADD      	R43 R43 K17 ; R43 := R43 + 1.000000
	251	[2892]	SELF     	R44 R4 K55 ; R45 := R4; R44 := R4[0x3ad9ed31]
	252	[2892]	GETTABLE 	R46 R38 R42 ; R46 := R38[R42]
	253	[2892]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	254	[2892]	SETTABLE 	R22 R43 R44 ; R22[R43] := R44
	255	[2891]	FORLOOP  	R39 249 ; R39 += R41; if R39 <= R40 then begin PC := 249; R42 := R39 end
	256	[2895]	LOADK    	R43 := 1.000000
	257	[2895]	LEN      	R44 R22 ; R44 := # R22
	258	[2895]	LOADK    	R45 := 1.000000
	259	[2895]	FORPREP  	R43 271 ; R43 -= R45; PC := 271
	260	[2896]	GETTABLE 	R47 R22 R46 ; R47 := R22[R46]
	261	[2897]	GETUPVAL 	R48 U0 ; R48 := U0
	262	[2897]	GETTABLE 	R48 R48 K60 ; R48 := R48[0x860b26c6]
	263	[2897]	GETTABLE 	R49 R47 K35 ; R49 := R47["mission"]
	264	[2897]	CALL     	R48 2 2 ; R48 := R48(R49)
	265	[2898]	GETGLOBAL	R49 K31 ; R49 := 0x64fb1586
	266	[2898]	GETTABLE 	R50 R47 K32 ; R50 := R47["name"]
	267	[2898]	CALL     	R49 2 2 ; R49 := R49(R50)
	268	[2900]	GETGLOBAL	R50 K4 ; R50 := _T
	269	[2900]	GETTABLE 	R50 R50 K5 ; R50 := R50["CachedSkullNodes"]
	270	[2900]	SETTABLE 	R50 R49 R48 ; R50[R49] := R48
	271	[2895]	FORLOOP  	R43 260 ; R43 += R45; if R43 <= R44 then begin PC := 260; R46 := R43 end
	272	[2902]	RETURN   	R0 1 ; return 

function #75 <?:2904,3026> (329 instructions, 1316 bytes at 00000160FC14F5C0)
1 param, 52 slots, 3 upvalues, 0 locals, 79 constants, 0 functions
	1	[2905]	GETGLOBAL	R1 K0 ; R1 := 0xce225efa
	2	[2905]	LOADK    	R2 := 0.000000
	3	[2905]	CALL     	R1 2 1 ; R1(R2)
	4	[2907]	GETGLOBAL	R1 K1 ; R1 := _T
	5	[2907]	NEWTABLE 	R2 0 0 ; R2 := {}
	6	[2907]	SETTABLE 	R1 K2 R2 ; R1[0x6c97a788] := R2
	7	[2909]	GETGLOBAL	R1 K3 ; R1 := 0xffd438ab
	8	[2909]	CALL     	R1 1 2 ; R1 := R1()
	9	[2910]	GETGLOBAL	R2 K4 ; R2 := 0x34291f5c
	10	[2910]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x9718be96]
	11	[2910]	GETUPVAL 	R3 U0 ; R3 := U0
	12	[2910]	GETTABLE 	R3 R3 K6 ; R3 := R3["HARD_MODE_DAILY_MISSION_INTERVAL"]
	13	[2910]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[2911]	GETGLOBAL	R3 K7 ; R3 := 0x4f6851ff
	15	[2911]	MOVE     	R4 R2 ; R4 := R2
	16	[2911]	CALL     	R3 2 1 ; R3(R4)
	17	[2913]	GETUPVAL 	R3 U0 ; R3 := U0
	18	[2913]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x5e35d4d6]
	19	[2913]	CALL     	R3 1 2 ; R3 := R3()
	20	[2914]	SELF     	R4 R3 K9 ; R5 := R3; R4 := R3[0xc1dee03f]
	21	[2914]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[2915]	NEWTABLE 	R5 0 0 ; R5 := {}
	23	[2916]	LOADK    	R6 := 1.000000
	24	[2916]	LEN      	R7 R4 ; R7 := # R4
	25	[2916]	LOADK    	R8 := 1.000000
	26	[2916]	FORPREP  	R6 97 ; R6 -= R8; PC := 97
	27	[2917]	GETTABLE 	R10 R4 R9 ; R10 := R4[R9]
	28	[2918]	GETUPVAL 	R11 U0 ; R11 := U0
	29	[2918]	GETTABLE 	R11 R11 K10 ; R11 := R11["REGION_ID_DOJO"]
	30	[2918]	EQ       	1 R9 R11 ; if R9 == R11 then PC := 97
	31	[2918]	JMP      	97 ; PC := 97
	32	[2918]	GETUPVAL 	R11 U0 ; R11 := U0
	33	[2918]	GETTABLE 	R11 R11 K11 ; R11 := R11["REGION_ID_DARK_SECTOR"]
	34	[2918]	EQ       	1 R9 R11 ; if R9 == R11 then PC := 97
	35	[2918]	JMP      	97 ; PC := 97
	36	[2918]	GETUPVAL 	R11 U0 ; R11 := U0
	37	[2918]	GETTABLE 	R11 R11 K12 ; R11 := R11["REGION_ID_DEEP_SPACE"]
	38	[2918]	EQ       	1 R9 R11 ; if R9 == R11 then PC := 97
	39	[2918]	JMP      	97 ; PC := 97
	40	[2918]	GETUPVAL 	R11 U0 ; R11 := U0
	41	[2918]	GETTABLE 	R11 R11 K13 ; R11 := R11["REGION_ID_ZARIMAN"]
	42	[2918]	EQ       	1 R9 R11 ; if R9 == R11 then PC := 97
	43	[2918]	JMP      	97 ; PC := 97
	44	[2919]	LEN      	R11 R5 ; R11 := # R5
	45	[2919]	ADD      	R11 R11 K14 ; R11 := R11 + 1.000000
	46	[2920]	NEWTABLE 	R12 0 0 ; R12 := {}
	47	[2920]	SETTABLE 	R5 R11 R12 ; R5[R11] := R12
	48	[2922]	GETGLOBAL	R12 K15 ; R12 := 0xcfc01047
	49	[2922]	GETTABLE 	R13 R10 K16 ; R13 := R10["sectors"]
	50	[2922]	CALL     	R12 2 4 ; R12,R13,R14 := R12(R13)
	51	[2922]	JMP      	91 ; PC := 91
	52	[2923]	GETTABLE 	R17 R16 K17 ; R17 := R16["name"]
	53	[2924]	GETTABLE 	R18 R16 K18 ; R18 := R16["mission"]
	54	[2925]	GETTABLE 	R19 R18 K19 ; R19 := R18["missionType"]
	55	[2927]	GETGLOBAL	R20 K20 ; R20 := EMPTY_SYMBOL
	56	[2927]	EQ       	1 R17 R20 ; if R17 == R20 then PC := 91
	57	[2927]	JMP      	91 ; PC := 91
	58	[2928]	GETTABLE 	R20 R16 K21 ; R20 := R16["nodeType"]
	59	[2928]	EQ       	1 R20 K23 ; if R20 == 0.000000 then PC := 64
	60	[2928]	JMP      	64 ; PC := 64
	61	[2928]	GETTABLE 	R20 R16 K21 ; R20 := R16["nodeType"]
	62	[2928]	EQ       	0 R20 K24 ; if R20 ~= 4.000000 then PC := 91
	63	[2928]	JMP      	91 ; PC := 91
	64	[2929]	GETTABLE 	R20 R18 K25 ; R20 := R18["goalTag"]
	65	[2929]	GETGLOBAL	R21 K20 ; R21 := EMPTY_SYMBOL
	66	[2929]	EQ       	0 R20 R21 ; if R20 ~= R21 then PC := 91
	67	[2929]	JMP      	91 ; PC := 91
	68	[2930]	GETGLOBAL	R20 K26 ; R20 := 0x7b998233
	69	[2930]	GETTABLE 	R21 R18 K27 ; R21 := R18["levelOverride"]
	70	[2930]	CALL     	R20 2 2 ; R20 := R20(R21)
	71	[2930]	TEST     	R20 1 ; if R20 then PC := 91
	72	[2930]	JMP      	91 ; PC := 91
	73	[2931]	EQ       	1 R19 K28 ; if R19 == 31.000000 then PC := 91
	74	[2931]	JMP      	91 ; PC := 91
	75	[2932]	EQ       	1 R19 K29 ; if R19 == 22.000000 then PC := 91
	76	[2932]	JMP      	91 ; PC := 91
	77	[2933]	EQ       	1 R19 K30 ; if R19 == 36.000000 then PC := 91
	78	[2933]	JMP      	91 ; PC := 91
	79	[2934]	EQ       	1 R19 K31 ; if R19 == 28.000000 then PC := 91
	80	[2934]	JMP      	91 ; PC := 91
	81	[2936]	GETGLOBAL	R20 K32 ; R20 := 0x33bdd652
	82	[2936]	GETTABLE 	R20 R20 K33 ; R20 := R20[0x23d5322f]
	83	[2936]	GETTABLE 	R21 R5 R11 ; R21 := R5[R11]
	84	[2936]	NEWTABLE 	R22 0 2 ; R22 := {}
	85	[2936]	GETGLOBAL	R23 K35 ; R23 := 0x64fb1586
	86	[2936]	MOVE     	R24 R17 ; R24 := R17
	87	[2936]	CALL     	R23 2 2 ; R23 := R23(R24)
	88	[2936]	SETTABLE 	R22 K34 R23 ; R22["nodeName"] := R23
	89	[2936]	SETTABLE 	R22 K19 R19 ; R22["missionType"] := R19
	90	[2936]	CALL     	R20 3 1 ; R20(R21,R22)
	91	[2922]	TFORLOOP 	R12 2 ; R15,R16 := R12(R13,R14); if R15 ~= nil then begin PC = 52; R14 := R15 end
	92	[2937]	JMP      	52 ; PC := 52
	93	[2940]	GETUPVAL 	R20 U1 ; R20 := U1
	94	[2940]	GETTABLE 	R20 R20 K36 ; R20 := R20[0xb8f73de1]
	95	[2940]	GETTABLE 	R21 R5 R11 ; R21 := R5[R11]
	96	[2940]	CALL     	R20 2 1 ; R20(R21)
	97	[2916]	FORLOOP  	R6 27 ; R6 += R8; if R6 <= R7 then begin PC := 27; R9 := R6 end
	98	[2944]	LOADK    	R20 := 5.000000
	99	[2945]	GETUPVAL 	R21 U1 ; R21 := U1
	100	[2945]	GETTABLE 	R21 R21 K37 ; R21 := R21[0x06d055f9]
	101	[2945]	GETUPVAL 	R22 U0 ; R22 := U0
	102	[2945]	GETTABLE 	R22 R22 K38 ; R22 := R22[0xe3ee0517]
	103	[2945]	CALL     	R22 1 2 ; R22 := R22()
	104	[2945]	MOD      	R22 R22 K39 ; R22 := R22 % 2.000000
	105	[2945]	EQ       	1 R22 K23 ; if R22 == 0.000000 then PC := 108
	106	[2945]	JMP      	108 ; PC := 108
	107	[2945]	OP_LOADBOOL	R22 0 1 ; R22 := false; PC := 108
	108	[2945]	OP_LOADBOOL	R22 1 0 ; R22 := true
	109	[2945]	LOADK    	R23 := 0.000000
	110	[2945]	MOVE     	R24 R20 ; R24 := R20
	111	[2945]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	112	[2947]	LOADK    	R22 := 1.000000
	113	[2947]	LOADK    	R23 := 10.000000
	114	[2947]	LOADK    	R24 := 1.000000
	115	[2947]	FORPREP  	R22 146 ; R22 -= R24; PC := 146
	116	[2948]	GETUPVAL 	R26 U1 ; R26 := U1
	117	[2948]	GETTABLE 	R26 R26 K36 ; R26 := R26[0xb8f73de1]
	118	[2948]	MOVE     	R27 R5 ; R27 := R5
	119	[2948]	CALL     	R26 2 1 ; R26(R27)
	120	[2951]	LOADK    	R26 := 0.000000
	121	[2952]	LOADK    	R27 := 1.000000
	122	[2952]	MOVE     	R28 R20 ; R28 := R20
	123	[2952]	LOADK    	R29 := 1.000000
	124	[2952]	FORPREP  	R27 142 ; R27 -= R29; PC := 142
	125	[2953]	GETTABLE 	R31 R5 R30 ; R31 := R5[R30]
	126	[2953]	TEST     	R31 0 ; if not R31 then PC := 142
	127	[2953]	JMP      	142 ; PC := 142
	128	[2953]	GETTABLE 	R31 R5 R30 ; R31 := R5[R30]
	129	[2953]	LEN      	R31 R31 ; R31 := # R31
	130	[2953]	LT       	0 K23 R31 ; if 0.000000 >= R31 then PC := 142
	131	[2953]	JMP      	142 ; PC := 142
	132	[2954]	GETTABLE 	R31 R5 R30 ; R31 := R5[R30]
	133	[2954]	GETTABLE 	R31 R31 K14 ; R31 := R31[1.000000]
	134	[2954]	GETTABLE 	R31 R31 K19 ; R31 := R31["missionType"]
	135	[2955]	EQ       	1 R31 K14 ; if R31 == 1.000000 then PC := 141
	136	[2955]	JMP      	141 ; PC := 141
	137	[2955]	EQ       	1 R31 K40 ; if R31 == 5.000000 then PC := 141
	138	[2955]	JMP      	141 ; PC := 141
	139	[2955]	EQ       	0 R31 K41 ; if R31 ~= 3.000000 then PC := 142
	140	[2955]	JMP      	142 ; PC := 142
	141	[2956]	ADD      	R26 R26 K14 ; R26 := R26 + 1.000000
	142	[2952]	FORLOOP  	R27 125 ; R27 += R29; if R27 <= R28 then begin PC := 125; R30 := R27 end
	143	[2961]	LT       	0 R26 K41 ; if R26 >= 3.000000 then PC := 146
	144	[2961]	JMP      	146 ; PC := 146
	145	[2962]	JMP      	147 ; PC := 147
	146	[2947]	FORLOOP  	R22 116 ; R22 += R24; if R22 <= R23 then begin PC := 116; R25 := R22 end
	147	[2966]	SELF     	R32 R0 K42 ; R33 := R0; R32 := R0[0x69727e0b]
	148	[2966]	CALL     	R32 2 2 ; R32 := R32(R33)
	149	[2966]	SELF     	R32 R32 K43 ; R33 := R32; R32 := R32[0x21fec8ad]
	150	[2966]	GETGLOBAL	R34 K44 ; R34 := 0x0469f296
	151	[2966]	LOADK    	R35 K45 ; R35 := "SteelPath"
	152	[2966]	CALL     	R34 2 0 ; R34,... := R34(R35)
	153	[2966]	CALL     	R32 0 2 ; R32 := R32(R33,...)
	154	[2967]	TEST     	R32 0 ; if not R32 then PC := 184
	155	[2967]	JMP      	184 ; PC := 184
	156	[2967]	LEN      	R33 R32 ; R33 := # R32
	157	[2967]	LT       	0 K23 R33 ; if 0.000000 >= R33 then PC := 184
	158	[2967]	JMP      	184 ; PC := 184
	159	[2968]	LOADK    	R33 := 1.000000
	160	[2968]	LEN      	R34 R32 ; R34 := # R32
	161	[2968]	LOADK    	R35 := 1.000000
	162	[2968]	FORPREP  	R33 181 ; R33 -= R35; PC := 181
	163	[2969]	SELF     	R37 R3 K46 ; R38 := R3; R37 := R3[0x3ad9ed31]
	164	[2969]	GETGLOBAL	R39 K44 ; R39 := 0x0469f296
	165	[2969]	GETTABLE 	R40 R32 R36 ; R40 := R32[R36]
	166	[2969]	CALL     	R39 2 0 ; R39,... := R39(R40)
	167	[2969]	CALL     	R37 0 2 ; R37 := R37(R38,...)
	168	[2970]	ADD      	R38 R20 R36 ; R38 := R20 + R36
	169	[2970]	NEWTABLE 	R39 1 1 ; R39 := {}
	170	[2970]	NEWTABLE 	R40 0 2 ; R40 := {}
	171	[2970]	GETGLOBAL	R41 K35 ; R41 := 0x64fb1586
	172	[2970]	GETTABLE 	R42 R37 K17 ; R42 := R37["name"]
	173	[2970]	CALL     	R41 2 2 ; R41 := R41(R42)
	174	[2970]	SETTABLE 	R40 K34 R41 ; R40["nodeName"] := R41
	175	[2970]	GETTABLE 	R41 R37 K18 ; R41 := R37["mission"]
	176	[2970]	GETTABLE 	R41 R41 K19 ; R41 := R41["missionType"]
	177	[2970]	SETTABLE 	R40 K19 R41 ; R40["missionType"] := R41
	178	[2970]	SETTABLE 	R39 K47 K48 ; R39["forceVisible"] := true
	179	[2970]	SETLIST  	R39 1 1 ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 1
	180	[2970]	SETTABLE 	R5 R38 R39 ; R5[R38] := R39
	181	[2968]	FORLOOP  	R33 163 ; R33 += R35; if R33 <= R34 then begin PC := 163; R36 := R33 end
	182	[2972]	LEN      	R38 R32 ; R38 := # R32
	183	[2972]	ADD      	R20 R20 R38 ; R20 := R20 + R38
	184	[2975]	LOADK    	R38 := 1.000000
	185	[2975]	MOVE     	R39 R20 ; R39 := R20
	186	[2975]	LOADK    	R40 := 1.000000
	187	[2975]	FORPREP  	R38 311 ; R38 -= R40; PC := 311
	188	[2977]	GETTABLE 	R42 R5 R41 ; R42 := R5[R41]
	189	[2977]	TEST     	R42 0 ; if not R42 then PC := 311
	190	[2977]	JMP      	311 ; PC := 311
	191	[2977]	GETTABLE 	R42 R5 R41 ; R42 := R5[R41]
	192	[2977]	LEN      	R42 R42 ; R42 := # R42
	193	[2977]	LT       	0 K23 R42 ; if 0.000000 >= R42 then PC := 311
	194	[2977]	JMP      	311 ; PC := 311
	195	[2979]	GETTABLE 	R42 R5 R41 ; R42 := R5[R41]
	196	[2979]	GETTABLE 	R42 R42 K14 ; R42 := R42[1.000000]
	197	[2980]	GETTABLE 	R43 R42 K34 ; R43 := R42["nodeName"]
	198	[2981]	GETUPVAL 	R44 U0 ; R44 := U0
	199	[2981]	GETTABLE 	R44 R44 K49 ; R44 := R44["HARD_MODE_LEVEL_MODIFIER"]
	200	[2982]	GETGLOBAL	R45 K44 ; R45 := 0x0469f296
	201	[2982]	LOADK    	R46 K50 ; R46 := "HardDaily"
	202	[2982]	ADD      	R47 R41 R21 ; R47 := R41 + R21
	203	[2982]	CONCAT   	R46 R46 R47 ; R46 := R46 .. R47
	204	[2982]	CALL     	R45 2 2 ; R45 := R45(R46)
	205	[2984]	GETGLOBAL	R46 K1 ; R46 := _T
	206	[2984]	GETTABLE 	R46 R46 K2 ; R46 := R46["CachedHardModeDailyMissions"]
	207	[2984]	NEWTABLE 	R47 0 2 ; R47 := {}
	208	[2985]	SELF     	R48 R3 K46 ; R49 := R3; R48 := R3[0x3ad9ed31]
	209	[2985]	GETGLOBAL	R50 K44 ; R50 := 0x0469f296
	210	[2985]	MOVE     	R51 R43 ; R51 := R43
	211	[2985]	CALL     	R50 2 0 ; R50,... := R50(R51)
	212	[2985]	CALL     	R48 0 2 ; R48 := R48(R49,...)
	213	[2985]	GETTABLE 	R48 R48 K18 ; R48 := R48["mission"]
	214	[2985]	SELF     	R48 R48 K51 ; R49 := R48; R48 := R48[0x8f89d633]
	215	[2985]	CALL     	R48 2 2 ; R48 := R48(R49)
	216	[2985]	SETTABLE 	R47 K18 R48 ; R47["mission"] := R48
	217	[2986]	SELF     	R48 R0 K53 ; R49 := R0; R48 := R0[0xc3150d06]
	218	[2986]	MOVE     	R50 R45 ; R50 := R45
	219	[2986]	GETUPVAL 	R51 U0 ; R51 := U0
	220	[2986]	GETTABLE 	R51 R51 K6 ; R51 := R51["HARD_MODE_DAILY_MISSION_INTERVAL"]
	221	[2986]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	222	[2986]	TEST     	R48 1 ; if R48 then PC := 225
	223	[2986]	JMP      	225 ; PC := 225
	224	[2986]	GETTABLE 	R48 R42 K47 ; R48 := R42["forceVisible"]
	225	[2986]	SETTABLE 	R47 K52 R48 ; R47["isVisible"] := R48
	226	[2987]	SETTABLE 	R46 R43 R47 ; R46[R43] := R47
	227	[2989]	GETGLOBAL	R46 K1 ; R46 := _T
	228	[2989]	GETTABLE 	R46 R46 K2 ; R46 := R46["CachedHardModeDailyMissions"]
	229	[2989]	GETTABLE 	R46 R46 R43 ; R46 := R46[R43]
	230	[2989]	GETTABLE 	R46 R46 K18 ; R46 := R46["mission"]
	231	[2991]	SETTABLE 	R46 K54 K14 ; R46["tier"] := 1.000000
	232	[2992]	GETTABLE 	R47 R46 K55 ; R47 := R46["missionReward"]
	233	[2992]	NEWTABLE 	R48 0 0 ; R48 := {}
	234	[2992]	GETGLOBAL	R49 K22 ; R49 := 0x6c97a788
	235	[2992]	GETTABLE 	R49 R49 K57 ; R49 := R49[0x925e2bbb]
	236	[2992]	GETUPVAL 	R50 U2 ; R50 := U2
	237	[2992]	GETTABLE 	R50 R50 K58 ; R50 := R50["DailyMissionReward"]
	238	[2992]	LOADK    	R51 := 5.000000
	239	[2992]	CALL     	R49 3 0 ; R49,... := R49(R50,R51)
	240	[2992]	SETLIST  	R48 0 1 ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 0
	241	[2992]	SETTABLE 	R47 K56 R48 ; R47["countedItems"] := R48
	242	[2994]	GETTABLE 	R47 R46 K59 ; R47 := R46["archwingRequired"]
	243	[2994]	TEST     	R47 0 ; if not R47 then PC := 264
	244	[2994]	JMP      	264 ; PC := 264
	245	[2994]	GETTABLE 	R47 R46 K60 ; R47 := R46["isSharkwingMission"]
	246	[2994]	TEST     	R47 1 ; if R47 then PC := 264
	247	[2994]	JMP      	264 ; PC := 264
	248	[2994]	GETTABLE 	R47 R46 K19 ; R47 := R46["missionType"]
	249	[2994]	EQ       	1 R47 K31 ; if R47 == 28.000000 then PC := 264
	250	[2994]	JMP      	264 ; PC := 264
	251	[2994]	GETGLOBAL	R47 K61 ; R47 := 0x7f5022cf
	252	[2994]	GETTABLE 	R47 R47 K62 ; R47 := R47[0xa5c556b9]
	253	[2994]	GETGLOBAL	R48 K35 ; R48 := 0x64fb1586
	254	[2994]	GETTABLE 	R49 R46 K27 ; R49 := R46["levelOverride"]
	255	[2994]	SELF     	R49 R49 K63 ; R50 := R49; R49 := R49[0xed4e0128]
	256	[2994]	CALL     	R49 2 0 ; R49,... := R49(R50)
	257	[2994]	CALL     	R48 0 2 ; R48 := R48(R49,...)
	258	[2994]	LOADK    	R49 K64 ; R49 := "GrineerFortress"
	259	[2994]	CALL     	R47 3 2 ; R47 := R47(R48,R49)
	260	[2994]	EQ       	0 R47 K65 ; if R47 ~= nil then PC := 264
	261	[2994]	JMP      	264 ; PC := 264
	262	[2995]	GETUPVAL 	R47 U0 ; R47 := U0
	263	[2995]	GETTABLE 	R44 R47 K66 ; R44 := R47["HARD_MODE_ARCHWING_LEVEL_MODIFIER"]
	264	[2997]	GETTABLE 	R47 R46 K67 ; R47 := R46["minEnemyLevel"]
	265	[2997]	ADD      	R47 R47 R44 ; R47 := R47 + R44
	266	[2997]	SETTABLE 	R46 K67 R47 ; R46["minEnemyLevel"] := R47
	267	[2998]	GETTABLE 	R47 R46 K68 ; R47 := R46["maxEnemyLevel"]
	268	[2998]	ADD      	R47 R47 R44 ; R47 := R47 + R44
	269	[2998]	SETTABLE 	R46 K68 R47 ; R46["maxEnemyLevel"] := R47
	270	[3000]	GETGLOBAL	R47 K44 ; R47 := 0x0469f296
	271	[3000]	MOVE     	R48 R45 ; R48 := R45
	272	[3000]	CALL     	R47 2 2 ; R47 := R47(R48)
	273	[3000]	SETTABLE 	R46 K69 R47 ; R46["periodicMissionTag"] := R47
	274	[3001]	GETUPVAL 	R47 U0 ; R47 := U0
	275	[3001]	GETTABLE 	R47 R47 K6 ; R47 := R47["HARD_MODE_DAILY_MISSION_INTERVAL"]
	276	[3001]	SETTABLE 	R46 K70 R47 ; R46["periodicMissionCooldown"] := R47
	277	[3003]	GETTABLE 	R47 R46 K19 ; R47 := R46["missionType"]
	278	[3003]	EQ       	0 R47 K39 ; if R47 ~= 2.000000 then PC := 282
	279	[3003]	JMP      	282 ; PC := 282
	280	[3004]	SETTABLE 	R46 K71 K40 ; R46["maxWaveNum"] := 5.000000
	281	[3004]	JMP      	311 ; PC := 311
	282	[3005]	GETTABLE 	R47 R46 K19 ; R47 := R46["missionType"]
	283	[3005]	EQ       	0 R47 K72 ; if R47 ~= 8.000000 then PC := 287
	284	[3005]	JMP      	287 ; PC := 287
	285	[3006]	SETTABLE 	R46 K71 K40 ; R46["maxWaveNum"] := 5.000000
	286	[3006]	JMP      	311 ; PC := 311
	287	[3007]	GETTABLE 	R47 R46 K19 ; R47 := R46["missionType"]
	288	[3007]	EQ       	0 R47 K73 ; if R47 ~= 13.000000 then PC := 292
	289	[3007]	JMP      	292 ; PC := 292
	290	[3008]	SETTABLE 	R46 K71 K39 ; R46["maxWaveNum"] := 2.000000
	291	[3008]	JMP      	311 ; PC := 311
	292	[3009]	GETTABLE 	R47 R46 K19 ; R47 := R46["missionType"]
	293	[3009]	EQ       	0 R47 K74 ; if R47 ~= 17.000000 then PC := 297
	294	[3009]	JMP      	297 ; PC := 297
	295	[3010]	SETTABLE 	R46 K71 K39 ; R46["maxWaveNum"] := 2.000000
	296	[3010]	JMP      	311 ; PC := 311
	297	[3011]	GETTABLE 	R47 R46 K19 ; R47 := R46["missionType"]
	298	[3011]	EQ       	0 R47 K75 ; if R47 ~= 7.000000 then PC := 302
	299	[3011]	JMP      	302 ; PC := 302
	300	[3012]	SETTABLE 	R46 K71 K39 ; R46["maxWaveNum"] := 2.000000
	301	[3012]	JMP      	311 ; PC := 311
	302	[3013]	GETTABLE 	R47 R46 K19 ; R47 := R46["missionType"]
	303	[3013]	EQ       	0 R47 K24 ; if R47 ~= 4.000000 then PC := 307
	304	[3013]	JMP      	307 ; PC := 307
	305	[3014]	SETTABLE 	R46 K71 K39 ; R46["maxWaveNum"] := 2.000000
	306	[3014]	JMP      	311 ; PC := 311
	307	[3015]	GETTABLE 	R47 R46 K19 ; R47 := R46["missionType"]
	308	[3015]	EQ       	0 R47 K76 ; if R47 ~= 32.000000 then PC := 311
	309	[3015]	JMP      	311 ; PC := 311
	310	[3016]	SETTABLE 	R46 K71 K24 ; R46["maxWaveNum"] := 4.000000
	311	[2975]	FORLOOP  	R38 188 ; R38 += R40; if R38 <= R39 then begin PC := 188; R41 := R38 end
	312	[3021]	GETGLOBAL	R47 K7 ; R47 := 0x4f6851ff
	313	[3021]	MOVE     	R48 R1 ; R48 := R1
	314	[3021]	CALL     	R47 2 1 ; R47(R48)
	315	[3023]	GETGLOBAL	R47 K1 ; R47 := _T
	316	[3023]	GETUPVAL 	R48 U0 ; R48 := U0
	317	[3023]	GETTABLE 	R48 R48 K6 ; R48 := R48["HARD_MODE_DAILY_MISSION_INTERVAL"]
	318	[3023]	GETUPVAL 	R49 U0 ; R49 := U0
	319	[3023]	GETTABLE 	R49 R49 K78 ; R49 := R49[0xa01111a5]
	320	[3023]	CALL     	R49 1 2 ; R49 := R49()
	321	[3023]	GETUPVAL 	R50 U0 ; R50 := U0
	322	[3023]	GETTABLE 	R50 R50 K6 ; R50 := R50["HARD_MODE_DAILY_MISSION_INTERVAL"]
	323	[3023]	MOD      	R49 R49 R50 ; R49 := R49 % R50
	324	[3023]	SUB      	R48 R48 R49 ; R48 := R48 - R49
	325	[3023]	SETTABLE 	R47 K77 R48 ; R47["CachedHardModeDailyMissionsExpiry"] := R48
	326	[3025]	GETGLOBAL	R47 K1 ; R47 := _T
	327	[3025]	GETTABLE 	R47 R47 K77 ; R47 := R47["CachedHardModeDailyMissionsExpiry"]
	328	[3025]	RETURN   	R47 2 ; return R47 
	329	[3026]	RETURN   	R0 1 ; return 

function #76 <?:3028,3038> (19 instructions, 76 bytes at 00000160FCF2A420)
2 params, 9 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[3029]	GETGLOBAL	R2 K0 ; R2 := mTimerMgr
	2	[3029]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xb1f4e5e1]
	3	[3029]	MOVE     	R4 R0 ; R4 := R0
	4	[3029]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	5	[3030]	TEST     	R2 0 ; if not R2 then PC := 12
	6	[3030]	JMP      	12 ; PC := 12
	7	[3032]	GETTABLE 	R3 R2 K2 ; R3 := R2["Duration"]
	8	[3032]	LT       	0 R1 R3 ; if R1 >= R3 then PC := 19
	9	[3032]	JMP      	19 ; PC := 19
	10	[3033]	SETTABLE 	R2 K2 R1 ; R2["Duration"] := R1
	11	[3034]	JMP      	19 ; PC := 19
	12	[3036]	GETGLOBAL	R3 K0 ; R3 := mTimerMgr
	13	[3036]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0xbd2e96ea]
	14	[3036]	MOVE     	R5 R1 ; R5 := R1
	15	[3036]	GETUPVAL 	R6 U0 ; R6 := U0
	16	[3036]	OP_LOADBOOL	R7 0 0 ; R7 := false
	17	[3036]	MOVE     	R8 R0 ; R8 := R0
	18	[3036]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	19	[3038]	RETURN   	R0 1 ; return 

function #77 <?:3040,3052> (26 instructions, 104 bytes at 00000160FCF2A5C0)
2 params, 7 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[3041]	TEST     	R0 0 ; if not R0 then PC := 26
	2	[3041]	JMP      	26 ; PC := 26
	3	[3042]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[3042]	SETTABLE 	R2 K0 K1 ; R2["progress"] := 1.000000
	5	[3043]	LOADNIL  	R2 R2 ; R2 := nil
	6	[3043]	SETUPVAL 	R2 U0 ; U0 := R2
	7	[3044]	GETGLOBAL	R2 K2 ; R2 := 0x76ea806b
	8	[3044]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x3f3ae64c]
	9	[3044]	LOADK    	R4 := 0.000000
	10	[3044]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	11	[3045]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	12	[3045]	MOVE     	R4 R2 ; R4 := R2
	13	[3045]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[3045]	TEST     	R3 1 ; if R3 then PC := 26
	15	[3045]	JMP      	26 ; PC := 26
	16	[3046]	SELF     	R3 R2 K5 ; R4 := R2; R3 := R2[0x80563238]
	17	[3046]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[3047]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	19	[3047]	MOVE     	R5 R3 ; R5 := R3
	20	[3047]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[3047]	TEST     	R4 1 ; if R4 then PC := 26
	22	[3047]	JMP      	26 ; PC := 26
	23	[3048]	SELF     	R4 R3 K6 ; R5 := R3; R4 := R3[0x24389ec3]
	24	[3048]	LOADK    	R6 K7 ; R6 := "OnInboxSync"
	25	[3048]	CALL     	R4 3 1 ; R4(R5,R6)
	26	[3052]	RETURN   	R0 1 ; return 

function #78 <?:3054,3062> (42 instructions, 168 bytes at 00000160FCF2A7E0)
0 params, 3 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[3055]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3055]	TEST     	R0 0 ; if not R0 then PC := 42
	3	[3055]	JMP      	42 ; PC := 42
	4	[3055]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	5	[3055]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	6	[3055]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[3056]	TEST     	R0 1 ; if R0 then PC := 42
	8	[3056]	JMP      	42 ; PC := 42
	9	[3056]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	10	[3056]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	11	[3056]	GETGLOBAL	R2 K3 ; R2 := gLotusSandBoxGameRulesType
	12	[3056]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	13	[3056]	TEST     	R0 0 ; if not R0 then PC := 21
	14	[3056]	JMP      	21 ; PC := 21
	15	[3056]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	16	[3056]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	17	[3056]	GETGLOBAL	R2 K4 ; R2 := gLotusPhotoBoothGameRulesType
	18	[3056]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	19	[3057]	TEST     	R0 0 ; if not R0 then PC := 42
	20	[3057]	JMP      	42 ; PC := 42
	21	[3057]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	22	[3057]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	23	[3057]	GETGLOBAL	R2 K5 ; R2 := gLotusGameRulesType
	24	[3057]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	25	[3057]	TEST     	R0 0 ; if not R0 then PC := 33
	26	[3057]	JMP      	33 ; PC := 33
	27	[3057]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	28	[3057]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xef893aec]
	29	[3057]	CALL     	R0 2 2 ; R0 := R0(R1)
	30	[3057]	GETTABLE 	R0 R0 K7 ; R0 := R0["missionType"]
	31	[3057]	EQ       	1 R0 K9 ; if R0 == 11.000000 then PC := 42
	32	[3057]	JMP      	42 ; PC := 42
	33	[3058]	GETGLOBAL	R0 K10 ; R0 := 0xba7dfcd2
	34	[3058]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	35	[3058]	GETGLOBAL	R2 K11 ; R2 := gLotusChallengeMgrType
	36	[3058]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	37	[3058]	TEST     	R0 0 ; if not R0 then PC := 42
	38	[3058]	JMP      	42 ; PC := 42
	39	[3060]	GETGLOBAL	R0 K10 ; R0 := 0xba7dfcd2
	40	[3060]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x83a4b16a]
	41	[3060]	CALL     	R0 2 1 ; R0(R1)
	42	[3062]	RETURN   	R0 1 ; return 

function #79 <?:3065,3074> (22 instructions, 88 bytes at 00000160FCF2AAD0)
0 params, 4 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[3066]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[3066]	GETTABLE 	R0 R0 K1 ; R0 := R0["RequiemLoader"]
	3	[3066]	TEST     	R0 0 ; if not R0 then PC := 22
	4	[3066]	JMP      	22 ; PC := 22
	5	[3067]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[3067]	GETTABLE 	R0 R0 K1 ; R0 := R0["RequiemLoader"]
	7	[3067]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xd2d3875a]
	8	[3067]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[3067]	TEST     	R0 0 ; if not R0 then PC := 17
	10	[3067]	JMP      	17 ; PC := 17
	11	[3068]	GETGLOBAL	R0 K3 ; R0 := 0x9ba7909f
	12	[3068]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x230561f1]
	13	[3068]	GETGLOBAL	R2 K5 ; R2 := 0x68fccc59
	14	[3068]	LOADK    	R3 K6 ; R3 := "RequiemMovieDone"
	15	[3068]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	16	[3068]	JMP      	22 ; PC := 22
	17	[3071]	GETGLOBAL	R0 K7 ; R0 := mTimerMgr
	18	[3071]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0xbd2e96ea]
	19	[3071]	LOADK    	R2 := 0.500000
	20	[3071]	GETUPVAL 	R3 U0 ; R3 := U0
	21	[3071]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	22	[3074]	RETURN   	R0 1 ; return 

function #80 <?:3076,3134> (137 instructions, 548 bytes at 00000160FCF2AD20)
2 params, 19 slots, 4 upvalues, 0 locals, 50 constants, 0 functions
	1	[3077]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[3077]	NEWTABLE 	R3 0 0 ; R3 := {}
	3	[3077]	SETTABLE 	R2 K1 R3 ; R2["CachedNemesisMissions"] := R3
	4	[3078]	GETGLOBAL	R2 K0 ; R2 := _T
	5	[3078]	SETTABLE 	R2 K2 K3 ; R2["CachedNemesisGenericMissionInfo"] := nil
	6	[3079]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0x600a0ad6]
	7	[3079]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[3080]	SELF     	R3 R2 K5 ; R4 := R2; R3 := R2[0xd8140b94]
	9	[3080]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[3080]	TEST     	R3 0 ; if not R3 then PC := 89
	11	[3080]	JMP      	89 ; PC := 89
	12	[3081]	GETTABLE 	R3 R2 K6 ; R3 := R2["mInfluenceNodes"]
	13	[3083]	GETUPVAL 	R4 U0 ; R4 := U0
	14	[3083]	GETTABLE 	R4 R4 K7 ; R4 := R4[0x6a965652]
	15	[3083]	MOVE     	R5 R2 ; R5 := R2
	16	[3083]	CALL     	R4 2 2 ; R4 := R4(R5)
	17	[3085]	GETGLOBAL	R5 K0 ; R5 := _T
	18	[3085]	NEWTABLE 	R6 0 3 ; R6 := {}
	19	[3086]	GETTABLE 	R7 R2 K9 ; R7 := R2["mRank"]
	20	[3086]	SETTABLE 	R6 K8 R7 ; R6["rank"] := R7
	21	[3087]	GETTABLE 	R7 R4 K11 ; R7 := R4["mFaction"]
	22	[3087]	SETTABLE 	R6 K10 R7 ; R6["faction"] := R7
	23	[3088]	GETTABLE 	R7 R4 K13 ; R7 := R4["mName"]
	24	[3088]	SETTABLE 	R6 K12 R7 ; R6["name"] := R7
	25	[3089]	SETTABLE 	R5 K2 R6 ; R5["CachedNemesisGenericMissionInfo"] := R6
	26	[3091]	LOADK    	R5 := 1.000000
	27	[3091]	LEN      	R6 R3 ; R6 := # R3
	28	[3091]	LOADK    	R7 := 1.000000
	29	[3091]	FORPREP  	R5 50 ; R5 -= R7; PC := 50
	30	[3092]	GETTABLE 	R9 R3 R8 ; R9 := R3[R8]
	31	[3092]	GETTABLE 	R9 R9 K14 ; R9 := R9["mNode"]
	32	[3093]	GETUPVAL 	R10 U1 ; R10 := U1
	33	[3093]	GETTABLE 	R10 R10 K15 ; R10 := R10[0x6c5ef17c]
	34	[3093]	MOVE     	R11 R9 ; R11 := R9
	35	[3093]	GETTABLE 	R12 R2 K9 ; R12 := R2["mRank"]
	36	[3093]	GETTABLE 	R13 R4 K11 ; R13 := R4["mFaction"]
	37	[3093]	GETTABLE 	R14 R4 K13 ; R14 := R4["mName"]
	38	[3093]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	39	[3094]	GETGLOBAL	R11 K0 ; R11 := _T
	40	[3094]	GETTABLE 	R11 R11 K1 ; R11 := R11["CachedNemesisMissions"]
	41	[3094]	SELF     	R12 R9 K16 ; R13 := R9; R12 := R9[0x6d604ba7]
	42	[3094]	CALL     	R12 2 2 ; R12 := R12(R13)
	43	[3094]	NEWTABLE 	R13 0 2 ; R13 := {}
	44	[3095]	SELF     	R14 R10 K18 ; R15 := R10; R14 := R10[0x8f89d633]
	45	[3095]	CALL     	R14 2 2 ; R14 := R14(R15)
	46	[3095]	SETTABLE 	R13 K17 R14 ; R13["mMissionInfo"] := R14
	47	[3096]	GETTABLE 	R14 R10 K20 ; R14 := R10["uniqueName"]
	48	[3096]	SETTABLE 	R13 K19 R14 ; R13["missionName"] := R14
	49	[3097]	SETTABLE 	R11 R12 R13 ; R11[R12] := R13
	50	[3091]	FORLOOP  	R5 30 ; R5 += R7; if R5 <= R6 then begin PC := 30; R8 := R5 end
	51	[3101]	GETGLOBAL	R11 K21 ; R11 := 0x0032441c
	52	[3101]	GETTABLE 	R11 R11 K22 ; R11 := R11["NumRequiemHints"]
	53	[3102]	TEST     	R11 0 ; if not R11 then PC := 84
	54	[3102]	JMP      	84 ; PC := 84
	55	[3102]	GETTABLE 	R12 R2 K23 ; R12 := R2["mHints"]
	56	[3102]	TEST     	R12 0 ; if not R12 then PC := 84
	57	[3102]	JMP      	84 ; PC := 84
	58	[3102]	GETTABLE 	R12 R2 K23 ; R12 := R2["mHints"]
	59	[3102]	LEN      	R12 R12 ; R12 := # R12
	60	[3102]	LT       	0 R11 R12 ; if R11 >= R12 then PC := 84
	61	[3102]	JMP      	84 ; PC := 84
	62	[3103]	GETGLOBAL	R12 K0 ; R12 := _T
	63	[3103]	ADD      	R13 R11 K25 ; R13 := R11 + 1.000000
	64	[3103]	SETTABLE 	R12 K24 R13 ; R12[0x3d106989] := R13
	65	[3104]	GETGLOBAL	R12 K0 ; R12 := _T
	66	[3104]	GETTABLE 	R12 R12 K26 ; R12 := R12["RequiemLoader"]
	67	[3104]	TEST     	R12 1 ; if R12 then PC := 79
	68	[3104]	JMP      	79 ; PC := 79
	69	[3105]	GETGLOBAL	R12 K0 ; R12 := _T
	70	[3105]	GETGLOBAL	R13 K27 ; R13 := 0xbd496aa1
	71	[3105]	GETTABLE 	R13 R13 K28 ; R13 := R13[0x42645da3]
	72	[3105]	NEWTABLE 	R14 0 0 ; R14 := {}
	73	[3105]	GETGLOBAL	R15 K29 ; R15 := 0x68fccc59
	74	[3105]	SELF     	R15 R15 K30 ; R16 := R15; R15 := R15[0xed4e0128]
	75	[3105]	CALL     	R15 2 0 ; R15,... := R15(R16)
	76	[3105]	SETLIST  	R14 0 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 0
	77	[3105]	CALL     	R13 2 2 ; R13 := R13(R14)
	78	[3105]	SETTABLE 	R12 K26 R13 ; R12["RequiemLoader"] := R13
	79	[3107]	GETGLOBAL	R12 K31 ; R12 := mTimerMgr
	80	[3107]	SELF     	R12 R12 K32 ; R13 := R12; R12 := R12[0xbd2e96ea]
	81	[3107]	LOADK    	R14 := 3.000000
	82	[3107]	GETUPVAL 	R15 U2 ; R15 := U2
	83	[3107]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	84	[3109]	GETGLOBAL	R12 K21 ; R12 := 0x0032441c
	85	[3109]	GETTABLE 	R13 R2 K23 ; R13 := R2["mHints"]
	86	[3109]	LEN      	R13 R13 ; R13 := # R13
	87	[3109]	SETTABLE 	R12 K22 R13 ; R12[0x7b998233] := R13
	88	[3109]	JMP      	91 ; PC := 91
	89	[3111]	GETGLOBAL	R12 K21 ; R12 := 0x0032441c
	90	[3111]	SETTABLE 	R12 K33 K3 ; R12["RequiemHints"] := nil
	91	[3114]	GETGLOBAL	R12 K21 ; R12 := 0x0032441c
	92	[3114]	GETTABLE 	R12 R12 K34 ; R12 := R12["NemesisKillChoiceMade"]
	93	[3114]	EQ       	1 R12 K3 ; if R12 == nil then PC := 137
	94	[3114]	JMP      	137 ; PC := 137
	95	[3115]	GETGLOBAL	R12 K35 ; R12 := 0x25d99d89
	96	[3115]	SELF     	R12 R12 K36 ; R13 := R12; R12 := R12[0x2bc6bc3e]
	97	[3115]	CALL     	R12 2 2 ; R12 := R12(R13)
	98	[3116]	TEST     	R1 0 ; if not R1 then PC := 137
	99	[3116]	JMP      	137 ; PC := 137
	100	[3116]	GETGLOBAL	R13 K37 ; R13 := 0x7b998233
	101	[3116]	MOVE     	R14 R12 ; R14 := R12
	102	[3116]	CALL     	R13 2 2 ; R13 := R13(R14)
	103	[3116]	TEST     	R13 1 ; if R13 then PC := 137
	104	[3116]	JMP      	137 ; PC := 137
	105	[3116]	LEN      	R13 R12 ; R13 := # R12
	106	[3116]	LT       	0 K38 R13 ; if 0.000000 >= R13 then PC := 137
	107	[3116]	JMP      	137 ; PC := 137
	108	[3118]	LEN      	R13 R12 ; R13 := # R12
	109	[3118]	GETTABLE 	R13 R12 R13 ; R13 := R12[R13]
	110	[3119]	GETUPVAL 	R14 U0 ; R14 := U0
	111	[3119]	GETTABLE 	R14 R14 K7 ; R14 := R14[0x6a965652]
	112	[3119]	MOVE     	R15 R13 ; R15 := R13
	113	[3119]	CALL     	R14 2 2 ; R14 := R14(R15)
	114	[3120]	GETUPVAL 	R15 U3 ; R15 := U3
	115	[3120]	GETTABLE 	R15 R15 K39 ; R15 := R15[0x06d055f9]
	116	[3120]	GETGLOBAL	R16 K21 ; R16 := 0x0032441c
	117	[3120]	GETTABLE 	R16 R16 K34 ; R16 := R16["NemesisKillChoiceMade"]
	118	[3120]	EQ       	1 R16 K40 ; if R16 == true then PC := 121
	119	[3120]	JMP      	121 ; PC := 121
	120	[3120]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 121
	121	[3120]	OP_LOADBOOL	R16 1 0 ; R16 := true
	122	[3120]	LOADK    	R17 K41 ; R17 := "/Lotus/Language/Kingpins/LichKilledLabel"
	123	[3120]	LOADK    	R18 K42 ; R18 := "/Lotus/Language/Kingpins/LichConvertedLabel"
	124	[3120]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	125	[3122]	GETGLOBAL	R16 K21 ; R16 := 0x0032441c
	126	[3122]	NEWTABLE 	R17 0 5 ; R17 := {}
	127	[3124]	SETTABLE 	R17 K44 K40 ; R17["OpenScreen"] := true
	128	[3125]	SETTABLE 	R17 K45 K46 ; R17["Header"] := "/Lotus/Language/Kingpins/NemesisPopupHeader"
	129	[3126]	GETTABLE 	R18 R14 K13 ; R18 := R14["mName"]
	130	[3126]	SETTABLE 	R17 K47 R18 ; R17[0xc00479a5] := R18
	131	[3127]	GETTABLE 	R18 R14 K11 ; R18 := R14["mFaction"]
	132	[3127]	SETTABLE 	R17 K48 R18 ; R17[0x5e35d4d6] := R18
	133	[3128]	SETTABLE 	R17 K49 R15 ; R17[0xc1dee03f] := R15
	134	[3129]	SETTABLE 	R16 K43 R17 ; R16[0x3f3ae64c] := R17
	135	[3131]	GETGLOBAL	R16 K21 ; R16 := 0x0032441c
	136	[3131]	SETTABLE 	R16 K34 K3 ; R16["NemesisKillChoiceMade"] := nil
	137	[3134]	RETURN   	R0 1 ; return 

function #81 <?:3136,3185> (115 instructions, 460 bytes at 00000160FCF2B790)
1 param, 19 slots, 1 upvalue, 0 locals, 42 constants, 0 functions
	1	[3137]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[3137]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	3	[3137]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3137]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[3137]	JMP      	7 ; PC := 7
	6	[3138]	RETURN   	R0 1 ; return 
	7	[3141]	GETGLOBAL	R1 K2 ; R1 := 0x3d106989
	8	[3141]	LOADK    	R2 K3 ; R2 := "updating zariman missions"
	9	[3141]	CALL     	R1 2 1 ; R1(R2)
	10	[3144]	LOADK    	R1 := 0.000000
	11	[3146]	GETGLOBAL	R2 K4 ; R2 := _T
	12	[3146]	GETTABLE 	R2 R2 K5 ; R2 := R2["CachedZarimanFactionIdx"]
	13	[3146]	EQ       	1 R2 K6 ; if R2 == nil then PC := 29
	14	[3146]	JMP      	29 ; PC := 29
	15	[3146]	GETGLOBAL	R2 K7 ; R2 := 0xe7f2b02f
	16	[3146]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x6923a4fa]
	17	[3146]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[3146]	EQ       	1 R2 K9 ; if R2 == "" then PC := 29
	19	[3146]	JMP      	29 ; PC := 29
	20	[3147]	GETGLOBAL	R2 K2 ; R2 := 0x3d106989
	21	[3147]	LOADK    	R3 K10 ; R3 := "using cached faction "
	22	[3147]	GETGLOBAL	R4 K4 ; R4 := _T
	23	[3147]	GETTABLE 	R4 R4 K5 ; R4 := R4["CachedZarimanFactionIdx"]
	24	[3147]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	25	[3147]	CALL     	R2 2 1 ; R2(R3)
	26	[3148]	GETGLOBAL	R2 K4 ; R2 := _T
	27	[3148]	GETTABLE 	R1 R2 K5 ; R1 := R2["CachedZarimanFactionIdx"]
	28	[3148]	JMP      	69 ; PC := 69
	29	[3150]	GETGLOBAL	R2 K11 ; R2 := 0x0469f296
	30	[3150]	LOADK    	R3 K12 ; R3 := "ZarimanSyndicate"
	31	[3150]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[3151]	GETGLOBAL	R3 K1 ; R3 := 0x25d99d89
	33	[3151]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0x69727e0b]
	34	[3151]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[3151]	GETTABLE 	R3 R3 K14 ; R3 := R3["mSyndicateMissions"]
	36	[3152]	LOADK    	R4 := 1.000000
	37	[3152]	LEN      	R5 R3 ; R5 := # R3
	38	[3152]	LOADK    	R6 := 1.000000
	39	[3152]	FORPREP  	R4 68 ; R4 -= R6; PC := 68
	40	[3153]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	41	[3154]	GETTABLE 	R9 R8 K15 ; R9 := R8["mTag"]
	42	[3154]	EQ       	0 R9 R2 ; if R9 ~= R2 then PC := 68
	43	[3154]	JMP      	68 ; PC := 68
	44	[3154]	GETGLOBAL	R9 K16 ; R9 := 0x34291f5c
	45	[3154]	GETTABLE 	R9 R9 K17 ; R9 := R9[0x397b920f]
	46	[3154]	GETTABLE 	R10 R8 K18 ; R10 := R8["mActivation"]
	47	[3154]	CALL     	R9 2 2 ; R9 := R9(R10)
	48	[3154]	LE       	0 R9 K19 ; if R9 > 0.000000 then PC := 68
	49	[3154]	JMP      	68 ; PC := 68
	50	[3154]	GETGLOBAL	R9 K16 ; R9 := 0x34291f5c
	51	[3154]	GETTABLE 	R9 R9 K17 ; R9 := R9[0x397b920f]
	52	[3154]	GETTABLE 	R10 R8 K20 ; R10 := R8["mExpiry"]
	53	[3154]	CALL     	R9 2 2 ; R9 := R9(R10)
	54	[3154]	LT       	0 K19 R9 ; if 0.000000 >= R9 then PC := 68
	55	[3154]	JMP      	68 ; PC := 68
	56	[3155]	GETGLOBAL	R9 K21 ; R9 := 0x03f57322
	57	[3155]	GETGLOBAL	R10 K22 ; R10 := 0x5f93cf5b
	58	[3155]	GETTABLE 	R11 R8 K23 ; R11 := R8["mSeed"]
	59	[3155]	CALL     	R10 2 0 ; R10,... := R10(R11)
	60	[3155]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	61	[3155]	MOD      	R1 R9 K24 ; R1 := R9 % 2.000000
	62	[3156]	GETGLOBAL	R9 K2 ; R9 := 0x3d106989
	63	[3156]	LOADK    	R10 K25 ; R10 := "using syndicate mission seed gives "
	64	[3156]	MOVE     	R11 R1 ; R11 := R1
	65	[3156]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	66	[3156]	CALL     	R9 2 1 ; R9(R10)
	67	[3157]	JMP      	69 ; PC := 69
	68	[3152]	FORLOOP  	R4 40 ; R4 += R6; if R4 <= R5 then begin PC := 40; R7 := R4 end
	69	[3162]	EQ       	0 R1 K26 ; if R1 ~= 1.000000 then PC := 100
	70	[3162]	JMP      	100 ; PC := 100
	71	[3163]	GETGLOBAL	R9 K2 ; R9 := 0x3d106989
	72	[3163]	LOADK    	R10 K27 ; R10 := "swapping to corpus"
	73	[3163]	CALL     	R9 2 1 ; R9(R10)
	74	[3165]	GETGLOBAL	R9 K28 ; R9 := 0xcfc01047
	75	[3165]	MOVE     	R10 R0 ; R10 := R0
	76	[3165]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	77	[3165]	JMP      	98 ; PC := 98
	78	[3166]	GETUPVAL 	R14 U0 ; R14 := U0
	79	[3166]	GETTABLE 	R15 R13 K29 ; R15 := R13["mission"]
	80	[3166]	GETTABLE 	R15 R15 K30 ; R15 := R15["missionType"]
	81	[3166]	GETTABLE 	R14 R14 R15 ; R14 := R14[R15]
	82	[3167]	TEST     	R14 0 ; if not R14 then PC := 98
	83	[3167]	JMP      	98 ; PC := 98
	84	[3168]	GETGLOBAL	R15 K31 ; R15 := 0x6c97a788
	85	[3168]	GETTABLE 	R15 R15 K32 ; R15 := R15[0x57d5cada]
	86	[3168]	CALL     	R15 1 2 ; R15 := R15()
	87	[3169]	GETTABLE 	R16 R13 K34 ; R16 := R13["name"]
	88	[3169]	SETTABLE 	R15 K33 R16 ; R15["mNode"] := R16
	89	[3170]	SETTABLE 	R15 K35 K26 ; R15["mFaction"] := 1.000000
	90	[3171]	GETTABLE 	R16 R14 K37 ; R16 := R14["enemySpec"]
	91	[3171]	SETTABLE 	R15 K36 R16 ; R15["mEnemySpec"] := R16
	92	[3173]	GETGLOBAL	R16 K1 ; R16 := 0x25d99d89
	93	[3173]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0x69727e0b]
	94	[3173]	CALL     	R16 2 2 ; R16 := R16(R17)
	95	[3173]	SELF     	R16 R16 K38 ; R17 := R16; R16 := R16[0x01e9ccdd]
	96	[3173]	MOVE     	R18 R15 ; R18 := R15
	97	[3173]	CALL     	R16 3 1 ; R16(R17,R18)
	98	[3165]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 78; R11 := R12 end
	99	[3174]	JMP      	78 ; PC := 78
	100	[3178]	GETGLOBAL	R16 K4 ; R16 := _T
	101	[3178]	GETTABLE 	R16 R16 K5 ; R16 := R16["CachedZarimanFactionIdx"]
	102	[3178]	EQ       	1 R16 K6 ; if R16 == nil then PC := 108
	103	[3178]	JMP      	108 ; PC := 108
	104	[3178]	GETGLOBAL	R16 K4 ; R16 := _T
	105	[3178]	GETTABLE 	R16 R16 K5 ; R16 := R16["CachedZarimanFactionIdx"]
	106	[3178]	EQ       	1 R16 R1 ; if R16 == R1 then PC := 113
	107	[3178]	JMP      	113 ; PC := 113
	108	[3180]	GETGLOBAL	R16 K2 ; R16 := 0x3d106989
	109	[3180]	LOADK    	R17 K39 ; R17 := "signalling bounty refresh"
	110	[3180]	CALL     	R16 2 1 ; R16(R17)
	111	[3181]	GETGLOBAL	R16 K4 ; R16 := _T
	112	[3181]	SETTABLE 	R16 K40 K41 ; R16["WorldStateJobsChanged"] := true
	113	[3184]	GETGLOBAL	R16 K4 ; R16 := _T
	114	[3184]	SETTABLE 	R16 K5 R1 ; R16["CachedZarimanFactionIdx"] := R1
	115	[3185]	RETURN   	R0 1 ; return 

function #82 <?:3187,3759> (1572 instructions, 6288 bytes at 00000160FCF2C0C0)
0 params, 124 slots, 19 upvalues, 0 locals, 204 constants, 0 functions
	1	[3189]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3189]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[3189]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3189]	TEST     	R0 0 ; if not R0 then PC := 10
	5	[3189]	JMP      	10 ; PC := 10
	6	[3190]	GETGLOBAL	R0 K2 ; R0 := 0x3d106989
	7	[3190]	LOADK    	R1 K3 ; R1 := "No game rules, early out"
	8	[3190]	CALL     	R0 2 1 ; R0(R1)
	9	[3191]	RETURN   	R0 1 ; return 
	10	[3194]	GETGLOBAL	R0 K4 ; R0 := _T
	11	[3194]	NEWTABLE 	R1 0 0 ; R1 := {}
	12	[3194]	SETTABLE 	R0 K5 R1 ; R0["CachedAlerts"] := R1
	13	[3195]	GETGLOBAL	R0 K4 ; R0 := _T
	14	[3195]	NEWTABLE 	R1 0 0 ; R1 := {}
	15	[3195]	SETTABLE 	R0 K6 R1 ; R0["CachedInvasionInfo"] := R1
	16	[3196]	GETGLOBAL	R0 K7 ; R0 := 0x0032441c
	17	[3196]	NEWTABLE 	R1 0 0 ; R1 := {}
	18	[3196]	SETTABLE 	R0 K8 R1 ; R0["CachedGoalInfo"] := R1
	19	[3197]	GETGLOBAL	R0 K7 ; R0 := 0x0032441c
	20	[3197]	NEWTABLE 	R1 0 0 ; R1 := {}
	21	[3197]	SETTABLE 	R0 K9 R1 ; R0["MergedGoalNodes"] := R1
	22	[3198]	GETGLOBAL	R0 K4 ; R0 := _T
	23	[3198]	NEWTABLE 	R1 0 0 ; R1 := {}
	24	[3198]	SETTABLE 	R0 K10 R1 ; R0["CachedConstructionProjects"] := R1
	25	[3199]	GETGLOBAL	R0 K4 ; R0 := _T
	26	[3199]	NEWTABLE 	R1 0 0 ; R1 := {}
	27	[3199]	SETTABLE 	R0 K11 R1 ; R0["CachedRegionStatus"] := R1
	28	[3200]	GETGLOBAL	R0 K4 ; R0 := _T
	29	[3200]	NEWTABLE 	R1 0 0 ; R1 := {}
	30	[3200]	SETTABLE 	R0 K12 R1 ; R0["CachedFlashSales"] := R1
	31	[3201]	GETGLOBAL	R0 K4 ; R0 := _T
	32	[3201]	NEWTABLE 	R1 0 0 ; R1 := {}
	33	[3201]	SETTABLE 	R0 K13 R1 ; R0["CachedVoidTraders"] := R1
	34	[3202]	GETGLOBAL	R0 K4 ; R0 := _T
	35	[3202]	NEWTABLE 	R1 0 0 ; R1 := {}
	36	[3202]	SETTABLE 	R0 K14 R1 ; R0["CachedGlobalUpgrades"] := R1
	37	[3203]	GETGLOBAL	R0 K4 ; R0 := _T
	38	[3203]	NEWTABLE 	R1 0 0 ; R1 := {}
	39	[3203]	SETTABLE 	R0 K15 R1 ; R0["CachedGoalLongDesc"] := R1
	40	[3204]	GETGLOBAL	R0 K4 ; R0 := _T
	41	[3204]	NEWTABLE 	R1 0 0 ; R1 := {}
	42	[3204]	SETTABLE 	R0 K16 R1 ; R0["LockedGoalList"] := R1
	43	[3205]	GETGLOBAL	R0 K4 ; R0 := _T
	44	[3205]	NEWTABLE 	R1 0 0 ; R1 := {}
	45	[3205]	SETTABLE 	R0 K17 R1 ; R0["CachedNodesPendingDestruction"] := R1
	46	[3206]	GETGLOBAL	R0 K4 ; R0 := _T
	47	[3206]	NEWTABLE 	R1 0 0 ; R1 := {}
	48	[3206]	SETTABLE 	R0 K18 R1 ; R0["CachedVoidStormMissions"] := R1
	49	[3208]	GETGLOBAL	R0 K7 ; R0 := 0x0032441c
	50	[3208]	GETTABLE 	R0 R0 K19 ; R0 := R0["LoginDone"]
	51	[3208]	TEST     	R0 1 ; if R0 then PC := 55
	52	[3208]	JMP      	55 ; PC := 55
	53	[3209]	LOADNIL  	R0 R0 ; R0 := nil
	54	[3209]	RETURN   	R0 2 ; return R0 
	55	[3212]	GETGLOBAL	R0 K20 ; R0 := 0x76ea806b
	56	[3212]	SELF     	R0 R0 K21 ; R1 := R0; R0 := R0[0x3f3ae64c]
	57	[3212]	LOADK    	R2 := 0.000000
	58	[3212]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	59	[3213]	LOADNIL  	R1 R1 ; R1 := nil
	60	[3214]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	61	[3214]	MOVE     	R3 R0 ; R3 := R0
	62	[3214]	CALL     	R2 2 2 ; R2 := R2(R3)
	63	[3214]	TEST     	R2 1 ; if R2 then PC := 68
	64	[3214]	JMP      	68 ; PC := 68
	65	[3215]	SELF     	R2 R0 K22 ; R3 := R0; R2 := R0[0x80563238]
	66	[3215]	CALL     	R2 2 2 ; R2 := R2(R3)
	67	[3215]	MOVE     	R1 R2 ; R1 := R2
	68	[3218]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	69	[3218]	MOVE     	R3 R1 ; R3 := R1
	70	[3218]	CALL     	R2 2 2 ; R2 := R2(R3)
	71	[3218]	TEST     	R2 0 ; if not R2 then PC := 75
	72	[3218]	JMP      	75 ; PC := 75
	73	[3219]	LOADNIL  	R2 R2 ; R2 := nil
	74	[3219]	RETURN   	R2 2 ; return R2 
	75	[3222]	SELF     	R2 R1 K23 ; R3 := R1; R2 := R1[0x69727e0b]
	76	[3222]	CALL     	R2 2 2 ; R2 := R2(R3)
	77	[3223]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	78	[3223]	MOVE     	R4 R2 ; R4 := R2
	79	[3223]	CALL     	R3 2 2 ; R3 := R3(R4)
	80	[3223]	TEST     	R3 0 ; if not R3 then PC := 84
	81	[3223]	JMP      	84 ; PC := 84
	82	[3224]	LOADNIL  	R3 R3 ; R3 := nil
	83	[3224]	RETURN   	R3 2 ; return R3 
	84	[3227]	GETUPVAL 	R3 U0 ; R3 := U0
	85	[3227]	EQ       	0 R3 K24 ; if R3 ~= nil then PC := 91
	86	[3227]	JMP      	91 ; PC := 91
	87	[3228]	GETUPVAL 	R3 U1 ; R3 := U1
	88	[3228]	GETTABLE 	R3 R3 K25 ; R3 := R3[0xc00479a5]
	89	[3228]	CALL     	R3 1 2 ; R3 := R3()
	90	[3228]	SETUPVAL 	R3 U0 ; U0 := R3
	91	[3231]	GETUPVAL 	R3 U1 ; R3 := U1
	92	[3231]	GETTABLE 	R3 R3 K26 ; R3 := R3[0x5e35d4d6]
	93	[3231]	CALL     	R3 1 2 ; R3 := R3()
	94	[3232]	SELF     	R4 R3 K27 ; R5 := R3; R4 := R3[0xc1dee03f]
	95	[3232]	CALL     	R4 2 2 ; R4 := R4(R5)
	96	[3233]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	97	[3233]	GETGLOBAL	R6 K28 ; R6 := 0x83f4e77c
	98	[3233]	CALL     	R5 2 2 ; R5 := R5(R6)
	99	[3234]	LOADNIL  	R6 R6 ; R6 := nil
	100	[3237]	GETTABLE 	R7 R2 K29 ; R7 := R2["mAlerts"]
	101	[3238]	LOADK    	R8 := 1.000000
	102	[3238]	LEN      	R9 R7 ; R9 := # R7
	103	[3238]	LOADK    	R10 := 1.000000
	104	[3238]	FORPREP  	R8 255 ; R8 -= R10; PC := 255
	105	[3240]	GETGLOBAL	R12 K30 ; R12 := 0xce225efa
	106	[3240]	LOADK    	R13 := 0.000000
	107	[3240]	CALL     	R12 2 1 ; R12(R13)
	108	[3241]	GETTABLE 	R12 R7 R11 ; R12 := R7[R11]
	109	[3242]	SELF     	R13 R3 K31 ; R14 := R3; R13 := R3[0x3ad9ed31]
	110	[3242]	GETTABLE 	R15 R12 K32 ; R15 := R12["mMissionInfo"]
	111	[3242]	GETTABLE 	R15 R15 K33 ; R15 := R15["location"]
	112	[3242]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	113	[3243]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	114	[3243]	MOVE     	R15 R13 ; R15 := R13
	115	[3243]	CALL     	R14 2 2 ; R14 := R14(R15)
	116	[3243]	TEST     	R14 1 ; if R14 then PC := 255
	117	[3243]	JMP      	255 ; PC := 255
	118	[3245]	GETGLOBAL	R14 K34 ; R14 := 0x34291f5c
	119	[3245]	GETTABLE 	R14 R14 K35 ; R14 := R14[0x397b920f]
	120	[3245]	GETTABLE 	R15 R12 K36 ; R15 := R12["mExpiry"]
	121	[3245]	CALL     	R14 2 2 ; R14 := R14(R15)
	122	[3246]	LT       	0 K37 R14 ; if 0.000000 >= R14 then PC := 255
	123	[3246]	JMP      	255 ; PC := 255
	124	[3248]	GETGLOBAL	R15 K38 ; R15 := 0x64fb1586
	125	[3248]	GETTABLE 	R16 R13 K39 ; R16 := R13["name"]
	126	[3248]	CALL     	R15 2 2 ; R15 := R15(R16)
	127	[3248]	MOVE     	R6 R15 ; R6 := R15
	128	[3250]	LOADK    	R15 := 0.000000
	129	[3251]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	130	[3251]	GETTABLE 	R17 R12 K40 ; R17 := R12["mActivation"]
	131	[3251]	CALL     	R16 2 2 ; R16 := R16(R17)
	132	[3251]	TEST     	R16 1 ; if R16 then PC := 139
	133	[3251]	JMP      	139 ; PC := 139
	134	[3252]	GETGLOBAL	R16 K34 ; R16 := 0x34291f5c
	135	[3252]	GETTABLE 	R16 R16 K35 ; R16 := R16[0x397b920f]
	136	[3252]	GETTABLE 	R17 R12 K40 ; R17 := R12["mActivation"]
	137	[3252]	CALL     	R16 2 2 ; R16 := R16(R17)
	138	[3252]	MOVE     	R15 R16 ; R15 := R16
	139	[3255]	LT       	0 K37 R15 ; if 0.000000 >= R15 then PC := 146
	140	[3255]	JMP      	146 ; PC := 146
	141	[3256]	GETUPVAL 	R16 U2 ; R16 := U2
	142	[3256]	MOVE     	R17 R6 ; R17 := R6
	143	[3256]	MOVE     	R18 R15 ; R18 := R15
	144	[3256]	CALL     	R16 3 1 ; R16(R17,R18)
	145	[3256]	JMP      	255 ; PC := 255
	146	[3259]	GETUPVAL 	R16 U0 ; R16 := U0
	147	[3259]	TEST     	R16 0 ; if not R16 then PC := 159
	148	[3259]	JMP      	159 ; PC := 159
	149	[3259]	SELF     	R16 R1 K41 ; R17 := R1; R16 := R1[0xcf6ac497]
	150	[3259]	GETTABLE 	R18 R12 K42 ; R18 := R12["mId"]
	151	[3259]	GETTABLE 	R18 R18 K42 ; R18 := R18["mId"]
	152	[3259]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	153	[3259]	TEST     	R16 0 ; if not R16 then PC := 158
	154	[3259]	JMP      	158 ; PC := 158
	155	[3259]	GETTABLE 	R16 R12 K43 ; R16 := R12["mAllowReplay"]
	156	[3259]	JMP      	159 ; PC := 159
	157	[3259]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 158
	158	[3259]	OP_LOADBOOL	R16 1 0 ; R16 := true
	159	[3260]	OP_LOADBOOL	R17 0 0 ; R17 := false
	160	[3261]	GETTABLE 	R18 R13 K44 ; R18 := R13["region"]
	161	[3261]	ADD      	R18 R18 K45 ; R18 := R18 + 1.000000
	162	[3262]	GETTABLE 	R19 R4 R18 ; R19 := R4[R18]
	163	[3263]	TEST     	R19 0 ; if not R19 then PC := 188
	164	[3263]	JMP      	188 ; PC := 188
	165	[3264]	GETUPVAL 	R20 U1 ; R20 := U1
	166	[3264]	GETTABLE 	R20 R20 K46 ; R20 := R20["REGION_ID_FORTRESS"]
	167	[3264]	EQ       	0 R18 R20 ; if R18 ~= R20 then PC := 175
	168	[3264]	JMP      	175 ; PC := 175
	169	[3265]	SELF     	R20 R1 K47 ; R21 := R1; R20 := R1[0x5baf7a39]
	170	[3265]	CALL     	R20 2 2 ; R20 := R20(R21)
	171	[3265]	TESTSET  	R17 R20 1 ; if R20 then PC := 174 else R17 := R20 
	172	[3265]	JMP      	174 ; PC := 174
	173	[3265]	MOVE     	R17 R5 ; R17 := R5
	174	[3265]	JMP      	188 ; PC := 188
	175	[3267]	SELF     	R20 R19 K48 ; R21 := R19; R20 := R19[0x699fd1e2]
	176	[3267]	CALL     	R20 2 2 ; R20 := R20(R21)
	177	[3267]	EQ       	0 R20 K37 ; if R20 ~= 0.000000 then PC := 187
	178	[3267]	JMP      	187 ; PC := 187
	179	[3267]	SELF     	R20 R1 K50 ; R21 := R1; R20 := R1[0x25452953]
	180	[3267]	MOVE     	R22 R18 ; R22 := R18
	181	[3267]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	182	[3267]	TESTSET  	R17 R20 1 ; if R20 then PC := 188 else R17 := R20 
	183	[3267]	JMP      	188 ; PC := 188
	184	[3267]	MOVE     	R17 R5 ; R17 := R5
	185	[3267]	JMP      	188 ; PC := 188
	186	[3267]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 187
	187	[3267]	OP_LOADBOOL	R17 1 0 ; R17 := true
	188	[3271]	GETTABLE 	R20 R13 K51 ; R20 := R13["unlocked"]
	189	[3271]	TEST     	R20 1 ; if R20 then PC := 195
	190	[3271]	JMP      	195 ; PC := 195
	191	[3271]	GETTABLE 	R20 R12 K52 ; R20 := R12["mForceUnlock"]
	192	[3271]	TEST     	R20 1 ; if R20 then PC := 195
	193	[3271]	JMP      	195 ; PC := 195
	194	[3271]	MOVE     	R20 R5 ; R20 := R5
	195	[3272]	TEST     	R17 1 ; if R17 then PC := 202
	196	[3272]	JMP      	202 ; PC := 202
	197	[3272]	GETGLOBAL	R21 K4 ; R21 := _T
	198	[3272]	GETTABLE 	R21 R21 K53 ; R21 := R21["SHOW_LOCKED_ALERTS"]
	199	[3272]	TEST     	R21 1 ; if R21 then PC := 202
	200	[3272]	JMP      	202 ; PC := 202
	201	[3273]	OP_LOADBOOL	R16 0 0 ; R16 := false
	202	[3276]	GETGLOBAL	R21 K4 ; R21 := _T
	203	[3276]	GETTABLE 	R21 R21 K5 ; R21 := R21["CachedAlerts"]
	204	[3276]	NEWTABLE 	R22 0 5 ; R22 := {}
	205	[3276]	SETTABLE 	R22 K54 R12 ; R22["mAlertInfo"] := R12
	206	[3276]	SETTABLE 	R22 K55 R18 ; R22["mRegionIdx"] := R18
	207	[3276]	SETTABLE 	R22 K56 R16 ; R22["mVisible"] := R16
	208	[3276]	SETTABLE 	R22 K57 R20 ; R22["mUnlocked"] := R20
	209	[3276]	SETTABLE 	R22 K58 R17 ; R22["mRegionUnlocked"] := R17
	210	[3276]	SETTABLE 	R21 R6 R22 ; R21[R6] := R22
	211	[3278]	GETGLOBAL	R21 K4 ; R21 := _T
	212	[3278]	GETTABLE 	R21 R21 K11 ; R21 := R21["CachedRegionStatus"]
	213	[3278]	GETTABLE 	R21 R21 R18 ; R21 := R21[R18]
	214	[3278]	TEST     	R21 1 ; if R21 then PC := 220
	215	[3278]	JMP      	220 ; PC := 220
	216	[3279]	GETGLOBAL	R21 K4 ; R21 := _T
	217	[3279]	GETTABLE 	R21 R21 K11 ; R21 := R21["CachedRegionStatus"]
	218	[3279]	NEWTABLE 	R22 0 0 ; R22 := {}
	219	[3279]	SETTABLE 	R21 R18 R22 ; R21[R18] := R22
	220	[3281]	GETGLOBAL	R21 K4 ; R21 := _T
	221	[3281]	GETTABLE 	R21 R21 K11 ; R21 := R21["CachedRegionStatus"]
	222	[3281]	GETTABLE 	R21 R21 R18 ; R21 := R21[R18]
	223	[3281]	SETTABLE 	R21 K59 R16 ; R21[0x00000000] := R16
	224	[3283]	GETGLOBAL	R21 K0 ; R21 := 0x7b998233
	225	[3283]	GETTABLE 	R22 R12 K60 ; R22 := R12["mIcon"]
	226	[3283]	CALL     	R21 2 2 ; R21 := R21(R22)
	227	[3283]	TEST     	R21 1 ; if R21 then PC := 234
	228	[3283]	JMP      	234 ; PC := 234
	229	[3284]	GETGLOBAL	R21 K4 ; R21 := _T
	230	[3284]	GETTABLE 	R21 R21 K11 ; R21 := R21["CachedRegionStatus"]
	231	[3284]	GETTABLE 	R21 R21 R18 ; R21 := R21[R18]
	232	[3284]	GETTABLE 	R22 R12 K60 ; R22 := R12["mIcon"]
	233	[3284]	SETTABLE 	R21 K61 R22 ; R21["customAlertIcon"] := R22
	234	[3287]	GETGLOBAL	R21 K4 ; R21 := _T
	235	[3287]	GETTABLE 	R21 R21 K5 ; R21 := R21["CachedAlerts"]
	236	[3287]	GETTABLE 	R21 R21 R6 ; R21 := R21[R6]
	237	[3287]	GETTABLE 	R21 R21 K54 ; R21 := R21["mAlertInfo"]
	238	[3287]	GETTABLE 	R21 R21 K32 ; R21 := R21["mMissionInfo"]
	239	[3288]	GETTABLE 	R22 R21 K62 ; R22 := R21["maxEnemyLevel"]
	240	[3288]	LE       	0 R22 K45 ; if R22 > 1.000000 then PC := 249
	241	[3288]	JMP      	249 ; PC := 249
	242	[3290]	SELF     	R22 R3 K63 ; R23 := R3; R22 := R3[0x18a37080]
	243	[3290]	GETTABLE 	R24 R13 K39 ; R24 := R13["name"]
	244	[3290]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	245	[3291]	ADD      	R23 R22 K45 ; R23 := R22 + 1.000000
	246	[3291]	SETTABLE 	R21 K64 R23 ; R21["minEnemyLevel"] := R23
	247	[3292]	ADD      	R23 R22 K65 ; R23 := R22 + 3.000000
	248	[3292]	SETTABLE 	R21 K62 R23 ; R21["maxEnemyLevel"] := R23
	249	[3295]	GETTABLE 	R23 R12 K67 ; R23 := R12["mTag"]
	250	[3295]	SETTABLE 	R21 K66 R23 ; R21["alertTag"] := R23
	251	[3297]	GETUPVAL 	R23 U2 ; R23 := U2
	252	[3297]	MOVE     	R24 R6 ; R24 := R6
	253	[3297]	MOVE     	R25 R14 ; R25 := R14
	254	[3297]	CALL     	R23 3 1 ; R23(R24,R25)
	255	[3238]	FORLOOP  	R8 105 ; R8 += R10; if R8 <= R9 then begin PC := 105; R11 := R8 end
	256	[3304]	GETTABLE 	R23 R2 K68 ; R23 := R2["mInvasions"]
	257	[3305]	NEWTABLE 	R24 0 0 ; R24 := {}
	258	[3306]	GETUPVAL 	R25 U3 ; R25 := U3
	259	[3306]	GETTABLE 	R25 R25 K69 ; R25 := R25[0x8d66ec64]
	260	[3306]	LOADK    	R26 K70 ; R26 := "infinv"
	261	[3306]	LOADK    	R27 := 0.000000
	262	[3306]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	263	[3306]	LT       	1 K37 R25 ; if 0.000000 < R25 then PC := 266
	264	[3306]	JMP      	266 ; PC := 266
	265	[3306]	OP_LOADBOOL	R25 0 1 ; R25 := false; PC := 266
	266	[3306]	OP_LOADBOOL	R25 1 0 ; R25 := true
	267	[3307]	TESTSET  	R26 R25 0 ; if not R25 then PC := 278 else R26 := R25 
	268	[3307]	JMP      	278 ; PC := 278
	269	[3307]	GETGLOBAL	R26 K71 ; R26 := 0x25d99d89
	270	[3307]	SELF     	R26 R26 K23 ; R27 := R26; R26 := R26[0x69727e0b]
	271	[3307]	CALL     	R26 2 2 ; R26 := R26(R27)
	272	[3307]	GETTABLE 	R26 R26 K72 ; R26 := R26["mSeasonInfo"]
	273	[3307]	GETTABLE 	R26 R26 K73 ; R26 := R26["mPhase"]
	274	[3307]	LE       	1 K74 R26 ; if 4.000000 <= R26 then PC := 277
	275	[3307]	JMP      	277 ; PC := 277
	276	[3307]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 277
	277	[3307]	OP_LOADBOOL	R26 1 0 ; R26 := true
	278	[3309]	TEST     	R25 0 ; if not R25 then PC := 286
	279	[3309]	JMP      	286 ; PC := 286
	280	[3310]	GETGLOBAL	R27 K4 ; R27 := _T
	281	[3310]	NEWTABLE 	R28 0 0 ; R28 := {}
	282	[3310]	SETTABLE 	R27 K75 R28 ; R27["WorldStateDerelictNodes"] := R28
	283	[3311]	GETGLOBAL	R27 K4 ; R27 := _T
	284	[3311]	NEWTABLE 	R28 0 0 ; R28 := {}
	285	[3311]	SETTABLE 	R27 K76 R28 ; R27["WorldStateOutbreakChains"] := R28
	286	[3314]	LOADK    	R27 := 1.000000
	287	[3314]	LEN      	R28 R23 ; R28 := # R23
	288	[3314]	LOADK    	R29 := 1.000000
	289	[3314]	FORPREP  	R27 437 ; R27 -= R29; PC := 437
	290	[3315]	GETGLOBAL	R31 K30 ; R31 := 0xce225efa
	291	[3315]	LOADK    	R32 := 0.000000
	292	[3315]	CALL     	R31 2 1 ; R31(R32)
	293	[3316]	GETTABLE 	R31 R23 R30 ; R31 := R23[R30]
	294	[3317]	GETGLOBAL	R32 K38 ; R32 := 0x64fb1586
	295	[3317]	GETTABLE 	R33 R31 K77 ; R33 := R31["mNode"]
	296	[3317]	CALL     	R32 2 2 ; R32 := R32(R33)
	297	[3317]	MOVE     	R6 R32 ; R6 := R32
	298	[3318]	GETGLOBAL	R32 K34 ; R32 := 0x34291f5c
	299	[3318]	GETTABLE 	R32 R32 K35 ; R32 := R32[0x397b920f]
	300	[3318]	GETTABLE 	R33 R31 K40 ; R33 := R31["mActivation"]
	301	[3318]	CALL     	R32 2 2 ; R32 := R32(R33)
	302	[3320]	LT       	0 K37 R32 ; if 0.000000 >= R32 then PC := 309
	303	[3320]	JMP      	309 ; PC := 309
	304	[3321]	GETUPVAL 	R33 U2 ; R33 := U2
	305	[3321]	MOVE     	R34 R6 ; R34 := R6
	306	[3321]	MOVE     	R35 R32 ; R35 := R32
	307	[3321]	CALL     	R33 3 1 ; R33(R34,R35)
	308	[3321]	JMP      	437 ; PC := 437
	309	[3323]	GETTABLE 	R33 R31 K78 ; R33 := R31["mCompleted"]
	310	[3323]	TEST     	R33 1 ; if R33 then PC := 437
	311	[3323]	JMP      	437 ; PC := 437
	312	[3324]	SELF     	R33 R3 K31 ; R34 := R3; R33 := R3[0x3ad9ed31]
	313	[3324]	GETTABLE 	R35 R31 K77 ; R35 := R31["mNode"]
	314	[3324]	CALL     	R33 3 2 ; R33 := R33(R34,R35)
	315	[3325]	GETGLOBAL	R34 K4 ; R34 := _T
	316	[3325]	GETTABLE 	R34 R34 K6 ; R34 := R34["CachedInvasionInfo"]
	317	[3325]	GETUPVAL 	R35 U4 ; R35 := U4
	318	[3325]	GETTABLE 	R35 R35 K79 ; R35 := R35[0x62b05d23]
	319	[3325]	MOVE     	R36 R1 ; R36 := R1
	320	[3325]	MOVE     	R37 R31 ; R37 := R31
	321	[3325]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	322	[3325]	SETTABLE 	R34 R6 R35 ; R34[R6] := R35
	323	[3327]	GETGLOBAL	R34 K38 ; R34 := 0x64fb1586
	324	[3327]	GETTABLE 	R35 R31 K80 ; R35 := R31["mEventTag"]
	325	[3327]	CALL     	R34 2 2 ; R34 := R34(R35)
	326	[3327]	EQ       	1 R34 K81 ; if R34 == "" then PC := 332
	327	[3327]	JMP      	332 ; PC := 332
	328	[3328]	GETGLOBAL	R34 K38 ; R34 := 0x64fb1586
	329	[3328]	GETTABLE 	R35 R31 K80 ; R35 := R31["mEventTag"]
	330	[3328]	CALL     	R34 2 2 ; R34 := R34(R35)
	331	[3328]	SETTABLE 	R24 R34 R31 ; R24[R34] := R31
	332	[3331]	GETTABLE 	R34 R33 K44 ; R34 := R33["region"]
	333	[3331]	ADD      	R34 R34 K45 ; R34 := R34 + 1.000000
	334	[3331]	GETTABLE 	R34 R4 R34 ; R34 := R4[R34]
	335	[3332]	GETGLOBAL	R35 K0 ; R35 := 0x7b998233
	336	[3332]	MOVE     	R36 R34 ; R36 := R34
	337	[3332]	CALL     	R35 2 2 ; R35 := R35(R36)
	338	[3332]	TEST     	R35 1 ; if R35 then PC := 437
	339	[3332]	JMP      	437 ; PC := 437
	340	[3333]	GETUPVAL 	R35 U0 ; R35 := U0
	341	[3333]	TEST     	R35 0 ; if not R35 then PC := 357
	342	[3333]	JMP      	357 ; PC := 357
	343	[3333]	SELF     	R35 R34 K48 ; R36 := R34; R35 := R34[0x699fd1e2]
	344	[3333]	CALL     	R35 2 2 ; R35 := R35(R36)
	345	[3333]	EQ       	0 R35 K37 ; if R35 ~= 0.000000 then PC := 356
	346	[3333]	JMP      	356 ; PC := 356
	347	[3333]	SELF     	R35 R1 K50 ; R36 := R1; R35 := R1[0x25452953]
	348	[3333]	GETTABLE 	R37 R33 K44 ; R37 := R33["region"]
	349	[3333]	ADD      	R37 R37 K45 ; R37 := R37 + 1.000000
	350	[3333]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	351	[3333]	TEST     	R35 1 ; if R35 then PC := 357
	352	[3333]	JMP      	357 ; PC := 357
	353	[3333]	MOVE     	R35 R5 ; R35 := R5
	354	[3333]	JMP      	357 ; PC := 357
	355	[3333]	OP_LOADBOOL	R35 0 1 ; R35 := false; PC := 356
	356	[3333]	OP_LOADBOOL	R35 1 0 ; R35 := true
	357	[3334]	TEST     	R35 1 ; if R35 then PC := 363
	358	[3334]	JMP      	363 ; PC := 363
	359	[3334]	GETGLOBAL	R36 K4 ; R36 := _T
	360	[3334]	GETTABLE 	R36 R36 K53 ; R36 := R36["SHOW_LOCKED_ALERTS"]
	361	[3334]	TEST     	R36 0 ; if not R36 then PC := 383
	362	[3334]	JMP      	383 ; PC := 383
	363	[3335]	GETGLOBAL	R36 K4 ; R36 := _T
	364	[3335]	GETTABLE 	R36 R36 K11 ; R36 := R36["CachedRegionStatus"]
	365	[3335]	GETTABLE 	R37 R33 K44 ; R37 := R33["region"]
	366	[3335]	ADD      	R37 R37 K45 ; R37 := R37 + 1.000000
	367	[3335]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	368	[3335]	TEST     	R36 1 ; if R36 then PC := 376
	369	[3335]	JMP      	376 ; PC := 376
	370	[3336]	GETGLOBAL	R36 K4 ; R36 := _T
	371	[3336]	GETTABLE 	R36 R36 K11 ; R36 := R36["CachedRegionStatus"]
	372	[3336]	GETTABLE 	R37 R33 K44 ; R37 := R33["region"]
	373	[3336]	ADD      	R37 R37 K45 ; R37 := R37 + 1.000000
	374	[3336]	NEWTABLE 	R38 0 0 ; R38 := {}
	375	[3336]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	376	[3338]	GETGLOBAL	R36 K4 ; R36 := _T
	377	[3338]	GETTABLE 	R36 R36 K11 ; R36 := R36["CachedRegionStatus"]
	378	[3338]	GETTABLE 	R37 R33 K44 ; R37 := R33["region"]
	379	[3338]	ADD      	R37 R37 K45 ; R37 := R37 + 1.000000
	380	[3338]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	381	[3338]	GETTABLE 	R37 R31 K83 ; R37 := R31["mFaction"]
	382	[3338]	SETTABLE 	R36 K82 R37 ; R36["invasion"] := R37
	383	[3341]	TEST     	R25 0 ; if not R25 then PC := 437
	384	[3341]	JMP      	437 ; PC := 437
	385	[3341]	GETTABLE 	R36 R31 K83 ; R36 := R31["mFaction"]
	386	[3341]	EQ       	0 R36 K84 ; if R36 ~= 2.000000 then PC := 437
	387	[3341]	JMP      	437 ; PC := 437
	388	[3342]	GETGLOBAL	R36 K85 ; R36 := 0xcfc01047
	389	[3342]	GETTABLE 	R37 R34 K86 ; R37 := R34["sectors"]
	390	[3342]	CALL     	R36 2 4 ; R36,R37,R38 := R36(R37)
	391	[3342]	JMP      	435 ; PC := 435
	392	[3343]	GETTABLE 	R41 R40 K87 ; R41 := R40["mission"]
	393	[3343]	GETTABLE 	R41 R41 K88 ; R41 := R41["missionType"]
	394	[3344]	GETGLOBAL	R42 K4 ; R42 := _T
	395	[3344]	GETTABLE 	R42 R42 K76 ; R42 := R42["WorldStateOutbreakChains"]
	396	[3344]	GETTABLE 	R43 R34 K39 ; R43 := R34["name"]
	397	[3344]	GETTABLE 	R42 R42 R43 ; R42 := R42[R43]
	398	[3344]	TEST     	R42 1 ; if R42 then PC := 435
	399	[3344]	JMP      	435 ; PC := 435
	400	[3344]	TEST     	R26 0 ; if not R26 then PC := 404
	401	[3344]	JMP      	404 ; PC := 404
	402	[3344]	EQ       	1 R41 K37 ; if R41 == 0.000000 then PC := 410
	403	[3344]	JMP      	410 ; PC := 410
	404	[3344]	TEST     	R26 1 ; if R26 then PC := 435
	405	[3344]	JMP      	435 ; PC := 435
	406	[3344]	EQ       	1 R41 K37 ; if R41 == 0.000000 then PC := 435
	407	[3344]	JMP      	435 ; PC := 435
	408	[3344]	EQ       	1 R41 K89 ; if R41 == 20.000000 then PC := 435
	409	[3344]	JMP      	435 ; PC := 435
	410	[3344]	GETGLOBAL	R42 K90 ; R42 := 0x7f5022cf
	411	[3344]	GETTABLE 	R42 R42 K91 ; R42 := R42[0xa5c556b9]
	412	[3344]	GETGLOBAL	R43 K38 ; R43 := 0x64fb1586
	413	[3344]	GETTABLE 	R44 R40 K39 ; R44 := R40["name"]
	414	[3344]	CALL     	R43 2 2 ; R43 := R43(R44)
	415	[3344]	LOADK    	R44 K92 ; R44 := "Derelict"
	416	[3344]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	417	[3344]	TEST     	R42 0 ; if not R42 then PC := 435
	418	[3344]	JMP      	435 ; PC := 435
	419	[3345]	GETGLOBAL	R42 K4 ; R42 := _T
	420	[3345]	GETTABLE 	R42 R42 K75 ; R42 := R42["WorldStateDerelictNodes"]
	421	[3345]	GETGLOBAL	R43 K38 ; R43 := 0x64fb1586
	422	[3345]	GETTABLE 	R44 R40 K39 ; R44 := R40["name"]
	423	[3345]	CALL     	R43 2 2 ; R43 := R43(R44)
	424	[3345]	SETTABLE 	R42 R43 K93 ; R42[R43] := true
	425	[3346]	GETGLOBAL	R42 K4 ; R42 := _T
	426	[3346]	GETTABLE 	R42 R42 K76 ; R42 := R42["WorldStateOutbreakChains"]
	427	[3346]	GETTABLE 	R43 R34 K39 ; R43 := R34["name"]
	428	[3346]	GETTABLE 	R44 R31 K94 ; R44 := R31["mChainID"]
	429	[3346]	GETTABLE 	R44 R44 K42 ; R44 := R44["mId"]
	430	[3346]	SETTABLE 	R42 R43 R44 ; R42[R43] := R44
	431	[3349]	EQ       	0 R41 K37 ; if R41 ~= 0.000000 then PC := 437
	432	[3349]	JMP      	437 ; PC := 437
	433	[3350]	OP_LOADBOOL	R26 0 0 ; R26 := false
	434	[3352]	JMP      	437 ; PC := 437
	435	[3342]	TFORLOOP 	R36 2 ; R39,R40 := R36(R37,R38); if R39 ~= nil then begin PC = 392; R38 := R39 end
	436	[3353]	JMP      	392 ; PC := 392
	437	[3314]	FORLOOP  	R27 290 ; R27 += R29; if R27 <= R28 then begin PC := 290; R30 := R27 end
	438	[3361]	GETTABLE 	R42 R2 K95 ; R42 := R2["mGoals"]
	439	[3363]	NEWTABLE 	R43 0 0 ; R43 := {}
	440	[3364]	GETGLOBAL	R44 K0 ; R44 := 0x7b998233
	441	[3364]	GETGLOBAL	R45 K28 ; R45 := 0x83f4e77c
	442	[3364]	CALL     	R44 2 2 ; R44 := R44(R45)
	443	[3366]	GETUPVAL 	R45 U5 ; R45 := U5
	444	[3366]	GETTABLE 	R45 R45 K96 ; R45 := R45[0xbc682855]
	445	[3366]	MOVE     	R46 R1 ; R46 := R1
	446	[3366]	CALL     	R45 2 2 ; R45 := R45(R46)
	447	[3367]	LOADK    	R46 := 1.000000
	448	[3367]	LEN      	R47 R42 ; R47 := # R42
	449	[3367]	LOADK    	R48 := 1.000000
	450	[3367]	FORPREP  	R46 1305 ; R46 -= R48; PC := 1305
	451	[3368]	GETGLOBAL	R50 K30 ; R50 := 0xce225efa
	452	[3368]	LOADK    	R51 := 0.000000
	453	[3368]	CALL     	R50 2 1 ; R50(R51)
	454	[3369]	GETTABLE 	R50 R42 R49 ; R50 := R42[R49]
	455	[3370]	GETTABLE 	R6 R50 K77 ; R6 := R50["mNode"]
	456	[3371]	GETGLOBAL	R51 K34 ; R51 := 0x34291f5c
	457	[3371]	GETTABLE 	R51 R51 K35 ; R51 := R51[0x397b920f]
	458	[3371]	GETTABLE 	R52 R50 K40 ; R52 := R50["mActivation"]
	459	[3371]	CALL     	R51 2 2 ; R51 := R51(R52)
	460	[3372]	LOADK    	R52 K81 ; R52 := ""
	461	[3374]	TEST     	R44 0 ; if not R44 then PC := 470
	462	[3374]	JMP      	470 ; PC := 470
	463	[3375]	GETGLOBAL	R53 K2 ; R53 := 0x3d106989
	464	[3375]	LOADK    	R54 K97 ; R54 := "Goal: "
	465	[3375]	GETGLOBAL	R55 K38 ; R55 := 0x64fb1586
	466	[3375]	MOVE     	R56 R6 ; R56 := R6
	467	[3375]	CALL     	R55 2 2 ; R55 := R55(R56)
	468	[3375]	CONCAT   	R54 R54 R55 ; R54 := R54 .. R55
	469	[3375]	CALL     	R53 2 1 ; R53(R54)
	470	[3378]	LT       	0 K37 R51 ; if 0.000000 >= R51 then PC := 486
	471	[3378]	JMP      	486 ; PC := 486
	472	[3379]	TEST     	R44 0 ; if not R44 then PC := 481
	473	[3379]	JMP      	481 ; PC := 481
	474	[3380]	GETGLOBAL	R53 K2 ; R53 := 0x3d106989
	475	[3380]	LOADK    	R54 K98 ; R54 := "Seconds until start: "
	476	[3380]	GETGLOBAL	R55 K38 ; R55 := 0x64fb1586
	477	[3380]	MOVE     	R56 R51 ; R56 := R51
	478	[3380]	CALL     	R55 2 2 ; R55 := R55(R56)
	479	[3380]	CONCAT   	R54 R54 R55 ; R54 := R54 .. R55
	480	[3380]	CALL     	R53 2 1 ; R53(R54)
	481	[3382]	GETUPVAL 	R53 U2 ; R53 := U2
	482	[3382]	MOVE     	R54 R6 ; R54 := R6
	483	[3382]	MOVE     	R55 R51 ; R55 := R51
	484	[3382]	CALL     	R53 3 1 ; R53(R54,R55)
	485	[3382]	JMP      	1305 ; PC := 1305
	486	[3384]	GETTABLE 	R53 R50 K99 ; R53 := R50["mInvasion"]
	487	[3384]	TEST     	R53 1 ; if R53 then PC := 575
	488	[3384]	JMP      	575 ; PC := 575
	489	[3386]	GETUPVAL 	R53 U0 ; R53 := U0
	490	[3386]	TEST     	R53 0 ; if not R53 then PC := 511
	491	[3386]	JMP      	511 ; PC := 511
	492	[3387]	SELF     	R53 R1 K100 ; R54 := R1; R53 := R1[0x7e2a4aa9]
	493	[3387]	SUB      	R55 R49 K45 ; R55 := R49 - 1.000000
	494	[3387]	CALL     	R53 3 2 ; R53 := R53(R54,R55)
	495	[3387]	TEST     	R53 0 ; if not R53 then PC := 511
	496	[3387]	JMP      	511 ; PC := 511
	497	[3388]	GETGLOBAL	R53 K34 ; R53 := 0x34291f5c
	498	[3388]	GETTABLE 	R53 R53 K35 ; R53 := R53[0x397b920f]
	499	[3388]	GETTABLE 	R54 R50 K36 ; R54 := R50["mExpiry"]
	500	[3388]	CALL     	R53 2 2 ; R53 := R53(R54)
	501	[3388]	LE       	1 R53 K37 ; if R53 <= 0.000000 then PC := 511
	502	[3388]	JMP      	511 ; PC := 511
	503	[3389]	GETTABLE 	R53 R50 K67 ; R53 := R50["mTag"]
	504	[3389]	GETUPVAL 	R54 U6 ; R54 := U6
	505	[3389]	EQ       	0 R53 R54 ; if R53 ~= R54 then PC := 575
	506	[3389]	JMP      	575 ; PC := 575
	507	[3389]	TEST     	R45 1 ; if R45 then PC := 575
	508	[3389]	JMP      	575 ; PC := 575
	509	[3390]	TEST     	R5 1 ; if R5 then PC := 575
	510	[3390]	JMP      	575 ; PC := 575
	511	[3392]	TEST     	R44 0 ; if not R44 then PC := 516
	512	[3392]	JMP      	516 ; PC := 516
	513	[3393]	GETGLOBAL	R53 K2 ; R53 := 0x3d106989
	514	[3393]	LOADK    	R54 K101 ; R54 := "Goal locked"
	515	[3393]	CALL     	R53 2 1 ; R53(R54)
	516	[3397]	GETTABLE 	R53 R50 K77 ; R53 := R50["mNode"]
	517	[3397]	EQ       	1 R53 K81 ; if R53 == "" then PC := 552
	518	[3397]	JMP      	552 ; PC := 552
	519	[3397]	GETGLOBAL	R53 K90 ; R53 := 0x7f5022cf
	520	[3397]	GETTABLE 	R53 R53 K91 ; R53 := R53[0xa5c556b9]
	521	[3397]	GETTABLE 	R54 R50 K77 ; R54 := R50["mNode"]
	522	[3397]	LOADK    	R55 K102 ; R55 := "Pvp"
	523	[3397]	CALL     	R53 3 2 ; R53 := R53(R54,R55)
	524	[3397]	TEST     	R53 1 ; if R53 then PC := 552
	525	[3397]	JMP      	552 ; PC := 552
	526	[3397]	GETTABLE 	R53 R50 K103 ; R53 := R50["mOptionalInMission"]
	527	[3397]	TEST     	R53 1 ; if R53 then PC := 552
	528	[3397]	JMP      	552 ; PC := 552
	529	[3397]	GETTABLE 	R53 R50 K104 ; R53 := R50["mRelayReconstruction"]
	530	[3397]	TEST     	R53 1 ; if R53 then PC := 552
	531	[3397]	JMP      	552 ; PC := 552
	532	[3398]	GETUPVAL 	R53 U1 ; R53 := U1
	533	[3398]	GETTABLE 	R53 R53 K26 ; R53 := R53[0x5e35d4d6]
	534	[3398]	CALL     	R53 1 2 ; R53 := R53()
	535	[3398]	SELF     	R53 R53 K31 ; R54 := R53; R53 := R53[0x3ad9ed31]
	536	[3398]	GETGLOBAL	R55 K105 ; R55 := 0x0469f296
	537	[3398]	GETTABLE 	R56 R50 K77 ; R56 := R50["mNode"]
	538	[3398]	CALL     	R55 2 0 ; R55,... := R55(R56)
	539	[3398]	CALL     	R53 0 2 ; R53 := R53(R54,...)
	540	[3399]	GETTABLE 	R54 R53 K106 ; R54 := R53["nodeType"]
	541	[3399]	EQ       	0 R54 K45 ; if R54 ~= 1.000000 then PC := 552
	542	[3399]	JMP      	552 ; PC := 552
	543	[3400]	GETGLOBAL	R54 K4 ; R54 := _T
	544	[3400]	GETTABLE 	R54 R54 K16 ; R54 := R54["LockedGoalList"]
	545	[3400]	GETTABLE 	R55 R50 K77 ; R55 := R50["mNode"]
	546	[3400]	NEWTABLE 	R56 0 2 ; R56 := {}
	547	[3400]	GETTABLE 	R57 R50 K107 ; R57 := R50["mDesc"]
	548	[3400]	SETTABLE 	R56 K107 R57 ; R56["mDesc"] := R57
	549	[3400]	GETTABLE 	R57 R50 K108 ; R57 := R50["mMissionKeyName"]
	550	[3400]	SETTABLE 	R56 K108 R57 ; R56["mMissionKeyName"] := R57
	551	[3400]	SETTABLE 	R54 R55 R56 ; R54[R55] := R56
	552	[3404]	GETTABLE 	R54 R50 K109 ; R54 := R50["mFomorian"]
	553	[3404]	TEST     	R54 0 ; if not R54 then PC := 1305
	554	[3404]	JMP      	1305 ; PC := 1305
	555	[3405]	GETGLOBAL	R54 K38 ; R54 := 0x64fb1586
	556	[3405]	GETTABLE 	R55 R50 K110 ; R55 := R50["mVictimNode"]
	557	[3405]	CALL     	R54 2 2 ; R54 := R54(R55)
	558	[3406]	EQ       	1 R54 K81 ; if R54 == "" then PC := 1305
	559	[3406]	JMP      	1305 ; PC := 1305
	560	[3407]	GETGLOBAL	R55 K4 ; R55 := _T
	561	[3407]	GETTABLE 	R55 R55 K17 ; R55 := R55["CachedNodesPendingDestruction"]
	562	[3407]	NEWTABLE 	R56 0 2 ; R56 := {}
	563	[3407]	GETTABLE 	R57 R50 K112 ; R57 := R50["mHealthPct"]
	564	[3407]	LT       	1 K37 R57 ; if 0.000000 < R57 then PC := 567
	565	[3407]	JMP      	567 ; PC := 567
	566	[3407]	OP_LOADBOOL	R57 0 1 ; R57 := false; PC := 567
	567	[3407]	OP_LOADBOOL	R57 1 0 ; R57 := true
	568	[3407]	SETTABLE 	R56 K111 R57 ; R56["shouldLock"] := R57
	569	[3407]	GETTABLE 	R57 R50 K36 ; R57 := R50["mExpiry"]
	570	[3407]	SELF     	R57 R57 K114 ; R58 := R57; R57 := R57[0x8f89d633]
	571	[3407]	CALL     	R57 2 2 ; R57 := R57(R58)
	572	[3407]	SETTABLE 	R56 K113 R57 ; R56["lockTime"] := R57
	573	[3407]	SETTABLE 	R55 R54 R56 ; R55[R54] := R56
	574	[3409]	JMP      	1305 ; PC := 1305
	575	[3410]	GETTABLE 	R55 R50 K115 ; R55 := R50["mSuccess"]
	576	[3410]	EQ       	1 R55 K37 ; if R55 == 0.000000 then PC := 582
	577	[3410]	JMP      	582 ; PC := 582
	578	[3410]	GETTABLE 	R55 R50 K116 ; R55 := R50["mTypes"]
	579	[3410]	LEN      	R55 R55 ; R55 := # R55
	580	[3410]	LT       	0 K37 R55 ; if 0.000000 >= R55 then PC := 1305
	581	[3410]	JMP      	1305 ; PC := 1305
	582	[3412]	LOADNIL  	R55 R55 ; R55 := nil
	583	[3415]	GETGLOBAL	R56 K0 ; R56 := 0x7b998233
	584	[3415]	GETTABLE 	R57 R50 K108 ; R57 := R50["mMissionKeyName"]
	585	[3415]	CALL     	R56 2 2 ; R56 := R56(R57)
	586	[3415]	TEST     	R56 1 ; if R56 then PC := 674
	587	[3415]	JMP      	674 ; PC := 674
	588	[3416]	GETGLOBAL	R56 K4 ; R56 := _T
	589	[3416]	GETTABLE 	R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
	590	[3416]	TEST     	R56 1 ; if R56 then PC := 598
	591	[3416]	JMP      	598 ; PC := 598
	592	[3417]	GETGLOBAL	R56 K4 ; R56 := _T
	593	[3417]	NEWTABLE 	R57 0 0 ; R57 := {}
	594	[3417]	SETTABLE 	R56 K117 R57 ; R56["CachedGoalKeys"] := R57
	595	[3418]	GETGLOBAL	R56 K4 ; R56 := _T
	596	[3418]	NEWTABLE 	R57 0 0 ; R57 := {}
	597	[3418]	SETTABLE 	R56 K118 R57 ; R56["CachedGoalKeyTypes"] := R57
	598	[3421]	TEST     	R44 0 ; if not R44 then PC := 607
	599	[3421]	JMP      	607 ; PC := 607
	600	[3422]	GETGLOBAL	R56 K2 ; R56 := 0x3d106989
	601	[3422]	LOADK    	R57 K119 ; R57 := "Adding "
	602	[3422]	GETGLOBAL	R58 K38 ; R58 := 0x64fb1586
	603	[3422]	MOVE     	R59 R6 ; R59 := R6
	604	[3422]	CALL     	R58 2 2 ; R58 := R58(R59)
	605	[3422]	CONCAT   	R57 R57 R58 ; R57 := R57 .. R58
	606	[3422]	CALL     	R56 2 1 ; R56(R57)
	607	[3425]	GETGLOBAL	R56 K4 ; R56 := _T
	608	[3425]	GETTABLE 	R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
	609	[3425]	GETTABLE 	R56 R56 R6 ; R56 := R56[R6]
	610	[3425]	TEST     	R56 1 ; if R56 then PC := 626
	611	[3425]	JMP      	626 ; PC := 626
	612	[3426]	GETGLOBAL	R56 K4 ; R56 := _T
	613	[3426]	GETTABLE 	R56 R56 K118 ; R56 := R56["CachedGoalKeyTypes"]
	614	[3426]	GETGLOBAL	R57 K120 ; R57 := 0x88efc25e
	615	[3426]	GETTABLE 	R58 R50 K108 ; R58 := R50["mMissionKeyName"]
	616	[3426]	CALL     	R57 2 2 ; R57 := R57(R58)
	617	[3426]	SETTABLE 	R56 R6 R57 ; R56[R6] := R57
	618	[3427]	GETGLOBAL	R56 K4 ; R56 := _T
	619	[3427]	GETTABLE 	R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
	620	[3427]	GETGLOBAL	R57 K121 ; R57 := 0xb009bbc6
	621	[3427]	GETGLOBAL	R58 K4 ; R58 := _T
	622	[3427]	GETTABLE 	R58 R58 K118 ; R58 := R58["CachedGoalKeyTypes"]
	623	[3427]	GETTABLE 	R58 R58 R6 ; R58 := R58[R6]
	624	[3427]	CALL     	R57 2 2 ; R57 := R57(R58)
	625	[3427]	SETTABLE 	R56 R6 R57 ; R56[R6] := R57
	626	[3430]	GETGLOBAL	R56 K0 ; R56 := 0x7b998233
	627	[3430]	GETGLOBAL	R57 K4 ; R57 := _T
	628	[3430]	GETTABLE 	R57 R57 K117 ; R57 := R57["CachedGoalKeys"]
	629	[3430]	GETTABLE 	R57 R57 R6 ; R57 := R57[R6]
	630	[3430]	CALL     	R56 2 2 ; R56 := R56(R57)
	631	[3430]	TEST     	R56 1 ; if R56 then PC := 647
	632	[3430]	JMP      	647 ; PC := 647
	633	[3431]	GETGLOBAL	R56 K4 ; R56 := _T
	634	[3431]	GETTABLE 	R56 R56 K117 ; R56 := R56["CachedGoalKeys"]
	635	[3431]	GETTABLE 	R56 R56 R6 ; R56 := R56[R6]
	636	[3431]	SELF     	R56 R56 K122 ; R57 := R56; R56 := R56[0xef893aec]
	637	[3431]	CALL     	R56 2 2 ; R56 := R56(R57)
	638	[3431]	MOVE     	R55 R56 ; R55 := R56
	639	[3432]	GETGLOBAL	R56 K38 ; R56 := 0x64fb1586
	640	[3432]	GETGLOBAL	R57 K4 ; R57 := _T
	641	[3432]	GETTABLE 	R57 R57 K117 ; R57 := R57["CachedGoalKeys"]
	642	[3432]	GETTABLE 	R57 R57 R6 ; R57 := R57[R6]
	643	[3432]	SELF     	R57 R57 K123 ; R58 := R57; R57 := R57[0x030ae5e5]
	644	[3432]	CALL     	R57 2 0 ; R57,... := R57(R58)
	645	[3432]	CALL     	R56 0 2 ; R56 := R56(R57,...)
	646	[3432]	MOVE     	R52 R56 ; R52 := R56
	647	[3436]	TEST     	R55 0 ; if not R55 then PC := 707
	648	[3436]	JMP      	707 ; PC := 707
	649	[3437]	GETTABLE 	R56 R50 K32 ; R56 := R50["mMissionInfo"]
	650	[3437]	GETTABLE 	R56 R56 K64 ; R56 := R56["minEnemyLevel"]
	651	[3437]	LT       	0 K45 R56 ; if 1.000000 >= R56 then PC := 656
	652	[3437]	JMP      	656 ; PC := 656
	653	[3438]	GETTABLE 	R56 R50 K32 ; R56 := R50["mMissionInfo"]
	654	[3438]	GETTABLE 	R56 R56 K64 ; R56 := R56["minEnemyLevel"]
	655	[3438]	SETTABLE 	R55 K64 R56 ; R55["minEnemyLevel"] := R56
	656	[3440]	GETTABLE 	R56 R50 K32 ; R56 := R50["mMissionInfo"]
	657	[3440]	GETTABLE 	R56 R56 K62 ; R56 := R56["maxEnemyLevel"]
	658	[3440]	LT       	0 K45 R56 ; if 1.000000 >= R56 then PC := 663
	659	[3440]	JMP      	663 ; PC := 663
	660	[3441]	GETTABLE 	R56 R50 K32 ; R56 := R50["mMissionInfo"]
	661	[3441]	GETTABLE 	R56 R56 K62 ; R56 := R56["maxEnemyLevel"]
	662	[3441]	SETTABLE 	R55 K62 R56 ; R55["maxEnemyLevel"] := R56
	663	[3443]	GETGLOBAL	R56 K0 ; R56 := 0x7b998233
	664	[3443]	GETTABLE 	R57 R50 K32 ; R57 := R50["mMissionInfo"]
	665	[3443]	GETTABLE 	R57 R57 K124 ; R57 := R57["enemySpec"]
	666	[3443]	CALL     	R56 2 2 ; R56 := R56(R57)
	667	[3443]	TEST     	R56 1 ; if R56 then PC := 672
	668	[3443]	JMP      	672 ; PC := 672
	669	[3444]	GETTABLE 	R56 R50 K32 ; R56 := R50["mMissionInfo"]
	670	[3444]	GETTABLE 	R56 R56 K124 ; R56 := R56["enemySpec"]
	671	[3444]	SETTABLE 	R55 K124 R56 ; R55["enemySpec"] := R56
	672	[3447]	SETTABLE 	R50 K32 R55 ; R50["mMissionInfo"] := R55
	673	[3448]	JMP      	707 ; PC := 707
	674	[3450]	GETGLOBAL	R56 K0 ; R56 := 0x7b998233
	675	[3450]	GETTABLE 	R57 R50 K32 ; R57 := R50["mMissionInfo"]
	676	[3450]	GETTABLE 	R57 R57 K125 ; R57 := R57["levelOverride"]
	677	[3450]	CALL     	R56 2 2 ; R56 := R56(R57)
	678	[3450]	TEST     	R56 0 ; if not R56 then PC := 707
	679	[3450]	JMP      	707 ; PC := 707
	680	[3450]	GETTABLE 	R56 R50 K77 ; R56 := R50["mNode"]
	681	[3450]	EQ       	1 R56 K81 ; if R56 == "" then PC := 707
	682	[3450]	JMP      	707 ; PC := 707
	683	[3450]	GETTABLE 	R56 R50 K103 ; R56 := R50["mOptionalInMission"]
	684	[3450]	TEST     	R56 1 ; if R56 then PC := 707
	685	[3450]	JMP      	707 ; PC := 707
	686	[3452]	GETUPVAL 	R56 U1 ; R56 := U1
	687	[3452]	GETTABLE 	R56 R56 K26 ; R56 := R56[0x5e35d4d6]
	688	[3452]	CALL     	R56 1 2 ; R56 := R56()
	689	[3452]	SELF     	R56 R56 K31 ; R57 := R56; R56 := R56[0x3ad9ed31]
	690	[3452]	GETGLOBAL	R58 K105 ; R58 := 0x0469f296
	691	[3452]	GETTABLE 	R59 R50 K77 ; R59 := R50["mNode"]
	692	[3452]	CALL     	R58 2 0 ; R58,... := R58(R59)
	693	[3452]	CALL     	R56 0 2 ; R56 := R56(R57,...)
	694	[3453]	GETTABLE 	R57 R50 K32 ; R57 := R50["mMissionInfo"]
	695	[3453]	GETTABLE 	R57 R57 K126 ; R57 := R57["icon"]
	696	[3454]	GETTABLE 	R58 R56 K87 ; R58 := R56["mission"]
	697	[3454]	SELF     	R58 R58 K114 ; R59 := R58; R58 := R58[0x8f89d633]
	698	[3454]	CALL     	R58 2 2 ; R58 := R58(R59)
	699	[3454]	SETTABLE 	R50 K32 R58 ; R50["mMissionInfo"] := R58
	700	[3455]	GETGLOBAL	R58 K0 ; R58 := 0x7b998233
	701	[3455]	MOVE     	R59 R57 ; R59 := R57
	702	[3455]	CALL     	R58 2 2 ; R58 := R58(R59)
	703	[3455]	TEST     	R58 1 ; if R58 then PC := 707
	704	[3455]	JMP      	707 ; PC := 707
	705	[3456]	GETTABLE 	R58 R50 K32 ; R58 := R50["mMissionInfo"]
	706	[3456]	SETTABLE 	R58 K126 R57 ; R58["icon"] := R57
	707	[3461]	GETTABLE 	R58 R50 K32 ; R58 := R50["mMissionInfo"]
	708	[3461]	GETTABLE 	R59 R50 K42 ; R59 := R50["mId"]
	709	[3461]	GETTABLE 	R59 R59 K42 ; R59 := R59["mId"]
	710	[3461]	SETTABLE 	R58 K127 R59 ; R58["goalId"] := R59
	711	[3463]	NEWTABLE 	R58 0 0 ; R58 := {}
	712	[3464]	LOADK    	R59 := 0.000000
	713	[3466]	GETTABLE 	R60 R50 K77 ; R60 := R50["mNode"]
	714	[3466]	EQ       	1 R60 K81 ; if R60 == "" then PC := 748
	715	[3466]	JMP      	748 ; PC := 748
	716	[3467]	GETTABLE 	R60 R50 K103 ; R60 := R50["mOptionalInMission"]
	717	[3467]	TEST     	R60 0 ; if not R60 then PC := 735
	718	[3467]	JMP      	735 ; PC := 735
	719	[3468]	NEWTABLE 	R60 0 4 ; R60 := {}
	720	[3468]	GETUPVAL 	R61 U1 ; R61 := U1
	721	[3468]	GETTABLE 	R61 R61 K129 ; R61 := R61["OPTIONAL_GOAL_PREFIX"]
	722	[3468]	GETTABLE 	R62 R50 K77 ; R62 := R50["mNode"]
	723	[3468]	CONCAT   	R61 R61 R62 ; R61 := R61 .. R62
	724	[3468]	SETTABLE 	R60 K128 R61 ; R60[0x00000034] := R61
	725	[3468]	GETTABLE 	R61 R50 K108 ; R61 := R50["mMissionKeyName"]
	726	[3468]	SETTABLE 	R60 K130 R61 ; R60["missionKeyName"] := R61
	727	[3468]	SETTABLE 	R60 K131 R55 ; R60[0x00000034] := R55
	728	[3468]	SETTABLE 	R60 K132 R52 ; R60["longDesc"] := R52
	729	[3469]	GETGLOBAL	R61 K133 ; R61 := 0x33bdd652
	730	[3469]	GETTABLE 	R61 R61 K134 ; R61 := R61[0x23d5322f]
	731	[3469]	MOVE     	R62 R58 ; R62 := R58
	732	[3469]	MOVE     	R63 R60 ; R63 := R60
	733	[3469]	CALL     	R61 3 1 ; R61(R62,R63)
	734	[3469]	JMP      	782 ; PC := 782
	735	[3471]	NEWTABLE 	R61 0 4 ; R61 := {}
	736	[3471]	GETTABLE 	R62 R50 K77 ; R62 := R50["mNode"]
	737	[3471]	SETTABLE 	R61 K128 R62 ; R61[0x00000034] := R62
	738	[3471]	GETTABLE 	R62 R50 K108 ; R62 := R50["mMissionKeyName"]
	739	[3471]	SETTABLE 	R61 K130 R62 ; R61["missionKeyName"] := R62
	740	[3471]	SETTABLE 	R61 K131 R55 ; R61[0x00000034] := R55
	741	[3471]	SETTABLE 	R61 K132 R52 ; R61["longDesc"] := R52
	742	[3472]	GETGLOBAL	R62 K133 ; R62 := 0x33bdd652
	743	[3472]	GETTABLE 	R62 R62 K134 ; R62 := R62[0x23d5322f]
	744	[3472]	MOVE     	R63 R58 ; R63 := R58
	745	[3472]	MOVE     	R64 R61 ; R64 := R61
	746	[3472]	CALL     	R62 3 1 ; R62(R63,R64)
	747	[3473]	JMP      	782 ; PC := 782
	748	[3474]	GETTABLE 	R62 R50 K135 ; R62 := R50["mInvasionNode"]
	749	[3474]	GETGLOBAL	R63 K136 ; R63 := EMPTY_SYMBOL
	750	[3474]	EQ       	1 R62 R63 ; if R62 == R63 then PC := 767
	751	[3474]	JMP      	767 ; PC := 767
	752	[3475]	NEWTABLE 	R62 0 4 ; R62 := {}
	753	[3475]	GETGLOBAL	R63 K38 ; R63 := 0x64fb1586
	754	[3475]	GETTABLE 	R64 R50 K135 ; R64 := R50["mInvasionNode"]
	755	[3475]	CALL     	R63 2 2 ; R63 := R63(R64)
	756	[3475]	SETTABLE 	R62 K128 R63 ; R62[0x00000034] := R63
	757	[3475]	GETTABLE 	R63 R50 K108 ; R63 := R50["mMissionKeyName"]
	758	[3475]	SETTABLE 	R62 K130 R63 ; R62["missionKeyName"] := R63
	759	[3475]	SETTABLE 	R62 K131 R55 ; R62[0x00000034] := R55
	760	[3475]	SETTABLE 	R62 K132 R52 ; R62["longDesc"] := R52
	761	[3476]	GETGLOBAL	R63 K133 ; R63 := 0x33bdd652
	762	[3476]	GETTABLE 	R63 R63 K134 ; R63 := R63[0x23d5322f]
	763	[3476]	MOVE     	R64 R58 ; R64 := R58
	764	[3476]	MOVE     	R65 R62 ; R65 := R62
	765	[3476]	CALL     	R63 3 1 ; R63(R64,R65)
	766	[3476]	JMP      	782 ; PC := 782
	767	[3478]	NEWTABLE 	R63 0 4 ; R63 := {}
	768	[3478]	GETUPVAL 	R64 U1 ; R64 := U1
	769	[3478]	GETTABLE 	R64 R64 K137 ; R64 := R64["ANY_NODE_PREFIX"]
	770	[3478]	MOVE     	R65 R49 ; R65 := R49
	771	[3478]	CONCAT   	R64 R64 R65 ; R64 := R64 .. R65
	772	[3478]	SETTABLE 	R63 K128 R64 ; R63[0x00000034] := R64
	773	[3478]	GETTABLE 	R64 R50 K108 ; R64 := R50["mMissionKeyName"]
	774	[3478]	SETTABLE 	R63 K130 R64 ; R63["missionKeyName"] := R64
	775	[3478]	SETTABLE 	R63 K131 R55 ; R63[0x00000034] := R55
	776	[3478]	SETTABLE 	R63 K132 R52 ; R63["longDesc"] := R52
	777	[3479]	GETGLOBAL	R64 K133 ; R64 := 0x33bdd652
	778	[3479]	GETTABLE 	R64 R64 K134 ; R64 := R64[0x23d5322f]
	779	[3479]	MOVE     	R65 R58 ; R65 := R58
	780	[3479]	MOVE     	R66 R63 ; R66 := R63
	781	[3479]	CALL     	R64 3 1 ; R64(R65,R66)
	782	[3482]	GETUPVAL 	R64 U1 ; R64 := U1
	783	[3482]	GETTABLE 	R64 R64 K138 ; R64 := R64[0x9897ecc6]
	784	[3482]	MOVE     	R65 R50 ; R65 := R50
	785	[3482]	CALL     	R64 2 4 ; R64,R65,R66 := R64(R65)
	786	[3484]	LOADK    	R67 := 1.000000
	787	[3484]	GETTABLE 	R68 R50 K139 ; R68 := R50["mConcurrentNodes"]
	788	[3484]	LEN      	R68 R68 ; R68 := # R68
	789	[3484]	LOADK    	R69 := 1.000000
	790	[3484]	FORPREP  	R67 1076 ; R67 -= R69; PC := 1076
	791	[3486]	GETTABLE 	R71 R50 K139 ; R71 := R50["mConcurrentNodes"]
	792	[3486]	GETTABLE 	R71 R71 R70 ; R71 := R71[R70]
	793	[3487]	GETTABLE 	R72 R50 K77 ; R72 := R50["mNode"]
	794	[3487]	EQ       	1 R71 R72 ; if R71 == R72 then PC := 1076
	795	[3487]	JMP      	1076 ; PC := 1076
	796	[3487]	EQ       	1 R71 K81 ; if R71 == "" then PC := 1076
	797	[3487]	JMP      	1076 ; PC := 1076
	798	[3489]	GETUPVAL 	R72 U0 ; R72 := U0
	799	[3490]	GETTABLE 	R73 R50 K140 ; R73 := R50["mConcurrentNodeReqs"]
	800	[3490]	LEN      	R73 R73 ; R73 := # R73
	801	[3490]	LE       	0 R70 R73 ; if R70 > R73 then PC := 819
	802	[3490]	JMP      	819 ; PC := 819
	803	[3490]	GETTABLE 	R73 R50 K140 ; R73 := R50["mConcurrentNodeReqs"]
	804	[3490]	GETTABLE 	R73 R73 R70 ; R73 := R73[R70]
	805	[3490]	LT       	0 K37 R73 ; if 0.000000 >= R73 then PC := 819
	806	[3490]	JMP      	819 ; PC := 819
	807	[3492]	GETUPVAL 	R73 U7 ; R73 := U7
	808	[3492]	GETTABLE 	R73 R73 K141 ; R73 := R73[0x06d055f9]
	809	[3492]	GETTABLE 	R74 R50 K142 ; R74 := R50["mBest"]
	810	[3492]	MOVE     	R75 R65 ; R75 := R65
	811	[3492]	MOVE     	R76 R64 ; R76 := R64
	812	[3492]	CALL     	R73 4 2 ; R73 := R73(R74,R75,R76)
	813	[3492]	GETTABLE 	R74 R50 K140 ; R74 := R50["mConcurrentNodeReqs"]
	814	[3492]	GETTABLE 	R74 R74 R70 ; R74 := R74[R70]
	815	[3492]	LE       	1 R74 R73 ; if R74 <= R73 then PC := 818
	816	[3492]	JMP      	818 ; PC := 818
	817	[3492]	OP_LOADBOOL	R72 0 1 ; R72 := false; PC := 818
	818	[3492]	OP_LOADBOOL	R72 1 0 ; R72 := true
	819	[3495]	TEST     	R72 0 ; if not R72 then PC := 946
	820	[3495]	JMP      	946 ; PC := 946
	821	[3496]	GETTABLE 	R73 R50 K108 ; R73 := R50["mMissionKeyName"]
	822	[3497]	MOVE     	R74 R55 ; R74 := R55
	823	[3498]	OP_LOADBOOL	R75 0 0 ; R75 := false
	824	[3500]	GETTABLE 	R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
	825	[3500]	LEN      	R76 R76 ; R76 := # R76
	826	[3500]	LE       	0 R70 R76 ; if R70 > R76 then PC := 884
	827	[3500]	JMP      	884 ; PC := 884
	828	[3500]	GETTABLE 	R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
	829	[3500]	GETTABLE 	R76 R76 R70 ; R76 := R76[R70]
	830	[3500]	TEST     	R76 0 ; if not R76 then PC := 884
	831	[3500]	JMP      	884 ; PC := 884
	832	[3500]	GETTABLE 	R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
	833	[3500]	GETTABLE 	R76 R76 R70 ; R76 := R76[R70]
	834	[3500]	EQ       	1 R76 K81 ; if R76 == "" then PC := 884
	835	[3500]	JMP      	884 ; PC := 884
	836	[3502]	GETTABLE 	R76 R50 K143 ; R76 := R50["mConcurrentMissionKeyNames"]
	837	[3502]	GETTABLE 	R73 R76 R70 ; R73 := R76[R70]
	838	[3504]	GETGLOBAL	R76 K121 ; R76 := 0xb009bbc6
	839	[3504]	MOVE     	R77 R73 ; R77 := R73
	840	[3504]	CALL     	R76 2 2 ; R76 := R76(R77)
	841	[3505]	GETGLOBAL	R77 K0 ; R77 := 0x7b998233
	842	[3505]	MOVE     	R78 R76 ; R78 := R76
	843	[3505]	CALL     	R77 2 2 ; R77 := R77(R78)
	844	[3505]	TEST     	R77 1 ; if R77 then PC := 854
	845	[3505]	JMP      	854 ; PC := 854
	846	[3506]	SELF     	R77 R76 K122 ; R78 := R76; R77 := R76[0xef893aec]
	847	[3506]	CALL     	R77 2 2 ; R77 := R77(R78)
	848	[3506]	MOVE     	R74 R77 ; R74 := R77
	849	[3507]	GETGLOBAL	R77 K38 ; R77 := 0x64fb1586
	850	[3507]	SELF     	R78 R76 K123 ; R79 := R76; R78 := R76[0x030ae5e5]
	851	[3507]	CALL     	R78 2 0 ; R78,... := R78(R79)
	852	[3507]	CALL     	R77 0 2 ; R77 := R77(R78,...)
	853	[3507]	MOVE     	R52 R77 ; R52 := R77
	854	[3510]	GETTABLE 	R77 R50 K144 ; R77 := R50["mClampNodeScores"]
	855	[3510]	TEST     	R77 0 ; if not R77 then PC := 863
	856	[3510]	JMP      	863 ; PC := 863
	857	[3510]	GETTABLE 	R77 R50 K140 ; R77 := R50["mConcurrentNodeReqs"]
	858	[3510]	GETTABLE 	R77 R77 R70 ; R77 := R77[R70]
	859	[3510]	GETTABLE 	R78 R50 K145 ; R78 := R50["mGoal"]
	860	[3510]	LE       	0 R78 R77 ; if R78 > R77 then PC := 863
	861	[3510]	JMP      	863 ; PC := 863
	862	[3512]	OP_LOADBOOL	R75 1 0 ; R75 := true
	863	[3515]	GETGLOBAL	R77 K4 ; R77 := _T
	864	[3515]	GETTABLE 	R77 R77 K117 ; R77 := R77["CachedGoalKeys"]
	865	[3515]	GETTABLE 	R77 R77 R71 ; R77 := R77[R71]
	866	[3515]	TEST     	R77 1 ; if R77 then PC := 927
	867	[3515]	JMP      	927 ; PC := 927
	868	[3516]	GETGLOBAL	R77 K4 ; R77 := _T
	869	[3516]	GETTABLE 	R77 R77 K118 ; R77 := R77["CachedGoalKeyTypes"]
	870	[3516]	GETGLOBAL	R78 K120 ; R78 := 0x88efc25e
	871	[3516]	GETTABLE 	R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
	872	[3516]	GETTABLE 	R79 R79 R70 ; R79 := R79[R70]
	873	[3516]	CALL     	R78 2 2 ; R78 := R78(R79)
	874	[3516]	SETTABLE 	R77 R71 R78 ; R77[R71] := R78
	875	[3517]	GETGLOBAL	R77 K4 ; R77 := _T
	876	[3517]	GETTABLE 	R77 R77 K117 ; R77 := R77["CachedGoalKeys"]
	877	[3517]	GETGLOBAL	R78 K121 ; R78 := 0xb009bbc6
	878	[3517]	GETGLOBAL	R79 K4 ; R79 := _T
	879	[3517]	GETTABLE 	R79 R79 K118 ; R79 := R79["CachedGoalKeyTypes"]
	880	[3517]	GETTABLE 	R79 R79 R71 ; R79 := R79[R71]
	881	[3517]	CALL     	R78 2 2 ; R78 := R78(R79)
	882	[3517]	SETTABLE 	R77 R71 R78 ; R77[R71] := R78
	883	[3518]	JMP      	927 ; PC := 927
	884	[3520]	GETTABLE 	R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
	885	[3520]	LEN      	R77 R77 ; R77 := # R77
	886	[3520]	LE       	0 R70 R77 ; if R70 > R77 then PC := 907
	887	[3520]	JMP      	907 ; PC := 907
	888	[3520]	GETTABLE 	R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
	889	[3520]	GETTABLE 	R77 R77 R70 ; R77 := R77[R70]
	890	[3520]	TEST     	R77 0 ; if not R77 then PC := 907
	891	[3520]	JMP      	907 ; PC := 907
	892	[3522]	GETTABLE 	R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
	893	[3522]	GETTABLE 	R77 R77 R70 ; R77 := R77[R70]
	894	[3522]	SELF     	R77 R77 K114 ; R78 := R77; R77 := R77[0x8f89d633]
	895	[3522]	CALL     	R77 2 2 ; R77 := R77(R78)
	896	[3522]	MOVE     	R74 R77 ; R74 := R77
	897	[3523]	GETTABLE 	R77 R50 K144 ; R77 := R50["mClampNodeScores"]
	898	[3523]	TEST     	R77 0 ; if not R77 then PC := 927
	899	[3523]	JMP      	927 ; PC := 927
	900	[3523]	GETTABLE 	R77 R50 K140 ; R77 := R50["mConcurrentNodeReqs"]
	901	[3523]	GETTABLE 	R77 R77 R70 ; R77 := R77[R70]
	902	[3523]	GETTABLE 	R78 R50 K145 ; R78 := R50["mGoal"]
	903	[3523]	LE       	0 R78 R77 ; if R78 > R77 then PC := 927
	904	[3523]	JMP      	927 ; PC := 927
	905	[3525]	OP_LOADBOOL	R75 1 0 ; R75 := true
	906	[3526]	JMP      	927 ; PC := 927
	907	[3527]	GETTABLE 	R77 R50 K143 ; R77 := R50["mConcurrentMissionKeyNames"]
	908	[3527]	LEN      	R77 R77 ; R77 := # R77
	909	[3527]	EQ       	0 R77 K37 ; if R77 ~= 0.000000 then PC := 927
	910	[3527]	JMP      	927 ; PC := 927
	911	[3527]	GETTABLE 	R77 R50 K146 ; R77 := R50["mConcurrentMissionInfo"]
	912	[3527]	LEN      	R77 R77 ; R77 := # R77
	913	[3527]	EQ       	0 R77 K37 ; if R77 ~= 0.000000 then PC := 927
	914	[3527]	JMP      	927 ; PC := 927
	915	[3529]	GETUPVAL 	R77 U1 ; R77 := U1
	916	[3529]	GETTABLE 	R77 R77 K26 ; R77 := R77[0x5e35d4d6]
	917	[3529]	CALL     	R77 1 2 ; R77 := R77()
	918	[3529]	SELF     	R77 R77 K31 ; R78 := R77; R77 := R77[0x3ad9ed31]
	919	[3529]	GETGLOBAL	R79 K105 ; R79 := 0x0469f296
	920	[3529]	MOVE     	R80 R71 ; R80 := R71
	921	[3529]	CALL     	R79 2 0 ; R79,... := R79(R80)
	922	[3529]	CALL     	R77 0 2 ; R77 := R77(R78,...)
	923	[3530]	GETTABLE 	R78 R77 K87 ; R78 := R77["mission"]
	924	[3530]	SELF     	R78 R78 K114 ; R79 := R78; R78 := R78[0x8f89d633]
	925	[3530]	CALL     	R78 2 2 ; R78 := R78(R79)
	926	[3530]	MOVE     	R74 R78 ; R74 := R78
	927	[3533]	ADD      	R59 R59 K45 ; R59 := R59 + 1.000000
	928	[3534]	NEWTABLE 	R78 0 8 ; R78 := {}
	929	[3534]	SETTABLE 	R78 K128 R71 ; R78[0x00000034] := R71
	930	[3534]	SETTABLE 	R78 K130 R73 ; R78["missionKeyName"] := R73
	931	[3534]	SETTABLE 	R78 K131 R74 ; R78[0x00000034] := R74
	932	[3534]	SETTABLE 	R78 K147 K93 ; R78["concurrent"] := true
	933	[3534]	SETTABLE 	R78 K148 R75 ; R78["challenge"] := R75
	934	[3534]	ADD      	R79 R59 K45 ; R79 := R59 + 1.000000
	935	[3534]	SETTABLE 	R78 K149 R79 ; R78["concurrentNumeral"] := R79
	936	[3534]	GETTABLE 	R79 R50 K140 ; R79 := R50["mConcurrentNodeReqs"]
	937	[3534]	GETTABLE 	R79 R79 R70 ; R79 := R79[R70]
	938	[3534]	SETTABLE 	R78 K150 R79 ; R78["nodeScoreReq"] := R79
	939	[3534]	SETTABLE 	R78 K132 R52 ; R78["longDesc"] := R52
	940	[3535]	GETGLOBAL	R79 K133 ; R79 := 0x33bdd652
	941	[3535]	GETTABLE 	R79 R79 K134 ; R79 := R79[0x23d5322f]
	942	[3535]	MOVE     	R80 R58 ; R80 := R58
	943	[3535]	MOVE     	R81 R78 ; R81 := R78
	944	[3535]	CALL     	R79 3 1 ; R79(R80,R81)
	945	[3535]	JMP      	1076 ; PC := 1076
	946	[3538]	GETGLOBAL	R79 K4 ; R79 := _T
	947	[3538]	GETTABLE 	R79 R79 K16 ; R79 := R79["LockedGoalList"]
	948	[3538]	NEWTABLE 	R80 0 1 ; R80 := {}
	949	[3538]	GETTABLE 	R81 R50 K107 ; R81 := R50["mDesc"]
	950	[3538]	SETTABLE 	R80 K107 R81 ; R80["mDesc"] := R81
	951	[3538]	SETTABLE 	R79 R71 R80 ; R79[R71] := R80
	952	[3540]	GETTABLE 	R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
	953	[3540]	TEST     	R79 0 ; if not R79 then PC := 1076
	954	[3540]	JMP      	1076 ; PC := 1076
	955	[3540]	GETTABLE 	R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
	956	[3540]	LEN      	R79 R79 ; R79 := # R79
	957	[3540]	LE       	0 R70 R79 ; if R70 > R79 then PC := 1076
	958	[3540]	JMP      	1076 ; PC := 1076
	959	[3540]	GETTABLE 	R79 R50 K143 ; R79 := R50["mConcurrentMissionKeyNames"]
	960	[3540]	GETTABLE 	R79 R79 R70 ; R79 := R79[R70]
	961	[3540]	TEST     	R79 0 ; if not R79 then PC := 1076
	962	[3540]	JMP      	1076 ; PC := 1076
	963	[3541]	GETGLOBAL	R79 K4 ; R79 := _T
	964	[3541]	GETTABLE 	R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
	965	[3541]	TEST     	R79 1 ; if R79 then PC := 970
	966	[3541]	JMP      	970 ; PC := 970
	967	[3542]	GETGLOBAL	R79 K4 ; R79 := _T
	968	[3542]	NEWTABLE 	R80 0 0 ; R80 := {}
	969	[3542]	SETTABLE 	R79 K151 R80 ; R79["LockedGoalMissionInfo"] := R80
	970	[3544]	GETGLOBAL	R79 K4 ; R79 := _T
	971	[3544]	GETTABLE 	R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
	972	[3544]	GETTABLE 	R79 R79 R71 ; R79 := R79[R71]
	973	[3544]	TEST     	R79 1 ; if R79 then PC := 1076
	974	[3544]	JMP      	1076 ; PC := 1076
	975	[3545]	GETGLOBAL	R79 K4 ; R79 := _T
	976	[3545]	GETTABLE 	R79 R79 K117 ; R79 := R79["CachedGoalKeys"]
	977	[3545]	TEST     	R79 1 ; if R79 then PC := 985
	978	[3545]	JMP      	985 ; PC := 985
	979	[3546]	GETGLOBAL	R79 K4 ; R79 := _T
	980	[3546]	NEWTABLE 	R80 0 0 ; R80 := {}
	981	[3546]	SETTABLE 	R79 K117 R80 ; R79["CachedGoalKeys"] := R80
	982	[3547]	GETGLOBAL	R79 K4 ; R79 := _T
	983	[3547]	NEWTABLE 	R80 0 0 ; R80 := {}
	984	[3547]	SETTABLE 	R79 K118 R80 ; R79["CachedGoalKeyTypes"] := R80
	985	[3549]	GETGLOBAL	R79 K4 ; R79 := _T
	986	[3549]	GETTABLE 	R79 R79 K117 ; R79 := R79["CachedGoalKeys"]
	987	[3549]	GETTABLE 	R79 R79 R71 ; R79 := R79[R71]
	988	[3549]	TEST     	R79 1 ; if R79 then PC := 1005
	989	[3549]	JMP      	1005 ; PC := 1005
	990	[3550]	GETGLOBAL	R79 K4 ; R79 := _T
	991	[3550]	GETTABLE 	R79 R79 K118 ; R79 := R79["CachedGoalKeyTypes"]
	992	[3550]	GETGLOBAL	R80 K120 ; R80 := 0x88efc25e
	993	[3550]	GETTABLE 	R81 R50 K143 ; R81 := R50["mConcurrentMissionKeyNames"]
	994	[3550]	GETTABLE 	R81 R81 R70 ; R81 := R81[R70]
	995	[3550]	CALL     	R80 2 2 ; R80 := R80(R81)
	996	[3550]	SETTABLE 	R79 R71 R80 ; R79[R71] := R80
	997	[3551]	GETGLOBAL	R79 K4 ; R79 := _T
	998	[3551]	GETTABLE 	R79 R79 K117 ; R79 := R79["CachedGoalKeys"]
	999	[3551]	GETGLOBAL	R80 K121 ; R80 := 0xb009bbc6
	1000	[3551]	GETGLOBAL	R81 K4 ; R81 := _T
	1001	[3551]	GETTABLE 	R81 R81 K118 ; R81 := R81["CachedGoalKeyTypes"]
	1002	[3551]	GETTABLE 	R81 R81 R71 ; R81 := R81[R71]
	1003	[3551]	CALL     	R80 2 2 ; R80 := R80(R81)
	1004	[3551]	SETTABLE 	R79 R71 R80 ; R79[R71] := R80
	1005	[3553]	GETGLOBAL	R79 K0 ; R79 := 0x7b998233
	1006	[3553]	GETGLOBAL	R80 K4 ; R80 := _T
	1007	[3553]	GETTABLE 	R80 R80 K117 ; R80 := R80["CachedGoalKeys"]
	1008	[3553]	GETTABLE 	R80 R80 R71 ; R80 := R80[R71]
	1009	[3553]	CALL     	R79 2 2 ; R79 := R79(R80)
	1010	[3553]	TEST     	R79 1 ; if R79 then PC := 1076
	1011	[3553]	JMP      	1076 ; PC := 1076
	1012	[3554]	GETGLOBAL	R79 K4 ; R79 := _T
	1013	[3554]	GETTABLE 	R79 R79 K15 ; R79 := R79["CachedGoalLongDesc"]
	1014	[3554]	GETGLOBAL	R80 K38 ; R80 := 0x64fb1586
	1015	[3554]	GETGLOBAL	R81 K4 ; R81 := _T
	1016	[3554]	GETTABLE 	R81 R81 K117 ; R81 := R81["CachedGoalKeys"]
	1017	[3554]	GETTABLE 	R81 R81 R71 ; R81 := R81[R71]
	1018	[3554]	SELF     	R81 R81 K123 ; R82 := R81; R81 := R81[0x030ae5e5]
	1019	[3554]	CALL     	R81 2 0 ; R81,... := R81(R82)
	1020	[3554]	CALL     	R80 0 2 ; R80 := R80(R81,...)
	1021	[3554]	SETTABLE 	R79 R71 R80 ; R79[R71] := R80
	1022	[3556]	GETGLOBAL	R79 K4 ; R79 := _T
	1023	[3556]	GETTABLE 	R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
	1024	[3556]	NEWTABLE 	R80 0 0 ; R80 := {}
	1025	[3556]	SETTABLE 	R79 R71 R80 ; R79[R71] := R80
	1026	[3557]	GETGLOBAL	R79 K4 ; R79 := _T
	1027	[3557]	GETTABLE 	R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
	1028	[3557]	GETTABLE 	R79 R79 R71 ; R79 := R79[R71]
	1029	[3557]	GETGLOBAL	R80 K4 ; R80 := _T
	1030	[3557]	GETTABLE 	R80 R80 K117 ; R80 := R80["CachedGoalKeys"]
	1031	[3557]	GETTABLE 	R80 R80 R71 ; R80 := R80[R71]
	1032	[3557]	SELF     	R80 R80 K122 ; R81 := R80; R80 := R80[0xef893aec]
	1033	[3557]	CALL     	R80 2 2 ; R80 := R80(R81)
	1034	[3557]	SETTABLE 	R79 K32 R80 ; R79["mMissionInfo"] := R80
	1035	[3558]	GETGLOBAL	R79 K4 ; R79 := _T
	1036	[3558]	GETTABLE 	R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
	1037	[3558]	GETTABLE 	R79 R79 R71 ; R79 := R79[R71]
	1038	[3558]	GETGLOBAL	R80 K152 ; R80 := 0x603636ad
	1039	[3558]	GETTABLE 	R81 R50 K107 ; R81 := R50["mDesc"]
	1040	[3558]	OP_LOADBOOL	R82 0 0 ; R82 := false
	1041	[3558]	CALL     	R80 3 2 ; R80 := R80(R81,R82)
	1042	[3558]	LOADK    	R81 K153 ; R81 := " - "
	1043	[3558]	GETGLOBAL	R82 K152 ; R82 := 0x603636ad
	1044	[3558]	LOADK    	R83 K154 ; R83 := "/Lotus/Language/Menu/Lobby_Mission"
	1045	[3558]	LOADNIL  	R84 R84 ; R84 := nil
	1046	[3558]	CALL     	R82 3 2 ; R82 := R82(R83,R84)
	1047	[3558]	LOADK    	R83 K155 ; R83 := " "
	1048	[3558]	GETGLOBAL	R84 K38 ; R84 := 0x64fb1586
	1049	[3558]	ADD      	R85 R70 K45 ; R85 := R70 + 1.000000
	1050	[3558]	CALL     	R84 2 2 ; R84 := R84(R85)
	1051	[3558]	CONCAT   	R80 R80 R84 ; R80 := R80 .. R81 .. R82 .. R83 .. R84
	1052	[3558]	SETTABLE 	R79 K107 R80 ; R79["mDesc"] := R80
	1053	[3559]	GETGLOBAL	R79 K4 ; R79 := _T
	1054	[3559]	GETTABLE 	R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
	1055	[3559]	GETTABLE 	R79 R79 R71 ; R79 := R79[R71]
	1056	[3559]	GETGLOBAL	R80 K156 ; R80 := 0x8650181f
	1057	[3559]	GETTABLE 	R81 R50 K42 ; R81 := R50["mId"]
	1058	[3559]	GETTABLE 	R81 R81 K42 ; R81 := R81["mId"]
	1059	[3559]	CALL     	R80 2 2 ; R80 := R80(R81)
	1060	[3559]	SETTABLE 	R79 K42 R80 ; R79["mId"] := R80
	1061	[3560]	GETGLOBAL	R79 K4 ; R79 := _T
	1062	[3560]	GETTABLE 	R79 R79 K151 ; R79 := R79["LockedGoalMissionInfo"]
	1063	[3560]	GETTABLE 	R79 R79 R71 ; R79 := R79[R71]
	1064	[3560]	GETGLOBAL	R80 K105 ; R80 := 0x0469f296
	1065	[3560]	GETTABLE 	R81 R50 K67 ; R81 := R50["mTag"]
	1066	[3560]	CALL     	R80 2 2 ; R80 := R80(R81)
	1067	[3560]	SETTABLE 	R79 K67 R80 ; R79["mTag"] := R80
	1068	[3562]	GETGLOBAL	R79 K4 ; R79 := _T
	1069	[3562]	GETTABLE 	R79 R79 K16 ; R79 := R79["LockedGoalList"]
	1070	[3562]	GETTABLE 	R79 R79 R71 ; R79 := R79[R71]
	1071	[3562]	GETGLOBAL	R80 K4 ; R80 := _T
	1072	[3562]	GETTABLE 	R80 R80 K151 ; R80 := R80["LockedGoalMissionInfo"]
	1073	[3562]	GETTABLE 	R80 R80 R71 ; R80 := R80[R71]
	1074	[3562]	GETTABLE 	R80 R80 K107 ; R80 := R80["mDesc"]
	1075	[3562]	SETTABLE 	R79 K107 R80 ; R79["mDesc"] := R80
	1076	[3484]	FORLOOP  	R67 791 ; R67 += R69; if R67 <= R68 then begin PC := 791; R70 := R67 end
	1077	[3570]	LOADK    	R79 := 1.000000
	1078	[3570]	LEN      	R80 R58 ; R80 := # R58
	1079	[3570]	LOADK    	R81 := 1.000000
	1080	[3570]	FORPREP  	R79 1272 ; R79 -= R81; PC := 1272
	1081	[3571]	GETTABLE 	R83 R58 R82 ; R83 := R58[R82]
	1082	[3572]	GETTABLE 	R84 R83 K128 ; R84 := R83["nodeName"]
	1083	[3574]	GETGLOBAL	R85 K7 ; R85 := 0x0032441c
	1084	[3574]	GETTABLE 	R85 R85 K8 ; R85 := R85["CachedGoalInfo"]
	1085	[3574]	SELF     	R86 R50 K114 ; R87 := R50; R86 := R50[0x8f89d633]
	1086	[3574]	CALL     	R86 2 2 ; R86 := R86(R87)
	1087	[3574]	SETTABLE 	R85 R84 R86 ; R85[R84] := R86
	1088	[3575]	GETGLOBAL	R85 K7 ; R85 := 0x0032441c
	1089	[3575]	GETTABLE 	R85 R85 K8 ; R85 := R85["CachedGoalInfo"]
	1090	[3575]	GETTABLE 	R85 R85 R84 ; R85 := R85[R84]
	1091	[3575]	SETTABLE 	R85 K77 R84 ; R85["mNode"] := R84
	1092	[3576]	GETGLOBAL	R85 K4 ; R85 := _T
	1093	[3576]	GETTABLE 	R85 R85 K15 ; R85 := R85["CachedGoalLongDesc"]
	1094	[3576]	GETTABLE 	R86 R83 K132 ; R86 := R83["longDesc"]
	1095	[3576]	SETTABLE 	R85 R84 R86 ; R85[R84] := R86
	1096	[3578]	GETGLOBAL	R85 K38 ; R85 := 0x64fb1586
	1097	[3578]	GETTABLE 	R86 R50 K110 ; R86 := R50["mVictimNode"]
	1098	[3578]	CALL     	R85 2 2 ; R85 := R85(R86)
	1099	[3579]	EQ       	1 R85 K81 ; if R85 == "" then PC := 1115
	1100	[3579]	JMP      	1115 ; PC := 1115
	1101	[3580]	GETGLOBAL	R86 K4 ; R86 := _T
	1102	[3580]	GETTABLE 	R86 R86 K17 ; R86 := R86["CachedNodesPendingDestruction"]
	1103	[3580]	NEWTABLE 	R87 0 2 ; R87 := {}
	1104	[3580]	GETTABLE 	R88 R50 K112 ; R88 := R50["mHealthPct"]
	1105	[3580]	LT       	1 K37 R88 ; if 0.000000 < R88 then PC := 1108
	1106	[3580]	JMP      	1108 ; PC := 1108
	1107	[3580]	OP_LOADBOOL	R88 0 1 ; R88 := false; PC := 1108
	1108	[3580]	OP_LOADBOOL	R88 1 0 ; R88 := true
	1109	[3580]	SETTABLE 	R87 K111 R88 ; R87["shouldLock"] := R88
	1110	[3580]	GETTABLE 	R88 R50 K36 ; R88 := R50["mExpiry"]
	1111	[3580]	SELF     	R88 R88 K114 ; R89 := R88; R88 := R88[0x8f89d633]
	1112	[3580]	CALL     	R88 2 2 ; R88 := R88(R89)
	1113	[3580]	SETTABLE 	R87 K113 R88 ; R87["lockTime"] := R88
	1114	[3580]	SETTABLE 	R86 R85 R87 ; R86[R85] := R87
	1115	[3583]	GETTABLE 	R86 R83 K131 ; R86 := R83["missionKeyInfo"]
	1116	[3583]	TEST     	R86 0 ; if not R86 then PC := 1143
	1117	[3583]	JMP      	1143 ; PC := 1143
	1118	[3584]	GETGLOBAL	R86 K7 ; R86 := 0x0032441c
	1119	[3584]	GETTABLE 	R86 R86 K8 ; R86 := R86["CachedGoalInfo"]
	1120	[3584]	GETTABLE 	R86 R86 R84 ; R86 := R86[R84]
	1121	[3584]	GETTABLE 	R87 R83 K130 ; R87 := R83["missionKeyName"]
	1122	[3584]	SETTABLE 	R86 K108 R87 ; R86["mMissionKeyName"] := R87
	1123	[3585]	GETGLOBAL	R86 K7 ; R86 := 0x0032441c
	1124	[3585]	GETTABLE 	R86 R86 K8 ; R86 := R86["CachedGoalInfo"]
	1125	[3585]	GETTABLE 	R86 R86 R84 ; R86 := R86[R84]
	1126	[3585]	GETTABLE 	R87 R83 K131 ; R87 := R83["missionKeyInfo"]
	1127	[3585]	SETTABLE 	R86 K32 R87 ; R86["mMissionInfo"] := R87
	1128	[3586]	GETGLOBAL	R86 K7 ; R86 := 0x0032441c
	1129	[3586]	GETTABLE 	R86 R86 K8 ; R86 := R86["CachedGoalInfo"]
	1130	[3586]	GETTABLE 	R86 R86 R84 ; R86 := R86[R84]
	1131	[3586]	GETTABLE 	R86 R86 K32 ; R86 := R86["mMissionInfo"]
	1132	[3586]	GETGLOBAL	R87 K105 ; R87 := 0x0469f296
	1133	[3586]	MOVE     	R88 R84 ; R88 := R84
	1134	[3586]	CALL     	R87 2 2 ; R87 := R87(R88)
	1135	[3586]	SETTABLE 	R86 K33 R87 ; R86["location"] := R87
	1136	[3587]	GETGLOBAL	R86 K7 ; R86 := 0x0032441c
	1137	[3587]	GETTABLE 	R86 R86 K8 ; R86 := R86["CachedGoalInfo"]
	1138	[3587]	GETTABLE 	R86 R86 R84 ; R86 := R86[R84]
	1139	[3587]	GETTABLE 	R86 R86 K32 ; R86 := R86["mMissionInfo"]
	1140	[3587]	GETTABLE 	R87 R50 K42 ; R87 := R50["mId"]
	1141	[3587]	GETTABLE 	R87 R87 K42 ; R87 := R87["mId"]
	1142	[3587]	SETTABLE 	R86 K127 R87 ; R86["goalId"] := R87
	1143	[3590]	GETTABLE 	R86 R83 K147 ; R86 := R83["concurrent"]
	1144	[3590]	EQ       	0 R86 K93 ; if R86 ~= true then PC := 1171
	1145	[3590]	JMP      	1171 ; PC := 1171
	1146	[3591]	GETGLOBAL	R86 K7 ; R86 := 0x0032441c
	1147	[3591]	GETTABLE 	R86 R86 K9 ; R86 := R86["MergedGoalNodes"]
	1148	[3591]	GETTABLE 	R87 R83 K150 ; R87 := R83["nodeScoreReq"]
	1149	[3591]	SETTABLE 	R86 R84 R87 ; R86[R84] := R87
	1150	[3592]	GETGLOBAL	R86 K7 ; R86 := 0x0032441c
	1151	[3592]	GETTABLE 	R86 R86 K8 ; R86 := R86["CachedGoalInfo"]
	1152	[3592]	GETTABLE 	R86 R86 R84 ; R86 := R86[R84]
	1153	[3592]	GETGLOBAL	R87 K152 ; R87 := 0x603636ad
	1154	[3592]	GETGLOBAL	R88 K7 ; R88 := 0x0032441c
	1155	[3592]	GETTABLE 	R88 R88 K8 ; R88 := R88["CachedGoalInfo"]
	1156	[3592]	GETTABLE 	R88 R88 R84 ; R88 := R88[R84]
	1157	[3592]	GETTABLE 	R88 R88 K107 ; R88 := R88["mDesc"]
	1158	[3592]	OP_LOADBOOL	R89 0 0 ; R89 := false
	1159	[3592]	CALL     	R87 3 2 ; R87 := R87(R88,R89)
	1160	[3592]	LOADK    	R88 K153 ; R88 := " - "
	1161	[3592]	GETGLOBAL	R89 K152 ; R89 := 0x603636ad
	1162	[3592]	LOADK    	R90 K154 ; R90 := "/Lotus/Language/Menu/Lobby_Mission"
	1163	[3592]	LOADNIL  	R91 R91 ; R91 := nil
	1164	[3592]	CALL     	R89 3 2 ; R89 := R89(R90,R91)
	1165	[3592]	LOADK    	R90 K155 ; R90 := " "
	1166	[3592]	GETGLOBAL	R91 K38 ; R91 := 0x64fb1586
	1167	[3592]	GETTABLE 	R92 R83 K149 ; R92 := R83["concurrentNumeral"]
	1168	[3592]	CALL     	R91 2 2 ; R91 := R91(R92)
	1169	[3592]	CONCAT   	R87 R87 R91 ; R87 := R87 .. R88 .. R89 .. R90 .. R91
	1170	[3592]	SETTABLE 	R86 K107 R87 ; R86["mDesc"] := R87
	1171	[3595]	GETTABLE 	R86 R83 K148 ; R86 := R83["challenge"]
	1172	[3595]	TEST     	R86 0 ; if not R86 then PC := 1197
	1173	[3595]	JMP      	1197 ; PC := 1197
	1174	[3595]	GETTABLE 	R86 R50 K67 ; R86 := R50["mTag"]
	1175	[3595]	GETGLOBAL	R87 K105 ; R87 := 0x0469f296
	1176	[3595]	LOADK    	R88 K157 ; R88 := "WaterFight"
	1177	[3595]	CALL     	R87 2 2 ; R87 := R87(R88)
	1178	[3595]	EQ       	1 R86 R87 ; if R86 == R87 then PC := 1197
	1179	[3595]	JMP      	1197 ; PC := 1197
	1180	[3596]	GETGLOBAL	R86 K7 ; R86 := 0x0032441c
	1181	[3596]	GETTABLE 	R86 R86 K8 ; R86 := R86["CachedGoalInfo"]
	1182	[3596]	GETTABLE 	R86 R86 R84 ; R86 := R86[R84]
	1183	[3596]	GETGLOBAL	R87 K152 ; R87 := 0x603636ad
	1184	[3596]	GETGLOBAL	R88 K7 ; R88 := 0x0032441c
	1185	[3596]	GETTABLE 	R88 R88 K8 ; R88 := R88["CachedGoalInfo"]
	1186	[3596]	GETTABLE 	R88 R88 R84 ; R88 := R88[R84]
	1187	[3596]	GETTABLE 	R88 R88 K107 ; R88 := R88["mDesc"]
	1188	[3596]	OP_LOADBOOL	R89 0 0 ; R89 := false
	1189	[3596]	CALL     	R87 3 2 ; R87 := R87(R88,R89)
	1190	[3596]	LOADK    	R88 K155 ; R88 := " "
	1191	[3596]	GETGLOBAL	R89 K152 ; R89 := 0x603636ad
	1192	[3596]	LOADK    	R90 K158 ; R90 := "/Lotus/Language/Menu/WorldStateChallengeMode"
	1193	[3596]	OP_LOADBOOL	R91 0 0 ; R91 := false
	1194	[3596]	CALL     	R89 3 2 ; R89 := R89(R90,R91)
	1195	[3596]	CONCAT   	R87 R87 R89 ; R87 := R87 .. R88 .. R89
	1196	[3596]	SETTABLE 	R86 K107 R87 ; R86["mDesc"] := R87
	1197	[3599]	GETGLOBAL	R86 K0 ; R86 := 0x7b998233
	1198	[3599]	GETUPVAL 	R87 U1 ; R87 := U1
	1199	[3599]	GETTABLE 	R87 R87 K137 ; R87 := R87["ANY_NODE_PREFIX"]
	1200	[3599]	CALL     	R86 2 2 ; R86 := R86(R87)
	1201	[3599]	TEST     	R86 1 ; if R86 then PC := 1211
	1202	[3599]	JMP      	1211 ; PC := 1211
	1203	[3599]	GETGLOBAL	R86 K90 ; R86 := 0x7f5022cf
	1204	[3599]	GETTABLE 	R86 R86 K91 ; R86 := R86[0xa5c556b9]
	1205	[3599]	MOVE     	R87 R84 ; R87 := R84
	1206	[3599]	GETUPVAL 	R88 U1 ; R88 := U1
	1207	[3599]	GETTABLE 	R88 R88 K137 ; R88 := R88["ANY_NODE_PREFIX"]
	1208	[3599]	CALL     	R86 3 2 ; R86 := R86(R87,R88)
	1209	[3599]	TEST     	R86 1 ; if R86 then PC := 1244
	1210	[3599]	JMP      	1244 ; PC := 1244
	1211	[3600]	SELF     	R86 R3 K31 ; R87 := R3; R86 := R3[0x3ad9ed31]
	1212	[3600]	GETGLOBAL	R88 K105 ; R88 := 0x0469f296
	1213	[3600]	MOVE     	R89 R84 ; R89 := R84
	1214	[3600]	CALL     	R88 2 0 ; R88,... := R88(R89)
	1215	[3600]	CALL     	R86 0 2 ; R86 := R86(R87,...)
	1216	[3601]	GETTABLE 	R87 R86 K44 ; R87 := R86["region"]
	1217	[3601]	ADD      	R87 R87 K45 ; R87 := R87 + 1.000000
	1218	[3603]	GETGLOBAL	R88 K4 ; R88 := _T
	1219	[3603]	GETTABLE 	R88 R88 K11 ; R88 := R88["CachedRegionStatus"]
	1220	[3603]	GETTABLE 	R88 R88 R87 ; R88 := R88[R87]
	1221	[3603]	TEST     	R88 1 ; if R88 then PC := 1227
	1222	[3603]	JMP      	1227 ; PC := 1227
	1223	[3604]	GETGLOBAL	R88 K4 ; R88 := _T
	1224	[3604]	GETTABLE 	R88 R88 K11 ; R88 := R88["CachedRegionStatus"]
	1225	[3604]	NEWTABLE 	R89 0 0 ; R89 := {}
	1226	[3604]	SETTABLE 	R88 R87 R89 ; R88[R87] := R89
	1227	[3606]	GETGLOBAL	R88 K4 ; R88 := _T
	1228	[3606]	GETTABLE 	R88 R88 K11 ; R88 := R88["CachedRegionStatus"]
	1229	[3606]	GETTABLE 	R88 R88 R87 ; R88 := R88[R87]
	1230	[3606]	SETTABLE 	R88 K159 K93 ; R88["goal"] := true
	1231	[3607]	GETGLOBAL	R88 K4 ; R88 := _T
	1232	[3607]	GETTABLE 	R88 R88 K11 ; R88 := R88["CachedRegionStatus"]
	1233	[3607]	GETTABLE 	R88 R88 R87 ; R88 := R88[R87]
	1234	[3607]	GETUPVAL 	R89 U7 ; R89 := U7
	1235	[3607]	GETTABLE 	R89 R89 K141 ; R89 := R89[0x06d055f9]
	1236	[3607]	GETGLOBAL	R90 K0 ; R90 := 0x7b998233
	1237	[3607]	GETTABLE 	R91 R50 K60 ; R91 := R50["mIcon"]
	1238	[3607]	CALL     	R90 2 2 ; R90 := R90(R91)
	1239	[3607]	GETGLOBAL	R91 K7 ; R91 := 0x0032441c
	1240	[3607]	GETTABLE 	R91 R91 K161 ; R91 := R91["UITexture_Event"]
	1241	[3607]	GETTABLE 	R92 R50 K60 ; R92 := R50["mIcon"]
	1242	[3607]	CALL     	R89 4 2 ; R89 := R89(R90,R91,R92)
	1243	[3607]	SETTABLE 	R88 K160 R89 ; R88["goalIcon"] := R89
	1244	[3610]	GETGLOBAL	R88 K38 ; R88 := 0x64fb1586
	1245	[3610]	GETTABLE 	R89 R50 K67 ; R89 := R50["mTag"]
	1246	[3610]	CALL     	R88 2 2 ; R88 := R88(R89)
	1247	[3610]	EQ       	1 R88 K81 ; if R88 == "" then PC := 1264
	1248	[3610]	JMP      	1264 ; PC := 1264
	1249	[3610]	GETGLOBAL	R88 K38 ; R88 := 0x64fb1586
	1250	[3610]	GETTABLE 	R89 R50 K67 ; R89 := R50["mTag"]
	1251	[3610]	CALL     	R88 2 2 ; R88 := R88(R89)
	1252	[3610]	GETTABLE 	R88 R24 R88 ; R88 := R24[R88]
	1253	[3610]	TEST     	R88 0 ; if not R88 then PC := 1264
	1254	[3610]	JMP      	1264 ; PC := 1264
	1255	[3612]	GETGLOBAL	R88 K7 ; R88 := 0x0032441c
	1256	[3612]	GETTABLE 	R88 R88 K8 ; R88 := R88["CachedGoalInfo"]
	1257	[3612]	GETTABLE 	R88 R88 R84 ; R88 := R88[R84]
	1258	[3612]	GETGLOBAL	R89 K38 ; R89 := 0x64fb1586
	1259	[3612]	GETTABLE 	R90 R50 K67 ; R90 := R50["mTag"]
	1260	[3612]	CALL     	R89 2 2 ; R89 := R89(R90)
	1261	[3612]	GETTABLE 	R89 R24 R89 ; R89 := R24[R89]
	1262	[3612]	GETTABLE 	R89 R89 K77 ; R89 := R89["mNode"]
	1263	[3612]	SETTABLE 	R88 K135 R89 ; R88["mInvasionNode"] := R89
	1264	[3615]	GETTABLE 	R88 R50 K104 ; R88 := R50["mRelayReconstruction"]
	1265	[3615]	TEST     	R88 0 ; if not R88 then PC := 1272
	1266	[3615]	JMP      	1272 ; PC := 1272
	1267	[3616]	GETGLOBAL	R88 K133 ; R88 := 0x33bdd652
	1268	[3616]	GETTABLE 	R88 R88 K134 ; R88 := R88[0x23d5322f]
	1269	[3616]	MOVE     	R89 R43 ; R89 := R43
	1270	[3616]	MOVE     	R90 R50 ; R90 := R50
	1271	[3616]	CALL     	R88 3 1 ; R88(R89,R90)
	1272	[3570]	FORLOOP  	R79 1081 ; R79 += R81; if R79 <= R80 then begin PC := 1081; R82 := R79 end
	1273	[3620]	GETTABLE 	R88 R50 K162 ; R88 := R50["mRewardNode"]
	1274	[3620]	EQ       	1 R88 K81 ; if R88 == "" then PC := 1295
	1275	[3620]	JMP      	1295 ; PC := 1295
	1276	[3621]	LT       	0 R64 R66 ; if R64 >= R66 then PC := 1289
	1277	[3621]	JMP      	1289 ; PC := 1289
	1278	[3622]	GETGLOBAL	R88 K7 ; R88 := 0x0032441c
	1279	[3622]	GETTABLE 	R89 R50 K162 ; R89 := R50["mRewardNode"]
	1280	[3622]	SETTABLE 	R88 K163 R89 ; R88["StarChartHiddenEventNode"] := R89
	1281	[3623]	GETGLOBAL	R88 K4 ; R88 := _T
	1282	[3623]	GETTABLE 	R88 R88 K16 ; R88 := R88["LockedGoalList"]
	1283	[3623]	GETTABLE 	R89 R50 K162 ; R89 := R50["mRewardNode"]
	1284	[3623]	NEWTABLE 	R90 0 1 ; R90 := {}
	1285	[3623]	GETTABLE 	R91 R50 K107 ; R91 := R50["mDesc"]
	1286	[3623]	SETTABLE 	R90 K107 R91 ; R90["mDesc"] := R91
	1287	[3623]	SETTABLE 	R88 R89 R90 ; R88[R89] := R90
	1288	[3623]	JMP      	1295 ; PC := 1295
	1289	[3624]	GETGLOBAL	R88 K7 ; R88 := 0x0032441c
	1290	[3624]	GETTABLE 	R88 R88 K163 ; R88 := R88["StarChartHiddenEventNode"]
	1291	[3624]	EQ       	1 R88 K24 ; if R88 == nil then PC := 1295
	1292	[3624]	JMP      	1295 ; PC := 1295
	1293	[3625]	GETGLOBAL	R88 K7 ; R88 := 0x0032441c
	1294	[3625]	SETTABLE 	R88 K163 K24 ; R88["StarChartHiddenEventNode"] := nil
	1295	[3629]	GETGLOBAL	R88 K34 ; R88 := 0x34291f5c
	1296	[3629]	GETTABLE 	R88 R88 K35 ; R88 := R88[0x397b920f]
	1297	[3629]	GETTABLE 	R89 R50 K36 ; R89 := R50["mExpiry"]
	1298	[3629]	CALL     	R88 2 2 ; R88 := R88(R89)
	1299	[3630]	LT       	0 K37 R88 ; if 0.000000 >= R88 then PC := 1305
	1300	[3630]	JMP      	1305 ; PC := 1305
	1301	[3631]	GETUPVAL 	R89 U2 ; R89 := U2
	1302	[3631]	MOVE     	R90 R6 ; R90 := R6
	1303	[3631]	MOVE     	R91 R88 ; R91 := R88
	1304	[3631]	CALL     	R89 3 1 ; R89(R90,R91)
	1305	[3367]	FORLOOP  	R46 451 ; R46 += R48; if R46 <= R47 then begin PC := 451; R49 := R46 end
	1306	[3636]	GETGLOBAL	R89 K4 ; R89 := _T
	1307	[3636]	GETUPVAL 	R90 U8 ; R90 := U8
	1308	[3636]	GETTABLE 	R90 R90 K164 ; R90 := R90[0xe8ee3de5]
	1309	[3636]	CALL     	R90 1 2 ; R90 := R90()
	1310	[3636]	SETTABLE 	R89 K10 R90 ; R89["CachedConstructionProjects"] := R90
	1311	[3639]	GETUPVAL 	R89 U9 ; R89 := U9
	1312	[3639]	GETTABLE 	R89 R89 K165 ; R89 := R89[0x141cee8e]
	1313	[3639]	MOVE     	R90 R1 ; R90 := R1
	1314	[3639]	CALL     	R89 2 2 ; R89 := R89(R90)
	1315	[3640]	TEST     	R89 0 ; if not R89 then PC := 1327
	1316	[3640]	JMP      	1327 ; PC := 1327
	1317	[3641]	GETGLOBAL	R90 K34 ; R90 := 0x34291f5c
	1318	[3641]	GETTABLE 	R90 R90 K35 ; R90 := R90[0x397b920f]
	1319	[3641]	MOVE     	R91 R89 ; R91 := R89
	1320	[3641]	CALL     	R90 2 2 ; R90 := R90(R91)
	1321	[3642]	LT       	0 K37 R90 ; if 0.000000 >= R90 then PC := 1327
	1322	[3642]	JMP      	1327 ; PC := 1327
	1323	[3643]	GETUPVAL 	R91 U2 ; R91 := U2
	1324	[3643]	LOADK    	R92 K166 ; R92 := "Sortie"
	1325	[3643]	MOVE     	R93 R90 ; R93 := R90
	1326	[3643]	CALL     	R91 3 1 ; R91(R92,R93)
	1327	[3647]	GETUPVAL 	R91 U9 ; R91 := U9
	1328	[3647]	GETTABLE 	R91 R91 K167 ; R91 := R91[0xd6b6f58a]
	1329	[3647]	MOVE     	R92 R1 ; R92 := R1
	1330	[3647]	CALL     	R91 2 2 ; R91 := R91(R92)
	1331	[3648]	TEST     	R91 0 ; if not R91 then PC := 1343
	1332	[3648]	JMP      	1343 ; PC := 1343
	1333	[3649]	GETGLOBAL	R92 K34 ; R92 := 0x34291f5c
	1334	[3649]	GETTABLE 	R92 R92 K35 ; R92 := R92[0x397b920f]
	1335	[3649]	MOVE     	R93 R91 ; R93 := R91
	1336	[3649]	CALL     	R92 2 2 ; R92 := R92(R93)
	1337	[3650]	LT       	0 K37 R92 ; if 0.000000 >= R92 then PC := 1343
	1338	[3650]	JMP      	1343 ; PC := 1343
	1339	[3651]	GETUPVAL 	R93 U2 ; R93 := U2
	1340	[3651]	LOADK    	R94 K168 ; R94 := "LiteSortie"
	1341	[3651]	MOVE     	R95 R92 ; R95 := R92
	1342	[3651]	CALL     	R93 3 1 ; R93(R94,R95)
	1343	[3656]	GETUPVAL 	R93 U10 ; R93 := U10
	1344	[3656]	GETTABLE 	R93 R93 K169 ; R93 := R93[0x132be2ac]
	1345	[3656]	MOVE     	R94 R1 ; R94 := R1
	1346	[3656]	CALL     	R93 2 2 ; R93 := R93(R94)
	1347	[3657]	TEST     	R93 0 ; if not R93 then PC := 1359
	1348	[3657]	JMP      	1359 ; PC := 1359
	1349	[3658]	GETGLOBAL	R94 K34 ; R94 := 0x34291f5c
	1350	[3658]	GETTABLE 	R94 R94 K35 ; R94 := R94[0x397b920f]
	1351	[3658]	MOVE     	R95 R93 ; R95 := R93
	1352	[3658]	CALL     	R94 2 2 ; R94 := R94(R95)
	1353	[3659]	LT       	0 K37 R94 ; if 0.000000 >= R94 then PC := 1359
	1354	[3659]	JMP      	1359 ; PC := 1359
	1355	[3660]	GETUPVAL 	R95 U2 ; R95 := U2
	1356	[3660]	LOADK    	R96 K170 ; R96 := "Syndicate"
	1357	[3660]	MOVE     	R97 R94 ; R97 := R94
	1358	[3660]	CALL     	R95 3 1 ; R95(R96,R97)
	1359	[3664]	GETUPVAL 	R95 U11 ; R95 := U11
	1360	[3664]	GETTABLE 	R95 R95 K171 ; R95 := R95[0x28cda05a]
	1361	[3664]	MOVE     	R96 R1 ; R96 := R1
	1362	[3664]	CALL     	R95 2 2 ; R95 := R95(R96)
	1363	[3665]	TEST     	R95 0 ; if not R95 then PC := 1375
	1364	[3665]	JMP      	1375 ; PC := 1375
	1365	[3666]	GETGLOBAL	R96 K34 ; R96 := 0x34291f5c
	1366	[3666]	GETTABLE 	R96 R96 K35 ; R96 := R96[0x397b920f]
	1367	[3666]	MOVE     	R97 R95 ; R97 := R95
	1368	[3666]	CALL     	R96 2 2 ; R96 := R96(R97)
	1369	[3667]	LT       	0 K37 R96 ; if 0.000000 >= R96 then PC := 1375
	1370	[3667]	JMP      	1375 ; PC := 1375
	1371	[3668]	GETUPVAL 	R97 U2 ; R97 := U2
	1372	[3668]	LOADK    	R98 K172 ; R98 := "ActiveMission"
	1373	[3668]	MOVE     	R99 R96 ; R99 := R96
	1374	[3668]	CALL     	R97 3 1 ; R97(R98,R99)
	1375	[3672]	GETUPVAL 	R97 U12 ; R97 := U12
	1376	[3672]	MOVE     	R98 R1 ; R98 := R1
	1377	[3672]	CALL     	R97 2 1 ; R97(R98)
	1378	[3674]	GETUPVAL 	R97 U13 ; R97 := U13
	1379	[3674]	MOVE     	R98 R1 ; R98 := R1
	1380	[3674]	CALL     	R97 2 2 ; R97 := R97(R98)
	1381	[3675]	TEST     	R97 0 ; if not R97 then PC := 1389
	1382	[3675]	JMP      	1389 ; PC := 1389
	1383	[3675]	LT       	0 K37 R97 ; if 0.000000 >= R97 then PC := 1389
	1384	[3675]	JMP      	1389 ; PC := 1389
	1385	[3676]	GETUPVAL 	R98 U2 ; R98 := U2
	1386	[3676]	LOADK    	R99 K173 ; R99 := "GhostTower"
	1387	[3676]	MOVE     	R100 R97 ; R100 := R97
	1388	[3676]	CALL     	R98 3 1 ; R98(R99,R100)
	1389	[3679]	GETUPVAL 	R98 U14 ; R98 := U14
	1390	[3679]	MOVE     	R99 R1 ; R99 := R1
	1391	[3679]	CALL     	R98 2 2 ; R98 := R98(R99)
	1392	[3680]	TEST     	R98 0 ; if not R98 then PC := 1400
	1393	[3680]	JMP      	1400 ; PC := 1400
	1394	[3680]	LT       	0 K37 R98 ; if 0.000000 >= R98 then PC := 1400
	1395	[3680]	JMP      	1400 ; PC := 1400
	1396	[3681]	GETUPVAL 	R99 U2 ; R99 := U2
	1397	[3681]	LOADK    	R100 K174 ; R100 := "EliteAlert"
	1398	[3681]	MOVE     	R101 R98 ; R101 := R98
	1399	[3681]	CALL     	R99 3 1 ; R99(R100,R101)
	1400	[3684]	GETUPVAL 	R99 U15 ; R99 := U15
	1401	[3684]	MOVE     	R100 R1 ; R100 := R1
	1402	[3684]	CALL     	R99 2 2 ; R99 := R99(R100)
	1403	[3685]	TEST     	R99 0 ; if not R99 then PC := 1411
	1404	[3685]	JMP      	1411 ; PC := 1411
	1405	[3685]	LT       	0 K37 R99 ; if 0.000000 >= R99 then PC := 1411
	1406	[3685]	JMP      	1411 ; PC := 1411
	1407	[3686]	GETUPVAL 	R100 U2 ; R100 := U2
	1408	[3686]	LOADK    	R101 K175 ; R101 := "HardModeDaily"
	1409	[3686]	MOVE     	R102 R99 ; R102 := R99
	1410	[3686]	CALL     	R100 3 1 ; R100(R101,R102)
	1411	[3690]	GETGLOBAL	R100 K4 ; R100 := _T
	1412	[3690]	NEWTABLE 	R101 0 0 ; R101 := {}
	1413	[3690]	SETTABLE 	R100 K12 R101 ; R100["CachedFlashSales"] := R101
	1414	[3691]	GETGLOBAL	R100 K176 ; R100 := 0xc8802016
	1415	[3691]	GETTABLE 	R101 R2 K177 ; R101 := R2["mFlashSales"]
	1416	[3691]	CALL     	R100 2 4 ; R100,R101,R102 := R100(R101)
	1417	[3691]	JMP      	1434 ; PC := 1434
	1418	[3692]	GETGLOBAL	R105 K0 ; R105 := 0x7b998233
	1419	[3692]	MOVE     	R106 R104 ; R106 := R104
	1420	[3692]	CALL     	R105 2 2 ; R105 := R105(R106)
	1421	[3692]	TEST     	R105 1 ; if R105 then PC := 1434
	1422	[3692]	JMP      	1434 ; PC := 1434
	1423	[3692]	GETGLOBAL	R105 K0 ; R105 := 0x7b998233
	1424	[3692]	GETTABLE 	R106 R104 K178 ; R106 := R104["mTypeName"]
	1425	[3692]	CALL     	R105 2 2 ; R105 := R105(R106)
	1426	[3692]	TEST     	R105 1 ; if R105 then PC := 1434
	1427	[3692]	JMP      	1434 ; PC := 1434
	1428	[3693]	GETGLOBAL	R105 K4 ; R105 := _T
	1429	[3693]	GETTABLE 	R105 R105 K12 ; R105 := R105["CachedFlashSales"]
	1430	[3693]	GETTABLE 	R106 R104 K178 ; R106 := R104["mTypeName"]
	1431	[3693]	SELF     	R106 R106 K179 ; R107 := R106; R106 := R106[0xed4e0128]
	1432	[3693]	CALL     	R106 2 2 ; R106 := R106(R107)
	1433	[3693]	SETTABLE 	R105 R106 R104 ; R105[R106] := R104
	1434	[3691]	TFORLOOP 	R100 2 ; R103,R104 := R100(R101,R102); if R103 ~= nil then begin PC = 1418; R102 := R103 end
	1435	[3694]	JMP      	1418 ; PC := 1418
	1436	[3698]	GETTABLE 	R105 R2 K180 ; R105 := R2["mVoidTraders"]
	1437	[3698]	EQ       	1 R105 K24 ; if R105 == nil then PC := 1442
	1438	[3698]	JMP      	1442 ; PC := 1442
	1439	[3699]	GETGLOBAL	R105 K4 ; R105 := _T
	1440	[3699]	GETTABLE 	R106 R2 K180 ; R106 := R2["mVoidTraders"]
	1441	[3699]	SETTABLE 	R105 K13 R106 ; R105["CachedVoidTraders"] := R106
	1442	[3703]	GETGLOBAL	R105 K4 ; R105 := _T
	1443	[3703]	GETTABLE 	R106 R2 K181 ; R106 := R2["mGlobalUpgrades"]
	1444	[3703]	SETTABLE 	R105 K14 R106 ; R105["CachedGlobalUpgrades"] := R106
	1445	[3705]	GETTABLE 	R105 R2 K182 ; R105 := R2["mVoidStorms"]
	1446	[3706]	LOADK    	R106 := 600.000000
	1447	[3707]	LOADK    	R107 := 1.000000
	1448	[3707]	LEN      	R108 R105 ; R108 := # R105
	1449	[3707]	LOADK    	R109 := 1.000000
	1450	[3707]	FORPREP  	R107 1521 ; R107 -= R109; PC := 1521
	1451	[3708]	GETTABLE 	R111 R105 R110 ; R111 := R105[R110]
	1452	[3709]	GETGLOBAL	R112 K34 ; R112 := 0x34291f5c
	1453	[3709]	GETTABLE 	R112 R112 K35 ; R112 := R112[0x397b920f]
	1454	[3709]	GETTABLE 	R113 R111 K36 ; R113 := R111["mExpiry"]
	1455	[3709]	CALL     	R112 2 2 ; R112 := R112(R113)
	1456	[3710]	GETTABLE 	R113 R111 K183 ; R113 := R111["mActiveMissionTier"]
	1457	[3711]	GETTABLE 	R114 R111 K42 ; R114 := R111["mId"]
	1458	[3711]	GETTABLE 	R114 R114 K42 ; R114 := R114["mId"]
	1459	[3712]	UNM      	R115 R106 ; R115 := ^ R106
	1460	[3712]	LT       	0 R115 R112 ; if R115 >= R112 then PC := 1521
	1461	[3712]	JMP      	1521 ; PC := 1521
	1462	[3713]	SELF     	R115 R3 K31 ; R116 := R3; R115 := R3[0x3ad9ed31]
	1463	[3713]	GETTABLE 	R117 R111 K77 ; R117 := R111["mNode"]
	1464	[3713]	CALL     	R115 3 2 ; R115 := R115(R116,R117)
	1465	[3714]	GETGLOBAL	R116 K38 ; R116 := 0x64fb1586
	1466	[3714]	GETTABLE 	R117 R115 K39 ; R117 := R115["name"]
	1467	[3714]	CALL     	R116 2 2 ; R116 := R116(R117)
	1468	[3714]	MOVE     	R6 R116 ; R6 := R116
	1469	[3715]	GETTABLE 	R116 R115 K87 ; R116 := R115["mission"]
	1470	[3715]	SELF     	R116 R116 K114 ; R117 := R116; R116 := R116[0x8f89d633]
	1471	[3715]	CALL     	R116 2 2 ; R116 := R116(R117)
	1472	[3716]	LOADK    	R117 := 10.000000
	1473	[3717]	MOVE     	R118 R6 ; R118 := R6
	1474	[3717]	LOADK    	R119 K185 ; R119 := "_"
	1475	[3717]	MOVE     	R120 R114 ; R120 := R114
	1476	[3717]	CONCAT   	R118 R118 R120 ; R118 := R118 .. R119 .. R120
	1477	[3717]	SETTABLE 	R116 K184 R118 ; R116["voidStormId"] := R118
	1478	[3718]	GETGLOBAL	R118 K105 ; R118 := 0x0469f296
	1479	[3718]	MOVE     	R119 R113 ; R119 := R113
	1480	[3718]	CALL     	R118 2 2 ; R118 := R118(R119)
	1481	[3718]	SETTABLE 	R116 K186 R118 ; R116["activeMissionTag"] := R118
	1482	[3719]	GETTABLE 	R118 R116 K64 ; R118 := R116["minEnemyLevel"]
	1483	[3719]	ADD      	R118 R118 R117 ; R118 := R118 + R117
	1484	[3719]	SETTABLE 	R116 K64 R118 ; R116["minEnemyLevel"] := R118
	1485	[3720]	GETTABLE 	R118 R116 K62 ; R118 := R116["maxEnemyLevel"]
	1486	[3720]	ADD      	R118 R118 R117 ; R118 := R118 + R117
	1487	[3720]	SETTABLE 	R116 K62 R118 ; R116["maxEnemyLevel"] := R118
	1488	[3721]	GETTABLE 	R118 R116 K187 ; R118 := R116["minSpaceEnemyLevel"]
	1489	[3721]	ADD      	R118 R118 R117 ; R118 := R118 + R117
	1490	[3721]	SETTABLE 	R116 K187 R118 ; R116["minSpaceEnemyLevel"] := R118
	1491	[3722]	GETTABLE 	R118 R116 K188 ; R118 := R116["maxSpaceEnemyLevel"]
	1492	[3722]	ADD      	R118 R118 R117 ; R118 := R118 + R117
	1493	[3722]	SETTABLE 	R116 K188 R118 ; R116[0x0c000032] := R118
	1494	[3724]	GETTABLE 	R118 R115 K51 ; R118 := R115["unlocked"]
	1495	[3724]	TEST     	R118 1 ; if R118 then PC := 1498
	1496	[3724]	JMP      	1498 ; PC := 1498
	1497	[3724]	OP_LOADBOOL	R118 0 0 ; R118 := false
	1498	[3725]	GETGLOBAL	R119 K4 ; R119 := _T
	1499	[3725]	GETTABLE 	R119 R119 K18 ; R119 := R119["CachedVoidStormMissions"]
	1500	[3725]	GETTABLE 	R120 R111 K77 ; R120 := R111["mNode"]
	1501	[3725]	SELF     	R120 R120 K189 ; R121 := R120; R120 := R120[0x6d604ba7]
	1502	[3725]	CALL     	R120 2 2 ; R120 := R120(R121)
	1503	[3725]	NEWTABLE 	R121 0 7 ; R121 := {}
	1504	[3726]	GETTABLE 	R122 R111 K40 ; R122 := R111["mActivation"]
	1505	[3726]	SELF     	R122 R122 K114 ; R123 := R122; R122 := R122[0x8f89d633]
	1506	[3726]	CALL     	R122 2 2 ; R122 := R122(R123)
	1507	[3726]	SETTABLE 	R121 K40 R122 ; R121["mActivation"] := R122
	1508	[3727]	GETTABLE 	R122 R111 K36 ; R122 := R111["mExpiry"]
	1509	[3727]	SELF     	R122 R122 K114 ; R123 := R122; R122 := R122[0x8f89d633]
	1510	[3727]	CALL     	R122 2 2 ; R122 := R122(R123)
	1511	[3727]	SETTABLE 	R121 K36 R122 ; R121["mExpiry"] := R122
	1512	[3728]	GETGLOBAL	R122 K105 ; R122 := 0x0469f296
	1513	[3728]	MOVE     	R123 R113 ; R123 := R113
	1514	[3728]	CALL     	R122 2 2 ; R122 := R122(R123)
	1515	[3728]	SETTABLE 	R121 K190 R122 ; R121["tier"] := R122
	1516	[3729]	SETTABLE 	R121 K191 K192 ; R121["enemyLevelIncrease"] := 10.000000
	1517	[3731]	SETTABLE 	R121 K32 R116 ; R121["mMissionInfo"] := R116
	1518	[3732]	SETTABLE 	R121 K57 R118 ; R121["mUnlocked"] := R118
	1519	[3733]	SETTABLE 	R121 K58 R118 ; R121["mRegionUnlocked"] := R118
	1520	[3734]	SETTABLE 	R119 R120 R121 ; R119[R120] := R121
	1521	[3707]	FORLOOP  	R107 1451 ; R107 += R109; if R107 <= R108 then begin PC := 1451; R110 := R107 end
	1522	[3738]	GETUPVAL 	R119 U3 ; R119 := U3
	1523	[3738]	GETTABLE 	R119 R119 K193 ; R119 := R119[0x5273af13]
	1524	[3738]	LOADK    	R120 K194 ; R120 := "dce"
	1525	[3738]	OP_LOADBOOL	R121 1 0 ; R121 := true
	1526	[3738]	CALL     	R119 3 2 ; R119 := R119(R120,R121)
	1527	[3739]	TEST     	R119 1 ; if R119 then PC := 1533
	1528	[3739]	JMP      	1533 ; PC := 1533
	1529	[3740]	GETGLOBAL	R120 K195 ; R120 := 0xe7f2b02f
	1530	[3740]	SELF     	R120 R120 K196 ; R121 := R120; R120 := R120[0x0da40368]
	1531	[3740]	LOADK    	R122 K81 ; R122 := ""
	1532	[3740]	CALL     	R120 3 1 ; R120(R121,R122)
	1533	[3743]	GETGLOBAL	R120 K0 ; R120 := 0x7b998233
	1534	[3743]	GETGLOBAL	R121 K4 ; R121 := _T
	1535	[3743]	GETTABLE 	R121 R121 K197 ; R121 := R121["NeedsGoalCheck"]
	1536	[3743]	CALL     	R120 2 2 ; R120 := R120(R121)
	1537	[3743]	TEST     	R120 0 ; if not R120 then PC := 1541
	1538	[3743]	JMP      	1541 ; PC := 1541
	1539	[3744]	GETGLOBAL	R120 K4 ; R120 := _T
	1540	[3744]	SETTABLE 	R120 K197 K93 ; R120["NeedsGoalCheck"] := true
	1541	[3747]	GETUPVAL 	R120 U16 ; R120 := U16
	1542	[3747]	CALL     	R120 1 1 ; R120()
	1543	[3749]	GETUPVAL 	R120 U1 ; R120 := U1
	1544	[3749]	GETTABLE 	R120 R120 K198 ; R120 := R120[0xcf1fcba4]
	1545	[3749]	CALL     	R120 1 2 ; R120 := R120()
	1546	[3749]	TEST     	R120 1 ; if R120 then PC := 1553
	1547	[3749]	JMP      	1553 ; PC := 1553
	1548	[3749]	GETGLOBAL	R120 K1 ; R120 := 0xbe190284
	1549	[3749]	SELF     	R120 R120 K199 ; R121 := R120; R120 := R120[0x99f38c13]
	1550	[3749]	CALL     	R120 2 2 ; R120 := R120(R121)
	1551	[3749]	TEST     	R120 0 ; if not R120 then PC := 1556
	1552	[3749]	JMP      	1556 ; PC := 1556
	1553	[3751]	GETUPVAL 	R120 U17 ; R120 := U17
	1554	[3751]	MOVE     	R121 R1 ; R121 := R1
	1555	[3751]	CALL     	R120 2 1 ; R120(R121)
	1556	[3754]	GETUPVAL 	R120 U18 ; R120 := U18
	1557	[3754]	GETUPVAL 	R121 U1 ; R121 := U1
	1558	[3754]	GETTABLE 	R121 R121 K200 ; R121 := R121["REGION_ID_ZARIMAN"]
	1559	[3754]	GETTABLE 	R121 R4 R121 ; R121 := R4[R121]
	1560	[3754]	GETTABLE 	R121 R121 K86 ; R121 := R121["sectors"]
	1561	[3754]	CALL     	R120 2 1 ; R120(R121)
	1562	[3756]	GETGLOBAL	R120 K0 ; R120 := 0x7b998233
	1563	[3756]	GETGLOBAL	R121 K28 ; R121 := 0x83f4e77c
	1564	[3756]	CALL     	R120 2 2 ; R120 := R120(R121)
	1565	[3756]	TEST     	R120 1 ; if R120 then PC := 1572
	1566	[3756]	JMP      	1572 ; PC := 1572
	1567	[3757]	GETGLOBAL	R120 K201 ; R120 := 0x9ba7909f
	1568	[3757]	SELF     	R120 R120 K202 ; R121 := R120; R120 := R120[0x7e17ae26]
	1569	[3757]	LOADK    	R122 K203 ; R122 := "OnWorldStateChanged"
	1570	[3757]	LOADK    	R123 K81 ; R123 := ""
	1571	[3757]	CALL     	R120 4 1 ; R120(R121,R122,R123)
	1572	[3759]	RETURN   	R0 1 ; return 

function #83 <?:3761,3763> (5 instructions, 20 bytes at 00000160FEAB8960)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[3762]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3762]	GETTABLE 	R1 R1 K0 ; R1 := R1[0xe0cba3ca]
	3	[3762]	MOVE     	R2 R0 ; R2 := R0
	4	[3762]	CALL     	R1 2 1 ; R1(R2)
	5	[3763]	RETURN   	R0 1 ; return 

function #84 <?:3765,3767> (4 instructions, 16 bytes at 00000160FEAB8A50)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3766]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3766]	MOVE     	R2 R0 ; R2 := R0
	3	[3766]	CALL     	R1 2 1 ; R1(R2)
	4	[3767]	RETURN   	R0 1 ; return 

function #85 <?:3769,3782> (47 instructions, 188 bytes at 00000160FEAB8B20)
1 param, 11 slots, 1 upvalue, 0 locals, 21 constants, 0 functions
	1	[3770]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[3770]	MOVE     	R2 R0 ; R2 := R0
	3	[3770]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3770]	TEST     	R1 1 ; if R1 then PC := 45
	5	[3770]	JMP      	45 ; PC := 45
	6	[3771]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	7	[3771]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x600a0ad6]
	8	[3771]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[3772]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0xf56f3887]
	10	[3772]	LOADK    	R4 K4 ; R4 := "ShowScanStatus"
	11	[3772]	NEWTABLE 	R5 5 0 ; R5 := {}
	12	[3772]	GETGLOBAL	R6 K5 ; R6 := 0x603636ad
	13	[3772]	LOADK    	R7 K6 ; R7 := "/Lotus/Language/Game/KuvaMurmur"
	14	[3772]	NEWTABLE 	R8 0 0 ; R8 := {}
	15	[3772]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	16	[3772]	GETGLOBAL	R7 K7 ; R7 := 0x64fb1586
	17	[3772]	GETTABLE 	R8 R1 K8 ; R8 := R1["mHints"]
	18	[3772]	GETGLOBAL	R9 K9 ; R9 := _T
	19	[3772]	GETTABLE 	R9 R9 K10 ; R9 := R9["NewRequiemHint"]
	20	[3772]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	21	[3772]	ADD      	R8 R8 K11 ; R8 := R8 + 1.000000
	22	[3772]	CALL     	R7 2 2 ; R7 := R7(R8)
	23	[3772]	LOADK    	R8 K12 ; R8 := "0"
	24	[3772]	LOADK    	R9 K13 ; R9 := "false"
	25	[3772]	LOADK    	R10 K14 ; R10 := "NEMESIS_HINT"
	26	[3772]	SETLIST  	R5 5 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 5
	27	[3772]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	28	[3773]	GETGLOBAL	R2 K9 ; R2 := _T
	29	[3773]	GETTABLE 	R2 R2 K10 ; R2 := R2["NewRequiemHint"]
	30	[3773]	GETGLOBAL	R3 K15 ; R3 := 0x0032441c
	31	[3773]	GETTABLE 	R3 R3 K16 ; R3 := R3["NumRequiemHints"]
	32	[3773]	LT       	0 R2 R3 ; if R2 >= R3 then PC := 45
	33	[3773]	JMP      	45 ; PC := 45
	34	[3774]	GETGLOBAL	R2 K9 ; R2 := _T
	35	[3774]	GETGLOBAL	R3 K9 ; R3 := _T
	36	[3774]	GETTABLE 	R3 R3 K10 ; R3 := R3["NewRequiemHint"]
	37	[3774]	ADD      	R3 R3 K11 ; R3 := R3 + 1.000000
	38	[3774]	SETTABLE 	R2 K10 R3 ; R2["NewRequiemHint"] := R3
	39	[3775]	GETGLOBAL	R2 K17 ; R2 := mTimerMgr
	40	[3775]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xbd2e96ea]
	41	[3775]	LOADK    	R4 := 6.000000
	42	[3775]	GETUPVAL 	R5 U0 ; R5 := U0
	43	[3775]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	44	[3776]	RETURN   	R0 1 ; return 
	45	[3781]	GETGLOBAL	R2 K9 ; R2 := _T
	46	[3781]	SETTABLE 	R2 K19 K20 ; R2["RequiemLoader"] := nil
	47	[3782]	RETURN   	R0 1 ; return 

function #86 <?:3784,3801> (39 instructions, 156 bytes at 00000160FEAB8F30)
2 params, 8 slots, 2 upvalues, 0 locals, 14 constants, 0 functions
	1	[3785]	TEST     	R0 0 ; if not R0 then PC := 39
	2	[3785]	JMP      	39 ; PC := 39
	3	[3786]	GETGLOBAL	R2 K0 ; R2 := mFoundryNotification
	4	[3786]	SETTABLE 	R2 K1 K2 ; R2["Refresh"] := true
	5	[3787]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[3787]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x22828de3]
	7	[3787]	OP_LOADBOOL	R3 0 0 ; R3 := false
	8	[3787]	CALL     	R2 2 1 ; R2(R3)
	9	[3789]	GETGLOBAL	R2 K4 ; R2 := 0x76ea806b
	10	[3789]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x3f3ae64c]
	11	[3789]	LOADK    	R4 := 0.000000
	12	[3789]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	13	[3790]	GETGLOBAL	R3 K6 ; R3 := 0x7b998233
	14	[3790]	MOVE     	R4 R2 ; R4 := R2
	15	[3790]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[3790]	TEST     	R3 1 ; if R3 then PC := 39
	17	[3790]	JMP      	39 ; PC := 39
	18	[3791]	SELF     	R3 R2 K7 ; R4 := R2; R3 := R2[0x80563238]
	19	[3791]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[3792]	GETGLOBAL	R4 K6 ; R4 := 0x7b998233
	21	[3792]	MOVE     	R5 R3 ; R5 := R3
	22	[3792]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[3792]	TEST     	R4 1 ; if R4 then PC := 39
	24	[3792]	JMP      	39 ; PC := 39
	25	[3793]	SELF     	R4 R3 K8 ; R5 := R3; R4 := R3[0x464542fe]
	26	[3793]	CALL     	R4 2 2 ; R4 := R4(R5)
	27	[3793]	LEN      	R4 R4 ; R4 := # R4
	28	[3793]	LT       	0 K9 R4 ; if 0.000000 >= R4 then PC := 35
	29	[3793]	JMP      	35 ; PC := 35
	30	[3794]	GETGLOBAL	R4 K10 ; R4 := 0x9ba7909f
	31	[3794]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0x7e17ae26]
	32	[3794]	LOADK    	R6 K12 ; R6 := "CouponAwarded"
	33	[3794]	LOADK    	R7 K13 ; R7 := ""
	34	[3794]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	35	[3797]	GETUPVAL 	R4 U1 ; R4 := U1
	36	[3797]	MOVE     	R5 R3 ; R5 := R3
	37	[3797]	OP_LOADBOOL	R6 1 0 ; R6 := true
	38	[3797]	CALL     	R4 3 1 ; R4(R5,R6)
	39	[3801]	RETURN   	R0 1 ; return 

function #87 <?:3803,3843> (91 instructions, 364 bytes at 00000160FEAB9210)
2 params, 11 slots, 6 upvalues, 0 locals, 22 constants, 0 functions
	1	[3804]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	2	[3804]	LOADK    	R3 K1 ; R3 := "Background: world state refreshed from db"
	3	[3804]	CALL     	R2 2 1 ; R2(R3)
	4	[3806]	EQ       	1 R1 K2 ; if R1 == "" then PC := 91
	5	[3806]	JMP      	91 ; PC := 91
	6	[3807]	GETGLOBAL	R2 K3 ; R2 := mCurrentMode
	7	[3807]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[3807]	GETTABLE 	R3 R3 K4 ; R3 := R3["UI_MODE_IN_GAME"]
	9	[3807]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 87
	10	[3807]	JMP      	87 ; PC := 87
	11	[3809]	OP_LOADBOOL	R2 0 0 ; R2 := false
	12	[3810]	GETGLOBAL	R3 K5 ; R3 := 0xa94df70b
	13	[3810]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xf87f9433]
	14	[3810]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[3810]	TEST     	R3 0 ; if not R3 then PC := 55
	16	[3810]	JMP      	55 ; PC := 55
	17	[3811]	GETUPVAL 	R3 U1 ; R3 := U1
	18	[3811]	LT       	0 K7 R3 ; if 0.000000 >= R3 then PC := 50
	19	[3811]	JMP      	50 ; PC := 50
	20	[3812]	GETUPVAL 	R3 U1 ; R3 := U1
	21	[3812]	GETUPVAL 	R4 U2 ; R4 := U2
	22	[3812]	MUL      	R3 R3 R4 ; R3 := R3 * R4
	23	[3813]	GETGLOBAL	R4 K8 ; R4 := 0x7b998233
	24	[3813]	GETGLOBAL	R5 K9 ; R5 := 0xae91e43b
	25	[3813]	CALL     	R4 2 2 ; R4 := R4(R5)
	26	[3813]	TEST     	R4 1 ; if R4 then PC := 46
	27	[3813]	JMP      	46 ; PC := 46
	28	[3814]	GETGLOBAL	R4 K9 ; R4 := 0xae91e43b
	29	[3814]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0x42b04007]
	30	[3814]	LOADK    	R6 K11 ; R6 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableCountdown"
	31	[3814]	OP_LOADBOOL	R7 0 0 ; R7 := false
	32	[3814]	NEWTABLE 	R8 0 1 ; R8 := {}
	33	[3814]	SETTABLE 	R8 K12 R3 ; R8["MINUTES"] := R3
	34	[3814]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	35	[3815]	GETGLOBAL	R5 K9 ; R5 := 0xae91e43b
	36	[3815]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0x42b04007]
	37	[3815]	LOADK    	R7 K13 ; R7 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailable"
	38	[3815]	OP_LOADBOOL	R8 0 0 ; R8 := false
	39	[3815]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	40	[3815]	LOADK    	R6 K14 ; R6 := "\r\n\r\n"
	41	[3815]	MOVE     	R7 R4 ; R7 := R4
	42	[3815]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	43	[3816]	GETUPVAL 	R6 U3 ; R6 := U3
	44	[3816]	MOVE     	R7 R5 ; R7 := R5
	45	[3816]	CALL     	R6 2 1 ; R6(R7)
	46	[3818]	GETUPVAL 	R6 U1 ; R6 := U1
	47	[3818]	SUB      	R6 R6 K15 ; R6 := R6 - 1.000000
	48	[3818]	SETUPVAL 	R6 U1 ; U1 := R6
	49	[3818]	JMP      	53 ; PC := 53
	50	[3821]	OP_LOADBOOL	R6 1 0 ; R6 := true
	51	[3821]	SETUPVAL 	R6 U4 ; U4 := R6
	52	[3822]	RETURN   	R0 1 ; return 
	53	[3824]	OP_LOADBOOL	R2 1 0 ; R2 := true
	54	[3824]	JMP      	73 ; PC := 73
	55	[3825]	GETGLOBAL	R6 K5 ; R6 := 0xa94df70b
	56	[3825]	SELF     	R6 R6 K16 ; R7 := R6; R6 := R6[0x751e7461]
	57	[3825]	CALL     	R6 2 2 ; R6 := R6(R7)
	58	[3825]	TEST     	R6 0 ; if not R6 then PC := 73
	59	[3825]	JMP      	73 ; PC := 73
	60	[3826]	GETGLOBAL	R6 K8 ; R6 := 0x7b998233
	61	[3826]	GETGLOBAL	R7 K9 ; R7 := 0xae91e43b
	62	[3826]	CALL     	R6 2 2 ; R6 := R6(R7)
	63	[3826]	TEST     	R6 1 ; if R6 then PC := 72
	64	[3826]	JMP      	72 ; PC := 72
	65	[3827]	GETUPVAL 	R6 U3 ; R6 := U3
	66	[3827]	GETGLOBAL	R7 K9 ; R7 := 0xae91e43b
	67	[3827]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0x42b04007]
	68	[3827]	LOADK    	R9 K17 ; R9 := "/Lotus/Language/Menu/MainMenu_BugReportPending"
	69	[3827]	OP_LOADBOOL	R10 0 0 ; R10 := false
	70	[3827]	CALL     	R7 4 0 ; R7,... := R7(R8,R9,R10)
	71	[3827]	CALL     	R6 0 1 ; R6(R7,...)
	72	[3829]	OP_LOADBOOL	R2 1 0 ; R2 := true
	73	[3832]	TEST     	R2 0 ; if not R2 then PC := 87
	74	[3832]	JMP      	87 ; PC := 87
	75	[3833]	GETGLOBAL	R6 K8 ; R6 := 0x7b998233
	76	[3833]	GETGLOBAL	R7 K18 ; R7 := _T
	77	[3833]	GETTABLE 	R7 R7 K19 ; R7 := R7["SquadOverlay"]
	78	[3833]	CALL     	R6 2 2 ; R6 := R6(R7)
	79	[3833]	TEST     	R6 1 ; if R6 then PC := 87
	80	[3833]	JMP      	87 ; PC := 87
	81	[3834]	GETGLOBAL	R6 K18 ; R6 := _T
	82	[3834]	GETTABLE 	R6 R6 K19 ; R6 := R6["SquadOverlay"]
	83	[3834]	SELF     	R6 R6 K20 ; R7 := R6; R6 := R6[0xe4162eed]
	84	[3834]	LOADK    	R8 K21 ; R8 := "LeaveSquadUI"
	85	[3834]	LOADK    	R9 K2 ; R9 := ""
	86	[3834]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	87	[3839]	TEST     	R0 0 ; if not R0 then PC := 91
	88	[3839]	JMP      	91 ; PC := 91
	89	[3840]	GETUPVAL 	R6 U5 ; R6 := U5
	90	[3840]	CALL     	R6 1 1 ; R6()
	91	[3843]	RETURN   	R0 1 ; return 

function #88 <?:3845,3858> (32 instructions, 128 bytes at 00000160FEAB98D0)
1 param, 8 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[3846]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3846]	GETTABLE 	R1 R1 K0 ; R1 := R1["mWorldStateCallbackRegistered"]
	3	[3846]	TEST     	R1 0 ; if not R1 then PC := 8
	4	[3846]	JMP      	8 ; PC := 8
	5	[3846]	TEST     	R0 1 ; if R0 then PC := 8
	6	[3846]	JMP      	8 ; PC := 8
	7	[3847]	RETURN   	R0 1 ; return 
	8	[3850]	GETGLOBAL	R1 K1 ; R1 := 0x76ea806b
	9	[3850]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x3f3ae64c]
	10	[3850]	LOADK    	R3 := 0.000000
	11	[3850]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[3851]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	13	[3851]	MOVE     	R3 R1 ; R3 := R1
	14	[3851]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[3851]	TEST     	R2 1 ; if R2 then PC := 32
	16	[3851]	JMP      	32 ; PC := 32
	17	[3852]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0x80563238]
	18	[3852]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[3853]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	20	[3853]	MOVE     	R4 R2 ; R4 := R2
	21	[3853]	CALL     	R3 2 2 ; R3 := R3(R4)
	22	[3853]	TEST     	R3 1 ; if R3 then PC := 32
	23	[3853]	JMP      	32 ; PC := 32
	24	[3854]	SELF     	R3 R2 K5 ; R4 := R2; R3 := R2[0x0e0439c0]
	25	[3854]	LOADK    	R5 K6 ; R5 := "OnSyncWorldState"
	26	[3854]	GETUPVAL 	R6 U0 ; R6 := U0
	27	[3854]	GETTABLE 	R6 R6 K7 ; R6 := R6["WORLD_STATE_CALLBACK_IDENTIFIER"]
	28	[3854]	MOVE     	R7 R0 ; R7 := R0
	29	[3854]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	30	[3855]	GETUPVAL 	R3 U0 ; R3 := U0
	31	[3855]	SETTABLE 	R3 K0 K8 ; R3["mWorldStateCallbackRegistered"] := true
	32	[3858]	RETURN   	R0 1 ; return 

function #89 <?:3860,3868> (20 instructions, 80 bytes at 00000160FEAB9B20)
0 params, 5 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[3861]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[3861]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[3861]	LOADK    	R2 := 0.000000
	4	[3861]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[3862]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[3862]	MOVE     	R2 R0 ; R2 := R0
	7	[3862]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[3862]	TEST     	R1 1 ; if R1 then PC := 20
	9	[3862]	JMP      	20 ; PC := 20
	10	[3863]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0x80563238]
	11	[3863]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[3864]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	13	[3864]	MOVE     	R3 R1 ; R3 := R1
	14	[3864]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[3864]	TEST     	R2 1 ; if R2 then PC := 20
	16	[3864]	JMP      	20 ; PC := 20
	17	[3865]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0x92ca4c2e]
	18	[3865]	LOADK    	R4 K5 ; R4 := "OnInventorySyncCallback"
	19	[3865]	CALL     	R2 3 1 ; R2(R3,R4)
	20	[3868]	RETURN   	R0 1 ; return 

function #90 <?:3870,3873> (14 instructions, 56 bytes at 00000160FEAB9CE0)
1 param, 5 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[3871]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3871]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x06d055f9]
	3	[3871]	EQ       	1 R0 K1 ; if R0 == "true" then PC := 6
	4	[3871]	JMP      	6 ; PC := 6
	5	[3871]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 6
	6	[3871]	OP_LOADBOOL	R2 1 0 ; R2 := true
	7	[3871]	OP_LOADBOOL	R3 1 0 ; R3 := true
	8	[3871]	OP_LOADBOOL	R4 0 0 ; R4 := false
	9	[3871]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	10	[3871]	MOVE     	R0 R1 ; R0 := R1
	11	[3872]	GETUPVAL 	R1 U1 ; R1 := U1
	12	[3872]	MOVE     	R2 R0 ; R2 := R0
	13	[3872]	CALL     	R1 2 1 ; R1(R2)
	14	[3873]	RETURN   	R0 1 ; return 

function #91 <?:3875,3910> (104 instructions, 416 bytes at 00000160FEAB9E40)
4 params, 14 slots, 2 upvalues, 0 locals, 22 constants, 0 functions
	1	[3876]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[3876]	MOVE     	R5 R1 ; R5 := R1
	3	[3876]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[3876]	TEST     	R4 0 ; if not R4 then PC := 11
	5	[3876]	JMP      	11 ; PC := 11
	6	[3877]	GETGLOBAL	R4 K1 ; R4 := 0x3d106989
	7	[3877]	LOADK    	R5 K2 ; R5 := "Error: Transmissions set is borked"
	8	[3877]	CALL     	R4 2 1 ; R4(R5)
	9	[3878]	OP_LOADBOOL	R4 0 0 ; R4 := false
	10	[3878]	RETURN   	R4 2 ; return R4 
	11	[3881]	EQ       	0 R2 K3 ; if R2 ~= nil then PC := 15
	12	[3881]	JMP      	15 ; PC := 15
	13	[3882]	GETUPVAL 	R4 U0 ; R4 := U0
	14	[3882]	GETTABLE 	R2 R4 K4 ; R2 := R4["DEFAULT"]
	15	[3885]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 18
	16	[3885]	JMP      	18 ; PC := 18
	17	[3886]	LOADK    	R3 := 0.000000
	18	[3889]	GETGLOBAL	R4 K5 ; R4 := 0x33bdd652
	19	[3889]	GETTABLE 	R4 R4 K6 ; R4 := R4[0x23d5322f]
	20	[3889]	GETUPVAL 	R5 U1 ; R5 := U1
	21	[3889]	GETTABLE 	R5 R5 K7 ; R5 := R5["Callbacks"]
	22	[3889]	MOVE     	R6 R3 ; R6 := R3
	23	[3889]	CALL     	R4 3 1 ; R4(R5,R6)
	24	[3891]	GETUPVAL 	R4 U0 ; R4 := U0
	25	[3891]	GETTABLE 	R4 R4 K8 ; R4 := R4["OVERRIDE"]
	26	[3891]	EQ       	1 R2 R4 ; if R2 == R4 then PC := 32
	27	[3891]	JMP      	32 ; PC := 32
	28	[3891]	GETUPVAL 	R4 U0 ; R4 := U0
	29	[3891]	GETTABLE 	R4 R4 K4 ; R4 := R4["DEFAULT"]
	30	[3891]	EQ       	0 R2 R4 ; if R2 ~= R4 then PC := 42
	31	[3891]	JMP      	42 ; PC := 42
	32	[3892]	GETUPVAL 	R4 U0 ; R4 := U0
	33	[3892]	GETTABLE 	R4 R4 K4 ; R4 := R4["DEFAULT"]
	34	[3892]	EQ       	0 R2 R4 ; if R2 ~= R4 then PC := 76
	35	[3892]	JMP      	76 ; PC := 76
	36	[3892]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	37	[3892]	GETUPVAL 	R5 U1 ; R5 := U1
	38	[3892]	GETTABLE 	R5 R5 K9 ; R5 := R5["SoundInst"]
	39	[3892]	CALL     	R4 2 2 ; R4 := R4(R5)
	40	[3892]	TEST     	R4 1 ; if R4 then PC := 76
	41	[3892]	JMP      	76 ; PC := 76
	42	[3893]	GETUPVAL 	R4 U0 ; R4 := U0
	43	[3893]	GETTABLE 	R4 R4 K10 ; R4 := R4["FORCE_QUEUE"]
	44	[3893]	EQ       	0 R2 R4 ; if R2 ~= R4 then PC := 56
	45	[3893]	JMP      	56 ; PC := 56
	46	[3894]	LOADK    	R4 := 1.000000
	47	[3894]	GETUPVAL 	R5 U1 ; R5 := U1
	48	[3894]	GETTABLE 	R5 R5 K11 ; R5 := R5["WaitingTransmissions"]
	49	[3894]	LEN      	R5 R5 ; R5 := # R5
	50	[3894]	LOADK    	R6 := 1.000000
	51	[3894]	FORPREP  	R4 55 ; R4 -= R6; PC := 55
	52	[3895]	GETUPVAL 	R8 U1 ; R8 := U1
	53	[3895]	GETTABLE 	R8 R8 K11 ; R8 := R8["WaitingTransmissions"]
	54	[3895]	SETTABLE 	R8 R7 K3 ; R8[R7] := nil
	55	[3894]	FORLOOP  	R4 52 ; R4 += R6; if R4 <= R5 then begin PC := 52; R7 := R4 end
	56	[3898]	GETUPVAL 	R8 U0 ; R8 := U0
	57	[3898]	GETTABLE 	R8 R8 K12 ; R8 := R8["QUEUE"]
	58	[3898]	EQ       	1 R2 R8 ; if R2 == R8 then PC := 64
	59	[3898]	JMP      	64 ; PC := 64
	60	[3898]	GETUPVAL 	R8 U0 ; R8 := U0
	61	[3898]	GETTABLE 	R8 R8 K10 ; R8 := R8["FORCE_QUEUE"]
	62	[3898]	EQ       	0 R2 R8 ; if R2 ~= R8 then PC := 74
	63	[3898]	JMP      	74 ; PC := 74
	64	[3899]	GETGLOBAL	R8 K5 ; R8 := 0x33bdd652
	65	[3899]	GETTABLE 	R8 R8 K6 ; R8 := R8[0x23d5322f]
	66	[3899]	GETUPVAL 	R9 U1 ; R9 := U1
	67	[3899]	GETTABLE 	R9 R9 K11 ; R9 := R9["WaitingTransmissions"]
	68	[3899]	SELF     	R10 R1 K13 ; R11 := R1; R10 := R1[0x10c9eef2]
	69	[3899]	GETGLOBAL	R12 K14 ; R12 := 0x0469f296
	70	[3899]	MOVE     	R13 R0 ; R13 := R0
	71	[3899]	CALL     	R12 2 0 ; R12,... := R12(R13)
	72	[3899]	CALL     	R10 0 0 ; R10,... := R10(R11,...)
	73	[3899]	CALL     	R8 0 1 ; R8(R9,...)
	74	[3901]	OP_LOADBOOL	R8 0 0 ; R8 := false
	75	[3901]	RETURN   	R8 2 ; return R8 
	76	[3904]	GETUPVAL 	R8 U1 ; R8 := U1
	77	[3904]	SELF     	R9 R1 K13 ; R10 := R1; R9 := R1[0x10c9eef2]
	78	[3904]	GETGLOBAL	R11 K14 ; R11 := 0x0469f296
	79	[3904]	MOVE     	R12 R0 ; R12 := R0
	80	[3904]	CALL     	R11 2 0 ; R11,... := R11(R12)
	81	[3904]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	82	[3904]	SETTABLE 	R8 K15 R9 ; R8["QueuedTransmission"] := R9
	83	[3905]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	84	[3905]	GETUPVAL 	R9 U1 ; R9 := U1
	85	[3905]	GETTABLE 	R9 R9 K15 ; R9 := R9["QueuedTransmission"]
	86	[3905]	CALL     	R8 2 2 ; R8 := R8(R9)
	87	[3905]	TEST     	R8 1 ; if R8 then PC := 102
	88	[3905]	JMP      	102 ; PC := 102
	89	[3906]	GETUPVAL 	R8 U1 ; R8 := U1
	90	[3906]	GETGLOBAL	R9 K17 ; R9 := 0xbd496aa1
	91	[3906]	GETTABLE 	R9 R9 K18 ; R9 := R9[0x42645da3]
	92	[3906]	NEWTABLE 	R10 0 0 ; R10 := {}
	93	[3906]	GETUPVAL 	R11 U1 ; R11 := U1
	94	[3906]	GETTABLE 	R11 R11 K15 ; R11 := R11["QueuedTransmission"]
	95	[3906]	SELF     	R11 R11 K19 ; R12 := R11; R11 := R11[0xed4e0128]
	96	[3906]	CALL     	R11 2 0 ; R11,... := R11(R12)
	97	[3906]	SETLIST  	R10 0 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 0
	98	[3906]	CALL     	R9 2 2 ; R9 := R9(R10)
	99	[3906]	SETTABLE 	R8 K16 R9 ; R8["Loader"] := R9
	100	[3907]	GETUPVAL 	R8 U1 ; R8 := U1
	101	[3907]	SETTABLE 	R8 K20 K21 ; R8["IsLoading"] := true
	102	[3909]	OP_LOADBOOL	R8 1 0 ; R8 := true
	103	[3909]	RETURN   	R8 2 ; return R8 
	104	[3910]	RETURN   	R0 1 ; return 

function #92 <?:3912,3916> (3 instructions, 12 bytes at 00000160FEABA3A0)
1 param, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3914]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3914]	CALL     	R1 1 1 ; R1()
	3	[3916]	RETURN   	R0 1 ; return 

function #93 <?:3918,3921> (5 instructions, 20 bytes at 00000160FEABA470)
2 params, 3 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[3919]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[3919]	SETTABLE 	R2 K0 R0 ; R2["Avatar"] := R0
	3	[3920]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[3920]	SETTABLE 	R2 K1 R1 ; R2[0x00000000] := R1
	5	[3921]	RETURN   	R0 1 ; return 

function #94 <?:3923,3935> (47 instructions, 188 bytes at 00000160FEABA590)
2 params, 8 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[3924]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[3924]	GETUPVAL 	R3 U0 ; R3 := U0
	3	[3924]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[3924]	TEST     	R2 1 ; if R2 then PC := 13
	5	[3924]	JMP      	13 ; PC := 13
	6	[3925]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[3925]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xe4162eed]
	8	[3925]	LOADK    	R4 K2 ; R4 := "CloseDiorama"
	9	[3925]	LOADK    	R5 K3 ; R5 := ""
	10	[3925]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	11	[3926]	LOADNIL  	R2 R2 ; R2 := nil
	12	[3926]	SETUPVAL 	R2 U0 ; U0 := R2
	13	[3928]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	14	[3928]	MOVE     	R3 R0 ; R3 := R0
	15	[3928]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[3928]	TEST     	R2 1 ; if R2 then PC := 47
	17	[3928]	JMP      	47 ; PC := 47
	18	[3929]	GETGLOBAL	R2 K4 ; R2 := 0x9ba7909f
	19	[3929]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xcfba257f]
	20	[3929]	GETGLOBAL	R4 K6 ; R4 := 0xe0c4d91f
	21	[3929]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	22	[3929]	SETUPVAL 	R2 U0 ; U0 := R2
	23	[3930]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	24	[3930]	MOVE     	R3 R1 ; R3 := R1
	25	[3930]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[3930]	TEST     	R2 1 ; if R2 then PC := 39
	27	[3930]	JMP      	39 ; PC := 39
	28	[3930]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	29	[3930]	GETGLOBAL	R3 K7 ; R3 := _T
	30	[3930]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	31	[3930]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[3930]	TEST     	R2 1 ; if R2 then PC := 39
	33	[3930]	JMP      	39 ; PC := 39
	34	[3931]	GETUPVAL 	R2 U0 ; R2 := U0
	35	[3931]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xe4162eed]
	36	[3931]	LOADK    	R4 K8 ; R4 := "SetLoadedCallback"
	37	[3931]	MOVE     	R5 R1 ; R5 := R1
	38	[3931]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	39	[3933]	GETUPVAL 	R2 U0 ; R2 := U0
	40	[3933]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xe4162eed]
	41	[3933]	LOADK    	R4 K9 ; R4 := "LoadDiorama"
	42	[3933]	GETGLOBAL	R5 K10 ; R5 := 0x64fb1586
	43	[3933]	SELF     	R6 R0 K11 ; R7 := R0; R6 := R0[0xed4e0128]
	44	[3933]	CALL     	R6 2 0 ; R6,... := R6(R7)
	45	[3933]	CALL     	R5 0 0 ; R5,... := R5(R6,...)
	46	[3933]	CALL     	R2 0 1 ; R2(R3,...)
	47	[3935]	RETURN   	R0 1 ; return 

function #95 <?:3937,3941> (8 instructions, 32 bytes at 00000160FEABA890)
2 params, 7 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[3938]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0x1044f972]
	2	[3938]	CALL     	R2 2 2 ; R2 := R2(R3)
	3	[3939]	GETTABLE 	R3 R2 K1 ; R3 := R2["level"]
	4	[3940]	GETUPVAL 	R4 U0 ; R4 := U0
	5	[3940]	MOVE     	R5 R3 ; R5 := R3
	6	[3940]	MOVE     	R6 R1 ; R6 := R1
	7	[3940]	CALL     	R4 3 1 ; R4(R5,R6)
	8	[3941]	RETURN   	R0 1 ; return 

function #96 <?:3943,3950> (22 instructions, 88 bytes at 000001608D7540B0)
2 params, 6 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[3944]	EQ       	1 R0 K0 ; if R0 == true then PC := 5
	2	[3944]	JMP      	5 ; PC := 5
	3	[3944]	EQ       	0 R0 K1 ; if R0 ~= "true" then PC := 10
	4	[3944]	JMP      	10 ; PC := 10
	5	[3945]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[3945]	GETGLOBAL	R3 K2 ; R3 := 0x4248b498
	7	[3945]	MOVE     	R4 R1 ; R4 := R1
	8	[3945]	CALL     	R2 3 1 ; R2(R3,R4)
	9	[3945]	JMP      	22 ; PC := 22
	10	[3946]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	11	[3946]	GETUPVAL 	R3 U1 ; R3 := U1
	12	[3946]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[3946]	TEST     	R2 1 ; if R2 then PC := 22
	14	[3946]	JMP      	22 ; PC := 22
	15	[3947]	GETUPVAL 	R2 U1 ; R2 := U1
	16	[3947]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xe4162eed]
	17	[3947]	LOADK    	R4 K5 ; R4 := "CloseDiorama"
	18	[3947]	LOADK    	R5 K6 ; R5 := ""
	19	[3947]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[3948]	LOADNIL  	R2 R2 ; R2 := nil
	21	[3948]	SETUPVAL 	R2 U1 ; U1 := R2
	22	[3950]	RETURN   	R0 1 ; return 

function #97 <?:3952,3965> (35 instructions, 140 bytes at 000001608D7542A0)
0 params, 6 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[3954]	GETGLOBAL	R0 K0 ; R0 := 0xe7f2b02f
	2	[3954]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0b6ebd5b]
	3	[3954]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3955]	TEST     	R0 1 ; if R0 then PC := 35
	5	[3955]	JMP      	35 ; PC := 35
	6	[3956]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	7	[3956]	GETGLOBAL	R2 K3 ; R2 := 0x0032441c
	8	[3956]	GETTABLE 	R2 R2 K4 ; R2 := R2["UIMovie_EndOfQuestMovie"]
	9	[3956]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[3956]	TEST     	R1 1 ; if R1 then PC := 35
	11	[3956]	JMP      	35 ; PC := 35
	12	[3956]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[3956]	EQ       	1 R1 K5 ; if R1 == nil then PC := 35
	14	[3956]	JMP      	35 ; PC := 35
	15	[3956]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[3956]	CALL     	R1 1 2 ; R1 := R1()
	17	[3956]	TEST     	R1 0 ; if not R1 then PC := 35
	18	[3956]	JMP      	35 ; PC := 35
	19	[3957]	GETGLOBAL	R1 K6 ; R1 := 0xae91e43b
	20	[3957]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x1fd6abd0]
	21	[3957]	GETGLOBAL	R3 K3 ; R3 := 0x0032441c
	22	[3957]	GETTABLE 	R3 R3 K4 ; R3 := R3["UIMovie_EndOfQuestMovie"]
	23	[3957]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	24	[3958]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	25	[3958]	MOVE     	R3 R1 ; R3 := R1
	26	[3958]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[3958]	TEST     	R2 1 ; if R2 then PC := 33
	28	[3958]	JMP      	33 ; PC := 33
	29	[3959]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0xe4162eed]
	30	[3959]	LOADK    	R4 K9 ; R4 := "SetQuestType"
	31	[3959]	GETUPVAL 	R5 U0 ; R5 := U0
	32	[3959]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	33	[3962]	LOADNIL  	R2 R2 ; R2 := nil
	34	[3962]	SETUPVAL 	R2 U0 ; U0 := R2
	35	[3965]	RETURN   	R0 1 ; return 

function #98 <?:3967,4012> (90 instructions, 360 bytes at 000001608D754520)
0 params, 20 slots, 1 upvalue, 0 locals, 21 constants, 0 functions
	1	[3968]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3968]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[3968]	GETTABLE 	R1 R1 K2 ; R1 := R1["NeedsGoalCheck"]
	4	[3968]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[3968]	TEST     	R0 1 ; if R0 then PC := 11
	6	[3968]	JMP      	11 ; PC := 11
	7	[3968]	GETGLOBAL	R0 K1 ; R0 := _T
	8	[3968]	GETTABLE 	R0 R0 K2 ; R0 := R0["NeedsGoalCheck"]
	9	[3968]	TEST     	R0 1 ; if R0 then PC := 12
	10	[3968]	JMP      	12 ; PC := 12
	11	[3969]	RETURN   	R0 1 ; return 
	12	[3972]	GETGLOBAL	R0 K3 ; R0 := 0x76ea806b
	13	[3972]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x3f3ae64c]
	14	[3972]	LOADK    	R2 := 0.000000
	15	[3972]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	16	[3973]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	17	[3973]	MOVE     	R2 R0 ; R2 := R0
	18	[3973]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[3973]	TEST     	R1 0 ; if not R1 then PC := 22
	20	[3973]	JMP      	22 ; PC := 22
	21	[3974]	RETURN   	R0 1 ; return 
	22	[3977]	SELF     	R1 R0 K5 ; R2 := R0; R1 := R0[0x80563238]
	23	[3977]	CALL     	R1 2 2 ; R1 := R1(R2)
	24	[3978]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	25	[3978]	MOVE     	R3 R1 ; R3 := R1
	26	[3978]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[3978]	TEST     	R2 0 ; if not R2 then PC := 30
	28	[3978]	JMP      	30 ; PC := 30
	29	[3979]	RETURN   	R0 1 ; return 
	30	[3982]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0x4b0ebe0c]
	31	[3982]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[3983]	SELF     	R3 R1 K7 ; R4 := R1; R3 := R1[0x69727e0b]
	33	[3983]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[3984]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	35	[3984]	MOVE     	R5 R3 ; R5 := R3
	36	[3984]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[3984]	TEST     	R4 0 ; if not R4 then PC := 41
	38	[3984]	JMP      	41 ; PC := 41
	39	[3985]	LOADNIL  	R4 R4 ; R4 := nil
	40	[3985]	RETURN   	R4 2 ; return R4 
	41	[3989]	LOADK    	R4 := 1.000000
	42	[3989]	GETTABLE 	R5 R3 K8 ; R5 := R3["mGoals"]
	43	[3989]	LEN      	R5 R5 ; R5 := # R5
	44	[3989]	LOADK    	R6 := 1.000000
	45	[3989]	FORPREP  	R4 63 ; R4 -= R6; PC := 63
	46	[3990]	GETTABLE 	R8 R3 K8 ; R8 := R3["mGoals"]
	47	[3990]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	48	[3991]	GETTABLE 	R9 R8 K9 ; R9 := R8["mTag"]
	49	[3991]	GETGLOBAL	R10 K10 ; R10 := 0x0469f296
	50	[3991]	LOADK    	R11 K11 ; R11 := "OldWorldSalvage"
	51	[3991]	CALL     	R10 2 2 ; R10 := R10(R11)
	52	[3991]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 63
	53	[3991]	JMP      	63 ; PC := 63
	54	[3992]	GETUPVAL 	R9 U0 ; R9 := U0
	55	[3992]	GETTABLE 	R9 R9 K12 ; R9 := R9[0x9897ecc6]
	56	[3992]	MOVE     	R10 R8 ; R10 := R8
	57	[3992]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	58	[3993]	EQ       	0 R2 K13 ; if R2 ~= "SolNode333" then PC := 63
	59	[3993]	JMP      	63 ; PC := 63
	60	[3993]	EQ       	0 R9 K14 ; if R9 ~= 1.000000 then PC := 63
	61	[3993]	JMP      	63 ; PC := 63
	62	[3995]	JMP      	64 ; PC := 64
	63	[3989]	FORLOOP  	R4 46 ; R4 += R6; if R4 <= R5 then begin PC := 46; R7 := R4 end
	64	[4000]	EQ       	0 R2 K15 ; if R2 ~= "SolNode332" then PC := 85
	65	[4000]	JMP      	85 ; PC := 85
	66	[4001]	SELF     	R12 R1 K16 ; R13 := R1; R12 := R1[0xb407484d]
	67	[4001]	CALL     	R12 2 2 ; R12 := R12(R13)
	68	[4002]	LOADK    	R13 := 1.000000
	69	[4002]	LEN      	R14 R12 ; R14 := # R12
	70	[4002]	LOADK    	R15 := 1.000000
	71	[4002]	FORPREP  	R13 84 ; R13 -= R15; PC := 84
	72	[4003]	GETTABLE 	R17 R12 R16 ; R17 := R12[R16]
	73	[4003]	GETTABLE 	R17 R17 K9 ; R17 := R17["mTag"]
	74	[4003]	GETGLOBAL	R18 K10 ; R18 := 0x0469f296
	75	[4003]	LOADK    	R19 K15 ; R19 := "SolNode332"
	76	[4003]	CALL     	R18 2 2 ; R18 := R18(R19)
	77	[4003]	EQ       	0 R17 R18 ; if R17 ~= R18 then PC := 84
	78	[4003]	JMP      	84 ; PC := 84
	79	[4003]	GETTABLE 	R17 R12 R16 ; R17 := R12[R16]
	80	[4003]	GETTABLE 	R17 R17 K17 ; R17 := R17["mCompletes"]
	81	[4003]	EQ       	0 R17 K14 ; if R17 ~= 1.000000 then PC := 84
	82	[4003]	JMP      	84 ; PC := 84
	83	[4005]	JMP      	85 ; PC := 85
	84	[4002]	FORLOOP  	R13 72 ; R13 += R15; if R13 <= R14 then begin PC := 72; R16 := R13 end
	85	[4010]	GETGLOBAL	R17 K1 ; R17 := _T
	86	[4010]	SETTABLE 	R17 K2 K18 ; R17["NeedsGoalCheck"] := false
	87	[4011]	GETGLOBAL	R17 K19 ; R17 := 0x3d106989
	88	[4011]	LOADK    	R18 K20 ; R18 := "Goal check is now false"
	89	[4011]	CALL     	R17 2 1 ; R17(R18)
	90	[4012]	RETURN   	R0 1 ; return 

function #99 <?:4014,4115> (101 instructions, 404 bytes at 000001608D754B10)
2 params, 31 slots, 1 upvalue, 0 locals, 31 constants, 0 functions
	1	[4015]	TEST     	R0 0 ; if not R0 then PC := 101
	2	[4015]	JMP      	101 ; PC := 101
	3	[4017]	GETGLOBAL	R2 K0 ; R2 := 0x76ea806b
	4	[4017]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x3f3ae64c]
	5	[4017]	LOADK    	R4 := 0.000000
	6	[4017]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	7	[4018]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	8	[4018]	MOVE     	R4 R2 ; R4 := R2
	9	[4018]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[4018]	TEST     	R3 0 ; if not R3 then PC := 13
	11	[4018]	JMP      	13 ; PC := 13
	12	[4019]	RETURN   	R0 1 ; return 
	13	[4022]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0x80563238]
	14	[4022]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[4023]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	16	[4023]	MOVE     	R5 R3 ; R5 := R3
	17	[4023]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[4023]	TEST     	R4 0 ; if not R4 then PC := 21
	19	[4023]	JMP      	21 ; PC := 21
	20	[4024]	RETURN   	R0 1 ; return 
	21	[4027]	GETGLOBAL	R4 K4 ; R4 := 0x9ba7909f
	22	[4027]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0xbcfb64ab]
	23	[4027]	GETUPVAL 	R6 U0 ; R6 := U0
	24	[4027]	GETTABLE 	R6 R6 K6 ; R6 := R6[0xc472e470]
	25	[4027]	CALL     	R6 1 0 ; R6,... := R6()
	26	[4027]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	27	[4028]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	28	[4028]	MOVE     	R6 R4 ; R6 := R4
	29	[4028]	CALL     	R5 2 2 ; R5 := R5(R6)
	30	[4028]	TEST     	R5 1 ; if R5 then PC := 36
	31	[4028]	JMP      	36 ; PC := 36
	32	[4029]	SELF     	R5 R4 K7 ; R6 := R4; R5 := R4[0xe4162eed]
	33	[4029]	LOADK    	R7 K8 ; R7 := "UpdateOmegaSuggestTree"
	34	[4029]	LOADK    	R8 K9 ; R8 := ""
	35	[4029]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	36	[4032]	SELF     	R5 R3 K10 ; R6 := R3; R5 := R3[0x25a6e75e]
	37	[4032]	CALL     	R5 2 2 ; R5 := R5(R6)
	38	[4033]	SELF     	R6 R5 K11 ; R7 := R5; R6 := R5[0x98b1bb53]
	39	[4033]	CALL     	R6 2 2 ; R6 := R6(R7)
	40	[4035]	NEWTABLE 	R7 0 0 ; R7 := {}
	41	[4036]	GETGLOBAL	R8 K12 ; R8 := cjson
	42	[4036]	GETTABLE 	R8 R8 K13 ; R8 := R8[0x7ab914d8]
	43	[4036]	MOVE     	R9 R1 ; R9 := R1
	44	[4036]	CALL     	R8 2 2 ; R8 := R8(R9)
	45	[4038]	GETTABLE 	R9 R8 K14 ; R9 := R8["changes"]
	46	[4038]	EQ       	1 R9 K15 ; if R9 == nil then PC := 72
	47	[4038]	JMP      	72 ; PC := 72
	48	[4039]	GETGLOBAL	R9 K16 ; R9 := 0xc8802016
	49	[4039]	GETTABLE 	R10 R8 K14 ; R10 := R8["changes"]
	50	[4039]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	51	[4039]	JMP      	70 ; PC := 70
	52	[4040]	GETTABLE 	R14 R13 K17 ; R14 := R13["ItemId"]
	53	[4040]	GETTABLE 	R14 R14 K18 ; R14 := R14["$oid"]
	54	[4042]	GETGLOBAL	R15 K16 ; R15 := 0xc8802016
	55	[4042]	MOVE     	R16 R6 ; R16 := R6
	56	[4042]	CALL     	R15 2 4 ; R15,R16,R17 := R15(R16)
	57	[4042]	JMP      	68 ; PC := 68
	58	[4043]	GETTABLE 	R20 R19 K19 ; R20 := R19["mItemId"]
	59	[4043]	GETTABLE 	R20 R20 K20 ; R20 := R20["mId"]
	60	[4045]	EQ       	0 R14 R20 ; if R14 ~= R20 then PC := 68
	61	[4045]	JMP      	68 ; PC := 68
	62	[4046]	GETGLOBAL	R21 K21 ; R21 := 0x33bdd652
	63	[4046]	GETTABLE 	R21 R21 K22 ; R21 := R21[0x23d5322f]
	64	[4046]	MOVE     	R22 R7 ; R22 := R7
	65	[4046]	MOVE     	R23 R19 ; R23 := R19
	66	[4046]	CALL     	R21 3 1 ; R21(R22,R23)
	67	[4047]	JMP      	70 ; PC := 70
	68	[4042]	TFORLOOP 	R15 2 ; R18,R19 := R15(R16,R17); if R18 ~= nil then begin PC = 58; R17 := R18 end
	69	[4048]	JMP      	58 ; PC := 58
	70	[4039]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 52; R11 := R12 end
	71	[4049]	JMP      	52 ; PC := 52
	72	[4053]	GETGLOBAL	R21 K23 ; R21 := _T
	73	[4053]	SETTABLE 	R21 K24 K25 ; R21["boosterUpgradeInfoMode"] := true
	74	[4054]	GETGLOBAL	R21 K23 ; R21 := _T
	75	[4054]	NEWTABLE 	R22 0 0 ; R22 := {}
	76	[4054]	SETTABLE 	R21 K26 R22 ; R21["boosterPackCards"] := R22
	77	[4055]	GETGLOBAL	R21 K23 ; R21 := _T
	78	[4055]	SETTABLE 	R21 K27 K25 ; R21["boosterOmegaMode"] := true
	79	[4057]	GETGLOBAL	R21 K16 ; R21 := 0xc8802016
	80	[4057]	MOVE     	R22 R7 ; R22 := R7
	81	[4057]	CALL     	R21 2 4 ; R21,R22,R23 := R21(R22)
	82	[4057]	JMP      	92 ; PC := 92
	83	[4058]	GETGLOBAL	R26 K21 ; R26 := 0x33bdd652
	84	[4058]	GETTABLE 	R26 R26 K22 ; R26 := R26[0x23d5322f]
	85	[4058]	GETGLOBAL	R27 K23 ; R27 := _T
	86	[4058]	GETTABLE 	R27 R27 K26 ; R27 := R27["boosterPackCards"]
	87	[4058]	NEWTABLE 	R28 2 0 ; R28 := {}
	88	[4058]	MOVE     	R29 R25 ; R29 := R25
	89	[4058]	LOADK    	R30 K9 ; R30 := ""
	90	[4058]	SETLIST  	R28 2 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
	91	[4058]	CALL     	R26 3 1 ; R26(R27,R28)
	92	[4057]	TFORLOOP 	R21 2 ; R24,R25 := R21(R22,R23); if R24 ~= nil then begin PC = 83; R23 := R24 end
	93	[4058]	JMP      	83 ; PC := 83
	94	[4061]	OP_LOADBOOL	R26 0 0 ; R26 := false
	95	[4061]	SETGLOBALHASH	R26 K28 ; mShowingIdentifiedOmegaModsDiorama := R26
	96	[4062]	OP_LOADBOOL	R26 1 0 ; R26 := true
	97	[4062]	SETGLOBALHASH	R26 K29 ; mShouldShowDiorama := R26
	98	[4063]	LOADNIL  	R26 R26 ; R26 := nil
	99	[4063]	SETGLOBALHASH	R26 K30 ; mCheckingForIdentifiedOmegaMods := R26
	100	[4063]	JMP      	101 ; PC := 101
	101	[4115]	RETURN   	R0 1 ; return 

function #100 <?:4117,4123> (15 instructions, 60 bytes at 000001608D755100)
1 param, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[4118]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4118]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4118]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4118]	TEST     	R1 1 ; if R1 then PC := 15
	5	[4118]	JMP      	15 ; PC := 15
	6	[4119]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[4119]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xe4162eed]
	8	[4119]	LOADK    	R3 K2 ; R3 := "CloseDiorama"
	9	[4119]	LOADK    	R4 K3 ; R4 := ""
	10	[4119]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	11	[4120]	LOADNIL  	R1 R1 ; R1 := nil
	12	[4120]	SETUPVAL 	R1 U0 ; U0 := R1
	13	[4121]	LOADNIL  	R1 R1 ; R1 := nil
	14	[4121]	SETGLOBALHASH	R1 K4 ; mShowingIdentifiedOmegaModsDiorama := R1
	15	[4123]	RETURN   	R0 1 ; return 

function #101 <?:4125,4225> (228 instructions, 912 bytes at 000001608D755290)
0 params, 24 slots, 4 upvalues, 0 locals, 62 constants, 3 functions
	1	[4126]	GETGLOBAL	R0 K0 ; R0 := 0xe7f2b02f
	2	[4126]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0b6ebd5b]
	3	[4126]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4127]	TEST     	R0 1 ; if R0 then PC := 228
	5	[4127]	JMP      	228 ; PC := 228
	6	[4127]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	7	[4127]	GETGLOBAL	R2 K3 ; R2 := 0x0032441c
	8	[4127]	GETTABLE 	R2 R2 K4 ; R2 := R2["UIMovie_EndOfQuestMovie"]
	9	[4127]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[4127]	TEST     	R1 1 ; if R1 then PC := 228
	11	[4127]	JMP      	228 ; PC := 228
	12	[4127]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[4127]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 228
	14	[4127]	JMP      	228 ; PC := 228
	15	[4127]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[4127]	CALL     	R1 1 2 ; R1 := R1()
	17	[4127]	TEST     	R1 0 ; if not R1 then PC := 228
	18	[4127]	JMP      	228 ; PC := 228
	19	[4128]	GETGLOBAL	R1 K6 ; R1 := mCheckingForIdentifiedOmegaMods
	20	[4128]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 72
	21	[4128]	JMP      	72 ; PC := 72
	22	[4128]	GETGLOBAL	R1 K7 ; R1 := mShowingIdentifiedOmegaModsDiorama
	23	[4128]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 72
	24	[4128]	JMP      	72 ; PC := 72
	25	[4128]	GETGLOBAL	R1 K8 ; R1 := mOmegaWithPendingFingerprints
	26	[4128]	EQ       	1 R1 K5 ; if R1 == nil then PC := 72
	27	[4128]	JMP      	72 ; PC := 72
	28	[4128]	GETGLOBAL	R1 K9 ; R1 := mProcessingOmegaWithPendingFingerprint
	29	[4128]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 72
	30	[4128]	JMP      	72 ; PC := 72
	31	[4129]	GETGLOBAL	R1 K8 ; R1 := mOmegaWithPendingFingerprints
	32	[4129]	LEN      	R1 R1 ; R1 := # R1
	33	[4129]	LT       	0 K10 R1 ; if 0.000000 >= R1 then PC := 69
	34	[4129]	JMP      	69 ; PC := 69
	35	[4130]	GETGLOBAL	R1 K11 ; R1 := 0x33bdd652
	36	[4130]	GETTABLE 	R1 R1 K12 ; R1 := R1[0x9c1f3b5a]
	37	[4130]	GETGLOBAL	R2 K8 ; R2 := mOmegaWithPendingFingerprints
	38	[4130]	CALL     	R1 2 2 ; R1 := R1(R2)
	39	[4130]	SETGLOBALHASH	R1 K9 ; mProcessingOmegaWithPendingFingerprint := R1
	40	[4132]	GETGLOBAL	R1 K13 ; R1 := _T
	41	[4132]	GETGLOBAL	R2 K9 ; R2 := mProcessingOmegaWithPendingFingerprint
	42	[4132]	SETTABLE 	R1 K14 R2 ; R1["OmegaRerollChoice"] := R2
	43	[4133]	GETGLOBAL	R1 K13 ; R1 := _T
	44	[4135]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	45	[4135]	SETTABLE 	R1 K15 R2 ; R1["OmegaRerollDone"] := R2
	46	[4136]	GETGLOBAL	R1 K13 ; R1 := _T
	47	[4141]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	48	[4141]	SETTABLE 	R1 K16 R2 ; R1["OmegaRerollCanceled"] := R2
	49	[4143]	GETGLOBAL	R1 K17 ; R1 := 0xae91e43b
	50	[4143]	SELF     	R1 R1 K18 ; R2 := R1; R1 := R1[0x1fd6abd0]
	51	[4143]	GETGLOBAL	R3 K19 ; R3 := 0x7ed0a956
	52	[4143]	LOADK    	R4 K20 ; R4 := "/Lotus/Interface/OmegaRerollSelection.swf"
	53	[4143]	CALL     	R3 2 0 ; R3,... := R3(R4)
	54	[4143]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	55	[4144]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	56	[4144]	MOVE     	R3 R1 ; R3 := R1
	57	[4144]	CALL     	R2 2 2 ; R2 := R2(R3)
	58	[4144]	TEST     	R2 1 ; if R2 then PC := 228
	59	[4144]	JMP      	228 ; PC := 228
	60	[4145]	SELF     	R2 R1 K21 ; R3 := R1; R2 := R1[0xe4162eed]
	61	[4145]	LOADK    	R4 K22 ; R4 := "SetCallBack"
	62	[4145]	LOADK    	R5 K15 ; R5 := "OmegaRerollDone"
	63	[4145]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	64	[4146]	SELF     	R2 R1 K21 ; R3 := R1; R2 := R1[0xe4162eed]
	65	[4146]	LOADK    	R4 K23 ; R4 := "SetCancelCallBack"
	66	[4146]	LOADK    	R5 K16 ; R5 := "OmegaRerollCanceled"
	67	[4146]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	68	[4147]	JMP      	228 ; PC := 228
	69	[4149]	LOADNIL  	R2 R2 ; R2 := nil
	70	[4149]	SETGLOBALHASH	R2 K8 ; mOmegaWithPendingFingerprints := R2
	71	[4150]	JMP      	228 ; PC := 228
	72	[4151]	GETGLOBAL	R2 K6 ; R2 := mCheckingForIdentifiedOmegaMods
	73	[4151]	TEST     	R2 0 ; if not R2 then PC := 182
	74	[4151]	JMP      	182 ; PC := 182
	75	[4152]	GETGLOBAL	R2 K24 ; R2 := 0x76ea806b
	76	[4152]	SELF     	R2 R2 K25 ; R3 := R2; R2 := R2[0x3f3ae64c]
	77	[4152]	LOADK    	R4 := 0.000000
	78	[4152]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	79	[4153]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	80	[4153]	MOVE     	R4 R2 ; R4 := R2
	81	[4153]	CALL     	R3 2 2 ; R3 := R3(R4)
	82	[4153]	TEST     	R3 0 ; if not R3 then PC := 85
	83	[4153]	JMP      	85 ; PC := 85
	84	[4154]	RETURN   	R0 1 ; return 
	85	[4157]	SELF     	R3 R2 K26 ; R4 := R2; R3 := R2[0x80563238]
	86	[4157]	CALL     	R3 2 2 ; R3 := R3(R4)
	87	[4158]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	88	[4158]	MOVE     	R5 R3 ; R5 := R3
	89	[4158]	CALL     	R4 2 2 ; R4 := R4(R5)
	90	[4158]	TEST     	R4 0 ; if not R4 then PC := 93
	91	[4158]	JMP      	93 ; PC := 93
	92	[4159]	RETURN   	R0 1 ; return 
	93	[4162]	SELF     	R4 R3 K27 ; R5 := R3; R4 := R3[0x25a6e75e]
	94	[4162]	CALL     	R4 2 2 ; R4 := R4(R5)
	95	[4163]	SELF     	R5 R4 K28 ; R6 := R4; R5 := R4[0x98b1bb53]
	96	[4163]	CALL     	R5 2 2 ; R5 := R5(R6)
	97	[4164]	NEWTABLE 	R6 0 0 ; R6 := {}
	98	[4167]	GETGLOBAL	R7 K29 ; R7 := 0xc8802016
	99	[4167]	MOVE     	R8 R5 ; R8 := R5
	100	[4167]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	101	[4167]	JMP      	113 ; PC := 113
	102	[4168]	GETTABLE 	R12 R11 K30 ; R12 := R11["mItemType"]
	103	[4170]	SELF     	R13 R12 K31 ; R14 := R12; R13 := R12[0xf2deaf69]
	104	[4170]	GETGLOBAL	R15 K32 ; R15 := gRandomizedArtifactUpgradeType
	105	[4170]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	106	[4170]	TEST     	R13 0 ; if not R13 then PC := 113
	107	[4170]	JMP      	113 ; PC := 113
	108	[4171]	GETGLOBAL	R13 K11 ; R13 := 0x33bdd652
	109	[4171]	GETTABLE 	R13 R13 K33 ; R13 := R13[0x23d5322f]
	110	[4171]	MOVE     	R14 R6 ; R14 := R6
	111	[4171]	MOVE     	R15 R11 ; R15 := R11
	112	[4171]	CALL     	R13 3 1 ; R13(R14,R15)
	113	[4167]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 102; R9 := R10 end
	114	[4172]	JMP      	102 ; PC := 102
	115	[4176]	GETUPVAL 	R13 U2 ; R13 := U2
	116	[4176]	LEN      	R14 R6 ; R14 := # R6
	117	[4176]	LE       	0 R13 R14 ; if R13 > R14 then PC := 168
	118	[4176]	JMP      	168 ; PC := 168
	119	[4177]	GETUPVAL 	R13 U2 ; R13 := U2
	120	[4177]	GETTABLE 	R13 R6 R13 ; R13 := R6[R13]
	121	[4178]	GETTABLE 	R14 R13 K30 ; R14 := R13["mItemType"]
	122	[4179]	GETTABLE 	R15 R13 K34 ; R15 := R13["mInstance"]
	123	[4180]	GETTABLE 	R16 R13 K35 ; R16 := R13["mUpgradeFingerprint"]
	124	[4181]	GETTABLE 	R17 R13 K36 ; R17 := R13["mPendingRerollFingerprint"]
	125	[4183]	GETGLOBAL	R18 K2 ; R18 := 0x7b998233
	126	[4183]	SELF     	R19 R15 K37 ; R20 := R15; R19 := R15[0xd08fa3ab]
	127	[4183]	MOVE     	R21 R16 ; R21 := R16
	128	[4183]	CALL     	R19 3 0 ; R19,... := R19(R20,R21)
	129	[4183]	CALL     	R18 0 2 ; R18 := R18(R19,...)
	130	[4183]	TEST     	R18 1 ; if R18 then PC := 147
	131	[4183]	JMP      	147 ; PC := 147
	132	[4183]	SELF     	R18 R15 K38 ; R19 := R15; R18 := R15[0x4dd96fc5]
	133	[4183]	MOVE     	R20 R16 ; R20 := R16
	134	[4183]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	135	[4183]	SELF     	R19 R15 K39 ; R20 := R15; R19 := R15[0xfb6b8cc5]
	136	[4183]	MOVE     	R21 R16 ; R21 := R16
	137	[4183]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	138	[4183]	LE       	0 R19 R18 ; if R19 > R18 then PC := 147
	139	[4183]	JMP      	147 ; PC := 147
	140	[4184]	GETGLOBAL	R18 K11 ; R18 := 0x33bdd652
	141	[4184]	GETTABLE 	R18 R18 K33 ; R18 := R18[0x23d5322f]
	142	[4184]	GETGLOBAL	R19 K40 ; R19 := mNewIdentifiedOmegaMods
	143	[4184]	GETTABLE 	R20 R13 K41 ; R20 := R13["mItemId"]
	144	[4184]	GETTABLE 	R20 R20 K42 ; R20 := R20["mId"]
	145	[4184]	CALL     	R18 3 1 ; R18(R19,R20)
	146	[4184]	JMP      	160 ; PC := 160
	147	[4185]	EQ       	1 R17 K43 ; if R17 == "" then PC := 160
	148	[4185]	JMP      	160 ; PC := 160
	149	[4186]	GETGLOBAL	R18 K11 ; R18 := 0x33bdd652
	150	[4186]	GETTABLE 	R18 R18 K33 ; R18 := R18[0x23d5322f]
	151	[4186]	GETGLOBAL	R19 K8 ; R19 := mOmegaWithPendingFingerprints
	152	[4186]	NEWTABLE 	R20 0 4 ; R20 := {}
	153	[4186]	GETTABLE 	R21 R13 K41 ; R21 := R13["mItemId"]
	154	[4186]	GETTABLE 	R21 R21 K42 ; R21 := R21["mId"]
	155	[4186]	SETTABLE 	R20 K44 R21 ; R20["Id"] := R21
	156	[4186]	SETTABLE 	R20 K45 R14 ; R20["Type"] := R14
	157	[4186]	SETTABLE 	R20 K46 R16 ; R20["Fingerprint"] := R16
	158	[4186]	SETTABLE 	R20 K47 R17 ; R20["RerollFingerprint"] := R17
	159	[4186]	CALL     	R18 3 1 ; R18(R19,R20)
	160	[4192]	GETUPVAL 	R18 U2 ; R18 := U2
	161	[4192]	LEN      	R19 R6 ; R19 := # R6
	162	[4192]	LT       	0 R18 R19 ; if R18 >= R19 then PC := 168
	163	[4192]	JMP      	168 ; PC := 168
	164	[4193]	GETUPVAL 	R18 U2 ; R18 := U2
	165	[4193]	ADD      	R18 R18 K48 ; R18 := R18 + 1.000000
	166	[4193]	SETUPVAL 	R18 U2 ; U2 := R18
	167	[4194]	RETURN   	R0 1 ; return 
	168	[4198]	OP_LOADBOOL	R18 0 0 ; R18 := false
	169	[4198]	SETGLOBALHASH	R18 K6 ; mCheckingForIdentifiedOmegaMods := R18
	170	[4200]	GETGLOBAL	R18 K40 ; R18 := mNewIdentifiedOmegaMods
	171	[4200]	LEN      	R18 R18 ; R18 := # R18
	172	[4200]	EQ       	0 R18 K10 ; if R18 ~= 0.000000 then PC := 177
	173	[4200]	JMP      	177 ; PC := 177
	174	[4201]	LOADNIL  	R18 R18 ; R18 := nil
	175	[4201]	SETGLOBALHASH	R18 K6 ; mCheckingForIdentifiedOmegaMods := R18
	176	[4202]	RETURN   	R0 1 ; return 
	177	[4205]	SELF     	R18 R3 K49 ; R19 := R3; R18 := R3[0x924e816a]
	178	[4205]	GETGLOBAL	R20 K40 ; R20 := mNewIdentifiedOmegaMods
	179	[4205]	LOADK    	R21 K50 ; R21 := "OnRerollsCompleted"
	180	[4205]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	181	[4205]	JMP      	228 ; PC := 228
	182	[4206]	GETGLOBAL	R18 K51 ; R18 := mShouldShowDiorama
	183	[4206]	TEST     	R18 0 ; if not R18 then PC := 195
	184	[4206]	JMP      	195 ; PC := 195
	185	[4207]	LOADNIL  	R18 R18 ; R18 := nil
	186	[4207]	SETGLOBALHASH	R18 K51 ; mShouldShowDiorama := R18
	187	[4208]	GETGLOBAL	R18 K13 ; R18 := _T
	188	[4210]	CLOSURE  	R19 2 ; R19 := closure(Function #3)
	189	[4210]	SETTABLE 	R18 K52 R19 ; R18["OnDioramaLoaded"] := R19
	190	[4211]	GETUPVAL 	R18 U3 ; R18 := U3
	191	[4211]	GETGLOBAL	R19 K53 ; R19 := 0x4248b498
	192	[4211]	LOADK    	R20 K52 ; R20 := "OnDioramaLoaded"
	193	[4211]	CALL     	R18 3 1 ; R18(R19,R20)
	194	[4211]	JMP      	228 ; PC := 228
	195	[4212]	GETGLOBAL	R18 K7 ; R18 := mShowingIdentifiedOmegaModsDiorama
	196	[4212]	TEST     	R18 0 ; if not R18 then PC := 228
	197	[4212]	JMP      	228 ; PC := 228
	198	[4213]	OP_LOADBOOL	R18 0 0 ; R18 := false
	199	[4213]	SETGLOBALHASH	R18 K7 ; mShowingIdentifiedOmegaModsDiorama := R18
	200	[4214]	GETGLOBAL	R18 K13 ; R18 := _T
	201	[4214]	SETTABLE 	R18 K52 K5 ; R18["OnDioramaLoaded"] := nil
	202	[4216]	LOADNIL  	R18 R18 ; R18 := nil
	203	[4217]	GETGLOBAL	R19 K54 ; R19 := 0x4ec73e73
	204	[4217]	GETGLOBAL	R20 K13 ; R20 := _T
	205	[4217]	GETTABLE 	R20 R20 K55 ; R20 := R20["boosterPackCards"]
	206	[4217]	CALL     	R19 2 2 ; R19 := R19(R20)
	207	[4217]	TEST     	R19 0 ; if not R19 then PC := 228
	208	[4217]	JMP      	228 ; PC := 228
	209	[4218]	GETGLOBAL	R19 K17 ; R19 := 0xae91e43b
	210	[4218]	SELF     	R19 R19 K18 ; R20 := R19; R19 := R19[0x1fd6abd0]
	211	[4218]	GETGLOBAL	R21 K56 ; R21 := 0x39803e25
	212	[4218]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	213	[4218]	MOVE     	R18 R19 ; R18 := R19
	214	[4219]	SELF     	R19 R18 K57 ; R20 := R18; R19 := R18[0xf56f3887]
	215	[4219]	LOADK    	R21 K58 ; R21 := "SetText"
	216	[4219]	NEWTABLE 	R22 1 0 ; R22 := {}
	217	[4219]	LOADK    	R23 K43 ; R23 := ""
	218	[4219]	SETLIST  	R22 1 1 ; R22[(1-1)*FPF+i] := R(22+i), 1 <= i <= 1
	219	[4219]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	220	[4220]	SELF     	R19 R18 K21 ; R20 := R18; R19 := R18[0xe4162eed]
	221	[4220]	LOADK    	R21 K59 ; R21 := "SetNumOptions"
	222	[4220]	LOADK    	R22 := 1.000000
	223	[4220]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	224	[4221]	SELF     	R19 R18 K21 ; R20 := R18; R19 := R18[0xe4162eed]
	225	[4221]	LOADK    	R21 K60 ; R21 := "SetCallback"
	226	[4221]	LOADK    	R22 K61 ; R22 := "OnFinishedShowingIdentifiedOmegas"
	227	[4221]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	228	[4225]	RETURN   	R0 1 ; return 

function #102 <?:4227,4239> (28 instructions, 112 bytes at 000001608D756280)
0 params, 3 slots, 4 upvalues, 0 locals, 7 constants, 0 functions
	1	[4228]	GETGLOBAL	R0 K0 ; R0 := 0xe7f2b02f
	2	[4228]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0b6ebd5b]
	3	[4228]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4229]	TEST     	R0 1 ; if R0 then PC := 28
	5	[4229]	JMP      	28 ; PC := 28
	6	[4230]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[4230]	TEST     	R1 0 ; if not R1 then PC := 28
	8	[4230]	JMP      	28 ; PC := 28
	9	[4231]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	10	[4231]	GETGLOBAL	R2 K3 ; R2 := 0x0032441c
	11	[4231]	GETTABLE 	R2 R2 K4 ; R2 := R2["UIMovie_EndOfQuestMovie"]
	12	[4231]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[4231]	TEST     	R1 1 ; if R1 then PC := 28
	14	[4231]	JMP      	28 ; PC := 28
	15	[4232]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[4232]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 28
	17	[4232]	JMP      	28 ; PC := 28
	18	[4233]	GETUPVAL 	R1 U2 ; R1 := U2
	19	[4233]	OP_LOADBOOL	R2 1 0 ; R2 := true
	20	[4233]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[4233]	TEST     	R1 0 ; if not R1 then PC := 28
	22	[4233]	JMP      	28 ; PC := 28
	23	[4235]	GETUPVAL 	R1 U3 ; R1 := U3
	24	[4235]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x8c71bcf4]
	25	[4235]	CALL     	R1 1 1 ; R1()
	26	[4237]	OP_LOADBOOL	R1 0 0 ; R1 := false
	27	[4237]	SETUPVAL 	R1 U0 ; U0 := R1
	28	[4239]	RETURN   	R0 1 ; return 

function #103 <?:4241,4323> (243 instructions, 972 bytes at 000001608D756490)
0 params, 11 slots, 8 upvalues, 0 locals, 62 constants, 0 functions
	1	[4243]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4243]	GETGLOBAL	R1 K1 ; R1 := 0x83f4e77c
	3	[4243]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4243]	TEST     	R0 1 ; if R0 then PC := 87
	5	[4243]	JMP      	87 ; PC := 87
	6	[4246]	LOADNIL  	R0 R0 ; R0 := nil
	7	[4247]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	8	[4247]	GETGLOBAL	R2 K2 ; R2 := 0x89326c93
	9	[4247]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[4247]	TEST     	R1 1 ; if R1 then PC := 16
	11	[4247]	JMP      	16 ; PC := 16
	12	[4248]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	13	[4248]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x29ef273d]
	14	[4248]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[4248]	MOVE     	R0 R1 ; R0 := R1
	16	[4250]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	17	[4250]	MOVE     	R2 R0 ; R2 := R0
	18	[4250]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[4250]	TEST     	R1 1 ; if R1 then PC := 24
	20	[4250]	JMP      	24 ; PC := 24
	21	[4250]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xa6f182de]
	22	[4250]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[4250]	JMP      	26 ; PC := 26
	24	[4250]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 25
	25	[4250]	OP_LOADBOOL	R1 1 0 ; R1 := true
	26	[4251]	GETGLOBAL	R2 K1 ; R2 := 0x83f4e77c
	27	[4251]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x67e75582]
	28	[4251]	CALL     	R2 2 2 ; R2 := R2(R3)
	29	[4251]	TEST     	R2 1 ; if R2 then PC := 73
	30	[4251]	JMP      	73 ; PC := 73
	31	[4251]	GETGLOBAL	R2 K6 ; R2 := mFadeInStarted
	32	[4251]	TEST     	R2 1 ; if R2 then PC := 73
	33	[4251]	JMP      	73 ; PC := 73
	34	[4251]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	35	[4251]	GETUPVAL 	R3 U0 ; R3 := U0
	36	[4251]	GETTABLE 	R3 R3 K7 ; R3 := R3[0xa9882367]
	37	[4251]	LOADK    	R4 K8 ; R4 := "StarChartRoot"
	38	[4251]	CALL     	R3 2 0 ; R3,... := R3(R4)
	39	[4251]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	40	[4251]	TEST     	R2 0 ; if not R2 then PC := 47
	41	[4251]	JMP      	47 ; PC := 47
	42	[4251]	GETGLOBAL	R2 K9 ; R2 := mCurrentMode
	43	[4251]	GETUPVAL 	R3 U1 ; R3 := U1
	44	[4251]	GETTABLE 	R3 R3 K10 ; R3 := R3["UI_MODE_IN_SPACE_SHIP"]
	45	[4251]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 73
	46	[4251]	JMP      	73 ; PC := 73
	47	[4251]	TEST     	R1 0 ; if not R1 then PC := 73
	48	[4251]	JMP      	73 ; PC := 73
	49	[4253]	GETUPVAL 	R2 U2 ; R2 := U2
	50	[4253]	CALL     	R2 1 1 ; R2()
	51	[4256]	GETUPVAL 	R2 U0 ; R2 := U0
	52	[4256]	GETTABLE 	R2 R2 K7 ; R2 := R2[0xa9882367]
	53	[4256]	LOADK    	R3 K11 ; R3 := "SuitAvatarSpawner"
	54	[4256]	GETUPVAL 	R4 U0 ; R4 := U0
	55	[4256]	GETTABLE 	R4 R4 K12 ; R4 := R4[0x06d055f9]
	56	[4256]	GETUPVAL 	R5 U1 ; R5 := U1
	57	[4256]	GETTABLE 	R5 R5 K13 ; R5 := R5[0xcf1fcba4]
	58	[4256]	CALL     	R5 1 2 ; R5 := R5()
	59	[4256]	GETGLOBAL	R6 K14 ; R6 := 0x1211d00f
	60	[4256]	LOADNIL  	R7 R7 ; R7 := nil
	61	[4256]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	62	[4256]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	63	[4257]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	64	[4257]	MOVE     	R4 R2 ; R4 := R2
	65	[4257]	CALL     	R3 2 2 ; R3 := R3(R4)
	66	[4257]	TEST     	R3 1 ; if R3 then PC := 71
	67	[4257]	JMP      	71 ; PC := 71
	68	[4258]	SELF     	R3 R2 K15 ; R4 := R2; R3 := R2[0x8eb2112d]
	69	[4258]	LOADK    	R5 K16 ; R5 := "Start"
	70	[4258]	CALL     	R3 3 1 ; R3(R4,R5)
	71	[4261]	OP_LOADBOOL	R3 1 0 ; R3 := true
	72	[4261]	SETGLOBALHASH	R3 K6 ; mFadeInStarted := R3
	73	[4264]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	74	[4264]	GETGLOBAL	R4 K17 ; R4 := mMenuSuitAvatar
	75	[4264]	CALL     	R3 2 2 ; R3 := R3(R4)
	76	[4264]	TEST     	R3 1 ; if R3 then PC := 81
	77	[4264]	JMP      	81 ; PC := 81
	78	[4264]	GETGLOBAL	R3 K18 ; R3 := mMenuSuitAvatarVisible
	79	[4264]	TEST     	R3 1 ; if R3 then PC := 87
	80	[4264]	JMP      	87 ; PC := 87
	81	[4264]	GETUPVAL 	R3 U3 ; R3 := U3
	82	[4264]	CALL     	R3 1 2 ; R3 := R3()
	83	[4264]	TEST     	R3 0 ; if not R3 then PC := 87
	84	[4264]	JMP      	87 ; PC := 87
	85	[4265]	GETUPVAL 	R3 U4 ; R3 := U4
	86	[4265]	CALL     	R3 1 1 ; R3()
	87	[4269]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	88	[4269]	GETGLOBAL	R4 K19 ; R4 := queuedMovie
	89	[4269]	CALL     	R3 2 2 ; R3 := R3(R4)
	90	[4269]	TEST     	R3 1 ; if R3 then PC := 200
	91	[4269]	JMP      	200 ; PC := 200
	92	[4269]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	93	[4269]	GETGLOBAL	R4 K20 ; R4 := mChildMovie
	94	[4269]	CALL     	R3 2 2 ; R3 := R3(R4)
	95	[4269]	TEST     	R3 1 ; if R3 then PC := 100
	96	[4269]	JMP      	100 ; PC := 100
	97	[4269]	GETGLOBAL	R3 K19 ; R3 := queuedMovie
	98	[4269]	EQ       	0 R3 K21 ; if R3 ~= "LoadOut" then PC := 200
	99	[4269]	JMP      	200 ; PC := 200
	100	[4269]	GETGLOBAL	R3 K19 ; R3 := queuedMovie
	101	[4269]	EQ       	0 R3 K22 ; if R3 ~= "ItemBrowsing" then PC := 107
	102	[4269]	JMP      	107 ; PC := 107
	103	[4269]	GETGLOBAL	R3 K23 ; R3 := _T
	104	[4269]	GETTABLE 	R3 R3 K24 ; R3 := R3["starChartDone"]
	105	[4269]	TEST     	R3 0 ; if not R3 then PC := 200
	106	[4269]	JMP      	200 ; PC := 200
	107	[4270]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	108	[4270]	GETGLOBAL	R4 K25 ; R4 := movies
	109	[4270]	GETGLOBAL	R5 K19 ; R5 := queuedMovie
	110	[4270]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	111	[4270]	CALL     	R3 2 2 ; R3 := R3(R4)
	112	[4270]	TEST     	R3 1 ; if R3 then PC := 189
	113	[4270]	JMP      	189 ; PC := 189
	114	[4271]	GETGLOBAL	R3 K26 ; R3 := 0x3d106989
	115	[4271]	GETUPVAL 	R4 U5 ; R4 := U5
	116	[4271]	LOADK    	R5 K27 ; R5 := "PushChildMovie("
	117	[4271]	GETGLOBAL	R6 K19 ; R6 := queuedMovie
	118	[4271]	LOADK    	R7 K28 ; R7 := ")"
	119	[4271]	CONCAT   	R4 R4 R7 ; R4 := R4 .. R5 .. R6 .. R7
	120	[4271]	CALL     	R3 2 1 ; R3(R4)
	121	[4272]	GETGLOBAL	R3 K29 ; R3 := 0x9ba7909f
	122	[4272]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0xbcfb64ab]
	123	[4272]	GETGLOBAL	R5 K25 ; R5 := movies
	124	[4272]	GETGLOBAL	R6 K19 ; R6 := queuedMovie
	125	[4272]	GETTABLE 	R5 R5 R6 ; R5 := R5[R6]
	126	[4272]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	127	[4272]	SETGLOBALHASH	R3 K20 ; mChildMovie := R3
	128	[4273]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	129	[4273]	GETGLOBAL	R4 K20 ; R4 := mChildMovie
	130	[4273]	CALL     	R3 2 2 ; R3 := R3(R4)
	131	[4273]	TEST     	R3 1 ; if R3 then PC := 163
	132	[4273]	JMP      	163 ; PC := 163
	133	[4274]	GETGLOBAL	R3 K20 ; R3 := mChildMovie
	134	[4274]	SELF     	R3 R3 K31 ; R4 := R3; R3 := R3[0x368ad758]
	135	[4274]	OP_LOADBOOL	R5 1 0 ; R5 := true
	136	[4274]	CALL     	R3 3 1 ; R3(R4,R5)
	137	[4275]	GETGLOBAL	R3 K20 ; R3 := mChildMovie
	138	[4275]	SELF     	R3 R3 K32 ; R4 := R3; R3 := R3[0xe4162eed]
	139	[4275]	LOADK    	R5 K33 ; R5 := "OnChildScreenClosed"
	140	[4275]	GETGLOBAL	R6 K34 ; R6 := mPreviousScreen
	141	[4275]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	142	[4276]	LOADNIL  	R3 R3 ; R3 := nil
	143	[4276]	SETGLOBALHASH	R3 K34 ; mPreviousScreen := R3
	144	[4277]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	145	[4277]	GETGLOBAL	R4 K20 ; R4 := mChildMovie
	146	[4277]	CALL     	R3 2 2 ; R3 := R3(R4)
	147	[4277]	TEST     	R3 1 ; if R3 then PC := 170
	148	[4277]	JMP      	170 ; PC := 170
	149	[4278]	GETGLOBAL	R3 K35 ; R3 := 0x25312c9b
	150	[4278]	GETGLOBAL	R4 K20 ; R4 := mChildMovie
	151	[4278]	LOADK    	R5 K36 ; R5 := "_root"
	152	[4278]	LOADK    	R6 := 0.000000
	153	[4278]	NEWTABLE 	R7 1 0 ; R7 := {}
	154	[4278]	LOADK    	R8 := 10.000000
	155	[4278]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	156	[4278]	NEWTABLE 	R8 1 0 ; R8 := {}
	157	[4278]	LOADK    	R9 := 100.000000
	158	[4278]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	159	[4278]	LOADK    	R9 K38 ; R9 := 0.200000
	160	[4278]	LOADK    	R10 K39 ; R10 := 0.300000
	161	[4278]	CALL     	R3 8 1 ; R3(R4,R5,R6,R7,R8,R9,R10)
	162	[4279]	JMP      	170 ; PC := 170
	163	[4281]	GETGLOBAL	R3 K40 ; R3 := 0xae91e43b
	164	[4281]	SELF     	R3 R3 K41 ; R4 := R3; R3 := R3[0x1fd6abd0]
	165	[4281]	GETGLOBAL	R5 K25 ; R5 := movies
	166	[4281]	GETGLOBAL	R6 K19 ; R6 := queuedMovie
	167	[4281]	GETTABLE 	R5 R5 R6 ; R5 := R5[R6]
	168	[4281]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	169	[4281]	SETGLOBALHASH	R3 K20 ; mChildMovie := R3
	170	[4283]	GETGLOBAL	R3 K19 ; R3 := queuedMovie
	171	[4283]	EQ       	1 R3 K42 ; if R3 == "MainMenu" then PC := 176
	172	[4283]	JMP      	176 ; PC := 176
	173	[4283]	GETGLOBAL	R3 K19 ; R3 := queuedMovie
	174	[4283]	EQ       	0 R3 K43 ; if R3 ~= "Default" then PC := 178
	175	[4283]	JMP      	178 ; PC := 178
	176	[4285]	LOADNIL  	R3 R3 ; R3 := nil
	177	[4285]	SETGLOBALHASH	R3 K20 ; mChildMovie := R3
	178	[4287]	GETGLOBAL	R3 K44 ; R3 := queuedMovieCallback
	179	[4287]	EQ       	1 R3 K45 ; if R3 == nil then PC := 186
	180	[4287]	JMP      	186 ; PC := 186
	181	[4288]	GETGLOBAL	R3 K46 ; R3 := 0xd920f066
	182	[4288]	GETGLOBAL	R4 K20 ; R4 := mChildMovie
	183	[4288]	CALL     	R3 2 1 ; R3(R4)
	184	[4289]	LOADNIL  	R3 R3 ; R3 := nil
	185	[4289]	SETGLOBALHASH	R3 K44 ; queuedMovieCallback := R3
	186	[4291]	LOADNIL  	R3 R3 ; R3 := nil
	187	[4291]	SETGLOBALHASH	R3 K19 ; queuedMovie := R3
	188	[4291]	JMP      	200 ; PC := 200
	189	[4293]	GETGLOBAL	R3 K26 ; R3 := 0x3d106989
	190	[4293]	LOADK    	R4 K47 ; R4 := "ERROR: Queued unrecognized screen ["
	191	[4293]	GETGLOBAL	R5 K48 ; R5 := 0x64fb1586
	192	[4293]	GETGLOBAL	R6 K19 ; R6 := queuedMovie
	193	[4293]	CALL     	R5 2 2 ; R5 := R5(R6)
	194	[4293]	LOADK    	R6 K49 ; R6 := "] Check your spelling."
	195	[4293]	CONCAT   	R4 R4 R6 ; R4 := R4 .. R5 .. R6
	196	[4293]	CALL     	R3 2 1 ; R3(R4)
	197	[4294]	GETGLOBAL	R3 K50 ; R3 := 0x60cce7b4
	198	[4294]	OP_LOADBOOL	R4 0 0 ; R4 := false
	199	[4294]	CALL     	R3 2 1 ; R3(R4)
	200	[4299]	GETGLOBAL	R3 K51 ; R3 := 0xe7f2b02f
	201	[4299]	SELF     	R3 R3 K52 ; R4 := R3; R3 := R3[0x0b6ebd5b]
	202	[4299]	CALL     	R3 2 2 ; R3 := R3(R4)
	203	[4300]	TEST     	R3 1 ; if R3 then PC := 243
	204	[4300]	JMP      	243 ; PC := 243
	205	[4301]	GETGLOBAL	R4 K53 ; R4 := mQueuedGoToScreen
	206	[4301]	EQ       	1 R4 K45 ; if R4 == nil then PC := 219
	207	[4301]	JMP      	219 ; PC := 219
	208	[4302]	GETGLOBAL	R4 K53 ; R4 := mQueuedGoToScreen
	209	[4302]	GETTABLE 	R4 R4 K54 ; R4 := R4["screen"]
	210	[4303]	GETGLOBAL	R5 K53 ; R5 := mQueuedGoToScreen
	211	[4303]	GETTABLE 	R5 R5 K55 ; R5 := R5["callback"]
	212	[4304]	LOADNIL  	R6 R6 ; R6 := nil
	213	[4304]	SETGLOBALHASH	R6 K53 ; mQueuedGoToScreen := R6
	214	[4305]	GETGLOBAL	R6 K23 ; R6 := _T
	215	[4305]	GETTABLE 	R6 R6 K56 ; R6 := R6[0xbf0443a1]
	216	[4305]	MOVE     	R7 R4 ; R7 := R4
	217	[4305]	MOVE     	R8 R5 ; R8 := R5
	218	[4305]	CALL     	R6 3 1 ; R6(R7,R8)
	219	[4308]	GETGLOBAL	R6 K57 ; R6 := mQueuedGoToPreviousScreen
	220	[4308]	EQ       	1 R6 K45 ; if R6 == nil then PC := 230
	221	[4308]	JMP      	230 ; PC := 230
	222	[4309]	GETGLOBAL	R6 K57 ; R6 := mQueuedGoToPreviousScreen
	223	[4309]	GETTABLE 	R6 R6 K58 ; R6 := R6["skip"]
	224	[4310]	LOADNIL  	R7 R7 ; R7 := nil
	225	[4310]	SETGLOBALHASH	R7 K57 ; mQueuedGoToPreviousScreen := R7
	226	[4311]	GETGLOBAL	R7 K23 ; R7 := _T
	227	[4311]	GETTABLE 	R7 R7 K59 ; R7 := R7[0x4e4e6b0c]
	228	[4311]	MOVE     	R8 R6 ; R8 := R6
	229	[4311]	CALL     	R7 2 1 ; R7(R8)
	230	[4314]	GETGLOBAL	R7 K60 ; R7 := mQueuedLogoff
	231	[4314]	TEST     	R7 0 ; if not R7 then PC := 235
	232	[4314]	JMP      	235 ; PC := 235
	233	[4315]	GETUPVAL 	R7 U6 ; R7 := U6
	234	[4315]	CALL     	R7 1 1 ; R7()
	235	[4318]	GETGLOBAL	R7 K61 ; R7 := mUnblockWhenAsyncDone
	236	[4318]	TEST     	R7 0 ; if not R7 then PC := 243
	237	[4318]	JMP      	243 ; PC := 243
	238	[4319]	GETUPVAL 	R7 U7 ; R7 := U7
	239	[4319]	LOADK    	R8 := 0.000000
	240	[4319]	CALL     	R7 2 1 ; R7(R8)
	241	[4320]	OP_LOADBOOL	R7 0 0 ; R7 := false
	242	[4320]	SETGLOBALHASH	R7 K61 ; mUnblockWhenAsyncDone := R7
	243	[4323]	RETURN   	R0 1 ; return 

function #104 <?:4325,4371> (129 instructions, 516 bytes at 000001608D7572C0)
4 params, 38 slots, 1 upvalue, 0 locals, 23 constants, 0 functions
	1	[4326]	LOADK    	R4 := 1.000000
	2	[4326]	LEN      	R5 R2 ; R5 := # R2
	3	[4326]	LOADK    	R6 := 1.000000
	4	[4326]	FORPREP  	R4 67 ; R4 -= R6; PC := 67
	5	[4327]	LOADK    	R8 := 0.000000
	6	[4328]	GETTABLE 	R9 R2 R7 ; R9 := R2[R7]
	7	[4328]	GETTABLE 	R9 R9 K0 ; R9 := R9["mPlacedDecos"]
	8	[4329]	GETGLOBAL	R10 K1 ; R10 := 0xc8802016
	9	[4329]	MOVE     	R11 R9 ; R11 := R9
	10	[4329]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	11	[4329]	JMP      	59 ; PC := 59
	12	[4330]	GETTABLE 	R15 R14 K2 ; R15 := R14["decoType"]
	13	[4331]	GETGLOBAL	R16 K3 ; R16 := 0x7b998233
	14	[4331]	MOVE     	R17 R15 ; R17 := R15
	15	[4331]	CALL     	R16 2 2 ; R16 := R16(R17)
	16	[4331]	TEST     	R16 1 ; if R16 then PC := 59
	17	[4331]	JMP      	59 ; PC := 59
	18	[4332]	SELF     	R16 R15 K4 ; R17 := R15; R16 := R15[0xed4e0128]
	19	[4332]	CALL     	R16 2 2 ; R16 := R16(R17)
	20	[4334]	GETGLOBAL	R17 K5 ; R17 := 0x0032441c
	21	[4334]	GETTABLE 	R17 R17 K6 ; R17 := R17["CapacityCost"]
	22	[4334]	GETTABLE 	R17 R17 R16 ; R17 := R17[R16]
	23	[4334]	EQ       	0 R17 K7 ; if R17 ~= nil then PC := 47
	24	[4334]	JMP      	47 ; PC := 47
	25	[4335]	GETGLOBAL	R17 K1 ; R17 := 0xc8802016
	26	[4335]	MOVE     	R18 R1 ; R18 := R1
	27	[4335]	CALL     	R17 2 4 ; R17,R18,R19 := R17(R18)
	28	[4335]	JMP      	45 ; PC := 45
	29	[4336]	SELF     	R22 R21 K8 ; R23 := R21; R22 := R21[0xf2deaf69]
	30	[4336]	GETGLOBAL	R24 K9 ; R24 := gShipDecoStoreItemType
	31	[4336]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	32	[4336]	TEST     	R22 0 ; if not R22 then PC := 45
	33	[4336]	JMP      	45 ; PC := 45
	34	[4336]	SELF     	R22 R21 K10 ; R23 := R21; R22 := R21[0x656c098f]
	35	[4336]	CALL     	R22 2 2 ; R22 := R22(R23)
	36	[4336]	EQ       	0 R22 R15 ; if R22 ~= R15 then PC := 45
	37	[4336]	JMP      	45 ; PC := 45
	38	[4337]	GETGLOBAL	R22 K5 ; R22 := 0x0032441c
	39	[4337]	GETTABLE 	R22 R22 K6 ; R22 := R22["CapacityCost"]
	40	[4337]	SELF     	R23 R21 K11 ; R24 := R21; R23 := R21[0xfb7eb1d7]
	41	[4337]	OP_LOADBOOL	R25 0 0 ; R25 := false
	42	[4337]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	43	[4337]	SETTABLE 	R22 R16 R23 ; R22[R16] := R23
	44	[4338]	JMP      	47 ; PC := 47
	45	[4335]	TFORLOOP 	R17 2 ; R20,R21 := R17(R18,R19); if R20 ~= nil then begin PC = 29; R19 := R20 end
	46	[4339]	JMP      	29 ; PC := 29
	47	[4343]	GETGLOBAL	R22 K5 ; R22 := 0x0032441c
	48	[4343]	GETTABLE 	R22 R22 K6 ; R22 := R22["CapacityCost"]
	49	[4343]	GETTABLE 	R22 R22 R16 ; R22 := R22[R16]
	50	[4343]	EQ       	1 R22 K7 ; if R22 == nil then PC := 56
	51	[4343]	JMP      	56 ; PC := 56
	52	[4344]	GETGLOBAL	R22 K5 ; R22 := 0x0032441c
	53	[4344]	GETTABLE 	R22 R22 K6 ; R22 := R22["CapacityCost"]
	54	[4344]	GETTABLE 	R22 R22 R16 ; R22 := R22[R16]
	55	[4344]	ADD      	R8 R8 R22 ; R8 := R8 + R22
	56	[4346]	GETGLOBAL	R22 K12 ; R22 := 0xce225efa
	57	[4346]	LOADK    	R23 := 0.000000
	58	[4346]	CALL     	R22 2 1 ; R22(R23)
	59	[4329]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 12; R12 := R13 end
	60	[4347]	JMP      	12 ; PC := 12
	61	[4350]	SELF     	R22 R0 K13 ; R23 := R0; R22 := R0[0xc9ccdd50]
	62	[4350]	GETTABLE 	R24 R2 R7 ; R24 := R2[R7]
	63	[4350]	GETTABLE 	R24 R24 K14 ; R24 := R24["mName"]
	64	[4350]	MOVE     	R25 R3 ; R25 := R3
	65	[4350]	MOVE     	R26 R8 ; R26 := R8
	66	[4350]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	67	[4326]	FORLOOP  	R4 5 ; R4 += R6; if R4 <= R5 then begin PC := 5; R7 := R4 end
	68	[4353]	TEST     	R3 0 ; if not R3 then PC := 129
	69	[4353]	JMP      	129 ; PC := 129
	70	[4353]	GETUPVAL 	R22 U0 ; R22 := U0
	71	[4353]	GETTABLE 	R22 R22 K15 ; R22 := R22[0x23ddc82a]
	72	[4353]	CALL     	R22 1 2 ; R22 := R22()
	73	[4353]	TEST     	R22 0 ; if not R22 then PC := 129
	74	[4353]	JMP      	129 ; PC := 129
	75	[4353]	GETGLOBAL	R22 K16 ; R22 := _T
	76	[4353]	GETTABLE 	R22 R22 K17 ; R22 := R22["ApartmentPlaceableLevelObjectDecos"]
	77	[4353]	EQ       	1 R22 K7 ; if R22 == nil then PC := 129
	78	[4353]	JMP      	129 ; PC := 129
	79	[4354]	GETGLOBAL	R22 K18 ; R22 := 0xcfc01047
	80	[4354]	GETGLOBAL	R23 K16 ; R23 := _T
	81	[4354]	GETTABLE 	R23 R23 K17 ; R23 := R23["ApartmentPlaceableLevelObjectDecos"]
	82	[4354]	CALL     	R22 2 4 ; R22,R23,R24 := R22(R23)
	83	[4354]	JMP      	127 ; PC := 127
	84	[4355]	SELF     	R27 R26 K19 ; R28 := R26; R27 := R26[0x154947fa]
	85	[4355]	CALL     	R27 2 2 ; R27 := R27(R28)
	86	[4355]	TEST     	R27 0 ; if not R27 then PC := 127
	87	[4355]	JMP      	127 ; PC := 127
	88	[4356]	GETUPVAL 	R27 U0 ; R27 := U0
	89	[4356]	GETTABLE 	R27 R27 K20 ; R27 := R27[0xeee7057a]
	90	[4356]	MOVE     	R28 R26 ; R28 := R26
	91	[4356]	CALL     	R27 2 2 ; R27 := R27(R28)
	92	[4357]	SELF     	R28 R26 K21 ; R29 := R26; R28 := R26[0xaa6ffd67]
	93	[4357]	MOVE     	R30 R27 ; R30 := R27
	94	[4357]	OP_LOADBOOL	R31 0 0 ; R31 := false
	95	[4357]	CALL     	R28 4 1 ; R28(R29,R30,R31)
	96	[4359]	SELF     	R28 R26 K22 ; R29 := R26; R28 := R26[0xcde10c4a]
	97	[4359]	CALL     	R28 2 2 ; R28 := R28(R29)
	98	[4359]	SELF     	R28 R28 K4 ; R29 := R28; R28 := R28[0xed4e0128]
	99	[4359]	CALL     	R28 2 2 ; R28 := R28(R29)
	100	[4360]	GETGLOBAL	R29 K5 ; R29 := 0x0032441c
	101	[4360]	GETTABLE 	R29 R29 K6 ; R29 := R29["CapacityCost"]
	102	[4360]	GETTABLE 	R29 R29 R28 ; R29 := R29[R28]
	103	[4360]	EQ       	0 R29 K7 ; if R29 ~= nil then PC := 127
	104	[4360]	JMP      	127 ; PC := 127
	105	[4361]	GETGLOBAL	R29 K1 ; R29 := 0xc8802016
	106	[4361]	MOVE     	R30 R1 ; R30 := R1
	107	[4361]	CALL     	R29 2 4 ; R29,R30,R31 := R29(R30)
	108	[4361]	JMP      	125 ; PC := 125
	109	[4362]	SELF     	R34 R33 K8 ; R35 := R33; R34 := R33[0xf2deaf69]
	110	[4362]	GETGLOBAL	R36 K9 ; R36 := gShipDecoStoreItemType
	111	[4362]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	112	[4362]	TEST     	R34 0 ; if not R34 then PC := 125
	113	[4362]	JMP      	125 ; PC := 125
	114	[4362]	SELF     	R34 R33 K10 ; R35 := R33; R34 := R33[0x656c098f]
	115	[4362]	CALL     	R34 2 2 ; R34 := R34(R35)
	116	[4362]	EQ       	0 R34 R26 ; if R34 ~= R26 then PC := 125
	117	[4362]	JMP      	125 ; PC := 125
	118	[4363]	GETGLOBAL	R34 K5 ; R34 := 0x0032441c
	119	[4363]	GETTABLE 	R34 R34 K6 ; R34 := R34["CapacityCost"]
	120	[4363]	SELF     	R35 R33 K11 ; R36 := R33; R35 := R33[0xfb7eb1d7]
	121	[4363]	OP_LOADBOOL	R37 0 0 ; R37 := false
	122	[4363]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	123	[4363]	SETTABLE 	R34 R28 R35 ; R34[R28] := R35
	124	[4364]	JMP      	127 ; PC := 127
	125	[4361]	TFORLOOP 	R29 2 ; R32,R33 := R29(R30,R31); if R32 ~= nil then begin PC = 109; R31 := R32 end
	126	[4365]	JMP      	109 ; PC := 109
	127	[4354]	TFORLOOP 	R22 2 ; R25,R26 := R22(R23,R24); if R25 ~= nil then begin PC = 84; R24 := R25 end
	128	[4368]	JMP      	84 ; PC := 84
	129	[4371]	RETURN   	R0 1 ; return 

function #105 <?:4373,4400> (67 instructions, 268 bytes at 000001608D757910)
0 params, 11 slots, 2 upvalues, 0 locals, 17 constants, 0 functions
	1	[4374]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	2	[4374]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x18d05d30]
	3	[4374]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4374]	TEST     	R0 1 ; if R0 then PC := 7
	5	[4374]	JMP      	7 ; PC := 7
	6	[4375]	RETURN   	R0 1 ; return 
	7	[4378]	GETGLOBAL	R0 K2 ; R0 := 0xbe190284
	8	[4379]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	9	[4379]	MOVE     	R2 R0 ; R2 := R0
	10	[4379]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[4379]	TEST     	R1 1 ; if R1 then PC := 19
	12	[4379]	JMP      	19 ; PC := 19
	13	[4379]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	14	[4379]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0xa1c390fe]
	15	[4379]	CALL     	R2 2 0 ; R2,... := R2(R3)
	16	[4379]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	17	[4379]	TEST     	R1 0 ; if not R1 then PC := 20
	18	[4379]	JMP      	20 ; PC := 20
	19	[4380]	RETURN   	R0 1 ; return 
	20	[4384]	GETGLOBAL	R1 K5 ; R1 := 0x0032441c
	21	[4384]	GETTABLE 	R1 R1 K6 ; R1 := R1["CapacityCost"]
	22	[4384]	EQ       	0 R1 K7 ; if R1 ~= nil then PC := 27
	23	[4384]	JMP      	27 ; PC := 27
	24	[4385]	GETGLOBAL	R1 K5 ; R1 := 0x0032441c
	25	[4385]	NEWTABLE 	R2 0 0 ; R2 := {}
	26	[4385]	SETTABLE 	R1 K6 R2 ; R1["CapacityCost"] := R2
	27	[4388]	GETGLOBAL	R1 K8 ; R1 := 0x76ea806b
	28	[4388]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x3f3ae64c]
	29	[4388]	LOADK    	R3 := 0.000000
	30	[4388]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	31	[4389]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	32	[4389]	MOVE     	R3 R1 ; R3 := R1
	33	[4389]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[4389]	TEST     	R2 1 ; if R2 then PC := 67
	35	[4389]	JMP      	67 ; PC := 67
	36	[4390]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0xa1c390fe]
	37	[4390]	CALL     	R2 2 2 ; R2 := R2(R3)
	38	[4391]	SELF     	R3 R2 K10 ; R4 := R2; R3 := R2[0xe9cbffa8]
	39	[4391]	GETGLOBAL	R5 K11 ; R5 := gShipDecoItemType
	40	[4391]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	41	[4393]	SELF     	R4 R1 K12 ; R5 := R1; R4 := R1[0x80563238]
	42	[4393]	CALL     	R4 2 2 ; R4 := R4(R5)
	43	[4394]	GETUPVAL 	R5 U0 ; R5 := U0
	44	[4394]	GETTABLE 	R5 R5 K13 ; R5 := R5[0x23ddc82a]
	45	[4394]	CALL     	R5 1 2 ; R5 := R5()
	46	[4394]	TEST     	R5 0 ; if not R5 then PC := 58
	47	[4394]	JMP      	58 ; PC := 58
	48	[4395]	GETUPVAL 	R5 U1 ; R5 := U1
	49	[4395]	MOVE     	R6 R4 ; R6 := R4
	50	[4395]	MOVE     	R7 R3 ; R7 := R3
	51	[4395]	SELF     	R8 R4 K14 ; R9 := R4; R8 := R4[0x571ef1e3]
	52	[4395]	OP_LOADBOOL	R10 1 0 ; R10 := true
	53	[4395]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	54	[4395]	GETTABLE 	R8 R8 K15 ; R8 := R8["mRooms"]
	55	[4395]	OP_LOADBOOL	R9 1 0 ; R9 := true
	56	[4395]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	57	[4395]	JMP      	67 ; PC := 67
	58	[4397]	GETUPVAL 	R5 U1 ; R5 := U1
	59	[4397]	MOVE     	R6 R4 ; R6 := R4
	60	[4397]	MOVE     	R7 R3 ; R7 := R3
	61	[4397]	SELF     	R8 R4 K16 ; R9 := R4; R8 := R4[0xcd57f819]
	62	[4397]	OP_LOADBOOL	R10 1 0 ; R10 := true
	63	[4397]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	64	[4397]	GETTABLE 	R8 R8 K15 ; R8 := R8["mRooms"]
	65	[4397]	OP_LOADBOOL	R9 0 0 ; R9 := false
	66	[4397]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	67	[4400]	RETURN   	R0 1 ; return 

function #106 <?:4402,4405> (5 instructions, 20 bytes at 000001608D757D00)
0 params, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[4404]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[4404]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x6dd7aa66]
	3	[4404]	GETGLOBAL	R2 K2 ; R2 := 0xcb12dfe1
	4	[4404]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[4405]	RETURN   	R0 1 ; return 

function #107 <?:4407,4409> (3 instructions, 12 bytes at 000001608D757E30)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4408]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4408]	CALL     	R0 1 1 ; R0()
	3	[4409]	RETURN   	R0 1 ; return 

function #108 <?:4411,4413> (5 instructions, 20 bytes at 000001608D757F00)
0 params, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[4412]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[4412]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x6dd7aa66]
	3	[4412]	GETGLOBAL	R2 K2 ; R2 := 0x15d46370
	4	[4412]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[4413]	RETURN   	R0 1 ; return 

function #109 <?:4415,4417> (3 instructions, 12 bytes at 000001608D758030)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4416]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4416]	CALL     	R0 1 1 ; R0()
	3	[4417]	RETURN   	R0 1 ; return 

function #110 <?:4419,4421> (5 instructions, 20 bytes at 000001608D758100)
0 params, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[4420]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[4420]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x6dd7aa66]
	3	[4420]	GETGLOBAL	R2 K2 ; R2 := 0x69813b4f
	4	[4420]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[4421]	RETURN   	R0 1 ; return 

function #111 <?:4423,4425> (3 instructions, 12 bytes at 000001608D758230)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4424]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4424]	CALL     	R0 1 1 ; R0()
	3	[4425]	RETURN   	R0 1 ; return 

function #112 <?:4427,4665> (615 instructions, 2460 bytes at 000001608D758300)
1 param, 60 slots, 11 upvalues, 0 locals, 101 constants, 0 functions
	1	[4428]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4428]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	3	[4428]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4428]	TEST     	R1 1 ; if R1 then PC := 23
	5	[4428]	JMP      	23 ; PC := 23
	6	[4428]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[4428]	GETGLOBAL	R2 K2 ; R2 := 0xbe190284
	8	[4428]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[4428]	TEST     	R1 1 ; if R1 then PC := 23
	10	[4428]	JMP      	23 ; PC := 23
	11	[4428]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	12	[4428]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xf2deaf69]
	13	[4428]	GETGLOBAL	R3 K4 ; R3 := gLotusAttractModeGameRulesType
	14	[4428]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	15	[4428]	TEST     	R1 1 ; if R1 then PC := 24
	16	[4428]	JMP      	24 ; PC := 24
	17	[4428]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	18	[4428]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xf2deaf69]
	19	[4428]	GETGLOBAL	R3 K5 ; R3 := gLotusPhotoBoothGameRulesType
	20	[4428]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	21	[4428]	TEST     	R1 1 ; if R1 then PC := 24
	22	[4428]	JMP      	24 ; PC := 24
	23	[4429]	RETURN   	R0 1 ; return 
	24	[4432]	GETGLOBAL	R1 K6 ; R1 := 0x0469f296
	25	[4432]	LOADK    	R2 K7 ; R2 := "DynamicDojoDeco"
	26	[4432]	CALL     	R1 2 2 ; R1 := R1(R2)
	27	[4434]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	28	[4434]	GETGLOBAL	R3 K8 ; R3 := 0x25d99d89
	29	[4434]	CALL     	R2 2 2 ; R2 := R2(R3)
	30	[4434]	TEST     	R2 1 ; if R2 then PC := 615
	31	[4434]	JMP      	615 ; PC := 615
	32	[4435]	LOADK    	R2 := 8.000000
	33	[4436]	LOADK    	R3 := 0.000000
	34	[4438]	GETGLOBAL	R4 K9 ; R4 := 0xa421af95
	35	[4438]	CALL     	R4 1 2 ; R4 := R4()
	36	[4439]	GETGLOBAL	R5 K9 ; R5 := 0xa421af95
	37	[4439]	CALL     	R5 1 2 ; R5 := R5()
	38	[4440]	GETGLOBAL	R6 K10 ; R6 := 0x00046924
	39	[4440]	CALL     	R6 1 2 ; R6 := R6()
	40	[4442]	GETTABLE 	R7 R0 K11 ; R7 := R0["DecoArea"]
	41	[4442]	GETUPVAL 	R8 U0 ; R8 := U0
	42	[4442]	GETTABLE 	R8 R8 K12 ; R8 := R8["DECO_AREA_APARTMENT"]
	43	[4442]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 46
	44	[4442]	JMP      	46 ; PC := 46
	45	[4442]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 46
	46	[4442]	OP_LOADBOOL	R7 1 0 ; R7 := true
	47	[4443]	GETGLOBAL	R8 K8 ; R8 := 0x25d99d89
	48	[4443]	SELF     	R8 R8 K13 ; R9 := R8; R8 := R8[0x911c6241]
	49	[4443]	GETGLOBAL	R10 K1 ; R10 := 0x89326c93
	50	[4443]	SELF     	R10 R10 K14 ; R11 := R10; R10 := R10[0x18d05d30]
	51	[4443]	CALL     	R10 2 2 ; R10 := R10(R11)
	52	[4443]	MOVE     	R11 R7 ; R11 := R7
	53	[4443]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	54	[4444]	GETTABLE 	R9 R0 K15 ; R9 := R0["LoaderProgress"]
	55	[4444]	GETTABLE 	R9 R9 K16 ; R9 := R9["RoomCreationIndex"]
	56	[4444]	GETTABLE 	R10 R0 K15 ; R10 := R0["LoaderProgress"]
	57	[4444]	GETTABLE 	R10 R10 K17 ; R10 := R10["RoomLoaderIndex"]
	58	[4444]	LOADK    	R11 := 1.000000
	59	[4444]	FORPREP  	R9 571 ; R9 -= R11; PC := 571
	60	[4445]	GETTABLE 	R13 R0 K15 ; R13 := R0["LoaderProgress"]
	61	[4445]	SETTABLE 	R13 K16 R12 ; R13["RoomCreationIndex"] := R12
	62	[4446]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	63	[4446]	GETTABLE 	R13 R13 K18 ; R13 := R13["mPlacedDecos"]
	64	[4447]	GETTABLE 	R14 R8 R12 ; R14 := R8[R12]
	65	[4447]	GETTABLE 	R14 R14 K19 ; R14 := R14["mName"]
	66	[4449]	LEN      	R15 R13 ; R15 := # R13
	67	[4450]	NEWTABLE 	R16 0 0 ; R16 := {}
	68	[4451]	GETTABLE 	R17 R0 K15 ; R17 := R0["LoaderProgress"]
	69	[4451]	GETTABLE 	R17 R17 K20 ; R17 := R17["DecoCreationIndex"]
	70	[4451]	MOVE     	R18 R15 ; R18 := R15
	71	[4451]	LOADK    	R19 := 1.000000
	72	[4451]	FORPREP  	R17 516 ; R17 -= R19; PC := 516
	73	[4452]	GETTABLE 	R21 R13 R20 ; R21 := R13[R20]
	74	[4453]	SELF     	R22 R21 K21 ; R23 := R21; R22 := R21[0xf537cfc7]
	75	[4453]	CALL     	R22 2 2 ; R22 := R22(R23)
	76	[4454]	GETGLOBAL	R23 K22 ; R23 := _T
	77	[4454]	GETTABLE 	R23 R23 K23 ; R23 := R23["ShipDecos"]
	78	[4454]	EQ       	0 R23 K24 ; if R23 ~= nil then PC := 83
	79	[4454]	JMP      	83 ; PC := 83
	80	[4455]	GETGLOBAL	R23 K22 ; R23 := _T
	81	[4455]	NEWTABLE 	R24 0 0 ; R24 := {}
	82	[4455]	SETTABLE 	R23 K23 R24 ; R23["ShipDecos"] := R24
	83	[4458]	OP_LOADBOOL	R23 0 0 ; R23 := false
	84	[4459]	GETGLOBAL	R24 K0 ; R24 := 0x7b998233
	85	[4459]	GETTABLE 	R25 R21 K25 ; R25 := R21["decoType"]
	86	[4459]	CALL     	R24 2 2 ; R24 := R24(R25)
	87	[4459]	TEST     	R24 0 ; if not R24 then PC := 93
	88	[4459]	JMP      	93 ; PC := 93
	89	[4460]	GETTABLE 	R24 R0 K15 ; R24 := R0["LoaderProgress"]
	90	[4460]	ADD      	R25 R20 K26 ; R25 := R20 + 1.000000
	91	[4460]	SETTABLE 	R24 K20 R25 ; R24[0x07000038] := R25
	92	[4460]	JMP      	109 ; PC := 109
	93	[4461]	GETTABLE 	R24 R0 K15 ; R24 := R0["LoaderProgress"]
	94	[4461]	GETTABLE 	R24 R24 K27 ; R24 := R24["DecosLoaded"]
	95	[4461]	GETTABLE 	R25 R21 K25 ; R25 := R21["decoType"]
	96	[4461]	SELF     	R25 R25 K28 ; R26 := R25; R25 := R25[0xed4e0128]
	97	[4461]	CALL     	R25 2 2 ; R25 := R25(R26)
	98	[4461]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	99	[4461]	EQ       	0 R24 K24 ; if R24 ~= nil then PC := 105
	100	[4461]	JMP      	105 ; PC := 105
	101	[4463]	GETTABLE 	R24 R0 K15 ; R24 := R0["LoaderProgress"]
	102	[4463]	SETTABLE 	R24 K20 R20 ; R24[0x07000038] := R20
	103	[4464]	JMP      	517 ; PC := 517
	104	[4464]	JMP      	109 ; PC := 109
	105	[4466]	OP_LOADBOOL	R23 1 0 ; R23 := true
	106	[4467]	GETTABLE 	R24 R0 K15 ; R24 := R0["LoaderProgress"]
	107	[4467]	ADD      	R25 R20 K26 ; R25 := R20 + 1.000000
	108	[4467]	SETTABLE 	R24 K20 R25 ; R24[0x07000038] := R25
	109	[4470]	TEST     	R23 0 ; if not R23 then PC := 123
	110	[4470]	JMP      	123 ; PC := 123
	111	[4470]	GETGLOBAL	R24 K1 ; R24 := 0x89326c93
	112	[4470]	SELF     	R24 R24 K14 ; R25 := R24; R24 := R24[0x18d05d30]
	113	[4470]	CALL     	R24 2 2 ; R24 := R24(R25)
	114	[4470]	TEST     	R24 1 ; if R24 then PC := 123
	115	[4470]	JMP      	123 ; PC := 123
	116	[4470]	GETTABLE 	R24 R21 K25 ; R24 := R21["decoType"]
	117	[4470]	SELF     	R24 R24 K3 ; R25 := R24; R24 := R24[0xf2deaf69]
	118	[4470]	GETUPVAL 	R26 U1 ; R26 := U1
	119	[4470]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	120	[4470]	TEST     	R24 0 ; if not R24 then PC := 123
	121	[4470]	JMP      	123 ; PC := 123
	122	[4471]	OP_LOADBOOL	R23 0 0 ; R23 := false
	123	[4474]	TEST     	R23 0 ; if not R23 then PC := 516
	124	[4474]	JMP      	516 ; PC := 516
	125	[4474]	GETGLOBAL	R24 K0 ; R24 := 0x7b998233
	126	[4474]	GETGLOBAL	R25 K22 ; R25 := _T
	127	[4474]	GETTABLE 	R25 R25 K23 ; R25 := R25["ShipDecos"]
	128	[4474]	GETTABLE 	R25 R25 R22 ; R25 := R25[R22]
	129	[4474]	CALL     	R24 2 2 ; R24 := R24(R25)
	130	[4474]	TEST     	R24 0 ; if not R24 then PC := 516
	131	[4474]	JMP      	516 ; PC := 516
	132	[4475]	LOADNIL  	R24 R24 ; R24 := nil
	133	[4476]	SELF     	R25 R21 K29 ; R26 := R21; R25 := R21[0x450ef75f]
	134	[4476]	CALL     	R25 2 2 ; R25 := R25(R26)
	135	[4478]	GETUPVAL 	R26 U0 ; R26 := U0
	136	[4478]	GETTABLE 	R26 R26 K30 ; R26 := R26[0x5d6355b4]
	137	[4478]	MOVE     	R27 R14 ; R27 := R14
	138	[4478]	MOVE     	R28 R7 ; R28 := R7
	139	[4478]	MOVE     	R29 R21 ; R29 := R21
	140	[4478]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	141	[4479]	GETGLOBAL	R27 K0 ; R27 := 0x7b998233
	142	[4479]	MOVE     	R28 R26 ; R28 := R26
	143	[4479]	CALL     	R27 2 2 ; R27 := R27(R28)
	144	[4479]	TEST     	R27 1 ; if R27 then PC := 196
	145	[4479]	JMP      	196 ; PC := 196
	146	[4480]	EQ       	1 R25 K31 ; if R25 == "" then PC := 186
	147	[4480]	JMP      	186 ; PC := 186
	148	[4481]	GETGLOBAL	R27 K0 ; R27 := 0x7b998233
	149	[4481]	GETGLOBAL	R28 K22 ; R28 := _T
	150	[4481]	GETTABLE 	R28 R28 K23 ; R28 := R28["ShipDecos"]
	151	[4481]	GETTABLE 	R28 R28 R25 ; R28 := R28[R25]
	152	[4481]	CALL     	R27 2 2 ; R27 := R27(R28)
	153	[4481]	TEST     	R27 1 ; if R27 then PC := 168
	154	[4481]	JMP      	168 ; PC := 168
	155	[4482]	GETGLOBAL	R27 K22 ; R27 := _T
	156	[4482]	GETTABLE 	R27 R27 K23 ; R27 := R27["ShipDecos"]
	157	[4482]	GETTABLE 	R27 R27 R25 ; R27 := R27[R25]
	158	[4482]	SELF     	R27 R27 K32 ; R28 := R27; R27 := R27[0x47901f07]
	159	[4482]	GETGLOBAL	R29 K33 ; R29 := 0x88efc25e
	160	[4482]	GETTABLE 	R30 R21 K25 ; R30 := R21["decoType"]
	161	[4482]	CALL     	R29 2 2 ; R29 := R29(R30)
	162	[4482]	GETGLOBAL	R30 K34 ; R30 := EMPTY_SYMBOL
	163	[4482]	GETTABLE 	R31 R21 K35 ; R31 := R21["pos"]
	164	[4482]	GETTABLE 	R32 R21 K36 ; R32 := R21["rot"]
	165	[4482]	CALL     	R27 6 2 ; R27 := R27(R28,R29,R30,R31,R32)
	166	[4482]	MOVE     	R24 R27 ; R24 := R27
	167	[4482]	JMP      	199 ; PC := 199
	168	[4484]	SELF     	R27 R26 K32 ; R28 := R26; R27 := R26[0x47901f07]
	169	[4484]	GETGLOBAL	R29 K33 ; R29 := 0x88efc25e
	170	[4484]	GETTABLE 	R30 R21 K25 ; R30 := R21["decoType"]
	171	[4484]	CALL     	R29 2 2 ; R29 := R29(R30)
	172	[4484]	GETGLOBAL	R30 K34 ; R30 := EMPTY_SYMBOL
	173	[4484]	CALL     	R27 4 2 ; R27 := R27(R28,R29,R30)
	174	[4484]	MOVE     	R24 R27 ; R24 := R27
	175	[4485]	SELF     	R27 R24 K37 ; R28 := R24; R27 := R24[0x467c327c]
	176	[4485]	CALL     	R27 2 1 ; R27(R28)
	177	[4486]	GETGLOBAL	R27 K38 ; R27 := 0x33bdd652
	178	[4486]	GETTABLE 	R27 R27 K39 ; R27 := R27[0x23d5322f]
	179	[4486]	MOVE     	R28 R16 ; R28 := R16
	180	[4486]	NEWTABLE 	R29 2 0 ; R29 := {}
	181	[4486]	MOVE     	R30 R21 ; R30 := R21
	182	[4486]	MOVE     	R31 R24 ; R31 := R24
	183	[4486]	SETLIST  	R29 2 1 ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 2
	184	[4486]	CALL     	R27 3 1 ; R27(R28,R29)
	185	[4487]	JMP      	199 ; PC := 199
	186	[4489]	SELF     	R27 R26 K32 ; R28 := R26; R27 := R26[0x47901f07]
	187	[4489]	GETGLOBAL	R29 K33 ; R29 := 0x88efc25e
	188	[4489]	GETTABLE 	R30 R21 K25 ; R30 := R21["decoType"]
	189	[4489]	CALL     	R29 2 2 ; R29 := R29(R30)
	190	[4489]	GETGLOBAL	R30 K34 ; R30 := EMPTY_SYMBOL
	191	[4489]	GETTABLE 	R31 R21 K35 ; R31 := R21["pos"]
	192	[4489]	GETTABLE 	R32 R21 K36 ; R32 := R21["rot"]
	193	[4489]	CALL     	R27 6 2 ; R27 := R27(R28,R29,R30,R31,R32)
	194	[4489]	MOVE     	R24 R27 ; R24 := R27
	195	[4490]	JMP      	199 ; PC := 199
	196	[4492]	GETGLOBAL	R27 K40 ; R27 := 0x3d106989
	197	[4492]	LOADK    	R28 K41 ; R28 := "Could not find attachment anchor for ship decos!"
	198	[4492]	CALL     	R27 2 1 ; R27(R28)
	199	[4495]	GETGLOBAL	R27 K0 ; R27 := 0x7b998233
	200	[4495]	MOVE     	R28 R24 ; R28 := R24
	201	[4495]	CALL     	R27 2 2 ; R27 := R27(R28)
	202	[4495]	TEST     	R27 1 ; if R27 then PC := 516
	203	[4495]	JMP      	516 ; PC := 516
	204	[4497]	GETGLOBAL	R27 K0 ; R27 := 0x7b998233
	205	[4497]	GETGLOBAL	R28 K2 ; R28 := 0xbe190284
	206	[4497]	CALL     	R27 2 2 ; R27 := R27(R28)
	207	[4497]	TEST     	R27 1 ; if R27 then PC := 236
	208	[4497]	JMP      	236 ; PC := 236
	209	[4497]	GETGLOBAL	R27 K2 ; R27 := 0xbe190284
	210	[4497]	SELF     	R27 R27 K3 ; R28 := R27; R27 := R27[0xf2deaf69]
	211	[4497]	GETGLOBAL	R29 K5 ; R29 := gLotusPhotoBoothGameRulesType
	212	[4497]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	213	[4497]	TEST     	R27 0 ; if not R27 then PC := 236
	214	[4497]	JMP      	236 ; PC := 236
	215	[4498]	SELF     	R27 R24 K42 ; R28 := R24; R27 := R24[0x905bb2bd]
	216	[4498]	CALL     	R27 2 2 ; R27 := R27(R28)
	217	[4499]	GETGLOBAL	R28 K0 ; R28 := 0x7b998233
	218	[4499]	MOVE     	R29 R27 ; R29 := R27
	219	[4499]	CALL     	R28 2 2 ; R28 := R28(R29)
	220	[4499]	TEST     	R28 1 ; if R28 then PC := 236
	221	[4499]	JMP      	236 ; PC := 236
	222	[4500]	LOADK    	R28 := 1.000000
	223	[4500]	LEN      	R29 R27 ; R29 := # R27
	224	[4500]	LOADK    	R30 := 1.000000
	225	[4500]	FORPREP  	R28 235 ; R28 -= R30; PC := 235
	226	[4501]	GETTABLE 	R32 R27 R31 ; R32 := R27[R31]
	227	[4501]	SELF     	R32 R32 K3 ; R33 := R32; R32 := R32[0xf2deaf69]
	228	[4501]	GETGLOBAL	R34 K43 ; R34 := gContextActionType
	229	[4501]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	230	[4501]	TEST     	R32 0 ; if not R32 then PC := 235
	231	[4501]	JMP      	235 ; PC := 235
	232	[4502]	GETTABLE 	R32 R27 R31 ; R32 := R27[R31]
	233	[4502]	SELF     	R32 R32 K44 ; R33 := R32; R32 := R32[0xf4e253b6]
	234	[4502]	CALL     	R32 2 1 ; R32(R33)
	235	[4500]	FORLOOP  	R28 226 ; R28 += R30; if R28 <= R29 then begin PC := 226; R31 := R28 end
	236	[4507]	EQ       	1 R25 K31 ; if R25 == "" then PC := 256
	237	[4507]	JMP      	256 ; PC := 256
	238	[4508]	GETGLOBAL	R32 K22 ; R32 := _T
	239	[4508]	GETTABLE 	R32 R32 K23 ; R32 := R32["ShipDecos"]
	240	[4508]	GETTABLE 	R32 R32 R25 ; R32 := R32[R25]
	241	[4509]	GETGLOBAL	R33 K0 ; R33 := 0x7b998233
	242	[4509]	MOVE     	R34 R32 ; R34 := R32
	243	[4509]	CALL     	R33 2 2 ; R33 := R33(R34)
	244	[4509]	TEST     	R33 1 ; if R33 then PC := 251
	245	[4509]	JMP      	251 ; PC := 251
	246	[4510]	SELF     	R33 R24 K45 ; R34 := R24; R33 := R24[0x7a4ee345]
	247	[4510]	MOVE     	R35 R32 ; R35 := R32
	248	[4510]	OP_LOADBOOL	R36 0 0 ; R36 := false
	249	[4510]	CALL     	R33 4 1 ; R33(R34,R35,R36)
	250	[4510]	JMP      	258 ; PC := 258
	251	[4513]	SELF     	R33 R24 K46 ; R34 := R24; R33 := R24[0xe28aa928]
	252	[4513]	GETTABLE 	R35 R21 K35 ; R35 := R21["pos"]
	253	[4513]	GETTABLE 	R36 R21 K36 ; R36 := R21["rot"]
	254	[4513]	CALL     	R33 4 1 ; R33(R34,R35,R36)
	255	[4514]	JMP      	258 ; PC := 258
	256	[4516]	SELF     	R33 R24 K37 ; R34 := R24; R33 := R24[0x467c327c]
	257	[4516]	CALL     	R33 2 1 ; R33(R34)
	258	[4518]	GETTABLE 	R33 R21 K47 ; R33 := R21["socketInfo"]
	259	[4519]	SELF     	R34 R24 K48 ; R35 := R24; R34 := R24[0x3787263c]
	260	[4519]	MOVE     	R36 R33 ; R36 := R33
	261	[4519]	CALL     	R34 3 1 ; R34(R35,R36)
	262	[4520]	SELF     	R34 R24 K49 ; R35 := R24; R34 := R24[0x1403231b]
	263	[4520]	MOVE     	R36 R22 ; R36 := R22
	264	[4520]	CALL     	R34 3 1 ; R34(R35,R36)
	265	[4521]	SELF     	R34 R24 K50 ; R35 := R24; R34 := R24[0xaa6ffd67]
	266	[4521]	GETTABLE 	R36 R8 R12 ; R36 := R8[R12]
	267	[4521]	GETTABLE 	R36 R36 K19 ; R36 := R36["mName"]
	268	[4521]	OP_LOADBOOL	R37 0 0 ; R37 := false
	269	[4521]	CALL     	R34 4 1 ; R34(R35,R36,R37)
	270	[4522]	SELF     	R34 R24 K51 ; R35 := R24; R34 := R24[0x5acae14c]
	271	[4522]	LOADK    	R36 := 4.000000
	272	[4522]	LOADK    	R37 := 1.000000
	273	[4522]	OP_LOADBOOL	R38 1 0 ; R38 := true
	274	[4522]	LOADNIL  	R39 R39 ; R39 := nil
	275	[4522]	CALL     	R34 6 1 ; R34(R35,R36,R37,R38,R39)
	276	[4523]	GETTABLE 	R34 R21 K53 ; R34 := R21["scale"]
	277	[4523]	LT       	0 K54 R34 ; if 0.000000 >= R34 then PC := 282
	278	[4523]	JMP      	282 ; PC := 282
	279	[4524]	SELF     	R34 R24 K55 ; R35 := R24; R34 := R24[0x2d9ba74f]
	280	[4524]	GETTABLE 	R36 R21 K53 ; R36 := R21["scale"]
	281	[4524]	CALL     	R34 3 1 ; R34(R35,R36)
	282	[4527]	GETUPVAL 	R34 U2 ; R34 := U2
	283	[4527]	GETTABLE 	R34 R34 K56 ; R34 := R34[0x5a03fa99]
	284	[4527]	MOVE     	R35 R21 ; R35 := R21
	285	[4527]	MOVE     	R36 R24 ; R36 := R24
	286	[4527]	CALL     	R34 3 1 ; R34(R35,R36)
	287	[4529]	SELF     	R34 R24 K3 ; R35 := R24; R34 := R24[0xf2deaf69]
	288	[4529]	GETGLOBAL	R36 K57 ; R36 := 0x10828333
	289	[4529]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	290	[4529]	TEST     	R34 0 ; if not R34 then PC := 401
	291	[4529]	JMP      	401 ; PC := 401
	292	[4530]	SELF     	R34 R24 K58 ; R35 := R24; R34 := R24[0xef977697]
	293	[4530]	GETTABLE 	R36 R21 K59 ; R36 := R21["customizationInfo"]
	294	[4530]	OP_LOADBOOL	R37 1 0 ; R37 := true
	295	[4530]	CALL     	R34 4 1 ; R34(R35,R36,R37)
	296	[4531]	GETTABLE 	R34 R21 K59 ; R34 := R21["customizationInfo"]
	297	[4531]	GETTABLE 	R34 R34 K60 ; R34 := R34["mLoadOutPreset"]
	298	[4532]	GETTABLE 	R35 R21 K59 ; R35 := R21["customizationInfo"]
	299	[4532]	GETTABLE 	R35 R35 K61 ; R35 := R35["mVehiclePreset"]
	300	[4533]	GETTABLE 	R36 R34 K62 ; R36 := R34["mItemId"]
	301	[4533]	GETTABLE 	R36 R36 K63 ; R36 := R36["mId"]
	302	[4534]	GETTABLE 	R37 R35 K62 ; R37 := R35["mItemId"]
	303	[4534]	GETTABLE 	R37 R37 K63 ; R37 := R37["mId"]
	304	[4535]	GETTABLE 	R38 R21 K59 ; R38 := R21["customizationInfo"]
	305	[4535]	GETTABLE 	R38 R38 K64 ; R38 := R38["mLoadOutType"]
	306	[4536]	OP_LOADBOOL	R39 0 0 ; R39 := false
	307	[4538]	GETGLOBAL	R40 K52 ; R40 := 0x6c97a788
	308	[4538]	GETTABLE 	R40 R40 K65 ; R40 := R40["InvalidItemID"]
	309	[4538]	EQ       	1 R37 R40 ; if R37 == R40 then PC := 321
	310	[4538]	JMP      	321 ; PC := 321
	311	[4538]	EQ       	1 R37 K31 ; if R37 == "" then PC := 321
	312	[4538]	JMP      	321 ; PC := 321
	313	[4539]	GETGLOBAL	R40 K38 ; R40 := 0x33bdd652
	314	[4539]	GETTABLE 	R40 R40 K39 ; R40 := R40[0x23d5322f]
	315	[4539]	GETUPVAL 	R41 U3 ; R41 := U3
	316	[4539]	GETTABLE 	R41 R41 K66 ; R41 := R41["Figures"]
	317	[4539]	MOVE     	R42 R24 ; R42 := R24
	318	[4539]	CALL     	R40 3 1 ; R40(R41,R42)
	319	[4540]	OP_LOADBOOL	R39 1 0 ; R39 := true
	320	[4540]	JMP      	322 ; PC := 322
	321	[4542]	LOADK    	R37 K31 ; R37 := ""
	322	[4545]	GETGLOBAL	R40 K52 ; R40 := 0x6c97a788
	323	[4545]	GETTABLE 	R40 R40 K65 ; R40 := R40["InvalidItemID"]
	324	[4545]	EQ       	1 R36 R40 ; if R36 == R40 then PC := 364
	325	[4545]	JMP      	364 ; PC := 364
	326	[4545]	EQ       	1 R36 K31 ; if R36 == "" then PC := 364
	327	[4545]	JMP      	364 ; PC := 364
	328	[4546]	MOVE     	R40 R36 ; R40 := R36
	329	[4546]	MOVE     	R41 R37 ; R41 := R37
	330	[4546]	MOVE     	R42 R38 ; R42 := R38
	331	[4546]	CONCAT   	R40 R40 R42 ; R40 := R40 .. R41 .. R42
	332	[4547]	GETGLOBAL	R41 K0 ; R41 := 0x7b998233
	333	[4547]	GETUPVAL 	R42 U3 ; R42 := U3
	334	[4547]	GETTABLE 	R42 R42 K67 ; R42 := R42["PresetIds"]
	335	[4547]	GETTABLE 	R42 R42 R40 ; R42 := R42[R40]
	336	[4547]	CALL     	R41 2 2 ; R41 := R41(R42)
	337	[4547]	TEST     	R41 0 ; if not R41 then PC := 355
	338	[4547]	JMP      	355 ; PC := 355
	339	[4548]	GETGLOBAL	R41 K38 ; R41 := 0x33bdd652
	340	[4548]	GETTABLE 	R41 R41 K39 ; R41 := R41[0x23d5322f]
	341	[4548]	GETUPVAL 	R42 U3 ; R42 := U3
	342	[4548]	GETTABLE 	R42 R42 K68 ; R42 := R42["PresetInfos"]
	343	[4548]	NEWTABLE 	R43 0 3 ; R43 := {}
	344	[4548]	SELF     	R44 R34 K70 ; R45 := R34; R44 := R34[0x8f89d633]
	345	[4548]	CALL     	R44 2 2 ; R44 := R44(R45)
	346	[4548]	SETTABLE 	R43 K69 R44 ; R43["Preset"] := R44
	347	[4548]	SELF     	R44 R35 K70 ; R45 := R35; R44 := R35[0x8f89d633]
	348	[4548]	CALL     	R44 2 2 ; R44 := R44(R45)
	349	[4548]	SETTABLE 	R43 K71 R44 ; R43["VehiclePreset"] := R44
	350	[4548]	SETTABLE 	R43 K72 R38 ; R43["LoadOutType"] := R38
	351	[4548]	CALL     	R41 3 1 ; R41(R42,R43)
	352	[4549]	GETUPVAL 	R41 U3 ; R41 := U3
	353	[4549]	GETTABLE 	R41 R41 K67 ; R41 := R41["PresetIds"]
	354	[4549]	SETTABLE 	R41 R40 K26 ; R41[R40] := 1.000000
	355	[4552]	TEST     	R39 1 ; if R39 then PC := 401
	356	[4552]	JMP      	401 ; PC := 401
	357	[4553]	GETGLOBAL	R41 K38 ; R41 := 0x33bdd652
	358	[4553]	GETTABLE 	R41 R41 K39 ; R41 := R41[0x23d5322f]
	359	[4553]	GETUPVAL 	R42 U3 ; R42 := U3
	360	[4553]	GETTABLE 	R42 R42 K66 ; R42 := R42["Figures"]
	361	[4553]	MOVE     	R43 R24 ; R43 := R24
	362	[4553]	CALL     	R41 3 1 ; R41(R42,R43)
	363	[4554]	JMP      	401 ; PC := 401
	364	[4555]	GETGLOBAL	R41 K0 ; R41 := 0x7b998233
	365	[4555]	GETTABLE 	R42 R21 K59 ; R42 := R21["customizationInfo"]
	366	[4555]	GETTABLE 	R42 R42 K73 ; R42 := R42["mAvatarType"]
	367	[4555]	CALL     	R41 2 2 ; R41 := R41(R42)
	368	[4555]	TEST     	R41 1 ; if R41 then PC := 401
	369	[4555]	JMP      	401 ; PC := 401
	370	[4556]	OP_LOADBOOL	R41 0 0 ; R41 := false
	371	[4557]	LOADK    	R42 := 1.000000
	372	[4557]	GETUPVAL 	R43 U3 ; R43 := U3
	373	[4557]	GETTABLE 	R43 R43 K74 ; R43 := R43["EnemyTypes"]
	374	[4557]	LEN      	R43 R43 ; R43 := # R43
	375	[4557]	LOADK    	R44 := 1.000000
	376	[4557]	FORPREP  	R42 385 ; R42 -= R44; PC := 385
	377	[4558]	GETUPVAL 	R46 U3 ; R46 := U3
	378	[4558]	GETTABLE 	R46 R46 K74 ; R46 := R46["EnemyTypes"]
	379	[4558]	GETTABLE 	R46 R46 R45 ; R46 := R46[R45]
	380	[4558]	GETTABLE 	R47 R21 K59 ; R47 := R21["customizationInfo"]
	381	[4558]	GETTABLE 	R47 R47 K73 ; R47 := R47["mAvatarType"]
	382	[4558]	EQ       	0 R46 R47 ; if R46 ~= R47 then PC := 385
	383	[4558]	JMP      	385 ; PC := 385
	384	[4559]	OP_LOADBOOL	R41 1 0 ; R41 := true
	385	[4557]	FORLOOP  	R42 377 ; R42 += R44; if R42 <= R43 then begin PC := 377; R45 := R42 end
	386	[4563]	TEST     	R41 1 ; if R41 then PC := 395
	387	[4563]	JMP      	395 ; PC := 395
	388	[4564]	GETGLOBAL	R46 K38 ; R46 := 0x33bdd652
	389	[4564]	GETTABLE 	R46 R46 K39 ; R46 := R46[0x23d5322f]
	390	[4564]	GETUPVAL 	R47 U3 ; R47 := U3
	391	[4564]	GETTABLE 	R47 R47 K74 ; R47 := R47["EnemyTypes"]
	392	[4564]	GETTABLE 	R48 R21 K59 ; R48 := R21["customizationInfo"]
	393	[4564]	GETTABLE 	R48 R48 K73 ; R48 := R48["mAvatarType"]
	394	[4564]	CALL     	R46 3 1 ; R46(R47,R48)
	395	[4567]	GETGLOBAL	R46 K38 ; R46 := 0x33bdd652
	396	[4567]	GETTABLE 	R46 R46 K39 ; R46 := R46[0x23d5322f]
	397	[4567]	GETUPVAL 	R47 U3 ; R47 := U3
	398	[4567]	GETTABLE 	R47 R47 K75 ; R47 := R47["EnemyFigures"]
	399	[4567]	MOVE     	R48 R24 ; R48 := R24
	400	[4567]	CALL     	R46 3 1 ; R46(R47,R48)
	401	[4571]	GETGLOBAL	R46 K22 ; R46 := _T
	402	[4571]	GETTABLE 	R46 R46 K23 ; R46 := R46["ShipDecos"]
	403	[4571]	SETTABLE 	R46 R22 R24 ; R46[R22] := R24
	404	[4573]	SELF     	R46 R24 K76 ; R47 := R24; R46 := R24[0x22da1852]
	405	[4573]	CALL     	R46 2 2 ; R46 := R46(R47)
	406	[4573]	EQ       	0 R46 R1 ; if R46 ~= R1 then PC := 425
	407	[4573]	JMP      	425 ; PC := 425
	408	[4574]	GETGLOBAL	R46 K22 ; R46 := _T
	409	[4574]	GETTABLE 	R46 R46 K77 ; R46 := R46["DynamicDecos"]
	410	[4574]	EQ       	0 R46 K24 ; if R46 ~= nil then PC := 415
	411	[4574]	JMP      	415 ; PC := 415
	412	[4575]	GETGLOBAL	R46 K22 ; R46 := _T
	413	[4575]	NEWTABLE 	R47 0 0 ; R47 := {}
	414	[4575]	SETTABLE 	R46 K77 R47 ; R46["DynamicDecos"] := R47
	415	[4578]	GETGLOBAL	R46 K22 ; R46 := _T
	416	[4578]	GETTABLE 	R46 R46 K77 ; R46 := R46["DynamicDecos"]
	417	[4578]	NEWTABLE 	R47 0 2 ; R47 := {}
	418	[4578]	SELF     	R48 R24 K78 ; R49 := R24; R48 := R24[0xf6ebd926]
	419	[4578]	CALL     	R48 2 2 ; R48 := R48(R49)
	420	[4578]	SETTABLE 	R47 K35 R48 ; R47["pos"] := R48
	421	[4578]	SELF     	R48 R24 K79 ; R49 := R24; R48 := R24[0x5280b883]
	422	[4578]	CALL     	R48 2 2 ; R48 := R48(R49)
	423	[4578]	SETTABLE 	R47 K36 R48 ; R47["rot"] := R48
	424	[4578]	SETTABLE 	R46 R22 R47 ; R46[R22] := R47
	425	[4581]	GETGLOBAL	R46 K22 ; R46 := _T
	426	[4581]	GETTABLE 	R46 R46 K80 ; R46 := R46["PlacingCustomizableDeco"]
	427	[4581]	TEST     	R46 0 ; if not R46 then PC := 479
	428	[4581]	JMP      	479 ; PC := 479
	429	[4581]	LEN      	R46 R13 ; R46 := # R13
	430	[4581]	EQ       	0 R20 R46 ; if R20 ~= R46 then PC := 479
	431	[4581]	JMP      	479 ; PC := 479
	432	[4582]	SELF     	R46 R24 K3 ; R47 := R24; R46 := R24[0xf2deaf69]
	433	[4582]	GETGLOBAL	R48 K81 ; R48 := 0x7ed0a956
	434	[4582]	LOADK    	R49 K82 ; R49 := "/Lotus/Types/Game/DojoPlaceableDecorations/ShipPlaceablePictureFrame"
	435	[4582]	CALL     	R48 2 0 ; R48,... := R48(R49)
	436	[4582]	CALL     	R46 0 2 ; R46 := R46(R47,...)
	437	[4582]	TEST     	R46 0 ; if not R46 then PC := 444
	438	[4582]	JMP      	444 ; PC := 444
	439	[4583]	GETGLOBAL	R46 K22 ; R46 := _T
	440	[4583]	SETTABLE 	R46 K83 R24 ; R46["FragmentViewerDeco"] := R24
	441	[4584]	GETUPVAL 	R46 U4 ; R46 := U4
	442	[4584]	CALL     	R46 1 1 ; R46()
	443	[4584]	JMP      	477 ; PC := 477
	444	[4585]	SELF     	R46 R24 K3 ; R47 := R24; R46 := R24[0xf2deaf69]
	445	[4585]	GETGLOBAL	R48 K81 ; R48 := 0x7ed0a956
	446	[4585]	LOADK    	R49 K84 ; R49 := "/Lotus/Objects/Tenno/ActionFigures/Figures/BaseAF"
	447	[4585]	CALL     	R48 2 0 ; R48,... := R48(R49)
	448	[4585]	CALL     	R46 0 2 ; R46 := R46(R47,...)
	449	[4585]	TEST     	R46 0 ; if not R46 then PC := 456
	450	[4585]	JMP      	456 ; PC := 456
	451	[4586]	GETGLOBAL	R46 K22 ; R46 := _T
	452	[4586]	SETTABLE 	R46 K85 R24 ; R46["ActionFigureDeco"] := R24
	453	[4587]	GETUPVAL 	R46 U5 ; R46 := U5
	454	[4587]	CALL     	R46 1 1 ; R46()
	455	[4587]	JMP      	477 ; PC := 477
	456	[4588]	SELF     	R46 R24 K3 ; R47 := R24; R46 := R24[0xf2deaf69]
	457	[4588]	GETGLOBAL	R48 K86 ; R48 := 0x7713b3ef
	458	[4588]	CALL     	R46 3 2 ; R46 := R46(R47,R48)
	459	[4588]	TEST     	R46 0 ; if not R46 then PC := 477
	460	[4588]	JMP      	477 ; PC := 477
	461	[4589]	GETGLOBAL	R46 K22 ; R46 := _T
	462	[4589]	SETTABLE 	R46 K87 R24 ; R46["LightDeco"] := R24
	463	[4590]	SELF     	R46 R24 K3 ; R47 := R24; R46 := R24[0xf2deaf69]
	464	[4590]	GETGLOBAL	R48 K88 ; R48 := 0x5d855734
	465	[4590]	CALL     	R46 3 2 ; R46 := R46(R47,R48)
	466	[4590]	TEST     	R46 0 ; if not R46 then PC := 473
	467	[4590]	JMP      	473 ; PC := 473
	468	[4591]	GETGLOBAL	R46 K22 ; R46 := _T
	469	[4591]	SELF     	R47 R24 K90 ; R48 := R24; R47 := R24[0x801404d2]
	470	[4591]	CALL     	R47 2 2 ; R47 := R47(R48)
	471	[4591]	SETTABLE 	R46 K89 R47 ; R46["TextLightMovie"] := R47
	472	[4591]	JMP      	475 ; PC := 475
	473	[4593]	GETGLOBAL	R46 K22 ; R46 := _T
	474	[4593]	SETTABLE 	R46 K89 K24 ; R46["TextLightMovie"] := nil
	475	[4595]	GETUPVAL 	R46 U6 ; R46 := U6
	476	[4595]	CALL     	R46 1 1 ; R46()
	477	[4598]	GETGLOBAL	R46 K22 ; R46 := _T
	478	[4598]	SETTABLE 	R46 K80 K91 ; R46["PlacingCustomizableDeco"] := false
	479	[4601]	GETUPVAL 	R46 U7 ; R46 := U7
	480	[4601]	EQ       	0 R14 R46 ; if R14 ~= R46 then PC := 512
	481	[4601]	JMP      	512 ; PC := 512
	482	[4603]	SELF     	R46 R24 K92 ; R47 := R24; R46 := R24[0x64930a5f]
	483	[4603]	MOVE     	R48 R4 ; R48 := R4
	484	[4603]	MOVE     	R49 R5 ; R49 := R5
	485	[4603]	MOVE     	R50 R6 ; R50 := R6
	486	[4603]	CALL     	R46 5 1 ; R46(R47,R48,R49,R50)
	487	[4604]	GETGLOBAL	R46 K1 ; R46 := 0x89326c93
	488	[4604]	SELF     	R46 R46 K93 ; R47 := R46; R46 := R46[0x78094005]
	489	[4604]	MOVE     	R48 R5 ; R48 := R5
	490	[4604]	MOVE     	R49 R4 ; R49 := R4
	491	[4604]	MOVE     	R50 R6 ; R50 := R6
	492	[4604]	GETUPVAL 	R51 U8 ; R51 := U8
	493	[4604]	OP_LOADBOOL	R52 0 0 ; R52 := false
	494	[4604]	OP_LOADBOOL	R53 1 0 ; R53 := true
	495	[4604]	OP_LOADBOOL	R54 0 0 ; R54 := false
	496	[4604]	CALL     	R46 9 2 ; R46 := R46(R47,R48,R49,R50,R51,R52,R53,R54)
	497	[4605]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	498	[4605]	MOVE     	R48 R46 ; R48 := R46
	499	[4605]	CALL     	R47 2 2 ; R47 := R47(R48)
	500	[4605]	TEST     	R47 1 ; if R47 then PC := 512
	501	[4605]	JMP      	512 ; PC := 512
	502	[4606]	GETGLOBAL	R47 K22 ; R47 := _T
	503	[4606]	GETTABLE 	R47 R47 K94 ; R47 := R47["ShipDecosInVignette"]
	504	[4606]	EQ       	0 R47 K24 ; if R47 ~= nil then PC := 509
	505	[4606]	JMP      	509 ; PC := 509
	506	[4607]	GETGLOBAL	R47 K22 ; R47 := _T
	507	[4607]	NEWTABLE 	R48 0 0 ; R48 := {}
	508	[4607]	SETTABLE 	R47 K94 R48 ; R47["ShipDecosInVignette"] := R48
	509	[4610]	GETGLOBAL	R47 K22 ; R47 := _T
	510	[4610]	GETTABLE 	R47 R47 K94 ; R47 := R47["ShipDecosInVignette"]
	511	[4610]	SETTABLE 	R47 R22 R24 ; R47[R22] := R24
	512	[4614]	ADD      	R3 R3 K26 ; R3 := R3 + 1.000000
	513	[4616]	LE       	0 R2 R3 ; if R2 > R3 then PC := 516
	514	[4616]	JMP      	516 ; PC := 516
	515	[4617]	JMP      	517 ; PC := 517
	516	[4451]	FORLOOP  	R17 73 ; R17 += R19; if R17 <= R18 then begin PC := 73; R20 := R17 end
	517	[4624]	LOADK    	R47 := 1.000000
	518	[4624]	LEN      	R48 R16 ; R48 := # R16
	519	[4624]	LOADK    	R49 := 1.000000
	520	[4624]	FORPREP  	R47 550 ; R47 -= R49; PC := 550
	521	[4625]	GETTABLE 	R51 R16 R50 ; R51 := R16[R50]
	522	[4626]	GETTABLE 	R52 R51 K26 ; R52 := R51[1.000000]
	523	[4626]	SELF     	R52 R52 K29 ; R53 := R52; R52 := R52[0x450ef75f]
	524	[4626]	CALL     	R52 2 2 ; R52 := R52(R53)
	525	[4627]	GETGLOBAL	R53 K0 ; R53 := 0x7b998233
	526	[4627]	GETTABLE 	R54 R51 K95 ; R54 := R51[2.000000]
	527	[4627]	CALL     	R53 2 2 ; R53 := R53(R54)
	528	[4627]	TEST     	R53 1 ; if R53 then PC := 550
	529	[4627]	JMP      	550 ; PC := 550
	530	[4628]	GETGLOBAL	R53 K22 ; R53 := _T
	531	[4628]	GETTABLE 	R53 R53 K23 ; R53 := R53["ShipDecos"]
	532	[4628]	GETTABLE 	R53 R53 R52 ; R53 := R53[R52]
	533	[4629]	GETGLOBAL	R54 K0 ; R54 := 0x7b998233
	534	[4629]	MOVE     	R55 R53 ; R55 := R53
	535	[4629]	CALL     	R54 2 2 ; R54 := R54(R55)
	536	[4629]	TEST     	R54 1 ; if R54 then PC := 550
	537	[4629]	JMP      	550 ; PC := 550
	538	[4630]	GETTABLE 	R54 R51 K95 ; R54 := R51[2.000000]
	539	[4630]	SELF     	R54 R54 K46 ; R55 := R54; R54 := R54[0xe28aa928]
	540	[4630]	GETTABLE 	R56 R51 K26 ; R56 := R51[1.000000]
	541	[4630]	GETTABLE 	R56 R56 K35 ; R56 := R56["pos"]
	542	[4630]	GETTABLE 	R57 R51 K26 ; R57 := R51[1.000000]
	543	[4630]	GETTABLE 	R57 R57 K36 ; R57 := R57["rot"]
	544	[4630]	CALL     	R54 4 1 ; R54(R55,R56,R57)
	545	[4631]	GETTABLE 	R54 R51 K95 ; R54 := R51[2.000000]
	546	[4631]	SELF     	R54 R54 K45 ; R55 := R54; R54 := R54[0x7a4ee345]
	547	[4631]	MOVE     	R56 R53 ; R56 := R53
	548	[4631]	OP_LOADBOOL	R57 1 0 ; R57 := true
	549	[4631]	CALL     	R54 4 1 ; R54(R55,R56,R57)
	550	[4624]	FORLOOP  	R47 521 ; R47 += R49; if R47 <= R48 then begin PC := 521; R50 := R47 end
	551	[4635]	LOADNIL  	R16 R16 ; R16 := nil
	552	[4637]	GETTABLE 	R54 R0 K15 ; R54 := R0["LoaderProgress"]
	553	[4637]	GETTABLE 	R54 R54 K20 ; R54 := R54["DecoCreationIndex"]
	554	[4637]	LT       	0 R15 R54 ; if R15 >= R54 then PC := 568
	555	[4637]	JMP      	568 ; PC := 568
	556	[4638]	GETTABLE 	R54 R0 K15 ; R54 := R0["LoaderProgress"]
	557	[4638]	SETTABLE 	R54 K20 K26 ; R54["DecoCreationIndex"] := 1.000000
	558	[4639]	GETTABLE 	R54 R0 K15 ; R54 := R0["LoaderProgress"]
	559	[4639]	GETTABLE 	R54 R54 K16 ; R54 := R54["RoomCreationIndex"]
	560	[4639]	LEN      	R55 R8 ; R55 := # R8
	561	[4639]	LT       	0 R54 R55 ; if R54 >= R55 then PC := 568
	562	[4639]	JMP      	568 ; PC := 568
	563	[4640]	GETTABLE 	R54 R0 K15 ; R54 := R0["LoaderProgress"]
	564	[4640]	GETTABLE 	R55 R0 K15 ; R55 := R0["LoaderProgress"]
	565	[4640]	GETTABLE 	R55 R55 K16 ; R55 := R55["RoomCreationIndex"]
	566	[4640]	ADD      	R55 R55 K26 ; R55 := R55 + 1.000000
	567	[4640]	SETTABLE 	R54 K16 R55 ; R54["RoomCreationIndex"] := R55
	568	[4644]	LE       	0 R2 R3 ; if R2 > R3 then PC := 571
	569	[4644]	JMP      	571 ; PC := 571
	570	[4645]	JMP      	572 ; PC := 572
	571	[4444]	FORLOOP  	R9 60 ; R9 += R11; if R9 <= R10 then begin PC := 60; R12 := R9 end
	572	[4649]	EQ       	0 R3 K54 ; if R3 ~= 0.000000 then PC := 615
	573	[4649]	JMP      	615 ; PC := 615
	574	[4650]	GETTABLE 	R54 R0 K15 ; R54 := R0["LoaderProgress"]
	575	[4650]	GETTABLE 	R54 R54 K96 ; R54 := R54["LastLoad"]
	576	[4650]	TEST     	R54 0 ; if not R54 then PC := 611
	577	[4650]	JMP      	611 ; PC := 611
	578	[4651]	GETUPVAL 	R54 U9 ; R54 := U9
	579	[4651]	GETTABLE 	R54 R54 K97 ; R54 := R54[0x8664c443]
	580	[4651]	LOADNIL  	R55 R55 ; R55 := nil
	581	[4651]	CALL     	R54 2 1 ; R54(R55)
	582	[4652]	GETGLOBAL	R54 K0 ; R54 := 0x7b998233
	583	[4652]	GETGLOBAL	R55 K22 ; R55 := _T
	584	[4652]	GETTABLE 	R55 R55 K98 ; R55 := R55["ActionFigureLoadOutLoader"]
	585	[4652]	CALL     	R54 2 2 ; R54 := R54(R55)
	586	[4652]	TEST     	R54 1 ; if R54 then PC := 600
	587	[4652]	JMP      	600 ; PC := 600
	588	[4653]	GETGLOBAL	R54 K22 ; R54 := _T
	589	[4653]	GETTABLE 	R54 R54 K98 ; R54 := R54["ActionFigureLoadOutLoader"]
	590	[4653]	SELF     	R54 R54 K99 ; R55 := R54; R54 := R54[0x382439cd]
	591	[4653]	GETUPVAL 	R56 U3 ; R56 := U3
	592	[4653]	GETTABLE 	R56 R56 K66 ; R56 := R56["Figures"]
	593	[4653]	GETUPVAL 	R57 U3 ; R57 := U3
	594	[4653]	GETTABLE 	R57 R57 K68 ; R57 := R57["PresetInfos"]
	595	[4653]	GETUPVAL 	R58 U3 ; R58 := U3
	596	[4653]	GETTABLE 	R58 R58 K75 ; R58 := R58["EnemyFigures"]
	597	[4653]	GETUPVAL 	R59 U3 ; R59 := U3
	598	[4653]	GETTABLE 	R59 R59 K74 ; R59 := R59["EnemyTypes"]
	599	[4653]	CALL     	R54 6 1 ; R54(R55,R56,R57,R58,R59)
	600	[4656]	SETTABLE 	R0 K100 K91 ; R0["IsLoading"] := false
	601	[4657]	GETUPVAL 	R54 U3 ; R54 := U3
	602	[4657]	NEWTABLE 	R55 0 0 ; R55 := {}
	603	[4657]	SETTABLE 	R54 K66 R55 ; R54["Figures"] := R55
	604	[4658]	GETUPVAL 	R54 U3 ; R54 := U3
	605	[4658]	NEWTABLE 	R55 0 0 ; R55 := {}
	606	[4658]	SETTABLE 	R54 K68 R55 ; R54["PresetInfos"] := R55
	607	[4659]	GETUPVAL 	R54 U3 ; R54 := U3
	608	[4659]	NEWTABLE 	R55 0 0 ; R55 := {}
	609	[4659]	SETTABLE 	R54 K67 R55 ; R54["PresetIds"] := R55
	610	[4659]	JMP      	615 ; PC := 615
	611	[4661]	GETUPVAL 	R54 U10 ; R54 := U10
	612	[4661]	LOADNIL  	R55 R55 ; R55 := nil
	613	[4661]	MOVE     	R56 R0 ; R56 := R0
	614	[4661]	CALL     	R54 3 1 ; R54(R55,R56)
	615	[4665]	RETURN   	R0 1 ; return 

function #113 <?:4667,4715> (139 instructions, 556 bytes at 000001609686B090)
0 params, 22 slots, 3 upvalues, 0 locals, 29 constants, 0 functions
	1	[4668]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4668]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[4668]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4668]	TEST     	R0 1 ; if R0 then PC := 16
	5	[4668]	JMP      	16 ; PC := 16
	6	[4668]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[4668]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	8	[4668]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[4668]	TEST     	R0 1 ; if R0 then PC := 16
	10	[4668]	JMP      	16 ; PC := 16
	11	[4668]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	12	[4668]	GETGLOBAL	R1 K3 ; R1 := 0x89326c93
	13	[4668]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[4668]	TEST     	R0 0 ; if not R0 then PC := 17
	15	[4668]	JMP      	17 ; PC := 17
	16	[4669]	RETURN   	R0 1 ; return 
	17	[4672]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	18	[4672]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xcd57f819]
	19	[4672]	GETGLOBAL	R2 K3 ; R2 := 0x89326c93
	20	[4672]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x18d05d30]
	21	[4672]	CALL     	R2 2 0 ; R2,... := R2(R3)
	22	[4672]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	23	[4673]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	24	[4673]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xa1c390fe]
	25	[4673]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[4674]	GETTABLE 	R2 R0 K7 ; R2 := R0["mVignetteFish"]
	27	[4675]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	28	[4675]	MOVE     	R4 R2 ; R4 := R2
	29	[4675]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[4675]	TEST     	R3 0 ; if not R3 then PC := 33
	31	[4675]	JMP      	33 ; PC := 33
	32	[4676]	RETURN   	R0 1 ; return 
	33	[4679]	GETUPVAL 	R3 U0 ; R3 := U0
	34	[4679]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x06d055f9]
	35	[4679]	GETGLOBAL	R4 K9 ; R4 := _T
	36	[4679]	GETTABLE 	R4 R4 K10 ; R4 := R4["QueueFishTankPopulation"]
	37	[4679]	EQ       	1 R4 K11 ; if R4 == nil then PC := 40
	38	[4679]	JMP      	40 ; PC := 40
	39	[4679]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 40
	40	[4679]	OP_LOADBOOL	R4 1 0 ; R4 := true
	41	[4679]	LOADK    	R5 := 0.000000
	42	[4679]	LOADK    	R6 := 1.000000
	43	[4679]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	44	[4681]	MOVE     	R4 R3 ; R4 := R3
	45	[4681]	LOADK    	R5 := 1.000000
	46	[4681]	LOADK    	R6 := 1.000000
	47	[4681]	FORPREP  	R4 138 ; R4 -= R6; PC := 138
	48	[4682]	EQ       	0 R7 K12 ; if R7 ~= 1.000000 then PC := 55
	49	[4682]	JMP      	55 ; PC := 55
	50	[4682]	GETUPVAL 	R8 U1 ; R8 := U1
	51	[4682]	GETTABLE 	R8 R8 K13 ; R8 := R8["IsFishTank"]
	52	[4682]	TEST     	R8 1 ; if R8 then PC := 55
	53	[4682]	JMP      	55 ; PC := 55
	54	[4684]	JMP      	139 ; PC := 139
	55	[4687]	GETGLOBAL	R8 K3 ; R8 := 0x89326c93
	56	[4687]	SELF     	R8 R8 K14 ; R9 := R8; R8 := R8[0x46a0ebf5]
	57	[4687]	GETGLOBAL	R10 K15 ; R10 := 0x0469f296
	58	[4687]	LOADK    	R11 K16 ; R11 := "FishPaths"
	59	[4687]	GETGLOBAL	R12 K17 ; R12 := 0x64fb1586
	60	[4687]	MOVE     	R13 R7 ; R13 := R7
	61	[4687]	CALL     	R12 2 2 ; R12 := R12(R13)
	62	[4687]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	63	[4687]	CALL     	R10 2 0 ; R10,... := R10(R11)
	64	[4687]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	65	[4688]	EQ       	0 R7 K12 ; if R7 ~= 1.000000 then PC := 75
	66	[4688]	JMP      	75 ; PC := 75
	67	[4688]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	68	[4688]	MOVE     	R10 R8 ; R10 := R8
	69	[4688]	CALL     	R9 2 2 ; R9 := R9(R10)
	70	[4688]	TEST     	R9 0 ; if not R9 then PC := 75
	71	[4688]	JMP      	75 ; PC := 75
	72	[4690]	GETGLOBAL	R9 K9 ; R9 := _T
	73	[4690]	SETTABLE 	R9 K10 K18 ; R9["QueueFishTankPopulation"] := true
	74	[4691]	RETURN   	R0 1 ; return 
	75	[4694]	GETGLOBAL	R9 K9 ; R9 := _T
	76	[4694]	SETTABLE 	R9 K10 K19 ; R9["QueueFishTankPopulation"] := false
	77	[4696]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	78	[4696]	MOVE     	R10 R1 ; R10 := R1
	79	[4696]	CALL     	R9 2 2 ; R9 := R9(R10)
	80	[4696]	TEST     	R9 1 ; if R9 then PC := 138
	81	[4696]	JMP      	138 ; PC := 138
	82	[4696]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	83	[4696]	MOVE     	R10 R8 ; R10 := R8
	84	[4696]	CALL     	R9 2 2 ; R9 := R9(R10)
	85	[4696]	TEST     	R9 1 ; if R9 then PC := 138
	86	[4696]	JMP      	138 ; PC := 138
	87	[4697]	LOADK    	R9 := 1.000000
	88	[4697]	LOADK    	R10 := 10.000000
	89	[4697]	LOADK    	R11 := 1.000000
	90	[4697]	FORPREP  	R9 137 ; R9 -= R11; PC := 137
	91	[4698]	MUL      	R13 R7 K20 ; R13 := R7 * 10.000000
	92	[4698]	ADD      	R13 R12 R13 ; R13 := R12 + R13
	93	[4699]	GETTABLE 	R14 R2 R13 ; R14 := R2[R13]
	94	[4700]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	95	[4700]	MOVE     	R16 R14 ; R16 := R14
	96	[4700]	CALL     	R15 2 2 ; R15 := R15(R16)
	97	[4700]	TEST     	R15 1 ; if R15 then PC := 137
	98	[4700]	JMP      	137 ; PC := 137
	99	[4701]	SELF     	R15 R1 K21 ; R16 := R1; R15 := R1[0x105074fb]
	100	[4701]	MOVE     	R17 R14 ; R17 := R14
	101	[4701]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	102	[4702]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	103	[4702]	MOVE     	R17 R15 ; R17 := R15
	104	[4702]	CALL     	R16 2 2 ; R16 := R16(R17)
	105	[4702]	TEST     	R16 1 ; if R16 then PC := 137
	106	[4702]	JMP      	137 ; PC := 137
	107	[4703]	GETUPVAL 	R16 U2 ; R16 := U2
	108	[4703]	GETTABLE 	R16 R16 K22 ; R16 := R16[0x7791a519]
	109	[4703]	MOVE     	R17 R15 ; R17 := R15
	110	[4703]	GETGLOBAL	R18 K23 ; R18 := 0xce64b481
	111	[4703]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	112	[4704]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	113	[4704]	MOVE     	R18 R16 ; R18 := R16
	114	[4704]	CALL     	R17 2 2 ; R17 := R17(R18)
	115	[4704]	TEST     	R17 1 ; if R17 then PC := 137
	116	[4704]	JMP      	137 ; PC := 137
	117	[4705]	GETGLOBAL	R17 K15 ; R17 := 0x0469f296
	118	[4705]	LOADK    	R18 K24 ; R18 := "GAME_C1_FISH"
	119	[4705]	GETGLOBAL	R19 K17 ; R19 := 0x64fb1586
	120	[4705]	MOVE     	R20 R12 ; R20 := R12
	121	[4705]	CALL     	R19 2 2 ; R19 := R19(R20)
	122	[4705]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	123	[4705]	CALL     	R17 2 2 ; R17 := R17(R18)
	124	[4706]	SELF     	R18 R8 K25 ; R19 := R8; R18 := R8[0x47901f07]
	125	[4706]	GETGLOBAL	R20 K26 ; R20 := 0xb009bbc6
	126	[4706]	MOVE     	R21 R16 ; R21 := R16
	127	[4706]	CALL     	R20 2 2 ; R20 := R20(R21)
	128	[4706]	MOVE     	R21 R17 ; R21 := R17
	129	[4706]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	130	[4707]	SELF     	R19 R18 K27 ; R20 := R18; R19 := R18[0xe92524c3]
	131	[4707]	CALL     	R19 2 1 ; R19(R20)
	132	[4708]	GETUPVAL 	R19 U2 ; R19 := U2
	133	[4708]	GETTABLE 	R19 R19 K28 ; R19 := R19[0x57d66842]
	134	[4708]	MOVE     	R20 R18 ; R20 := R18
	135	[4708]	MOVE     	R21 R15 ; R21 := R15
	136	[4708]	CALL     	R19 3 1 ; R19(R20,R21)
	137	[4697]	FORLOOP  	R9 91 ; R9 += R11; if R9 <= R10 then begin PC := 91; R12 := R9 end
	138	[4681]	FORLOOP  	R4 48 ; R4 += R6; if R4 <= R5 then begin PC := 48; R7 := R4 end
	139	[4715]	RETURN   	R0 1 ; return 

function #114 <?:4717,4721> (5 instructions, 20 bytes at 000001609686B7C0)
2 params, 3 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[4718]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4718]	CALL     	R2 1 1 ; R2()
	3	[4720]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[4720]	SETTABLE 	R2 K0 K1 ; R2["Loader"] := nil
	5	[4721]	RETURN   	R0 1 ; return 

function #115 <?:4723,4726> (1 instruction, 4 bytes at 000001609686B8E0)
2 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[4726]	RETURN   	R0 1 ; return 

function #116 <?:4728,4747> (57 instructions, 228 bytes at 000001609686B9B0)
0 params, 9 slots, 2 upvalues, 0 locals, 13 constants, 0 functions
	1	[4729]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4729]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[4729]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4729]	TEST     	R0 1 ; if R0 then PC := 57
	5	[4729]	JMP      	57 ; PC := 57
	6	[4729]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[4729]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	8	[4729]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[4729]	TEST     	R0 1 ; if R0 then PC := 57
	10	[4729]	JMP      	57 ; PC := 57
	11	[4730]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	12	[4730]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xcd57f819]
	13	[4730]	GETGLOBAL	R2 K2 ; R2 := 0x89326c93
	14	[4730]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x18d05d30]
	15	[4730]	CALL     	R2 2 0 ; R2,... := R2(R3)
	16	[4730]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	17	[4731]	GETTABLE 	R1 R0 K5 ; R1 := R0["mVignette"]
	18	[4733]	GETGLOBAL	R2 K2 ; R2 := 0x89326c93
	19	[4733]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x18d05d30]
	20	[4733]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[4733]	TEST     	R2 0 ; if not R2 then PC := 39
	22	[4733]	JMP      	39 ; PC := 39
	23	[4733]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	24	[4733]	MOVE     	R3 R1 ; R3 := R1
	25	[4733]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[4733]	TEST     	R2 1 ; if R2 then PC := 39
	27	[4733]	JMP      	39 ; PC := 39
	28	[4734]	GETGLOBAL	R2 K6 ; R2 := 0xb009bbc6
	29	[4734]	MOVE     	R3 R1 ; R3 := R1
	30	[4734]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[4734]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xafcbe068]
	32	[4734]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[4735]	GETUPVAL 	R3 U0 ; R3 := U0
	34	[4735]	GETTABLE 	R3 R3 K8 ; R3 := R3[0xf63bfb54]
	35	[4735]	GETGLOBAL	R4 K9 ; R4 := 0xae91e43b
	36	[4735]	MOVE     	R5 R2 ; R5 := R2
	37	[4735]	CALL     	R3 3 1 ; R3(R4,R5)
	38	[4735]	JMP      	41 ; PC := 41
	39	[4737]	GETUPVAL 	R3 U1 ; R3 := U1
	40	[4737]	CALL     	R3 1 1 ; R3()
	41	[4740]	GETTABLE 	R3 R0 K10 ; R3 := R0["mWallpaper"]
	42	[4741]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	43	[4741]	MOVE     	R5 R3 ; R5 := R3
	44	[4741]	CALL     	R4 2 2 ; R4 := R4(R5)
	45	[4741]	TEST     	R4 1 ; if R4 then PC := 57
	46	[4741]	JMP      	57 ; PC := 57
	47	[4742]	GETGLOBAL	R4 K6 ; R4 := 0xb009bbc6
	48	[4742]	MOVE     	R5 R3 ; R5 := R3
	49	[4742]	CALL     	R4 2 2 ; R4 := R4(R5)
	50	[4744]	GETUPVAL 	R5 U0 ; R5 := U0
	51	[4744]	GETTABLE 	R5 R5 K11 ; R5 := R5[0x81284a57]
	52	[4744]	GETGLOBAL	R6 K6 ; R6 := 0xb009bbc6
	53	[4744]	SELF     	R7 R4 K12 ; R8 := R4; R7 := R4[0xf7abfecf]
	54	[4744]	CALL     	R7 2 0 ; R7,... := R7(R8)
	55	[4744]	CALL     	R6 0 0 ; R6,... := R6(R7,...)
	56	[4744]	CALL     	R5 0 1 ; R5(R6,...)
	57	[4747]	RETURN   	R0 1 ; return 

function #117 <?:4749,4753> (17 instructions, 68 bytes at 000001609686BD20)
0 params, 7 slots, 2 upvalues, 0 locals, 6 constants, 0 functions
	1	[4750]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4750]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[4750]	GETTABLE 	R1 R1 K1 ; R1 := R1["SoundInst"]
	4	[4750]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[4750]	TEST     	R0 1 ; if R0 then PC := 17
	6	[4750]	JMP      	17 ; PC := 17
	7	[4751]	GETUPVAL 	R0 U1 ; R0 := U1
	8	[4751]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x9da884af]
	9	[4751]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[4751]	GETTABLE 	R2 R2 K1 ; R2 := R2["SoundInst"]
	11	[4751]	GETGLOBAL	R3 K3 ; R3 := 0x89326c93
	12	[4751]	OP_LOADBOOL	R4 1 0 ; R4 := true
	13	[4751]	GETGLOBAL	R5 K4 ; R5 := _T
	14	[4751]	GETTABLE 	R5 R5 K5 ; R5 := R5["LypSyncDeco"]
	15	[4751]	OP_LOADBOOL	R6 0 0 ; R6 := false
	16	[4751]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	17	[4753]	RETURN   	R0 1 ; return 

function #118 <?:4755,4763> (37 instructions, 148 bytes at 000001609686BEE0)
0 params, 4 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[4756]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[4756]	GETTABLE 	R0 R0 K1 ; R0 := R0["FortressLocation"]
	3	[4756]	EQ       	1 R0 K2 ; if R0 == nil then PC := 37
	4	[4756]	JMP      	37 ; PC := 37
	5	[4756]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[4756]	GETTABLE 	R0 R0 K1 ; R0 := R0["FortressLocation"]
	7	[4756]	GETTABLE 	R0 R0 K3 ; R0 := R0["Initialized"]
	8	[4756]	EQ       	0 R0 K4 ; if R0 ~= true then PC := 37
	9	[4756]	JMP      	37 ; PC := 37
	10	[4757]	GETGLOBAL	R0 K0 ; R0 := _T
	11	[4757]	GETTABLE 	R0 R0 K1 ; R0 := R0["FortressLocation"]
	12	[4757]	GETTABLE 	R0 R0 K5 ; R0 := R0["Progress"]
	13	[4757]	GETGLOBAL	R1 K6 ; R1 := 0xb693b6c1
	14	[4757]	CALL     	R1 1 2 ; R1 := R1()
	15	[4757]	GETGLOBAL	R2 K0 ; R2 := _T
	16	[4757]	GETTABLE 	R2 R2 K1 ; R2 := R2["FortressLocation"]
	17	[4757]	GETTABLE 	R2 R2 K7 ; R2 := R2["Velocity"]
	18	[4757]	MUL      	R1 R1 R2 ; R1 := R1 * R2
	19	[4757]	ADD      	R0 R0 R1 ; R0 := R0 + R1
	20	[4758]	LE       	0 K8 R0 ; if 1.000000 > R0 then PC := 33
	21	[4758]	JMP      	33 ; PC := 33
	22	[4759]	GETGLOBAL	R1 K0 ; R1 := _T
	23	[4759]	GETTABLE 	R1 R1 K1 ; R1 := R1["FortressLocation"]
	24	[4759]	GETGLOBAL	R2 K0 ; R2 := _T
	25	[4759]	GETTABLE 	R2 R2 K1 ; R2 := R2["FortressLocation"]
	26	[4759]	GETTABLE 	R2 R2 K9 ; R2 := R2["SplineIndex"]
	27	[4759]	GETGLOBAL	R3 K0 ; R3 := _T
	28	[4759]	GETTABLE 	R3 R3 K1 ; R3 := R3["FortressLocation"]
	29	[4759]	GETTABLE 	R3 R3 K10 ; R3 := R3["MaxSplines"]
	30	[4759]	MOD      	R2 R2 R3 ; R2 := R2 % R3
	31	[4759]	ADD      	R2 K8 R2 ; R2 := 1.000000 + R2
	32	[4759]	SETTABLE 	R1 K9 R2 ; R1["SplineIndex"] := R2
	33	[4761]	GETGLOBAL	R1 K0 ; R1 := _T
	34	[4761]	GETTABLE 	R1 R1 K1 ; R1 := R1["FortressLocation"]
	35	[4761]	MOD      	R2 R0 K8 ; R2 := R0 % 1.000000
	36	[4761]	SETTABLE 	R1 K5 R2 ; R1["Progress"] := R2
	37	[4763]	RETURN   	R0 1 ; return 

function #119 <?:4765,4813> (160 instructions, 640 bytes at 000001609686C250)
4 params, 18 slots, 1 upvalue, 0 locals, 30 constants, 0 functions
	1	[4766]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[4766]	MOVE     	R5 R0 ; R5 := R0
	3	[4766]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[4766]	TEST     	R4 1 ; if R4 then PC := 160
	5	[4766]	JMP      	160 ; PC := 160
	6	[4766]	EQ       	1 R1 K1 ; if R1 == nil then PC := 160
	7	[4766]	JMP      	160 ; PC := 160
	8	[4767]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	9	[4767]	GETGLOBAL	R5 K2 ; R5 := _T
	10	[4767]	GETTABLE 	R5 R5 K3 ; R5 := R5["FavouriteLoadoutLoader"]
	11	[4767]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[4767]	TEST     	R4 0 ; if not R4 then PC := 17
	13	[4767]	JMP      	17 ; PC := 17
	14	[4768]	GETGLOBAL	R4 K2 ; R4 := _T
	15	[4768]	NEWTABLE 	R5 0 0 ; R5 := {}
	16	[4768]	SETTABLE 	R4 K3 R5 ; R4["FavouriteLoadoutLoader"] := R5
	17	[4770]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	18	[4770]	GETGLOBAL	R5 K2 ; R5 := _T
	19	[4770]	GETTABLE 	R5 R5 K4 ; R5 := R5["FavWarframeAvatar"]
	20	[4770]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[4770]	TEST     	R4 0 ; if not R4 then PC := 26
	22	[4770]	JMP      	26 ; PC := 26
	23	[4771]	GETGLOBAL	R4 K2 ; R4 := _T
	24	[4771]	NEWTABLE 	R5 0 0 ; R5 := {}
	25	[4771]	SETTABLE 	R4 K4 R5 ; R4["FavWarframeAvatar"] := R5
	26	[4774]	GETGLOBAL	R4 K5 ; R4 := 0x64fb1586
	27	[4774]	MOVE     	R5 R3 ; R5 := R3
	28	[4774]	CALL     	R4 2 2 ; R4 := R4(R5)
	29	[4775]	GETGLOBAL	R5 K6 ; R5 := 0x89326c93
	30	[4775]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x46a0ebf5]
	31	[4775]	MOVE     	R7 R3 ; R7 := R3
	32	[4775]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	33	[4776]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	34	[4776]	MOVE     	R7 R5 ; R7 := R5
	35	[4776]	CALL     	R6 2 2 ; R6 := R6(R7)
	36	[4776]	TEST     	R6 1 ; if R6 then PC := 97
	37	[4776]	JMP      	97 ; PC := 97
	38	[4776]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	39	[4776]	GETGLOBAL	R7 K2 ; R7 := _T
	40	[4776]	GETTABLE 	R7 R7 K4 ; R7 := R7["FavWarframeAvatar"]
	41	[4776]	GETTABLE 	R7 R7 R4 ; R7 := R7[R4]
	42	[4776]	CALL     	R6 2 2 ; R6 := R6(R7)
	43	[4776]	TEST     	R6 0 ; if not R6 then PC := 97
	44	[4776]	JMP      	97 ; PC := 97
	45	[4777]	LOADK    	R6 := 0.000000
	46	[4778]	GETGLOBAL	R7 K9 ; R7 := 0x0469f296
	47	[4778]	LOADK    	R8 K10 ; R8 := "FavouriteWarframeEntity"
	48	[4778]	CALL     	R7 2 2 ; R7 := R7(R8)
	49	[4778]	EQ       	1 R4 R7 ; if R4 == R7 then PC := 58
	50	[4778]	JMP      	58 ; PC := 58
	51	[4779]	LOADK    	R6 := 3.000000
	52	[4780]	GETGLOBAL	R7 K6 ; R7 := 0x89326c93
	53	[4780]	SELF     	R7 R7 K11 ; R8 := R7; R7 := R7[0x18d05d30]
	54	[4780]	CALL     	R7 2 2 ; R7 := R7(R8)
	55	[4780]	TEST     	R7 1 ; if R7 then PC := 58
	56	[4780]	JMP      	58 ; PC := 58
	57	[4781]	LOADK    	R6 := 4.000000
	58	[4785]	GETGLOBAL	R7 K2 ; R7 := _T
	59	[4785]	GETTABLE 	R7 R7 K4 ; R7 := R7["FavWarframeAvatar"]
	60	[4785]	GETGLOBAL	R8 K6 ; R8 := 0x89326c93
	61	[4785]	SELF     	R8 R8 K12 ; R9 := R8; R8 := R8[0x05909209]
	62	[4785]	GETGLOBAL	R10 K13 ; R10 := 0xf5d69a4f
	63	[4785]	SELF     	R11 R5 K14 ; R12 := R5; R11 := R5[0xd1586535]
	64	[4785]	CALL     	R11 2 2 ; R11 := R11(R12)
	65	[4785]	SELF     	R12 R5 K15 ; R13 := R5; R12 := R5[0xcb3851b8]
	66	[4785]	CALL     	R12 2 2 ; R12 := R12(R13)
	67	[4785]	LOADNIL  	R13 R14 ; R13 := R14 := nil
	68	[4785]	MOVE     	R15 R6 ; R15 := R6
	69	[4785]	CALL     	R8 8 2 ; R8 := R8(R9,R10,R11,R12,R13,R14,R15)
	70	[4785]	SETTABLE 	R7 R4 R8 ; R7[R4] := R8
	71	[4786]	GETGLOBAL	R7 K2 ; R7 := _T
	72	[4786]	GETTABLE 	R7 R7 K4 ; R7 := R7["FavWarframeAvatar"]
	73	[4786]	GETTABLE 	R7 R7 R4 ; R7 := R7[R4]
	74	[4786]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x589ef1c1]
	75	[4786]	SELF     	R9 R5 K14 ; R10 := R5; R9 := R5[0xd1586535]
	76	[4786]	CALL     	R9 2 2 ; R9 := R9(R10)
	77	[4786]	SELF     	R10 R5 K15 ; R11 := R5; R10 := R5[0xcb3851b8]
	78	[4786]	CALL     	R10 2 0 ; R10,... := R10(R11)
	79	[4786]	CALL     	R7 0 1 ; R7(R8,...)
	80	[4787]	GETGLOBAL	R7 K2 ; R7 := _T
	81	[4787]	GETTABLE 	R7 R7 K4 ; R7 := R7["FavWarframeAvatar"]
	82	[4787]	GETTABLE 	R7 R7 R4 ; R7 := R7[R4]
	83	[4787]	SELF     	R7 R7 K17 ; R8 := R7; R7 := R7[0x89c6dbf7]
	84	[4787]	SELF     	R9 R5 K15 ; R10 := R5; R9 := R5[0xcb3851b8]
	85	[4787]	CALL     	R9 2 0 ; R9,... := R9(R10)
	86	[4787]	CALL     	R7 0 1 ; R7(R8,...)
	87	[4788]	GETGLOBAL	R7 K2 ; R7 := _T
	88	[4788]	GETTABLE 	R7 R7 K4 ; R7 := R7["FavWarframeAvatar"]
	89	[4788]	GETTABLE 	R7 R7 R4 ; R7 := R7[R4]
	90	[4788]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0x8decb783]
	91	[4788]	OP_LOADBOOL	R9 0 0 ; R9 := false
	92	[4788]	CALL     	R7 3 1 ; R7(R8,R9)
	93	[4789]	SELF     	R7 R5 K19 ; R8 := R5; R7 := R5[0x768274d6]
	94	[4789]	OP_LOADBOOL	R9 0 0 ; R9 := false
	95	[4789]	OP_LOADBOOL	R10 1 0 ; R10 := true
	96	[4789]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	97	[4792]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	98	[4792]	GETGLOBAL	R8 K2 ; R8 := _T
	99	[4792]	GETTABLE 	R8 R8 K4 ; R8 := R8["FavWarframeAvatar"]
	100	[4792]	GETTABLE 	R8 R8 R4 ; R8 := R8[R4]
	101	[4792]	CALL     	R7 2 2 ; R7 := R7(R8)
	102	[4792]	TEST     	R7 0 ; if not R7 then PC := 105
	103	[4792]	JMP      	105 ; PC := 105
	104	[4793]	RETURN   	R0 1 ; return 
	105	[4795]	GETGLOBAL	R7 K2 ; R7 := _T
	106	[4795]	GETTABLE 	R7 R7 K4 ; R7 := R7["FavWarframeAvatar"]
	107	[4795]	GETTABLE 	R7 R7 R4 ; R7 := R7[R4]
	108	[4795]	SELF     	R7 R7 K20 ; R8 := R7; R7 := R7[0x26d544fc]
	109	[4795]	GETGLOBAL	R9 K9 ; R9 := 0x0469f296
	110	[4795]	CALL     	R9 1 0 ; R9,... := R9()
	111	[4795]	CALL     	R7 0 1 ; R7(R8,...)
	112	[4797]	LOADNIL  	R7 R7 ; R7 := nil
	113	[4798]	GETGLOBAL	R8 K6 ; R8 := 0x89326c93
	114	[4798]	SELF     	R8 R8 K11 ; R9 := R8; R8 := R8[0x18d05d30]
	115	[4798]	CALL     	R8 2 2 ; R8 := R8(R9)
	116	[4798]	TEST     	R8 0 ; if not R8 then PC := 122
	117	[4798]	JMP      	122 ; PC := 122
	118	[4799]	SELF     	R8 R0 K21 ; R9 := R0; R8 := R0[0x25a6e75e]
	119	[4799]	CALL     	R8 2 2 ; R8 := R8(R9)
	120	[4799]	MOVE     	R7 R8 ; R7 := R8
	121	[4799]	JMP      	125 ; PC := 125
	122	[4801]	SELF     	R8 R0 K22 ; R9 := R0; R8 := R0[0x7465e2a0]
	123	[4801]	CALL     	R8 2 2 ; R8 := R8(R9)
	124	[4801]	MOVE     	R7 R8 ; R7 := R8
	125	[4804]	SELF     	R8 R7 K23 ; R9 := R7; R8 := R7[0x566259e1]
	126	[4804]	LOADK    	R10 := 0.000000
	127	[4804]	MOVE     	R11 R1 ; R11 := R1
	128	[4804]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	129	[4805]	GETGLOBAL	R9 K6 ; R9 := 0x89326c93
	130	[4805]	SELF     	R9 R9 K11 ; R10 := R9; R9 := R9[0x18d05d30]
	131	[4805]	CALL     	R9 2 2 ; R9 := R9(R10)
	132	[4805]	NOT      	R9 R9 ; R9 := not R9
	133	[4806]	GETGLOBAL	R10 K9 ; R10 := 0x0469f296
	134	[4806]	CALL     	R10 1 2 ; R10 := R10()
	135	[4807]	GETUPVAL 	R11 U0 ; R11 := U0
	136	[4807]	GETTABLE 	R11 R11 K25 ; R11 := R11[0x23ddc82a]
	137	[4807]	CALL     	R11 1 2 ; R11 := R11()
	138	[4807]	TEST     	R11 0 ; if not R11 then PC := 144
	139	[4807]	JMP      	144 ; PC := 144
	140	[4808]	GETGLOBAL	R11 K9 ; R11 := 0x0469f296
	141	[4808]	MOVE     	R12 R4 ; R12 := R4
	142	[4808]	CALL     	R11 2 2 ; R11 := R11(R12)
	143	[4808]	MOVE     	R10 R11 ; R10 := R11
	144	[4810]	SELF     	R11 R0 K26 ; R12 := R0; R11 := R0[0xaf73a93c]
	145	[4810]	MOVE     	R13 R2 ; R13 := R2
	146	[4810]	LOADK    	R14 := 0.000000
	147	[4810]	MOVE     	R15 R8 ; R15 := R8
	148	[4810]	MOVE     	R16 R9 ; R16 := R9
	149	[4810]	MOVE     	R17 R10 ; R17 := R10
	150	[4810]	CALL     	R11 7 1 ; R11(R12,R13,R14,R15,R16,R17)
	151	[4811]	GETGLOBAL	R11 K2 ; R11 := _T
	152	[4811]	GETTABLE 	R11 R11 K3 ; R11 := R11["FavouriteLoadoutLoader"]
	153	[4811]	NEWTABLE 	R12 0 2 ; R12 := {}
	154	[4811]	SETTABLE 	R12 K27 R2 ; R12["Loadout"] := R2
	155	[4811]	SELF     	R13 R0 K29 ; R14 := R0; R13 := R0[0xf16dfdcc]
	156	[4811]	MOVE     	R15 R10 ; R15 := R10
	157	[4811]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	158	[4811]	SETTABLE 	R12 K28 R13 ; R12[0x6c97a788] := R13
	159	[4811]	SETTABLE 	R11 R4 R12 ; R11[R4] := R12
	160	[4813]	RETURN   	R0 1 ; return 

function #120 <?:4815,4843> (77 instructions, 308 bytes at 000001609686CA30)
2 params, 17 slots, 1 upvalue, 0 locals, 20 constants, 0 functions
	1	[4816]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[4816]	GETGLOBAL	R3 K1 ; R3 := 0xbe190284
	3	[4816]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[4816]	TEST     	R2 1 ; if R2 then PC := 18
	5	[4816]	JMP      	18 ; PC := 18
	6	[4816]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	7	[4816]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xf2deaf69]
	8	[4816]	GETGLOBAL	R4 K3 ; R4 := gLotusAttractModeGameRulesType
	9	[4816]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	10	[4816]	TEST     	R2 1 ; if R2 then PC := 19
	11	[4816]	JMP      	19 ; PC := 19
	12	[4816]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	13	[4816]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xf2deaf69]
	14	[4816]	GETGLOBAL	R4 K4 ; R4 := gLotusPhotoBoothGameRulesType
	15	[4816]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[4816]	TEST     	R2 1 ; if R2 then PC := 19
	17	[4816]	JMP      	19 ; PC := 19
	18	[4817]	RETURN   	R0 1 ; return 
	19	[4820]	GETGLOBAL	R2 K5 ; R2 := 0x76ea806b
	20	[4820]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x3f3ae64c]
	21	[4820]	LOADK    	R4 := 0.000000
	22	[4820]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[4821]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	24	[4821]	MOVE     	R4 R2 ; R4 := R2
	25	[4821]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[4821]	TEST     	R3 0 ; if not R3 then PC := 29
	27	[4821]	JMP      	29 ; PC := 29
	28	[4822]	RETURN   	R0 1 ; return 
	29	[4824]	SELF     	R3 R2 K7 ; R4 := R2; R3 := R2[0x80563238]
	30	[4824]	CALL     	R3 2 2 ; R3 := R3(R4)
	31	[4825]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	32	[4825]	MOVE     	R5 R3 ; R5 := R3
	33	[4825]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[4825]	TEST     	R4 1 ; if R4 then PC := 77
	35	[4825]	JMP      	77 ; PC := 77
	36	[4826]	GETGLOBAL	R4 K8 ; R4 := 0x0469f296
	37	[4826]	MOVE     	R5 R1 ; R5 := R1
	38	[4826]	CALL     	R4 2 2 ; R4 := R4(R5)
	39	[4827]	GETGLOBAL	R5 K9 ; R5 := 0x8650181f
	40	[4827]	CALL     	R5 1 2 ; R5 := R5()
	41	[4828]	TEST     	R0 0 ; if not R0 then PC := 62
	42	[4828]	JMP      	62 ; PC := 62
	43	[4829]	SELF     	R6 R3 K10 ; R7 := R3; R6 := R3[0x571ef1e3]
	44	[4829]	GETGLOBAL	R8 K11 ; R8 := 0x89326c93
	45	[4829]	SELF     	R8 R8 K12 ; R9 := R8; R8 := R8[0x18d05d30]
	46	[4829]	CALL     	R8 2 0 ; R8,... := R8(R9)
	47	[4829]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	48	[4829]	GETTABLE 	R6 R6 K13 ; R6 := R6["mFavouriteLoadouts"]
	49	[4830]	LOADK    	R7 := 1.000000
	50	[4830]	LEN      	R8 R6 ; R8 := # R6
	51	[4830]	LOADK    	R9 := 1.000000
	52	[4830]	FORPREP  	R7 60 ; R7 -= R9; PC := 60
	53	[4831]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	54	[4831]	GETTABLE 	R11 R11 K14 ; R11 := R11["mTag"]
	55	[4831]	EQ       	0 R4 R11 ; if R4 ~= R11 then PC := 60
	56	[4831]	JMP      	60 ; PC := 60
	57	[4832]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	58	[4832]	GETTABLE 	R5 R11 K15 ; R5 := R11["mLoadoutId"]
	59	[4833]	JMP      	68 ; PC := 68
	60	[4830]	FORLOOP  	R7 53 ; R7 += R9; if R7 <= R8 then begin PC := 53; R10 := R7 end
	61	[4835]	JMP      	68 ; PC := 68
	62	[4837]	SELF     	R11 R3 K16 ; R12 := R3; R11 := R3[0xcd57f819]
	63	[4837]	GETGLOBAL	R13 K11 ; R13 := 0x89326c93
	64	[4837]	SELF     	R13 R13 K12 ; R14 := R13; R13 := R13[0x18d05d30]
	65	[4837]	CALL     	R13 2 0 ; R13,... := R13(R14)
	66	[4837]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	67	[4837]	GETTABLE 	R5 R11 K17 ; R5 := R11["mFavouriteLoadoutId"]
	68	[4840]	GETGLOBAL	R11 K18 ; R11 := 0x6c97a788
	69	[4840]	GETTABLE 	R11 R11 K19 ; R11 := R11[0x17574a02]
	70	[4840]	CALL     	R11 1 2 ; R11 := R11()
	71	[4841]	GETUPVAL 	R12 U0 ; R12 := U0
	72	[4841]	MOVE     	R13 R3 ; R13 := R3
	73	[4841]	MOVE     	R14 R5 ; R14 := R5
	74	[4841]	MOVE     	R15 R11 ; R15 := R11
	75	[4841]	MOVE     	R16 R4 ; R16 := R4
	76	[4841]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	77	[4843]	RETURN   	R0 1 ; return 

function #121 <?:4845,4860> (53 instructions, 212 bytes at 000001609686CF70)
0 params, 10 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[4846]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4846]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[4846]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4846]	TEST     	R0 1 ; if R0 then PC := 18
	5	[4846]	JMP      	18 ; PC := 18
	6	[4846]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[4846]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[4846]	GETGLOBAL	R2 K3 ; R2 := gLotusAttractModeGameRulesType
	9	[4846]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[4846]	TEST     	R0 1 ; if R0 then PC := 19
	11	[4846]	JMP      	19 ; PC := 19
	12	[4846]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	13	[4846]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	14	[4846]	GETGLOBAL	R2 K4 ; R2 := gLotusPhotoBoothGameRulesType
	15	[4846]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	16	[4846]	TEST     	R0 1 ; if R0 then PC := 19
	17	[4846]	JMP      	19 ; PC := 19
	18	[4847]	RETURN   	R0 1 ; return 
	19	[4850]	GETGLOBAL	R0 K5 ; R0 := 0x76ea806b
	20	[4850]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x3f3ae64c]
	21	[4850]	LOADK    	R2 := 0.000000
	22	[4850]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	23	[4851]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	24	[4851]	MOVE     	R2 R0 ; R2 := R0
	25	[4851]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[4851]	TEST     	R1 0 ; if not R1 then PC := 29
	27	[4851]	JMP      	29 ; PC := 29
	28	[4852]	RETURN   	R0 1 ; return 
	29	[4854]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0x80563238]
	30	[4854]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[4855]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	32	[4855]	MOVE     	R3 R1 ; R3 := R1
	33	[4855]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[4855]	TEST     	R2 1 ; if R2 then PC := 53
	35	[4855]	JMP      	53 ; PC := 53
	36	[4856]	GETGLOBAL	R2 K8 ; R2 := 0x6c97a788
	37	[4856]	GETTABLE 	R2 R2 K9 ; R2 := R2[0x17574a02]
	38	[4856]	CALL     	R2 1 2 ; R2 := R2()
	39	[4857]	SELF     	R3 R1 K10 ; R4 := R1; R3 := R1[0xcd57f819]
	40	[4857]	GETGLOBAL	R5 K11 ; R5 := 0x89326c93
	41	[4857]	SELF     	R5 R5 K12 ; R6 := R5; R5 := R5[0x18d05d30]
	42	[4857]	CALL     	R5 2 0 ; R5,... := R5(R6)
	43	[4857]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	44	[4857]	GETTABLE 	R3 R3 K13 ; R3 := R3["mFavouriteLoadoutId"]
	45	[4858]	GETUPVAL 	R4 U0 ; R4 := U0
	46	[4858]	MOVE     	R5 R1 ; R5 := R1
	47	[4858]	MOVE     	R6 R3 ; R6 := R3
	48	[4858]	MOVE     	R7 R2 ; R7 := R2
	49	[4858]	GETGLOBAL	R8 K14 ; R8 := 0x0469f296
	50	[4858]	LOADK    	R9 K15 ; R9 := "FavouriteWarframeEntity"
	51	[4858]	CALL     	R8 2 0 ; R8,... := R8(R9)
	52	[4858]	CALL     	R4 0 1 ; R4(R5,...)
	53	[4860]	RETURN   	R0 1 ; return 

function #122 <?:4862,4869> (16 instructions, 64 bytes at 000001609686D2F0)
1 param, 3 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[4863]	TEST     	R0 0 ; if not R0 then PC := 14
	2	[4863]	JMP      	14 ; PC := 14
	3	[4864]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	4	[4864]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x18d05d30]
	5	[4864]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[4864]	TEST     	R1 1 ; if R1 then PC := 14
	7	[4864]	JMP      	14 ; PC := 14
	8	[4864]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	9	[4864]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x8019cc24]
	10	[4864]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[4864]	TEST     	R1 0 ; if not R1 then PC := 14
	12	[4864]	JMP      	14 ; PC := 14
	13	[4865]	RETURN   	R0 1 ; return 
	14	[4868]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[4868]	CALL     	R1 1 1 ; R1()
	16	[4869]	RETURN   	R0 1 ; return 

function #123 <?:4871,4896> (74 instructions, 296 bytes at 000001609686D470)
0 params, 18 slots, 2 upvalues, 0 locals, 17 constants, 0 functions
	1	[4872]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4872]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[4872]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4872]	TEST     	R0 1 ; if R0 then PC := 18
	5	[4872]	JMP      	18 ; PC := 18
	6	[4872]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[4872]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[4872]	GETGLOBAL	R2 K3 ; R2 := gLotusAttractModeGameRulesType
	9	[4872]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[4872]	TEST     	R0 1 ; if R0 then PC := 19
	11	[4872]	JMP      	19 ; PC := 19
	12	[4872]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	13	[4872]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	14	[4872]	GETGLOBAL	R2 K4 ; R2 := gLotusPhotoBoothGameRulesType
	15	[4872]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	16	[4872]	TEST     	R0 1 ; if R0 then PC := 19
	17	[4872]	JMP      	19 ; PC := 19
	18	[4873]	RETURN   	R0 1 ; return 
	19	[4876]	GETGLOBAL	R0 K5 ; R0 := 0x76ea806b
	20	[4876]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x3f3ae64c]
	21	[4876]	LOADK    	R2 := 0.000000
	22	[4876]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	23	[4877]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	24	[4877]	MOVE     	R2 R0 ; R2 := R0
	25	[4877]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[4877]	TEST     	R1 0 ; if not R1 then PC := 29
	27	[4877]	JMP      	29 ; PC := 29
	28	[4878]	RETURN   	R0 1 ; return 
	29	[4880]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0x80563238]
	30	[4880]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[4881]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	32	[4881]	MOVE     	R3 R1 ; R3 := R1
	33	[4881]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[4881]	TEST     	R2 1 ; if R2 then PC := 74
	35	[4881]	JMP      	74 ; PC := 74
	36	[4882]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0x571ef1e3]
	37	[4882]	GETGLOBAL	R4 K9 ; R4 := 0x89326c93
	38	[4882]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0x18d05d30]
	39	[4882]	CALL     	R4 2 0 ; R4,... := R4(R5)
	40	[4882]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	41	[4882]	GETTABLE 	R2 R2 K11 ; R2 := R2["mFavouriteLoadouts"]
	42	[4883]	LOADK    	R3 := 1.000000
	43	[4883]	GETUPVAL 	R4 U0 ; R4 := U0
	44	[4883]	LEN      	R4 R4 ; R4 := # R4
	45	[4883]	LOADK    	R5 := 1.000000
	46	[4883]	FORPREP  	R3 73 ; R3 -= R5; PC := 73
	47	[4884]	GETGLOBAL	R7 K12 ; R7 := 0x8650181f
	48	[4884]	CALL     	R7 1 2 ; R7 := R7()
	49	[4885]	LOADK    	R8 := 1.000000
	50	[4885]	LEN      	R9 R2 ; R9 := # R2
	51	[4885]	LOADK    	R10 := 1.000000
	52	[4885]	FORPREP  	R8 62 ; R8 -= R10; PC := 62
	53	[4886]	GETUPVAL 	R12 U0 ; R12 := U0
	54	[4886]	GETTABLE 	R12 R12 R6 ; R12 := R12[R6]
	55	[4886]	GETTABLE 	R13 R2 R11 ; R13 := R2[R11]
	56	[4886]	GETTABLE 	R13 R13 K13 ; R13 := R13["mTag"]
	57	[4886]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 62
	58	[4886]	JMP      	62 ; PC := 62
	59	[4887]	GETTABLE 	R12 R2 R11 ; R12 := R2[R11]
	60	[4887]	GETTABLE 	R7 R12 K14 ; R7 := R12["mLoadoutId"]
	61	[4888]	JMP      	63 ; PC := 63
	62	[4885]	FORLOOP  	R8 53 ; R8 += R10; if R8 <= R9 then begin PC := 53; R11 := R8 end
	63	[4892]	GETGLOBAL	R12 K15 ; R12 := 0x6c97a788
	64	[4892]	GETTABLE 	R12 R12 K16 ; R12 := R12[0x17574a02]
	65	[4892]	CALL     	R12 1 2 ; R12 := R12()
	66	[4893]	GETUPVAL 	R13 U1 ; R13 := U1
	67	[4893]	MOVE     	R14 R1 ; R14 := R1
	68	[4893]	MOVE     	R15 R7 ; R15 := R7
	69	[4893]	MOVE     	R16 R12 ; R16 := R12
	70	[4893]	GETUPVAL 	R17 U0 ; R17 := U0
	71	[4893]	GETTABLE 	R17 R17 R6 ; R17 := R17[R6]
	72	[4893]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	73	[4883]	FORLOOP  	R3 47 ; R3 += R5; if R3 <= R4 then begin PC := 47; R6 := R3 end
	74	[4896]	RETURN   	R0 1 ; return 

function #124 <?:4898,4905> (17 instructions, 68 bytes at 000001609686D8A0)
1 param, 4 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[4899]	TEST     	R0 0 ; if not R0 then PC := 15
	2	[4899]	JMP      	15 ; PC := 15
	3	[4900]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	4	[4900]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x18d05d30]
	5	[4900]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[4900]	TEST     	R1 1 ; if R1 then PC := 15
	7	[4900]	JMP      	15 ; PC := 15
	8	[4900]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	9	[4900]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xf2deaf69]
	10	[4900]	GETGLOBAL	R3 K4 ; R3 := gLotusAttractModeGameRulesType
	11	[4900]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[4900]	TEST     	R1 1 ; if R1 then PC := 15
	13	[4900]	JMP      	15 ; PC := 15
	14	[4901]	RETURN   	R0 1 ; return 
	15	[4904]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[4904]	CALL     	R1 1 1 ; R1()
	17	[4905]	RETURN   	R0 1 ; return 

function #125 <?:4907,4941> (109 instructions, 436 bytes at 000001609686DA50)
0 params, 8 slots, 0 upvalues, 0 locals, 32 constants, 0 functions
	1	[4908]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4908]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[4908]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4908]	TEST     	R0 1 ; if R0 then PC := 18
	5	[4908]	JMP      	18 ; PC := 18
	6	[4908]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[4908]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[4908]	GETGLOBAL	R2 K3 ; R2 := gLotusAttractModeGameRulesType
	9	[4908]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[4908]	TEST     	R0 1 ; if R0 then PC := 19
	11	[4908]	JMP      	19 ; PC := 19
	12	[4908]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	13	[4908]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	14	[4908]	GETGLOBAL	R2 K4 ; R2 := gLotusPhotoBoothGameRulesType
	15	[4908]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	16	[4908]	TEST     	R0 1 ; if R0 then PC := 19
	17	[4908]	JMP      	19 ; PC := 19
	18	[4909]	RETURN   	R0 1 ; return 
	19	[4912]	GETGLOBAL	R0 K5 ; R0 := 0x76ea806b
	20	[4912]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x3f3ae64c]
	21	[4912]	LOADK    	R2 := 0.000000
	22	[4912]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	23	[4913]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	24	[4913]	MOVE     	R2 R0 ; R2 := R0
	25	[4913]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[4913]	TEST     	R1 0 ; if not R1 then PC := 29
	27	[4913]	JMP      	29 ; PC := 29
	28	[4914]	RETURN   	R0 1 ; return 
	29	[4917]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0x80563238]
	30	[4917]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[4918]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	32	[4918]	MOVE     	R3 R1 ; R3 := R1
	33	[4918]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[4918]	TEST     	R2 1 ; if R2 then PC := 109
	35	[4918]	JMP      	109 ; PC := 109
	36	[4919]	LOADNIL  	R2 R2 ; R2 := nil
	37	[4920]	GETGLOBAL	R3 K8 ; R3 := 0x89326c93
	38	[4920]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x18d05d30]
	39	[4920]	CALL     	R3 2 2 ; R3 := R3(R4)
	40	[4920]	TEST     	R3 0 ; if not R3 then PC := 48
	41	[4920]	JMP      	48 ; PC := 48
	42	[4921]	SELF     	R3 R1 K10 ; R4 := R1; R3 := R1[0x25a6e75e]
	43	[4921]	CALL     	R3 2 2 ; R3 := R3(R4)
	44	[4921]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x726215c7]
	45	[4921]	CALL     	R3 2 2 ; R3 := R3(R4)
	46	[4921]	MOVE     	R2 R3 ; R2 := R3
	47	[4921]	JMP      	53 ; PC := 53
	48	[4923]	SELF     	R3 R1 K12 ; R4 := R1; R3 := R1[0x7465e2a0]
	49	[4923]	CALL     	R3 2 2 ; R3 := R3(R4)
	50	[4923]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x726215c7]
	51	[4923]	CALL     	R3 2 2 ; R3 := R3(R4)
	52	[4923]	MOVE     	R2 R3 ; R2 := R3
	53	[4926]	GETGLOBAL	R3 K13 ; R3 := _T
	54	[4926]	SETTABLE 	R3 K14 K15 ; R3["HelminthSuitLoader"] := nil
	55	[4928]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	56	[4928]	GETTABLE 	R4 R2 K16 ; R4 := R2["mLastConsumedSuit"]
	57	[4928]	GETTABLE 	R4 R4 K17 ; R4 := R4["mItemType"]
	58	[4928]	CALL     	R3 2 2 ; R3 := R3(R4)
	59	[4928]	TEST     	R3 1 ; if R3 then PC := 88
	60	[4928]	JMP      	88 ; PC := 88
	61	[4928]	GETGLOBAL	R3 K18 ; R3 := 0x34291f5c
	62	[4928]	GETTABLE 	R3 R3 K19 ; R3 := R3[0x397b920f]
	63	[4928]	GETTABLE 	R4 R2 K20 ; R4 := R2["mAbilityOverrideUnlockCooldown"]
	64	[4928]	CALL     	R3 2 2 ; R3 := R3(R4)
	65	[4928]	LT       	0 K21 R3 ; if 0.000000 >= R3 then PC := 88
	66	[4928]	JMP      	88 ; PC := 88
	67	[4929]	GETGLOBAL	R3 K13 ; R3 := _T
	68	[4929]	NEWTABLE 	R4 0 1 ; R4 := {}
	69	[4929]	GETGLOBAL	R5 K23 ; R5 := 0x6c97a788
	70	[4929]	GETTABLE 	R5 R5 K24 ; R5 := R5[0x17574a02]
	71	[4929]	CALL     	R5 1 2 ; R5 := R5()
	72	[4929]	SETTABLE 	R4 K22 R5 ; R4["LoadOut"] := R5
	73	[4929]	SETTABLE 	R3 K14 R4 ; R3["HelminthSuitLoader"] := R4
	74	[4930]	SELF     	R3 R1 K25 ; R4 := R1; R3 := R1[0xea04dcea]
	75	[4930]	GETGLOBAL	R5 K13 ; R5 := _T
	76	[4930]	GETTABLE 	R5 R5 K14 ; R5 := R5["HelminthSuitLoader"]
	77	[4930]	GETTABLE 	R5 R5 K22 ; R5 := R5["LoadOut"]
	78	[4930]	GETGLOBAL	R6 K8 ; R6 := 0x89326c93
	79	[4930]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x18d05d30]
	80	[4930]	CALL     	R6 2 2 ; R6 := R6(R7)
	81	[4930]	NOT      	R6 R6 ; R6 := not R6
	82	[4930]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	83	[4931]	GETGLOBAL	R3 K13 ; R3 := _T
	84	[4931]	GETTABLE 	R3 R3 K14 ; R3 := R3["HelminthSuitLoader"]
	85	[4931]	SELF     	R4 R1 K27 ; R5 := R1; R4 := R1[0x94b1aa85]
	86	[4931]	CALL     	R4 2 2 ; R4 := R4(R5)
	87	[4931]	SETTABLE 	R3 K26 R4 ; R3[0xd3a01177] := R4
	88	[4934]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	89	[4934]	GETGLOBAL	R4 K13 ; R4 := _T
	90	[4934]	GETTABLE 	R4 R4 K14 ; R4 := R4["HelminthSuitLoader"]
	91	[4934]	CALL     	R3 2 2 ; R3 := R3(R4)
	92	[4934]	TEST     	R3 0 ; if not R3 then PC := 109
	93	[4934]	JMP      	109 ; PC := 109
	94	[4935]	GETGLOBAL	R3 K8 ; R3 := 0x89326c93
	95	[4935]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x46a0ebf5]
	96	[4935]	GETGLOBAL	R5 K29 ; R5 := 0x0469f296
	97	[4935]	LOADK    	R6 K30 ; R6 := "HelminthConsumedSuit"
	98	[4935]	CALL     	R5 2 0 ; R5,... := R5(R6)
	99	[4935]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	100	[4936]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	101	[4936]	MOVE     	R5 R3 ; R5 := R3
	102	[4936]	CALL     	R4 2 2 ; R4 := R4(R5)
	103	[4936]	TEST     	R4 1 ; if R4 then PC := 109
	104	[4936]	JMP      	109 ; PC := 109
	105	[4937]	SELF     	R4 R3 K31 ; R5 := R3; R4 := R3[0x768274d6]
	106	[4937]	OP_LOADBOOL	R6 0 0 ; R6 := false
	107	[4937]	OP_LOADBOOL	R7 1 0 ; R7 := true
	108	[4937]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	109	[4941]	RETURN   	R0 1 ; return 

function #126 <?:4943,4945> (3 instructions, 12 bytes at 000001609686E0D0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4944]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4944]	CALL     	R0 1 1 ; R0()
	3	[4945]	RETURN   	R0 1 ; return 

function #127 <?:4947,4996> (158 instructions, 632 bytes at 000001609686E1A0)
0 params, 13 slots, 1 upvalue, 0 locals, 38 constants, 0 functions
	1	[4948]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[4948]	GETTABLE 	R0 R0 K1 ; R0 := R0["HelminthSuitLoader"]
	3	[4948]	GETTABLE 	R0 R0 K2 ; R0 := R0["LoadOutCopyPending"]
	4	[4948]	EQ       	0 R0 K3 ; if R0 ~= nil then PC := 115
	5	[4948]	JMP      	115 ; PC := 115
	6	[4949]	LOADK    	R0 := 3.000000
	7	[4950]	GETGLOBAL	R1 K5 ; R1 := 0x89326c93
	8	[4950]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x18d05d30]
	9	[4950]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[4950]	TEST     	R1 1 ; if R1 then PC := 13
	11	[4950]	JMP      	13 ; PC := 13
	12	[4951]	LOADK    	R0 := 4.000000
	13	[4954]	GETGLOBAL	R1 K5 ; R1 := 0x89326c93
	14	[4954]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x78298275]
	15	[4954]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[4955]	GETGLOBAL	R2 K8 ; R2 := 0x7b998233
	17	[4955]	MOVE     	R3 R1 ; R3 := R1
	18	[4955]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[4955]	TEST     	R2 0 ; if not R2 then PC := 25
	20	[4955]	JMP      	25 ; PC := 25
	21	[4956]	GETGLOBAL	R2 K9 ; R2 := 0x3d106989
	22	[4956]	LOADK    	R3 K10 ; R3 := "Couldn't get player avatar, not creating a loader"
	23	[4956]	CALL     	R2 2 1 ; R2(R3)
	24	[4957]	RETURN   	R0 1 ; return 
	25	[4960]	SELF     	R2 R1 K11 ; R3 := R1; R2 := R1[0xd1586535]
	26	[4960]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[4960]	GETGLOBAL	R3 K12 ; R3 := 0xa421af95
	28	[4960]	LOADK    	R4 := 0.000000
	29	[4960]	LOADK    	R5 := -2.000000
	30	[4960]	LOADK    	R6 := 0.000000
	31	[4960]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	32	[4960]	ADD      	R2 R2 R3 ; R2 := R2 + R3
	33	[4961]	GETGLOBAL	R3 K5 ; R3 := 0x89326c93
	34	[4961]	SELF     	R3 R3 K13 ; R4 := R3; R3 := R3[0x46a0ebf5]
	35	[4961]	GETGLOBAL	R5 K14 ; R5 := 0x0469f296
	36	[4961]	LOADK    	R6 K15 ; R6 := "ActionFigureAvatarSpawn"
	37	[4961]	CALL     	R5 2 0 ; R5,... := R5(R6)
	38	[4961]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	39	[4962]	GETGLOBAL	R4 K8 ; R4 := 0x7b998233
	40	[4962]	MOVE     	R5 R3 ; R5 := R3
	41	[4962]	CALL     	R4 2 2 ; R4 := R4(R5)
	42	[4962]	TEST     	R4 1 ; if R4 then PC := 47
	43	[4962]	JMP      	47 ; PC := 47
	44	[4963]	SELF     	R4 R3 K11 ; R5 := R3; R4 := R3[0xd1586535]
	45	[4963]	CALL     	R4 2 2 ; R4 := R4(R5)
	46	[4963]	MOVE     	R2 R4 ; R2 := R4
	47	[4966]	GETGLOBAL	R4 K0 ; R4 := _T
	48	[4966]	GETTABLE 	R4 R4 K1 ; R4 := R4["HelminthSuitLoader"]
	49	[4966]	GETGLOBAL	R5 K5 ; R5 := 0x89326c93
	50	[4966]	SELF     	R5 R5 K17 ; R6 := R5; R5 := R5[0x05909209]
	51	[4966]	GETGLOBAL	R7 K18 ; R7 := 0x3b8177f3
	52	[4966]	MOVE     	R8 R2 ; R8 := R2
	53	[4966]	GETGLOBAL	R9 K19 ; R9 := ZERO_ROTATION
	54	[4966]	MOVE     	R10 R1 ; R10 := R1
	55	[4966]	MOVE     	R11 R1 ; R11 := R1
	56	[4966]	MOVE     	R12 R0 ; R12 := R0
	57	[4966]	CALL     	R5 8 2 ; R5 := R5(R6,R7,R8,R9,R10,R11,R12)
	58	[4966]	SETTABLE 	R4 K16 R5 ; R4["Avatar"] := R5
	59	[4968]	GETGLOBAL	R4 K8 ; R4 := 0x7b998233
	60	[4968]	GETGLOBAL	R5 K0 ; R5 := _T
	61	[4968]	GETTABLE 	R5 R5 K1 ; R5 := R5["HelminthSuitLoader"]
	62	[4968]	GETTABLE 	R5 R5 K16 ; R5 := R5["Avatar"]
	63	[4968]	CALL     	R4 2 2 ; R4 := R4(R5)
	64	[4968]	TEST     	R4 1 ; if R4 then PC := 158
	65	[4968]	JMP      	158 ; PC := 158
	66	[4969]	GETGLOBAL	R4 K0 ; R4 := _T
	67	[4969]	GETTABLE 	R4 R4 K1 ; R4 := R4["HelminthSuitLoader"]
	68	[4969]	GETTABLE 	R4 R4 K16 ; R4 := R4["Avatar"]
	69	[4969]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0x5a03ce82]
	70	[4969]	OP_LOADBOOL	R6 1 0 ; R6 := true
	71	[4969]	OP_LOADBOOL	R7 0 0 ; R7 := false
	72	[4969]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	73	[4971]	GETGLOBAL	R4 K0 ; R4 := _T
	74	[4971]	GETTABLE 	R4 R4 K1 ; R4 := R4["HelminthSuitLoader"]
	75	[4971]	GETTABLE 	R4 R4 K16 ; R4 := R4["Avatar"]
	76	[4971]	SELF     	R4 R4 K21 ; R5 := R4; R4 := R4[0x26d544fc]
	77	[4971]	GETGLOBAL	R6 K14 ; R6 := 0x0469f296
	78	[4971]	CALL     	R6 1 0 ; R6,... := R6()
	79	[4971]	CALL     	R4 0 1 ; R4(R5,...)
	80	[4972]	GETGLOBAL	R4 K0 ; R4 := _T
	81	[4972]	GETTABLE 	R4 R4 K1 ; R4 := R4["HelminthSuitLoader"]
	82	[4972]	GETTABLE 	R4 R4 K16 ; R4 := R4["Avatar"]
	83	[4972]	SELF     	R4 R4 K22 ; R5 := R4; R4 := R4[0x768274d6]
	84	[4972]	OP_LOADBOOL	R6 0 0 ; R6 := false
	85	[4972]	CALL     	R4 3 1 ; R4(R5,R6)
	86	[4973]	GETGLOBAL	R4 K0 ; R4 := _T
	87	[4973]	GETTABLE 	R4 R4 K1 ; R4 := R4["HelminthSuitLoader"]
	88	[4973]	GETTABLE 	R4 R4 K16 ; R4 := R4["Avatar"]
	89	[4973]	SELF     	R4 R4 K23 ; R5 := R4; R4 := R4[0x30eb0cc3]
	90	[4973]	LOADK    	R6 := 7.000000
	91	[4973]	OP_LOADBOOL	R7 1 0 ; R7 := true
	92	[4973]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	93	[4974]	GETGLOBAL	R4 K0 ; R4 := _T
	94	[4974]	GETTABLE 	R4 R4 K1 ; R4 := R4["HelminthSuitLoader"]
	95	[4974]	GETTABLE 	R4 R4 K16 ; R4 := R4["Avatar"]
	96	[4974]	SELF     	R4 R4 K25 ; R5 := R4; R4 := R4[0x9d668f53]
	97	[4974]	GETGLOBAL	R6 K14 ; R6 := 0x0469f296
	98	[4974]	CALL     	R6 1 2 ; R6 := R6()
	99	[4974]	LOADK    	R7 := 5.000000
	100	[4974]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	101	[4976]	GETGLOBAL	R4 K0 ; R4 := _T
	102	[4976]	GETTABLE 	R4 R4 K1 ; R4 := R4["HelminthSuitLoader"]
	103	[4976]	GETTABLE 	R4 R4 K16 ; R4 := R4["Avatar"]
	104	[4976]	SELF     	R4 R4 K26 ; R5 := R4; R4 := R4[0xde321e6f]
	105	[4976]	CALL     	R4 2 2 ; R4 := R4(R5)
	106	[4976]	SELF     	R4 R4 K27 ; R5 := R4; R4 := R4[0x1d2dfe4a]
	107	[4976]	GETGLOBAL	R6 K0 ; R6 := _T
	108	[4976]	GETTABLE 	R6 R6 K1 ; R6 := R6["HelminthSuitLoader"]
	109	[4976]	GETTABLE 	R6 R6 K28 ; R6 := R6["LoadOut"]
	110	[4976]	CALL     	R4 3 1 ; R4(R5,R6)
	111	[4978]	GETGLOBAL	R4 K0 ; R4 := _T
	112	[4978]	GETTABLE 	R4 R4 K1 ; R4 := R4["HelminthSuitLoader"]
	113	[4978]	SETTABLE 	R4 K2 K29 ; R4["LoadOutCopyPending"] := 4.000000
	114	[4979]	JMP      	158 ; PC := 158
	115	[4981]	GETGLOBAL	R4 K0 ; R4 := _T
	116	[4981]	GETTABLE 	R4 R4 K1 ; R4 := R4["HelminthSuitLoader"]
	117	[4981]	GETGLOBAL	R5 K0 ; R5 := _T
	118	[4981]	GETTABLE 	R5 R5 K1 ; R5 := R5["HelminthSuitLoader"]
	119	[4981]	GETTABLE 	R5 R5 K2 ; R5 := R5["LoadOutCopyPending"]
	120	[4981]	SUB      	R5 R5 K30 ; R5 := R5 - 1.000000
	121	[4981]	SETTABLE 	R4 K2 R5 ; R4["LoadOutCopyPending"] := R5
	122	[4982]	GETGLOBAL	R4 K0 ; R4 := _T
	123	[4982]	GETTABLE 	R4 R4 K1 ; R4 := R4["HelminthSuitLoader"]
	124	[4982]	GETTABLE 	R4 R4 K2 ; R4 := R4["LoadOutCopyPending"]
	125	[4982]	EQ       	0 R4 K31 ; if R4 ~= 0.000000 then PC := 158
	126	[4982]	JMP      	158 ; PC := 158
	127	[4983]	GETGLOBAL	R4 K5 ; R4 := 0x89326c93
	128	[4983]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x46a0ebf5]
	129	[4983]	GETGLOBAL	R6 K14 ; R6 := 0x0469f296
	130	[4983]	LOADK    	R7 K32 ; R7 := "HelminthConsumedSuit"
	131	[4983]	CALL     	R6 2 0 ; R6,... := R6(R7)
	132	[4983]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	133	[4984]	SELF     	R5 R4 K22 ; R6 := R4; R5 := R4[0x768274d6]
	134	[4984]	OP_LOADBOOL	R7 1 0 ; R7 := true
	135	[4984]	OP_LOADBOOL	R8 1 0 ; R8 := true
	136	[4984]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	137	[4985]	GETUPVAL 	R5 U0 ; R5 := U0
	138	[4985]	GETTABLE 	R5 R5 K33 ; R5 := R5[0x18ea51f7]
	139	[4985]	MOVE     	R6 R4 ; R6 := R4
	140	[4985]	GETGLOBAL	R7 K0 ; R7 := _T
	141	[4985]	GETTABLE 	R7 R7 K1 ; R7 := R7["HelminthSuitLoader"]
	142	[4985]	GETTABLE 	R7 R7 K16 ; R7 := R7["Avatar"]
	143	[4985]	OP_LOADBOOL	R8 0 0 ; R8 := false
	144	[4985]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	145	[4987]	SELF     	R5 R4 K34 ; R6 := R4; R5 := R4[0xc9f6a7d7]
	146	[4987]	GETGLOBAL	R7 K35 ; R7 := 0x1fcef9d4
	147	[4987]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	148	[4989]	GETGLOBAL	R6 K8 ; R6 := 0x7b998233
	149	[4989]	MOVE     	R7 R5 ; R7 := R5
	150	[4989]	CALL     	R6 2 2 ; R6 := R6(R7)
	151	[4989]	TEST     	R6 1 ; if R6 then PC := 156
	152	[4989]	JMP      	156 ; PC := 156
	153	[4990]	SELF     	R6 R5 K36 ; R7 := R5; R6 := R5[0x8eb2112d]
	154	[4990]	LOADK    	R8 K37 ; R8 := "Burst"
	155	[4990]	CALL     	R6 3 1 ; R6(R7,R8)
	156	[4993]	GETGLOBAL	R6 K0 ; R6 := _T
	157	[4993]	SETTABLE 	R6 K1 K3 ; R6["HelminthSuitLoader"] := nil
	158	[4996]	RETURN   	R0 1 ; return 

function #128 <?:5001,5013> (25 instructions, 100 bytes at 000001609686E9C0)
2 params, 5 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[5002]	TEST     	R0 0 ; if not R0 then PC := 5
	2	[5002]	JMP      	5 ; PC := 5
	3	[5003]	SETGLOBALHASH	R1 K0 ; mFriendRequestActiveNotification := R1
	4	[5003]	JMP      	25 ; PC := 25
	5	[5005]	GETGLOBAL	R2 K0 ; R2 := mFriendRequestActiveNotification
	6	[5005]	EQ       	0 R2 R1 ; if R2 ~= R1 then PC := 10
	7	[5005]	JMP      	10 ; PC := 10
	8	[5006]	LOADNIL  	R2 R2 ; R2 := nil
	9	[5006]	SETGLOBALHASH	R2 K0 ; mFriendRequestActiveNotification := R2
	10	[5008]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	11	[5008]	GETGLOBAL	R3 K2 ; R3 := 0x25d99d89
	12	[5008]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[5008]	TEST     	R2 1 ; if R2 then PC := 25
	14	[5008]	JMP      	25 ; PC := 25
	15	[5008]	GETGLOBAL	R2 K3 ; R2 := mFriendRequests
	16	[5008]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	17	[5008]	TEST     	R2 0 ; if not R2 then PC := 25
	18	[5008]	JMP      	25 ; PC := 25
	19	[5009]	GETGLOBAL	R2 K3 ; R2 := mFriendRequests
	20	[5009]	SETTABLE 	R2 R1 K4 ; R2[R1] := nil
	21	[5010]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	22	[5010]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xadb51265]
	23	[5010]	MOVE     	R4 R1 ; R4 := R1
	24	[5010]	CALL     	R2 3 1 ; R2(R3,R4)
	25	[5013]	RETURN   	R0 1 ; return 

function #129 <?:5015,5037> (78 instructions, 312 bytes at 000001609686EBC0)
0 params, 19 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[5016]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[5017]	TEST     	R0 1 ; if R0 then PC := 5
	3	[5017]	JMP      	5 ; PC := 5
	4	[5018]	OP_LOADBOOL	R0 0 0 ; R0 := false
	5	[5020]	TEST     	R0 0 ; if not R0 then PC := 78
	6	[5020]	JMP      	78 ; PC := 78
	7	[5020]	GETGLOBAL	R1 K0 ; R1 := mNewFriendRequests
	8	[5020]	TEST     	R1 0 ; if not R1 then PC := 78
	9	[5020]	JMP      	78 ; PC := 78
	10	[5020]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	11	[5020]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	12	[5020]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[5020]	TEST     	R1 1 ; if R1 then PC := 78
	14	[5020]	JMP      	78 ; PC := 78
	15	[5020]	GETGLOBAL	R1 K3 ; R1 := _T
	16	[5020]	GETTABLE 	R1 R1 K4 ; R1 := R1["ShowNotification"]
	17	[5020]	EQ       	1 R1 K5 ; if R1 == nil then PC := 78
	18	[5020]	JMP      	78 ; PC := 78
	19	[5021]	OP_LOADBOOL	R1 0 0 ; R1 := false
	20	[5021]	SETGLOBALHASH	R1 K0 ; mNewFriendRequests := R1
	21	[5022]	GETGLOBAL	R1 K2 ; R1 := 0x25d99d89
	22	[5022]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x31842110]
	23	[5022]	CALL     	R1 2 2 ; R1 := R1(R2)
	24	[5023]	LOADK    	R2 := 1.000000
	25	[5023]	LEN      	R3 R1 ; R3 := # R1
	26	[5023]	LOADK    	R4 := 1.000000
	27	[5023]	FORPREP  	R2 77 ; R2 -= R4; PC := 77
	28	[5024]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	29	[5025]	GETTABLE 	R7 R6 K7 ; R7 := R6["mDisplayName"]
	30	[5026]	GETTABLE 	R8 R6 K8 ; R8 := R6["mNewRequest"]
	31	[5026]	TEST     	R8 0 ; if not R8 then PC := 77
	32	[5026]	JMP      	77 ; PC := 77
	33	[5027]	GETGLOBAL	R8 K9 ; R8 := 0x89326c93
	34	[5027]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x78298275]
	35	[5027]	CALL     	R8 2 2 ; R8 := R8(R9)
	36	[5028]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	37	[5028]	MOVE     	R10 R8 ; R10 := R8
	38	[5028]	CALL     	R9 2 2 ; R9 := R9(R10)
	39	[5028]	TEST     	R9 1 ; if R9 then PC := 46
	40	[5028]	JMP      	46 ; PC := 46
	41	[5029]	SELF     	R9 R8 K11 ; R10 := R8; R9 := R8[0xd3a01177]
	42	[5029]	CALL     	R9 2 2 ; R9 := R9(R10)
	43	[5029]	SELF     	R9 R9 K12 ; R10 := R9; R9 := R9[0xcc998df1]
	44	[5029]	LOADK    	R11 K13 ; R11 := "FriendNotificationSelected"
	45	[5029]	CALL     	R9 3 1 ; R9(R10,R11)
	46	[5031]	GETGLOBAL	R9 K14 ; R9 := mFriendRequests
	47	[5031]	SETTABLE 	R9 R7 R6 ; R9[R7] := R6
	48	[5032]	GETGLOBAL	R9 K15 ; R9 := 0xae91e43b
	49	[5032]	SELF     	R9 R9 K16 ; R10 := R9; R9 := R9[0x42b04007]
	50	[5032]	LOADK    	R11 K17 ; R11 := "/Lotus/Language/Menu/Lobby_FriendInvite"
	51	[5032]	OP_LOADBOOL	R12 0 0 ; R12 := false
	52	[5032]	NEWTABLE 	R13 0 1 ; R13 := {}
	53	[5032]	SETTABLE 	R13 K18 R7 ; R13["USER"] := R7
	54	[5032]	CALL     	R9 5 2 ; R9 := R9(R10,R11,R12,R13)
	55	[5032]	LOADK    	R10 K19 ; R10 := "\r\r"
	56	[5032]	GETGLOBAL	R11 K15 ; R11 := 0xae91e43b
	57	[5032]	SELF     	R11 R11 K16 ; R12 := R11; R11 := R11[0x42b04007]
	58	[5032]	LOADK    	R13 K20 ; R13 := "<NEXT_INV>"
	59	[5032]	OP_LOADBOOL	R14 1 0 ; R14 := true
	60	[5032]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	61	[5032]	GETGLOBAL	R12 K15 ; R12 := 0xae91e43b
	62	[5032]	SELF     	R12 R12 K16 ; R13 := R12; R12 := R12[0x42b04007]
	63	[5032]	LOADK    	R14 K21 ; R14 := "/Lotus/Language/Menu/Details"
	64	[5032]	OP_LOADBOOL	R15 0 0 ; R15 := false
	65	[5032]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	66	[5032]	CONCAT   	R9 R9 R12 ; R9 := R9 .. R10 .. R11 .. R12
	67	[5033]	GETGLOBAL	R10 K3 ; R10 := _T
	68	[5033]	GETTABLE 	R10 R10 K22 ; R10 := R10[0x7dce37bc]
	69	[5033]	MOVE     	R11 R9 ; R11 := R9
	70	[5033]	LOADK    	R12 K23 ; R12 := "SquadMemberJoined"
	71	[5033]	OP_LOADBOOL	R13 0 0 ; R13 := false
	72	[5033]	LOADK    	R14 := 8.000000
	73	[5033]	LOADNIL  	R15 R16 ; R15 := R16 := nil
	74	[5033]	GETUPVAL 	R17 U0 ; R17 := U0
	75	[5033]	MOVE     	R18 R7 ; R18 := R7
	76	[5033]	CALL     	R10 9 1 ; R10(R11,R12,R13,R14,R15,R16,R17,R18)
	77	[5023]	FORLOOP  	R2 28 ; R2 += R4; if R2 <= R3 then begin PC := 28; R5 := R2 end
	78	[5037]	RETURN   	R0 1 ; return 

function #130 <?:5039,5041> (3 instructions, 12 bytes at 000001609686F150)
0 params, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[5040]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[5040]	SETGLOBALHASH	R0 K0 ; mNewFriendRequests := R0
	3	[5041]	RETURN   	R0 1 ; return 

function #131 <?:5043,5058> (53 instructions, 212 bytes at 000001609686F240)
0 params, 8 slots, 1 upvalue, 0 locals, 25 constants, 0 functions
	1	[5044]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5044]	GETGLOBAL	R1 K1 ; R1 := mFriendRequestActiveNotification
	3	[5044]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5044]	TEST     	R0 1 ; if R0 then PC := 53
	5	[5044]	JMP      	53 ; PC := 53
	6	[5045]	GETGLOBAL	R0 K2 ; R0 := _T
	7	[5045]	GETTABLE 	R0 R0 K3 ; R0 := R0[0x41c97c15]
	8	[5045]	CALL     	R0 1 1 ; R0()
	9	[5046]	GETGLOBAL	R0 K4 ; R0 := mFriendRequests
	10	[5046]	GETGLOBAL	R1 K1 ; R1 := mFriendRequestActiveNotification
	11	[5046]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	12	[5047]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	13	[5047]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xe27b35bb]
	14	[5047]	CALL     	R1 1 2 ; R1 := R1()
	15	[5048]	SETTABLE 	R1 K7 K8 ; R1["dialogType"] := 5.000000
	16	[5049]	GETGLOBAL	R2 K10 ; R2 := 0xae91e43b
	17	[5049]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x42b04007]
	18	[5049]	LOADK    	R4 K12 ; R4 := "/Lotus/Language/Menu/Lobby_FriendInviteDetails"
	19	[5049]	OP_LOADBOOL	R5 0 0 ; R5 := false
	20	[5049]	NEWTABLE 	R6 0 1 ; R6 := {}
	21	[5049]	GETGLOBAL	R7 K1 ; R7 := mFriendRequestActiveNotification
	22	[5049]	SETTABLE 	R6 K13 R7 ; R6["USER"] := R7
	23	[5049]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	24	[5049]	LOADK    	R3 K14 ; R3 := "\r\r"
	25	[5049]	GETTABLE 	R4 R0 K15 ; R4 := R0["mNote"]
	26	[5049]	CONCAT   	R2 R2 R4 ; R2 := R2 .. R3 .. R4
	27	[5049]	SETTABLE 	R1 K9 R2 ; R1["locString"] := R2
	28	[5050]	GETGLOBAL	R2 K10 ; R2 := 0xae91e43b
	29	[5050]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x42b04007]
	30	[5050]	LOADK    	R4 K17 ; R4 := "/Lotus/Language/Menu/Global_Accept"
	31	[5050]	OP_LOADBOOL	R5 0 0 ; R5 := false
	32	[5050]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	33	[5050]	SETTABLE 	R1 K16 R2 ; R1["firstString"] := R2
	34	[5051]	GETGLOBAL	R2 K10 ; R2 := 0xae91e43b
	35	[5051]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x42b04007]
	36	[5051]	LOADK    	R4 K19 ; R4 := "/Lotus/Language/Menu/Global_Decline"
	37	[5051]	OP_LOADBOOL	R5 0 0 ; R5 := false
	38	[5051]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	39	[5051]	SETTABLE 	R1 K18 R2 ; R1["secondString"] := R2
	40	[5052]	GETGLOBAL	R2 K10 ; R2 := 0xae91e43b
	41	[5052]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x42b04007]
	42	[5052]	LOADK    	R4 K21 ; R4 := "/Lotus/Language/Menu/NavBar_Cancel"
	43	[5052]	OP_LOADBOOL	R5 0 0 ; R5 := false
	44	[5052]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	45	[5052]	SETTABLE 	R1 K20 R2 ; R1["thirdString"] := R2
	46	[5054]	SELF     	R2 R1 K22 ; R3 := R1; R2 := R1[0xe6ccc5b9]
	47	[5054]	LOADK    	R4 K23 ; R4 := "FriendRequestOptionChosen"
	48	[5054]	CALL     	R2 3 1 ; R2(R3,R4)
	49	[5056]	GETUPVAL 	R2 U0 ; R2 := U0
	50	[5056]	GETTABLE 	R2 R2 K24 ; R2 := R2[0xe99b84e7]
	51	[5056]	MOVE     	R3 R1 ; R3 := R1
	52	[5056]	CALL     	R2 2 1 ; R2(R3)
	53	[5058]	RETURN   	R0 1 ; return 

function #132 <?:5060,5072> (39 instructions, 156 bytes at 000001609686F6B0)
1 param, 6 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[5061]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5061]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	3	[5061]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5061]	TEST     	R1 1 ; if R1 then PC := 39
	5	[5061]	JMP      	39 ; PC := 39
	6	[5062]	GETGLOBAL	R1 K2 ; R1 := mFriendRequests
	7	[5062]	GETGLOBAL	R2 K3 ; R2 := mFriendRequestActiveNotification
	8	[5062]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	9	[5063]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	10	[5063]	MOVE     	R3 R1 ; R3 := R1
	11	[5063]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[5063]	TEST     	R2 1 ; if R2 then PC := 35
	13	[5063]	JMP      	35 ; PC := 35
	14	[5064]	GETGLOBAL	R2 K4 ; R2 := 0x03f57322
	15	[5064]	MOVE     	R3 R0 ; R3 := R0
	16	[5064]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[5064]	EQ       	0 R2 K6 ; if R2 ~= 4.000000 then PC := 25
	18	[5064]	JMP      	25 ; PC := 25
	19	[5065]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	20	[5065]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xad1be9ba]
	21	[5065]	GETTABLE 	R4 R1 K8 ; R4 := R1["mId"]
	22	[5065]	LOADK    	R5 K9 ; R5 := "OnConfirmFriendResult"
	23	[5065]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	24	[5065]	JMP      	35 ; PC := 35
	25	[5066]	GETGLOBAL	R2 K4 ; R2 := 0x03f57322
	26	[5066]	MOVE     	R3 R0 ; R3 := R0
	27	[5066]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[5066]	EQ       	0 R2 K10 ; if R2 ~= 6.000000 then PC := 35
	29	[5066]	JMP      	35 ; PC := 35
	30	[5067]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	31	[5067]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x4818a526]
	32	[5067]	GETTABLE 	R4 R1 K8 ; R4 := R1["mId"]
	33	[5067]	LOADK    	R5 K12 ; R5 := "OnRemoveFriendResult"
	34	[5067]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	35	[5070]	GETUPVAL 	R2 U0 ; R2 := U0
	36	[5070]	OP_LOADBOOL	R3 0 0 ; R3 := false
	37	[5070]	GETGLOBAL	R4 K3 ; R4 := mFriendRequestActiveNotification
	38	[5070]	CALL     	R2 3 1 ; R2(R3,R4)
	39	[5072]	RETURN   	R0 1 ; return 

function #133 <?:5074,5079> (11 instructions, 44 bytes at 00000160FEAF92D0)
2 params, 5 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5075]	TEST     	R0 1 ; if R0 then PC := 11
	2	[5075]	JMP      	11 ; PC := 11
	3	[5076]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[5076]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xe0cba3ca]
	5	[5076]	GETUPVAL 	R3 U0 ; R3 := U0
	6	[5076]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x3230dc3e]
	7	[5076]	MOVE     	R4 R1 ; R4 := R1
	8	[5076]	CALL     	R3 2 0 ; R3,... := R3(R4)
	9	[5076]	CALL     	R2 0 1 ; R2(R3,...)
	10	[5077]	RETURN   	R0 1 ; return 
	11	[5079]	RETURN   	R0 1 ; return 

function #134 <?:5081,5092> (24 instructions, 96 bytes at 00000160FEAF9410)
3 params, 6 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[5082]	TEST     	R0 1 ; if R0 then PC := 11
	2	[5082]	JMP      	11 ; PC := 11
	3	[5083]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[5083]	GETTABLE 	R3 R3 K0 ; R3 := R3[0xe0cba3ca]
	5	[5083]	GETUPVAL 	R4 U0 ; R4 := U0
	6	[5083]	GETTABLE 	R4 R4 K1 ; R4 := R4[0x3230dc3e]
	7	[5083]	MOVE     	R5 R1 ; R5 := R1
	8	[5083]	CALL     	R4 2 0 ; R4,... := R4(R5)
	9	[5083]	CALL     	R3 0 1 ; R3(R4,...)
	10	[5084]	RETURN   	R0 1 ; return 
	11	[5087]	GETUPVAL 	R3 U0 ; R3 := U0
	12	[5087]	GETTABLE 	R3 R3 K0 ; R3 := R3[0xe0cba3ca]
	13	[5087]	MOVE     	R4 R2 ; R4 := R2
	14	[5087]	CALL     	R3 2 1 ; R3(R4)
	15	[5089]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	16	[5089]	GETGLOBAL	R4 K3 ; R4 := 0x25d99d89
	17	[5089]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[5089]	TEST     	R3 1 ; if R3 then PC := 24
	19	[5089]	JMP      	24 ; PC := 24
	20	[5090]	GETGLOBAL	R3 K3 ; R3 := 0x25d99d89
	21	[5090]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x50f18d6c]
	22	[5090]	LOADK    	R5 K5 ; R5 := "OnGetFriendsResult"
	23	[5090]	CALL     	R3 3 1 ; R3(R4,R5)
	24	[5092]	RETURN   	R0 1 ; return 

function #135 <?:5094,5096> (6 instructions, 24 bytes at 00000160FEAF95F0)
2 params, 6 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[5095]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[5095]	MOVE     	R3 R0 ; R3 := R0
	3	[5095]	MOVE     	R4 R1 ; R4 := R1
	4	[5095]	LOADK    	R5 K0 ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendConfirmed"
	5	[5095]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	6	[5096]	RETURN   	R0 1 ; return 

function #136 <?:5098,5100> (6 instructions, 24 bytes at 00000160FEAF9760)
2 params, 6 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[5099]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[5099]	MOVE     	R3 R0 ; R3 := R0
	3	[5099]	MOVE     	R4 R1 ; R4 := R1
	4	[5099]	LOADK    	R5 K0 ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendRemoveConfirm"
	5	[5099]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	6	[5100]	RETURN   	R0 1 ; return 

function #137 <?:5105,5107> (5 instructions, 20 bytes at 00000160FEAF98D0)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5106]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5106]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xe0cba3ca]
	3	[5106]	LOADK    	R1 K1 ; R1 := "/Lotus/Language/Menu/HostDojoFailureDownload"
	4	[5106]	CALL     	R0 2 1 ; R0(R1)
	5	[5107]	RETURN   	R0 1 ; return 

function #138 <?:5109,5229> (301 instructions, 1204 bytes at 00000160FEAF9A50)
2 params, 30 slots, 4 upvalues, 0 locals, 75 constants, 0 functions
	1	[5111]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[5111]	GETGLOBAL	R3 K1 ; R3 := 0xbe190284
	3	[5111]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[5111]	TEST     	R2 0 ; if not R2 then PC := 8
	5	[5111]	JMP      	8 ; PC := 8
	6	[5112]	SETUPVAL 	R0 U0 ; U0 := R0
	7	[5113]	RETURN   	R0 1 ; return 
	8	[5116]	MOVE     	R2 R0 ; R2 := R0
	9	[5117]	GETGLOBAL	R3 K2 ; R3 := 0x7f5022cf
	10	[5117]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xa5c556b9]
	11	[5117]	MOVE     	R4 R2 ; R4 := R2
	12	[5117]	GETUPVAL 	R5 U1 ; R5 := U1
	13	[5117]	GETTABLE 	R5 R5 K4 ; R5 := R5["TAG_SEPERATOR"]
	14	[5117]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	15	[5118]	TEST     	R3 0 ; if not R3 then PC := 24
	16	[5118]	JMP      	24 ; PC := 24
	17	[5119]	GETGLOBAL	R4 K2 ; R4 := 0x7f5022cf
	18	[5119]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x1a94c9cc]
	19	[5119]	MOVE     	R5 R2 ; R5 := R2
	20	[5119]	LOADK    	R6 := 1.000000
	21	[5119]	SUB      	R7 R3 K6 ; R7 := R3 - 1.000000
	22	[5119]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	23	[5119]	MOVE     	R2 R4 ; R2 := R4
	24	[5121]	GETGLOBAL	R4 K7 ; R4 := 0x0469f296
	25	[5121]	MOVE     	R5 R2 ; R5 := R2
	26	[5121]	CALL     	R4 2 2 ; R4 := R4(R5)
	27	[5122]	GETUPVAL 	R5 U1 ; R5 := U1
	28	[5122]	GETTABLE 	R5 R5 K8 ; R5 := R5[0x5e35d4d6]
	29	[5122]	CALL     	R5 1 2 ; R5 := R5()
	30	[5123]	SELF     	R6 R5 K9 ; R7 := R5; R6 := R5[0xc18bf6f0]
	31	[5123]	MOVE     	R8 R4 ; R8 := R4
	32	[5123]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	33	[5125]	GETGLOBAL	R7 K2 ; R7 := 0x7f5022cf
	34	[5125]	GETTABLE 	R7 R7 K3 ; R7 := R7[0xa5c556b9]
	35	[5125]	MOVE     	R8 R0 ; R8 := R0
	36	[5125]	GETUPVAL 	R9 U1 ; R9 := U1
	37	[5125]	GETTABLE 	R9 R9 K10 ; R9 := R9["KEY_TAG"]
	38	[5125]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	39	[5125]	TEST     	R7 0 ; if not R7 then PC := 50
	40	[5125]	JMP      	50 ; PC := 50
	41	[5126]	GETGLOBAL	R7 K11 ; R7 := 0xb009bbc6
	42	[5126]	MOVE     	R8 R2 ; R8 := R2
	43	[5126]	CALL     	R7 2 2 ; R7 := R7(R8)
	44	[5127]	SELF     	R8 R7 K12 ; R9 := R7; R8 := R7[0xef893aec]
	45	[5127]	CALL     	R8 2 2 ; R8 := R8(R9)
	46	[5127]	SELF     	R8 R8 K13 ; R9 := R8; R8 := R8[0x8f89d633]
	47	[5127]	CALL     	R8 2 2 ; R8 := R8(R9)
	48	[5127]	MOVE     	R6 R8 ; R6 := R8
	49	[5127]	JMP      	85 ; PC := 85
	50	[5130]	GETTABLE 	R8 R6 K14 ; R8 := R6["levelOverride"]
	51	[5130]	TEST     	R8 1 ; if R8 then PC := 85
	52	[5130]	JMP      	85 ; PC := 85
	53	[5130]	OP_LOADBOOL	R8 0 0 ; R8 := false
	54	[5130]	TEST     	R8 0 ; if not R8 then PC := 85
	55	[5130]	JMP      	85 ; PC := 85
	56	[5131]	NEWTABLE 	R8 0 0 ; R8 := {}
	57	[5132]	GETUPVAL 	R9 U1 ; R9 := U1
	58	[5132]	GETTABLE 	R9 R9 K15 ; R9 := R9[0x2196d0b1]
	59	[5132]	MOVE     	R10 R8 ; R10 := R8
	60	[5132]	LOADNIL  	R11 R11 ; R11 := nil
	61	[5132]	GETGLOBAL	R12 K1 ; R12 := 0xbe190284
	62	[5132]	SELF     	R12 R12 K16 ; R13 := R12; R12 := R12[0xa1c390fe]
	63	[5132]	CALL     	R12 2 0 ; R12,... := R12(R13)
	64	[5132]	CALL     	R9 0 1 ; R9(R10,...)
	65	[5133]	LOADK    	R9 := 1.000000
	66	[5133]	LEN      	R10 R8 ; R10 := # R8
	67	[5133]	LOADK    	R11 := 1.000000
	68	[5133]	FORPREP  	R9 84 ; R9 -= R11; PC := 84
	69	[5134]	GETGLOBAL	R13 K17 ; R13 := 0xce225efa
	70	[5134]	LOADK    	R14 := 0.000000
	71	[5134]	CALL     	R13 2 1 ; R13(R14)
	72	[5136]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	73	[5137]	GETTABLE 	R14 R13 K18 ; R14 := R13["Type"]
	74	[5139]	SELF     	R15 R14 K19 ; R16 := R14; R15 := R14[0xed4e0128]
	75	[5139]	CALL     	R15 2 2 ; R15 := R15(R16)
	76	[5139]	EQ       	0 R15 R2 ; if R15 ~= R2 then PC := 84
	77	[5139]	JMP      	84 ; PC := 84
	78	[5140]	SELF     	R15 R14 K12 ; R16 := R14; R15 := R14[0xef893aec]
	79	[5140]	CALL     	R15 2 2 ; R15 := R15(R16)
	80	[5140]	SELF     	R15 R15 K13 ; R16 := R15; R15 := R15[0x8f89d633]
	81	[5140]	CALL     	R15 2 2 ; R15 := R15(R16)
	82	[5140]	MOVE     	R6 R15 ; R6 := R15
	83	[5141]	JMP      	85 ; PC := 85
	84	[5133]	FORLOOP  	R9 69 ; R9 += R11; if R9 <= R10 then begin PC := 69; R12 := R9 end
	85	[5146]	GETUPVAL 	R15 U1 ; R15 := U1
	86	[5146]	GETTABLE 	R15 R15 K20 ; R15 := R15[0xb73d420f]
	87	[5146]	CALL     	R15 1 2 ; R15 := R15()
	88	[5148]	GETUPVAL 	R16 U1 ; R16 := U1
	89	[5148]	GETTABLE 	R16 R16 K21 ; R16 := R16["UI_MODE_IN_SPACE_HUB"]
	90	[5148]	EQ       	0 R15 R16 ; if R15 ~= R16 then PC := 109
	91	[5148]	JMP      	109 ; PC := 109
	92	[5149]	GETGLOBAL	R16 K1 ; R16 := 0xbe190284
	93	[5149]	SELF     	R16 R16 K12 ; R17 := R16; R16 := R16[0xef893aec]
	94	[5149]	CALL     	R16 2 2 ; R16 := R16(R17)
	95	[5150]	GETTABLE 	R17 R16 K22 ; R17 := R16["location"]
	96	[5150]	EQ       	0 R17 R4 ; if R17 ~= R4 then PC := 109
	97	[5150]	JMP      	109 ; PC := 109
	98	[5151]	TEST     	R1 1 ; if R1 then PC := 104
	99	[5151]	JMP      	104 ; PC := 104
	100	[5154]	GETGLOBAL	R17 K23 ; R17 := 0x3d106989
	101	[5154]	LOADK    	R18 K24 ; R18 := "Received message to join a hub-squad while already in a hub. Staying put and hoping everyone's in the same location/instance."
	102	[5154]	CALL     	R17 2 1 ; R17(R18)
	103	[5155]	RETURN   	R0 1 ; return 
	104	[5158]	GETGLOBAL	R17 K25 ; R17 := 0xe7f2b02f
	105	[5158]	SELF     	R17 R17 K26 ; R18 := R17; R17 := R17[0x3b62d69a]
	106	[5158]	MOVE     	R19 R0 ; R19 := R0
	107	[5158]	OP_LOADBOOL	R20 1 0 ; R20 := true
	108	[5158]	CALL     	R17 4 1 ; R17(R18,R19,R20)
	109	[5162]	EQ       	0 R2 K27 ; if R2 ~= "DojoHUB" then PC := 245
	110	[5162]	JMP      	245 ; PC := 245
	111	[5164]	GETGLOBAL	R17 K28 ; R17 := 0x76ea806b
	112	[5164]	SELF     	R17 R17 K29 ; R18 := R17; R17 := R17[0x3f3ae64c]
	113	[5164]	LOADK    	R19 := 0.000000
	114	[5164]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	115	[5165]	SELF     	R18 R17 K30 ; R19 := R17; R18 := R17[0x300348b9]
	116	[5165]	CALL     	R18 2 2 ; R18 := R18(R19)
	117	[5165]	TEST     	R18 1 ; if R18 then PC := 123
	118	[5165]	JMP      	123 ; PC := 123
	119	[5166]	GETGLOBAL	R18 K23 ; R18 := 0x3d106989
	120	[5166]	LOADK    	R19 K31 ; R19 := "UGC restrictions in joining Dojo"
	121	[5166]	CALL     	R18 2 1 ; R18(R19)
	122	[5167]	RETURN   	R0 1 ; return 
	123	[5170]	GETGLOBAL	R18 K2 ; R18 := 0x7f5022cf
	124	[5170]	GETTABLE 	R18 R18 K3 ; R18 := R18[0xa5c556b9]
	125	[5170]	MOVE     	R19 R0 ; R19 := R0
	126	[5170]	GETUPVAL 	R20 U1 ; R20 := U1
	127	[5170]	GETTABLE 	R20 R20 K4 ; R20 := R20["TAG_SEPERATOR"]
	128	[5170]	ADD      	R21 R3 K6 ; R21 := R3 + 1.000000
	129	[5170]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	130	[5171]	TEST     	R18 0 ; if not R18 then PC := 150
	131	[5171]	JMP      	150 ; PC := 150
	132	[5172]	GETGLOBAL	R19 K32 ; R19 := _T
	133	[5172]	NEWTABLE 	R20 0 1 ; R20 := {}
	134	[5172]	SETTABLE 	R20 K34 K35 ; R20["Invite"] := true
	135	[5172]	SETTABLE 	R19 K33 R20 ; R19["gDojoData"] := R20
	136	[5174]	GETGLOBAL	R19 K32 ; R19 := _T
	137	[5174]	GETTABLE 	R19 R19 K33 ; R19 := R19["gDojoData"]
	138	[5174]	GETGLOBAL	R20 K2 ; R20 := 0x7f5022cf
	139	[5174]	GETTABLE 	R20 R20 K5 ; R20 := R20[0x1a94c9cc]
	140	[5174]	MOVE     	R21 R0 ; R21 := R0
	141	[5174]	ADD      	R22 R18 K6 ; R22 := R18 + 1.000000
	142	[5174]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	143	[5174]	SETTABLE 	R19 K36 R20 ; R19[0x603636ad] := R20
	144	[5175]	GETGLOBAL	R19 K32 ; R19 := _T
	145	[5175]	GETTABLE 	R19 R19 K33 ; R19 := R19["gDojoData"]
	146	[5175]	GETGLOBAL	R20 K25 ; R20 := 0xe7f2b02f
	147	[5175]	SELF     	R20 R20 K38 ; R21 := R20; R20 := R20[0x10d2c544]
	148	[5175]	CALL     	R20 2 2 ; R20 := R20(R21)
	149	[5175]	SETTABLE 	R19 K37 R20 ; R19["ContentURL"] := R20
	150	[5178]	GETGLOBAL	R19 K39 ; R19 := 0x3584dca2
	151	[5178]	CALL     	R19 1 2 ; R19 := R19()
	152	[5179]	GETGLOBAL	R20 K32 ; R20 := _T
	153	[5179]	GETTABLE 	R20 R20 K33 ; R20 := R20["gDojoData"]
	154	[5179]	EQ       	1 R20 K40 ; if R20 == nil then PC := 168
	155	[5179]	JMP      	168 ; PC := 168
	156	[5179]	GETGLOBAL	R20 K32 ; R20 := _T
	157	[5179]	GETTABLE 	R20 R20 K33 ; R20 := R20["gDojoData"]
	158	[5179]	GETTABLE 	R20 R20 K36 ; R20 := R20["GuildId"]
	159	[5179]	EQ       	1 R20 K40 ; if R20 == nil then PC := 168
	160	[5179]	JMP      	168 ; PC := 168
	161	[5179]	SELF     	R20 R19 K41 ; R21 := R19; R20 := R19[0x46e9d221]
	162	[5179]	GETGLOBAL	R22 K32 ; R22 := _T
	163	[5179]	GETTABLE 	R22 R22 K33 ; R22 := R22["gDojoData"]
	164	[5179]	GETTABLE 	R22 R22 K36 ; R22 := R22["GuildId"]
	165	[5179]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	166	[5179]	TEST     	R20 1 ; if R20 then PC := 180
	167	[5179]	JMP      	180 ; PC := 180
	168	[5180]	GETGLOBAL	R20 K23 ; R20 := 0x3d106989
	169	[5180]	LOADK    	R21 K42 ; R21 := "Couldn't find GuildId in the hubName, bailing!"
	170	[5180]	CALL     	R20 2 1 ; R20(R21)
	171	[5182]	GETGLOBAL	R20 K25 ; R20 := 0xe7f2b02f
	172	[5182]	SELF     	R20 R20 K26 ; R21 := R20; R20 := R20[0x3b62d69a]
	173	[5182]	LOADK    	R22 K43 ; R22 := ""
	174	[5182]	CALL     	R20 3 1 ; R20(R21,R22)
	175	[5183]	GETGLOBAL	R20 K25 ; R20 := 0xe7f2b02f
	176	[5183]	SELF     	R20 R20 K44 ; R21 := R20; R20 := R20[0x8229d239]
	177	[5183]	LOADK    	R22 K45 ; R22 := "OnLeaveDojoSquadDone"
	178	[5183]	CALL     	R20 3 1 ; R20(R21,R22)
	179	[5185]	RETURN   	R0 1 ; return 
	180	[5188]	GETUPVAL 	R20 U1 ; R20 := U1
	181	[5188]	GETTABLE 	R20 R20 K46 ; R20 := R20["UI_MODE_IN_DOJO"]
	182	[5188]	EQ       	0 R15 R20 ; if R15 ~= R20 then PC := 196
	183	[5188]	JMP      	196 ; PC := 196
	184	[5188]	GETGLOBAL	R20 K32 ; R20 := _T
	185	[5188]	GETTABLE 	R20 R20 K33 ; R20 := R20["gDojoData"]
	186	[5188]	GETTABLE 	R20 R20 K36 ; R20 := R20["GuildId"]
	187	[5188]	GETGLOBAL	R21 K1 ; R21 := 0xbe190284
	188	[5188]	SELF     	R21 R21 K47 ; R22 := R21; R21 := R21[0x713ce380]
	189	[5188]	CALL     	R21 2 2 ; R21 := R21(R22)
	190	[5188]	EQ       	0 R20 R21 ; if R20 ~= R21 then PC := 196
	191	[5188]	JMP      	196 ; PC := 196
	192	[5189]	GETGLOBAL	R20 K23 ; R20 := 0x3d106989
	193	[5189]	LOADK    	R21 K48 ; R21 := "Received message to join a Dojo-squad while already in the same Dojo. Staying put and hoping everyone's in the same location/instance."
	194	[5189]	CALL     	R20 2 1 ; R20(R21)
	195	[5190]	RETURN   	R0 1 ; return 
	196	[5194]	GETUPVAL 	R20 U2 ; R20 := U2
	197	[5194]	GETTABLE 	R20 R20 K49 ; R20 := R20[0x5273af13]
	198	[5194]	LOADK    	R21 K50 ; R21 := "dce"
	199	[5194]	OP_LOADBOOL	R22 1 0 ; R22 := true
	200	[5194]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	201	[5194]	TEST     	R20 0 ; if not R20 then PC := 204
	202	[5194]	JMP      	204 ; PC := 204
	203	[5194]	NOT      	R20 R1 ; R20 := not R1
	204	[5195]	TEST     	R20 0 ; if not R20 then PC := 228
	205	[5195]	JMP      	228 ; PC := 228
	206	[5195]	GETGLOBAL	R21 K32 ; R21 := _T
	207	[5195]	GETTABLE 	R21 R21 K33 ; R21 := R21["gDojoData"]
	208	[5195]	GETTABLE 	R21 R21 K37 ; R21 := R21["ContentURL"]
	209	[5195]	EQ       	1 R21 K43 ; if R21 == "" then PC := 228
	210	[5195]	JMP      	228 ; PC := 228
	211	[5195]	GETGLOBAL	R21 K51 ; R21 := 0xa94df70b
	212	[5195]	SELF     	R21 R21 K52 ; R22 := R21; R21 := R21[0x78040d9c]
	213	[5195]	GETGLOBAL	R23 K32 ; R23 := _T
	214	[5195]	GETTABLE 	R23 R23 K33 ; R23 := R23["gDojoData"]
	215	[5195]	GETTABLE 	R23 R23 K37 ; R23 := R23["ContentURL"]
	216	[5195]	OP_LOADBOOL	R24 1 0 ; R24 := true
	217	[5195]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	218	[5195]	TEST     	R21 0 ; if not R21 then PC := 228
	219	[5195]	JMP      	228 ; PC := 228
	220	[5197]	GETGLOBAL	R21 K53 ; R21 := 0x34291f5c
	221	[5197]	GETTABLE 	R21 R21 K54 ; R21 := R21[0x201a0824]
	222	[5197]	GETGLOBAL	R22 K32 ; R22 := _T
	223	[5197]	GETTABLE 	R22 R22 K33 ; R22 := R22["gDojoData"]
	224	[5197]	GETTABLE 	R22 R22 K37 ; R22 := R22["ContentURL"]
	225	[5197]	LOADK    	R23 K55 ; R23 := "OnDojoData"
	226	[5197]	CALL     	R21 3 1 ; R21(R22,R23)
	227	[5197]	JMP      	301 ; PC := 301
	228	[5199]	SELF     	R21 R17 K56 ; R22 := R17; R21 := R17[0x1012c7ec]
	229	[5199]	CALL     	R21 2 2 ; R21 := R21(R22)
	230	[5200]	GETGLOBAL	R22 K53 ; R22 := 0x34291f5c
	231	[5200]	GETTABLE 	R22 R22 K54 ; R22 := R22[0x201a0824]
	232	[5200]	GETGLOBAL	R23 K51 ; R23 := 0xa94df70b
	233	[5200]	SELF     	R23 R23 K57 ; R24 := R23; R23 := R23[0x2608b62f]
	234	[5200]	CALL     	R23 2 2 ; R23 := R23(R24)
	235	[5200]	LOADK    	R24 K58 ; R24 := "getGuildDojo.php?"
	236	[5200]	MOVE     	R25 R21 ; R25 := R21
	237	[5200]	LOADK    	R26 K59 ; R26 := "&guildId="
	238	[5200]	GETGLOBAL	R27 K32 ; R27 := _T
	239	[5200]	GETTABLE 	R27 R27 K33 ; R27 := R27["gDojoData"]
	240	[5200]	GETTABLE 	R27 R27 K36 ; R27 := R27["GuildId"]
	241	[5200]	CONCAT   	R23 R23 R27 ; R23 := R23 .. R24 .. R25 .. R26 .. R27
	242	[5200]	LOADK    	R24 K55 ; R24 := "OnDojoData"
	243	[5200]	CALL     	R22 3 1 ; R22(R23,R24)
	244	[5201]	JMP      	301 ; PC := 301
	245	[5203]	GETUPVAL 	R22 U3 ; R22 := U3
	246	[5203]	GETTABLE 	R22 R22 K60 ; R22 := R22[0x05b69533]
	247	[5203]	GETGLOBAL	R23 K7 ; R23 := 0x0469f296
	248	[5203]	MOVE     	R24 R0 ; R24 := R0
	249	[5203]	CALL     	R23 2 2 ; R23 := R23(R24)
	250	[5203]	MOVE     	R24 R6 ; R24 := R6
	251	[5203]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	252	[5204]	GETGLOBAL	R23 K0 ; R23 := 0x7b998233
	253	[5204]	MOVE     	R24 R22 ; R24 := R22
	254	[5204]	CALL     	R23 2 2 ; R23 := R23(R24)
	255	[5204]	TEST     	R23 0 ; if not R23 then PC := 261
	256	[5204]	JMP      	261 ; PC := 261
	257	[5205]	GETGLOBAL	R23 K23 ; R23 := 0x3d106989
	258	[5205]	LOADK    	R24 K61 ; R24 := "LevelArgs are null, cannot open level"
	259	[5205]	CALL     	R23 2 1 ; R23(R24)
	260	[5206]	RETURN   	R0 1 ; return 
	261	[5208]	SETTABLE 	R22 K62 K63 ; R22["loadFromLobby"] := false
	262	[5210]	GETGLOBAL	R23 K64 ; R23 := 0x89326c93
	263	[5210]	SELF     	R23 R23 K65 ; R24 := R23; R23 := R23[0x18d05d30]
	264	[5210]	CALL     	R23 2 2 ; R23 := R23(R24)
	265	[5210]	TEST     	R23 1 ; if R23 then PC := 297
	266	[5210]	JMP      	297 ; PC := 297
	267	[5210]	GETGLOBAL	R23 K1 ; R23 := 0xbe190284
	268	[5210]	SELF     	R23 R23 K66 ; R24 := R23; R23 := R23[0xf2deaf69]
	269	[5210]	GETGLOBAL	R25 K67 ; R25 := gLotusAttractModeGameRulesType
	270	[5210]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	271	[5210]	TEST     	R23 0 ; if not R23 then PC := 297
	272	[5210]	JMP      	297 ; PC := 297
	273	[5213]	SETTABLE 	R22 K68 K35 ; R22["loadToLobby"] := true
	274	[5214]	SETTABLE 	R22 K69 K35 ; R22["isLobby"] := true
	275	[5218]	GETGLOBAL	R23 K28 ; R23 := 0x76ea806b
	276	[5218]	SELF     	R23 R23 K29 ; R24 := R23; R23 := R23[0x3f3ae64c]
	277	[5218]	LOADK    	R25 := 0.000000
	278	[5218]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	279	[5219]	SELF     	R24 R23 K70 ; R25 := R23; R24 := R23[0x80563238]
	280	[5219]	CALL     	R24 2 2 ; R24 := R24(R25)
	281	[5220]	SELF     	R25 R24 K71 ; R26 := R24; R25 := R24[0xe4b15c4a]
	282	[5220]	MOVE     	R27 R22 ; R27 := R22
	283	[5220]	MOVE     	R28 R0 ; R28 := R0
	284	[5220]	GETUPVAL 	R29 U1 ; R29 := U1
	285	[5220]	GETTABLE 	R29 R29 K72 ; R29 := R29["HUB_TAG"]
	286	[5220]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	287	[5220]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	288	[5221]	GETGLOBAL	R25 K25 ; R25 := 0xe7f2b02f
	289	[5221]	SELF     	R25 R25 K26 ; R26 := R25; R25 := R25[0x3b62d69a]
	290	[5221]	MOVE     	R27 R0 ; R27 := R0
	291	[5221]	CALL     	R25 3 1 ; R25(R26,R27)
	292	[5223]	GETGLOBAL	R25 K53 ; R25 := 0x34291f5c
	293	[5223]	GETTABLE 	R25 R25 K73 ; R25 := R25[0x8ee24660]
	294	[5223]	OP_LOADBOOL	R26 1 0 ; R26 := true
	295	[5223]	CALL     	R25 2 1 ; R25(R26)
	296	[5224]	RETURN   	R0 1 ; return 
	297	[5227]	GETGLOBAL	R25 K53 ; R25 := 0x34291f5c
	298	[5227]	GETTABLE 	R25 R25 K74 ; R25 := R25[0x4e0a1dfc]
	299	[5227]	MOVE     	R26 R22 ; R26 := R22
	300	[5227]	CALL     	R25 2 1 ; R25(R26)
	301	[5229]	RETURN   	R0 1 ; return 

function #139 <?:5231,5288> (291 instructions, 1164 bytes at 00000160FEAFA470)
0 params, 23 slots, 1 upvalue, 0 locals, 70 constants, 0 functions
	1	[5233]	NEWTABLE 	R0 14 0 ; R0 := {}
	2	[5233]	NEWTABLE 	R1 0 3 ; R1 := {}
	3	[5234]	SETTABLE 	R1 K0 K1 ; R1["Collection"] := "weekly.accounts.ZephyrScore"
	4	[5234]	GETGLOBAL	R2 K3 ; R2 := 0x603636ad
	5	[5234]	LOADK    	R3 K4 ; R3 := "/Lotus/Language/Menu/Profile_ZephyrLeaderboard"
	6	[5234]	LOADNIL  	R4 R4 ; R4 := nil
	7	[5234]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[5234]	SETTABLE 	R1 K2 R2 ; R1["Title"] := R2
	9	[5234]	SETTABLE 	R1 K5 K6 ; R1["Weekly"] := true
	10	[5234]	NEWTABLE 	R2 0 3 ; R2 := {}
	11	[5235]	SETTABLE 	R2 K0 K7 ; R2["Collection"] := "weekly.accounts.SentinelGameScore"
	12	[5235]	GETGLOBAL	R3 K3 ; R3 := 0x603636ad
	13	[5235]	LOADK    	R4 K8 ; R4 := "/Lotus/Language/Menu/Profile_SentinelGameLeaderboard"
	14	[5235]	LOADNIL  	R5 R5 ; R5 := nil
	15	[5235]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	16	[5235]	SETTABLE 	R2 K2 R3 ; R2["Title"] := R3
	17	[5235]	SETTABLE 	R2 K5 K6 ; R2["Weekly"] := true
	18	[5235]	NEWTABLE 	R3 0 3 ; R3 := {}
	19	[5236]	SETTABLE 	R3 K0 K9 ; R3["Collection"] := "weekly.accounts.DojoObstacleScore"
	20	[5236]	GETGLOBAL	R4 K3 ; R4 := 0x603636ad
	21	[5236]	LOADK    	R5 K10 ; R5 := "/Lotus/Language/Menu/Profile_ObstacleScoreLeaderboard"
	22	[5236]	LOADNIL  	R6 R6 ; R6 := nil
	23	[5236]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	24	[5236]	SETTABLE 	R3 K2 R4 ; R3["Title"] := R4
	25	[5236]	SETTABLE 	R3 K5 K6 ; R3["Weekly"] := true
	26	[5236]	NEWTABLE 	R4 0 3 ; R4 := {}
	27	[5237]	SETTABLE 	R4 K0 K11 ; R4["Collection"] := "weekly.speedball.accounts.SB_WINS"
	28	[5237]	GETGLOBAL	R5 K12 ; R5 := 0xae91e43b
	29	[5237]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0x42b04007]
	30	[5237]	LOADK    	R7 K14 ; R7 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
	31	[5237]	OP_LOADBOOL	R8 1 0 ; R8 := true
	32	[5237]	NEWTABLE 	R9 0 1 ; R9 := {}
	33	[5238]	GETGLOBAL	R10 K3 ; R10 := 0x603636ad
	34	[5238]	LOADK    	R11 K16 ; R11 := "/Lotus/Language/Menu/Profile_SpeedballWins"
	35	[5238]	LOADNIL  	R12 R12 ; R12 := nil
	36	[5238]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	37	[5238]	SETTABLE 	R9 K15 R10 ; R9["TYPE"] := R10
	38	[5237]	CALL     	R5 5 2 ; R5 := R5(R6,R7,R8,R9)
	39	[5238]	SETTABLE 	R4 K2 R5 ; R4["Title"] := R5
	40	[5238]	SETTABLE 	R4 K5 K6 ; R4["Weekly"] := true
	41	[5238]	NEWTABLE 	R5 0 3 ; R5 := {}
	42	[5239]	SETTABLE 	R5 K0 K17 ; R5["Collection"] := "weekly.speedball.accounts.SB_POINTS"
	43	[5239]	GETGLOBAL	R6 K12 ; R6 := 0xae91e43b
	44	[5239]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0x42b04007]
	45	[5239]	LOADK    	R8 K14 ; R8 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
	46	[5239]	OP_LOADBOOL	R9 1 0 ; R9 := true
	47	[5239]	NEWTABLE 	R10 0 1 ; R10 := {}
	48	[5240]	GETGLOBAL	R11 K3 ; R11 := 0x603636ad
	49	[5240]	LOADK    	R12 K18 ; R12 := "/Lotus/Language/Menu/Profile_SpeedballPoints"
	50	[5240]	LOADNIL  	R13 R13 ; R13 := nil
	51	[5240]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	52	[5240]	SETTABLE 	R10 K15 R11 ; R10["TYPE"] := R11
	53	[5239]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	54	[5240]	SETTABLE 	R5 K2 R6 ; R5["Title"] := R6
	55	[5240]	SETTABLE 	R5 K5 K6 ; R5["Weekly"] := true
	56	[5240]	NEWTABLE 	R6 0 3 ; R6 := {}
	57	[5241]	SETTABLE 	R6 K0 K19 ; R6["Collection"] := "weekly.speedball.accounts.SB_GOALS"
	58	[5241]	GETGLOBAL	R7 K12 ; R7 := 0xae91e43b
	59	[5241]	SELF     	R7 R7 K13 ; R8 := R7; R7 := R7[0x42b04007]
	60	[5241]	LOADK    	R9 K14 ; R9 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
	61	[5241]	OP_LOADBOOL	R10 1 0 ; R10 := true
	62	[5241]	NEWTABLE 	R11 0 1 ; R11 := {}
	63	[5242]	GETGLOBAL	R12 K3 ; R12 := 0x603636ad
	64	[5242]	LOADK    	R13 K20 ; R13 := "/Lotus/Language/Menu/Profile_SpeedballGoals"
	65	[5242]	LOADNIL  	R14 R14 ; R14 := nil
	66	[5242]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	67	[5242]	SETTABLE 	R11 K15 R12 ; R11["TYPE"] := R12
	68	[5241]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	69	[5242]	SETTABLE 	R6 K2 R7 ; R6["Title"] := R7
	70	[5242]	SETTABLE 	R6 K5 K6 ; R6["Weekly"] := true
	71	[5242]	NEWTABLE 	R7 0 3 ; R7 := {}
	72	[5243]	SETTABLE 	R7 K0 K21 ; R7["Collection"] := "weekly.speedball.accounts.SB_ASSISTS"
	73	[5243]	GETGLOBAL	R8 K12 ; R8 := 0xae91e43b
	74	[5243]	SELF     	R8 R8 K13 ; R9 := R8; R8 := R8[0x42b04007]
	75	[5243]	LOADK    	R10 K14 ; R10 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
	76	[5243]	OP_LOADBOOL	R11 1 0 ; R11 := true
	77	[5243]	NEWTABLE 	R12 0 1 ; R12 := {}
	78	[5244]	GETGLOBAL	R13 K3 ; R13 := 0x603636ad
	79	[5244]	LOADK    	R14 K22 ; R14 := "/Lotus/Language/Menu/Profile_SpeedballAssists"
	80	[5244]	LOADNIL  	R15 R15 ; R15 := nil
	81	[5244]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	82	[5244]	SETTABLE 	R12 K15 R13 ; R12["TYPE"] := R13
	83	[5243]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	84	[5244]	SETTABLE 	R7 K2 R8 ; R7["Title"] := R8
	85	[5244]	SETTABLE 	R7 K5 K6 ; R7["Weekly"] := true
	86	[5244]	NEWTABLE 	R8 0 3 ; R8 := {}
	87	[5245]	SETTABLE 	R8 K0 K23 ; R8["Collection"] := "weekly.speedball.accounts.SB_REBOUNDS"
	88	[5245]	GETGLOBAL	R9 K12 ; R9 := 0xae91e43b
	89	[5245]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0x42b04007]
	90	[5245]	LOADK    	R11 K14 ; R11 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
	91	[5245]	OP_LOADBOOL	R12 1 0 ; R12 := true
	92	[5245]	NEWTABLE 	R13 0 1 ; R13 := {}
	93	[5246]	GETGLOBAL	R14 K3 ; R14 := 0x603636ad
	94	[5246]	LOADK    	R15 K24 ; R15 := "/Lotus/Language/Menu/Profile_SpeedballRebounds"
	95	[5246]	LOADNIL  	R16 R16 ; R16 := nil
	96	[5246]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	97	[5246]	SETTABLE 	R13 K15 R14 ; R13["TYPE"] := R14
	98	[5245]	CALL     	R9 5 2 ; R9 := R9(R10,R11,R12,R13)
	99	[5246]	SETTABLE 	R8 K2 R9 ; R8["Title"] := R9
	100	[5246]	SETTABLE 	R8 K5 K6 ; R8["Weekly"] := true
	101	[5246]	NEWTABLE 	R9 0 3 ; R9 := {}
	102	[5247]	SETTABLE 	R9 K0 K25 ; R9["Collection"] := "weekly.speedball.accounts.SB_SAVES"
	103	[5247]	GETGLOBAL	R10 K12 ; R10 := 0xae91e43b
	104	[5247]	SELF     	R10 R10 K13 ; R11 := R10; R10 := R10[0x42b04007]
	105	[5247]	LOADK    	R12 K14 ; R12 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
	106	[5247]	OP_LOADBOOL	R13 1 0 ; R13 := true
	107	[5247]	NEWTABLE 	R14 0 1 ; R14 := {}
	108	[5248]	GETGLOBAL	R15 K3 ; R15 := 0x603636ad
	109	[5248]	LOADK    	R16 K26 ; R16 := "/Lotus/Language/Menu/Profile_SpeedballSaves"
	110	[5248]	LOADNIL  	R17 R17 ; R17 := nil
	111	[5248]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	112	[5248]	SETTABLE 	R14 K15 R15 ; R14["TYPE"] := R15
	113	[5247]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	114	[5248]	SETTABLE 	R9 K2 R10 ; R9["Title"] := R10
	115	[5248]	SETTABLE 	R9 K5 K6 ; R9["Weekly"] := true
	116	[5248]	NEWTABLE 	R10 0 3 ; R10 := {}
	117	[5249]	SETTABLE 	R10 K0 K27 ; R10["Collection"] := "weekly.speedball.accounts.SB_PASSES"
	118	[5249]	GETGLOBAL	R11 K12 ; R11 := 0xae91e43b
	119	[5249]	SELF     	R11 R11 K13 ; R12 := R11; R11 := R11[0x42b04007]
	120	[5249]	LOADK    	R13 K14 ; R13 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
	121	[5249]	OP_LOADBOOL	R14 1 0 ; R14 := true
	122	[5249]	NEWTABLE 	R15 0 1 ; R15 := {}
	123	[5250]	GETGLOBAL	R16 K3 ; R16 := 0x603636ad
	124	[5250]	LOADK    	R17 K28 ; R17 := "/Lotus/Language/Menu/Profile_SpeedballPasses"
	125	[5250]	LOADNIL  	R18 R18 ; R18 := nil
	126	[5250]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	127	[5250]	SETTABLE 	R15 K15 R16 ; R15["TYPE"] := R16
	128	[5249]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	129	[5250]	SETTABLE 	R10 K2 R11 ; R10["Title"] := R11
	130	[5250]	SETTABLE 	R10 K5 K6 ; R10["Weekly"] := true
	131	[5250]	NEWTABLE 	R11 0 3 ; R11 := {}
	132	[5251]	SETTABLE 	R11 K0 K29 ; R11["Collection"] := "weekly.speedball.accounts.SB_CATCHES"
	133	[5251]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	134	[5251]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x42b04007]
	135	[5251]	LOADK    	R14 K14 ; R14 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
	136	[5251]	OP_LOADBOOL	R15 1 0 ; R15 := true
	137	[5251]	NEWTABLE 	R16 0 1 ; R16 := {}
	138	[5252]	GETGLOBAL	R17 K3 ; R17 := 0x603636ad
	139	[5252]	LOADK    	R18 K30 ; R18 := "/Lotus/Language/Menu/Profile_SpeedballCatches"
	140	[5252]	LOADNIL  	R19 R19 ; R19 := nil
	141	[5252]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	142	[5252]	SETTABLE 	R16 K15 R17 ; R16["TYPE"] := R17
	143	[5251]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	144	[5252]	SETTABLE 	R11 K2 R12 ; R11["Title"] := R12
	145	[5252]	SETTABLE 	R11 K5 K6 ; R11["Weekly"] := true
	146	[5252]	NEWTABLE 	R12 0 3 ; R12 := {}
	147	[5253]	SETTABLE 	R12 K0 K31 ; R12["Collection"] := "weekly.speedball.accounts.SB_INTERCEPTIONS"
	148	[5253]	GETGLOBAL	R13 K12 ; R13 := 0xae91e43b
	149	[5253]	SELF     	R13 R13 K13 ; R14 := R13; R13 := R13[0x42b04007]
	150	[5253]	LOADK    	R15 K14 ; R15 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
	151	[5253]	OP_LOADBOOL	R16 1 0 ; R16 := true
	152	[5253]	NEWTABLE 	R17 0 1 ; R17 := {}
	153	[5254]	GETGLOBAL	R18 K3 ; R18 := 0x603636ad
	154	[5254]	LOADK    	R19 K32 ; R19 := "/Lotus/Language/Menu/Profile_SpeedballInterceptions"
	155	[5254]	LOADNIL  	R20 R20 ; R20 := nil
	156	[5254]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	157	[5254]	SETTABLE 	R17 K15 R18 ; R17["TYPE"] := R18
	158	[5253]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	159	[5254]	SETTABLE 	R12 K2 R13 ; R12["Title"] := R13
	160	[5254]	SETTABLE 	R12 K5 K6 ; R12["Weekly"] := true
	161	[5254]	NEWTABLE 	R13 0 3 ; R13 := {}
	162	[5255]	SETTABLE 	R13 K0 K33 ; R13["Collection"] := "weekly.speedball.accounts.SB_CHECKS"
	163	[5255]	GETGLOBAL	R14 K12 ; R14 := 0xae91e43b
	164	[5255]	SELF     	R14 R14 K13 ; R15 := R14; R14 := R14[0x42b04007]
	165	[5255]	LOADK    	R16 K14 ; R16 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
	166	[5255]	OP_LOADBOOL	R17 1 0 ; R17 := true
	167	[5255]	NEWTABLE 	R18 0 1 ; R18 := {}
	168	[5256]	GETGLOBAL	R19 K3 ; R19 := 0x603636ad
	169	[5256]	LOADK    	R20 K34 ; R20 := "/Lotus/Language/Menu/Profile_SpeedballChecks"
	170	[5256]	LOADNIL  	R21 R21 ; R21 := nil
	171	[5256]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	172	[5256]	SETTABLE 	R18 K15 R19 ; R18["TYPE"] := R19
	173	[5255]	CALL     	R14 5 2 ; R14 := R14(R15,R16,R17,R18)
	174	[5256]	SETTABLE 	R13 K2 R14 ; R13["Title"] := R14
	175	[5256]	SETTABLE 	R13 K5 K6 ; R13["Weekly"] := true
	176	[5256]	NEWTABLE 	R14 0 3 ; R14 := {}
	177	[5257]	SETTABLE 	R14 K0 K35 ; R14["Collection"] := "weekly.speedball.accounts.SB_STEALS"
	178	[5257]	GETGLOBAL	R15 K12 ; R15 := 0xae91e43b
	179	[5257]	SELF     	R15 R15 K13 ; R16 := R15; R15 := R15[0x42b04007]
	180	[5257]	LOADK    	R17 K14 ; R17 := "/Lotus/Language/Menu/SpeedBallLeaderboard"
	181	[5257]	OP_LOADBOOL	R18 1 0 ; R18 := true
	182	[5257]	NEWTABLE 	R19 0 1 ; R19 := {}
	183	[5258]	GETGLOBAL	R20 K3 ; R20 := 0x603636ad
	184	[5258]	LOADK    	R21 K36 ; R21 := "/Lotus/Language/Menu/Profile_SpeedballSteals"
	185	[5258]	LOADNIL  	R22 R22 ; R22 := nil
	186	[5258]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	187	[5258]	SETTABLE 	R19 K15 R20 ; R19["TYPE"] := R20
	188	[5257]	CALL     	R15 5 2 ; R15 := R15(R16,R17,R18,R19)
	189	[5258]	SETTABLE 	R14 K2 R15 ; R14["Title"] := R15
	190	[5258]	SETTABLE 	R14 K5 K6 ; R14["Weekly"] := true
	191	[5259]	SETLIST  	R0 14 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 14
	192	[5261]	GETUPVAL 	R1 U0 ; R1 := U0
	193	[5261]	GETTABLE 	R1 R1 K37 ; R1 := R1[0x5e35d4d6]
	194	[5261]	CALL     	R1 1 2 ; R1 := R1()
	195	[5262]	SELF     	R2 R1 K38 ; R3 := R1; R2 := R1[0xd13b47be]
	196	[5262]	CALL     	R2 2 2 ; R2 := R2(R3)
	197	[5263]	SELF     	R3 R1 K39 ; R4 := R1; R3 := R1[0xc1dee03f]
	198	[5263]	CALL     	R3 2 2 ; R3 := R3(R4)
	199	[5265]	LOADK    	R4 := 1.000000
	200	[5265]	LEN      	R5 R3 ; R5 := # R3
	201	[5265]	LOADK    	R6 := 1.000000
	202	[5265]	FORPREP  	R4 289 ; R4 -= R6; PC := 289
	203	[5266]	GETGLOBAL	R8 K40 ; R8 := 0xce225efa
	204	[5266]	LOADK    	R9 := 0.000000
	205	[5266]	CALL     	R8 2 1 ; R8(R9)
	206	[5267]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	207	[5268]	LOADK    	R9 := 1.000000
	208	[5268]	LEN      	R10 R2 ; R10 := # R2
	209	[5268]	LOADK    	R11 := 1.000000
	210	[5268]	FORPREP  	R9 288 ; R9 -= R11; PC := 288
	211	[5269]	GETTABLE 	R13 R2 R12 ; R13 := R2[R12]
	212	[5270]	GETTABLE 	R14 R13 K41 ; R14 := R13["region"]
	213	[5270]	ADD      	R14 R14 K42 ; R14 := R14 + 1.000000
	214	[5270]	EQ       	0 R14 R7 ; if R14 ~= R7 then PC := 288
	215	[5270]	JMP      	288 ; PC := 288
	216	[5270]	GETTABLE 	R14 R13 K43 ; R14 := R13["name"]
	217	[5270]	SELF     	R14 R14 K44 ; R15 := R14; R14 := R14[0x56c01834]
	218	[5270]	CALL     	R14 2 2 ; R14 := R14(R15)
	219	[5270]	TEST     	R14 0 ; if not R14 then PC := 288
	220	[5270]	JMP      	288 ; PC := 288
	221	[5270]	GETTABLE 	R14 R13 K45 ; R14 := R13["nodeType"]
	222	[5270]	EQ       	1 R14 K47 ; if R14 == 0.000000 then PC := 227
	223	[5270]	JMP      	227 ; PC := 227
	224	[5270]	GETTABLE 	R14 R13 K45 ; R14 := R13["nodeType"]
	225	[5270]	EQ       	0 R14 K48 ; if R14 ~= 4.000000 then PC := 288
	226	[5270]	JMP      	288 ; PC := 288
	227	[5271]	SELF     	R14 R1 K49 ; R15 := R1; R14 := R1[0xc18bf6f0]
	228	[5271]	GETTABLE 	R16 R13 K43 ; R16 := R13["name"]
	229	[5271]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	230	[5272]	GETTABLE 	R15 R14 K50 ; R15 := R14["missionType"]
	231	[5273]	EQ       	0 R15 K51 ; if R15 ~= 8.000000 then PC := 236
	232	[5273]	JMP      	236 ; PC := 236
	233	[5273]	GETTABLE 	R16 R14 K52 ; R16 := R14["maxWaveNum"]
	234	[5273]	EQ       	1 R16 K47 ; if R16 == 0.000000 then PC := 254
	235	[5273]	JMP      	254 ; PC := 254
	236	[5273]	EQ       	1 R15 K53 ; if R15 == 2.000000 then PC := 254
	237	[5273]	JMP      	254 ; PC := 254
	238	[5274]	EQ       	1 R15 K54 ; if R15 == 13.000000 then PC := 254
	239	[5274]	JMP      	254 ; PC := 254
	240	[5274]	EQ       	1 R15 K55 ; if R15 == 17.000000 then PC := 254
	241	[5274]	JMP      	254 ; PC := 254
	242	[5275]	EQ       	1 R15 K56 ; if R15 == 27.000000 then PC := 254
	243	[5275]	JMP      	254 ; PC := 254
	244	[5275]	EQ       	1 R15 K57 ; if R15 == 30.000000 then PC := 254
	245	[5275]	JMP      	254 ; PC := 254
	246	[5276]	EQ       	1 R15 K58 ; if R15 == 32.000000 then PC := 254
	247	[5276]	JMP      	254 ; PC := 254
	248	[5276]	EQ       	1 R15 K59 ; if R15 == 33.000000 then PC := 254
	249	[5276]	JMP      	254 ; PC := 254
	250	[5277]	EQ       	1 R15 K60 ; if R15 == 34.000000 then PC := 254
	251	[5277]	JMP      	254 ; PC := 254
	252	[5277]	EQ       	0 R15 K61 ; if R15 ~= 35.000000 then PC := 288
	253	[5277]	JMP      	288 ; PC := 288
	254	[5278]	GETGLOBAL	R16 K12 ; R16 := 0xae91e43b
	255	[5278]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0x42b04007]
	256	[5278]	GETTABLE 	R18 R8 K43 ; R18 := R8["name"]
	257	[5278]	OP_LOADBOOL	R19 1 0 ; R19 := true
	258	[5278]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	259	[5279]	GETGLOBAL	R17 K12 ; R17 := 0xae91e43b
	260	[5279]	SELF     	R17 R17 K13 ; R18 := R17; R17 := R17[0x42b04007]
	261	[5279]	GETTABLE 	R19 R13 K62 ; R19 := R13["locTag"]
	262	[5279]	SELF     	R19 R19 K63 ; R20 := R19; R19 := R19[0x6d604ba7]
	263	[5279]	CALL     	R19 2 2 ; R19 := R19(R20)
	264	[5279]	OP_LOADBOOL	R20 1 0 ; R20 := true
	265	[5279]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	266	[5280]	GETGLOBAL	R18 K12 ; R18 := 0xae91e43b
	267	[5280]	SELF     	R18 R18 K13 ; R19 := R18; R18 := R18[0x42b04007]
	268	[5280]	LOADK    	R20 K64 ; R20 := "/Lotus/Language/Menu/RegionNode"
	269	[5280]	OP_LOADBOOL	R21 1 0 ; R21 := true
	270	[5280]	NEWTABLE 	R22 0 2 ; R22 := {}
	271	[5280]	SETTABLE 	R22 K65 R16 ; R22["REGION"] := R16
	272	[5280]	SETTABLE 	R22 K66 R17 ; R22["NODE"] := R17
	273	[5280]	CALL     	R18 5 2 ; R18 := R18(R19,R20,R21,R22)
	274	[5281]	NEWTABLE 	R19 0 3 ; R19 := {}
	275	[5281]	LOADK    	R20 K67 ; R20 := "weekly.accounts."
	276	[5281]	GETTABLE 	R21 R13 K43 ; R21 := R13["name"]
	277	[5281]	SELF     	R21 R21 K63 ; R22 := R21; R21 := R21[0x6d604ba7]
	278	[5281]	CALL     	R21 2 2 ; R21 := R21(R22)
	279	[5281]	CONCAT   	R20 R20 R21 ; R20 := R20 .. R21
	280	[5281]	SETTABLE 	R19 K0 R20 ; R19["Collection"] := R20
	281	[5281]	SETTABLE 	R19 K2 R18 ; R19["Title"] := R18
	282	[5281]	SETTABLE 	R19 K5 K6 ; R19["Weekly"] := true
	283	[5282]	GETGLOBAL	R20 K68 ; R20 := 0x33bdd652
	284	[5282]	GETTABLE 	R20 R20 K69 ; R20 := R20[0x23d5322f]
	285	[5282]	MOVE     	R21 R0 ; R21 := R0
	286	[5282]	MOVE     	R22 R19 ; R22 := R19
	287	[5282]	CALL     	R20 3 1 ; R20(R21,R22)
	288	[5268]	FORLOOP  	R9 211 ; R9 += R11; if R9 <= R10 then begin PC := 211; R12 := R9 end
	289	[5265]	FORLOOP  	R4 203 ; R4 += R6; if R4 <= R5 then begin PC := 203; R7 := R4 end
	290	[5287]	RETURN   	R0 2 ; return R0 
	291	[5288]	RETURN   	R0 1 ; return 

function #140 <?:5290,5312> (69 instructions, 276 bytes at 00000160FEAFC5E0)
0 params, 19 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[5291]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5291]	GETGLOBAL	R1 K1 ; R1 := 0xcb79539e
	3	[5291]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5291]	TEST     	R0 1 ; if R0 then PC := 69
	5	[5291]	JMP      	69 ; PC := 69
	6	[5291]	GETGLOBAL	R0 K2 ; R0 := _T
	7	[5291]	GETTABLE 	R0 R0 K3 ; R0 := R0["ShowNotification"]
	8	[5291]	EQ       	1 R0 K4 ; if R0 == nil then PC := 69
	9	[5291]	JMP      	69 ; PC := 69
	10	[5291]	GETGLOBAL	R0 K1 ; R0 := 0xcb79539e
	11	[5291]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x3689bfc7]
	12	[5291]	CALL     	R0 2 2 ; R0 := R0(R1)
	13	[5291]	TEST     	R0 0 ; if not R0 then PC := 69
	14	[5291]	JMP      	69 ; PC := 69
	15	[5292]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[5292]	CALL     	R0 1 2 ; R0 := R0()
	17	[5293]	GETGLOBAL	R1 K1 ; R1 := 0xcb79539e
	18	[5293]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x366febf1]
	19	[5293]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[5294]	LOADK    	R2 := 1.000000
	21	[5294]	LEN      	R3 R1 ; R3 := # R1
	22	[5294]	LOADK    	R4 := 1.000000
	23	[5294]	FORPREP  	R2 65 ; R2 -= R4; PC := 65
	24	[5295]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	25	[5295]	GETTABLE 	R6 R6 K7 ; R6 := R6["leaderboard"]
	26	[5296]	GETTABLE 	R7 R1 R5 ; R7 := R1[R5]
	27	[5296]	GETTABLE 	R7 R7 K8 ; R7 := R7["rank"]
	28	[5297]	LOADK    	R8 := 1.000000
	29	[5297]	LEN      	R9 R0 ; R9 := # R0
	30	[5297]	LOADK    	R10 := 1.000000
	31	[5297]	FORPREP  	R8 64 ; R8 -= R10; PC := 64
	32	[5298]	GETTABLE 	R12 R0 R11 ; R12 := R0[R11]
	33	[5298]	GETTABLE 	R12 R12 K9 ; R12 := R12["Collection"]
	34	[5298]	EQ       	0 R12 R6 ; if R12 ~= R6 then PC := 64
	35	[5298]	JMP      	64 ; PC := 64
	36	[5299]	LOADK    	R12 K10 ; R12 := "/Lotus/Language/Menu/LeaderboardPlacement"
	37	[5300]	GETTABLE 	R13 R0 R11 ; R13 := R0[R11]
	38	[5300]	GETTABLE 	R13 R13 K11 ; R13 := R13["Weekly"]
	39	[5300]	TEST     	R13 0 ; if not R13 then PC := 42
	40	[5300]	JMP      	42 ; PC := 42
	41	[5301]	LOADK    	R12 K12 ; R12 := "/Lotus/Language/Menu/LeaderboardPlacementWeekly"
	42	[5303]	GETGLOBAL	R13 K13 ; R13 := 0xae91e43b
	43	[5303]	SELF     	R13 R13 K14 ; R14 := R13; R13 := R13[0x42b04007]
	44	[5303]	MOVE     	R15 R12 ; R15 := R12
	45	[5303]	OP_LOADBOOL	R16 1 0 ; R16 := true
	46	[5303]	NEWTABLE 	R17 0 2 ; R17 := {}
	47	[5303]	SETTABLE 	R17 K15 R7 ; R17["RANK"] := R7
	48	[5303]	GETTABLE 	R18 R0 R11 ; R18 := R0[R11]
	49	[5303]	GETTABLE 	R18 R18 K17 ; R18 := R18["Title"]
	50	[5303]	SETTABLE 	R17 K16 R18 ; R17["LEADERBOARD"] := R18
	51	[5303]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	52	[5304]	GETGLOBAL	R14 K2 ; R14 := _T
	53	[5304]	GETTABLE 	R14 R14 K18 ; R14 := R14[0x7dce37bc]
	54	[5304]	MOVE     	R15 R13 ; R15 := R13
	55	[5304]	LOADK    	R16 K19 ; R16 := "Leaderboard"
	56	[5304]	CALL     	R14 3 1 ; R14(R15,R16)
	57	[5305]	GETGLOBAL	R14 K20 ; R14 := 0x3d106989
	58	[5305]	LOADK    	R15 K21 ; R15 := "LB Placement: \""
	59	[5305]	MOVE     	R16 R13 ; R16 := R13
	60	[5305]	LOADK    	R17 K22 ; R17 := "\""
	61	[5305]	CONCAT   	R15 R15 R17 ; R15 := R15 .. R16 .. R17
	62	[5305]	CALL     	R14 2 1 ; R14(R15)
	63	[5306]	JMP      	65 ; PC := 65
	64	[5297]	FORLOOP  	R8 32 ; R8 += R10; if R8 <= R9 then begin PC := 32; R11 := R8 end
	65	[5294]	FORLOOP  	R2 24 ; R2 += R4; if R2 <= R3 then begin PC := 24; R5 := R2 end
	66	[5310]	GETGLOBAL	R14 K1 ; R14 := 0xcb79539e
	67	[5310]	SELF     	R14 R14 K23 ; R15 := R14; R14 := R14[0x72876f0a]
	68	[5310]	CALL     	R14 2 1 ; R14(R15)
	69	[5312]	RETURN   	R0 1 ; return 

function #141 <?:5314,5330> (42 instructions, 168 bytes at 00000160FEAFCBE0)
0 params, 5 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[5315]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5315]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xff9d1292]
	3	[5315]	CALL     	R0 1 2 ; R0 := R0()
	4	[5316]	OP_LOADBOOL	R1 1 0 ; R1 := true
	5	[5317]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	6	[5317]	GETGLOBAL	R3 K2 ; R3 := mStyleBackgroundMovie
	7	[5317]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[5317]	TEST     	R2 1 ; if R2 then PC := 28
	9	[5317]	JMP      	28 ; PC := 28
	10	[5318]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	11	[5318]	MOVE     	R3 R0 ; R3 := R0
	12	[5318]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[5318]	TEST     	R2 1 ; if R2 then PC := 25
	14	[5318]	JMP      	25 ; PC := 25
	15	[5318]	GETGLOBAL	R2 K2 ; R2 := mStyleBackgroundMovie
	16	[5318]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x492f9da2]
	17	[5318]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[5318]	GETGLOBAL	R3 K4 ; R3 := 0x7ed0a956
	19	[5318]	MOVE     	R4 R0 ; R4 := R0
	20	[5318]	CALL     	R3 2 2 ; R3 := R3(R4)
	21	[5318]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 25
	22	[5318]	JMP      	25 ; PC := 25
	23	[5320]	OP_LOADBOOL	R1 0 0 ; R1 := false
	24	[5320]	JMP      	28 ; PC := 28
	25	[5322]	GETGLOBAL	R2 K2 ; R2 := mStyleBackgroundMovie
	26	[5322]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x32302b4a]
	27	[5322]	CALL     	R2 2 1 ; R2(R3)
	28	[5326]	TEST     	R1 0 ; if not R1 then PC := 42
	29	[5326]	JMP      	42 ; PC := 42
	30	[5326]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	31	[5326]	MOVE     	R3 R0 ; R3 := R0
	32	[5326]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[5326]	TEST     	R2 1 ; if R2 then PC := 42
	34	[5326]	JMP      	42 ; PC := 42
	35	[5327]	GETGLOBAL	R2 K6 ; R2 := _T
	36	[5327]	SETTABLE 	R2 K7 K8 ; R2["BackgroundVisible"] := nil
	37	[5328]	GETGLOBAL	R2 K9 ; R2 := 0xae91e43b
	38	[5328]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x1fd6abd0]
	39	[5328]	MOVE     	R4 R0 ; R4 := R0
	40	[5328]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	41	[5328]	SETGLOBALHASH	R2 K2 ; mStyleBackgroundMovie := R2
	42	[5330]	RETURN   	R0 1 ; return 

function #142 <?:5332,5381> (186 instructions, 744 bytes at 00000160FEAFCEB0)
0 params, 5 slots, 1 upvalue, 0 locals, 39 constants, 1 function
	1	[5334]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5334]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xced66ef6]
	3	[5334]	CALL     	R0 1 2 ; R0 := R0()
	4	[5335]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5335]	MOVE     	R2 R0 ; R2 := R0
	6	[5335]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5335]	TEST     	R1 1 ; if R1 then PC := 186
	8	[5335]	JMP      	186 ; PC := 186
	9	[5343]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	10	[5343]	MOVE     	R0 R0 ; R0 := R0
	11	[5345]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	12	[5345]	MOVE     	R3 R1 ; R3 := R1
	13	[5345]	LOADK    	R4 := 0.000000
	14	[5345]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[5345]	SETTABLE 	R2 K3 R3 ; R2["UISound_Open"] := R3
	16	[5346]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	17	[5346]	MOVE     	R3 R1 ; R3 := R1
	18	[5346]	LOADK    	R4 := 1.000000
	19	[5346]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[5346]	SETTABLE 	R2 K5 R3 ; R2["UISound_Close"] := R3
	21	[5347]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	22	[5347]	MOVE     	R3 R1 ; R3 := R1
	23	[5347]	LOADK    	R4 := 2.000000
	24	[5347]	CALL     	R3 2 2 ; R3 := R3(R4)
	25	[5347]	SETTABLE 	R2 K6 R3 ; R2["UISound_HudAchievement"] := R3
	26	[5348]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	27	[5348]	MOVE     	R3 R1 ; R3 := R1
	28	[5348]	LOADK    	R4 := 3.000000
	29	[5348]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[5348]	SETTABLE 	R2 K7 R3 ; R2["UISound_Focus"] := R3
	31	[5349]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	32	[5349]	MOVE     	R3 R1 ; R3 := R1
	33	[5349]	LOADK    	R4 := 4.000000
	34	[5349]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[5349]	SETTABLE 	R2 K8 R3 ; R2["UISound_Unfocus"] := R3
	36	[5350]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	37	[5350]	MOVE     	R3 R1 ; R3 := R1
	38	[5350]	LOADK    	R4 := 5.000000
	39	[5350]	CALL     	R3 2 2 ; R3 := R3(R4)
	40	[5350]	SETTABLE 	R2 K9 R3 ; R2["UISound_Select"] := R3
	41	[5351]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	42	[5351]	MOVE     	R3 R1 ; R3 := R1
	43	[5351]	LOADK    	R4 := 6.000000
	44	[5351]	CALL     	R3 2 2 ; R3 := R3(R4)
	45	[5351]	SETTABLE 	R2 K10 R3 ; R2["UISound_Scroll"] := R3
	46	[5352]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	47	[5352]	MOVE     	R3 R1 ; R3 := R1
	48	[5352]	LOADK    	R4 := 7.000000
	49	[5352]	CALL     	R3 2 2 ; R3 := R3(R4)
	50	[5352]	SETTABLE 	R2 K11 R3 ; R2["UISound_Purchase"] := R3
	51	[5353]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	52	[5353]	MOVE     	R3 R1 ; R3 := R1
	53	[5353]	LOADK    	R4 := 8.000000
	54	[5353]	CALL     	R3 2 2 ; R3 := R3(R4)
	55	[5353]	SETTABLE 	R2 K12 R3 ; R2["UISound_Error"] := R3
	56	[5354]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	57	[5354]	MOVE     	R3 R1 ; R3 := R1
	58	[5354]	LOADK    	R4 := 9.000000
	59	[5354]	CALL     	R3 2 2 ; R3 := R3(R4)
	60	[5354]	SETTABLE 	R2 K13 R3 ; R2["UISound_Type"] := R3
	61	[5355]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	62	[5355]	MOVE     	R3 R1 ; R3 := R1
	63	[5355]	LOADK    	R4 := 10.000000
	64	[5355]	CALL     	R3 2 2 ; R3 := R3(R4)
	65	[5355]	SETTABLE 	R2 K14 R3 ; R2["UISound_SearchType"] := R3
	66	[5356]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	67	[5356]	MOVE     	R3 R1 ; R3 := R1
	68	[5356]	LOADK    	R4 := 11.000000
	69	[5356]	CALL     	R3 2 2 ; R3 := R3(R4)
	70	[5356]	SETTABLE 	R2 K15 R3 ; R2["UISound_GridOpen"] := R3
	71	[5357]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	72	[5357]	MOVE     	R3 R1 ; R3 := R1
	73	[5357]	LOADK    	R4 := 12.000000
	74	[5357]	CALL     	R3 2 2 ; R3 := R3(R4)
	75	[5357]	SETTABLE 	R2 K16 R3 ; R2["UISound_GridOpenTwo"] := R3
	76	[5358]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	77	[5358]	MOVE     	R3 R1 ; R3 := R1
	78	[5358]	LOADK    	R4 := 13.000000
	79	[5358]	CALL     	R3 2 2 ; R3 := R3(R4)
	80	[5358]	SETTABLE 	R2 K17 R3 ; R2["UISound_GridRow"] := R3
	81	[5359]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	82	[5359]	MOVE     	R3 R1 ; R3 := R1
	83	[5359]	LOADK    	R4 := 14.000000
	84	[5359]	CALL     	R3 2 2 ; R3 := R3(R4)
	85	[5359]	SETTABLE 	R2 K18 R3 ; R2["UISound_DialogOpen"] := R3
	86	[5360]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	87	[5360]	MOVE     	R3 R1 ; R3 := R1
	88	[5360]	LOADK    	R4 := 15.000000
	89	[5360]	CALL     	R3 2 2 ; R3 := R3(R4)
	90	[5360]	SETTABLE 	R2 K19 R3 ; R2["UISound_DialogClose"] := R3
	91	[5361]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	92	[5361]	MOVE     	R3 R1 ; R3 := R1
	93	[5361]	LOADK    	R4 := 16.000000
	94	[5361]	CALL     	R3 2 2 ; R3 := R3(R4)
	95	[5361]	SETTABLE 	R2 K20 R3 ; R2["UISound_Countdown"] := R3
	96	[5362]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	97	[5362]	MOVE     	R3 R1 ; R3 := R1
	98	[5362]	LOADK    	R4 := 17.000000
	99	[5362]	CALL     	R3 2 2 ; R3 := R3(R4)
	100	[5362]	SETTABLE 	R2 K21 R3 ; R2["UISound_ItemTip"] := R3
	101	[5363]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	102	[5363]	MOVE     	R3 R1 ; R3 := R1
	103	[5363]	LOADK    	R4 := 18.000000
	104	[5363]	CALL     	R3 2 2 ; R3 := R3(R4)
	105	[5363]	SETTABLE 	R2 K22 R3 ; R2["UISound_ItemTipSection"] := R3
	106	[5364]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	107	[5364]	MOVE     	R3 R1 ; R3 := R1
	108	[5364]	LOADK    	R4 := 19.000000
	109	[5364]	CALL     	R3 2 2 ; R3 := R3(R4)
	110	[5364]	SETTABLE 	R2 K23 R3 ; R2["UISound_ButtonSelect"] := R3
	111	[5365]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	112	[5365]	MOVE     	R3 R1 ; R3 := R1
	113	[5365]	LOADK    	R4 := 20.000000
	114	[5365]	CALL     	R3 2 2 ; R3 := R3(R4)
	115	[5365]	SETTABLE 	R2 K24 R3 ; R2["UISound_CursorBlink"] := R3
	116	[5366]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	117	[5366]	MOVE     	R3 R1 ; R3 := R1
	118	[5366]	LOADK    	R4 := 21.000000
	119	[5366]	CALL     	R3 2 2 ; R3 := R3(R4)
	120	[5366]	SETTABLE 	R2 K25 R3 ; R2["UISound_SweetenerOne"] := R3
	121	[5367]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	122	[5367]	MOVE     	R3 R1 ; R3 := R1
	123	[5367]	LOADK    	R4 := 22.000000
	124	[5367]	CALL     	R3 2 2 ; R3 := R3(R4)
	125	[5367]	SETTABLE 	R2 K26 R3 ; R2["UISound_SweetenerTwo"] := R3
	126	[5368]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	127	[5368]	MOVE     	R3 R1 ; R3 := R1
	128	[5368]	LOADK    	R4 := 23.000000
	129	[5368]	CALL     	R3 2 2 ; R3 := R3(R4)
	130	[5368]	SETTABLE 	R2 K27 R3 ; R2["UISound_WindowOpen"] := R3
	131	[5369]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	132	[5369]	MOVE     	R3 R1 ; R3 := R1
	133	[5369]	LOADK    	R4 := 24.000000
	134	[5369]	CALL     	R3 2 2 ; R3 := R3(R4)
	135	[5369]	SETTABLE 	R2 K28 R3 ; R2["UISound_WindowClose"] := R3
	136	[5370]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	137	[5370]	MOVE     	R3 R1 ; R3 := R1
	138	[5370]	LOADK    	R4 := 25.000000
	139	[5370]	CALL     	R3 2 2 ; R3 := R3(R4)
	140	[5370]	SETTABLE 	R2 K29 R3 ; R2["UISound_LoginSuccess"] := R3
	141	[5371]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	142	[5371]	MOVE     	R3 R1 ; R3 := R1
	143	[5371]	LOADK    	R4 := 26.000000
	144	[5371]	CALL     	R3 2 2 ; R3 := R3(R4)
	145	[5371]	SETTABLE 	R2 K30 R3 ; R2["UISound_MissionStart"] := R3
	146	[5372]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	147	[5372]	MOVE     	R3 R1 ; R3 := R1
	148	[5372]	LOADK    	R4 := 27.000000
	149	[5372]	CALL     	R3 2 2 ; R3 := R3(R4)
	150	[5372]	SETTABLE 	R2 K31 R3 ; R2["UISound_VotingStarted"] := R3
	151	[5373]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	152	[5373]	MOVE     	R3 R1 ; R3 := R1
	153	[5373]	LOADK    	R4 := 28.000000
	154	[5373]	CALL     	R3 2 2 ; R3 := R3(R4)
	155	[5373]	SETTABLE 	R2 K32 R3 ; R2["UISound_LogoTransition"] := R3
	156	[5374]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	157	[5374]	MOVE     	R3 R1 ; R3 := R1
	158	[5374]	LOADK    	R4 := 29.000000
	159	[5374]	CALL     	R3 2 2 ; R3 := R3(R4)
	160	[5374]	SETTABLE 	R2 K33 R3 ; R2["UISound_ChatPM"] := R3
	161	[5375]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	162	[5375]	MOVE     	R3 R1 ; R3 := R1
	163	[5375]	LOADK    	R4 := 30.000000
	164	[5375]	CALL     	R3 2 2 ; R3 := R3(R4)
	165	[5375]	SETTABLE 	R2 K34 R3 ; R2["UISound_ChatDM"] := R3
	166	[5376]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	167	[5376]	MOVE     	R3 R1 ; R3 := R1
	168	[5376]	LOADK    	R4 := 31.000000
	169	[5376]	CALL     	R3 2 2 ; R3 := R3(R4)
	170	[5376]	SETTABLE 	R2 K35 R3 ; R2["UISound_ChatSquad"] := R3
	171	[5377]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	172	[5377]	MOVE     	R3 R1 ; R3 := R1
	173	[5377]	LOADK    	R4 := 32.000000
	174	[5377]	CALL     	R3 2 2 ; R3 := R3(R4)
	175	[5377]	SETTABLE 	R2 K36 R3 ; R2["UISound_StartDrag"] := R3
	176	[5378]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	177	[5378]	MOVE     	R3 R1 ; R3 := R1
	178	[5378]	LOADK    	R4 := 33.000000
	179	[5378]	CALL     	R3 2 2 ; R3 := R3(R4)
	180	[5378]	SETTABLE 	R2 K37 R3 ; R2["UISound_EndDrag"] := R3
	181	[5379]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	182	[5379]	MOVE     	R3 R1 ; R3 := R1
	183	[5379]	LOADK    	R4 := 34.000000
	184	[5379]	CALL     	R3 2 2 ; R3 := R3(R4)
	185	[5379]	SETTABLE 	R2 K38 R3 ; R2[0x3d106989] := R3
	186	[5381]	RETURN   	R0 1 ; return 

function #143 <?:5383,5395> (22 instructions, 88 bytes at 00000160FEAFDC20)
0 params, 4 slots, 3 upvalues, 0 locals, 8 constants, 0 functions
	1	[5384]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5384]	GETGLOBAL	R1 K1 ; R1 := 0x9ba7909f
	3	[5384]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5384]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[5384]	JMP      	7 ; PC := 7
	6	[5385]	RETURN   	R0 1 ; return 
	7	[5388]	GETGLOBAL	R0 K2 ; R0 := 0x3d106989
	8	[5388]	LOADK    	R1 K3 ; R1 := "UISTYLE: Style changed callback called"
	9	[5388]	CALL     	R0 2 1 ; R0(R1)
	10	[5391]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[5391]	GETTABLE 	R0 R0 K4 ; R0 := R0[0x58803cb6]
	12	[5391]	CALL     	R0 1 1 ; R0()
	13	[5392]	GETUPVAL 	R0 U1 ; R0 := U1
	14	[5392]	CALL     	R0 1 1 ; R0()
	15	[5393]	GETUPVAL 	R0 U2 ; R0 := U2
	16	[5393]	CALL     	R0 1 1 ; R0()
	17	[5394]	GETGLOBAL	R0 K1 ; R0 := 0x9ba7909f
	18	[5394]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x7e17ae26]
	19	[5394]	LOADK    	R2 K6 ; R2 := "OnStyleChangedCallback"
	20	[5394]	LOADK    	R3 K7 ; R3 := ""
	21	[5394]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	22	[5395]	RETURN   	R0 1 ; return 

function #144 <?:5397,5399> (3 instructions, 12 bytes at 00000160FEAFDE00)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5398]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5398]	CALL     	R0 1 1 ; R0()
	3	[5399]	RETURN   	R0 1 ; return 

function #145 <?:5401,5791> (1243 instructions, 4972 bytes at 00000160FEAFDED0)
0 params, 43 slots, 43 upvalues, 0 locals, 188 constants, 0 functions
	1	[5402]	GETGLOBAL	R0 K0 ; R0 := mControl
	2	[5402]	GETTABLE 	R0 R0 K1 ; R0 := R0["Initialized"]
	3	[5402]	TEST     	R0 1 ; if R0 then PC := 6
	4	[5402]	JMP      	6 ; PC := 6
	5	[5403]	RETURN   	R0 1 ; return 
	6	[5406]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	7	[5406]	GETGLOBAL	R1 K3 ; R1 := _T
	8	[5406]	GETTABLE 	R1 R1 K4 ; R1 := R1["BackgroundMovie"]
	9	[5406]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[5406]	TEST     	R0 0 ; if not R0 then PC := 20
	11	[5406]	JMP      	20 ; PC := 20
	12	[5406]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	13	[5406]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	14	[5406]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[5406]	TEST     	R0 1 ; if R0 then PC := 20
	16	[5406]	JMP      	20 ; PC := 20
	17	[5407]	GETGLOBAL	R0 K3 ; R0 := _T
	18	[5407]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	19	[5407]	SETTABLE 	R0 K4 R1 ; R0["BackgroundMovie"] := R1
	20	[5410]	GETGLOBAL	R0 K0 ; R0 := mControl
	21	[5410]	GETTABLE 	R0 R0 K6 ; R0 := R0["StyleInit"]
	22	[5410]	TEST     	R0 1 ; if R0 then PC := 28
	23	[5410]	JMP      	28 ; PC := 28
	24	[5411]	GETUPVAL 	R0 U0 ; R0 := U0
	25	[5411]	CALL     	R0 1 1 ; R0()
	26	[5412]	GETGLOBAL	R0 K0 ; R0 := mControl
	27	[5412]	SETTABLE 	R0 K6 K7 ; R0["StyleInit"] := true
	28	[5415]	GETUPVAL 	R0 U1 ; R0 := U1
	29	[5415]	GETTABLE 	R0 R0 K8 ; R0 := R0["IsLoading"]
	30	[5415]	TEST     	R0 0 ; if not R0 then PC := 47
	31	[5415]	JMP      	47 ; PC := 47
	32	[5415]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	33	[5415]	GETUPVAL 	R1 U1 ; R1 := U1
	34	[5415]	GETTABLE 	R1 R1 K9 ; R1 := R1["Loader"]
	35	[5415]	CALL     	R0 2 2 ; R0 := R0(R1)
	36	[5415]	TEST     	R0 1 ; if R0 then PC := 47
	37	[5415]	JMP      	47 ; PC := 47
	38	[5415]	GETUPVAL 	R0 U1 ; R0 := U1
	39	[5415]	GETTABLE 	R0 R0 K9 ; R0 := R0["Loader"]
	40	[5415]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0xd2d3875a]
	41	[5415]	CALL     	R0 2 2 ; R0 := R0(R1)
	42	[5415]	TEST     	R0 0 ; if not R0 then PC := 47
	43	[5415]	JMP      	47 ; PC := 47
	44	[5416]	GETUPVAL 	R0 U2 ; R0 := U2
	45	[5416]	GETUPVAL 	R1 U1 ; R1 := U1
	46	[5416]	CALL     	R0 2 1 ; R0(R1)
	47	[5419]	GETUPVAL 	R0 U3 ; R0 := U3
	48	[5419]	GETTABLE 	R0 R0 K11 ; R0 := R0[0x23ddc82a]
	49	[5419]	CALL     	R0 1 2 ; R0 := R0()
	50	[5419]	TEST     	R0 0 ; if not R0 then PC := 71
	51	[5419]	JMP      	71 ; PC := 71
	52	[5419]	GETUPVAL 	R0 U4 ; R0 := U4
	53	[5419]	GETTABLE 	R0 R0 K8 ; R0 := R0["IsLoading"]
	54	[5419]	TEST     	R0 0 ; if not R0 then PC := 71
	55	[5419]	JMP      	71 ; PC := 71
	56	[5419]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	57	[5419]	GETUPVAL 	R1 U4 ; R1 := U4
	58	[5419]	GETTABLE 	R1 R1 K9 ; R1 := R1["Loader"]
	59	[5419]	CALL     	R0 2 2 ; R0 := R0(R1)
	60	[5419]	TEST     	R0 1 ; if R0 then PC := 71
	61	[5419]	JMP      	71 ; PC := 71
	62	[5419]	GETUPVAL 	R0 U4 ; R0 := U4
	63	[5419]	GETTABLE 	R0 R0 K9 ; R0 := R0["Loader"]
	64	[5419]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0xd2d3875a]
	65	[5419]	CALL     	R0 2 2 ; R0 := R0(R1)
	66	[5419]	TEST     	R0 0 ; if not R0 then PC := 71
	67	[5419]	JMP      	71 ; PC := 71
	68	[5420]	GETUPVAL 	R0 U2 ; R0 := U2
	69	[5420]	GETUPVAL 	R1 U4 ; R1 := U4
	70	[5420]	CALL     	R0 2 1 ; R0(R1)
	71	[5423]	GETUPVAL 	R0 U5 ; R0 := U5
	72	[5423]	GETTABLE 	R0 R0 K8 ; R0 := R0["IsLoading"]
	73	[5423]	TEST     	R0 0 ; if not R0 then PC := 141
	74	[5423]	JMP      	141 ; PC := 141
	75	[5423]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	76	[5423]	GETUPVAL 	R1 U5 ; R1 := U5
	77	[5423]	GETTABLE 	R1 R1 K9 ; R1 := R1["Loader"]
	78	[5423]	CALL     	R0 2 2 ; R0 := R0(R1)
	79	[5423]	TEST     	R0 1 ; if R0 then PC := 141
	80	[5423]	JMP      	141 ; PC := 141
	81	[5423]	GETUPVAL 	R0 U5 ; R0 := U5
	82	[5423]	GETTABLE 	R0 R0 K9 ; R0 := R0["Loader"]
	83	[5423]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0xd2d3875a]
	84	[5423]	CALL     	R0 2 2 ; R0 := R0(R1)
	85	[5423]	TEST     	R0 0 ; if not R0 then PC := 141
	86	[5423]	JMP      	141 ; PC := 141
	87	[5424]	GETUPVAL 	R0 U5 ; R0 := U5
	88	[5424]	SETTABLE 	R0 K8 K12 ; R0["IsLoading"] := false
	89	[5426]	LOADK    	R0 K13 ; R0 := ""
	90	[5427]	LOADK    	R1 := 1.000000
	91	[5427]	GETUPVAL 	R2 U5 ; R2 := U5
	92	[5427]	GETTABLE 	R2 R2 K14 ; R2 := R2["Upgrades"]
	93	[5427]	LEN      	R2 R2 ; R2 := # R2
	94	[5427]	LOADK    	R3 := 1.000000
	95	[5427]	FORPREP  	R1 138 ; R1 -= R3; PC := 138
	96	[5428]	GETGLOBAL	R5 K15 ; R5 := 0xb009bbc6
	97	[5428]	GETUPVAL 	R6 U5 ; R6 := U5
	98	[5428]	GETTABLE 	R6 R6 K14 ; R6 := R6["Upgrades"]
	99	[5428]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	100	[5428]	CALL     	R5 2 2 ; R5 := R5(R6)
	101	[5429]	SELF     	R6 R5 K16 ; R7 := R5; R6 := R5[0xce30fcd8]
	102	[5429]	LOADK    	R8 K13 ; R8 := ""
	103	[5429]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	104	[5430]	GETTABLE 	R7 R6 K17 ; R7 := R6["affixes"]
	105	[5430]	EQ       	1 R7 K18 ; if R7 == nil then PC := 127
	106	[5430]	JMP      	127 ; PC := 127
	107	[5431]	LOADK    	R7 := 1.000000
	108	[5431]	GETTABLE 	R8 R6 K17 ; R8 := R6["affixes"]
	109	[5431]	LEN      	R8 R8 ; R8 := # R8
	110	[5431]	LOADK    	R9 := 1.000000
	111	[5431]	FORPREP  	R7 125 ; R7 -= R9; PC := 125
	112	[5432]	MOVE     	R11 R0 ; R11 := R0
	113	[5432]	GETUPVAL 	R12 U6 ; R12 := U6
	114	[5432]	GETTABLE 	R12 R12 K19 ; R12 := R12[0x06d055f9]
	115	[5432]	EQ       	1 R0 K13 ; if R0 == "" then PC := 118
	116	[5432]	JMP      	118 ; PC := 118
	117	[5432]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 118
	118	[5432]	OP_LOADBOOL	R13 1 0 ; R13 := true
	119	[5432]	LOADK    	R14 K13 ; R14 := ""
	120	[5432]	LOADK    	R15 K20 ; R15 := "\r\n"
	121	[5432]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	122	[5432]	GETTABLE 	R13 R6 K17 ; R13 := R6["affixes"]
	123	[5432]	GETTABLE 	R13 R13 R10 ; R13 := R13[R10]
	124	[5432]	CONCAT   	R0 R11 R13 ; R0 := R11 .. R12 .. R13
	125	[5431]	FORLOOP  	R7 112 ; R7 += R9; if R7 <= R8 then begin PC := 112; R10 := R7 end
	126	[5433]	JMP      	138 ; PC := 138
	127	[5435]	MOVE     	R11 R0 ; R11 := R0
	128	[5435]	LOADK    	R12 K20 ; R12 := "\r\n"
	129	[5435]	GETGLOBAL	R13 K5 ; R13 := 0xae91e43b
	130	[5435]	SELF     	R13 R13 K21 ; R14 := R13; R13 := R13[0x42b04007]
	131	[5435]	GETGLOBAL	R15 K22 ; R15 := 0x64fb1586
	132	[5435]	SELF     	R16 R5 K23 ; R17 := R5; R16 := R5[0x5ba460ac]
	133	[5435]	CALL     	R16 2 0 ; R16,... := R16(R17)
	134	[5435]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	135	[5435]	OP_LOADBOOL	R16 0 0 ; R16 := false
	136	[5435]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	137	[5435]	CONCAT   	R0 R11 R13 ; R0 := R11 .. R12 .. R13
	138	[5427]	FORLOOP  	R1 96 ; R1 += R3; if R1 <= R2 then begin PC := 96; R4 := R1 end
	139	[5438]	GETGLOBAL	R11 K3 ; R11 := _T
	140	[5438]	SETTABLE 	R11 K24 R0 ; R11["CurrentInvigoration"] := R0
	141	[5441]	GETUPVAL 	R11 U7 ; R11 := U7
	142	[5441]	GETTABLE 	R11 R11 K8 ; R11 := R11["IsLoading"]
	143	[5441]	TEST     	R11 0 ; if not R11 then PC := 161
	144	[5441]	JMP      	161 ; PC := 161
	145	[5441]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	146	[5441]	GETUPVAL 	R12 U7 ; R12 := U7
	147	[5441]	GETTABLE 	R12 R12 K9 ; R12 := R12["Loader"]
	148	[5441]	CALL     	R11 2 2 ; R11 := R11(R12)
	149	[5441]	TEST     	R11 1 ; if R11 then PC := 161
	150	[5441]	JMP      	161 ; PC := 161
	151	[5441]	GETUPVAL 	R11 U7 ; R11 := U7
	152	[5441]	GETTABLE 	R11 R11 K9 ; R11 := R11["Loader"]
	153	[5441]	SELF     	R11 R11 K10 ; R12 := R11; R11 := R11[0xd2d3875a]
	154	[5441]	CALL     	R11 2 2 ; R11 := R11(R12)
	155	[5441]	TEST     	R11 0 ; if not R11 then PC := 161
	156	[5441]	JMP      	161 ; PC := 161
	157	[5442]	GETUPVAL 	R11 U7 ; R11 := U7
	158	[5442]	SETTABLE 	R11 K8 K12 ; R11["IsLoading"] := false
	159	[5444]	GETUPVAL 	R11 U8 ; R11 := U8
	160	[5444]	CALL     	R11 1 1 ; R11()
	161	[5447]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	162	[5447]	GETGLOBAL	R12 K3 ; R12 := _T
	163	[5447]	GETTABLE 	R12 R12 K25 ; R12 := R12["HelminthSuitLoader"]
	164	[5447]	CALL     	R11 2 2 ; R11 := R11(R12)
	165	[5447]	TEST     	R11 1 ; if R11 then PC := 183
	166	[5447]	JMP      	183 ; PC := 183
	167	[5447]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	168	[5447]	GETGLOBAL	R12 K3 ; R12 := _T
	169	[5447]	GETTABLE 	R12 R12 K25 ; R12 := R12["HelminthSuitLoader"]
	170	[5447]	GETTABLE 	R12 R12 K9 ; R12 := R12["Loader"]
	171	[5447]	CALL     	R11 2 2 ; R11 := R11(R12)
	172	[5447]	TEST     	R11 1 ; if R11 then PC := 183
	173	[5447]	JMP      	183 ; PC := 183
	174	[5447]	GETGLOBAL	R11 K3 ; R11 := _T
	175	[5447]	GETTABLE 	R11 R11 K25 ; R11 := R11["HelminthSuitLoader"]
	176	[5447]	GETTABLE 	R11 R11 K9 ; R11 := R11["Loader"]
	177	[5447]	SELF     	R11 R11 K10 ; R12 := R11; R11 := R11[0xd2d3875a]
	178	[5447]	CALL     	R11 2 2 ; R11 := R11(R12)
	179	[5447]	TEST     	R11 0 ; if not R11 then PC := 183
	180	[5447]	JMP      	183 ; PC := 183
	181	[5448]	GETUPVAL 	R11 U9 ; R11 := U9
	182	[5448]	CALL     	R11 1 1 ; R11()
	183	[5451]	GETUPVAL 	R11 U10 ; R11 := U10
	184	[5451]	GETTABLE 	R11 R11 K8 ; R11 := R11["IsLoading"]
	185	[5451]	TEST     	R11 0 ; if not R11 then PC := 216
	186	[5451]	JMP      	216 ; PC := 216
	187	[5451]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	188	[5451]	GETGLOBAL	R12 K26 ; R12 := 0x89326c93
	189	[5451]	CALL     	R11 2 2 ; R11 := R11(R12)
	190	[5451]	TEST     	R11 1 ; if R11 then PC := 216
	191	[5451]	JMP      	216 ; PC := 216
	192	[5451]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	193	[5451]	GETUPVAL 	R12 U10 ; R12 := U10
	194	[5451]	GETTABLE 	R12 R12 K9 ; R12 := R12["Loader"]
	195	[5451]	CALL     	R11 2 2 ; R11 := R11(R12)
	196	[5451]	TEST     	R11 1 ; if R11 then PC := 216
	197	[5451]	JMP      	216 ; PC := 216
	198	[5451]	GETUPVAL 	R11 U10 ; R11 := U10
	199	[5451]	GETTABLE 	R11 R11 K9 ; R11 := R11["Loader"]
	200	[5451]	SELF     	R11 R11 K10 ; R12 := R11; R11 := R11[0xd2d3875a]
	201	[5451]	CALL     	R11 2 2 ; R11 := R11(R12)
	202	[5451]	TEST     	R11 0 ; if not R11 then PC := 216
	203	[5451]	JMP      	216 ; PC := 216
	204	[5452]	GETUPVAL 	R11 U10 ; R11 := U10
	205	[5452]	SETTABLE 	R11 K8 K12 ; R11["IsLoading"] := false
	206	[5455]	GETGLOBAL	R11 K26 ; R11 := 0x89326c93
	207	[5455]	SELF     	R11 R11 K27 ; R12 := R11; R11 := R11[0x05909209]
	208	[5455]	GETGLOBAL	R13 K28 ; R13 := 0x88efc25e
	209	[5455]	GETGLOBAL	R14 K29 ; R14 := 0x95a2efe1
	210	[5455]	SELF     	R14 R14 K30 ; R15 := R14; R14 := R14[0xed4e0128]
	211	[5455]	CALL     	R14 2 0 ; R14,... := R14(R15)
	212	[5455]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	213	[5455]	GETGLOBAL	R14 K31 ; R14 := ZERO_VECTOR
	214	[5455]	GETGLOBAL	R15 K32 ; R15 := ZERO_ROTATION
	215	[5455]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	216	[5458]	GETGLOBAL	R11 K3 ; R11 := _T
	217	[5458]	GETTABLE 	R11 R11 K33 ; R11 := R11["QueueFishTankPopulation"]
	218	[5458]	TEST     	R11 0 ; if not R11 then PC := 222
	219	[5458]	JMP      	222 ; PC := 222
	220	[5459]	GETUPVAL 	R11 U11 ; R11 := U11
	221	[5459]	CALL     	R11 1 1 ; R11()
	222	[5462]	GETGLOBAL	R11 K34 ; R11 := 0xb693b6c1
	223	[5462]	CALL     	R11 1 2 ; R11 := R11()
	224	[5464]	GETGLOBAL	R12 K5 ; R12 := 0xae91e43b
	225	[5464]	SELF     	R12 R12 K35 ; R13 := R12; R12 := R12[0x8a8c8d5a]
	226	[5464]	MOVE     	R14 R11 ; R14 := R11
	227	[5464]	CALL     	R12 3 1 ; R12(R13,R14)
	228	[5466]	GETGLOBAL	R12 K2 ; R12 := 0x7b998233
	229	[5466]	GETGLOBAL	R13 K36 ; R13 := mTimerMgr
	230	[5466]	CALL     	R12 2 2 ; R12 := R12(R13)
	231	[5466]	TEST     	R12 1 ; if R12 then PC := 237
	232	[5466]	JMP      	237 ; PC := 237
	233	[5467]	GETGLOBAL	R12 K36 ; R12 := mTimerMgr
	234	[5467]	SELF     	R12 R12 K37 ; R13 := R12; R12 := R12[0xfaa69527]
	235	[5467]	MOVE     	R14 R11 ; R14 := R11
	236	[5467]	CALL     	R12 3 1 ; R12(R13,R14)
	237	[5470]	GETGLOBAL	R12 K38 ; R12 := mQuestsNeedChecking
	238	[5470]	TEST     	R12 0 ; if not R12 then PC := 248
	239	[5470]	JMP      	248 ; PC := 248
	240	[5470]	GETGLOBAL	R12 K3 ; R12 := _T
	241	[5470]	GETTABLE 	R12 R12 K39 ; R12 := R12["ActiveQuestLoaded"]
	242	[5470]	TEST     	R12 0 ; if not R12 then PC := 248
	243	[5470]	JMP      	248 ; PC := 248
	244	[5471]	GETUPVAL 	R12 U12 ; R12 := U12
	245	[5471]	CALL     	R12 1 3 ; R12,R13 := R12()
	246	[5472]	NOT      	R14 R13 ; R14 := not R13
	247	[5472]	SETGLOBALHASH	R14 K38 ; mQuestsNeedChecking := R14
	248	[5475]	GETGLOBAL	R14 K2 ; R14 := 0x7b998233
	249	[5475]	GETGLOBAL	R15 K3 ; R15 := _T
	250	[5475]	GETTABLE 	R15 R15 K40 ; R15 := R15["DojoMgr"]
	251	[5475]	CALL     	R14 2 2 ; R14 := R14(R15)
	252	[5475]	TEST     	R14 1 ; if R14 then PC := 258
	253	[5475]	JMP      	258 ; PC := 258
	254	[5476]	GETGLOBAL	R14 K3 ; R14 := _T
	255	[5476]	GETTABLE 	R14 R14 K40 ; R14 := R14["DojoMgr"]
	256	[5476]	SELF     	R14 R14 K37 ; R15 := R14; R14 := R14[0xfaa69527]
	257	[5476]	CALL     	R14 2 1 ; R14(R15)
	258	[5479]	GETUPVAL 	R14 U13 ; R14 := U13
	259	[5479]	TEST     	R14 0 ; if not R14 then PC := 278
	260	[5479]	JMP      	278 ; PC := 278
	261	[5479]	GETGLOBAL	R14 K2 ; R14 := 0x7b998233
	262	[5479]	GETGLOBAL	R15 K41 ; R15 := 0x76ea806b
	263	[5479]	CALL     	R14 2 2 ; R14 := R14(R15)
	264	[5479]	TEST     	R14 1 ; if R14 then PC := 278
	265	[5479]	JMP      	278 ; PC := 278
	266	[5480]	GETGLOBAL	R14 K2 ; R14 := 0x7b998233
	267	[5480]	GETGLOBAL	R15 K42 ; R15 := 0x25d99d89
	268	[5480]	CALL     	R14 2 2 ; R14 := R14(R15)
	269	[5480]	TEST     	R14 1 ; if R14 then PC := 278
	270	[5480]	JMP      	278 ; PC := 278
	271	[5482]	GETGLOBAL	R14 K42 ; R14 := 0x25d99d89
	272	[5482]	SELF     	R14 R14 K43 ; R15 := R14; R14 := R14[0x000daadd]
	273	[5482]	LOADK    	R16 := 0.000000
	274	[5482]	LOADK    	R17 K44 ; R17 := "OnTrainingResultUploaded"
	275	[5482]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	276	[5483]	OP_LOADBOOL	R14 0 0 ; R14 := false
	277	[5483]	SETUPVAL 	R14 U13 ; U13 := R14
	278	[5487]	GETGLOBAL	R14 K45 ; R14 := mCurrentMode
	279	[5487]	EQ       	1 R14 K18 ; if R14 == nil then PC := 285
	280	[5487]	JMP      	285 ; PC := 285
	281	[5487]	GETGLOBAL	R14 K46 ; R14 := mCurrentGameRules
	282	[5487]	GETGLOBAL	R15 K47 ; R15 := 0xbe190284
	283	[5487]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 421
	284	[5487]	JMP      	421 ; PC := 421
	285	[5489]	GETGLOBAL	R14 K2 ; R14 := 0x7b998233
	286	[5489]	GETGLOBAL	R15 K47 ; R15 := 0xbe190284
	287	[5489]	CALL     	R14 2 2 ; R14 := R14(R15)
	288	[5489]	TEST     	R14 0 ; if not R14 then PC := 291
	289	[5489]	JMP      	291 ; PC := 291
	290	[5490]	RETURN   	R0 1 ; return 
	291	[5493]	GETGLOBAL	R14 K47 ; R14 := 0xbe190284
	292	[5493]	SETGLOBALHASH	R14 K46 ; mCurrentGameRules := R14
	293	[5494]	GETUPVAL 	R14 U3 ; R14 := U3
	294	[5494]	GETTABLE 	R14 R14 K48 ; R14 := R14[0xb73d420f]
	295	[5494]	CALL     	R14 1 2 ; R14 := R14()
	296	[5494]	SETGLOBALHASH	R14 K45 ; mCurrentMode := R14
	297	[5496]	GETGLOBAL	R14 K45 ; R14 := mCurrentMode
	298	[5496]	GETUPVAL 	R15 U3 ; R15 := U3
	299	[5496]	GETTABLE 	R15 R15 K49 ; R15 := R15["UI_MODE_IN_SPACE_SHIP"]
	300	[5496]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 307
	301	[5496]	JMP      	307 ; PC := 307
	302	[5496]	GETGLOBAL	R14 K47 ; R14 := 0xbe190284
	303	[5496]	SELF     	R14 R14 K11 ; R15 := R14; R14 := R14[0x23ddc82a]
	304	[5496]	CALL     	R14 2 2 ; R14 := R14(R15)
	305	[5496]	TEST     	R14 0 ; if not R14 then PC := 312
	306	[5496]	JMP      	312 ; PC := 312
	307	[5496]	GETGLOBAL	R14 K45 ; R14 := mCurrentMode
	308	[5496]	GETUPVAL 	R15 U3 ; R15 := U3
	309	[5496]	GETTABLE 	R15 R15 K50 ; R15 := R15["UI_MODE_IN_SPACE_HUB"]
	310	[5496]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 372
	311	[5496]	JMP      	372 ; PC := 372
	312	[5498]	GETGLOBAL	R14 K41 ; R14 := 0x76ea806b
	313	[5498]	SELF     	R14 R14 K51 ; R15 := R14; R14 := R14[0x3f3ae64c]
	314	[5498]	LOADK    	R16 := 0.000000
	315	[5498]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	316	[5499]	GETGLOBAL	R15 K41 ; R15 := 0x76ea806b
	317	[5499]	SELF     	R15 R15 K52 ; R16 := R15; R15 := R15[0x8792aaab]
	318	[5499]	CALL     	R15 2 2 ; R15 := R15(R16)
	319	[5499]	TEST     	R15 0 ; if not R15 then PC := 372
	320	[5499]	JMP      	372 ; PC := 372
	321	[5499]	GETGLOBAL	R15 K2 ; R15 := 0x7b998233
	322	[5499]	MOVE     	R16 R14 ; R16 := R14
	323	[5499]	CALL     	R15 2 2 ; R15 := R15(R16)
	324	[5499]	TEST     	R15 1 ; if R15 then PC := 372
	325	[5499]	JMP      	372 ; PC := 372
	326	[5500]	GETGLOBAL	R15 K53 ; R15 := 0x3d106989
	327	[5500]	LOADK    	R16 K54 ; R16 := "return to ship: initial sync"
	328	[5500]	CALL     	R15 2 1 ; R15(R16)
	329	[5501]	GETGLOBAL	R15 K3 ; R15 := _T
	330	[5501]	SETTABLE 	R15 K55 K7 ; R15["syncingInventory"] := true
	331	[5502]	SELF     	R15 R14 K56 ; R16 := R14; R15 := R14[0x80563238]
	332	[5502]	CALL     	R15 2 2 ; R15 := R15(R16)
	333	[5503]	SELF     	R16 R15 K57 ; R17 := R15; R16 := R15[0x08ead34d]
	334	[5503]	LOADK    	R18 K58 ; R18 := "OnInitialInventorySync"
	335	[5503]	OP_LOADBOOL	R19 1 0 ; R19 := true
	336	[5503]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	337	[5504]	SELF     	R16 R15 K59 ; R17 := R15; R16 := R15[0x24389ec3]
	338	[5504]	LOADK    	R18 K60 ; R18 := "OnInboxSync"
	339	[5504]	CALL     	R16 3 1 ; R16(R17,R18)
	340	[5505]	GETGLOBAL	R16 K45 ; R16 := mCurrentMode
	341	[5505]	GETUPVAL 	R17 U3 ; R17 := U3
	342	[5505]	GETTABLE 	R17 R17 K49 ; R17 := R17["UI_MODE_IN_SPACE_SHIP"]
	343	[5505]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 370
	344	[5505]	JMP      	370 ; PC := 370
	345	[5505]	GETGLOBAL	R16 K2 ; R16 := 0x7b998233
	346	[5505]	GETGLOBAL	R17 K3 ; R17 := _T
	347	[5505]	GETTABLE 	R17 R17 K61 ; R17 := R17["EndOfQuestOpen"]
	348	[5505]	CALL     	R16 2 2 ; R16 := R16(R17)
	349	[5505]	TEST     	R16 1 ; if R16 then PC := 355
	350	[5505]	JMP      	355 ; PC := 355
	351	[5505]	GETGLOBAL	R16 K3 ; R16 := _T
	352	[5505]	GETTABLE 	R16 R16 K61 ; R16 := R16["EndOfQuestOpen"]
	353	[5505]	TEST     	R16 1 ; if R16 then PC := 370
	354	[5505]	JMP      	370 ; PC := 370
	355	[5506]	SELF     	R16 R15 K62 ; R17 := R15; R16 := R15[0x8c21a288]
	356	[5506]	CALL     	R16 2 2 ; R16 := R16(R17)
	357	[5507]	GETGLOBAL	R17 K63 ; R17 := 0x34291f5c
	358	[5507]	GETTABLE 	R17 R17 K64 ; R17 := R17[0x397b920f]
	359	[5507]	MOVE     	R18 R16 ; R18 := R16
	360	[5507]	CALL     	R17 2 2 ; R17 := R17(R18)
	361	[5508]	GETGLOBAL	R18 K65 ; R18 := 0x5bced4c4
	362	[5508]	GETTABLE 	R18 R18 K66 ; R18 := R18[0xe4a5b3ca]
	363	[5508]	MOVE     	R19 R17 ; R19 := R17
	364	[5508]	CALL     	R18 2 2 ; R18 := R18(R19)
	365	[5508]	LE       	0 K67 R18 ; if 86400.000000 > R18 then PC := 370
	366	[5508]	JMP      	370 ; PC := 370
	367	[5509]	SELF     	R18 R15 K68 ; R19 := R15; R18 := R15[0xfe249742]
	368	[5509]	LOADK    	R20 K69 ; R20 := "OnLoginRewardSync"
	369	[5509]	CALL     	R18 3 1 ; R18(R19,R20)
	370	[5515]	GETUPVAL 	R18 U14 ; R18 := U14
	371	[5515]	SETTABLE 	R18 K70 K7 ; R18["mForceRefreshWorldStatePostLogin"] := true
	372	[5519]	GETGLOBAL	R18 K45 ; R18 := mCurrentMode
	373	[5519]	GETUPVAL 	R19 U3 ; R19 := U3
	374	[5519]	GETTABLE 	R19 R19 K49 ; R19 := R19["UI_MODE_IN_SPACE_SHIP"]
	375	[5519]	EQ       	1 R18 R19 ; if R18 == R19 then PC := 387
	376	[5519]	JMP      	387 ; PC := 387
	377	[5519]	GETGLOBAL	R18 K45 ; R18 := mCurrentMode
	378	[5519]	GETUPVAL 	R19 U3 ; R19 := U3
	379	[5519]	GETTABLE 	R19 R19 K50 ; R19 := R19["UI_MODE_IN_SPACE_HUB"]
	380	[5519]	EQ       	1 R18 R19 ; if R18 == R19 then PC := 387
	381	[5519]	JMP      	387 ; PC := 387
	382	[5519]	GETGLOBAL	R18 K45 ; R18 := mCurrentMode
	383	[5519]	GETUPVAL 	R19 U3 ; R19 := U3
	384	[5519]	GETTABLE 	R19 R19 K71 ; R19 := R19["UI_MODE_IN_DOJO"]
	385	[5519]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 399
	386	[5519]	JMP      	399 ; PC := 399
	387	[5521]	GETUPVAL 	R18 U10 ; R18 := U10
	388	[5521]	GETGLOBAL	R19 K72 ; R19 := 0xbd496aa1
	389	[5521]	GETTABLE 	R19 R19 K73 ; R19 := R19[0x42645da3]
	390	[5521]	NEWTABLE 	R20 0 0 ; R20 := {}
	391	[5521]	GETGLOBAL	R21 K29 ; R21 := 0x95a2efe1
	392	[5521]	SELF     	R21 R21 K30 ; R22 := R21; R21 := R21[0xed4e0128]
	393	[5521]	CALL     	R21 2 0 ; R21,... := R21(R22)
	394	[5521]	SETLIST  	R20 0 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 0
	395	[5521]	CALL     	R19 2 2 ; R19 := R19(R20)
	396	[5521]	SETTABLE 	R18 K9 R19 ; R18["Loader"] := R19
	397	[5522]	GETUPVAL 	R18 U10 ; R18 := U10
	398	[5522]	SETTABLE 	R18 K8 K7 ; R18["IsLoading"] := true
	399	[5525]	GETGLOBAL	R18 K45 ; R18 := mCurrentMode
	400	[5525]	GETUPVAL 	R19 U3 ; R19 := U3
	401	[5525]	GETTABLE 	R19 R19 K49 ; R19 := R19["UI_MODE_IN_SPACE_SHIP"]
	402	[5525]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 406
	403	[5525]	JMP      	406 ; PC := 406
	404	[5526]	GETUPVAL 	R18 U15 ; R18 := U15
	405	[5526]	CALL     	R18 1 1 ; R18()
	406	[5529]	OP_LOADBOOL	R18 1 0 ; R18 := true
	407	[5529]	SETGLOBALHASH	R18 K74 ; mFadeInStarted := R18
	408	[5530]	GETGLOBAL	R18 K5 ; R18 := 0xae91e43b
	409	[5530]	SELF     	R18 R18 K75 ; R19 := R18; R18 := R18[0x58bec6d6]
	410	[5530]	LOADK    	R20 := 0.000000
	411	[5530]	CALL     	R18 3 1 ; R18(R19,R20)
	412	[5531]	GETUPVAL 	R18 U16 ; R18 := U16
	413	[5531]	CALL     	R18 1 1 ; R18()
	414	[5533]	GETUPVAL 	R18 U3 ; R18 := U3
	415	[5533]	GETTABLE 	R18 R18 K76 ; R18 := R18[0xd342d13d]
	416	[5533]	CALL     	R18 1 2 ; R18 := R18()
	417	[5533]	TEST     	R18 0 ; if not R18 then PC := 421
	418	[5533]	JMP      	421 ; PC := 421
	419	[5534]	GETUPVAL 	R18 U17 ; R18 := U17
	420	[5534]	CALL     	R18 1 1 ; R18()
	421	[5538]	GETGLOBAL	R18 K77 ; R18 := mAdditionalScreenCreated
	422	[5538]	EQ       	0 R18 K12 ; if R18 ~= false then PC := 435
	423	[5538]	JMP      	435 ; PC := 435
	424	[5538]	GETUPVAL 	R18 U3 ; R18 := U3
	425	[5538]	GETTABLE 	R18 R18 K76 ; R18 := R18[0xd342d13d]
	426	[5538]	CALL     	R18 1 2 ; R18 := R18()
	427	[5538]	TEST     	R18 1 ; if R18 then PC := 435
	428	[5538]	JMP      	435 ; PC := 435
	429	[5539]	GETGLOBAL	R18 K3 ; R18 := _T
	430	[5539]	GETTABLE 	R18 R18 K78 ; R18 := R18["gShowingLoginScreen"]
	431	[5539]	EQ       	0 R18 K12 ; if R18 ~= false then PC := 435
	432	[5539]	JMP      	435 ; PC := 435
	433	[5540]	GETUPVAL 	R18 U17 ; R18 := U17
	434	[5540]	CALL     	R18 1 1 ; R18()
	435	[5544]	GETGLOBAL	R18 K45 ; R18 := mCurrentMode
	436	[5544]	GETUPVAL 	R19 U3 ; R19 := U3
	437	[5544]	GETTABLE 	R19 R19 K79 ; R19 := R19["UI_MODE_IN_GAME"]
	438	[5544]	EQ       	1 R18 R19 ; if R18 == R19 then PC := 441
	439	[5544]	JMP      	441 ; PC := 441
	440	[5544]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 441
	441	[5544]	OP_LOADBOOL	R18 1 0 ; R18 := true
	442	[5545]	LOADNIL  	R19 R19 ; R19 := nil
	443	[5546]	TEST     	R18 0 ; if not R18 then PC := 447
	444	[5546]	JMP      	447 ; PC := 447
	445	[5547]	GETGLOBAL	R19 K42 ; R19 := 0x25d99d89
	446	[5547]	JMP      	463 ; PC := 463
	447	[5549]	GETGLOBAL	R20 K41 ; R20 := 0x76ea806b
	448	[5549]	SELF     	R20 R20 K51 ; R21 := R20; R20 := R20[0x3f3ae64c]
	449	[5549]	LOADK    	R22 := 0.000000
	450	[5549]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	451	[5550]	GETGLOBAL	R21 K2 ; R21 := 0x7b998233
	452	[5550]	MOVE     	R22 R20 ; R22 := R20
	453	[5550]	CALL     	R21 2 2 ; R21 := R21(R22)
	454	[5550]	TEST     	R21 1 ; if R21 then PC := 463
	455	[5550]	JMP      	463 ; PC := 463
	456	[5550]	SELF     	R21 R20 K80 ; R22 := R20; R21 := R20[0x22de02e1]
	457	[5550]	CALL     	R21 2 2 ; R21 := R21(R22)
	458	[5550]	TEST     	R21 0 ; if not R21 then PC := 463
	459	[5550]	JMP      	463 ; PC := 463
	460	[5551]	SELF     	R21 R20 K56 ; R22 := R20; R21 := R20[0x80563238]
	461	[5551]	CALL     	R21 2 2 ; R21 := R21(R22)
	462	[5551]	MOVE     	R19 R21 ; R19 := R21
	463	[5554]	GETUPVAL 	R21 U18 ; R21 := U18
	464	[5554]	MOVE     	R22 R11 ; R22 := R11
	465	[5554]	MOVE     	R23 R19 ; R23 := R19
	466	[5554]	MOVE     	R24 R18 ; R24 := R18
	467	[5554]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	468	[5556]	TEST     	R18 1 ; if R18 then PC := 675
	469	[5556]	JMP      	675 ; PC := 675
	470	[5557]	GETGLOBAL	R21 K45 ; R21 := mCurrentMode
	471	[5557]	GETUPVAL 	R22 U3 ; R22 := U3
	472	[5557]	GETTABLE 	R22 R22 K49 ; R22 := R22["UI_MODE_IN_SPACE_SHIP"]
	473	[5557]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 480
	474	[5557]	JMP      	480 ; PC := 480
	475	[5557]	GETUPVAL 	R21 U3 ; R21 := U3
	476	[5557]	GETTABLE 	R21 R21 K81 ; R21 := R21[0xcf1fcba4]
	477	[5557]	CALL     	R21 1 2 ; R21 := R21()
	478	[5557]	TEST     	R21 0 ; if not R21 then PC := 490
	479	[5557]	JMP      	490 ; PC := 490
	480	[5558]	GETUPVAL 	R21 U19 ; R21 := U19
	481	[5558]	CALL     	R21 1 1 ; R21()
	482	[5559]	GETUPVAL 	R21 U20 ; R21 := U20
	483	[5559]	CALL     	R21 1 1 ; R21()
	484	[5560]	GETUPVAL 	R21 U21 ; R21 := U21
	485	[5560]	CALL     	R21 1 1 ; R21()
	486	[5561]	GETUPVAL 	R21 U22 ; R21 := U22
	487	[5561]	CALL     	R21 1 1 ; R21()
	488	[5562]	GETUPVAL 	R21 U23 ; R21 := U23
	489	[5562]	CALL     	R21 1 1 ; R21()
	490	[5565]	GETGLOBAL	R21 K45 ; R21 := mCurrentMode
	491	[5565]	GETUPVAL 	R22 U3 ; R22 := U3
	492	[5565]	GETTABLE 	R22 R22 K49 ; R22 := R22["UI_MODE_IN_SPACE_SHIP"]
	493	[5565]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 549
	494	[5565]	JMP      	549 ; PC := 549
	495	[5566]	GETGLOBAL	R21 K3 ; R21 := _T
	496	[5566]	GETTABLE 	R21 R21 K82 ; R21 := R21["uiConsoleTriggersInitialized"]
	497	[5566]	TEST     	R21 0 ; if not R21 then PC := 549
	498	[5566]	JMP      	549 ; PC := 549
	499	[5566]	GETGLOBAL	R21 K2 ; R21 := 0x7b998233
	500	[5566]	GETGLOBAL	R22 K83 ; R22 := 0x0032441c
	501	[5566]	GETTABLE 	R22 R22 K84 ; R22 := R22["JunctionComplete"]
	502	[5566]	CALL     	R21 2 2 ; R21 := R21(R22)
	503	[5566]	TEST     	R21 1 ; if R21 then PC := 549
	504	[5566]	JMP      	549 ; PC := 549
	505	[5566]	GETGLOBAL	R21 K83 ; R21 := 0x0032441c
	506	[5566]	GETTABLE 	R21 R21 K84 ; R21 := R21["JunctionComplete"]
	507	[5566]	GETTABLE 	R21 R21 K85 ; R21 := R21["transitioning"]
	508	[5566]	TEST     	R21 1 ; if R21 then PC := 549
	509	[5566]	JMP      	549 ; PC := 549
	510	[5566]	GETGLOBAL	R21 K2 ; R21 := 0x7b998233
	511	[5566]	GETGLOBAL	R22 K26 ; R22 := 0x89326c93
	512	[5566]	SELF     	R22 R22 K86 ; R23 := R22; R22 := R22[0x78298275]
	513	[5566]	CALL     	R22 2 0 ; R22,... := R22(R23)
	514	[5566]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	515	[5566]	TEST     	R21 1 ; if R21 then PC := 549
	516	[5566]	JMP      	549 ; PC := 549
	517	[5566]	GETGLOBAL	R21 K3 ; R21 := _T
	518	[5566]	GETTABLE 	R21 R21 K87 ; R21 := R21[0x1c5b5b33]
	519	[5566]	LOADK    	R22 K88 ; R22 := "MissionStats"
	520	[5566]	CALL     	R21 2 2 ; R21 := R21(R22)
	521	[5566]	TEST     	R21 1 ; if R21 then PC := 549
	522	[5566]	JMP      	549 ; PC := 549
	523	[5566]	GETGLOBAL	R21 K3 ; R21 := _T
	524	[5566]	GETTABLE 	R21 R21 K89 ; R21 := R21["missionStatsPending"]
	525	[5566]	TEST     	R21 1 ; if R21 then PC := 549
	526	[5566]	JMP      	549 ; PC := 549
	527	[5566]	GETGLOBAL	R21 K90 ; R21 := 0x9ba7909f
	528	[5566]	SELF     	R21 R21 K91 ; R22 := R21; R21 := R21[0x5374b92e]
	529	[5566]	GETGLOBAL	R23 K92 ; R23 := 0x99b0a3fe
	530	[5566]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	531	[5566]	TEST     	R21 1 ; if R21 then PC := 549
	532	[5566]	JMP      	549 ; PC := 549
	533	[5567]	GETGLOBAL	R21 K3 ; R21 := _T
	534	[5567]	SETTABLE 	R21 K93 K94 ; R21["triggeredConsoleTag"] := "SolarMapOrigin"
	535	[5568]	GETUPVAL 	R21 U6 ; R21 := U6
	536	[5568]	GETTABLE 	R21 R21 K95 ; R21 := R21[0xa9882367]
	537	[5568]	LOADK    	R22 K96 ; R22 := "ConsoleTeleportAndActivate"
	538	[5568]	CALL     	R21 2 2 ; R21 := R21(R22)
	539	[5569]	GETGLOBAL	R22 K2 ; R22 := 0x7b998233
	540	[5569]	MOVE     	R23 R21 ; R23 := R21
	541	[5569]	CALL     	R22 2 2 ; R22 := R22(R23)
	542	[5569]	TEST     	R22 1 ; if R22 then PC := 546
	543	[5569]	JMP      	546 ; PC := 546
	544	[5570]	SELF     	R22 R21 K97 ; R23 := R21; R22 := R21[0xd91e1179]
	545	[5570]	CALL     	R22 2 1 ; R22(R23)
	546	[5572]	GETGLOBAL	R22 K83 ; R22 := 0x0032441c
	547	[5572]	GETTABLE 	R22 R22 K84 ; R22 := R22["JunctionComplete"]
	548	[5572]	SETTABLE 	R22 K85 K7 ; R22["transitioning"] := true
	549	[5576]	GETUPVAL 	R22 U24 ; R22 := U24
	550	[5576]	CALL     	R22 1 1 ; R22()
	551	[5579]	GETUPVAL 	R22 U25 ; R22 := U25
	552	[5579]	CALL     	R22 1 1 ; R22()
	553	[5581]	GETUPVAL 	R22 U26 ; R22 := U26
	554	[5581]	GETTABLE 	R22 R22 K98 ; R22 := R22["InviteQueued"]
	555	[5581]	LE       	0 K99 R22 ; if 0.000000 > R22 then PC := 596
	556	[5581]	JMP      	596 ; PC := 596
	557	[5582]	GETUPVAL 	R22 U26 ; R22 := U26
	558	[5582]	GETGLOBAL	R23 K65 ; R23 := 0x5bced4c4
	559	[5582]	GETTABLE 	R23 R23 K100 ; R23 := R23[0xb62ecfe0]
	560	[5582]	GETUPVAL 	R24 U26 ; R24 := U26
	561	[5582]	GETTABLE 	R24 R24 K98 ; R24 := R24["InviteQueued"]
	562	[5582]	GETGLOBAL	R25 K101 ; R25 := 0x67652851
	563	[5582]	CALL     	R25 1 2 ; R25 := R25()
	564	[5582]	SUB      	R24 R24 R25 ; R24 := R24 - R25
	565	[5582]	LOADK    	R25 := 0.000000
	566	[5582]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	567	[5582]	SETTABLE 	R22 K98 R23 ; R22["InviteQueued"] := R23
	568	[5583]	GETUPVAL 	R22 U26 ; R22 := U26
	569	[5583]	GETTABLE 	R22 R22 K98 ; R22 := R22["InviteQueued"]
	570	[5583]	EQ       	0 R22 K99 ; if R22 ~= 0.000000 then PC := 596
	571	[5583]	JMP      	596 ; PC := 596
	572	[5583]	GETGLOBAL	R22 K2 ; R22 := 0x7b998233
	573	[5583]	GETGLOBAL	R23 K26 ; R23 := 0x89326c93
	574	[5583]	SELF     	R23 R23 K102 ; R24 := R23; R23 := R23[0xdd25e9d1]
	575	[5583]	CALL     	R23 2 0 ; R23,... := R23(R24)
	576	[5583]	CALL     	R22 0 2 ; R22 := R22(R23,...)
	577	[5583]	TEST     	R22 0 ; if not R22 then PC := 596
	578	[5583]	JMP      	596 ; PC := 596
	579	[5583]	GETUPVAL 	R22 U3 ; R22 := U3
	580	[5583]	GETTABLE 	R22 R22 K103 ; R22 := R22[0x0deacd54]
	581	[5583]	CALL     	R22 1 2 ; R22 := R22()
	582	[5583]	TEST     	R22 1 ; if R22 then PC := 596
	583	[5583]	JMP      	596 ; PC := 596
	584	[5584]	GETUPVAL 	R22 U26 ; R22 := U26
	585	[5584]	SETTABLE 	R22 K98 K104 ; R22["InviteQueued"] := -1.000000
	586	[5585]	GETUPVAL 	R22 U3 ; R22 := U3
	587	[5585]	GETTABLE 	R22 R22 K105 ; R22 := R22[0x1f60d532]
	588	[5585]	GETUPVAL 	R23 U26 ; R23 := U26
	589	[5585]	GETTABLE 	R23 R23 K106 ; R23 := R23["Transmission"]
	590	[5585]	CALL     	R22 2 1 ; R22(R23)
	591	[5586]	GETGLOBAL	R22 K42 ; R22 := 0x25d99d89
	592	[5586]	SELF     	R22 R22 K107 ; R23 := R22; R22 := R22[0xbf6c9575]
	593	[5586]	GETUPVAL 	R24 U26 ; R24 := U26
	594	[5586]	GETTABLE 	R24 R24 K108 ; R24 := R24["NodeSymbol"]
	595	[5586]	CALL     	R22 3 1 ; R22(R23,R24)
	596	[5590]	GETGLOBAL	R22 K2 ; R22 := 0x7b998233
	597	[5590]	MOVE     	R23 R19 ; R23 := R19
	598	[5590]	CALL     	R22 2 2 ; R22 := R22(R23)
	599	[5590]	TEST     	R22 1 ; if R22 then PC := 613
	600	[5590]	JMP      	613 ; PC := 613
	601	[5591]	GETUPVAL 	R22 U27 ; R22 := U27
	602	[5591]	SELF     	R23 R19 K109 ; R24 := R19; R23 := R19[0x1e11a6d0]
	603	[5591]	CALL     	R23 2 2 ; R23 := R23(R24)
	604	[5591]	SELF     	R24 R19 K110 ; R25 := R19; R24 := R19[0x9b466ee3]
	605	[5591]	CALL     	R24 2 2 ; R24 := R24(R25)
	606	[5591]	SELF     	R25 R19 K111 ; R26 := R19; R25 := R19[0x4ce20fca]
	607	[5591]	CALL     	R25 2 2 ; R25 := R25(R26)
	608	[5591]	SELF     	R26 R19 K112 ; R27 := R19; R26 := R19[0xbd6729ff]
	609	[5591]	CALL     	R26 2 2 ; R26 := R26(R27)
	610	[5591]	SELF     	R27 R19 K113 ; R28 := R19; R27 := R19[0xa59dbd63]
	611	[5591]	CALL     	R27 2 0 ; R27,... := R27(R28)
	612	[5591]	CALL     	R22 0 1 ; R22(R23,...)
	613	[5594]	GETUPVAL 	R22 U28 ; R22 := U28
	614	[5594]	TEST     	R22 0 ; if not R22 then PC := 646
	615	[5594]	JMP      	646 ; PC := 646
	616	[5595]	OP_LOADBOOL	R22 0 0 ; R22 := false
	617	[5595]	SETUPVAL 	R22 U28 ; U28 := R22
	618	[5598]	GETGLOBAL	R22 K5 ; R22 := 0xae91e43b
	619	[5598]	SELF     	R22 R22 K21 ; R23 := R22; R22 := R22[0x42b04007]
	620	[5598]	LOADK    	R24 K114 ; R24 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailable"
	621	[5598]	OP_LOADBOOL	R25 0 0 ; R25 := false
	622	[5598]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	623	[5598]	LOADK    	R23 K115 ; R23 := "\r\n\r\n"
	624	[5598]	GETGLOBAL	R24 K5 ; R24 := 0xae91e43b
	625	[5598]	SELF     	R24 R24 K21 ; R25 := R24; R24 := R24[0x42b04007]
	626	[5598]	LOADK    	R26 K116 ; R26 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableKicked"
	627	[5598]	OP_LOADBOOL	R27 0 0 ; R27 := false
	628	[5598]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	629	[5598]	CONCAT   	R22 R22 R24 ; R22 := R22 .. R23 .. R24
	630	[5599]	GETUPVAL 	R23 U29 ; R23 := U29
	631	[5599]	CALL     	R23 1 1 ; R23()
	632	[5600]	GETUPVAL 	R23 U30 ; R23 := U30
	633	[5600]	MOVE     	R24 R22 ; R24 := R22
	634	[5600]	CALL     	R23 2 1 ; R23(R24)
	635	[5602]	GETGLOBAL	R23 K63 ; R23 := 0x34291f5c
	636	[5602]	GETTABLE 	R23 R23 K117 ; R23 := R23[0x056bfe8b]
	637	[5602]	CALL     	R23 1 2 ; R23 := R23()
	638	[5602]	TEST     	R23 1 ; if R23 then PC := 646
	639	[5602]	JMP      	646 ; PC := 646
	640	[5603]	GETGLOBAL	R23 K90 ; R23 := 0x9ba7909f
	641	[5603]	SELF     	R23 R23 K118 ; R24 := R23; R23 := R23[0xf37bdbf9]
	642	[5603]	GETGLOBAL	R25 K15 ; R25 := 0xb009bbc6
	643	[5603]	LOADK    	R26 K119 ; R26 := "/EE/Editor/ToolMenus/Commands/CmdRelaunch"
	644	[5603]	CALL     	R25 2 0 ; R25,... := R25(R26)
	645	[5603]	CALL     	R23 0 1 ; R23(R24,...)
	646	[5608]	GETGLOBAL	R23 K2 ; R23 := 0x7b998233
	647	[5608]	MOVE     	R24 R19 ; R24 := R19
	648	[5608]	CALL     	R23 2 2 ; R23 := R23(R24)
	649	[5608]	TEST     	R23 1 ; if R23 then PC := 669
	650	[5608]	JMP      	669 ; PC := 669
	651	[5608]	GETGLOBAL	R23 K120 ; R23 := mRefreshHighPriorityMessages
	652	[5608]	LE       	0 R23 K99 ; if R23 > 0.000000 then PC := 669
	653	[5608]	JMP      	669 ; PC := 669
	654	[5609]	SELF     	R23 R19 K121 ; R24 := R19; R23 := R19[0x63a9c319]
	655	[5609]	CALL     	R23 2 2 ; R23 := R23(R24)
	656	[5610]	LT       	0 K99 R23 ; if 0.000000 >= R23 then PC := 666
	657	[5610]	JMP      	666 ; PC := 666
	658	[5610]	GETGLOBAL	R24 K3 ; R24 := _T
	659	[5610]	GETTABLE 	R24 R24 K122 ; R24 := R24["gLastHighPriorityMessageCount"]
	660	[5610]	EQ       	1 R24 R23 ; if R24 == R23 then PC := 666
	661	[5610]	JMP      	666 ; PC := 666
	662	[5611]	GETGLOBAL	R24 K3 ; R24 := _T
	663	[5611]	SETTABLE 	R24 K123 K7 ; R24["gQueueMailbox"] := true
	664	[5612]	GETGLOBAL	R24 K3 ; R24 := _T
	665	[5612]	SETTABLE 	R24 K122 R23 ; R24["gLastHighPriorityMessageCount"] := R23
	666	[5615]	GETGLOBAL	R24 K124 ; R24 := mHighPriorityMessageDelay
	667	[5615]	SETGLOBALHASH	R24 K120 ; mRefreshHighPriorityMessages := R24
	668	[5615]	JMP      	698 ; PC := 698
	669	[5617]	GETGLOBAL	R24 K120 ; R24 := mRefreshHighPriorityMessages
	670	[5617]	GETGLOBAL	R25 K101 ; R25 := 0x67652851
	671	[5617]	CALL     	R25 1 2 ; R25 := R25()
	672	[5617]	SUB      	R24 R24 R25 ; R24 := R24 - R25
	673	[5617]	SETGLOBALHASH	R24 K120 ; mRefreshHighPriorityMessages := R24
	674	[5618]	JMP      	698 ; PC := 698
	675	[5619]	GETGLOBAL	R24 K3 ; R24 := _T
	676	[5619]	GETTABLE 	R24 R24 K125 ; R24 := R24["InSimulacrum"]
	677	[5619]	TEST     	R24 0 ; if not R24 then PC := 698
	678	[5619]	JMP      	698 ; PC := 698
	679	[5620]	GETUPVAL 	R24 U19 ; R24 := U19
	680	[5620]	CALL     	R24 1 1 ; R24()
	681	[5621]	GETGLOBAL	R24 K2 ; R24 := 0x7b998233
	682	[5621]	MOVE     	R25 R19 ; R25 := R19
	683	[5621]	CALL     	R24 2 2 ; R24 := R24(R25)
	684	[5621]	TEST     	R24 1 ; if R24 then PC := 698
	685	[5621]	JMP      	698 ; PC := 698
	686	[5622]	GETUPVAL 	R24 U27 ; R24 := U27
	687	[5622]	SELF     	R25 R19 K109 ; R26 := R19; R25 := R19[0x1e11a6d0]
	688	[5622]	CALL     	R25 2 2 ; R25 := R25(R26)
	689	[5622]	SELF     	R26 R19 K110 ; R27 := R19; R26 := R19[0x9b466ee3]
	690	[5622]	CALL     	R26 2 2 ; R26 := R26(R27)
	691	[5622]	SELF     	R27 R19 K111 ; R28 := R19; R27 := R19[0x4ce20fca]
	692	[5622]	CALL     	R27 2 2 ; R27 := R27(R28)
	693	[5622]	SELF     	R28 R19 K112 ; R29 := R19; R28 := R19[0xbd6729ff]
	694	[5622]	CALL     	R28 2 2 ; R28 := R28(R29)
	695	[5622]	SELF     	R29 R19 K113 ; R30 := R19; R29 := R19[0xa59dbd63]
	696	[5622]	CALL     	R29 2 0 ; R29,... := R29(R30)
	697	[5622]	CALL     	R24 0 1 ; R24(R25,...)
	698	[5626]	GETGLOBAL	R24 K3 ; R24 := _T
	699	[5626]	GETTABLE 	R24 R24 K126 ; R24 := R24["PendingMissionReqErrorDialog"]
	700	[5626]	TEST     	R24 0 ; if not R24 then PC := 707
	701	[5626]	JMP      	707 ; PC := 707
	702	[5627]	GETGLOBAL	R24 K3 ; R24 := _T
	703	[5627]	GETTABLE 	R24 R24 K127 ; R24 := R24[0x37ab0747]
	704	[5627]	CALL     	R24 1 1 ; R24()
	705	[5628]	GETGLOBAL	R24 K3 ; R24 := _T
	706	[5628]	SETTABLE 	R24 K126 K18 ; R24["PendingMissionReqErrorDialog"] := nil
	707	[5631]	GETGLOBAL	R24 K3 ; R24 := _T
	708	[5631]	GETTABLE 	R24 R24 K128 ; R24 := R24["Jukebox"]
	709	[5631]	EQ       	1 R24 K18 ; if R24 == nil then PC := 714
	710	[5631]	JMP      	714 ; PC := 714
	711	[5632]	GETUPVAL 	R24 U31 ; R24 := U31
	712	[5632]	GETTABLE 	R24 R24 K129 ; R24 := R24[0x5f64dde3]
	713	[5632]	CALL     	R24 1 1 ; R24()
	714	[5635]	GETUPVAL 	R24 U32 ; R24 := U32
	715	[5635]	GETTABLE 	R24 R24 K130 ; R24 := R24["DelayTime"]
	716	[5635]	LT       	0 K99 R24 ; if 0.000000 >= R24 then PC := 725
	717	[5635]	JMP      	725 ; PC := 725
	718	[5636]	GETUPVAL 	R24 U32 ; R24 := U32
	719	[5636]	GETUPVAL 	R25 U32 ; R25 := U32
	720	[5636]	GETTABLE 	R25 R25 K130 ; R25 := R25["DelayTime"]
	721	[5636]	GETGLOBAL	R26 K34 ; R26 := 0xb693b6c1
	722	[5636]	CALL     	R26 1 2 ; R26 := R26()
	723	[5636]	SUB      	R25 R25 R26 ; R25 := R25 - R26
	724	[5636]	SETTABLE 	R24 K130 R25 ; R24["DelayTime"] := R25
	725	[5639]	GETGLOBAL	R24 K2 ; R24 := 0x7b998233
	726	[5639]	GETUPVAL 	R25 U32 ; R25 := U32
	727	[5639]	GETTABLE 	R25 R25 K9 ; R25 := R25["Loader"]
	728	[5639]	CALL     	R24 2 2 ; R24 := R24(R25)
	729	[5639]	TEST     	R24 1 ; if R24 then PC := 822
	730	[5639]	JMP      	822 ; PC := 822
	731	[5639]	GETUPVAL 	R24 U32 ; R24 := U32
	732	[5639]	GETTABLE 	R24 R24 K9 ; R24 := R24["Loader"]
	733	[5639]	SELF     	R24 R24 K10 ; R25 := R24; R24 := R24[0xd2d3875a]
	734	[5639]	CALL     	R24 2 2 ; R24 := R24(R25)
	735	[5639]	TEST     	R24 0 ; if not R24 then PC := 822
	736	[5639]	JMP      	822 ; PC := 822
	737	[5639]	GETGLOBAL	R24 K2 ; R24 := 0x7b998233
	738	[5639]	GETUPVAL 	R25 U32 ; R25 := U32
	739	[5639]	GETTABLE 	R25 R25 K131 ; R25 := R25["QueuedTransmission"]
	740	[5639]	CALL     	R24 2 2 ; R24 := R24(R25)
	741	[5639]	TEST     	R24 1 ; if R24 then PC := 822
	742	[5639]	JMP      	822 ; PC := 822
	743	[5640]	GETUPVAL 	R24 U32 ; R24 := U32
	744	[5640]	GETTABLE 	R24 R24 K8 ; R24 := R24["IsLoading"]
	745	[5640]	TEST     	R24 0 ; if not R24 then PC := 761
	746	[5640]	JMP      	761 ; PC := 761
	747	[5641]	GETUPVAL 	R24 U32 ; R24 := U32
	748	[5641]	SETTABLE 	R24 K8 K12 ; R24["IsLoading"] := false
	749	[5642]	GETUPVAL 	R24 U32 ; R24 := U32
	750	[5642]	GETGLOBAL	R25 K15 ; R25 := 0xb009bbc6
	751	[5642]	GETUPVAL 	R26 U32 ; R26 := U32
	752	[5642]	GETTABLE 	R26 R26 K131 ; R26 := R26["QueuedTransmission"]
	753	[5642]	CALL     	R25 2 2 ; R25 := R25(R26)
	754	[5642]	SETTABLE 	R24 K131 R25 ; R24["QueuedTransmission"] := R25
	755	[5643]	GETUPVAL 	R24 U32 ; R24 := U32
	756	[5643]	GETUPVAL 	R25 U32 ; R25 := U32
	757	[5643]	GETTABLE 	R25 R25 K131 ; R25 := R25["QueuedTransmission"]
	758	[5643]	SELF     	R25 R25 K132 ; R26 := R25; R25 := R25[0xcab30b25]
	759	[5643]	CALL     	R25 2 2 ; R25 := R25(R26)
	760	[5643]	SETTABLE 	R24 K130 R25 ; R24["DelayTime"] := R25
	761	[5646]	GETUPVAL 	R24 U32 ; R24 := U32
	762	[5646]	GETTABLE 	R24 R24 K130 ; R24 := R24["DelayTime"]
	763	[5646]	LE       	0 R24 K99 ; if R24 > 0.000000 then PC := 822
	764	[5646]	JMP      	822 ; PC := 822
	765	[5647]	GETUPVAL 	R24 U32 ; R24 := U32
	766	[5647]	GETGLOBAL	R25 K15 ; R25 := 0xb009bbc6
	767	[5647]	GETUPVAL 	R26 U32 ; R26 := U32
	768	[5647]	GETTABLE 	R26 R26 K131 ; R26 := R26["QueuedTransmission"]
	769	[5647]	CALL     	R25 2 2 ; R25 := R25(R26)
	770	[5647]	SETTABLE 	R24 K131 R25 ; R24["QueuedTransmission"] := R25
	771	[5649]	GETUPVAL 	R24 U33 ; R24 := U33
	772	[5649]	SELF     	R24 R24 K133 ; R25 := R24; R24 := R24[0xca33ff41]
	773	[5649]	GETUPVAL 	R26 U32 ; R26 := U32
	774	[5649]	GETTABLE 	R26 R26 K131 ; R26 := R26["QueuedTransmission"]
	775	[5649]	CALL     	R24 3 3 ; R24,R25 := R24(R25,R26)
	776	[5651]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	777	[5651]	GETGLOBAL	R27 K3 ; R27 := _T
	778	[5651]	GETTABLE 	R27 R27 K134 ; R27 := R27["LypSyncDeco"]
	779	[5651]	CALL     	R26 2 2 ; R26 := R26(R27)
	780	[5651]	TEST     	R26 1 ; if R26 then PC := 795
	781	[5651]	JMP      	795 ; PC := 795
	782	[5652]	GETUPVAL 	R26 U32 ; R26 := U32
	783	[5652]	GETGLOBAL	R27 K3 ; R27 := _T
	784	[5652]	GETTABLE 	R27 R27 K134 ; R27 := R27["LypSyncDeco"]
	785	[5652]	SELF     	R27 R27 K136 ; R28 := R27; R27 := R27[0x659d451f]
	786	[5652]	GETUPVAL 	R29 U32 ; R29 := U32
	787	[5652]	GETTABLE 	R29 R29 K131 ; R29 := R29["QueuedTransmission"]
	788	[5652]	SELF     	R29 R29 K137 ; R30 := R29; R29 := R29[0xbd368681]
	789	[5652]	MOVE     	R31 R25 ; R31 := R25
	790	[5652]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	791	[5652]	OP_LOADBOOL	R30 0 0 ; R30 := false
	792	[5652]	CALL     	R27 4 2 ; R27 := R27(R28,R29,R30)
	793	[5652]	SETTABLE 	R26 K135 R27 ; R26["SoundInst"] := R27
	794	[5652]	JMP      	805 ; PC := 805
	795	[5654]	GETUPVAL 	R26 U32 ; R26 := U32
	796	[5654]	GETUPVAL 	R27 U6 ; R27 := U6
	797	[5654]	GETTABLE 	R27 R27 K136 ; R27 := R27[0x659d451f]
	798	[5654]	GETUPVAL 	R28 U32 ; R28 := U32
	799	[5654]	GETTABLE 	R28 R28 K131 ; R28 := R28["QueuedTransmission"]
	800	[5654]	SELF     	R28 R28 K137 ; R29 := R28; R28 := R28[0xbd368681]
	801	[5654]	MOVE     	R30 R25 ; R30 := R25
	802	[5654]	CALL     	R28 3 0 ; R28,... := R28(R29,R30)
	803	[5654]	CALL     	R27 0 2 ; R27 := R27(R28,...)
	804	[5654]	SETTABLE 	R26 K135 R27 ; R26["SoundInst"] := R27
	805	[5657]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	806	[5657]	GETUPVAL 	R27 U32 ; R27 := U32
	807	[5657]	GETTABLE 	R27 R27 K135 ; R27 := R27["SoundInst"]
	808	[5657]	CALL     	R26 2 2 ; R26 := R26(R27)
	809	[5657]	TEST     	R26 1 ; if R26 then PC := 818
	810	[5657]	JMP      	818 ; PC := 818
	811	[5658]	GETGLOBAL	R26 K26 ; R26 := 0x89326c93
	812	[5658]	SELF     	R26 R26 K138 ; R27 := R26; R26 := R26[0x0cde6e4f]
	813	[5658]	GETUPVAL 	R28 U32 ; R28 := U32
	814	[5658]	GETTABLE 	R28 R28 K135 ; R28 := R28["SoundInst"]
	815	[5658]	MOVE     	R29 R24 ; R29 := R24
	816	[5658]	OP_LOADBOOL	R30 1 0 ; R30 := true
	817	[5658]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	818	[5661]	GETUPVAL 	R26 U32 ; R26 := U32
	819	[5661]	SETTABLE 	R26 K9 K18 ; R26["Loader"] := nil
	820	[5662]	GETUPVAL 	R26 U32 ; R26 := U32
	821	[5662]	SETTABLE 	R26 K131 K18 ; R26["QueuedTransmission"] := nil
	822	[5666]	GETUPVAL 	R26 U32 ; R26 := U32
	823	[5666]	GETTABLE 	R26 R26 K139 ; R26 := R26["Playing"]
	824	[5666]	TEST     	R26 0 ; if not R26 then PC := 855
	825	[5666]	JMP      	855 ; PC := 855
	826	[5666]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	827	[5666]	GETUPVAL 	R27 U32 ; R27 := U32
	828	[5666]	GETTABLE 	R27 R27 K135 ; R27 := R27["SoundInst"]
	829	[5666]	CALL     	R26 2 2 ; R26 := R26(R27)
	830	[5666]	TEST     	R26 0 ; if not R26 then PC := 855
	831	[5666]	JMP      	855 ; PC := 855
	832	[5667]	GETUPVAL 	R26 U32 ; R26 := U32
	833	[5667]	SETTABLE 	R26 K139 K12 ; R26["Playing"] := false
	834	[5668]	GETGLOBAL	R26 K140 ; R26 := 0x4ec73e73
	835	[5668]	GETUPVAL 	R27 U32 ; R27 := U32
	836	[5668]	GETTABLE 	R27 R27 K141 ; R27 := R27["Callbacks"]
	837	[5668]	CALL     	R26 2 2 ; R26 := R26(R27)
	838	[5668]	EQ       	1 R26 K18 ; if R26 == nil then PC := 849
	839	[5668]	JMP      	849 ; PC := 849
	840	[5668]	GETUPVAL 	R26 U32 ; R26 := U32
	841	[5668]	GETTABLE 	R26 R26 K141 ; R26 := R26["Callbacks"]
	842	[5668]	GETTABLE 	R26 R26 K142 ; R26 := R26[1.000000]
	843	[5668]	EQ       	1 R26 K99 ; if R26 == 0.000000 then PC := 849
	844	[5668]	JMP      	849 ; PC := 849
	845	[5669]	GETUPVAL 	R26 U32 ; R26 := U32
	846	[5669]	GETTABLE 	R26 R26 K141 ; R26 := R26["Callbacks"]
	847	[5669]	GETTABLE 	R26 R26 K142 ; R26 := R26[1.000000]
	848	[5669]	CALL     	R26 1 1 ; R26()
	849	[5671]	GETGLOBAL	R26 K143 ; R26 := 0x33bdd652
	850	[5671]	GETTABLE 	R26 R26 K144 ; R26 := R26[0x9c1f3b5a]
	851	[5671]	GETUPVAL 	R27 U32 ; R27 := U32
	852	[5671]	GETTABLE 	R27 R27 K141 ; R27 := R27["Callbacks"]
	853	[5671]	LOADK    	R28 := 1.000000
	854	[5671]	CALL     	R26 3 1 ; R26(R27,R28)
	855	[5674]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	856	[5674]	GETUPVAL 	R27 U32 ; R27 := U32
	857	[5674]	GETTABLE 	R27 R27 K135 ; R27 := R27["SoundInst"]
	858	[5674]	CALL     	R26 2 2 ; R26 := R26(R27)
	859	[5674]	TEST     	R26 1 ; if R26 then PC := 866
	860	[5674]	JMP      	866 ; PC := 866
	861	[5675]	GETUPVAL 	R26 U32 ; R26 := U32
	862	[5675]	SETTABLE 	R26 K139 K7 ; R26["Playing"] := true
	863	[5676]	GETUPVAL 	R26 U34 ; R26 := U34
	864	[5676]	CALL     	R26 1 1 ; R26()
	865	[5676]	JMP      	901 ; PC := 901
	866	[5677]	GETUPVAL 	R26 U32 ; R26 := U32
	867	[5677]	GETTABLE 	R26 R26 K8 ; R26 := R26["IsLoading"]
	868	[5677]	TEST     	R26 1 ; if R26 then PC := 901
	869	[5677]	JMP      	901 ; PC := 901
	870	[5677]	GETUPVAL 	R26 U32 ; R26 := U32
	871	[5677]	GETTABLE 	R26 R26 K130 ; R26 := R26["DelayTime"]
	872	[5677]	LE       	0 R26 K99 ; if R26 > 0.000000 then PC := 901
	873	[5677]	JMP      	901 ; PC := 901
	874	[5677]	GETGLOBAL	R26 K140 ; R26 := 0x4ec73e73
	875	[5677]	GETUPVAL 	R27 U32 ; R27 := U32
	876	[5677]	GETTABLE 	R27 R27 K145 ; R27 := R27["WaitingTransmissions"]
	877	[5677]	CALL     	R26 2 2 ; R26 := R26(R27)
	878	[5677]	EQ       	1 R26 K18 ; if R26 == nil then PC := 901
	879	[5677]	JMP      	901 ; PC := 901
	880	[5678]	GETUPVAL 	R26 U32 ; R26 := U32
	881	[5678]	GETGLOBAL	R27 K143 ; R27 := 0x33bdd652
	882	[5678]	GETTABLE 	R27 R27 K144 ; R27 := R27[0x9c1f3b5a]
	883	[5678]	GETUPVAL 	R28 U32 ; R28 := U32
	884	[5678]	GETTABLE 	R28 R28 K145 ; R28 := R28["WaitingTransmissions"]
	885	[5678]	LOADK    	R29 := 1.000000
	886	[5678]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	887	[5678]	SETTABLE 	R26 K131 R27 ; R26["QueuedTransmission"] := R27
	888	[5679]	GETUPVAL 	R26 U32 ; R26 := U32
	889	[5679]	GETGLOBAL	R27 K72 ; R27 := 0xbd496aa1
	890	[5679]	GETTABLE 	R27 R27 K73 ; R27 := R27[0x42645da3]
	891	[5679]	NEWTABLE 	R28 0 0 ; R28 := {}
	892	[5679]	GETUPVAL 	R29 U32 ; R29 := U32
	893	[5679]	GETTABLE 	R29 R29 K131 ; R29 := R29["QueuedTransmission"]
	894	[5679]	SELF     	R29 R29 K30 ; R30 := R29; R29 := R29[0xed4e0128]
	895	[5679]	CALL     	R29 2 0 ; R29,... := R29(R30)
	896	[5679]	SETLIST  	R28 0 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 0
	897	[5679]	CALL     	R27 2 2 ; R27 := R27(R28)
	898	[5679]	SETTABLE 	R26 K9 R27 ; R26["Loader"] := R27
	899	[5680]	GETUPVAL 	R26 U32 ; R26 := U32
	900	[5680]	SETTABLE 	R26 K8 K7 ; R26["IsLoading"] := true
	901	[5683]	GETUPVAL 	R26 U32 ; R26 := U32
	902	[5683]	GETTABLE 	R26 R26 K8 ; R26 := R26["IsLoading"]
	903	[5683]	TEST     	R26 1 ; if R26 then PC := 917
	904	[5683]	JMP      	917 ; PC := 917
	905	[5683]	GETUPVAL 	R26 U32 ; R26 := U32
	906	[5683]	GETTABLE 	R26 R26 K130 ; R26 := R26["DelayTime"]
	907	[5683]	LE       	0 R26 K99 ; if R26 > 0.000000 then PC := 917
	908	[5683]	JMP      	917 ; PC := 917
	909	[5683]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	910	[5683]	GETUPVAL 	R27 U32 ; R27 := U32
	911	[5683]	GETTABLE 	R27 R27 K135 ; R27 := R27["SoundInst"]
	912	[5683]	CALL     	R26 2 2 ; R26 := R26(R27)
	913	[5683]	TEST     	R26 0 ; if not R26 then PC := 917
	914	[5683]	JMP      	917 ; PC := 917
	915	[5684]	GETGLOBAL	R26 K3 ; R26 := _T
	916	[5684]	SETTABLE 	R26 K134 K18 ; R26["LypSyncDeco"] := nil
	917	[5687]	GETUPVAL 	R26 U35 ; R26 := U35
	918	[5687]	GETTABLE 	R26 R26 K146 ; R26 := R26["Avatar"]
	919	[5687]	EQ       	1 R26 K18 ; if R26 == nil then PC := 927
	920	[5687]	JMP      	927 ; PC := 927
	921	[5688]	GETUPVAL 	R26 U35 ; R26 := U35
	922	[5688]	GETTABLE 	R26 R26 K146 ; R26 := R26["Avatar"]
	923	[5688]	SELF     	R26 R26 K147 ; R27 := R26; R26 := R26[0x98776060]
	924	[5688]	GETUPVAL 	R28 U35 ; R28 := U35
	925	[5688]	GETTABLE 	R28 R28 K148 ; R28 := R28["TargetPos"]
	926	[5688]	CALL     	R26 3 1 ; R26(R27,R28)
	927	[5691]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	928	[5691]	GETGLOBAL	R27 K47 ; R27 := 0xbe190284
	929	[5691]	CALL     	R26 2 2 ; R26 := R26(R27)
	930	[5691]	TEST     	R26 1 ; if R26 then PC := 941
	931	[5691]	JMP      	941 ; PC := 941
	932	[5693]	GETUPVAL 	R26 U36 ; R26 := U36
	933	[5693]	EQ       	1 R26 K18 ; if R26 == nil then PC := 941
	934	[5693]	JMP      	941 ; PC := 941
	935	[5694]	GETUPVAL 	R26 U36 ; R26 := U36
	936	[5695]	LOADNIL  	R27 R27 ; R27 := nil
	937	[5695]	SETUPVAL 	R27 U36 ; U36 := R27
	938	[5696]	GETUPVAL 	R27 U37 ; R27 := U37
	939	[5696]	MOVE     	R28 R26 ; R28 := R26
	940	[5696]	CALL     	R27 2 1 ; R27(R28)
	941	[5700]	GETGLOBAL	R27 K2 ; R27 := 0x7b998233
	942	[5700]	GETGLOBAL	R28 K26 ; R28 := 0x89326c93
	943	[5700]	CALL     	R27 2 2 ; R27 := R27(R28)
	944	[5700]	TEST     	R27 1 ; if R27 then PC := 1020
	945	[5700]	JMP      	1020 ; PC := 1020
	946	[5700]	GETUPVAL 	R27 U38 ; R27 := U38
	947	[5700]	GETTABLE 	R27 R27 K149 ; R27 := R27["Timer"]
	948	[5700]	LE       	0 K99 R27 ; if 0.000000 > R27 then PC := 1020
	949	[5700]	JMP      	1020 ; PC := 1020
	950	[5701]	GETGLOBAL	R27 K26 ; R27 := 0x89326c93
	951	[5701]	SELF     	R27 R27 K150 ; R28 := R27; R27 := R27[0x7c1a0374]
	952	[5701]	CALL     	R27 2 2 ; R27 := R27(R28)
	953	[5702]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	954	[5702]	MOVE     	R29 R27 ; R29 := R27
	955	[5702]	CALL     	R28 2 2 ; R28 := R28(R29)
	956	[5702]	TEST     	R28 1 ; if R28 then PC := 1020
	957	[5702]	JMP      	1020 ; PC := 1020
	958	[5703]	GETUPVAL 	R28 U38 ; R28 := U38
	959	[5703]	GETUPVAL 	R29 U38 ; R29 := U38
	960	[5703]	GETTABLE 	R29 R29 K149 ; R29 := R29["Timer"]
	961	[5703]	GETGLOBAL	R30 K101 ; R30 := 0x67652851
	962	[5703]	CALL     	R30 1 2 ; R30 := R30()
	963	[5703]	ADD      	R29 R29 R30 ; R29 := R29 + R30
	964	[5703]	SETTABLE 	R28 K149 R29 ; R28["Timer"] := R29
	965	[5704]	GETUPVAL 	R28 U38 ; R28 := U38
	966	[5704]	GETTABLE 	R28 R28 K149 ; R28 := R28["Timer"]
	967	[5704]	GETUPVAL 	R29 U38 ; R29 := U38
	968	[5704]	GETTABLE 	R29 R29 K151 ; R29 := R29["InTime"]
	969	[5704]	LE       	0 R28 R29 ; if R28 > R29 then PC := 982
	970	[5704]	JMP      	982 ; PC := 982
	971	[5705]	GETUPVAL 	R28 U38 ; R28 := U38
	972	[5705]	GETTABLE 	R28 R28 K149 ; R28 := R28["Timer"]
	973	[5705]	GETUPVAL 	R29 U38 ; R29 := U38
	974	[5705]	GETTABLE 	R29 R29 K151 ; R29 := R29["InTime"]
	975	[5705]	DIV      	R28 R28 R29 ; R28 := R28 / R29
	976	[5706]	SELF     	R29 R27 K152 ; R30 := R27; R29 := R27[0xb6df3e50]
	977	[5706]	GETUPVAL 	R31 U38 ; R31 := U38
	978	[5706]	GETTABLE 	R31 R31 K153 ; R31 := R31["FinalVal"]
	979	[5706]	MUL      	R31 R28 R31 ; R31 := R28 * R31
	980	[5706]	CALL     	R29 3 1 ; R29(R30,R31)
	981	[5706]	JMP      	1020 ; PC := 1020
	982	[5707]	GETUPVAL 	R29 U38 ; R29 := U38
	983	[5707]	GETTABLE 	R29 R29 K149 ; R29 := R29["Timer"]
	984	[5707]	GETUPVAL 	R30 U38 ; R30 := U38
	985	[5707]	GETTABLE 	R30 R30 K151 ; R30 := R30["InTime"]
	986	[5707]	GETUPVAL 	R31 U38 ; R31 := U38
	987	[5707]	GETTABLE 	R31 R31 K154 ; R31 := R31["OutTime"]
	988	[5707]	ADD      	R30 R30 R31 ; R30 := R30 + R31
	989	[5707]	LE       	0 R29 R30 ; if R29 > R30 then PC := 1015
	990	[5707]	JMP      	1015 ; PC := 1015
	991	[5708]	GETUPVAL 	R29 U38 ; R29 := U38
	992	[5708]	GETTABLE 	R29 R29 K155 ; R29 := R29["FullCallback"]
	993	[5708]	EQ       	1 R29 K18 ; if R29 == nil then PC := 1000
	994	[5708]	JMP      	1000 ; PC := 1000
	995	[5709]	GETUPVAL 	R29 U38 ; R29 := U38
	996	[5709]	GETTABLE 	R29 R29 K156 ; R29 := R29[0x91b51300]
	997	[5709]	CALL     	R29 1 1 ; R29()
	998	[5710]	GETUPVAL 	R29 U38 ; R29 := U38
	999	[5710]	SETTABLE 	R29 K155 K18 ; R29["FullCallback"] := nil
	1000	[5713]	GETUPVAL 	R29 U38 ; R29 := U38
	1001	[5713]	GETTABLE 	R29 R29 K149 ; R29 := R29["Timer"]
	1002	[5713]	GETUPVAL 	R30 U38 ; R30 := U38
	1003	[5713]	GETTABLE 	R30 R30 K151 ; R30 := R30["InTime"]
	1004	[5713]	SUB      	R29 R29 R30 ; R29 := R29 - R30
	1005	[5713]	GETUPVAL 	R30 U38 ; R30 := U38
	1006	[5713]	GETTABLE 	R30 R30 K154 ; R30 := R30["OutTime"]
	1007	[5713]	DIV      	R29 R29 R30 ; R29 := R29 / R30
	1008	[5713]	SUB      	R29 K142 R29 ; R29 := 1.000000 - R29
	1009	[5714]	SELF     	R30 R27 K152 ; R31 := R27; R30 := R27[0xb6df3e50]
	1010	[5714]	GETUPVAL 	R32 U38 ; R32 := U38
	1011	[5714]	GETTABLE 	R32 R32 K153 ; R32 := R32["FinalVal"]
	1012	[5714]	MUL      	R32 R29 R32 ; R32 := R29 * R32
	1013	[5714]	CALL     	R30 3 1 ; R30(R31,R32)
	1014	[5714]	JMP      	1020 ; PC := 1020
	1015	[5716]	GETUPVAL 	R30 U38 ; R30 := U38
	1016	[5716]	SETTABLE 	R30 K149 K104 ; R30["Timer"] := -1.000000
	1017	[5717]	SELF     	R30 R27 K152 ; R31 := R27; R30 := R27[0xb6df3e50]
	1018	[5717]	LOADK    	R32 := 0.000000
	1019	[5717]	CALL     	R30 3 1 ; R30(R31,R32)
	1020	[5722]	GETGLOBAL	R30 K2 ; R30 := 0x7b998233
	1021	[5722]	GETGLOBAL	R31 K26 ; R31 := 0x89326c93
	1022	[5722]	CALL     	R30 2 2 ; R30 := R30(R31)
	1023	[5722]	TEST     	R30 1 ; if R30 then PC := 1051
	1024	[5722]	JMP      	1051 ; PC := 1051
	1025	[5722]	GETGLOBAL	R30 K3 ; R30 := _T
	1026	[5722]	GETTABLE 	R30 R30 K157 ; R30 := R30["QuestStartCinPlaying"]
	1027	[5722]	TEST     	R30 1 ; if R30 then PC := 1051
	1028	[5722]	JMP      	1051 ; PC := 1051
	1029	[5723]	GETGLOBAL	R30 K26 ; R30 := 0x89326c93
	1030	[5723]	SELF     	R30 R30 K150 ; R31 := R30; R30 := R30[0x7c1a0374]
	1031	[5723]	CALL     	R30 2 2 ; R30 := R30(R31)
	1032	[5724]	GETGLOBAL	R31 K2 ; R31 := 0x7b998233
	1033	[5724]	MOVE     	R32 R30 ; R32 := R30
	1034	[5724]	CALL     	R31 2 2 ; R31 := R31(R32)
	1035	[5724]	TEST     	R31 1 ; if R31 then PC := 1051
	1036	[5724]	JMP      	1051 ; PC := 1051
	1037	[5725]	SELF     	R31 R30 K158 ; R32 := R30; R31 := R30[0x65c7544c]
	1038	[5725]	CALL     	R31 2 2 ; R31 := R31(R32)
	1039	[5726]	GETUPVAL 	R32 U39 ; R32 := U39
	1040	[5726]	EQ       	1 R32 K18 ; if R32 == nil then PC := 1045
	1041	[5726]	JMP      	1045 ; PC := 1045
	1042	[5726]	GETUPVAL 	R32 U39 ; R32 := U39
	1043	[5726]	EQ       	1 R32 R31 ; if R32 == R31 then PC := 1051
	1044	[5726]	JMP      	1051 ; PC := 1051
	1045	[5727]	SETUPVAL 	R31 U39 ; U39 := R31
	1046	[5728]	GETGLOBAL	R32 K90 ; R32 := 0x9ba7909f
	1047	[5728]	SELF     	R32 R32 K159 ; R33 := R32; R32 := R32[0x103453dc]
	1048	[5728]	MUL      	R34 R31 R31 ; R34 := R31 * R31
	1049	[5728]	SUB      	R34 K142 R34 ; R34 := 1.000000 - R34
	1050	[5728]	CALL     	R32 3 1 ; R32(R33,R34)
	1051	[5733]	GETGLOBAL	R32 K3 ; R32 := _T
	1052	[5733]	GETTABLE 	R32 R32 K160 ; R32 := R32["DelayedCall"]
	1053	[5733]	EQ       	1 R32 K18 ; if R32 == nil then PC := 1060
	1054	[5733]	JMP      	1060 ; PC := 1060
	1055	[5734]	GETGLOBAL	R32 K3 ; R32 := _T
	1056	[5734]	GETTABLE 	R32 R32 K161 ; R32 := R32[0xc3ff3268]
	1057	[5734]	CALL     	R32 1 1 ; R32()
	1058	[5735]	GETGLOBAL	R32 K3 ; R32 := _T
	1059	[5735]	SETTABLE 	R32 K160 K18 ; R32["DelayedCall"] := nil
	1060	[5738]	GETGLOBAL	R32 K2 ; R32 := 0x7b998233
	1061	[5738]	GETGLOBAL	R33 K3 ; R33 := _T
	1062	[5738]	GETTABLE 	R33 R33 K162 ; R33 := R33["ActionFigureLoadOutLoader"]
	1063	[5738]	CALL     	R32 2 2 ; R32 := R32(R33)
	1064	[5738]	TEST     	R32 1 ; if R32 then PC := 1070
	1065	[5738]	JMP      	1070 ; PC := 1070
	1066	[5739]	GETGLOBAL	R32 K3 ; R32 := _T
	1067	[5739]	GETTABLE 	R32 R32 K162 ; R32 := R32["ActionFigureLoadOutLoader"]
	1068	[5739]	SELF     	R32 R32 K37 ; R33 := R32; R32 := R32[0xfaa69527]
	1069	[5739]	CALL     	R32 2 1 ; R32(R33)
	1070	[5742]	GETGLOBAL	R32 K2 ; R32 := 0x7b998233
	1071	[5742]	GETGLOBAL	R33 K3 ; R33 := _T
	1072	[5742]	GETTABLE 	R33 R33 K163 ; R33 := R33["FavouriteLoadoutLoader"]
	1073	[5742]	CALL     	R32 2 2 ; R32 := R32(R33)
	1074	[5742]	TEST     	R32 0 ; if not R32 then PC := 1079
	1075	[5742]	JMP      	1079 ; PC := 1079
	1076	[5743]	GETGLOBAL	R32 K3 ; R32 := _T
	1077	[5743]	NEWTABLE 	R33 0 0 ; R33 := {}
	1078	[5743]	SETTABLE 	R32 K163 R33 ; R32["FavouriteLoadoutLoader"] := R33
	1079	[5745]	GETGLOBAL	R32 K2 ; R32 := 0x7b998233
	1080	[5745]	GETGLOBAL	R33 K3 ; R33 := _T
	1081	[5745]	GETTABLE 	R33 R33 K164 ; R33 := R33["FavWarframeAvatar"]
	1082	[5745]	CALL     	R32 2 2 ; R32 := R32(R33)
	1083	[5745]	TEST     	R32 0 ; if not R32 then PC := 1088
	1084	[5745]	JMP      	1088 ; PC := 1088
	1085	[5746]	GETGLOBAL	R32 K3 ; R32 := _T
	1086	[5746]	NEWTABLE 	R33 0 0 ; R33 := {}
	1087	[5746]	SETTABLE 	R32 K164 R33 ; R32["FavWarframeAvatar"] := R33
	1088	[5749]	GETGLOBAL	R32 K2 ; R32 := 0x7b998233
	1089	[5749]	GETGLOBAL	R33 K3 ; R33 := _T
	1090	[5749]	GETTABLE 	R33 R33 K163 ; R33 := R33["FavouriteLoadoutLoader"]
	1091	[5749]	CALL     	R32 2 2 ; R32 := R32(R33)
	1092	[5749]	TEST     	R32 1 ; if R32 then PC := 1162
	1093	[5749]	JMP      	1162 ; PC := 1162
	1094	[5750]	GETGLOBAL	R32 K165 ; R32 := 0xcfc01047
	1095	[5750]	GETGLOBAL	R33 K3 ; R33 := _T
	1096	[5750]	GETTABLE 	R33 R33 K163 ; R33 := R33["FavouriteLoadoutLoader"]
	1097	[5750]	CALL     	R32 2 4 ; R32,R33,R34 := R32(R33)
	1098	[5750]	JMP      	1160 ; PC := 1160
	1099	[5751]	GETGLOBAL	R37 K3 ; R37 := _T
	1100	[5751]	GETTABLE 	R37 R37 K163 ; R37 := R37["FavouriteLoadoutLoader"]
	1101	[5751]	GETTABLE 	R37 R37 R35 ; R37 := R37[R35]
	1102	[5751]	TEST     	R37 0 ; if not R37 then PC := 1160
	1103	[5751]	JMP      	1160 ; PC := 1160
	1104	[5752]	GETGLOBAL	R37 K2 ; R37 := 0x7b998233
	1105	[5752]	GETGLOBAL	R38 K3 ; R38 := _T
	1106	[5752]	GETTABLE 	R38 R38 K163 ; R38 := R38["FavouriteLoadoutLoader"]
	1107	[5752]	GETTABLE 	R38 R38 R35 ; R38 := R38[R35]
	1108	[5752]	GETTABLE 	R38 R38 K9 ; R38 := R38["Loader"]
	1109	[5752]	CALL     	R37 2 2 ; R37 := R37(R38)
	1110	[5752]	TEST     	R37 1 ; if R37 then PC := 1160
	1111	[5752]	JMP      	1160 ; PC := 1160
	1112	[5752]	GETGLOBAL	R37 K3 ; R37 := _T
	1113	[5752]	GETTABLE 	R37 R37 K163 ; R37 := R37["FavouriteLoadoutLoader"]
	1114	[5752]	GETTABLE 	R37 R37 R35 ; R37 := R37[R35]
	1115	[5752]	GETTABLE 	R37 R37 K9 ; R37 := R37["Loader"]
	1116	[5752]	SELF     	R37 R37 K10 ; R38 := R37; R37 := R37[0xd2d3875a]
	1117	[5752]	CALL     	R37 2 2 ; R37 := R37(R38)
	1118	[5752]	TEST     	R37 0 ; if not R37 then PC := 1160
	1119	[5752]	JMP      	1160 ; PC := 1160
	1120	[5752]	GETGLOBAL	R37 K2 ; R37 := 0x7b998233
	1121	[5752]	GETGLOBAL	R38 K3 ; R38 := _T
	1122	[5752]	GETTABLE 	R38 R38 K164 ; R38 := R38["FavWarframeAvatar"]
	1123	[5752]	GETTABLE 	R38 R38 R35 ; R38 := R38[R35]
	1124	[5752]	CALL     	R37 2 2 ; R37 := R37(R38)
	1125	[5752]	TEST     	R37 1 ; if R37 then PC := 1160
	1126	[5752]	JMP      	1160 ; PC := 1160
	1127	[5753]	GETGLOBAL	R37 K3 ; R37 := _T
	1128	[5753]	GETTABLE 	R37 R37 K164 ; R37 := R37["FavWarframeAvatar"]
	1129	[5753]	GETTABLE 	R37 R37 R35 ; R37 := R37[R35]
	1130	[5753]	SELF     	R37 R37 K166 ; R38 := R37; R37 := R37[0x9d668f53]
	1131	[5753]	GETGLOBAL	R39 K167 ; R39 := 0x0469f296
	1132	[5753]	CALL     	R39 1 2 ; R39 := R39()
	1133	[5753]	LOADK    	R40 := 100.000000
	1134	[5753]	CALL     	R37 4 1 ; R37(R38,R39,R40)
	1135	[5754]	GETGLOBAL	R37 K3 ; R37 := _T
	1136	[5754]	GETTABLE 	R37 R37 K164 ; R37 := R37["FavWarframeAvatar"]
	1137	[5754]	GETTABLE 	R37 R37 R35 ; R37 := R37[R35]
	1138	[5754]	SELF     	R37 R37 K168 ; R38 := R37; R37 := R37[0xb2532845]
	1139	[5754]	GETGLOBAL	R39 K167 ; R39 := 0x0469f296
	1140	[5754]	LOADK    	R40 K169 ; R40 := "Statue"
	1141	[5754]	CALL     	R39 2 0 ; R39,... := R39(R40)
	1142	[5754]	CALL     	R37 0 1 ; R37(R38,...)
	1143	[5756]	GETGLOBAL	R37 K3 ; R37 := _T
	1144	[5756]	GETTABLE 	R37 R37 K164 ; R37 := R37["FavWarframeAvatar"]
	1145	[5756]	GETTABLE 	R37 R37 R35 ; R37 := R37[R35]
	1146	[5756]	SELF     	R37 R37 K170 ; R38 := R37; R37 := R37[0xde321e6f]
	1147	[5756]	CALL     	R37 2 2 ; R37 := R37(R38)
	1148	[5757]	SELF     	R38 R37 K171 ; R39 := R37; R38 := R37[0x1d2dfe4a]
	1149	[5757]	GETGLOBAL	R40 K3 ; R40 := _T
	1150	[5757]	GETTABLE 	R40 R40 K163 ; R40 := R40["FavouriteLoadoutLoader"]
	1151	[5757]	GETTABLE 	R40 R40 R35 ; R40 := R40[R35]
	1152	[5757]	GETTABLE 	R40 R40 K172 ; R40 := R40["Loadout"]
	1153	[5757]	CALL     	R38 3 1 ; R38(R39,R40)
	1154	[5758]	SELF     	R38 R37 K173 ; R39 := R37; R38 := R37[0xa65fc8a8]
	1155	[5758]	OP_LOADBOOL	R40 1 0 ; R40 := true
	1156	[5758]	CALL     	R38 3 1 ; R38(R39,R40)
	1157	[5760]	GETGLOBAL	R38 K3 ; R38 := _T
	1158	[5760]	GETTABLE 	R38 R38 K163 ; R38 := R38["FavouriteLoadoutLoader"]
	1159	[5760]	SETTABLE 	R38 R35 K18 ; R38[R35] := nil
	1160	[5750]	TFORLOOP 	R32 2 ; R35,R36 := R32(R33,R34); if R35 ~= nil then begin PC = 1099; R34 := R35 end
	1161	[5762]	JMP      	1099 ; PC := 1099
	1162	[5766]	GETUPVAL 	R38 U40 ; R38 := U40
	1163	[5766]	TEST     	R38 0 ; if not R38 then PC := 1174
	1164	[5766]	JMP      	1174 ; PC := 1174
	1165	[5766]	GETGLOBAL	R38 K3 ; R38 := _T
	1166	[5766]	GETTABLE 	R38 R38 K174 ; R38 := R38["SquadOverlay"]
	1167	[5766]	TEST     	R38 0 ; if not R38 then PC := 1174
	1168	[5766]	JMP      	1174 ; PC := 1174
	1169	[5767]	GETUPVAL 	R38 U41 ; R38 := U41
	1170	[5767]	GETUPVAL 	R39 U40 ; R39 := U40
	1171	[5767]	CALL     	R38 2 1 ; R38(R39)
	1172	[5768]	LOADNIL  	R38 R38 ; R38 := nil
	1173	[5768]	SETUPVAL 	R38 U40 ; U40 := R38
	1174	[5771]	GETUPVAL 	R38 U42 ; R38 := U42
	1175	[5771]	CALL     	R38 1 1 ; R38()
	1176	[5774]	GETGLOBAL	R38 K3 ; R38 := _T
	1177	[5774]	GETTABLE 	R38 R38 K175 ; R38 := R38["PendingScenarioHubName"]
	1178	[5774]	TEST     	R38 0 ; if not R38 then PC := 1202
	1179	[5774]	JMP      	1202 ; PC := 1202
	1180	[5775]	GETGLOBAL	R38 K3 ; R38 := _T
	1181	[5775]	GETTABLE 	R38 R38 K176 ; R38 := R38["ScenarioHubStarted"]
	1182	[5775]	TEST     	R38 1 ; if R38 then PC := 1199
	1183	[5775]	JMP      	1199 ; PC := 1199
	1184	[5776]	GETGLOBAL	R38 K53 ; R38 := 0x3d106989
	1185	[5776]	LOADK    	R39 K177 ; R39 := "Connecting to scenario hub "
	1186	[5776]	GETGLOBAL	R40 K3 ; R40 := _T
	1187	[5776]	GETTABLE 	R40 R40 K175 ; R40 := R40["PendingScenarioHubName"]
	1188	[5776]	CONCAT   	R39 R39 R40 ; R39 := R39 .. R40
	1189	[5776]	CALL     	R38 2 1 ; R38(R39)
	1190	[5777]	GETGLOBAL	R38 K3 ; R38 := _T
	1191	[5777]	SETTABLE 	R38 K176 K7 ; R38["ScenarioHubStarted"] := true
	1192	[5778]	GETGLOBAL	R38 K47 ; R38 := 0xbe190284
	1193	[5778]	SELF     	R38 R38 K178 ; R39 := R38; R38 := R38[0xf53075e2]
	1194	[5778]	GETGLOBAL	R40 K167 ; R40 := 0x0469f296
	1195	[5778]	GETGLOBAL	R41 K3 ; R41 := _T
	1196	[5778]	GETTABLE 	R41 R41 K175 ; R41 := R41["PendingScenarioHubName"]
	1197	[5778]	CALL     	R40 2 0 ; R40,... := R40(R41)
	1198	[5778]	CALL     	R38 0 1 ; R38(R39,...)
	1199	[5780]	GETGLOBAL	R38 K3 ; R38 := _T
	1200	[5780]	SETTABLE 	R38 K175 K18 ; R38["PendingScenarioHubName"] := nil
	1201	[5780]	JMP      	1212 ; PC := 1212
	1202	[5782]	GETGLOBAL	R38 K3 ; R38 := _T
	1203	[5782]	GETTABLE 	R38 R38 K179 ; R38 := R38["PendingScenarioHubShutdown"]
	1204	[5782]	TEST     	R38 0 ; if not R38 then PC := 1212
	1205	[5782]	JMP      	1212 ; PC := 1212
	1206	[5783]	GETGLOBAL	R38 K3 ; R38 := _T
	1207	[5783]	SETTABLE 	R38 K179 K18 ; R38["PendingScenarioHubShutdown"] := nil
	1208	[5784]	GETGLOBAL	R38 K47 ; R38 := 0xbe190284
	1209	[5784]	SELF     	R38 R38 K180 ; R39 := R38; R38 := R38[0x39c667a9]
	1210	[5784]	OP_LOADBOOL	R40 1 0 ; R40 := true
	1211	[5784]	CALL     	R38 3 1 ; R38(R39,R40)
	1212	[5788]	GETGLOBAL	R38 K2 ; R38 := 0x7b998233
	1213	[5788]	GETGLOBAL	R39 K181 ; R39 := 0x83f4e77c
	1214	[5788]	CALL     	R38 2 2 ; R38 := R38(R39)
	1215	[5788]	TEST     	R38 1 ; if R38 then PC := 1243
	1216	[5788]	JMP      	1243 ; PC := 1243
	1217	[5789]	GETGLOBAL	R38 K182 ; R38 := 0xe7f2b02f
	1218	[5789]	SELF     	R38 R38 K183 ; R39 := R38; R38 := R38[0xeaad7523]
	1219	[5789]	GETGLOBAL	R40 K181 ; R40 := 0x83f4e77c
	1220	[5789]	SELF     	R40 R40 K184 ; R41 := R40; R40 := R40[0xac0a30b1]
	1221	[5789]	CALL     	R40 2 2 ; R40 := R40(R41)
	1222	[5789]	TEST     	R40 0 ; if not R40 then PC := 1242
	1223	[5789]	JMP      	1242 ; PC := 1242
	1224	[5789]	GETGLOBAL	R40 K2 ; R40 := 0x7b998233
	1225	[5789]	GETGLOBAL	R41 K47 ; R41 := 0xbe190284
	1226	[5789]	CALL     	R40 2 2 ; R40 := R40(R41)
	1227	[5789]	TEST     	R40 1 ; if R40 then PC := 1240
	1228	[5789]	JMP      	1240 ; PC := 1240
	1229	[5789]	GETGLOBAL	R40 K47 ; R40 := 0xbe190284
	1230	[5789]	SELF     	R40 R40 K185 ; R41 := R40; R40 := R40[0xf2deaf69]
	1231	[5789]	GETGLOBAL	R42 K186 ; R42 := gLotusAttractModeGameRulesType
	1232	[5789]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	1233	[5789]	TEST     	R40 1 ; if R40 then PC := 1242
	1234	[5789]	JMP      	1242 ; PC := 1242
	1235	[5789]	GETGLOBAL	R40 K47 ; R40 := 0xbe190284
	1236	[5789]	SELF     	R40 R40 K185 ; R41 := R40; R40 := R40[0xf2deaf69]
	1237	[5789]	GETGLOBAL	R42 K187 ; R42 := gLotusHubGameRulesType
	1238	[5789]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	1239	[5789]	JMP      	1242 ; PC := 1242
	1240	[5789]	OP_LOADBOOL	R40 0 1 ; R40 := false; PC := 1241
	1241	[5789]	OP_LOADBOOL	R40 1 0 ; R40 := true
	1242	[5789]	CALL     	R38 3 1 ; R38(R39,R40)
	1243	[5791]	RETURN   	R0 1 ; return 

function #146 <?:5793,5800> (15 instructions, 60 bytes at 00000160FEAFE280)
1 param, 6 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[5794]	LOADK    	R1 := 1.000000
	2	[5794]	GETGLOBAL	R2 K0 ; R2 := screenStack
	3	[5794]	LEN      	R2 R2 ; R2 := # R2
	4	[5794]	LOADK    	R3 := 1.000000
	5	[5794]	FORPREP  	R1 12 ; R1 -= R3; PC := 12
	6	[5795]	GETGLOBAL	R5 K0 ; R5 := screenStack
	7	[5795]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	8	[5795]	EQ       	0 R0 R5 ; if R0 ~= R5 then PC := 12
	9	[5795]	JMP      	12 ; PC := 12
	10	[5796]	OP_LOADBOOL	R5 1 0 ; R5 := true
	11	[5796]	RETURN   	R5 2 ; return R5 
	12	[5794]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	13	[5799]	OP_LOADBOOL	R5 0 0 ; R5 := false
	14	[5799]	RETURN   	R5 2 ; return R5 
	15	[5800]	RETURN   	R0 1 ; return 

function #147 <?:5802,5805> (9 instructions, 36 bytes at 00000160FEAFE3D0)
1 param, 4 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[5803]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[5803]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[5803]	LOADK    	R3 K1 ; R3 := "ForceIntoStack()"
	4	[5803]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	5	[5803]	CALL     	R1 2 1 ; R1(R2)
	6	[5804]	GETUPVAL 	R1 U1 ; R1 := U1
	7	[5804]	MOVE     	R2 R0 ; R2 := R0
	8	[5804]	CALL     	R1 2 1 ; R1(R2)
	9	[5805]	RETURN   	R0 1 ; return 

function #148 <?:5807,5817> (20 instructions, 80 bytes at 0000016099AE6F90)
1 param, 7 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[5808]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[5808]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[5808]	LOADK    	R3 K1 ; R3 := "ForceOutOfStack()"
	4	[5808]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	5	[5808]	CALL     	R1 2 1 ; R1(R2)
	6	[5811]	GETGLOBAL	R1 K2 ; R1 := screenStack
	7	[5811]	LEN      	R1 R1 ; R1 := # R1
	8	[5811]	LOADK    	R2 := 1.000000
	9	[5811]	LOADK    	R3 := -1.000000
	10	[5811]	FORPREP  	R1 19 ; R1 -= R3; PC := 19
	11	[5812]	GETGLOBAL	R5 K2 ; R5 := screenStack
	12	[5812]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	13	[5812]	EQ       	0 R5 R0 ; if R5 ~= R0 then PC := 19
	14	[5812]	JMP      	19 ; PC := 19
	15	[5813]	GETUPVAL 	R5 U1 ; R5 := U1
	16	[5813]	MOVE     	R6 R4 ; R6 := R4
	17	[5813]	CALL     	R5 2 1 ; R5(R6)
	18	[5814]	JMP      	20 ; PC := 20
	19	[5811]	FORLOOP  	R1 11 ; R1 += R3; if R1 <= R2 then begin PC := 11; R4 := R1 end
	20	[5817]	RETURN   	R0 1 ; return 

function #149 <?:5819,5823> (8 instructions, 32 bytes at 0000016099AE7160)
0 params, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[5820]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	2	[5820]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5820]	LOADK    	R2 K1 ; R2 := "ForceClearChildMovie()"
	4	[5820]	CONCAT   	R1 R1 R2 ; R1 := R1 .. R2
	5	[5820]	CALL     	R0 2 1 ; R0(R1)
	6	[5822]	LOADNIL  	R0 R0 ; R0 := nil
	7	[5822]	SETGLOBALHASH	R0 K2 ; mChildMovie := R0
	8	[5823]	RETURN   	R0 1 ; return 

function #150 <?:5825,5834> (19 instructions, 76 bytes at 0000016099AE72D0)
1 param, 3 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[5826]	GETGLOBAL	R1 K0 ; R1 := mOpenScreenAsyncInfo
	2	[5826]	SETTABLE 	R1 K1 K2 ; R1["IsLoading"] := false
	3	[5828]	GETGLOBAL	R1 K3 ; R1 := 0x3d106989
	4	[5828]	LOADK    	R2 K4 ; R2 := "Background: MovieLoaded"
	5	[5828]	CALL     	R1 2 1 ; R1(R2)
	6	[5829]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[5829]	LOADK    	R2 := 0.000000
	8	[5829]	CALL     	R1 2 1 ; R1(R2)
	9	[5831]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	10	[5831]	GETGLOBAL	R2 K0 ; R2 := mOpenScreenAsyncInfo
	11	[5831]	GETTABLE 	R2 R2 K6 ; R2 := R2["Callback"]
	12	[5831]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[5831]	TEST     	R1 1 ; if R1 then PC := 19
	14	[5831]	JMP      	19 ; PC := 19
	15	[5832]	GETGLOBAL	R1 K0 ; R1 := mOpenScreenAsyncInfo
	16	[5832]	GETTABLE 	R1 R1 K7 ; R1 := R1[0x75afeb61]
	17	[5832]	MOVE     	R2 R0 ; R2 := R0
	18	[5832]	CALL     	R1 2 1 ; R1(R2)
	19	[5834]	RETURN   	R0 1 ; return 

function #151 <?:5836,5879> (111 instructions, 444 bytes at 0000016099AE74F0)
4 params, 15 slots, 4 upvalues, 0 locals, 24 constants, 0 functions
	1	[5837]	GETGLOBAL	R4 K0 ; R4 := 0x3d106989
	2	[5837]	GETUPVAL 	R5 U0 ; R5 := U0
	3	[5837]	LOADK    	R6 K1 ; R6 := "OpenScreen(screenName="
	4	[5837]	GETGLOBAL	R7 K2 ; R7 := 0x64fb1586
	5	[5837]	MOVE     	R8 R0 ; R8 := R0
	6	[5837]	CALL     	R7 2 2 ; R7 := R7(R8)
	7	[5837]	LOADK    	R8 K3 ; R8 := ", openFromMovie="
	8	[5837]	GETGLOBAL	R9 K2 ; R9 := 0x64fb1586
	9	[5837]	MOVE     	R10 R1 ; R10 := R1
	10	[5837]	CALL     	R9 2 2 ; R9 := R9(R10)
	11	[5837]	LOADK    	R10 K4 ; R10 := ", ignoreIfOpen="
	12	[5837]	GETGLOBAL	R11 K2 ; R11 := 0x64fb1586
	13	[5837]	MOVE     	R12 R2 ; R12 := R2
	14	[5837]	CALL     	R11 2 2 ; R11 := R11(R12)
	15	[5837]	LOADK    	R12 K5 ; R12 := ", openAsAsync="
	16	[5837]	GETGLOBAL	R13 K2 ; R13 := 0x64fb1586
	17	[5837]	MOVE     	R14 R3 ; R14 := R3
	18	[5837]	CALL     	R13 2 2 ; R13 := R13(R14)
	19	[5837]	LOADK    	R14 K6 ; R14 := ")"
	20	[5837]	CONCAT   	R5 R5 R14 ; R5 := R5 .. R6 .. R7 .. R8 .. R9 .. R10 .. R11 .. R12 .. R13 .. R14
	21	[5837]	CALL     	R4 2 1 ; R4(R5)
	22	[5838]	GETGLOBAL	R4 K7 ; R4 := movies
	23	[5838]	GETTABLE 	R4 R4 R0 ; R4 := R4[R0]
	24	[5838]	EQ       	1 R4 K8 ; if R4 == nil then PC := 100
	25	[5838]	JMP      	100 ; PC := 100
	26	[5840]	GETUPVAL 	R4 U1 ; R4 := U1
	27	[5840]	MOVE     	R5 R0 ; R5 := R0
	28	[5840]	CALL     	R4 2 2 ; R4 := R4(R5)
	29	[5840]	TEST     	R4 0 ; if not R4 then PC := 46
	30	[5840]	JMP      	46 ; PC := 46
	31	[5841]	TEST     	R2 0 ; if not R2 then PC := 34
	32	[5841]	JMP      	34 ; PC := 34
	33	[5842]	RETURN   	R0 1 ; return 
	34	[5845]	GETGLOBAL	R4 K9 ; R4 := 0x9ba7909f
	35	[5845]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0xbcfb64ab]
	36	[5845]	GETGLOBAL	R6 K7 ; R6 := movies
	37	[5845]	GETTABLE 	R6 R6 R0 ; R6 := R6[R0]
	38	[5845]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	39	[5846]	GETGLOBAL	R5 K11 ; R5 := 0x7b998233
	40	[5846]	MOVE     	R6 R4 ; R6 := R4
	41	[5846]	CALL     	R5 2 2 ; R5 := R5(R6)
	42	[5846]	TEST     	R5 1 ; if R5 then PC := 46
	43	[5846]	JMP      	46 ; PC := 46
	44	[5847]	SELF     	R5 R4 K12 ; R6 := R4; R5 := R4[0x32302b4a]
	45	[5847]	CALL     	R5 2 1 ; R5(R6)
	46	[5851]	LOADNIL  	R5 R5 ; R5 := nil
	47	[5852]	GETGLOBAL	R6 K11 ; R6 := 0x7b998233
	48	[5852]	MOVE     	R7 R1 ; R7 := R1
	49	[5852]	CALL     	R6 2 2 ; R6 := R6(R7)
	50	[5852]	TEST     	R6 1 ; if R6 then PC := 54
	51	[5852]	JMP      	54 ; PC := 54
	52	[5853]	MOVE     	R5 R1 ; R5 := R1
	53	[5853]	JMP      	67 ; PC := 67
	54	[5854]	GETGLOBAL	R6 K11 ; R6 := 0x7b998233
	55	[5854]	GETGLOBAL	R7 K13 ; R7 := mChildMovie
	56	[5854]	CALL     	R6 2 2 ; R6 := R6(R7)
	57	[5854]	TEST     	R6 1 ; if R6 then PC := 61
	58	[5854]	JMP      	61 ; PC := 61
	59	[5855]	GETGLOBAL	R5 K13 ; R5 := mChildMovie
	60	[5855]	JMP      	67 ; PC := 67
	61	[5856]	GETGLOBAL	R6 K11 ; R6 := 0x7b998233
	62	[5856]	GETGLOBAL	R7 K14 ; R7 := 0xae91e43b
	63	[5856]	CALL     	R6 2 2 ; R6 := R6(R7)
	64	[5856]	TEST     	R6 1 ; if R6 then PC := 67
	65	[5856]	JMP      	67 ; PC := 67
	66	[5857]	GETGLOBAL	R5 K14 ; R5 := 0xae91e43b
	67	[5860]	TEST     	R3 0 ; if not R3 then PC := 85
	68	[5860]	JMP      	85 ; PC := 85
	69	[5861]	GETGLOBAL	R6 K11 ; R6 := 0x7b998233
	70	[5861]	MOVE     	R7 R5 ; R7 := R5
	71	[5861]	CALL     	R6 2 2 ; R6 := R6(R7)
	72	[5861]	TEST     	R6 1 ; if R6 then PC := 111
	73	[5861]	JMP      	111 ; PC := 111
	74	[5862]	GETUPVAL 	R6 U2 ; R6 := U2
	75	[5862]	LOADK    	R7 := 2.000000
	76	[5862]	CALL     	R6 2 1 ; R6(R7)
	77	[5863]	GETGLOBAL	R6 K15 ; R6 := mOpenScreenAsyncInfo
	78	[5863]	SETTABLE 	R6 K16 K17 ; R6["IsLoading"] := true
	79	[5864]	SELF     	R6 R5 K18 ; R7 := R5; R6 := R5[0xbf3e8f54]
	80	[5864]	GETGLOBAL	R8 K7 ; R8 := movies
	81	[5864]	GETTABLE 	R8 R8 R0 ; R8 := R8[R0]
	82	[5864]	LOADK    	R9 K19 ; R9 := "OnMovieLoaded"
	83	[5864]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	84	[5865]	JMP      	111 ; PC := 111
	85	[5867]	LOADNIL  	R6 R6 ; R6 := nil
	86	[5868]	GETGLOBAL	R7 K11 ; R7 := 0x7b998233
	87	[5868]	MOVE     	R8 R5 ; R8 := R5
	88	[5868]	CALL     	R7 2 2 ; R7 := R7(R8)
	89	[5868]	TEST     	R7 1 ; if R7 then PC := 96
	90	[5868]	JMP      	96 ; PC := 96
	91	[5869]	SELF     	R7 R5 K20 ; R8 := R5; R7 := R5[0x1fd6abd0]
	92	[5869]	GETGLOBAL	R9 K7 ; R9 := movies
	93	[5869]	GETTABLE 	R9 R9 R0 ; R9 := R9[R0]
	94	[5869]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	95	[5869]	MOVE     	R6 R7 ; R6 := R7
	96	[5871]	GETUPVAL 	R7 U3 ; R7 := U3
	97	[5871]	CALL     	R7 1 1 ; R7()
	98	[5873]	RETURN   	R6 2 ; return R6 
	99	[5874]	JMP      	111 ; PC := 111
	100	[5876]	GETGLOBAL	R7 K0 ; R7 := 0x3d106989
	101	[5876]	LOADK    	R8 K21 ; R8 := "ERROR: Tried to open unrecognized screen ["
	102	[5876]	GETGLOBAL	R9 K2 ; R9 := 0x64fb1586
	103	[5876]	MOVE     	R10 R0 ; R10 := R0
	104	[5876]	CALL     	R9 2 2 ; R9 := R9(R10)
	105	[5876]	LOADK    	R10 K22 ; R10 := "] Check your spelling."
	106	[5876]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	107	[5876]	CALL     	R7 2 1 ; R7(R8)
	108	[5877]	GETGLOBAL	R7 K23 ; R7 := 0x60cce7b4
	109	[5877]	OP_LOADBOOL	R8 0 0 ; R8 := false
	110	[5877]	CALL     	R7 2 1 ; R7(R8)
	111	[5879]	RETURN   	R0 1 ; return 

function #152 <?:5881,5883> (10 instructions, 40 bytes at 0000016099AE7C10)
0 params, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[5882]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5882]	GETGLOBAL	R1 K0 ; R1 := mOpenScreenAsyncInfo
	3	[5882]	GETTABLE 	R1 R1 K1 ; R1 := R1["ScreenName"]
	4	[5882]	GETGLOBAL	R2 K0 ; R2 := mOpenScreenAsyncInfo
	5	[5882]	GETTABLE 	R2 R2 K2 ; R2 := R2["OpenFromMovie"]
	6	[5882]	GETGLOBAL	R3 K0 ; R3 := mOpenScreenAsyncInfo
	7	[5882]	GETTABLE 	R3 R3 K3 ; R3 := R3["IgnoreIfOpen"]
	8	[5882]	OP_LOADBOOL	R4 1 0 ; R4 := true
	9	[5882]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	10	[5883]	RETURN   	R0 1 ; return 

function #153 <?:5885,5897> (24 instructions, 96 bytes at 0000016099AE7D70)
4 params, 8 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[5886]	GETGLOBAL	R4 K0 ; R4 := mOpenScreenAsyncInfo
	2	[5886]	GETTABLE 	R4 R4 K1 ; R4 := R4["IsLoading"]
	3	[5886]	TEST     	R4 1 ; if R4 then PC := 10
	4	[5886]	JMP      	10 ; PC := 10
	5	[5886]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	6	[5886]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	7	[5886]	CALL     	R4 2 2 ; R4 := R4(R5)
	8	[5886]	TEST     	R4 0 ; if not R4 then PC := 11
	9	[5886]	JMP      	11 ; PC := 11
	10	[5887]	RETURN   	R0 1 ; return 
	11	[5891]	GETGLOBAL	R4 K0 ; R4 := mOpenScreenAsyncInfo
	12	[5891]	SETTABLE 	R4 K4 R0 ; R4["ScreenName"] := R0
	13	[5892]	GETGLOBAL	R4 K0 ; R4 := mOpenScreenAsyncInfo
	14	[5892]	SETTABLE 	R4 K5 R1 ; R4["OpenFromMovie"] := R1
	15	[5893]	GETGLOBAL	R4 K0 ; R4 := mOpenScreenAsyncInfo
	16	[5893]	SETTABLE 	R4 K6 R2 ; R4["IgnoreIfOpen"] := R2
	17	[5894]	GETGLOBAL	R4 K0 ; R4 := mOpenScreenAsyncInfo
	18	[5894]	SETTABLE 	R4 K7 R3 ; R4["Callback"] := R3
	19	[5896]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	20	[5896]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xe4162eed]
	21	[5896]	LOADK    	R6 K9 ; R6 := "OpenScreenAsyncContextReset"
	22	[5896]	LOADK    	R7 K10 ; R7 := ""
	23	[5896]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	24	[5897]	RETURN   	R0 1 ; return 

function #154 <?:5899,5904> (14 instructions, 56 bytes at 0000016099AE7FA0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[5900]	GETGLOBAL	R0 K0 ; R0 := mAbortingQuickMatch
	2	[5900]	TEST     	R0 1 ; if R0 then PC := 14
	3	[5900]	JMP      	14 ; PC := 14
	4	[5900]	GETGLOBAL	R0 K1 ; R0 := 0x83f4e77c
	5	[5900]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xac0a30b1]
	6	[5900]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[5900]	TEST     	R0 0 ; if not R0 then PC := 14
	8	[5900]	JMP      	14 ; PC := 14
	9	[5901]	OP_LOADBOOL	R0 1 0 ; R0 := true
	10	[5901]	SETGLOBALHASH	R0 K0 ; mAbortingQuickMatch := R0
	11	[5902]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[5902]	LOADK    	R1 := 1.000000
	13	[5902]	CALL     	R0 2 1 ; R0(R1)
	14	[5904]	RETURN   	R0 1 ; return 

function #155 <?:5906,5908> (3 instructions, 12 bytes at 0000016099AE8110)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5907]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5907]	CALL     	R0 1 1 ; R0()
	3	[5908]	RETURN   	R0 1 ; return 

function #156 <?:5910,5919> (27 instructions, 108 bytes at 0000016099AE81E0)
1 param, 6 slots, 3 upvalues, 0 locals, 9 constants, 0 functions
	1	[5911]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5911]	MOVE     	R2 R0 ; R2 := R0
	3	[5911]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5911]	TEST     	R1 0 ; if not R1 then PC := 13
	5	[5911]	JMP      	13 ; PC := 13
	6	[5912]	GETUPVAL 	R1 U1 ; R1 := U1
	7	[5912]	GETUPVAL 	R2 U2 ; R2 := U2
	8	[5912]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x609b196e]
	9	[5912]	GETGLOBAL	R3 K1 ; R3 := screenStack
	10	[5912]	MOVE     	R4 R0 ; R4 := R0
	11	[5912]	CALL     	R2 3 0 ; R2,... := R2(R3,R4)
	12	[5912]	CALL     	R1 0 1 ; R1(R2,...)
	13	[5915]	GETGLOBAL	R1 K2 ; R1 := 0x9ba7909f
	14	[5915]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbcfb64ab]
	15	[5915]	GETGLOBAL	R3 K4 ; R3 := movies
	16	[5915]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	17	[5915]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	18	[5916]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	19	[5916]	MOVE     	R3 R1 ; R3 := R1
	20	[5916]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[5916]	TEST     	R2 1 ; if R2 then PC := 27
	22	[5916]	JMP      	27 ; PC := 27
	23	[5917]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xe4162eed]
	24	[5917]	LOADK    	R4 K7 ; R4 := "TransitionOut"
	25	[5917]	LOADK    	R5 K8 ; R5 := ""
	26	[5917]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	27	[5919]	RETURN   	R0 1 ; return 

function #157 <?:5921,5980> (143 instructions, 572 bytes at 0000016099AE8410)
2 params, 14 slots, 8 upvalues, 0 locals, 33 constants, 0 functions
	1	[5923]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[5923]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xd342d13d]
	3	[5923]	CALL     	R2 1 2 ; R2 := R2()
	4	[5923]	TEST     	R2 0 ; if not R2 then PC := 31
	5	[5923]	JMP      	31 ; PC := 31
	6	[5923]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[5923]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xcf1fcba4]
	8	[5923]	CALL     	R2 1 2 ; R2 := R2()
	9	[5923]	TEST     	R2 1 ; if R2 then PC := 31
	10	[5923]	JMP      	31 ; PC := 31
	11	[5923]	GETGLOBAL	R2 K2 ; R2 := _T
	12	[5923]	GETTABLE 	R2 R2 K3 ; R2 := R2["InSimulacrum"]
	13	[5923]	TEST     	R2 1 ; if R2 then PC := 31
	14	[5923]	JMP      	31 ; PC := 31
	15	[5924]	GETGLOBAL	R2 K4 ; R2 := 0x9ba7909f
	16	[5924]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xbcfb64ab]
	17	[5924]	GETGLOBAL	R4 K6 ; R4 := movies
	18	[5924]	GETTABLE 	R4 R4 R0 ; R4 := R4[R0]
	19	[5924]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	20	[5925]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	21	[5925]	MOVE     	R4 R2 ; R4 := R2
	22	[5925]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[5925]	TEST     	R3 0 ; if not R3 then PC := 30
	24	[5925]	JMP      	30 ; PC := 30
	25	[5926]	GETGLOBAL	R3 K4 ; R3 := 0x9ba7909f
	26	[5926]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x6dd7aa66]
	27	[5926]	GETGLOBAL	R5 K6 ; R5 := movies
	28	[5926]	GETTABLE 	R5 R5 R0 ; R5 := R5[R0]
	29	[5926]	CALL     	R3 3 1 ; R3(R4,R5)
	30	[5928]	RETURN   	R0 1 ; return 
	31	[5932]	GETGLOBAL	R3 K9 ; R3 := 0xe7f2b02f
	32	[5932]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0x0b6ebd5b]
	33	[5932]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[5932]	TEST     	R3 0 ; if not R3 then PC := 58
	35	[5932]	JMP      	58 ; PC := 58
	36	[5933]	LOADK    	R3 := 1.000000
	37	[5933]	GETGLOBAL	R4 K11 ; R4 := screenStack
	38	[5933]	LEN      	R4 R4 ; R4 := # R4
	39	[5933]	LOADK    	R5 := 1.000000
	40	[5933]	FORPREP  	R3 57 ; R3 -= R5; PC := 57
	41	[5934]	GETUPVAL 	R7 U1 ; R7 := U1
	42	[5934]	GETGLOBAL	R8 K11 ; R8 := screenStack
	43	[5934]	GETTABLE 	R8 R8 R6 ; R8 := R8[R6]
	44	[5934]	CALL     	R7 2 2 ; R7 := R7(R8)
	45	[5934]	TEST     	R7 0 ; if not R7 then PC := 57
	46	[5934]	JMP      	57 ; PC := 57
	47	[5935]	GETGLOBAL	R7 K12 ; R7 := mQueuedGoToScreen
	48	[5935]	EQ       	0 R7 K13 ; if R7 ~= nil then PC := 56
	49	[5935]	JMP      	56 ; PC := 56
	50	[5936]	NEWTABLE 	R7 0 2 ; R7 := {}
	51	[5936]	SETTABLE 	R7 K14 R0 ; R7["screen"] := R0
	52	[5936]	SETTABLE 	R7 K15 R1 ; R7["callback"] := R1
	53	[5936]	SETGLOBALHASH	R7 K12 ; mQueuedGoToScreen := R7
	54	[5937]	GETUPVAL 	R7 U2 ; R7 := U2
	55	[5937]	CALL     	R7 1 1 ; R7()
	56	[5939]	RETURN   	R0 1 ; return 
	57	[5933]	FORLOOP  	R3 41 ; R3 += R5; if R3 <= R4 then begin PC := 41; R6 := R3 end
	58	[5944]	GETGLOBAL	R7 K11 ; R7 := screenStack
	59	[5944]	GETGLOBAL	R8 K11 ; R8 := screenStack
	60	[5944]	LEN      	R8 R8 ; R8 := # R8
	61	[5944]	GETTABLE 	R7 R7 R8 ; R7 := R7[R8]
	62	[5945]	EQ       	0 R7 R0 ; if R7 ~= R0 then PC := 65
	63	[5945]	JMP      	65 ; PC := 65
	64	[5946]	RETURN   	R0 1 ; return 
	65	[5949]	GETGLOBAL	R8 K16 ; R8 := 0x3d106989
	66	[5949]	GETUPVAL 	R9 U3 ; R9 := U3
	67	[5949]	LOADK    	R10 K17 ; R10 := "GoToScreen(screenName="
	68	[5949]	GETGLOBAL	R11 K18 ; R11 := 0x64fb1586
	69	[5949]	MOVE     	R12 R0 ; R12 := R0
	70	[5949]	CALL     	R11 2 2 ; R11 := R11(R12)
	71	[5949]	LOADK    	R12 K19 ; R12 := ")"
	72	[5949]	CONCAT   	R9 R9 R12 ; R9 := R9 .. R10 .. R11 .. R12
	73	[5949]	CALL     	R8 2 1 ; R8(R9)
	74	[5950]	GETGLOBAL	R8 K20 ; R8 := 0xae91e43b
	75	[5951]	GETGLOBAL	R9 K7 ; R9 := 0x7b998233
	76	[5951]	GETGLOBAL	R10 K21 ; R10 := mChildMovie
	77	[5951]	CALL     	R9 2 2 ; R9 := R9(R10)
	78	[5951]	TEST     	R9 1 ; if R9 then PC := 81
	79	[5951]	JMP      	81 ; PC := 81
	80	[5952]	GETGLOBAL	R8 K21 ; R8 := mChildMovie
	81	[5955]	GETGLOBAL	R9 K7 ; R9 := 0x7b998233
	82	[5955]	GETGLOBAL	R10 K6 ; R10 := movies
	83	[5955]	GETTABLE 	R10 R10 R0 ; R10 := R10[R0]
	84	[5955]	CALL     	R9 2 2 ; R9 := R9(R10)
	85	[5955]	TEST     	R9 1 ; if R9 then PC := 132
	86	[5955]	JMP      	132 ; PC := 132
	87	[5957]	GETUPVAL 	R9 U4 ; R9 := U4
	88	[5957]	MOVE     	R10 R0 ; R10 := R0
	89	[5957]	CALL     	R9 2 2 ; R9 := R9(R10)
	90	[5957]	TEST     	R9 0 ; if not R9 then PC := 111
	91	[5957]	JMP      	111 ; PC := 111
	92	[5958]	GETGLOBAL	R9 K4 ; R9 := 0x9ba7909f
	93	[5958]	SELF     	R9 R9 K5 ; R10 := R9; R9 := R9[0xbcfb64ab]
	94	[5958]	GETGLOBAL	R11 K6 ; R11 := movies
	95	[5958]	GETTABLE 	R11 R11 R0 ; R11 := R11[R0]
	96	[5958]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	97	[5959]	GETGLOBAL	R10 K7 ; R10 := 0x7b998233
	98	[5959]	MOVE     	R11 R9 ; R11 := R9
	99	[5959]	CALL     	R10 2 2 ; R10 := R10(R11)
	100	[5959]	TEST     	R10 1 ; if R10 then PC := 104
	101	[5959]	JMP      	104 ; PC := 104
	102	[5960]	SELF     	R10 R9 K22 ; R11 := R9; R10 := R9[0x32302b4a]
	103	[5960]	CALL     	R10 2 1 ; R10(R11)
	104	[5962]	GETUPVAL 	R10 U5 ; R10 := U5
	105	[5962]	GETUPVAL 	R11 U6 ; R11 := U6
	106	[5962]	GETTABLE 	R11 R11 K23 ; R11 := R11[0x609b196e]
	107	[5962]	GETGLOBAL	R12 K11 ; R12 := screenStack
	108	[5962]	MOVE     	R13 R0 ; R13 := R0
	109	[5962]	CALL     	R11 3 0 ; R11,... := R11(R12,R13)
	110	[5962]	CALL     	R10 0 1 ; R10(R11,...)
	111	[5965]	GETGLOBAL	R10 K7 ; R10 := 0x7b998233
	112	[5965]	GETGLOBAL	R11 K21 ; R11 := mChildMovie
	113	[5965]	CALL     	R10 2 2 ; R10 := R10(R11)
	114	[5965]	TEST     	R10 1 ; if R10 then PC := 126
	115	[5965]	JMP      	126 ; PC := 126
	116	[5966]	EQ       	0 R0 K24 ; if R0 ~= "Menu" then PC := 121
	117	[5966]	JMP      	121 ; PC := 121
	118	[5967]	LOADNIL  	R10 R10 ; R10 := nil
	119	[5967]	SETGLOBALHASH	R10 K21 ; mChildMovie := R10
	120	[5967]	JMP      	126 ; PC := 126
	121	[5969]	GETGLOBAL	R10 K21 ; R10 := mChildMovie
	122	[5969]	SELF     	R10 R10 K25 ; R11 := R10; R10 := R10[0xe4162eed]
	123	[5969]	LOADK    	R12 K26 ; R12 := "TransitionOut"
	124	[5969]	LOADK    	R13 K27 ; R13 := ""
	125	[5969]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	126	[5973]	GETUPVAL 	R10 U7 ; R10 := U7
	127	[5973]	MOVE     	R11 R0 ; R11 := R0
	128	[5973]	CALL     	R10 2 1 ; R10(R11)
	129	[5974]	SETGLOBALHASH	R0 K28 ; queuedMovie := R0
	130	[5975]	SETGLOBALHASH	R1 K29 ; queuedMovieCallback := R1
	131	[5975]	JMP      	143 ; PC := 143
	132	[5977]	GETGLOBAL	R10 K16 ; R10 := 0x3d106989
	133	[5977]	LOADK    	R11 K30 ; R11 := "ERROR: Tried to open unrecognized screen ["
	134	[5977]	GETGLOBAL	R12 K18 ; R12 := 0x64fb1586
	135	[5977]	MOVE     	R13 R0 ; R13 := R0
	136	[5977]	CALL     	R12 2 2 ; R12 := R12(R13)
	137	[5977]	LOADK    	R13 K31 ; R13 := "] Check your spelling."
	138	[5977]	CONCAT   	R11 R11 R13 ; R11 := R11 .. R12 .. R13
	139	[5977]	CALL     	R10 2 1 ; R10(R11)
	140	[5978]	GETGLOBAL	R10 K32 ; R10 := 0x60cce7b4
	141	[5978]	OP_LOADBOOL	R11 0 0 ; R11 := false
	142	[5978]	CALL     	R10 2 1 ; R10(R11)
	143	[5980]	RETURN   	R0 1 ; return 

function #158 <?:5982,6011> (76 instructions, 304 bytes at 0000016099AE8BA0)
1 param, 7 slots, 2 upvalues, 0 locals, 19 constants, 0 functions
	1	[5983]	GETGLOBAL	R1 K0 ; R1 := screenStack
	2	[5983]	GETGLOBAL	R2 K0 ; R2 := screenStack
	3	[5983]	LEN      	R2 R2 ; R2 := # R2
	4	[5983]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	5	[5984]	EQ       	0 R1 R0 ; if R1 ~= R0 then PC := 8
	6	[5984]	JMP      	8 ; PC := 8
	7	[5985]	RETURN   	R0 1 ; return 
	8	[5988]	GETGLOBAL	R2 K1 ; R2 := 0x3d106989
	9	[5988]	GETUPVAL 	R3 U0 ; R3 := U0
	10	[5988]	LOADK    	R4 K2 ; R4 := "ScreenOpened(screenName="
	11	[5988]	GETGLOBAL	R5 K3 ; R5 := 0x64fb1586
	12	[5988]	MOVE     	R6 R0 ; R6 := R0
	13	[5988]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[5988]	LOADK    	R6 K4 ; R6 := ")"
	15	[5988]	CONCAT   	R3 R3 R6 ; R3 := R3 .. R4 .. R5 .. R6
	16	[5988]	CALL     	R2 2 1 ; R2(R3)
	17	[5989]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	18	[5989]	GETGLOBAL	R3 K6 ; R3 := movies
	19	[5989]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	20	[5989]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[5989]	TEST     	R2 1 ; if R2 then PC := 65
	22	[5989]	JMP      	65 ; PC := 65
	23	[5991]	GETGLOBAL	R2 K7 ; R2 := 0x9ba7909f
	24	[5991]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xbcfb64ab]
	25	[5991]	GETGLOBAL	R4 K6 ; R4 := movies
	26	[5991]	GETTABLE 	R4 R4 R0 ; R4 := R4[R0]
	27	[5991]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	28	[5992]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	29	[5992]	MOVE     	R4 R2 ; R4 := R2
	30	[5992]	CALL     	R3 2 2 ; R3 := R3(R4)
	31	[5992]	TEST     	R3 1 ; if R3 then PC := 53
	32	[5992]	JMP      	53 ; PC := 53
	33	[5993]	GETGLOBAL	R3 K5 ; R3 := 0x7b998233
	34	[5993]	GETGLOBAL	R4 K9 ; R4 := mChildMovie
	35	[5993]	CALL     	R3 2 2 ; R3 := R3(R4)
	36	[5993]	TEST     	R3 1 ; if R3 then PC := 48
	37	[5993]	JMP      	48 ; PC := 48
	38	[5994]	EQ       	0 R0 K10 ; if R0 ~= "Menu" then PC := 43
	39	[5994]	JMP      	43 ; PC := 43
	40	[5995]	LOADNIL  	R3 R3 ; R3 := nil
	41	[5995]	SETGLOBALHASH	R3 K9 ; mChildMovie := R3
	42	[5995]	JMP      	48 ; PC := 48
	43	[5997]	GETGLOBAL	R3 K9 ; R3 := mChildMovie
	44	[5997]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0xe4162eed]
	45	[5997]	LOADK    	R5 K12 ; R5 := "TransitionOut"
	46	[5997]	LOADK    	R6 K13 ; R6 := ""
	47	[5997]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	48	[6000]	SETGLOBALHASH	R2 K9 ; mChildMovie := R2
	49	[6002]	GETUPVAL 	R3 U1 ; R3 := U1
	50	[6002]	MOVE     	R4 R0 ; R4 := R0
	51	[6002]	CALL     	R3 2 1 ; R3(R4)
	52	[6002]	JMP      	76 ; PC := 76
	53	[6004]	GETGLOBAL	R3 K1 ; R3 := 0x3d106989
	54	[6004]	LOADK    	R4 K14 ; R4 := "ERROR: Screen opened called on ["
	55	[6004]	GETGLOBAL	R5 K3 ; R5 := 0x64fb1586
	56	[6004]	MOVE     	R6 R0 ; R6 := R0
	57	[6004]	CALL     	R5 2 2 ; R5 := R5(R6)
	58	[6004]	LOADK    	R6 K15 ; R6 := "], said screen doesn't exist."
	59	[6004]	CONCAT   	R4 R4 R6 ; R4 := R4 .. R5 .. R6
	60	[6004]	CALL     	R3 2 1 ; R3(R4)
	61	[6005]	GETGLOBAL	R3 K16 ; R3 := 0x60cce7b4
	62	[6005]	OP_LOADBOOL	R4 0 0 ; R4 := false
	63	[6005]	CALL     	R3 2 1 ; R3(R4)
	64	[6006]	JMP      	76 ; PC := 76
	65	[6008]	GETGLOBAL	R3 K1 ; R3 := 0x3d106989
	66	[6008]	LOADK    	R4 K17 ; R4 := "ERROR: Tried to open unrecognized screen ["
	67	[6008]	GETGLOBAL	R5 K3 ; R5 := 0x64fb1586
	68	[6008]	MOVE     	R6 R0 ; R6 := R0
	69	[6008]	CALL     	R5 2 2 ; R5 := R5(R6)
	70	[6008]	LOADK    	R6 K18 ; R6 := "] Check your spelling."
	71	[6008]	CONCAT   	R4 R4 R6 ; R4 := R4 .. R5 .. R6
	72	[6008]	CALL     	R3 2 1 ; R3(R4)
	73	[6009]	GETGLOBAL	R3 K16 ; R3 := 0x60cce7b4
	74	[6009]	OP_LOADBOOL	R4 0 0 ; R4 := false
	75	[6009]	CALL     	R3 2 1 ; R3(R4)
	76	[6011]	RETURN   	R0 1 ; return 

function #159 <?:6013,6015> (4 instructions, 16 bytes at 000001608CC09040)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[6014]	GETGLOBAL	R1 K0 ; R1 := movies
	2	[6014]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	3	[6014]	RETURN   	R1 2 ; return R1 
	4	[6015]	RETURN   	R0 1 ; return 

function #160 <?:6017,6020> (7 instructions, 28 bytes at 000001608CC09110)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[6018]	NEWTABLE 	R0 1 0 ; R0 := {}
	2	[6018]	LOADK    	R1 K1 ; R1 := "Default"
	3	[6018]	SETLIST  	R0 1 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 1
	4	[6018]	SETGLOBALHASH	R0 K0 ; screenStack := R0
	5	[6019]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[6019]	CALL     	R0 1 1 ; R0()
	7	[6020]	RETURN   	R0 1 ; return 

function #161 <?:6022,6030> (21 instructions, 84 bytes at 000001608CC09230)
0 params, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6023]	GETGLOBAL	R0 K0 ; R0 := screenStack
	2	[6023]	GETGLOBAL	R1 K0 ; R1 := screenStack
	3	[6023]	LEN      	R1 R1 ; R1 := # R1
	4	[6023]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	5	[6024]	GETGLOBAL	R1 K1 ; R1 := movies
	6	[6024]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	7	[6025]	LOADNIL  	R2 R2 ; R2 := nil
	8	[6026]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	9	[6026]	MOVE     	R4 R1 ; R4 := R1
	10	[6026]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[6026]	TEST     	R3 1 ; if R3 then PC := 18
	12	[6026]	JMP      	18 ; PC := 18
	13	[6027]	GETGLOBAL	R3 K3 ; R3 := 0x9ba7909f
	14	[6027]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0xbcfb64ab]
	15	[6027]	MOVE     	R5 R1 ; R5 := R1
	16	[6027]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	17	[6027]	MOVE     	R2 R3 ; R2 := R3
	18	[6029]	MOVE     	R3 R2 ; R3 := R2
	19	[6029]	MOVE     	R4 R0 ; R4 := R0
	20	[6029]	RETURN   	R3 3 ; return R3, R4 
	21	[6030]	RETURN   	R0 1 ; return 

function #162 <?:6032,6043> (19 instructions, 76 bytes at 000001608CC09400)
1 param, 6 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[6033]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6033]	CALL     	R1 1 2 ; R1 := R1()
	3	[6034]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	4	[6034]	MOVE     	R3 R1 ; R3 := R1
	5	[6034]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[6034]	TEST     	R2 1 ; if R2 then PC := 15
	7	[6034]	JMP      	15 ; PC := 15
	8	[6035]	SELF     	R2 R1 K1 ; R3 := R1; R2 := R1[0xe4162eed]
	9	[6035]	LOADK    	R4 K2 ; R4 := "HandleCanBeClosed"
	10	[6035]	MOVE     	R5 R0 ; R5 := R0
	11	[6035]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	12	[6036]	EQ       	0 R2 K3 ; if R2 ~= true then PC := 15
	13	[6036]	JMP      	15 ; PC := 15
	14	[6038]	RETURN   	R0 1 ; return 
	15	[6042]	GETGLOBAL	R3 K4 ; R3 := _T
	16	[6042]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	17	[6042]	OP_LOADBOOL	R4 1 0 ; R4 := true
	18	[6042]	CALL     	R3 2 1 ; R3(R4)
	19	[6043]	RETURN   	R0 1 ; return 

function #163 <?:6045,6062> (44 instructions, 176 bytes at 000001608CC095B0)
2 params, 11 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[6046]	TEST     	R1 1 ; if R1 then PC := 4
	2	[6046]	JMP      	4 ; PC := 4
	3	[6047]	LOADK    	R1 K0 ; R1 := ""
	4	[6049]	TEST     	R0 1 ; if R0 then PC := 33
	5	[6049]	JMP      	33 ; PC := 33
	6	[6050]	GETGLOBAL	R2 K1 ; R2 := screenStack
	7	[6050]	LEN      	R2 R2 ; R2 := # R2
	8	[6050]	LOADK    	R3 := 1.000000
	9	[6050]	LOADK    	R4 := -1.000000
	10	[6050]	FORPREP  	R2 32 ; R2 -= R4; PC := 32
	11	[6051]	GETGLOBAL	R6 K2 ; R6 := 0x9ba7909f
	12	[6051]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0xbcfb64ab]
	13	[6051]	GETGLOBAL	R8 K4 ; R8 := movies
	14	[6051]	GETGLOBAL	R9 K1 ; R9 := screenStack
	15	[6051]	GETTABLE 	R9 R9 R5 ; R9 := R9[R5]
	16	[6051]	GETTABLE 	R8 R8 R9 ; R8 := R8[R9]
	17	[6051]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	18	[6052]	EQ       	1 R6 K5 ; if R6 == nil then PC := 32
	19	[6052]	JMP      	32 ; PC := 32
	20	[6053]	GETGLOBAL	R7 K1 ; R7 := screenStack
	21	[6053]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	22	[6053]	EQ       	1 R7 K6 ; if R7 == "Default" then PC := 32
	23	[6053]	JMP      	32 ; PC := 32
	24	[6053]	GETGLOBAL	R7 K1 ; R7 := screenStack
	25	[6053]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	26	[6053]	EQ       	1 R7 K7 ; if R7 == "MainMenu" then PC := 32
	27	[6053]	JMP      	32 ; PC := 32
	28	[6054]	SELF     	R7 R6 K8 ; R8 := R6; R7 := R6[0xe4162eed]
	29	[6054]	LOADK    	R9 K9 ; R9 := "TransitionOut"
	30	[6054]	MOVE     	R10 R1 ; R10 := R1
	31	[6054]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	32	[6050]	FORLOOP  	R2 11 ; R2 += R4; if R2 <= R3 then begin PC := 11; R5 := R2 end
	33	[6059]	LOADK    	R7 K6 ; R7 := "Default"
	34	[6059]	SETGLOBALHASH	R7 K10 ; queuedMovie := R7
	35	[6060]	NEWTABLE 	R7 1 0 ; R7 := {}
	36	[6060]	LOADK    	R8 K6 ; R8 := "Default"
	37	[6060]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	38	[6060]	SETGLOBALHASH	R7 K1 ; screenStack := R7
	39	[6061]	GETGLOBAL	R7 K2 ; R7 := 0x9ba7909f
	40	[6061]	SELF     	R7 R7 K11 ; R8 := R7; R7 := R7[0x7e17ae26]
	41	[6061]	LOADK    	R9 K12 ; R9 := "ScreenStackUpdated"
	42	[6061]	LOADK    	R10 := 1.000000
	43	[6061]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	44	[6062]	RETURN   	R0 1 ; return 

function #164 <?:6064,6066> (5 instructions, 20 bytes at 000001608CC098A0)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6065]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[6065]	MOVE     	R3 R0 ; R3 := R0
	3	[6065]	MOVE     	R4 R1 ; R4 := R1
	4	[6065]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[6066]	RETURN   	R0 1 ; return 

function #165 <?:6068,6079> (11 instructions, 44 bytes at 000001608CC09990)
2 params, 4 slots, 3 upvalues, 0 locals, 2 constants, 1 function
	1	[6069]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[6076]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	3	[6076]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[6076]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[6076]	MOVE     	R0 R0 ; R0 := R0
	6	[6076]	MOVE     	R0 R1 ; R0 := R1
	7	[6076]	SETTABLE 	R2 K1 R3 ; R2["CanScreenBeClosedCallback"] := R3
	8	[6078]	GETUPVAL 	R2 U2 ; R2 := U2
	9	[6078]	LOADK    	R3 K1 ; R3 := "CanScreenBeClosedCallback"
	10	[6078]	CALL     	R2 2 1 ; R2(R3)
	11	[6079]	RETURN   	R0 1 ; return 

function #166 <?:6081,6122> (99 instructions, 396 bytes at 000001608CC09C40)
2 params, 10 slots, 4 upvalues, 0 locals, 22 constants, 0 functions
	1	[6083]	GETGLOBAL	R2 K0 ; R2 := 0xe7f2b02f
	2	[6083]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x0b6ebd5b]
	3	[6083]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[6083]	TEST     	R2 0 ; if not R2 then PC := 23
	5	[6083]	JMP      	23 ; PC := 23
	6	[6083]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[6083]	GETGLOBAL	R3 K2 ; R3 := screenStack
	8	[6083]	GETGLOBAL	R4 K2 ; R4 := screenStack
	9	[6083]	LEN      	R4 R4 ; R4 := # R4
	10	[6083]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	11	[6083]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[6083]	TEST     	R2 0 ; if not R2 then PC := 23
	13	[6083]	JMP      	23 ; PC := 23
	14	[6084]	GETGLOBAL	R2 K3 ; R2 := mQueuedGoToPreviousScreen
	15	[6084]	EQ       	0 R2 K4 ; if R2 ~= nil then PC := 22
	16	[6084]	JMP      	22 ; PC := 22
	17	[6085]	NEWTABLE 	R2 0 1 ; R2 := {}
	18	[6085]	SETTABLE 	R2 K5 R0 ; R2["skip"] := R0
	19	[6085]	SETGLOBALHASH	R2 K3 ; mQueuedGoToPreviousScreen := R2
	20	[6086]	GETUPVAL 	R2 U1 ; R2 := U1
	21	[6086]	CALL     	R2 1 1 ; R2()
	22	[6088]	RETURN   	R0 1 ; return 
	23	[6091]	GETGLOBAL	R2 K6 ; R2 := 0x3d106989
	24	[6091]	GETUPVAL 	R3 U2 ; R3 := U2
	25	[6091]	LOADK    	R4 K7 ; R4 := "GoToPreviousScreen(skipScreens="
	26	[6091]	GETGLOBAL	R5 K8 ; R5 := 0x64fb1586
	27	[6091]	MOVE     	R6 R0 ; R6 := R0
	28	[6091]	CALL     	R5 2 2 ; R5 := R5(R6)
	29	[6091]	LOADK    	R6 K9 ; R6 := ")"
	30	[6091]	CONCAT   	R3 R3 R6 ; R3 := R3 .. R4 .. R5 .. R6
	31	[6091]	CALL     	R2 2 1 ; R2(R3)
	32	[6092]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	33	[6092]	MOVE     	R3 R0 ; R3 := R0
	34	[6092]	CALL     	R2 2 2 ; R2 := R2(R3)
	35	[6092]	TEST     	R2 0 ; if not R2 then PC := 38
	36	[6092]	JMP      	38 ; PC := 38
	37	[6093]	LOADK    	R0 := 1.000000
	38	[6095]	GETGLOBAL	R2 K11 ; R2 := 0x03f57322
	39	[6095]	MOVE     	R3 R0 ; R3 := R0
	40	[6095]	CALL     	R2 2 2 ; R2 := R2(R3)
	41	[6095]	MOVE     	R0 R2 ; R0 := R2
	42	[6096]	LT       	0 R0 K12 ; if R0 >= 1.000000 then PC := 45
	43	[6096]	JMP      	45 ; PC := 45
	44	[6097]	LOADK    	R0 := 1.000000
	45	[6100]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	46	[6100]	MOVE     	R3 R1 ; R3 := R1
	47	[6100]	CALL     	R2 2 2 ; R2 := R2(R3)
	48	[6100]	TEST     	R2 0 ; if not R2 then PC := 51
	49	[6100]	JMP      	51 ; PC := 51
	50	[6101]	OP_LOADBOOL	R1 0 0 ; R1 := false
	51	[6105]	TEST     	R1 1 ; if R1 then PC := 66
	52	[6105]	JMP      	66 ; PC := 66
	53	[6105]	GETGLOBAL	R2 K2 ; R2 := screenStack
	54	[6105]	LEN      	R2 R2 ; R2 := # R2
	55	[6105]	LE       	0 R2 R0 ; if R2 > R0 then PC := 66
	56	[6105]	JMP      	66 ; PC := 66
	57	[6106]	GETGLOBAL	R2 K6 ; R2 := 0x3d106989
	58	[6106]	LOADK    	R3 K13 ; R3 := "ERROR: There's not "
	59	[6106]	GETGLOBAL	R4 K8 ; R4 := 0x64fb1586
	60	[6106]	MOVE     	R5 R0 ; R5 := R0
	61	[6106]	CALL     	R4 2 2 ; R4 := R4(R5)
	62	[6106]	LOADK    	R5 K14 ; R5 := " screens to back up over!"
	63	[6106]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	64	[6106]	CALL     	R2 2 1 ; R2(R3)
	65	[6107]	RETURN   	R0 1 ; return 
	66	[6110]	LOADK    	R2 := 1.000000
	67	[6110]	MOVE     	R3 R0 ; R3 := R0
	68	[6110]	LOADK    	R4 := 1.000000
	69	[6110]	FORPREP  	R2 83 ; R2 -= R4; PC := 83
	70	[6112]	GETGLOBAL	R6 K2 ; R6 := screenStack
	71	[6112]	LEN      	R6 R6 ; R6 := # R6
	72	[6112]	LT       	0 K15 R6 ; if 0.000000 >= R6 then PC := 83
	73	[6112]	JMP      	83 ; PC := 83
	74	[6113]	GETGLOBAL	R6 K2 ; R6 := screenStack
	75	[6113]	GETGLOBAL	R7 K2 ; R7 := screenStack
	76	[6113]	LEN      	R7 R7 ; R7 := # R7
	77	[6113]	GETTABLE 	R6 R6 R7 ; R6 := R6[R7]
	78	[6113]	SETGLOBALHASH	R6 K16 ; mPreviousScreen := R6
	79	[6114]	GETUPVAL 	R6 U3 ; R6 := U3
	80	[6114]	GETGLOBAL	R7 K2 ; R7 := screenStack
	81	[6114]	LEN      	R7 R7 ; R7 := # R7
	82	[6114]	CALL     	R6 2 1 ; R6(R7)
	83	[6110]	FORLOOP  	R2 70 ; R2 += R4; if R2 <= R3 then begin PC := 70; R5 := R2 end
	84	[6118]	GETGLOBAL	R6 K2 ; R6 := screenStack
	85	[6118]	GETGLOBAL	R7 K2 ; R7 := screenStack
	86	[6118]	LEN      	R7 R7 ; R7 := # R7
	87	[6118]	GETTABLE 	R6 R6 R7 ; R6 := R6[R7]
	88	[6118]	SETGLOBALHASH	R6 K17 ; queuedMovie := R6
	89	[6119]	GETGLOBAL	R6 K10 ; R6 := 0x7b998233
	90	[6119]	GETGLOBAL	R7 K18 ; R7 := mChildMovie
	91	[6119]	CALL     	R6 2 2 ; R6 := R6(R7)
	92	[6119]	TEST     	R6 1 ; if R6 then PC := 99
	93	[6119]	JMP      	99 ; PC := 99
	94	[6120]	GETGLOBAL	R6 K18 ; R6 := mChildMovie
	95	[6120]	SELF     	R6 R6 K19 ; R7 := R6; R6 := R6[0xe4162eed]
	96	[6120]	LOADK    	R8 K20 ; R8 := "TransitionOut"
	97	[6120]	LOADK    	R9 K21 ; R9 := ""
	98	[6120]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	99	[6122]	RETURN   	R0 1 ; return 

function #167 <?:6124,6186> (67 instructions, 268 bytes at 000001608CC0A260)
0 params, 19 slots, 0 upvalues, 0 locals, 34 constants, 2 functions
	1	[6125]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[6126]	NEWTABLE 	R1 0 0 ; R1 := {}
	3	[6127]	SETTABLE 	R1 K0 R0 ; R1["mElements"] := R0
	4	[6129]	NEWTABLE 	R2 16 0 ; R2 := {}
	5	[6130]	LOADK    	R3 K1 ; R3 := "TASK"
	6	[6131]	LOADK    	R4 K2 ; R4 := "MAIL"
	7	[6132]	LOADK    	R5 K3 ; R5 := "FOUNDRY"
	8	[6133]	LOADK    	R6 K4 ; R6 := "MARKET"
	9	[6134]	LOADK    	R7 K5 ; R7 := "INC_FRIENDS"
	10	[6135]	LOADK    	R8 K6 ; R8 := "UMBRA_ECHO"
	11	[6136]	LOADK    	R9 K7 ; R9 := "INVIGORATION"
	12	[6137]	LOADK    	R10 K8 ; R10 := "ATTACK_POLARITY"
	13	[6138]	LOADK    	R11 K9 ; R11 := "DEFENSE_POLARITY"
	14	[6139]	LOADK    	R12 K10 ; R12 := "TACTIC_POLARITY"
	15	[6140]	LOADK    	R13 K11 ; R13 := "POWER_POLARITY"
	16	[6141]	LOADK    	R14 K12 ; R14 := "WARD_POLARITY"
	17	[6142]	LOADK    	R15 K13 ; R15 := "DOUBLE_CREDIT"
	18	[6143]	LOADK    	R16 K14 ; R16 := "DOUBLE_AFFINITY"
	19	[6144]	LOADK    	R17 K15 ; R17 := "DOUBLE_PICKUP"
	20	[6146]	LOADK    	R18 K16 ; R18 := "EVOLVING_WEAPON"
	21	[6146]	SETLIST  	R2 16 1 ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 16
	22	[6147]	LEN      	R3 R2 ; R3 := # R2
	23	[6147]	SETTABLE 	R1 K17 R3 ; R1[0x9ba7909f] := R3
	24	[6163]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	25	[6163]	SETTABLE 	R1 K18 R3 ; R1[0x7e17ae26] := R3
	26	[6167]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	27	[6167]	SETTABLE 	R1 K19 R3 ; R1["GetCurrentNotifications"] := R3
	28	[6170]	LOADK    	R3 := 1.000000
	29	[6170]	LEN      	R4 R2 ; R4 := # R2
	30	[6170]	LOADK    	R5 := 1.000000
	31	[6170]	FORPREP  	R3 40 ; R3 -= R5; PC := 40
	32	[6171]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	33	[6171]	SETTABLE 	R1 R7 R6 ; R1[R7] := R6
	34	[6172]	GETGLOBAL	R7 K20 ; R7 := 0x33bdd652
	35	[6172]	GETTABLE 	R7 R7 K21 ; R7 := R7[0x23d5322f]
	36	[6172]	MOVE     	R8 R0 ; R8 := R0
	37	[6172]	NEWTABLE 	R9 0 1 ; R9 := {}
	38	[6172]	SETTABLE 	R9 K22 R6 ; R9["Id"] := R6
	39	[6172]	CALL     	R7 3 1 ; R7(R8,R9)
	40	[6170]	FORLOOP  	R3 32 ; R3 += R5; if R3 <= R4 then begin PC := 32; R6 := R3 end
	41	[6175]	GETTABLE 	R7 R1 K2 ; R7 := R1["MAIL"]
	42	[6175]	GETTABLE 	R7 R0 R7 ; R7 := R0[R7]
	43	[6175]	SETTABLE 	R7 K23 K24 ; R7["Value"] := 0.000000
	44	[6176]	GETTABLE 	R7 R1 K3 ; R7 := R1["FOUNDRY"]
	45	[6176]	GETTABLE 	R7 R0 R7 ; R7 := R0[R7]
	46	[6176]	SETTABLE 	R7 K23 K24 ; R7["Value"] := 0.000000
	47	[6177]	GETTABLE 	R7 R1 K5 ; R7 := R1["INC_FRIENDS"]
	48	[6177]	GETTABLE 	R7 R0 R7 ; R7 := R0[R7]
	49	[6177]	SETTABLE 	R7 K23 K24 ; R7["Value"] := 0.000000
	50	[6179]	GETTABLE 	R7 R1 K8 ; R7 := R1["ATTACK_POLARITY"]
	51	[6179]	GETTABLE 	R7 R0 R7 ; R7 := R0[R7]
	52	[6179]	SETTABLE 	R7 K25 K27 ; R7["Polarity"] := 1.000000
	53	[6180]	GETTABLE 	R7 R1 K9 ; R7 := R1["DEFENSE_POLARITY"]
	54	[6180]	GETTABLE 	R7 R0 R7 ; R7 := R0[R7]
	55	[6180]	SETTABLE 	R7 K25 K28 ; R7["Polarity"] := 2.000000
	56	[6181]	GETTABLE 	R7 R1 K10 ; R7 := R1["TACTIC_POLARITY"]
	57	[6181]	GETTABLE 	R7 R0 R7 ; R7 := R0[R7]
	58	[6181]	SETTABLE 	R7 K25 K29 ; R7["Polarity"] := 3.000000
	59	[6182]	GETTABLE 	R7 R1 K11 ; R7 := R1["POWER_POLARITY"]
	60	[6182]	GETTABLE 	R7 R0 R7 ; R7 := R0[R7]
	61	[6182]	SETTABLE 	R7 K25 K30 ; R7["Polarity"] := 4.000000
	62	[6183]	GETTABLE 	R7 R1 K12 ; R7 := R1["WARD_POLARITY"]
	63	[6183]	GETTABLE 	R7 R0 R7 ; R7 := R0[R7]
	64	[6183]	SETTABLE 	R7 K25 K31 ; R7["Polarity"] := 7.000000
	65	[6185]	GETGLOBAL	R7 K32 ; R7 := _T
	66	[6185]	SETTABLE 	R7 K33 R1 ; R7["Notifications"] := R1
	67	[6186]	RETURN   	R0 1 ; return 

function #168 <?:6188,6212> (80 instructions, 320 bytes at 000001608CC0AAC0)
1 param, 7 slots, 2 upvalues, 0 locals, 29 constants, 0 functions
	1	[6189]	GETGLOBAL	R1 K0 ; R1 := 0x9ba7909f
	2	[6189]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbf9494fc]
	3	[6189]	LOADK    	R3 K2 ; R3 := "Lotus.EnableTraceLogging"
	4	[6189]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[6189]	TEST     	R1 0 ; if not R1 then PC := 21
	6	[6189]	JMP      	21 ; PC := 21
	7	[6190]	GETGLOBAL	R1 K3 ; R1 := 0x3d106989
	8	[6190]	LOADK    	R2 K4 ; R2 := "EnableUIInput("
	9	[6190]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	10	[6190]	MOVE     	R4 R0 ; R4 := R0
	11	[6190]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[6190]	LOADK    	R4 K6 ; R4 := "), last state = "
	13	[6190]	GETGLOBAL	R5 K5 ; R5 := 0x64fb1586
	14	[6190]	GETGLOBAL	R6 K7 ; R6 := _T
	15	[6190]	GETTABLE 	R6 R6 K8 ; R6 := R6["UIInputEnabled"]
	16	[6190]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[6190]	CONCAT   	R2 R2 R5 ; R2 := R2 .. R3 .. R4 .. R5
	18	[6190]	CALL     	R1 2 1 ; R1(R2)
	19	[6191]	GETGLOBAL	R1 K9 ; R1 := 0xab19f327
	20	[6191]	CALL     	R1 1 1 ; R1()
	21	[6193]	GETGLOBAL	R1 K10 ; R1 := mUIInputEnableTimer
	22	[6193]	EQ       	1 R1 K11 ; if R1 == nil then PC := 30
	23	[6193]	JMP      	30 ; PC := 30
	24	[6194]	GETGLOBAL	R1 K12 ; R1 := mTimerMgr
	25	[6194]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x775c858b]
	26	[6194]	GETGLOBAL	R3 K10 ; R3 := mUIInputEnableTimer
	27	[6194]	CALL     	R1 3 1 ; R1(R2,R3)
	28	[6195]	LOADNIL  	R1 R1 ; R1 := nil
	29	[6195]	SETGLOBALHASH	R1 K10 ; mUIInputEnableTimer := R1
	30	[6197]	GETGLOBAL	R1 K7 ; R1 := _T
	31	[6197]	SETTABLE 	R1 K8 K14 ; R1["UIInputEnabled"] := true
	32	[6198]	GETGLOBAL	R1 K7 ; R1 := _T
	33	[6198]	GETUPVAL 	R2 U0 ; R2 := U0
	34	[6198]	GETTABLE 	R2 R2 K16 ; R2 := R2[0x06d055f9]
	35	[6198]	EQ       	0 R0 K11 ; if R0 ~= nil then PC := 38
	36	[6198]	JMP      	38 ; PC := 38
	37	[6198]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 38
	38	[6198]	OP_LOADBOOL	R3 1 0 ; R3 := true
	39	[6198]	MOVE     	R4 R0 ; R4 := R0
	40	[6198]	OP_LOADBOOL	R5 0 0 ; R5 := false
	41	[6198]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	42	[6198]	SETTABLE 	R1 K15 R2 ; R1["HideMoneyOverlay"] := R2
	43	[6200]	GETGLOBAL	R1 K17 ; R1 := mCurrentMode
	44	[6200]	GETUPVAL 	R2 U1 ; R2 := U1
	45	[6200]	GETTABLE 	R2 R2 K18 ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
	46	[6200]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 50
	47	[6200]	JMP      	50 ; PC := 50
	48	[6202]	GETGLOBAL	R1 K7 ; R1 := _T
	49	[6202]	SETTABLE 	R1 K19 K14 ; R1["HideMarkers"] := true
	50	[6207]	GETGLOBAL	R1 K17 ; R1 := mCurrentMode
	51	[6207]	GETUPVAL 	R2 U1 ; R2 := U1
	52	[6207]	GETTABLE 	R2 R2 K18 ; R2 := R2["UI_MODE_IN_SPACE_SHIP"]
	53	[6207]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 75
	54	[6207]	JMP      	75 ; PC := 75
	55	[6207]	GETGLOBAL	R1 K7 ; R1 := _T
	56	[6207]	GETTABLE 	R1 R1 K15 ; R1 := R1["HideMoneyOverlay"]
	57	[6207]	TEST     	R1 1 ; if R1 then PC := 75
	58	[6207]	JMP      	75 ; PC := 75
	59	[6207]	GETGLOBAL	R1 K20 ; R1 := 0x7b998233
	60	[6207]	GETGLOBAL	R2 K21 ; R2 := 0xae91e43b
	61	[6207]	CALL     	R1 2 2 ; R1 := R1(R2)
	62	[6207]	TEST     	R1 1 ; if R1 then PC := 75
	63	[6207]	JMP      	75 ; PC := 75
	64	[6207]	GETGLOBAL	R1 K0 ; R1 := 0x9ba7909f
	65	[6207]	SELF     	R1 R1 K22 ; R2 := R1; R1 := R1[0x5374b92e]
	66	[6207]	GETGLOBAL	R3 K23 ; R3 := 0xe44a533a
	67	[6207]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	68	[6207]	TEST     	R1 1 ; if R1 then PC := 75
	69	[6207]	JMP      	75 ; PC := 75
	70	[6208]	GETGLOBAL	R1 K21 ; R1 := 0xae91e43b
	71	[6208]	SELF     	R1 R1 K25 ; R2 := R1; R1 := R1[0x1fd6abd0]
	72	[6208]	GETGLOBAL	R3 K23 ; R3 := 0xe44a533a
	73	[6208]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	74	[6208]	SETGLOBALHASH	R1 K24 ; mNotificationsMovie := R1
	75	[6211]	GETGLOBAL	R1 K0 ; R1 := 0x9ba7909f
	76	[6211]	SELF     	R1 R1 K26 ; R2 := R1; R1 := R1[0x7e17ae26]
	77	[6211]	LOADK    	R3 K27 ; R3 := "EnableInput"
	78	[6211]	LOADK    	R4 K28 ; R4 := ""
	79	[6211]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	80	[6212]	RETURN   	R0 1 ; return 

function #169 <?:6214,6239> (57 instructions, 228 bytes at 000001608CC0B0A0)
0 params, 4 slots, 1 upvalue, 0 locals, 26 constants, 1 function
	1	[6215]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[6215]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xbf9494fc]
	3	[6215]	LOADK    	R2 K2 ; R2 := "Lotus.EnableTraceLogging"
	4	[6215]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[6215]	TEST     	R0 0 ; if not R0 then PC := 17
	6	[6215]	JMP      	17 ; PC := 17
	7	[6216]	GETGLOBAL	R0 K3 ; R0 := 0x3d106989
	8	[6216]	LOADK    	R1 K4 ; R1 := "DisableUIInput(), last state = "
	9	[6216]	GETGLOBAL	R2 K5 ; R2 := 0x64fb1586
	10	[6216]	GETGLOBAL	R3 K6 ; R3 := _T
	11	[6216]	GETTABLE 	R3 R3 K7 ; R3 := R3["UIInputEnabled"]
	12	[6216]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[6216]	CONCAT   	R1 R1 R2 ; R1 := R1 .. R2
	14	[6216]	CALL     	R0 2 1 ; R0(R1)
	15	[6217]	GETGLOBAL	R0 K8 ; R0 := 0xab19f327
	16	[6217]	CALL     	R0 1 1 ; R0()
	17	[6220]	GETGLOBAL	R0 K6 ; R0 := _T
	18	[6220]	SETTABLE 	R0 K7 K9 ; R0["UIInputEnabled"] := false
	19	[6221]	GETGLOBAL	R0 K10 ; R0 := mControl
	20	[6221]	GETTABLE 	R0 R0 K11 ; R0 := R0["Shutdown"]
	21	[6221]	TEST     	R0 0 ; if not R0 then PC := 29
	22	[6221]	JMP      	29 ; PC := 29
	23	[6222]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	24	[6222]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x7e17ae26]
	25	[6222]	LOADK    	R2 K13 ; R2 := "DisableInput"
	26	[6222]	LOADK    	R3 K14 ; R3 := ""
	27	[6222]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	28	[6222]	JMP      	35 ; PC := 35
	29	[6224]	GETGLOBAL	R0 K16 ; R0 := mTimerMgr
	30	[6224]	SELF     	R0 R0 K17 ; R1 := R0; R0 := R0[0xbd2e96ea]
	31	[6224]	LOADK    	R2 K18 ; R2 := 0.200000
	32	[6228]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	33	[6224]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	34	[6228]	SETGLOBALHASH	R0 K15 ; mUIInputEnableTimer := R0
	35	[6230]	GETGLOBAL	R0 K6 ; R0 := _T
	36	[6230]	SETTABLE 	R0 K19 K9 ; R0["HideMoneyOverlay"] := false
	37	[6232]	GETGLOBAL	R0 K20 ; R0 := mCurrentMode
	38	[6232]	GETUPVAL 	R1 U0 ; R1 := U0
	39	[6232]	GETTABLE 	R1 R1 K21 ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
	40	[6232]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 44
	41	[6232]	JMP      	44 ; PC := 44
	42	[6233]	GETGLOBAL	R0 K6 ; R0 := _T
	43	[6233]	SETTABLE 	R0 K22 K9 ; R0["HideMarkers"] := false
	44	[6236]	GETGLOBAL	R0 K23 ; R0 := 0x7b998233
	45	[6236]	GETGLOBAL	R1 K24 ; R1 := mNotificationsMovie
	46	[6236]	CALL     	R0 2 2 ; R0 := R0(R1)
	47	[6236]	TEST     	R0 1 ; if R0 then PC := 57
	48	[6236]	JMP      	57 ; PC := 57
	49	[6236]	GETGLOBAL	R0 K20 ; R0 := mCurrentMode
	50	[6236]	GETUPVAL 	R1 U0 ; R1 := U0
	51	[6236]	GETTABLE 	R1 R1 K21 ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
	52	[6236]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 57
	53	[6236]	JMP      	57 ; PC := 57
	54	[6237]	GETGLOBAL	R0 K24 ; R0 := mNotificationsMovie
	55	[6237]	SELF     	R0 R0 K25 ; R1 := R0; R0 := R0[0x32302b4a]
	56	[6237]	CALL     	R0 2 1 ; R0(R1)
	57	[6239]	RETURN   	R0 1 ; return 

function #170 <?:6241,6243> (5 instructions, 20 bytes at 000001608CC0B6A0)
0 params, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[6242]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[6242]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xf37bdbf9]
	3	[6242]	GETGLOBAL	R2 K2 ; R2 := 0x9e5e1b85
	4	[6242]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[6243]	RETURN   	R0 1 ; return 

function #171 <?:6245,6265> (48 instructions, 192 bytes at 000001608CC0B7D0)
1 param, 8 slots, 1 upvalue, 0 locals, 25 constants, 0 functions
	1	[6246]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[6246]	MOVE     	R2 R0 ; R2 := R0
	3	[6246]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6247]	EQ       	1 R1 K1 ; if R1 == nil then PC := 25
	5	[6247]	JMP      	25 ; PC := 25
	6	[6248]	GETGLOBAL	R2 K2 ; R2 := 0x3d106989
	7	[6248]	LOADK    	R3 K3 ; R3 := "Showing WeGame popup due to status "
	8	[6248]	MOVE     	R4 R1 ; R4 := R1
	9	[6248]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	10	[6248]	CALL     	R2 2 1 ; R2(R3)
	11	[6249]	EQ       	0 R1 K4 ; if R1 ~= 40.000000 then PC := 19
	12	[6249]	JMP      	19 ; PC := 19
	13	[6250]	GETUPVAL 	R2 U0 ; R2 := U0
	14	[6250]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xe0cba3ca]
	15	[6250]	LOADK    	R3 K6 ; R3 := "/Lotus/Language/Changyou/WeGameAntiAddictionKick"
	16	[6250]	LOADK    	R4 K7 ; R4 := "OnFcmKickOut"
	17	[6250]	CALL     	R2 3 1 ; R2(R3,R4)
	18	[6250]	JMP      	48 ; PC := 48
	19	[6252]	GETUPVAL 	R2 U0 ; R2 := U0
	20	[6252]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xe0cba3ca]
	21	[6252]	LOADK    	R3 K8 ; R3 := "/Lotus/Language/Changyou/WeGamePlatformOffline"
	22	[6252]	LOADK    	R4 K7 ; R4 := "OnFcmKickOut"
	23	[6252]	CALL     	R2 3 1 ; R2(R3,R4)
	24	[6253]	JMP      	48 ; PC := 48
	25	[6254]	EQ       	1 R0 K9 ; if R0 == "" then PC := 48
	26	[6254]	JMP      	48 ; PC := 48
	27	[6255]	GETGLOBAL	R2 K10 ; R2 := cjson
	28	[6255]	GETTABLE 	R2 R2 K11 ; R2 := R2[0x7ab914d8]
	29	[6255]	MOVE     	R3 R0 ; R3 := R0
	30	[6255]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[6256]	GETTABLE 	R3 R2 K12 ; R3 := R2["title"]
	32	[6256]	LOADK    	R4 K13 ; R4 := "\r\n\r\n"
	33	[6256]	GETTABLE 	R5 R2 K14 ; R5 := R2["desc"]
	34	[6256]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	35	[6258]	GETGLOBAL	R4 K15 ; R4 := 0x34291f5c
	36	[6258]	GETTABLE 	R4 R4 K16 ; R4 := R4[0xe27b35bb]
	37	[6258]	CALL     	R4 1 2 ; R4 := R4()
	38	[6259]	SETTABLE 	R4 K17 K18 ; R4["dialogType"] := 0.000000
	39	[6260]	SETTABLE 	R4 K19 R3 ; R4["locString"] := R3
	40	[6261]	GETTABLE 	R5 R2 K21 ; R5 := R2["confirm_button"]
	41	[6261]	SETTABLE 	R4 K20 R5 ; R4[0x8024bd2d] := R5
	42	[6263]	GETGLOBAL	R5 K22 ; R5 := 0x83f4e77c
	43	[6263]	SELF     	R5 R5 K23 ; R6 := R5; R5 := R5[0x7d63f19c]
	44	[6263]	CALL     	R5 2 2 ; R5 := R5(R6)
	45	[6263]	SELF     	R5 R5 K24 ; R6 := R5; R5 := R5[0x69e5aa4f]
	46	[6263]	MOVE     	R7 R4 ; R7 := R4
	47	[6263]	CALL     	R5 3 1 ; R5(R6,R7)
	48	[6265]	RETURN   	R0 1 ; return 

function #172 <?:6267,6294> (68 instructions, 272 bytes at 000001608CC0BCF0)
0 params, 5 slots, 2 upvalues, 0 locals, 19 constants, 0 functions
	1	[6269]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6269]	GETTABLE 	R0 R0 K0 ; R0 := R0["movie"]
	3	[6269]	TEST     	R0 0 ; if not R0 then PC := 12
	4	[6269]	JMP      	12 ; PC := 12
	5	[6270]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[6270]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[6270]	GETTABLE 	R1 R1 K1 ; R1 := R1["timeOpen"]
	8	[6270]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[6270]	GETTABLE 	R2 R2 K2 ; R2 := R2["timeToCheckDelay"]
	10	[6270]	ADD      	R1 R1 R2 ; R1 := R1 + R2
	11	[6270]	SETTABLE 	R0 K1 R1 ; R0[0x37779262] := R1
	12	[6274]	GETGLOBAL	R0 K3 ; R0 := 0x34291f5c
	13	[6274]	GETTABLE 	R0 R0 K4 ; R0 := R0[0xd27f8079]
	14	[6274]	CALL     	R0 1 2 ; R0 := R0()
	15	[6274]	TEST     	R0 0 ; if not R0 then PC := 33
	16	[6274]	JMP      	33 ; PC := 33
	17	[6275]	GETUPVAL 	R0 U0 ; R0 := U0
	18	[6275]	GETTABLE 	R0 R0 K0 ; R0 := R0["movie"]
	19	[6275]	TEST     	R0 1 ; if R0 then PC := 49
	20	[6275]	JMP      	49 ; PC := 49
	21	[6276]	GETUPVAL 	R0 U0 ; R0 := U0
	22	[6276]	GETGLOBAL	R1 K5 ; R1 := 0x9ba7909f
	23	[6276]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x6dd7aa66]
	24	[6276]	GETGLOBAL	R3 K7 ; R3 := 0xe8d2b0d8
	25	[6276]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	26	[6276]	SETTABLE 	R0 K0 R1 ; R0["movie"] := R1
	27	[6277]	GETUPVAL 	R0 U0 ; R0 := U0
	28	[6277]	SETTABLE 	R0 K1 K8 ; R0["timeOpen"] := 0.000000
	29	[6280]	GETGLOBAL	R0 K9 ; R0 := 0xe7f2b02f
	30	[6280]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x9971ad47]
	31	[6280]	CALL     	R0 2 1 ; R0(R1)
	32	[6281]	JMP      	49 ; PC := 49
	33	[6282]	GETUPVAL 	R0 U0 ; R0 := U0
	34	[6282]	GETTABLE 	R0 R0 K0 ; R0 := R0["movie"]
	35	[6282]	TEST     	R0 0 ; if not R0 then PC := 49
	36	[6282]	JMP      	49 ; PC := 49
	37	[6284]	GETUPVAL 	R0 U0 ; R0 := U0
	38	[6284]	GETTABLE 	R0 R0 K1 ; R0 := R0["timeOpen"]
	39	[6284]	GETUPVAL 	R1 U0 ; R1 := U0
	40	[6284]	GETTABLE 	R1 R1 K11 ; R1 := R1["minimumDisplayTime"]
	41	[6284]	LE       	0 R1 R0 ; if R1 > R0 then PC := 49
	42	[6284]	JMP      	49 ; PC := 49
	43	[6285]	GETUPVAL 	R0 U0 ; R0 := U0
	44	[6285]	GETTABLE 	R0 R0 K0 ; R0 := R0["movie"]
	45	[6285]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x32302b4a]
	46	[6285]	CALL     	R0 2 1 ; R0(R1)
	47	[6286]	GETUPVAL 	R0 U0 ; R0 := U0
	48	[6286]	SETTABLE 	R0 K0 K13 ; R0["movie"] := nil
	49	[6290]	GETGLOBAL	R0 K14 ; R0 := 0x7b998233
	50	[6290]	GETUPVAL 	R1 U0 ; R1 := U0
	51	[6290]	GETTABLE 	R1 R1 K15 ; R1 := R1["timerId"]
	52	[6290]	CALL     	R0 2 2 ; R0 := R0(R1)
	53	[6290]	TEST     	R0 1 ; if R0 then PC := 60
	54	[6290]	JMP      	60 ; PC := 60
	55	[6291]	GETGLOBAL	R0 K16 ; R0 := mTimerMgr
	56	[6291]	SELF     	R0 R0 K17 ; R1 := R0; R0 := R0[0x775c858b]
	57	[6291]	GETUPVAL 	R2 U0 ; R2 := U0
	58	[6291]	GETTABLE 	R2 R2 K15 ; R2 := R2["timerId"]
	59	[6291]	CALL     	R0 3 1 ; R0(R1,R2)
	60	[6293]	GETUPVAL 	R0 U0 ; R0 := U0
	61	[6293]	GETGLOBAL	R1 K16 ; R1 := mTimerMgr
	62	[6293]	SELF     	R1 R1 K18 ; R2 := R1; R1 := R1[0xbd2e96ea]
	63	[6293]	GETUPVAL 	R3 U0 ; R3 := U0
	64	[6293]	GETTABLE 	R3 R3 K2 ; R3 := R3["timeToCheckDelay"]
	65	[6293]	GETUPVAL 	R4 U1 ; R4 := U1
	66	[6293]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	67	[6293]	SETTABLE 	R0 K15 R1 ; R0[0xb071c019] := R1
	68	[6294]	RETURN   	R0 1 ; return 

function #173 <?:6296,6298> (4 instructions, 16 bytes at 000001608CC0C100)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[6297]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6297]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x8e9f5fee]
	3	[6297]	CALL     	R0 1 1 ; R0()
	4	[6298]	RETURN   	R0 1 ; return 

function #174 <?:6300,6524> (474 instructions, 1896 bytes at 000001608CC0C1F0)
0 params, 9 slots, 32 upvalues, 0 locals, 195 constants, 6 functions
	1	[6301]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[6301]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[6301]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[6301]	TEST     	R0 1 ; if R0 then PC := 27
	5	[6301]	JMP      	27 ; PC := 27
	6	[6302]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	7	[6302]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x368ad758]
	8	[6302]	OP_LOADBOOL	R2 0 0 ; R2 := false
	9	[6302]	CALL     	R0 3 1 ; R0(R1,R2)
	10	[6304]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	11	[6304]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x5f56eeab]
	12	[6304]	LOADK    	R2 K4 ; R2 := "RobotoRegular17"
	13	[6304]	LOADK    	R3 := 29.000000
	14	[6304]	LOADK    	R4 K5 ; R4 := "Filler text"
	15	[6304]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	16	[6305]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	17	[6305]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x5f56eeab]
	18	[6305]	LOADK    	R2 K6 ; R2 := "RobotoBold17"
	19	[6305]	LOADK    	R3 := 29.000000
	20	[6305]	LOADK    	R4 K5 ; R4 := "Filler text"
	21	[6305]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	22	[6307]	GETUPVAL 	R0 U0 ; R0 := U0
	23	[6307]	CALL     	R0 1 1 ; R0()
	24	[6308]	GETUPVAL 	R0 U1 ; R0 := U1
	25	[6308]	GETTABLE 	R0 R0 K7 ; R0 := R0[0x8024bd2d]
	26	[6308]	CALL     	R0 1 1 ; R0()
	27	[6311]	GETGLOBAL	R0 K8 ; R0 := 0x0032441c
	28	[6311]	GETTABLE 	R0 R0 K9 ; R0 := R0["CachedGoalInfo"]
	29	[6311]	EQ       	0 R0 K10 ; if R0 ~= nil then PC := 37
	30	[6311]	JMP      	37 ; PC := 37
	31	[6312]	GETGLOBAL	R0 K8 ; R0 := 0x0032441c
	32	[6312]	NEWTABLE 	R1 0 0 ; R1 := {}
	33	[6312]	SETTABLE 	R0 K9 R1 ; R0["CachedGoalInfo"] := R1
	34	[6313]	GETGLOBAL	R0 K8 ; R0 := 0x0032441c
	35	[6313]	NEWTABLE 	R1 0 0 ; R1 := {}
	36	[6313]	SETTABLE 	R0 K11 R1 ; R0["MergedGoalNodes"] := R1
	37	[6316]	GETGLOBAL	R0 K12 ; R0 := _T
	38	[6328]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	39	[6328]	GETUPVAL 	R0 U1 ; R0 := U1
	40	[6328]	GETUPVAL 	R0 U2 ; R0 := U2
	41	[6328]	SETTABLE 	R0 K13 R1 ; R0["gOpenWeaponRecoveryMission"] := R1
	42	[6330]	GETGLOBAL	R0 K14 ; R0 := 0x34291f5c
	43	[6330]	GETTABLE 	R0 R0 K15 ; R0 := R0[0xa7a2e381]
	44	[6330]	CALL     	R0 1 2 ; R0 := R0()
	45	[6330]	TEST     	R0 0 ; if not R0 then PC := 51
	46	[6330]	JMP      	51 ; PC := 51
	47	[6331]	GETGLOBAL	R0 K14 ; R0 := 0x34291f5c
	48	[6331]	GETTABLE 	R0 R0 K16 ; R0 := R0[0x65b1a965]
	49	[6331]	LOADK    	R1 K17 ; R1 := "OnWeGamePopUp"
	50	[6331]	CALL     	R0 2 1 ; R0(R1)
	51	[6334]	GETGLOBAL	R0 K18 ; R0 := 0x2d0fad09
	52	[6334]	LOADK    	R1 K19 ; R1 := "Lotus.Interface.Libs.TimerMgr"
	53	[6334]	CALL     	R0 2 2 ; R0 := R0(R1)
	54	[6335]	GETTABLE 	R1 R0 K21 ; R1 := R0[0xde474187]
	55	[6335]	CALL     	R1 1 2 ; R1 := R1()
	56	[6335]	SETGLOBALHASH	R1 K20 ; mTimerMgr := R1
	57	[6337]	GETGLOBAL	R1 K12 ; R1 := _T
	58	[6340]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	59	[6340]	SETTABLE 	R1 K22 R2 ; R1["AddToBackgroundTimer"] := R2
	60	[6342]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	61	[6342]	GETGLOBAL	R2 K23 ; R2 := 0x4c5fdf9c
	62	[6342]	CALL     	R1 2 2 ; R1 := R1(R2)
	63	[6342]	TEST     	R1 1 ; if R1 then PC := 69
	64	[6342]	JMP      	69 ; PC := 69
	65	[6343]	GETGLOBAL	R1 K24 ; R1 := 0x9ba7909f
	66	[6343]	SELF     	R1 R1 K25 ; R2 := R1; R1 := R1[0x6dd7aa66]
	67	[6343]	GETGLOBAL	R3 K23 ; R3 := 0x4c5fdf9c
	68	[6343]	CALL     	R1 3 1 ; R1(R2,R3)
	69	[6346]	NEWTABLE 	R1 6 0 ; R1 := {}
	70	[6346]	GETGLOBAL	R2 K26 ; R2 := 0xe1380899
	71	[6346]	GETGLOBAL	R3 K27 ; R3 := 0x420192be
	72	[6346]	GETGLOBAL	R4 K28 ; R4 := 0xc813104a
	73	[6346]	GETGLOBAL	R5 K29 ; R5 := 0x8fa91b7b
	74	[6346]	GETGLOBAL	R6 K30 ; R6 := 0x65bc0e9e
	75	[6346]	GETGLOBAL	R7 K31 ; R7 := 0x0ef37382
	76	[6346]	SETLIST  	R1 6 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 6
	77	[6346]	SETUPVAL 	R1 U3 ; U3 := R1
	78	[6348]	GETGLOBAL	R1 K32 ; R1 := movies
	79	[6348]	GETGLOBAL	R2 K34 ; R2 := 0x5465532c
	80	[6348]	SETTABLE 	R1 K33 R2 ; R1["Default"] := R2
	81	[6349]	GETGLOBAL	R1 K32 ; R1 := movies
	82	[6349]	GETGLOBAL	R2 K34 ; R2 := 0x5465532c
	83	[6349]	SETTABLE 	R1 K35 R2 ; R1["MainMenu"] := R2
	84	[6350]	GETGLOBAL	R1 K32 ; R1 := movies
	85	[6350]	GETGLOBAL	R2 K37 ; R2 := 0xbdad5a54
	86	[6350]	SETTABLE 	R1 K36 R2 ; R1["LoadOut"] := R2
	87	[6351]	GETGLOBAL	R1 K32 ; R1 := movies
	88	[6351]	GETGLOBAL	R2 K39 ; R2 := 0x6030f79f
	89	[6351]	SETTABLE 	R1 K38 R2 ; R1["LoadOutCrewShip"] := R2
	90	[6352]	GETGLOBAL	R1 K32 ; R1 := movies
	91	[6352]	GETGLOBAL	R2 K41 ; R2 := 0x5ffeed32
	92	[6352]	SETTABLE 	R1 K40 R2 ; R1["Inventory"] := R2
	93	[6353]	GETGLOBAL	R1 K32 ; R1 := movies
	94	[6353]	GETGLOBAL	R2 K43 ; R2 := 0x66d4e2ca
	95	[6353]	SETTABLE 	R1 K42 R2 ; R1["StyleManager"] := R2
	96	[6354]	GETGLOBAL	R1 K32 ; R1 := movies
	97	[6354]	GETGLOBAL	R2 K45 ; R2 := 0xba5a7939
	98	[6354]	SETTABLE 	R1 K44 R2 ; R1["Profile"] := R2
	99	[6355]	GETGLOBAL	R1 K32 ; R1 := movies
	100	[6355]	GETGLOBAL	R2 K47 ; R2 := 0xa106c3ae
	101	[6355]	SETTABLE 	R1 K46 R2 ; R1["Leaderboards"] := R2
	102	[6356]	GETGLOBAL	R1 K32 ; R1 := movies
	103	[6356]	GETGLOBAL	R2 K26 ; R2 := 0xe1380899
	104	[6356]	SETTABLE 	R1 K48 R2 ; R1["MissionStats"] := R2
	105	[6357]	GETGLOBAL	R1 K32 ; R1 := movies
	106	[6357]	GETGLOBAL	R2 K50 ; R2 := 0x295e8761
	107	[6357]	SETTABLE 	R1 K49 R2 ; R1["Settings"] := R2
	108	[6358]	GETGLOBAL	R1 K32 ; R1 := movies
	109	[6358]	GETGLOBAL	R2 K52 ; R2 := 0x0ba97bb4
	110	[6358]	SETTABLE 	R1 K51 R2 ; R1["Bindings"] := R2
	111	[6359]	GETGLOBAL	R1 K32 ; R1 := movies
	112	[6359]	GETGLOBAL	R2 K54 ; R2 := 0xdc45943d
	113	[6359]	SETTABLE 	R1 K53 R2 ; R1["Store"] := R2
	114	[6360]	GETGLOBAL	R1 K32 ; R1 := movies
	115	[6360]	GETGLOBAL	R2 K56 ; R2 := 0x900feed6
	116	[6360]	SETTABLE 	R1 K55 R2 ; R1["Lobby"] := R2
	117	[6361]	GETGLOBAL	R1 K32 ; R1 := movies
	118	[6361]	GETGLOBAL	R2 K58 ; R2 := 0xe3808980
	119	[6361]	SETTABLE 	R1 K57 R2 ; R1["LobbyPVP"] := R2
	120	[6362]	GETGLOBAL	R1 K32 ; R1 := movies
	121	[6362]	GETGLOBAL	R2 K60 ; R2 := 0x420fe829
	122	[6362]	SETTABLE 	R1 K59 R2 ; R1["ColorPicker"] := R2
	123	[6363]	GETGLOBAL	R1 K32 ; R1 := movies
	124	[6363]	GETGLOBAL	R2 K62 ; R2 := 0x80fe1846
	125	[6363]	SETTABLE 	R1 K61 R2 ; R1["Intel"] := R2
	126	[6364]	GETGLOBAL	R1 K32 ; R1 := movies
	127	[6364]	GETGLOBAL	R2 K64 ; R2 := 0x748b755d
	128	[6364]	SETTABLE 	R1 K63 R2 ; R1["UpgradeCards"] := R2
	129	[6365]	GETGLOBAL	R1 K32 ; R1 := movies
	130	[6365]	GETGLOBAL	R2 K66 ; R2 := 0xf07cbb7c
	131	[6365]	SETTABLE 	R1 K65 R2 ; R1["MemberRole"] := R2
	132	[6366]	GETGLOBAL	R1 K32 ; R1 := movies
	133	[6366]	GETGLOBAL	R2 K68 ; R2 := 0x6a400c4e
	134	[6366]	SETTABLE 	R1 K67 R2 ; R1["Menu"] := R2
	135	[6367]	GETGLOBAL	R1 K32 ; R1 := movies
	136	[6367]	GETGLOBAL	R2 K30 ; R2 := 0x65bc0e9e
	137	[6367]	SETTABLE 	R1 K69 R2 ; R1["Inbox"] := R2
	138	[6368]	GETGLOBAL	R1 K32 ; R1 := movies
	139	[6368]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	140	[6368]	GETTABLE 	R2 R2 K71 ; R2 := R2["UIMovie_ItemBrowsingMovie"]
	141	[6368]	SETTABLE 	R1 K70 R2 ; R1["ItemBrowsing"] := R2
	142	[6369]	GETGLOBAL	R1 K32 ; R1 := movies
	143	[6369]	GETGLOBAL	R2 K73 ; R2 := 0xef1adc3a
	144	[6369]	SETTABLE 	R1 K72 R2 ; R1[0x00006465] := R2
	145	[6370]	GETGLOBAL	R1 K32 ; R1 := movies
	146	[6370]	GETGLOBAL	R2 K75 ; R2 := 0x37779262
	147	[6370]	SETTABLE 	R1 K74 R2 ; R1["Clan"] := R2
	148	[6371]	GETGLOBAL	R1 K32 ; R1 := movies
	149	[6371]	GETGLOBAL	R2 K77 ; R2 := 0x7384bada
	150	[6371]	SETTABLE 	R1 K76 R2 ; R1["ClanSearch"] := R2
	151	[6372]	GETGLOBAL	R1 K32 ; R1 := movies
	152	[6372]	GETGLOBAL	R2 K79 ; R2 := 0x8d3c3891
	153	[6372]	SETTABLE 	R1 K78 R2 ; R1["Friends"] := R2
	154	[6373]	GETGLOBAL	R1 K32 ; R1 := movies
	155	[6373]	GETGLOBAL	R2 K81 ; R2 := 0xdbf8fb8c
	156	[6373]	SETTABLE 	R1 K80 R2 ; R1["SquadOverlay"] := R2
	157	[6374]	GETGLOBAL	R1 K32 ; R1 := movies
	158	[6374]	GETGLOBAL	R2 K83 ; R2 := 0xe465ca95
	159	[6374]	SETTABLE 	R1 K82 R2 ; R1["InvitePanel"] := R2
	160	[6375]	GETGLOBAL	R1 K32 ; R1 := movies
	161	[6375]	GETGLOBAL	R2 K85 ; R2 := 0x8a9373f5
	162	[6375]	SETTABLE 	R1 K84 R2 ; R1["Spectres"] := R2
	163	[6376]	GETGLOBAL	R1 K32 ; R1 := movies
	164	[6376]	GETGLOBAL	R2 K87 ; R2 := 0xc55bde47
	165	[6376]	SETTABLE 	R1 K86 R2 ; R1["DiegeticArtifactCards"] := R2
	166	[6377]	GETGLOBAL	R1 K32 ; R1 := movies
	167	[6377]	GETGLOBAL	R2 K89 ; R2 := 0xb071c019
	168	[6377]	SETTABLE 	R1 K88 R2 ; R1["AbilityProgression"] := R2
	169	[6378]	GETGLOBAL	R1 K32 ; R1 := movies
	170	[6378]	GETGLOBAL	R2 K91 ; R2 := 0x69749ee5
	171	[6378]	SETTABLE 	R1 K90 R2 ; R1["GiftUnwrap"] := R2
	172	[6379]	GETGLOBAL	R1 K32 ; R1 := movies
	173	[6379]	GETGLOBAL	R2 K93 ; R2 := 0x71e6d95f
	174	[6379]	SETTABLE 	R1 K92 R2 ; R1["InvasionSelection"] := R2
	175	[6380]	GETGLOBAL	R1 K32 ; R1 := movies
	176	[6380]	GETGLOBAL	R2 K95 ; R2 := 0x23f370a1
	177	[6380]	SETTABLE 	R1 K94 R2 ; R1["CustomizeTenno"] := R2
	178	[6381]	GETGLOBAL	R1 K32 ; R1 := movies
	179	[6381]	GETGLOBAL	R2 K97 ; R2 := 0x89567b1a
	180	[6381]	SETTABLE 	R1 K96 R2 ; R1["OperatorLoadout"] := R2
	181	[6382]	GETGLOBAL	R1 K32 ; R1 := movies
	182	[6382]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	183	[6382]	GETTABLE 	R2 R2 K99 ; R2 := R2["UIMovie_DetailedPurchaseDialog"]
	184	[6382]	SETTABLE 	R1 K98 R2 ; R1["DetailedPurchaseDialog"] := R2
	185	[6383]	GETGLOBAL	R1 K32 ; R1 := movies
	186	[6383]	GETGLOBAL	R2 K101 ; R2 := 0x005a373c
	187	[6383]	SETTABLE 	R1 K100 R2 ; R1["DarvoDeal"] := R2
	188	[6384]	GETGLOBAL	R1 K32 ; R1 := movies
	189	[6384]	GETGLOBAL	R2 K103 ; R2 := 0x4baca03a
	190	[6384]	SETTABLE 	R1 K102 R2 ; R1["GenericSettings"] := R2
	191	[6385]	GETGLOBAL	R1 K32 ; R1 := movies
	192	[6385]	GETGLOBAL	R2 K105 ; R2 := 0x08a5afb4
	193	[6385]	SETTABLE 	R1 K104 R2 ; R1["GenericMenu"] := R2
	194	[6386]	GETGLOBAL	R1 K32 ; R1 := movies
	195	[6386]	GETGLOBAL	R2 K107 ; R2 := 0x0150fb92
	196	[6386]	SETTABLE 	R1 K106 R2 ; R1["BeaconAccept"] := R2
	197	[6387]	GETGLOBAL	R1 K32 ; R1 := movies
	198	[6387]	GETGLOBAL	R2 K109 ; R2 := 0x5228d2b2
	199	[6387]	SETTABLE 	R1 K108 R2 ; R1["Intrinsics"] := R2
	200	[6388]	GETGLOBAL	R1 K32 ; R1 := movies
	201	[6388]	GETGLOBAL	R2 K111 ; R2 := 0x7286a683
	202	[6388]	SETTABLE 	R1 K110 R2 ; R1[0x3f3ae64c] := R2
	203	[6389]	GETGLOBAL	R1 K32 ; R1 := movies
	204	[6389]	GETGLOBAL	R2 K113 ; R2 := 0x808ea68d
	205	[6389]	SETTABLE 	R1 K112 R2 ; R1[0x1dd7e0dd] := R2
	206	[6390]	GETGLOBAL	R1 K32 ; R1 := movies
	207	[6390]	GETGLOBAL	R2 K115 ; R2 := 0xae7cd1d5
	208	[6390]	SETTABLE 	R1 K114 R2 ; R1[0x68d83431] := R2
	209	[6391]	GETGLOBAL	R1 K32 ; R1 := movies
	210	[6391]	GETGLOBAL	R2 K117 ; R2 := 0x481ccf68
	211	[6391]	SETTABLE 	R1 K116 R2 ; R1[0xbfa0067d] := R2
	212	[6393]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	213	[6393]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	214	[6393]	CALL     	R1 2 2 ; R1 := R1(R2)
	215	[6393]	TEST     	R1 1 ; if R1 then PC := 229
	216	[6393]	JMP      	229 ; PC := 229
	217	[6394]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	218	[6394]	SELF     	R1 R1 K118 ; R2 := R1; R1 := R1[0xc6a10ab1]
	219	[6394]	LOADK    	R3 := 0.000000
	220	[6394]	CALL     	R1 3 1 ; R1(R2,R3)
	221	[6395]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	222	[6395]	SELF     	R1 R1 K119 ; R2 := R1; R1 := R1[0x58bec6d6]
	223	[6395]	LOADK    	R3 := 0.000000
	224	[6395]	CALL     	R1 3 1 ; R1(R2,R3)
	225	[6397]	GETGLOBAL	R1 K24 ; R1 := 0x9ba7909f
	226	[6397]	SELF     	R1 R1 K120 ; R2 := R1; R1 := R1[0x8b966b9b]
	227	[6397]	OP_LOADBOOL	R3 1 0 ; R3 := true
	228	[6397]	CALL     	R1 3 1 ; R1(R2,R3)
	229	[6400]	OP_LOADBOOL	R1 0 0 ; R1 := false
	230	[6400]	SETGLOBALHASH	R1 K121 ; mFadeInStarted := R1
	231	[6401]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	232	[6401]	GETGLOBAL	R2 K122 ; R2 := mChildMovie
	233	[6401]	CALL     	R1 2 2 ; R1 := R1(R2)
	234	[6401]	TEST     	R1 1 ; if R1 then PC := 239
	235	[6401]	JMP      	239 ; PC := 239
	236	[6402]	GETGLOBAL	R1 K122 ; R1 := mChildMovie
	237	[6402]	SELF     	R1 R1 K123 ; R2 := R1; R1 := R1[0x32302b4a]
	238	[6402]	CALL     	R1 2 1 ; R1(R2)
	239	[6405]	GETGLOBAL	R1 K12 ; R1 := _T
	240	[6405]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	241	[6405]	SETTABLE 	R1 K124 R2 ; R1["BackgroundMovie"] := R2
	242	[6406]	GETGLOBAL	R1 K12 ; R1 := _T
	243	[6406]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	244	[6406]	GETGLOBAL	R3 K126 ; R3 := 0xbe190284
	245	[6406]	CALL     	R2 2 2 ; R2 := R2(R3)
	246	[6406]	TEST     	R2 1 ; if R2 then PC := 253
	247	[6406]	JMP      	253 ; PC := 253
	248	[6406]	GETGLOBAL	R2 K126 ; R2 := 0xbe190284
	249	[6406]	SELF     	R2 R2 K127 ; R3 := R2; R2 := R2[0xf2deaf69]
	250	[6406]	GETGLOBAL	R4 K128 ; R4 := gLotusSandBoxGameRulesType
	251	[6406]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	252	[6406]	JMP      	255 ; PC := 255
	253	[6406]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 254
	254	[6406]	OP_LOADBOOL	R2 1 0 ; R2 := true
	255	[6406]	SETTABLE 	R1 K125 R2 ; R1["InSimulacrum"] := R2
	256	[6407]	GETGLOBAL	R1 K12 ; R1 := _T
	257	[6407]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	258	[6407]	GETGLOBAL	R3 K126 ; R3 := 0xbe190284
	259	[6407]	CALL     	R2 2 2 ; R2 := R2(R3)
	260	[6407]	TEST     	R2 1 ; if R2 then PC := 267
	261	[6407]	JMP      	267 ; PC := 267
	262	[6407]	GETGLOBAL	R2 K126 ; R2 := 0xbe190284
	263	[6407]	SELF     	R2 R2 K127 ; R3 := R2; R2 := R2[0xf2deaf69]
	264	[6407]	GETGLOBAL	R4 K130 ; R4 := gLotusDojoGameRulesType
	265	[6407]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	266	[6407]	JMP      	269 ; PC := 269
	267	[6407]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 268
	268	[6407]	OP_LOADBOOL	R2 1 0 ; R2 := true
	269	[6407]	SETTABLE 	R1 K129 R2 ; R1["InDojo"] := R2
	270	[6408]	GETGLOBAL	R1 K12 ; R1 := _T
	271	[6408]	SETTABLE 	R1 K131 K10 ; R1["CachedZarimanFactionIdx"] := nil
	272	[6410]	GETGLOBAL	R1 K12 ; R1 := _T
	273	[6415]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	274	[6415]	GETUPVAL 	R0 U4 ; R0 := U4
	275	[6415]	SETTABLE 	R1 K132 R2 ; R1["DoPurchase"] := R2
	276	[6417]	GETGLOBAL	R1 K12 ; R1 := _T
	277	[6432]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	278	[6432]	GETUPVAL 	R0 U1 ; R0 := U1
	279	[6432]	GETUPVAL 	R0 U5 ; R0 := U5
	280	[6432]	SETTABLE 	R1 K133 R2 ; R1["BuyItem"] := R2
	281	[6434]	GETUPVAL 	R1 U6 ; R1 := U6
	282	[6434]	CALL     	R1 1 1 ; R1()
	283	[6436]	LOADNIL  	R1 R1 ; R1 := nil
	284	[6436]	SETGLOBALHASH	R1 K134 ; mCurrentMode := R1
	285	[6438]	GETGLOBAL	R1 K135 ; R1 := mControl
	286	[6438]	SETTABLE 	R1 K136 K137 ; R1["Initialized"] := true
	287	[6440]	GETGLOBAL	R1 K14 ; R1 := 0x34291f5c
	288	[6440]	GETTABLE 	R1 R1 K138 ; R1 := R1[0xa6cf258d]
	289	[6440]	LOADK    	R2 K139 ; R2 := "HttpRequestFailureCallback"
	290	[6440]	CALL     	R1 2 1 ; R1(R2)
	291	[6441]	GETGLOBAL	R1 K14 ; R1 := 0x34291f5c
	292	[6441]	GETTABLE 	R1 R1 K140 ; R1 := R1[0x164ca1b3]
	293	[6441]	LOADK    	R2 K141 ; R2 := "HttpRequestAuthFailureCallback"
	294	[6441]	CALL     	R1 2 1 ; R1(R2)
	295	[6442]	GETUPVAL 	R1 U7 ; R1 := U7
	296	[6442]	CALL     	R1 1 1 ; R1()
	297	[6445]	GETGLOBAL	R1 K12 ; R1 := _T
	298	[6445]	GETUPVAL 	R2 U8 ; R2 := U8
	299	[6445]	SETTABLE 	R1 K142 R2 ; R1["OpenScreen"] := R2
	300	[6446]	GETGLOBAL	R1 K12 ; R1 := _T
	301	[6446]	GETUPVAL 	R2 U9 ; R2 := U9
	302	[6446]	SETTABLE 	R1 K143 R2 ; R1["OpenScreenAsync"] := R2
	303	[6447]	GETGLOBAL	R1 K12 ; R1 := _T
	304	[6447]	GETUPVAL 	R2 U10 ; R2 := U10
	305	[6447]	SETTABLE 	R1 K144 R2 ; R1["GoToScreen"] := R2
	306	[6448]	GETGLOBAL	R1 K12 ; R1 := _T
	307	[6448]	GETUPVAL 	R2 U11 ; R2 := U11
	308	[6448]	SETTABLE 	R1 K145 R2 ; R1["ChangeScreen"] := R2
	309	[6449]	GETGLOBAL	R1 K12 ; R1 := _T
	310	[6449]	GETUPVAL 	R2 U12 ; R2 := U12
	311	[6449]	SETTABLE 	R1 K146 R2 ; R1["GoToPreviousScreen"] := R2
	312	[6450]	GETGLOBAL	R1 K12 ; R1 := _T
	313	[6450]	GETUPVAL 	R2 U13 ; R2 := U13
	314	[6450]	SETTABLE 	R1 K147 R2 ; R1["CloseScreen"] := R2
	315	[6451]	GETGLOBAL	R1 K12 ; R1 := _T
	316	[6451]	GETUPVAL 	R2 U14 ; R2 := U14
	317	[6451]	SETTABLE 	R1 K148 R2 ; R1["IsInScreenStack"] := R2
	318	[6452]	GETGLOBAL	R1 K12 ; R1 := _T
	319	[6452]	GETUPVAL 	R2 U15 ; R2 := U15
	320	[6452]	SETTABLE 	R1 K149 R2 ; R1["IsScreenOpen"] := R2
	321	[6453]	GETGLOBAL	R1 K12 ; R1 := _T
	322	[6453]	GETUPVAL 	R2 U16 ; R2 := U16
	323	[6453]	SETTABLE 	R1 K150 R2 ; R1["GetTopScreen"] := R2
	324	[6454]	GETGLOBAL	R1 K12 ; R1 := _T
	325	[6454]	GETUPVAL 	R2 U17 ; R2 := U17
	326	[6454]	SETTABLE 	R1 K151 R2 ; R1["ScreenOpened"] := R2
	327	[6455]	GETGLOBAL	R1 K12 ; R1 := _T
	328	[6455]	GETUPVAL 	R2 U18 ; R2 := U18
	329	[6455]	SETTABLE 	R1 K152 R2 ; R1["GetScreenRes"] := R2
	330	[6456]	GETGLOBAL	R1 K12 ; R1 := _T
	331	[6456]	GETUPVAL 	R2 U19 ; R2 := U19
	332	[6456]	SETTABLE 	R1 K153 R2 ; R1["ForceIntoStack"] := R2
	333	[6457]	GETGLOBAL	R1 K12 ; R1 := _T
	334	[6457]	GETUPVAL 	R2 U20 ; R2 := U20
	335	[6457]	SETTABLE 	R1 K154 R2 ; R1["ForceOutOfStack"] := R2
	336	[6458]	GETGLOBAL	R1 K12 ; R1 := _T
	337	[6458]	GETUPVAL 	R2 U21 ; R2 := U21
	338	[6458]	SETTABLE 	R1 K155 R2 ; R1["ForceClearScreenStack"] := R2
	339	[6460]	GETGLOBAL	R1 K12 ; R1 := _T
	340	[6460]	GETUPVAL 	R2 U22 ; R2 := U22
	341	[6460]	SETTABLE 	R1 K156 R2 ; R1["EnableUIInput"] := R2
	342	[6461]	GETGLOBAL	R1 K12 ; R1 := _T
	343	[6461]	GETUPVAL 	R2 U23 ; R2 := U23
	344	[6461]	SETTABLE 	R1 K157 R2 ; R1["DisableUIInput"] := R2
	345	[6463]	GETGLOBAL	R1 K12 ; R1 := _T
	346	[6463]	GETGLOBAL	R2 K159 ; R2 := 0xbcd84083
	347	[6463]	SETTABLE 	R1 K158 R2 ; R1["CachedTennoAvatar"] := R2
	348	[6465]	GETGLOBAL	R1 K12 ; R1 := _T
	349	[6465]	GETUPVAL 	R2 U24 ; R2 := U24
	350	[6465]	SETTABLE 	R1 K160 R2 ; R1["CompareInfoPopup"] := R2
	351	[6467]	GETGLOBAL	R1 K12 ; R1 := _T
	352	[6470]	CLOSURE  	R2 4 ; R2 := closure(Function #5)
	353	[6470]	GETUPVAL 	R0 U25 ; R0 := U25
	354	[6470]	SETTABLE 	R1 K161 R2 ; R1["PlayBackgroundTransmission"] := R2
	355	[6472]	GETGLOBAL	R1 K12 ; R1 := _T
	356	[6475]	CLOSURE  	R2 5 ; R2 := closure(Function #6)
	357	[6475]	GETUPVAL 	R0 U26 ; R0 := U26
	358	[6475]	SETTABLE 	R1 K162 R2 ; R1["SetAvatarLookAt"] := R2
	359	[6477]	GETGLOBAL	R1 K163 ; R1 := 0x76ea806b
	360	[6477]	SELF     	R1 R1 K164 ; R2 := R1; R1 := R1[0x12b342e0]
	361	[6477]	LOADK    	R3 K165 ; R3 := "OnUserChangedCallback"
	362	[6477]	CALL     	R1 3 1 ; R1(R2,R3)
	363	[6478]	GETGLOBAL	R1 K166 ; R1 := 0xe7f2b02f
	364	[6478]	SELF     	R1 R1 K167 ; R2 := R1; R1 := R1[0x592621b6]
	365	[6478]	LOADK    	R3 K168 ; R3 := "OnLoadHubMessage"
	366	[6478]	CALL     	R1 3 1 ; R1(R2,R3)
	367	[6479]	GETGLOBAL	R1 K166 ; R1 := 0xe7f2b02f
	368	[6479]	SELF     	R1 R1 K169 ; R2 := R1; R1 := R1[0xb1d1a0e2]
	369	[6479]	LOADK    	R3 K170 ; R3 := "OnLoadOrbiterMessage"
	370	[6479]	CALL     	R1 3 1 ; R1(R2,R3)
	371	[6481]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	372	[6481]	GETGLOBAL	R2 K171 ; R2 := 0x83f4e77c
	373	[6481]	CALL     	R1 2 2 ; R1 := R1(R2)
	374	[6481]	TEST     	R1 1 ; if R1 then PC := 390
	375	[6481]	JMP      	390 ; PC := 390
	376	[6482]	GETGLOBAL	R1 K171 ; R1 := 0x83f4e77c
	377	[6482]	SELF     	R1 R1 K172 ; R2 := R1; R1 := R1[0x7d63f19c]
	378	[6482]	CALL     	R1 2 2 ; R1 := R1(R2)
	379	[6483]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	380	[6483]	MOVE     	R3 R1 ; R3 := R1
	381	[6483]	CALL     	R2 2 2 ; R2 := R2(R3)
	382	[6483]	TEST     	R2 1 ; if R2 then PC := 390
	383	[6483]	JMP      	390 ; PC := 390
	384	[6484]	GETGLOBAL	R2 K173 ; R2 := 0x3d106989
	385	[6484]	LOADK    	R3 K174 ; R3 := "UISTYLE: Style changed callback registered"
	386	[6484]	CALL     	R2 2 1 ; R2(R3)
	387	[6485]	SELF     	R2 R1 K175 ; R3 := R1; R2 := R1[0x97b2b307]
	388	[6485]	LOADK    	R4 K176 ; R4 := "StyleChangedCallback"
	389	[6485]	CALL     	R2 3 1 ; R2(R3,R4)
	390	[6489]	GETGLOBAL	R2 K163 ; R2 := 0x76ea806b
	391	[6489]	SELF     	R2 R2 K177 ; R3 := R2; R2 := R2[0x3f3ae64c]
	392	[6489]	LOADK    	R4 := 0.000000
	393	[6489]	OP_LOADBOOL	R5 0 0 ; R5 := false
	394	[6489]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	395	[6490]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	396	[6490]	MOVE     	R4 R2 ; R4 := R2
	397	[6490]	CALL     	R3 2 2 ; R3 := R3(R4)
	398	[6490]	TEST     	R3 1 ; if R3 then PC := 463
	399	[6490]	JMP      	463 ; PC := 463
	400	[6491]	SELF     	R3 R2 K178 ; R4 := R2; R3 := R2[0x80563238]
	401	[6491]	CALL     	R3 2 2 ; R3 := R3(R4)
	402	[6492]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	403	[6492]	MOVE     	R5 R3 ; R5 := R3
	404	[6492]	CALL     	R4 2 2 ; R4 := R4(R5)
	405	[6492]	TEST     	R4 1 ; if R4 then PC := 463
	406	[6492]	JMP      	463 ; PC := 463
	407	[6493]	SELF     	R4 R3 K179 ; R5 := R3; R4 := R3[0x25a6e75e]
	408	[6493]	CALL     	R4 2 2 ; R4 := R4(R5)
	409	[6493]	SELF     	R4 R4 K180 ; R5 := R4; R4 := R4[0x8e7c3b5e]
	410	[6493]	CALL     	R4 2 2 ; R4 := R4(R5)
	411	[6494]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	412	[6494]	MOVE     	R6 R4 ; R6 := R4
	413	[6494]	CALL     	R5 2 2 ; R5 := R5(R6)
	414	[6494]	TEST     	R5 1 ; if R5 then PC := 432
	415	[6494]	JMP      	432 ; PC := 432
	416	[6495]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	417	[6495]	GETGLOBAL	R6 K126 ; R6 := 0xbe190284
	418	[6495]	CALL     	R5 2 2 ; R5 := R5(R6)
	419	[6495]	TEST     	R5 0 ; if not R5 then PC := 425
	420	[6495]	JMP      	425 ; PC := 425
	421	[6496]	GETGLOBAL	R5 K181 ; R5 := 0xcbd666e1
	422	[6496]	LOADK    	R6 := 0.000000
	423	[6496]	CALL     	R5 2 1 ; R5(R6)
	424	[6496]	JMP      	416 ; PC := 416
	425	[6498]	GETGLOBAL	R5 K126 ; R5 := 0xbe190284
	426	[6498]	SELF     	R5 R5 K182 ; R6 := R5; R5 := R5[0x8e07e77f]
	427	[6498]	SELF     	R7 R4 K183 ; R8 := R4; R7 := R4[0xed4e0128]
	428	[6498]	CALL     	R7 2 2 ; R7 := R7(R8)
	429	[6498]	LOADK    	R8 K184 ; R8 := "ActiveQuestLoaded"
	430	[6498]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	431	[6498]	JMP      	434 ; PC := 434
	432	[6500]	GETGLOBAL	R5 K12 ; R5 := _T
	433	[6500]	SETTABLE 	R5 K184 K137 ; R5["ActiveQuestLoaded"] := true
	434	[6506]	GETGLOBAL	R5 K185 ; R5 := 0x89326c93
	435	[6506]	SELF     	R5 R5 K186 ; R6 := R5; R5 := R5[0xca9ea368]
	436	[6506]	CALL     	R5 2 2 ; R5 := R5(R6)
	437	[6507]	GETGLOBAL	R6 K187 ; R6 := 0xa94df70b
	438	[6507]	SELF     	R6 R6 K188 ; R7 := R6; R6 := R6[0x85de842a]
	439	[6507]	MOVE     	R8 R5 ; R8 := R5
	440	[6507]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	441	[6507]	TEST     	R6 1 ; if R6 then PC := 463
	442	[6507]	JMP      	463 ; PC := 463
	443	[6508]	GETUPVAL 	R6 U27 ; R6 := U27
	444	[6508]	CALL     	R6 1 1 ; R6()
	445	[6509]	GETGLOBAL	R6 K12 ; R6 := _T
	446	[6509]	GETTABLE 	R6 R6 K189 ; R6 := R6["BackgroundInitialized"]
	447	[6509]	EQ       	1 R6 K137 ; if R6 == true then PC := 450
	448	[6509]	JMP      	450 ; PC := 450
	449	[6509]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 450
	450	[6509]	OP_LOADBOOL	R6 1 0 ; R6 := true
	451	[6510]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	452	[6510]	GETGLOBAL	R8 K171 ; R8 := 0x83f4e77c
	453	[6510]	CALL     	R7 2 2 ; R7 := R7(R8)
	454	[6510]	TEST     	R7 1 ; if R7 then PC := 458
	455	[6510]	JMP      	458 ; PC := 458
	456	[6510]	TEST     	R6 0 ; if not R6 then PC := 463
	457	[6510]	JMP      	463 ; PC := 463
	458	[6511]	GETUPVAL 	R7 U28 ; R7 := U28
	459	[6511]	OP_LOADBOOL	R8 0 0 ; R8 := false
	460	[6511]	CALL     	R7 2 1 ; R7(R8)
	461	[6512]	GETUPVAL 	R7 U29 ; R7 := U29
	462	[6512]	SETTABLE 	R7 K190 K191 ; R7["mForceRefreshWorldStatePostLogin"] := false
	463	[6518]	GETUPVAL 	R7 U30 ; R7 := U30
	464	[6518]	GETTABLE 	R7 R7 K192 ; R7 := R7[0x36fcc811]
	465	[6518]	CALL     	R7 1 1 ; R7()
	466	[6520]	GETGLOBAL	R7 K12 ; R7 := _T
	467	[6520]	GETUPVAL 	R8 U31 ; R8 := U31
	468	[6520]	SETTABLE 	R7 K193 R8 ; R7["ShowDioramaLevel"] := R8
	469	[6522]	GETGLOBAL	R7 K12 ; R7 := _T
	470	[6522]	SETTABLE 	R7 K189 K137 ; R7["BackgroundInitialized"] := true
	471	[6523]	GETGLOBAL	R7 K173 ; R7 := 0x3d106989
	472	[6523]	LOADK    	R8 K194 ; R8 := "Background.lua: Initialize"
	473	[6523]	CALL     	R7 2 1 ; R7(R8)
	474	[6524]	RETURN   	R0 1 ; return 

function #175 <?:6526,6528> (6 instructions, 24 bytes at 000001608158FCC0)
0 params, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[6527]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6527]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xf616a184]
	3	[6527]	LOADK    	R1 K1 ; R1 := "/Lotus/Language/Menu/MainMenu_LogoffConfirm"
	4	[6527]	LOADK    	R2 K2 ; R2 := "ConfirmLogoff"
	5	[6527]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[6528]	RETURN   	R0 1 ; return 

function #176 <?:6530,6533> (12 instructions, 48 bytes at 000001608158FE50)
0 params, 5 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[6531]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	2	[6531]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xc92b1e03]
	3	[6531]	CALL     	R0 2 1 ; R0(R1)
	4	[6532]	GETGLOBAL	R0 K2 ; R0 := _T
	5	[6532]	GETTABLE 	R0 R0 K3 ; R0 := R0["BackgroundMovie"]
	6	[6532]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xf56f3887]
	7	[6532]	LOADK    	R2 K5 ; R2 := "ConfirmLogoff"
	8	[6532]	NEWTABLE 	R3 1 0 ; R3 := {}
	9	[6532]	LOADK    	R4 := 4.000000
	10	[6532]	SETLIST  	R3 1 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 1
	11	[6532]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	12	[6533]	RETURN   	R0 1 ; return 

function #177 <?:6535,6546> (28 instructions, 112 bytes at 000001608158FFE0)
1 param, 6 slots, 3 upvalues, 0 locals, 10 constants, 0 functions
	1	[6536]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[6536]	MOVE     	R2 R0 ; R2 := R0
	3	[6536]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6536]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 28
	5	[6536]	JMP      	28 ; PC := 28
	6	[6537]	GETGLOBAL	R1 K3 ; R1 := 0xe7f2b02f
	7	[6537]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x0b6ebd5b]
	8	[6537]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[6537]	TEST     	R1 0 ; if not R1 then PC := 19
	10	[6537]	JMP      	19 ; PC := 19
	11	[6538]	GETGLOBAL	R1 K5 ; R1 := 0x3d106989
	12	[6538]	LOADK    	R2 K6 ; R2 := "ConfirmLogoff - IsBlockingTaskPending, waiting"
	13	[6538]	CALL     	R1 2 1 ; R1(R2)
	14	[6539]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[6539]	CALL     	R1 1 1 ; R1()
	16	[6540]	OP_LOADBOOL	R1 1 0 ; R1 := true
	17	[6540]	SETGLOBALHASH	R1 K7 ; mQueuedLogoff := R1
	18	[6540]	JMP      	28 ; PC := 28
	19	[6542]	GETGLOBAL	R1 K5 ; R1 := 0x3d106989
	20	[6542]	LOADK    	R2 K8 ; R2 := "Background.lua - ConfirmLogoff -> _FadeInOut -> _DoLogoff"
	21	[6542]	CALL     	R1 2 1 ; R1(R2)
	22	[6543]	GETUPVAL 	R1 U1 ; R1 := U1
	23	[6543]	LOADK    	R2 K9 ; R2 := 0.000100
	24	[6543]	LOADK    	R3 := 20.000000
	25	[6543]	LOADK    	R4 := 1.000000
	26	[6543]	GETUPVAL 	R5 U2 ; R5 := U2
	27	[6543]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	28	[6546]	RETURN   	R0 1 ; return 

function #178 <?:6548,6561> (35 instructions, 140 bytes at 00000160815902F0)
2+ params, 15 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[6549]	GETGLOBAL	R3 K0 ; R3 := movies
	2	[6549]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	3	[6550]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	4	[6550]	MOVE     	R5 R3 ; R5 := R3
	5	[6550]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[6550]	TEST     	R4 1 ; if R4 then PC := 33
	7	[6550]	JMP      	33 ; PC := 33
	8	[6551]	GETGLOBAL	R4 K2 ; R4 := 0x9ba7909f
	9	[6551]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0xbcfb64ab]
	10	[6551]	MOVE     	R6 R3 ; R6 := R3
	11	[6551]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	12	[6552]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	13	[6552]	MOVE     	R6 R4 ; R6 := R4
	14	[6552]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[6552]	TEST     	R5 1 ; if R5 then PC := 33
	16	[6552]	JMP      	33 ; PC := 33
	17	[6553]	LOADK    	R5 K4 ; R5 := ""
	18	[6554]	GETGLOBAL	R6 K5 ; R6 := 0xc8802016
	19	[6554]	MOVE     	R7 R2 ; R7 := R2
	20	[6554]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	21	[6554]	JMP      	26 ; PC := 26
	22	[6555]	MOVE     	R11 R5 ; R11 := R5
	23	[6555]	LOADK    	R12 K6 ; R12 := ","
	24	[6555]	MOVE     	R13 R10 ; R13 := R10
	25	[6555]	CONCAT   	R5 R11 R13 ; R5 := R11 .. R12 .. R13
	26	[6554]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 22; R8 := R9 end
	27	[6555]	JMP      	22 ; PC := 22
	28	[6557]	SELF     	R11 R4 K7 ; R12 := R4; R11 := R4[0xe4162eed]
	29	[6557]	MOVE     	R13 R1 ; R13 := R1
	30	[6557]	MOVE     	R14 R5 ; R14 := R5
	31	[6557]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	32	[6557]	RETURN   	R11 2 ; return R11 
	33	[6560]	OP_LOADBOOL	R11 0 0 ; R11 := false
	34	[6560]	RETURN   	R11 2 ; return R11 
	35	[6561]	RETURN   	R0 1 ; return 

function #179 <?:6563,6565> (7 instructions, 28 bytes at 0000016081590550)
2+ params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6564]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[6564]	MOVE     	R4 R0 ; R4 := R0
	3	[6564]	MOVE     	R5 R1 ; R5 := R1
	4	[6564]	VARARG   	R6 0 ; R6 := ...
	5	[6564]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	6	[6564]	RETURN   	R3 2 ; return R3 
	7	[6565]	RETURN   	R0 1 ; return 

function #180 <?:6567,6576> (24 instructions, 96 bytes at 0000016081590640)
3 params, 9 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6568]	GETGLOBAL	R3 K0 ; R3 := movies
	2	[6568]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	3	[6569]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	4	[6569]	MOVE     	R5 R3 ; R5 := R3
	5	[6569]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[6569]	TEST     	R4 1 ; if R4 then PC := 22
	7	[6569]	JMP      	22 ; PC := 22
	8	[6570]	GETGLOBAL	R4 K2 ; R4 := 0x9ba7909f
	9	[6570]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0xbcfb64ab]
	10	[6570]	MOVE     	R6 R3 ; R6 := R3
	11	[6570]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	12	[6571]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	13	[6571]	MOVE     	R6 R4 ; R6 := R4
	14	[6571]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[6571]	TEST     	R5 1 ; if R5 then PC := 22
	16	[6571]	JMP      	22 ; PC := 22
	17	[6572]	SELF     	R5 R4 K4 ; R6 := R4; R5 := R4[0xe4162eed]
	18	[6572]	MOVE     	R7 R1 ; R7 := R1
	19	[6572]	MOVE     	R8 R2 ; R8 := R2
	20	[6572]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[6572]	RETURN   	R5 2 ; return R5 
	22	[6575]	OP_LOADBOOL	R5 0 0 ; R5 := false
	23	[6575]	RETURN   	R5 2 ; return R5 
	24	[6576]	RETURN   	R0 1 ; return 

function #181 <?:6578,6581> (11 instructions, 44 bytes at 0000016081590810)
1+ param, 7 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[6579]	GETGLOBAL	R2 K0 ; R2 := screenStack
	2	[6579]	GETGLOBAL	R3 K0 ; R3 := screenStack
	3	[6579]	LEN      	R3 R3 ; R3 := # R3
	4	[6579]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	5	[6580]	GETUPVAL 	R3 U0 ; R3 := U0
	6	[6580]	MOVE     	R4 R2 ; R4 := R2
	7	[6580]	MOVE     	R5 R0 ; R5 := R0
	8	[6580]	VARARG   	R6 0 ; R6 := ...
	9	[6580]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	10	[6580]	RETURN   	R3 2 ; return R3 
	11	[6581]	RETURN   	R0 1 ; return 

function #182 <?:6583,6588> (19 instructions, 76 bytes at 0000016081590940)
1 param, 7 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[6584]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 4
	2	[6584]	JMP      	4 ; PC := 4
	3	[6584]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 4
	4	[6584]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[6585]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	6	[6585]	GETGLOBAL	R2 K2 ; R2 := mStyleBackgroundMovie
	7	[6585]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[6585]	TEST     	R1 1 ; if R1 then PC := 19
	9	[6585]	JMP      	19 ; PC := 19
	10	[6586]	GETGLOBAL	R1 K2 ; R1 := mStyleBackgroundMovie
	11	[6586]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x2d6bad65]
	12	[6586]	GETUPVAL 	R3 U0 ; R3 := U0
	13	[6586]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x06d055f9]
	14	[6586]	MOVE     	R4 R0 ; R4 := R0
	15	[6586]	GETGLOBAL	R5 K5 ; R5 := 0x0c4ff375
	16	[6586]	GETGLOBAL	R6 K6 ; R6 := 0xd80c3870
	17	[6586]	CALL     	R3 4 0 ; R3,... := R3(R4,R5,R6)
	18	[6586]	CALL     	R1 0 1 ; R1(R2,...)
	19	[6588]	RETURN   	R0 1 ; return 

function #183 <?:6590,6600> (27 instructions, 108 bytes at 0000016081590B10)
0 params, 6 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[6591]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[6591]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[6591]	GETGLOBAL	R2 K2 ; R2 := 0xbdad5a54
	4	[6591]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[6592]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	6	[6592]	MOVE     	R2 R0 ; R2 := R0
	7	[6592]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[6592]	TEST     	R1 1 ; if R1 then PC := 14
	9	[6592]	JMP      	14 ; PC := 14
	10	[6593]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xe4162eed]
	11	[6593]	LOADK    	R3 K5 ; R3 := "UpdatePurchases"
	12	[6593]	LOADK    	R4 K6 ; R4 := ""
	13	[6593]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	14	[6596]	GETGLOBAL	R1 K0 ; R1 := 0x9ba7909f
	15	[6596]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbcfb64ab]
	16	[6596]	GETGLOBAL	R3 K7 ; R3 := 0xe44a533a
	17	[6596]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	18	[6597]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	19	[6597]	MOVE     	R3 R1 ; R3 := R1
	20	[6597]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[6597]	TEST     	R2 1 ; if R2 then PC := 27
	22	[6597]	JMP      	27 ; PC := 27
	23	[6598]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0xe4162eed]
	24	[6598]	LOADK    	R4 K8 ; R4 := "RefreshBoosters"
	25	[6598]	LOADK    	R5 K6 ; R5 := ""
	26	[6598]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	27	[6600]	RETURN   	R0 1 ; return 

function #184 <?:6602,6607> (12 instructions, 48 bytes at 0000016081590D80)
0 params, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6603]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[6603]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[6603]	GETGLOBAL	R2 K2 ; R2 := 0xbdad5a54
	4	[6603]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[6604]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	6	[6604]	MOVE     	R2 R0 ; R2 := R0
	7	[6604]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[6604]	TEST     	R1 1 ; if R1 then PC := 12
	9	[6604]	JMP      	12 ; PC := 12
	10	[6605]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0x32302b4a]
	11	[6605]	CALL     	R1 2 1 ; R1(R2)
	12	[6607]	RETURN   	R0 1 ; return 

function #185 <?:6609,6611> (5 instructions, 20 bytes at 0000016081590EF0)
1 param, 4 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6610]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6610]	LOADK    	R2 := 2.000000
	3	[6610]	MOVE     	R3 R0 ; R3 := R0
	4	[6610]	CALL     	R1 3 1 ; R1(R2,R3)
	5	[6611]	RETURN   	R0 1 ; return 

function #186 <?:6613,6615> (4 instructions, 16 bytes at 0000016081590FE0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6614]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6614]	LOADK    	R1 := 0.000000
	3	[6614]	CALL     	R0 2 1 ; R0(R1)
	4	[6615]	RETURN   	R0 1 ; return 

function #187 <?:6617,6642> (111 instructions, 444 bytes at 00000160815910B0)
0 params, 11 slots, 2 upvalues, 0 locals, 35 constants, 0 functions
	1	[6618]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[6618]	NEWTABLE 	R1 0 0 ; R1 := {}
	3	[6618]	SETTABLE 	R0 K1 R1 ; R0["boosterPackCards"] := R1
	4	[6619]	LOADK    	R0 := 1.000000
	5	[6619]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[6619]	GETTABLE 	R1 R1 K2 ; R1 := R1["mNumberOfCardsInPack"]
	7	[6619]	LOADK    	R2 := 1.000000
	8	[6619]	FORPREP  	R0 23 ; R0 -= R2; PC := 23
	9	[6620]	GETGLOBAL	R4 K3 ; R4 := 0x33bdd652
	10	[6620]	GETTABLE 	R4 R4 K4 ; R4 := R4[0x23d5322f]
	11	[6620]	GETGLOBAL	R5 K0 ; R5 := _T
	12	[6620]	GETTABLE 	R5 R5 K1 ; R5 := R5["boosterPackCards"]
	13	[6620]	GETUPVAL 	R6 U0 ; R6 := U0
	14	[6620]	GETTABLE 	R6 R6 K5 ; R6 := R6["mBoosterPackResults"]
	15	[6620]	GETTABLE 	R6 R6 K6 ; R6 := R6[1.000000]
	16	[6620]	CALL     	R4 3 1 ; R4(R5,R6)
	17	[6621]	GETGLOBAL	R4 K3 ; R4 := 0x33bdd652
	18	[6621]	GETTABLE 	R4 R4 K7 ; R4 := R4[0x9c1f3b5a]
	19	[6621]	GETUPVAL 	R5 U0 ; R5 := U0
	20	[6621]	GETTABLE 	R5 R5 K5 ; R5 := R5["mBoosterPackResults"]
	21	[6621]	LOADK    	R6 := 1.000000
	22	[6621]	CALL     	R4 3 1 ; R4(R5,R6)
	23	[6619]	FORLOOP  	R0 9 ; R0 += R2; if R0 <= R1 then begin PC := 9; R3 := R0 end
	24	[6624]	GETUPVAL 	R4 U0 ; R4 := U0
	25	[6624]	GETUPVAL 	R5 U0 ; R5 := U0
	26	[6624]	GETTABLE 	R5 R5 K8 ; R5 := R5["mNumberOfPacksToProcess"]
	27	[6624]	SUB      	R5 R5 K6 ; R5 := R5 - 1.000000
	28	[6624]	SETTABLE 	R4 K8 R5 ; R4["mNumberOfPacksToProcess"] := R5
	29	[6625]	GETGLOBAL	R4 K0 ; R4 := _T
	30	[6625]	GETUPVAL 	R5 U1 ; R5 := U1
	31	[6625]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x06d055f9]
	32	[6625]	GETUPVAL 	R6 U0 ; R6 := U0
	33	[6625]	GETTABLE 	R6 R6 K8 ; R6 := R6["mNumberOfPacksToProcess"]
	34	[6625]	EQ       	1 R6 K11 ; if R6 == 0.000000 then PC := 37
	35	[6625]	JMP      	37 ; PC := 37
	36	[6625]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 37
	37	[6625]	OP_LOADBOOL	R6 1 0 ; R6 := true
	38	[6625]	LOADNIL  	R7 R7 ; R7 := nil
	39	[6625]	GETUPVAL 	R8 U0 ; R8 := U0
	40	[6625]	GETTABLE 	R8 R8 K8 ; R8 := R8["mNumberOfPacksToProcess"]
	41	[6625]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	42	[6625]	SETTABLE 	R4 K9 R5 ; R4["queuedBoosterPacks"] := R5
	43	[6626]	GETGLOBAL	R4 K12 ; R4 := 0xae91e43b
	44	[6626]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x1fd6abd0]
	45	[6626]	GETGLOBAL	R6 K14 ; R6 := 0x39803e25
	46	[6626]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	47	[6627]	GETGLOBAL	R5 K12 ; R5 := 0xae91e43b
	48	[6627]	SELF     	R5 R5 K15 ; R6 := R5; R5 := R5[0x42b04007]
	49	[6627]	LOADK    	R7 K16 ; R7 := "/Lotus/Language/Menu/Store_GetRandomItem"
	50	[6627]	OP_LOADBOOL	R8 0 0 ; R8 := false
	51	[6627]	NEWTABLE 	R9 0 1 ; R9 := {}
	52	[6627]	GETUPVAL 	R10 U0 ; R10 := U0
	53	[6627]	GETTABLE 	R10 R10 K18 ; R10 := R10["mBoosterPackItemString"]
	54	[6627]	SETTABLE 	R9 K17 R10 ; R9["randomItem"] := R10
	55	[6627]	CALL     	R5 5 2 ; R5 := R5(R6,R7,R8,R9)
	56	[6628]	GETUPVAL 	R6 U1 ; R6 := U1
	57	[6628]	GETTABLE 	R6 R6 K19 ; R6 := R6[0x659d451f]
	58	[6628]	GETGLOBAL	R7 K20 ; R7 := 0x0032441c
	59	[6628]	GETTABLE 	R7 R7 K21 ; R7 := R7["UISound_Purchase"]
	60	[6628]	CALL     	R6 2 1 ; R6(R7)
	61	[6629]	SELF     	R6 R4 K22 ; R7 := R4; R6 := R4[0xf56f3887]
	62	[6629]	LOADK    	R8 K23 ; R8 := "SetText"
	63	[6629]	NEWTABLE 	R9 1 0 ; R9 := {}
	64	[6629]	MOVE     	R10 R5 ; R10 := R5
	65	[6629]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	66	[6629]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	67	[6630]	GETUPVAL 	R6 U0 ; R6 := U0
	68	[6630]	GETTABLE 	R6 R6 K8 ; R6 := R6["mNumberOfPacksToProcess"]
	69	[6630]	LT       	0 R6 K6 ; if R6 >= 1.000000 then PC := 76
	70	[6630]	JMP      	76 ; PC := 76
	71	[6631]	SELF     	R6 R4 K24 ; R7 := R4; R6 := R4[0xe4162eed]
	72	[6631]	LOADK    	R8 K25 ; R8 := "SetCallback"
	73	[6631]	LOADK    	R9 K26 ; R9 := "ConfirmPopup"
	74	[6631]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	75	[6631]	JMP      	80 ; PC := 80
	76	[6633]	SELF     	R6 R4 K24 ; R7 := R4; R6 := R4[0xe4162eed]
	77	[6633]	LOADK    	R8 K25 ; R8 := "SetCallback"
	78	[6633]	LOADK    	R9 K27 ; R9 := "ProcessBoosterPacks"
	79	[6633]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	80	[6635]	GETUPVAL 	R6 U0 ; R6 := U0
	81	[6635]	GETTABLE 	R6 R6 K28 ; R6 := R6["mTotalPacksToProcess"]
	82	[6635]	LT       	0 K6 R6 ; if 1.000000 >= R6 then PC := 102
	83	[6635]	JMP      	102 ; PC := 102
	84	[6636]	GETGLOBAL	R6 K12 ; R6 := 0xae91e43b
	85	[6636]	SELF     	R6 R6 K15 ; R7 := R6; R6 := R6[0x42b04007]
	86	[6636]	LOADK    	R8 K29 ; R8 := "/Lotus/Language/Menu/Pack_Display_Count"
	87	[6636]	OP_LOADBOOL	R9 0 0 ; R9 := false
	88	[6636]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	89	[6637]	GETGLOBAL	R7 K30 ; R7 := 0x7f5022cf
	90	[6637]	GETTABLE 	R7 R7 K31 ; R7 := R7[0xe8072ded]
	91	[6637]	MOVE     	R8 R6 ; R8 := R6
	92	[6637]	GETUPVAL 	R9 U0 ; R9 := U0
	93	[6637]	GETTABLE 	R9 R9 K32 ; R9 := R9["mCurrentPack"]
	94	[6637]	GETUPVAL 	R10 U0 ; R10 := U0
	95	[6637]	GETTABLE 	R10 R10 K28 ; R10 := R10["mTotalPacksToProcess"]
	96	[6637]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	97	[6637]	MOVE     	R6 R7 ; R6 := R7
	98	[6638]	SELF     	R7 R4 K24 ; R8 := R4; R7 := R4[0xe4162eed]
	99	[6638]	LOADK    	R9 K33 ; R9 := "SetCaption"
	100	[6638]	MOVE     	R10 R6 ; R10 := R6
	101	[6638]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	102	[6640]	SELF     	R7 R4 K24 ; R8 := R4; R7 := R4[0xe4162eed]
	103	[6640]	LOADK    	R9 K34 ; R9 := "SetNumOptions"
	104	[6640]	LOADK    	R10 := 1.000000
	105	[6640]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	106	[6641]	GETUPVAL 	R7 U0 ; R7 := U0
	107	[6641]	GETUPVAL 	R8 U0 ; R8 := U0
	108	[6641]	GETTABLE 	R8 R8 K32 ; R8 := R8["mCurrentPack"]
	109	[6641]	ADD      	R8 R8 K6 ; R8 := R8 + 1.000000
	110	[6641]	SETTABLE 	R7 K32 R8 ; R7["mCurrentPack"] := R8
	111	[6642]	RETURN   	R0 1 ; return 

function #188 <?:6644,6646> (3 instructions, 12 bytes at 0000016081591770)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6645]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6645]	CALL     	R0 1 1 ; R0()
	3	[6646]	RETURN   	R0 1 ; return 

function #189 <?:6648,6755> (240 instructions, 960 bytes at 0000016081591840)
3 params, 35 slots, 5 upvalues, 0 locals, 56 constants, 0 functions
	1	[6649]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[6649]	NEWTABLE 	R4 0 0 ; R4 := {}
	3	[6649]	SETTABLE 	R3 K0 R4 ; R3["mBoosterPackResults"] := R4
	4	[6650]	GETUPVAL 	R3 U0 ; R3 := U0
	5	[6650]	SETTABLE 	R3 K1 K2 ; R3["mBoosterPackItemString"] := ""
	6	[6651]	OP_LOADBOOL	R3 0 0 ; R3 := false
	7	[6652]	GETGLOBAL	R4 K3 ; R4 := 0x76ea806b
	8	[6652]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x3f3ae64c]
	9	[6652]	LOADK    	R6 := 0.000000
	10	[6652]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	11	[6653]	SELF     	R5 R4 K5 ; R6 := R4; R5 := R4[0x80563238]
	12	[6653]	CALL     	R5 2 2 ; R5 := R5(R6)
	13	[6654]	NEWTABLE 	R6 0 0 ; R6 := {}
	14	[6656]	LEN      	R7 R1 ; R7 := # R1
	15	[6656]	EQ       	0 R7 K6 ; if R7 ~= 0.000000 then PC := 43
	16	[6656]	JMP      	43 ; PC := 43
	17	[6659]	GETTABLE 	R7 R0 K7 ; R7 := R0["KubrowPetEggs"]
	18	[6659]	EQ       	1 R7 K8 ; if R7 == nil then PC := 21
	19	[6659]	JMP      	21 ; PC := 21
	20	[6660]	OP_LOADBOOL	R3 1 0 ; R3 := true
	21	[6663]	GETTABLE 	R7 R0 K9 ; R7 := R0["MiscItems"]
	22	[6663]	EQ       	1 R7 K8 ; if R7 == nil then PC := 162
	23	[6663]	JMP      	162 ; PC := 162
	24	[6664]	LOADK    	R7 := 1.000000
	25	[6664]	GETTABLE 	R8 R0 K9 ; R8 := R0["MiscItems"]
	26	[6664]	LEN      	R8 R8 ; R8 := # R8
	27	[6664]	LOADK    	R9 := 1.000000
	28	[6664]	FORPREP  	R7 41 ; R7 -= R9; PC := 41
	29	[6665]	GETGLOBAL	R11 K10 ; R11 := 0x7ed0a956
	30	[6665]	GETTABLE 	R12 R0 K9 ; R12 := R0["MiscItems"]
	31	[6665]	GETTABLE 	R12 R12 R10 ; R12 := R12[R10]
	32	[6665]	GETTABLE 	R12 R12 K11 ; R12 := R12["ItemType"]
	33	[6665]	CALL     	R11 2 2 ; R11 := R11(R12)
	34	[6666]	SELF     	R12 R11 K12 ; R13 := R11; R12 := R11[0xf2deaf69]
	35	[6666]	GETGLOBAL	R14 K13 ; R14 := 0x2fb8423c
	36	[6666]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	37	[6666]	TEST     	R12 0 ; if not R12 then PC := 41
	38	[6666]	JMP      	41 ; PC := 41
	39	[6667]	OP_LOADBOOL	R12 1 0 ; R12 := true
	40	[6667]	SETGLOBALHASH	R12 K14 ; mBoughtShipFeatureItem := R12
	41	[6664]	FORLOOP  	R7 29 ; R7 += R9; if R7 <= R8 then begin PC := 29; R10 := R7 end
	42	[6670]	JMP      	162 ; PC := 162
	43	[6673]	LOADK    	R12 := 1.000000
	44	[6673]	LEN      	R13 R1 ; R13 := # R1
	45	[6673]	LOADK    	R14 := 1.000000
	46	[6673]	FORPREP  	R12 152 ; R12 -= R14; PC := 152
	47	[6674]	GETGLOBAL	R16 K15 ; R16 := 0x015284cd
	48	[6674]	LOADK    	R17 K16 ; R17 := ","
	49	[6674]	GETTABLE 	R18 R1 R15 ; R18 := R1[R15]
	50	[6674]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	51	[6676]	LEN      	R17 R16 ; R17 := # R16
	52	[6676]	EQ       	0 R17 K17 ; if R17 ~= 1.000000 then PC := 66
	53	[6676]	JMP      	66 ; PC := 66
	54	[6677]	GETGLOBAL	R17 K18 ; R17 := 0x3d106989
	55	[6677]	LOADK    	R18 K19 ; R18 := "Parse failure: "
	56	[6677]	MOVE     	R19 R2 ; R19 := R2
	57	[6677]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	58	[6677]	CALL     	R17 2 1 ; R17(R18)
	59	[6678]	GETUPVAL 	R17 U1 ; R17 := U1
	60	[6678]	OP_LOADBOOL	R18 0 0 ; R18 := false
	61	[6678]	CALL     	R17 2 1 ; R17(R18)
	62	[6679]	GETUPVAL 	R17 U2 ; R17 := U2
	63	[6679]	CALL     	R17 1 1 ; R17()
	64	[6681]	RETURN   	R0 1 ; return 
	65	[6681]	JMP      	152 ; PC := 152
	66	[6682]	LEN      	R17 R16 ; R17 := # R16
	67	[6682]	LE       	0 K20 R17 ; if 2.000000 > R17 then PC := 152
	68	[6682]	JMP      	152 ; PC := 152
	69	[6683]	GETTABLE 	R17 R16 K17 ; R17 := R16[1.000000]
	70	[6684]	GETTABLE 	R18 R16 K20 ; R18 := R16[2.000000]
	71	[6686]	GETGLOBAL	R19 K21 ; R19 := 0xb009bbc6
	72	[6686]	MOVE     	R20 R17 ; R20 := R17
	73	[6686]	CALL     	R19 2 2 ; R19 := R19(R20)
	74	[6687]	GETGLOBAL	R20 K22 ; R20 := 0x7b998233
	75	[6687]	MOVE     	R21 R19 ; R21 := R19
	76	[6687]	CALL     	R20 2 2 ; R20 := R20(R21)
	77	[6687]	TEST     	R20 1 ; if R20 then PC := 152
	78	[6687]	JMP      	152 ; PC := 152
	79	[6688]	SELF     	R20 R19 K23 ; R21 := R19; R20 := R19[0xf278f8a1]
	80	[6688]	CALL     	R20 2 2 ; R20 := R20(R21)
	81	[6688]	SELF     	R20 R20 K12 ; R21 := R20; R20 := R20[0xf2deaf69]
	82	[6688]	GETGLOBAL	R22 K24 ; R22 := gLotusArtifactUpgradeType
	83	[6688]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	84	[6688]	TEST     	R20 0 ; if not R20 then PC := 118
	85	[6688]	JMP      	118 ; PC := 118
	86	[6690]	GETGLOBAL	R20 K25 ; R20 := 0x6c97a788
	87	[6690]	GETTABLE 	R20 R20 K26 ; R20 := R20[0x1aba4d9e]
	88	[6690]	CALL     	R20 1 2 ; R20 := R20()
	89	[6691]	SELF     	R21 R19 K23 ; R22 := R19; R21 := R19[0xf278f8a1]
	90	[6691]	CALL     	R21 2 2 ; R21 := R21(R22)
	91	[6691]	SETTABLE 	R20 K27 R21 ; R20["mItemType"] := R21
	92	[6692]	SETTABLE 	R20 K28 K17 ; R20["mItemCount"] := 1.000000
	93	[6694]	OP_LOADBOOL	R21 0 0 ; R21 := false
	94	[6695]	LOADK    	R22 := 1.000000
	95	[6695]	LEN      	R23 R6 ; R23 := # R6
	96	[6695]	LOADK    	R24 := 1.000000
	97	[6695]	FORPREP  	R22 110 ; R22 -= R24; PC := 110
	98	[6696]	GETTABLE 	R26 R6 R25 ; R26 := R6[R25]
	99	[6696]	GETTABLE 	R26 R26 K27 ; R26 := R26["mItemType"]
	100	[6696]	GETTABLE 	R27 R20 K27 ; R27 := R20["mItemType"]
	101	[6696]	EQ       	0 R26 R27 ; if R26 ~= R27 then PC := 110
	102	[6696]	JMP      	110 ; PC := 110
	103	[6697]	GETTABLE 	R26 R6 R25 ; R26 := R6[R25]
	104	[6697]	GETTABLE 	R27 R6 R25 ; R27 := R6[R25]
	105	[6697]	GETTABLE 	R27 R27 K28 ; R27 := R27["mItemCount"]
	106	[6697]	ADD      	R27 R27 K17 ; R27 := R27 + 1.000000
	107	[6697]	SETTABLE 	R26 K28 R27 ; R26["mItemCount"] := R27
	108	[6698]	OP_LOADBOOL	R21 1 0 ; R21 := true
	109	[6699]	JMP      	111 ; PC := 111
	110	[6695]	FORLOOP  	R22 98 ; R22 += R24; if R22 <= R23 then begin PC := 98; R25 := R22 end
	111	[6703]	TEST     	R21 1 ; if R21 then PC := 118
	112	[6703]	JMP      	118 ; PC := 118
	113	[6704]	GETGLOBAL	R26 K29 ; R26 := 0x33bdd652
	114	[6704]	GETTABLE 	R26 R26 K30 ; R26 := R26[0x23d5322f]
	115	[6704]	MOVE     	R27 R6 ; R27 := R6
	116	[6704]	MOVE     	R28 R20 ; R28 := R20
	117	[6704]	CALL     	R26 3 1 ; R26(R27,R28)
	118	[6708]	GETGLOBAL	R26 K29 ; R26 := 0x33bdd652
	119	[6708]	GETTABLE 	R26 R26 K30 ; R26 := R26[0x23d5322f]
	120	[6708]	GETUPVAL 	R27 U0 ; R27 := U0
	121	[6708]	GETTABLE 	R27 R27 K0 ; R27 := R27["mBoosterPackResults"]
	122	[6708]	NEWTABLE 	R28 2 0 ; R28 := {}
	123	[6708]	MOVE     	R29 R19 ; R29 := R19
	124	[6708]	MOVE     	R30 R18 ; R30 := R18
	125	[6708]	SETLIST  	R28 2 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 2
	126	[6708]	CALL     	R26 3 1 ; R26(R27,R28)
	127	[6710]	GETGLOBAL	R26 K31 ; R26 := 0xae91e43b
	128	[6710]	SELF     	R26 R26 K32 ; R27 := R26; R26 := R26[0x42b04007]
	129	[6710]	GETGLOBAL	R28 K33 ; R28 := 0x64fb1586
	130	[6710]	SELF     	R29 R19 K34 ; R30 := R19; R29 := R19[0xd3a9d01f]
	131	[6710]	CALL     	R29 2 0 ; R29,... := R29(R30)
	132	[6710]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	133	[6710]	OP_LOADBOOL	R29 0 0 ; R29 := false
	134	[6710]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	135	[6711]	GETUPVAL 	R27 U0 ; R27 := U0
	136	[6711]	GETTABLE 	R27 R27 K0 ; R27 := R27["mBoosterPackResults"]
	137	[6711]	LEN      	R27 R27 ; R27 := # R27
	138	[6711]	LT       	0 K17 R27 ; if 1.000000 >= R27 then PC := 146
	139	[6711]	JMP      	146 ; PC := 146
	140	[6712]	GETUPVAL 	R27 U0 ; R27 := U0
	141	[6712]	GETUPVAL 	R28 U0 ; R28 := U0
	142	[6712]	GETTABLE 	R28 R28 K1 ; R28 := R28["mBoosterPackItemString"]
	143	[6712]	LOADK    	R29 K35 ; R29 := "\\,"
	144	[6712]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	145	[6712]	SETTABLE 	R27 K1 R28 ; R27["mBoosterPackItemString"] := R28
	146	[6714]	GETUPVAL 	R27 U0 ; R27 := U0
	147	[6714]	GETUPVAL 	R28 U0 ; R28 := U0
	148	[6714]	GETTABLE 	R28 R28 K1 ; R28 := R28["mBoosterPackItemString"]
	149	[6714]	MOVE     	R29 R26 ; R29 := R26
	150	[6714]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	151	[6714]	SETTABLE 	R27 K1 R28 ; R27["mBoosterPackItemString"] := R28
	152	[6673]	FORLOOP  	R12 47 ; R12 += R14; if R12 <= R13 then begin PC := 47; R15 := R12 end
	153	[6719]	LOADK    	R27 := 1.000000
	154	[6719]	LEN      	R28 R6 ; R28 := # R6
	155	[6719]	LOADK    	R29 := 1.000000
	156	[6719]	FORPREP  	R27 161 ; R27 -= R29; PC := 161
	157	[6720]	SELF     	R31 R5 K36 ; R32 := R5; R31 := R5[0x303eb010]
	158	[6720]	GETTABLE 	R33 R6 R30 ; R33 := R6[R30]
	159	[6720]	OP_LOADBOOL	R34 1 0 ; R34 := true
	160	[6720]	CALL     	R31 4 1 ; R31(R32,R33,R34)
	161	[6719]	FORLOOP  	R27 157 ; R27 += R29; if R27 <= R28 then begin PC := 157; R30 := R27 end
	162	[6724]	GETUPVAL 	R31 U0 ; R31 := U0
	163	[6724]	GETTABLE 	R31 R31 K0 ; R31 := R31["mBoosterPackResults"]
	164	[6724]	LEN      	R31 R31 ; R31 := # R31
	165	[6724]	LT       	0 K6 R31 ; if 0.000000 >= R31 then PC := 187
	166	[6724]	JMP      	187 ; PC := 187
	167	[6725]	GETUPVAL 	R31 U0 ; R31 := U0
	168	[6725]	GETGLOBAL	R32 K38 ; R32 := mQuantityToReceive
	169	[6725]	SETTABLE 	R31 K37 R32 ; R31["mTotalPacksToProcess"] := R32
	170	[6726]	GETUPVAL 	R31 U0 ; R31 := U0
	171	[6726]	GETUPVAL 	R32 U0 ; R32 := U0
	172	[6726]	GETTABLE 	R32 R32 K0 ; R32 := R32["mBoosterPackResults"]
	173	[6726]	LEN      	R32 R32 ; R32 := # R32
	174	[6726]	GETUPVAL 	R33 U0 ; R33 := U0
	175	[6726]	GETTABLE 	R33 R33 K37 ; R33 := R33["mTotalPacksToProcess"]
	176	[6726]	DIV      	R32 R32 R33 ; R32 := R32 / R33
	177	[6726]	SETTABLE 	R31 K39 R32 ; R31["mNumberOfCardsInPack"] := R32
	178	[6727]	GETUPVAL 	R31 U0 ; R31 := U0
	179	[6727]	SETTABLE 	R31 K40 K17 ; R31["mCurrentPack"] := 1.000000
	180	[6728]	GETUPVAL 	R31 U0 ; R31 := U0
	181	[6728]	GETUPVAL 	R32 U0 ; R32 := U0
	182	[6728]	GETTABLE 	R32 R32 K37 ; R32 := R32["mTotalPacksToProcess"]
	183	[6728]	SETTABLE 	R31 K41 R32 ; R31["mNumberOfPacksToProcess"] := R32
	184	[6729]	GETUPVAL 	R31 U3 ; R31 := U3
	185	[6729]	CALL     	R31 1 1 ; R31()
	186	[6729]	JMP      	192 ; PC := 192
	187	[6731]	GETGLOBAL	R31 K31 ; R31 := 0xae91e43b
	188	[6731]	SELF     	R31 R31 K43 ; R32 := R31; R31 := R31[0x1fd6abd0]
	189	[6731]	GETGLOBAL	R33 K44 ; R33 := 0x09de914d
	190	[6731]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	191	[6731]	SETGLOBALHASH	R31 K42 ; mPurchasePopupMovie := R31
	192	[6736]	TEST     	R3 0 ; if not R3 then PC := 219
	193	[6736]	JMP      	219 ; PC := 219
	194	[6736]	GETGLOBAL	R31 K45 ; R31 := 0xbe190284
	195	[6736]	SELF     	R31 R31 K12 ; R32 := R31; R31 := R31[0xf2deaf69]
	196	[6736]	GETGLOBAL	R33 K46 ; R33 := gLotusAttractModeGameRulesType
	197	[6736]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	198	[6736]	TEST     	R31 0 ; if not R31 then PC := 219
	199	[6736]	JMP      	219 ; PC := 219
	200	[6737]	GETGLOBAL	R31 K45 ; R31 := 0xbe190284
	201	[6737]	SELF     	R31 R31 K47 ; R32 := R31; R31 := R31[0x7cf8123f]
	202	[6737]	LOADK    	R33 := 1.000000
	203	[6737]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	204	[6738]	GETGLOBAL	R32 K22 ; R32 := 0x7b998233
	205	[6738]	MOVE     	R33 R31 ; R33 := R31
	206	[6738]	CALL     	R32 2 2 ; R32 := R32(R33)
	207	[6738]	TEST     	R32 0 ; if not R32 then PC := 219
	208	[6738]	JMP      	219 ; PC := 219
	209	[6738]	GETGLOBAL	R32 K48 ; R32 := _T
	210	[6738]	GETTABLE 	R32 R32 K49 ; R32 := R32["domeCommands"]
	211	[6738]	TEST     	R32 0 ; if not R32 then PC := 219
	212	[6738]	JMP      	219 ; PC := 219
	213	[6739]	GETGLOBAL	R32 K48 ; R32 := _T
	214	[6739]	GETTABLE 	R32 R32 K49 ; R32 := R32["domeCommands"]
	215	[6739]	GETTABLE 	R32 R32 K50 ; R32 := R32["Cycle"]
	216	[6739]	NEWTABLE 	R33 0 1 ; R33 := {}
	217	[6739]	SETTABLE 	R33 K51 K52 ; R33["opaque"] := true
	218	[6739]	CALL     	R32 2 1 ; R32(R33)
	219	[6743]	GETUPVAL 	R32 U2 ; R32 := U2
	220	[6743]	CALL     	R32 1 1 ; R32()
	221	[6745]	GETGLOBAL	R32 K14 ; R32 := mBoughtShipFeatureItem
	222	[6745]	TEST     	R32 0 ; if not R32 then PC := 230
	223	[6745]	JMP      	230 ; PC := 230
	224	[6746]	GETUPVAL 	R32 U4 ; R32 := U4
	225	[6746]	GETTABLE 	R32 R32 K53 ; R32 := R32[0x22828de3]
	226	[6746]	OP_LOADBOOL	R33 0 0 ; R33 := false
	227	[6746]	CALL     	R32 2 1 ; R32(R33)
	228	[6747]	OP_LOADBOOL	R32 0 0 ; R32 := false
	229	[6747]	SETGLOBALHASH	R32 K14 ; mBoughtShipFeatureItem := R32
	230	[6750]	GETUPVAL 	R32 U1 ; R32 := U1
	231	[6750]	OP_LOADBOOL	R33 1 0 ; R33 := true
	232	[6750]	CALL     	R32 2 1 ; R32(R33)
	233	[6752]	GETTABLE 	R32 R0 K54 ; R32 := R0["QuestKeys"]
	234	[6752]	EQ       	1 R32 K8 ; if R32 == nil then PC := 240
	235	[6752]	JMP      	240 ; PC := 240
	236	[6753]	GETUPVAL 	R32 U4 ; R32 := U4
	237	[6753]	GETTABLE 	R32 R32 K55 ; R32 := R32[0x7c37aeec]
	238	[6753]	OP_LOADBOOL	R33 1 0 ; R33 := true
	239	[6753]	CALL     	R32 2 1 ; R32(R33)
	240	[6755]	RETURN   	R0 1 ; return 

function #190 <?:6757,6801> (99 instructions, 396 bytes at 0000016081592480)
2 params, 12 slots, 4 upvalues, 0 locals, 37 constants, 0 functions
	1	[6758]	TEST     	R0 1 ; if R0 then PC := 81
	2	[6758]	JMP      	81 ; PC := 81
	3	[6759]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	4	[6759]	LOADK    	R3 K1 ; R3 := "FAILURE: "
	5	[6759]	MOVE     	R4 R1 ; R4 := R1
	6	[6759]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	7	[6759]	CALL     	R2 2 1 ; R2(R3)
	8	[6760]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[6760]	CALL     	R2 1 1 ; R2()
	10	[6761]	LOADK    	R2 K2 ; R2 := "PurchaseFailure_UnknownError"
	11	[6762]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	12	[6762]	MOVE     	R4 R1 ; R4 := R1
	13	[6762]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[6763]	EQ       	1 R3 K4 ; if R3 == nil then PC := 48
	15	[6763]	JMP      	48 ; PC := 48
	16	[6764]	EQ       	0 R3 K5 ; if R3 ~= 6.000000 then PC := 20
	17	[6764]	JMP      	20 ; PC := 20
	18	[6765]	LOADK    	R2 K6 ; R2 := "PurchaseFailure_InvalidItem"
	19	[6765]	JMP      	55 ; PC := 55
	20	[6766]	EQ       	0 R3 K7 ; if R3 ~= 5.000000 then PC := 24
	21	[6766]	JMP      	24 ; PC := 24
	22	[6767]	LOADK    	R2 K8 ; R2 := "PurchaseFailure_InsufficientSlots"
	23	[6767]	JMP      	55 ; PC := 55
	24	[6768]	EQ       	0 R3 K9 ; if R3 ~= 4.000000 then PC := 28
	25	[6768]	JMP      	28 ; PC := 28
	26	[6769]	LOADK    	R2 K10 ; R2 := "PurchaseFailure_InvalidAccount"
	27	[6769]	JMP      	55 ; PC := 55
	28	[6770]	EQ       	0 R3 K11 ; if R3 ~= 3.000000 then PC := 32
	29	[6770]	JMP      	32 ; PC := 32
	30	[6771]	LOADK    	R2 K12 ; R2 := "PurchaseFailure_AuthenticationFailed"
	31	[6771]	JMP      	55 ; PC := 55
	32	[6772]	EQ       	0 R3 K13 ; if R3 ~= 2.000000 then PC := 36
	33	[6772]	JMP      	36 ; PC := 36
	34	[6773]	LOADK    	R2 K14 ; R2 := "PurchaseFailure_InsufficientXP"
	35	[6773]	JMP      	55 ; PC := 55
	36	[6774]	EQ       	0 R3 K15 ; if R3 ~= 1.000000 then PC := 40
	37	[6774]	JMP      	40 ; PC := 40
	38	[6775]	LOADK    	R2 K16 ; R2 := "PurchaseFailure_InsufficientFunds"
	39	[6775]	JMP      	55 ; PC := 55
	40	[6776]	EQ       	0 R3 K17 ; if R3 ~= 13.000000 then PC := 44
	41	[6776]	JMP      	44 ; PC := 44
	42	[6777]	LOADK    	R2 K18 ; R2 := "PurchaseFailure_OutOfStock"
	43	[6777]	JMP      	55 ; PC := 55
	44	[6778]	EQ       	0 R3 K19 ; if R3 ~= 15.000000 then PC := 55
	45	[6778]	JMP      	55 ; PC := 55
	46	[6779]	LOADK    	R2 K20 ; R2 := "PurchaseFailure_NewBuild"
	47	[6780]	JMP      	55 ; PC := 55
	48	[6781]	GETUPVAL 	R4 U1 ; R4 := U1
	49	[6781]	GETTABLE 	R4 R4 K21 ; R4 := R4[0x7b3cf471]
	50	[6781]	MOVE     	R5 R1 ; R5 := R1
	51	[6781]	CALL     	R4 2 2 ; R4 := R4(R5)
	52	[6781]	TEST     	R4 0 ; if not R4 then PC := 55
	53	[6781]	JMP      	55 ; PC := 55
	54	[6782]	LOADK    	R2 K22 ; R2 := "PurchaseFailure_ConnectionError"
	55	[6785]	GETGLOBAL	R4 K23 ; R4 := 0xae91e43b
	56	[6785]	SELF     	R4 R4 K24 ; R5 := R4; R4 := R4[0x42b04007]
	57	[6785]	LOADK    	R6 K25 ; R6 := "/Lotus/Language/Menu/PurchaseFailure"
	58	[6785]	OP_LOADBOOL	R7 1 0 ; R7 := true
	59	[6785]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	60	[6786]	GETGLOBAL	R5 K23 ; R5 := 0xae91e43b
	61	[6786]	SELF     	R5 R5 K24 ; R6 := R5; R5 := R5[0x42b04007]
	62	[6786]	LOADK    	R7 K26 ; R7 := "/Lotus/Language/Menu/"
	63	[6786]	MOVE     	R8 R2 ; R8 := R2
	64	[6786]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	65	[6786]	OP_LOADBOOL	R8 1 0 ; R8 := true
	66	[6786]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	67	[6787]	MOVE     	R6 R4 ; R6 := R4
	68	[6787]	LOADK    	R7 K27 ; R7 := " ("
	69	[6787]	MOVE     	R8 R5 ; R8 := R5
	70	[6787]	LOADK    	R9 K28 ; R9 := ")"
	71	[6787]	CONCAT   	R4 R6 R9 ; R4 := R6 .. R7 .. R8 .. R9
	72	[6788]	GETUPVAL 	R6 U1 ; R6 := U1
	73	[6788]	GETTABLE 	R6 R6 K29 ; R6 := R6[0xe0cba3ca]
	74	[6788]	MOVE     	R7 R4 ; R7 := R4
	75	[6788]	LOADK    	R8 K30 ; R8 := "ConfirmPopup"
	76	[6788]	CALL     	R6 3 1 ; R6(R7,R8)
	77	[6789]	GETUPVAL 	R6 U2 ; R6 := U2
	78	[6789]	OP_LOADBOOL	R7 0 0 ; R7 := false
	79	[6789]	CALL     	R6 2 1 ; R6(R7)
	80	[6790]	RETURN   	R0 1 ; return 
	81	[6793]	NEWTABLE 	R6 0 0 ; R6 := {}
	82	[6795]	GETGLOBAL	R7 K31 ; R7 := cjson
	83	[6795]	GETTABLE 	R7 R7 K32 ; R7 := R7[0x7ab914d8]
	84	[6795]	MOVE     	R8 R1 ; R8 := R1
	85	[6795]	CALL     	R7 2 2 ; R7 := R7(R8)
	86	[6796]	GETTABLE 	R8 R7 K33 ; R8 := R7["BoosterPackItems"]
	87	[6796]	EQ       	1 R8 K4 ; if R8 == nil then PC := 94
	88	[6796]	JMP      	94 ; PC := 94
	89	[6797]	GETGLOBAL	R8 K34 ; R8 := 0x015284cd
	90	[6797]	LOADK    	R9 K35 ; R9 := ";"
	91	[6797]	GETTABLE 	R10 R7 K33 ; R10 := R7["BoosterPackItems"]
	92	[6797]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	93	[6797]	MOVE     	R6 R8 ; R6 := R8
	94	[6800]	GETUPVAL 	R8 U3 ; R8 := U3
	95	[6800]	GETTABLE 	R9 R7 K36 ; R9 := R7["InventoryChanges"]
	96	[6800]	MOVE     	R10 R6 ; R10 := R6
	97	[6800]	MOVE     	R11 R1 ; R11 := R1
	98	[6800]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	99	[6801]	RETURN   	R0 1 ; return 

function #191 <?:6803,6805> (4 instructions, 16 bytes at 0000016081592E50)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6804]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6804]	LOADNIL  	R2 R2 ; R2 := nil
	3	[6804]	CALL     	R1 2 1 ; R1(R2)
	4	[6805]	RETURN   	R0 1 ; return 

function #192 <?:6807,6842> (110 instructions, 440 bytes at 0000016081592F20)
1 param, 9 slots, 4 upvalues, 0 locals, 28 constants, 0 functions
	1	[6808]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6808]	LOADNIL  	R2 R2 ; R2 := nil
	3	[6808]	CALL     	R1 2 1 ; R1(R2)
	4	[6809]	LOADK    	R1 K0 ; R1 := ""
	5	[6810]	GETGLOBAL	R2 K1 ; R2 := 0xcb79539e
	6	[6810]	EQ       	1 R2 K2 ; if R2 == nil then PC := 19
	7	[6810]	JMP      	19 ; PC := 19
	8	[6810]	GETGLOBAL	R2 K3 ; R2 := mBaseSourceType
	9	[6810]	EQ       	1 R2 K2 ; if R2 == nil then PC := 19
	10	[6810]	JMP      	19 ; PC := 19
	11	[6810]	GETGLOBAL	R2 K3 ; R2 := mBaseSourceType
	12	[6810]	EQ       	1 R2 K0 ; if R2 == "" then PC := 19
	13	[6810]	JMP      	19 ; PC := 19
	14	[6811]	GETUPVAL 	R2 U1 ; R2 := U1
	15	[6811]	GETGLOBAL	R3 K3 ; R3 := mBaseSourceType
	16	[6811]	ADD      	R3 R3 K4 ; R3 := R3 + 1.000000
	17	[6811]	GETTABLE 	R1 R2 R3 ; R1 := R2[R3]
	18	[6811]	JMP      	20 ; PC := 20
	19	[6813]	GETGLOBAL	R1 K5 ; R1 := mPurchaseOrigin
	20	[6815]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 23
	21	[6815]	JMP      	23 ; PC := 23
	22	[6816]	LOADK    	R1 K0 ; R1 := ""
	23	[6818]	GETGLOBAL	R2 K6 ; R2 := 0x03f57322
	24	[6818]	MOVE     	R3 R0 ; R3 := R0
	25	[6818]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[6818]	EQ       	0 R2 K8 ; if R2 ~= 4.000000 then PC := 94
	27	[6818]	JMP      	94 ; PC := 94
	28	[6819]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	29	[6819]	GETGLOBAL	R3 K1 ; R3 := 0xcb79539e
	30	[6819]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[6819]	TEST     	R2 1 ; if R2 then PC := 42
	32	[6819]	JMP      	42 ; PC := 42
	33	[6820]	GETGLOBAL	R2 K1 ; R2 := 0xcb79539e
	34	[6820]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x8b8fb8b7]
	35	[6820]	GETGLOBAL	R4 K11 ; R4 := 0x0469f296
	36	[6820]	LOADK    	R5 K12 ; R5 := "INSUFFICIENT_PLAT_POPUP"
	37	[6820]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[6820]	MOVE     	R5 R1 ; R5 := R1
	39	[6820]	LOADK    	R6 K13 ; R6 := "_YES"
	40	[6820]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	41	[6820]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	42	[6823]	GETGLOBAL	R2 K7 ; R2 := 0x34291f5c
	43	[6823]	GETTABLE 	R2 R2 K14 ; R2 := R2[0x9e503547]
	44	[6823]	CALL     	R2 1 2 ; R2 := R2()
	45	[6823]	TEST     	R2 0 ; if not R2 then PC := 52
	46	[6823]	JMP      	52 ; PC := 52
	47	[6823]	GETGLOBAL	R2 K7 ; R2 := 0x34291f5c
	48	[6823]	GETTABLE 	R2 R2 K15 ; R2 := R2[0xbcd06415]
	49	[6823]	CALL     	R2 1 2 ; R2 := R2()
	50	[6823]	TEST     	R2 1 ; if R2 then PC := 71
	51	[6823]	JMP      	71 ; PC := 71
	52	[6824]	GETGLOBAL	R2 K7 ; R2 := 0x34291f5c
	53	[6824]	GETTABLE 	R2 R2 K16 ; R2 := R2[0x49d4c6fc]
	54	[6824]	CALL     	R2 1 2 ; R2 := R2()
	55	[6824]	TEST     	R2 0 ; if not R2 then PC := 66
	56	[6824]	JMP      	66 ; PC := 66
	57	[6824]	GETGLOBAL	R2 K17 ; R2 := 0x76ea806b
	58	[6824]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0x3f3ae64c]
	59	[6824]	LOADK    	R4 := 0.000000
	60	[6824]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	61	[6824]	SELF     	R2 R2 K19 ; R3 := R2; R2 := R2[0xfe6131c3]
	62	[6824]	LOADK    	R4 K20 ; R4 := "steam_market"
	63	[6824]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	64	[6824]	TEST     	R2 1 ; if R2 then PC := 71
	65	[6824]	JMP      	71 ; PC := 71
	66	[6825]	GETGLOBAL	R2 K7 ; R2 := 0x34291f5c
	67	[6825]	GETTABLE 	R2 R2 K21 ; R2 := R2[0x9ad21ae9]
	68	[6825]	CALL     	R2 1 2 ; R2 := R2()
	69	[6825]	TEST     	R2 0 ; if not R2 then PC := 78
	70	[6825]	JMP      	78 ; PC := 78
	71	[6826]	GETGLOBAL	R2 K22 ; R2 := 0x2d0fad09
	72	[6826]	LOADK    	R3 K23 ; R3 := "Lotus.Interface.StoreItemUtilities"
	73	[6826]	CALL     	R2 2 2 ; R2 := R2(R3)
	74	[6827]	GETTABLE 	R3 R2 K24 ; R3 := R2[0x80d045d2]
	75	[6827]	GETGLOBAL	R4 K25 ; R4 := 0xae91e43b
	76	[6827]	CALL     	R3 2 1 ; R3(R4)
	77	[6827]	JMP      	108 ; PC := 108
	78	[6829]	GETGLOBAL	R3 K17 ; R3 := 0x76ea806b
	79	[6829]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0x3f3ae64c]
	80	[6829]	LOADK    	R5 := 0.000000
	81	[6829]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	82	[6830]	SELF     	R4 R3 K19 ; R5 := R3; R4 := R3[0xfe6131c3]
	83	[6830]	LOADK    	R6 K26 ; R6 := "direct_platinum"
	84	[6830]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	85	[6830]	TEST     	R4 0 ; if not R4 then PC := 90
	86	[6830]	JMP      	90 ; PC := 90
	87	[6831]	GETUPVAL 	R4 U2 ; R4 := U2
	88	[6831]	CALL     	R4 1 1 ; R4()
	89	[6831]	JMP      	108 ; PC := 108
	90	[6833]	GETUPVAL 	R4 U3 ; R4 := U3
	91	[6833]	MOVE     	R5 R1 ; R5 := R1
	92	[6833]	CALL     	R4 2 1 ; R4(R5)
	93	[6835]	JMP      	108 ; PC := 108
	94	[6837]	GETGLOBAL	R4 K9 ; R4 := 0x7b998233
	95	[6837]	GETGLOBAL	R5 K1 ; R5 := 0xcb79539e
	96	[6837]	CALL     	R4 2 2 ; R4 := R4(R5)
	97	[6837]	TEST     	R4 1 ; if R4 then PC := 108
	98	[6837]	JMP      	108 ; PC := 108
	99	[6838]	GETGLOBAL	R4 K1 ; R4 := 0xcb79539e
	100	[6838]	SELF     	R4 R4 K10 ; R5 := R4; R4 := R4[0x8b8fb8b7]
	101	[6838]	GETGLOBAL	R6 K11 ; R6 := 0x0469f296
	102	[6838]	LOADK    	R7 K12 ; R7 := "INSUFFICIENT_PLAT_POPUP"
	103	[6838]	CALL     	R6 2 2 ; R6 := R6(R7)
	104	[6838]	MOVE     	R7 R1 ; R7 := R1
	105	[6838]	LOADK    	R8 K27 ; R8 := "_NO"
	106	[6838]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	107	[6838]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	108	[6841]	LOADK    	R4 K0 ; R4 := ""
	109	[6841]	SETGLOBALHASH	R4 K3 ; mBaseSourceType := R4
	110	[6842]	RETURN   	R0 1 ; return 

function #193 <?:6844,6875> (68 instructions, 272 bytes at 00000160815935C0)
1 param, 6 slots, 3 upvalues, 0 locals, 22 constants, 0 functions
	1	[6845]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[6845]	MOVE     	R2 R0 ; R2 := R0
	3	[6845]	CALL     	R1 2 1 ; R1(R2)
	4	[6847]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[6847]	GETGLOBAL	R2 K2 ; R2 := _T
	6	[6847]	GETTABLE 	R2 R2 K3 ; R2 := R2["UpgradeDurabilityCallback"]
	7	[6847]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[6847]	TEST     	R1 1 ; if R1 then PC := 26
	9	[6847]	JMP      	26 ; PC := 26
	10	[6847]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	11	[6847]	GETGLOBAL	R2 K2 ; R2 := _T
	12	[6847]	GETTABLE 	R2 R2 K4 ; R2 := R2["UpgradeDurabilityCallbackMovie"]
	13	[6847]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[6847]	TEST     	R1 1 ; if R1 then PC := 26
	15	[6847]	JMP      	26 ; PC := 26
	16	[6848]	GETGLOBAL	R1 K2 ; R1 := _T
	17	[6848]	GETTABLE 	R1 R1 K4 ; R1 := R1["UpgradeDurabilityCallbackMovie"]
	18	[6848]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xe4162eed]
	19	[6848]	GETGLOBAL	R3 K2 ; R3 := _T
	20	[6848]	GETTABLE 	R3 R3 K3 ; R3 := R3["UpgradeDurabilityCallback"]
	21	[6848]	GETGLOBAL	R4 K6 ; R4 := 0x64fb1586
	22	[6848]	MOVE     	R5 R0 ; R5 := R0
	23	[6848]	CALL     	R4 2 0 ; R4,... := R4(R5)
	24	[6848]	CALL     	R1 0 1 ; R1(R2,...)
	25	[6849]	RETURN   	R0 1 ; return 
	26	[6852]	GETGLOBAL	R1 K7 ; R1 := 0x03f57322
	27	[6852]	MOVE     	R2 R0 ; R2 := R0
	28	[6852]	CALL     	R1 2 2 ; R1 := R1(R2)
	29	[6852]	EQ       	0 R1 K9 ; if R1 ~= 5.000000 then PC := 35
	30	[6852]	JMP      	35 ; PC := 35
	31	[6853]	GETUPVAL 	R1 U0 ; R1 := U0
	32	[6853]	LOADNIL  	R2 R2 ; R2 := nil
	33	[6853]	CALL     	R1 2 1 ; R1(R2)
	34	[6854]	RETURN   	R0 1 ; return 
	35	[6857]	GETGLOBAL	R1 K7 ; R1 := 0x03f57322
	36	[6857]	MOVE     	R2 R0 ; R2 := R0
	37	[6857]	CALL     	R1 2 2 ; R1 := R1(R2)
	38	[6857]	EQ       	0 R1 K10 ; if R1 ~= 4.000000 then PC := 43
	39	[6857]	JMP      	43 ; PC := 43
	40	[6858]	GETGLOBAL	R1 K11 ; R1 := mPurchaseParams
	41	[6858]	SETTABLE 	R1 K12 K14 ; R1["mDurability"] := 0.000000
	42	[6858]	JMP      	53 ; PC := 53
	43	[6859]	GETGLOBAL	R1 K7 ; R1 := 0x03f57322
	44	[6859]	MOVE     	R2 R0 ; R2 := R0
	45	[6859]	CALL     	R1 2 2 ; R1 := R1(R2)
	46	[6859]	EQ       	0 R1 K15 ; if R1 ~= 6.000000 then PC := 51
	47	[6859]	JMP      	51 ; PC := 51
	48	[6860]	GETGLOBAL	R1 K11 ; R1 := mPurchaseParams
	49	[6860]	SETTABLE 	R1 K12 K16 ; R1["mDurability"] := 1.000000
	50	[6860]	JMP      	53 ; PC := 53
	51	[6863]	GETGLOBAL	R1 K11 ; R1 := mPurchaseParams
	52	[6863]	SETTABLE 	R1 K12 K17 ; R1["mDurability"] := 2.000000
	53	[6866]	GETUPVAL 	R1 U1 ; R1 := U1
	54	[6866]	GETGLOBAL	R2 K11 ; R2 := mPurchaseParams
	55	[6866]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	56	[6866]	SETGLOBALHASH	R3 K20 ; mPurchaseQuantityMultiplier := R3
	57	[6866]	SETGLOBALHASH	R2 K19 ; mPurchaseUnitPrice := R2
	58	[6866]	SETGLOBALHASH	R1 K18 ; mPurchaseTotalPrice := R1
	59	[6868]	GETGLOBAL	R1 K18 ; R1 := mPurchaseTotalPrice
	60	[6868]	EQ       	0 R1 K21 ; if R1 ~= nil then PC := 66
	61	[6868]	JMP      	66 ; PC := 66
	62	[6870]	GETUPVAL 	R1 U0 ; R1 := U0
	63	[6870]	OP_LOADBOOL	R2 0 0 ; R2 := false
	64	[6870]	CALL     	R1 2 1 ; R1(R2)
	65	[6871]	RETURN   	R0 1 ; return 
	66	[6874]	GETUPVAL 	R1 U2 ; R1 := U2
	67	[6874]	CALL     	R1 1 1 ; R1()
	68	[6875]	RETURN   	R0 1 ; return 

function #194 <?:6877,6878> (1 instruction, 4 bytes at 0000016081593AA0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[6878]	RETURN   	R0 1 ; return 

function #195 <?:6880,6883> (8 instructions, 32 bytes at 0000016081593B70)
0 params, 4 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[6881]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[6881]	LOADK    	R1 K1 ; R1 := "Lotus.Interface.StoreItemUtilities"
	3	[6881]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[6882]	GETTABLE 	R1 R0 K2 ; R1 := R0[0x80d045d2]
	5	[6882]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	6	[6882]	OP_LOADBOOL	R3 1 0 ; R3 := true
	7	[6882]	CALL     	R1 3 1 ; R1(R2,R3)
	8	[6883]	RETURN   	R0 1 ; return 

function #196 <?:6885,6887> (12 instructions, 48 bytes at 0000016081593CB0)
1 param, 2 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6886]	EQ       	1 R0 K1 ; if R0 == 27.000000 then PC := 10
	2	[6886]	JMP      	10 ; PC := 10
	3	[6886]	EQ       	1 R0 K2 ; if R0 == 28.000000 then PC := 10
	4	[6886]	JMP      	10 ; PC := 10
	5	[6886]	EQ       	1 R0 K3 ; if R0 == 29.000000 then PC := 10
	6	[6886]	JMP      	10 ; PC := 10
	7	[6886]	EQ       	1 R0 K4 ; if R0 == 42.000000 then PC := 10
	8	[6886]	JMP      	10 ; PC := 10
	9	[6886]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 10
	10	[6886]	OP_LOADBOOL	R1 1 0 ; R1 := true
	11	[6886]	RETURN   	R1 2 ; return R1 
	12	[6887]	RETURN   	R0 1 ; return 

function #197 <?:6889,6891> (6 instructions, 24 bytes at 0000016081593E20)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[6890]	EQ       	1 R0 K1 ; if R0 == 48.000000 then PC := 4
	2	[6890]	JMP      	4 ; PC := 4
	3	[6890]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 4
	4	[6890]	OP_LOADBOOL	R1 1 0 ; R1 := true
	5	[6890]	RETURN   	R1 2 ; return R1 
	6	[6891]	RETURN   	R0 1 ; return 

function #198 <?:6893,6908> (49 instructions, 196 bytes at 0000016091A283B0)
2 params, 10 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[6894]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0x9dbbea0a]
	2	[6894]	CALL     	R2 2 2 ; R2 := R2(R3)
	3	[6894]	TEST     	R2 0 ; if not R2 then PC := 29
	4	[6894]	JMP      	29 ; PC := 29
	5	[6895]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0x7b060e36]
	6	[6895]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[6896]	LOADK    	R3 := 1.000000
	8	[6896]	LEN      	R4 R2 ; R4 := # R2
	9	[6896]	LOADK    	R5 := 1.000000
	10	[6896]	FORPREP  	R3 27 ; R3 -= R5; PC := 27
	11	[6897]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	12	[6897]	GETTABLE 	R8 R2 R6 ; R8 := R2[R6]
	13	[6897]	GETTABLE 	R8 R8 K3 ; R8 := R8["mTypeName"]
	14	[6897]	CALL     	R7 2 2 ; R7 := R7(R8)
	15	[6897]	TEST     	R7 1 ; if R7 then PC := 27
	16	[6897]	JMP      	27 ; PC := 27
	17	[6897]	MOVE     	R7 R1 ; R7 := R1
	18	[6897]	GETTABLE 	R8 R2 R6 ; R8 := R2[R6]
	19	[6897]	GETTABLE 	R8 R8 K3 ; R8 := R8["mTypeName"]
	20	[6897]	SELF     	R8 R8 K4 ; R9 := R8; R8 := R8[0xfe9eb1a5]
	21	[6897]	CALL     	R8 2 0 ; R8,... := R8(R9)
	22	[6897]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	23	[6897]	TEST     	R7 0 ; if not R7 then PC := 27
	24	[6897]	JMP      	27 ; PC := 27
	25	[6898]	OP_LOADBOOL	R7 1 0 ; R7 := true
	26	[6898]	RETURN   	R7 2 ; return R7 
	27	[6896]	FORLOOP  	R3 11 ; R3 += R5; if R3 <= R4 then begin PC := 11; R6 := R3 end
	28	[6900]	JMP      	47 ; PC := 47
	29	[6901]	SELF     	R7 R0 K5 ; R8 := R0; R7 := R0[0xf278f8a1]
	30	[6901]	CALL     	R7 2 2 ; R7 := R7(R8)
	31	[6901]	SELF     	R7 R7 K6 ; R8 := R7; R7 := R7[0xf2deaf69]
	32	[6901]	GETGLOBAL	R9 K7 ; R9 := gRecipeItemType
	33	[6901]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	34	[6901]	TEST     	R7 0 ; if not R7 then PC := 42
	35	[6901]	JMP      	42 ; PC := 42
	36	[6902]	MOVE     	R7 R1 ; R7 := R1
	37	[6902]	SELF     	R8 R0 K8 ; R9 := R0; R8 := R0[0x9abeadd7]
	38	[6902]	CALL     	R8 2 0 ; R8,... := R8(R9)
	39	[6902]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	40	[6902]	RETURN   	R7 2 ; return R7 
	41	[6902]	JMP      	47 ; PC := 47
	42	[6904]	MOVE     	R7 R1 ; R7 := R1
	43	[6904]	SELF     	R8 R0 K4 ; R9 := R0; R8 := R0[0xfe9eb1a5]
	44	[6904]	CALL     	R8 2 0 ; R8,... := R8(R9)
	45	[6904]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	46	[6904]	RETURN   	R7 2 ; return R7 
	47	[6907]	OP_LOADBOOL	R7 0 0 ; R7 := false
	48	[6907]	RETURN   	R7 2 ; return R7 
	49	[6908]	RETURN   	R0 1 ; return 

function #199 <?:6910,6952> (114 instructions, 456 bytes at 0000016091A286A0)
1 param, 10 slots, 7 upvalues, 0 locals, 35 constants, 0 functions
	1	[6911]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[6911]	MOVE     	R2 R0 ; R2 := R0
	3	[6911]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6911]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 111
	5	[6911]	JMP      	111 ; PC := 111
	6	[6911]	GETGLOBAL	R1 K3 ; R1 := mPurchaseParams
	7	[6911]	GETTABLE 	R1 R1 K4 ; R1 := R1["mStoreItem"]
	8	[6911]	EQ       	1 R1 K5 ; if R1 == nil then PC := 111
	9	[6911]	JMP      	111 ; PC := 111
	10	[6912]	GETGLOBAL	R1 K3 ; R1 := mPurchaseParams
	11	[6912]	GETTABLE 	R1 R1 K4 ; R1 := R1["mStoreItem"]
	12	[6912]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xc3bbc5cb]
	13	[6912]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[6914]	GETGLOBAL	R2 K7 ; R2 := 0x76ea806b
	15	[6914]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x3f3ae64c]
	16	[6914]	LOADK    	R4 := 0.000000
	17	[6914]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	18	[6915]	SELF     	R3 R2 K9 ; R4 := R2; R3 := R2[0x80563238]
	19	[6915]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[6916]	LOADK    	R4 K10 ; R4 := ""
	21	[6918]	GETGLOBAL	R5 K3 ; R5 := mPurchaseParams
	22	[6918]	GETTABLE 	R5 R5 K4 ; R5 := R5["mStoreItem"]
	23	[6918]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x9dbbea0a]
	24	[6918]	CALL     	R5 2 2 ; R5 := R5(R6)
	25	[6918]	TEST     	R5 0 ; if not R5 then PC := 33
	26	[6918]	JMP      	33 ; PC := 33
	27	[6919]	GETGLOBAL	R5 K3 ; R5 := mPurchaseParams
	28	[6919]	GETTABLE 	R5 R5 K4 ; R5 := R5["mStoreItem"]
	29	[6919]	SELF     	R5 R5 K12 ; R6 := R5; R5 := R5[0xed4e0128]
	30	[6919]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[6919]	MOVE     	R4 R5 ; R4 := R5
	32	[6919]	JMP      	38 ; PC := 38
	33	[6921]	GETGLOBAL	R5 K3 ; R5 := mPurchaseParams
	34	[6921]	GETTABLE 	R5 R5 K4 ; R5 := R5["mStoreItem"]
	35	[6921]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0x170c5cfa]
	36	[6921]	CALL     	R5 2 2 ; R5 := R5(R6)
	37	[6921]	MOVE     	R4 R5 ; R4 := R5
	38	[6926]	GETGLOBAL	R5 K3 ; R5 := mPurchaseParams
	39	[6926]	GETTABLE 	R5 R5 K14 ; R5 := R5["mSource"]
	40	[6926]	EQ       	1 R5 K16 ; if R5 == 18.000000 then PC := 85
	41	[6926]	JMP      	85 ; PC := 85
	42	[6927]	SELF     	R5 R3 K17 ; R6 := R3; R5 := R3[0xc192c12e]
	43	[6927]	CALL     	R5 2 2 ; R5 := R5(R6)
	44	[6927]	TEST     	R5 1 ; if R5 then PC := 63
	45	[6927]	JMP      	63 ; PC := 63
	46	[6927]	GETUPVAL 	R5 U0 ; R5 := U0
	47	[6927]	GETGLOBAL	R6 K3 ; R6 := mPurchaseParams
	48	[6927]	GETTABLE 	R6 R6 K4 ; R6 := R6["mStoreItem"]
	49	[6927]	GETUPVAL 	R7 U1 ; R7 := U1
	50	[6927]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	51	[6927]	TEST     	R5 0 ; if not R5 then PC := 63
	52	[6927]	JMP      	63 ; PC := 63
	53	[6928]	GETUPVAL 	R5 U2 ; R5 := U2
	54	[6928]	GETTABLE 	R5 R5 K18 ; R5 := R5[0xe0cba3ca]
	55	[6928]	LOADK    	R6 K19 ; R6 := "/Lotus/Language/Menu/ArchwingFailurePurchase"
	56	[6928]	LOADK    	R7 K20 ; R7 := "ConfirmErrorPopup"
	57	[6928]	CALL     	R5 3 1 ; R5(R6,R7)
	58	[6929]	GETUPVAL 	R5 U3 ; R5 := U3
	59	[6929]	LOADNIL  	R6 R6 ; R6 := nil
	60	[6929]	CALL     	R5 2 1 ; R5(R6)
	61	[6930]	RETURN   	R0 1 ; return 
	62	[6930]	JMP      	85 ; PC := 85
	63	[6931]	GETUPVAL 	R5 U0 ; R5 := U0
	64	[6931]	GETGLOBAL	R6 K3 ; R6 := mPurchaseParams
	65	[6931]	GETTABLE 	R6 R6 K4 ; R6 := R6["mStoreItem"]
	66	[6931]	GETUPVAL 	R7 U4 ; R7 := U4
	67	[6931]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	68	[6931]	TEST     	R5 0 ; if not R5 then PC := 85
	69	[6931]	JMP      	85 ; PC := 85
	70	[6931]	GETUPVAL 	R5 U5 ; R5 := U5
	71	[6931]	GETTABLE 	R5 R5 K21 ; R5 := R5[0x52fb05b3]
	72	[6931]	GETGLOBAL	R6 K22 ; R6 := 0x0747e0de
	73	[6931]	CALL     	R5 2 2 ; R5 := R5(R6)
	74	[6931]	TEST     	R5 1 ; if R5 then PC := 85
	75	[6931]	JMP      	85 ; PC := 85
	76	[6932]	GETUPVAL 	R5 U2 ; R5 := U2
	77	[6932]	GETTABLE 	R5 R5 K18 ; R5 := R5[0xe0cba3ca]
	78	[6932]	LOADK    	R6 K23 ; R6 := "/Lotus/Language/Store/MechPurchaseFailure"
	79	[6932]	LOADK    	R7 K20 ; R7 := "ConfirmErrorPopup"
	80	[6932]	CALL     	R5 3 1 ; R5(R6,R7)
	81	[6933]	GETUPVAL 	R5 U3 ; R5 := U3
	82	[6933]	LOADNIL  	R6 R6 ; R6 := nil
	83	[6933]	CALL     	R5 2 1 ; R5(R6)
	84	[6934]	RETURN   	R0 1 ; return 
	85	[6938]	GETGLOBAL	R5 K24 ; R5 := 0x9ba7909f
	86	[6938]	SELF     	R5 R5 K25 ; R6 := R5; R5 := R5[0xbcfb64ab]
	87	[6938]	GETGLOBAL	R7 K26 ; R7 := movies
	88	[6938]	GETTABLE 	R7 R7 K27 ; R7 := R7["LoadOut"]
	89	[6938]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	90	[6939]	GETGLOBAL	R6 K28 ; R6 := 0x7b998233
	91	[6939]	MOVE     	R7 R5 ; R7 := R5
	92	[6939]	CALL     	R6 2 2 ; R6 := R6(R7)
	93	[6939]	TEST     	R6 1 ; if R6 then PC := 99
	94	[6939]	JMP      	99 ; PC := 99
	95	[6940]	SELF     	R6 R5 K29 ; R7 := R5; R6 := R5[0xe4162eed]
	96	[6940]	LOADK    	R8 K30 ; R8 := "NotifyPurchase"
	97	[6940]	LOADK    	R9 K10 ; R9 := ""
	98	[6940]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	99	[6942]	GETUPVAL 	R6 U6 ; R6 := U6
	100	[6942]	LOADK    	R7 K31 ; R7 := "/Lotus/Language/Menu/PurchaseInProgress"
	101	[6942]	CALL     	R6 2 1 ; R6(R7)
	102	[6944]	TEST     	R1 1 ; if R1 then PC := 106
	103	[6944]	JMP      	106 ; PC := 106
	104	[6946]	GETGLOBAL	R6 K3 ; R6 := mPurchaseParams
	105	[6946]	SETTABLE 	R6 K32 K2 ; R6["mDurability"] := 4.000000
	106	[6948]	SELF     	R6 R3 K33 ; R7 := R3; R6 := R3[0xa98ff345]
	107	[6948]	GETGLOBAL	R8 K3 ; R8 := mPurchaseParams
	108	[6948]	LOADK    	R9 K34 ; R9 := "OnPurchaseResults"
	109	[6948]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	110	[6948]	JMP      	114 ; PC := 114
	111	[6950]	GETUPVAL 	R6 U3 ; R6 := U3
	112	[6950]	LOADNIL  	R7 R7 ; R7 := nil
	113	[6950]	CALL     	R6 2 1 ; R6(R7)
	114	[6952]	RETURN   	R0 1 ; return 

function #200 <?:6954,7018> (200 instructions, 800 bytes at 0000016091A28DC0)
1 param, 14 slots, 7 upvalues, 0 locals, 62 constants, 0 functions
	1	[6955]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 4
	2	[6955]	JMP      	4 ; PC := 4
	3	[6955]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 4
	4	[6955]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[6956]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	6	[6956]	GETTABLE 	R1 R1 K3 ; R1 := R1["mQuantity"]
	7	[6956]	SETGLOBALHASH	R1 K1 ; mQuantityToReceive := R1
	8	[6958]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	9	[6958]	GETTABLE 	R1 R1 K4 ; R1 := R1["mStoreItem"]
	10	[6958]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xc3bbc5cb]
	11	[6958]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[6958]	TEST     	R1 0 ; if not R1 then PC := 17
	13	[6958]	JMP      	17 ; PC := 17
	14	[6959]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[6959]	CALL     	R1 1 1 ; R1()
	16	[6959]	JMP      	200 ; PC := 200
	17	[6961]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	18	[6961]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	19	[6961]	EQ       	1 R1 K8 ; if R1 == 0.000000 then PC := 70
	20	[6961]	JMP      	70 ; PC := 70
	21	[6962]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	22	[6962]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	23	[6962]	EQ       	1 R1 K9 ; if R1 == 4.000000 then PC := 70
	24	[6962]	JMP      	70 ; PC := 70
	25	[6963]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	26	[6963]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	27	[6963]	EQ       	1 R1 K10 ; if R1 == 5.000000 then PC := 70
	28	[6963]	JMP      	70 ; PC := 70
	29	[6964]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	30	[6964]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	31	[6964]	EQ       	1 R1 K11 ; if R1 == 6.000000 then PC := 70
	32	[6964]	JMP      	70 ; PC := 70
	33	[6965]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	34	[6965]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	35	[6965]	EQ       	1 R1 K12 ; if R1 == 8.000000 then PC := 70
	36	[6965]	JMP      	70 ; PC := 70
	37	[6966]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	38	[6966]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	39	[6966]	EQ       	1 R1 K13 ; if R1 == 10.000000 then PC := 70
	40	[6966]	JMP      	70 ; PC := 70
	41	[6967]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	42	[6967]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	43	[6967]	EQ       	1 R1 K14 ; if R1 == 11.000000 then PC := 70
	44	[6967]	JMP      	70 ; PC := 70
	45	[6968]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	46	[6968]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	47	[6968]	EQ       	1 R1 K15 ; if R1 == 12.000000 then PC := 70
	48	[6968]	JMP      	70 ; PC := 70
	49	[6969]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	50	[6969]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	51	[6969]	EQ       	1 R1 K16 ; if R1 == 13.000000 then PC := 70
	52	[6969]	JMP      	70 ; PC := 70
	53	[6970]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	54	[6970]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	55	[6970]	EQ       	1 R1 K17 ; if R1 == 14.000000 then PC := 70
	56	[6970]	JMP      	70 ; PC := 70
	57	[6971]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	58	[6971]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	59	[6971]	EQ       	1 R1 K18 ; if R1 == 15.000000 then PC := 70
	60	[6971]	JMP      	70 ; PC := 70
	61	[6972]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	62	[6972]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	63	[6972]	EQ       	1 R1 K19 ; if R1 == 16.000000 then PC := 70
	64	[6972]	JMP      	70 ; PC := 70
	65	[6973]	GETGLOBAL	R1 K2 ; R1 := mPurchaseParams
	66	[6973]	GETTABLE 	R1 R1 K6 ; R1 := R1["mSource"]
	67	[6973]	EQ       	1 R1 K20 ; if R1 == 17.000000 then PC := 70
	68	[6973]	JMP      	70 ; PC := 70
	69	[6973]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 70
	70	[6973]	OP_LOADBOOL	R1 1 0 ; R1 := true
	71	[6975]	TEST     	R1 0 ; if not R1 then PC := 170
	72	[6975]	JMP      	170 ; PC := 170
	73	[6975]	TEST     	R0 1 ; if R0 then PC := 170
	74	[6975]	JMP      	170 ; PC := 170
	75	[6976]	GETUPVAL 	R2 U1 ; R2 := U1
	76	[6976]	GETTABLE 	R2 R2 K21 ; R2 := R2[0xcd71f5a1]
	77	[6976]	GETGLOBAL	R3 K2 ; R3 := mPurchaseParams
	78	[6976]	GETTABLE 	R3 R3 K4 ; R3 := R3["mStoreItem"]
	79	[6976]	CALL     	R2 2 2 ; R2 := R2(R3)
	80	[6977]	GETGLOBAL	R3 K2 ; R3 := mPurchaseParams
	81	[6977]	GETTABLE 	R3 R3 K22 ; R3 := R3["mCouponId"]
	82	[6977]	GETTABLE 	R3 R3 K23 ; R3 := R3["mId"]
	83	[6977]	EQ       	0 R3 K24 ; if R3 ~= "" then PC := 106
	84	[6977]	JMP      	106 ; PC := 106
	85	[6977]	TEST     	R2 0 ; if not R2 then PC := 106
	86	[6977]	JMP      	106 ; PC := 106
	87	[6977]	GETTABLE 	R3 R2 K25 ; R3 := R2["mBogoBuy"]
	88	[6977]	LT       	0 K8 R3 ; if 0.000000 >= R3 then PC := 106
	89	[6977]	JMP      	106 ; PC := 106
	90	[6977]	GETTABLE 	R3 R2 K26 ; R3 := R2["mBogoGet"]
	91	[6977]	LT       	0 K8 R3 ; if 0.000000 >= R3 then PC := 106
	92	[6977]	JMP      	106 ; PC := 106
	93	[6978]	GETGLOBAL	R3 K2 ; R3 := mPurchaseParams
	94	[6978]	GETTABLE 	R3 R3 K3 ; R3 := R3["mQuantity"]
	95	[6978]	GETGLOBAL	R4 K27 ; R4 := 0x5bced4c4
	96	[6978]	GETTABLE 	R4 R4 K28 ; R4 := R4[0x55f27c30]
	97	[6978]	GETGLOBAL	R5 K2 ; R5 := mPurchaseParams
	98	[6978]	GETTABLE 	R5 R5 K3 ; R5 := R5["mQuantity"]
	99	[6978]	GETTABLE 	R6 R2 K25 ; R6 := R2["mBogoBuy"]
	100	[6978]	DIV      	R5 R5 R6 ; R5 := R5 / R6
	101	[6978]	CALL     	R4 2 2 ; R4 := R4(R5)
	102	[6978]	GETTABLE 	R5 R2 K26 ; R5 := R2["mBogoGet"]
	103	[6978]	MUL      	R4 R4 R5 ; R4 := R4 * R5
	104	[6978]	ADD      	R3 R3 R4 ; R3 := R3 + R4
	105	[6978]	SETGLOBALHASH	R3 K1 ; mQuantityToReceive := R3
	106	[6981]	GETUPVAL 	R3 U1 ; R3 := U1
	107	[6981]	GETTABLE 	R3 R3 K29 ; R3 := R3[0xe9947039]
	108	[6981]	GETGLOBAL	R4 K2 ; R4 := mPurchaseParams
	109	[6981]	GETTABLE 	R4 R4 K4 ; R4 := R4["mStoreItem"]
	110	[6981]	LOADNIL  	R5 R6 ; R5 := R6 := nil
	111	[6981]	GETGLOBAL	R7 K30 ; R7 := _T
	112	[6981]	GETTABLE 	R7 R7 K31 ; R7 := R7["purchasedItems"]
	113	[6981]	CALL     	R3 5 3 ; R3,R4 := R3(R4,R5,R6,R7)
	114	[6982]	LT       	0 K8 R3 ; if 0.000000 >= R3 then PC := 164
	115	[6982]	JMP      	164 ; PC := 164
	116	[6982]	LT       	0 K8 R4 ; if 0.000000 >= R4 then PC := 164
	117	[6982]	JMP      	164 ; PC := 164
	118	[6983]	GETGLOBAL	R5 K32 ; R5 := 0xae91e43b
	119	[6983]	SELF     	R5 R5 K33 ; R6 := R5; R5 := R5[0x42b04007]
	120	[6983]	GETGLOBAL	R7 K34 ; R7 := 0x64fb1586
	121	[6983]	GETGLOBAL	R8 K2 ; R8 := mPurchaseParams
	122	[6983]	GETTABLE 	R8 R8 K4 ; R8 := R8["mStoreItem"]
	123	[6983]	SELF     	R8 R8 K35 ; R9 := R8; R8 := R8[0xd3a9d01f]
	124	[6983]	CALL     	R8 2 0 ; R8,... := R8(R9)
	125	[6983]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	126	[6983]	OP_LOADBOOL	R8 0 0 ; R8 := false
	127	[6983]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	128	[6984]	GETGLOBAL	R6 K32 ; R6 := 0xae91e43b
	129	[6984]	SELF     	R6 R6 K33 ; R7 := R6; R6 := R6[0x42b04007]
	130	[6984]	LOADK    	R8 K36 ; R8 := "/Lotus/Language/Menu/Popup_BuyItem"
	131	[6984]	OP_LOADBOOL	R9 1 0 ; R9 := true
	132	[6984]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	133	[6985]	GETGLOBAL	R7 K37 ; R7 := 0x7f5022cf
	134	[6985]	GETTABLE 	R7 R7 K38 ; R7 := R7[0xe8072ded]
	135	[6985]	MOVE     	R8 R6 ; R8 := R6
	136	[6985]	MOVE     	R9 R5 ; R9 := R5
	137	[6985]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	138	[6985]	MOVE     	R6 R7 ; R6 := R7
	139	[6987]	LOADK    	R7 K39 ; R7 := "<PLATINUM_CREDITS>"
	140	[6987]	MOVE     	R8 R4 ; R8 := R4
	141	[6987]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	142	[6988]	LOADK    	R8 K40 ; R8 := "<CREDITS>"
	143	[6988]	MOVE     	R9 R3 ; R9 := R3
	144	[6988]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	145	[6989]	GETGLOBAL	R9 K41 ; R9 := 0x34291f5c
	146	[6989]	GETTABLE 	R9 R9 K42 ; R9 := R9[0xe27b35bb]
	147	[6989]	CALL     	R9 1 2 ; R9 := R9()
	148	[6990]	SETTABLE 	R9 K43 K10 ; R9["dialogType"] := 5.000000
	149	[6991]	SETTABLE 	R9 K44 R6 ; R9["locString"] := R6
	150	[6992]	SETTABLE 	R9 K45 R8 ; R9["firstString"] := R8
	151	[6993]	SETTABLE 	R9 K46 R7 ; R9["secondString"] := R7
	152	[6994]	SETTABLE 	R9 K47 K48 ; R9["thirdString"] := "/Lotus/Language/Menu/ItemSelection_Cancel"
	153	[6995]	SELF     	R10 R9 K49 ; R11 := R9; R10 := R9[0xe6ccc5b9]
	154	[6995]	LOADK    	R12 K50 ; R12 := "ConfirmCurrency"
	155	[6995]	CALL     	R10 3 1 ; R10(R11,R12)
	156	[6996]	GETUPVAL 	R10 U2 ; R10 := U2
	157	[6996]	GETTABLE 	R10 R10 K51 ; R10 := R10[0xe99b84e7]
	158	[6996]	MOVE     	R11 R9 ; R11 := R9
	159	[6996]	CALL     	R10 2 1 ; R10(R11)
	160	[6997]	GETGLOBAL	R10 K30 ; R10 := _T
	161	[6997]	SETTABLE 	R10 K52 K53 ; R10["PurchaseSuccessLocOverride"] := nil
	162	[6998]	RETURN   	R0 1 ; return 
	163	[6998]	JMP      	170 ; PC := 170
	164	[7000]	GETGLOBAL	R10 K2 ; R10 := mPurchaseParams
	165	[7000]	LT       	1 K8 R4 ; if 0.000000 < R4 then PC := 168
	166	[7000]	JMP      	168 ; PC := 168
	167	[7000]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 168
	168	[7000]	OP_LOADBOOL	R11 1 0 ; R11 := true
	169	[7000]	SETTABLE 	R10 K54 R11 ; R10["mUsePremium"] := R11
	170	[7004]	GETUPVAL 	R10 U3 ; R10 := U3
	171	[7004]	GETGLOBAL	R11 K2 ; R11 := mPurchaseParams
	172	[7004]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	173	[7004]	SETGLOBALHASH	R12 K57 ; mPurchaseQuantityMultiplier := R12
	174	[7004]	SETGLOBALHASH	R11 K56 ; mPurchaseUnitPrice := R11
	175	[7004]	SETGLOBALHASH	R10 K55 ; mPurchaseTotalPrice := R10
	176	[7005]	GETGLOBAL	R10 K55 ; R10 := mPurchaseTotalPrice
	177	[7005]	EQ       	0 R10 K53 ; if R10 ~= nil then PC := 183
	178	[7005]	JMP      	183 ; PC := 183
	179	[7007]	GETUPVAL 	R10 U4 ; R10 := U4
	180	[7007]	LOADNIL  	R11 R11 ; R11 := nil
	181	[7007]	CALL     	R10 2 1 ; R10(R11)
	182	[7008]	RETURN   	R0 1 ; return 
	183	[7011]	TEST     	R1 0 ; if not R1 then PC := 198
	184	[7011]	JMP      	198 ; PC := 198
	185	[7012]	GETUPVAL 	R10 U2 ; R10 := U2
	186	[7012]	GETTABLE 	R10 R10 K58 ; R10 := R10[0x06d055f9]
	187	[7012]	GETGLOBAL	R11 K2 ; R11 := mPurchaseParams
	188	[7012]	GETTABLE 	R11 R11 K54 ; R11 := R11["mUsePremium"]
	189	[7012]	GETUPVAL 	R12 U5 ; R12 := U5
	190	[7012]	GETTABLE 	R12 R12 K59 ; R12 := R12["PREMIUM_CREDITS"]
	191	[7012]	GETUPVAL 	R13 U5 ; R13 := U5
	192	[7012]	GETTABLE 	R13 R13 K60 ; R13 := R13["REGULAR_CREDITS"]
	193	[7012]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	194	[7013]	GETGLOBAL	R11 K2 ; R11 := mPurchaseParams
	195	[7013]	GETGLOBAL	R12 K55 ; R12 := mPurchaseTotalPrice
	196	[7013]	GETTABLE 	R12 R12 R10 ; R12 := R12[R10]
	197	[7013]	SETTABLE 	R11 K61 R12 ; R11["mExpectedPrice"] := R12
	198	[7016]	GETUPVAL 	R11 U6 ; R11 := U6
	199	[7016]	CALL     	R11 1 1 ; R11()
	200	[7018]	RETURN   	R0 1 ; return 

function #201 <?:7020,7028> (20 instructions, 80 bytes at 0000016091A298F0)
0 params, 3 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[7021]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7021]	OP_LOADBOOL	R1 0 0 ; R1 := false
	3	[7021]	LOADK    	R2 K0 ; R2 := "invite"
	4	[7021]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[7022]	GETGLOBAL	R0 K1 ; R0 := 0x9ba7909f
	6	[7022]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xbcfb64ab]
	7	[7022]	GETGLOBAL	R2 K3 ; R2 := movies
	8	[7022]	GETTABLE 	R2 R2 K4 ; R2 := R2["MainMenu"]
	9	[7022]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[7023]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	11	[7023]	MOVE     	R2 R0 ; R2 := R0
	12	[7023]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[7023]	TEST     	R1 1 ; if R1 then PC := 17
	14	[7023]	JMP      	17 ; PC := 17
	15	[7024]	SELF     	R1 R0 K6 ; R2 := R0; R1 := R0[0x32302b4a]
	16	[7024]	CALL     	R1 2 1 ; R1(R2)
	17	[7027]	GETUPVAL 	R1 U1 ; R1 := U1
	18	[7027]	LOADK    	R2 K4 ; R2 := "MainMenu"
	19	[7027]	CALL     	R1 2 1 ; R1(R2)
	20	[7028]	RETURN   	R0 1 ; return 

function #202 <?:7030,7036> (29 instructions, 116 bytes at 0000016091A29A60)
0 params, 2 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[7031]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7031]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[7031]	GETTABLE 	R1 R1 K2 ; R1 := R1["PodState"]
	4	[7031]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[7031]	TEST     	R0 1 ; if R0 then PC := 29
	6	[7031]	JMP      	29 ; PC := 29
	7	[7031]	GETGLOBAL	R0 K1 ; R0 := _T
	8	[7031]	GETTABLE 	R0 R0 K2 ; R0 := R0["PodState"]
	9	[7031]	GETTABLE 	R0 R0 K3 ; R0 := R0["Status"]
	10	[7031]	EQ       	1 R0 K4 ; if R0 == 0.000000 then PC := 19
	11	[7031]	JMP      	19 ; PC := 19
	12	[7031]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	13	[7031]	GETGLOBAL	R1 K1 ; R1 := _T
	14	[7031]	GETTABLE 	R1 R1 K2 ; R1 := R1["PodState"]
	15	[7031]	GETTABLE 	R1 R1 K3 ; R1 := R1["Status"]
	16	[7031]	CALL     	R0 2 2 ; R0 := R0(R1)
	17	[7031]	TEST     	R0 0 ; if not R0 then PC := 29
	18	[7031]	JMP      	29 ; PC := 29
	19	[7032]	GETGLOBAL	R0 K5 ; R0 := 0x3d106989
	20	[7032]	LOADK    	R1 K6 ; R1 := "open pod"
	21	[7032]	CALL     	R0 2 1 ; R0(R1)
	22	[7033]	GETGLOBAL	R0 K1 ; R0 := _T
	23	[7033]	GETTABLE 	R0 R0 K2 ; R0 := R0["PodState"]
	24	[7033]	GETGLOBAL	R1 K8 ; R1 := 0x6b06b155
	25	[7033]	SETTABLE 	R0 K7 R1 ; R0["PendingAnimation"] := R1
	26	[7034]	GETGLOBAL	R0 K1 ; R0 := _T
	27	[7034]	GETTABLE 	R0 R0 K2 ; R0 := R0["PodState"]
	28	[7034]	SETTABLE 	R0 K3 K9 ; R0["Status"] := 2.000000
	29	[7036]	RETURN   	R0 1 ; return 

function #203 <?:7038,7044> (29 instructions, 116 bytes at 0000016091A29D00)
0 params, 2 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[7039]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7039]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[7039]	GETTABLE 	R1 R1 K2 ; R1 := R1["PodState"]
	4	[7039]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[7039]	TEST     	R0 1 ; if R0 then PC := 29
	6	[7039]	JMP      	29 ; PC := 29
	7	[7039]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	8	[7039]	GETGLOBAL	R1 K1 ; R1 := _T
	9	[7039]	GETTABLE 	R1 R1 K2 ; R1 := R1["PodState"]
	10	[7039]	GETTABLE 	R1 R1 K3 ; R1 := R1["Status"]
	11	[7039]	CALL     	R0 2 2 ; R0 := R0(R1)
	12	[7039]	TEST     	R0 1 ; if R0 then PC := 19
	13	[7039]	JMP      	19 ; PC := 19
	14	[7039]	GETGLOBAL	R0 K1 ; R0 := _T
	15	[7039]	GETTABLE 	R0 R0 K2 ; R0 := R0["PodState"]
	16	[7039]	GETTABLE 	R0 R0 K3 ; R0 := R0["Status"]
	17	[7039]	LT       	0 K4 R0 ; if 0.000000 >= R0 then PC := 29
	18	[7039]	JMP      	29 ; PC := 29
	19	[7040]	GETGLOBAL	R0 K5 ; R0 := 0x3d106989
	20	[7040]	LOADK    	R1 K6 ; R1 := "close pod"
	21	[7040]	CALL     	R0 2 1 ; R0(R1)
	22	[7041]	GETGLOBAL	R0 K1 ; R0 := _T
	23	[7041]	GETTABLE 	R0 R0 K2 ; R0 := R0["PodState"]
	24	[7041]	GETGLOBAL	R1 K8 ; R1 := 0xb2b63f87
	25	[7041]	SETTABLE 	R0 K7 R1 ; R0["PendingAnimation"] := R1
	26	[7042]	GETGLOBAL	R0 K1 ; R0 := _T
	27	[7042]	GETTABLE 	R0 R0 K2 ; R0 := R0["PodState"]
	28	[7042]	SETTABLE 	R0 K3 K4 ; R0["Status"] := 0.000000
	29	[7044]	RETURN   	R0 1 ; return 

function #204 <?:7046,7048> (5 instructions, 20 bytes at 0000016091A29F90)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[7047]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7047]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x659d451f]
	3	[7047]	GETGLOBAL	R1 K1 ; R1 := 0x620d6b95
	4	[7047]	CALL     	R0 2 1 ; R0(R1)
	5	[7048]	RETURN   	R0 1 ; return 

function #205 <?:7050,7054> (8 instructions, 32 bytes at 0000016091A2A0B0)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[7051]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[7051]	MOVE     	R2 R0 ; R2 := R0
	3	[7051]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7051]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 8
	5	[7051]	JMP      	8 ; PC := 8
	6	[7052]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[7052]	CALL     	R1 1 1 ; R1()
	8	[7054]	RETURN   	R0 1 ; return 

function #206 <?:7056,7058> (3 instructions, 12 bytes at 0000016091A2A1E0)
0 params, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[7057]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[7057]	SETGLOBALHASH	R0 K0 ; mNeedsToRespawnMenuAvatars := R0
	3	[7058]	RETURN   	R0 1 ; return 

function #207 <?:7060,7062> (6 instructions, 24 bytes at 0000016091A2A2D0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[7061]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7061]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x659d451f]
	3	[7061]	GETGLOBAL	R1 K1 ; R1 := 0x0032441c
	4	[7061]	GETTABLE 	R1 R1 K2 ; R1 := R1["UISound_Focus"]
	5	[7061]	CALL     	R0 2 1 ; R0(R1)
	6	[7062]	RETURN   	R0 1 ; return 

function #208 <?:7064,7065> (1 instruction, 4 bytes at 0000016091A2A400)
2 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[7065]	RETURN   	R0 1 ; return 

function #209 <?:7067,7082> (36 instructions, 144 bytes at 0000016091A2A4D0)
2 params, 7 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[7068]	TEST     	R0 0 ; if not R0 then PC := 21
	2	[7068]	JMP      	21 ; PC := 21
	3	[7069]	GETGLOBAL	R2 K0 ; R2 := _T
	4	[7069]	SETTABLE 	R2 K1 K2 ; R2["ActiveQuestLoaded"] := true
	5	[7070]	GETGLOBAL	R2 K0 ; R2 := _T
	6	[7070]	GETTABLE 	R2 R2 K3 ; R2 := R2["Jukebox"]
	7	[7070]	EQ       	1 R2 K4 ; if R2 == nil then PC := 28
	8	[7070]	JMP      	28 ; PC := 28
	9	[7071]	GETGLOBAL	R2 K5 ; R2 := 0xb009bbc6
	10	[7071]	MOVE     	R3 R1 ; R3 := R1
	11	[7071]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[7072]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0xac62edc0]
	13	[7072]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[7072]	TEST     	R3 0 ; if not R3 then PC := 28
	15	[7072]	JMP      	28 ; PC := 28
	16	[7073]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[7073]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x348f9680]
	18	[7073]	OP_LOADBOOL	R4 1 0 ; R4 := true
	19	[7073]	CALL     	R3 2 1 ; R3(R4)
	20	[7075]	JMP      	28 ; PC := 28
	21	[7077]	GETGLOBAL	R3 K0 ; R3 := _T
	22	[7077]	SETTABLE 	R3 K1 K8 ; R3["ActiveQuestLoaded"] := false
	23	[7078]	GETGLOBAL	R3 K9 ; R3 := 0x3d106989
	24	[7078]	LOADK    	R4 K10 ; R4 := "Couldn't load quest: "
	25	[7078]	MOVE     	R5 R1 ; R5 := R1
	26	[7078]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	27	[7078]	CALL     	R3 2 1 ; R3(R4)
	28	[7081]	GETGLOBAL	R3 K9 ; R3 := 0x3d106989
	29	[7081]	LOADK    	R4 K11 ; R4 := "ActiveQuestLoaded="
	30	[7081]	GETGLOBAL	R5 K12 ; R5 := 0x64fb1586
	31	[7081]	GETGLOBAL	R6 K0 ; R6 := _T
	32	[7081]	GETTABLE 	R6 R6 K1 ; R6 := R6["ActiveQuestLoaded"]
	33	[7081]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[7081]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	35	[7081]	CALL     	R3 2 1 ; R3(R4)
	36	[7082]	RETURN   	R0 1 ; return 

function #210 <?:7084,7088> (15 instructions, 60 bytes at 0000016091A2A800)
0 params, 3 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7085]	GETGLOBAL	R0 K0 ; R0 := connectionFailurePopup
	2	[7085]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 15
	3	[7085]	JMP      	15 ; PC := 15
	4	[7085]	GETGLOBAL	R0 K2 ; R0 := 0x76ea806b
	5	[7085]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x8792aaab]
	6	[7085]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[7085]	TEST     	R0 0 ; if not R0 then PC := 15
	8	[7085]	JMP      	15 ; PC := 15
	9	[7086]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[7086]	GETTABLE 	R0 R0 K4 ; R0 := R0[0xe0cba3ca]
	11	[7086]	LOADK    	R1 K5 ; R1 := "/Lotus/Language/Menu/BackgroundError_UserNameChanged"
	12	[7086]	LOADK    	R2 K6 ; R2 := "DoLogoff"
	13	[7086]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	14	[7086]	SETGLOBALHASH	R0 K0 ; connectionFailurePopup := R0
	15	[7088]	RETURN   	R0 1 ; return 

function #211 <?:7090,7116> (83 instructions, 332 bytes at 0000016091A2AA10)
0 params, 19 slots, 1 upvalue, 0 locals, 31 constants, 0 functions
	1	[7091]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	2	[7091]	LOADK    	R1 K1 ; R1 := "CheckForAvailableRankUp()"
	3	[7091]	CALL     	R0 2 1 ; R0(R1)
	4	[7093]	GETGLOBAL	R0 K2 ; R0 := mCurrentMode
	5	[7093]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[7093]	GETTABLE 	R1 R1 K3 ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
	7	[7093]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 10
	8	[7093]	JMP      	10 ; PC := 10
	9	[7094]	RETURN   	R0 1 ; return 
	10	[7097]	GETGLOBAL	R0 K4 ; R0 := 0x76ea806b
	11	[7097]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x3f3ae64c]
	12	[7097]	LOADK    	R2 := 0.000000
	13	[7097]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	14	[7098]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	15	[7098]	MOVE     	R2 R0 ; R2 := R0
	16	[7098]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[7098]	TEST     	R1 0 ; if not R1 then PC := 20
	18	[7098]	JMP      	20 ; PC := 20
	19	[7099]	RETURN   	R0 1 ; return 
	20	[7102]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0x80563238]
	21	[7102]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[7103]	GETGLOBAL	R2 K6 ; R2 := 0x7b998233
	23	[7103]	MOVE     	R3 R1 ; R3 := R1
	24	[7103]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[7103]	TEST     	R2 1 ; if R2 then PC := 83
	26	[7103]	JMP      	83 ; PC := 83
	27	[7104]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0xde2d1b82]
	28	[7104]	CALL     	R2 2 2 ; R2 := R2(R3)
	29	[7106]	SELF     	R3 R1 K9 ; R4 := R1; R3 := R1[0xefee6c91]
	30	[7106]	CALL     	R3 2 2 ; R3 := R3(R4)
	31	[7107]	SELF     	R4 R1 K10 ; R5 := R1; R4 := R1[0xa59dbd63]
	32	[7107]	CALL     	R4 2 2 ; R4 := R4(R5)
	33	[7108]	SELF     	R5 R1 K11 ; R6 := R1; R5 := R1[0x82499e82]
	34	[7108]	ADD      	R7 R3 K12 ; R7 := R3 + 1.000000
	35	[7108]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	36	[7110]	LE       	0 R5 R4 ; if R5 > R4 then PC := 40
	37	[7110]	JMP      	40 ; PC := 40
	38	[7110]	LE       	1 R2 K13 ; if R2 <= 0.000000 then PC := 41
	39	[7110]	JMP      	41 ; PC := 41
	40	[7110]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 41
	41	[7110]	OP_LOADBOOL	R6 1 0 ; R6 := true
	42	[7111]	TEST     	R6 0 ; if not R6 then PC := 83
	43	[7111]	JMP      	83 ; PC := 83
	44	[7111]	GETGLOBAL	R7 K14 ; R7 := _T
	45	[7111]	GETTABLE 	R7 R7 K15 ; R7 := R7["ShowNotification"]
	46	[7111]	EQ       	1 R7 K16 ; if R7 == nil then PC := 83
	47	[7111]	JMP      	83 ; PC := 83
	48	[7112]	GETGLOBAL	R7 K17 ; R7 := 0xae91e43b
	49	[7112]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0x42b04007]
	50	[7112]	GETGLOBAL	R9 K19 ; R9 := 0x64fb1586
	51	[7112]	GETGLOBAL	R10 K20 ; R10 := 0xa94df70b
	52	[7112]	SELF     	R10 R10 K21 ; R11 := R10; R10 := R10[0x8a513cba]
	53	[7112]	ADD      	R12 R3 K12 ; R12 := R3 + 1.000000
	54	[7112]	CALL     	R10 3 0 ; R10,... := R10(R11,R12)
	55	[7112]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	56	[7112]	OP_LOADBOOL	R10 0 0 ; R10 := false
	57	[7112]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	58	[7113]	GETGLOBAL	R8 K14 ; R8 := _T
	59	[7113]	GETTABLE 	R8 R8 K22 ; R8 := R8[0x7dce37bc]
	60	[7113]	GETGLOBAL	R9 K17 ; R9 := 0xae91e43b
	61	[7113]	SELF     	R9 R9 K18 ; R10 := R9; R9 := R9[0x42b04007]
	62	[7113]	LOADK    	R11 K23 ; R11 := "/Lotus/Language/Menu/Notification_LevelUpAvailable"
	63	[7113]	OP_LOADBOOL	R12 1 0 ; R12 := true
	64	[7113]	NEWTABLE 	R13 0 3 ; R13 := {}
	65	[7113]	GETGLOBAL	R14 K17 ; R14 := 0xae91e43b
	66	[7113]	SELF     	R14 R14 K18 ; R15 := R14; R14 := R14[0x42b04007]
	67	[7113]	LOADK    	R16 K25 ; R16 := "<RANK_"
	68	[7113]	ADD      	R17 R3 K12 ; R17 := R3 + 1.000000
	69	[7113]	LOADK    	R18 K26 ; R18 := ">"
	70	[7113]	CONCAT   	R16 R16 R18 ; R16 := R16 .. R17 .. R18
	71	[7113]	OP_LOADBOOL	R17 1 0 ; R17 := true
	72	[7113]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	73	[7113]	SETTABLE 	R13 K24 R14 ; R13[0x7ed0a956] := R14
	74	[7113]	GETUPVAL 	R14 U0 ; R14 := U0
	75	[7113]	GETTABLE 	R14 R14 K28 ; R14 := R14[0x0199c230]
	76	[7113]	ADD      	R15 R3 K12 ; R15 := R3 + 1.000000
	77	[7113]	CALL     	R14 2 2 ; R14 := R14(R15)
	78	[7113]	SETTABLE 	R13 K27 R14 ; R13[0xcfba257f] := R14
	79	[7113]	SETTABLE 	R13 K29 R7 ; R13[0xe4162eed] := R7
	80	[7113]	CALL     	R9 5 2 ; R9 := R9(R10,R11,R12,R13)
	81	[7113]	LOADK    	R10 K30 ; R10 := "LevelUpAvailable"
	82	[7113]	CALL     	R8 3 1 ; R8(R9,R10)
	83	[7116]	RETURN   	R0 1 ; return 

function #212 <?:7118,7146> (74 instructions, 296 bytes at 0000016091A2B090)
0 params, 19 slots, 2 upvalues, 0 locals, 24 constants, 0 functions
	1	[7120]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[7120]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xf03cd640]
	3	[7120]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7121]	LOADK    	R2 := 1.000000
	5	[7121]	LEN      	R3 R1 ; R3 := # R1
	6	[7121]	LOADK    	R4 := 1.000000
	7	[7121]	FORPREP  	R2 63 ; R2 -= R4; PC := 63
	8	[7122]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	9	[7123]	GETGLOBAL	R7 K2 ; R7 := 0x34291f5c
	10	[7123]	GETTABLE 	R7 R7 K3 ; R7 := R7[0x397b920f]
	11	[7123]	GETTABLE 	R8 R6 K4 ; R8 := R6["date"]
	12	[7123]	CALL     	R7 2 2 ; R7 := R7(R8)
	13	[7125]	LE       	0 R7 K5 ; if R7 > 0.000000 then PC := 58
	14	[7125]	JMP      	58 ; PC := 58
	15	[7127]	GETGLOBAL	R8 K6 ; R8 := 0x89326c93
	16	[7127]	SELF     	R8 R8 K7 ; R9 := R8; R8 := R8[0xc7fcada9]
	17	[7127]	GETGLOBAL	R10 K8 ; R10 := 0x0469f296
	18	[7127]	LOADK    	R11 K9 ; R11 := "SHIPEVENT_"
	19	[7127]	GETTABLE 	R12 R6 K10 ; R12 := R6["tag"]
	20	[7127]	SELF     	R12 R12 K11 ; R13 := R12; R12 := R12[0x6d604ba7]
	21	[7127]	CALL     	R12 2 2 ; R12 := R12(R13)
	22	[7127]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	23	[7127]	CALL     	R10 2 0 ; R10,... := R10(R11)
	24	[7127]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	25	[7128]	TEST     	R8 0 ; if not R8 then PC := 47
	26	[7128]	JMP      	47 ; PC := 47
	27	[7129]	GETGLOBAL	R9 K12 ; R9 := 0xc8802016
	28	[7129]	MOVE     	R10 R8 ; R10 := R8
	29	[7129]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	30	[7129]	JMP      	44 ; PC := 44
	31	[7130]	GETGLOBAL	R14 K13 ; R14 := 0x7b998233
	32	[7130]	MOVE     	R15 R13 ; R15 := R13
	33	[7130]	CALL     	R14 2 2 ; R14 := R14(R15)
	34	[7130]	TEST     	R14 1 ; if R14 then PC := 44
	35	[7130]	JMP      	44 ; PC := 44
	36	[7130]	SELF     	R14 R13 K14 ; R15 := R13; R14 := R13[0xf2deaf69]
	37	[7130]	GETGLOBAL	R16 K15 ; R16 := gScriptTriggerType
	38	[7130]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	39	[7130]	TEST     	R14 0 ; if not R14 then PC := 44
	40	[7130]	JMP      	44 ; PC := 44
	41	[7131]	SELF     	R14 R13 K16 ; R15 := R13; R14 := R13[0x8eb2112d]
	42	[7131]	LOADK    	R16 K17 ; R16 := "Execute"
	43	[7131]	CALL     	R14 3 1 ; R14(R15,R16)
	44	[7129]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 31; R11 := R12 end
	45	[7132]	JMP      	31 ; PC := 31
	46	[7133]	JMP      	53 ; PC := 53
	47	[7135]	GETUPVAL 	R14 U0 ; R14 := U0
	48	[7135]	GETTABLE 	R14 R14 K18 ; R14 := R14[0xe0cba3ca]
	49	[7135]	GETGLOBAL	R15 K19 ; R15 := 0x64fb1586
	50	[7135]	GETTABLE 	R16 R6 K10 ; R16 := R6["tag"]
	51	[7135]	CALL     	R15 2 0 ; R15,... := R15(R16)
	52	[7135]	CALL     	R14 0 1 ; R14(R15,...)
	53	[7137]	GETGLOBAL	R14 K0 ; R14 := 0x25d99d89
	54	[7137]	SELF     	R14 R14 K20 ; R15 := R14; R14 := R14[0xcad9bf76]
	55	[7137]	GETTABLE 	R16 R6 K10 ; R16 := R6["tag"]
	56	[7137]	CALL     	R14 3 1 ; R14(R15,R16)
	57	[7137]	JMP      	63 ; PC := 63
	58	[7138]	EQ       	1 R0 K21 ; if R0 == nil then PC := 62
	59	[7138]	JMP      	62 ; PC := 62
	60	[7138]	LT       	0 R7 R0 ; if R7 >= R0 then PC := 63
	61	[7138]	JMP      	63 ; PC := 63
	62	[7139]	MOVE     	R0 R7 ; R0 := R7
	63	[7121]	FORLOOP  	R2 8 ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
	64	[7143]	EQ       	1 R0 K21 ; if R0 == nil then PC := 74
	65	[7143]	JMP      	74 ; PC := 74
	66	[7143]	LT       	0 K5 R0 ; if 0.000000 >= R0 then PC := 74
	67	[7143]	JMP      	74 ; PC := 74
	68	[7144]	GETGLOBAL	R14 K22 ; R14 := mTimerMgr
	69	[7144]	SELF     	R14 R14 K23 ; R15 := R14; R14 := R14[0xbd2e96ea]
	70	[7144]	MOVE     	R16 R0 ; R16 := R0
	71	[7144]	GETUPVAL 	R17 U1 ; R17 := U1
	72	[7144]	OP_LOADBOOL	R18 0 0 ; R18 := false
	73	[7144]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	74	[7146]	RETURN   	R0 1 ; return 

function #213 <?:7148,7306> (298 instructions, 1192 bytes at 0000016091A2B5A0)
0 params, 21 slots, 13 upvalues, 0 locals, 95 constants, 2 functions
	1	[7149]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	2	[7149]	LOADK    	R1 K1 ; R1 := "Background::OnLoginDone()"
	3	[7149]	CALL     	R0 2 1 ; R0(R1)
	4	[7150]	GETGLOBAL	R0 K2 ; R0 := 0x0032441c
	5	[7150]	SETTABLE 	R0 K3 K4 ; R0["LoginDone"] := true
	6	[7151]	GETGLOBAL	R0 K5 ; R0 := 0x76ea806b
	7	[7151]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x3f3ae64c]
	8	[7151]	LOADK    	R2 := 0.000000
	9	[7151]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[7152]	GETGLOBAL	R1 K7 ; R1 := 0x7b998233
	11	[7152]	MOVE     	R2 R0 ; R2 := R0
	12	[7152]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[7152]	TEST     	R1 0 ; if not R1 then PC := 19
	14	[7152]	JMP      	19 ; PC := 19
	15	[7153]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	16	[7153]	LOADK    	R2 K8 ; R2 := "Background::OnLoginDone() playerProfile == nil"
	17	[7153]	CALL     	R1 2 1 ; R1(R2)
	18	[7154]	RETURN   	R0 1 ; return 
	19	[7157]	SELF     	R1 R0 K9 ; R2 := R0; R1 := R0[0xcac617c9]
	20	[7157]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[7158]	GETGLOBAL	R2 K10 ; R2 := _T
	22	[7158]	GETTABLE 	R2 R2 K11 ; R2 := R2["PreviousLoggedInAccountId"]
	23	[7158]	EQ       	1 R2 K12 ; if R2 == nil then PC := 37
	24	[7158]	JMP      	37 ; PC := 37
	25	[7158]	GETGLOBAL	R2 K10 ; R2 := _T
	26	[7158]	GETTABLE 	R2 R2 K11 ; R2 := R2["PreviousLoggedInAccountId"]
	27	[7158]	EQ       	1 R2 R1 ; if R2 == R1 then PC := 37
	28	[7158]	JMP      	37 ; PC := 37
	29	[7159]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	30	[7159]	LOADK    	R3 K13 ; R3 := "Logging in with a new user, disconnecting"
	31	[7159]	CALL     	R2 2 1 ; R2(R3)
	32	[7160]	GETGLOBAL	R2 K14 ; R2 := 0x34291f5c
	33	[7160]	GETTABLE 	R2 R2 K15 ; R2 := R2[0x8ee24660]
	34	[7160]	OP_LOADBOOL	R3 1 0 ; R3 := true
	35	[7160]	CALL     	R2 2 1 ; R2(R3)
	36	[7161]	RETURN   	R0 1 ; return 
	37	[7164]	GETUPVAL 	R2 U1 ; R2 := U1
	38	[7164]	GETTABLE 	R2 R2 K16 ; R2 := R2[0xc00479a5]
	39	[7164]	CALL     	R2 1 2 ; R2 := R2()
	40	[7164]	SETUPVAL 	R2 U0 ; U0 := R2
	41	[7166]	GETGLOBAL	R2 K10 ; R2 := _T
	42	[7166]	GETTABLE 	R2 R2 K17 ; R2 := R2["QueueNewWarRecap"]
	43	[7169]	GETGLOBAL	R3 K10 ; R3 := _T
	44	[7169]	GETTABLE 	R3 R3 K18 ; R3 := R3["gActiveCameraSpot"]
	45	[7169]	EQ       	0 R3 K19 ; if R3 ~= "LoginNoSuit" then PC := 57
	46	[7169]	JMP      	57 ; PC := 57
	47	[7170]	GETGLOBAL	R3 K0 ; R3 := 0x3d106989
	48	[7170]	LOADK    	R4 K20 ; R4 := "Login: No Suit"
	49	[7170]	CALL     	R3 2 1 ; R3(R4)
	50	[7171]	GETUPVAL 	R3 U2 ; R3 := U2
	51	[7171]	LOADK    	R4 := 0.750000
	52	[7171]	LOADK    	R5 := 0.750000
	53	[7171]	LOADK    	R6 := 1.000000
	54	[7171]	GETUPVAL 	R7 U3 ; R7 := U3
	55	[7171]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	56	[7171]	JMP      	87 ; PC := 87
	57	[7172]	GETGLOBAL	R3 K10 ; R3 := _T
	58	[7172]	GETTABLE 	R3 R3 K21 ; R3 := R3["HasDailyTribute"]
	59	[7172]	TEST     	R3 1 ; if R3 then PC := 73
	60	[7172]	JMP      	73 ; PC := 73
	61	[7173]	GETGLOBAL	R3 K0 ; R3 := 0x3d106989
	62	[7173]	LOADK    	R4 K22 ; R4 := "Login: No Daily"
	63	[7173]	CALL     	R3 2 1 ; R3(R4)
	64	[7174]	GETUPVAL 	R3 U3 ; R3 := U3
	65	[7174]	LOADK    	R4 := 0.500000
	66	[7174]	CALL     	R3 2 1 ; R3(R4)
	67	[7175]	GETGLOBAL	R3 K23 ; R3 := mTimerMgr
	68	[7175]	SELF     	R3 R3 K24 ; R4 := R3; R3 := R3[0xbd2e96ea]
	69	[7175]	LOADK    	R5 := 2.000000
	70	[7182]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	71	[7175]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	72	[7182]	JMP      	87 ; PC := 87
	73	[7184]	GETGLOBAL	R3 K0 ; R3 := 0x3d106989
	74	[7184]	LOADK    	R4 K25 ; R4 := "Login: Daily"
	75	[7184]	CALL     	R3 2 1 ; R3(R4)
	76	[7185]	OP_LOADBOOL	R2 0 0 ; R2 := false
	77	[7186]	GETGLOBAL	R3 K10 ; R3 := _T
	78	[7186]	SETTABLE 	R3 K26 K27 ; R3["DailyTributeLoginState"] := 2.000000
	79	[7187]	GETGLOBAL	R3 K10 ; R3 := _T
	80	[7187]	GETGLOBAL	R4 K23 ; R4 := mTimerMgr
	81	[7187]	SELF     	R4 R4 K24 ; R5 := R4; R4 := R4[0xbd2e96ea]
	82	[7187]	LOADK    	R6 := 2.000000
	83	[7208]	CLOSURE  	R7 1 ; R7 := closure(Function #2)
	84	[7208]	OP_LOADBOOL	R8 1 0 ; R8 := true
	85	[7187]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	86	[7208]	SETTABLE 	R3 K28 R4 ; R3["DailyTributeLoginTimerId"] := R4
	87	[7211]	GETGLOBAL	R3 K29 ; R3 := 0x9ba7909f
	88	[7211]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x7e17ae26]
	89	[7211]	LOADK    	R5 K31 ; R5 := "OnLoginComplete"
	90	[7211]	LOADK    	R6 K32 ; R6 := ""
	91	[7211]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	92	[7213]	OP_LOADBOOL	R3 0 0 ; R3 := false
	93	[7213]	SETGLOBALHASH	R3 K33 ; mNeedsToRespawnMenuAvatars := R3
	94	[7215]	GETUPVAL 	R3 U4 ; R3 := U4
	95	[7215]	CALL     	R3 1 1 ; R3()
	96	[7217]	GETGLOBAL	R3 K5 ; R3 := 0x76ea806b
	97	[7217]	SELF     	R3 R3 K34 ; R4 := R3; R3 := R3[0xa75c5137]
	98	[7217]	LOADK    	R5 K35 ; R5 := "OnAccountNameChangedCallback"
	99	[7217]	CALL     	R3 3 1 ; R3(R4,R5)
	100	[7218]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	101	[7218]	GETGLOBAL	R4 K36 ; R4 := 0x25d99d89
	102	[7218]	CALL     	R3 2 2 ; R3 := R3(R4)
	103	[7218]	TEST     	R3 0 ; if not R3 then PC := 106
	104	[7218]	JMP      	106 ; PC := 106
	105	[7219]	RETURN   	R0 1 ; return 
	106	[7222]	GETGLOBAL	R3 K36 ; R3 := 0x25d99d89
	107	[7222]	SELF     	R3 R3 K37 ; R4 := R3; R3 := R3[0x188fedab]
	108	[7222]	LOADK    	R5 K38 ; R5 := "FriendRequestReceived"
	109	[7222]	CALL     	R3 3 1 ; R3(R4,R5)
	110	[7223]	OP_LOADBOOL	R3 1 0 ; R3 := true
	111	[7223]	SETGLOBALHASH	R3 K39 ; mNewFriendRequests := R3
	112	[7227]	GETUPVAL 	R3 U1 ; R3 := U1
	113	[7227]	GETTABLE 	R3 R3 K40 ; R3 := R3[0x52fb05b3]
	114	[7227]	GETGLOBAL	R4 K41 ; R4 := 0x7ed0a956
	115	[7227]	LOADK    	R5 K42 ; R5 := "/Lotus/Types/Keys/OrokinMoonQuest/OrokinMoonQuestKeyChain"
	116	[7227]	CALL     	R4 2 0 ; R4,... := R4(R5)
	117	[7227]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	118	[7228]	TEST     	R3 0 ; if not R3 then PC := 173
	119	[7228]	JMP      	173 ; PC := 173
	120	[7228]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	121	[7228]	GETGLOBAL	R5 K36 ; R5 := 0x25d99d89
	122	[7228]	SELF     	R5 R5 K43 ; R6 := R5; R5 := R5[0xa340c0e2]
	123	[7228]	CALL     	R5 2 0 ; R5,... := R5(R6)
	124	[7228]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	125	[7228]	TEST     	R4 0 ; if not R4 then PC := 173
	126	[7228]	JMP      	173 ; PC := 173
	127	[7229]	GETGLOBAL	R4 K29 ; R4 := 0x9ba7909f
	128	[7229]	SELF     	R4 R4 K44 ; R5 := R4; R4 := R4[0xcfba257f]
	129	[7229]	GETGLOBAL	R6 K45 ; R6 := 0xcffd3193
	130	[7229]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	131	[7230]	GETGLOBAL	R5 K7 ; R5 := 0x7b998233
	132	[7230]	MOVE     	R6 R4 ; R6 := R4
	133	[7230]	CALL     	R5 2 2 ; R5 := R5(R6)
	134	[7230]	TEST     	R5 1 ; if R5 then PC := 173
	135	[7230]	JMP      	173 ; PC := 173
	136	[7231]	SELF     	R5 R4 K46 ; R6 := R4; R5 := R4[0xe4162eed]
	137	[7231]	LOADK    	R7 K47 ; R7 := "SetWayInMovie"
	138	[7231]	LOADK    	R8 K48 ; R8 := "true"
	139	[7231]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	140	[7232]	NEWTABLE 	R5 0 5 ; R5 := {}
	141	[7232]	SETTABLE 	R5 K49 K50 ; R5["NARAMON"] := 1.000000
	142	[7232]	SETTABLE 	R5 K51 K27 ; R5["ZENURIK"] := 2.000000
	143	[7232]	SETTABLE 	R5 K52 K53 ; R5["VAZARIN"] := 3.000000
	144	[7232]	SETTABLE 	R5 K54 K55 ; R5["UNAIRU"] := 4.000000
	145	[7232]	SETTABLE 	R5 K56 K57 ; R5["MADURAI"] := 5.000000
	146	[7233]	GETGLOBAL	R6 K10 ; R6 := _T
	147	[7233]	GETTABLE 	R6 R6 K58 ; R6 := R6[0xd73ffe73]
	148	[7233]	MOVE     	R7 R5 ; R7 := R5
	149	[7233]	CALL     	R6 2 1 ; R6(R7)
	150	[7235]	NEWTABLE 	R6 0 0 ; R6 := {}
	151	[7236]	GETTABLE 	R7 R5 K49 ; R7 := R5["NARAMON"]
	152	[7236]	GETTABLE 	R8 R5 K56 ; R8 := R5["MADURAI"]
	153	[7236]	LOADK    	R9 := 1.000000
	154	[7236]	FORPREP  	R7 162 ; R7 -= R9; PC := 162
	155	[7237]	GETGLOBAL	R11 K59 ; R11 := 0x33bdd652
	156	[7237]	GETTABLE 	R11 R11 K60 ; R11 := R11[0x23d5322f]
	157	[7237]	MOVE     	R12 R6 ; R12 := R6
	158	[7237]	NEWTABLE 	R13 0 2 ; R13 := {}
	159	[7237]	SETTABLE 	R13 K61 R10 ; R13["Clan"] := R10
	160	[7237]	SETTABLE 	R13 K62 K63 ; R13["Count"] := 0.000000
	161	[7237]	CALL     	R11 3 1 ; R11(R12,R13)
	162	[7236]	FORLOOP  	R7 155 ; R7 += R9; if R7 <= R8 then begin PC := 155; R10 := R7 end
	163	[7239]	GETGLOBAL	R11 K7 ; R11 := 0x7b998233
	164	[7239]	GETGLOBAL	R12 K10 ; R12 := _T
	165	[7239]	GETTABLE 	R12 R12 K64 ; R12 := R12["SetCurrentResults"]
	166	[7239]	CALL     	R11 2 2 ; R11 := R11(R12)
	167	[7239]	TEST     	R11 1 ; if R11 then PC := 173
	168	[7239]	JMP      	173 ; PC := 173
	169	[7240]	GETGLOBAL	R11 K10 ; R11 := _T
	170	[7240]	GETTABLE 	R11 R11 K65 ; R11 := R11[0xce3bbe2f]
	171	[7240]	MOVE     	R12 R6 ; R12 := R6
	172	[7240]	CALL     	R11 2 1 ; R11(R12)
	173	[7245]	GETGLOBAL	R11 K36 ; R11 := 0x25d99d89
	174	[7245]	SELF     	R11 R11 K66 ; R12 := R11; R11 := R11[0x25a6e75e]
	175	[7245]	CALL     	R11 2 2 ; R11 := R11(R12)
	176	[7245]	SELF     	R11 R11 K67 ; R12 := R11; R11 := R11[0x8e7c3b5e]
	177	[7245]	CALL     	R11 2 2 ; R11 := R11(R12)
	178	[7246]	GETGLOBAL	R12 K7 ; R12 := 0x7b998233
	179	[7246]	MOVE     	R13 R11 ; R13 := R11
	180	[7246]	CALL     	R12 2 2 ; R12 := R12(R13)
	181	[7246]	TEST     	R12 1 ; if R12 then PC := 199
	182	[7246]	JMP      	199 ; PC := 199
	183	[7246]	GETGLOBAL	R12 K10 ; R12 := _T
	184	[7246]	GETTABLE 	R12 R12 K68 ; R12 := R12["ActiveQuestLoaded"]
	185	[7246]	TEST     	R12 1 ; if R12 then PC := 199
	186	[7246]	JMP      	199 ; PC := 199
	187	[7247]	GETGLOBAL	R12 K7 ; R12 := 0x7b998233
	188	[7247]	GETGLOBAL	R13 K69 ; R13 := 0xbe190284
	189	[7247]	CALL     	R12 2 2 ; R12 := R12(R13)
	190	[7247]	TEST     	R12 1 ; if R12 then PC := 205
	191	[7247]	JMP      	205 ; PC := 205
	192	[7248]	GETGLOBAL	R12 K69 ; R12 := 0xbe190284
	193	[7248]	SELF     	R12 R12 K70 ; R13 := R12; R12 := R12[0x8e07e77f]
	194	[7248]	SELF     	R14 R11 K71 ; R15 := R11; R14 := R11[0xed4e0128]
	195	[7248]	CALL     	R14 2 2 ; R14 := R14(R15)
	196	[7248]	LOADK    	R15 K68 ; R15 := "ActiveQuestLoaded"
	197	[7248]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	198	[7249]	JMP      	205 ; PC := 205
	199	[7251]	GETGLOBAL	R12 K10 ; R12 := _T
	200	[7251]	SETTABLE 	R12 K68 K4 ; R12["ActiveQuestLoaded"] := true
	201	[7253]	GETUPVAL 	R12 U5 ; R12 := U5
	202	[7253]	CALL     	R12 1 3 ; R12,R13 := R12()
	203	[7254]	NOT      	R14 R13 ; R14 := not R13
	204	[7254]	SETGLOBALHASH	R14 K72 ; mQuestsNeedChecking := R14
	205	[7257]	GETUPVAL 	R14 U6 ; R14 := U6
	206	[7257]	GETTABLE 	R14 R14 K73 ; R14 := R14["mForceRefreshWorldStatePostLogin"]
	207	[7257]	TEST     	R14 0 ; if not R14 then PC := 211
	208	[7257]	JMP      	211 ; PC := 211
	209	[7261]	GETUPVAL 	R14 U7 ; R14 := U7
	210	[7261]	CALL     	R14 1 1 ; R14()
	211	[7264]	GETUPVAL 	R14 U8 ; R14 := U8
	212	[7264]	GETUPVAL 	R15 U6 ; R15 := U6
	213	[7264]	GETTABLE 	R15 R15 K73 ; R15 := R15["mForceRefreshWorldStatePostLogin"]
	214	[7264]	CALL     	R14 2 1 ; R14(R15)
	215	[7265]	GETUPVAL 	R14 U6 ; R14 := U6
	216	[7265]	SETTABLE 	R14 K73 K74 ; R14["mForceRefreshWorldStatePostLogin"] := false
	217	[7267]	GETGLOBAL	R14 K36 ; R14 := 0x25d99d89
	218	[7267]	SELF     	R14 R14 K75 ; R15 := R14; R14 := R14[0x1bddce2c]
	219	[7267]	LOADK    	R16 K76 ; R16 := "OnSyncTwitchDrops"
	220	[7267]	CALL     	R14 3 1 ; R14(R15,R16)
	221	[7268]	GETGLOBAL	R14 K36 ; R14 := 0x25d99d89
	222	[7268]	SELF     	R14 R14 K77 ; R15 := R14; R14 := R14[0x5826c749]
	223	[7268]	LOADK    	R16 K78 ; R16 := "OnSyncAmazonEntitlemments"
	224	[7268]	CALL     	R14 3 1 ; R14(R15,R16)
	225	[7270]	GETUPVAL 	R14 U9 ; R14 := U9
	226	[7270]	CALL     	R14 1 1 ; R14()
	227	[7272]	GETUPVAL 	R14 U10 ; R14 := U10
	228	[7272]	CALL     	R14 1 1 ; R14()
	229	[7273]	GETGLOBAL	R14 K79 ; R14 := mFoundryNotification
	230	[7273]	SETTABLE 	R14 K80 K4 ; R14["Refresh"] := true
	231	[7274]	GETGLOBAL	R14 K10 ; R14 := _T
	232	[7274]	SETTABLE 	R14 K81 K74 ; R14["syncingInventory"] := false
	233	[7276]	GETUPVAL 	R14 U11 ; R14 := U11
	234	[7276]	GETGLOBAL	R15 K36 ; R15 := 0x25d99d89
	235	[7276]	CALL     	R14 2 1 ; R14(R15)
	236	[7278]	GETGLOBAL	R14 K2 ; R14 := 0x0032441c
	237	[7278]	GETTABLE 	R14 R14 K82 ; R14 := R14["checkAutoLaunchMission"]
	238	[7278]	EQ       	1 R14 K74 ; if R14 == false then PC := 250
	239	[7278]	JMP      	250 ; PC := 250
	240	[7279]	GETGLOBAL	R14 K29 ; R14 := 0x9ba7909f
	241	[7279]	SELF     	R14 R14 K83 ; R15 := R14; R14 := R14[0x0b1c45c5]
	242	[7279]	LOADK    	R16 K84 ; R16 := "LotusGameRules.AutoLaunchMission"
	243	[7279]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	244	[7280]	EQ       	1 R14 K32 ; if R14 == "" then PC := 250
	245	[7280]	JMP      	250 ; PC := 250
	246	[7281]	SETUPVAL 	R14 U12 ; U12 := R14
	247	[7282]	OP_LOADBOOL	R2 0 0 ; R2 := false
	248	[7283]	GETGLOBAL	R15 K2 ; R15 := 0x0032441c
	249	[7283]	SETTABLE 	R15 K82 K74 ; R15["checkAutoLaunchMission"] := false
	250	[7287]	TEST     	R2 0 ; if not R2 then PC := 263
	251	[7287]	JMP      	263 ; PC := 263
	252	[7288]	GETGLOBAL	R15 K10 ; R15 := _T
	253	[7288]	SETTABLE 	R15 K17 K12 ; R15["QueueNewWarRecap"] := nil
	254	[7289]	GETGLOBAL	R15 K7 ; R15 := 0x7b998233
	255	[7289]	GETGLOBAL	R16 K85 ; R16 := 0x56df9f48
	256	[7289]	CALL     	R15 2 2 ; R15 := R15(R16)
	257	[7289]	TEST     	R15 1 ; if R15 then PC := 263
	258	[7289]	JMP      	263 ; PC := 263
	259	[7290]	GETGLOBAL	R15 K29 ; R15 := 0x9ba7909f
	260	[7290]	SELF     	R15 R15 K86 ; R16 := R15; R15 := R15[0x6dd7aa66]
	261	[7290]	GETGLOBAL	R17 K85 ; R17 := 0x56df9f48
	262	[7290]	CALL     	R15 3 1 ; R15(R16,R17)
	263	[7294]	GETUPVAL 	R15 U1 ; R15 := U1
	264	[7294]	GETTABLE 	R15 R15 K87 ; R15 := R15[0xc14d48af]
	265	[7294]	CALL     	R15 1 2 ; R15 := R15()
	266	[7295]	TEST     	R15 0 ; if not R15 then PC := 298
	267	[7295]	JMP      	298 ; PC := 298
	268	[7296]	GETGLOBAL	R16 K7 ; R16 := 0x7b998233
	269	[7296]	GETGLOBAL	R17 K88 ; R17 := 0xa94df70b
	270	[7296]	CALL     	R16 2 2 ; R16 := R16(R17)
	271	[7296]	TEST     	R16 1 ; if R16 then PC := 298
	272	[7296]	JMP      	298 ; PC := 298
	273	[7296]	GETGLOBAL	R16 K7 ; R16 := 0x7b998233
	274	[7296]	GETGLOBAL	R17 K36 ; R17 := 0x25d99d89
	275	[7296]	CALL     	R16 2 2 ; R16 := R16(R17)
	276	[7296]	TEST     	R16 1 ; if R16 then PC := 298
	277	[7296]	JMP      	298 ; PC := 298
	278	[7298]	GETGLOBAL	R16 K36 ; R16 := 0x25d99d89
	279	[7298]	SELF     	R16 R16 K89 ; R17 := R16; R16 := R16[0xcd57f819]
	280	[7298]	OP_LOADBOOL	R18 1 0 ; R18 := true
	281	[7298]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	282	[7298]	GETTABLE 	R16 R16 K90 ; R16 := R16["mBootLocation"]
	283	[7299]	EQ       	0 R16 K50 ; if R16 ~= 1.000000 then PC := 292
	284	[7299]	JMP      	292 ; PC := 292
	285	[7300]	GETGLOBAL	R17 K88 ; R17 := 0xa94df70b
	286	[7300]	SELF     	R17 R17 K92 ; R18 := R17; R17 := R17[0x2b0141b8]
	287	[7300]	GETGLOBAL	R19 K41 ; R19 := 0x7ed0a956
	288	[7300]	LOADK    	R20 K93 ; R20 := "/Lotus/Levels/Proc/TheNewWar/PartTwo/TNWDrifterCampMain"
	289	[7300]	CALL     	R19 2 0 ; R19,... := R19(R20)
	290	[7300]	CALL     	R17 0 1 ; R17(R18,...)
	291	[7300]	JMP      	298 ; PC := 298
	292	[7302]	GETGLOBAL	R17 K88 ; R17 := 0xa94df70b
	293	[7302]	SELF     	R17 R17 K92 ; R18 := R17; R17 := R17[0x2b0141b8]
	294	[7302]	GETGLOBAL	R19 K41 ; R19 := 0x7ed0a956
	295	[7302]	LOADK    	R20 K94 ; R20 := "/Lotus/Levels/Proc/PlayerShip"
	296	[7302]	CALL     	R19 2 0 ; R19,... := R19(R20)
	297	[7302]	CALL     	R17 0 1 ; R17(R18,...)
	298	[7306]	RETURN   	R0 1 ; return 

function #214 <?:7308,7310> (3 instructions, 12 bytes at 0000016091A2D000)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[7309]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7309]	SETTABLE 	R0 K0 K1 ; R0["InviteQueued"] := 5.000000
	3	[7310]	RETURN   	R0 1 ; return 

function #215 <?:7312,7316> (12 instructions, 48 bytes at 0000016091A2D100)
1 param, 3 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[7313]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[7313]	LOADK    	R2 K1 ; R2 := "DoLogoff"
	3	[7313]	CALL     	R1 2 1 ; R1(R2)
	4	[7314]	LOADNIL  	R1 R1 ; R1 := nil
	5	[7314]	SETGLOBALHASH	R1 K2 ; connectionFailurePopup := R1
	6	[7315]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[7315]	EQ       	1 R0 K3 ; if R0 == "true" then PC := 10
	8	[7315]	JMP      	10 ; PC := 10
	9	[7315]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 10
	10	[7315]	OP_LOADBOOL	R2 1 0 ; R2 := true
	11	[7315]	CALL     	R1 2 1 ; R1(R2)
	12	[7316]	RETURN   	R0 1 ; return 

function #216 <?:7318,7328> (34 instructions, 136 bytes at 0000016091A2D260)
0 params, 4 slots, 2 upvalues, 0 locals, 14 constants, 0 functions
	1	[7319]	GETGLOBAL	R0 K0 ; R0 := connectionFailurePopup
	2	[7319]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 34
	3	[7319]	JMP      	34 ; PC := 34
	4	[7319]	GETGLOBAL	R0 K2 ; R0 := 0x76ea806b
	5	[7319]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x8792aaab]
	6	[7319]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[7319]	TEST     	R0 0 ; if not R0 then PC := 34
	8	[7319]	JMP      	34 ; PC := 34
	9	[7320]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[7320]	GETTABLE 	R0 R0 K4 ; R0 := R0[0xd342d13d]
	11	[7320]	CALL     	R0 1 2 ; R0 := R0()
	12	[7320]	TEST     	R0 0 ; if not R0 then PC := 18
	13	[7320]	JMP      	18 ; PC := 18
	14	[7320]	GETGLOBAL	R0 K5 ; R0 := 0x9ba7909f
	15	[7320]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x5374b92e]
	16	[7320]	GETGLOBAL	R2 K7 ; R2 := 0xe1380899
	17	[7320]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	18	[7321]	TEST     	R0 1 ; if R0 then PC := 34
	19	[7321]	JMP      	34 ; PC := 34
	20	[7322]	GETGLOBAL	R1 K8 ; R1 := 0x34291f5c
	21	[7322]	GETTABLE 	R1 R1 K9 ; R1 := R1[0x056bfe8b]
	22	[7322]	CALL     	R1 1 2 ; R1 := R1()
	23	[7322]	TEST     	R1 0 ; if not R1 then PC := 28
	24	[7322]	JMP      	28 ; PC := 28
	25	[7323]	GETGLOBAL	R1 K2 ; R1 := 0x76ea806b
	26	[7323]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x2e5dbf9d]
	27	[7323]	CALL     	R1 2 1 ; R1(R2)
	28	[7325]	GETUPVAL 	R1 U1 ; R1 := U1
	29	[7325]	GETTABLE 	R1 R1 K11 ; R1 := R1[0xe0cba3ca]
	30	[7325]	LOADK    	R2 K12 ; R2 := "/Lotus/Language/Menu/BackgroundError_FailedToConnect"
	31	[7325]	LOADK    	R3 K13 ; R3 := "DoLogoff"
	32	[7325]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	33	[7325]	SETGLOBALHASH	R1 K0 ; connectionFailurePopup := R1
	34	[7328]	RETURN   	R0 1 ; return 

function #217 <?:7330,7371> (129 instructions, 516 bytes at 0000016091A2D580)
1 param, 15 slots, 1 upvalue, 0 locals, 34 constants, 0 functions
	1	[7331]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[7331]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x056bfe8b]
	3	[7331]	CALL     	R1 1 2 ; R1 := R1()
	4	[7331]	TEST     	R1 1 ; if R1 then PC := 129
	5	[7331]	JMP      	129 ; PC := 129
	6	[7332]	GETGLOBAL	R1 K2 ; R1 := connectionFailurePopup
	7	[7332]	EQ       	0 R1 K3 ; if R1 ~= nil then PC := 129
	8	[7332]	JMP      	129 ; PC := 129
	9	[7332]	GETGLOBAL	R1 K4 ; R1 := 0x76ea806b
	10	[7332]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x8792aaab]
	11	[7332]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[7332]	TEST     	R1 0 ; if not R1 then PC := 129
	13	[7332]	JMP      	129 ; PC := 129
	14	[7333]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	15	[7333]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xa7a2e381]
	16	[7333]	CALL     	R1 1 2 ; R1 := R1()
	17	[7333]	TEST     	R1 0 ; if not R1 then PC := 123
	18	[7333]	JMP      	123 ; PC := 123
	19	[7334]	GETGLOBAL	R1 K7 ; R1 := 0x7f5022cf
	20	[7334]	GETTABLE 	R1 R1 K8 ; R1 := R1[0xa5c556b9]
	21	[7334]	MOVE     	R2 R0 ; R2 := R0
	22	[7334]	LOADK    	R3 K9 ; R3 := "|"
	23	[7334]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	24	[7335]	TEST     	R1 0 ; if not R1 then PC := 123
	25	[7335]	JMP      	123 ; PC := 123
	26	[7336]	GETGLOBAL	R2 K7 ; R2 := 0x7f5022cf
	27	[7336]	GETTABLE 	R2 R2 K10 ; R2 := R2[0x1a94c9cc]
	28	[7336]	MOVE     	R3 R0 ; R3 := R0
	29	[7336]	ADD      	R4 R1 K11 ; R4 := R1 + 1.000000
	30	[7336]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	31	[7337]	GETGLOBAL	R3 K12 ; R3 := cjson
	32	[7337]	GETTABLE 	R3 R3 K13 ; R3 := R3[0x7ab914d8]
	33	[7337]	MOVE     	R4 R2 ; R4 := R2
	34	[7337]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[7338]	EQ       	1 R3 K3 ; if R3 == nil then PC := 123
	36	[7338]	JMP      	123 ; PC := 123
	37	[7339]	GETTABLE 	R4 R3 K14 ; R4 := R3["SuspendDate"]
	38	[7339]	EQ       	1 R4 K3 ; if R4 == nil then PC := 70
	39	[7339]	JMP      	70 ; PC := 70
	40	[7340]	GETGLOBAL	R4 K15 ; R4 := 0xae91e43b
	41	[7340]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0x42b04007]
	42	[7340]	LOADK    	R6 K17 ; R6 := "/Lotus/Language/Launcher/LoginFailedSuspended"
	43	[7340]	OP_LOADBOOL	R7 1 0 ; R7 := true
	44	[7340]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	45	[7341]	LOADK    	R5 K18 ; R5 := "/Lotus/Language/Launcher/SuspendReason_"
	46	[7341]	GETTABLE 	R6 R3 K19 ; R6 := R3["SuspendReason"]
	47	[7341]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	48	[7342]	GETGLOBAL	R6 K15 ; R6 := 0xae91e43b
	49	[7342]	SELF     	R6 R6 K16 ; R7 := R6; R6 := R6[0x42b04007]
	50	[7342]	MOVE     	R8 R5 ; R8 := R5
	51	[7342]	OP_LOADBOOL	R9 1 0 ; R9 := true
	52	[7342]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	53	[7344]	EQ       	0 R6 R5 ; if R6 ~= R5 then PC := 56
	54	[7344]	JMP      	56 ; PC := 56
	55	[7345]	GETTABLE 	R6 R3 K19 ; R6 := R3["SuspendReason"]
	56	[7348]	GETGLOBAL	R7 K7 ; R7 := 0x7f5022cf
	57	[7348]	GETTABLE 	R7 R7 K20 ; R7 := R7[0xe8072ded]
	58	[7348]	MOVE     	R8 R4 ; R8 := R4
	59	[7348]	GETTABLE 	R9 R3 K14 ; R9 := R3["SuspendDate"]
	60	[7348]	MOVE     	R10 R6 ; R10 := R6
	61	[7348]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	62	[7349]	GETUPVAL 	R8 U0 ; R8 := U0
	63	[7349]	GETTABLE 	R8 R8 K21 ; R8 := R8[0xe0cba3ca]
	64	[7349]	MOVE     	R9 R7 ; R9 := R7
	65	[7349]	LOADK    	R10 K22 ; R10 := "OnFcmKickOut"
	66	[7349]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	67	[7349]	SETGLOBALHASH	R8 K2 ; connectionFailurePopup := R8
	68	[7350]	RETURN   	R0 1 ; return 
	69	[7350]	JMP      	123 ; PC := 123
	70	[7351]	GETTABLE 	R8 R3 K23 ; R8 := R3["ChatBanDate"]
	71	[7351]	EQ       	1 R8 K3 ; if R8 == nil then PC := 91
	72	[7351]	JMP      	91 ; PC := 91
	73	[7352]	GETGLOBAL	R8 K15 ; R8 := 0xae91e43b
	74	[7352]	SELF     	R8 R8 K16 ; R9 := R8; R8 := R8[0x42b04007]
	75	[7352]	LOADK    	R10 K24 ; R10 := "/Lotus/Language/Changyou/WeGameChatBan"
	76	[7352]	OP_LOADBOOL	R11 0 0 ; R11 := false
	77	[7352]	NEWTABLE 	R12 0 2 ; R12 := {}
	78	[7352]	GETTABLE 	R13 R3 K23 ; R13 := R3["ChatBanDate"]
	79	[7352]	SETTABLE 	R12 K25 R13 ; R12["BAN_TIME"] := R13
	80	[7352]	GETTABLE 	R13 R3 K27 ; R13 := R3["ChatBannedReason"]
	81	[7352]	SETTABLE 	R12 K26 R13 ; R12["BAN_REASON"] := R13
	82	[7352]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	83	[7353]	GETUPVAL 	R9 U0 ; R9 := U0
	84	[7353]	GETTABLE 	R9 R9 K21 ; R9 := R9[0xe0cba3ca]
	85	[7353]	MOVE     	R10 R8 ; R10 := R8
	86	[7353]	LOADK    	R11 K28 ; R11 := "DoLogoff"
	87	[7353]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	88	[7353]	SETGLOBALHASH	R9 K2 ; connectionFailurePopup := R9
	89	[7354]	RETURN   	R0 1 ; return 
	90	[7354]	JMP      	123 ; PC := 123
	91	[7355]	GETTABLE 	R9 R3 K29 ; R9 := R3["KickReason"]
	92	[7355]	EQ       	1 R9 K3 ; if R9 == nil then PC := 110
	93	[7355]	JMP      	110 ; PC := 110
	94	[7356]	GETGLOBAL	R9 K15 ; R9 := 0xae91e43b
	95	[7356]	SELF     	R9 R9 K16 ; R10 := R9; R9 := R9[0x42b04007]
	96	[7356]	LOADK    	R11 K30 ; R11 := "/Lotus/Language/Changyou/WeGameKick"
	97	[7356]	OP_LOADBOOL	R12 0 0 ; R12 := false
	98	[7356]	NEWTABLE 	R13 0 1 ; R13 := {}
	99	[7356]	GETTABLE 	R14 R3 K29 ; R14 := R3["KickReason"]
	100	[7356]	SETTABLE 	R13 K31 R14 ; R13["KICK_REASON"] := R14
	101	[7356]	CALL     	R9 5 2 ; R9 := R9(R10,R11,R12,R13)
	102	[7357]	GETUPVAL 	R10 U0 ; R10 := U0
	103	[7357]	GETTABLE 	R10 R10 K21 ; R10 := R10[0xe0cba3ca]
	104	[7357]	MOVE     	R11 R9 ; R11 := R9
	105	[7357]	LOADK    	R12 K22 ; R12 := "OnFcmKickOut"
	106	[7357]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	107	[7357]	SETGLOBALHASH	R10 K2 ; connectionFailurePopup := R10
	108	[7358]	RETURN   	R0 1 ; return 
	109	[7358]	JMP      	123 ; PC := 123
	110	[7359]	GETTABLE 	R10 R3 K32 ; R10 := R3["WarningReason"]
	111	[7359]	EQ       	1 R10 K3 ; if R10 == nil then PC := 123
	112	[7359]	JMP      	123 ; PC := 123
	113	[7360]	GETGLOBAL	R10 K15 ; R10 := 0xae91e43b
	114	[7360]	SELF     	R10 R10 K16 ; R11 := R10; R10 := R10[0x42b04007]
	115	[7360]	GETTABLE 	R12 R3 K32 ; R12 := R3["WarningReason"]
	116	[7360]	OP_LOADBOOL	R13 0 0 ; R13 := false
	117	[7360]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	118	[7361]	GETUPVAL 	R11 U0 ; R11 := U0
	119	[7361]	GETTABLE 	R11 R11 K21 ; R11 := R11[0xe0cba3ca]
	120	[7361]	MOVE     	R12 R10 ; R12 := R10
	121	[7361]	CALL     	R11 2 1 ; R11(R12)
	122	[7362]	RETURN   	R0 1 ; return 
	123	[7368]	GETUPVAL 	R11 U0 ; R11 := U0
	124	[7368]	GETTABLE 	R11 R11 K21 ; R11 := R11[0xe0cba3ca]
	125	[7368]	LOADK    	R12 K33 ; R12 := "/Lotus/Language/Menu/BackgroundError_FailedToConnect"
	126	[7368]	LOADK    	R13 K28 ; R13 := "DoLogoff"
	127	[7368]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	128	[7368]	SETGLOBALHASH	R11 K2 ; connectionFailurePopup := R11
	129	[7371]	RETURN   	R0 1 ; return 

function #218 <?:7373,7393> (48 instructions, 192 bytes at 0000016087389910)
0 params, 4 slots, 2 upvalues, 0 locals, 20 constants, 0 functions
	1	[7375]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	2	[7375]	LOADK    	R1 K1 ; R1 := "Background.lua: OnUserChangedCallback"
	3	[7375]	CALL     	R0 2 1 ; R0(R1)
	4	[7376]	GETGLOBAL	R0 K2 ; R0 := 0x9ba7909f
	5	[7376]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x7e17ae26]
	6	[7376]	LOADK    	R2 K4 ; R2 := "OnUserChangedFunction"
	7	[7376]	LOADK    	R3 K5 ; R3 := ""
	8	[7376]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	9	[7378]	GETGLOBAL	R0 K6 ; R0 := 0xbe190284
	10	[7379]	GETGLOBAL	R1 K7 ; R1 := 0x7b998233
	11	[7379]	MOVE     	R2 R0 ; R2 := R0
	12	[7379]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[7379]	TEST     	R1 1 ; if R1 then PC := 25
	14	[7379]	JMP      	25 ; PC := 25
	15	[7379]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[7379]	GETTABLE 	R1 R1 K8 ; R1 := R1[0xd342d13d]
	17	[7379]	CALL     	R1 1 2 ; R1 := R1()
	18	[7379]	TEST     	R1 1 ; if R1 then PC := 27
	19	[7379]	JMP      	27 ; PC := 27
	20	[7379]	GETGLOBAL	R1 K6 ; R1 := 0xbe190284
	21	[7379]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xf2deaf69]
	22	[7379]	GETGLOBAL	R3 K10 ; R3 := gLotusHubGameRulesType
	23	[7379]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	24	[7379]	JMP      	27 ; PC := 27
	25	[7379]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 26
	26	[7379]	OP_LOADBOOL	R1 1 0 ; R1 := true
	27	[7381]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	28	[7381]	LOADK    	R3 K11 ; R3 := "OnUserChangedCallback"
	29	[7381]	CALL     	R2 2 1 ; R2(R3)
	30	[7383]	GETGLOBAL	R2 K12 ; R2 := 0x0032441c
	31	[7383]	SETTABLE 	R2 K13 K14 ; R2["JunctionComplete"] := nil
	32	[7385]	GETGLOBAL	R2 K15 ; R2 := 0x76ea806b
	33	[7385]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x8792aaab]
	34	[7385]	CALL     	R2 2 2 ; R2 := R2(R3)
	35	[7385]	TEST     	R2 0 ; if not R2 then PC := 48
	36	[7385]	JMP      	48 ; PC := 48
	37	[7386]	TEST     	R1 1 ; if R1 then PC := 44
	38	[7386]	JMP      	44 ; PC := 44
	39	[7387]	LOADNIL  	R2 R2 ; R2 := nil
	40	[7387]	SETGLOBALHASH	R2 K17 ; connectionFailurePopup := R2
	41	[7388]	GETUPVAL 	R2 U1 ; R2 := U1
	42	[7388]	CALL     	R2 1 1 ; R2()
	43	[7388]	JMP      	48 ; PC := 48
	44	[7390]	GETGLOBAL	R2 K18 ; R2 := 0x34291f5c
	45	[7390]	GETTABLE 	R2 R2 K19 ; R2 := R2[0x8ee24660]
	46	[7390]	OP_LOADBOOL	R3 1 0 ; R3 := true
	47	[7390]	CALL     	R2 2 1 ; R2(R3)
	48	[7393]	RETURN   	R0 1 ; return 

function #219 <?:7395,7407> (27 instructions, 108 bytes at 0000016087389CE0)
0 params, 5 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[7396]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[7396]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[7397]	GETGLOBAL	R0 K0 ; R0 := _T
	4	[7397]	GETTABLE 	R0 R0 K1 ; R0 := R0["gDialogDeviceID"]
	5	[7398]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[7398]	GETGLOBAL	R2 K0 ; R2 := _T
	7	[7398]	GETTABLE 	R2 R2 K1 ; R2 := R2["gDialogDeviceID"]
	8	[7398]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[7398]	TEST     	R1 0 ; if not R1 then PC := 12
	10	[7398]	JMP      	12 ; PC := 12
	11	[7399]	LOADK    	R0 K3 ; R0 := ""
	12	[7402]	GETGLOBAL	R1 K4 ; R1 := 0x89326c93
	13	[7402]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x785f144d]
	14	[7402]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[7402]	TEST     	R1 1 ; if R1 then PC := 22
	16	[7402]	JMP      	22 ; PC := 22
	17	[7403]	GETGLOBAL	R1 K4 ; R1 := 0x89326c93
	18	[7403]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xcf9f3db6]
	19	[7403]	MOVE     	R3 R0 ; R3 := R0
	20	[7403]	CALL     	R1 3 1 ; R1(R2,R3)
	21	[7403]	JMP      	27 ; PC := 27
	22	[7405]	GETGLOBAL	R1 K4 ; R1 := 0x89326c93
	23	[7405]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xca216d11]
	24	[7405]	MOVE     	R3 R0 ; R3 := R0
	25	[7405]	OP_LOADBOOL	R4 0 0 ; R4 := false
	26	[7405]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	27	[7407]	RETURN   	R0 1 ; return 

function #220 <?:7409,7414> (11 instructions, 44 bytes at 0000016087389F00)
0 params, 3 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[7410]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7410]	TEST     	R0 1 ; if R0 then PC := 11
	3	[7410]	JMP      	11 ; PC := 11
	4	[7411]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[7411]	SETUPVAL 	R0 U0 ; U0 := R0
	6	[7412]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[7412]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xe0cba3ca]
	8	[7412]	LOADK    	R1 K1 ; R1 := "/Lotus/Language/Menu/ConnectController_XBone"
	9	[7412]	LOADK    	R2 K2 ; R2 := "OnConfirmation"
	10	[7412]	CALL     	R0 3 1 ; R0(R1,R2)
	11	[7414]	RETURN   	R0 1 ; return 

function #221 <?:7416,7421> (11 instructions, 44 bytes at 000001608738A0B0)
0 params, 3 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[7417]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7417]	TEST     	R0 1 ; if R0 then PC := 11
	3	[7417]	JMP      	11 ; PC := 11
	4	[7418]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[7418]	SETUPVAL 	R0 U0 ; U0 := R0
	6	[7419]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[7419]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xe0cba3ca]
	8	[7419]	LOADK    	R1 K1 ; R1 := "/Lotus/Language/Menu/ConnectController_Switch"
	9	[7419]	LOADK    	R2 K2 ; R2 := "OnConfirmation"
	10	[7419]	CALL     	R0 3 1 ; R0(R1,R2)
	11	[7421]	RETURN   	R0 1 ; return 

function #222 <?:7423,7427> (9 instructions, 36 bytes at 000001608738A260)
2 params, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[7424]	GETGLOBAL	R2 K0 ; R2 := connectionFailurePopup
	2	[7424]	EQ       	0 R2 K1 ; if R2 ~= nil then PC := 9
	3	[7424]	JMP      	9 ; PC := 9
	4	[7425]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[7425]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xe0cba3ca]
	6	[7425]	LOADK    	R3 K3 ; R3 := "/Lotus/Language/Menu/ConnectionError_LoginExpired"
	7	[7425]	LOADK    	R4 K4 ; R4 := "DoLogoff"
	8	[7425]	CALL     	R2 3 1 ; R2(R3,R4)
	9	[7427]	RETURN   	R0 1 ; return 

function #223 <?:7429,7430> (1 instruction, 4 bytes at 000001608738A3D0)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[7430]	RETURN   	R0 1 ; return 

function #224 <?:7432,7437> (14 instructions, 56 bytes at 000001608738A4A0)
0 params, 5 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[7433]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[7433]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[7433]	GETGLOBAL	R2 K2 ; R2 := 0x900feed6
	4	[7433]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[7434]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	6	[7434]	MOVE     	R2 R0 ; R2 := R0
	7	[7434]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[7434]	TEST     	R1 1 ; if R1 then PC := 14
	9	[7434]	JMP      	14 ; PC := 14
	10	[7435]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xe4162eed]
	11	[7435]	LOADK    	R3 K5 ; R3 := "OnOnlinePlayTypeChanged"
	12	[7435]	LOADK    	R4 K6 ; R4 := ""
	13	[7435]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	14	[7437]	RETURN   	R0 1 ; return 

function #225 <?:7439,7444> (15 instructions, 60 bytes at 000001608738A650)
1 param, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[7440]	GETGLOBAL	R1 K0 ; R1 := 0x9ba7909f
	2	[7440]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbcfb64ab]
	3	[7440]	GETGLOBAL	R3 K2 ; R3 := movies
	4	[7440]	GETTABLE 	R3 R3 K3 ; R3 := R3["MissionDeck"]
	5	[7440]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[7441]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	7	[7441]	MOVE     	R3 R1 ; R3 := R1
	8	[7441]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[7441]	TEST     	R2 1 ; if R2 then PC := 15
	10	[7441]	JMP      	15 ; PC := 15
	11	[7442]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xe4162eed]
	12	[7442]	LOADK    	R4 K6 ; R4 := "GlobalSelectRegion"
	13	[7442]	MOVE     	R5 R0 ; R5 := R0
	14	[7442]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	15	[7444]	RETURN   	R0 1 ; return 

function #226 <?:7446,7452> (14 instructions, 56 bytes at 000001608738A880)
0 params, 2 slots, 2 upvalues, 0 locals, 8 constants, 0 functions
	1	[7447]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7447]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x8024bd2d]
	3	[7447]	CALL     	R0 1 1 ; R0()
	4	[7448]	GETGLOBAL	R0 K1 ; R0 := _T
	5	[7448]	GETTABLE 	R0 R0 K2 ; R0 := R0["Jukebox"]
	6	[7448]	EQ       	1 R0 K3 ; if R0 == nil then PC := 12
	7	[7448]	JMP      	12 ; PC := 12
	8	[7449]	GETUPVAL 	R0 U1 ; R0 := U1
	9	[7449]	GETTABLE 	R0 R0 K4 ; R0 := R0[0xfce6fd2b]
	10	[7449]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	11	[7449]	CALL     	R0 2 1 ; R0(R1)
	12	[7451]	GETGLOBAL	R0 K1 ; R0 := _T
	13	[7451]	SETTABLE 	R0 K6 K7 ; R0["IntelIconCacheFlushed"] := true
	14	[7452]	RETURN   	R0 1 ; return 

function #227 <?:7454,7456> (3 instructions, 12 bytes at 000001608738AA80)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7455]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7455]	CALL     	R0 1 1 ; R0()
	3	[7456]	RETURN   	R0 1 ; return 

function #228 <?:7458,7470> (29 instructions, 116 bytes at 000001608738AB50)
2 params, 5 slots, 6 upvalues, 0 locals, 4 constants, 0 functions
	1	[7459]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[7459]	LOADK    	R3 := 0.000000
	3	[7459]	CALL     	R2 2 1 ; R2(R3)
	4	[7460]	TEST     	R0 0 ; if not R0 then PC := 25
	5	[7460]	JMP      	25 ; PC := 25
	6	[7461]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[7461]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xe0cba3ca]
	8	[7461]	LOADK    	R3 K1 ; R3 := "/Lotus/Language/UiElements/ResetShipDecosSuccess"
	9	[7461]	CALL     	R2 2 1 ; R2(R3)
	10	[7462]	GETUPVAL 	R2 U2 ; R2 := U2
	11	[7462]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x23ddc82a]
	12	[7462]	CALL     	R2 1 2 ; R2 := R2()
	13	[7462]	TEST     	R2 0 ; if not R2 then PC := 20
	14	[7462]	JMP      	20 ; PC := 20
	15	[7463]	GETUPVAL 	R2 U3 ; R2 := U3
	16	[7463]	MOVE     	R3 R1 ; R3 := R1
	17	[7463]	GETUPVAL 	R4 U4 ; R4 := U4
	18	[7463]	CALL     	R2 3 1 ; R2(R3,R4)
	19	[7463]	JMP      	29 ; PC := 29
	20	[7465]	GETUPVAL 	R2 U3 ; R2 := U3
	21	[7465]	MOVE     	R3 R1 ; R3 := R1
	22	[7465]	GETUPVAL 	R4 U5 ; R4 := U5
	23	[7465]	CALL     	R2 3 1 ; R2(R3,R4)
	24	[7466]	JMP      	29 ; PC := 29
	25	[7468]	GETUPVAL 	R2 U1 ; R2 := U1
	26	[7468]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xe0cba3ca]
	27	[7468]	LOADK    	R3 K3 ; R3 := "/Lotus/Language/UiElements/ResetShipDecosFail"
	28	[7468]	CALL     	R2 2 1 ; R2(R3)
	29	[7470]	RETURN   	R0 1 ; return 

function #229 <?:7472,7478> (18 instructions, 72 bytes at 000001608738AE10)
0 params, 8 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[7473]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7473]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[7473]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7473]	TEST     	R0 1 ; if R0 then PC := 18
	5	[7473]	JMP      	18 ; PC := 18
	6	[7474]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[7474]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xeee7057a]
	8	[7474]	CALL     	R0 1 4 ; R0,R1,R2 := R0()
	9	[7475]	GETUPVAL 	R3 U1 ; R3 := U1
	10	[7475]	LOADK    	R4 := 2.000000
	11	[7475]	CALL     	R3 2 1 ; R3(R4)
	12	[7476]	GETGLOBAL	R3 K1 ; R3 := 0xbe190284
	13	[7476]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0xba3ffded]
	14	[7476]	MOVE     	R5 R0 ; R5 := R0
	15	[7476]	MOVE     	R6 R2 ; R6 := R2
	16	[7476]	LOADK    	R7 K4 ; R7 := "OnShipDecosReset"
	17	[7476]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	18	[7478]	RETURN   	R0 1 ; return 

function #230 <?:7480,7629> (342 instructions, 1368 bytes at 000001608738AFC0)
2 params, 47 slots, 4 upvalues, 0 locals, 56 constants, 0 functions
	1	[7481]	GETGLOBAL	R2 K0 ; R2 := 0xbe190284
	2	[7481]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xf2deaf69]
	3	[7481]	GETGLOBAL	R4 K2 ; R4 := gLotusAttractModeGameRulesType
	4	[7481]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	5	[7481]	TEST     	R2 1 ; if R2 then PC := 19
	6	[7481]	JMP      	19 ; PC := 19
	7	[7481]	GETGLOBAL	R2 K0 ; R2 := 0xbe190284
	8	[7481]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xf2deaf69]
	9	[7481]	GETGLOBAL	R4 K3 ; R4 := gLotusPhotoBoothGameRulesType
	10	[7481]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	11	[7481]	TEST     	R2 1 ; if R2 then PC := 19
	12	[7481]	JMP      	19 ; PC := 19
	13	[7481]	GETTABLE 	R2 R1 K4 ; R2 := R1["DecoArea"]
	14	[7481]	GETUPVAL 	R3 U0 ; R3 := U0
	15	[7481]	GETTABLE 	R3 R3 K5 ; R3 := R3["DECO_AREA_APARTMENT"]
	16	[7481]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 19
	17	[7481]	JMP      	19 ; PC := 19
	18	[7483]	RETURN   	R0 1 ; return 
	19	[7486]	GETGLOBAL	R2 K6 ; R2 := _T
	20	[7486]	GETTABLE 	R2 R2 K7 ; R2 := R2["ShipDecos"]
	21	[7486]	EQ       	0 R2 K8 ; if R2 ~= nil then PC := 26
	22	[7486]	JMP      	26 ; PC := 26
	23	[7487]	GETGLOBAL	R2 K6 ; R2 := _T
	24	[7487]	NEWTABLE 	R3 0 0 ; R3 := {}
	25	[7487]	SETTABLE 	R2 K7 R3 ; R2[0x33bdd652] := R3
	26	[7490]	EQ       	1 R0 K8 ; if R0 == nil then PC := 158
	27	[7490]	JMP      	158 ; PC := 158
	28	[7490]	EQ       	1 R0 K9 ; if R0 == "" then PC := 158
	29	[7490]	JMP      	158 ; PC := 158
	30	[7491]	GETGLOBAL	R2 K10 ; R2 := cjson
	31	[7491]	GETTABLE 	R2 R2 K11 ; R2 := R2[0x7ab914d8]
	32	[7491]	MOVE     	R3 R0 ; R3 := R0
	33	[7491]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[7492]	NEWTABLE 	R3 0 0 ; R3 := {}
	35	[7493]	GETTABLE 	R4 R2 K12 ; R4 := R2["RemovedDecos"]
	36	[7493]	EQ       	1 R4 K8 ; if R4 == nil then PC := 40
	37	[7493]	JMP      	40 ; PC := 40
	38	[7494]	GETTABLE 	R3 R2 K12 ; R3 := R2["RemovedDecos"]
	39	[7494]	JMP      	100 ; PC := 100
	40	[7495]	GETTABLE 	R4 R2 K13 ; R4 := R2["DecoId"]
	41	[7495]	EQ       	1 R4 K8 ; if R4 == nil then PC := 48
	42	[7495]	JMP      	48 ; PC := 48
	43	[7496]	NEWTABLE 	R4 1 0 ; R4 := {}
	44	[7496]	GETTABLE 	R5 R2 K13 ; R5 := R2["DecoId"]
	45	[7496]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	46	[7496]	MOVE     	R3 R4 ; R3 := R4
	47	[7496]	JMP      	100 ; PC := 100
	48	[7497]	GETTABLE 	R4 R2 K14 ; R4 := R2["ResetRoom"]
	49	[7497]	EQ       	1 R4 K8 ; if R4 == nil then PC := 100
	50	[7497]	JMP      	100 ; PC := 100
	51	[7498]	GETGLOBAL	R4 K15 ; R4 := 0x25d99d89
	52	[7498]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0x911c6241]
	53	[7498]	OP_LOADBOOL	R6 1 0 ; R6 := true
	54	[7498]	GETTABLE 	R7 R2 K17 ; R7 := R2["IsApartment"]
	55	[7498]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	56	[7499]	LOADK    	R5 := 1.000000
	57	[7499]	LEN      	R6 R4 ; R6 := # R4
	58	[7499]	LOADK    	R7 := 1.000000
	59	[7499]	FORPREP  	R5 82 ; R5 -= R7; PC := 82
	60	[7500]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	61	[7501]	GETTABLE 	R10 R9 K18 ; R10 := R9["mName"]
	62	[7501]	SELF     	R10 R10 K19 ; R11 := R10; R10 := R10[0x6d604ba7]
	63	[7501]	CALL     	R10 2 2 ; R10 := R10(R11)
	64	[7501]	GETTABLE 	R11 R2 K14 ; R11 := R2["ResetRoom"]
	65	[7501]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 82
	66	[7501]	JMP      	82 ; PC := 82
	67	[7502]	GETTABLE 	R10 R4 R8 ; R10 := R4[R8]
	68	[7502]	GETTABLE 	R10 R10 K20 ; R10 := R10["mPlacedDecos"]
	69	[7503]	LOADK    	R11 := 1.000000
	70	[7503]	LEN      	R12 R10 ; R12 := # R10
	71	[7503]	LOADK    	R13 := 1.000000
	72	[7503]	FORPREP  	R11 80 ; R11 -= R13; PC := 80
	73	[7504]	GETGLOBAL	R15 K21 ; R15 := 0x33bdd652
	74	[7504]	GETTABLE 	R15 R15 K22 ; R15 := R15[0x23d5322f]
	75	[7504]	MOVE     	R16 R3 ; R16 := R3
	76	[7504]	GETTABLE 	R17 R10 R14 ; R17 := R10[R14]
	77	[7504]	SELF     	R17 R17 K23 ; R18 := R17; R17 := R17[0xf537cfc7]
	78	[7504]	CALL     	R17 2 0 ; R17,... := R17(R18)
	79	[7504]	CALL     	R15 0 1 ; R15(R16,...)
	80	[7503]	FORLOOP  	R11 73 ; R11 += R13; if R11 <= R12 then begin PC := 73; R14 := R11 end
	81	[7507]	JMP      	83 ; PC := 83
	82	[7499]	FORLOOP  	R5 60 ; R5 += R7; if R5 <= R6 then begin PC := 60; R8 := R5 end
	83	[7511]	GETTABLE 	R15 R2 K24 ; R15 := R2["ClaimedDecos"]
	84	[7511]	EQ       	1 R15 K8 ; if R15 == nil then PC := 100
	85	[7511]	JMP      	100 ; PC := 100
	86	[7512]	LOADK    	R15 := 1.000000
	87	[7512]	GETTABLE 	R16 R2 K24 ; R16 := R2["ClaimedDecos"]
	88	[7512]	LEN      	R16 R16 ; R16 := # R16
	89	[7512]	LOADK    	R17 := 1.000000
	90	[7512]	FORPREP  	R15 99 ; R15 -= R17; PC := 99
	91	[7513]	GETGLOBAL	R19 K21 ; R19 := 0x33bdd652
	92	[7513]	GETTABLE 	R19 R19 K22 ; R19 := R19[0x23d5322f]
	93	[7513]	MOVE     	R20 R3 ; R20 := R3
	94	[7513]	GETTABLE 	R21 R2 K24 ; R21 := R2["ClaimedDecos"]
	95	[7513]	GETTABLE 	R21 R21 R18 ; R21 := R21[R18]
	96	[7513]	GETTABLE 	R21 R21 K25 ; R21 := R21["Id"]
	97	[7513]	GETTABLE 	R21 R21 K26 ; R21 := R21["$oid"]
	98	[7513]	CALL     	R19 3 1 ; R19(R20,R21)
	99	[7512]	FORLOOP  	R15 91 ; R15 += R17; if R15 <= R16 then begin PC := 91; R18 := R15 end
	100	[7518]	LOADK    	R19 := 1.000000
	101	[7518]	LEN      	R20 R3 ; R20 := # R3
	102	[7518]	LOADK    	R21 := 1.000000
	103	[7518]	FORPREP  	R19 151 ; R19 -= R21; PC := 151
	104	[7519]	GETTABLE 	R23 R3 R22 ; R23 := R3[R22]
	105	[7520]	GETGLOBAL	R24 K27 ; R24 := 0x7b998233
	106	[7520]	GETGLOBAL	R25 K6 ; R25 := _T
	107	[7520]	GETTABLE 	R25 R25 K7 ; R25 := R25["ShipDecos"]
	108	[7520]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	109	[7520]	CALL     	R24 2 2 ; R24 := R24(R25)
	110	[7520]	TEST     	R24 1 ; if R24 then PC := 121
	111	[7520]	JMP      	121 ; PC := 121
	112	[7521]	GETGLOBAL	R24 K6 ; R24 := _T
	113	[7521]	GETTABLE 	R24 R24 K7 ; R24 := R24["ShipDecos"]
	114	[7521]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	115	[7521]	SELF     	R24 R24 K28 ; R25 := R24; R24 := R24[0xa2880940]
	116	[7521]	CALL     	R24 2 1 ; R24(R25)
	117	[7522]	GETGLOBAL	R24 K6 ; R24 := _T
	118	[7522]	GETTABLE 	R24 R24 K7 ; R24 := R24["ShipDecos"]
	119	[7522]	SETTABLE 	R24 R23 K8 ; R24[R23] := nil
	120	[7522]	JMP      	137 ; PC := 137
	121	[7523]	GETGLOBAL	R24 K27 ; R24 := 0x7b998233
	122	[7523]	GETGLOBAL	R25 K6 ; R25 := _T
	123	[7523]	GETTABLE 	R25 R25 K29 ; R25 := R25["ApartmentPlaceableLevelObjectDecos"]
	124	[7523]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	125	[7523]	CALL     	R24 2 2 ; R24 := R24(R25)
	126	[7523]	TEST     	R24 1 ; if R24 then PC := 137
	127	[7523]	JMP      	137 ; PC := 137
	128	[7524]	GETGLOBAL	R24 K30 ; R24 := 0x89326c93
	129	[7524]	SELF     	R24 R24 K31 ; R25 := R24; R24 := R24[0x59c96e77]
	130	[7524]	GETGLOBAL	R26 K6 ; R26 := _T
	131	[7524]	GETTABLE 	R26 R26 K29 ; R26 := R26["ApartmentPlaceableLevelObjectDecos"]
	132	[7524]	GETTABLE 	R26 R26 R23 ; R26 := R26[R23]
	133	[7524]	CALL     	R24 3 1 ; R24(R25,R26)
	134	[7525]	GETGLOBAL	R24 K6 ; R24 := _T
	135	[7525]	GETTABLE 	R24 R24 K29 ; R24 := R24["ApartmentPlaceableLevelObjectDecos"]
	136	[7525]	SETTABLE 	R24 R23 K8 ; R24[R23] := nil
	137	[7528]	GETGLOBAL	R24 K6 ; R24 := _T
	138	[7528]	GETTABLE 	R24 R24 K32 ; R24 := R24["ShipDecosInVignette"]
	139	[7528]	EQ       	1 R24 K8 ; if R24 == nil then PC := 151
	140	[7528]	JMP      	151 ; PC := 151
	141	[7528]	GETGLOBAL	R24 K27 ; R24 := 0x7b998233
	142	[7528]	GETGLOBAL	R25 K6 ; R25 := _T
	143	[7528]	GETTABLE 	R25 R25 K32 ; R25 := R25["ShipDecosInVignette"]
	144	[7528]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	145	[7528]	CALL     	R24 2 2 ; R24 := R24(R25)
	146	[7528]	TEST     	R24 1 ; if R24 then PC := 151
	147	[7528]	JMP      	151 ; PC := 151
	148	[7529]	GETGLOBAL	R24 K6 ; R24 := _T
	149	[7529]	GETTABLE 	R24 R24 K32 ; R24 := R24["ShipDecosInVignette"]
	150	[7529]	SETTABLE 	R24 R23 K8 ; R24[R23] := nil
	151	[7518]	FORLOOP  	R19 104 ; R19 += R21; if R19 <= R20 then begin PC := 104; R22 := R19 end
	152	[7533]	GETTABLE 	R24 R2 K14 ; R24 := R2["ResetRoom"]
	153	[7533]	EQ       	0 R24 K8 ; if R24 ~= nil then PC := 157
	154	[7533]	JMP      	157 ; PC := 157
	155	[7534]	GETUPVAL 	R24 U1 ; R24 := U1
	156	[7534]	CALL     	R24 1 1 ; R24()
	157	[7537]	RETURN   	R0 1 ; return 
	158	[7540]	GETGLOBAL	R24 K33 ; R24 := 0x76ea806b
	159	[7540]	SELF     	R24 R24 K34 ; R25 := R24; R24 := R24[0x3f3ae64c]
	160	[7540]	LOADK    	R26 := 0.000000
	161	[7540]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	162	[7541]	GETGLOBAL	R25 K27 ; R25 := 0x7b998233
	163	[7541]	MOVE     	R26 R24 ; R26 := R24
	164	[7541]	CALL     	R25 2 2 ; R25 := R25(R26)
	165	[7541]	TEST     	R25 1 ; if R25 then PC := 342
	166	[7541]	JMP      	342 ; PC := 342
	167	[7542]	NEWTABLE 	R25 0 0 ; R25 := {}
	168	[7543]	NEWTABLE 	R26 0 0 ; R26 := {}
	169	[7544]	NEWTABLE 	R27 0 0 ; R27 := {}
	170	[7545]	NEWTABLE 	R28 0 0 ; R28 := {}
	171	[7547]	SELF     	R29 R24 K35 ; R30 := R24; R29 := R24[0x80563238]
	172	[7547]	CALL     	R29 2 2 ; R29 := R29(R30)
	173	[7548]	SELF     	R30 R29 K16 ; R31 := R29; R30 := R29[0x911c6241]
	174	[7548]	GETGLOBAL	R32 K30 ; R32 := 0x89326c93
	175	[7548]	SELF     	R32 R32 K36 ; R33 := R32; R32 := R32[0x18d05d30]
	176	[7548]	CALL     	R32 2 2 ; R32 := R32(R33)
	177	[7548]	GETTABLE 	R33 R1 K4 ; R33 := R1["DecoArea"]
	178	[7548]	GETUPVAL 	R34 U0 ; R34 := U0
	179	[7548]	GETTABLE 	R34 R34 K5 ; R34 := R34["DECO_AREA_APARTMENT"]
	180	[7548]	EQ       	1 R33 R34 ; if R33 == R34 then PC := 183
	181	[7548]	JMP      	183 ; PC := 183
	182	[7548]	OP_LOADBOOL	R33 0 1 ; R33 := false; PC := 183
	183	[7548]	OP_LOADBOOL	R33 1 0 ; R33 := true
	184	[7548]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	185	[7550]	NEWTABLE 	R31 0 0 ; R31 := {}
	186	[7552]	GETTABLE 	R32 R1 K37 ; R32 := R1["LoaderProgress"]
	187	[7552]	GETTABLE 	R32 R32 K38 ; R32 := R32["RoomLoaderIndex"]
	188	[7552]	LEN      	R33 R30 ; R33 := # R30
	189	[7552]	LE       	0 R32 R33 ; if R32 > R33 then PC := 195
	190	[7552]	JMP      	195 ; PC := 195
	191	[7553]	GETTABLE 	R32 R1 K37 ; R32 := R1["LoaderProgress"]
	192	[7553]	GETTABLE 	R32 R32 K38 ; R32 := R32["RoomLoaderIndex"]
	193	[7553]	GETTABLE 	R32 R30 R32 ; R32 := R30[R32]
	194	[7553]	GETTABLE 	R31 R32 K20 ; R31 := R32["mPlacedDecos"]
	195	[7556]	LEN      	R32 R31 ; R32 := # R31
	196	[7559]	MOVE     	R33 R32 ; R33 := R32
	197	[7560]	LOADK    	R34 := 0.000000
	198	[7562]	GETTABLE 	R35 R1 K37 ; R35 := R1["LoaderProgress"]
	199	[7562]	GETTABLE 	R35 R35 K39 ; R35 := R35["DecoLoaderIndex"]
	200	[7562]	MOVE     	R36 R32 ; R36 := R32
	201	[7562]	LOADK    	R37 := 1.000000
	202	[7562]	FORPREP  	R35 291 ; R35 -= R37; PC := 291
	203	[7563]	GETTABLE 	R39 R1 K37 ; R39 := R1["LoaderProgress"]
	204	[7563]	ADD      	R40 R38 K40 ; R40 := R38 + 1.000000
	205	[7563]	SETTABLE 	R39 K39 R40 ; R39["DecoLoaderIndex"] := R40
	206	[7565]	GETTABLE 	R39 R31 R38 ; R39 := R31[R38]
	207	[7566]	GETGLOBAL	R40 K27 ; R40 := 0x7b998233
	208	[7566]	GETTABLE 	R41 R39 K41 ; R41 := R39["decoType"]
	209	[7566]	CALL     	R40 2 2 ; R40 := R40(R41)
	210	[7566]	TEST     	R40 1 ; if R40 then PC := 291
	211	[7566]	JMP      	291 ; PC := 291
	212	[7567]	GETTABLE 	R40 R39 K41 ; R40 := R39["decoType"]
	213	[7567]	SELF     	R40 R40 K42 ; R41 := R40; R40 := R40[0xed4e0128]
	214	[7567]	CALL     	R40 2 2 ; R40 := R40(R41)
	215	[7569]	GETTABLE 	R41 R1 K37 ; R41 := R1["LoaderProgress"]
	216	[7569]	GETTABLE 	R41 R41 K43 ; R41 := R41["DecosLoaded"]
	217	[7569]	GETTABLE 	R41 R41 R40 ; R41 := R41[R40]
	218	[7569]	EQ       	0 R41 K8 ; if R41 ~= nil then PC := 291
	219	[7569]	JMP      	291 ; PC := 291
	220	[7570]	GETTABLE 	R41 R1 K37 ; R41 := R1["LoaderProgress"]
	221	[7570]	GETTABLE 	R41 R41 K43 ; R41 := R41["DecosLoaded"]
	222	[7570]	SETTABLE 	R41 R40 K44 ; R41[R40] := true
	223	[7573]	GETGLOBAL	R41 K27 ; R41 := 0x7b998233
	224	[7573]	GETTABLE 	R42 R39 K45 ; R42 := R39["pictureFrameInfo"]
	225	[7573]	GETTABLE 	R42 R42 K46 ; R42 := R42["mImage"]
	226	[7573]	CALL     	R41 2 2 ; R41 := R41(R42)
	227	[7573]	TEST     	R41 1 ; if R41 then PC := 242
	228	[7573]	JMP      	242 ; PC := 242
	229	[7574]	GETTABLE 	R41 R39 K45 ; R41 := R39["pictureFrameInfo"]
	230	[7574]	GETTABLE 	R41 R41 K46 ; R41 := R41["mImage"]
	231	[7574]	SELF     	R41 R41 K42 ; R42 := R41; R41 := R41[0xed4e0128]
	232	[7574]	CALL     	R41 2 2 ; R41 := R41(R42)
	233	[7575]	GETTABLE 	R42 R26 R41 ; R42 := R26[R41]
	234	[7575]	EQ       	0 R42 K8 ; if R42 ~= nil then PC := 242
	235	[7575]	JMP      	242 ; PC := 242
	236	[7576]	SETTABLE 	R26 R41 K44 ; R26[R41] := true
	237	[7577]	GETGLOBAL	R42 K21 ; R42 := 0x33bdd652
	238	[7577]	GETTABLE 	R42 R42 K22 ; R42 := R42[0x23d5322f]
	239	[7577]	MOVE     	R43 R25 ; R43 := R25
	240	[7577]	MOVE     	R44 R41 ; R44 := R41
	241	[7577]	CALL     	R42 3 1 ; R42(R43,R44)
	242	[7581]	GETGLOBAL	R42 K27 ; R42 := 0x7b998233
	243	[7581]	GETTABLE 	R43 R39 K45 ; R43 := R39["pictureFrameInfo"]
	244	[7581]	GETTABLE 	R43 R43 K47 ; R43 := R43["mFilter"]
	245	[7581]	CALL     	R42 2 2 ; R42 := R42(R43)
	246	[7581]	TEST     	R42 1 ; if R42 then PC := 261
	247	[7581]	JMP      	261 ; PC := 261
	248	[7582]	GETTABLE 	R42 R39 K45 ; R42 := R39["pictureFrameInfo"]
	249	[7582]	GETTABLE 	R42 R42 K47 ; R42 := R42["mFilter"]
	250	[7582]	SELF     	R42 R42 K42 ; R43 := R42; R42 := R42[0xed4e0128]
	251	[7582]	CALL     	R42 2 2 ; R42 := R42(R43)
	252	[7583]	GETTABLE 	R43 R27 R42 ; R43 := R27[R42]
	253	[7583]	EQ       	0 R43 K8 ; if R43 ~= nil then PC := 261
	254	[7583]	JMP      	261 ; PC := 261
	255	[7584]	SETTABLE 	R27 R42 K44 ; R27[R42] := true
	256	[7585]	GETGLOBAL	R43 K21 ; R43 := 0x33bdd652
	257	[7585]	GETTABLE 	R43 R43 K22 ; R43 := R43[0x23d5322f]
	258	[7585]	MOVE     	R44 R25 ; R44 := R25
	259	[7585]	MOVE     	R45 R42 ; R45 := R42
	260	[7585]	CALL     	R43 3 1 ; R43(R44,R45)
	261	[7589]	GETGLOBAL	R43 K27 ; R43 := 0x7b998233
	262	[7589]	GETTABLE 	R44 R39 K48 ; R44 := R39["customizationInfo"]
	263	[7589]	GETTABLE 	R44 R44 K49 ; R44 := R44["mAnim"]
	264	[7589]	CALL     	R43 2 2 ; R43 := R43(R44)
	265	[7589]	TEST     	R43 1 ; if R43 then PC := 280
	266	[7589]	JMP      	280 ; PC := 280
	267	[7590]	GETTABLE 	R43 R39 K48 ; R43 := R39["customizationInfo"]
	268	[7590]	GETTABLE 	R43 R43 K49 ; R43 := R43["mAnim"]
	269	[7590]	SELF     	R43 R43 K42 ; R44 := R43; R43 := R43[0xed4e0128]
	270	[7590]	CALL     	R43 2 2 ; R43 := R43(R44)
	271	[7591]	GETTABLE 	R44 R28 R43 ; R44 := R28[R43]
	272	[7591]	EQ       	0 R44 K8 ; if R44 ~= nil then PC := 280
	273	[7591]	JMP      	280 ; PC := 280
	274	[7592]	SETTABLE 	R28 R43 K44 ; R28[R43] := true
	275	[7593]	GETGLOBAL	R44 K21 ; R44 := 0x33bdd652
	276	[7593]	GETTABLE 	R44 R44 K22 ; R44 := R44[0x23d5322f]
	277	[7593]	MOVE     	R45 R25 ; R45 := R25
	278	[7593]	MOVE     	R46 R43 ; R46 := R43
	279	[7593]	CALL     	R44 3 1 ; R44(R45,R46)
	280	[7597]	GETGLOBAL	R44 K21 ; R44 := 0x33bdd652
	281	[7597]	GETTABLE 	R44 R44 K22 ; R44 := R44[0x23d5322f]
	282	[7597]	MOVE     	R45 R25 ; R45 := R25
	283	[7597]	MOVE     	R46 R40 ; R46 := R40
	284	[7597]	CALL     	R44 3 1 ; R44(R45,R46)
	285	[7599]	ADD      	R34 R34 K40 ; R34 := R34 + 1.000000
	286	[7600]	EQ       	1 R34 R33 ; if R34 == R33 then PC := 292
	287	[7600]	JMP      	292 ; PC := 292
	288	[7600]	EQ       	0 R38 R32 ; if R38 ~= R32 then PC := 291
	289	[7600]	JMP      	291 ; PC := 291
	290	[7601]	JMP      	292 ; PC := 292
	291	[7562]	FORLOOP  	R35 203 ; R35 += R37; if R35 <= R36 then begin PC := 203; R38 := R35 end
	292	[7607]	GETTABLE 	R44 R1 K37 ; R44 := R1["LoaderProgress"]
	293	[7607]	GETTABLE 	R44 R44 K39 ; R44 := R44["DecoLoaderIndex"]
	294	[7607]	LT       	0 R32 R44 ; if R32 >= R44 then PC := 311
	295	[7607]	JMP      	311 ; PC := 311
	296	[7608]	GETTABLE 	R44 R1 K37 ; R44 := R1["LoaderProgress"]
	297	[7608]	SETTABLE 	R44 K39 K40 ; R44["DecoLoaderIndex"] := 1.000000
	298	[7610]	GETTABLE 	R44 R1 K37 ; R44 := R1["LoaderProgress"]
	299	[7610]	GETTABLE 	R44 R44 K38 ; R44 := R44["RoomLoaderIndex"]
	300	[7610]	LEN      	R45 R30 ; R45 := # R30
	301	[7610]	EQ       	0 R44 R45 ; if R44 ~= R45 then PC := 306
	302	[7610]	JMP      	306 ; PC := 306
	303	[7611]	GETTABLE 	R44 R1 K37 ; R44 := R1["LoaderProgress"]
	304	[7611]	SETTABLE 	R44 K50 K44 ; R44["LastLoad"] := true
	305	[7611]	JMP      	311 ; PC := 311
	306	[7613]	GETTABLE 	R44 R1 K37 ; R44 := R1["LoaderProgress"]
	307	[7613]	GETTABLE 	R45 R1 K37 ; R45 := R1["LoaderProgress"]
	308	[7613]	GETTABLE 	R45 R45 K38 ; R45 := R45["RoomLoaderIndex"]
	309	[7613]	ADD      	R45 R45 K40 ; R45 := R45 + 1.000000
	310	[7613]	SETTABLE 	R44 K38 R45 ; R44["RoomLoaderIndex"] := R45
	311	[7617]	LEN      	R44 R25 ; R44 := # R25
	312	[7617]	LT       	0 K51 R44 ; if 0.000000 >= R44 then PC := 321
	313	[7617]	JMP      	321 ; PC := 321
	314	[7618]	GETGLOBAL	R44 K53 ; R44 := 0xbd496aa1
	315	[7618]	GETTABLE 	R44 R44 K54 ; R44 := R44[0x42645da3]
	316	[7618]	MOVE     	R45 R25 ; R45 := R25
	317	[7618]	CALL     	R44 2 2 ; R44 := R44(R45)
	318	[7618]	SETTABLE 	R1 K52 R44 ; R1["Loader"] := R44
	319	[7619]	SETTABLE 	R1 K55 K44 ; R1["IsLoading"] := true
	320	[7619]	JMP      	340 ; PC := 340
	321	[7620]	LT       	0 K51 R32 ; if 0.000000 >= R32 then PC := 327
	322	[7620]	JMP      	327 ; PC := 327
	323	[7621]	GETUPVAL 	R44 U2 ; R44 := U2
	324	[7621]	MOVE     	R45 R1 ; R45 := R1
	325	[7621]	CALL     	R44 2 1 ; R44(R45)
	326	[7621]	JMP      	340 ; PC := 340
	327	[7622]	GETTABLE 	R44 R1 K37 ; R44 := R1["LoaderProgress"]
	328	[7622]	GETTABLE 	R44 R44 K38 ; R44 := R44["RoomLoaderIndex"]
	329	[7622]	LEN      	R45 R30 ; R45 := # R30
	330	[7622]	LE       	0 R44 R45 ; if R44 > R45 then PC := 340
	331	[7622]	JMP      	340 ; PC := 340
	332	[7622]	GETTABLE 	R44 R1 K37 ; R44 := R1["LoaderProgress"]
	333	[7622]	GETTABLE 	R44 R44 K50 ; R44 := R44["LastLoad"]
	334	[7622]	TEST     	R44 1 ; if R44 then PC := 340
	335	[7622]	JMP      	340 ; PC := 340
	336	[7624]	GETUPVAL 	R44 U3 ; R44 := U3
	337	[7624]	LOADNIL  	R45 R45 ; R45 := nil
	338	[7624]	MOVE     	R46 R1 ; R46 := R1
	339	[7624]	CALL     	R44 3 1 ; R44(R45,R46)
	340	[7627]	GETUPVAL 	R44 U1 ; R44 := U1
	341	[7627]	CALL     	R44 1 1 ; R44()
	342	[7629]	RETURN   	R0 1 ; return 

function #231 <?:7631,7650> (45 instructions, 180 bytes at 000001608738BFE0)
1 param, 4 slots, 4 upvalues, 0 locals, 9 constants, 0 functions
	1	[7633]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7633]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x23ddc82a]
	3	[7633]	CALL     	R1 1 2 ; R1 := R1()
	4	[7633]	TEST     	R1 0 ; if not R1 then PC := 26
	5	[7633]	JMP      	26 ; PC := 26
	6	[7634]	GETUPVAL 	R1 U1 ; R1 := U1
	7	[7634]	GETTABLE 	R1 R1 K1 ; R1 := R1["LoaderProgress"]
	8	[7634]	SETTABLE 	R1 K2 K3 ; R1["RoomLoaderIndex"] := 1.000000
	9	[7635]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[7635]	GETTABLE 	R1 R1 K1 ; R1 := R1["LoaderProgress"]
	11	[7635]	SETTABLE 	R1 K4 K3 ; R1["DecoLoaderIndex"] := 1.000000
	12	[7636]	GETUPVAL 	R1 U1 ; R1 := U1
	13	[7636]	GETTABLE 	R1 R1 K1 ; R1 := R1["LoaderProgress"]
	14	[7636]	SETTABLE 	R1 K5 K3 ; R1["RoomCreationIndex"] := 1.000000
	15	[7637]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[7637]	GETTABLE 	R1 R1 K1 ; R1 := R1["LoaderProgress"]
	17	[7637]	SETTABLE 	R1 K6 K3 ; R1["DecoCreationIndex"] := 1.000000
	18	[7638]	GETUPVAL 	R1 U1 ; R1 := U1
	19	[7638]	GETTABLE 	R1 R1 K1 ; R1 := R1["LoaderProgress"]
	20	[7638]	SETTABLE 	R1 K7 K8 ; R1["LastLoad"] := false
	21	[7640]	GETUPVAL 	R1 U2 ; R1 := U2
	22	[7640]	MOVE     	R2 R0 ; R2 := R0
	23	[7640]	GETUPVAL 	R3 U1 ; R3 := U1
	24	[7640]	CALL     	R1 3 1 ; R1(R2,R3)
	25	[7640]	JMP      	45 ; PC := 45
	26	[7642]	GETUPVAL 	R1 U3 ; R1 := U3
	27	[7642]	GETTABLE 	R1 R1 K1 ; R1 := R1["LoaderProgress"]
	28	[7642]	SETTABLE 	R1 K2 K3 ; R1["RoomLoaderIndex"] := 1.000000
	29	[7643]	GETUPVAL 	R1 U3 ; R1 := U3
	30	[7643]	GETTABLE 	R1 R1 K1 ; R1 := R1["LoaderProgress"]
	31	[7643]	SETTABLE 	R1 K4 K3 ; R1["DecoLoaderIndex"] := 1.000000
	32	[7644]	GETUPVAL 	R1 U3 ; R1 := U3
	33	[7644]	GETTABLE 	R1 R1 K1 ; R1 := R1["LoaderProgress"]
	34	[7644]	SETTABLE 	R1 K5 K3 ; R1["RoomCreationIndex"] := 1.000000
	35	[7645]	GETUPVAL 	R1 U3 ; R1 := U3
	36	[7645]	GETTABLE 	R1 R1 K1 ; R1 := R1["LoaderProgress"]
	37	[7645]	SETTABLE 	R1 K6 K3 ; R1["DecoCreationIndex"] := 1.000000
	38	[7646]	GETUPVAL 	R1 U3 ; R1 := U3
	39	[7646]	GETTABLE 	R1 R1 K1 ; R1 := R1["LoaderProgress"]
	40	[7646]	SETTABLE 	R1 K7 K8 ; R1["LastLoad"] := false
	41	[7648]	GETUPVAL 	R1 U2 ; R1 := U2
	42	[7648]	MOVE     	R2 R0 ; R2 := R0
	43	[7648]	GETUPVAL 	R3 U3 ; R3 := U3
	44	[7648]	CALL     	R1 3 1 ; R1(R2,R3)
	45	[7650]	RETURN   	R0 1 ; return 

function #232 <?:7652,7700> (125 instructions, 500 bytes at 000001608738C2B0)
0 params, 22 slots, 2 upvalues, 0 locals, 33 constants, 0 functions
	1	[7653]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[7653]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xf2deaf69]
	3	[7653]	GETGLOBAL	R2 K2 ; R2 := gLotusAttractModeGameRulesType
	4	[7653]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[7653]	TEST     	R0 1 ; if R0 then PC := 14
	6	[7653]	JMP      	14 ; PC := 14
	7	[7653]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	8	[7653]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xf2deaf69]
	9	[7653]	GETGLOBAL	R2 K3 ; R2 := gLotusPhotoBoothGameRulesType
	10	[7653]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	11	[7653]	TEST     	R0 1 ; if R0 then PC := 14
	12	[7653]	JMP      	14 ; PC := 14
	13	[7654]	RETURN   	R0 1 ; return 
	14	[7657]	GETGLOBAL	R0 K4 ; R0 := 0x76ea806b
	15	[7657]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x3f3ae64c]
	16	[7657]	LOADK    	R2 := 0.000000
	17	[7657]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	18	[7658]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	19	[7658]	MOVE     	R2 R0 ; R2 := R0
	20	[7658]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[7658]	TEST     	R1 1 ; if R1 then PC := 125
	22	[7658]	JMP      	125 ; PC := 125
	23	[7659]	NEWTABLE 	R1 0 0 ; R1 := {}
	24	[7660]	SELF     	R2 R0 K7 ; R3 := R0; R2 := R0[0x80563238]
	25	[7660]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[7661]	SELF     	R3 R2 K8 ; R4 := R2; R3 := R2[0xcd57f819]
	27	[7661]	GETGLOBAL	R5 K9 ; R5 := 0x89326c93
	28	[7661]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0x18d05d30]
	29	[7661]	CALL     	R5 2 0 ; R5,... := R5(R6)
	30	[7661]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	31	[7662]	GETTABLE 	R4 R3 K11 ; R4 := R3["mVignette"]
	32	[7663]	GETTABLE 	R5 R3 K12 ; R5 := R3["mWallpaper"]
	33	[7664]	GETTABLE 	R6 R3 K13 ; R6 := R3["mVignetteFish"]
	34	[7665]	OP_LOADBOOL	R7 0 0 ; R7 := false
	35	[7666]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	36	[7666]	MOVE     	R9 R4 ; R9 := R4
	37	[7666]	CALL     	R8 2 2 ; R8 := R8(R9)
	38	[7666]	TEST     	R8 1 ; if R8 then PC := 53
	39	[7666]	JMP      	53 ; PC := 53
	40	[7667]	GETGLOBAL	R8 K14 ; R8 := 0x33bdd652
	41	[7667]	GETTABLE 	R8 R8 K15 ; R8 := R8[0x23d5322f]
	42	[7667]	MOVE     	R9 R1 ; R9 := R1
	43	[7667]	SELF     	R10 R4 K16 ; R11 := R4; R10 := R4[0xed4e0128]
	44	[7667]	CALL     	R10 2 0 ; R10,... := R10(R11)
	45	[7667]	CALL     	R8 0 1 ; R8(R9,...)
	46	[7669]	GETGLOBAL	R8 K17 ; R8 := 0x7ed0a956
	47	[7669]	LOADK    	R9 K18 ; R9 := "/Lotus/Types/Game/ActionFigureDioramas/OceanADiorama"
	48	[7669]	CALL     	R8 2 2 ; R8 := R8(R9)
	49	[7670]	EQ       	1 R4 R8 ; if R4 == R8 then PC := 52
	50	[7670]	JMP      	52 ; PC := 52
	51	[7670]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 52
	52	[7670]	OP_LOADBOOL	R7 1 0 ; R7 := true
	53	[7673]	GETGLOBAL	R9 K6 ; R9 := 0x7b998233
	54	[7673]	MOVE     	R10 R6 ; R10 := R6
	55	[7673]	CALL     	R9 2 2 ; R9 := R9(R10)
	56	[7673]	TEST     	R9 1 ; if R9 then PC := 91
	57	[7673]	JMP      	91 ; PC := 91
	58	[7675]	GETGLOBAL	R9 K0 ; R9 := 0xbe190284
	59	[7675]	SELF     	R9 R9 K19 ; R10 := R9; R9 := R9[0xa1c390fe]
	60	[7675]	CALL     	R9 2 2 ; R9 := R9(R10)
	61	[7676]	GETGLOBAL	R10 K20 ; R10 := 0xcfc01047
	62	[7676]	MOVE     	R11 R6 ; R11 := R6
	63	[7676]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	64	[7676]	JMP      	89 ; PC := 89
	65	[7677]	SELF     	R15 R9 K21 ; R16 := R9; R15 := R9[0x105074fb]
	66	[7677]	MOVE     	R17 R14 ; R17 := R14
	67	[7677]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	68	[7678]	GETGLOBAL	R16 K6 ; R16 := 0x7b998233
	69	[7678]	MOVE     	R17 R15 ; R17 := R15
	70	[7678]	CALL     	R16 2 2 ; R16 := R16(R17)
	71	[7678]	TEST     	R16 1 ; if R16 then PC := 89
	72	[7678]	JMP      	89 ; PC := 89
	73	[7679]	GETUPVAL 	R16 U0 ; R16 := U0
	74	[7679]	GETTABLE 	R16 R16 K22 ; R16 := R16[0x7791a519]
	75	[7679]	MOVE     	R17 R15 ; R17 := R15
	76	[7679]	GETGLOBAL	R18 K23 ; R18 := 0xce64b481
	77	[7679]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	78	[7680]	GETGLOBAL	R17 K6 ; R17 := 0x7b998233
	79	[7680]	MOVE     	R18 R16 ; R18 := R16
	80	[7680]	CALL     	R17 2 2 ; R17 := R17(R18)
	81	[7680]	TEST     	R17 1 ; if R17 then PC := 89
	82	[7680]	JMP      	89 ; PC := 89
	83	[7681]	GETGLOBAL	R17 K14 ; R17 := 0x33bdd652
	84	[7681]	GETTABLE 	R17 R17 K15 ; R17 := R17[0x23d5322f]
	85	[7681]	MOVE     	R18 R1 ; R18 := R1
	86	[7681]	SELF     	R19 R16 K16 ; R20 := R16; R19 := R16[0xed4e0128]
	87	[7681]	CALL     	R19 2 0 ; R19,... := R19(R20)
	88	[7681]	CALL     	R17 0 1 ; R17(R18,...)
	89	[7676]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 65; R12 := R13 end
	90	[7683]	JMP      	65 ; PC := 65
	91	[7687]	GETGLOBAL	R17 K6 ; R17 := 0x7b998233
	92	[7687]	MOVE     	R18 R5 ; R18 := R5
	93	[7687]	CALL     	R17 2 2 ; R17 := R17(R18)
	94	[7687]	TEST     	R17 1 ; if R17 then PC := 112
	95	[7687]	JMP      	112 ; PC := 112
	96	[7688]	GETGLOBAL	R17 K24 ; R17 := 0xb009bbc6
	97	[7688]	MOVE     	R18 R5 ; R18 := R5
	98	[7688]	CALL     	R17 2 2 ; R17 := R17(R18)
	99	[7688]	SELF     	R17 R17 K25 ; R18 := R17; R17 := R17[0xf7abfecf]
	100	[7688]	CALL     	R17 2 2 ; R17 := R17(R18)
	101	[7689]	GETGLOBAL	R18 K6 ; R18 := 0x7b998233
	102	[7689]	MOVE     	R19 R17 ; R19 := R17
	103	[7689]	CALL     	R18 2 2 ; R18 := R18(R19)
	104	[7689]	TEST     	R18 1 ; if R18 then PC := 112
	105	[7689]	JMP      	112 ; PC := 112
	106	[7690]	GETGLOBAL	R18 K14 ; R18 := 0x33bdd652
	107	[7690]	GETTABLE 	R18 R18 K15 ; R18 := R18[0x23d5322f]
	108	[7690]	MOVE     	R19 R1 ; R19 := R1
	109	[7690]	SELF     	R20 R17 K16 ; R21 := R17; R20 := R17[0xed4e0128]
	110	[7690]	CALL     	R20 2 0 ; R20,... := R20(R21)
	111	[7690]	CALL     	R18 0 1 ; R18(R19,...)
	112	[7694]	LEN      	R18 R1 ; R18 := # R1
	113	[7694]	LT       	0 K26 R18 ; if 0.000000 >= R18 then PC := 125
	114	[7694]	JMP      	125 ; PC := 125
	115	[7695]	GETUPVAL 	R18 U1 ; R18 := U1
	116	[7695]	GETGLOBAL	R19 K28 ; R19 := 0xbd496aa1
	117	[7695]	GETTABLE 	R19 R19 K29 ; R19 := R19[0x42645da3]
	118	[7695]	MOVE     	R20 R1 ; R20 := R1
	119	[7695]	CALL     	R19 2 2 ; R19 := R19(R20)
	120	[7695]	SETTABLE 	R18 K27 R19 ; R18[0x3f3ae64c] := R19
	121	[7696]	GETUPVAL 	R18 U1 ; R18 := U1
	122	[7696]	SETTABLE 	R18 K30 K31 ; R18["IsLoading"] := true
	123	[7697]	GETUPVAL 	R18 U1 ; R18 := U1
	124	[7697]	SETTABLE 	R18 K32 R7 ; R18["IsFishTank"] := R7
	125	[7700]	RETURN   	R0 1 ; return 

function #233 <?:7703,7712> (40 instructions, 160 bytes at 000001608738C980)
0 params, 7 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[7704]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	2	[7704]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x46a0ebf5]
	3	[7704]	GETGLOBAL	R2 K2 ; R2 := 0x0469f296
	4	[7704]	LOADK    	R3 K3 ; R3 := "LotusHelmetAction"
	5	[7704]	CALL     	R2 2 0 ; R2,... := R2(R3)
	6	[7704]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[7705]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[7705]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x8e7c3b5e]
	9	[7705]	GETGLOBAL	R2 K5 ; R2 := 0x25d99d89
	10	[7705]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[7706]	GETGLOBAL	R2 K6 ; R2 := 0x7b998233
	12	[7706]	MOVE     	R3 R0 ; R3 := R0
	13	[7706]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[7706]	TEST     	R2 1 ; if R2 then PC := 40
	15	[7706]	JMP      	40 ; PC := 40
	16	[7706]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[7706]	GETTABLE 	R2 R2 K7 ; R2 := R2[0xc14d48af]
	18	[7706]	CALL     	R2 1 2 ; R2 := R2()
	19	[7706]	TEST     	R2 0 ; if not R2 then PC := 40
	20	[7706]	JMP      	40 ; PC := 40
	21	[7707]	GETGLOBAL	R2 K6 ; R2 := 0x7b998233
	22	[7707]	MOVE     	R3 R1 ; R3 := R1
	23	[7707]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[7707]	TEST     	R2 1 ; if R2 then PC := 32
	25	[7707]	JMP      	32 ; PC := 32
	26	[7707]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[7707]	GETTABLE 	R2 R2 K8 ; R2 := R2[0x536ca856]
	28	[7707]	MOVE     	R3 R1 ; R3 := R1
	29	[7707]	CALL     	R2 2 2 ; R2 := R2(R3)
	30	[7707]	TEST     	R2 1 ; if R2 then PC := 40
	31	[7707]	JMP      	40 ; PC := 40
	32	[7708]	SELF     	R2 R0 K9 ; R3 := R0; R2 := R0[0x383d2e7d]
	33	[7708]	CALL     	R2 2 1 ; R2(R3)
	34	[7709]	SELF     	R2 R0 K10 ; R3 := R0; R2 := R0[0x3961202b]
	35	[7709]	GETGLOBAL	R4 K11 ; R4 := 0x603636ad
	36	[7709]	LOADK    	R5 K12 ; R5 := "/Lotus/Language/Actions/LotusCustomization"
	37	[7709]	NEWTABLE 	R6 0 0 ; R6 := {}
	38	[7709]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	39	[7709]	CALL     	R2 0 1 ; R2(R3,...)
	40	[7712]	RETURN   	R0 1 ; return 

function #234 <?:7714,7716> (3 instructions, 12 bytes at 000001608738CCB0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7715]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7715]	CALL     	R0 1 1 ; R0()
	3	[7716]	RETURN   	R0 1 ; return 

function #235 <?:7718,7737> (57 instructions, 228 bytes at 000001608738CD80)
0 params, 10 slots, 6 upvalues, 0 locals, 14 constants, 0 functions
	1	[7719]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7719]	LOADNIL  	R1 R1 ; R1 := nil
	3	[7719]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[7719]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[7720]	GETUPVAL 	R0 U2 ; R0 := U2
	6	[7720]	CALL     	R0 1 1 ; R0()
	7	[7722]	GETUPVAL 	R0 U3 ; R0 := U3
	8	[7722]	CALL     	R0 1 1 ; R0()
	9	[7723]	GETUPVAL 	R0 U4 ; R0 := U4
	10	[7723]	CALL     	R0 1 1 ; R0()
	11	[7725]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	12	[7725]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x18d05d30]
	13	[7725]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[7725]	TEST     	R0 0 ; if not R0 then PC := 19
	15	[7725]	JMP      	19 ; PC := 19
	16	[7726]	GETUPVAL 	R0 U5 ; R0 := U5
	17	[7726]	CALL     	R0 1 1 ; R0()
	18	[7726]	JMP      	57 ; PC := 57
	19	[7728]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	20	[7728]	GETGLOBAL	R1 K3 ; R1 := 0xbe190284
	21	[7728]	CALL     	R0 2 2 ; R0 := R0(R1)
	22	[7728]	TEST     	R0 1 ; if R0 then PC := 36
	23	[7728]	JMP      	36 ; PC := 36
	24	[7728]	GETGLOBAL	R0 K3 ; R0 := 0xbe190284
	25	[7728]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xf2deaf69]
	26	[7728]	GETGLOBAL	R2 K5 ; R2 := gLotusAttractModeGameRulesType
	27	[7728]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	28	[7728]	TEST     	R0 1 ; if R0 then PC := 37
	29	[7728]	JMP      	37 ; PC := 37
	30	[7728]	GETGLOBAL	R0 K3 ; R0 := 0xbe190284
	31	[7728]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xf2deaf69]
	32	[7728]	GETGLOBAL	R2 K6 ; R2 := gLotusPhotoBoothGameRulesType
	33	[7728]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	34	[7728]	TEST     	R0 1 ; if R0 then PC := 37
	35	[7728]	JMP      	37 ; PC := 37
	36	[7729]	RETURN   	R0 1 ; return 
	37	[7731]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	38	[7731]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xfb669000]
	39	[7731]	GETGLOBAL	R2 K8 ; R2 := 0xf5d69a4f
	40	[7731]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	41	[7732]	GETGLOBAL	R1 K9 ; R1 := 0xc8802016
	42	[7732]	MOVE     	R2 R0 ; R2 := R0
	43	[7732]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	44	[7732]	JMP      	55 ; PC := 55
	45	[7733]	SELF     	R6 R5 K10 ; R7 := R5; R6 := R5[0x9d668f53]
	46	[7733]	GETGLOBAL	R8 K11 ; R8 := 0x0469f296
	47	[7733]	CALL     	R8 1 2 ; R8 := R8()
	48	[7733]	LOADK    	R9 := 100.000000
	49	[7733]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	50	[7734]	SELF     	R6 R5 K12 ; R7 := R5; R6 := R5[0xb2532845]
	51	[7734]	GETGLOBAL	R8 K11 ; R8 := 0x0469f296
	52	[7734]	LOADK    	R9 K13 ; R9 := "Statue"
	53	[7734]	CALL     	R8 2 0 ; R8,... := R8(R9)
	54	[7734]	CALL     	R6 0 1 ; R6(R7,...)
	55	[7732]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 45; R3 := R4 end
	56	[7734]	JMP      	45 ; PC := 45
	57	[7737]	RETURN   	R0 1 ; return 

function #236 <?:7739,7818> (208 instructions, 832 bytes at 000001608738D100)
1 param, 42 slots, 5 upvalues, 0 locals, 50 constants, 0 functions
	1	[7740]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7740]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x23ddc82a]
	3	[7740]	CALL     	R1 1 2 ; R1 := R1()
	4	[7740]	TEST     	R1 0 ; if not R1 then PC := 208
	5	[7740]	JMP      	208 ; PC := 208
	6	[7741]	EQ       	0 R0 K1 ; if R0 ~= "true" then PC := 109
	7	[7741]	JMP      	109 ; PC := 109
	8	[7744]	GETGLOBAL	R1 K2 ; R1 := _T
	9	[7744]	NEWTABLE 	R2 0 0 ; R2 := {}
	10	[7744]	SETTABLE 	R1 K3 R2 ; R1["ApartmentPlaceableLevelObjectDecos"] := R2
	11	[7745]	GETGLOBAL	R1 K4 ; R1 := 0x89326c93
	12	[7745]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xfb669000]
	13	[7745]	GETGLOBAL	R3 K6 ; R3 := gDojoPlaceableDecorationType
	14	[7745]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	15	[7747]	NEWTABLE 	R2 0 0 ; R2 := {}
	16	[7748]	LOADK    	R3 := 1.000000
	17	[7748]	LEN      	R4 R1 ; R4 := # R1
	18	[7748]	LOADK    	R5 := 1.000000
	19	[7748]	FORPREP  	R3 37 ; R3 -= R5; PC := 37
	20	[7749]	GETTABLE 	R7 R1 R6 ; R7 := R1[R6]
	21	[7750]	SELF     	R8 R7 K7 ; R9 := R7; R8 := R7[0x154947fa]
	22	[7750]	CALL     	R8 2 2 ; R8 := R8(R9)
	23	[7750]	TEST     	R8 0 ; if not R8 then PC := 37
	24	[7750]	JMP      	37 ; PC := 37
	25	[7751]	SELF     	R8 R7 K8 ; R9 := R7; R8 := R7[0xf537cfc7]
	26	[7751]	CALL     	R8 2 2 ; R8 := R8(R9)
	27	[7752]	GETGLOBAL	R9 K2 ; R9 := _T
	28	[7752]	GETTABLE 	R9 R9 K3 ; R9 := R9["ApartmentPlaceableLevelObjectDecos"]
	29	[7752]	SETTABLE 	R9 R8 R7 ; R9[R8] := R7
	30	[7754]	GETTABLE 	R9 R2 R8 ; R9 := R2[R8]
	31	[7754]	EQ       	0 R9 K9 ; if R9 ~= nil then PC := 34
	32	[7754]	JMP      	34 ; PC := 34
	33	[7755]	SETTABLE 	R2 R8 K10 ; R2[R8] := 0.000000
	34	[7758]	GETTABLE 	R9 R2 R8 ; R9 := R2[R8]
	35	[7758]	ADD      	R9 R9 K11 ; R9 := R9 + 1.000000
	36	[7758]	SETTABLE 	R2 R8 R9 ; R2[R8] := R9
	37	[7748]	FORLOOP  	R3 20 ; R3 += R5; if R3 <= R4 then begin PC := 20; R6 := R3 end
	38	[7762]	GETGLOBAL	R9 K12 ; R9 := 0xcfc01047
	39	[7762]	MOVE     	R10 R2 ; R10 := R2
	40	[7762]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	41	[7762]	JMP      	55 ; PC := 55
	42	[7763]	LT       	0 K11 R13 ; if 1.000000 >= R13 then PC := 55
	43	[7763]	JMP      	55 ; PC := 55
	44	[7764]	GETGLOBAL	R14 K13 ; R14 := 0x3d106989
	45	[7764]	LOADK    	R15 K14 ; R15 := "Found "
	46	[7764]	MOVE     	R16 R13 ; R16 := R13
	47	[7764]	LOADK    	R17 K15 ; R17 := " DojoPlaceableDecorations sharing the ID "
	48	[7764]	MOVE     	R18 R12 ; R18 := R12
	49	[7764]	LOADK    	R19 K16 ; R19 := "; please correct the level data!"
	50	[7764]	CONCAT   	R15 R15 R19 ; R15 := R15 .. R16 .. R17 .. R18 .. R19
	51	[7764]	CALL     	R14 2 1 ; R14(R15)
	52	[7765]	GETGLOBAL	R14 K17 ; R14 := 0x484742b6
	53	[7765]	LOADK    	R15 K18 ; R15 := "Duplicate DojoPlaceableDecoration IDs detected"
	54	[7765]	CALL     	R14 2 1 ; R14(R15)
	55	[7762]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 42; R11 := R12 end
	56	[7766]	JMP      	42 ; PC := 42
	57	[7769]	GETGLOBAL	R14 K19 ; R14 := 0x25d99d89
	58	[7769]	SELF     	R14 R14 K20 ; R15 := R14; R14 := R14[0x571ef1e3]
	59	[7769]	GETGLOBAL	R16 K4 ; R16 := 0x89326c93
	60	[7769]	SELF     	R16 R16 K21 ; R17 := R16; R16 := R16[0x18d05d30]
	61	[7769]	CALL     	R16 2 0 ; R16,... := R16(R17)
	62	[7769]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	63	[7769]	GETTABLE 	R14 R14 K22 ; R14 := R14["mClaimedDecos"]
	64	[7770]	LOADK    	R15 := 1.000000
	65	[7770]	LEN      	R16 R14 ; R16 := # R14
	66	[7770]	LOADK    	R17 := 1.000000
	67	[7770]	FORPREP  	R15 85 ; R15 -= R17; PC := 85
	68	[7771]	GETTABLE 	R19 R14 R18 ; R19 := R14[R18]
	69	[7772]	GETGLOBAL	R20 K23 ; R20 := 0x7b998233
	70	[7772]	GETGLOBAL	R21 K2 ; R21 := _T
	71	[7772]	GETTABLE 	R21 R21 K3 ; R21 := R21["ApartmentPlaceableLevelObjectDecos"]
	72	[7772]	GETTABLE 	R21 R21 R19 ; R21 := R21[R19]
	73	[7772]	CALL     	R20 2 2 ; R20 := R20(R21)
	74	[7772]	TEST     	R20 1 ; if R20 then PC := 85
	75	[7772]	JMP      	85 ; PC := 85
	76	[7773]	GETGLOBAL	R20 K4 ; R20 := 0x89326c93
	77	[7773]	SELF     	R20 R20 K24 ; R21 := R20; R20 := R20[0x59c96e77]
	78	[7773]	GETGLOBAL	R22 K2 ; R22 := _T
	79	[7773]	GETTABLE 	R22 R22 K3 ; R22 := R22["ApartmentPlaceableLevelObjectDecos"]
	80	[7773]	GETTABLE 	R22 R22 R19 ; R22 := R22[R19]
	81	[7773]	CALL     	R20 3 1 ; R20(R21,R22)
	82	[7774]	GETGLOBAL	R20 K2 ; R20 := _T
	83	[7774]	GETTABLE 	R20 R20 K3 ; R20 := R20["ApartmentPlaceableLevelObjectDecos"]
	84	[7774]	SETTABLE 	R20 R19 K9 ; R20[R19] := nil
	85	[7770]	FORLOOP  	R15 68 ; R15 += R17; if R15 <= R16 then begin PC := 68; R18 := R15 end
	86	[7778]	GETUPVAL 	R20 U1 ; R20 := U1
	87	[7778]	GETTABLE 	R20 R20 K25 ; R20 := R20["LoaderProgress"]
	88	[7778]	SETTABLE 	R20 K26 K11 ; R20["RoomLoaderIndex"] := 1.000000
	89	[7779]	GETUPVAL 	R20 U1 ; R20 := U1
	90	[7779]	GETTABLE 	R20 R20 K25 ; R20 := R20["LoaderProgress"]
	91	[7779]	SETTABLE 	R20 K27 K11 ; R20["DecoLoaderIndex"] := 1.000000
	92	[7780]	GETUPVAL 	R20 U1 ; R20 := U1
	93	[7780]	GETTABLE 	R20 R20 K25 ; R20 := R20["LoaderProgress"]
	94	[7780]	SETTABLE 	R20 K28 K11 ; R20["RoomCreationIndex"] := 1.000000
	95	[7781]	GETUPVAL 	R20 U1 ; R20 := U1
	96	[7781]	GETTABLE 	R20 R20 K25 ; R20 := R20["LoaderProgress"]
	97	[7781]	SETTABLE 	R20 K29 K11 ; R20["DecoCreationIndex"] := 1.000000
	98	[7782]	GETUPVAL 	R20 U1 ; R20 := U1
	99	[7782]	GETTABLE 	R20 R20 K25 ; R20 := R20["LoaderProgress"]
	100	[7782]	SETTABLE 	R20 K30 K31 ; R20["LastLoad"] := false
	101	[7783]	GETUPVAL 	R20 U1 ; R20 := U1
	102	[7783]	GETTABLE 	R20 R20 K25 ; R20 := R20["LoaderProgress"]
	103	[7783]	NEWTABLE 	R21 0 0 ; R21 := {}
	104	[7783]	SETTABLE 	R20 K32 R21 ; R20["DecosLoaded"] := R21
	105	[7785]	GETUPVAL 	R20 U2 ; R20 := U2
	106	[7785]	LOADNIL  	R21 R21 ; R21 := nil
	107	[7785]	GETUPVAL 	R22 U1 ; R22 := U1
	108	[7785]	CALL     	R20 3 1 ; R20(R21,R22)
	109	[7788]	GETGLOBAL	R20 K33 ; R20 := 0x76ea806b
	110	[7788]	SELF     	R20 R20 K34 ; R21 := R20; R20 := R20[0x3f3ae64c]
	111	[7788]	LOADK    	R22 := 0.000000
	112	[7788]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	113	[7789]	GETGLOBAL	R21 K23 ; R21 := 0x7b998233
	114	[7789]	MOVE     	R22 R20 ; R22 := R20
	115	[7789]	CALL     	R21 2 2 ; R21 := R21(R22)
	116	[7789]	TEST     	R21 1 ; if R21 then PC := 135
	117	[7789]	JMP      	135 ; PC := 135
	118	[7790]	SELF     	R21 R20 K35 ; R22 := R20; R21 := R20[0x80563238]
	119	[7790]	CALL     	R21 2 2 ; R21 := R21(R22)
	120	[7791]	GETGLOBAL	R22 K23 ; R22 := 0x7b998233
	121	[7791]	MOVE     	R23 R21 ; R23 := R21
	122	[7791]	CALL     	R22 2 2 ; R22 := R22(R23)
	123	[7791]	TEST     	R22 1 ; if R22 then PC := 135
	124	[7791]	JMP      	135 ; PC := 135
	125	[7792]	LOADK    	R22 := 1.000000
	126	[7792]	GETUPVAL 	R23 U3 ; R23 := U3
	127	[7792]	LEN      	R23 R23 ; R23 := # R23
	128	[7792]	LOADK    	R24 := 1.000000
	129	[7792]	FORPREP  	R22 134 ; R22 -= R24; PC := 134
	130	[7793]	SELF     	R26 R21 K36 ; R27 := R21; R26 := R21[0xd033bd37]
	131	[7793]	GETUPVAL 	R28 U3 ; R28 := U3
	132	[7793]	GETTABLE 	R28 R28 R25 ; R28 := R28[R25]
	133	[7793]	CALL     	R26 3 1 ; R26(R27,R28)
	134	[7792]	FORLOOP  	R22 130 ; R22 += R24; if R22 <= R23 then begin PC := 130; R25 := R22 end
	135	[7798]	GETUPVAL 	R26 U4 ; R26 := U4
	136	[7798]	CALL     	R26 1 1 ; R26()
	137	[7800]	GETGLOBAL	R26 K4 ; R26 := 0x89326c93
	138	[7800]	SELF     	R26 R26 K21 ; R27 := R26; R26 := R26[0x18d05d30]
	139	[7800]	CALL     	R26 2 2 ; R26 := R26(R27)
	140	[7800]	TEST     	R26 1 ; if R26 then PC := 147
	141	[7800]	JMP      	147 ; PC := 147
	142	[7800]	GETGLOBAL	R26 K23 ; R26 := 0x7b998233
	143	[7800]	GETGLOBAL	R27 K37 ; R27 := 0xbe190284
	144	[7800]	CALL     	R26 2 2 ; R26 := R26(R27)
	145	[7800]	TEST     	R26 1 ; if R26 then PC := 159
	146	[7800]	JMP      	159 ; PC := 159
	147	[7800]	GETGLOBAL	R26 K37 ; R26 := 0xbe190284
	148	[7800]	SELF     	R26 R26 K38 ; R27 := R26; R26 := R26[0xf2deaf69]
	149	[7800]	GETGLOBAL	R28 K39 ; R28 := gLotusAttractModeGameRulesType
	150	[7800]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	151	[7800]	TEST     	R26 1 ; if R26 then PC := 160
	152	[7800]	JMP      	160 ; PC := 160
	153	[7800]	GETGLOBAL	R26 K37 ; R26 := 0xbe190284
	154	[7800]	SELF     	R26 R26 K38 ; R27 := R26; R26 := R26[0xf2deaf69]
	155	[7800]	GETGLOBAL	R28 K40 ; R28 := gLotusPhotoBoothGameRulesType
	156	[7800]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	157	[7800]	TEST     	R26 1 ; if R26 then PC := 160
	158	[7800]	JMP      	160 ; PC := 160
	159	[7801]	RETURN   	R0 1 ; return 
	160	[7804]	GETGLOBAL	R26 K4 ; R26 := 0x89326c93
	161	[7804]	SELF     	R26 R26 K21 ; R27 := R26; R26 := R26[0x18d05d30]
	162	[7804]	CALL     	R26 2 2 ; R26 := R26(R27)
	163	[7804]	TEST     	R26 1 ; if R26 then PC := 170
	164	[7804]	JMP      	170 ; PC := 170
	165	[7804]	GETGLOBAL	R26 K37 ; R26 := 0xbe190284
	166	[7804]	SELF     	R26 R26 K38 ; R27 := R26; R26 := R26[0xf2deaf69]
	167	[7804]	GETGLOBAL	R28 K39 ; R28 := gLotusAttractModeGameRulesType
	168	[7804]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	169	[7804]	JMP      	172 ; PC := 172
	170	[7804]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 171
	171	[7804]	OP_LOADBOOL	R26 1 0 ; R26 := true
	172	[7805]	TEST     	R26 0 ; if not R26 then PC := 188
	173	[7805]	JMP      	188 ; PC := 188
	174	[7806]	GETGLOBAL	R27 K4 ; R27 := 0x89326c93
	175	[7806]	SELF     	R27 R27 K41 ; R28 := R27; R27 := R27[0xc7fcada9]
	176	[7806]	GETGLOBAL	R29 K42 ; R29 := 0x0469f296
	177	[7806]	LOADK    	R30 K43 ; R30 := "ApartmentOptionsDisplayChange"
	178	[7806]	CALL     	R29 2 0 ; R29,... := R29(R30)
	179	[7806]	CALL     	R27 0 2 ; R27 := R27(R28,...)
	180	[7807]	LOADK    	R28 := 1.000000
	181	[7807]	LEN      	R29 R27 ; R29 := # R27
	182	[7807]	LOADK    	R30 := 1.000000
	183	[7807]	FORPREP  	R28 187 ; R28 -= R30; PC := 187
	184	[7808]	GETTABLE 	R32 R27 R31 ; R32 := R27[R31]
	185	[7808]	SELF     	R32 R32 K44 ; R33 := R32; R32 := R32[0xf4e253b6]
	186	[7808]	CALL     	R32 2 1 ; R32(R33)
	187	[7807]	FORLOOP  	R28 184 ; R28 += R30; if R28 <= R29 then begin PC := 184; R31 := R28 end
	188	[7812]	GETGLOBAL	R32 K4 ; R32 := 0x89326c93
	189	[7812]	SELF     	R32 R32 K5 ; R33 := R32; R32 := R32[0xfb669000]
	190	[7812]	GETGLOBAL	R34 K45 ; R34 := 0xf5d69a4f
	191	[7812]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	192	[7813]	GETGLOBAL	R33 K46 ; R33 := 0xc8802016
	193	[7813]	MOVE     	R34 R32 ; R34 := R32
	194	[7813]	CALL     	R33 2 4 ; R33,R34,R35 := R33(R34)
	195	[7813]	JMP      	206 ; PC := 206
	196	[7814]	SELF     	R38 R37 K47 ; R39 := R37; R38 := R37[0x9d668f53]
	197	[7814]	GETGLOBAL	R40 K42 ; R40 := 0x0469f296
	198	[7814]	CALL     	R40 1 2 ; R40 := R40()
	199	[7814]	LOADK    	R41 := 100.000000
	200	[7814]	CALL     	R38 4 1 ; R38(R39,R40,R41)
	201	[7815]	SELF     	R38 R37 K48 ; R39 := R37; R38 := R37[0xb2532845]
	202	[7815]	GETGLOBAL	R40 K42 ; R40 := 0x0469f296
	203	[7815]	LOADK    	R41 K49 ; R41 := "Statue"
	204	[7815]	CALL     	R40 2 0 ; R40,... := R40(R41)
	205	[7815]	CALL     	R38 0 1 ; R38(R39,...)
	206	[7813]	TFORLOOP 	R33 2 ; R36,R37 := R33(R34,R35); if R36 ~= nil then begin PC = 196; R35 := R36 end
	207	[7815]	JMP      	196 ; PC := 196
	208	[7818]	RETURN   	R0 1 ; return 

function #237 <?:7820,7850> (89 instructions, 356 bytes at 000001608738DD30)
2 params, 10 slots, 0 upvalues, 0 locals, 32 constants, 0 functions
	1	[7823]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[7823]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[7823]	GETTABLE 	R3 R3 K2 ; R3 := R3["gDojoData"]
	4	[7823]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[7823]	TEST     	R2 0 ; if not R2 then PC := 8
	6	[7823]	JMP      	8 ; PC := 8
	7	[7824]	RETURN   	R0 1 ; return 
	8	[7827]	GETGLOBAL	R2 K1 ; R2 := _T
	9	[7827]	GETTABLE 	R2 R2 K2 ; R2 := R2["gDojoData"]
	10	[7827]	SETTABLE 	R2 K3 R0 ; R2["Result"] := R0
	11	[7828]	GETGLOBAL	R2 K1 ; R2 := _T
	12	[7828]	GETTABLE 	R2 R2 K2 ; R2 := R2["gDojoData"]
	13	[7828]	SETTABLE 	R2 K4 R1 ; R2["Body"] := R1
	14	[7830]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	15	[7830]	GETGLOBAL	R3 K1 ; R3 := _T
	16	[7830]	GETTABLE 	R3 R3 K5 ; R3 := R3["SquadOverlay"]
	17	[7830]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[7830]	TEST     	R2 1 ; if R2 then PC := 89
	19	[7830]	JMP      	89 ; PC := 89
	20	[7831]	TEST     	R0 0 ; if not R0 then PC := 29
	21	[7831]	JMP      	29 ; PC := 29
	22	[7832]	GETGLOBAL	R2 K1 ; R2 := _T
	23	[7832]	GETTABLE 	R2 R2 K5 ; R2 := R2["SquadOverlay"]
	24	[7832]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xe4162eed]
	25	[7832]	LOADK    	R4 K7 ; R4 := "OpenDojoLevel"
	26	[7832]	LOADK    	R5 K8 ; R5 := ""
	27	[7832]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	28	[7832]	JMP      	89 ; PC := 89
	29	[7834]	LOADNIL  	R2 R2 ; R2 := nil
	30	[7835]	EQ       	1 R1 K8 ; if R1 == "" then PC := 53
	31	[7835]	JMP      	53 ; PC := 53
	32	[7835]	GETGLOBAL	R3 K9 ; R3 := 0x7f5022cf
	33	[7835]	GETTABLE 	R3 R3 K10 ; R3 := R3[0x1a94c9cc]
	34	[7835]	MOVE     	R4 R1 ; R4 := R1
	35	[7835]	LOADK    	R5 := 1.000000
	36	[7835]	LOADK    	R6 := 1.000000
	37	[7835]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	38	[7835]	EQ       	0 R3 K11 ; if R3 ~= "{" then PC := 53
	39	[7835]	JMP      	53 ; PC := 53
	40	[7836]	GETGLOBAL	R3 K12 ; R3 := cjson
	41	[7836]	GETTABLE 	R3 R3 K13 ; R3 := R3[0x7ab914d8]
	42	[7836]	MOVE     	R4 R1 ; R4 := R1
	43	[7836]	CALL     	R3 2 2 ; R3 := R3(R4)
	44	[7837]	EQ       	1 R3 K14 ; if R3 == nil then PC := 53
	45	[7837]	JMP      	53 ; PC := 53
	46	[7837]	GETTABLE 	R4 R3 K15 ; R4 := R3["DojoRequestStatus"]
	47	[7837]	EQ       	1 R4 K14 ; if R4 == nil then PC := 53
	48	[7837]	JMP      	53 ; PC := 53
	49	[7838]	GETGLOBAL	R4 K16 ; R4 := 0x03f57322
	50	[7838]	GETTABLE 	R5 R3 K15 ; R5 := R3["DojoRequestStatus"]
	51	[7838]	CALL     	R4 2 2 ; R4 := R4(R5)
	52	[7838]	MOVE     	R2 R4 ; R2 := R4
	53	[7842]	EQ       	0 R2 K18 ; if R2 ~= -8.000000 then PC := 80
	54	[7842]	JMP      	80 ; PC := 80
	55	[7842]	GETGLOBAL	R4 K19 ; R4 := 0xa94df70b
	56	[7842]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0xa593e43f]
	57	[7842]	GETGLOBAL	R6 K1 ; R6 := _T
	58	[7842]	GETTABLE 	R6 R6 K2 ; R6 := R6["gDojoData"]
	59	[7842]	GETTABLE 	R6 R6 K21 ; R6 := R6["ContentURL"]
	60	[7842]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	61	[7842]	TEST     	R4 1 ; if R4 then PC := 80
	62	[7842]	JMP      	80 ; PC := 80
	63	[7843]	GETGLOBAL	R4 K22 ; R4 := 0x3d106989
	64	[7843]	LOADK    	R5 K23 ; R5 := "CDN Dojo retrieval failed; retrying with API"
	65	[7843]	CALL     	R4 2 1 ; R4(R5)
	66	[7844]	GETGLOBAL	R4 K1 ; R4 := _T
	67	[7844]	GETTABLE 	R4 R4 K24 ; R4 := R4["BackgroundMovie"]
	68	[7844]	SELF     	R4 R4 K25 ; R5 := R4; R4 := R4[0xf56f3887]
	69	[7844]	LOADK    	R6 K26 ; R6 := "OnLoadHubMessage"
	70	[7844]	NEWTABLE 	R7 2 0 ; R7 := {}
	71	[7844]	LOADK    	R8 K27 ; R8 := "DojoHUB_HUB_"
	72	[7844]	GETGLOBAL	R9 K1 ; R9 := _T
	73	[7844]	GETTABLE 	R9 R9 K2 ; R9 := R9["gDojoData"]
	74	[7844]	GETTABLE 	R9 R9 K28 ; R9 := R9["GuildId"]
	75	[7844]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	76	[7844]	LOADK    	R9 K29 ; R9 := "true"
	77	[7844]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	78	[7844]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	79	[7844]	JMP      	89 ; PC := 89
	80	[7846]	GETGLOBAL	R4 K1 ; R4 := _T
	81	[7846]	GETTABLE 	R4 R4 K5 ; R4 := R4["SquadOverlay"]
	82	[7846]	SELF     	R4 R4 K25 ; R5 := R4; R4 := R4[0xf56f3887]
	83	[7846]	LOADK    	R6 K30 ; R6 := "OnDojoData"
	84	[7846]	NEWTABLE 	R7 2 0 ; R7 := {}
	85	[7846]	LOADK    	R8 K31 ; R8 := "false"
	86	[7846]	LOADK    	R9 K8 ; R9 := ""
	87	[7846]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	88	[7846]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	89	[7850]	RETURN   	R0 1 ; return 

function #238 <?:7856,7868> (37 instructions, 148 bytes at 000001608DAFF330)
1 param, 6 slots, 3 upvalues, 0 locals, 11 constants, 0 functions
	1	[7857]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[7857]	SETUPVAL 	R1 U0 ; U0 := R1
	3	[7858]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	4	[7858]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xfb64e76c]
	5	[7858]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[7858]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x5ca33548]
	7	[7858]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[7859]	GETGLOBAL	R2 K3 ; R2 := 0x03f57322
	9	[7859]	MOVE     	R3 R0 ; R3 := R0
	10	[7859]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[7859]	EQ       	0 R2 K5 ; if R2 ~= 4.000000 then PC := 23
	12	[7859]	JMP      	23 ; PC := 23
	13	[7860]	GETGLOBAL	R2 K6 ; R2 := 0xe7f2b02f
	14	[7860]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x0eb3b79c]
	15	[7860]	LOADK    	R4 := 3.000000
	16	[7860]	MOVE     	R5 R1 ; R5 := R1
	17	[7860]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	18	[7861]	LOADK    	R2 := 0.000000
	19	[7861]	SETUPVAL 	R2 U1 ; U1 := R2
	20	[7862]	LOADK    	R2 := 0.000000
	21	[7862]	SETUPVAL 	R2 U2 ; U2 := R2
	22	[7862]	JMP      	37 ; PC := 37
	23	[7864]	GETGLOBAL	R2 K6 ; R2 := 0xe7f2b02f
	24	[7864]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x0eb3b79c]
	25	[7864]	LOADK    	R4 := 4.000000
	26	[7864]	MOVE     	R5 R1 ; R5 := R1
	27	[7864]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	28	[7865]	GETUPVAL 	R2 U1 ; R2 := U1
	29	[7865]	ADD      	R2 R2 K8 ; R2 := R2 + 1.000000
	30	[7865]	SETUPVAL 	R2 U1 ; U1 := R2
	31	[7866]	GETGLOBAL	R2 K9 ; R2 := 0x55156ff7
	32	[7866]	CALL     	R2 1 2 ; R2 := R2()
	33	[7866]	GETUPVAL 	R3 U1 ; R3 := U1
	34	[7866]	MUL      	R3 K10 R3 ; R3 := 15.000000 * R3
	35	[7866]	ADD      	R2 R2 R3 ; R2 := R2 + R3
	36	[7866]	SETUPVAL 	R2 U2 ; U2 := R2
	37	[7868]	RETURN   	R0 1 ; return 

function #239 <?:7871,7922> (113 instructions, 452 bytes at 000001608DAFF5E0)
1 param, 11 slots, 3 upvalues, 0 locals, 28 constants, 0 functions
	1	[7872]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7872]	TEST     	R1 0 ; if not R1 then PC := 8
	3	[7872]	JMP      	8 ; PC := 8
	4	[7873]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	5	[7873]	LOADK    	R2 K1 ; R2 := "Ignoring Orbiter Invitation while pending"
	6	[7873]	CALL     	R1 2 1 ; R1(R2)
	7	[7874]	RETURN   	R0 1 ; return 
	8	[7877]	GETUPVAL 	R1 U1 ; R1 := U1
	9	[7877]	GETGLOBAL	R2 K2 ; R2 := 0x55156ff7
	10	[7877]	CALL     	R2 1 2 ; R2 := R2()
	11	[7877]	LT       	0 R2 R1 ; if R2 >= R1 then PC := 17
	12	[7877]	JMP      	17 ; PC := 17
	13	[7878]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	14	[7878]	LOADK    	R2 K3 ; R2 := "Ignoring Orbiter Invitation after rejection"
	15	[7878]	CALL     	R1 2 1 ; R1(R2)
	16	[7879]	RETURN   	R0 1 ; return 
	17	[7883]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	18	[7883]	GETGLOBAL	R2 K5 ; R2 := 0xbe190284
	19	[7883]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[7883]	TEST     	R1 1 ; if R1 then PC := 38
	21	[7883]	JMP      	38 ; PC := 38
	22	[7883]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	23	[7883]	GETGLOBAL	R2 K6 ; R2 := 0x89326c93
	24	[7883]	CALL     	R1 2 2 ; R1 := R1(R2)
	25	[7883]	TEST     	R1 1 ; if R1 then PC := 38
	26	[7883]	JMP      	38 ; PC := 38
	27	[7883]	GETGLOBAL	R1 K5 ; R1 := 0xbe190284
	28	[7883]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xf2deaf69]
	29	[7883]	GETGLOBAL	R3 K8 ; R3 := gLotusAttractModeGameRulesType
	30	[7883]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	31	[7883]	TEST     	R1 0 ; if not R1 then PC := 39
	32	[7883]	JMP      	39 ; PC := 39
	33	[7883]	GETGLOBAL	R1 K6 ; R1 := 0x89326c93
	34	[7883]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x18d05d30]
	35	[7883]	CALL     	R1 2 2 ; R1 := R1(R2)
	36	[7883]	TEST     	R1 1 ; if R1 then PC := 39
	37	[7883]	JMP      	39 ; PC := 39
	38	[7884]	RETURN   	R0 1 ; return 
	39	[7887]	GETGLOBAL	R1 K10 ; R1 := 0xe7f2b02f
	40	[7887]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x565be9ee]
	41	[7887]	CALL     	R1 2 2 ; R1 := R1(R2)
	42	[7888]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	43	[7888]	MOVE     	R3 R1 ; R3 := R1
	44	[7888]	CALL     	R2 2 2 ; R2 := R2(R3)
	45	[7888]	TEST     	R2 1 ; if R2 then PC := 54
	46	[7888]	JMP      	54 ; PC := 54
	47	[7888]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	48	[7888]	GETGLOBAL	R3 K6 ; R3 := 0x89326c93
	49	[7888]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0xfb64e76c]
	50	[7888]	CALL     	R3 2 0 ; R3,... := R3(R4)
	51	[7888]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	52	[7888]	TEST     	R2 0 ; if not R2 then PC := 55
	53	[7888]	JMP      	55 ; PC := 55
	54	[7889]	RETURN   	R0 1 ; return 
	55	[7892]	GETGLOBAL	R2 K6 ; R2 := 0x89326c93
	56	[7892]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xfb64e76c]
	57	[7892]	CALL     	R2 2 2 ; R2 := R2(R3)
	58	[7892]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x5ca33548]
	59	[7892]	CALL     	R2 2 2 ; R2 := R2(R3)
	60	[7893]	EQ       	1 R2 R0 ; if R2 == R0 then PC := 63
	61	[7893]	JMP      	63 ; PC := 63
	62	[7895]	RETURN   	R0 1 ; return 
	63	[7898]	SELF     	R3 R1 K14 ; R4 := R1; R3 := R1[0x2fb816cf]
	64	[7898]	CALL     	R3 2 2 ; R3 := R3(R4)
	65	[7900]	GETGLOBAL	R4 K15 ; R4 := 0x76ea806b
	66	[7900]	SELF     	R4 R4 K16 ; R5 := R4; R4 := R4[0x3f3ae64c]
	67	[7900]	LOADK    	R6 := 0.000000
	68	[7900]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	69	[7901]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	70	[7901]	MOVE     	R6 R4 ; R6 := R4
	71	[7901]	CALL     	R5 2 2 ; R5 := R5(R6)
	72	[7901]	TEST     	R5 0 ; if not R5 then PC := 75
	73	[7901]	JMP      	75 ; PC := 75
	74	[7902]	RETURN   	R0 1 ; return 
	75	[7905]	SELF     	R5 R4 K17 ; R6 := R4; R5 := R4[0x80563238]
	76	[7905]	CALL     	R5 2 2 ; R5 := R5(R6)
	77	[7906]	GETGLOBAL	R6 K4 ; R6 := 0x7b998233
	78	[7906]	MOVE     	R7 R5 ; R7 := R5
	79	[7906]	CALL     	R6 2 2 ; R6 := R6(R7)
	80	[7906]	TEST     	R6 0 ; if not R6 then PC := 83
	81	[7906]	JMP      	83 ; PC := 83
	82	[7907]	RETURN   	R0 1 ; return 
	83	[7910]	SELF     	R6 R5 K18 ; R7 := R5; R6 := R5[0x273a2275]
	84	[7910]	MOVE     	R8 R3 ; R8 := R3
	85	[7910]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	86	[7910]	TEST     	R6 0 ; if not R6 then PC := 89
	87	[7910]	JMP      	89 ; PC := 89
	88	[7911]	RETURN   	R0 1 ; return 
	89	[7914]	SELF     	R6 R4 K19 ; R7 := R4; R6 := R4[0x300348b9]
	90	[7914]	CALL     	R6 2 2 ; R6 := R6(R7)
	91	[7914]	TEST     	R6 1 ; if R6 then PC := 94
	92	[7914]	JMP      	94 ; PC := 94
	93	[7915]	RETURN   	R0 1 ; return 
	94	[7918]	GETGLOBAL	R6 K10 ; R6 := 0xe7f2b02f
	95	[7918]	SELF     	R6 R6 K20 ; R7 := R6; R6 := R6[0x0eb3b79c]
	96	[7918]	LOADK    	R8 := 2.000000
	97	[7918]	MOVE     	R9 R2 ; R9 := R2
	98	[7918]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	99	[7919]	OP_LOADBOOL	R6 1 0 ; R6 := true
	100	[7919]	SETUPVAL 	R6 U0 ; U0 := R6
	101	[7920]	GETGLOBAL	R6 K22 ; R6 := 0xae91e43b
	102	[7920]	SELF     	R6 R6 K23 ; R7 := R6; R6 := R6[0x42b04007]
	103	[7920]	LOADK    	R8 K24 ; R8 := "/Lotus/Language/Menu/InvitedToOrbiter"
	104	[7920]	OP_LOADBOOL	R9 0 0 ; R9 := false
	105	[7920]	NEWTABLE 	R10 0 1 ; R10 := {}
	106	[7920]	SETTABLE 	R10 K25 R3 ; R10["NAME"] := R3
	107	[7920]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	108	[7921]	GETUPVAL 	R7 U2 ; R7 := U2
	109	[7921]	GETTABLE 	R7 R7 K26 ; R7 := R7[0xdedfded7]
	110	[7921]	MOVE     	R8 R6 ; R8 := R6
	111	[7921]	LOADK    	R9 K27 ; R9 := "ConfirmLoadOrbiterMessage"
	112	[7921]	CALL     	R7 3 1 ; R7(R8,R9)
	113	[7922]	RETURN   	R0 1 ; return 

function #240 <?:7924,7926> (5 instructions, 20 bytes at 000001608DAFFCC0)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7925]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[7925]	MOVE     	R3 R0 ; R3 := R0
	3	[7925]	MOVE     	R4 R1 ; R4 := R1
	4	[7925]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[7926]	RETURN   	R0 1 ; return 

function #241 <?:7928,7931> (13 instructions, 52 bytes at 000001608DAFFDB0)
1 param, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[7929]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[7929]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x42b04007]
	3	[7929]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Menu/InviteToOrbiterReceived"
	4	[7929]	OP_LOADBOOL	R4 0 0 ; R4 := false
	5	[7929]	NEWTABLE 	R5 0 1 ; R5 := {}
	6	[7929]	SETTABLE 	R5 K3 R0 ; R5["NAME"] := R0
	7	[7929]	CALL     	R1 5 2 ; R1 := R1(R2,R3,R4,R5)
	8	[7930]	GETGLOBAL	R2 K4 ; R2 := _T
	9	[7930]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x7dce37bc]
	10	[7930]	MOVE     	R3 R1 ; R3 := R1
	11	[7930]	LOADK    	R4 K6 ; R4 := "SquadMemberJoined"
	12	[7930]	CALL     	R2 3 1 ; R2(R3,R4)
	13	[7931]	RETURN   	R0 1 ; return 

function #242 <?:7933,7936> (13 instructions, 52 bytes at 000001608DAFFFC0)
1 param, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[7934]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[7934]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x42b04007]
	3	[7934]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Menu/InviteToOrbiterRejected"
	4	[7934]	OP_LOADBOOL	R4 0 0 ; R4 := false
	5	[7934]	NEWTABLE 	R5 0 1 ; R5 := {}
	6	[7934]	SETTABLE 	R5 K3 R0 ; R5["NAME"] := R0
	7	[7934]	CALL     	R1 5 2 ; R1 := R1(R2,R3,R4,R5)
	8	[7935]	GETGLOBAL	R2 K4 ; R2 := _T
	9	[7935]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x7dce37bc]
	10	[7935]	MOVE     	R3 R1 ; R3 := R1
	11	[7935]	LOADK    	R4 K6 ; R4 := "SquadMemberLeft"
	12	[7935]	CALL     	R2 3 1 ; R2(R3,R4)
	13	[7936]	RETURN   	R0 1 ; return 

function #243 <?:7938,7941> (13 instructions, 52 bytes at 000001608DB001D0)
1 param, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[7939]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[7939]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x42b04007]
	3	[7939]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Menu/InviteToOrbiterAccepted"
	4	[7939]	OP_LOADBOOL	R4 0 0 ; R4 := false
	5	[7939]	NEWTABLE 	R5 0 1 ; R5 := {}
	6	[7939]	SETTABLE 	R5 K3 R0 ; R5["NAME"] := R0
	7	[7939]	CALL     	R1 5 2 ; R1 := R1(R2,R3,R4,R5)
	8	[7940]	GETGLOBAL	R2 K4 ; R2 := _T
	9	[7940]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x7dce37bc]
	10	[7940]	MOVE     	R3 R1 ; R3 := R1
	11	[7940]	LOADK    	R4 K6 ; R4 := "SquadMemberJoined"
	12	[7940]	CALL     	R2 3 1 ; R2(R3,R4)
	13	[7941]	RETURN   	R0 1 ; return 

function #244 <?:7943,7945> (9 instructions, 36 bytes at 000001608DB003E0)
2 params, 7 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7944]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[7944]	GETTABLE 	R2 R2 K1 ; R2 := R2["BackgroundMovie"]
	3	[7944]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xf56f3887]
	4	[7944]	LOADK    	R4 K3 ; R4 := "ConfirmLogoff"
	5	[7944]	NEWTABLE 	R5 1 0 ; R5 := {}
	6	[7944]	MOVE     	R6 R0 ; R6 := R0
	7	[7944]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	8	[7944]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	9	[7945]	RETURN   	R0 1 ; return 

function #245 <?:7947,7957> (24 instructions, 96 bytes at 000001608DB00540)
2 params, 4 slots, 4 upvalues, 0 locals, 5 constants, 0 functions
	1	[7948]	EQ       	0 R0 K1 ; if R0 ~= 1.000000 then PC := 7
	2	[7948]	JMP      	7 ; PC := 7
	3	[7949]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[7949]	MOVE     	R3 R1 ; R3 := R1
	5	[7949]	CALL     	R2 2 1 ; R2(R3)
	6	[7949]	JMP      	24 ; PC := 24
	7	[7950]	EQ       	0 R0 K2 ; if R0 ~= 2.000000 then PC := 13
	8	[7950]	JMP      	13 ; PC := 13
	9	[7951]	GETUPVAL 	R2 U1 ; R2 := U1
	10	[7951]	MOVE     	R3 R1 ; R3 := R1
	11	[7951]	CALL     	R2 2 1 ; R2(R3)
	12	[7951]	JMP      	24 ; PC := 24
	13	[7952]	EQ       	0 R0 K3 ; if R0 ~= 4.000000 then PC := 19
	14	[7952]	JMP      	19 ; PC := 19
	15	[7953]	GETUPVAL 	R2 U2 ; R2 := U2
	16	[7953]	MOVE     	R3 R1 ; R3 := R1
	17	[7953]	CALL     	R2 2 1 ; R2(R3)
	18	[7953]	JMP      	24 ; PC := 24
	19	[7954]	EQ       	0 R0 K4 ; if R0 ~= 3.000000 then PC := 24
	20	[7954]	JMP      	24 ; PC := 24
	21	[7955]	GETUPVAL 	R2 U3 ; R2 := U3
	22	[7955]	MOVE     	R3 R1 ; R3 := R1
	23	[7955]	CALL     	R2 2 1 ; R2(R3)
	24	[7957]	RETURN   	R0 1 ; return 

function #246 <?:7959,7986> (55 instructions, 220 bytes at 000001608DB00710)
2 params, 8 slots, 1 upvalue, 0 locals, 27 constants, 0 functions
	1	[7960]	TEST     	R0 0 ; if not R0 then PC := 28
	2	[7960]	JMP      	28 ; PC := 28
	3	[7961]	EQ       	0 R1 K0 ; if R1 ~= "WEGAME_ACCOUNT_ACTIVATED" then PC := 22
	4	[7961]	JMP      	22 ; PC := 22
	5	[7962]	GETGLOBAL	R2 K1 ; R2 := _T
	6	[7962]	SETTABLE 	R2 K2 K3 ; R2["gWeGameAccount"] := nil
	7	[7964]	GETGLOBAL	R2 K4 ; R2 := 0x9ba7909f
	8	[7964]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xbcfb64ab]
	9	[7964]	GETGLOBAL	R4 K6 ; R4 := movies
	10	[7964]	GETTABLE 	R4 R4 K7 ; R4 := R4["MainMenu"]
	11	[7964]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	12	[7965]	GETGLOBAL	R3 K8 ; R3 := 0x7b998233
	13	[7965]	MOVE     	R4 R2 ; R4 := R2
	14	[7965]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[7965]	TEST     	R3 1 ; if R3 then PC := 53
	16	[7965]	JMP      	53 ; PC := 53
	17	[7966]	SELF     	R3 R2 K9 ; R4 := R2; R3 := R2[0xe4162eed]
	18	[7966]	LOADK    	R5 K10 ; R5 := "OnWeGameAccountNamed"
	19	[7966]	LOADK    	R6 K11 ; R6 := ""
	20	[7966]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	21	[7967]	JMP      	53 ; PC := 53
	22	[7969]	GETUPVAL 	R3 U0 ; R3 := U0
	23	[7969]	GETTABLE 	R3 R3 K12 ; R3 := R3[0xf616a184]
	24	[7969]	LOADK    	R4 K13 ; R4 := "/Lotus/Language/Menu/Profile_AccountRenameSuccess"
	25	[7969]	LOADK    	R5 K14 ; R5 := "OnAccountRenameRelogConfirm"
	26	[7969]	CALL     	R3 3 1 ; R3(R4,R5)
	27	[7970]	JMP      	53 ; PC := 53
	28	[7972]	LOADK    	R3 K15 ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail"
	29	[7973]	EQ       	0 R1 K16 ; if R1 ~= "RESTRICTED_NAME" then PC := 33
	30	[7973]	JMP      	33 ; PC := 33
	31	[7974]	LOADK    	R3 K17 ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail_RESTRICTED_NAME"
	32	[7974]	JMP      	40 ; PC := 40
	33	[7975]	EQ       	0 R1 K18 ; if R1 ~= "INSUFFICIENT_FUNDS" then PC := 37
	34	[7975]	JMP      	37 ; PC := 37
	35	[7976]	LOADK    	R3 K19 ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail_INSUFFICIENT_FUNDS"
	36	[7976]	JMP      	40 ; PC := 40
	37	[7977]	EQ       	0 R1 K20 ; if R1 ~= "NAME_USED" then PC := 40
	38	[7977]	JMP      	40 ; PC := 40
	39	[7978]	LOADK    	R3 K21 ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameFail_NAME_USED"
	40	[7981]	GETGLOBAL	R4 K22 ; R4 := 0x603636ad
	41	[7981]	MOVE     	R5 R3 ; R5 := R3
	42	[7981]	NEWTABLE 	R6 0 1 ; R6 := {}
	43	[7981]	GETGLOBAL	R7 K1 ; R7 := _T
	44	[7981]	GETTABLE 	R7 R7 K24 ; R7 := R7["gPendingAccountRename"]
	45	[7981]	SETTABLE 	R6 K23 R7 ; R6["NEW_NAME"] := R7
	46	[7981]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	47	[7981]	MOVE     	R3 R4 ; R3 := R4
	48	[7982]	GETUPVAL 	R4 U0 ; R4 := U0
	49	[7982]	GETTABLE 	R4 R4 K25 ; R4 := R4[0xe0cba3ca]
	50	[7982]	MOVE     	R5 R3 ; R5 := R3
	51	[7982]	LOADK    	R6 K26 ; R6 := "OnBadNewNameAcknowledged"
	52	[7982]	CALL     	R4 3 1 ; R4(R5,R6)
	53	[7985]	GETGLOBAL	R4 K1 ; R4 := _T
	54	[7985]	SETTABLE 	R4 K24 K11 ; R4["gPendingAccountRename"] := ""
	55	[7986]	RETURN   	R0 1 ; return 

function #247 <?:7988,8009> (59 instructions, 236 bytes at 000001608DB00F60)
1 param, 11 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[7989]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[7989]	MOVE     	R2 R0 ; R2 := R0
	3	[7989]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7989]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 41
	5	[7989]	JMP      	41 ; PC := 41
	6	[7990]	GETGLOBAL	R1 K3 ; R1 := _T
	7	[7990]	GETTABLE 	R1 R1 K4 ; R1 := R1["gWeGameAccount"]
	8	[7990]	EQ       	1 R1 K5 ; if R1 == nil then PC := 19
	9	[7990]	JMP      	19 ; PC := 19
	10	[7992]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	11	[7992]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x5ef16644]
	12	[7992]	GETGLOBAL	R2 K3 ; R2 := _T
	13	[7992]	GETTABLE 	R2 R2 K7 ; R2 := R2["gPendingAccountRename"]
	14	[7992]	GETGLOBAL	R3 K3 ; R3 := _T
	15	[7992]	GETTABLE 	R3 R3 K4 ; R3 := R3["gWeGameAccount"]
	16	[7992]	LOADK    	R4 K8 ; R4 := "OnAccountRename"
	17	[7992]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	18	[7992]	JMP      	59 ; PC := 59
	19	[7994]	GETGLOBAL	R1 K9 ; R1 := 0x76ea806b
	20	[7994]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x3f3ae64c]
	21	[7994]	LOADK    	R3 := 0.000000
	22	[7994]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	23	[7995]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	24	[7995]	MOVE     	R3 R1 ; R3 := R1
	25	[7995]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[7995]	TEST     	R2 1 ; if R2 then PC := 59
	27	[7995]	JMP      	59 ; PC := 59
	28	[7996]	SELF     	R2 R1 K12 ; R3 := R1; R2 := R1[0x80563238]
	29	[7996]	CALL     	R2 2 2 ; R2 := R2(R3)
	30	[7997]	GETGLOBAL	R3 K11 ; R3 := 0x7b998233
	31	[7997]	MOVE     	R4 R2 ; R4 := R2
	32	[7997]	CALL     	R3 2 2 ; R3 := R3(R4)
	33	[7997]	TEST     	R3 1 ; if R3 then PC := 59
	34	[7997]	JMP      	59 ; PC := 59
	35	[7998]	SELF     	R3 R2 K13 ; R4 := R2; R3 := R2[0xddb81687]
	36	[7998]	GETGLOBAL	R5 K3 ; R5 := _T
	37	[7998]	GETTABLE 	R5 R5 K7 ; R5 := R5["gPendingAccountRename"]
	38	[7998]	LOADK    	R6 K8 ; R6 := "OnAccountRename"
	39	[7998]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	40	[8001]	JMP      	59 ; PC := 59
	41	[8003]	GETGLOBAL	R3 K3 ; R3 := _T
	42	[8003]	GETTABLE 	R3 R3 K4 ; R3 := R3["gWeGameAccount"]
	43	[8003]	EQ       	1 R3 K5 ; if R3 == nil then PC := 59
	44	[8003]	JMP      	59 ; PC := 59
	45	[8005]	GETGLOBAL	R3 K3 ; R3 := _T
	46	[8005]	SETTABLE 	R3 K7 K14 ; R3["gPendingAccountRename"] := ""
	47	[8006]	GETUPVAL 	R3 U0 ; R3 := U0
	48	[8006]	GETTABLE 	R3 R3 K15 ; R3 := R3[0xef3e3165]
	49	[8006]	GETGLOBAL	R4 K16 ; R4 := 0xae91e43b
	50	[8006]	LOADK    	R5 K17 ; R5 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
	51	[8006]	LOADK    	R6 K14 ; R6 := ""
	52	[8006]	LOADK    	R7 := 24.000000
	53	[8006]	LOADK    	R8 K18 ; R8 := "AccountRename"
	54	[8006]	LOADK    	R9 K19 ; R9 := "OSKAccountRename"
	55	[8006]	NEWTABLE 	R10 0 2 ; R10 := {}
	56	[8006]	SETTABLE 	R10 K20 K21 ; R10["isMultiline"] := false
	57	[8006]	SETTABLE 	R10 K22 K23 ; R10["cancelDisabled"] := true
	58	[8006]	CALL     	R3 8 1 ; R3(R4,R5,R6,R7,R8,R9,R10)
	59	[8009]	RETURN   	R0 1 ; return 

function #248 <?:8011,8016> (17 instructions, 68 bytes at 000001608DB013E0)
0 params, 8 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[8012]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[8012]	GETTABLE 	R0 R0 K1 ; R0 := R0["gWeGameAccount"]
	3	[8012]	EQ       	1 R0 K2 ; if R0 == nil then PC := 17
	4	[8012]	JMP      	17 ; PC := 17
	5	[8014]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[8014]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xef3e3165]
	7	[8014]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	8	[8014]	LOADK    	R2 K5 ; R2 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
	9	[8014]	LOADK    	R3 K6 ; R3 := ""
	10	[8014]	LOADK    	R4 := 24.000000
	11	[8014]	LOADK    	R5 K7 ; R5 := "AccountRename"
	12	[8014]	LOADK    	R6 K8 ; R6 := "OSKAccountRename"
	13	[8014]	NEWTABLE 	R7 0 2 ; R7 := {}
	14	[8014]	SETTABLE 	R7 K9 K10 ; R7["isMultiline"] := false
	15	[8014]	SETTABLE 	R7 K11 K12 ; R7["cancelDisabled"] := true
	16	[8014]	CALL     	R0 8 1 ; R0(R1,R2,R3,R4,R5,R6,R7)
	17	[8016]	RETURN   	R0 1 ; return 

function #249 <?:8018,8087> (171 instructions, 684 bytes at 000001608DB01610)
1 param, 14 slots, 2 upvalues, 0 locals, 52 constants, 0 functions
	1	[8019]	EQ       	0 R0 K0 ; if R0 ~= nil then PC := 18
	2	[8019]	JMP      	18 ; PC := 18
	3	[8021]	GETGLOBAL	R1 K1 ; R1 := 0x9ba7909f
	4	[8021]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbcfb64ab]
	5	[8021]	GETGLOBAL	R3 K3 ; R3 := movies
	6	[8021]	GETTABLE 	R3 R3 K4 ; R3 := R3["MainMenu"]
	7	[8021]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	8	[8022]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	9	[8022]	MOVE     	R3 R1 ; R3 := R1
	10	[8022]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[8022]	TEST     	R2 1 ; if R2 then PC := 17
	12	[8022]	JMP      	17 ; PC := 17
	13	[8023]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xe4162eed]
	14	[8023]	LOADK    	R4 K7 ; R4 := "OnWeGameAccountNameCancelled"
	15	[8023]	LOADK    	R5 K8 ; R5 := ""
	16	[8023]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	17	[8025]	RETURN   	R0 1 ; return 
	18	[8028]	EQ       	0 R0 K8 ; if R0 ~= "" then PC := 37
	19	[8028]	JMP      	37 ; PC := 37
	20	[8029]	GETGLOBAL	R2 K9 ; R2 := _T
	21	[8029]	GETTABLE 	R2 R2 K10 ; R2 := R2["gWeGameAccount"]
	22	[8029]	EQ       	1 R2 K0 ; if R2 == nil then PC := 36
	23	[8029]	JMP      	36 ; PC := 36
	24	[8031]	GETUPVAL 	R2 U0 ; R2 := U0
	25	[8031]	GETTABLE 	R2 R2 K11 ; R2 := R2[0xef3e3165]
	26	[8031]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	27	[8031]	LOADK    	R4 K13 ; R4 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
	28	[8031]	LOADK    	R5 K8 ; R5 := ""
	29	[8031]	LOADK    	R6 := 24.000000
	30	[8031]	LOADK    	R7 K14 ; R7 := "AccountRename"
	31	[8031]	LOADK    	R8 K15 ; R8 := "OSKAccountRename"
	32	[8031]	NEWTABLE 	R9 0 2 ; R9 := {}
	33	[8031]	SETTABLE 	R9 K16 K17 ; R9["isMultiline"] := false
	34	[8031]	SETTABLE 	R9 K18 K19 ; R9["cancelDisabled"] := true
	35	[8031]	CALL     	R2 8 1 ; R2(R3,R4,R5,R6,R7,R8,R9)
	36	[8034]	RETURN   	R0 1 ; return 
	37	[8038]	GETUPVAL 	R2 U1 ; R2 := U1
	38	[8038]	GETTABLE 	R2 R2 K20 ; R2 := R2[0x5d3d561a]
	39	[8038]	MOVE     	R3 R0 ; R3 := R0
	40	[8038]	CALL     	R2 2 2 ; R2 := R2(R3)
	41	[8039]	LT       	0 K21 R2 ; if 0.000000 >= R2 then PC := 59
	42	[8039]	JMP      	59 ; PC := 59
	43	[8040]	GETUPVAL 	R3 U1 ; R3 := U1
	44	[8040]	GETTABLE 	R3 R3 K22 ; R3 := R3[0xe0cba3ca]
	45	[8040]	GETGLOBAL	R4 K12 ; R4 := 0xae91e43b
	46	[8040]	SELF     	R4 R4 K23 ; R5 := R4; R4 := R4[0x42b04007]
	47	[8040]	LOADK    	R6 K24 ; R6 := "/Lotus/Language/Menu/SocialOverlay_InvalidCharacter"
	48	[8040]	OP_LOADBOOL	R7 0 0 ; R7 := false
	49	[8040]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	50	[8040]	GETGLOBAL	R5 K25 ; R5 := 0x68b0afb4
	51	[8040]	MOVE     	R6 R0 ; R6 := R0
	52	[8040]	MOVE     	R7 R2 ; R7 := R2
	53	[8040]	MOVE     	R8 R2 ; R8 := R2
	54	[8040]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	55	[8040]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	56	[8040]	LOADK    	R5 K26 ; R5 := "OnBadNewNameAcknowledged"
	57	[8040]	CALL     	R3 3 1 ; R3(R4,R5)
	58	[8041]	RETURN   	R0 1 ; return 
	59	[8045]	GETGLOBAL	R3 K27 ; R3 := 0x7f5022cf
	60	[8045]	GETTABLE 	R3 R3 K28 ; R3 := R3[0x41e2ae25]
	61	[8045]	MOVE     	R4 R0 ; R4 := R0
	62	[8045]	CALL     	R3 2 2 ; R3 := R3(R4)
	63	[8045]	LT       	0 K29 R3 ; if 24.000000 >= R3 then PC := 75
	64	[8045]	JMP      	75 ; PC := 75
	65	[8046]	GETUPVAL 	R3 U1 ; R3 := U1
	66	[8046]	GETTABLE 	R3 R3 K22 ; R3 := R3[0xe0cba3ca]
	67	[8046]	GETGLOBAL	R4 K12 ; R4 := 0xae91e43b
	68	[8046]	SELF     	R4 R4 K23 ; R5 := R4; R4 := R4[0x42b04007]
	69	[8046]	LOADK    	R6 K30 ; R6 := "/Lotus/Language/Menu/Profile_AccountRenameFail_TOO_LONG"
	70	[8046]	OP_LOADBOOL	R7 0 0 ; R7 := false
	71	[8046]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	72	[8046]	LOADK    	R5 K26 ; R5 := "OnBadNewNameAcknowledged"
	73	[8046]	CALL     	R3 3 1 ; R3(R4,R5)
	74	[8047]	RETURN   	R0 1 ; return 
	75	[8051]	GETGLOBAL	R3 K27 ; R3 := 0x7f5022cf
	76	[8051]	GETTABLE 	R3 R3 K28 ; R3 := R3[0x41e2ae25]
	77	[8051]	MOVE     	R4 R0 ; R4 := R0
	78	[8051]	CALL     	R3 2 2 ; R3 := R3(R4)
	79	[8051]	LT       	0 R3 K31 ; if R3 >= 4.000000 then PC := 91
	80	[8051]	JMP      	91 ; PC := 91
	81	[8052]	GETUPVAL 	R3 U1 ; R3 := U1
	82	[8052]	GETTABLE 	R3 R3 K22 ; R3 := R3[0xe0cba3ca]
	83	[8052]	GETGLOBAL	R4 K12 ; R4 := 0xae91e43b
	84	[8052]	SELF     	R4 R4 K23 ; R5 := R4; R4 := R4[0x42b04007]
	85	[8052]	LOADK    	R6 K32 ; R6 := "/Lotus/Language/Menu/Profile_AccountNameFail_TOO_SHORT"
	86	[8052]	OP_LOADBOOL	R7 0 0 ; R7 := false
	87	[8052]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	88	[8052]	LOADK    	R5 K26 ; R5 := "OnBadNewNameAcknowledged"
	89	[8052]	CALL     	R3 3 1 ; R3(R4,R5)
	90	[8053]	RETURN   	R0 1 ; return 
	91	[8056]	GETGLOBAL	R3 K33 ; R3 := 0x7db5f856
	92	[8056]	MOVE     	R4 R0 ; R4 := R0
	93	[8056]	CALL     	R3 2 2 ; R3 := R3(R4)
	94	[8056]	MOVE     	R0 R3 ; R0 := R3
	95	[8059]	GETGLOBAL	R3 K34 ; R3 := 0x09423272
	96	[8059]	MOVE     	R4 R0 ; R4 := R0
	97	[8059]	LOADK    	R5 := 1.000000
	98	[8059]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	99	[8060]	EQ       	1 R3 R0 ; if R3 == R0 then PC := 107
	100	[8060]	JMP      	107 ; PC := 107
	101	[8061]	GETUPVAL 	R4 U1 ; R4 := U1
	102	[8061]	GETTABLE 	R4 R4 K22 ; R4 := R4[0xe0cba3ca]
	103	[8061]	LOADK    	R5 K36 ; R5 := "/Lotus/Language/Menu/Profile_AccountRenameFail_CENSORED"
	104	[8061]	LOADK    	R6 K26 ; R6 := "OnBadNewNameAcknowledged"
	105	[8061]	CALL     	R4 3 1 ; R4(R5,R6)
	106	[8062]	RETURN   	R0 1 ; return 
	107	[8066]	GETGLOBAL	R4 K9 ; R4 := _T
	108	[8066]	SETTABLE 	R4 K37 R0 ; R4["gPendingAccountRename"] := R0
	109	[8068]	GETGLOBAL	R4 K9 ; R4 := _T
	110	[8068]	GETTABLE 	R4 R4 K10 ; R4 := R4["gWeGameAccount"]
	111	[8068]	EQ       	1 R4 K0 ; if R4 == nil then PC := 127
	112	[8068]	JMP      	127 ; PC := 127
	113	[8070]	NEWTABLE 	R4 0 1 ; R4 := {}
	114	[8070]	SETTABLE 	R4 K38 R0 ; R4["NEW_NAME"] := R0
	115	[8071]	GETGLOBAL	R5 K12 ; R5 := 0xae91e43b
	116	[8071]	SELF     	R5 R5 K23 ; R6 := R5; R5 := R5[0x42b04007]
	117	[8071]	LOADK    	R7 K39 ; R7 := "/Lotus/Language/Changyou/AliasNameConfirm"
	118	[8071]	OP_LOADBOOL	R8 1 0 ; R8 := true
	119	[8071]	MOVE     	R9 R4 ; R9 := R4
	120	[8071]	CALL     	R5 5 2 ; R5 := R5(R6,R7,R8,R9)
	121	[8072]	GETUPVAL 	R6 U1 ; R6 := U1
	122	[8072]	GETTABLE 	R6 R6 K40 ; R6 := R6[0xf616a184]
	123	[8072]	MOVE     	R7 R5 ; R7 := R5
	124	[8072]	LOADK    	R8 K41 ; R8 := "OnAccountRenameConfirm"
	125	[8072]	CALL     	R6 3 1 ; R6(R7,R8)
	126	[8073]	RETURN   	R0 1 ; return 
	127	[8076]	GETGLOBAL	R6 K42 ; R6 := 0x76ea806b
	128	[8076]	SELF     	R6 R6 K43 ; R7 := R6; R6 := R6[0x3f3ae64c]
	129	[8076]	LOADK    	R8 := 0.000000
	130	[8076]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	131	[8077]	GETGLOBAL	R7 K5 ; R7 := 0x7b998233
	132	[8077]	MOVE     	R8 R6 ; R8 := R6
	133	[8077]	CALL     	R7 2 2 ; R7 := R7(R8)
	134	[8077]	TEST     	R7 1 ; if R7 then PC := 171
	135	[8077]	JMP      	171 ; PC := 171
	136	[8078]	SELF     	R7 R6 K44 ; R8 := R6; R7 := R6[0x5ca33548]
	137	[8078]	CALL     	R7 2 2 ; R7 := R7(R8)
	138	[8078]	EQ       	1 R7 R0 ; if R7 == R0 then PC := 163
	139	[8078]	JMP      	163 ; PC := 163
	140	[8079]	GETUPVAL 	R7 U1 ; R7 := U1
	141	[8079]	GETTABLE 	R7 R7 K45 ; R7 := R7[0x06d055f9]
	142	[8079]	GETGLOBAL	R8 K46 ; R8 := 0x34291f5c
	143	[8079]	GETTABLE 	R8 R8 K47 ; R8 := R8[0xa7a2e381]
	144	[8079]	CALL     	R8 1 2 ; R8 := R8()
	145	[8079]	LOADK    	R9 := 50.000000
	146	[8079]	LOADK    	R10 := 200.000000
	147	[8079]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	148	[8080]	NEWTABLE 	R8 0 2 ; R8 := {}
	149	[8080]	SETTABLE 	R8 K38 R0 ; R8["NEW_NAME"] := R0
	150	[8080]	SETTABLE 	R8 K48 R7 ; R8["RENAME_COST"] := R7
	151	[8081]	GETGLOBAL	R9 K12 ; R9 := 0xae91e43b
	152	[8081]	SELF     	R9 R9 K23 ; R10 := R9; R9 := R9[0x42b04007]
	153	[8081]	LOADK    	R11 K49 ; R11 := "/Lotus/Language/Menu/Profile_AccountRenameConfirm"
	154	[8081]	OP_LOADBOOL	R12 1 0 ; R12 := true
	155	[8081]	MOVE     	R13 R8 ; R13 := R8
	156	[8081]	CALL     	R9 5 2 ; R9 := R9(R10,R11,R12,R13)
	157	[8082]	GETUPVAL 	R10 U1 ; R10 := U1
	158	[8082]	GETTABLE 	R10 R10 K40 ; R10 := R10[0xf616a184]
	159	[8082]	MOVE     	R11 R9 ; R11 := R9
	160	[8082]	LOADK    	R12 K41 ; R12 := "OnAccountRenameConfirm"
	161	[8082]	CALL     	R10 3 1 ; R10(R11,R12)
	162	[8082]	JMP      	171 ; PC := 171
	163	[8084]	GETUPVAL 	R10 U1 ; R10 := U1
	164	[8084]	GETTABLE 	R10 R10 K22 ; R10 := R10[0xe0cba3ca]
	165	[8084]	GETGLOBAL	R11 K50 ; R11 := 0x603636ad
	166	[8084]	LOADK    	R12 K51 ; R12 := "/Lotus/Language/Menu/Profile_AccountRenameFail_NO_CHANGE"
	167	[8084]	NEWTABLE 	R13 0 1 ; R13 := {}
	168	[8084]	SETTABLE 	R13 K38 R0 ; R13["NEW_NAME"] := R0
	169	[8084]	CALL     	R11 3 0 ; R11,... := R11(R12,R13)
	170	[8084]	CALL     	R10 0 1 ; R10(R11,...)
	171	[8087]	RETURN   	R0 1 ; return 

function #250 <?:8089,8095> (18 instructions, 72 bytes at 000001608DB02250)
3 params, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[8090]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[8090]	MOVE     	R4 R2 ; R4 := R2
	3	[8090]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[8090]	TEST     	R3 1 ; if R3 then PC := 15
	5	[8090]	JMP      	15 ; PC := 15
	6	[8090]	GETGLOBAL	R3 K1 ; R3 := 0x03f57322
	7	[8090]	MOVE     	R4 R2 ; R4 := R2
	8	[8090]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[8090]	EQ       	0 R3 K3 ; if R3 ~= 4.000000 then PC := 15
	10	[8090]	JMP      	15 ; PC := 15
	11	[8091]	GETUPVAL 	R3 U0 ; R3 := U0
	12	[8091]	MOVE     	R4 R0 ; R4 := R0
	13	[8091]	CALL     	R3 2 1 ; R3(R4)
	14	[8091]	JMP      	18 ; PC := 18
	15	[8093]	GETUPVAL 	R3 U0 ; R3 := U0
	16	[8093]	LOADNIL  	R4 R4 ; R4 := nil
	17	[8093]	CALL     	R3 2 1 ; R3(R4)
	18	[8095]	RETURN   	R0 1 ; return 

function #251 <?:8097,8103> (10 instructions, 40 bytes at 000001608DB023F0)
2 params, 4 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[8098]	TEST     	R0 1 ; if R0 then PC := 7
	2	[8098]	JMP      	7 ; PC := 7
	3	[8099]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[8099]	MOVE     	R3 R1 ; R3 := R1
	5	[8099]	CALL     	R2 2 1 ; R2(R3)
	6	[8099]	JMP      	10 ; PC := 10
	7	[8101]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[8101]	LOADNIL  	R3 R3 ; R3 := nil
	9	[8101]	CALL     	R2 2 1 ; R2(R3)
	10	[8103]	RETURN   	R0 1 ; return 

function #252 <?:8105,8108> (17 instructions, 68 bytes at 000001608DB02500)
1 param, 9 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[8106]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 4
	2	[8106]	JMP      	4 ; PC := 4
	3	[8106]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 4
	4	[8106]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[8107]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[8107]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xef3e3165]
	7	[8107]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	8	[8107]	LOADK    	R3 K3 ; R3 := "/Lotus/Language/Menu/Profile_AccountRenameTitle"
	9	[8107]	LOADK    	R4 K4 ; R4 := ""
	10	[8107]	LOADK    	R5 := 24.000000
	11	[8107]	LOADK    	R6 K5 ; R6 := "AccountRename"
	12	[8107]	LOADK    	R7 K6 ; R7 := "OSKAccountRename"
	13	[8107]	NEWTABLE 	R8 0 2 ; R8 := {}
	14	[8107]	SETTABLE 	R8 K7 K8 ; R8["isMultiline"] := false
	15	[8107]	SETTABLE 	R8 K9 R0 ; R8["cancelDisabled"] := R0
	16	[8107]	CALL     	R1 8 1 ; R1(R2,R3,R4,R5,R6,R7,R8)
	17	[8108]	RETURN   	R0 1 ; return 

function #253 <?:8110,8288> (365 instructions, 1460 bytes at 000001608DB02700)
0 params, 72 slots, 5 upvalues, 0 locals, 78 constants, 0 functions
	1	[8111]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[8111]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[8111]	LOADK    	R2 := 0.000000
	4	[8111]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[8112]	LOADK    	R1 := 30.000000
	6	[8113]	LOADK    	R2 := 0.000000
	7	[8114]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	8	[8114]	MOVE     	R4 R0 ; R4 := R0
	9	[8114]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[8114]	TEST     	R3 0 ; if not R3 then PC := 27
	11	[8114]	JMP      	27 ; PC := 27
	12	[8114]	LT       	0 R2 R1 ; if R2 >= R1 then PC := 27
	13	[8114]	JMP      	27 ; PC := 27
	14	[8115]	GETGLOBAL	R3 K3 ; R3 := 0x3d106989
	15	[8115]	LOADK    	R4 K4 ; R4 := "failed to initialize region challenges: no player profile"
	16	[8115]	CALL     	R3 2 1 ; R3(R4)
	17	[8116]	ADD      	R2 R2 K5 ; R2 := R2 + 1.000000
	18	[8117]	GETGLOBAL	R3 K6 ; R3 := 0xcbd666e1
	19	[8117]	LOADK    	R4 K7 ; R4 := 0.100000
	20	[8117]	CALL     	R3 2 1 ; R3(R4)
	21	[8118]	GETGLOBAL	R3 K0 ; R3 := 0x76ea806b
	22	[8118]	SELF     	R3 R3 K1 ; R4 := R3; R3 := R3[0x3f3ae64c]
	23	[8118]	LOADK    	R5 := 0.000000
	24	[8118]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	25	[8118]	MOVE     	R0 R3 ; R0 := R3
	26	[8118]	JMP      	7 ; PC := 7
	27	[8121]	LE       	0 R1 R2 ; if R1 > R2 then PC := 30
	28	[8121]	JMP      	30 ; PC := 30
	29	[8122]	RETURN   	R0 1 ; return 
	30	[8125]	LOADK    	R2 := 0.000000
	31	[8126]	SELF     	R3 R0 K8 ; R4 := R0; R3 := R0[0x80563238]
	32	[8126]	CALL     	R3 2 2 ; R3 := R3(R4)
	33	[8127]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	34	[8127]	MOVE     	R5 R3 ; R5 := R3
	35	[8127]	CALL     	R4 2 2 ; R4 := R4(R5)
	36	[8127]	TEST     	R4 0 ; if not R4 then PC := 51
	37	[8127]	JMP      	51 ; PC := 51
	38	[8127]	LT       	0 R2 R1 ; if R2 >= R1 then PC := 51
	39	[8127]	JMP      	51 ; PC := 51
	40	[8128]	GETGLOBAL	R4 K3 ; R4 := 0x3d106989
	41	[8128]	LOADK    	R5 K9 ; R5 := "failed to initialize region challenges: no game data"
	42	[8128]	CALL     	R4 2 1 ; R4(R5)
	43	[8129]	ADD      	R2 R2 K5 ; R2 := R2 + 1.000000
	44	[8130]	GETGLOBAL	R4 K6 ; R4 := 0xcbd666e1
	45	[8130]	LOADK    	R5 K7 ; R5 := 0.100000
	46	[8130]	CALL     	R4 2 1 ; R4(R5)
	47	[8131]	SELF     	R4 R0 K8 ; R5 := R0; R4 := R0[0x80563238]
	48	[8131]	CALL     	R4 2 2 ; R4 := R4(R5)
	49	[8131]	MOVE     	R3 R4 ; R3 := R4
	50	[8131]	JMP      	33 ; PC := 33
	51	[8134]	LE       	0 R1 R2 ; if R1 > R2 then PC := 57
	52	[8134]	JMP      	57 ; PC := 57
	53	[8135]	GETGLOBAL	R4 K3 ; R4 := 0x3d106989
	54	[8135]	LOADK    	R5 K10 ; R5 := "bailing from region challenges."
	55	[8135]	CALL     	R4 2 1 ; R4(R5)
	56	[8136]	RETURN   	R0 1 ; return 
	57	[8140]	GETGLOBAL	R4 K3 ; R4 := 0x3d106989
	58	[8140]	LOADK    	R5 K11 ; R5 := "initializing region challenges"
	59	[8140]	CALL     	R4 2 1 ; R4(R5)
	60	[8142]	GETUPVAL 	R4 U0 ; R4 := U0
	61	[8142]	GETTABLE 	R4 R4 K12 ; R4 := R4[0x5e35d4d6]
	62	[8142]	CALL     	R4 1 2 ; R4 := R4()
	63	[8143]	SELF     	R5 R4 K13 ; R6 := R4; R5 := R4[0xc1dee03f]
	64	[8143]	CALL     	R5 2 2 ; R5 := R5(R6)
	65	[8145]	GETUPVAL 	R6 U0 ; R6 := U0
	66	[8145]	GETTABLE 	R6 R6 K14 ; R6 := R6[0xd342d13d]
	67	[8145]	CALL     	R6 1 2 ; R6 := R6()
	68	[8146]	LOADK    	R7 := 0.000000
	69	[8147]	OP_LOADBOOL	R8 0 0 ; R8 := false
	70	[8148]	TEST     	R6 0 ; if not R6 then PC := 115
	71	[8148]	JMP      	115 ; PC := 115
	72	[8149]	GETGLOBAL	R9 K15 ; R9 := 0x89326c93
	73	[8149]	SELF     	R9 R9 K16 ; R10 := R9; R9 := R9[0xca9ea368]
	74	[8149]	CALL     	R9 2 2 ; R9 := R9(R10)
	75	[8150]	GETGLOBAL	R10 K17 ; R10 := 0xa94df70b
	76	[8150]	SELF     	R10 R10 K18 ; R11 := R10; R10 := R10[0x85de842a]
	77	[8150]	MOVE     	R12 R9 ; R12 := R9
	78	[8150]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	79	[8150]	TEST     	R10 0 ; if not R10 then PC := 84
	80	[8150]	JMP      	84 ; PC := 84
	81	[8151]	LOADK    	R7 := 3.000000
	82	[8152]	OP_LOADBOOL	R8 1 0 ; R8 := true
	83	[8152]	JMP      	115 ; PC := 115
	84	[8154]	GETGLOBAL	R10 K19 ; R10 := 0xbe190284
	85	[8154]	SELF     	R10 R10 K20 ; R11 := R10; R10 := R10[0xef893aec]
	86	[8154]	CALL     	R10 2 2 ; R10 := R10(R11)
	87	[8155]	GETTABLE 	R11 R10 K21 ; R11 := R10["levelKeyName"]
	88	[8156]	GETGLOBAL	R12 K2 ; R12 := 0x7b998233
	89	[8156]	MOVE     	R13 R11 ; R13 := R11
	90	[8156]	CALL     	R12 2 2 ; R12 := R12(R13)
	91	[8156]	TEST     	R12 1 ; if R12 then PC := 105
	92	[8156]	JMP      	105 ; PC := 105
	93	[8157]	GETGLOBAL	R12 K22 ; R12 := 0xb009bbc6
	94	[8157]	MOVE     	R13 R11 ; R13 := R11
	95	[8157]	CALL     	R12 2 2 ; R12 := R12(R13)
	96	[8158]	GETGLOBAL	R13 K2 ; R13 := 0x7b998233
	97	[8158]	MOVE     	R14 R12 ; R14 := R12
	98	[8158]	CALL     	R13 2 2 ; R13 := R13(R14)
	99	[8158]	TEST     	R13 1 ; if R13 then PC := 115
	100	[8158]	JMP      	115 ; PC := 115
	101	[8159]	SELF     	R13 R12 K23 ; R14 := R12; R13 := R12[0x6c053909]
	102	[8159]	CALL     	R13 2 2 ; R13 := R13(R14)
	103	[8159]	MOVE     	R7 R13 ; R7 := R13
	104	[8160]	JMP      	115 ; PC := 115
	105	[8162]	GETTABLE 	R13 R10 K24 ; R13 := R10["location"]
	106	[8163]	SELF     	R14 R13 K25 ; R15 := R13; R14 := R13[0x56c01834]
	107	[8163]	CALL     	R14 2 2 ; R14 := R14(R15)
	108	[8163]	TEST     	R14 0 ; if not R14 then PC := 115
	109	[8163]	JMP      	115 ; PC := 115
	110	[8164]	SELF     	R14 R4 K26 ; R15 := R4; R14 := R4[0x3ad9ed31]
	111	[8164]	MOVE     	R16 R13 ; R16 := R13
	112	[8164]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	113	[8165]	GETTABLE 	R15 R14 K27 ; R15 := R14["region"]
	114	[8165]	ADD      	R7 R15 K5 ; R7 := R15 + 1.000000
	115	[8171]	GETGLOBAL	R15 K28 ; R15 := 0x0469f296
	116	[8171]	LOADK    	R16 K29 ; R16 := "QUEST_COMPLETE"
	117	[8171]	CALL     	R15 2 2 ; R15 := R15(R16)
	118	[8172]	GETGLOBAL	R16 K30 ; R16 := 0x7ed0a956
	119	[8172]	LOADK    	R17 K31 ; R17 := "/Lotus/Types/Keys/InfestedIntroQuest/InfestedIntroQuestKeyChain"
	120	[8172]	CALL     	R16 2 2 ; R16 := R16(R17)
	121	[8173]	GETGLOBAL	R17 K30 ; R17 := 0x7ed0a956
	122	[8173]	LOADK    	R18 K32 ; R18 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
	123	[8173]	CALL     	R17 2 2 ; R17 := R17(R18)
	124	[8174]	LOADNIL  	R18 R18 ; R18 := nil
	125	[8175]	GETGLOBAL	R19 K15 ; R19 := 0x89326c93
	126	[8175]	SELF     	R19 R19 K33 ; R20 := R19; R19 := R19[0xfb64e76c]
	127	[8175]	CALL     	R19 2 2 ; R19 := R19(R20)
	128	[8176]	OP_LOADBOOL	R20 0 0 ; R20 := false
	129	[8178]	GETGLOBAL	R21 K3 ; R21 := 0x3d106989
	130	[8178]	LOADK    	R22 K34 ; R22 := "regions: "
	131	[8178]	LEN      	R23 R5 ; R23 := # R5
	132	[8178]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	133	[8178]	CALL     	R21 2 1 ; R21(R22)
	134	[8180]	LOADK    	R21 := 1.000000
	135	[8180]	LEN      	R22 R5 ; R22 := # R5
	136	[8180]	LOADK    	R23 := 1.000000
	137	[8180]	FORPREP  	R21 232 ; R21 -= R23; PC := 232
	138	[8181]	GETTABLE 	R25 R5 R24 ; R25 := R5[R24]
	139	[8182]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	140	[8182]	MOVE     	R27 R25 ; R27 := R25
	141	[8182]	CALL     	R26 2 2 ; R26 := R26(R27)
	142	[8182]	TEST     	R26 1 ; if R26 then PC := 232
	143	[8182]	JMP      	232 ; PC := 232
	144	[8183]	GETGLOBAL	R26 K35 ; R26 := 0xcfc01047
	145	[8183]	GETTABLE 	R27 R25 K36 ; R27 := R25["challenges"]
	146	[8183]	CALL     	R26 2 4 ; R26,R27,R28 := R26(R27)
	147	[8183]	JMP      	230 ; PC := 230
	148	[8184]	GETGLOBAL	R31 K37 ; R31 := 0xba7dfcd2
	149	[8184]	SELF     	R31 R31 K38 ; R32 := R31; R31 := R31[0xd87c0114]
	150	[8184]	SELF     	R33 R30 K39 ; R34 := R30; R33 := R30[0xe223e2b1]
	151	[8184]	CALL     	R33 2 0 ; R33,... := R33(R34)
	152	[8184]	CALL     	R31 0 2 ; R31 := R31(R32,...)
	153	[8185]	SELF     	R32 R30 K40 ; R33 := R30; R32 := R30[0x2f5d21d2]
	154	[8185]	CALL     	R32 2 2 ; R32 := R32(R33)
	155	[8186]	LE       	1 R32 R31 ; if R32 <= R31 then PC := 158
	156	[8186]	JMP      	158 ; PC := 158
	157	[8186]	OP_LOADBOOL	R33 0 1 ; R33 := false; PC := 158
	158	[8186]	OP_LOADBOOL	R33 1 0 ; R33 := true
	159	[8190]	TEST     	R33 1 ; if R33 then PC := 230
	160	[8190]	JMP      	230 ; PC := 230
	161	[8190]	TEST     	R6 0 ; if not R6 then PC := 169
	162	[8190]	JMP      	169 ; PC := 169
	163	[8190]	EQ       	1 R24 R7 ; if R24 == R7 then PC := 169
	164	[8190]	JMP      	169 ; PC := 169
	165	[8190]	SELF     	R34 R30 K41 ; R35 := R30; R34 := R30[0xf4ba463e]
	166	[8190]	CALL     	R34 2 2 ; R34 := R34(R35)
	167	[8190]	TEST     	R34 0 ; if not R34 then PC := 230
	168	[8190]	JMP      	230 ; PC := 230
	169	[8192]	GETGLOBAL	R34 K37 ; R34 := 0xba7dfcd2
	170	[8192]	SELF     	R34 R34 K42 ; R35 := R34; R34 := R34[0x9252175f]
	171	[8192]	GETGLOBAL	R36 K15 ; R36 := 0x89326c93
	172	[8192]	SELF     	R36 R36 K43 ; R37 := R36; R36 := R36[0x765dad71]
	173	[8192]	GETGLOBAL	R38 K44 ; R38 := 0x88efc25e
	174	[8192]	MOVE     	R39 R30 ; R39 := R30
	175	[8192]	CALL     	R38 2 0 ; R38,... := R38(R39)
	176	[8192]	CALL     	R36 0 0 ; R36,... := R36(R37,...)
	177	[8192]	CALL     	R34 0 1 ; R34(R35,...)
	178	[8195]	GETGLOBAL	R34 K2 ; R34 := 0x7b998233
	179	[8195]	MOVE     	R35 R19 ; R35 := R19
	180	[8195]	CALL     	R34 2 2 ; R34 := R34(R35)
	181	[8195]	TEST     	R34 1 ; if R34 then PC := 230
	182	[8195]	JMP      	230 ; PC := 230
	183	[8196]	SELF     	R34 R30 K45 ; R35 := R30; R34 := R30[0xd8e82278]
	184	[8196]	CALL     	R34 2 2 ; R34 := R34(R35)
	185	[8196]	EQ       	0 R34 R15 ; if R34 ~= R15 then PC := 230
	186	[8196]	JMP      	230 ; PC := 230
	187	[8197]	EQ       	0 R18 K46 ; if R18 ~= nil then PC := 194
	188	[8197]	JMP      	194 ; PC := 194
	189	[8198]	SELF     	R34 R3 K47 ; R35 := R3; R34 := R3[0x25a6e75e]
	190	[8198]	CALL     	R34 2 2 ; R34 := R34(R35)
	191	[8198]	SELF     	R34 R34 K48 ; R35 := R34; R34 := R34[0xe9768ed0]
	192	[8198]	CALL     	R34 2 2 ; R34 := R34(R35)
	193	[8198]	MOVE     	R18 R34 ; R18 := R34
	194	[8200]	SELF     	R34 R30 K49 ; R35 := R30; R34 := R30[0xcac7abc9]
	195	[8200]	CALL     	R34 2 2 ; R34 := R34(R35)
	196	[8201]	GETGLOBAL	R35 K50 ; R35 := 0xc8802016
	197	[8201]	MOVE     	R36 R18 ; R36 := R18
	198	[8201]	CALL     	R35 2 4 ; R35,R36,R37 := R35(R36)
	199	[8201]	JMP      	228 ; PC := 228
	200	[8202]	GETTABLE 	R40 R39 K51 ; R40 := R39["mItemType"]
	201	[8202]	EQ       	0 R34 R40 ; if R34 ~= R40 then PC := 215
	202	[8202]	JMP      	215 ; PC := 215
	203	[8202]	GETTABLE 	R40 R39 K52 ; R40 := R39["mCompleted"]
	204	[8202]	TEST     	R40 0 ; if not R40 then PC := 215
	205	[8202]	JMP      	215 ; PC := 215
	206	[8203]	GETGLOBAL	R40 K37 ; R40 := 0xba7dfcd2
	207	[8203]	SELF     	R40 R40 K53 ; R41 := R40; R40 := R40[0xf056b179]
	208	[8203]	MOVE     	R42 R19 ; R42 := R19
	209	[8203]	MOVE     	R43 R15 ; R43 := R15
	210	[8203]	LOADNIL  	R44 R44 ; R44 := nil
	211	[8203]	GETTABLE 	R45 R39 K51 ; R45 := R39["mItemType"]
	212	[8203]	CALL     	R40 6 1 ; R40(R41,R42,R43,R44,R45)
	213	[8204]	OP_LOADBOOL	R20 1 0 ; R20 := true
	214	[8204]	JMP      	228 ; PC := 228
	215	[8205]	EQ       	0 R34 R17 ; if R34 ~= R17 then PC := 228
	216	[8205]	JMP      	228 ; PC := 228
	217	[8205]	GETTABLE 	R40 R39 K51 ; R40 := R39["mItemType"]
	218	[8205]	EQ       	0 R40 R16 ; if R40 ~= R16 then PC := 228
	219	[8205]	JMP      	228 ; PC := 228
	220	[8207]	GETGLOBAL	R40 K37 ; R40 := 0xba7dfcd2
	221	[8207]	SELF     	R40 R40 K53 ; R41 := R40; R40 := R40[0xf056b179]
	222	[8207]	MOVE     	R42 R19 ; R42 := R19
	223	[8207]	MOVE     	R43 R15 ; R43 := R15
	224	[8207]	LOADNIL  	R44 R44 ; R44 := nil
	225	[8207]	MOVE     	R45 R17 ; R45 := R17
	226	[8207]	CALL     	R40 6 1 ; R40(R41,R42,R43,R44,R45)
	227	[8208]	OP_LOADBOOL	R20 1 0 ; R20 := true
	228	[8201]	TFORLOOP 	R35 2 ; R38,R39 := R35(R36,R37); if R38 ~= nil then begin PC = 200; R37 := R38 end
	229	[8209]	JMP      	200 ; PC := 200
	230	[8183]	TFORLOOP 	R26 2 ; R29,R30 := R26(R27,R28); if R29 ~= nil then begin PC = 148; R28 := R29 end
	231	[8213]	JMP      	148 ; PC := 148
	232	[8180]	FORLOOP  	R21 138 ; R21 += R23; if R21 <= R22 then begin PC := 138; R24 := R21 end
	233	[8218]	GETUPVAL 	R40 U1 ; R40 := U1
	234	[8218]	EQ       	0 R40 K46 ; if R40 ~= nil then PC := 240
	235	[8218]	JMP      	240 ; PC := 240
	236	[8219]	GETUPVAL 	R40 U0 ; R40 := U0
	237	[8219]	GETTABLE 	R40 R40 K54 ; R40 := R40[0xc00479a5]
	238	[8219]	CALL     	R40 1 2 ; R40 := R40()
	239	[8219]	SETUPVAL 	R40 U1 ; U1 := R40
	240	[8222]	GETUPVAL 	R40 U2 ; R40 := U2
	241	[8222]	CALL     	R40 1 1 ; R40()
	242	[8224]	GETGLOBAL	R40 K55 ; R40 := 0x0032441c
	243	[8224]	GETTABLE 	R40 R40 K56 ; R40 := R40["PlayedFightingGame"]
	244	[8224]	TEST     	R40 0 ; if not R40 then PC := 258
	245	[8224]	JMP      	258 ; PC := 258
	246	[8225]	GETGLOBAL	R40 K37 ; R40 := 0xba7dfcd2
	247	[8225]	SELF     	R40 R40 K53 ; R41 := R40; R40 := R40[0xf056b179]
	248	[8225]	MOVE     	R42 R19 ; R42 := R19
	249	[8225]	GETGLOBAL	R43 K28 ; R43 := 0x0469f296
	250	[8225]	LOADK    	R44 K57 ; R44 := "PLAY_MINIGAME"
	251	[8225]	CALL     	R43 2 0 ; R43,... := R43(R44)
	252	[8225]	CALL     	R40 0 1 ; R40(R41,...)
	253	[8226]	GETGLOBAL	R40 K58 ; R40 := 0x25d99d89
	254	[8226]	SELF     	R40 R40 K59 ; R41 := R40; R40 := R40[0xd723c617]
	255	[8226]	CALL     	R40 2 1 ; R40(R41)
	256	[8227]	GETGLOBAL	R40 K55 ; R40 := 0x0032441c
	257	[8227]	SETTABLE 	R40 K56 K46 ; R40["PlayedFightingGame"] := nil
	258	[8231]	GETGLOBAL	R40 K28 ; R40 := 0x0469f296
	259	[8231]	LOADK    	R41 K60 ; R41 := "LORE_FRAGMENT_SCAN"
	260	[8231]	CALL     	R40 2 2 ; R40 := R40(R41)
	261	[8232]	GETGLOBAL	R41 K37 ; R41 := 0xba7dfcd2
	262	[8232]	SELF     	R41 R41 K38 ; R42 := R41; R41 := R41[0xd87c0114]
	263	[8232]	LOADK    	R43 K61 ; R43 := "MPCephFragments"
	264	[8232]	CALL     	R41 3 2 ; R41 := R41(R42,R43)
	265	[8233]	SELF     	R42 R3 K47 ; R43 := R3; R42 := R3[0x25a6e75e]
	266	[8233]	CALL     	R42 2 2 ; R42 := R42(R43)
	267	[8233]	SELF     	R42 R42 K62 ; R43 := R42; R42 := R42[0x2b7da058]
	268	[8233]	CALL     	R42 2 2 ; R42 := R42(R43)
	269	[8234]	GETGLOBAL	R43 K35 ; R43 := 0xcfc01047
	270	[8234]	MOVE     	R44 R42 ; R44 := R42
	271	[8234]	CALL     	R43 2 4 ; R43,R44,R45 := R43(R44)
	272	[8234]	JMP      	288 ; PC := 288
	273	[8235]	GETTABLE 	R48 R47 K63 ; R48 := R47["mRegion"]
	274	[8235]	EQ       	0 R48 K64 ; if R48 ~= "/Lotus/Language/Locations/Mars" then PC := 288
	275	[8235]	JMP      	288 ; PC := 288
	276	[8236]	GETTABLE 	R48 R47 K65 ; R48 := R47["mItemCount"]
	277	[8236]	SUB      	R48 R48 R41 ; R48 := R48 - R41
	278	[8237]	LT       	0 K66 R48 ; if 0.000000 >= R48 then PC := 288
	279	[8237]	JMP      	288 ; PC := 288
	280	[8239]	GETGLOBAL	R49 K37 ; R49 := 0xba7dfcd2
	281	[8239]	SELF     	R49 R49 K67 ; R50 := R49; R49 := R49[0xd8da7235]
	282	[8239]	MOVE     	R51 R19 ; R51 := R19
	283	[8239]	MOVE     	R52 R40 ; R52 := R40
	284	[8239]	MOVE     	R53 R48 ; R53 := R48
	285	[8239]	CALL     	R49 5 1 ; R49(R50,R51,R52,R53)
	286	[8240]	OP_LOADBOOL	R20 1 0 ; R20 := true
	287	[8241]	JMP      	290 ; PC := 290
	288	[8234]	TFORLOOP 	R43 2 ; R46,R47 := R43(R44,R45); if R46 ~= nil then begin PC = 273; R45 := R46 end
	289	[8243]	JMP      	273 ; PC := 273
	290	[8246]	TEST     	R20 0 ; if not R20 then PC := 294
	291	[8246]	JMP      	294 ; PC := 294
	292	[8247]	SELF     	R49 R3 K59 ; R50 := R3; R49 := R3[0xd723c617]
	293	[8247]	CALL     	R49 2 1 ; R49(R50)
	294	[8252]	GETGLOBAL	R49 K68 ; R49 := _T
	295	[8252]	GETTABLE 	R49 R49 K69 ; R49 := R49["CachedConstructionProjects"]
	296	[8252]	TEST     	R49 1 ; if R49 then PC := 303
	297	[8252]	JMP      	303 ; PC := 303
	298	[8253]	GETGLOBAL	R49 K68 ; R49 := _T
	299	[8253]	GETUPVAL 	R50 U3 ; R50 := U3
	300	[8253]	GETTABLE 	R50 R50 K70 ; R50 := R50[0xe8ee3de5]
	301	[8253]	CALL     	R50 1 2 ; R50 := R50()
	302	[8253]	SETTABLE 	R49 K69 R50 ; R49["CachedConstructionProjects"] := R50
	303	[8255]	GETGLOBAL	R49 K68 ; R49 := _T
	304	[8255]	GETTABLE 	R49 R49 K69 ; R49 := R49["CachedConstructionProjects"]
	305	[8256]	LOADK    	R50 := 1.000000
	306	[8256]	LEN      	R51 R49 ; R51 := # R49
	307	[8256]	LOADK    	R52 := 1.000000
	308	[8256]	FORPREP  	R50 364 ; R50 -= R52; PC := 364
	309	[8257]	GETTABLE 	R54 R49 R53 ; R54 := R49[R53]
	310	[8258]	GETTABLE 	R55 R54 K71 ; R55 := R54["goalId"]
	311	[8259]	GETTABLE 	R56 R54 K72 ; R56 := R54["progress"]
	312	[8259]	EQ       	0 R56 K66 ; if R56 ~= 0.000000 then PC := 364
	313	[8259]	JMP      	364 ; PC := 364
	314	[8260]	GETTABLE 	R56 R54 K73 ; R56 := R54["info"]
	315	[8261]	GETTABLE 	R57 R56 K74 ; R57 := R56["mTasks"]
	316	[8262]	OP_LOADBOOL	R58 1 0 ; R58 := true
	317	[8263]	GETGLOBAL	R59 K35 ; R59 := 0xcfc01047
	318	[8263]	MOVE     	R60 R57 ; R60 := R57
	319	[8263]	CALL     	R59 2 4 ; R59,R60,R61 := R59(R60)
	320	[8263]	JMP      	355 ; PC := 355
	321	[8264]	GETGLOBAL	R64 K2 ; R64 := 0x7b998233
	322	[8264]	MOVE     	R65 R63 ; R65 := R63
	323	[8264]	CALL     	R64 2 2 ; R64 := R64(R65)
	324	[8264]	TEST     	R64 1 ; if R64 then PC := 355
	325	[8264]	JMP      	355 ; PC := 355
	326	[8265]	GETGLOBAL	R64 K37 ; R64 := 0xba7dfcd2
	327	[8265]	SELF     	R64 R64 K38 ; R65 := R64; R64 := R64[0xd87c0114]
	328	[8265]	SELF     	R66 R63 K39 ; R67 := R63; R66 := R63[0xe223e2b1]
	329	[8265]	CALL     	R66 2 0 ; R66,... := R66(R67)
	330	[8265]	CALL     	R64 0 2 ; R64 := R64(R65,...)
	331	[8266]	GETGLOBAL	R65 K22 ; R65 := 0xb009bbc6
	332	[8266]	MOVE     	R66 R63 ; R66 := R63
	333	[8266]	CALL     	R65 2 2 ; R65 := R65(R66)
	334	[8267]	SELF     	R66 R65 K40 ; R67 := R65; R66 := R65[0x2f5d21d2]
	335	[8267]	CALL     	R66 2 2 ; R66 := R66(R67)
	336	[8269]	LT       	0 R64 R66 ; if R64 >= R66 then PC := 355
	337	[8269]	JMP      	355 ; PC := 355
	338	[8271]	GETGLOBAL	R67 K15 ; R67 := 0x89326c93
	339	[8271]	SELF     	R67 R67 K43 ; R68 := R67; R67 := R67[0x765dad71]
	340	[8271]	GETGLOBAL	R69 K44 ; R69 := 0x88efc25e
	341	[8271]	MOVE     	R70 R63 ; R70 := R63
	342	[8271]	CALL     	R69 2 0 ; R69,... := R69(R70)
	343	[8271]	CALL     	R67 0 2 ; R67 := R67(R68,...)
	344	[8272]	GETGLOBAL	R68 K37 ; R68 := 0xba7dfcd2
	345	[8272]	SELF     	R68 R68 K42 ; R69 := R68; R68 := R68[0x9252175f]
	346	[8272]	MOVE     	R70 R67 ; R70 := R67
	347	[8272]	CALL     	R68 3 2 ; R68 := R68(R69,R70)
	348	[8272]	TEST     	R68 1 ; if R68 then PC := 354
	349	[8272]	JMP      	354 ; PC := 354
	350	[8273]	GETGLOBAL	R68 K15 ; R68 := 0x89326c93
	351	[8273]	SELF     	R68 R68 K75 ; R69 := R68; R68 := R68[0x59c96e77]
	352	[8273]	MOVE     	R70 R67 ; R70 := R67
	353	[8273]	CALL     	R68 3 1 ; R68(R69,R70)
	354	[8276]	OP_LOADBOOL	R58 0 0 ; R58 := false
	355	[8263]	TFORLOOP 	R59 2 ; R62,R63 := R59(R60,R61); if R62 ~= nil then begin PC = 321; R61 := R62 end
	356	[8278]	JMP      	321 ; PC := 321
	357	[8281]	TEST     	R58 0 ; if not R58 then PC := 364
	358	[8281]	JMP      	364 ; PC := 364
	359	[8282]	SETUPVAL 	R54 U4 ; U4 := R54
	360	[8283]	SELF     	R68 R3 K76 ; R69 := R3; R68 := R3[0x39ff07d9]
	361	[8283]	MOVE     	R70 R55 ; R70 := R55
	362	[8283]	LOADK    	R71 K77 ; R71 := "OnClaimRelayTasksComplete"
	363	[8283]	CALL     	R68 4 1 ; R68(R69,R70,R71)
	364	[8256]	FORLOOP  	R50 309 ; R50 += R52; if R50 <= R51 then begin PC := 309; R53 := R50 end
	365	[8288]	RETURN   	R0 1 ; return 

function #254 <?:8290,8292> (3 instructions, 12 bytes at 000001608DB03B60)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[8291]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[8291]	CALL     	R0 1 1 ; R0()
	3	[8292]	RETURN   	R0 1 ; return 

function #255 <?:8294,8298> (11 instructions, 44 bytes at 000001608DB03C30)
0 params, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[8295]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[8295]	GETGLOBAL	R1 K1 ; R1 := 0x09de914d
	3	[8295]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8295]	TEST     	R0 1 ; if R0 then PC := 11
	5	[8295]	JMP      	11 ; PC := 11
	6	[8296]	GETGLOBAL	R0 K3 ; R0 := 0xae91e43b
	7	[8296]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x1fd6abd0]
	8	[8296]	GETGLOBAL	R2 K1 ; R2 := 0x09de914d
	9	[8296]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[8296]	SETGLOBALHASH	R0 K2 ; mPurchasePopupMovie := R0
	11	[8298]	RETURN   	R0 1 ; return 

function #256 <?:8300,8360> (168 instructions, 672 bytes at 000001608DB03DA0)
0 params, 31 slots, 2 upvalues, 0 locals, 36 constants, 0 functions
	1	[8301]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[8301]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[8301]	LOADK    	R2 := 0.000000
	4	[8301]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[8303]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[8303]	MOVE     	R2 R0 ; R2 := R0
	7	[8303]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[8303]	TEST     	R1 1 ; if R1 then PC := 16
	9	[8303]	JMP      	16 ; PC := 16
	10	[8303]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	11	[8303]	GETGLOBAL	R2 K3 ; R2 := _T
	12	[8303]	GETTABLE 	R2 R2 K4 ; R2 := R2["ShipDecos"]
	13	[8303]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[8303]	TEST     	R1 0 ; if not R1 then PC := 17
	15	[8303]	JMP      	17 ; PC := 17
	16	[8304]	RETURN   	R0 1 ; return 
	17	[8307]	NEWTABLE 	R1 0 0 ; R1 := {}
	18	[8308]	NEWTABLE 	R2 0 0 ; R2 := {}
	19	[8309]	NEWTABLE 	R3 0 0 ; R3 := {}
	20	[8310]	NEWTABLE 	R4 0 0 ; R4 := {}
	21	[8311]	NEWTABLE 	R5 0 0 ; R5 := {}
	22	[8312]	NEWTABLE 	R6 0 0 ; R6 := {}
	23	[8313]	NEWTABLE 	R7 0 0 ; R7 := {}
	24	[8315]	SELF     	R8 R0 K5 ; R9 := R0; R8 := R0[0x80563238]
	25	[8315]	CALL     	R8 2 2 ; R8 := R8(R9)
	26	[8316]	SELF     	R9 R8 K6 ; R10 := R8; R9 := R8[0x911c6241]
	27	[8316]	OP_LOADBOOL	R11 1 0 ; R11 := true
	28	[8316]	GETUPVAL 	R12 U0 ; R12 := U0
	29	[8316]	GETTABLE 	R12 R12 K7 ; R12 := R12[0x23ddc82a]
	30	[8316]	CALL     	R12 1 0 ; R12,... := R12()
	31	[8316]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	32	[8317]	LOADK    	R10 := 1.000000
	33	[8317]	LEN      	R11 R9 ; R11 := # R9
	34	[8317]	LOADK    	R12 := 1.000000
	35	[8317]	FORPREP  	R10 154 ; R10 -= R12; PC := 154
	36	[8318]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	37	[8318]	GETTABLE 	R14 R14 K8 ; R14 := R14["mPlacedDecos"]
	38	[8319]	LOADK    	R15 := 1.000000
	39	[8319]	LEN      	R16 R14 ; R16 := # R14
	40	[8319]	LOADK    	R17 := 1.000000
	41	[8319]	FORPREP  	R15 153 ; R15 -= R17; PC := 153
	42	[8320]	GETTABLE 	R19 R14 R18 ; R19 := R14[R18]
	43	[8321]	SELF     	R20 R19 K9 ; R21 := R19; R20 := R19[0xf537cfc7]
	44	[8321]	CALL     	R20 2 2 ; R20 := R20(R21)
	45	[8322]	GETGLOBAL	R21 K3 ; R21 := _T
	46	[8322]	GETTABLE 	R21 R21 K4 ; R21 := R21["ShipDecos"]
	47	[8322]	GETTABLE 	R21 R21 R20 ; R21 := R21[R20]
	48	[8323]	OP_LOADBOOL	R22 0 0 ; R22 := false
	49	[8325]	GETGLOBAL	R23 K2 ; R23 := 0x7b998233
	50	[8325]	MOVE     	R24 R21 ; R24 := R21
	51	[8325]	CALL     	R23 2 2 ; R23 := R23(R24)
	52	[8325]	TEST     	R23 1 ; if R23 then PC := 138
	53	[8325]	JMP      	138 ; PC := 138
	54	[8325]	SELF     	R23 R21 K10 ; R24 := R21; R23 := R21[0xf2deaf69]
	55	[8325]	GETGLOBAL	R25 K11 ; R25 := 0x10828333
	56	[8325]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	57	[8325]	TEST     	R23 0 ; if not R23 then PC := 138
	58	[8325]	JMP      	138 ; PC := 138
	59	[8326]	GETTABLE 	R23 R19 K12 ; R23 := R19["customizationInfo"]
	60	[8327]	GETTABLE 	R24 R23 K13 ; R24 := R23["mLoadOutType"]
	61	[8330]	EQ       	1 R24 K15 ; if R24 == 8.000000 then PC := 75
	62	[8330]	JMP      	75 ; PC := 75
	63	[8330]	GETTABLE 	R25 R23 K16 ; R25 := R23["mLoadOutPreset"]
	64	[8330]	SELF     	R25 R25 K17 ; R26 := R25; R25 := R25[0x0384916a]
	65	[8330]	CALL     	R25 2 2 ; R25 := R25(R26)
	66	[8330]	TEST     	R25 0 ; if not R25 then PC := 75
	67	[8330]	JMP      	75 ; PC := 75
	68	[8330]	GETTABLE 	R25 R23 K16 ; R25 := R23["mLoadOutPreset"]
	69	[8330]	GETTABLE 	R25 R25 K18 ; R25 := R25["mItemId"]
	70	[8330]	GETTABLE 	R25 R25 K19 ; R25 := R25["mId"]
	71	[8330]	GETGLOBAL	R26 K14 ; R26 := 0x6c97a788
	72	[8330]	GETTABLE 	R26 R26 K20 ; R26 := R26["InvalidItemID"]
	73	[8330]	EQ       	0 R25 R26 ; if R25 ~= R26 then PC := 87
	74	[8330]	JMP      	87 ; PC := 87
	75	[8331]	GETTABLE 	R25 R23 K21 ; R25 := R23["mVehiclePreset"]
	76	[8331]	SELF     	R25 R25 K17 ; R26 := R25; R25 := R25[0x0384916a]
	77	[8331]	CALL     	R25 2 2 ; R25 := R25(R26)
	78	[8331]	TEST     	R25 0 ; if not R25 then PC := 138
	79	[8331]	JMP      	138 ; PC := 138
	80	[8331]	GETTABLE 	R25 R23 K21 ; R25 := R23["mVehiclePreset"]
	81	[8331]	GETTABLE 	R25 R25 K18 ; R25 := R25["mItemId"]
	82	[8331]	GETTABLE 	R25 R25 K19 ; R25 := R25["mId"]
	83	[8331]	GETGLOBAL	R26 K14 ; R26 := 0x6c97a788
	84	[8331]	GETTABLE 	R26 R26 K20 ; R26 := R26["InvalidItemID"]
	85	[8331]	EQ       	1 R25 R26 ; if R25 == R26 then PC := 138
	86	[8331]	JMP      	138 ; PC := 138
	87	[8333]	GETTABLE 	R25 R23 K16 ; R25 := R23["mLoadOutPreset"]
	88	[8333]	GETTABLE 	R25 R25 K18 ; R25 := R25["mItemId"]
	89	[8333]	GETTABLE 	R25 R25 K19 ; R25 := R25["mId"]
	90	[8333]	GETTABLE 	R26 R23 K21 ; R26 := R23["mVehiclePreset"]
	91	[8333]	GETTABLE 	R26 R26 K18 ; R26 := R26["mItemId"]
	92	[8333]	GETTABLE 	R26 R26 K19 ; R26 := R26["mId"]
	93	[8333]	MOVE     	R27 R24 ; R27 := R24
	94	[8333]	CONCAT   	R25 R25 R27 ; R25 := R25 .. R26 .. R27
	95	[8335]	GETTABLE 	R26 R2 R25 ; R26 := R2[R25]
	96	[8335]	EQ       	0 R26 K22 ; if R26 ~= nil then PC := 113
	97	[8335]	JMP      	113 ; PC := 113
	98	[8336]	GETGLOBAL	R26 K23 ; R26 := 0x33bdd652
	99	[8336]	GETTABLE 	R26 R26 K24 ; R26 := R26[0x23d5322f]
	100	[8336]	MOVE     	R27 R5 ; R27 := R5
	101	[8336]	NEWTABLE 	R28 0 3 ; R28 := {}
	102	[8336]	GETTABLE 	R29 R23 K16 ; R29 := R23["mLoadOutPreset"]
	103	[8336]	SELF     	R29 R29 K26 ; R30 := R29; R29 := R29[0x8f89d633]
	104	[8336]	CALL     	R29 2 2 ; R29 := R29(R30)
	105	[8336]	SETTABLE 	R28 K25 R29 ; R28["Preset"] := R29
	106	[8336]	GETTABLE 	R29 R23 K21 ; R29 := R23["mVehiclePreset"]
	107	[8336]	SELF     	R29 R29 K26 ; R30 := R29; R29 := R29[0x8f89d633]
	108	[8336]	CALL     	R29 2 2 ; R29 := R29(R30)
	109	[8336]	SETTABLE 	R28 K27 R29 ; R28["VehiclePreset"] := R29
	110	[8336]	SETTABLE 	R28 K28 R24 ; R28["LoadOutType"] := R24
	111	[8336]	CALL     	R26 3 1 ; R26(R27,R28)
	112	[8337]	SETTABLE 	R2 R25 K29 ; R2[R25] := 1.000000
	113	[8340]	GETTABLE 	R26 R14 R18 ; R26 := R14[R18]
	114	[8340]	GETTABLE 	R26 R26 K12 ; R26 := R26["customizationInfo"]
	115	[8340]	GETTABLE 	R26 R26 K16 ; R26 := R26["mLoadOutPreset"]
	116	[8340]	SELF     	R26 R26 K30 ; R27 := R26; R26 := R26[0xbc051a36]
	117	[8340]	OP_LOADBOOL	R28 0 0 ; R28 := false
	118	[8340]	CALL     	R26 3 1 ; R26(R27,R28)
	119	[8341]	GETTABLE 	R26 R14 R18 ; R26 := R14[R18]
	120	[8341]	GETTABLE 	R26 R26 K12 ; R26 := R26["customizationInfo"]
	121	[8341]	GETTABLE 	R26 R26 K21 ; R26 := R26["mVehiclePreset"]
	122	[8341]	SELF     	R26 R26 K30 ; R27 := R26; R26 := R26[0xbc051a36]
	123	[8341]	OP_LOADBOOL	R28 0 0 ; R28 := false
	124	[8341]	CALL     	R26 3 1 ; R26(R27,R28)
	125	[8343]	SELF     	R26 R21 K31 ; R27 := R21; R26 := R21[0xf5b90b23]
	126	[8343]	CALL     	R26 2 2 ; R26 := R26(R27)
	127	[8343]	GETTABLE 	R27 R14 R18 ; R27 := R14[R18]
	128	[8343]	GETTABLE 	R27 R27 K12 ; R27 := R27["customizationInfo"]
	129	[8343]	GETTABLE 	R27 R27 K16 ; R27 := R27["mLoadOutPreset"]
	130	[8343]	SETTABLE 	R26 K16 R27 ; R26["mLoadOutPreset"] := R27
	131	[8344]	SELF     	R26 R21 K31 ; R27 := R21; R26 := R21[0xf5b90b23]
	132	[8344]	CALL     	R26 2 2 ; R26 := R26(R27)
	133	[8344]	GETTABLE 	R27 R14 R18 ; R27 := R14[R18]
	134	[8344]	GETTABLE 	R27 R27 K12 ; R27 := R27["customizationInfo"]
	135	[8344]	GETTABLE 	R27 R27 K21 ; R27 := R27["mVehiclePreset"]
	136	[8344]	SETTABLE 	R26 K21 R27 ; R26["mVehiclePreset"] := R27
	137	[8346]	OP_LOADBOOL	R22 1 0 ; R22 := true
	138	[8350]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	139	[8350]	MOVE     	R27 R21 ; R27 := R21
	140	[8350]	CALL     	R26 2 2 ; R26 := R26(R27)
	141	[8350]	TEST     	R26 1 ; if R26 then PC := 153
	142	[8350]	JMP      	153 ; PC := 153
	143	[8350]	SELF     	R26 R21 K10 ; R27 := R21; R26 := R21[0xf2deaf69]
	144	[8350]	GETGLOBAL	R28 K11 ; R28 := 0x10828333
	145	[8350]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	146	[8350]	TEST     	R26 0 ; if not R26 then PC := 153
	147	[8350]	JMP      	153 ; PC := 153
	148	[8350]	TEST     	R22 0 ; if not R22 then PC := 153
	149	[8350]	JMP      	153 ; PC := 153
	150	[8351]	LEN      	R26 R1 ; R26 := # R1
	151	[8351]	ADD      	R26 R26 K29 ; R26 := R26 + 1.000000
	152	[8351]	SETTABLE 	R1 R26 R21 ; R1[R26] := R21
	153	[8319]	FORLOOP  	R15 42 ; R15 += R17; if R15 <= R16 then begin PC := 42; R18 := R15 end
	154	[8317]	FORLOOP  	R10 36 ; R10 += R12; if R10 <= R11 then begin PC := 36; R13 := R10 end
	155	[8356]	LEN      	R26 R1 ; R26 := # R1
	156	[8356]	EQ       	1 R26 K32 ; if R26 == 0.000000 then PC := 168
	157	[8356]	JMP      	168 ; PC := 168
	158	[8357]	GETUPVAL 	R26 U1 ; R26 := U1
	159	[8357]	GETTABLE 	R26 R26 K33 ; R26 := R26[0x8664c443]
	160	[8357]	LOADNIL  	R27 R27 ; R27 := nil
	161	[8357]	CALL     	R26 2 1 ; R26(R27)
	162	[8358]	GETGLOBAL	R26 K3 ; R26 := _T
	163	[8358]	GETTABLE 	R26 R26 K34 ; R26 := R26["ActionFigureLoadOutLoader"]
	164	[8358]	SELF     	R26 R26 K35 ; R27 := R26; R26 := R26[0x382439cd]
	165	[8358]	MOVE     	R28 R1 ; R28 := R1
	166	[8358]	MOVE     	R29 R5 ; R29 := R5
	167	[8358]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	168	[8360]	RETURN   	R0 1 ; return 

function #257 <?:8362,8363> (1 instruction, 4 bytes at 000001608DB04330)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[8363]	RETURN   	R0 1 ; return 

function #258 <?:8365,8366> (1 instruction, 4 bytes at 000001608DB04400)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[8366]	RETURN   	R0 1 ; return 

function #259 <?:8368,8434> (222 instructions, 888 bytes at 000001608BD48B90)
2 params, 14 slots, 2 upvalues, 0 locals, 53 constants, 0 functions
	1	[8371]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[8371]	GETTABLE 	R3 R3 K0 ; R3 := R3["KEY_TAG"]
	3	[8372]	GETGLOBAL	R4 K1 ; R4 := 0xb009bbc6
	4	[8372]	MOVE     	R5 R0 ; R5 := R0
	5	[8372]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[8373]	LOADK    	R5 K2 ; R5 := ""
	7	[8374]	GETUPVAL 	R6 U0 ; R6 := U0
	8	[8374]	GETTABLE 	R6 R6 K3 ; R6 := R6[0x5e35d4d6]
	9	[8374]	CALL     	R6 1 2 ; R6 := R6()
	10	[8376]	GETGLOBAL	R7 K4 ; R7 := 0x7f5022cf
	11	[8376]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x04981ab3]
	12	[8376]	MOVE     	R8 R0 ; R8 := R0
	13	[8376]	CALL     	R7 2 2 ; R7 := R7(R8)
	14	[8376]	EQ       	1 R7 K6 ; if R7 == "dojo" then PC := 22
	15	[8376]	JMP      	22 ; PC := 22
	16	[8376]	GETGLOBAL	R7 K4 ; R7 := 0x7f5022cf
	17	[8376]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x04981ab3]
	18	[8376]	MOVE     	R8 R0 ; R8 := R0
	19	[8376]	CALL     	R7 2 2 ; R7 := R7(R8)
	20	[8376]	EQ       	0 R7 K7 ; if R7 ~= "drydock" then PC := 39
	21	[8376]	JMP      	39 ; PC := 39
	22	[8377]	GETGLOBAL	R7 K4 ; R7 := 0x7f5022cf
	23	[8377]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x04981ab3]
	24	[8377]	MOVE     	R8 R0 ; R8 := R0
	25	[8377]	CALL     	R7 2 2 ; R7 := R7(R8)
	26	[8377]	EQ       	0 R7 K7 ; if R7 ~= "drydock" then PC := 30
	27	[8377]	JMP      	30 ; PC := 30
	28	[8378]	GETGLOBAL	R7 K8 ; R7 := 0x0032441c
	29	[8378]	SETTABLE 	R7 K9 K10 ; R7["ForceTeleportToDrydock"] := true
	30	[8380]	GETGLOBAL	R7 K11 ; R7 := _T
	31	[8380]	GETTABLE 	R7 R7 K12 ; R7 := R7["SquadOverlay"]
	32	[8380]	SELF     	R7 R7 K13 ; R8 := R7; R7 := R7[0xe4162eed]
	33	[8380]	LOADK    	R9 K14 ; R9 := "InitiateDojoVisit"
	34	[8380]	LOADK    	R10 K2 ; R10 := ""
	35	[8380]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	36	[8381]	OP_LOADBOOL	R7 1 0 ; R7 := true
	37	[8381]	RETURN   	R7 2 ; return R7 
	38	[8381]	JMP      	62 ; PC := 62
	39	[8382]	GETGLOBAL	R7 K15 ; R7 := 0x7b998233
	40	[8382]	MOVE     	R8 R4 ; R8 := R4
	41	[8382]	CALL     	R7 2 2 ; R7 := R7(R8)
	42	[8382]	TEST     	R7 1 ; if R7 then PC := 54
	43	[8382]	JMP      	54 ; PC := 54
	44	[8382]	SELF     	R7 R4 K16 ; R8 := R4; R7 := R4[0xf2deaf69]
	45	[8382]	GETGLOBAL	R9 K17 ; R9 := gKeyItemType
	46	[8382]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	47	[8382]	TEST     	R7 0 ; if not R7 then PC := 54
	48	[8382]	JMP      	54 ; PC := 54
	49	[8383]	SELF     	R7 R4 K18 ; R8 := R4; R7 := R4[0xef893aec]
	50	[8383]	CALL     	R7 2 2 ; R7 := R7(R8)
	51	[8383]	MOVE     	R2 R7 ; R2 := R7
	52	[8384]	MOVE     	R5 R0 ; R5 := R0
	53	[8384]	JMP      	62 ; PC := 62
	54	[8387]	SELF     	R7 R6 K19 ; R8 := R6; R7 := R6[0x3ad9ed31]
	55	[8387]	GETGLOBAL	R9 K20 ; R9 := 0x0469f296
	56	[8387]	MOVE     	R10 R0 ; R10 := R0
	57	[8387]	CALL     	R9 2 0 ; R9,... := R9(R10)
	58	[8387]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	59	[8387]	GETTABLE 	R2 R7 K21 ; R2 := R7["mission"]
	60	[8388]	LOADK    	R3 K2 ; R3 := ""
	61	[8389]	LOADNIL  	R5 R5 ; R5 := nil
	62	[8392]	GETGLOBAL	R7 K15 ; R7 := 0x7b998233
	63	[8392]	GETTABLE 	R8 R2 K22 ; R8 := R2["levelOverride"]
	64	[8392]	CALL     	R7 2 2 ; R7 := R7(R8)
	65	[8392]	TEST     	R7 0 ; if not R7 then PC := 84
	66	[8392]	JMP      	84 ; PC := 84
	67	[8392]	TEST     	R0 0 ; if not R0 then PC := 84
	68	[8392]	JMP      	84 ; PC := 84
	69	[8392]	GETGLOBAL	R7 K4 ; R7 := 0x7f5022cf
	70	[8392]	GETTABLE 	R7 R7 K23 ; R7 := R7[0xa5c556b9]
	71	[8392]	MOVE     	R8 R0 ; R8 := R0
	72	[8392]	LOADK    	R9 K24 ; R9 := ".level"
	73	[8392]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	74	[8392]	TEST     	R7 0 ; if not R7 then PC := 84
	75	[8392]	JMP      	84 ; PC := 84
	76	[8393]	GETGLOBAL	R7 K25 ; R7 := 0x6c97a788
	77	[8393]	GETTABLE 	R7 R7 K26 ; R7 := R7[0x6e0e9f85]
	78	[8393]	CALL     	R7 1 2 ; R7 := R7()
	79	[8393]	MOVE     	R2 R7 ; R2 := R7
	80	[8394]	GETGLOBAL	R7 K27 ; R7 := 0x7ed0a956
	81	[8394]	MOVE     	R8 R0 ; R8 := R0
	82	[8394]	CALL     	R7 2 2 ; R7 := R7(R8)
	83	[8394]	SETTABLE 	R2 K22 R7 ; R2["levelOverride"] := R7
	84	[8397]	GETGLOBAL	R7 K15 ; R7 := 0x7b998233
	85	[8397]	GETTABLE 	R8 R2 K22 ; R8 := R2["levelOverride"]
	86	[8397]	CALL     	R7 2 2 ; R7 := R7(R8)
	87	[8397]	TEST     	R7 1 ; if R7 then PC := 220
	88	[8397]	JMP      	220 ; PC := 220
	89	[8398]	GETGLOBAL	R7 K15 ; R7 := 0x7b998233
	90	[8398]	MOVE     	R8 R1 ; R8 := R1
	91	[8398]	CALL     	R7 2 2 ; R7 := R7(R8)
	92	[8398]	TEST     	R7 1 ; if R7 then PC := 98
	93	[8398]	JMP      	98 ; PC := 98
	94	[8399]	GETGLOBAL	R7 K27 ; R7 := 0x7ed0a956
	95	[8399]	MOVE     	R8 R1 ; R8 := R1
	96	[8399]	CALL     	R7 2 2 ; R7 := R7(R8)
	97	[8399]	SETTABLE 	R2 K28 R7 ; R2["keyChainName"] := R7
	98	[8402]	EQ       	0 R5 K29 ; if R5 ~= nil then PC := 116
	99	[8402]	JMP      	116 ; PC := 116
	100	[8402]	GETTABLE 	R7 R2 K30 ; R7 := R2["missionType"]
	101	[8402]	EQ       	0 R7 K31 ; if R7 ~= 31.000000 then PC := 116
	102	[8402]	JMP      	116 ; PC := 116
	103	[8403]	GETGLOBAL	R7 K11 ; R7 := _T
	104	[8403]	NEWTABLE 	R8 0 2 ; R8 := {}
	105	[8403]	SETTABLE 	R8 K33 K10 ; R8["teleportNeeded"] := true
	106	[8403]	SETTABLE 	R8 K34 R0 ; R8["name"] := R0
	107	[8403]	SETTABLE 	R7 K32 R8 ; R7["RailjackAutoLaunchPending"] := R8
	108	[8404]	GETGLOBAL	R7 K11 ; R7 := _T
	109	[8404]	GETTABLE 	R7 R7 K12 ; R7 := R7["SquadOverlay"]
	110	[8404]	SELF     	R7 R7 K13 ; R8 := R7; R7 := R7[0xe4162eed]
	111	[8404]	LOADK    	R9 K35 ; R9 := "AutoLaunchRailjackMission"
	112	[8404]	LOADK    	R10 K2 ; R10 := ""
	113	[8404]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	114	[8405]	OP_LOADBOOL	R7 1 0 ; R7 := true
	115	[8405]	RETURN   	R7 2 ; return R7 
	116	[8408]	GETTABLE 	R7 R2 K36 ; R7 := R2["soloMode"]
	117	[8408]	TEST     	R7 1 ; if R7 then PC := 153
	118	[8408]	JMP      	153 ; PC := 153
	119	[8408]	GETGLOBAL	R7 K15 ; R7 := 0x7b998233
	120	[8408]	GETGLOBAL	R8 K37 ; R8 := 0xe7f2b02f
	121	[8408]	SELF     	R8 R8 K38 ; R9 := R8; R8 := R8[0x565be9ee]
	122	[8408]	CALL     	R8 2 0 ; R8,... := R8(R9)
	123	[8408]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	124	[8408]	TEST     	R7 0 ; if not R7 then PC := 153
	125	[8408]	JMP      	153 ; PC := 153
	126	[8408]	GETGLOBAL	R7 K11 ; R7 := _T
	127	[8408]	GETTABLE 	R7 R7 K12 ; R7 := R7["SquadOverlay"]
	128	[8408]	TEST     	R7 0 ; if not R7 then PC := 153
	129	[8408]	JMP      	153 ; PC := 153
	130	[8408]	GETGLOBAL	R7 K11 ; R7 := _T
	131	[8408]	GETTABLE 	R7 R7 K39 ; R7 := R7["gActiveMatchMakingMode"]
	132	[8408]	GETGLOBAL	R8 K11 ; R8 := _T
	133	[8408]	GETTABLE 	R8 R8 K40 ; R8 := R8["MATCHMAKING_OFFLINE_GAMEMODE"]
	134	[8408]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 153
	135	[8408]	JMP      	153 ; PC := 153
	136	[8409]	GETGLOBAL	R7 K11 ; R7 := _T
	137	[8409]	GETTABLE 	R7 R7 K12 ; R7 := R7["SquadOverlay"]
	138	[8409]	SELF     	R7 R7 K13 ; R8 := R7; R7 := R7[0xe4162eed]
	139	[8409]	LOADK    	R9 K41 ; R9 := "HostLobby"
	140	[8409]	LOADK    	R10 K2 ; R10 := ""
	141	[8409]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	142	[8410]	GETGLOBAL	R7 K15 ; R7 := 0x7b998233
	143	[8410]	GETGLOBAL	R8 K37 ; R8 := 0xe7f2b02f
	144	[8410]	SELF     	R8 R8 K38 ; R9 := R8; R8 := R8[0x565be9ee]
	145	[8410]	CALL     	R8 2 0 ; R8,... := R8(R9)
	146	[8410]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	147	[8410]	TEST     	R7 0 ; if not R7 then PC := 153
	148	[8410]	JMP      	153 ; PC := 153
	149	[8411]	GETGLOBAL	R7 K42 ; R7 := 0xcbd666e1
	150	[8411]	LOADK    	R8 := 0.000000
	151	[8411]	CALL     	R7 2 1 ; R7(R8)
	152	[8411]	JMP      	142 ; PC := 142
	153	[8415]	GETGLOBAL	R7 K4 ; R7 := 0x7f5022cf
	154	[8415]	GETTABLE 	R7 R7 K23 ; R7 := R7[0xa5c556b9]
	155	[8415]	MOVE     	R8 R0 ; R8 := R0
	156	[8415]	LOADK    	R9 K43 ; R9 := "Wareframe"
	157	[8415]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	158	[8415]	TEST     	R7 0 ; if not R7 then PC := 175
	159	[8415]	JMP      	175 ; PC := 175
	160	[8415]	GETGLOBAL	R7 K11 ; R7 := _T
	161	[8415]	GETTABLE 	R7 R7 K12 ; R7 := R7["SquadOverlay"]
	162	[8415]	TEST     	R7 0 ; if not R7 then PC := 175
	163	[8415]	JMP      	175 ; PC := 175
	164	[8416]	GETGLOBAL	R7 K11 ; R7 := _T
	165	[8416]	GETTABLE 	R7 R7 K12 ; R7 := R7["SquadOverlay"]
	166	[8416]	SELF     	R7 R7 K13 ; R8 := R7; R7 := R7[0xe4162eed]
	167	[8416]	LOADK    	R9 K44 ; R9 := "LoadAutonomousMultiplayerMission"
	168	[8416]	MOVE     	R10 R0 ; R10 := R0
	169	[8416]	MOVE     	R11 R3 ; R11 := R3
	170	[8416]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	171	[8416]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	172	[8417]	OP_LOADBOOL	R7 1 0 ; R7 := true
	173	[8417]	RETURN   	R7 2 ; return R7 
	174	[8417]	JMP      	220 ; PC := 220
	175	[8419]	GETUPVAL 	R7 U1 ; R7 := U1
	176	[8419]	GETTABLE 	R7 R7 K45 ; R7 := R7[0x05b69533]
	177	[8419]	GETGLOBAL	R8 K20 ; R8 := 0x0469f296
	178	[8419]	MOVE     	R9 R0 ; R9 := R0
	179	[8419]	MOVE     	R10 R3 ; R10 := R3
	180	[8419]	CONCAT   	R9 R9 R10 ; R9 := R9 .. R10
	181	[8419]	CALL     	R8 2 2 ; R8 := R8(R9)
	182	[8419]	MOVE     	R9 R2 ; R9 := R2
	183	[8419]	GETGLOBAL	R10 K27 ; R10 := 0x7ed0a956
	184	[8419]	MOVE     	R11 R5 ; R11 := R5
	185	[8419]	CALL     	R10 2 0 ; R10,... := R10(R11)
	186	[8419]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	187	[8420]	TEST     	R7 0 ; if not R7 then PC := 220
	188	[8420]	JMP      	220 ; PC := 220
	189	[8421]	GETGLOBAL	R8 K15 ; R8 := 0x7b998233
	190	[8421]	GETGLOBAL	R9 K37 ; R9 := 0xe7f2b02f
	191	[8421]	SELF     	R9 R9 K38 ; R10 := R9; R9 := R9[0x565be9ee]
	192	[8421]	CALL     	R9 2 0 ; R9,... := R9(R10)
	193	[8421]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	194	[8421]	TEST     	R8 1 ; if R8 then PC := 214
	195	[8421]	JMP      	214 ; PC := 214
	196	[8422]	GETUPVAL 	R8 U0 ; R8 := U0
	197	[8422]	GETTABLE 	R8 R8 K46 ; R8 := R8[0x7155f039]
	198	[8422]	MOVE     	R9 R0 ; R9 := R0
	199	[8422]	MOVE     	R10 R3 ; R10 := R3
	200	[8422]	CONCAT   	R9 R9 R10 ; R9 := R9 .. R10
	201	[8422]	MOVE     	R10 R6 ; R10 := R6
	202	[8422]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	203	[8423]	GETGLOBAL	R9 K37 ; R9 := 0xe7f2b02f
	204	[8423]	SELF     	R9 R9 K38 ; R10 := R9; R9 := R9[0x565be9ee]
	205	[8423]	CALL     	R9 2 2 ; R9 := R9(R10)
	206	[8423]	SELF     	R9 R9 K47 ; R10 := R9; R9 := R9[0xfdd3576f]
	207	[8423]	CALL     	R9 2 2 ; R9 := R9(R10)
	208	[8424]	SETTABLE 	R9 K48 R8 ; R9["gameModeId"] := R8
	209	[8425]	GETGLOBAL	R10 K37 ; R10 := 0xe7f2b02f
	210	[8425]	SELF     	R10 R10 K49 ; R11 := R10; R10 := R10[0xee2f24fc]
	211	[8425]	MOVE     	R12 R9 ; R12 := R9
	212	[8425]	LOADK    	R13 K50 ; R13 := "OnUpdateSessionSettings"
	213	[8425]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	214	[8427]	GETGLOBAL	R10 K51 ; R10 := 0x34291f5c
	215	[8427]	GETTABLE 	R10 R10 K52 ; R10 := R10[0x4e0a1dfc]
	216	[8427]	MOVE     	R11 R7 ; R11 := R7
	217	[8427]	CALL     	R10 2 1 ; R10(R11)
	218	[8428]	OP_LOADBOOL	R10 1 0 ; R10 := true
	219	[8428]	RETURN   	R10 2 ; return R10 
	220	[8433]	OP_LOADBOOL	R10 0 0 ; R10 := false
	221	[8433]	RETURN   	R10 2 ; return R10 
	222	[8434]	RETURN   	R0 1 ; return 

function #260 <?:8436,8438> (6 instructions, 24 bytes at 000001608BD49900)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[8437]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[8437]	MOVE     	R3 R0 ; R3 := R0
	3	[8437]	MOVE     	R4 R1 ; R4 := R1
	4	[8437]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	5	[8437]	RETURN   	R2 0 ; return R2,... 
	6	[8438]	RETURN   	R0 1 ; return 

function #261 <?:8440,8444> (9 instructions, 36 bytes at 000001608BD499F0)
1 param, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[8441]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[8441]	MOVE     	R2 R0 ; R2 := R0
	3	[8441]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[8441]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 9
	5	[8441]	JMP      	9 ; PC := 9
	6	[8442]	GETGLOBAL	R1 K3 ; R1 := _T
	7	[8442]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x297e93ca]
	8	[8442]	CALL     	R1 1 1 ; R1()
	9	[8444]	RETURN   	R0 1 ; return 

function #262 <?:8446,8474> (73 instructions, 292 bytes at 000001608BD49B60)
2 params, 13 slots, 6 upvalues, 0 locals, 21 constants, 0 functions
	1	[8447]	TEST     	R0 0 ; if not R0 then PC := 12
	2	[8447]	JMP      	12 ; PC := 12
	3	[8448]	GETGLOBAL	R2 K0 ; R2 := 0x25d99d89
	4	[8448]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xefee6c91]
	5	[8448]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[8449]	GETUPVAL 	R3 U0 ; R3 := U0
	7	[8449]	GETTABLE 	R3 R3 K2 ; R3 := R3[0x0c9eedd2]
	8	[8449]	ADD      	R4 R2 K3 ; R4 := R2 + 1.000000
	9	[8449]	OP_LOADBOOL	R5 0 0 ; R5 := false
	10	[8449]	CALL     	R3 3 1 ; R3(R4,R5)
	11	[8449]	JMP      	73 ; PC := 73
	12	[8450]	GETGLOBAL	R3 K4 ; R3 := 0x7f5022cf
	13	[8450]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xa5c556b9]
	14	[8450]	MOVE     	R4 R1 ; R4 := R1
	15	[8450]	LOADK    	R5 K6 ; R5 := "No daily retries remaining"
	16	[8450]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	17	[8450]	TEST     	R3 0 ; if not R3 then PC := 44
	18	[8450]	JMP      	44 ; PC := 44
	19	[8451]	GETGLOBAL	R3 K0 ; R3 := 0x25d99d89
	20	[8451]	SELF     	R3 R3 K7 ; R4 := R3; R3 := R3[0xde2d1b82]
	21	[8451]	CALL     	R3 2 2 ; R3 := R3(R4)
	22	[8452]	GETUPVAL 	R4 U0 ; R4 := U0
	23	[8452]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x817b1503]
	24	[8452]	GETGLOBAL	R5 K9 ; R5 := 0xae91e43b
	25	[8452]	MOVE     	R6 R3 ; R6 := R3
	26	[8452]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	27	[8453]	GETGLOBAL	R5 K10 ; R5 := 0x603636ad
	28	[8453]	LOADK    	R6 K11 ; R6 := "/Lotus/Language/Menu/Foreground_LevelUpSuspended"
	29	[8453]	OP_LOADBOOL	R7 0 0 ; R7 := false
	30	[8453]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	31	[8454]	GETGLOBAL	R6 K4 ; R6 := 0x7f5022cf
	32	[8454]	GETTABLE 	R6 R6 K12 ; R6 := R6[0xe8072ded]
	33	[8454]	MOVE     	R7 R5 ; R7 := R5
	34	[8454]	MOVE     	R8 R4 ; R8 := R4
	35	[8454]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	36	[8456]	GETUPVAL 	R7 U1 ; R7 := U1
	37	[8456]	LOADK    	R8 := 0.000000
	38	[8456]	CALL     	R7 2 1 ; R7(R8)
	39	[8458]	GETUPVAL 	R7 U2 ; R7 := U2
	40	[8458]	GETTABLE 	R7 R7 K13 ; R7 := R7[0xe0cba3ca]
	41	[8458]	MOVE     	R8 R6 ; R8 := R6
	42	[8458]	CALL     	R7 2 1 ; R7(R8)
	43	[8458]	JMP      	73 ; PC := 73
	44	[8459]	EQ       	0 R1 K14 ; if R1 ~= "1" then PC := 58
	45	[8459]	JMP      	58 ; PC := 58
	46	[8460]	GETUPVAL 	R7 U1 ; R7 := U1
	47	[8460]	LOADK    	R8 := 0.000000
	48	[8460]	CALL     	R7 2 1 ; R7(R8)
	49	[8462]	GETUPVAL 	R7 U3 ; R7 := U3
	50	[8462]	LOADK    	R8 K15 ; R8 := "Platinum"
	51	[8462]	LOADK    	R9 K16 ; R9 := "0"
	52	[8462]	GETGLOBAL	R10 K10 ; R10 := 0x603636ad
	53	[8462]	LOADK    	R11 K17 ; R11 := "/Lotus/Language/Menu/RankupRetry"
	54	[8462]	NEWTABLE 	R12 0 0 ; R12 := {}
	55	[8462]	CALL     	R10 3 0 ; R10,... := R10(R11,R12)
	56	[8462]	CALL     	R7 0 1 ; R7(R8,...)
	57	[8462]	JMP      	73 ; PC := 73
	58	[8466]	GETUPVAL 	R7 U4 ; R7 := U4
	59	[8466]	LT       	0 R7 K18 ; if R7 >= 2.000000 then PC := 67
	60	[8466]	JMP      	67 ; PC := 67
	61	[8467]	OP_LOADBOOL	R7 1 0 ; R7 := true
	62	[8467]	SETUPVAL 	R7 U5 ; U5 := R7
	63	[8468]	GETUPVAL 	R7 U4 ; R7 := U4
	64	[8468]	ADD      	R7 R7 K3 ; R7 := R7 + 1.000000
	65	[8468]	SETUPVAL 	R7 U4 ; U4 := R7
	66	[8468]	JMP      	73 ; PC := 73
	67	[8470]	GETGLOBAL	R7 K19 ; R7 := 0x3d106989
	68	[8470]	LOADK    	R8 K20 ; R8 := "Failed to submit training result too many times. Aborting."
	69	[8470]	CALL     	R7 2 1 ; R7(R8)
	70	[8471]	GETUPVAL 	R7 U1 ; R7 := U1
	71	[8471]	LOADK    	R8 := 0.000000
	72	[8471]	CALL     	R7 2 1 ; R7(R8)
	73	[8474]	RETURN   	R0 1 ; return 

function #263 <?:8476,8486> (26 instructions, 104 bytes at 000001608BD4A0E0)
0 params, 6 slots, 5 upvalues, 0 locals, 8 constants, 0 functions
	1	[8477]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[8477]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x25a6e75e]
	3	[8477]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8477]	GETTABLE 	R0 R0 K2 ; R0 := R0["mPremiumCredits"]
	5	[8477]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[8477]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x7773bdcf]
	7	[8477]	CALL     	R1 1 2 ; R1 := R1()
	8	[8477]	LT       	0 R0 R1 ; if R0 >= R1 then PC := 19
	9	[8477]	JMP      	19 ; PC := 19
	10	[8478]	GETUPVAL 	R0 U1 ; R0 := U1
	11	[8478]	LOADK    	R1 K4 ; R1 := "Platinum"
	12	[8478]	LOADK    	R2 K5 ; R2 := "0"
	13	[8478]	GETGLOBAL	R3 K6 ; R3 := 0x603636ad
	14	[8478]	LOADK    	R4 K7 ; R4 := "/Lotus/Language/Menu/RankupRetry"
	15	[8478]	NEWTABLE 	R5 0 0 ; R5 := {}
	16	[8478]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	17	[8478]	CALL     	R0 0 1 ; R0(R1,...)
	18	[8479]	RETURN   	R0 1 ; return 
	19	[8482]	GETUPVAL 	R0 U2 ; R0 := U2
	20	[8482]	LOADK    	R1 := 1.000000
	21	[8482]	CALL     	R0 2 1 ; R0(R1)
	22	[8484]	OP_LOADBOOL	R0 1 0 ; R0 := true
	23	[8484]	SETUPVAL 	R0 U3 ; U3 := R0
	24	[8485]	LOADK    	R0 := 0.000000
	25	[8485]	SETUPVAL 	R0 U4 ; U4 := R0
	26	[8486]	RETURN   	R0 1 ; return 

function #264 <?:8488,8490> (3 instructions, 12 bytes at 000001608BD4A300)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[8489]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[8489]	CALL     	R0 1 1 ; R0()
	3	[8490]	RETURN   	R0 1 ; return 

function #265 <?:8492,8496> (8 instructions, 32 bytes at 000001608BD4A3D0)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[8493]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[8493]	MOVE     	R2 R0 ; R2 := R0
	3	[8493]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[8493]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 8
	5	[8493]	JMP      	8 ; PC := 8
	6	[8494]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[8494]	CALL     	R1 1 1 ; R1()
	8	[8496]	RETURN   	R0 1 ; return 

function #266 <?:8498,8518> (43 instructions, 172 bytes at 000001608BD4A500)
0 params, 8 slots, 5 upvalues, 0 locals, 10 constants, 0 functions
	1	[8499]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[8499]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x8c8051c7]
	3	[8499]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	4	[8499]	OP_LOADBOOL	R2 0 0 ; R2 := false
	5	[8499]	CALL     	R0 3 4 ; R0,R1,R2 := R0(R1,R2)
	6	[8500]	TEST     	R0 1 ; if R0 then PC := 21
	7	[8500]	JMP      	21 ; PC := 21
	8	[8501]	TEST     	R2 0 ; if not R2 then PC := 16
	9	[8501]	JMP      	16 ; PC := 16
	10	[8502]	GETUPVAL 	R3 U1 ; R3 := U1
	11	[8502]	GETTABLE 	R3 R3 K2 ; R3 := R3[0xf616a184]
	12	[8502]	MOVE     	R4 R1 ; R4 := R1
	13	[8502]	LOADK    	R5 K3 ; R5 := "LevelUpRetryConfirm"
	14	[8502]	CALL     	R3 3 1 ; R3(R4,R5)
	15	[8502]	JMP      	20 ; PC := 20
	16	[8504]	GETUPVAL 	R3 U1 ; R3 := U1
	17	[8504]	GETTABLE 	R3 R3 K4 ; R3 := R3[0xe0cba3ca]
	18	[8504]	MOVE     	R4 R1 ; R4 := R1
	19	[8504]	CALL     	R3 2 1 ; R3(R4)
	20	[8506]	RETURN   	R0 1 ; return 
	21	[8509]	GETGLOBAL	R3 K1 ; R3 := 0x25d99d89
	22	[8509]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x652b21b9]
	23	[8509]	CALL     	R3 2 2 ; R3 := R3(R4)
	24	[8509]	TEST     	R3 0 ; if not R3 then PC := 36
	25	[8509]	JMP      	36 ; PC := 36
	26	[8510]	GETUPVAL 	R3 U1 ; R3 := U1
	27	[8510]	GETTABLE 	R3 R3 K2 ; R3 := R3[0xf616a184]
	28	[8510]	GETGLOBAL	R4 K6 ; R4 := 0xae91e43b
	29	[8510]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0x42b04007]
	30	[8510]	LOADK    	R6 K8 ; R6 := "/Lotus/Language/Menu/RetrieveLockedWeapons"
	31	[8510]	OP_LOADBOOL	R7 0 0 ; R7 := false
	32	[8510]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	33	[8510]	LOADK    	R5 K9 ; R5 := "ConfirmWeaponRetrieve"
	34	[8510]	CALL     	R3 3 1 ; R3(R4,R5)
	35	[8511]	RETURN   	R0 1 ; return 
	36	[8514]	GETUPVAL 	R3 U2 ; R3 := U2
	37	[8514]	LOADK    	R4 := 1.000000
	38	[8514]	CALL     	R3 2 1 ; R3(R4)
	39	[8516]	OP_LOADBOOL	R3 1 0 ; R3 := true
	40	[8516]	SETUPVAL 	R3 U3 ; U3 := R3
	41	[8517]	LOADK    	R3 := 0.000000
	42	[8517]	SETUPVAL 	R3 U4 ; U4 := R3
	43	[8518]	RETURN   	R0 1 ; return 

function #267 <?:8520,8522> (3 instructions, 12 bytes at 000001608BD4A820)
0 params, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[8521]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[8521]	SETTABLE 	R0 K1 K2 ; R0["gQueueMailbox"] := true
	3	[8522]	RETURN   	R0 1 ; return 

function #268 <?:8524,8526> (3 instructions, 12 bytes at 000001608BD4A930)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[8525]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[8525]	CALL     	R0 1 1 ; R0()
	3	[8526]	RETURN   	R0 1 ; return 

function #269 <?:8528,8533> (12 instructions, 48 bytes at 000001608BD4AA00)
1 param, 4 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[8529]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[8529]	SETTABLE 	R1 K1 K2 ; R1["ShowingQuitGameDialog"] := nil
	3	[8530]	GETGLOBAL	R1 K3 ; R1 := 0x03f57322
	4	[8530]	MOVE     	R2 R0 ; R2 := R0
	5	[8530]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[8530]	EQ       	0 R1 K5 ; if R1 ~= 4.000000 then PC := 12
	7	[8530]	JMP      	12 ; PC := 12
	8	[8531]	GETGLOBAL	R1 K6 ; R1 := 0x9ba7909f
	9	[8531]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xf37bdbf9]
	10	[8531]	GETGLOBAL	R3 K8 ; R3 := 0x9e5e1b85
	11	[8531]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[8533]	RETURN   	R0 1 ; return 

function #270 <?:8535,8541> (14 instructions, 56 bytes at 000001608BD4ABB0)
0 params, 3 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[8536]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[8536]	GETTABLE 	R0 R0 K1 ; R0 := R0["ShowingQuitGameDialog"]
	3	[8536]	TEST     	R0 1 ; if R0 then PC := 12
	4	[8536]	JMP      	12 ; PC := 12
	5	[8537]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[8537]	SETTABLE 	R0 K1 K2 ; R0["ShowingQuitGameDialog"] := true
	7	[8538]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[8538]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xdedfded7]
	9	[8538]	LOADK    	R1 K4 ; R1 := "/Lotus/Language/Menu/QuitGameConfirm"
	10	[8538]	LOADK    	R2 K5 ; R2 := "QuitGameConfirm"
	11	[8538]	CALL     	R0 3 1 ; R0(R1,R2)
	12	[8540]	OP_LOADBOOL	R0 1 0 ; R0 := true
	13	[8540]	RETURN   	R0 2 ; return R0 
	14	[8541]	RETURN   	R0 1 ; return 

function #271 <?:8543,8571> (76 instructions, 304 bytes at 000001608BD4AD50)
0 params, 10 slots, 1 upvalue, 0 locals, 34 constants, 0 functions
	1	[8544]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[8544]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x600a0ad6]
	3	[8544]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8545]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xd8140b94]
	5	[8545]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[8545]	TEST     	R1 1 ; if R1 then PC := 9
	7	[8545]	JMP      	9 ; PC := 9
	8	[8547]	RETURN   	R0 1 ; return 
	9	[8550]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[8550]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x6a965652]
	11	[8550]	MOVE     	R2 R0 ; R2 := R0
	12	[8550]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[8552]	GETGLOBAL	R2 K4 ; R2 := 0x0032441c
	14	[8552]	NEWTABLE 	R3 0 0 ; R3 := {}
	15	[8552]	SETTABLE 	R2 K5 R3 ; R2["NemesisTauntCooldowns"] := R3
	16	[8553]	GETGLOBAL	R2 K4 ; R2 := 0x0032441c
	17	[8553]	GETTABLE 	R2 R2 K5 ; R2 := R2["NemesisTauntCooldowns"]
	18	[8553]	GETTABLE 	R2 R2 K6 ; R2 := R2["Created"]
	19	[8553]	TEST     	R2 0 ; if not R2 then PC := 30
	20	[8553]	JMP      	30 ; PC := 30
	21	[8553]	GETGLOBAL	R2 K4 ; R2 := 0x0032441c
	22	[8553]	GETTABLE 	R2 R2 K5 ; R2 := R2["NemesisTauntCooldowns"]
	23	[8553]	GETTABLE 	R2 R2 K6 ; R2 := R2["Created"]
	24	[8553]	ADD      	R2 R2 K7 ; R2 := R2 + 1200.000000
	25	[8553]	GETGLOBAL	R3 K8 ; R3 := 0xbe190284
	26	[8553]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x715c5d7f]
	27	[8553]	CALL     	R3 2 2 ; R3 := R3(R4)
	28	[8553]	LT       	0 R2 R3 ; if R2 >= R3 then PC := 45
	29	[8553]	JMP      	45 ; PC := 45
	30	[8554]	GETGLOBAL	R2 K4 ; R2 := 0x0032441c
	31	[8554]	GETGLOBAL	R3 K11 ; R3 := 0x0469f296
	32	[8554]	GETUPVAL 	R4 U0 ; R4 := U0
	33	[8554]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0xd89d6ea2]
	34	[8554]	MOVE     	R6 R0 ; R6 := R0
	35	[8554]	MOVE     	R7 R1 ; R7 := R1
	36	[8554]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	37	[8554]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	38	[8554]	SETTABLE 	R2 K10 R3 ; R2["NemesisTaunt"] := R3
	39	[8555]	GETGLOBAL	R2 K4 ; R2 := 0x0032441c
	40	[8555]	GETTABLE 	R2 R2 K5 ; R2 := R2["NemesisTauntCooldowns"]
	41	[8555]	GETGLOBAL	R3 K8 ; R3 := 0xbe190284
	42	[8555]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x715c5d7f]
	43	[8555]	CALL     	R3 2 2 ; R3 := R3(R4)
	44	[8555]	SETTABLE 	R2 K6 R3 ; R2["Created"] := R3
	45	[8558]	GETGLOBAL	R2 K13 ; R2 := 0x7b998233
	46	[8558]	GETGLOBAL	R3 K14 ; R3 := 0xcb79539e
	47	[8558]	CALL     	R2 2 2 ; R2 := R2(R3)
	48	[8558]	TEST     	R2 1 ; if R2 then PC := 65
	49	[8558]	JMP      	65 ; PC := 65
	50	[8559]	GETGLOBAL	R2 K14 ; R2 := 0xcb79539e
	51	[8559]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x8b8fb8b7]
	52	[8559]	GETGLOBAL	R4 K16 ; R4 := 0x6c97a788
	53	[8559]	GETTABLE 	R4 R4 K17 ; R4 := R4["NEMESIS_CREATED"]
	54	[8559]	GETTABLE 	R5 R1 K18 ; R5 := R1["mAgent"]
	55	[8559]	SELF     	R5 R5 K19 ; R6 := R5; R5 := R5[0xed4e0128]
	56	[8559]	CALL     	R5 2 2 ; R5 := R5(R6)
	57	[8559]	GETTABLE 	R6 R0 K20 ; R6 := R0["mKillingSuit"]
	58	[8559]	SELF     	R6 R6 K19 ; R7 := R6; R6 := R6[0xed4e0128]
	59	[8559]	CALL     	R6 2 2 ; R6 := R6(R7)
	60	[8559]	LOADK    	R7 := 1.000000
	61	[8559]	GETGLOBAL	R8 K21 ; R8 := 0xa421af95
	62	[8559]	CALL     	R8 1 2 ; R8 := R8()
	63	[8559]	GETTABLE 	R9 R1 K22 ; R9 := R1["mName"]
	64	[8559]	CALL     	R2 8 1 ; R2(R3,R4,R5,R6,R7,R8,R9)
	65	[8562]	GETGLOBAL	R2 K4 ; R2 := 0x0032441c
	66	[8562]	NEWTABLE 	R3 0 6 ; R3 := {}
	67	[8564]	SETTABLE 	R3 K24 K25 ; R3["IsCreationPopup"] := true
	68	[8565]	SETTABLE 	R3 K26 K25 ; R3["OpenScreen"] := true
	69	[8566]	SETTABLE 	R3 K27 K28 ; R3["Header"] := "/Lotus/Language/Kingpins/NemesisPopupHeader"
	70	[8567]	GETTABLE 	R4 R1 K22 ; R4 := R1["mName"]
	71	[8567]	SETTABLE 	R3 K29 R4 ; R3["Name"] := R4
	72	[8568]	GETTABLE 	R4 R1 K31 ; R4 := R1["mFaction"]
	73	[8568]	SETTABLE 	R3 K30 R4 ; R3["FactionId"] := R4
	74	[8569]	SETTABLE 	R3 K32 K33 ; R3["Description"] := "/Lotus/Language/Kingpins/NemesisPopupBirthLabel"
	75	[8570]	SETTABLE 	R2 K23 R3 ; R2["NemesisPopup_Info"] := R3
	76	[8571]	RETURN   	R0 1 ; return 

function #272 <?:8573,8575> (3 instructions, 12 bytes at 000001608BD4B2F0)
0 params, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[8574]	GETGLOBAL	R0 K0 ; R0 := mFoundryNotification
	2	[8574]	SETTABLE 	R0 K1 K2 ; R0["Refresh"] := true
	3	[8575]	RETURN   	R0 1 ; return 
