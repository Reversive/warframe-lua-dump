
main <?:0,0> (2332 instructions, 9328 bytes at 0000025274E6E220)
0+ params, 168 slots, 0 upvalues, 0 locals, 776 constants, 428 functions
	1	[1]	GETGLOBAL	R0 K0 ; R0 := 0xaeabecda
	2	[1]	VARARG   	R1 R2 ; R1 := R2 := ...
	3	[1]	GETGLOBAL	R2 K1 ; R2 := package
	4	[1]	GETTABLE 	R2 R2 K2 ; R2 := R2["seeall"]
	5	[1]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[3]	NEWTABLE 	R0 21 0 ; R0 := {}
	7	[4]	LOADK    	R1 K3 ; R1 := "DT_IMPACT"
	8	[5]	LOADK    	R2 K4 ; R2 := "DT_PUNCTURE"
	9	[6]	LOADK    	R3 K5 ; R3 := "DT_SLASH"
	10	[7]	LOADK    	R4 K6 ; R4 := "DT_FIRE"
	11	[8]	LOADK    	R5 K7 ; R5 := "DT_FREEZE"
	12	[9]	LOADK    	R6 K8 ; R6 := "DT_ELECTRICITY"
	13	[10]	LOADK    	R7 K9 ; R7 := "DT_POISON"
	14	[11]	LOADK    	R8 K10 ; R8 := "DT_EXPLOSION"
	15	[12]	LOADK    	R9 K11 ; R9 := "DT_RADIATION"
	16	[13]	LOADK    	R10 K12 ; R10 := "DT_GAS"
	17	[14]	LOADK    	R11 K13 ; R11 := "DT_MAGNETIC"
	18	[15]	LOADK    	R12 K14 ; R12 := "DT_VIRAL"
	19	[16]	LOADK    	R13 K15 ; R13 := "DT_CORROSIVE"
	20	[17]	LOADK    	R14 K16 ; R14 := "DT_RADIANT"
	21	[18]	LOADK    	R15 K17 ; R15 := "DT_SENTIENT"
	22	[19]	LOADK    	R16 K18 ; R16 := "DT_CINEMATIC"
	23	[20]	LOADK    	R17 K19 ; R17 := "DT_SHIELD_DRAIN"
	24	[21]	LOADK    	R18 K20 ; R18 := "DT_HEALTH_DRAIN"
	25	[22]	LOADK    	R19 K21 ; R19 := "DT_ENERGY_DRAIN"
	26	[23]	LOADK    	R20 K22 ; R20 := "DT_FINISHER"
	27	[24]	LOADK    	R21 K23 ; R21 := "DT_SUICIDE"
	28	[25]	LOADK    	R22 K24 ; R22 := "DT_PHYSICAL"
	29	[26]	LOADK    	R23 K25 ; R23 := "DT_INVALID"
	30	[27]	LOADK    	R24 K26 ; R24 := "DT_BASE_ELEMENTAL"
	31	[28]	LOADK    	R25 K27 ; R25 := "DT_COMPOUND_ELEMENTAL"
	32	[30]	LOADK    	R26 K28 ; R26 := "DT_ANY"
	33	[30]	SETLIST  	R0 26 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 26
	34	[32]	NEWTABLE 	R1 23 0 ; R1 := {}
	35	[34]	LOADK    	R2 K29 ; R2 := "PT_KNOCKBACK"
	36	[35]	LOADK    	R3 K30 ; R3 := "PT_FRAILTY"
	37	[36]	LOADK    	R4 K31 ; R4 := "PT_BLEEDING"
	38	[37]	LOADK    	R5 K32 ; R5 := "PT_IMMOLATION"
	39	[38]	LOADK    	R6 K33 ; R6 := "PT_CHILLED"
	40	[39]	LOADK    	R7 K34 ; R7 := "PT_ELECTROCUTION"
	41	[40]	LOADK    	R8 K35 ; R8 := "PT_POISONED"
	42	[41]	LOADK    	R9 K36 ; R9 := "PT_FLASHBANG"
	43	[42]	LOADK    	R10 K37 ; R10 := "PT_RAD_TOX"
	44	[43]	LOADK    	R11 K38 ; R11 := "PT_ASPHYXIATION"
	45	[44]	LOADK    	R12 K39 ; R12 := "PT_MAGNETIZED"
	46	[45]	LOADK    	R13 K40 ; R13 := "PT_INFECTED"
	47	[46]	LOADK    	R14 K41 ; R14 := "PT_CAUSTIC_BURN"
	48	[47]	LOADK    	R15 K42 ; R15 := "PT_RADIANT"
	49	[48]	LOADK    	R16 K43 ; R16 := "PT_SENTIENT"
	50	[49]	LOADK    	R17 K44 ; R17 := "PT_MICROWAVE_BURN"
	51	[50]	LOADK    	R18 K45 ; R18 := "PT_STAGGERED"
	52	[51]	LOADK    	R19 K46 ; R19 := "PT_BIG_STAGGER"
	53	[52]	LOADK    	R20 K47 ; R20 := "PT_STUNNED"
	54	[53]	LOADK    	R21 K48 ; R21 := "PT_KNOCKED_DOWN"
	55	[54]	LOADK    	R22 K49 ; R22 := "PT_RAGDOLL"
	56	[55]	LOADK    	R23 K50 ; R23 := "PT_PARRIED"
	57	[56]	LOADK    	R24 K51 ; R24 := "PT_DISARMED"
	58	[57]	LOADK    	R25 K52 ; R25 := "PT_SILENCED"
	59	[58]	LOADK    	R26 K53 ; R26 := "PT_ROOTS"
	60	[59]	LOADK    	R27 K54 ; R27 := "PT_VOID"
	61	[60]	LOADK    	R28 K55 ; R28 := "PT_GLUE"
	62	[61]	LOADK    	R29 K56 ; R29 := "PT_SLEEP"
	63	[62]	LOADK    	R30 K57 ; R30 := "PT_LIFT_HIT"
	64	[64]	LOADK    	R31 K58 ; R31 := "MAX_ProcType"
	65	[64]	SETLIST  	R1 30 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 30
	66	[66]	GETGLOBAL	R2 K59 ; R2 := 0x60cce7b4
	67	[66]	LEN      	R3 R0 ; R3 := # R0
	68	[66]	EQ       	1 R3 K61 ; if R3 == 26.000000 then PC := 71
	69	[66]	JMP      	71 ; PC := 71
	70	[66]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 71
	71	[66]	OP_LOADBOOL	R3 1 0 ; R3 := true
	72	[66]	CALL     	R2 2 1 ; R2(R3)
	73	[67]	GETGLOBAL	R2 K59 ; R2 := 0x60cce7b4
	74	[67]	LEN      	R3 R1 ; R3 := # R1
	75	[67]	EQ       	1 R3 K62 ; if R3 == 30.000000 then PC := 78
	76	[67]	JMP      	78 ; PC := 78
	77	[67]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 78
	78	[67]	OP_LOADBOOL	R3 1 0 ; R3 := true
	79	[67]	CALL     	R2 2 1 ; R2(R3)
	80	[69]	GETGLOBAL	R2 K63 ; R2 := 0x7ed0a956
	81	[69]	LOADK    	R3 K64 ; R3 := "/Lotus/Types/StoreItems/SuitCustomizations/ColourPickerDefaultsItemA"
	82	[69]	CALL     	R2 2 2 ; R2 := R2(R3)
	83	[70]	GETGLOBAL	R3 K63 ; R3 := 0x7ed0a956
	84	[70]	LOADK    	R4 K65 ; R4 := "/Lotus/Upgrades/Mods/Fusers/UncommonModFuser"
	85	[70]	CALL     	R3 2 2 ; R3 := R3(R4)
	86	[71]	GETGLOBAL	R4 K63 ; R4 := 0x7ed0a956
	87	[71]	LOADK    	R5 K66 ; R5 := "/Lotus/Upgrades/Mods/Fusers/RareModFuser"
	88	[71]	CALL     	R4 2 2 ; R4 := R4(R5)
	89	[72]	GETGLOBAL	R5 K63 ; R5 := 0x7ed0a956
	90	[72]	LOADK    	R6 K67 ; R6 := "/Lotus/Types/Items/MiscItems/Elitium"
	91	[72]	CALL     	R5 2 2 ; R5 := R5(R6)
	92	[74]	GETGLOBAL	R6 K63 ; R6 := 0x7ed0a956
	93	[74]	LOADK    	R7 K68 ; R7 := "/Lotus/Types/Game/OrokinGoldenMawAvatar"
	94	[74]	CALL     	R6 2 2 ; R6 := R6(R7)
	95	[76]	GETGLOBAL	R7 K63 ; R7 := 0x7ed0a956
	96	[76]	LOADK    	R8 K69 ; R8 := "/Lotus/Types/Items/MiscItems/PhotoboothTile"
	97	[76]	CALL     	R7 2 2 ; R7 := R7(R8)
	98	[78]	GETGLOBAL	R8 K63 ; R8 := 0x7ed0a956
	99	[78]	LOADK    	R9 K70 ; R9 := "/Lotus/Types/Items/ShipFeatureItems/ShipFeatureItem"
	100	[78]	CALL     	R8 2 2 ; R8 := R8(R9)
	101	[80]	GETGLOBAL	R9 K63 ; R9 := 0x7ed0a956
	102	[80]	LOADK    	R10 K71 ; R10 := "/Lotus/Types/Restoratives/LisetBaseAirSupportPower"
	103	[80]	CALL     	R9 2 2 ; R9 := R9(R10)
	104	[82]	GETGLOBAL	R10 K63 ; R10 := 0x7ed0a956
	105	[82]	LOADK    	R11 K72 ; R11 := "/Lotus/Weapons/Tenno/HackingDevices/TnHackingDevice/TnHackingDeviceWeapon"
	106	[82]	CALL     	R10 2 2 ; R10 := R10(R11)
	107	[84]	GETGLOBAL	R11 K63 ; R11 := 0x7ed0a956
	108	[84]	LOADK    	R12 K73 ; R12 := "/Lotus/Powersuits/Wraith/ReaperAvatar"
	109	[84]	CALL     	R11 2 2 ; R11 := R11(R12)
	110	[86]	LOADK    	R12 := 1.000000
	111	[86]	SETGLOBALHASH	R12 K74 ; UI_MODE_IN_SPACE_SHIP := R12
	112	[87]	LOADK    	R12 := 2.000000
	113	[87]	SETGLOBALHASH	R12 K75 ; UI_MODE_IN_SPACE_HUB := R12
	114	[88]	LOADK    	R12 := 3.000000
	115	[88]	SETGLOBALHASH	R12 K76 ; UI_MODE_IN_DOJO := R12
	116	[89]	LOADK    	R12 := 4.000000
	117	[89]	SETGLOBALHASH	R12 K77 ; UI_MODE_IN_GAME := R12
	118	[91]	LOADK    	R12 := 14.000000
	119	[91]	SETGLOBALHASH	R12 K78 ; REGION_ID_DOJO := R12
	120	[92]	LOADK    	R12 := 15.000000
	121	[92]	SETGLOBALHASH	R12 K79 ; REGION_ID_VOID := R12
	122	[93]	LOADK    	R12 := 17.000000
	123	[93]	SETGLOBALHASH	R12 K80 ; REGION_ID_DERELICT := R12
	124	[94]	LOADK    	R12 := 18.000000
	125	[94]	SETGLOBALHASH	R12 K81 ; REGION_ID_MOON := R12
	126	[95]	LOADK    	R12 := 19.000000
	127	[95]	SETGLOBALHASH	R12 K82 ; REGION_ID_FORTRESS := R12
	128	[96]	LOADK    	R12 := 20.000000
	129	[96]	SETGLOBALHASH	R12 K83 ; REGION_ID_DARK_SECTOR := R12
	130	[97]	LOADK    	R12 := 21.000000
	131	[97]	SETGLOBALHASH	R12 K84 ; REGION_ID_DEEP_SPACE := R12
	132	[98]	LOADK    	R12 := 22.000000
	133	[98]	SETGLOBALHASH	R12 K85 ; REGION_ID_ZARIMAN := R12
	134	[99]	LOADK    	R12 := 97.000000
	135	[99]	SETGLOBALHASH	R12 K86 ; REGION_ID_DOJO_DUEL := R12
	136	[100]	LOADK    	R12 := 98.000000
	137	[100]	SETGLOBALHASH	R12 K87 ; REGION_ID_CLAN_DOJO := R12
	138	[101]	LOADK    	R12 := 99.000000
	139	[101]	SETGLOBALHASH	R12 K88 ; REGION_ID_PVP := R12
	140	[102]	LOADK    	R12 := 100.000000
	141	[102]	SETGLOBALHASH	R12 K89 ; REGION_ID_PHOTOBOOTH := R12
	142	[103]	LOADK    	R12 := 101.000000
	143	[103]	SETGLOBALHASH	R12 K90 ; REGION_ID_SIMULACRUM := R12
	144	[105]	LOADK    	R12 := 1.000000
	145	[105]	SETGLOBALHASH	R12 K91 ; SLIDER := R12
	146	[106]	LOADK    	R12 := 2.000000
	147	[106]	SETGLOBALHASH	R12 K92 ; CHECKBOX := R12
	148	[107]	LOADK    	R12 := 3.000000
	149	[107]	SETGLOBALHASH	R12 K93 ; TOGGLE := R12
	150	[108]	LOADK    	R12 := 4.000000
	151	[108]	SETGLOBALHASH	R12 K94 ; BUTTON := R12
	152	[109]	LOADK    	R12 := 5.000000
	153	[109]	SETGLOBALHASH	R12 K95 ; TITLE := R12
	154	[110]	LOADK    	R12 := 6.000000
	155	[110]	SETGLOBALHASH	R12 K96 ; INPUTBOX := R12
	156	[111]	LOADK    	R12 := 7.000000
	157	[111]	SETGLOBALHASH	R12 K97 ; SPACER := R12
	158	[112]	LOADK    	R12 := 8.000000
	159	[112]	SETGLOBALHASH	R12 K98 ; INPUTCOUNT := R12
	160	[113]	LOADK    	R12 := 9.000000
	161	[113]	SETGLOBALHASH	R12 K99 ; ICONBUTTON := R12
	162	[114]	LOADK    	R12 := 10.000000
	163	[114]	SETGLOBALHASH	R12 K100 ; CHOICE := R12
	164	[115]	LOADK    	R12 := 11.000000
	165	[115]	SETGLOBALHASH	R12 K101 ; COLOR := R12
	166	[117]	LOADK    	R12 := 0.000000
	167	[117]	SETGLOBALHASH	R12 K102 ; DECO_AREA_UNKNOWN := R12
	168	[118]	LOADK    	R12 := 1.000000
	169	[118]	SETGLOBALHASH	R12 K103 ; DECO_AREA_SHIP := R12
	170	[119]	LOADK    	R12 := 2.000000
	171	[119]	SETGLOBALHASH	R12 K104 ; DECO_AREA_APARTMENT := R12
	172	[120]	LOADK    	R12 := 3.000000
	173	[120]	SETGLOBALHASH	R12 K105 ; DECO_AREA_COUNT := R12
	174	[122]	LOADK    	R12 := 1.000000
	175	[122]	SETGLOBALHASH	R12 K106 ; REPORT_PLAYER := R12
	176	[123]	LOADK    	R12 := 2.000000
	177	[123]	SETGLOBALHASH	R12 K107 ; REPORT_CLAN_AD := R12
	178	[125]	NEWTABLE 	R12 0 2 ; R12 := {}
	179	[125]	GETGLOBAL	R13 K110 ; R13 := 0x0469f296
	180	[125]	LOADK    	R14 K111 ; R14 := "OutsideRoom"
	181	[125]	CALL     	R13 2 2 ; R13 := R13(R14)
	182	[125]	SETTABLE 	R12 K109 R13 ; R12["Name"] := R13
	183	[125]	SETTABLE 	R12 K112 K113 ; R12["LocTag"] := "/Lotus/Language/UiElements/OutsideRoom"
	184	[125]	SETGLOBALHASH	R12 K108 ; OUTSIDE_THE_SHIP_ROOM := R12
	185	[127]	NEWTABLE 	R12 0 2 ; R12 := {}
	186	[127]	GETGLOBAL	R13 K110 ; R13 := 0x0469f296
	187	[127]	LOADK    	R14 K115 ; R14 := "LisetRoom"
	188	[127]	CALL     	R13 2 2 ; R13 := R13(R14)
	189	[127]	SETTABLE 	R12 K109 R13 ; R12["Name"] := R13
	190	[127]	SETTABLE 	R12 K112 K116 ; R12["LocTag"] := "/Lotus/Language/UiElements/ShipLisetRoom"
	191	[127]	SETGLOBALHASH	R12 K114 ; LISET_ROOM := R12
	192	[129]	NEWTABLE 	R12 5 0 ; R12 := {}
	193	[129]	NEWTABLE 	R13 0 2 ; R13 := {}
	194	[130]	GETGLOBAL	R14 K110 ; R14 := 0x0469f296
	195	[130]	LOADK    	R15 K118 ; R15 := "OperatorChamberRoom"
	196	[130]	CALL     	R14 2 2 ; R14 := R14(R15)
	197	[130]	SETTABLE 	R13 K109 R14 ; R13["Name"] := R14
	198	[130]	SETTABLE 	R13 K112 K119 ; R13["LocTag"] := "/Lotus/Language/UiElements/ShipOperatorChamberRoom"
	199	[130]	NEWTABLE 	R14 0 2 ; R14 := {}
	200	[131]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	201	[131]	LOADK    	R16 K120 ; R16 := "AlchemyRoom"
	202	[131]	CALL     	R15 2 2 ; R15 := R15(R16)
	203	[131]	SETTABLE 	R14 K109 R15 ; R14["Name"] := R15
	204	[131]	SETTABLE 	R14 K112 K121 ; R14["LocTag"] := "/Lotus/Language/UiElements/ShipAlchemyRoom"
	205	[131]	NEWTABLE 	R15 0 2 ; R15 := {}
	206	[132]	GETGLOBAL	R16 K110 ; R16 := 0x0469f296
	207	[132]	LOADK    	R17 K122 ; R17 := "PersonalQuartersRoom"
	208	[132]	CALL     	R16 2 2 ; R16 := R16(R17)
	209	[132]	SETTABLE 	R15 K109 R16 ; R15["Name"] := R16
	210	[132]	SETTABLE 	R15 K112 K123 ; R15["LocTag"] := "/Lotus/Language/UiElements/ShipPersonalQuartersRoom"
	211	[132]	NEWTABLE 	R16 0 2 ; R16 := {}
	212	[133]	GETGLOBAL	R17 K110 ; R17 := 0x0469f296
	213	[133]	LOADK    	R18 K124 ; R18 := "BridgeRoom"
	214	[133]	CALL     	R17 2 2 ; R17 := R17(R18)
	215	[133]	SETTABLE 	R16 K109 R17 ; R16["Name"] := R17
	216	[133]	SETTABLE 	R16 K112 K125 ; R16["LocTag"] := "/Lotus/Language/UiElements/ShipBridgeRoom"
	217	[135]	GETGLOBAL	R17 K114 ; R17 := LISET_ROOM
	218	[135]	SETLIST  	R12 5 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 5
	219	[135]	SETGLOBALHASH	R12 K117 ; SHIP_ROOMS := R12
	220	[137]	NEWTABLE 	R12 4 0 ; R12 := {}
	221	[137]	NEWTABLE 	R13 0 2 ; R13 := {}
	222	[138]	GETGLOBAL	R14 K110 ; R14 := 0x0469f296
	223	[138]	LOADK    	R15 K127 ; R15 := "ElevatorLanding"
	224	[138]	CALL     	R14 2 2 ; R14 := R14(R15)
	225	[138]	SETTABLE 	R13 K109 R14 ; R13["Name"] := R14
	226	[138]	SETTABLE 	R13 K112 K128 ; R13["LocTag"] := "/Lotus/Language/UiElements/ApartmentElevatorLanding"
	227	[138]	NEWTABLE 	R14 0 2 ; R14 := {}
	228	[139]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	229	[139]	LOADK    	R16 K129 ; R16 := "ApartmentRoomA"
	230	[139]	CALL     	R15 2 2 ; R15 := R15(R16)
	231	[139]	SETTABLE 	R14 K109 R15 ; R14["Name"] := R15
	232	[139]	SETTABLE 	R14 K112 K130 ; R14["LocTag"] := "/Lotus/Language/UiElements/ApartmentRoomA"
	233	[139]	NEWTABLE 	R15 0 2 ; R15 := {}
	234	[140]	GETGLOBAL	R16 K110 ; R16 := 0x0469f296
	235	[140]	LOADK    	R17 K131 ; R17 := "ApartmentRoomB"
	236	[140]	CALL     	R16 2 2 ; R16 := R16(R17)
	237	[140]	SETTABLE 	R15 K109 R16 ; R15["Name"] := R16
	238	[140]	SETTABLE 	R15 K112 K132 ; R15["LocTag"] := "/Lotus/Language/UiElements/ApartmentRoomB"
	239	[140]	NEWTABLE 	R16 0 2 ; R16 := {}
	240	[141]	GETGLOBAL	R17 K110 ; R17 := 0x0469f296
	241	[141]	LOADK    	R18 K133 ; R18 := "ApartmentRoomC"
	242	[141]	CALL     	R17 2 2 ; R17 := R17(R18)
	243	[141]	SETTABLE 	R16 K109 R17 ; R16["Name"] := R17
	244	[141]	SETTABLE 	R16 K112 K134 ; R16["LocTag"] := "/Lotus/Language/UiElements/ApartmentRoomC"
	245	[142]	SETLIST  	R12 4 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 4
	246	[142]	SETGLOBALHASH	R12 K126 ; APARTMENT_ROOMS := R12
	247	[144]	NEWTABLE 	R12 0 8 ; R12 := {}
	248	[145]	SETTABLE 	R12 K137 K138 ; R12[0.000000] := "WARFRAME_SLOT"
	249	[146]	SETTABLE 	R12 K139 K140 ; R12[1.000000] := "WEAPON_SLOT"
	250	[147]	SETTABLE 	R12 K141 K142 ; R12[2.000000] := "SENTINEL_SLOT"
	251	[148]	SETTABLE 	R12 K143 K144 ; R12[3.000000] := "SPACE_SUIT_SLOT"
	252	[149]	SETTABLE 	R12 K145 K146 ; R12[4.000000] := "SPACE_WEAPON_SLOT"
	253	[150]	SETTABLE 	R12 K147 K148 ; R12[8.000000] := "OPERATOR_AMP_SLOT"
	254	[151]	SETTABLE 	R12 K149 K150 ; R12[10.000000] := "MECH_SLOT"
	255	[152]	SETTABLE 	R12 K151 K152 ; R12[11.000000] := "CREW_MEMBER_SLOT"
	256	[153]	SETGLOBALHASH	R12 K135 ; SLOT_TYPES := R12
	257	[155]	LOADK    	R12 := 1.000000
	258	[155]	SETGLOBALHASH	R12 K153 ; SOUND_SET_EIDOLON := R12
	259	[156]	LOADK    	R12 := 2.000000
	260	[156]	SETGLOBALHASH	R12 K154 ; SOUND_SET_FORTUNA := R12
	261	[157]	LOADK    	R12 := 3.000000
	262	[157]	SETGLOBALHASH	R12 K155 ; SOUND_SET_ORB_VALLIS := R12
	263	[158]	LOADK    	R12 := 4.000000
	264	[158]	SETGLOBALHASH	R12 K156 ; SOUND_SET_RAILJACK := R12
	265	[159]	LOADK    	R12 := 5.000000
	266	[159]	SETGLOBALHASH	R12 K157 ; SOUND_SET_OROKIN_TOWER := R12
	267	[160]	LOADK    	R12 := 6.000000
	268	[160]	SETGLOBALHASH	R12 K158 ; SOUND_SET_ZARIMAN := R12
	269	[162]	LOADK    	R12 := 100.000000
	270	[163]	LOADK    	R13 := 1000.000000
	271	[164]	LOADK    	R14 K159 ; R14 := 100000.000000
	272	[166]	LOADK    	R15 K161 ; R15 := "_"
	273	[166]	SETGLOBALHASH	R15 K160 ; TAG_SEPERATOR := R15
	274	[168]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	275	[168]	LOADK    	R16 K163 ; R16 := "Alert"
	276	[168]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	277	[168]	SETGLOBALHASH	R15 K162 ; ALERT_TAG := R15
	278	[169]	MUL      	R15 K139 R14 ; R15 := 1.000000 * R14
	279	[169]	SETGLOBALHASH	R15 K164 ; ALERT_FLAG := R15
	280	[171]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	281	[171]	LOADK    	R16 K166 ; R16 := "Nightmare"
	282	[171]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	283	[171]	SETGLOBALHASH	R15 K165 ; NIGHTMARE_TAG := R15
	284	[172]	MUL      	R15 K141 R14 ; R15 := 2.000000 * R14
	285	[172]	SETGLOBALHASH	R15 K167 ; NIGHTMARE_FLAG := R15
	286	[173]	LOADK    	R15 := 28800.000000
	287	[173]	SETGLOBALHASH	R15 K168 ; NIGHTMARE_MISSION_INTERVAL := R15
	288	[175]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	289	[175]	LOADK    	R16 K170 ; R16 := "Event"
	290	[175]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	291	[175]	SETGLOBALHASH	R15 K169 ; EVENT_TAG := R15
	292	[176]	MUL      	R15 K143 R14 ; R15 := 3.000000 * R14
	293	[176]	SETGLOBALHASH	R15 K171 ; EVENT_FLAG := R15
	294	[178]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	295	[178]	LOADK    	R16 K173 ; R16 := "PVP"
	296	[178]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	297	[178]	SETGLOBALHASH	R15 K172 ; PVP_TAG := R15
	298	[179]	MUL      	R15 K145 R14 ; R15 := 4.000000 * R14
	299	[179]	SETGLOBALHASH	R15 K174 ; PVP_FLAG := R15
	300	[181]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	301	[181]	LOADK    	R16 K176 ; R16 := "InvasionAttacker"
	302	[181]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	303	[181]	SETGLOBALHASH	R15 K175 ; INVASION_ATTACKER_TAG := R15
	304	[182]	MUL      	R15 K178 R14 ; R15 := 5.000000 * R14
	305	[182]	SETGLOBALHASH	R15 K177 ; INVASION_ATTACKER_FLAG := R15
	306	[184]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	307	[184]	LOADK    	R16 K180 ; R16 := "InvasionDefender"
	308	[184]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	309	[184]	SETGLOBALHASH	R15 K179 ; INVASION_DEFENDER_TAG := R15
	310	[185]	MUL      	R15 K182 R14 ; R15 := 6.000000 * R14
	311	[185]	SETGLOBALHASH	R15 K181 ; INVASION_DEFENDER_FLAG := R15
	312	[187]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	313	[187]	LOADK    	R16 K184 ; R16 := "HUB"
	314	[187]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	315	[187]	SETGLOBALHASH	R15 K183 ; HUB_TAG := R15
	316	[188]	MUL      	R15 K186 R14 ; R15 := 7.000000 * R14
	317	[188]	SETGLOBALHASH	R15 K185 ; HUB_FLAG := R15
	318	[204]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	319	[204]	LOADK    	R16 K188 ; R16 := "Syndicate"
	320	[204]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	321	[204]	SETGLOBALHASH	R15 K187 ; SYNDICATE_MISSION_TAG := R15
	322	[205]	MUL      	R15 K151 R14 ; R15 := 11.000000 * R14
	323	[205]	SETGLOBALHASH	R15 K189 ; SYNDICATE_MISSION_FLAG := R15
	324	[207]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	325	[207]	LOADK    	R16 K191 ; R16 := "Key"
	326	[207]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	327	[207]	SETGLOBALHASH	R15 K190 ; KEY_TAG := R15
	328	[208]	MUL      	R15 K193 R14 ; R15 := 12.000000 * R14
	329	[208]	SETGLOBALHASH	R15 K192 ; KEY_FLAG := R15
	330	[210]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	331	[210]	LOADK    	R16 K195 ; R16 := "Sortie"
	332	[210]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	333	[210]	SETGLOBALHASH	R15 K194 ; SORTIE_MISSION_TAG := R15
	334	[211]	MUL      	R15 K197 R14 ; R15 := 13.000000 * R14
	335	[211]	SETGLOBALHASH	R15 K196 ; SORTIE_MISSION_FLAG := R15
	336	[213]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	337	[213]	LOADK    	R16 K199 ; R16 := "ActiveMission"
	338	[213]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	339	[213]	SETGLOBALHASH	R15 K198 ; ACTIVE_MISSION_TAG := R15
	340	[214]	MUL      	R15 K201 R14 ; R15 := 14.000000 * R14
	341	[214]	SETGLOBALHASH	R15 K200 ; ACTIVE_MISSION_FLAG := R15
	342	[216]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	343	[216]	LOADK    	R16 K203 ; R16 := "GhostTower"
	344	[216]	CALL     	R15 2 2 ; R15 := R15(R16)
	345	[216]	SETGLOBALHASH	R15 K202 ; KUVA_TOWER_GOAL_TAG := R15
	346	[217]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	347	[217]	LOADK    	R16 K203 ; R16 := "GhostTower"
	348	[217]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	349	[217]	SETGLOBALHASH	R15 K204 ; KUVA_TOWER_MISSION_TAG := R15
	350	[218]	MUL      	R15 K206 R14 ; R15 := 15.000000 * R14
	351	[218]	SETGLOBALHASH	R15 K205 ; KUVA_TOWER_MISSION_FLAG := R15
	352	[220]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	353	[220]	LOADK    	R16 K208 ; R16 := "JUNCTION"
	354	[220]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	355	[220]	SETGLOBALHASH	R15 K207 ; JUNCTION_TAG := R15
	356	[221]	MUL      	R15 K210 R14 ; R15 := 16.000000 * R14
	357	[221]	SETGLOBALHASH	R15 K209 ; JUNCTION_FLAG := R15
	358	[223]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	359	[223]	LOADK    	R16 K212 ; R16 := "Nemesis"
	360	[223]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	361	[223]	SETGLOBALHASH	R15 K211 ; NEMESIS_MISSION_TAG := R15
	362	[224]	MUL      	R15 K214 R14 ; R15 := 17.000000 * R14
	363	[224]	SETGLOBALHASH	R15 K213 ; NEMESIS_MISSION_FLAG := R15
	364	[226]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	365	[226]	LOADK    	R16 K216 ; R16 := "EliteAlert"
	366	[226]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	367	[226]	SETGLOBALHASH	R15 K215 ; ELITE_ALERT_TAG := R15
	368	[227]	MUL      	R15 K218 R14 ; R15 := 18.000000 * R14
	369	[227]	SETGLOBALHASH	R15 K217 ; ELITE_ALERT_FLAG := R15
	370	[228]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	371	[228]	LOADK    	R16 K216 ; R16 := "EliteAlert"
	372	[228]	CALL     	R15 2 2 ; R15 := R15(R16)
	373	[228]	SETGLOBALHASH	R15 K219 ; ELITE_ALERT_PERIODIC_MISSION_TAG := R15
	374	[229]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	375	[229]	LOADK    	R16 K221 ; R16 := "EliteAlertB"
	376	[229]	CALL     	R15 2 2 ; R15 := R15(R16)
	377	[229]	SETGLOBALHASH	R15 K220 ; ELITE_ALERT_PERIODIC_MISSION_TAG_ALT := R15
	378	[230]	LOADK    	R15 := 3600.000000
	379	[230]	SETGLOBALHASH	R15 K222 ; ELITE_ALERT_MISSION_INTERVAL := R15
	380	[232]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	381	[232]	LOADK    	R16 K224 ; R16 := "Scenario"
	382	[232]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	383	[232]	SETGLOBALHASH	R15 K223 ; SCENARIO_BEACON_TAG := R15
	384	[233]	MUL      	R15 K226 R14 ; R15 := 19.000000 * R14
	385	[233]	SETGLOBALHASH	R15 K225 ; SCENARIO_BEACON_FLAG := R15
	386	[235]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	387	[235]	LOADK    	R16 K228 ; R16 := "Hard"
	388	[235]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	389	[235]	SETGLOBALHASH	R15 K227 ; HARD_MODE_TAG := R15
	390	[236]	MUL      	R15 K230 R14 ; R15 := 20.000000 * R14
	391	[236]	SETGLOBALHASH	R15 K229 ; HARD_MODE_FLAG := R15
	392	[237]	LOADK    	R15 := 100.000000
	393	[237]	SETGLOBALHASH	R15 K231 ; HARD_MODE_LEVEL_MODIFIER := R15
	394	[238]	LOADK    	R15 := 50.000000
	395	[238]	SETGLOBALHASH	R15 K232 ; HARD_MODE_ARCHWING_LEVEL_MODIFIER := R15
	396	[239]	LOADK    	R15 := 86400.000000
	397	[239]	SETGLOBALHASH	R15 K233 ; HARD_MODE_DAILY_MISSION_INTERVAL := R15
	398	[241]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	399	[241]	LOADK    	R16 K235 ; R16 := "HardDaily"
	400	[241]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	401	[241]	SETGLOBALHASH	R15 K234 ; HARD_DAILY_TAG := R15
	402	[242]	MUL      	R15 K237 R14 ; R15 := 21.000000 * R14
	403	[242]	SETGLOBALHASH	R15 K236 ; HARD_DAILY_FLAG := R15
	404	[244]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	405	[244]	LOADK    	R16 K239 ; R16 := "VoidStorm"
	406	[244]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	407	[244]	SETGLOBALHASH	R15 K238 ; VOID_STORM_TAG := R15
	408	[245]	MUL      	R15 K241 R14 ; R15 := 22.000000 * R14
	409	[245]	SETGLOBALHASH	R15 K240 ; VOID_STORM_FLAG := R15
	410	[247]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	411	[247]	LOADK    	R16 K243 ; R16 := "LiteSortie"
	412	[247]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	413	[247]	SETGLOBALHASH	R15 K242 ; LITE_SORTIE_MISSION_TAG := R15
	414	[248]	MUL      	R15 K245 R14 ; R15 := 23.000000 * R14
	415	[248]	SETGLOBALHASH	R15 K244 ; LITE_SORTIE_MISSION_FLAG := R15
	416	[250]	LOADK    	R15 := 3600.000000
	417	[250]	SETGLOBALHASH	R15 K246 ; KUVA_TOWER_MISSION_INTERVAL := R15
	418	[252]	LOADK    	R15 K248 ; R15 := "OptionalGoal"
	419	[252]	SETGLOBALHASH	R15 K247 ; OPTIONAL_GOAL_PREFIX := R15
	420	[253]	LOADK    	R15 K250 ; R15 := "AnyNode"
	421	[253]	SETGLOBALHASH	R15 K249 ; ANY_NODE_PREFIX := R15
	422	[254]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	423	[254]	LOADK    	R16 K252 ; R16 := "ZarimanHub"
	424	[254]	CALL     	R15 2 2 ; R15 := R15(R16)
	425	[254]	SETGLOBALHASH	R15 K251 ; ZARIMAN_NODE_TAG := R15
	426	[255]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	427	[255]	LOADK    	R16 K254 ; R16 := "CetusHub4"
	428	[255]	CALL     	R15 2 2 ; R15 := R15(R16)
	429	[255]	SETGLOBALHASH	R15 K253 ; CETUS_NODE_TAG := R15
	430	[256]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	431	[256]	LOADK    	R16 K256 ; R16 := "SolNode228"
	432	[256]	CALL     	R15 2 2 ; R15 := R15(R16)
	433	[256]	SETGLOBALHASH	R15 K255 ; PLAINS_NODE_TAG := R15
	434	[257]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	435	[257]	LOADK    	R16 K258 ; R16 := "IronwakeHUB3"
	436	[257]	CALL     	R15 2 2 ; R15 := R15(R16)
	437	[257]	SETGLOBALHASH	R15 K257 ; IRON_WAKE_NODE_TAG := R15
	438	[258]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	439	[258]	LOADK    	R16 K260 ; R16 := "SolarisUnitedHub1"
	440	[258]	CALL     	R15 2 2 ; R15 := R15(R16)
	441	[258]	SETGLOBALHASH	R15 K259 ; FORTUNA_NODE_TAG := R15
	442	[259]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	443	[259]	LOADK    	R16 K262 ; R16 := "SolNode129"
	444	[259]	CALL     	R15 2 2 ; R15 := R15(R16)
	445	[259]	SETGLOBALHASH	R15 K261 ; ORB_VALLIS_NODE_TAG := R15
	446	[260]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	447	[260]	LOADK    	R16 K264 ; R16 := "DeimosHub"
	448	[260]	CALL     	R15 2 2 ; R15 := R15(R16)
	449	[260]	SETGLOBALHASH	R15 K263 ; OROKIN_TOWER_NODE_TAG := R15
	450	[261]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	451	[261]	LOADK    	R16 K266 ; R16 := "SolNode229"
	452	[261]	CALL     	R15 2 2 ; R15 := R15(R16)
	453	[261]	SETGLOBALHASH	R15 K265 ; ENTRATI_LANDSCAPE_NODE_TAG := R15
	454	[262]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	455	[262]	LOADK    	R16 K268 ; R16 := "ScenarioEventHub5"
	456	[262]	CALL     	R15 2 2 ; R15 := R15(R16)
	457	[262]	SETGLOBALHASH	R15 K267 ; SCENARIO_EVENT_HUB_TAG := R15
	458	[263]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	459	[263]	LOADK    	R16 K270 ; R16 := "SolNode234"
	460	[263]	CALL     	R15 2 2 ; R15 := R15(R16)
	461	[263]	SETGLOBALHASH	R15 K269 ; APARTMENT_NODE_TAG := R15
	462	[264]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	463	[264]	LOADK    	R16 K272 ; R16 := "SolNode230"
	464	[264]	CALL     	R15 2 2 ; R15 := R15(R16)
	465	[264]	SETGLOBALHASH	R15 K271 ; ZARIMAN_MISSION_A_TAG := R15
	466	[265]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	467	[265]	LOADK    	R16 K274 ; R16 := "SolNode231"
	468	[265]	CALL     	R15 2 2 ; R15 := R15(R16)
	469	[265]	SETGLOBALHASH	R15 K273 ; ZARIMAN_MISSION_B_TAG := R15
	470	[266]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	471	[266]	LOADK    	R16 K276 ; R16 := "SolNode232"
	472	[266]	CALL     	R15 2 2 ; R15 := R15(R16)
	473	[266]	SETGLOBALHASH	R15 K275 ; ZARIMAN_MISSION_C_TAG := R15
	474	[267]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	475	[267]	LOADK    	R16 K278 ; R16 := "SolNode233"
	476	[267]	CALL     	R15 2 2 ; R15 := R15(R16)
	477	[267]	SETGLOBALHASH	R15 K277 ; ZARIMAN_MISSION_D_TAG := R15
	478	[268]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	479	[268]	LOADK    	R16 K280 ; R16 := "SolNode235"
	480	[268]	CALL     	R15 2 2 ; R15 := R15(R16)
	481	[268]	SETGLOBALHASH	R15 K279 ; ZARIMAN_MISSION_E_TAG := R15
	482	[269]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	483	[269]	LOADK    	R16 K282 ; R16 := "/Lotus/Types/Keys/TestKeyForestOpLinkFragment"
	484	[269]	CALL     	R15 2 2 ; R15 := R15(R16)
	485	[269]	SETGLOBALHASH	R15 K281 ; SCENARIO_EVENT_GROUND_TAG := R15
	486	[270]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	487	[270]	LOADK    	R16 K284 ; R16 := "/Lotus/Types/Keys/TestKeyCrewBattleSentientSquadLink"
	488	[270]	CALL     	R15 2 2 ; R15 := R15(R16)
	489	[270]	SETGLOBALHASH	R15 K283 ; SCENARIO_EVENT_SPACE_TAG := R15
	490	[273]	LOADK    	R15 := 0.000000
	491	[273]	SETGLOBALHASH	R15 K285 ; PLAINS_ELO_IN_LISET := R15
	492	[274]	LOADK    	R15 := 1.000000
	493	[274]	SETGLOBALHASH	R15 K286 ; PLAINS_ELO_INSIDE_SAFE_ZONE := R15
	494	[275]	LOADK    	R15 := 2.000000
	495	[275]	SETGLOBALHASH	R15 K287 ; PLAINS_ELO_OUTSIDE_SAFE_ZONE := R15
	496	[276]	LOADK    	R15 := 3.000000
	497	[276]	SETGLOBALHASH	R15 K288 ; PLAINS_ELO_BOUNTY_ACTIVE := R15
	498	[277]	LOADK    	R15 := 10.000000
	499	[277]	SETGLOBALHASH	R15 K289 ; PLAINS_ELO_POST_NEW_WAR_OFFSET := R15
	500	[279]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	501	[279]	LOADK    	R16 K290 ; R16 := "Darvo"
	502	[279]	CALL     	R15 2 2 ; R15 := R15(R16)
	503	[282]	NEWTABLE 	R16 8 0 ; R16 := {}
	504	[284]	LOADK    	R17 K292 ; R17 := "/Lotus/Language/Game/Faction_GrineerUC"
	505	[285]	LOADK    	R18 K293 ; R18 := "/Lotus/Language/Game/Faction_CorpusUC"
	506	[286]	LOADK    	R19 K294 ; R19 := "/Lotus/Language/Game/Faction_InfestationUC"
	507	[287]	LOADK    	R20 K295 ; R20 := "/Lotus/Language/Game/Faction_OrokinUC"
	508	[288]	LOADK    	R21 K296 ; R21 := "/Lotus/Language/Game/Faction_RedVeilUC"
	509	[289]	LOADK    	R22 K297 ; R22 := "/Lotus/Language/Game/Faction_SentientUC"
	510	[290]	LOADK    	R23 K298 ; R23 := "/Lotus/Language/Game/Faction_NarmerUC"
	511	[292]	LOADK    	R24 K299 ; R24 := ""
	512	[292]	SETLIST  	R16 8 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 8
	513	[292]	SETGLOBALHASH	R16 K291 ; FactionNames := R16
	514	[294]	LOADK    	R16 K301 ; R16 := "???"
	515	[294]	SETGLOBALHASH	R16 K300 ; HIDDEN_PLAYER_NAME := R16
	516	[297]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	517	[297]	LOADK    	R17 K303 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/AlertsFeatureItem"
	518	[297]	CALL     	R16 2 2 ; R16 := R16(R17)
	519	[297]	SETGLOBALHASH	R16 K302 ; SF_ALERTS := R16
	520	[298]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	521	[298]	LOADK    	R17 K305 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ArsenalFeatureItem"
	522	[298]	CALL     	R16 2 2 ; R16 := R16(R17)
	523	[298]	SETGLOBALHASH	R16 K304 ; SF_ARSENAL := R16
	524	[299]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	525	[299]	LOADK    	R17 K307 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
	526	[299]	CALL     	R16 2 2 ; R16 := R16(R17)
	527	[299]	SETGLOBALHASH	R16 K306 ; SF_CLAN := R16
	528	[301]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	529	[301]	LOADK    	R17 K309 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/FoundryFeatureItem"
	530	[301]	CALL     	R16 2 2 ; R16 := R16(R17)
	531	[301]	SETGLOBALHASH	R16 K308 ; SF_FOUNDRY := R16
	532	[302]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	533	[302]	LOADK    	R17 K311 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/FoundryVesselUpgradeFeatureItem"
	534	[302]	CALL     	R16 2 2 ; R16 := R16(R17)
	535	[302]	SETGLOBALHASH	R16 K310 ; SF_FOUNDRY_VESSEL_UPGRADE := R16
	536	[304]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	537	[304]	LOADK    	R17 K313 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/GeneticFoundryFeatureItem"
	538	[304]	CALL     	R16 2 2 ; R16 := R16(R17)
	539	[304]	SETGLOBALHASH	R16 K312 ; SF_GENETIC_FOUNDRY := R16
	540	[305]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	541	[305]	LOADK    	R17 K315 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/GeneticFoundryUpgradeFeatureItem"
	542	[305]	CALL     	R16 2 2 ; R16 := R16(R17)
	543	[305]	SETGLOBALHASH	R16 K314 ; SF_GENETIC_FOUNDRY_UPGRADE := R16
	544	[307]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	545	[307]	LOADK    	R17 K317 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/InfestedFoundryItem"
	546	[307]	CALL     	R16 2 2 ; R16 := R16(R17)
	547	[307]	SETGLOBALHASH	R16 K316 ; SF_INFESTED_FOUNDRY := R16
	548	[309]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	549	[309]	LOADK    	R17 K307 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
	550	[309]	CALL     	R16 2 2 ; R16 := R16(R17)
	551	[309]	SETGLOBALHASH	R16 K318 ; SF_MARKET_TIER_ONE := R16
	552	[310]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	553	[310]	LOADK    	R17 K307 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
	554	[310]	CALL     	R16 2 2 ; R16 := R16(R17)
	555	[310]	SETGLOBALHASH	R16 K319 ; SF_MARKET_TIER_TWO := R16
	556	[312]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	557	[312]	LOADK    	R17 K321 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
	558	[312]	CALL     	R16 2 2 ; R16 := R16(R17)
	559	[312]	SETGLOBALHASH	R16 K320 ; SF_MODS := R16
	560	[313]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	561	[313]	LOADK    	R17 K321 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
	562	[313]	CALL     	R16 2 2 ; R16 := R16(R17)
	563	[313]	SETGLOBALHASH	R16 K322 ; SF_MODS_FUSION := R16
	564	[314]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	565	[314]	LOADK    	R17 K321 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
	566	[314]	CALL     	R16 2 2 ; R16 := R16(R17)
	567	[314]	SETGLOBALHASH	R16 K323 ; SF_MODS_TRANSMUTE := R16
	568	[316]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	569	[316]	LOADK    	R17 K307 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
	570	[316]	CALL     	R16 2 2 ; R16 := R16(R17)
	571	[316]	SETGLOBALHASH	R16 K324 ; SF_CONCLAVE := R16
	572	[317]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	573	[317]	LOADK    	R17 K307 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
	574	[317]	CALL     	R16 2 2 ; R16 := R16(R17)
	575	[317]	SETGLOBALHASH	R16 K325 ; SF_SOCIAL_MENU := R16
	576	[318]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	577	[318]	LOADK    	R17 K327 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/MercuryNavigationFeatureItem"
	578	[318]	CALL     	R16 2 2 ; R16 := R16(R17)
	579	[318]	SETGLOBALHASH	R16 K326 ; SF_SOLAR_CHART := R16
	580	[320]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	581	[320]	LOADK    	R17 K329 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/VoidProjectionFeatureItem"
	582	[320]	CALL     	R16 2 2 ; R16 := R16(R17)
	583	[320]	SETGLOBALHASH	R16 K328 ; SF_VOID_PROJECTION := R16
	584	[322]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	585	[322]	LOADK    	R17 K331 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/PersonalQuartersFeatureItem"
	586	[322]	CALL     	R16 2 2 ; R16 := R16(R17)
	587	[322]	SETGLOBALHASH	R16 K330 ; SF_PERSONAL_QUARTERS := R16
	588	[324]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	589	[324]	LOADK    	R17 K333 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/RailjackCephalonShipFeatureItem"
	590	[324]	CALL     	R16 2 2 ; R16 := R16(R17)
	591	[324]	SETGLOBALHASH	R16 K332 ; SF_RAILJACK_CEPHALON := R16
	592	[326]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	593	[326]	LOADK    	R17 K335 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/RailjackKeyShipFeatureItem"
	594	[326]	CALL     	R16 2 2 ; R16 := R16(R17)
	595	[326]	SETGLOBALHASH	R16 K334 ; SF_RAILJACK_KEY := R16
	596	[328]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	597	[328]	LOADK    	R17 K337 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/AdvancedOrdisFeatureItem"
	598	[328]	CALL     	R16 2 2 ; R16 := R16(R17)
	599	[328]	SETGLOBALHASH	R16 K336 ; SF_ADVANCED_ORDIS := R16
	600	[332]	LOADK    	R16 := 20.000000
	601	[332]	SETGLOBALHASH	R16 K338 ; MAX_PVE_EXTRA_LOADOUTS := R16
	602	[333]	LOADK    	R16 := 20.000000
	603	[333]	SETGLOBALHASH	R16 K339 ; MAX_PVP_LOADOUTS := R16
	604	[337]	NEWTABLE 	R16 0 5 ; R16 := {}
	605	[338]	LOADK    	R17 K341 ; R17 := "VoidT1"
	606	[338]	GETGLOBAL	R18 K63 ; R18 := 0x7ed0a956
	607	[338]	LOADK    	R19 K342 ; R19 := "/Lotus/Types/Game/Projections/T1VoidProjection"
	608	[338]	CALL     	R18 2 2 ; R18 := R18(R19)
	609	[338]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	610	[339]	LOADK    	R17 K343 ; R17 := "VoidT2"
	611	[339]	GETGLOBAL	R18 K63 ; R18 := 0x7ed0a956
	612	[339]	LOADK    	R19 K344 ; R19 := "/Lotus/Types/Game/Projections/T2VoidProjection"
	613	[339]	CALL     	R18 2 2 ; R18 := R18(R19)
	614	[339]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	615	[340]	LOADK    	R17 K345 ; R17 := "VoidT3"
	616	[340]	GETGLOBAL	R18 K63 ; R18 := 0x7ed0a956
	617	[340]	LOADK    	R19 K346 ; R19 := "/Lotus/Types/Game/Projections/T3VoidProjection"
	618	[340]	CALL     	R18 2 2 ; R18 := R18(R19)
	619	[340]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	620	[341]	LOADK    	R17 K347 ; R17 := "VoidT4"
	621	[341]	GETGLOBAL	R18 K63 ; R18 := 0x7ed0a956
	622	[341]	LOADK    	R19 K348 ; R19 := "/Lotus/Types/Game/Projections/T4VoidProjection"
	623	[341]	CALL     	R18 2 2 ; R18 := R18(R19)
	624	[341]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	625	[342]	LOADK    	R17 K349 ; R17 := "VoidT5"
	626	[342]	GETGLOBAL	R18 K63 ; R18 := 0x7ed0a956
	627	[342]	LOADK    	R19 K350 ; R19 := "/Lotus/Types/Game/Projections/T5VoidProjectionImmortal"
	628	[342]	CALL     	R18 2 2 ; R18 := R18(R19)
	629	[342]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	630	[343]	SETGLOBALHASH	R16 K340 ; VOID_PROJECTION_ITEMS := R16
	631	[347]	NEWTABLE 	R16 0 4 ; R16 := {}
	632	[348]	NEWTABLE 	R17 0 2 ; R17 := {}
	633	[348]	LOADK    	R18 K352 ; R18 := "levelOverride"
	634	[348]	GETGLOBAL	R19 K63 ; R19 := 0x7ed0a956
	635	[348]	LOADK    	R20 K353 ; R20 := "/Lotus/Levels/Proc/TheNewWar/PartOne/PostWarOstronTown"
	636	[348]	CALL     	R19 2 2 ; R19 := R19(R20)
	637	[348]	SETTABLE 	R17 R18 R19 ; R17[R18] := R19
	638	[348]	LOADK    	R18 K354 ; R18 := "goalTag"
	639	[348]	GETGLOBAL	R19 K110 ; R19 := 0x0469f296
	640	[348]	LOADK    	R20 K355 ; R20 := "PostWar"
	641	[348]	CALL     	R19 2 2 ; R19 := R19(R20)
	642	[348]	SETTABLE 	R17 R18 R19 ; R17[R18] := R19
	643	[348]	SETTABLE 	R16 K254 R17 ; R16["CetusHub4"] := R17
	644	[349]	LOADK    	R17 K256 ; R17 := "SolNode228"
	645	[349]	NEWTABLE 	R18 0 6 ; R18 := {}
	646	[349]	LOADK    	R19 K352 ; R19 := "levelOverride"
	647	[349]	GETGLOBAL	R20 K63 ; R20 := 0x7ed0a956
	648	[349]	LOADK    	R21 K356 ; R21 := "/Lotus/Levels/Proc/TheNewWar/PartOne/PostWarEidolonLandscape"
	649	[349]	CALL     	R20 2 2 ; R20 := R20(R21)
	650	[349]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	651	[349]	LOADK    	R19 K354 ; R19 := "goalTag"
	652	[349]	GETGLOBAL	R20 K110 ; R20 := 0x0469f296
	653	[349]	LOADK    	R21 K355 ; R21 := "PostWar"
	654	[349]	CALL     	R20 2 2 ; R20 := R20(R21)
	655	[349]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	656	[350]	LOADK    	R19 K357 ; R19 := "eloMin"
	657	[350]	GETGLOBAL	R20 K285 ; R20 := PLAINS_ELO_IN_LISET
	658	[350]	GETGLOBAL	R21 K289 ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	659	[350]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	660	[350]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	661	[350]	LOADK    	R19 K358 ; R19 := "eloMax"
	662	[350]	GETGLOBAL	R20 K288 ; R20 := PLAINS_ELO_BOUNTY_ACTIVE
	663	[350]	GETGLOBAL	R21 K289 ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	664	[350]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	665	[350]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	666	[351]	LOADK    	R19 K359 ; R19 := "extraEnemySpec"
	667	[351]	LOADK    	R20 K360 ; R20 := "/Lotus/Types/Game/EnemySpecs/Narmer/GrineerNarmer"
	668	[351]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	669	[352]	LOADK    	R19 K361 ; R19 := "streamingOffset"
	670	[352]	GETGLOBAL	R20 K362 ; R20 := 0xa421af95
	671	[352]	LOADK    	R21 := 0.000000
	672	[352]	LOADK    	R22 K363 ; R22 := 0.249985
	673	[352]	LOADK    	R23 K364 ; R23 := -0.099987
	674	[352]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	675	[352]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	676	[352]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	677	[353]	LOADK    	R17 K260 ; R17 := "SolarisUnitedHub1"
	678	[353]	NEWTABLE 	R18 0 2 ; R18 := {}
	679	[353]	LOADK    	R19 K352 ; R19 := "levelOverride"
	680	[353]	GETGLOBAL	R20 K63 ; R20 := 0x7ed0a956
	681	[353]	LOADK    	R21 K365 ; R21 := "/Lotus/Levels/Proc/TheNewWar/PartTwo/PostWarFortuna"
	682	[353]	CALL     	R20 2 2 ; R20 := R20(R21)
	683	[353]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	684	[353]	LOADK    	R19 K354 ; R19 := "goalTag"
	685	[353]	GETGLOBAL	R20 K110 ; R20 := 0x0469f296
	686	[353]	LOADK    	R21 K355 ; R21 := "PostWar"
	687	[353]	CALL     	R20 2 2 ; R20 := R20(R21)
	688	[353]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	689	[353]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	690	[354]	LOADK    	R17 K262 ; R17 := "SolNode129"
	691	[354]	NEWTABLE 	R18 0 5 ; R18 := {}
	692	[354]	LOADK    	R19 K352 ; R19 := "levelOverride"
	693	[354]	GETGLOBAL	R20 K63 ; R20 := 0x7ed0a956
	694	[354]	LOADK    	R21 K366 ; R21 := "/Lotus/Levels/Proc/TheNewWar/PartTwo/PostWarVenusLandscape"
	695	[354]	CALL     	R20 2 2 ; R20 := R20(R21)
	696	[354]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	697	[354]	LOADK    	R19 K354 ; R19 := "goalTag"
	698	[354]	GETGLOBAL	R20 K110 ; R20 := 0x0469f296
	699	[354]	LOADK    	R21 K355 ; R21 := "PostWar"
	700	[354]	CALL     	R20 2 2 ; R20 := R20(R21)
	701	[354]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	702	[354]	LOADK    	R19 K357 ; R19 := "eloMin"
	703	[354]	GETGLOBAL	R20 K285 ; R20 := PLAINS_ELO_IN_LISET
	704	[354]	GETGLOBAL	R21 K289 ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	705	[354]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	706	[354]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	707	[354]	LOADK    	R19 K358 ; R19 := "eloMax"
	708	[354]	GETGLOBAL	R20 K288 ; R20 := PLAINS_ELO_BOUNTY_ACTIVE
	709	[354]	GETGLOBAL	R21 K289 ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	710	[354]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	711	[354]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	712	[354]	LOADK    	R19 K359 ; R19 := "extraEnemySpec"
	713	[354]	LOADK    	R20 K367 ; R20 := "/Lotus/Types/Game/EnemySpecs/Narmer/CorpusNarmer"
	714	[354]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	715	[354]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	716	[355]	SETGLOBALHASH	R16 K351 ; POST_NEW_WAR_MISSIONS := R16
	717	[359]	LOADK    	R16 := 1.000000
	718	[359]	SETGLOBALHASH	R16 K368 ; HT_PROGRESS_BAR := R16
	719	[360]	LOADK    	R16 := 2.000000
	720	[360]	SETGLOBALHASH	R16 K369 ; HT_TIMER := R16
	721	[361]	LOADK    	R16 := 3.000000
	722	[361]	SETGLOBALHASH	R16 K370 ; HT_HEALTH_TRACKER := R16
	723	[362]	LOADK    	R16 := 4.000000
	724	[362]	SETGLOBALHASH	R16 K371 ; HT_ICON_BAR := R16
	725	[363]	LOADK    	R16 := 5.000000
	726	[363]	SETGLOBALHASH	R16 K372 ; HT_OPPONENT_BAR := R16
	727	[364]	LOADK    	R16 := 6.000000
	728	[364]	SETGLOBALHASH	R16 K373 ; HT_LABEL := R16
	729	[365]	LOADK    	R16 := 7.000000
	730	[365]	SETGLOBALHASH	R16 K374 ; HT_TEMPERATURE_BAR := R16
	731	[366]	LOADK    	R16 := 8.000000
	732	[366]	SETGLOBALHASH	R16 K375 ; HT_CORRUPTION_BAR := R16
	733	[367]	LOADK    	R16 := 9.000000
	734	[367]	SETGLOBALHASH	R16 K376 ; HT_NODE_CONFLICT_BAR := R16
	735	[371]	NEWTABLE 	R16 8 0 ; R16 := {}
	736	[373]	GETGLOBAL	R17 K378 ; R17 := gDecorationType
	737	[374]	GETGLOBAL	R18 K379 ; R18 := gDynamicCoverType
	738	[375]	GETGLOBAL	R19 K380 ; R19 := gEmplacementType
	739	[376]	GETGLOBAL	R20 K381 ; R20 := gDevourerType
	740	[377]	MOVE     	R21 R6 ; R21 := R6
	741	[378]	GETGLOBAL	R22 K382 ; R22 := gBaseAvatarType
	742	[379]	GETGLOBAL	R23 K383 ; R23 := gHitProxyType
	743	[381]	GETGLOBAL	R24 K384 ; R24 := gPickUpType
	744	[381]	SETLIST  	R16 8 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 8
	745	[381]	SETGLOBALHASH	R16 K377 ; SCAN_ENTITY_TYPES := R16
	746	[385]	NEWTABLE 	R16 0 13 ; R16 := {}
	747	[387]	LOADK    	R17 K386 ; R17 := "HOURS_PER_SECOND_EIDOLON"
	748	[387]	LOADK    	R18 K387 ; R18 := 0.002667
	749	[387]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	750	[388]	LOADK    	R17 K388 ; R17 := "HOURS_PER_SECOND_VENUS"
	751	[388]	LOADK    	R18 K389 ; R18 := 0.015000
	752	[388]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	753	[389]	LOADK    	R17 K390 ; R17 := "HOURS_PER_SECOND_ENTRATI"
	754	[389]	LOADK    	R18 K387 ; R18 := 0.002667
	755	[389]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	756	[390]	LOADK    	R17 K391 ; R17 := "HOURS_PER_SECOND_ZARIMAN"
	757	[390]	LOADK    	R18 K392 ; R18 := 0.001667
	758	[390]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	759	[392]	LOADK    	R17 K393 ; R17 := "TIME_OF_DAY_LABEL_NIGHT"
	760	[392]	LOADK    	R18 K394 ; R18 := "/Lotus/Language/Game/TimeOfDay_Night"
	761	[392]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	762	[393]	LOADK    	R17 K395 ; R17 := "TIME_OF_DAY_LABEL_DAY"
	763	[393]	LOADK    	R18 K396 ; R18 := "/Lotus/Language/Game/TimeOfDay_Day"
	764	[393]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	765	[395]	LOADK    	R17 K397 ; R17 := "TIME_OF_DAY_LABEL_WARM"
	766	[395]	LOADK    	R18 K398 ; R18 := "/Lotus/Language/Game/TimeOfDay_Warm"
	767	[395]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	768	[396]	LOADK    	R17 K399 ; R17 := "TIME_OF_DAY_LABEL_COLD"
	769	[396]	LOADK    	R18 K400 ; R18 := "/Lotus/Language/Game/TimeOfDay_Cold"
	770	[396]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	771	[398]	LOADK    	R17 K401 ; R17 := "TIME_OF_DAY_LABEL_FASS"
	772	[398]	LOADK    	R18 K402 ; R18 := "/Lotus/Language/Mods/ImmortalSixModName"
	773	[398]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	774	[399]	LOADK    	R17 K403 ; R17 := "TIME_OF_DAY_LABEL_VOME"
	775	[399]	LOADK    	R18 K404 ; R18 := "/Lotus/Language/Mods/ImmortalFourModName"
	776	[399]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	777	[400]	LOADK    	R17 K405 ; R17 := "TIME_OF_DAY_LABEL_CONFLICT"
	778	[400]	LOADK    	R18 K406 ; R18 := "/Lotus/Language/Game/Territory_Conflict"
	779	[400]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	780	[402]	LOADK    	R17 K407 ; R17 := "TIME_OF_DAY_LABEL_CORPUS"
	781	[402]	LOADK    	R18 K408 ; R18 := "/Lotus/Language/Zariman/ZarimanInfluenceCorpus"
	782	[402]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	783	[403]	LOADK    	R17 K409 ; R17 := "TIME_OF_DAY_LABEL_GRINEER"
	784	[403]	LOADK    	R18 K410 ; R18 := "/Lotus/Language/Zariman/ZarimanInfluenceGrineer"
	785	[403]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	786	[404]	SETGLOBALHASH	R16 K385 ; TimeOfDayConstants := R16
	787	[407]	NEWTABLE 	R16 3 0 ; R16 := {}
	788	[407]	GETGLOBAL	R17 K110 ; R17 := 0x0469f296
	789	[407]	LOADK    	R18 K411 ; R18 := "GAME_L1_ARM2"
	790	[407]	CALL     	R17 2 2 ; R17 := R17(R18)
	791	[407]	GETGLOBAL	R18 K110 ; R18 := 0x0469f296
	792	[407]	LOADK    	R19 K412 ; R19 := "GAME_C1_HEAD1"
	793	[407]	CALL     	R18 2 2 ; R18 := R18(R19)
	794	[407]	GETGLOBAL	R19 K110 ; R19 := 0x0469f296
	795	[407]	LOADK    	R20 K413 ; R20 := "GAME_R1_LEG1"
	796	[407]	CALL     	R19 2 2 ; R19 := R19(R20)
	797	[407]	GETGLOBAL	R20 K110 ; R20 := 0x0469f296
	798	[407]	LOADK    	R21 K414 ; R21 := "GAME_L1_LEG2"
	799	[407]	CALL     	R20 2 0 ; R20,... := R20(R21)
	800	[407]	SETLIST  	R16 0 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 0
	801	[409]	GETGLOBAL	R17 K415 ; R17 := 0x2d0fad09
	802	[409]	LOADK    	R18 K416 ; R18 := "EE.Interface.Utilities"
	803	[409]	CALL     	R17 2 2 ; R17 := R17(R18)
	804	[410]	GETGLOBAL	R18 K415 ; R18 := 0x2d0fad09
	805	[410]	LOADK    	R19 K417 ; R19 := "Lotus.Interface.UIStyleUtilities"
	806	[410]	CALL     	R18 2 2 ; R18 := R18(R19)
	807	[412]	NEWTABLE 	R19 4 0 ; R19 := {}
	808	[412]	LOADK    	R20 K418 ; R20 := "#FFFFFF"
	809	[412]	LOADK    	R21 K419 ; R21 := "#24D628"
	810	[412]	LOADK    	R22 K420 ; R22 := "#238DFF"
	811	[412]	LOADK    	R23 K421 ; R23 := "#C724D6"
	812	[412]	SETLIST  	R19 4 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 4
	813	[413]	NEWTABLE 	R20 4 0 ; R20 := {}
	814	[413]	LOADK    	R21 K422 ; R21 := 16777215.000000
	815	[413]	LOADK    	R22 K423 ; R22 := 2414120.000000
	816	[413]	LOADK    	R23 K424 ; R23 := 2330111.000000
	817	[413]	LOADK    	R24 K425 ; R24 := 13051094.000000
	818	[413]	SETLIST  	R20 4 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 4
	819	[414]	LOADK    	R21 := 0.000000
	820	[416]	LOADK    	R22 := 0.000000
	821	[417]	LOADK    	R23 K426 ; R23 := 3289650.000000
	822	[419]	OP_LOADBOOL	R24 0 0 ; R24 := false
	823	[421]	GETGLOBAL	R25 K63 ; R25 := 0x7ed0a956
	824	[421]	LOADK    	R26 K427 ; R26 := "/Lotus/Types/Game/LotusPvpGameRules"
	825	[421]	CALL     	R25 2 2 ; R25 := R25(R26)
	826	[422]	GETGLOBAL	R26 K110 ; R26 := 0x0469f296
	827	[422]	LOADK    	R27 K428 ; R27 := "ScanPoint"
	828	[422]	CALL     	R26 2 2 ; R26 := R26(R27)
	829	[424]	GETGLOBAL	R27 K110 ; R27 := 0x0469f296
	830	[424]	LOADK    	R28 K429 ; R28 := "KuvaSurvival"
	831	[424]	CALL     	R27 2 2 ; R27 := R27(R28)
	832	[426]	LOADNIL  	R28 R35 ; R28 := R29 := R30 := R31 := R32 := R33 := R34 := R35 := nil
	833	[439]	NEWTABLE 	R36 0 13 ; R36 := {}
	834	[441]	LOADK    	R37 := 2.000000
	835	[441]	NEWTABLE 	R38 0 2 ; R38 := {}
	836	[441]	LOADK    	R39 := 0.000000
	837	[441]	OP_LOADBOOL	R40 1 0 ; R40 := true
	838	[441]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	839	[441]	LOADK    	R39 := 1.000000
	840	[441]	OP_LOADBOOL	R40 1 0 ; R40 := true
	841	[441]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	842	[441]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	843	[442]	LOADK    	R37 := 3.000000
	844	[442]	NEWTABLE 	R38 0 2 ; R38 := {}
	845	[442]	LOADK    	R39 := 2.000000
	846	[442]	OP_LOADBOOL	R40 1 0 ; R40 := true
	847	[442]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	848	[442]	LOADK    	R39 := 3.000000
	849	[442]	OP_LOADBOOL	R40 1 0 ; R40 := true
	850	[442]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	851	[442]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	852	[443]	LOADK    	R37 := 4.000000
	853	[443]	NEWTABLE 	R38 0 2 ; R38 := {}
	854	[443]	LOADK    	R39 := 8.000000
	855	[443]	OP_LOADBOOL	R40 1 0 ; R40 := true
	856	[443]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	857	[443]	LOADK    	R39 := 9.000000
	858	[443]	OP_LOADBOOL	R40 1 0 ; R40 := true
	859	[443]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	860	[443]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	861	[444]	LOADK    	R37 := 5.000000
	862	[444]	NEWTABLE 	R38 0 2 ; R38 := {}
	863	[444]	LOADK    	R39 := 4.000000
	864	[444]	OP_LOADBOOL	R40 1 0 ; R40 := true
	865	[444]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	866	[444]	LOADK    	R39 := 5.000000
	867	[444]	OP_LOADBOOL	R40 1 0 ; R40 := true
	868	[444]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	869	[444]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	870	[445]	LOADK    	R37 := 6.000000
	871	[445]	NEWTABLE 	R38 0 2 ; R38 := {}
	872	[445]	LOADK    	R39 := 12.000000
	873	[445]	OP_LOADBOOL	R40 1 0 ; R40 := true
	874	[445]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	875	[445]	LOADK    	R39 := 13.000000
	876	[445]	OP_LOADBOOL	R40 1 0 ; R40 := true
	877	[445]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	878	[445]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	879	[446]	LOADK    	R37 := 7.000000
	880	[446]	NEWTABLE 	R38 0 2 ; R38 := {}
	881	[446]	LOADK    	R39 := 16.000000
	882	[446]	OP_LOADBOOL	R40 1 0 ; R40 := true
	883	[446]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	884	[446]	LOADK    	R39 := 17.000000
	885	[446]	OP_LOADBOOL	R40 1 0 ; R40 := true
	886	[446]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	887	[446]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	888	[447]	LOADK    	R37 := 8.000000
	889	[447]	NEWTABLE 	R38 0 2 ; R38 := {}
	890	[447]	LOADK    	R39 := 20.000000
	891	[447]	OP_LOADBOOL	R40 1 0 ; R40 := true
	892	[447]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	893	[447]	LOADK    	R39 := 21.000000
	894	[447]	OP_LOADBOOL	R40 1 0 ; R40 := true
	895	[447]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	896	[447]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	897	[448]	LOADK    	R37 := 9.000000
	898	[448]	NEWTABLE 	R38 0 2 ; R38 := {}
	899	[448]	LOADK    	R39 := 24.000000
	900	[448]	OP_LOADBOOL	R40 1 0 ; R40 := true
	901	[448]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	902	[448]	LOADK    	R39 := 25.000000
	903	[448]	OP_LOADBOOL	R40 1 0 ; R40 := true
	904	[448]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	905	[448]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	906	[449]	LOADK    	R37 := 10.000000
	907	[449]	NEWTABLE 	R38 0 2 ; R38 := {}
	908	[449]	LOADK    	R39 := 22.000000
	909	[449]	OP_LOADBOOL	R40 1 0 ; R40 := true
	910	[449]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	911	[449]	LOADK    	R39 := 23.000000
	912	[449]	OP_LOADBOOL	R40 1 0 ; R40 := true
	913	[449]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	914	[449]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	915	[450]	LOADK    	R37 := 11.000000
	916	[450]	NEWTABLE 	R38 0 2 ; R38 := {}
	917	[450]	LOADK    	R39 := 18.000000
	918	[450]	OP_LOADBOOL	R40 1 0 ; R40 := true
	919	[450]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	920	[450]	LOADK    	R39 := 19.000000
	921	[450]	OP_LOADBOOL	R40 1 0 ; R40 := true
	922	[450]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	923	[450]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	924	[451]	LOADK    	R37 := 12.000000
	925	[451]	NEWTABLE 	R38 0 2 ; R38 := {}
	926	[451]	LOADK    	R39 := 13.000000
	927	[451]	OP_LOADBOOL	R40 1 0 ; R40 := true
	928	[451]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	929	[451]	LOADK    	R39 := 14.000000
	930	[451]	OP_LOADBOOL	R40 1 0 ; R40 := true
	931	[451]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	932	[451]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	933	[452]	LOADK    	R37 := 13.000000
	934	[452]	NEWTABLE 	R38 0 2 ; R38 := {}
	935	[452]	LOADK    	R39 := 6.000000
	936	[452]	OP_LOADBOOL	R40 1 0 ; R40 := true
	937	[452]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	938	[452]	LOADK    	R39 := 7.000000
	939	[452]	OP_LOADBOOL	R40 1 0 ; R40 := true
	940	[452]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	941	[452]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	942	[453]	LOADK    	R37 := 16.000000
	943	[453]	NEWTABLE 	R38 0 2 ; R38 := {}
	944	[453]	LOADK    	R39 := 10.000000
	945	[453]	OP_LOADBOOL	R40 1 0 ; R40 := true
	946	[453]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	947	[453]	LOADK    	R39 := 11.000000
	948	[453]	OP_LOADBOOL	R40 1 0 ; R40 := true
	949	[453]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	950	[453]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	951	[457]	NEWTABLE 	R37 1 0 ; R37 := {}
	952	[460]	LOADK    	R38 := 34.000000
	953	[460]	SETLIST  	R37 1 1 ; R37[(1-1)*FPF+i] := R(37+i), 1 <= i <= 1
	954	[462]	GETGLOBAL	R38 K63 ; R38 := 0x7ed0a956
	955	[462]	LOADK    	R39 K430 ; R39 := "/Lotus/Types/Keys/WarWithinQuest/WarWithinQuestKeyChain"
	956	[462]	CALL     	R38 2 2 ; R38 := R38(R39)
	957	[463]	GETGLOBAL	R39 K63 ; R39 := 0x7ed0a956
	958	[463]	LOADK    	R40 K431 ; R40 := "/Lotus/Types/Keys/WraithQuest/WraithQuestKeyChain"
	959	[463]	CALL     	R39 2 2 ; R39 := R39(R40)
	960	[464]	GETGLOBAL	R40 K63 ; R40 := 0x7ed0a956
	961	[464]	LOADK    	R41 K432 ; R41 := "/Lotus/Types/Enemies/AdvancedSpawners/LarvlingSpawner"
	962	[464]	CALL     	R40 2 2 ; R40 := R40(R41)
	963	[465]	GETGLOBAL	R41 K63 ; R41 := 0x7ed0a956
	964	[465]	LOADK    	R42 K433 ; R42 := "/Lotus/Types/Enemies/AdvancedSpawners/LawyerTreasurerSpawner"
	965	[465]	CALL     	R41 2 2 ; R41 := R41(R42)
	966	[466]	GETGLOBAL	R42 K63 ; R42 := 0x7ed0a956
	967	[466]	LOADK    	R43 K434 ; R43 := "/Lotus/Types/Enemies/AdvancedSpawners/LawyerPetSpawner"
	968	[466]	CALL     	R42 2 2 ; R42 := R42(R43)
	969	[467]	GETGLOBAL	R43 K63 ; R43 := 0x7ed0a956
	970	[467]	LOADK    	R44 K435 ; R44 := "/Lotus/Types/Keys/InfestedMicroplanetQuest/InfestedMicroplanetQuestKeyChain"
	971	[467]	CALL     	R43 2 2 ; R43 := R43(R44)
	972	[468]	GETGLOBAL	R44 K63 ; R44 := 0x7ed0a956
	973	[468]	LOADK    	R45 K436 ; R45 := "/Lotus/Types/Keys/SolarisQuest/SolarisQuestKeyChain"
	974	[468]	CALL     	R44 2 2 ; R44 := R44(R45)
	975	[469]	NEWTABLE 	R45 3 0 ; R45 := {}
	976	[470]	GETGLOBAL	R46 K63 ; R46 := 0x7ed0a956
	977	[470]	LOADK    	R47 K437 ; R47 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
	978	[470]	CALL     	R46 2 2 ; R46 := R46(R47)
	979	[471]	GETGLOBAL	R47 K63 ; R47 := 0x7ed0a956
	980	[471]	LOADK    	R48 K438 ; R48 := "/Lotus/Types/Keys/NewWarIntroQuest/NewWarIntroKeyChain"
	981	[471]	CALL     	R47 2 2 ; R47 := R47(R48)
	982	[472]	GETGLOBAL	R48 K63 ; R48 := 0x7ed0a956
	983	[472]	LOADK    	R49 K439 ; R49 := "/Lotus/Types/Keys/SacrificeQuest/SacrificeQuestKeyChain"
	984	[472]	CALL     	R48 2 2 ; R48 := R48(R49)
	985	[473]	GETGLOBAL	R49 K63 ; R49 := 0x7ed0a956
	986	[473]	LOADK    	R50 K440 ; R50 := "/Lotus/Types/Keys/ChimeraQuest/ChimeraKeyChain"
	987	[473]	CALL     	R49 2 0 ; R49,... := R49(R50)
	988	[474]	SETLIST  	R45 0 1 ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 0
	989	[482]	CLOSURE  	R46 0 ; R46 := closure(Function #1)
	990	[476]	SETGLOBAL	R46 K441 ; GetWarframeFromOperator := R46
	991	[493]	CLOSURE  	R46 1 ; R46 := closure(Function #2)
	992	[484]	SETGLOBAL	R46 K442 ; UnmountVehicleAndGetRider := R46
	993	[503]	CLOSURE  	R46 2 ; R46 := closure(Function #3)
	994	[503]	MOVE     	R0 R17 ; R0 := R17
	995	[511]	CLOSURE  	R47 3 ; R47 := closure(Function #4)
	996	[505]	SETGLOBAL	R47 K443 ; ShouldBlockForTutorial := R47
	997	[536]	CLOSURE  	R47 4 ; R47 := closure(Function #5)
	998	[513]	SETGLOBAL	R47 K444 ; GetPhotoshopDefaultSwatches := R47
	999	[565]	CLOSURE  	R47 5 ; R47 := closure(Function #6)
	1000	[538]	SETGLOBAL	R47 K445 ; GetKubrowTypesTable := R47
	1001	[621]	CLOSURE  	R47 6 ; R47 := closure(Function #7)
	1002	[621]	MOVE     	R0 R17 ; R0 := R17
	1003	[636]	CLOSURE  	R48 7 ; R48 := closure(Function #8)
	1004	[640]	CLOSURE  	R49 8 ; R49 := closure(Function #9)
	1005	[640]	MOVE     	R0 R48 ; R0 := R48
	1006	[638]	SETGLOBAL	R49 K446 ; GetSecondElements := R49
	1007	[651]	CLOSURE  	R49 9 ; R49 := closure(Function #10)
	1008	[651]	MOVE     	R0 R48 ; R0 := R48
	1009	[651]	MOVE     	R0 R47 ; R0 := R47
	1010	[655]	CLOSURE  	R50 10 ; R50 := closure(Function #11)
	1011	[655]	MOVE     	R0 R49 ; R0 := R49
	1012	[653]	SETGLOBAL	R50 K447 ; SecondsToFormattedTime := R50
	1013	[687]	CLOSURE  	R50 11 ; R50 := closure(Function #12)
	1014	[687]	MOVE     	R0 R48 ; R0 := R48
	1015	[687]	MOVE     	R0 R17 ; R0 := R17
	1016	[657]	SETGLOBAL	R50 K448 ; GetTwitterStyleTime := R50
	1017	[711]	CLOSURE  	R50 12 ; R50 := closure(Function #13)
	1018	[711]	MOVE     	R0 R48 ; R0 := R48
	1019	[715]	CLOSURE  	R51 13 ; R51 := closure(Function #14)
	1020	[715]	MOVE     	R0 R50 ; R0 := R50
	1021	[713]	SETGLOBAL	R51 K449 ; GetStoreTime := R51
	1022	[745]	CLOSURE  	R51 14 ; R51 := closure(Function #15)
	1023	[745]	MOVE     	R0 R48 ; R0 := R48
	1024	[749]	CLOSURE  	R52 15 ; R52 := closure(Function #16)
	1025	[749]	MOVE     	R0 R51 ; R0 := R51
	1026	[747]	SETGLOBAL	R52 K450 ; GetFullTime := R52
	1027	[767]	CLOSURE  	R52 16 ; R52 := closure(Function #17)
	1028	[767]	MOVE     	R0 R11 ; R0 := R11
	1029	[751]	SETGLOBAL	R52 K451 ; GetPlayerAvatar := R52
	1030	[784]	CLOSURE  	R52 17 ; R52 := closure(Function #18)
	1031	[788]	CLOSURE  	R53 18 ; R53 := closure(Function #19)
	1032	[788]	MOVE     	R0 R52 ; R0 := R52
	1033	[786]	SETGLOBAL	R53 K452 ; GetMainMenuSuitAvatar := R53
	1034	[798]	CLOSURE  	R53 19 ; R53 := closure(Function #20)
	1035	[798]	MOVE     	R0 R52 ; R0 := R52
	1036	[802]	CLOSURE  	R54 20 ; R54 := closure(Function #21)
	1037	[802]	MOVE     	R0 R53 ; R0 := R53
	1038	[800]	SETGLOBAL	R54 K453 ; GetMainMenuSentinelAvatar := R54
	1039	[816]	CLOSURE  	R54 21 ; R54 := closure(Function #22)
	1040	[816]	MOVE     	R0 R22 ; R0 := R22
	1041	[816]	MOVE     	R0 R23 ; R0 := R23
	1042	[816]	MOVE     	R0 R17 ; R0 := R17
	1043	[883]	CLOSURE  	R55 22 ; R55 := closure(Function #23)
	1044	[883]	MOVE     	R0 R54 ; R0 := R54
	1045	[883]	MOVE     	R0 R19 ; R0 := R19
	1046	[887]	CLOSURE  	R56 23 ; R56 := closure(Function #24)
	1047	[887]	MOVE     	R0 R55 ; R0 := R55
	1048	[885]	SETGLOBAL	R56 K454 ; GetItemToolTipText := R56
	1049	[895]	CLOSURE  	R56 24 ; R56 := closure(Function #25)
	1050	[895]	MOVE     	R0 R20 ; R0 := R20
	1051	[889]	SETGLOBAL	R56 K455 ; GetItemRarityColor := R56
	1052	[909]	CLOSURE  	R56 25 ; R56 := closure(Function #26)
	1053	[899]	SETGLOBAL	R56 K456 ; OpenColorPicker := R56
	1054	[1131]	CLOSURE  	R56 26 ; R56 := closure(Function #27)
	1055	[1131]	MOVE     	R0 R52 ; R0 := R52
	1056	[1131]	MOVE     	R0 R21 ; R0 := R21
	1057	[1131]	MOVE     	R0 R17 ; R0 := R17
	1058	[911]	SETGLOBAL	R56 K457 ; UpdateSuit := R56
	1059	[1139]	CLOSURE  	R56 27 ; R56 := closure(Function #28)
	1060	[1133]	SETGLOBAL	R56 K458 ; UpdateMiniGameHeadTracking := R56
	1061	[1143]	CLOSURE  	R56 28 ; R56 := closure(Function #29)
	1062	[1142]	SETGLOBAL	R56 K459 ; OnAvatarImageSet := R56
	1063	[1217]	CLOSURE  	R56 29 ; R56 := closure(Function #30)
	1064	[1145]	SETGLOBAL	R56 K460 ; InitializeProfileIconList := R56
	1065	[1231]	CLOSURE  	R56 30 ; R56 := closure(Function #31)
	1066	[1220]	SETGLOBAL	R56 K461 ; UnregisterProfileIcon := R56
	1067	[1253]	CLOSURE  	R56 31 ; R56 := closure(Function #32)
	1068	[1233]	SETGLOBAL	R56 K462 ; RegisterProfileIcon := R56
	1069	[1266]	CLOSURE  	R56 32 ; R56 := closure(Function #33)
	1070	[1314]	CLOSURE  	R57 33 ; R57 := closure(Function #34)
	1071	[1407]	CLOSURE  	R58 34 ; R58 := closure(Function #35)
	1072	[1407]	MOVE     	R0 R46 ; R0 := R46
	1073	[1407]	MOVE     	R0 R17 ; R0 := R17
	1074	[1407]	MOVE     	R0 R56 ; R0 := R56
	1075	[1407]	MOVE     	R0 R57 ; R0 := R57
	1076	[1316]	SETGLOBAL	R58 K463 ; ShowReportMenu := R58
	1077	[1411]	CLOSURE  	R58 35 ; R58 := closure(Function #36)
	1078	[1411]	MOVE     	R0 R17 ; R0 := R17
	1079	[1409]	SETGLOBAL	R58 K464 ; ToRad := R58
	1080	[1415]	CLOSURE  	R58 36 ; R58 := closure(Function #37)
	1081	[1415]	MOVE     	R0 R17 ; R0 := R17
	1082	[1413]	SETGLOBAL	R58 K465 ; TransformPixelToViewportCoordinates := R58
	1083	[1419]	CLOSURE  	R58 37 ; R58 := closure(Function #38)
	1084	[1419]	MOVE     	R0 R17 ; R0 := R17
	1085	[1417]	SETGLOBAL	R58 K466 ; GetRootBasedPosition := R58
	1086	[1423]	CLOSURE  	R58 38 ; R58 := closure(Function #39)
	1087	[1423]	MOVE     	R0 R17 ; R0 := R17
	1088	[1421]	SETGLOBAL	R58 K467 ; CreateScreenParticles := R58
	1089	[1453]	CLOSURE  	R58 39 ; R58 := closure(Function #40)
	1090	[1426]	SETGLOBAL	R58 K468 ; SetupAbilityUIBySuitType := R58
	1091	[1482]	CLOSURE  	R58 40 ; R58 := closure(Function #41)
	1092	[1456]	SETGLOBAL	R58 K469 ; SetupAbilityUIBySuitInstance := R58
	1093	[1543]	CLOSURE  	R58 41 ; R58 := closure(Function #42)
	1094	[1543]	MOVE     	R0 R17 ; R0 := R17
	1095	[1485]	SETGLOBAL	R58 K470 ; InitializeContextMenu := R58
	1096	[1563]	CLOSURE  	R58 42 ; R58 := closure(Function #43)
	1097	[1546]	SETGLOBAL	R58 K471 ; GetPointsRemainingForItem := R58
	1098	[1569]	CLOSURE  	R58 43 ; R58 := closure(Function #44)
	1099	[1573]	CLOSURE  	R59 44 ; R59 := closure(Function #45)
	1100	[1573]	MOVE     	R0 R58 ; R0 := R58
	1101	[1571]	SETGLOBAL	R59 K472 ; CanPurchaseIfAlreadyOwned := R59
	1102	[1589]	CLOSURE  	R59 45 ; R59 := closure(Function #46)
	1103	[1576]	SETGLOBAL	R59 K473 ; HaveEnoughSlots := R59
	1104	[1607]	CLOSURE  	R59 46 ; R59 := closure(Function #47)
	1105	[1591]	SETGLOBAL	R59 K474 ; IsXPLocked := R59
	1106	[1631]	CLOSURE  	R59 47 ; R59 := closure(Function #48)
	1107	[1609]	SETGLOBAL	R59 K475 ; IsPVPLocked := R59
	1108	[1635]	CLOSURE  	R59 48 ; R59 := closure(Function #49)
	1109	[1635]	MOVE     	R0 R17 ; R0 := R17
	1110	[1633]	SETGLOBAL	R59 K476 ; CreateParticles := R59
	1111	[1640]	CLOSURE  	R59 49 ; R59 := closure(Function #50)
	1112	[1643]	CLOSURE  	R60 50 ; R60 := closure(Function #51)
	1113	[1643]	MOVE     	R0 R59 ; R0 := R59
	1114	[1641]	SETGLOBAL	R60 K477 ; IsDevServer := R60
	1115	[1648]	CLOSURE  	R60 51 ; R60 := closure(Function #52)
	1116	[1651]	CLOSURE  	R61 52 ; R61 := closure(Function #53)
	1117	[1651]	MOVE     	R0 R60 ; R0 := R60
	1118	[1649]	SETGLOBAL	R61 K478 ; IsTestServer := R61
	1119	[1656]	CLOSURE  	R61 53 ; R61 := closure(Function #54)
	1120	[1659]	CLOSURE  	R62 54 ; R62 := closure(Function #55)
	1121	[1659]	MOVE     	R0 R61 ; R0 := R61
	1122	[1657]	SETGLOBAL	R62 K479 ; IsLocalServer := R62
	1123	[1668]	CLOSURE  	R62 55 ; R62 := closure(Function #56)
	1124	[1668]	MOVE     	R0 R59 ; R0 := R59
	1125	[1668]	MOVE     	R0 R60 ; R0 := R60
	1126	[1668]	MOVE     	R0 R61 ; R0 := R61
	1127	[1661]	SETGLOBAL	R62 K480 ; IsRetailServer := R62
	1128	[1683]	CLOSURE  	R62 56 ; R62 := closure(Function #57)
	1129	[1692]	CLOSURE  	R63 57 ; R63 := closure(Function #58)
	1130	[1692]	MOVE     	R0 R62 ; R0 := R62
	1131	[1727]	CLOSURE  	R64 58 ; R64 := closure(Function #59)
	1132	[1727]	MOVE     	R0 R63 ; R0 := R63
	1133	[1731]	CLOSURE  	R65 59 ; R65 := closure(Function #60)
	1134	[1731]	MOVE     	R0 R62 ; R0 := R62
	1135	[1729]	SETGLOBAL	R65 K481 ; IsInGamePlay := R65
	1136	[1739]	CLOSURE  	R65 60 ; R65 := closure(Function #61)
	1137	[1743]	CLOSURE  	R66 61 ; R66 := closure(Function #62)
	1138	[1743]	MOVE     	R0 R65 ; R0 := R65
	1139	[1741]	SETGLOBAL	R66 K482 ; IsInMissionOrDojo := R66
	1140	[1755]	CLOSURE  	R66 62 ; R66 := closure(Function #63)
	1141	[1759]	CLOSURE  	R67 63 ; R67 := closure(Function #64)
	1142	[1759]	MOVE     	R0 R66 ; R0 := R66
	1143	[1757]	SETGLOBAL	R67 K483 ; IsInMission := R67
	1144	[1772]	CLOSURE  	R67 64 ; R67 := closure(Function #65)
	1145	[1772]	MOVE     	R0 R31 ; R0 := R31
	1146	[1772]	MOVE     	R0 R66 ; R0 := R66
	1147	[1761]	SETGLOBAL	R67 K484 ; IsInNewWarAltCharacterMission := R67
	1148	[1776]	CLOSURE  	R67 65 ; R67 := closure(Function #66)
	1149	[1776]	MOVE     	R0 R63 ; R0 := R63
	1150	[1774]	SETGLOBAL	R67 K485 ; GetStarChart := R67
	1151	[1780]	CLOSURE  	R67 66 ; R67 := closure(Function #67)
	1152	[1780]	MOVE     	R0 R64 ; R0 := R64
	1153	[1778]	SETGLOBAL	R67 K486 ; GetStarChartNodes := R67
	1154	[1784]	CLOSURE  	R67 67 ; R67 := closure(Function #68)
	1155	[1788]	CLOSURE  	R68 68 ; R68 := closure(Function #69)
	1156	[1788]	MOVE     	R0 R67 ; R0 := R67
	1157	[1786]	SETGLOBAL	R68 K487 ; IsInHub := R68
	1158	[1792]	CLOSURE  	R68 69 ; R68 := closure(Function #70)
	1159	[1796]	CLOSURE  	R69 70 ; R69 := closure(Function #71)
	1160	[1796]	MOVE     	R0 R68 ; R0 := R68
	1161	[1794]	SETGLOBAL	R69 K488 ; RegionIsAKey := R69
	1162	[1800]	CLOSURE  	R69 71 ; R69 := closure(Function #72)
	1163	[1798]	SETGLOBAL	R69 K489 ; ResourceDronesEnabledForRegion := R69
	1164	[1947]	CLOSURE  	R69 72 ; R69 := closure(Function #73)
	1165	[1947]	MOVE     	R0 R63 ; R0 := R63
	1166	[1947]	MOVE     	R0 R68 ; R0 := R68
	1167	[1951]	CLOSURE  	R70 73 ; R70 := closure(Function #74)
	1168	[1951]	MOVE     	R0 R69 ; R0 := R69
	1169	[1949]	SETGLOBAL	R70 K490 ; GetNodeInfo := R70
	1170	[2012]	CLOSURE  	R70 74 ; R70 := closure(Function #75)
	1171	[2012]	MOVE     	R0 R63 ; R0 := R63
	1172	[2012]	MOVE     	R0 R69 ; R0 := R69
	1173	[2012]	MOVE     	R0 R17 ; R0 := R17
	1174	[2012]	MOVE     	R0 R13 ; R0 := R13
	1175	[2016]	CLOSURE  	R71 75 ; R71 := closure(Function #76)
	1176	[2016]	MOVE     	R0 R70 ; R0 := R70
	1177	[2014]	SETGLOBAL	R71 K491 ; BuildGameModeIdForNode := R71
	1178	[2020]	CLOSURE  	R71 76 ; R71 := closure(Function #77)
	1179	[2018]	SETGLOBAL	R71 K492 ; BuildGameModeIdForSimulacrum := R71
	1180	[2024]	CLOSURE  	R71 77 ; R71 := closure(Function #78)
	1181	[2022]	SETGLOBAL	R71 K493 ; IsSimulacrumGameModeId := R71
	1182	[2028]	CLOSURE  	R71 78 ; R71 := closure(Function #79)
	1183	[2026]	SETGLOBAL	R71 K494 ; BuildGameModeIdForPhotobooth := R71
	1184	[2032]	CLOSURE  	R71 79 ; R71 := closure(Function #80)
	1185	[2030]	SETGLOBAL	R71 K495 ; IsPhotoboothGameModeId := R71
	1186	[2037]	CLOSURE  	R71 80 ; R71 := closure(Function #81)
	1187	[2037]	MOVE     	R0 R13 ; R0 := R13
	1188	[2034]	SETGLOBAL	R71 K496 ; BuildGameModeIdForPVP := R71
	1189	[2041]	CLOSURE  	R71 81 ; R71 := closure(Function #82)
	1190	[2041]	MOVE     	R0 R13 ; R0 := R13
	1191	[2039]	SETGLOBAL	R71 K497 ; BuildGameModeIdForClanDojo := R71
	1192	[2045]	CLOSURE  	R71 82 ; R71 := closure(Function #83)
	1193	[2045]	MOVE     	R0 R13 ; R0 := R13
	1194	[2043]	SETGLOBAL	R71 K498 ; IsClanDojoGameModeId := R71
	1195	[2049]	CLOSURE  	R71 83 ; R71 := closure(Function #84)
	1196	[2049]	MOVE     	R0 R13 ; R0 := R13
	1197	[2047]	SETGLOBAL	R71 K499 ; BuildGameModeIdForDojoDuel := R71
	1198	[2053]	CLOSURE  	R71 84 ; R71 := closure(Function #85)
	1199	[2053]	MOVE     	R0 R13 ; R0 := R13
	1200	[2051]	SETGLOBAL	R71 K500 ; IsDojoDuelGameModeId := R71
	1201	[2057]	CLOSURE  	R71 85 ; R71 := closure(Function #86)
	1202	[2057]	MOVE     	R0 R14 ; R0 := R14
	1203	[2061]	CLOSURE  	R72 86 ; R72 := closure(Function #87)
	1204	[2061]	MOVE     	R0 R71 ; R0 := R71
	1205	[2059]	SETGLOBAL	R72 K501 ; IsAlertGameModeId := R72
	1206	[2065]	CLOSURE  	R72 87 ; R72 := closure(Function #88)
	1207	[2065]	MOVE     	R0 R14 ; R0 := R14
	1208	[2069]	CLOSURE  	R73 88 ; R73 := closure(Function #89)
	1209	[2069]	MOVE     	R0 R72 ; R0 := R72
	1210	[2067]	SETGLOBAL	R73 K502 ; IsNightmareGameModeId := R73
	1211	[2073]	CLOSURE  	R73 89 ; R73 := closure(Function #90)
	1212	[2073]	MOVE     	R0 R14 ; R0 := R14
	1213	[2077]	CLOSURE  	R74 90 ; R74 := closure(Function #91)
	1214	[2077]	MOVE     	R0 R73 ; R0 := R73
	1215	[2075]	SETGLOBAL	R74 K503 ; IsEventGameModeId := R74
	1216	[2081]	CLOSURE  	R74 91 ; R74 := closure(Function #92)
	1217	[2081]	MOVE     	R0 R14 ; R0 := R14
	1218	[2085]	CLOSURE  	R75 92 ; R75 := closure(Function #93)
	1219	[2085]	MOVE     	R0 R14 ; R0 := R14
	1220	[2089]	CLOSURE  	R76 93 ; R76 := closure(Function #94)
	1221	[2089]	MOVE     	R0 R14 ; R0 := R14
	1222	[2093]	CLOSURE  	R77 94 ; R77 := closure(Function #95)
	1223	[2093]	MOVE     	R0 R76 ; R0 := R76
	1224	[2091]	SETGLOBAL	R77 K504 ; IsPvpGameModeId := R77
	1225	[2098]	CLOSURE  	R77 95 ; R77 := closure(Function #96)
	1226	[2098]	MOVE     	R0 R14 ; R0 := R14
	1227	[2102]	CLOSURE  	R78 96 ; R78 := closure(Function #97)
	1228	[2102]	MOVE     	R0 R77 ; R0 := R77
	1229	[2100]	SETGLOBAL	R78 K505 ; IsSyndicateGameModeId := R78
	1230	[2107]	CLOSURE  	R78 97 ; R78 := closure(Function #98)
	1231	[2107]	MOVE     	R0 R14 ; R0 := R14
	1232	[2111]	CLOSURE  	R79 98 ; R79 := closure(Function #99)
	1233	[2111]	MOVE     	R0 R78 ; R0 := R78
	1234	[2109]	SETGLOBAL	R79 K506 ; IsSortieGameModeId := R79
	1235	[2116]	CLOSURE  	R79 99 ; R79 := closure(Function #100)
	1236	[2116]	MOVE     	R0 R14 ; R0 := R14
	1237	[2121]	CLOSURE  	R80 100 ; R80 := closure(Function #101)
	1238	[2121]	MOVE     	R0 R14 ; R0 := R14
	1239	[2125]	CLOSURE  	R81 101 ; R81 := closure(Function #102)
	1240	[2125]	MOVE     	R0 R80 ; R0 := R80
	1241	[2123]	SETGLOBAL	R81 K507 ; IsHubGameModeId := R81
	1242	[2130]	CLOSURE  	R81 102 ; R81 := closure(Function #103)
	1243	[2130]	MOVE     	R0 R14 ; R0 := R14
	1244	[2135]	CLOSURE  	R82 103 ; R82 := closure(Function #104)
	1245	[2135]	MOVE     	R0 R14 ; R0 := R14
	1246	[2140]	CLOSURE  	R83 104 ; R83 := closure(Function #105)
	1247	[2140]	MOVE     	R0 R14 ; R0 := R14
	1248	[2144]	CLOSURE  	R84 105 ; R84 := closure(Function #106)
	1249	[2144]	MOVE     	R0 R83 ; R0 := R83
	1250	[2142]	SETGLOBAL	R84 K508 ; IsJunctionGameModeId := R84
	1251	[2150]	CLOSURE  	R84 106 ; R84 := closure(Function #107)
	1252	[2155]	CLOSURE  	R85 107 ; R85 := closure(Function #108)
	1253	[2155]	MOVE     	R0 R14 ; R0 := R14
	1254	[2159]	CLOSURE  	R86 108 ; R86 := closure(Function #109)
	1255	[2159]	MOVE     	R0 R85 ; R0 := R85
	1256	[2157]	SETGLOBAL	R86 K509 ; IsKeyGameModeId := R86
	1257	[2164]	CLOSURE  	R86 109 ; R86 := closure(Function #110)
	1258	[2164]	MOVE     	R0 R14 ; R0 := R14
	1259	[2168]	CLOSURE  	R87 110 ; R87 := closure(Function #111)
	1260	[2168]	MOVE     	R0 R86 ; R0 := R86
	1261	[2166]	SETGLOBAL	R87 K510 ; IsHardGameModeId := R87
	1262	[2175]	CLOSURE  	R87 111 ; R87 := closure(Function #112)
	1263	[2170]	SETGLOBAL	R87 K511 ; IsPlayingHardGameModeMission := R87
	1264	[2180]	CLOSURE  	R87 112 ; R87 := closure(Function #113)
	1265	[2180]	MOVE     	R0 R14 ; R0 := R14
	1266	[2184]	CLOSURE  	R88 113 ; R88 := closure(Function #114)
	1267	[2184]	MOVE     	R0 R87 ; R0 := R87
	1268	[2182]	SETGLOBAL	R88 K512 ; IsHardDailyGameModeId := R88
	1269	[2205]	CLOSURE  	R88 114 ; R88 := closure(Function #115)
	1270	[2205]	MOVE     	R0 R63 ; R0 := R63
	1271	[2205]	MOVE     	R0 R70 ; R0 := R70
	1272	[2186]	SETGLOBAL	R88 K513 ; IsScenarioGameModeId := R88
	1273	[2210]	CLOSURE  	R88 115 ; R88 := closure(Function #116)
	1274	[2210]	MOVE     	R0 R14 ; R0 := R14
	1275	[2214]	CLOSURE  	R89 116 ; R89 := closure(Function #117)
	1276	[2214]	MOVE     	R0 R13 ; R0 := R13
	1277	[2214]	MOVE     	R0 R12 ; R0 := R12
	1278	[2212]	SETGLOBAL	R89 K514 ; GetRegionFromGameModeId := R89
	1279	[2218]	CLOSURE  	R89 117 ; R89 := closure(Function #118)
	1280	[2216]	SETGLOBAL	R89 K515 ; GetNodeFromGameModeId := R89
	1281	[2280]	CLOSURE  	R89 118 ; R89 := closure(Function #119)
	1282	[2280]	MOVE     	R0 R13 ; R0 := R13
	1283	[2280]	MOVE     	R0 R12 ; R0 := R12
	1284	[2280]	MOVE     	R0 R76 ; R0 := R76
	1285	[2280]	MOVE     	R0 R73 ; R0 := R73
	1286	[2280]	MOVE     	R0 R77 ; R0 := R77
	1287	[2280]	MOVE     	R0 R78 ; R0 := R78
	1288	[2280]	MOVE     	R0 R80 ; R0 := R80
	1289	[2280]	MOVE     	R0 R84 ; R0 := R84
	1290	[2280]	MOVE     	R0 R85 ; R0 := R85
	1291	[2280]	MOVE     	R0 R63 ; R0 := R63
	1292	[2280]	MOVE     	R0 R36 ; R0 := R36
	1293	[2284]	CLOSURE  	R90 119 ; R90 := closure(Function #120)
	1294	[2284]	MOVE     	R0 R89 ; R0 := R89
	1295	[2282]	SETGLOBAL	R90 K516 ; GetNodeNameFromGameModeId := R90
	1296	[2320]	CLOSURE  	R90 120 ; R90 := closure(Function #121)
	1297	[2320]	MOVE     	R0 R71 ; R0 := R71
	1298	[2320]	MOVE     	R0 R73 ; R0 := R73
	1299	[2320]	MOVE     	R0 R74 ; R0 := R74
	1300	[2320]	MOVE     	R0 R75 ; R0 := R75
	1301	[2320]	MOVE     	R0 R77 ; R0 := R77
	1302	[2320]	MOVE     	R0 R78 ; R0 := R78
	1303	[2320]	MOVE     	R0 R79 ; R0 := R79
	1304	[2320]	MOVE     	R0 R80 ; R0 := R80
	1305	[2320]	MOVE     	R0 R81 ; R0 := R81
	1306	[2320]	MOVE     	R0 R82 ; R0 := R82
	1307	[2320]	MOVE     	R0 R85 ; R0 := R85
	1308	[2320]	MOVE     	R0 R72 ; R0 := R72
	1309	[2320]	MOVE     	R0 R87 ; R0 := R87
	1310	[2320]	MOVE     	R0 R86 ; R0 := R86
	1311	[2320]	MOVE     	R0 R88 ; R0 := R88
	1312	[2286]	SETGLOBAL	R90 K517 ; GetNodeModifierTagFromGameModeId := R90
	1313	[2332]	CLOSURE  	R90 121 ; R90 := closure(Function #122)
	1314	[2332]	MOVE     	R0 R63 ; R0 := R63
	1315	[2332]	MOVE     	R0 R89 ; R0 := R89
	1316	[2332]	MOVE     	R0 R25 ; R0 := R25
	1317	[2345]	CLOSURE  	R91 122 ; R91 := closure(Function #123)
	1318	[2345]	MOVE     	R0 R90 ; R0 := R90
	1319	[2349]	CLOSURE  	R92 123 ; R92 := closure(Function #124)
	1320	[2349]	MOVE     	R0 R91 ; R0 := R91
	1321	[2347]	SETGLOBAL	R92 K518 ; CanMergeSquad := R92
	1322	[2359]	CLOSURE  	R92 124 ; R92 := closure(Function #125)
	1323	[2359]	MOVE     	R0 R77 ; R0 := R77
	1324	[2359]	MOVE     	R0 R78 ; R0 := R78
	1325	[2359]	MOVE     	R0 R13 ; R0 := R13
	1326	[2359]	MOVE     	R0 R12 ; R0 := R12
	1327	[2359]	MOVE     	R0 R17 ; R0 := R17
	1328	[2359]	MOVE     	R0 R89 ; R0 := R89
	1329	[2351]	SETGLOBAL	R92 K519 ; GetDisplayedNodeNameFromGameModeId := R92
	1330	[2378]	CLOSURE  	R92 125 ; R92 := closure(Function #126)
	1331	[2361]	SETGLOBAL	R92 K520 ; GetAlertExpiryforNode := R92
	1332	[2400]	CLOSURE  	R92 126 ; R92 := closure(Function #127)
	1333	[2400]	MOVE     	R0 R63 ; R0 := R63
	1334	[2380]	SETGLOBAL	R92 K521 ; IsRegionUnlocked := R92
	1335	[2410]	CLOSURE  	R92 127 ; R92 := closure(Function #128)
	1336	[2410]	MOVE     	R0 R17 ; R0 := R17
	1337	[2402]	SETGLOBAL	R92 K522 ; IsChatTextActive := R92
	1338	[2438]	CLOSURE  	R92 128 ; R92 := closure(Function #129)
	1339	[2438]	MOVE     	R0 R71 ; R0 := R71
	1340	[2412]	SETGLOBAL	R92 K523 ; IsSessionExpired := R92
	1341	[2457]	CLOSURE  	R92 129 ; R92 := closure(Function #130)
	1342	[2440]	SETGLOBAL	R92 K524 ; CheckShowTutorial := R92
	1343	[2483]	CLOSURE  	R92 130 ; R92 := closure(Function #131)
	1344	[2487]	CLOSURE  	R93 131 ; R93 := closure(Function #132)
	1345	[2487]	MOVE     	R0 R92 ; R0 := R92
	1346	[2485]	SETGLOBAL	R93 K525 ; InterruptTransmission := R93
	1347	[2504]	CLOSURE  	R93 132 ; R93 := closure(Function #133)
	1348	[2504]	MOVE     	R0 R92 ; R0 := R92
	1349	[2508]	CLOSURE  	R94 133 ; R94 := closure(Function #134)
	1350	[2508]	MOVE     	R0 R93 ; R0 := R93
	1351	[2506]	SETGLOBAL	R94 K526 ; QueueTransmission := R94
	1352	[2522]	CLOSURE  	R94 134 ; R94 := closure(Function #135)
	1353	[2522]	MOVE     	R0 R93 ; R0 := R93
	1354	[2526]	CLOSURE  	R95 135 ; R95 := closure(Function #136)
	1355	[2526]	MOVE     	R0 R94 ; R0 := R94
	1356	[2524]	SETGLOBAL	R95 K527 ; CreateHudlessTransmission := R95
	1357	[2533]	CLOSURE  	R95 136 ; R95 := closure(Function #137)
	1358	[2528]	SETGLOBAL	R95 K528 ; IsTransmissionPlaying := R95
	1359	[2545]	CLOSURE  	R95 137 ; R95 := closure(Function #138)
	1360	[2535]	SETGLOBAL	R95 K529 ; GetActualPlayerRank := R95
	1361	[2572]	CLOSURE  	R95 138 ; R95 := closure(Function #139)
	1362	[2576]	CLOSURE  	R96 139 ; R96 := closure(Function #140)
	1363	[2576]	MOVE     	R0 R95 ; R0 := R95
	1364	[2574]	SETGLOBAL	R96 K530 ; HasCompletedVorsPrize := R96
	1365	[2614]	CLOSURE  	R96 140 ; R96 := closure(Function #141)
	1366	[2614]	MOVE     	R0 R95 ; R0 := R95
	1367	[2618]	CLOSURE  	R97 141 ; R97 := closure(Function #142)
	1368	[2618]	MOVE     	R0 R96 ; R0 := R96
	1369	[2616]	SETGLOBAL	R97 K531 ; HasCompletedQuest := R97
	1370	[2629]	CLOSURE  	R97 142 ; R97 := closure(Function #143)
	1371	[2622]	SETGLOBAL	R97 K532 ; GetLocalizedQuestName := R97
	1372	[2635]	CLOSURE  	R97 143 ; R97 := closure(Function #144)
	1373	[2635]	MOVE     	R0 R96 ; R0 := R96
	1374	[2639]	CLOSURE  	R98 144 ; R98 := closure(Function #145)
	1375	[2639]	MOVE     	R0 R97 ; R0 := R97
	1376	[2637]	SETGLOBAL	R98 K533 ; HasCompletedNewWar := R98
	1377	[2659]	CLOSURE  	R98 145 ; R98 := closure(Function #146)
	1378	[2659]	MOVE     	R0 R97 ; R0 := R97
	1379	[2663]	CLOSURE  	R99 146 ; R99 := closure(Function #147)
	1380	[2663]	MOVE     	R0 R98 ; R0 := R98
	1381	[2661]	SETGLOBAL	R99 K534 ; HasSquadHostCompletedNewWar := R99
	1382	[2669]	CLOSURE  	R99 147 ; R99 := closure(Function #148)
	1383	[2669]	MOVE     	R0 R31 ; R0 := R31
	1384	[2669]	MOVE     	R0 R44 ; R0 := R44
	1385	[2673]	CLOSURE  	R100 148 ; R100 := closure(Function #149)
	1386	[2673]	MOVE     	R0 R99 ; R0 := R99
	1387	[2671]	SETGLOBAL	R100 K535 ; CanOverridePostNewWar := R100
	1388	[2698]	CLOSURE  	R100 149 ; R100 := closure(Function #150)
	1389	[2698]	MOVE     	R0 R99 ; R0 := R99
	1390	[2698]	MOVE     	R0 R98 ; R0 := R98
	1391	[2702]	CLOSURE  	R101 150 ; R101 := closure(Function #151)
	1392	[2702]	MOVE     	R0 R100 ; R0 := R100
	1393	[2700]	SETGLOBAL	R101 K536 ; ApplyPostNewWarMissionOverrides := R101
	1394	[2721]	CLOSURE  	R101 151 ; R101 := closure(Function #152)
	1395	[2721]	MOVE     	R0 R63 ; R0 := R63
	1396	[2721]	MOVE     	R0 R98 ; R0 := R98
	1397	[2704]	SETGLOBAL	R101 K537 ; SetLevelStreamingArgs := R101
	1398	[2732]	CLOSURE  	R101 152 ; R101 := closure(Function #153)
	1399	[2732]	MOVE     	R0 R98 ; R0 := R98
	1400	[2723]	SETGLOBAL	R101 K538 ; ApplyPostNewWarHubLevelArgs := R101
	1401	[2739]	CLOSURE  	R101 153 ; R101 := closure(Function #154)
	1402	[2739]	MOVE     	R0 R63 ; R0 := R63
	1403	[2739]	MOVE     	R0 R100 ; R0 := R100
	1404	[2734]	SETGLOBAL	R101 K539 ; BuildMissionForLocation := R101
	1405	[2750]	CLOSURE  	R101 154 ; R101 := closure(Function #155)
	1406	[2750]	MOVE     	R0 R17 ; R0 := R17
	1407	[2750]	MOVE     	R0 R97 ; R0 := R97
	1408	[2754]	CLOSURE  	R102 155 ; R102 := closure(Function #156)
	1409	[2754]	MOVE     	R0 R101 ; R0 := R101
	1410	[2752]	SETGLOBAL	R102 K540 ; GetModifiedPlainsElo := R102
	1411	[2758]	CLOSURE  	R102 156 ; R102 := closure(Function #157)
	1412	[2756]	SETGLOBAL	R102 K541 ; IsPlainsElo := R102
	1413	[2772]	CLOSURE  	R102 157 ; R102 := closure(Function #158)
	1414	[2772]	MOVE     	R0 R43 ; R0 := R43
	1415	[2760]	SETGLOBAL	R102 K542 ; CanAccessDeimosHub := R102
	1416	[2776]	CLOSURE  	R102 158 ; R102 := closure(Function #159)
	1417	[2776]	MOVE     	R0 R96 ; R0 := R96
	1418	[2776]	MOVE     	R0 R43 ; R0 := R43
	1419	[2780]	CLOSURE  	R103 159 ; R103 := closure(Function #160)
	1420	[2780]	MOVE     	R0 R102 ; R0 := R102
	1421	[2778]	SETGLOBAL	R103 K543 ; HasCompletedDeimosIntroQuest := R103
	1422	[2852]	CLOSURE  	R103 160 ; R103 := closure(Function #161)
	1423	[2852]	MOVE     	R0 R63 ; R0 := R63
	1424	[2852]	MOVE     	R0 R17 ; R0 := R17
	1425	[2856]	CLOSURE  	R104 161 ; R104 := closure(Function #162)
	1426	[2856]	MOVE     	R0 R103 ; R0 := R103
	1427	[2854]	SETGLOBAL	R104 K544 ; GetStarChartProgress := R104
	1428	[2862]	CLOSURE  	R104 162 ; R104 := closure(Function #163)
	1429	[2862]	MOVE     	R0 R103 ; R0 := R103
	1430	[2866]	CLOSURE  	R105 163 ; R105 := closure(Function #164)
	1431	[2866]	MOVE     	R0 R104 ; R0 := R104
	1432	[2864]	SETGLOBAL	R105 K545 ; HasCompletedStarChart := R105
	1433	[2921]	CLOSURE  	R105 164 ; R105 := closure(Function #165)
	1434	[2925]	CLOSURE  	R106 165 ; R106 := closure(Function #166)
	1435	[2925]	MOVE     	R0 R105 ; R0 := R105
	1436	[2923]	SETGLOBAL	R106 K546 ; GetSaleInfo := R106
	1437	[2927]	NEWTABLE 	R106 0 0 ; R106 := {}
	1438	[2928]	LOADK    	R107 := 3.000000
	1439	[2928]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1440	[2928]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1441	[2929]	LOADK    	R107 := 1.000000
	1442	[2929]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1443	[2929]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1444	[2930]	LOADK    	R107 := 0.000000
	1445	[2930]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1446	[2930]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1447	[2931]	LOADK    	R107 := 5.000000
	1448	[2931]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1449	[2931]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1450	[2932]	LOADK    	R107 := 15.000000
	1451	[2932]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1452	[2932]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1453	[2933]	LOADK    	R107 := 16.000000
	1454	[2933]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1455	[2933]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1456	[2934]	LOADK    	R107 := 6.000000
	1457	[2934]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1458	[2934]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1459	[2935]	LOADK    	R107 := 10.000000
	1460	[2935]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1461	[2935]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1462	[2936]	LOADK    	R107 := 27.000000
	1463	[2936]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1464	[2936]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1465	[2937]	LOADK    	R107 := 28.000000
	1466	[2937]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1467	[2937]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1468	[2938]	LOADK    	R107 := 29.000000
	1469	[2938]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1470	[2938]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1471	[2939]	LOADK    	R107 := 13.000000
	1472	[2939]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1473	[2939]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1474	[2940]	LOADK    	R107 := 42.000000
	1475	[2940]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1476	[2940]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1477	[2941]	LOADK    	R107 := 21.000000
	1478	[2941]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1479	[2941]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1480	[2942]	LOADK    	R107 := 48.000000
	1481	[2942]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1482	[2942]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1483	[2946]	CLOSURE  	R107 166 ; R107 := closure(Function #167)
	1484	[2946]	MOVE     	R0 R106 ; R0 := R106
	1485	[2950]	CLOSURE  	R108 167 ; R108 := closure(Function #168)
	1486	[2950]	MOVE     	R0 R107 ; R0 := R107
	1487	[2948]	SETGLOBAL	R108 K547 ; IsProratedPackageCategory := R108
	1488	[2953]	CLOSURE  	R108 168 ; R108 := closure(Function #169)
	1489	[2954]	CLOSURE  	R109 169 ; R109 := closure(Function #170)
	1490	[2955]	CLOSURE  	R110 170 ; R110 := closure(Function #171)
	1491	[2987]	CLOSURE  	R111 171 ; R111 := closure(Function #172)
	1492	[2987]	MOVE     	R0 R108 ; R0 := R108
	1493	[2987]	MOVE     	R0 R110 ; R0 := R110
	1494	[2987]	MOVE     	R0 R109 ; R0 := R109
	1495	[2991]	CLOSURE  	R112 172 ; R112 := closure(Function #173)
	1496	[2991]	MOVE     	R0 R111 ; R0 := R111
	1497	[2989]	SETGLOBAL	R112 K548 ; BinarySearch := R112
	1498	[2998]	CLOSURE  	R112 173 ; R112 := closure(Function #174)
	1499	[3008]	CLOSURE  	R113 174 ; R113 := closure(Function #175)
	1500	[3008]	MOVE     	R0 R107 ; R0 := R107
	1501	[3008]	MOVE     	R0 R111 ; R0 := R111
	1502	[3008]	MOVE     	R0 R112 ; R0 := R112
	1503	[3012]	CLOSURE  	R114 175 ; R114 := closure(Function #176)
	1504	[3012]	MOVE     	R0 R113 ; R0 := R113
	1505	[3010]	SETGLOBAL	R114 K549 ; ShouldGiveFromPackage := R114
	1506	[3016]	CLOSURE  	R114 176 ; R114 := closure(Function #177)
	1507	[3016]	MOVE     	R0 R24 ; R0 := R24
	1508	[3014]	SETGLOBAL	R114 K550 ; ProratedBundlesEnabled := R114
	1509	[3156]	CLOSURE  	R114 177 ; R114 := closure(Function #178)
	1510	[3156]	MOVE     	R0 R8 ; R0 := R8
	1511	[3156]	MOVE     	R0 R32 ; R0 := R32
	1512	[3156]	MOVE     	R0 R33 ; R0 := R33
	1513	[3156]	MOVE     	R0 R105 ; R0 := R105
	1514	[3156]	MOVE     	R0 R24 ; R0 := R24
	1515	[3156]	MOVE     	R0 R113 ; R0 := R113
	1516	[3156]	MOVE     	R0 R114 ; R0 := R114
	1517	[3160]	CLOSURE  	R115 178 ; R115 := closure(Function #179)
	1518	[3160]	MOVE     	R0 R114 ; R0 := R114
	1519	[3158]	SETGLOBAL	R115 K551 ; GetStoreItemPrice := R115
	1520	[3162]	NEWTABLE 	R115 8 0 ; R115 := {}
	1521	[3163]	LOADK    	R116 K552 ; R116 := "/Lotus/Language/Menu/AP_UNIVERSAL"
	1522	[3164]	LOADK    	R117 K553 ; R117 := "/Lotus/Language/Menu/AP_ATTACK"
	1523	[3165]	LOADK    	R118 K554 ; R118 := "/Lotus/Language/Menu/AP_DEFENSE"
	1524	[3166]	LOADK    	R119 K555 ; R119 := "/Lotus/Language/Menu/AP_TACTIC"
	1525	[3167]	LOADK    	R120 K556 ; R120 := "/Lotus/Language/Menu/AP_POWER"
	1526	[3168]	LOADK    	R121 K557 ; R121 := "/Lotus/Language/Menu/AP_PRECEPT"
	1527	[3169]	LOADK    	R122 K558 ; R122 := "/Lotus/Language/Menu/AP_FUSION"
	1528	[3171]	LOADK    	R123 K559 ; R123 := "/Lotus/Language/Menu/AP_WARD"
	1529	[3171]	SETLIST  	R115 8 1 ; R115[(1-1)*FPF+i] := R(115+i), 1 <= i <= 8
	1530	[3175]	CLOSURE  	R116 179 ; R116 := closure(Function #180)
	1531	[3175]	MOVE     	R0 R115 ; R0 := R115
	1532	[3173]	SETGLOBAL	R116 K560 ; GetPolarityName := R116
	1533	[3183]	CLOSURE  	R116 180 ; R116 := closure(Function #181)
	1534	[3177]	SETGLOBAL	R116 K561 ; GetPVPEloRatingForRank := R116
	1535	[3190]	CLOSURE  	R116 181 ; R116 := closure(Function #182)
	1536	[3202]	CLOSURE  	R117 182 ; R117 := closure(Function #183)
	1537	[3260]	CLOSURE  	R118 183 ; R118 := closure(Function #184)
	1538	[3260]	MOVE     	R0 R116 ; R0 := R116
	1539	[3260]	MOVE     	R0 R101 ; R0 := R101
	1540	[3260]	MOVE     	R0 R117 ; R0 := R117
	1541	[3260]	MOVE     	R0 R52 ; R0 := R52
	1542	[3264]	CLOSURE  	R119 184 ; R119 := closure(Function #185)
	1543	[3264]	MOVE     	R0 R118 ; R0 := R118
	1544	[3262]	SETGLOBAL	R119 K562 ; GetPlayerEloRating := R119
	1545	[3307]	CLOSURE  	R119 185 ; R119 := closure(Function #186)
	1546	[3307]	MOVE     	R0 R26 ; R0 := R26
	1547	[3307]	MOVE     	R0 R6 ; R0 := R6
	1548	[3307]	MOVE     	R0 R119 ; R0 := R119
	1549	[3311]	CLOSURE  	R120 186 ; R120 := closure(Function #187)
	1550	[3311]	MOVE     	R0 R119 ; R0 := R119
	1551	[3309]	SETGLOBAL	R120 K563 ; FilterStatusEntity := R120
	1552	[3341]	CLOSURE  	R120 187 ; R120 := closure(Function #188)
	1553	[3341]	MOVE     	R0 R17 ; R0 := R17
	1554	[3345]	CLOSURE  	R121 188 ; R121 := closure(Function #189)
	1555	[3345]	MOVE     	R0 R120 ; R0 := R120
	1556	[3343]	SETGLOBAL	R121 K564 ; AddTableToPurchasedItems := R121
	1557	[3395]	CLOSURE  	R121 189 ; R121 := closure(Function #190)
	1558	[3395]	MOVE     	R0 R120 ; R0 := R120
	1559	[3347]	SETGLOBAL	R121 K565 ; GetAllPurchasedItems := R121
	1560	[3516]	CLOSURE  	R121 190 ; R121 := closure(Function #191)
	1561	[3516]	MOVE     	R0 R17 ; R0 := R17
	1562	[3516]	MOVE     	R0 R3 ; R0 := R3
	1563	[3516]	MOVE     	R0 R4 ; R0 := R4
	1564	[3516]	MOVE     	R0 R5 ; R0 := R5
	1565	[3398]	SETGLOBAL	R121 K566 ; GetRewardDesc := R121
	1566	[3545]	CLOSURE  	R121 191 ; R121 := closure(Function #192)
	1567	[3549]	CLOSURE  	R122 192 ; R122 := closure(Function #193)
	1568	[3549]	MOVE     	R0 R121 ; R0 := R121
	1569	[3547]	SETGLOBAL	R122 K567 ; GetRecipeIconTexture := R122
	1570	[3592]	CLOSURE  	R122 193 ; R122 := closure(Function #194)
	1571	[3592]	MOVE     	R0 R121 ; R0 := R121
	1572	[3553]	SETGLOBAL	R122 K568 ; GetRewardIcon := R122
	1573	[3629]	CLOSURE  	R122 194 ; R122 := closure(Function #195)
	1574	[3629]	MOVE     	R0 R17 ; R0 := R17
	1575	[3594]	SETGLOBAL	R122 K569 ; GetRewardInfo := R122
	1576	[3634]	CLOSURE  	R122 195 ; R122 := closure(Function #196)
	1577	[3634]	MOVE     	R0 R0 ; R0 := R0
	1578	[3631]	SETGLOBAL	R122 K570 ; GetDamageTypeTag := R122
	1579	[3639]	CLOSURE  	R122 196 ; R122 := closure(Function #197)
	1580	[3639]	MOVE     	R0 R1 ; R0 := R1
	1581	[3636]	SETGLOBAL	R122 K571 ; GetProcTypeTag := R122
	1582	[3660]	CLOSURE  	R122 197 ; R122 := closure(Function #198)
	1583	[3641]	SETGLOBAL	R122 K572 ; GetRecoveryMissionInfo := R122
	1584	[3680]	CLOSURE  	R122 198 ; R122 := closure(Function #199)
	1585	[3662]	SETGLOBAL	R122 K573 ; FormatGoalPercentage := R122
	1586	[3693]	CLOSURE  	R122 199 ; R122 := closure(Function #200)
	1587	[3693]	MOVE     	R0 R17 ; R0 := R17
	1588	[3693]	MOVE     	R0 R67 ; R0 := R67
	1589	[3697]	CLOSURE  	R123 200 ; R123 := closure(Function #201)
	1590	[3697]	MOVE     	R0 R122 ; R0 := R122
	1591	[3695]	SETGLOBAL	R123 K574 ; AvatarLight := R123
	1592	[3711]	CLOSURE  	R123 201 ; R123 := closure(Function #202)
	1593	[3711]	MOVE     	R0 R52 ; R0 := R52
	1594	[3711]	MOVE     	R0 R122 ; R0 := R122
	1595	[3700]	SETGLOBAL	R123 K575 ; MakeMainMenuAvatarKneel := R123
	1596	[3730]	CLOSURE  	R123 202 ; R123 := closure(Function #203)
	1597	[3730]	MOVE     	R0 R118 ; R0 := R118
	1598	[3713]	SETGLOBAL	R123 K576 ; OnSaveLoadOutCompleteCommon := R123
	1599	[3741]	CLOSURE  	R123 203 ; R123 := closure(Function #204)
	1600	[3732]	SETGLOBAL	R123 K577 ; MakeLevelItemString := R123
	1601	[3762]	CLOSURE  	R123 204 ; R123 := closure(Function #205)
	1602	[3743]	SETGLOBAL	R123 K578 ; IsHarvestedOrBranded := R123
	1603	[3783]	CLOSURE  	R123 205 ; R123 := closure(Function #206)
	1604	[3764]	SETGLOBAL	R123 K579 ; GetUIMode := R123
	1605	[3837]	CLOSURE  	R123 206 ; R123 := closure(Function #207)
	1606	[3841]	CLOSURE  	R124 207 ; R124 := closure(Function #208)
	1607	[3841]	MOVE     	R0 R123 ; R0 := R123
	1608	[3839]	SETGLOBAL	R124 K580 ; ShowInputDialog := R124
	1609	[3853]	CLOSURE  	R124 208 ; R124 := closure(Function #209)
	1610	[3843]	SETGLOBAL	R124 K581 ; GetMaxAllianceMemberCount := R124
	1611	[3861]	CLOSURE  	R124 209 ; R124 := closure(Function #210)
	1612	[3865]	CLOSURE  	R125 210 ; R125 := closure(Function #211)
	1613	[3865]	MOVE     	R0 R124 ; R0 := R124
	1614	[3863]	SETGLOBAL	R125 K582 ; GetNodeAlertMissionInfo := R125
	1615	[3869]	CLOSURE  	R125 211 ; R125 := closure(Function #212)
	1616	[3873]	CLOSURE  	R126 212 ; R126 := closure(Function #213)
	1617	[3873]	MOVE     	R0 R125 ; R0 := R125
	1618	[3871]	SETGLOBAL	R126 K583 ; GetInvasionInfo := R126
	1619	[3877]	CLOSURE  	R126 213 ; R126 := closure(Function #214)
	1620	[3881]	CLOSURE  	R127 214 ; R127 := closure(Function #215)
	1621	[3881]	MOVE     	R0 R126 ; R0 := R126
	1622	[3879]	SETGLOBAL	R127 K584 ; GetGoalInfo := R127
	1623	[3889]	CLOSURE  	R127 215 ; R127 := closure(Function #216)
	1624	[3893]	CLOSURE  	R128 216 ; R128 := closure(Function #217)
	1625	[3893]	MOVE     	R0 R127 ; R0 := R127
	1626	[3891]	SETGLOBAL	R128 K585 ; GetEventTexture := R128
	1627	[3928]	CLOSURE  	R128 217 ; R128 := closure(Function #218)
	1628	[3928]	MOVE     	R0 R27 ; R0 := R27
	1629	[3932]	CLOSURE  	R129 218 ; R129 := closure(Function #219)
	1630	[3932]	MOVE     	R0 R128 ; R0 := R128
	1631	[3930]	SETGLOBAL	R129 K586 ; GetMissionTypeName := R129
	1632	[3942]	CLOSURE  	R129 219 ; R129 := closure(Function #220)
	1633	[3942]	MOVE     	R0 R37 ; R0 := R37
	1634	[3934]	SETGLOBAL	R129 K587 ; HasTutorialForMissionType := R129
	1635	[3946]	CLOSURE  	R129 220 ; R129 := closure(Function #221)
	1636	[3950]	CLOSURE  	R130 221 ; R130 := closure(Function #222)
	1637	[3950]	MOVE     	R0 R129 ; R0 := R129
	1638	[3948]	SETGLOBAL	R130 K588 ; GetLocalizedFactionName := R130
	1639	[4011]	CLOSURE  	R130 222 ; R130 := closure(Function #223)
	1640	[4011]	MOVE     	R0 R127 ; R0 := R127
	1641	[4015]	CLOSURE  	R131 223 ; R131 := closure(Function #224)
	1642	[4015]	MOVE     	R0 R130 ; R0 := R130
	1643	[4013]	SETGLOBAL	R131 K589 ; GetLocationTexture := R131
	1644	[4052]	CLOSURE  	R131 224 ; R131 := closure(Function #225)
	1645	[4052]	MOVE     	R0 R129 ; R0 := R129
	1646	[4056]	CLOSURE  	R132 225 ; R132 := closure(Function #226)
	1647	[4056]	MOVE     	R0 R131 ; R0 := R131
	1648	[4054]	SETGLOBAL	R132 K590 ; TryGetCrossfireDesc := R132
	1649	[4350]	CLOSURE  	R132 226 ; R132 := closure(Function #227)
	1650	[4350]	MOVE     	R0 R46 ; R0 := R46
	1651	[4350]	MOVE     	R0 R124 ; R0 := R124
	1652	[4350]	MOVE     	R0 R126 ; R0 := R126
	1653	[4350]	MOVE     	R0 R15 ; R0 := R15
	1654	[4350]	MOVE     	R0 R128 ; R0 := R128
	1655	[4350]	MOVE     	R0 R125 ; R0 := R125
	1656	[4350]	MOVE     	R0 R17 ; R0 := R17
	1657	[4350]	MOVE     	R0 R130 ; R0 := R130
	1658	[4350]	MOVE     	R0 R131 ; R0 := R131
	1659	[4058]	SETGLOBAL	R132 K591 ; GetMissionInfo := R132
	1660	[4360]	CLOSURE  	R132 227 ; R132 := closure(Function #228)
	1661	[4352]	SETGLOBAL	R132 K592 ; ShowCombos := R132
	1662	[4409]	CLOSURE  	R132 228 ; R132 := closure(Function #229)
	1663	[4362]	SETGLOBAL	R132 K593 ; GetMeleeStanceUpgradeInfo := R132
	1664	[4428]	CLOSURE  	R132 229 ; R132 := closure(Function #230)
	1665	[4411]	SETGLOBAL	R132 K594 ; RemoveModsFromWeapon := R132
	1666	[4462]	CLOSURE  	R132 230 ; R132 := closure(Function #231)
	1667	[4430]	SETGLOBAL	R132 K595 ; GetGameModeTexture := R132
	1668	[4546]	CLOSURE  	R132 231 ; R132 := closure(Function #232)
	1669	[4550]	CLOSURE  	R133 232 ; R133 := closure(Function #233)
	1670	[4550]	MOVE     	R0 R132 ; R0 := R132
	1671	[4548]	SETGLOBAL	R133 K596 ; GetQuestInfo := R133
	1672	[4569]	CLOSURE  	R31 233 ; R31 := closure(Function #234)
	1673	[4569]	MOVE     	R0 R132 ; R0 := R132
	1674	[4573]	CLOSURE  	R133 234 ; R133 := closure(Function #235)
	1675	[4573]	MOVE     	R0 R31 ; R0 := R31
	1676	[4571]	SETGLOBAL	R133 K597 ; GetActiveQuest := R133
	1677	[4578]	CLOSURE  	R133 235 ; R133 := closure(Function #236)
	1678	[4582]	CLOSURE  	R134 236 ; R134 := closure(Function #237)
	1679	[4582]	MOVE     	R0 R133 ; R0 := R133
	1680	[4580]	SETGLOBAL	R134 K598 ; InQuestCommitment := R134
	1681	[4681]	CLOSURE  	R134 237 ; R134 := closure(Function #238)
	1682	[4681]	MOVE     	R0 R17 ; R0 := R17
	1683	[4681]	MOVE     	R0 R55 ; R0 := R55
	1684	[4584]	SETGLOBAL	R134 K599 ; GetAllKeys := R134
	1685	[4720]	CLOSURE  	R134 238 ; R134 := closure(Function #239)
	1686	[4720]	MOVE     	R0 R17 ; R0 := R17
	1687	[4720]	MOVE     	R0 R18 ; R0 := R18
	1688	[4683]	SETGLOBAL	R134 K600 ; ShowDialogForFeatureUpgrade := R134
	1689	[4781]	CLOSURE  	R134 239 ; R134 := closure(Function #240)
	1690	[4781]	MOVE     	R0 R95 ; R0 := R95
	1691	[4781]	MOVE     	R0 R17 ; R0 := R17
	1692	[4781]	MOVE     	R0 R94 ; R0 := R94
	1693	[4722]	SETGLOBAL	R134 K601 ; UpdateUIConsoleTriggers := R134
	1694	[4800]	CLOSURE  	R134 240 ; R134 := closure(Function #241)
	1695	[4783]	SETGLOBAL	R134 K602 ; DoesStringContainAllDigits := R134
	1696	[4835]	CLOSURE  	R134 241 ; R134 := closure(Function #242)
	1697	[4835]	MOVE     	R0 R10 ; R0 := R10
	1698	[4802]	SETGLOBAL	R134 K603 ; UpdateHeadTracking := R134
	1699	[4870]	CLOSURE  	R134 242 ; R134 := closure(Function #243)
	1700	[4870]	MOVE     	R0 R63 ; R0 := R63
	1701	[4837]	SETGLOBAL	R134 K604 ; GetUnlockedNavFeatures := R134
	1702	[4890]	CLOSURE  	R134 243 ; R134 := closure(Function #244)
	1703	[4890]	MOVE     	R0 R17 ; R0 := R17
	1704	[4872]	SETGLOBAL	R134 K605 ; SetUpInWorldPanel := R134
	1705	[4899]	CLOSURE  	R134 244 ; R134 := closure(Function #245)
	1706	[4893]	SETGLOBAL	R134 K606 ; LinearToSRGB := R134
	1707	[4907]	CLOSURE  	R134 245 ; R134 := closure(Function #246)
	1708	[4901]	SETGLOBAL	R134 K607 ; SRGBToLinear := R134
	1709	[4909]	LOADNIL  	R134 R134 ; R134 := nil
	1710	[4927]	CLOSURE  	R135 246 ; R135 := closure(Function #247)
	1711	[4927]	MOVE     	R0 R46 ; R0 := R46
	1712	[4927]	MOVE     	R0 R134 ; R0 := R134
	1713	[4931]	CLOSURE  	R136 247 ; R136 := closure(Function #248)
	1714	[4931]	MOVE     	R0 R135 ; R0 := R135
	1715	[4929]	SETGLOBAL	R136 K608 ; LocalizePolarities := R136
	1716	[4942]	CLOSURE  	R136 248 ; R136 := closure(Function #249)
	1717	[4942]	MOVE     	R0 R134 ; R0 := R134
	1718	[4942]	MOVE     	R0 R135 ; R0 := R135
	1719	[4933]	SETGLOBAL	R136 K609 ; GetTagForPolarity := R136
	1720	[4954]	CLOSURE  	R136 249 ; R136 := closure(Function #250)
	1721	[4944]	SETGLOBAL	R136 K610 ; ShowQuestCompleted := R136
	1722	[4963]	CLOSURE  	R136 250 ; R136 := closure(Function #251)
	1723	[4963]	MOVE     	R0 R17 ; R0 := R17
	1724	[4956]	SETGLOBAL	R136 K611 ; ApplyGenericBackerMaterial := R136
	1725	[5023]	CLOSURE  	R136 251 ; R136 := closure(Function #252)
	1726	[5023]	MOVE     	R0 R17 ; R0 := R17
	1727	[5027]	CLOSURE  	R137 252 ; R137 := closure(Function #253)
	1728	[5027]	MOVE     	R0 R136 ; R0 := R136
	1729	[5025]	SETGLOBAL	R137 K612 ; GetReputationInfoForSyndicate := R137
	1730	[5048]	CLOSURE  	R137 253 ; R137 := closure(Function #254)
	1731	[5048]	MOVE     	R0 R136 ; R0 := R136
	1732	[5052]	CLOSURE  	R138 254 ; R138 := closure(Function #255)
	1733	[5052]	MOVE     	R0 R137 ; R0 := R137
	1734	[5050]	SETGLOBAL	R138 K613 ; GetLovedReputationInfoForSyndicate := R138
	1735	[5067]	CLOSURE  	R138 255 ; R138 := closure(Function #256)
	1736	[5067]	MOVE     	R0 R17 ; R0 := R17
	1737	[5054]	SETGLOBAL	R138 K614 ; DrawItem := R138
	1738	[5087]	CLOSURE  	R138 256 ; R138 := closure(Function #257)
	1739	[5069]	SETGLOBAL	R138 K615 ; GetDailyDeal := R138
	1740	[5120]	CLOSURE  	R138 257 ; R138 := closure(Function #258)
	1741	[5089]	SETGLOBAL	R138 K616 ; GetLocalizedItemName := R138
	1742	[5151]	CLOSURE  	R138 258 ; R138 := closure(Function #259)
	1743	[5122]	SETGLOBAL	R138 K617 ; OpenTrainingMission := R138
	1744	[5155]	CLOSURE  	R138 259 ; R138 := closure(Function #260)
	1745	[5159]	CLOSURE  	R139 260 ; R139 := closure(Function #261)
	1746	[5159]	MOVE     	R0 R138 ; R0 := R138
	1747	[5157]	SETGLOBAL	R139 K618 ; GetTrainingRetryPlatinumCost := R139
	1748	[5228]	CLOSURE  	R139 261 ; R139 := closure(Function #262)
	1749	[5228]	MOVE     	R0 R49 ; R0 := R49
	1750	[5228]	MOVE     	R0 R138 ; R0 := R138
	1751	[5161]	SETGLOBAL	R139 K619 ; CanRankUp := R139
	1752	[5232]	CLOSURE  	R139 262 ; R139 := closure(Function #263)
	1753	[5258]	CLOSURE  	R140 263 ; R140 := closure(Function #264)
	1754	[5258]	MOVE     	R0 R17 ; R0 := R17
	1755	[5258]	MOVE     	R0 R139 ; R0 := R139
	1756	[5234]	SETGLOBAL	R140 K620 ; OnChallengePassed := R140
	1757	[5274]	CLOSURE  	R140 264 ; R140 := closure(Function #265)
	1758	[5260]	SETGLOBAL	R140 K621 ; GetFriendlyPlayers := R140
	1759	[5289]	CLOSURE  	R140 265 ; R140 := closure(Function #266)
	1760	[5277]	SETGLOBAL	R140 K622 ; FindNearestTagged := R140
	1761	[5303]	CLOSURE  	R140 266 ; R140 := closure(Function #267)
	1762	[5307]	CLOSURE  	R141 267 ; R141 := closure(Function #268)
	1763	[5307]	MOVE     	R0 R140 ; R0 := R140
	1764	[5305]	SETGLOBAL	R141 K623 ; GetLoadoutPresetName := R141
	1765	[5382]	CLOSURE  	R141 268 ; R141 := closure(Function #269)
	1766	[5382]	MOVE     	R0 R31 ; R0 := R31
	1767	[5382]	MOVE     	R0 R67 ; R0 := R67
	1768	[5382]	MOVE     	R0 R62 ; R0 := R62
	1769	[5382]	MOVE     	R0 R63 ; R0 := R63
	1770	[5309]	SETGLOBAL	R141 K624 ; UpdateQuests := R141
	1771	[5386]	CLOSURE  	R141 269 ; R141 := closure(Function #270)
	1772	[5386]	MOVE     	R0 R16 ; R0 := R16
	1773	[5384]	SETGLOBAL	R141 K625 ; GetScanPointBones := R141
	1774	[5390]	CLOSURE  	R141 270 ; R141 := closure(Function #271)
	1775	[5390]	MOVE     	R0 R16 ; R0 := R16
	1776	[5388]	SETGLOBAL	R141 K626 ; MaxScanPointBones := R141
	1777	[5402]	CLOSURE  	R141 271 ; R141 := closure(Function #272)
	1778	[5392]	SETGLOBAL	R141 K627 ; RayCastForScanPoints := R141
	1779	[5431]	CLOSURE  	R141 272 ; R141 := closure(Function #273)
	1780	[5485]	CLOSURE  	R142 273 ; R142 := closure(Function #274)
	1781	[5485]	MOVE     	R0 R141 ; R0 := R141
	1782	[5434]	SETGLOBAL	R142 K628 ; HasPvpCompatibleGear := R142
	1783	[5494]	CLOSURE  	R142 274 ; R142 := closure(Function #275)
	1784	[5494]	MOVE     	R0 R17 ; R0 := R17
	1785	[5487]	SETGLOBAL	R142 K629 ; AdjustBluerSize := R142
	1786	[5513]	CLOSURE  	R142 275 ; R142 := closure(Function #276)
	1787	[5496]	SETGLOBAL	R142 K630 ; GetInputCameraRotation := R142
	1788	[5535]	CLOSURE  	R142 276 ; R142 := closure(Function #277)
	1789	[5535]	MOVE     	R0 R46 ; R0 := R46
	1790	[5515]	SETGLOBAL	R142 K631 ; ViewConsoleProfile := R142
	1791	[5564]	CLOSURE  	R142 277 ; R142 := closure(Function #278)
	1792	[5537]	SETGLOBAL	R142 K632 ; GetCurrentPurchaseSource := R142
	1793	[5569]	CLOSURE  	R33 278 ; R33 := closure(Function #279)
	1794	[5573]	CLOSURE  	R142 279 ; R142 := closure(Function #280)
	1795	[5573]	MOVE     	R0 R33 ; R0 := R33
	1796	[5571]	SETGLOBAL	R142 K633 ; GetPriceWithCoupon := R142
	1797	[5590]	CLOSURE  	R142 280 ; R142 := closure(Function #281)
	1798	[5576]	SETGLOBAL	R142 K634 ; GetCouponName := R142
	1799	[5625]	CLOSURE  	R32 281 ; R32 := closure(Function #282)
	1800	[5629]	CLOSURE  	R142 282 ; R142 := closure(Function #283)
	1801	[5629]	MOVE     	R0 R32 ; R0 := R32
	1802	[5627]	SETGLOBAL	R142 K635 ; PopulateCouponInfo := R142
	1803	[5690]	CLOSURE  	R142 283 ; R142 := closure(Function #284)
	1804	[5690]	MOVE     	R0 R2 ; R0 := R2
	1805	[5694]	CLOSURE  	R143 284 ; R143 := closure(Function #285)
	1806	[5694]	MOVE     	R0 R142 ; R0 := R142
	1807	[5692]	SETGLOBAL	R143 K636 ; GetAvailableColourPickers := R143
	1808	[5737]	CLOSURE  	R143 285 ; R143 := closure(Function #286)
	1809	[5737]	MOVE     	R0 R142 ; R0 := R142
	1810	[5696]	SETGLOBAL	R143 K637 ; GetRandomColorPalette := R143
	1811	[5747]	CLOSURE  	R143 286 ; R143 := closure(Function #287)
	1812	[5747]	MOVE     	R0 R136 ; R0 := R136
	1813	[5751]	CLOSURE  	R144 287 ; R144 := closure(Function #288)
	1814	[5751]	MOVE     	R0 R143 ; R0 := R143
	1815	[5749]	SETGLOBAL	R144 K638 ; GetPvPLoadoutCapacity := R144
	1816	[5771]	CLOSURE  	R144 288 ; R144 := closure(Function #289)
	1817	[5771]	MOVE     	R0 R111 ; R0 := R111
	1818	[5771]	MOVE     	R0 R112 ; R0 := R112
	1819	[5753]	SETGLOBAL	R144 K639 ; GetRecipesOwned := R144
	1820	[5897]	CLOSURE  	R144 289 ; R144 := closure(Function #290)
	1821	[5897]	MOVE     	R0 R107 ; R0 := R107
	1822	[5897]	MOVE     	R0 R113 ; R0 := R113
	1823	[5897]	MOVE     	R0 R58 ; R0 := R58
	1824	[5897]	MOVE     	R0 R111 ; R0 := R111
	1825	[5897]	MOVE     	R0 R112 ; R0 := R112
	1826	[5897]	MOVE     	R0 R24 ; R0 := R24
	1827	[5897]	MOVE     	R0 R114 ; R0 := R114
	1828	[5897]	MOVE     	R0 R8 ; R0 := R8
	1829	[5897]	MOVE     	R0 R143 ; R0 := R143
	1830	[5773]	SETGLOBAL	R144 K640 ; GetNumOwned := R144
	1831	[5911]	CLOSURE  	R144 290 ; R144 := closure(Function #291)
	1832	[5899]	SETGLOBAL	R144 K641 ; GetImageDimansionsFromName := R144
	1833	[5954]	CLOSURE  	R144 291 ; R144 := closure(Function #292)
	1834	[5913]	SETGLOBAL	R144 K642 ; VerifyInventorySlots := R144
	1835	[5966]	CLOSURE  	R144 292 ; R144 := closure(Function #293)
	1836	[5966]	MOVE     	R0 R17 ; R0 := R17
	1837	[5956]	SETGLOBAL	R144 K643 ; ShowInvalidBinError := R144
	1838	[5976]	CLOSURE  	R144 293 ; R144 := closure(Function #294)
	1839	[5976]	MOVE     	R0 R17 ; R0 := R17
	1840	[5968]	SETGLOBAL	R144 K644 ; HandleInvalidBinErrorResponse := R144
	1841	[5984]	CLOSURE  	R144 294 ; R144 := closure(Function #295)
	1842	[5978]	SETGLOBAL	R144 K645 ; GetProductTimeLeft := R144
	1843	[5996]	CLOSURE  	R144 295 ; R144 := closure(Function #296)
	1844	[5986]	SETGLOBAL	R144 K646 ; IsProductExpired := R144
	1845	[5998]	NEWTABLE 	R144 0 10 ; R144 := {}
	1846	[5999]	LOADK    	R145 := 0.000000
	1847	[5999]	NEWTABLE 	R146 0 4 ; R146 := {}
	1848	[5999]	LOADK    	R147 K647 ; R147 := "Icon"
	1849	[5999]	LOADK    	R148 K299 ; R148 := ""
	1850	[5999]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1851	[5999]	LOADK    	R147 K648 ; R147 := "Ability"
	1852	[5999]	LOADK    	R148 K299 ; R148 := ""
	1853	[5999]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1854	[5999]	LOADK    	R147 K649 ; R147 := "Lens"
	1855	[5999]	LOADK    	R148 K299 ; R148 := ""
	1856	[5999]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1857	[5999]	LOADK    	R147 K650 ; R147 := "Polarity"
	1858	[5999]	LOADK    	R148 K299 ; R148 := ""
	1859	[5999]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1860	[5999]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1861	[6000]	LOADK    	R145 := 1.000000
	1862	[6000]	NEWTABLE 	R146 0 4 ; R146 := {}
	1863	[6000]	LOADK    	R147 K647 ; R147 := "Icon"
	1864	[6000]	LOADK    	R148 K651 ; R148 := "FocusLensMadurai.png"
	1865	[6000]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1866	[6001]	LOADK    	R147 K648 ; R147 := "Ability"
	1867	[6001]	LOADK    	R148 K652 ; R148 := "/Lotus/Upgrades/Focus/Attack/AttackFocusAbility"
	1868	[6001]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1869	[6002]	LOADK    	R147 K649 ; R147 := "Lens"
	1870	[6002]	LOADK    	R148 K653 ; R148 := "MADURAI"
	1871	[6002]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1872	[6003]	LOADK    	R147 K650 ; R147 := "Polarity"
	1873	[6003]	LOADK    	R148 K654 ; R148 := "/Lotus/Language/TennoWay/Madurai"
	1874	[6003]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1875	[6003]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1876	[6004]	LOADK    	R145 := 2.000000
	1877	[6004]	NEWTABLE 	R146 0 4 ; R146 := {}
	1878	[6004]	LOADK    	R147 K647 ; R147 := "Icon"
	1879	[6004]	LOADK    	R148 K655 ; R148 := "FocusLensVazarin.png"
	1880	[6004]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1881	[6005]	LOADK    	R147 K648 ; R147 := "Ability"
	1882	[6005]	LOADK    	R148 K656 ; R148 := "/Lotus/Upgrades/Focus/Defense/DefenseFocusAbility"
	1883	[6005]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1884	[6006]	LOADK    	R147 K649 ; R147 := "Lens"
	1885	[6006]	LOADK    	R148 K657 ; R148 := "VAZARIN"
	1886	[6006]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1887	[6007]	LOADK    	R147 K650 ; R147 := "Polarity"
	1888	[6007]	LOADK    	R148 K658 ; R148 := "/Lotus/Language/TennoWay/Vazarin"
	1889	[6007]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1890	[6007]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1891	[6008]	LOADK    	R145 := 3.000000
	1892	[6008]	NEWTABLE 	R146 0 4 ; R146 := {}
	1893	[6008]	LOADK    	R147 K647 ; R147 := "Icon"
	1894	[6008]	LOADK    	R148 K659 ; R148 := "FocusLensNaramon.png"
	1895	[6008]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1896	[6009]	LOADK    	R147 K648 ; R147 := "Ability"
	1897	[6009]	LOADK    	R148 K660 ; R148 := "/Lotus/Upgrades/Focus/Tactic/TacticFocusAbility"
	1898	[6009]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1899	[6010]	LOADK    	R147 K649 ; R147 := "Lens"
	1900	[6010]	LOADK    	R148 K661 ; R148 := "NARAMON"
	1901	[6010]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1902	[6011]	LOADK    	R147 K650 ; R147 := "Polarity"
	1903	[6011]	LOADK    	R148 K662 ; R148 := "/Lotus/Language/TennoWay/Naramon"
	1904	[6011]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1905	[6011]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1906	[6012]	LOADK    	R145 := 4.000000
	1907	[6012]	NEWTABLE 	R146 0 4 ; R146 := {}
	1908	[6012]	LOADK    	R147 K647 ; R147 := "Icon"
	1909	[6012]	LOADK    	R148 K663 ; R148 := "FocusLensZenurik.png"
	1910	[6012]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1911	[6013]	LOADK    	R147 K648 ; R147 := "Ability"
	1912	[6013]	LOADK    	R148 K664 ; R148 := "/Lotus/Upgrades/Focus/Power/PowerFocusAbility"
	1913	[6013]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1914	[6014]	LOADK    	R147 K649 ; R147 := "Lens"
	1915	[6014]	LOADK    	R148 K665 ; R148 := "ZENURIK"
	1916	[6014]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1917	[6015]	LOADK    	R147 K650 ; R147 := "Polarity"
	1918	[6015]	LOADK    	R148 K666 ; R148 := "/Lotus/Language/TennoWay/Zenurik"
	1919	[6015]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1920	[6015]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1921	[6016]	LOADK    	R145 := 5.000000
	1922	[6016]	NEWTABLE 	R146 0 4 ; R146 := {}
	1923	[6016]	LOADK    	R147 K647 ; R147 := "Icon"
	1924	[6016]	LOADK    	R148 K299 ; R148 := ""
	1925	[6016]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1926	[6016]	LOADK    	R147 K648 ; R147 := "Ability"
	1927	[6016]	LOADK    	R148 K299 ; R148 := ""
	1928	[6016]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1929	[6016]	LOADK    	R147 K649 ; R147 := "Lens"
	1930	[6016]	LOADK    	R148 K299 ; R148 := ""
	1931	[6016]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1932	[6016]	LOADK    	R147 K650 ; R147 := "Polarity"
	1933	[6016]	LOADK    	R148 K299 ; R148 := ""
	1934	[6016]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1935	[6016]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1936	[6017]	LOADK    	R145 := 6.000000
	1937	[6017]	NEWTABLE 	R146 0 4 ; R146 := {}
	1938	[6017]	LOADK    	R147 K647 ; R147 := "Icon"
	1939	[6017]	LOADK    	R148 K299 ; R148 := ""
	1940	[6017]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1941	[6017]	LOADK    	R147 K648 ; R147 := "Ability"
	1942	[6017]	LOADK    	R148 K299 ; R148 := ""
	1943	[6017]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1944	[6017]	LOADK    	R147 K649 ; R147 := "Lens"
	1945	[6017]	LOADK    	R148 K299 ; R148 := ""
	1946	[6017]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1947	[6017]	LOADK    	R147 K650 ; R147 := "Polarity"
	1948	[6017]	LOADK    	R148 K299 ; R148 := ""
	1949	[6017]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1950	[6017]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1951	[6018]	LOADK    	R145 := 7.000000
	1952	[6018]	NEWTABLE 	R146 0 4 ; R146 := {}
	1953	[6018]	LOADK    	R147 K647 ; R147 := "Icon"
	1954	[6018]	LOADK    	R148 K667 ; R148 := "FocusLensUnairu.png"
	1955	[6018]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1956	[6019]	LOADK    	R147 K648 ; R147 := "Ability"
	1957	[6019]	LOADK    	R148 K668 ; R148 := "/Lotus/Upgrades/Focus/Ward/WardFocusAbility"
	1958	[6019]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1959	[6020]	LOADK    	R147 K649 ; R147 := "Lens"
	1960	[6020]	LOADK    	R148 K669 ; R148 := "UNAIRU"
	1961	[6020]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1962	[6021]	LOADK    	R147 K650 ; R147 := "Polarity"
	1963	[6021]	LOADK    	R148 K670 ; R148 := "/Lotus/Language/TennoWay/Unairu"
	1964	[6021]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1965	[6021]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1966	[6022]	LOADK    	R145 := 8.000000
	1967	[6022]	NEWTABLE 	R146 0 4 ; R146 := {}
	1968	[6022]	LOADK    	R147 K647 ; R147 := "Icon"
	1969	[6022]	LOADK    	R148 K299 ; R148 := ""
	1970	[6022]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1971	[6022]	LOADK    	R147 K648 ; R147 := "Ability"
	1972	[6022]	LOADK    	R148 K299 ; R148 := ""
	1973	[6022]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1974	[6022]	LOADK    	R147 K649 ; R147 := "Lens"
	1975	[6022]	LOADK    	R148 K299 ; R148 := ""
	1976	[6022]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1977	[6022]	LOADK    	R147 K650 ; R147 := "Polarity"
	1978	[6022]	LOADK    	R148 K299 ; R148 := ""
	1979	[6022]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1980	[6022]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1981	[6023]	LOADK    	R145 := 9.000000
	1982	[6023]	NEWTABLE 	R146 0 4 ; R146 := {}
	1983	[6023]	LOADK    	R147 K647 ; R147 := "Icon"
	1984	[6023]	LOADK    	R148 K299 ; R148 := ""
	1985	[6023]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1986	[6023]	LOADK    	R147 K648 ; R147 := "Ability"
	1987	[6023]	LOADK    	R148 K299 ; R148 := ""
	1988	[6023]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1989	[6023]	LOADK    	R147 K649 ; R147 := "Lens"
	1990	[6023]	LOADK    	R148 K299 ; R148 := ""
	1991	[6023]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1992	[6023]	LOADK    	R147 K650 ; R147 := "Polarity"
	1993	[6023]	LOADK    	R148 K299 ; R148 := ""
	1994	[6023]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1995	[6023]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1996	[6078]	CLOSURE  	R145 296 ; R145 := closure(Function #297)
	1997	[6078]	MOVE     	R0 R17 ; R0 := R17
	1998	[6078]	MOVE     	R0 R144 ; R0 := R144
	1999	[6027]	SETGLOBAL	R145 K671 ; GetPolarityInfoForLens := R145
	2000	[6082]	CLOSURE  	R145 297 ; R145 := closure(Function #298)
	2001	[6082]	MOVE     	R0 R144 ; R0 := R144
	2002	[6080]	SETGLOBAL	R145 K672 ; GetWayInfo := R145
	2003	[6120]	CLOSURE  	R145 298 ; R145 := closure(Function #299)
	2004	[6120]	MOVE     	R0 R17 ; R0 := R17
	2005	[6084]	SETGLOBAL	R145 K673 ; ClearOperatorLookAt := R145
	2006	[6209]	CLOSURE  	R145 299 ; R145 := closure(Function #300)
	2007	[6209]	MOVE     	R0 R17 ; R0 := R17
	2008	[6122]	SETGLOBAL	R145 K674 ; UpdateOperatorLookAt := R145
	2009	[6217]	CLOSURE  	R145 300 ; R145 := closure(Function #301)
	2010	[6211]	SETGLOBAL	R145 K675 ; IsDeluxeSkin := R145
	2011	[6242]	CLOSURE  	R145 301 ; R145 := closure(Function #302)
	2012	[6242]	MOVE     	R0 R17 ; R0 := R17
	2013	[6219]	SETGLOBAL	R145 K676 ; SetupThreeColorText := R145
	2014	[6273]	CLOSURE  	R145 302 ; R145 := closure(Function #303)
	2015	[6244]	SETGLOBAL	R145 K677 ; SetEnergyToTeamColor := R145
	2016	[6277]	CLOSURE  	R145 303 ; R145 := closure(Function #304)
	2017	[6275]	SETGLOBAL	R145 K678 ; ClearTransmissionQueue := R145
	2018	[6292]	CLOSURE  	R145 304 ; R145 := closure(Function #305)
	2019	[6297]	CLOSURE  	R146 305 ; R146 := closure(Function #306)
	2020	[6297]	MOVE     	R0 R145 ; R0 := R145
	2021	[6295]	SETGLOBAL	R146 K679 ; GetProductId := R146
	2022	[6315]	CLOSURE  	R146 306 ; R146 := closure(Function #307)
	2023	[6315]	MOVE     	R0 R145 ; R0 := R145
	2024	[6319]	CLOSURE  	R147 307 ; R147 := closure(Function #308)
	2025	[6319]	MOVE     	R0 R146 ; R0 := R146
	2026	[6317]	SETGLOBAL	R147 K680 ; CheckIOSPurchaseAvailability := R147
	2027	[6357]	CLOSURE  	R147 308 ; R147 := closure(Function #309)
	2028	[6362]	CLOSURE  	R148 309 ; R148 := closure(Function #310)
	2029	[6362]	MOVE     	R0 R147 ; R0 := R147
	2030	[6360]	SETGLOBAL	R148 K681 ; CheckSteamPurchaseAvailability := R148
	2031	[6380]	CLOSURE  	R148 310 ; R148 := closure(Function #311)
	2032	[6384]	CLOSURE  	R149 311 ; R149 := closure(Function #312)
	2033	[6384]	MOVE     	R0 R148 ; R0 := R148
	2034	[6382]	SETGLOBAL	R149 K682 ; CheckEpicPurchaseAvailability := R149
	2035	[6397]	CLOSURE  	R149 312 ; R149 := closure(Function #313)
	2036	[6397]	MOVE     	R0 R148 ; R0 := R148
	2037	[6397]	MOVE     	R0 R146 ; R0 := R146
	2038	[6397]	MOVE     	R0 R147 ; R0 := R147
	2039	[6397]	MOVE     	R0 R145 ; R0 := R145
	2040	[6401]	CLOSURE  	R150 313 ; R150 := closure(Function #314)
	2041	[6401]	MOVE     	R0 R149 ; R0 := R149
	2042	[6399]	SETGLOBAL	R150 K683 ; IsExternalProduct := R150
	2043	[6424]	CLOSURE  	R150 314 ; R150 := closure(Function #315)
	2044	[6428]	CLOSURE  	R151 315 ; R151 := closure(Function #316)
	2045	[6428]	MOVE     	R0 R150 ; R0 := R150
	2046	[6451]	CLOSURE  	R152 316 ; R152 := closure(Function #317)
	2047	[6451]	MOVE     	R0 R145 ; R0 := R145
	2048	[6451]	MOVE     	R0 R150 ; R0 := R150
	2049	[6451]	MOVE     	R0 R149 ; R0 := R149
	2050	[6431]	SETGLOBAL	R152 K684 ; ShowItem := R152
	2051	[6483]	CLOSURE  	R152 317 ; R152 := closure(Function #318)
	2052	[6483]	MOVE     	R0 R17 ; R0 := R17
	2053	[6453]	SETGLOBAL	R152 K685 ; GetTreasureName := R152
	2054	[6487]	CLOSURE  	R152 318 ; R152 := closure(Function #319)
	2055	[6485]	SETGLOBAL	R152 K686 ; GetSecondCount := R152
	2056	[6491]	CLOSURE  	R152 319 ; R152 := closure(Function #320)
	2057	[6495]	CLOSURE  	R153 320 ; R153 := closure(Function #321)
	2058	[6495]	MOVE     	R0 R152 ; R0 := R152
	2059	[6493]	SETGLOBAL	R153 K687 ; GetMinuteCount := R153
	2060	[6499]	CLOSURE  	R153 321 ; R153 := closure(Function #322)
	2061	[6503]	CLOSURE  	R154 322 ; R154 := closure(Function #323)
	2062	[6503]	MOVE     	R0 R153 ; R0 := R153
	2063	[6501]	SETGLOBAL	R154 K688 ; GetHourCount := R154
	2064	[6507]	CLOSURE  	R154 323 ; R154 := closure(Function #324)
	2065	[6511]	CLOSURE  	R155 324 ; R155 := closure(Function #325)
	2066	[6511]	MOVE     	R0 R154 ; R0 := R154
	2067	[6509]	SETGLOBAL	R155 K689 ; GetDayCount := R155
	2068	[6515]	CLOSURE  	R155 325 ; R155 := closure(Function #326)
	2069	[6513]	SETGLOBAL	R155 K690 ; GetWeekCount := R155
	2070	[6577]	CLOSURE  	R155 326 ; R155 := closure(Function #327)
	2071	[6577]	MOVE     	R0 R154 ; R0 := R154
	2072	[6517]	SETGLOBAL	R155 K691 ; RollForNightmareMutators := R155
	2073	[6602]	CLOSURE  	R28 327 ; R28 := closure(Function #328)
	2074	[6606]	CLOSURE  	R155 328 ; R155 := closure(Function #329)
	2075	[6606]	MOVE     	R0 R28 ; R0 := R28
	2076	[6604]	SETGLOBAL	R155 K692 ; GetOmegaCards := R155
	2077	[6620]	CLOSURE  	R29 329 ; R29 := closure(Function #330)
	2078	[6620]	MOVE     	R0 R28 ; R0 := R28
	2079	[6620]	MOVE     	R0 R30 ; R0 := R30
	2080	[6624]	CLOSURE  	R155 330 ; R155 := closure(Function #331)
	2081	[6624]	MOVE     	R0 R29 ; R0 := R29
	2082	[6622]	SETGLOBAL	R155 K693 ; IsOverOmegaLimit := R155
	2083	[6637]	CLOSURE  	R30 331 ; R30 := closure(Function #332)
	2084	[6641]	CLOSURE  	R155 332 ; R155 := closure(Function #333)
	2085	[6641]	MOVE     	R0 R30 ; R0 := R30
	2086	[6639]	SETGLOBAL	R155 K694 ; GetMaxOmegaCapacity := R155
	2087	[6656]	CLOSURE  	R155 333 ; R155 := closure(Function #334)
	2088	[6661]	CLOSURE  	R156 334 ; R156 := closure(Function #335)
	2089	[6661]	MOVE     	R0 R155 ; R0 := R155
	2090	[6658]	SETGLOBAL	R156 K695 ; IsCurrentSuitInfestedEnoughToHeal := R156
	2091	[6666]	CLOSURE  	R156 335 ; R156 := closure(Function #336)
	2092	[6666]	MOVE     	R0 R155 ; R0 := R155
	2093	[6663]	SETGLOBAL	R156 K696 ; IsCurrentSuitFullyInfested := R156
	2094	[6697]	CLOSURE  	R156 336 ; R156 := closure(Function #337)
	2095	[6668]	SETGLOBAL	R156 K697 ; ShowTradeUI := R156
	2096	[6710]	CLOSURE  	R156 337 ; R156 := closure(Function #338)
	2097	[6699]	SETGLOBAL	R156 K698 ; UpdateScannerInfo := R156
	2098	[6719]	CLOSURE  	R156 338 ; R156 := closure(Function #339)
	2099	[6712]	SETGLOBAL	R156 K699 ; SetFlashlightDimness := R156
	2100	[6771]	CLOSURE  	R156 339 ; R156 := closure(Function #340)
	2101	[6771]	MOVE     	R0 R17 ; R0 := R17
	2102	[6721]	SETGLOBAL	R156 K700 ; GetRewardTextForMastery := R156
	2103	[6831]	CLOSURE  	R156 340 ; R156 := closure(Function #341)
	2104	[6895]	CLOSURE  	R157 341 ; R157 := closure(Function #342)
	2105	[6895]	MOVE     	R0 R54 ; R0 := R54
	2106	[6895]	MOVE     	R0 R17 ; R0 := R17
	2107	[6895]	MOVE     	R0 R156 ; R0 := R156
	2108	[6899]	CLOSURE  	R158 342 ; R158 := closure(Function #343)
	2109	[6899]	MOVE     	R0 R157 ; R0 := R157
	2110	[6897]	SETGLOBAL	R158 K701 ; GetPresetInfo := R158
	2111	[6905]	CLOSURE  	R158 343 ; R158 := closure(Function #344)
	2112	[6901]	SETGLOBAL	R158 K702 ; GetClanEmblemPath := R158
	2113	[6951]	CLOSURE  	R158 344 ; R158 := closure(Function #345)
	2114	[6907]	SETGLOBAL	R158 K703 ; GetPersonalGoalProgress := R158
	2115	[7015]	CLOSURE  	R158 345 ; R158 := closure(Function #346)
	2116	[7015]	MOVE     	R0 R63 ; R0 := R63
	2117	[6953]	SETGLOBAL	R158 K704 ; HasRelayReconstructionEnemy := R158
	2118	[7052]	CLOSURE  	R158 346 ; R158 := closure(Function #347)
	2119	[7017]	SETGLOBAL	R158 K705 ; ApplyWeaponRestriction := R158
	2120	[7139]	CLOSURE  	R158 347 ; R158 := closure(Function #348)
	2121	[7054]	SETGLOBAL	R158 K706 ; ApplyModlessLoadout := R158
	2122	[7149]	CLOSURE  	R158 348 ; R158 := closure(Function #349)
	2123	[7141]	SETGLOBAL	R158 K707 ; IsNoModsMode := R158
	2124	[7163]	CLOSURE  	R158 349 ; R158 := closure(Function #350)
	2125	[7151]	SETGLOBAL	R158 K708 ; ToggleAvatarAuras := R158
	2126	[7172]	CLOSURE  	R158 350 ; R158 := closure(Function #351)
	2127	[7166]	SETGLOBAL	R158 K709 ; IsFirstTimeInNode := R158
	2128	[7179]	CLOSURE  	R158 351 ; R158 := closure(Function #352)
	2129	[7174]	SETGLOBAL	R158 K710 ; SetEquippingGearItem := R158
	2130	[7187]	CLOSURE  	R158 352 ; R158 := closure(Function #353)
	2131	[7181]	SETGLOBAL	R158 K711 ; IsEquippingGearItem := R158
	2132	[7232]	CLOSURE  	R158 353 ; R158 := closure(Function #354)
	2133	[7236]	CLOSURE  	R159 354 ; R159 := closure(Function #355)
	2134	[7236]	MOVE     	R0 R158 ; R0 := R158
	2135	[7234]	SETGLOBAL	R159 K712 ; GetShipDecoRoom := R159
	2136	[7251]	CLOSURE  	R159 355 ; R159 := closure(Function #356)
	2137	[7238]	SETGLOBAL	R159 K713 ; GetDecoArea := R159
	2138	[7330]	CLOSURE  	R159 356 ; R159 := closure(Function #357)
	2139	[7330]	MOVE     	R0 R34 ; R0 := R34
	2140	[7253]	SETGLOBAL	R159 K714 ; GetShipDecoAnchor := R159
	2141	[7356]	CLOSURE  	R159 357 ; R159 := closure(Function #358)
	2142	[7332]	SETGLOBAL	R159 K715 ; ShowLoadoutSelectionMenu := R159
	2143	[7426]	CLOSURE  	R159 358 ; R159 := closure(Function #359)
	2144	[7358]	SETGLOBAL	R159 K716 ; GetTimeOfDayLabel := R159
	2145	[7451]	CLOSURE  	R159 359 ; R159 := closure(Function #360)
	2146	[7428]	SETGLOBAL	R159 K717 ; CalculateTimeOfDay := R159
	2147	[7466]	CLOSURE  	R159 360 ; R159 := closure(Function #361)
	2148	[7470]	CLOSURE  	R160 361 ; R160 := closure(Function #362)
	2149	[7470]	MOVE     	R0 R159 ; R0 := R159
	2150	[7468]	SETGLOBAL	R160 K718 ; ProcessPlayerLevel := R160
	2151	[7601]	CLOSURE  	R160 362 ; R160 := closure(Function #363)
	2152	[7601]	MOVE     	R0 R159 ; R0 := R159
	2153	[7601]	MOVE     	R0 R17 ; R0 := R17
	2154	[7472]	SETGLOBAL	R160 K719 ; GetSquadMemberLoadoutInfo := R160
	2155	[7720]	CLOSURE  	R160 363 ; R160 := closure(Function #364)
	2156	[7720]	MOVE     	R0 R137 ; R0 := R137
	2157	[7720]	MOVE     	R0 R97 ; R0 := R97
	2158	[7603]	SETGLOBAL	R160 K720 ; CreateVendorConversationFunctions := R160
	2159	[7728]	CLOSURE  	R160 364 ; R160 := closure(Function #365)
	2160	[7728]	MOVE     	R0 R17 ; R0 := R17
	2161	[7722]	SETGLOBAL	R160 K721 ; RegisterHideHud := R160
	2162	[7736]	CLOSURE  	R160 365 ; R160 := closure(Function #366)
	2163	[7736]	MOVE     	R0 R17 ; R0 := R17
	2164	[7730]	SETGLOBAL	R160 K722 ; RegisterHideNotifications := R160
	2165	[7744]	CLOSURE  	R160 366 ; R160 := closure(Function #367)
	2166	[7744]	MOVE     	R0 R17 ; R0 := R17
	2167	[7738]	SETGLOBAL	R160 K723 ; RegisterHideStarChart := R160
	2168	[7752]	CLOSURE  	R160 367 ; R160 := closure(Function #368)
	2169	[7752]	MOVE     	R0 R17 ; R0 := R17
	2170	[7746]	SETGLOBAL	R160 K724 ; RegisterHideSquadOverlay := R160
	2171	[7760]	CLOSURE  	R160 368 ; R160 := closure(Function #369)
	2172	[7760]	MOVE     	R0 R17 ; R0 := R17
	2173	[7754]	SETGLOBAL	R160 K725 ; RegisterHideEOM := R160
	2174	[7773]	CLOSURE  	R160 369 ; R160 := closure(Function #370)
	2175	[7762]	SETGLOBAL	R160 K726 ; GetEntityUnderCursor := R160
	2176	[7791]	CLOSURE  	R160 370 ; R160 := closure(Function #371)
	2177	[7775]	SETGLOBAL	R160 K727 ; HasDojoArchitectPermission := R160
	2178	[7834]	CLOSURE  	R160 371 ; R160 := closure(Function #372)
	2179	[7793]	SETGLOBAL	R160 K728 ; GetDojoConsole := R160
	2180	[7838]	CLOSURE  	R160 372 ; R160 := closure(Function #373)
	2181	[7836]	SETGLOBAL	R160 K729 ; IsWarlordRank := R160
	2182	[7878]	CLOSURE  	R160 373 ; R160 := closure(Function #374)
	2183	[7878]	MOVE     	R0 R123 ; R0 := R123
	2184	[7878]	MOVE     	R0 R46 ; R0 := R46
	2185	[7878]	MOVE     	R0 R17 ; R0 := R17
	2186	[7840]	SETGLOBAL	R160 K730 ; ShowConditionalWordConfirm := R160
	2187	[7892]	CLOSURE  	R160 374 ; R160 := closure(Function #375)
	2188	[7880]	SETGLOBAL	R160 K731 ; GetAltFireKey := R160
	2189	[7921]	CLOSURE  	R160 375 ; R160 := closure(Function #376)
	2190	[7894]	SETGLOBAL	R160 K732 ; GetActiveSoundSet := R160
	2191	[7936]	CLOSURE  	R160 376 ; R160 := closure(Function #377)
	2192	[7923]	SETGLOBAL	R160 K733 ; InitializeTitleBookends := R160
	2193	[7974]	CLOSURE  	R160 377 ; R160 := closure(Function #378)
	2194	[8210]	CLOSURE  	R161 378 ; R161 := closure(Function #379)
	2195	[8210]	MOVE     	R0 R152 ; R0 := R152
	2196	[8210]	MOVE     	R0 R160 ; R0 := R160
	2197	[8210]	MOVE     	R0 R17 ; R0 := R17
	2198	[7976]	SETGLOBAL	R161 K734 ; GetHelminthUpgradeOffers := R161
	2199	[8310]	CLOSURE  	R161 379 ; R161 := closure(Function #380)
	2200	[8310]	MOVE     	R0 R17 ; R0 := R17
	2201	[8310]	MOVE     	R0 R152 ; R0 := R152
	2202	[8212]	SETGLOBAL	R161 K735 ; GetEliteAlertCustomUpgrades := R161
	2203	[8328]	CLOSURE  	R161 380 ; R161 := closure(Function #381)
	2204	[8312]	SETGLOBAL	R161 K736 ; AppendItemRank := R161
	2205	[8348]	CLOSURE  	R161 381 ; R161 := closure(Function #382)
	2206	[8348]	MOVE     	R0 R17 ; R0 := R17
	2207	[8348]	MOVE     	R0 R18 ; R0 := R18
	2208	[8330]	SETGLOBAL	R161 K737 ; ApplyParticleThemeColors := R161
	2209	[8377]	CLOSURE  	R161 382 ; R161 := closure(Function #383)
	2210	[8377]	MOVE     	R0 R18 ; R0 := R18
	2211	[8350]	SETGLOBAL	R161 K738 ; ReplaceTextColors := R161
	2212	[8444]	CLOSURE  	R161 383 ; R161 := closure(Function #384)
	2213	[8444]	MOVE     	R0 R133 ; R0 := R133
	2214	[8381]	SETGLOBAL	R161 K739 ; UpdateMailbox := R161
	2215	[8448]	CLOSURE  	R161 384 ; R161 := closure(Function #385)
	2216	[8448]	MOVE     	R0 R95 ; R0 := R95
	2217	[8446]	SETGLOBAL	R161 K740 ; IsSeasonActive := R161
	2218	[8505]	CLOSURE  	R161 385 ; R161 := closure(Function #386)
	2219	[8505]	MOVE     	R0 R63 ; R0 := R63
	2220	[8505]	MOVE     	R0 R42 ; R0 := R42
	2221	[8509]	CLOSURE  	R162 386 ; R162 := closure(Function #387)
	2222	[8509]	MOVE     	R0 R161 ; R0 := R161
	2223	[8507]	SETGLOBAL	R162 K741 ; BuildNemesisMission := R162
	2224	[8522]	CLOSURE  	R162 387 ; R162 := closure(Function #388)
	2225	[8511]	SETGLOBAL	R162 K742 ; ShouldHideRecipe := R162
	2226	[8534]	CLOSURE  	R162 388 ; R162 := closure(Function #389)
	2227	[8524]	SETGLOBAL	R162 K743 ; CheckLetterSpacing := R162
	2228	[8544]	CLOSURE  	R162 389 ; R162 := closure(Function #390)
	2229	[8536]	SETGLOBAL	R162 K744 ; ServerSideSettings := R162
	2230	[8557]	CLOSURE  	R162 390 ; R162 := closure(Function #391)
	2231	[8557]	MOVE     	R0 R17 ; R0 := R17
	2232	[8561]	CLOSURE  	R163 391 ; R163 := closure(Function #392)
	2233	[8561]	MOVE     	R0 R162 ; R0 := R162
	2234	[8559]	SETGLOBAL	R163 K745 ; FriendLimitReached := R163
	2235	[8593]	CLOSURE  	R163 392 ; R163 := closure(Function #393)
	2236	[8593]	MOVE     	R0 R46 ; R0 := R46
	2237	[8593]	MOVE     	R0 R17 ; R0 := R17
	2238	[8614]	CLOSURE  	R164 393 ; R164 := closure(Function #394)
	2239	[8614]	MOVE     	R0 R163 ; R0 := R163
	2240	[8614]	MOVE     	R0 R162 ; R0 := R162
	2241	[8614]	MOVE     	R0 R123 ; R0 := R123
	2242	[8595]	SETGLOBAL	R164 K746 ; AddFriend := R164
	2243	[8635]	CLOSURE  	R164 394 ; R164 := closure(Function #395)
	2244	[8616]	SETGLOBAL	R164 K747 ; GetSyndicateBackgroundAlignments := R164
	2245	[8646]	CLOSURE  	R164 395 ; R164 := closure(Function #396)
	2246	[8637]	SETGLOBAL	R164 K748 ; ForceCloseTransmission := R164
	2247	[8687]	CLOSURE  	R164 396 ; R164 := closure(Function #397)
	2248	[8648]	SETGLOBAL	R164 K749 ; GetNetworkAnalysisURL := R164
	2249	[8707]	CLOSURE  	R164 397 ; R164 := closure(Function #398)
	2250	[8689]	SETGLOBAL	R164 K750 ; AvatarHasActiveActions := R164
	2251	[8715]	CLOSURE  	R164 398 ; R164 := closure(Function #399)
	2252	[8715]	MOVE     	R0 R9 ; R0 := R9
	2253	[8709]	SETGLOBAL	R164 K751 ; ShouldHideConsumable := R164
	2254	[8747]	CLOSURE  	R164 399 ; R164 := closure(Function #400)
	2255	[8747]	MOVE     	R0 R158 ; R0 := R158
	2256	[8717]	SETGLOBAL	R164 K752 ; ShouldShowRoomDecorationReset := R164
	2257	[8825]	CLOSURE  	R164 400 ; R164 := closure(Function #401)
	2258	[8825]	MOVE     	R0 R63 ; R0 := R63
	2259	[8749]	SETGLOBAL	R164 K753 ; GetMissionName := R164
	2260	[8847]	CLOSURE  	R164 401 ; R164 := closure(Function #402)
	2261	[8827]	SETGLOBAL	R164 K754 ; HasUnlockedHardMode := R164
	2262	[8877]	CLOSURE  	R164 402 ; R164 := closure(Function #403)
	2263	[9256]	CLOSURE  	R165 403 ; R165 := closure(Function #404)
	2264	[9256]	MOVE     	R0 R164 ; R0 := R164
	2265	[9256]	MOVE     	R0 R17 ; R0 := R17
	2266	[9256]	MOVE     	R0 R161 ; R0 := R161
	2267	[9256]	MOVE     	R0 R40 ; R0 := R40
	2268	[9256]	MOVE     	R0 R41 ; R0 := R41
	2269	[9256]	MOVE     	R0 R102 ; R0 := R102
	2270	[8879]	SETGLOBAL	R165 K755 ; GetMissionVoteInfo := R165
	2271	[9274]	CLOSURE  	R165 404 ; R165 := closure(Function #405)
	2272	[9258]	SETGLOBAL	R165 K756 ; BuildMissionMapString := R165
	2273	[9294]	CLOSURE  	R165 405 ; R165 := closure(Function #406)
	2274	[9294]	MOVE     	R0 R53 ; R0 := R53
	2275	[9294]	MOVE     	R0 R17 ; R0 := R17
	2276	[9276]	SETGLOBAL	R165 K757 ; RefreshPetsAfterSell := R165
	2277	[9314]	CLOSURE  	R165 406 ; R165 := closure(Function #407)
	2278	[9296]	SETGLOBAL	R165 K758 ; GetResearchProgress := R165
	2279	[9329]	CLOSURE  	R165 407 ; R165 := closure(Function #408)
	2280	[9333]	CLOSURE  	R166 408 ; R166 := closure(Function #409)
	2281	[9333]	MOVE     	R0 R165 ; R0 := R165
	2282	[9331]	SETGLOBAL	R166 K759 ; ValidateTrueMaster := R166
	2283	[9344]	CLOSURE  	R166 409 ; R166 := closure(Function #410)
	2284	[9344]	MOVE     	R0 R165 ; R0 := R165
	2285	[9335]	SETGLOBAL	R166 K760 ; SetMOTD := R166
	2286	[9348]	CLOSURE  	R166 410 ; R166 := closure(Function #411)
	2287	[9346]	SETGLOBAL	R166 K761 ; GetSlotType := R166
	2288	[9374]	CLOSURE  	R166 411 ; R166 := closure(Function #412)
	2289	[9350]	SETGLOBAL	R166 K762 ; AutofocusTextfield := R166
	2290	[9418]	CLOSURE  	R166 412 ; R166 := closure(Function #413)
	2291	[9418]	MOVE     	R0 R133 ; R0 := R133
	2292	[9418]	MOVE     	R0 R63 ; R0 := R63
	2293	[9376]	SETGLOBAL	R166 K763 ; ReturnToDojo := R166
	2294	[9424]	CLOSURE  	R166 413 ; R166 := closure(Function #414)
	2295	[9420]	SETGLOBAL	R166 K764 ; IsPlayerInCrewship := R166
	2296	[9445]	CLOSURE  	R166 414 ; R166 := closure(Function #415)
	2297	[9426]	SETGLOBAL	R166 K765 ; ApplyCensorshipOverridesAndAttachments := R166
	2298	[9455]	CLOSURE  	R166 415 ; R166 := closure(Function #416)
	2299	[9498]	CLOSURE  	R167 416 ; R167 := closure(Function #417)
	2300	[9498]	MOVE     	R0 R17 ; R0 := R17
	2301	[9498]	MOVE     	R0 R46 ; R0 := R46
	2302	[9498]	MOVE     	R0 R166 ; R0 := R166
	2303	[9457]	SETGLOBAL	R167 K766 ; ToggleIgnoreUser := R167
	2304	[9507]	CLOSURE  	R167 417 ; R167 := closure(Function #418)
	2305	[9500]	SETGLOBAL	R167 K767 ; IsEmptyLevel := R167
	2306	[9536]	CLOSURE  	R34 418 ; R34 := closure(Function #419)
	2307	[9540]	CLOSURE  	R167 419 ; R167 := closure(Function #420)
	2308	[9540]	MOVE     	R0 R34 ; R0 := R34
	2309	[9538]	SETGLOBAL	R167 K768 ; IsCampLevel := R167
	2310	[9552]	CLOSURE  	R35 420 ; R35 := closure(Function #421)
	2311	[9556]	CLOSURE  	R167 421 ; R167 := closure(Function #422)
	2312	[9556]	MOVE     	R0 R35 ; R0 := R35
	2313	[9554]	SETGLOBAL	R167 K769 ; IsApartmentLevel := R167
	2314	[9573]	CLOSURE  	R167 422 ; R167 := closure(Function #423)
	2315	[9573]	MOVE     	R0 R34 ; R0 := R34
	2316	[9558]	SETGLOBAL	R167 K770 ; SetLoginCameraSpot := R167
	2317	[9584]	CLOSURE  	R167 423 ; R167 := closure(Function #424)
	2318	[9584]	MOVE     	R0 R45 ; R0 := R45
	2319	[9575]	SETGLOBAL	R167 K771 ; QuestRequiresLotusHelmet := R167
	2320	[9680]	CLOSURE  	R167 424 ; R167 := closure(Function #425)
	2321	[9680]	MOVE     	R0 R46 ; R0 := R46
	2322	[9680]	MOVE     	R0 R123 ; R0 := R123
	2323	[9680]	MOVE     	R0 R17 ; R0 := R17
	2324	[9586]	SETGLOBAL	R167 K772 ; ShowBeginZarimanQuestWarning := R167
	2325	[9696]	CLOSURE  	R167 425 ; R167 := closure(Function #426)
	2326	[9682]	SETGLOBAL	R167 K773 ; GetLocalizedLotusName := R167
	2327	[9720]	CLOSURE  	R167 426 ; R167 := closure(Function #427)
	2328	[9720]	MOVE     	R0 R34 ; R0 := R34
	2329	[9698]	SETGLOBAL	R167 K774 ; PlayLoginAnim := R167
	2330	[9732]	CLOSURE  	R167 427 ; R167 := closure(Function #428)
	2331	[9722]	SETGLOBAL	R167 K775 ; SetTimeOfDay := R167
	2332	[9732]	RETURN   	R0 1 ; return 


function #1 <?:476,482> (13 instructions, 52 bytes at 0000025274EDAC80)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[477]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0x5b89142c]
	2	[477]	CALL     	R1 2 2 ; R1 := R1(R2)
	3	[478]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[478]	MOVE     	R3 R1 ; R3 := R1
	5	[478]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[478]	TEST     	R2 1 ; if R2 then PC := 11
	7	[478]	JMP      	11 ; PC := 11
	8	[479]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0xa534c3ac]
	9	[479]	TAILCALL 	R2 2 0 ; R2,... := R2(R3)
	10	[479]	RETURN   	R2 0 ; return R2,... 
	11	[481]	LOADNIL  	R2 R2 ; R2 := nil
	12	[481]	RETURN   	R2 2 ; return R2 
	13	[482]	RETURN   	R0 1 ; return 

function #2 <?:484,493> (21 instructions, 84 bytes at 0000025274EDADF0)
1 param, 7 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[485]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xf2deaf69]
	2	[485]	GETGLOBAL	R3 K1 ; R3 := gLotusVehicleAvatarType
	3	[485]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	4	[485]	TEST     	R1 0 ; if not R1 then PC := 20
	5	[485]	JMP      	20 ; PC := 20
	6	[486]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xff005826]
	7	[486]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[487]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	9	[487]	MOVE     	R3 R1 ; R3 := R1
	10	[487]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[487]	TEST     	R2 1 ; if R2 then PC := 20
	12	[487]	JMP      	20 ; PC := 20
	13	[488]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0xcaa5de6d]
	14	[488]	MOVE     	R4 R1 ; R4 := R1
	15	[488]	GETGLOBAL	R5 K5 ; R5 := 0xa421af95
	16	[488]	CALL     	R5 1 2 ; R5 := R5()
	17	[488]	OP_LOADBOOL	R6 1 0 ; R6 := true
	18	[488]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	19	[489]	MOVE     	R0 R1 ; R0 := R1
	20	[492]	RETURN   	R0 2 ; return R0 
	21	[493]	RETURN   	R0 1 ; return 

function #3 <?:495,503> (31 instructions, 124 bytes at 0000025274EDAFD0)
2 params, 6 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[496]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[496]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x06d055f9]
	3	[496]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 6
	4	[496]	JMP      	6 ; PC := 6
	5	[496]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 6
	6	[496]	OP_LOADBOOL	R3 1 0 ; R3 := true
	7	[496]	MOVE     	R4 R1 ; R4 := R1
	8	[496]	LOADK    	R5 := 2.000000
	9	[496]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	10	[497]	GETGLOBAL	R3 K2 ; R3 := 0xcd0165a3
	11	[497]	MOVE     	R4 R2 ; R4 := R2
	12	[497]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[498]	GETTABLE 	R4 R3 K3 ; R4 := R3["mMovie"]
	14	[498]	TEST     	R4 0 ; if not R4 then PC := 24
	15	[498]	JMP      	24 ; PC := 24
	16	[498]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	17	[498]	MOVE     	R5 R0 ; R5 := R0
	18	[498]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[498]	TEST     	R4 1 ; if R4 then PC := 30
	20	[498]	JMP      	30 ; PC := 30
	21	[498]	GETTABLE 	R4 R3 K3 ; R4 := R3["mMovie"]
	22	[498]	EQ       	1 R4 R0 ; if R4 == R0 then PC := 30
	23	[498]	JMP      	30 ; PC := 30
	24	[499]	ADD      	R2 R2 K5 ; R2 := R2 + 1.000000
	25	[500]	GETGLOBAL	R4 K2 ; R4 := 0xcd0165a3
	26	[500]	MOVE     	R5 R2 ; R5 := R2
	27	[500]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[500]	MOVE     	R3 R4 ; R3 := R4
	29	[500]	JMP      	13 ; PC := 13
	30	[502]	RETURN   	R3 2 ; return R3 
	31	[503]	RETURN   	R0 1 ; return 

function #4 <?:505,511> (21 instructions, 84 bytes at 0000025274EDB1F0)
0 params, 2 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[506]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[506]	GETTABLE 	R0 R0 K1 ; R0 := R0["hasCheckedTutorial"]
	3	[506]	EQ       	1 R0 K2 ; if R0 == nil then PC := 9
	4	[506]	JMP      	9 ; PC := 9
	5	[506]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[506]	GETTABLE 	R0 R0 K1 ; R0 := R0["hasCheckedTutorial"]
	7	[506]	TEST     	R0 1 ; if R0 then PC := 11
	8	[506]	JMP      	11 ; PC := 11
	9	[507]	OP_LOADBOOL	R0 1 0 ; R0 := true
	10	[507]	RETURN   	R0 2 ; return R0 
	11	[510]	GETGLOBAL	R0 K0 ; R0 := _T
	12	[510]	GETTABLE 	R0 R0 K3 ; R0 := R0["tutorialActive"]
	13	[510]	EQ       	1 R0 K2 ; if R0 == nil then PC := 18
	14	[510]	JMP      	18 ; PC := 18
	15	[510]	GETGLOBAL	R0 K0 ; R0 := _T
	16	[510]	GETTABLE 	R0 R0 K3 ; R0 := R0["tutorialActive"]
	17	[510]	JMP      	20 ; PC := 20
	18	[510]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 19
	19	[510]	OP_LOADBOOL	R0 1 0 ; R0 := true
	20	[510]	RETURN   	R0 2 ; return R0 
	21	[511]	RETURN   	R0 1 ; return 

function #5 <?:513,536> (95 instructions, 380 bytes at 0000025274EDB430)
0 params, 51 slots, 0 upvalues, 0 locals, 90 constants, 0 functions
	1	[514]	NEWTABLE 	R0 36 0 ; R0 := {}
	2	[516]	LOADK    	R1 K0 ; R1 := 4591633.000000
	3	[516]	LOADK    	R2 K1 ; R2 := 6756120.000000
	4	[516]	LOADK    	R3 K2 ; R3 := 9773092.000000
	5	[516]	LOADK    	R4 K3 ; R4 := 12265515.000000
	6	[516]	LOADK    	R5 K4 ; R5 := 13708851.000000
	7	[517]	LOADK    	R6 K5 ; R6 := 4003870.000000
	8	[517]	LOADK    	R7 K6 ; R7 := 5775914.000000
	9	[517]	LOADK    	R8 K7 ; R8 := 8663871.000000
	10	[517]	LOADK    	R9 K8 ; R9 := 11421784.000000
	11	[517]	LOADK    	R10 K9 ; R10 := 13260653.000000
	12	[518]	LOADK    	R11 K10 ; R11 := 2100501.000000
	13	[518]	LOADK    	R12 K11 ; R12 := 3873573.000000
	14	[518]	LOADK    	R13 K12 ; R13 := 7419972.000000
	15	[518]	LOADK    	R14 K13 ; R14 := 11428207.000000
	16	[518]	LOADK    	R15 K14 ; R15 := 13928599.000000
	17	[519]	LOADK    	R16 K15 ; R16 := 2492950.000000
	18	[519]	LOADK    	R17 K16 ; R17 := 4067364.000000
	19	[519]	LOADK    	R18 K17 ; R18 := 7216189.000000
	20	[519]	LOADK    	R19 K18 ; R19 := 10299227.000000
	21	[519]	LOADK    	R20 K19 ; R20 := 12464506.000000
	22	[520]	LOADK    	R21 K20 ; R21 := 987681.000000
	23	[520]	LOADK    	R22 K21 ; R22 := 1448500.000000
	24	[520]	LOADK    	R23 K22 ; R23 := 2502747.000000
	25	[520]	LOADK    	R24 K23 ; R24 := 3950990.000000
	26	[520]	LOADK    	R25 K24 ; R25 := 5334711.000000
	27	[521]	LOADK    	R26 K25 ; R26 := 530470.000000
	28	[521]	LOADK    	R27 K26 ; R27 := 797252.000000
	29	[521]	LOADK    	R28 K27 ; R28 := 1460087.000000
	30	[521]	LOADK    	R29 K28 ; R29 := 1994408.000000
	31	[521]	LOADK    	R30 K29 ; R30 := 2396358.000000
	32	[522]	LOADK    	R31 K30 ; R31 := 930629.000000
	33	[522]	LOADK    	R32 K31 ; R32 := 1526113.000000
	34	[522]	LOADK    	R33 K32 ; R33 := 2716301.000000
	35	[522]	LOADK    	R34 K33 ; R34 := 4169655.000000
	36	[522]	LOADK    	R35 K34 ; R35 := 5619666.000000
	37	[523]	LOADK    	R36 K35 ; R36 := 1650218.000000
	38	[523]	LOADK    	R37 K36 ; R37 := 2442557.000000
	39	[523]	LOADK    	R38 K37 ; R38 := 3828063.000000
	40	[523]	LOADK    	R39 K38 ; R39 := 5543563.000000
	41	[523]	LOADK    	R40 K39 ; R40 := 7388337.000000
	42	[524]	LOADK    	R41 K40 ; R41 := 1125400.000000
	43	[524]	LOADK    	R42 K41 ; R42 := 1721894.000000
	44	[524]	LOADK    	R43 K42 ; R43 := 2914624.000000
	45	[524]	LOADK    	R44 K43 ; R44 := 4303198.000000
	46	[524]	LOADK    	R45 K44 ; R45 := 5491068.000000
	47	[525]	LOADK    	R46 K45 ; R46 := 3816203.000000
	48	[525]	LOADK    	R47 K46 ; R47 := 6317074.000000
	49	[525]	LOADK    	R48 K47 ; R48 := 9409055.000000
	50	[525]	LOADK    	R49 K48 ; R49 := 12106284.000000
	51	[525]	LOADK    	R50 K49 ; R50 := 13750327.000000
	52	[525]	SETLIST  	R0 50 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 50
	53	[526]	LOADK    	R1 K50 ; R1 := 5916201.000000
	54	[526]	LOADK    	R2 K51 ; R2 := 8347962.000000
	55	[526]	LOADK    	R3 K52 ; R3 := 11111504.000000
	56	[526]	LOADK    	R4 K53 ; R4 := 13546858.000000
	57	[526]	LOADK    	R5 K54 ; R5 := 15126918.000000
	58	[527]	LOADK    	R6 K55 ; R6 := 8143131.000000
	59	[527]	LOADK    	R7 K56 ; R7 := 9589797.000000
	60	[527]	LOADK    	R8 K57 ; R8 := 11366711.000000
	61	[527]	LOADK    	R9 K58 ; R9 := 13014608.000000
	62	[527]	LOADK    	R10 K59 ; R10 := 14530158.000000
	63	[528]	LOADK    	R11 K60 ; R11 := 10107422.000000
	64	[528]	LOADK    	R12 K61 ; R12 := 11751209.000000
	65	[528]	LOADK    	R13 K62 ; R13 := 13529661.000000
	66	[528]	LOADK    	R14 K63 ; R14 := 14786650.000000
	67	[528]	LOADK    	R15 K64 ; R15 := 15254401.000000
	68	[529]	LOADK    	R16 K65 ; R16 := 3282697.000000
	69	[529]	LOADK    	R17 K66 ; R17 := 6301969.000000
	70	[529]	LOADK    	R18 K67 ; R18 := 10767646.000000
	71	[529]	LOADK    	R19 K68 ; R19 := 13726758.000000
	72	[529]	LOADK    	R20 K69 ; R20 := 14127655.000000
	73	[530]	LOADK    	R21 K70 ; R21 := 2694428.000000
	74	[530]	LOADK    	R22 K71 ; R22 := 4994866.000000
	75	[530]	LOADK    	R23 K72 ; R23 := 9398364.000000
	76	[530]	LOADK    	R24 K73 ; R24 := 13213582.000000
	77	[530]	LOADK    	R25 K74 ; R25 := 14991277.000000
	78	[531]	LOADK    	R26 K75 ; R26 := 2631460.000000
	79	[531]	LOADK    	R27 K76 ; R27 := 6117971.000000
	80	[531]	LOADK    	R28 K77 ; R28 := 12499631.000000
	81	[531]	LOADK    	R29 K78 ; R29 := 16118763.000000
	82	[531]	LOADK    	R30 K79 ; R30 := 16777215.000000
	83	[532]	LOADK    	R31 K80 ; R31 := 2106148.000000
	84	[532]	LOADK    	R32 K81 ; R32 := 4673359.000000
	85	[532]	LOADK    	R33 K82 ; R33 := 9872548.000000
	86	[532]	LOADK    	R34 K83 ; R34 := 14082529.000000
	87	[532]	LOADK    	R35 K84 ; R35 := 15989754.000000
	88	[533]	LOADK    	R36 K85 ; R36 := 1908258.000000
	89	[533]	LOADK    	R37 K86 ; R37 := 4145995.000000
	90	[533]	LOADK    	R38 K87 ; R38 := 9080479.000000
	91	[533]	LOADK    	R39 K88 ; R39 := 13225437.000000
	92	[534]	LOADK    	R40 K89 ; R40 := 15199223.000000
	93	[534]	SETLIST  	R0 40 2 ; R0[(2-1)*FPF+i] := R(0+i), 1 <= i <= 40
	94	[535]	RETURN   	R0 2 ; return R0 
	95	[536]	RETURN   	R0 1 ; return 

function #6 <?:538,565> (104 instructions, 416 bytes at 0000025274EDBD90)
0 params, 18 slots, 0 upvalues, 0 locals, 36 constants, 0 functions
	1	[541]	NEWTABLE 	R0 15 0 ; R0 := {}
	2	[542]	NEWTABLE 	R1 0 2 ; R1 := {}
	3	[543]	GETGLOBAL	R2 K1 ; R2 := 0x7ed0a956
	4	[543]	LOADK    	R3 K2 ; R3 := "/Lotus/Types/Game/KubrowPet/AdventurerKubrowPetPowerSuit"
	5	[543]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[543]	SETTABLE 	R1 K0 R2 ; R1["Type"] := R2
	7	[543]	SETTABLE 	R1 K3 K4 ; R1["Name"] := "/Lotus/Language/Items/AdventurerKubrowName"
	8	[543]	NEWTABLE 	R2 0 2 ; R2 := {}
	9	[544]	GETGLOBAL	R3 K1 ; R3 := 0x7ed0a956
	10	[544]	LOADK    	R4 K5 ; R4 := "/Lotus/Types/Game/KubrowPet/FurtiveKubrowPetPowerSuit"
	11	[544]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[544]	SETTABLE 	R2 K0 R3 ; R2["Type"] := R3
	13	[544]	SETTABLE 	R2 K3 K6 ; R2["Name"] := "/Lotus/Language/Items/FurtiveKubrowName"
	14	[544]	NEWTABLE 	R3 0 2 ; R3 := {}
	15	[545]	GETGLOBAL	R4 K1 ; R4 := 0x7ed0a956
	16	[545]	LOADK    	R5 K7 ; R5 := "/Lotus/Types/Game/KubrowPet/GuardKubrowPetPowerSuit"
	17	[545]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[545]	SETTABLE 	R3 K0 R4 ; R3["Type"] := R4
	19	[545]	SETTABLE 	R3 K3 K8 ; R3["Name"] := "/Lotus/Language/Items/GuardKubrowName"
	20	[545]	NEWTABLE 	R4 0 2 ; R4 := {}
	21	[546]	GETGLOBAL	R5 K1 ; R5 := 0x7ed0a956
	22	[546]	LOADK    	R6 K9 ; R6 := "/Lotus/Types/Game/KubrowPet/HunterKubrowPetPowerSuit"
	23	[546]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[546]	SETTABLE 	R4 K0 R5 ; R4["Type"] := R5
	25	[546]	SETTABLE 	R4 K3 K10 ; R4["Name"] := "/Lotus/Language/Items/HunterKubrowName"
	26	[546]	NEWTABLE 	R5 0 2 ; R5 := {}
	27	[547]	GETGLOBAL	R6 K1 ; R6 := 0x7ed0a956
	28	[547]	LOADK    	R7 K11 ; R7 := "/Lotus/Types/Game/KubrowPet/RetrieverKubrowPetPowerSuit"
	29	[547]	CALL     	R6 2 2 ; R6 := R6(R7)
	30	[547]	SETTABLE 	R5 K0 R6 ; R5["Type"] := R6
	31	[547]	SETTABLE 	R5 K3 K12 ; R5["Name"] := "/Lotus/Language/Items/RetrieverKubrowName"
	32	[547]	NEWTABLE 	R6 0 2 ; R6 := {}
	33	[548]	GETGLOBAL	R7 K1 ; R7 := 0x7ed0a956
	34	[548]	LOADK    	R8 K13 ; R8 := "/Lotus/Types/Game/KubrowPet/ChargerKubrowPetPowerSuit"
	35	[548]	CALL     	R7 2 2 ; R7 := R7(R8)
	36	[548]	SETTABLE 	R6 K0 R7 ; R6["Type"] := R7
	37	[548]	SETTABLE 	R6 K3 K14 ; R6["Name"] := "/Lotus/Language/Items/InfestedKubrowName"
	38	[548]	NEWTABLE 	R7 0 2 ; R7 := {}
	39	[549]	GETGLOBAL	R8 K1 ; R8 := 0x7ed0a956
	40	[549]	LOADK    	R9 K15 ; R9 := "/Lotus/Types/Game/CatbrowPet/MirrorCatbrowPetPowerSuit"
	41	[549]	CALL     	R8 2 2 ; R8 := R8(R9)
	42	[549]	SETTABLE 	R7 K0 R8 ; R7["Type"] := R8
	43	[549]	SETTABLE 	R7 K3 K16 ; R7["Name"] := "/Lotus/Language/Items/MirrorCatbrowName"
	44	[549]	NEWTABLE 	R8 0 2 ; R8 := {}
	45	[550]	GETGLOBAL	R9 K1 ; R9 := 0x7ed0a956
	46	[550]	LOADK    	R10 K17 ; R10 := "/Lotus/Types/Game/CatbrowPet/CheshireCatbrowPetPowerSuit"
	47	[550]	CALL     	R9 2 2 ; R9 := R9(R10)
	48	[550]	SETTABLE 	R8 K0 R9 ; R8["Type"] := R9
	49	[550]	SETTABLE 	R8 K3 K18 ; R8["Name"] := "/Lotus/Language/Items/CheshireCatbrowName"
	50	[550]	NEWTABLE 	R9 0 2 ; R9 := {}
	51	[551]	GETGLOBAL	R10 K1 ; R10 := 0x7ed0a956
	52	[551]	LOADK    	R11 K19 ; R11 := "/Lotus/Types/Game/CatbrowPet/VampireCatbrowPetPowerSuit"
	53	[551]	CALL     	R10 2 2 ; R10 := R10(R11)
	54	[551]	SETTABLE 	R9 K0 R10 ; R9["Type"] := R10
	55	[551]	SETTABLE 	R9 K3 K20 ; R9["Name"] := "/Lotus/Language/Pets/VampireKavatName"
	56	[551]	NEWTABLE 	R10 0 2 ; R10 := {}
	57	[552]	GETGLOBAL	R11 K1 ; R11 := 0x7ed0a956
	58	[552]	LOADK    	R12 K21 ; R12 := "/Lotus/Types/Friendly/Pets/CreaturePets/VizierPredatorKubrowPetPowerSuit"
	59	[552]	CALL     	R11 2 2 ; R11 := R11(R12)
	60	[552]	SETTABLE 	R10 K0 R11 ; R10["Type"] := R11
	61	[552]	SETTABLE 	R10 K3 K22 ; R10["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedPredatorCommonName"
	62	[552]	NEWTABLE 	R11 0 2 ; R11 := {}
	63	[553]	GETGLOBAL	R12 K1 ; R12 := 0x7ed0a956
	64	[553]	LOADK    	R13 K23 ; R13 := "/Lotus/Types/Friendly/Pets/CreaturePets/MedjayPredatorKubrowPetPowerSuit"
	65	[553]	CALL     	R12 2 2 ; R12 := R12(R13)
	66	[553]	SETTABLE 	R11 K0 R12 ; R11["Type"] := R12
	67	[553]	SETTABLE 	R11 K3 K24 ; R11["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedPredatorRareName"
	68	[553]	NEWTABLE 	R12 0 2 ; R12 := {}
	69	[554]	GETGLOBAL	R13 K1 ; R13 := 0x7ed0a956
	70	[554]	LOADK    	R14 K25 ; R14 := "/Lotus/Types/Friendly/Pets/CreaturePets/PharaohPredatorKubrowPetPowerSuit"
	71	[554]	CALL     	R13 2 2 ; R13 := R13(R14)
	72	[554]	SETTABLE 	R12 K0 R13 ; R12["Type"] := R13
	73	[554]	SETTABLE 	R12 K3 K26 ; R12["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedPredatorUncommonName"
	74	[554]	NEWTABLE 	R13 0 2 ; R13 := {}
	75	[555]	GETGLOBAL	R14 K1 ; R14 := 0x7ed0a956
	76	[555]	LOADK    	R15 K27 ; R15 := "/Lotus/Types/Friendly/Pets/CreaturePets/ArmoredInfestedCatbrowPetPowerSuit"
	77	[555]	CALL     	R14 2 2 ; R14 := R14(R15)
	78	[555]	SETTABLE 	R13 K0 R14 ; R13["Type"] := R14
	79	[555]	SETTABLE 	R13 K3 K28 ; R13["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedCritterRareName"
	80	[555]	NEWTABLE 	R14 0 2 ; R14 := {}
	81	[556]	GETGLOBAL	R15 K1 ; R15 := 0x7ed0a956
	82	[556]	LOADK    	R16 K29 ; R16 := "/Lotus/Types/Friendly/Pets/CreaturePets/HornedInfestedCatbrowPetPowerSuit"
	83	[556]	CALL     	R15 2 2 ; R15 := R15(R16)
	84	[556]	SETTABLE 	R14 K0 R15 ; R14["Type"] := R15
	85	[556]	SETTABLE 	R14 K3 K30 ; R14["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedCritterUncommonName"
	86	[556]	NEWTABLE 	R15 0 2 ; R15 := {}
	87	[557]	GETGLOBAL	R16 K1 ; R16 := 0x7ed0a956
	88	[557]	LOADK    	R17 K31 ; R17 := "/Lotus/Types/Friendly/Pets/CreaturePets/VulpineInfestedCatbrowPetPowerSuit"
	89	[557]	CALL     	R16 2 2 ; R16 := R16(R17)
	90	[557]	SETTABLE 	R15 K0 R16 ; R15["Type"] := R16
	91	[557]	SETTABLE 	R15 K3 K32 ; R15["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedCritterCommonName"
	92	[558]	SETLIST  	R0 15 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 15
	93	[560]	LOADK    	R1 := 1.000000
	94	[560]	LEN      	R2 R0 ; R2 := # R0
	95	[560]	LOADK    	R3 := 1.000000
	96	[560]	FORPREP  	R1 102 ; R1 -= R3; PC := 102
	97	[561]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	98	[561]	GETGLOBAL	R6 K34 ; R6 := 0x0032441c
	99	[561]	GETTABLE 	R6 R6 K35 ; R6 := R6["UITexture_CompanionIcons"]
	100	[561]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	101	[561]	SETTABLE 	R5 K33 R6 ; R5["Icon"] := R6
	102	[560]	FORLOOP  	R1 97 ; R1 += R3; if R1 <= R2 then begin PC := 97; R4 := R1 end
	103	[564]	RETURN   	R0 2 ; return R0 
	104	[565]	RETURN   	R0 1 ; return 

function #7 <?:567,621> (298 instructions, 1192 bytes at 0000025274EDD050)
7 params, 23 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[569]	GETGLOBAL	R7 K0 ; R7 := 0x603636ad
	2	[569]	LOADK    	R8 K1 ; R8 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
	3	[569]	OP_LOADBOOL	R9 0 0 ; R9 := false
	4	[569]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	5	[570]	GETGLOBAL	R8 K0 ; R8 := 0x603636ad
	6	[570]	LOADK    	R9 K2 ; R9 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
	7	[570]	OP_LOADBOOL	R10 0 0 ; R10 := false
	8	[570]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	9	[571]	GETGLOBAL	R9 K0 ; R9 := 0x603636ad
	10	[571]	LOADK    	R10 K3 ; R10 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
	11	[571]	OP_LOADBOOL	R11 0 0 ; R11 := false
	12	[571]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	13	[572]	GETGLOBAL	R10 K0 ; R10 := 0x603636ad
	14	[572]	LOADK    	R11 K4 ; R11 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
	15	[572]	OP_LOADBOOL	R12 0 0 ; R12 := false
	16	[572]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	17	[573]	TEST     	R5 0 ; if not R5 then PC := 260
	18	[573]	JMP      	260 ; PC := 260
	19	[574]	EQ       	1 R5 K5 ; if R5 == "Compact" then PC := 25
	20	[574]	JMP      	25 ; PC := 25
	21	[574]	EQ       	1 R5 K6 ; if R5 == "CompactTwoMax" then PC := 25
	22	[574]	JMP      	25 ; PC := 25
	23	[574]	EQ       	0 R5 K7 ; if R5 ~= "CompactOne" then PC := 164
	24	[574]	JMP      	164 ; PC := 164
	25	[575]	LT       	0 K8 R1 ; if 0.000000 >= R1 then PC := 76
	26	[575]	JMP      	76 ; PC := 76
	27	[576]	EQ       	0 R5 K6 ; if R5 ~= "CompactTwoMax" then PC := 43
	28	[576]	JMP      	43 ; PC := 43
	29	[577]	MOVE     	R11 R6 ; R11 := R6
	30	[577]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	31	[577]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	32	[577]	LOADK    	R13 K11 ; R13 := "%d"
	33	[577]	MOVE     	R14 R7 ; R14 := R7
	34	[577]	LOADK    	R15 K12 ; R15 := " %d"
	35	[577]	MOVE     	R16 R8 ; R16 := R8
	36	[577]	CONCAT   	R13 R13 R16 ; R13 := R13 .. R14 .. R15 .. R16
	37	[577]	MOVE     	R14 R1 ; R14 := R1
	38	[577]	MOVE     	R15 R2 ; R15 := R2
	39	[577]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	40	[577]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	41	[577]	RETURN   	R11 2 ; return R11 
	42	[577]	JMP      	298 ; PC := 298
	43	[578]	EQ       	0 R5 K7 ; if R5 ~= "CompactOne" then PC := 56
	44	[578]	JMP      	56 ; PC := 56
	45	[579]	MOVE     	R11 R6 ; R11 := R6
	46	[579]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	47	[579]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	48	[579]	LOADK    	R13 K11 ; R13 := "%d"
	49	[579]	MOVE     	R14 R7 ; R14 := R7
	50	[579]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	51	[579]	MOVE     	R14 R1 ; R14 := R1
	52	[579]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	53	[579]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	54	[579]	RETURN   	R11 2 ; return R11 
	55	[579]	JMP      	298 ; PC := 298
	56	[581]	MOVE     	R11 R6 ; R11 := R6
	57	[581]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	58	[581]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	59	[581]	LOADK    	R13 K11 ; R13 := "%d"
	60	[581]	MOVE     	R14 R7 ; R14 := R7
	61	[581]	LOADK    	R15 K12 ; R15 := " %d"
	62	[581]	MOVE     	R16 R8 ; R16 := R8
	63	[581]	LOADK    	R17 K12 ; R17 := " %d"
	64	[581]	MOVE     	R18 R9 ; R18 := R9
	65	[581]	LOADK    	R19 K12 ; R19 := " %d"
	66	[581]	MOVE     	R20 R10 ; R20 := R10
	67	[581]	CONCAT   	R13 R13 R20 ; R13 := R13 .. R14 .. R15 .. R16 .. R17 .. R18 .. R19 .. R20
	68	[581]	MOVE     	R14 R1 ; R14 := R1
	69	[581]	MOVE     	R15 R2 ; R15 := R2
	70	[581]	MOVE     	R16 R3 ; R16 := R3
	71	[581]	MOVE     	R17 R4 ; R17 := R4
	72	[581]	CALL     	R12 6 2 ; R12 := R12(R13,R14,R15,R16,R17)
	73	[581]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	74	[581]	RETURN   	R11 2 ; return R11 
	75	[582]	JMP      	298 ; PC := 298
	76	[583]	LT       	0 K8 R2 ; if 0.000000 >= R2 then PC := 124
	77	[583]	JMP      	124 ; PC := 124
	78	[584]	EQ       	0 R5 K6 ; if R5 ~= "CompactTwoMax" then PC := 94
	79	[584]	JMP      	94 ; PC := 94
	80	[585]	MOVE     	R11 R6 ; R11 := R6
	81	[585]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	82	[585]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	83	[585]	LOADK    	R13 K11 ; R13 := "%d"
	84	[585]	MOVE     	R14 R8 ; R14 := R8
	85	[585]	LOADK    	R15 K12 ; R15 := " %d"
	86	[585]	MOVE     	R16 R9 ; R16 := R9
	87	[585]	CONCAT   	R13 R13 R16 ; R13 := R13 .. R14 .. R15 .. R16
	88	[585]	MOVE     	R14 R2 ; R14 := R2
	89	[585]	MOVE     	R15 R3 ; R15 := R3
	90	[585]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	91	[585]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	92	[585]	RETURN   	R11 2 ; return R11 
	93	[585]	JMP      	298 ; PC := 298
	94	[586]	EQ       	0 R5 K7 ; if R5 ~= "CompactOne" then PC := 107
	95	[586]	JMP      	107 ; PC := 107
	96	[587]	MOVE     	R11 R6 ; R11 := R6
	97	[587]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	98	[587]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	99	[587]	LOADK    	R13 K11 ; R13 := "%d"
	100	[587]	MOVE     	R14 R8 ; R14 := R8
	101	[587]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	102	[587]	MOVE     	R14 R2 ; R14 := R2
	103	[587]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	104	[587]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	105	[587]	RETURN   	R11 2 ; return R11 
	106	[587]	JMP      	298 ; PC := 298
	107	[589]	MOVE     	R11 R6 ; R11 := R6
	108	[589]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	109	[589]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	110	[589]	LOADK    	R13 K11 ; R13 := "%d"
	111	[589]	MOVE     	R14 R8 ; R14 := R8
	112	[589]	LOADK    	R15 K12 ; R15 := " %d"
	113	[589]	MOVE     	R16 R9 ; R16 := R9
	114	[589]	LOADK    	R17 K12 ; R17 := " %d"
	115	[589]	MOVE     	R18 R10 ; R18 := R10
	116	[589]	CONCAT   	R13 R13 R18 ; R13 := R13 .. R14 .. R15 .. R16 .. R17 .. R18
	117	[589]	MOVE     	R14 R2 ; R14 := R2
	118	[589]	MOVE     	R15 R3 ; R15 := R3
	119	[589]	MOVE     	R16 R4 ; R16 := R4
	120	[589]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	121	[589]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	122	[589]	RETURN   	R11 2 ; return R11 
	123	[590]	JMP      	298 ; PC := 298
	124	[591]	LT       	0 K8 R3 ; if 0.000000 >= R3 then PC := 153
	125	[591]	JMP      	153 ; PC := 153
	126	[592]	EQ       	0 R5 K7 ; if R5 ~= "CompactOne" then PC := 139
	127	[592]	JMP      	139 ; PC := 139
	128	[593]	MOVE     	R11 R6 ; R11 := R6
	129	[593]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	130	[593]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	131	[593]	LOADK    	R13 K11 ; R13 := "%d"
	132	[593]	MOVE     	R14 R9 ; R14 := R9
	133	[593]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	134	[593]	MOVE     	R14 R3 ; R14 := R3
	135	[593]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	136	[593]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	137	[593]	RETURN   	R11 2 ; return R11 
	138	[593]	JMP      	298 ; PC := 298
	139	[595]	MOVE     	R11 R6 ; R11 := R6
	140	[595]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	141	[595]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	142	[595]	LOADK    	R13 K11 ; R13 := "%d"
	143	[595]	MOVE     	R14 R9 ; R14 := R9
	144	[595]	LOADK    	R15 K12 ; R15 := " %d"
	145	[595]	MOVE     	R16 R10 ; R16 := R10
	146	[595]	CONCAT   	R13 R13 R16 ; R13 := R13 .. R14 .. R15 .. R16
	147	[595]	MOVE     	R14 R3 ; R14 := R3
	148	[595]	MOVE     	R15 R4 ; R15 := R4
	149	[595]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	150	[595]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	151	[595]	RETURN   	R11 2 ; return R11 
	152	[596]	JMP      	298 ; PC := 298
	153	[598]	MOVE     	R11 R6 ; R11 := R6
	154	[598]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	155	[598]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	156	[598]	LOADK    	R13 K11 ; R13 := "%d"
	157	[598]	MOVE     	R14 R10 ; R14 := R10
	158	[598]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	159	[598]	MOVE     	R14 R4 ; R14 := R4
	160	[598]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	161	[598]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	162	[598]	RETURN   	R11 2 ; return R11 
	163	[599]	JMP      	298 ; PC := 298
	164	[600]	EQ       	0 R5 K13 ; if R5 ~= "HoursOrMinutes" then PC := 193
	165	[600]	JMP      	193 ; PC := 193
	166	[600]	EQ       	0 R1 K8 ; if R1 ~= 0.000000 then PC := 193
	167	[600]	JMP      	193 ; PC := 193
	168	[600]	EQ       	0 R2 K8 ; if R2 ~= 0.000000 then PC := 193
	169	[600]	JMP      	193 ; PC := 193
	170	[601]	GETUPVAL 	R11 U0 ; R11 := U0
	171	[601]	GETTABLE 	R11 R11 K14 ; R11 := R11[0x06d055f9]
	172	[601]	LT       	1 K15 R3 ; if 1.000000 < R3 then PC := 175
	173	[601]	JMP      	175 ; PC := 175
	174	[601]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 175
	175	[601]	OP_LOADBOOL	R12 1 0 ; R12 := true
	176	[601]	LOADK    	R13 K16 ; R13 := "/Lotus/Language/Menu/TimeFormat_Minutes"
	177	[601]	LOADK    	R14 K17 ; R14 := "/Lotus/Language/Menu/TimeFormat_Minute"
	178	[601]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	179	[602]	MOVE     	R12 R6 ; R12 := R6
	180	[602]	GETGLOBAL	R13 K0 ; R13 := 0x603636ad
	181	[602]	MOVE     	R14 R11 ; R14 := R11
	182	[602]	NEWTABLE 	R15 0 1 ; R15 := {}
	183	[602]	GETGLOBAL	R16 K9 ; R16 := 0x7f5022cf
	184	[602]	GETTABLE 	R16 R16 K10 ; R16 := R16[0xe8072ded]
	185	[602]	LOADK    	R17 K11 ; R17 := "%d"
	186	[602]	MOVE     	R18 R3 ; R18 := R3
	187	[602]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	188	[602]	SETTABLE 	R15 K18 R16 ; R15["TIME"] := R16
	189	[602]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	190	[602]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	191	[602]	RETURN   	R12 2 ; return R12 
	192	[602]	JMP      	298 ; PC := 298
	193	[603]	EQ       	0 R5 K19 ; if R5 ~= "CompactHours" then PC := 234
	194	[603]	JMP      	234 ; PC := 234
	195	[604]	MUL      	R12 R1 K20 ; R12 := R1 * 24.000000
	196	[604]	ADD      	R2 R12 R2 ; R2 := R12 + R2
	197	[605]	LT       	0 K8 R2 ; if 0.000000 >= R2 then PC := 210
	198	[605]	JMP      	210 ; PC := 210
	199	[606]	MOVE     	R12 R6 ; R12 := R6
	200	[606]	GETGLOBAL	R13 K9 ; R13 := 0x7f5022cf
	201	[606]	GETTABLE 	R13 R13 K10 ; R13 := R13[0xe8072ded]
	202	[606]	LOADK    	R14 K21 ; R14 := "%d "
	203	[606]	MOVE     	R15 R8 ; R15 := R8
	204	[606]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	205	[606]	MOVE     	R15 R2 ; R15 := R2
	206	[606]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	207	[606]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	208	[606]	RETURN   	R12 2 ; return R12 
	209	[606]	JMP      	298 ; PC := 298
	210	[607]	LT       	0 K8 R3 ; if 0.000000 >= R3 then PC := 223
	211	[607]	JMP      	223 ; PC := 223
	212	[608]	MOVE     	R12 R6 ; R12 := R6
	213	[608]	GETGLOBAL	R13 K9 ; R13 := 0x7f5022cf
	214	[608]	GETTABLE 	R13 R13 K10 ; R13 := R13[0xe8072ded]
	215	[608]	LOADK    	R14 K21 ; R14 := "%d "
	216	[608]	MOVE     	R15 R9 ; R15 := R9
	217	[608]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	218	[608]	MOVE     	R15 R3 ; R15 := R3
	219	[608]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	220	[608]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	221	[608]	RETURN   	R12 2 ; return R12 
	222	[608]	JMP      	298 ; PC := 298
	223	[610]	MOVE     	R12 R6 ; R12 := R6
	224	[610]	GETGLOBAL	R13 K9 ; R13 := 0x7f5022cf
	225	[610]	GETTABLE 	R13 R13 K10 ; R13 := R13[0xe8072ded]
	226	[610]	LOADK    	R14 K21 ; R14 := "%d "
	227	[610]	MOVE     	R15 R10 ; R15 := R10
	228	[610]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	229	[610]	MOVE     	R15 R4 ; R15 := R4
	230	[610]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	231	[610]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	232	[610]	RETURN   	R12 2 ; return R12 
	233	[611]	JMP      	298 ; PC := 298
	234	[613]	GETUPVAL 	R12 U0 ; R12 := U0
	235	[613]	GETTABLE 	R12 R12 K14 ; R12 := R12[0x06d055f9]
	236	[613]	LT       	1 K15 R2 ; if 1.000000 < R2 then PC := 241
	237	[613]	JMP      	241 ; PC := 241
	238	[613]	LT       	1 K8 R1 ; if 0.000000 < R1 then PC := 241
	239	[613]	JMP      	241 ; PC := 241
	240	[613]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 241
	241	[613]	OP_LOADBOOL	R13 1 0 ; R13 := true
	242	[613]	LOADK    	R14 K22 ; R14 := "/Lotus/Language/Menu/TimeFormat_Hours"
	243	[613]	LOADK    	R15 K23 ; R15 := "/Lotus/Language/Menu/TimeFormat_Hour"
	244	[613]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	245	[614]	MOVE     	R13 R6 ; R13 := R6
	246	[614]	GETGLOBAL	R14 K0 ; R14 := 0x603636ad
	247	[614]	MOVE     	R15 R12 ; R15 := R12
	248	[614]	NEWTABLE 	R16 0 1 ; R16 := {}
	249	[614]	GETGLOBAL	R17 K9 ; R17 := 0x7f5022cf
	250	[614]	GETTABLE 	R17 R17 K10 ; R17 := R17[0xe8072ded]
	251	[614]	LOADK    	R18 K11 ; R18 := "%d"
	252	[614]	MUL      	R19 R1 K20 ; R19 := R1 * 24.000000
	253	[614]	ADD      	R19 R19 R2 ; R19 := R19 + R2
	254	[614]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	255	[614]	SETTABLE 	R16 K18 R17 ; R16["TIME"] := R17
	256	[614]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	257	[614]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	258	[614]	RETURN   	R13 2 ; return R13 
	259	[615]	JMP      	298 ; PC := 298
	260	[616]	LT       	0 K8 R1 ; if 0.000000 >= R1 then PC := 282
	261	[616]	JMP      	282 ; PC := 282
	262	[617]	MOVE     	R13 R6 ; R13 := R6
	263	[617]	GETGLOBAL	R14 K9 ; R14 := 0x7f5022cf
	264	[617]	GETTABLE 	R14 R14 K10 ; R14 := R14[0xe8072ded]
	265	[617]	LOADK    	R15 K11 ; R15 := "%d"
	266	[617]	MOVE     	R16 R7 ; R16 := R7
	267	[617]	LOADK    	R17 K12 ; R17 := " %d"
	268	[617]	MOVE     	R18 R8 ; R18 := R8
	269	[617]	LOADK    	R19 K12 ; R19 := " %d"
	270	[617]	MOVE     	R20 R9 ; R20 := R9
	271	[617]	LOADK    	R21 K12 ; R21 := " %d"
	272	[617]	MOVE     	R22 R10 ; R22 := R10
	273	[617]	CONCAT   	R15 R15 R22 ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20 .. R21 .. R22
	274	[617]	MOVE     	R16 R1 ; R16 := R1
	275	[617]	MOVE     	R17 R2 ; R17 := R2
	276	[617]	MOVE     	R18 R3 ; R18 := R3
	277	[617]	MOVE     	R19 R4 ; R19 := R4
	278	[617]	CALL     	R14 6 2 ; R14 := R14(R15,R16,R17,R18,R19)
	279	[617]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	280	[617]	RETURN   	R13 2 ; return R13 
	281	[617]	JMP      	298 ; PC := 298
	282	[619]	MOVE     	R13 R6 ; R13 := R6
	283	[619]	GETGLOBAL	R14 K9 ; R14 := 0x7f5022cf
	284	[619]	GETTABLE 	R14 R14 K10 ; R14 := R14[0xe8072ded]
	285	[619]	LOADK    	R15 K11 ; R15 := "%d"
	286	[619]	MOVE     	R16 R8 ; R16 := R8
	287	[619]	LOADK    	R17 K12 ; R17 := " %d"
	288	[619]	MOVE     	R18 R9 ; R18 := R9
	289	[619]	LOADK    	R19 K12 ; R19 := " %d"
	290	[619]	MOVE     	R20 R10 ; R20 := R10
	291	[619]	CONCAT   	R15 R15 R20 ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20
	292	[619]	MOVE     	R16 R2 ; R16 := R2
	293	[619]	MOVE     	R17 R3 ; R17 := R3
	294	[619]	MOVE     	R18 R4 ; R18 := R4
	295	[619]	CALL     	R14 5 2 ; R14 := R14(R15,R16,R17,R18)
	296	[619]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	297	[619]	RETURN   	R13 2 ; return R13 
	298	[621]	RETURN   	R0 1 ; return 

function #8 <?:623,636> (27 instructions, 108 bytes at 0000025274EDE0A0)
1 param, 12 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[624]	LOADK    	R1 := 60.000000
	2	[625]	LOADK    	R2 := 3600.000000
	3	[626]	LOADK    	R3 := 86400.000000
	4	[628]	GETGLOBAL	R4 K0 ; R4 := 0x5bced4c4
	5	[628]	GETTABLE 	R4 R4 K1 ; R4 := R4[0x55f27c30]
	6	[628]	DIV      	R5 R0 R3 ; R5 := R0 / R3
	7	[628]	CALL     	R4 2 2 ; R4 := R4(R5)
	8	[629]	MUL      	R5 R4 R3 ; R5 := R4 * R3
	9	[629]	SUB      	R0 R0 R5 ; R0 := R0 - R5
	10	[630]	GETGLOBAL	R5 K0 ; R5 := 0x5bced4c4
	11	[630]	GETTABLE 	R5 R5 K1 ; R5 := R5[0x55f27c30]
	12	[630]	DIV      	R6 R0 R2 ; R6 := R0 / R2
	13	[630]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[631]	MUL      	R6 R5 R2 ; R6 := R5 * R2
	15	[631]	SUB      	R0 R0 R6 ; R0 := R0 - R6
	16	[632]	GETGLOBAL	R6 K0 ; R6 := 0x5bced4c4
	17	[632]	GETTABLE 	R6 R6 K1 ; R6 := R6[0x55f27c30]
	18	[632]	DIV      	R7 R0 R1 ; R7 := R0 / R1
	19	[632]	CALL     	R6 2 2 ; R6 := R6(R7)
	20	[633]	MUL      	R7 R6 R1 ; R7 := R6 * R1
	21	[633]	SUB      	R7 R0 R7 ; R7 := R0 - R7
	22	[635]	MOVE     	R8 R4 ; R8 := R4
	23	[635]	MOVE     	R9 R5 ; R9 := R5
	24	[635]	MOVE     	R10 R6 ; R10 := R6
	25	[635]	MOVE     	R11 R7 ; R11 := R7
	26	[635]	RETURN   	R8 5 ; return R8, R9, R10, R11 
	27	[636]	RETURN   	R0 1 ; return 

function #9 <?:638,640> (5 instructions, 20 bytes at 0000025274EDE260)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[639]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[639]	MOVE     	R2 R0 ; R2 := R0
	3	[639]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[639]	RETURN   	R1 0 ; return R1,... 
	5	[640]	RETURN   	R0 1 ; return 

function #10 <?:642,651> (19 instructions, 76 bytes at 0000025274EDE350)
3 params, 16 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[643]	LOADK    	R3 K0 ; R3 := ""
	2	[644]	LT       	0 R1 K1 ; if R1 >= 0.000000 then PC := 6
	3	[644]	JMP      	6 ; PC := 6
	4	[645]	UNM      	R1 R1 ; R1 := ^ R1
	5	[646]	LOADK    	R3 K2 ; R3 := "-"
	6	[649]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[649]	MOVE     	R5 R1 ; R5 := R1
	8	[649]	CALL     	R4 2 5 ; R4,R5,R6,R7 := R4(R5)
	9	[650]	GETUPVAL 	R8 U1 ; R8 := U1
	10	[650]	MOVE     	R9 R0 ; R9 := R0
	11	[650]	MOVE     	R10 R4 ; R10 := R4
	12	[650]	MOVE     	R11 R5 ; R11 := R5
	13	[650]	MOVE     	R12 R6 ; R12 := R6
	14	[650]	MOVE     	R13 R7 ; R13 := R7
	15	[650]	MOVE     	R14 R2 ; R14 := R2
	16	[650]	MOVE     	R15 R3 ; R15 := R3
	17	[650]	TAILCALL 	R8 8 0 ; R8,... := R8(R9,R10,R11,R12,R13,R14,R15)
	18	[650]	RETURN   	R8 0 ; return R8,... 
	19	[651]	RETURN   	R0 1 ; return 

function #11 <?:653,655> (7 instructions, 28 bytes at 0000025274EDE4E0)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[654]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[654]	MOVE     	R4 R0 ; R4 := R0
	3	[654]	MOVE     	R5 R1 ; R5 := R1
	4	[654]	MOVE     	R6 R2 ; R6 := R2
	5	[654]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	6	[654]	RETURN   	R3 2 ; return R3 
	7	[655]	RETURN   	R0 1 ; return 

function #12 <?:657,687> (103 instructions, 412 bytes at 0000025274EDE5D0)
3 params, 18 slots, 2 upvalues, 0 locals, 16 constants, 0 functions
	1	[658]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	2	[658]	LOADK    	R4 K1 ; R4 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
	3	[658]	OP_LOADBOOL	R5 0 0 ; R5 := false
	4	[658]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	5	[659]	GETGLOBAL	R4 K0 ; R4 := 0x603636ad
	6	[659]	LOADK    	R5 K2 ; R5 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
	7	[659]	OP_LOADBOOL	R6 0 0 ; R6 := false
	8	[659]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	9	[660]	GETGLOBAL	R5 K0 ; R5 := 0x603636ad
	10	[660]	LOADK    	R6 K3 ; R6 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
	11	[660]	OP_LOADBOOL	R7 0 0 ; R7 := false
	12	[660]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	13	[661]	GETGLOBAL	R6 K0 ; R6 := 0x603636ad
	14	[661]	LOADK    	R7 K4 ; R7 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
	15	[661]	OP_LOADBOOL	R8 0 0 ; R8 := false
	16	[661]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	17	[663]	LOADK    	R7 K5 ; R7 := ""
	18	[664]	LT       	0 R0 K6 ; if R0 >= 0.000000 then PC := 22
	19	[664]	JMP      	22 ; PC := 22
	20	[665]	UNM      	R0 R0 ; R0 := ^ R0
	21	[666]	LOADK    	R7 K7 ; R7 := "-"
	22	[669]	GETUPVAL 	R8 U0 ; R8 := U0
	23	[669]	MOVE     	R9 R0 ; R9 := R0
	24	[669]	CALL     	R8 2 5 ; R8,R9,R10,R11 := R8(R9)
	25	[670]	LOADK    	R12 K5 ; R12 := ""
	26	[671]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	27	[671]	GETTABLE 	R13 R13 K9 ; R13 := R13[0xe4a5b3ca]
	28	[671]	MOVE     	R14 R8 ; R14 := R8
	29	[671]	CALL     	R13 2 2 ; R13 := R13(R14)
	30	[671]	LT       	0 K6 R13 ; if 0.000000 >= R13 then PC := 43
	31	[671]	JMP      	43 ; PC := 43
	32	[672]	MOVE     	R13 R8 ; R13 := R8
	33	[672]	MOVE     	R14 R3 ; R14 := R3
	34	[672]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	35	[673]	EQ       	1 R1 K10 ; if R1 == false then PC := 99
	36	[673]	JMP      	99 ; PC := 99
	37	[674]	MOVE     	R13 R12 ; R13 := R12
	38	[674]	LOADK    	R14 K11 ; R14 := " "
	39	[674]	MOVE     	R15 R9 ; R15 := R9
	40	[674]	MOVE     	R16 R4 ; R16 := R4
	41	[674]	CONCAT   	R12 R13 R16 ; R12 := R13 .. R14 .. R15 .. R16
	42	[675]	JMP      	99 ; PC := 99
	43	[676]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	44	[676]	GETTABLE 	R13 R13 K9 ; R13 := R13[0xe4a5b3ca]
	45	[676]	MOVE     	R14 R9 ; R14 := R9
	46	[676]	CALL     	R13 2 2 ; R13 := R13(R14)
	47	[676]	LT       	0 K6 R13 ; if 0.000000 >= R13 then PC := 70
	48	[676]	JMP      	70 ; PC := 70
	49	[677]	MOVE     	R13 R9 ; R13 := R9
	50	[677]	MOVE     	R14 R4 ; R14 := R4
	51	[677]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	52	[678]	TEST     	R2 0 ; if not R2 then PC := 99
	53	[678]	JMP      	99 ; PC := 99
	54	[678]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	55	[678]	GETTABLE 	R13 R13 K9 ; R13 := R13[0xe4a5b3ca]
	56	[678]	MOVE     	R14 R10 ; R14 := R10
	57	[678]	CALL     	R13 2 2 ; R13 := R13(R14)
	58	[678]	LT       	0 K6 R13 ; if 0.000000 >= R13 then PC := 99
	59	[678]	JMP      	99 ; PC := 99
	60	[679]	MOVE     	R13 R12 ; R13 := R12
	61	[679]	LOADK    	R14 K11 ; R14 := " "
	62	[679]	GETGLOBAL	R15 K8 ; R15 := 0x5bced4c4
	63	[679]	GETTABLE 	R15 R15 K12 ; R15 := R15[0xac1b386a]
	64	[679]	ADD      	R16 R10 K13 ; R16 := R10 + 1.000000
	65	[679]	LOADK    	R17 := 59.000000
	66	[679]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	67	[679]	MOVE     	R16 R5 ; R16 := R5
	68	[679]	CONCAT   	R12 R13 R16 ; R12 := R13 .. R14 .. R15 .. R16
	69	[680]	JMP      	99 ; PC := 99
	70	[681]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	71	[681]	GETTABLE 	R13 R13 K9 ; R13 := R13[0xe4a5b3ca]
	72	[681]	MOVE     	R14 R10 ; R14 := R10
	73	[681]	CALL     	R13 2 2 ; R13 := R13(R14)
	74	[681]	LT       	0 K6 R13 ; if 0.000000 >= R13 then PC := 93
	75	[681]	JMP      	93 ; PC := 93
	76	[682]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	77	[682]	GETTABLE 	R13 R13 K12 ; R13 := R13[0xac1b386a]
	78	[682]	GETUPVAL 	R14 U1 ; R14 := U1
	79	[682]	GETTABLE 	R14 R14 K14 ; R14 := R14[0x06d055f9]
	80	[682]	EQ       	1 R11 K6 ; if R11 == 0.000000 then PC := 83
	81	[682]	JMP      	83 ; PC := 83
	82	[682]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 83
	83	[682]	OP_LOADBOOL	R15 1 0 ; R15 := true
	84	[682]	LOADK    	R16 := 0.000000
	85	[682]	LOADK    	R17 := 1.000000
	86	[682]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	87	[682]	ADD      	R14 R10 R14 ; R14 := R10 + R14
	88	[682]	LOADK    	R15 := 59.000000
	89	[682]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	90	[682]	MOVE     	R14 R5 ; R14 := R5
	91	[682]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	92	[682]	JMP      	99 ; PC := 99
	93	[684]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	94	[684]	GETTABLE 	R13 R13 K15 ; R13 := R13[0x99675e23]
	95	[684]	MOVE     	R14 R0 ; R14 := R0
	96	[684]	CALL     	R13 2 2 ; R13 := R13(R14)
	97	[684]	MOVE     	R14 R6 ; R14 := R6
	98	[684]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	99	[686]	MOVE     	R13 R7 ; R13 := R7
	100	[686]	MOVE     	R14 R12 ; R14 := R12
	101	[686]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	102	[686]	RETURN   	R13 2 ; return R13 
	103	[687]	RETURN   	R0 1 ; return 

function #13 <?:689,711> (74 instructions, 296 bytes at 0000025274EDEAD0)
1 param, 19 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[690]	GETGLOBAL	R1 K0 ; R1 := 0x603636ad
	2	[690]	LOADK    	R2 K1 ; R2 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
	3	[690]	OP_LOADBOOL	R3 0 0 ; R3 := false
	4	[690]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[691]	GETGLOBAL	R2 K0 ; R2 := 0x603636ad
	6	[691]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
	7	[691]	OP_LOADBOOL	R4 0 0 ; R4 := false
	8	[691]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	9	[692]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	10	[692]	LOADK    	R4 K3 ; R4 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
	11	[692]	OP_LOADBOOL	R5 0 0 ; R5 := false
	12	[692]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	13	[693]	GETGLOBAL	R4 K0 ; R4 := 0x603636ad
	14	[693]	LOADK    	R5 K4 ; R5 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
	15	[693]	OP_LOADBOOL	R6 0 0 ; R6 := false
	16	[693]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	17	[695]	LOADK    	R5 K5 ; R5 := ""
	18	[696]	LT       	0 R0 K6 ; if R0 >= 0.000000 then PC := 22
	19	[696]	JMP      	22 ; PC := 22
	20	[697]	UNM      	R0 R0 ; R0 := ^ R0
	21	[698]	LOADK    	R5 K7 ; R5 := "-"
	22	[701]	GETUPVAL 	R6 U0 ; R6 := U0
	23	[701]	MOVE     	R7 R0 ; R7 := R0
	24	[701]	CALL     	R6 2 5 ; R6,R7,R8,R9 := R6(R7)
	25	[702]	LOADK    	R10 K5 ; R10 := ""
	26	[703]	GETGLOBAL	R11 K8 ; R11 := 0x5bced4c4
	27	[703]	GETTABLE 	R11 R11 K9 ; R11 := R11[0xe4a5b3ca]
	28	[703]	MOVE     	R12 R6 ; R12 := R6
	29	[703]	CALL     	R11 2 2 ; R11 := R11(R12)
	30	[703]	LT       	0 K6 R11 ; if 0.000000 >= R11 then PC := 36
	31	[703]	JMP      	36 ; PC := 36
	32	[704]	MOVE     	R11 R6 ; R11 := R6
	33	[704]	MOVE     	R12 R1 ; R12 := R1
	34	[704]	CONCAT   	R10 R11 R12 ; R10 := R11 .. R12
	35	[704]	JMP      	70 ; PC := 70
	36	[705]	GETGLOBAL	R11 K8 ; R11 := 0x5bced4c4
	37	[705]	GETTABLE 	R11 R11 K9 ; R11 := R11[0xe4a5b3ca]
	38	[705]	MOVE     	R12 R7 ; R12 := R7
	39	[705]	CALL     	R11 2 2 ; R11 := R11(R12)
	40	[705]	LT       	0 K6 R11 ; if 0.000000 >= R11 then PC := 55
	41	[705]	JMP      	55 ; PC := 55
	42	[706]	MOVE     	R11 R7 ; R11 := R7
	43	[706]	MOVE     	R12 R2 ; R12 := R2
	44	[706]	LOADK    	R13 K10 ; R13 := " "
	45	[706]	MOVE     	R14 R8 ; R14 := R8
	46	[706]	MOVE     	R15 R3 ; R15 := R3
	47	[706]	LOADK    	R16 K10 ; R16 := " "
	48	[706]	GETGLOBAL	R17 K8 ; R17 := 0x5bced4c4
	49	[706]	GETTABLE 	R17 R17 K11 ; R17 := R17[0x55f27c30]
	50	[706]	ADD      	R18 R9 K12 ; R18 := R9 + 0.500000
	51	[706]	CALL     	R17 2 2 ; R17 := R17(R18)
	52	[706]	MOVE     	R18 R4 ; R18 := R4
	53	[706]	CONCAT   	R10 R11 R18 ; R10 := R11 .. R12 .. R13 .. R14 .. R15 .. R16 .. R17 .. R18
	54	[706]	JMP      	70 ; PC := 70
	55	[707]	GETGLOBAL	R11 K8 ; R11 := 0x5bced4c4
	56	[707]	GETTABLE 	R11 R11 K9 ; R11 := R11[0xe4a5b3ca]
	57	[707]	MOVE     	R12 R8 ; R12 := R8
	58	[707]	CALL     	R11 2 2 ; R11 := R11(R12)
	59	[707]	LE       	0 K6 R11 ; if 0.000000 > R11 then PC := 70
	60	[707]	JMP      	70 ; PC := 70
	61	[708]	MOVE     	R11 R8 ; R11 := R8
	62	[708]	MOVE     	R12 R3 ; R12 := R3
	63	[708]	LOADK    	R13 K10 ; R13 := " "
	64	[708]	GETGLOBAL	R14 K8 ; R14 := 0x5bced4c4
	65	[708]	GETTABLE 	R14 R14 K11 ; R14 := R14[0x55f27c30]
	66	[708]	ADD      	R15 R9 K12 ; R15 := R9 + 0.500000
	67	[708]	CALL     	R14 2 2 ; R14 := R14(R15)
	68	[708]	MOVE     	R15 R4 ; R15 := R4
	69	[708]	CONCAT   	R10 R11 R15 ; R10 := R11 .. R12 .. R13 .. R14 .. R15
	70	[710]	MOVE     	R11 R5 ; R11 := R5
	71	[710]	MOVE     	R12 R10 ; R12 := R10
	72	[710]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	73	[710]	RETURN   	R11 2 ; return R11 
	74	[711]	RETURN   	R0 1 ; return 

function #14 <?:713,715> (5 instructions, 20 bytes at 0000025274EDEEC0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[714]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[714]	MOVE     	R2 R0 ; R2 := R0
	3	[714]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[714]	RETURN   	R1 0 ; return R1,... 
	5	[715]	RETURN   	R0 1 ; return 

function #15 <?:717,745> (72 instructions, 288 bytes at 0000025274EDEFB0)
2 params, 16 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[718]	GETGLOBAL	R2 K0 ; R2 := 0x603636ad
	2	[718]	LOADK    	R3 K1 ; R3 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
	3	[718]	OP_LOADBOOL	R4 0 0 ; R4 := false
	4	[718]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	5	[719]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	6	[719]	LOADK    	R4 K2 ; R4 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
	7	[719]	OP_LOADBOOL	R5 0 0 ; R5 := false
	8	[719]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	9	[720]	GETGLOBAL	R4 K0 ; R4 := 0x603636ad
	10	[720]	LOADK    	R5 K3 ; R5 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
	11	[720]	OP_LOADBOOL	R6 0 0 ; R6 := false
	12	[720]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	13	[721]	GETGLOBAL	R5 K0 ; R5 := 0x603636ad
	14	[721]	LOADK    	R6 K4 ; R6 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
	15	[721]	OP_LOADBOOL	R7 0 0 ; R7 := false
	16	[721]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	17	[723]	LOADK    	R6 K5 ; R6 := ""
	18	[724]	LT       	0 R0 K6 ; if R0 >= 0.000000 then PC := 22
	19	[724]	JMP      	22 ; PC := 22
	20	[725]	UNM      	R0 R0 ; R0 := ^ R0
	21	[726]	LOADK    	R6 K7 ; R6 := "-"
	22	[729]	GETUPVAL 	R7 U0 ; R7 := U0
	23	[729]	MOVE     	R8 R0 ; R8 := R0
	24	[729]	CALL     	R7 2 5 ; R7,R8,R9,R10 := R7(R8)
	25	[730]	LOADK    	R11 K5 ; R11 := ""
	26	[731]	GETGLOBAL	R12 K8 ; R12 := 0x5bced4c4
	27	[731]	GETTABLE 	R12 R12 K9 ; R12 := R12[0xe4a5b3ca]
	28	[731]	MOVE     	R13 R7 ; R13 := R7
	29	[731]	CALL     	R12 2 2 ; R12 := R12(R13)
	30	[731]	LT       	0 K6 R12 ; if 0.000000 >= R12 then PC := 36
	31	[731]	JMP      	36 ; PC := 36
	32	[732]	MOVE     	R12 R7 ; R12 := R7
	33	[732]	MOVE     	R13 R2 ; R13 := R2
	34	[732]	LOADK    	R14 K10 ; R14 := " "
	35	[732]	CONCAT   	R11 R12 R14 ; R11 := R12 .. R13 .. R14
	36	[734]	GETGLOBAL	R12 K8 ; R12 := 0x5bced4c4
	37	[734]	GETTABLE 	R12 R12 K9 ; R12 := R12[0xe4a5b3ca]
	38	[734]	MOVE     	R13 R8 ; R13 := R8
	39	[734]	CALL     	R12 2 2 ; R12 := R12(R13)
	40	[734]	LT       	0 K6 R12 ; if 0.000000 >= R12 then PC := 47
	41	[734]	JMP      	47 ; PC := 47
	42	[735]	MOVE     	R12 R11 ; R12 := R11
	43	[735]	MOVE     	R13 R8 ; R13 := R8
	44	[735]	MOVE     	R14 R3 ; R14 := R3
	45	[735]	LOADK    	R15 K10 ; R15 := " "
	46	[735]	CONCAT   	R11 R12 R15 ; R11 := R12 .. R13 .. R14 .. R15
	47	[737]	GETGLOBAL	R12 K8 ; R12 := 0x5bced4c4
	48	[737]	GETTABLE 	R12 R12 K9 ; R12 := R12[0xe4a5b3ca]
	49	[737]	MOVE     	R13 R9 ; R13 := R9
	50	[737]	CALL     	R12 2 2 ; R12 := R12(R13)
	51	[737]	LE       	0 K6 R12 ; if 0.000000 > R12 then PC := 58
	52	[737]	JMP      	58 ; PC := 58
	53	[738]	MOVE     	R12 R11 ; R12 := R11
	54	[738]	MOVE     	R13 R9 ; R13 := R9
	55	[738]	MOVE     	R14 R4 ; R14 := R4
	56	[738]	LOADK    	R15 K10 ; R15 := " "
	57	[738]	CONCAT   	R11 R12 R15 ; R11 := R12 .. R13 .. R14 .. R15
	58	[740]	MOVE     	R12 R11 ; R12 := R11
	59	[740]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	60	[740]	GETTABLE 	R13 R13 K11 ; R13 := R13[0x55f27c30]
	61	[740]	ADD      	R14 R10 K12 ; R14 := R10 + 0.500000
	62	[740]	CALL     	R13 2 2 ; R13 := R13(R14)
	63	[740]	MOVE     	R14 R5 ; R14 := R5
	64	[740]	CONCAT   	R11 R12 R14 ; R11 := R12 .. R13 .. R14
	65	[741]	LT       	0 R7 K6 ; if R7 >= 0.000000 then PC := 68
	66	[741]	JMP      	68 ; PC := 68
	67	[742]	LOADK    	R11 K13 ; R11 := "-1"
	68	[744]	MOVE     	R12 R6 ; R12 := R6
	69	[744]	MOVE     	R13 R11 ; R13 := R11
	70	[744]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	71	[744]	RETURN   	R12 2 ; return R12 
	72	[745]	RETURN   	R0 1 ; return 

function #16 <?:747,749> (5 instructions, 20 bytes at 0000025274EDF3C0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[748]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[748]	MOVE     	R2 R0 ; R2 := R0
	3	[748]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[748]	RETURN   	R1 0 ; return R1,... 
	5	[749]	RETURN   	R0 1 ; return 

function #17 <?:751,767> (35 instructions, 140 bytes at 0000025274EDF4B0)
3 params, 7 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[752]	MOVE     	R3 R1 ; R3 := R1
	2	[753]	SELF     	R4 R0 K0 ; R5 := R0; R4 := R0[0xeeba5cd2]
	3	[753]	MOVE     	R6 R1 ; R6 := R1
	4	[753]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	5	[753]	TEST     	R4 1 ; if R4 then PC := 10
	6	[753]	JMP      	10 ; PC := 10
	7	[754]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0xbb610e5b]
	8	[754]	CALL     	R4 2 2 ; R4 := R4(R5)
	9	[754]	MOVE     	R3 R4 ; R3 := R4
	10	[758]	TEST     	R2 1 ; if R2 then PC := 34
	11	[758]	JMP      	34 ; PC := 34
	12	[758]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	13	[758]	MOVE     	R5 R3 ; R5 := R3
	14	[758]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[758]	TEST     	R4 1 ; if R4 then PC := 34
	16	[758]	JMP      	34 ; PC := 34
	17	[758]	SELF     	R4 R3 K3 ; R5 := R3; R4 := R3[0xf2deaf69]
	18	[758]	GETUPVAL 	R6 U0 ; R6 := U0
	19	[758]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	20	[758]	TEST     	R4 0 ; if not R4 then PC := 34
	21	[758]	JMP      	34 ; PC := 34
	22	[759]	SELF     	R4 R0 K4 ; R5 := R0; R4 := R0[0xa534c3ac]
	23	[759]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[761]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	25	[761]	MOVE     	R6 R4 ; R6 := R4
	26	[761]	CALL     	R5 2 2 ; R5 := R5(R6)
	27	[761]	TEST     	R5 1 ; if R5 then PC := 34
	28	[761]	JMP      	34 ; PC := 34
	29	[761]	SELF     	R5 R4 K5 ; R6 := R4; R5 := R4[0x73901acf]
	30	[761]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[761]	TEST     	R5 0 ; if not R5 then PC := 34
	32	[761]	JMP      	34 ; PC := 34
	33	[762]	RETURN   	R4 2 ; return R4 
	34	[766]	RETURN   	R3 2 ; return R3 
	35	[767]	RETURN   	R0 1 ; return 

function #18 <?:769,784> (34 instructions, 136 bytes at 0000025274EDF6F0)
0 params, 4 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[770]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[770]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	3	[770]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[770]	TEST     	R0 1 ; if R0 then PC := 11
	5	[770]	JMP      	11 ; PC := 11
	6	[770]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[770]	GETGLOBAL	R1 K2 ; R1 := 0x83f4e77c
	8	[770]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[770]	TEST     	R0 0 ; if not R0 then PC := 13
	10	[770]	JMP      	13 ; PC := 13
	11	[771]	LOADNIL  	R0 R0 ; R0 := nil
	12	[771]	RETURN   	R0 2 ; return R0 
	13	[774]	GETGLOBAL	R0 K1 ; R0 := 0x89326c93
	14	[774]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xfb64e76c]
	15	[774]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[775]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	17	[775]	MOVE     	R2 R0 ; R2 := R0
	18	[775]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[775]	TEST     	R1 0 ; if not R1 then PC := 23
	20	[775]	JMP      	23 ; PC := 23
	21	[776]	LOADNIL  	R1 R1 ; R1 := nil
	22	[776]	RETURN   	R1 2 ; return R1 
	23	[779]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xa534c3ac]
	24	[779]	CALL     	R1 2 2 ; R1 := R1(R2)
	25	[780]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	26	[780]	MOVE     	R3 R1 ; R3 := R1
	27	[780]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[780]	TEST     	R2 0 ; if not R2 then PC := 33
	29	[780]	JMP      	33 ; PC := 33
	30	[781]	SELF     	R2 R0 K5 ; R3 := R0; R2 := R0[0xbb610e5b]
	31	[781]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[781]	MOVE     	R1 R2 ; R1 := R2
	33	[783]	RETURN   	R1 2 ; return R1 
	34	[784]	RETURN   	R0 1 ; return 

function #19 <?:786,788> (4 instructions, 16 bytes at 0000025274EDF930)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[787]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[787]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[787]	RETURN   	R0 0 ; return R0,... 
	4	[788]	RETURN   	R0 1 ; return 

function #20 <?:790,798> (15 instructions, 60 bytes at 0000025274EDFA00)
0 params, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[791]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[791]	CALL     	R0 1 2 ; R0 := R0()
	3	[792]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	4	[792]	MOVE     	R2 R0 ; R2 := R0
	5	[792]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[792]	TEST     	R1 1 ; if R1 then PC := 13
	7	[792]	JMP      	13 ; PC := 13
	8	[793]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xde321e6f]
	9	[793]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[793]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x2676deee]
	11	[793]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[794]	RETURN   	R1 2 ; return R1 
	13	[797]	LOADNIL  	R2 R2 ; R2 := nil
	14	[797]	RETURN   	R2 2 ; return R2 
	15	[798]	RETURN   	R0 1 ; return 

function #21 <?:800,802> (4 instructions, 16 bytes at 0000025274EDFB70)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[801]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[801]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[801]	RETURN   	R0 0 ; return R0,... 
	4	[802]	RETURN   	R0 1 ; return 

function #22 <?:804,816> (25 instructions, 100 bytes at 0000025274EDFC40)
0 params, 5 slots, 3 upvalues, 0 locals, 8 constants, 0 functions
	1	[805]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[806]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[808]	GETGLOBAL	R2 K0 ; R2 := _T
	4	[808]	GETTABLE 	R2 R2 K1 ; R2 := R2["ToolTipUpdateColors"]
	5	[808]	EQ       	1 R2 K2 ; if R2 == nil then PC := 16
	6	[808]	JMP      	16 ; PC := 16
	7	[809]	GETGLOBAL	R2 K0 ; R2 := _T
	8	[809]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xcb478cb8]
	9	[809]	CALL     	R2 1 1 ; R2()
	10	[811]	GETGLOBAL	R2 K0 ; R2 := _T
	11	[811]	GETTABLE 	R2 R2 K4 ; R2 := R2["ToolTipColors"]
	12	[811]	GETTABLE 	R0 R2 K5 ; R0 := R2["Title"]
	13	[812]	GETGLOBAL	R2 K0 ; R2 := _T
	14	[812]	GETTABLE 	R2 R2 K4 ; R2 := R2["ToolTipColors"]
	15	[812]	GETTABLE 	R1 R2 K6 ; R1 := R2["Content"]
	16	[815]	GETUPVAL 	R2 U2 ; R2 := U2
	17	[815]	GETTABLE 	R2 R2 K7 ; R2 := R2[0x9f57dd7d]
	18	[815]	MOVE     	R3 R0 ; R3 := R0
	19	[815]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[815]	GETUPVAL 	R3 U2 ; R3 := U2
	21	[815]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x9f57dd7d]
	22	[815]	MOVE     	R4 R1 ; R4 := R1
	23	[815]	CALL     	R3 2 0 ; R3,... := R3(R4)
	24	[815]	RETURN   	R2 0 ; return R2,... 
	25	[816]	RETURN   	R0 1 ; return 

function #23 <?:819,883> (140 instructions, 560 bytes at 0000025274EDFEE0)
7 params, 23 slots, 2 upvalues, 0 locals, 24 constants, 0 functions
	1	[820]	LOADK    	R7 K0 ; R7 := ""
	2	[821]	OP_LOADBOOL	R8 1 0 ; R8 := true
	3	[823]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	4	[823]	MOVE     	R10 R4 ; R10 := R4
	5	[823]	CALL     	R9 2 2 ; R9 := R9(R10)
	6	[823]	TEST     	R9 0 ; if not R9 then PC := 10
	7	[823]	JMP      	10 ; PC := 10
	8	[824]	NEWTABLE 	R9 0 0 ; R9 := {}
	9	[824]	MOVE     	R4 R9 ; R4 := R9
	10	[827]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	11	[827]	GETTABLE 	R10 R4 K2 ; R10 := R4["endLineTag"]
	12	[827]	CALL     	R9 2 2 ; R9 := R9(R10)
	13	[827]	TEST     	R9 1 ; if R9 then PC := 16
	14	[827]	JMP      	16 ; PC := 16
	15	[828]	GETTABLE 	R7 R4 K2 ; R7 := R4["endLineTag"]
	16	[830]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	17	[830]	GETTABLE 	R10 R4 K3 ; R10 := R4["includeParagraphTag"]
	18	[830]	CALL     	R9 2 2 ; R9 := R9(R10)
	19	[830]	TEST     	R9 1 ; if R9 then PC := 22
	20	[830]	JMP      	22 ; PC := 22
	21	[831]	GETTABLE 	R8 R4 K3 ; R8 := R4["includeParagraphTag"]
	22	[834]	GETUPVAL 	R9 U0 ; R9 := U0
	23	[834]	CALL     	R9 1 3 ; R9,R10 := R9()
	24	[835]	EQ       	0 R5 K4 ; if R5 ~= nil then PC := 27
	25	[835]	JMP      	27 ; PC := 27
	26	[836]	MOVE     	R5 R9 ; R5 := R9
	27	[838]	EQ       	0 R6 K4 ; if R6 ~= nil then PC := 30
	28	[838]	JMP      	30 ; PC := 30
	29	[839]	MOVE     	R6 R10 ; R6 := R10
	30	[842]	EQ       	1 R2 K4 ; if R2 == nil then PC := 36
	31	[842]	JMP      	36 ; PC := 36
	32	[843]	GETUPVAL 	R11 U1 ; R11 := U1
	33	[843]	GETTABLE 	R12 R2 K5 ; R12 := R2["rarity"]
	34	[843]	ADD      	R12 R12 K6 ; R12 := R12 + 1.000000
	35	[843]	GETTABLE 	R5 R11 R12 ; R5 := R11[R12]
	36	[846]	LOADK    	R11 K7 ; R11 := "<br>"
	37	[847]	LOADK    	R12 K0 ; R12 := ""
	38	[848]	TEST     	R8 0 ; if not R8 then PC := 43
	39	[848]	JMP      	43 ; PC := 43
	40	[849]	MOVE     	R13 R12 ; R13 := R12
	41	[849]	LOADK    	R14 K8 ; R14 := "<p>"
	42	[849]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	43	[851]	MOVE     	R13 R12 ; R13 := R12
	44	[851]	LOADK    	R14 K9 ; R14 := "<font color=\""
	45	[851]	MOVE     	R15 R5 ; R15 := R5
	46	[851]	LOADK    	R16 K10 ; R16 := "\">"
	47	[851]	CONCAT   	R12 R13 R16 ; R12 := R13 .. R14 .. R15 .. R16
	48	[852]	EQ       	1 R2 K4 ; if R2 == nil then PC := 54
	49	[852]	JMP      	54 ; PC := 54
	50	[853]	MOVE     	R13 R12 ; R13 := R12
	51	[853]	GETTABLE 	R14 R2 K11 ; R14 := R2["localizedTitle"]
	52	[853]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	53	[853]	JMP      	77 ; PC := 77
	54	[854]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	55	[854]	MOVE     	R14 R1 ; R14 := R1
	56	[854]	CALL     	R13 2 2 ; R13 := R13(R14)
	57	[854]	TEST     	R13 1 ; if R13 then PC := 77
	58	[854]	JMP      	77 ; PC := 77
	59	[855]	GETGLOBAL	R13 K12 ; R13 := 0x603636ad
	60	[855]	GETGLOBAL	R14 K13 ; R14 := 0x64fb1586
	61	[855]	SELF     	R15 R1 K14 ; R16 := R1; R15 := R1[0xd3a9d01f]
	62	[855]	CALL     	R15 2 0 ; R15,... := R15(R16)
	63	[855]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	64	[855]	OP_LOADBOOL	R15 0 0 ; R15 := false
	65	[855]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	66	[856]	GETTABLE 	R14 R4 K15 ; R14 := R4["Upper"]
	67	[856]	TEST     	R14 0 ; if not R14 then PC := 74
	68	[856]	JMP      	74 ; PC := 74
	69	[857]	GETGLOBAL	R14 K16 ; R14 := 0x7f5022cf
	70	[857]	GETTABLE 	R14 R14 K17 ; R14 := R14[0x3f3e4d12]
	71	[857]	MOVE     	R15 R13 ; R15 := R13
	72	[857]	CALL     	R14 2 2 ; R14 := R14(R15)
	73	[857]	MOVE     	R13 R14 ; R13 := R14
	74	[859]	MOVE     	R14 R12 ; R14 := R12
	75	[859]	MOVE     	R15 R13 ; R15 := R13
	76	[859]	CONCAT   	R12 R14 R15 ; R12 := R14 .. R15
	77	[861]	MOVE     	R14 R12 ; R14 := R12
	78	[861]	MOVE     	R15 R11 ; R15 := R11
	79	[861]	LOADK    	R16 K18 ; R16 := "</font>"
	80	[861]	CONCAT   	R12 R14 R16 ; R12 := R14 .. R15 .. R16
	81	[863]	MOVE     	R14 R12 ; R14 := R12
	82	[863]	LOADK    	R15 K9 ; R15 := "<font color=\""
	83	[863]	MOVE     	R16 R6 ; R16 := R6
	84	[863]	LOADK    	R17 K10 ; R17 := "\">"
	85	[863]	CONCAT   	R12 R14 R17 ; R12 := R14 .. R15 .. R16 .. R17
	86	[864]	EQ       	1 R2 K4 ; if R2 == nil then PC := 117
	87	[864]	JMP      	117 ; PC := 117
	88	[865]	MOVE     	R14 R12 ; R14 := R12
	89	[865]	GETTABLE 	R15 R2 K19 ; R15 := R2["localizedDescription"]
	90	[865]	CONCAT   	R12 R14 R15 ; R12 := R14 .. R15
	91	[866]	GETTABLE 	R14 R2 K20 ; R14 := R2["affixes"]
	92	[866]	EQ       	1 R14 K4 ; if R14 == nil then PC := 131
	93	[866]	JMP      	131 ; PC := 131
	94	[867]	LOADK    	R14 := 1.000000
	95	[867]	GETTABLE 	R15 R2 K20 ; R15 := R2["affixes"]
	96	[867]	LEN      	R15 R15 ; R15 := # R15
	97	[867]	LOADK    	R16 := 1.000000
	98	[867]	FORPREP  	R14 115 ; R14 -= R16; PC := 115
	99	[868]	MOVE     	R18 R12 ; R18 := R12
	100	[868]	MOVE     	R19 R11 ; R19 := R11
	101	[868]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	102	[869]	MOVE     	R18 R12 ; R18 := R12
	103	[869]	LOADK    	R19 K21 ; R19 := "<font color=\"#FFFFFF\">"
	104	[869]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	105	[870]	MOVE     	R18 R12 ; R18 := R12
	106	[870]	GETTABLE 	R19 R2 K20 ; R19 := R2["affixes"]
	107	[870]	GETTABLE 	R19 R19 R17 ; R19 := R19[R17]
	108	[870]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	109	[871]	MOVE     	R18 R12 ; R18 := R12
	110	[871]	LOADK    	R19 K18 ; R19 := "</font>"
	111	[871]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	112	[872]	MOVE     	R18 R12 ; R18 := R12
	113	[872]	MOVE     	R19 R7 ; R19 := R7
	114	[872]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	115	[867]	FORLOOP  	R14 99 ; R14 += R16; if R14 <= R15 then begin PC := 99; R17 := R14 end
	116	[874]	JMP      	131 ; PC := 131
	117	[875]	GETGLOBAL	R18 K1 ; R18 := 0x7b998233
	118	[875]	MOVE     	R19 R1 ; R19 := R1
	119	[875]	CALL     	R18 2 2 ; R18 := R18(R19)
	120	[875]	TEST     	R18 1 ; if R18 then PC := 131
	121	[875]	JMP      	131 ; PC := 131
	122	[876]	MOVE     	R18 R12 ; R18 := R12
	123	[876]	GETGLOBAL	R19 K12 ; R19 := 0x603636ad
	124	[876]	GETGLOBAL	R20 K13 ; R20 := 0x64fb1586
	125	[876]	SELF     	R21 R1 K22 ; R22 := R1; R21 := R1[0x5ba460ac]
	126	[876]	CALL     	R21 2 0 ; R21,... := R21(R22)
	127	[876]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	128	[876]	OP_LOADBOOL	R21 0 0 ; R21 := false
	129	[876]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	130	[876]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	131	[878]	MOVE     	R18 R12 ; R18 := R12
	132	[878]	LOADK    	R19 K18 ; R19 := "</font>"
	133	[878]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	134	[879]	TEST     	R8 0 ; if not R8 then PC := 139
	135	[879]	JMP      	139 ; PC := 139
	136	[880]	MOVE     	R18 R12 ; R18 := R12
	137	[880]	LOADK    	R19 K23 ; R19 := "</p>"
	138	[880]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	139	[882]	RETURN   	R12 2 ; return R12 
	140	[883]	RETURN   	R0 1 ; return 

function #24 <?:885,887> (11 instructions, 44 bytes at 0000025274EE0750)
7 params, 15 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[886]	GETUPVAL 	R7 U0 ; R7 := U0
	2	[886]	MOVE     	R8 R0 ; R8 := R0
	3	[886]	MOVE     	R9 R1 ; R9 := R1
	4	[886]	MOVE     	R10 R2 ; R10 := R2
	5	[886]	MOVE     	R11 R3 ; R11 := R3
	6	[886]	MOVE     	R12 R4 ; R12 := R4
	7	[886]	MOVE     	R13 R5 ; R13 := R5
	8	[886]	MOVE     	R14 R6 ; R14 := R6
	9	[886]	TAILCALL 	R7 8 0 ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
	10	[886]	RETURN   	R7 0 ; return R7,... 
	11	[887]	RETURN   	R0 1 ; return 

function #25 <?:889,895> (9 instructions, 36 bytes at 0000025274EE0860)
1 param, 4 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[890]	LOADK    	R1 K0 ; R1 := 16777215.000000
	2	[891]	EQ       	1 R0 K1 ; if R0 == nil then PC := 8
	3	[891]	JMP      	8 ; PC := 8
	4	[892]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[892]	GETTABLE 	R3 R0 K2 ; R3 := R0["rarity"]
	6	[892]	ADD      	R3 R3 K3 ; R3 := R3 + 1.000000
	7	[892]	GETTABLE 	R1 R2 R3 ; R1 := R2[R3]
	8	[894]	RETURN   	R1 2 ; return R1 
	9	[895]	RETURN   	R0 1 ; return 

function #26 <?:899,909> (30 instructions, 120 bytes at 0000025274EE09C0)
5 params, 9 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[900]	GETGLOBAL	R5 K0 ; R5 := _T
	2	[900]	TEST     	R1 0 ; if not R1 then PC := 11
	3	[900]	JMP      	11 ; PC := 11
	4	[900]	GETGLOBAL	R6 K2 ; R6 := 0x7f5022cf
	5	[900]	GETTABLE 	R6 R6 K3 ; R6 := R6[0xe8072ded]
	6	[900]	LOADK    	R7 K4 ; R7 := "0x%08X"
	7	[900]	MOVE     	R8 R1 ; R8 := R1
	8	[900]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	9	[900]	TEST     	R6 1 ; if R6 then PC := 12
	10	[900]	JMP      	12 ; PC := 12
	11	[900]	LOADNIL  	R6 R6 ; R6 := nil
	12	[900]	SETTABLE 	R5 K1 R6 ; R5["ColorPickerCurrentColor"] := R6
	13	[901]	GETGLOBAL	R5 K0 ; R5 := _T
	14	[901]	SETTABLE 	R5 K5 R2 ; R5["ColorPickerCallback"] := R2
	15	[902]	GETGLOBAL	R5 K0 ; R5 := _T
	16	[902]	SETTABLE 	R5 K6 R3 ; R5[0x06d055f9] := R3
	17	[903]	GETGLOBAL	R5 K0 ; R5 := _T
	18	[903]	SETTABLE 	R5 K7 R4 ; R5["ColorPickerSpecificColorsInfo"] := R4
	19	[904]	GETGLOBAL	R5 K0 ; R5 := _T
	20	[904]	GETTABLE 	R5 R5 K8 ; R5 := R5["InSimulacrum"]
	21	[904]	TEST     	R5 0 ; if not R5 then PC := 25
	22	[904]	JMP      	25 ; PC := 25
	23	[906]	GETGLOBAL	R5 K0 ; R5 := _T
	24	[906]	SETTABLE 	R5 K9 K10 ; R5["ColorPickerUseCustomBg"] := true
	25	[908]	SELF     	R5 R0 K11 ; R6 := R0; R5 := R0[0x1fd6abd0]
	26	[908]	GETGLOBAL	R7 K12 ; R7 := 0x0032441c
	27	[908]	GETTABLE 	R7 R7 K13 ; R7 := R7["UIMovie_ColorPicker"]
	28	[908]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	29	[908]	RETURN   	R5 2 ; return R5 
	30	[909]	RETURN   	R0 1 ; return 

function #27 <?:911,1131> (628 instructions, 2512 bytes at 0000025274EE0E70)
4 params, 30 slots, 3 upvalues, 0 locals, 83 constants, 0 functions
	1	[914]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	2	[914]	MOVE     	R6 R1 ; R6 := R1
	3	[914]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[914]	TEST     	R5 0 ; if not R5 then PC := 9
	5	[914]	JMP      	9 ; PC := 9
	6	[915]	GETUPVAL 	R5 U0 ; R5 := U0
	7	[915]	CALL     	R5 1 2 ; R5 := R5()
	8	[915]	MOVE     	R1 R5 ; R1 := R5
	9	[917]	GETGLOBAL	R5 K1 ; R5 := _T
	10	[917]	GETTABLE 	R5 R5 K2 ; R5 := R5["mSpecialSuitMode"]
	11	[917]	TEST     	R5 0 ; if not R5 then PC := 16
	12	[917]	JMP      	16 ; PC := 16
	13	[918]	GETGLOBAL	R5 K1 ; R5 := _T
	14	[918]	GETTABLE 	R4 R5 K3 ; R4 := R5["SpecialSuitAvatar"]
	15	[918]	JMP      	55 ; PC := 55
	16	[919]	GETGLOBAL	R5 K1 ; R5 := _T
	17	[919]	GETTABLE 	R5 R5 K4 ; R5 := R5["mSentinelMode"]
	18	[919]	TEST     	R5 0 ; if not R5 then PC := 54
	19	[919]	JMP      	54 ; PC := 54
	20	[920]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	21	[920]	MOVE     	R6 R1 ; R6 := R1
	22	[920]	CALL     	R5 2 2 ; R5 := R5(R6)
	23	[920]	TEST     	R5 1 ; if R5 then PC := 55
	24	[920]	JMP      	55 ; PC := 55
	25	[921]	SELF     	R5 R1 K5 ; R6 := R1; R5 := R1[0xf2deaf69]
	26	[921]	GETGLOBAL	R7 K6 ; R7 := gLotusSentinelAvatarType
	27	[921]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	28	[921]	TEST     	R5 0 ; if not R5 then PC := 32
	29	[921]	JMP      	32 ; PC := 32
	30	[922]	MOVE     	R4 R1 ; R4 := R1
	31	[922]	JMP      	55 ; PC := 55
	32	[924]	SELF     	R5 R1 K7 ; R6 := R1; R5 := R1[0xde321e6f]
	33	[924]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[924]	SELF     	R5 R5 K8 ; R6 := R5; R5 := R5[0x2676deee]
	35	[924]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[924]	MOVE     	R4 R5 ; R4 := R5
	37	[925]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	38	[925]	MOVE     	R6 R4 ; R6 := R4
	39	[925]	CALL     	R5 2 2 ; R5 := R5(R6)
	40	[925]	TEST     	R5 0 ; if not R5 then PC := 55
	41	[925]	JMP      	55 ; PC := 55
	42	[926]	GETGLOBAL	R5 K9 ; R5 := 0xbe190284
	43	[926]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0xf2deaf69]
	44	[926]	GETGLOBAL	R7 K10 ; R7 := gLotusAttractModeGameRulesType
	45	[926]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	46	[926]	TEST     	R5 0 ; if not R5 then PC := 55
	47	[926]	JMP      	55 ; PC := 55
	48	[927]	GETGLOBAL	R5 K9 ; R5 := 0xbe190284
	49	[927]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x7cf8123f]
	50	[927]	LOADK    	R7 := 3.000000
	51	[927]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	52	[927]	MOVE     	R4 R5 ; R4 := R5
	53	[931]	JMP      	55 ; PC := 55
	54	[933]	MOVE     	R4 R1 ; R4 := R1
	55	[936]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	56	[936]	MOVE     	R6 R4 ; R6 := R4
	57	[936]	CALL     	R5 2 2 ; R5 := R5(R6)
	58	[936]	TEST     	R5 0 ; if not R5 then PC := 61
	59	[936]	JMP      	61 ; PC := 61
	60	[937]	RETURN   	R0 1 ; return 
	61	[940]	GETGLOBAL	R5 K1 ; R5 := _T
	62	[940]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	63	[940]	EQ       	0 R5 K14 ; if R5 ~= nil then PC := 82
	64	[940]	JMP      	82 ; PC := 82
	65	[941]	GETGLOBAL	R5 K1 ; R5 := _T
	66	[941]	NEWTABLE 	R6 0 0 ; R6 := {}
	67	[941]	SETTABLE 	R5 K13 R6 ; R5["suitTable"] := R6
	68	[942]	GETGLOBAL	R5 K1 ; R5 := _T
	69	[942]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	70	[942]	SETTABLE 	R5 K15 K16 ; R5["desiredRot"] := -90.000000
	71	[943]	GETGLOBAL	R5 K1 ; R5 := _T
	72	[943]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	73	[943]	GETGLOBAL	R6 K1 ; R6 := _T
	74	[943]	GETTABLE 	R6 R6 K13 ; R6 := R6["suitTable"]
	75	[943]	GETTABLE 	R6 R6 K15 ; R6 := R6["desiredRot"]
	76	[943]	SETTABLE 	R5 K17 R6 ; R5["lerpRot"] := R6
	77	[944]	GETGLOBAL	R5 K1 ; R5 := _T
	78	[944]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	79	[944]	GETGLOBAL	R6 K19 ; R6 := 0x00046924
	80	[944]	CALL     	R6 1 2 ; R6 := R6()
	81	[944]	SETTABLE 	R5 K18 R6 ; R5["lerpHead"] := R6
	82	[947]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	83	[947]	GETGLOBAL	R6 K1 ; R6 := _T
	84	[947]	GETTABLE 	R6 R6 K13 ; R6 := R6["suitTable"]
	85	[947]	GETTABLE 	R6 R6 K17 ; R6 := R6["lerpRot"]
	86	[947]	CALL     	R5 2 2 ; R5 := R5(R6)
	87	[947]	TEST     	R5 0 ; if not R5 then PC := 92
	88	[947]	JMP      	92 ; PC := 92
	89	[948]	GETGLOBAL	R5 K1 ; R5 := _T
	90	[948]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	91	[948]	SETTABLE 	R5 K17 K20 ; R5["lerpRot"] := 0.000000
	92	[950]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	93	[950]	GETGLOBAL	R6 K1 ; R6 := _T
	94	[950]	GETTABLE 	R6 R6 K13 ; R6 := R6["suitTable"]
	95	[950]	GETTABLE 	R6 R6 K15 ; R6 := R6["desiredRot"]
	96	[950]	CALL     	R5 2 2 ; R5 := R5(R6)
	97	[950]	TEST     	R5 0 ; if not R5 then PC := 102
	98	[950]	JMP      	102 ; PC := 102
	99	[951]	GETGLOBAL	R5 K1 ; R5 := _T
	100	[951]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	101	[951]	SETTABLE 	R5 K15 K16 ; R5["desiredRot"] := -90.000000
	102	[953]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	103	[953]	GETGLOBAL	R6 K1 ; R6 := _T
	104	[953]	GETTABLE 	R6 R6 K13 ; R6 := R6["suitTable"]
	105	[953]	GETTABLE 	R6 R6 K18 ; R6 := R6["lerpHead"]
	106	[953]	CALL     	R5 2 2 ; R5 := R5(R6)
	107	[953]	TEST     	R5 0 ; if not R5 then PC := 114
	108	[953]	JMP      	114 ; PC := 114
	109	[954]	GETGLOBAL	R5 K1 ; R5 := _T
	110	[954]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	111	[954]	GETGLOBAL	R6 K19 ; R6 := 0x00046924
	112	[954]	CALL     	R6 1 2 ; R6 := R6()
	113	[954]	SETTABLE 	R5 K18 R6 ; R5["lerpHead"] := R6
	114	[957]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	115	[957]	MOVE     	R6 R0 ; R6 := R0
	116	[957]	CALL     	R5 2 2 ; R5 := R5(R6)
	117	[957]	TEST     	R5 1 ; if R5 then PC := 124
	118	[957]	JMP      	124 ; PC := 124
	119	[957]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	120	[957]	MOVE     	R6 R4 ; R6 := R4
	121	[957]	CALL     	R5 2 2 ; R5 := R5(R6)
	122	[957]	TEST     	R5 0 ; if not R5 then PC := 125
	123	[957]	JMP      	125 ; PC := 125
	124	[958]	RETURN   	R0 1 ; return 
	125	[961]	SELF     	R5 R0 K21 ; R6 := R0; R5 := R0[0xd4cc05b4]
	126	[961]	CALL     	R5 2 2 ; R5 := R5(R6)
	127	[961]	TEST     	R5 1 ; if R5 then PC := 130
	128	[961]	JMP      	130 ; PC := 130
	129	[962]	RETURN   	R0 1 ; return 
	130	[965]	SELF     	R5 R0 K22 ; R6 := R0; R5 := R0[0x91a24e4b]
	131	[965]	LOADK    	R7 K23 ; R7 := "_root"
	132	[965]	LOADK    	R8 := 25.000000
	133	[965]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	134	[966]	SELF     	R6 R0 K22 ; R7 := R0; R6 := R0[0x91a24e4b]
	135	[966]	LOADK    	R8 K23 ; R8 := "_root"
	136	[966]	LOADK    	R9 := 26.000000
	137	[966]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	138	[968]	GETGLOBAL	R7 K24 ; R7 := 0x34291f5c
	139	[968]	GETTABLE 	R7 R7 K25 ; R7 := R7[0x1467d5f4]
	140	[968]	CALL     	R7 1 2 ; R7 := R7()
	141	[973]	EQ       	0 R5 K26 ; if R5 ~= -1000.000000 then PC := 161
	142	[973]	JMP      	161 ; PC := 161
	143	[973]	EQ       	0 R6 K26 ; if R6 ~= -1000.000000 then PC := 161
	144	[973]	JMP      	161 ; PC := 161
	145	[974]	GETGLOBAL	R8 K1 ; R8 := _T
	146	[974]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	147	[974]	GETTABLE 	R5 R8 K27 ; R5 := R8["lastMX"]
	148	[975]	GETGLOBAL	R8 K1 ; R8 := _T
	149	[975]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	150	[975]	GETTABLE 	R6 R8 K28 ; R6 := R8["lastMY"]
	151	[979]	EQ       	1 R5 K14 ; if R5 == nil then PC := 155
	152	[979]	JMP      	155 ; PC := 155
	153	[979]	EQ       	0 R6 K14 ; if R6 ~= nil then PC := 157
	154	[979]	JMP      	157 ; PC := 157
	155	[980]	LOADK    	R5 := 0.000000
	156	[981]	LOADK    	R6 := 0.000000
	157	[984]	GETGLOBAL	R8 K1 ; R8 := _T
	158	[984]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	159	[984]	SETTABLE 	R8 K29 K30 ; R8["mouseOffScreen"] := true
	160	[984]	JMP      	177 ; PC := 177
	161	[985]	GETGLOBAL	R8 K1 ; R8 := _T
	162	[985]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	163	[985]	GETTABLE 	R8 R8 K29 ; R8 := R8["mouseOffScreen"]
	164	[985]	TEST     	R8 0 ; if not R8 then PC := 177
	165	[985]	JMP      	177 ; PC := 177
	166	[986]	TEST     	R7 1 ; if R7 then PC := 174
	167	[986]	JMP      	174 ; PC := 174
	168	[987]	GETGLOBAL	R8 K1 ; R8 := _T
	169	[987]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	170	[987]	SETTABLE 	R8 K27 R5 ; R8["lastMX"] := R5
	171	[988]	GETGLOBAL	R8 K1 ; R8 := _T
	172	[988]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	173	[988]	SETTABLE 	R8 K28 R6 ; R8["lastMY"] := R6
	174	[991]	GETGLOBAL	R8 K1 ; R8 := _T
	175	[991]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	176	[991]	SETTABLE 	R8 K29 K31 ; R8["mouseOffScreen"] := false
	177	[994]	SELF     	R8 R0 K32 ; R9 := R0; R8 := R0[0x5b638cce]
	178	[994]	LOADK    	R10 K23 ; R10 := "_root"
	179	[994]	LOADK    	R11 K33 ; R11 := "suitRotationX"
	180	[994]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	181	[995]	TEST     	R7 1 ; if R7 then PC := 185
	182	[995]	JMP      	185 ; PC := 185
	183	[995]	TEST     	R3 0 ; if not R3 then PC := 208
	184	[995]	JMP      	208 ; PC := 208
	185	[995]	TEST     	R2 0 ; if not R2 then PC := 208
	186	[995]	JMP      	208 ; PC := 208
	187	[995]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	188	[995]	MOVE     	R10 R8 ; R10 := R8
	189	[995]	CALL     	R9 2 2 ; R9 := R9(R10)
	190	[995]	TEST     	R9 1 ; if R9 then PC := 208
	191	[995]	JMP      	208 ; PC := 208
	192	[995]	GETGLOBAL	R9 K34 ; R9 := 0x03f57322
	193	[995]	MOVE     	R10 R8 ; R10 := R8
	194	[995]	CALL     	R9 2 2 ; R9 := R9(R10)
	195	[995]	EQ       	1 R9 K14 ; if R9 == nil then PC := 208
	196	[995]	JMP      	208 ; PC := 208
	197	[996]	GETUPVAL 	R9 U1 ; R9 := U1
	198	[996]	GETGLOBAL	R10 K34 ; R10 := 0x03f57322
	199	[996]	MOVE     	R11 R8 ; R11 := R8
	200	[996]	CALL     	R10 2 2 ; R10 := R10(R11)
	201	[996]	MUL      	R10 R10 K35 ; R10 := R10 * 1000.000000
	202	[996]	GETGLOBAL	R11 K36 ; R11 := 0x67652851
	203	[996]	CALL     	R11 1 2 ; R11 := R11()
	204	[996]	MUL      	R10 R10 R11 ; R10 := R10 * R11
	205	[996]	ADD      	R9 R9 R10 ; R9 := R9 + R10
	206	[996]	SETUPVAL 	R9 U1 ; U1 := R9
	207	[997]	GETUPVAL 	R5 U1 ; R5 := U1
	208	[1000]	GETGLOBAL	R9 K1 ; R9 := _T
	209	[1000]	GETTABLE 	R9 R9 K13 ; R9 := R9["suitTable"]
	210	[1000]	GETTABLE 	R9 R9 K37 ; R9 := R9["wasUsingController"]
	211	[1000]	EQ       	1 R9 R7 ; if R9 == R7 then PC := 222
	212	[1000]	JMP      	222 ; PC := 222
	213	[1001]	GETGLOBAL	R9 K1 ; R9 := _T
	214	[1001]	GETTABLE 	R9 R9 K13 ; R9 := R9["suitTable"]
	215	[1001]	SETTABLE 	R9 K37 R7 ; R9["wasUsingController"] := R7
	216	[1002]	GETGLOBAL	R9 K1 ; R9 := _T
	217	[1002]	GETTABLE 	R9 R9 K13 ; R9 := R9["suitTable"]
	218	[1002]	SETTABLE 	R9 K27 R5 ; R9["lastMX"] := R5
	219	[1003]	GETGLOBAL	R9 K1 ; R9 := _T
	220	[1003]	GETTABLE 	R9 R9 K13 ; R9 := R9["suitTable"]
	221	[1003]	SETTABLE 	R9 K28 R6 ; R9["lastMY"] := R6
	222	[1006]	GETUPVAL 	R9 U2 ; R9 := U2
	223	[1006]	GETTABLE 	R9 R9 K38 ; R9 := R9[0x06d055f9]
	224	[1006]	MOVE     	R10 R3 ; R10 := R3
	225	[1006]	LOADK    	R11 K39 ; R11 := ""
	226	[1006]	SELF     	R12 R0 K40 ; R13 := R0; R12 := R0[0xee5aaf3e]
	227	[1006]	CALL     	R12 2 0 ; R12,... := R12(R13)
	228	[1006]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	229	[1007]	EQ       	0 R9 K39 ; if R9 ~= "" then PC := 262
	230	[1007]	JMP      	262 ; PC := 262
	231	[1007]	TEST     	R2 0 ; if not R2 then PC := 262
	232	[1007]	JMP      	262 ; PC := 262
	233	[1008]	GETGLOBAL	R10 K1 ; R10 := _T
	234	[1008]	GETTABLE 	R10 R10 K13 ; R10 := R10["suitTable"]
	235	[1008]	GETTABLE 	R10 R10 K27 ; R10 := R10["lastMX"]
	236	[1008]	EQ       	1 R10 K14 ; if R10 == nil then PC := 250
	237	[1008]	JMP      	250 ; PC := 250
	238	[1009]	GETGLOBAL	R10 K1 ; R10 := _T
	239	[1009]	GETTABLE 	R10 R10 K13 ; R10 := R10["suitTable"]
	240	[1009]	GETGLOBAL	R11 K1 ; R11 := _T
	241	[1009]	GETTABLE 	R11 R11 K13 ; R11 := R11["suitTable"]
	242	[1009]	GETTABLE 	R11 R11 K15 ; R11 := R11["desiredRot"]
	243	[1009]	GETGLOBAL	R12 K1 ; R12 := _T
	244	[1009]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	245	[1009]	GETTABLE 	R12 R12 K27 ; R12 := R12["lastMX"]
	246	[1009]	SUB      	R12 R12 R5 ; R12 := R12 - R5
	247	[1009]	MUL      	R12 R12 K41 ; R12 := R12 * 0.500000
	248	[1009]	ADD      	R11 R11 R12 ; R11 := R11 + R12
	249	[1009]	SETTABLE 	R10 K15 R11 ; R10["desiredRot"] := R11
	250	[1012]	GETGLOBAL	R10 K1 ; R10 := _T
	251	[1012]	GETTABLE 	R10 R10 K13 ; R10 := R10["suitTable"]
	252	[1012]	GETTABLE 	R10 R10 K28 ; R10 := R10["lastMY"]
	253	[1012]	EQ       	1 R10 K14 ; if R10 == nil then PC := 262
	254	[1012]	JMP      	262 ; PC := 262
	255	[1013]	GETGLOBAL	R10 K1 ; R10 := _T
	256	[1013]	GETTABLE 	R10 R10 K13 ; R10 := R10["suitTable"]
	257	[1013]	GETGLOBAL	R11 K1 ; R11 := _T
	258	[1013]	GETTABLE 	R11 R11 K13 ; R11 := R11["suitTable"]
	259	[1013]	GETTABLE 	R11 R11 K28 ; R11 := R11["lastMY"]
	260	[1013]	SUB      	R11 R11 R6 ; R11 := R11 - R6
	261	[1013]	SETTABLE 	R10 K42 R11 ; R10["myDiff"] := R11
	262	[1018]	GETGLOBAL	R10 K1 ; R10 := _T
	263	[1018]	GETTABLE 	R10 R10 K13 ; R10 := R10["suitTable"]
	264	[1018]	GETGLOBAL	R11 K43 ; R11 := 0x9bafffe3
	265	[1018]	GETGLOBAL	R12 K1 ; R12 := _T
	266	[1018]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	267	[1018]	GETTABLE 	R12 R12 K17 ; R12 := R12["lerpRot"]
	268	[1018]	GETGLOBAL	R13 K1 ; R13 := _T
	269	[1018]	GETTABLE 	R13 R13 K13 ; R13 := R13["suitTable"]
	270	[1018]	GETTABLE 	R13 R13 K15 ; R13 := R13["desiredRot"]
	271	[1018]	GETGLOBAL	R14 K36 ; R14 := 0x67652851
	272	[1018]	CALL     	R14 1 2 ; R14 := R14()
	273	[1018]	MUL      	R14 R14 K44 ; R14 := R14 * 4.000000
	274	[1018]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	275	[1018]	SETTABLE 	R10 K17 R11 ; R10["lerpRot"] := R11
	276	[1020]	LOADK    	R10 := 0.000000
	277	[1021]	GETGLOBAL	R11 K1 ; R11 := _T
	278	[1021]	GETTABLE 	R11 R11 K13 ; R11 := R11["suitTable"]
	279	[1021]	GETTABLE 	R11 R11 K17 ; R11 := R11["lerpRot"]
	280	[1021]	GETGLOBAL	R12 K1 ; R12 := _T
	281	[1021]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	282	[1021]	GETTABLE 	R12 R12 K15 ; R12 := R12["desiredRot"]
	283	[1021]	LE       	0 R11 R12 ; if R11 > R12 then PC := 294
	284	[1021]	JMP      	294 ; PC := 294
	285	[1022]	GETGLOBAL	R11 K45 ; R11 := 0x5bced4c4
	286	[1022]	GETTABLE 	R11 R11 K46 ; R11 := R11[0xe4a5b3ca]
	287	[1022]	GETGLOBAL	R12 K1 ; R12 := _T
	288	[1022]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	289	[1022]	GETTABLE 	R12 R12 K17 ; R12 := R12["lerpRot"]
	290	[1022]	MOD      	R12 R12 K47 ; R12 := R12 % 360.000000
	291	[1022]	CALL     	R11 2 2 ; R11 := R11(R12)
	292	[1022]	SUB      	R10 K47 R11 ; R10 := 360.000000 - R11
	293	[1022]	JMP      	302 ; PC := 302
	294	[1024]	GETGLOBAL	R11 K45 ; R11 := 0x5bced4c4
	295	[1024]	GETTABLE 	R11 R11 K46 ; R11 := R11[0xe4a5b3ca]
	296	[1024]	GETGLOBAL	R12 K1 ; R12 := _T
	297	[1024]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	298	[1024]	GETTABLE 	R12 R12 K17 ; R12 := R12["lerpRot"]
	299	[1024]	MOD      	R12 R12 K47 ; R12 := R12 % 360.000000
	300	[1024]	CALL     	R11 2 2 ; R11 := R11(R12)
	301	[1024]	MOVE     	R10 R11 ; R10 := R11
	302	[1026]	GETGLOBAL	R11 K45 ; R11 := 0x5bced4c4
	303	[1026]	GETTABLE 	R11 R11 K46 ; R11 := R11[0xe4a5b3ca]
	304	[1026]	GETGLOBAL	R12 K1 ; R12 := _T
	305	[1026]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	306	[1026]	GETTABLE 	R12 R12 K15 ; R12 := R12["desiredRot"]
	307	[1026]	GETGLOBAL	R13 K1 ; R13 := _T
	308	[1026]	GETTABLE 	R13 R13 K13 ; R13 := R13["suitTable"]
	309	[1026]	GETTABLE 	R13 R13 K17 ; R13 := R13["lerpRot"]
	310	[1026]	SUB      	R12 R12 R13 ; R12 := R12 - R13
	311	[1026]	CALL     	R11 2 2 ; R11 := R11(R12)
	312	[1027]	LT       	0 R11 R10 ; if R11 >= R10 then PC := 328
	313	[1027]	JMP      	328 ; PC := 328
	314	[1028]	GETGLOBAL	R12 K1 ; R12 := _T
	315	[1028]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	316	[1028]	GETGLOBAL	R13 K1 ; R13 := _T
	317	[1028]	GETTABLE 	R13 R13 K13 ; R13 := R13["suitTable"]
	318	[1028]	GETTABLE 	R13 R13 K17 ; R13 := R13["lerpRot"]
	319	[1028]	MOD      	R13 R13 K47 ; R13 := R13 % 360.000000
	320	[1028]	SETTABLE 	R12 K17 R13 ; R12["lerpRot"] := R13
	321	[1029]	GETGLOBAL	R12 K1 ; R12 := _T
	322	[1029]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	323	[1029]	GETGLOBAL	R13 K1 ; R13 := _T
	324	[1029]	GETTABLE 	R13 R13 K13 ; R13 := R13["suitTable"]
	325	[1029]	GETTABLE 	R13 R13 K15 ; R13 := R13["desiredRot"]
	326	[1029]	MOD      	R13 R13 K47 ; R13 := R13 % 360.000000
	327	[1029]	SETTABLE 	R12 K15 R13 ; R12["desiredRot"] := R13
	328	[1032]	GETGLOBAL	R12 K1 ; R12 := _T
	329	[1032]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	330	[1032]	GETTABLE 	R12 R12 K17 ; R12 := R12["lerpRot"]
	331	[1034]	GETGLOBAL	R13 K1 ; R13 := _T
	332	[1034]	GETTABLE 	R13 R13 K4 ; R13 := R13["mSentinelMode"]
	333	[1034]	TEST     	R13 0 ; if not R13 then PC := 343
	334	[1034]	JMP      	343 ; PC := 343
	335	[1034]	GETGLOBAL	R13 K1 ; R13 := _T
	336	[1034]	GETTABLE 	R13 R13 K48 ; R13 := R13["SENTINEL_DEFAULT_ROTATION"]
	337	[1034]	EQ       	1 R13 K14 ; if R13 == nil then PC := 343
	338	[1034]	JMP      	343 ; PC := 343
	339	[1035]	GETGLOBAL	R13 K1 ; R13 := _T
	340	[1035]	GETTABLE 	R13 R13 K48 ; R13 := R13["SENTINEL_DEFAULT_ROTATION"]
	341	[1035]	ADD      	R13 R12 R13 ; R13 := R12 + R13
	342	[1035]	MOD      	R12 R13 K47 ; R12 := R13 % 360.000000
	343	[1039]	MOD      	R12 R12 K47 ; R12 := R12 % 360.000000
	344	[1040]	LE       	0 R12 K49 ; if R12 > -180.000000 then PC := 348
	345	[1040]	JMP      	348 ; PC := 348
	346	[1041]	ADD      	R12 R12 K47 ; R12 := R12 + 360.000000
	347	[1041]	JMP      	351 ; PC := 351
	348	[1042]	LE       	0 K50 R12 ; if 180.000000 > R12 then PC := 351
	349	[1042]	JMP      	351 ; PC := 351
	350	[1043]	SUB      	R12 R12 K47 ; R12 := R12 - 360.000000
	351	[1047]	SELF     	R13 R4 K51 ; R14 := R4; R13 := R4[0x89c6dbf7]
	352	[1047]	GETGLOBAL	R15 K19 ; R15 := 0x00046924
	353	[1047]	MOVE     	R16 R12 ; R16 := R12
	354	[1047]	LOADK    	R17 := 0.000000
	355	[1047]	LOADK    	R18 := 0.000000
	356	[1047]	CALL     	R15 4 0 ; R15,... := R15(R16,R17,R18)
	357	[1047]	CALL     	R13 0 1 ; R13(R14,...)
	358	[1049]	SELF     	R13 R4 K52 ; R14 := R4; R13 := R4[0xd1586535]
	359	[1049]	CALL     	R13 2 2 ; R13 := R13(R14)
	360	[1050]	SELF     	R14 R4 K53 ; R15 := R4; R14 := R4[0x388577d5]
	361	[1050]	CALL     	R14 2 2 ; R14 := R14(R15)
	362	[1051]	GETGLOBAL	R15 K1 ; R15 := _T
	363	[1051]	GETTABLE 	R15 R15 K13 ; R15 := R15["suitTable"]
	364	[1051]	GETTABLE 	R15 R15 K54 ; R15 := R15["positions"]
	365	[1051]	TEST     	R15 0 ; if not R15 then PC := 371
	366	[1051]	JMP      	371 ; PC := 371
	367	[1051]	GETGLOBAL	R15 K1 ; R15 := _T
	368	[1051]	GETTABLE 	R15 R15 K13 ; R15 := R15["suitTable"]
	369	[1051]	GETTABLE 	R15 R15 K54 ; R15 := R15["positions"]
	370	[1051]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	371	[1052]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	372	[1052]	MOVE     	R17 R15 ; R17 := R15
	373	[1052]	CALL     	R16 2 2 ; R16 := R16(R17)
	374	[1052]	TEST     	R16 1 ; if R16 then PC := 378
	375	[1052]	JMP      	378 ; PC := 378
	376	[1053]	MOVE     	R13 R15 ; R13 := R15
	377	[1053]	JMP      	398 ; PC := 398
	378	[1054]	GETGLOBAL	R16 K1 ; R16 := _T
	379	[1054]	GETTABLE 	R16 R16 K13 ; R16 := R16["suitTable"]
	380	[1054]	GETTABLE 	R16 R16 K55 ; R16 := R16["desiredPos"]
	381	[1054]	EQ       	1 R16 K14 ; if R16 == nil then PC := 398
	382	[1054]	JMP      	398 ; PC := 398
	383	[1054]	SELF     	R16 R4 K5 ; R17 := R4; R16 := R4[0xf2deaf69]
	384	[1054]	GETGLOBAL	R18 K56 ; R18 := gPetAvatarType
	385	[1054]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	386	[1054]	TEST     	R16 1 ; if R16 then PC := 398
	387	[1054]	JMP      	398 ; PC := 398
	388	[1055]	GETGLOBAL	R16 K57 ; R16 := 0x5db3ce80
	389	[1055]	MOVE     	R17 R13 ; R17 := R13
	390	[1055]	GETGLOBAL	R18 K1 ; R18 := _T
	391	[1055]	GETTABLE 	R18 R18 K13 ; R18 := R18["suitTable"]
	392	[1055]	GETTABLE 	R18 R18 K55 ; R18 := R18["desiredPos"]
	393	[1055]	GETGLOBAL	R19 K36 ; R19 := 0x67652851
	394	[1055]	CALL     	R19 1 2 ; R19 := R19()
	395	[1055]	MUL      	R19 R19 K44 ; R19 := R19 * 4.000000
	396	[1055]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	397	[1055]	MOVE     	R13 R16 ; R13 := R16
	398	[1058]	GETGLOBAL	R16 K1 ; R16 := _T
	399	[1058]	GETTABLE 	R16 R16 K13 ; R16 := R16["suitTable"]
	400	[1058]	GETTABLE 	R16 R16 K58 ; R16 := R16["queuedTeleport"]
	401	[1058]	EQ       	0 R16 K14 ; if R16 ~= nil then PC := 492
	402	[1058]	JMP      	492 ; PC := 492
	403	[1059]	LOADK    	R16 := 0.000000
	404	[1060]	LOADK    	R17 := 0.000000
	405	[1061]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	406	[1061]	GETGLOBAL	R19 K1 ; R19 := _T
	407	[1061]	GETTABLE 	R19 R19 K13 ; R19 := R19["suitTable"]
	408	[1061]	GETTABLE 	R19 R19 K59 ; R19 := R19["lerpRotZ"]
	409	[1061]	CALL     	R18 2 2 ; R18 := R18(R19)
	410	[1061]	TEST     	R18 1 ; if R18 then PC := 415
	411	[1061]	JMP      	415 ; PC := 415
	412	[1062]	GETGLOBAL	R18 K1 ; R18 := _T
	413	[1062]	GETTABLE 	R18 R18 K13 ; R18 := R18["suitTable"]
	414	[1062]	GETTABLE 	R17 R18 K59 ; R17 := R18["lerpRotZ"]
	415	[1064]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	416	[1064]	GETGLOBAL	R19 K1 ; R19 := _T
	417	[1064]	GETTABLE 	R19 R19 K13 ; R19 := R19["suitTable"]
	418	[1064]	GETTABLE 	R19 R19 K60 ; R19 := R19["lerpRotY"]
	419	[1064]	CALL     	R18 2 2 ; R18 := R18(R19)
	420	[1064]	TEST     	R18 1 ; if R18 then PC := 425
	421	[1064]	JMP      	425 ; PC := 425
	422	[1065]	GETGLOBAL	R18 K1 ; R18 := _T
	423	[1065]	GETTABLE 	R18 R18 K13 ; R18 := R18["suitTable"]
	424	[1065]	GETTABLE 	R16 R18 K60 ; R16 := R18["lerpRotY"]
	425	[1067]	SELF     	R18 R4 K61 ; R19 := R4; R18 := R4[0x589ef1c1]
	426	[1067]	MOVE     	R20 R13 ; R20 := R13
	427	[1067]	GETGLOBAL	R21 K19 ; R21 := 0x00046924
	428	[1067]	MOVE     	R22 R12 ; R22 := R12
	429	[1067]	MOVE     	R23 R16 ; R23 := R16
	430	[1067]	MOVE     	R24 R17 ; R24 := R17
	431	[1067]	CALL     	R21 4 0 ; R21,... := R21(R22,R23,R24)
	432	[1067]	CALL     	R18 0 1 ; R18(R19,...)
	433	[1069]	LOADNIL  	R18 R18 ; R18 := nil
	434	[1070]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	435	[1070]	GETGLOBAL	R20 K62 ; R20 := 0x89326c93
	436	[1070]	CALL     	R19 2 2 ; R19 := R19(R20)
	437	[1070]	TEST     	R19 1 ; if R19 then PC := 443
	438	[1070]	JMP      	443 ; PC := 443
	439	[1071]	GETGLOBAL	R19 K62 ; R19 := 0x89326c93
	440	[1071]	SELF     	R19 R19 K63 ; R20 := R19; R19 := R19[0x78298275]
	441	[1071]	CALL     	R19 2 2 ; R19 := R19(R20)
	442	[1071]	MOVE     	R18 R19 ; R18 := R19
	443	[1073]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	444	[1073]	MOVE     	R20 R18 ; R20 := R18
	445	[1073]	CALL     	R19 2 2 ; R19 := R19(R20)
	446	[1073]	TEST     	R19 1 ; if R19 then PC := 509
	447	[1073]	JMP      	509 ; PC := 509
	448	[1073]	SELF     	R19 R18 K5 ; R20 := R18; R19 := R18[0xf2deaf69]
	449	[1073]	GETGLOBAL	R21 K64 ; R21 := gLotusOperatorAvatarType
	450	[1073]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	451	[1073]	TEST     	R19 1 ; if R19 then PC := 509
	452	[1073]	JMP      	509 ; PC := 509
	453	[1073]	GETGLOBAL	R19 K1 ; R19 := _T
	454	[1073]	GETTABLE 	R19 R19 K65 ; R19 := R19["MenuSuitAvatar"]
	455	[1073]	EQ       	1 R4 R19 ; if R4 == R19 then PC := 461
	456	[1073]	JMP      	461 ; PC := 461
	457	[1073]	GETGLOBAL	R19 K1 ; R19 := _T
	458	[1073]	GETTABLE 	R19 R19 K66 ; R19 := R19["KDriveAvatar"]
	459	[1073]	EQ       	0 R4 R19 ; if R4 ~= R19 then PC := 509
	460	[1073]	JMP      	509 ; PC := 509
	461	[1073]	EQ       	1 R18 R4 ; if R18 == R4 then PC := 509
	462	[1073]	JMP      	509 ; PC := 509
	463	[1075]	SELF     	R19 R18 K61 ; R20 := R18; R19 := R18[0x589ef1c1]
	464	[1075]	MOVE     	R21 R13 ; R21 := R13
	465	[1075]	GETGLOBAL	R22 K19 ; R22 := 0x00046924
	466	[1075]	MOVE     	R23 R12 ; R23 := R12
	467	[1075]	LOADK    	R24 := 0.000000
	468	[1075]	LOADK    	R25 := 0.000000
	469	[1075]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	470	[1075]	CALL     	R19 0 1 ; R19(R20,...)
	471	[1077]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	472	[1077]	GETGLOBAL	R20 K1 ; R20 := _T
	473	[1077]	GETTABLE 	R20 R20 K65 ; R20 := R20["MenuSuitAvatar"]
	474	[1077]	CALL     	R19 2 2 ; R19 := R19(R20)
	475	[1077]	TEST     	R19 1 ; if R19 then PC := 509
	476	[1077]	JMP      	509 ; PC := 509
	477	[1077]	GETGLOBAL	R19 K1 ; R19 := _T
	478	[1077]	GETTABLE 	R19 R19 K66 ; R19 := R19["KDriveAvatar"]
	479	[1077]	EQ       	0 R4 R19 ; if R4 ~= R19 then PC := 509
	480	[1077]	JMP      	509 ; PC := 509
	481	[1078]	GETGLOBAL	R19 K1 ; R19 := _T
	482	[1078]	GETTABLE 	R19 R19 K65 ; R19 := R19["MenuSuitAvatar"]
	483	[1078]	SELF     	R19 R19 K61 ; R20 := R19; R19 := R19[0x589ef1c1]
	484	[1078]	MOVE     	R21 R13 ; R21 := R13
	485	[1078]	GETGLOBAL	R22 K19 ; R22 := 0x00046924
	486	[1078]	MOVE     	R23 R12 ; R23 := R12
	487	[1078]	LOADK    	R24 := 0.000000
	488	[1078]	LOADK    	R25 := 0.000000
	489	[1078]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	490	[1078]	CALL     	R19 0 1 ; R19(R20,...)
	491	[1080]	JMP      	509 ; PC := 509
	492	[1082]	GETGLOBAL	R19 K1 ; R19 := _T
	493	[1082]	GETTABLE 	R19 R19 K13 ; R19 := R19["suitTable"]
	494	[1082]	GETGLOBAL	R20 K1 ; R20 := _T
	495	[1082]	GETTABLE 	R20 R20 K13 ; R20 := R20["suitTable"]
	496	[1082]	GETTABLE 	R20 R20 K58 ; R20 := R20["queuedTeleport"]
	497	[1082]	GETGLOBAL	R21 K67 ; R21 := 0xb693b6c1
	498	[1082]	CALL     	R21 1 2 ; R21 := R21()
	499	[1082]	SUB      	R20 R20 R21 ; R20 := R20 - R21
	500	[1082]	SETTABLE 	R19 K58 R20 ; R19["queuedTeleport"] := R20
	501	[1083]	GETGLOBAL	R19 K1 ; R19 := _T
	502	[1083]	GETTABLE 	R19 R19 K13 ; R19 := R19["suitTable"]
	503	[1083]	GETTABLE 	R19 R19 K58 ; R19 := R19["queuedTeleport"]
	504	[1083]	LE       	0 R19 K20 ; if R19 > 0.000000 then PC := 509
	505	[1083]	JMP      	509 ; PC := 509
	506	[1084]	GETGLOBAL	R19 K1 ; R19 := _T
	507	[1084]	GETTABLE 	R19 R19 K13 ; R19 := R19["suitTable"]
	508	[1084]	SETTABLE 	R19 K58 K14 ; R19["queuedTeleport"] := nil
	509	[1088]	GETGLOBAL	R19 K68 ; R19 := 0xa421af95
	510	[1088]	MOVE     	R20 R5 ; R20 := R5
	511	[1088]	MOVE     	R21 R6 ; R21 := R6
	512	[1088]	LOADK    	R22 := -200.000000
	513	[1088]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	514	[1089]	SELF     	R20 R4 K69 ; R21 := R4; R20 := R4[0xebfba9e4]
	515	[1089]	CALL     	R20 2 2 ; R20 := R20(R21)
	516	[1090]	SELF     	R21 R0 K70 ; R22 := R0; R21 := R0[0x28209ddc]
	517	[1090]	MOVE     	R23 R20 ; R23 := R20
	518	[1090]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	519	[1091]	SETTABLE 	R21 K71 K20 ; R21["z"] := 0.000000
	520	[1093]	GETGLOBAL	R22 K72 ; R22 := 0x20b7f774
	521	[1093]	MOVE     	R23 R21 ; R23 := R21
	522	[1093]	MOVE     	R24 R19 ; R24 := R19
	523	[1093]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	524	[1094]	GETGLOBAL	R23 K73 ; R23 := 0xf6c6e505
	525	[1094]	MOVE     	R24 R22 ; R24 := R22
	526	[1094]	CALL     	R23 2 2 ; R23 := R23(R24)
	527	[1096]	GETTABLE 	R24 R23 K71 ; R24 := R23["z"]
	528	[1096]	LT       	0 K20 R24 ; if 0.000000 >= R24 then PC := 533
	529	[1096]	JMP      	533 ; PC := 533
	530	[1097]	GETTABLE 	R24 R23 K71 ; R24 := R23["z"]
	531	[1097]	UNM      	R24 R24 ; R24 := ^ R24
	532	[1097]	SETTABLE 	R23 K71 R24 ; R23["z"] := R24
	533	[1100]	GETGLOBAL	R24 K74 ; R24 := 0x492c7f2a
	534	[1100]	MOVE     	R25 R23 ; R25 := R23
	535	[1100]	GETGLOBAL	R26 K19 ; R26 := 0x00046924
	536	[1100]	SUB      	R27 K75 R12 ; R27 := 90.000000 - R12
	537	[1100]	LOADK    	R28 := 0.000000
	538	[1100]	LOADK    	R29 := 0.000000
	539	[1100]	CALL     	R26 4 0 ; R26,... := R26(R27,R28,R29)
	540	[1100]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	541	[1100]	MOVE     	R23 R24 ; R23 := R24
	542	[1102]	GETGLOBAL	R24 K72 ; R24 := 0x20b7f774
	543	[1102]	GETGLOBAL	R25 K76 ; R25 := ZERO_VECTOR
	544	[1102]	MOVE     	R26 R23 ; R26 := R23
	545	[1102]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	546	[1102]	MOVE     	R22 R24 ; R22 := R24
	547	[1104]	SETTABLE 	R22 K77 K20 ; R22["bank"] := 0.000000
	548	[1105]	GETTABLE 	R24 R22 K78 ; R24 := R22["pitch"]
	549	[1105]	UNM      	R24 R24 ; R24 := ^ R24
	550	[1105]	SETTABLE 	R22 K78 R24 ; R22["pitch"] := R24
	551	[1106]	GETGLOBAL	R24 K80 ; R24 := 0x42dcc9f5
	552	[1106]	GETTABLE 	R25 R22 K79 ; R25 := R22["heading"]
	553	[1106]	LOADK    	R26 := -70.000000
	554	[1106]	LOADK    	R27 := 70.000000
	555	[1106]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	556	[1106]	SETTABLE 	R22 K79 R24 ; R22["heading"] := R24
	557	[1107]	GETGLOBAL	R24 K80 ; R24 := 0x42dcc9f5
	558	[1107]	GETTABLE 	R25 R22 K78 ; R25 := R22["pitch"]
	559	[1107]	LOADK    	R26 := -30.000000
	560	[1107]	LOADK    	R27 := 20.000000
	561	[1107]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	562	[1107]	SETTABLE 	R22 K78 R24 ; R22["pitch"] := R24
	563	[1109]	GETGLOBAL	R24 K1 ; R24 := _T
	564	[1109]	GETTABLE 	R24 R24 K13 ; R24 := R24["suitTable"]
	565	[1109]	GETTABLE 	R24 R24 K18 ; R24 := R24["lerpHead"]
	566	[1109]	GETGLOBAL	R25 K43 ; R25 := 0x9bafffe3
	567	[1109]	GETGLOBAL	R26 K1 ; R26 := _T
	568	[1109]	GETTABLE 	R26 R26 K13 ; R26 := R26["suitTable"]
	569	[1109]	GETTABLE 	R26 R26 K18 ; R26 := R26["lerpHead"]
	570	[1109]	GETTABLE 	R26 R26 K79 ; R26 := R26["heading"]
	571	[1109]	GETTABLE 	R27 R22 K79 ; R27 := R22["heading"]
	572	[1109]	GETGLOBAL	R28 K36 ; R28 := 0x67652851
	573	[1109]	CALL     	R28 1 2 ; R28 := R28()
	574	[1109]	MUL      	R28 R28 K81 ; R28 := R28 * 8.000000
	575	[1109]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	576	[1109]	SETTABLE 	R24 K79 R25 ; R24["heading"] := R25
	577	[1110]	GETGLOBAL	R24 K1 ; R24 := _T
	578	[1110]	GETTABLE 	R24 R24 K13 ; R24 := R24["suitTable"]
	579	[1110]	GETTABLE 	R24 R24 K18 ; R24 := R24["lerpHead"]
	580	[1110]	GETGLOBAL	R25 K43 ; R25 := 0x9bafffe3
	581	[1110]	GETGLOBAL	R26 K1 ; R26 := _T
	582	[1110]	GETTABLE 	R26 R26 K13 ; R26 := R26["suitTable"]
	583	[1110]	GETTABLE 	R26 R26 K18 ; R26 := R26["lerpHead"]
	584	[1110]	GETTABLE 	R26 R26 K78 ; R26 := R26["pitch"]
	585	[1110]	GETTABLE 	R27 R22 K78 ; R27 := R22["pitch"]
	586	[1110]	GETGLOBAL	R28 K36 ; R28 := 0x67652851
	587	[1110]	CALL     	R28 1 2 ; R28 := R28()
	588	[1110]	MUL      	R28 R28 K81 ; R28 := R28 * 8.000000
	589	[1110]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	590	[1110]	SETTABLE 	R24 K78 R25 ; R24["pitch"] := R25
	591	[1113]	GETGLOBAL	R24 K24 ; R24 := 0x34291f5c
	592	[1113]	GETTABLE 	R24 R24 K82 ; R24 := R24[0xe6b41adb]
	593	[1113]	CALL     	R24 1 2 ; R24 := R24()
	594	[1114]	TEST     	R7 1 ; if R7 then PC := 598
	595	[1114]	JMP      	598 ; PC := 598
	596	[1114]	TEST     	R24 1 ; if R24 then PC := 605
	597	[1114]	JMP      	605 ; PC := 605
	598	[1115]	GETGLOBAL	R25 K1 ; R25 := _T
	599	[1115]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	600	[1115]	SETTABLE 	R25 K27 R5 ; R25["lastMX"] := R5
	601	[1116]	GETGLOBAL	R25 K1 ; R25 := _T
	602	[1116]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	603	[1116]	SETTABLE 	R25 K28 R6 ; R25["lastMY"] := R6
	604	[1116]	JMP      	622 ; PC := 622
	605	[1117]	TEST     	R24 0 ; if not R24 then PC := 622
	606	[1117]	JMP      	622 ; PC := 622
	607	[1119]	TEST     	R2 0 ; if not R2 then PC := 616
	608	[1119]	JMP      	616 ; PC := 616
	609	[1120]	GETGLOBAL	R25 K1 ; R25 := _T
	610	[1120]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	611	[1120]	SETTABLE 	R25 K27 R5 ; R25["lastMX"] := R5
	612	[1121]	GETGLOBAL	R25 K1 ; R25 := _T
	613	[1121]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	614	[1121]	SETTABLE 	R25 K28 R6 ; R25["lastMY"] := R6
	615	[1121]	JMP      	622 ; PC := 622
	616	[1123]	GETGLOBAL	R25 K1 ; R25 := _T
	617	[1123]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	618	[1123]	SETTABLE 	R25 K27 K14 ; R25["lastMX"] := nil
	619	[1124]	GETGLOBAL	R25 K1 ; R25 := _T
	620	[1124]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	621	[1124]	SETTABLE 	R25 K28 K14 ; R25["lastMY"] := nil
	622	[1128]	TEST     	R7 0 ; if not R7 then PC := 628
	623	[1128]	JMP      	628 ; PC := 628
	624	[1129]	GETGLOBAL	R25 K1 ; R25 := _T
	625	[1129]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	626	[1129]	GETUPVAL 	R26 U1 ; R26 := U1
	627	[1129]	SETTABLE 	R25 K27 R26 ; R25["lastMX"] := R26
	628	[1131]	RETURN   	R0 1 ; return 

function #28 <?:1133,1139> (27 instructions, 108 bytes at 0000025274EE2DA0)
2 params, 7 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[1134]	GETGLOBAL	R2 K0 ; R2 := 0x89326c93
	2	[1134]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x78298275]
	3	[1134]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[1135]	GETGLOBAL	R3 K3 ; R3 := 0x9bafffe3
	5	[1135]	GETTABLE 	R4 R1 K2 ; R4 := R1["heading"]
	6	[1135]	GETTABLE 	R5 R0 K2 ; R5 := R0["heading"]
	7	[1135]	GETGLOBAL	R6 K4 ; R6 := 0x67652851
	8	[1135]	CALL     	R6 1 2 ; R6 := R6()
	9	[1135]	MUL      	R6 R6 K5 ; R6 := R6 * 8.000000
	10	[1135]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	11	[1135]	SETTABLE 	R1 K2 R3 ; R1["heading"] := R3
	12	[1136]	GETGLOBAL	R3 K3 ; R3 := 0x9bafffe3
	13	[1136]	GETTABLE 	R4 R1 K6 ; R4 := R1["pitch"]
	14	[1136]	GETTABLE 	R5 R0 K6 ; R5 := R0["pitch"]
	15	[1136]	GETGLOBAL	R6 K4 ; R6 := 0x67652851
	16	[1136]	CALL     	R6 1 2 ; R6 := R6()
	17	[1136]	MUL      	R6 R6 K5 ; R6 := R6 * 8.000000
	18	[1136]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	19	[1136]	SETTABLE 	R1 K6 R3 ; R1["pitch"] := R3
	20	[1137]	SELF     	R3 R2 K7 ; R4 := R2; R3 := R2[0xb63fc1d8]
	21	[1137]	GETGLOBAL	R5 K8 ; R5 := 0x0469f296
	22	[1137]	LOADK    	R6 K9 ; R6 := "GAME_C1_HEAD1"
	23	[1137]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[1137]	MOVE     	R6 R1 ; R6 := R1
	25	[1137]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	26	[1138]	RETURN   	R1 2 ; return R1 
	27	[1139]	RETURN   	R0 1 ; return 

function #29 <?:1142,1143> (1 instruction, 4 bytes at 0000025274EE2FE0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[1143]	RETURN   	R0 1 ; return 

function #30 <?:1145,1217> (19 instructions, 76 bytes at 0000025274EE30B0)
0 params, 2 slots, 0 upvalues, 0 locals, 6 constants, 3 functions
	1	[1146]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1146]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[1146]	GETTABLE 	R1 R1 K2 ; R1 := R1["profileIconList"]
	4	[1146]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[1146]	TEST     	R0 0 ; if not R0 then PC := 19
	6	[1146]	JMP      	19 ; PC := 19
	7	[1147]	GETGLOBAL	R0 K1 ; R0 := _T
	8	[1147]	NEWTABLE 	R1 0 0 ; R1 := {}
	9	[1147]	SETTABLE 	R0 K2 R1 ; R0["profileIconList"] := R1
	10	[1148]	GETGLOBAL	R0 K1 ; R0 := _T
	11	[1156]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	12	[1156]	SETTABLE 	R0 K3 R1 ; R0["GetLocalLoadout"] := R1
	13	[1157]	GETGLOBAL	R0 K1 ; R0 := _T
	14	[1179]	CLOSURE  	R1 1 ; R1 := closure(Function #2)
	15	[1179]	SETTABLE 	R0 K4 R1 ; R0[0x7b998233] := R1
	16	[1180]	GETGLOBAL	R0 K1 ; R0 := _T
	17	[1215]	CLOSURE  	R1 2 ; R1 := closure(Function #3)
	18	[1215]	SETTABLE 	R0 K5 R1 ; R0["UpdateProfileIconList"] := R1
	19	[1217]	RETURN   	R0 1 ; return 

function #31 <?:1220,1231> (35 instructions, 140 bytes at 0000025274EE3E40)
2 params, 10 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1221]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[1221]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[1221]	GETTABLE 	R3 R3 K2 ; R3 := R3["profileIconList"]
	4	[1221]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[1221]	TEST     	R2 0 ; if not R2 then PC := 8
	6	[1221]	JMP      	8 ; PC := 8
	7	[1222]	RETURN   	R0 1 ; return 
	8	[1224]	GETGLOBAL	R2 K1 ; R2 := _T
	9	[1224]	GETTABLE 	R2 R2 K2 ; R2 := R2["profileIconList"]
	10	[1224]	LEN      	R2 R2 ; R2 := # R2
	11	[1225]	LOADK    	R3 := 1.000000
	12	[1225]	MOVE     	R4 R2 ; R4 := R2
	13	[1225]	LOADK    	R5 := 1.000000
	14	[1225]	FORPREP  	R3 34 ; R3 -= R5; PC := 34
	15	[1226]	GETGLOBAL	R7 K1 ; R7 := _T
	16	[1226]	GETTABLE 	R7 R7 K2 ; R7 := R7["profileIconList"]
	17	[1226]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	18	[1226]	GETTABLE 	R7 R7 K3 ; R7 := R7["Movie"]
	19	[1226]	EQ       	0 R7 R0 ; if R7 ~= R0 then PC := 34
	20	[1226]	JMP      	34 ; PC := 34
	21	[1226]	GETGLOBAL	R7 K1 ; R7 := _T
	22	[1226]	GETTABLE 	R7 R7 K2 ; R7 := R7["profileIconList"]
	23	[1226]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	24	[1226]	GETTABLE 	R7 R7 K4 ; R7 := R7["Clip"]
	25	[1226]	EQ       	0 R7 R1 ; if R7 ~= R1 then PC := 34
	26	[1226]	JMP      	34 ; PC := 34
	27	[1227]	GETGLOBAL	R7 K5 ; R7 := 0x33bdd652
	28	[1227]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x9c1f3b5a]
	29	[1227]	GETGLOBAL	R8 K1 ; R8 := _T
	30	[1227]	GETTABLE 	R8 R8 K2 ; R8 := R8["profileIconList"]
	31	[1227]	MOVE     	R9 R6 ; R9 := R6
	32	[1227]	CALL     	R7 3 1 ; R7(R8,R9)
	33	[1228]	RETURN   	R0 1 ; return 
	34	[1225]	FORLOOP  	R3 15 ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
	35	[1231]	RETURN   	R0 1 ; return 

function #32 <?:1233,1253> (42 instructions, 168 bytes at 0000025274EE4090)
3 params, 12 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[1234]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[1234]	GETGLOBAL	R4 K1 ; R4 := _T
	3	[1234]	GETTABLE 	R4 R4 K2 ; R4 := R4["profileIconList"]
	4	[1234]	CALL     	R3 2 2 ; R3 := R3(R4)
	5	[1234]	TEST     	R3 0 ; if not R3 then PC := 8
	6	[1234]	JMP      	8 ; PC := 8
	7	[1235]	RETURN   	R0 1 ; return 
	8	[1237]	NEWTABLE 	R3 0 3 ; R3 := {}
	9	[1237]	SETTABLE 	R3 K3 R0 ; R3["Movie"] := R0
	10	[1237]	SETTABLE 	R3 K4 R1 ; R3["Clip"] := R1
	11	[1237]	SETTABLE 	R3 K5 R2 ; R3["HumanPlayer"] := R2
	12	[1239]	OP_LOADBOOL	R4 0 0 ; R4 := false
	13	[1240]	GETGLOBAL	R5 K1 ; R5 := _T
	14	[1240]	GETTABLE 	R5 R5 K2 ; R5 := R5["profileIconList"]
	15	[1240]	LEN      	R5 R5 ; R5 := # R5
	16	[1241]	LOADK    	R6 := 1.000000
	17	[1241]	MOVE     	R7 R5 ; R7 := R5
	18	[1241]	LOADK    	R8 := 1.000000
	19	[1241]	FORPREP  	R6 32 ; R6 -= R8; PC := 32
	20	[1242]	GETGLOBAL	R10 K1 ; R10 := _T
	21	[1242]	GETTABLE 	R10 R10 K2 ; R10 := R10["profileIconList"]
	22	[1242]	GETTABLE 	R10 R10 R9 ; R10 := R10[R9]
	23	[1242]	GETTABLE 	R10 R10 K4 ; R10 := R10["Clip"]
	24	[1242]	GETTABLE 	R11 R3 K4 ; R11 := R3["Clip"]
	25	[1242]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 32
	26	[1242]	JMP      	32 ; PC := 32
	27	[1243]	OP_LOADBOOL	R4 1 0 ; R4 := true
	28	[1244]	GETGLOBAL	R10 K1 ; R10 := _T
	29	[1244]	GETTABLE 	R10 R10 K2 ; R10 := R10["profileIconList"]
	30	[1244]	SETTABLE 	R10 R9 R3 ; R10[R9] := R3
	31	[1245]	JMP      	33 ; PC := 33
	32	[1241]	FORLOOP  	R6 20 ; R6 += R8; if R6 <= R7 then begin PC := 20; R9 := R6 end
	33	[1249]	TEST     	R4 1 ; if R4 then PC := 39
	34	[1249]	JMP      	39 ; PC := 39
	35	[1250]	GETGLOBAL	R10 K1 ; R10 := _T
	36	[1250]	GETTABLE 	R10 R10 K2 ; R10 := R10["profileIconList"]
	37	[1250]	ADD      	R11 R5 K6 ; R11 := R5 + 1.000000
	38	[1250]	SETTABLE 	R10 R11 R3 ; R10[R11] := R3
	39	[1252]	GETGLOBAL	R10 K1 ; R10 := _T
	40	[1252]	SELF     	R10 R10 K7 ; R11 := R10; R10 := R10[0x6ee6cad5]
	41	[1252]	CALL     	R10 2 1 ; R10(R11)
	42	[1253]	RETURN   	R0 1 ; return 

function #33 <?:1256,1266> (33 instructions, 132 bytes at 0000025274EE4330)
5 params, 12 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1257]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	2	[1257]	GETGLOBAL	R6 K1 ; R6 := 0x25d99d89
	3	[1257]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[1257]	TEST     	R5 0 ; if not R5 then PC := 7
	5	[1257]	JMP      	7 ; PC := 7
	6	[1258]	RETURN   	R0 1 ; return 
	7	[1261]	GETGLOBAL	R5 K2 ; R5 := REPORT_PLAYER
	8	[1261]	EQ       	0 R3 R5 ; if R3 ~= R5 then PC := 23
	9	[1261]	JMP      	23 ; PC := 23
	10	[1262]	GETGLOBAL	R5 K1 ; R5 := 0x25d99d89
	11	[1262]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0x024a42a1]
	12	[1262]	MOVE     	R7 R0 ; R7 := R0
	13	[1262]	GETGLOBAL	R8 K4 ; R8 := 0x89326c93
	14	[1262]	SELF     	R8 R8 K5 ; R9 := R8; R8 := R8[0xfb64e76c]
	15	[1262]	CALL     	R8 2 2 ; R8 := R8(R9)
	16	[1262]	SELF     	R8 R8 K6 ; R9 := R8; R8 := R8[0x5ca33548]
	17	[1262]	CALL     	R8 2 2 ; R8 := R8(R9)
	18	[1262]	MOVE     	R9 R1 ; R9 := R1
	19	[1262]	MOVE     	R10 R2 ; R10 := R2
	20	[1262]	MOVE     	R11 R4 ; R11 := R4
	21	[1262]	CALL     	R5 7 1 ; R5(R6,R7,R8,R9,R10,R11)
	22	[1262]	JMP      	33 ; PC := 33
	23	[1263]	GETGLOBAL	R5 K7 ; R5 := REPORT_CLAN_AD
	24	[1263]	EQ       	0 R3 R5 ; if R3 ~= R5 then PC := 33
	25	[1263]	JMP      	33 ; PC := 33
	26	[1264]	GETGLOBAL	R5 K1 ; R5 := 0x25d99d89
	27	[1264]	SELF     	R5 R5 K8 ; R6 := R5; R5 := R5[0xd58aef72]
	28	[1264]	MOVE     	R7 R0 ; R7 := R0
	29	[1264]	MOVE     	R8 R1 ; R8 := R1
	30	[1264]	MOVE     	R9 R2 ; R9 := R2
	31	[1264]	MOVE     	R10 R4 ; R10 := R4
	32	[1264]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	33	[1266]	RETURN   	R0 1 ; return 

function #34 <?:1268,1314> (47 instructions, 188 bytes at 0000025274EE45A0)
2 params, 7 slots, 0 upvalues, 0 locals, 14 constants, 2 functions
	1	[1269]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[1269]	MOVE     	R3 R0 ; R3 := R0
	3	[1269]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[1269]	TEST     	R2 1 ; if R2 then PC := 12
	5	[1269]	JMP      	12 ; PC := 12
	6	[1269]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[1269]	GETGLOBAL	R3 K1 ; R3 := 0x0032441c
	8	[1269]	GETTABLE 	R3 R3 K2 ; R3 := R3["UIMovie_GenericSettings"]
	9	[1269]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[1269]	TEST     	R2 0 ; if not R2 then PC := 13
	11	[1269]	JMP      	13 ; PC := 13
	12	[1270]	RETURN   	R0 1 ; return 
	13	[1273]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x1fd6abd0]
	14	[1273]	GETGLOBAL	R4 K1 ; R4 := 0x0032441c
	15	[1273]	GETTABLE 	R4 R4 K2 ; R4 := R4["UIMovie_GenericSettings"]
	16	[1273]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	17	[1274]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	18	[1274]	MOVE     	R4 R2 ; R4 := R2
	19	[1274]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[1274]	TEST     	R3 0 ; if not R3 then PC := 23
	21	[1274]	JMP      	23 ; PC := 23
	22	[1275]	RETURN   	R0 1 ; return 
	23	[1278]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0xe4162eed]
	24	[1278]	LOADK    	R5 K5 ; R5 := "SetTitle"
	25	[1278]	LOADK    	R6 K6 ; R6 := "/Lotus/Language/Menu/ReportPlayer_DetailsTitle"
	26	[1278]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	27	[1279]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0xe4162eed]
	28	[1279]	LOADK    	R5 K7 ; R5 := "SetConfirmButtonActive"
	29	[1279]	LOADK    	R6 K8 ; R6 := "true"
	30	[1279]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	31	[1280]	GETGLOBAL	R3 K9 ; R3 := _T
	32	[1294]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	33	[1294]	MOVE     	R0 R1 ; R0 := R1
	34	[1294]	MOVE     	R0 R0 ; R0 := R0
	35	[1294]	SETTABLE 	R3 K10 R4 ; R3[0xe4162eed] := R4
	36	[1295]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0xe4162eed]
	37	[1295]	LOADK    	R5 K11 ; R5 := "SetCallBack"
	38	[1295]	LOADK    	R6 K10 ; R6 := "ReportReason_Done"
	39	[1295]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	40	[1297]	GETGLOBAL	R3 K9 ; R3 := _T
	41	[1312]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	42	[1312]	SETTABLE 	R3 K12 R4 ; R3["ReportReason_GetSettings"] := R4
	43	[1313]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0xe4162eed]
	44	[1313]	LOADK    	R5 K13 ; R5 := "SetElementsFunction"
	45	[1313]	LOADK    	R6 K12 ; R6 := "ReportReason_GetSettings"
	46	[1313]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	47	[1314]	RETURN   	R0 1 ; return 

function #35 <?:1316,1407> (75 instructions, 300 bytes at 0000025274EE50F0)
5 params, 16 slots, 4 upvalues, 0 locals, 20 constants, 5 functions
	1	[1317]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	2	[1317]	MOVE     	R6 R0 ; R6 := R0
	3	[1317]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[1317]	TEST     	R5 1 ; if R5 then PC := 12
	5	[1317]	JMP      	12 ; PC := 12
	6	[1317]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	7	[1317]	GETGLOBAL	R6 K1 ; R6 := 0x0032441c
	8	[1317]	GETTABLE 	R6 R6 K2 ; R6 := R6["UIMovie_GenericMenu"]
	9	[1317]	CALL     	R5 2 2 ; R5 := R5(R6)
	10	[1317]	TEST     	R5 0 ; if not R5 then PC := 14
	11	[1317]	JMP      	14 ; PC := 14
	12	[1318]	LOADNIL  	R5 R5 ; R5 := nil
	13	[1318]	RETURN   	R5 2 ; return R5 
	14	[1321]	EQ       	0 R4 K3 ; if R4 ~= nil then PC := 17
	15	[1321]	JMP      	17 ; PC := 17
	16	[1322]	GETGLOBAL	R4 K4 ; R4 := REPORT_PLAYER
	17	[1325]	LOADK    	R5 K5 ; R5 := ""
	18	[1326]	LOADK    	R6 K5 ; R6 := ""
	19	[1327]	GETUPVAL 	R7 U0 ; R7 := U0
	20	[1327]	MOVE     	R8 R0 ; R8 := R0
	21	[1327]	LOADK    	R9 := 1.000000
	22	[1327]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	23	[1340]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	24	[1340]	MOVE     	R0 R6 ; R0 := R6
	25	[1340]	GETUPVAL 	R0 U1 ; R0 := U1
	26	[1340]	MOVE     	R0 R3 ; R0 := R3
	27	[1340]	SETTABLE 	R7 K6 R8 ; R7["ConfirmReport"] := R8
	28	[1349]	CLOSURE  	R8 1 ; R8 := closure(Function #2)
	29	[1349]	GETUPVAL 	R0 U2 ; R0 := U2
	30	[1349]	MOVE     	R0 R1 ; R0 := R1
	31	[1349]	MOVE     	R0 R5 ; R0 := R5
	32	[1349]	MOVE     	R0 R6 ; R0 := R6
	33	[1349]	MOVE     	R0 R4 ; R0 := R4
	34	[1349]	MOVE     	R0 R2 ; R0 := R2
	35	[1349]	SETTABLE 	R7 K7 R8 ; R7["OnConfirmReport"] := R8
	36	[1368]	CLOSURE  	R8 2 ; R8 := closure(Function #3)
	37	[1368]	GETUPVAL 	R0 U1 ; R0 := U1
	38	[1368]	MOVE     	R0 R5 ; R0 := R5
	39	[1368]	MOVE     	R0 R2 ; R0 := R2
	40	[1368]	MOVE     	R0 R7 ; R0 := R7
	41	[1368]	SETTABLE 	R7 K8 R8 ; R7["OnReported"] := R8
	42	[1370]	SELF     	R8 R0 K9 ; R9 := R0; R8 := R0[0x1fd6abd0]
	43	[1370]	GETGLOBAL	R10 K1 ; R10 := 0x0032441c
	44	[1370]	GETTABLE 	R10 R10 K2 ; R10 := R10["UIMovie_GenericMenu"]
	45	[1370]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	46	[1371]	SELF     	R9 R8 K10 ; R10 := R8; R9 := R8[0xe4162eed]
	47	[1371]	LOADK    	R11 K11 ; R11 := "SetTitle"
	48	[1371]	SELF     	R12 R0 K12 ; R13 := R0; R12 := R0[0x42b04007]
	49	[1371]	LOADK    	R14 K13 ; R14 := "/Lotus/Language/Menu/SocialOverlay_ReportPlayer"
	50	[1371]	OP_LOADBOOL	R15 0 0 ; R15 := false
	51	[1371]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	52	[1371]	LOADK    	R13 K14 ; R13 := " "
	53	[1371]	MOVE     	R14 R1 ; R14 := R1
	54	[1371]	CONCAT   	R12 R12 R14 ; R12 := R12 .. R13 .. R14
	55	[1371]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	56	[1373]	GETGLOBAL	R9 K15 ; R9 := _T
	57	[1385]	CLOSURE  	R10 3 ; R10 := closure(Function #4)
	58	[1385]	MOVE     	R0 R5 ; R0 := R5
	59	[1385]	GETUPVAL 	R0 U3 ; R0 := U3
	60	[1385]	MOVE     	R0 R0 ; R0 := R0
	61	[1385]	MOVE     	R0 R2 ; R0 := R2
	62	[1385]	SETTABLE 	R9 K16 R10 ; R9["ReportSelectionDone"] := R10
	63	[1386]	SELF     	R9 R8 K10 ; R10 := R8; R9 := R8[0xe4162eed]
	64	[1386]	LOADK    	R11 K17 ; R11 := "SetCallBack"
	65	[1386]	LOADK    	R12 K16 ; R12 := "ReportSelectionDone"
	66	[1386]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	67	[1388]	GETGLOBAL	R9 K15 ; R9 := _T
	68	[1403]	CLOSURE  	R10 4 ; R10 := closure(Function #5)
	69	[1403]	SETTABLE 	R9 K18 R10 ; R9["GetReportOptions"] := R10
	70	[1404]	SELF     	R9 R8 K10 ; R10 := R8; R9 := R8[0xe4162eed]
	71	[1404]	LOADK    	R11 K19 ; R11 := "SetElementsFunction"
	72	[1404]	LOADK    	R12 K18 ; R12 := "GetReportOptions"
	73	[1404]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	74	[1406]	RETURN   	R8 2 ; return R8 
	75	[1407]	RETURN   	R0 1 ; return 

function #36 <?:1409,1411> (6 instructions, 24 bytes at 0000025274EE6B80)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1410]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1410]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x15ba5fe6]
	3	[1410]	MOVE     	R2 R0 ; R2 := R0
	4	[1410]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[1410]	RETURN   	R1 2 ; return R1 
	6	[1411]	RETURN   	R0 1 ; return 

function #37 <?:1413,1415> (8 instructions, 32 bytes at 0000025274EE6C90)
3 params, 7 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1414]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1414]	GETTABLE 	R3 R3 K0 ; R3 := R3[0x6d7e6810]
	3	[1414]	MOVE     	R4 R0 ; R4 := R0
	4	[1414]	MOVE     	R5 R1 ; R5 := R1
	5	[1414]	MOVE     	R6 R2 ; R6 := R2
	6	[1414]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	7	[1414]	RETURN   	R3 2 ; return R3 
	8	[1415]	RETURN   	R0 1 ; return 

function #38 <?:1417,1419> (8 instructions, 32 bytes at 0000025274EE6DA0)
3 params, 7 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1418]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1418]	GETTABLE 	R3 R3 K0 ; R3 := R3[0xb5be5d4a]
	3	[1418]	MOVE     	R4 R0 ; R4 := R0
	4	[1418]	MOVE     	R5 R1 ; R5 := R1
	5	[1418]	MOVE     	R6 R2 ; R6 := R2
	6	[1418]	TAILCALL 	R3 4 0 ; R3,... := R3(R4,R5,R6)
	7	[1418]	RETURN   	R3 0 ; return R3,... 
	8	[1419]	RETURN   	R0 1 ; return 

function #39 <?:1421,1423> (12 instructions, 48 bytes at 0000025274EE6EB0)
7 params, 15 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1422]	GETUPVAL 	R7 U0 ; R7 := U0
	2	[1422]	GETTABLE 	R7 R7 K0 ; R7 := R7[0x5a22d251]
	3	[1422]	MOVE     	R8 R0 ; R8 := R0
	4	[1422]	MOVE     	R9 R1 ; R9 := R1
	5	[1422]	MOVE     	R10 R2 ; R10 := R2
	6	[1422]	MOVE     	R11 R3 ; R11 := R3
	7	[1422]	MOVE     	R12 R4 ; R12 := R4
	8	[1422]	MOVE     	R13 R5 ; R13 := R5
	9	[1422]	MOVE     	R14 R6 ; R14 := R6
	10	[1422]	TAILCALL 	R7 8 0 ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
	11	[1422]	RETURN   	R7 0 ; return R7,... 
	12	[1423]	RETURN   	R0 1 ; return 

function #40 <?:1426,1453> (91 instructions, 364 bytes at 0000025274EE6FE0)
4 params, 19 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[1427]	NEWTABLE 	R4 0 0 ; R4 := {}
	2	[1428]	LOADK    	R5 := 1.000000
	3	[1428]	LOADK    	R6 := 4.000000
	4	[1428]	LOADK    	R7 := 1.000000
	5	[1428]	FORPREP  	R5 89 ; R5 -= R7; PC := 89
	6	[1429]	LOADNIL  	R9 R9 ; R9 := nil
	7	[1430]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	8	[1430]	MOVE     	R11 R2 ; R11 := R2
	9	[1430]	CALL     	R10 2 2 ; R10 := R10(R11)
	10	[1430]	TEST     	R10 1 ; if R10 then PC := 16
	11	[1430]	JMP      	16 ; PC := 16
	12	[1431]	SELF     	R10 R2 K1 ; R11 := R2; R10 := R2[0x41a92792]
	13	[1431]	SUB      	R12 R8 K2 ; R12 := R8 - 1.000000
	14	[1431]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	15	[1431]	MOVE     	R9 R10 ; R9 := R10
	16	[1434]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	17	[1434]	MOVE     	R11 R9 ; R11 := R9
	18	[1434]	CALL     	R10 2 2 ; R10 := R10(R11)
	19	[1434]	TEST     	R10 1 ; if R10 then PC := 64
	20	[1434]	JMP      	64 ; PC := 64
	21	[1435]	GETGLOBAL	R10 K3 ; R10 := 0xb009bbc6
	22	[1435]	MOVE     	R11 R9 ; R11 := R9
	23	[1435]	CALL     	R10 2 2 ; R10 := R10(R11)
	24	[1436]	SETTABLE 	R4 R8 R10 ; R4[R8] := R10
	25	[1438]	SELF     	R11 R10 K4 ; R12 := R10; R11 := R10[0xd3a9d01f]
	26	[1438]	CALL     	R11 2 2 ; R11 := R11(R12)
	27	[1439]	SELF     	R12 R0 K5 ; R13 := R0; R12 := R0[0x20b98db3]
	28	[1439]	MOVE     	R14 R1 ; R14 := R1
	29	[1439]	LOADK    	R15 K6 ; R15 := ".Ability"
	30	[1439]	MOVE     	R16 R8 ; R16 := R8
	31	[1439]	LOADK    	R17 K7 ; R17 := ".Name.text"
	32	[1439]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	33	[1439]	SELF     	R15 R11 K8 ; R16 := R11; R15 := R11[0x6d604ba7]
	34	[1439]	CALL     	R15 2 0 ; R15,... := R15(R16)
	35	[1439]	CALL     	R12 0 1 ; R12(R13,...)
	36	[1441]	SELF     	R12 R10 K9 ; R13 := R10; R12 := R10[0x056dcf06]
	37	[1441]	CALL     	R12 2 2 ; R12 := R12(R13)
	38	[1442]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	39	[1442]	MOVE     	R14 R12 ; R14 := R12
	40	[1442]	CALL     	R13 2 2 ; R13 := R13(R14)
	41	[1442]	TEST     	R13 1 ; if R13 then PC := 51
	42	[1442]	JMP      	51 ; PC := 51
	43	[1443]	SELF     	R13 R0 K10 ; R14 := R0; R13 := R0[0x1cb415c1]
	44	[1443]	MOVE     	R15 R1 ; R15 := R1
	45	[1443]	LOADK    	R16 K6 ; R16 := ".Ability"
	46	[1443]	MOVE     	R17 R8 ; R17 := R8
	47	[1443]	LOADK    	R18 K11 ; R18 := ".Icon"
	48	[1443]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	49	[1443]	MOVE     	R16 R12 ; R16 := R12
	50	[1443]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	51	[1445]	SELF     	R13 R0 K12 ; R14 := R0; R13 := R0[0xaade900e]
	52	[1445]	MOVE     	R15 R1 ; R15 := R1
	53	[1445]	LOADK    	R16 K6 ; R16 := ".Ability"
	54	[1445]	MOVE     	R17 R8 ; R17 := R8
	55	[1445]	LOADK    	R18 K11 ; R18 := ".Icon"
	56	[1445]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	57	[1445]	LOADK    	R16 := 11.000000
	58	[1445]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	59	[1445]	MOVE     	R18 R12 ; R18 := R12
	60	[1445]	CALL     	R17 2 2 ; R17 := R17(R18)
	61	[1445]	NOT      	R17 R17 ; R17 := not R17
	62	[1445]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	63	[1445]	JMP      	89 ; PC := 89
	64	[1447]	SELF     	R13 R0 K5 ; R14 := R0; R13 := R0[0x20b98db3]
	65	[1447]	MOVE     	R15 R1 ; R15 := R1
	66	[1447]	LOADK    	R16 K6 ; R16 := ".Ability"
	67	[1447]	MOVE     	R17 R8 ; R17 := R8
	68	[1447]	LOADK    	R18 K7 ; R18 := ".Name.text"
	69	[1447]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	70	[1447]	LOADK    	R16 K13 ; R16 := ""
	71	[1447]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	72	[1448]	SELF     	R13 R0 K10 ; R14 := R0; R13 := R0[0x1cb415c1]
	73	[1448]	MOVE     	R15 R1 ; R15 := R1
	74	[1448]	LOADK    	R16 K6 ; R16 := ".Ability"
	75	[1448]	MOVE     	R17 R8 ; R17 := R8
	76	[1448]	LOADK    	R18 K11 ; R18 := ".Icon"
	77	[1448]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	78	[1448]	LOADNIL  	R16 R16 ; R16 := nil
	79	[1448]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	80	[1449]	SELF     	R13 R0 K12 ; R14 := R0; R13 := R0[0xaade900e]
	81	[1449]	MOVE     	R15 R1 ; R15 := R1
	82	[1449]	LOADK    	R16 K6 ; R16 := ".Ability"
	83	[1449]	MOVE     	R17 R8 ; R17 := R8
	84	[1449]	LOADK    	R18 K11 ; R18 := ".Icon"
	85	[1449]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	86	[1449]	LOADK    	R16 := 11.000000
	87	[1449]	OP_LOADBOOL	R17 0 0 ; R17 := false
	88	[1449]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	89	[1428]	FORLOOP  	R5 6 ; R5 += R7; if R5 <= R6 then begin PC := 6; R8 := R5 end
	90	[1452]	RETURN   	R4 2 ; return R4 
	91	[1453]	RETURN   	R0 1 ; return 

function #41 <?:1456,1482> (88 instructions, 352 bytes at 0000025274EE74E0)
4 params, 18 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[1457]	NEWTABLE 	R4 0 0 ; R4 := {}
	2	[1458]	LOADK    	R5 := 1.000000
	3	[1458]	LOADK    	R6 := 4.000000
	4	[1458]	LOADK    	R7 := 1.000000
	5	[1458]	FORPREP  	R5 86 ; R5 -= R7; PC := 86
	6	[1459]	LOADNIL  	R9 R9 ; R9 := nil
	7	[1460]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	8	[1460]	MOVE     	R11 R2 ; R11 := R2
	9	[1460]	CALL     	R10 2 2 ; R10 := R10(R11)
	10	[1460]	TEST     	R10 1 ; if R10 then PC := 16
	11	[1460]	JMP      	16 ; PC := 16
	12	[1461]	SELF     	R10 R2 K1 ; R11 := R2; R10 := R2[0xdaddfb73]
	13	[1461]	SUB      	R12 R8 K2 ; R12 := R8 - 1.000000
	14	[1461]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	15	[1461]	MOVE     	R9 R10 ; R9 := R10
	16	[1464]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	17	[1464]	MOVE     	R11 R9 ; R11 := R9
	18	[1464]	CALL     	R10 2 2 ; R10 := R10(R11)
	19	[1464]	TEST     	R10 1 ; if R10 then PC := 61
	20	[1464]	JMP      	61 ; PC := 61
	21	[1465]	SETTABLE 	R4 R8 R9 ; R4[R8] := R9
	22	[1467]	SELF     	R10 R9 K3 ; R11 := R9; R10 := R9[0xd3a9d01f]
	23	[1467]	CALL     	R10 2 2 ; R10 := R10(R11)
	24	[1468]	SELF     	R11 R0 K4 ; R12 := R0; R11 := R0[0x20b98db3]
	25	[1468]	MOVE     	R13 R1 ; R13 := R1
	26	[1468]	LOADK    	R14 K5 ; R14 := ".Ability"
	27	[1468]	MOVE     	R15 R8 ; R15 := R8
	28	[1468]	LOADK    	R16 K6 ; R16 := ".Name.text"
	29	[1468]	CONCAT   	R13 R13 R16 ; R13 := R13 .. R14 .. R15 .. R16
	30	[1468]	SELF     	R14 R10 K7 ; R15 := R10; R14 := R10[0x6d604ba7]
	31	[1468]	CALL     	R14 2 0 ; R14,... := R14(R15)
	32	[1468]	CALL     	R11 0 1 ; R11(R12,...)
	33	[1470]	SELF     	R11 R9 K8 ; R12 := R9; R11 := R9[0x056dcf06]
	34	[1470]	CALL     	R11 2 2 ; R11 := R11(R12)
	35	[1471]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	36	[1471]	MOVE     	R13 R11 ; R13 := R11
	37	[1471]	CALL     	R12 2 2 ; R12 := R12(R13)
	38	[1471]	TEST     	R12 1 ; if R12 then PC := 48
	39	[1471]	JMP      	48 ; PC := 48
	40	[1472]	SELF     	R12 R0 K9 ; R13 := R0; R12 := R0[0x1cb415c1]
	41	[1472]	MOVE     	R14 R1 ; R14 := R1
	42	[1472]	LOADK    	R15 K5 ; R15 := ".Ability"
	43	[1472]	MOVE     	R16 R8 ; R16 := R8
	44	[1472]	LOADK    	R17 K10 ; R17 := ".Icon"
	45	[1472]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	46	[1472]	MOVE     	R15 R11 ; R15 := R11
	47	[1472]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	48	[1474]	SELF     	R12 R0 K11 ; R13 := R0; R12 := R0[0xaade900e]
	49	[1474]	MOVE     	R14 R1 ; R14 := R1
	50	[1474]	LOADK    	R15 K5 ; R15 := ".Ability"
	51	[1474]	MOVE     	R16 R8 ; R16 := R8
	52	[1474]	LOADK    	R17 K10 ; R17 := ".Icon"
	53	[1474]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	54	[1474]	LOADK    	R15 := 11.000000
	55	[1474]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	56	[1474]	MOVE     	R17 R11 ; R17 := R11
	57	[1474]	CALL     	R16 2 2 ; R16 := R16(R17)
	58	[1474]	NOT      	R16 R16 ; R16 := not R16
	59	[1474]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	60	[1474]	JMP      	86 ; PC := 86
	61	[1476]	SELF     	R12 R0 K4 ; R13 := R0; R12 := R0[0x20b98db3]
	62	[1476]	MOVE     	R14 R1 ; R14 := R1
	63	[1476]	LOADK    	R15 K5 ; R15 := ".Ability"
	64	[1476]	MOVE     	R16 R8 ; R16 := R8
	65	[1476]	LOADK    	R17 K6 ; R17 := ".Name.text"
	66	[1476]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	67	[1476]	LOADK    	R15 K12 ; R15 := "/Lotus/Language/Menu/Empty_Precept"
	68	[1476]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	69	[1477]	SELF     	R12 R0 K9 ; R13 := R0; R12 := R0[0x1cb415c1]
	70	[1477]	MOVE     	R14 R1 ; R14 := R1
	71	[1477]	LOADK    	R15 K5 ; R15 := ".Ability"
	72	[1477]	MOVE     	R16 R8 ; R16 := R8
	73	[1477]	LOADK    	R17 K10 ; R17 := ".Icon"
	74	[1477]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	75	[1477]	LOADNIL  	R15 R15 ; R15 := nil
	76	[1477]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	77	[1478]	SELF     	R12 R0 K11 ; R13 := R0; R12 := R0[0xaade900e]
	78	[1478]	MOVE     	R14 R1 ; R14 := R1
	79	[1478]	LOADK    	R15 K5 ; R15 := ".Ability"
	80	[1478]	MOVE     	R16 R8 ; R16 := R8
	81	[1478]	LOADK    	R17 K10 ; R17 := ".Icon"
	82	[1478]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	83	[1478]	LOADK    	R15 := 11.000000
	84	[1478]	OP_LOADBOOL	R16 0 0 ; R16 := false
	85	[1478]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	86	[1458]	FORLOOP  	R5 6 ; R5 += R7; if R5 <= R6 then begin PC := 6; R8 := R5 end
	87	[1481]	RETURN   	R4 2 ; return R4 
	88	[1482]	RETURN   	R0 1 ; return 

function #42 <?:1485,1543> (23 instructions, 92 bytes at 0000025274EE7980)
1 param, 3 slots, 1 upvalue, 0 locals, 14 constants, 5 functions
	1	[1486]	NEWTABLE 	R1 0 9 ; R1 := {}
	2	[1488]	SETTABLE 	R1 K0 K1 ; R1["mIndex"] := 0.000000
	3	[1489]	SETTABLE 	R1 K2 K3 ; R1["mMovie"] := nil
	4	[1490]	SETTABLE 	R1 K4 K5 ; R1["mIsShowing"] := false
	5	[1491]	NEWTABLE 	R2 0 0 ; R2 := {}
	6	[1491]	SETTABLE 	R1 K6 R2 ; R1["mListItems"] := R2
	7	[1500]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	8	[1500]	SETTABLE 	R1 K7 R2 ; R1["Add"] := R2
	9	[1505]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	10	[1505]	SETTABLE 	R1 K8 R2 ; R1["Clear"] := R2
	11	[1509]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	12	[1509]	SETTABLE 	R1 K9 R2 ; R1["IsShowing"] := R2
	13	[1518]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	14	[1518]	SETTABLE 	R1 K10 R2 ; R1["Hide"] := R2
	15	[1539]	CLOSURE  	R2 4 ; R2 := closure(Function #5)
	16	[1539]	GETUPVAL 	R0 U0 ; R0 := U0
	17	[1539]	SETTABLE 	R1 K11 R2 ; R1["Show"] := R2
	18	[1541]	GETGLOBAL	R2 K12 ; R2 := _T
	19	[1541]	SETTABLE 	R2 K13 R1 ; R2["ContextMenu"] := R1
	20	[1542]	GETGLOBAL	R2 K12 ; R2 := _T
	21	[1542]	GETTABLE 	R2 R2 K13 ; R2 := R2["ContextMenu"]
	22	[1542]	SETTABLE 	R2 K2 R0 ; R2[0x1597ad56] := R0
	23	[1543]	RETURN   	R0 1 ; return 

function #43 <?:1546,1563> (30 instructions, 120 bytes at 0000025274EE8940)
1 param, 6 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[1547]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1547]	MOVE     	R2 R0 ; R2 := R0
	3	[1547]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1547]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[1547]	JMP      	8 ; PC := 8
	6	[1548]	LOADK    	R1 := 0.000000
	7	[1548]	RETURN   	R1 2 ; return R1 
	8	[1551]	GETTABLE 	R1 R0 K1 ; R1 := R0["mItemType"]
	9	[1552]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	10	[1552]	MOVE     	R3 R1 ; R3 := R1
	11	[1552]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[1552]	TEST     	R2 0 ; if not R2 then PC := 16
	13	[1552]	JMP      	16 ; PC := 16
	14	[1553]	LOADK    	R2 := 0.000000
	15	[1553]	RETURN   	R2 2 ; return R2 
	16	[1556]	GETTABLE 	R2 R0 K2 ; R2 := R0["mUpgradeVer"]
	17	[1556]	GETGLOBAL	R3 K3 ; R3 := 0x6c97a788
	18	[1556]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x1597ad56]
	19	[1556]	CALL     	R3 1 2 ; R3 := R3()
	20	[1556]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 24
	21	[1556]	JMP      	24 ; PC := 24
	22	[1557]	LOADK    	R2 := 0.000000
	23	[1557]	RETURN   	R2 2 ; return R2 
	24	[1561]	GETGLOBAL	R2 K5 ; R2 := 0xa94df70b
	25	[1561]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x8427bf69]
	26	[1561]	GETTABLE 	R4 R0 K7 ; R4 := R0["mXP"]
	27	[1561]	GETTABLE 	R5 R0 K1 ; R5 := R0["mItemType"]
	28	[1561]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	29	[1562]	RETURN   	R2 2 ; return R2 
	30	[1563]	RETURN   	R0 1 ; return 

function #44 <?:1566,1569> (6 instructions, 24 bytes at 0000025274EE8BF0)
1 param, 4 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[1567]	GETGLOBAL	R1 K0 ; R1 := 0xa94df70b
	2	[1567]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x792d6f59]
	3	[1567]	MOVE     	R3 R0 ; R3 := R0
	4	[1567]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[1568]	RETURN   	R1 2 ; return R1 
	6	[1569]	RETURN   	R0 1 ; return 

function #45 <?:1571,1573> (5 instructions, 20 bytes at 0000025274EE8D10)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1572]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1572]	MOVE     	R2 R0 ; R2 := R0
	3	[1572]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[1572]	RETURN   	R1 0 ; return R1,... 
	5	[1573]	RETURN   	R0 1 ; return 

function #46 <?:1576,1589> (27 instructions, 108 bytes at 0000025274EE8E00)
2 params, 7 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1577]	GETGLOBAL	R2 K0 ; R2 := 0x25d99d89
	2	[1579]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[1579]	JMP      	5 ; PC := 5
	4	[1580]	LOADK    	R1 := 1.000000
	5	[1583]	GETGLOBAL	R3 K2 ; R3 := 0xa94df70b
	6	[1583]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x99c4ef3a]
	7	[1583]	MOVE     	R5 R0 ; R5 := R0
	8	[1583]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	9	[1584]	GETGLOBAL	R4 K4 ; R4 := 0x6c97a788
	10	[1584]	GETTABLE 	R4 R4 K5 ; R4 := R4["MiscBin"]
	11	[1584]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 25
	12	[1584]	JMP      	25 ; PC := 25
	13	[1584]	LT       	0 R3 K6 ; if R3 >= 12.000000 then PC := 25
	14	[1584]	JMP      	25 ; PC := 25
	15	[1585]	SELF     	R4 R2 K7 ; R5 := R2; R4 := R2[0x25a6e75e]
	16	[1585]	CALL     	R4 2 2 ; R4 := R4(R5)
	17	[1585]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xb8a2d888]
	18	[1585]	MOVE     	R6 R3 ; R6 := R3
	19	[1585]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	20	[1585]	LE       	1 R1 R4 ; if R1 <= R4 then PC := 23
	21	[1585]	JMP      	23 ; PC := 23
	22	[1585]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 23
	23	[1585]	OP_LOADBOOL	R4 1 0 ; R4 := true
	24	[1585]	RETURN   	R4 2 ; return R4 
	25	[1588]	OP_LOADBOOL	R4 1 0 ; R4 := true
	26	[1588]	RETURN   	R4 2 ; return R4 
	27	[1589]	RETURN   	R0 1 ; return 

function #47 <?:1591,1607> (30 instructions, 120 bytes at 0000025274EE9060)
1 param, 6 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[1592]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1592]	MOVE     	R2 R0 ; R2 := R0
	3	[1592]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1592]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[1592]	JMP      	8 ; PC := 8
	6	[1593]	OP_LOADBOOL	R1 0 0 ; R1 := false
	7	[1593]	RETURN   	R1 2 ; return R1 
	8	[1596]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x9ed94a63]
	9	[1596]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[1598]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	11	[1598]	GETGLOBAL	R3 K2 ; R3 := 0x25d99d89
	12	[1598]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[1598]	TEST     	R2 0 ; if not R2 then PC := 20
	14	[1598]	JMP      	20 ; PC := 20
	15	[1600]	GETGLOBAL	R2 K3 ; R2 := 0x3d106989
	16	[1600]	LOADK    	R3 K4 ; R3 := "IsXPLocked: gGameData was nil"
	17	[1600]	CALL     	R2 2 1 ; R2(R3)
	18	[1601]	OP_LOADBOOL	R2 0 0 ; R2 := false
	19	[1601]	RETURN   	R2 2 ; return R2 
	20	[1604]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	21	[1604]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xefee6c91]
	22	[1604]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[1605]	LT       	1 R2 R1 ; if R2 < R1 then PC := 26
	24	[1605]	JMP      	26 ; PC := 26
	25	[1605]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 26
	26	[1605]	OP_LOADBOOL	R3 1 0 ; R3 := true
	27	[1606]	MOVE     	R4 R3 ; R4 := R3
	28	[1606]	MOVE     	R5 R1 ; R5 := R1
	29	[1606]	RETURN   	R4 3 ; return R4, R5 
	30	[1607]	RETURN   	R0 1 ; return 

function #48 <?:1609,1631> (37 instructions, 148 bytes at 0000025274EE92D0)
1 param, 9 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1610]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1610]	MOVE     	R2 R0 ; R2 := R0
	3	[1610]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1610]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[1610]	JMP      	8 ; PC := 8
	6	[1611]	OP_LOADBOOL	R1 0 0 ; R1 := false
	7	[1611]	RETURN   	R1 2 ; return R1 
	8	[1614]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x516e225c]
	9	[1614]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[1615]	OP_LOADBOOL	R2 0 0 ; R2 := false
	11	[1616]	LT       	0 K2 R1 ; if 0.000000 >= R1 then PC := 34
	12	[1616]	JMP      	34 ; PC := 34
	13	[1617]	GETGLOBAL	R3 K3 ; R3 := 0x25d99d89
	14	[1618]	SELF     	R4 R3 K4 ; R5 := R3; R4 := R3[0x62c81b76]
	15	[1618]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[1618]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x416005a4]
	17	[1618]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[1619]	LT       	1 R4 R1 ; if R4 < R1 then PC := 21
	19	[1619]	JMP      	21 ; PC := 21
	20	[1619]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 21
	21	[1619]	OP_LOADBOOL	R2 1 0 ; R2 := true
	22	[1621]	TEST     	R2 0 ; if not R2 then PC := 34
	23	[1621]	JMP      	34 ; PC := 34
	24	[1623]	SELF     	R5 R3 K6 ; R6 := R3; R5 := R3[0x7616e196]
	25	[1623]	SELF     	R7 R0 K7 ; R8 := R0; R7 := R0[0xef3662ab]
	26	[1623]	CALL     	R7 2 0 ; R7,... := R7(R8)
	27	[1623]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	28	[1624]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	29	[1624]	GETTABLE 	R7 R5 K8 ; R7 := R5["mSuit"]
	30	[1624]	CALL     	R6 2 2 ; R6 := R6(R7)
	31	[1624]	TEST     	R6 1 ; if R6 then PC := 34
	32	[1624]	JMP      	34 ; PC := 34
	33	[1625]	OP_LOADBOOL	R2 0 0 ; R2 := false
	34	[1630]	MOVE     	R6 R2 ; R6 := R2
	35	[1630]	MOVE     	R7 R1 ; R7 := R1
	36	[1630]	RETURN   	R6 3 ; return R6, R7 
	37	[1631]	RETURN   	R0 1 ; return 

function #49 <?:1633,1635> (10 instructions, 40 bytes at 0000025274EE9590)
5 params, 11 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1634]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[1634]	GETTABLE 	R5 R5 K0 ; R5 := R5[0xf76783e5]
	3	[1634]	MOVE     	R6 R0 ; R6 := R0
	4	[1634]	MOVE     	R7 R1 ; R7 := R1
	5	[1634]	MOVE     	R8 R2 ; R8 := R2
	6	[1634]	MOVE     	R9 R3 ; R9 := R3
	7	[1634]	MOVE     	R10 R4 ; R10 := R4
	8	[1634]	TAILCALL 	R5 6 0 ; R5,... := R5(R6,R7,R8,R9,R10)
	9	[1634]	RETURN   	R5 0 ; return R5,... 
	10	[1635]	RETURN   	R0 1 ; return 

function #50 <?:1637,1640> (17 instructions, 68 bytes at 0000025274EE96C0)
0 params, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1638]	GETGLOBAL	R0 K0 ; R0 := 0x7f5022cf
	2	[1638]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x04981ab3]
	3	[1638]	GETGLOBAL	R1 K2 ; R1 := 0xa94df70b
	4	[1638]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x2608b62f]
	5	[1638]	CALL     	R1 2 0 ; R1,... := R1(R2)
	6	[1638]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[1639]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	8	[1639]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xa5c556b9]
	9	[1639]	MOVE     	R2 R0 ; R2 := R0
	10	[1639]	LOADK    	R3 K5 ; R3 := "api.dev."
	11	[1639]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[1639]	EQ       	0 R1 K6 ; if R1 ~= nil then PC := 15
	13	[1639]	JMP      	15 ; PC := 15
	14	[1639]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[1639]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[1639]	RETURN   	R1 2 ; return R1 
	17	[1640]	RETURN   	R0 1 ; return 

function #51 <?:1641,1643> (4 instructions, 16 bytes at 0000025274EE98D0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1642]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1642]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1642]	RETURN   	R0 0 ; return R0,... 
	4	[1643]	RETURN   	R0 1 ; return 

function #52 <?:1645,1648> (17 instructions, 68 bytes at 0000025274EE99A0)
0 params, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1646]	GETGLOBAL	R0 K0 ; R0 := 0x7f5022cf
	2	[1646]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x04981ab3]
	3	[1646]	GETGLOBAL	R1 K2 ; R1 := 0xa94df70b
	4	[1646]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x2608b62f]
	5	[1646]	CALL     	R1 2 0 ; R1,... := R1(R2)
	6	[1646]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[1647]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	8	[1647]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xa5c556b9]
	9	[1647]	MOVE     	R2 R0 ; R2 := R0
	10	[1647]	LOADK    	R3 K5 ; R3 := "api.test."
	11	[1647]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[1647]	EQ       	0 R1 K6 ; if R1 ~= nil then PC := 15
	13	[1647]	JMP      	15 ; PC := 15
	14	[1647]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[1647]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[1647]	RETURN   	R1 2 ; return R1 
	17	[1648]	RETURN   	R0 1 ; return 

function #53 <?:1649,1651> (4 instructions, 16 bytes at 0000025274EE9BB0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1650]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1650]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1650]	RETURN   	R0 0 ; return R0,... 
	4	[1651]	RETURN   	R0 1 ; return 

function #54 <?:1653,1656> (17 instructions, 68 bytes at 0000025274EE9C80)
0 params, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1654]	GETGLOBAL	R0 K0 ; R0 := 0x7f5022cf
	2	[1654]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x04981ab3]
	3	[1654]	GETGLOBAL	R1 K2 ; R1 := 0xa94df70b
	4	[1654]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x2608b62f]
	5	[1654]	CALL     	R1 2 0 ; R1,... := R1(R2)
	6	[1654]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[1655]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	8	[1655]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xa5c556b9]
	9	[1655]	MOVE     	R2 R0 ; R2 := R0
	10	[1655]	LOADK    	R3 K5 ; R3 := "/localhost/"
	11	[1655]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[1655]	EQ       	0 R1 K6 ; if R1 ~= nil then PC := 15
	13	[1655]	JMP      	15 ; PC := 15
	14	[1655]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[1655]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[1655]	RETURN   	R1 2 ; return R1 
	17	[1656]	RETURN   	R0 1 ; return 

function #55 <?:1657,1659> (4 instructions, 16 bytes at 0000025274EE9E90)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1658]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1658]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1658]	RETURN   	R0 0 ; return R0,... 
	4	[1659]	RETURN   	R0 1 ; return 

function #56 <?:1661,1668> (17 instructions, 68 bytes at 0000025274EE9F60)
0 params, 2 slots, 3 upvalues, 0 locals, 0 constants, 0 functions
	1	[1662]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1662]	CALL     	R0 1 2 ; R0 := R0()
	3	[1662]	TEST     	R0 1 ; if R0 then PC := 13
	4	[1662]	JMP      	13 ; PC := 13
	5	[1663]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[1663]	CALL     	R0 1 2 ; R0 := R0()
	7	[1663]	TEST     	R0 1 ; if R0 then PC := 13
	8	[1663]	JMP      	13 ; PC := 13
	9	[1664]	GETUPVAL 	R0 U2 ; R0 := U2
	10	[1664]	CALL     	R0 1 2 ; R0 := R0()
	11	[1664]	TEST     	R0 0 ; if not R0 then PC := 15
	12	[1664]	JMP      	15 ; PC := 15
	13	[1665]	OP_LOADBOOL	R0 0 0 ; R0 := false
	14	[1665]	RETURN   	R0 2 ; return R0 
	15	[1667]	OP_LOADBOOL	R0 1 0 ; R0 := true
	16	[1667]	RETURN   	R0 2 ; return R0 
	17	[1668]	RETURN   	R0 1 ; return 

function #57 <?:1670,1683> (40 instructions, 160 bytes at 0000025274EEA0B0)
0 params, 3 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[1671]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1671]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[1671]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1671]	TEST     	R0 1 ; if R0 then PC := 38
	5	[1671]	JMP      	38 ; PC := 38
	6	[1672]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[1672]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[1672]	GETGLOBAL	R2 K3 ; R2 := gLotusGameRulesType
	9	[1672]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[1672]	TEST     	R0 1 ; if R0 then PC := 36
	11	[1672]	JMP      	36 ; PC := 36
	12	[1673]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	13	[1673]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	14	[1673]	GETGLOBAL	R2 K4 ; R2 := gLotusDojoGameRulesType
	15	[1673]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	16	[1673]	TEST     	R0 1 ; if R0 then PC := 36
	17	[1673]	JMP      	36 ; PC := 36
	18	[1674]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	19	[1674]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	20	[1674]	GETGLOBAL	R2 K5 ; R2 := gLotusBasePvpGameRulesType
	21	[1674]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	22	[1674]	TEST     	R0 1 ; if R0 then PC := 36
	23	[1674]	JMP      	36 ; PC := 36
	24	[1675]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	25	[1675]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	26	[1675]	GETGLOBAL	R2 K6 ; R2 := gLotusHubGameRulesType
	27	[1675]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	28	[1675]	TEST     	R0 1 ; if R0 then PC := 36
	29	[1675]	JMP      	36 ; PC := 36
	30	[1676]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	31	[1676]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	32	[1676]	GETGLOBAL	R2 K7 ; R2 := gLotusDuelGameRulesType
	33	[1676]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	34	[1676]	TEST     	R0 0 ; if not R0 then PC := 38
	35	[1676]	JMP      	38 ; PC := 38
	36	[1678]	OP_LOADBOOL	R0 1 0 ; R0 := true
	37	[1678]	RETURN   	R0 2 ; return R0 
	38	[1682]	OP_LOADBOOL	R0 0 0 ; R0 := false
	39	[1682]	RETURN   	R0 2 ; return R0 
	40	[1683]	RETURN   	R0 1 ; return 

function #58 <?:1685,1692> (27 instructions, 108 bytes at 0000025274EEA330)
0 params, 3 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[1686]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1686]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[1686]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1686]	TEST     	R0 0 ; if not R0 then PC := 9
	5	[1686]	JMP      	9 ; PC := 9
	6	[1687]	GETGLOBAL	R0 K2 ; R0 := 0xee5faf01
	7	[1687]	RETURN   	R0 2 ; return R0 
	8	[1687]	JMP      	23 ; PC := 23
	9	[1688]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	10	[1688]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xf2deaf69]
	11	[1688]	GETGLOBAL	R2 K4 ; R2 := gLotusHubGameRulesType
	12	[1688]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	13	[1688]	TEST     	R0 1 ; if R0 then PC := 19
	14	[1688]	JMP      	19 ; PC := 19
	15	[1688]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[1688]	CALL     	R0 1 2 ; R0 := R0()
	17	[1688]	TEST     	R0 0 ; if not R0 then PC := 23
	18	[1688]	JMP      	23 ; PC := 23
	19	[1689]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	20	[1689]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xd7e23b71]
	21	[1689]	TAILCALL 	R0 2 0 ; R0,... := R0(R1)
	22	[1689]	RETURN   	R0 0 ; return R0,... 
	23	[1691]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	24	[1691]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x5e35d4d6]
	25	[1691]	TAILCALL 	R0 2 0 ; R0,... := R0(R1)
	26	[1691]	RETURN   	R0 0 ; return R0,... 
	27	[1692]	RETURN   	R0 1 ; return 

function #59 <?:1694,1727> (55 instructions, 220 bytes at 0000025274EEA540)
0 params, 22 slots, 1 upvalue, 0 locals, 18 constants, 0 functions
	1	[1695]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[1696]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[1696]	CALL     	R1 1 2 ; R1 := R1()
	4	[1697]	SELF     	R2 R1 K0 ; R3 := R1; R2 := R1[0xc1dee03f]
	5	[1697]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[1698]	LOADK    	R3 := 1.000000
	7	[1698]	LEN      	R4 R2 ; R4 := # R2
	8	[1698]	LOADK    	R5 := 1.000000
	9	[1698]	FORPREP  	R3 53 ; R3 -= R5; PC := 53
	10	[1699]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	11	[1700]	GETTABLE 	R8 R7 K1 ; R8 := R7["name"]
	12	[1702]	LOADK    	R9 := 1.000000
	13	[1702]	GETTABLE 	R10 R7 K2 ; R10 := R7["sectors"]
	14	[1702]	LEN      	R10 R10 ; R10 := # R10
	15	[1702]	LOADK    	R11 := 1.000000
	16	[1702]	FORPREP  	R9 52 ; R9 -= R11; PC := 52
	17	[1703]	GETGLOBAL	R13 K3 ; R13 := 0xce225efa
	18	[1703]	LOADK    	R14 := 0.000000
	19	[1703]	CALL     	R13 2 1 ; R13(R14)
	20	[1705]	GETTABLE 	R13 R7 K2 ; R13 := R7["sectors"]
	21	[1705]	GETTABLE 	R13 R13 R12 ; R13 := R13[R12]
	22	[1707]	GETTABLE 	R14 R13 K4 ; R14 := R13["nodeType"]
	23	[1707]	EQ       	1 R14 K6 ; if R14 == 0.000000 then PC := 31
	24	[1707]	JMP      	31 ; PC := 31
	25	[1707]	GETTABLE 	R14 R13 K4 ; R14 := R13["nodeType"]
	26	[1707]	EQ       	1 R14 K7 ; if R14 == 4.000000 then PC := 31
	27	[1707]	JMP      	31 ; PC := 31
	28	[1707]	GETTABLE 	R14 R13 K4 ; R14 := R13["nodeType"]
	29	[1707]	EQ       	0 R14 K8 ; if R14 ~= 8.000000 then PC := 52
	30	[1707]	JMP      	52 ; PC := 52
	31	[1708]	GETTABLE 	R14 R13 K9 ; R14 := R13["mission"]
	32	[1709]	GETTABLE 	R15 R14 K10 ; R15 := R14["missionReward"]
	33	[1710]	GETTABLE 	R16 R15 K11 ; R16 := R15["randomizedItems"]
	34	[1711]	GETTABLE 	R17 R14 K12 ; R17 := R14["enemyCacheOverride"]
	35	[1713]	NEWTABLE 	R18 0 5 ; R18 := {}
	36	[1715]	GETTABLE 	R19 R13 K1 ; R19 := R13["name"]
	37	[1715]	SELF     	R19 R19 K13 ; R20 := R19; R19 := R19[0x6d604ba7]
	38	[1715]	CALL     	R19 2 2 ; R19 := R19(R20)
	39	[1715]	SETTABLE 	R18 K1 R19 ; R18["name"] := R19
	40	[1716]	GETTABLE 	R19 R13 K14 ; R19 := R13["locTag"]
	41	[1716]	SELF     	R19 R19 K13 ; R20 := R19; R19 := R19[0x6d604ba7]
	42	[1716]	CALL     	R19 2 2 ; R19 := R19(R20)
	43	[1716]	SETTABLE 	R18 K14 R19 ; R18["locTag"] := R19
	44	[1717]	SETTABLE 	R18 K15 R8 ; R18["regionLocTag"] := R8
	45	[1718]	SETTABLE 	R18 K11 R16 ; R18["randomizedItems"] := R16
	46	[1719]	SETTABLE 	R18 K12 R17 ; R18["enemyCacheOverride"] := R17
	47	[1721]	GETGLOBAL	R19 K16 ; R19 := 0x33bdd652
	48	[1721]	GETTABLE 	R19 R19 K17 ; R19 := R19[0x23d5322f]
	49	[1721]	MOVE     	R20 R0 ; R20 := R0
	50	[1721]	MOVE     	R21 R18 ; R21 := R18
	51	[1721]	CALL     	R19 3 1 ; R19(R20,R21)
	52	[1702]	FORLOOP  	R9 17 ; R9 += R11; if R9 <= R10 then begin PC := 17; R12 := R9 end
	53	[1698]	FORLOOP  	R3 10 ; R3 += R5; if R3 <= R4 then begin PC := 10; R6 := R3 end
	54	[1726]	RETURN   	R0 2 ; return R0 
	55	[1727]	RETURN   	R0 1 ; return 

function #60 <?:1729,1731> (4 instructions, 16 bytes at 0000025274EEAAE0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1730]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1730]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1730]	RETURN   	R0 0 ; return R0,... 
	4	[1731]	RETURN   	R0 1 ; return 

function #61 <?:1733,1739> (28 instructions, 112 bytes at 0000025274EEABB0)
0 params, 3 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[1734]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1734]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[1734]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1734]	TEST     	R0 1 ; if R0 then PC := 26
	5	[1734]	JMP      	26 ; PC := 26
	6	[1734]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[1734]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[1734]	GETGLOBAL	R2 K3 ; R2 := gLotusGameRulesType
	9	[1734]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[1734]	TEST     	R0 1 ; if R0 then PC := 24
	11	[1734]	JMP      	24 ; PC := 24
	12	[1734]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	13	[1734]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	14	[1734]	GETGLOBAL	R2 K4 ; R2 := gLotusDojoGameRulesType
	15	[1734]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	16	[1734]	TEST     	R0 1 ; if R0 then PC := 24
	17	[1734]	JMP      	24 ; PC := 24
	18	[1734]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	19	[1734]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	20	[1734]	GETGLOBAL	R2 K5 ; R2 := gLotusBasePvpGameRulesType
	21	[1734]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	22	[1734]	TEST     	R0 0 ; if not R0 then PC := 26
	23	[1734]	JMP      	26 ; PC := 26
	24	[1735]	OP_LOADBOOL	R0 1 0 ; R0 := true
	25	[1735]	RETURN   	R0 2 ; return R0 
	26	[1738]	OP_LOADBOOL	R0 0 0 ; R0 := false
	27	[1738]	RETURN   	R0 2 ; return R0 
	28	[1739]	RETURN   	R0 1 ; return 

function #62 <?:1741,1743> (4 instructions, 16 bytes at 0000025274EEADB0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1742]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1742]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1742]	RETURN   	R0 0 ; return R0,... 
	4	[1743]	RETURN   	R0 1 ; return 

function #63 <?:1745,1755> (31 instructions, 124 bytes at 0000025274EEAE80)
0 params, 3 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[1746]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1746]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[1746]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1746]	TEST     	R0 1 ; if R0 then PC := 29
	5	[1746]	JMP      	29 ; PC := 29
	6	[1747]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[1747]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[1747]	GETGLOBAL	R2 K3 ; R2 := gLotusPhotoBoothGameRulesType
	9	[1747]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[1747]	TEST     	R0 0 ; if not R0 then PC := 15
	11	[1747]	JMP      	15 ; PC := 15
	12	[1748]	OP_LOADBOOL	R0 0 0 ; R0 := false
	13	[1748]	RETURN   	R0 2 ; return R0 
	14	[1748]	JMP      	29 ; PC := 29
	15	[1749]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	16	[1749]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	17	[1749]	GETGLOBAL	R2 K4 ; R2 := gLotusGameRulesType
	18	[1749]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	19	[1749]	TEST     	R0 1 ; if R0 then PC := 27
	20	[1749]	JMP      	27 ; PC := 27
	21	[1749]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	22	[1749]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	23	[1749]	GETGLOBAL	R2 K5 ; R2 := gLotusBasePvpGameRulesType
	24	[1749]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	25	[1749]	TEST     	R0 0 ; if not R0 then PC := 29
	26	[1749]	JMP      	29 ; PC := 29
	27	[1750]	OP_LOADBOOL	R0 1 0 ; R0 := true
	28	[1750]	RETURN   	R0 2 ; return R0 
	29	[1754]	OP_LOADBOOL	R0 0 0 ; R0 := false
	30	[1754]	RETURN   	R0 2 ; return R0 
	31	[1755]	RETURN   	R0 1 ; return 

function #64 <?:1757,1759> (4 instructions, 16 bytes at 0000025274EEB0A0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1758]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1758]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1758]	RETURN   	R0 0 ; return R0,... 
	4	[1759]	RETURN   	R0 1 ; return 

function #65 <?:1761,1772> (36 instructions, 144 bytes at 0000025274EEB170)
0 params, 7 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[1762]	GETGLOBAL	R0 K0 ; R0 := 0x7ed0a956
	2	[1762]	LOADK    	R1 K1 ; R1 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
	3	[1762]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1763]	GETUPVAL 	R1 U0 ; R1 := U0
	5	[1763]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	6	[1763]	CALL     	R1 2 3 ; R1,R2 := R1(R2)
	7	[1764]	OP_LOADBOOL	R3 1 0 ; R3 := true
	8	[1765]	LOADNIL  	R4 R4 ; R4 := nil
	9	[1767]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	10	[1767]	GETGLOBAL	R6 K4 ; R6 := 0xbe190284
	11	[1767]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[1767]	TEST     	R5 1 ; if R5 then PC := 22
	13	[1767]	JMP      	22 ; PC := 22
	14	[1767]	GETUPVAL 	R5 U1 ; R5 := U1
	15	[1767]	CALL     	R5 1 2 ; R5 := R5()
	16	[1767]	TEST     	R5 0 ; if not R5 then PC := 22
	17	[1767]	JMP      	22 ; PC := 22
	18	[1768]	GETGLOBAL	R5 K4 ; R5 := 0xbe190284
	19	[1768]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0xef893aec]
	20	[1768]	CALL     	R5 2 2 ; R5 := R5(R6)
	21	[1768]	GETTABLE 	R4 R5 K6 ; R4 := R5["keyChainName"]
	22	[1771]	EQ       	0 R1 R0 ; if R1 ~= R0 then PC := 33
	23	[1771]	JMP      	33 ; PC := 33
	24	[1771]	LE       	0 R2 K7 ; if R2 > 13.000000 then PC := 33
	25	[1771]	JMP      	33 ; PC := 33
	26	[1771]	LT       	0 R2 K8 ; if R2 >= 5.000000 then PC := 34
	27	[1771]	JMP      	34 ; PC := 34
	28	[1771]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	29	[1771]	MOVE     	R6 R4 ; R6 := R4
	30	[1771]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[1771]	NOT      	R5 R5 ; R5 := not R5
	32	[1771]	JMP      	35 ; PC := 35
	33	[1771]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 34
	34	[1771]	OP_LOADBOOL	R5 1 0 ; R5 := true
	35	[1771]	RETURN   	R5 2 ; return R5 
	36	[1772]	RETURN   	R0 1 ; return 

function #66 <?:1774,1776> (4 instructions, 16 bytes at 0000025274EEB420)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1775]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1775]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1775]	RETURN   	R0 0 ; return R0,... 
	4	[1776]	RETURN   	R0 1 ; return 

function #67 <?:1778,1780> (4 instructions, 16 bytes at 0000025274EEB4F0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1779]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1779]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1779]	RETURN   	R0 0 ; return R0,... 
	4	[1780]	RETURN   	R0 1 ; return 

function #68 <?:1782,1784> (14 instructions, 56 bytes at 0000025274EEB5C0)
0 params, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[1783]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1783]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[1783]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1783]	TEST     	R0 1 ; if R0 then PC := 11
	5	[1783]	JMP      	11 ; PC := 11
	6	[1783]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[1783]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[1783]	GETGLOBAL	R2 K3 ; R2 := gLotusHubGameRulesType
	9	[1783]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[1783]	JMP      	13 ; PC := 13
	11	[1783]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 12
	12	[1783]	OP_LOADBOOL	R0 1 0 ; R0 := true
	13	[1783]	RETURN   	R0 2 ; return R0 
	14	[1784]	RETURN   	R0 1 ; return 

function #69 <?:1786,1788> (4 instructions, 16 bytes at 0000025274EEB740)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1787]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1787]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1787]	RETURN   	R0 0 ; return R0,... 
	4	[1788]	RETURN   	R0 1 ; return 

function #70 <?:1790,1792> (7 instructions, 28 bytes at 0000025274EEB810)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[1791]	GETGLOBAL	R1 K0 ; R1 := REGION_ID_DOJO
	2	[1791]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 5
	3	[1791]	JMP      	5 ; PC := 5
	4	[1791]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 5
	5	[1791]	OP_LOADBOOL	R1 1 0 ; R1 := true
	6	[1791]	RETURN   	R1 2 ; return R1 
	7	[1792]	RETURN   	R0 1 ; return 

function #71 <?:1794,1796> (5 instructions, 20 bytes at 0000025274EEB920)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1795]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1795]	MOVE     	R2 R0 ; R2 := R0
	3	[1795]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[1795]	RETURN   	R1 0 ; return R1,... 
	5	[1796]	RETURN   	R0 1 ; return 

function #72 <?:1798,1800> (16 instructions, 64 bytes at 0000025274EEBA10)
1 param, 2 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[1799]	GETGLOBAL	R1 K0 ; R1 := REGION_ID_VOID
	2	[1799]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 13
	3	[1799]	JMP      	13 ; PC := 13
	4	[1799]	GETGLOBAL	R1 K1 ; R1 := REGION_ID_DOJO
	5	[1799]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 13
	6	[1799]	JMP      	13 ; PC := 13
	7	[1799]	GETGLOBAL	R1 K2 ; R1 := REGION_ID_DARK_SECTOR
	8	[1799]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 13
	9	[1799]	JMP      	13 ; PC := 13
	10	[1799]	GETGLOBAL	R1 K3 ; R1 := REGION_ID_DEEP_SPACE
	11	[1799]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 14
	12	[1799]	JMP      	14 ; PC := 14
	13	[1799]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 14
	14	[1799]	OP_LOADBOOL	R1 1 0 ; R1 := true
	15	[1799]	RETURN   	R1 2 ; return R1 
	16	[1800]	RETURN   	R0 1 ; return 

function #73 <?:1802,1947> (353 instructions, 1412 bytes at 0000025274EEBB90)
3 params, 30 slots, 2 upvalues, 0 locals, 54 constants, 0 functions
	1	[1803]	TEST     	R1 1 ; if R1 then PC := 6
	2	[1803]	JMP      	6 ; PC := 6
	3	[1804]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[1804]	CALL     	R3 1 2 ; R3 := R3()
	5	[1804]	MOVE     	R1 R3 ; R1 := R3
	6	[1807]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	7	[1807]	MOVE     	R4 R1 ; R4 := R1
	8	[1807]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[1807]	TEST     	R3 1 ; if R3 then PC := 349
	10	[1807]	JMP      	349 ; PC := 349
	11	[1807]	EQ       	1 R0 K1 ; if R0 == nil then PC := 349
	12	[1807]	JMP      	349 ; PC := 349
	13	[1807]	EQ       	1 R0 K2 ; if R0 == "" then PC := 349
	14	[1807]	JMP      	349 ; PC := 349
	15	[1808]	LOADK    	R3 := 0.000000
	16	[1809]	LOADK    	R4 := 0.000000
	17	[1811]	GETGLOBAL	R5 K3 ; R5 := 0x7f5022cf
	18	[1811]	GETTABLE 	R5 R5 K4 ; R5 := R5[0xa5c556b9]
	19	[1811]	MOVE     	R6 R0 ; R6 := R0
	20	[1811]	GETGLOBAL	R7 K5 ; R7 := KEY_TAG
	21	[1811]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	22	[1812]	EQ       	1 R5 K1 ; if R5 == nil then PC := 60
	23	[1812]	JMP      	60 ; PC := 60
	24	[1813]	GETGLOBAL	R3 K6 ; R3 := KEY_FLAG
	25	[1815]	GETGLOBAL	R6 K7 ; R6 := _T
	26	[1815]	GETTABLE 	R6 R6 K8 ; R6 := R6["gSelectedRegionId"]
	27	[1815]	EQ       	1 R6 K1 ; if R6 == nil then PC := 35
	28	[1815]	JMP      	35 ; PC := 35
	29	[1815]	GETGLOBAL	R6 K7 ; R6 := _T
	30	[1815]	GETTABLE 	R6 R6 K8 ; R6 := R6["gSelectedRegionId"]
	31	[1815]	LT       	0 K9 R6 ; if 0.000000 >= R6 then PC := 35
	32	[1815]	JMP      	35 ; PC := 35
	33	[1816]	GETGLOBAL	R6 K7 ; R6 := _T
	34	[1816]	GETTABLE 	R4 R6 K8 ; R4 := R6["gSelectedRegionId"]
	35	[1819]	GETUPVAL 	R6 U1 ; R6 := U1
	36	[1819]	MOVE     	R7 R4 ; R7 := R4
	37	[1819]	CALL     	R6 2 2 ; R6 := R6(R7)
	38	[1819]	TEST     	R6 1 ; if R6 then PC := 60
	39	[1819]	JMP      	60 ; PC := 60
	40	[1821]	GETGLOBAL	R6 K10 ; R6 := 0xb009bbc6
	41	[1821]	GETGLOBAL	R7 K3 ; R7 := 0x7f5022cf
	42	[1821]	GETTABLE 	R7 R7 K11 ; R7 := R7[0x1a94c9cc]
	43	[1821]	MOVE     	R8 R0 ; R8 := R0
	44	[1821]	LOADK    	R9 := 1.000000
	45	[1821]	SUB      	R10 R5 K12 ; R10 := R5 - 1.000000
	46	[1821]	CALL     	R7 4 0 ; R7,... := R7(R8,R9,R10)
	47	[1821]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	48	[1822]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	49	[1822]	MOVE     	R8 R6 ; R8 := R6
	50	[1822]	CALL     	R7 2 2 ; R7 := R7(R8)
	51	[1822]	TEST     	R7 1 ; if R7 then PC := 60
	52	[1822]	JMP      	60 ; PC := 60
	53	[1823]	GETGLOBAL	R7 K13 ; R7 := 0x64fb1586
	54	[1823]	SELF     	R8 R6 K14 ; R9 := R6; R8 := R6[0x92608d86]
	55	[1823]	CALL     	R8 2 0 ; R8,... := R8(R9)
	56	[1823]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	57	[1824]	EQ       	1 R7 K2 ; if R7 == "" then PC := 60
	58	[1824]	JMP      	60 ; PC := 60
	59	[1825]	MOVE     	R0 R7 ; R0 := R7
	60	[1831]	GETGLOBAL	R8 K3 ; R8 := 0x7f5022cf
	61	[1831]	GETTABLE 	R8 R8 K4 ; R8 := R8[0xa5c556b9]
	62	[1831]	MOVE     	R9 R0 ; R9 := R0
	63	[1831]	GETGLOBAL	R10 K15 ; R10 := ALERT_TAG
	64	[1831]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	65	[1832]	EQ       	1 R8 K1 ; if R8 == nil then PC := 75
	66	[1832]	JMP      	75 ; PC := 75
	67	[1833]	GETGLOBAL	R9 K3 ; R9 := 0x7f5022cf
	68	[1833]	GETTABLE 	R9 R9 K11 ; R9 := R9[0x1a94c9cc]
	69	[1833]	MOVE     	R10 R0 ; R10 := R0
	70	[1833]	LOADK    	R11 := 1.000000
	71	[1833]	SUB      	R12 R8 K12 ; R12 := R8 - 1.000000
	72	[1833]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	73	[1833]	MOVE     	R0 R9 ; R0 := R9
	74	[1834]	GETGLOBAL	R3 K16 ; R3 := ALERT_FLAG
	75	[1837]	GETGLOBAL	R9 K3 ; R9 := 0x7f5022cf
	76	[1837]	GETTABLE 	R9 R9 K4 ; R9 := R9[0xa5c556b9]
	77	[1837]	MOVE     	R10 R0 ; R10 := R0
	78	[1837]	GETGLOBAL	R11 K17 ; R11 := NIGHTMARE_TAG
	79	[1837]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	80	[1838]	EQ       	1 R9 K1 ; if R9 == nil then PC := 90
	81	[1838]	JMP      	90 ; PC := 90
	82	[1839]	GETGLOBAL	R10 K3 ; R10 := 0x7f5022cf
	83	[1839]	GETTABLE 	R10 R10 K11 ; R10 := R10[0x1a94c9cc]
	84	[1839]	MOVE     	R11 R0 ; R11 := R0
	85	[1839]	LOADK    	R12 := 1.000000
	86	[1839]	SUB      	R13 R9 K12 ; R13 := R9 - 1.000000
	87	[1839]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	88	[1839]	MOVE     	R0 R10 ; R0 := R10
	89	[1840]	GETGLOBAL	R3 K18 ; R3 := NIGHTMARE_FLAG
	90	[1843]	GETGLOBAL	R10 K3 ; R10 := 0x7f5022cf
	91	[1843]	GETTABLE 	R10 R10 K4 ; R10 := R10[0xa5c556b9]
	92	[1843]	MOVE     	R11 R0 ; R11 := R0
	93	[1843]	GETGLOBAL	R12 K19 ; R12 := EVENT_TAG
	94	[1843]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	95	[1844]	EQ       	1 R10 K1 ; if R10 == nil then PC := 105
	96	[1844]	JMP      	105 ; PC := 105
	97	[1845]	GETGLOBAL	R11 K3 ; R11 := 0x7f5022cf
	98	[1845]	GETTABLE 	R11 R11 K11 ; R11 := R11[0x1a94c9cc]
	99	[1845]	MOVE     	R12 R0 ; R12 := R0
	100	[1845]	LOADK    	R13 := 1.000000
	101	[1845]	SUB      	R14 R10 K12 ; R14 := R10 - 1.000000
	102	[1845]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	103	[1845]	MOVE     	R0 R11 ; R0 := R11
	104	[1846]	GETGLOBAL	R3 K20 ; R3 := EVENT_FLAG
	105	[1849]	GETGLOBAL	R11 K3 ; R11 := 0x7f5022cf
	106	[1849]	GETTABLE 	R11 R11 K4 ; R11 := R11[0xa5c556b9]
	107	[1849]	MOVE     	R12 R0 ; R12 := R0
	108	[1849]	GETGLOBAL	R13 K21 ; R13 := PVP_TAG
	109	[1849]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	110	[1850]	EQ       	1 R11 K1 ; if R11 == nil then PC := 120
	111	[1850]	JMP      	120 ; PC := 120
	112	[1851]	GETGLOBAL	R12 K3 ; R12 := 0x7f5022cf
	113	[1851]	GETTABLE 	R12 R12 K11 ; R12 := R12[0x1a94c9cc]
	114	[1851]	MOVE     	R13 R0 ; R13 := R0
	115	[1851]	LOADK    	R14 := 1.000000
	116	[1851]	SUB      	R15 R11 K12 ; R15 := R11 - 1.000000
	117	[1851]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	118	[1851]	MOVE     	R0 R12 ; R0 := R12
	119	[1852]	GETGLOBAL	R3 K22 ; R3 := PVP_FLAG
	120	[1855]	GETGLOBAL	R12 K3 ; R12 := 0x7f5022cf
	121	[1855]	GETTABLE 	R12 R12 K4 ; R12 := R12[0xa5c556b9]
	122	[1855]	MOVE     	R13 R0 ; R13 := R0
	123	[1855]	GETGLOBAL	R14 K23 ; R14 := INVASION_ATTACKER_TAG
	124	[1855]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	125	[1856]	EQ       	1 R12 K1 ; if R12 == nil then PC := 135
	126	[1856]	JMP      	135 ; PC := 135
	127	[1857]	GETGLOBAL	R13 K3 ; R13 := 0x7f5022cf
	128	[1857]	GETTABLE 	R13 R13 K11 ; R13 := R13[0x1a94c9cc]
	129	[1857]	MOVE     	R14 R0 ; R14 := R0
	130	[1857]	LOADK    	R15 := 1.000000
	131	[1857]	SUB      	R16 R12 K12 ; R16 := R12 - 1.000000
	132	[1857]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	133	[1857]	MOVE     	R0 R13 ; R0 := R13
	134	[1858]	GETGLOBAL	R3 K24 ; R3 := INVASION_ATTACKER_FLAG
	135	[1861]	GETGLOBAL	R13 K3 ; R13 := 0x7f5022cf
	136	[1861]	GETTABLE 	R13 R13 K4 ; R13 := R13[0xa5c556b9]
	137	[1861]	MOVE     	R14 R0 ; R14 := R0
	138	[1861]	GETGLOBAL	R15 K25 ; R15 := INVASION_DEFENDER_TAG
	139	[1861]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	140	[1862]	EQ       	1 R13 K1 ; if R13 == nil then PC := 150
	141	[1862]	JMP      	150 ; PC := 150
	142	[1863]	GETGLOBAL	R14 K3 ; R14 := 0x7f5022cf
	143	[1863]	GETTABLE 	R14 R14 K11 ; R14 := R14[0x1a94c9cc]
	144	[1863]	MOVE     	R15 R0 ; R15 := R0
	145	[1863]	LOADK    	R16 := 1.000000
	146	[1863]	SUB      	R17 R13 K12 ; R17 := R13 - 1.000000
	147	[1863]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	148	[1863]	MOVE     	R0 R14 ; R0 := R14
	149	[1864]	GETGLOBAL	R3 K26 ; R3 := INVASION_DEFENDER_FLAG
	150	[1867]	GETGLOBAL	R14 K3 ; R14 := 0x7f5022cf
	151	[1867]	GETTABLE 	R14 R14 K4 ; R14 := R14[0xa5c556b9]
	152	[1867]	MOVE     	R15 R0 ; R15 := R0
	153	[1867]	GETGLOBAL	R16 K27 ; R16 := SYNDICATE_MISSION_TAG
	154	[1867]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	155	[1868]	EQ       	1 R14 K1 ; if R14 == nil then PC := 165
	156	[1868]	JMP      	165 ; PC := 165
	157	[1869]	GETGLOBAL	R15 K3 ; R15 := 0x7f5022cf
	158	[1869]	GETTABLE 	R15 R15 K11 ; R15 := R15[0x1a94c9cc]
	159	[1869]	MOVE     	R16 R0 ; R16 := R0
	160	[1869]	LOADK    	R17 := 1.000000
	161	[1869]	SUB      	R18 R14 K12 ; R18 := R14 - 1.000000
	162	[1869]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	163	[1869]	MOVE     	R0 R15 ; R0 := R15
	164	[1870]	GETGLOBAL	R3 K28 ; R3 := SYNDICATE_MISSION_FLAG
	165	[1873]	GETGLOBAL	R15 K3 ; R15 := 0x7f5022cf
	166	[1873]	GETTABLE 	R15 R15 K4 ; R15 := R15[0xa5c556b9]
	167	[1873]	MOVE     	R16 R0 ; R16 := R0
	168	[1873]	GETGLOBAL	R17 K29 ; R17 := SORTIE_MISSION_TAG
	169	[1873]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	170	[1874]	EQ       	1 R15 K1 ; if R15 == nil then PC := 180
	171	[1874]	JMP      	180 ; PC := 180
	172	[1875]	GETGLOBAL	R16 K3 ; R16 := 0x7f5022cf
	173	[1875]	GETTABLE 	R16 R16 K11 ; R16 := R16[0x1a94c9cc]
	174	[1875]	MOVE     	R17 R0 ; R17 := R0
	175	[1875]	LOADK    	R18 := 1.000000
	176	[1875]	SUB      	R19 R15 K12 ; R19 := R15 - 1.000000
	177	[1875]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	178	[1875]	MOVE     	R0 R16 ; R0 := R16
	179	[1876]	GETGLOBAL	R3 K30 ; R3 := SORTIE_MISSION_FLAG
	180	[1879]	GETGLOBAL	R16 K3 ; R16 := 0x7f5022cf
	181	[1879]	GETTABLE 	R16 R16 K4 ; R16 := R16[0xa5c556b9]
	182	[1879]	MOVE     	R17 R0 ; R17 := R0
	183	[1879]	GETGLOBAL	R18 K31 ; R18 := LITE_SORTIE_MISSION_TAG
	184	[1879]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	185	[1880]	EQ       	1 R16 K1 ; if R16 == nil then PC := 195
	186	[1880]	JMP      	195 ; PC := 195
	187	[1881]	GETGLOBAL	R17 K3 ; R17 := 0x7f5022cf
	188	[1881]	GETTABLE 	R17 R17 K11 ; R17 := R17[0x1a94c9cc]
	189	[1881]	MOVE     	R18 R0 ; R18 := R0
	190	[1881]	LOADK    	R19 := 1.000000
	191	[1881]	SUB      	R20 R16 K12 ; R20 := R16 - 1.000000
	192	[1881]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	193	[1881]	MOVE     	R0 R17 ; R0 := R17
	194	[1882]	GETGLOBAL	R3 K32 ; R3 := LITE_SORTIE_MISSION_FLAG
	195	[1885]	GETGLOBAL	R17 K3 ; R17 := 0x7f5022cf
	196	[1885]	GETTABLE 	R17 R17 K4 ; R17 := R17[0xa5c556b9]
	197	[1885]	MOVE     	R18 R0 ; R18 := R0
	198	[1885]	GETGLOBAL	R19 K33 ; R19 := HUB_TAG
	199	[1885]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	200	[1886]	EQ       	1 R17 K1 ; if R17 == nil then PC := 210
	201	[1886]	JMP      	210 ; PC := 210
	202	[1887]	GETGLOBAL	R18 K3 ; R18 := 0x7f5022cf
	203	[1887]	GETTABLE 	R18 R18 K11 ; R18 := R18[0x1a94c9cc]
	204	[1887]	MOVE     	R19 R0 ; R19 := R0
	205	[1887]	LOADK    	R20 := 1.000000
	206	[1887]	SUB      	R21 R17 K12 ; R21 := R17 - 1.000000
	207	[1887]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	208	[1887]	MOVE     	R0 R18 ; R0 := R18
	209	[1888]	GETGLOBAL	R3 K34 ; R3 := HUB_FLAG
	210	[1891]	GETGLOBAL	R18 K3 ; R18 := 0x7f5022cf
	211	[1891]	GETTABLE 	R18 R18 K4 ; R18 := R18[0xa5c556b9]
	212	[1891]	MOVE     	R19 R0 ; R19 := R0
	213	[1891]	GETGLOBAL	R20 K35 ; R20 := ACTIVE_MISSION_TAG
	214	[1891]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	215	[1892]	EQ       	1 R18 K1 ; if R18 == nil then PC := 225
	216	[1892]	JMP      	225 ; PC := 225
	217	[1893]	GETGLOBAL	R19 K3 ; R19 := 0x7f5022cf
	218	[1893]	GETTABLE 	R19 R19 K11 ; R19 := R19[0x1a94c9cc]
	219	[1893]	MOVE     	R20 R0 ; R20 := R0
	220	[1893]	LOADK    	R21 := 1.000000
	221	[1893]	SUB      	R22 R18 K12 ; R22 := R18 - 1.000000
	222	[1893]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	223	[1893]	MOVE     	R0 R19 ; R0 := R19
	224	[1894]	GETGLOBAL	R3 K36 ; R3 := ACTIVE_MISSION_FLAG
	225	[1897]	GETGLOBAL	R19 K3 ; R19 := 0x7f5022cf
	226	[1897]	GETTABLE 	R19 R19 K4 ; R19 := R19[0xa5c556b9]
	227	[1897]	MOVE     	R20 R0 ; R20 := R0
	228	[1897]	GETGLOBAL	R21 K37 ; R21 := KUVA_TOWER_MISSION_TAG
	229	[1897]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	230	[1898]	EQ       	1 R19 K1 ; if R19 == nil then PC := 240
	231	[1898]	JMP      	240 ; PC := 240
	232	[1899]	GETGLOBAL	R20 K3 ; R20 := 0x7f5022cf
	233	[1899]	GETTABLE 	R20 R20 K11 ; R20 := R20[0x1a94c9cc]
	234	[1899]	MOVE     	R21 R0 ; R21 := R0
	235	[1899]	LOADK    	R22 := 1.000000
	236	[1899]	SUB      	R23 R19 K12 ; R23 := R19 - 1.000000
	237	[1899]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	238	[1899]	MOVE     	R0 R20 ; R0 := R20
	239	[1900]	GETGLOBAL	R3 K38 ; R3 := KUVA_TOWER_MISSION_FLAG
	240	[1903]	GETGLOBAL	R20 K3 ; R20 := 0x7f5022cf
	241	[1903]	GETTABLE 	R20 R20 K4 ; R20 := R20[0xa5c556b9]
	242	[1903]	MOVE     	R21 R0 ; R21 := R0
	243	[1903]	GETGLOBAL	R22 K39 ; R22 := NEMESIS_MISSION_TAG
	244	[1903]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	245	[1904]	EQ       	1 R20 K1 ; if R20 == nil then PC := 255
	246	[1904]	JMP      	255 ; PC := 255
	247	[1905]	GETGLOBAL	R21 K3 ; R21 := 0x7f5022cf
	248	[1905]	GETTABLE 	R21 R21 K11 ; R21 := R21[0x1a94c9cc]
	249	[1905]	MOVE     	R22 R0 ; R22 := R0
	250	[1905]	LOADK    	R23 := 1.000000
	251	[1905]	SUB      	R24 R20 K12 ; R24 := R20 - 1.000000
	252	[1905]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	253	[1905]	MOVE     	R0 R21 ; R0 := R21
	254	[1906]	GETGLOBAL	R3 K40 ; R3 := NEMESIS_MISSION_FLAG
	255	[1909]	GETGLOBAL	R21 K3 ; R21 := 0x7f5022cf
	256	[1909]	GETTABLE 	R21 R21 K4 ; R21 := R21[0xa5c556b9]
	257	[1909]	MOVE     	R22 R0 ; R22 := R0
	258	[1909]	GETGLOBAL	R23 K41 ; R23 := ELITE_ALERT_TAG
	259	[1909]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	260	[1910]	EQ       	1 R21 K1 ; if R21 == nil then PC := 270
	261	[1910]	JMP      	270 ; PC := 270
	262	[1911]	GETGLOBAL	R22 K3 ; R22 := 0x7f5022cf
	263	[1911]	GETTABLE 	R22 R22 K11 ; R22 := R22[0x1a94c9cc]
	264	[1911]	MOVE     	R23 R0 ; R23 := R0
	265	[1911]	LOADK    	R24 := 1.000000
	266	[1911]	SUB      	R25 R21 K12 ; R25 := R21 - 1.000000
	267	[1911]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	268	[1911]	MOVE     	R0 R22 ; R0 := R22
	269	[1912]	GETGLOBAL	R3 K42 ; R3 := ELITE_ALERT_FLAG
	270	[1915]	GETGLOBAL	R22 K3 ; R22 := 0x7f5022cf
	271	[1915]	GETTABLE 	R22 R22 K4 ; R22 := R22[0xa5c556b9]
	272	[1915]	GETGLOBAL	R23 K3 ; R23 := 0x7f5022cf
	273	[1915]	GETTABLE 	R23 R23 K43 ; R23 := R23[0x04981ab3]
	274	[1915]	MOVE     	R24 R0 ; R24 := R0
	275	[1915]	CALL     	R23 2 2 ; R23 := R23(R24)
	276	[1915]	LOADK    	R24 K44 ; R24 := "junction"
	277	[1915]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	278	[1916]	EQ       	1 R22 K1 ; if R22 == nil then PC := 288
	279	[1916]	JMP      	288 ; PC := 288
	280	[1917]	GETGLOBAL	R23 K3 ; R23 := 0x7f5022cf
	281	[1917]	GETTABLE 	R23 R23 K11 ; R23 := R23[0x1a94c9cc]
	282	[1917]	MOVE     	R24 R0 ; R24 := R0
	283	[1917]	LOADK    	R25 := 1.000000
	284	[1917]	SUB      	R26 R22 K12 ; R26 := R22 - 1.000000
	285	[1917]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	286	[1917]	MOVE     	R0 R23 ; R0 := R23
	287	[1918]	GETGLOBAL	R3 K45 ; R3 := JUNCTION_FLAG
	288	[1921]	GETGLOBAL	R23 K3 ; R23 := 0x7f5022cf
	289	[1921]	GETTABLE 	R23 R23 K4 ; R23 := R23[0xa5c556b9]
	290	[1921]	MOVE     	R24 R0 ; R24 := R0
	291	[1921]	GETGLOBAL	R25 K46 ; R25 := HARD_DAILY_TAG
	292	[1921]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	293	[1922]	EQ       	1 R23 K1 ; if R23 == nil then PC := 304
	294	[1922]	JMP      	304 ; PC := 304
	295	[1923]	GETGLOBAL	R24 K3 ; R24 := 0x7f5022cf
	296	[1923]	GETTABLE 	R24 R24 K11 ; R24 := R24[0x1a94c9cc]
	297	[1923]	MOVE     	R25 R0 ; R25 := R0
	298	[1923]	LOADK    	R26 := 1.000000
	299	[1923]	SUB      	R27 R23 K12 ; R27 := R23 - 1.000000
	300	[1923]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	301	[1923]	MOVE     	R0 R24 ; R0 := R24
	302	[1924]	GETGLOBAL	R3 K47 ; R3 := HARD_DAILY_FLAG
	303	[1924]	JMP      	319 ; PC := 319
	304	[1926]	GETGLOBAL	R24 K3 ; R24 := 0x7f5022cf
	305	[1926]	GETTABLE 	R24 R24 K4 ; R24 := R24[0xa5c556b9]
	306	[1926]	MOVE     	R25 R0 ; R25 := R0
	307	[1926]	GETGLOBAL	R26 K48 ; R26 := HARD_MODE_TAG
	308	[1926]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	309	[1927]	EQ       	1 R24 K1 ; if R24 == nil then PC := 319
	310	[1927]	JMP      	319 ; PC := 319
	311	[1928]	GETGLOBAL	R25 K3 ; R25 := 0x7f5022cf
	312	[1928]	GETTABLE 	R25 R25 K11 ; R25 := R25[0x1a94c9cc]
	313	[1928]	MOVE     	R26 R0 ; R26 := R0
	314	[1928]	LOADK    	R27 := 1.000000
	315	[1928]	SUB      	R28 R24 K12 ; R28 := R24 - 1.000000
	316	[1928]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	317	[1928]	MOVE     	R0 R25 ; R0 := R25
	318	[1929]	GETGLOBAL	R3 K49 ; R3 := HARD_MODE_FLAG
	319	[1933]	GETGLOBAL	R25 K3 ; R25 := 0x7f5022cf
	320	[1933]	GETTABLE 	R25 R25 K4 ; R25 := R25[0xa5c556b9]
	321	[1933]	MOVE     	R26 R0 ; R26 := R0
	322	[1933]	GETGLOBAL	R27 K50 ; R27 := VOID_STORM_TAG
	323	[1933]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	324	[1934]	EQ       	1 R25 K1 ; if R25 == nil then PC := 334
	325	[1934]	JMP      	334 ; PC := 334
	326	[1935]	GETGLOBAL	R26 K3 ; R26 := 0x7f5022cf
	327	[1935]	GETTABLE 	R26 R26 K11 ; R26 := R26[0x1a94c9cc]
	328	[1935]	MOVE     	R27 R0 ; R27 := R0
	329	[1935]	LOADK    	R28 := 1.000000
	330	[1935]	SUB      	R29 R25 K12 ; R29 := R25 - 1.000000
	331	[1935]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	332	[1935]	MOVE     	R0 R26 ; R0 := R26
	333	[1936]	GETGLOBAL	R3 K51 ; R3 := VOID_STORM_FLAG
	334	[1939]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	335	[1939]	MOVE     	R27 R2 ; R27 := R2
	336	[1939]	CALL     	R26 2 2 ; R26 := R26(R27)
	337	[1939]	TEST     	R26 0 ; if not R26 then PC := 345
	338	[1939]	JMP      	345 ; PC := 345
	339	[1940]	SELF     	R26 R1 K52 ; R27 := R1; R26 := R1[0x3ad9ed31]
	340	[1940]	GETGLOBAL	R28 K53 ; R28 := 0x0469f296
	341	[1940]	MOVE     	R29 R0 ; R29 := R0
	342	[1940]	CALL     	R28 2 0 ; R28,... := R28(R29)
	343	[1940]	CALL     	R26 0 2 ; R26 := R26(R27,...)
	344	[1940]	MOVE     	R2 R26 ; R2 := R26
	345	[1943]	MOVE     	R26 R2 ; R26 := R2
	346	[1943]	MOVE     	R27 R3 ; R27 := R3
	347	[1943]	MOVE     	R28 R4 ; R28 := R4
	348	[1943]	RETURN   	R26 4 ; return R26, R27, R28 
	349	[1946]	LOADNIL  	R26 R26 ; R26 := nil
	350	[1946]	LOADK    	R27 := 0.000000
	351	[1946]	LOADK    	R28 := 0.000000
	352	[1946]	RETURN   	R26 4 ; return R26, R27, R28 
	353	[1947]	RETURN   	R0 1 ; return 

function #74 <?:1949,1951> (7 instructions, 28 bytes at 0000025274EECB50)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1950]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1950]	MOVE     	R4 R0 ; R4 := R0
	3	[1950]	MOVE     	R5 R1 ; R5 := R1
	4	[1950]	MOVE     	R6 R2 ; R6 := R2
	5	[1950]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	6	[1950]	RETURN   	R3 2 ; return R3 
	7	[1951]	RETURN   	R0 1 ; return 

function #75 <?:1953,2012> (109 instructions, 436 bytes at 0000025274EECC40)
3 params, 21 slots, 4 upvalues, 0 locals, 21 constants, 0 functions
	1	[1962]	TEST     	R1 1 ; if R1 then PC := 6
	2	[1962]	JMP      	6 ; PC := 6
	3	[1963]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[1963]	CALL     	R3 1 2 ; R3 := R3()
	5	[1963]	MOVE     	R1 R3 ; R1 := R3
	6	[1966]	GETUPVAL 	R3 U1 ; R3 := U1
	7	[1966]	MOVE     	R4 R0 ; R4 := R0
	8	[1966]	MOVE     	R5 R1 ; R5 := R1
	9	[1966]	MOVE     	R6 R2 ; R6 := R2
	10	[1966]	CALL     	R3 4 4 ; R3,R4,R5 := R3(R4,R5,R6)
	11	[1968]	GETGLOBAL	R6 K0 ; R6 := 0x7f5022cf
	12	[1968]	GETTABLE 	R6 R6 K1 ; R6 := R6[0xa5c556b9]
	13	[1968]	MOVE     	R7 R0 ; R7 := R0
	14	[1968]	GETGLOBAL	R8 K2 ; R8 := TAG_SEPERATOR
	15	[1968]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	16	[1969]	LOADNIL  	R7 R7 ; R7 := nil
	17	[1970]	EQ       	1 R6 K3 ; if R6 == nil then PC := 27
	18	[1970]	JMP      	27 ; PC := 27
	19	[1971]	GETGLOBAL	R8 K0 ; R8 := 0x7f5022cf
	20	[1971]	GETTABLE 	R8 R8 K4 ; R8 := R8[0x1a94c9cc]
	21	[1971]	MOVE     	R9 R0 ; R9 := R0
	22	[1971]	LOADK    	R10 := 1.000000
	23	[1971]	SUB      	R11 R6 K5 ; R11 := R6 - 1.000000
	24	[1971]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	25	[1971]	MOVE     	R7 R8 ; R7 := R8
	26	[1971]	JMP      	28 ; PC := 28
	27	[1973]	MOVE     	R7 R0 ; R7 := R0
	28	[1976]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	29	[1976]	MOVE     	R9 R3 ; R9 := R3
	30	[1976]	CALL     	R8 2 2 ; R8 := R8(R9)
	31	[1976]	TEST     	R8 1 ; if R8 then PC := 99
	32	[1976]	JMP      	99 ; PC := 99
	33	[1977]	GETTABLE 	R8 R3 K7 ; R8 := R3["region"]
	34	[1977]	ADD      	R8 R8 K5 ; R8 := R8 + 1.000000
	35	[1978]	GETUPVAL 	R9 U2 ; R9 := U2
	36	[1978]	GETTABLE 	R9 R9 K8 ; R9 := R9[0x06d055f9]
	37	[1978]	LT       	1 K9 R5 ; if 0.000000 < R5 then PC := 40
	38	[1978]	JMP      	40 ; PC := 40
	39	[1978]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 40
	40	[1978]	OP_LOADBOOL	R10 1 0 ; R10 := true
	41	[1978]	MOVE     	R11 R5 ; R11 := R5
	42	[1978]	MOVE     	R12 R8 ; R12 := R8
	43	[1978]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	44	[1978]	GETUPVAL 	R10 U3 ; R10 := U3
	45	[1978]	MUL      	R9 R9 R10 ; R9 := R9 * R10
	46	[1979]	EQ       	1 R7 K3 ; if R7 == nil then PC := 99
	47	[1979]	JMP      	99 ; PC := 99
	48	[1980]	LOADK    	R10 := 0.000000
	49	[1981]	LOADK    	R11 := 1.000000
	50	[1982]	GETGLOBAL	R12 K0 ; R12 := 0x7f5022cf
	51	[1982]	GETTABLE 	R12 R12 K10 ; R12 := R12[0x41e2ae25]
	52	[1982]	MOVE     	R13 R7 ; R13 := R7
	53	[1982]	CALL     	R12 2 2 ; R12 := R12(R13)
	54	[1982]	LOADK    	R13 := 1.000000
	55	[1982]	LOADK    	R14 := -1.000000
	56	[1982]	FORPREP  	R12 72 ; R12 -= R14; PC := 72
	57	[1983]	GETGLOBAL	R16 K11 ; R16 := 0x03f57322
	58	[1983]	GETGLOBAL	R17 K0 ; R17 := 0x7f5022cf
	59	[1983]	GETTABLE 	R17 R17 K4 ; R17 := R17[0x1a94c9cc]
	60	[1983]	MOVE     	R18 R7 ; R18 := R7
	61	[1983]	MOVE     	R19 R15 ; R19 := R15
	62	[1983]	MOVE     	R20 R15 ; R20 := R15
	63	[1983]	CALL     	R17 4 0 ; R17,... := R17(R18,R19,R20)
	64	[1983]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	65	[1984]	EQ       	1 R16 K3 ; if R16 == nil then PC := 73
	66	[1984]	JMP      	73 ; PC := 73
	67	[1985]	MUL      	R17 R16 R11 ; R17 := R16 * R11
	68	[1985]	ADD      	R10 R10 R17 ; R10 := R10 + R17
	69	[1986]	MUL      	R11 R11 K12 ; R11 := R11 * 10.000000
	70	[1986]	JMP      	72 ; PC := 72
	71	[1988]	JMP      	73 ; PC := 73
	72	[1982]	FORLOOP  	R12 57 ; R12 += R14; if R12 <= R13 then begin PC := 57; R15 := R12 end
	73	[1992]	EQ       	0 R10 K9 ; if R10 ~= 0.000000 then PC := 82
	74	[1992]	JMP      	82 ; PC := 82
	75	[1992]	GETGLOBAL	R17 K13 ; R17 := KEY_FLAG
	76	[1992]	EQ       	0 R4 R17 ; if R4 ~= R17 then PC := 82
	77	[1992]	JMP      	82 ; PC := 82
	78	[1993]	SELF     	R17 R1 K14 ; R18 := R1; R17 := R1[0x4e163aa4]
	79	[1993]	MOVE     	R19 R7 ; R19 := R7
	80	[1993]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	81	[1993]	MOVE     	R10 R17 ; R10 := R17
	82	[1997]	EQ       	0 R8 K15 ; if R8 ~= 16.000000 then PC := 96
	83	[1997]	JMP      	96 ; PC := 96
	84	[1997]	EQ       	1 R10 K12 ; if R10 == 10.000000 then PC := 88
	85	[1997]	JMP      	88 ; PC := 88
	86	[1997]	EQ       	0 R10 K16 ; if R10 ~= 11.000000 then PC := 96
	87	[1997]	JMP      	96 ; PC := 96
	88	[1997]	GETGLOBAL	R17 K0 ; R17 := 0x7f5022cf
	89	[1997]	GETTABLE 	R17 R17 K1 ; R17 := R17[0xa5c556b9]
	90	[1997]	MOVE     	R18 R7 ; R18 := R7
	91	[1997]	LOADK    	R19 K17 ; R19 := "ClanNode"
	92	[1997]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	93	[1997]	TEST     	R17 0 ; if not R17 then PC := 96
	94	[1997]	JMP      	96 ; PC := 96
	95	[1998]	ADD      	R10 R10 K18 ; R10 := R10 + 80.000000
	96	[2001]	ADD      	R17 R9 R10 ; R17 := R9 + R10
	97	[2001]	ADD      	R17 R17 R4 ; R17 := R17 + R4
	98	[2001]	RETURN   	R17 2 ; return R17 
	99	[2006]	GETGLOBAL	R17 K19 ; R17 := _T
	100	[2006]	GETTABLE 	R17 R17 K20 ; R17 := R17["gSelectedRegionId"]
	101	[2007]	EQ       	1 R17 K3 ; if R17 == nil then PC := 105
	102	[2007]	JMP      	105 ; PC := 105
	103	[2007]	LE       	0 R17 K9 ; if R17 > 0.000000 then PC := 106
	104	[2007]	JMP      	106 ; PC := 106
	105	[2008]	LOADK    	R17 := 1.000000
	106	[2011]	GETUPVAL 	R18 U3 ; R18 := U3
	107	[2011]	MUL      	R18 R17 R18 ; R18 := R17 * R18
	108	[2011]	RETURN   	R18 2 ; return R18 
	109	[2012]	RETURN   	R0 1 ; return 

function #76 <?:2014,2016> (7 instructions, 28 bytes at 0000025274EED240)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2015]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[2015]	MOVE     	R4 R0 ; R4 := R0
	3	[2015]	MOVE     	R5 R1 ; R5 := R1
	4	[2015]	MOVE     	R6 R2 ; R6 := R2
	5	[2015]	TAILCALL 	R3 4 0 ; R3,... := R3(R4,R5,R6)
	6	[2015]	RETURN   	R3 0 ; return R3,... 
	7	[2016]	RETURN   	R0 1 ; return 

function #77 <?:2018,2020> (3 instructions, 12 bytes at 0000025274EED330)
0 params, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2019]	GETGLOBAL	R0 K0 ; R0 := REGION_ID_SIMULACRUM
	2	[2019]	RETURN   	R0 2 ; return R0 
	3	[2020]	RETURN   	R0 1 ; return 

function #78 <?:2022,2024> (7 instructions, 28 bytes at 0000025274EED420)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2023]	GETGLOBAL	R1 K0 ; R1 := REGION_ID_SIMULACRUM
	2	[2023]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 5
	3	[2023]	JMP      	5 ; PC := 5
	4	[2023]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 5
	5	[2023]	OP_LOADBOOL	R1 1 0 ; R1 := true
	6	[2023]	RETURN   	R1 2 ; return R1 
	7	[2024]	RETURN   	R0 1 ; return 

function #79 <?:2026,2028> (3 instructions, 12 bytes at 0000025274EED530)
0 params, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2027]	GETGLOBAL	R0 K0 ; R0 := REGION_ID_PHOTOBOOTH
	2	[2027]	RETURN   	R0 2 ; return R0 
	3	[2028]	RETURN   	R0 1 ; return 

function #80 <?:2030,2032> (7 instructions, 28 bytes at 0000025274EED620)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2031]	GETGLOBAL	R1 K0 ; R1 := REGION_ID_PHOTOBOOTH
	2	[2031]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 5
	3	[2031]	JMP      	5 ; PC := 5
	4	[2031]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 5
	5	[2031]	OP_LOADBOOL	R1 1 0 ; R1 := true
	6	[2031]	RETURN   	R1 2 ; return R1 
	7	[2032]	RETURN   	R0 1 ; return 

function #81 <?:2034,2037> (10 instructions, 40 bytes at 0000025274EED730)
1 param, 3 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[2035]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[2035]	MOVE     	R2 R0 ; R2 := R0
	3	[2035]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2035]	MOVE     	R0 R1 ; R0 := R1
	5	[2036]	GETGLOBAL	R1 K1 ; R1 := REGION_ID_PVP
	6	[2036]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[2036]	MUL      	R1 R1 R2 ; R1 := R1 * R2
	8	[2036]	ADD      	R1 R1 R0 ; R1 := R1 + R0
	9	[2036]	RETURN   	R1 2 ; return R1 
	10	[2037]	RETURN   	R0 1 ; return 

function #82 <?:2039,2041> (5 instructions, 20 bytes at 0000025274EED870)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[2040]	GETGLOBAL	R0 K0 ; R0 := REGION_ID_CLAN_DOJO
	2	[2040]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[2040]	MUL      	R0 R0 R1 ; R0 := R0 * R1
	4	[2040]	RETURN   	R0 2 ; return R0 
	5	[2041]	RETURN   	R0 1 ; return 

function #83 <?:2043,2045> (12 instructions, 48 bytes at 0000025274EED980)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2044]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2044]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2044]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2044]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2044]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2044]	GETGLOBAL	R2 K2 ; R2 := REGION_ID_CLAN_DOJO
	7	[2044]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 10
	8	[2044]	JMP      	10 ; PC := 10
	9	[2044]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 10
	10	[2044]	OP_LOADBOOL	R1 1 0 ; R1 := true
	11	[2044]	RETURN   	R1 2 ; return R1 
	12	[2045]	RETURN   	R0 1 ; return 

function #84 <?:2047,2049> (5 instructions, 20 bytes at 0000025274EEDAD0)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[2048]	GETGLOBAL	R0 K0 ; R0 := REGION_ID_DOJO_DUEL
	2	[2048]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[2048]	MUL      	R0 R0 R1 ; R0 := R0 * R1
	4	[2048]	RETURN   	R0 2 ; return R0 
	5	[2049]	RETURN   	R0 1 ; return 

function #85 <?:2051,2053> (12 instructions, 48 bytes at 0000025274EEDBE0)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2052]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2052]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2052]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2052]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2052]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2052]	GETGLOBAL	R2 K2 ; R2 := REGION_ID_DOJO_DUEL
	7	[2052]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 10
	8	[2052]	JMP      	10 ; PC := 10
	9	[2052]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 10
	10	[2052]	OP_LOADBOOL	R1 1 0 ; R1 := true
	11	[2052]	RETURN   	R1 2 ; return R1 
	12	[2053]	RETURN   	R0 1 ; return 

function #86 <?:2055,2057> (17 instructions, 68 bytes at 0000025274EEDD30)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2056]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2056]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2056]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2056]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2056]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2056]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2056]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2056]	GETGLOBAL	R3 K2 ; R3 := ALERT_FLAG
	9	[2056]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2056]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2056]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2056]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2056]	JMP      	15 ; PC := 15
	14	[2056]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2056]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2056]	RETURN   	R1 2 ; return R1 
	17	[2057]	RETURN   	R0 1 ; return 

function #87 <?:2059,2061> (5 instructions, 20 bytes at 0000025274EEDEC0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2060]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2060]	MOVE     	R2 R0 ; R2 := R0
	3	[2060]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2060]	RETURN   	R1 2 ; return R1 
	5	[2061]	RETURN   	R0 1 ; return 

function #88 <?:2063,2065> (17 instructions, 68 bytes at 0000025274EEDFB0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2064]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2064]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2064]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2064]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2064]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2064]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2064]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2064]	GETGLOBAL	R3 K2 ; R3 := NIGHTMARE_FLAG
	9	[2064]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2064]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2064]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2064]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2064]	JMP      	15 ; PC := 15
	14	[2064]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2064]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2064]	RETURN   	R1 2 ; return R1 
	17	[2065]	RETURN   	R0 1 ; return 

function #89 <?:2067,2069> (5 instructions, 20 bytes at 0000025274EEE140)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2068]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2068]	MOVE     	R2 R0 ; R2 := R0
	3	[2068]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2068]	RETURN   	R1 2 ; return R1 
	5	[2069]	RETURN   	R0 1 ; return 

function #90 <?:2071,2073> (17 instructions, 68 bytes at 0000025274EEE230)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2072]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2072]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2072]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2072]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2072]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2072]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2072]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2072]	GETGLOBAL	R3 K2 ; R3 := EVENT_FLAG
	9	[2072]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2072]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2072]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2072]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2072]	JMP      	15 ; PC := 15
	14	[2072]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2072]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2072]	RETURN   	R1 2 ; return R1 
	17	[2073]	RETURN   	R0 1 ; return 

function #91 <?:2075,2077> (5 instructions, 20 bytes at 0000025274EEE3C0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2076]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2076]	MOVE     	R2 R0 ; R2 := R0
	3	[2076]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2076]	RETURN   	R1 2 ; return R1 
	5	[2077]	RETURN   	R0 1 ; return 

function #92 <?:2079,2081> (17 instructions, 68 bytes at 0000025274EEE4B0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2080]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2080]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2080]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2080]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2080]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2080]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2080]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2080]	GETGLOBAL	R3 K2 ; R3 := INVASION_ATTACKER_FLAG
	9	[2080]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2080]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2080]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2080]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2080]	JMP      	15 ; PC := 15
	14	[2080]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2080]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2080]	RETURN   	R1 2 ; return R1 
	17	[2081]	RETURN   	R0 1 ; return 

function #93 <?:2083,2085> (17 instructions, 68 bytes at 0000025274EEE640)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2084]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2084]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2084]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2084]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2084]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2084]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2084]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2084]	GETGLOBAL	R3 K2 ; R3 := INVASION_DEFENDER_FLAG
	9	[2084]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2084]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2084]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2084]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2084]	JMP      	15 ; PC := 15
	14	[2084]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2084]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2084]	RETURN   	R1 2 ; return R1 
	17	[2085]	RETURN   	R0 1 ; return 

function #94 <?:2087,2089> (17 instructions, 68 bytes at 0000025274EEE7D0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2088]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2088]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2088]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2088]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2088]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2088]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2088]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2088]	GETGLOBAL	R3 K2 ; R3 := PVP_FLAG
	9	[2088]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2088]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2088]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2088]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2088]	JMP      	15 ; PC := 15
	14	[2088]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2088]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2088]	RETURN   	R1 2 ; return R1 
	17	[2089]	RETURN   	R0 1 ; return 

function #95 <?:2091,2093> (5 instructions, 20 bytes at 0000025274EEE960)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2092]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2092]	MOVE     	R2 R0 ; R2 := R0
	3	[2092]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2092]	RETURN   	R1 2 ; return R1 
	5	[2093]	RETURN   	R0 1 ; return 

function #96 <?:2095,2098> (17 instructions, 68 bytes at 0000025274EEEA50)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2096]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2096]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2096]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2096]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2096]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2097]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2097]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2097]	GETGLOBAL	R3 K2 ; R3 := SYNDICATE_MISSION_FLAG
	9	[2097]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2097]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2097]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2097]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2097]	JMP      	15 ; PC := 15
	14	[2097]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2097]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2097]	RETURN   	R2 2 ; return R2 
	17	[2098]	RETURN   	R0 1 ; return 

function #97 <?:2100,2102> (5 instructions, 20 bytes at 0000025274EEEBE0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2101]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2101]	MOVE     	R2 R0 ; R2 := R0
	3	[2101]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2101]	RETURN   	R1 2 ; return R1 
	5	[2102]	RETURN   	R0 1 ; return 

function #98 <?:2104,2107> (17 instructions, 68 bytes at 0000025274EEECD0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2105]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2105]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2105]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2105]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2105]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2106]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2106]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2106]	GETGLOBAL	R3 K2 ; R3 := SORTIE_MISSION_FLAG
	9	[2106]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2106]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2106]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2106]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2106]	JMP      	15 ; PC := 15
	14	[2106]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2106]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2106]	RETURN   	R2 2 ; return R2 
	17	[2107]	RETURN   	R0 1 ; return 

function #99 <?:2109,2111> (5 instructions, 20 bytes at 0000025274EEEE60)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2110]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2110]	MOVE     	R2 R0 ; R2 := R0
	3	[2110]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[2110]	RETURN   	R1 0 ; return R1,... 
	5	[2111]	RETURN   	R0 1 ; return 

function #100 <?:2113,2116> (17 instructions, 68 bytes at 0000025274EEEF50)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2114]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2114]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2114]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2114]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2114]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2115]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2115]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2115]	GETGLOBAL	R3 K2 ; R3 := LITE_SORTIE_MISSION_FLAG
	9	[2115]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2115]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2115]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2115]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2115]	JMP      	15 ; PC := 15
	14	[2115]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2115]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2115]	RETURN   	R2 2 ; return R2 
	17	[2116]	RETURN   	R0 1 ; return 

function #101 <?:2118,2121> (17 instructions, 68 bytes at 0000025274EEF0E0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2119]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2119]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2119]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2119]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2119]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2120]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2120]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2120]	GETGLOBAL	R3 K2 ; R3 := HUB_FLAG
	9	[2120]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2120]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2120]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2120]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2120]	JMP      	15 ; PC := 15
	14	[2120]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2120]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2120]	RETURN   	R2 2 ; return R2 
	17	[2121]	RETURN   	R0 1 ; return 

function #102 <?:2123,2125> (5 instructions, 20 bytes at 0000025274EEF270)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2124]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2124]	MOVE     	R2 R0 ; R2 := R0
	3	[2124]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2124]	RETURN   	R1 2 ; return R1 
	5	[2125]	RETURN   	R0 1 ; return 

function #103 <?:2127,2130> (17 instructions, 68 bytes at 0000025274EEF360)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2128]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2128]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2128]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2128]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2128]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2129]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2129]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2129]	GETGLOBAL	R3 K2 ; R3 := ACTIVE_MISSION_FLAG
	9	[2129]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2129]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2129]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2129]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2129]	JMP      	15 ; PC := 15
	14	[2129]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2129]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2129]	RETURN   	R2 2 ; return R2 
	17	[2130]	RETURN   	R0 1 ; return 

function #104 <?:2132,2135> (17 instructions, 68 bytes at 0000025274EEF4F0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2133]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2133]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2133]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2133]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2133]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2134]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2134]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2134]	GETGLOBAL	R3 K2 ; R3 := KUVA_TOWER_MISSION_FLAG
	9	[2134]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2134]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2134]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2134]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2134]	JMP      	15 ; PC := 15
	14	[2134]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2134]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2134]	RETURN   	R2 2 ; return R2 
	17	[2135]	RETURN   	R0 1 ; return 

function #105 <?:2137,2140> (17 instructions, 68 bytes at 0000025274EEF680)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2138]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2138]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2138]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2138]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2138]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2139]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2139]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2139]	GETGLOBAL	R3 K2 ; R3 := JUNCTION_FLAG
	9	[2139]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2139]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2139]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2139]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2139]	JMP      	15 ; PC := 15
	14	[2139]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2139]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2139]	RETURN   	R2 2 ; return R2 
	17	[2140]	RETURN   	R0 1 ; return 

function #106 <?:2142,2144> (5 instructions, 20 bytes at 0000025274EEF810)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2143]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2143]	MOVE     	R2 R0 ; R2 := R0
	3	[2143]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2143]	RETURN   	R1 2 ; return R1 
	5	[2144]	RETURN   	R0 1 ; return 

function #107 <?:2146,2150> (11 instructions, 44 bytes at 0000025274EEF900)
1 param, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[2149]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2149]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2149]	DIV      	R2 R0 K2 ; R2 := R0 / 100.000000
	4	[2149]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[2149]	MOD      	R1 R1 K3 ; R1 := R1 % 10.000000
	6	[2149]	EQ       	1 R1 K4 ; if R1 == 5.000000 then PC := 9
	7	[2149]	JMP      	9 ; PC := 9
	8	[2149]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 9
	9	[2149]	OP_LOADBOOL	R1 1 0 ; R1 := true
	10	[2149]	RETURN   	R1 2 ; return R1 
	11	[2150]	RETURN   	R0 1 ; return 

function #108 <?:2152,2155> (17 instructions, 68 bytes at 0000025274EEFA70)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2153]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2153]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2153]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2153]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2153]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2154]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2154]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2154]	GETGLOBAL	R3 K2 ; R3 := KEY_FLAG
	9	[2154]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2154]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2154]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2154]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2154]	JMP      	15 ; PC := 15
	14	[2154]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2154]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2154]	RETURN   	R2 2 ; return R2 
	17	[2155]	RETURN   	R0 1 ; return 

function #109 <?:2157,2159> (5 instructions, 20 bytes at 0000025274EEFC00)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2158]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2158]	MOVE     	R2 R0 ; R2 := R0
	3	[2158]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2158]	RETURN   	R1 2 ; return R1 
	5	[2159]	RETURN   	R0 1 ; return 

function #110 <?:2161,2164> (17 instructions, 68 bytes at 0000025274EEFCF0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2162]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2162]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2162]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2162]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2162]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2163]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2163]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2163]	GETGLOBAL	R3 K2 ; R3 := HARD_MODE_FLAG
	9	[2163]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2163]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2163]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2163]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2163]	JMP      	15 ; PC := 15
	14	[2163]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2163]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2163]	RETURN   	R2 2 ; return R2 
	17	[2164]	RETURN   	R0 1 ; return 

function #111 <?:2166,2168> (5 instructions, 20 bytes at 0000025274EEFE80)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2167]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2167]	MOVE     	R2 R0 ; R2 := R0
	3	[2167]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2167]	RETURN   	R1 2 ; return R1 
	5	[2168]	RETURN   	R0 1 ; return 

function #112 <?:2170,2175> (23 instructions, 92 bytes at 0000025274EEFF70)
0 params, 3 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[2171]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2171]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[2171]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2171]	TEST     	R0 1 ; if R0 then PC := 21
	5	[2171]	JMP      	21 ; PC := 21
	6	[2171]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[2171]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[2171]	GETGLOBAL	R2 K3 ; R2 := gLotusGameRulesType
	9	[2171]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[2171]	TEST     	R0 0 ; if not R0 then PC := 21
	11	[2171]	JMP      	21 ; PC := 21
	12	[2172]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	13	[2172]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xef893aec]
	14	[2172]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[2172]	GETTABLE 	R0 R0 K5 ; R0 := R0["tier"]
	16	[2172]	LT       	1 K6 R0 ; if 0.000000 < R0 then PC := 19
	17	[2172]	JMP      	19 ; PC := 19
	18	[2172]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 19
	19	[2172]	OP_LOADBOOL	R0 1 0 ; R0 := true
	20	[2172]	RETURN   	R0 2 ; return R0 
	21	[2174]	OP_LOADBOOL	R0 0 0 ; R0 := false
	22	[2174]	RETURN   	R0 2 ; return R0 
	23	[2175]	RETURN   	R0 1 ; return 

function #113 <?:2177,2180> (17 instructions, 68 bytes at 0000025274EF0160)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2178]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2178]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2178]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2178]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2178]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2179]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2179]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2179]	GETGLOBAL	R3 K2 ; R3 := HARD_DAILY_FLAG
	9	[2179]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2179]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2179]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2179]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2179]	JMP      	15 ; PC := 15
	14	[2179]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2179]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2179]	RETURN   	R2 2 ; return R2 
	17	[2180]	RETURN   	R0 1 ; return 

function #114 <?:2182,2184> (5 instructions, 20 bytes at 0000025274EF02F0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2183]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2183]	MOVE     	R2 R0 ; R2 := R0
	3	[2183]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2183]	RETURN   	R1 2 ; return R1 
	5	[2184]	RETURN   	R0 1 ; return 

function #115 <?:2186,2205> (48 instructions, 192 bytes at 0000025274EF03E0)
1 param, 9 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[2188]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[2188]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedScenarioGameModeIds"]
	3	[2188]	TEST     	R1 1 ; if R1 then PC := 35
	4	[2188]	JMP      	35 ; PC := 35
	5	[2189]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[2189]	CALL     	R1 1 2 ; R1 := R1()
	7	[2190]	GETGLOBAL	R2 K0 ; R2 := _T
	8	[2190]	NEWTABLE 	R3 2 0 ; R3 := {}
	9	[2192]	GETUPVAL 	R4 U1 ; R4 := U1
	10	[2192]	GETGLOBAL	R5 K2 ; R5 := 0x64fb1586
	11	[2192]	GETGLOBAL	R6 K3 ; R6 := SCENARIO_EVENT_HUB_TAG
	12	[2192]	CALL     	R5 2 2 ; R5 := R5(R6)
	13	[2192]	GETGLOBAL	R6 K4 ; R6 := HUB_TAG
	14	[2192]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	15	[2192]	MOVE     	R6 R1 ; R6 := R1
	16	[2192]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	17	[2193]	GETUPVAL 	R5 U1 ; R5 := U1
	18	[2193]	GETGLOBAL	R6 K2 ; R6 := 0x64fb1586
	19	[2193]	GETGLOBAL	R7 K5 ; R7 := SCENARIO_EVENT_GROUND_TAG
	20	[2193]	CALL     	R6 2 2 ; R6 := R6(R7)
	21	[2193]	GETGLOBAL	R7 K6 ; R7 := KEY_TAG
	22	[2193]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	23	[2193]	MOVE     	R7 R1 ; R7 := R1
	24	[2193]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	25	[2194]	GETUPVAL 	R6 U1 ; R6 := U1
	26	[2194]	GETGLOBAL	R7 K2 ; R7 := 0x64fb1586
	27	[2194]	GETGLOBAL	R8 K7 ; R8 := SCENARIO_EVENT_SPACE_TAG
	28	[2194]	CALL     	R7 2 2 ; R7 := R7(R8)
	29	[2194]	GETGLOBAL	R8 K6 ; R8 := KEY_TAG
	30	[2194]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	31	[2194]	MOVE     	R8 R1 ; R8 := R1
	32	[2194]	CALL     	R6 3 0 ; R6,... := R6(R7,R8)
	33	[2195]	SETLIST  	R3 0 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 0
	34	[2195]	SETTABLE 	R2 K1 R3 ; R2["CachedScenarioGameModeIds"] := R3
	35	[2198]	GETGLOBAL	R2 K8 ; R2 := 0xcfc01047
	36	[2198]	GETGLOBAL	R3 K0 ; R3 := _T
	37	[2198]	GETTABLE 	R3 R3 K1 ; R3 := R3["CachedScenarioGameModeIds"]
	38	[2198]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	39	[2198]	JMP      	44 ; PC := 44
	40	[2199]	EQ       	0 R0 R6 ; if R0 ~= R6 then PC := 44
	41	[2199]	JMP      	44 ; PC := 44
	42	[2200]	OP_LOADBOOL	R7 1 0 ; R7 := true
	43	[2200]	RETURN   	R7 2 ; return R7 
	44	[2198]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 40; R4 := R5 end
	45	[2201]	JMP      	40 ; PC := 40
	46	[2204]	OP_LOADBOOL	R7 0 0 ; R7 := false
	47	[2204]	RETURN   	R7 2 ; return R7 
	48	[2205]	RETURN   	R0 1 ; return 

function #116 <?:2207,2210> (17 instructions, 68 bytes at 0000025274EF0700)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2208]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2208]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2208]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2208]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2208]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2209]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2209]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2209]	GETGLOBAL	R3 K2 ; R3 := VOID_STORM_FLAG
	9	[2209]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2209]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2209]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2209]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2209]	JMP      	15 ; PC := 15
	14	[2209]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2209]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2209]	RETURN   	R2 2 ; return R2 
	17	[2210]	RETURN   	R0 1 ; return 

function #117 <?:2212,2214> (9 instructions, 36 bytes at 0000025274EF0890)
1 param, 3 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[2213]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2213]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2213]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2213]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2213]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2213]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[2213]	MOD      	R1 R1 R2 ; R1 := R1 % R2
	8	[2213]	RETURN   	R1 2 ; return R1 
	9	[2214]	RETURN   	R0 1 ; return 

function #118 <?:2216,2218> (11 instructions, 44 bytes at 0000025274EF09D0)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[2217]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[2217]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	3	[2217]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x1a94c9cc]
	4	[2217]	GETGLOBAL	R3 K3 ; R3 := 0x64fb1586
	5	[2217]	MOVE     	R4 R0 ; R4 := R0
	6	[2217]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[2217]	LOADK    	R4 := -3.000000
	8	[2217]	CALL     	R2 3 0 ; R2,... := R2(R3,R4)
	9	[2217]	TAILCALL 	R1 0 0 ; R1,... := R1(R2,...)
	10	[2217]	RETURN   	R1 0 ; return R1,... 
	11	[2218]	RETURN   	R0 1 ; return 

function #119 <?:2220,2280> (248 instructions, 992 bytes at 0000025274EF0B30)
1 param, 8 slots, 11 upvalues, 0 locals, 64 constants, 0 functions
	1	[2221]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2221]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2221]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2221]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2221]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2221]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[2221]	MOD      	R1 R1 R2 ; R1 := R1 % R2
	8	[2222]	GETGLOBAL	R2 K2 ; R2 := 0x03f57322
	9	[2222]	GETGLOBAL	R3 K3 ; R3 := 0x7f5022cf
	10	[2222]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x1a94c9cc]
	11	[2222]	GETGLOBAL	R4 K5 ; R4 := 0x64fb1586
	12	[2222]	MOVE     	R5 R0 ; R5 := R0
	13	[2222]	CALL     	R4 2 2 ; R4 := R4(R5)
	14	[2222]	LOADK    	R5 := -3.000000
	15	[2222]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	16	[2222]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	17	[2223]	GETUPVAL 	R3 U2 ; R3 := U2
	18	[2223]	MOVE     	R4 R0 ; R4 := R0
	19	[2223]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[2223]	TEST     	R3 0 ; if not R3 then PC := 27
	21	[2223]	JMP      	27 ; PC := 27
	22	[2224]	LOADK    	R3 K6 ; R3 := "PvpNode"
	23	[2224]	MOVE     	R4 R2 ; R4 := R2
	24	[2224]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	25	[2224]	RETURN   	R3 2 ; return R3 
	26	[2224]	JMP      	248 ; PC := 248
	27	[2225]	GETUPVAL 	R3 U3 ; R3 := U3
	28	[2225]	MOVE     	R4 R0 ; R4 := R0
	29	[2225]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[2225]	TEST     	R3 0 ; if not R3 then PC := 73
	31	[2225]	JMP      	73 ; PC := 73
	32	[2225]	GETGLOBAL	R3 K7 ; R3 := 0x0032441c
	33	[2225]	GETTABLE 	R3 R3 K8 ; R3 := R3["CachedGoalInfo"]
	34	[2225]	TEST     	R3 0 ; if not R3 then PC := 44
	35	[2225]	JMP      	44 ; PC := 44
	36	[2225]	GETGLOBAL	R3 K7 ; R3 := 0x0032441c
	37	[2225]	GETTABLE 	R3 R3 K8 ; R3 := R3["CachedGoalInfo"]
	38	[2225]	LOADK    	R4 K9 ; R4 := "EventNode"
	39	[2225]	MOVE     	R5 R2 ; R5 := R2
	40	[2225]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	41	[2225]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	42	[2225]	TEST     	R3 1 ; if R3 then PC := 68
	43	[2225]	JMP      	68 ; PC := 68
	44	[2225]	GETGLOBAL	R3 K7 ; R3 := 0x0032441c
	45	[2225]	GETTABLE 	R3 R3 K10 ; R3 := R3["MergedGoalNodes"]
	46	[2225]	TEST     	R3 0 ; if not R3 then PC := 56
	47	[2225]	JMP      	56 ; PC := 56
	48	[2225]	GETGLOBAL	R3 K7 ; R3 := 0x0032441c
	49	[2225]	GETTABLE 	R3 R3 K10 ; R3 := R3["MergedGoalNodes"]
	50	[2225]	LOADK    	R4 K9 ; R4 := "EventNode"
	51	[2225]	MOVE     	R5 R2 ; R5 := R2
	52	[2225]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	53	[2225]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	54	[2225]	TEST     	R3 1 ; if R3 then PC := 68
	55	[2225]	JMP      	68 ; PC := 68
	56	[2225]	GETGLOBAL	R3 K11 ; R3 := _T
	57	[2225]	GETTABLE 	R3 R3 K12 ; R3 := R3["LockedGoalList"]
	58	[2225]	TEST     	R3 0 ; if not R3 then PC := 73
	59	[2225]	JMP      	73 ; PC := 73
	60	[2225]	GETGLOBAL	R3 K11 ; R3 := _T
	61	[2225]	GETTABLE 	R3 R3 K12 ; R3 := R3["LockedGoalList"]
	62	[2225]	LOADK    	R4 K9 ; R4 := "EventNode"
	63	[2225]	MOVE     	R5 R2 ; R5 := R2
	64	[2225]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	65	[2225]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	66	[2225]	TEST     	R3 0 ; if not R3 then PC := 73
	67	[2225]	JMP      	73 ; PC := 73
	68	[2226]	LOADK    	R3 K9 ; R3 := "EventNode"
	69	[2226]	MOVE     	R4 R2 ; R4 := R2
	70	[2226]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	71	[2226]	RETURN   	R3 2 ; return R3 
	72	[2226]	JMP      	248 ; PC := 248
	73	[2227]	GETUPVAL 	R3 U4 ; R3 := U4
	74	[2227]	MOVE     	R4 R0 ; R4 := R0
	75	[2227]	CALL     	R3 2 2 ; R3 := R3(R4)
	76	[2227]	TEST     	R3 0 ; if not R3 then PC := 83
	77	[2227]	JMP      	83 ; PC := 83
	78	[2228]	LOADK    	R3 K13 ; R3 := "SyndicateNode"
	79	[2228]	MOVE     	R4 R2 ; R4 := R2
	80	[2228]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	81	[2228]	RETURN   	R3 2 ; return R3 
	82	[2228]	JMP      	248 ; PC := 248
	83	[2229]	GETUPVAL 	R3 U5 ; R3 := U5
	84	[2229]	MOVE     	R4 R0 ; R4 := R0
	85	[2229]	CALL     	R3 2 2 ; R3 := R3(R4)
	86	[2229]	TEST     	R3 0 ; if not R3 then PC := 93
	87	[2229]	JMP      	93 ; PC := 93
	88	[2230]	LOADK    	R3 K14 ; R3 := "SortieNode"
	89	[2230]	MOVE     	R4 R2 ; R4 := R2
	90	[2230]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	91	[2230]	RETURN   	R3 2 ; return R3 
	92	[2230]	JMP      	248 ; PC := 248
	93	[2231]	GETUPVAL 	R3 U6 ; R3 := U6
	94	[2231]	MOVE     	R4 R0 ; R4 := R0
	95	[2231]	CALL     	R3 2 2 ; R3 := R3(R4)
	96	[2231]	TEST     	R3 0 ; if not R3 then PC := 188
	97	[2231]	JMP      	188 ; PC := 188
	98	[2232]	GETGLOBAL	R3 K0 ; R3 := 0x5bced4c4
	99	[2232]	GETTABLE 	R3 R3 K15 ; R3 := R3[0xb62ecfe0]
	100	[2232]	MOVE     	R4 R1 ; R4 := R1
	101	[2232]	LOADK    	R5 := 1.000000
	102	[2232]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	103	[2232]	MOVE     	R1 R3 ; R1 := R3
	104	[2233]	EQ       	0 R1 K16 ; if R1 ~= 3.000000 then PC := 112
	105	[2233]	JMP      	112 ; PC := 112
	106	[2233]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	107	[2233]	EQ       	0 R3 K18 ; if R3 ~= 2.000000 then PC := 112
	108	[2233]	JMP      	112 ; PC := 112
	109	[2235]	LOADK    	R3 K19 ; R3 := "TennoConHUB2"
	110	[2235]	RETURN   	R3 2 ; return R3 
	111	[2235]	JMP      	248 ; PC := 248
	112	[2236]	EQ       	0 R1 K16 ; if R1 ~= 3.000000 then PC := 120
	113	[2236]	JMP      	120 ; PC := 120
	114	[2236]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	115	[2236]	EQ       	0 R3 K16 ; if R3 ~= 3.000000 then PC := 120
	116	[2236]	JMP      	120 ; PC := 120
	117	[2238]	LOADK    	R3 K20 ; R3 := "IronwakeHUB3"
	118	[2238]	RETURN   	R3 2 ; return R3 
	119	[2238]	JMP      	248 ; PC := 248
	120	[2239]	EQ       	0 R1 K16 ; if R1 ~= 3.000000 then PC := 130
	121	[2239]	JMP      	130 ; PC := 130
	122	[2239]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	123	[2239]	EQ       	0 R3 K21 ; if R3 ~= 4.000000 then PC := 130
	124	[2239]	JMP      	130 ; PC := 130
	125	[2241]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	126	[2241]	GETGLOBAL	R4 K22 ; R4 := CETUS_NODE_TAG
	127	[2241]	TAILCALL 	R3 2 0 ; R3,... := R3(R4)
	128	[2241]	RETURN   	R3 0 ; return R3,... 
	129	[2241]	JMP      	248 ; PC := 248
	130	[2242]	EQ       	0 R1 K16 ; if R1 ~= 3.000000 then PC := 140
	131	[2242]	JMP      	140 ; PC := 140
	132	[2242]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	133	[2242]	EQ       	0 R3 K23 ; if R3 ~= 5.000000 then PC := 140
	134	[2242]	JMP      	140 ; PC := 140
	135	[2244]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	136	[2244]	GETGLOBAL	R4 K24 ; R4 := SCENARIO_EVENT_HUB_TAG
	137	[2244]	TAILCALL 	R3 2 0 ; R3,... := R3(R4)
	138	[2244]	RETURN   	R3 0 ; return R3,... 
	139	[2244]	JMP      	248 ; PC := 248
	140	[2245]	EQ       	0 R1 K16 ; if R1 ~= 3.000000 then PC := 148
	141	[2245]	JMP      	148 ; PC := 148
	142	[2245]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	143	[2245]	EQ       	0 R3 K25 ; if R3 ~= 7.000000 then PC := 148
	144	[2245]	JMP      	148 ; PC := 148
	145	[2247]	LOADK    	R3 K26 ; R3 := "DevStreamHUB7"
	146	[2247]	RETURN   	R3 2 ; return R3 
	147	[2247]	JMP      	248 ; PC := 248
	148	[2248]	EQ       	0 R1 K18 ; if R1 ~= 2.000000 then PC := 158
	149	[2248]	JMP      	158 ; PC := 158
	150	[2248]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	151	[2248]	EQ       	0 R3 K27 ; if R3 ~= 1.000000 then PC := 158
	152	[2248]	JMP      	158 ; PC := 158
	153	[2250]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	154	[2250]	GETGLOBAL	R4 K28 ; R4 := FORTUNA_NODE_TAG
	155	[2250]	TAILCALL 	R3 2 0 ; R3,... := R3(R4)
	156	[2250]	RETURN   	R3 0 ; return R3,... 
	157	[2250]	JMP      	248 ; PC := 248
	158	[2252]	NEWTABLE 	R3 0 15 ; R3 := {}
	159	[2252]	SETTABLE 	R3 K27 K29 ; R3[1.000000] := "MercuryHUB"
	160	[2252]	SETTABLE 	R3 K18 K30 ; R3[2.000000] := "VenusHUB"
	161	[2252]	SETTABLE 	R3 K16 K31 ; R3[3.000000] := "EarthHUB"
	162	[2252]	SETTABLE 	R3 K21 K32 ; R3[4.000000] := "TradeHUB1"
	163	[2252]	SETTABLE 	R3 K23 K33 ; R3[5.000000] := "JupiterHUB"
	164	[2252]	SETTABLE 	R3 K34 K35 ; R3[6.000000] := "SaturnHUB"
	165	[2252]	SETTABLE 	R3 K25 K36 ; R3[7.000000] := "UranusHUB"
	166	[2252]	SETTABLE 	R3 K37 K38 ; R3[8.000000] := "NeptuneHUB"
	167	[2252]	SETTABLE 	R3 K39 K40 ; R3[9.000000] := "PlutoHUB"
	168	[2252]	SETTABLE 	R3 K17 K41 ; R3[10.000000] := "CeresHUB"
	169	[2252]	SETTABLE 	R3 K42 K43 ; R3[11.000000] := "ErisHUB"
	170	[2252]	SETTABLE 	R3 K44 K45 ; R3[12.000000] := "SednaHUB"
	171	[2252]	SETTABLE 	R3 K46 K47 ; R3[13.000000] := "EuropaHUB"
	172	[2252]	SETTABLE 	R3 K48 K49 ; R3[17.000000] := "DeimosHub"
	173	[2252]	SETTABLE 	R3 K50 K51 ; R3[22.000000] := "ZarimanHub"
	174	[2253]	GETTABLE 	R4 R3 R1 ; R4 := R3[R1]
	175	[2253]	TEST     	R4 0 ; if not R4 then PC := 179
	176	[2253]	JMP      	179 ; PC := 179
	177	[2254]	GETTABLE 	R4 R3 R1 ; R4 := R3[R1]
	178	[2254]	RETURN   	R4 2 ; return R4 
	179	[2256]	GETGLOBAL	R4 K52 ; R4 := 0x3d106989
	180	[2256]	LOADK    	R5 K53 ; R5 := "Invalid hub gameModeId "
	181	[2256]	MOVE     	R6 R0 ; R6 := R0
	182	[2256]	LOADK    	R7 K54 ; R7 := "! Defaulting to MercuryHUB"
	183	[2256]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	184	[2256]	CALL     	R4 2 1 ; R4(R5)
	185	[2257]	GETTABLE 	R4 R3 K27 ; R4 := R3[1.000000]
	186	[2257]	RETURN   	R4 2 ; return R4 
	187	[2258]	JMP      	248 ; PC := 248
	188	[2259]	GETUPVAL 	R4 U7 ; R4 := U7
	189	[2259]	MOVE     	R5 R0 ; R5 := R0
	190	[2259]	CALL     	R4 2 2 ; R4 := R4(R5)
	191	[2259]	TEST     	R4 0 ; if not R4 then PC := 198
	192	[2259]	JMP      	198 ; PC := 198
	193	[2260]	LOADK    	R4 K55 ; R4 := "CrewBattleNode"
	194	[2260]	MOVE     	R5 R2 ; R5 := R2
	195	[2260]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	196	[2260]	RETURN   	R4 2 ; return R4 
	197	[2260]	JMP      	248 ; PC := 248
	198	[2261]	GETUPVAL 	R4 U8 ; R4 := U8
	199	[2261]	MOVE     	R5 R0 ; R5 := R0
	200	[2261]	CALL     	R4 2 2 ; R4 := R4(R5)
	201	[2261]	TEST     	R4 0 ; if not R4 then PC := 212
	202	[2261]	JMP      	212 ; PC := 212
	203	[2262]	GETUPVAL 	R4 U0 ; R4 := U0
	204	[2262]	MOD      	R4 R0 R4 ; R4 := R0 % R4
	205	[2263]	GETUPVAL 	R5 U9 ; R5 := U9
	206	[2263]	CALL     	R5 1 2 ; R5 := R5()
	207	[2263]	SELF     	R5 R5 K56 ; R6 := R5; R5 := R5[0x63e6e330]
	208	[2263]	MOVE     	R7 R4 ; R7 := R4
	209	[2263]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	210	[2264]	RETURN   	R5 2 ; return R5 
	211	[2264]	JMP      	248 ; PC := 248
	212	[2265]	EQ       	0 R1 K57 ; if R1 ~= 16.000000 then PC := 226
	213	[2265]	JMP      	226 ; PC := 226
	214	[2266]	LE       	0 K58 R2 ; if 80.000000 > R2 then PC := 221
	215	[2266]	JMP      	221 ; PC := 221
	216	[2268]	SUB      	R2 R2 K58 ; R2 := R2 - 80.000000
	217	[2269]	LOADK    	R6 K59 ; R6 := "ClanNode"
	218	[2269]	MOVE     	R7 R2 ; R7 := R2
	219	[2269]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	220	[2269]	RETURN   	R6 2 ; return R6 
	221	[2271]	LOADK    	R6 K60 ; R6 := "SettlementNode"
	222	[2271]	MOVE     	R7 R2 ; R7 := R2
	223	[2271]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	224	[2271]	RETURN   	R6 2 ; return R6 
	225	[2271]	JMP      	248 ; PC := 248
	226	[2272]	LT       	0 K61 R2 ; if 0.000000 >= R2 then PC := 246
	227	[2272]	JMP      	246 ; PC := 246
	228	[2273]	GETUPVAL 	R6 U10 ; R6 := U10
	229	[2273]	GETTABLE 	R6 R6 R1 ; R6 := R6[R1]
	230	[2273]	TEST     	R6 0 ; if not R6 then PC := 241
	231	[2273]	JMP      	241 ; PC := 241
	232	[2273]	GETUPVAL 	R6 U10 ; R6 := U10
	233	[2273]	GETTABLE 	R6 R6 R1 ; R6 := R6[R1]
	234	[2273]	GETTABLE 	R6 R6 R2 ; R6 := R6[R2]
	235	[2273]	EQ       	0 R6 K62 ; if R6 ~= true then PC := 241
	236	[2273]	JMP      	241 ; PC := 241
	237	[2274]	LOADK    	R6 K59 ; R6 := "ClanNode"
	238	[2274]	MOVE     	R7 R2 ; R7 := R2
	239	[2274]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	240	[2274]	RETURN   	R6 2 ; return R6 
	241	[2276]	LOADK    	R6 K63 ; R6 := "SolNode"
	242	[2276]	MOVE     	R7 R2 ; R7 := R2
	243	[2276]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	244	[2276]	RETURN   	R6 2 ; return R6 
	245	[2276]	JMP      	248 ; PC := 248
	246	[2278]	LOADNIL  	R6 R6 ; R6 := nil
	247	[2278]	RETURN   	R6 2 ; return R6 
	248	[2280]	RETURN   	R0 1 ; return 

function #120 <?:2282,2284> (5 instructions, 20 bytes at 0000025274EF1E50)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2283]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2283]	MOVE     	R2 R0 ; R2 := R0
	3	[2283]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2283]	RETURN   	R1 2 ; return R1 
	5	[2284]	RETURN   	R0 1 ; return 

function #121 <?:2286,2320> (122 instructions, 488 bytes at 0000025274EF1F40)
1 param, 3 slots, 15 upvalues, 0 locals, 16 constants, 0 functions
	1	[2287]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2287]	MOVE     	R2 R0 ; R2 := R0
	3	[2287]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2287]	TEST     	R1 0 ; if not R1 then PC := 9
	5	[2287]	JMP      	9 ; PC := 9
	6	[2288]	GETGLOBAL	R1 K0 ; R1 := ALERT_TAG
	7	[2288]	RETURN   	R1 2 ; return R1 
	8	[2288]	JMP      	120 ; PC := 120
	9	[2289]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[2289]	MOVE     	R2 R0 ; R2 := R0
	11	[2289]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[2289]	TEST     	R1 0 ; if not R1 then PC := 17
	13	[2289]	JMP      	17 ; PC := 17
	14	[2290]	GETGLOBAL	R1 K1 ; R1 := EVENT_TAG
	15	[2290]	RETURN   	R1 2 ; return R1 
	16	[2290]	JMP      	120 ; PC := 120
	17	[2291]	GETUPVAL 	R1 U2 ; R1 := U2
	18	[2291]	MOVE     	R2 R0 ; R2 := R0
	19	[2291]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[2291]	TEST     	R1 0 ; if not R1 then PC := 25
	21	[2291]	JMP      	25 ; PC := 25
	22	[2292]	GETGLOBAL	R1 K2 ; R1 := INVASION_ATTACKER_TAG
	23	[2292]	RETURN   	R1 2 ; return R1 
	24	[2292]	JMP      	120 ; PC := 120
	25	[2293]	GETUPVAL 	R1 U3 ; R1 := U3
	26	[2293]	MOVE     	R2 R0 ; R2 := R0
	27	[2293]	CALL     	R1 2 2 ; R1 := R1(R2)
	28	[2293]	TEST     	R1 0 ; if not R1 then PC := 33
	29	[2293]	JMP      	33 ; PC := 33
	30	[2294]	GETGLOBAL	R1 K3 ; R1 := INVASION_DEFENDER_TAG
	31	[2294]	RETURN   	R1 2 ; return R1 
	32	[2294]	JMP      	120 ; PC := 120
	33	[2295]	GETUPVAL 	R1 U4 ; R1 := U4
	34	[2295]	MOVE     	R2 R0 ; R2 := R0
	35	[2295]	CALL     	R1 2 2 ; R1 := R1(R2)
	36	[2295]	TEST     	R1 0 ; if not R1 then PC := 41
	37	[2295]	JMP      	41 ; PC := 41
	38	[2296]	GETGLOBAL	R1 K4 ; R1 := SYNDICATE_MISSION_TAG
	39	[2296]	RETURN   	R1 2 ; return R1 
	40	[2296]	JMP      	120 ; PC := 120
	41	[2297]	GETUPVAL 	R1 U5 ; R1 := U5
	42	[2297]	MOVE     	R2 R0 ; R2 := R0
	43	[2297]	CALL     	R1 2 2 ; R1 := R1(R2)
	44	[2297]	TEST     	R1 0 ; if not R1 then PC := 49
	45	[2297]	JMP      	49 ; PC := 49
	46	[2298]	GETGLOBAL	R1 K5 ; R1 := SORTIE_MISSION_TAG
	47	[2298]	RETURN   	R1 2 ; return R1 
	48	[2298]	JMP      	120 ; PC := 120
	49	[2299]	GETUPVAL 	R1 U6 ; R1 := U6
	50	[2299]	MOVE     	R2 R0 ; R2 := R0
	51	[2299]	CALL     	R1 2 2 ; R1 := R1(R2)
	52	[2299]	TEST     	R1 0 ; if not R1 then PC := 57
	53	[2299]	JMP      	57 ; PC := 57
	54	[2300]	GETGLOBAL	R1 K6 ; R1 := LITE_SORTIE_MISSION_TAG
	55	[2300]	RETURN   	R1 2 ; return R1 
	56	[2300]	JMP      	120 ; PC := 120
	57	[2301]	GETUPVAL 	R1 U7 ; R1 := U7
	58	[2301]	MOVE     	R2 R0 ; R2 := R0
	59	[2301]	CALL     	R1 2 2 ; R1 := R1(R2)
	60	[2301]	TEST     	R1 0 ; if not R1 then PC := 65
	61	[2301]	JMP      	65 ; PC := 65
	62	[2302]	GETGLOBAL	R1 K7 ; R1 := HUB_TAG
	63	[2302]	RETURN   	R1 2 ; return R1 
	64	[2302]	JMP      	120 ; PC := 120
	65	[2303]	GETUPVAL 	R1 U8 ; R1 := U8
	66	[2303]	MOVE     	R2 R0 ; R2 := R0
	67	[2303]	CALL     	R1 2 2 ; R1 := R1(R2)
	68	[2303]	TEST     	R1 0 ; if not R1 then PC := 73
	69	[2303]	JMP      	73 ; PC := 73
	70	[2304]	GETGLOBAL	R1 K8 ; R1 := ACTIVE_MISSION_TAG
	71	[2304]	RETURN   	R1 2 ; return R1 
	72	[2304]	JMP      	120 ; PC := 120
	73	[2305]	GETUPVAL 	R1 U9 ; R1 := U9
	74	[2305]	MOVE     	R2 R0 ; R2 := R0
	75	[2305]	CALL     	R1 2 2 ; R1 := R1(R2)
	76	[2305]	TEST     	R1 0 ; if not R1 then PC := 81
	77	[2305]	JMP      	81 ; PC := 81
	78	[2306]	GETGLOBAL	R1 K9 ; R1 := KUVA_TOWER_MISSION_TAG
	79	[2306]	RETURN   	R1 2 ; return R1 
	80	[2306]	JMP      	120 ; PC := 120
	81	[2307]	GETUPVAL 	R1 U10 ; R1 := U10
	82	[2307]	MOVE     	R2 R0 ; R2 := R0
	83	[2307]	CALL     	R1 2 2 ; R1 := R1(R2)
	84	[2307]	TEST     	R1 0 ; if not R1 then PC := 89
	85	[2307]	JMP      	89 ; PC := 89
	86	[2308]	GETGLOBAL	R1 K10 ; R1 := KEY_TAG
	87	[2308]	RETURN   	R1 2 ; return R1 
	88	[2308]	JMP      	120 ; PC := 120
	89	[2309]	GETUPVAL 	R1 U11 ; R1 := U11
	90	[2309]	MOVE     	R2 R0 ; R2 := R0
	91	[2309]	CALL     	R1 2 2 ; R1 := R1(R2)
	92	[2309]	TEST     	R1 0 ; if not R1 then PC := 97
	93	[2309]	JMP      	97 ; PC := 97
	94	[2310]	GETGLOBAL	R1 K11 ; R1 := NIGHTMARE_TAG
	95	[2310]	RETURN   	R1 2 ; return R1 
	96	[2310]	JMP      	120 ; PC := 120
	97	[2311]	GETUPVAL 	R1 U12 ; R1 := U12
	98	[2311]	MOVE     	R2 R0 ; R2 := R0
	99	[2311]	CALL     	R1 2 2 ; R1 := R1(R2)
	100	[2311]	TEST     	R1 0 ; if not R1 then PC := 105
	101	[2311]	JMP      	105 ; PC := 105
	102	[2312]	GETGLOBAL	R1 K12 ; R1 := HARD_DAILY_TAG
	103	[2312]	RETURN   	R1 2 ; return R1 
	104	[2312]	JMP      	120 ; PC := 120
	105	[2313]	GETUPVAL 	R1 U13 ; R1 := U13
	106	[2313]	MOVE     	R2 R0 ; R2 := R0
	107	[2313]	CALL     	R1 2 2 ; R1 := R1(R2)
	108	[2313]	TEST     	R1 0 ; if not R1 then PC := 113
	109	[2313]	JMP      	113 ; PC := 113
	110	[2314]	GETGLOBAL	R1 K13 ; R1 := HARD_MODE_TAG
	111	[2314]	RETURN   	R1 2 ; return R1 
	112	[2314]	JMP      	120 ; PC := 120
	113	[2315]	GETUPVAL 	R1 U14 ; R1 := U14
	114	[2315]	MOVE     	R2 R0 ; R2 := R0
	115	[2315]	CALL     	R1 2 2 ; R1 := R1(R2)
	116	[2315]	TEST     	R1 0 ; if not R1 then PC := 120
	117	[2315]	JMP      	120 ; PC := 120
	118	[2316]	GETGLOBAL	R1 K14 ; R1 := VOID_STORM_TAG
	119	[2316]	RETURN   	R1 2 ; return R1 
	120	[2319]	LOADK    	R1 K15 ; R1 := ""
	121	[2319]	RETURN   	R1 2 ; return R1 
	122	[2320]	RETURN   	R0 1 ; return 

function #122 <?:2322,2332> (35 instructions, 140 bytes at 0000025274EF24E0)
1 param, 8 slots, 3 upvalues, 0 locals, 7 constants, 0 functions
	1	[2323]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2323]	CALL     	R1 1 2 ; R1 := R1()
	3	[2324]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[2324]	MOVE     	R3 R0 ; R3 := R0
	5	[2324]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[2325]	LOADNIL  	R3 R3 ; R3 := nil
	7	[2326]	TEST     	R2 0 ; if not R2 then PC := 15
	8	[2326]	JMP      	15 ; PC := 15
	9	[2327]	SELF     	R4 R1 K0 ; R5 := R1; R4 := R1[0xc18bf6f0]
	10	[2327]	GETGLOBAL	R6 K1 ; R6 := 0x0469f296
	11	[2327]	MOVE     	R7 R2 ; R7 := R2
	12	[2327]	CALL     	R6 2 0 ; R6,... := R6(R7)
	13	[2327]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	14	[2327]	MOVE     	R3 R4 ; R3 := R4
	15	[2330]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	16	[2330]	MOVE     	R5 R3 ; R5 := R3
	17	[2330]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[2330]	TEST     	R4 1 ; if R4 then PC := 30
	19	[2330]	JMP      	30 ; PC := 30
	20	[2330]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	21	[2330]	GETTABLE 	R5 R3 K3 ; R5 := R3["gameRules"]
	22	[2330]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[2330]	TEST     	R4 1 ; if R4 then PC := 30
	24	[2330]	JMP      	30 ; PC := 30
	25	[2330]	GETTABLE 	R4 R3 K3 ; R4 := R3["gameRules"]
	26	[2330]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0xf2deaf69]
	27	[2330]	GETUPVAL 	R6 U2 ; R6 := U2
	28	[2330]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	29	[2330]	JMP      	32 ; PC := 32
	30	[2330]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 31
	31	[2330]	OP_LOADBOOL	R4 1 0 ; R4 := true
	32	[2331]	GETGLOBAL	R5 K5 ; R5 := _T
	33	[2331]	GETTABLE 	R5 R5 K6 ; R5 := R5["CachedPvpNodes"]
	34	[2331]	SETTABLE 	R5 R0 R4 ; R5[R0] := R4
	35	[2332]	RETURN   	R0 1 ; return 

function #123 <?:2334,2345> (20 instructions, 80 bytes at 0000025274EF27B0)
1 param, 3 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[2335]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[2335]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedPvpNodes"]
	3	[2335]	TEST     	R1 1 ; if R1 then PC := 8
	4	[2335]	JMP      	8 ; PC := 8
	5	[2336]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[2336]	NEWTABLE 	R2 0 0 ; R2 := {}
	7	[2336]	SETTABLE 	R1 K1 R2 ; R1["CachedPvpNodes"] := R2
	8	[2340]	GETGLOBAL	R1 K0 ; R1 := _T
	9	[2340]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedPvpNodes"]
	10	[2340]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	11	[2340]	TEST     	R1 1 ; if R1 then PC := 16
	12	[2340]	JMP      	16 ; PC := 16
	13	[2341]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[2341]	MOVE     	R2 R0 ; R2 := R0
	15	[2341]	CALL     	R1 2 1 ; R1(R2)
	16	[2344]	GETGLOBAL	R1 K0 ; R1 := _T
	17	[2344]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedPvpNodes"]
	18	[2344]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	19	[2344]	RETURN   	R1 2 ; return R1 
	20	[2345]	RETURN   	R0 1 ; return 

function #124 <?:2347,2349> (5 instructions, 20 bytes at 0000025274EF2930)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2348]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2348]	MOVE     	R2 R0 ; R2 := R0
	3	[2348]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2348]	RETURN   	R1 2 ; return R1 
	5	[2349]	RETURN   	R0 1 ; return 

function #125 <?:2351,2359> (44 instructions, 176 bytes at 0000025274EF2A20)
1 param, 7 slots, 6 upvalues, 0 locals, 10 constants, 0 functions
	1	[2352]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2352]	MOVE     	R2 R0 ; R2 := R0
	3	[2352]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2352]	TEST     	R1 1 ; if R1 then PC := 11
	5	[2352]	JMP      	11 ; PC := 11
	6	[2352]	GETUPVAL 	R1 U1 ; R1 := U1
	7	[2352]	MOVE     	R2 R0 ; R2 := R0
	8	[2352]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[2352]	TEST     	R1 0 ; if not R1 then PC := 40
	10	[2352]	JMP      	40 ; PC := 40
	11	[2353]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	12	[2353]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	13	[2353]	GETUPVAL 	R2 U2 ; R2 := U2
	14	[2353]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	15	[2353]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[2353]	GETUPVAL 	R2 U3 ; R2 := U3
	17	[2353]	MOD      	R1 R1 R2 ; R1 := R1 % R2
	18	[2354]	GETGLOBAL	R2 K2 ; R2 := 0x03f57322
	19	[2354]	GETGLOBAL	R3 K3 ; R3 := 0x7f5022cf
	20	[2354]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x1a94c9cc]
	21	[2354]	GETGLOBAL	R4 K5 ; R4 := 0x64fb1586
	22	[2354]	MOVE     	R5 R0 ; R5 := R0
	23	[2354]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[2354]	LOADK    	R5 := -3.000000
	25	[2354]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	26	[2354]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	27	[2355]	GETUPVAL 	R3 U4 ; R3 := U4
	28	[2355]	GETTABLE 	R3 R3 K6 ; R3 := R3[0x06d055f9]
	29	[2355]	EQ       	1 R1 K7 ; if R1 == 16.000000 then PC := 32
	30	[2355]	JMP      	32 ; PC := 32
	31	[2355]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 32
	32	[2355]	OP_LOADBOOL	R4 1 0 ; R4 := true
	33	[2355]	LOADK    	R5 K8 ; R5 := "SettlementNode"
	34	[2355]	LOADK    	R6 K9 ; R6 := "SolNode"
	35	[2355]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	36	[2355]	MOVE     	R4 R2 ; R4 := R2
	37	[2355]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	38	[2355]	RETURN   	R3 2 ; return R3 
	39	[2355]	JMP      	44 ; PC := 44
	40	[2357]	GETUPVAL 	R3 U5 ; R3 := U5
	41	[2357]	MOVE     	R4 R0 ; R4 := R0
	42	[2357]	CALL     	R3 2 2 ; R3 := R3(R4)
	43	[2357]	RETURN   	R3 2 ; return R3 
	44	[2359]	RETURN   	R0 1 ; return 

function #126 <?:2361,2378> (36 instructions, 144 bytes at 0000025274EF2CE0)
1 param, 11 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[2362]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[2363]	SELF     	R2 R1 K1 ; R3 := R1; R2 := R1[0x69727e0b]
	3	[2363]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[2365]	GETGLOBAL	R3 K2 ; R3 := 0x7f5022cf
	5	[2365]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xa5c556b9]
	6	[2365]	MOVE     	R4 R0 ; R4 := R0
	7	[2365]	GETGLOBAL	R5 K4 ; R5 := ALERT_TAG
	8	[2365]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	9	[2366]	EQ       	1 R3 K5 ; if R3 == nil then PC := 18
	10	[2366]	JMP      	18 ; PC := 18
	11	[2367]	GETGLOBAL	R4 K2 ; R4 := 0x7f5022cf
	12	[2367]	GETTABLE 	R4 R4 K6 ; R4 := R4[0x1a94c9cc]
	13	[2367]	MOVE     	R5 R0 ; R5 := R0
	14	[2367]	LOADK    	R6 := 1.000000
	15	[2367]	SUB      	R7 R3 K7 ; R7 := R3 - 1.000000
	16	[2367]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	17	[2367]	MOVE     	R0 R4 ; R0 := R4
	18	[2370]	GETTABLE 	R4 R2 K8 ; R4 := R2["mAlerts"]
	19	[2371]	LOADK    	R5 := 1.000000
	20	[2371]	LEN      	R6 R4 ; R6 := # R4
	21	[2371]	LOADK    	R7 := 1.000000
	22	[2371]	FORPREP  	R5 33 ; R5 -= R7; PC := 33
	23	[2372]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	24	[2372]	GETTABLE 	R9 R9 K9 ; R9 := R9["mMissionInfo"]
	25	[2372]	GETTABLE 	R9 R9 K10 ; R9 := R9["location"]
	26	[2372]	SELF     	R9 R9 K11 ; R10 := R9; R9 := R9[0x6d604ba7]
	27	[2372]	CALL     	R9 2 2 ; R9 := R9(R10)
	28	[2372]	EQ       	0 R9 R0 ; if R9 ~= R0 then PC := 33
	29	[2372]	JMP      	33 ; PC := 33
	30	[2373]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	31	[2373]	GETTABLE 	R9 R9 K12 ; R9 := R9["mExpiry"]
	32	[2373]	RETURN   	R9 2 ; return R9 
	33	[2371]	FORLOOP  	R5 23 ; R5 += R7; if R5 <= R6 then begin PC := 23; R8 := R5 end
	34	[2377]	LOADNIL  	R9 R9 ; R9 := nil
	35	[2377]	RETURN   	R9 2 ; return R9 
	36	[2378]	RETURN   	R0 1 ; return 

function #127 <?:2380,2400> (57 instructions, 228 bytes at 0000025274EF3070)
3 params, 7 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[2381]	OP_LOADBOOL	R3 0 0 ; R3 := false
	2	[2381]	TEST     	R3 0 ; if not R3 then PC := 6
	3	[2381]	JMP      	6 ; PC := 6
	4	[2382]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[2382]	RETURN   	R3 2 ; return R3 
	6	[2386]	GETGLOBAL	R3 K0 ; R3 := _T
	7	[2386]	GETTABLE 	R3 R3 K1 ; R3 := R3["CachedRegionStatus"]
	8	[2386]	TEST     	R3 0 ; if not R3 then PC := 23
	9	[2386]	JMP      	23 ; PC := 23
	10	[2386]	GETGLOBAL	R3 K0 ; R3 := _T
	11	[2386]	GETTABLE 	R3 R3 K1 ; R3 := R3["CachedRegionStatus"]
	12	[2386]	GETTABLE 	R3 R3 R2 ; R3 := R3[R2]
	13	[2386]	TEST     	R3 0 ; if not R3 then PC := 23
	14	[2386]	JMP      	23 ; PC := 23
	15	[2386]	GETGLOBAL	R3 K0 ; R3 := _T
	16	[2386]	GETTABLE 	R3 R3 K1 ; R3 := R3["CachedRegionStatus"]
	17	[2386]	GETTABLE 	R3 R3 R2 ; R3 := R3[R2]
	18	[2386]	GETTABLE 	R3 R3 K2 ; R3 := R3["goal"]
	19	[2386]	EQ       	0 R3 K3 ; if R3 ~= true then PC := 23
	20	[2386]	JMP      	23 ; PC := 23
	21	[2387]	OP_LOADBOOL	R3 1 0 ; R3 := true
	22	[2387]	RETURN   	R3 2 ; return R3 
	23	[2390]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	24	[2390]	MOVE     	R4 R0 ; R4 := R0
	25	[2390]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[2390]	TEST     	R3 0 ; if not R3 then PC := 31
	27	[2390]	JMP      	31 ; PC := 31
	28	[2391]	GETUPVAL 	R3 U0 ; R3 := U0
	29	[2391]	CALL     	R3 1 2 ; R3 := R3()
	30	[2391]	MOVE     	R0 R3 ; R0 := R3
	31	[2394]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	32	[2394]	MOVE     	R4 R1 ; R4 := R1
	33	[2394]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[2394]	TEST     	R3 0 ; if not R3 then PC := 38
	35	[2394]	JMP      	38 ; PC := 38
	36	[2395]	OP_LOADBOOL	R3 0 0 ; R3 := false
	37	[2395]	RETURN   	R3 2 ; return R3 
	38	[2398]	SELF     	R3 R0 K5 ; R4 := R0; R3 := R0[0xc1dee03f]
	39	[2398]	CALL     	R3 2 2 ; R3 := R3(R4)
	40	[2398]	GETTABLE 	R3 R3 R2 ; R3 := R3[R2]
	41	[2399]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	42	[2399]	MOVE     	R5 R3 ; R5 := R3
	43	[2399]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[2399]	TEST     	R4 1 ; if R4 then PC := 54
	45	[2399]	JMP      	54 ; PC := 54
	46	[2399]	SELF     	R4 R3 K6 ; R5 := R3; R4 := R3[0x699fd1e2]
	47	[2399]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[2399]	EQ       	0 R4 K8 ; if R4 ~= 0.000000 then PC := 55
	49	[2399]	JMP      	55 ; PC := 55
	50	[2399]	SELF     	R4 R1 K9 ; R5 := R1; R4 := R1[0x25452953]
	51	[2399]	MOVE     	R6 R2 ; R6 := R2
	52	[2399]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	53	[2399]	JMP      	56 ; PC := 56
	54	[2399]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 55
	55	[2399]	OP_LOADBOOL	R4 1 0 ; R4 := true
	56	[2399]	RETURN   	R4 2 ; return R4 
	57	[2400]	RETURN   	R0 1 ; return 

function #128 <?:2402,2410> (19 instructions, 76 bytes at 0000025274EF3420)
0 params, 5 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[2403]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[2403]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[2403]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2403]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xc472e470]
	5	[2403]	CALL     	R2 1 0 ; R2,... := R2()
	6	[2403]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[2405]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	8	[2405]	MOVE     	R2 R0 ; R2 := R0
	9	[2405]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[2405]	TEST     	R1 1 ; if R1 then PC := 17
	11	[2405]	JMP      	17 ; PC := 17
	12	[2406]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xe4162eed]
	13	[2406]	LOADK    	R3 K5 ; R3 := "IsMaximized"
	14	[2406]	LOADK    	R4 K6 ; R4 := ""
	15	[2406]	TAILCALL 	R1 4 0 ; R1,... := R1(R2,R3,R4)
	16	[2406]	RETURN   	R1 0 ; return R1,... 
	17	[2409]	OP_LOADBOOL	R1 0 0 ; R1 := false
	18	[2409]	RETURN   	R1 2 ; return R1 
	19	[2410]	RETURN   	R0 1 ; return 

function #129 <?:2412,2438> (49 instructions, 196 bytes at 0000025274EF3630)
1 param, 7 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[2413]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2413]	MOVE     	R2 R0 ; R2 := R0
	3	[2413]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2413]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[2413]	JMP      	8 ; PC := 8
	6	[2414]	OP_LOADBOOL	R1 1 0 ; R1 := true
	7	[2414]	RETURN   	R1 2 ; return R1 
	8	[2417]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xfdd3576f]
	9	[2417]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[2418]	GETUPVAL 	R2 U0 ; R2 := U0
	11	[2418]	GETTABLE 	R3 R1 K2 ; R3 := R1["gameModeId"]
	12	[2418]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[2418]	TEST     	R2 0 ; if not R2 then PC := 47
	14	[2418]	JMP      	47 ; PC := 47
	15	[2420]	LOADK    	R2 K3 ; R2 := ""
	16	[2421]	SELF     	R3 R1 K4 ; R4 := R1; R3 := R1[0xabb735a5]
	17	[2421]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[2422]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	19	[2422]	MOVE     	R5 R3 ; R5 := R3
	20	[2422]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[2422]	TEST     	R4 1 ; if R4 then PC := 26
	22	[2422]	JMP      	26 ; PC := 26
	23	[2422]	LEN      	R4 R3 ; R4 := # R3
	24	[2422]	LE       	0 R4 K5 ; if R4 > 0.000000 then PC := 28
	25	[2422]	JMP      	28 ; PC := 28
	26	[2423]	OP_LOADBOOL	R4 1 0 ; R4 := true
	27	[2423]	RETURN   	R4 2 ; return R4 
	28	[2426]	GETTABLE 	R2 R3 K6 ; R2 := R3[1.000000]
	29	[2428]	GETGLOBAL	R4 K7 ; R4 := 0x7f5022cf
	30	[2428]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x41e2ae25]
	31	[2428]	MOVE     	R5 R2 ; R5 := R2
	32	[2428]	CALL     	R4 2 2 ; R4 := R4(R5)
	33	[2428]	LT       	0 K5 R4 ; if 0.000000 >= R4 then PC := 47
	34	[2428]	JMP      	47 ; PC := 47
	35	[2429]	GETGLOBAL	R4 K9 ; R4 := 0xcb2f6c8f
	36	[2429]	CALL     	R4 1 2 ; R4 := R4()
	37	[2430]	SETTABLE 	R4 K10 R2 ; R4["sec"] := R2
	38	[2432]	GETGLOBAL	R5 K11 ; R5 := 0x34291f5c
	39	[2432]	GETTABLE 	R5 R5 K12 ; R5 := R5[0x397b920f]
	40	[2432]	MOVE     	R6 R4 ; R6 := R4
	41	[2432]	CALL     	R5 2 2 ; R5 := R5(R6)
	42	[2433]	LE       	1 R5 K5 ; if R5 <= 0.000000 then PC := 45
	43	[2433]	JMP      	45 ; PC := 45
	44	[2433]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 45
	45	[2433]	OP_LOADBOOL	R6 1 0 ; R6 := true
	46	[2433]	RETURN   	R6 2 ; return R6 
	47	[2437]	OP_LOADBOOL	R6 0 0 ; R6 := false
	48	[2437]	RETURN   	R6 2 ; return R6 
	49	[2438]	RETURN   	R0 1 ; return 

function #130 <?:2440,2457> (34 instructions, 136 bytes at 0000025274EF39D0)
1 param, 11 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[2441]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[2442]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	3	[2442]	MOVE     	R3 R1 ; R3 := R1
	4	[2442]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[2442]	TEST     	R2 0 ; if not R2 then PC := 9
	6	[2442]	JMP      	9 ; PC := 9
	7	[2443]	OP_LOADBOOL	R2 0 0 ; R2 := false
	8	[2443]	RETURN   	R2 2 ; return R2 
	9	[2446]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0xed5b57ee]
	10	[2446]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[2447]	GETGLOBAL	R3 K3 ; R3 := 0x0469f296
	12	[2447]	MOVE     	R4 R0 ; R4 := R0
	13	[2447]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[2448]	LOADK    	R4 := 1.000000
	15	[2448]	LEN      	R5 R2 ; R5 := # R2
	16	[2448]	LOADK    	R6 := 1.000000
	17	[2448]	FORPREP  	R4 24 ; R4 -= R6; PC := 24
	18	[2449]	GETTABLE 	R8 R2 R7 ; R8 := R2[R7]
	19	[2449]	GETTABLE 	R8 R8 K4 ; R8 := R8["node"]
	20	[2449]	EQ       	0 R8 R3 ; if R8 ~= R3 then PC := 24
	21	[2449]	JMP      	24 ; PC := 24
	22	[2450]	OP_LOADBOOL	R8 0 0 ; R8 := false
	23	[2450]	RETURN   	R8 2 ; return R8 
	24	[2448]	FORLOOP  	R4 18 ; R4 += R6; if R4 <= R5 then begin PC := 18; R7 := R4 end
	25	[2454]	SELF     	R8 R1 K5 ; R9 := R1; R8 := R1[0x8b363264]
	26	[2454]	MOVE     	R10 R3 ; R10 := R3
	27	[2454]	CALL     	R8 3 1 ; R8(R9,R10)
	28	[2455]	GETGLOBAL	R8 K6 ; R8 := 0x76ea806b
	29	[2455]	SELF     	R8 R8 K7 ; R9 := R8; R8 := R8[0x524772b5]
	30	[2455]	LOADK    	R10 := 0.000000
	31	[2455]	CALL     	R8 3 1 ; R8(R9,R10)
	32	[2456]	OP_LOADBOOL	R8 1 0 ; R8 := true
	33	[2456]	RETURN   	R8 2 ; return R8 
	34	[2457]	RETURN   	R0 1 ; return 

function #131 <?:2459,2483> (77 instructions, 308 bytes at 0000025274EF3C60)
2 params, 7 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[2460]	GETGLOBAL	R2 K0 ; R2 := 0x9ba7909f
	2	[2460]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xbcfb64ab]
	3	[2460]	GETGLOBAL	R4 K2 ; R4 := 0x0032441c
	4	[2460]	GETTABLE 	R4 R4 K3 ; R4 := R4["UIMovie_TransmissionMovie"]
	5	[2460]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	6	[2462]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 10
	7	[2462]	JMP      	10 ; PC := 10
	8	[2463]	GETGLOBAL	R3 K5 ; R3 := _T
	9	[2463]	GETTABLE 	R0 R3 K6 ; R0 := R3["curTransmission"]
	10	[2466]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	11	[2466]	MOVE     	R4 R0 ; R4 := R0
	12	[2466]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[2466]	TEST     	R3 1 ; if R3 then PC := 77
	14	[2466]	JMP      	77 ; PC := 77
	15	[2466]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	16	[2466]	MOVE     	R4 R2 ; R4 := R2
	17	[2466]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[2466]	TEST     	R3 1 ; if R3 then PC := 77
	19	[2466]	JMP      	77 ; PC := 77
	20	[2468]	GETGLOBAL	R3 K5 ; R3 := _T
	21	[2468]	GETTABLE 	R3 R3 K6 ; R3 := R3["curTransmission"]
	22	[2468]	EQ       	1 R3 R0 ; if R3 == R0 then PC := 33
	23	[2468]	JMP      	33 ; PC := 33
	24	[2468]	TEST     	R1 0 ; if not R1 then PC := 38
	25	[2468]	JMP      	38 ; PC := 38
	26	[2468]	GETGLOBAL	R3 K5 ; R3 := _T
	27	[2468]	GETTABLE 	R3 R3 K6 ; R3 := R3["curTransmission"]
	28	[2468]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xf2deaf69]
	29	[2468]	MOVE     	R5 R0 ; R5 := R0
	30	[2468]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	31	[2468]	TEST     	R3 0 ; if not R3 then PC := 38
	32	[2468]	JMP      	38 ; PC := 38
	33	[2469]	SELF     	R3 R2 K9 ; R4 := R2; R3 := R2[0xe4162eed]
	34	[2469]	LOADK    	R5 K10 ; R5 := "QueueClose"
	35	[2469]	LOADK    	R6 K11 ; R6 := ""
	36	[2469]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	37	[2469]	JMP      	77 ; PC := 77
	38	[2470]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	39	[2470]	GETGLOBAL	R4 K5 ; R4 := _T
	40	[2470]	GETTABLE 	R4 R4 K12 ; R4 := R4["QueuedTransmissions"]
	41	[2470]	CALL     	R3 2 2 ; R3 := R3(R4)
	42	[2470]	TEST     	R3 1 ; if R3 then PC := 77
	43	[2470]	JMP      	77 ; PC := 77
	44	[2472]	LOADK    	R3 := 1.000000
	45	[2473]	GETGLOBAL	R4 K5 ; R4 := _T
	46	[2473]	GETTABLE 	R4 R4 K12 ; R4 := R4["QueuedTransmissions"]
	47	[2473]	LEN      	R4 R4 ; R4 := # R4
	48	[2473]	LE       	0 R3 R4 ; if R3 > R4 then PC := 77
	49	[2473]	JMP      	77 ; PC := 77
	50	[2474]	GETGLOBAL	R4 K5 ; R4 := _T
	51	[2474]	GETTABLE 	R4 R4 K12 ; R4 := R4["QueuedTransmissions"]
	52	[2474]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	53	[2474]	GETTABLE 	R4 R4 K13 ; R4 := R4["Transmission"]
	54	[2474]	EQ       	1 R4 R0 ; if R4 == R0 then PC := 67
	55	[2474]	JMP      	67 ; PC := 67
	56	[2474]	TEST     	R1 0 ; if not R1 then PC := 75
	57	[2474]	JMP      	75 ; PC := 75
	58	[2474]	GETGLOBAL	R4 K5 ; R4 := _T
	59	[2474]	GETTABLE 	R4 R4 K12 ; R4 := R4["QueuedTransmissions"]
	60	[2474]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	61	[2474]	GETTABLE 	R4 R4 K13 ; R4 := R4["Transmission"]
	62	[2474]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xf2deaf69]
	63	[2474]	MOVE     	R6 R0 ; R6 := R0
	64	[2474]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	65	[2474]	TEST     	R4 0 ; if not R4 then PC := 75
	66	[2474]	JMP      	75 ; PC := 75
	67	[2475]	GETGLOBAL	R4 K14 ; R4 := 0x33bdd652
	68	[2475]	GETTABLE 	R4 R4 K15 ; R4 := R4[0x9c1f3b5a]
	69	[2475]	GETGLOBAL	R5 K5 ; R5 := _T
	70	[2475]	GETTABLE 	R5 R5 K12 ; R5 := R5["QueuedTransmissions"]
	71	[2475]	MOVE     	R6 R3 ; R6 := R3
	72	[2475]	CALL     	R4 3 1 ; R4(R5,R6)
	73	[2476]	JMP      	77 ; PC := 77
	74	[2476]	JMP      	45 ; PC := 45
	75	[2478]	ADD      	R3 R3 K16 ; R3 := R3 + 1.000000
	76	[2479]	JMP      	45 ; PC := 45
	77	[2483]	RETURN   	R0 1 ; return 

function #132 <?:2485,2487> (5 instructions, 20 bytes at 0000025274EF4200)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2486]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2486]	MOVE     	R3 R0 ; R3 := R0
	3	[2486]	MOVE     	R4 R1 ; R4 := R1
	4	[2486]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[2487]	RETURN   	R0 1 ; return 

function #133 <?:2489,2504> (37 instructions, 148 bytes at 0000025274EF42F0)
2 params, 6 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[2490]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[2490]	GETTABLE 	R2 R2 K1 ; R2 := R2["QueuedTransmissions"]
	3	[2490]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 8
	4	[2490]	JMP      	8 ; PC := 8
	5	[2491]	GETGLOBAL	R2 K0 ; R2 := _T
	6	[2491]	NEWTABLE 	R3 0 0 ; R3 := {}
	7	[2491]	SETTABLE 	R2 K1 R3 ; R2["QueuedTransmissions"] := R3
	8	[2494]	GETGLOBAL	R2 K3 ; R2 := 0x3d106989
	9	[2494]	LOADK    	R3 K4 ; R3 := "Queuing new transmission: "
	10	[2494]	SELF     	R4 R0 K5 ; R5 := R0; R4 := R0[0xe223e2b1]
	11	[2494]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[2494]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	13	[2494]	CALL     	R2 2 1 ; R2(R3)
	14	[2495]	GETGLOBAL	R2 K6 ; R2 := 0x6c97a788
	15	[2495]	GETTABLE 	R2 R2 K7 ; R2 := R2[0xe368acc9]
	16	[2495]	MOVE     	R3 R0 ; R3 := R0
	17	[2495]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[2497]	GETTABLE 	R3 R2 K8 ; R3 := R2["mQueueDump"]
	19	[2497]	TEST     	R3 0 ; if not R3 then PC := 29
	20	[2497]	JMP      	29 ; PC := 29
	21	[2498]	GETGLOBAL	R3 K3 ; R3 := 0x3d106989
	22	[2498]	LOADK    	R4 K9 ; R4 := "Dumping queued transmissions and interrupting current one"
	23	[2498]	CALL     	R3 2 1 ; R3(R4)
	24	[2499]	GETUPVAL 	R3 U0 ; R3 := U0
	25	[2499]	CALL     	R3 1 1 ; R3()
	26	[2500]	GETGLOBAL	R3 K0 ; R3 := _T
	27	[2500]	NEWTABLE 	R4 0 0 ; R4 := {}
	28	[2500]	SETTABLE 	R3 K1 R4 ; R3["QueuedTransmissions"] := R4
	29	[2503]	GETGLOBAL	R3 K10 ; R3 := 0x33bdd652
	30	[2503]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x23d5322f]
	31	[2503]	GETGLOBAL	R4 K0 ; R4 := _T
	32	[2503]	GETTABLE 	R4 R4 K1 ; R4 := R4["QueuedTransmissions"]
	33	[2503]	NEWTABLE 	R5 0 2 ; R5 := {}
	34	[2503]	SETTABLE 	R5 K12 R0 ; R5["Transmission"] := R0
	35	[2503]	SETTABLE 	R5 K13 R1 ; R5["SpeakerData"] := R1
	36	[2503]	CALL     	R3 3 1 ; R3(R4,R5)
	37	[2504]	RETURN   	R0 1 ; return 

function #134 <?:2506,2508> (5 instructions, 20 bytes at 0000025274EF4710)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2507]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2507]	MOVE     	R3 R0 ; R3 := R0
	3	[2507]	MOVE     	R4 R1 ; R4 := R1
	4	[2507]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[2508]	RETURN   	R0 1 ; return 

function #135 <?:2510,2522> (27 instructions, 108 bytes at 0000025274EF4800)
2 params, 6 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[2511]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[2511]	MOVE     	R3 R0 ; R3 := R0
	3	[2511]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[2511]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[2511]	JMP      	7 ; PC := 7
	6	[2512]	RETURN   	R0 1 ; return 
	7	[2515]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[2515]	MOVE     	R3 R0 ; R3 := R0
	9	[2515]	MOVE     	R4 R1 ; R4 := R1
	10	[2515]	CALL     	R2 3 1 ; R2(R3,R4)
	11	[2517]	GETGLOBAL	R2 K1 ; R2 := 0x9ba7909f
	12	[2517]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xbcfb64ab]
	13	[2517]	GETGLOBAL	R4 K3 ; R4 := 0x0032441c
	14	[2517]	GETTABLE 	R4 R4 K4 ; R4 := R4["UIMovie_TransmissionMovie"]
	15	[2517]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[2518]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	17	[2518]	MOVE     	R4 R2 ; R4 := R2
	18	[2518]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[2518]	TEST     	R3 0 ; if not R3 then PC := 27
	20	[2518]	JMP      	27 ; PC := 27
	21	[2519]	GETGLOBAL	R3 K1 ; R3 := 0x9ba7909f
	22	[2519]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x6dd7aa66]
	23	[2519]	GETGLOBAL	R5 K3 ; R5 := 0x0032441c
	24	[2519]	GETTABLE 	R5 R5 K4 ; R5 := R5["UIMovie_TransmissionMovie"]
	25	[2519]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	26	[2519]	MOVE     	R2 R3 ; R2 := R3
	27	[2522]	RETURN   	R0 1 ; return 

function #136 <?:2524,2526> (5 instructions, 20 bytes at 0000025274EF4A00)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2525]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2525]	MOVE     	R3 R0 ; R3 := R0
	3	[2525]	MOVE     	R4 R1 ; R4 := R1
	4	[2525]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[2526]	RETURN   	R0 1 ; return 

function #137 <?:2528,2533> (12 instructions, 48 bytes at 0000025274EF4AF0)
0 params, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[2529]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[2529]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x5374b92e]
	3	[2529]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	4	[2529]	GETTABLE 	R2 R2 K3 ; R2 := R2["UIMovie_TransmissionMovie"]
	5	[2529]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	6	[2529]	TEST     	R0 0 ; if not R0 then PC := 10
	7	[2529]	JMP      	10 ; PC := 10
	8	[2530]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[2530]	RETURN   	R0 2 ; return R0 
	10	[2532]	OP_LOADBOOL	R0 0 0 ; R0 := false
	11	[2532]	RETURN   	R0 2 ; return R0 
	12	[2533]	RETURN   	R0 1 ; return 

function #138 <?:2535,2545> (16 instructions, 64 bytes at 0000025274EF4C50)
0 params, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[2537]	LOADK    	R0 := 0.000000
	2	[2538]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	3	[2539]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[2539]	MOVE     	R3 R1 ; R3 := R1
	5	[2539]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[2539]	TEST     	R2 1 ; if R2 then PC := 15
	7	[2539]	JMP      	15 ; PC := 15
	8	[2540]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0xa59dbd63]
	9	[2540]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[2541]	GETGLOBAL	R3 K3 ; R3 := 0xa94df70b
	11	[2541]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x18a82453]
	12	[2541]	MOVE     	R5 R2 ; R5 := R2
	13	[2541]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	14	[2541]	MOVE     	R0 R3 ; R0 := R3
	15	[2544]	RETURN   	R0 2 ; return R0 
	16	[2545]	RETURN   	R0 1 ; return 

function #139 <?:2547,2572> (64 instructions, 256 bytes at 0000025274EF4DE0)
0 params, 9 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[2548]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2548]	GETTABLE 	R0 R0 K1 ; R0 := R0["HasCompletedVorsPrize"]
	3	[2548]	TEST     	R0 0 ; if not R0 then PC := 7
	4	[2548]	JMP      	7 ; PC := 7
	5	[2549]	OP_LOADBOOL	R0 1 0 ; R0 := true
	6	[2549]	RETURN   	R0 2 ; return R0 
	7	[2553]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	8	[2553]	GETGLOBAL	R1 K3 ; R1 := 0x83f4e77c
	9	[2553]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[2553]	TEST     	R0 0 ; if not R0 then PC := 16
	11	[2553]	JMP      	16 ; PC := 16
	12	[2554]	GETGLOBAL	R0 K0 ; R0 := _T
	13	[2554]	SETTABLE 	R0 K1 K4 ; R0["HasCompletedVorsPrize"] := true
	14	[2555]	OP_LOADBOOL	R0 1 0 ; R0 := true
	15	[2555]	RETURN   	R0 2 ; return R0 
	16	[2559]	GETGLOBAL	R0 K5 ; R0 := 0x7ed0a956
	17	[2559]	LOADK    	R1 K6 ; R1 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
	18	[2559]	CALL     	R0 2 2 ; R0 := R0(R1)
	19	[2560]	GETGLOBAL	R1 K5 ; R1 := 0x7ed0a956
	20	[2560]	LOADK    	R2 K7 ; R2 := "/Lotus/Types/Keys/InfestedIntroQuest/InfestedIntroQuestKeyChain"
	21	[2560]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[2562]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	23	[2562]	GETGLOBAL	R3 K8 ; R3 := 0x25d99d89
	24	[2562]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[2562]	TEST     	R2 1 ; if R2 then PC := 62
	26	[2562]	JMP      	62 ; PC := 62
	27	[2562]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	28	[2562]	GETGLOBAL	R3 K8 ; R3 := 0x25d99d89
	29	[2562]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x25a6e75e]
	30	[2562]	CALL     	R3 2 0 ; R3,... := R3(R4)
	31	[2562]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	32	[2562]	TEST     	R2 1 ; if R2 then PC := 62
	33	[2562]	JMP      	62 ; PC := 62
	34	[2563]	GETGLOBAL	R2 K10 ; R2 := 0xcfc01047
	35	[2563]	GETGLOBAL	R3 K8 ; R3 := 0x25d99d89
	36	[2563]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x25a6e75e]
	37	[2563]	CALL     	R3 2 2 ; R3 := R3(R4)
	38	[2563]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0xe9768ed0]
	39	[2563]	CALL     	R3 2 0 ; R3,... := R3(R4)
	40	[2563]	CALL     	R2 0 4 ; R2,R3,R4 := R2(R3,...)
	41	[2563]	JMP      	60 ; PC := 60
	42	[2564]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	43	[2564]	MOVE     	R8 R6 ; R8 := R6
	44	[2564]	CALL     	R7 2 2 ; R7 := R7(R8)
	45	[2564]	TEST     	R7 1 ; if R7 then PC := 60
	46	[2564]	JMP      	60 ; PC := 60
	47	[2564]	GETTABLE 	R7 R6 K12 ; R7 := R6["mItemType"]
	48	[2564]	EQ       	1 R7 R1 ; if R7 == R1 then PC := 56
	49	[2564]	JMP      	56 ; PC := 56
	50	[2564]	GETTABLE 	R7 R6 K12 ; R7 := R6["mItemType"]
	51	[2564]	EQ       	0 R7 R0 ; if R7 ~= R0 then PC := 60
	52	[2564]	JMP      	60 ; PC := 60
	53	[2564]	GETTABLE 	R7 R6 K13 ; R7 := R6["mCompleted"]
	54	[2564]	TEST     	R7 0 ; if not R7 then PC := 60
	55	[2564]	JMP      	60 ; PC := 60
	56	[2565]	GETGLOBAL	R7 K0 ; R7 := _T
	57	[2565]	SETTABLE 	R7 K1 K4 ; R7["HasCompletedVorsPrize"] := true
	58	[2566]	OP_LOADBOOL	R7 1 0 ; R7 := true
	59	[2566]	RETURN   	R7 2 ; return R7 
	60	[2563]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 42; R4 := R5 end
	61	[2567]	JMP      	42 ; PC := 42
	62	[2571]	OP_LOADBOOL	R7 0 0 ; R7 := false
	63	[2571]	RETURN   	R7 2 ; return R7 
	64	[2572]	RETURN   	R0 1 ; return 

function #140 <?:2574,2576> (4 instructions, 16 bytes at 0000025274EF5290)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2575]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2575]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2575]	RETURN   	R0 0 ; return R0,... 
	4	[2576]	RETURN   	R0 1 ; return 

function #141 <?:2578,2614> (74 instructions, 296 bytes at 0000025274EF5360)
1 param, 12 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[2581]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2581]	GETGLOBAL	R2 K1 ; R2 := 0x83f4e77c
	3	[2581]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2581]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[2581]	JMP      	8 ; PC := 8
	6	[2582]	OP_LOADBOOL	R1 1 0 ; R1 := true
	7	[2582]	RETURN   	R1 2 ; return R1 
	8	[2585]	GETGLOBAL	R1 K2 ; R1 := 0x7ed0a956
	9	[2585]	LOADK    	R2 K3 ; R2 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
	10	[2585]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[2586]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 16
	12	[2586]	JMP      	16 ; PC := 16
	13	[2587]	GETUPVAL 	R2 U0 ; R2 := U0
	14	[2587]	CALL     	R2 1 2 ; R2 := R2()
	15	[2587]	RETURN   	R2 2 ; return R2 
	16	[2590]	GETGLOBAL	R2 K4 ; R2 := 0x25d99d89
	17	[2591]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	18	[2591]	MOVE     	R4 R2 ; R4 := R2
	19	[2591]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[2591]	TEST     	R3 0 ; if not R3 then PC := 34
	21	[2591]	JMP      	34 ; PC := 34
	22	[2592]	GETGLOBAL	R3 K5 ; R3 := 0x76ea806b
	23	[2592]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0x3f3ae64c]
	24	[2592]	LOADK    	R5 := 0.000000
	25	[2592]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	26	[2593]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	27	[2593]	MOVE     	R5 R3 ; R5 := R3
	28	[2593]	CALL     	R4 2 2 ; R4 := R4(R5)
	29	[2593]	TEST     	R4 1 ; if R4 then PC := 34
	30	[2593]	JMP      	34 ; PC := 34
	31	[2594]	SELF     	R4 R3 K7 ; R5 := R3; R4 := R3[0x80563238]
	32	[2594]	CALL     	R4 2 2 ; R4 := R4(R5)
	33	[2594]	MOVE     	R2 R4 ; R2 := R4
	34	[2597]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	35	[2597]	MOVE     	R5 R0 ; R5 := R0
	36	[2597]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[2597]	TEST     	R4 0 ; if not R4 then PC := 41
	38	[2597]	JMP      	41 ; PC := 41
	39	[2598]	OP_LOADBOOL	R4 0 0 ; R4 := false
	40	[2598]	RETURN   	R4 2 ; return R4 
	41	[2600]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	42	[2600]	MOVE     	R5 R2 ; R5 := R2
	43	[2600]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[2600]	TEST     	R4 1 ; if R4 then PC := 72
	45	[2600]	JMP      	72 ; PC := 72
	46	[2601]	SELF     	R4 R2 K8 ; R5 := R2; R4 := R2[0x25a6e75e]
	47	[2601]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[2602]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	49	[2602]	MOVE     	R6 R4 ; R6 := R4
	50	[2602]	CALL     	R5 2 2 ; R5 := R5(R6)
	51	[2602]	TEST     	R5 1 ; if R5 then PC := 72
	52	[2602]	JMP      	72 ; PC := 72
	53	[2603]	SELF     	R5 R4 K9 ; R6 := R4; R5 := R4[0xe9768ed0]
	54	[2603]	CALL     	R5 2 2 ; R5 := R5(R6)
	55	[2605]	LOADK    	R6 := 1.000000
	56	[2605]	LEN      	R7 R5 ; R7 := # R5
	57	[2605]	LOADK    	R8 := 1.000000
	58	[2605]	FORPREP  	R6 71 ; R6 -= R8; PC := 71
	59	[2606]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	60	[2606]	GETTABLE 	R11 R5 R9 ; R11 := R5[R9]
	61	[2606]	CALL     	R10 2 2 ; R10 := R10(R11)
	62	[2606]	TEST     	R10 1 ; if R10 then PC := 71
	63	[2606]	JMP      	71 ; PC := 71
	64	[2606]	GETTABLE 	R10 R5 R9 ; R10 := R5[R9]
	65	[2606]	GETTABLE 	R10 R10 K10 ; R10 := R10["mItemType"]
	66	[2606]	EQ       	0 R0 R10 ; if R0 ~= R10 then PC := 71
	67	[2606]	JMP      	71 ; PC := 71
	68	[2607]	GETTABLE 	R10 R5 R9 ; R10 := R5[R9]
	69	[2607]	GETTABLE 	R10 R10 K11 ; R10 := R10["mCompleted"]
	70	[2607]	RETURN   	R10 2 ; return R10 
	71	[2605]	FORLOOP  	R6 59 ; R6 += R8; if R6 <= R7 then begin PC := 59; R9 := R6 end
	72	[2613]	OP_LOADBOOL	R10 0 0 ; R10 := false
	73	[2613]	RETURN   	R10 2 ; return R10 
	74	[2614]	RETURN   	R0 1 ; return 

function #142 <?:2616,2618> (5 instructions, 20 bytes at 0000025274EF5740)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2617]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2617]	MOVE     	R2 R0 ; R2 := R0
	3	[2617]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[2617]	RETURN   	R1 0 ; return R1,... 
	5	[2618]	RETURN   	R0 1 ; return 

function #143 <?:2622,2629> (28 instructions, 112 bytes at 0000025274EF5830)
1 param, 7 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[2623]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	2	[2623]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x66edf04f]
	3	[2623]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	4	[2623]	SELF     	R3 R0 K3 ; R4 := R0; R3 := R0[0xed4e0128]
	5	[2623]	CALL     	R3 2 0 ; R3,... := R3(R4)
	6	[2623]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	7	[2623]	LOADK    	R3 K4 ; R3 := "/Lotus/Types/"
	8	[2623]	LOADK    	R4 K5 ; R4 := "/Lotus/StoreItems/Types/"
	9	[2623]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	10	[2624]	GETGLOBAL	R2 K6 ; R2 := 0xb009bbc6
	11	[2624]	MOVE     	R3 R1 ; R3 := R1
	12	[2624]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[2625]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	14	[2625]	MOVE     	R4 R2 ; R4 := R2
	15	[2625]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[2625]	TEST     	R3 1 ; if R3 then PC := 26
	17	[2625]	JMP      	26 ; PC := 26
	18	[2626]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	19	[2626]	GETGLOBAL	R4 K2 ; R4 := 0x64fb1586
	20	[2626]	SELF     	R5 R2 K9 ; R6 := R2; R5 := R2[0xd3a9d01f]
	21	[2626]	CALL     	R5 2 0 ; R5,... := R5(R6)
	22	[2626]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	23	[2626]	LOADNIL  	R5 R5 ; R5 := nil
	24	[2626]	TAILCALL 	R3 3 0 ; R3,... := R3(R4,R5)
	25	[2626]	RETURN   	R3 0 ; return R3,... 
	26	[2628]	LOADK    	R3 K10 ; R3 := ""
	27	[2628]	RETURN   	R3 2 ; return R3 
	28	[2629]	RETURN   	R0 1 ; return 

function #144 <?:2632,2635> (16 instructions, 64 bytes at 0000025274EF5B10)
0 params, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2633]	GETGLOBAL	R0 K0 ; R0 := 0x7ed0a956
	2	[2633]	LOADK    	R1 K1 ; R1 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
	3	[2633]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2634]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	5	[2634]	MOVE     	R2 R0 ; R2 := R0
	6	[2634]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[2634]	TEST     	R1 1 ; if R1 then PC := 13
	8	[2634]	JMP      	13 ; PC := 13
	9	[2634]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[2634]	MOVE     	R2 R0 ; R2 := R0
	11	[2634]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[2634]	JMP      	15 ; PC := 15
	13	[2634]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 14
	14	[2634]	OP_LOADBOOL	R1 1 0 ; R1 := true
	15	[2634]	RETURN   	R1 2 ; return R1 
	16	[2635]	RETURN   	R0 1 ; return 

function #145 <?:2637,2639> (4 instructions, 16 bytes at 0000025274EF5C80)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2638]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2638]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2638]	RETURN   	R0 0 ; return R0,... 
	4	[2639]	RETURN   	R0 1 ; return 

function #146 <?:2641,2659> (44 instructions, 176 bytes at 0000025274EF5D50)
0 params, 8 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[2643]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[2644]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	3	[2644]	GETGLOBAL	R2 K1 ; R2 := 0xe7f2b02f
	4	[2644]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x565be9ee]
	5	[2644]	CALL     	R2 2 0 ; R2,... := R2(R3)
	6	[2644]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	7	[2644]	TEST     	R1 1 ; if R1 then PC := 14
	8	[2644]	JMP      	14 ; PC := 14
	9	[2644]	GETGLOBAL	R1 K1 ; R1 := 0xe7f2b02f
	10	[2644]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xb321d806]
	11	[2644]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[2644]	TEST     	R1 0 ; if not R1 then PC := 18
	13	[2644]	JMP      	18 ; PC := 18
	14	[2645]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[2645]	CALL     	R1 1 2 ; R1 := R1()
	16	[2645]	MOVE     	R0 R1 ; R0 := R1
	17	[2645]	JMP      	37 ; PC := 37
	18	[2647]	GETGLOBAL	R1 K1 ; R1 := 0xe7f2b02f
	19	[2647]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x6d0aa187]
	20	[2647]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[2648]	LOADK    	R2 := 1.000000
	22	[2648]	LEN      	R3 R1 ; R3 := # R1
	23	[2648]	LOADK    	R4 := 1.000000
	24	[2648]	FORPREP  	R2 36 ; R2 -= R4; PC := 36
	25	[2649]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	26	[2649]	GETTABLE 	R6 R6 K5 ; R6 := R6["isHost"]
	27	[2649]	TEST     	R6 0 ; if not R6 then PC := 36
	28	[2649]	JMP      	36 ; PC := 36
	29	[2650]	GETGLOBAL	R6 K6 ; R6 := cjson
	30	[2650]	GETTABLE 	R6 R6 K7 ; R6 := R6[0x7ab914d8]
	31	[2650]	GETTABLE 	R7 R1 R5 ; R7 := R1[R5]
	32	[2650]	GETTABLE 	R7 R7 K8 ; R7 := R7["loadout"]
	33	[2650]	CALL     	R6 2 2 ; R6 := R6(R7)
	34	[2651]	GETTABLE 	R0 R6 K9 ; R0 := R6["PostNewWar"]
	35	[2652]	JMP      	37 ; PC := 37
	36	[2648]	FORLOOP  	R2 25 ; R2 += R4; if R2 <= R3 then begin PC := 25; R5 := R2 end
	37	[2658]	EQ       	1 R0 K10 ; if R0 == nil then PC := 41
	38	[2658]	JMP      	41 ; PC := 41
	39	[2658]	EQ       	0 R0 K11 ; if R0 ~= false then PC := 42
	40	[2658]	JMP      	42 ; PC := 42
	41	[2658]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 42
	42	[2658]	OP_LOADBOOL	R7 1 0 ; R7 := true
	43	[2658]	RETURN   	R7 2 ; return R7 
	44	[2659]	RETURN   	R0 1 ; return 

function #147 <?:2661,2663> (4 instructions, 16 bytes at 0000025274EF60D0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2662]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2662]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2662]	RETURN   	R0 0 ; return R0,... 
	4	[2663]	RETURN   	R0 1 ; return 

function #148 <?:2665,2669> (15 instructions, 60 bytes at 0000025274EF61A0)
0 params, 4 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[2666]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2666]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	3	[2666]	CALL     	R0 2 3 ; R0,R1 := R0(R1)
	4	[2668]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	5	[2668]	MOVE     	R3 R0 ; R3 := R0
	6	[2668]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[2668]	TEST     	R2 1 ; if R2 then PC := 14
	8	[2668]	JMP      	14 ; PC := 14
	9	[2668]	GETUPVAL 	R2 U1 ; R2 := U1
	10	[2668]	EQ       	0 R0 R2 ; if R0 ~= R2 then PC := 13
	11	[2668]	JMP      	13 ; PC := 13
	12	[2668]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 13
	13	[2668]	OP_LOADBOOL	R2 1 0 ; R2 := true
	14	[2668]	RETURN   	R2 2 ; return R2 
	15	[2669]	RETURN   	R0 1 ; return 

function #149 <?:2671,2673> (4 instructions, 16 bytes at 0000025274EF6300)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2672]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2672]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2672]	RETURN   	R0 0 ; return R0,... 
	4	[2673]	RETURN   	R0 1 ; return 

function #150 <?:2675,2698> (39 instructions, 156 bytes at 0000025274EF63D0)
1 param, 5 slots, 2 upvalues, 0 locals, 8 constants, 0 functions
	1	[2676]	TEST     	R0 1 ; if R0 then PC := 4
	2	[2676]	JMP      	4 ; PC := 4
	3	[2677]	RETURN   	R0 1 ; return 
	4	[2680]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	5	[2680]	GETTABLE 	R2 R0 K1 ; R2 := R0["location"]
	6	[2680]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[2681]	GETGLOBAL	R2 K2 ; R2 := POST_NEW_WAR_MISSIONS
	8	[2681]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	9	[2683]	TEST     	R2 1 ; if R2 then PC := 12
	10	[2683]	JMP      	12 ; PC := 12
	11	[2684]	RETURN   	R0 1 ; return 
	12	[2687]	GETUPVAL 	R3 U0 ; R3 := U0
	13	[2687]	CALL     	R3 1 2 ; R3 := R3()
	14	[2687]	TEST     	R3 0 ; if not R3 then PC := 39
	15	[2687]	JMP      	39 ; PC := 39
	16	[2687]	GETUPVAL 	R3 U1 ; R3 := U1
	17	[2687]	CALL     	R3 1 2 ; R3 := R3()
	18	[2687]	TEST     	R3 0 ; if not R3 then PC := 39
	19	[2687]	JMP      	39 ; PC := 39
	20	[2688]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	21	[2688]	GETTABLE 	R4 R2 K4 ; R4 := R2["levelOverride"]
	22	[2688]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[2688]	TEST     	R3 1 ; if R3 then PC := 27
	24	[2688]	JMP      	27 ; PC := 27
	25	[2689]	GETTABLE 	R3 R2 K4 ; R3 := R2["levelOverride"]
	26	[2689]	SETTABLE 	R0 K4 R3 ; R0["levelOverride"] := R3
	27	[2691]	GETTABLE 	R3 R2 K5 ; R3 := R2["goalTag"]
	28	[2691]	TEST     	R3 0 ; if not R3 then PC := 32
	29	[2691]	JMP      	32 ; PC := 32
	30	[2692]	GETTABLE 	R3 R2 K5 ; R3 := R2["goalTag"]
	31	[2692]	SETTABLE 	R0 K5 R3 ; R0["goalTag"] := R3
	32	[2694]	GETTABLE 	R3 R2 K6 ; R3 := R2["extraEnemySpec"]
	33	[2694]	TEST     	R3 0 ; if not R3 then PC := 39
	34	[2694]	JMP      	39 ; PC := 39
	35	[2695]	GETGLOBAL	R3 K7 ; R3 := 0xb009bbc6
	36	[2695]	GETTABLE 	R4 R2 K6 ; R4 := R2["extraEnemySpec"]
	37	[2695]	CALL     	R3 2 2 ; R3 := R3(R4)
	38	[2695]	SETTABLE 	R0 K6 R3 ; R0["extraEnemySpec"] := R3
	39	[2698]	RETURN   	R0 1 ; return 

function #151 <?:2700,2702> (4 instructions, 16 bytes at 0000025274EF6650)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2701]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2701]	MOVE     	R2 R0 ; R2 := R0
	3	[2701]	CALL     	R1 2 1 ; R1(R2)
	4	[2702]	RETURN   	R0 1 ; return 

function #152 <?:2704,2721> (30 instructions, 120 bytes at 0000025274EF6720)
2 params, 7 slots, 2 upvalues, 0 locals, 6 constants, 0 functions
	1	[2706]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2706]	CALL     	R2 1 2 ; R2 := R2()
	3	[2706]	SELF     	R2 R2 K0 ; R3 := R2; R2 := R2[0x228a5581]
	4	[2706]	MOVE     	R4 R0 ; R4 := R0
	5	[2706]	MOVE     	R5 R1 ; R5 := R1
	6	[2706]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	7	[2708]	TEST     	R0 1 ; if R0 then PC := 10
	8	[2708]	JMP      	10 ; PC := 10
	9	[2709]	RETURN   	R0 1 ; return 
	10	[2712]	GETGLOBAL	R2 K1 ; R2 := POST_NEW_WAR_MISSIONS
	11	[2712]	GETGLOBAL	R3 K2 ; R3 := 0x64fb1586
	12	[2712]	MOVE     	R4 R0 ; R4 := R0
	13	[2712]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[2712]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	15	[2714]	TEST     	R2 0 ; if not R2 then PC := 21
	16	[2714]	JMP      	21 ; PC := 21
	17	[2714]	GETUPVAL 	R3 U1 ; R3 := U1
	18	[2714]	CALL     	R3 1 2 ; R3 := R3()
	19	[2714]	TEST     	R3 1 ; if R3 then PC := 22
	20	[2714]	JMP      	22 ; PC := 22
	21	[2715]	RETURN   	R0 1 ; return 
	22	[2718]	GETTABLE 	R3 R2 K3 ; R3 := R2["streamingOffset"]
	23	[2718]	TEST     	R3 0 ; if not R3 then PC := 30
	24	[2718]	JMP      	30 ; PC := 30
	25	[2719]	SELF     	R3 R1 K4 ; R4 := R1; R3 := R1[0x691a3b2d]
	26	[2719]	GETTABLE 	R5 R2 K3 ; R5 := R2["streamingOffset"]
	27	[2719]	GETGLOBAL	R6 K5 ; R6 := 0x00046924
	28	[2719]	CALL     	R6 1 0 ; R6,... := R6()
	29	[2719]	CALL     	R3 0 1 ; R3(R4,...)
	30	[2721]	RETURN   	R0 1 ; return 

function #153 <?:2723,2732> (15 instructions, 60 bytes at 0000025274EF6940)
2 params, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2724]	TEST     	R1 0 ; if not R1 then PC := 7
	2	[2724]	JMP      	7 ; PC := 7
	3	[2724]	GETGLOBAL	R2 K0 ; R2 := POST_NEW_WAR_MISSIONS
	4	[2724]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	5	[2724]	TEST     	R2 1 ; if R2 then PC := 8
	6	[2724]	JMP      	8 ; PC := 8
	7	[2725]	RETURN   	R0 1 ; return 
	8	[2728]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[2728]	CALL     	R2 1 2 ; R2 := R2()
	10	[2728]	TEST     	R2 0 ; if not R2 then PC := 15
	11	[2728]	JMP      	15 ; PC := 15
	12	[2730]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0xeaa7e8dc]
	13	[2730]	LOADK    	R4 K2 ; R4 := "Alt"
	14	[2730]	CALL     	R2 3 1 ; R2(R3,R4)
	15	[2732]	RETURN   	R0 1 ; return 

function #154 <?:2734,2739> (12 instructions, 48 bytes at 0000025274EF6AE0)
1 param, 4 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[2736]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2736]	CALL     	R1 1 2 ; R1 := R1()
	3	[2736]	SELF     	R1 R1 K0 ; R2 := R1; R1 := R1[0xc18bf6f0]
	4	[2736]	MOVE     	R3 R0 ; R3 := R0
	5	[2736]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[2736]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x8f89d633]
	7	[2736]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[2737]	GETUPVAL 	R2 U1 ; R2 := U1
	9	[2737]	MOVE     	R3 R1 ; R3 := R1
	10	[2737]	CALL     	R2 2 1 ; R2(R3)
	11	[2738]	RETURN   	R1 2 ; return R1 
	12	[2739]	RETURN   	R0 1 ; return 

function #155 <?:2741,2750> (18 instructions, 72 bytes at 0000025274EF6C20)
2 params, 7 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[2744]	GETGLOBAL	R2 K0 ; R2 := POST_NEW_WAR_MISSIONS
	2	[2744]	GETGLOBAL	R3 K1 ; R3 := 0x64fb1586
	3	[2744]	MOVE     	R4 R0 ; R4 := R0
	4	[2744]	CALL     	R3 2 2 ; R3 := R3(R4)
	5	[2744]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	6	[2745]	TEST     	R2 1 ; if R2 then PC := 9
	7	[2745]	JMP      	9 ; PC := 9
	8	[2746]	RETURN   	R1 2 ; return R1 
	9	[2749]	GETUPVAL 	R3 U0 ; R3 := U0
	10	[2749]	GETTABLE 	R3 R3 K2 ; R3 := R3[0x06d055f9]
	11	[2749]	GETUPVAL 	R4 U1 ; R4 := U1
	12	[2749]	CALL     	R4 1 2 ; R4 := R4()
	13	[2749]	GETGLOBAL	R5 K3 ; R5 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	14	[2749]	LOADK    	R6 := 0.000000
	15	[2749]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	16	[2749]	ADD      	R3 R1 R3 ; R3 := R1 + R3
	17	[2749]	RETURN   	R3 2 ; return R3 
	18	[2750]	RETURN   	R0 1 ; return 

function #156 <?:2752,2754> (6 instructions, 24 bytes at 0000025274EF6DC0)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2753]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2753]	MOVE     	R3 R0 ; R3 := R0
	3	[2753]	MOVE     	R4 R1 ; R4 := R1
	4	[2753]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	5	[2753]	RETURN   	R2 0 ; return R2,... 
	6	[2754]	RETURN   	R0 1 ; return 

function #157 <?:2756,2758> (10 instructions, 40 bytes at 0000025274EF6EB0)
2 params, 3 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2757]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 8
	2	[2757]	JMP      	8 ; PC := 8
	3	[2757]	GETGLOBAL	R2 K0 ; R2 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	4	[2757]	ADD      	R2 R1 R2 ; R2 := R1 + R2
	5	[2757]	EQ       	1 R0 R2 ; if R0 == R2 then PC := 8
	6	[2757]	JMP      	8 ; PC := 8
	7	[2757]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 8
	8	[2757]	OP_LOADBOOL	R2 1 0 ; R2 := true
	9	[2757]	RETURN   	R2 2 ; return R2 
	10	[2758]	RETURN   	R0 1 ; return 

function #158 <?:2760,2772> (38 instructions, 152 bytes at 0000025274EF6FE0)
0 params, 10 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[2761]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2761]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[2761]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2761]	TEST     	R0 1 ; if R0 then PC := 36
	5	[2761]	JMP      	36 ; PC := 36
	6	[2762]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	7	[2762]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x25a6e75e]
	8	[2762]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[2763]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xe9768ed0]
	10	[2763]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[2764]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0x8e7c3b5e]
	12	[2764]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[2765]	GETGLOBAL	R3 K5 ; R3 := 0xcfc01047
	14	[2765]	MOVE     	R4 R1 ; R4 := R1
	15	[2765]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	16	[2765]	JMP      	34 ; PC := 34
	17	[2766]	GETTABLE 	R8 R7 K6 ; R8 := R7["mItemType"]
	18	[2766]	GETUPVAL 	R9 U0 ; R9 := U0
	19	[2766]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 34
	20	[2766]	JMP      	34 ; PC := 34
	21	[2767]	GETTABLE 	R8 R7 K7 ; R8 := R7["mCompleted"]
	22	[2767]	TEST     	R8 1 ; if R8 then PC := 33
	23	[2767]	JMP      	33 ; PC := 33
	24	[2767]	GETUPVAL 	R8 U0 ; R8 := U0
	25	[2767]	EQ       	0 R2 R8 ; if R2 ~= R8 then PC := 31
	26	[2767]	JMP      	31 ; PC := 31
	27	[2767]	GETTABLE 	R8 R7 K8 ; R8 := R7["mProgress"]
	28	[2767]	LEN      	R8 R8 ; R8 := # R8
	29	[2767]	LT       	1 K9 R8 ; if 0.000000 < R8 then PC := 32
	30	[2767]	JMP      	32 ; PC := 32
	31	[2767]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 32
	32	[2767]	OP_LOADBOOL	R8 1 0 ; R8 := true
	33	[2767]	RETURN   	R8 2 ; return R8 
	34	[2765]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 17; R5 := R6 end
	35	[2768]	JMP      	17 ; PC := 17
	36	[2771]	OP_LOADBOOL	R8 0 0 ; R8 := false
	37	[2771]	RETURN   	R8 2 ; return R8 
	38	[2772]	RETURN   	R0 1 ; return 

function #159 <?:2774,2776> (5 instructions, 20 bytes at 0000025274EF72C0)
0 params, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[2775]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2775]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[2775]	TAILCALL 	R0 2 0 ; R0,... := R0(R1)
	4	[2775]	RETURN   	R0 0 ; return R0,... 
	5	[2776]	RETURN   	R0 1 ; return 

function #160 <?:2778,2780> (4 instructions, 16 bytes at 0000025274EF73B0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2779]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2779]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2779]	RETURN   	R0 0 ; return R0,... 
	4	[2780]	RETURN   	R0 1 ; return 

function #161 <?:2782,2852> (160 instructions, 640 bytes at 0000025274EF7480)
0 params, 31 slots, 2 upvalues, 0 locals, 32 constants, 0 functions
	1	[2783]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2783]	GETTABLE 	R0 R0 K1 ; R0 := R0["CachedStarChartProgress"]
	3	[2783]	TEST     	R0 0 ; if not R0 then PC := 24
	4	[2783]	JMP      	24 ; PC := 24
	5	[2784]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[2784]	GETTABLE 	R0 R0 K1 ; R0 := R0["CachedStarChartProgress"]
	7	[2784]	GETTABLE 	R0 R0 K2 ; R0 := R0["numCompleted"]
	8	[2784]	GETGLOBAL	R1 K0 ; R1 := _T
	9	[2784]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedStarChartProgress"]
	10	[2784]	GETTABLE 	R1 R1 K3 ; R1 := R1["totalMissions"]
	11	[2784]	GETGLOBAL	R2 K0 ; R2 := _T
	12	[2784]	GETTABLE 	R2 R2 K1 ; R2 := R2["CachedStarChartProgress"]
	13	[2784]	GETTABLE 	R2 R2 K4 ; R2 := R2["missingNodes"]
	14	[2784]	GETGLOBAL	R3 K0 ; R3 := _T
	15	[2784]	GETTABLE 	R3 R3 K1 ; R3 := R3["CachedStarChartProgress"]
	16	[2784]	GETTABLE 	R3 R3 K5 ; R3 := R3["numHardCompleted"]
	17	[2784]	GETGLOBAL	R4 K0 ; R4 := _T
	18	[2784]	GETTABLE 	R4 R4 K1 ; R4 := R4["CachedStarChartProgress"]
	19	[2784]	GETTABLE 	R4 R4 K6 ; R4 := R4["missionXp"]
	20	[2784]	GETGLOBAL	R5 K0 ; R5 := _T
	21	[2784]	GETTABLE 	R5 R5 K1 ; R5 := R5["CachedStarChartProgress"]
	22	[2784]	GETTABLE 	R5 R5 K7 ; R5 := R5["hardMissionXp"]
	23	[2784]	RETURN   	R0 7 ; return R0, R1, R2, R3, R4, R5 
	24	[2787]	LOADNIL  	R0 R0 ; R0 := nil
	25	[2788]	GETGLOBAL	R1 K8 ; R1 := 0x7b998233
	26	[2788]	GETGLOBAL	R2 K9 ; R2 := 0x25d99d89
	27	[2788]	CALL     	R1 2 2 ; R1 := R1(R2)
	28	[2788]	TEST     	R1 1 ; if R1 then PC := 35
	29	[2788]	JMP      	35 ; PC := 35
	30	[2789]	GETGLOBAL	R1 K9 ; R1 := 0x25d99d89
	31	[2789]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xb407484d]
	32	[2789]	CALL     	R1 2 2 ; R1 := R1(R2)
	33	[2789]	MOVE     	R0 R1 ; R0 := R1
	34	[2789]	JMP      	61 ; PC := 61
	35	[2791]	NEWTABLE 	R1 0 0 ; R1 := {}
	36	[2791]	MOVE     	R0 R1 ; R0 := R1
	37	[2793]	GETGLOBAL	R1 K8 ; R1 := 0x7b998233
	38	[2793]	GETGLOBAL	R2 K11 ; R2 := 0x76ea806b
	39	[2793]	CALL     	R1 2 2 ; R1 := R1(R2)
	40	[2793]	TEST     	R1 1 ; if R1 then PC := 61
	41	[2793]	JMP      	61 ; PC := 61
	42	[2794]	GETGLOBAL	R1 K11 ; R1 := 0x76ea806b
	43	[2794]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0x3f3ae64c]
	44	[2794]	LOADK    	R3 := 0.000000
	45	[2794]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	46	[2795]	GETGLOBAL	R2 K8 ; R2 := 0x7b998233
	47	[2795]	MOVE     	R3 R1 ; R3 := R1
	48	[2795]	CALL     	R2 2 2 ; R2 := R2(R3)
	49	[2795]	TEST     	R2 1 ; if R2 then PC := 61
	50	[2795]	JMP      	61 ; PC := 61
	51	[2796]	SELF     	R2 R1 K13 ; R3 := R1; R2 := R1[0x80563238]
	52	[2796]	CALL     	R2 2 2 ; R2 := R2(R3)
	53	[2797]	GETGLOBAL	R3 K8 ; R3 := 0x7b998233
	54	[2797]	MOVE     	R4 R2 ; R4 := R2
	55	[2797]	CALL     	R3 2 2 ; R3 := R3(R4)
	56	[2797]	TEST     	R3 1 ; if R3 then PC := 61
	57	[2797]	JMP      	61 ; PC := 61
	58	[2798]	SELF     	R3 R2 K10 ; R4 := R2; R3 := R2[0xb407484d]
	59	[2798]	CALL     	R3 2 2 ; R3 := R3(R4)
	60	[2798]	MOVE     	R0 R3 ; R0 := R3
	61	[2804]	NEWTABLE 	R3 0 0 ; R3 := {}
	62	[2805]	LOADK    	R4 := 0.000000
	63	[2806]	OP_LOADBOOL	R5 0 0 ; R5 := false
	64	[2808]	GETGLOBAL	R6 K14 ; R6 := 0xcfc01047
	65	[2808]	MOVE     	R7 R0 ; R7 := R0
	66	[2808]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	67	[2808]	JMP      	78 ; PC := 78
	68	[2809]	GETTABLE 	R11 R10 K15 ; R11 := R10["mTag"]
	69	[2809]	SELF     	R11 R11 K16 ; R12 := R11; R11 := R11[0x56c01834]
	70	[2809]	CALL     	R11 2 2 ; R11 := R11(R12)
	71	[2809]	TEST     	R11 0 ; if not R11 then PC := 78
	72	[2809]	JMP      	78 ; PC := 78
	73	[2810]	GETGLOBAL	R11 K17 ; R11 := 0x64fb1586
	74	[2810]	GETTABLE 	R12 R10 K15 ; R12 := R10["mTag"]
	75	[2810]	CALL     	R11 2 2 ; R11 := R11(R12)
	76	[2810]	GETTABLE 	R12 R10 K18 ; R12 := R10["mTier"]
	77	[2810]	SETTABLE 	R3 R11 R12 ; R3[R11] := R12
	78	[2808]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 68; R8 := R9 end
	79	[2811]	JMP      	68 ; PC := 68
	80	[2814]	GETUPVAL 	R11 U0 ; R11 := U0
	81	[2814]	CALL     	R11 1 2 ; R11 := R11()
	82	[2815]	SELF     	R12 R11 K19 ; R13 := R11; R12 := R11[0xd13b47be]
	83	[2815]	CALL     	R12 2 2 ; R12 := R12(R13)
	84	[2816]	LOADK    	R13 := 0.000000
	85	[2817]	LOADK    	R14 := 0.000000
	86	[2818]	NEWTABLE 	R15 0 0 ; R15 := {}
	87	[2820]	GETGLOBAL	R16 K14 ; R16 := 0xcfc01047
	88	[2820]	MOVE     	R17 R12 ; R17 := R12
	89	[2820]	CALL     	R16 2 4 ; R16,R17,R18 := R16(R17)
	90	[2820]	JMP      	130 ; PC := 130
	91	[2821]	GETTABLE 	R21 R20 K20 ; R21 := R20["name"]
	92	[2822]	SELF     	R22 R20 K21 ; R23 := R20; R22 := R20[0x7c303c3d]
	93	[2822]	OP_LOADBOOL	R24 0 0 ; R24 := false
	94	[2822]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	95	[2822]	TEST     	R22 0 ; if not R22 then PC := 130
	96	[2822]	JMP      	130 ; PC := 130
	97	[2822]	GETGLOBAL	R22 K22 ; R22 := APARTMENT_NODE_TAG
	98	[2822]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 130
	99	[2822]	JMP      	130 ; PC := 130
	100	[2823]	ADD      	R13 R13 K23 ; R13 := R13 + 1.000000
	101	[2824]	GETGLOBAL	R22 K17 ; R22 := 0x64fb1586
	102	[2824]	MOVE     	R23 R21 ; R23 := R21
	103	[2824]	CALL     	R22 2 2 ; R22 := R22(R23)
	104	[2825]	TEST     	R5 1 ; if R5 then PC := 109
	105	[2825]	JMP      	109 ; PC := 109
	106	[2825]	GETTABLE 	R23 R3 R22 ; R23 := R3[R22]
	107	[2825]	EQ       	1 R23 K24 ; if R23 == nil then PC := 117
	108	[2825]	JMP      	117 ; PC := 117
	109	[2826]	ADD      	R14 R14 K23 ; R14 := R14 + 1.000000
	110	[2827]	TEST     	R5 1 ; if R5 then PC := 115
	111	[2827]	JMP      	115 ; PC := 115
	112	[2827]	GETTABLE 	R23 R3 R22 ; R23 := R3[R22]
	113	[2827]	LT       	0 K25 R23 ; if 0.000000 >= R23 then PC := 130
	114	[2827]	JMP      	130 ; PC := 130
	115	[2828]	ADD      	R4 R4 K23 ; R4 := R4 + 1.000000
	116	[2829]	JMP      	130 ; PC := 130
	117	[2831]	GETGLOBAL	R23 K26 ; R23 := 0x33bdd652
	118	[2831]	GETTABLE 	R23 R23 K27 ; R23 := R23[0x23d5322f]
	119	[2831]	MOVE     	R24 R15 ; R24 := R15
	120	[2831]	NEWTABLE 	R25 0 2 ; R25 := {}
	121	[2831]	GETGLOBAL	R26 K28 ; R26 := 0x0469f296
	122	[2831]	GETTABLE 	R27 R20 K20 ; R27 := R20["name"]
	123	[2831]	CALL     	R26 2 2 ; R26 := R26(R27)
	124	[2831]	SETTABLE 	R25 K20 R26 ; R25["name"] := R26
	125	[2831]	GETGLOBAL	R26 K28 ; R26 := 0x0469f296
	126	[2831]	GETTABLE 	R27 R20 K29 ; R27 := R20["locTag"]
	127	[2831]	CALL     	R26 2 2 ; R26 := R26(R27)
	128	[2831]	SETTABLE 	R25 K29 R26 ; R25["locTag"] := R26
	129	[2831]	CALL     	R23 3 1 ; R23(R24,R25)
	130	[2820]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 91; R18 := R19 end
	131	[2834]	JMP      	91 ; PC := 91
	132	[2837]	SELF     	R23 R11 K30 ; R24 := R11; R23 := R11[0x5ad726d0]
	133	[2837]	MOVE     	R25 R0 ; R25 := R0
	134	[2837]	LOADK    	R26 := 0.000000
	135	[2837]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	136	[2838]	SELF     	R24 R11 K30 ; R25 := R11; R24 := R11[0x5ad726d0]
	137	[2838]	MOVE     	R26 R0 ; R26 := R0
	138	[2838]	LOADK    	R27 := 1.000000
	139	[2838]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	140	[2841]	GETGLOBAL	R25 K0 ; R25 := _T
	141	[2841]	NEWTABLE 	R26 0 6 ; R26 := {}
	142	[2843]	SETTABLE 	R26 K2 R14 ; R26["numCompleted"] := R14
	143	[2844]	SETTABLE 	R26 K3 R13 ; R26["totalMissions"] := R13
	144	[2845]	GETUPVAL 	R27 U1 ; R27 := U1
	145	[2845]	GETTABLE 	R27 R27 K31 ; R27 := R27[0xae97c4f5]
	146	[2845]	MOVE     	R28 R15 ; R28 := R15
	147	[2845]	CALL     	R27 2 2 ; R27 := R27(R28)
	148	[2845]	SETTABLE 	R26 K4 R27 ; R26["missingNodes"] := R27
	149	[2846]	SETTABLE 	R26 K5 R4 ; R26["numHardCompleted"] := R4
	150	[2847]	SETTABLE 	R26 K6 R23 ; R26["missionXp"] := R23
	151	[2848]	SETTABLE 	R26 K7 R24 ; R26["hardMissionXp"] := R24
	152	[2849]	SETTABLE 	R25 K1 R26 ; R25["CachedStarChartProgress"] := R26
	153	[2851]	MOVE     	R25 R14 ; R25 := R14
	154	[2851]	MOVE     	R26 R13 ; R26 := R13
	155	[2851]	MOVE     	R27 R15 ; R27 := R15
	156	[2851]	MOVE     	R28 R4 ; R28 := R4
	157	[2851]	MOVE     	R29 R23 ; R29 := R23
	158	[2851]	MOVE     	R30 R24 ; R30 := R24
	159	[2851]	RETURN   	R25 7 ; return R25, R26, R27, R28, R29, R30 
	160	[2852]	RETURN   	R0 1 ; return 

function #162 <?:2854,2856> (4 instructions, 16 bytes at 000002527489F0A0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2855]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2855]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2855]	RETURN   	R0 0 ; return R0,... 
	4	[2856]	RETURN   	R0 1 ; return 

function #163 <?:2858,2862> (12 instructions, 48 bytes at 000002527489F170)
0 params, 8 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2859]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2859]	CALL     	R0 1 6 ; R0,R1,R2,R3,R4 := R0()
	3	[2860]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 8
	4	[2860]	JMP      	8 ; PC := 8
	5	[2860]	OP_LOADBOOL	R5 0 0 ; R5 := false
	6	[2860]	JMP      	9 ; PC := 9
	7	[2860]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 8
	8	[2860]	OP_LOADBOOL	R5 1 0 ; R5 := true
	9	[2861]	MOVE     	R6 R5 ; R6 := R5
	10	[2861]	MOVE     	R7 R2 ; R7 := R2
	11	[2861]	RETURN   	R6 3 ; return R6, R7 
	12	[2862]	RETURN   	R0 1 ; return 

function #164 <?:2864,2866> (4 instructions, 16 bytes at 000002527489F280)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2865]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2865]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2865]	RETURN   	R0 0 ; return R0,... 
	4	[2866]	RETURN   	R0 1 ; return 

function #165 <?:2868,2921> (125 instructions, 500 bytes at 000002527489F350)
1 param, 19 slots, 0 upvalues, 0 locals, 18 constants, 0 functions
	1	[2869]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[2871]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	3	[2871]	MOVE     	R3 R1 ; R3 := R1
	4	[2871]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[2871]	TEST     	R2 0 ; if not R2 then PC := 9
	6	[2871]	JMP      	9 ; PC := 9
	7	[2872]	LOADNIL  	R2 R2 ; R2 := nil
	8	[2872]	RETURN   	R2 2 ; return R2 
	9	[2875]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x69727e0b]
	10	[2875]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[2876]	GETTABLE 	R3 R2 K3 ; R3 := R2["mFlashSales"]
	12	[2878]	GETGLOBAL	R4 K4 ; R4 := _T
	13	[2878]	GETTABLE 	R4 R4 K5 ; R4 := R4["CachedFlashSales"]
	14	[2878]	EQ       	0 R4 K6 ; if R4 ~= nil then PC := 36
	15	[2878]	JMP      	36 ; PC := 36
	16	[2879]	GETGLOBAL	R4 K4 ; R4 := _T
	17	[2879]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[2879]	SETTABLE 	R4 K5 R5 ; R4[0xfe9eb1a5] := R5
	19	[2880]	GETGLOBAL	R4 K7 ; R4 := 0xc8802016
	20	[2880]	MOVE     	R5 R3 ; R5 := R3
	21	[2880]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	22	[2880]	JMP      	34 ; PC := 34
	23	[2881]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	24	[2881]	GETTABLE 	R10 R8 K8 ; R10 := R8["mTypeName"]
	25	[2881]	CALL     	R9 2 2 ; R9 := R9(R10)
	26	[2881]	TEST     	R9 1 ; if R9 then PC := 34
	27	[2881]	JMP      	34 ; PC := 34
	28	[2882]	GETGLOBAL	R9 K4 ; R9 := _T
	29	[2882]	GETTABLE 	R9 R9 K5 ; R9 := R9["CachedFlashSales"]
	30	[2882]	GETTABLE 	R10 R8 K8 ; R10 := R8["mTypeName"]
	31	[2882]	SELF     	R10 R10 K9 ; R11 := R10; R10 := R10[0xed4e0128]
	32	[2882]	CALL     	R10 2 2 ; R10 := R10(R11)
	33	[2882]	SETTABLE 	R9 R10 R8 ; R9[R10] := R8
	34	[2880]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 23; R6 := R7 end
	35	[2883]	JMP      	23 ; PC := 23
	36	[2887]	GETGLOBAL	R9 K4 ; R9 := _T
	37	[2887]	GETTABLE 	R9 R9 K5 ; R9 := R9["CachedFlashSales"]
	38	[2887]	EQ       	0 R9 K6 ; if R9 ~= nil then PC := 42
	39	[2887]	JMP      	42 ; PC := 42
	40	[2888]	LOADNIL  	R9 R9 ; R9 := nil
	41	[2888]	RETURN   	R9 2 ; return R9 
	42	[2891]	LOADNIL  	R9 R9 ; R9 := nil
	43	[2892]	SELF     	R10 R0 K10 ; R11 := R0; R10 := R0[0x9dbbea0a]
	44	[2892]	CALL     	R10 2 2 ; R10 := R10(R11)
	45	[2892]	TEST     	R10 0 ; if not R10 then PC := 49
	46	[2892]	JMP      	49 ; PC := 49
	47	[2893]	MOVE     	R9 R0 ; R9 := R0
	48	[2893]	JMP      	59 ; PC := 59
	49	[2895]	SELF     	R10 R0 K11 ; R11 := R0; R10 := R0[0xf278f8a1]
	50	[2895]	CALL     	R10 2 2 ; R10 := R10(R11)
	51	[2895]	MOVE     	R9 R10 ; R9 := R10
	52	[2896]	GETGLOBAL	R10 K1 ; R10 := 0x7b998233
	53	[2896]	MOVE     	R11 R9 ; R11 := R9
	54	[2896]	CALL     	R10 2 2 ; R10 := R10(R11)
	55	[2896]	TEST     	R10 0 ; if not R10 then PC := 59
	56	[2896]	JMP      	59 ; PC := 59
	57	[2897]	LOADNIL  	R10 R10 ; R10 := nil
	58	[2897]	RETURN   	R10 2 ; return R10 
	59	[2901]	GETGLOBAL	R10 K4 ; R10 := _T
	60	[2901]	GETTABLE 	R10 R10 K5 ; R10 := R10["CachedFlashSales"]
	61	[2901]	SELF     	R11 R9 K9 ; R12 := R9; R11 := R9[0xed4e0128]
	62	[2901]	CALL     	R11 2 2 ; R11 := R11(R12)
	63	[2901]	GETTABLE 	R10 R10 R11 ; R10 := R10[R11]
	64	[2902]	GETGLOBAL	R11 K1 ; R11 := 0x7b998233
	65	[2902]	MOVE     	R12 R10 ; R12 := R10
	66	[2902]	CALL     	R11 2 2 ; R11 := R11(R12)
	67	[2902]	TEST     	R11 1 ; if R11 then PC := 123
	68	[2902]	JMP      	123 ; PC := 123
	69	[2905]	GETGLOBAL	R11 K7 ; R11 := 0xc8802016
	70	[2905]	MOVE     	R12 R3 ; R12 := R3
	71	[2905]	CALL     	R11 2 4 ; R11,R12,R13 := R11(R12)
	72	[2905]	JMP      	105 ; PC := 105
	73	[2906]	GETGLOBAL	R16 K1 ; R16 := 0x7b998233
	74	[2906]	GETTABLE 	R17 R15 K8 ; R17 := R15["mTypeName"]
	75	[2906]	CALL     	R16 2 2 ; R16 := R16(R17)
	76	[2906]	TEST     	R16 1 ; if R16 then PC := 105
	77	[2906]	JMP      	105 ; PC := 105
	78	[2906]	GETTABLE 	R16 R15 K8 ; R16 := R15["mTypeName"]
	79	[2906]	SELF     	R16 R16 K9 ; R17 := R16; R16 := R16[0xed4e0128]
	80	[2906]	CALL     	R16 2 2 ; R16 := R16(R17)
	81	[2906]	SELF     	R17 R9 K9 ; R18 := R9; R17 := R9[0xed4e0128]
	82	[2906]	CALL     	R17 2 2 ; R17 := R17(R18)
	83	[2906]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 105
	84	[2906]	JMP      	105 ; PC := 105
	85	[2907]	GETGLOBAL	R16 K12 ; R16 := 0x34291f5c
	86	[2907]	GETTABLE 	R16 R16 K13 ; R16 := R16[0x397b920f]
	87	[2907]	GETTABLE 	R17 R15 K14 ; R17 := R15["mStartDate"]
	88	[2907]	CALL     	R16 2 2 ; R16 := R16(R17)
	89	[2907]	LT       	0 R16 K15 ; if R16 >= 0.000000 then PC := 105
	90	[2907]	JMP      	105 ; PC := 105
	91	[2908]	GETGLOBAL	R16 K12 ; R16 := 0x34291f5c
	92	[2908]	GETTABLE 	R16 R16 K13 ; R16 := R16[0x397b920f]
	93	[2908]	GETTABLE 	R17 R15 K16 ; R17 := R15["mEndDate"]
	94	[2908]	CALL     	R16 2 2 ; R16 := R16(R17)
	95	[2908]	LT       	0 K15 R16 ; if 0.000000 >= R16 then PC := 105
	96	[2908]	JMP      	105 ; PC := 105
	97	[2909]	MOVE     	R10 R15 ; R10 := R15
	98	[2910]	GETGLOBAL	R16 K4 ; R16 := _T
	99	[2910]	GETTABLE 	R16 R16 K5 ; R16 := R16["CachedFlashSales"]
	100	[2910]	GETTABLE 	R17 R15 K8 ; R17 := R15["mTypeName"]
	101	[2910]	SELF     	R17 R17 K9 ; R18 := R17; R17 := R17[0xed4e0128]
	102	[2910]	CALL     	R17 2 2 ; R17 := R17(R18)
	103	[2910]	SETTABLE 	R16 R17 R10 ; R16[R17] := R10
	104	[2911]	JMP      	107 ; PC := 107
	105	[2905]	TFORLOOP 	R11 2 ; R14,R15 := R11(R12,R13); if R14 ~= nil then begin PC = 73; R13 := R14 end
	106	[2912]	JMP      	73 ; PC := 73
	107	[2915]	GETGLOBAL	R16 K12 ; R16 := 0x34291f5c
	108	[2915]	GETTABLE 	R16 R16 K13 ; R16 := R16[0x397b920f]
	109	[2915]	GETTABLE 	R17 R10 K14 ; R17 := R10["mStartDate"]
	110	[2915]	CALL     	R16 2 2 ; R16 := R16(R17)
	111	[2915]	LT       	0 R16 K15 ; if R16 >= 0.000000 then PC := 123
	112	[2915]	JMP      	123 ; PC := 123
	113	[2915]	GETGLOBAL	R16 K12 ; R16 := 0x34291f5c
	114	[2915]	GETTABLE 	R16 R16 K13 ; R16 := R16[0x397b920f]
	115	[2915]	GETTABLE 	R17 R10 K16 ; R17 := R10["mEndDate"]
	116	[2915]	CALL     	R16 2 2 ; R16 := R16(R17)
	117	[2915]	LT       	0 K15 R16 ; if 0.000000 >= R16 then PC := 123
	118	[2915]	JMP      	123 ; PC := 123
	119	[2915]	GETTABLE 	R16 R10 K17 ; R16 := R10["mShowInMarket"]
	120	[2915]	TEST     	R16 0 ; if not R16 then PC := 123
	121	[2915]	JMP      	123 ; PC := 123
	122	[2916]	RETURN   	R10 2 ; return R10 
	123	[2920]	LOADNIL  	R16 R16 ; R16 := nil
	124	[2920]	RETURN   	R16 2 ; return R16 
	125	[2921]	RETURN   	R0 1 ; return 

function #166 <?:2923,2925> (5 instructions, 20 bytes at 000002527489FAB0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2924]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2924]	MOVE     	R2 R0 ; R2 := R0
	3	[2924]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2924]	RETURN   	R1 2 ; return R1 
	5	[2925]	RETURN   	R0 1 ; return 

function #167 <?:2944,2946> (8 instructions, 32 bytes at 000002527489FBA0)
1 param, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[2945]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2945]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	3	[2945]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 6
	4	[2945]	JMP      	6 ; PC := 6
	5	[2945]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 6
	6	[2945]	OP_LOADBOOL	R1 1 0 ; R1 := true
	7	[2945]	RETURN   	R1 2 ; return R1 
	8	[2946]	RETURN   	R0 1 ; return 

function #168 <?:2948,2950> (5 instructions, 20 bytes at 000002527489FCB0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2949]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2949]	MOVE     	R2 R0 ; R2 := R0
	3	[2949]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2949]	RETURN   	R1 2 ; return R1 
	5	[2950]	RETURN   	R0 1 ; return 

function #169 <?:2953,2953> (2 instructions, 8 bytes at 000002527489FDA0)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[2953]	RETURN   	R0 2 ; return R0 
	2	[2953]	RETURN   	R0 1 ; return 

function #170 <?:2954,2954> (6 instructions, 24 bytes at 000002527489FE70)
2 params, 3 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[2954]	LT       	1 R0 R1 ; if R0 < R1 then PC := 4
	2	[2954]	JMP      	4 ; PC := 4
	3	[2954]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 4
	4	[2954]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[2954]	RETURN   	R2 2 ; return R2 
	6	[2954]	RETURN   	R0 1 ; return 

function #171 <?:2955,2955> (6 instructions, 24 bytes at 000002527489FF60)
2 params, 3 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[2955]	LT       	1 R1 R0 ; if R1 < R0 then PC := 4
	2	[2955]	JMP      	4 ; PC := 4
	3	[2955]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 4
	4	[2955]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[2955]	RETURN   	R2 2 ; return R2 
	6	[2955]	RETURN   	R0 1 ; return 

function #172 <?:2957,2987> (62 instructions, 248 bytes at 00000252748A0050)
4 params, 14 slots, 3 upvalues, 0 locals, 4 constants, 0 functions
	1	[2959]	TEST     	R2 1 ; if R2 then PC := 4
	2	[2959]	JMP      	4 ; PC := 4
	3	[2959]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2960]	TEST     	R3 0 ; if not R3 then PC := 9
	5	[2960]	JMP      	9 ; PC := 9
	6	[2960]	GETUPVAL 	R4 U1 ; R4 := U1
	7	[2960]	TEST     	R4 1 ; if R4 then PC := 10
	8	[2960]	JMP      	10 ; PC := 10
	9	[2960]	GETUPVAL 	R4 U2 ; R4 := U2
	10	[2962]	LOADK    	R5 := 1.000000
	11	[2962]	LEN      	R6 R0 ; R6 := # R0
	12	[2962]	LOADK    	R7 := 0.000000
	13	[2964]	LE       	0 R5 R6 ; if R5 > R6 then PC := 62
	14	[2964]	JMP      	62 ; PC := 62
	15	[2966]	GETGLOBAL	R8 K0 ; R8 := 0x5bced4c4
	16	[2966]	GETTABLE 	R8 R8 K1 ; R8 := R8[0x55f27c30]
	17	[2966]	ADD      	R9 R5 R6 ; R9 := R5 + R6
	18	[2966]	DIV      	R9 R9 K2 ; R9 := R9 / 2.000000
	19	[2966]	CALL     	R8 2 2 ; R8 := R8(R9)
	20	[2966]	MOVE     	R7 R8 ; R7 := R8
	21	[2968]	MOVE     	R8 R2 ; R8 := R2
	22	[2968]	GETTABLE 	R9 R0 R7 ; R9 := R0[R7]
	23	[2968]	CALL     	R8 2 2 ; R8 := R8(R9)
	24	[2970]	EQ       	0 R1 R8 ; if R1 ~= R8 then PC := 52
	25	[2970]	JMP      	52 ; PC := 52
	26	[2971]	NEWTABLE 	R9 2 0 ; R9 := {}
	27	[2971]	MOVE     	R10 R7 ; R10 := R7
	28	[2971]	MOVE     	R11 R7 ; R11 := R7
	29	[2971]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	30	[2971]	SUB      	R10 R7 K3 ; R10 := R7 - 1.000000
	31	[2972]	MOVE     	R11 R2 ; R11 := R2
	32	[2972]	GETTABLE 	R12 R0 R10 ; R12 := R0[R10]
	33	[2972]	CALL     	R11 2 2 ; R11 := R11(R12)
	34	[2972]	EQ       	0 R1 R11 ; if R1 ~= R11 then PC := 40
	35	[2972]	JMP      	40 ; PC := 40
	36	[2973]	MOVE     	R11 R10 ; R11 := R10
	37	[2973]	SUB      	R10 R10 K3 ; R10 := R10 - 1.000000
	38	[2973]	SETTABLE 	R9 K3 R11 ; R9[1.000000] := R11
	39	[2973]	JMP      	31 ; PC := 31
	40	[2975]	ADD      	R10 R7 K3 ; R10 := R7 + 1.000000
	41	[2976]	MOVE     	R11 R2 ; R11 := R2
	42	[2976]	GETTABLE 	R12 R0 R10 ; R12 := R0[R10]
	43	[2976]	CALL     	R11 2 2 ; R11 := R11(R12)
	44	[2976]	EQ       	0 R1 R11 ; if R1 ~= R11 then PC := 50
	45	[2976]	JMP      	50 ; PC := 50
	46	[2977]	MOVE     	R11 R10 ; R11 := R10
	47	[2977]	ADD      	R10 R10 K3 ; R10 := R10 + 1.000000
	48	[2977]	SETTABLE 	R9 K2 R11 ; R9[2.000000] := R11
	49	[2977]	JMP      	41 ; PC := 41
	50	[2979]	RETURN   	R9 2 ; return R9 
	51	[2979]	JMP      	13 ; PC := 13
	52	[2981]	MOVE     	R11 R4 ; R11 := R4
	53	[2981]	MOVE     	R12 R1 ; R12 := R1
	54	[2981]	MOVE     	R13 R8 ; R13 := R8
	55	[2981]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	56	[2981]	TEST     	R11 0 ; if not R11 then PC := 60
	57	[2981]	JMP      	60 ; PC := 60
	58	[2982]	SUB      	R6 R7 K3 ; R6 := R7 - 1.000000
	59	[2982]	JMP      	13 ; PC := 13
	60	[2984]	ADD      	R5 R7 K3 ; R5 := R7 + 1.000000
	61	[2985]	JMP      	13 ; PC := 13
	62	[2987]	RETURN   	R0 1 ; return 

function #173 <?:2989,2991> (8 instructions, 32 bytes at 00000252748A0350)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2990]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[2990]	MOVE     	R5 R0 ; R5 := R0
	3	[2990]	MOVE     	R6 R1 ; R6 := R1
	4	[2990]	MOVE     	R7 R2 ; R7 := R2
	5	[2990]	MOVE     	R8 R3 ; R8 := R3
	6	[2990]	TAILCALL 	R4 5 0 ; R4,... := R4(R5,R6,R7,R8)
	7	[2990]	RETURN   	R4 0 ; return R4,... 
	8	[2991]	RETURN   	R0 1 ; return 

function #174 <?:2993,2998> (7 instructions, 28 bytes at 00000252748A0440)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2994]	TEST     	R0 0 ; if not R0 then PC := 5
	2	[2994]	JMP      	5 ; PC := 5
	3	[2995]	GETTABLE 	R1 R0 K0 ; R1 := R0["type"]
	4	[2995]	RETURN   	R1 2 ; return R1 
	5	[2997]	LOADNIL  	R1 R1 ; R1 := nil
	6	[2997]	RETURN   	R1 2 ; return R1 
	7	[2998]	RETURN   	R0 1 ; return 

function #175 <?:3000,3008> (20 instructions, 80 bytes at 00000252748A0550)
3 params, 8 slots, 3 upvalues, 0 locals, 2 constants, 0 functions
	1	[3001]	TEST     	R2 1 ; if R2 then PC := 9
	2	[3001]	JMP      	9 ; PC := 9
	3	[3001]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[3001]	SELF     	R4 R0 K0 ; R5 := R0; R4 := R0[0xfe9eb1a5]
	5	[3001]	CALL     	R4 2 0 ; R4,... := R4(R5)
	6	[3001]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	7	[3001]	TEST     	R3 0 ; if not R3 then PC := 18
	8	[3001]	JMP      	18 ; PC := 18
	9	[3002]	SELF     	R3 R0 K1 ; R4 := R0; R3 := R0[0x170c5cfa]
	10	[3002]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[3003]	GETUPVAL 	R4 U1 ; R4 := U1
	12	[3003]	MOVE     	R5 R1 ; R5 := R1
	13	[3003]	MOVE     	R6 R3 ; R6 := R3
	14	[3003]	GETUPVAL 	R7 U2 ; R7 := U2
	15	[3003]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	16	[3004]	NOT      	R5 R4 ; R5 := not R4
	17	[3004]	RETURN   	R5 2 ; return R5 
	18	[3007]	OP_LOADBOOL	R5 1 0 ; R5 := true
	19	[3007]	RETURN   	R5 2 ; return R5 
	20	[3008]	RETURN   	R0 1 ; return 

function #176 <?:3010,3012> (7 instructions, 28 bytes at 00000252748A06D0)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3011]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[3011]	MOVE     	R4 R0 ; R4 := R0
	3	[3011]	MOVE     	R5 R1 ; R5 := R1
	4	[3011]	MOVE     	R6 R2 ; R6 := R2
	5	[3011]	TAILCALL 	R3 4 0 ; R3,... := R3(R4,R5,R6)
	6	[3011]	RETURN   	R3 0 ; return R3,... 
	7	[3012]	RETURN   	R0 1 ; return 

function #177 <?:3014,3016> (3 instructions, 12 bytes at 00000252748A07C0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3015]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3015]	RETURN   	R0 2 ; return R0 
	3	[3016]	RETURN   	R0 1 ; return 

function #178 <?:3018,3156> (284 instructions, 1136 bytes at 00000252748A0890)
6 params, 47 slots, 7 upvalues, 0 locals, 34 constants, 0 functions
	1	[3019]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	2	[3019]	MOVE     	R7 R0 ; R7 := R0
	3	[3019]	CALL     	R6 2 2 ; R6 := R6(R7)
	4	[3019]	TEST     	R6 0 ; if not R6 then PC := 9
	5	[3019]	JMP      	9 ; PC := 9
	6	[3020]	LOADK    	R6 := 0.000000
	7	[3020]	LOADK    	R7 := 0.000000
	8	[3020]	RETURN   	R6 3 ; return R6, R7 
	9	[3023]	LOADNIL  	R6 R9 ; R6 := R7 := R8 := R9 := nil
	10	[3027]	NEWTABLE 	R10 0 0 ; R10 := {}
	11	[3029]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 34
	12	[3029]	JMP      	34 ; PC := 34
	13	[3030]	LOADK    	R11 := 0.000000
	14	[3030]	LOADK    	R12 := 3.000000
	15	[3030]	LOADK    	R13 := 1.000000
	16	[3030]	FORPREP  	R11 32 ; R11 -= R13; PC := 32
	17	[3031]	SELF     	R15 R0 K3 ; R16 := R0; R15 := R0[0x4e485a6f]
	18	[3031]	MOVE     	R17 R14 ; R17 := R14
	19	[3031]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	20	[3032]	SELF     	R16 R0 K4 ; R17 := R0; R16 := R0[0x2ce719d4]
	21	[3032]	MOVE     	R18 R14 ; R18 := R14
	22	[3032]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	23	[3034]	LT       	1 K5 R15 ; if 0.000000 < R15 then PC := 29
	24	[3034]	JMP      	29 ; PC := 29
	25	[3034]	LT       	1 K5 R16 ; if 0.000000 < R16 then PC := 29
	26	[3034]	JMP      	29 ; PC := 29
	27	[3034]	EQ       	0 R6 K1 ; if R6 ~= nil then PC := 32
	28	[3034]	JMP      	32 ; PC := 32
	29	[3035]	MOVE     	R6 R15 ; R6 := R15
	30	[3036]	MOVE     	R7 R16 ; R7 := R16
	31	[3037]	MOVE     	R8 R14 ; R8 := R14
	32	[3030]	FORLOOP  	R11 17 ; R11 += R13; if R11 <= R12 then begin PC := 17; R14 := R11 end
	33	[3039]	JMP      	42 ; PC := 42
	34	[3041]	SELF     	R17 R0 K3 ; R18 := R0; R17 := R0[0x4e485a6f]
	35	[3041]	MOVE     	R19 R1 ; R19 := R1
	36	[3041]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	37	[3041]	MOVE     	R6 R17 ; R6 := R17
	38	[3042]	SELF     	R17 R0 K4 ; R18 := R0; R17 := R0[0x2ce719d4]
	39	[3042]	MOVE     	R19 R1 ; R19 := R1
	40	[3042]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	41	[3042]	MOVE     	R7 R17 ; R7 := R17
	42	[3045]	SELF     	R17 R0 K6 ; R18 := R0; R17 := R0[0x1675b47f]
	43	[3045]	CALL     	R17 2 2 ; R17 := R17(R18)
	44	[3046]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	45	[3046]	MOVE     	R19 R17 ; R19 := R17
	46	[3046]	CALL     	R18 2 2 ; R18 := R18(R19)
	47	[3046]	TEST     	R18 1 ; if R18 then PC := 68
	48	[3046]	JMP      	68 ; PC := 68
	49	[3047]	OP_LOADBOOL	R18 0 0 ; R18 := false
	50	[3048]	GETGLOBAL	R19 K7 ; R19 := 0x25d99d89
	51	[3049]	SELF     	R20 R17 K8 ; R21 := R17; R20 := R17[0xf2deaf69]
	52	[3049]	GETUPVAL 	R22 U0 ; R22 := U0
	53	[3049]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	54	[3049]	TEST     	R20 0 ; if not R20 then PC := 60
	55	[3049]	JMP      	60 ; PC := 60
	56	[3050]	SELF     	R20 R19 K9 ; R21 := R19; R20 := R19[0x4ae54c32]
	57	[3050]	MOVE     	R22 R17 ; R22 := R17
	58	[3050]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	59	[3050]	MOVE     	R18 R20 ; R18 := R20
	60	[3053]	TEST     	R18 0 ; if not R18 then PC := 68
	61	[3053]	JMP      	68 ; PC := 68
	62	[3054]	SELF     	R20 R0 K10 ; R21 := R0; R20 := R0[0xe4598a92]
	63	[3054]	CALL     	R20 2 2 ; R20 := R20(R21)
	64	[3054]	MOVE     	R6 R20 ; R6 := R20
	65	[3055]	SELF     	R20 R0 K11 ; R21 := R0; R20 := R0[0x9a1de9a9]
	66	[3055]	CALL     	R20 2 2 ; R20 := R20(R21)
	67	[3055]	MOVE     	R7 R20 ; R7 := R20
	68	[3059]	TEST     	R4 0 ; if not R4 then PC := 101
	69	[3059]	JMP      	101 ; PC := 101
	70	[3060]	SETTABLE 	R10 K12 R0 ; R10["StoreItem"] := R0
	71	[3061]	GETUPVAL 	R20 U1 ; R20 := U1
	72	[3061]	MOVE     	R21 R10 ; R21 := R10
	73	[3061]	CALL     	R20 2 1 ; R20(R21)
	74	[3063]	GETTABLE 	R20 R10 K13 ; R20 := R10["Coupon"]
	75	[3063]	EQ       	1 R20 K1 ; if R20 == nil then PC := 101
	76	[3063]	JMP      	101 ; PC := 101
	77	[3063]	GETTABLE 	R20 R10 K13 ; R20 := R10["Coupon"]
	78	[3063]	GETTABLE 	R20 R20 K14 ; R20 := R20["mAmount"]
	79	[3063]	EQ       	1 R20 K1 ; if R20 == nil then PC := 101
	80	[3063]	JMP      	101 ; PC := 101
	81	[3063]	GETTABLE 	R20 R10 K13 ; R20 := R10["Coupon"]
	82	[3063]	GETTABLE 	R20 R20 K14 ; R20 := R20["mAmount"]
	83	[3063]	EQ       	1 R20 K5 ; if R20 == 0.000000 then PC := 101
	84	[3063]	JMP      	101 ; PC := 101
	85	[3064]	EQ       	1 R6 K1 ; if R6 == nil then PC := 93
	86	[3064]	JMP      	93 ; PC := 93
	87	[3065]	GETUPVAL 	R20 U2 ; R20 := U2
	88	[3065]	MOVE     	R21 R6 ; R21 := R6
	89	[3065]	GETTABLE 	R22 R10 K13 ; R22 := R10["Coupon"]
	90	[3065]	GETTABLE 	R22 R22 K14 ; R22 := R22["mAmount"]
	91	[3065]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	92	[3065]	MOVE     	R6 R20 ; R6 := R20
	93	[3067]	EQ       	1 R7 K1 ; if R7 == nil then PC := 101
	94	[3067]	JMP      	101 ; PC := 101
	95	[3068]	GETUPVAL 	R20 U2 ; R20 := U2
	96	[3068]	MOVE     	R21 R7 ; R21 := R7
	97	[3068]	GETTABLE 	R22 R10 K13 ; R22 := R10["Coupon"]
	98	[3068]	GETTABLE 	R22 R22 K14 ; R22 := R22["mAmount"]
	99	[3068]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	100	[3068]	MOVE     	R7 R20 ; R7 := R20
	101	[3073]	EQ       	1 R2 K1 ; if R2 == nil then PC := 105
	102	[3073]	JMP      	105 ; PC := 105
	103	[3073]	EQ       	0 R2 K15 ; if R2 ~= true then PC := 182
	104	[3073]	JMP      	182 ; PC := 182
	105	[3073]	GETTABLE 	R20 R10 K13 ; R20 := R10["Coupon"]
	106	[3073]	EQ       	1 R20 K1 ; if R20 == nil then PC := 112
	107	[3073]	JMP      	112 ; PC := 112
	108	[3073]	GETTABLE 	R20 R10 K13 ; R20 := R10["Coupon"]
	109	[3073]	GETTABLE 	R20 R20 K14 ; R20 := R20["mAmount"]
	110	[3073]	EQ       	0 R20 K5 ; if R20 ~= 0.000000 then PC := 182
	111	[3073]	JMP      	182 ; PC := 182
	112	[3074]	GETUPVAL 	R20 U3 ; R20 := U3
	113	[3074]	MOVE     	R21 R0 ; R21 := R0
	114	[3074]	CALL     	R20 2 2 ; R20 := R20(R21)
	115	[3074]	MOVE     	R9 R20 ; R9 := R20
	116	[3075]	EQ       	1 R9 K1 ; if R9 == nil then PC := 182
	117	[3075]	JMP      	182 ; PC := 182
	118	[3076]	SELF     	R20 R0 K16 ; R21 := R0; R20 := R0[0xc3bbc5cb]
	119	[3076]	CALL     	R20 2 2 ; R20 := R20(R21)
	120	[3076]	TEST     	R20 0 ; if not R20 then PC := 180
	121	[3076]	JMP      	180 ; PC := 180
	122	[3076]	GETTABLE 	R20 R9 K17 ; R20 := R9["mTieredPremiumOverrides"]
	123	[3076]	LEN      	R20 R20 ; R20 := # R20
	124	[3076]	LT       	1 K5 R20 ; if 0.000000 < R20 then PC := 130
	125	[3076]	JMP      	130 ; PC := 130
	126	[3076]	GETTABLE 	R20 R9 K18 ; R20 := R9["mTieredRegularOverrides"]
	127	[3076]	LEN      	R20 R20 ; R20 := # R20
	128	[3076]	LT       	0 K5 R20 ; if 0.000000 >= R20 then PC := 180
	129	[3076]	JMP      	180 ; PC := 180
	130	[3077]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 165
	131	[3077]	JMP      	165 ; PC := 165
	132	[3078]	LOADK    	R20 := 0.000000
	133	[3079]	LOADK    	R21 := 1.000000
	134	[3079]	GETTABLE 	R22 R9 K18 ; R22 := R9["mTieredRegularOverrides"]
	135	[3079]	LEN      	R22 R22 ; R22 := # R22
	136	[3079]	LOADK    	R23 := 1.000000
	137	[3079]	FORPREP  	R21 144 ; R21 -= R23; PC := 144
	138	[3080]	GETTABLE 	R25 R9 K18 ; R25 := R9["mTieredRegularOverrides"]
	139	[3080]	GETTABLE 	R25 R25 R24 ; R25 := R25[R24]
	140	[3080]	LT       	0 R20 R25 ; if R20 >= R25 then PC := 144
	141	[3080]	JMP      	144 ; PC := 144
	142	[3081]	GETTABLE 	R25 R9 K18 ; R25 := R9["mTieredRegularOverrides"]
	143	[3081]	GETTABLE 	R20 R25 R24 ; R20 := R25[R24]
	144	[3079]	FORLOOP  	R21 138 ; R21 += R23; if R21 <= R22 then begin PC := 138; R24 := R21 end
	145	[3084]	LT       	0 K5 R20 ; if 0.000000 >= R20 then PC := 148
	146	[3084]	JMP      	148 ; PC := 148
	147	[3085]	MOVE     	R6 R20 ; R6 := R20
	148	[3089]	LOADK    	R25 := 0.000000
	149	[3090]	LOADK    	R26 := 1.000000
	150	[3090]	GETTABLE 	R27 R9 K17 ; R27 := R9["mTieredPremiumOverrides"]
	151	[3090]	LEN      	R27 R27 ; R27 := # R27
	152	[3090]	LOADK    	R28 := 1.000000
	153	[3090]	FORPREP  	R26 160 ; R26 -= R28; PC := 160
	154	[3091]	GETTABLE 	R30 R9 K17 ; R30 := R9["mTieredPremiumOverrides"]
	155	[3091]	GETTABLE 	R30 R30 R29 ; R30 := R30[R29]
	156	[3091]	LT       	0 R25 R30 ; if R25 >= R30 then PC := 160
	157	[3091]	JMP      	160 ; PC := 160
	158	[3092]	GETTABLE 	R30 R9 K17 ; R30 := R9["mTieredPremiumOverrides"]
	159	[3092]	GETTABLE 	R25 R30 R29 ; R25 := R30[R29]
	160	[3090]	FORLOOP  	R26 154 ; R26 += R28; if R26 <= R27 then begin PC := 154; R29 := R26 end
	161	[3095]	LT       	0 K5 R25 ; if 0.000000 >= R25 then PC := 182
	162	[3095]	JMP      	182 ; PC := 182
	163	[3096]	MOVE     	R7 R25 ; R7 := R25
	164	[3097]	JMP      	182 ; PC := 182
	165	[3099]	GETTABLE 	R30 R9 K18 ; R30 := R9["mTieredRegularOverrides"]
	166	[3099]	LEN      	R30 R30 ; R30 := # R30
	167	[3099]	LT       	0 K5 R30 ; if 0.000000 >= R30 then PC := 172
	168	[3099]	JMP      	172 ; PC := 172
	169	[3100]	GETTABLE 	R30 R9 K18 ; R30 := R9["mTieredRegularOverrides"]
	170	[3100]	ADD      	R31 R1 K19 ; R31 := R1 + 1.000000
	171	[3100]	GETTABLE 	R6 R30 R31 ; R6 := R30[R31]
	172	[3103]	GETTABLE 	R30 R9 K17 ; R30 := R9["mTieredPremiumOverrides"]
	173	[3103]	LEN      	R30 R30 ; R30 := # R30
	174	[3103]	LT       	0 K5 R30 ; if 0.000000 >= R30 then PC := 182
	175	[3103]	JMP      	182 ; PC := 182
	176	[3104]	GETTABLE 	R30 R9 K17 ; R30 := R9["mTieredPremiumOverrides"]
	177	[3104]	ADD      	R31 R1 K19 ; R31 := R1 + 1.000000
	178	[3104]	GETTABLE 	R7 R30 R31 ; R7 := R30[R31]
	179	[3106]	JMP      	182 ; PC := 182
	180	[3108]	GETTABLE 	R6 R9 K20 ; R6 := R9["mRegularOverride"]
	181	[3109]	GETTABLE 	R7 R9 K21 ; R7 := R9["mPremiumOverride"]
	182	[3114]	EQ       	0 R9 K1 ; if R9 ~= nil then PC := 213
	183	[3114]	JMP      	213 ; PC := 213
	184	[3114]	SELF     	R30 R0 K22 ; R31 := R0; R30 := R0[0xc055cef8]
	185	[3114]	CALL     	R30 2 2 ; R30 := R30(R31)
	186	[3114]	TEST     	R30 1 ; if R30 then PC := 213
	187	[3114]	JMP      	213 ; PC := 213
	188	[3114]	TEST     	R5 1 ; if R5 then PC := 213
	189	[3114]	JMP      	213 ; PC := 213
	190	[3115]	LOADNIL  	R30 R30 ; R30 := nil
	191	[3116]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	192	[3116]	GETGLOBAL	R32 K23 ; R32 := 0xbe190284
	193	[3116]	CALL     	R31 2 2 ; R31 := R31(R32)
	194	[3116]	TEST     	R31 1 ; if R31 then PC := 200
	195	[3116]	JMP      	200 ; PC := 200
	196	[3117]	GETGLOBAL	R31 K23 ; R31 := 0xbe190284
	197	[3117]	SELF     	R31 R31 K24 ; R32 := R31; R31 := R31[0xa1c390fe]
	198	[3117]	CALL     	R31 2 2 ; R31 := R31(R32)
	199	[3117]	MOVE     	R30 R31 ; R30 := R31
	200	[3119]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	201	[3119]	MOVE     	R32 R30 ; R32 := R30
	202	[3119]	CALL     	R31 2 2 ; R31 := R31(R32)
	203	[3119]	TEST     	R31 1 ; if R31 then PC := 210
	204	[3119]	JMP      	210 ; PC := 210
	205	[3119]	SELF     	R31 R30 K25 ; R32 := R30; R31 := R30[0x92a8cfdb]
	206	[3119]	MOVE     	R33 R0 ; R33 := R0
	207	[3119]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	208	[3119]	EQ       	0 R31 K1 ; if R31 ~= nil then PC := 213
	209	[3119]	JMP      	213 ; PC := 213
	210	[3120]	LOADK    	R31 := 0.000000
	211	[3120]	LOADK    	R32 := 0.000000
	212	[3120]	RETURN   	R31 3 ; return R31, R32 
	213	[3124]	EQ       	1 R3 K1 ; if R3 == nil then PC := 279
	214	[3124]	JMP      	279 ; PC := 279
	215	[3124]	SELF     	R31 R0 K26 ; R32 := R0; R31 := R0[0x9dbbea0a]
	216	[3124]	CALL     	R31 2 2 ; R31 := R31(R32)
	217	[3124]	TEST     	R31 0 ; if not R31 then PC := 279
	218	[3124]	JMP      	279 ; PC := 279
	219	[3125]	SELF     	R31 R0 K27 ; R32 := R0; R31 := R0[0x24065c3f]
	220	[3125]	CALL     	R31 2 2 ; R31 := R31(R32)
	221	[3126]	SELF     	R32 R0 K28 ; R33 := R0; R32 := R0[0xd0372aa8]
	222	[3126]	CALL     	R32 2 2 ; R32 := R32(R33)
	223	[3128]	LOADK    	R33 := 0.000000
	224	[3129]	LOADK    	R34 := 0.000000
	225	[3131]	SELF     	R35 R0 K29 ; R36 := R0; R35 := R0[0x7b060e36]
	226	[3131]	CALL     	R35 2 2 ; R35 := R35(R36)
	227	[3132]	LOADK    	R36 := 1.000000
	228	[3132]	LEN      	R37 R35 ; R37 := # R35
	229	[3132]	LOADK    	R38 := 1.000000
	230	[3132]	FORPREP  	R36 262 ; R36 -= R38; PC := 262
	231	[3133]	GETGLOBAL	R40 K30 ; R40 := 0xce225efa
	232	[3133]	CALL     	R40 1 1 ; R40()
	233	[3134]	GETTABLE 	R40 R35 R39 ; R40 := R35[R39]
	234	[3134]	GETTABLE 	R40 R40 K31 ; R40 := R40["mTypeName"]
	235	[3136]	GETGLOBAL	R41 K0 ; R41 := 0x7b998233
	236	[3136]	MOVE     	R42 R40 ; R42 := R40
	237	[3136]	CALL     	R41 2 2 ; R41 := R41(R42)
	238	[3136]	TEST     	R41 1 ; if R41 then PC := 262
	239	[3136]	JMP      	262 ; PC := 262
	240	[3136]	GETUPVAL 	R41 U4 ; R41 := U4
	241	[3136]	TEST     	R41 0 ; if not R41 then PC := 262
	242	[3136]	JMP      	262 ; PC := 262
	243	[3136]	GETUPVAL 	R41 U5 ; R41 := U5
	244	[3136]	MOVE     	R42 R40 ; R42 := R40
	245	[3136]	MOVE     	R43 R3 ; R43 := R3
	246	[3136]	CALL     	R41 3 2 ; R41 := R41(R42,R43)
	247	[3136]	TEST     	R41 1 ; if R41 then PC := 262
	248	[3136]	JMP      	262 ; PC := 262
	249	[3137]	GETUPVAL 	R41 U6 ; R41 := U6
	250	[3137]	MOVE     	R42 R40 ; R42 := R40
	251	[3137]	GETTABLE 	R43 R35 R39 ; R43 := R35[R39]
	252	[3137]	GETTABLE 	R43 R43 K32 ; R43 := R43["mDurability"]
	253	[3137]	MOVE     	R44 R2 ; R44 := R2
	254	[3137]	MOVE     	R45 R3 ; R45 := R3
	255	[3137]	CALL     	R41 5 3 ; R41,R42 := R41(R42,R43,R44,R45)
	256	[3138]	DIV      	R43 R41 R31 ; R43 := R41 / R31
	257	[3138]	MUL      	R43 R43 R6 ; R43 := R43 * R6
	258	[3138]	ADD      	R33 R33 R43 ; R33 := R33 + R43
	259	[3139]	DIV      	R43 R42 R32 ; R43 := R42 / R32
	260	[3139]	MUL      	R43 R43 R7 ; R43 := R43 * R7
	261	[3139]	ADD      	R34 R34 R43 ; R34 := R34 + R43
	262	[3132]	FORLOOP  	R36 231 ; R36 += R38; if R36 <= R37 then begin PC := 231; R39 := R36 end
	263	[3143]	SUB      	R6 R6 R33 ; R6 := R6 - R33
	264	[3144]	SUB      	R7 R7 R34 ; R7 := R7 - R34
	265	[3146]	LT       	1 R6 K5 ; if R6 < 0.000000 then PC := 271
	266	[3146]	JMP      	271 ; PC := 271
	267	[3146]	SELF     	R43 R0 K33 ; R44 := R0; R43 := R0[0xdaefcda4]
	268	[3146]	CALL     	R43 2 2 ; R43 := R43(R44)
	269	[3146]	LT       	0 K5 R43 ; if 0.000000 >= R43 then PC := 272
	270	[3146]	JMP      	272 ; PC := 272
	271	[3147]	LOADK    	R6 := 0.000000
	272	[3150]	LT       	1 R7 K5 ; if R7 < 0.000000 then PC := 278
	273	[3150]	JMP      	278 ; PC := 278
	274	[3150]	SELF     	R43 R0 K33 ; R44 := R0; R43 := R0[0xdaefcda4]
	275	[3150]	CALL     	R43 2 2 ; R43 := R43(R44)
	276	[3150]	LT       	0 K5 R43 ; if 0.000000 >= R43 then PC := 279
	277	[3150]	JMP      	279 ; PC := 279
	278	[3151]	LOADK    	R7 := 0.000000
	279	[3155]	MOVE     	R43 R6 ; R43 := R6
	280	[3155]	MOVE     	R44 R7 ; R44 := R7
	281	[3155]	MOVE     	R45 R8 ; R45 := R8
	282	[3155]	MOVE     	R46 R9 ; R46 := R9
	283	[3155]	RETURN   	R43 5 ; return R43, R44, R45, R46 
	284	[3156]	RETURN   	R0 1 ; return 

function #179 <?:3158,3160> (10 instructions, 40 bytes at 00000252748A1630)
6 params, 13 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3159]	GETUPVAL 	R6 U0 ; R6 := U0
	2	[3159]	MOVE     	R7 R0 ; R7 := R0
	3	[3159]	MOVE     	R8 R1 ; R8 := R1
	4	[3159]	MOVE     	R9 R2 ; R9 := R2
	5	[3159]	MOVE     	R10 R3 ; R10 := R3
	6	[3159]	MOVE     	R11 R4 ; R11 := R4
	7	[3159]	MOVE     	R12 R5 ; R12 := R5
	8	[3159]	TAILCALL 	R6 7 0 ; R6,... := R6(R7,R8,R9,R10,R11,R12)
	9	[3159]	RETURN   	R6 0 ; return R6,... 
	10	[3160]	RETURN   	R0 1 ; return 

function #180 <?:3173,3175> (5 instructions, 20 bytes at 00000252748A1740)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[3174]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3174]	ADD      	R2 R0 K0 ; R2 := R0 + 1.000000
	3	[3174]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	4	[3174]	RETURN   	R1 2 ; return R1 
	5	[3175]	RETURN   	R0 1 ; return 

function #181 <?:3177,3183> (8 instructions, 32 bytes at 00000252748A1850)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[3178]	LT       	0 R0 K0 ; if R0 >= 3.000000 then PC := 6
	2	[3178]	JMP      	6 ; PC := 6
	3	[3179]	LOADK    	R1 := 0.000000
	4	[3179]	RETURN   	R1 2 ; return R1 
	5	[3179]	JMP      	8 ; PC := 8
	6	[3181]	LOADK    	R1 := 2.000000
	7	[3181]	RETURN   	R1 2 ; return R1 
	8	[3183]	RETURN   	R0 1 ; return 

function #182 <?:3186,3190> (19 instructions, 76 bytes at 00000252748A1960)
1 param, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[3187]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	2	[3187]	GETGLOBAL	R2 K1 ; R2 := PLAINS_NODE_TAG
	3	[3187]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3187]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 17
	5	[3187]	JMP      	17 ; PC := 17
	6	[3188]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	7	[3188]	GETGLOBAL	R2 K2 ; R2 := ORB_VALLIS_NODE_TAG
	8	[3188]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[3188]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 17
	10	[3188]	JMP      	17 ; PC := 17
	11	[3189]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	12	[3189]	GETGLOBAL	R2 K3 ; R2 := ENTRATI_LANDSCAPE_NODE_TAG
	13	[3189]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[3189]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 17
	15	[3189]	JMP      	17 ; PC := 17
	16	[3189]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 17
	17	[3189]	OP_LOADBOOL	R1 1 0 ; R1 := true
	18	[3189]	RETURN   	R1 2 ; return R1 
	19	[3190]	RETURN   	R0 1 ; return 

function #183 <?:3193,3202> (23 instructions, 92 bytes at 00000252748A1B00)
1 param, 9 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[3194]	NEWTABLE 	R1 5 0 ; R1 := {}
	2	[3194]	GETGLOBAL	R2 K0 ; R2 := ZARIMAN_MISSION_A_TAG
	3	[3194]	GETGLOBAL	R3 K1 ; R3 := ZARIMAN_MISSION_B_TAG
	4	[3194]	GETGLOBAL	R4 K2 ; R4 := ZARIMAN_MISSION_C_TAG
	5	[3194]	GETGLOBAL	R5 K3 ; R5 := ZARIMAN_MISSION_D_TAG
	6	[3194]	GETGLOBAL	R6 K4 ; R6 := ZARIMAN_MISSION_E_TAG
	7	[3194]	SETLIST  	R1 5 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 5
	8	[3195]	GETGLOBAL	R2 K5 ; R2 := 0x0469f296
	9	[3195]	MOVE     	R3 R0 ; R3 := R0
	10	[3195]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[3196]	GETGLOBAL	R3 K6 ; R3 := 0xcfc01047
	12	[3196]	MOVE     	R4 R1 ; R4 := R1
	13	[3196]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	14	[3196]	JMP      	19 ; PC := 19
	15	[3197]	EQ       	0 R2 R7 ; if R2 ~= R7 then PC := 19
	16	[3197]	JMP      	19 ; PC := 19
	17	[3198]	OP_LOADBOOL	R8 1 0 ; R8 := true
	18	[3198]	RETURN   	R8 2 ; return R8 
	19	[3196]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 15; R5 := R6 end
	20	[3199]	JMP      	15 ; PC := 15
	21	[3201]	OP_LOADBOOL	R8 0 0 ; R8 := false
	22	[3201]	RETURN   	R8 2 ; return R8 
	23	[3202]	RETURN   	R0 1 ; return 

function #184 <?:3204,3260> (106 instructions, 424 bytes at 00000252748A1CF0)
1 param, 16 slots, 4 upvalues, 0 locals, 21 constants, 0 functions
	1	[3205]	TEST     	R0 0 ; if not R0 then PC := 17
	2	[3205]	JMP      	17 ; PC := 17
	3	[3207]	LOADNIL  	R1 R1 ; R1 := nil
	4	[3208]	GETGLOBAL	R2 K0 ; R2 := 0x6c97a788
	5	[3208]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x9c43eb8c]
	6	[3208]	GETGLOBAL	R3 K2 ; R3 := 0x76ea806b
	7	[3208]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x3f3ae64c]
	8	[3208]	LOADK    	R5 := 0.000000
	9	[3208]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	10	[3208]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	11	[3208]	TEST     	R2 0 ; if not R2 then PC := 15
	12	[3208]	JMP      	15 ; PC := 15
	13	[3209]	LOADK    	R1 := 0.000000
	14	[3209]	JMP      	16 ; PC := 16
	15	[3211]	LOADK    	R1 := 2.000000
	16	[3214]	RETURN   	R1 2 ; return R1 
	17	[3217]	GETGLOBAL	R2 K4 ; R2 := _T
	18	[3217]	GETTABLE 	R2 R2 K5 ; R2 := R2["gPendingMission"]
	19	[3217]	TEST     	R2 0 ; if not R2 then PC := 62
	20	[3217]	JMP      	62 ; PC := 62
	21	[3217]	GETGLOBAL	R2 K6 ; R2 := 0xe7f2b02f
	22	[3217]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xedf454bc]
	23	[3217]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[3217]	TEST     	R2 0 ; if not R2 then PC := 62
	25	[3217]	JMP      	62 ; PC := 62
	26	[3218]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	27	[3218]	GETGLOBAL	R3 K4 ; R3 := _T
	28	[3218]	GETTABLE 	R3 R3 K5 ; R3 := R3["gPendingMission"]
	29	[3218]	GETTABLE 	R3 R3 K9 ; R3 := R3["name"]
	30	[3218]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[3219]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	32	[3219]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xa5c556b9]
	33	[3219]	MOVE     	R4 R2 ; R4 := R2
	34	[3219]	GETGLOBAL	R5 K12 ; R5 := TAG_SEPERATOR
	35	[3219]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	36	[3220]	TEST     	R3 0 ; if not R3 then PC := 45
	37	[3220]	JMP      	45 ; PC := 45
	38	[3221]	GETGLOBAL	R4 K10 ; R4 := 0x7f5022cf
	39	[3221]	GETTABLE 	R4 R4 K13 ; R4 := R4[0x1a94c9cc]
	40	[3221]	MOVE     	R5 R2 ; R5 := R2
	41	[3221]	LOADK    	R6 := 1.000000
	42	[3221]	SUB      	R7 R3 K14 ; R7 := R3 - 1.000000
	43	[3221]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	44	[3221]	MOVE     	R2 R4 ; R2 := R4
	45	[3223]	GETUPVAL 	R4 U0 ; R4 := U0
	46	[3223]	MOVE     	R5 R2 ; R5 := R2
	47	[3223]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[3223]	TEST     	R4 0 ; if not R4 then PC := 55
	49	[3223]	JMP      	55 ; PC := 55
	50	[3225]	GETUPVAL 	R4 U1 ; R4 := U1
	51	[3225]	MOVE     	R5 R2 ; R5 := R2
	52	[3225]	GETGLOBAL	R6 K15 ; R6 := PLAINS_ELO_IN_LISET
	53	[3225]	TAILCALL 	R4 3 0 ; R4,... := R4(R5,R6)
	54	[3225]	RETURN   	R4 0 ; return R4,... 
	55	[3228]	GETUPVAL 	R4 U2 ; R4 := U2
	56	[3228]	MOVE     	R5 R2 ; R5 := R2
	57	[3228]	CALL     	R4 2 2 ; R4 := R4(R5)
	58	[3228]	TEST     	R4 0 ; if not R4 then PC := 62
	59	[3228]	JMP      	62 ; PC := 62
	60	[3229]	GETGLOBAL	R4 K15 ; R4 := PLAINS_ELO_IN_LISET
	61	[3229]	RETURN   	R4 2 ; return R4 
	62	[3234]	NEWTABLE 	R4 4 0 ; R4 := {}
	63	[3234]	LOADK    	R5 := 0.000000
	64	[3234]	LOADK    	R6 := 1.000000
	65	[3234]	LOADK    	R7 := 3.000000
	66	[3234]	LOADK    	R8 := 5.000000
	67	[3234]	SETLIST  	R4 4 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
	68	[3235]	LOADK    	R5 := 0.000000
	69	[3236]	LOADK    	R6 := 0.000000
	70	[3238]	GETUPVAL 	R7 U3 ; R7 := U3
	71	[3238]	CALL     	R7 1 2 ; R7 := R7()
	72	[3239]	GETGLOBAL	R8 K17 ; R8 := 0x7b998233
	73	[3239]	MOVE     	R9 R7 ; R9 := R7
	74	[3239]	CALL     	R8 2 2 ; R8 := R8(R9)
	75	[3239]	TEST     	R8 1 ; if R8 then PC := 101
	76	[3239]	JMP      	101 ; PC := 101
	77	[3241]	SELF     	R8 R7 K18 ; R9 := R7; R8 := R7[0xde321e6f]
	78	[3241]	CALL     	R8 2 2 ; R8 := R8(R9)
	79	[3242]	GETGLOBAL	R9 K17 ; R9 := 0x7b998233
	80	[3242]	MOVE     	R10 R8 ; R10 := R8
	81	[3242]	CALL     	R9 2 2 ; R9 := R9(R10)
	82	[3242]	TEST     	R9 1 ; if R9 then PC := 101
	83	[3242]	JMP      	101 ; PC := 101
	84	[3244]	LOADK    	R9 := 1.000000
	85	[3244]	LEN      	R10 R4 ; R10 := # R4
	86	[3244]	LOADK    	R11 := 1.000000
	87	[3244]	FORPREP  	R9 100 ; R9 -= R11; PC := 100
	88	[3245]	SELF     	R13 R8 K19 ; R14 := R8; R13 := R8[0xe85a2361]
	89	[3245]	GETTABLE 	R15 R4 R12 ; R15 := R4[R12]
	90	[3245]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	91	[3246]	GETGLOBAL	R14 K17 ; R14 := 0x7b998233
	92	[3246]	MOVE     	R15 R13 ; R15 := R13
	93	[3246]	CALL     	R14 2 2 ; R14 := R14(R15)
	94	[3246]	TEST     	R14 1 ; if R14 then PC := 100
	95	[3246]	JMP      	100 ; PC := 100
	96	[3247]	ADD      	R5 R5 K14 ; R5 := R5 + 1.000000
	97	[3248]	SELF     	R14 R13 K20 ; R15 := R13; R14 := R13[0xca9ea368]
	98	[3248]	CALL     	R14 2 2 ; R14 := R14(R15)
	99	[3248]	ADD      	R6 R6 R14 ; R6 := R6 + R14
	100	[3244]	FORLOOP  	R9 88 ; R9 += R11; if R9 <= R10 then begin PC := 88; R12 := R9 end
	101	[3254]	LT       	0 R5 K14 ; if R5 >= 1.000000 then PC := 104
	102	[3254]	JMP      	104 ; PC := 104
	103	[3255]	LOADK    	R5 := 1.000000
	104	[3258]	DIV      	R14 R6 R5 ; R14 := R6 / R5
	105	[3259]	RETURN   	R14 2 ; return R14 
	106	[3260]	RETURN   	R0 1 ; return 

function #185 <?:3262,3264> (5 instructions, 20 bytes at 00000252748A22A0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3263]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3263]	MOVE     	R2 R0 ; R2 := R0
	3	[3263]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3263]	RETURN   	R1 2 ; return R1 
	5	[3264]	RETURN   	R0 1 ; return 

function #186 <?:3266,3307> (156 instructions, 624 bytes at 00000252748A2390)
1 param, 13 slots, 3 upvalues, 0 locals, 19 constants, 0 functions
	1	[3270]	OP_LOADBOOL	R4 1 0 ; R4 := true
	2	[3271]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	3	[3271]	MOVE     	R6 R0 ; R6 := R0
	4	[3271]	CALL     	R5 2 2 ; R5 := R5(R6)
	5	[3271]	TEST     	R5 1 ; if R5 then PC := 151
	6	[3271]	JMP      	151 ; PC := 151
	7	[3272]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	8	[3272]	GETGLOBAL	R7 K2 ; R7 := gDecorationType
	9	[3272]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	10	[3272]	TEST     	R5 0 ; if not R5 then PC := 30
	11	[3272]	JMP      	30 ; PC := 30
	12	[3272]	SELF     	R5 R0 K3 ; R6 := R0; R5 := R0[0xaf8359c4]
	13	[3272]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[3272]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x56c01834]
	15	[3272]	CALL     	R5 2 2 ; R5 := R5(R6)
	16	[3272]	TEST     	R5 0 ; if not R5 then PC := 22
	17	[3272]	JMP      	22 ; PC := 22
	18	[3272]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0xe5a0a15d]
	19	[3272]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[3272]	TEST     	R5 1 ; if R5 then PC := 27
	21	[3272]	JMP      	27 ; PC := 27
	22	[3272]	SELF     	R5 R0 K6 ; R6 := R0; R5 := R0[0x22da1852]
	23	[3272]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[3272]	GETUPVAL 	R6 U0 ; R6 := U0
	25	[3272]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 30
	26	[3272]	JMP      	30 ; PC := 30
	27	[3273]	MOVE     	R1 R0 ; R1 := R0
	28	[3274]	OP_LOADBOOL	R4 0 0 ; R4 := false
	29	[3274]	JMP      	151 ; PC := 151
	30	[3275]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	31	[3275]	GETGLOBAL	R7 K7 ; R7 := gDynamicCoverType
	32	[3275]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	33	[3275]	TEST     	R5 1 ; if R5 then PC := 45
	34	[3275]	JMP      	45 ; PC := 45
	35	[3275]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	36	[3275]	GETGLOBAL	R7 K8 ; R7 := gEmplacementType
	37	[3275]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	38	[3275]	TEST     	R5 1 ; if R5 then PC := 45
	39	[3275]	JMP      	45 ; PC := 45
	40	[3275]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	41	[3275]	GETGLOBAL	R7 K9 ; R7 := gDevourerType
	42	[3275]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	43	[3275]	TEST     	R5 0 ; if not R5 then PC := 47
	44	[3275]	JMP      	47 ; PC := 47
	45	[3276]	MOVE     	R1 R0 ; R1 := R0
	46	[3276]	JMP      	151 ; PC := 151
	47	[3277]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	48	[3277]	GETUPVAL 	R7 U1 ; R7 := U1
	49	[3277]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	50	[3277]	TEST     	R5 0 ; if not R5 then PC := 55
	51	[3277]	JMP      	55 ; PC := 55
	52	[3278]	LOADNIL  	R5 R5 ; R5 := nil
	53	[3278]	RETURN   	R5 2 ; return R5 
	54	[3278]	JMP      	151 ; PC := 151
	55	[3279]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	56	[3279]	GETGLOBAL	R7 K10 ; R7 := gBaseAvatarType
	57	[3279]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	58	[3279]	TEST     	R5 0 ; if not R5 then PC := 62
	59	[3279]	JMP      	62 ; PC := 62
	60	[3280]	MOVE     	R2 R0 ; R2 := R0
	61	[3280]	JMP      	151 ; PC := 151
	62	[3282]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	63	[3282]	GETGLOBAL	R7 K11 ; R7 := gHitProxyType
	64	[3282]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	65	[3282]	TEST     	R5 0 ; if not R5 then PC := 69
	66	[3282]	JMP      	69 ; PC := 69
	67	[3282]	SELF     	R5 R0 K12 ; R6 := R0; R5 := R0[0xf37943ff]
	68	[3282]	CALL     	R5 2 2 ; R5 := R5(R6)
	69	[3283]	SELF     	R6 R0 K13 ; R7 := R0; R6 := R0[0xc3962b21]
	70	[3283]	CALL     	R6 2 2 ; R6 := R6(R7)
	71	[3284]	TEST     	R5 0 ; if not R5 then PC := 80
	72	[3284]	JMP      	80 ; PC := 80
	73	[3284]	SELF     	R7 R6 K1 ; R8 := R6; R7 := R6[0xf2deaf69]
	74	[3284]	GETGLOBAL	R9 K10 ; R9 := gBaseAvatarType
	75	[3284]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	76	[3284]	TEST     	R7 0 ; if not R7 then PC := 80
	77	[3284]	JMP      	80 ; PC := 80
	78	[3285]	MOVE     	R2 R6 ; R2 := R6
	79	[3285]	JMP      	151 ; PC := 151
	80	[3286]	TEST     	R5 0 ; if not R5 then PC := 107
	81	[3286]	JMP      	107 ; PC := 107
	82	[3286]	SELF     	R7 R6 K1 ; R8 := R6; R7 := R6[0xf2deaf69]
	83	[3286]	GETGLOBAL	R9 K2 ; R9 := gDecorationType
	84	[3286]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	85	[3286]	TEST     	R7 0 ; if not R7 then PC := 93
	86	[3286]	JMP      	93 ; PC := 93
	87	[3286]	SELF     	R7 R6 K3 ; R8 := R6; R7 := R6[0xaf8359c4]
	88	[3286]	CALL     	R7 2 2 ; R7 := R7(R8)
	89	[3286]	SELF     	R7 R7 K4 ; R8 := R7; R7 := R7[0x56c01834]
	90	[3286]	CALL     	R7 2 2 ; R7 := R7(R8)
	91	[3286]	TEST     	R7 1 ; if R7 then PC := 103
	92	[3286]	JMP      	103 ; PC := 103
	93	[3286]	SELF     	R7 R6 K1 ; R8 := R6; R7 := R6[0xf2deaf69]
	94	[3286]	GETGLOBAL	R9 K7 ; R9 := gDynamicCoverType
	95	[3286]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	96	[3286]	TEST     	R7 1 ; if R7 then PC := 103
	97	[3286]	JMP      	103 ; PC := 103
	98	[3286]	SELF     	R7 R6 K1 ; R8 := R6; R7 := R6[0xf2deaf69]
	99	[3286]	GETGLOBAL	R9 K8 ; R9 := gEmplacementType
	100	[3286]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	101	[3286]	TEST     	R7 0 ; if not R7 then PC := 107
	102	[3286]	JMP      	107 ; PC := 107
	103	[3287]	MOVE     	R1 R6 ; R1 := R6
	104	[3288]	MOVE     	R3 R0 ; R3 := R0
	105	[3289]	OP_LOADBOOL	R4 0 0 ; R4 := false
	106	[3289]	JMP      	151 ; PC := 151
	107	[3290]	TEST     	R5 0 ; if not R5 then PC := 117
	108	[3290]	JMP      	117 ; PC := 117
	109	[3290]	SELF     	R7 R6 K1 ; R8 := R6; R7 := R6[0xf2deaf69]
	110	[3290]	GETGLOBAL	R9 K9 ; R9 := gDevourerType
	111	[3290]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	112	[3290]	TEST     	R7 0 ; if not R7 then PC := 117
	113	[3290]	JMP      	117 ; PC := 117
	114	[3291]	MOVE     	R1 R6 ; R1 := R6
	115	[3292]	MOVE     	R3 R0 ; R3 := R0
	116	[3292]	JMP      	151 ; PC := 151
	117	[3293]	SELF     	R7 R0 K1 ; R8 := R0; R7 := R0[0xf2deaf69]
	118	[3293]	GETGLOBAL	R9 K14 ; R9 := gPickUpType
	119	[3293]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	120	[3293]	TEST     	R7 0 ; if not R7 then PC := 140
	121	[3293]	JMP      	140 ; PC := 140
	122	[3293]	SELF     	R7 R0 K15 ; R8 := R0; R7 := R0[0x1cf0f63d]
	123	[3293]	CALL     	R7 2 2 ; R7 := R7(R8)
	124	[3293]	TEST     	R7 0 ; if not R7 then PC := 140
	125	[3293]	JMP      	140 ; PC := 140
	126	[3294]	SELF     	R7 R0 K16 ; R8 := R0; R7 := R0[0x4528012d]
	127	[3294]	CALL     	R7 2 2 ; R7 := R7(R8)
	128	[3295]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	129	[3295]	MOVE     	R9 R7 ; R9 := R7
	130	[3295]	CALL     	R8 2 2 ; R8 := R8(R9)
	131	[3295]	TEST     	R8 1 ; if R8 then PC := 151
	132	[3295]	JMP      	151 ; PC := 151
	133	[3295]	SELF     	R8 R7 K1 ; R9 := R7; R8 := R7[0xf2deaf69]
	134	[3295]	GETGLOBAL	R10 K17 ; R10 := gFusionTreasureType
	135	[3295]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	136	[3295]	TEST     	R8 0 ; if not R8 then PC := 151
	137	[3295]	JMP      	151 ; PC := 151
	138	[3296]	MOVE     	R1 R0 ; R1 := R0
	139	[3297]	JMP      	151 ; PC := 151
	140	[3299]	SELF     	R8 R0 K18 ; R9 := R0; R8 := R0[0x2b54251b]
	141	[3299]	CALL     	R8 2 2 ; R8 := R8(R9)
	142	[3300]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	143	[3300]	MOVE     	R10 R8 ; R10 := R8
	144	[3300]	CALL     	R9 2 2 ; R9 := R9(R10)
	145	[3300]	TEST     	R9 1 ; if R9 then PC := 151
	146	[3300]	JMP      	151 ; PC := 151
	147	[3301]	GETUPVAL 	R9 U2 ; R9 := U2
	148	[3301]	MOVE     	R10 R8 ; R10 := R8
	149	[3301]	TAILCALL 	R9 2 0 ; R9,... := R9(R10)
	150	[3301]	RETURN   	R9 0 ; return R9,... 
	151	[3306]	MOVE     	R9 R1 ; R9 := R1
	152	[3306]	MOVE     	R10 R2 ; R10 := R2
	153	[3306]	MOVE     	R11 R3 ; R11 := R3
	154	[3306]	MOVE     	R12 R4 ; R12 := R4
	155	[3306]	RETURN   	R9 5 ; return R9, R10, R11, R12 
	156	[3307]	RETURN   	R0 1 ; return 

function #187 <?:3309,3311> (5 instructions, 20 bytes at 00000252748A2A60)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3310]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3310]	MOVE     	R2 R0 ; R2 := R0
	3	[3310]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3310]	RETURN   	R1 0 ; return R1,... 
	5	[3311]	RETURN   	R0 1 ; return 

function #188 <?:3313,3341> (71 instructions, 284 bytes at 00000252748A2B50)
3 params, 15 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[3314]	EQ       	1 R1 K0 ; if R1 == nil then PC := 71
	2	[3314]	JMP      	71 ; PC := 71
	3	[3315]	LOADK    	R3 := 1.000000
	4	[3315]	LEN      	R4 R1 ; R4 := # R1
	5	[3315]	LOADK    	R5 := 1.000000
	6	[3315]	FORPREP  	R3 70 ; R3 -= R5; PC := 70
	7	[3316]	GETGLOBAL	R7 K1 ; R7 := 0xce225efa
	8	[3316]	LOADK    	R8 := 0.000000
	9	[3316]	CALL     	R7 2 1 ; R7(R8)
	10	[3318]	GETTABLE 	R7 R1 R6 ; R7 := R1[R6]
	11	[3319]	GETTABLE 	R8 R7 K2 ; R8 := R7["mItemType"]
	12	[3319]	SELF     	R8 R8 K3 ; R9 := R8; R8 := R8[0xed4e0128]
	13	[3319]	CALL     	R8 2 2 ; R8 := R8(R9)
	14	[3321]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	15	[3321]	MOVE     	R10 R2 ; R10 := R2
	16	[3321]	CALL     	R9 2 2 ; R9 := R9(R10)
	17	[3321]	TEST     	R9 1 ; if R9 then PC := 24
	18	[3321]	JMP      	24 ; PC := 24
	19	[3321]	MOVE     	R9 R2 ; R9 := R2
	20	[3321]	MOVE     	R10 R7 ; R10 := R7
	21	[3321]	CALL     	R9 2 2 ; R9 := R9(R10)
	22	[3321]	TEST     	R9 0 ; if not R9 then PC := 70
	23	[3321]	JMP      	70 ; PC := 70
	24	[3322]	GETTABLE 	R9 R0 R8 ; R9 := R0[R8]
	25	[3324]	EQ       	1 R9 K0 ; if R9 == nil then PC := 59
	26	[3324]	JMP      	59 ; PC := 59
	27	[3325]	GETTABLE 	R10 R9 K5 ; R10 := R9["Count"]
	28	[3325]	EQ       	1 R10 K0 ; if R10 == nil then PC := 33
	29	[3325]	JMP      	33 ; PC := 33
	30	[3325]	GETTABLE 	R10 R9 K5 ; R10 := R9["Count"]
	31	[3325]	EQ       	0 R10 K6 ; if R10 ~= 0.000000 then PC := 45
	32	[3325]	JMP      	45 ; PC := 45
	33	[3326]	GETUPVAL 	R10 U0 ; R10 := U0
	34	[3326]	GETTABLE 	R10 R10 K7 ; R10 := R10[0x06d055f9]
	35	[3326]	GETTABLE 	R11 R7 K8 ; R11 := R7["mItemCount"]
	36	[3326]	EQ       	1 R11 K0 ; if R11 == nil then PC := 39
	37	[3326]	JMP      	39 ; PC := 39
	38	[3326]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 39
	39	[3326]	OP_LOADBOOL	R11 1 0 ; R11 := true
	40	[3326]	LOADK    	R12 := 1.000000
	41	[3326]	GETTABLE 	R13 R7 K8 ; R13 := R7["mItemCount"]
	42	[3326]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	43	[3326]	SETTABLE 	R9 K5 R10 ; R9["Count"] := R10
	44	[3326]	JMP      	70 ; PC := 70
	45	[3328]	GETTABLE 	R10 R9 K5 ; R10 := R9["Count"]
	46	[3328]	GETUPVAL 	R11 U0 ; R11 := U0
	47	[3328]	GETTABLE 	R11 R11 K7 ; R11 := R11[0x06d055f9]
	48	[3328]	GETTABLE 	R12 R7 K8 ; R12 := R7["mItemCount"]
	49	[3328]	EQ       	1 R12 K0 ; if R12 == nil then PC := 52
	50	[3328]	JMP      	52 ; PC := 52
	51	[3328]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 52
	52	[3328]	OP_LOADBOOL	R12 1 0 ; R12 := true
	53	[3328]	LOADK    	R13 := 1.000000
	54	[3328]	GETTABLE 	R14 R7 K8 ; R14 := R7["mItemCount"]
	55	[3328]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	56	[3328]	ADD      	R10 R10 R11 ; R10 := R10 + R11
	57	[3328]	SETTABLE 	R9 K5 R10 ; R9["Count"] := R10
	58	[3329]	JMP      	70 ; PC := 70
	59	[3331]	NEWTABLE 	R10 0 3 ; R10 := {}
	60	[3331]	GETTABLE 	R11 R7 K2 ; R11 := R7["mItemType"]
	61	[3331]	SETTABLE 	R10 K9 R11 ; R10["Type"] := R11
	62	[3331]	GETTABLE 	R11 R7 K8 ; R11 := R7["mItemCount"]
	63	[3331]	SETTABLE 	R10 K5 R11 ; R10["Count"] := R11
	64	[3331]	SETTABLE 	R10 K10 R7 ; R10["Item"] := R7
	65	[3333]	GETTABLE 	R11 R10 K5 ; R11 := R10["Count"]
	66	[3333]	EQ       	0 R11 K0 ; if R11 ~= nil then PC := 69
	67	[3333]	JMP      	69 ; PC := 69
	68	[3334]	SETTABLE 	R10 K5 K11 ; R10["Count"] := 1.000000
	69	[3336]	SETTABLE 	R0 R8 R10 ; R0[R8] := R10
	70	[3315]	FORLOOP  	R3 7 ; R3 += R5; if R3 <= R4 then begin PC := 7; R6 := R3 end
	71	[3341]	RETURN   	R0 1 ; return 

function #189 <?:3343,3345> (6 instructions, 24 bytes at 00000252748A2F80)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3344]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[3344]	MOVE     	R4 R0 ; R4 := R0
	3	[3344]	MOVE     	R5 R1 ; R5 := R1
	4	[3344]	MOVE     	R6 R2 ; R6 := R2
	5	[3344]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	6	[3345]	RETURN   	R0 1 ; return 

function #190 <?:3347,3395> (162 instructions, 648 bytes at 00000252748A3070)
0 params, 8 slots, 1 upvalue, 0 locals, 33 constants, 1 function
	1	[3348]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3350]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	3	[3351]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[3351]	MOVE     	R3 R1 ; R3 := R1
	5	[3351]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[3351]	TEST     	R2 1 ; if R2 then PC := 161
	7	[3351]	JMP      	161 ; PC := 161
	8	[3352]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x25a6e75e]
	9	[3352]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3353]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	11	[3353]	MOVE     	R4 R2 ; R4 := R2
	12	[3353]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[3353]	TEST     	R3 1 ; if R3 then PC := 161
	14	[3353]	JMP      	161 ; PC := 161
	15	[3354]	GETUPVAL 	R3 U0 ; R3 := U0
	16	[3354]	MOVE     	R4 R0 ; R4 := R0
	17	[3354]	SELF     	R5 R2 K3 ; R6 := R2; R5 := R2[0x57d88957]
	18	[3354]	CALL     	R5 2 0 ; R5,... := R5(R6)
	19	[3354]	CALL     	R3 0 1 ; R3(R4,...)
	20	[3355]	GETUPVAL 	R3 U0 ; R3 := U0
	21	[3355]	MOVE     	R4 R0 ; R4 := R0
	22	[3355]	SELF     	R5 R2 K4 ; R6 := R2; R5 := R2[0x215bf396]
	23	[3355]	CALL     	R5 2 0 ; R5,... := R5(R6)
	24	[3355]	CALL     	R3 0 1 ; R3(R4,...)
	25	[3356]	GETUPVAL 	R3 U0 ; R3 := U0
	26	[3356]	MOVE     	R4 R0 ; R4 := R0
	27	[3356]	SELF     	R5 R2 K5 ; R6 := R2; R5 := R2[0x21a3da0c]
	28	[3356]	CALL     	R5 2 0 ; R5,... := R5(R6)
	29	[3356]	CALL     	R3 0 1 ; R3(R4,...)
	30	[3357]	GETUPVAL 	R3 U0 ; R3 := U0
	31	[3357]	MOVE     	R4 R0 ; R4 := R0
	32	[3357]	SELF     	R5 R2 K6 ; R6 := R2; R5 := R2[0x0bf14f02]
	33	[3357]	CALL     	R5 2 0 ; R5,... := R5(R6)
	34	[3357]	CALL     	R3 0 1 ; R3(R4,...)
	35	[3358]	GETUPVAL 	R3 U0 ; R3 := U0
	36	[3358]	MOVE     	R4 R0 ; R4 := R0
	37	[3358]	SELF     	R5 R2 K7 ; R6 := R2; R5 := R2[0x4bb8609a]
	38	[3358]	CALL     	R5 2 0 ; R5,... := R5(R6)
	39	[3358]	CALL     	R3 0 1 ; R3(R4,...)
	40	[3359]	GETUPVAL 	R3 U0 ; R3 := U0
	41	[3359]	MOVE     	R4 R0 ; R4 := R0
	42	[3359]	SELF     	R5 R2 K8 ; R6 := R2; R5 := R2[0x6f7b67d7]
	43	[3359]	CALL     	R5 2 0 ; R5,... := R5(R6)
	44	[3359]	CALL     	R3 0 1 ; R3(R4,...)
	45	[3360]	GETUPVAL 	R3 U0 ; R3 := U0
	46	[3360]	MOVE     	R4 R0 ; R4 := R0
	47	[3360]	SELF     	R5 R2 K9 ; R6 := R2; R5 := R2[0x3218c3b0]
	48	[3360]	CALL     	R5 2 0 ; R5,... := R5(R6)
	49	[3360]	CALL     	R3 0 1 ; R3(R4,...)
	50	[3361]	GETUPVAL 	R3 U0 ; R3 := U0
	51	[3361]	MOVE     	R4 R0 ; R4 := R0
	52	[3361]	SELF     	R5 R2 K10 ; R6 := R2; R5 := R2[0x2a207127]
	53	[3361]	CALL     	R5 2 0 ; R5,... := R5(R6)
	54	[3361]	CALL     	R3 0 1 ; R3(R4,...)
	55	[3362]	GETUPVAL 	R3 U0 ; R3 := U0
	56	[3362]	MOVE     	R4 R0 ; R4 := R0
	57	[3362]	SELF     	R5 R2 K11 ; R6 := R2; R5 := R2[0xa2c6d8b7]
	58	[3362]	CALL     	R5 2 0 ; R5,... := R5(R6)
	59	[3362]	CALL     	R3 0 1 ; R3(R4,...)
	60	[3363]	GETUPVAL 	R3 U0 ; R3 := U0
	61	[3363]	MOVE     	R4 R0 ; R4 := R0
	62	[3363]	SELF     	R5 R2 K12 ; R6 := R2; R5 := R2[0xe9131614]
	63	[3363]	CALL     	R5 2 0 ; R5,... := R5(R6)
	64	[3363]	CALL     	R3 0 1 ; R3(R4,...)
	65	[3364]	GETGLOBAL	R3 K13 ; R3 := 0x7ed0a956
	66	[3364]	LOADK    	R4 K14 ; R4 := "/Lotus/Upgrades/Mods/Immortal/ImmortalBaseMod"
	67	[3364]	CALL     	R3 2 2 ; R3 := R3(R4)
	68	[3365]	GETUPVAL 	R4 U0 ; R4 := U0
	69	[3365]	MOVE     	R5 R0 ; R5 := R0
	70	[3365]	SELF     	R6 R2 K15 ; R7 := R2; R6 := R2[0x98b1bb53]
	71	[3365]	CALL     	R6 2 2 ; R6 := R6(R7)
	72	[3373]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	73	[3373]	MOVE     	R0 R3 ; R0 := R3
	74	[3365]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	75	[3374]	GETUPVAL 	R4 U0 ; R4 := U0
	76	[3374]	MOVE     	R5 R0 ; R5 := R0
	77	[3374]	SELF     	R6 R2 K16 ; R7 := R2; R6 := R2[0xaaeb4d91]
	78	[3374]	CALL     	R6 2 0 ; R6,... := R6(R7)
	79	[3374]	CALL     	R4 0 1 ; R4(R5,...)
	80	[3375]	GETUPVAL 	R4 U0 ; R4 := U0
	81	[3375]	MOVE     	R5 R0 ; R5 := R0
	82	[3375]	SELF     	R6 R2 K17 ; R7 := R2; R6 := R2[0x51a64e2e]
	83	[3375]	CALL     	R6 2 0 ; R6,... := R6(R7)
	84	[3375]	CALL     	R4 0 1 ; R4(R5,...)
	85	[3376]	GETUPVAL 	R4 U0 ; R4 := U0
	86	[3376]	MOVE     	R5 R0 ; R5 := R0
	87	[3376]	SELF     	R6 R2 K18 ; R7 := R2; R6 := R2[0x6cfd4151]
	88	[3376]	CALL     	R6 2 0 ; R6,... := R6(R7)
	89	[3376]	CALL     	R4 0 1 ; R4(R5,...)
	90	[3377]	GETUPVAL 	R4 U0 ; R4 := U0
	91	[3377]	MOVE     	R5 R0 ; R5 := R0
	92	[3377]	SELF     	R6 R2 K19 ; R7 := R2; R6 := R2[0xf4045b7e]
	93	[3377]	CALL     	R6 2 0 ; R6,... := R6(R7)
	94	[3377]	CALL     	R4 0 1 ; R4(R5,...)
	95	[3378]	GETUPVAL 	R4 U0 ; R4 := U0
	96	[3378]	MOVE     	R5 R0 ; R5 := R0
	97	[3378]	SELF     	R6 R2 K20 ; R7 := R2; R6 := R2[0xd8dfa041]
	98	[3378]	CALL     	R6 2 0 ; R6,... := R6(R7)
	99	[3378]	CALL     	R4 0 1 ; R4(R5,...)
	100	[3379]	GETUPVAL 	R4 U0 ; R4 := U0
	101	[3379]	MOVE     	R5 R0 ; R5 := R0
	102	[3379]	SELF     	R6 R2 K21 ; R7 := R2; R6 := R2[0x8f27d10c]
	103	[3379]	CALL     	R6 2 0 ; R6,... := R6(R7)
	104	[3379]	CALL     	R4 0 1 ; R4(R5,...)
	105	[3380]	GETUPVAL 	R4 U0 ; R4 := U0
	106	[3380]	MOVE     	R5 R0 ; R5 := R0
	107	[3380]	SELF     	R6 R2 K22 ; R7 := R2; R6 := R2[0xe9768ed0]
	108	[3380]	CALL     	R6 2 0 ; R6,... := R6(R7)
	109	[3380]	CALL     	R4 0 1 ; R4(R5,...)
	110	[3381]	GETUPVAL 	R4 U0 ; R4 := U0
	111	[3381]	MOVE     	R5 R0 ; R5 := R0
	112	[3381]	SELF     	R6 R2 K23 ; R7 := R2; R6 := R2[0xcd6e999d]
	113	[3381]	CALL     	R6 2 0 ; R6,... := R6(R7)
	114	[3381]	CALL     	R4 0 1 ; R4(R5,...)
	115	[3382]	GETUPVAL 	R4 U0 ; R4 := U0
	116	[3382]	MOVE     	R5 R0 ; R5 := R0
	117	[3382]	SELF     	R6 R2 K24 ; R7 := R2; R6 := R2[0x7c12ac22]
	118	[3382]	CALL     	R6 2 0 ; R6,... := R6(R7)
	119	[3382]	CALL     	R4 0 1 ; R4(R5,...)
	120	[3383]	GETUPVAL 	R4 U0 ; R4 := U0
	121	[3383]	MOVE     	R5 R0 ; R5 := R0
	122	[3383]	SELF     	R6 R2 K25 ; R7 := R2; R6 := R2[0x1b68b9f9]
	123	[3383]	CALL     	R6 2 0 ; R6,... := R6(R7)
	124	[3383]	CALL     	R4 0 1 ; R4(R5,...)
	125	[3384]	GETUPVAL 	R4 U0 ; R4 := U0
	126	[3384]	MOVE     	R5 R0 ; R5 := R0
	127	[3384]	SELF     	R6 R2 K26 ; R7 := R2; R6 := R2[0xbfba693e]
	128	[3384]	CALL     	R6 2 0 ; R6,... := R6(R7)
	129	[3384]	CALL     	R4 0 1 ; R4(R5,...)
	130	[3385]	GETUPVAL 	R4 U0 ; R4 := U0
	131	[3385]	MOVE     	R5 R0 ; R5 := R0
	132	[3385]	SELF     	R6 R2 K27 ; R7 := R2; R6 := R2[0xdc039065]
	133	[3385]	CALL     	R6 2 0 ; R6,... := R6(R7)
	134	[3385]	CALL     	R4 0 1 ; R4(R5,...)
	135	[3386]	GETUPVAL 	R4 U0 ; R4 := U0
	136	[3386]	MOVE     	R5 R0 ; R5 := R0
	137	[3386]	SELF     	R6 R2 K28 ; R7 := R2; R6 := R2[0x2fdbb24a]
	138	[3386]	CALL     	R6 2 0 ; R6,... := R6(R7)
	139	[3386]	CALL     	R4 0 1 ; R4(R5,...)
	140	[3387]	GETUPVAL 	R4 U0 ; R4 := U0
	141	[3387]	MOVE     	R5 R0 ; R5 := R0
	142	[3387]	SELF     	R6 R2 K29 ; R7 := R2; R6 := R2[0x738deb95]
	143	[3387]	CALL     	R6 2 0 ; R6,... := R6(R7)
	144	[3387]	CALL     	R4 0 1 ; R4(R5,...)
	145	[3388]	GETUPVAL 	R4 U0 ; R4 := U0
	146	[3388]	MOVE     	R5 R0 ; R5 := R0
	147	[3388]	SELF     	R6 R2 K30 ; R7 := R2; R6 := R2[0xfab085e3]
	148	[3388]	CALL     	R6 2 0 ; R6,... := R6(R7)
	149	[3388]	CALL     	R4 0 1 ; R4(R5,...)
	150	[3389]	GETUPVAL 	R4 U0 ; R4 := U0
	151	[3389]	MOVE     	R5 R0 ; R5 := R0
	152	[3389]	SELF     	R6 R2 K31 ; R7 := R2; R6 := R2[0x91a3eddf]
	153	[3389]	CALL     	R6 2 0 ; R6,... := R6(R7)
	154	[3389]	CALL     	R4 0 1 ; R4(R5,...)
	155	[3390]	GETUPVAL 	R4 U0 ; R4 := U0
	156	[3390]	MOVE     	R5 R0 ; R5 := R0
	157	[3390]	SELF     	R6 R2 K32 ; R7 := R2; R6 := R2[0x99718a3d]
	158	[3390]	CALL     	R6 2 0 ; R6,... := R6(R7)
	159	[3390]	CALL     	R4 0 1 ; R4(R5,...)
	160	[3390]	CLOSE    	R3 ; SAVE R3,...
	161	[3394]	RETURN   	R0 2 ; return R0 
	162	[3395]	RETURN   	R0 1 ; return 

function #191 <?:3398,3516> (104 instructions, 416 bytes at 00000252748A3B50)
4 params, 35 slots, 4 upvalues, 0 locals, 15 constants, 2 functions
	1	[3400]	NEWTABLE 	R5 0 0 ; R5 := {}
	2	[3412]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	3	[3412]	MOVE     	R0 R2 ; R0 := R2
	4	[3412]	MOVE     	R0 R5 ; R0 := R5
	5	[3412]	MOVE     	R0 R4 ; R0 := R4
	6	[3468]	CLOSURE  	R7 1 ; R7 := closure(Function #2)
	7	[3468]	MOVE     	R0 R0 ; R0 := R0
	8	[3468]	MOVE     	R0 R3 ; R0 := R3
	9	[3468]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[3468]	GETUPVAL 	R0 U1 ; R0 := U1
	11	[3468]	GETUPVAL 	R0 U2 ; R0 := U2
	12	[3468]	GETUPVAL 	R0 U3 ; R0 := U3
	13	[3470]	GETTABLE 	R8 R1 K0 ; R8 := R1["credits"]
	14	[3470]	LT       	0 K1 R8 ; if 0.000000 >= R8 then PC := 32
	15	[3470]	JMP      	32 ; PC := 32
	16	[3471]	LOADK    	R8 K2 ; R8 := "<CREDITS>"
	17	[3472]	TEST     	R3 1 ; if R3 then PC := 24
	18	[3472]	JMP      	24 ; PC := 24
	19	[3473]	SELF     	R9 R0 K3 ; R10 := R0; R9 := R0[0x42b04007]
	20	[3473]	LOADK    	R11 K2 ; R11 := "<CREDITS>"
	21	[3473]	OP_LOADBOOL	R12 1 0 ; R12 := true
	22	[3473]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	23	[3473]	MOVE     	R8 R9 ; R8 := R9
	24	[3475]	MOVE     	R9 R6 ; R9 := R6
	25	[3475]	MOVE     	R10 R8 ; R10 := R8
	26	[3475]	GETUPVAL 	R11 U0 ; R11 := U0
	27	[3475]	GETTABLE 	R11 R11 K4 ; R11 := R11[0x1142c7a8]
	28	[3475]	GETTABLE 	R12 R1 K0 ; R12 := R1["credits"]
	29	[3475]	CALL     	R11 2 2 ; R11 := R11(R12)
	30	[3475]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	31	[3475]	CALL     	R9 2 1 ; R9(R10)
	32	[3478]	GETTABLE 	R9 R1 K5 ; R9 := R1["items"]
	33	[3480]	LOADK    	R10 := 1.000000
	34	[3480]	LEN      	R11 R9 ; R11 := # R9
	35	[3480]	LOADK    	R12 := 1.000000
	36	[3480]	FORPREP  	R10 51 ; R10 -= R12; PC := 51
	37	[3481]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	38	[3483]	GETGLOBAL	R15 K6 ; R15 := 0x7b998233
	39	[3483]	MOVE     	R16 R14 ; R16 := R14
	40	[3483]	CALL     	R15 2 2 ; R15 := R15(R16)
	41	[3483]	TEST     	R15 1 ; if R15 then PC := 51
	42	[3483]	JMP      	51 ; PC := 51
	43	[3484]	MOVE     	R15 R7 ; R15 := R7
	44	[3484]	MOVE     	R16 R14 ; R16 := R14
	45	[3484]	LOADNIL  	R17 R17 ; R17 := nil
	46	[3484]	LOADK    	R18 := 1.000000
	47	[3484]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	48	[3485]	MOVE     	R16 R6 ; R16 := R6
	49	[3485]	MOVE     	R17 R15 ; R17 := R15
	50	[3485]	CALL     	R16 2 1 ; R16(R17)
	51	[3480]	FORLOOP  	R10 37 ; R10 += R12; if R10 <= R11 then begin PC := 37; R13 := R10 end
	52	[3489]	GETTABLE 	R16 R1 K7 ; R16 := R1["countedStoreItems"]
	53	[3490]	LOADK    	R17 := 1.000000
	54	[3490]	LEN      	R18 R16 ; R18 := # R16
	55	[3490]	LOADK    	R19 := 1.000000
	56	[3490]	FORPREP  	R17 72 ; R17 -= R19; PC := 72
	57	[3491]	GETTABLE 	R21 R16 R20 ; R21 := R16[R20]
	58	[3492]	GETTABLE 	R22 R21 K8 ; R22 := R21["mStoreItem"]
	59	[3493]	GETGLOBAL	R23 K6 ; R23 := 0x7b998233
	60	[3493]	MOVE     	R24 R22 ; R24 := R22
	61	[3493]	CALL     	R23 2 2 ; R23 := R23(R24)
	62	[3493]	TEST     	R23 1 ; if R23 then PC := 72
	63	[3493]	JMP      	72 ; PC := 72
	64	[3494]	MOVE     	R23 R7 ; R23 := R7
	65	[3494]	MOVE     	R24 R22 ; R24 := R22
	66	[3494]	LOADNIL  	R25 R25 ; R25 := nil
	67	[3494]	GETTABLE 	R26 R21 K9 ; R26 := R21["mItemCount"]
	68	[3494]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	69	[3495]	MOVE     	R24 R6 ; R24 := R6
	70	[3495]	MOVE     	R25 R23 ; R25 := R23
	71	[3495]	CALL     	R24 2 1 ; R24(R25)
	72	[3490]	FORLOOP  	R17 57 ; R17 += R19; if R17 <= R18 then begin PC := 57; R20 := R17 end
	73	[3499]	GETTABLE 	R24 R1 K10 ; R24 := R1["countedItems"]
	74	[3501]	LOADK    	R25 := 1.000000
	75	[3501]	LEN      	R26 R24 ; R26 := # R24
	76	[3501]	LOADK    	R27 := 1.000000
	77	[3501]	FORPREP  	R25 93 ; R25 -= R27; PC := 93
	78	[3502]	GETTABLE 	R29 R1 K10 ; R29 := R1["countedItems"]
	79	[3502]	GETTABLE 	R29 R29 R28 ; R29 := R29[R28]
	80	[3504]	GETGLOBAL	R30 K6 ; R30 := 0x7b998233
	81	[3504]	GETTABLE 	R31 R29 K11 ; R31 := R29["mItemType"]
	82	[3504]	CALL     	R30 2 2 ; R30 := R30(R31)
	83	[3504]	TEST     	R30 1 ; if R30 then PC := 93
	84	[3504]	JMP      	93 ; PC := 93
	85	[3505]	MOVE     	R30 R7 ; R30 := R7
	86	[3505]	LOADNIL  	R31 R31 ; R31 := nil
	87	[3505]	MOVE     	R32 R29 ; R32 := R29
	88	[3505]	GETTABLE 	R33 R29 K9 ; R33 := R29["mItemCount"]
	89	[3505]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	90	[3507]	MOVE     	R31 R6 ; R31 := R6
	91	[3507]	MOVE     	R32 R30 ; R32 := R30
	92	[3507]	CALL     	R31 2 1 ; R31(R32)
	93	[3501]	FORLOOP  	R25 78 ; R25 += R27; if R25 <= R26 then begin PC := 78; R28 := R25 end
	94	[3511]	EQ       	0 R4 K12 ; if R4 ~= nil then PC := 97
	95	[3511]	JMP      	97 ; PC := 97
	96	[3512]	LOADK    	R4 K13 ; R4 := ""
	97	[3515]	GETUPVAL 	R31 U0 ; R31 := U0
	98	[3515]	GETTABLE 	R31 R31 K14 ; R31 := R31[0x06d055f9]
	99	[3515]	MOVE     	R32 R2 ; R32 := R2
	100	[3515]	MOVE     	R33 R5 ; R33 := R5
	101	[3515]	MOVE     	R34 R4 ; R34 := R4
	102	[3515]	TAILCALL 	R31 4 0 ; R31,... := R31(R32,R33,R34)
	103	[3515]	RETURN   	R31 0 ; return R31,... 
	104	[3516]	RETURN   	R0 1 ; return 

function #192 <?:3518,3545> (59 instructions, 236 bytes at 00000252748A4E60)
1 param, 5 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[3522]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xf2deaf69]
	2	[3522]	GETGLOBAL	R3 K1 ; R3 := gStoreItemType
	3	[3522]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	4	[3522]	TEST     	R1 0 ; if not R1 then PC := 12
	5	[3522]	JMP      	12 ; PC := 12
	6	[3523]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x056dcf06]
	7	[3523]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[3523]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x599cf9c1]
	9	[3523]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3523]	NOT      	R2 R2 ; R2 := not R2
	11	[3523]	RETURN   	R1 3 ; return R1, R2 
	12	[3526]	GETGLOBAL	R1 K4 ; R1 := 0x6728fd22
	13	[3526]	MOVE     	R2 R0 ; R2 := R0
	14	[3526]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[3526]	TEST     	R1 0 ; if not R1 then PC := 20
	16	[3526]	JMP      	20 ; PC := 20
	17	[3527]	GETGLOBAL	R1 K5 ; R1 := 0x60cce7b4
	18	[3527]	OP_LOADBOOL	R2 0 0 ; R2 := false
	19	[3527]	CALL     	R1 2 1 ; R1(R2)
	20	[3531]	SELF     	R1 R0 K6 ; R2 := R0; R1 := R0[0x78ceba36]
	21	[3531]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[3531]	LT       	0 K7 R1 ; if 1.000000 >= R1 then PC := 34
	23	[3531]	JMP      	34 ; PC := 34
	24	[3532]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x056dcf06]
	25	[3532]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[3532]	TEST     	R1 0 ; if not R1 then PC := 34
	27	[3532]	JMP      	34 ; PC := 34
	28	[3533]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x056dcf06]
	29	[3533]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[3533]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x599cf9c1]
	31	[3533]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[3533]	NOT      	R2 R2 ; R2 := not R2
	33	[3533]	RETURN   	R1 3 ; return R1, R2 
	34	[3538]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x5cc4dde3]
	35	[3538]	CALL     	R1 2 2 ; R1 := R1(R2)
	36	[3539]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	37	[3539]	MOVE     	R3 R1 ; R3 := R1
	38	[3539]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[3539]	TEST     	R2 1 ; if R2 then PC := 53
	40	[3539]	JMP      	53 ; PC := 53
	41	[3539]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	42	[3539]	SELF     	R3 R1 K2 ; R4 := R1; R3 := R1[0x056dcf06]
	43	[3539]	CALL     	R3 2 0 ; R3,... := R3(R4)
	44	[3539]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	45	[3539]	TEST     	R2 1 ; if R2 then PC := 53
	46	[3539]	JMP      	53 ; PC := 53
	47	[3540]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x056dcf06]
	48	[3540]	CALL     	R2 2 2 ; R2 := R2(R3)
	49	[3540]	SELF     	R3 R1 K3 ; R4 := R1; R3 := R1[0x599cf9c1]
	50	[3540]	CALL     	R3 2 2 ; R3 := R3(R4)
	51	[3540]	NOT      	R3 R3 ; R3 := not R3
	52	[3540]	RETURN   	R2 3 ; return R2, R3 
	53	[3544]	SELF     	R2 R0 K2 ; R3 := R0; R2 := R0[0x056dcf06]
	54	[3544]	CALL     	R2 2 2 ; R2 := R2(R3)
	55	[3544]	SELF     	R3 R0 K3 ; R4 := R0; R3 := R0[0x599cf9c1]
	56	[3544]	CALL     	R3 2 2 ; R3 := R3(R4)
	57	[3544]	NOT      	R3 R3 ; R3 := not R3
	58	[3544]	RETURN   	R2 3 ; return R2, R3 
	59	[3545]	RETURN   	R0 1 ; return 

function #193 <?:3547,3549> (5 instructions, 20 bytes at 00000252748A51A0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3548]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3548]	MOVE     	R2 R0 ; R2 := R0
	3	[3548]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3548]	RETURN   	R1 0 ; return R1,... 
	5	[3549]	RETURN   	R0 1 ; return 

function #194 <?:3553,3592> (92 instructions, 368 bytes at 00000252748A5290)
2 params, 14 slots, 1 upvalue, 0 locals, 19 constants, 0 functions
	1	[3558]	OP_LOADBOOL	R6 0 0 ; R6 := false
	2	[3559]	OP_LOADBOOL	R7 0 0 ; R7 := false
	3	[3560]	OP_LOADBOOL	R8 0 0 ; R8 := false
	4	[3562]	GETTABLE 	R9 R0 K0 ; R9 := R0["items"]
	5	[3562]	LEN      	R9 R9 ; R9 := # R9
	6	[3562]	LT       	0 K1 R9 ; if 0.000000 >= R9 then PC := 11
	7	[3562]	JMP      	11 ; PC := 11
	8	[3563]	GETTABLE 	R9 R0 K0 ; R9 := R0["items"]
	9	[3563]	GETTABLE 	R3 R9 K2 ; R3 := R9[1.000000]
	10	[3563]	JMP      	26 ; PC := 26
	11	[3564]	GETTABLE 	R9 R0 K3 ; R9 := R0["countedItems"]
	12	[3564]	LEN      	R9 R9 ; R9 := # R9
	13	[3564]	LT       	0 K1 R9 ; if 0.000000 >= R9 then PC := 19
	14	[3564]	JMP      	19 ; PC := 19
	15	[3565]	GETTABLE 	R9 R0 K3 ; R9 := R0["countedItems"]
	16	[3565]	GETTABLE 	R9 R9 K2 ; R9 := R9[1.000000]
	17	[3565]	GETTABLE 	R4 R9 K4 ; R4 := R9["mItemType"]
	18	[3565]	JMP      	26 ; PC := 26
	19	[3566]	GETTABLE 	R9 R0 K5 ; R9 := R0["countedStoreItems"]
	20	[3566]	LEN      	R9 R9 ; R9 := # R9
	21	[3566]	LT       	0 K1 R9 ; if 0.000000 >= R9 then PC := 26
	22	[3566]	JMP      	26 ; PC := 26
	23	[3567]	GETTABLE 	R9 R0 K5 ; R9 := R0["countedStoreItems"]
	24	[3567]	GETTABLE 	R9 R9 K2 ; R9 := R9[1.000000]
	25	[3567]	GETTABLE 	R4 R9 K6 ; R4 := R9["mStoreItem"]
	26	[3570]	EQ       	1 R3 K7 ; if R3 == nil then PC := 55
	27	[3570]	JMP      	55 ; PC := 55
	28	[3571]	SELF     	R9 R3 K8 ; R10 := R3; R9 := R3[0xf278f8a1]
	29	[3571]	CALL     	R9 2 2 ; R9 := R9(R10)
	30	[3571]	MOVE     	R5 R9 ; R5 := R9
	31	[3572]	SELF     	R9 R3 K9 ; R10 := R3; R9 := R3[0x056dcf06]
	32	[3572]	CALL     	R9 2 2 ; R9 := R9(R10)
	33	[3572]	MOVE     	R2 R9 ; R2 := R9
	34	[3573]	SELF     	R9 R3 K10 ; R10 := R3; R9 := R3[0x599cf9c1]
	35	[3573]	CALL     	R9 2 2 ; R9 := R9(R10)
	36	[3573]	NOT      	R7 R9 ; R7 := not R9
	37	[3574]	GETGLOBAL	R9 K11 ; R9 := 0x7b998233
	38	[3574]	MOVE     	R10 R5 ; R10 := R5
	39	[3574]	CALL     	R9 2 2 ; R9 := R9(R10)
	40	[3574]	TEST     	R9 1 ; if R9 then PC := 49
	41	[3574]	JMP      	49 ; PC := 49
	42	[3574]	SELF     	R9 R3 K8 ; R10 := R3; R9 := R3[0xf278f8a1]
	43	[3574]	CALL     	R9 2 2 ; R9 := R9(R10)
	44	[3574]	SELF     	R9 R9 K12 ; R10 := R9; R9 := R9[0xf2deaf69]
	45	[3574]	GETGLOBAL	R11 K13 ; R11 := gRecipeItemType
	46	[3574]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	47	[3574]	MOVE     	R6 R9 ; R6 := R9
	48	[3574]	JMP      	51 ; PC := 51
	49	[3574]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 50
	50	[3574]	OP_LOADBOOL	R6 1 0 ; R6 := true
	51	[3575]	SELF     	R9 R3 K14 ; R10 := R3; R9 := R3[0xeb7b349c]
	52	[3575]	CALL     	R9 2 2 ; R9 := R9(R10)
	53	[3575]	MOVE     	R8 R9 ; R8 := R9
	54	[3575]	JMP      	86 ; PC := 86
	55	[3576]	EQ       	1 R4 K7 ; if R4 == nil then PC := 81
	56	[3576]	JMP      	81 ; PC := 81
	57	[3577]	MOVE     	R5 R4 ; R5 := R4
	58	[3578]	GETGLOBAL	R9 K15 ; R9 := 0xb009bbc6
	59	[3578]	MOVE     	R10 R4 ; R10 := R4
	60	[3578]	CALL     	R9 2 2 ; R9 := R9(R10)
	61	[3578]	MOVE     	R4 R9 ; R4 := R9
	62	[3580]	SELF     	R9 R4 K12 ; R10 := R4; R9 := R4[0xf2deaf69]
	63	[3580]	GETGLOBAL	R11 K13 ; R11 := gRecipeItemType
	64	[3580]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	65	[3580]	MOVE     	R6 R9 ; R6 := R9
	66	[3581]	TEST     	R6 0 ; if not R6 then PC := 74
	67	[3581]	JMP      	74 ; PC := 74
	68	[3582]	GETUPVAL 	R9 U0 ; R9 := U0
	69	[3582]	MOVE     	R10 R4 ; R10 := R4
	70	[3582]	CALL     	R9 2 3 ; R9,R10 := R9(R10)
	71	[3582]	MOVE     	R7 R10 ; R7 := R10
	72	[3582]	MOVE     	R2 R9 ; R2 := R9
	73	[3582]	JMP      	86 ; PC := 86
	74	[3584]	SELF     	R9 R4 K9 ; R10 := R4; R9 := R4[0x056dcf06]
	75	[3584]	CALL     	R9 2 2 ; R9 := R9(R10)
	76	[3584]	MOVE     	R2 R9 ; R2 := R9
	77	[3585]	SELF     	R9 R4 K10 ; R10 := R4; R9 := R4[0x599cf9c1]
	78	[3585]	CALL     	R9 2 2 ; R9 := R9(R10)
	79	[3585]	NOT      	R7 R9 ; R7 := not R9
	80	[3586]	JMP      	86 ; PC := 86
	81	[3587]	GETTABLE 	R9 R0 K16 ; R9 := R0["credits"]
	82	[3587]	LT       	0 K1 R9 ; if 0.000000 >= R9 then PC := 86
	83	[3587]	JMP      	86 ; PC := 86
	84	[3588]	GETGLOBAL	R9 K17 ; R9 := 0x0032441c
	85	[3588]	GETTABLE 	R2 R9 K18 ; R2 := R9["UITexture_CreditsIcon"]
	86	[3591]	MOVE     	R9 R2 ; R9 := R2
	87	[3591]	MOVE     	R10 R6 ; R10 := R6
	88	[3591]	MOVE     	R11 R5 ; R11 := R5
	89	[3591]	MOVE     	R12 R7 ; R12 := R7
	90	[3591]	MOVE     	R13 R8 ; R13 := R8
	91	[3591]	RETURN   	R9 6 ; return R9, R10, R11, R12, R13 
	92	[3592]	RETURN   	R0 1 ; return 

function #195 <?:3594,3629> (148 instructions, 592 bytes at 00000252748A57A0)
1 param, 28 slots, 1 upvalue, 0 locals, 37 constants, 0 functions
	1	[3595]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[3597]	GETTABLE 	R2 R0 K0 ; R2 := R0["credits"]
	3	[3597]	LT       	0 K1 R2 ; if 0.000000 >= R2 then PC := 25
	4	[3597]	JMP      	25 ; PC := 25
	5	[3598]	GETGLOBAL	R2 K2 ; R2 := 0x33bdd652
	6	[3598]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x23d5322f]
	7	[3598]	MOVE     	R3 R1 ; R3 := R1
	8	[3598]	NEWTABLE 	R4 0 3 ; R4 := {}
	9	[3598]	GETGLOBAL	R5 K5 ; R5 := 0x0032441c
	10	[3598]	GETTABLE 	R5 R5 K6 ; R5 := R5["UITexture_CreditsIcon"]
	11	[3598]	SETTABLE 	R4 K4 R5 ; R4["Icon"] := R5
	12	[3598]	SETTABLE 	R4 K7 K8 ; R4["Themed"] := true
	13	[3598]	GETUPVAL 	R5 U0 ; R5 := U0
	14	[3598]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x1142c7a8]
	15	[3598]	GETTABLE 	R6 R0 K0 ; R6 := R0["credits"]
	16	[3598]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[3598]	LOADK    	R6 K11 ; R6 := " "
	18	[3598]	GETGLOBAL	R7 K12 ; R7 := 0x603636ad
	19	[3598]	LOADK    	R8 K13 ; R8 := "/Lotus/Language/Menu/Store_BuyWithCredits"
	20	[3598]	NEWTABLE 	R9 0 0 ; R9 := {}
	21	[3598]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	22	[3598]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	23	[3598]	SETTABLE 	R4 K9 R5 ; R4["NameOverride"] := R5
	24	[3598]	CALL     	R2 3 1 ; R2(R3,R4)
	25	[3601]	LOADK    	R2 := 1.000000
	26	[3601]	GETTABLE 	R3 R0 K14 ; R3 := R0["items"]
	27	[3601]	LEN      	R3 R3 ; R3 := # R3
	28	[3601]	LOADK    	R4 := 1.000000
	29	[3601]	FORPREP  	R2 66 ; R2 -= R4; PC := 66
	30	[3602]	NEWTABLE 	R6 0 1 ; R6 := {}
	31	[3602]	GETTABLE 	R7 R0 K14 ; R7 := R0["items"]
	32	[3602]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	33	[3602]	SETTABLE 	R6 K15 R7 ; R6[0xa9882367] := R7
	34	[3603]	GETTABLE 	R7 R6 K15 ; R7 := R6["StoreItem"]
	35	[3603]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0xf278f8a1]
	36	[3603]	CALL     	R7 2 2 ; R7 := R7(R8)
	37	[3604]	GETGLOBAL	R8 K17 ; R8 := 0x7b998233
	38	[3604]	MOVE     	R9 R7 ; R9 := R7
	39	[3604]	CALL     	R8 2 2 ; R8 := R8(R9)
	40	[3604]	TEST     	R8 1 ; if R8 then PC := 61
	41	[3604]	JMP      	61 ; PC := 61
	42	[3604]	SELF     	R8 R7 K18 ; R9 := R7; R8 := R7[0xf2deaf69]
	43	[3604]	GETGLOBAL	R10 K19 ; R10 := gKeyChainItemType
	44	[3604]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	45	[3604]	TEST     	R8 0 ; if not R8 then PC := 61
	46	[3604]	JMP      	61 ; PC := 61
	47	[3605]	GETGLOBAL	R8 K12 ; R8 := 0x603636ad
	48	[3605]	GETGLOBAL	R9 K20 ; R9 := 0x64fb1586
	49	[3605]	GETTABLE 	R10 R6 K15 ; R10 := R6["StoreItem"]
	50	[3605]	SELF     	R10 R10 K21 ; R11 := R10; R10 := R10[0xd3a9d01f]
	51	[3605]	CALL     	R10 2 0 ; R10,... := R10(R11)
	52	[3605]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	53	[3605]	NEWTABLE 	R10 0 0 ; R10 := {}
	54	[3605]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	55	[3606]	GETGLOBAL	R9 K12 ; R9 := 0x603636ad
	56	[3606]	LOADK    	R10 K22 ; R10 := "/Lotus/Language/Menu/MissionReward_Quest"
	57	[3606]	NEWTABLE 	R11 0 1 ; R11 := {}
	58	[3606]	SETTABLE 	R11 K23 R8 ; R11["QUEST"] := R8
	59	[3606]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	60	[3606]	SETTABLE 	R6 K9 R9 ; R6["NameOverride"] := R9
	61	[3608]	GETGLOBAL	R9 K2 ; R9 := 0x33bdd652
	62	[3608]	GETTABLE 	R9 R9 K3 ; R9 := R9[0x23d5322f]
	63	[3608]	MOVE     	R10 R1 ; R10 := R1
	64	[3608]	MOVE     	R11 R6 ; R11 := R6
	65	[3608]	CALL     	R9 3 1 ; R9(R10,R11)
	66	[3601]	FORLOOP  	R2 30 ; R2 += R4; if R2 <= R3 then begin PC := 30; R5 := R2 end
	67	[3611]	LOADK    	R9 := 1.000000
	68	[3611]	GETTABLE 	R10 R0 K24 ; R10 := R0["countedStoreItems"]
	69	[3611]	LEN      	R10 R10 ; R10 := # R10
	70	[3611]	LOADK    	R11 := 1.000000
	71	[3611]	FORPREP  	R9 108 ; R9 -= R11; PC := 108
	72	[3612]	GETTABLE 	R13 R0 K24 ; R13 := R0["countedStoreItems"]
	73	[3612]	GETTABLE 	R13 R13 R12 ; R13 := R13[R12]
	74	[3613]	GETTABLE 	R14 R13 K25 ; R14 := R13["mStoreItem"]
	75	[3614]	GETGLOBAL	R15 K17 ; R15 := 0x7b998233
	76	[3614]	MOVE     	R16 R14 ; R16 := R14
	77	[3614]	CALL     	R15 2 2 ; R15 := R15(R16)
	78	[3614]	TEST     	R15 1 ; if R15 then PC := 108
	79	[3614]	JMP      	108 ; PC := 108
	80	[3615]	NEWTABLE 	R15 0 2 ; R15 := {}
	81	[3615]	SETTABLE 	R15 K15 R14 ; R15[0xa9882367] := R14
	82	[3615]	SETTABLE 	R15 K26 K8 ; R15["SkipTitleCase"] := true
	83	[3616]	GETGLOBAL	R16 K12 ; R16 := 0x603636ad
	84	[3616]	LOADK    	R17 K27 ; R17 := "/Lotus/Language/Items/LargeBatchItem"
	85	[3616]	NEWTABLE 	R18 0 2 ; R18 := {}
	86	[3616]	GETGLOBAL	R19 K29 ; R19 := 0x5f0788c4
	87	[3616]	GETGLOBAL	R20 K12 ; R20 := 0x603636ad
	88	[3616]	GETGLOBAL	R21 K20 ; R21 := 0x64fb1586
	89	[3616]	SELF     	R22 R14 K21 ; R23 := R14; R22 := R14[0xd3a9d01f]
	90	[3616]	CALL     	R22 2 0 ; R22,... := R22(R23)
	91	[3616]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	92	[3616]	NEWTABLE 	R22 0 0 ; R22 := {}
	93	[3616]	CALL     	R20 3 0 ; R20,... := R20(R21,R22)
	94	[3616]	CALL     	R19 0 2 ; R19 := R19(R20,...)
	95	[3616]	SETTABLE 	R18 K28 R19 ; R18["ITEM"] := R19
	96	[3616]	GETUPVAL 	R19 U0 ; R19 := U0
	97	[3616]	GETTABLE 	R19 R19 K10 ; R19 := R19[0x1142c7a8]
	98	[3616]	GETTABLE 	R20 R13 K31 ; R20 := R13["mItemCount"]
	99	[3616]	CALL     	R19 2 2 ; R19 := R19(R20)
	100	[3616]	SETTABLE 	R18 K30 R19 ; R18["NUM"] := R19
	101	[3616]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	102	[3616]	SETTABLE 	R15 K9 R16 ; R15["NameOverride"] := R16
	103	[3617]	GETGLOBAL	R16 K2 ; R16 := 0x33bdd652
	104	[3617]	GETTABLE 	R16 R16 K3 ; R16 := R16[0x23d5322f]
	105	[3617]	MOVE     	R17 R1 ; R17 := R1
	106	[3617]	MOVE     	R18 R15 ; R18 := R15
	107	[3617]	CALL     	R16 3 1 ; R16(R17,R18)
	108	[3611]	FORLOOP  	R9 72 ; R9 += R11; if R9 <= R10 then begin PC := 72; R12 := R9 end
	109	[3621]	LOADK    	R16 := 1.000000
	110	[3621]	GETTABLE 	R17 R0 K32 ; R17 := R0["countedItems"]
	111	[3621]	LEN      	R17 R17 ; R17 := # R17
	112	[3621]	LOADK    	R18 := 1.000000
	113	[3621]	FORPREP  	R16 146 ; R16 -= R18; PC := 146
	114	[3622]	GETGLOBAL	R20 K33 ; R20 := 0xb009bbc6
	115	[3622]	GETTABLE 	R21 R0 K32 ; R21 := R0["countedItems"]
	116	[3622]	GETTABLE 	R21 R21 R19 ; R21 := R21[R19]
	117	[3622]	GETTABLE 	R21 R21 K34 ; R21 := R21["mItemType"]
	118	[3622]	CALL     	R20 2 2 ; R20 := R20(R21)
	119	[3623]	NEWTABLE 	R21 0 2 ; R21 := {}
	120	[3623]	SETTABLE 	R21 K35 R20 ; R21["ItemType"] := R20
	121	[3623]	GETTABLE 	R22 R0 K32 ; R22 := R0["countedItems"]
	122	[3623]	GETTABLE 	R22 R22 R19 ; R22 := R22[R19]
	123	[3623]	GETTABLE 	R22 R22 K31 ; R22 := R22["mItemCount"]
	124	[3623]	SETTABLE 	R21 K36 R22 ; R21["Count"] := R22
	125	[3624]	GETUPVAL 	R22 U0 ; R22 := U0
	126	[3624]	GETTABLE 	R22 R22 K10 ; R22 := R22[0x1142c7a8]
	127	[3624]	GETTABLE 	R23 R0 K32 ; R23 := R0["countedItems"]
	128	[3624]	GETTABLE 	R23 R23 R19 ; R23 := R23[R19]
	129	[3624]	GETTABLE 	R23 R23 K31 ; R23 := R23["mItemCount"]
	130	[3624]	CALL     	R22 2 2 ; R22 := R22(R23)
	131	[3624]	LOADK    	R23 K11 ; R23 := " "
	132	[3624]	GETGLOBAL	R24 K12 ; R24 := 0x603636ad
	133	[3624]	GETGLOBAL	R25 K20 ; R25 := 0x64fb1586
	134	[3624]	SELF     	R26 R20 K21 ; R27 := R20; R26 := R20[0xd3a9d01f]
	135	[3624]	CALL     	R26 2 0 ; R26,... := R26(R27)
	136	[3624]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	137	[3624]	NEWTABLE 	R26 0 0 ; R26 := {}
	138	[3624]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	139	[3624]	CONCAT   	R22 R22 R24 ; R22 := R22 .. R23 .. R24
	140	[3624]	SETTABLE 	R21 K9 R22 ; R21["NameOverride"] := R22
	141	[3625]	GETGLOBAL	R22 K2 ; R22 := 0x33bdd652
	142	[3625]	GETTABLE 	R22 R22 K3 ; R22 := R22[0x23d5322f]
	143	[3625]	MOVE     	R23 R1 ; R23 := R1
	144	[3625]	MOVE     	R24 R21 ; R24 := R21
	145	[3625]	CALL     	R22 3 1 ; R22(R23,R24)
	146	[3621]	FORLOOP  	R16 114 ; R16 += R18; if R16 <= R17 then begin PC := 114; R19 := R16 end
	147	[3628]	RETURN   	R1 2 ; return R1 
	148	[3629]	RETURN   	R0 1 ; return 

function #196 <?:3631,3634> (5 instructions, 20 bytes at 00000252748A6120)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[3632]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3632]	ADD      	R2 R0 K0 ; R2 := R0 + 1.000000
	3	[3632]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	4	[3633]	RETURN   	R1 2 ; return R1 
	5	[3634]	RETURN   	R0 1 ; return 

function #197 <?:3636,3639> (5 instructions, 20 bytes at 00000252748A6230)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[3637]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3637]	ADD      	R2 R0 K0 ; R2 := R0 + 1.000000
	3	[3637]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	4	[3638]	RETURN   	R1 2 ; return R1 
	5	[3639]	RETURN   	R0 1 ; return 

function #198 <?:3641,3660> (22 instructions, 88 bytes at 00000252748A6340)
0 params, 5 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[3642]	GETGLOBAL	R0 K0 ; R0 := 0x6c97a788
	2	[3642]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x6e0e9f85]
	3	[3642]	CALL     	R0 1 2 ; R0 := R0()
	4	[3643]	SETTABLE 	R0 K2 K3 ; R0["missionType"] := 12.000000
	5	[3644]	SETTABLE 	R0 K4 K5 ; R0["faction"] := 1.000000
	6	[3650]	LOADK    	R1 K6 ; R1 := "/Lotus/Levels/Proc/Corpus/CorpusGasCityHarvester"
	7	[3651]	LOADK    	R2 K7 ; R2 := "/Lotus/Types/Game/EnemySpecs/CorpusSquadA"
	8	[3653]	GETGLOBAL	R3 K9 ; R3 := 0x7ed0a956
	9	[3653]	MOVE     	R4 R1 ; R4 := R1
	10	[3653]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[3653]	SETTABLE 	R0 K8 R3 ; R0["levelOverride"] := R3
	12	[3654]	GETGLOBAL	R3 K11 ; R3 := 0xb009bbc6
	13	[3654]	MOVE     	R4 R2 ; R4 := R2
	14	[3654]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[3654]	SETTABLE 	R0 K10 R3 ; R0["enemySpec"] := R3
	16	[3655]	SETTABLE 	R0 K12 K13 ; R0["soloMode"] := true
	17	[3657]	GETGLOBAL	R3 K15 ; R3 := 0x0469f296
	18	[3657]	LOADK    	R4 K16 ; R4 := "/Lotus/Language/Locations/Jupiter"
	19	[3657]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[3657]	SETTABLE 	R0 K14 R3 ; R0["location"] := R3
	21	[3659]	RETURN   	R0 2 ; return R0 
	22	[3660]	RETURN   	R0 1 ; return 

function #199 <?:3662,3680> (38 instructions, 152 bytes at 00000252748A67D0)
1 param, 8 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[3663]	GETGLOBAL	R1 K0 ; R1 := 0x42dcc9f5
	2	[3663]	MOVE     	R2 R0 ; R2 := R0
	3	[3663]	LOADK    	R3 := 0.000000
	4	[3663]	LOADK    	R4 := 100.000000
	5	[3663]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[3664]	GETGLOBAL	R2 K1 ; R2 := 0x5bced4c4
	7	[3664]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x55f27c30]
	8	[3664]	MOVE     	R3 R1 ; R3 := R1
	9	[3664]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3665]	GETGLOBAL	R3 K1 ; R3 := 0x5bced4c4
	11	[3665]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xe4a5b3ca]
	12	[3665]	GETGLOBAL	R4 K1 ; R4 := 0x5bced4c4
	13	[3665]	GETTABLE 	R4 R4 K2 ; R4 := R4[0x55f27c30]
	14	[3665]	MUL      	R5 R1 K4 ; R5 := R1 * 10.000000
	15	[3665]	CALL     	R4 2 0 ; R4,... := R4(R5)
	16	[3665]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	17	[3665]	MOD      	R3 R3 K4 ; R3 := R3 % 10.000000
	18	[3667]	EQ       	0 R2 K5 ; if R2 ~= 0.000000 then PC := 25
	19	[3667]	JMP      	25 ; PC := 25
	20	[3667]	EQ       	0 R3 K5 ; if R3 ~= 0.000000 then PC := 25
	21	[3667]	JMP      	25 ; PC := 25
	22	[3667]	EQ       	1 R1 K5 ; if R1 == 0.000000 then PC := 25
	23	[3667]	JMP      	25 ; PC := 25
	24	[3669]	LOADK    	R3 := 1.000000
	25	[3672]	GETGLOBAL	R4 K6 ; R4 := 0x64fb1586
	26	[3672]	MOVE     	R5 R2 ; R5 := R2
	27	[3672]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[3673]	EQ       	1 R3 K5 ; if R3 == 0.000000 then PC := 34
	29	[3673]	JMP      	34 ; PC := 34
	30	[3674]	MOVE     	R5 R4 ; R5 := R4
	31	[3674]	LOADK    	R6 K7 ; R6 := "."
	32	[3674]	MOVE     	R7 R3 ; R7 := R3
	33	[3674]	CONCAT   	R4 R5 R7 ; R4 := R5 .. R6 .. R7
	34	[3677]	MOVE     	R5 R4 ; R5 := R4
	35	[3677]	LOADK    	R6 K8 ; R6 := "%"
	36	[3677]	CONCAT   	R4 R5 R6 ; R4 := R5 .. R6
	37	[3679]	RETURN   	R4 2 ; return R4 
	38	[3680]	RETURN   	R0 1 ; return 

function #200 <?:3682,3693> (31 instructions, 124 bytes at 00000252748A6A60)
1 param, 7 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[3683]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3683]	GETTABLE 	R1 R1 K0 ; R1 := R1[0xa9882367]
	3	[3683]	LOADK    	R2 K1 ; R2 := "AvatarLight"
	4	[3683]	GETUPVAL 	R3 U0 ; R3 := U0
	5	[3683]	GETTABLE 	R3 R3 K2 ; R3 := R3[0x06d055f9]
	6	[3683]	GETUPVAL 	R4 U1 ; R4 := U1
	7	[3683]	CALL     	R4 1 2 ; R4 := R4()
	8	[3683]	GETGLOBAL	R5 K3 ; R5 := 0x1211d00f
	9	[3683]	LOADNIL  	R6 R6 ; R6 := nil
	10	[3683]	CALL     	R3 4 0 ; R3,... := R3(R4,R5,R6)
	11	[3683]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	12	[3684]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	13	[3684]	MOVE     	R3 R1 ; R3 := R1
	14	[3684]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[3684]	TEST     	R2 1 ; if R2 then PC := 31
	16	[3684]	JMP      	31 ; PC := 31
	17	[3685]	TEST     	R0 0 ; if not R0 then PC := 29
	18	[3685]	JMP      	29 ; PC := 29
	19	[3686]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xd199e920]
	20	[3686]	CALL     	R2 2 1 ; R2(R3)
	21	[3687]	GETGLOBAL	R2 K6 ; R2 := 0x9ba7909f
	22	[3687]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xbf9494fc]
	23	[3687]	LOADK    	R4 K8 ; R4 := "Graphics.DynamicLighting"
	24	[3687]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	25	[3688]	SELF     	R3 R1 K9 ; R4 := R1; R3 := R1[0xfd9163db]
	26	[3688]	NOT      	R5 R2 ; R5 := not R2
	27	[3688]	CALL     	R3 3 1 ; R3(R4,R5)
	28	[3688]	JMP      	31 ; PC := 31
	29	[3690]	SELF     	R3 R1 K10 ; R4 := R1; R3 := R1[0x6b5e0c7a]
	30	[3690]	CALL     	R3 2 1 ; R3(R4)
	31	[3693]	RETURN   	R0 1 ; return 

function #201 <?:3695,3697> (4 instructions, 16 bytes at 00000252748A6D20)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3696]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3696]	MOVE     	R2 R0 ; R2 := R0
	3	[3696]	CALL     	R1 2 1 ; R1(R2)
	4	[3697]	RETURN   	R0 1 ; return 

function #202 <?:3700,3711> (24 instructions, 96 bytes at 00000252748A6DF0)
0 params, 5 slots, 2 upvalues, 0 locals, 13 constants, 0 functions
	1	[3701]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3701]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[3701]	GETTABLE 	R1 R1 K2 ; R1 := R1["BackgroundMovie"]
	4	[3701]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[3701]	TEST     	R0 1 ; if R0 then PC := 24
	6	[3701]	JMP      	24 ; PC := 24
	7	[3702]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[3702]	CALL     	R0 1 2 ; R0 := R0()
	9	[3703]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xb2532845]
	10	[3703]	GETGLOBAL	R3 K4 ; R3 := 0x0469f296
	11	[3703]	LOADK    	R4 K5 ; R4 := "Kneel"
	12	[3703]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[3703]	CALL     	R1 0 1 ; R1(R2,...)
	14	[3705]	GETUPVAL 	R1 U1 ; R1 := U1
	15	[3705]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[3705]	CALL     	R1 2 1 ; R1(R2)
	17	[3707]	GETGLOBAL	R1 K6 ; R1 := 0x89326c93
	18	[3707]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x7c1a0374]
	19	[3707]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[3708]	GETTABLE 	R2 R1 K8 ; R2 := R1["postProcess"]
	21	[3708]	SETTABLE 	R2 K9 K10 ; R2["horizonDOF"] := 0.000000
	22	[3709]	GETGLOBAL	R2 K1 ; R2 := _T
	23	[3709]	SETTABLE 	R2 K11 K12 ; R2["SelectedLoadOutPart"] := nil
	24	[3711]	RETURN   	R0 1 ; return 

function #203 <?:3713,3730> (38 instructions, 152 bytes at 00000252748A70F0)
1 param, 7 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[3715]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[3715]	LOADK    	R2 K1 ; R2 := "OnSaveLoadOutCompleteCommon"
	3	[3715]	CALL     	R1 2 1 ; R1(R2)
	4	[3717]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	5	[3717]	GETGLOBAL	R2 K3 ; R2 := 0xbe190284
	6	[3717]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[3717]	TEST     	R1 1 ; if R1 then PC := 12
	8	[3717]	JMP      	12 ; PC := 12
	9	[3718]	GETGLOBAL	R1 K3 ; R1 := 0xbe190284
	10	[3718]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xb411ab6c]
	11	[3718]	CALL     	R1 2 1 ; R1(R2)
	12	[3722]	GETGLOBAL	R1 K5 ; R1 := 0xe7f2b02f
	13	[3722]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x565be9ee]
	14	[3722]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[3723]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	16	[3723]	MOVE     	R3 R1 ; R3 := R1
	17	[3723]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[3723]	TEST     	R2 1 ; if R2 then PC := 35
	19	[3723]	JMP      	35 ; PC := 35
	20	[3723]	GETGLOBAL	R2 K5 ; R2 := 0xe7f2b02f
	21	[3723]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xedf454bc]
	22	[3723]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[3723]	TEST     	R2 0 ; if not R2 then PC := 35
	24	[3723]	JMP      	35 ; PC := 35
	25	[3724]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0xfdd3576f]
	26	[3724]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[3725]	GETUPVAL 	R3 U0 ; R3 := U0
	28	[3725]	CALL     	R3 1 2 ; R3 := R3()
	29	[3725]	SETTABLE 	R2 K9 R3 ; R2["eloRating"] := R3
	30	[3726]	GETGLOBAL	R3 K5 ; R3 := 0xe7f2b02f
	31	[3726]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0xee2f24fc]
	32	[3726]	MOVE     	R5 R2 ; R5 := R2
	33	[3726]	MOVE     	R6 R0 ; R6 := R0
	34	[3726]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	35	[3729]	GETGLOBAL	R3 K5 ; R3 := 0xe7f2b02f
	36	[3729]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0xcf1bf52a]
	37	[3729]	CALL     	R3 2 1 ; R3(R4)
	38	[3730]	RETURN   	R0 1 ; return 

function #204 <?:3732,3741> (32 instructions, 128 bytes at 00000252748A73F0)
2 params, 12 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[3733]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 5
	2	[3733]	JMP      	5 ; PC := 5
	3	[3734]	LOADK    	R1 K1 ; R1 := ""
	4	[3734]	JMP      	8 ; PC := 8
	5	[3736]	LOADK    	R2 K2 ; R2 := " "
	6	[3736]	MOVE     	R3 R1 ; R3 := R1
	7	[3736]	CONCAT   	R1 R2 R3 ; R1 := R2 .. R3
	8	[3738]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0xca9ea368]
	9	[3738]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3739]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	11	[3739]	SELF     	R4 R0 K5 ; R5 := R0; R4 := R0[0xd3a9d01f]
	12	[3739]	CALL     	R4 2 2 ; R4 := R4(R5)
	13	[3739]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x6d604ba7]
	14	[3739]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[3739]	LOADNIL  	R5 R5 ; R5 := nil
	16	[3739]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	17	[3740]	LOADK    	R4 K7 ; R4 := "<p><font face=\"Noto Sans\"><b>"
	18	[3740]	GETGLOBAL	R5 K4 ; R5 := 0x603636ad
	19	[3740]	LOADK    	R6 K8 ; R6 := "/Lotus/Language/Menu/LevelAbbreviation"
	20	[3740]	LOADNIL  	R7 R7 ; R7 := nil
	21	[3740]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	22	[3740]	LOADK    	R6 K2 ; R6 := " "
	23	[3740]	GETGLOBAL	R7 K9 ; R7 := 0x64fb1586
	24	[3740]	MOVE     	R8 R2 ; R8 := R2
	25	[3740]	CALL     	R7 2 2 ; R7 := R7(R8)
	26	[3740]	LOADK    	R8 K10 ; R8 := " </b>"
	27	[3740]	MOVE     	R9 R3 ; R9 := R3
	28	[3740]	MOVE     	R10 R1 ; R10 := R1
	29	[3740]	LOADK    	R11 K11 ; R11 := "</font></p>"
	30	[3740]	CONCAT   	R4 R4 R11 ; R4 := R4 .. R5 .. R6 .. R7 .. R8 .. R9 .. R10 .. R11
	31	[3740]	RETURN   	R4 2 ; return R4 
	32	[3741]	RETURN   	R0 1 ; return 

function #205 <?:3743,3762> (42 instructions, 168 bytes at 00000252748A7780)
1 param, 9 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[3744]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[3744]	GETTABLE 	R1 R1 K1 ; R1 := R1["gCorpusHarvesterFinisherVictim"]
	3	[3744]	EQ       	0 R1 R0 ; if R1 ~= R0 then PC := 7
	4	[3744]	JMP      	7 ; PC := 7
	5	[3745]	OP_LOADBOOL	R1 1 0 ; R1 := true
	6	[3745]	RETURN   	R1 2 ; return R1 
	7	[3748]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	8	[3748]	MOVE     	R2 R0 ; R2 := R0
	9	[3748]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[3748]	TEST     	R1 1 ; if R1 then PC := 40
	11	[3748]	JMP      	40 ; PC := 40
	12	[3749]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	13	[3749]	GETGLOBAL	R2 K3 ; R2 := 0xbe190284
	14	[3749]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[3749]	TEST     	R1 1 ; if R1 then PC := 40
	16	[3749]	JMP      	40 ; PC := 40
	17	[3750]	GETGLOBAL	R1 K3 ; R1 := 0xbe190284
	18	[3750]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xa51542f4]
	19	[3750]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[3751]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	21	[3751]	MOVE     	R3 R1 ; R3 := R1
	22	[3751]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[3751]	TEST     	R2 1 ; if R2 then PC := 40
	24	[3751]	JMP      	40 ; PC := 40
	25	[3752]	LOADK    	R2 := 1.000000
	26	[3752]	LEN      	R3 R1 ; R3 := # R1
	27	[3752]	LOADK    	R4 := 1.000000
	28	[3752]	FORPREP  	R2 39 ; R2 -= R4; PC := 39
	29	[3753]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	30	[3753]	GETTABLE 	R6 R6 K5 ; R6 := R6["playerName"]
	31	[3753]	SELF     	R7 R0 K6 ; R8 := R0; R7 := R0[0x5e651723]
	32	[3753]	CALL     	R7 2 2 ; R7 := R7(R8)
	33	[3753]	SELF     	R7 R7 K7 ; R8 := R7; R7 := R7[0x5ca33548]
	34	[3753]	CALL     	R7 2 2 ; R7 := R7(R8)
	35	[3753]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 39
	36	[3753]	JMP      	39 ; PC := 39
	37	[3754]	OP_LOADBOOL	R6 1 0 ; R6 := true
	38	[3754]	RETURN   	R6 2 ; return R6 
	39	[3752]	FORLOOP  	R2 29 ; R2 += R4; if R2 <= R3 then begin PC := 29; R5 := R2 end
	40	[3761]	OP_LOADBOOL	R6 0 0 ; R6 := false
	41	[3761]	RETURN   	R6 2 ; return R6 
	42	[3762]	RETURN   	R0 1 ; return 

function #206 <?:3764,3783> (51 instructions, 204 bytes at 00000252748A7AB0)
0 params, 5 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[3765]	GETGLOBAL	R0 K0 ; R0 := UI_MODE_IN_GAME
	2	[3767]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	3	[3767]	GETGLOBAL	R2 K2 ; R2 := 0x83f4e77c
	4	[3767]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[3767]	TEST     	R1 0 ; if not R1 then PC := 8
	6	[3767]	JMP      	8 ; PC := 8
	7	[3768]	RETURN   	R0 2 ; return R0 
	8	[3771]	GETGLOBAL	R1 K2 ; R1 := 0x83f4e77c
	9	[3771]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe09828e1]
	10	[3771]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[3773]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	12	[3773]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	13	[3773]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[3773]	TEST     	R2 1 ; if R2 then PC := 50
	15	[3773]	JMP      	50 ; PC := 50
	16	[3774]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	17	[3774]	MOVE     	R3 R1 ; R3 := R1
	18	[3774]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[3774]	TEST     	R2 1 ; if R2 then PC := 29
	20	[3774]	JMP      	29 ; PC := 29
	21	[3774]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	22	[3774]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	23	[3774]	MOVE     	R4 R1 ; R4 := R1
	24	[3774]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	25	[3774]	TEST     	R2 0 ; if not R2 then PC := 29
	26	[3774]	JMP      	29 ; PC := 29
	27	[3775]	GETGLOBAL	R0 K6 ; R0 := UI_MODE_IN_SPACE_SHIP
	28	[3775]	JMP      	50 ; PC := 50
	29	[3776]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	30	[3776]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	31	[3776]	GETGLOBAL	R4 K7 ; R4 := gLotusDojoGameRulesType
	32	[3776]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	33	[3776]	TEST     	R2 1 ; if R2 then PC := 41
	34	[3776]	JMP      	41 ; PC := 41
	35	[3776]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	36	[3776]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	37	[3776]	GETGLOBAL	R4 K8 ; R4 := gLotusDuelGameRulesType
	38	[3776]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	39	[3776]	TEST     	R2 0 ; if not R2 then PC := 43
	40	[3776]	JMP      	43 ; PC := 43
	41	[3777]	GETGLOBAL	R0 K9 ; R0 := UI_MODE_IN_DOJO
	42	[3777]	JMP      	50 ; PC := 50
	43	[3778]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	44	[3778]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	45	[3778]	GETGLOBAL	R4 K10 ; R4 := gLotusHubGameRulesType
	46	[3778]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	47	[3778]	TEST     	R2 0 ; if not R2 then PC := 50
	48	[3778]	JMP      	50 ; PC := 50
	49	[3779]	GETGLOBAL	R0 K11 ; R0 := UI_MODE_IN_SPACE_HUB
	50	[3782]	RETURN   	R0 2 ; return R0 
	51	[3783]	RETURN   	R0 1 ; return 

function #207 <?:3785,3837> (148 instructions, 592 bytes at 00000252748A7DD0)
7 params, 23 slots, 0 upvalues, 0 locals, 39 constants, 0 functions
	1	[3787]	NEWTABLE 	R7 0 5 ; R7 := {}
	2	[3788]	SETTABLE 	R7 K0 K1 ; R7["isMultiline"] := false
	3	[3789]	SETTABLE 	R7 K2 K1 ; R7["cancelDisabled"] := false
	4	[3790]	SETTABLE 	R7 K3 K1 ; R7["forChat"] := false
	5	[3791]	SETTABLE 	R7 K4 K5 ; R7["desc"] := nil
	6	[3792]	SETTABLE 	R7 K6 K1 ; R7["isEmail"] := false
	7	[3795]	EQ       	1 R6 K5 ; if R6 == nil then PC := 16
	8	[3795]	JMP      	16 ; PC := 16
	9	[3796]	GETGLOBAL	R8 K7 ; R8 := 0xcfc01047
	10	[3796]	MOVE     	R9 R6 ; R9 := R6
	11	[3796]	CALL     	R8 2 4 ; R8,R9,R10 := R8(R9)
	12	[3796]	JMP      	14 ; PC := 14
	13	[3797]	SETTABLE 	R7 R11 R12 ; R7[R11] := R12
	14	[3796]	TFORLOOP 	R8 2 ; R11,R12 := R8(R9,R10); if R11 ~= nil then begin PC = 13; R10 := R11 end
	15	[3797]	JMP      	13 ; PC := 13
	16	[3802]	GETGLOBAL	R13 K8 ; R13 := 0x34291f5c
	17	[3802]	GETTABLE 	R13 R13 K9 ; R13 := R13[0x1467d5f4]
	18	[3802]	CALL     	R13 1 2 ; R13 := R13()
	19	[3802]	TEST     	R13 1 ; if R13 then PC := 31
	20	[3802]	JMP      	31 ; PC := 31
	21	[3802]	GETGLOBAL	R13 K8 ; R13 := 0x34291f5c
	22	[3802]	GETTABLE 	R13 R13 K10 ; R13 := R13[0x399826a5]
	23	[3802]	CALL     	R13 1 2 ; R13 := R13()
	24	[3802]	TEST     	R13 1 ; if R13 then PC := 31
	25	[3802]	JMP      	31 ; PC := 31
	26	[3802]	GETGLOBAL	R13 K8 ; R13 := 0x34291f5c
	27	[3802]	GETTABLE 	R13 R13 K11 ; R13 := R13[0xe6b41adb]
	28	[3802]	CALL     	R13 1 2 ; R13 := R13()
	29	[3802]	TEST     	R13 0 ; if not R13 then PC := 68
	30	[3802]	JMP      	68 ; PC := 68
	31	[3802]	GETGLOBAL	R13 K8 ; R13 := 0x34291f5c
	32	[3802]	GETTABLE 	R13 R13 K12 ; R13 := R13[0x94617168]
	33	[3802]	CALL     	R13 1 2 ; R13 := R13()
	34	[3802]	TEST     	R13 0 ; if not R13 then PC := 68
	35	[3802]	JMP      	68 ; PC := 68
	36	[3803]	GETGLOBAL	R13 K13 ; R13 := 0x603636ad
	37	[3803]	MOVE     	R14 R1 ; R14 := R1
	38	[3803]	NEWTABLE 	R15 0 0 ; R15 := {}
	39	[3803]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	40	[3803]	MOVE     	R1 R13 ; R1 := R13
	41	[3804]	EQ       	1 R3 K14 ; if R3 == 0.000000 then PC := 56
	42	[3804]	JMP      	56 ; PC := 56
	43	[3805]	GETGLOBAL	R13 K15 ; R13 := 0x89326c93
	44	[3805]	SELF     	R13 R13 K16 ; R14 := R13; R13 := R13[0xa3eb3f6b]
	45	[3805]	MOVE     	R15 R2 ; R15 := R2
	46	[3805]	MOVE     	R16 R1 ; R16 := R1
	47	[3805]	MOVE     	R17 R1 ; R17 := R1
	48	[3805]	OP_LOADBOOL	R18 0 0 ; R18 := false
	49	[3805]	GETTABLE 	R19 R7 K6 ; R19 := R7["isEmail"]
	50	[3805]	GETTABLE 	R20 R7 K3 ; R20 := R7["forChat"]
	51	[3805]	MOVE     	R21 R5 ; R21 := R5
	52	[3805]	MOVE     	R22 R3 ; R22 := R3
	53	[3805]	TAILCALL 	R13 10 0 ; R13,... := R13(R14,R15,R16,R17,R18,R19,R20,R21,R22)
	54	[3805]	RETURN   	R13 0 ; return R13,... 
	55	[3805]	JMP      	148 ; PC := 148
	56	[3807]	GETGLOBAL	R13 K15 ; R13 := 0x89326c93
	57	[3807]	SELF     	R13 R13 K17 ; R14 := R13; R13 := R13[0xbf89a347]
	58	[3807]	MOVE     	R15 R2 ; R15 := R2
	59	[3807]	MOVE     	R16 R1 ; R16 := R1
	60	[3807]	MOVE     	R17 R1 ; R17 := R1
	61	[3807]	OP_LOADBOOL	R18 0 0 ; R18 := false
	62	[3807]	GETTABLE 	R19 R7 K6 ; R19 := R7["isEmail"]
	63	[3807]	GETTABLE 	R20 R7 K3 ; R20 := R7["forChat"]
	64	[3807]	MOVE     	R21 R5 ; R21 := R5
	65	[3807]	TAILCALL 	R13 9 0 ; R13,... := R13(R14,R15,R16,R17,R18,R19,R20,R21)
	66	[3807]	RETURN   	R13 0 ; return R13,... 
	67	[3808]	JMP      	148 ; PC := 148
	68	[3809]	GETGLOBAL	R13 K18 ; R13 := 0x7b998233
	69	[3809]	GETGLOBAL	R14 K19 ; R14 := 0x0032441c
	70	[3809]	GETTABLE 	R14 R14 K20 ; R14 := R14["UIMovie_InputDialogMovie"]
	71	[3809]	CALL     	R13 2 2 ; R13 := R13(R14)
	72	[3809]	TEST     	R13 1 ; if R13 then PC := 148
	73	[3809]	JMP      	148 ; PC := 148
	74	[3810]	LOADNIL  	R13 R13 ; R13 := nil
	75	[3811]	GETGLOBAL	R14 K18 ; R14 := 0x7b998233
	76	[3811]	MOVE     	R15 R0 ; R15 := R0
	77	[3811]	CALL     	R14 2 2 ; R14 := R14(R15)
	78	[3811]	TEST     	R14 1 ; if R14 then PC := 86
	79	[3811]	JMP      	86 ; PC := 86
	80	[3812]	SELF     	R14 R0 K21 ; R15 := R0; R14 := R0[0x1fd6abd0]
	81	[3812]	GETGLOBAL	R16 K19 ; R16 := 0x0032441c
	82	[3812]	GETTABLE 	R16 R16 K20 ; R16 := R16["UIMovie_InputDialogMovie"]
	83	[3812]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	84	[3812]	MOVE     	R13 R14 ; R13 := R14
	85	[3812]	JMP      	92 ; PC := 92
	86	[3814]	GETGLOBAL	R14 K22 ; R14 := 0x9ba7909f
	87	[3814]	SELF     	R14 R14 K23 ; R15 := R14; R14 := R14[0xcfba257f]
	88	[3814]	GETGLOBAL	R16 K19 ; R16 := 0x0032441c
	89	[3814]	GETTABLE 	R16 R16 K20 ; R16 := R16["UIMovie_InputDialogMovie"]
	90	[3814]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	91	[3814]	MOVE     	R13 R14 ; R13 := R14
	92	[3816]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	93	[3816]	LOADK    	R16 K25 ; R16 := "SetYesTag"
	94	[3816]	LOADK    	R17 K26 ; R17 := "/Menu/Confirm_Item_Ok"
	95	[3816]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	96	[3817]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	97	[3817]	LOADK    	R16 K27 ; R16 := "SetNoTag"
	98	[3817]	LOADK    	R17 K28 ; R17 := "/Menu/Confirm_Item_Cancel"
	99	[3817]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	100	[3819]	GETTABLE 	R14 R7 K2 ; R14 := R7["cancelDisabled"]
	101	[3819]	TEST     	R14 0 ; if not R14 then PC := 107
	102	[3819]	JMP      	107 ; PC := 107
	103	[3820]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	104	[3820]	LOADK    	R16 K29 ; R16 := "SetCancelEnable"
	105	[3820]	LOADK    	R17 K30 ; R17 := "false"
	106	[3820]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	107	[3823]	SELF     	R14 R13 K31 ; R15 := R13; R14 := R13[0xf56f3887]
	108	[3823]	LOADK    	R16 K32 ; R16 := "SetCaption"
	109	[3823]	NEWTABLE 	R17 1 0 ; R17 := {}
	110	[3823]	MOVE     	R18 R1 ; R18 := R1
	111	[3823]	SETLIST  	R17 1 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
	112	[3823]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	113	[3824]	GETTABLE 	R14 R7 K4 ; R14 := R7["desc"]
	114	[3824]	EQ       	1 R14 K5 ; if R14 == nil then PC := 122
	115	[3824]	JMP      	122 ; PC := 122
	116	[3825]	SELF     	R14 R13 K31 ; R15 := R13; R14 := R13[0xf56f3887]
	117	[3825]	LOADK    	R16 K33 ; R16 := "SetText"
	118	[3825]	NEWTABLE 	R17 1 0 ; R17 := {}
	119	[3825]	GETTABLE 	R18 R7 K4 ; R18 := R7["desc"]
	120	[3825]	SETLIST  	R17 1 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
	121	[3825]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	122	[3827]	GETTABLE 	R14 R7 K0 ; R14 := R7["isMultiline"]
	123	[3827]	TEST     	R14 0 ; if not R14 then PC := 129
	124	[3827]	JMP      	129 ; PC := 129
	125	[3828]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	126	[3828]	LOADK    	R16 K34 ; R16 := "SetMultiline"
	127	[3828]	LOADK    	R17 K35 ; R17 := ""
	128	[3828]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	129	[3830]	SELF     	R14 R13 K31 ; R15 := R13; R14 := R13[0xf56f3887]
	130	[3830]	LOADK    	R16 K36 ; R16 := "SetContent"
	131	[3830]	NEWTABLE 	R17 1 0 ; R17 := {}
	132	[3830]	MOVE     	R18 R2 ; R18 := R2
	133	[3830]	SETLIST  	R17 1 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
	134	[3830]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	135	[3831]	EQ       	1 R3 K14 ; if R3 == 0.000000 then PC := 141
	136	[3831]	JMP      	141 ; PC := 141
	137	[3832]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	138	[3832]	LOADK    	R16 K37 ; R16 := "SetMaxChars"
	139	[3832]	MOVE     	R17 R3 ; R17 := R3
	140	[3832]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	141	[3834]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	142	[3834]	LOADK    	R16 K38 ; R16 := "SetCallback"
	143	[3834]	MOVE     	R17 R4 ; R17 := R4
	144	[3834]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	145	[3835]	OP_LOADBOOL	R14 1 0 ; R14 := true
	146	[3835]	MOVE     	R15 R13 ; R15 := R13
	147	[3835]	RETURN   	R14 3 ; return R14, R15 
	148	[3837]	RETURN   	R0 1 ; return 

function #208 <?:3839,3841> (11 instructions, 44 bytes at 00000252748A89C0)
7 params, 15 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3840]	GETUPVAL 	R7 U0 ; R7 := U0
	2	[3840]	MOVE     	R8 R0 ; R8 := R0
	3	[3840]	MOVE     	R9 R1 ; R9 := R1
	4	[3840]	MOVE     	R10 R2 ; R10 := R2
	5	[3840]	MOVE     	R11 R3 ; R11 := R3
	6	[3840]	MOVE     	R12 R4 ; R12 := R4
	7	[3840]	MOVE     	R13 R5 ; R13 := R5
	8	[3840]	MOVE     	R14 R6 ; R14 := R6
	9	[3840]	TAILCALL 	R7 8 0 ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
	10	[3840]	RETURN   	R7 0 ; return R7,... 
	11	[3841]	RETURN   	R0 1 ; return 

function #209 <?:3843,3853> (22 instructions, 88 bytes at 00000252748A8AD0)
0 params, 10 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[3844]	LOADK    	R0 := 0.000000
	2	[3845]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	3	[3846]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[3846]	MOVE     	R3 R1 ; R3 := R1
	5	[3846]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[3846]	TEST     	R2 1 ; if R2 then PC := 21
	7	[3846]	JMP      	21 ; PC := 21
	8	[3847]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x29ec8b5e]
	9	[3847]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3848]	LOADK    	R3 := 1.000000
	11	[3848]	LEN      	R4 R2 ; R4 := # R2
	12	[3848]	LOADK    	R5 := 1.000000
	13	[3848]	FORPREP  	R3 20 ; R3 -= R5; PC := 20
	14	[3849]	GETGLOBAL	R7 K3 ; R7 := 0xa94df70b
	15	[3849]	SELF     	R7 R7 K4 ; R8 := R7; R7 := R7[0xc3f26174]
	16	[3849]	GETTABLE 	R9 R2 R6 ; R9 := R2[R6]
	17	[3849]	GETTABLE 	R9 R9 K5 ; R9 := R9["mTier"]
	18	[3849]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	19	[3849]	ADD      	R0 R0 R7 ; R0 := R0 + R7
	20	[3848]	FORLOOP  	R3 14 ; R3 += R5; if R3 <= R4 then begin PC := 14; R6 := R3 end
	21	[3852]	RETURN   	R0 2 ; return R0 
	22	[3853]	RETURN   	R0 1 ; return 

function #210 <?:3856,3861> (33 instructions, 132 bytes at 00000252748A8CB0)
1 param, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[3857]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[3857]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedAlerts"]
	3	[3857]	TEST     	R1 0 ; if not R1 then PC := 31
	4	[3857]	JMP      	31 ; PC := 31
	5	[3857]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[3857]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedAlerts"]
	7	[3857]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	8	[3857]	MOVE     	R3 R0 ; R3 := R0
	9	[3857]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3857]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	11	[3857]	EQ       	1 R1 K3 ; if R1 == nil then PC := 31
	12	[3857]	JMP      	31 ; PC := 31
	13	[3857]	GETGLOBAL	R1 K0 ; R1 := _T
	14	[3857]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedAlerts"]
	15	[3857]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	16	[3857]	MOVE     	R3 R0 ; R3 := R0
	17	[3857]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[3857]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	19	[3857]	GETTABLE 	R1 R1 K4 ; R1 := R1["mVisible"]
	20	[3857]	TEST     	R1 0 ; if not R1 then PC := 31
	21	[3857]	JMP      	31 ; PC := 31
	22	[3858]	GETGLOBAL	R1 K0 ; R1 := _T
	23	[3858]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedAlerts"]
	24	[3858]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	25	[3858]	MOVE     	R3 R0 ; R3 := R0
	26	[3858]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[3858]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	28	[3858]	GETTABLE 	R1 R1 K5 ; R1 := R1["mAlertInfo"]
	29	[3858]	GETTABLE 	R1 R1 K6 ; R1 := R1["mMissionInfo"]
	30	[3858]	RETURN   	R1 2 ; return R1 
	31	[3860]	LOADNIL  	R1 R1 ; R1 := nil
	32	[3860]	RETURN   	R1 2 ; return R1 
	33	[3861]	RETURN   	R0 1 ; return 

function #211 <?:3863,3865> (5 instructions, 20 bytes at 00000252748A8F80)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3864]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3864]	MOVE     	R2 R0 ; R2 := R0
	3	[3864]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3864]	RETURN   	R1 0 ; return R1,... 
	5	[3865]	RETURN   	R0 1 ; return 

function #212 <?:3867,3869> (8 instructions, 32 bytes at 00000252748A9070)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[3868]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[3868]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedInvasionInfo"]
	3	[3868]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	4	[3868]	MOVE     	R3 R0 ; R3 := R0
	5	[3868]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[3868]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	7	[3868]	RETURN   	R1 2 ; return R1 
	8	[3869]	RETURN   	R0 1 ; return 

function #213 <?:3871,3873> (5 instructions, 20 bytes at 00000252748A91E0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3872]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3872]	MOVE     	R2 R0 ; R2 := R0
	3	[3872]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3872]	RETURN   	R1 0 ; return R1,... 
	5	[3873]	RETURN   	R0 1 ; return 

function #214 <?:3875,3877> (8 instructions, 32 bytes at 00000252748A92D0)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[3876]	GETGLOBAL	R1 K0 ; R1 := 0x0032441c
	2	[3876]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedGoalInfo"]
	3	[3876]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	4	[3876]	MOVE     	R3 R0 ; R3 := R0
	5	[3876]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[3876]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	7	[3876]	RETURN   	R1 2 ; return R1 
	8	[3877]	RETURN   	R0 1 ; return 

function #215 <?:3879,3881> (5 instructions, 20 bytes at 00000252748A9400)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3880]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3880]	MOVE     	R2 R0 ; R2 := R0
	3	[3880]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3880]	RETURN   	R1 0 ; return R1,... 
	5	[3881]	RETURN   	R0 1 ; return 

function #216 <?:3883,3889> (25 instructions, 100 bytes at 00000252748A94F0)
1 param, 4 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[3884]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	2	[3884]	MOVE     	R2 R0 ; R2 := R0
	3	[3884]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3885]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	5	[3885]	GETTABLE 	R2 R2 K2 ; R2 := R2["CachedGoalInfo"]
	6	[3885]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	7	[3885]	TEST     	R2 0 ; if not R2 then PC := 22
	8	[3885]	JMP      	22 ; PC := 22
	9	[3885]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	10	[3885]	GETGLOBAL	R3 K1 ; R3 := 0x0032441c
	11	[3885]	GETTABLE 	R3 R3 K2 ; R3 := R3["CachedGoalInfo"]
	12	[3885]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	13	[3885]	GETTABLE 	R3 R3 K4 ; R3 := R3["mIcon"]
	14	[3885]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[3885]	TEST     	R2 1 ; if R2 then PC := 22
	16	[3885]	JMP      	22 ; PC := 22
	17	[3886]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	18	[3886]	GETTABLE 	R2 R2 K2 ; R2 := R2["CachedGoalInfo"]
	19	[3886]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	20	[3886]	GETTABLE 	R2 R2 K4 ; R2 := R2["mIcon"]
	21	[3886]	RETURN   	R2 2 ; return R2 
	22	[3888]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	23	[3888]	GETTABLE 	R2 R2 K5 ; R2 := R2["UITexture_Event"]
	24	[3888]	RETURN   	R2 2 ; return R2 
	25	[3889]	RETURN   	R0 1 ; return 

function #217 <?:3891,3893> (5 instructions, 20 bytes at 00000252748A9760)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3892]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3892]	MOVE     	R2 R0 ; R2 := R0
	3	[3892]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3892]	RETURN   	R1 2 ; return R1 
	5	[3893]	RETURN   	R0 1 ; return 

function #218 <?:3895,3928> (83 instructions, 332 bytes at 00000252748A9850)
1 param, 8 slots, 1 upvalue, 0 locals, 25 constants, 0 functions
	1	[3896]	TEST     	R0 1 ; if R0 then PC := 5
	2	[3896]	JMP      	5 ; PC := 5
	3	[3897]	LOADK    	R1 K0 ; R1 := ""
	4	[3897]	RETURN   	R1 2 ; return R1 
	5	[3900]	GETGLOBAL	R1 K1 ; R1 := 0x6c97a788
	6	[3900]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5c44e915]
	7	[3900]	GETTABLE 	R2 R0 K3 ; R2 := R0["missionType"]
	8	[3900]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[3901]	LOADNIL  	R2 R2 ; R2 := nil
	10	[3903]	EQ       	0 R1 K4 ; if R1 ~= nil then PC := 14
	11	[3903]	JMP      	14 ; PC := 14
	12	[3904]	LOADK    	R1 K0 ; R1 := ""
	13	[3904]	JMP      	80 ; PC := 80
	14	[3905]	GETTABLE 	R3 R0 K5 ; R3 := R0["forceAllyFaction"]
	15	[3905]	TEST     	R3 0 ; if not R3 then PC := 20
	16	[3905]	JMP      	20 ; PC := 20
	17	[3906]	MOVE     	R2 R1 ; R2 := R1
	18	[3907]	LOADK    	R1 K6 ; R1 := "Crossfire"
	19	[3907]	JMP      	80 ; PC := 80
	20	[3908]	GETTABLE 	R3 R0 K7 ; R3 := R0["goalTag"]
	21	[3908]	GETUPVAL 	R4 U0 ; R4 := U0
	22	[3908]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 26
	23	[3908]	JMP      	26 ; PC := 26
	24	[3909]	LOADK    	R1 K8 ; R1 := "KuvaSurvival"
	25	[3909]	JMP      	80 ; PC := 80
	26	[3910]	GETTABLE 	R3 R0 K3 ; R3 := R0["missionType"]
	27	[3910]	EQ       	0 R3 K9 ; if R3 ~= 31.000000 then PC := 80
	28	[3910]	JMP      	80 ; PC := 80
	29	[3910]	GETTABLE 	R3 R0 K10 ; R3 := R0["faction"]
	30	[3910]	EQ       	0 R3 K11 ; if R3 ~= 1.000000 then PC := 80
	31	[3910]	JMP      	80 ; PC := 80
	32	[3911]	GETGLOBAL	R3 K12 ; R3 := 0x7b998233
	33	[3911]	GETTABLE 	R4 R0 K13 ; R4 := R0["levelOverride"]
	34	[3911]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[3911]	TEST     	R3 1 ; if R3 then PC := 80
	36	[3911]	JMP      	80 ; PC := 80
	37	[3912]	GETGLOBAL	R3 K14 ; R3 := 0x64fb1586
	38	[3912]	GETTABLE 	R4 R0 K13 ; R4 := R0["levelOverride"]
	39	[3912]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0xed4e0128]
	40	[3912]	CALL     	R4 2 0 ; R4,... := R4(R5)
	41	[3912]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	42	[3913]	GETGLOBAL	R4 K12 ; R4 := 0x7b998233
	43	[3913]	GETTABLE 	R5 R0 K16 ; R5 := R0["keyChainName"]
	44	[3913]	CALL     	R4 2 2 ; R4 := R4(R5)
	45	[3913]	TEST     	R4 0 ; if not R4 then PC := 54
	46	[3913]	JMP      	54 ; PC := 54
	47	[3913]	GETGLOBAL	R4 K17 ; R4 := 0x7f5022cf
	48	[3913]	GETTABLE 	R4 R4 K18 ; R4 := R4[0xa5c556b9]
	49	[3913]	MOVE     	R5 R3 ; R5 := R3
	50	[3913]	LOADK    	R6 K19 ; R6 := "Quest"
	51	[3913]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	52	[3913]	EQ       	1 R4 K4 ; if R4 == nil then PC := 56
	53	[3913]	JMP      	56 ; PC := 56
	54	[3914]	LOADK    	R1 K20 ; R1 := "Generic"
	55	[3914]	JMP      	80 ; PC := 80
	56	[3917]	GETGLOBAL	R4 K17 ; R4 := 0x7f5022cf
	57	[3917]	GETTABLE 	R4 R4 K18 ; R4 := R4[0xa5c556b9]
	58	[3917]	GETGLOBAL	R5 K17 ; R5 := 0x7f5022cf
	59	[3917]	GETTABLE 	R5 R5 K21 ; R5 := R5[0x62f9fb80]
	60	[3917]	MOVE     	R6 R3 ; R6 := R3
	61	[3917]	CALL     	R5 2 2 ; R5 := R5(R6)
	62	[3917]	LOADK    	R6 K22 ; R6 := "%u"
	63	[3917]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	64	[3918]	EQ       	1 R4 K4 ; if R4 == nil then PC := 80
	65	[3918]	JMP      	80 ; PC := 80
	66	[3919]	GETGLOBAL	R5 K17 ; R5 := 0x7f5022cf
	67	[3919]	GETTABLE 	R5 R5 K23 ; R5 := R5[0x41e2ae25]
	68	[3919]	MOVE     	R6 R3 ; R6 := R3
	69	[3919]	CALL     	R5 2 2 ; R5 := R5(R6)
	70	[3919]	SUB      	R5 R5 R4 ; R5 := R5 - R4
	71	[3919]	ADD      	R4 R5 K11 ; R4 := R5 + 1.000000
	72	[3920]	GETGLOBAL	R5 K17 ; R5 := 0x7f5022cf
	73	[3920]	GETTABLE 	R5 R5 K24 ; R5 := R5[0x1a94c9cc]
	74	[3920]	MOVE     	R6 R3 ; R6 := R3
	75	[3920]	MOVE     	R7 R4 ; R7 := R4
	76	[3920]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	77	[3921]	MOVE     	R6 R1 ; R6 := R1
	78	[3921]	MOVE     	R7 R5 ; R7 := R5
	79	[3921]	CONCAT   	R1 R6 R7 ; R1 := R6 .. R7
	80	[3927]	MOVE     	R6 R1 ; R6 := R1
	81	[3927]	MOVE     	R7 R2 ; R7 := R2
	82	[3927]	RETURN   	R6 3 ; return R6, R7 
	83	[3928]	RETURN   	R0 1 ; return 

function #219 <?:3930,3932> (5 instructions, 20 bytes at 00000252748A9E50)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3931]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3931]	MOVE     	R2 R0 ; R2 := R0
	3	[3931]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3931]	RETURN   	R1 0 ; return R1,... 
	5	[3932]	RETURN   	R0 1 ; return 

function #220 <?:3934,3942> (15 instructions, 60 bytes at 00000252748A9F40)
1 param, 6 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3935]	LOADK    	R1 := 1.000000
	2	[3935]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[3935]	LEN      	R2 R2 ; R2 := # R2
	4	[3935]	LOADK    	R3 := 1.000000
	5	[3935]	FORPREP  	R1 12 ; R1 -= R3; PC := 12
	6	[3936]	GETUPVAL 	R5 U0 ; R5 := U0
	7	[3936]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	8	[3936]	EQ       	0 R0 R5 ; if R0 ~= R5 then PC := 12
	9	[3936]	JMP      	12 ; PC := 12
	10	[3937]	OP_LOADBOOL	R5 1 0 ; R5 := true
	11	[3937]	RETURN   	R5 2 ; return R5 
	12	[3935]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	13	[3941]	OP_LOADBOOL	R5 0 0 ; R5 := false
	14	[3941]	RETURN   	R5 2 ; return R5 
	15	[3942]	RETURN   	R0 1 ; return 

function #221 <?:3944,3946> (8 instructions, 32 bytes at 00000252748AA070)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[3945]	GETGLOBAL	R1 K0 ; R1 := 0x603636ad
	2	[3945]	GETGLOBAL	R2 K1 ; R2 := FactionNames
	3	[3945]	ADD      	R3 R0 K2 ; R3 := R0 + 1.000000
	4	[3945]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	5	[3945]	LOADNIL  	R3 R3 ; R3 := nil
	6	[3945]	TAILCALL 	R1 3 0 ; R1,... := R1(R2,R3)
	7	[3945]	RETURN   	R1 0 ; return R1,... 
	8	[3946]	RETURN   	R0 1 ; return 

function #222 <?:3948,3950> (5 instructions, 20 bytes at 00000252748AA1A0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3949]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3949]	MOVE     	R2 R0 ; R2 := R0
	3	[3949]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3949]	RETURN   	R1 0 ; return R1,... 
	5	[3950]	RETURN   	R0 1 ; return 

function #223 <?:3952,4011> (302 instructions, 1208 bytes at 00000252748AA290)
4 params, 10 slots, 1 upvalue, 0 locals, 55 constants, 0 functions
	1	[3953]	LOADK    	R4 K0 ; R4 := ""
	2	[3954]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	3	[3954]	GETTABLE 	R6 R0 K2 ; R6 := R0["levelOverride"]
	4	[3954]	CALL     	R5 2 2 ; R5 := R5(R6)
	5	[3954]	TEST     	R5 1 ; if R5 then PC := 11
	6	[3954]	JMP      	11 ; PC := 11
	7	[3955]	GETTABLE 	R5 R0 K2 ; R5 := R0["levelOverride"]
	8	[3955]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0xed4e0128]
	9	[3955]	CALL     	R5 2 2 ; R5 := R5(R6)
	10	[3955]	MOVE     	R4 R5 ; R4 := R5
	11	[3957]	LOADNIL  	R5 R5 ; R5 := nil
	12	[3958]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	13	[3958]	GETGLOBAL	R7 K4 ; R7 := 0x83f4e77c
	14	[3958]	CALL     	R6 2 2 ; R6 := R6(R7)
	15	[3958]	TEST     	R6 0 ; if not R6 then PC := 18
	16	[3958]	JMP      	18 ; PC := 18
	17	[3959]	RETURN   	R5 2 ; return R5 
	18	[3962]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	19	[3962]	GETTABLE 	R7 R0 K5 ; R7 := R0["icon"]
	20	[3962]	CALL     	R6 2 2 ; R6 := R6(R7)
	21	[3962]	TEST     	R6 1 ; if R6 then PC := 32
	22	[3962]	JMP      	32 ; PC := 32
	23	[3963]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	24	[3963]	MOVE     	R7 R2 ; R7 := R2
	25	[3963]	CALL     	R6 2 2 ; R6 := R6(R7)
	26	[3963]	TEST     	R6 1 ; if R6 then PC := 30
	27	[3963]	JMP      	30 ; PC := 30
	28	[3964]	GETTABLE 	R5 R2 K5 ; R5 := R2["icon"]
	29	[3964]	JMP      	301 ; PC := 301
	30	[3966]	GETTABLE 	R5 R0 K5 ; R5 := R0["icon"]
	31	[3967]	JMP      	301 ; PC := 301
	32	[3968]	GETTABLE 	R6 R0 K6 ; R6 := R0["missionType"]
	33	[3968]	EQ       	0 R6 K8 ; if R6 ~= 22.000000 then PC := 38
	34	[3968]	JMP      	38 ; PC := 38
	35	[3969]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	36	[3969]	GETTABLE 	R5 R6 K10 ; R5 := R6["UITextures_ArenaLocation"]
	37	[3969]	JMP      	301 ; PC := 301
	38	[3970]	GETTABLE 	R6 R0 K6 ; R6 := R0["missionType"]
	39	[3970]	EQ       	0 R6 K11 ; if R6 ~= 23.000000 then PC := 44
	40	[3970]	JMP      	44 ; PC := 44
	41	[3971]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	42	[3971]	GETTABLE 	R5 R6 K12 ; R5 := R6["UITextures_JunctionLocation"]
	43	[3971]	JMP      	301 ; PC := 301
	44	[3972]	GETTABLE 	R6 R0 K6 ; R6 := R0["missionType"]
	45	[3972]	EQ       	0 R6 K13 ; if R6 ~= 28.000000 then PC := 50
	46	[3972]	JMP      	50 ; PC := 50
	47	[3973]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	48	[3973]	GETTABLE 	R5 R6 K14 ; R5 := R6["UITextures_EidolonPlains"]
	49	[3973]	JMP      	301 ; PC := 301
	50	[3974]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	51	[3974]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	52	[3974]	MOVE     	R7 R4 ; R7 := R4
	53	[3974]	LOADK    	R8 K17 ; R8 := "Asteroid"
	54	[3974]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	55	[3974]	TEST     	R6 0 ; if not R6 then PC := 67
	56	[3974]	JMP      	67 ; PC := 67
	57	[3975]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	58	[3975]	GETTABLE 	R6 R6 K18 ; R6 := R6["UITextures_GrineerAsteroid"]
	59	[3975]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	60	[3975]	LOADK    	R8 := 1.000000
	61	[3975]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	62	[3975]	GETTABLE 	R9 R9 K18 ; R9 := R9["UITextures_GrineerAsteroid"]
	63	[3975]	LEN      	R9 R9 ; R9 := # R9
	64	[3975]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	65	[3975]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	66	[3975]	JMP      	301 ; PC := 301
	67	[3976]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	68	[3976]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	69	[3976]	MOVE     	R7 R4 ; R7 := R4
	70	[3976]	LOADK    	R8 K20 ; R8 := "GasCity"
	71	[3976]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	72	[3976]	TEST     	R6 0 ; if not R6 then PC := 84
	73	[3976]	JMP      	84 ; PC := 84
	74	[3977]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	75	[3977]	GETTABLE 	R6 R6 K21 ; R6 := R6["UITextures_GasCity"]
	76	[3977]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	77	[3977]	LOADK    	R8 := 1.000000
	78	[3977]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	79	[3977]	GETTABLE 	R9 R9 K21 ; R9 := R9["UITextures_GasCity"]
	80	[3977]	LEN      	R9 R9 ; R9 := # R9
	81	[3977]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	82	[3977]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	83	[3977]	JMP      	301 ; PC := 301
	84	[3978]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	85	[3978]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	86	[3978]	MOVE     	R7 R4 ; R7 := R4
	87	[3978]	LOADK    	R8 K22 ; R8 := "Galleon"
	88	[3978]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	89	[3978]	TEST     	R6 0 ; if not R6 then PC := 101
	90	[3978]	JMP      	101 ; PC := 101
	91	[3979]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	92	[3979]	GETTABLE 	R6 R6 K23 ; R6 := R6["UITextures_GrineerShip"]
	93	[3979]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	94	[3979]	LOADK    	R8 := 1.000000
	95	[3979]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	96	[3979]	GETTABLE 	R9 R9 K23 ; R9 := R9["UITextures_GrineerShip"]
	97	[3979]	LEN      	R9 R9 ; R9 := # R9
	98	[3979]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	99	[3979]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	100	[3979]	JMP      	301 ; PC := 301
	101	[3980]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	102	[3980]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	103	[3980]	MOVE     	R7 R4 ; R7 := R4
	104	[3980]	LOADK    	R8 K24 ; R8 := "Outpost"
	105	[3980]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	106	[3980]	TEST     	R6 0 ; if not R6 then PC := 118
	107	[3980]	JMP      	118 ; PC := 118
	108	[3981]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	109	[3981]	GETTABLE 	R6 R6 K25 ; R6 := R6["UITextures_Outpost"]
	110	[3981]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	111	[3981]	LOADK    	R8 := 1.000000
	112	[3981]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	113	[3981]	GETTABLE 	R9 R9 K25 ; R9 := R9["UITextures_Outpost"]
	114	[3981]	LEN      	R9 R9 ; R9 := # R9
	115	[3981]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	116	[3981]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	117	[3981]	JMP      	301 ; PC := 301
	118	[3982]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	119	[3982]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	120	[3982]	MOVE     	R7 R4 ; R7 := R4
	121	[3982]	LOADK    	R8 K26 ; R8 := "InfestedCorpus"
	122	[3982]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	123	[3982]	TEST     	R6 1 ; if R6 then PC := 132
	124	[3982]	JMP      	132 ; PC := 132
	125	[3982]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	126	[3982]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	127	[3982]	MOVE     	R7 R4 ; R7 := R4
	128	[3982]	LOADK    	R8 K27 ; R8 := "InfestedHive"
	129	[3982]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	130	[3982]	TEST     	R6 0 ; if not R6 then PC := 142
	131	[3982]	JMP      	142 ; PC := 142
	132	[3983]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	133	[3983]	GETTABLE 	R6 R6 K28 ; R6 := R6["UITextures_InfestedCorpusShip"]
	134	[3983]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	135	[3983]	LOADK    	R8 := 1.000000
	136	[3983]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	137	[3983]	GETTABLE 	R9 R9 K28 ; R9 := R9["UITextures_InfestedCorpusShip"]
	138	[3983]	LEN      	R9 R9 ; R9 := # R9
	139	[3983]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	140	[3983]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	141	[3983]	JMP      	301 ; PC := 301
	142	[3984]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	143	[3984]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	144	[3984]	MOVE     	R7 R4 ; R7 := R4
	145	[3984]	LOADK    	R8 K29 ; R8 := "IcePlanet"
	146	[3984]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	147	[3984]	TEST     	R6 0 ; if not R6 then PC := 159
	148	[3984]	JMP      	159 ; PC := 159
	149	[3985]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	150	[3985]	GETTABLE 	R6 R6 K30 ; R6 := R6["UITextures_IcePlanet"]
	151	[3985]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	152	[3985]	LOADK    	R8 := 1.000000
	153	[3985]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	154	[3985]	GETTABLE 	R9 R9 K30 ; R9 := R9["UITextures_IcePlanet"]
	155	[3985]	LEN      	R9 R9 ; R9 := # R9
	156	[3985]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	157	[3985]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	158	[3985]	JMP      	301 ; PC := 301
	159	[3986]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	160	[3986]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	161	[3986]	MOVE     	R7 R4 ; R7 := R4
	162	[3986]	LOADK    	R8 K31 ; R8 := "Corpus"
	163	[3986]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	164	[3986]	TEST     	R6 0 ; if not R6 then PC := 176
	165	[3986]	JMP      	176 ; PC := 176
	166	[3987]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	167	[3987]	GETTABLE 	R6 R6 K32 ; R6 := R6["UITextures_CorpusShip"]
	168	[3987]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	169	[3987]	LOADK    	R8 := 1.000000
	170	[3987]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	171	[3987]	GETTABLE 	R9 R9 K32 ; R9 := R9["UITextures_CorpusShip"]
	172	[3987]	LEN      	R9 R9 ; R9 := # R9
	173	[3987]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	174	[3987]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	175	[3987]	JMP      	301 ; PC := 301
	176	[3988]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	177	[3988]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	178	[3988]	MOVE     	R7 R4 ; R7 := R4
	179	[3988]	LOADK    	R8 K33 ; R8 := "Settlement"
	180	[3988]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	181	[3988]	TEST     	R6 0 ; if not R6 then PC := 193
	182	[3988]	JMP      	193 ; PC := 193
	183	[3989]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	184	[3989]	GETTABLE 	R6 R6 K34 ; R6 := R6["UITextures_Settlement"]
	185	[3989]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	186	[3989]	LOADK    	R8 := 1.000000
	187	[3989]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	188	[3989]	GETTABLE 	R9 R9 K34 ; R9 := R9["UITextures_Settlement"]
	189	[3989]	LEN      	R9 R9 ; R9 := # R9
	190	[3989]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	191	[3989]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	192	[3989]	JMP      	301 ; PC := 301
	193	[3990]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	194	[3990]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	195	[3990]	MOVE     	R7 R4 ; R7 := R4
	196	[3990]	LOADK    	R8 K35 ; R8 := "Forest"
	197	[3990]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	198	[3990]	TEST     	R6 0 ; if not R6 then PC := 210
	199	[3990]	JMP      	210 ; PC := 210
	200	[3991]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	201	[3991]	GETTABLE 	R6 R6 K36 ; R6 := R6["UITextures_GrineerForest"]
	202	[3991]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	203	[3991]	LOADK    	R8 := 1.000000
	204	[3991]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	205	[3991]	GETTABLE 	R9 R9 K36 ; R9 := R9["UITextures_GrineerForest"]
	206	[3991]	LEN      	R9 R9 ; R9 := # R9
	207	[3991]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	208	[3991]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	209	[3991]	JMP      	301 ; PC := 301
	210	[3992]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	211	[3992]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	212	[3992]	MOVE     	R7 R4 ; R7 := R4
	213	[3992]	LOADK    	R8 K37 ; R8 := "Shipyard"
	214	[3992]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	215	[3992]	TEST     	R6 0 ; if not R6 then PC := 227
	216	[3992]	JMP      	227 ; PC := 227
	217	[3993]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	218	[3993]	GETTABLE 	R6 R6 K38 ; R6 := R6["UITextures_GrineerShipyard"]
	219	[3993]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	220	[3993]	LOADK    	R8 := 1.000000
	221	[3993]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	222	[3993]	GETTABLE 	R9 R9 K38 ; R9 := R9["UITextures_GrineerShipyard"]
	223	[3993]	LEN      	R9 R9 ; R9 := # R9
	224	[3993]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	225	[3993]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	226	[3993]	JMP      	301 ; PC := 301
	227	[3994]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	228	[3994]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	229	[3994]	MOVE     	R7 R4 ; R7 := R4
	230	[3994]	LOADK    	R8 K39 ; R8 := "SpaceBattles/"
	231	[3994]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	232	[3994]	TEST     	R6 0 ; if not R6 then PC := 237
	233	[3994]	JMP      	237 ; PC := 237
	234	[3995]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	235	[3995]	GETTABLE 	R5 R6 K40 ; R5 := R6["UITextures_ArchwingTrench"]
	236	[3995]	JMP      	301 ; PC := 301
	237	[3996]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	238	[3996]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	239	[3996]	MOVE     	R7 R4 ; R7 := R4
	240	[3996]	LOADK    	R8 K41 ; R8 := "GrineerOcean"
	241	[3996]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	242	[3996]	TEST     	R6 0 ; if not R6 then PC := 247
	243	[3996]	JMP      	247 ; PC := 247
	244	[3997]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	245	[3997]	GETTABLE 	R5 R6 K42 ; R5 := R6["UITextures_GrineerOcean"]
	246	[3997]	JMP      	301 ; PC := 301
	247	[3998]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	248	[3998]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	249	[3998]	MOVE     	R7 R4 ; R7 := R4
	250	[3998]	LOADK    	R8 K43 ; R8 := "OrokinMoon"
	251	[3998]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	252	[3998]	TEST     	R6 0 ; if not R6 then PC := 257
	253	[3998]	JMP      	257 ; PC := 257
	254	[3999]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	255	[3999]	GETTABLE 	R5 R6 K44 ; R5 := R6["UITextures_OrokinMoon"]
	256	[3999]	JMP      	301 ; PC := 301
	257	[4000]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	258	[4000]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	259	[4000]	MOVE     	R7 R4 ; R7 := R4
	260	[4000]	LOADK    	R8 K45 ; R8 := "OrokinTower"
	261	[4000]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	262	[4000]	TEST     	R6 0 ; if not R6 then PC := 267
	263	[4000]	JMP      	267 ; PC := 267
	264	[4001]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	265	[4001]	GETTABLE 	R5 R6 K46 ; R5 := R6["UITextures_OrokinTower"]
	266	[4001]	JMP      	301 ; PC := 301
	267	[4002]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	268	[4002]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	269	[4002]	MOVE     	R7 R4 ; R7 := R4
	270	[4002]	LOADK    	R8 K47 ; R8 := "Space/"
	271	[4002]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	272	[4002]	TEST     	R6 0 ; if not R6 then PC := 277
	273	[4002]	JMP      	277 ; PC := 277
	274	[4003]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	275	[4003]	GETTABLE 	R5 R6 K48 ; R5 := R6["UITextures_ArchwingFreeFlight"]
	276	[4003]	JMP      	301 ; PC := 301
	277	[4004]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	278	[4004]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	279	[4004]	MOVE     	R7 R4 ; R7 := R4
	280	[4004]	LOADK    	R8 K49 ; R8 := "Fortress"
	281	[4004]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	282	[4004]	TEST     	R6 0 ; if not R6 then PC := 287
	283	[4004]	JMP      	287 ; PC := 287
	284	[4005]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	285	[4005]	GETTABLE 	R5 R6 K50 ; R5 := R6["UITextures_GrineerFortress"]
	286	[4005]	JMP      	301 ; PC := 301
	287	[4006]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	288	[4006]	MOVE     	R7 R1 ; R7 := R1
	289	[4006]	CALL     	R6 2 2 ; R6 := R6(R7)
	290	[4006]	TEST     	R6 1 ; if R6 then PC := 295
	291	[4006]	JMP      	295 ; PC := 295
	292	[4006]	GETTABLE 	R6 R1 K51 ; R6 := R1["nodeType"]
	293	[4006]	EQ       	1 R6 K52 ; if R6 == 1.000000 then PC := 297
	294	[4006]	JMP      	297 ; PC := 297
	295	[4006]	EQ       	1 R3 K53 ; if R3 == nil then PC := 301
	296	[4006]	JMP      	301 ; PC := 301
	297	[4007]	GETUPVAL 	R6 U0 ; R6 := U0
	298	[4007]	GETTABLE 	R7 R1 K54 ; R7 := R1["name"]
	299	[4007]	CALL     	R6 2 2 ; R6 := R6(R7)
	300	[4007]	MOVE     	R5 R6 ; R5 := R6
	301	[4010]	RETURN   	R5 2 ; return R5 
	302	[4011]	RETURN   	R0 1 ; return 

function #224 <?:4013,4015> (8 instructions, 32 bytes at 00000252748AB9B0)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4014]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[4014]	MOVE     	R5 R0 ; R5 := R0
	3	[4014]	MOVE     	R6 R1 ; R6 := R1
	4	[4014]	MOVE     	R7 R2 ; R7 := R2
	5	[4014]	MOVE     	R8 R3 ; R8 := R3
	6	[4014]	TAILCALL 	R4 5 0 ; R4,... := R4(R5,R6,R7,R8)
	7	[4014]	RETURN   	R4 0 ; return R4,... 
	8	[4015]	RETURN   	R0 1 ; return 

function #225 <?:4017,4052> (91 instructions, 364 bytes at 00000252748ABAA0)
1 param, 12 slots, 1 upvalue, 0 locals, 23 constants, 0 functions
	1	[4018]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4018]	GETTABLE 	R2 R0 K1 ; R2 := R0["levelOverride"]
	3	[4018]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4018]	TEST     	R1 1 ; if R1 then PC := 13
	5	[4018]	JMP      	13 ; PC := 13
	6	[4018]	GETGLOBAL	R1 K2 ; R1 := 0x64fb1586
	7	[4018]	GETTABLE 	R2 R0 K1 ; R2 := R0["levelOverride"]
	8	[4018]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xed4e0128]
	9	[4018]	CALL     	R2 2 0 ; R2,... := R2(R3)
	10	[4018]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	11	[4018]	EQ       	1 R1 K4 ; if R1 == "/Lotus/Levels/Proc/Orokin/OrokinMoonSpy" then PC := 14
	12	[4018]	JMP      	14 ; PC := 14
	13	[4018]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 14
	14	[4018]	OP_LOADBOOL	R1 1 0 ; R1 := true
	15	[4019]	GETTABLE 	R2 R0 K5 ; R2 := R0["forceAllyFaction"]
	16	[4019]	TEST     	R2 1 ; if R2 then PC := 20
	17	[4019]	JMP      	20 ; PC := 20
	18	[4019]	TEST     	R1 0 ; if not R1 then PC := 91
	19	[4019]	JMP      	91 ; PC := 91
	20	[4020]	GETTABLE 	R2 R0 K6 ; R2 := R0["invasionAllyFaction"]
	21	[4021]	EQ       	1 R2 K8 ; if R2 == 3.000000 then PC := 25
	22	[4021]	JMP      	25 ; PC := 25
	23	[4021]	TEST     	R1 0 ; if not R1 then PC := 72
	24	[4021]	JMP      	72 ; PC := 72
	25	[4023]	GETTABLE 	R3 R0 K9 ; R3 := R0["faction"]
	26	[4023]	EQ       	0 R3 K10 ; if R3 ~= 0.000000 then PC := 30
	27	[4023]	JMP      	30 ; PC := 30
	28	[4024]	LOADK    	R2 := 1.000000
	29	[4024]	JMP      	72 ; PC := 72
	30	[4025]	GETTABLE 	R3 R0 K9 ; R3 := R0["faction"]
	31	[4025]	EQ       	0 R3 K11 ; if R3 ~= 2.000000 then PC := 71
	32	[4025]	JMP      	71 ; PC := 71
	33	[4028]	LOADK    	R3 K12 ; R3 := ""
	34	[4029]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	35	[4029]	GETTABLE 	R5 R0 K13 ; R5 := R0["enemySpec"]
	36	[4029]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[4029]	TEST     	R4 1 ; if R4 then PC := 47
	38	[4029]	JMP      	47 ; PC := 47
	39	[4030]	MOVE     	R4 R3 ; R4 := R3
	40	[4030]	GETGLOBAL	R5 K14 ; R5 := 0x7f5022cf
	41	[4030]	GETTABLE 	R5 R5 K15 ; R5 := R5[0x04981ab3]
	42	[4030]	GETTABLE 	R6 R0 K13 ; R6 := R0["enemySpec"]
	43	[4030]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0xed4e0128]
	44	[4030]	CALL     	R6 2 0 ; R6,... := R6(R7)
	45	[4030]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	46	[4030]	CONCAT   	R3 R4 R5 ; R3 := R4 .. R5
	47	[4032]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	48	[4032]	GETTABLE 	R5 R0 K16 ; R5 := R0["extraEnemySpec"]
	49	[4032]	CALL     	R4 2 2 ; R4 := R4(R5)
	50	[4032]	TEST     	R4 1 ; if R4 then PC := 60
	51	[4032]	JMP      	60 ; PC := 60
	52	[4033]	MOVE     	R4 R3 ; R4 := R3
	53	[4033]	GETGLOBAL	R5 K14 ; R5 := 0x7f5022cf
	54	[4033]	GETTABLE 	R5 R5 K15 ; R5 := R5[0x04981ab3]
	55	[4033]	GETTABLE 	R6 R0 K16 ; R6 := R0["extraEnemySpec"]
	56	[4033]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0xed4e0128]
	57	[4033]	CALL     	R6 2 0 ; R6,... := R6(R7)
	58	[4033]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	59	[4033]	CONCAT   	R3 R4 R5 ; R3 := R4 .. R5
	60	[4036]	GETGLOBAL	R4 K14 ; R4 := 0x7f5022cf
	61	[4036]	GETTABLE 	R4 R4 K17 ; R4 := R4[0xa5c556b9]
	62	[4036]	MOVE     	R5 R3 ; R5 := R3
	63	[4036]	LOADK    	R6 K18 ; R6 := "corpus"
	64	[4036]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	65	[4036]	TEST     	R4 0 ; if not R4 then PC := 69
	66	[4036]	JMP      	69 ; PC := 69
	67	[4037]	LOADK    	R2 := 1.000000
	68	[4037]	JMP      	72 ; PC := 72
	69	[4039]	LOADK    	R2 := 0.000000
	70	[4040]	JMP      	72 ; PC := 72
	71	[4042]	LOADK    	R2 := 0.000000
	72	[4046]	GETUPVAL 	R4 U0 ; R4 := U0
	73	[4046]	MOVE     	R5 R2 ; R5 := R2
	74	[4046]	CALL     	R4 2 2 ; R4 := R4(R5)
	75	[4047]	GETUPVAL 	R5 U0 ; R5 := U0
	76	[4047]	GETTABLE 	R6 R0 K9 ; R6 := R0["faction"]
	77	[4047]	CALL     	R5 2 2 ; R5 := R5(R6)
	78	[4048]	GETGLOBAL	R6 K14 ; R6 := 0x7f5022cf
	79	[4048]	GETTABLE 	R6 R6 K19 ; R6 := R6[0x3f3e4d12]
	80	[4048]	MOVE     	R7 R4 ; R7 := R4
	81	[4048]	LOADK    	R8 K20 ; R8 := " "
	82	[4048]	GETGLOBAL	R9 K21 ; R9 := 0x603636ad
	83	[4048]	LOADK    	R10 K22 ; R10 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
	84	[4048]	LOADNIL  	R11 R11 ; R11 := nil
	85	[4048]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	86	[4048]	LOADK    	R10 K20 ; R10 := " "
	87	[4048]	MOVE     	R11 R5 ; R11 := R5
	88	[4048]	CONCAT   	R7 R7 R11 ; R7 := R7 .. R8 .. R9 .. R10 .. R11
	89	[4048]	CALL     	R6 2 2 ; R6 := R6(R7)
	90	[4050]	RETURN   	R6 2 ; return R6 
	91	[4052]	RETURN   	R0 1 ; return 

function #226 <?:4054,4056> (5 instructions, 20 bytes at 00000252748AC0D0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4055]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4055]	MOVE     	R2 R0 ; R2 := R0
	3	[4055]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[4055]	RETURN   	R1 0 ; return R1,... 
	5	[4056]	RETURN   	R0 1 ; return 

function #227 <?:4058,4350> (899 instructions, 3596 bytes at 00000252748AC1C0)
4 params, 60 slots, 9 upvalues, 0 locals, 150 constants, 0 functions
	1	[4059]	MOVE     	R4 R3 ; R4 := R3
	2	[4060]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	3	[4060]	MOVE     	R6 R4 ; R6 := R4
	4	[4060]	CALL     	R5 2 2 ; R5 := R5(R6)
	5	[4060]	TEST     	R5 0 ; if not R5 then PC := 10
	6	[4060]	JMP      	10 ; PC := 10
	7	[4061]	GETUPVAL 	R5 U0 ; R5 := U0
	8	[4061]	CALL     	R5 1 2 ; R5 := R5()
	9	[4062]	GETTABLE 	R4 R5 K1 ; R4 := R5["mMovie"]
	10	[4064]	LOADNIL  	R6 R6 ; R6 := nil
	11	[4065]	GETUPVAL 	R7 U1 ; R7 := U1
	12	[4065]	GETTABLE 	R8 R0 K2 ; R8 := R0["name"]
	13	[4065]	CALL     	R7 2 2 ; R7 := R7(R8)
	14	[4066]	GETUPVAL 	R8 U2 ; R8 := U2
	15	[4066]	GETTABLE 	R9 R0 K2 ; R9 := R0["name"]
	16	[4066]	CALL     	R8 2 2 ; R8 := R8(R9)
	17	[4067]	LOADNIL  	R9 R13 ; R9 := R10 := R11 := R12 := R13 := nil
	18	[4072]	GETGLOBAL	R14 K3 ; R14 := 0x64fb1586
	19	[4072]	GETTABLE 	R15 R0 K2 ; R15 := R0["name"]
	20	[4072]	CALL     	R14 2 2 ; R14 := R14(R15)
	21	[4073]	OP_LOADBOOL	R15 0 0 ; R15 := false
	22	[4074]	LOADNIL  	R16 R16 ; R16 := nil
	23	[4075]	GETTABLE 	R17 R0 K4 ; R17 := R0["radialSector"]
	24	[4076]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	25	[4076]	MOVE     	R19 R17 ; R19 := R17
	26	[4076]	CALL     	R18 2 2 ; R18 := R18(R19)
	27	[4076]	TEST     	R18 1 ; if R18 then PC := 49
	28	[4076]	JMP      	49 ; PC := 49
	29	[4077]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	30	[4077]	GETTABLE 	R19 R17 K5 ; R19 := R17["keyChain"]
	31	[4077]	CALL     	R18 2 2 ; R18 := R18(R19)
	32	[4077]	TEST     	R18 1 ; if R18 then PC := 37
	33	[4077]	JMP      	37 ; PC := 37
	34	[4078]	OP_LOADBOOL	R15 1 0 ; R15 := true
	35	[4079]	GETTABLE 	R16 R17 K5 ; R16 := R17["keyChain"]
	36	[4079]	JMP      	49 ; PC := 49
	37	[4080]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	38	[4080]	GETTABLE 	R19 R1 K6 ; R19 := R1["levelKeyName"]
	39	[4080]	CALL     	R18 2 2 ; R18 := R18(R19)
	40	[4080]	TEST     	R18 1 ; if R18 then PC := 49
	41	[4080]	JMP      	49 ; PC := 49
	42	[4081]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	43	[4081]	GETTABLE 	R19 R1 K7 ; R19 := R1["keyChainName"]
	44	[4081]	CALL     	R18 2 2 ; R18 := R18(R19)
	45	[4081]	TEST     	R18 1 ; if R18 then PC := 49
	46	[4081]	JMP      	49 ; PC := 49
	47	[4082]	OP_LOADBOOL	R15 1 0 ; R15 := true
	48	[4083]	GETTABLE 	R16 R1 K7 ; R16 := R1["keyChainName"]
	49	[4087]	GETTABLE 	R18 R0 K8 ; R18 := R0["nodeType"]
	50	[4087]	EQ       	1 R18 K10 ; if R18 == 7.000000 then PC := 53
	51	[4087]	JMP      	53 ; PC := 53
	52	[4087]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 53
	53	[4087]	OP_LOADBOOL	R18 1 0 ; R18 := true
	54	[4089]	GETTABLE 	R19 R0 K11 ; R19 := R0["reconstructionProgress"]
	55	[4089]	TEST     	R19 0 ; if not R19 then PC := 79
	56	[4089]	JMP      	79 ; PC := 79
	57	[4090]	LOADNIL  	R19 R19 ; R19 := nil
	58	[4091]	GETGLOBAL	R20 K12 ; R20 := _T
	59	[4091]	GETTABLE 	R20 R20 K13 ; R20 := R20["CachedConstructionProjects"]
	60	[4092]	LOADK    	R21 := 1.000000
	61	[4092]	LEN      	R22 R20 ; R22 := # R20
	62	[4092]	LOADK    	R23 := 1.000000
	63	[4092]	FORPREP  	R21 72 ; R21 -= R23; PC := 72
	64	[4093]	GETTABLE 	R25 R20 R24 ; R25 := R20[R24]
	65	[4094]	GETTABLE 	R26 R25 K14 ; R26 := R25["info"]
	66	[4094]	GETTABLE 	R26 R26 K15 ; R26 := R26["mNode"]
	67	[4095]	GETTABLE 	R27 R0 K2 ; R27 := R0["name"]
	68	[4095]	EQ       	0 R26 R27 ; if R26 ~= R27 then PC := 72
	69	[4095]	JMP      	72 ; PC := 72
	70	[4096]	MOVE     	R19 R25 ; R19 := R25
	71	[4097]	JMP      	73 ; PC := 73
	72	[4092]	FORLOOP  	R21 64 ; R21 += R23; if R21 <= R22 then begin PC := 64; R24 := R21 end
	73	[4101]	TEST     	R19 0 ; if not R19 then PC := 78
	74	[4101]	JMP      	78 ; PC := 78
	75	[4101]	GETTABLE 	R27 R0 K11 ; R27 := R0["reconstructionProgress"]
	76	[4101]	EQ       	1 R27 K16 ; if R27 == 1.000000 then PC := 79
	77	[4101]	JMP      	79 ; PC := 79
	78	[4102]	LOADNIL  	R8 R8 ; R8 := nil
	79	[4106]	GETTABLE 	R27 R0 K17 ; R27 := R0["locked"]
	80	[4106]	NOT      	R27 R27 ; R27 := not R27
	81	[4108]	TEST     	R15 0 ; if not R15 then PC := 85
	82	[4108]	JMP      	85 ; PC := 85
	83	[4109]	MOVE     	R6 R1 ; R6 := R1
	84	[4109]	JMP      	263 ; PC := 263
	85	[4110]	TEST     	R27 0 ; if not R27 then PC := 116
	86	[4110]	JMP      	116 ; PC := 116
	87	[4110]	GETGLOBAL	R28 K0 ; R28 := 0x7b998233
	88	[4110]	MOVE     	R29 R7 ; R29 := R7
	89	[4110]	CALL     	R28 2 2 ; R28 := R28(R29)
	90	[4110]	TEST     	R28 1 ; if R28 then PC := 116
	91	[4110]	JMP      	116 ; PC := 116
	92	[4111]	MOVE     	R6 R7 ; R6 := R7
	93	[4112]	GETGLOBAL	R28 K12 ; R28 := _T
	94	[4112]	GETTABLE 	R28 R28 K18 ; R28 := R28["CachedAlerts"]
	95	[4112]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	96	[4112]	TEST     	R28 0 ; if not R28 then PC := 263
	97	[4112]	JMP      	263 ; PC := 263
	98	[4112]	GETGLOBAL	R28 K12 ; R28 := _T
	99	[4112]	GETTABLE 	R28 R28 K18 ; R28 := R28["CachedAlerts"]
	100	[4112]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	101	[4112]	GETTABLE 	R28 R28 K19 ; R28 := R28["mVisible"]
	102	[4112]	TEST     	R28 0 ; if not R28 then PC := 263
	103	[4112]	JMP      	263 ; PC := 263
	104	[4112]	GETGLOBAL	R28 K12 ; R28 := _T
	105	[4112]	GETTABLE 	R28 R28 K18 ; R28 := R28["CachedAlerts"]
	106	[4112]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	107	[4112]	GETTABLE 	R28 R28 K20 ; R28 := R28["mAlertInfo"]
	108	[4112]	GETTABLE 	R28 R28 K21 ; R28 := R28["mTag"]
	109	[4112]	GETUPVAL 	R29 U3 ; R29 := U3
	110	[4112]	EQ       	0 R28 R29 ; if R28 ~= R29 then PC := 263
	111	[4112]	JMP      	263 ; PC := 263
	112	[4113]	GETGLOBAL	R28 K23 ; R28 := 0x0032441c
	113	[4113]	GETTABLE 	R28 R28 K24 ; R28 := R28["UITexture_Darvo"]
	114	[4113]	SETTABLE 	R6 K22 R28 ; R6["icon"] := R28
	115	[4114]	JMP      	263 ; PC := 263
	116	[4115]	TEST     	R8 0 ; if not R8 then PC := 120
	117	[4115]	JMP      	120 ; PC := 120
	118	[4116]	GETTABLE 	R6 R8 K25 ; R6 := R8["mMissionInfo"]
	119	[4116]	JMP      	263 ; PC := 263
	120	[4117]	TEST     	R27 0 ; if not R27 then PC := 151
	121	[4117]	JMP      	151 ; PC := 151
	122	[4117]	GETGLOBAL	R28 K12 ; R28 := _T
	123	[4117]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	124	[4117]	TEST     	R28 0 ; if not R28 then PC := 151
	125	[4117]	JMP      	151 ; PC := 151
	126	[4117]	GETGLOBAL	R28 K12 ; R28 := _T
	127	[4117]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	128	[4117]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	129	[4117]	TEST     	R28 0 ; if not R28 then PC := 151
	130	[4117]	JMP      	151 ; PC := 151
	131	[4117]	GETGLOBAL	R28 K12 ; R28 := _T
	132	[4117]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	133	[4117]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	134	[4117]	GETTABLE 	R28 R28 K27 ; R28 := R28["mUnlocked"]
	135	[4117]	TEST     	R28 0 ; if not R28 then PC := 151
	136	[4117]	JMP      	151 ; PC := 151
	137	[4117]	GETGLOBAL	R28 K12 ; R28 := _T
	138	[4117]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	139	[4117]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	140	[4117]	GETTABLE 	R28 R28 K28 ; R28 := R28["mShowInStarChart"]
	141	[4117]	TEST     	R28 0 ; if not R28 then PC := 151
	142	[4117]	JMP      	151 ; PC := 151
	143	[4118]	GETGLOBAL	R28 K12 ; R28 := _T
	144	[4118]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	145	[4118]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	146	[4118]	GETTABLE 	R6 R28 K25 ; R6 := R28["mMissionInfo"]
	147	[4119]	GETGLOBAL	R28 K12 ; R28 := _T
	148	[4119]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	149	[4119]	GETTABLE 	R12 R28 R14 ; R12 := R28[R14]
	150	[4119]	JMP      	263 ; PC := 263
	151	[4120]	TEST     	R27 0 ; if not R27 then PC := 172
	152	[4120]	JMP      	172 ; PC := 172
	153	[4120]	GETGLOBAL	R28 K12 ; R28 := _T
	154	[4120]	GETTABLE 	R28 R28 K29 ; R28 := R28["CachedSyndicateMissions"]
	155	[4120]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	156	[4120]	TEST     	R28 0 ; if not R28 then PC := 172
	157	[4120]	JMP      	172 ; PC := 172
	158	[4120]	GETGLOBAL	R28 K12 ; R28 := _T
	159	[4120]	GETTABLE 	R28 R28 K29 ; R28 := R28["CachedSyndicateMissions"]
	160	[4120]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	161	[4120]	GETTABLE 	R28 R28 K19 ; R28 := R28["mVisible"]
	162	[4120]	TEST     	R28 0 ; if not R28 then PC := 172
	163	[4120]	JMP      	172 ; PC := 172
	164	[4121]	GETGLOBAL	R28 K12 ; R28 := _T
	165	[4121]	GETTABLE 	R28 R28 K29 ; R28 := R28["CachedSyndicateMissions"]
	166	[4121]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	167	[4121]	GETTABLE 	R6 R28 K25 ; R6 := R28["mMissionInfo"]
	168	[4122]	GETGLOBAL	R28 K12 ; R28 := _T
	169	[4122]	GETTABLE 	R28 R28 K29 ; R28 := R28["CachedSyndicateMissions"]
	170	[4122]	GETTABLE 	R9 R28 R14 ; R9 := R28[R14]
	171	[4122]	JMP      	263 ; PC := 263
	172	[4123]	TEST     	R27 0 ; if not R27 then PC := 193
	173	[4123]	JMP      	193 ; PC := 193
	174	[4123]	GETGLOBAL	R28 K12 ; R28 := _T
	175	[4123]	GETTABLE 	R28 R28 K30 ; R28 := R28["CachedSortieMissions"]
	176	[4123]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	177	[4123]	TEST     	R28 0 ; if not R28 then PC := 193
	178	[4123]	JMP      	193 ; PC := 193
	179	[4123]	GETGLOBAL	R28 K12 ; R28 := _T
	180	[4123]	GETTABLE 	R28 R28 K30 ; R28 := R28["CachedSortieMissions"]
	181	[4123]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	182	[4123]	GETTABLE 	R28 R28 K28 ; R28 := R28["mShowInStarChart"]
	183	[4123]	TEST     	R28 0 ; if not R28 then PC := 193
	184	[4123]	JMP      	193 ; PC := 193
	185	[4124]	GETGLOBAL	R28 K12 ; R28 := _T
	186	[4124]	GETTABLE 	R28 R28 K30 ; R28 := R28["CachedSortieMissions"]
	187	[4124]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	188	[4124]	GETTABLE 	R6 R28 K25 ; R6 := R28["mMissionInfo"]
	189	[4125]	GETGLOBAL	R28 K12 ; R28 := _T
	190	[4125]	GETTABLE 	R28 R28 K30 ; R28 := R28["CachedSortieMissions"]
	191	[4125]	GETTABLE 	R10 R28 R14 ; R10 := R28[R14]
	192	[4125]	JMP      	263 ; PC := 263
	193	[4126]	TEST     	R27 0 ; if not R27 then PC := 212
	194	[4126]	JMP      	212 ; PC := 212
	195	[4126]	GETGLOBAL	R28 K12 ; R28 := _T
	196	[4126]	GETTABLE 	R28 R28 K31 ; R28 := R28["CachedInvasionInfo"]
	197	[4126]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	198	[4126]	TEST     	R28 0 ; if not R28 then PC := 212
	199	[4126]	JMP      	212 ; PC := 212
	200	[4126]	GETGLOBAL	R28 K12 ; R28 := _T
	201	[4126]	GETTABLE 	R28 R28 K31 ; R28 := R28["CachedInvasionInfo"]
	202	[4126]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	203	[4126]	GETTABLE 	R28 R28 K32 ; R28 := R28["mEventTag"]
	204	[4126]	GETGLOBAL	R29 K33 ; R29 := EMPTY_SYMBOL
	205	[4126]	EQ       	1 R28 R29 ; if R28 == R29 then PC := 212
	206	[4126]	JMP      	212 ; PC := 212
	207	[4127]	GETGLOBAL	R28 K12 ; R28 := _T
	208	[4127]	GETTABLE 	R28 R28 K31 ; R28 := R28["CachedInvasionInfo"]
	209	[4127]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	210	[4127]	GETTABLE 	R6 R28 K34 ; R6 := R28["mAttackerMissionInfo"]
	211	[4127]	JMP      	263 ; PC := 263
	212	[4128]	TEST     	R27 0 ; if not R27 then PC := 231
	213	[4128]	JMP      	231 ; PC := 231
	214	[4128]	GETGLOBAL	R28 K12 ; R28 := _T
	215	[4128]	GETTABLE 	R28 R28 K35 ; R28 := R28["CachedActiveMissions"]
	216	[4128]	TEST     	R28 0 ; if not R28 then PC := 231
	217	[4128]	JMP      	231 ; PC := 231
	218	[4128]	GETGLOBAL	R28 K12 ; R28 := _T
	219	[4128]	GETTABLE 	R28 R28 K35 ; R28 := R28["CachedActiveMissions"]
	220	[4128]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	221	[4128]	TEST     	R28 0 ; if not R28 then PC := 231
	222	[4128]	JMP      	231 ; PC := 231
	223	[4129]	GETGLOBAL	R28 K12 ; R28 := _T
	224	[4129]	GETTABLE 	R28 R28 K35 ; R28 := R28["CachedActiveMissions"]
	225	[4129]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	226	[4129]	GETTABLE 	R6 R28 K25 ; R6 := R28["mMissionInfo"]
	227	[4130]	GETGLOBAL	R28 K12 ; R28 := _T
	228	[4130]	GETTABLE 	R28 R28 K35 ; R28 := R28["CachedActiveMissions"]
	229	[4130]	GETTABLE 	R11 R28 R14 ; R11 := R28[R14]
	230	[4130]	JMP      	263 ; PC := 263
	231	[4131]	TEST     	R27 0 ; if not R27 then PC := 262
	232	[4131]	JMP      	262 ; PC := 262
	233	[4131]	GETGLOBAL	R28 K12 ; R28 := _T
	234	[4131]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	235	[4131]	TEST     	R28 0 ; if not R28 then PC := 262
	236	[4131]	JMP      	262 ; PC := 262
	237	[4131]	GETGLOBAL	R28 K12 ; R28 := _T
	238	[4131]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	239	[4131]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	240	[4131]	TEST     	R28 0 ; if not R28 then PC := 262
	241	[4131]	JMP      	262 ; PC := 262
	242	[4131]	GETGLOBAL	R28 K12 ; R28 := _T
	243	[4131]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	244	[4131]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	245	[4131]	GETTABLE 	R28 R28 K27 ; R28 := R28["mUnlocked"]
	246	[4131]	TEST     	R28 0 ; if not R28 then PC := 262
	247	[4131]	JMP      	262 ; PC := 262
	248	[4131]	GETGLOBAL	R28 K12 ; R28 := _T
	249	[4131]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	250	[4131]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	251	[4131]	GETTABLE 	R28 R28 K28 ; R28 := R28["mShowInStarChart"]
	252	[4131]	TEST     	R28 0 ; if not R28 then PC := 262
	253	[4131]	JMP      	262 ; PC := 262
	254	[4132]	GETGLOBAL	R28 K12 ; R28 := _T
	255	[4132]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	256	[4132]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	257	[4132]	GETTABLE 	R6 R28 K25 ; R6 := R28["mMissionInfo"]
	258	[4133]	GETGLOBAL	R28 K12 ; R28 := _T
	259	[4133]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	260	[4133]	GETTABLE 	R13 R28 R14 ; R13 := R28[R14]
	261	[4133]	JMP      	263 ; PC := 263
	262	[4135]	MOVE     	R6 R1 ; R6 := R1
	263	[4138]	GETUPVAL 	R28 U4 ; R28 := U4
	264	[4138]	MOVE     	R29 R6 ; R29 := R6
	265	[4138]	CALL     	R28 2 3 ; R28,R29 := R28(R29)
	266	[4139]	SELF     	R30 R4 K37 ; R31 := R4; R30 := R4[0x42b04007]
	267	[4139]	LOADK    	R32 K38 ; R32 := "/Lotus/Language/Game/MissionName_"
	268	[4139]	MOVE     	R33 R28 ; R33 := R28
	269	[4139]	CONCAT   	R32 R32 R33 ; R32 := R32 .. R33
	270	[4139]	OP_LOADBOOL	R33 0 0 ; R33 := false
	271	[4139]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	272	[4140]	TEST     	R29 0 ; if not R29 then PC := 283
	273	[4140]	JMP      	283 ; PC := 283
	274	[4141]	MOVE     	R31 R30 ; R31 := R30
	275	[4141]	LOADK    	R32 K39 ; R32 := " "
	276	[4141]	SELF     	R33 R4 K37 ; R34 := R4; R33 := R4[0x42b04007]
	277	[4141]	LOADK    	R35 K38 ; R35 := "/Lotus/Language/Game/MissionName_"
	278	[4141]	MOVE     	R36 R29 ; R36 := R29
	279	[4141]	CONCAT   	R35 R35 R36 ; R35 := R35 .. R36
	280	[4141]	OP_LOADBOOL	R36 0 0 ; R36 := false
	281	[4141]	CALL     	R33 4 2 ; R33 := R33(R34,R35,R36)
	282	[4141]	CONCAT   	R30 R31 R33 ; R30 := R31 .. R32 .. R33
	283	[4144]	LOADNIL  	R31 R31 ; R31 := nil
	284	[4145]	TEST     	R15 1 ; if R15 then PC := 295
	285	[4145]	JMP      	295 ; PC := 295
	286	[4145]	GETGLOBAL	R32 K0 ; R32 := 0x7b998233
	287	[4145]	MOVE     	R33 R7 ; R33 := R7
	288	[4145]	CALL     	R32 2 2 ; R32 := R32(R33)
	289	[4145]	TEST     	R32 0 ; if not R32 then PC := 295
	290	[4145]	JMP      	295 ; PC := 295
	291	[4146]	GETUPVAL 	R32 U5 ; R32 := U5
	292	[4146]	GETTABLE 	R33 R0 K2 ; R33 := R0["name"]
	293	[4146]	CALL     	R32 2 2 ; R32 := R32(R33)
	294	[4146]	MOVE     	R31 R32 ; R31 := R32
	295	[4149]	LOADK    	R32 := 1.000000
	296	[4150]	GETTABLE 	R33 R6 K22 ; R33 := R6["icon"]
	297	[4151]	LOADK    	R34 K40 ; R34 := ""
	298	[4152]	GETTABLE 	R35 R6 K41 ; R35 := R6["descText"]
	299	[4152]	SELF     	R35 R35 K42 ; R36 := R35; R35 := R35[0x6d604ba7]
	300	[4152]	CALL     	R35 2 2 ; R35 := R35(R36)
	301	[4153]	GETTABLE 	R36 R6 K43 ; R36 := R6["difficulty"]
	302	[4154]	GETTABLE 	R37 R6 K44 ; R37 := R6["minEnemyLevel"]
	303	[4155]	GETTABLE 	R38 R6 K45 ; R38 := R6["maxEnemyLevel"]
	304	[4156]	GETTABLE 	R39 R6 K46 ; R39 := R6["uniqueName"]
	305	[4157]	GETTABLE 	R40 R6 K47 ; R40 := R6["rarity"]
	306	[4158]	GETTABLE 	R41 R6 K48 ; R41 := R6["tag"]
	307	[4159]	LOADNIL  	R42 R42 ; R42 := nil
	308	[4161]	GETTABLE 	R43 R0 K8 ; R43 := R0["nodeType"]
	309	[4161]	EQ       	1 R43 K49 ; if R43 == 3.000000 then PC := 312
	310	[4161]	JMP      	312 ; PC := 312
	311	[4161]	OP_LOADBOOL	R43 0 1 ; R43 := false; PC := 312
	312	[4161]	OP_LOADBOOL	R43 1 0 ; R43 := true
	313	[4162]	GETGLOBAL	R44 K50 ; R44 := 0x7f5022cf
	314	[4162]	GETTABLE 	R44 R44 K51 ; R44 := R44[0xa5c556b9]
	315	[4162]	GETGLOBAL	R45 K3 ; R45 := 0x64fb1586
	316	[4162]	GETTABLE 	R46 R0 K2 ; R46 := R0["name"]
	317	[4162]	CALL     	R45 2 2 ; R45 := R45(R46)
	318	[4162]	LOADK    	R46 K52 ; R46 := "Dojo"
	319	[4162]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	320	[4162]	EQ       	0 R44 K53 ; if R44 ~= nil then PC := 323
	321	[4162]	JMP      	323 ; PC := 323
	322	[4162]	OP_LOADBOOL	R44 0 1 ; R44 := false; PC := 323
	323	[4162]	OP_LOADBOOL	R44 1 0 ; R44 := true
	324	[4164]	TEST     	R15 0 ; if not R15 then PC := 335
	325	[4164]	JMP      	335 ; PC := 335
	326	[4165]	GETGLOBAL	R45 K50 ; R45 := 0x7f5022cf
	327	[4165]	GETTABLE 	R45 R45 K54 ; R45 := R45[0x3f3e4d12]
	328	[4165]	SELF     	R46 R6 K55 ; R47 := R6; R46 := R6[0x243148d6]
	329	[4165]	CALL     	R46 2 2 ; R46 := R46(R47)
	330	[4165]	SELF     	R46 R46 K42 ; R47 := R46; R46 := R46[0x6d604ba7]
	331	[4165]	CALL     	R46 2 0 ; R46,... := R46(R47)
	332	[4165]	CALL     	R45 0 2 ; R45 := R45(R46,...)
	333	[4165]	MOVE     	R34 R45 ; R34 := R45
	334	[4165]	JMP      	679 ; PC := 679
	335	[4166]	TEST     	R43 0 ; if not R43 then PC := 360
	336	[4166]	JMP      	360 ; PC := 360
	337	[4167]	SELF     	R45 R4 K37 ; R46 := R4; R45 := R4[0x42b04007]
	338	[4167]	LOADK    	R47 K56 ; R47 := "/Lotus/Language/Menu/Chat_HubTitle"
	339	[4167]	OP_LOADBOOL	R48 0 0 ; R48 := false
	340	[4167]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	341	[4167]	MOVE     	R30 R45 ; R30 := R45
	342	[4168]	SELF     	R45 R4 K37 ; R46 := R4; R45 := R4[0x42b04007]
	343	[4168]	LOADK    	R47 K57 ; R47 := "/Lotus/Language/Bosses/Tenno"
	344	[4168]	OP_LOADBOOL	R48 0 0 ; R48 := false
	345	[4168]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	346	[4168]	MOVE     	R34 R45 ; R34 := R45
	347	[4169]	GETGLOBAL	R45 K23 ; R45 := 0x0032441c
	348	[4169]	GETTABLE 	R33 R45 K58 ; R33 := R45["UITexture_Hub"]
	349	[4170]	GETGLOBAL	R45 K50 ; R45 := 0x7f5022cf
	350	[4170]	GETTABLE 	R45 R45 K54 ; R45 := R45[0x3f3e4d12]
	351	[4170]	MOVE     	R46 R30 ; R46 := R30
	352	[4170]	CALL     	R45 2 2 ; R45 := R45(R46)
	353	[4170]	MOVE     	R30 R45 ; R30 := R45
	354	[4171]	GETGLOBAL	R45 K50 ; R45 := 0x7f5022cf
	355	[4171]	GETTABLE 	R45 R45 K54 ; R45 := R45[0x3f3e4d12]
	356	[4171]	MOVE     	R46 R34 ; R46 := R34
	357	[4171]	CALL     	R45 2 2 ; R45 := R45(R46)
	358	[4171]	MOVE     	R34 R45 ; R34 := R45
	359	[4171]	JMP      	679 ; PC := 679
	360	[4172]	TEST     	R44 0 ; if not R44 then PC := 384
	361	[4172]	JMP      	384 ; PC := 384
	362	[4173]	GETGLOBAL	R45 K59 ; R45 := 0x25d99d89
	363	[4174]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	364	[4174]	LOADK    	R48 K60 ; R48 := "/Lotus/Language/Clan/Clan_DOJO"
	365	[4174]	OP_LOADBOOL	R49 0 0 ; R49 := false
	366	[4174]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	367	[4174]	MOVE     	R30 R46 ; R30 := R46
	368	[4175]	SELF     	R46 R45 K61 ; R47 := R45; R46 := R45[0x6da6e186]
	369	[4175]	CALL     	R46 2 2 ; R46 := R46(R47)
	370	[4175]	MOVE     	R34 R46 ; R34 := R46
	371	[4176]	GETGLOBAL	R46 K23 ; R46 := 0x0032441c
	372	[4176]	GETTABLE 	R33 R46 K62 ; R33 := R46["UITexture_DefaultClan"]
	373	[4177]	GETGLOBAL	R46 K50 ; R46 := 0x7f5022cf
	374	[4177]	GETTABLE 	R46 R46 K54 ; R46 := R46[0x3f3e4d12]
	375	[4177]	MOVE     	R47 R30 ; R47 := R30
	376	[4177]	CALL     	R46 2 2 ; R46 := R46(R47)
	377	[4177]	MOVE     	R30 R46 ; R30 := R46
	378	[4178]	GETGLOBAL	R46 K50 ; R46 := 0x7f5022cf
	379	[4178]	GETTABLE 	R46 R46 K54 ; R46 := R46[0x3f3e4d12]
	380	[4178]	MOVE     	R47 R34 ; R47 := R34
	381	[4178]	CALL     	R46 2 2 ; R46 := R46(R47)
	382	[4178]	MOVE     	R34 R46 ; R34 := R46
	383	[4178]	JMP      	679 ; PC := 679
	384	[4179]	GETTABLE 	R46 R0 K8 ; R46 := R0["nodeType"]
	385	[4179]	EQ       	0 R46 K63 ; if R46 ~= 2.000000 then PC := 405
	386	[4179]	JMP      	405 ; PC := 405
	387	[4180]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	388	[4180]	LOADK    	R48 K64 ; R48 := "/Lotus/Language/Menu/MissionIntro_PVP"
	389	[4180]	OP_LOADBOOL	R49 0 0 ; R49 := false
	390	[4180]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	391	[4180]	MOVE     	R30 R46 ; R30 := R46
	392	[4181]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	393	[4181]	LOADK    	R48 K65 ; R48 := "/Lotus/Language/Menu/Codex_Tenno"
	394	[4181]	OP_LOADBOOL	R49 0 0 ; R49 := false
	395	[4181]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	396	[4181]	MOVE     	R34 R46 ; R34 := R46
	397	[4182]	GETGLOBAL	R46 K23 ; R46 := 0x0032441c
	398	[4182]	GETTABLE 	R33 R46 K66 ; R33 := R46["UITexture_Pvp"]
	399	[4183]	GETGLOBAL	R46 K50 ; R46 := 0x7f5022cf
	400	[4183]	GETTABLE 	R46 R46 K54 ; R46 := R46[0x3f3e4d12]
	401	[4183]	MOVE     	R47 R34 ; R47 := R34
	402	[4183]	CALL     	R46 2 2 ; R46 := R46(R47)
	403	[4183]	MOVE     	R34 R46 ; R34 := R46
	404	[4183]	JMP      	679 ; PC := 679
	405	[4184]	EQ       	1 R31 K53 ; if R31 == nil then PC := 483
	406	[4184]	JMP      	483 ; PC := 483
	407	[4185]	GETTABLE 	R46 R31 K67 ; R46 := R31["mFaction"]
	408	[4185]	EQ       	0 R46 K63 ; if R46 ~= 2.000000 then PC := 422
	409	[4185]	JMP      	422 ; PC := 422
	410	[4186]	GETUPVAL 	R46 U4 ; R46 := U4
	411	[4186]	GETTABLE 	R47 R31 K68 ; R47 := R31["mDefenderMissionInfo"]
	412	[4186]	CALL     	R46 2 2 ; R46 := R46(R47)
	413	[4186]	MOVE     	R28 R46 ; R28 := R46
	414	[4187]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	415	[4187]	LOADK    	R48 K38 ; R48 := "/Lotus/Language/Game/MissionName_"
	416	[4187]	MOVE     	R49 R28 ; R49 := R28
	417	[4187]	CONCAT   	R48 R48 R49 ; R48 := R48 .. R49
	418	[4187]	OP_LOADBOOL	R49 0 0 ; R49 := false
	419	[4187]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	420	[4187]	MOVE     	R30 R46 ; R30 := R46
	421	[4187]	JMP      	431 ; PC := 431
	422	[4188]	GETTABLE 	R46 R31 K32 ; R46 := R31["mEventTag"]
	423	[4188]	GETGLOBAL	R47 K33 ; R47 := EMPTY_SYMBOL
	424	[4188]	EQ       	0 R46 R47 ; if R46 ~= R47 then PC := 431
	425	[4188]	JMP      	431 ; PC := 431
	426	[4189]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	427	[4189]	LOADK    	R48 K69 ; R48 := "/Lotus/Language/Menu/MissionIntro_Invasion"
	428	[4189]	OP_LOADBOOL	R49 0 0 ; R49 := false
	429	[4189]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	430	[4189]	MOVE     	R30 R46 ; R30 := R46
	431	[4191]	GETTABLE 	R46 R31 K68 ; R46 := R31["mDefenderMissionInfo"]
	432	[4191]	SELF     	R46 R46 K55 ; R47 := R46; R46 := R46[0x243148d6]
	433	[4191]	CALL     	R46 2 2 ; R46 := R46(R47)
	434	[4191]	SELF     	R46 R46 K42 ; R47 := R46; R46 := R46[0x6d604ba7]
	435	[4191]	CALL     	R46 2 2 ; R46 := R46(R47)
	436	[4191]	MOVE     	R34 R46 ; R34 := R46
	437	[4192]	GETGLOBAL	R46 K23 ; R46 := 0x0032441c
	438	[4192]	GETTABLE 	R33 R46 K70 ; R33 := R46["UITexture_Invasion"]
	439	[4193]	GETGLOBAL	R46 K50 ; R46 := 0x7f5022cf
	440	[4193]	GETTABLE 	R46 R46 K54 ; R46 := R46[0x3f3e4d12]
	441	[4193]	MOVE     	R47 R34 ; R47 := R34
	442	[4193]	CALL     	R46 2 2 ; R46 := R46(R47)
	443	[4193]	MOVE     	R34 R46 ; R34 := R46
	444	[4194]	LOADK    	R39 K40 ; R39 := ""
	445	[4195]	GETTABLE 	R46 R31 K34 ; R46 := R31["mAttackerMissionInfo"]
	446	[4195]	GETTABLE 	R37 R46 K44 ; R37 := R46["minEnemyLevel"]
	447	[4196]	GETTABLE 	R46 R31 K34 ; R46 := R31["mAttackerMissionInfo"]
	448	[4196]	GETTABLE 	R38 R46 K45 ; R38 := R46["maxEnemyLevel"]
	449	[4198]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	450	[4198]	MOVE     	R47 R2 ; R47 := R2
	451	[4198]	CALL     	R46 2 2 ; R46 := R46(R47)
	452	[4198]	TEST     	R46 1 ; if R46 then PC := 679
	453	[4198]	JMP      	679 ; PC := 679
	454	[4198]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	455	[4198]	GETTABLE 	R47 R31 K68 ; R47 := R31["mDefenderMissionInfo"]
	456	[4198]	GETTABLE 	R47 R47 K71 ; R47 := R47["vipAgent"]
	457	[4198]	CALL     	R46 2 2 ; R46 := R46(R47)
	458	[4198]	TEST     	R46 1 ; if R46 then PC := 679
	459	[4198]	JMP      	679 ; PC := 679
	460	[4198]	GETTABLE 	R46 R31 K32 ; R46 := R31["mEventTag"]
	461	[4198]	GETGLOBAL	R47 K33 ; R47 := EMPTY_SYMBOL
	462	[4198]	EQ       	0 R46 R47 ; if R46 ~= R47 then PC := 679
	463	[4198]	JMP      	679 ; PC := 679
	464	[4199]	SELF     	R46 R2 K72 ; R47 := R2; R46 := R2[0xd94900e4]
	465	[4199]	GETTABLE 	R48 R31 K68 ; R48 := R31["mDefenderMissionInfo"]
	466	[4199]	GETTABLE 	R48 R48 K71 ; R48 := R48["vipAgent"]
	467	[4199]	CALL     	R46 3 2 ; R46 := R46(R47,R48)
	468	[4199]	MOVE     	R42 R46 ; R42 := R46
	469	[4200]	GETTABLE 	R46 R42 K73 ; R46 := R42["locName"]
	470	[4200]	GETGLOBAL	R47 K33 ; R47 := EMPTY_SYMBOL
	471	[4200]	EQ       	1 R46 R47 ; if R46 == R47 then PC := 679
	472	[4200]	JMP      	679 ; PC := 679
	473	[4201]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	474	[4201]	GETTABLE 	R48 R42 K73 ; R48 := R42["locName"]
	475	[4201]	SELF     	R48 R48 K42 ; R49 := R48; R48 := R48[0x6d604ba7]
	476	[4201]	CALL     	R48 2 2 ; R48 := R48(R49)
	477	[4201]	OP_LOADBOOL	R49 0 0 ; R49 := false
	478	[4201]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	479	[4201]	MOVE     	R34 R46 ; R34 := R46
	480	[4202]	GETTABLE 	R33 R42 K22 ; R33 := R42["icon"]
	481	[4203]	LOADK    	R39 K40 ; R39 := ""
	482	[4205]	JMP      	679 ; PC := 679
	483	[4207]	EQ       	1 R8 K53 ; if R8 == nil then PC := 574
	484	[4207]	JMP      	574 ; PC := 574
	485	[4209]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	486	[4209]	GETTABLE 	R47 R8 K74 ; R47 := R8["mMissionKeyName"]
	487	[4209]	CALL     	R46 2 2 ; R46 := R46(R47)
	488	[4209]	TEST     	R46 1 ; if R46 then PC := 544
	489	[4209]	JMP      	544 ; PC := 544
	490	[4210]	GETGLOBAL	R46 K75 ; R46 := 0xb009bbc6
	491	[4210]	GETTABLE 	R47 R8 K74 ; R47 := R8["mMissionKeyName"]
	492	[4210]	CALL     	R46 2 2 ; R46 := R46(R47)
	493	[4211]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	494	[4211]	MOVE     	R48 R46 ; R48 := R46
	495	[4211]	CALL     	R47 2 2 ; R47 := R47(R48)
	496	[4211]	TEST     	R47 1 ; if R47 then PC := 549
	497	[4211]	JMP      	549 ; PC := 549
	498	[4212]	SELF     	R47 R46 K76 ; R48 := R46; R47 := R46[0xef893aec]
	499	[4212]	CALL     	R47 2 2 ; R47 := R47(R48)
	500	[4212]	MOVE     	R6 R47 ; R6 := R47
	501	[4213]	GETTABLE 	R47 R8 K25 ; R47 := R8["mMissionInfo"]
	502	[4213]	GETTABLE 	R47 R47 K44 ; R47 := R47["minEnemyLevel"]
	503	[4213]	LT       	0 K16 R47 ; if 1.000000 >= R47 then PC := 508
	504	[4213]	JMP      	508 ; PC := 508
	505	[4214]	GETTABLE 	R47 R8 K25 ; R47 := R8["mMissionInfo"]
	506	[4214]	GETTABLE 	R47 R47 K44 ; R47 := R47["minEnemyLevel"]
	507	[4214]	SETTABLE 	R6 K44 R47 ; R6["minEnemyLevel"] := R47
	508	[4216]	GETTABLE 	R47 R8 K25 ; R47 := R8["mMissionInfo"]
	509	[4216]	GETTABLE 	R47 R47 K45 ; R47 := R47["maxEnemyLevel"]
	510	[4216]	LT       	0 K16 R47 ; if 1.000000 >= R47 then PC := 515
	511	[4216]	JMP      	515 ; PC := 515
	512	[4217]	GETTABLE 	R47 R8 K25 ; R47 := R8["mMissionInfo"]
	513	[4217]	GETTABLE 	R47 R47 K45 ; R47 := R47["maxEnemyLevel"]
	514	[4217]	SETTABLE 	R6 K45 R47 ; R6["maxEnemyLevel"] := R47
	515	[4219]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	516	[4219]	GETTABLE 	R48 R8 K25 ; R48 := R8["mMissionInfo"]
	517	[4219]	GETTABLE 	R48 R48 K77 ; R48 := R48["enemySpec"]
	518	[4219]	CALL     	R47 2 2 ; R47 := R47(R48)
	519	[4219]	TEST     	R47 1 ; if R47 then PC := 524
	520	[4219]	JMP      	524 ; PC := 524
	521	[4220]	GETTABLE 	R47 R8 K25 ; R47 := R8["mMissionInfo"]
	522	[4220]	GETTABLE 	R47 R47 K77 ; R47 := R47["enemySpec"]
	523	[4220]	SETTABLE 	R6 K77 R47 ; R6["enemySpec"] := R47
	524	[4222]	GETTABLE 	R37 R6 K44 ; R37 := R6["minEnemyLevel"]
	525	[4223]	GETTABLE 	R38 R6 K45 ; R38 := R6["maxEnemyLevel"]
	526	[4224]	SELF     	R47 R6 K55 ; R48 := R6; R47 := R6[0x243148d6]
	527	[4224]	CALL     	R47 2 2 ; R47 := R47(R48)
	528	[4224]	SELF     	R47 R47 K42 ; R48 := R47; R47 := R47[0x6d604ba7]
	529	[4224]	CALL     	R47 2 2 ; R47 := R47(R48)
	530	[4224]	MOVE     	R34 R47 ; R34 := R47
	531	[4225]	GETUPVAL 	R47 U4 ; R47 := U4
	532	[4225]	MOVE     	R48 R6 ; R48 := R6
	533	[4225]	CALL     	R47 2 2 ; R47 := R47(R48)
	534	[4225]	MOVE     	R28 R47 ; R28 := R47
	535	[4226]	SELF     	R47 R4 K37 ; R48 := R4; R47 := R4[0x42b04007]
	536	[4226]	LOADK    	R49 K38 ; R49 := "/Lotus/Language/Game/MissionName_"
	537	[4226]	MOVE     	R50 R28 ; R50 := R28
	538	[4226]	CONCAT   	R49 R49 R50 ; R49 := R49 .. R50
	539	[4226]	OP_LOADBOOL	R50 0 0 ; R50 := false
	540	[4226]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	541	[4226]	MOVE     	R30 R47 ; R30 := R47
	542	[4227]	LOADK    	R39 K40 ; R39 := ""
	543	[4228]	JMP      	549 ; PC := 549
	544	[4231]	SELF     	R47 R4 K37 ; R48 := R4; R47 := R4[0x42b04007]
	545	[4231]	GETTABLE 	R49 R8 K78 ; R49 := R8["mDesc"]
	546	[4231]	OP_LOADBOOL	R50 0 0 ; R50 := false
	547	[4231]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	548	[4231]	MOVE     	R30 R47 ; R30 := R47
	549	[4235]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	550	[4235]	GETTABLE 	R48 R6 K77 ; R48 := R6["enemySpec"]
	551	[4235]	CALL     	R47 2 2 ; R47 := R47(R48)
	552	[4235]	TEST     	R47 1 ; if R47 then PC := 563
	553	[4235]	JMP      	563 ; PC := 563
	554	[4235]	GETGLOBAL	R47 K3 ; R47 := 0x64fb1586
	555	[4235]	GETTABLE 	R48 R6 K77 ; R48 := R6["enemySpec"]
	556	[4235]	SELF     	R48 R48 K79 ; R49 := R48; R48 := R48[0xed4e0128]
	557	[4235]	CALL     	R48 2 0 ; R48,... := R48(R49)
	558	[4235]	CALL     	R47 0 2 ; R47 := R47(R48,...)
	559	[4235]	EQ       	0 R47 K80 ; if R47 ~= "/Lotus/Types/Game/EnemySpecs/GrineerEventSquadM" then PC := 563
	560	[4235]	JMP      	563 ; PC := 563
	561	[4236]	LOADK    	R34 K40 ; R34 := ""
	562	[4236]	JMP      	568 ; PC := 568
	563	[4238]	SELF     	R47 R6 K55 ; R48 := R6; R47 := R6[0x243148d6]
	564	[4238]	CALL     	R47 2 2 ; R47 := R47(R48)
	565	[4238]	SELF     	R47 R47 K42 ; R48 := R47; R47 := R47[0x6d604ba7]
	566	[4238]	CALL     	R47 2 2 ; R47 := R47(R48)
	567	[4238]	MOVE     	R34 R47 ; R34 := R47
	568	[4240]	GETGLOBAL	R47 K50 ; R47 := 0x7f5022cf
	569	[4240]	GETTABLE 	R47 R47 K54 ; R47 := R47[0x3f3e4d12]
	570	[4240]	MOVE     	R48 R34 ; R48 := R34
	571	[4240]	CALL     	R47 2 2 ; R47 := R47(R48)
	572	[4240]	MOVE     	R34 R47 ; R34 := R47
	573	[4240]	JMP      	679 ; PC := 679
	574	[4242]	GETTABLE 	R47 R6 K81 ; R47 := R6["missionType"]
	575	[4242]	EQ       	0 R47 K82 ; if R47 ~= 0.000000 then PC := 615
	576	[4242]	JMP      	615 ; PC := 615
	577	[4244]	OP_LOADBOOL	R47 0 0 ; R47 := false
	578	[4245]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	579	[4245]	MOVE     	R49 R2 ; R49 := R2
	580	[4245]	CALL     	R48 2 2 ; R48 := R48(R49)
	581	[4245]	TEST     	R48 1 ; if R48 then PC := 606
	582	[4245]	JMP      	606 ; PC := 606
	583	[4245]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	584	[4245]	GETTABLE 	R49 R6 K71 ; R49 := R6["vipAgent"]
	585	[4245]	CALL     	R48 2 2 ; R48 := R48(R49)
	586	[4245]	TEST     	R48 1 ; if R48 then PC := 606
	587	[4245]	JMP      	606 ; PC := 606
	588	[4246]	SELF     	R48 R2 K72 ; R49 := R2; R48 := R2[0xd94900e4]
	589	[4246]	GETTABLE 	R50 R6 K71 ; R50 := R6["vipAgent"]
	590	[4246]	CALL     	R48 3 2 ; R48 := R48(R49,R50)
	591	[4246]	MOVE     	R42 R48 ; R42 := R48
	592	[4247]	GETTABLE 	R48 R42 K73 ; R48 := R42["locName"]
	593	[4247]	GETGLOBAL	R49 K33 ; R49 := EMPTY_SYMBOL
	594	[4247]	EQ       	1 R48 R49 ; if R48 == R49 then PC := 606
	595	[4247]	JMP      	606 ; PC := 606
	596	[4248]	OP_LOADBOOL	R47 1 0 ; R47 := true
	597	[4249]	SELF     	R48 R4 K37 ; R49 := R4; R48 := R4[0x42b04007]
	598	[4249]	GETTABLE 	R50 R42 K73 ; R50 := R42["locName"]
	599	[4249]	SELF     	R50 R50 K42 ; R51 := R50; R50 := R50[0x6d604ba7]
	600	[4249]	CALL     	R50 2 2 ; R50 := R50(R51)
	601	[4249]	OP_LOADBOOL	R51 0 0 ; R51 := false
	602	[4249]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	603	[4249]	MOVE     	R34 R48 ; R34 := R48
	604	[4250]	GETTABLE 	R33 R42 K22 ; R33 := R42["icon"]
	605	[4251]	LOADK    	R39 K40 ; R39 := ""
	606	[4255]	TEST     	R47 1 ; if R47 then PC := 679
	607	[4255]	JMP      	679 ; PC := 679
	608	[4256]	SELF     	R48 R4 K37 ; R49 := R4; R48 := R4[0x42b04007]
	609	[4256]	GETTABLE 	R50 R6 K46 ; R50 := R6["uniqueName"]
	610	[4256]	OP_LOADBOOL	R51 0 0 ; R51 := false
	611	[4256]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	612	[4256]	MOVE     	R34 R48 ; R34 := R48
	613	[4257]	GETTABLE 	R33 R6 K22 ; R33 := R6["icon"]
	614	[4258]	JMP      	679 ; PC := 679
	615	[4260]	GETTABLE 	R48 R0 K2 ; R48 := R0["name"]
	616	[4260]	GETGLOBAL	R49 K83 ; R49 := APARTMENT_NODE_TAG
	617	[4260]	EQ       	0 R48 R49 ; if R48 ~= R49 then PC := 622
	618	[4260]	JMP      	622 ; PC := 622
	619	[4261]	LOADK    	R30 K40 ; R30 := ""
	620	[4262]	LOADK    	R34 K40 ; R34 := ""
	621	[4262]	JMP      	679 ; PC := 679
	622	[4266]	GETGLOBAL	R48 K12 ; R48 := _T
	623	[4266]	GETTABLE 	R48 R48 K18 ; R48 := R48["CachedAlerts"]
	624	[4266]	GETTABLE 	R49 R0 K2 ; R49 := R0["name"]
	625	[4266]	GETTABLE 	R48 R48 R49 ; R48 := R48[R49]
	626	[4266]	TEST     	R48 0 ; if not R48 then PC := 660
	627	[4266]	JMP      	660 ; PC := 660
	628	[4266]	GETGLOBAL	R48 K12 ; R48 := _T
	629	[4266]	GETTABLE 	R48 R48 K18 ; R48 := R48["CachedAlerts"]
	630	[4266]	GETTABLE 	R49 R0 K2 ; R49 := R0["name"]
	631	[4266]	GETTABLE 	R48 R48 R49 ; R48 := R48[R49]
	632	[4266]	GETTABLE 	R48 R48 K20 ; R48 := R48["mAlertInfo"]
	633	[4266]	GETTABLE 	R48 R48 K21 ; R48 := R48["mTag"]
	634	[4266]	GETGLOBAL	R49 K33 ; R49 := EMPTY_SYMBOL
	635	[4266]	EQ       	1 R48 R49 ; if R48 == R49 then PC := 660
	636	[4266]	JMP      	660 ; PC := 660
	637	[4266]	GETGLOBAL	R48 K12 ; R48 := _T
	638	[4266]	GETTABLE 	R48 R48 K18 ; R48 := R48["CachedAlerts"]
	639	[4266]	GETTABLE 	R49 R0 K2 ; R49 := R0["name"]
	640	[4266]	GETTABLE 	R48 R48 R49 ; R48 := R48[R49]
	641	[4266]	GETTABLE 	R48 R48 K20 ; R48 := R48["mAlertInfo"]
	642	[4266]	GETTABLE 	R48 R48 K25 ; R48 := R48["mMissionInfo"]
	643	[4266]	GETTABLE 	R48 R48 K41 ; R48 := R48["descText"]
	644	[4266]	GETGLOBAL	R49 K33 ; R49 := EMPTY_SYMBOL
	645	[4266]	EQ       	1 R48 R49 ; if R48 == R49 then PC := 660
	646	[4266]	JMP      	660 ; PC := 660
	647	[4267]	GETGLOBAL	R48 K84 ; R48 := 0x603636ad
	648	[4267]	GETGLOBAL	R49 K3 ; R49 := 0x64fb1586
	649	[4267]	GETGLOBAL	R50 K12 ; R50 := _T
	650	[4267]	GETTABLE 	R50 R50 K18 ; R50 := R50["CachedAlerts"]
	651	[4267]	GETTABLE 	R51 R0 K2 ; R51 := R0["name"]
	652	[4267]	GETTABLE 	R50 R50 R51 ; R50 := R50[R51]
	653	[4267]	GETTABLE 	R50 R50 K20 ; R50 := R50["mAlertInfo"]
	654	[4267]	GETTABLE 	R50 R50 K25 ; R50 := R50["mMissionInfo"]
	655	[4267]	GETTABLE 	R50 R50 K41 ; R50 := R50["descText"]
	656	[4267]	CALL     	R49 2 2 ; R49 := R49(R50)
	657	[4267]	OP_LOADBOOL	R50 0 0 ; R50 := false
	658	[4267]	CALL     	R48 3 2 ; R48 := R48(R49,R50)
	659	[4267]	MOVE     	R39 R48 ; R39 := R48
	660	[4270]	SELF     	R48 R6 K55 ; R49 := R6; R48 := R6[0x243148d6]
	661	[4270]	CALL     	R48 2 2 ; R48 := R48(R49)
	662	[4270]	SELF     	R48 R48 K42 ; R49 := R48; R48 := R48[0x6d604ba7]
	663	[4270]	CALL     	R48 2 2 ; R48 := R48(R49)
	664	[4270]	MOVE     	R34 R48 ; R34 := R48
	665	[4271]	TEST     	R18 0 ; if not R18 then PC := 668
	666	[4271]	JMP      	668 ; PC := 668
	667	[4272]	LOADK    	R34 K85 ; R34 := "TENNO"
	668	[4274]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	669	[4274]	MOVE     	R49 R33 ; R49 := R33
	670	[4274]	CALL     	R48 2 2 ; R48 := R48(R49)
	671	[4274]	TEST     	R48 0 ; if not R48 then PC := 674
	672	[4274]	JMP      	674 ; PC := 674
	673	[4275]	LOADNIL  	R33 R33 ; R33 := nil
	674	[4277]	GETGLOBAL	R48 K50 ; R48 := 0x7f5022cf
	675	[4277]	GETTABLE 	R48 R48 K54 ; R48 := R48[0x3f3e4d12]
	676	[4277]	MOVE     	R49 R34 ; R49 := R34
	677	[4277]	CALL     	R48 2 2 ; R48 := R48(R49)
	678	[4277]	MOVE     	R34 R48 ; R34 := R48
	679	[4280]	GETGLOBAL	R48 K50 ; R48 := 0x7f5022cf
	680	[4280]	GETTABLE 	R48 R48 K86 ; R48 := R48[0x41e2ae25]
	681	[4280]	MOVE     	R49 R39 ; R49 := R39
	682	[4280]	CALL     	R48 2 2 ; R48 := R48(R49)
	683	[4280]	LT       	0 K82 R48 ; if 0.000000 >= R48 then PC := 685
	684	[4280]	JMP      	685 ; PC := 685
	685	[4284]	GETUPVAL 	R48 U6 ; R48 := U6
	686	[4284]	GETTABLE 	R48 R48 K87 ; R48 := R48[0x06d055f9]
	687	[4284]	GETGLOBAL	R49 K88 ; R49 := 0x34291f5c
	688	[4284]	GETTABLE 	R49 R49 K89 ; R49 := R49[0xa7a2e381]
	689	[4284]	CALL     	R49 1 2 ; R49 := R49()
	690	[4284]	LOADK    	R50 K40 ; R50 := ""
	691	[4284]	GETTABLE 	R51 R0 K90 ; R51 := R0["founders"]
	692	[4284]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	693	[4286]	LOADNIL  	R49 R49 ; R49 := nil
	694	[4288]	GETGLOBAL	R50 K0 ; R50 := 0x7b998233
	695	[4288]	GETTABLE 	R51 R6 K91 ; R51 := R6["levelOverride"]
	696	[4288]	CALL     	R50 2 2 ; R50 := R50(R51)
	697	[4288]	TEST     	R50 1 ; if R50 then PC := 709
	698	[4288]	JMP      	709 ; PC := 709
	699	[4289]	GETGLOBAL	R50 K92 ; R50 := 0x4f6851ff
	700	[4289]	GETTABLE 	R51 R6 K93 ; R51 := R6["seed"]
	701	[4289]	CALL     	R50 2 1 ; R50(R51)
	702	[4290]	GETUPVAL 	R50 U7 ; R50 := U7
	703	[4290]	MOVE     	R51 R6 ; R51 := R6
	704	[4290]	MOVE     	R52 R0 ; R52 := R0
	705	[4290]	MOVE     	R53 R42 ; R53 := R42
	706	[4290]	MOVE     	R54 R8 ; R54 := R8
	707	[4290]	CALL     	R50 5 2 ; R50 := R50(R51,R52,R53,R54)
	708	[4290]	MOVE     	R49 R50 ; R49 := R50
	709	[4293]	LOADNIL  	R50 R50 ; R50 := nil
	710	[4294]	EQ       	0 R34 K94 ; if R34 ~= "GRINEER" then PC := 719
	711	[4294]	JMP      	719 ; PC := 719
	712	[4295]	MOVE     	R50 R34 ; R50 := R34
	713	[4296]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	714	[4296]	LOADK    	R53 K95 ; R53 := "/Lotus/Language/Game/Faction_GrineerUC"
	715	[4296]	OP_LOADBOOL	R54 0 0 ; R54 := false
	716	[4296]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	717	[4296]	MOVE     	R34 R51 ; R34 := R51
	718	[4296]	JMP      	784 ; PC := 784
	719	[4297]	EQ       	0 R34 K96 ; if R34 ~= "CORPUS" then PC := 728
	720	[4297]	JMP      	728 ; PC := 728
	721	[4298]	MOVE     	R50 R34 ; R50 := R34
	722	[4299]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	723	[4299]	LOADK    	R53 K97 ; R53 := "/Lotus/Language/Game/Faction_CorpusUC"
	724	[4299]	OP_LOADBOOL	R54 0 0 ; R54 := false
	725	[4299]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	726	[4299]	MOVE     	R34 R51 ; R34 := R51
	727	[4299]	JMP      	784 ; PC := 784
	728	[4300]	EQ       	0 R34 K98 ; if R34 ~= "INFESTATION" then PC := 737
	729	[4300]	JMP      	737 ; PC := 737
	730	[4301]	MOVE     	R50 R34 ; R50 := R34
	731	[4302]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	732	[4302]	LOADK    	R53 K99 ; R53 := "/Lotus/Language/Game/Faction_InfestationUC"
	733	[4302]	OP_LOADBOOL	R54 0 0 ; R54 := false
	734	[4302]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	735	[4302]	MOVE     	R34 R51 ; R34 := R51
	736	[4302]	JMP      	784 ; PC := 784
	737	[4303]	EQ       	0 R34 K85 ; if R34 ~= "TENNO" then PC := 746
	738	[4303]	JMP      	746 ; PC := 746
	739	[4304]	MOVE     	R50 R34 ; R50 := R34
	740	[4305]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	741	[4305]	LOADK    	R53 K65 ; R53 := "/Lotus/Language/Menu/Codex_Tenno"
	742	[4305]	OP_LOADBOOL	R54 0 0 ; R54 := false
	743	[4305]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	744	[4305]	MOVE     	R34 R51 ; R34 := R51
	745	[4305]	JMP      	784 ; PC := 784
	746	[4306]	EQ       	0 R34 K100 ; if R34 ~= "WILD" then PC := 754
	747	[4306]	JMP      	754 ; PC := 754
	748	[4307]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	749	[4307]	LOADK    	R53 K101 ; R53 := "/Lotus/Language/Game/Faction_WildUC"
	750	[4307]	OP_LOADBOOL	R54 0 0 ; R54 := false
	751	[4307]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	752	[4307]	MOVE     	R34 R51 ; R34 := R51
	753	[4307]	JMP      	784 ; PC := 784
	754	[4308]	EQ       	0 R34 K102 ; if R34 ~= "OROKIN" then PC := 763
	755	[4308]	JMP      	763 ; PC := 763
	756	[4309]	MOVE     	R50 R34 ; R50 := R34
	757	[4310]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	758	[4310]	LOADK    	R53 K103 ; R53 := "/Lotus/Language/Game/Faction_OrokinUC"
	759	[4310]	OP_LOADBOOL	R54 0 0 ; R54 := false
	760	[4310]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	761	[4310]	MOVE     	R34 R51 ; R34 := R51
	762	[4310]	JMP      	784 ; PC := 784
	763	[4311]	EQ       	0 R34 K104 ; if R34 ~= "REDVEIL" then PC := 771
	764	[4311]	JMP      	771 ; PC := 771
	765	[4312]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	766	[4312]	LOADK    	R53 K105 ; R53 := "/Lotus/Language/Game/Faction_RedVeilUC"
	767	[4312]	OP_LOADBOOL	R54 0 0 ; R54 := false
	768	[4312]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	769	[4312]	MOVE     	R34 R51 ; R34 := R51
	770	[4312]	JMP      	784 ; PC := 784
	771	[4313]	EQ       	0 R34 K106 ; if R34 ~= "SENTIENT" then PC := 779
	772	[4313]	JMP      	779 ; PC := 779
	773	[4314]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	774	[4314]	LOADK    	R53 K107 ; R53 := "/Lotus/Language/Game/Faction_SentientUC"
	775	[4314]	OP_LOADBOOL	R54 0 0 ; R54 := false
	776	[4314]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	777	[4314]	MOVE     	R34 R51 ; R34 := R51
	778	[4314]	JMP      	784 ; PC := 784
	779	[4316]	GETGLOBAL	R51 K50 ; R51 := 0x7f5022cf
	780	[4316]	GETTABLE 	R51 R51 K54 ; R51 := R51[0x3f3e4d12]
	781	[4316]	MOVE     	R52 R34 ; R52 := R34
	782	[4316]	CALL     	R51 2 2 ; R51 := R51(R52)
	783	[4316]	MOVE     	R34 R51 ; R34 := R51
	784	[4319]	EQ       	1 R17 K53 ; if R17 == nil then PC := 807
	785	[4319]	JMP      	807 ; PC := 807
	786	[4320]	GETTABLE 	R51 R17 K2 ; R51 := R17["name"]
	787	[4320]	GETGLOBAL	R52 K108 ; R52 := CETUS_NODE_TAG
	788	[4320]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 792
	789	[4320]	JMP      	792 ; PC := 792
	790	[4321]	LOADK    	R50 K109 ; R50 := "ostron"
	791	[4321]	JMP      	807 ; PC := 807
	792	[4322]	GETTABLE 	R51 R17 K2 ; R51 := R17["name"]
	793	[4322]	GETGLOBAL	R52 K110 ; R52 := FORTUNA_NODE_TAG
	794	[4322]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 798
	795	[4322]	JMP      	798 ; PC := 798
	796	[4323]	LOADK    	R50 K111 ; R50 := "solaris"
	797	[4323]	JMP      	807 ; PC := 807
	798	[4324]	GETTABLE 	R51 R17 K2 ; R51 := R17["name"]
	799	[4324]	GETGLOBAL	R52 K112 ; R52 := IRON_WAKE_NODE_TAG
	800	[4324]	EQ       	1 R51 R52 ; if R51 == R52 then PC := 806
	801	[4324]	JMP      	806 ; PC := 806
	802	[4324]	GETTABLE 	R51 R17 K2 ; R51 := R17["name"]
	803	[4324]	GETGLOBAL	R52 K83 ; R52 := APARTMENT_NODE_TAG
	804	[4324]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 807
	805	[4324]	JMP      	807 ; PC := 807
	806	[4325]	LOADK    	R50 K113 ; R50 := "tenno"
	807	[4329]	TEST     	R43 1 ; if R43 then PC := 811
	808	[4329]	JMP      	811 ; PC := 811
	809	[4329]	TEST     	R44 0 ; if not R44 then PC := 812
	810	[4329]	JMP      	812 ; PC := 812
	811	[4330]	LOADK    	R50 K113 ; R50 := "tenno"
	812	[4334]	GETUPVAL 	R51 U8 ; R51 := U8
	813	[4334]	MOVE     	R52 R6 ; R52 := R6
	814	[4334]	CALL     	R51 2 2 ; R51 := R51(R52)
	815	[4335]	TEST     	R51 0 ; if not R51 then PC := 818
	816	[4335]	JMP      	818 ; PC := 818
	817	[4336]	MOVE     	R34 R51 ; R34 := R51
	818	[4339]	GETTABLE 	R52 R6 K81 ; R52 := R6["missionType"]
	819	[4339]	EQ       	0 R52 K114 ; if R52 ~= 31.000000 then PC := 835
	820	[4339]	JMP      	835 ; PC := 835
	821	[4340]	SELF     	R52 R4 K37 ; R53 := R4; R52 := R4[0x42b04007]
	822	[4340]	LOADK    	R54 K115 ; R54 := "<RAILJACK>"
	823	[4340]	OP_LOADBOOL	R55 1 0 ; R55 := true
	824	[4340]	CALL     	R52 4 2 ; R52 := R52(R53,R54,R55)
	825	[4340]	LOADK    	R53 K39 ; R53 := " "
	826	[4340]	MOVE     	R54 R30 ; R54 := R30
	827	[4340]	LOADK    	R55 K116 ; R55 := " ("
	828	[4340]	SELF     	R56 R4 K37 ; R57 := R4; R56 := R4[0x42b04007]
	829	[4340]	LOADK    	R58 K117 ; R58 := "/Lotus/Language/Menu/RailjackTitle"
	830	[4340]	OP_LOADBOOL	R59 0 0 ; R59 := false
	831	[4340]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	832	[4340]	LOADK    	R57 K118 ; R57 := ")"
	833	[4340]	CONCAT   	R30 R52 R57 ; R30 := R52 .. R53 .. R54 .. R55 .. R56 .. R57
	834	[4340]	JMP      	868 ; PC := 868
	835	[4341]	GETTABLE 	R52 R6 K119 ; R52 := R6["isSharkwingMission"]
	836	[4341]	TEST     	R52 1 ; if R52 then PC := 855
	837	[4341]	JMP      	855 ; PC := 855
	838	[4342]	GETTABLE 	R52 R6 K120 ; R52 := R6["archwingRequired"]
	839	[4342]	TEST     	R52 0 ; if not R52 then PC := 868
	840	[4342]	JMP      	868 ; PC := 868
	841	[4343]	SELF     	R52 R4 K37 ; R53 := R4; R52 := R4[0x42b04007]
	842	[4343]	LOADK    	R54 K121 ; R54 := "<ARCHWING>"
	843	[4343]	OP_LOADBOOL	R55 1 0 ; R55 := true
	844	[4343]	CALL     	R52 4 2 ; R52 := R52(R53,R54,R55)
	845	[4343]	LOADK    	R53 K39 ; R53 := " "
	846	[4343]	MOVE     	R54 R30 ; R54 := R30
	847	[4343]	LOADK    	R55 K116 ; R55 := " ("
	848	[4343]	SELF     	R56 R4 K37 ; R57 := R4; R56 := R4[0x42b04007]
	849	[4343]	LOADK    	R58 K122 ; R58 := "/Lotus/Language/Menu/Loadout_Archwing"
	850	[4343]	OP_LOADBOOL	R59 0 0 ; R59 := false
	851	[4343]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	852	[4343]	LOADK    	R57 K118 ; R57 := ")"
	853	[4343]	CONCAT   	R30 R52 R57 ; R30 := R52 .. R53 .. R54 .. R55 .. R56 .. R57
	854	[4344]	JMP      	868 ; PC := 868
	855	[4346]	SELF     	R52 R4 K37 ; R53 := R4; R52 := R4[0x42b04007]
	856	[4346]	LOADK    	R54 K121 ; R54 := "<ARCHWING>"
	857	[4346]	OP_LOADBOOL	R55 1 0 ; R55 := true
	858	[4346]	CALL     	R52 4 2 ; R52 := R52(R53,R54,R55)
	859	[4346]	LOADK    	R53 K39 ; R53 := " "
	860	[4346]	MOVE     	R54 R30 ; R54 := R30
	861	[4346]	LOADK    	R55 K116 ; R55 := " ("
	862	[4346]	SELF     	R56 R4 K37 ; R57 := R4; R56 := R4[0x42b04007]
	863	[4346]	LOADK    	R58 K123 ; R58 := "/Lotus/Language/Menu/Sharkwing"
	864	[4346]	OP_LOADBOOL	R59 0 0 ; R59 := false
	865	[4346]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	866	[4346]	LOADK    	R57 K118 ; R57 := ")"
	867	[4346]	CONCAT   	R30 R52 R57 ; R30 := R52 .. R53 .. R54 .. R55 .. R56 .. R57
	868	[4349]	NEWTABLE 	R52 0 21 ; R52 := {}
	869	[4349]	SETTABLE 	R52 K124 R6 ; R52["mMission"] := R6
	870	[4349]	SETTABLE 	R52 K125 R48 ; R52["mFounders"] := R48
	871	[4349]	SETTABLE 	R52 K126 R33 ; R52["mTexture"] := R33
	872	[4349]	SETTABLE 	R52 K127 R49 ; R52["mLocationTexture"] := R49
	873	[4349]	SETTABLE 	R52 K20 R7 ; R52["mAlertInfo"] := R7
	874	[4349]	SETTABLE 	R52 K128 R9 ; R52["mSyndicateInfo"] := R9
	875	[4349]	SETTABLE 	R52 K129 R31 ; R52["mInvasionInfo"] := R31
	876	[4349]	SETTABLE 	R52 K130 R8 ; R52["mGoalInfo"] := R8
	877	[4349]	SETTABLE 	R52 K131 R10 ; R52["mSortieInfo"] := R10
	878	[4349]	SETTABLE 	R52 K132 R11 ; R52["mActiveMissionInfo"] := R11
	879	[4349]	SETTABLE 	R52 K133 R12 ; R52["mGhostTowerMissionInfo"] := R12
	880	[4349]	SETTABLE 	R52 K134 R13 ; R52["mEliteAlertMissionInfo"] := R13
	881	[4349]	SETTABLE 	R52 K135 R41 ; R52["mCardTag"] := R41
	882	[4349]	SETTABLE 	R52 K136 R30 ; R52["mName"] := R30
	883	[4349]	SETTABLE 	R52 K137 R40 ; R52["mRarity"] := R40
	884	[4349]	SETTABLE 	R52 K78 R34 ; R52["mDesc"] := R34
	885	[4349]	SETTABLE 	R52 K138 R35 ; R52["mDescText"] := R35
	886	[4349]	SETTABLE 	R52 K139 R39 ; R52["mNameText"] := R39
	887	[4349]	SETTABLE 	R52 K140 R32 ; R52["mNumMissions"] := R32
	888	[4349]	SETTABLE 	R52 K141 R36 ; R52["mDifficulty"] := R36
	889	[4349]	SETTABLE 	R52 K142 R37 ; R52["mLevelMin"] := R37
	890	[4349]	SETTABLE 	R52 K143 R38 ; R52["mLevelMax"] := R38
	891	[4349]	GETTABLE 	R53 R6 K145 ; R53 := R6["conclaveRange"]
	892	[4349]	GETTABLE 	R53 R53 K146 ; R53 := R53["minValue"]
	893	[4349]	SETTABLE 	R52 K144 R53 ; R52["mConclaveMin"] := R53
	894	[4349]	GETTABLE 	R53 R6 K145 ; R53 := R6["conclaveRange"]
	895	[4349]	GETTABLE 	R53 R53 K148 ; R53 := R53["maxValue"]
	896	[4349]	SETTABLE 	R52 K147 R53 ; R52["mConclaveMax"] := R53
	897	[4349]	SETTABLE 	R52 K149 R50 ; R52["mFactionTag"] := R50
	898	[4349]	RETURN   	R52 2 ; return R52 
	899	[4350]	RETURN   	R0 1 ; return 

function #228 <?:4352,4360> (19 instructions, 76 bytes at 0000025274F18B50)
2 params, 7 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[4353]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0x1fd6abd0]
	2	[4353]	GETGLOBAL	R4 K1 ; R4 := 0x0032441c
	3	[4353]	GETTABLE 	R4 R4 K2 ; R4 := R4["UIMovie_MeleeCombosMovie"]
	4	[4353]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	5	[4354]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	6	[4354]	MOVE     	R4 R2 ; R4 := R2
	7	[4354]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[4354]	TEST     	R3 1 ; if R3 then PC := 18
	9	[4354]	JMP      	18 ; PC := 18
	10	[4355]	GETGLOBAL	R3 K4 ; R3 := _T
	11	[4355]	SETTABLE 	R3 K5 R1 ; R3["StanceUpgradeInfo"] := R1
	12	[4356]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0xe4162eed]
	13	[4356]	LOADK    	R5 K7 ; R5 := "SetStanceUpgradeInfo"
	14	[4356]	LOADK    	R6 K5 ; R6 := "StanceUpgradeInfo"
	15	[4356]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	16	[4357]	GETGLOBAL	R3 K4 ; R3 := _T
	17	[4357]	SETTABLE 	R3 K5 K8 ; R3["StanceUpgradeInfo"] := nil
	18	[4359]	RETURN   	R2 2 ; return R2 
	19	[4360]	RETURN   	R0 1 ; return 

function #229 <?:4362,4409> (154 instructions, 616 bytes at 0000025274F18E10)
0 params, 21 slots, 0 upvalues, 0 locals, 31 constants, 0 functions
	1	[4363]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4363]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[4363]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4363]	TEST     	R0 1 ; if R0 then PC := 69
	5	[4363]	JMP      	69 ; PC := 69
	6	[4363]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[4363]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[4363]	GETGLOBAL	R2 K3 ; R2 := gLotusAttractModeGameRulesType
	9	[4363]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[4363]	TEST     	R0 0 ; if not R0 then PC := 69
	11	[4363]	JMP      	69 ; PC := 69
	12	[4363]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	13	[4363]	GETGLOBAL	R1 K4 ; R1 := 0x25d99d89
	14	[4363]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[4363]	TEST     	R0 1 ; if R0 then PC := 69
	16	[4363]	JMP      	69 ; PC := 69
	17	[4364]	GETGLOBAL	R0 K4 ; R0 := 0x25d99d89
	18	[4364]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x25a6e75e]
	19	[4364]	CALL     	R0 2 2 ; R0 := R0(R1)
	20	[4365]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	21	[4365]	MOVE     	R2 R0 ; R2 := R0
	22	[4365]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[4365]	TEST     	R1 1 ; if R1 then PC := 152
	24	[4365]	JMP      	152 ; PC := 152
	25	[4366]	SELF     	R1 R0 K6 ; R2 := R0; R1 := R0[0x566259e1]
	26	[4366]	LOADK    	R3 := 0.000000
	27	[4366]	SELF     	R4 R0 K8 ; R5 := R0; R4 := R0[0x4e457768]
	28	[4366]	LOADK    	R6 := 0.000000
	29	[4366]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	30	[4366]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	31	[4367]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	32	[4367]	MOVE     	R3 R1 ; R3 := R1
	33	[4367]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[4367]	TEST     	R2 1 ; if R2 then PC := 152
	35	[4367]	JMP      	152 ; PC := 152
	36	[4368]	SELF     	R2 R1 K9 ; R3 := R1; R2 := R1[0x2abbe722]
	37	[4368]	LOADK    	R4 := 3.000000
	38	[4368]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	39	[4368]	GETTABLE 	R2 R2 K10 ; R2 := R2["mItemId"]
	40	[4369]	SELF     	R3 R1 K9 ; R4 := R1; R3 := R1[0x2abbe722]
	41	[4369]	LOADK    	R5 := 3.000000
	42	[4369]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	43	[4369]	GETTABLE 	R3 R3 K11 ; R3 := R3["mModSlot"]
	44	[4370]	SELF     	R4 R0 K12 ; R5 := R0; R4 := R0[0x2f30b8db]
	45	[4370]	GETTABLE 	R6 R2 K13 ; R6 := R2["mId"]
	46	[4370]	MOVE     	R7 R3 ; R7 := R3
	47	[4370]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	48	[4372]	LOADK    	R5 := 1.000000
	49	[4372]	LEN      	R6 R4 ; R6 := # R4
	50	[4372]	LOADK    	R7 := 1.000000
	51	[4372]	FORPREP  	R5 67 ; R5 -= R7; PC := 67
	52	[4373]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	53	[4373]	GETTABLE 	R10 R4 R8 ; R10 := R4[R8]
	54	[4373]	GETTABLE 	R10 R10 K14 ; R10 := R10["mItemType"]
	55	[4373]	CALL     	R9 2 2 ; R9 := R9(R10)
	56	[4373]	TEST     	R9 1 ; if R9 then PC := 67
	57	[4373]	JMP      	67 ; PC := 67
	58	[4373]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	59	[4373]	GETTABLE 	R9 R9 K14 ; R9 := R9["mItemType"]
	60	[4373]	SELF     	R9 R9 K2 ; R10 := R9; R9 := R9[0xf2deaf69]
	61	[4373]	GETGLOBAL	R11 K15 ; R11 := gMeleeTreeType
	62	[4373]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	63	[4373]	TEST     	R9 0 ; if not R9 then PC := 67
	64	[4373]	JMP      	67 ; PC := 67
	65	[4374]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	66	[4374]	RETURN   	R9 2 ; return R9 
	67	[4372]	FORLOOP  	R5 52 ; R5 += R7; if R5 <= R6 then begin PC := 52; R8 := R5 end
	68	[4378]	JMP      	152 ; PC := 152
	69	[4379]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	70	[4379]	GETGLOBAL	R10 K16 ; R10 := 0x89326c93
	71	[4379]	CALL     	R9 2 2 ; R9 := R9(R10)
	72	[4379]	TEST     	R9 1 ; if R9 then PC := 152
	73	[4379]	JMP      	152 ; PC := 152
	74	[4380]	GETGLOBAL	R9 K16 ; R9 := 0x89326c93
	75	[4380]	SELF     	R9 R9 K17 ; R10 := R9; R9 := R9[0x78298275]
	76	[4380]	CALL     	R9 2 2 ; R9 := R9(R10)
	77	[4381]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	78	[4381]	MOVE     	R11 R9 ; R11 := R9
	79	[4381]	CALL     	R10 2 2 ; R10 := R10(R11)
	80	[4381]	TEST     	R10 1 ; if R10 then PC := 152
	81	[4381]	JMP      	152 ; PC := 152
	82	[4382]	SELF     	R10 R9 K18 ; R11 := R9; R10 := R9[0xde321e6f]
	83	[4382]	CALL     	R10 2 2 ; R10 := R10(R11)
	84	[4382]	SELF     	R10 R10 K19 ; R11 := R10; R10 := R10[0xbb4a3d82]
	85	[4382]	CALL     	R10 2 2 ; R10 := R10(R11)
	86	[4383]	GETGLOBAL	R11 K0 ; R11 := 0x7b998233
	87	[4383]	MOVE     	R12 R10 ; R12 := R10
	88	[4383]	CALL     	R11 2 2 ; R11 := R11(R12)
	89	[4383]	TEST     	R11 1 ; if R11 then PC := 152
	90	[4383]	JMP      	152 ; PC := 152
	91	[4384]	SELF     	R11 R10 K20 ; R12 := R10; R11 := R10[0x0ad758cb]
	92	[4384]	CALL     	R11 2 2 ; R11 := R11(R12)
	93	[4386]	LOADK    	R12 := 1.000000
	94	[4386]	MOVE     	R13 R11 ; R13 := R11
	95	[4386]	LOADK    	R14 := 1.000000
	96	[4386]	FORPREP  	R12 120 ; R12 -= R14; PC := 120
	97	[4387]	SELF     	R16 R10 K21 ; R17 := R10; R16 := R10[0xfef27732]
	98	[4387]	SUB      	R18 R15 K22 ; R18 := R15 - 1.000000
	99	[4387]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	100	[4389]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	101	[4389]	MOVE     	R18 R16 ; R18 := R16
	102	[4389]	CALL     	R17 2 2 ; R17 := R17(R18)
	103	[4389]	TEST     	R17 1 ; if R17 then PC := 120
	104	[4389]	JMP      	120 ; PC := 120
	105	[4389]	SELF     	R17 R16 K2 ; R18 := R16; R17 := R16[0xf2deaf69]
	106	[4389]	GETGLOBAL	R19 K15 ; R19 := gMeleeTreeType
	107	[4389]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	108	[4389]	TEST     	R17 0 ; if not R17 then PC := 120
	109	[4389]	JMP      	120 ; PC := 120
	110	[4390]	GETGLOBAL	R17 K7 ; R17 := 0x6c97a788
	111	[4390]	GETTABLE 	R17 R17 K23 ; R17 := R17[0x1aba4d9e]
	112	[4390]	CALL     	R17 1 2 ; R17 := R17()
	113	[4391]	SELF     	R18 R16 K24 ; R19 := R16; R18 := R16[0xcde10c4a]
	114	[4391]	CALL     	R18 2 2 ; R18 := R18(R19)
	115	[4391]	SETTABLE 	R17 K14 R18 ; R17["mItemType"] := R18
	116	[4392]	SELF     	R18 R16 K26 ; R19 := R16; R18 := R16[0x7b0c20c2]
	117	[4392]	CALL     	R18 2 2 ; R18 := R18(R19)
	118	[4392]	SETTABLE 	R17 K25 R18 ; R17["mUpgradeFingerprint"] := R18
	119	[4393]	RETURN   	R17 2 ; return R17 
	120	[4386]	FORLOOP  	R12 97 ; R12 += R14; if R12 <= R13 then begin PC := 97; R15 := R12 end
	121	[4397]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	122	[4397]	GETGLOBAL	R19 K1 ; R19 := 0xbe190284
	123	[4397]	CALL     	R18 2 2 ; R18 := R18(R19)
	124	[4397]	TEST     	R18 1 ; if R18 then PC := 152
	125	[4397]	JMP      	152 ; PC := 152
	126	[4399]	GETGLOBAL	R18 K1 ; R18 := 0xbe190284
	127	[4399]	SELF     	R18 R18 K2 ; R19 := R18; R18 := R18[0xf2deaf69]
	128	[4399]	GETGLOBAL	R20 K27 ; R20 := gLotusPvpGameRulesType
	129	[4399]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	130	[4399]	TEST     	R18 0 ; if not R18 then PC := 137
	131	[4399]	JMP      	137 ; PC := 137
	132	[4399]	GETGLOBAL	R18 K1 ; R18 := 0xbe190284
	133	[4399]	SELF     	R18 R18 K28 ; R19 := R18; R18 := R18[0xa52237bc]
	134	[4399]	CALL     	R18 2 2 ; R18 := R18(R19)
	135	[4399]	TEST     	R18 1 ; if R18 then PC := 143
	136	[4399]	JMP      	143 ; PC := 143
	137	[4399]	GETGLOBAL	R18 K1 ; R18 := 0xbe190284
	138	[4399]	SELF     	R18 R18 K2 ; R19 := R18; R18 := R18[0xf2deaf69]
	139	[4399]	GETGLOBAL	R20 K29 ; R20 := gLotusFightingGameRulesType
	140	[4399]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	141	[4399]	TEST     	R18 0 ; if not R18 then PC := 152
	142	[4399]	JMP      	152 ; PC := 152
	143	[4400]	GETGLOBAL	R18 K7 ; R18 := 0x6c97a788
	144	[4400]	GETTABLE 	R18 R18 K23 ; R18 := R18[0x1aba4d9e]
	145	[4400]	CALL     	R18 1 2 ; R18 := R18()
	146	[4401]	SELF     	R19 R10 K30 ; R20 := R10; R19 := R10[0xe3ca779e]
	147	[4401]	CALL     	R19 2 2 ; R19 := R19(R20)
	148	[4401]	SELF     	R19 R19 K24 ; R20 := R19; R19 := R19[0xcde10c4a]
	149	[4401]	CALL     	R19 2 2 ; R19 := R19(R20)
	150	[4401]	SETTABLE 	R18 K14 R19 ; R18["mItemType"] := R19
	151	[4402]	RETURN   	R18 2 ; return R18 
	152	[4408]	LOADNIL  	R19 R19 ; R19 := nil
	153	[4408]	RETURN   	R19 2 ; return R19 
	154	[4409]	RETURN   	R0 1 ; return 

function #230 <?:4411,4428> (39 instructions, 156 bytes at 0000025274F19610)
2 params, 11 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[4412]	GETGLOBAL	R2 K0 ; R2 := 0x7ed0a956
	2	[4412]	LOADK    	R3 K1 ; R3 := "/Lotus/Types/LotusMeleeTree/LotusMeleeTree"
	3	[4412]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[4414]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	5	[4414]	MOVE     	R4 R0 ; R4 := R0
	6	[4414]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[4414]	TEST     	R3 1 ; if R3 then PC := 39
	8	[4414]	JMP      	39 ; PC := 39
	9	[4415]	LOADK    	R3 := 0.000000
	10	[4416]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	11	[4416]	SELF     	R5 R0 K3 ; R6 := R0; R5 := R0[0xfef27732]
	12	[4416]	MOVE     	R7 R3 ; R7 := R3
	13	[4416]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	14	[4416]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	15	[4416]	TEST     	R4 1 ; if R4 then PC := 39
	16	[4416]	JMP      	39 ; PC := 39
	17	[4417]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0xfef27732]
	18	[4417]	MOVE     	R6 R3 ; R6 := R3
	19	[4417]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	20	[4418]	SELF     	R5 R4 K4 ; R6 := R4; R5 := R4[0xf2deaf69]
	21	[4418]	GETGLOBAL	R7 K5 ; R7 := gLotusArtifactUpgradeType
	22	[4418]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	23	[4419]	SELF     	R6 R4 K4 ; R7 := R4; R6 := R4[0xf2deaf69]
	24	[4419]	MOVE     	R8 R2 ; R8 := R2
	25	[4419]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	26	[4421]	TEST     	R5 0 ; if not R5 then PC := 37
	27	[4421]	JMP      	37 ; PC := 37
	28	[4421]	TEST     	R6 0 ; if not R6 then PC := 32
	29	[4421]	JMP      	32 ; PC := 32
	30	[4421]	TEST     	R1 1 ; if R1 then PC := 37
	31	[4421]	JMP      	37 ; PC := 37
	32	[4422]	SELF     	R7 R0 K6 ; R8 := R0; R7 := R0[0x12dd9da2]
	33	[4422]	MOVE     	R9 R4 ; R9 := R4
	34	[4422]	OP_LOADBOOL	R10 1 0 ; R10 := true
	35	[4422]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	36	[4422]	JMP      	10 ; PC := 10
	37	[4424]	ADD      	R3 R3 K7 ; R3 := R3 + 1.000000
	38	[4425]	JMP      	10 ; PC := 10
	39	[4428]	RETURN   	R0 1 ; return 

function #231 <?:4430,4462> (105 instructions, 420 bytes at 0000025274F198F0)
2 params, 4 slots, 0 upvalues, 0 locals, 32 constants, 0 functions
	1	[4431]	EQ       	0 R0 K0 ; if R0 ~= "Assassination" then PC := 8
	2	[4431]	JMP      	8 ; PC := 8
	3	[4432]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	4	[4432]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	5	[4432]	GETTABLE 	R2 R2 K3 ; R2 := R2[1.000000]
	6	[4432]	RETURN   	R2 2 ; return R2 
	7	[4432]	JMP      	101 ; PC := 101
	8	[4433]	EQ       	0 R0 K4 ; if R0 ~= "Capture" then PC := 15
	9	[4433]	JMP      	15 ; PC := 15
	10	[4434]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	11	[4434]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	12	[4434]	GETTABLE 	R2 R2 K5 ; R2 := R2[2.000000]
	13	[4434]	RETURN   	R2 2 ; return R2 
	14	[4434]	JMP      	101 ; PC := 101
	15	[4435]	EQ       	0 R0 K6 ; if R0 ~= "PVP" then PC := 22
	16	[4435]	JMP      	22 ; PC := 22
	17	[4436]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	18	[4436]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	19	[4436]	GETTABLE 	R2 R2 K7 ; R2 := R2[3.000000]
	20	[4436]	RETURN   	R2 2 ; return R2 
	21	[4436]	JMP      	101 ; PC := 101
	22	[4437]	EQ       	0 R0 K8 ; if R0 ~= "Deception" then PC := 29
	23	[4437]	JMP      	29 ; PC := 29
	24	[4438]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	25	[4438]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	26	[4438]	GETTABLE 	R2 R2 K9 ; R2 := R2[4.000000]
	27	[4438]	RETURN   	R2 2 ; return R2 
	28	[4438]	JMP      	101 ; PC := 101
	29	[4439]	EQ       	0 R0 K10 ; if R0 ~= "Defense" then PC := 36
	30	[4439]	JMP      	36 ; PC := 36
	31	[4440]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	32	[4440]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	33	[4440]	GETTABLE 	R2 R2 K11 ; R2 := R2[6.000000]
	34	[4440]	RETURN   	R2 2 ; return R2 
	35	[4440]	JMP      	101 ; PC := 101
	36	[4441]	EQ       	0 R0 K12 ; if R0 ~= "Exterminate" then PC := 46
	37	[4441]	JMP      	46 ; PC := 46
	38	[4441]	EQ       	1 R1 K13 ; if R1 == nil then PC := 46
	39	[4441]	JMP      	46 ; PC := 46
	40	[4442]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	41	[4442]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	42	[4442]	ADD      	R3 K14 R1 ; R3 := 7.000000 + R1
	43	[4442]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	44	[4442]	RETURN   	R2 2 ; return R2 
	45	[4442]	JMP      	101 ; PC := 101
	46	[4443]	EQ       	0 R0 K15 ; if R0 ~= "Hijack" then PC := 53
	47	[4443]	JMP      	53 ; PC := 53
	48	[4444]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	49	[4444]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	50	[4444]	GETTABLE 	R2 R2 K16 ; R2 := R2[10.000000]
	51	[4444]	RETURN   	R2 2 ; return R2 
	52	[4444]	JMP      	101 ; PC := 101
	53	[4445]	EQ       	0 R0 K17 ; if R0 ~= "Territory" then PC := 60
	54	[4445]	JMP      	60 ; PC := 60
	55	[4446]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	56	[4446]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	57	[4446]	GETTABLE 	R2 R2 K18 ; R2 := R2[11.000000]
	58	[4446]	RETURN   	R2 2 ; return R2 
	59	[4446]	JMP      	101 ; PC := 101
	60	[4447]	EQ       	0 R0 K19 ; if R0 ~= "MobileDefense" then PC := 67
	61	[4447]	JMP      	67 ; PC := 67
	62	[4448]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	63	[4448]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	64	[4448]	GETTABLE 	R2 R2 K20 ; R2 := R2[12.000000]
	65	[4448]	RETURN   	R2 2 ; return R2 
	66	[4448]	JMP      	101 ; PC := 101
	67	[4449]	EQ       	0 R0 K21 ; if R0 ~= "Rescue" then PC := 74
	68	[4449]	JMP      	74 ; PC := 74
	69	[4450]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	70	[4450]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	71	[4450]	GETTABLE 	R2 R2 K22 ; R2 := R2[13.000000]
	72	[4450]	RETURN   	R2 2 ; return R2 
	73	[4450]	JMP      	101 ; PC := 101
	74	[4451]	EQ       	0 R0 K23 ; if R0 ~= "Sabotage" then PC := 81
	75	[4451]	JMP      	81 ; PC := 81
	76	[4452]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	77	[4452]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	78	[4452]	GETTABLE 	R2 R2 K24 ; R2 := R2[14.000000]
	79	[4452]	RETURN   	R2 2 ; return R2 
	80	[4452]	JMP      	101 ; PC := 101
	81	[4453]	EQ       	0 R0 K25 ; if R0 ~= "Spy" then PC := 88
	82	[4453]	JMP      	88 ; PC := 88
	83	[4454]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	84	[4454]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	85	[4454]	GETTABLE 	R2 R2 K26 ; R2 := R2[15.000000]
	86	[4454]	RETURN   	R2 2 ; return R2 
	87	[4454]	JMP      	101 ; PC := 101
	88	[4455]	EQ       	0 R0 K27 ; if R0 ~= "Survival" then PC := 95
	89	[4455]	JMP      	95 ; PC := 95
	90	[4456]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	91	[4456]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	92	[4456]	GETTABLE 	R2 R2 K28 ; R2 := R2[16.000000]
	93	[4456]	RETURN   	R2 2 ; return R2 
	94	[4456]	JMP      	101 ; PC := 101
	95	[4457]	EQ       	0 R0 K29 ; if R0 ~= "Void" then PC := 101
	96	[4457]	JMP      	101 ; PC := 101
	97	[4458]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	98	[4458]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	99	[4458]	GETTABLE 	R2 R2 K30 ; R2 := R2[17.000000]
	100	[4458]	RETURN   	R2 2 ; return R2 
	101	[4461]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	102	[4461]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	103	[4461]	GETTABLE 	R2 R2 K31 ; R2 := R2[5.000000]
	104	[4461]	RETURN   	R2 2 ; return R2 
	105	[4462]	RETURN   	R0 1 ; return 

function #232 <?:4464,4546> (146 instructions, 584 bytes at 0000025274F1A210)
4 params, 30 slots, 0 upvalues, 0 locals, 25 constants, 0 functions
	1	[4465]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[4465]	MOVE     	R5 R0 ; R5 := R0
	3	[4465]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[4465]	TEST     	R4 1 ; if R4 then PC := 11
	5	[4465]	JMP      	11 ; PC := 11
	6	[4465]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	7	[4465]	MOVE     	R5 R1 ; R5 := R1
	8	[4465]	CALL     	R4 2 2 ; R4 := R4(R5)
	9	[4465]	TEST     	R4 0 ; if not R4 then PC := 13
	10	[4465]	JMP      	13 ; PC := 13
	11	[4466]	LOADNIL  	R4 R7 ; R4 := R5 := R6 := R7 := nil
	12	[4466]	RETURN   	R4 5 ; return R4, R5, R6, R7 
	13	[4469]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x25a6e75e]
	14	[4469]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[4470]	SELF     	R5 R4 K2 ; R6 := R4; R5 := R4[0xe9768ed0]
	16	[4470]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[4472]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	18	[4472]	MOVE     	R7 R5 ; R7 := R5
	19	[4472]	CALL     	R6 2 2 ; R6 := R6(R7)
	20	[4472]	TEST     	R6 0 ; if not R6 then PC := 24
	21	[4472]	JMP      	24 ; PC := 24
	22	[4473]	LOADNIL  	R6 R9 ; R6 := R7 := R8 := R9 := nil
	23	[4473]	RETURN   	R6 5 ; return R6, R7, R8, R9 
	24	[4476]	SELF     	R6 R1 K3 ; R7 := R1; R6 := R1[0x8a0f9f88]
	25	[4476]	CALL     	R6 2 2 ; R6 := R6(R7)
	26	[4478]	GETGLOBAL	R7 K4 ; R7 := 0xc8802016
	27	[4478]	MOVE     	R8 R5 ; R8 := R5
	28	[4478]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	29	[4478]	JMP      	142 ; PC := 142
	30	[4479]	GETTABLE 	R12 R11 K5 ; R12 := R11["mItemType"]
	31	[4479]	EQ       	0 R12 R1 ; if R12 ~= R1 then PC := 142
	32	[4479]	JMP      	142 ; PC := 142
	33	[4480]	LOADK    	R12 := -1.000000
	34	[4482]	GETTABLE 	R13 R11 K6 ; R13 := R11["mProgress"]
	35	[4483]	TEST     	R3 0 ; if not R3 then PC := 44
	36	[4483]	JMP      	44 ; PC := 44
	37	[4484]	GETGLOBAL	R14 K7 ; R14 := 0x3d106989
	38	[4484]	LOADK    	R15 K8 ; R15 := "_GetQuestInfo: progress - "
	39	[4484]	GETGLOBAL	R16 K9 ; R16 := 0x64fb1586
	40	[4484]	LEN      	R17 R13 ; R17 := # R13
	41	[4484]	CALL     	R16 2 2 ; R16 := R16(R17)
	42	[4484]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	43	[4484]	CALL     	R14 2 1 ; R14(R15)
	44	[4486]	LEN      	R14 R13 ; R14 := # R13
	45	[4486]	LT       	0 K10 R14 ; if 0.000000 >= R14 then PC := 58
	46	[4486]	JMP      	58 ; PC := 58
	47	[4487]	GETTABLE 	R14 R13 K11 ; R14 := R13[1.000000]
	48	[4487]	GETTABLE 	R12 R14 K12 ; R12 := R14["mCompletion"]
	49	[4488]	TEST     	R3 0 ; if not R3 then PC := 58
	50	[4488]	JMP      	58 ; PC := 58
	51	[4489]	GETGLOBAL	R14 K7 ; R14 := 0x3d106989
	52	[4489]	LOADK    	R15 K13 ; R15 := "_GetQuestInfo: stage 1 completion - "
	53	[4489]	GETGLOBAL	R16 K9 ; R16 := 0x64fb1586
	54	[4489]	MOVE     	R17 R12 ; R17 := R12
	55	[4489]	CALL     	R16 2 2 ; R16 := R16(R17)
	56	[4489]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	57	[4489]	CALL     	R14 2 1 ; R14(R15)
	58	[4493]	LOADK    	R14 := 0.000000
	59	[4494]	LE       	0 K10 R12 ; if 0.000000 > R12 then PC := 93
	60	[4494]	JMP      	93 ; PC := 93
	61	[4495]	LEN      	R15 R13 ; R15 := # R13
	62	[4495]	LT       	0 R15 R6 ; if R15 >= R6 then PC := 78
	63	[4495]	JMP      	78 ; PC := 78
	64	[4497]	GETGLOBAL	R15 K4 ; R15 := 0xc8802016
	65	[4497]	MOVE     	R16 R13 ; R16 := R13
	66	[4497]	CALL     	R15 2 4 ; R15,R16,R17 := R15(R16)
	67	[4497]	JMP      	74 ; PC := 74
	68	[4498]	GETTABLE 	R20 R19 K12 ; R20 := R19["mCompletion"]
	69	[4498]	LT       	0 K14 R20 ; if -1.000000 >= R20 then PC := 76
	70	[4498]	JMP      	76 ; PC := 76
	71	[4499]	MOVE     	R14 R18 ; R14 := R18
	72	[4499]	JMP      	74 ; PC := 74
	73	[4501]	JMP      	76 ; PC := 76
	74	[4497]	TFORLOOP 	R15 2 ; R18,R19 := R15(R16,R17); if R18 ~= nil then begin PC = 68; R17 := R18 end
	75	[4502]	JMP      	68 ; PC := 68
	76	[4504]	ADD      	R14 R14 K11 ; R14 := R14 + 1.000000
	77	[4504]	JMP      	93 ; PC := 93
	78	[4507]	LOADK    	R20 := 1.000000
	79	[4507]	GETGLOBAL	R21 K15 ; R21 := 0x5bced4c4
	80	[4507]	GETTABLE 	R21 R21 K16 ; R21 := R21[0xac1b386a]
	81	[4507]	LEN      	R22 R13 ; R22 := # R13
	82	[4507]	MOVE     	R23 R6 ; R23 := R6
	83	[4507]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	84	[4507]	LOADK    	R22 := 1.000000
	85	[4507]	FORPREP  	R20 92 ; R20 -= R22; PC := 92
	86	[4508]	GETTABLE 	R24 R13 R23 ; R24 := R13[R23]
	87	[4508]	GETTABLE 	R24 R24 K12 ; R24 := R24["mCompletion"]
	88	[4508]	LT       	0 R24 R12 ; if R24 >= R12 then PC := 92
	89	[4508]	JMP      	92 ; PC := 92
	90	[4509]	MOVE     	R14 R23 ; R14 := R23
	91	[4510]	JMP      	93 ; PC := 93
	92	[4507]	FORLOOP  	R20 86 ; R20 += R22; if R20 <= R21 then begin PC := 86; R23 := R20 end
	93	[4516]	TEST     	R3 0 ; if not R3 then PC := 102
	94	[4516]	JMP      	102 ; PC := 102
	95	[4517]	GETGLOBAL	R24 K7 ; R24 := 0x3d106989
	96	[4517]	LOADK    	R25 K17 ; R25 := "_GetQuestInfo: difficulty (A) - "
	97	[4517]	GETGLOBAL	R26 K9 ; R26 := 0x64fb1586
	98	[4517]	MOVE     	R27 R12 ; R27 := R12
	99	[4517]	CALL     	R26 2 2 ; R26 := R26(R27)
	100	[4517]	CONCAT   	R25 R25 R26 ; R25 := R25 .. R26
	101	[4517]	CALL     	R24 2 1 ; R24(R25)
	102	[4520]	LT       	0 R12 K10 ; if R12 >= 0.000000 then PC := 107
	103	[4520]	JMP      	107 ; PC := 107
	104	[4522]	LOADK    	R14 := 1.000000
	105	[4523]	LOADK    	R12 := 0.000000
	106	[4523]	JMP      	111 ; PC := 111
	107	[4524]	EQ       	0 R14 K10 ; if R14 ~= 0.000000 then PC := 111
	108	[4524]	JMP      	111 ; PC := 111
	109	[4526]	ADD      	R12 R12 K11 ; R12 := R12 + 1.000000
	110	[4527]	LOADK    	R14 := 1.000000
	111	[4530]	TEST     	R3 0 ; if not R3 then PC := 124
	112	[4530]	JMP      	124 ; PC := 124
	113	[4531]	GETGLOBAL	R24 K7 ; R24 := 0x3d106989
	114	[4531]	LOADK    	R25 K18 ; R25 := "_GetQuestInfo: difficulty (B) - "
	115	[4531]	GETGLOBAL	R26 K9 ; R26 := 0x64fb1586
	116	[4531]	MOVE     	R27 R12 ; R27 := R12
	117	[4531]	CALL     	R26 2 2 ; R26 := R26(R27)
	118	[4531]	LOADK    	R27 K19 ; R27 := ", mission index="
	119	[4531]	GETGLOBAL	R28 K9 ; R28 := 0x64fb1586
	120	[4531]	MOVE     	R29 R14 ; R29 := R14
	121	[4531]	CALL     	R28 2 2 ; R28 := R28(R29)
	122	[4531]	CONCAT   	R25 R25 R28 ; R25 := R25 .. R26 .. R27 .. R28
	123	[4531]	CALL     	R24 2 1 ; R24(R25)
	124	[4534]	LOADNIL  	R24 R24 ; R24 := nil
	125	[4535]	TEST     	R2 0 ; if not R2 then PC := 137
	126	[4535]	JMP      	137 ; PC := 137
	127	[4536]	SELF     	R25 R1 K20 ; R26 := R1; R25 := R1[0xe975bacb]
	128	[4536]	SUB      	R27 R14 K11 ; R27 := R14 - 1.000000
	129	[4536]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	130	[4536]	TEST     	R25 0 ; if not R25 then PC := 137
	131	[4536]	JMP      	137 ; PC := 137
	132	[4537]	SELF     	R25 R1 K21 ; R26 := R1; R25 := R1[0x42700bd0]
	133	[4537]	CALL     	R25 2 2 ; R25 := R25(R26)
	134	[4537]	GETTABLE 	R25 R25 R14 ; R25 := R25[R14]
	135	[4537]	GETTABLE 	R25 R25 K22 ; R25 := R25["mMainMission"]
	136	[4537]	GETTABLE 	R24 R25 K23 ; R24 := R25["mKey"]
	137	[4541]	MOVE     	R25 R14 ; R25 := R14
	138	[4541]	MOVE     	R26 R12 ; R26 := R12
	139	[4541]	GETTABLE 	R27 R11 K24 ; R27 := R11["mCanProgressQuest"]
	140	[4541]	MOVE     	R28 R24 ; R28 := R24
	141	[4541]	RETURN   	R25 5 ; return R25, R26, R27, R28 
	142	[4478]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 30; R9 := R10 end
	143	[4542]	JMP      	30 ; PC := 30
	144	[4545]	LOADNIL  	R25 R28 ; R25 := R26 := R27 := R28 := nil
	145	[4545]	RETURN   	R25 5 ; return R25, R26, R27, R28 
	146	[4546]	RETURN   	R0 1 ; return 

function #233 <?:4548,4550> (8 instructions, 32 bytes at 0000025274F1AB70)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4549]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[4549]	MOVE     	R5 R0 ; R5 := R0
	3	[4549]	MOVE     	R6 R1 ; R6 := R1
	4	[4549]	MOVE     	R7 R2 ; R7 := R2
	5	[4549]	MOVE     	R8 R3 ; R8 := R3
	6	[4549]	TAILCALL 	R4 5 0 ; R4,... := R4(R5,R6,R7,R8)
	7	[4549]	RETURN   	R4 0 ; return R4,... 
	8	[4550]	RETURN   	R0 1 ; return 

function #234 <?:4552,4569> (33 instructions, 132 bytes at 0000025274F1AC60)
1 param, 7 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[4553]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4553]	MOVE     	R2 R0 ; R2 := R0
	3	[4553]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4553]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[4553]	JMP      	8 ; PC := 8
	6	[4554]	LOADNIL  	R1 R4 ; R1 := R2 := R3 := R4 := nil
	7	[4554]	RETURN   	R1 5 ; return R1, R2, R3, R4 
	8	[4557]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x25a6e75e]
	9	[4557]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[4559]	GETGLOBAL	R2 K2 ; R2 := _T
	11	[4559]	GETTABLE 	R2 R2 K3 ; R2 := R2["ActiveQuestLoaded"]
	12	[4559]	TEST     	R2 1 ; if R2 then PC := 16
	13	[4559]	JMP      	16 ; PC := 16
	14	[4560]	LOADNIL  	R2 R5 ; R2 := R3 := R4 := R5 := nil
	15	[4560]	RETURN   	R2 5 ; return R2, R3, R4, R5 
	16	[4563]	GETGLOBAL	R2 K4 ; R2 := 0xb009bbc6
	17	[4563]	SELF     	R3 R1 K5 ; R4 := R1; R3 := R1[0x8e7c3b5e]
	18	[4563]	CALL     	R3 2 0 ; R3,... := R3(R4)
	19	[4563]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	20	[4564]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	21	[4564]	MOVE     	R4 R2 ; R4 := R2
	22	[4564]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[4564]	TEST     	R3 0 ; if not R3 then PC := 27
	24	[4564]	JMP      	27 ; PC := 27
	25	[4565]	LOADNIL  	R3 R6 ; R3 := R4 := R5 := R6 := nil
	26	[4565]	RETURN   	R3 5 ; return R3, R4, R5, R6 
	27	[4568]	MOVE     	R3 R2 ; R3 := R2
	28	[4568]	GETUPVAL 	R4 U0 ; R4 := U0
	29	[4568]	MOVE     	R5 R0 ; R5 := R0
	30	[4568]	MOVE     	R6 R2 ; R6 := R2
	31	[4568]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	32	[4568]	RETURN   	R3 0 ; return R3,... 
	33	[4569]	RETURN   	R0 1 ; return 

function #235 <?:4571,4573> (5 instructions, 20 bytes at 0000025274F1AEE0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4572]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4572]	MOVE     	R2 R0 ; R2 := R0
	3	[4572]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[4572]	RETURN   	R1 0 ; return R1,... 
	5	[4573]	RETURN   	R0 1 ; return 

function #236 <?:4575,4578> (15 instructions, 60 bytes at 0000025274F1AFD0)
1 param, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[4576]	TEST     	R0 1 ; if R0 then PC := 4
	2	[4576]	JMP      	4 ; PC := 4
	3	[4576]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	4	[4577]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[4577]	MOVE     	R2 R0 ; R2 := R0
	6	[4577]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[4577]	TEST     	R1 1 ; if R1 then PC := 12
	8	[4577]	JMP      	12 ; PC := 12
	9	[4577]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x293ec9c4]
	10	[4577]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[4577]	JMP      	14 ; PC := 14
	12	[4577]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 13
	13	[4577]	OP_LOADBOOL	R1 1 0 ; R1 := true
	14	[4577]	RETURN   	R1 2 ; return R1 
	15	[4578]	RETURN   	R0 1 ; return 

function #237 <?:4580,4582> (5 instructions, 20 bytes at 0000025274F1B140)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4581]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4581]	MOVE     	R2 R0 ; R2 := R0
	3	[4581]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[4581]	RETURN   	R1 0 ; return R1,... 
	5	[4582]	RETURN   	R0 1 ; return 

function #238 <?:4584,4681> (100 instructions, 400 bytes at 0000025274F1B230)
3 params, 20 slots, 2 upvalues, 0 locals, 26 constants, 2 functions
	1	[4585]	GETGLOBAL	R3 K0 ; R3 := 0x25d99d89
	2	[4586]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	3	[4586]	MOVE     	R5 R3 ; R5 := R3
	4	[4586]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[4586]	TEST     	R4 0 ; if not R4 then PC := 8
	6	[4586]	JMP      	8 ; PC := 8
	7	[4587]	RETURN   	R0 2 ; return R0 
	8	[4590]	SELF     	R4 R3 K2 ; R5 := R3; R4 := R3[0x25a6e75e]
	9	[4590]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[4590]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0x8f27d10c]
	11	[4590]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[4591]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	13	[4591]	MOVE     	R6 R4 ; R6 := R4
	14	[4591]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[4591]	TEST     	R5 1 ; if R5 then PC := 100
	16	[4591]	JMP      	100 ; PC := 100
	17	[4593]	SELF     	R5 R3 K4 ; R6 := R3; R5 := R3[0x69727e0b]
	18	[4593]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[4594]	GETTABLE 	R6 R5 K5 ; R6 := R5["mGoals"]
	20	[4645]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	21	[4645]	GETUPVAL 	R0 U0 ; R0 := U0
	22	[4645]	MOVE     	R0 R6 ; R0 := R6
	23	[4645]	MOVE     	R0 R3 ; R0 := R3
	24	[4645]	MOVE     	R0 R1 ; R0 := R1
	25	[4647]	LOADK    	R8 := 1.000000
	26	[4647]	LEN      	R9 R4 ; R9 := # R4
	27	[4647]	LOADK    	R10 := 1.000000
	28	[4647]	FORPREP  	R8 93 ; R8 -= R10; PC := 93
	29	[4648]	GETTABLE 	R12 R4 R11 ; R12 := R4[R11]
	30	[4650]	MOVE     	R13 R7 ; R13 := R7
	31	[4650]	MOVE     	R14 R12 ; R14 := R12
	32	[4650]	MOVE     	R15 R6 ; R15 := R6
	33	[4650]	MOVE     	R16 R1 ; R16 := R1
	34	[4650]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	35	[4652]	GETGLOBAL	R14 K1 ; R14 := 0x7b998233
	36	[4652]	MOVE     	R15 R13 ; R15 := R13
	37	[4652]	CALL     	R14 2 2 ; R14 := R14(R15)
	38	[4652]	TEST     	R14 1 ; if R14 then PC := 93
	39	[4652]	JMP      	93 ; PC := 93
	40	[4653]	NEWTABLE 	R14 0 5 ; R14 := {}
	41	[4655]	SETTABLE 	R14 K6 R12 ; R14["Key"] := R12
	42	[4656]	SETTABLE 	R14 K7 R13 ; R14["Type"] := R13
	43	[4657]	GETGLOBAL	R15 K9 ; R15 := 0x603636ad
	44	[4657]	GETGLOBAL	R16 K10 ; R16 := 0x64fb1586
	45	[4657]	SELF     	R17 R13 K11 ; R18 := R13; R17 := R13[0xd3a9d01f]
	46	[4657]	CALL     	R17 2 0 ; R17,... := R17(R18)
	47	[4657]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	48	[4657]	OP_LOADBOOL	R17 0 0 ; R17 := false
	49	[4657]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	50	[4657]	SETTABLE 	R14 K8 R15 ; R14["Name"] := R15
	51	[4658]	GETGLOBAL	R15 K9 ; R15 := 0x603636ad
	52	[4658]	GETGLOBAL	R16 K10 ; R16 := 0x64fb1586
	53	[4658]	SELF     	R17 R13 K13 ; R18 := R13; R17 := R13[0x5ba460ac]
	54	[4658]	CALL     	R17 2 0 ; R17,... := R17(R18)
	55	[4658]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	56	[4658]	OP_LOADBOOL	R17 0 0 ; R17 := false
	57	[4658]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	58	[4658]	SETTABLE 	R14 K12 R15 ; R14["Description"] := R15
	59	[4659]	GETUPVAL 	R15 U1 ; R15 := U1
	60	[4659]	LOADNIL  	R16 R16 ; R16 := nil
	61	[4659]	MOVE     	R17 R13 ; R17 := R13
	62	[4659]	LOADNIL  	R18 R19 ; R18 := R19 := nil
	63	[4659]	CALL     	R15 5 2 ; R15 := R15(R16,R17,R18,R19)
	64	[4659]	SETTABLE 	R14 K14 R15 ; R14["ToolTip"] := R15
	65	[4662]	GETGLOBAL	R15 K1 ; R15 := 0x7b998233
	66	[4662]	MOVE     	R16 R2 ; R16 := R2
	67	[4662]	CALL     	R15 2 2 ; R15 := R15(R16)
	68	[4662]	TEST     	R15 1 ; if R15 then PC := 82
	69	[4662]	JMP      	82 ; PC := 82
	70	[4663]	SELF     	R15 R2 K15 ; R16 := R2; R15 := R2[0x105074fb]
	71	[4663]	GETTABLE 	R17 R12 K16 ; R17 := R12["mItemType"]
	72	[4663]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	73	[4664]	GETGLOBAL	R16 K1 ; R16 := 0x7b998233
	74	[4664]	MOVE     	R17 R15 ; R17 := R15
	75	[4664]	CALL     	R16 2 2 ; R16 := R16(R17)
	76	[4664]	TEST     	R16 1 ; if R16 then PC := 82
	77	[4664]	JMP      	82 ; PC := 82
	78	[4665]	SETTABLE 	R14 K17 R15 ; R14["StoreItem"] := R15
	79	[4666]	SELF     	R16 R15 K19 ; R17 := R15; R16 := R15[0x056dcf06]
	80	[4666]	CALL     	R16 2 2 ; R16 := R16(R17)
	81	[4666]	SETTABLE 	R14 K18 R16 ; R14["Icon"] := R16
	82	[4670]	SELF     	R16 R13 K20 ; R17 := R13; R16 := R13[0x535d4938]
	83	[4670]	CALL     	R16 2 2 ; R16 := R16(R17)
	84	[4670]	TEST     	R16 0 ; if not R16 then PC := 88
	85	[4670]	JMP      	88 ; PC := 88
	86	[4671]	GETTABLE 	R16 R12 K22 ; R16 := R12["mItemCount"]
	87	[4671]	SETTABLE 	R14 K21 R16 ; R14["Count"] := R16
	88	[4674]	GETGLOBAL	R16 K23 ; R16 := 0x33bdd652
	89	[4674]	GETTABLE 	R16 R16 K24 ; R16 := R16[0x23d5322f]
	90	[4674]	MOVE     	R17 R0 ; R17 := R0
	91	[4674]	MOVE     	R18 R14 ; R18 := R14
	92	[4674]	CALL     	R16 3 1 ; R16(R17,R18)
	93	[4647]	FORLOOP  	R8 29 ; R8 += R10; if R8 <= R9 then begin PC := 29; R11 := R8 end
	94	[4678]	GETGLOBAL	R16 K23 ; R16 := 0x33bdd652
	95	[4678]	GETTABLE 	R16 R16 K25 ; R16 := R16[0xf21b1d8e]
	96	[4678]	MOVE     	R17 R0 ; R17 := R0
	97	[4678]	CLOSURE  	R18 1 ; R18 := closure(Function #2)
	98	[4678]	CALL     	R16 3 1 ; R16(R17,R18)
	99	[4678]	CLOSE    	R5 ; SAVE R5,...
	100	[4681]	RETURN   	R0 1 ; return 

function #239 <?:4683,4720> (90 instructions, 360 bytes at 0000025274F1BF70)
1 param, 16 slots, 2 upvalues, 0 locals, 25 constants, 0 functions
	1	[4684]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4684]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x9f57dd7d]
	3	[4684]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[4684]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x5d10207d]
	5	[4684]	LOADK    	R3 := 9.000000
	6	[4684]	OP_LOADBOOL	R4 1 0 ; R4 := true
	7	[4684]	CALL     	R2 3 0 ; R2,... := R2(R3,R4)
	8	[4684]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	9	[4685]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[4685]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x9f57dd7d]
	11	[4685]	GETUPVAL 	R3 U1 ; R3 := U1
	12	[4685]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x5d10207d]
	13	[4685]	LOADK    	R4 := 6.000000
	14	[4685]	OP_LOADBOOL	R5 1 0 ; R5 := true
	15	[4685]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	16	[4685]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	17	[4688]	GETGLOBAL	R3 K3 ; R3 := 0x7f5022cf
	18	[4688]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x3f3e4d12]
	19	[4688]	GETGLOBAL	R4 K5 ; R4 := 0x603636ad
	20	[4688]	SELF     	R5 R0 K6 ; R6 := R0; R5 := R0[0xd3a9d01f]
	21	[4688]	CALL     	R5 2 2 ; R5 := R5(R6)
	22	[4688]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x6d604ba7]
	23	[4688]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[4688]	NEWTABLE 	R6 0 0 ; R6 := {}
	25	[4688]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	26	[4688]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	27	[4689]	GETGLOBAL	R4 K5 ; R4 := 0x603636ad
	28	[4689]	LOADK    	R5 K8 ; R5 := "/Lotus/Language/ShipFeatureItems/ShipFeatureUpgraded"
	29	[4689]	NEWTABLE 	R6 0 1 ; R6 := {}
	30	[4689]	SETTABLE 	R6 K9 R3 ; R6[0x64fb1586] := R3
	31	[4689]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	32	[4690]	LOADK    	R5 K10 ; R5 := "<font color=\"#FloatingContent\"><br><b>"
	33	[4690]	MOVE     	R6 R4 ; R6 := R4
	34	[4690]	CONCAT   	R4 R5 R6 ; R4 := R5 .. R6
	35	[4691]	MOVE     	R5 R4 ; R5 := R4
	36	[4691]	LOADK    	R6 K11 ; R6 := "</b><br><br></font>"
	37	[4691]	CONCAT   	R4 R5 R6 ; R4 := R5 .. R6
	38	[4694]	GETGLOBAL	R5 K5 ; R5 := 0x603636ad
	39	[4694]	SELF     	R6 R0 K12 ; R7 := R0; R6 := R0[0x5ba460ac]
	40	[4694]	CALL     	R6 2 2 ; R6 := R6(R7)
	41	[4694]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x6d604ba7]
	42	[4694]	CALL     	R6 2 2 ; R6 := R6(R7)
	43	[4694]	NEWTABLE 	R7 0 0 ; R7 := {}
	44	[4694]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	45	[4695]	LOADK    	R6 := 0.000000
	46	[4696]	LOADK    	R7 K13 ; R7 := ""
	47	[4701]	GETGLOBAL	R8 K3 ; R8 := 0x7f5022cf
	48	[4701]	GETTABLE 	R8 R8 K14 ; R8 := R8[0xa5c556b9]
	49	[4701]	MOVE     	R9 R5 ; R9 := R5
	50	[4701]	LOADK    	R10 K15 ; R10 := "\r\n%-[^%-^\r^\n]+"
	51	[4701]	MOVE     	R11 R6 ; R11 := R6
	52	[4701]	CALL     	R8 4 3 ; R8,R9 := R8(R9,R10,R11)
	53	[4702]	EQ       	1 R8 K16 ; if R8 == nil then PC := 78
	54	[4702]	JMP      	78 ; PC := 78
	55	[4702]	EQ       	0 R9 K16 ; if R9 ~= nil then PC := 58
	56	[4702]	JMP      	58 ; PC := 58
	57	[4703]	JMP      	78 ; PC := 78
	58	[4705]	SELF     	R10 R5 K17 ; R11 := R5; R10 := R5[0x1a94c9cc]
	59	[4705]	MOVE     	R12 R8 ; R12 := R8
	60	[4705]	MOVE     	R13 R9 ; R13 := R9
	61	[4705]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	62	[4706]	EQ       	1 R10 K16 ; if R10 == nil then PC := 78
	63	[4706]	JMP      	78 ; PC := 78
	64	[4707]	SELF     	R11 R10 K18 ; R12 := R10; R11 := R10[0x66edf04f]
	65	[4707]	LOADK    	R13 K19 ; R13 := "\r\n"
	66	[4707]	LOADK    	R14 K13 ; R14 := ""
	67	[4707]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	68	[4707]	MOVE     	R10 R11 ; R10 := R11
	69	[4708]	MOVE     	R11 R7 ; R11 := R7
	70	[4708]	LOADK    	R12 K20 ; R12 := "    "
	71	[4708]	MOVE     	R13 R10 ; R13 := R10
	72	[4708]	LOADK    	R14 K21 ; R14 := "<br>"
	73	[4708]	CONCAT   	R7 R11 R14 ; R7 := R11 .. R12 .. R13 .. R14
	74	[4708]	JMP      	76 ; PC := 76
	75	[4710]	JMP      	78 ; PC := 78
	76	[4712]	MOVE     	R6 R9 ; R6 := R9
	77	[4712]	JMP      	47 ; PC := 47
	78	[4716]	LOADK    	R11 K22 ; R11 := "<font color=\"#Content\">"
	79	[4716]	MOVE     	R12 R7 ; R12 := R7
	80	[4716]	LOADK    	R13 K23 ; R13 := "</font>"
	81	[4716]	CONCAT   	R7 R11 R13 ; R7 := R11 .. R12 .. R13
	82	[4719]	GETUPVAL 	R11 U0 ; R11 := U0
	83	[4719]	GETTABLE 	R11 R11 K24 ; R11 := R11[0xe0cba3ca]
	84	[4719]	MOVE     	R12 R4 ; R12 := R4
	85	[4719]	MOVE     	R13 R7 ; R13 := R7
	86	[4719]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	87	[4719]	LOADNIL  	R13 R14 ; R13 := R14 := nil
	88	[4719]	OP_LOADBOOL	R15 1 0 ; R15 := true
	89	[4719]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	90	[4720]	RETURN   	R0 1 ; return 

function #240 <?:4722,4781> (148 instructions, 592 bytes at 0000025274F1C6A0)
1 param, 27 slots, 3 upvalues, 0 locals, 36 constants, 0 functions
	1	[4723]	GETGLOBAL	R1 K0 ; R1 := 0x76ea806b
	2	[4723]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x8792aaab]
	3	[4723]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4723]	TEST     	R1 0 ; if not R1 then PC := 145
	5	[4723]	JMP      	145 ; PC := 145
	6	[4724]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	7	[4724]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfb669000]
	8	[4724]	GETGLOBAL	R3 K4 ; R3 := gUIConsoleTriggerType
	9	[4724]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	10	[4726]	GETGLOBAL	R2 K5 ; R2 := 0x25d99d89
	11	[4727]	OP_LOADBOOL	R3 0 0 ; R3 := false
	12	[4728]	GETGLOBAL	R4 K6 ; R4 := 0x0469f296
	13	[4728]	LOADK    	R5 K7 ; R5 := "News"
	14	[4728]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[4729]	GETGLOBAL	R5 K6 ; R5 := 0x0469f296
	16	[4729]	LOADK    	R6 K8 ; R6 := "Conclave"
	17	[4729]	CALL     	R5 2 2 ; R5 := R5(R6)
	18	[4731]	LOADK    	R6 := 1.000000
	19	[4731]	LOADK    	R7 := 2.000000
	20	[4731]	LOADK    	R8 := 1.000000
	21	[4731]	FORPREP  	R6 141 ; R6 -= R8; PC := 141
	22	[4732]	LOADK    	R10 := 1.000000
	23	[4732]	LEN      	R11 R1 ; R11 := # R1
	24	[4732]	LOADK    	R12 := 1.000000
	25	[4732]	FORPREP  	R10 140 ; R10 -= R12; PC := 140
	26	[4733]	GETTABLE 	R14 R1 R13 ; R14 := R1[R13]
	27	[4733]	SELF     	R14 R14 K9 ; R15 := R14; R14 := R14[0x22da1852]
	28	[4733]	CALL     	R14 2 2 ; R14 := R14(R15)
	29	[4735]	OP_LOADBOOL	R15 1 0 ; R15 := true
	30	[4736]	GETGLOBAL	R16 K10 ; R16 := 0x1239e0a2
	31	[4736]	CALL     	R16 1 2 ; R16 := R16()
	32	[4736]	TEST     	R16 0 ; if not R16 then PC := 42
	33	[4736]	JMP      	42 ; PC := 42
	34	[4736]	GETGLOBAL	R16 K11 ; R16 := 0x34291f5c
	35	[4736]	GETTABLE 	R16 R16 K12 ; R16 := R16[0x056bfe8b]
	36	[4736]	CALL     	R16 1 2 ; R16 := R16()
	37	[4736]	TEST     	R16 1 ; if R16 then PC := 42
	38	[4736]	JMP      	42 ; PC := 42
	39	[4737]	EQ       	0 R14 R4 ; if R14 ~= R4 then PC := 42
	40	[4737]	JMP      	42 ; PC := 42
	41	[4738]	OP_LOADBOOL	R15 0 0 ; R15 := false
	42	[4742]	EQ       	1 R14 R5 ; if R14 == R5 then PC := 46
	43	[4742]	JMP      	46 ; PC := 46
	44	[4742]	EQ       	0 R14 R4 ; if R14 ~= R4 then PC := 51
	45	[4742]	JMP      	51 ; PC := 51
	46	[4742]	GETUPVAL 	R16 U0 ; R16 := U0
	47	[4742]	CALL     	R16 1 2 ; R16 := R16()
	48	[4742]	TEST     	R16 1 ; if R16 then PC := 51
	49	[4742]	JMP      	51 ; PC := 51
	50	[4743]	OP_LOADBOOL	R15 0 0 ; R15 := false
	51	[4746]	GETTABLE 	R16 R1 R13 ; R16 := R1[R13]
	52	[4746]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xb62a384e]
	53	[4746]	CALL     	R16 2 2 ; R16 := R16(R17)
	54	[4746]	TEST     	R16 1 ; if R16 then PC := 140
	55	[4746]	JMP      	140 ; PC := 140
	56	[4746]	GETGLOBAL	R16 K14 ; R16 := 0x7b998233
	57	[4746]	MOVE     	R17 R2 ; R17 := R2
	58	[4746]	CALL     	R16 2 2 ; R16 := R16(R17)
	59	[4746]	TEST     	R16 1 ; if R16 then PC := 140
	60	[4746]	JMP      	140 ; PC := 140
	61	[4747]	GETTABLE 	R16 R1 R13 ; R16 := R1[R13]
	62	[4747]	SELF     	R16 R16 K15 ; R17 := R16; R16 := R16[0x8f163e57]
	63	[4747]	CALL     	R16 2 2 ; R16 := R16(R17)
	64	[4748]	LEN      	R17 R16 ; R17 := # R16
	65	[4748]	EQ       	1 R17 K16 ; if R17 == 0.000000 then PC := 68
	66	[4748]	JMP      	68 ; PC := 68
	67	[4748]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 68
	68	[4748]	OP_LOADBOOL	R17 1 0 ; R17 := true
	69	[4750]	GETUPVAL 	R18 U1 ; R18 := U1
	70	[4750]	GETTABLE 	R18 R18 K17 ; R18 := R18[0x06d055f9]
	71	[4750]	EQ       	1 R9 K18 ; if R9 == 1.000000 then PC := 74
	72	[4750]	JMP      	74 ; PC := 74
	73	[4750]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 74
	74	[4750]	OP_LOADBOOL	R19 1 0 ; R19 := true
	75	[4750]	GETGLOBAL	R20 K19 ; R20 := 0x5bced4c4
	76	[4750]	GETTABLE 	R20 R20 K20 ; R20 := R20[0xac1b386a]
	77	[4750]	LOADK    	R21 := 1.000000
	78	[4750]	LEN      	R22 R16 ; R22 := # R16
	79	[4750]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	80	[4750]	LEN      	R21 R16 ; R21 := # R16
	81	[4750]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	82	[4751]	LOADK    	R19 := 1.000000
	83	[4751]	MOVE     	R20 R18 ; R20 := R18
	84	[4751]	LOADK    	R21 := 1.000000
	85	[4751]	FORPREP  	R19 126 ; R19 -= R21; PC := 126
	86	[4752]	GETTABLE 	R23 R16 R22 ; R23 := R16[R22]
	87	[4752]	GETTABLE 	R23 R23 K21 ; R23 := R23["mFeatureItem"]
	88	[4753]	SELF     	R24 R2 K22 ; R25 := R2; R24 := R2[0x4ae54c32]
	89	[4753]	MOVE     	R26 R23 ; R26 := R23
	90	[4753]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	91	[4753]	TEST     	R24 0 ; if not R24 then PC := 99
	92	[4753]	JMP      	99 ; PC := 99
	93	[4754]	GETTABLE 	R24 R1 R13 ; R24 := R1[R13]
	94	[4754]	SELF     	R24 R24 K23 ; R25 := R24; R24 := R24[0x32817074]
	95	[4754]	MOVE     	R26 R23 ; R26 := R23
	96	[4754]	CALL     	R24 3 1 ; R24(R25,R26)
	97	[4755]	OP_LOADBOOL	R17 1 0 ; R17 := true
	98	[4755]	JMP      	126 ; PC := 126
	99	[4756]	TEST     	R3 1 ; if R3 then PC := 126
	100	[4756]	JMP      	126 ; PC := 126
	101	[4756]	SELF     	R24 R2 K24 ; R25 := R2; R24 := R2[0x28d326ac]
	102	[4756]	MOVE     	R26 R23 ; R26 := R23
	103	[4756]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	104	[4756]	TEST     	R24 0 ; if not R24 then PC := 126
	105	[4756]	JMP      	126 ; PC := 126
	106	[4756]	GETTABLE 	R24 R16 R22 ; R24 := R16[R22]
	107	[4756]	GETTABLE 	R24 R24 K25 ; R24 := R24["mRequiresMainUpgrade"]
	108	[4756]	TEST     	R24 0 ; if not R24 then PC := 115
	109	[4756]	JMP      	115 ; PC := 115
	110	[4756]	GETTABLE 	R24 R1 R13 ; R24 := R1[R13]
	111	[4756]	SELF     	R24 R24 K26 ; R25 := R24; R24 := R24[0x9dba7a65]
	112	[4756]	CALL     	R24 2 2 ; R24 := R24(R25)
	113	[4756]	TEST     	R24 0 ; if not R24 then PC := 126
	114	[4756]	JMP      	126 ; PC := 126
	115	[4757]	GETTABLE 	R24 R1 R13 ; R24 := R1[R13]
	116	[4757]	SELF     	R24 R24 K27 ; R25 := R24; R24 := R24[0xd76f0956]
	117	[4757]	MOVE     	R26 R23 ; R26 := R23
	118	[4757]	CALL     	R24 3 1 ; R24(R25,R26)
	119	[4758]	OP_LOADBOOL	R17 1 0 ; R17 := true
	120	[4759]	GETUPVAL 	R24 U2 ; R24 := U2
	121	[4759]	GETTABLE 	R25 R16 R22 ; R25 := R16[R22]
	122	[4759]	GETTABLE 	R25 R25 K28 ; R25 := R25["mInstallNowTransmission"]
	123	[4759]	CALL     	R24 2 1 ; R24(R25)
	124	[4764]	OP_LOADBOOL	R3 1 0 ; R3 := true
	125	[4765]	JMP      	127 ; PC := 127
	126	[4751]	FORLOOP  	R19 86 ; R19 += R21; if R19 <= R20 then begin PC := 86; R22 := R19 end
	127	[4769]	GETTABLE 	R24 R1 R13 ; R24 := R1[R13]
	128	[4769]	SELF     	R24 R24 K29 ; R25 := R24; R24 := R24[0x56c05b89]
	129	[4769]	TESTSET  	R26 R17 0 ; if not R17 then PC := 132 else R26 := R17 
	130	[4769]	JMP      	132 ; PC := 132
	131	[4769]	MOVE     	R26 R15 ; R26 := R15
	132	[4769]	CALL     	R24 3 1 ; R24(R25,R26)
	133	[4770]	TEST     	R0 0 ; if not R0 then PC := 140
	134	[4770]	JMP      	140 ; PC := 140
	135	[4770]	TEST     	R15 0 ; if not R15 then PC := 140
	136	[4770]	JMP      	140 ; PC := 140
	137	[4771]	GETTABLE 	R24 R1 R13 ; R24 := R1[R13]
	138	[4771]	SELF     	R24 R24 K30 ; R25 := R24; R24 := R24[0x6bfeac2e]
	139	[4771]	CALL     	R24 2 1 ; R24(R25)
	140	[4732]	FORLOOP  	R10 26 ; R10 += R12; if R10 <= R11 then begin PC := 26; R13 := R10 end
	141	[4731]	FORLOOP  	R6 22 ; R6 += R8; if R6 <= R7 then begin PC := 22; R9 := R6 end
	142	[4777]	GETGLOBAL	R24 K31 ; R24 := _T
	143	[4777]	SETTABLE 	R24 K32 K33 ; R24["uiConsoleTriggersInitialized"] := true
	144	[4777]	JMP      	148 ; PC := 148
	145	[4779]	GETGLOBAL	R24 K34 ; R24 := 0x3d106989
	146	[4779]	LOADK    	R25 K35 ; R25 := "Warning: called UpdateUIConsoleTriggers but the player isn't logged in yet!"
	147	[4779]	CALL     	R24 2 1 ; R24(R25)
	148	[4781]	RETURN   	R0 1 ; return 

function #241 <?:4783,4800> (55 instructions, 220 bytes at 0000025274F1D040)
1 param, 13 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[4784]	MOVE     	R1 R0 ; R1 := R0
	2	[4785]	GETGLOBAL	R2 K0 ; R2 := 0x7f5022cf
	3	[4785]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x41e2ae25]
	4	[4785]	MOVE     	R3 R0 ; R3 := R0
	5	[4785]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[4786]	EQ       	0 R2 K2 ; if R2 ~= 0.000000 then PC := 10
	7	[4786]	JMP      	10 ; PC := 10
	8	[4787]	OP_LOADBOOL	R3 0 0 ; R3 := false
	9	[4787]	RETURN   	R3 2 ; return R3 
	10	[4790]	GETGLOBAL	R3 K0 ; R3 := 0x7f5022cf
	11	[4790]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x1a94c9cc]
	12	[4790]	MOVE     	R4 R0 ; R4 := R0
	13	[4790]	LOADK    	R5 := 1.000000
	14	[4790]	LOADK    	R6 := 1.000000
	15	[4790]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	16	[4791]	GETGLOBAL	R4 K0 ; R4 := 0x7f5022cf
	17	[4791]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x1a94c9cc]
	18	[4791]	MOVE     	R5 R0 ; R5 := R0
	19	[4791]	MOVE     	R6 R2 ; R6 := R2
	20	[4791]	MOVE     	R7 R2 ; R7 := R2
	21	[4791]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	22	[4792]	LOADK    	R5 := 0.000000
	23	[4792]	LOADK    	R6 := 9.000000
	24	[4792]	LOADK    	R7 := 1.000000
	25	[4792]	FORPREP  	R5 35 ; R5 -= R7; PC := 35
	26	[4793]	GETGLOBAL	R9 K0 ; R9 := 0x7f5022cf
	27	[4793]	GETTABLE 	R9 R9 K4 ; R9 := R9[0x66edf04f]
	28	[4793]	MOVE     	R10 R1 ; R10 := R1
	29	[4793]	GETGLOBAL	R11 K5 ; R11 := 0x64fb1586
	30	[4793]	MOVE     	R12 R8 ; R12 := R8
	31	[4793]	CALL     	R11 2 2 ; R11 := R11(R12)
	32	[4793]	LOADK    	R12 K6 ; R12 := ""
	33	[4793]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	34	[4793]	MOVE     	R1 R9 ; R1 := R9
	35	[4792]	FORLOOP  	R5 26 ; R5 += R7; if R5 <= R6 then begin PC := 26; R8 := R5 end
	36	[4795]	EQ       	1 R1 K6 ; if R1 == "" then PC := 50
	37	[4795]	JMP      	50 ; PC := 50
	38	[4795]	EQ       	1 R1 K7 ; if R1 == "." then PC := 50
	39	[4795]	JMP      	50 ; PC := 50
	40	[4795]	EQ       	0 R1 K8 ; if R1 ~= " " then PC := 46
	41	[4795]	JMP      	46 ; PC := 46
	42	[4795]	EQ       	1 R3 K8 ; if R3 == " " then PC := 50
	43	[4795]	JMP      	50 ; PC := 50
	44	[4795]	EQ       	1 R4 K8 ; if R4 == " " then PC := 50
	45	[4795]	JMP      	50 ; PC := 50
	46	[4795]	EQ       	1 R1 K9 ; if R1 == ". " then PC := 50
	47	[4795]	JMP      	50 ; PC := 50
	48	[4795]	EQ       	0 R1 K10 ; if R1 ~= " ." then PC := 53
	49	[4795]	JMP      	53 ; PC := 53
	50	[4796]	OP_LOADBOOL	R9 1 0 ; R9 := true
	51	[4796]	RETURN   	R9 2 ; return R9 
	52	[4796]	JMP      	55 ; PC := 55
	53	[4798]	OP_LOADBOOL	R9 0 0 ; R9 := false
	54	[4798]	RETURN   	R9 2 ; return R9 
	55	[4800]	RETURN   	R0 1 ; return 

function #242 <?:4802,4835> (94 instructions, 376 bytes at 0000025274F1D3D0)
2 params, 11 slots, 1 upvalue, 0 locals, 21 constants, 0 functions
	1	[4803]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[4803]	GETTABLE 	R2 R2 K1 ; R2 := R2["GetTopScreen"]
	3	[4803]	TEST     	R2 0 ; if not R2 then PC := 15
	4	[4803]	JMP      	15 ; PC := 15
	5	[4803]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	6	[4803]	GETGLOBAL	R3 K3 ; R3 := 0x89326c93
	7	[4803]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[4803]	TEST     	R2 1 ; if R2 then PC := 15
	9	[4803]	JMP      	15 ; PC := 15
	10	[4803]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	11	[4803]	MOVE     	R3 R0 ; R3 := R0
	12	[4803]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[4803]	TEST     	R2 0 ; if not R2 then PC := 17
	14	[4803]	JMP      	17 ; PC := 17
	15	[4804]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[4804]	RETURN   	R2 2 ; return R2 
	17	[4807]	GETGLOBAL	R2 K0 ; R2 := _T
	18	[4807]	GETTABLE 	R2 R2 K4 ; R2 := R2[0x876f7e29]
	19	[4807]	CALL     	R2 1 3 ; R2,R3 := R2()
	20	[4809]	GETGLOBAL	R4 K3 ; R4 := 0x89326c93
	21	[4809]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0xdd25e9d1]
	22	[4809]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[4810]	SELF     	R5 R0 K6 ; R6 := R0; R5 := R0[0xde321e6f]
	24	[4810]	CALL     	R5 2 2 ; R5 := R5(R6)
	25	[4811]	SELF     	R6 R5 K7 ; R7 := R5; R6 := R5[0x881b6b90]
	26	[4811]	LOADK    	R8 := 0.000000
	27	[4811]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	28	[4813]	GETGLOBAL	R7 K0 ; R7 := _T
	29	[4813]	GETTABLE 	R7 R7 K9 ; R7 := R7["DisableHeadTracking"]
	30	[4813]	TEST     	R7 1 ; if R7 then PC := 73
	31	[4813]	JMP      	73 ; PC := 73
	32	[4814]	EQ       	1 R3 K10 ; if R3 == "LoadOut" then PC := 73
	33	[4814]	JMP      	73 ; PC := 73
	34	[4815]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	35	[4815]	MOVE     	R8 R4 ; R8 := R4
	36	[4815]	CALL     	R7 2 2 ; R7 := R7(R8)
	37	[4815]	TEST     	R7 0 ; if not R7 then PC := 73
	38	[4815]	JMP      	73 ; PC := 73
	39	[4816]	SELF     	R7 R0 K11 ; R8 := R0; R7 := R0[0x6f8babf9]
	40	[4816]	CALL     	R7 2 2 ; R7 := R7(R8)
	41	[4816]	TEST     	R7 1 ; if R7 then PC := 73
	42	[4816]	JMP      	73 ; PC := 73
	43	[4817]	SELF     	R7 R0 K12 ; R8 := R0; R7 := R0[0x10ba8e3e]
	44	[4817]	CALL     	R7 2 2 ; R7 := R7(R8)
	45	[4817]	TEST     	R7 1 ; if R7 then PC := 73
	46	[4817]	JMP      	73 ; PC := 73
	47	[4818]	SELF     	R7 R0 K13 ; R8 := R0; R7 := R0[0x0e46e45b]
	48	[4818]	LOADK    	R9 := 0.000000
	49	[4818]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	50	[4818]	TEST     	R7 1 ; if R7 then PC := 73
	51	[4818]	JMP      	73 ; PC := 73
	52	[4819]	SELF     	R7 R0 K13 ; R8 := R0; R7 := R0[0x0e46e45b]
	53	[4819]	LOADK    	R9 := 3.000000
	54	[4819]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	55	[4819]	TEST     	R7 1 ; if R7 then PC := 73
	56	[4819]	JMP      	73 ; PC := 73
	57	[4820]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	58	[4820]	MOVE     	R8 R6 ; R8 := R6
	59	[4820]	CALL     	R7 2 2 ; R7 := R7(R8)
	60	[4820]	TEST     	R7 1 ; if R7 then PC := 69
	61	[4820]	JMP      	69 ; PC := 69
	62	[4820]	SELF     	R7 R6 K14 ; R8 := R6; R7 := R6[0x6bb20d05]
	63	[4820]	CALL     	R7 2 2 ; R7 := R7(R8)
	64	[4820]	TEST     	R7 1 ; if R7 then PC := 73
	65	[4820]	JMP      	73 ; PC := 73
	66	[4820]	GETUPVAL 	R7 U0 ; R7 := U0
	67	[4820]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 73
	68	[4820]	JMP      	73 ; PC := 73
	69	[4821]	SELF     	R7 R0 K15 ; R8 := R0; R7 := R0[0xcbc38746]
	70	[4821]	CALL     	R7 2 2 ; R7 := R7(R8)
	71	[4821]	TEST     	R7 0 ; if not R7 then PC := 76
	72	[4821]	JMP      	76 ; PC := 76
	73	[4823]	SELF     	R7 R0 K16 ; R8 := R0; R7 := R0[0xebccefdd]
	74	[4823]	CALL     	R7 2 1 ; R7(R8)
	75	[4823]	JMP      	92 ; PC := 92
	76	[4825]	LOADNIL  	R7 R7 ; R7 := nil
	77	[4826]	GETGLOBAL	R8 K0 ; R8 := _T
	78	[4826]	GETTABLE 	R8 R8 K17 ; R8 := R8["DiegeticPosition"]
	79	[4826]	TEST     	R8 0 ; if not R8 then PC := 86
	80	[4826]	JMP      	86 ; PC := 86
	81	[4826]	EQ       	1 R1 K18 ; if R1 == true then PC := 86
	82	[4826]	JMP      	86 ; PC := 86
	83	[4827]	GETGLOBAL	R8 K0 ; R8 := _T
	84	[4827]	GETTABLE 	R7 R8 K17 ; R7 := R8["DiegeticPosition"]
	85	[4827]	JMP      	89 ; PC := 89
	86	[4829]	SELF     	R8 R5 K19 ; R9 := R5; R8 := R5[0xefd0fde2]
	87	[4829]	CALL     	R8 2 2 ; R8 := R8(R9)
	88	[4829]	MOVE     	R7 R8 ; R7 := R8
	89	[4832]	SELF     	R8 R0 K20 ; R9 := R0; R8 := R0[0x98776060]
	90	[4832]	MOVE     	R10 R7 ; R10 := R7
	91	[4832]	CALL     	R8 3 1 ; R8(R9,R10)
	92	[4834]	OP_LOADBOOL	R8 1 0 ; R8 := true
	93	[4834]	RETURN   	R8 2 ; return R8 
	94	[4835]	RETURN   	R0 1 ; return 

function #243 <?:4837,4870> (60 instructions, 240 bytes at 0000025274F1D9A0)
2 params, 27 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[4838]	NEWTABLE 	R2 0 0 ; R2 := {}
	2	[4840]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	3	[4840]	MOVE     	R4 R1 ; R4 := R1
	4	[4840]	CALL     	R3 2 2 ; R3 := R3(R4)
	5	[4840]	TEST     	R3 0 ; if not R3 then PC := 8
	6	[4840]	JMP      	8 ; PC := 8
	7	[4841]	RETURN   	R2 2 ; return R2 
	8	[4845]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[4845]	CALL     	R3 1 2 ; R3 := R3()
	10	[4846]	NEWTABLE 	R4 0 0 ; R4 := {}
	11	[4848]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xb407484d]
	12	[4848]	CALL     	R5 2 2 ; R5 := R5(R6)
	13	[4849]	LOADK    	R6 := 1.000000
	14	[4849]	LEN      	R7 R5 ; R7 := # R5
	15	[4849]	LOADK    	R8 := 1.000000
	16	[4849]	FORPREP  	R6 23 ; R6 -= R8; PC := 23
	17	[4850]	SELF     	R10 R3 K2 ; R11 := R3; R10 := R3[0x5484bf3c]
	18	[4850]	GETTABLE 	R12 R5 R9 ; R12 := R5[R9]
	19	[4850]	GETTABLE 	R12 R12 K3 ; R12 := R12["mTag"]
	20	[4850]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	21	[4851]	GETTABLE 	R11 R10 K4 ; R11 := R10["name"]
	22	[4851]	SETTABLE 	R4 R11 K5 ; R4[R11] := true
	23	[4849]	FORLOOP  	R6 17 ; R6 += R8; if R6 <= R7 then begin PC := 17; R9 := R6 end
	24	[4855]	SELF     	R11 R1 K6 ; R12 := R1; R11 := R1[0xe9cbffa8]
	25	[4855]	GETGLOBAL	R13 K7 ; R13 := gNavigationFeatureItemType
	26	[4855]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	27	[4856]	LOADK    	R12 := 1.000000
	28	[4856]	LEN      	R13 R11 ; R13 := # R11
	29	[4856]	LOADK    	R14 := 1.000000
	30	[4856]	FORPREP  	R12 58 ; R12 -= R14; PC := 58
	31	[4857]	GETTABLE 	R16 R11 R15 ; R16 := R11[R15]
	32	[4857]	SELF     	R16 R16 K8 ; R17 := R16; R16 := R16[0xf278f8a1]
	33	[4857]	CALL     	R16 2 2 ; R16 := R16(R17)
	34	[4858]	GETGLOBAL	R17 K9 ; R17 := 0xb009bbc6
	35	[4858]	MOVE     	R18 R16 ; R18 := R16
	36	[4858]	CALL     	R17 2 2 ; R17 := R17(R18)
	37	[4859]	SELF     	R18 R17 K10 ; R19 := R17; R18 := R17[0x3ff99026]
	38	[4859]	CALL     	R18 2 2 ; R18 := R18(R19)
	39	[4860]	LOADK    	R19 := 1.000000
	40	[4860]	LEN      	R20 R18 ; R20 := # R18
	41	[4860]	LOADK    	R21 := 1.000000
	42	[4860]	FORPREP  	R19 57 ; R19 -= R21; PC := 57
	43	[4861]	SELF     	R23 R3 K2 ; R24 := R3; R23 := R3[0x5484bf3c]
	44	[4861]	GETTABLE 	R25 R18 R22 ; R25 := R18[R22]
	45	[4861]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	46	[4862]	GETTABLE 	R24 R23 K4 ; R24 := R23["name"]
	47	[4862]	GETTABLE 	R24 R4 R24 ; R24 := R4[R24]
	48	[4862]	TEST     	R24 0 ; if not R24 then PC := 57
	49	[4862]	JMP      	57 ; PC := 57
	50	[4863]	GETTABLE 	R24 R23 K4 ; R24 := R23["name"]
	51	[4863]	SETTABLE 	R4 R24 K11 ; R4[R24] := false
	52	[4864]	GETGLOBAL	R24 K12 ; R24 := 0x33bdd652
	53	[4864]	GETTABLE 	R24 R24 K13 ; R24 := R24[0x23d5322f]
	54	[4864]	MOVE     	R25 R2 ; R25 := R2
	55	[4864]	MOVE     	R26 R16 ; R26 := R16
	56	[4864]	CALL     	R24 3 1 ; R24(R25,R26)
	57	[4860]	FORLOOP  	R19 43 ; R19 += R21; if R19 <= R20 then begin PC := 43; R22 := R19 end
	58	[4856]	FORLOOP  	R12 31 ; R12 += R14; if R12 <= R13 then begin PC := 31; R15 := R12 end
	59	[4869]	RETURN   	R2 2 ; return R2 
	60	[4870]	RETURN   	R0 1 ; return 

function #244 <?:4872,4890> (99 instructions, 396 bytes at 0000025274F1DD20)
3 params, 18 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[4873]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[4873]	GETTABLE 	R3 R3 K0 ; R3 := R3[0x8bcd12b6]
	3	[4873]	GETGLOBAL	R4 K1 ; R4 := 0x0032441c
	4	[4873]	GETTABLE 	R4 R4 K2 ; R4 := R4["UIColor_DarkGrey"]
	5	[4873]	CALL     	R3 2 2 ; R3 := R3(R4)
	6	[4875]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[4875]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x06d055f9]
	8	[4875]	EQ       	1 R2 K4 ; if R2 == nil then PC := 11
	9	[4875]	JMP      	11 ; PC := 11
	10	[4875]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 11
	11	[4875]	OP_LOADBOOL	R5 1 0 ; R5 := true
	12	[4875]	GETGLOBAL	R6 K1 ; R6 := 0x0032441c
	13	[4875]	GETTABLE 	R6 R6 K5 ; R6 := R6["UIMaterial_Rectangle"]
	14	[4875]	MOVE     	R7 R2 ; R7 := R2
	15	[4875]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	16	[4876]	GETGLOBAL	R5 K6 ; R5 := 0xc8802016
	17	[4876]	NEWTABLE 	R6 3 0 ; R6 := {}
	18	[4876]	MOVE     	R7 R1 ; R7 := R1
	19	[4876]	LOADK    	R8 K7 ; R8 := ".Foreground"
	20	[4876]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	21	[4876]	MOVE     	R8 R1 ; R8 := R1
	22	[4876]	LOADK    	R9 K8 ; R9 := ".Shadow"
	23	[4876]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	24	[4876]	MOVE     	R9 R1 ; R9 := R1
	25	[4876]	LOADK    	R10 K9 ; R10 := ".BackShadow"
	26	[4876]	CONCAT   	R9 R9 R10 ; R9 := R9 .. R10
	27	[4876]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	28	[4876]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	29	[4876]	JMP      	56 ; PC := 56
	30	[4877]	SELF     	R10 R0 K10 ; R11 := R0; R10 := R0[0xd5181643]
	31	[4877]	MOVE     	R12 R9 ; R12 := R9
	32	[4877]	MOVE     	R13 R4 ; R13 := R4
	33	[4877]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	34	[4878]	SELF     	R10 R0 K11 ; R11 := R0; R10 := R0[0x91e13703]
	35	[4878]	MOVE     	R12 R9 ; R12 := R9
	36	[4878]	LOADK    	R13 K12 ; R13 := "RectInnerColor"
	37	[4878]	GETTABLE 	R14 R3 K13 ; R14 := R3["r"]
	38	[4878]	GETTABLE 	R15 R3 K14 ; R15 := R3["g"]
	39	[4878]	GETTABLE 	R16 R3 K15 ; R16 := R3["b"]
	40	[4878]	LOADK    	R17 K16 ; R17 := 0.350000
	41	[4878]	CALL     	R10 8 1 ; R10(R11,R12,R13,R14,R15,R16,R17)
	42	[4879]	SELF     	R10 R0 K11 ; R11 := R0; R10 := R0[0x91e13703]
	43	[4879]	MOVE     	R12 R9 ; R12 := R9
	44	[4879]	LOADK    	R13 K17 ; R13 := "RectEdgeColor"
	45	[4879]	GETGLOBAL	R14 K1 ; R14 := 0x0032441c
	46	[4879]	GETTABLE 	R14 R14 K18 ; R14 := R14["UIColorObject_White"]
	47	[4879]	GETTABLE 	R14 R14 K13 ; R14 := R14["r"]
	48	[4879]	GETGLOBAL	R15 K1 ; R15 := 0x0032441c
	49	[4879]	GETTABLE 	R15 R15 K18 ; R15 := R15["UIColorObject_White"]
	50	[4879]	GETTABLE 	R15 R15 K14 ; R15 := R15["g"]
	51	[4879]	GETGLOBAL	R16 K1 ; R16 := 0x0032441c
	52	[4879]	GETTABLE 	R16 R16 K18 ; R16 := R16["UIColorObject_White"]
	53	[4879]	GETTABLE 	R16 R16 K15 ; R16 := R16["b"]
	54	[4879]	LOADK    	R17 := 1.000000
	55	[4879]	CALL     	R10 8 1 ; R10(R11,R12,R13,R14,R15,R16,R17)
	56	[4876]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 30; R7 := R8 end
	57	[4879]	JMP      	30 ; PC := 30
	58	[4882]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	59	[4882]	MOVE     	R12 R1 ; R12 := R1
	60	[4882]	LOADK    	R13 K20 ; R13 := "Foreground"
	61	[4882]	LOADK    	R14 := 4.000000
	62	[4882]	LOADK    	R15 := 0.000000
	63	[4882]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	64	[4883]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	65	[4883]	MOVE     	R12 R1 ; R12 := R1
	66	[4883]	LOADK    	R13 K21 ; R13 := "Shadow"
	67	[4883]	LOADK    	R14 := 4.000000
	68	[4883]	LOADK    	R15 := 200.000000
	69	[4883]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	70	[4884]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	71	[4884]	MOVE     	R12 R1 ; R12 := R1
	72	[4884]	LOADK    	R13 K22 ; R13 := "BackShadow"
	73	[4884]	LOADK    	R14 := 4.000000
	74	[4884]	LOADK    	R15 := 400.000000
	75	[4884]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	76	[4886]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	77	[4886]	MOVE     	R12 R1 ; R12 := R1
	78	[4886]	LOADK    	R13 K20 ; R13 := "Foreground"
	79	[4886]	LOADK    	R14 := 10.000000
	80	[4886]	LOADK    	R15 := 75.000000
	81	[4886]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	82	[4887]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	83	[4887]	MOVE     	R12 R1 ; R12 := R1
	84	[4887]	LOADK    	R13 K21 ; R13 := "Shadow"
	85	[4887]	LOADK    	R14 := 10.000000
	86	[4887]	LOADK    	R15 := 45.000000
	87	[4887]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	88	[4888]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	89	[4888]	MOVE     	R12 R1 ; R12 := R1
	90	[4888]	LOADK    	R13 K22 ; R13 := "BackShadow"
	91	[4888]	LOADK    	R14 := 10.000000
	92	[4888]	LOADK    	R15 := 25.000000
	93	[4888]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	94	[4889]	GETGLOBAL	R10 K23 ; R10 := 0x7b998233
	95	[4889]	MOVE     	R11 R4 ; R11 := R4
	96	[4889]	CALL     	R10 2 2 ; R10 := R10(R11)
	97	[4889]	NOT      	R10 R10 ; R10 := not R10
	98	[4889]	RETURN   	R10 2 ; return R10 
	99	[4890]	RETURN   	R0 1 ; return 

function #245 <?:4893,4899> (14 instructions, 56 bytes at 0000025274F1E470)
1 param, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[4894]	LE       	0 R0 K0 ; if R0 > 0.003131 then PC := 6
	2	[4894]	JMP      	6 ; PC := 6
	3	[4895]	MUL      	R1 R0 K1 ; R1 := R0 * 12.920000
	4	[4895]	RETURN   	R1 2 ; return R1 
	5	[4895]	JMP      	14 ; PC := 14
	6	[4897]	GETGLOBAL	R1 K2 ; R1 := 0x5bced4c4
	7	[4897]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xa40531d8]
	8	[4897]	MOVE     	R2 R0 ; R2 := R0
	9	[4897]	LOADK    	R3 K4 ; R3 := 0.416667
	10	[4897]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	11	[4897]	MUL      	R1 K5 R1 ; R1 := 1.055000 * R1
	12	[4897]	SUB      	R1 R1 K6 ; R1 := R1 - 0.055000
	13	[4897]	RETURN   	R1 2 ; return R1 
	14	[4899]	RETURN   	R0 1 ; return 

function #246 <?:4901,4907> (13 instructions, 52 bytes at 0000025274F1E620)
1 param, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[4902]	LE       	0 R0 K0 ; if R0 > 0.039280 then PC := 6
	2	[4902]	JMP      	6 ; PC := 6
	3	[4903]	DIV      	R1 R0 K1 ; R1 := R0 / 12.920000
	4	[4903]	RETURN   	R1 2 ; return R1 
	5	[4903]	JMP      	13 ; PC := 13
	6	[4905]	GETGLOBAL	R1 K2 ; R1 := 0x5bced4c4
	7	[4905]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xa40531d8]
	8	[4905]	ADD      	R2 R0 K4 ; R2 := R0 + 0.055000
	9	[4905]	DIV      	R2 R2 K5 ; R2 := R2 / 1.055000
	10	[4905]	LOADK    	R3 K6 ; R3 := 2.400000
	11	[4905]	TAILCALL 	R1 3 0 ; R1,... := R1(R2,R3)
	12	[4905]	RETURN   	R1 0 ; return R1,... 
	13	[4907]	RETURN   	R0 1 ; return 

function #247 <?:4911,4927> (37 instructions, 148 bytes at 0000025274F1E7D0)
0 params, 10 slots, 2 upvalues, 0 locals, 21 constants, 0 functions
	1	[4912]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4912]	CALL     	R0 1 2 ; R0 := R0()
	3	[4913]	NEWTABLE 	R1 0 0 ; R1 := {}
	4	[4913]	SETUPVAL 	R1 U1 ; U1 := R1
	5	[4914]	GETUPVAL 	R1 U1 ; R1 := U1
	6	[4914]	SETTABLE 	R1 K1 K2 ; R1[1.000000] := "<POLARITY_ATTACK>"
	7	[4915]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[4915]	SETTABLE 	R1 K3 K4 ; R1[2.000000] := "<POLARITY_DEFENSE>"
	9	[4916]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[4916]	SETTABLE 	R1 K5 K6 ; R1[3.000000] := "<POLARITY_TACTIC>"
	11	[4917]	GETUPVAL 	R1 U1 ; R1 := U1
	12	[4917]	SETTABLE 	R1 K7 K8 ; R1[4.000000] := "<POLARITY_POWER>"
	13	[4918]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[4918]	SETTABLE 	R1 K9 K10 ; R1[5.000000] := "<POLARITY_PRECEPT>"
	15	[4919]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[4919]	SETTABLE 	R1 K11 K12 ; R1[6.000000] := "<POLARITY_FUSION>"
	17	[4920]	GETUPVAL 	R1 U1 ; R1 := U1
	18	[4920]	SETTABLE 	R1 K13 K14 ; R1[7.000000] := "<POLARITY_WARD>"
	19	[4921]	GETUPVAL 	R1 U1 ; R1 := U1
	20	[4921]	SETTABLE 	R1 K15 K16 ; R1[8.000000] := "<POLARITY_UMBRA>"
	21	[4922]	GETUPVAL 	R1 U1 ; R1 := U1
	22	[4922]	SETTABLE 	R1 K17 K18 ; R1[9.000000] := "<POLARITY_ANY>"
	23	[4924]	LOADK    	R1 := 1.000000
	24	[4924]	GETUPVAL 	R2 U1 ; R2 := U1
	25	[4924]	LEN      	R2 R2 ; R2 := # R2
	26	[4924]	LOADK    	R3 := 1.000000
	27	[4924]	FORPREP  	R1 36 ; R1 -= R3; PC := 36
	28	[4925]	GETUPVAL 	R5 U1 ; R5 := U1
	29	[4925]	GETTABLE 	R6 R0 K19 ; R6 := R0["mMovie"]
	30	[4925]	SELF     	R6 R6 K20 ; R7 := R6; R6 := R6[0x42b04007]
	31	[4925]	GETUPVAL 	R8 U1 ; R8 := U1
	32	[4925]	GETTABLE 	R8 R8 R4 ; R8 := R8[R4]
	33	[4925]	OP_LOADBOOL	R9 1 0 ; R9 := true
	34	[4925]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	35	[4925]	SETTABLE 	R5 R4 R6 ; R5[R4] := R6
	36	[4924]	FORLOOP  	R1 28 ; R1 += R3; if R1 <= R2 then begin PC := 28; R4 := R1 end
	37	[4927]	RETURN   	R0 1 ; return 

function #248 <?:4929,4931> (3 instructions, 12 bytes at 0000025274F1ED60)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4930]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4930]	CALL     	R0 1 1 ; R0()
	3	[4931]	RETURN   	R0 1 ; return 

function #249 <?:4933,4942> (15 instructions, 60 bytes at 0000025274F1EE30)
1 param, 2 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[4934]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4934]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 6
	3	[4934]	JMP      	6 ; PC := 6
	4	[4935]	GETUPVAL 	R1 U1 ; R1 := U1
	5	[4935]	CALL     	R1 1 1 ; R1()
	6	[4938]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[4938]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	8	[4938]	TEST     	R1 0 ; if not R1 then PC := 13
	9	[4938]	JMP      	13 ; PC := 13
	10	[4939]	GETUPVAL 	R1 U0 ; R1 := U0
	11	[4939]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	12	[4939]	RETURN   	R1 2 ; return R1 
	13	[4941]	LOADK    	R1 K1 ; R1 := ""
	14	[4941]	RETURN   	R1 2 ; return R1 
	15	[4942]	RETURN   	R0 1 ; return 

function #250 <?:4944,4954> (29 instructions, 116 bytes at 0000025274F1EF90)
1 param, 6 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[4945]	GETGLOBAL	R1 K0 ; R1 := 0x0b96777e
	2	[4945]	MOVE     	R2 R0 ; R2 := R0
	3	[4945]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4945]	EQ       	1 R1 K1 ; if R1 == "string" then PC := 9
	5	[4945]	JMP      	9 ; PC := 9
	6	[4946]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xed4e0128]
	7	[4946]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[4946]	MOVE     	R0 R1 ; R0 := R1
	9	[4948]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	10	[4948]	GETGLOBAL	R2 K4 ; R2 := 0x0032441c
	11	[4948]	GETTABLE 	R2 R2 K5 ; R2 := R2["UIMovie_EndOfQuestMovie"]
	12	[4948]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[4948]	TEST     	R1 1 ; if R1 then PC := 29
	14	[4948]	JMP      	29 ; PC := 29
	15	[4949]	GETGLOBAL	R1 K6 ; R1 := 0x9ba7909f
	16	[4949]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xcfba257f]
	17	[4949]	GETGLOBAL	R3 K4 ; R3 := 0x0032441c
	18	[4949]	GETTABLE 	R3 R3 K5 ; R3 := R3["UIMovie_EndOfQuestMovie"]
	19	[4949]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	20	[4950]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	21	[4950]	MOVE     	R3 R1 ; R3 := R1
	22	[4950]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[4950]	TEST     	R2 1 ; if R2 then PC := 29
	24	[4950]	JMP      	29 ; PC := 29
	25	[4951]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0xe4162eed]
	26	[4951]	LOADK    	R4 K9 ; R4 := "SetQuestType"
	27	[4951]	MOVE     	R5 R0 ; R5 := R0
	28	[4951]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	29	[4954]	RETURN   	R0 1 ; return 

function #251 <?:4956,4963> (43 instructions, 172 bytes at 0000025274F1F270)
3 params, 11 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[4957]	EQ       	0 R2 K0 ; if R2 ~= nil then PC := 4
	2	[4957]	JMP      	4 ; PC := 4
	3	[4958]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[4960]	SELF     	R3 R0 K1 ; R4 := R0; R3 := R0[0xd5181643]
	5	[4960]	MOVE     	R5 R1 ; R5 := R1
	6	[4960]	GETUPVAL 	R6 U0 ; R6 := U0
	7	[4960]	GETTABLE 	R6 R6 K2 ; R6 := R6[0x06d055f9]
	8	[4960]	MOVE     	R7 R2 ; R7 := R2
	9	[4960]	GETGLOBAL	R8 K3 ; R8 := 0x0032441c
	10	[4960]	GETTABLE 	R8 R8 K4 ; R8 := R8["UIMaterial_RectangleNoDepth"]
	11	[4960]	GETGLOBAL	R9 K3 ; R9 := 0x0032441c
	12	[4960]	GETTABLE 	R9 R9 K5 ; R9 := R9["UIMaterial_Rectangle"]
	13	[4960]	CALL     	R6 4 0 ; R6,... := R6(R7,R8,R9)
	14	[4960]	CALL     	R3 0 1 ; R3(R4,...)
	15	[4961]	SELF     	R3 R0 K6 ; R4 := R0; R3 := R0[0x91e13703]
	16	[4961]	MOVE     	R5 R1 ; R5 := R1
	17	[4961]	LOADK    	R6 K7 ; R6 := "RectInnerColor"
	18	[4961]	GETGLOBAL	R7 K3 ; R7 := 0x0032441c
	19	[4961]	GETTABLE 	R7 R7 K8 ; R7 := R7["UIColorObject_DarkBlue"]
	20	[4961]	GETTABLE 	R7 R7 K9 ; R7 := R7["r"]
	21	[4961]	GETGLOBAL	R8 K3 ; R8 := 0x0032441c
	22	[4961]	GETTABLE 	R8 R8 K8 ; R8 := R8["UIColorObject_DarkBlue"]
	23	[4961]	GETTABLE 	R8 R8 K10 ; R8 := R8["g"]
	24	[4961]	GETGLOBAL	R9 K3 ; R9 := 0x0032441c
	25	[4961]	GETTABLE 	R9 R9 K8 ; R9 := R9["UIColorObject_DarkBlue"]
	26	[4961]	GETTABLE 	R9 R9 K11 ; R9 := R9["b"]
	27	[4961]	LOADK    	R10 K12 ; R10 := 0.200000
	28	[4961]	CALL     	R3 8 1 ; R3(R4,R5,R6,R7,R8,R9,R10)
	29	[4962]	SELF     	R3 R0 K6 ; R4 := R0; R3 := R0[0x91e13703]
	30	[4962]	MOVE     	R5 R1 ; R5 := R1
	31	[4962]	LOADK    	R6 K13 ; R6 := "RectEdgeColor"
	32	[4962]	GETGLOBAL	R7 K3 ; R7 := 0x0032441c
	33	[4962]	GETTABLE 	R7 R7 K14 ; R7 := R7["UIColorObject_White"]
	34	[4962]	GETTABLE 	R7 R7 K9 ; R7 := R7["r"]
	35	[4962]	GETGLOBAL	R8 K3 ; R8 := 0x0032441c
	36	[4962]	GETTABLE 	R8 R8 K14 ; R8 := R8["UIColorObject_White"]
	37	[4962]	GETTABLE 	R8 R8 K10 ; R8 := R8["g"]
	38	[4962]	GETGLOBAL	R9 K3 ; R9 := 0x0032441c
	39	[4962]	GETTABLE 	R9 R9 K14 ; R9 := R9["UIColorObject_White"]
	40	[4962]	GETTABLE 	R9 R9 K11 ; R9 := R9["b"]
	41	[4962]	LOADK    	R10 := 0.000000
	42	[4962]	CALL     	R3 8 1 ; R3(R4,R5,R6,R7,R8,R9,R10)
	43	[4963]	RETURN   	R0 1 ; return 

function #252 <?:4965,5023> (132 instructions, 528 bytes at 0000025274F1F610)
5 params, 28 slots, 1 upvalue, 0 locals, 25 constants, 0 functions
	1	[4966]	GETGLOBAL	R5 K0 ; R5 := 0x25d99d89
	2	[4967]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	3	[4967]	MOVE     	R7 R5 ; R7 := R5
	4	[4967]	CALL     	R6 2 2 ; R6 := R6(R7)
	5	[4967]	TEST     	R6 1 ; if R6 then PC := 126
	6	[4967]	JMP      	126 ; PC := 126
	7	[4967]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	8	[4967]	MOVE     	R7 R0 ; R7 := R0
	9	[4967]	CALL     	R6 2 2 ; R6 := R6(R7)
	10	[4967]	TEST     	R6 1 ; if R6 then PC := 126
	11	[4967]	JMP      	126 ; PC := 126
	12	[4968]	SELF     	R6 R0 K2 ; R7 := R0; R6 := R0[0xec3ed714]
	13	[4968]	CALL     	R6 2 2 ; R6 := R6(R7)
	14	[4969]	SELF     	R7 R5 K3 ; R8 := R5; R7 := R5[0xa4d581dc]
	15	[4969]	MOVE     	R9 R6 ; R9 := R6
	16	[4969]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	17	[4970]	GETUPVAL 	R8 U0 ; R8 := U0
	18	[4970]	GETTABLE 	R8 R8 K4 ; R8 := R8[0x06d055f9]
	19	[4970]	EQ       	0 R3 K5 ; if R3 ~= nil then PC := 22
	20	[4970]	JMP      	22 ; PC := 22
	21	[4970]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 22
	22	[4970]	OP_LOADBOOL	R9 1 0 ; R9 := true
	23	[4970]	MOVE     	R10 R3 ; R10 := R3
	24	[4970]	GETTABLE 	R11 R7 K6 ; R11 := R7["mTitle"]
	25	[4970]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	26	[4971]	GETGLOBAL	R9 K7 ; R9 := 0x03f57322
	27	[4971]	MOVE     	R10 R2 ; R10 := R2
	28	[4971]	CALL     	R9 2 2 ; R9 := R9(R10)
	29	[4972]	EQ       	0 R9 K5 ; if R9 ~= nil then PC := 49
	30	[4972]	JMP      	49 ; PC := 49
	31	[4973]	GETTABLE 	R9 R7 K8 ; R9 := R7["mStanding"]
	32	[4974]	TEST     	R4 0 ; if not R4 then PC := 49
	33	[4974]	JMP      	49 ; PC := 49
	34	[4975]	GETGLOBAL	R10 K0 ; R10 := 0x25d99d89
	35	[4975]	SELF     	R10 R10 K9 ; R11 := R10; R10 := R10[0xd9a41a87]
	36	[4975]	CALL     	R10 2 2 ; R10 := R10(R11)
	37	[4976]	LOADK    	R11 := 1.000000
	38	[4976]	LEN      	R12 R10 ; R12 := # R10
	39	[4976]	LOADK    	R13 := 1.000000
	40	[4976]	FORPREP  	R11 48 ; R11 -= R13; PC := 48
	41	[4977]	GETTABLE 	R15 R10 R14 ; R15 := R10[R14]
	42	[4977]	GETTABLE 	R15 R15 K10 ; R15 := R15["mTag"]
	43	[4977]	EQ       	0 R15 R6 ; if R15 ~= R6 then PC := 48
	44	[4977]	JMP      	48 ; PC := 48
	45	[4978]	GETTABLE 	R15 R10 R14 ; R15 := R10[R14]
	46	[4978]	GETTABLE 	R15 R15 K8 ; R15 := R15["mStanding"]
	47	[4978]	SUB      	R9 R9 R15 ; R9 := R9 - R15
	48	[4976]	FORLOOP  	R11 41 ; R11 += R13; if R11 <= R12 then begin PC := 41; R14 := R11 end
	49	[4986]	GETUPVAL 	R15 U0 ; R15 := U0
	50	[4986]	GETTABLE 	R15 R15 K4 ; R15 := R15[0x06d055f9]
	51	[4986]	SELF     	R16 R0 K11 ; R17 := R0; R16 := R0[0xeca04711]
	52	[4986]	CALL     	R16 2 2 ; R16 := R16(R17)
	53	[4986]	GETGLOBAL	R17 K12 ; R17 := 0xa94df70b
	54	[4986]	SELF     	R17 R17 K13 ; R18 := R17; R17 := R17[0x45c0937f]
	55	[4986]	MOVE     	R19 R6 ; R19 := R6
	56	[4986]	MOVE     	R20 R8 ; R20 := R8
	57	[4986]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	58	[4986]	LOADK    	R18 := 0.000000
	59	[4986]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	60	[4987]	GETUPVAL 	R16 U0 ; R16 := U0
	61	[4987]	GETTABLE 	R16 R16 K4 ; R16 := R16[0x06d055f9]
	62	[4987]	SELF     	R17 R0 K11 ; R18 := R0; R17 := R0[0xeca04711]
	63	[4987]	CALL     	R17 2 2 ; R17 := R17(R18)
	64	[4987]	GETGLOBAL	R18 K12 ; R18 := 0xa94df70b
	65	[4987]	SELF     	R18 R18 K14 ; R19 := R18; R18 := R18[0xa27c9ce1]
	66	[4987]	MOVE     	R20 R6 ; R20 := R6
	67	[4987]	MOVE     	R21 R8 ; R21 := R8
	68	[4987]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	69	[4987]	SELF     	R19 R0 K15 ; R20 := R0; R19 := R0[0xd3b8447c]
	70	[4987]	CALL     	R19 2 0 ; R19,... := R19(R20)
	71	[4987]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	72	[4989]	SUB      	R17 R16 R9 ; R17 := R16 - R9
	73	[4990]	SELF     	R18 R0 K16 ; R19 := R0; R18 := R0[0x08b0b7bf]
	74	[4990]	CALL     	R18 2 2 ; R18 := R18(R19)
	75	[4991]	LT       	0 K18 R18 ; if 0.000000 >= R18 then PC := 92
	76	[4991]	JMP      	92 ; PC := 92
	77	[4991]	LT       	0 R18 K19 ; if R18 >= 13.000000 then PC := 92
	78	[4991]	JMP      	92 ; PC := 92
	79	[4992]	SELF     	R19 R0 K20 ; R20 := R0; R19 := R0[0x715e4e45]
	80	[4992]	CALL     	R19 2 2 ; R19 := R19(R20)
	81	[4992]	TEST     	R19 0 ; if not R19 then PC := 92
	82	[4992]	JMP      	92 ; PC := 92
	83	[4993]	SELF     	R19 R5 K21 ; R20 := R5; R19 := R5[0xf5b0abc2]
	84	[4993]	MOVE     	R21 R18 ; R21 := R18
	85	[4993]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	86	[4994]	GETGLOBAL	R20 K22 ; R20 := 0x5bced4c4
	87	[4994]	GETTABLE 	R20 R20 K23 ; R20 := R20[0xac1b386a]
	88	[4994]	MOVE     	R21 R17 ; R21 := R17
	89	[4994]	MOVE     	R22 R19 ; R22 := R19
	90	[4994]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	91	[4994]	MOVE     	R17 R20 ; R17 := R20
	92	[4998]	EQ       	1 R1 K5 ; if R1 == nil then PC := 98
	93	[4998]	JMP      	98 ; PC := 98
	94	[4999]	GETGLOBAL	R20 K7 ; R20 := 0x03f57322
	95	[4999]	MOVE     	R21 R1 ; R21 := R1
	96	[4999]	CALL     	R20 2 2 ; R20 := R20(R21)
	97	[4999]	ADD      	R9 R9 R20 ; R9 := R9 + R20
	98	[5002]	SUB      	R20 R9 R15 ; R20 := R9 - R15
	99	[5003]	SUB      	R21 R16 R15 ; R21 := R16 - R15
	100	[5004]	EQ       	1 R20 R21 ; if R20 == R21 then PC := 103
	101	[5004]	JMP      	103 ; PC := 103
	102	[5004]	OP_LOADBOOL	R22 0 1 ; R22 := false; PC := 103
	103	[5004]	OP_LOADBOOL	R22 1 0 ; R22 := true
	104	[5006]	SELF     	R23 R0 K11 ; R24 := R0; R23 := R0[0xeca04711]
	105	[5006]	CALL     	R23 2 2 ; R23 := R23(R24)
	106	[5006]	TEST     	R23 0 ; if not R23 then PC := 120
	107	[5006]	JMP      	120 ; PC := 120
	108	[5007]	EQ       	0 R8 K18 ; if R8 ~= 0.000000 then PC := 116
	109	[5007]	JMP      	116 ; PC := 116
	110	[5008]	DIV      	R21 R21 K24 ; R21 := R21 / 2.000000
	111	[5009]	SUB      	R20 R20 R21 ; R20 := R20 - R21
	112	[5010]	LT       	0 R20 K18 ; if R20 >= 0.000000 then PC := 120
	113	[5010]	JMP      	120 ; PC := 120
	114	[5011]	UNM      	R21 R21 ; R21 := ^ R21
	115	[5012]	JMP      	120 ; PC := 120
	116	[5013]	LT       	0 R8 K18 ; if R8 >= 0.000000 then PC := 120
	117	[5013]	JMP      	120 ; PC := 120
	118	[5014]	SUB      	R20 R20 R21 ; R20 := R20 - R21
	119	[5015]	UNM      	R21 R21 ; R21 := ^ R21
	120	[5019]	MOVE     	R23 R8 ; R23 := R8
	121	[5019]	MOVE     	R24 R20 ; R24 := R20
	122	[5019]	MOVE     	R25 R21 ; R25 := R21
	123	[5019]	MOVE     	R26 R22 ; R26 := R22
	124	[5019]	MOVE     	R27 R17 ; R27 := R17
	125	[5019]	RETURN   	R23 6 ; return R23, R24, R25, R26, R27 
	126	[5022]	LOADK    	R23 := 0.000000
	127	[5022]	LOADK    	R24 := 0.000000
	128	[5022]	LOADK    	R25 := 1.000000
	129	[5022]	OP_LOADBOOL	R26 0 0 ; R26 := false
	130	[5022]	LOADK    	R27 := 0.000000
	131	[5022]	RETURN   	R23 6 ; return R23, R24, R25, R26, R27 
	132	[5023]	RETURN   	R0 1 ; return 

function #253 <?:5025,5027> (9 instructions, 36 bytes at 0000025274F1FCC0)
5 params, 11 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5026]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[5026]	MOVE     	R6 R0 ; R6 := R0
	3	[5026]	MOVE     	R7 R1 ; R7 := R1
	4	[5026]	MOVE     	R8 R2 ; R8 := R2
	5	[5026]	MOVE     	R9 R3 ; R9 := R3
	6	[5026]	MOVE     	R10 R4 ; R10 := R4
	7	[5026]	TAILCALL 	R5 6 0 ; R5,... := R5(R6,R7,R8,R9,R10)
	8	[5026]	RETURN   	R5 0 ; return R5,... 
	9	[5027]	RETURN   	R0 1 ; return 

function #254 <?:5029,5048> (47 instructions, 188 bytes at 0000025274F1FDD0)
2 params, 8 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[5031]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[5031]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSpeakerSyndicate"]
	3	[5031]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[5031]	TEST     	R3 1 ; if R3 then PC := 7
	5	[5031]	JMP      	7 ; PC := 7
	6	[5032]	GETTABLE 	R2 R0 K1 ; R2 := R0["mSpeakerSyndicate"]
	7	[5035]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[5035]	MOVE     	R4 R2 ; R4 := R2
	9	[5035]	CALL     	R3 2 5 ; R3,R4,R5,R6 := R3(R4)
	10	[5035]	SETTABLE 	R1 K5 R6 ; R1["HasEnoughReputationForSacrifice"] := R6
	11	[5035]	SETTABLE 	R1 K4 R5 ; R1["ReputationRequired"] := R5
	12	[5035]	SETTABLE 	R1 K3 R4 ; R1["Reputation"] := R4
	13	[5035]	SETTABLE 	R1 K2 R3 ; R1["Level"] := R3
	14	[5037]	LOADK    	R3 := 3.000000
	15	[5038]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	16	[5038]	MOVE     	R5 R2 ; R5 := R2
	17	[5038]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[5038]	TEST     	R4 1 ; if R4 then PC := 23
	19	[5038]	JMP      	23 ; PC := 23
	20	[5039]	SELF     	R4 R2 K6 ; R5 := R2; R4 := R2[0x8d5d5be4]
	21	[5039]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[5039]	MOVE     	R3 R4 ; R3 := R4
	23	[5041]	GETTABLE 	R4 R1 K2 ; R4 := R1["Level"]
	24	[5041]	LE       	1 R3 R4 ; if R3 <= R4 then PC := 27
	25	[5041]	JMP      	27 ; PC := 27
	26	[5041]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 27
	27	[5041]	OP_LOADBOOL	R4 1 0 ; R4 := true
	28	[5041]	SETTABLE 	R1 K7 R4 ; R1["Loved"] := R4
	29	[5043]	GETGLOBAL	R4 K8 ; R4 := 0x76ea806b
	30	[5043]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0x3f3ae64c]
	31	[5043]	LOADK    	R6 := 0.000000
	32	[5043]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	33	[5044]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	34	[5044]	MOVE     	R6 R4 ; R6 := R4
	35	[5044]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[5044]	TEST     	R5 1 ; if R5 then PC := 47
	37	[5044]	JMP      	47 ; PC := 47
	38	[5045]	SELF     	R5 R4 K10 ; R6 := R4; R5 := R4[0x40e9c32b]
	39	[5045]	CALL     	R5 2 2 ; R5 := R5(R6)
	40	[5046]	GETTABLE 	R6 R1 K7 ; R6 := R1["Loved"]
	41	[5046]	TEST     	R6 0 ; if not R6 then PC := 46
	42	[5046]	JMP      	46 ; PC := 46
	43	[5046]	SELF     	R6 R5 K11 ; R7 := R5; R6 := R5[0xd25ad6f2]
	44	[5046]	CALL     	R6 2 2 ; R6 := R6(R7)
	45	[5046]	NOT      	R6 R6 ; R6 := not R6
	46	[5046]	SETTABLE 	R1 K7 R6 ; R1["Loved"] := R6
	47	[5048]	RETURN   	R0 1 ; return 

function #255 <?:5050,5052> (5 instructions, 20 bytes at 0000025274F20240)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5051]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[5051]	MOVE     	R3 R0 ; R3 := R0
	3	[5051]	MOVE     	R4 R1 ; R4 := R1
	4	[5051]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[5052]	RETURN   	R0 1 ; return 

function #256 <?:5054,5067> (50 instructions, 200 bytes at 0000025274F20330)
2 params, 11 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[5055]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0xf64b7262]
	2	[5055]	GETTABLE 	R4 R1 K1 ; R4 := R1["mClipName"]
	3	[5055]	LOADK    	R5 K2 ; R5 := "Image"
	4	[5055]	LOADK    	R6 := 10.000000
	5	[5055]	GETUPVAL 	R7 U0 ; R7 := U0
	6	[5055]	GETTABLE 	R7 R7 K3 ; R7 := R7[0x06d055f9]
	7	[5055]	GETGLOBAL	R8 K4 ; R8 := 0x7b998233
	8	[5055]	GETTABLE 	R9 R1 K5 ; R9 := R1["Icon"]
	9	[5055]	CALL     	R8 2 2 ; R8 := R8(R9)
	10	[5055]	LOADK    	R9 := 0.000000
	11	[5055]	LOADK    	R10 := 100.000000
	12	[5055]	CALL     	R7 4 0 ; R7,... := R7(R8,R9,R10)
	13	[5055]	CALL     	R2 0 1 ; R2(R3,...)
	14	[5056]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	15	[5056]	GETTABLE 	R3 R1 K5 ; R3 := R1["Icon"]
	16	[5056]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[5056]	TEST     	R2 0 ; if not R2 then PC := 20
	18	[5056]	JMP      	20 ; PC := 20
	19	[5057]	RETURN   	R0 1 ; return 
	20	[5060]	GETGLOBAL	R2 K6 ; R2 := 0x7ed0a956
	21	[5060]	LOADK    	R3 K7 ; R3 := "/Lotus/Types/Game/LotusSigil"
	22	[5060]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[5061]	SELF     	R3 R0 K8 ; R4 := R0; R3 := R0[0x91a24e4b]
	24	[5061]	GETTABLE 	R5 R1 K1 ; R5 := R1["mClipName"]
	25	[5061]	LOADK    	R6 K9 ; R6 := ".Image"
	26	[5061]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	27	[5061]	LOADK    	R6 := 13.000000
	28	[5061]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	29	[5063]	GETUPVAL 	R4 U0 ; R4 := U0
	30	[5063]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x06d055f9]
	31	[5063]	GETTABLE 	R5 R1 K10 ; R5 := R1["Type"]
	32	[5063]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0xf2deaf69]
	33	[5063]	MOVE     	R7 R2 ; R7 := R2
	34	[5063]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	35	[5063]	MOVE     	R6 R3 ; R6 := R3
	36	[5063]	MUL      	R7 R3 K12 ; R7 := R3 * 1.444000
	37	[5063]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	38	[5065]	SELF     	R5 R0 K13 ; R6 := R0; R5 := R0[0x1cb415c1]
	39	[5065]	GETTABLE 	R7 R1 K1 ; R7 := R1["mClipName"]
	40	[5065]	LOADK    	R8 K9 ; R8 := ".Image"
	41	[5065]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	42	[5065]	GETTABLE 	R8 R1 K5 ; R8 := R1["Icon"]
	43	[5065]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	44	[5066]	SELF     	R5 R0 K0 ; R6 := R0; R5 := R0[0xf64b7262]
	45	[5066]	GETTABLE 	R7 R1 K1 ; R7 := R1["mClipName"]
	46	[5066]	LOADK    	R8 K2 ; R8 := "Image"
	47	[5066]	LOADK    	R9 := 12.000000
	48	[5066]	MOVE     	R10 R4 ; R10 := R4
	49	[5066]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	50	[5067]	RETURN   	R0 1 ; return 

function #257 <?:5069,5087> (43 instructions, 172 bytes at 0000025274F20720)
0 params, 9 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[5070]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[5071]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	3	[5071]	MOVE     	R2 R0 ; R2 := R0
	4	[5071]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5071]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[5071]	JMP      	9 ; PC := 9
	7	[5072]	LOADNIL  	R1 R1 ; R1 := nil
	8	[5072]	RETURN   	R1 2 ; return R1 
	9	[5075]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x69727e0b]
	10	[5075]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[5076]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	12	[5076]	MOVE     	R3 R1 ; R3 := R1
	13	[5076]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[5076]	TEST     	R2 0 ; if not R2 then PC := 18
	15	[5076]	JMP      	18 ; PC := 18
	16	[5077]	LOADNIL  	R2 R2 ; R2 := nil
	17	[5077]	RETURN   	R2 2 ; return R2 
	18	[5080]	GETGLOBAL	R2 K3 ; R2 := 0xc8802016
	19	[5080]	GETTABLE 	R3 R1 K4 ; R3 := R1["mDailyDeals"]
	20	[5080]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	21	[5080]	JMP      	39 ; PC := 39
	22	[5081]	GETGLOBAL	R7 K5 ; R7 := 0x34291f5c
	23	[5081]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x397b920f]
	24	[5081]	GETTABLE 	R8 R6 K7 ; R8 := R6["mActivation"]
	25	[5081]	CALL     	R7 2 2 ; R7 := R7(R8)
	26	[5081]	LE       	0 R7 K8 ; if R7 > 0.000000 then PC := 39
	27	[5081]	JMP      	39 ; PC := 39
	28	[5081]	GETGLOBAL	R7 K5 ; R7 := 0x34291f5c
	29	[5081]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x397b920f]
	30	[5081]	GETTABLE 	R8 R6 K9 ; R8 := R6["mExpiry"]
	31	[5081]	CALL     	R7 2 2 ; R7 := R7(R8)
	32	[5081]	LT       	0 K8 R7 ; if 0.000000 >= R7 then PC := 39
	33	[5081]	JMP      	39 ; PC := 39
	34	[5082]	GETGLOBAL	R7 K10 ; R7 := 0x6c97a788
	35	[5082]	GETTABLE 	R7 R7 K11 ; R7 := R7[0x403f5185]
	36	[5082]	MOVE     	R8 R6 ; R8 := R6
	37	[5082]	TAILCALL 	R7 2 0 ; R7,... := R7(R8)
	38	[5082]	RETURN   	R7 0 ; return R7,... 
	39	[5080]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 22; R4 := R5 end
	40	[5083]	JMP      	22 ; PC := 22
	41	[5086]	LOADNIL  	R7 R7 ; R7 := nil
	42	[5086]	RETURN   	R7 2 ; return R7 
	43	[5087]	RETURN   	R0 1 ; return 

function #258 <?:5089,5120> (106 instructions, 424 bytes at 0000025274F20A80)
2 params, 14 slots, 0 upvalues, 0 locals, 23 constants, 0 functions
	1	[5090]	LOADK    	R2 K0 ; R2 := ""
	2	[5091]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	3	[5091]	SELF     	R4 R1 K2 ; R5 := R1; R4 := R1[0xf278f8a1]
	4	[5091]	CALL     	R4 2 0 ; R4,... := R4(R5)
	5	[5091]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	6	[5091]	TEST     	R3 1 ; if R3 then PC := 72
	7	[5091]	JMP      	72 ; PC := 72
	8	[5091]	SELF     	R3 R1 K2 ; R4 := R1; R3 := R1[0xf278f8a1]
	9	[5091]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[5091]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0xf2deaf69]
	11	[5091]	GETGLOBAL	R5 K4 ; R5 := gRecipeItemType
	12	[5091]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	13	[5091]	TEST     	R3 0 ; if not R3 then PC := 72
	14	[5091]	JMP      	72 ; PC := 72
	15	[5092]	SELF     	R3 R0 K5 ; R4 := R0; R3 := R0[0x42b04007]
	16	[5092]	GETGLOBAL	R5 K6 ; R5 := 0x64fb1586
	17	[5092]	SELF     	R6 R1 K7 ; R7 := R1; R6 := R1[0xe9472db7]
	18	[5092]	CALL     	R6 2 0 ; R6,... := R6(R7)
	19	[5092]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	20	[5092]	OP_LOADBOOL	R6 1 0 ; R6 := true
	21	[5092]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	22	[5093]	EQ       	1 R3 K0 ; if R3 == "" then PC := 26
	23	[5093]	JMP      	26 ; PC := 26
	24	[5093]	EQ       	0 R3 K8 ; if R3 ~= nil then PC := 69
	25	[5093]	JMP      	69 ; PC := 69
	26	[5094]	SELF     	R4 R1 K9 ; R5 := R1; R4 := R1[0x5cc4dde3]
	27	[5094]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[5095]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	29	[5095]	MOVE     	R6 R4 ; R6 := R4
	30	[5095]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[5095]	TEST     	R5 1 ; if R5 then PC := 42
	32	[5095]	JMP      	42 ; PC := 42
	33	[5096]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0x42b04007]
	34	[5096]	GETGLOBAL	R7 K6 ; R7 := 0x64fb1586
	35	[5096]	SELF     	R8 R4 K10 ; R9 := R4; R8 := R4[0xd3a9d01f]
	36	[5096]	CALL     	R8 2 0 ; R8,... := R8(R9)
	37	[5096]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	38	[5096]	OP_LOADBOOL	R8 1 0 ; R8 := true
	39	[5096]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	40	[5096]	MOVE     	R2 R5 ; R2 := R5
	41	[5096]	JMP      	50 ; PC := 50
	42	[5099]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0x42b04007]
	43	[5099]	GETGLOBAL	R7 K6 ; R7 := 0x64fb1586
	44	[5099]	SELF     	R8 R1 K10 ; R9 := R1; R8 := R1[0xd3a9d01f]
	45	[5099]	CALL     	R8 2 0 ; R8,... := R8(R9)
	46	[5099]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	47	[5099]	OP_LOADBOOL	R8 1 0 ; R8 := true
	48	[5099]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	49	[5099]	MOVE     	R2 R5 ; R2 := R5
	50	[5102]	NEWTABLE 	R5 0 1 ; R5 := {}
	51	[5102]	SETTABLE 	R5 K11 R2 ; R5["ITEM"] := R2
	52	[5102]	MOVE     	R3 R5 ; R3 := R5
	53	[5103]	LOADK    	R5 K12 ; R5 := "/Lotus/Language/Items/BlueprintAndItem"
	54	[5104]	SELF     	R6 R1 K13 ; R7 := R1; R6 := R1[0x78ceba36]
	55	[5104]	CALL     	R6 2 2 ; R6 := R6(R7)
	56	[5104]	LT       	0 K14 R6 ; if 1.000000 >= R6 then PC := 62
	57	[5104]	JMP      	62 ; PC := 62
	58	[5105]	SELF     	R6 R1 K13 ; R7 := R1; R6 := R1[0x78ceba36]
	59	[5105]	CALL     	R6 2 2 ; R6 := R6(R7)
	60	[5105]	SETTABLE 	R3 K15 R6 ; R3["NUM"] := R6
	61	[5106]	LOADK    	R5 K16 ; R5 := "/Lotus/Language/Items/LargeBatchBlueprintAndItem"
	62	[5108]	SELF     	R6 R0 K5 ; R7 := R0; R6 := R0[0x42b04007]
	63	[5108]	MOVE     	R8 R5 ; R8 := R5
	64	[5108]	OP_LOADBOOL	R9 1 0 ; R9 := true
	65	[5108]	MOVE     	R10 R3 ; R10 := R3
	66	[5108]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	67	[5108]	MOVE     	R2 R6 ; R2 := R6
	68	[5108]	JMP      	70 ; PC := 70
	69	[5110]	MOVE     	R2 R3 ; R2 := R3
	70	[5112]	RETURN   	R2 2 ; return R2 
	71	[5112]	JMP      	101 ; PC := 101
	72	[5113]	SELF     	R6 R1 K17 ; R7 := R1; R6 := R1[0xfe9eb1a5]
	73	[5113]	CALL     	R6 2 2 ; R6 := R6(R7)
	74	[5113]	EQ       	0 R6 K19 ; if R6 ~= 35.000000 then PC := 90
	75	[5113]	JMP      	90 ; PC := 90
	76	[5114]	SELF     	R6 R1 K20 ; R7 := R1; R6 := R1[0x4e485a6f]
	77	[5114]	CALL     	R6 2 2 ; R6 := R6(R7)
	78	[5114]	UNM      	R6 R6 ; R6 := ^ R6
	79	[5115]	MOVE     	R7 R6 ; R7 := R6
	80	[5115]	LOADK    	R8 K21 ; R8 := " "
	81	[5115]	SELF     	R9 R0 K5 ; R10 := R0; R9 := R0[0x42b04007]
	82	[5115]	GETGLOBAL	R11 K6 ; R11 := 0x64fb1586
	83	[5115]	SELF     	R12 R1 K10 ; R13 := R1; R12 := R1[0xd3a9d01f]
	84	[5115]	CALL     	R12 2 0 ; R12,... := R12(R13)
	85	[5115]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	86	[5115]	OP_LOADBOOL	R12 1 0 ; R12 := true
	87	[5115]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	88	[5115]	CONCAT   	R2 R7 R9 ; R2 := R7 .. R8 .. R9
	89	[5115]	JMP      	101 ; PC := 101
	90	[5116]	SELF     	R7 R1 K17 ; R8 := R1; R7 := R1[0xfe9eb1a5]
	91	[5116]	CALL     	R7 2 2 ; R7 := R7(R8)
	92	[5116]	GETGLOBAL	R8 K18 ; R8 := 0x34291f5c
	93	[5116]	GETTABLE 	R8 R8 K22 ; R8 := R8["Item_AvatarImage"]
	94	[5116]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 101
	95	[5116]	JMP      	101 ; PC := 101
	96	[5117]	GETGLOBAL	R7 K6 ; R7 := 0x64fb1586
	97	[5117]	SELF     	R8 R1 K10 ; R9 := R1; R8 := R1[0xd3a9d01f]
	98	[5117]	CALL     	R8 2 0 ; R8,... := R8(R9)
	99	[5117]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	100	[5117]	MOVE     	R2 R7 ; R2 := R7
	101	[5119]	SELF     	R7 R0 K5 ; R8 := R0; R7 := R0[0x42b04007]
	102	[5119]	MOVE     	R9 R2 ; R9 := R2
	103	[5119]	OP_LOADBOOL	R10 1 0 ; R10 := true
	104	[5119]	TAILCALL 	R7 4 0 ; R7,... := R7(R8,R9,R10)
	105	[5119]	RETURN   	R7 0 ; return R7,... 
	106	[5120]	RETURN   	R0 1 ; return 

function #259 <?:5122,5151> (53 instructions, 212 bytes at 0000025274F210B0)
2 params, 15 slots, 0 upvalues, 0 locals, 26 constants, 0 functions
	1	[5123]	GETGLOBAL	R2 K0 ; R2 := 0x0032441c
	2	[5123]	SETTABLE 	R2 K1 R0 ; R2["TrainingMissionRank"] := R0
	3	[5124]	GETGLOBAL	R2 K2 ; R2 := 0xa94df70b
	4	[5124]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xc006aacf]
	5	[5124]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[5127]	GETGLOBAL	R3 K4 ; R3 := 0x5bced4c4
	7	[5127]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xac1b386a]
	8	[5127]	MOVE     	R4 R0 ; R4 := R0
	9	[5127]	SUB      	R5 R2 K6 ; R5 := R2 - 1.000000
	10	[5127]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	11	[5127]	MOVE     	R0 R3 ; R0 := R3
	12	[5131]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	13	[5131]	SETTABLE 	R3 K7 R1 ; R3["IsTrainingMissionPractise"] := R1
	14	[5133]	GETGLOBAL	R3 K2 ; R3 := 0xa94df70b
	15	[5133]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x769d1b6e]
	16	[5133]	MOVE     	R5 R0 ; R5 := R0
	17	[5133]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	18	[5134]	TEST     	R1 0 ; if not R1 then PC := 22
	19	[5134]	JMP      	22 ; PC := 22
	20	[5136]	GETTABLE 	R4 R3 K9 ; R4 := R3["missionReward"]
	21	[5136]	SETTABLE 	R4 K10 K11 ; R4["credits"] := 0.000000
	22	[5139]	GETGLOBAL	R4 K12 ; R4 := 0x34291f5c
	23	[5139]	GETTABLE 	R4 R4 K13 ; R4 := R4[0x68d83431]
	24	[5139]	CALL     	R4 1 2 ; R4 := R4()
	25	[5140]	SELF     	R5 R3 K14 ; R6 := R3; R5 := R3[0xbfa0067d]
	26	[5140]	CALL     	R5 2 2 ; R5 := R5(R6)
	27	[5141]	SELF     	R6 R3 K15 ; R7 := R3; R6 := R3[0xec195a1e]
	28	[5141]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[5142]	LOADK    	R7 := 1.000000
	30	[5142]	LEN      	R8 R6 ; R8 := # R6
	31	[5142]	LOADK    	R9 := 1.000000
	32	[5142]	FORPREP  	R7 37 ; R7 -= R9; PC := 37
	33	[5143]	SELF     	R11 R4 K16 ; R12 := R4; R11 := R4[0x0f690d63]
	34	[5143]	GETTABLE 	R13 R6 R10 ; R13 := R6[R10]
	35	[5143]	GETTABLE 	R13 R13 K17 ; R13 := R13["agent"]
	36	[5143]	CALL     	R11 3 1 ; R11(R12,R13)
	37	[5142]	FORLOOP  	R7 33 ; R7 += R9; if R7 <= R8 then begin PC := 33; R10 := R7 end
	38	[5146]	SELF     	R11 R4 K18 ; R12 := R4; R11 := R4[0xeaa7e8dc]
	39	[5146]	MOVE     	R13 R5 ; R13 := R5
	40	[5146]	CALL     	R11 3 1 ; R11(R12,R13)
	41	[5147]	SELF     	R11 R4 K19 ; R12 := R4; R11 := R4[0x8623cf14]
	42	[5147]	GETTABLE 	R13 R3 K20 ; R13 := R3["levelOverride"]
	43	[5147]	SELF     	R13 R13 K21 ; R14 := R13; R13 := R13[0xed4e0128]
	44	[5147]	CALL     	R13 2 0 ; R13,... := R13(R14)
	45	[5147]	CALL     	R11 0 1 ; R11(R12,...)
	46	[5148]	GETTABLE 	R11 R3 K22 ; R11 := R3["gameRules"]
	47	[5148]	SETTABLE 	R4 K22 R11 ; R4["gameRules"] := R11
	48	[5149]	SETTABLE 	R4 K23 K24 ; R4["migrateServer"] := false
	49	[5150]	GETGLOBAL	R11 K12 ; R11 := 0x34291f5c
	50	[5150]	GETTABLE 	R11 R11 K25 ; R11 := R11[0x4e0a1dfc]
	51	[5150]	MOVE     	R12 R4 ; R12 := R4
	52	[5150]	CALL     	R11 2 1 ; R11(R12)
	53	[5151]	RETURN   	R0 1 ; return 

function #260 <?:5153,5155> (3 instructions, 12 bytes at 0000025274F21560)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[5154]	LOADK    	R0 := 10.000000
	2	[5154]	RETURN   	R0 2 ; return R0 
	3	[5155]	RETURN   	R0 1 ; return 

function #261 <?:5157,5159> (4 instructions, 16 bytes at 0000025274F21630)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5158]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5158]	CALL     	R0 1 2 ; R0 := R0()
	3	[5158]	RETURN   	R0 2 ; return R0 
	4	[5159]	RETURN   	R0 1 ; return 

function #262 <?:5161,5228> (172 instructions, 688 bytes at 0000025274F21700)
2 params, 27 slots, 2 upvalues, 0 locals, 38 constants, 0 functions
	1	[5162]	OP_LOADBOOL	R2 1 0 ; R2 := true
	2	[5163]	LOADK    	R3 K0 ; R3 := ""
	3	[5164]	OP_LOADBOOL	R4 0 0 ; R4 := false
	4	[5166]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	5	[5166]	MOVE     	R6 R0 ; R6 := R0
	6	[5166]	CALL     	R5 2 2 ; R5 := R5(R6)
	7	[5166]	TEST     	R5 0 ; if not R5 then PC := 12
	8	[5166]	JMP      	12 ; PC := 12
	9	[5167]	OP_LOADBOOL	R5 0 0 ; R5 := false
	10	[5167]	MOVE     	R6 R3 ; R6 := R3
	11	[5167]	RETURN   	R5 3 ; return R5, R6 
	12	[5171]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0x62c81b76]
	13	[5171]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[5172]	SELF     	R6 R5 K3 ; R7 := R5; R6 := R5[0xb61abfd2]
	15	[5172]	LOADK    	R8 := 0.000000
	16	[5172]	LOADK    	R9 := 1.000000
	17	[5172]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	18	[5173]	SELF     	R7 R5 K3 ; R8 := R5; R7 := R5[0xb61abfd2]
	19	[5173]	LOADK    	R9 := 0.000000
	20	[5173]	LOADK    	R10 := 2.000000
	21	[5173]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	22	[5174]	SELF     	R8 R5 K3 ; R9 := R5; R8 := R5[0xb61abfd2]
	23	[5174]	LOADK    	R10 := 0.000000
	24	[5174]	LOADK    	R11 := 3.000000
	25	[5174]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	26	[5176]	GETTABLE 	R9 R6 K5 ; R9 := R6["mItemId"]
	27	[5176]	GETTABLE 	R9 R9 K6 ; R9 := R9["mId"]
	28	[5176]	GETGLOBAL	R10 K4 ; R10 := 0x6c97a788
	29	[5176]	GETTABLE 	R10 R10 K7 ; R10 := R10["InvalidItemID"]
	30	[5176]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 44
	31	[5176]	JMP      	44 ; PC := 44
	32	[5177]	GETTABLE 	R9 R7 K5 ; R9 := R7["mItemId"]
	33	[5177]	GETTABLE 	R9 R9 K6 ; R9 := R9["mId"]
	34	[5177]	GETGLOBAL	R10 K4 ; R10 := 0x6c97a788
	35	[5177]	GETTABLE 	R10 R10 K7 ; R10 := R10["InvalidItemID"]
	36	[5177]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 44
	37	[5177]	JMP      	44 ; PC := 44
	38	[5178]	GETTABLE 	R9 R8 K5 ; R9 := R8["mItemId"]
	39	[5178]	GETTABLE 	R9 R9 K6 ; R9 := R9["mId"]
	40	[5178]	GETGLOBAL	R10 K4 ; R10 := 0x6c97a788
	41	[5178]	GETTABLE 	R10 R10 K7 ; R10 := R10["InvalidItemID"]
	42	[5178]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 46
	43	[5178]	JMP      	46 ; PC := 46
	44	[5180]	OP_LOADBOOL	R2 0 0 ; R2 := false
	45	[5181]	LOADK    	R3 K8 ; R3 := "/Lotus/Language/Menu/IncompleteLoadout"
	46	[5184]	GETGLOBAL	R9 K9 ; R9 := 0x25d99d89
	47	[5185]	SELF     	R10 R9 K10 ; R11 := R9; R10 := R9[0xefee6c91]
	48	[5185]	CALL     	R10 2 2 ; R10 := R10(R11)
	49	[5186]	GETGLOBAL	R11 K11 ; R11 := 0xa94df70b
	50	[5186]	SELF     	R11 R11 K12 ; R12 := R11; R11 := R11[0xc006aacf]
	51	[5186]	CALL     	R11 2 2 ; R11 := R11(R12)
	52	[5187]	GETGLOBAL	R12 K13 ; R12 := 0x5bced4c4
	53	[5187]	GETTABLE 	R12 R12 K14 ; R12 := R12[0xac1b386a]
	54	[5187]	ADD      	R13 R10 K15 ; R13 := R10 + 1.000000
	55	[5187]	SUB      	R14 R11 K15 ; R14 := R11 - 1.000000
	56	[5187]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	57	[5188]	GETGLOBAL	R13 K11 ; R13 := 0xa94df70b
	58	[5188]	SELF     	R13 R13 K16 ; R14 := R13; R13 := R13[0x769d1b6e]
	59	[5188]	MOVE     	R15 R12 ; R15 := R12
	60	[5188]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	61	[5189]	GETTABLE 	R14 R13 K17 ; R14 := R13["archwingRequired"]
	62	[5189]	TEST     	R14 0 ; if not R14 then PC := 112
	63	[5189]	JMP      	112 ; PC := 112
	64	[5190]	SELF     	R14 R9 K18 ; R15 := R9; R14 := R9[0x25a6e75e]
	65	[5190]	CALL     	R14 2 2 ; R14 := R14(R15)
	66	[5191]	SELF     	R15 R14 K19 ; R16 := R14; R15 := R14[0x566259e1]
	67	[5191]	LOADK    	R17 := 2.000000
	68	[5191]	SELF     	R18 R14 K20 ; R19 := R14; R18 := R14[0x4e457768]
	69	[5191]	LOADK    	R20 := 2.000000
	70	[5191]	CALL     	R18 3 0 ; R18,... := R18(R19,R20)
	71	[5191]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	72	[5192]	SELF     	R16 R15 K21 ; R17 := R15; R16 := R15[0x2abbe722]
	73	[5192]	LOADK    	R18 := 0.000000
	74	[5192]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	75	[5193]	SELF     	R17 R15 K21 ; R18 := R15; R17 := R15[0x2abbe722]
	76	[5193]	LOADK    	R19 := 2.000000
	77	[5193]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	78	[5194]	SELF     	R18 R15 K21 ; R19 := R15; R18 := R15[0x2abbe722]
	79	[5194]	LOADK    	R20 := 3.000000
	80	[5194]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	81	[5195]	GETTABLE 	R19 R16 K5 ; R19 := R16["mItemId"]
	82	[5195]	GETTABLE 	R19 R19 K6 ; R19 := R19["mId"]
	83	[5195]	GETGLOBAL	R20 K4 ; R20 := 0x6c97a788
	84	[5195]	GETTABLE 	R20 R20 K7 ; R20 := R20["InvalidItemID"]
	85	[5195]	EQ       	1 R19 R20 ; if R19 == R20 then PC := 99
	86	[5195]	JMP      	99 ; PC := 99
	87	[5195]	GETTABLE 	R19 R17 K5 ; R19 := R17["mItemId"]
	88	[5195]	GETTABLE 	R19 R19 K6 ; R19 := R19["mId"]
	89	[5195]	GETGLOBAL	R20 K4 ; R20 := 0x6c97a788
	90	[5195]	GETTABLE 	R20 R20 K7 ; R20 := R20["InvalidItemID"]
	91	[5195]	EQ       	1 R19 R20 ; if R19 == R20 then PC := 99
	92	[5195]	JMP      	99 ; PC := 99
	93	[5195]	GETTABLE 	R19 R18 K5 ; R19 := R18["mItemId"]
	94	[5195]	GETTABLE 	R19 R19 K6 ; R19 := R19["mId"]
	95	[5195]	GETGLOBAL	R20 K4 ; R20 := 0x6c97a788
	96	[5195]	GETTABLE 	R20 R20 K7 ; R20 := R20["InvalidItemID"]
	97	[5195]	EQ       	0 R19 R20 ; if R19 ~= R20 then PC := 100
	98	[5195]	JMP      	100 ; PC := 100
	99	[5195]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 100
	100	[5195]	OP_LOADBOOL	R19 1 0 ; R19 := true
	101	[5196]	SELF     	R20 R9 K22 ; R21 := R9; R20 := R9[0xc192c12e]
	102	[5196]	CALL     	R20 2 2 ; R20 := R20(R21)
	103	[5196]	TEST     	R20 1 ; if R20 then PC := 106
	104	[5196]	JMP      	106 ; PC := 106
	105	[5196]	OP_LOADBOOL	R20 0 0 ; R20 := false
	106	[5197]	TEST     	R19 0 ; if not R19 then PC := 110
	107	[5197]	JMP      	110 ; PC := 110
	108	[5197]	TEST     	R20 1 ; if R20 then PC := 112
	109	[5197]	JMP      	112 ; PC := 112
	110	[5198]	OP_LOADBOOL	R2 0 0 ; R2 := false
	111	[5199]	LOADK    	R3 K23 ; R3 := "/Lotus/Language/Menu/ArchwingFailureSolo"
	112	[5204]	TEST     	R2 0 ; if not R2 then PC := 150
	113	[5204]	JMP      	150 ; PC := 150
	114	[5206]	SELF     	R21 R0 K24 ; R22 := R0; R21 := R0[0xde2d1b82]
	115	[5206]	CALL     	R21 2 2 ; R21 := R21(R22)
	116	[5207]	LT       	0 K25 R21 ; if 0.000000 >= R21 then PC := 150
	117	[5207]	JMP      	150 ; PC := 150
	118	[5207]	TEST     	R1 1 ; if R1 then PC := 150
	119	[5207]	JMP      	150 ; PC := 150
	120	[5208]	GETUPVAL 	R22 U0 ; R22 := U0
	121	[5208]	LOADNIL  	R23 R23 ; R23 := nil
	122	[5208]	MOVE     	R24 R21 ; R24 := R21
	123	[5208]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	124	[5210]	SELF     	R23 R0 K26 ; R24 := R0; R23 := R0[0x6d381cdf]
	125	[5210]	CALL     	R23 2 2 ; R23 := R23(R24)
	126	[5210]	LT       	0 K25 R23 ; if 0.000000 >= R23 then PC := 139
	127	[5210]	JMP      	139 ; PC := 139
	128	[5211]	GETGLOBAL	R23 K27 ; R23 := 0x603636ad
	129	[5211]	LOADK    	R24 K28 ; R24 := "/Lotus/Language/Menu/Foreground_LevelUpRetry"
	130	[5211]	NEWTABLE 	R25 0 2 ; R25 := {}
	131	[5211]	SETTABLE 	R25 K29 R22 ; R25[0x89326c93] := R22
	132	[5211]	GETUPVAL 	R26 U1 ; R26 := U1
	133	[5211]	CALL     	R26 1 2 ; R26 := R26()
	134	[5211]	SETTABLE 	R25 K30 R26 ; R25[0xc7b81e8d] := R26
	135	[5211]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	136	[5211]	MOVE     	R3 R23 ; R3 := R23
	137	[5212]	OP_LOADBOOL	R4 1 0 ; R4 := true
	138	[5212]	JMP      	149 ; PC := 149
	139	[5214]	GETGLOBAL	R23 K27 ; R23 := 0x603636ad
	140	[5214]	LOADK    	R24 K31 ; R24 := "/Lotus/Language/Menu/Foreground_LevelUpSuspended"
	141	[5214]	OP_LOADBOOL	R25 0 0 ; R25 := false
	142	[5214]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	143	[5215]	GETGLOBAL	R24 K32 ; R24 := 0x7f5022cf
	144	[5215]	GETTABLE 	R24 R24 K33 ; R24 := R24[0xe8072ded]
	145	[5215]	MOVE     	R25 R23 ; R25 := R23
	146	[5215]	MOVE     	R26 R22 ; R26 := R22
	147	[5215]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	148	[5215]	MOVE     	R3 R24 ; R3 := R24
	149	[5218]	OP_LOADBOOL	R2 0 0 ; R2 := false
	150	[5222]	TEST     	R2 0 ; if not R2 then PC := 168
	151	[5222]	JMP      	168 ; PC := 168
	152	[5222]	GETGLOBAL	R24 K1 ; R24 := 0x7b998233
	153	[5222]	GETGLOBAL	R25 K34 ; R25 := 0xe7f2b02f
	154	[5222]	SELF     	R25 R25 K35 ; R26 := R25; R25 := R25[0x565be9ee]
	155	[5222]	CALL     	R25 2 0 ; R25,... := R25(R26)
	156	[5222]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	157	[5222]	TEST     	R24 1 ; if R24 then PC := 168
	158	[5222]	JMP      	168 ; PC := 168
	159	[5222]	GETGLOBAL	R24 K34 ; R24 := 0xe7f2b02f
	160	[5222]	SELF     	R24 R24 K35 ; R25 := R24; R24 := R24[0x565be9ee]
	161	[5222]	CALL     	R24 2 2 ; R24 := R24(R25)
	162	[5222]	SELF     	R24 R24 K36 ; R25 := R24; R24 := R24[0x3b013073]
	163	[5222]	CALL     	R24 2 2 ; R24 := R24(R25)
	164	[5222]	LT       	0 K15 R24 ; if 1.000000 >= R24 then PC := 168
	165	[5222]	JMP      	168 ; PC := 168
	166	[5223]	OP_LOADBOOL	R2 0 0 ; R2 := false
	167	[5224]	LOADK    	R3 K37 ; R3 := "/Lotus/Language/Menu/Foreground_LevelUpSessionActive"
	168	[5227]	MOVE     	R24 R2 ; R24 := R2
	169	[5227]	MOVE     	R25 R3 ; R25 := R3
	170	[5227]	MOVE     	R26 R4 ; R26 := R4
	171	[5227]	RETURN   	R24 4 ; return R24, R25, R26 
	172	[5228]	RETURN   	R0 1 ; return 

function #263 <?:5230,5232> (12 instructions, 48 bytes at 0000025274F221C0)
2 params, 8 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5231]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	2	[5231]	LOADK    	R3 K1 ; R3 := "Dojo: OnTrainingResultUploaded result="
	3	[5231]	GETGLOBAL	R4 K2 ; R4 := 0x64fb1586
	4	[5231]	MOVE     	R5 R0 ; R5 := R0
	5	[5231]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[5231]	LOADK    	R5 K3 ; R5 := ", body="
	7	[5231]	GETGLOBAL	R6 K2 ; R6 := 0x64fb1586
	8	[5231]	MOVE     	R7 R1 ; R7 := R1
	9	[5231]	CALL     	R6 2 2 ; R6 := R6(R7)
	10	[5231]	CONCAT   	R3 R3 R6 ; R3 := R3 .. R4 .. R5 .. R6
	11	[5231]	CALL     	R2 2 1 ; R2(R3)
	12	[5232]	RETURN   	R0 1 ; return 

function #264 <?:5234,5258> (66 instructions, 264 bytes at 0000025274F223A0)
5 params, 14 slots, 2 upvalues, 0 locals, 19 constants, 0 functions
	1	[5235]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[5235]	GETTABLE 	R5 R5 K0 ; R5 := R5[0x06d055f9]
	3	[5235]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	4	[5235]	GETGLOBAL	R7 K2 ; R7 := 0x0032441c
	5	[5235]	GETTABLE 	R7 R7 K3 ; R7 := R7["IsTrainingMissionPractise"]
	6	[5235]	CALL     	R6 2 2 ; R6 := R6(R7)
	7	[5235]	OP_LOADBOOL	R7 1 0 ; R7 := true
	8	[5235]	GETGLOBAL	R8 K2 ; R8 := 0x0032441c
	9	[5235]	GETTABLE 	R8 R8 K3 ; R8 := R8["IsTrainingMissionPractise"]
	10	[5235]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	11	[5236]	GETGLOBAL	R6 K4 ; R6 := 0x2d0fad09
	12	[5236]	LOADK    	R7 K5 ; R7 := "Lotus.Scripts.ChallengeRooms.BaseChallengeRoom"
	13	[5236]	CALL     	R6 2 2 ; R6 := R6(R7)
	14	[5238]	TEST     	R5 1 ; if R5 then PC := 21
	15	[5238]	JMP      	21 ; PC := 21
	16	[5239]	GETGLOBAL	R7 K6 ; R7 := 0x25d99d89
	17	[5239]	SELF     	R7 R7 K7 ; R8 := R7; R7 := R7[0x000daadd]
	18	[5239]	LOADK    	R9 := 1.000000
	19	[5239]	GETUPVAL 	R10 U1 ; R10 := U1
	20	[5239]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	21	[5242]	GETGLOBAL	R7 K1 ; R7 := 0x7b998233
	22	[5242]	MOVE     	R8 R0 ; R8 := R0
	23	[5242]	CALL     	R7 2 2 ; R7 := R7(R8)
	24	[5242]	TEST     	R7 0 ; if not R7 then PC := 31
	25	[5242]	JMP      	31 ; PC := 31
	26	[5243]	GETGLOBAL	R7 K8 ; R7 := 0x89326c93
	27	[5243]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0xe3a0bbca]
	28	[5243]	LOADK    	R9 := 0.000000
	29	[5243]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	30	[5243]	MOVE     	R0 R7 ; R0 := R7
	31	[5246]	SELF     	R7 R0 K10 ; R8 := R0; R7 := R0[0xf2deaf69]
	32	[5246]	GETGLOBAL	R9 K11 ; R9 := gLotusVehicleAvatarType
	33	[5246]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	34	[5246]	TEST     	R7 0 ; if not R7 then PC := 39
	35	[5246]	JMP      	39 ; PC := 39
	36	[5247]	SELF     	R7 R0 K12 ; R8 := R0; R7 := R0[0xff005826]
	37	[5247]	CALL     	R7 2 2 ; R7 := R7(R8)
	38	[5247]	MOVE     	R0 R7 ; R0 := R7
	39	[5250]	GETGLOBAL	R7 K1 ; R7 := 0x7b998233
	40	[5250]	MOVE     	R8 R0 ; R8 := R0
	41	[5250]	CALL     	R7 2 2 ; R7 := R7(R8)
	42	[5250]	TEST     	R7 1 ; if R7 then PC := 58
	43	[5250]	JMP      	58 ; PC := 58
	44	[5251]	SELF     	R7 R0 K13 ; R8 := R0; R7 := R0[0x7027c544]
	45	[5251]	MOVE     	R9 R1 ; R9 := R1
	46	[5251]	OP_LOADBOOL	R10 1 0 ; R10 := true
	47	[5251]	LOADK    	R11 := 2.000000
	48	[5251]	LOADK    	R12 := 3.000000
	49	[5251]	OP_LOADBOOL	R13 1 0 ; R13 := true
	50	[5251]	CALL     	R7 7 1 ; R7(R8,R9,R10,R11,R12,R13)
	51	[5252]	SELF     	R7 R0 K15 ; R8 := R0; R7 := R0[0x511d26b8]
	52	[5252]	MOVE     	R9 R2 ; R9 := R2
	53	[5252]	OP_LOADBOOL	R10 1 0 ; R10 := true
	54	[5252]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	55	[5253]	SELF     	R7 R0 K16 ; R8 := R0; R7 := R0[0x7809bf6b]
	56	[5253]	OP_LOADBOOL	R9 1 0 ; R9 := true
	57	[5253]	CALL     	R7 3 1 ; R7(R8,R9)
	58	[5256]	GETGLOBAL	R7 K17 ; R7 := 0xcbd666e1
	59	[5256]	LOADK    	R8 := 3.000000
	60	[5256]	CALL     	R7 2 1 ; R7(R8)
	61	[5257]	GETTABLE 	R7 R6 K18 ; R7 := R6[0xbe09592b]
	62	[5257]	MOVE     	R8 R3 ; R8 := R3
	63	[5257]	MOVE     	R9 R4 ; R9 := R4
	64	[5257]	MOVE     	R10 R5 ; R10 := R5
	65	[5257]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	66	[5258]	RETURN   	R0 1 ; return 

function #265 <?:5260,5274> (46 instructions, 184 bytes at 0000025274F227B0)
1 param, 12 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[5261]	GETGLOBAL	R1 K0 ; R1 := 0xbe190284
	2	[5261]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xf2deaf69]
	3	[5261]	GETGLOBAL	R3 K2 ; R3 := gLotusBasePvpGameRulesType
	4	[5261]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[5262]	NEWTABLE 	R2 0 0 ; R2 := {}
	6	[5264]	GETGLOBAL	R3 K3 ; R3 := 0x89326c93
	7	[5264]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x7d108ddb]
	8	[5264]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[5265]	GETGLOBAL	R4 K5 ; R4 := 0xc8802016
	10	[5265]	MOVE     	R5 R3 ; R5 := R3
	11	[5265]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	12	[5265]	JMP      	43 ; PC := 43
	13	[5266]	TEST     	R1 0 ; if not R1 then PC := 33
	14	[5266]	JMP      	33 ; PC := 33
	15	[5266]	SELF     	R9 R0 K6 ; R10 := R0; R9 := R0[0xad1e0b4b]
	16	[5266]	CALL     	R9 2 2 ; R9 := R9(R10)
	17	[5266]	SELF     	R10 R8 K6 ; R11 := R8; R10 := R8[0xad1e0b4b]
	18	[5266]	CALL     	R10 2 2 ; R10 := R10(R11)
	19	[5266]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 43
	20	[5266]	JMP      	43 ; PC := 43
	21	[5266]	GETGLOBAL	R9 K7 ; R9 := _T
	22	[5266]	GETTABLE 	R9 R9 K8 ; R9 := R9["PvpMode"]
	23	[5266]	EQ       	1 R9 K9 ; if R9 == nil then PC := 33
	24	[5266]	JMP      	33 ; PC := 33
	25	[5266]	GETGLOBAL	R9 K7 ; R9 := _T
	26	[5266]	GETTABLE 	R9 R9 K8 ; R9 := R9["PvpMode"]
	27	[5266]	TEST     	R9 0 ; if not R9 then PC := 43
	28	[5266]	JMP      	43 ; PC := 43
	29	[5266]	GETGLOBAL	R9 K7 ; R9 := _T
	30	[5266]	GETTABLE 	R9 R9 K8 ; R9 := R9["PvpMode"]
	31	[5266]	EQ       	1 R9 K11 ; if R9 == 3.000000 then PC := 43
	32	[5266]	JMP      	43 ; PC := 43
	33	[5267]	SELF     	R9 R8 K12 ; R10 := R8; R9 := R8[0x5ca33548]
	34	[5267]	CALL     	R9 2 2 ; R9 := R9(R10)
	35	[5267]	GETGLOBAL	R10 K13 ; R10 := HIDDEN_PLAYER_NAME
	36	[5267]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 43
	37	[5267]	JMP      	43 ; PC := 43
	38	[5268]	GETGLOBAL	R9 K14 ; R9 := 0x33bdd652
	39	[5268]	GETTABLE 	R9 R9 K15 ; R9 := R9[0x23d5322f]
	40	[5268]	MOVE     	R10 R2 ; R10 := R2
	41	[5268]	MOVE     	R11 R8 ; R11 := R8
	42	[5268]	CALL     	R9 3 1 ; R9(R10,R11)
	43	[5265]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 13; R6 := R7 end
	44	[5270]	JMP      	13 ; PC := 13
	45	[5273]	RETURN   	R2 2 ; return R2 
	46	[5274]	RETURN   	R0 1 ; return 

function #266 <?:5277,5289> (23 instructions, 92 bytes at 0000025274F22B20)
2 params, 6 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[5279]	GETGLOBAL	R2 K0 ; R2 := 0x89326c93
	2	[5279]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xc7b81e8d]
	3	[5279]	MOVE     	R4 R0 ; R4 := R0
	4	[5279]	MOVE     	R5 R1 ; R5 := R1
	5	[5279]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	6	[5281]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	7	[5281]	MOVE     	R4 R2 ; R4 := R2
	8	[5281]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[5281]	TEST     	R3 1 ; if R3 then PC := 13
	10	[5281]	JMP      	13 ; PC := 13
	11	[5282]	RETURN   	R2 2 ; return R2 
	12	[5282]	JMP      	19 ; PC := 19
	13	[5284]	GETGLOBAL	R3 K3 ; R3 := 0x60cce7b4
	14	[5284]	GETGLOBAL	R4 K0 ; R4 := 0x89326c93
	15	[5284]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x18d05d30]
	16	[5284]	CALL     	R4 2 2 ; R4 := R4(R5)
	17	[5284]	NOT      	R4 R4 ; R4 := not R4
	18	[5284]	CALL     	R3 2 1 ; R3(R4)
	19	[5287]	GETGLOBAL	R3 K5 ; R3 := 0xcbd666e1
	20	[5287]	LOADK    	R4 := 0.000000
	21	[5287]	CALL     	R3 2 1 ; R3(R4)
	22	[5287]	JMP      	1 ; PC := 1
	23	[5289]	RETURN   	R0 1 ; return 

function #267 <?:5291,5303> (19 instructions, 76 bytes at 0000025274F22D00)
1 param, 5 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[5292]	MOVE     	R1 R0 ; R1 := R0
	2	[5294]	EQ       	0 R1 K0 ; if R1 ~= "" then PC := 9
	3	[5294]	JMP      	9 ; PC := 9
	4	[5295]	GETGLOBAL	R2 K1 ; R2 := 0x603636ad
	5	[5295]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Menu/Loadout_Default"
	6	[5295]	OP_LOADBOOL	R4 0 0 ; R4 := false
	7	[5295]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[5295]	MOVE     	R1 R2 ; R1 := R2
	9	[5298]	GETGLOBAL	R2 K3 ; R2 := 0xeb8fddd7
	10	[5298]	CALL     	R2 1 2 ; R2 := R2()
	11	[5298]	TEST     	R2 0 ; if not R2 then PC := 18
	12	[5298]	JMP      	18 ; PC := 18
	13	[5299]	GETGLOBAL	R2 K4 ; R2 := 0x09423272
	14	[5299]	MOVE     	R3 R1 ; R3 := R1
	15	[5299]	LOADK    	R4 := 1.000000
	16	[5299]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	17	[5299]	MOVE     	R1 R2 ; R1 := R2
	18	[5302]	RETURN   	R1 2 ; return R1 
	19	[5303]	RETURN   	R0 1 ; return 

function #268 <?:5305,5307> (5 instructions, 20 bytes at 0000025274F22F10)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5306]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5306]	MOVE     	R2 R0 ; R2 := R0
	3	[5306]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[5306]	RETURN   	R1 0 ; return R1,... 
	5	[5307]	RETURN   	R0 1 ; return 

function #269 <?:5309,5382> (210 instructions, 840 bytes at 0000025274F23000)
1 param, 25 slots, 4 upvalues, 0 locals, 42 constants, 0 functions
	1	[5310]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[5311]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	3	[5311]	MOVE     	R3 R1 ; R3 := R1
	4	[5311]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[5311]	TEST     	R2 0 ; if not R2 then PC := 10
	6	[5311]	JMP      	10 ; PC := 10
	7	[5313]	LOADK    	R2 K2 ; R2 := ""
	8	[5313]	OP_LOADBOOL	R3 0 0 ; R3 := false
	9	[5313]	RETURN   	R2 3 ; return R2, R3 
	10	[5316]	GETGLOBAL	R2 K3 ; R2 := _T
	11	[5316]	GETTABLE 	R2 R2 K4 ; R2 := R2["ActiveQuestLoaded"]
	12	[5316]	TEST     	R2 1 ; if R2 then PC := 20
	13	[5316]	JMP      	20 ; PC := 20
	14	[5317]	GETGLOBAL	R2 K5 ; R2 := 0x3d106989
	15	[5317]	LOADK    	R3 K6 ; R3 := "Update quests: no active quest loaded"
	16	[5317]	CALL     	R2 2 1 ; R2(R3)
	17	[5318]	LOADK    	R2 K2 ; R2 := ""
	18	[5318]	OP_LOADBOOL	R3 0 0 ; R3 := false
	19	[5318]	RETURN   	R2 3 ; return R2, R3 
	20	[5321]	GETUPVAL 	R2 U0 ; R2 := U0
	21	[5321]	MOVE     	R3 R1 ; R3 := R1
	22	[5321]	CALL     	R2 2 5 ; R2,R3,R4,R5 := R2(R3)
	23	[5322]	LOADK    	R6 K2 ; R6 := ""
	24	[5324]	GETGLOBAL	R7 K3 ; R7 := _T
	25	[5324]	GETTABLE 	R7 R7 K7 ; R7 := R7["questInfo"]
	26	[5324]	EQ       	1 R7 K8 ; if R7 == nil then PC := 50
	27	[5324]	JMP      	50 ; PC := 50
	28	[5324]	GETGLOBAL	R7 K3 ; R7 := _T
	29	[5324]	GETTABLE 	R7 R7 K7 ; R7 := R7["questInfo"]
	30	[5324]	GETTABLE 	R7 R7 K9 ; R7 := R7["activeQuest"]
	31	[5324]	EQ       	1 R7 K8 ; if R7 == nil then PC := 50
	32	[5324]	JMP      	50 ; PC := 50
	33	[5324]	GETGLOBAL	R7 K3 ; R7 := _T
	34	[5324]	GETTABLE 	R7 R7 K7 ; R7 := R7["questInfo"]
	35	[5324]	GETTABLE 	R7 R7 K9 ; R7 := R7["activeQuest"]
	36	[5324]	EQ       	0 R7 R2 ; if R7 ~= R2 then PC := 50
	37	[5324]	JMP      	50 ; PC := 50
	38	[5324]	GETGLOBAL	R7 K3 ; R7 := _T
	39	[5324]	GETTABLE 	R7 R7 K7 ; R7 := R7["questInfo"]
	40	[5324]	GETTABLE 	R7 R7 K10 ; R7 := R7["stage"]
	41	[5324]	EQ       	0 R7 R3 ; if R7 ~= R3 then PC := 50
	42	[5324]	JMP      	50 ; PC := 50
	43	[5324]	GETGLOBAL	R7 K3 ; R7 := _T
	44	[5324]	GETTABLE 	R7 R7 K7 ; R7 := R7["questInfo"]
	45	[5324]	GETTABLE 	R7 R7 K11 ; R7 := R7["gameRules"]
	46	[5324]	GETGLOBAL	R8 K12 ; R8 := 0xbe190284
	47	[5324]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 50
	48	[5324]	JMP      	50 ; PC := 50
	49	[5324]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 50
	50	[5324]	OP_LOADBOOL	R7 1 0 ; R7 := true
	51	[5326]	GETGLOBAL	R8 K3 ; R8 := _T
	52	[5326]	NEWTABLE 	R9 0 5 ; R9 := {}
	53	[5326]	SETTABLE 	R9 K9 R2 ; R9["activeQuest"] := R2
	54	[5326]	SETTABLE 	R9 K10 R3 ; R9["stage"] := R3
	55	[5326]	SETTABLE 	R9 K13 R4 ; R9["difficulty"] := R4
	56	[5326]	SETTABLE 	R9 K14 R5 ; R9["canProgress"] := R5
	57	[5326]	GETGLOBAL	R10 K12 ; R10 := 0xbe190284
	58	[5326]	SETTABLE 	R9 K11 R10 ; R9["gameRules"] := R10
	59	[5326]	SETTABLE 	R8 K7 R9 ; R8["questInfo"] := R9
	60	[5327]	GETGLOBAL	R8 K15 ; R8 := 0x0032441c
	61	[5327]	GETGLOBAL	R9 K3 ; R9 := _T
	62	[5327]	GETTABLE 	R9 R9 K7 ; R9 := R9["questInfo"]
	63	[5327]	SETTABLE 	R8 K7 R9 ; R8["questInfo"] := R9
	64	[5329]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	65	[5329]	MOVE     	R9 R2 ; R9 := R2
	66	[5329]	CALL     	R8 2 2 ; R8 := R8(R9)
	67	[5329]	TEST     	R8 0 ; if not R8 then PC := 71
	68	[5329]	JMP      	71 ; PC := 71
	69	[5329]	TEST     	R0 0 ; if not R0 then PC := 191
	70	[5329]	JMP      	191 ; PC := 191
	71	[5330]	TEST     	R3 0 ; if not R3 then PC := 183
	72	[5330]	JMP      	183 ; PC := 183
	73	[5330]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	74	[5330]	MOVE     	R9 R2 ; R9 := R2
	75	[5330]	CALL     	R8 2 2 ; R8 := R8(R9)
	76	[5330]	TEST     	R8 1 ; if R8 then PC := 183
	77	[5330]	JMP      	183 ; PC := 183
	78	[5331]	GETGLOBAL	R8 K16 ; R8 := 0x603636ad
	79	[5331]	GETGLOBAL	R9 K17 ; R9 := 0x64fb1586
	80	[5331]	SELF     	R10 R2 K18 ; R11 := R2; R10 := R2[0xd3a9d01f]
	81	[5331]	CALL     	R10 2 0 ; R10,... := R10(R11)
	82	[5331]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	83	[5331]	OP_LOADBOOL	R10 0 0 ; R10 := false
	84	[5331]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	85	[5331]	MOVE     	R6 R8 ; R6 := R8
	86	[5332]	SELF     	R8 R2 K19 ; R9 := R2; R8 := R2[0x45fdff63]
	87	[5332]	SUB      	R10 R3 K20 ; R10 := R3 - 1.000000
	88	[5332]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	89	[5333]	GETGLOBAL	R9 K21 ; R9 := EMPTY_SYMBOL
	90	[5333]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 101
	91	[5333]	JMP      	101 ; PC := 101
	92	[5334]	MOVE     	R9 R6 ; R9 := R6
	93	[5334]	LOADK    	R10 K22 ; R10 := "\r\n"
	94	[5334]	GETGLOBAL	R11 K16 ; R11 := 0x603636ad
	95	[5334]	GETGLOBAL	R12 K17 ; R12 := 0x64fb1586
	96	[5334]	MOVE     	R13 R8 ; R13 := R8
	97	[5334]	CALL     	R12 2 2 ; R12 := R12(R13)
	98	[5334]	OP_LOADBOOL	R13 0 0 ; R13 := false
	99	[5334]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	100	[5334]	CONCAT   	R6 R9 R11 ; R6 := R9 .. R10 .. R11
	101	[5337]	TEST     	R7 0 ; if not R7 then PC := 183
	102	[5337]	JMP      	183 ; PC := 183
	103	[5337]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	104	[5337]	GETGLOBAL	R10 K23 ; R10 := 0x89326c93
	105	[5337]	CALL     	R9 2 2 ; R9 := R9(R10)
	106	[5337]	TEST     	R9 1 ; if R9 then PC := 183
	107	[5337]	JMP      	183 ; PC := 183
	108	[5338]	LOADK    	R9 := 1.000000
	109	[5338]	GETGLOBAL	R10 K3 ; R10 := _T
	110	[5338]	GETTABLE 	R10 R10 K24 ; R10 := R10["QuestResetVars"]
	111	[5338]	LEN      	R10 R10 ; R10 := # R10
	112	[5338]	LOADK    	R11 := 1.000000
	113	[5338]	FORPREP  	R9 119 ; R9 -= R11; PC := 119
	114	[5339]	GETGLOBAL	R13 K3 ; R13 := _T
	115	[5339]	GETGLOBAL	R14 K3 ; R14 := _T
	116	[5339]	GETTABLE 	R14 R14 K24 ; R14 := R14["QuestResetVars"]
	117	[5339]	GETTABLE 	R14 R14 R12 ; R14 := R14[R12]
	118	[5339]	SETTABLE 	R13 R14 K8 ; R13[R14] := nil
	119	[5338]	FORLOOP  	R9 114 ; R9 += R11; if R9 <= R10 then begin PC := 114; R12 := R9 end
	120	[5341]	GETGLOBAL	R13 K3 ; R13 := _T
	121	[5341]	NEWTABLE 	R14 0 0 ; R14 := {}
	122	[5341]	SETTABLE 	R13 K24 R14 ; R13["QuestResetVars"] := R14
	123	[5343]	GETGLOBAL	R13 K23 ; R13 := 0x89326c93
	124	[5343]	SELF     	R13 R13 K25 ; R14 := R13; R13 := R13[0xfb64e76c]
	125	[5343]	CALL     	R13 2 2 ; R13 := R13(R14)
	126	[5344]	GETGLOBAL	R14 K1 ; R14 := 0x7b998233
	127	[5344]	MOVE     	R15 R13 ; R15 := R13
	128	[5344]	CALL     	R14 2 2 ; R14 := R14(R15)
	129	[5344]	TEST     	R14 0 ; if not R14 then PC := 141
	130	[5344]	JMP      	141 ; PC := 141
	131	[5345]	GETGLOBAL	R14 K5 ; R14 := 0x3d106989
	132	[5345]	LOADK    	R15 K26 ; R15 := "No local player yet, and this is kinda important"
	133	[5345]	CALL     	R14 2 1 ; R14(R15)
	134	[5346]	GETGLOBAL	R14 K3 ; R14 := _T
	135	[5346]	SETTABLE 	R14 K7 K8 ; R14["questInfo"] := nil
	136	[5347]	GETGLOBAL	R14 K15 ; R14 := 0x0032441c
	137	[5347]	SETTABLE 	R14 K7 K8 ; R14["questInfo"] := nil
	138	[5348]	LOADK    	R14 K2 ; R14 := ""
	139	[5348]	OP_LOADBOOL	R15 0 0 ; R15 := false
	140	[5348]	RETURN   	R14 3 ; return R14, R15 
	141	[5351]	GETUPVAL 	R14 U1 ; R14 := U1
	142	[5351]	CALL     	R14 1 2 ; R14 := R14()
	143	[5352]	TEST     	R14 1 ; if R14 then PC := 150
	144	[5352]	JMP      	150 ; PC := 150
	145	[5352]	GETGLOBAL	R15 K12 ; R15 := 0xbe190284
	146	[5352]	SELF     	R15 R15 K27 ; R16 := R15; R15 := R15[0x99f38c13]
	147	[5352]	CALL     	R15 2 2 ; R15 := R15(R16)
	148	[5352]	TEST     	R15 1 ; if R15 then PC := 183
	149	[5352]	JMP      	183 ; PC := 183
	150	[5353]	TEST     	R14 0 ; if not R14 then PC := 160
	151	[5353]	JMP      	160 ; PC := 160
	152	[5354]	GETGLOBAL	R15 K5 ; R15 := 0x3d106989
	153	[5354]	LOADK    	R16 K28 ; R16 := "Running RunOnPlayerSpawnedScriptsAfterIntro"
	154	[5354]	CALL     	R15 2 1 ; R15(R16)
	155	[5355]	GETGLOBAL	R15 K12 ; R15 := 0xbe190284
	156	[5355]	SELF     	R15 R15 K29 ; R16 := R15; R15 := R15[0x133ba121]
	157	[5355]	MOVE     	R17 R13 ; R17 := R13
	158	[5355]	CALL     	R15 3 1 ; R15(R16,R17)
	159	[5355]	JMP      	174 ; PC := 174
	160	[5356]	GETUPVAL 	R15 U2 ; R15 := U2
	161	[5356]	CALL     	R15 1 2 ; R15 := R15()
	162	[5356]	TEST     	R15 1 ; if R15 then PC := 174
	163	[5356]	JMP      	174 ; PC := 174
	164	[5356]	GETGLOBAL	R15 K12 ; R15 := 0xbe190284
	165	[5356]	SELF     	R15 R15 K30 ; R16 := R15; R15 := R15[0xf2deaf69]
	166	[5356]	GETGLOBAL	R17 K31 ; R17 := gLotusAttractModeGameRulesType
	167	[5356]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	168	[5356]	TEST     	R15 0 ; if not R15 then PC := 174
	169	[5356]	JMP      	174 ; PC := 174
	170	[5357]	GETGLOBAL	R15 K12 ; R15 := 0xbe190284
	171	[5357]	SELF     	R15 R15 K32 ; R16 := R15; R15 := R15[0x3254ae22]
	172	[5357]	MOVE     	R17 R13 ; R17 := R13
	173	[5357]	CALL     	R15 3 1 ; R15(R16,R17)
	174	[5362]	GETUPVAL 	R15 U3 ; R15 := U3
	175	[5362]	CALL     	R15 1 2 ; R15 := R15()
	176	[5363]	GETGLOBAL	R16 K1 ; R16 := 0x7b998233
	177	[5363]	MOVE     	R17 R15 ; R17 := R15
	178	[5363]	CALL     	R16 2 2 ; R16 := R16(R17)
	179	[5363]	TEST     	R16 1 ; if R16 then PC := 183
	180	[5363]	JMP      	183 ; PC := 183
	181	[5364]	SELF     	R16 R15 K33 ; R17 := R15; R16 := R15[0x07354ec6]
	182	[5364]	CALL     	R16 2 1 ; R16(R17)
	183	[5369]	GETGLOBAL	R16 K34 ; R16 := 0x9ba7909f
	184	[5369]	SELF     	R16 R16 K35 ; R17 := R16; R16 := R16[0x7e17ae26]
	185	[5369]	LOADK    	R18 K36 ; R18 := "OnQuestsChanged"
	186	[5369]	LOADK    	R19 K2 ; R19 := ""
	187	[5369]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	188	[5371]	MOVE     	R16 R6 ; R16 := R6
	189	[5371]	OP_LOADBOOL	R17 1 0 ; R17 := true
	190	[5371]	RETURN   	R16 3 ; return R16, R17 
	191	[5374]	SELF     	R16 R1 K37 ; R17 := R1; R16 := R1[0x25a6e75e]
	192	[5374]	CALL     	R16 2 2 ; R16 := R16(R17)
	193	[5375]	SELF     	R17 R16 K38 ; R18 := R16; R17 := R16[0xe9768ed0]
	194	[5375]	CALL     	R17 2 2 ; R17 := R17(R18)
	195	[5376]	GETGLOBAL	R18 K39 ; R18 := 0xc8802016
	196	[5376]	MOVE     	R19 R17 ; R19 := R17
	197	[5376]	CALL     	R18 2 4 ; R18,R19,R20 := R18(R19)
	198	[5376]	JMP      	205 ; PC := 205
	199	[5377]	GETTABLE 	R23 R22 K40 ; R23 := R22["mCompleted"]
	200	[5377]	TEST     	R23 1 ; if R23 then PC := 205
	201	[5377]	JMP      	205 ; PC := 205
	202	[5378]	LOADK    	R23 K41 ; R23 := "New quests are available!"
	203	[5378]	OP_LOADBOOL	R24 1 0 ; R24 := true
	204	[5378]	RETURN   	R23 3 ; return R23, R24 
	205	[5376]	TFORLOOP 	R18 2 ; R21,R22 := R18(R19,R20); if R21 ~= nil then begin PC = 199; R20 := R21 end
	206	[5379]	JMP      	199 ; PC := 199
	207	[5381]	LOADK    	R23 K2 ; R23 := ""
	208	[5381]	OP_LOADBOOL	R24 1 0 ; R24 := true
	209	[5381]	RETURN   	R23 3 ; return R23, R24 
	210	[5382]	RETURN   	R0 1 ; return 

function #270 <?:5384,5386> (3 instructions, 12 bytes at 0000025274F23CD0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5385]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5385]	RETURN   	R0 2 ; return R0 
	3	[5386]	RETURN   	R0 1 ; return 

function #271 <?:5388,5390> (4 instructions, 16 bytes at 0000025274F23DA0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5389]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5389]	LEN      	R0 R0 ; R0 := # R0
	3	[5389]	RETURN   	R0 2 ; return R0 
	4	[5390]	RETURN   	R0 1 ; return 

function #272 <?:5392,5402> (29 instructions, 116 bytes at 0000025274F23E70)
1 param, 15 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[5395]	LOADK    	R2 := 3.000000
	2	[5396]	NEWTABLE 	R3 2 0 ; R3 := {}
	3	[5396]	GETGLOBAL	R4 K0 ; R4 := 0x7ed0a956
	4	[5396]	LOADK    	R5 K1 ; R5 := "/EE/Types/Physics/FullBody"
	5	[5396]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[5396]	GETGLOBAL	R5 K2 ; R5 := gBaseAvatarType
	7	[5396]	SETLIST  	R3 2 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
	8	[5397]	GETGLOBAL	R4 K3 ; R4 := 0xa421af95
	9	[5397]	CALL     	R4 1 2 ; R4 := R4()
	10	[5398]	GETGLOBAL	R5 K4 ; R5 := 0xf6c6e505
	11	[5398]	SELF     	R6 R0 K5 ; R7 := R0; R6 := R0[0xeea7f8c4]
	12	[5398]	CALL     	R6 2 0 ; R6,... := R6(R7)
	13	[5398]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	14	[5399]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0xde321e6f]
	15	[5399]	CALL     	R6 2 2 ; R6 := R6(R7)
	16	[5399]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0xefd0fde2]
	17	[5399]	CALL     	R6 2 2 ; R6 := R6(R7)
	18	[5400]	MUL      	R7 R5 R2 ; R7 := R5 * R2
	19	[5400]	ADD      	R7 R6 R7 ; R7 := R6 + R7
	20	[5401]	GETGLOBAL	R8 K8 ; R8 := 0x89326c93
	21	[5401]	SELF     	R8 R8 K9 ; R9 := R8; R8 := R8[0x15fbdbc0]
	22	[5401]	MOVE     	R10 R6 ; R10 := R6
	23	[5401]	MOVE     	R11 R7 ; R11 := R7
	24	[5401]	MOVE     	R12 R3 ; R12 := R3
	25	[5401]	MOVE     	R13 R1 ; R13 := R1
	26	[5401]	MOVE     	R14 R4 ; R14 := R4
	27	[5401]	TAILCALL 	R8 7 0 ; R8,... := R8(R9,R10,R11,R12,R13,R14)
	28	[5401]	RETURN   	R8 0 ; return R8,... 
	29	[5402]	RETURN   	R0 1 ; return 

function #273 <?:5404,5431> (60 instructions, 240 bytes at 0000025274F24120)
3 params, 13 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[5405]	NEWTABLE 	R3 0 0 ; R3 := {}
	2	[5406]	NEWTABLE 	R4 0 0 ; R4 := {}
	3	[5408]	EQ       	0 R0 K1 ; if R0 ~= 0.000000 then PC := 9
	4	[5408]	JMP      	9 ; PC := 9
	5	[5409]	SELF     	R5 R1 K2 ; R6 := R1; R5 := R1[0x21a3da0c]
	6	[5409]	CALL     	R5 2 2 ; R5 := R5(R6)
	7	[5409]	MOVE     	R3 R5 ; R3 := R5
	8	[5409]	JMP      	26 ; PC := 26
	9	[5410]	EQ       	0 R0 K3 ; if R0 ~= 3.000000 then PC := 15
	10	[5410]	JMP      	15 ; PC := 15
	11	[5411]	SELF     	R5 R1 K4 ; R6 := R1; R5 := R1[0x0bf14f02]
	12	[5411]	CALL     	R5 2 2 ; R5 := R5(R6)
	13	[5411]	MOVE     	R3 R5 ; R3 := R5
	14	[5411]	JMP      	26 ; PC := 26
	15	[5412]	EQ       	0 R0 K5 ; if R0 ~= 2.000000 then PC := 21
	16	[5412]	JMP      	21 ; PC := 21
	17	[5413]	SELF     	R5 R1 K6 ; R6 := R1; R5 := R1[0x57d88957]
	18	[5413]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[5413]	MOVE     	R3 R5 ; R3 := R5
	20	[5413]	JMP      	26 ; PC := 26
	21	[5414]	EQ       	0 R0 K7 ; if R0 ~= 1.000000 then PC := 26
	22	[5414]	JMP      	26 ; PC := 26
	23	[5415]	SELF     	R5 R1 K8 ; R6 := R1; R5 := R1[0x215bf396]
	24	[5415]	CALL     	R5 2 2 ; R5 := R5(R6)
	25	[5415]	MOVE     	R3 R5 ; R3 := R5
	26	[5418]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	27	[5418]	MOVE     	R6 R3 ; R6 := R3
	28	[5418]	CALL     	R5 2 2 ; R5 := R5(R6)
	29	[5418]	TEST     	R5 1 ; if R5 then PC := 59
	30	[5418]	JMP      	59 ; PC := 59
	31	[5418]	LEN      	R5 R3 ; R5 := # R3
	32	[5418]	LT       	0 K1 R5 ; if 0.000000 >= R5 then PC := 59
	33	[5418]	JMP      	59 ; PC := 59
	34	[5419]	LOADK    	R5 := 1.000000
	35	[5419]	LEN      	R6 R3 ; R6 := # R3
	36	[5419]	LOADK    	R7 := 1.000000
	37	[5419]	FORPREP  	R5 58 ; R5 -= R7; PC := 58
	38	[5420]	GETGLOBAL	R9 K9 ; R9 := 0x7b998233
	39	[5420]	GETTABLE 	R10 R3 R8 ; R10 := R3[R8]
	40	[5420]	GETTABLE 	R10 R10 K10 ; R10 := R10["mItemType"]
	41	[5420]	CALL     	R9 2 2 ; R9 := R9(R10)
	42	[5420]	TEST     	R9 1 ; if R9 then PC := 58
	43	[5420]	JMP      	58 ; PC := 58
	44	[5421]	SELF     	R9 R2 K11 ; R10 := R2; R9 := R2[0x105074fb]
	45	[5421]	GETTABLE 	R11 R3 R8 ; R11 := R3[R8]
	46	[5421]	GETTABLE 	R11 R11 K10 ; R11 := R11["mItemType"]
	47	[5421]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	48	[5423]	GETGLOBAL	R10 K9 ; R10 := 0x7b998233
	49	[5423]	MOVE     	R11 R9 ; R11 := R9
	50	[5423]	CALL     	R10 2 2 ; R10 := R10(R11)
	51	[5423]	TEST     	R10 1 ; if R10 then PC := 58
	52	[5423]	JMP      	58 ; PC := 58
	53	[5424]	GETGLOBAL	R10 K12 ; R10 := 0x33bdd652
	54	[5424]	GETTABLE 	R10 R10 K13 ; R10 := R10[0x23d5322f]
	55	[5424]	MOVE     	R11 R4 ; R11 := R4
	56	[5424]	MOVE     	R12 R9 ; R12 := R9
	57	[5424]	CALL     	R10 3 1 ; R10(R11,R12)
	58	[5419]	FORLOOP  	R5 38 ; R5 += R7; if R5 <= R6 then begin PC := 38; R8 := R5 end
	59	[5430]	RETURN   	R4 2 ; return R4 
	60	[5431]	RETURN   	R0 1 ; return 

function #274 <?:5434,5485> (116 instructions, 464 bytes at 0000025274F244A0)
2 params, 24 slots, 1 upvalue, 0 locals, 20 constants, 0 functions
	1	[5435]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[5435]	MOVE     	R3 R0 ; R3 := R0
	3	[5435]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[5435]	TEST     	R2 1 ; if R2 then PC := 11
	5	[5435]	JMP      	11 ; PC := 11
	6	[5435]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[5435]	MOVE     	R3 R1 ; R3 := R1
	8	[5435]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[5435]	TEST     	R2 0 ; if not R2 then PC := 14
	10	[5435]	JMP      	14 ; PC := 14
	11	[5436]	OP_LOADBOOL	R2 0 0 ; R2 := false
	12	[5436]	LOADK    	R3 K1 ; R3 := ""
	13	[5436]	RETURN   	R2 3 ; return R2, R3 
	14	[5439]	OP_LOADBOOL	R2 0 0 ; R2 := false
	15	[5440]	OP_LOADBOOL	R3 0 0 ; R3 := false
	16	[5441]	OP_LOADBOOL	R4 0 0 ; R4 := false
	17	[5442]	LOADK    	R5 K1 ; R5 := ""
	18	[5443]	NEWTABLE 	R6 4 0 ; R6 := {}
	19	[5443]	NEWTABLE 	R7 0 2 ; R7 := {}
	20	[5443]	SETTABLE 	R7 K2 K4 ; R7["Cat"] := 0.000000
	21	[5443]	SETTABLE 	R7 K5 K6 ; R7["isSuit"] := true
	22	[5443]	NEWTABLE 	R8 0 2 ; R8 := {}
	23	[5444]	SETTABLE 	R8 K2 K7 ; R8["Cat"] := 2.000000
	24	[5444]	SETTABLE 	R8 K5 K8 ; R8["isSuit"] := false
	25	[5444]	NEWTABLE 	R9 0 2 ; R9 := {}
	26	[5445]	SETTABLE 	R9 K2 K9 ; R9["Cat"] := 1.000000
	27	[5445]	SETTABLE 	R9 K5 K8 ; R9["isSuit"] := false
	28	[5445]	NEWTABLE 	R10 0 2 ; R10 := {}
	29	[5446]	SETTABLE 	R10 K2 K10 ; R10["Cat"] := 3.000000
	30	[5446]	SETTABLE 	R10 K5 K8 ; R10["isSuit"] := false
	31	[5446]	SETLIST  	R6 4 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 4
	32	[5448]	GETGLOBAL	R7 K11 ; R7 := 0xc8802016
	33	[5448]	MOVE     	R8 R6 ; R8 := R6
	34	[5448]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	35	[5448]	JMP      	79 ; PC := 79
	36	[5449]	GETTABLE 	R12 R11 K5 ; R12 := R11["isSuit"]
	37	[5449]	TEST     	R12 0 ; if not R12 then PC := 41
	38	[5449]	JMP      	41 ; PC := 41
	39	[5449]	TEST     	R2 0 ; if not R2 then PC := 46
	40	[5449]	JMP      	46 ; PC := 46
	41	[5449]	GETTABLE 	R12 R11 K5 ; R12 := R11["isSuit"]
	42	[5449]	TEST     	R12 1 ; if R12 then PC := 73
	43	[5449]	JMP      	73 ; PC := 73
	44	[5449]	TEST     	R3 1 ; if R3 then PC := 73
	45	[5449]	JMP      	73 ; PC := 73
	46	[5450]	GETUPVAL 	R12 U0 ; R12 := U0
	47	[5450]	GETTABLE 	R13 R11 K2 ; R13 := R11["Cat"]
	48	[5450]	MOVE     	R14 R0 ; R14 := R0
	49	[5450]	MOVE     	R15 R1 ; R15 := R1
	50	[5450]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	51	[5451]	GETGLOBAL	R13 K11 ; R13 := 0xc8802016
	52	[5451]	MOVE     	R14 R12 ; R14 := R12
	53	[5451]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	54	[5451]	JMP      	71 ; PC := 71
	55	[5452]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	56	[5452]	MOVE     	R19 R17 ; R19 := R17
	57	[5452]	CALL     	R18 2 2 ; R18 := R18(R19)
	58	[5452]	TEST     	R18 1 ; if R18 then PC := 71
	59	[5452]	JMP      	71 ; PC := 71
	60	[5452]	SELF     	R18 R17 K12 ; R19 := R17; R18 := R17[0x9470f5c2]
	61	[5452]	CALL     	R18 2 2 ; R18 := R18(R19)
	62	[5452]	TEST     	R18 0 ; if not R18 then PC := 71
	63	[5452]	JMP      	71 ; PC := 71
	64	[5453]	GETTABLE 	R18 R11 K2 ; R18 := R11["Cat"]
	65	[5453]	EQ       	0 R18 K4 ; if R18 ~= 0.000000 then PC := 69
	66	[5453]	JMP      	69 ; PC := 69
	67	[5454]	OP_LOADBOOL	R2 1 0 ; R2 := true
	68	[5454]	JMP      	73 ; PC := 73
	69	[5456]	OP_LOADBOOL	R3 1 0 ; R3 := true
	70	[5458]	JMP      	73 ; PC := 73
	71	[5451]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 55; R15 := R16 end
	72	[5459]	JMP      	55 ; PC := 55
	73	[5463]	TESTSET  	R4 R2 0 ; if not R2 then PC := 76 else R4 := R2 
	74	[5463]	JMP      	76 ; PC := 76
	75	[5463]	MOVE     	R4 R3 ; R4 := R3
	76	[5464]	TEST     	R4 0 ; if not R4 then PC := 79
	77	[5464]	JMP      	79 ; PC := 79
	78	[5465]	JMP      	81 ; PC := 81
	79	[5448]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 36; R9 := R10 end
	80	[5466]	JMP      	36 ; PC := 36
	81	[5469]	TEST     	R4 1 ; if R4 then PC := 113
	82	[5469]	JMP      	113 ; PC := 113
	83	[5471]	LOADK    	R18 K1 ; R18 := ""
	84	[5472]	TEST     	R2 1 ; if R2 then PC := 98
	85	[5472]	JMP      	98 ; PC := 98
	86	[5473]	MOVE     	R19 R18 ; R19 := R18
	87	[5473]	LOADK    	R20 K13 ; R20 := "1x "
	88	[5473]	GETGLOBAL	R21 K14 ; R21 := 0x603636ad
	89	[5473]	LOADK    	R22 K15 ; R22 := "/Lotus/Language/Menu/Global_ProductCategory_Suit"
	90	[5473]	OP_LOADBOOL	R23 0 0 ; R23 := false
	91	[5473]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	92	[5473]	CONCAT   	R18 R19 R21 ; R18 := R19 .. R20 .. R21
	93	[5474]	TEST     	R3 1 ; if R3 then PC := 98
	94	[5474]	JMP      	98 ; PC := 98
	95	[5475]	MOVE     	R19 R18 ; R19 := R18
	96	[5475]	LOADK    	R20 K16 ; R20 := " + "
	97	[5475]	CONCAT   	R18 R19 R20 ; R18 := R19 .. R20
	98	[5478]	TEST     	R3 1 ; if R3 then PC := 107
	99	[5478]	JMP      	107 ; PC := 107
	100	[5479]	MOVE     	R19 R18 ; R19 := R18
	101	[5479]	LOADK    	R20 K13 ; R20 := "1x "
	102	[5479]	GETGLOBAL	R21 K14 ; R21 := 0x603636ad
	103	[5479]	LOADK    	R22 K17 ; R22 := "/Lotus/Language/Menu/Loadout_PVPCompatibleWeapon"
	104	[5479]	OP_LOADBOOL	R23 0 0 ; R23 := false
	105	[5479]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	106	[5479]	CONCAT   	R18 R19 R21 ; R18 := R19 .. R20 .. R21
	107	[5481]	GETGLOBAL	R19 K14 ; R19 := 0x603636ad
	108	[5481]	LOADK    	R20 K18 ; R20 := "/Lotus/Language/Menu/Loadout_PVPNeedCompatibleGear"
	109	[5481]	NEWTABLE 	R21 0 1 ; R21 := {}
	110	[5481]	SETTABLE 	R21 K19 R18 ; R21["REQ_GEAR"] := R18
	111	[5481]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	112	[5481]	MOVE     	R5 R19 ; R5 := R19
	113	[5484]	MOVE     	R19 R4 ; R19 := R4
	114	[5484]	MOVE     	R20 R5 ; R20 := R5
	115	[5484]	RETURN   	R19 3 ; return R19, R20 
	116	[5485]	RETURN   	R0 1 ; return 

function #275 <?:5487,5494> (20 instructions, 80 bytes at 0000025274F24C30)
2 params, 9 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[5488]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[5488]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x44537adf]
	3	[5488]	MOVE     	R3 R0 ; R3 := R0
	4	[5488]	CALL     	R2 2 3 ; R2,R3 := R2(R3)
	5	[5490]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x67bc869f]
	6	[5490]	MOVE     	R6 R1 ; R6 := R1
	7	[5490]	LOADK    	R7 := 12.000000
	8	[5490]	MOVE     	R8 R2 ; R8 := R2
	9	[5490]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	10	[5491]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x67bc869f]
	11	[5491]	MOVE     	R6 R1 ; R6 := R1
	12	[5491]	LOADK    	R7 := 13.000000
	13	[5491]	MOVE     	R8 R3 ; R8 := R3
	14	[5491]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	15	[5493]	SELF     	R4 R0 K2 ; R5 := R0; R4 := R0[0xd5181643]
	16	[5493]	MOVE     	R6 R1 ; R6 := R1
	17	[5493]	GETGLOBAL	R7 K3 ; R7 := 0x0032441c
	18	[5493]	GETTABLE 	R7 R7 K4 ; R7 := R7["UIMaterial_Bluer"]
	19	[5493]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	20	[5494]	RETURN   	R0 1 ; return 

function #276 <?:5496,5513> (37 instructions, 148 bytes at 0000025274F24E20)
2 params, 7 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[5497]	GETGLOBAL	R2 K0 ; R2 := 0x76ea806b
	2	[5497]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x3f3ae64c]
	3	[5497]	LOADK    	R4 := 0.000000
	4	[5497]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	5	[5498]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	6	[5498]	MOVE     	R4 R2 ; R4 := R2
	7	[5498]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[5498]	TEST     	R3 1 ; if R3 then PC := 33
	9	[5498]	JMP      	33 ; PC := 33
	10	[5499]	LOADK    	R3 K3 ; R3 := 0.300000
	11	[5500]	GETGLOBAL	R4 K4 ; R4 := 0x34291f5c
	12	[5500]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x1467d5f4]
	13	[5500]	CALL     	R4 1 2 ; R4 := R4()
	14	[5500]	TEST     	R4 0 ; if not R4 then PC := 22
	15	[5500]	JMP      	22 ; PC := 22
	16	[5501]	SELF     	R4 R2 K6 ; R5 := R2; R4 := R2[0x40e9c32b]
	17	[5501]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[5501]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0x0b3f5cb7]
	19	[5501]	LOADK    	R6 := 3.000000
	20	[5501]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	21	[5501]	MUL      	R3 K8 R4 ; R3 := 13.000000 * R4
	22	[5506]	SELF     	R4 R2 K6 ; R5 := R2; R4 := R2[0x40e9c32b]
	23	[5506]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[5506]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0x8bea8020]
	25	[5506]	CALL     	R4 2 2 ; R4 := R4(R5)
	26	[5506]	TEST     	R4 0 ; if not R4 then PC := 29
	27	[5506]	JMP      	29 ; PC := 29
	28	[5507]	UNM      	R1 R1 ; R1 := ^ R1
	29	[5510]	MUL      	R4 R0 R3 ; R4 := R0 * R3
	30	[5510]	MUL      	R5 R1 R3 ; R5 := R1 * R3
	31	[5510]	LOADK    	R6 := 0.000000
	32	[5510]	RETURN   	R4 4 ; return R4, R5, R6 
	33	[5512]	LOADK    	R4 := 0.000000
	34	[5512]	LOADK    	R5 := 0.000000
	35	[5512]	LOADK    	R6 := 0.000000
	36	[5512]	RETURN   	R4 4 ; return R4, R5, R6 
	37	[5513]	RETURN   	R0 1 ; return 

function #277 <?:5515,5535> (26 instructions, 104 bytes at 0000025274F250C0)
1 param, 7 slots, 1 upvalue, 0 locals, 8 constants, 1 function
	1	[5516]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5516]	MOVE     	R2 R0 ; R2 := R0
	3	[5516]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5516]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[5516]	JMP      	7 ; PC := 7
	6	[5517]	RETURN   	R0 1 ; return 
	7	[5520]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[5520]	CALL     	R1 1 2 ; R1 := R1()
	9	[5527]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	10	[5527]	SETTABLE 	R1 K1 R2 ; R1["ViewConsoleCallback"] := R2
	11	[5529]	GETGLOBAL	R2 K2 ; R2 := 0x34291f5c
	12	[5529]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x9ad21ae9]
	13	[5529]	CALL     	R2 1 2 ; R2 := R2()
	14	[5529]	TEST     	R2 0 ; if not R2 then PC := 22
	15	[5529]	JMP      	22 ; PC := 22
	16	[5530]	GETGLOBAL	R2 K4 ; R2 := 0x25d99d89
	17	[5531]	SELF     	R3 R2 K5 ; R4 := R2; R3 := R2[0x27af4576]
	18	[5531]	MOVE     	R5 R0 ; R5 := R0
	19	[5531]	LOADK    	R6 K1 ; R6 := "ViewConsoleCallback"
	20	[5531]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	21	[5531]	JMP      	26 ; PC := 26
	22	[5533]	GETGLOBAL	R3 K6 ; R3 := 0xe7f2b02f
	23	[5533]	SELF     	R3 R3 K7 ; R4 := R3; R3 := R3[0xe7696f24]
	24	[5533]	MOVE     	R5 R0 ; R5 := R0
	25	[5533]	CALL     	R3 3 1 ; R3(R4,R5)
	26	[5535]	RETURN   	R0 1 ; return 

function #278 <?:5537,5564> (96 instructions, 384 bytes at 0000025274F25460)
0 params, 2 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[5538]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[5538]	GETTABLE 	R0 R0 K1 ; R0 := R0["ArsenalOpen"]
	3	[5538]	TEST     	R0 1 ; if R0 then PC := 11
	4	[5538]	JMP      	11 ; PC := 11
	5	[5538]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[5538]	GETTABLE 	R0 R0 K2 ; R0 := R0["ArsenalUpgradeOpen"]
	7	[5538]	TEST     	R0 1 ; if R0 then PC := 11
	8	[5538]	JMP      	11 ; PC := 11
	9	[5538]	GETGLOBAL	R0 K0 ; R0 := _T
	10	[5538]	GETTABLE 	R0 R0 K3 ; R0 := R0["ModScreenOpen"]
	11	[5539]	GETGLOBAL	R1 K0 ; R1 := _T
	12	[5539]	GETTABLE 	R1 R1 K4 ; R1 := R1["AppearancePreviewOpen"]
	13	[5539]	TEST     	R1 0 ; if not R1 then PC := 18
	14	[5539]	JMP      	18 ; PC := 18
	15	[5540]	LOADK    	R1 := 8.000000
	16	[5540]	RETURN   	R1 2 ; return R1 
	17	[5540]	JMP      	96 ; PC := 96
	18	[5541]	TEST     	R0 0 ; if not R0 then PC := 23
	19	[5541]	JMP      	23 ; PC := 23
	20	[5542]	LOADK    	R1 := 4.000000
	21	[5542]	RETURN   	R1 2 ; return R1 
	22	[5542]	JMP      	96 ; PC := 96
	23	[5543]	GETGLOBAL	R1 K0 ; R1 := _T
	24	[5543]	GETTABLE 	R1 R1 K6 ; R1 := R1["PPSScreenOpen"]
	25	[5543]	TEST     	R1 1 ; if R1 then PC := 31
	26	[5543]	JMP      	31 ; PC := 31
	27	[5543]	GETGLOBAL	R1 K0 ; R1 := _T
	28	[5543]	GETTABLE 	R1 R1 K7 ; R1 := R1["ProfileMenuOpen"]
	29	[5543]	TEST     	R1 0 ; if not R1 then PC := 34
	30	[5543]	JMP      	34 ; PC := 34
	31	[5544]	LOADK    	R1 := 5.000000
	32	[5544]	RETURN   	R1 2 ; return R1 
	33	[5544]	JMP      	96 ; PC := 96
	34	[5545]	GETGLOBAL	R1 K0 ; R1 := _T
	35	[5545]	GETTABLE 	R1 R1 K8 ; R1 := R1["OperatorScreenOpen"]
	36	[5545]	TEST     	R1 0 ; if not R1 then PC := 41
	37	[5545]	JMP      	41 ; PC := 41
	38	[5546]	LOADK    	R1 := 10.000000
	39	[5546]	RETURN   	R1 2 ; return R1 
	40	[5546]	JMP      	96 ; PC := 96
	41	[5547]	GETGLOBAL	R1 K0 ; R1 := _T
	42	[5547]	GETTABLE 	R1 R1 K9 ; R1 := R1["DecoratingPlayerShip"]
	43	[5547]	TEST     	R1 1 ; if R1 then PC := 49
	44	[5547]	JMP      	49 ; PC := 49
	45	[5547]	GETGLOBAL	R1 K0 ; R1 := _T
	46	[5547]	GETTABLE 	R1 R1 K10 ; R1 := R1["CustomizingPlayerShip"]
	47	[5547]	TEST     	R1 0 ; if not R1 then PC := 52
	48	[5547]	JMP      	52 ; PC := 52
	49	[5548]	LOADK    	R1 := 11.000000
	50	[5548]	RETURN   	R1 2 ; return R1 
	51	[5548]	JMP      	96 ; PC := 96
	52	[5549]	GETGLOBAL	R1 K0 ; R1 := _T
	53	[5549]	GETTABLE 	R1 R1 K11 ; R1 := R1["CustomizingCrewship"]
	54	[5549]	TEST     	R1 0 ; if not R1 then PC := 59
	55	[5549]	JMP      	59 ; PC := 59
	56	[5550]	LOADK    	R1 := 12.000000
	57	[5550]	RETURN   	R1 2 ; return R1 
	58	[5550]	JMP      	96 ; PC := 96
	59	[5551]	GETGLOBAL	R1 K0 ; R1 := _T
	60	[5551]	GETTABLE 	R1 R1 K12 ; R1 := R1["UIStyleScreenOpen"]
	61	[5551]	TEST     	R1 0 ; if not R1 then PC := 66
	62	[5551]	JMP      	66 ; PC := 66
	63	[5552]	LOADK    	R1 := 13.000000
	64	[5552]	RETURN   	R1 2 ; return R1 
	65	[5552]	JMP      	96 ; PC := 96
	66	[5553]	GETGLOBAL	R1 K0 ; R1 := _T
	67	[5553]	GETTABLE 	R1 R1 K13 ; R1 := R1["HUDColorScreenOpen"]
	68	[5553]	TEST     	R1 0 ; if not R1 then PC := 73
	69	[5553]	JMP      	73 ; PC := 73
	70	[5554]	LOADK    	R1 := 14.000000
	71	[5554]	RETURN   	R1 2 ; return R1 
	72	[5554]	JMP      	96 ; PC := 96
	73	[5555]	GETGLOBAL	R1 K0 ; R1 := _T
	74	[5555]	GETTABLE 	R1 R1 K14 ; R1 := R1["ChatLinkOpen"]
	75	[5555]	TEST     	R1 0 ; if not R1 then PC := 80
	76	[5555]	JMP      	80 ; PC := 80
	77	[5556]	LOADK    	R1 := 15.000000
	78	[5556]	RETURN   	R1 2 ; return R1 
	79	[5556]	JMP      	96 ; PC := 96
	80	[5557]	GETGLOBAL	R1 K0 ; R1 := _T
	81	[5557]	GETTABLE 	R1 R1 K15 ; R1 := R1["InventoryScreenOpen"]
	82	[5557]	TEST     	R1 0 ; if not R1 then PC := 87
	83	[5557]	JMP      	87 ; PC := 87
	84	[5558]	LOADK    	R1 := 16.000000
	85	[5558]	RETURN   	R1 2 ; return R1 
	86	[5558]	JMP      	96 ; PC := 96
	87	[5559]	GETGLOBAL	R1 K0 ; R1 := _T
	88	[5559]	GETTABLE 	R1 R1 K16 ; R1 := R1["InStarChart"]
	89	[5559]	TEST     	R1 0 ; if not R1 then PC := 94
	90	[5559]	JMP      	94 ; PC := 94
	91	[5560]	LOADK    	R1 := 17.000000
	92	[5560]	RETURN   	R1 2 ; return R1 
	93	[5560]	JMP      	96 ; PC := 96
	94	[5562]	LOADK    	R1 := 0.000000
	95	[5562]	RETURN   	R1 2 ; return R1 
	96	[5564]	RETURN   	R0 1 ; return 

function #279 <?:5566,5569> (7 instructions, 28 bytes at 0000025274F25CF0)
2 params, 4 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[5567]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	2	[5567]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x99675e23]
	3	[5567]	MUL      	R3 R0 R1 ; R3 := R0 * R1
	4	[5567]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[5568]	SUB      	R3 R0 R2 ; R3 := R0 - R2
	6	[5568]	RETURN   	R3 2 ; return R3 
	7	[5569]	RETURN   	R0 1 ; return 

function #280 <?:5571,5573> (6 instructions, 24 bytes at 0000025274F25E10)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5572]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[5572]	MOVE     	R3 R0 ; R3 := R0
	3	[5572]	MOVE     	R4 R1 ; R4 := R1
	4	[5572]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	5	[5572]	RETURN   	R2 0 ; return R2,... 
	6	[5573]	RETURN   	R0 1 ; return 

function #281 <?:5576,5590> (22 instructions, 88 bytes at 0000025274F25F00)
1 param, 5 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[5577]	LOADK    	R1 K0 ; R1 := "/Lotus/Language/Menu/Coupon_Generic"
	2	[5579]	EQ       	0 R0 K2 ; if R0 ~= 3.000000 then PC := 6
	3	[5579]	JMP      	6 ; PC := 6
	4	[5580]	LOADK    	R1 K3 ; R1 := "/Lotus/Language/Menu/Coupon_Warframe"
	5	[5580]	JMP      	17 ; PC := 17
	6	[5581]	EQ       	0 R0 K4 ; if R0 ~= 1.000000 then PC := 10
	7	[5581]	JMP      	10 ; PC := 10
	8	[5582]	LOADK    	R1 K5 ; R1 := "/Lotus/Language/Menu/Coupon_LongGun"
	9	[5582]	JMP      	17 ; PC := 17
	10	[5583]	EQ       	0 R0 K6 ; if R0 ~= 0.000000 then PC := 14
	11	[5583]	JMP      	14 ; PC := 14
	12	[5584]	LOADK    	R1 K7 ; R1 := "/Lotus/Language/Menu/Coupon_Pistol"
	13	[5584]	JMP      	17 ; PC := 17
	14	[5585]	EQ       	0 R0 K8 ; if R0 ~= 5.000000 then PC := 17
	15	[5585]	JMP      	17 ; PC := 17
	16	[5586]	LOADK    	R1 K9 ; R1 := "/Lotus/Language/Menu/Coupon_Melee"
	17	[5589]	GETGLOBAL	R2 K10 ; R2 := 0x603636ad
	18	[5589]	MOVE     	R3 R1 ; R3 := R1
	19	[5589]	OP_LOADBOOL	R4 0 0 ; R4 := false
	20	[5589]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	21	[5589]	RETURN   	R2 0 ; return R2,... 
	22	[5590]	RETURN   	R0 1 ; return 

function #282 <?:5592,5625> (90 instructions, 360 bytes at 0000025274F262C0)
1 param, 12 slots, 0 upvalues, 0 locals, 24 constants, 0 functions
	1	[5593]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5593]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	3	[5593]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5593]	TEST     	R1 1 ; if R1 then PC := 16
	5	[5593]	JMP      	16 ; PC := 16
	6	[5593]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[5593]	MOVE     	R2 R0 ; R2 := R0
	8	[5593]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[5593]	TEST     	R1 1 ; if R1 then PC := 16
	10	[5593]	JMP      	16 ; PC := 16
	11	[5593]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	12	[5593]	GETTABLE 	R2 R0 K2 ; R2 := R0["StoreItem"]
	13	[5593]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[5593]	TEST     	R1 0 ; if not R1 then PC := 17
	15	[5593]	JMP      	17 ; PC := 17
	16	[5594]	RETURN   	R0 1 ; return 
	17	[5597]	NEWTABLE 	R1 0 1 ; R1 := {}
	18	[5597]	SETTABLE 	R1 K4 K5 ; R1["mAmount"] := 0.000000
	19	[5597]	SETTABLE 	R0 K3 R1 ; R0["Coupon"] := R1
	20	[5599]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	21	[5599]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x464542fe]
	22	[5599]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[5600]	LOADK    	R2 := 1.000000
	24	[5600]	LEN      	R3 R1 ; R3 := # R1
	25	[5600]	LOADK    	R4 := 1.000000
	26	[5600]	FORPREP  	R2 57 ; R2 -= R4; PC := 57
	27	[5601]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	28	[5602]	GETGLOBAL	R7 K7 ; R7 := 0x34291f5c
	29	[5602]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x397b920f]
	30	[5602]	GETTABLE 	R8 R6 K9 ; R8 := R6["mExpiryDate"]
	31	[5602]	CALL     	R7 2 2 ; R7 := R7(R8)
	32	[5604]	LT       	0 K5 R7 ; if 0.000000 >= R7 then PC := 57
	33	[5604]	JMP      	57 ; PC := 57
	34	[5604]	SELF     	R8 R6 K10 ; R9 := R6; R8 := R6[0x96df49a3]
	35	[5604]	GETTABLE 	R10 R0 K2 ; R10 := R0["StoreItem"]
	36	[5604]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	37	[5604]	TEST     	R8 0 ; if not R8 then PC := 57
	38	[5604]	JMP      	57 ; PC := 57
	39	[5604]	GETTABLE 	R8 R0 K2 ; R8 := R0["StoreItem"]
	40	[5604]	SELF     	R8 R8 K11 ; R9 := R8; R8 := R8[0x0f5a34d1]
	41	[5604]	CALL     	R8 2 2 ; R8 := R8(R9)
	42	[5604]	TEST     	R8 1 ; if R8 then PC := 57
	43	[5604]	JMP      	57 ; PC := 57
	44	[5605]	GETTABLE 	R8 R0 K3 ; R8 := R0["Coupon"]
	45	[5605]	GETTABLE 	R9 R6 K12 ; R9 := R6["mId"]
	46	[5605]	GETTABLE 	R9 R9 K12 ; R9 := R9["mId"]
	47	[5605]	SETTABLE 	R8 K12 R9 ; R8["mId"] := R9
	48	[5606]	GETTABLE 	R8 R0 K3 ; R8 := R0["Coupon"]
	49	[5606]	GETTABLE 	R9 R6 K4 ; R9 := R6["mAmount"]
	50	[5606]	DIV      	R9 R9 K13 ; R9 := R9 / 100.000000
	51	[5606]	SETTABLE 	R8 K4 R9 ; R8["mAmount"] := R9
	52	[5607]	GETTABLE 	R8 R0 K3 ; R8 := R0["Coupon"]
	53	[5607]	GETTABLE 	R9 R6 K9 ; R9 := R6["mExpiryDate"]
	54	[5607]	GETTABLE 	R9 R9 K15 ; R9 := R9["sec"]
	55	[5607]	SETTABLE 	R8 K14 R9 ; R8["mExpiry"] := R9
	56	[5608]	JMP      	58 ; PC := 58
	57	[5600]	FORLOOP  	R2 27 ; R2 += R4; if R2 <= R3 then begin PC := 27; R5 := R2 end
	58	[5613]	GETGLOBAL	R8 K7 ; R8 := 0x34291f5c
	59	[5613]	GETTABLE 	R8 R8 K16 ; R8 := R8[0xbcd06415]
	60	[5613]	CALL     	R8 1 2 ; R8 := R8()
	61	[5613]	TEST     	R8 0 ; if not R8 then PC := 90
	62	[5613]	JMP      	90 ; PC := 90
	63	[5613]	GETTABLE 	R8 R0 K2 ; R8 := R0["StoreItem"]
	64	[5613]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0xdaefcda4]
	65	[5613]	CALL     	R8 2 2 ; R8 := R8(R9)
	66	[5613]	EQ       	0 R8 K18 ; if R8 ~= 4.000000 then PC := 90
	67	[5613]	JMP      	90 ; PC := 90
	68	[5614]	GETGLOBAL	R8 K1 ; R8 := 0x25d99d89
	69	[5614]	SELF     	R8 R8 K19 ; R9 := R8; R8 := R8[0x104b2223]
	70	[5614]	CALL     	R8 2 2 ; R8 := R8(R9)
	71	[5615]	TEST     	R8 0 ; if not R8 then PC := 90
	72	[5615]	JMP      	90 ; PC := 90
	73	[5616]	GETGLOBAL	R9 K7 ; R9 := 0x34291f5c
	74	[5616]	GETTABLE 	R9 R9 K8 ; R9 := R9[0x397b920f]
	75	[5616]	GETTABLE 	R10 R8 K14 ; R10 := R8["mExpiry"]
	76	[5616]	CALL     	R9 2 2 ; R9 := R9(R10)
	77	[5617]	LT       	0 K5 R9 ; if 0.000000 >= R9 then PC := 90
	78	[5617]	JMP      	90 ; PC := 90
	79	[5618]	GETTABLE 	R10 R0 K3 ; R10 := R0["Coupon"]
	80	[5618]	SETTABLE 	R10 K12 K20 ; R10["mId"] := nil
	81	[5619]	GETTABLE 	R10 R0 K3 ; R10 := R0["Coupon"]
	82	[5619]	GETTABLE 	R11 R8 K21 ; R11 := R8["mDiscount"]
	83	[5619]	DIV      	R11 R11 K13 ; R11 := R11 / 100.000000
	84	[5619]	SETTABLE 	R10 K4 R11 ; R10["mAmount"] := R11
	85	[5620]	GETTABLE 	R10 R0 K3 ; R10 := R0["Coupon"]
	86	[5620]	GETTABLE 	R11 R8 K14 ; R11 := R8["mExpiry"]
	87	[5620]	GETTABLE 	R11 R11 K15 ; R11 := R11["sec"]
	88	[5620]	SETTABLE 	R10 K14 R11 ; R10["mExpiry"] := R11
	89	[5621]	SETTABLE 	R0 K22 K23 ; R0["IsExternalPlat"] := true
	90	[5625]	RETURN   	R0 1 ; return 

function #283 <?:5627,5629> (5 instructions, 20 bytes at 0000025274F268A0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5628]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5628]	MOVE     	R2 R0 ; R2 := R0
	3	[5628]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[5628]	RETURN   	R1 0 ; return R1,... 
	5	[5629]	RETURN   	R0 1 ; return 

function #284 <?:5631,5690> (122 instructions, 488 bytes at 0000025274F26990)
3 params, 32 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[5632]	NEWTABLE 	R3 0 0 ; R3 := {}
	2	[5633]	OP_LOADBOOL	R4 0 0 ; R4 := false
	3	[5635]	LOADNIL  	R5 R5 ; R5 := nil
	4	[5636]	GETGLOBAL	R6 K0 ; R6 := 0x25d99d89
	5	[5637]	GETGLOBAL	R7 K1 ; R7 := 0x7b998233
	6	[5637]	MOVE     	R8 R6 ; R8 := R6
	7	[5637]	CALL     	R7 2 2 ; R7 := R7(R8)
	8	[5637]	TEST     	R7 1 ; if R7 then PC := 24
	9	[5637]	JMP      	24 ; PC := 24
	10	[5638]	SELF     	R7 R6 K2 ; R8 := R6; R7 := R6[0x25a6e75e]
	11	[5638]	CALL     	R7 2 2 ; R7 := R7(R8)
	12	[5638]	SELF     	R7 R7 K3 ; R8 := R7; R7 := R7[0xd8dfa041]
	13	[5638]	CALL     	R7 2 2 ; R7 := R7(R8)
	14	[5638]	MOVE     	R5 R7 ; R5 := R7
	15	[5640]	LOADK    	R7 := 1.000000
	16	[5640]	LEN      	R8 R5 ; R8 := # R5
	17	[5640]	LOADK    	R9 := 1.000000
	18	[5640]	FORPREP  	R7 23 ; R7 -= R9; PC := 23
	19	[5641]	GETUPVAL 	R11 U0 ; R11 := U0
	20	[5641]	EQ       	0 R5 R11 ; if R5 ~= R11 then PC := 23
	21	[5641]	JMP      	23 ; PC := 23
	22	[5642]	OP_LOADBOOL	R4 1 0 ; R4 := true
	23	[5640]	FORLOOP  	R7 19 ; R7 += R9; if R7 <= R8 then begin PC := 19; R10 := R7 end
	24	[5647]	NEWTABLE 	R11 0 0 ; R11 := {}
	25	[5648]	GETGLOBAL	R12 K4 ; R12 := 0x7ed0a956
	26	[5648]	LOADK    	R13 K5 ; R13 := "/Lotus/StoreItems/Types/StoreItems/SuitCustomizations/ColourPickerAccessibilityItemA"
	27	[5648]	CALL     	R12 2 0 ; R12,... := R12(R13)
	28	[5649]	SETLIST  	R11 0 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 0
	29	[5651]	GETGLOBAL	R12 K1 ; R12 := 0x7b998233
	30	[5651]	MOVE     	R13 R0 ; R13 := R0
	31	[5651]	CALL     	R12 2 2 ; R12 := R12(R13)
	32	[5651]	TEST     	R12 1 ; if R12 then PC := 119
	33	[5651]	JMP      	119 ; PC := 119
	34	[5652]	SELF     	R12 R0 K6 ; R13 := R0; R12 := R0[0xe9cbffa8]
	35	[5652]	GETGLOBAL	R14 K7 ; R14 := gColorPickerItemType
	36	[5652]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	37	[5654]	GETGLOBAL	R13 K8 ; R13 := 0xc8802016
	38	[5654]	MOVE     	R14 R12 ; R14 := R12
	39	[5654]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	40	[5654]	JMP      	117 ; PC := 117
	41	[5655]	GETGLOBAL	R18 K9 ; R18 := 0xce225efa
	42	[5655]	LOADK    	R19 := 0.000000
	43	[5655]	CALL     	R18 2 1 ; R18(R19)
	44	[5656]	GETGLOBAL	R18 K1 ; R18 := 0x7b998233
	45	[5656]	MOVE     	R19 R17 ; R19 := R17
	46	[5656]	CALL     	R18 2 2 ; R18 := R18(R19)
	47	[5656]	TEST     	R18 1 ; if R18 then PC := 117
	48	[5656]	JMP      	117 ; PC := 117
	49	[5657]	SELF     	R18 R17 K10 ; R19 := R17; R18 := R17[0xf278f8a1]
	50	[5657]	CALL     	R18 2 2 ; R18 := R18(R19)
	51	[5659]	GETGLOBAL	R19 K1 ; R19 := 0x7b998233
	52	[5659]	MOVE     	R20 R18 ; R20 := R18
	53	[5659]	CALL     	R19 2 2 ; R19 := R19(R20)
	54	[5659]	TEST     	R19 1 ; if R19 then PC := 117
	55	[5659]	JMP      	117 ; PC := 117
	56	[5659]	SELF     	R19 R17 K11 ; R20 := R17; R19 := R17[0xfe9eb1a5]
	57	[5659]	CALL     	R19 2 2 ; R19 := R19(R20)
	58	[5659]	EQ       	0 R19 K13 ; if R19 ~= 10.000000 then PC := 117
	59	[5659]	JMP      	117 ; PC := 117
	60	[5660]	SELF     	R19 R17 K14 ; R20 := R17; R19 := R17[0x31e559d2]
	61	[5660]	CALL     	R19 2 2 ; R19 := R19(R20)
	62	[5662]	GETGLOBAL	R20 K1 ; R20 := 0x7b998233
	63	[5662]	MOVE     	R21 R5 ; R21 := R5
	64	[5662]	CALL     	R20 2 2 ; R20 := R20(R21)
	65	[5662]	TEST     	R20 1 ; if R20 then PC := 78
	66	[5662]	JMP      	78 ; PC := 78
	67	[5663]	LOADK    	R20 := 1.000000
	68	[5663]	LEN      	R21 R5 ; R21 := # R5
	69	[5663]	LOADK    	R22 := 1.000000
	70	[5663]	FORPREP  	R20 77 ; R20 -= R22; PC := 77
	71	[5664]	GETTABLE 	R24 R5 R23 ; R24 := R5[R23]
	72	[5664]	GETTABLE 	R24 R24 K15 ; R24 := R24["mItemType"]
	73	[5664]	EQ       	0 R24 R18 ; if R24 ~= R18 then PC := 77
	74	[5664]	JMP      	77 ; PC := 77
	75	[5665]	OP_LOADBOOL	R19 1 0 ; R19 := true
	76	[5666]	JMP      	78 ; PC := 78
	77	[5663]	FORLOOP  	R20 71 ; R20 += R22; if R20 <= R21 then begin PC := 71; R23 := R20 end
	78	[5671]	TEST     	R19 1 ; if R19 then PC := 88
	79	[5671]	JMP      	88 ; PC := 88
	80	[5671]	SELF     	R24 R17 K16 ; R25 := R17; R24 := R17[0xc055cef8]
	81	[5671]	CALL     	R24 2 2 ; R24 := R24(R25)
	82	[5671]	TEST     	R24 1 ; if R24 then PC := 86
	83	[5671]	JMP      	86 ; PC := 86
	84	[5671]	TEST     	R2 0 ; if not R2 then PC := 117
	85	[5671]	JMP      	117 ; PC := 117
	86	[5671]	TEST     	R1 1 ; if R1 then PC := 117
	87	[5671]	JMP      	117 ; PC := 117
	88	[5672]	OP_LOADBOOL	R24 0 0 ; R24 := false
	89	[5673]	GETGLOBAL	R25 K17 ; R25 := _T
	90	[5673]	GETTABLE 	R25 R25 K18 ; R25 := R25["AccessibilityColorsAvailable"]
	91	[5673]	TEST     	R25 1 ; if R25 then PC := 104
	92	[5673]	JMP      	104 ; PC := 104
	93	[5674]	LOADK    	R25 := 1.000000
	94	[5674]	LEN      	R26 R11 ; R26 := # R11
	95	[5674]	LOADK    	R27 := 1.000000
	96	[5674]	FORPREP  	R25 103 ; R25 -= R27; PC := 103
	97	[5675]	SELF     	R29 R17 K19 ; R30 := R17; R29 := R17[0xf2deaf69]
	98	[5675]	GETTABLE 	R31 R11 R28 ; R31 := R11[R28]
	99	[5675]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	100	[5675]	TEST     	R29 0 ; if not R29 then PC := 103
	101	[5675]	JMP      	103 ; PC := 103
	102	[5676]	OP_LOADBOOL	R24 1 0 ; R24 := true
	103	[5674]	FORLOOP  	R25 97 ; R25 += R27; if R25 <= R26 then begin PC := 97; R28 := R25 end
	104	[5680]	GETGLOBAL	R29 K17 ; R29 := _T
	105	[5680]	GETTABLE 	R29 R29 K18 ; R29 := R29["AccessibilityColorsAvailable"]
	106	[5680]	TEST     	R29 1 ; if R29 then PC := 110
	107	[5680]	JMP      	110 ; PC := 110
	108	[5680]	TEST     	R24 1 ; if R24 then PC := 117
	109	[5680]	JMP      	117 ; PC := 117
	110	[5681]	GETGLOBAL	R29 K20 ; R29 := 0x33bdd652
	111	[5681]	GETTABLE 	R29 R29 K21 ; R29 := R29[0x23d5322f]
	112	[5681]	MOVE     	R30 R3 ; R30 := R3
	113	[5681]	NEWTABLE 	R31 0 2 ; R31 := {}
	114	[5681]	SETTABLE 	R31 K22 R17 ; R31["mStoreItem"] := R17
	115	[5681]	SETTABLE 	R31 K23 R19 ; R31["mOwned"] := R19
	116	[5681]	CALL     	R29 3 1 ; R29(R30,R31)
	117	[5654]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 41; R15 := R16 end
	118	[5685]	JMP      	41 ; PC := 41
	119	[5689]	MOVE     	R29 R3 ; R29 := R3
	120	[5689]	MOVE     	R30 R4 ; R30 := R4
	121	[5689]	RETURN   	R29 3 ; return R29, R30 
	122	[5690]	RETURN   	R0 1 ; return 

function #285 <?:5692,5694> (7 instructions, 28 bytes at 0000025274F270D0)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5693]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[5693]	MOVE     	R4 R0 ; R4 := R0
	3	[5693]	MOVE     	R5 R1 ; R5 := R1
	4	[5693]	MOVE     	R6 R2 ; R6 := R2
	5	[5693]	TAILCALL 	R3 4 0 ; R3,... := R3(R4,R5,R6)
	6	[5693]	RETURN   	R3 0 ; return R3,... 
	7	[5694]	RETURN   	R0 1 ; return 

function #286 <?:5696,5737> (58 instructions, 232 bytes at 0000025274F271C0)
2 params, 17 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[5697]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[5697]	MOVE     	R3 R1 ; R3 := R1
	3	[5697]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[5697]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[5697]	JMP      	7 ; PC := 7
	6	[5698]	RETURN   	R0 1 ; return 
	7	[5701]	NEWTABLE 	R2 0 0 ; R2 := {}
	8	[5703]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[5703]	MOVE     	R4 R0 ; R4 := R0
	10	[5703]	OP_LOADBOOL	R5 1 0 ; R5 := true
	11	[5703]	CALL     	R3 3 3 ; R3,R4 := R3(R4,R5)
	12	[5706]	LEN      	R5 R3 ; R5 := # R3
	13	[5707]	TEST     	R4 1 ; if R4 then PC := 16
	14	[5707]	JMP      	16 ; PC := 16
	15	[5708]	ADD      	R5 R5 K1 ; R5 := R5 + 1.000000
	16	[5711]	GETGLOBAL	R6 K2 ; R6 := 0x55730e1a
	17	[5711]	LOADK    	R7 := 1.000000
	18	[5711]	MOVE     	R8 R5 ; R8 := R5
	19	[5711]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	20	[5713]	LOADNIL  	R7 R7 ; R7 := nil
	21	[5714]	LEN      	R8 R3 ; R8 := # R3
	22	[5714]	LE       	0 R6 R8 ; if R6 > R8 then PC := 35
	23	[5714]	JMP      	35 ; PC := 35
	24	[5715]	GETGLOBAL	R8 K3 ; R8 := 0xb009bbc6
	25	[5715]	GETTABLE 	R9 R3 R6 ; R9 := R3[R6]
	26	[5715]	GETTABLE 	R9 R9 K4 ; R9 := R9["mStoreItem"]
	27	[5715]	SELF     	R9 R9 K5 ; R10 := R9; R9 := R9[0xf278f8a1]
	28	[5715]	CALL     	R9 2 0 ; R9,... := R9(R10)
	29	[5715]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	30	[5716]	SELF     	R9 R8 K6 ; R10 := R8; R9 := R8[0x31522360]
	31	[5716]	CALL     	R9 2 2 ; R9 := R9(R10)
	32	[5716]	MOVE     	R2 R9 ; R2 := R9
	33	[5717]	GETTABLE 	R9 R3 R6 ; R9 := R3[R6]
	34	[5717]	GETTABLE 	R7 R9 K4 ; R7 := R9["mStoreItem"]
	35	[5723]	EQ       	0 R2 K7 ; if R2 ~= nil then PC := 39
	36	[5723]	JMP      	39 ; PC := 39
	37	[5724]	NEWTABLE 	R9 0 0 ; R9 := {}
	38	[5724]	MOVE     	R2 R9 ; R2 := R9
	39	[5728]	LEN      	R9 R2 ; R9 := # R2
	40	[5728]	EQ       	0 R9 K8 ; if R9 ~= 0.000000 then PC := 55
	41	[5728]	JMP      	55 ; PC := 55
	42	[5729]	SELF     	R9 R1 K6 ; R10 := R1; R9 := R1[0x31522360]
	43	[5729]	CALL     	R9 2 2 ; R9 := R9(R10)
	44	[5730]	LOADK    	R10 := 3.000000
	45	[5730]	LEN      	R11 R9 ; R11 := # R9
	46	[5730]	LOADK    	R12 := 5.000000
	47	[5730]	FORPREP  	R10 53 ; R10 -= R12; PC := 53
	48	[5731]	GETGLOBAL	R14 K9 ; R14 := 0x33bdd652
	49	[5731]	GETTABLE 	R14 R14 K10 ; R14 := R14[0x23d5322f]
	50	[5731]	MOVE     	R15 R2 ; R15 := R2
	51	[5731]	GETTABLE 	R16 R9 R13 ; R16 := R9[R13]
	52	[5731]	CALL     	R14 3 1 ; R14(R15,R16)
	53	[5730]	FORLOOP  	R10 48 ; R10 += R12; if R10 <= R11 then begin PC := 48; R13 := R10 end
	54	[5733]	LOADNIL  	R7 R7 ; R7 := nil
	55	[5736]	MOVE     	R14 R2 ; R14 := R2
	56	[5736]	MOVE     	R15 R7 ; R15 := R7
	57	[5736]	RETURN   	R14 3 ; return R14, R15 
	58	[5737]	RETURN   	R0 1 ; return 

function #287 <?:5739,5747> (24 instructions, 96 bytes at 0000025274F27510)
1 param, 6 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[5740]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5740]	MOVE     	R2 R0 ; R2 := R0
	3	[5740]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5741]	LOADK    	R2 := 0.000000
	5	[5742]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	6	[5742]	GETGLOBAL	R4 K1 ; R4 := 0x25d99d89
	7	[5742]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[5742]	TEST     	R3 1 ; if R3 then PC := 17
	9	[5742]	JMP      	17 ; PC := 17
	10	[5743]	GETGLOBAL	R3 K1 ; R3 := 0x25d99d89
	11	[5743]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x25a6e75e]
	12	[5743]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[5743]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0xa64e07df]
	14	[5743]	LOADK    	R5 := 5.000000
	15	[5743]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	16	[5743]	MOVE     	R2 R3 ; R2 := R3
	17	[5746]	GETGLOBAL	R3 K5 ; R3 := 0x5bced4c4
	18	[5746]	GETTABLE 	R3 R3 K6 ; R3 := R3[0xac1b386a]
	19	[5746]	ADD      	R4 R1 K7 ; R4 := R1 + 1.000000
	20	[5746]	ADD      	R4 R4 R2 ; R4 := R4 + R2
	21	[5746]	GETGLOBAL	R5 K8 ; R5 := MAX_PVP_LOADOUTS
	22	[5746]	TAILCALL 	R3 3 0 ; R3,... := R3(R4,R5)
	23	[5746]	RETURN   	R3 0 ; return R3,... 
	24	[5747]	RETURN   	R0 1 ; return 

function #288 <?:5749,5751> (5 instructions, 20 bytes at 0000025274F27720)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5750]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5750]	MOVE     	R2 R0 ; R2 := R0
	3	[5750]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[5750]	RETURN   	R1 0 ; return R1,... 
	5	[5751]	RETURN   	R0 1 ; return 

function #289 <?:5753,5771> (31 instructions, 124 bytes at 0000025274F27810)
2 params, 11 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[5754]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0xed4e0128]
	2	[5754]	CALL     	R2 2 2 ; R2 := R2(R3)
	3	[5755]	LOADK    	R3 := 0.000000
	4	[5756]	GETUPVAL 	R4 U0 ; R4 := U0
	5	[5756]	MOVE     	R5 R1 ; R5 := R1
	6	[5756]	MOVE     	R6 R2 ; R6 := R2
	7	[5756]	GETUPVAL 	R7 U1 ; R7 := U1
	8	[5756]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	9	[5757]	TEST     	R4 0 ; if not R4 then PC := 30
	10	[5757]	JMP      	30 ; PC := 30
	11	[5758]	GETTABLE 	R5 R4 K1 ; R5 := R4[1.000000]
	12	[5758]	GETTABLE 	R6 R4 K2 ; R6 := R4[2.000000]
	13	[5758]	LOADK    	R7 := 1.000000
	14	[5758]	FORPREP  	R5 29 ; R5 -= R7; PC := 29
	15	[5759]	GETTABLE 	R9 R1 R8 ; R9 := R1[R8]
	16	[5759]	GETTABLE 	R9 R9 K3 ; R9 := R9["count"]
	17	[5759]	TEST     	R9 0 ; if not R9 then PC := 23
	18	[5759]	JMP      	23 ; PC := 23
	19	[5760]	GETTABLE 	R9 R1 R8 ; R9 := R1[R8]
	20	[5760]	GETTABLE 	R9 R9 K3 ; R9 := R9["count"]
	21	[5760]	ADD      	R3 R3 R9 ; R3 := R3 + R9
	22	[5760]	JMP      	24 ; PC := 24
	23	[5762]	ADD      	R3 R3 K1 ; R3 := R3 + 1.000000
	24	[5764]	GETTABLE 	R9 R4 K1 ; R9 := R4[1.000000]
	25	[5764]	GETTABLE 	R10 R4 K2 ; R10 := R4[2.000000]
	26	[5764]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 29
	27	[5764]	JMP      	29 ; PC := 29
	28	[5765]	JMP      	30 ; PC := 30
	29	[5758]	FORLOOP  	R5 15 ; R5 += R7; if R5 <= R6 then begin PC := 15; R8 := R5 end
	30	[5770]	RETURN   	R3 2 ; return R3 
	31	[5771]	RETURN   	R0 1 ; return 

function #290 <?:5773,5897> (312 instructions, 1248 bytes at 0000025274F27A40)
4 params, 48 slots, 9 upvalues, 0 locals, 43 constants, 0 functions
	1	[5774]	LOADK    	R4 := 0.000000
	2	[5775]	SELF     	R5 R2 K0 ; R6 := R2; R5 := R2[0xfe9eb1a5]
	3	[5775]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[5776]	SELF     	R6 R2 K1 ; R7 := R2; R6 := R2[0x9dbbea0a]
	5	[5776]	CALL     	R6 2 2 ; R6 := R6(R7)
	6	[5777]	SELF     	R7 R2 K2 ; R8 := R2; R7 := R2[0xf2deaf69]
	7	[5777]	GETGLOBAL	R9 K3 ; R9 := gRecipeStoreItemType
	8	[5777]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	9	[5778]	SELF     	R8 R2 K4 ; R9 := R2; R8 := R2[0xf278f8a1]
	10	[5778]	CALL     	R8 2 2 ; R8 := R8(R9)
	11	[5780]	TEST     	R6 0 ; if not R6 then PC := 136
	12	[5780]	JMP      	136 ; PC := 136
	13	[5781]	OP_LOADBOOL	R9 0 0 ; R9 := false
	14	[5782]	OP_LOADBOOL	R10 0 0 ; R10 := false
	15	[5783]	SELF     	R11 R2 K5 ; R12 := R2; R11 := R2[0x7b060e36]
	16	[5783]	CALL     	R11 2 2 ; R11 := R11(R12)
	17	[5784]	LOADK    	R12 := 0.000000
	18	[5785]	LOADK    	R13 := 0.000000
	19	[5787]	LOADK    	R14 := 1.000000
	20	[5787]	LEN      	R15 R11 ; R15 := # R11
	21	[5787]	LOADK    	R16 := 1.000000
	22	[5787]	FORPREP  	R14 60 ; R14 -= R16; PC := 60
	23	[5788]	GETTABLE 	R18 R11 R17 ; R18 := R11[R17]
	24	[5788]	GETTABLE 	R18 R18 K6 ; R18 := R18["mTypeName"]
	25	[5789]	GETGLOBAL	R19 K7 ; R19 := 0x7b998233
	26	[5789]	MOVE     	R20 R18 ; R20 := R18
	27	[5789]	CALL     	R19 2 2 ; R19 := R19(R20)
	28	[5789]	TEST     	R19 1 ; if R19 then PC := 60
	29	[5789]	JMP      	60 ; PC := 60
	30	[5790]	GETUPVAL 	R19 U0 ; R19 := U0
	31	[5790]	SELF     	R20 R18 K0 ; R21 := R18; R20 := R18[0xfe9eb1a5]
	32	[5790]	CALL     	R20 2 0 ; R20,... := R20(R21)
	33	[5790]	CALL     	R19 0 2 ; R19 := R19(R20,...)
	34	[5790]	TEST     	R19 0 ; if not R19 then PC := 45
	35	[5790]	JMP      	45 ; PC := 45
	36	[5791]	OP_LOADBOOL	R9 1 0 ; R9 := true
	37	[5792]	GETUPVAL 	R19 U1 ; R19 := U1
	38	[5792]	MOVE     	R20 R18 ; R20 := R18
	39	[5792]	MOVE     	R21 R3 ; R21 := R3
	40	[5792]	OP_LOADBOOL	R22 1 0 ; R22 := true
	41	[5792]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	42	[5792]	TEST     	R19 0 ; if not R19 then PC := 45
	43	[5792]	JMP      	45 ; PC := 45
	44	[5793]	OP_LOADBOOL	R10 1 0 ; R10 := true
	45	[5796]	GETUPVAL 	R19 U2 ; R19 := U2
	46	[5796]	MOVE     	R20 R18 ; R20 := R18
	47	[5796]	CALL     	R19 2 2 ; R19 := R19(R20)
	48	[5796]	TEST     	R19 1 ; if R19 then PC := 60
	49	[5796]	JMP      	60 ; PC := 60
	50	[5797]	ADD      	R12 R12 K8 ; R12 := R12 + 1.000000
	51	[5798]	GETUPVAL 	R19 U3 ; R19 := U3
	52	[5798]	MOVE     	R20 R3 ; R20 := R3
	53	[5798]	SELF     	R21 R18 K9 ; R22 := R18; R21 := R18[0x170c5cfa]
	54	[5798]	CALL     	R21 2 2 ; R21 := R21(R22)
	55	[5798]	GETUPVAL 	R22 U4 ; R22 := U4
	56	[5798]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	57	[5798]	TEST     	R19 0 ; if not R19 then PC := 60
	58	[5798]	JMP      	60 ; PC := 60
	59	[5799]	ADD      	R13 R13 K8 ; R13 := R13 + 1.000000
	60	[5787]	FORLOOP  	R14 23 ; R14 += R16; if R14 <= R15 then begin PC := 23; R17 := R14 end
	61	[5805]	GETGLOBAL	R19 K10 ; R19 := 0x34291f5c
	62	[5805]	GETTABLE 	R19 R19 K11 ; R19 := R19[0x056bfe8b]
	63	[5805]	CALL     	R19 1 2 ; R19 := R19()
	64	[5805]	TEST     	R19 0 ; if not R19 then PC := 79
	65	[5805]	JMP      	79 ; PC := 79
	66	[5805]	SELF     	R19 R2 K12 ; R20 := R2; R19 := R2[0x19865272]
	67	[5805]	CALL     	R19 2 2 ; R19 := R19(R20)
	68	[5805]	EQ       	1 R19 K13 ; if R19 == "" then PC := 79
	69	[5805]	JMP      	79 ; PC := 79
	70	[5805]	GETGLOBAL	R19 K14 ; R19 := 0x25d99d89
	71	[5805]	SELF     	R19 R19 K15 ; R20 := R19; R19 := R19[0x35122015]
	72	[5805]	SELF     	R21 R2 K12 ; R22 := R2; R21 := R2[0x19865272]
	73	[5805]	CALL     	R21 2 0 ; R21,... := R21(R22)
	74	[5805]	CALL     	R19 0 2 ; R19 := R19(R20,...)
	75	[5805]	TEST     	R19 1 ; if R19 then PC := 79
	76	[5805]	JMP      	79 ; PC := 79
	77	[5806]	LOADK    	R4 := 0.000000
	78	[5806]	JMP      	102 ; PC := 102
	79	[5807]	TEST     	R9 0 ; if not R9 then PC := 83
	80	[5807]	JMP      	83 ; PC := 83
	81	[5807]	TEST     	R10 0 ; if not R10 then PC := 87
	82	[5807]	JMP      	87 ; PC := 87
	83	[5807]	LT       	0 K16 R12 ; if 0.000000 >= R12 then PC := 89
	84	[5807]	JMP      	89 ; PC := 89
	85	[5807]	EQ       	0 R13 R12 ; if R13 ~= R12 then PC := 89
	86	[5807]	JMP      	89 ; PC := 89
	87	[5808]	LOADK    	R4 := 1.000000
	88	[5808]	JMP      	102 ; PC := 102
	89	[5809]	GETUPVAL 	R19 U5 ; R19 := U5
	90	[5809]	TEST     	R19 0 ; if not R19 then PC := 102
	91	[5809]	JMP      	102 ; PC := 102
	92	[5810]	GETUPVAL 	R19 U6 ; R19 := U6
	93	[5810]	MOVE     	R20 R2 ; R20 := R2
	94	[5810]	LOADNIL  	R21 R22 ; R21 := R22 := nil
	95	[5810]	MOVE     	R23 R3 ; R23 := R3
	96	[5810]	CALL     	R19 5 3 ; R19,R20 := R19(R20,R21,R22,R23)
	97	[5811]	EQ       	0 R19 K16 ; if R19 ~= 0.000000 then PC := 102
	98	[5811]	JMP      	102 ; PC := 102
	99	[5811]	EQ       	0 R20 K16 ; if R20 ~= 0.000000 then PC := 102
	100	[5811]	JMP      	102 ; PC := 102
	101	[5812]	LOADK    	R4 := 1.000000
	102	[5816]	GETGLOBAL	R21 K10 ; R21 := 0x34291f5c
	103	[5816]	GETTABLE 	R21 R21 K17 ; R21 := R21[0x49d4c6fc]
	104	[5816]	CALL     	R21 1 2 ; R21 := R21()
	105	[5816]	TEST     	R21 0 ; if not R21 then PC := 230
	106	[5816]	JMP      	230 ; PC := 230
	107	[5816]	GETGLOBAL	R21 K18 ; R21 := 0x76ea806b
	108	[5816]	SELF     	R21 R21 K19 ; R22 := R21; R21 := R21[0x3f3ae64c]
	109	[5816]	LOADK    	R23 := 0.000000
	110	[5816]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	111	[5816]	SELF     	R21 R21 K20 ; R22 := R21; R21 := R21[0xfe6131c3]
	112	[5816]	LOADK    	R23 K21 ; R23 := "steam_market"
	113	[5816]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	114	[5816]	TEST     	R21 0 ; if not R21 then PC := 230
	115	[5816]	JMP      	230 ; PC := 230
	116	[5816]	SELF     	R21 R2 K22 ; R22 := R2; R21 := R2[0x1760dc5a]
	117	[5816]	CALL     	R21 2 2 ; R21 := R21(R22)
	118	[5816]	EQ       	1 R21 K13 ; if R21 == "" then PC := 230
	119	[5816]	JMP      	230 ; PC := 230
	120	[5817]	GETGLOBAL	R21 K14 ; R21 := 0x25d99d89
	121	[5817]	SELF     	R21 R21 K23 ; R22 := R21; R21 := R21[0x1b162595]
	122	[5817]	CALL     	R21 2 2 ; R21 := R21(R22)
	123	[5818]	LOADK    	R22 := 1.000000
	124	[5818]	LEN      	R23 R21 ; R23 := # R21
	125	[5818]	LOADK    	R24 := 1.000000
	126	[5818]	FORPREP  	R22 134 ; R22 -= R24; PC := 134
	127	[5819]	GETTABLE 	R26 R21 R25 ; R26 := R21[R25]
	128	[5819]	SELF     	R27 R2 K22 ; R28 := R2; R27 := R2[0x1760dc5a]
	129	[5819]	CALL     	R27 2 2 ; R27 := R27(R28)
	130	[5819]	EQ       	0 R26 R27 ; if R26 ~= R27 then PC := 134
	131	[5819]	JMP      	134 ; PC := 134
	132	[5820]	LOADK    	R4 := 1.000000
	133	[5821]	JMP      	230 ; PC := 230
	134	[5818]	FORLOOP  	R22 127 ; R22 += R24; if R22 <= R23 then begin PC := 127; R25 := R22 end
	135	[5824]	JMP      	230 ; PC := 230
	136	[5826]	GETGLOBAL	R26 K24 ; R26 := 0xce225efa
	137	[5826]	CALL     	R26 1 1 ; R26()
	138	[5827]	SELF     	R26 R2 K9 ; R27 := R2; R26 := R2[0x170c5cfa]
	139	[5827]	CALL     	R26 2 2 ; R26 := R26(R27)
	140	[5828]	GETGLOBAL	R27 K7 ; R27 := 0x7b998233
	141	[5828]	MOVE     	R28 R8 ; R28 := R8
	142	[5828]	CALL     	R27 2 2 ; R27 := R27(R28)
	143	[5828]	TEST     	R27 1 ; if R27 then PC := 195
	144	[5828]	JMP      	195 ; PC := 195
	145	[5828]	SELF     	R27 R8 K2 ; R28 := R8; R27 := R8[0xf2deaf69]
	146	[5828]	GETGLOBAL	R29 K25 ; R29 := gVoidProjectionItemType
	147	[5828]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	148	[5828]	TEST     	R27 0 ; if not R27 then PC := 195
	149	[5828]	JMP      	195 ; PC := 195
	150	[5830]	MOVE     	R27 R26 ; R27 := R26
	151	[5831]	GETGLOBAL	R28 K26 ; R28 := 0x7f5022cf
	152	[5831]	GETTABLE 	R28 R28 K27 ; R28 := R28[0x66edf04f]
	153	[5831]	MOVE     	R29 R27 ; R29 := R27
	154	[5831]	LOADK    	R30 K28 ; R30 := "Bronze"
	155	[5831]	LOADK    	R31 K13 ; R31 := ""
	156	[5831]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	157	[5831]	MOVE     	R27 R28 ; R27 := R28
	158	[5832]	GETGLOBAL	R28 K26 ; R28 := 0x7f5022cf
	159	[5832]	GETTABLE 	R28 R28 K27 ; R28 := R28[0x66edf04f]
	160	[5832]	MOVE     	R29 R27 ; R29 := R27
	161	[5832]	LOADK    	R30 K29 ; R30 := "Silver"
	162	[5832]	LOADK    	R31 K13 ; R31 := ""
	163	[5832]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	164	[5832]	MOVE     	R27 R28 ; R27 := R28
	165	[5833]	GETGLOBAL	R28 K26 ; R28 := 0x7f5022cf
	166	[5833]	GETTABLE 	R28 R28 K27 ; R28 := R28[0x66edf04f]
	167	[5833]	MOVE     	R29 R27 ; R29 := R27
	168	[5833]	LOADK    	R30 K30 ; R30 := "Gold"
	169	[5833]	LOADK    	R31 K13 ; R31 := ""
	170	[5833]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	171	[5833]	MOVE     	R27 R28 ; R27 := R28
	172	[5834]	GETGLOBAL	R28 K26 ; R28 := 0x7f5022cf
	173	[5834]	GETTABLE 	R28 R28 K27 ; R28 := R28[0x66edf04f]
	174	[5834]	MOVE     	R29 R27 ; R29 := R27
	175	[5834]	LOADK    	R30 K31 ; R30 := "Platinum"
	176	[5834]	LOADK    	R31 K13 ; R31 := ""
	177	[5834]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	178	[5834]	MOVE     	R27 R28 ; R27 := R28
	179	[5836]	NEWTABLE 	R28 4 0 ; R28 := {}
	180	[5837]	MOVE     	R29 R27 ; R29 := R27
	181	[5837]	LOADK    	R30 K28 ; R30 := "Bronze"
	182	[5837]	CONCAT   	R29 R29 R30 ; R29 := R29 .. R30
	183	[5838]	MOVE     	R30 R27 ; R30 := R27
	184	[5838]	LOADK    	R31 K29 ; R31 := "Silver"
	185	[5838]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	186	[5839]	MOVE     	R31 R27 ; R31 := R27
	187	[5839]	LOADK    	R32 K30 ; R32 := "Gold"
	188	[5839]	CONCAT   	R31 R31 R32 ; R31 := R31 .. R32
	189	[5840]	MOVE     	R32 R27 ; R32 := R27
	190	[5840]	LOADK    	R33 K31 ; R33 := "Platinum"
	191	[5840]	CONCAT   	R32 R32 R33 ; R32 := R32 .. R33
	192	[5841]	SETLIST  	R28 4 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 4
	193	[5841]	MOVE     	R26 R28 ; R26 := R28
	194	[5841]	JMP      	199 ; PC := 199
	195	[5843]	NEWTABLE 	R28 1 0 ; R28 := {}
	196	[5843]	MOVE     	R29 R26 ; R29 := R26
	197	[5843]	SETLIST  	R28 1 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 1
	198	[5843]	MOVE     	R26 R28 ; R26 := R28
	199	[5845]	LOADK    	R28 := 1.000000
	200	[5845]	LEN      	R29 R26 ; R29 := # R26
	201	[5845]	LOADK    	R30 := 1.000000
	202	[5845]	FORPREP  	R28 229 ; R28 -= R30; PC := 229
	203	[5846]	GETUPVAL 	R32 U3 ; R32 := U3
	204	[5846]	MOVE     	R33 R3 ; R33 := R3
	205	[5846]	GETTABLE 	R34 R26 R31 ; R34 := R26[R31]
	206	[5846]	GETUPVAL 	R35 U4 ; R35 := U4
	207	[5846]	CALL     	R32 4 2 ; R32 := R32(R33,R34,R35)
	208	[5847]	TEST     	R32 0 ; if not R32 then PC := 229
	209	[5847]	JMP      	229 ; PC := 229
	210	[5848]	GETTABLE 	R33 R32 K8 ; R33 := R32[1.000000]
	211	[5848]	GETTABLE 	R34 R32 K32 ; R34 := R32[2.000000]
	212	[5848]	LOADK    	R35 := 1.000000
	213	[5848]	FORPREP  	R33 228 ; R33 -= R35; PC := 228
	214	[5849]	GETTABLE 	R37 R3 R36 ; R37 := R3[R36]
	215	[5849]	GETTABLE 	R37 R37 K33 ; R37 := R37["count"]
	216	[5849]	TEST     	R37 0 ; if not R37 then PC := 222
	217	[5849]	JMP      	222 ; PC := 222
	218	[5850]	GETTABLE 	R37 R3 R36 ; R37 := R3[R36]
	219	[5850]	GETTABLE 	R37 R37 K33 ; R37 := R37["count"]
	220	[5850]	ADD      	R4 R4 R37 ; R4 := R4 + R37
	221	[5850]	JMP      	223 ; PC := 223
	222	[5852]	ADD      	R4 R4 K8 ; R4 := R4 + 1.000000
	223	[5854]	GETTABLE 	R37 R32 K8 ; R37 := R32[1.000000]
	224	[5854]	GETTABLE 	R38 R32 K32 ; R38 := R32[2.000000]
	225	[5854]	EQ       	0 R37 R38 ; if R37 ~= R38 then PC := 228
	226	[5854]	JMP      	228 ; PC := 228
	227	[5855]	JMP      	229 ; PC := 229
	228	[5848]	FORLOOP  	R33 214 ; R33 += R35; if R33 <= R34 then begin PC := 214; R36 := R33 end
	229	[5845]	FORLOOP  	R28 203 ; R28 += R30; if R28 <= R29 then begin PC := 203; R31 := R28 end
	230	[5862]	EQ       	0 R4 K16 ; if R4 ~= 0.000000 then PC := 264
	231	[5862]	JMP      	264 ; PC := 264
	232	[5862]	TEST     	R7 0 ; if not R7 then PC := 264
	233	[5862]	JMP      	264 ; PC := 264
	234	[5863]	SELF     	R37 R2 K34 ; R38 := R2; R37 := R2[0xef3662ab]
	235	[5863]	CALL     	R37 2 2 ; R37 := R37(R38)
	236	[5864]	GETGLOBAL	R38 K7 ; R38 := 0x7b998233
	237	[5864]	MOVE     	R39 R37 ; R39 := R37
	238	[5864]	CALL     	R38 2 2 ; R38 := R38(R39)
	239	[5864]	TEST     	R38 1 ; if R38 then PC := 264
	240	[5864]	JMP      	264 ; PC := 264
	241	[5864]	SELF     	R38 R37 K2 ; R39 := R37; R38 := R37[0xf2deaf69]
	242	[5864]	GETGLOBAL	R40 K35 ; R40 := gKeyChainItemType
	243	[5864]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	244	[5864]	TEST     	R38 0 ; if not R38 then PC := 264
	245	[5864]	JMP      	264 ; PC := 264
	246	[5867]	SELF     	R38 R1 K36 ; R39 := R1; R38 := R1[0xe9768ed0]
	247	[5867]	CALL     	R38 2 2 ; R38 := R38(R39)
	248	[5868]	LOADK    	R39 := 1.000000
	249	[5868]	LEN      	R40 R38 ; R40 := # R38
	250	[5868]	LOADK    	R41 := 1.000000
	251	[5868]	FORPREP  	R39 263 ; R39 -= R41; PC := 263
	252	[5869]	GETGLOBAL	R43 K7 ; R43 := 0x7b998233
	253	[5869]	GETTABLE 	R44 R38 R42 ; R44 := R38[R42]
	254	[5869]	CALL     	R43 2 2 ; R43 := R43(R44)
	255	[5869]	TEST     	R43 1 ; if R43 then PC := 263
	256	[5869]	JMP      	263 ; PC := 263
	257	[5869]	GETTABLE 	R43 R38 R42 ; R43 := R38[R42]
	258	[5869]	GETTABLE 	R43 R43 K37 ; R43 := R43["mItemType"]
	259	[5869]	EQ       	0 R43 R37 ; if R43 ~= R37 then PC := 263
	260	[5869]	JMP      	263 ; PC := 263
	261	[5872]	LOADK    	R4 := 1.000000
	262	[5873]	JMP      	264 ; PC := 264
	263	[5868]	FORLOOP  	R39 252 ; R39 += R41; if R39 <= R40 then begin PC := 252; R42 := R39 end
	264	[5880]	EQ       	0 R4 K16 ; if R4 ~= 0.000000 then PC := 294
	265	[5880]	JMP      	294 ; PC := 294
	266	[5880]	GETGLOBAL	R43 K7 ; R43 := 0x7b998233
	267	[5880]	GETGLOBAL	R44 K14 ; R44 := 0x25d99d89
	268	[5880]	CALL     	R43 2 2 ; R43 := R43(R44)
	269	[5880]	TEST     	R43 1 ; if R43 then PC := 294
	270	[5880]	JMP      	294 ; PC := 294
	271	[5881]	MOVE     	R43 R8 ; R43 := R8
	272	[5882]	TEST     	R7 0 ; if not R7 then PC := 277
	273	[5882]	JMP      	277 ; PC := 277
	274	[5883]	SELF     	R44 R2 K34 ; R45 := R2; R44 := R2[0xef3662ab]
	275	[5883]	CALL     	R44 2 2 ; R44 := R44(R45)
	276	[5883]	MOVE     	R43 R44 ; R43 := R44
	277	[5885]	GETGLOBAL	R44 K7 ; R44 := 0x7b998233
	278	[5885]	MOVE     	R45 R43 ; R45 := R43
	279	[5885]	CALL     	R44 2 2 ; R44 := R44(R45)
	280	[5885]	TEST     	R44 1 ; if R44 then PC := 294
	281	[5885]	JMP      	294 ; PC := 294
	282	[5885]	SELF     	R44 R43 K2 ; R45 := R43; R44 := R43[0xf2deaf69]
	283	[5885]	GETUPVAL 	R46 U7 ; R46 := U7
	284	[5885]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	285	[5885]	TEST     	R44 0 ; if not R44 then PC := 294
	286	[5885]	JMP      	294 ; PC := 294
	287	[5885]	GETGLOBAL	R44 K14 ; R44 := 0x25d99d89
	288	[5885]	SELF     	R44 R44 K38 ; R45 := R44; R44 := R44[0x4ae54c32]
	289	[5885]	MOVE     	R46 R43 ; R46 := R43
	290	[5885]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	291	[5885]	TEST     	R44 0 ; if not R44 then PC := 294
	292	[5885]	JMP      	294 ; PC := 294
	293	[5886]	LOADK    	R4 := 1.000000
	294	[5891]	GETGLOBAL	R44 K7 ; R44 := 0x7b998233
	295	[5891]	MOVE     	R45 R8 ; R45 := R8
	296	[5891]	CALL     	R44 2 2 ; R44 := R44(R45)
	297	[5891]	TEST     	R44 1 ; if R44 then PC := 311
	298	[5891]	JMP      	311 ; PC := 311
	299	[5891]	SELF     	R44 R8 K2 ; R45 := R8; R44 := R8[0xf2deaf69]
	300	[5891]	GETGLOBAL	R46 K39 ; R46 := 0x7ed0a956
	301	[5891]	LOADK    	R47 K40 ; R47 := "/Lotus/Types/StoreItems/SlotItems/PvPLoadoutSlotItem"
	302	[5891]	CALL     	R46 2 0 ; R46,... := R46(R47)
	303	[5891]	CALL     	R44 0 2 ; R44 := R44(R45,...)
	304	[5891]	TEST     	R44 0 ; if not R44 then PC := 311
	305	[5891]	JMP      	311 ; PC := 311
	306	[5893]	GETUPVAL 	R44 U8 ; R44 := U8
	307	[5893]	GETGLOBAL	R45 K41 ; R45 := _T
	308	[5893]	GETTABLE 	R45 R45 K42 ; R45 := R45["ShowSyndicate"]
	309	[5893]	CALL     	R44 2 2 ; R44 := R44(R45)
	310	[5893]	MOVE     	R4 R44 ; R4 := R44
	311	[5896]	RETURN   	R4 2 ; return R4 
	312	[5897]	RETURN   	R0 1 ; return 

function #291 <?:5899,5911> (49 instructions, 196 bytes at 0000025274F28880)
1 param, 11 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[5900]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xed4e0128]
	2	[5900]	CALL     	R1 2 2 ; R1 := R1(R2)
	3	[5901]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	4	[5901]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	5	[5901]	MOVE     	R3 R1 ; R3 := R1
	6	[5901]	LOADK    	R4 K3 ; R4 := "_"
	7	[5901]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[5902]	GETGLOBAL	R3 K1 ; R3 := 0x7f5022cf
	9	[5902]	GETTABLE 	R3 R3 K2 ; R3 := R3[0xa5c556b9]
	10	[5902]	MOVE     	R4 R1 ; R4 := R1
	11	[5902]	LOADK    	R5 K4 ; R5 := "x"
	12	[5902]	MOVE     	R6 R2 ; R6 := R2
	13	[5902]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	14	[5903]	GETGLOBAL	R4 K1 ; R4 := 0x7f5022cf
	15	[5903]	GETTABLE 	R4 R4 K2 ; R4 := R4[0xa5c556b9]
	16	[5903]	MOVE     	R5 R1 ; R5 := R1
	17	[5903]	LOADK    	R6 K5 ; R6 := "%."
	18	[5903]	MOVE     	R7 R3 ; R7 := R3
	19	[5903]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	20	[5904]	LOADK    	R5 := 1.000000
	21	[5905]	LOADK    	R6 := 1.000000
	22	[5906]	TEST     	R2 0 ; if not R2 then PC := 46
	23	[5906]	JMP      	46 ; PC := 46
	24	[5906]	TEST     	R3 0 ; if not R3 then PC := 46
	25	[5906]	JMP      	46 ; PC := 46
	26	[5906]	TEST     	R4 0 ; if not R4 then PC := 46
	27	[5906]	JMP      	46 ; PC := 46
	28	[5906]	LT       	0 R3 R4 ; if R3 >= R4 then PC := 46
	29	[5906]	JMP      	46 ; PC := 46
	30	[5906]	LT       	0 R2 R3 ; if R2 >= R3 then PC := 46
	31	[5906]	JMP      	46 ; PC := 46
	32	[5907]	GETGLOBAL	R7 K1 ; R7 := 0x7f5022cf
	33	[5907]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x1a94c9cc]
	34	[5907]	MOVE     	R8 R1 ; R8 := R1
	35	[5907]	ADD      	R9 R2 K7 ; R9 := R2 + 1.000000
	36	[5907]	SUB      	R10 R3 K7 ; R10 := R3 - 1.000000
	37	[5907]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	38	[5907]	MOVE     	R5 R7 ; R5 := R7
	39	[5908]	GETGLOBAL	R7 K1 ; R7 := 0x7f5022cf
	40	[5908]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x1a94c9cc]
	41	[5908]	MOVE     	R8 R1 ; R8 := R1
	42	[5908]	ADD      	R9 R3 K7 ; R9 := R3 + 1.000000
	43	[5908]	SUB      	R10 R4 K7 ; R10 := R4 - 1.000000
	44	[5908]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	45	[5908]	MOVE     	R6 R7 ; R6 := R7
	46	[5910]	MOVE     	R7 R5 ; R7 := R5
	47	[5910]	MOVE     	R8 R6 ; R8 := R6
	48	[5910]	RETURN   	R7 3 ; return R7, R8 
	49	[5911]	RETURN   	R0 1 ; return 

function #292 <?:5913,5954> (114 instructions, 456 bytes at 0000025274F28B60)
2 params, 9 slots, 0 upvalues, 0 locals, 31 constants, 0 functions
	1	[5914]	OP_LOADBOOL	R2 0 0 ; R2 := false
	2	[5914]	TEST     	R2 0 ; if not R2 then PC := 6
	3	[5914]	JMP      	6 ; PC := 6
	4	[5915]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[5915]	RETURN   	R2 2 ; return R2 
	6	[5918]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[5918]	MOVE     	R3 R0 ; R3 := R0
	8	[5918]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[5918]	TEST     	R2 0 ; if not R2 then PC := 13
	10	[5918]	JMP      	13 ; PC := 13
	11	[5919]	OP_LOADBOOL	R2 0 0 ; R2 := false
	12	[5919]	RETURN   	R2 2 ; return R2 
	13	[5922]	OP_LOADBOOL	R2 1 0 ; R2 := true
	14	[5923]	SELF     	R3 R0 K1 ; R4 := R0; R3 := R0[0xa64e07df]
	15	[5923]	MOVE     	R5 R1 ; R5 := R1
	16	[5923]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	17	[5924]	LOADK    	R4 := 0.000000
	18	[5925]	EQ       	0 R1 K3 ; if R1 ~= 0.000000 then PC := 24
	19	[5925]	JMP      	24 ; PC := 24
	20	[5926]	SELF     	R5 R0 K4 ; R6 := R0; R5 := R0[0x21a3da0c]
	21	[5926]	CALL     	R5 2 2 ; R5 := R5(R6)
	22	[5926]	LEN      	R4 R5 ; R4 := # R5
	23	[5926]	JMP      	109 ; PC := 109
	24	[5927]	EQ       	0 R1 K5 ; if R1 ~= 1.000000 then PC := 38
	25	[5927]	JMP      	38 ; PC := 38
	26	[5928]	SELF     	R5 R0 K6 ; R6 := R0; R5 := R0[0x57d88957]
	27	[5928]	CALL     	R5 2 2 ; R5 := R5(R6)
	28	[5928]	LEN      	R5 R5 ; R5 := # R5
	29	[5928]	SELF     	R6 R0 K7 ; R7 := R0; R6 := R0[0x215bf396]
	30	[5928]	CALL     	R6 2 2 ; R6 := R6(R7)
	31	[5928]	LEN      	R6 R6 ; R6 := # R6
	32	[5928]	ADD      	R5 R5 R6 ; R5 := R5 + R6
	33	[5928]	SELF     	R6 R0 K8 ; R7 := R0; R6 := R0[0x0bf14f02]
	34	[5928]	CALL     	R6 2 2 ; R6 := R6(R7)
	35	[5928]	LEN      	R6 R6 ; R6 := # R6
	36	[5928]	ADD      	R4 R5 R6 ; R4 := R5 + R6
	37	[5928]	JMP      	109 ; PC := 109
	38	[5929]	EQ       	0 R1 K9 ; if R1 ~= 2.000000 then PC := 56
	39	[5929]	JMP      	56 ; PC := 56
	40	[5930]	SELF     	R5 R0 K10 ; R6 := R0; R5 := R0[0x2a207127]
	41	[5930]	CALL     	R5 2 2 ; R5 := R5(R6)
	42	[5930]	LEN      	R5 R5 ; R5 := # R5
	43	[5930]	SELF     	R6 R0 K11 ; R7 := R0; R6 := R0[0xa2c6d8b7]
	44	[5930]	CALL     	R6 2 2 ; R6 := R6(R7)
	45	[5930]	LEN      	R6 R6 ; R6 := # R6
	46	[5930]	ADD      	R5 R5 R6 ; R5 := R5 + R6
	47	[5930]	SELF     	R6 R0 K12 ; R7 := R0; R6 := R0[0x91a3eddf]
	48	[5930]	CALL     	R6 2 2 ; R6 := R6(R7)
	49	[5930]	LEN      	R6 R6 ; R6 := # R6
	50	[5930]	ADD      	R5 R5 R6 ; R5 := R5 + R6
	51	[5930]	SELF     	R6 R0 K13 ; R7 := R0; R6 := R0[0xa855881a]
	52	[5930]	CALL     	R6 2 2 ; R6 := R6(R7)
	53	[5930]	LEN      	R6 R6 ; R6 := # R6
	54	[5930]	ADD      	R4 R5 R6 ; R4 := R5 + R6
	55	[5930]	JMP      	109 ; PC := 109
	56	[5931]	EQ       	0 R1 K14 ; if R1 ~= 3.000000 then PC := 62
	57	[5931]	JMP      	62 ; PC := 62
	58	[5932]	SELF     	R5 R0 K15 ; R6 := R0; R5 := R0[0x4bb8609a]
	59	[5932]	CALL     	R5 2 2 ; R5 := R5(R6)
	60	[5932]	LEN      	R4 R5 ; R4 := # R5
	61	[5932]	JMP      	109 ; PC := 109
	62	[5933]	EQ       	0 R1 K16 ; if R1 ~= 4.000000 then PC := 72
	63	[5933]	JMP      	72 ; PC := 72
	64	[5934]	SELF     	R5 R0 K17 ; R6 := R0; R5 := R0[0x6f7b67d7]
	65	[5934]	CALL     	R5 2 2 ; R5 := R5(R6)
	66	[5934]	LEN      	R5 R5 ; R5 := # R5
	67	[5934]	SELF     	R6 R0 K18 ; R7 := R0; R6 := R0[0x3218c3b0]
	68	[5934]	CALL     	R6 2 2 ; R6 := R6(R7)
	69	[5934]	LEN      	R6 R6 ; R6 := # R6
	70	[5934]	ADD      	R4 R5 R6 ; R4 := R5 + R6
	71	[5934]	JMP      	109 ; PC := 109
	72	[5935]	EQ       	0 R1 K19 ; if R1 ~= 8.000000 then PC := 78
	73	[5935]	JMP      	78 ; PC := 78
	74	[5936]	SELF     	R5 R0 K20 ; R6 := R0; R5 := R0[0x99718a3d]
	75	[5936]	CALL     	R5 2 2 ; R5 := R5(R6)
	76	[5936]	LEN      	R4 R5 ; R4 := # R5
	77	[5936]	JMP      	109 ; PC := 109
	78	[5937]	EQ       	0 R1 K21 ; if R1 ~= 9.000000 then PC := 88
	79	[5937]	JMP      	88 ; PC := 88
	80	[5938]	SELF     	R5 R0 K22 ; R6 := R0; R5 := R0[0xbfba693e]
	81	[5938]	CALL     	R5 2 2 ; R5 := R5(R6)
	82	[5938]	LEN      	R5 R5 ; R5 := # R5
	83	[5938]	SELF     	R6 R0 K23 ; R7 := R0; R6 := R0[0xdc039065]
	84	[5938]	CALL     	R6 2 2 ; R6 := R6(R7)
	85	[5938]	LEN      	R6 R6 ; R6 := # R6
	86	[5938]	ADD      	R4 R5 R6 ; R4 := R5 + R6
	87	[5938]	JMP      	109 ; PC := 109
	88	[5939]	EQ       	0 R1 K24 ; if R1 ~= 10.000000 then PC := 94
	89	[5939]	JMP      	94 ; PC := 94
	90	[5940]	SELF     	R5 R0 K25 ; R6 := R0; R5 := R0[0xfab085e3]
	91	[5940]	CALL     	R5 2 2 ; R5 := R5(R6)
	92	[5940]	LEN      	R4 R5 ; R4 := # R5
	93	[5940]	JMP      	109 ; PC := 109
	94	[5941]	EQ       	0 R1 K26 ; if R1 ~= 11.000000 then PC := 100
	95	[5941]	JMP      	100 ; PC := 100
	96	[5942]	SELF     	R5 R0 K27 ; R6 := R0; R5 := R0[0x02ef4892]
	97	[5942]	CALL     	R5 2 2 ; R5 := R5(R6)
	98	[5942]	LEN      	R4 R5 ; R4 := # R5
	99	[5942]	JMP      	109 ; PC := 109
	100	[5944]	GETGLOBAL	R5 K28 ; R5 := 0x3d106989
	101	[5944]	LOADK    	R6 K29 ; R6 := "Unsupported bin type!"
	102	[5944]	GETGLOBAL	R7 K30 ; R7 := 0x64fb1586
	103	[5944]	MOVE     	R8 R1 ; R8 := R1
	104	[5944]	CALL     	R7 2 2 ; R7 := R7(R8)
	105	[5944]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	106	[5944]	CALL     	R5 2 1 ; R5(R6)
	107	[5945]	OP_LOADBOOL	R5 0 0 ; R5 := false
	108	[5945]	RETURN   	R5 2 ; return R5 
	109	[5948]	SUB      	R5 R3 R4 ; R5 := R3 - R4
	110	[5948]	LT       	0 R5 K3 ; if R5 >= 0.000000 then PC := 113
	111	[5948]	JMP      	113 ; PC := 113
	112	[5950]	OP_LOADBOOL	R2 0 0 ; R2 := false
	113	[5953]	RETURN   	R2 2 ; return R2 
	114	[5954]	RETURN   	R0 1 ; return 

function #293 <?:5956,5966> (26 instructions, 104 bytes at 0000025274F291F0)
1 param, 6 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[5957]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[5957]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xe27b35bb]
	3	[5957]	CALL     	R1 1 2 ; R1 := R1()
	4	[5958]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[5958]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x06d055f9]
	6	[5958]	GETGLOBAL	R3 K0 ; R3 := 0x34291f5c
	7	[5958]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x056bfe8b]
	8	[5958]	CALL     	R3 1 2 ; R3 := R3()
	9	[5958]	LOADK    	R4 := 0.000000
	10	[5958]	LOADK    	R5 := 1.000000
	11	[5958]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	12	[5958]	SETTABLE 	R1 K2 R2 ; R1["dialogType"] := R2
	13	[5959]	SETTABLE 	R1 K5 K6 ; R1["locString"] := "/Lotus/Language/Menu/Slot_InvalidBinError"
	14	[5960]	SETTABLE 	R1 K7 K8 ; R1["secondString"] := "/Lotus/Language/Menu/ContactSupport"
	15	[5961]	EQ       	1 R0 K9 ; if R0 == nil then PC := 20
	16	[5961]	JMP      	20 ; PC := 20
	17	[5962]	SELF     	R2 R1 K10 ; R3 := R1; R2 := R1[0xe6ccc5b9]
	18	[5962]	MOVE     	R4 R0 ; R4 := R0
	19	[5962]	CALL     	R2 3 1 ; R2(R3,R4)
	20	[5965]	GETGLOBAL	R2 K11 ; R2 := 0x83f4e77c
	21	[5965]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0x7d63f19c]
	22	[5965]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[5965]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x69e5aa4f]
	24	[5965]	MOVE     	R4 R1 ; R4 := R1
	25	[5965]	CALL     	R2 3 1 ; R2(R3,R4)
	26	[5966]	RETURN   	R0 1 ; return 

function #294 <?:5968,5976> (25 instructions, 100 bytes at 0000025274F29520)
1 param, 3 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[5969]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[5969]	MOVE     	R2 R0 ; R2 := R0
	3	[5969]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5969]	EQ       	1 R1 K2 ; if R1 == 4.000000 then PC := 25
	5	[5969]	JMP      	25 ; PC := 25
	6	[5969]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	7	[5969]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x056bfe8b]
	8	[5969]	CALL     	R1 1 2 ; R1 := R1()
	9	[5969]	TEST     	R1 1 ; if R1 then PC := 25
	10	[5969]	JMP      	25 ; PC := 25
	11	[5970]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	12	[5970]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xa7a2e381]
	13	[5970]	CALL     	R1 1 2 ; R1 := R1()
	14	[5970]	TEST     	R1 0 ; if not R1 then PC := 21
	15	[5970]	JMP      	21 ; PC := 21
	16	[5971]	GETUPVAL 	R1 U0 ; R1 := U0
	17	[5971]	GETTABLE 	R1 R1 K5 ; R1 := R1[0x2c2fdf05]
	18	[5971]	LOADK    	R2 K6 ; R2 := "https://kf.qq.com/bills/200901selfsam4979ae6.html"
	19	[5971]	CALL     	R1 2 1 ; R1(R2)
	20	[5971]	JMP      	25 ; PC := 25
	21	[5973]	GETUPVAL 	R1 U0 ; R1 := U0
	22	[5973]	GETTABLE 	R1 R1 K5 ; R1 := R1[0x2c2fdf05]
	23	[5973]	LOADK    	R2 K7 ; R2 := "https://digitalextremes.zendesk.com"
	24	[5973]	CALL     	R1 2 1 ; R1(R2)
	25	[5976]	RETURN   	R0 1 ; return 

function #295 <?:5978,5984> (26 instructions, 104 bytes at 0000025274F297F0)
1 param, 4 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[5979]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	2	[5979]	EQ       	1 R1 K1 ; if R1 == nil then PC := 19
	3	[5979]	JMP      	19 ; PC := 19
	4	[5979]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	5	[5979]	GETTABLE 	R1 R1 K2 ; R1 := R1["mProductExpiryOverride"]
	6	[5979]	EQ       	1 R1 K1 ; if R1 == nil then PC := 19
	7	[5979]	JMP      	19 ; PC := 19
	8	[5979]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	9	[5979]	GETTABLE 	R1 R1 K2 ; R1 := R1["mProductExpiryOverride"]
	10	[5979]	GETTABLE 	R1 R1 K3 ; R1 := R1["sec"]
	11	[5979]	EQ       	1 R1 K4 ; if R1 == "" then PC := 19
	12	[5979]	JMP      	19 ; PC := 19
	13	[5980]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	14	[5980]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x397b920f]
	15	[5980]	GETTABLE 	R2 R0 K0 ; R2 := R0["Sale"]
	16	[5980]	GETTABLE 	R2 R2 K2 ; R2 := R2["mProductExpiryOverride"]
	17	[5980]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	18	[5980]	RETURN   	R1 0 ; return R1,... 
	19	[5983]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	20	[5983]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x397b920f]
	21	[5983]	GETTABLE 	R2 R0 K7 ; R2 := R0["StoreItem"]
	22	[5983]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x5630a625]
	23	[5983]	CALL     	R2 2 0 ; R2,... := R2(R3)
	24	[5983]	TAILCALL 	R1 0 0 ; R1,... := R1(R2,...)
	25	[5983]	RETURN   	R1 0 ; return R1,... 
	26	[5984]	RETURN   	R0 1 ; return 

function #296 <?:5986,5996> (40 instructions, 160 bytes at 0000025274F29A90)
1 param, 4 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[5987]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	2	[5987]	EQ       	1 R1 K1 ; if R1 == nil then PC := 23
	3	[5987]	JMP      	23 ; PC := 23
	4	[5987]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	5	[5987]	GETTABLE 	R1 R1 K2 ; R1 := R1["mProductExpiryOverride"]
	6	[5987]	EQ       	1 R1 K1 ; if R1 == nil then PC := 23
	7	[5987]	JMP      	23 ; PC := 23
	8	[5987]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	9	[5987]	GETTABLE 	R1 R1 K2 ; R1 := R1["mProductExpiryOverride"]
	10	[5987]	GETTABLE 	R1 R1 K3 ; R1 := R1["sec"]
	11	[5987]	EQ       	1 R1 K4 ; if R1 == "" then PC := 23
	12	[5987]	JMP      	23 ; PC := 23
	13	[5988]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	14	[5988]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x397b920f]
	15	[5988]	GETTABLE 	R2 R0 K0 ; R2 := R0["Sale"]
	16	[5988]	GETTABLE 	R2 R2 K2 ; R2 := R2["mProductExpiryOverride"]
	17	[5988]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[5988]	LT       	1 R1 K7 ; if R1 < 0.000000 then PC := 21
	19	[5988]	JMP      	21 ; PC := 21
	20	[5988]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 21
	21	[5988]	OP_LOADBOOL	R1 1 0 ; R1 := true
	22	[5988]	RETURN   	R1 2 ; return R1 
	23	[5991]	GETTABLE 	R1 R0 K8 ; R1 := R0["StoreItem"]
	24	[5991]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x5630a625]
	25	[5991]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[5991]	EQ       	1 R1 K7 ; if R1 == 0.000000 then PC := 38
	27	[5991]	JMP      	38 ; PC := 38
	28	[5991]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	29	[5991]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x397b920f]
	30	[5991]	GETTABLE 	R2 R0 K8 ; R2 := R0["StoreItem"]
	31	[5991]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x5630a625]
	32	[5991]	CALL     	R2 2 0 ; R2,... := R2(R3)
	33	[5991]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	34	[5991]	LE       	0 R1 K7 ; if R1 > 0.000000 then PC := 38
	35	[5991]	JMP      	38 ; PC := 38
	36	[5992]	OP_LOADBOOL	R1 1 0 ; R1 := true
	37	[5992]	RETURN   	R1 2 ; return R1 
	38	[5995]	OP_LOADBOOL	R1 0 0 ; R1 := false
	39	[5995]	RETURN   	R1 2 ; return R1 
	40	[5996]	RETURN   	R0 1 ; return 

function #297 <?:6027,6078> (93 instructions, 372 bytes at 0000025274F29D30)
3 params, 19 slots, 2 upvalues, 0 locals, 31 constants, 0 functions
	1	[6028]	LOADK    	R3 := 0.000000
	2	[6030]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	3	[6030]	MOVE     	R5 R1 ; R5 := R1
	4	[6030]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[6030]	TEST     	R4 0 ; if not R4 then PC := 8
	6	[6030]	JMP      	8 ; PC := 8
	7	[6031]	OP_LOADBOOL	R1 0 0 ; R1 := false
	8	[6034]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	9	[6034]	MOVE     	R5 R2 ; R5 := R2
	10	[6034]	CALL     	R4 2 2 ; R4 := R4(R5)
	11	[6034]	TEST     	R4 0 ; if not R4 then PC := 14
	12	[6034]	JMP      	14 ; PC := 14
	13	[6035]	OP_LOADBOOL	R2 0 0 ; R2 := false
	14	[6038]	GETGLOBAL	R4 K2 ; R4 := 0x0032441c
	15	[6038]	GETTABLE 	R4 R4 K3 ; R4 := R4["UIMaterial_FocusLens"]
	16	[6039]	TEST     	R1 0 ; if not R1 then PC := 27
	17	[6039]	JMP      	27 ; PC := 27
	18	[6040]	GETUPVAL 	R5 U0 ; R5 := U0
	19	[6040]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x06d055f9]
	20	[6040]	MOVE     	R6 R2 ; R6 := R2
	21	[6040]	GETGLOBAL	R7 K2 ; R7 := 0x0032441c
	22	[6040]	GETTABLE 	R7 R7 K5 ; R7 := R7["UIMaterial_FocusLensStoreDepth"]
	23	[6040]	GETGLOBAL	R8 K2 ; R8 := 0x0032441c
	24	[6040]	GETTABLE 	R8 R8 K6 ; R8 := R8["UIMaterial_FocusLensStore"]
	25	[6040]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	26	[6040]	MOVE     	R4 R5 ; R4 := R5
	27	[6043]	MOVE     	R5 R0 ; R5 := R0
	28	[6044]	GETGLOBAL	R6 K7 ; R6 := 0x6728fd22
	29	[6044]	MOVE     	R7 R5 ; R7 := R5
	30	[6044]	CALL     	R6 2 2 ; R6 := R6(R7)
	31	[6044]	TEST     	R6 0 ; if not R6 then PC := 37
	32	[6044]	JMP      	37 ; PC := 37
	33	[6045]	GETGLOBAL	R6 K8 ; R6 := 0xb009bbc6
	34	[6045]	MOVE     	R7 R5 ; R7 := R5
	35	[6045]	CALL     	R6 2 2 ; R6 := R6(R7)
	36	[6045]	MOVE     	R5 R6 ; R5 := R6
	37	[6048]	LOADK    	R6 K9 ; R6 := ""
	38	[6049]	LOADK    	R7 := 1.000000
	39	[6050]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	40	[6050]	MOVE     	R9 R5 ; R9 := R5
	41	[6050]	CALL     	R8 2 2 ; R8 := R8(R9)
	42	[6050]	TEST     	R8 1 ; if R8 then PC := 77
	43	[6050]	JMP      	77 ; PC := 77
	44	[6051]	SELF     	R8 R5 K10 ; R9 := R5; R8 := R5[0x3310fecd]
	45	[6051]	CALL     	R8 2 2 ; R8 := R8(R9)
	46	[6052]	LOADK    	R9 := 1.000000
	47	[6052]	GETGLOBAL	R10 K11 ; R10 := 0x5bced4c4
	48	[6052]	GETTABLE 	R10 R10 K12 ; R10 := R10[0xac1b386a]
	49	[6052]	GETUPVAL 	R11 U1 ; R11 := U1
	50	[6052]	LEN      	R11 R11 ; R11 := # R11
	51	[6052]	LEN      	R12 R8 ; R12 := # R8
	52	[6052]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	53	[6052]	LOADK    	R11 := 1.000000
	54	[6052]	FORPREP  	R9 60 ; R9 -= R11; PC := 60
	55	[6055]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	56	[6055]	LT       	0 K13 R13 ; if 0.000000 >= R13 then PC := 60
	57	[6055]	JMP      	60 ; PC := 60
	58	[6056]	SUB      	R3 R12 K14 ; R3 := R12 - 1.000000
	59	[6058]	JMP      	61 ; PC := 61
	60	[6052]	FORLOOP  	R9 55 ; R9 += R11; if R9 <= R10 then begin PC := 55; R12 := R9 end
	61	[6062]	SELF     	R13 R5 K15 ; R14 := R5; R13 := R5[0x59a2ddb4]
	62	[6062]	CALL     	R13 2 2 ; R13 := R13(R14)
	63	[6063]	EQ       	0 R13 K16 ; if R13 ~= 0.350000 then PC := 68
	64	[6063]	JMP      	68 ; PC := 68
	65	[6064]	LOADK    	R7 := 2.000000
	66	[6065]	LOADK    	R6 K17 ; R6 := "_GREATER"
	67	[6065]	JMP      	77 ; PC := 77
	68	[6066]	EQ       	0 R13 K18 ; if R13 ~= 0.450000 then PC := 73
	69	[6066]	JMP      	73 ; PC := 73
	70	[6067]	LOADK    	R7 := 3.000000
	71	[6068]	LOADK    	R6 K19 ; R6 := "_EIDOLON"
	72	[6068]	JMP      	77 ; PC := 77
	73	[6069]	EQ       	0 R13 K20 ; if R13 ~= 0.650000 then PC := 77
	74	[6069]	JMP      	77 ; PC := 77
	75	[6070]	LOADK    	R7 := 4.000000
	76	[6071]	LOADK    	R6 K21 ; R6 := "_LUA"
	77	[6075]	GETUPVAL 	R14 U1 ; R14 := U1
	78	[6075]	GETTABLE 	R14 R14 R3 ; R14 := R14[R3]
	79	[6076]	LOADK    	R15 K22 ; R15 := "<"
	80	[6076]	GETTABLE 	R16 R14 K23 ; R16 := R14["Lens"]
	81	[6076]	MOVE     	R17 R6 ; R17 := R6
	82	[6076]	LOADK    	R18 K24 ; R18 := ">"
	83	[6076]	CONCAT   	R6 R15 R18 ; R6 := R15 .. R16 .. R17 .. R18
	84	[6077]	NEWTABLE 	R15 0 5 ; R15 := {}
	85	[6077]	GETTABLE 	R16 R14 K26 ; R16 := R14["Polarity"]
	86	[6077]	SETTABLE 	R15 K25 R16 ; R15["PolarityTag"] := R16
	87	[6077]	SETTABLE 	R15 K27 R6 ; R15["LensTag"] := R6
	88	[6077]	SETTABLE 	R15 K28 R7 ; R15["LensTier"] := R7
	89	[6077]	GETTABLE 	R16 R4 R3 ; R16 := R4[R3]
	90	[6077]	SETTABLE 	R15 K29 R16 ; R15["Material"] := R16
	91	[6077]	SETTABLE 	R15 K30 R3 ; R15["PolarityType"] := R3
	92	[6077]	RETURN   	R15 2 ; return R15 
	93	[6078]	RETURN   	R0 1 ; return 

function #298 <?:6080,6082> (4 instructions, 16 bytes at 0000025274F2A5A0)
1 param, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6081]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6081]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	3	[6081]	RETURN   	R1 2 ; return R1 
	4	[6082]	RETURN   	R0 1 ; return 

function #299 <?:6084,6120> (86 instructions, 344 bytes at 0000025274F2A670)
2 params, 13 slots, 1 upvalue, 0 locals, 23 constants, 0 functions
	1	[6085]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[6085]	GETGLOBAL	R3 K1 ; R3 := 0x89326c93
	3	[6085]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[6085]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[6085]	JMP      	7 ; PC := 7
	6	[6086]	RETURN   	R0 1 ; return 
	7	[6088]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	8	[6088]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xfb64e76c]
	9	[6088]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[6089]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	11	[6089]	MOVE     	R4 R2 ; R4 := R2
	12	[6089]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[6089]	TEST     	R3 0 ; if not R3 then PC := 16
	14	[6089]	JMP      	16 ; PC := 16
	15	[6090]	RETURN   	R0 1 ; return 
	16	[6093]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[6093]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x06d055f9]
	18	[6093]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	19	[6093]	MOVE     	R5 R1 ; R5 := R1
	20	[6093]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[6093]	SELF     	R5 R2 K4 ; R6 := R2; R5 := R2[0x5578d98b]
	22	[6093]	CALL     	R5 2 2 ; R5 := R5(R6)
	23	[6093]	MOVE     	R6 R1 ; R6 := R1
	24	[6093]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	25	[6094]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	26	[6094]	MOVE     	R5 R3 ; R5 := R3
	27	[6094]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[6094]	TEST     	R4 0 ; if not R4 then PC := 31
	29	[6094]	JMP      	31 ; PC := 31
	30	[6095]	RETURN   	R0 1 ; return 
	31	[6098]	GETGLOBAL	R4 K5 ; R4 := 0x0469f296
	32	[6098]	LOADK    	R5 K6 ; R5 := "GAME_R1_EYE1"
	33	[6098]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[6099]	GETGLOBAL	R5 K5 ; R5 := 0x0469f296
	35	[6099]	LOADK    	R6 K7 ; R6 := "GAME_L1_EYE1"
	36	[6099]	CALL     	R5 2 2 ; R5 := R5(R6)
	37	[6100]	GETGLOBAL	R6 K5 ; R6 := 0x0469f296
	38	[6100]	LOADK    	R7 K8 ; R7 := "GAME_C1_HEAD1"
	39	[6100]	CALL     	R6 2 2 ; R6 := R6(R7)
	40	[6102]	SELF     	R7 R3 K9 ; R8 := R3; R7 := R3[0xa390a429]
	41	[6102]	MOVE     	R9 R4 ; R9 := R4
	42	[6102]	OP_LOADBOOL	R10 0 0 ; R10 := false
	43	[6102]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	44	[6103]	SELF     	R7 R3 K9 ; R8 := R3; R7 := R3[0xa390a429]
	45	[6103]	MOVE     	R9 R5 ; R9 := R5
	46	[6103]	OP_LOADBOOL	R10 0 0 ; R10 := false
	47	[6103]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	48	[6105]	GETGLOBAL	R7 K10 ; R7 := _T
	49	[6105]	GETTABLE 	R7 R7 K11 ; R7 := R7["OperatorEyeTrack"]
	50	[6106]	EQ       	1 R7 K12 ; if R7 == nil then PC := 82
	51	[6106]	JMP      	82 ; PC := 82
	52	[6107]	GETGLOBAL	R8 K14 ; R8 := 0x5bced4c4
	53	[6107]	GETTABLE 	R8 R8 K15 ; R8 := R8[0xb62ecfe0]
	54	[6107]	LOADK    	R9 := 0.000000
	55	[6107]	GETTABLE 	R10 R7 K13 ; R10 := R7["LerpAmount"]
	56	[6107]	GETGLOBAL	R11 K16 ; R11 := 0x67652851
	57	[6107]	CALL     	R11 1 2 ; R11 := R11()
	58	[6107]	MUL      	R11 R11 K17 ; R11 := R11 * 3.000000
	59	[6107]	SUB      	R10 R10 R11 ; R10 := R10 - R11
	60	[6107]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	61	[6107]	SETTABLE 	R7 K13 R8 ; R7["LerpAmount"] := R8
	62	[6108]	TEST     	R0 0 ; if not R0 then PC := 65
	63	[6108]	JMP      	65 ; PC := 65
	64	[6109]	SETTABLE 	R7 K13 K18 ; R7["LerpAmount"] := 0.000000
	65	[6111]	GETGLOBAL	R8 K19 ; R8 := 0x5e223e7d
	66	[6111]	GETTABLE 	R9 R7 K20 ; R9 := R7["InitialRot"]
	67	[6111]	GETTABLE 	R10 R7 K21 ; R10 := R7["FinalRot"]
	68	[6111]	GETTABLE 	R11 R7 K13 ; R11 := R7["LerpAmount"]
	69	[6111]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	70	[6112]	SELF     	R9 R3 K22 ; R10 := R3; R9 := R3[0xb63fc1d8]
	71	[6112]	MOVE     	R11 R6 ; R11 := R6
	72	[6112]	MOVE     	R12 R8 ; R12 := R8
	73	[6112]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	74	[6113]	GETTABLE 	R9 R7 K13 ; R9 := R7["LerpAmount"]
	75	[6113]	EQ       	0 R9 K18 ; if R9 ~= 0.000000 then PC := 86
	76	[6113]	JMP      	86 ; PC := 86
	77	[6114]	SELF     	R9 R3 K9 ; R10 := R3; R9 := R3[0xa390a429]
	78	[6114]	MOVE     	R11 R6 ; R11 := R6
	79	[6114]	OP_LOADBOOL	R12 0 0 ; R12 := false
	80	[6114]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	81	[6115]	JMP      	86 ; PC := 86
	82	[6117]	SELF     	R9 R3 K9 ; R10 := R3; R9 := R3[0xa390a429]
	83	[6117]	MOVE     	R11 R6 ; R11 := R6
	84	[6117]	OP_LOADBOOL	R12 0 0 ; R12 := false
	85	[6117]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	86	[6120]	RETURN   	R0 1 ; return 

function #300 <?:6122,6209> (293 instructions, 1172 bytes at 0000025274F2ACE0)
3 params, 24 slots, 1 upvalue, 0 locals, 60 constants, 0 functions
	1	[6123]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[6123]	GETGLOBAL	R4 K1 ; R4 := 0x89326c93
	3	[6123]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[6123]	TEST     	R3 0 ; if not R3 then PC := 7
	5	[6123]	JMP      	7 ; PC := 7
	6	[6124]	RETURN   	R0 1 ; return 
	7	[6126]	GETGLOBAL	R3 K1 ; R3 := 0x89326c93
	8	[6126]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0xfb64e76c]
	9	[6126]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[6127]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	11	[6127]	MOVE     	R5 R3 ; R5 := R3
	12	[6127]	CALL     	R4 2 2 ; R4 := R4(R5)
	13	[6127]	TEST     	R4 0 ; if not R4 then PC := 16
	14	[6127]	JMP      	16 ; PC := 16
	15	[6128]	RETURN   	R0 1 ; return 
	16	[6131]	GETUPVAL 	R4 U0 ; R4 := U0
	17	[6131]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x06d055f9]
	18	[6131]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	19	[6131]	MOVE     	R6 R2 ; R6 := R2
	20	[6131]	CALL     	R5 2 2 ; R5 := R5(R6)
	21	[6131]	SELF     	R6 R3 K4 ; R7 := R3; R6 := R3[0x5578d98b]
	22	[6131]	CALL     	R6 2 2 ; R6 := R6(R7)
	23	[6131]	MOVE     	R7 R2 ; R7 := R2
	24	[6131]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	25	[6132]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	26	[6132]	MOVE     	R6 R4 ; R6 := R4
	27	[6132]	CALL     	R5 2 2 ; R5 := R5(R6)
	28	[6132]	TEST     	R5 0 ; if not R5 then PC := 31
	29	[6132]	JMP      	31 ; PC := 31
	30	[6133]	RETURN   	R0 1 ; return 
	31	[6136]	GETGLOBAL	R5 K5 ; R5 := 0x0469f296
	32	[6136]	LOADK    	R6 K6 ; R6 := "GAME_R1_EYE1"
	33	[6136]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[6137]	GETGLOBAL	R6 K5 ; R6 := 0x0469f296
	35	[6137]	LOADK    	R7 K6 ; R7 := "GAME_R1_EYE1"
	36	[6137]	CALL     	R6 2 2 ; R6 := R6(R7)
	37	[6138]	GETGLOBAL	R7 K5 ; R7 := 0x0469f296
	38	[6138]	LOADK    	R8 K7 ; R8 := "GAME_L1_EYE1"
	39	[6138]	CALL     	R7 2 2 ; R7 := R7(R8)
	40	[6139]	GETGLOBAL	R8 K5 ; R8 := 0x0469f296
	41	[6139]	LOADK    	R9 K8 ; R9 := "GAME_C1_HEAD1"
	42	[6139]	CALL     	R8 2 2 ; R8 := R8(R9)
	43	[6141]	GETGLOBAL	R9 K9 ; R9 := _T
	44	[6141]	GETTABLE 	R9 R9 K10 ; R9 := R9["OperatorEyeTrack"]
	45	[6141]	EQ       	0 R9 K11 ; if R9 ~= nil then PC := 95
	46	[6141]	JMP      	95 ; PC := 95
	47	[6142]	GETGLOBAL	R9 K9 ; R9 := _T
	48	[6142]	NEWTABLE 	R10 0 5 ; R10 := {}
	49	[6142]	GETGLOBAL	R11 K13 ; R11 := 0x78ca68a2
	50	[6142]	LOADK    	R12 := 0.000000
	51	[6142]	LOADK    	R13 K14 ; R13 := 0.150000
	52	[6142]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	53	[6142]	SETTABLE 	R10 K12 R11 ; R10["X"] := R11
	54	[6143]	GETGLOBAL	R11 K13 ; R11 := 0x78ca68a2
	55	[6143]	LOADK    	R12 := 0.000000
	56	[6143]	LOADK    	R13 K14 ; R13 := 0.150000
	57	[6143]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	58	[6143]	SETTABLE 	R10 K15 R11 ; R10["Y"] := R11
	59	[6144]	SELF     	R11 R4 K17 ; R12 := R4; R11 := R4[0xea0832ea]
	60	[6144]	MOVE     	R13 R5 ; R13 := R5
	61	[6144]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	62	[6144]	SETTABLE 	R10 K16 R11 ; R10["InitialRot"] := R11
	63	[6145]	GETGLOBAL	R11 K19 ; R11 := 0x00046924
	64	[6145]	CALL     	R11 1 2 ; R11 := R11()
	65	[6145]	SETTABLE 	R10 K18 R11 ; R10["FinalRot"] := R11
	66	[6146]	SETTABLE 	R10 K20 K21 ; R10["LerpAmount"] := 0.000000
	67	[6146]	SETTABLE 	R9 K10 R10 ; R9["OperatorEyeTrack"] := R10
	68	[6147]	GETGLOBAL	R9 K9 ; R9 := _T
	69	[6147]	GETTABLE 	R9 R9 K10 ; R9 := R9["OperatorEyeTrack"]
	70	[6147]	GETTABLE 	R9 R9 K16 ; R9 := R9["InitialRot"]
	71	[6147]	GETGLOBAL	R10 K9 ; R10 := _T
	72	[6147]	GETTABLE 	R10 R10 K10 ; R10 := R10["OperatorEyeTrack"]
	73	[6147]	GETTABLE 	R10 R10 K16 ; R10 := R10["InitialRot"]
	74	[6147]	GETTABLE 	R10 R10 K22 ; R10 := R10["pitch"]
	75	[6147]	SUB      	R10 R10 K23 ; R10 := R10 - 12.000000
	76	[6147]	SETTABLE 	R9 K22 R10 ; R9["pitch"] := R10
	77	[6148]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	78	[6148]	GETGLOBAL	R10 K9 ; R10 := _T
	79	[6148]	GETTABLE 	R10 R10 K24 ; R10 := R10["defaultOperatorRot"]
	80	[6148]	CALL     	R9 2 2 ; R9 := R9(R10)
	81	[6148]	TEST     	R9 1 ; if R9 then PC := 95
	82	[6148]	JMP      	95 ; PC := 95
	83	[6149]	GETGLOBAL	R9 K9 ; R9 := _T
	84	[6149]	GETTABLE 	R9 R9 K10 ; R9 := R9["OperatorEyeTrack"]
	85	[6149]	GETTABLE 	R9 R9 K16 ; R9 := R9["InitialRot"]
	86	[6149]	GETGLOBAL	R10 K9 ; R10 := _T
	87	[6149]	GETTABLE 	R10 R10 K10 ; R10 := R10["OperatorEyeTrack"]
	88	[6149]	GETTABLE 	R10 R10 K16 ; R10 := R10["InitialRot"]
	89	[6149]	GETTABLE 	R10 R10 K25 ; R10 := R10["heading"]
	90	[6149]	GETGLOBAL	R11 K9 ; R11 := _T
	91	[6149]	GETTABLE 	R11 R11 K24 ; R11 := R11["defaultOperatorRot"]
	92	[6149]	GETTABLE 	R11 R11 K25 ; R11 := R11["heading"]
	93	[6149]	SUB      	R10 R10 R11 ; R10 := R10 - R11
	94	[6149]	SETTABLE 	R9 K25 R10 ; R9["heading"] := R10
	95	[6153]	GETGLOBAL	R9 K1 ; R9 := 0x89326c93
	96	[6153]	SELF     	R9 R9 K26 ; R10 := R9; R9 := R9[0xb4364067]
	97	[6153]	CALL     	R9 2 2 ; R9 := R9(R10)
	98	[6155]	SELF     	R10 R0 K27 ; R11 := R0; R10 := R0[0x906faf80]
	99	[6155]	CALL     	R10 2 2 ; R10 := R10(R11)
	100	[6156]	EQ       	1 R1 K11 ; if R1 == nil then PC := 103
	101	[6156]	JMP      	103 ; PC := 103
	102	[6157]	GETTABLE 	R10 R1 K28 ; R10 := R1["x"]
	103	[6159]	SELF     	R11 R0 K29 ; R12 := R0; R11 := R0[0x916fb113]
	104	[6159]	CALL     	R11 2 2 ; R11 := R11(R12)
	105	[6160]	EQ       	1 R1 K11 ; if R1 == nil then PC := 108
	106	[6160]	JMP      	108 ; PC := 108
	107	[6161]	GETTABLE 	R11 R1 K30 ; R11 := R1["y"]
	108	[6163]	SELF     	R12 R0 K31 ; R13 := R0; R12 := R0[0x6b837788]
	109	[6163]	CALL     	R12 2 2 ; R12 := R12(R13)
	110	[6163]	DIV      	R12 R10 R12 ; R12 := R10 / R12
	111	[6163]	MUL      	R12 R12 K32 ; R12 := R12 * 2.000000
	112	[6163]	SUB      	R12 R12 K33 ; R12 := R12 - 1.000000
	113	[6164]	SELF     	R13 R0 K34 ; R14 := R0; R13 := R0[0xaf9fda9f]
	114	[6164]	CALL     	R13 2 2 ; R13 := R13(R14)
	115	[6164]	DIV      	R13 R11 R13 ; R13 := R11 / R13
	116	[6164]	MUL      	R13 R13 K32 ; R13 := R13 * 2.000000
	117	[6164]	SUB      	R13 R13 K33 ; R13 := R13 - 1.000000
	118	[6166]	GETGLOBAL	R14 K35 ; R14 := 0xf7f90318
	119	[6166]	GETGLOBAL	R15 K36 ; R15 := 0x55156ff7
	120	[6166]	CALL     	R15 1 2 ; R15 := R15()
	121	[6166]	MUL      	R15 R15 K37 ; R15 := R15 * 0.100000
	122	[6166]	CALL     	R14 2 2 ; R14 := R14(R15)
	123	[6166]	MUL      	R14 R14 K37 ; R14 := R14 * 0.100000
	124	[6166]	ADD      	R12 R12 R14 ; R12 := R12 + R14
	125	[6167]	GETGLOBAL	R14 K35 ; R14 := 0xf7f90318
	126	[6167]	GETGLOBAL	R15 K36 ; R15 := 0x55156ff7
	127	[6167]	CALL     	R15 1 2 ; R15 := R15()
	128	[6167]	MUL      	R15 R15 K37 ; R15 := R15 * 0.100000
	129	[6167]	ADD      	R15 K38 R15 ; R15 := 7.000000 + R15
	130	[6167]	CALL     	R14 2 2 ; R14 := R14(R15)
	131	[6167]	MUL      	R14 R14 K37 ; R14 := R14 * 0.100000
	132	[6167]	ADD      	R13 R13 R14 ; R13 := R13 + R14
	133	[6169]	GETGLOBAL	R14 K9 ; R14 := _T
	134	[6169]	GETTABLE 	R14 R14 K10 ; R14 := R14["OperatorEyeTrack"]
	135	[6169]	GETTABLE 	R14 R14 K12 ; R14 := R14["X"]
	136	[6169]	SELF     	R14 R14 K39 ; R15 := R14; R14 := R14[0x188e2bee]
	137	[6169]	MOVE     	R16 R12 ; R16 := R12
	138	[6169]	CALL     	R14 3 1 ; R14(R15,R16)
	139	[6170]	GETGLOBAL	R14 K9 ; R14 := _T
	140	[6170]	GETTABLE 	R14 R14 K10 ; R14 := R14["OperatorEyeTrack"]
	141	[6170]	GETTABLE 	R14 R14 K15 ; R14 := R14["Y"]
	142	[6170]	SELF     	R14 R14 K39 ; R15 := R14; R14 := R14[0x188e2bee]
	143	[6170]	MOVE     	R16 R13 ; R16 := R13
	144	[6170]	CALL     	R14 3 1 ; R14(R15,R16)
	145	[6172]	GETGLOBAL	R14 K9 ; R14 := _T
	146	[6172]	GETTABLE 	R14 R14 K10 ; R14 := R14["OperatorEyeTrack"]
	147	[6172]	GETTABLE 	R14 R14 K12 ; R14 := R14["X"]
	148	[6172]	SELF     	R14 R14 K40 ; R15 := R14; R14 := R14[0xfaa69527]
	149	[6172]	GETGLOBAL	R16 K41 ; R16 := 0x67652851
	150	[6172]	CALL     	R16 1 0 ; R16,... := R16()
	151	[6172]	CALL     	R14 0 1 ; R14(R15,...)
	152	[6173]	GETGLOBAL	R14 K9 ; R14 := _T
	153	[6173]	GETTABLE 	R14 R14 K10 ; R14 := R14["OperatorEyeTrack"]
	154	[6173]	GETTABLE 	R14 R14 K15 ; R14 := R14["Y"]
	155	[6173]	SELF     	R14 R14 K40 ; R15 := R14; R14 := R14[0xfaa69527]
	156	[6173]	GETGLOBAL	R16 K41 ; R16 := 0x67652851
	157	[6173]	CALL     	R16 1 0 ; R16,... := R16()
	158	[6173]	CALL     	R14 0 1 ; R14(R15,...)
	159	[6175]	GETGLOBAL	R14 K42 ; R14 := 0xa421af95
	160	[6175]	GETGLOBAL	R15 K9 ; R15 := _T
	161	[6175]	GETTABLE 	R15 R15 K10 ; R15 := R15["OperatorEyeTrack"]
	162	[6175]	GETTABLE 	R15 R15 K12 ; R15 := R15["X"]
	163	[6175]	SELF     	R15 R15 K43 ; R16 := R15; R15 := R15[0x54ab95f9]
	164	[6175]	CALL     	R15 2 2 ; R15 := R15(R16)
	165	[6175]	MUL      	R15 R15 K44 ; R15 := R15 * 0.300000
	166	[6175]	GETGLOBAL	R16 K9 ; R16 := _T
	167	[6175]	GETTABLE 	R16 R16 K10 ; R16 := R16["OperatorEyeTrack"]
	168	[6175]	GETTABLE 	R16 R16 K15 ; R16 := R16["Y"]
	169	[6175]	SELF     	R16 R16 K43 ; R17 := R16; R16 := R16[0x54ab95f9]
	170	[6175]	CALL     	R16 2 2 ; R16 := R16(R17)
	171	[6175]	MUL      	R16 R16 K37 ; R16 := R16 * 0.100000
	172	[6175]	ADD      	R16 K45 R16 ; R16 := 0.025000 + R16
	173	[6175]	LOADK    	R17 := 0.000000
	174	[6175]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	175	[6176]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	176	[6176]	GETGLOBAL	R16 K9 ; R16 := _T
	177	[6176]	GETTABLE 	R16 R16 K24 ; R16 := R16["defaultOperatorRot"]
	178	[6176]	CALL     	R15 2 2 ; R15 := R15(R16)
	179	[6176]	TEST     	R15 1 ; if R15 then PC := 187
	180	[6176]	JMP      	187 ; PC := 187
	181	[6177]	GETGLOBAL	R15 K46 ; R15 := 0x492c7f2a
	182	[6177]	MOVE     	R16 R14 ; R16 := R14
	183	[6177]	GETGLOBAL	R17 K9 ; R17 := _T
	184	[6177]	GETTABLE 	R17 R17 K24 ; R17 := R17["defaultOperatorRot"]
	185	[6177]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	186	[6177]	MOVE     	R14 R15 ; R14 := R15
	187	[6179]	SELF     	R15 R9 K47 ; R16 := R9; R15 := R9[0xd1586535]
	188	[6179]	CALL     	R15 2 2 ; R15 := R15(R16)
	189	[6179]	SUB      	R15 R15 R14 ; R15 := R15 - R14
	190	[6180]	SELF     	R16 R4 K48 ; R17 := R4; R16 := R4[0x003c792f]
	191	[6180]	MOVE     	R18 R5 ; R18 := R5
	192	[6180]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	193	[6181]	GETGLOBAL	R17 K49 ; R17 := 0x20b7f774
	194	[6181]	MOVE     	R18 R16 ; R18 := R16
	195	[6181]	MOVE     	R19 R15 ; R19 := R15
	196	[6181]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	197	[6182]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	198	[6182]	GETGLOBAL	R19 K9 ; R19 := _T
	199	[6182]	GETTABLE 	R19 R19 K24 ; R19 := R19["defaultOperatorRot"]
	200	[6182]	CALL     	R18 2 2 ; R18 := R18(R19)
	201	[6182]	TEST     	R18 1 ; if R18 then PC := 209
	202	[6182]	JMP      	209 ; PC := 209
	203	[6183]	GETTABLE 	R18 R17 K25 ; R18 := R17["heading"]
	204	[6183]	GETGLOBAL	R19 K9 ; R19 := _T
	205	[6183]	GETTABLE 	R19 R19 K24 ; R19 := R19["defaultOperatorRot"]
	206	[6183]	GETTABLE 	R19 R19 K25 ; R19 := R19["heading"]
	207	[6183]	SUB      	R18 R18 R19 ; R18 := R18 - R19
	208	[6183]	SETTABLE 	R17 K25 R18 ; R17["heading"] := R18
	209	[6186]	GETGLOBAL	R18 K49 ; R18 := 0x20b7f774
	210	[6186]	MOVE     	R19 R16 ; R19 := R16
	211	[6186]	MOVE     	R20 R15 ; R20 := R15
	212	[6186]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	213	[6187]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	214	[6187]	GETGLOBAL	R20 K9 ; R20 := _T
	215	[6187]	GETTABLE 	R20 R20 K24 ; R20 := R20["defaultOperatorRot"]
	216	[6187]	CALL     	R19 2 2 ; R19 := R19(R20)
	217	[6187]	TEST     	R19 1 ; if R19 then PC := 225
	218	[6187]	JMP      	225 ; PC := 225
	219	[6188]	GETTABLE 	R19 R18 K25 ; R19 := R18["heading"]
	220	[6188]	GETGLOBAL	R20 K9 ; R20 := _T
	221	[6188]	GETTABLE 	R20 R20 K24 ; R20 := R20["defaultOperatorRot"]
	222	[6188]	GETTABLE 	R20 R20 K25 ; R20 := R20["heading"]
	223	[6188]	SUB      	R19 R19 R20 ; R19 := R19 - R20
	224	[6188]	SETTABLE 	R18 K25 R19 ; R18["heading"] := R19
	225	[6190]	GETGLOBAL	R19 K50 ; R19 := 0x42dcc9f5
	226	[6190]	GETTABLE 	R20 R18 K25 ; R20 := R18["heading"]
	227	[6190]	LOADK    	R21 := -10.000000
	228	[6190]	LOADK    	R22 := 10.000000
	229	[6190]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	230	[6190]	SETTABLE 	R18 K25 R19 ; R18["heading"] := R19
	231	[6191]	SELF     	R19 R4 K51 ; R20 := R4; R19 := R4[0x9437c71b]
	232	[6191]	MOVE     	R21 R6 ; R21 := R6
	233	[6191]	MOVE     	R22 R18 ; R22 := R18
	234	[6191]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	235	[6192]	SELF     	R19 R4 K51 ; R20 := R4; R19 := R4[0x9437c71b]
	236	[6192]	MOVE     	R21 R7 ; R21 := R7
	237	[6192]	MOVE     	R22 R18 ; R22 := R18
	238	[6192]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	239	[6194]	SELF     	R19 R4 K52 ; R20 := R4; R19 := R4[0xa390a429]
	240	[6194]	MOVE     	R21 R6 ; R21 := R6
	241	[6194]	OP_LOADBOOL	R22 1 0 ; R22 := true
	242	[6194]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	243	[6195]	SELF     	R19 R4 K52 ; R20 := R4; R19 := R4[0xa390a429]
	244	[6195]	MOVE     	R21 R7 ; R21 := R7
	245	[6195]	OP_LOADBOOL	R22 1 0 ; R22 := true
	246	[6195]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	247	[6197]	SELF     	R19 R4 K52 ; R20 := R4; R19 := R4[0xa390a429]
	248	[6197]	MOVE     	R21 R8 ; R21 := R8
	249	[6197]	OP_LOADBOOL	R22 1 0 ; R22 := true
	250	[6197]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	251	[6199]	GETTABLE 	R19 R17 K22 ; R19 := R17["pitch"]
	252	[6199]	SUB      	R19 R19 K53 ; R19 := R19 - 15.000000
	253	[6199]	SETTABLE 	R17 K22 R19 ; R17["pitch"] := R19
	254	[6200]	GETGLOBAL	R19 K9 ; R19 := _T
	255	[6200]	GETTABLE 	R19 R19 K10 ; R19 := R19["OperatorEyeTrack"]
	256	[6200]	GETGLOBAL	R20 K54 ; R20 := 0x5bced4c4
	257	[6200]	GETTABLE 	R20 R20 K55 ; R20 := R20[0xac1b386a]
	258	[6200]	LOADK    	R21 := 1.000000
	259	[6200]	GETGLOBAL	R22 K9 ; R22 := _T
	260	[6200]	GETTABLE 	R22 R22 K10 ; R22 := R22["OperatorEyeTrack"]
	261	[6200]	GETTABLE 	R22 R22 K20 ; R22 := R22["LerpAmount"]
	262	[6200]	GETGLOBAL	R23 K41 ; R23 := 0x67652851
	263	[6200]	CALL     	R23 1 2 ; R23 := R23()
	264	[6200]	ADD      	R22 R22 R23 ; R22 := R22 + R23
	265	[6200]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	266	[6200]	SETTABLE 	R19 K20 R20 ; R19["LerpAmount"] := R20
	267	[6201]	GETGLOBAL	R19 K56 ; R19 := 0x5e223e7d
	268	[6201]	GETGLOBAL	R20 K9 ; R20 := _T
	269	[6201]	GETTABLE 	R20 R20 K10 ; R20 := R20["OperatorEyeTrack"]
	270	[6201]	GETTABLE 	R20 R20 K16 ; R20 := R20["InitialRot"]
	271	[6201]	MOVE     	R21 R17 ; R21 := R17
	272	[6201]	GETGLOBAL	R22 K9 ; R22 := _T
	273	[6201]	GETTABLE 	R22 R22 K10 ; R22 := R22["OperatorEyeTrack"]
	274	[6201]	GETTABLE 	R22 R22 K20 ; R22 := R22["LerpAmount"]
	275	[6201]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	276	[6202]	GETGLOBAL	R20 K9 ; R20 := _T
	277	[6202]	GETTABLE 	R20 R20 K10 ; R20 := R20["OperatorEyeTrack"]
	278	[6202]	SETTABLE 	R20 K18 R19 ; R20["FinalRot"] := R19
	279	[6203]	SELF     	R20 R4 K57 ; R21 := R4; R20 := R4[0xb63fc1d8]
	280	[6203]	MOVE     	R22 R8 ; R22 := R8
	281	[6203]	MOVE     	R23 R19 ; R23 := R19
	282	[6203]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	283	[6205]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	284	[6205]	GETGLOBAL	R21 K9 ; R21 := _T
	285	[6205]	GETTABLE 	R21 R21 K58 ; R21 := R21["TennoSpeaking"]
	286	[6205]	CALL     	R20 2 2 ; R20 := R20(R21)
	287	[6205]	TEST     	R20 1 ; if R20 then PC := 293
	288	[6205]	JMP      	293 ; PC := 293
	289	[6207]	SELF     	R20 R4 K59 ; R21 := R4; R20 := R4[0x50b8a050]
	290	[6207]	GETGLOBAL	R22 K9 ; R22 := _T
	291	[6207]	GETTABLE 	R22 R22 K58 ; R22 := R22["TennoSpeaking"]
	292	[6207]	CALL     	R20 3 1 ; R20(R21,R22)
	293	[6209]	RETURN   	R0 1 ; return 

function #301 <?:6211,6217> (34 instructions, 136 bytes at 0000025274F2BB20)
1 param, 5 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[6212]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xed4e0128]
	2	[6212]	CALL     	R1 2 2 ; R1 := R1(R2)
	3	[6213]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	4	[6213]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	5	[6213]	MOVE     	R3 R1 ; R3 := R1
	6	[6213]	LOADK    	R4 K3 ; R4 := "Deluxe"
	7	[6213]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[6213]	EQ       	0 R2 K4 ; if R2 ~= nil then PC := 24
	9	[6213]	JMP      	24 ; PC := 24
	10	[6214]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	11	[6214]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	12	[6214]	MOVE     	R3 R1 ; R3 := R1
	13	[6214]	LOADK    	R4 K5 ; R4 := "ExcaliburProtoSuit"
	14	[6214]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	15	[6214]	EQ       	0 R2 K4 ; if R2 ~= nil then PC := 24
	16	[6214]	JMP      	24 ; PC := 24
	17	[6215]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	18	[6215]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	19	[6215]	MOVE     	R3 R1 ; R3 := R1
	20	[6215]	LOADK    	R4 K6 ; R4 := "NyxNemesisSuit"
	21	[6215]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	22	[6215]	EQ       	1 R2 K4 ; if R2 == nil then PC := 31
	23	[6215]	JMP      	31 ; PC := 31
	24	[6216]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	25	[6216]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	26	[6216]	MOVE     	R3 R1 ; R3 := R1
	27	[6216]	LOADK    	R4 K7 ; R4 := "Operator"
	28	[6216]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	29	[6216]	EQ       	1 R2 K4 ; if R2 == nil then PC := 32
	30	[6216]	JMP      	32 ; PC := 32
	31	[6216]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 32
	32	[6216]	OP_LOADBOOL	R2 1 0 ; R2 := true
	33	[6216]	RETURN   	R2 2 ; return R2 
	34	[6217]	RETURN   	R0 1 ; return 

function #302 <?:6219,6242> (95 instructions, 380 bytes at 0000025274F2BE70)
10 params, 23 slots, 1 upvalue, 0 locals, 23 constants, 0 functions
	1	[6220]	SELF     	R10 R0 K0 ; R11 := R0; R10 := R0[0x5f56eeab]
	2	[6220]	MOVE     	R12 R2 ; R12 := R2
	3	[6220]	LOADK    	R13 := 29.000000
	4	[6220]	MOVE     	R14 R1 ; R14 := R1
	5	[6220]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	6	[6221]	SELF     	R10 R0 K0 ; R11 := R0; R10 := R0[0x5f56eeab]
	7	[6221]	MOVE     	R12 R3 ; R12 := R3
	8	[6221]	LOADK    	R13 := 29.000000
	9	[6221]	MOVE     	R14 R1 ; R14 := R1
	10	[6221]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	11	[6222]	GETGLOBAL	R10 K1 ; R10 := 0x38f10e85
	12	[6222]	MOVE     	R11 R0 ; R11 := R0
	13	[6222]	MOVE     	R12 R2 ; R12 := R2
	14	[6222]	LOADK    	R13 K2 ; R13 := ".setVertexColors"
	15	[6222]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	16	[6222]	MOVE     	R13 R4 ; R13 := R4
	17	[6222]	MOVE     	R14 R4 ; R14 := R4
	18	[6222]	MOVE     	R15 R6 ; R15 := R6
	19	[6222]	MOVE     	R16 R6 ; R16 := R6
	20	[6222]	CALL     	R10 7 1 ; R10(R11,R12,R13,R14,R15,R16)
	21	[6224]	GETUPVAL 	R10 U0 ; R10 := U0
	22	[6224]	GETTABLE 	R10 R10 K3 ; R10 := R10[0xb5be5d4a]
	23	[6224]	MOVE     	R11 R0 ; R11 := R0
	24	[6224]	MOVE     	R12 R3 ; R12 := R3
	25	[6224]	CALL     	R10 3 3 ; R10,R11 := R10(R11,R12)
	26	[6226]	SELF     	R12 R0 K4 ; R13 := R0; R12 := R0[0x91a24e4b]
	27	[6226]	MOVE     	R14 R3 ; R14 := R3
	28	[6226]	LOADK    	R15 := 13.000000
	29	[6226]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	30	[6226]	DIV      	R12 R12 K5 ; R12 := R12 / 2.000000
	31	[6226]	ADD      	R12 R11 R12 ; R12 := R11 + R12
	32	[6228]	GETUPVAL 	R13 U0 ; R13 := U0
	33	[6228]	GETTABLE 	R13 R13 K6 ; R13 := R13[0x6d7e6810]
	34	[6228]	MOVE     	R14 R0 ; R14 := R0
	35	[6228]	NEWTABLE 	R15 0 2 ; R15 := {}
	36	[6228]	SETTABLE 	R15 K7 K8 ; R15["x"] := 0.000000
	37	[6228]	ADD      	R16 R12 R7 ; R16 := R12 + R7
	38	[6228]	SETTABLE 	R15 K9 R16 ; R15["y"] := R16
	39	[6228]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	40	[6228]	GETTABLE 	R12 R13 K9 ; R12 := R13["y"]
	41	[6229]	SELF     	R13 R0 K10 ; R14 := R0; R13 := R0[0x6b837788]
	42	[6229]	CALL     	R13 2 2 ; R13 := R13(R14)
	43	[6230]	SELF     	R14 R0 K11 ; R15 := R0; R14 := R0[0xaf9fda9f]
	44	[6230]	CALL     	R14 2 2 ; R14 := R14(R15)
	45	[6231]	SELF     	R15 R0 K12 ; R16 := R0; R15 := R0[0x091c120e]
	46	[6231]	CALL     	R15 2 2 ; R15 := R15(R16)
	47	[6231]	LT       	1 R13 R15 ; if R13 < R15 then PC := 53
	48	[6231]	JMP      	53 ; PC := 53
	49	[6231]	SELF     	R15 R0 K13 ; R16 := R0; R15 := R0[0x2cc9d281]
	50	[6231]	CALL     	R15 2 2 ; R15 := R15(R16)
	51	[6231]	LT       	0 R14 R15 ; if R14 >= R15 then PC := 64
	52	[6231]	JMP      	64 ; PC := 64
	53	[6231]	GETGLOBAL	R15 K14 ; R15 := 0x34291f5c
	54	[6231]	GETTABLE 	R15 R15 K15 ; R15 := R15[0x056bfe8b]
	55	[6231]	CALL     	R15 1 2 ; R15 := R15()
	56	[6231]	TEST     	R15 1 ; if R15 then PC := 64
	57	[6231]	JMP      	64 ; PC := 64
	58	[6232]	SELF     	R15 R0 K12 ; R16 := R0; R15 := R0[0x091c120e]
	59	[6232]	CALL     	R15 2 2 ; R15 := R15(R16)
	60	[6232]	MOVE     	R13 R15 ; R13 := R15
	61	[6233]	SELF     	R15 R0 K13 ; R16 := R0; R15 := R0[0x2cc9d281]
	62	[6233]	CALL     	R15 2 2 ; R15 := R15(R16)
	63	[6233]	MOVE     	R14 R15 ; R14 := R15
	64	[6235]	DIV      	R8 R8 R14 ; R8 := R8 / R14
	65	[6236]	DIV      	R9 R9 R14 ; R9 := R9 / R14
	66	[6238]	SELF     	R15 R0 K16 ; R16 := R0; R15 := R0[0xd5181643]
	67	[6238]	MOVE     	R17 R3 ; R17 := R3
	68	[6238]	GETGLOBAL	R18 K17 ; R18 := 0x0032441c
	69	[6238]	GETTABLE 	R18 R18 K18 ; R18 := R18["UIMaterial_VerticalVisibilityRangeText"]
	70	[6238]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	71	[6239]	SELF     	R15 R0 K19 ; R16 := R0; R15 := R0[0x91e13703]
	72	[6239]	MOVE     	R17 R3 ; R17 := R3
	73	[6239]	LOADK    	R18 K20 ; R18 := "VisibilityCenter"
	74	[6239]	MOVE     	R19 R12 ; R19 := R12
	75	[6239]	LOADK    	R20 := 0.000000
	76	[6239]	LOADK    	R21 := 0.000000
	77	[6239]	LOADK    	R22 := 0.000000
	78	[6239]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	79	[6240]	SELF     	R15 R0 K19 ; R16 := R0; R15 := R0[0x91e13703]
	80	[6240]	MOVE     	R17 R3 ; R17 := R3
	81	[6240]	LOADK    	R18 K21 ; R18 := "VisibilitySize"
	82	[6240]	MOVE     	R19 R8 ; R19 := R8
	83	[6240]	LOADK    	R20 := 0.000000
	84	[6240]	LOADK    	R21 := 0.000000
	85	[6240]	LOADK    	R22 := 0.000000
	86	[6240]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	87	[6241]	SELF     	R15 R0 K19 ; R16 := R0; R15 := R0[0x91e13703]
	88	[6241]	MOVE     	R17 R3 ; R17 := R3
	89	[6241]	LOADK    	R18 K22 ; R18 := "VisibilityFadeSize"
	90	[6241]	MOVE     	R19 R9 ; R19 := R9
	91	[6241]	LOADK    	R20 := 0.000000
	92	[6241]	LOADK    	R21 := 0.000000
	93	[6241]	LOADK    	R22 := 0.000000
	94	[6241]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	95	[6242]	RETURN   	R0 1 ; return 

function #303 <?:6244,6273> (97 instructions, 388 bytes at 0000025274F2C4F0)
2 params, 17 slots, 0 upvalues, 0 locals, 19 constants, 0 functions
	1	[6245]	GETGLOBAL	R2 K0 ; R2 := 0x60130201
	2	[6245]	LOADK    	R3 := 232.000000
	3	[6245]	LOADK    	R4 := 145.000000
	4	[6245]	LOADK    	R5 := 58.000000
	5	[6245]	LOADK    	R6 := 255.000000
	6	[6245]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	7	[6246]	EQ       	0 R1 K1 ; if R1 ~= 2.000000 then PC := 16
	8	[6246]	JMP      	16 ; PC := 16
	9	[6247]	GETGLOBAL	R3 K0 ; R3 := 0x60130201
	10	[6247]	LOADK    	R4 := 62.000000
	11	[6247]	LOADK    	R5 := 196.000000
	12	[6247]	LOADK    	R6 := 221.000000
	13	[6247]	LOADK    	R7 := 255.000000
	14	[6247]	CALL     	R3 5 2 ; R3 := R3(R4,R5,R6,R7)
	15	[6247]	MOVE     	R2 R3 ; R2 := R3
	16	[6250]	SELF     	R3 R0 K2 ; R4 := R0; R3 := R0[0xde321e6f]
	17	[6250]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[6251]	NEWTABLE 	R4 0 0 ; R4 := {}
	19	[6252]	GETGLOBAL	R5 K3 ; R5 := 0x33bdd652
	20	[6252]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x23d5322f]
	21	[6252]	MOVE     	R6 R4 ; R6 := R4
	22	[6252]	SELF     	R7 R3 K5 ; R8 := R3; R7 := R3[0xe85a2361]
	23	[6252]	LOADK    	R9 := 1.000000
	24	[6252]	CALL     	R7 3 0 ; R7,... := R7(R8,R9)
	25	[6252]	CALL     	R5 0 1 ; R5(R6,...)
	26	[6253]	GETGLOBAL	R5 K3 ; R5 := 0x33bdd652
	27	[6253]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x23d5322f]
	28	[6253]	MOVE     	R6 R4 ; R6 := R4
	29	[6253]	SELF     	R7 R3 K5 ; R8 := R3; R7 := R3[0xe85a2361]
	30	[6253]	LOADK    	R9 := 0.000000
	31	[6253]	CALL     	R7 3 0 ; R7,... := R7(R8,R9)
	32	[6253]	CALL     	R5 0 1 ; R5(R6,...)
	33	[6254]	GETGLOBAL	R5 K3 ; R5 := 0x33bdd652
	34	[6254]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x23d5322f]
	35	[6254]	MOVE     	R6 R4 ; R6 := R4
	36	[6254]	SELF     	R7 R3 K5 ; R8 := R3; R7 := R3[0xe85a2361]
	37	[6254]	LOADK    	R9 := 5.000000
	38	[6254]	CALL     	R7 3 0 ; R7,... := R7(R8,R9)
	39	[6254]	CALL     	R5 0 1 ; R5(R6,...)
	40	[6255]	GETGLOBAL	R5 K3 ; R5 := 0x33bdd652
	41	[6255]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x23d5322f]
	42	[6255]	MOVE     	R6 R4 ; R6 := R4
	43	[6255]	SELF     	R7 R3 K7 ; R8 := R3; R7 := R3[0xf7d48ee0]
	44	[6255]	CALL     	R7 2 0 ; R7,... := R7(R8)
	45	[6255]	CALL     	R5 0 1 ; R5(R6,...)
	46	[6257]	GETGLOBAL	R5 K8 ; R5 := 0xc8802016
	47	[6257]	MOVE     	R6 R4 ; R6 := R4
	48	[6257]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	49	[6257]	JMP      	95 ; PC := 95
	50	[6258]	GETGLOBAL	R10 K9 ; R10 := 0x7b998233
	51	[6258]	MOVE     	R11 R9 ; R11 := R9
	52	[6258]	CALL     	R10 2 2 ; R10 := R10(R11)
	53	[6258]	TEST     	R10 1 ; if R10 then PC := 95
	54	[6258]	JMP      	95 ; PC := 95
	55	[6259]	SELF     	R10 R9 K10 ; R11 := R9; R10 := R9[0x68d708a7]
	56	[6259]	CALL     	R10 2 2 ; R10 := R10(R11)
	57	[6260]	SELF     	R11 R10 K11 ; R12 := R10; R11 := R10[0x8e62760a]
	58	[6260]	LOADK    	R13 := 0.000000
	59	[6260]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	60	[6261]	SELF     	R12 R11 K13 ; R13 := R11; R12 := R11[0xa3927fe9]
	61	[6261]	LOADK    	R14 := 6.000000
	62	[6261]	MOVE     	R15 R2 ; R15 := R2
	63	[6261]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	64	[6262]	SELF     	R12 R11 K14 ; R13 := R11; R12 := R11[0xfc5d7158]
	65	[6262]	LOADK    	R14 := 6.000000
	66	[6262]	OP_LOADBOOL	R15 1 0 ; R15 := true
	67	[6262]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	68	[6263]	SELF     	R12 R10 K15 ; R13 := R10; R12 := R10[0x199edf6e]
	69	[6263]	LOADK    	R14 := 0.000000
	70	[6263]	MOVE     	R15 R11 ; R15 := R11
	71	[6263]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	72	[6264]	SELF     	R12 R9 K16 ; R13 := R9; R12 := R9[0xf2deaf69]
	73	[6264]	GETGLOBAL	R14 K17 ; R14 := gPowerSuitType
	74	[6264]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	75	[6264]	TEST     	R12 0 ; if not R12 then PC := 92
	76	[6264]	JMP      	92 ; PC := 92
	77	[6265]	SELF     	R12 R10 K11 ; R13 := R10; R12 := R10[0x8e62760a]
	78	[6265]	LOADK    	R14 := 1.000000
	79	[6265]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	80	[6266]	SELF     	R13 R12 K13 ; R14 := R12; R13 := R12[0xa3927fe9]
	81	[6266]	LOADK    	R15 := 6.000000
	82	[6266]	MOVE     	R16 R2 ; R16 := R2
	83	[6266]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	84	[6267]	SELF     	R13 R12 K14 ; R14 := R12; R13 := R12[0xfc5d7158]
	85	[6267]	LOADK    	R15 := 6.000000
	86	[6267]	OP_LOADBOOL	R16 1 0 ; R16 := true
	87	[6267]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	88	[6268]	SELF     	R13 R10 K15 ; R14 := R10; R13 := R10[0x199edf6e]
	89	[6268]	LOADK    	R15 := 1.000000
	90	[6268]	MOVE     	R16 R12 ; R16 := R12
	91	[6268]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	92	[6270]	SELF     	R13 R9 K18 ; R14 := R9; R13 := R9[0xaa041663]
	93	[6270]	MOVE     	R15 R10 ; R15 := R10
	94	[6270]	CALL     	R13 3 1 ; R13(R14,R15)
	95	[6257]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 50; R7 := R8 end
	96	[6271]	JMP      	50 ; PC := 50
	97	[6273]	RETURN   	R0 1 ; return 

function #304 <?:6275,6277> (4 instructions, 16 bytes at 0000025274F2CA00)
0 params, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[6276]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[6276]	NEWTABLE 	R1 0 0 ; R1 := {}
	3	[6276]	SETTABLE 	R0 K1 R1 ; R0["QueuedTransmissions"] := R1
	4	[6277]	RETURN   	R0 1 ; return 

function #305 <?:6279,6292> (39 instructions, 156 bytes at 0000025274F2CB00)
1 param, 3 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[6280]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6280]	MOVE     	R2 R0 ; R2 := R0
	3	[6280]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6280]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6280]	JMP      	8 ; PC := 8
	6	[6281]	LOADNIL  	R1 R1 ; R1 := nil
	7	[6281]	RETURN   	R1 2 ; return R1 
	8	[6284]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	9	[6284]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x49d4c6fc]
	10	[6284]	CALL     	R1 1 2 ; R1 := R1()
	11	[6284]	TEST     	R1 0 ; if not R1 then PC := 24
	12	[6284]	JMP      	24 ; PC := 24
	13	[6284]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0x0f5a34d1]
	14	[6284]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[6284]	TEST     	R1 0 ; if not R1 then PC := 24
	16	[6284]	JMP      	24 ; PC := 24
	17	[6284]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0x1760dc5a]
	18	[6284]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[6284]	EQ       	1 R1 K5 ; if R1 == "" then PC := 24
	20	[6284]	JMP      	24 ; PC := 24
	21	[6285]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0x1760dc5a]
	22	[6285]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	23	[6285]	RETURN   	R1 0 ; return R1,... 
	24	[6288]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	25	[6288]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x9e503547]
	26	[6288]	CALL     	R1 1 2 ; R1 := R1()
	27	[6288]	TEST     	R1 0 ; if not R1 then PC := 36
	28	[6288]	JMP      	36 ; PC := 36
	29	[6288]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0xc87566df]
	30	[6288]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[6288]	EQ       	1 R1 K5 ; if R1 == "" then PC := 36
	32	[6288]	JMP      	36 ; PC := 36
	33	[6289]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0xc87566df]
	34	[6289]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	35	[6289]	RETURN   	R1 0 ; return R1,... 
	36	[6291]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x19865272]
	37	[6291]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	38	[6291]	RETURN   	R1 0 ; return R1,... 
	39	[6292]	RETURN   	R0 1 ; return 

function #306 <?:6295,6297> (5 instructions, 20 bytes at 0000025274F2CD90)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6296]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6296]	MOVE     	R2 R0 ; R2 := R0
	3	[6296]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6296]	RETURN   	R1 2 ; return R1 
	5	[6297]	RETURN   	R0 1 ; return 

function #307 <?:6299,6315> (24 instructions, 96 bytes at 0000025274F2CE80)
1 param, 3 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[6300]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6300]	MOVE     	R2 R0 ; R2 := R0
	3	[6300]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6300]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6300]	JMP      	8 ; PC := 8
	6	[6301]	LOADNIL  	R1 R1 ; R1 := nil
	7	[6301]	RETURN   	R1 2 ; return R1 
	8	[6304]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[6304]	MOVE     	R2 R0 ; R2 := R0
	10	[6304]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[6304]	EQ       	0 R1 K1 ; if R1 ~= "" then PC := 15
	12	[6304]	JMP      	15 ; PC := 15
	13	[6305]	LOADNIL  	R1 R1 ; R1 := nil
	14	[6305]	RETURN   	R1 2 ; return R1 
	15	[6309]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	16	[6309]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xe6b41adb]
	17	[6309]	CALL     	R1 1 2 ; R1 := R1()
	18	[6309]	TEST     	R1 0 ; if not R1 then PC := 22
	19	[6309]	JMP      	22 ; PC := 22
	20	[6310]	LOADK    	R1 K4 ; R1 := "EXTERNAL"
	21	[6310]	RETURN   	R1 2 ; return R1 
	22	[6314]	LOADK    	R1 K5 ; R1 := "UNAVAILABLE"
	23	[6314]	RETURN   	R1 2 ; return R1 
	24	[6315]	RETURN   	R0 1 ; return 

function #308 <?:6317,6319> (5 instructions, 20 bytes at 0000025274F2D0E0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6318]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6318]	MOVE     	R2 R0 ; R2 := R0
	3	[6318]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6318]	RETURN   	R1 2 ; return R1 
	5	[6319]	RETURN   	R0 1 ; return 

function #309 <?:6321,6357> (92 instructions, 368 bytes at 0000025274F2D1D0)
1 param, 4 slots, 0 upvalues, 0 locals, 18 constants, 0 functions
	1	[6322]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6322]	MOVE     	R2 R0 ; R2 := R0
	3	[6322]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6322]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6322]	JMP      	8 ; PC := 8
	6	[6323]	LOADNIL  	R1 R1 ; R1 := nil
	7	[6323]	RETURN   	R1 2 ; return R1 
	8	[6326]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x0f5a34d1]
	9	[6326]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[6326]	TEST     	R1 0 ; if not R1 then PC := 39
	11	[6326]	JMP      	39 ; PC := 39
	12	[6327]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	13	[6327]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x49d4c6fc]
	14	[6327]	CALL     	R1 1 2 ; R1 := R1()
	15	[6327]	TEST     	R1 0 ; if not R1 then PC := 30
	16	[6327]	JMP      	30 ; PC := 30
	17	[6327]	GETGLOBAL	R1 K4 ; R1 := 0x76ea806b
	18	[6327]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x3f3ae64c]
	19	[6327]	LOADK    	R3 := 0.000000
	20	[6327]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	21	[6327]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xfe6131c3]
	22	[6327]	LOADK    	R3 K7 ; R3 := "steam_market"
	23	[6327]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	24	[6327]	TEST     	R1 1 ; if R1 then PC := 30
	25	[6327]	JMP      	30 ; PC := 30
	26	[6327]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x1760dc5a]
	27	[6327]	CALL     	R1 2 2 ; R1 := R1(R2)
	28	[6327]	EQ       	0 R1 K9 ; if R1 ~= "" then PC := 39
	29	[6327]	JMP      	39 ; PC := 39
	30	[6328]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	31	[6328]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x49d4c6fc]
	32	[6328]	CALL     	R1 1 2 ; R1 := R1()
	33	[6328]	TEST     	R1 1 ; if R1 then PC := 41
	34	[6328]	JMP      	41 ; PC := 41
	35	[6328]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x1760dc5a]
	36	[6328]	CALL     	R1 2 2 ; R1 := R1(R2)
	37	[6328]	EQ       	1 R1 K9 ; if R1 == "" then PC := 41
	38	[6328]	JMP      	41 ; PC := 41
	39	[6330]	LOADNIL  	R1 R1 ; R1 := nil
	40	[6330]	RETURN   	R1 2 ; return R1 
	41	[6333]	SELF     	R1 R0 K10 ; R2 := R0; R1 := R0[0x9dbbea0a]
	42	[6333]	CALL     	R1 2 2 ; R1 := R1(R2)
	43	[6333]	TEST     	R1 0 ; if not R1 then PC := 67
	44	[6333]	JMP      	67 ; PC := 67
	45	[6336]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	46	[6336]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x056bfe8b]
	47	[6336]	CALL     	R1 1 2 ; R1 := R1()
	48	[6336]	TEST     	R1 0 ; if not R1 then PC := 56
	49	[6336]	JMP      	56 ; PC := 56
	50	[6336]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x1760dc5a]
	51	[6336]	CALL     	R1 2 2 ; R1 := R1(R2)
	52	[6336]	EQ       	0 R1 K9 ; if R1 ~= "" then PC := 56
	53	[6336]	JMP      	56 ; PC := 56
	54	[6337]	LOADK    	R1 K12 ; R1 := "MARKET"
	55	[6337]	RETURN   	R1 2 ; return R1 
	56	[6339]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	57	[6339]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x056bfe8b]
	58	[6339]	CALL     	R1 1 2 ; R1 := R1()
	59	[6339]	TEST     	R1 0 ; if not R1 then PC := 67
	60	[6339]	JMP      	67 ; PC := 67
	61	[6339]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x1760dc5a]
	62	[6339]	CALL     	R1 2 2 ; R1 := R1(R2)
	63	[6339]	EQ       	1 R1 K9 ; if R1 == "" then PC := 67
	64	[6339]	JMP      	67 ; PC := 67
	65	[6340]	LOADK    	R1 K13 ; R1 := "UNAVAILABLE"
	66	[6340]	RETURN   	R1 2 ; return R1 
	67	[6344]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	68	[6344]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x49d4c6fc]
	69	[6344]	CALL     	R1 1 2 ; R1 := R1()
	70	[6344]	TEST     	R1 0 ; if not R1 then PC := 74
	71	[6344]	JMP      	74 ; PC := 74
	72	[6346]	LOADK    	R1 K14 ; R1 := "EXTERNAL"
	73	[6346]	RETURN   	R1 2 ; return R1 
	74	[6349]	SELF     	R1 R0 K15 ; R2 := R0; R1 := R0[0x2ce719d4]
	75	[6349]	CALL     	R1 2 2 ; R1 := R1(R2)
	76	[6349]	LT       	0 K16 R1 ; if 0.000000 >= R1 then PC := 90
	77	[6349]	JMP      	90 ; PC := 90
	78	[6349]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	79	[6349]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x056bfe8b]
	80	[6349]	CALL     	R1 1 2 ; R1 := R1()
	81	[6349]	TEST     	R1 1 ; if R1 then PC := 88
	82	[6349]	JMP      	88 ; PC := 88
	83	[6349]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	84	[6349]	GETTABLE 	R1 R1 K17 ; R1 := R1[0xa7a2e381]
	85	[6349]	CALL     	R1 1 2 ; R1 := R1()
	86	[6349]	TEST     	R1 0 ; if not R1 then PC := 90
	87	[6349]	JMP      	90 ; PC := 90
	88	[6352]	LOADK    	R1 K12 ; R1 := "MARKET"
	89	[6352]	RETURN   	R1 2 ; return R1 
	90	[6356]	LOADK    	R1 K13 ; R1 := "UNAVAILABLE"
	91	[6356]	RETURN   	R1 2 ; return R1 
	92	[6357]	RETURN   	R0 1 ; return 

function #310 <?:6360,6362> (5 instructions, 20 bytes at 0000025274F2D6C0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6361]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6361]	MOVE     	R2 R0 ; R2 := R0
	3	[6361]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6361]	RETURN   	R1 2 ; return R1 
	5	[6362]	RETURN   	R0 1 ; return 

function #311 <?:6364,6380> (23 instructions, 92 bytes at 0000025274F2D7B0)
1 param, 3 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[6365]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6365]	MOVE     	R2 R0 ; R2 := R0
	3	[6365]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6365]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6365]	JMP      	8 ; PC := 8
	6	[6366]	LOADNIL  	R1 R1 ; R1 := nil
	7	[6366]	RETURN   	R1 2 ; return R1 
	8	[6369]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xdaefcda4]
	9	[6369]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[6369]	EQ       	0 R1 K3 ; if R1 ~= 0.000000 then PC := 14
	11	[6369]	JMP      	14 ; PC := 14
	12	[6370]	LOADNIL  	R1 R1 ; R1 := nil
	13	[6370]	RETURN   	R1 2 ; return R1 
	14	[6373]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	15	[6373]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x9e503547]
	16	[6373]	CALL     	R1 1 2 ; R1 := R1()
	17	[6373]	TEST     	R1 0 ; if not R1 then PC := 21
	18	[6373]	JMP      	21 ; PC := 21
	19	[6375]	LOADK    	R1 K5 ; R1 := "EXTERNAL"
	20	[6375]	RETURN   	R1 2 ; return R1 
	21	[6379]	LOADK    	R1 K6 ; R1 := "UNAVAILABLE"
	22	[6379]	RETURN   	R1 2 ; return R1 
	23	[6380]	RETURN   	R0 1 ; return 

function #312 <?:6382,6384> (5 instructions, 20 bytes at 0000025274F2D9A0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6383]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6383]	MOVE     	R2 R0 ; R2 := R0
	3	[6383]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6383]	RETURN   	R1 2 ; return R1 
	5	[6384]	RETURN   	R0 1 ; return 

function #313 <?:6386,6397> (36 instructions, 144 bytes at 0000025274F2DA90)
1 param, 4 slots, 4 upvalues, 0 locals, 5 constants, 0 functions
	1	[6387]	LOADK    	R1 K0 ; R1 := ""
	2	[6388]	GETGLOBAL	R2 K1 ; R2 := 0x34291f5c
	3	[6388]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xbcd06415]
	4	[6388]	CALL     	R2 1 2 ; R2 := R2()
	5	[6388]	TEST     	R2 0 ; if not R2 then PC := 12
	6	[6388]	JMP      	12 ; PC := 12
	7	[6389]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[6389]	MOVE     	R3 R0 ; R3 := R0
	9	[6389]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[6389]	MOVE     	R1 R2 ; R1 := R2
	11	[6389]	JMP      	26 ; PC := 26
	12	[6390]	GETGLOBAL	R2 K1 ; R2 := 0x34291f5c
	13	[6390]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xe6b41adb]
	14	[6390]	CALL     	R2 1 2 ; R2 := R2()
	15	[6390]	TEST     	R2 0 ; if not R2 then PC := 22
	16	[6390]	JMP      	22 ; PC := 22
	17	[6391]	GETUPVAL 	R2 U1 ; R2 := U1
	18	[6391]	MOVE     	R3 R0 ; R3 := R0
	19	[6391]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[6391]	MOVE     	R1 R2 ; R1 := R2
	21	[6391]	JMP      	26 ; PC := 26
	22	[6393]	GETUPVAL 	R2 U2 ; R2 := U2
	23	[6393]	MOVE     	R3 R0 ; R3 := R0
	24	[6393]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[6393]	MOVE     	R1 R2 ; R1 := R2
	26	[6396]	EQ       	0 R1 K4 ; if R1 ~= "EXTERNAL" then PC := 33
	27	[6396]	JMP      	33 ; PC := 33
	28	[6396]	GETUPVAL 	R2 U3 ; R2 := U3
	29	[6396]	MOVE     	R3 R0 ; R3 := R0
	30	[6396]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[6396]	EQ       	0 R2 K0 ; if R2 ~= "" then PC := 34
	32	[6396]	JMP      	34 ; PC := 34
	33	[6396]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 34
	34	[6396]	OP_LOADBOOL	R2 1 0 ; R2 := true
	35	[6396]	RETURN   	R2 2 ; return R2 
	36	[6397]	RETURN   	R0 1 ; return 

function #314 <?:6399,6401> (5 instructions, 20 bytes at 0000025274F2DCC0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6400]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6400]	MOVE     	R2 R0 ; R2 := R0
	3	[6400]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6400]	RETURN   	R1 2 ; return R1 
	5	[6401]	RETURN   	R0 1 ; return 

function #315 <?:6403,6424> (65 instructions, 260 bytes at 0000025274F2DDB0)
1 param, 8 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[6404]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[6405]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	3	[6405]	GETGLOBAL	R3 K1 ; R3 := 0x76ea806b
	4	[6405]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[6405]	TEST     	R2 1 ; if R2 then PC := 64
	6	[6405]	JMP      	64 ; PC := 64
	7	[6406]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	8	[6406]	MOVE     	R3 R0 ; R3 := R0
	9	[6406]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[6406]	TEST     	R2 1 ; if R2 then PC := 64
	11	[6406]	JMP      	64 ; PC := 64
	12	[6406]	SELF     	R2 R0 K2 ; R3 := R0; R2 := R0[0x331940f7]
	13	[6406]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[6406]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x56c01834]
	15	[6406]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[6406]	TEST     	R2 0 ; if not R2 then PC := 64
	17	[6406]	JMP      	64 ; PC := 64
	18	[6407]	SELF     	R2 R0 K2 ; R3 := R0; R2 := R0[0x331940f7]
	19	[6407]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[6407]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x6d604ba7]
	21	[6407]	CALL     	R2 2 2 ; R2 := R2(R3)
	22	[6408]	GETGLOBAL	R3 K5 ; R3 := 0x7f5022cf
	23	[6408]	GETTABLE 	R3 R3 K6 ; R3 := R3[0xa5c556b9]
	24	[6408]	MOVE     	R4 R2 ; R4 := R2
	25	[6408]	LOADK    	R5 K7 ; R5 := "twitch.amazon.com"
	26	[6408]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	27	[6408]	EQ       	0 R3 K8 ; if R3 ~= nil then PC := 36
	28	[6408]	JMP      	36 ; PC := 36
	29	[6408]	GETGLOBAL	R3 K5 ; R3 := 0x7f5022cf
	30	[6408]	GETTABLE 	R3 R3 K6 ; R3 := R3[0xa5c556b9]
	31	[6408]	MOVE     	R4 R2 ; R4 := R2
	32	[6408]	LOADK    	R5 K9 ; R5 := "gaming.amazon.com"
	33	[6408]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	34	[6408]	EQ       	1 R3 K8 ; if R3 == nil then PC := 64
	35	[6408]	JMP      	64 ; PC := 64
	36	[6409]	SELF     	R3 R0 K10 ; R4 := R0; R3 := R0[0xed4e0128]
	37	[6409]	CALL     	R3 2 2 ; R3 := R3(R4)
	38	[6410]	GETGLOBAL	R4 K1 ; R4 := 0x76ea806b
	39	[6410]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0xe03daba5]
	40	[6410]	CALL     	R4 2 2 ; R4 := R4(R5)
	41	[6411]	EQ       	1 R4 K12 ; if R4 == "RU" then PC := 47
	42	[6411]	JMP      	47 ; PC := 47
	43	[6411]	EQ       	1 R4 K13 ; if R4 == "CN" then PC := 47
	44	[6411]	JMP      	47 ; PC := 47
	45	[6411]	EQ       	0 R4 K14 ; if R4 ~= "KR" then PC := 56
	46	[6411]	JMP      	56 ; PC := 56
	47	[6412]	GETGLOBAL	R5 K5 ; R5 := 0x7f5022cf
	48	[6412]	GETTABLE 	R5 R5 K6 ; R5 := R5[0xa5c556b9]
	49	[6412]	MOVE     	R6 R3 ; R6 := R3
	50	[6412]	LOADK    	R7 K15 ; R7 := "NoLogo"
	51	[6412]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	52	[6412]	TEST     	R5 0 ; if not R5 then PC := 64
	53	[6412]	JMP      	64 ; PC := 64
	54	[6413]	OP_LOADBOOL	R1 1 0 ; R1 := true
	55	[6414]	JMP      	64 ; PC := 64
	56	[6416]	GETGLOBAL	R5 K5 ; R5 := 0x7f5022cf
	57	[6416]	GETTABLE 	R5 R5 K6 ; R5 := R5[0xa5c556b9]
	58	[6416]	MOVE     	R6 R3 ; R6 := R3
	59	[6416]	LOADK    	R7 K15 ; R7 := "NoLogo"
	60	[6416]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	61	[6416]	TEST     	R5 1 ; if R5 then PC := 64
	62	[6416]	JMP      	64 ; PC := 64
	63	[6417]	OP_LOADBOOL	R1 1 0 ; R1 := true
	64	[6423]	RETURN   	R1 2 ; return R1 
	65	[6424]	RETURN   	R0 1 ; return 

function #316 <?:6426,6428> (5 instructions, 20 bytes at 0000025274F2E2D0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6427]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6427]	MOVE     	R2 R0 ; R2 := R0
	3	[6427]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6427]	RETURN   	R1 2 ; return R1 
	5	[6428]	RETURN   	R0 1 ; return 

function #317 <?:6431,6451> (72 instructions, 288 bytes at 0000025274F2E3C0)
2 params, 8 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[6432]	OP_LOADBOOL	R2 1 0 ; R2 := true
	2	[6433]	SELF     	R3 R0 K0 ; R4 := R0; R3 := R0[0xe0cffb75]
	3	[6433]	GETUPVAL 	R5 U0 ; R5 := U0
	4	[6433]	MOVE     	R6 R1 ; R6 := R1
	5	[6433]	CALL     	R5 2 0 ; R5,... := R5(R6)
	6	[6433]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	7	[6434]	SELF     	R4 R1 K1 ; R5 := R1; R4 := R1[0xdaefcda4]
	8	[6434]	CALL     	R4 2 2 ; R4 := R4(R5)
	9	[6434]	LT       	1 K3 R4 ; if 0.000000 < R4 then PC := 12
	10	[6434]	JMP      	12 ; PC := 12
	11	[6434]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 12
	12	[6434]	OP_LOADBOOL	R4 1 0 ; R4 := true
	13	[6436]	GETUPVAL 	R5 U1 ; R5 := U1
	14	[6436]	MOVE     	R6 R1 ; R6 := R1
	15	[6436]	CALL     	R5 2 2 ; R5 := R5(R6)
	16	[6436]	TEST     	R5 1 ; if R5 then PC := 71
	17	[6436]	JMP      	71 ; PC := 71
	18	[6437]	TEST     	R3 0 ; if not R3 then PC := 58
	19	[6437]	JMP      	58 ; PC := 58
	20	[6438]	SELF     	R5 R1 K1 ; R6 := R1; R5 := R1[0xdaefcda4]
	21	[6438]	CALL     	R5 2 2 ; R5 := R5(R6)
	22	[6438]	EQ       	0 R5 K4 ; if R5 ~= 2.000000 then PC := 29
	23	[6438]	JMP      	29 ; PC := 29
	24	[6438]	GETGLOBAL	R5 K2 ; R5 := 0x34291f5c
	25	[6438]	GETTABLE 	R5 R5 K5 ; R5 := R5[0xbcd06415]
	26	[6438]	CALL     	R5 1 2 ; R5 := R5()
	27	[6438]	TEST     	R5 0 ; if not R5 then PC := 56
	28	[6438]	JMP      	56 ; PC := 56
	29	[6439]	SELF     	R5 R1 K1 ; R6 := R1; R5 := R1[0xdaefcda4]
	30	[6439]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[6439]	EQ       	1 R5 K4 ; if R5 == 2.000000 then PC := 38
	32	[6439]	JMP      	38 ; PC := 38
	33	[6439]	GETGLOBAL	R5 K2 ; R5 := 0x34291f5c
	34	[6439]	GETTABLE 	R5 R5 K5 ; R5 := R5[0xbcd06415]
	35	[6439]	CALL     	R5 1 2 ; R5 := R5()
	36	[6439]	TEST     	R5 1 ; if R5 then PC := 56
	37	[6439]	JMP      	56 ; PC := 56
	38	[6440]	GETGLOBAL	R5 K2 ; R5 := 0x34291f5c
	39	[6440]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x49d4c6fc]
	40	[6440]	CALL     	R5 1 2 ; R5 := R5()
	41	[6440]	TEST     	R5 0 ; if not R5 then PC := 71
	42	[6440]	JMP      	71 ; PC := 71
	43	[6440]	SELF     	R5 R1 K7 ; R6 := R1; R5 := R1[0x1760dc5a]
	44	[6440]	CALL     	R5 2 2 ; R5 := R5(R6)
	45	[6440]	EQ       	0 R5 K8 ; if R5 ~= "" then PC := 71
	46	[6440]	JMP      	71 ; PC := 71
	47	[6440]	GETGLOBAL	R5 K9 ; R5 := 0x76ea806b
	48	[6440]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0x3f3ae64c]
	49	[6440]	LOADK    	R7 := 0.000000
	50	[6440]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	51	[6440]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0xfe6131c3]
	52	[6440]	LOADK    	R7 K12 ; R7 := "steam_market"
	53	[6440]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	54	[6440]	TEST     	R5 0 ; if not R5 then PC := 71
	55	[6440]	JMP      	71 ; PC := 71
	56	[6441]	OP_LOADBOOL	R2 0 0 ; R2 := false
	57	[6442]	JMP      	71 ; PC := 71
	58	[6443]	GETUPVAL 	R5 U2 ; R5 := U2
	59	[6443]	MOVE     	R6 R1 ; R6 := R1
	60	[6443]	CALL     	R5 2 2 ; R5 := R5(R6)
	61	[6443]	TEST     	R5 0 ; if not R5 then PC := 71
	62	[6443]	JMP      	71 ; PC := 71
	63	[6444]	GETGLOBAL	R5 K2 ; R5 := 0x34291f5c
	64	[6444]	GETTABLE 	R5 R5 K5 ; R5 := R5[0xbcd06415]
	65	[6444]	CALL     	R5 1 2 ; R5 := R5()
	66	[6444]	TEST     	R5 0 ; if not R5 then PC := 71
	67	[6444]	JMP      	71 ; PC := 71
	68	[6444]	TEST     	R4 1 ; if R4 then PC := 71
	69	[6444]	JMP      	71 ; PC := 71
	70	[6445]	OP_LOADBOOL	R2 0 0 ; R2 := false
	71	[6450]	RETURN   	R2 2 ; return R2 
	72	[6451]	RETURN   	R0 1 ; return 

function #318 <?:6453,6483> (68 instructions, 272 bytes at 0000025274F2E790)
4 params, 18 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[6454]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[6454]	MOVE     	R5 R2 ; R5 := R2
	3	[6454]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[6454]	TEST     	R4 1 ; if R4 then PC := 11
	5	[6454]	JMP      	11 ; PC := 11
	6	[6454]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	7	[6454]	MOVE     	R5 R1 ; R5 := R1
	8	[6454]	CALL     	R4 2 2 ; R4 := R4(R5)
	9	[6454]	TEST     	R4 0 ; if not R4 then PC := 12
	10	[6454]	JMP      	12 ; PC := 12
	11	[6455]	RETURN   	R3 2 ; return R3 
	12	[6458]	MOVE     	R4 R3 ; R4 := R3
	13	[6459]	SELF     	R5 R1 K1 ; R6 := R1; R5 := R1[0x3ef3c120]
	14	[6459]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[6460]	LEN      	R6 R5 ; R6 := # R5
	16	[6460]	LT       	0 K2 R6 ; if 0.000000 >= R6 then PC := 67
	17	[6460]	JMP      	67 ; PC := 67
	18	[6461]	LOADK    	R6 K3 ; R6 := ""
	19	[6462]	OP_LOADBOOL	R7 0 0 ; R7 := false
	20	[6463]	GETTABLE 	R8 R2 K4 ; R8 := R2["mSockets"]
	21	[6463]	EQ       	1 R8 K5 ; if R8 == nil then PC := 44
	22	[6463]	JMP      	44 ; PC := 44
	23	[6464]	LOADK    	R8 := 1.000000
	24	[6464]	LEN      	R9 R5 ; R9 := # R5
	25	[6464]	LOADK    	R10 := 1.000000
	26	[6464]	FORPREP  	R8 43 ; R8 -= R10; PC := 43
	27	[6465]	SELF     	R12 R2 K6 ; R13 := R2; R12 := R2[0x2c626e13]
	28	[6465]	SUB      	R14 R11 K7 ; R14 := R11 - 1.000000
	29	[6465]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	30	[6465]	NOT      	R12 R12 ; R12 := not R12
	31	[6466]	TEST     	R7 1 ; if R7 then PC := 34
	32	[6466]	JMP      	34 ; PC := 34
	33	[6466]	NOT      	R7 R12 ; R7 := not R12
	34	[6467]	MOVE     	R13 R6 ; R13 := R6
	35	[6467]	GETUPVAL 	R14 U0 ; R14 := U0
	36	[6467]	GETTABLE 	R14 R14 K8 ; R14 := R14[0x06d055f9]
	37	[6467]	MOVE     	R15 R12 ; R15 := R12
	38	[6467]	LOADK    	R16 K9 ; R16 := "<TREASURE_GEM_OUTLINE>"
	39	[6467]	LOADK    	R17 K10 ; R17 := "<TREASURE_GEM>"
	40	[6467]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	41	[6467]	LOADK    	R15 K3 ; R15 := ""
	42	[6467]	CONCAT   	R6 R13 R15 ; R6 := R13 .. R14 .. R15
	43	[6464]	FORLOOP  	R8 27 ; R8 += R10; if R8 <= R9 then begin PC := 27; R11 := R8 end
	44	[6471]	TEST     	R7 0 ; if not R7 then PC := 67
	45	[6471]	JMP      	67 ; PC := 67
	46	[6472]	LOADK    	R13 K3 ; R13 := ""
	47	[6473]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	48	[6473]	MOVE     	R15 R0 ; R15 := R0
	49	[6473]	CALL     	R14 2 2 ; R14 := R14(R15)
	50	[6473]	TEST     	R14 1 ; if R14 then PC := 58
	51	[6473]	JMP      	58 ; PC := 58
	52	[6474]	SELF     	R14 R0 K11 ; R15 := R0; R14 := R0[0x42b04007]
	53	[6474]	MOVE     	R16 R6 ; R16 := R6
	54	[6474]	OP_LOADBOOL	R17 1 0 ; R17 := true
	55	[6474]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	56	[6474]	MOVE     	R13 R14 ; R13 := R14
	57	[6474]	JMP      	63 ; PC := 63
	58	[6476]	GETGLOBAL	R14 K12 ; R14 := 0x603636ad
	59	[6476]	MOVE     	R15 R6 ; R15 := R6
	60	[6476]	OP_LOADBOOL	R16 1 0 ; R16 := true
	61	[6476]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	62	[6476]	MOVE     	R13 R14 ; R13 := R14
	63	[6478]	MOVE     	R14 R4 ; R14 := R4
	64	[6478]	LOADK    	R15 K13 ; R15 := "   "
	65	[6478]	MOVE     	R16 R13 ; R16 := R13
	66	[6478]	CONCAT   	R4 R14 R16 ; R4 := R14 .. R15 .. R16
	67	[6482]	RETURN   	R4 2 ; return R4 
	68	[6483]	RETURN   	R0 1 ; return 

function #319 <?:6485,6487> (8 instructions, 32 bytes at 0000025274F2EC40)
0 params, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[6486]	GETGLOBAL	R0 K0 ; R0 := 0x5bced4c4
	2	[6486]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x55f27c30]
	3	[6486]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	4	[6486]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x715c5d7f]
	5	[6486]	CALL     	R1 2 0 ; R1,... := R1(R2)
	6	[6486]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[6486]	RETURN   	R0 2 ; return R0 
	8	[6487]	RETURN   	R0 1 ; return 

function #320 <?:6489,6491> (9 instructions, 36 bytes at 0000025274F2ED80)
0 params, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6490]	GETGLOBAL	R0 K0 ; R0 := 0x5bced4c4
	2	[6490]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x55f27c30]
	3	[6490]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	4	[6490]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x715c5d7f]
	5	[6490]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[6490]	DIV      	R1 R1 K4 ; R1 := R1 / 60.000000
	7	[6490]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[6490]	RETURN   	R0 2 ; return R0 
	9	[6491]	RETURN   	R0 1 ; return 

function #321 <?:6493,6495> (4 instructions, 16 bytes at 0000025274F2EEF0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6494]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6494]	CALL     	R0 1 2 ; R0 := R0()
	3	[6494]	RETURN   	R0 2 ; return R0 
	4	[6495]	RETURN   	R0 1 ; return 

function #322 <?:6497,6499> (9 instructions, 36 bytes at 0000025274F2EFC0)
0 params, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6498]	GETGLOBAL	R0 K0 ; R0 := 0x5bced4c4
	2	[6498]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x55f27c30]
	3	[6498]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	4	[6498]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x715c5d7f]
	5	[6498]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[6498]	DIV      	R1 R1 K4 ; R1 := R1 / 3600.000000
	7	[6498]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[6498]	RETURN   	R0 2 ; return R0 
	9	[6499]	RETURN   	R0 1 ; return 

function #323 <?:6501,6503> (4 instructions, 16 bytes at 0000025274F2F130)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6502]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6502]	CALL     	R0 1 2 ; R0 := R0()
	3	[6502]	RETURN   	R0 2 ; return R0 
	4	[6503]	RETURN   	R0 1 ; return 

function #324 <?:6505,6507> (9 instructions, 36 bytes at 0000025274F2F200)
0 params, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6506]	GETGLOBAL	R0 K0 ; R0 := 0x5bced4c4
	2	[6506]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x55f27c30]
	3	[6506]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	4	[6506]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x715c5d7f]
	5	[6506]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[6506]	DIV      	R1 R1 K4 ; R1 := R1 / 86400.000000
	7	[6506]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[6506]	RETURN   	R0 2 ; return R0 
	9	[6507]	RETURN   	R0 1 ; return 

function #325 <?:6509,6511> (4 instructions, 16 bytes at 0000025274F2F370)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6510]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6510]	CALL     	R0 1 2 ; R0 := R0()
	3	[6510]	RETURN   	R0 2 ; return R0 
	4	[6511]	RETURN   	R0 1 ; return 

function #326 <?:6513,6515> (9 instructions, 36 bytes at 0000025274F2F440)
0 params, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6514]	GETGLOBAL	R0 K0 ; R0 := 0x5bced4c4
	2	[6514]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x55f27c30]
	3	[6514]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	4	[6514]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x715c5d7f]
	5	[6514]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[6514]	DIV      	R1 R1 K4 ; R1 := R1 / 604800.000000
	7	[6514]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[6514]	RETURN   	R0 2 ; return R0 
	9	[6515]	RETURN   	R0 1 ; return 

function #327 <?:6517,6577> (131 instructions, 524 bytes at 0000025274F2F5B0)
1 param, 12 slots, 1 upvalue, 0 locals, 35 constants, 0 functions
	1	[6518]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[6520]	GETTABLE 	R2 R0 K0 ; R2 := R0["missionType"]
	3	[6521]	EQ       	0 R2 K2 ; if R2 ~= 18.000000 then PC := 10
	4	[6521]	JMP      	10 ; PC := 10
	5	[6522]	NEWTABLE 	R3 2 0 ; R3 := {}
	6	[6522]	LOADK    	R4 := 9.000000
	7	[6522]	LOADK    	R5 K3 ; R5 := "/Lotus/Language/Menu/NightmareModeName"
	8	[6522]	SETLIST  	R3 2 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
	9	[6522]	RETURN   	R3 2 ; return R3 
	10	[6525]	NEWTABLE 	R3 0 0 ; R3 := {}
	11	[6526]	GETGLOBAL	R4 K4 ; R4 := 0x33bdd652
	12	[6526]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x23d5322f]
	13	[6526]	MOVE     	R5 R3 ; R5 := R3
	14	[6526]	NEWTABLE 	R6 2 0 ; R6 := {}
	15	[6526]	LOADK    	R7 := 1.000000
	16	[6526]	LOADK    	R8 K6 ; R8 := "/Lotus/Language/Game/NightmareModeVampire"
	17	[6526]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	18	[6526]	CALL     	R4 3 1 ; R4(R5,R6)
	19	[6527]	GETGLOBAL	R4 K4 ; R4 := 0x33bdd652
	20	[6527]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x23d5322f]
	21	[6527]	MOVE     	R5 R3 ; R5 := R3
	22	[6527]	NEWTABLE 	R6 2 0 ; R6 := {}
	23	[6527]	LOADK    	R7 := 3.000000
	24	[6527]	LOADK    	R8 K7 ; R8 := "/Lotus/Language/Game/NightmareModeEnergyDrain"
	25	[6527]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	26	[6527]	CALL     	R4 3 1 ; R4(R5,R6)
	27	[6528]	GETGLOBAL	R4 K4 ; R4 := 0x33bdd652
	28	[6528]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x23d5322f]
	29	[6528]	MOVE     	R5 R3 ; R5 := R3
	30	[6528]	NEWTABLE 	R6 2 0 ; R6 := {}
	31	[6528]	LOADK    	R7 := 6.000000
	32	[6528]	LOADK    	R8 K8 ; R8 := "/Lotus/Language/Game/NightmareModeExplodingCorpses"
	33	[6528]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	34	[6528]	CALL     	R4 3 1 ; R4(R5,R6)
	35	[6532]	EQ       	1 R2 K9 ; if R2 == 8.000000 then PC := 63
	36	[6532]	JMP      	63 ; PC := 63
	37	[6533]	EQ       	1 R2 K10 ; if R2 == 9.000000 then PC := 63
	38	[6533]	JMP      	63 ; PC := 63
	39	[6534]	EQ       	1 R2 K11 ; if R2 == 2.000000 then PC := 63
	40	[6534]	JMP      	63 ; PC := 63
	41	[6535]	EQ       	1 R2 K12 ; if R2 == 32.000000 then PC := 63
	42	[6535]	JMP      	63 ; PC := 63
	43	[6536]	EQ       	1 R2 K13 ; if R2 == 4.000000 then PC := 63
	44	[6536]	JMP      	63 ; PC := 63
	45	[6537]	EQ       	1 R2 K14 ; if R2 == 3.000000 then PC := 63
	46	[6537]	JMP      	63 ; PC := 63
	47	[6538]	EQ       	1 R2 K15 ; if R2 == 0.000000 then PC := 63
	48	[6538]	JMP      	63 ; PC := 63
	49	[6539]	EQ       	1 R2 K16 ; if R2 == 33.000000 then PC := 63
	50	[6539]	JMP      	63 ; PC := 63
	51	[6540]	EQ       	1 R2 K17 ; if R2 == 34.000000 then PC := 63
	52	[6540]	JMP      	63 ; PC := 63
	53	[6541]	EQ       	1 R2 K18 ; if R2 == 35.000000 then PC := 63
	54	[6541]	JMP      	63 ; PC := 63
	55	[6542]	GETGLOBAL	R4 K4 ; R4 := 0x33bdd652
	56	[6542]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x23d5322f]
	57	[6542]	MOVE     	R5 R3 ; R5 := R3
	58	[6542]	NEWTABLE 	R6 2 0 ; R6 := {}
	59	[6542]	LOADK    	R7 := 0.000000
	60	[6542]	LOADK    	R8 K19 ; R8 := "/Lotus/Language/Game/NightmareModeTimed"
	61	[6542]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	62	[6542]	CALL     	R4 3 1 ; R4(R5,R6)
	63	[6546]	EQ       	1 R2 K15 ; if R2 == 0.000000 then PC := 65
	64	[6546]	JMP      	65 ; PC := 65
	65	[6551]	EQ       	1 R2 K20 ; if R2 == 14.000000 then PC := 75
	66	[6551]	JMP      	75 ; PC := 75
	67	[6552]	GETGLOBAL	R4 K4 ; R4 := 0x33bdd652
	68	[6552]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x23d5322f]
	69	[6552]	MOVE     	R5 R3 ; R5 := R3
	70	[6552]	NEWTABLE 	R6 2 0 ; R6 := {}
	71	[6552]	LOADK    	R7 := 4.000000
	72	[6552]	LOADK    	R8 K21 ; R8 := "/Lotus/Language/Game/NightmareModeNoShield"
	73	[6552]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	74	[6552]	CALL     	R4 3 1 ; R4(R5,R6)
	75	[6556]	GETGLOBAL	R4 K22 ; R4 := 0xffd438ab
	76	[6556]	CALL     	R4 1 2 ; R4 := R4()
	77	[6557]	GETGLOBAL	R5 K23 ; R5 := 0x0997dbe6
	78	[6557]	GETGLOBAL	R6 K24 ; R6 := 0xf1f5e051
	79	[6557]	GETGLOBAL	R7 K25 ; R7 := 0x64fb1586
	80	[6557]	GETTABLE 	R8 R0 K26 ; R8 := R0["location"]
	81	[6557]	CALL     	R7 2 0 ; R7,... := R7(R8)
	82	[6557]	CALL     	R6 0 0 ; R6,... := R6(R7,...)
	83	[6557]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	84	[6558]	GETGLOBAL	R6 K27 ; R6 := 0x84883f05
	85	[6558]	MOVE     	R7 R5 ; R7 := R5
	86	[6558]	GETUPVAL 	R8 U0 ; R8 := U0
	87	[6558]	CALL     	R8 1 2 ; R8 := R8()
	88	[6558]	MOD      	R8 R8 K28 ; R8 := R8 % 365.000000
	89	[6558]	CALL     	R6 3 1 ; R6(R7,R8)
	90	[6560]	GETGLOBAL	R6 K29 ; R6 := 0x0c5e62f9
	91	[6560]	LOADK    	R7 := 1.000000
	92	[6560]	LEN      	R8 R3 ; R8 := # R3
	93	[6560]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	94	[6563]	GETGLOBAL	R7 K4 ; R7 := 0x33bdd652
	95	[6563]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x23d5322f]
	96	[6563]	MOVE     	R8 R1 ; R8 := R1
	97	[6563]	GETTABLE 	R9 R3 R6 ; R9 := R3[R6]
	98	[6563]	CALL     	R7 3 1 ; R7(R8,R9)
	99	[6566]	GETGLOBAL	R7 K29 ; R7 := 0x0c5e62f9
	100	[6566]	LOADK    	R8 := 0.000000
	101	[6566]	LOADK    	R9 := 2.000000
	102	[6566]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	103	[6566]	EQ       	0 R7 K30 ; if R7 ~= -1.000000 then PC := 113
	104	[6566]	JMP      	113 ; PC := 113
	105	[6567]	GETGLOBAL	R7 K4 ; R7 := 0x33bdd652
	106	[6567]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x23d5322f]
	107	[6567]	MOVE     	R8 R1 ; R8 := R1
	108	[6567]	NEWTABLE 	R9 2 0 ; R9 := {}
	109	[6567]	LOADK    	R10 := 2.000000
	110	[6567]	LOADK    	R11 K31 ; R11 := "/Lotus/Language/Game/NightmareModeNoHud"
	111	[6567]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	112	[6567]	CALL     	R7 3 1 ; R7(R8,R9)
	113	[6570]	GETGLOBAL	R7 K29 ; R7 := 0x0c5e62f9
	114	[6570]	LOADK    	R8 := 0.000000
	115	[6570]	LOADK    	R9 := 3.000000
	116	[6570]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	117	[6570]	EQ       	0 R7 K32 ; if R7 ~= 1.000000 then PC := 127
	118	[6570]	JMP      	127 ; PC := 127
	119	[6571]	GETGLOBAL	R7 K4 ; R7 := 0x33bdd652
	120	[6571]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x23d5322f]
	121	[6571]	MOVE     	R8 R1 ; R8 := R1
	122	[6571]	NEWTABLE 	R9 2 0 ; R9 := {}
	123	[6571]	LOADK    	R10 := 8.000000
	124	[6571]	LOADK    	R11 K33 ; R11 := "/Lotus/Language/Game/NightmareModeLowGrav"
	125	[6571]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	126	[6571]	CALL     	R7 3 1 ; R7(R8,R9)
	127	[6574]	GETGLOBAL	R7 K34 ; R7 := 0x4f6851ff
	128	[6574]	MOVE     	R8 R4 ; R8 := R4
	129	[6574]	CALL     	R7 2 1 ; R7(R8)
	130	[6576]	RETURN   	R1 2 ; return R1 
	131	[6577]	RETURN   	R0 1 ; return 

function #328 <?:6579,6602> (43 instructions, 172 bytes at 0000025274F2FF90)
0 params, 13 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[6580]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[6582]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	3	[6583]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[6583]	MOVE     	R3 R1 ; R3 := R1
	5	[6583]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[6583]	TEST     	R2 0 ; if not R2 then PC := 9
	7	[6583]	JMP      	9 ; PC := 9
	8	[6584]	RETURN   	R0 2 ; return R0 
	9	[6587]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x25a6e75e]
	10	[6587]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[6588]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	12	[6588]	MOVE     	R4 R2 ; R4 := R2
	13	[6588]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[6588]	TEST     	R3 0 ; if not R3 then PC := 17
	15	[6588]	JMP      	17 ; PC := 17
	16	[6589]	RETURN   	R0 2 ; return R0 
	17	[6592]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0x98b1bb53]
	18	[6592]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[6593]	GETGLOBAL	R4 K4 ; R4 := gRandomizedArtifactUpgradeType
	20	[6594]	LOADK    	R5 := 1.000000
	21	[6594]	LEN      	R6 R3 ; R6 := # R3
	22	[6594]	LOADK    	R7 := 1.000000
	23	[6594]	FORPREP  	R5 41 ; R5 -= R7; PC := 41
	24	[6595]	GETTABLE 	R9 R3 R8 ; R9 := R3[R8]
	25	[6595]	GETTABLE 	R9 R9 K5 ; R9 := R9["mItemType"]
	26	[6596]	GETGLOBAL	R10 K1 ; R10 := 0x7b998233
	27	[6596]	MOVE     	R11 R9 ; R11 := R9
	28	[6596]	CALL     	R10 2 2 ; R10 := R10(R11)
	29	[6596]	TEST     	R10 1 ; if R10 then PC := 41
	30	[6596]	JMP      	41 ; PC := 41
	31	[6596]	SELF     	R10 R9 K6 ; R11 := R9; R10 := R9[0xf2deaf69]
	32	[6596]	MOVE     	R12 R4 ; R12 := R4
	33	[6596]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	34	[6596]	TEST     	R10 0 ; if not R10 then PC := 41
	35	[6596]	JMP      	41 ; PC := 41
	36	[6597]	GETGLOBAL	R10 K7 ; R10 := 0x33bdd652
	37	[6597]	GETTABLE 	R10 R10 K8 ; R10 := R10[0x23d5322f]
	38	[6597]	MOVE     	R11 R0 ; R11 := R0
	39	[6597]	GETTABLE 	R12 R3 R8 ; R12 := R3[R8]
	40	[6597]	CALL     	R10 3 1 ; R10(R11,R12)
	41	[6594]	FORLOOP  	R5 24 ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
	42	[6601]	RETURN   	R0 2 ; return R0 
	43	[6602]	RETURN   	R0 1 ; return 

function #329 <?:6604,6606> (4 instructions, 16 bytes at 0000025274F30240)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6605]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6605]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[6605]	RETURN   	R0 0 ; return R0,... 
	4	[6606]	RETURN   	R0 1 ; return 

function #330 <?:6608,6620> (28 instructions, 112 bytes at 0000025274F30310)
0 params, 4 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[6609]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[6610]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	3	[6610]	MOVE     	R2 R0 ; R2 := R0
	4	[6610]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[6610]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[6610]	JMP      	9 ; PC := 9
	7	[6611]	OP_LOADBOOL	R1 0 0 ; R1 := false
	8	[6611]	RETURN   	R1 2 ; return R1 
	9	[6614]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x25a6e75e]
	10	[6614]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[6615]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	12	[6615]	MOVE     	R3 R1 ; R3 := R1
	13	[6615]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[6615]	TEST     	R2 0 ; if not R2 then PC := 18
	15	[6615]	JMP      	18 ; PC := 18
	16	[6616]	OP_LOADBOOL	R2 0 0 ; R2 := false
	17	[6616]	RETURN   	R2 2 ; return R2 
	18	[6619]	GETUPVAL 	R2 U0 ; R2 := U0
	19	[6619]	CALL     	R2 1 2 ; R2 := R2()
	20	[6619]	LEN      	R2 R2 ; R2 := # R2
	21	[6619]	GETUPVAL 	R3 U1 ; R3 := U1
	22	[6619]	CALL     	R3 1 2 ; R3 := R3()
	23	[6619]	LT       	1 R3 R2 ; if R3 < R2 then PC := 26
	24	[6619]	JMP      	26 ; PC := 26
	25	[6619]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 26
	26	[6619]	OP_LOADBOOL	R2 1 0 ; R2 := true
	27	[6619]	RETURN   	R2 2 ; return R2 
	28	[6620]	RETURN   	R0 1 ; return 

function #331 <?:6622,6624> (4 instructions, 16 bytes at 0000025274F304E0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6623]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6623]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[6623]	RETURN   	R0 0 ; return R0,... 
	4	[6624]	RETURN   	R0 1 ; return 

function #332 <?:6626,6637> (21 instructions, 84 bytes at 0000025274F305B0)
0 params, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[6627]	LOADK    	R0 := 0.000000
	2	[6628]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	3	[6628]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	4	[6628]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[6628]	TEST     	R1 1 ; if R1 then PC := 20
	6	[6628]	JMP      	20 ; PC := 20
	7	[6629]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	8	[6629]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x25a6e75e]
	9	[6629]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[6630]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	11	[6630]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xefee6c91]
	12	[6630]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[6631]	SELF     	R3 R1 K4 ; R4 := R1; R3 := R1[0xa64e07df]
	14	[6631]	LOADK    	R5 := 7.000000
	15	[6631]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	16	[6631]	MOVE     	R0 R3 ; R0 := R3
	17	[6632]	LE       	0 K6 R2 ; if 30.000000 > R2 then PC := 20
	18	[6632]	JMP      	20 ; PC := 20
	19	[6633]	ADD      	R0 R0 K6 ; R0 := R0 + 30.000000
	20	[6636]	RETURN   	R0 2 ; return R0 
	21	[6637]	RETURN   	R0 1 ; return 

function #333 <?:6639,6641> (4 instructions, 16 bytes at 0000025274F307A0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6640]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6640]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[6640]	RETURN   	R0 0 ; return R0,... 
	4	[6641]	RETURN   	R0 1 ; return 

function #334 <?:6643,6656> (23 instructions, 92 bytes at 0000025274F30870)
2 params, 7 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[6644]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0xb61abfd2]
	2	[6644]	LOADK    	R4 := 0.000000
	3	[6644]	LOADK    	R5 := 0.000000
	4	[6644]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	5	[6644]	GETTABLE 	R2 R2 K2 ; R2 := R2["mInfestationDate"]
	6	[6646]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0x56c01834]
	7	[6646]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[6646]	TEST     	R3 0 ; if not R3 then PC := 21
	9	[6646]	JMP      	21 ; PC := 21
	10	[6648]	LOADK    	R3 := -86400.000000
	11	[6649]	GETGLOBAL	R4 K4 ; R4 := 0x34291f5c
	12	[6649]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x397b920f]
	13	[6649]	MOVE     	R5 R2 ; R5 := R2
	14	[6649]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[6650]	MUL      	R5 R3 R1 ; R5 := R3 * R1
	16	[6650]	LE       	1 R4 R5 ; if R4 <= R5 then PC := 19
	17	[6650]	JMP      	19 ; PC := 19
	18	[6650]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 19
	19	[6650]	OP_LOADBOOL	R5 1 0 ; R5 := true
	20	[6652]	RETURN   	R5 2 ; return R5 
	21	[6655]	OP_LOADBOOL	R6 0 0 ; R6 := false
	22	[6655]	RETURN   	R6 2 ; return R6 
	23	[6656]	RETURN   	R0 1 ; return 

function #335 <?:6658,6661> (7 instructions, 28 bytes at 0000025274F30A90)
1 param, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6659]	LOADK    	R1 := 1.000000
	2	[6660]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[6660]	MOVE     	R3 R0 ; R3 := R0
	4	[6660]	MOVE     	R4 R1 ; R4 := R1
	5	[6660]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	6	[6660]	RETURN   	R2 0 ; return R2,... 
	7	[6661]	RETURN   	R0 1 ; return 

function #336 <?:6663,6666> (7 instructions, 28 bytes at 0000025274F30B80)
1 param, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6664]	LOADK    	R1 := 7.000000
	2	[6665]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[6665]	MOVE     	R3 R0 ; R3 := R0
	4	[6665]	MOVE     	R4 R1 ; R4 := R1
	5	[6665]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	6	[6665]	RETURN   	R2 0 ; return R2,... 
	7	[6666]	RETURN   	R0 1 ; return 

function #337 <?:6668,6697> (54 instructions, 216 bytes at 0000025274F30C70)
1 param, 5 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[6669]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[6669]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xa7a2e381]
	3	[6669]	CALL     	R1 1 2 ; R1 := R1()
	4	[6669]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6669]	JMP      	8 ; PC := 8
	6	[6670]	OP_LOADBOOL	R1 0 0 ; R1 := false
	7	[6670]	RETURN   	R1 2 ; return R1 
	8	[6673]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	9	[6673]	MOVE     	R2 R0 ; R2 := R0
	10	[6673]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[6673]	TEST     	R1 0 ; if not R1 then PC := 21
	12	[6673]	JMP      	21 ; PC := 21
	13	[6674]	GETGLOBAL	R0 K3 ; R0 := 0x25d99d89
	14	[6676]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	15	[6676]	MOVE     	R2 R0 ; R2 := R0
	16	[6676]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[6676]	TEST     	R1 0 ; if not R1 then PC := 21
	18	[6676]	JMP      	21 ; PC := 21
	19	[6677]	OP_LOADBOOL	R1 0 0 ; R1 := false
	20	[6677]	RETURN   	R1 2 ; return R1 
	21	[6681]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xfb6d14df]
	22	[6681]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[6681]	TEST     	R1 0 ; if not R1 then PC := 27
	24	[6681]	JMP      	27 ; PC := 27
	25	[6682]	OP_LOADBOOL	R1 0 0 ; R1 := false
	26	[6682]	RETURN   	R1 2 ; return R1 
	27	[6685]	GETGLOBAL	R1 K5 ; R1 := 0x89326c93
	28	[6685]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x78298275]
	29	[6685]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[6686]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	31	[6686]	MOVE     	R3 R1 ; R3 := R1
	32	[6686]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[6686]	TEST     	R2 0 ; if not R2 then PC := 37
	34	[6686]	JMP      	37 ; PC := 37
	35	[6687]	OP_LOADBOOL	R2 0 0 ; R2 := false
	36	[6687]	RETURN   	R2 2 ; return R2 
	37	[6690]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0xde321e6f]
	38	[6690]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[6690]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xf7d48ee0]
	40	[6690]	CALL     	R2 2 2 ; R2 := R2(R3)
	41	[6691]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	42	[6691]	MOVE     	R4 R2 ; R4 := R2
	43	[6691]	CALL     	R3 2 2 ; R3 := R3(R4)
	44	[6691]	TEST     	R3 1 ; if R3 then PC := 50
	45	[6691]	JMP      	50 ; PC := 50
	46	[6691]	SELF     	R3 R2 K9 ; R4 := R2; R3 := R2[0x1ba58c7f]
	47	[6691]	CALL     	R3 2 2 ; R3 := R3(R4)
	48	[6691]	TEST     	R3 0 ; if not R3 then PC := 52
	49	[6691]	JMP      	52 ; PC := 52
	50	[6692]	OP_LOADBOOL	R3 0 0 ; R3 := false
	51	[6692]	RETURN   	R3 2 ; return R3 
	52	[6696]	OP_LOADBOOL	R3 1 0 ; R3 := true
	53	[6696]	RETURN   	R3 2 ; return R3 
	54	[6697]	RETURN   	R0 1 ; return 

function #338 <?:6699,6710> (55 instructions, 220 bytes at 0000025274F30F90)
2 params, 13 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[6700]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[6700]	MOVE     	R3 R0 ; R3 := R0
	3	[6700]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[6700]	TEST     	R2 1 ; if R2 then PC := 55
	5	[6700]	JMP      	55 ; PC := 55
	6	[6700]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[6700]	MOVE     	R3 R1 ; R3 := R1
	8	[6700]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[6700]	TEST     	R2 1 ; if R2 then PC := 55
	10	[6700]	JMP      	55 ; PC := 55
	11	[6701]	SELF     	R2 R1 K1 ; R3 := R1; R2 := R1[0x3583ccf1]
	12	[6701]	GETGLOBAL	R4 K2 ; R4 := 0x67652851
	13	[6701]	CALL     	R4 1 2 ; R4 := R4()
	14	[6701]	MOVE     	R5 R0 ; R5 := R0
	15	[6701]	OP_LOADBOOL	R6 0 0 ; R6 := false
	16	[6701]	SELF     	R7 R0 K3 ; R8 := R0; R7 := R0[0x1bda579e]
	17	[6701]	CALL     	R7 2 0 ; R7,... := R7(R8)
	18	[6701]	CALL     	R2 0 1 ; R2(R3,...)
	19	[6702]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0x603d617e]
	20	[6702]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[6703]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	22	[6703]	MOVE     	R4 R2 ; R4 := R2
	23	[6703]	CALL     	R3 2 2 ; R3 := R3(R4)
	24	[6703]	TEST     	R3 1 ; if R3 then PC := 55
	25	[6703]	JMP      	55 ; PC := 55
	26	[6704]	GETGLOBAL	R3 K5 ; R3 := 0x03ea2485
	27	[6704]	SELF     	R4 R0 K6 ; R5 := R0; R4 := R0[0xde321e6f]
	28	[6704]	CALL     	R4 2 2 ; R4 := R4(R5)
	29	[6704]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0xefd0fde2]
	30	[6704]	CALL     	R4 2 2 ; R4 := R4(R5)
	31	[6704]	SELF     	R5 R0 K8 ; R6 := R0; R5 := R0[0xebfba9e4]
	32	[6704]	CALL     	R5 2 0 ; R5,... := R5(R6)
	33	[6704]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	34	[6705]	GETGLOBAL	R4 K9 ; R4 := 0x5bced4c4
	35	[6705]	GETTABLE 	R4 R4 K10 ; R4 := R4[0x55f27c30]
	36	[6705]	MOVE     	R5 R3 ; R5 := R3
	37	[6705]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[6706]	GETGLOBAL	R5 K9 ; R5 := 0x5bced4c4
	39	[6706]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x55f27c30]
	40	[6706]	MUL      	R6 R3 K11 ; R6 := R3 * 10.000000
	41	[6706]	MUL      	R7 R4 K11 ; R7 := R4 * 10.000000
	42	[6706]	SUB      	R6 R6 R7 ; R6 := R6 - R7
	43	[6706]	CALL     	R5 2 2 ; R5 := R5(R6)
	44	[6707]	SELF     	R6 R2 K12 ; R7 := R2; R6 := R2[0xe4162eed]
	45	[6707]	LOADK    	R8 K13 ; R8 := "UpdateRangeFinder"
	46	[6707]	GETGLOBAL	R9 K14 ; R9 := 0x64fb1586
	47	[6707]	MOVE     	R10 R4 ; R10 := R4
	48	[6707]	CALL     	R9 2 2 ; R9 := R9(R10)
	49	[6707]	LOADK    	R10 K15 ; R10 := ","
	50	[6707]	GETGLOBAL	R11 K14 ; R11 := 0x64fb1586
	51	[6707]	MOVE     	R12 R5 ; R12 := R5
	52	[6707]	CALL     	R11 2 2 ; R11 := R11(R12)
	53	[6707]	CONCAT   	R9 R9 R11 ; R9 := R9 .. R10 .. R11
	54	[6707]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	55	[6710]	RETURN   	R0 1 ; return 

function #339 <?:6712,6719> (19 instructions, 76 bytes at 0000025274F31350)
2 params, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6713]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[6713]	MOVE     	R3 R0 ; R3 := R0
	3	[6713]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[6713]	TEST     	R2 1 ; if R2 then PC := 19
	5	[6713]	JMP      	19 ; PC := 19
	6	[6714]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0xc9f6a7d7]
	7	[6714]	GETGLOBAL	R4 K2 ; R4 := 0x7ed0a956
	8	[6714]	LOADK    	R5 K3 ; R5 := "/Lotus/Types/Player/PlayerFlashLight"
	9	[6714]	CALL     	R4 2 0 ; R4,... := R4(R5)
	10	[6714]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	11	[6715]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	12	[6715]	MOVE     	R4 R2 ; R4 := R2
	13	[6715]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[6715]	TEST     	R3 1 ; if R3 then PC := 19
	15	[6715]	JMP      	19 ; PC := 19
	16	[6716]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x83da76cb]
	17	[6716]	MOVE     	R5 R1 ; R5 := R1
	18	[6716]	CALL     	R3 3 1 ; R3(R4,R5)
	19	[6719]	RETURN   	R0 1 ; return 

function #340 <?:6721,6771> (286 instructions, 1144 bytes at 0000025274F31550)
4 params, 21 slots, 1 upvalue, 0 locals, 51 constants, 0 functions
	1	[6722]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[6722]	MOVE     	R5 R0 ; R5 := R0
	3	[6722]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[6722]	TEST     	R4 0 ; if not R4 then PC := 8
	5	[6722]	JMP      	8 ; PC := 8
	6	[6723]	LOADK    	R4 K1 ; R4 := ""
	7	[6723]	RETURN   	R4 2 ; return R4 
	8	[6726]	GETUPVAL 	R4 U0 ; R4 := U0
	9	[6726]	GETTABLE 	R4 R4 K2 ; R4 := R4[0x06d055f9]
	10	[6726]	EQ       	0 R2 K3 ; if R2 ~= nil then PC := 13
	11	[6726]	JMP      	13 ; PC := 13
	12	[6726]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 13
	13	[6726]	OP_LOADBOOL	R5 1 0 ; R5 := true
	14	[6726]	MOVE     	R6 R2 ; R6 := R2
	15	[6726]	LOADK    	R7 K4 ; R7 := "#FFFFFF"
	16	[6726]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	17	[6727]	GETUPVAL 	R5 U0 ; R5 := U0
	18	[6727]	GETTABLE 	R5 R5 K2 ; R5 := R5[0x06d055f9]
	19	[6727]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 22
	20	[6727]	JMP      	22 ; PC := 22
	21	[6727]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 22
	22	[6727]	OP_LOADBOOL	R6 1 0 ; R6 := true
	23	[6727]	MOVE     	R7 R3 ; R7 := R3
	24	[6727]	LOADK    	R8 K4 ; R8 := "#FFFFFF"
	25	[6727]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	26	[6729]	LOADK    	R6 K5 ; R6 := "<p><font color=\""
	27	[6729]	MOVE     	R7 R5 ; R7 := R5
	28	[6729]	LOADK    	R8 K6 ; R8 := "\">"
	29	[6729]	CONCAT   	R6 R6 R8 ; R6 := R6 .. R7 .. R8
	30	[6730]	EQ       	0 R1 K7 ; if R1 ~= 2.000000 then PC := 41
	31	[6730]	JMP      	41 ; PC := 41
	32	[6732]	SELF     	R7 R0 K8 ; R8 := R0; R7 := R0[0x42b04007]
	33	[6732]	LOADK    	R9 K9 ; R9 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpTrading"
	34	[6732]	OP_LOADBOOL	R10 0 0 ; R10 := false
	35	[6732]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	36	[6733]	MOVE     	R8 R6 ; R8 := R6
	37	[6733]	MOVE     	R9 R7 ; R9 := R7
	38	[6733]	LOADK    	R10 K10 ; R10 := "<br>"
	39	[6733]	CONCAT   	R6 R8 R10 ; R6 := R8 .. R9 .. R10
	40	[6733]	JMP      	75 ; PC := 75
	41	[6734]	EQ       	0 R1 K11 ; if R1 ~= 3.000000 then PC := 52
	42	[6734]	JMP      	52 ; PC := 52
	43	[6736]	SELF     	R8 R0 K8 ; R9 := R0; R8 := R0[0x42b04007]
	44	[6736]	LOADK    	R10 K12 ; R10 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpSyndicates"
	45	[6736]	OP_LOADBOOL	R11 0 0 ; R11 := false
	46	[6736]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	47	[6737]	MOVE     	R9 R6 ; R9 := R6
	48	[6737]	MOVE     	R10 R8 ; R10 := R8
	49	[6737]	LOADK    	R11 K10 ; R11 := "<br>"
	50	[6737]	CONCAT   	R6 R9 R11 ; R6 := R9 .. R10 .. R11
	51	[6737]	JMP      	75 ; PC := 75
	52	[6738]	EQ       	1 R1 K13 ; if R1 == 5.000000 then PC := 56
	53	[6738]	JMP      	56 ; PC := 56
	54	[6738]	EQ       	0 R1 K14 ; if R1 ~= 10.000000 then PC := 75
	55	[6738]	JMP      	75 ; PC := 75
	56	[6740]	SELF     	R9 R0 K8 ; R10 := R0; R9 := R0[0x42b04007]
	57	[6740]	LOADK    	R11 K15 ; R11 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpExtraDroneSlot"
	58	[6740]	OP_LOADBOOL	R12 0 0 ; R12 := false
	59	[6740]	NEWTABLE 	R13 0 2 ; R13 := {}
	60	[6740]	LOADK    	R14 K17 ; R14 := "</font><font color=\""
	61	[6740]	MOVE     	R15 R4 ; R15 := R4
	62	[6740]	LOADK    	R16 K6 ; R16 := "\">"
	63	[6740]	CONCAT   	R14 R14 R16 ; R14 := R14 .. R15 .. R16
	64	[6740]	SETTABLE 	R13 K16 R14 ; R13["OPEN_COLOR"] := R14
	65	[6740]	LOADK    	R14 K17 ; R14 := "</font><font color=\""
	66	[6740]	MOVE     	R15 R5 ; R15 := R5
	67	[6740]	LOADK    	R16 K6 ; R16 := "\">"
	68	[6740]	CONCAT   	R14 R14 R16 ; R14 := R14 .. R15 .. R16
	69	[6740]	SETTABLE 	R13 K18 R14 ; R13["CLOSE_COLOR"] := R14
	70	[6740]	CALL     	R9 5 2 ; R9 := R9(R10,R11,R12,R13)
	71	[6741]	MOVE     	R10 R6 ; R10 := R6
	72	[6741]	MOVE     	R11 R9 ; R11 := R9
	73	[6741]	LOADK    	R12 K10 ; R12 := "<br>"
	74	[6741]	CONCAT   	R6 R10 R12 ; R6 := R10 .. R11 .. R12
	75	[6743]	EQ       	0 R1 K19 ; if R1 ~= 30.000000 then PC := 154
	76	[6743]	JMP      	154 ; PC := 154
	77	[6744]	SELF     	R10 R0 K8 ; R11 := R0; R10 := R0[0x42b04007]
	78	[6744]	LOADK    	R12 K20 ; R12 := "/Lotus/Language/Blessings/MasteryRankUpBlessingDesc"
	79	[6744]	OP_LOADBOOL	R13 0 0 ; R13 := false
	80	[6744]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	81	[6745]	MOVE     	R11 R6 ; R11 := R6
	82	[6745]	MOVE     	R12 R10 ; R12 := R10
	83	[6745]	LOADK    	R13 K10 ; R13 := "<br>"
	84	[6745]	CONCAT   	R6 R11 R13 ; R6 := R11 .. R12 .. R13
	85	[6746]	MOVE     	R11 R6 ; R11 := R6
	86	[6746]	GETGLOBAL	R12 K21 ; R12 := 0x5f0788c4
	87	[6746]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	88	[6746]	LOADK    	R15 K22 ; R15 := "/Lotus/Language/Emotes/Rank30EmoteName"
	89	[6746]	OP_LOADBOOL	R16 0 0 ; R16 := false
	90	[6746]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	91	[6746]	LOADK    	R14 K23 ; R14 := " ("
	92	[6746]	SELF     	R15 R0 K8 ; R16 := R0; R15 := R0[0x42b04007]
	93	[6746]	LOADK    	R17 K24 ; R17 := "/Lotus/Language/Emotes/Emote"
	94	[6746]	OP_LOADBOOL	R18 0 0 ; R18 := false
	95	[6746]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	96	[6746]	LOADK    	R16 K25 ; R16 := ")"
	97	[6746]	CONCAT   	R13 R13 R16 ; R13 := R13 .. R14 .. R15 .. R16
	98	[6746]	CALL     	R12 2 2 ; R12 := R12(R13)
	99	[6746]	LOADK    	R13 K10 ; R13 := "<br>"
	100	[6746]	CONCAT   	R6 R11 R13 ; R6 := R11 .. R12 .. R13
	101	[6747]	MOVE     	R11 R6 ; R11 := R6
	102	[6747]	GETGLOBAL	R12 K21 ; R12 := 0x5f0788c4
	103	[6747]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	104	[6747]	LOADK    	R15 K26 ; R15 := "/Lotus/Language/ShipDecorations/HoodOrnament_MR30Name"
	105	[6747]	OP_LOADBOOL	R16 0 0 ; R16 := false
	106	[6747]	CALL     	R13 4 0 ; R13,... := R13(R14,R15,R16)
	107	[6747]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	108	[6747]	LOADK    	R13 K10 ; R13 := "<br>"
	109	[6747]	CONCAT   	R6 R11 R13 ; R6 := R11 .. R12 .. R13
	110	[6748]	MOVE     	R11 R6 ; R11 := R6
	111	[6748]	GETGLOBAL	R12 K21 ; R12 := 0x5f0788c4
	112	[6748]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	113	[6748]	LOADK    	R15 K27 ; R15 := "/Lotus/Language/Cosmetics/TrueMasterEmoji"
	114	[6748]	OP_LOADBOOL	R16 0 0 ; R16 := false
	115	[6748]	CALL     	R13 4 0 ; R13,... := R13(R14,R15,R16)
	116	[6748]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	117	[6748]	LOADK    	R13 K10 ; R13 := "<br>"
	118	[6748]	CONCAT   	R6 R11 R13 ; R6 := R11 .. R12 .. R13
	119	[6749]	MOVE     	R11 R6 ; R11 := R6
	120	[6749]	LOADK    	R12 K28 ; R12 := "<font color=\""
	121	[6749]	MOVE     	R13 R4 ; R13 := R4
	122	[6749]	LOADK    	R14 K29 ; R14 := "\">+3</font> "
	123	[6749]	SELF     	R15 R0 K8 ; R16 := R0; R15 := R0[0x42b04007]
	124	[6749]	LOADK    	R17 K30 ; R17 := "/Lotus/Language/Consumables/FormaUmbra"
	125	[6749]	OP_LOADBOOL	R18 0 0 ; R18 := false
	126	[6749]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	127	[6749]	LOADK    	R16 K10 ; R16 := "<br>"
	128	[6749]	CONCAT   	R6 R11 R16 ; R6 := R11 .. R12 .. R13 .. R14 .. R15 .. R16
	129	[6750]	MOVE     	R11 R6 ; R11 := R6
	130	[6750]	LOADK    	R12 K28 ; R12 := "<font color=\""
	131	[6750]	MOVE     	R13 R4 ; R13 := R4
	132	[6750]	LOADK    	R14 K31 ; R14 := "\">+15</font> "
	133	[6750]	GETGLOBAL	R15 K21 ; R15 := 0x5f0788c4
	134	[6750]	SELF     	R16 R0 K8 ; R17 := R0; R16 := R0[0x42b04007]
	135	[6750]	LOADK    	R18 K32 ; R18 := "/Lotus/Language/Menu/Loadout_Slot"
	136	[6750]	OP_LOADBOOL	R19 0 0 ; R19 := false
	137	[6750]	CALL     	R16 4 0 ; R16,... := R16(R17,R18,R19)
	138	[6750]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	139	[6750]	LOADK    	R16 K10 ; R16 := "<br>"
	140	[6750]	CONCAT   	R6 R11 R16 ; R6 := R11 .. R12 .. R13 .. R14 .. R15 .. R16
	141	[6751]	MOVE     	R11 R6 ; R11 := R6
	142	[6751]	LOADK    	R12 K28 ; R12 := "<font color=\""
	143	[6751]	MOVE     	R13 R4 ; R13 := R4
	144	[6751]	LOADK    	R14 K33 ; R14 := "\">+30</font> "
	145	[6751]	GETGLOBAL	R15 K21 ; R15 := 0x5f0788c4
	146	[6751]	SELF     	R16 R0 K8 ; R17 := R0; R16 := R0[0x42b04007]
	147	[6751]	LOADK    	R18 K34 ; R18 := "/Lotus/Language/Menu/ItemInventory_SlotsRandomMod"
	148	[6751]	OP_LOADBOOL	R19 0 0 ; R19 := false
	149	[6751]	CALL     	R16 4 0 ; R16,... := R16(R17,R18,R19)
	150	[6751]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	151	[6751]	LOADK    	R16 K10 ; R16 := "<br>"
	152	[6751]	CONCAT   	R6 R11 R16 ; R6 := R11 .. R12 .. R13 .. R14 .. R15 .. R16
	153	[6751]	JMP      	176 ; PC := 176
	154	[6752]	MOD      	R11 R1 K7 ; R11 := R1 % 2.000000
	155	[6752]	EQ       	0 R11 K35 ; if R11 ~= 0.000000 then PC := 176
	156	[6752]	JMP      	176 ; PC := 176
	157	[6754]	SELF     	R11 R0 K8 ; R12 := R0; R11 := R0[0x42b04007]
	158	[6754]	LOADK    	R13 K36 ; R13 := "/Lotus/Language/Menu/EndOfMatch_LoadOutSlot"
	159	[6754]	OP_LOADBOOL	R14 0 0 ; R14 := false
	160	[6754]	NEWTABLE 	R15 0 2 ; R15 := {}
	161	[6754]	LOADK    	R16 K17 ; R16 := "</font><font color=\""
	162	[6754]	MOVE     	R17 R4 ; R17 := R4
	163	[6754]	LOADK    	R18 K6 ; R18 := "\">"
	164	[6754]	CONCAT   	R16 R16 R18 ; R16 := R16 .. R17 .. R18
	165	[6754]	SETTABLE 	R15 K16 R16 ; R15["OPEN_COLOR"] := R16
	166	[6754]	LOADK    	R16 K17 ; R16 := "</font><font color=\""
	167	[6754]	MOVE     	R17 R5 ; R17 := R5
	168	[6754]	LOADK    	R18 K6 ; R18 := "\">"
	169	[6754]	CONCAT   	R16 R16 R18 ; R16 := R16 .. R17 .. R18
	170	[6754]	SETTABLE 	R15 K18 R16 ; R15["CLOSE_COLOR"] := R16
	171	[6754]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	172	[6755]	MOVE     	R12 R6 ; R12 := R6
	173	[6755]	MOVE     	R13 R11 ; R13 := R11
	174	[6755]	LOADK    	R14 K10 ; R14 := "<br>"
	175	[6755]	CONCAT   	R6 R12 R14 ; R6 := R12 .. R13 .. R14
	176	[6757]	MOVE     	R12 R6 ; R12 := R6
	177	[6757]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	178	[6757]	LOADK    	R15 K37 ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpStanding"
	179	[6757]	OP_LOADBOOL	R16 1 0 ; R16 := true
	180	[6757]	NEWTABLE 	R17 0 3 ; R17 := {}
	181	[6757]	SETTABLE 	R17 K38 K39 ; R17["NUM"] := 500.000000
	182	[6757]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	183	[6757]	MOVE     	R19 R4 ; R19 := R4
	184	[6757]	LOADK    	R20 K6 ; R20 := "\">"
	185	[6757]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	186	[6757]	SETTABLE 	R17 K16 R18 ; R17["OPEN_COLOR"] := R18
	187	[6757]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	188	[6757]	MOVE     	R19 R5 ; R19 := R5
	189	[6757]	LOADK    	R20 K6 ; R20 := "\">"
	190	[6757]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	191	[6757]	SETTABLE 	R17 K18 R18 ; R17["CLOSE_COLOR"] := R18
	192	[6757]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	193	[6757]	LOADK    	R14 K10 ; R14 := "<br>"
	194	[6757]	CONCAT   	R6 R12 R14 ; R6 := R12 .. R13 .. R14
	195	[6758]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	196	[6758]	GETGLOBAL	R13 K40 ; R13 := 0x25d99d89
	197	[6758]	CALL     	R12 2 2 ; R12 := R12(R13)
	198	[6758]	TEST     	R12 1 ; if R12 then PC := 205
	199	[6758]	JMP      	205 ; PC := 205
	200	[6758]	GETGLOBAL	R12 K40 ; R12 := 0x25d99d89
	201	[6758]	SELF     	R12 R12 K41 ; R13 := R12; R12 := R12[0xd8159207]
	202	[6758]	CALL     	R12 2 2 ; R12 := R12(R13)
	203	[6758]	LE       	0 K7 R12 ; if 2.000000 > R12 then PC := 224
	204	[6758]	JMP      	224 ; PC := 224
	205	[6760]	MOVE     	R12 R6 ; R12 := R6
	206	[6760]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	207	[6760]	LOADK    	R15 K43 ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpFocusCapacity"
	208	[6760]	OP_LOADBOOL	R16 1 0 ; R16 := true
	209	[6760]	NEWTABLE 	R17 0 3 ; R17 := {}
	210	[6760]	SETTABLE 	R17 K38 K44 ; R17["NUM"] := 1000.000000
	211	[6760]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	212	[6760]	MOVE     	R19 R4 ; R19 := R4
	213	[6760]	LOADK    	R20 K6 ; R20 := "\">"
	214	[6760]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	215	[6760]	SETTABLE 	R17 K16 R18 ; R17["OPEN_COLOR"] := R18
	216	[6760]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	217	[6760]	MOVE     	R19 R5 ; R19 := R5
	218	[6760]	LOADK    	R20 K6 ; R20 := "\">"
	219	[6760]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	220	[6760]	SETTABLE 	R17 K18 R18 ; R17["CLOSE_COLOR"] := R18
	221	[6760]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	222	[6760]	LOADK    	R14 K10 ; R14 := "<br>"
	223	[6760]	CONCAT   	R6 R12 R14 ; R6 := R12 .. R13 .. R14
	224	[6762]	LE       	0 R1 K19 ; if R1 > 30.000000 then PC := 245
	225	[6762]	JMP      	245 ; PC := 245
	226	[6763]	MOVE     	R12 R6 ; R12 := R6
	227	[6763]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	228	[6763]	LOADK    	R15 K45 ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpCapacity"
	229	[6763]	OP_LOADBOOL	R16 0 0 ; R16 := false
	230	[6763]	NEWTABLE 	R17 0 2 ; R17 := {}
	231	[6763]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	232	[6763]	MOVE     	R19 R4 ; R19 := R4
	233	[6763]	LOADK    	R20 K6 ; R20 := "\">"
	234	[6763]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	235	[6763]	SETTABLE 	R17 K16 R18 ; R17["OPEN_COLOR"] := R18
	236	[6763]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	237	[6763]	MOVE     	R19 R5 ; R19 := R5
	238	[6763]	LOADK    	R20 K6 ; R20 := "\">"
	239	[6763]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	240	[6763]	SETTABLE 	R17 K18 R18 ; R17["CLOSE_COLOR"] := R18
	241	[6763]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	242	[6763]	LOADK    	R14 K10 ; R14 := "<br>"
	243	[6763]	CONCAT   	R6 R12 R14 ; R6 := R12 .. R13 .. R14
	244	[6763]	JMP      	264 ; PC := 264
	245	[6765]	MOVE     	R12 R6 ; R12 := R6
	246	[6765]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	247	[6765]	LOADK    	R15 K46 ; R15 := "/Lotus/Language/MasteryTest/MasteryRankUp_LegendaryCore"
	248	[6765]	OP_LOADBOOL	R16 1 0 ; R16 := true
	249	[6765]	NEWTABLE 	R17 0 3 ; R17 := {}
	250	[6765]	SETTABLE 	R17 K38 K47 ; R17["NUM"] := 1.000000
	251	[6765]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	252	[6765]	MOVE     	R19 R4 ; R19 := R4
	253	[6765]	LOADK    	R20 K6 ; R20 := "\">"
	254	[6765]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	255	[6765]	SETTABLE 	R17 K16 R18 ; R17["OPEN_COLOR"] := R18
	256	[6765]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	257	[6765]	MOVE     	R19 R5 ; R19 := R5
	258	[6765]	LOADK    	R20 K6 ; R20 := "\">"
	259	[6765]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	260	[6765]	SETTABLE 	R17 K18 R18 ; R17["CLOSE_COLOR"] := R18
	261	[6765]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	262	[6765]	LOADK    	R14 K10 ; R14 := "<br>"
	263	[6765]	CONCAT   	R6 R12 R14 ; R6 := R12 .. R13 .. R14
	264	[6767]	MOVE     	R12 R6 ; R12 := R6
	265	[6767]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	266	[6767]	LOADK    	R15 K48 ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpReactant"
	267	[6767]	OP_LOADBOOL	R16 1 0 ; R16 := true
	268	[6767]	NEWTABLE 	R17 0 3 ; R17 := {}
	269	[6767]	SETTABLE 	R17 K38 K49 ; R17["NUM"] := 50.000000
	270	[6767]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	271	[6767]	MOVE     	R19 R4 ; R19 := R4
	272	[6767]	LOADK    	R20 K6 ; R20 := "\">"
	273	[6767]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	274	[6767]	SETTABLE 	R17 K16 R18 ; R17["OPEN_COLOR"] := R18
	275	[6767]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	276	[6767]	MOVE     	R19 R5 ; R19 := R5
	277	[6767]	LOADK    	R20 K6 ; R20 := "\">"
	278	[6767]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	279	[6767]	SETTABLE 	R17 K18 R18 ; R17["CLOSE_COLOR"] := R18
	280	[6767]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	281	[6767]	CONCAT   	R6 R12 R13 ; R6 := R12 .. R13
	282	[6768]	MOVE     	R12 R6 ; R12 := R6
	283	[6768]	LOADK    	R13 K50 ; R13 := "</font></p>"
	284	[6768]	CONCAT   	R6 R12 R13 ; R6 := R12 .. R13
	285	[6770]	RETURN   	R6 2 ; return R6 
	286	[6771]	RETURN   	R0 1 ; return 

function #341 <?:6773,6831> (121 instructions, 484 bytes at 0000025274F32A40)
3 params, 17 slots, 0 upvalues, 0 locals, 24 constants, 0 functions
	1	[6774]	NEWTABLE 	R3 0 0 ; R3 := {}
	2	[6776]	EQ       	1 R0 K1 ; if R0 == 0.000000 then PC := 6
	3	[6776]	JMP      	6 ; PC := 6
	4	[6776]	EQ       	0 R0 K2 ; if R0 ~= 3.000000 then PC := 30
	5	[6776]	JMP      	30 ; PC := 30
	6	[6777]	EQ       	0 R1 K1 ; if R1 ~= 0.000000 then PC := 12
	7	[6777]	JMP      	12 ; PC := 12
	8	[6778]	SELF     	R4 R2 K3 ; R5 := R2; R4 := R2[0x21a3da0c]
	9	[6778]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[6778]	MOVE     	R3 R4 ; R3 := R4
	11	[6778]	JMP      	120 ; PC := 120
	12	[6779]	EQ       	0 R1 K2 ; if R1 ~= 3.000000 then PC := 18
	13	[6779]	JMP      	18 ; PC := 18
	14	[6780]	SELF     	R4 R2 K4 ; R5 := R2; R4 := R2[0x0bf14f02]
	15	[6780]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[6780]	MOVE     	R3 R4 ; R3 := R4
	17	[6780]	JMP      	120 ; PC := 120
	18	[6781]	EQ       	0 R1 K5 ; if R1 ~= 2.000000 then PC := 24
	19	[6781]	JMP      	24 ; PC := 24
	20	[6782]	SELF     	R4 R2 K6 ; R5 := R2; R4 := R2[0x57d88957]
	21	[6782]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[6782]	MOVE     	R3 R4 ; R3 := R4
	23	[6782]	JMP      	120 ; PC := 120
	24	[6783]	EQ       	0 R1 K7 ; if R1 ~= 1.000000 then PC := 120
	25	[6783]	JMP      	120 ; PC := 120
	26	[6784]	SELF     	R4 R2 K8 ; R5 := R2; R4 := R2[0x215bf396]
	27	[6784]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[6784]	MOVE     	R3 R4 ; R3 := R4
	29	[6785]	JMP      	120 ; PC := 120
	30	[6786]	EQ       	0 R0 K5 ; if R0 ~= 2.000000 then PC := 50
	31	[6786]	JMP      	50 ; PC := 50
	32	[6787]	EQ       	0 R1 K1 ; if R1 ~= 0.000000 then PC := 38
	33	[6787]	JMP      	38 ; PC := 38
	34	[6788]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0x4bb8609a]
	35	[6788]	CALL     	R4 2 2 ; R4 := R4(R5)
	36	[6788]	MOVE     	R3 R4 ; R3 := R4
	37	[6788]	JMP      	120 ; PC := 120
	38	[6789]	EQ       	0 R1 K2 ; if R1 ~= 3.000000 then PC := 44
	39	[6789]	JMP      	44 ; PC := 44
	40	[6790]	SELF     	R4 R2 K10 ; R5 := R2; R4 := R2[0x3218c3b0]
	41	[6790]	CALL     	R4 2 2 ; R4 := R4(R5)
	42	[6790]	MOVE     	R3 R4 ; R3 := R4
	43	[6790]	JMP      	120 ; PC := 120
	44	[6791]	EQ       	0 R1 K5 ; if R1 ~= 2.000000 then PC := 120
	45	[6791]	JMP      	120 ; PC := 120
	46	[6792]	SELF     	R4 R2 K11 ; R5 := R2; R4 := R2[0x6f7b67d7]
	47	[6792]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[6792]	MOVE     	R3 R4 ; R3 := R4
	49	[6793]	JMP      	120 ; PC := 120
	50	[6794]	EQ       	0 R0 K12 ; if R0 ~= 6.000000 then PC := 58
	51	[6794]	JMP      	58 ; PC := 58
	52	[6795]	EQ       	0 R1 K1 ; if R1 ~= 0.000000 then PC := 120
	53	[6795]	JMP      	120 ; PC := 120
	54	[6796]	SELF     	R4 R2 K13 ; R5 := R2; R4 := R2[0x738deb95]
	55	[6796]	CALL     	R4 2 2 ; R4 := R4(R5)
	56	[6796]	MOVE     	R3 R4 ; R3 := R4
	57	[6797]	JMP      	120 ; PC := 120
	58	[6798]	EQ       	0 R0 K7 ; if R0 ~= 1.000000 then PC := 113
	59	[6798]	JMP      	113 ; PC := 113
	60	[6799]	EQ       	0 R1 K1 ; if R1 ~= 0.000000 then PC := 109
	61	[6799]	JMP      	109 ; PC := 109
	62	[6800]	SELF     	R4 R2 K14 ; R5 := R2; R4 := R2[0x2a207127]
	63	[6800]	CALL     	R4 2 2 ; R4 := R4(R5)
	64	[6800]	MOVE     	R3 R4 ; R3 := R4
	65	[6801]	TEST     	R3 1 ; if R3 then PC := 69
	66	[6801]	JMP      	69 ; PC := 69
	67	[6802]	NEWTABLE 	R4 0 0 ; R4 := {}
	68	[6802]	MOVE     	R3 R4 ; R3 := R4
	69	[6805]	SELF     	R4 R2 K15 ; R5 := R2; R4 := R2[0x91a3eddf]
	70	[6805]	CALL     	R4 2 2 ; R4 := R4(R5)
	71	[6806]	LOADK    	R5 := 1.000000
	72	[6806]	LEN      	R6 R4 ; R6 := # R4
	73	[6806]	LOADK    	R7 := 1.000000
	74	[6806]	FORPREP  	R5 80 ; R5 -= R7; PC := 80
	75	[6807]	GETGLOBAL	R9 K16 ; R9 := 0x33bdd652
	76	[6807]	GETTABLE 	R9 R9 K17 ; R9 := R9[0x23d5322f]
	77	[6807]	MOVE     	R10 R3 ; R10 := R3
	78	[6807]	GETTABLE 	R11 R4 R8 ; R11 := R4[R8]
	79	[6807]	CALL     	R9 3 1 ; R9(R10,R11)
	80	[6806]	FORLOOP  	R5 75 ; R5 += R7; if R5 <= R6 then begin PC := 75; R8 := R5 end
	81	[6810]	SELF     	R9 R2 K18 ; R10 := R2; R9 := R2[0xa855881a]
	82	[6810]	CALL     	R9 2 2 ; R9 := R9(R10)
	83	[6811]	LOADK    	R10 := 1.000000
	84	[6811]	LEN      	R11 R9 ; R11 := # R9
	85	[6811]	LOADK    	R12 := 1.000000
	86	[6811]	FORPREP  	R10 107 ; R10 -= R12; PC := 107
	87	[6814]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	88	[6814]	GETTABLE 	R14 R14 K19 ; R14 := R14["mDetails"]
	89	[6814]	GETTABLE 	R14 R14 K20 ; R14 := R14["mStatus"]
	90	[6814]	EQ       	1 R14 K2 ; if R14 == 3.000000 then PC := 107
	91	[6814]	JMP      	107 ; PC := 107
	92	[6815]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	93	[6815]	GETTABLE 	R14 R14 K19 ; R14 := R14["mDetails"]
	94	[6815]	GETTABLE 	R14 R14 K20 ; R14 := R14["mStatus"]
	95	[6815]	EQ       	1 R14 K1 ; if R14 == 0.000000 then PC := 107
	96	[6815]	JMP      	107 ; PC := 107
	97	[6816]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	98	[6816]	GETTABLE 	R14 R14 K19 ; R14 := R14["mDetails"]
	99	[6816]	GETTABLE 	R14 R14 K20 ; R14 := R14["mStatus"]
	100	[6816]	EQ       	1 R14 K7 ; if R14 == 1.000000 then PC := 107
	101	[6816]	JMP      	107 ; PC := 107
	102	[6818]	GETGLOBAL	R14 K16 ; R14 := 0x33bdd652
	103	[6818]	GETTABLE 	R14 R14 K17 ; R14 := R14[0x23d5322f]
	104	[6818]	MOVE     	R15 R3 ; R15 := R3
	105	[6818]	GETTABLE 	R16 R9 R13 ; R16 := R9[R13]
	106	[6818]	CALL     	R14 3 1 ; R14(R15,R16)
	107	[6811]	FORLOOP  	R10 87 ; R10 += R12; if R10 <= R11 then begin PC := 87; R13 := R10 end
	108	[6820]	JMP      	120 ; PC := 120
	109	[6822]	SELF     	R14 R2 K21 ; R15 := R2; R14 := R2[0xa2c6d8b7]
	110	[6822]	CALL     	R14 2 2 ; R14 := R14(R15)
	111	[6822]	MOVE     	R3 R14 ; R3 := R14
	112	[6823]	JMP      	120 ; PC := 120
	113	[6824]	EQ       	0 R0 K22 ; if R0 ~= 7.000000 then PC := 120
	114	[6824]	JMP      	120 ; PC := 120
	115	[6825]	EQ       	0 R1 K1 ; if R1 ~= 0.000000 then PC := 120
	116	[6825]	JMP      	120 ; PC := 120
	117	[6826]	SELF     	R14 R2 K23 ; R15 := R2; R14 := R2[0x8d6f4300]
	118	[6826]	CALL     	R14 2 2 ; R14 := R14(R15)
	119	[6826]	MOVE     	R3 R14 ; R3 := R14
	120	[6830]	RETURN   	R3 2 ; return R3 
	121	[6831]	RETURN   	R0 1 ; return 

function #342 <?:6833,6895> (203 instructions, 812 bytes at 0000025274F330D0)
5 params, 35 slots, 3 upvalues, 0 locals, 38 constants, 0 functions
	1	[6834]	LOADK    	R5 := 3.000000
	2	[6835]	NEWTABLE 	R6 3 0 ; R6 := {}
	3	[6836]	NEWTABLE 	R7 0 2 ; R7 := {}
	4	[6837]	SETTABLE 	R7 K0 K1 ; R7["IsSentinel"] := false
	5	[6837]	SETTABLE 	R7 K2 K4 ; R7["Id"] := 0.000000
	6	[6837]	NEWTABLE 	R8 0 2 ; R8 := {}
	7	[6838]	SETTABLE 	R8 K0 K1 ; R8["IsSentinel"] := false
	8	[6838]	SETTABLE 	R8 K2 K5 ; R8["Id"] := 2.000000
	9	[6838]	NEWTABLE 	R9 0 2 ; R9 := {}
	10	[6839]	SETTABLE 	R9 K0 K1 ; R9["IsSentinel"] := false
	11	[6839]	SETTABLE 	R9 K2 K6 ; R9["Id"] := 3.000000
	12	[6840]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	13	[6841]	EQ       	1 R2 K4 ; if R2 == 0.000000 then PC := 17
	14	[6841]	JMP      	17 ; PC := 17
	15	[6841]	EQ       	0 R2 K6 ; if R2 ~= 3.000000 then PC := 26
	16	[6841]	JMP      	26 ; PC := 26
	17	[6842]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	18	[6842]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	19	[6842]	MOVE     	R8 R6 ; R8 := R6
	20	[6842]	LOADK    	R9 := 3.000000
	21	[6842]	NEWTABLE 	R10 0 2 ; R10 := {}
	22	[6842]	SETTABLE 	R10 K0 K1 ; R10["IsSentinel"] := false
	23	[6842]	SETTABLE 	R10 K2 K9 ; R10["Id"] := 1.000000
	24	[6842]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	25	[6843]	LOADK    	R5 := 4.000000
	26	[6845]	EQ       	1 R1 K10 ; if R1 == nil then PC := 42
	27	[6845]	JMP      	42 ; PC := 42
	28	[6846]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	29	[6846]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	30	[6846]	MOVE     	R8 R6 ; R8 := R6
	31	[6846]	NEWTABLE 	R9 0 2 ; R9 := {}
	32	[6846]	SETTABLE 	R9 K0 K11 ; R9["IsSentinel"] := true
	33	[6846]	SETTABLE 	R9 K2 K4 ; R9["Id"] := 0.000000
	34	[6846]	CALL     	R7 3 1 ; R7(R8,R9)
	35	[6847]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	36	[6847]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	37	[6847]	MOVE     	R8 R6 ; R8 := R6
	38	[6847]	NEWTABLE 	R9 0 2 ; R9 := {}
	39	[6847]	SETTABLE 	R9 K0 K11 ; R9["IsSentinel"] := true
	40	[6847]	SETTABLE 	R9 K2 K5 ; R9["Id"] := 2.000000
	41	[6847]	CALL     	R7 3 1 ; R7(R8,R9)
	42	[6850]	NEWTABLE 	R7 0 0 ; R7 := {}
	43	[6851]	LOADNIL  	R8 R8 ; R8 := nil
	44	[6852]	GETGLOBAL	R9 K12 ; R9 := 0x7b998233
	45	[6852]	MOVE     	R10 R4 ; R10 := R4
	46	[6852]	CALL     	R9 2 2 ; R9 := R9(R10)
	47	[6852]	TEST     	R9 1 ; if R9 then PC := 50
	48	[6852]	JMP      	50 ; PC := 50
	49	[6853]	LOADK    	R8 K13 ; R8 := "<p>"
	50	[6856]	GETUPVAL 	R9 U0 ; R9 := U0
	51	[6856]	CALL     	R9 1 3 ; R9,R10 := R9()
	52	[6857]	LOADK    	R11 := 1.000000
	53	[6857]	LEN      	R12 R6 ; R12 := # R6
	54	[6857]	LOADK    	R13 := 1.000000
	55	[6857]	FORPREP  	R11 194 ; R11 -= R13; PC := 194
	56	[6858]	GETUPVAL 	R15 U1 ; R15 := U1
	57	[6858]	GETTABLE 	R15 R15 K14 ; R15 := R15[0x06d055f9]
	58	[6858]	EQ       	1 R14 R5 ; if R14 == R5 then PC := 61
	59	[6858]	JMP      	61 ; PC := 61
	60	[6858]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 61
	61	[6858]	OP_LOADBOOL	R16 1 0 ; R16 := true
	62	[6858]	LOADK    	R17 K15 ; R17 := ""
	63	[6858]	LOADK    	R18 K16 ; R18 := "<br>"
	64	[6858]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	65	[6859]	GETUPVAL 	R16 U1 ; R16 := U1
	66	[6859]	GETTABLE 	R16 R16 K14 ; R16 := R16[0x06d055f9]
	67	[6859]	GETTABLE 	R17 R6 R14 ; R17 := R6[R14]
	68	[6859]	GETTABLE 	R17 R17 K0 ; R17 := R17["IsSentinel"]
	69	[6859]	MOVE     	R18 R1 ; R18 := R1
	70	[6859]	MOVE     	R19 R0 ; R19 := R0
	71	[6859]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	72	[6860]	GETGLOBAL	R17 K12 ; R17 := 0x7b998233
	73	[6860]	MOVE     	R18 R16 ; R18 := R16
	74	[6860]	CALL     	R17 2 2 ; R17 := R17(R18)
	75	[6860]	TEST     	R17 1 ; if R17 then PC := 194
	76	[6860]	JMP      	194 ; PC := 194
	77	[6861]	SELF     	R17 R16 K17 ; R18 := R16; R17 := R16[0x2abbe722]
	78	[6861]	GETTABLE 	R19 R6 R14 ; R19 := R6[R14]
	79	[6861]	GETTABLE 	R19 R19 K2 ; R19 := R19["Id"]
	80	[6861]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	81	[6862]	GETTABLE 	R18 R17 K18 ; R18 := R17["mItemId"]
	82	[6862]	GETTABLE 	R18 R18 K19 ; R18 := R18["mId"]
	83	[6862]	GETGLOBAL	R19 K3 ; R19 := 0x6c97a788
	84	[6862]	GETTABLE 	R19 R19 K20 ; R19 := R19["InvalidItemID"]
	85	[6862]	EQ       	1 R18 R19 ; if R18 == R19 then PC := 177
	86	[6862]	JMP      	177 ; PC := 177
	87	[6863]	GETUPVAL 	R18 U2 ; R18 := U2
	88	[6863]	GETUPVAL 	R19 U1 ; R19 := U1
	89	[6863]	GETTABLE 	R19 R19 K14 ; R19 := R19[0x06d055f9]
	90	[6863]	GETTABLE 	R20 R6 R14 ; R20 := R6[R14]
	91	[6863]	GETTABLE 	R20 R20 K0 ; R20 := R20["IsSentinel"]
	92	[6863]	LOADK    	R21 := 1.000000
	93	[6863]	MOVE     	R22 R2 ; R22 := R2
	94	[6863]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	95	[6863]	GETTABLE 	R20 R6 R14 ; R20 := R6[R14]
	96	[6863]	GETTABLE 	R20 R20 K2 ; R20 := R20["Id"]
	97	[6863]	MOVE     	R21 R3 ; R21 := R3
	98	[6863]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	99	[6864]	LOADK    	R19 := 1.000000
	100	[6864]	LEN      	R20 R18 ; R20 := # R18
	101	[6864]	LOADK    	R21 := 1.000000
	102	[6864]	FORPREP  	R19 175 ; R19 -= R21; PC := 175
	103	[6865]	GETTABLE 	R23 R18 R22 ; R23 := R18[R22]
	104	[6865]	GETTABLE 	R23 R23 K18 ; R23 := R23["mItemId"]
	105	[6865]	GETTABLE 	R23 R23 K19 ; R23 := R23["mId"]
	106	[6865]	GETTABLE 	R24 R17 K18 ; R24 := R17["mItemId"]
	107	[6865]	GETTABLE 	R24 R24 K19 ; R24 := R24["mId"]
	108	[6865]	EQ       	0 R23 R24 ; if R23 ~= R24 then PC := 175
	109	[6865]	JMP      	175 ; PC := 175
	110	[6866]	GETGLOBAL	R23 K7 ; R23 := 0x33bdd652
	111	[6866]	GETTABLE 	R23 R23 K8 ; R23 := R23[0x23d5322f]
	112	[6866]	MOVE     	R24 R7 ; R24 := R7
	113	[6866]	GETTABLE 	R25 R18 R22 ; R25 := R18[R22]
	114	[6866]	GETTABLE 	R25 R25 K21 ; R25 := R25["mItemType"]
	115	[6866]	CALL     	R23 3 1 ; R23(R24,R25)
	116	[6867]	GETGLOBAL	R23 K12 ; R23 := 0x7b998233
	117	[6867]	MOVE     	R24 R4 ; R24 := R4
	118	[6867]	CALL     	R23 2 2 ; R23 := R23(R24)
	119	[6867]	TEST     	R23 1 ; if R23 then PC := 194
	120	[6867]	JMP      	194 ; PC := 194
	121	[6867]	GETTABLE 	R23 R6 R14 ; R23 := R6[R14]
	122	[6867]	GETTABLE 	R23 R23 K0 ; R23 := R23["IsSentinel"]
	123	[6867]	TEST     	R23 1 ; if R23 then PC := 194
	124	[6867]	JMP      	194 ; PC := 194
	125	[6868]	SELF     	R23 R4 K22 ; R24 := R4; R23 := R4[0x105074fb]
	126	[6868]	GETTABLE 	R25 R18 R22 ; R25 := R18[R22]
	127	[6868]	GETTABLE 	R25 R25 K21 ; R25 := R25["mItemType"]
	128	[6868]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	129	[6869]	GETGLOBAL	R24 K12 ; R24 := 0x7b998233
	130	[6869]	MOVE     	R25 R23 ; R25 := R23
	131	[6869]	CALL     	R24 2 2 ; R24 := R24(R25)
	132	[6869]	TEST     	R24 1 ; if R24 then PC := 167
	133	[6869]	JMP      	167 ; PC := 167
	134	[6870]	LOADK    	R24 := 0.000000
	135	[6871]	GETTABLE 	R25 R18 R22 ; R25 := R18[R22]
	136	[6871]	GETTABLE 	R25 R25 K23 ; R25 := R25["mXP"]
	137	[6871]	EQ       	1 R25 K10 ; if R25 == nil then PC := 147
	138	[6871]	JMP      	147 ; PC := 147
	139	[6872]	GETGLOBAL	R25 K24 ; R25 := 0xa94df70b
	140	[6872]	SELF     	R25 R25 K25 ; R26 := R25; R25 := R25[0x8427bf69]
	141	[6872]	GETTABLE 	R27 R18 R22 ; R27 := R18[R22]
	142	[6872]	GETTABLE 	R27 R27 K23 ; R27 := R27["mXP"]
	143	[6872]	GETTABLE 	R28 R18 R22 ; R28 := R18[R22]
	144	[6872]	GETTABLE 	R28 R28 K21 ; R28 := R28["mItemType"]
	145	[6872]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	146	[6872]	MOVE     	R24 R25 ; R24 := R25
	147	[6875]	MOVE     	R25 R8 ; R25 := R8
	148	[6875]	LOADK    	R26 K26 ; R26 := "<font color=\""
	149	[6875]	MOVE     	R27 R10 ; R27 := R10
	150	[6875]	LOADK    	R28 K27 ; R28 := "\">"
	151	[6875]	GETGLOBAL	R29 K28 ; R29 := 0x603636ad
	152	[6875]	SELF     	R30 R23 K29 ; R31 := R23; R30 := R23[0xd3a9d01f]
	153	[6875]	CALL     	R30 2 2 ; R30 := R30(R31)
	154	[6875]	SELF     	R30 R30 K30 ; R31 := R30; R30 := R30[0x6d604ba7]
	155	[6875]	CALL     	R30 2 2 ; R30 := R30(R31)
	156	[6875]	NEWTABLE 	R31 0 0 ; R31 := {}
	157	[6875]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	158	[6875]	LOADK    	R30 K31 ; R30 := " ["
	159	[6875]	GETGLOBAL	R31 K32 ; R31 := 0x64fb1586
	160	[6875]	MOVE     	R32 R24 ; R32 := R24
	161	[6875]	CALL     	R31 2 2 ; R31 := R31(R32)
	162	[6875]	LOADK    	R32 K33 ; R32 := "]"
	163	[6875]	MOVE     	R33 R15 ; R33 := R15
	164	[6875]	LOADK    	R34 K34 ; R34 := "</font>"
	165	[6875]	CONCAT   	R8 R25 R34 ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31 .. R32 .. R33 .. R34
	166	[6875]	JMP      	194 ; PC := 194
	167	[6877]	MOVE     	R25 R8 ; R25 := R8
	168	[6877]	LOADK    	R26 K26 ; R26 := "<font color=\""
	169	[6877]	MOVE     	R27 R10 ; R27 := R10
	170	[6877]	LOADK    	R28 K35 ; R28 := "\">---"
	171	[6877]	MOVE     	R29 R15 ; R29 := R15
	172	[6877]	LOADK    	R30 K34 ; R30 := "</font>"
	173	[6877]	CONCAT   	R8 R25 R30 ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30
	174	[6881]	JMP      	194 ; PC := 194
	175	[6864]	FORLOOP  	R19 103 ; R19 += R21; if R19 <= R20 then begin PC := 103; R22 := R19 end
	176	[6883]	JMP      	194 ; PC := 194
	177	[6884]	EQ       	1 R8 K10 ; if R8 == nil then PC := 194
	178	[6884]	JMP      	194 ; PC := 194
	179	[6884]	GETTABLE 	R25 R6 R14 ; R25 := R6[R14]
	180	[6884]	GETTABLE 	R25 R25 K0 ; R25 := R25["IsSentinel"]
	181	[6884]	TEST     	R25 1 ; if R25 then PC := 194
	182	[6884]	JMP      	194 ; PC := 194
	183	[6885]	MOVE     	R25 R8 ; R25 := R8
	184	[6885]	LOADK    	R26 K26 ; R26 := "<font color=\""
	185	[6885]	MOVE     	R27 R9 ; R27 := R9
	186	[6885]	LOADK    	R28 K27 ; R28 := "\">"
	187	[6885]	GETGLOBAL	R29 K28 ; R29 := 0x603636ad
	188	[6885]	LOADK    	R30 K36 ; R30 := "/Lotus/Language/Menu/Cosmetics_None"
	189	[6885]	NEWTABLE 	R31 0 0 ; R31 := {}
	190	[6885]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	191	[6885]	MOVE     	R30 R15 ; R30 := R15
	192	[6885]	LOADK    	R31 K34 ; R31 := "</font>"
	193	[6885]	CONCAT   	R8 R25 R31 ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31
	194	[6857]	FORLOOP  	R11 56 ; R11 += R13; if R11 <= R12 then begin PC := 56; R14 := R11 end
	195	[6890]	EQ       	1 R8 K10 ; if R8 == nil then PC := 200
	196	[6890]	JMP      	200 ; PC := 200
	197	[6891]	MOVE     	R25 R8 ; R25 := R8
	198	[6891]	LOADK    	R26 K37 ; R26 := "</p>"
	199	[6891]	CONCAT   	R8 R25 R26 ; R8 := R25 .. R26
	200	[6894]	MOVE     	R25 R7 ; R25 := R7
	201	[6894]	MOVE     	R26 R8 ; R26 := R8
	202	[6894]	RETURN   	R25 3 ; return R25, R26 
	203	[6895]	RETURN   	R0 1 ; return 

function #343 <?:6897,6899> (9 instructions, 36 bytes at 0000025274F33B40)
5 params, 11 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6898]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[6898]	MOVE     	R6 R0 ; R6 := R0
	3	[6898]	MOVE     	R7 R1 ; R7 := R1
	4	[6898]	MOVE     	R8 R2 ; R8 := R2
	5	[6898]	MOVE     	R9 R3 ; R9 := R3
	6	[6898]	MOVE     	R10 R4 ; R10 := R4
	7	[6898]	TAILCALL 	R5 6 0 ; R5,... := R5(R6,R7,R8,R9,R10)
	8	[6898]	RETURN   	R5 0 ; return R5,... 
	9	[6899]	RETURN   	R0 1 ; return 

function #344 <?:6901,6905> (14 instructions, 56 bytes at 0000025274F33C50)
1 param, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6902]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	2	[6902]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x1a94c9cc]
	3	[6902]	MOVE     	R2 R0 ; R2 := R0
	4	[6902]	LOADK    	R3 := -1.000000
	5	[6902]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[6902]	LOADK    	R2 K2 ; R2 := "/"
	7	[6902]	CONCAT   	R1 R1 R2 ; R1 := R1 .. R2
	8	[6904]	LOADK    	R2 K3 ; R2 := "/Lotus/Interface/ClanEmblems/"
	9	[6904]	MOVE     	R3 R1 ; R3 := R1
	10	[6904]	MOVE     	R4 R0 ; R4 := R0
	11	[6904]	LOADK    	R5 K4 ; R5 := "_em.png"
	12	[6904]	CONCAT   	R2 R2 R5 ; R2 := R2 .. R3 .. R4 .. R5
	13	[6904]	RETURN   	R2 2 ; return R2 
	14	[6905]	RETURN   	R0 1 ; return 

function #345 <?:6907,6951> (83 instructions, 332 bytes at 0000025274F33E60)
1 param, 14 slots, 0 upvalues, 0 locals, 20 constants, 0 functions
	1	[6908]	GETTABLE 	R1 R0 K0 ; R1 := R0["mCount"]
	2	[6909]	LOADK    	R2 := 0.000000
	3	[6910]	GETTABLE 	R3 R0 K1 ; R3 := R0["mGoal"]
	4	[6912]	GETTABLE 	R4 R0 K2 ; R4 := R0["mPersonal"]
	5	[6912]	TEST     	R4 1 ; if R4 then PC := 10
	6	[6912]	JMP      	10 ; PC := 10
	7	[6912]	GETTABLE 	R4 R0 K3 ; R4 := R0["mInvasion"]
	8	[6912]	TEST     	R4 0 ; if not R4 then PC := 79
	9	[6912]	JMP      	79 ; PC := 79
	10	[6913]	GETTABLE 	R4 R0 K4 ; R4 := R0["mTag"]
	11	[6913]	GETGLOBAL	R5 K5 ; R5 := 0x0469f296
	12	[6913]	LOADK    	R6 K6 ; R6 := "HeatFissure"
	13	[6913]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[6913]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 17
	15	[6913]	JMP      	17 ; PC := 17
	16	[6914]	LOADK    	R1 := 0.000000
	17	[6916]	GETGLOBAL	R4 K7 ; R4 := 0x25d99d89
	18	[6917]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	19	[6917]	MOVE     	R6 R4 ; R6 := R4
	20	[6917]	CALL     	R5 2 2 ; R5 := R5(R6)
	21	[6917]	TEST     	R5 1 ; if R5 then PC := 76
	22	[6917]	JMP      	76 ; PC := 76
	23	[6919]	LOADNIL  	R5 R5 ; R5 := nil
	24	[6922]	GETTABLE 	R6 R0 K9 ; R6 := R0["mClanGoal"]
	25	[6922]	LEN      	R6 R6 ; R6 := # R6
	26	[6922]	LT       	1 K10 R6 ; if 0.000000 < R6 then PC := 29
	27	[6922]	JMP      	29 ; PC := 29
	28	[6922]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 29
	29	[6922]	OP_LOADBOOL	R6 1 0 ; R6 := true
	30	[6923]	TEST     	R6 0 ; if not R6 then PC := 40
	31	[6923]	JMP      	40 ; PC := 40
	32	[6923]	SELF     	R7 R4 K11 ; R8 := R4; R7 := R4[0x713ce380]
	33	[6923]	CALL     	R7 2 2 ; R7 := R7(R8)
	34	[6923]	EQ       	1 R7 K12 ; if R7 == "" then PC := 40
	35	[6923]	JMP      	40 ; PC := 40
	36	[6924]	SELF     	R7 R4 K13 ; R8 := R4; R7 := R4[0x6b5dc079]
	37	[6924]	CALL     	R7 2 2 ; R7 := R7(R8)
	38	[6924]	MOVE     	R5 R7 ; R5 := R7
	39	[6924]	JMP      	43 ; PC := 43
	40	[6926]	SELF     	R7 R4 K14 ; R8 := R4; R7 := R4[0x9897ecc6]
	41	[6926]	CALL     	R7 2 2 ; R7 := R7(R8)
	42	[6926]	MOVE     	R5 R7 ; R5 := R7
	43	[6929]	LOADK    	R7 := 1.000000
	44	[6929]	LEN      	R8 R5 ; R8 := # R5
	45	[6929]	LOADK    	R9 := 1.000000
	46	[6929]	FORPREP  	R7 74 ; R7 -= R9; PC := 74
	47	[6930]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	48	[6930]	GETTABLE 	R11 R11 K15 ; R11 := R11["mId"]
	49	[6930]	GETTABLE 	R11 R11 K15 ; R11 := R11["mId"]
	50	[6930]	GETTABLE 	R12 R0 K15 ; R12 := R0["mId"]
	51	[6930]	GETTABLE 	R12 R12 K15 ; R12 := R12["mId"]
	52	[6930]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 74
	53	[6930]	JMP      	74 ; PC := 74
	54	[6931]	GETTABLE 	R11 R0 K16 ; R11 := R0["mBest"]
	55	[6931]	TEST     	R11 0 ; if not R11 then PC := 60
	56	[6931]	JMP      	60 ; PC := 60
	57	[6932]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	58	[6932]	GETTABLE 	R1 R11 K16 ; R1 := R11["mBest"]
	59	[6932]	JMP      	71 ; PC := 71
	60	[6934]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	61	[6934]	GETTABLE 	R11 R11 K0 ; R11 := R11["mCount"]
	62	[6934]	GETTABLE 	R12 R0 K1 ; R12 := R0["mGoal"]
	63	[6934]	LT       	0 R12 R11 ; if R12 >= R11 then PC := 69
	64	[6934]	JMP      	69 ; PC := 69
	65	[6934]	GETTABLE 	R11 R0 K17 ; R11 := R0["mBonusGoal"]
	66	[6934]	LT       	0 K10 R11 ; if 0.000000 >= R11 then PC := 69
	67	[6934]	JMP      	69 ; PC := 69
	68	[6935]	GETTABLE 	R3 R0 K17 ; R3 := R0["mBonusGoal"]
	69	[6937]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	70	[6937]	GETTABLE 	R1 R11 K0 ; R1 := R11["mCount"]
	71	[6940]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	72	[6940]	GETTABLE 	R2 R11 K16 ; R2 := R11["mBest"]
	73	[6942]	JMP      	79 ; PC := 79
	74	[6929]	FORLOOP  	R7 47 ; R7 += R9; if R7 <= R8 then begin PC := 47; R10 := R7 end
	75	[6944]	JMP      	79 ; PC := 79
	76	[6946]	GETGLOBAL	R11 K18 ; R11 := 0x3d106989
	77	[6946]	LOADK    	R12 K19 ; R12 := "GetPersonalGoalProgress: profile or gamedata is nil"
	78	[6946]	CALL     	R11 2 1 ; R11(R12)
	79	[6950]	MOVE     	R11 R1 ; R11 := R1
	80	[6950]	MOVE     	R12 R2 ; R12 := R2
	81	[6950]	MOVE     	R13 R3 ; R13 := R3
	82	[6950]	RETURN   	R11 4 ; return R11, R12, R13 
	83	[6951]	RETURN   	R0 1 ; return 

function #346 <?:6953,7015> (97 instructions, 388 bytes at 0000025274F34530)
1 param, 20 slots, 1 upvalue, 0 locals, 35 constants, 0 functions
	1	[6954]	LOADK    	R1 := 1.000000
	2	[6956]	GETGLOBAL	R2 K0 ; R2 := _T
	3	[6956]	GETGLOBAL	R3 K2 ; R3 := 0x7f5022cf
	4	[6956]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x04981ab3]
	5	[6956]	GETGLOBAL	R4 K4 ; R4 := 0x9ba7909f
	6	[6956]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x0b1c45c5]
	7	[6956]	LOADK    	R6 K6 ; R6 := "LotusGameRules.ForceElementalCarrier"
	8	[6956]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	9	[6956]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	10	[6956]	SETTABLE 	R2 K1 R3 ; R2["DebugElementalCarrier"] := R3
	11	[6957]	GETGLOBAL	R2 K0 ; R2 := _T
	12	[6957]	GETTABLE 	R2 R2 K1 ; R2 := R2["DebugElementalCarrier"]
	13	[6957]	EQ       	1 R2 K7 ; if R2 == "" then PC := 19
	14	[6957]	JMP      	19 ; PC := 19
	15	[6958]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[6958]	LOADK    	R3 := 0.000000
	17	[6958]	RETURN   	R2 3 ; return R2, R3 
	18	[6958]	JMP      	95 ; PC := 95
	19	[6981]	EQ       	1 R0 K8 ; if R0 == nil then PC := 95
	20	[6981]	JMP      	95 ; PC := 95
	21	[6982]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	22	[6982]	GETTABLE 	R3 R0 K10 ; R3 := R0["keyChainName"]
	23	[6982]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[6982]	TEST     	R2 0 ; if not R2 then PC := 95
	25	[6982]	JMP      	95 ; PC := 95
	26	[6982]	GETTABLE 	R2 R0 K11 ; R2 := R0["missionType"]
	27	[6982]	EQ       	1 R2 K13 ; if R2 == 18.000000 then PC := 95
	28	[6982]	JMP      	95 ; PC := 95
	29	[6983]	GETGLOBAL	R2 K14 ; R2 := 0xa94df70b
	30	[6983]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0xa93da813]
	31	[6983]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[6984]	GETGLOBAL	R3 K16 ; R3 := 0x25d99d89
	33	[6985]	GETGLOBAL	R4 K9 ; R4 := 0x7b998233
	34	[6985]	MOVE     	R5 R3 ; R5 := R3
	35	[6985]	CALL     	R4 2 2 ; R4 := R4(R5)
	36	[6985]	TEST     	R4 1 ; if R4 then PC := 95
	37	[6985]	JMP      	95 ; PC := 95
	38	[6986]	GETGLOBAL	R4 K17 ; R4 := 0xc8802016
	39	[6986]	SELF     	R5 R3 K18 ; R6 := R3; R5 := R3[0x69727e0b]
	40	[6986]	CALL     	R5 2 2 ; R5 := R5(R6)
	41	[6986]	GETTABLE 	R5 R5 K19 ; R5 := R5["mGoals"]
	42	[6986]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	43	[6986]	JMP      	93 ; PC := 93
	44	[6987]	GETTABLE 	R9 R8 K20 ; R9 := R8["mTag"]
	45	[6987]	EQ       	0 R9 R2 ; if R9 ~= R2 then PC := 93
	46	[6987]	JMP      	93 ; PC := 93
	47	[6987]	GETGLOBAL	R9 K21 ; R9 := 0x34291f5c
	48	[6987]	GETTABLE 	R9 R9 K22 ; R9 := R9[0x397b920f]
	49	[6987]	GETTABLE 	R10 R8 K23 ; R10 := R8["mActivation"]
	50	[6987]	CALL     	R9 2 2 ; R9 := R9(R10)
	51	[6987]	LT       	0 R9 K24 ; if R9 >= 0.000000 then PC := 93
	52	[6987]	JMP      	93 ; PC := 93
	53	[6987]	GETGLOBAL	R9 K21 ; R9 := 0x34291f5c
	54	[6987]	GETTABLE 	R9 R9 K22 ; R9 := R9[0x397b920f]
	55	[6987]	GETTABLE 	R10 R8 K25 ; R10 := R8["mExpiry"]
	56	[6987]	CALL     	R9 2 2 ; R9 := R9(R10)
	57	[6987]	LT       	0 K24 R9 ; if 0.000000 >= R9 then PC := 93
	58	[6987]	JMP      	93 ; PC := 93
	59	[6988]	GETTABLE 	R9 R0 K26 ; R9 := R0["location"]
	60	[6990]	GETGLOBAL	R10 K27 ; R10 := EMPTY_SYMBOL
	61	[6990]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 93
	62	[6990]	JMP      	93 ; PC := 93
	63	[6991]	GETUPVAL 	R10 U0 ; R10 := U0
	64	[6991]	CALL     	R10 1 2 ; R10 := R10()
	65	[6991]	SELF     	R10 R10 K28 ; R11 := R10; R10 := R10[0x3ad9ed31]
	66	[6991]	GETTABLE 	R12 R0 K26 ; R12 := R0["location"]
	67	[6991]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	68	[6993]	GETTABLE 	R11 R10 K29 ; R11 := R10["nodeType"]
	69	[6993]	EQ       	1 R11 K30 ; if R11 == 7.000000 then PC := 77
	70	[6993]	JMP      	77 ; PC := 77
	71	[6993]	GETTABLE 	R11 R0 K26 ; R11 := R0["location"]
	72	[6993]	GETGLOBAL	R12 K31 ; R12 := 0x0469f296
	73	[6993]	GETTABLE 	R13 R8 K32 ; R13 := R8["mNode"]
	74	[6993]	CALL     	R12 2 2 ; R12 := R12(R13)
	75	[6993]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 79
	76	[6993]	JMP      	79 ; PC := 79
	77	[6994]	OP_LOADBOOL	R11 0 0 ; R11 := false
	78	[6994]	RETURN   	R11 2 ; return R11 
	79	[6997]	GETTABLE 	R11 R10 K33 ; R11 := R10["region"]
	80	[6999]	GETTABLE 	R12 R8 K34 ; R12 := R8["mRegions"]
	81	[7000]	GETGLOBAL	R13 K17 ; R13 := 0xc8802016
	82	[7000]	MOVE     	R14 R12 ; R14 := R12
	83	[7000]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	84	[7000]	JMP      	90 ; PC := 90
	85	[7001]	EQ       	0 R11 R17 ; if R11 ~= R17 then PC := 90
	86	[7001]	JMP      	90 ; PC := 90
	87	[7002]	OP_LOADBOOL	R18 1 0 ; R18 := true
	88	[7002]	MOVE     	R19 R1 ; R19 := R1
	89	[7002]	RETURN   	R18 3 ; return R18, R19 
	90	[7000]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 85; R15 := R16 end
	91	[7003]	JMP      	85 ; PC := 85
	92	[7006]	JMP      	95 ; PC := 95
	93	[6986]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 44; R6 := R7 end
	94	[7008]	JMP      	44 ; PC := 44
	95	[7014]	OP_LOADBOOL	R18 0 0 ; R18 := false
	96	[7014]	RETURN   	R18 2 ; return R18 
	97	[7015]	RETURN   	R0 1 ; return 

function #347 <?:7017,7052> (77 instructions, 308 bytes at 0000025274F34C10)
2 params, 16 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[7018]	GETGLOBAL	R2 K0 ; R2 := 0x89326c93
	2	[7018]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x18d05d30]
	3	[7018]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[7018]	TEST     	R2 1 ; if R2 then PC := 7
	5	[7018]	JMP      	7 ; PC := 7
	6	[7019]	RETURN   	R0 1 ; return 
	7	[7022]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	8	[7022]	MOVE     	R3 R0 ; R3 := R0
	9	[7022]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[7022]	TEST     	R2 1 ; if R2 then PC := 17
	11	[7022]	JMP      	17 ; PC := 17
	12	[7022]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	13	[7022]	MOVE     	R3 R1 ; R3 := R1
	14	[7022]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[7022]	TEST     	R2 0 ; if not R2 then PC := 18
	16	[7022]	JMP      	18 ; PC := 18
	17	[7023]	RETURN   	R0 1 ; return 
	18	[7026]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0xde321e6f]
	19	[7026]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[7027]	LOADK    	R3 := 0.000000
	21	[7029]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	22	[7029]	SELF     	R5 R2 K5 ; R6 := R2; R5 := R2[0x881b6b90]
	23	[7029]	LOADK    	R7 := 0.000000
	24	[7029]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	25	[7029]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	26	[7029]	TEST     	R4 0 ; if not R4 then PC := 32
	27	[7029]	JMP      	32 ; PC := 32
	28	[7030]	GETGLOBAL	R4 K6 ; R4 := 0xcbd666e1
	29	[7030]	LOADK    	R5 := 0.000000
	30	[7030]	CALL     	R4 2 1 ; R4(R5)
	31	[7030]	JMP      	21 ; PC := 21
	32	[7033]	NEWTABLE 	R4 3 0 ; R4 := {}
	33	[7033]	LOADK    	R5 := 0.000000
	34	[7033]	LOADK    	R6 := 1.000000
	35	[7033]	LOADK    	R7 := 5.000000
	36	[7033]	SETLIST  	R4 3 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
	37	[7034]	GETGLOBAL	R5 K7 ; R5 := 0xcfc01047
	38	[7034]	MOVE     	R6 R4 ; R6 := R4
	39	[7034]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	40	[7034]	JMP      	68 ; PC := 68
	41	[7035]	SELF     	R10 R2 K8 ; R11 := R2; R10 := R2[0xe85a2361]
	42	[7035]	MOVE     	R12 R9 ; R12 := R9
	43	[7035]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	44	[7036]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	45	[7036]	MOVE     	R12 R10 ; R12 := R10
	46	[7036]	CALL     	R11 2 2 ; R11 := R11(R12)
	47	[7036]	TEST     	R11 1 ; if R11 then PC := 56
	48	[7036]	JMP      	56 ; PC := 56
	49	[7036]	SELF     	R11 R10 K9 ; R12 := R10; R11 := R10[0xf2deaf69]
	50	[7036]	MOVE     	R13 R1 ; R13 := R1
	51	[7036]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	52	[7036]	TEST     	R11 0 ; if not R11 then PC := 56
	53	[7036]	JMP      	56 ; PC := 56
	54	[7037]	MOVE     	R3 R9 ; R3 := R9
	55	[7037]	JMP      	68 ; PC := 68
	56	[7039]	SELF     	R11 R2 K10 ; R12 := R2; R11 := R2[0x4da725ce]
	57	[7039]	MOVE     	R13 R9 ; R13 := R9
	58	[7039]	CALL     	R11 3 1 ; R11(R12,R13)
	59	[7040]	GETGLOBAL	R11 K0 ; R11 := 0x89326c93
	60	[7040]	SELF     	R11 R11 K11 ; R12 := R11; R11 := R11[0x59c96e77]
	61	[7040]	MOVE     	R13 R10 ; R13 := R10
	62	[7040]	CALL     	R11 3 1 ; R11(R12,R13)
	63	[7042]	EQ       	0 R9 K12 ; if R9 ~= 5.000000 then PC := 68
	64	[7042]	JMP      	68 ; PC := 68
	65	[7045]	SELF     	R11 R2 K13 ; R12 := R2; R11 := R2[0xd80991c3]
	66	[7045]	LOADK    	R13 := 7.000000
	67	[7045]	CALL     	R11 3 1 ; R11(R12,R13)
	68	[7034]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 41; R7 := R8 end
	69	[7047]	JMP      	41 ; PC := 41
	70	[7050]	SELF     	R11 R2 K14 ; R12 := R2; R11 := R2[0xc69087f6]
	71	[7050]	MOVE     	R13 R3 ; R13 := R3
	72	[7050]	LOADK    	R14 := 0.000000
	73	[7050]	LOADK    	R15 := 2.000000
	74	[7050]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	75	[7051]	GETGLOBAL	R11 K15 ; R11 := _T
	76	[7051]	SETTABLE 	R11 K16 R3 ; R11["ExclusiveWeaponSlot"] := R3
	77	[7052]	RETURN   	R0 1 ; return 

function #348 <?:7054,7139> (121 instructions, 484 bytes at 0000025274F350A0)
2 params, 21 slots, 0 upvalues, 0 locals, 25 constants, 1 function
	1	[7055]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[7055]	MOVE     	R3 R0 ; R3 := R0
	3	[7055]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[7055]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[7055]	JMP      	7 ; PC := 7
	6	[7056]	RETURN   	R0 1 ; return 
	7	[7059]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0xde321e6f]
	8	[7059]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[7061]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	10	[7061]	MOVE     	R4 R2 ; R4 := R2
	11	[7061]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[7061]	TEST     	R3 0 ; if not R3 then PC := 15
	13	[7061]	JMP      	15 ; PC := 15
	14	[7062]	RETURN   	R0 1 ; return 
	15	[7065]	GETGLOBAL	R3 K2 ; R3 := 0xbe190284
	16	[7065]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x9dc2a61a]
	17	[7065]	OP_LOADBOOL	R5 1 0 ; R5 := true
	18	[7065]	CALL     	R3 3 1 ; R3(R4,R5)
	19	[7101]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	20	[7103]	MOVE     	R4 R3 ; R4 := R3
	21	[7103]	MOVE     	R5 R2 ; R5 := R2
	22	[7103]	CALL     	R4 2 1 ; R4(R5)
	23	[7105]	GETGLOBAL	R4 K2 ; R4 := 0xbe190284
	24	[7105]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x1934072c]
	25	[7105]	GETGLOBAL	R6 K5 ; R6 := gLotusAuraUpgradeType
	26	[7105]	MOVE     	R7 R0 ; R7 := R0
	27	[7105]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	28	[7106]	GETGLOBAL	R5 K6 ; R5 := 0xcfc01047
	29	[7106]	MOVE     	R6 R4 ; R6 := R4
	30	[7106]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	31	[7106]	JMP      	36 ; PC := 36
	32	[7107]	GETGLOBAL	R10 K7 ; R10 := 0x89326c93
	33	[7107]	SELF     	R10 R10 K8 ; R11 := R10; R10 := R10[0x59c96e77]
	34	[7107]	MOVE     	R12 R9 ; R12 := R9
	35	[7107]	CALL     	R10 3 1 ; R10(R11,R12)
	36	[7106]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 32; R7 := R8 end
	37	[7107]	JMP      	32 ; PC := 32
	38	[7111]	SELF     	R10 R0 K9 ; R11 := R0; R10 := R0[0x1ac1655c]
	39	[7111]	CALL     	R10 2 2 ; R10 := R10(R11)
	40	[7112]	SELF     	R11 R10 K10 ; R12 := R10; R11 := R10[0x57369b8b]
	41	[7112]	SELF     	R13 R10 K11 ; R14 := R10; R13 := R10[0xb87f958d]
	42	[7112]	CALL     	R13 2 0 ; R13,... := R13(R14)
	43	[7112]	CALL     	R11 0 1 ; R11(R12,...)
	44	[7114]	LOADNIL  	R11 R11 ; R11 := nil
	45	[7115]	SELF     	R12 R0 K12 ; R13 := R0; R12 := R0[0x5b89142c]
	46	[7115]	CALL     	R12 2 2 ; R12 := R12(R13)
	47	[7116]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	48	[7116]	MOVE     	R14 R12 ; R14 := R12
	49	[7116]	CALL     	R13 2 2 ; R13 := R13(R14)
	50	[7116]	TEST     	R13 1 ; if R13 then PC := 110
	51	[7116]	JMP      	110 ; PC := 110
	52	[7117]	SELF     	R13 R12 K13 ; R14 := R12; R13 := R12[0x62c81b76]
	53	[7117]	CALL     	R13 2 2 ; R13 := R13(R14)
	54	[7117]	GETTABLE 	R13 R13 K14 ; R13 := R13["mPetType"]
	55	[7118]	EQ       	1 R13 K16 ; if R13 == 5.000000 then PC := 110
	56	[7118]	JMP      	110 ; PC := 110
	57	[7118]	GETGLOBAL	R14 K2 ; R14 := 0xbe190284
	58	[7118]	SELF     	R14 R14 K17 ; R15 := R14; R14 := R14[0xc7b09a65]
	59	[7118]	CALL     	R14 2 2 ; R14 := R14(R15)
	60	[7118]	TEST     	R14 0 ; if not R14 then PC := 110
	61	[7118]	JMP      	110 ; PC := 110
	62	[7119]	OP_LOADBOOL	R14 0 0 ; R14 := false
	63	[7120]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	64	[7120]	MOVE     	R16 R11 ; R16 := R11
	65	[7120]	CALL     	R15 2 2 ; R15 := R15(R16)
	66	[7120]	TEST     	R15 0 ; if not R15 then PC := 101
	67	[7120]	JMP      	101 ; PC := 101
	68	[7120]	TEST     	R14 1 ; if R14 then PC := 101
	69	[7120]	JMP      	101 ; PC := 101
	70	[7121]	SELF     	R15 R12 K13 ; R16 := R12; R15 := R12[0x62c81b76]
	71	[7121]	CALL     	R15 2 2 ; R15 := R15(R16)
	72	[7121]	SELF     	R15 R15 K18 ; R16 := R15; R15 := R15[0x8af486d8]
	73	[7121]	CALL     	R15 2 2 ; R15 := R15(R16)
	74	[7121]	TESTSET  	R14 R15 0 ; if not R15 then PC := 88 else R14 := R15 
	75	[7121]	JMP      	88 ; PC := 88
	76	[7121]	GETGLOBAL	R15 K2 ; R15 := 0xbe190284
	77	[7121]	SELF     	R15 R15 K19 ; R16 := R15; R15 := R15[0x3d48d263]
	78	[7121]	SELF     	R17 R0 K20 ; R18 := R0; R17 := R0[0xdff9d2a7]
	79	[7121]	CALL     	R17 2 2 ; R17 := R17(R18)
	80	[7121]	OP_LOADBOOL	R18 1 0 ; R18 := true
	81	[7121]	SELF     	R19 R12 K13 ; R20 := R12; R19 := R12[0x62c81b76]
	82	[7121]	CALL     	R19 2 2 ; R19 := R19(R20)
	83	[7121]	SELF     	R19 R19 K18 ; R20 := R19; R19 := R19[0x8af486d8]
	84	[7121]	CALL     	R19 2 2 ; R19 := R19(R20)
	85	[7121]	OP_LOADBOOL	R20 1 0 ; R20 := true
	86	[7121]	CALL     	R15 6 2 ; R15 := R15(R16,R17,R18,R19,R20)
	87	[7121]	NOT      	R14 R15 ; R14 := not R15
	88	[7122]	SELF     	R15 R2 K21 ; R16 := R2; R15 := R2[0x2676deee]
	89	[7122]	CALL     	R15 2 2 ; R15 := R15(R16)
	90	[7122]	MOVE     	R11 R15 ; R11 := R15
	91	[7123]	EQ       	1 R1 K22 ; if R1 == true then PC := 95
	92	[7123]	JMP      	95 ; PC := 95
	93	[7123]	EQ       	0 R1 K23 ; if R1 ~= nil then PC := 101
	94	[7123]	JMP      	101 ; PC := 101
	95	[7124]	GETGLOBAL	R15 K24 ; R15 := 0xcbd666e1
	96	[7124]	LOADK    	R16 := 0.000000
	97	[7124]	CALL     	R15 2 1 ; R15(R16)
	98	[7124]	JMP      	63 ; PC := 63
	99	[7126]	JMP      	101 ; PC := 101
	100	[7127]	JMP      	63 ; PC := 63
	101	[7129]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	102	[7129]	MOVE     	R16 R11 ; R16 := R11
	103	[7129]	CALL     	R15 2 2 ; R15 := R15(R16)
	104	[7129]	TEST     	R15 1 ; if R15 then PC := 110
	105	[7129]	JMP      	110 ; PC := 110
	106	[7130]	MOVE     	R15 R3 ; R15 := R3
	107	[7130]	SELF     	R16 R11 K1 ; R17 := R11; R16 := R11[0xde321e6f]
	108	[7130]	CALL     	R16 2 0 ; R16,... := R16(R17)
	109	[7130]	CALL     	R15 0 1 ; R15(R16,...)
	110	[7135]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	111	[7135]	MOVE     	R16 R11 ; R16 := R11
	112	[7135]	CALL     	R15 2 2 ; R15 := R15(R16)
	113	[7135]	TEST     	R15 1 ; if R15 then PC := 121
	114	[7135]	JMP      	121 ; PC := 121
	115	[7136]	SELF     	R15 R11 K9 ; R16 := R11; R15 := R11[0x1ac1655c]
	116	[7136]	CALL     	R15 2 2 ; R15 := R15(R16)
	117	[7137]	SELF     	R16 R15 K10 ; R17 := R15; R16 := R15[0x57369b8b]
	118	[7137]	SELF     	R18 R15 K11 ; R19 := R15; R18 := R15[0xb87f958d]
	119	[7137]	CALL     	R18 2 0 ; R18,... := R18(R19)
	120	[7137]	CALL     	R16 0 1 ; R16(R17,...)
	121	[7139]	RETURN   	R0 1 ; return 

function #349 <?:7141,7149> (36 instructions, 144 bytes at 0000025274F35B90)
0 params, 4 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[7142]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7142]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[7142]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7142]	TEST     	R0 1 ; if R0 then PC := 34
	5	[7142]	JMP      	34 ; PC := 34
	6	[7142]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[7142]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[7142]	GETGLOBAL	R2 K3 ; R2 := gLotusGameRulesType
	9	[7142]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[7142]	TEST     	R0 0 ; if not R0 then PC := 34
	11	[7142]	JMP      	34 ; PC := 34
	12	[7143]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	13	[7143]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xef893aec]
	14	[7143]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[7144]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	16	[7144]	MOVE     	R2 R0 ; R2 := R0
	17	[7144]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[7144]	TEST     	R1 1 ; if R1 then PC := 34
	19	[7144]	JMP      	34 ; PC := 34
	20	[7144]	GETTABLE 	R1 R0 K5 ; R1 := R0["goalTag"]
	21	[7144]	GETGLOBAL	R2 K6 ; R2 := 0x0469f296
	22	[7144]	LOADK    	R3 K7 ; R3 := "NoMods"
	23	[7144]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[7144]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 32
	25	[7144]	JMP      	32 ; PC := 32
	26	[7144]	GETTABLE 	R1 R0 K5 ; R1 := R0["goalTag"]
	27	[7144]	GETGLOBAL	R2 K6 ; R2 := 0x0469f296
	28	[7144]	LOADK    	R3 K8 ; R3 := "WaterFight"
	29	[7144]	CALL     	R2 2 2 ; R2 := R2(R3)
	30	[7144]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 34
	31	[7144]	JMP      	34 ; PC := 34
	32	[7145]	OP_LOADBOOL	R1 1 0 ; R1 := true
	33	[7145]	RETURN   	R1 2 ; return R1 
	34	[7148]	OP_LOADBOOL	R1 0 0 ; R1 := false
	35	[7148]	RETURN   	R1 2 ; return R1 
	36	[7149]	RETURN   	R0 1 ; return 

function #350 <?:7151,7163> (25 instructions, 100 bytes at 0000025274F35E70)
2 params, 10 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[7152]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[7152]	MOVE     	R3 R0 ; R3 := R0
	3	[7152]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[7152]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[7152]	JMP      	7 ; PC := 7
	6	[7153]	RETURN   	R0 1 ; return 
	7	[7155]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	8	[7155]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x1934072c]
	9	[7155]	GETGLOBAL	R4 K3 ; R4 := gLotusAuraUpgradeType
	10	[7155]	MOVE     	R5 R0 ; R5 := R0
	11	[7155]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	12	[7156]	GETGLOBAL	R3 K4 ; R3 := 0xcfc01047
	13	[7156]	MOVE     	R4 R2 ; R4 := R2
	14	[7156]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	15	[7156]	JMP      	23 ; PC := 23
	16	[7157]	TEST     	R1 0 ; if not R1 then PC := 21
	17	[7157]	JMP      	21 ; PC := 21
	18	[7158]	SELF     	R8 R7 K5 ; R9 := R7; R8 := R7[0xeedfc816]
	19	[7158]	CALL     	R8 2 1 ; R8(R9)
	20	[7158]	JMP      	23 ; PC := 23
	21	[7160]	SELF     	R8 R7 K6 ; R9 := R7; R8 := R7[0xdaa0c115]
	22	[7160]	CALL     	R8 2 1 ; R8(R9)
	23	[7156]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 16; R5 := R6 end
	24	[7161]	JMP      	16 ; PC := 16
	25	[7163]	RETURN   	R0 1 ; return 

function #351 <?:7166,7172> (12 instructions, 48 bytes at 0000025274F36080)
1 param, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[7167]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7167]	MOVE     	R2 R0 ; R2 := R0
	3	[7167]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7167]	TEST     	R1 1 ; if R1 then PC := 10
	5	[7167]	JMP      	10 ; PC := 10
	6	[7168]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x62c81b76]
	7	[7168]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[7168]	GETTABLE 	R1 R1 K2 ; R1 := R1["mIsFirstTimeInNode"]
	9	[7168]	RETURN   	R1 2 ; return R1 
	10	[7171]	OP_LOADBOOL	R1 0 0 ; R1 := false
	11	[7171]	RETURN   	R1 2 ; return R1 
	12	[7172]	RETURN   	R0 1 ; return 

function #352 <?:7174,7179> (15 instructions, 60 bytes at 0000025274F36210)
2 params, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7175]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[7175]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[7175]	GETTABLE 	R3 R3 K2 ; R3 := R3["PendingEquippingGearItem"]
	4	[7175]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[7175]	TEST     	R2 0 ; if not R2 then PC := 10
	6	[7175]	JMP      	10 ; PC := 10
	7	[7176]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[7176]	NEWTABLE 	R3 0 0 ; R3 := {}
	9	[7176]	SETTABLE 	R2 K2 R3 ; R2[0x46a0ebf5] := R3
	10	[7178]	GETGLOBAL	R2 K1 ; R2 := _T
	11	[7178]	GETTABLE 	R2 R2 K2 ; R2 := R2["PendingEquippingGearItem"]
	12	[7178]	SELF     	R3 R0 K3 ; R4 := R0; R3 := R0[0x388577d5]
	13	[7178]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[7178]	SETTABLE 	R2 R3 R1 ; R2[R3] := R1
	15	[7179]	RETURN   	R0 1 ; return 

function #353 <?:7181,7187> (15 instructions, 60 bytes at 0000025274F363E0)
1 param, 4 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7182]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7182]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7182]	GETTABLE 	R2 R2 K2 ; R2 := R2["PendingEquippingGearItem"]
	4	[7182]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7182]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7182]	JMP      	9 ; PC := 9
	7	[7183]	OP_LOADBOOL	R1 0 0 ; R1 := false
	8	[7183]	RETURN   	R1 2 ; return R1 
	9	[7186]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7186]	GETTABLE 	R1 R1 K2 ; R1 := R1["PendingEquippingGearItem"]
	11	[7186]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x388577d5]
	12	[7186]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[7186]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	14	[7186]	RETURN   	R1 2 ; return R1 
	15	[7187]	RETURN   	R0 1 ; return 

function #354 <?:7189,7232> (143 instructions, 572 bytes at 0000025274F36560)
1 param, 29 slots, 0 upvalues, 0 locals, 19 constants, 0 functions
	1	[7190]	EQ       	0 R0 K0 ; if R0 ~= nil then PC := 23
	2	[7190]	JMP      	23 ; PC := 23
	3	[7191]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	4	[7191]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xfb64e76c]
	5	[7191]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[7192]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	7	[7192]	MOVE     	R3 R1 ; R3 := R1
	8	[7192]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[7192]	TEST     	R2 1 ; if R2 then PC := 19
	10	[7192]	JMP      	19 ; PC := 19
	11	[7192]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0xf08bc0f9]
	12	[7192]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[7192]	TEST     	R2 0 ; if not R2 then PC := 19
	14	[7192]	JMP      	19 ; PC := 19
	15	[7193]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xced29f79]
	16	[7193]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[7193]	MOVE     	R0 R2 ; R0 := R2
	18	[7193]	JMP      	23 ; PC := 23
	19	[7195]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	20	[7195]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x78298275]
	21	[7195]	CALL     	R2 2 2 ; R2 := R2(R3)
	22	[7195]	MOVE     	R0 R2 ; R0 := R2
	23	[7199]	OP_LOADBOOL	R2 0 0 ; R2 := false
	24	[7200]	SELF     	R3 R0 K7 ; R4 := R0; R3 := R0[0xd1586535]
	25	[7200]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[7202]	LOADK    	R4 := 1.000000
	27	[7202]	GETGLOBAL	R5 K8 ; R5 := SHIP_ROOMS
	28	[7202]	LEN      	R5 R5 ; R5 := # R5
	29	[7202]	LOADK    	R6 := 1.000000
	30	[7202]	FORPREP  	R4 80 ; R4 -= R6; PC := 80
	31	[7203]	GETGLOBAL	R8 K1 ; R8 := 0x89326c93
	32	[7203]	SELF     	R8 R8 K9 ; R9 := R8; R8 := R8[0xc7fcada9]
	33	[7203]	GETGLOBAL	R10 K8 ; R10 := SHIP_ROOMS
	34	[7203]	GETTABLE 	R10 R10 R7 ; R10 := R10[R7]
	35	[7203]	GETTABLE 	R10 R10 K10 ; R10 := R10["Name"]
	36	[7203]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	37	[7204]	LOADK    	R9 := 1.000000
	38	[7204]	LEN      	R10 R8 ; R10 := # R8
	39	[7204]	LOADK    	R11 := 1.000000
	40	[7204]	FORPREP  	R9 79 ; R9 -= R11; PC := 79
	41	[7205]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	42	[7205]	SELF     	R13 R13 K11 ; R14 := R13; R13 := R13[0x79a9e9d3]
	43	[7205]	CALL     	R13 2 2 ; R13 := R13(R14)
	44	[7206]	GETTABLE 	R14 R8 R12 ; R14 := R8[R12]
	45	[7206]	SELF     	R14 R14 K12 ; R15 := R14; R14 := R14[0x8fbd942d]
	46	[7206]	CALL     	R14 2 2 ; R14 := R14(R15)
	47	[7208]	GETTABLE 	R15 R14 K13 ; R15 := R14["x"]
	48	[7208]	GETTABLE 	R16 R3 K13 ; R16 := R3["x"]
	49	[7208]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	50	[7208]	JMP      	79 ; PC := 79
	51	[7208]	GETTABLE 	R15 R14 K14 ; R15 := R14["y"]
	52	[7208]	GETTABLE 	R16 R3 K14 ; R16 := R3["y"]
	53	[7208]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	54	[7208]	JMP      	79 ; PC := 79
	55	[7208]	GETTABLE 	R15 R14 K15 ; R15 := R14["z"]
	56	[7208]	GETTABLE 	R16 R3 K15 ; R16 := R3["z"]
	57	[7208]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	58	[7208]	JMP      	79 ; PC := 79
	59	[7209]	GETTABLE 	R15 R3 K13 ; R15 := R3["x"]
	60	[7209]	GETTABLE 	R16 R13 K13 ; R16 := R13["x"]
	61	[7209]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	62	[7209]	JMP      	79 ; PC := 79
	63	[7209]	GETTABLE 	R15 R3 K14 ; R15 := R3["y"]
	64	[7209]	GETTABLE 	R16 R13 K14 ; R16 := R13["y"]
	65	[7209]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	66	[7209]	JMP      	79 ; PC := 79
	67	[7209]	GETTABLE 	R15 R3 K15 ; R15 := R3["z"]
	68	[7209]	GETTABLE 	R16 R13 K15 ; R16 := R13["z"]
	69	[7209]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	70	[7209]	JMP      	79 ; PC := 79
	71	[7211]	GETGLOBAL	R15 K8 ; R15 := SHIP_ROOMS
	72	[7211]	GETTABLE 	R15 R15 R7 ; R15 := R15[R7]
	73	[7211]	GETTABLE 	R15 R15 K10 ; R15 := R15["Name"]
	74	[7211]	GETGLOBAL	R16 K8 ; R16 := SHIP_ROOMS
	75	[7211]	GETTABLE 	R16 R16 R7 ; R16 := R16[R7]
	76	[7211]	GETTABLE 	R16 R16 K16 ; R16 := R16["LocTag"]
	77	[7211]	MOVE     	R17 R2 ; R17 := R2
	78	[7211]	RETURN   	R15 4 ; return R15, R16, R17 
	79	[7204]	FORLOOP  	R9 41 ; R9 += R11; if R9 <= R10 then begin PC := 41; R12 := R9 end
	80	[7202]	FORLOOP  	R4 31 ; R4 += R6; if R4 <= R5 then begin PC := 31; R7 := R4 end
	81	[7216]	LOADK    	R15 := 1.000000
	82	[7216]	GETGLOBAL	R16 K17 ; R16 := APARTMENT_ROOMS
	83	[7216]	LEN      	R16 R16 ; R16 := # R16
	84	[7216]	LOADK    	R17 := 1.000000
	85	[7216]	FORPREP  	R15 136 ; R15 -= R17; PC := 136
	86	[7217]	GETGLOBAL	R19 K1 ; R19 := 0x89326c93
	87	[7217]	SELF     	R19 R19 K9 ; R20 := R19; R19 := R19[0xc7fcada9]
	88	[7217]	GETGLOBAL	R21 K17 ; R21 := APARTMENT_ROOMS
	89	[7217]	GETTABLE 	R21 R21 R18 ; R21 := R21[R18]
	90	[7217]	GETTABLE 	R21 R21 K10 ; R21 := R21["Name"]
	91	[7217]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	92	[7218]	LOADK    	R20 := 1.000000
	93	[7218]	LEN      	R21 R19 ; R21 := # R19
	94	[7218]	LOADK    	R22 := 1.000000
	95	[7218]	FORPREP  	R20 135 ; R20 -= R22; PC := 135
	96	[7219]	GETTABLE 	R24 R19 R23 ; R24 := R19[R23]
	97	[7219]	SELF     	R24 R24 K11 ; R25 := R24; R24 := R24[0x79a9e9d3]
	98	[7219]	CALL     	R24 2 2 ; R24 := R24(R25)
	99	[7220]	GETTABLE 	R25 R19 R23 ; R25 := R19[R23]
	100	[7220]	SELF     	R25 R25 K12 ; R26 := R25; R25 := R25[0x8fbd942d]
	101	[7220]	CALL     	R25 2 2 ; R25 := R25(R26)
	102	[7222]	GETTABLE 	R26 R25 K13 ; R26 := R25["x"]
	103	[7222]	GETTABLE 	R27 R3 K13 ; R27 := R3["x"]
	104	[7222]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	105	[7222]	JMP      	135 ; PC := 135
	106	[7222]	GETTABLE 	R26 R25 K14 ; R26 := R25["y"]
	107	[7222]	GETTABLE 	R27 R3 K14 ; R27 := R3["y"]
	108	[7222]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	109	[7222]	JMP      	135 ; PC := 135
	110	[7222]	GETTABLE 	R26 R25 K15 ; R26 := R25["z"]
	111	[7222]	GETTABLE 	R27 R3 K15 ; R27 := R3["z"]
	112	[7222]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	113	[7222]	JMP      	135 ; PC := 135
	114	[7223]	GETTABLE 	R26 R3 K13 ; R26 := R3["x"]
	115	[7223]	GETTABLE 	R27 R24 K13 ; R27 := R24["x"]
	116	[7223]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	117	[7223]	JMP      	135 ; PC := 135
	118	[7223]	GETTABLE 	R26 R3 K14 ; R26 := R3["y"]
	119	[7223]	GETTABLE 	R27 R24 K14 ; R27 := R24["y"]
	120	[7223]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	121	[7223]	JMP      	135 ; PC := 135
	122	[7223]	GETTABLE 	R26 R3 K15 ; R26 := R3["z"]
	123	[7223]	GETTABLE 	R27 R24 K15 ; R27 := R24["z"]
	124	[7223]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	125	[7223]	JMP      	135 ; PC := 135
	126	[7225]	OP_LOADBOOL	R2 1 0 ; R2 := true
	127	[7226]	GETGLOBAL	R26 K17 ; R26 := APARTMENT_ROOMS
	128	[7226]	GETTABLE 	R26 R26 R18 ; R26 := R26[R18]
	129	[7226]	GETTABLE 	R26 R26 K10 ; R26 := R26["Name"]
	130	[7226]	GETGLOBAL	R27 K17 ; R27 := APARTMENT_ROOMS
	131	[7226]	GETTABLE 	R27 R27 R18 ; R27 := R27[R18]
	132	[7226]	GETTABLE 	R27 R27 K16 ; R27 := R27["LocTag"]
	133	[7226]	MOVE     	R28 R2 ; R28 := R2
	134	[7226]	RETURN   	R26 4 ; return R26, R27, R28 
	135	[7218]	FORLOOP  	R20 96 ; R20 += R22; if R20 <= R21 then begin PC := 96; R23 := R20 end
	136	[7216]	FORLOOP  	R15 86 ; R15 += R17; if R15 <= R16 then begin PC := 86; R18 := R15 end
	137	[7231]	GETGLOBAL	R26 K18 ; R26 := OUTSIDE_THE_SHIP_ROOM
	138	[7231]	GETTABLE 	R26 R26 K10 ; R26 := R26["Name"]
	139	[7231]	GETGLOBAL	R27 K18 ; R27 := OUTSIDE_THE_SHIP_ROOM
	140	[7231]	GETTABLE 	R27 R27 K16 ; R27 := R27["LocTag"]
	141	[7231]	MOVE     	R28 R2 ; R28 := R2
	142	[7231]	RETURN   	R26 4 ; return R26, R27, R28 
	143	[7232]	RETURN   	R0 1 ; return 

function #355 <?:7234,7236> (5 instructions, 20 bytes at 0000025274F36BD0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7235]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7235]	MOVE     	R2 R0 ; R2 := R0
	3	[7235]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[7235]	RETURN   	R1 0 ; return R1,... 
	5	[7236]	RETURN   	R0 1 ; return 

function #356 <?:7238,7251> (29 instructions, 116 bytes at 0000025274F36CC0)
1 param, 10 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[7239]	LOADK    	R1 := 1.000000
	2	[7239]	GETGLOBAL	R2 K0 ; R2 := SHIP_ROOMS
	3	[7239]	LEN      	R2 R2 ; R2 := # R2
	4	[7239]	LOADK    	R3 := 1.000000
	5	[7239]	FORPREP  	R1 13 ; R1 -= R3; PC := 13
	6	[7240]	GETGLOBAL	R5 K0 ; R5 := SHIP_ROOMS
	7	[7240]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	8	[7240]	GETTABLE 	R5 R5 K1 ; R5 := R5["Name"]
	9	[7240]	EQ       	0 R5 R0 ; if R5 ~= R0 then PC := 13
	10	[7240]	JMP      	13 ; PC := 13
	11	[7241]	GETGLOBAL	R5 K2 ; R5 := DECO_AREA_SHIP
	12	[7241]	RETURN   	R5 2 ; return R5 
	13	[7239]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	14	[7244]	LOADK    	R5 := 1.000000
	15	[7244]	GETGLOBAL	R6 K3 ; R6 := APARTMENT_ROOMS
	16	[7244]	LEN      	R6 R6 ; R6 := # R6
	17	[7244]	LOADK    	R7 := 1.000000
	18	[7244]	FORPREP  	R5 26 ; R5 -= R7; PC := 26
	19	[7245]	GETGLOBAL	R9 K3 ; R9 := APARTMENT_ROOMS
	20	[7245]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	21	[7245]	GETTABLE 	R9 R9 K1 ; R9 := R9["Name"]
	22	[7245]	EQ       	0 R9 R0 ; if R9 ~= R0 then PC := 26
	23	[7245]	JMP      	26 ; PC := 26
	24	[7246]	GETGLOBAL	R9 K4 ; R9 := DECO_AREA_APARTMENT
	25	[7246]	RETURN   	R9 2 ; return R9 
	26	[7244]	FORLOOP  	R5 19 ; R5 += R7; if R5 <= R6 then begin PC := 19; R8 := R5 end
	27	[7250]	GETGLOBAL	R9 K5 ; R9 := DECO_AREA_UNKNOWN
	28	[7250]	RETURN   	R9 2 ; return R9 
	29	[7251]	RETURN   	R0 1 ; return 

function #357 <?:7253,7330> (210 instructions, 840 bytes at 0000025274F36EE0)
3 params, 25 slots, 1 upvalue, 0 locals, 37 constants, 0 functions
	1	[7254]	TEST     	R1 0 ; if not R1 then PC := 37
	2	[7254]	JMP      	37 ; PC := 37
	3	[7255]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	4	[7255]	GETGLOBAL	R4 K1 ; R4 := _T
	5	[7255]	GETTABLE 	R4 R4 K2 ; R4 := R4["apartmentDecoAncor"]
	6	[7255]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[7255]	TEST     	R3 0 ; if not R3 then PC := 12
	8	[7255]	JMP      	12 ; PC := 12
	9	[7256]	GETGLOBAL	R3 K1 ; R3 := _T
	10	[7256]	NEWTABLE 	R4 0 0 ; R4 := {}
	11	[7256]	SETTABLE 	R3 K2 R4 ; R3["apartmentDecoAncor"] := R4
	12	[7259]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	13	[7259]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7259]	GETTABLE 	R4 R4 K2 ; R4 := R4["apartmentDecoAncor"]
	15	[7259]	GETTABLE 	R4 R4 R0 ; R4 := R4[R0]
	16	[7259]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[7259]	TEST     	R3 0 ; if not R3 then PC := 32
	18	[7259]	JMP      	32 ; PC := 32
	19	[7260]	GETGLOBAL	R3 K1 ; R3 := _T
	20	[7260]	GETTABLE 	R3 R3 K2 ; R3 := R3["apartmentDecoAncor"]
	21	[7260]	GETGLOBAL	R4 K3 ; R4 := 0x89326c93
	22	[7260]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x46a0ebf5]
	23	[7260]	GETGLOBAL	R6 K5 ; R6 := 0x0469f296
	24	[7260]	GETGLOBAL	R7 K6 ; R7 := 0x64fb1586
	25	[7260]	MOVE     	R8 R0 ; R8 := R0
	26	[7260]	CALL     	R7 2 2 ; R7 := R7(R8)
	27	[7260]	LOADK    	R8 K7 ; R8 := "Anchor"
	28	[7260]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	29	[7260]	CALL     	R6 2 0 ; R6,... := R6(R7)
	30	[7260]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	31	[7260]	SETTABLE 	R3 R0 R4 ; R3[R0] := R4
	32	[7263]	GETGLOBAL	R3 K1 ; R3 := _T
	33	[7263]	GETTABLE 	R3 R3 K2 ; R3 := R3["apartmentDecoAncor"]
	34	[7263]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	35	[7263]	RETURN   	R3 2 ; return R3 
	36	[7263]	JMP      	131 ; PC := 131
	37	[7264]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	38	[7264]	GETGLOBAL	R4 K1 ; R4 := _T
	39	[7264]	GETTABLE 	R4 R4 K8 ; R4 := R4["shipDecoOrbiterAnchor"]
	40	[7264]	CALL     	R3 2 2 ; R3 := R3(R4)
	41	[7264]	TEST     	R3 0 ; if not R3 then PC := 131
	42	[7264]	JMP      	131 ; PC := 131
	43	[7267]	GETGLOBAL	R3 K1 ; R3 := _T
	44	[7267]	GETGLOBAL	R4 K3 ; R4 := 0x89326c93
	45	[7267]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x46a0ebf5]
	46	[7267]	GETGLOBAL	R6 K5 ; R6 := 0x0469f296
	47	[7267]	LOADK    	R7 K10 ; R7 := "PlayerShipDecosAnchorLiset"
	48	[7267]	CALL     	R6 2 0 ; R6,... := R6(R7)
	49	[7267]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	50	[7267]	SETTABLE 	R3 K9 R4 ; R3["shipDecoLisetAnchor"] := R4
	51	[7270]	GETGLOBAL	R3 K11 ; R3 := 0xa421af95
	52	[7270]	LOADK    	R4 K12 ; R4 := 9999.000000
	53	[7270]	LOADK    	R5 K12 ; R5 := 9999.000000
	54	[7270]	LOADK    	R6 K12 ; R6 := 9999.000000
	55	[7270]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	56	[7271]	GETGLOBAL	R4 K3 ; R4 := 0x89326c93
	57	[7271]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0xc7fcada9]
	58	[7271]	GETGLOBAL	R6 K14 ; R6 := LISET_ROOM
	59	[7271]	GETTABLE 	R6 R6 K15 ; R6 := R6["Name"]
	60	[7271]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	61	[7273]	LOADK    	R5 := 1.000000
	62	[7273]	LEN      	R6 R4 ; R6 := # R4
	63	[7273]	LOADK    	R7 := 1.000000
	64	[7273]	FORPREP  	R5 87 ; R5 -= R7; PC := 87
	65	[7274]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	66	[7274]	SELF     	R9 R9 K16 ; R10 := R9; R9 := R9[0x79a9e9d3]
	67	[7274]	CALL     	R9 2 2 ; R9 := R9(R10)
	68	[7275]	GETTABLE 	R10 R4 R8 ; R10 := R4[R8]
	69	[7275]	SELF     	R10 R10 K17 ; R11 := R10; R10 := R10[0x8fbd942d]
	70	[7275]	CALL     	R10 2 2 ; R10 := R10(R11)
	71	[7277]	SUB      	R11 R9 R10 ; R11 := R9 - R10
	72	[7278]	GETGLOBAL	R12 K18 ; R12 := 0x4fd57545
	73	[7278]	MOVE     	R13 R11 ; R13 := R11
	74	[7278]	MOVE     	R14 R11 ; R14 := R11
	75	[7278]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	76	[7278]	GETGLOBAL	R13 K18 ; R13 := 0x4fd57545
	77	[7278]	MOVE     	R14 R3 ; R14 := R3
	78	[7278]	MOVE     	R15 R3 ; R15 := R3
	79	[7278]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	80	[7278]	LT       	0 R12 R13 ; if R12 >= R13 then PC := 87
	81	[7278]	JMP      	87 ; PC := 87
	82	[7279]	MOVE     	R3 R11 ; R3 := R11
	83	[7280]	GETGLOBAL	R12 K1 ; R12 := _T
	84	[7280]	SETTABLE 	R12 K19 R9 ; R12["shipDecoLisetDoorwayBoundsMax"] := R9
	85	[7281]	GETGLOBAL	R12 K1 ; R12 := _T
	86	[7281]	SETTABLE 	R12 K20 R10 ; R12["shipDecoLisetDoorwayBoundsMin"] := R10
	87	[7273]	FORLOOP  	R5 65 ; R5 += R7; if R5 <= R6 then begin PC := 65; R8 := R5 end
	88	[7285]	GETGLOBAL	R12 K3 ; R12 := 0x89326c93
	89	[7285]	SELF     	R12 R12 K4 ; R13 := R12; R12 := R12[0x46a0ebf5]
	90	[7285]	GETGLOBAL	R14 K5 ; R14 := 0x0469f296
	91	[7285]	LOADK    	R15 K21 ; R15 := "PlayerShipDecosAnchorOrbiter"
	92	[7285]	CALL     	R14 2 0 ; R14,... := R14(R15)
	93	[7285]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	94	[7286]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	95	[7286]	MOVE     	R14 R12 ; R14 := R12
	96	[7286]	CALL     	R13 2 2 ; R13 := R13(R14)
	97	[7286]	TEST     	R13 1 ; if R13 then PC := 102
	98	[7286]	JMP      	102 ; PC := 102
	99	[7287]	GETGLOBAL	R13 K1 ; R13 := _T
	100	[7287]	SETTABLE 	R13 K8 R12 ; R13["shipDecoOrbiterAnchor"] := R12
	101	[7287]	JMP      	131 ; PC := 131
	102	[7291]	GETGLOBAL	R13 K3 ; R13 := 0x89326c93
	103	[7291]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0xfb669000]
	104	[7291]	GETGLOBAL	R15 K23 ; R15 := gZoneAttribsType
	105	[7291]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	106	[7292]	LOADNIL  	R14 R14 ; R14 := nil
	107	[7293]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	108	[7293]	MOVE     	R16 R13 ; R16 := R13
	109	[7293]	CALL     	R15 2 2 ; R15 := R15(R16)
	110	[7293]	TEST     	R15 1 ; if R15 then PC := 129
	111	[7293]	JMP      	129 ; PC := 129
	112	[7293]	LEN      	R15 R13 ; R15 := # R13
	113	[7293]	LT       	0 K24 R15 ; if 0.000000 >= R15 then PC := 129
	114	[7293]	JMP      	129 ; PC := 129
	115	[7294]	GETTABLE 	R14 R13 K25 ; R14 := R13[1.000000]
	116	[7295]	LOADK    	R15 := 2.000000
	117	[7295]	LEN      	R16 R13 ; R16 := # R13
	118	[7295]	LOADK    	R17 := 1.000000
	119	[7295]	FORPREP  	R15 128 ; R15 -= R17; PC := 128
	120	[7296]	GETTABLE 	R19 R13 R18 ; R19 := R13[R18]
	121	[7296]	SELF     	R19 R19 K26 ; R20 := R19; R19 := R19[0x388577d5]
	122	[7296]	CALL     	R19 2 2 ; R19 := R19(R20)
	123	[7296]	SELF     	R20 R14 K26 ; R21 := R14; R20 := R14[0x388577d5]
	124	[7296]	CALL     	R20 2 2 ; R20 := R20(R21)
	125	[7296]	LT       	0 R19 R20 ; if R19 >= R20 then PC := 128
	126	[7296]	JMP      	128 ; PC := 128
	127	[7297]	GETTABLE 	R14 R13 R18 ; R14 := R13[R18]
	128	[7295]	FORLOOP  	R15 120 ; R15 += R17; if R15 <= R16 then begin PC := 120; R18 := R15 end
	129	[7302]	GETGLOBAL	R19 K1 ; R19 := _T
	130	[7302]	SETTABLE 	R19 K8 R14 ; R19["shipDecoOrbiterAnchor"] := R14
	131	[7306]	GETGLOBAL	R19 K14 ; R19 := LISET_ROOM
	132	[7306]	GETTABLE 	R19 R19 K15 ; R19 := R19["Name"]
	133	[7306]	EQ       	0 R0 R19 ; if R0 ~= R19 then PC := 197
	134	[7306]	JMP      	197 ; PC := 197
	135	[7307]	GETUPVAL 	R19 U0 ; R19 := U0
	136	[7307]	CALL     	R19 1 2 ; R19 := R19()
	137	[7307]	TEST     	R19 0 ; if not R19 then PC := 193
	138	[7307]	JMP      	193 ; PC := 193
	139	[7310]	LOADNIL  	R19 R19 ; R19 := nil
	140	[7311]	GETTABLE 	R20 R2 K27 ; R20 := R2["pos"]
	141	[7311]	EQ       	1 R20 K28 ; if R20 == nil then PC := 152
	142	[7311]	JMP      	152 ; PC := 152
	143	[7312]	GETGLOBAL	R20 K1 ; R20 := _T
	144	[7312]	GETTABLE 	R20 R20 K9 ; R20 := R20["shipDecoLisetAnchor"]
	145	[7312]	SELF     	R20 R20 K29 ; R21 := R20; R20 := R20[0xa5f8cbef]
	146	[7312]	GETGLOBAL	R22 K30 ; R22 := EMPTY_SYMBOL
	147	[7312]	GETTABLE 	R23 R2 K27 ; R23 := R2["pos"]
	148	[7312]	GETTABLE 	R24 R2 K31 ; R24 := R2["rot"]
	149	[7312]	CALL     	R20 5 2 ; R20 := R20(R21,R22,R23,R24)
	150	[7312]	MOVE     	R19 R20 ; R19 := R20
	151	[7312]	JMP      	155 ; PC := 155
	152	[7314]	SELF     	R20 R2 K32 ; R21 := R2; R20 := R2[0xd1586535]
	153	[7314]	CALL     	R20 2 2 ; R20 := R20(R21)
	154	[7314]	MOVE     	R19 R20 ; R19 := R20
	155	[7317]	GETGLOBAL	R20 K1 ; R20 := _T
	156	[7317]	GETTABLE 	R20 R20 K20 ; R20 := R20["shipDecoLisetDoorwayBoundsMin"]
	157	[7317]	GETTABLE 	R20 R20 K33 ; R20 := R20["x"]
	158	[7317]	GETTABLE 	R21 R19 K33 ; R21 := R19["x"]
	159	[7317]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	160	[7317]	JMP      	193 ; PC := 193
	161	[7317]	GETGLOBAL	R20 K1 ; R20 := _T
	162	[7317]	GETTABLE 	R20 R20 K20 ; R20 := R20["shipDecoLisetDoorwayBoundsMin"]
	163	[7317]	GETTABLE 	R20 R20 K34 ; R20 := R20["y"]
	164	[7317]	GETTABLE 	R21 R19 K34 ; R21 := R19["y"]
	165	[7317]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	166	[7317]	JMP      	193 ; PC := 193
	167	[7317]	GETGLOBAL	R20 K1 ; R20 := _T
	168	[7317]	GETTABLE 	R20 R20 K20 ; R20 := R20["shipDecoLisetDoorwayBoundsMin"]
	169	[7317]	GETTABLE 	R20 R20 K35 ; R20 := R20["z"]
	170	[7317]	GETTABLE 	R21 R19 K35 ; R21 := R19["z"]
	171	[7317]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	172	[7317]	JMP      	193 ; PC := 193
	173	[7318]	GETTABLE 	R20 R19 K33 ; R20 := R19["x"]
	174	[7318]	GETGLOBAL	R21 K1 ; R21 := _T
	175	[7318]	GETTABLE 	R21 R21 K19 ; R21 := R21["shipDecoLisetDoorwayBoundsMax"]
	176	[7318]	GETTABLE 	R21 R21 K33 ; R21 := R21["x"]
	177	[7318]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	178	[7318]	JMP      	193 ; PC := 193
	179	[7318]	GETTABLE 	R20 R19 K34 ; R20 := R19["y"]
	180	[7318]	GETGLOBAL	R21 K1 ; R21 := _T
	181	[7318]	GETTABLE 	R21 R21 K19 ; R21 := R21["shipDecoLisetDoorwayBoundsMax"]
	182	[7318]	GETTABLE 	R21 R21 K34 ; R21 := R21["y"]
	183	[7318]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	184	[7318]	JMP      	193 ; PC := 193
	185	[7318]	GETTABLE 	R20 R19 K35 ; R20 := R19["z"]
	186	[7318]	GETGLOBAL	R21 K1 ; R21 := _T
	187	[7318]	GETTABLE 	R21 R21 K19 ; R21 := R21["shipDecoLisetDoorwayBoundsMax"]
	188	[7318]	GETTABLE 	R21 R21 K35 ; R21 := R21["z"]
	189	[7318]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	190	[7318]	JMP      	193 ; PC := 193
	191	[7320]	LOADNIL  	R20 R20 ; R20 := nil
	192	[7320]	RETURN   	R20 2 ; return R20 
	193	[7324]	GETGLOBAL	R20 K1 ; R20 := _T
	194	[7324]	GETTABLE 	R20 R20 K9 ; R20 := R20["shipDecoLisetAnchor"]
	195	[7324]	RETURN   	R20 2 ; return R20 
	196	[7324]	JMP      	207 ; PC := 207
	197	[7325]	GETGLOBAL	R20 K36 ; R20 := OUTSIDE_THE_SHIP_ROOM
	198	[7325]	GETTABLE 	R20 R20 K15 ; R20 := R20["Name"]
	199	[7325]	EQ       	0 R0 R20 ; if R0 ~= R20 then PC := 207
	200	[7325]	JMP      	207 ; PC := 207
	201	[7325]	GETUPVAL 	R20 U0 ; R20 := U0
	202	[7325]	CALL     	R20 1 2 ; R20 := R20()
	203	[7325]	TEST     	R20 1 ; if R20 then PC := 207
	204	[7325]	JMP      	207 ; PC := 207
	205	[7326]	LOADNIL  	R20 R20 ; R20 := nil
	206	[7326]	RETURN   	R20 2 ; return R20 
	207	[7329]	GETGLOBAL	R20 K1 ; R20 := _T
	208	[7329]	GETTABLE 	R20 R20 K8 ; R20 := R20["shipDecoOrbiterAnchor"]
	209	[7329]	RETURN   	R20 2 ; return R20 
	210	[7330]	RETURN   	R0 1 ; return 

function #358 <?:7332,7356> (45 instructions, 180 bytes at 0000025274F37B20)
7 params, 12 slots, 0 upvalues, 0 locals, 12 constants, 1 function
	1	[7333]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	2	[7333]	GETGLOBAL	R8 K1 ; R8 := 0x0032441c
	3	[7333]	GETTABLE 	R8 R8 K2 ; R8 := R8["UIMovie_LoadoutSelectMovie"]
	4	[7333]	CALL     	R7 2 2 ; R7 := R7(R8)
	5	[7333]	TEST     	R7 1 ; if R7 then PC := 12
	6	[7333]	JMP      	12 ; PC := 12
	7	[7333]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	8	[7333]	MOVE     	R8 R2 ; R8 := R2
	9	[7333]	CALL     	R7 2 2 ; R7 := R7(R8)
	10	[7333]	TEST     	R7 0 ; if not R7 then PC := 14
	11	[7333]	JMP      	14 ; PC := 14
	12	[7334]	LOADNIL  	R7 R7 ; R7 := nil
	13	[7334]	RETURN   	R7 2 ; return R7 
	14	[7337]	LOADNIL  	R7 R7 ; R7 := nil
	15	[7338]	GETGLOBAL	R8 K3 ; R8 := _T
	16	[7338]	SETTABLE 	R8 K4 R3 ; R8["SelectLoadOutType"] := R3
	17	[7339]	GETGLOBAL	R8 K3 ; R8 := _T
	18	[7339]	SETTABLE 	R8 K5 R6 ; R8["CurrentLoadoutId"] := R6
	19	[7340]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	20	[7340]	MOVE     	R9 R0 ; R9 := R0
	21	[7340]	CALL     	R8 2 2 ; R8 := R8(R9)
	22	[7340]	TEST     	R8 1 ; if R8 then PC := 30
	23	[7340]	JMP      	30 ; PC := 30
	24	[7341]	SELF     	R8 R0 K6 ; R9 := R0; R8 := R0[0x1fd6abd0]
	25	[7341]	GETGLOBAL	R10 K1 ; R10 := 0x0032441c
	26	[7341]	GETTABLE 	R10 R10 K2 ; R10 := R10["UIMovie_LoadoutSelectMovie"]
	27	[7341]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	28	[7341]	MOVE     	R7 R8 ; R7 := R8
	29	[7341]	JMP      	36 ; PC := 36
	30	[7343]	GETGLOBAL	R8 K7 ; R8 := 0x9ba7909f
	31	[7343]	SELF     	R8 R8 K8 ; R9 := R8; R8 := R8[0xcfba257f]
	32	[7343]	GETGLOBAL	R10 K1 ; R10 := 0x0032441c
	33	[7343]	GETTABLE 	R10 R10 K2 ; R10 := R10["UIMovie_LoadoutSelectMovie"]
	34	[7343]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	35	[7343]	MOVE     	R7 R8 ; R7 := R8
	36	[7345]	GETGLOBAL	R8 K3 ; R8 := _T
	37	[7352]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	38	[7352]	MOVE     	R0 R4 ; R0 := R4
	39	[7352]	SETTABLE 	R8 K9 R9 ; R8["LoadoutSelectionDone"] := R9
	40	[7353]	SELF     	R8 R7 K10 ; R9 := R7; R8 := R7[0xe4162eed]
	41	[7353]	LOADK    	R10 K11 ; R10 := "SetCallBack"
	42	[7353]	LOADK    	R11 K9 ; R11 := "LoadoutSelectionDone"
	43	[7353]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	44	[7355]	RETURN   	R7 2 ; return R7 
	45	[7356]	RETURN   	R0 1 ; return 

function #359 <?:7358,7426> (124 instructions, 496 bytes at 0000025274F380B0)
2 params, 12 slots, 0 upvalues, 0 locals, 25 constants, 0 functions
	1	[7359]	LOADK    	R2 K0 ; R2 := ""
	2	[7360]	LOADK    	R3 K0 ; R3 := ""
	3	[7361]	LOADK    	R4 := 0.000000
	4	[7363]	GETGLOBAL	R5 K1 ; R5 := FORTUNA_NODE_TAG
	5	[7363]	EQ       	1 R1 R5 ; if R1 == R5 then PC := 10
	6	[7363]	JMP      	10 ; PC := 10
	7	[7363]	GETGLOBAL	R5 K2 ; R5 := ORB_VALLIS_NODE_TAG
	8	[7363]	EQ       	0 R1 R5 ; if R1 ~= R5 then PC := 37
	9	[7363]	JMP      	37 ; PC := 37
	10	[7364]	GETGLOBAL	R5 K3 ; R5 := TimeOfDayConstants
	11	[7364]	GETTABLE 	R5 R5 K4 ; R5 := R5["HOURS_PER_SECOND_VENUS"]
	12	[7365]	LT       	0 R0 K5 ; if R0 >= 12.000000 then PC := 21
	13	[7365]	JMP      	21 ; PC := 21
	14	[7366]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	15	[7366]	GETTABLE 	R2 R6 K6 ; R2 := R6["TIME_OF_DAY_LABEL_COLD"]
	16	[7367]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	17	[7367]	GETTABLE 	R3 R6 K7 ; R3 := R6["TIME_OF_DAY_LABEL_WARM"]
	18	[7368]	SUB      	R6 K5 R0 ; R6 := 12.000000 - R0
	19	[7368]	DIV      	R4 R6 R5 ; R4 := R6 / R5
	20	[7368]	JMP      	120 ; PC := 120
	21	[7369]	LT       	0 R0 K8 ; if R0 >= 18.000000 then PC := 30
	22	[7369]	JMP      	30 ; PC := 30
	23	[7370]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	24	[7370]	GETTABLE 	R2 R6 K7 ; R2 := R6["TIME_OF_DAY_LABEL_WARM"]
	25	[7371]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	26	[7371]	GETTABLE 	R3 R6 K6 ; R3 := R6["TIME_OF_DAY_LABEL_COLD"]
	27	[7372]	SUB      	R6 K8 R0 ; R6 := 18.000000 - R0
	28	[7372]	DIV      	R4 R6 R5 ; R4 := R6 / R5
	29	[7372]	JMP      	120 ; PC := 120
	30	[7374]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	31	[7374]	GETTABLE 	R2 R6 K6 ; R2 := R6["TIME_OF_DAY_LABEL_COLD"]
	32	[7375]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	33	[7375]	GETTABLE 	R3 R6 K7 ; R3 := R6["TIME_OF_DAY_LABEL_WARM"]
	34	[7376]	SUB      	R6 K9 R0 ; R6 := 36.000000 - R0
	35	[7376]	DIV      	R4 R6 R5 ; R4 := R6 / R5
	36	[7377]	JMP      	120 ; PC := 120
	37	[7378]	GETGLOBAL	R6 K10 ; R6 := OROKIN_TOWER_NODE_TAG
	38	[7378]	EQ       	1 R1 R6 ; if R1 == R6 then PC := 43
	39	[7378]	JMP      	43 ; PC := 43
	40	[7378]	GETGLOBAL	R6 K11 ; R6 := ENTRATI_LANDSCAPE_NODE_TAG
	41	[7378]	EQ       	0 R1 R6 ; if R1 ~= R6 then PC := 68
	42	[7378]	JMP      	68 ; PC := 68
	43	[7379]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	44	[7379]	GETTABLE 	R6 R6 K12 ; R6 := R6["HOURS_PER_SECOND_ENTRATI"]
	45	[7380]	LE       	1 K13 R0 ; if 22.000000 <= R0 then PC := 49
	46	[7380]	JMP      	49 ; PC := 49
	47	[7380]	LT       	0 R0 K14 ; if R0 >= 6.000000 then PC := 61
	48	[7380]	JMP      	61 ; PC := 61
	49	[7381]	GETGLOBAL	R7 K3 ; R7 := TimeOfDayConstants
	50	[7381]	GETTABLE 	R2 R7 K15 ; R2 := R7["TIME_OF_DAY_LABEL_VOME"]
	51	[7382]	GETGLOBAL	R7 K3 ; R7 := TimeOfDayConstants
	52	[7382]	GETTABLE 	R3 R7 K16 ; R3 := R7["TIME_OF_DAY_LABEL_FASS"]
	53	[7383]	LE       	0 K13 R0 ; if 22.000000 > R0 then PC := 58
	54	[7383]	JMP      	58 ; PC := 58
	55	[7384]	SUB      	R7 K17 R0 ; R7 := 30.000000 - R0
	56	[7384]	DIV      	R4 R7 R6 ; R4 := R7 / R6
	57	[7384]	JMP      	120 ; PC := 120
	58	[7386]	SUB      	R7 K14 R0 ; R7 := 6.000000 - R0
	59	[7386]	DIV      	R4 R7 R6 ; R4 := R7 / R6
	60	[7387]	JMP      	120 ; PC := 120
	61	[7389]	GETGLOBAL	R7 K3 ; R7 := TimeOfDayConstants
	62	[7389]	GETTABLE 	R2 R7 K16 ; R2 := R7["TIME_OF_DAY_LABEL_FASS"]
	63	[7390]	GETGLOBAL	R7 K3 ; R7 := TimeOfDayConstants
	64	[7390]	GETTABLE 	R3 R7 K15 ; R3 := R7["TIME_OF_DAY_LABEL_VOME"]
	65	[7391]	SUB      	R7 K13 R0 ; R7 := 22.000000 - R0
	66	[7391]	DIV      	R4 R7 R6 ; R4 := R7 / R6
	67	[7392]	JMP      	120 ; PC := 120
	68	[7393]	GETGLOBAL	R7 K18 ; R7 := ZARIMAN_NODE_TAG
	69	[7393]	EQ       	0 R1 R7 ; if R1 ~= R7 then PC := 96
	70	[7393]	JMP      	96 ; PC := 96
	71	[7394]	GETGLOBAL	R7 K3 ; R7 := TimeOfDayConstants
	72	[7394]	GETTABLE 	R7 R7 K19 ; R7 := R7["HOURS_PER_SECOND_ZARIMAN"]
	73	[7395]	LE       	1 K5 R0 ; if 12.000000 <= R0 then PC := 77
	74	[7395]	JMP      	77 ; PC := 77
	75	[7395]	LT       	0 R0 K14 ; if R0 >= 6.000000 then PC := 89
	76	[7395]	JMP      	89 ; PC := 89
	77	[7396]	GETGLOBAL	R8 K3 ; R8 := TimeOfDayConstants
	78	[7396]	GETTABLE 	R2 R8 K20 ; R2 := R8["TIME_OF_DAY_LABEL_CORPUS"]
	79	[7397]	GETGLOBAL	R8 K3 ; R8 := TimeOfDayConstants
	80	[7397]	GETTABLE 	R3 R8 K21 ; R3 := R8["TIME_OF_DAY_LABEL_GRINEER"]
	81	[7398]	LE       	0 K5 R0 ; if 12.000000 > R0 then PC := 86
	82	[7398]	JMP      	86 ; PC := 86
	83	[7399]	SUB      	R8 K9 R0 ; R8 := 36.000000 - R0
	84	[7399]	DIV      	R4 R8 R7 ; R4 := R8 / R7
	85	[7399]	JMP      	120 ; PC := 120
	86	[7401]	SUB      	R8 K5 R0 ; R8 := 12.000000 - R0
	87	[7401]	DIV      	R4 R8 R7 ; R4 := R8 / R7
	88	[7402]	JMP      	120 ; PC := 120
	89	[7404]	GETGLOBAL	R8 K3 ; R8 := TimeOfDayConstants
	90	[7404]	GETTABLE 	R2 R8 K21 ; R2 := R8["TIME_OF_DAY_LABEL_GRINEER"]
	91	[7405]	GETGLOBAL	R8 K3 ; R8 := TimeOfDayConstants
	92	[7405]	GETTABLE 	R3 R8 K20 ; R3 := R8["TIME_OF_DAY_LABEL_CORPUS"]
	93	[7406]	SUB      	R8 K5 R0 ; R8 := 12.000000 - R0
	94	[7406]	DIV      	R4 R8 R7 ; R4 := R8 / R7
	95	[7407]	JMP      	120 ; PC := 120
	96	[7409]	GETGLOBAL	R8 K3 ; R8 := TimeOfDayConstants
	97	[7409]	GETTABLE 	R8 R8 K22 ; R8 := R8["HOURS_PER_SECOND_EIDOLON"]
	98	[7410]	LE       	1 K13 R0 ; if 22.000000 <= R0 then PC := 102
	99	[7410]	JMP      	102 ; PC := 102
	100	[7410]	LT       	0 R0 K14 ; if R0 >= 6.000000 then PC := 114
	101	[7410]	JMP      	114 ; PC := 114
	102	[7411]	GETGLOBAL	R9 K3 ; R9 := TimeOfDayConstants
	103	[7411]	GETTABLE 	R2 R9 K23 ; R2 := R9["TIME_OF_DAY_LABEL_NIGHT"]
	104	[7412]	GETGLOBAL	R9 K3 ; R9 := TimeOfDayConstants
	105	[7412]	GETTABLE 	R3 R9 K24 ; R3 := R9["TIME_OF_DAY_LABEL_DAY"]
	106	[7413]	LE       	0 K13 R0 ; if 22.000000 > R0 then PC := 111
	107	[7413]	JMP      	111 ; PC := 111
	108	[7414]	SUB      	R9 K17 R0 ; R9 := 30.000000 - R0
	109	[7414]	DIV      	R4 R9 R8 ; R4 := R9 / R8
	110	[7414]	JMP      	120 ; PC := 120
	111	[7416]	SUB      	R9 K14 R0 ; R9 := 6.000000 - R0
	112	[7416]	DIV      	R4 R9 R8 ; R4 := R9 / R8
	113	[7417]	JMP      	120 ; PC := 120
	114	[7419]	GETGLOBAL	R9 K3 ; R9 := TimeOfDayConstants
	115	[7419]	GETTABLE 	R2 R9 K24 ; R2 := R9["TIME_OF_DAY_LABEL_DAY"]
	116	[7420]	GETGLOBAL	R9 K3 ; R9 := TimeOfDayConstants
	117	[7420]	GETTABLE 	R3 R9 K23 ; R3 := R9["TIME_OF_DAY_LABEL_NIGHT"]
	118	[7421]	SUB      	R9 K13 R0 ; R9 := 22.000000 - R0
	119	[7421]	DIV      	R4 R9 R8 ; R4 := R9 / R8
	120	[7425]	MOVE     	R9 R2 ; R9 := R2
	121	[7425]	MOVE     	R10 R3 ; R10 := R3
	122	[7425]	MOVE     	R11 R4 ; R11 := R4
	123	[7425]	RETURN   	R9 4 ; return R9, R10, R11 
	124	[7426]	RETURN   	R0 1 ; return 

function #360 <?:7428,7451> (53 instructions, 212 bytes at 0000025274F386E0)
1 param, 7 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[7429]	LOADK    	R1 := 0.000000
	2	[7430]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	3	[7430]	GETGLOBAL	R3 K1 ; R3 := 0x25d99d89
	4	[7430]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[7430]	TEST     	R2 1 ; if R2 then PC := 12
	6	[7430]	JMP      	12 ; PC := 12
	7	[7430]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	8	[7430]	GETGLOBAL	R3 K2 ; R3 := 0xbe190284
	9	[7430]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[7430]	TEST     	R2 0 ; if not R2 then PC := 13
	11	[7430]	JMP      	13 ; PC := 13
	12	[7431]	RETURN   	R1 2 ; return R1 
	13	[7434]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	14	[7434]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x69727e0b]
	15	[7434]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[7435]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	17	[7435]	MOVE     	R4 R2 ; R4 := R2
	18	[7435]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[7435]	TEST     	R3 0 ; if not R3 then PC := 22
	20	[7435]	JMP      	22 ; PC := 22
	21	[7436]	RETURN   	R1 2 ; return R1 
	22	[7439]	GETGLOBAL	R3 K4 ; R3 := TimeOfDayConstants
	23	[7439]	GETTABLE 	R3 R3 K5 ; R3 := R3["HOURS_PER_SECOND_EIDOLON"]
	24	[7440]	GETGLOBAL	R4 K6 ; R4 := FORTUNA_NODE_TAG
	25	[7440]	EQ       	1 R0 R4 ; if R0 == R4 then PC := 30
	26	[7440]	JMP      	30 ; PC := 30
	27	[7440]	GETGLOBAL	R4 K7 ; R4 := ORB_VALLIS_NODE_TAG
	28	[7440]	EQ       	0 R0 R4 ; if R0 ~= R4 then PC := 33
	29	[7440]	JMP      	33 ; PC := 33
	30	[7441]	GETGLOBAL	R4 K4 ; R4 := TimeOfDayConstants
	31	[7441]	GETTABLE 	R3 R4 K8 ; R3 := R4["HOURS_PER_SECOND_VENUS"]
	32	[7441]	JMP      	47 ; PC := 47
	33	[7442]	GETGLOBAL	R4 K9 ; R4 := OROKIN_TOWER_NODE_TAG
	34	[7442]	EQ       	1 R0 R4 ; if R0 == R4 then PC := 39
	35	[7442]	JMP      	39 ; PC := 39
	36	[7442]	GETGLOBAL	R4 K10 ; R4 := ENTRATI_LANDSCAPE_NODE_TAG
	37	[7442]	EQ       	0 R0 R4 ; if R0 ~= R4 then PC := 42
	38	[7442]	JMP      	42 ; PC := 42
	39	[7443]	GETGLOBAL	R4 K4 ; R4 := TimeOfDayConstants
	40	[7443]	GETTABLE 	R3 R4 K11 ; R3 := R4["HOURS_PER_SECOND_ENTRATI"]
	41	[7443]	JMP      	47 ; PC := 47
	42	[7444]	GETGLOBAL	R4 K12 ; R4 := ZARIMAN_NODE_TAG
	43	[7444]	EQ       	0 R0 R4 ; if R0 ~= R4 then PC := 47
	44	[7444]	JMP      	47 ; PC := 47
	45	[7445]	GETGLOBAL	R4 K4 ; R4 := TimeOfDayConstants
	46	[7445]	GETTABLE 	R3 R4 K13 ; R3 := R4["HOURS_PER_SECOND_ZARIMAN"]
	47	[7448]	GETGLOBAL	R4 K2 ; R4 := 0xbe190284
	48	[7448]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0xb77ba3b0]
	49	[7448]	MOVE     	R6 R3 ; R6 := R3
	50	[7448]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	51	[7448]	MOVE     	R1 R4 ; R1 := R4
	52	[7450]	RETURN   	R1 2 ; return R1 
	53	[7451]	RETURN   	R0 1 ; return 

function #361 <?:7453,7466> (29 instructions, 116 bytes at 0000025274F38A50)
1 param, 8 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[7454]	LT       	0 K0 R0 ; if 30.000000 >= R0 then PC := 25
	2	[7454]	JMP      	25 ; PC := 25
	3	[7455]	SUB      	R1 R0 K0 ; R1 := R0 - 30.000000
	4	[7456]	GETGLOBAL	R2 K1 ; R2 := 0x9ba7909f
	5	[7456]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xa1d3de97]
	6	[7456]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[7457]	LOADK    	R3 K3 ; R3 := "+"
	8	[7458]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	9	[7458]	MOVE     	R5 R2 ; R5 := R2
	10	[7458]	CALL     	R4 2 2 ; R4 := R4(R5)
	11	[7458]	TEST     	R4 1 ; if R4 then PC := 18
	12	[7458]	JMP      	18 ; PC := 18
	13	[7459]	SELF     	R4 R2 K5 ; R5 := R2; R4 := R2[0x42b04007]
	14	[7459]	LOADK    	R6 K6 ; R6 := "<LEGENDARY_RANK>"
	15	[7459]	OP_LOADBOOL	R7 1 0 ; R7 := true
	16	[7459]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	17	[7459]	MOVE     	R3 R4 ; R3 := R4
	18	[7462]	GETGLOBAL	R4 K7 ; R4 := 0x64fb1586
	19	[7462]	MOVE     	R5 R1 ; R5 := R1
	20	[7462]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[7462]	MOVE     	R5 R3 ; R5 := R3
	22	[7462]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	23	[7462]	RETURN   	R4 2 ; return R4 
	24	[7462]	JMP      	29 ; PC := 29
	25	[7464]	GETGLOBAL	R4 K7 ; R4 := 0x64fb1586
	26	[7464]	MOVE     	R5 R0 ; R5 := R0
	27	[7464]	TAILCALL 	R4 2 0 ; R4,... := R4(R5)
	28	[7464]	RETURN   	R4 0 ; return R4,... 
	29	[7466]	RETURN   	R0 1 ; return 

function #362 <?:7468,7470> (5 instructions, 20 bytes at 0000025274F38CD0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7469]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7469]	MOVE     	R2 R0 ; R2 := R0
	3	[7469]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7469]	RETURN   	R1 2 ; return R1 
	5	[7470]	RETURN   	R0 1 ; return 

function #363 <?:7472,7601> (319 instructions, 1276 bytes at 0000025274F38DC0)
3 params, 38 slots, 2 upvalues, 0 locals, 53 constants, 2 functions
	1	[7473]	NEWTABLE 	R3 0 5 ; R3 := {}
	2	[7473]	SETTABLE 	R3 K0 K1 ; R3["Name"] := nil
	3	[7473]	SETTABLE 	R3 K2 K1 ; R3["NameWithRank"] := nil
	4	[7473]	SETTABLE 	R3 K3 K1 ; R3["WeaponInfo"] := nil
	5	[7473]	SETTABLE 	R3 K4 K1 ; R3["CompanionInfo"] := nil
	6	[7473]	SETTABLE 	R3 K5 K1 ; R3["AuraInfo"] := nil
	7	[7474]	GETGLOBAL	R4 K6 ; R4 := 0x7b998233
	8	[7474]	MOVE     	R5 R1 ; R5 := R1
	9	[7474]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[7474]	TEST     	R4 1 ; if R4 then PC := 318
	11	[7474]	JMP      	318 ; PC := 318
	12	[7475]	GETTABLE 	R4 R1 K7 ; R4 := R1["name"]
	13	[7476]	GETGLOBAL	R5 K8 ; R5 := cjson
	14	[7476]	GETTABLE 	R5 R5 K9 ; R5 := R5[0x7ab914d8]
	15	[7476]	GETTABLE 	R6 R1 K10 ; R6 := R1["loadout"]
	16	[7476]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[7478]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	18	[7478]	MOVE     	R7 R4 ; R7 := R4
	19	[7478]	CALL     	R6 2 2 ; R6 := R6(R7)
	20	[7478]	TEST     	R6 1 ; if R6 then PC := 318
	21	[7478]	JMP      	318 ; PC := 318
	22	[7478]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	23	[7478]	MOVE     	R7 R5 ; R7 := R5
	24	[7478]	CALL     	R6 2 2 ; R6 := R6(R7)
	25	[7478]	TEST     	R6 1 ; if R6 then PC := 318
	26	[7478]	JMP      	318 ; PC := 318
	27	[7478]	EQ       	1 R4 K11 ; if R4 == "" then PC := 318
	28	[7478]	JMP      	318 ; PC := 318
	29	[7480]	LOADK    	R6 := 0.000000
	30	[7481]	GETGLOBAL	R7 K6 ; R7 := 0x7b998233
	31	[7481]	GETTABLE 	R8 R5 K12 ; R8 := R5["PlayerLevel"]
	32	[7481]	CALL     	R7 2 2 ; R7 := R7(R8)
	33	[7481]	TEST     	R7 1 ; if R7 then PC := 39
	34	[7481]	JMP      	39 ; PC := 39
	35	[7481]	GETTABLE 	R7 R5 K12 ; R7 := R5["PlayerLevel"]
	36	[7481]	EQ       	1 R7 K11 ; if R7 == "" then PC := 39
	37	[7481]	JMP      	39 ; PC := 39
	38	[7482]	GETTABLE 	R6 R5 K12 ; R6 := R5["PlayerLevel"]
	39	[7484]	MOVE     	R7 R4 ; R7 := R4
	40	[7485]	SELF     	R8 R0 K13 ; R9 := R0; R8 := R0[0x42b04007]
	41	[7485]	LOADK    	R10 K14 ; R10 := "<RANK_"
	42	[7485]	MOVE     	R11 R6 ; R11 := R6
	43	[7485]	LOADK    	R12 K15 ; R12 := ">"
	44	[7485]	CONCAT   	R10 R10 R12 ; R10 := R10 .. R11 .. R12
	45	[7485]	OP_LOADBOOL	R11 1 0 ; R11 := true
	46	[7485]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	47	[7485]	GETUPVAL 	R9 U0 ; R9 := U0
	48	[7485]	MOVE     	R10 R6 ; R10 := R6
	49	[7485]	CALL     	R9 2 2 ; R9 := R9(R10)
	50	[7485]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	51	[7486]	MOVE     	R9 R7 ; R9 := R7
	52	[7486]	LOADK    	R10 K16 ; R10 := " "
	53	[7486]	MOVE     	R11 R8 ; R11 := R8
	54	[7486]	CONCAT   	R7 R9 R11 ; R7 := R9 .. R10 .. R11
	55	[7488]	SETTABLE 	R3 K0 R4 ; R3["Name"] := R4
	56	[7489]	SETTABLE 	R3 K2 R7 ; R3["NameWithRank"] := R7
	57	[7492]	LOADNIL  	R9 R10 ; R9 := R10 := nil
	58	[7495]	GETUPVAL 	R11 U1 ; R11 := U1
	59	[7495]	GETTABLE 	R11 R11 K17 ; R11 := R11[0x06d055f9]
	60	[7495]	GETTABLE 	R12 R5 K18 ; R12 := R5["NORMAL_PVP"]
	61	[7495]	EQ       	0 R12 K1 ; if R12 ~= nil then PC := 64
	62	[7495]	JMP      	64 ; PC := 64
	63	[7495]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 64
	64	[7495]	OP_LOADBOOL	R12 1 0 ; R12 := true
	65	[7495]	GETTABLE 	R13 R5 K18 ; R13 := R5["NORMAL_PVP"]
	66	[7495]	GETTABLE 	R14 R5 K19 ; R14 := R5["NORMAL"]
	67	[7495]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	68	[7495]	MOVE     	R9 R11 ; R9 := R11
	69	[7496]	GETUPVAL 	R11 U1 ; R11 := U1
	70	[7496]	GETTABLE 	R11 R11 K17 ; R11 := R11[0x06d055f9]
	71	[7496]	GETTABLE 	R12 R5 K18 ; R12 := R5["NORMAL_PVP"]
	72	[7496]	EQ       	0 R12 K1 ; if R12 ~= nil then PC := 75
	73	[7496]	JMP      	75 ; PC := 75
	74	[7496]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 75
	75	[7496]	OP_LOADBOOL	R12 1 0 ; R12 := true
	76	[7496]	LOADK    	R13 := 3.000000
	77	[7496]	LOADK    	R14 := 0.000000
	78	[7496]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	79	[7496]	MOVE     	R10 R11 ; R10 := R11
	80	[7498]	NEWTABLE 	R11 5 0 ; R11 := {}
	81	[7499]	NEWTABLE 	R12 0 2 ; R12 := {}
	82	[7500]	GETTABLE 	R13 R9 K22 ; R13 := R9[1.000000]
	83	[7500]	SETTABLE 	R12 K21 R13 ; R12["Type"] := R13
	84	[7500]	SETTABLE 	R12 K23 K24 ; R12["isWeapon"] := true
	85	[7500]	NEWTABLE 	R13 0 1 ; R13 := {}
	86	[7501]	GETTABLE 	R14 R5 K25 ; R14 := R5["DragonKey"]
	87	[7501]	SETTABLE 	R13 K21 R14 ; R13["Type"] := R14
	88	[7501]	NEWTABLE 	R14 0 2 ; R14 := {}
	89	[7502]	GETTABLE 	R15 R9 K26 ; R15 := R9[3.000000]
	90	[7502]	SETTABLE 	R14 K21 R15 ; R14["Type"] := R15
	91	[7502]	SETTABLE 	R14 K23 K24 ; R14["isWeapon"] := true
	92	[7502]	NEWTABLE 	R15 0 2 ; R15 := {}
	93	[7503]	GETTABLE 	R16 R9 K27 ; R16 := R9[2.000000]
	94	[7503]	SETTABLE 	R15 K21 R16 ; R15["Type"] := R16
	95	[7503]	SETTABLE 	R15 K23 K24 ; R15["isWeapon"] := true
	96	[7503]	NEWTABLE 	R16 0 2 ; R16 := {}
	97	[7504]	GETTABLE 	R17 R9 K28 ; R17 := R9[4.000000]
	98	[7504]	SETTABLE 	R16 K21 R17 ; R16["Type"] := R17
	99	[7504]	SETTABLE 	R16 K23 K24 ; R16["isWeapon"] := true
	100	[7505]	SETLIST  	R11 5 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 5
	101	[7513]	CLOSURE  	R12 0 ; R12 := closure(Function #1)
	102	[7521]	CLOSURE  	R13 1 ; R13 := closure(Function #2)
	103	[7523]	MOVE     	R14 R13 ; R14 := R13
	104	[7523]	MOVE     	R15 R2 ; R15 := R2
	105	[7523]	CALL     	R14 2 2 ; R14 := R14(R15)
	106	[7523]	TEST     	R14 1 ; if R14 then PC := 113
	107	[7523]	JMP      	113 ; PC := 113
	108	[7523]	MOVE     	R14 R12 ; R14 := R12
	109	[7523]	MOVE     	R15 R2 ; R15 := R2
	110	[7523]	CALL     	R14 2 2 ; R14 := R14(R15)
	111	[7523]	TEST     	R14 0 ; if not R14 then PC := 135
	112	[7523]	JMP      	135 ; PC := 135
	113	[7523]	GETTABLE 	R14 R5 K29 ; R14 := R5["ARCHWING"]
	114	[7523]	TEST     	R14 0 ; if not R14 then PC := 135
	115	[7523]	JMP      	135 ; PC := 135
	116	[7523]	GETTABLE 	R14 R5 K30 ; R14 := R5["HasArchwing"]
	117	[7523]	TEST     	R14 0 ; if not R14 then PC := 135
	118	[7523]	JMP      	135 ; PC := 135
	119	[7524]	LOADK    	R14 := 1.000000
	120	[7524]	GETTABLE 	R15 R5 K29 ; R15 := R5["ARCHWING"]
	121	[7524]	LEN      	R15 R15 ; R15 := # R15
	122	[7524]	LOADK    	R16 := 1.000000
	123	[7524]	FORPREP  	R14 134 ; R14 -= R16; PC := 134
	124	[7525]	GETGLOBAL	R18 K31 ; R18 := 0x33bdd652
	125	[7525]	GETTABLE 	R18 R18 K32 ; R18 := R18[0x23d5322f]
	126	[7525]	MOVE     	R19 R11 ; R19 := R11
	127	[7525]	NEWTABLE 	R20 0 2 ; R20 := {}
	128	[7525]	GETTABLE 	R21 R5 K29 ; R21 := R5["ARCHWING"]
	129	[7525]	ADD      	R22 K33 R17 ; R22 := 0.000000 + R17
	130	[7525]	GETTABLE 	R21 R21 R22 ; R21 := R21[R22]
	131	[7525]	SETTABLE 	R20 K21 R21 ; R20["Type"] := R21
	132	[7525]	SETTABLE 	R20 K23 K24 ; R20["isWeapon"] := true
	133	[7525]	CALL     	R18 3 1 ; R18(R19,R20)
	134	[7524]	FORLOOP  	R14 124 ; R14 += R16; if R14 <= R15 then begin PC := 124; R17 := R14 end
	135	[7529]	GETGLOBAL	R18 K6 ; R18 := 0x7b998233
	136	[7529]	MOVE     	R19 R9 ; R19 := R9
	137	[7529]	CALL     	R18 2 2 ; R18 := R18(R19)
	138	[7529]	TEST     	R18 1 ; if R18 then PC := 239
	139	[7529]	JMP      	239 ; PC := 239
	140	[7529]	GETGLOBAL	R18 K6 ; R18 := 0x7b998233
	141	[7529]	MOVE     	R19 R11 ; R19 := R11
	142	[7529]	CALL     	R18 2 2 ; R18 := R18(R19)
	143	[7529]	TEST     	R18 1 ; if R18 then PC := 239
	144	[7529]	JMP      	239 ; PC := 239
	145	[7530]	LOADK    	R18 K11 ; R18 := ""
	146	[7531]	LOADK    	R19 := 1.000000
	147	[7531]	LEN      	R20 R11 ; R20 := # R11
	148	[7531]	LOADK    	R21 := 1.000000
	149	[7531]	FORPREP  	R19 237 ; R19 -= R21; PC := 237
	150	[7532]	GETTABLE 	R23 R11 R22 ; R23 := R11[R22]
	151	[7533]	GETGLOBAL	R24 K6 ; R24 := 0x7b998233
	152	[7533]	MOVE     	R25 R23 ; R25 := R23
	153	[7533]	CALL     	R24 2 2 ; R24 := R24(R25)
	154	[7533]	TEST     	R24 1 ; if R24 then PC := 237
	155	[7533]	JMP      	237 ; PC := 237
	156	[7533]	GETTABLE 	R24 R23 K21 ; R24 := R23["Type"]
	157	[7533]	TEST     	R24 0 ; if not R24 then PC := 237
	158	[7533]	JMP      	237 ; PC := 237
	159	[7533]	GETTABLE 	R24 R23 K21 ; R24 := R23["Type"]
	160	[7533]	GETTABLE 	R24 R24 K34 ; R24 := R24["LocTag"]
	161	[7533]	TEST     	R24 0 ; if not R24 then PC := 237
	162	[7533]	JMP      	237 ; PC := 237
	163	[7534]	GETTABLE 	R24 R23 K23 ; R24 := R23["isWeapon"]
	164	[7534]	TEST     	R24 0 ; if not R24 then PC := 199
	165	[7534]	JMP      	199 ; PC := 199
	166	[7535]	GETGLOBAL	R24 K35 ; R24 := 0x64fb1586
	167	[7535]	GETTABLE 	R25 R23 K21 ; R25 := R23["Type"]
	168	[7535]	GETTABLE 	R25 R25 K34 ; R25 := R25["LocTag"]
	169	[7535]	CALL     	R24 2 2 ; R24 := R24(R25)
	170	[7536]	GETGLOBAL	R25 K20 ; R25 := 0x6c97a788
	171	[7536]	GETTABLE 	R25 R25 K36 ; R25 := R25[0x834628e8]
	172	[7536]	MOVE     	R26 R24 ; R26 := R24
	173	[7536]	CALL     	R25 2 2 ; R25 := R25(R26)
	174	[7537]	EQ       	1 R25 K11 ; if R25 == "" then PC := 177
	175	[7537]	JMP      	177 ; PC := 177
	176	[7538]	MOVE     	R24 R25 ; R24 := R25
	177	[7541]	EQ       	1 R24 K11 ; if R24 == "" then PC := 237
	178	[7541]	JMP      	237 ; PC := 237
	179	[7542]	LT       	0 K22 R22 ; if 1.000000 >= R22 then PC := 184
	180	[7542]	JMP      	184 ; PC := 184
	181	[7543]	MOVE     	R26 R18 ; R26 := R18
	182	[7543]	LOADK    	R27 K37 ; R27 := "\n\r"
	183	[7543]	CONCAT   	R18 R26 R27 ; R18 := R26 .. R27
	184	[7545]	GETTABLE 	R26 R23 K21 ; R26 := R23["Type"]
	185	[7545]	GETTABLE 	R26 R26 K38 ; R26 := R26["Level"]
	186	[7546]	MOVE     	R27 R18 ; R27 := R18
	187	[7546]	GETGLOBAL	R28 K39 ; R28 := 0x7f5022cf
	188	[7546]	GETTABLE 	R28 R28 K40 ; R28 := R28[0x3f3e4d12]
	189	[7546]	SELF     	R29 R0 K13 ; R30 := R0; R29 := R0[0x42b04007]
	190	[7546]	MOVE     	R31 R24 ; R31 := R24
	191	[7546]	OP_LOADBOOL	R32 1 0 ; R32 := true
	192	[7546]	CALL     	R29 4 0 ; R29,... := R29(R30,R31,R32)
	193	[7546]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	194	[7546]	LOADK    	R29 K41 ; R29 := " ["
	195	[7546]	MOVE     	R30 R26 ; R30 := R26
	196	[7546]	LOADK    	R31 K42 ; R31 := "]"
	197	[7546]	CONCAT   	R18 R27 R31 ; R18 := R27 .. R28 .. R29 .. R30 .. R31
	198	[7547]	JMP      	237 ; PC := 237
	199	[7549]	GETGLOBAL	R27 K6 ; R27 := 0x7b998233
	200	[7549]	GETTABLE 	R28 R23 K21 ; R28 := R23["Type"]
	201	[7549]	CALL     	R27 2 2 ; R27 := R27(R28)
	202	[7549]	TEST     	R27 1 ; if R27 then PC := 237
	203	[7549]	JMP      	237 ; PC := 237
	204	[7549]	GETGLOBAL	R27 K43 ; R27 := 0x7ed0a956
	205	[7549]	GETTABLE 	R28 R23 K21 ; R28 := R23["Type"]
	206	[7549]	CALL     	R27 2 2 ; R27 := R27(R28)
	207	[7549]	SELF     	R27 R27 K44 ; R28 := R27; R27 := R27[0xf2deaf69]
	208	[7549]	GETGLOBAL	R29 K43 ; R29 := 0x7ed0a956
	209	[7549]	LOADK    	R30 K45 ; R30 := "/Lotus/Types/Restoratives/Upgraded/CorruptedKey"
	210	[7549]	CALL     	R29 2 0 ; R29,... := R29(R30)
	211	[7549]	CALL     	R27 0 2 ; R27 := R27(R28,...)
	212	[7549]	TEST     	R27 0 ; if not R27 then PC := 237
	213	[7549]	JMP      	237 ; PC := 237
	214	[7550]	GETGLOBAL	R27 K46 ; R27 := 0xb009bbc6
	215	[7550]	GETTABLE 	R28 R23 K21 ; R28 := R23["Type"]
	216	[7550]	CALL     	R27 2 2 ; R27 := R27(R28)
	217	[7551]	GETGLOBAL	R28 K6 ; R28 := 0x7b998233
	218	[7551]	MOVE     	R29 R27 ; R29 := R27
	219	[7551]	CALL     	R28 2 2 ; R28 := R28(R29)
	220	[7551]	TEST     	R28 1 ; if R28 then PC := 237
	221	[7551]	JMP      	237 ; PC := 237
	222	[7552]	LT       	0 K22 R22 ; if 1.000000 >= R22 then PC := 227
	223	[7552]	JMP      	227 ; PC := 227
	224	[7553]	MOVE     	R28 R18 ; R28 := R18
	225	[7553]	LOADK    	R29 K37 ; R29 := "\n\r"
	226	[7553]	CONCAT   	R18 R28 R29 ; R18 := R28 .. R29
	227	[7555]	SELF     	R28 R27 K47 ; R29 := R27; R28 := R27[0xd3a9d01f]
	228	[7555]	CALL     	R28 2 2 ; R28 := R28(R29)
	229	[7556]	MOVE     	R29 R18 ; R29 := R18
	230	[7556]	SELF     	R30 R0 K13 ; R31 := R0; R30 := R0[0x42b04007]
	231	[7556]	GETGLOBAL	R32 K35 ; R32 := 0x64fb1586
	232	[7556]	MOVE     	R33 R28 ; R33 := R28
	233	[7556]	CALL     	R32 2 2 ; R32 := R32(R33)
	234	[7556]	OP_LOADBOOL	R33 0 0 ; R33 := false
	235	[7556]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	236	[7556]	CONCAT   	R18 R29 R30 ; R18 := R29 .. R30
	237	[7531]	FORLOOP  	R19 150 ; R19 += R21; if R19 <= R20 then begin PC := 150; R22 := R19 end
	238	[7562]	SETTABLE 	R3 K3 R18 ; R3["WeaponInfo"] := R18
	239	[7566]	LOADK    	R29 K11 ; R29 := ""
	240	[7567]	GETTABLE 	R30 R5 K48 ; R30 := R5["KubrowName"]
	241	[7567]	EQ       	1 R30 K11 ; if R30 == "" then PC := 256
	242	[7567]	JMP      	256 ; PC := 256
	243	[7568]	GETUPVAL 	R30 U1 ; R30 := U1
	244	[7568]	GETTABLE 	R30 R30 K49 ; R30 := R30[0x23a862e6]
	245	[7568]	CALL     	R30 1 2 ; R30 := R30()
	246	[7568]	TEST     	R30 0 ; if not R30 then PC := 254
	247	[7568]	JMP      	254 ; PC := 254
	248	[7569]	SELF     	R30 R0 K13 ; R31 := R0; R30 := R0[0x42b04007]
	249	[7569]	LOADK    	R32 K50 ; R32 := "/Lotus/Language/Menu/CategoryKubrow"
	250	[7569]	OP_LOADBOOL	R33 0 0 ; R33 := false
	251	[7569]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	252	[7569]	MOVE     	R29 R30 ; R29 := R30
	253	[7569]	JMP      	286 ; PC := 286
	254	[7571]	GETTABLE 	R29 R5 K48 ; R29 := R5["KubrowName"]
	255	[7572]	JMP      	286 ; PC := 286
	256	[7573]	GETGLOBAL	R30 K6 ; R30 := 0x7b998233
	257	[7573]	GETTABLE 	R31 R5 K51 ; R31 := R5["SENTINEL"]
	258	[7573]	CALL     	R30 2 2 ; R30 := R30(R31)
	259	[7573]	TEST     	R30 1 ; if R30 then PC := 286
	260	[7573]	JMP      	286 ; PC := 286
	261	[7574]	GETGLOBAL	R30 K35 ; R30 := 0x64fb1586
	262	[7574]	GETTABLE 	R31 R5 K51 ; R31 := R5["SENTINEL"]
	263	[7574]	GETTABLE 	R31 R31 K22 ; R31 := R31[1.000000]
	264	[7574]	GETTABLE 	R31 R31 K34 ; R31 := R31["LocTag"]
	265	[7574]	CALL     	R30 2 2 ; R30 := R30(R31)
	266	[7575]	GETGLOBAL	R31 K6 ; R31 := 0x7b998233
	267	[7575]	MOVE     	R32 R30 ; R32 := R30
	268	[7575]	CALL     	R31 2 2 ; R31 := R31(R32)
	269	[7575]	TEST     	R31 1 ; if R31 then PC := 286
	270	[7575]	JMP      	286 ; PC := 286
	271	[7576]	GETGLOBAL	R31 K20 ; R31 := 0x6c97a788
	272	[7576]	GETTABLE 	R31 R31 K36 ; R31 := R31[0x834628e8]
	273	[7576]	MOVE     	R32 R30 ; R32 := R30
	274	[7576]	CALL     	R31 2 2 ; R31 := R31(R32)
	275	[7577]	EQ       	1 R31 K11 ; if R31 == "" then PC := 279
	276	[7577]	JMP      	279 ; PC := 279
	277	[7578]	MOVE     	R29 R31 ; R29 := R31
	278	[7578]	JMP      	286 ; PC := 286
	279	[7580]	SELF     	R32 R0 K13 ; R33 := R0; R32 := R0[0x42b04007]
	280	[7580]	GETGLOBAL	R34 K35 ; R34 := 0x64fb1586
	281	[7580]	MOVE     	R35 R30 ; R35 := R30
	282	[7580]	CALL     	R34 2 2 ; R34 := R34(R35)
	283	[7580]	OP_LOADBOOL	R35 0 0 ; R35 := false
	284	[7580]	CALL     	R32 4 2 ; R32 := R32(R33,R34,R35)
	285	[7580]	MOVE     	R29 R32 ; R29 := R32
	286	[7584]	EQ       	1 R29 K11 ; if R29 == "" then PC := 302
	287	[7584]	JMP      	302 ; PC := 302
	288	[7584]	GETGLOBAL	R32 K6 ; R32 := 0x7b998233
	289	[7584]	GETTABLE 	R33 R5 K51 ; R33 := R5["SENTINEL"]
	290	[7584]	CALL     	R32 2 2 ; R32 := R32(R33)
	291	[7584]	TEST     	R32 1 ; if R32 then PC := 302
	292	[7584]	JMP      	302 ; PC := 302
	293	[7585]	GETTABLE 	R32 R5 K51 ; R32 := R5["SENTINEL"]
	294	[7585]	GETTABLE 	R32 R32 K22 ; R32 := R32[1.000000]
	295	[7585]	GETTABLE 	R32 R32 K38 ; R32 := R32["Level"]
	296	[7586]	LOADK    	R33 K37 ; R33 := "\n\r"
	297	[7586]	MOVE     	R34 R29 ; R34 := R29
	298	[7586]	LOADK    	R35 K41 ; R35 := " ["
	299	[7586]	MOVE     	R36 R32 ; R36 := R32
	300	[7586]	LOADK    	R37 K42 ; R37 := "]"
	301	[7586]	CONCAT   	R29 R33 R37 ; R29 := R33 .. R34 .. R35 .. R36 .. R37
	302	[7589]	SETTABLE 	R3 K4 R29 ; R3["CompanionInfo"] := R29
	303	[7592]	SELF     	R33 R0 K13 ; R34 := R0; R33 := R0[0x42b04007]
	304	[7592]	GETGLOBAL	R35 K35 ; R35 := 0x64fb1586
	305	[7592]	GETTABLE 	R36 R5 K52 ; R36 := R5["AuraName"]
	306	[7592]	CALL     	R35 2 2 ; R35 := R35(R36)
	307	[7592]	OP_LOADBOOL	R36 0 0 ; R36 := false
	308	[7592]	CALL     	R33 4 2 ; R33 := R33(R34,R35,R36)
	309	[7593]	EQ       	1 R33 K11 ; if R33 == "" then PC := 317
	310	[7593]	JMP      	317 ; PC := 317
	311	[7594]	LOADK    	R34 K37 ; R34 := "\n\r"
	312	[7594]	GETGLOBAL	R35 K39 ; R35 := 0x7f5022cf
	313	[7594]	GETTABLE 	R35 R35 K40 ; R35 := R35[0x3f3e4d12]
	314	[7594]	MOVE     	R36 R33 ; R36 := R33
	315	[7594]	CALL     	R35 2 2 ; R35 := R35(R36)
	316	[7594]	CONCAT   	R33 R34 R35 ; R33 := R34 .. R35
	317	[7597]	SETTABLE 	R3 K5 R33 ; R3["AuraInfo"] := R33
	318	[7600]	RETURN   	R3 2 ; return R3 
	319	[7601]	RETURN   	R0 1 ; return 

function #364 <?:7603,7720> (10 instructions, 40 bytes at 0000025274F3A380)
0 params, 2 slots, 2 upvalues, 0 locals, 3 constants, 2 functions
	1	[7604]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[7693]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	3	[7693]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[7693]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[7693]	SETTABLE 	R0 K1 R1 ; R0["OnVendorConversationStarted"] := R1
	6	[7695]	GETGLOBAL	R0 K0 ; R0 := _T
	7	[7719]	CLOSURE  	R1 1 ; R1 := closure(Function #2)
	8	[7719]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[7719]	SETTABLE 	R0 K2 R1 ; R0["OnVendorConversationEnded"] := R1
	10	[7720]	RETURN   	R0 1 ; return 

function #365 <?:7722,7728> (24 instructions, 96 bytes at 0000025274F3B9F0)
1 param, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7723]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7723]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7723]	GETTABLE 	R2 R2 K2 ; R2 := R2["HideHud"]
	4	[7723]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7723]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7723]	JMP      	9 ; PC := 9
	7	[7724]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[7724]	SETTABLE 	R1 K2 K3 ; R1["HideHud"] := 0.000000
	9	[7727]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7727]	GETGLOBAL	R2 K4 ; R2 := 0x5bced4c4
	11	[7727]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb62ecfe0]
	12	[7727]	LOADK    	R3 := 0.000000
	13	[7727]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7727]	GETTABLE 	R4 R4 K2 ; R4 := R4["HideHud"]
	15	[7727]	GETUPVAL 	R5 U0 ; R5 := U0
	16	[7727]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x06d055f9]
	17	[7727]	MOVE     	R6 R0 ; R6 := R0
	18	[7727]	LOADK    	R7 := 1.000000
	19	[7727]	LOADK    	R8 := -1.000000
	20	[7727]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[7727]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	22	[7727]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[7727]	SETTABLE 	R1 K2 R2 ; R1["HideHud"] := R2
	24	[7728]	RETURN   	R0 1 ; return 

function #366 <?:7730,7736> (24 instructions, 96 bytes at 0000025274F3BC10)
1 param, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7731]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7731]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7731]	GETTABLE 	R2 R2 K2 ; R2 := R2["HideNotifications"]
	4	[7731]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7731]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7731]	JMP      	9 ; PC := 9
	7	[7732]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[7732]	SETTABLE 	R1 K2 K3 ; R1["HideNotifications"] := 0.000000
	9	[7735]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7735]	GETGLOBAL	R2 K4 ; R2 := 0x5bced4c4
	11	[7735]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb62ecfe0]
	12	[7735]	LOADK    	R3 := 0.000000
	13	[7735]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7735]	GETTABLE 	R4 R4 K2 ; R4 := R4["HideNotifications"]
	15	[7735]	GETUPVAL 	R5 U0 ; R5 := U0
	16	[7735]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x06d055f9]
	17	[7735]	MOVE     	R6 R0 ; R6 := R0
	18	[7735]	LOADK    	R7 := 1.000000
	19	[7735]	LOADK    	R8 := -1.000000
	20	[7735]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[7735]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	22	[7735]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[7735]	SETTABLE 	R1 K2 R2 ; R1["HideNotifications"] := R2
	24	[7736]	RETURN   	R0 1 ; return 

function #367 <?:7738,7744> (24 instructions, 96 bytes at 0000025274F3BE40)
1 param, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7739]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7739]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7739]	GETTABLE 	R2 R2 K2 ; R2 := R2["HideMapRedux"]
	4	[7739]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7739]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7739]	JMP      	9 ; PC := 9
	7	[7740]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[7740]	SETTABLE 	R1 K2 K3 ; R1["HideMapRedux"] := 0.000000
	9	[7743]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7743]	GETGLOBAL	R2 K4 ; R2 := 0x5bced4c4
	11	[7743]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb62ecfe0]
	12	[7743]	LOADK    	R3 := 0.000000
	13	[7743]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7743]	GETTABLE 	R4 R4 K2 ; R4 := R4["HideMapRedux"]
	15	[7743]	GETUPVAL 	R5 U0 ; R5 := U0
	16	[7743]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x06d055f9]
	17	[7743]	MOVE     	R6 R0 ; R6 := R0
	18	[7743]	LOADK    	R7 := 1.000000
	19	[7743]	LOADK    	R8 := -1.000000
	20	[7743]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[7743]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	22	[7743]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[7743]	SETTABLE 	R1 K2 R2 ; R1["HideMapRedux"] := R2
	24	[7744]	RETURN   	R0 1 ; return 

function #368 <?:7746,7752> (24 instructions, 96 bytes at 0000025274F3C070)
1 param, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7747]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7747]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7747]	GETTABLE 	R2 R2 K2 ; R2 := R2["HideSquadOverlay"]
	4	[7747]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7747]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7747]	JMP      	9 ; PC := 9
	7	[7748]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[7748]	SETTABLE 	R1 K2 K3 ; R1["HideSquadOverlay"] := 0.000000
	9	[7751]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7751]	GETGLOBAL	R2 K4 ; R2 := 0x5bced4c4
	11	[7751]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb62ecfe0]
	12	[7751]	LOADK    	R3 := 0.000000
	13	[7751]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7751]	GETTABLE 	R4 R4 K2 ; R4 := R4["HideSquadOverlay"]
	15	[7751]	GETUPVAL 	R5 U0 ; R5 := U0
	16	[7751]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x06d055f9]
	17	[7751]	MOVE     	R6 R0 ; R6 := R0
	18	[7751]	LOADK    	R7 := 1.000000
	19	[7751]	LOADK    	R8 := -1.000000
	20	[7751]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[7751]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	22	[7751]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[7751]	SETTABLE 	R1 K2 R2 ; R1["HideSquadOverlay"] := R2
	24	[7752]	RETURN   	R0 1 ; return 

function #369 <?:7754,7760> (24 instructions, 96 bytes at 0000025274F3C2A0)
1 param, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7755]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7755]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7755]	GETTABLE 	R2 R2 K2 ; R2 := R2["HideEOM"]
	4	[7755]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7755]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7755]	JMP      	9 ; PC := 9
	7	[7756]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[7756]	SETTABLE 	R1 K2 K3 ; R1["HideEOM"] := 0.000000
	9	[7759]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7759]	GETGLOBAL	R2 K4 ; R2 := 0x5bced4c4
	11	[7759]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb62ecfe0]
	12	[7759]	LOADK    	R3 := 0.000000
	13	[7759]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7759]	GETTABLE 	R4 R4 K2 ; R4 := R4["HideEOM"]
	15	[7759]	GETUPVAL 	R5 U0 ; R5 := U0
	16	[7759]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x06d055f9]
	17	[7759]	MOVE     	R6 R0 ; R6 := R0
	18	[7759]	LOADK    	R7 := 1.000000
	19	[7759]	LOADK    	R8 := -1.000000
	20	[7759]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[7759]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	22	[7759]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[7759]	SETTABLE 	R1 K2 R2 ; R1["HideEOM"] := R2
	24	[7760]	RETURN   	R0 1 ; return 

function #370 <?:7762,7773> (42 instructions, 168 bytes at 0000025274F3C4C0)
3 params, 10 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[7763]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[7763]	SELF     	R4 R1 K1 ; R5 := R1; R4 := R1[0x78298275]
	3	[7763]	CALL     	R4 2 0 ; R4,... := R4(R5)
	4	[7763]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	5	[7763]	TEST     	R3 1 ; if R3 then PC := 40
	6	[7763]	JMP      	40 ; PC := 40
	7	[7764]	SELF     	R3 R1 K1 ; R4 := R1; R3 := R1[0x78298275]
	8	[7764]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[7764]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x0b4bcfb6]
	10	[7764]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[7764]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x02bb4ff1]
	12	[7764]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[7765]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	14	[7765]	MOVE     	R5 R3 ; R5 := R3
	15	[7765]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[7765]	TEST     	R4 1 ; if R4 then PC := 40
	17	[7765]	JMP      	40 ; PC := 40
	18	[7766]	SELF     	R4 R1 K4 ; R5 := R1; R4 := R1[0xa3f8dbe6]
	19	[7766]	SELF     	R6 R3 K5 ; R7 := R3; R6 := R3[0xd1586535]
	20	[7766]	CALL     	R6 2 2 ; R6 := R6(R7)
	21	[7766]	SELF     	R7 R3 K5 ; R8 := R3; R7 := R3[0xd1586535]
	22	[7766]	CALL     	R7 2 2 ; R7 := R7(R8)
	23	[7766]	SELF     	R8 R0 K6 ; R9 := R0; R8 := R0[0x548b03be]
	24	[7766]	CALL     	R8 2 2 ; R8 := R8(R9)
	25	[7766]	MUL      	R8 R8 K7 ; R8 := R8 * 200.000000
	26	[7766]	ADD      	R7 R7 R8 ; R7 := R7 + R8
	27	[7766]	LOADNIL  	R8 R8 ; R8 := nil
	28	[7766]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	29	[7767]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	30	[7767]	MOVE     	R6 R4 ; R6 := R4
	31	[7767]	CALL     	R5 2 2 ; R5 := R5(R6)
	32	[7767]	TEST     	R5 1 ; if R5 then PC := 40
	33	[7767]	JMP      	40 ; PC := 40
	34	[7767]	SELF     	R5 R4 K8 ; R6 := R4; R5 := R4[0xf2deaf69]
	35	[7767]	MOVE     	R7 R2 ; R7 := R2
	36	[7767]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	37	[7767]	TEST     	R5 0 ; if not R5 then PC := 40
	38	[7767]	JMP      	40 ; PC := 40
	39	[7768]	RETURN   	R4 2 ; return R4 
	40	[7772]	LOADNIL  	R5 R5 ; R5 := nil
	41	[7772]	RETURN   	R5 2 ; return R5 
	42	[7773]	RETURN   	R0 1 ; return 

function #371 <?:7775,7791> (29 instructions, 116 bytes at 0000025274F3C770)
1 param, 9 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[7776]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[7778]	GETGLOBAL	R2 K0 ; R2 := 0x33bdd652
	3	[7778]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x23d5322f]
	4	[7778]	MOVE     	R3 R1 ; R3 := R1
	5	[7778]	LOADK    	R4 := 16.000000
	6	[7778]	CALL     	R2 3 1 ; R2(R3,R4)
	7	[7780]	TEST     	R0 0 ; if not R0 then PC := 14
	8	[7780]	JMP      	14 ; PC := 14
	9	[7781]	GETGLOBAL	R2 K0 ; R2 := 0x33bdd652
	10	[7781]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x23d5322f]
	11	[7781]	MOVE     	R3 R1 ; R3 := R1
	12	[7781]	LOADK    	R4 := 1024.000000
	13	[7781]	CALL     	R2 3 1 ; R2(R3,R4)
	14	[7784]	LOADK    	R2 := 1.000000
	15	[7784]	LEN      	R3 R1 ; R3 := # R1
	16	[7784]	LOADK    	R4 := 1.000000
	17	[7784]	FORPREP  	R2 26 ; R2 -= R4; PC := 26
	18	[7785]	GETGLOBAL	R6 K3 ; R6 := 0x25d99d89
	19	[7785]	SELF     	R6 R6 K4 ; R7 := R6; R6 := R6[0x3a57bc9f]
	20	[7785]	GETTABLE 	R8 R1 R5 ; R8 := R1[R5]
	21	[7785]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	22	[7785]	TEST     	R6 0 ; if not R6 then PC := 26
	23	[7785]	JMP      	26 ; PC := 26
	24	[7786]	OP_LOADBOOL	R6 1 0 ; R6 := true
	25	[7786]	RETURN   	R6 2 ; return R6 
	26	[7784]	FORLOOP  	R2 18 ; R2 += R4; if R2 <= R3 then begin PC := 18; R5 := R2 end
	27	[7790]	OP_LOADBOOL	R6 0 0 ; R6 := false
	28	[7790]	RETURN   	R6 2 ; return R6 
	29	[7791]	RETURN   	R0 1 ; return 

function #372 <?:7793,7834> (63 instructions, 252 bytes at 0000025274F3C980)
3 params, 18 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[7794]	GETGLOBAL	R3 K0 ; R3 := _T
	2	[7794]	GETTABLE 	R3 R3 K1 ; R3 := R3["DojoMgr"]
	3	[7795]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	4	[7795]	MOVE     	R5 R3 ; R5 := R3
	5	[7795]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[7795]	TEST     	R4 0 ; if not R4 then PC := 9
	7	[7795]	JMP      	9 ; PC := 9
	8	[7796]	RETURN   	R0 1 ; return 
	9	[7799]	LOADNIL  	R4 R4 ; R4 := nil
	10	[7800]	LOADK    	R5 K3 ; R5 := 1000000.000000
	11	[7802]	GETGLOBAL	R6 K4 ; R6 := 0x89326c93
	12	[7802]	SELF     	R6 R6 K5 ; R7 := R6; R6 := R6[0xc7fcada9]
	13	[7802]	GETGLOBAL	R8 K6 ; R8 := 0x0469f296
	14	[7802]	MOVE     	R9 R0 ; R9 := R0
	15	[7802]	CALL     	R8 2 0 ; R8,... := R8(R9)
	16	[7802]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	17	[7803]	LOADK    	R7 := 1.000000
	18	[7803]	LEN      	R8 R6 ; R8 := # R6
	19	[7803]	LOADK    	R9 := 1.000000
	20	[7803]	FORPREP  	R7 61 ; R7 -= R9; PC := 61
	21	[7804]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	22	[7805]	SELF     	R12 R3 K7 ; R13 := R3; R12 := R3[0xd1964243]
	23	[7805]	MOVE     	R14 R11 ; R14 := R11
	24	[7805]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	25	[7806]	LOADNIL  	R13 R13 ; R13 := nil
	26	[7808]	GETTABLE 	R14 R12 K8 ; R14 := R12["id"]
	27	[7808]	EQ       	1 R14 K9 ; if R14 == "" then PC := 34
	28	[7808]	JMP      	34 ; PC := 34
	29	[7809]	GETTABLE 	R14 R3 K10 ; R14 := R3["mDojo"]
	30	[7809]	SELF     	R14 R14 K11 ; R15 := R14; R14 := R14[0x5c69b193]
	31	[7809]	MOVE     	R16 R12 ; R16 := R12
	32	[7809]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	33	[7809]	MOVE     	R13 R14 ; R13 := R14
	34	[7812]	EQ       	1 R13 K12 ; if R13 == nil then PC := 40
	35	[7812]	JMP      	40 ; PC := 40
	36	[7812]	SELF     	R14 R13 K13 ; R15 := R13; R14 := R13[0x56c01834]
	37	[7812]	CALL     	R14 2 2 ; R14 := R14(R15)
	38	[7812]	TEST     	R14 1 ; if R14 then PC := 50
	39	[7812]	JMP      	50 ; PC := 50
	40	[7815]	TEST     	R2 1 ; if R2 then PC := 61
	41	[7815]	JMP      	61 ; PC := 61
	42	[7816]	SELF     	R14 R11 K14 ; R15 := R11; R14 := R11[0x1f420a3a]
	43	[7816]	MOVE     	R16 R1 ; R16 := R1
	44	[7816]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	45	[7817]	LT       	0 R14 R5 ; if R14 >= R5 then PC := 61
	46	[7817]	JMP      	61 ; PC := 61
	47	[7818]	MOVE     	R4 R11 ; R4 := R11
	48	[7819]	MOVE     	R5 R14 ; R5 := R14
	49	[7821]	JMP      	61 ; PC := 61
	50	[7823]	SELF     	R15 R13 K15 ; R16 := R13; R15 := R13[0x3f724bc7]
	51	[7823]	CALL     	R15 2 2 ; R15 := R15(R16)
	52	[7823]	TEST     	R15 0 ; if not R15 then PC := 61
	53	[7823]	JMP      	61 ; PC := 61
	54	[7824]	SELF     	R15 R11 K14 ; R16 := R11; R15 := R11[0x1f420a3a]
	55	[7824]	MOVE     	R17 R1 ; R17 := R1
	56	[7824]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	57	[7825]	LT       	0 R15 R5 ; if R15 >= R5 then PC := 61
	58	[7825]	JMP      	61 ; PC := 61
	59	[7826]	MOVE     	R4 R11 ; R4 := R11
	60	[7827]	MOVE     	R5 R15 ; R5 := R15
	61	[7803]	FORLOOP  	R7 21 ; R7 += R9; if R7 <= R8 then begin PC := 21; R10 := R7 end
	62	[7833]	RETURN   	R4 2 ; return R4 
	63	[7834]	RETURN   	R0 1 ; return 

function #373 <?:7836,7838> (8 instructions, 32 bytes at 0000025274F3CDA0)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[7837]	EQ       	1 R0 K0 ; if R0 == 0.000000 then PC := 6
	2	[7837]	JMP      	6 ; PC := 6
	3	[7837]	EQ       	1 R0 K1 ; if R0 == 1.000000 then PC := 6
	4	[7837]	JMP      	6 ; PC := 6
	5	[7837]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 6
	6	[7837]	OP_LOADBOOL	R1 1 0 ; R1 := true
	7	[7837]	RETURN   	R1 2 ; return R1 
	8	[7838]	RETURN   	R0 1 ; return 

function #374 <?:7840,7878> (46 instructions, 184 bytes at 0000025274F3CEC0)
9 params, 15 slots, 3 upvalues, 0 locals, 7 constants, 4 functions
	1	[7848]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	2	[7848]	GETUPVAL 	R0 U0 ; R0 := U0
	3	[7848]	MOVE     	R0 R0 ; R0 := R0
	4	[7848]	MOVE     	R0 R1 ; R0 := R1
	5	[7848]	MOVE     	R0 R8 ; R0 := R8
	6	[7850]	GETUPVAL 	R10 U1 ; R10 := U1
	7	[7850]	CALL     	R10 1 2 ; R10 := R10()
	8	[7856]	CLOSURE  	R11 1 ; R11 := closure(Function #2)
	9	[7856]	MOVE     	R0 R7 ; R0 := R7
	10	[7856]	MOVE     	R0 R0 ; R0 := R0
	11	[7856]	MOVE     	R0 R5 ; R0 := R5
	12	[7856]	SETTABLE 	R10 K0 R11 ; R10["ConfirmConditionalWord"] := R11
	13	[7862]	CLOSURE  	R11 2 ; R11 := closure(Function #3)
	14	[7862]	MOVE     	R0 R7 ; R0 := R7
	15	[7862]	MOVE     	R0 R0 ; R0 := R0
	16	[7862]	MOVE     	R0 R5 ; R0 := R5
	17	[7862]	SETTABLE 	R10 K1 R11 ; R10["OSKConfirmConditionalWord"] := R11
	18	[7870]	CLOSURE  	R11 3 ; R11 := closure(Function #4)
	19	[7870]	MOVE     	R0 R9 ; R0 := R9
	20	[7870]	MOVE     	R0 R4 ; R0 := R4
	21	[7870]	MOVE     	R0 R7 ; R0 := R7
	22	[7870]	MOVE     	R0 R0 ; R0 := R0
	23	[7870]	MOVE     	R0 R5 ; R0 := R5
	24	[7870]	SETTABLE 	R10 K2 R11 ; R10["ConditionalFirstConfirm"] := R11
	25	[7873]	GETGLOBAL	R11 K3 ; R11 := 0x34291f5c
	26	[7873]	GETTABLE 	R11 R11 K4 ; R11 := R11[0x056bfe8b]
	27	[7873]	CALL     	R11 1 2 ; R11 := R11()
	28	[7873]	TEST     	R11 1 ; if R11 then PC := 35
	29	[7873]	JMP      	35 ; PC := 35
	30	[7873]	GETGLOBAL	R11 K3 ; R11 := 0x34291f5c
	31	[7873]	GETTABLE 	R11 R11 K5 ; R11 := R11[0xe6b41adb]
	32	[7873]	CALL     	R11 1 2 ; R11 := R11()
	33	[7873]	TEST     	R11 0 ; if not R11 then PC := 42
	34	[7873]	JMP      	42 ; PC := 42
	35	[7874]	GETUPVAL 	R11 U2 ; R11 := U2
	36	[7874]	GETTABLE 	R11 R11 K6 ; R11 := R11[0xf616a184]
	37	[7874]	MOVE     	R12 R3 ; R12 := R3
	38	[7874]	LOADK    	R13 K2 ; R13 := "ConditionalFirstConfirm"
	39	[7874]	LOADK    	R14 := 3.000000
	40	[7874]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	41	[7874]	JMP      	46 ; PC := 46
	42	[7876]	MOVE     	R11 R9 ; R11 := R9
	43	[7876]	MOVE     	R12 R2 ; R12 := R2
	44	[7876]	MOVE     	R13 R6 ; R13 := R6
	45	[7876]	CALL     	R11 3 1 ; R11(R12,R13)
	46	[7878]	RETURN   	R0 1 ; return 

function #375 <?:7880,7892> (29 instructions, 116 bytes at 0000025274F3DA60)
2 params, 8 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7881]	LOADK    	R2 K0 ; R2 := "<SECONDARY_FIRE>"
	2	[7882]	LOADK    	R3 K1 ; R3 := "<MELEE_CHANNEL>"
	3	[7883]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	4	[7883]	MOVE     	R5 R0 ; R5 := R0
	5	[7883]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[7883]	TEST     	R4 1 ; if R4 then PC := 28
	7	[7883]	JMP      	28 ; PC := 28
	8	[7883]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	9	[7883]	MOVE     	R5 R1 ; R5 := R1
	10	[7883]	CALL     	R4 2 2 ; R4 := R4(R5)
	11	[7883]	TEST     	R4 1 ; if R4 then PC := 28
	12	[7883]	JMP      	28 ; PC := 28
	13	[7884]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0x54f5d6ad]
	14	[7884]	MOVE     	R6 R2 ; R6 := R2
	15	[7884]	MOVE     	R7 R1 ; R7 := R1
	16	[7884]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	17	[7884]	EQ       	1 R4 R2 ; if R4 == R2 then PC := 21
	18	[7884]	JMP      	21 ; PC := 21
	19	[7885]	RETURN   	R2 2 ; return R2 
	20	[7885]	JMP      	28 ; PC := 28
	21	[7886]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0x54f5d6ad]
	22	[7886]	MOVE     	R6 R3 ; R6 := R3
	23	[7886]	MOVE     	R7 R1 ; R7 := R1
	24	[7886]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	25	[7886]	EQ       	1 R4 R3 ; if R4 == R3 then PC := 28
	26	[7886]	JMP      	28 ; PC := 28
	27	[7887]	RETURN   	R3 2 ; return R3 
	28	[7891]	RETURN   	R2 2 ; return R2 
	29	[7892]	RETURN   	R0 1 ; return 

function #376 <?:7894,7921> (96 instructions, 384 bytes at 0000025274F3DCE0)
0 params, 5 slots, 0 upvalues, 0 locals, 30 constants, 0 functions
	1	[7896]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7896]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	3	[7896]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7896]	TEST     	R1 1 ; if R1 then PC := 92
	5	[7896]	JMP      	92 ; PC := 92
	6	[7896]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	7	[7896]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xf2deaf69]
	8	[7896]	GETGLOBAL	R3 K3 ; R3 := gLotusBaseGameRulesType
	9	[7896]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	10	[7896]	TEST     	R1 0 ; if not R1 then PC := 92
	11	[7896]	JMP      	92 ; PC := 92
	12	[7897]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	13	[7897]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xf058f9c3]
	14	[7897]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[7897]	EQ       	0 R1 K6 ; if R1 ~= 31.000000 then PC := 19
	16	[7897]	JMP      	19 ; PC := 19
	17	[7898]	GETGLOBAL	R0 K7 ; R0 := SOUND_SET_RAILJACK
	18	[7898]	JMP      	92 ; PC := 92
	19	[7900]	NEWTABLE 	R1 0 0 ; R1 := {}
	20	[7901]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	21	[7901]	GETGLOBAL	R3 K9 ; R3 := CETUS_NODE_TAG
	22	[7901]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[7901]	GETGLOBAL	R3 K10 ; R3 := SOUND_SET_EIDOLON
	24	[7901]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	25	[7902]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	26	[7902]	GETGLOBAL	R3 K11 ; R3 := PLAINS_NODE_TAG
	27	[7902]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[7902]	GETGLOBAL	R3 K10 ; R3 := SOUND_SET_EIDOLON
	29	[7902]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	30	[7903]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	31	[7903]	GETGLOBAL	R3 K12 ; R3 := ORB_VALLIS_NODE_TAG
	32	[7903]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[7903]	GETGLOBAL	R3 K13 ; R3 := SOUND_SET_ORB_VALLIS
	34	[7903]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	35	[7904]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	36	[7904]	GETGLOBAL	R3 K14 ; R3 := FORTUNA_NODE_TAG
	37	[7904]	CALL     	R2 2 2 ; R2 := R2(R3)
	38	[7904]	GETGLOBAL	R3 K15 ; R3 := SOUND_SET_FORTUNA
	39	[7904]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	40	[7905]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	41	[7905]	GETGLOBAL	R3 K16 ; R3 := OROKIN_TOWER_NODE_TAG
	42	[7905]	CALL     	R2 2 2 ; R2 := R2(R3)
	43	[7905]	GETGLOBAL	R3 K17 ; R3 := SOUND_SET_OROKIN_TOWER
	44	[7905]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	45	[7906]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	46	[7906]	GETGLOBAL	R3 K18 ; R3 := ENTRATI_LANDSCAPE_NODE_TAG
	47	[7906]	CALL     	R2 2 2 ; R2 := R2(R3)
	48	[7906]	GETGLOBAL	R3 K17 ; R3 := SOUND_SET_OROKIN_TOWER
	49	[7906]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	50	[7907]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	51	[7907]	GETGLOBAL	R3 K19 ; R3 := ZARIMAN_NODE_TAG
	52	[7907]	CALL     	R2 2 2 ; R2 := R2(R3)
	53	[7907]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	54	[7907]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	55	[7908]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	56	[7908]	GETGLOBAL	R3 K21 ; R3 := ZARIMAN_MISSION_A_TAG
	57	[7908]	CALL     	R2 2 2 ; R2 := R2(R3)
	58	[7908]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	59	[7908]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	60	[7909]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	61	[7909]	GETGLOBAL	R3 K22 ; R3 := ZARIMAN_MISSION_B_TAG
	62	[7909]	CALL     	R2 2 2 ; R2 := R2(R3)
	63	[7909]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	64	[7909]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	65	[7910]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	66	[7910]	GETGLOBAL	R3 K23 ; R3 := ZARIMAN_MISSION_C_TAG
	67	[7910]	CALL     	R2 2 2 ; R2 := R2(R3)
	68	[7910]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	69	[7910]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	70	[7911]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	71	[7911]	GETGLOBAL	R3 K24 ; R3 := ZARIMAN_MISSION_D_TAG
	72	[7911]	CALL     	R2 2 2 ; R2 := R2(R3)
	73	[7911]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	74	[7911]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	75	[7912]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	76	[7912]	GETGLOBAL	R3 K25 ; R3 := ZARIMAN_MISSION_E_TAG
	77	[7912]	CALL     	R2 2 2 ; R2 := R2(R3)
	78	[7912]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	79	[7912]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	80	[7913]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	81	[7913]	GETGLOBAL	R3 K26 ; R3 := APARTMENT_NODE_TAG
	82	[7913]	CALL     	R2 2 2 ; R2 := R2(R3)
	83	[7913]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	84	[7913]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	85	[7914]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	86	[7914]	GETGLOBAL	R3 K1 ; R3 := 0xbe190284
	87	[7914]	SELF     	R3 R3 K27 ; R4 := R3; R3 := R3[0xef893aec]
	88	[7914]	CALL     	R3 2 2 ; R3 := R3(R4)
	89	[7914]	GETTABLE 	R3 R3 K28 ; R3 := R3["location"]
	90	[7914]	CALL     	R2 2 2 ; R2 := R2(R3)
	91	[7914]	GETTABLE 	R0 R1 R2 ; R0 := R1[R2]
	92	[7917]	EQ       	0 R0 K29 ; if R0 ~= nil then PC := 95
	93	[7917]	JMP      	95 ; PC := 95
	94	[7918]	GETGLOBAL	R0 K10 ; R0 := SOUND_SET_EIDOLON
	95	[7920]	RETURN   	R0 2 ; return R0 
	96	[7921]	RETURN   	R0 1 ; return 

function #377 <?:7923,7936> (49 instructions, 196 bytes at 0000025274F3E280)
3 params, 11 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[7924]	TEST     	R2 1 ; if R2 then PC := 4
	2	[7924]	JMP      	4 ; PC := 4
	3	[7924]	LOADK    	R2 := 0.000000
	4	[7925]	LOADK    	R3 := 64.000000
	5	[7926]	SELF     	R4 R1 K0 ; R5 := R1; R4 := R1[0xdb7325e3]
	6	[7926]	CALL     	R4 2 2 ; R4 := R4(R5)
	7	[7927]	GETTABLE 	R5 R4 K1 ; R5 := R4["x"]
	8	[7927]	GETTABLE 	R6 R4 K2 ; R6 := R4["y"]
	9	[7927]	DIV      	R6 R6 R3 ; R6 := R6 / R3
	10	[7927]	DIV      	R5 R5 R6 ; R5 := R5 / R6
	11	[7928]	SELF     	R6 R0 K3 ; R7 := R0; R6 := R0[0x1cb415c1]
	12	[7928]	LOADK    	R8 K4 ; R8 := "Title.BookendLeft"
	13	[7928]	MOVE     	R9 R1 ; R9 := R1
	14	[7928]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	15	[7929]	SELF     	R6 R0 K3 ; R7 := R0; R6 := R0[0x1cb415c1]
	16	[7929]	LOADK    	R8 K5 ; R8 := "Title.BookendRight"
	17	[7929]	MOVE     	R9 R1 ; R9 := R1
	18	[7929]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	19	[7930]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	20	[7930]	LOADK    	R8 K4 ; R8 := "Title.BookendLeft"
	21	[7930]	LOADK    	R9 := 12.000000
	22	[7930]	MOVE     	R10 R5 ; R10 := R5
	23	[7930]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	24	[7931]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	25	[7931]	LOADK    	R8 K4 ; R8 := "Title.BookendLeft"
	26	[7931]	LOADK    	R9 := 13.000000
	27	[7931]	MOVE     	R10 R3 ; R10 := R3
	28	[7931]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	29	[7932]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	30	[7932]	LOADK    	R8 K4 ; R8 := "Title.BookendLeft"
	31	[7932]	LOADK    	R9 := 1.000000
	32	[7932]	ADD      	R10 K7 R2 ; R10 := 22.000000 + R2
	33	[7932]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	34	[7933]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	35	[7933]	LOADK    	R8 K5 ; R8 := "Title.BookendRight"
	36	[7933]	LOADK    	R9 := 12.000000
	37	[7933]	MOVE     	R10 R5 ; R10 := R5
	38	[7933]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	39	[7934]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	40	[7934]	LOADK    	R8 K5 ; R8 := "Title.BookendRight"
	41	[7934]	LOADK    	R9 := 13.000000
	42	[7934]	MOVE     	R10 R3 ; R10 := R3
	43	[7934]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	44	[7935]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	45	[7935]	LOADK    	R8 K5 ; R8 := "Title.BookendRight"
	46	[7935]	LOADK    	R9 := 1.000000
	47	[7935]	ADD      	R10 K7 R2 ; R10 := 22.000000 + R2
	48	[7935]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	49	[7936]	RETURN   	R0 1 ; return 

function #378 <?:7938,7974> (65 instructions, 260 bytes at 0000025274F3E5E0)
2 params, 27 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[7939]	NEWTABLE 	R2 0 0 ; R2 := {}
	2	[7940]	LOADK    	R3 := 1.000000
	3	[7940]	MOVE     	R4 R1 ; R4 := R1
	4	[7940]	LOADK    	R5 := 1.000000
	5	[7940]	FORPREP  	R3 11 ; R3 -= R5; PC := 11
	6	[7941]	GETGLOBAL	R7 K0 ; R7 := 0x33bdd652
	7	[7941]	GETTABLE 	R7 R7 K1 ; R7 := R7[0x23d5322f]
	8	[7941]	MOVE     	R8 R2 ; R8 := R2
	9	[7941]	GETTABLE 	R9 R0 K2 ; R9 := R0[1.000000]
	10	[7941]	CALL     	R7 3 1 ; R7(R8,R9)
	11	[7940]	FORLOOP  	R3 6 ; R3 += R5; if R3 <= R4 then begin PC := 6; R6 := R3 end
	12	[7944]	LEN      	R7 R0 ; R7 := # R0
	13	[7944]	EQ       	0 R7 K2 ; if R7 ~= 1.000000 then PC := 16
	14	[7944]	JMP      	16 ; PC := 16
	15	[7945]	RETURN   	R2 2 ; return R2 
	16	[7948]	LOADK    	R7 := 0.000000
	17	[7949]	LOADK    	R8 := 1.000000
	18	[7949]	LEN      	R9 R0 ; R9 := # R0
	19	[7949]	LOADK    	R10 := 1.000000
	20	[7949]	FORPREP  	R8 24 ; R8 -= R10; PC := 24
	21	[7950]	GETTABLE 	R12 R0 R11 ; R12 := R0[R11]
	22	[7950]	GETTABLE 	R12 R12 K3 ; R12 := R12["mWeight"]
	23	[7950]	ADD      	R7 R7 R12 ; R7 := R7 + R12
	24	[7949]	FORLOOP  	R8 21 ; R8 += R10; if R8 <= R9 then begin PC := 21; R11 := R8 end
	25	[7953]	LOADNIL  	R12 R14 ; R12 := R13 := R14 := nil
	26	[7956]	LEN      	R15 R0 ; R15 := # R0
	27	[7957]	LOADK    	R16 := 1.000000
	28	[7957]	MOVE     	R17 R1 ; R17 := R1
	29	[7957]	LOADK    	R18 := 1.000000
	30	[7957]	FORPREP  	R16 63 ; R16 -= R18; PC := 63
	31	[7958]	MOVE     	R14 R7 ; R14 := R7
	32	[7959]	GETGLOBAL	R20 K4 ; R20 := 0xdd6e4cf8
	33	[7959]	LOADK    	R21 := 0.000000
	34	[7959]	LOADK    	R22 := 1.000000
	35	[7959]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	36	[7959]	MOVE     	R13 R20 ; R13 := R20
	37	[7960]	MUL      	R12 R13 R14 ; R12 := R13 * R14
	38	[7961]	LOADK    	R20 := 1.000000
	39	[7961]	MOVE     	R21 R15 ; R21 := R15
	40	[7961]	LOADK    	R22 := 1.000000
	41	[7961]	FORPREP  	R20 62 ; R20 -= R22; PC := 62
	42	[7962]	GETTABLE 	R24 R0 R23 ; R24 := R0[R23]
	43	[7962]	GETTABLE 	R24 R24 K3 ; R24 := R24["mWeight"]
	44	[7962]	LT       	0 R12 R24 ; if R12 >= R24 then PC := 59
	45	[7962]	JMP      	59 ; PC := 59
	46	[7963]	GETTABLE 	R24 R0 R23 ; R24 := R0[R23]
	47	[7963]	GETTABLE 	R24 R24 K5 ; R24 := R24["mItemType"]
	48	[7963]	SETTABLE 	R2 R19 R24 ; R2[R19] := R24
	49	[7964]	GETTABLE 	R24 R0 R23 ; R24 := R0[R23]
	50	[7964]	GETTABLE 	R24 R24 K3 ; R24 := R24["mWeight"]
	51	[7964]	SUB      	R7 R7 R24 ; R7 := R7 - R24
	52	[7965]	GETGLOBAL	R24 K0 ; R24 := 0x33bdd652
	53	[7965]	GETTABLE 	R24 R24 K6 ; R24 := R24[0x9c1f3b5a]
	54	[7965]	MOVE     	R25 R0 ; R25 := R0
	55	[7965]	MOVE     	R26 R23 ; R26 := R23
	56	[7965]	CALL     	R24 3 1 ; R24(R25,R26)
	57	[7966]	SUB      	R15 R15 K2 ; R15 := R15 - 1.000000
	58	[7967]	JMP      	63 ; PC := 63
	59	[7969]	GETTABLE 	R24 R0 R23 ; R24 := R0[R23]
	60	[7969]	GETTABLE 	R24 R24 K3 ; R24 := R24["mWeight"]
	61	[7969]	SUB      	R12 R12 R24 ; R12 := R12 - R24
	62	[7961]	FORLOOP  	R20 42 ; R20 += R22; if R20 <= R21 then begin PC := 42; R23 := R20 end
	63	[7957]	FORLOOP  	R16 31 ; R16 += R18; if R16 <= R17 then begin PC := 31; R19 := R16 end
	64	[7973]	RETURN   	R2 2 ; return R2 
	65	[7974]	RETURN   	R0 1 ; return 

function #379 <?:7976,8210> (641 instructions, 2564 bytes at 0000025274F3E960)
4 params, 126 slots, 3 upvalues, 0 locals, 88 constants, 0 functions
	1	[7977]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[7977]	CALL     	R4 1 2 ; R4 := R4()
	3	[7978]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	4	[7978]	GETGLOBAL	R6 K1 ; R6 := _T
	5	[7978]	GETTABLE 	R6 R6 K2 ; R6 := R6["randInvigorations"]
	6	[7978]	CALL     	R5 2 2 ; R5 := R5(R6)
	7	[7978]	TEST     	R5 1 ; if R5 then PC := 12
	8	[7978]	JMP      	12 ; PC := 12
	9	[7979]	GETGLOBAL	R5 K1 ; R5 := _T
	10	[7979]	GETTABLE 	R5 R5 K2 ; R5 := R5["randInvigorations"]
	11	[7979]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	12	[7982]	SELF     	R5 R1 K3 ; R6 := R1; R5 := R1[0x20fbd800]
	13	[7982]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[7982]	DIV      	R5 R5 K4 ; R5 := R5 / 60.000000
	15	[7983]	GETTABLE 	R6 R3 K5 ; R6 := R3["mInvigorationIndex"]
	16	[7984]	GETGLOBAL	R7 K6 ; R7 := 0x5bced4c4
	17	[7984]	GETTABLE 	R7 R7 K7 ; R7 := R7[0x55f27c30]
	18	[7984]	DIV      	R8 R4 R5 ; R8 := R4 / R5
	19	[7984]	CALL     	R7 2 2 ; R7 := R7(R8)
	20	[7985]	GETGLOBAL	R8 K8 ; R8 := 0x0032441c
	21	[7985]	GETTABLE 	R8 R8 K9 ; R8 := R8["HelminthUpgradeOfferingCache"]
	22	[7985]	TEST     	R8 0 ; if not R8 then PC := 78
	23	[7985]	JMP      	78 ; PC := 78
	24	[7985]	GETGLOBAL	R8 K8 ; R8 := 0x0032441c
	25	[7985]	GETTABLE 	R8 R8 K9 ; R8 := R8["HelminthUpgradeOfferingCache"]
	26	[7985]	GETTABLE 	R8 R8 R0 ; R8 := R8[R0]
	27	[7985]	TEST     	R8 0 ; if not R8 then PC := 78
	28	[7985]	JMP      	78 ; PC := 78
	29	[7985]	GETGLOBAL	R8 K8 ; R8 := 0x0032441c
	30	[7985]	GETTABLE 	R8 R8 K10 ; R8 := R8["HelminthUpgradeIndexCache"]
	31	[7985]	TEST     	R8 0 ; if not R8 then PC := 78
	32	[7985]	JMP      	78 ; PC := 78
	33	[7985]	GETGLOBAL	R8 K8 ; R8 := 0x0032441c
	34	[7985]	GETTABLE 	R8 R8 K10 ; R8 := R8["HelminthUpgradeIndexCache"]
	35	[7985]	GETTABLE 	R8 R8 R0 ; R8 := R8[R0]
	36	[7985]	EQ       	0 R8 R7 ; if R8 ~= R7 then PC := 78
	37	[7985]	JMP      	78 ; PC := 78
	38	[7986]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	39	[7986]	GETTABLE 	R9 R3 K11 ; R9 := R3["mInvigorationSuitOfferings"]
	40	[7986]	CALL     	R8 2 2 ; R8 := R8(R9)
	41	[7986]	TEST     	R8 1 ; if R8 then PC := 49
	42	[7986]	JMP      	49 ; PC := 49
	43	[7986]	GETTABLE 	R8 R3 K11 ; R8 := R3["mInvigorationSuitOfferings"]
	44	[7986]	LEN      	R8 R8 ; R8 := # R8
	45	[7986]	EQ       	1 R8 K12 ; if R8 == 0.000000 then PC := 49
	46	[7986]	JMP      	49 ; PC := 49
	47	[7986]	EQ       	1 R7 R6 ; if R7 == R6 then PC := 74
	48	[7986]	JMP      	74 ; PC := 74
	49	[7987]	NEWTABLE 	R8 0 0 ; R8 := {}
	50	[7988]	LOADK    	R9 := 1.000000
	51	[7988]	GETGLOBAL	R10 K8 ; R10 := 0x0032441c
	52	[7988]	GETTABLE 	R10 R10 K9 ; R10 := R10["HelminthUpgradeOfferingCache"]
	53	[7988]	GETTABLE 	R10 R10 R0 ; R10 := R10[R0]
	54	[7988]	LEN      	R10 R10 ; R10 := # R10
	55	[7988]	LOADK    	R11 := 1.000000
	56	[7988]	FORPREP  	R9 66 ; R9 -= R11; PC := 66
	57	[7989]	GETGLOBAL	R13 K13 ; R13 := 0x33bdd652
	58	[7989]	GETTABLE 	R13 R13 K14 ; R13 := R13[0x23d5322f]
	59	[7989]	MOVE     	R14 R8 ; R14 := R8
	60	[7989]	GETGLOBAL	R15 K8 ; R15 := 0x0032441c
	61	[7989]	GETTABLE 	R15 R15 K9 ; R15 := R15["HelminthUpgradeOfferingCache"]
	62	[7989]	GETTABLE 	R15 R15 R0 ; R15 := R15[R0]
	63	[7989]	GETTABLE 	R15 R15 R12 ; R15 := R15[R12]
	64	[7989]	GETTABLE 	R15 R15 K15 ; R15 := R15["baseSuitType"]
	65	[7989]	CALL     	R13 3 1 ; R13(R14,R15)
	66	[7988]	FORLOOP  	R9 57 ; R9 += R11; if R9 <= R10 then begin PC := 57; R12 := R9 end
	67	[7991]	GETGLOBAL	R13 K16 ; R13 := 0x25d99d89
	68	[7991]	SELF     	R13 R13 K17 ; R14 := R13; R13 := R13[0x0805c9cf]
	69	[7991]	MOVE     	R15 R8 ; R15 := R8
	70	[7991]	MOVE     	R16 R7 ; R16 := R7
	71	[7991]	OP_LOADBOOL	R17 0 0 ; R17 := false
	72	[7991]	LOADK    	R18 K18 ; R18 := "OnHelminthOfferingsUploaded"
	73	[7991]	CALL     	R13 6 1 ; R13(R14,R15,R16,R17,R18)
	74	[7993]	GETGLOBAL	R13 K8 ; R13 := 0x0032441c
	75	[7993]	GETTABLE 	R13 R13 K9 ; R13 := R13["HelminthUpgradeOfferingCache"]
	76	[7993]	GETTABLE 	R13 R13 R0 ; R13 := R13[R0]
	77	[7993]	RETURN   	R13 2 ; return R13 
	78	[7996]	GETGLOBAL	R13 K19 ; R13 := 0xbe190284
	79	[7996]	SELF     	R13 R13 K20 ; R14 := R13; R13 := R13[0xa1c390fe]
	80	[7996]	CALL     	R13 2 2 ; R13 := R13(R14)
	81	[7997]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	82	[7997]	MOVE     	R15 R13 ; R15 := R13
	83	[7997]	CALL     	R14 2 2 ; R14 := R14(R15)
	84	[7997]	TEST     	R14 0 ; if not R14 then PC := 91
	85	[7997]	JMP      	91 ; PC := 91
	86	[7998]	GETGLOBAL	R14 K21 ; R14 := 0x3d106989
	87	[7998]	LOADK    	R15 K22 ; R15 := "Failed to find store manifest for helminth upgrades!"
	88	[7998]	CALL     	R14 2 1 ; R14(R15)
	89	[7999]	LOADNIL  	R14 R14 ; R14 := nil
	90	[7999]	RETURN   	R14 2 ; return R14 
	91	[8002]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	92	[8002]	MOVE     	R15 R1 ; R15 := R1
	93	[8002]	CALL     	R14 2 2 ; R14 := R14(R15)
	94	[8002]	TEST     	R14 0 ; if not R14 then PC := 101
	95	[8002]	JMP      	101 ; PC := 101
	96	[8003]	GETGLOBAL	R14 K21 ; R14 := 0x3d106989
	97	[8003]	LOADK    	R15 K23 ; R15 := "Failed to find helminth manifest for helminth upgrades!"
	98	[8003]	CALL     	R14 2 1 ; R14(R15)
	99	[8004]	LOADNIL  	R14 R14 ; R14 := nil
	100	[8004]	RETURN   	R14 2 ; return R14 
	101	[8007]	SELF     	R14 R1 K24 ; R15 := R1; R14 := R1[0x7db4ea75]
	102	[8007]	CALL     	R14 2 2 ; R14 := R14(R15)
	103	[8009]	LOADNIL  	R15 R16 ; R15 := R16 := nil
	104	[8011]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	105	[8011]	GETTABLE 	R18 R3 K11 ; R18 := R3["mInvigorationSuitOfferings"]
	106	[8011]	CALL     	R17 2 2 ; R17 := R17(R18)
	107	[8011]	TEST     	R17 1 ; if R17 then PC := 117
	108	[8011]	JMP      	117 ; PC := 117
	109	[8011]	GETTABLE 	R17 R3 K11 ; R17 := R3["mInvigorationSuitOfferings"]
	110	[8011]	LEN      	R17 R17 ; R17 := # R17
	111	[8011]	EQ       	0 R17 R14 ; if R17 ~= R14 then PC := 117
	112	[8011]	JMP      	117 ; PC := 117
	113	[8011]	EQ       	0 R7 R6 ; if R7 ~= R6 then PC := 117
	114	[8011]	JMP      	117 ; PC := 117
	115	[8012]	GETTABLE 	R16 R3 K11 ; R16 := R3["mInvigorationSuitOfferings"]
	116	[8012]	JMP      	299 ; PC := 299
	117	[8014]	NEWTABLE 	R17 0 0 ; R17 := {}
	118	[8015]	SELF     	R18 R13 K25 ; R19 := R13; R18 := R13[0xe9cbffa8]
	119	[8015]	GETGLOBAL	R20 K26 ; R20 := 0x7ed0a956
	120	[8015]	LOADK    	R21 K27 ; R21 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
	121	[8015]	CALL     	R20 2 0 ; R20,... := R20(R21)
	122	[8015]	CALL     	R18 0 2 ; R18 := R18(R19,...)
	123	[8016]	GETGLOBAL	R19 K28 ; R19 := 0xcfc01047
	124	[8016]	MOVE     	R20 R18 ; R20 := R18
	125	[8016]	CALL     	R19 2 4 ; R19,R20,R21 := R19(R20)
	126	[8016]	JMP      	209 ; PC := 209
	127	[8017]	SELF     	R24 R23 K29 ; R25 := R23; R24 := R23[0xfe9eb1a5]
	128	[8017]	CALL     	R24 2 2 ; R24 := R24(R25)
	129	[8017]	EQ       	0 R24 K31 ; if R24 ~= 3.000000 then PC := 209
	130	[8017]	JMP      	209 ; PC := 209
	131	[8017]	SELF     	R24 R23 K32 ; R25 := R23; R24 := R23[0xba7bce8f]
	132	[8017]	CALL     	R24 2 2 ; R24 := R24(R25)
	133	[8017]	TEST     	R24 1 ; if R24 then PC := 209
	134	[8017]	JMP      	209 ; PC := 209
	135	[8017]	SELF     	R24 R23 K33 ; R25 := R23; R24 := R23[0xc055cef8]
	136	[8017]	CALL     	R24 2 2 ; R24 := R24(R25)
	137	[8017]	TEST     	R24 0 ; if not R24 then PC := 209
	138	[8017]	JMP      	209 ; PC := 209
	139	[8018]	SELF     	R24 R23 K34 ; R25 := R23; R24 := R23[0xed4e0128]
	140	[8018]	CALL     	R24 2 2 ; R24 := R24(R25)
	141	[8019]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	142	[8019]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	143	[8019]	MOVE     	R26 R24 ; R26 := R24
	144	[8019]	LOADK    	R27 K37 ; R27 := "Prime"
	145	[8019]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	146	[8019]	TEST     	R25 1 ; if R25 then PC := 209
	147	[8019]	JMP      	209 ; PC := 209
	148	[8019]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	149	[8019]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	150	[8019]	MOVE     	R26 R24 ; R26 := R24
	151	[8019]	LOADK    	R27 K38 ; R27 := "Operator"
	152	[8019]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	153	[8019]	TEST     	R25 1 ; if R25 then PC := 209
	154	[8019]	JMP      	209 ; PC := 209
	155	[8019]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	156	[8019]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	157	[8019]	MOVE     	R26 R24 ; R26 := R24
	158	[8019]	LOADK    	R27 K39 ; R27 := "Umbra"
	159	[8019]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	160	[8019]	TEST     	R25 1 ; if R25 then PC := 209
	161	[8019]	JMP      	209 ; PC := 209
	162	[8019]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	163	[8019]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	164	[8019]	MOVE     	R26 R24 ; R26 := R24
	165	[8019]	LOADK    	R27 K40 ; R27 := "PlayerPowerSuit"
	166	[8019]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	167	[8019]	TEST     	R25 1 ; if R25 then PC := 209
	168	[8019]	JMP      	209 ; PC := 209
	169	[8020]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	170	[8020]	GETTABLE 	R25 R25 K41 ; R25 := R25[0x66edf04f]
	171	[8020]	MOVE     	R26 R24 ; R26 := R24
	172	[8020]	LOADK    	R27 K42 ; R27 := "/StoreItems"
	173	[8020]	LOADK    	R28 K43 ; R28 := ""
	174	[8020]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	175	[8021]	GETGLOBAL	R26 K35 ; R26 := 0x7f5022cf
	176	[8021]	GETTABLE 	R26 R26 K36 ; R26 := R26[0xa5c556b9]
	177	[8021]	MOVE     	R27 R25 ; R27 := R25
	178	[8021]	LOADK    	R28 K44 ; R28 := "/Anti"
	179	[8021]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	180	[8021]	TEST     	R26 0 ; if not R26 then PC := 194
	181	[8021]	JMP      	194 ; PC := 194
	182	[8022]	GETGLOBAL	R26 K35 ; R26 := 0x7f5022cf
	183	[8022]	GETTABLE 	R26 R26 K45 ; R26 := R26[0x1a94c9cc]
	184	[8022]	MOVE     	R27 R25 ; R27 := R25
	185	[8022]	LOADK    	R28 := 1.000000
	186	[8022]	GETGLOBAL	R29 K35 ; R29 := 0x7f5022cf
	187	[8022]	GETTABLE 	R29 R29 K46 ; R29 := R29[0x41e2ae25]
	188	[8022]	MOVE     	R30 R25 ; R30 := R25
	189	[8022]	CALL     	R29 2 2 ; R29 := R29(R30)
	190	[8022]	SUB      	R29 R29 K47 ; R29 := R29 - 4.000000
	191	[8022]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	192	[8022]	LOADK    	R27 K48 ; R27 := "Nova"
	193	[8022]	CONCAT   	R25 R26 R27 ; R25 := R26 .. R27
	194	[8024]	GETGLOBAL	R26 K26 ; R26 := 0x7ed0a956
	195	[8024]	MOVE     	R27 R25 ; R27 := R25
	196	[8024]	LOADK    	R28 K49 ; R28 := "BaseSuit"
	197	[8024]	CONCAT   	R27 R27 R28 ; R27 := R27 .. R28
	198	[8024]	CALL     	R26 2 2 ; R26 := R26(R27)
	199	[8026]	GETGLOBAL	R27 K0 ; R27 := 0x7b998233
	200	[8026]	MOVE     	R28 R26 ; R28 := R26
	201	[8026]	CALL     	R27 2 2 ; R27 := R27(R28)
	202	[8026]	TEST     	R27 1 ; if R27 then PC := 209
	203	[8026]	JMP      	209 ; PC := 209
	204	[8027]	GETGLOBAL	R27 K13 ; R27 := 0x33bdd652
	205	[8027]	GETTABLE 	R27 R27 K14 ; R27 := R27[0x23d5322f]
	206	[8027]	MOVE     	R28 R17 ; R28 := R17
	207	[8027]	MOVE     	R29 R26 ; R29 := R26
	208	[8027]	CALL     	R27 3 1 ; R27(R28,R29)
	209	[8016]	TFORLOOP 	R19 2 ; R22,R23 := R19(R20,R21); if R22 ~= nil then begin PC = 127; R21 := R22 end
	210	[8030]	JMP      	127 ; PC := 127
	211	[8033]	LEN      	R27 R17 ; R27 := # R17
	212	[8033]	EQ       	0 R27 K12 ; if R27 ~= 0.000000 then PC := 219
	213	[8033]	JMP      	219 ; PC := 219
	214	[8034]	GETGLOBAL	R27 K21 ; R27 := 0x3d106989
	215	[8034]	LOADK    	R28 K50 ; R28 := "Failed to find valid suits for helminth upgrades!"
	216	[8034]	CALL     	R27 2 1 ; R27(R28)
	217	[8035]	LOADNIL  	R27 R27 ; R27 := nil
	218	[8035]	RETURN   	R27 2 ; return R27 
	219	[8038]	SELF     	R27 R1 K51 ; R28 := R1; R27 := R1[0x3c4a2d85]
	220	[8038]	CALL     	R27 2 2 ; R27 := R27(R28)
	221	[8038]	MOVE     	R15 R27 ; R15 := R27
	222	[8039]	GETGLOBAL	R27 K0 ; R27 := 0x7b998233
	223	[8039]	GETTABLE 	R28 R3 K11 ; R28 := R3["mInvigorationSuitOfferings"]
	224	[8039]	CALL     	R27 2 2 ; R27 := R27(R28)
	225	[8039]	TEST     	R27 1 ; if R27 then PC := 231
	226	[8039]	JMP      	231 ; PC := 231
	227	[8039]	GETTABLE 	R27 R3 K11 ; R27 := R3["mInvigorationSuitOfferings"]
	228	[8039]	LEN      	R27 R27 ; R27 := # R27
	229	[8039]	EQ       	1 R27 R14 ; if R27 == R14 then PC := 232
	230	[8039]	JMP      	232 ; PC := 232
	231	[8039]	OP_LOADBOOL	R27 0 1 ; R27 := false; PC := 232
	232	[8039]	OP_LOADBOOL	R27 1 0 ; R27 := true
	233	[8040]	TEST     	R27 0 ; if not R27 then PC := 255
	234	[8040]	JMP      	255 ; PC := 255
	235	[8041]	LOADK    	R28 := 1.000000
	236	[8041]	LEN      	R29 R15 ; R29 := # R15
	237	[8041]	LOADK    	R30 := 1.000000
	238	[8041]	FORPREP  	R28 254 ; R28 -= R30; PC := 254
	239	[8042]	LOADK    	R32 := 1.000000
	240	[8042]	GETTABLE 	R33 R3 K11 ; R33 := R3["mInvigorationSuitOfferings"]
	241	[8042]	LEN      	R33 R33 ; R33 := # R33
	242	[8042]	LOADK    	R34 := 1.000000
	243	[8042]	FORPREP  	R32 253 ; R32 -= R34; PC := 253
	244	[8043]	GETTABLE 	R36 R15 R31 ; R36 := R15[R31]
	245	[8043]	GETTABLE 	R36 R36 K52 ; R36 := R36["mItemType"]
	246	[8043]	GETTABLE 	R37 R3 K11 ; R37 := R3["mInvigorationSuitOfferings"]
	247	[8043]	GETTABLE 	R37 R37 R35 ; R37 := R37[R35]
	248	[8043]	EQ       	0 R36 R37 ; if R36 ~= R37 then PC := 253
	249	[8043]	JMP      	253 ; PC := 253
	250	[8044]	GETTABLE 	R36 R15 R31 ; R36 := R15[R31]
	251	[8044]	SETTABLE 	R36 K53 K12 ; R36["mWeight"] := 0.000000
	252	[8045]	JMP      	254 ; PC := 254
	253	[8042]	FORLOOP  	R32 244 ; R32 += R34; if R32 <= R33 then begin PC := 244; R35 := R32 end
	254	[8041]	FORLOOP  	R28 239 ; R28 += R30; if R28 <= R29 then begin PC := 239; R31 := R28 end
	255	[8051]	LOADK    	R36 := 1.000000
	256	[8051]	LEN      	R37 R17 ; R37 := # R17
	257	[8051]	LOADK    	R38 := 1.000000
	258	[8051]	FORPREP  	R36 298 ; R36 -= R38; PC := 298
	259	[8052]	OP_LOADBOOL	R40 0 0 ; R40 := false
	260	[8053]	LOADK    	R41 := 1.000000
	261	[8053]	LEN      	R42 R15 ; R42 := # R15
	262	[8053]	LOADK    	R43 := 1.000000
	263	[8053]	FORPREP  	R41 271 ; R41 -= R43; PC := 271
	264	[8054]	GETTABLE 	R45 R15 R44 ; R45 := R15[R44]
	265	[8054]	GETTABLE 	R45 R45 K52 ; R45 := R45["mItemType"]
	266	[8054]	GETTABLE 	R46 R17 R39 ; R46 := R17[R39]
	267	[8054]	EQ       	0 R45 R46 ; if R45 ~= R46 then PC := 271
	268	[8054]	JMP      	271 ; PC := 271
	269	[8055]	OP_LOADBOOL	R40 1 0 ; R40 := true
	270	[8056]	JMP      	272 ; PC := 272
	271	[8053]	FORLOOP  	R41 264 ; R41 += R43; if R41 <= R42 then begin PC := 264; R44 := R41 end
	272	[8060]	TEST     	R40 1 ; if R40 then PC := 298
	273	[8060]	JMP      	298 ; PC := 298
	274	[8061]	LOADK    	R45 := 1.000000
	275	[8062]	TEST     	R27 0 ; if not R27 then PC := 290
	276	[8062]	JMP      	290 ; PC := 290
	277	[8063]	LOADK    	R46 := 1.000000
	278	[8063]	GETTABLE 	R47 R3 K11 ; R47 := R3["mInvigorationSuitOfferings"]
	279	[8063]	LEN      	R47 R47 ; R47 := # R47
	280	[8063]	LOADK    	R48 := 1.000000
	281	[8063]	FORPREP  	R46 289 ; R46 -= R48; PC := 289
	282	[8064]	GETTABLE 	R50 R17 R39 ; R50 := R17[R39]
	283	[8064]	GETTABLE 	R51 R3 K11 ; R51 := R3["mInvigorationSuitOfferings"]
	284	[8064]	GETTABLE 	R51 R51 R49 ; R51 := R51[R49]
	285	[8064]	EQ       	0 R50 R51 ; if R50 ~= R51 then PC := 289
	286	[8064]	JMP      	289 ; PC := 289
	287	[8065]	LOADK    	R45 := 0.000000
	288	[8066]	JMP      	290 ; PC := 290
	289	[8063]	FORLOOP  	R46 282 ; R46 += R48; if R46 <= R47 then begin PC := 282; R49 := R46 end
	290	[8071]	GETGLOBAL	R50 K13 ; R50 := 0x33bdd652
	291	[8071]	GETTABLE 	R50 R50 K14 ; R50 := R50[0x23d5322f]
	292	[8071]	MOVE     	R51 R15 ; R51 := R15
	293	[8071]	NEWTABLE 	R52 0 2 ; R52 := {}
	294	[8071]	GETTABLE 	R53 R17 R39 ; R53 := R17[R39]
	295	[8071]	SETTABLE 	R52 K52 R53 ; R52["mItemType"] := R53
	296	[8071]	SETTABLE 	R52 K53 R45 ; R52["mWeight"] := R45
	297	[8071]	CALL     	R50 3 1 ; R50(R51,R52)
	298	[8051]	FORLOOP  	R36 259 ; R36 += R38; if R36 <= R37 then begin PC := 259; R39 := R36 end
	299	[8076]	SELF     	R50 R1 K54 ; R51 := R1; R50 := R1[0x3a5333af]
	300	[8076]	CALL     	R50 2 2 ; R50 := R50(R51)
	301	[8077]	LEN      	R51 R50 ; R51 := # R50
	302	[8077]	EQ       	0 R51 K12 ; if R51 ~= 0.000000 then PC := 309
	303	[8077]	JMP      	309 ; PC := 309
	304	[8078]	GETGLOBAL	R51 K21 ; R51 := 0x3d106989
	305	[8078]	LOADK    	R52 K55 ; R52 := "Failed to find valid offensive upgrades for helminth upgrades!"
	306	[8078]	CALL     	R51 2 1 ; R51(R52)
	307	[8079]	LOADNIL  	R51 R51 ; R51 := nil
	308	[8079]	RETURN   	R51 2 ; return R51 
	309	[8082]	SELF     	R51 R1 K56 ; R52 := R1; R51 := R1[0xf9f0dca9]
	310	[8082]	CALL     	R51 2 2 ; R51 := R51(R52)
	311	[8083]	LEN      	R52 R51 ; R52 := # R51
	312	[8083]	EQ       	0 R52 K12 ; if R52 ~= 0.000000 then PC := 319
	313	[8083]	JMP      	319 ; PC := 319
	314	[8084]	GETGLOBAL	R52 K21 ; R52 := 0x3d106989
	315	[8084]	LOADK    	R53 K57 ; R53 := "Failed to find valid defensive upgrades for helminth upgrades!"
	316	[8084]	CALL     	R52 2 1 ; R52(R53)
	317	[8085]	LOADNIL  	R52 R52 ; R52 := nil
	318	[8085]	RETURN   	R52 2 ; return R52 
	319	[8088]	LEN      	R52 R2 ; R52 := # R2
	320	[8088]	EQ       	0 R52 K12 ; if R52 ~= 0.000000 then PC := 327
	321	[8088]	JMP      	327 ; PC := 327
	322	[8089]	GETGLOBAL	R52 K21 ; R52 := 0x3d106989
	323	[8089]	LOADK    	R53 K58 ; R53 := "Failed to find resource costs for helminth upgrades!"
	324	[8089]	CALL     	R52 2 1 ; R52(R53)
	325	[8090]	LOADNIL  	R52 R52 ; R52 := nil
	326	[8090]	RETURN   	R52 2 ; return R52 
	327	[8093]	NEWTABLE 	R52 0 0 ; R52 := {}
	328	[8094]	LOADK    	R53 := 1.000000
	329	[8094]	LEN      	R54 R2 ; R54 := # R2
	330	[8094]	LOADK    	R55 := 1.000000
	331	[8094]	FORPREP  	R53 337 ; R53 -= R55; PC := 337
	332	[8095]	GETGLOBAL	R57 K13 ; R57 := 0x33bdd652
	333	[8095]	GETTABLE 	R57 R57 K14 ; R57 := R57[0x23d5322f]
	334	[8095]	MOVE     	R58 R52 ; R58 := R52
	335	[8095]	GETTABLE 	R59 R2 R56 ; R59 := R2[R56]
	336	[8095]	CALL     	R57 3 1 ; R57(R58,R59)
	337	[8094]	FORLOOP  	R53 332 ; R53 += R55; if R53 <= R54 then begin PC := 332; R56 := R53 end
	338	[8098]	GETGLOBAL	R57 K8 ; R57 := 0x0032441c
	339	[8098]	GETTABLE 	R57 R57 K10 ; R57 := R57["HelminthUpgradeIndexCache"]
	340	[8098]	TEST     	R57 1 ; if R57 then PC := 345
	341	[8098]	JMP      	345 ; PC := 345
	342	[8099]	GETGLOBAL	R57 K8 ; R57 := 0x0032441c
	343	[8099]	NEWTABLE 	R58 0 0 ; R58 := {}
	344	[8099]	SETTABLE 	R57 K10 R58 ; R57["HelminthUpgradeIndexCache"] := R58
	345	[8101]	GETGLOBAL	R57 K8 ; R57 := 0x0032441c
	346	[8101]	GETTABLE 	R57 R57 K10 ; R57 := R57["HelminthUpgradeIndexCache"]
	347	[8101]	SETTABLE 	R57 R0 R7 ; R57[R0] := R7
	348	[8104]	GETGLOBAL	R57 K59 ; R57 := 0xffd438ab
	349	[8104]	CALL     	R57 1 2 ; R57 := R57()
	350	[8106]	GETGLOBAL	R58 K60 ; R58 := 0x4f6851ff
	351	[8106]	GETGLOBAL	R59 K61 ; R59 := 0x0997dbe6
	352	[8106]	MOVE     	R60 R7 ; R60 := R7
	353	[8106]	CALL     	R59 2 0 ; R59,... := R59(R60)
	354	[8106]	CALL     	R58 0 1 ; R58(R59,...)
	355	[8107]	GETGLOBAL	R58 K62 ; R58 := 0x0c5e62f9
	356	[8107]	LOADK    	R59 := 1.000000
	357	[8107]	LOADK    	R60 K63 ; R60 := 1000000.000000
	358	[8107]	CALL     	R58 3 2 ; R58 := R58(R59,R60)
	359	[8109]	GETGLOBAL	R59 K64 ; R59 := 0xf1f5e051
	360	[8109]	MOVE     	R60 R0 ; R60 := R0
	361	[8109]	CALL     	R59 2 2 ; R59 := R59(R60)
	362	[8110]	GETGLOBAL	R60 K61 ; R60 := 0x0997dbe6
	363	[8110]	ADD      	R61 R59 R58 ; R61 := R59 + R58
	364	[8110]	CALL     	R60 2 2 ; R60 := R60(R61)
	365	[8112]	EQ       	1 R7 R6 ; if R7 == R6 then PC := 383
	366	[8112]	JMP      	383 ; PC := 383
	367	[8113]	GETGLOBAL	R61 K60 ; R61 := 0x4f6851ff
	368	[8113]	MOVE     	R62 R60 ; R62 := R60
	369	[8113]	CALL     	R61 2 1 ; R61(R62)
	370	[8114]	GETUPVAL 	R61 U1 ; R61 := U1
	371	[8114]	MOVE     	R62 R15 ; R62 := R15
	372	[8114]	MOVE     	R63 R14 ; R63 := R14
	373	[8114]	CALL     	R61 3 2 ; R61 := R61(R62,R63)
	374	[8114]	MOVE     	R16 R61 ; R16 := R61
	375	[8115]	GETGLOBAL	R61 K16 ; R61 := 0x25d99d89
	376	[8115]	SELF     	R61 R61 K17 ; R62 := R61; R61 := R61[0x0805c9cf]
	377	[8115]	MOVE     	R63 R16 ; R63 := R16
	378	[8115]	MOVE     	R64 R7 ; R64 := R7
	379	[8115]	OP_LOADBOOL	R65 0 0 ; R65 := false
	380	[8115]	LOADK    	R66 K18 ; R66 := "OnHelminthOfferingsUploaded"
	381	[8115]	CALL     	R61 6 1 ; R61(R62,R63,R64,R65,R66)
	382	[8115]	JMP      	387 ; PC := 387
	383	[8117]	GETGLOBAL	R61 K65 ; R61 := 0x84883f05
	384	[8117]	MOVE     	R62 R60 ; R62 := R60
	385	[8117]	MOVE     	R63 R14 ; R63 := R14
	386	[8117]	CALL     	R61 3 1 ; R61(R62,R63)
	387	[8120]	NEWTABLE 	R61 0 0 ; R61 := {}
	388	[8121]	LOADK    	R62 := 1.000000
	389	[8121]	LEN      	R63 R16 ; R63 := # R16
	390	[8121]	LOADK    	R64 := 1.000000
	391	[8121]	FORPREP  	R62 424 ; R62 -= R64; PC := 424
	392	[8122]	GETTABLE 	R66 R16 R65 ; R66 := R16[R65]
	393	[8122]	SELF     	R66 R66 K34 ; R67 := R66; R66 := R66[0xed4e0128]
	394	[8122]	CALL     	R66 2 2 ; R66 := R66(R67)
	395	[8123]	GETGLOBAL	R67 K35 ; R67 := 0x7f5022cf
	396	[8123]	GETTABLE 	R67 R67 K36 ; R67 := R67[0xa5c556b9]
	397	[8123]	MOVE     	R68 R66 ; R68 := R66
	398	[8123]	LOADK    	R69 K66 ; R69 := "NovaBaseSuit"
	399	[8123]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	400	[8123]	TEST     	R67 0 ; if not R67 then PC := 410
	401	[8123]	JMP      	410 ; PC := 410
	402	[8124]	GETGLOBAL	R67 K35 ; R67 := 0x7f5022cf
	403	[8124]	GETTABLE 	R67 R67 K41 ; R67 := R67[0x66edf04f]
	404	[8124]	MOVE     	R68 R66 ; R68 := R66
	405	[8124]	LOADK    	R69 K66 ; R69 := "NovaBaseSuit"
	406	[8124]	LOADK    	R70 K67 ; R70 := "Anti"
	407	[8124]	CALL     	R67 4 2 ; R67 := R67(R68,R69,R70)
	408	[8124]	MOVE     	R66 R67 ; R66 := R67
	409	[8124]	JMP      	417 ; PC := 417
	410	[8126]	GETGLOBAL	R67 K35 ; R67 := 0x7f5022cf
	411	[8126]	GETTABLE 	R67 R67 K41 ; R67 := R67[0x66edf04f]
	412	[8126]	MOVE     	R68 R66 ; R68 := R66
	413	[8126]	LOADK    	R69 K49 ; R69 := "BaseSuit"
	414	[8126]	LOADK    	R70 K43 ; R70 := ""
	415	[8126]	CALL     	R67 4 2 ; R67 := R67(R68,R69,R70)
	416	[8126]	MOVE     	R66 R67 ; R66 := R67
	417	[8128]	GETGLOBAL	R67 K13 ; R67 := 0x33bdd652
	418	[8128]	GETTABLE 	R67 R67 K14 ; R67 := R67[0x23d5322f]
	419	[8128]	MOVE     	R68 R61 ; R68 := R61
	420	[8128]	GETGLOBAL	R69 K26 ; R69 := 0x7ed0a956
	421	[8128]	MOVE     	R70 R66 ; R70 := R66
	422	[8128]	CALL     	R69 2 0 ; R69,... := R69(R70)
	423	[8128]	CALL     	R67 0 1 ; R67(R68,...)
	424	[8121]	FORLOOP  	R62 392 ; R62 += R64; if R62 <= R63 then begin PC := 392; R65 := R62 end
	425	[8132]	SELF     	R67 R1 K68 ; R68 := R1; R67 := R1[0x29056938]
	426	[8132]	CALL     	R67 2 2 ; R67 := R67(R68)
	427	[8133]	LOADK    	R68 := 1.000000
	428	[8133]	LEN      	R69 R16 ; R69 := # R16
	429	[8133]	LOADK    	R70 := 1.000000
	430	[8133]	FORPREP  	R68 483 ; R68 -= R70; PC := 483
	431	[8134]	LOADK    	R72 := 1.000000
	432	[8134]	LEN      	R73 R67 ; R73 := # R67
	433	[8134]	LOADK    	R74 := 1.000000
	434	[8134]	FORPREP  	R72 482 ; R72 -= R74; PC := 482
	435	[8135]	GETTABLE 	R76 R16 R71 ; R76 := R16[R71]
	436	[8135]	GETTABLE 	R77 R67 R75 ; R77 := R67[R75]
	437	[8135]	GETTABLE 	R77 R77 K52 ; R77 := R77["mItemType"]
	438	[8135]	EQ       	0 R76 R77 ; if R76 ~= R77 then PC := 482
	439	[8135]	JMP      	482 ; PC := 482
	440	[8136]	LOADK    	R76 := 1.000000
	441	[8136]	GETTABLE 	R77 R67 R75 ; R77 := R67[R75]
	442	[8136]	GETTABLE 	R77 R77 K69 ; R77 := R77["mInvalidUpgradeTypes"]
	443	[8136]	LEN      	R77 R77 ; R77 := # R77
	444	[8136]	LOADK    	R78 := 1.000000
	445	[8136]	FORPREP  	R76 480 ; R76 -= R78; PC := 480
	446	[8138]	LEN      	R80 R50 ; R80 := # R50
	447	[8138]	LOADK    	R81 := 1.000000
	448	[8138]	LOADK    	R82 := -1.000000
	449	[8138]	FORPREP  	R80 462 ; R80 -= R82; PC := 462
	450	[8139]	GETTABLE 	R84 R67 R75 ; R84 := R67[R75]
	451	[8139]	GETTABLE 	R84 R84 K69 ; R84 := R84["mInvalidUpgradeTypes"]
	452	[8139]	GETTABLE 	R84 R84 R79 ; R84 := R84[R79]
	453	[8139]	GETTABLE 	R85 R50 R83 ; R85 := R50[R83]
	454	[8139]	GETTABLE 	R85 R85 K52 ; R85 := R85["mItemType"]
	455	[8139]	EQ       	0 R84 R85 ; if R84 ~= R85 then PC := 462
	456	[8139]	JMP      	462 ; PC := 462
	457	[8140]	GETGLOBAL	R84 K13 ; R84 := 0x33bdd652
	458	[8140]	GETTABLE 	R84 R84 K70 ; R84 := R84[0x9c1f3b5a]
	459	[8140]	MOVE     	R85 R50 ; R85 := R50
	460	[8140]	MOVE     	R86 R83 ; R86 := R83
	461	[8140]	CALL     	R84 3 1 ; R84(R85,R86)
	462	[8138]	FORLOOP  	R80 450 ; R80 += R82; if R80 <= R81 then begin PC := 450; R83 := R80 end
	463	[8144]	LEN      	R84 R51 ; R84 := # R51
	464	[8144]	LOADK    	R85 := 1.000000
	465	[8144]	LOADK    	R86 := -1.000000
	466	[8144]	FORPREP  	R84 479 ; R84 -= R86; PC := 479
	467	[8145]	GETTABLE 	R88 R67 R75 ; R88 := R67[R75]
	468	[8145]	GETTABLE 	R88 R88 K69 ; R88 := R88["mInvalidUpgradeTypes"]
	469	[8145]	GETTABLE 	R88 R88 R79 ; R88 := R88[R79]
	470	[8145]	GETTABLE 	R89 R51 R87 ; R89 := R51[R87]
	471	[8145]	GETTABLE 	R89 R89 K52 ; R89 := R89["mItemType"]
	472	[8145]	EQ       	0 R88 R89 ; if R88 ~= R89 then PC := 479
	473	[8145]	JMP      	479 ; PC := 479
	474	[8146]	GETGLOBAL	R88 K13 ; R88 := 0x33bdd652
	475	[8146]	GETTABLE 	R88 R88 K70 ; R88 := R88[0x9c1f3b5a]
	476	[8146]	MOVE     	R89 R51 ; R89 := R51
	477	[8146]	MOVE     	R90 R87 ; R90 := R87
	478	[8146]	CALL     	R88 3 1 ; R88(R89,R90)
	479	[8144]	FORLOOP  	R84 467 ; R84 += R86; if R84 <= R85 then begin PC := 467; R87 := R84 end
	480	[8136]	FORLOOP  	R76 446 ; R76 += R78; if R76 <= R77 then begin PC := 446; R79 := R76 end
	481	[8152]	JMP      	483 ; PC := 483
	482	[8134]	FORLOOP  	R72 435 ; R72 += R74; if R72 <= R73 then begin PC := 435; R75 := R72 end
	483	[8133]	FORLOOP  	R68 431 ; R68 += R70; if R68 <= R69 then begin PC := 431; R71 := R68 end
	484	[8157]	GETUPVAL 	R88 U1 ; R88 := U1
	485	[8157]	MOVE     	R89 R50 ; R89 := R50
	486	[8157]	MOVE     	R90 R14 ; R90 := R14
	487	[8157]	CALL     	R88 3 2 ; R88 := R88(R89,R90)
	488	[8158]	GETUPVAL 	R89 U1 ; R89 := U1
	489	[8158]	MOVE     	R90 R51 ; R90 := R51
	490	[8158]	MOVE     	R91 R14 ; R91 := R14
	491	[8158]	CALL     	R89 3 2 ; R89 := R89(R90,R91)
	492	[8161]	NEWTABLE 	R90 0 0 ; R90 := {}
	493	[8162]	NEWTABLE 	R91 0 0 ; R91 := {}
	494	[8163]	SELF     	R92 R1 K71 ; R93 := R1; R92 := R1[0x9b14b099]
	495	[8163]	CALL     	R92 2 2 ; R92 := R92(R93)
	496	[8164]	SELF     	R93 R1 K72 ; R94 := R1; R93 := R1[0x1b6f1347]
	497	[8164]	CALL     	R93 2 2 ; R93 := R93(R94)
	498	[8165]	SELF     	R94 R1 K73 ; R95 := R1; R94 := R1[0x1d6f0df7]
	499	[8165]	CALL     	R94 2 2 ; R94 := R94(R95)
	500	[8166]	SELF     	R95 R1 K74 ; R96 := R1; R95 := R1[0xd1041755]
	501	[8166]	CALL     	R95 2 2 ; R95 := R95(R96)
	502	[8167]	SELF     	R96 R1 K75 ; R97 := R1; R96 := R1[0x95324e22]
	503	[8167]	CALL     	R96 2 2 ; R96 := R96(R97)
	504	[8168]	LOADK    	R97 := 1.000000
	505	[8168]	MOVE     	R98 R14 ; R98 := R14
	506	[8168]	LOADK    	R99 := 1.000000
	507	[8168]	FORPREP  	R97 591 ; R97 -= R99; PC := 591
	508	[8169]	GETGLOBAL	R101 K76 ; R101 := 0xdd6e4cf8
	509	[8169]	MOVE     	R102 R92 ; R102 := R92
	510	[8169]	MOVE     	R103 R93 ; R103 := R93
	511	[8169]	CALL     	R101 3 2 ; R101 := R101(R102,R103)
	512	[8170]	NEWTABLE 	R102 0 0 ; R102 := {}
	513	[8171]	NEWTABLE 	R103 0 0 ; R103 := {}
	514	[8173]	LOADK    	R104 := 1.000000
	515	[8173]	MOVE     	R105 R96 ; R105 := R96
	516	[8173]	LOADK    	R106 := 1.000000
	517	[8173]	FORPREP  	R104 568 ; R104 -= R106; PC := 568
	518	[8174]	GETGLOBAL	R108 K62 ; R108 := 0x0c5e62f9
	519	[8174]	LOADK    	R109 := 1.000000
	520	[8174]	LEN      	R110 R52 ; R110 := # R52
	521	[8174]	CALL     	R108 3 2 ; R108 := R108(R109,R110)
	522	[8175]	GETTABLE 	R109 R52 R108 ; R109 := R52[R108]
	523	[8176]	GETGLOBAL	R110 K13 ; R110 := 0x33bdd652
	524	[8176]	GETTABLE 	R110 R110 K70 ; R110 := R110[0x9c1f3b5a]
	525	[8176]	MOVE     	R111 R52 ; R111 := R52
	526	[8176]	MOVE     	R112 R108 ; R112 := R108
	527	[8176]	CALL     	R110 3 1 ; R110(R111,R112)
	528	[8178]	GETGLOBAL	R110 K6 ; R110 := 0x5bced4c4
	529	[8178]	GETTABLE 	R110 R110 K77 ; R110 := R110[0xac1b386a]
	530	[8178]	MOVE     	R111 R95 ; R111 := R95
	531	[8178]	SUB      	R112 R96 R107 ; R112 := R96 - R107
	532	[8178]	MUL      	R112 R94 R112 ; R112 := R94 * R112
	533	[8178]	SUB      	R112 R101 R112 ; R112 := R101 - R112
	534	[8178]	CALL     	R110 3 2 ; R110 := R110(R111,R112)
	535	[8179]	GETGLOBAL	R111 K6 ; R111 := 0x5bced4c4
	536	[8179]	GETTABLE 	R111 R111 K78 ; R111 := R111[0xb62ecfe0]
	537	[8179]	MOVE     	R112 R94 ; R112 := R94
	538	[8179]	SUB      	R113 R96 R107 ; R113 := R96 - R107
	539	[8179]	MUL      	R113 R95 R113 ; R113 := R95 * R113
	540	[8179]	SUB      	R113 R101 R113 ; R113 := R101 - R113
	541	[8179]	CALL     	R111 3 2 ; R111 := R111(R112,R113)
	542	[8180]	GETGLOBAL	R112 K6 ; R112 := 0x5bced4c4
	543	[8180]	GETTABLE 	R112 R112 K78 ; R112 := R112[0xb62ecfe0]
	544	[8180]	LOADK    	R113 := 0.000000
	545	[8180]	GETGLOBAL	R114 K76 ; R114 := 0xdd6e4cf8
	546	[8180]	MOVE     	R115 R111 ; R115 := R111
	547	[8180]	MOVE     	R116 R110 ; R116 := R110
	548	[8180]	CALL     	R114 3 0 ; R114,... := R114(R115,R116)
	549	[8180]	CALL     	R112 0 2 ; R112 := R112(R113,...)
	550	[8181]	SUB      	R101 R101 R112 ; R101 := R101 - R112
	551	[8182]	GETUPVAL 	R113 U2 ; R113 := U2
	552	[8182]	GETTABLE 	R113 R113 K79 ; R113 := R113[0x74a11ec6]
	553	[8182]	MOVE     	R114 R112 ; R114 := R112
	554	[8182]	LOADK    	R115 := 2.000000
	555	[8182]	CALL     	R113 3 2 ; R113 := R113(R114,R115)
	556	[8182]	MOVE     	R112 R113 ; R112 := R113
	557	[8184]	GETGLOBAL	R113 K13 ; R113 := 0x33bdd652
	558	[8184]	GETTABLE 	R113 R113 K14 ; R113 := R113[0x23d5322f]
	559	[8184]	MOVE     	R114 R102 ; R114 := R102
	560	[8184]	SELF     	R115 R109 K80 ; R116 := R109; R115 := R109[0xf278f8a1]
	561	[8184]	CALL     	R115 2 0 ; R115,... := R115(R116)
	562	[8184]	CALL     	R113 0 1 ; R113(R114,...)
	563	[8185]	GETGLOBAL	R113 K13 ; R113 := 0x33bdd652
	564	[8185]	GETTABLE 	R113 R113 K14 ; R113 := R113[0x23d5322f]
	565	[8185]	MOVE     	R114 R103 ; R114 := R103
	566	[8185]	MOVE     	R115 R112 ; R115 := R112
	567	[8185]	CALL     	R113 3 1 ; R113(R114,R115)
	568	[8173]	FORLOOP  	R104 518 ; R104 += R106; if R104 <= R105 then begin PC := 518; R107 := R104 end
	569	[8188]	GETGLOBAL	R113 K13 ; R113 := 0x33bdd652
	570	[8188]	GETTABLE 	R113 R113 K14 ; R113 := R113[0x23d5322f]
	571	[8188]	MOVE     	R114 R90 ; R114 := R90
	572	[8188]	MOVE     	R115 R102 ; R115 := R102
	573	[8188]	CALL     	R113 3 1 ; R113(R114,R115)
	574	[8189]	GETGLOBAL	R113 K13 ; R113 := 0x33bdd652
	575	[8189]	GETTABLE 	R113 R113 K14 ; R113 := R113[0x23d5322f]
	576	[8189]	MOVE     	R114 R91 ; R114 := R91
	577	[8189]	MOVE     	R115 R103 ; R115 := R103
	578	[8189]	CALL     	R113 3 1 ; R113(R114,R115)
	579	[8191]	NEWTABLE 	R113 0 0 ; R113 := {}
	580	[8191]	MOVE     	R52 R113 ; R52 := R113
	581	[8192]	LOADK    	R113 := 1.000000
	582	[8192]	LEN      	R114 R2 ; R114 := # R2
	583	[8192]	LOADK    	R115 := 1.000000
	584	[8192]	FORPREP  	R113 590 ; R113 -= R115; PC := 590
	585	[8193]	GETGLOBAL	R117 K13 ; R117 := 0x33bdd652
	586	[8193]	GETTABLE 	R117 R117 K14 ; R117 := R117[0x23d5322f]
	587	[8193]	MOVE     	R118 R52 ; R118 := R52
	588	[8193]	GETTABLE 	R119 R2 R116 ; R119 := R2[R116]
	589	[8193]	CALL     	R117 3 1 ; R117(R118,R119)
	590	[8192]	FORLOOP  	R113 585 ; R113 += R115; if R113 <= R114 then begin PC := 585; R116 := R113 end
	591	[8168]	FORLOOP  	R97 508 ; R97 += R99; if R97 <= R98 then begin PC := 508; R100 := R97 end
	592	[8197]	GETGLOBAL	R117 K60 ; R117 := 0x4f6851ff
	593	[8197]	MOVE     	R118 R57 ; R118 := R57
	594	[8197]	CALL     	R117 2 1 ; R117(R118)
	595	[8199]	GETGLOBAL	R117 K8 ; R117 := 0x0032441c
	596	[8199]	GETTABLE 	R117 R117 K9 ; R117 := R117["HelminthUpgradeOfferingCache"]
	597	[8199]	TEST     	R117 1 ; if R117 then PC := 602
	598	[8199]	JMP      	602 ; PC := 602
	599	[8200]	GETGLOBAL	R117 K8 ; R117 := 0x0032441c
	600	[8200]	NEWTABLE 	R118 0 0 ; R118 := {}
	601	[8200]	SETTABLE 	R117 K9 R118 ; R117["HelminthUpgradeOfferingCache"] := R118
	602	[8202]	GETGLOBAL	R117 K8 ; R117 := 0x0032441c
	603	[8202]	GETTABLE 	R117 R117 K9 ; R117 := R117["HelminthUpgradeOfferingCache"]
	604	[8202]	NEWTABLE 	R118 0 0 ; R118 := {}
	605	[8202]	SETTABLE 	R117 R0 R118 ; R117[R0] := R118
	606	[8204]	LOADK    	R117 := 1.000000
	607	[8204]	MOVE     	R118 R14 ; R118 := R14
	608	[8204]	LOADK    	R119 := 1.000000
	609	[8204]	FORPREP  	R117 629 ; R117 -= R119; PC := 629
	610	[8205]	GETGLOBAL	R121 K13 ; R121 := 0x33bdd652
	611	[8205]	GETTABLE 	R121 R121 K14 ; R121 := R121[0x23d5322f]
	612	[8205]	GETGLOBAL	R122 K8 ; R122 := 0x0032441c
	613	[8205]	GETTABLE 	R122 R122 K9 ; R122 := R122["HelminthUpgradeOfferingCache"]
	614	[8205]	GETTABLE 	R122 R122 R0 ; R122 := R122[R0]
	615	[8205]	NEWTABLE 	R123 0 6 ; R123 := {}
	616	[8205]	GETTABLE 	R124 R16 R120 ; R124 := R16[R120]
	617	[8205]	SETTABLE 	R123 K15 R124 ; R123["baseSuitType"] := R124
	618	[8205]	GETTABLE 	R124 R61 R120 ; R124 := R61[R120]
	619	[8205]	SETTABLE 	R123 K81 R124 ; R123["suitType"] := R124
	620	[8205]	GETTABLE 	R124 R88 R120 ; R124 := R88[R120]
	621	[8205]	SETTABLE 	R123 K82 R124 ; R123["offensiveUpgradeType"] := R124
	622	[8205]	GETTABLE 	R124 R89 R120 ; R124 := R89[R120]
	623	[8205]	SETTABLE 	R123 K83 R124 ; R123["defensiveUpgradeType"] := R124
	624	[8205]	GETTABLE 	R124 R90 R120 ; R124 := R90[R120]
	625	[8205]	SETTABLE 	R123 K84 R124 ; R123["resourceTypes"] := R124
	626	[8205]	GETTABLE 	R124 R91 R120 ; R124 := R91[R120]
	627	[8205]	SETTABLE 	R123 K85 R124 ; R123["resourceCosts"] := R124
	628	[8205]	CALL     	R121 3 1 ; R121(R122,R123)
	629	[8204]	FORLOOP  	R117 610 ; R117 += R119; if R117 <= R118 then begin PC := 610; R120 := R117 end
	630	[8208]	GETGLOBAL	R121 K21 ; R121 := 0x3d106989
	631	[8208]	LOADK    	R122 K86 ; R122 := "Helminth upgrade: generated offers for "
	632	[8208]	MOVE     	R123 R0 ; R123 := R0
	633	[8208]	LOADK    	R124 K87 ; R124 := " with cycle index "
	634	[8208]	MOVE     	R125 R7 ; R125 := R7
	635	[8208]	CONCAT   	R122 R122 R125 ; R122 := R122 .. R123 .. R124 .. R125
	636	[8208]	CALL     	R121 2 1 ; R121(R122)
	637	[8209]	GETGLOBAL	R121 K8 ; R121 := 0x0032441c
	638	[8209]	GETTABLE 	R121 R121 K9 ; R121 := R121["HelminthUpgradeOfferingCache"]
	639	[8209]	GETTABLE 	R121 R121 R0 ; R121 := R121[R0]
	640	[8209]	RETURN   	R121 2 ; return R121 
	641	[8210]	RETURN   	R0 1 ; return 

function #380 <?:8212,8310> (365 instructions, 1460 bytes at 0000025274F40C80)
3 params, 44 slots, 2 upvalues, 0 locals, 72 constants, 0 functions
	1	[8214]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	2	[8214]	GETTABLE 	R3 R3 K1 ; R3 := R3["EliteAlertTypeNameCache"]
	3	[8214]	TEST     	R3 1 ; if R3 then PC := 202
	4	[8214]	JMP      	202 ; PC := 202
	5	[8215]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	6	[8215]	NEWTABLE 	R4 0 0 ; R4 := {}
	7	[8215]	SETTABLE 	R3 K1 R4 ; R3["EliteAlertTypeNameCache"] := R4
	8	[8216]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	9	[8216]	GETTABLE 	R3 R3 K1 ; R3 := R3["EliteAlertTypeNameCache"]
	10	[8216]	NEWTABLE 	R4 0 0 ; R4 := {}
	11	[8216]	SETTABLE 	R3 K2 R4 ; R3["suits"] := R4
	12	[8217]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	13	[8217]	GETTABLE 	R3 R3 K1 ; R3 := R3["EliteAlertTypeNameCache"]
	14	[8217]	NEWTABLE 	R4 0 0 ; R4 := {}
	15	[8217]	SETTABLE 	R3 K3 R4 ; R3["weapons"] := R4
	16	[8219]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	17	[8219]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xa1c390fe]
	18	[8219]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[8220]	GETGLOBAL	R4 K6 ; R4 := 0x7b998233
	20	[8220]	MOVE     	R5 R3 ; R5 := R3
	21	[8220]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[8220]	TEST     	R4 0 ; if not R4 then PC := 38
	23	[8220]	JMP      	38 ; PC := 38
	24	[8222]	LOADK    	R4 K7 ; R4 := ""
	25	[8222]	GETGLOBAL	R5 K8 ; R5 := 0x7ed0a956
	26	[8222]	CALL     	R5 1 2 ; R5 := R5()
	27	[8222]	GETGLOBAL	R6 K8 ; R6 := 0x7ed0a956
	28	[8222]	CALL     	R6 1 2 ; R6 := R6()
	29	[8222]	NEWTABLE 	R7 0 0 ; R7 := {}
	30	[8222]	LOADK    	R8 K7 ; R8 := ""
	31	[8222]	GETGLOBAL	R9 K8 ; R9 := 0x7ed0a956
	32	[8222]	CALL     	R9 1 2 ; R9 := R9()
	33	[8222]	GETGLOBAL	R10 K8 ; R10 := 0x7ed0a956
	34	[8222]	CALL     	R10 1 2 ; R10 := R10()
	35	[8222]	NEWTABLE 	R11 0 0 ; R11 := {}
	36	[8222]	LOADK    	R12 := 0.000000
	37	[8222]	RETURN   	R4 10 ; return R4, R5, R6, R7, R8, R9, R10, R11, R12 
	38	[8225]	OP_LOADBOOL	R4 1 0 ; R4 := true
	39	[8227]	SELF     	R5 R3 K9 ; R6 := R3; R5 := R3[0xe9cbffa8]
	40	[8227]	GETGLOBAL	R7 K8 ; R7 := 0x7ed0a956
	41	[8227]	LOADK    	R8 K10 ; R8 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
	42	[8227]	CALL     	R7 2 2 ; R7 := R7(R8)
	43	[8227]	MOVE     	R8 R4 ; R8 := R4
	44	[8227]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	45	[8228]	GETGLOBAL	R6 K11 ; R6 := 0xcfc01047
	46	[8228]	MOVE     	R7 R5 ; R7 := R5
	47	[8228]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	48	[8228]	JMP      	94 ; PC := 94
	49	[8229]	SELF     	R11 R10 K12 ; R12 := R10; R11 := R10[0xfe9eb1a5]
	50	[8229]	CALL     	R11 2 2 ; R11 := R11(R12)
	51	[8229]	EQ       	0 R11 K14 ; if R11 ~= 3.000000 then PC := 94
	52	[8229]	JMP      	94 ; PC := 94
	53	[8229]	SELF     	R11 R10 K15 ; R12 := R10; R11 := R10[0xba7bce8f]
	54	[8229]	CALL     	R11 2 2 ; R11 := R11(R12)
	55	[8229]	TEST     	R11 1 ; if R11 then PC := 94
	56	[8229]	JMP      	94 ; PC := 94
	57	[8230]	SELF     	R11 R10 K16 ; R12 := R10; R11 := R10[0xed4e0128]
	58	[8230]	CALL     	R11 2 2 ; R11 := R11(R12)
	59	[8231]	GETGLOBAL	R12 K17 ; R12 := 0x7f5022cf
	60	[8231]	GETTABLE 	R12 R12 K18 ; R12 := R12[0xa5c556b9]
	61	[8231]	MOVE     	R13 R11 ; R13 := R11
	62	[8231]	LOADK    	R14 K19 ; R14 := "Prime"
	63	[8231]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	64	[8231]	TEST     	R12 1 ; if R12 then PC := 94
	65	[8231]	JMP      	94 ; PC := 94
	66	[8231]	GETGLOBAL	R12 K17 ; R12 := 0x7f5022cf
	67	[8231]	GETTABLE 	R12 R12 K18 ; R12 := R12[0xa5c556b9]
	68	[8231]	MOVE     	R13 R11 ; R13 := R11
	69	[8231]	LOADK    	R14 K20 ; R14 := "Operator"
	70	[8231]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	71	[8231]	TEST     	R12 1 ; if R12 then PC := 94
	72	[8231]	JMP      	94 ; PC := 94
	73	[8231]	GETGLOBAL	R12 K17 ; R12 := 0x7f5022cf
	74	[8231]	GETTABLE 	R12 R12 K18 ; R12 := R12[0xa5c556b9]
	75	[8231]	MOVE     	R13 R11 ; R13 := R11
	76	[8231]	LOADK    	R14 K21 ; R14 := "Umbra"
	77	[8231]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	78	[8231]	TEST     	R12 1 ; if R12 then PC := 94
	79	[8231]	JMP      	94 ; PC := 94
	80	[8231]	GETGLOBAL	R12 K17 ; R12 := 0x7f5022cf
	81	[8231]	GETTABLE 	R12 R12 K18 ; R12 := R12[0xa5c556b9]
	82	[8231]	MOVE     	R13 R11 ; R13 := R11
	83	[8231]	LOADK    	R14 K22 ; R14 := "PlayerPowerSuit"
	84	[8231]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	85	[8231]	TEST     	R12 1 ; if R12 then PC := 94
	86	[8231]	JMP      	94 ; PC := 94
	87	[8232]	GETGLOBAL	R12 K23 ; R12 := 0x33bdd652
	88	[8232]	GETTABLE 	R12 R12 K24 ; R12 := R12[0x23d5322f]
	89	[8232]	GETGLOBAL	R13 K0 ; R13 := 0x0032441c
	90	[8232]	GETTABLE 	R13 R13 K1 ; R13 := R13["EliteAlertTypeNameCache"]
	91	[8232]	GETTABLE 	R13 R13 K2 ; R13 := R13["suits"]
	92	[8232]	MOVE     	R14 R11 ; R14 := R11
	93	[8232]	CALL     	R12 3 1 ; R12(R13,R14)
	94	[8228]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 49; R8 := R9 end
	95	[8235]	JMP      	49 ; PC := 49
	96	[8240]	SELF     	R12 R3 K9 ; R13 := R3; R12 := R3[0xe9cbffa8]
	97	[8240]	GETGLOBAL	R14 K25 ; R14 := gLotusWeaponType
	98	[8240]	MOVE     	R15 R4 ; R15 := R4
	99	[8240]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	100	[8241]	GETGLOBAL	R13 K11 ; R13 := 0xcfc01047
	101	[8241]	MOVE     	R14 R12 ; R14 := R12
	102	[8241]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	103	[8241]	JMP      	200 ; PC := 200
	104	[8242]	SELF     	R18 R17 K12 ; R19 := R17; R18 := R17[0xfe9eb1a5]
	105	[8242]	CALL     	R18 2 2 ; R18 := R18(R19)
	106	[8243]	EQ       	1 R18 K26 ; if R18 == 0.000000 then PC := 112
	107	[8243]	JMP      	112 ; PC := 112
	108	[8243]	EQ       	1 R18 K27 ; if R18 == 1.000000 then PC := 112
	109	[8243]	JMP      	112 ; PC := 112
	110	[8243]	EQ       	0 R18 K28 ; if R18 ~= 5.000000 then PC := 200
	111	[8243]	JMP      	200 ; PC := 200
	112	[8244]	SELF     	R19 R17 K29 ; R20 := R17; R19 := R17[0x5ba460ac]
	113	[8244]	CALL     	R19 2 2 ; R19 := R19(R20)
	114	[8244]	SELF     	R19 R19 K30 ; R20 := R19; R19 := R19[0x56c01834]
	115	[8244]	CALL     	R19 2 2 ; R19 := R19(R20)
	116	[8244]	TEST     	R19 0 ; if not R19 then PC := 200
	117	[8244]	JMP      	200 ; PC := 200
	118	[8245]	SELF     	R19 R17 K31 ; R20 := R17; R19 := R17[0x8170d7d9]
	119	[8245]	CALL     	R19 2 2 ; R19 := R19(R20)
	120	[8245]	TEST     	R19 0 ; if not R19 then PC := 200
	121	[8245]	JMP      	200 ; PC := 200
	122	[8246]	SELF     	R19 R17 K15 ; R20 := R17; R19 := R17[0xba7bce8f]
	123	[8246]	CALL     	R19 2 2 ; R19 := R19(R20)
	124	[8246]	TEST     	R19 1 ; if R19 then PC := 200
	125	[8246]	JMP      	200 ; PC := 200
	126	[8248]	SELF     	R19 R17 K16 ; R20 := R17; R19 := R17[0xed4e0128]
	127	[8248]	CALL     	R19 2 2 ; R19 := R19(R20)
	128	[8251]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	129	[8251]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	130	[8251]	MOVE     	R21 R19 ; R21 := R19
	131	[8251]	LOADK    	R22 K32 ; R22 := "MK1"
	132	[8251]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	133	[8251]	TEST     	R20 1 ; if R20 then PC := 200
	134	[8251]	JMP      	200 ; PC := 200
	135	[8252]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	136	[8252]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	137	[8252]	MOVE     	R21 R19 ; R21 := R19
	138	[8252]	LOADK    	R22 K33 ; R22 := "StartingRifle"
	139	[8252]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	140	[8252]	TEST     	R20 1 ; if R20 then PC := 200
	141	[8252]	JMP      	200 ; PC := 200
	142	[8258]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	143	[8258]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	144	[8258]	MOVE     	R21 R19 ; R21 := R19
	145	[8258]	LOADK    	R22 K19 ; R22 := "Prime"
	146	[8258]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	147	[8258]	TEST     	R20 1 ; if R20 then PC := 200
	148	[8258]	JMP      	200 ; PC := 200
	149	[8259]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	150	[8259]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	151	[8259]	MOVE     	R21 R19 ; R21 := R19
	152	[8259]	LOADK    	R22 K34 ; R22 := "Wraith"
	153	[8259]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	154	[8259]	TEST     	R20 1 ; if R20 then PC := 200
	155	[8259]	JMP      	200 ; PC := 200
	156	[8260]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	157	[8260]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	158	[8260]	MOVE     	R21 R19 ; R21 := R19
	159	[8260]	LOADK    	R22 K35 ; R22 := "Vandal"
	160	[8260]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	161	[8260]	TEST     	R20 1 ; if R20 then PC := 200
	162	[8260]	JMP      	200 ; PC := 200
	163	[8261]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	164	[8261]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	165	[8261]	MOVE     	R21 R19 ; R21 := R19
	166	[8261]	LOADK    	R22 K36 ; R22 := "Prisma"
	167	[8261]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	168	[8261]	TEST     	R20 1 ; if R20 then PC := 200
	169	[8261]	JMP      	200 ; PC := 200
	170	[8262]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	171	[8262]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	172	[8262]	MOVE     	R21 R19 ; R21 := R19
	173	[8262]	LOADK    	R22 K37 ; R22 := "Syndicate"
	174	[8262]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	175	[8262]	TEST     	R20 1 ; if R20 then PC := 200
	176	[8262]	JMP      	200 ; PC := 200
	177	[8264]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	178	[8264]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	179	[8264]	MOVE     	R21 R19 ; R21 := R19
	180	[8264]	LOADK    	R22 K38 ; R22 := "Modular"
	181	[8264]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	182	[8264]	TEST     	R20 1 ; if R20 then PC := 200
	183	[8264]	JMP      	200 ; PC := 200
	184	[8265]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	185	[8265]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	186	[8265]	MOVE     	R21 R19 ; R21 := R19
	187	[8265]	LOADK    	R22 K39 ; R22 := "Gear"
	188	[8265]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	189	[8265]	TEST     	R20 1 ; if R20 then PC := 200
	190	[8265]	JMP      	200 ; PC := 200
	191	[8267]	GETGLOBAL	R20 K23 ; R20 := 0x33bdd652
	192	[8267]	GETTABLE 	R20 R20 K24 ; R20 := R20[0x23d5322f]
	193	[8267]	GETGLOBAL	R21 K0 ; R21 := 0x0032441c
	194	[8267]	GETTABLE 	R21 R21 K1 ; R21 := R21["EliteAlertTypeNameCache"]
	195	[8267]	GETTABLE 	R21 R21 K3 ; R21 := R21["weapons"]
	196	[8267]	NEWTABLE 	R22 0 2 ; R22 := {}
	197	[8267]	SETTABLE 	R22 K40 R19 ; R22["itemName"] := R19
	198	[8267]	SETTABLE 	R22 K41 R18 ; R22["category"] := R18
	199	[8267]	CALL     	R20 3 1 ; R20(R21,R22)
	200	[8241]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 104; R15 := R16 end
	201	[8270]	JMP      	104 ; PC := 104
	202	[8275]	GETGLOBAL	R20 K0 ; R20 := 0x0032441c
	203	[8275]	GETTABLE 	R20 R20 K1 ; R20 := R20["EliteAlertTypeNameCache"]
	204	[8275]	GETTABLE 	R20 R20 K2 ; R20 := R20["suits"]
	205	[8275]	LEN      	R20 R20 ; R20 := # R20
	206	[8275]	EQ       	0 R20 K26 ; if R20 ~= 0.000000 then PC := 222
	207	[8275]	JMP      	222 ; PC := 222
	208	[8277]	LOADK    	R20 K7 ; R20 := ""
	209	[8277]	GETGLOBAL	R21 K8 ; R21 := 0x7ed0a956
	210	[8277]	CALL     	R21 1 2 ; R21 := R21()
	211	[8277]	GETGLOBAL	R22 K8 ; R22 := 0x7ed0a956
	212	[8277]	CALL     	R22 1 2 ; R22 := R22()
	213	[8277]	NEWTABLE 	R23 0 0 ; R23 := {}
	214	[8277]	LOADK    	R24 K7 ; R24 := ""
	215	[8277]	GETGLOBAL	R25 K8 ; R25 := 0x7ed0a956
	216	[8277]	CALL     	R25 1 2 ; R25 := R25()
	217	[8277]	GETGLOBAL	R26 K8 ; R26 := 0x7ed0a956
	218	[8277]	CALL     	R26 1 2 ; R26 := R26()
	219	[8277]	NEWTABLE 	R27 0 0 ; R27 := {}
	220	[8277]	LOADK    	R28 := 0.000000
	221	[8277]	RETURN   	R20 10 ; return R20, R21, R22, R23, R24, R25, R26, R27, R28 
	222	[8280]	GETGLOBAL	R20 K42 ; R20 := 0xffd438ab
	223	[8280]	CALL     	R20 1 2 ; R20 := R20()
	224	[8283]	GETUPVAL 	R21 U0 ; R21 := U0
	225	[8283]	GETTABLE 	R21 R21 K43 ; R21 := R21[0x06d055f9]
	226	[8283]	EQ       	0 R2 K44 ; if R2 ~= nil then PC := 229
	227	[8283]	JMP      	229 ; PC := 229
	228	[8283]	OP_LOADBOOL	R22 0 1 ; R22 := false; PC := 229
	229	[8283]	OP_LOADBOOL	R22 1 0 ; R22 := true
	230	[8283]	MOVE     	R23 R2 ; R23 := R2
	231	[8283]	GETGLOBAL	R24 K45 ; R24 := 0x5bced4c4
	232	[8283]	GETTABLE 	R24 R24 K46 ; R24 := R24[0x55f27c30]
	233	[8283]	GETUPVAL 	R25 U1 ; R25 := U1
	234	[8283]	CALL     	R25 1 2 ; R25 := R25()
	235	[8283]	GETGLOBAL	R26 K47 ; R26 := ELITE_ALERT_MISSION_INTERVAL
	236	[8283]	DIV      	R26 R26 K48 ; R26 := R26 / 60.000000
	237	[8283]	DIV      	R25 R25 R26 ; R25 := R25 / R26
	238	[8283]	CALL     	R24 2 0 ; R24,... := R24(R25)
	239	[8283]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	240	[8284]	GETGLOBAL	R22 K49 ; R22 := 0x4f6851ff
	241	[8284]	GETGLOBAL	R23 K50 ; R23 := 0x0997dbe6
	242	[8284]	MOVE     	R24 R21 ; R24 := R21
	243	[8284]	CALL     	R23 2 0 ; R23,... := R23(R24)
	244	[8284]	CALL     	R22 0 1 ; R22(R23,...)
	245	[8285]	GETGLOBAL	R22 K51 ; R22 := 0x0c5e62f9
	246	[8285]	LOADK    	R23 := 1.000000
	247	[8285]	LOADK    	R24 K52 ; R24 := 1000000.000000
	248	[8285]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	249	[8287]	GETGLOBAL	R23 K53 ; R23 := 0xf1f5e051
	250	[8287]	MOVE     	R24 R0 ; R24 := R0
	251	[8287]	CALL     	R23 2 2 ; R23 := R23(R24)
	252	[8288]	GETGLOBAL	R24 K49 ; R24 := 0x4f6851ff
	253	[8288]	GETGLOBAL	R25 K50 ; R25 := 0x0997dbe6
	254	[8288]	ADD      	R26 R23 R22 ; R26 := R23 + R22
	255	[8288]	CALL     	R25 2 0 ; R25,... := R25(R26)
	256	[8288]	CALL     	R24 0 1 ; R24(R25,...)
	257	[8290]	GETGLOBAL	R24 K0 ; R24 := 0x0032441c
	258	[8290]	GETTABLE 	R24 R24 K1 ; R24 := R24["EliteAlertTypeNameCache"]
	259	[8290]	GETTABLE 	R24 R24 K2 ; R24 := R24["suits"]
	260	[8290]	GETGLOBAL	R25 K51 ; R25 := 0x0c5e62f9
	261	[8290]	LOADK    	R26 := 1.000000
	262	[8290]	GETGLOBAL	R27 K0 ; R27 := 0x0032441c
	263	[8290]	GETTABLE 	R27 R27 K1 ; R27 := R27["EliteAlertTypeNameCache"]
	264	[8290]	GETTABLE 	R27 R27 K2 ; R27 := R27["suits"]
	265	[8290]	LEN      	R27 R27 ; R27 := # R27
	266	[8290]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	267	[8290]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	268	[8291]	GETGLOBAL	R25 K17 ; R25 := 0x7f5022cf
	269	[8291]	GETTABLE 	R25 R25 K54 ; R25 := R25[0x66edf04f]
	270	[8291]	MOVE     	R26 R24 ; R26 := R24
	271	[8291]	LOADK    	R27 K55 ; R27 := "/StoreItems"
	272	[8291]	LOADK    	R28 K7 ; R28 := ""
	273	[8291]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	274	[8292]	GETGLOBAL	R26 K8 ; R26 := 0x7ed0a956
	275	[8292]	MOVE     	R27 R25 ; R27 := R25
	276	[8292]	CALL     	R26 2 2 ; R26 := R26(R27)
	277	[8293]	GETGLOBAL	R27 K17 ; R27 := 0x7f5022cf
	278	[8293]	GETTABLE 	R27 R27 K18 ; R27 := R27[0xa5c556b9]
	279	[8293]	MOVE     	R28 R25 ; R28 := R25
	280	[8293]	LOADK    	R29 K56 ; R29 := "/Anti"
	281	[8293]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	282	[8293]	TEST     	R27 0 ; if not R27 then PC := 296
	283	[8293]	JMP      	296 ; PC := 296
	284	[8294]	GETGLOBAL	R27 K17 ; R27 := 0x7f5022cf
	285	[8294]	GETTABLE 	R27 R27 K57 ; R27 := R27[0x1a94c9cc]
	286	[8294]	MOVE     	R28 R25 ; R28 := R25
	287	[8294]	LOADK    	R29 := 1.000000
	288	[8294]	GETGLOBAL	R30 K17 ; R30 := 0x7f5022cf
	289	[8294]	GETTABLE 	R30 R30 K58 ; R30 := R30[0x41e2ae25]
	290	[8294]	MOVE     	R31 R25 ; R31 := R25
	291	[8294]	CALL     	R30 2 2 ; R30 := R30(R31)
	292	[8294]	SUB      	R30 R30 K59 ; R30 := R30 - 4.000000
	293	[8294]	CALL     	R27 4 2 ; R27 := R27(R28,R29,R30)
	294	[8294]	LOADK    	R28 K60 ; R28 := "Nova"
	295	[8294]	CONCAT   	R25 R27 R28 ; R25 := R27 .. R28
	296	[8296]	GETGLOBAL	R27 K8 ; R27 := 0x7ed0a956
	297	[8296]	MOVE     	R28 R25 ; R28 := R25
	298	[8296]	LOADK    	R29 K61 ; R29 := "BaseSuit"
	299	[8296]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	300	[8296]	CALL     	R27 2 2 ; R27 := R27(R28)
	301	[8297]	NEWTABLE 	R28 0 2 ; R28 := {}
	302	[8297]	SETTABLE 	R28 K62 K64 ; R28["value"] := 10.000000
	303	[8297]	SETTABLE 	R28 K65 K66 ; R28["label"] := "/Lotus/Language/Labels/AVATAR_ABILITY_STRENGTH"
	304	[8299]	GETGLOBAL	R29 K0 ; R29 := 0x0032441c
	305	[8299]	GETTABLE 	R29 R29 K1 ; R29 := R29["EliteAlertTypeNameCache"]
	306	[8299]	GETTABLE 	R29 R29 K3 ; R29 := R29["weapons"]
	307	[8299]	GETGLOBAL	R30 K51 ; R30 := 0x0c5e62f9
	308	[8299]	LOADK    	R31 := 1.000000
	309	[8299]	GETGLOBAL	R32 K0 ; R32 := 0x0032441c
	310	[8299]	GETTABLE 	R32 R32 K1 ; R32 := R32["EliteAlertTypeNameCache"]
	311	[8299]	GETTABLE 	R32 R32 K3 ; R32 := R32["weapons"]
	312	[8299]	LEN      	R32 R32 ; R32 := # R32
	313	[8299]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	314	[8299]	GETTABLE 	R29 R29 R30 ; R29 := R29[R30]
	315	[8300]	GETTABLE 	R30 R29 K40 ; R30 := R29["itemName"]
	316	[8301]	GETGLOBAL	R31 K17 ; R31 := 0x7f5022cf
	317	[8301]	GETTABLE 	R31 R31 K54 ; R31 := R31[0x66edf04f]
	318	[8301]	MOVE     	R32 R30 ; R32 := R30
	319	[8301]	LOADK    	R33 K55 ; R33 := "/StoreItems"
	320	[8301]	LOADK    	R34 K7 ; R34 := ""
	321	[8301]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	322	[8302]	GETGLOBAL	R32 K8 ; R32 := 0x7ed0a956
	323	[8302]	MOVE     	R33 R31 ; R33 := R31
	324	[8302]	CALL     	R32 2 2 ; R32 := R32(R33)
	325	[8303]	GETGLOBAL	R33 K8 ; R33 := 0x7ed0a956
	326	[8303]	MOVE     	R34 R31 ; R34 := R31
	327	[8303]	LOADK    	R35 K19 ; R35 := "Prime"
	328	[8303]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	329	[8303]	CALL     	R33 2 2 ; R33 := R33(R34)
	330	[8304]	NEWTABLE 	R34 0 2 ; R34 := {}
	331	[8304]	GETUPVAL 	R35 U0 ; R35 := U0
	332	[8304]	GETTABLE 	R35 R35 K43 ; R35 := R35[0x06d055f9]
	333	[8304]	GETTABLE 	R36 R29 K41 ; R36 := R29["category"]
	334	[8304]	EQ       	1 R36 K28 ; if R36 == 5.000000 then PC := 337
	335	[8304]	JMP      	337 ; PC := 337
	336	[8304]	OP_LOADBOOL	R36 0 1 ; R36 := false; PC := 337
	337	[8304]	OP_LOADBOOL	R36 1 0 ; R36 := true
	338	[8304]	LOADK    	R37 := 276.000000
	339	[8304]	LOADK    	R38 := 216.000000
	340	[8304]	CALL     	R35 4 2 ; R35 := R35(R36,R37,R38)
	341	[8304]	SETTABLE 	R34 K62 R35 ; R34[0x4bc83635] := R35
	342	[8304]	SETTABLE 	R34 K65 K67 ; R34["label"] := "/Lotus/Language/Labels/WEAPON_DAMAGE_AMOUNT"
	343	[8306]	GETGLOBAL	R35 K49 ; R35 := 0x4f6851ff
	344	[8306]	MOVE     	R36 R20 ; R36 := R20
	345	[8306]	CALL     	R35 2 1 ; R35(R36)
	346	[8308]	GETGLOBAL	R35 K68 ; R35 := 0x3d106989
	347	[8308]	LOADK    	R36 K69 ; R36 := "EliteAlert: generated boosts for "
	348	[8308]	MOVE     	R37 R0 ; R37 := R0
	349	[8308]	LOADK    	R38 K70 ; R38 := ": suitType="
	350	[8308]	MOVE     	R39 R25 ; R39 := R25
	351	[8308]	LOADK    	R40 K71 ; R40 := " wepType="
	352	[8308]	MOVE     	R41 R31 ; R41 := R31
	353	[8308]	CONCAT   	R36 R36 R41 ; R36 := R36 .. R37 .. R38 .. R39 .. R40 .. R41
	354	[8308]	CALL     	R35 2 1 ; R35(R36)
	355	[8309]	MOVE     	R35 R24 ; R35 := R24
	356	[8309]	MOVE     	R36 R26 ; R36 := R26
	357	[8309]	MOVE     	R37 R27 ; R37 := R27
	358	[8309]	MOVE     	R38 R28 ; R38 := R28
	359	[8309]	MOVE     	R39 R30 ; R39 := R30
	360	[8309]	MOVE     	R40 R32 ; R40 := R32
	361	[8309]	MOVE     	R41 R33 ; R41 := R33
	362	[8309]	MOVE     	R42 R34 ; R42 := R34
	363	[8309]	MOVE     	R43 R21 ; R43 := R21
	364	[8309]	RETURN   	R35 10 ; return R35, R36, R37, R38, R39, R40, R41, R42, R43 
	365	[8310]	RETURN   	R0 1 ; return 

function #381 <?:8312,8328> (58 instructions, 232 bytes at 0000025274F42150)
1 param, 13 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[8313]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8313]	GETTABLE 	R2 R0 K1 ; R2 := R0["Rank"]
	3	[8313]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[8313]	TEST     	R1 0 ; if not R1 then PC := 58
	5	[8313]	JMP      	58 ; PC := 58
	6	[8314]	GETTABLE 	R1 R0 K2 ; R1 := R0["ResultItemType"]
	7	[8314]	TEST     	R1 1 ; if R1 then PC := 10
	8	[8314]	JMP      	10 ; PC := 10
	9	[8314]	GETTABLE 	R1 R0 K3 ; R1 := R0["Type"]
	10	[8315]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	11	[8315]	MOVE     	R3 R1 ; R3 := R1
	12	[8315]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[8315]	TEST     	R2 1 ; if R2 then PC := 58
	14	[8315]	JMP      	58 ; PC := 58
	15	[8315]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0xf2deaf69]
	16	[8315]	GETGLOBAL	R4 K5 ; R4 := gWeaponBaseType
	17	[8315]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	18	[8315]	TEST     	R2 0 ; if not R2 then PC := 58
	19	[8315]	JMP      	58 ; PC := 58
	20	[8316]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	21	[8316]	GETGLOBAL	R3 K6 ; R3 := 0x25d99d89
	22	[8316]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[8316]	TEST     	R2 1 ; if R2 then PC := 30
	24	[8316]	JMP      	30 ; PC := 30
	25	[8316]	GETGLOBAL	R2 K6 ; R2 := 0x25d99d89
	26	[8316]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x25a6e75e]
	27	[8316]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[8316]	TEST     	R2 1 ; if R2 then PC := 31
	29	[8316]	JMP      	31 ; PC := 31
	30	[8316]	LOADNIL  	R2 R2 ; R2 := nil
	31	[8317]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	32	[8317]	MOVE     	R4 R2 ; R4 := R2
	33	[8317]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[8317]	TEST     	R3 1 ; if R3 then PC := 58
	35	[8317]	JMP      	58 ; PC := 58
	36	[8318]	GETTABLE 	R3 R2 K8 ; R3 := R2["mXPInfo"]
	37	[8319]	LOADK    	R4 := 1.000000
	38	[8319]	LEN      	R5 R3 ; R5 := # R3
	39	[8319]	LOADK    	R6 := 1.000000
	40	[8319]	FORPREP  	R4 57 ; R4 -= R6; PC := 57
	41	[8320]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	42	[8320]	GETTABLE 	R8 R8 K9 ; R8 := R8["mItemType"]
	43	[8321]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	44	[8321]	MOVE     	R10 R8 ; R10 := R8
	45	[8321]	CALL     	R9 2 2 ; R9 := R9(R10)
	46	[8321]	TEST     	R9 1 ; if R9 then PC := 57
	47	[8321]	JMP      	57 ; PC := 57
	48	[8321]	EQ       	0 R8 R1 ; if R8 ~= R1 then PC := 57
	49	[8321]	JMP      	57 ; PC := 57
	50	[8322]	GETGLOBAL	R9 K10 ; R9 := 0xa94df70b
	51	[8322]	SELF     	R9 R9 K11 ; R10 := R9; R9 := R9[0x8427bf69]
	52	[8322]	GETTABLE 	R11 R3 R7 ; R11 := R3[R7]
	53	[8322]	GETTABLE 	R11 R11 K12 ; R11 := R11["mXP"]
	54	[8322]	MOVE     	R12 R8 ; R12 := R8
	55	[8322]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	56	[8322]	SETTABLE 	R0 K1 R9 ; R0["Rank"] := R9
	57	[8319]	FORLOOP  	R4 41 ; R4 += R6; if R4 <= R5 then begin PC := 41; R7 := R4 end
	58	[8328]	RETURN   	R0 1 ; return 

function #382 <?:8330,8348> (46 instructions, 184 bytes at 0000025274F42530)
3 params, 9 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[8331]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[8331]	MOVE     	R4 R0 ; R4 := R0
	3	[8331]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[8331]	TEST     	R3 1 ; if R3 then PC := 46
	5	[8331]	JMP      	46 ; PC := 46
	6	[8332]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 9
	7	[8332]	JMP      	9 ; PC := 9
	8	[8333]	LOADK    	R1 := 10.000000
	9	[8335]	EQ       	0 R2 K1 ; if R2 ~= nil then PC := 12
	10	[8335]	JMP      	12 ; PC := 12
	11	[8336]	LOADK    	R2 := 2.000000
	12	[8339]	GETUPVAL 	R3 U0 ; R3 := U0
	13	[8339]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x4bc83635]
	14	[8339]	GETUPVAL 	R4 U1 ; R4 := U1
	15	[8339]	GETTABLE 	R4 R4 K4 ; R4 := R4[0x5d10207d]
	16	[8339]	MOVE     	R5 R1 ; R5 := R1
	17	[8339]	OP_LOADBOOL	R6 1 0 ; R6 := true
	18	[8339]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	19	[8339]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	20	[8340]	GETUPVAL 	R4 U0 ; R4 := U0
	21	[8340]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x4bc83635]
	22	[8340]	GETUPVAL 	R5 U1 ; R5 := U1
	23	[8340]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x5d10207d]
	24	[8340]	MOVE     	R6 R2 ; R6 := R2
	25	[8340]	OP_LOADBOOL	R7 1 0 ; R7 := true
	26	[8340]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	27	[8340]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	28	[8342]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0xf2deaf69]
	29	[8342]	GETGLOBAL	R7 K6 ; R7 := gParticleSysType
	30	[8342]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	31	[8342]	TEST     	R5 0 ; if not R5 then PC := 38
	32	[8342]	JMP      	38 ; PC := 38
	33	[8343]	SELF     	R5 R0 K7 ; R6 := R0; R5 := R0[0x8feccd8b]
	34	[8343]	MOVE     	R7 R3 ; R7 := R3
	35	[8343]	MOVE     	R8 R4 ; R8 := R4
	36	[8343]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	37	[8343]	JMP      	46 ; PC := 46
	38	[8344]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0xf2deaf69]
	39	[8344]	GETGLOBAL	R7 K8 ; R7 := gLensFlareType
	40	[8344]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	41	[8344]	TEST     	R5 0 ; if not R5 then PC := 46
	42	[8344]	JMP      	46 ; PC := 46
	43	[8345]	SELF     	R5 R0 K9 ; R6 := R0; R5 := R0[0xc2b4e597]
	44	[8345]	MOVE     	R7 R3 ; R7 := R3
	45	[8345]	CALL     	R5 3 1 ; R5(R6,R7)
	46	[8348]	RETURN   	R0 1 ; return 

function #383 <?:8350,8377> (10 instructions, 40 bytes at 0000025274F42810)
2 params, 6 slots, 1 upvalue, 0 locals, 3 constants, 1 function
	1	[8352]	GETGLOBAL	R2 K0 ; R2 := 0x7f5022cf
	2	[8352]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x66edf04f]
	3	[8352]	MOVE     	R3 R0 ; R3 := R0
	4	[8352]	LOADK    	R4 K2 ; R4 := "\"#.-\""
	5	[8376]	CLOSURE  	R5 0 ; R5 := closure(Function #1)
	6	[8376]	MOVE     	R0 R1 ; R0 := R1
	7	[8376]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[8352]	TAILCALL 	R2 4 0 ; R2,... := R2(R3,R4,R5)
	9	[8376]	RETURN   	R2 0 ; return R2,... 
	10	[8377]	RETURN   	R0 1 ; return 

function #384 <?:8381,8444> (78 instructions, 312 bytes at 0000025274F42ED0)
1 param, 10 slots, 1 upvalue, 0 locals, 30 constants, 2 functions
	1	[8396]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	2	[8396]	GETUPVAL 	R0 U0 ; R0 := U0
	3	[8398]	MOVE     	R2 R1 ; R2 := R1
	4	[8398]	CALL     	R2 1 2 ; R2 := R2()
	5	[8398]	TEST     	R2 1 ; if R2 then PC := 8
	6	[8398]	JMP      	8 ; PC := 8
	7	[8399]	RETURN   	R0 1 ; return 
	8	[8402]	GETGLOBAL	R2 K0 ; R2 := _T
	9	[8402]	GETTABLE 	R2 R2 K1 ; R2 := R2["ShowNotification"]
	10	[8402]	EQ       	1 R2 K2 ; if R2 == nil then PC := 74
	11	[8402]	JMP      	74 ; PC := 74
	12	[8403]	GETGLOBAL	R2 K3 ; R2 := 0x25d99d89
	13	[8403]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xf5fb4cbf]
	14	[8403]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[8404]	GETGLOBAL	R3 K0 ; R3 := _T
	16	[8404]	GETTABLE 	R3 R3 K5 ; R3 := R3["SkipMailNotification"]
	17	[8404]	TEST     	R3 1 ; if R3 then PC := 41
	18	[8404]	JMP      	41 ; PC := 41
	19	[8405]	GETGLOBAL	R3 K6 ; R3 := 0x7f5022cf
	20	[8405]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x04981ab3]
	21	[8405]	GETGLOBAL	R4 K8 ; R4 := 0x603636ad
	22	[8405]	EQ       	0 R2 K9 ; if R2 ~= 1.000000 then PC := 27
	23	[8405]	JMP      	27 ; PC := 27
	24	[8405]	LOADK    	R5 K10 ; R5 := "/Lotus/Language/Menu/Message"
	25	[8405]	TEST     	R5 1 ; if R5 then PC := 28
	26	[8405]	JMP      	28 ; PC := 28
	27	[8405]	LOADK    	R5 K11 ; R5 := "/Lotus/Language/Menu/Messages"
	28	[8405]	NEWTABLE 	R6 0 0 ; R6 := {}
	29	[8405]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	30	[8405]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	31	[8406]	GETGLOBAL	R4 K0 ; R4 := _T
	32	[8406]	GETTABLE 	R4 R4 K12 ; R4 := R4[0x7dce37bc]
	33	[8406]	GETGLOBAL	R5 K8 ; R5 := 0x603636ad
	34	[8406]	LOADK    	R6 K13 ; R6 := "/Lotus/Language/Menu/Mailbox_NewMessagesNotification"
	35	[8406]	NEWTABLE 	R7 0 2 ; R7 := {}
	36	[8406]	SETTABLE 	R7 K14 R2 ; R7["COUNT"] := R2
	37	[8406]	SETTABLE 	R7 K15 R3 ; R7["MESSAGES"] := R3
	38	[8406]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	39	[8406]	LOADK    	R6 K16 ; R6 := "Mail"
	40	[8406]	CALL     	R4 3 1 ; R4(R5,R6)
	41	[8409]	GETGLOBAL	R4 K3 ; R4 := 0x25d99d89
	42	[8409]	SELF     	R4 R4 K17 ; R5 := R4; R4 := R4[0x63a9c319]
	43	[8409]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[8409]	LT       	0 K18 R4 ; if 0.000000 >= R4 then PC := 74
	45	[8409]	JMP      	74 ; PC := 74
	46	[8409]	GETGLOBAL	R4 K0 ; R4 := _T
	47	[8409]	GETTABLE 	R4 R4 K19 ; R4 := R4["GetScreenRes"]
	48	[8409]	EQ       	1 R4 K2 ; if R4 == nil then PC := 74
	49	[8409]	JMP      	74 ; PC := 74
	50	[8410]	GETGLOBAL	R4 K0 ; R4 := _T
	51	[8410]	GETTABLE 	R4 R4 K20 ; R4 := R4[0x14e3a848]
	52	[8410]	LOADK    	R5 K21 ; R5 := "Inbox"
	53	[8410]	CALL     	R4 2 2 ; R4 := R4(R5)
	54	[8411]	GETGLOBAL	R5 K22 ; R5 := 0x9ba7909f
	55	[8411]	SELF     	R5 R5 K23 ; R6 := R5; R5 := R5[0xbcfb64ab]
	56	[8411]	MOVE     	R7 R4 ; R7 := R4
	57	[8411]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	58	[8414]	GETGLOBAL	R6 K24 ; R6 := 0x7b998233
	59	[8414]	MOVE     	R7 R5 ; R7 := R5
	60	[8414]	CALL     	R6 2 2 ; R6 := R6(R7)
	61	[8414]	TEST     	R6 0 ; if not R6 then PC := 74
	62	[8414]	JMP      	74 ; PC := 74
	63	[8414]	GETGLOBAL	R6 K24 ; R6 := 0x7b998233
	64	[8414]	MOVE     	R7 R0 ; R7 := R0
	65	[8414]	CALL     	R6 2 2 ; R6 := R6(R7)
	66	[8414]	TEST     	R6 1 ; if R6 then PC := 74
	67	[8414]	JMP      	74 ; PC := 74
	68	[8415]	GETGLOBAL	R6 K0 ; R6 := _T
	69	[8415]	SETTABLE 	R6 K25 K26 ; R6["OpeningMailbox"] := true
	70	[8416]	SELF     	R6 R0 K27 ; R7 := R0; R6 := R0[0xbd2e96ea]
	71	[8416]	LOADK    	R8 := 1.000000
	72	[8437]	CLOSURE  	R9 1 ; R9 := closure(Function #2)
	73	[8416]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	74	[8442]	GETGLOBAL	R6 K0 ; R6 := _T
	75	[8442]	SETTABLE 	R6 K5 K28 ; R6["SkipMailNotification"] := false
	76	[8443]	GETGLOBAL	R6 K0 ; R6 := _T
	77	[8443]	SETTABLE 	R6 K29 K28 ; R6["gQueueMailbox"] := false
	78	[8444]	RETURN   	R0 1 ; return 

function #385 <?:8446,8448> (19 instructions, 76 bytes at 0000025274F43EE0)
0 params, 2 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[8447]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[8447]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[8447]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8447]	TEST     	R0 1 ; if R0 then PC := 16
	5	[8447]	JMP      	16 ; PC := 16
	6	[8447]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	7	[8447]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x69727e0b]
	8	[8447]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[8447]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x89e663e9]
	10	[8447]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[8447]	TEST     	R0 0 ; if not R0 then PC := 18
	12	[8447]	JMP      	18 ; PC := 18
	13	[8447]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[8447]	CALL     	R0 1 2 ; R0 := R0()
	15	[8447]	JMP      	18 ; PC := 18
	16	[8447]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 17
	17	[8447]	OP_LOADBOOL	R0 1 0 ; R0 := true
	18	[8447]	RETURN   	R0 2 ; return R0 
	19	[8448]	RETURN   	R0 1 ; return 

function #386 <?:8450,8505> (94 instructions, 376 bytes at 0000025274F44080)
4 params, 13 slots, 2 upvalues, 0 locals, 26 constants, 0 functions
	1	[8451]	TESTSET  	R4 R2 1 ; if R2 then PC := 4 else R4 := R2 
	2	[8451]	JMP      	4 ; PC := 4
	3	[8451]	LOADK    	R4 := 0.000000
	4	[8452]	GETUPVAL 	R5 U0 ; R5 := U0
	5	[8452]	CALL     	R5 1 2 ; R5 := R5()
	6	[8452]	SELF     	R5 R5 K1 ; R6 := R5; R5 := R5[0x29922d98]
	7	[8452]	MOVE     	R7 R0 ; R7 := R0
	8	[8452]	MOVE     	R8 R4 ; R8 := R4
	9	[8452]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	10	[8454]	EQ       	0 R3 K2 ; if R3 ~= nil then PC := 17
	11	[8454]	JMP      	17 ; PC := 17
	12	[8455]	GETGLOBAL	R6 K3 ; R6 := 0x603636ad
	13	[8455]	LOADK    	R7 K4 ; R7 := "/Lotus/Language/Kingpins/NemesisViewer_Title"
	14	[8455]	LOADNIL  	R8 R8 ; R8 := nil
	15	[8455]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	16	[8455]	MOVE     	R3 R6 ; R3 := R6
	17	[8457]	GETGLOBAL	R6 K3 ; R6 := 0x603636ad
	18	[8457]	LOADK    	R7 K6 ; R7 := "/Lotus/Language/Kingpins/NemesisControlledTerritory"
	19	[8457]	NEWTABLE 	R8 0 1 ; R8 := {}
	20	[8457]	SETTABLE 	R8 K7 R3 ; R8["LICH_NAME"] := R3
	21	[8457]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	22	[8457]	SETTABLE 	R5 K5 R6 ; R5["uniqueName"] := R6
	23	[8459]	TESTSET  	R6 R1 1 ; if R1 then PC := 26 else R6 := R1 
	24	[8459]	JMP      	26 ; PC := 26
	25	[8459]	LOADK    	R6 := 1.000000
	26	[8461]	LOADK    	R7 := 55.000000
	27	[8462]	LOADK    	R8 := 75.000000
	28	[8463]	EQ       	0 R6 K8 ; if R6 ~= 1.000000 then PC := 33
	29	[8463]	JMP      	33 ; PC := 33
	30	[8464]	LOADK    	R7 := 50.000000
	31	[8465]	LOADK    	R8 := 60.000000
	32	[8465]	JMP      	47 ; PC := 47
	33	[8466]	EQ       	0 R6 K9 ; if R6 ~= 2.000000 then PC := 38
	34	[8466]	JMP      	38 ; PC := 38
	35	[8467]	LOADK    	R7 := 55.000000
	36	[8468]	LOADK    	R8 := 70.000000
	37	[8468]	JMP      	47 ; PC := 47
	38	[8469]	EQ       	0 R6 K10 ; if R6 ~= 3.000000 then PC := 43
	39	[8469]	JMP      	43 ; PC := 43
	40	[8470]	LOADK    	R7 := 75.000000
	41	[8471]	LOADK    	R8 := 90.000000
	42	[8471]	JMP      	47 ; PC := 47
	43	[8472]	LE       	0 K11 R6 ; if 4.000000 > R6 then PC := 47
	44	[8472]	JMP      	47 ; PC := 47
	45	[8473]	LOADK    	R7 := 90.000000
	46	[8474]	LOADK    	R8 := 110.000000
	47	[8477]	GETGLOBAL	R9 K13 ; R9 := 0x5bced4c4
	48	[8477]	GETTABLE 	R9 R9 K14 ; R9 := R9[0xb62ecfe0]
	49	[8477]	GETTABLE 	R10 R5 K12 ; R10 := R5["minEnemyLevel"]
	50	[8477]	MOVE     	R11 R7 ; R11 := R7
	51	[8477]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	52	[8477]	SETTABLE 	R5 K12 R9 ; R5["minEnemyLevel"] := R9
	53	[8478]	GETGLOBAL	R9 K13 ; R9 := 0x5bced4c4
	54	[8478]	GETTABLE 	R9 R9 K14 ; R9 := R9[0xb62ecfe0]
	55	[8478]	GETTABLE 	R10 R5 K15 ; R10 := R5["maxEnemyLevel"]
	56	[8478]	MOVE     	R11 R8 ; R11 := R8
	57	[8478]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	58	[8478]	SETTABLE 	R5 K15 R9 ; R5["maxEnemyLevel"] := R9
	59	[8480]	SETTABLE 	R5 K16 K8 ; R5["difficulty"] := 1.000000
	60	[8483]	GETTABLE 	R9 R5 K17 ; R9 := R5["missionType"]
	61	[8484]	EQ       	0 R9 K18 ; if R9 ~= 8.000000 then PC := 65
	62	[8484]	JMP      	65 ; PC := 65
	63	[8485]	SETTABLE 	R5 K19 K20 ; R5["maxWaveNum"] := 5.000000
	64	[8485]	JMP      	88 ; PC := 88
	65	[8486]	EQ       	0 R9 K21 ; if R9 ~= 13.000000 then PC := 69
	66	[8486]	JMP      	69 ; PC := 69
	67	[8487]	SETTABLE 	R5 K19 K8 ; R5["maxWaveNum"] := 1.000000
	68	[8487]	JMP      	88 ; PC := 88
	69	[8488]	EQ       	0 R9 K9 ; if R9 ~= 2.000000 then PC := 73
	70	[8488]	JMP      	73 ; PC := 73
	71	[8489]	SETTABLE 	R5 K19 K20 ; R5["maxWaveNum"] := 5.000000
	72	[8489]	JMP      	88 ; PC := 88
	73	[8490]	EQ       	0 R9 K22 ; if R9 ~= 17.000000 then PC := 77
	74	[8490]	JMP      	77 ; PC := 77
	75	[8491]	SETTABLE 	R5 K19 K20 ; R5["maxWaveNum"] := 5.000000
	76	[8491]	JMP      	88 ; PC := 88
	77	[8492]	EQ       	0 R9 K23 ; if R9 ~= 7.000000 then PC := 81
	78	[8492]	JMP      	81 ; PC := 81
	79	[8493]	SETTABLE 	R5 K19 K9 ; R5["maxWaveNum"] := 2.000000
	80	[8493]	JMP      	88 ; PC := 88
	81	[8494]	EQ       	0 R9 K11 ; if R9 ~= 4.000000 then PC := 85
	82	[8494]	JMP      	85 ; PC := 85
	83	[8495]	SETTABLE 	R5 K19 K9 ; R5["maxWaveNum"] := 2.000000
	84	[8495]	JMP      	88 ; PC := 88
	85	[8496]	EQ       	0 R9 K24 ; if R9 ~= 32.000000 then PC := 88
	86	[8496]	JMP      	88 ; PC := 88
	87	[8497]	SETTABLE 	R5 K19 K11 ; R5["maxWaveNum"] := 4.000000
	88	[8500]	EQ       	0 R4 K8 ; if R4 ~= 1.000000 then PC := 93
	89	[8500]	JMP      	93 ; PC := 93
	90	[8501]	SELF     	R10 R5 K25 ; R11 := R5; R10 := R5[0x5c0d8c92]
	91	[8501]	GETUPVAL 	R12 U1 ; R12 := U1
	92	[8501]	CALL     	R10 3 1 ; R10(R11,R12)
	93	[8504]	RETURN   	R5 2 ; return R5 
	94	[8505]	RETURN   	R0 1 ; return 

function #387 <?:8507,8509> (8 instructions, 32 bytes at 0000025274F44720)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[8508]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[8508]	MOVE     	R5 R0 ; R5 := R0
	3	[8508]	MOVE     	R6 R1 ; R6 := R1
	4	[8508]	MOVE     	R7 R2 ; R7 := R2
	5	[8508]	MOVE     	R8 R3 ; R8 := R3
	6	[8508]	TAILCALL 	R4 5 0 ; R4,... := R4(R5,R6,R7,R8)
	7	[8508]	RETURN   	R4 0 ; return R4,... 
	8	[8509]	RETURN   	R0 1 ; return 

function #388 <?:8511,8522> (39 instructions, 156 bytes at 0000025274F44810)
1 param, 4 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[8512]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xb61c0fd4]
	2	[8512]	CALL     	R1 2 2 ; R1 := R1(R2)
	3	[8513]	EQ       	1 R1 K2 ; if R1 == 1.000000 then PC := 7
	4	[8513]	JMP      	7 ; PC := 7
	5	[8513]	EQ       	0 R1 K3 ; if R1 ~= 0.000000 then PC := 10
	6	[8513]	JMP      	10 ; PC := 10
	7	[8514]	OP_LOADBOOL	R2 1 0 ; R2 := true
	8	[8514]	RETURN   	R2 2 ; return R2 
	9	[8514]	JMP      	37 ; PC := 37
	10	[8515]	EQ       	0 R1 K4 ; if R1 ~= 3.000000 then PC := 24
	11	[8515]	JMP      	24 ; PC := 24
	12	[8516]	GETGLOBAL	R2 K5 ; R2 := 0x25d99d89
	13	[8516]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x25a6e75e]
	14	[8516]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[8516]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x2fdbb24a]
	16	[8516]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[8516]	LEN      	R2 R2 ; R2 := # R2
	18	[8516]	LT       	1 K3 R2 ; if 0.000000 < R2 then PC := 21
	19	[8516]	JMP      	21 ; PC := 21
	20	[8516]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 21
	21	[8516]	OP_LOADBOOL	R2 1 0 ; R2 := true
	22	[8516]	RETURN   	R2 2 ; return R2 
	23	[8516]	JMP      	37 ; PC := 37
	24	[8517]	EQ       	0 R1 K8 ; if R1 ~= 4.000000 then PC := 37
	25	[8517]	JMP      	37 ; PC := 37
	26	[8518]	GETGLOBAL	R2 K5 ; R2 := 0x25d99d89
	27	[8518]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x25a6e75e]
	28	[8518]	CALL     	R2 2 2 ; R2 := R2(R3)
	29	[8518]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x2fdbb24a]
	30	[8518]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[8518]	LEN      	R2 R2 ; R2 := # R2
	32	[8518]	EQ       	1 R2 K3 ; if R2 == 0.000000 then PC := 35
	33	[8518]	JMP      	35 ; PC := 35
	34	[8518]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 35
	35	[8518]	OP_LOADBOOL	R2 1 0 ; R2 := true
	36	[8518]	RETURN   	R2 2 ; return R2 
	37	[8521]	OP_LOADBOOL	R2 0 0 ; R2 := false
	38	[8521]	RETURN   	R2 2 ; return R2 
	39	[8522]	RETURN   	R0 1 ; return 

function #389 <?:8524,8534> (31 instructions, 124 bytes at 0000025274F44AA0)
2 params, 9 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[8525]	NEWTABLE 	R2 0 6 ; R2 := {}
	2	[8525]	SETTABLE 	R2 K0 K1 ; R2["_uk"] := true
	3	[8525]	SETTABLE 	R2 K2 K1 ; R2["_ru"] := true
	4	[8525]	SETTABLE 	R2 K3 K1 ; R2["_ja"] := true
	5	[8525]	SETTABLE 	R2 K4 K1 ; R2["_zh"] := true
	6	[8525]	SETTABLE 	R2 K5 K1 ; R2["_tc"] := true
	7	[8525]	SETTABLE 	R2 K6 K1 ; R2["_ko"] := true
	8	[8526]	GETGLOBAL	R3 K7 ; R3 := 0x67513231
	9	[8526]	CALL     	R3 1 2 ; R3 := R3()
	10	[8526]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x6d604ba7]
	11	[8526]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[8527]	GETTABLE 	R4 R2 R3 ; R4 := R2[R3]
	13	[8527]	TEST     	R4 0 ; if not R4 then PC := 29
	14	[8527]	JMP      	29 ; PC := 29
	15	[8528]	GETGLOBAL	R4 K9 ; R4 := 0x7b998233
	16	[8528]	MOVE     	R5 R0 ; R5 := R0
	17	[8528]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[8528]	TEST     	R4 1 ; if R4 then PC := 27
	19	[8528]	JMP      	27 ; PC := 27
	20	[8528]	EQ       	1 R1 K10 ; if R1 == nil then PC := 27
	21	[8528]	JMP      	27 ; PC := 27
	22	[8529]	SELF     	R4 R0 K11 ; R5 := R0; R4 := R0[0x67bc869f]
	23	[8529]	MOVE     	R6 R1 ; R6 := R1
	24	[8529]	LOADK    	R7 := 65.000000
	25	[8529]	LOADK    	R8 := 0.000000
	26	[8529]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	27	[8531]	OP_LOADBOOL	R4 0 0 ; R4 := false
	28	[8531]	RETURN   	R4 2 ; return R4 
	29	[8533]	OP_LOADBOOL	R4 1 0 ; R4 := true
	30	[8533]	RETURN   	R4 2 ; return R4 
	31	[8534]	RETURN   	R0 1 ; return 

function #390 <?:8536,8544> (25 instructions, 100 bytes at 0000025274F44D20)
0 params, 3 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[8537]	GETGLOBAL	R0 K0 ; R0 := 0x6c97a788
	2	[8537]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xe20ba977]
	3	[8537]	CALL     	R0 1 2 ; R0 := R0()
	4	[8538]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	5	[8538]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xd3524453]
	6	[8538]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[8538]	SETTABLE 	R0 K2 R1 ; R0["mGiftMode"] := R1
	8	[8539]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	9	[8539]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xbe5313b5]
	10	[8539]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[8539]	SETTABLE 	R0 K5 R1 ; R0["mFriendInvRestriction"] := R1
	12	[8540]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	13	[8540]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x28434616]
	14	[8540]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[8540]	SETTABLE 	R0 K7 R1 ; R0["mGuildInvRestriction"] := R1
	16	[8541]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	17	[8541]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x25b60da6]
	18	[8541]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[8541]	SETTABLE 	R0 K9 R1 ; R0["mShowFriendInvNotifications"] := R1
	20	[8542]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	21	[8542]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0x6e08bd03]
	22	[8542]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[8542]	SETTABLE 	R0 K11 R1 ; R0["mTradingRulesConfirmed"] := R1
	24	[8543]	RETURN   	R0 2 ; return R0 
	25	[8544]	RETURN   	R0 1 ; return 

function #391 <?:8546,8557> (39 instructions, 156 bytes at 0000025274F450E0)
2 params, 11 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[8547]	LOADK    	R2 := 1000.000000
	2	[8548]	GETGLOBAL	R3 K0 ; R3 := 0x25d99d89
	3	[8548]	SELF     	R3 R3 K1 ; R4 := R3; R3 := R3[0x2e37a704]
	4	[8548]	CALL     	R3 2 2 ; R3 := R3(R4)
	5	[8548]	LEN      	R3 R3 ; R3 := # R3
	6	[8549]	LE       	0 R2 R3 ; if R2 > R3 then PC := 37
	7	[8549]	JMP      	37 ; PC := 37
	8	[8550]	GETGLOBAL	R4 K2 ; R4 := 0x603636ad
	9	[8550]	LOADK    	R5 K3 ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendLimitError"
	10	[8550]	NEWTABLE 	R6 0 2 ; R6 := {}
	11	[8550]	SETTABLE 	R6 K4 R3 ; R6["NUM_FRIENDS"] := R3
	12	[8550]	SETTABLE 	R6 K5 R2 ; R6["MAX_FRIENDS"] := R2
	13	[8550]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	14	[8551]	GETGLOBAL	R5 K6 ; R5 := 0x7b998233
	15	[8551]	MOVE     	R6 R0 ; R6 := R0
	16	[8551]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[8551]	TEST     	R5 1 ; if R5 then PC := 31
	18	[8551]	JMP      	31 ; PC := 31
	19	[8551]	LEN      	R5 R1 ; R5 := # R1
	20	[8551]	EQ       	1 R5 K7 ; if R5 == 0.000000 then PC := 31
	21	[8551]	JMP      	31 ; PC := 31
	22	[8551]	SELF     	R5 R0 K8 ; R6 := R0; R5 := R0[0xf56f3887]
	23	[8551]	MOVE     	R7 R1 ; R7 := R1
	24	[8551]	NEWTABLE 	R8 2 0 ; R8 := {}
	25	[8551]	LOADK    	R9 K9 ; R9 := "false"
	26	[8551]	MOVE     	R10 R4 ; R10 := R4
	27	[8551]	SETLIST  	R8 2 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
	28	[8551]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	29	[8551]	TEST     	R5 1 ; if R5 then PC := 35
	30	[8551]	JMP      	35 ; PC := 35
	31	[8552]	GETUPVAL 	R5 U0 ; R5 := U0
	32	[8552]	GETTABLE 	R5 R5 K10 ; R5 := R5[0xe0cba3ca]
	33	[8552]	MOVE     	R6 R4 ; R6 := R4
	34	[8552]	CALL     	R5 2 1 ; R5(R6)
	35	[8554]	OP_LOADBOOL	R5 1 0 ; R5 := true
	36	[8554]	RETURN   	R5 2 ; return R5 
	37	[8556]	OP_LOADBOOL	R5 0 0 ; R5 := false
	38	[8556]	RETURN   	R5 2 ; return R5 
	39	[8557]	RETURN   	R0 1 ; return 

function #392 <?:8559,8561> (6 instructions, 24 bytes at 0000025274F45470)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[8560]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[8560]	MOVE     	R3 R0 ; R3 := R0
	3	[8560]	MOVE     	R4 R1 ; R4 := R1
	4	[8560]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	5	[8560]	RETURN   	R2 0 ; return R2,... 
	6	[8561]	RETURN   	R0 1 ; return 

function #393 <?:8563,8593> (17 instructions, 68 bytes at 0000025274F45560)
2 params, 4 slots, 2 upvalues, 0 locals, 4 constants, 3 functions
	1	[8564]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[8564]	CALL     	R2 1 2 ; R2 := R2()
	3	[8579]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	4	[8579]	MOVE     	R0 R2 ; R0 := R2
	5	[8579]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[8579]	MOVE     	R0 R0 ; R0 := R0
	7	[8579]	MOVE     	R0 R1 ; R0 := R1
	8	[8579]	SETTABLE 	R2 K0 R3 ; R2["UtilOnAddFriend"] := R3
	9	[8585]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	10	[8585]	MOVE     	R0 R0 ; R0 := R0
	11	[8585]	SETTABLE 	R2 K1 R3 ; R2["UtilAddFriendMessage"] := R3
	12	[8591]	CLOSURE  	R3 2 ; R3 := closure(Function #3)
	13	[8591]	MOVE     	R0 R0 ; R0 := R0
	14	[8591]	SETTABLE 	R2 K2 R3 ; R2["UtilAddFriendMessageOSK"] := R3
	15	[8592]	GETTABLE 	R3 R2 K3 ; R3 := R2["mMovie"]
	16	[8592]	RETURN   	R3 2 ; return R3 
	17	[8593]	RETURN   	R0 1 ; return 

function #394 <?:8595,8614> (56 instructions, 224 bytes at 0000025274F45E90)
3 params, 12 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[8596]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[8596]	GETGLOBAL	R4 K1 ; R4 := 0x25d99d89
	3	[8596]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[8596]	TEST     	R3 0 ; if not R3 then PC := 7
	5	[8596]	JMP      	7 ; PC := 7
	6	[8597]	RETURN   	R0 1 ; return 
	7	[8600]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[8600]	MOVE     	R4 R0 ; R4 := R0
	9	[8600]	TESTSET  	R5 R1 1 ; if R1 then PC := 12 else R5 := R1 
	10	[8600]	JMP      	12 ; PC := 12
	11	[8600]	LOADK    	R5 K2 ; R5 := "OnAddFriend"
	12	[8600]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	13	[8601]	GETUPVAL 	R4 U1 ; R4 := U1
	14	[8601]	MOVE     	R5 R3 ; R5 := R3
	15	[8601]	MOVE     	R6 R1 ; R6 := R1
	16	[8601]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	17	[8601]	TEST     	R4 0 ; if not R4 then PC := 20
	18	[8601]	JMP      	20 ; PC := 20
	19	[8602]	RETURN   	R0 1 ; return 
	20	[8605]	GETGLOBAL	R4 K3 ; R4 := 0x34291f5c
	21	[8605]	GETTABLE 	R4 R4 K4 ; R4 := R4[0x9ad21ae9]
	22	[8605]	CALL     	R4 1 2 ; R4 := R4()
	23	[8605]	TEST     	R4 0 ; if not R4 then PC := 34
	24	[8605]	JMP      	34 ; PC := 34
	25	[8607]	SELF     	R4 R3 K5 ; R5 := R3; R4 := R3[0xf56f3887]
	26	[8607]	LOADK    	R6 K6 ; R6 := "UtilAddFriendMessage"
	27	[8607]	NEWTABLE 	R7 3 0 ; R7 := {}
	28	[8607]	LOADK    	R8 K7 ; R8 := ""
	29	[8607]	LOADK    	R9 K7 ; R9 := ""
	30	[8607]	LOADK    	R10 := 4.000000
	31	[8607]	SETLIST  	R7 3 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
	32	[8607]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	33	[8607]	JMP      	56 ; PC := 56
	34	[8608]	LEN      	R4 R2 ; R4 := # R2
	35	[8608]	LT       	0 K8 R4 ; if 0.000000 >= R4 then PC := 46
	36	[8608]	JMP      	46 ; PC := 46
	37	[8610]	SELF     	R4 R3 K5 ; R5 := R3; R4 := R3[0xf56f3887]
	38	[8610]	LOADK    	R6 K6 ; R6 := "UtilAddFriendMessage"
	39	[8610]	NEWTABLE 	R7 3 0 ; R7 := {}
	40	[8610]	MOVE     	R8 R2 ; R8 := R2
	41	[8610]	LOADK    	R9 K7 ; R9 := ""
	42	[8610]	LOADK    	R10 := 4.000000
	43	[8610]	SETLIST  	R7 3 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
	44	[8610]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	45	[8610]	JMP      	56 ; PC := 56
	46	[8612]	GETUPVAL 	R4 U2 ; R4 := U2
	47	[8612]	MOVE     	R5 R3 ; R5 := R3
	48	[8612]	LOADK    	R6 K9 ; R6 := "/Lotus/Language/Menu/Message"
	49	[8612]	LOADK    	R7 K7 ; R7 := ""
	50	[8612]	LOADK    	R8 := 200.000000
	51	[8612]	LOADK    	R9 K6 ; R9 := "UtilAddFriendMessage"
	52	[8612]	LOADK    	R10 K10 ; R10 := "UtilAddFriendMessageOSK"
	53	[8612]	NEWTABLE 	R11 0 1 ; R11 := {}
	54	[8612]	SETTABLE 	R11 K11 K12 ; R11["isMultiline"] := true
	55	[8612]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	56	[8614]	RETURN   	R0 1 ; return 

function #395 <?:8616,8635> (84 instructions, 336 bytes at 0000025274F46220)
0 params, 2 slots, 0 upvalues, 0 locals, 33 constants, 0 functions
	1	[8617]	NEWTABLE 	R0 0 15 ; R0 := {}
	2	[8618]	NEWTABLE 	R1 0 3 ; R1 := {}
	3	[8618]	SETTABLE 	R1 K1 K2 ; R1["Scale"] := 2000.000000
	4	[8618]	SETTABLE 	R1 K3 K4 ; R1["X"] := 40.000000
	5	[8618]	SETTABLE 	R1 K5 K6 ; R1["Y"] := -40.000000
	6	[8618]	SETTABLE 	R0 K0 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilRebels.png"] := R1
	7	[8619]	NEWTABLE 	R1 0 3 ; R1 := {}
	8	[8619]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	9	[8619]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	10	[8619]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	11	[8619]	SETTABLE 	R0 K7 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilJudge.png"] := R1
	12	[8620]	NEWTABLE 	R1 0 4 ; R1 := {}
	13	[8620]	SETTABLE 	R1 K1 K11 ; R1["Scale"] := 1000.000000
	14	[8620]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	15	[8620]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	16	[8620]	SETTABLE 	R1 K12 K13 ; R1["Alpha"] := 8.000000
	17	[8620]	SETTABLE 	R0 K10 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilOracle.png"] := R1
	18	[8621]	NEWTABLE 	R1 0 3 ; R1 := {}
	19	[8621]	SETTABLE 	R1 K1 K15 ; R1["Scale"] := 2400.000000
	20	[8621]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	21	[8621]	SETTABLE 	R1 K5 K16 ; R1["Y"] := 20.000000
	22	[8621]	SETTABLE 	R0 K14 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilBusiness.png"] := R1
	23	[8622]	NEWTABLE 	R1 0 3 ; R1 := {}
	24	[8622]	SETTABLE 	R1 K1 K18 ; R1["Scale"] := 1300.000000
	25	[8622]	SETTABLE 	R1 K3 K19 ; R1["X"] := -50.000000
	26	[8622]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	27	[8622]	SETTABLE 	R0 K17 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilAssassins.png"] := R1
	28	[8623]	NEWTABLE 	R1 0 3 ; R1 := {}
	29	[8623]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	30	[8623]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	31	[8623]	SETTABLE 	R1 K5 K21 ; R1["Y"] := 60.000000
	32	[8623]	SETTABLE 	R0 K20 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilChurch.png"] := R1
	33	[8624]	NEWTABLE 	R1 0 3 ; R1 := {}
	34	[8624]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	35	[8624]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	36	[8624]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	37	[8624]	SETTABLE 	R0 K22 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilEidolonCetusElder.png"] := R1
	38	[8625]	NEWTABLE 	R1 0 4 ; R1 := {}
	39	[8625]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	40	[8625]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	41	[8625]	SETTABLE 	R1 K5 K4 ; R1["Y"] := 40.000000
	42	[8625]	SETTABLE 	R1 K12 K24 ; R1["Alpha"] := 15.000000
	43	[8625]	SETTABLE 	R0 K23 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilEidolonHunter.png"] := R1
	44	[8626]	NEWTABLE 	R1 0 4 ; R1 := {}
	45	[8626]	SETTABLE 	R1 K1 K11 ; R1["Scale"] := 1000.000000
	46	[8626]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	47	[8626]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	48	[8626]	SETTABLE 	R1 K12 K13 ; R1["Alpha"] := 8.000000
	49	[8626]	SETTABLE 	R0 K25 R1 ; R0["/Lotus/Interface/Graphics/Fortuna/FortunaTitleIcon.png"] := R1
	50	[8627]	NEWTABLE 	R1 0 4 ; R1 := {}
	51	[8627]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	52	[8627]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	53	[8627]	SETTABLE 	R1 K5 K4 ; R1["Y"] := 40.000000
	54	[8627]	SETTABLE 	R1 K12 K13 ; R1["Alpha"] := 8.000000
	55	[8627]	SETTABLE 	R0 K26 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionVentKidz.png"] := R1
	56	[8628]	NEWTABLE 	R1 0 4 ; R1 := {}
	57	[8628]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	58	[8628]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	59	[8628]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	60	[8628]	SETTABLE 	R1 K12 K24 ; R1["Alpha"] := 15.000000
	61	[8628]	SETTABLE 	R0 K27 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilSolarisUnited.png"] := R1
	62	[8629]	NEWTABLE 	R1 0 4 ; R1 := {}
	63	[8629]	SETTABLE 	R1 K1 K18 ; R1["Scale"] := 1300.000000
	64	[8629]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	65	[8629]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	66	[8629]	SETTABLE 	R1 K12 K29 ; R1["Alpha"] := 7.000000
	67	[8629]	SETTABLE 	R0 K28 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilConclave.png"] := R1
	68	[8630]	NEWTABLE 	R1 0 3 ; R1 := {}
	69	[8630]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	70	[8630]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	71	[8630]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	72	[8630]	SETTABLE 	R0 K30 R1 ; R0["/Lotus/Interface/Icons/Categories/IconLibrarian256.png"] := R1
	73	[8631]	NEWTABLE 	R1 0 3 ; R1 := {}
	74	[8631]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	75	[8631]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	76	[8631]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	77	[8631]	SETTABLE 	R0 K31 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilEntrati.png"] := R1
	78	[8632]	NEWTABLE 	R1 0 3 ; R1 := {}
	79	[8632]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	80	[8632]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	81	[8632]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	82	[8632]	SETTABLE 	R0 K32 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilNecraloid.png"] := R1
	83	[8634]	RETURN   	R0 2 ; return R0 
	84	[8635]	RETURN   	R0 1 ; return 

function #396 <?:8637,8646> (20 instructions, 80 bytes at 0000025274F46DE0)
1 param, 6 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[8638]	GETGLOBAL	R1 K0 ; R1 := 0x9ba7909f
	2	[8638]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbcfb64ab]
	3	[8638]	GETGLOBAL	R3 K2 ; R3 := 0x0032441c
	4	[8638]	GETTABLE 	R3 R3 K3 ; R3 := R3["UIMovie_TransmissionMovie"]
	5	[8638]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[8639]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	7	[8639]	MOVE     	R3 R1 ; R3 := R1
	8	[8639]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[8639]	TEST     	R2 1 ; if R2 then PC := 15
	10	[8639]	JMP      	15 ; PC := 15
	11	[8640]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xe4162eed]
	12	[8640]	LOADK    	R4 K6 ; R4 := "PreviewClose"
	13	[8640]	LOADK    	R5 K7 ; R5 := "true"
	14	[8640]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	15	[8643]	TEST     	R0 0 ; if not R0 then PC := 20
	16	[8643]	JMP      	20 ; PC := 20
	17	[8644]	GETGLOBAL	R2 K8 ; R2 := _T
	18	[8644]	NEWTABLE 	R3 0 0 ; R3 := {}
	19	[8644]	SETTABLE 	R2 K9 R3 ; R2["QueuedTransmissions"] := R3
	20	[8646]	RETURN   	R0 1 ; return 

function #397 <?:8648,8687> (65 instructions, 260 bytes at 0000025274F47020)
1 param, 8 slots, 0 upvalues, 0 locals, 28 constants, 0 functions
	1	[8649]	LOADK    	R1 K0 ; R1 := ""
	2	[8650]	EQ       	1 R0 K1 ; if R0 == "error" then PC := 64
	3	[8650]	JMP      	64 ; PC := 64
	4	[8651]	GETGLOBAL	R2 K2 ; R2 := 0x34291f5c
	5	[8651]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xa7a2e381]
	6	[8651]	CALL     	R2 1 2 ; R2 := R2()
	7	[8651]	TEST     	R2 0 ; if not R2 then PC := 39
	8	[8651]	JMP      	39 ; PC := 39
	9	[8653]	LOADK    	R2 K0 ; R2 := ""
	10	[8654]	EQ       	0 R0 K4 ; if R0 ~= "firewall" then PC := 14
	11	[8654]	JMP      	14 ; PC := 14
	12	[8655]	LOADK    	R2 K5 ; R2 := "https://kf.qq.com/faq/201107VJry2m201107A3YJvA.html"
	13	[8655]	JMP      	33 ; PC := 33
	14	[8656]	EQ       	0 R0 K6 ; if R0 ~= "dnsfailure" then PC := 18
	15	[8656]	JMP      	18 ; PC := 18
	16	[8657]	LOADK    	R2 K7 ; R2 := "https://kf.qq.com/faq/201107Vb2uiA201107JNBZbq.html"
	17	[8657]	JMP      	33 ; PC := 33
	18	[8658]	EQ       	0 R0 K8 ; if R0 ~= "strictNAT" then PC := 22
	19	[8658]	JMP      	22 ; PC := 22
	20	[8659]	LOADK    	R2 K9 ; R2 := "https://kf.qq.com/faq/201107zmeaQz201107MZv22I.html"
	21	[8659]	JMP      	33 ; PC := 33
	22	[8660]	EQ       	0 R0 K10 ; if R0 ~= "upnpnotdetected" then PC := 26
	23	[8660]	JMP      	26 ; PC := 26
	24	[8661]	LOADK    	R2 K11 ; R2 := "https://kf.qq.com/faq/201107N77bYJ201107VvUzqQ.html"
	25	[8661]	JMP      	33 ; PC := 33
	26	[8662]	EQ       	0 R0 K12 ; if R0 ~= "upnpenabled" then PC := 30
	27	[8662]	JMP      	30 ; PC := 30
	28	[8663]	LOADK    	R2 K13 ; R2 := "https://kf.qq.com/faq/201107b22QBR201107mYR32Q.html"
	29	[8663]	JMP      	33 ; PC := 33
	30	[8664]	EQ       	0 R0 K14 ; if R0 ~= "portinuse" then PC := 33
	31	[8664]	JMP      	33 ; PC := 33
	32	[8665]	LOADK    	R2 K15 ; R2 := "https://wf.qq.com/newsDetail.shtml?tid=13969838"
	33	[8668]	EQ       	0 R2 K0 ; if R2 ~= "" then PC := 64
	34	[8668]	JMP      	64 ; PC := 64
	35	[8669]	LOADK    	R3 K16 ; R3 := "https://warframe.com/zh-hans/"
	36	[8669]	MOVE     	R4 R0 ; R4 := R0
	37	[8669]	CONCAT   	R2 R3 R4 ; R2 := R3 .. R4
	38	[8670]	JMP      	64 ; PC := 64
	39	[8672]	GETGLOBAL	R3 K17 ; R3 := 0x64fb1586
	40	[8672]	GETGLOBAL	R4 K18 ; R4 := 0x67513231
	41	[8672]	CALL     	R4 1 0 ; R4,... := R4()
	42	[8672]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	43	[8673]	SELF     	R4 R3 K19 ; R5 := R3; R4 := R3[0x1a94c9cc]
	44	[8673]	LOADK    	R6 := 2.000000
	45	[8673]	LEN      	R7 R3 ; R7 := # R3
	46	[8673]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	47	[8673]	MOVE     	R3 R4 ; R3 := R4
	48	[8674]	EQ       	0 R3 K20 ; if R3 ~= "pt" then PC := 52
	49	[8674]	JMP      	52 ; PC := 52
	50	[8675]	LOADK    	R3 K21 ; R3 := "pt-br"
	51	[8675]	JMP      	59 ; PC := 59
	52	[8676]	EQ       	0 R3 K22 ; if R3 ~= "zh" then PC := 56
	53	[8676]	JMP      	56 ; PC := 56
	54	[8677]	LOADK    	R3 K23 ; R3 := "zh-hans"
	55	[8677]	JMP      	59 ; PC := 59
	56	[8678]	EQ       	0 R3 K24 ; if R3 ~= "tc" then PC := 59
	57	[8678]	JMP      	59 ; PC := 59
	58	[8679]	LOADK    	R3 K25 ; R3 := "zh-hant"
	59	[8682]	LOADK    	R4 K26 ; R4 := "https://warframe.com/"
	60	[8682]	MOVE     	R5 R3 ; R5 := R3
	61	[8682]	LOADK    	R6 K27 ; R6 := "/"
	62	[8682]	MOVE     	R7 R0 ; R7 := R0
	63	[8682]	CONCAT   	R1 R4 R7 ; R1 := R4 .. R5 .. R6 .. R7
	64	[8686]	RETURN   	R1 2 ; return R1 
	65	[8687]	RETURN   	R0 1 ; return 

function #398 <?:8689,8707> (32 instructions, 128 bytes at 0000025274F47910)
4 params, 9 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[8690]	SELF     	R4 R0 K0 ; R5 := R0; R4 := R0[0x10ba8e3e]
	2	[8690]	CALL     	R4 2 2 ; R4 := R4(R5)
	3	[8690]	TEST     	R4 0 ; if not R4 then PC := 8
	4	[8690]	JMP      	8 ; PC := 8
	5	[8691]	OP_LOADBOOL	R4 1 0 ; R4 := true
	6	[8691]	RETURN   	R4 2 ; return R4 
	7	[8691]	JMP      	32 ; PC := 32
	8	[8693]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x59e42e1b]
	9	[8693]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[8693]	SELF     	R4 R4 K2 ; R5 := R4; R4 := R4[0xc348fceb]
	11	[8693]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[8694]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	13	[8694]	MOVE     	R6 R4 ; R6 := R4
	14	[8694]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[8694]	NOT      	R5 R5 ; R5 := not R5
	16	[8695]	TEST     	R5 0 ; if not R5 then PC := 31
	17	[8695]	JMP      	31 ; PC := 31
	18	[8695]	TEST     	R1 0 ; if not R1 then PC := 31
	19	[8695]	JMP      	31 ; PC := 31
	20	[8696]	TEST     	R2 0 ; if not R2 then PC := 25
	21	[8696]	JMP      	25 ; PC := 25
	22	[8697]	SELF     	R6 R4 K4 ; R7 := R4; R6 := R4[0xf4e253b6]
	23	[8697]	CALL     	R6 2 1 ; R6(R7)
	24	[8697]	JMP      	31 ; PC := 31
	25	[8699]	EQ       	0 R3 K5 ; if R3 ~= nil then PC := 28
	26	[8699]	JMP      	28 ; PC := 28
	27	[8700]	OP_LOADBOOL	R3 0 0 ; R3 := false
	28	[8702]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x32424799]
	29	[8702]	MOVE     	R8 R3 ; R8 := R3
	30	[8702]	CALL     	R6 3 1 ; R6(R7,R8)
	31	[8705]	RETURN   	R5 2 ; return R5 
	32	[8707]	RETURN   	R0 1 ; return 

function #399 <?:8709,8715> (15 instructions, 60 bytes at 0000025274F47B40)
1 param, 4 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[8710]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8710]	MOVE     	R2 R0 ; R2 := R0
	3	[8710]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[8710]	TEST     	R1 1 ; if R1 then PC := 11
	5	[8710]	JMP      	11 ; PC := 11
	6	[8710]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xf2deaf69]
	7	[8710]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[8710]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	9	[8710]	TEST     	R1 0 ; if not R1 then PC := 13
	10	[8710]	JMP      	13 ; PC := 13
	11	[8711]	OP_LOADBOOL	R1 1 0 ; R1 := true
	12	[8711]	RETURN   	R1 2 ; return R1 
	13	[8714]	OP_LOADBOOL	R1 0 0 ; R1 := false
	14	[8714]	RETURN   	R1 2 ; return R1 
	15	[8715]	RETURN   	R0 1 ; return 

function #400 <?:8717,8747> (72 instructions, 288 bytes at 0000025274F47CA0)
0 params, 16 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[8719]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[8719]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xd7d79b74]
	3	[8719]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8720]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	5	[8720]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x78298275]
	6	[8720]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[8721]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[8721]	CALL     	R2 1 4 ; R2,R3,R4 := R2()
	9	[8722]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	10	[8722]	MOVE     	R6 R0 ; R6 := R0
	11	[8722]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[8722]	TEST     	R5 1 ; if R5 then PC := 22
	13	[8722]	JMP      	22 ; PC := 22
	14	[8722]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	15	[8722]	SELF     	R6 R0 K5 ; R7 := R0; R6 := R0[0x973c5b4d]
	16	[8722]	SELF     	R8 R1 K6 ; R9 := R1; R8 := R1[0xe79e7ef4]
	17	[8722]	CALL     	R8 2 0 ; R8,... := R8(R9)
	18	[8722]	CALL     	R6 0 0 ; R6,... := R6(R7,...)
	19	[8722]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	20	[8722]	NOT      	R5 R5 ; R5 := not R5
	21	[8722]	JMP      	24 ; PC := 24
	22	[8722]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 23
	23	[8722]	OP_LOADBOOL	R5 1 0 ; R5 := true
	24	[8723]	TEST     	R5 1 ; if R5 then PC := 31
	25	[8723]	JMP      	31 ; PC := 31
	26	[8723]	GETGLOBAL	R6 K0 ; R6 := 0xbe190284
	27	[8723]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x99f38c13]
	28	[8723]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[8723]	TEST     	R6 0 ; if not R6 then PC := 33
	30	[8723]	JMP      	33 ; PC := 33
	31	[8724]	OP_LOADBOOL	R6 0 0 ; R6 := false
	32	[8724]	RETURN   	R6 2 ; return R6 
	33	[8727]	GETGLOBAL	R6 K4 ; R6 := 0x7b998233
	34	[8727]	GETGLOBAL	R7 K8 ; R7 := 0x25d99d89
	35	[8727]	CALL     	R6 2 2 ; R6 := R6(R7)
	36	[8727]	TEST     	R6 1 ; if R6 then PC := 66
	37	[8727]	JMP      	66 ; PC := 66
	38	[8728]	OP_LOADBOOL	R6 0 0 ; R6 := false
	39	[8729]	GETGLOBAL	R7 K8 ; R7 := 0x25d99d89
	40	[8729]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0x911c6241]
	41	[8729]	OP_LOADBOOL	R9 1 0 ; R9 := true
	42	[8729]	MOVE     	R10 R4 ; R10 := R4
	43	[8729]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	44	[8730]	LOADK    	R8 := 1.000000
	45	[8730]	LEN      	R9 R7 ; R9 := # R7
	46	[8730]	LOADK    	R10 := 1.000000
	47	[8730]	FORPREP  	R8 61 ; R8 -= R10; PC := 61
	48	[8731]	GETTABLE 	R12 R7 R11 ; R12 := R7[R11]
	49	[8732]	GETTABLE 	R13 R12 K10 ; R13 := R12["mName"]
	50	[8732]	EQ       	0 R13 R2 ; if R13 ~= R2 then PC := 61
	51	[8732]	JMP      	61 ; PC := 61
	52	[8733]	GETTABLE 	R13 R7 R11 ; R13 := R7[R11]
	53	[8733]	GETTABLE 	R13 R13 K11 ; R13 := R13["mPlacedDecos"]
	54	[8733]	LEN      	R13 R13 ; R13 := # R13
	55	[8733]	EQ       	0 R13 K12 ; if R13 ~= 0.000000 then PC := 59
	56	[8733]	JMP      	59 ; PC := 59
	57	[8734]	OP_LOADBOOL	R13 0 0 ; R13 := false
	58	[8734]	RETURN   	R13 2 ; return R13 
	59	[8737]	OP_LOADBOOL	R6 1 0 ; R6 := true
	60	[8738]	JMP      	62 ; PC := 62
	61	[8730]	FORLOOP  	R8 48 ; R8 += R10; if R8 <= R9 then begin PC := 48; R11 := R8 end
	62	[8742]	TEST     	R6 1 ; if R6 then PC := 66
	63	[8742]	JMP      	66 ; PC := 66
	64	[8743]	OP_LOADBOOL	R13 0 0 ; R13 := false
	65	[8743]	RETURN   	R13 2 ; return R13 
	66	[8746]	GETGLOBAL	R13 K0 ; R13 := 0xbe190284
	67	[8746]	SELF     	R13 R13 K13 ; R14 := R13; R13 := R13[0xf2deaf69]
	68	[8746]	GETGLOBAL	R15 K14 ; R15 := gLotusConclaveGameRulesType
	69	[8746]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	70	[8746]	NOT      	R13 R13 ; R13 := not R13
	71	[8746]	RETURN   	R13 2 ; return R13 
	72	[8747]	RETURN   	R0 1 ; return 

function #401 <?:8749,8825> (220 instructions, 880 bytes at 0000025274F480D0)
1 param, 28 slots, 1 upvalue, 0 locals, 46 constants, 0 functions
	1	[8750]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8750]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	3	[8750]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[8750]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[8750]	JMP      	8 ; PC := 8
	6	[8751]	LOADK    	R1 K2 ; R1 := ""
	7	[8751]	RETURN   	R1 2 ; return R1 
	8	[8754]	TESTSET  	R1 R0 1 ; if R0 then PC := 13 else R1 := R0 
	9	[8754]	JMP      	13 ; PC := 13
	10	[8754]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	11	[8754]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xef893aec]
	12	[8754]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[8755]	GETTABLE 	R2 R1 K4 ; R2 := R1["location"]
	14	[8756]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	15	[8756]	MOVE     	R4 R2 ; R4 := R2
	16	[8756]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[8757]	MOVE     	R4 R3 ; R4 := R3
	18	[8759]	GETUPVAL 	R5 U0 ; R5 := U0
	19	[8759]	CALL     	R5 1 2 ; R5 := R5()
	20	[8760]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	21	[8760]	MOVE     	R7 R5 ; R7 := R5
	22	[8760]	CALL     	R6 2 2 ; R6 := R6(R7)
	23	[8760]	TEST     	R6 1 ; if R6 then PC := 34
	24	[8760]	JMP      	34 ; PC := 34
	25	[8761]	GETGLOBAL	R6 K6 ; R6 := 0x603636ad
	26	[8761]	SELF     	R7 R5 K7 ; R8 := R5; R7 := R5[0xbf3618ac]
	27	[8761]	MOVE     	R9 R2 ; R9 := R2
	28	[8761]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	29	[8761]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x6d604ba7]
	30	[8761]	CALL     	R7 2 2 ; R7 := R7(R8)
	31	[8761]	OP_LOADBOOL	R8 0 0 ; R8 := false
	32	[8761]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	33	[8761]	MOVE     	R4 R6 ; R4 := R6
	34	[8764]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	35	[8764]	GETGLOBAL	R7 K9 ; R7 := 0x25d99d89
	36	[8764]	CALL     	R6 2 2 ; R6 := R6(R7)
	37	[8764]	TEST     	R6 1 ; if R6 then PC := 144
	38	[8764]	JMP      	144 ; PC := 144
	39	[8765]	GETGLOBAL	R6 K9 ; R6 := 0x25d99d89
	40	[8765]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0x69727e0b]
	41	[8765]	CALL     	R6 2 2 ; R6 := R6(R7)
	42	[8766]	LOADK    	R7 := 1.000000
	43	[8766]	GETTABLE 	R8 R6 K11 ; R8 := R6["mGoals"]
	44	[8766]	LEN      	R8 R8 ; R8 := # R8
	45	[8766]	LOADK    	R9 := 1.000000
	46	[8766]	FORPREP  	R7 114 ; R7 -= R9; PC := 114
	47	[8767]	GETTABLE 	R11 R6 K11 ; R11 := R6["mGoals"]
	48	[8767]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	49	[8768]	GETTABLE 	R12 R11 K12 ; R12 := R11["mId"]
	50	[8768]	GETTABLE 	R12 R12 K12 ; R12 := R12["mId"]
	51	[8768]	GETTABLE 	R13 R1 K13 ; R13 := R1["goalId"]
	52	[8768]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 114
	53	[8768]	JMP      	114 ; PC := 114
	54	[8769]	GETTABLE 	R12 R11 K14 ; R12 := R11["mNode"]
	55	[8769]	EQ       	1 R12 K2 ; if R12 == "" then PC := 67
	56	[8769]	JMP      	67 ; PC := 67
	57	[8769]	GETTABLE 	R12 R11 K14 ; R12 := R11["mNode"]
	58	[8769]	EQ       	0 R12 R3 ; if R12 ~= R3 then PC := 67
	59	[8769]	JMP      	67 ; PC := 67
	60	[8770]	GETGLOBAL	R12 K6 ; R12 := 0x603636ad
	61	[8770]	GETTABLE 	R13 R11 K15 ; R13 := R11["mDesc"]
	62	[8770]	OP_LOADBOOL	R14 0 0 ; R14 := false
	63	[8770]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	64	[8770]	MOVE     	R4 R12 ; R4 := R12
	65	[8771]	JMP      	115 ; PC := 115
	66	[8771]	JMP      	114 ; PC := 114
	67	[8773]	OP_LOADBOOL	R12 0 0 ; R12 := false
	68	[8774]	LOADK    	R13 := 1.000000
	69	[8774]	GETTABLE 	R14 R11 K16 ; R14 := R11["mConcurrentNodes"]
	70	[8774]	LEN      	R14 R14 ; R14 := # R14
	71	[8774]	LOADK    	R15 := 1.000000
	72	[8774]	FORPREP  	R13 110 ; R13 -= R15; PC := 110
	73	[8775]	GETTABLE 	R17 R11 K16 ; R17 := R11["mConcurrentNodes"]
	74	[8775]	GETTABLE 	R17 R17 R16 ; R17 := R17[R16]
	75	[8775]	EQ       	1 R17 K2 ; if R17 == "" then PC := 110
	76	[8775]	JMP      	110 ; PC := 110
	77	[8775]	GETTABLE 	R17 R11 K16 ; R17 := R11["mConcurrentNodes"]
	78	[8775]	GETTABLE 	R17 R17 R16 ; R17 := R17[R16]
	79	[8775]	EQ       	0 R17 R3 ; if R17 ~= R3 then PC := 110
	80	[8775]	JMP      	110 ; PC := 110
	81	[8776]	GETGLOBAL	R17 K6 ; R17 := 0x603636ad
	82	[8776]	GETTABLE 	R18 R11 K15 ; R18 := R11["mDesc"]
	83	[8776]	OP_LOADBOOL	R19 0 0 ; R19 := false
	84	[8776]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	85	[8776]	MOVE     	R4 R17 ; R4 := R17
	86	[8777]	GETTABLE 	R17 R11 K17 ; R17 := R11["mConcurrentNodeReqs"]
	87	[8777]	LEN      	R17 R17 ; R17 := # R17
	88	[8777]	LE       	0 R16 R17 ; if R16 > R17 then PC := 108
	89	[8777]	JMP      	108 ; PC := 108
	90	[8777]	GETTABLE 	R17 R11 K17 ; R17 := R11["mConcurrentNodeReqs"]
	91	[8777]	GETTABLE 	R17 R17 R16 ; R17 := R17[R16]
	92	[8777]	GETTABLE 	R18 R11 K18 ; R18 := R11["mGoal"]
	93	[8777]	LE       	0 R18 R17 ; if R18 > R17 then PC := 108
	94	[8777]	JMP      	108 ; PC := 108
	95	[8777]	GETTABLE 	R17 R11 K19 ; R17 := R11["mTag"]
	96	[8777]	GETGLOBAL	R18 K20 ; R18 := 0x0469f296
	97	[8777]	LOADK    	R19 K21 ; R19 := "WaterFight"
	98	[8777]	CALL     	R18 2 2 ; R18 := R18(R19)
	99	[8777]	EQ       	1 R17 R18 ; if R17 == R18 then PC := 108
	100	[8777]	JMP      	108 ; PC := 108
	101	[8778]	MOVE     	R17 R4 ; R17 := R4
	102	[8778]	LOADK    	R18 K22 ; R18 := " "
	103	[8778]	GETGLOBAL	R19 K6 ; R19 := 0x603636ad
	104	[8778]	LOADK    	R20 K23 ; R20 := "/Lotus/Language/Menu/WorldStateChallengeMode"
	105	[8778]	OP_LOADBOOL	R21 0 0 ; R21 := false
	106	[8778]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	107	[8778]	CONCAT   	R4 R17 R19 ; R4 := R17 .. R18 .. R19
	108	[8780]	OP_LOADBOOL	R12 1 0 ; R12 := true
	109	[8781]	JMP      	111 ; PC := 111
	110	[8774]	FORLOOP  	R13 73 ; R13 += R15; if R13 <= R14 then begin PC := 73; R16 := R13 end
	111	[8784]	TEST     	R12 0 ; if not R12 then PC := 114
	112	[8784]	JMP      	114 ; PC := 114
	113	[8785]	JMP      	115 ; PC := 115
	114	[8766]	FORLOOP  	R7 47 ; R7 += R9; if R7 <= R8 then begin PC := 47; R10 := R7 end
	115	[8791]	GETTABLE 	R17 R1 K24 ; R17 := R1["alertId"]
	116	[8791]	EQ       	1 R17 K2 ; if R17 == "" then PC := 144
	117	[8791]	JMP      	144 ; PC := 144
	118	[8792]	LOADK    	R17 := 1.000000
	119	[8792]	GETTABLE 	R18 R6 K25 ; R18 := R6["mAlerts"]
	120	[8792]	LEN      	R18 R18 ; R18 := # R18
	121	[8792]	LOADK    	R19 := 1.000000
	122	[8792]	FORPREP  	R17 143 ; R17 -= R19; PC := 143
	123	[8793]	GETTABLE 	R21 R6 K25 ; R21 := R6["mAlerts"]
	124	[8793]	GETTABLE 	R21 R21 R20 ; R21 := R21[R20]
	125	[8794]	GETTABLE 	R22 R21 K12 ; R22 := R21["mId"]
	126	[8794]	GETTABLE 	R22 R22 K12 ; R22 := R22["mId"]
	127	[8794]	GETTABLE 	R23 R1 K24 ; R23 := R1["alertId"]
	128	[8794]	EQ       	0 R22 R23 ; if R22 ~= R23 then PC := 144
	129	[8794]	JMP      	144 ; PC := 144
	130	[8794]	GETTABLE 	R22 R21 K19 ; R22 := R21["mTag"]
	131	[8794]	GETGLOBAL	R23 K26 ; R23 := EMPTY_SYMBOL
	132	[8794]	EQ       	1 R22 R23 ; if R22 == R23 then PC := 144
	133	[8794]	JMP      	144 ; PC := 144
	134	[8795]	GETGLOBAL	R22 K6 ; R22 := 0x603636ad
	135	[8795]	GETGLOBAL	R23 K5 ; R23 := 0x64fb1586
	136	[8795]	GETTABLE 	R24 R21 K27 ; R24 := R21["mMissionInfo"]
	137	[8795]	GETTABLE 	R24 R24 K28 ; R24 := R24["descText"]
	138	[8795]	CALL     	R23 2 2 ; R23 := R23(R24)
	139	[8795]	OP_LOADBOOL	R24 0 0 ; R24 := false
	140	[8795]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	141	[8795]	MOVE     	R4 R22 ; R4 := R22
	142	[8797]	JMP      	144 ; PC := 144
	143	[8792]	FORLOOP  	R17 123 ; R17 += R19; if R17 <= R18 then begin PC := 123; R20 := R17 end
	144	[8802]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	145	[8802]	GETTABLE 	R23 R1 K29 ; R23 := R1["keyChainName"]
	146	[8802]	CALL     	R22 2 2 ; R22 := R22(R23)
	147	[8802]	TEST     	R22 0 ; if not R22 then PC := 151
	148	[8802]	JMP      	151 ; PC := 151
	149	[8802]	EQ       	0 R4 K2 ; if R4 ~= "" then PC := 167
	150	[8802]	JMP      	167 ; PC := 167
	151	[8803]	GETGLOBAL	R22 K30 ; R22 := 0xb009bbc6
	152	[8803]	GETTABLE 	R23 R1 K31 ; R23 := R1["levelKeyName"]
	153	[8803]	CALL     	R22 2 2 ; R22 := R22(R23)
	154	[8804]	GETGLOBAL	R23 K0 ; R23 := 0x7b998233
	155	[8804]	MOVE     	R24 R22 ; R24 := R22
	156	[8804]	CALL     	R23 2 2 ; R23 := R23(R24)
	157	[8804]	TEST     	R23 1 ; if R23 then PC := 167
	158	[8804]	JMP      	167 ; PC := 167
	159	[8805]	SELF     	R23 R22 K32 ; R24 := R22; R23 := R22[0xd3a9d01f]
	160	[8805]	CALL     	R23 2 2 ; R23 := R23(R24)
	161	[8806]	GETGLOBAL	R24 K6 ; R24 := 0x603636ad
	162	[8806]	SELF     	R25 R23 K8 ; R26 := R23; R25 := R23[0x6d604ba7]
	163	[8806]	CALL     	R25 2 2 ; R25 := R25(R26)
	164	[8806]	OP_LOADBOOL	R26 0 0 ; R26 := false
	165	[8806]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	166	[8806]	MOVE     	R4 R24 ; R4 := R24
	167	[8810]	EQ       	0 R4 K2 ; if R4 ~= "" then PC := 202
	168	[8810]	JMP      	202 ; PC := 202
	169	[8810]	GETGLOBAL	R24 K0 ; R24 := 0x7b998233
	170	[8810]	GETTABLE 	R25 R1 K33 ; R25 := R1["levelOverride"]
	171	[8810]	CALL     	R24 2 2 ; R24 := R24(R25)
	172	[8810]	TEST     	R24 1 ; if R24 then PC := 202
	173	[8810]	JMP      	202 ; PC := 202
	174	[8812]	GETTABLE 	R24 R1 K33 ; R24 := R1["levelOverride"]
	175	[8812]	SELF     	R24 R24 K34 ; R25 := R24; R24 := R24[0xed4e0128]
	176	[8812]	CALL     	R24 2 2 ; R24 := R24(R25)
	177	[8813]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	178	[8813]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	179	[8813]	MOVE     	R26 R24 ; R26 := R24
	180	[8813]	LOADK    	R27 K37 ; R27 := "Derelict"
	181	[8813]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	182	[8813]	TEST     	R25 0 ; if not R25 then PC := 190
	183	[8813]	JMP      	190 ; PC := 190
	184	[8814]	GETGLOBAL	R25 K6 ; R25 := 0x603636ad
	185	[8814]	LOADK    	R26 K38 ; R26 := "/Lotus/Language/Locations/Derelict"
	186	[8814]	OP_LOADBOOL	R27 0 0 ; R27 := false
	187	[8814]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	188	[8814]	MOVE     	R4 R25 ; R4 := R25
	189	[8814]	JMP      	202 ; PC := 202
	190	[8815]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	191	[8815]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	192	[8815]	MOVE     	R26 R24 ; R26 := R24
	193	[8815]	LOADK    	R27 K39 ; R27 := "OrokinTower"
	194	[8815]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	195	[8815]	TEST     	R25 0 ; if not R25 then PC := 202
	196	[8815]	JMP      	202 ; PC := 202
	197	[8816]	GETGLOBAL	R25 K6 ; R25 := 0x603636ad
	198	[8816]	LOADK    	R26 K40 ; R26 := "/Lotus/Language/Locations/Void"
	199	[8816]	OP_LOADBOOL	R27 0 0 ; R27 := false
	200	[8816]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	201	[8816]	MOVE     	R4 R25 ; R4 := R25
	202	[8820]	GETGLOBAL	R25 K1 ; R25 := 0xbe190284
	203	[8820]	SELF     	R25 R25 K41 ; R26 := R25; R25 := R25[0xf2deaf69]
	204	[8820]	GETGLOBAL	R27 K42 ; R27 := gLotusBaseGameRulesType
	205	[8820]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	206	[8820]	TEST     	R25 0 ; if not R25 then PC := 219
	207	[8820]	JMP      	219 ; PC := 219
	208	[8820]	GETGLOBAL	R25 K1 ; R25 := 0xbe190284
	209	[8820]	SELF     	R25 R25 K43 ; R26 := R25; R25 := R25[0x71595d3a]
	210	[8820]	CALL     	R25 2 2 ; R25 := R25(R26)
	211	[8820]	TEST     	R25 0 ; if not R25 then PC := 219
	212	[8820]	JMP      	219 ; PC := 219
	213	[8821]	GETGLOBAL	R25 K6 ; R25 := 0x603636ad
	214	[8821]	LOADK    	R26 K44 ; R26 := "/Lotus/Language/Game/MissionName_Badlands"
	215	[8821]	NEWTABLE 	R27 0 1 ; R27 := {}
	216	[8821]	SETTABLE 	R27 K45 R4 ; R27["MISSION_NAME"] := R4
	217	[8821]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	218	[8821]	MOVE     	R4 R25 ; R4 := R25
	219	[8824]	RETURN   	R4 2 ; return R4 
	220	[8825]	RETURN   	R0 1 ; return 

function #402 <?:8827,8847> (50 instructions, 200 bytes at 0000025274F48E10)
0 params, 6 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[8828]	GETGLOBAL	R0 K0 ; R0 := 0x0469f296
	2	[8828]	LOADK    	R1 K1 ; R1 := "TeshinHardModeUnlocked"
	3	[8828]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8830]	OP_LOADBOOL	R1 0 0 ; R1 := false
	5	[8830]	TEST     	R1 0 ; if not R1 then PC := 12
	6	[8830]	JMP      	12 ; PC := 12
	7	[8830]	OP_LOADBOOL	R1 0 0 ; R1 := false
	8	[8830]	TEST     	R1 0 ; if not R1 then PC := 12
	9	[8830]	JMP      	12 ; PC := 12
	10	[8831]	OP_LOADBOOL	R1 1 0 ; R1 := true
	11	[8831]	RETURN   	R1 2 ; return R1 
	12	[8834]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	13	[8834]	GETGLOBAL	R2 K3 ; R2 := 0x25d99d89
	14	[8834]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[8834]	TEST     	R1 1 ; if R1 then PC := 23
	16	[8834]	JMP      	23 ; PC := 23
	17	[8835]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	18	[8835]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x21a1810f]
	19	[8835]	MOVE     	R3 R0 ; R3 := R0
	20	[8835]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	21	[8835]	RETURN   	R1 2 ; return R1 
	22	[8835]	JMP      	48 ; PC := 48
	23	[8836]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	24	[8836]	GETGLOBAL	R2 K5 ; R2 := 0x76ea806b
	25	[8836]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[8836]	TEST     	R1 1 ; if R1 then PC := 48
	27	[8836]	JMP      	48 ; PC := 48
	28	[8837]	GETGLOBAL	R1 K5 ; R1 := 0x76ea806b
	29	[8837]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x3f3ae64c]
	30	[8837]	LOADK    	R3 := 0.000000
	31	[8837]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	32	[8838]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	33	[8838]	MOVE     	R3 R1 ; R3 := R1
	34	[8838]	CALL     	R2 2 2 ; R2 := R2(R3)
	35	[8838]	TEST     	R2 1 ; if R2 then PC := 48
	36	[8838]	JMP      	48 ; PC := 48
	37	[8839]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0x80563238]
	38	[8839]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[8840]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	40	[8840]	MOVE     	R4 R2 ; R4 := R2
	41	[8840]	CALL     	R3 2 2 ; R3 := R3(R4)
	42	[8840]	TEST     	R3 1 ; if R3 then PC := 48
	43	[8840]	JMP      	48 ; PC := 48
	44	[8841]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x21a1810f]
	45	[8841]	MOVE     	R5 R0 ; R5 := R0
	46	[8841]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	47	[8841]	RETURN   	R3 2 ; return R3 
	48	[8846]	OP_LOADBOOL	R3 0 0 ; R3 := false
	49	[8846]	RETURN   	R3 2 ; return R3 
	50	[8847]	RETURN   	R0 1 ; return 

function #403 <?:8850,8877> (59 instructions, 236 bytes at 0000025274F49130)
3 params, 14 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[8851]	GETGLOBAL	R3 K0 ; R3 := 0xce225efa
	2	[8851]	LOADK    	R4 := 0.000000
	3	[8851]	CALL     	R3 2 1 ; R3(R4)
	4	[8852]	TEST     	R2 0 ; if not R2 then PC := 13
	5	[8852]	JMP      	13 ; PC := 13
	6	[8853]	GETGLOBAL	R3 K1 ; R3 := 0x3d106989
	7	[8853]	LOADK    	R4 K2 ; R4 := "GetRegionSectorForNode "
	8	[8853]	GETGLOBAL	R5 K3 ; R5 := 0x64fb1586
	9	[8853]	MOVE     	R6 R1 ; R6 := R1
	10	[8853]	CALL     	R5 2 2 ; R5 := R5(R6)
	11	[8853]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	12	[8853]	CALL     	R3 2 1 ; R3(R4)
	13	[8856]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	14	[8856]	MOVE     	R4 R0 ; R4 := R0
	15	[8856]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[8856]	TEST     	R3 1 ; if R3 then PC := 20
	17	[8856]	JMP      	20 ; PC := 20
	18	[8856]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 22
	19	[8856]	JMP      	22 ; PC := 22
	20	[8857]	LOADNIL  	R3 R4 ; R3 := R4 := nil
	21	[8857]	RETURN   	R3 3 ; return R3, R4 
	22	[8860]	SELF     	R3 R0 K6 ; R4 := R0; R3 := R0[0x5484bf3c]
	23	[8860]	MOVE     	R5 R1 ; R5 := R1
	24	[8860]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	25	[8861]	TEST     	R3 0 ; if not R3 then PC := 57
	26	[8861]	JMP      	57 ; PC := 57
	27	[8862]	LOADK    	R4 := 1.000000
	28	[8862]	GETTABLE 	R5 R3 K7 ; R5 := R3["sectors"]
	29	[8862]	LEN      	R5 R5 ; R5 := # R5
	30	[8862]	LOADK    	R6 := 1.000000
	31	[8862]	FORPREP  	R4 56 ; R4 -= R6; PC := 56
	32	[8863]	GETTABLE 	R8 R3 K7 ; R8 := R3["sectors"]
	33	[8863]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	34	[8864]	GETTABLE 	R9 R8 K8 ; R9 := R8["name"]
	35	[8864]	EQ       	0 R9 R1 ; if R9 ~= R1 then PC := 56
	36	[8864]	JMP      	56 ; PC := 56
	37	[8865]	SELF     	R9 R0 K9 ; R10 := R0; R9 := R0[0xc18bf6f0]
	38	[8865]	GETTABLE 	R11 R8 K8 ; R11 := R8["name"]
	39	[8865]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	40	[8866]	TEST     	R2 0 ; if not R2 then PC := 52
	41	[8866]	JMP      	52 ; PC := 52
	42	[8867]	GETGLOBAL	R10 K1 ; R10 := 0x3d106989
	43	[8867]	LOADK    	R11 K10 ; R11 := "Found sector mission"
	44	[8867]	CALL     	R10 2 1 ; R10(R11)
	45	[8868]	GETGLOBAL	R10 K1 ; R10 := 0x3d106989
	46	[8868]	LOADK    	R11 K11 ; R11 := "Unique name: "
	47	[8868]	GETGLOBAL	R12 K3 ; R12 := 0x64fb1586
	48	[8868]	GETTABLE 	R13 R9 K12 ; R13 := R9["uniqueName"]
	49	[8868]	CALL     	R12 2 2 ; R12 := R12(R13)
	50	[8868]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	51	[8868]	CALL     	R10 2 1 ; R10(R11)
	52	[8871]	MOVE     	R10 R3 ; R10 := R3
	53	[8871]	MOVE     	R11 R8 ; R11 := R8
	54	[8871]	MOVE     	R12 R9 ; R12 := R9
	55	[8871]	RETURN   	R10 4 ; return R10, R11, R12 
	56	[8862]	FORLOOP  	R4 32 ; R4 += R6; if R4 <= R5 then begin PC := 32; R7 := R4 end
	57	[8876]	LOADNIL  	R10 R11 ; R10 := R11 := nil
	58	[8876]	RETURN   	R10 3 ; return R10, R11 
	59	[8877]	RETURN   	R0 1 ; return 

function #404 <?:8879,9256> (1148 instructions, 4592 bytes at 0000025274F49560)
3 params, 77 slots, 6 upvalues, 0 locals, 172 constants, 0 functions
	1	[8880]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[8880]	MOVE     	R4 R1 ; R4 := R1
	3	[8880]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[8880]	TEST     	R3 1 ; if R3 then PC := 1146
	5	[8880]	JMP      	1146 ; PC := 1146
	6	[8880]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	7	[8880]	GETTABLE 	R4 R1 K1 ; R4 := R1["name"]
	8	[8880]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[8880]	TEST     	R3 1 ; if R3 then PC := 1146
	10	[8880]	JMP      	1146 ; PC := 1146
	11	[8881]	GETGLOBAL	R3 K2 ; R3 := 0x64fb1586
	12	[8881]	GETTABLE 	R4 R1 K1 ; R4 := R1["name"]
	13	[8881]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[8882]	GETTABLE 	R4 R1 K3 ; R4 := R1["baseNodeName"]
	15	[8883]	GETTABLE 	R5 R1 K4 ; R5 := R1["hubMission"]
	16	[8883]	TEST     	R5 0 ; if not R5 then PC := 37
	17	[8883]	JMP      	37 ; PC := 37
	18	[8884]	GETTABLE 	R5 R1 K4 ; R5 := R1["hubMission"]
	19	[8885]	GETGLOBAL	R6 K5 ; R6 := 0x7f5022cf
	20	[8885]	GETTABLE 	R6 R6 K6 ; R6 := R6[0xa5c556b9]
	21	[8885]	MOVE     	R7 R5 ; R7 := R5
	22	[8885]	GETGLOBAL	R8 K7 ; R8 := HARD_MODE_TAG
	23	[8885]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	24	[8886]	EQ       	1 R6 K8 ; if R6 == nil then PC := 33
	25	[8886]	JMP      	33 ; PC := 33
	26	[8887]	GETGLOBAL	R7 K5 ; R7 := 0x7f5022cf
	27	[8887]	GETTABLE 	R7 R7 K9 ; R7 := R7[0x1a94c9cc]
	28	[8887]	MOVE     	R8 R5 ; R8 := R5
	29	[8887]	LOADK    	R9 := 1.000000
	30	[8887]	SUB      	R10 R6 K10 ; R10 := R6 - 1.000000
	31	[8887]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	32	[8887]	MOVE     	R5 R7 ; R5 := R7
	33	[8889]	GETGLOBAL	R7 K11 ; R7 := 0x0469f296
	34	[8889]	MOVE     	R8 R5 ; R8 := R5
	35	[8889]	CALL     	R7 2 2 ; R7 := R7(R8)
	36	[8889]	MOVE     	R4 R7 ; R4 := R7
	37	[8891]	GETUPVAL 	R7 U0 ; R7 := U0
	38	[8891]	MOVE     	R8 R0 ; R8 := R0
	39	[8891]	MOVE     	R9 R4 ; R9 := R4
	40	[8891]	MOVE     	R10 R2 ; R10 := R2
	41	[8891]	CALL     	R7 4 4 ; R7,R8,R9 := R7(R8,R9,R10)
	42	[8893]	LOADNIL  	R10 R13 ; R10 := R11 := R12 := R13 := nil
	43	[8897]	OP_LOADBOOL	R14 0 0 ; R14 := false
	44	[8898]	OP_LOADBOOL	R15 0 0 ; R15 := false
	45	[8899]	OP_LOADBOOL	R16 0 0 ; R16 := false
	46	[8901]	TEST     	R8 0 ; if not R8 then PC := 957
	47	[8901]	JMP      	957 ; PC := 957
	48	[8902]	TEST     	R2 0 ; if not R2 then PC := 62
	49	[8902]	JMP      	62 ; PC := 62
	50	[8903]	GETGLOBAL	R17 K12 ; R17 := 0x3d106989
	51	[8903]	LOADK    	R18 K13 ; R18 := "Sector: "
	52	[8903]	GETGLOBAL	R19 K2 ; R19 := 0x64fb1586
	53	[8903]	GETTABLE 	R20 R8 K1 ; R20 := R8["name"]
	54	[8903]	CALL     	R19 2 2 ; R19 := R19(R20)
	55	[8903]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	56	[8903]	CALL     	R17 2 1 ; R17(R18)
	57	[8904]	GETGLOBAL	R17 K12 ; R17 := 0x3d106989
	58	[8904]	LOADK    	R18 K14 ; R18 := "Pending mission: "
	59	[8904]	MOVE     	R19 R3 ; R19 := R3
	60	[8904]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	61	[8904]	CALL     	R17 2 1 ; R17(R18)
	62	[8907]	GETGLOBAL	R17 K5 ; R17 := 0x7f5022cf
	63	[8907]	GETTABLE 	R17 R17 K6 ; R17 := R17[0xa5c556b9]
	64	[8907]	MOVE     	R18 R3 ; R18 := R3
	65	[8907]	GETGLOBAL	R19 K15 ; R19 := ALERT_TAG
	66	[8907]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	67	[8907]	TEST     	R17 0 ; if not R17 then PC := 130
	68	[8907]	JMP      	130 ; PC := 130
	69	[8908]	GETGLOBAL	R17 K16 ; R17 := _T
	70	[8908]	GETTABLE 	R17 R17 K17 ; R17 := R17["CachedAlerts"]
	71	[8908]	TEST     	R17 0 ; if not R17 then PC := 782
	72	[8908]	JMP      	782 ; PC := 782
	73	[8910]	GETGLOBAL	R17 K16 ; R17 := _T
	74	[8910]	GETTABLE 	R17 R17 K17 ; R17 := R17["CachedAlerts"]
	75	[8910]	GETGLOBAL	R18 K2 ; R18 := 0x64fb1586
	76	[8910]	GETTABLE 	R19 R1 K3 ; R19 := R1["baseNodeName"]
	77	[8910]	CALL     	R18 2 2 ; R18 := R18(R19)
	78	[8910]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	79	[8911]	TEST     	R17 0 ; if not R17 then PC := 782
	80	[8911]	JMP      	782 ; PC := 782
	81	[8912]	GETTABLE 	R18 R17 K18 ; R18 := R17["mAlertInfo"]
	82	[8912]	GETTABLE 	R10 R18 K19 ; R10 := R18["mMissionInfo"]
	83	[8913]	GETTABLE 	R18 R17 K18 ; R18 := R17["mAlertInfo"]
	84	[8913]	GETTABLE 	R18 R18 K21 ; R18 := R18["mId"]
	85	[8913]	GETTABLE 	R18 R18 K21 ; R18 := R18["mId"]
	86	[8913]	SETTABLE 	R10 K20 R18 ; R10["alertId"] := R18
	87	[8914]	GETGLOBAL	R18 K22 ; R18 := 0x603636ad
	88	[8914]	LOADK    	R19 K23 ; R19 := "/Lotus/Language/Menu/Notification_Alert"
	89	[8914]	LOADNIL  	R20 R20 ; R20 := nil
	90	[8914]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	91	[8914]	MOVE     	R12 R18 ; R12 := R18
	92	[8916]	GETGLOBAL	R18 K2 ; R18 := 0x64fb1586
	93	[8916]	GETTABLE 	R19 R1 K3 ; R19 := R1["baseNodeName"]
	94	[8916]	CALL     	R18 2 2 ; R18 := R18(R19)
	95	[8917]	GETGLOBAL	R19 K16 ; R19 := _T
	96	[8917]	GETTABLE 	R19 R19 K17 ; R19 := R19["CachedAlerts"]
	97	[8917]	GETTABLE 	R19 R19 R18 ; R19 := R19[R18]
	98	[8917]	TEST     	R19 0 ; if not R19 then PC := 782
	99	[8917]	JMP      	782 ; PC := 782
	100	[8917]	GETGLOBAL	R19 K16 ; R19 := _T
	101	[8917]	GETTABLE 	R19 R19 K17 ; R19 := R19["CachedAlerts"]
	102	[8917]	GETTABLE 	R19 R19 R18 ; R19 := R19[R18]
	103	[8917]	GETTABLE 	R19 R19 K18 ; R19 := R19["mAlertInfo"]
	104	[8917]	GETTABLE 	R19 R19 K24 ; R19 := R19["mTag"]
	105	[8917]	GETGLOBAL	R20 K25 ; R20 := EMPTY_SYMBOL
	106	[8917]	EQ       	1 R19 R20 ; if R19 == R20 then PC := 782
	107	[8917]	JMP      	782 ; PC := 782
	108	[8917]	GETGLOBAL	R19 K16 ; R19 := _T
	109	[8917]	GETTABLE 	R19 R19 K17 ; R19 := R19["CachedAlerts"]
	110	[8917]	GETTABLE 	R19 R19 R18 ; R19 := R19[R18]
	111	[8917]	GETTABLE 	R19 R19 K18 ; R19 := R19["mAlertInfo"]
	112	[8917]	GETTABLE 	R19 R19 K19 ; R19 := R19["mMissionInfo"]
	113	[8917]	GETTABLE 	R19 R19 K26 ; R19 := R19["descText"]
	114	[8917]	GETGLOBAL	R20 K25 ; R20 := EMPTY_SYMBOL
	115	[8917]	EQ       	1 R19 R20 ; if R19 == R20 then PC := 782
	116	[8917]	JMP      	782 ; PC := 782
	117	[8918]	GETGLOBAL	R19 K22 ; R19 := 0x603636ad
	118	[8918]	GETGLOBAL	R20 K2 ; R20 := 0x64fb1586
	119	[8918]	GETGLOBAL	R21 K16 ; R21 := _T
	120	[8918]	GETTABLE 	R21 R21 K17 ; R21 := R21["CachedAlerts"]
	121	[8918]	GETTABLE 	R21 R21 R18 ; R21 := R21[R18]
	122	[8918]	GETTABLE 	R21 R21 K18 ; R21 := R21["mAlertInfo"]
	123	[8918]	GETTABLE 	R21 R21 K19 ; R21 := R21["mMissionInfo"]
	124	[8918]	GETTABLE 	R21 R21 K26 ; R21 := R21["descText"]
	125	[8918]	CALL     	R20 2 2 ; R20 := R20(R21)
	126	[8918]	OP_LOADBOOL	R21 0 0 ; R21 := false
	127	[8918]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	128	[8918]	MOVE     	R11 R19 ; R11 := R19
	129	[8921]	JMP      	782 ; PC := 782
	130	[8922]	GETGLOBAL	R19 K5 ; R19 := 0x7f5022cf
	131	[8922]	GETTABLE 	R19 R19 K6 ; R19 := R19[0xa5c556b9]
	132	[8922]	MOVE     	R20 R3 ; R20 := R3
	133	[8922]	GETGLOBAL	R21 K27 ; R21 := EVENT_TAG
	134	[8922]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	135	[8922]	TEST     	R19 0 ; if not R19 then PC := 213
	136	[8922]	JMP      	213 ; PC := 213
	137	[8923]	GETGLOBAL	R19 K28 ; R19 := 0x0032441c
	138	[8923]	GETTABLE 	R19 R19 K29 ; R19 := R19["CachedGoalInfo"]
	139	[8923]	TEST     	R19 0 ; if not R19 then PC := 782
	140	[8923]	JMP      	782 ; PC := 782
	141	[8924]	GETGLOBAL	R19 K28 ; R19 := 0x0032441c
	142	[8924]	GETTABLE 	R19 R19 K29 ; R19 := R19["CachedGoalInfo"]
	143	[8924]	GETGLOBAL	R20 K2 ; R20 := 0x64fb1586
	144	[8924]	GETTABLE 	R21 R1 K3 ; R21 := R1["baseNodeName"]
	145	[8924]	CALL     	R20 2 2 ; R20 := R20(R21)
	146	[8924]	GETTABLE 	R19 R19 R20 ; R19 := R19[R20]
	147	[8925]	EQ       	0 R19 K8 ; if R19 ~= nil then PC := 171
	148	[8925]	JMP      	171 ; PC := 171
	149	[8925]	GETGLOBAL	R20 K16 ; R20 := _T
	150	[8925]	GETTABLE 	R20 R20 K30 ; R20 := R20["LockedGoalList"]
	151	[8925]	EQ       	1 R20 K8 ; if R20 == nil then PC := 171
	152	[8925]	JMP      	171 ; PC := 171
	153	[8925]	GETGLOBAL	R20 K16 ; R20 := _T
	154	[8925]	GETTABLE 	R20 R20 K30 ; R20 := R20["LockedGoalList"]
	155	[8925]	GETGLOBAL	R21 K2 ; R21 := 0x64fb1586
	156	[8925]	GETTABLE 	R22 R1 K3 ; R22 := R1["baseNodeName"]
	157	[8925]	CALL     	R21 2 2 ; R21 := R21(R22)
	158	[8925]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	159	[8925]	TEST     	R20 0 ; if not R20 then PC := 171
	160	[8925]	JMP      	171 ; PC := 171
	161	[8925]	GETGLOBAL	R20 K16 ; R20 := _T
	162	[8925]	GETTABLE 	R20 R20 K31 ; R20 := R20["LockedGoalMissionInfo"]
	163	[8925]	EQ       	1 R20 K8 ; if R20 == nil then PC := 171
	164	[8925]	JMP      	171 ; PC := 171
	165	[8926]	GETGLOBAL	R20 K16 ; R20 := _T
	166	[8926]	GETTABLE 	R20 R20 K31 ; R20 := R20["LockedGoalMissionInfo"]
	167	[8926]	GETGLOBAL	R21 K2 ; R21 := 0x64fb1586
	168	[8926]	GETTABLE 	R22 R1 K3 ; R22 := R1["baseNodeName"]
	169	[8926]	CALL     	R21 2 2 ; R21 := R21(R22)
	170	[8926]	GETTABLE 	R19 R20 R21 ; R19 := R20[R21]
	171	[8928]	TEST     	R19 0 ; if not R19 then PC := 189
	172	[8928]	JMP      	189 ; PC := 189
	173	[8929]	GETTABLE 	R10 R19 K19 ; R10 := R19["mMissionInfo"]
	174	[8930]	GETTABLE 	R20 R19 K21 ; R20 := R19["mId"]
	175	[8930]	GETTABLE 	R20 R20 K21 ; R20 := R20["mId"]
	176	[8930]	SETTABLE 	R10 K32 R20 ; R10["goalId"] := R20
	177	[8931]	GETTABLE 	R20 R10 K33 ; R20 := R10["goalTag"]
	178	[8931]	GETGLOBAL	R21 K25 ; R21 := EMPTY_SYMBOL
	179	[8931]	EQ       	0 R20 R21 ; if R20 ~= R21 then PC := 183
	180	[8931]	JMP      	183 ; PC := 183
	181	[8932]	GETTABLE 	R20 R19 K24 ; R20 := R19["mTag"]
	182	[8932]	SETTABLE 	R10 K33 R20 ; R10["goalTag"] := R20
	183	[8934]	GETGLOBAL	R20 K22 ; R20 := 0x603636ad
	184	[8934]	GETTABLE 	R21 R19 K34 ; R21 := R19["mDesc"]
	185	[8934]	OP_LOADBOOL	R22 0 0 ; R22 := false
	186	[8934]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	187	[8934]	MOVE     	R11 R20 ; R11 := R20
	188	[8934]	JMP      	782 ; PC := 782
	189	[8935]	GETGLOBAL	R20 K16 ; R20 := _T
	190	[8935]	GETTABLE 	R20 R20 K30 ; R20 := R20["LockedGoalList"]
	191	[8935]	TEST     	R20 0 ; if not R20 then PC := 782
	192	[8935]	JMP      	782 ; PC := 782
	193	[8935]	GETGLOBAL	R20 K16 ; R20 := _T
	194	[8935]	GETTABLE 	R20 R20 K30 ; R20 := R20["LockedGoalList"]
	195	[8935]	GETGLOBAL	R21 K2 ; R21 := 0x64fb1586
	196	[8935]	GETTABLE 	R22 R1 K3 ; R22 := R1["baseNodeName"]
	197	[8935]	CALL     	R21 2 2 ; R21 := R21(R22)
	198	[8935]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	199	[8935]	TEST     	R20 0 ; if not R20 then PC := 782
	200	[8935]	JMP      	782 ; PC := 782
	201	[8936]	GETGLOBAL	R20 K22 ; R20 := 0x603636ad
	202	[8936]	GETGLOBAL	R21 K16 ; R21 := _T
	203	[8936]	GETTABLE 	R21 R21 K30 ; R21 := R21["LockedGoalList"]
	204	[8936]	GETGLOBAL	R22 K2 ; R22 := 0x64fb1586
	205	[8936]	GETTABLE 	R23 R1 K3 ; R23 := R1["baseNodeName"]
	206	[8936]	CALL     	R22 2 2 ; R22 := R22(R23)
	207	[8936]	GETTABLE 	R21 R21 R22 ; R21 := R21[R22]
	208	[8936]	GETTABLE 	R21 R21 K34 ; R21 := R21["mDesc"]
	209	[8936]	OP_LOADBOOL	R22 0 0 ; R22 := false
	210	[8936]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	211	[8936]	MOVE     	R11 R20 ; R11 := R20
	212	[8938]	JMP      	782 ; PC := 782
	213	[8939]	GETGLOBAL	R20 K5 ; R20 := 0x7f5022cf
	214	[8939]	GETTABLE 	R20 R20 K6 ; R20 := R20[0xa5c556b9]
	215	[8939]	MOVE     	R21 R3 ; R21 := R3
	216	[8939]	GETGLOBAL	R22 K35 ; R22 := SYNDICATE_MISSION_TAG
	217	[8939]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	218	[8939]	TEST     	R20 0 ; if not R20 then PC := 239
	219	[8939]	JMP      	239 ; PC := 239
	220	[8940]	GETGLOBAL	R20 K16 ; R20 := _T
	221	[8940]	GETTABLE 	R20 R20 K36 ; R20 := R20["CachedSyndicateMissions"]
	222	[8940]	TEST     	R20 0 ; if not R20 then PC := 782
	223	[8940]	JMP      	782 ; PC := 782
	224	[8942]	GETGLOBAL	R20 K16 ; R20 := _T
	225	[8942]	GETTABLE 	R20 R20 K36 ; R20 := R20["CachedSyndicateMissions"]
	226	[8942]	GETGLOBAL	R21 K2 ; R21 := 0x64fb1586
	227	[8942]	GETTABLE 	R22 R1 K3 ; R22 := R1["baseNodeName"]
	228	[8942]	CALL     	R21 2 2 ; R21 := R21(R22)
	229	[8942]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	230	[8943]	TEST     	R20 0 ; if not R20 then PC := 782
	231	[8943]	JMP      	782 ; PC := 782
	232	[8944]	GETTABLE 	R10 R20 K19 ; R10 := R20["mMissionInfo"]
	233	[8945]	GETGLOBAL	R21 K22 ; R21 := 0x603636ad
	234	[8945]	LOADK    	R22 K37 ; R22 := "/Lotus/Language/Menu/SyndicateMissionName"
	235	[8945]	LOADNIL  	R23 R23 ; R23 := nil
	236	[8945]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	237	[8945]	MOVE     	R12 R21 ; R12 := R21
	238	[8947]	JMP      	782 ; PC := 782
	239	[8948]	GETGLOBAL	R21 K5 ; R21 := 0x7f5022cf
	240	[8948]	GETTABLE 	R21 R21 K6 ; R21 := R21[0xa5c556b9]
	241	[8948]	MOVE     	R22 R3 ; R22 := R3
	242	[8948]	GETGLOBAL	R23 K38 ; R23 := SORTIE_MISSION_TAG
	243	[8948]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	244	[8948]	TEST     	R21 0 ; if not R21 then PC := 265
	245	[8948]	JMP      	265 ; PC := 265
	246	[8949]	GETGLOBAL	R21 K16 ; R21 := _T
	247	[8949]	GETTABLE 	R21 R21 K39 ; R21 := R21["CachedSortieMissions"]
	248	[8949]	TEST     	R21 0 ; if not R21 then PC := 782
	249	[8949]	JMP      	782 ; PC := 782
	250	[8951]	GETGLOBAL	R21 K16 ; R21 := _T
	251	[8951]	GETTABLE 	R21 R21 K39 ; R21 := R21["CachedSortieMissions"]
	252	[8951]	GETGLOBAL	R22 K2 ; R22 := 0x64fb1586
	253	[8951]	GETTABLE 	R23 R1 K3 ; R23 := R1["baseNodeName"]
	254	[8951]	CALL     	R22 2 2 ; R22 := R22(R23)
	255	[8951]	GETTABLE 	R21 R21 R22 ; R21 := R21[R22]
	256	[8952]	TEST     	R21 0 ; if not R21 then PC := 782
	257	[8952]	JMP      	782 ; PC := 782
	258	[8953]	GETTABLE 	R10 R21 K19 ; R10 := R21["mMissionInfo"]
	259	[8954]	GETGLOBAL	R22 K22 ; R22 := 0x603636ad
	260	[8954]	LOADK    	R23 K40 ; R23 := "/Lotus/Language/Menu/SortieMissionName"
	261	[8954]	LOADNIL  	R24 R24 ; R24 := nil
	262	[8954]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	263	[8954]	MOVE     	R12 R22 ; R12 := R22
	264	[8956]	JMP      	782 ; PC := 782
	265	[8957]	GETGLOBAL	R22 K5 ; R22 := 0x7f5022cf
	266	[8957]	GETTABLE 	R22 R22 K6 ; R22 := R22[0xa5c556b9]
	267	[8957]	MOVE     	R23 R3 ; R23 := R3
	268	[8957]	GETGLOBAL	R24 K41 ; R24 := LITE_SORTIE_MISSION_TAG
	269	[8957]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	270	[8957]	TEST     	R22 0 ; if not R22 then PC := 291
	271	[8957]	JMP      	291 ; PC := 291
	272	[8958]	GETGLOBAL	R22 K16 ; R22 := _T
	273	[8958]	GETTABLE 	R22 R22 K42 ; R22 := R22["CachedLiteSortieMissions"]
	274	[8958]	TEST     	R22 0 ; if not R22 then PC := 782
	275	[8958]	JMP      	782 ; PC := 782
	276	[8959]	GETGLOBAL	R22 K16 ; R22 := _T
	277	[8959]	GETTABLE 	R22 R22 K42 ; R22 := R22["CachedLiteSortieMissions"]
	278	[8959]	GETGLOBAL	R23 K2 ; R23 := 0x64fb1586
	279	[8959]	GETTABLE 	R24 R1 K3 ; R24 := R1["baseNodeName"]
	280	[8959]	CALL     	R23 2 2 ; R23 := R23(R24)
	281	[8959]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	282	[8960]	TEST     	R22 0 ; if not R22 then PC := 782
	283	[8960]	JMP      	782 ; PC := 782
	284	[8961]	GETTABLE 	R10 R22 K19 ; R10 := R22["mMissionInfo"]
	285	[8962]	GETGLOBAL	R23 K22 ; R23 := 0x603636ad
	286	[8962]	LOADK    	R24 K40 ; R24 := "/Lotus/Language/Menu/SortieMissionName"
	287	[8962]	LOADNIL  	R25 R25 ; R25 := nil
	288	[8962]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	289	[8962]	MOVE     	R12 R23 ; R12 := R23
	290	[8964]	JMP      	782 ; PC := 782
	291	[8965]	GETGLOBAL	R23 K5 ; R23 := 0x7f5022cf
	292	[8965]	GETTABLE 	R23 R23 K6 ; R23 := R23[0xa5c556b9]
	293	[8965]	MOVE     	R24 R3 ; R24 := R3
	294	[8965]	GETGLOBAL	R25 K43 ; R25 := ACTIVE_MISSION_TAG
	295	[8965]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	296	[8965]	TEST     	R23 0 ; if not R23 then PC := 317
	297	[8965]	JMP      	317 ; PC := 317
	298	[8966]	GETGLOBAL	R23 K16 ; R23 := _T
	299	[8966]	GETTABLE 	R23 R23 K44 ; R23 := R23["CachedActiveMissions"]
	300	[8966]	TEST     	R23 0 ; if not R23 then PC := 782
	301	[8966]	JMP      	782 ; PC := 782
	302	[8967]	GETGLOBAL	R23 K16 ; R23 := _T
	303	[8967]	GETTABLE 	R23 R23 K44 ; R23 := R23["CachedActiveMissions"]
	304	[8967]	GETGLOBAL	R24 K2 ; R24 := 0x64fb1586
	305	[8967]	GETTABLE 	R25 R1 K3 ; R25 := R1["baseNodeName"]
	306	[8967]	CALL     	R24 2 2 ; R24 := R24(R25)
	307	[8967]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	308	[8968]	TEST     	R23 0 ; if not R23 then PC := 782
	309	[8968]	JMP      	782 ; PC := 782
	310	[8969]	GETTABLE 	R10 R23 K19 ; R10 := R23["mMissionInfo"]
	311	[8970]	GETGLOBAL	R24 K2 ; R24 := 0x64fb1586
	312	[8970]	GETTABLE 	R25 R23 K19 ; R25 := R23["mMissionInfo"]
	313	[8970]	GETTABLE 	R25 R25 K26 ; R25 := R25["descText"]
	314	[8970]	CALL     	R24 2 2 ; R24 := R24(R25)
	315	[8970]	MOVE     	R12 R24 ; R12 := R24
	316	[8972]	JMP      	782 ; PC := 782
	317	[8973]	GETGLOBAL	R24 K5 ; R24 := 0x7f5022cf
	318	[8973]	GETTABLE 	R24 R24 K6 ; R24 := R24[0xa5c556b9]
	319	[8973]	MOVE     	R25 R3 ; R25 := R3
	320	[8973]	GETGLOBAL	R26 K45 ; R26 := INVASION_DEFENDER_TAG
	321	[8973]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	322	[8973]	TEST     	R24 0 ; if not R24 then PC := 394
	323	[8973]	JMP      	394 ; PC := 394
	324	[8974]	GETGLOBAL	R24 K16 ; R24 := _T
	325	[8974]	GETTABLE 	R24 R24 K46 ; R24 := R24["CachedInvasionInfo"]
	326	[8974]	TEST     	R24 0 ; if not R24 then PC := 782
	327	[8974]	JMP      	782 ; PC := 782
	328	[8975]	GETGLOBAL	R24 K2 ; R24 := 0x64fb1586
	329	[8975]	GETTABLE 	R25 R1 K3 ; R25 := R1["baseNodeName"]
	330	[8975]	CALL     	R24 2 2 ; R24 := R24(R25)
	331	[8976]	GETGLOBAL	R25 K16 ; R25 := _T
	332	[8976]	GETTABLE 	R25 R25 K46 ; R25 := R25["CachedInvasionInfo"]
	333	[8976]	GETTABLE 	R25 R25 R24 ; R25 := R25[R24]
	334	[8977]	TEST     	R25 0 ; if not R25 then PC := 782
	335	[8977]	JMP      	782 ; PC := 782
	336	[8978]	GETTABLE 	R10 R25 K47 ; R10 := R25["mDefenderMissionInfo"]
	337	[8979]	GETTABLE 	R26 R25 K21 ; R26 := R25["mId"]
	338	[8979]	GETTABLE 	R26 R26 K21 ; R26 := R26["mId"]
	339	[8979]	SETTABLE 	R10 K48 R26 ; R10["invasionId"] := R26
	340	[8980]	GETTABLE 	R26 R25 K50 ; R26 := R25["mAttackerMissionInfo"]
	341	[8980]	GETTABLE 	R26 R26 K51 ; R26 := R26["faction"]
	342	[8980]	SETTABLE 	R10 K49 R26 ; R10["invasionAllyFaction"] := R26
	343	[8982]	GETGLOBAL	R26 K22 ; R26 := 0x603636ad
	344	[8982]	LOADK    	R27 K52 ; R27 := "/Lotus/Language/Menu/MissionIntro_Invasion"
	345	[8982]	OP_LOADBOOL	R28 0 0 ; R28 := false
	346	[8982]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	347	[8982]	LOADK    	R27 K53 ; R27 := " ("
	348	[8982]	GETGLOBAL	R28 K22 ; R28 := 0x603636ad
	349	[8982]	LOADK    	R29 K54 ; R29 := "/Lotus/Language/Game/Faction_"
	350	[8982]	GETGLOBAL	R30 K2 ; R30 := 0x64fb1586
	351	[8982]	GETTABLE 	R31 R25 K50 ; R31 := R25["mAttackerMissionInfo"]
	352	[8982]	SELF     	R31 R31 K55 ; R32 := R31; R31 := R31[0x243148d6]
	353	[8982]	CALL     	R31 2 0 ; R31,... := R31(R32)
	354	[8982]	CALL     	R30 0 2 ; R30 := R30(R31,...)
	355	[8982]	LOADK    	R31 K56 ; R31 := "UC"
	356	[8982]	CONCAT   	R29 R29 R31 ; R29 := R29 .. R30 .. R31
	357	[8982]	OP_LOADBOOL	R30 0 0 ; R30 := false
	358	[8982]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	359	[8982]	LOADK    	R29 K57 ; R29 := ")"
	360	[8982]	CONCAT   	R26 R26 R29 ; R26 := R26 .. R27 .. R28 .. R29
	361	[8983]	GETTABLE 	R27 R25 K58 ; R27 := R25["mDefenderName"]
	362	[8983]	GETGLOBAL	R28 K25 ; R28 := EMPTY_SYMBOL
	363	[8983]	EQ       	0 R27 R28 ; if R27 ~= R28 then PC := 367
	364	[8983]	JMP      	367 ; PC := 367
	365	[8984]	MOVE     	R12 R26 ; R12 := R26
	366	[8984]	JMP      	374 ; PC := 374
	367	[8986]	GETGLOBAL	R27 K22 ; R27 := 0x603636ad
	368	[8986]	GETGLOBAL	R28 K2 ; R28 := 0x64fb1586
	369	[8986]	GETTABLE 	R29 R25 K58 ; R29 := R25["mDefenderName"]
	370	[8986]	CALL     	R28 2 2 ; R28 := R28(R29)
	371	[8986]	OP_LOADBOOL	R29 0 0 ; R29 := false
	372	[8986]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	373	[8986]	MOVE     	R12 R27 ; R12 := R27
	374	[8989]	GETGLOBAL	R27 K59 ; R27 := 0xcfc01047
	375	[8989]	GETGLOBAL	R28 K28 ; R28 := 0x0032441c
	376	[8989]	GETTABLE 	R28 R28 K29 ; R28 := R28["CachedGoalInfo"]
	377	[8989]	CALL     	R27 2 4 ; R27,R28,R29 := R27(R28)
	378	[8989]	JMP      	391 ; PC := 391
	379	[8990]	TEST     	R31 0 ; if not R31 then PC := 391
	380	[8990]	JMP      	391 ; PC := 391
	381	[8990]	GETTABLE 	R32 R31 K60 ; R32 := R31["mInvasionNode"]
	382	[8990]	GETTABLE 	R33 R1 K3 ; R33 := R1["baseNodeName"]
	383	[8990]	EQ       	0 R32 R33 ; if R32 ~= R33 then PC := 391
	384	[8990]	JMP      	391 ; PC := 391
	385	[8991]	GETGLOBAL	R32 K22 ; R32 := 0x603636ad
	386	[8991]	GETTABLE 	R33 R31 K34 ; R33 := R31["mDesc"]
	387	[8991]	OP_LOADBOOL	R34 0 0 ; R34 := false
	388	[8991]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	389	[8991]	MOVE     	R11 R32 ; R11 := R32
	390	[8992]	JMP      	782 ; PC := 782
	391	[8989]	TFORLOOP 	R27 2 ; R30,R31 := R27(R28,R29); if R30 ~= nil then begin PC = 379; R29 := R30 end
	392	[8993]	JMP      	379 ; PC := 379
	393	[8996]	JMP      	782 ; PC := 782
	394	[8997]	GETGLOBAL	R32 K5 ; R32 := 0x7f5022cf
	395	[8997]	GETTABLE 	R32 R32 K6 ; R32 := R32[0xa5c556b9]
	396	[8997]	MOVE     	R33 R3 ; R33 := R3
	397	[8997]	GETGLOBAL	R34 K61 ; R34 := INVASION_ATTACKER_TAG
	398	[8997]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	399	[8997]	TEST     	R32 0 ; if not R32 then PC := 471
	400	[8997]	JMP      	471 ; PC := 471
	401	[8998]	GETGLOBAL	R32 K16 ; R32 := _T
	402	[8998]	GETTABLE 	R32 R32 K46 ; R32 := R32["CachedInvasionInfo"]
	403	[8998]	TEST     	R32 0 ; if not R32 then PC := 782
	404	[8998]	JMP      	782 ; PC := 782
	405	[8999]	GETGLOBAL	R32 K2 ; R32 := 0x64fb1586
	406	[8999]	GETTABLE 	R33 R1 K3 ; R33 := R1["baseNodeName"]
	407	[8999]	CALL     	R32 2 2 ; R32 := R32(R33)
	408	[9000]	GETGLOBAL	R33 K16 ; R33 := _T
	409	[9000]	GETTABLE 	R33 R33 K46 ; R33 := R33["CachedInvasionInfo"]
	410	[9000]	GETTABLE 	R33 R33 R32 ; R33 := R33[R32]
	411	[9001]	TEST     	R33 0 ; if not R33 then PC := 782
	412	[9001]	JMP      	782 ; PC := 782
	413	[9002]	GETTABLE 	R10 R33 K50 ; R10 := R33["mAttackerMissionInfo"]
	414	[9003]	GETTABLE 	R34 R33 K21 ; R34 := R33["mId"]
	415	[9003]	GETTABLE 	R34 R34 K21 ; R34 := R34["mId"]
	416	[9003]	SETTABLE 	R10 K48 R34 ; R10["invasionId"] := R34
	417	[9004]	GETTABLE 	R34 R33 K47 ; R34 := R33["mDefenderMissionInfo"]
	418	[9004]	GETTABLE 	R34 R34 K51 ; R34 := R34["faction"]
	419	[9004]	SETTABLE 	R10 K49 R34 ; R10["invasionAllyFaction"] := R34
	420	[9006]	GETGLOBAL	R34 K22 ; R34 := 0x603636ad
	421	[9006]	LOADK    	R35 K52 ; R35 := "/Lotus/Language/Menu/MissionIntro_Invasion"
	422	[9006]	OP_LOADBOOL	R36 0 0 ; R36 := false
	423	[9006]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	424	[9006]	LOADK    	R35 K53 ; R35 := " ("
	425	[9006]	GETGLOBAL	R36 K22 ; R36 := 0x603636ad
	426	[9006]	LOADK    	R37 K54 ; R37 := "/Lotus/Language/Game/Faction_"
	427	[9006]	GETGLOBAL	R38 K2 ; R38 := 0x64fb1586
	428	[9006]	GETTABLE 	R39 R33 K47 ; R39 := R33["mDefenderMissionInfo"]
	429	[9006]	SELF     	R39 R39 K55 ; R40 := R39; R39 := R39[0x243148d6]
	430	[9006]	CALL     	R39 2 0 ; R39,... := R39(R40)
	431	[9006]	CALL     	R38 0 2 ; R38 := R38(R39,...)
	432	[9006]	LOADK    	R39 K56 ; R39 := "UC"
	433	[9006]	CONCAT   	R37 R37 R39 ; R37 := R37 .. R38 .. R39
	434	[9006]	OP_LOADBOOL	R38 0 0 ; R38 := false
	435	[9006]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	436	[9006]	LOADK    	R37 K57 ; R37 := ")"
	437	[9006]	CONCAT   	R34 R34 R37 ; R34 := R34 .. R35 .. R36 .. R37
	438	[9007]	GETTABLE 	R35 R33 K62 ; R35 := R33["mAttackerName"]
	439	[9007]	GETGLOBAL	R36 K25 ; R36 := EMPTY_SYMBOL
	440	[9007]	EQ       	0 R35 R36 ; if R35 ~= R36 then PC := 444
	441	[9007]	JMP      	444 ; PC := 444
	442	[9008]	MOVE     	R12 R34 ; R12 := R34
	443	[9008]	JMP      	451 ; PC := 451
	444	[9010]	GETGLOBAL	R35 K22 ; R35 := 0x603636ad
	445	[9010]	GETGLOBAL	R36 K2 ; R36 := 0x64fb1586
	446	[9010]	GETTABLE 	R37 R33 K62 ; R37 := R33["mAttackerName"]
	447	[9010]	CALL     	R36 2 2 ; R36 := R36(R37)
	448	[9010]	OP_LOADBOOL	R37 0 0 ; R37 := false
	449	[9010]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	450	[9010]	MOVE     	R12 R35 ; R12 := R35
	451	[9013]	GETGLOBAL	R35 K59 ; R35 := 0xcfc01047
	452	[9013]	GETGLOBAL	R36 K28 ; R36 := 0x0032441c
	453	[9013]	GETTABLE 	R36 R36 K29 ; R36 := R36["CachedGoalInfo"]
	454	[9013]	CALL     	R35 2 4 ; R35,R36,R37 := R35(R36)
	455	[9013]	JMP      	468 ; PC := 468
	456	[9014]	TEST     	R39 0 ; if not R39 then PC := 468
	457	[9014]	JMP      	468 ; PC := 468
	458	[9014]	GETTABLE 	R40 R39 K60 ; R40 := R39["mInvasionNode"]
	459	[9014]	GETTABLE 	R41 R1 K3 ; R41 := R1["baseNodeName"]
	460	[9014]	EQ       	0 R40 R41 ; if R40 ~= R41 then PC := 468
	461	[9014]	JMP      	468 ; PC := 468
	462	[9015]	GETGLOBAL	R40 K22 ; R40 := 0x603636ad
	463	[9015]	GETTABLE 	R41 R39 K34 ; R41 := R39["mDesc"]
	464	[9015]	OP_LOADBOOL	R42 0 0 ; R42 := false
	465	[9015]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	466	[9015]	MOVE     	R11 R40 ; R11 := R40
	467	[9016]	JMP      	782 ; PC := 782
	468	[9013]	TFORLOOP 	R35 2 ; R38,R39 := R35(R36,R37); if R38 ~= nil then begin PC = 456; R37 := R38 end
	469	[9017]	JMP      	456 ; PC := 456
	470	[9020]	JMP      	782 ; PC := 782
	471	[9021]	GETGLOBAL	R40 K5 ; R40 := 0x7f5022cf
	472	[9021]	GETTABLE 	R40 R40 K6 ; R40 := R40[0xa5c556b9]
	473	[9021]	MOVE     	R41 R3 ; R41 := R3
	474	[9021]	GETGLOBAL	R42 K63 ; R42 := NIGHTMARE_TAG
	475	[9021]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	476	[9021]	TEST     	R40 0 ; if not R40 then PC := 485
	477	[9021]	JMP      	485 ; PC := 485
	478	[9023]	GETGLOBAL	R40 K22 ; R40 := 0x603636ad
	479	[9023]	LOADK    	R41 K64 ; R41 := "/Lotus/Language/Menu/NightmareModeName"
	480	[9023]	LOADNIL  	R42 R42 ; R42 := nil
	481	[9023]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	482	[9023]	MOVE     	R12 R40 ; R12 := R40
	483	[9024]	OP_LOADBOOL	R14 1 0 ; R14 := true
	484	[9024]	JMP      	782 ; PC := 782
	485	[9026]	GETGLOBAL	R40 K5 ; R40 := 0x7f5022cf
	486	[9026]	GETTABLE 	R40 R40 K6 ; R40 := R40[0xa5c556b9]
	487	[9026]	MOVE     	R41 R3 ; R41 := R3
	488	[9026]	GETGLOBAL	R42 K65 ; R42 := PVP_TAG
	489	[9026]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	490	[9026]	TEST     	R40 1 ; if R40 then PC := 495
	491	[9026]	JMP      	495 ; PC := 495
	492	[9026]	GETTABLE 	R40 R8 K66 ; R40 := R8["nodeType"]
	493	[9026]	EQ       	0 R40 K68 ; if R40 ~= 2.000000 then PC := 514
	494	[9026]	JMP      	514 ; PC := 514
	495	[9027]	GETGLOBAL	R40 K28 ; R40 := 0x0032441c
	496	[9027]	GETTABLE 	R40 R40 K29 ; R40 := R40["CachedGoalInfo"]
	497	[9027]	TEST     	R40 0 ; if not R40 then PC := 782
	498	[9027]	JMP      	782 ; PC := 782
	499	[9028]	GETGLOBAL	R40 K28 ; R40 := 0x0032441c
	500	[9028]	GETTABLE 	R40 R40 K29 ; R40 := R40["CachedGoalInfo"]
	501	[9028]	GETGLOBAL	R41 K2 ; R41 := 0x64fb1586
	502	[9028]	GETTABLE 	R42 R1 K3 ; R42 := R1["baseNodeName"]
	503	[9028]	CALL     	R41 2 2 ; R41 := R41(R42)
	504	[9028]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	505	[9029]	TEST     	R40 0 ; if not R40 then PC := 512
	506	[9029]	JMP      	512 ; PC := 512
	507	[9030]	GETGLOBAL	R41 K22 ; R41 := 0x603636ad
	508	[9030]	GETTABLE 	R42 R40 K34 ; R42 := R40["mDesc"]
	509	[9030]	OP_LOADBOOL	R43 0 0 ; R43 := false
	510	[9030]	CALL     	R41 3 2 ; R41 := R41(R42,R43)
	511	[9030]	MOVE     	R11 R41 ; R11 := R41
	512	[9032]	OP_LOADBOOL	R16 1 0 ; R16 := true
	513	[9033]	JMP      	782 ; PC := 782
	514	[9034]	GETGLOBAL	R41 K5 ; R41 := 0x7f5022cf
	515	[9034]	GETTABLE 	R41 R41 K6 ; R41 := R41[0xa5c556b9]
	516	[9034]	MOVE     	R42 R3 ; R42 := R3
	517	[9034]	GETGLOBAL	R43 K38 ; R43 := SORTIE_MISSION_TAG
	518	[9034]	CALL     	R41 3 2 ; R41 := R41(R42,R43)
	519	[9034]	TEST     	R41 0 ; if not R41 then PC := 540
	520	[9034]	JMP      	540 ; PC := 540
	521	[9034]	GETGLOBAL	R41 K16 ; R41 := _T
	522	[9034]	GETTABLE 	R41 R41 K39 ; R41 := R41["CachedSortieMissions"]
	523	[9034]	TEST     	R41 0 ; if not R41 then PC := 540
	524	[9034]	JMP      	540 ; PC := 540
	525	[9035]	GETGLOBAL	R41 K16 ; R41 := _T
	526	[9035]	GETTABLE 	R41 R41 K39 ; R41 := R41["CachedSortieMissions"]
	527	[9035]	GETGLOBAL	R42 K2 ; R42 := 0x64fb1586
	528	[9035]	GETTABLE 	R43 R1 K3 ; R43 := R1["baseNodeName"]
	529	[9035]	CALL     	R42 2 2 ; R42 := R42(R43)
	530	[9035]	GETTABLE 	R41 R41 R42 ; R41 := R41[R42]
	531	[9036]	TEST     	R41 0 ; if not R41 then PC := 782
	532	[9036]	JMP      	782 ; PC := 782
	533	[9037]	GETTABLE 	R10 R41 K19 ; R10 := R41["mMissionInfo"]
	534	[9038]	GETGLOBAL	R42 K22 ; R42 := 0x603636ad
	535	[9038]	LOADK    	R43 K69 ; R43 := "/Lotus/Language/Menu/Notification_Sortie"
	536	[9038]	LOADNIL  	R44 R44 ; R44 := nil
	537	[9038]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	538	[9038]	MOVE     	R12 R42 ; R12 := R42
	539	[9039]	JMP      	782 ; PC := 782
	540	[9041]	GETGLOBAL	R42 K5 ; R42 := 0x7f5022cf
	541	[9041]	GETTABLE 	R42 R42 K6 ; R42 := R42[0xa5c556b9]
	542	[9041]	MOVE     	R43 R3 ; R43 := R3
	543	[9041]	GETGLOBAL	R44 K43 ; R44 := ACTIVE_MISSION_TAG
	544	[9041]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	545	[9041]	TEST     	R42 0 ; if not R42 then PC := 566
	546	[9041]	JMP      	566 ; PC := 566
	547	[9041]	GETGLOBAL	R42 K16 ; R42 := _T
	548	[9041]	GETTABLE 	R42 R42 K44 ; R42 := R42["CachedActiveMissions"]
	549	[9041]	TEST     	R42 0 ; if not R42 then PC := 566
	550	[9041]	JMP      	566 ; PC := 566
	551	[9042]	GETGLOBAL	R42 K16 ; R42 := _T
	552	[9042]	GETTABLE 	R42 R42 K44 ; R42 := R42["CachedActiveMissions"]
	553	[9042]	GETGLOBAL	R43 K2 ; R43 := 0x64fb1586
	554	[9042]	GETTABLE 	R44 R1 K3 ; R44 := R1["baseNodeName"]
	555	[9042]	CALL     	R43 2 2 ; R43 := R43(R44)
	556	[9042]	GETTABLE 	R42 R42 R43 ; R42 := R42[R43]
	557	[9043]	TEST     	R42 0 ; if not R42 then PC := 782
	558	[9043]	JMP      	782 ; PC := 782
	559	[9044]	GETTABLE 	R10 R42 K19 ; R10 := R42["mMissionInfo"]
	560	[9045]	GETGLOBAL	R43 K22 ; R43 := 0x603636ad
	561	[9045]	LOADK    	R44 K70 ; R44 := "/Lotus/Language/Menu/Notification_ActiveMission"
	562	[9045]	LOADNIL  	R45 R45 ; R45 := nil
	563	[9045]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	564	[9045]	MOVE     	R12 R43 ; R12 := R43
	565	[9046]	JMP      	782 ; PC := 782
	566	[9048]	GETGLOBAL	R43 K5 ; R43 := 0x7f5022cf
	567	[9048]	GETTABLE 	R43 R43 K6 ; R43 := R43[0xa5c556b9]
	568	[9048]	MOVE     	R44 R3 ; R44 := R3
	569	[9048]	GETGLOBAL	R45 K71 ; R45 := KUVA_TOWER_MISSION_TAG
	570	[9048]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	571	[9048]	TEST     	R43 0 ; if not R43 then PC := 602
	572	[9048]	JMP      	602 ; PC := 602
	573	[9048]	GETGLOBAL	R43 K16 ; R43 := _T
	574	[9048]	GETTABLE 	R43 R43 K72 ; R43 := R43["CachedGhostTowerMissions"]
	575	[9048]	TEST     	R43 0 ; if not R43 then PC := 602
	576	[9048]	JMP      	602 ; PC := 602
	577	[9049]	GETGLOBAL	R43 K16 ; R43 := _T
	578	[9049]	GETTABLE 	R43 R43 K72 ; R43 := R43["CachedGhostTowerMissions"]
	579	[9049]	GETGLOBAL	R44 K2 ; R44 := 0x64fb1586
	580	[9049]	GETTABLE 	R45 R1 K3 ; R45 := R1["baseNodeName"]
	581	[9049]	CALL     	R44 2 2 ; R44 := R44(R45)
	582	[9049]	GETTABLE 	R43 R43 R44 ; R43 := R43[R44]
	583	[9050]	TEST     	R43 0 ; if not R43 then PC := 782
	584	[9050]	JMP      	782 ; PC := 782
	585	[9051]	GETTABLE 	R10 R43 K19 ; R10 := R43["mMissionInfo"]
	586	[9052]	GETUPVAL 	R44 U1 ; R44 := U1
	587	[9052]	GETTABLE 	R44 R44 K73 ; R44 := R44[0x06d055f9]
	588	[9052]	GETTABLE 	R45 R10 K74 ; R45 := R10["minEnemyLevel"]
	589	[9052]	LE       	1 K75 R45 ; if 80.000000 <= R45 then PC := 592
	590	[9052]	JMP      	592 ; PC := 592
	591	[9052]	OP_LOADBOOL	R45 0 1 ; R45 := false; PC := 592
	592	[9052]	OP_LOADBOOL	R45 1 0 ; R45 := true
	593	[9052]	LOADK    	R46 K76 ; R46 := "/Lotus/Language/Menu/GhostTowerHardMissionName"
	594	[9052]	LOADK    	R47 K77 ; R47 := "/Lotus/Language/Menu/GhostTowerMissionName"
	595	[9052]	CALL     	R44 4 2 ; R44 := R44(R45,R46,R47)
	596	[9053]	GETGLOBAL	R45 K22 ; R45 := 0x603636ad
	597	[9053]	MOVE     	R46 R44 ; R46 := R44
	598	[9053]	LOADNIL  	R47 R47 ; R47 := nil
	599	[9053]	CALL     	R45 3 2 ; R45 := R45(R46,R47)
	600	[9053]	MOVE     	R12 R45 ; R12 := R45
	601	[9054]	JMP      	782 ; PC := 782
	602	[9055]	GETGLOBAL	R45 K5 ; R45 := 0x7f5022cf
	603	[9055]	GETTABLE 	R45 R45 K6 ; R45 := R45[0xa5c556b9]
	604	[9055]	MOVE     	R46 R3 ; R46 := R3
	605	[9055]	GETGLOBAL	R47 K78 ; R47 := NEMESIS_MISSION_TAG
	606	[9055]	CALL     	R45 3 2 ; R45 := R45(R46,R47)
	607	[9055]	TEST     	R45 0 ; if not R45 then PC := 649
	608	[9055]	JMP      	649 ; PC := 649
	609	[9056]	GETGLOBAL	R45 K16 ; R45 := _T
	610	[9056]	GETTABLE 	R45 R45 K79 ; R45 := R45["CachedNemesisMissions"]
	611	[9056]	TEST     	R45 0 ; if not R45 then PC := 632
	612	[9056]	JMP      	632 ; PC := 632
	613	[9056]	GETGLOBAL	R45 K16 ; R45 := _T
	614	[9056]	GETTABLE 	R45 R45 K79 ; R45 := R45["CachedNemesisMissions"]
	615	[9056]	GETGLOBAL	R46 K2 ; R46 := 0x64fb1586
	616	[9056]	GETTABLE 	R47 R1 K3 ; R47 := R1["baseNodeName"]
	617	[9056]	CALL     	R46 2 2 ; R46 := R46(R47)
	618	[9056]	GETTABLE 	R45 R45 R46 ; R45 := R45[R46]
	619	[9056]	TEST     	R45 0 ; if not R45 then PC := 632
	620	[9056]	JMP      	632 ; PC := 632
	621	[9057]	GETGLOBAL	R45 K16 ; R45 := _T
	622	[9057]	GETTABLE 	R45 R45 K79 ; R45 := R45["CachedNemesisMissions"]
	623	[9057]	GETGLOBAL	R46 K2 ; R46 := 0x64fb1586
	624	[9057]	GETTABLE 	R47 R1 K3 ; R47 := R1["baseNodeName"]
	625	[9057]	CALL     	R46 2 2 ; R46 := R46(R47)
	626	[9057]	GETTABLE 	R45 R45 R46 ; R45 := R45[R46]
	627	[9057]	GETTABLE 	R45 R45 K19 ; R45 := R45["mMissionInfo"]
	628	[9057]	SELF     	R45 R45 K80 ; R46 := R45; R45 := R45[0x8f89d633]
	629	[9057]	CALL     	R45 2 2 ; R45 := R45(R46)
	630	[9057]	MOVE     	R10 R45 ; R10 := R45
	631	[9057]	JMP      	647 ; PC := 647
	632	[9059]	GETTABLE 	R45 R1 K81 ; R45 := R1["nemesis"]
	633	[9059]	GETTABLE 	R45 R45 K82 ; R45 := R45["rank"]
	634	[9060]	GETTABLE 	R46 R1 K81 ; R46 := R1["nemesis"]
	635	[9060]	GETTABLE 	R46 R46 K51 ; R46 := R46["faction"]
	636	[9061]	GETTABLE 	R47 R1 K81 ; R47 := R1["nemesis"]
	637	[9061]	GETTABLE 	R47 R47 K1 ; R47 := R47["name"]
	638	[9062]	GETUPVAL 	R48 U2 ; R48 := U2
	639	[9062]	GETTABLE 	R49 R1 K3 ; R49 := R1["baseNodeName"]
	640	[9062]	MOVE     	R50 R45 ; R50 := R45
	641	[9062]	MOVE     	R51 R46 ; R51 := R46
	642	[9062]	MOVE     	R52 R47 ; R52 := R47
	643	[9062]	CALL     	R48 5 2 ; R48 := R48(R49,R50,R51,R52)
	644	[9062]	SELF     	R48 R48 K80 ; R49 := R48; R48 := R48[0x8f89d633]
	645	[9062]	CALL     	R48 2 2 ; R48 := R48(R49)
	646	[9062]	MOVE     	R10 R48 ; R10 := R48
	647	[9064]	GETTABLE 	R12 R10 K83 ; R12 := R10["uniqueName"]
	648	[9064]	JMP      	782 ; PC := 782
	649	[9065]	GETGLOBAL	R48 K5 ; R48 := 0x7f5022cf
	650	[9065]	GETTABLE 	R48 R48 K6 ; R48 := R48[0xa5c556b9]
	651	[9065]	MOVE     	R49 R3 ; R49 := R3
	652	[9065]	GETGLOBAL	R50 K84 ; R50 := VOID_STORM_TAG
	653	[9065]	CALL     	R48 3 2 ; R48 := R48(R49,R50)
	654	[9065]	TEST     	R48 0 ; if not R48 then PC := 658
	655	[9065]	JMP      	658 ; PC := 658
	656	[9066]	OP_LOADBOOL	R15 1 0 ; R15 := true
	657	[9066]	JMP      	782 ; PC := 782
	658	[9067]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	659	[9067]	GETTABLE 	R49 R1 K85 ; R49 := R1["job"]
	660	[9067]	CALL     	R48 2 2 ; R48 := R48(R49)
	661	[9067]	TEST     	R48 1 ; if R48 then PC := 691
	662	[9067]	JMP      	691 ; PC := 691
	663	[9068]	GETGLOBAL	R48 K86 ; R48 := 0xb009bbc6
	664	[9068]	GETTABLE 	R49 R1 K85 ; R49 := R1["job"]
	665	[9068]	CALL     	R48 2 2 ; R48 := R48(R49)
	666	[9069]	GETGLOBAL	R49 K0 ; R49 := 0x7b998233
	667	[9069]	MOVE     	R50 R48 ; R50 := R48
	668	[9069]	CALL     	R49 2 2 ; R49 := R49(R50)
	669	[9069]	TEST     	R49 1 ; if R49 then PC := 782
	670	[9069]	JMP      	782 ; PC := 782
	671	[9070]	GETGLOBAL	R49 K22 ; R49 := 0x603636ad
	672	[9070]	GETGLOBAL	R50 K2 ; R50 := 0x64fb1586
	673	[9070]	SELF     	R51 R48 K87 ; R52 := R48; R51 := R48[0xaf8359c4]
	674	[9070]	CALL     	R51 2 0 ; R51,... := R51(R52)
	675	[9070]	CALL     	R50 0 2 ; R50 := R50(R51,...)
	676	[9070]	LOADNIL  	R51 R51 ; R51 := nil
	677	[9070]	CALL     	R49 3 2 ; R49 := R49(R50,R51)
	678	[9070]	MOVE     	R12 R49 ; R12 := R49
	679	[9071]	GETTABLE 	R49 R1 K88 ; R49 := R1["isHardJob"]
	680	[9071]	TEST     	R49 0 ; if not R49 then PC := 782
	681	[9071]	JMP      	782 ; PC := 782
	682	[9072]	MOVE     	R49 R12 ; R49 := R12
	683	[9072]	LOADK    	R50 K53 ; R50 := " ("
	684	[9072]	GETGLOBAL	R51 K22 ; R51 := 0x603636ad
	685	[9072]	LOADK    	R52 K89 ; R52 := "/Lotus/Language/Labels/HardMode"
	686	[9072]	OP_LOADBOOL	R53 1 0 ; R53 := true
	687	[9072]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	688	[9072]	LOADK    	R52 K57 ; R52 := ")"
	689	[9072]	CONCAT   	R12 R49 R52 ; R12 := R49 .. R50 .. R51 .. R52
	690	[9074]	JMP      	782 ; PC := 782
	691	[9075]	GETGLOBAL	R49 K5 ; R49 := 0x7f5022cf
	692	[9075]	GETTABLE 	R49 R49 K6 ; R49 := R49[0xa5c556b9]
	693	[9075]	MOVE     	R50 R3 ; R50 := R3
	694	[9075]	LOADK    	R51 K90 ; R51 := "_Cell"
	695	[9075]	CALL     	R49 3 2 ; R49 := R49(R50,R51)
	696	[9075]	TEST     	R49 0 ; if not R49 then PC := 712
	697	[9075]	JMP      	712 ; PC := 712
	698	[9075]	GETGLOBAL	R49 K16 ; R49 := _T
	699	[9075]	GETTABLE 	R49 R49 K91 ; R49 := R49["CachedCellMissions"]
	700	[9075]	TEST     	R49 0 ; if not R49 then PC := 712
	701	[9075]	JMP      	712 ; PC := 712
	702	[9076]	GETGLOBAL	R49 K16 ; R49 := _T
	703	[9076]	GETTABLE 	R49 R49 K91 ; R49 := R49["CachedCellMissions"]
	704	[9076]	GETGLOBAL	R50 K2 ; R50 := 0x64fb1586
	705	[9076]	GETTABLE 	R51 R1 K3 ; R51 := R1["baseNodeName"]
	706	[9076]	CALL     	R50 2 2 ; R50 := R50(R51)
	707	[9076]	GETTABLE 	R49 R49 R50 ; R49 := R49[R50]
	708	[9077]	TEST     	R49 0 ; if not R49 then PC := 782
	709	[9077]	JMP      	782 ; PC := 782
	710	[9078]	GETTABLE 	R10 R49 K19 ; R10 := R49["mMissionInfo"]
	711	[9079]	JMP      	782 ; PC := 782
	712	[9080]	GETGLOBAL	R50 K5 ; R50 := 0x7f5022cf
	713	[9080]	GETTABLE 	R50 R50 K6 ; R50 := R50[0xa5c556b9]
	714	[9080]	MOVE     	R51 R3 ; R51 := R3
	715	[9080]	GETGLOBAL	R52 K92 ; R52 := ELITE_ALERT_TAG
	716	[9080]	CALL     	R50 3 2 ; R50 := R50(R51,R52)
	717	[9080]	TEST     	R50 0 ; if not R50 then PC := 738
	718	[9080]	JMP      	738 ; PC := 738
	719	[9081]	GETGLOBAL	R50 K16 ; R50 := _T
	720	[9081]	GETTABLE 	R50 R50 K93 ; R50 := R50["CachedEliteAlertMissions"]
	721	[9081]	TEST     	R50 0 ; if not R50 then PC := 782
	722	[9081]	JMP      	782 ; PC := 782
	723	[9082]	GETGLOBAL	R50 K22 ; R50 := 0x603636ad
	724	[9082]	LOADK    	R51 K94 ; R51 := "/Lotus/Language/Menu/AlertHardMode"
	725	[9082]	LOADNIL  	R52 R52 ; R52 := nil
	726	[9082]	CALL     	R50 3 2 ; R50 := R50(R51,R52)
	727	[9082]	MOVE     	R12 R50 ; R12 := R50
	728	[9083]	GETGLOBAL	R50 K16 ; R50 := _T
	729	[9083]	GETTABLE 	R50 R50 K93 ; R50 := R50["CachedEliteAlertMissions"]
	730	[9083]	GETGLOBAL	R51 K2 ; R51 := 0x64fb1586
	731	[9083]	GETTABLE 	R52 R1 K3 ; R52 := R1["baseNodeName"]
	732	[9083]	CALL     	R51 2 2 ; R51 := R51(R52)
	733	[9083]	GETTABLE 	R50 R50 R51 ; R50 := R50[R51]
	734	[9084]	TEST     	R50 0 ; if not R50 then PC := 782
	735	[9084]	JMP      	782 ; PC := 782
	736	[9085]	GETTABLE 	R10 R50 K19 ; R10 := R50["mMissionInfo"]
	737	[9087]	JMP      	782 ; PC := 782
	738	[9088]	GETGLOBAL	R51 K5 ; R51 := 0x7f5022cf
	739	[9088]	GETTABLE 	R51 R51 K6 ; R51 := R51[0xa5c556b9]
	740	[9088]	MOVE     	R52 R3 ; R52 := R3
	741	[9088]	GETGLOBAL	R53 K95 ; R53 := HARD_DAILY_TAG
	742	[9088]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	743	[9088]	TEST     	R51 0 ; if not R51 then PC := 770
	744	[9088]	JMP      	770 ; PC := 770
	745	[9088]	GETGLOBAL	R51 K16 ; R51 := _T
	746	[9088]	GETTABLE 	R51 R51 K96 ; R51 := R51["CachedHardModeDailyMissions"]
	747	[9088]	TEST     	R51 0 ; if not R51 then PC := 770
	748	[9088]	JMP      	770 ; PC := 770
	749	[9089]	GETGLOBAL	R51 K22 ; R51 := 0x603636ad
	750	[9089]	LOADK    	R52 K97 ; R52 := "/Lotus/Language/Labels/SteelPathDaily"
	751	[9089]	LOADNIL  	R53 R53 ; R53 := nil
	752	[9089]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	753	[9089]	MOVE     	R12 R51 ; R12 := R51
	754	[9090]	GETGLOBAL	R51 K16 ; R51 := _T
	755	[9090]	GETTABLE 	R51 R51 K96 ; R51 := R51["CachedHardModeDailyMissions"]
	756	[9090]	GETGLOBAL	R52 K2 ; R52 := 0x64fb1586
	757	[9090]	GETTABLE 	R53 R1 K3 ; R53 := R1["baseNodeName"]
	758	[9090]	CALL     	R52 2 2 ; R52 := R52(R53)
	759	[9090]	GETTABLE 	R51 R51 R52 ; R51 := R51[R52]
	760	[9090]	TEST     	R51 0 ; if not R51 then PC := 782
	761	[9090]	JMP      	782 ; PC := 782
	762	[9091]	GETGLOBAL	R51 K16 ; R51 := _T
	763	[9091]	GETTABLE 	R51 R51 K96 ; R51 := R51["CachedHardModeDailyMissions"]
	764	[9091]	GETGLOBAL	R52 K2 ; R52 := 0x64fb1586
	765	[9091]	GETTABLE 	R53 R1 K3 ; R53 := R1["baseNodeName"]
	766	[9091]	CALL     	R52 2 2 ; R52 := R52(R53)
	767	[9091]	GETTABLE 	R51 R51 R52 ; R51 := R51[R52]
	768	[9091]	GETTABLE 	R10 R51 K98 ; R10 := R51["mission"]
	769	[9092]	JMP      	782 ; PC := 782
	770	[9093]	GETGLOBAL	R51 K5 ; R51 := 0x7f5022cf
	771	[9093]	GETTABLE 	R51 R51 K6 ; R51 := R51[0xa5c556b9]
	772	[9093]	MOVE     	R52 R3 ; R52 := R3
	773	[9093]	GETGLOBAL	R53 K7 ; R53 := HARD_MODE_TAG
	774	[9093]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	775	[9093]	TEST     	R51 0 ; if not R51 then PC := 782
	776	[9093]	JMP      	782 ; PC := 782
	777	[9094]	GETGLOBAL	R51 K22 ; R51 := 0x603636ad
	778	[9094]	LOADK    	R52 K89 ; R52 := "/Lotus/Language/Labels/HardMode"
	779	[9094]	LOADNIL  	R53 R53 ; R53 := nil
	780	[9094]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	781	[9094]	MOVE     	R12 R51 ; R12 := R51
	782	[9097]	TEST     	R10 1 ; if R10 then PC := 899
	783	[9097]	JMP      	899 ; PC := 899
	784	[9098]	TEST     	R2 0 ; if not R2 then PC := 789
	785	[9098]	JMP      	789 ; PC := 789
	786	[9099]	GETGLOBAL	R51 K12 ; R51 := 0x3d106989
	787	[9099]	LOADK    	R52 K99 ; R52 := "Using sector data"
	788	[9099]	CALL     	R51 2 1 ; R51(R52)
	789	[9103]	MOVE     	R10 R9 ; R10 := R9
	790	[9104]	SETTABLE 	R10 K100 R14 ; R10["nightmare"] := R14
	791	[9105]	SETTABLE 	R10 K101 R15 ; R10["voidStorm"] := R15
	792	[9106]	TEST     	R15 0 ; if not R15 then PC := 821
	793	[9106]	JMP      	821 ; PC := 821
	794	[9106]	GETGLOBAL	R51 K16 ; R51 := _T
	795	[9106]	GETTABLE 	R51 R51 K102 ; R51 := R51["CachedVoidStormMissions"]
	796	[9106]	EQ       	1 R51 K8 ; if R51 == nil then PC := 821
	797	[9106]	JMP      	821 ; PC := 821
	798	[9107]	GETGLOBAL	R51 K16 ; R51 := _T
	799	[9107]	GETTABLE 	R51 R51 K102 ; R51 := R51["CachedVoidStormMissions"]
	800	[9107]	GETGLOBAL	R52 K2 ; R52 := 0x64fb1586
	801	[9107]	GETTABLE 	R53 R1 K3 ; R53 := R1["baseNodeName"]
	802	[9107]	CALL     	R52 2 2 ; R52 := R52(R53)
	803	[9107]	GETTABLE 	R51 R51 R52 ; R51 := R51[R52]
	804	[9108]	TEST     	R51 0 ; if not R51 then PC := 821
	805	[9108]	JMP      	821 ; PC := 821
	806	[9109]	GETTABLE 	R52 R51 K104 ; R52 := R51["tier"]
	807	[9109]	SETTABLE 	R10 K103 R52 ; R10["activeMissionTag"] := R52
	808	[9110]	GETTABLE 	R52 R51 K105 ; R52 := R51["enemyLevelIncrease"]
	809	[9111]	GETTABLE 	R53 R10 K74 ; R53 := R10["minEnemyLevel"]
	810	[9111]	ADD      	R53 R53 R52 ; R53 := R53 + R52
	811	[9111]	SETTABLE 	R10 K74 R53 ; R10["minEnemyLevel"] := R53
	812	[9112]	GETTABLE 	R53 R10 K106 ; R53 := R10["maxEnemyLevel"]
	813	[9112]	ADD      	R53 R53 R52 ; R53 := R53 + R52
	814	[9112]	SETTABLE 	R10 K106 R53 ; R10["maxEnemyLevel"] := R53
	815	[9113]	GETTABLE 	R53 R10 K107 ; R53 := R10["minSpaceEnemyLevel"]
	816	[9113]	ADD      	R53 R53 R52 ; R53 := R53 + R52
	817	[9113]	SETTABLE 	R10 K107 R53 ; R10["minSpaceEnemyLevel"] := R53
	818	[9114]	GETTABLE 	R53 R10 K108 ; R53 := R10["maxSpaceEnemyLevel"]
	819	[9114]	ADD      	R53 R53 R52 ; R53 := R53 + R52
	820	[9114]	SETTABLE 	R10 K108 R53 ; R10["maxSpaceEnemyLevel"] := R53
	821	[9118]	TEST     	R14 0 ; if not R14 then PC := 827
	822	[9118]	JMP      	827 ; PC := 827
	823	[9118]	GETTABLE 	R53 R10 K109 ; R53 := R10["missionType"]
	824	[9118]	EQ       	0 R53 K110 ; if R53 ~= 8.000000 then PC := 827
	825	[9118]	JMP      	827 ; PC := 827
	826	[9119]	SETTABLE 	R10 K111 K112 ; R10["maxWaveNum"] := 10.000000
	827	[9123]	GETTABLE 	R53 R10 K113 ; R53 := R10["archwingRequired"]
	828	[9123]	TEST     	R53 1 ; if R53 then PC := 885
	829	[9123]	JMP      	885 ; PC := 885
	830	[9123]	GETGLOBAL	R53 K0 ; R53 := 0x7b998233
	831	[9123]	GETTABLE 	R54 R10 K114 ; R54 := R10["keyChainName"]
	832	[9123]	CALL     	R53 2 2 ; R53 := R53(R54)
	833	[9123]	TEST     	R53 0 ; if not R53 then PC := 885
	834	[9123]	JMP      	885 ; PC := 885
	835	[9123]	GETGLOBAL	R53 K0 ; R53 := 0x7b998233
	836	[9123]	GETTABLE 	R54 R10 K115 ; R54 := R10["levelOverride"]
	837	[9123]	CALL     	R53 2 2 ; R53 := R53(R54)
	838	[9123]	TEST     	R53 1 ; if R53 then PC := 885
	839	[9123]	JMP      	885 ; PC := 885
	840	[9123]	GETGLOBAL	R53 K5 ; R53 := 0x7f5022cf
	841	[9123]	GETTABLE 	R53 R53 K6 ; R53 := R53[0xa5c556b9]
	842	[9123]	GETGLOBAL	R54 K2 ; R54 := 0x64fb1586
	843	[9123]	GETTABLE 	R55 R10 K115 ; R55 := R10["levelOverride"]
	844	[9123]	SELF     	R55 R55 K116 ; R56 := R55; R55 := R55[0xed4e0128]
	845	[9123]	CALL     	R55 2 0 ; R55,... := R55(R56)
	846	[9123]	CALL     	R54 0 2 ; R54 := R54(R55,...)
	847	[9123]	LOADK    	R55 K117 ; R55 := "Zariman"
	848	[9123]	CALL     	R53 3 2 ; R53 := R53(R54,R55)
	849	[9123]	EQ       	0 R53 K8 ; if R53 ~= nil then PC := 885
	850	[9123]	JMP      	885 ; PC := 885
	851	[9124]	LOADNIL  	R53 R53 ; R53 := nil
	852	[9125]	GETGLOBAL	R54 K118 ; R54 := 0xe7f2b02f
	853	[9125]	SELF     	R54 R54 K119 ; R55 := R54; R54 := R54[0x6d0aa187]
	854	[9125]	CALL     	R54 2 2 ; R54 := R54(R55)
	855	[9126]	GETGLOBAL	R55 K59 ; R55 := 0xcfc01047
	856	[9126]	MOVE     	R56 R54 ; R56 := R54
	857	[9126]	CALL     	R55 2 4 ; R55,R56,R57 := R55(R56)
	858	[9126]	JMP      	883 ; PC := 883
	859	[9127]	GETGLOBAL	R60 K120 ; R60 := cjson
	860	[9127]	GETTABLE 	R60 R60 K121 ; R60 := R60[0x7ab914d8]
	861	[9127]	GETTABLE 	R61 R59 K122 ; R61 := R59["loadout"]
	862	[9127]	CALL     	R60 2 2 ; R60 := R60(R61)
	863	[9128]	TEST     	R60 0 ; if not R60 then PC := 883
	864	[9128]	JMP      	883 ; PC := 883
	865	[9128]	GETTABLE 	R61 R60 K123 ; R61 := R60["Nemesis"]
	866	[9128]	TEST     	R61 1 ; if R61 then PC := 883
	867	[9128]	JMP      	883 ; PC := 883
	868	[9129]	GETTABLE 	R61 R10 K51 ; R61 := R10["faction"]
	869	[9129]	EQ       	0 R61 K124 ; if R61 ~= 0.000000 then PC := 873
	870	[9129]	JMP      	873 ; PC := 873
	871	[9130]	GETUPVAL 	R53 U3 ; R53 := U3
	872	[9130]	JMP      	877 ; PC := 877
	873	[9131]	GETTABLE 	R61 R10 K51 ; R61 := R10["faction"]
	874	[9131]	EQ       	0 R61 K10 ; if R61 ~= 1.000000 then PC := 877
	875	[9131]	JMP      	877 ; PC := 877
	876	[9132]	GETUPVAL 	R53 U4 ; R53 := U4
	877	[9137]	TEST     	R53 0 ; if not R53 then PC := 883
	878	[9137]	JMP      	883 ; PC := 883
	879	[9138]	SELF     	R61 R10 K125 ; R62 := R10; R61 := R10[0x5c0d8c92]
	880	[9138]	MOVE     	R63 R53 ; R63 := R53
	881	[9138]	CALL     	R61 3 1 ; R61(R62,R63)
	882	[9139]	JMP      	885 ; PC := 885
	883	[9126]	TFORLOOP 	R55 2 ; R58,R59 := R55(R56,R57); if R58 ~= nil then begin PC = 859; R57 := R58 end
	884	[9141]	JMP      	859 ; PC := 859
	885	[9145]	GETTABLE 	R61 R8 K1 ; R61 := R8["name"]
	886	[9145]	GETGLOBAL	R62 K126 ; R62 := ENTRATI_LANDSCAPE_NODE_TAG
	887	[9145]	EQ       	0 R61 R62 ; if R61 ~= R62 then PC := 899
	888	[9145]	JMP      	899 ; PC := 899
	889	[9145]	GETUPVAL 	R61 U5 ; R61 := U5
	890	[9145]	CALL     	R61 1 2 ; R61 := R61()
	891	[9145]	TEST     	R61 1 ; if R61 then PC := 899
	892	[9145]	JMP      	899 ; PC := 899
	893	[9145]	GETGLOBAL	R61 K0 ; R61 := 0x7b998233
	894	[9145]	GETGLOBAL	R62 K127 ; R62 := 0x83f4e77c
	895	[9145]	CALL     	R61 2 2 ; R61 := R61(R62)
	896	[9145]	TEST     	R61 1 ; if R61 then PC := 899
	897	[9145]	JMP      	899 ; PC := 899
	898	[9147]	SETTABLE 	R10 K128 K129 ; R10["soloMode"] := true
	899	[9151]	GETTABLE 	R61 R8 K130 ; R61 := R8["missionTag"]
	900	[9151]	GETGLOBAL	R62 K11 ; R62 := 0x0469f296
	901	[9151]	LOADK    	R63 K131 ; R63 := "RECONSTRUCTION"
	902	[9151]	CALL     	R62 2 2 ; R62 := R62(R63)
	903	[9151]	EQ       	0 R61 R62 ; if R61 ~= R62 then PC := 936
	904	[9151]	JMP      	936 ; PC := 936
	905	[9152]	GETGLOBAL	R61 K16 ; R61 := _T
	906	[9152]	GETTABLE 	R61 R61 K132 ; R61 := R61["CachedConstructionProjects"]
	907	[9152]	TEST     	R61 0 ; if not R61 then PC := 936
	908	[9152]	JMP      	936 ; PC := 936
	909	[9153]	GETGLOBAL	R61 K59 ; R61 := 0xcfc01047
	910	[9153]	GETGLOBAL	R62 K16 ; R62 := _T
	911	[9153]	GETTABLE 	R62 R62 K132 ; R62 := R62["CachedConstructionProjects"]
	912	[9153]	CALL     	R61 2 4 ; R61,R62,R63 := R61(R62)
	913	[9153]	JMP      	934 ; PC := 934
	914	[9154]	GETTABLE 	R66 R65 K133 ; R66 := R65["info"]
	915	[9154]	GETTABLE 	R66 R66 K134 ; R66 := R66["mNode"]
	916	[9154]	GETTABLE 	R67 R1 K3 ; R67 := R1["baseNodeName"]
	917	[9154]	EQ       	0 R66 R67 ; if R66 ~= R67 then PC := 934
	918	[9154]	JMP      	934 ; PC := 934
	919	[9154]	GETTABLE 	R66 R65 K135 ; R66 := R65["progress"]
	920	[9154]	EQ       	0 R66 K10 ; if R66 ~= 1.000000 then PC := 934
	921	[9154]	JMP      	934 ; PC := 934
	922	[9155]	GETGLOBAL	R66 K22 ; R66 := 0x603636ad
	923	[9155]	GETTABLE 	R67 R8 K136 ; R67 := R8["locTag"]
	924	[9155]	SELF     	R67 R67 K137 ; R68 := R67; R67 := R67[0x6d604ba7]
	925	[9155]	CALL     	R67 2 2 ; R67 := R67(R68)
	926	[9155]	LOADNIL  	R68 R68 ; R68 := nil
	927	[9155]	CALL     	R66 3 2 ; R66 := R66(R67,R68)
	928	[9156]	GETGLOBAL	R67 K22 ; R67 := 0x603636ad
	929	[9156]	LOADK    	R68 K138 ; R68 := "/Lotus/Language/RelayReconstruction/ReconstructionSiteAttack"
	930	[9156]	NEWTABLE 	R69 0 1 ; R69 := {}
	931	[9156]	SETTABLE 	R69 K139 R66 ; R69["LOCATION"] := R66
	932	[9156]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	933	[9156]	MOVE     	R11 R67 ; R11 := R67
	934	[9153]	TFORLOOP 	R61 2 ; R64,R65 := R61(R62,R63); if R64 ~= nil then begin PC = 914; R63 := R64 end
	935	[9157]	JMP      	914 ; PC := 914
	936	[9162]	GETTABLE 	R67 R8 K1 ; R67 := R8["name"]
	937	[9162]	GETGLOBAL	R68 K140 ; R68 := APARTMENT_NODE_TAG
	938	[9162]	EQ       	0 R67 R68 ; if R67 ~= R68 then PC := 945
	939	[9162]	JMP      	945 ; PC := 945
	940	[9163]	GETGLOBAL	R67 K22 ; R67 := 0x603636ad
	941	[9163]	LOADK    	R68 K141 ; R68 := "/Lotus/Language/Zariman/ZarimanApartment"
	942	[9163]	NEWTABLE 	R69 0 0 ; R69 := {}
	943	[9163]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	944	[9163]	MOVE     	R11 R67 ; R11 := R67
	945	[9166]	SETTABLE 	R10 K142 K8 ; R10["levelKeyName"] := nil
	946	[9167]	TEST     	R11 1 ; if R11 then PC := 955
	947	[9167]	JMP      	955 ; PC := 955
	948	[9168]	GETGLOBAL	R67 K22 ; R67 := 0x603636ad
	949	[9168]	GETTABLE 	R68 R8 K136 ; R68 := R8["locTag"]
	950	[9168]	SELF     	R68 R68 K137 ; R69 := R68; R68 := R68[0x6d604ba7]
	951	[9168]	CALL     	R68 2 2 ; R68 := R68(R69)
	952	[9168]	LOADNIL  	R69 R69 ; R69 := nil
	953	[9168]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	954	[9168]	MOVE     	R11 R67 ; R11 := R67
	955	[9170]	GETTABLE 	R13 R7 K1 ; R13 := R7["name"]
	956	[9170]	JMP      	1100 ; PC := 1100
	957	[9173]	TEST     	R2 0 ; if not R2 then PC := 962
	958	[9173]	JMP      	962 ; PC := 962
	959	[9174]	GETGLOBAL	R67 K12 ; R67 := 0x3d106989
	960	[9174]	LOADK    	R68 K143 ; R68 := "No sector"
	961	[9174]	CALL     	R67 2 1 ; R67(R68)
	962	[9177]	EQ       	0 R3 K144 ; if R3 ~= "Photobooth" then PC := 981
	963	[9177]	JMP      	981 ; PC := 981
	964	[9178]	GETGLOBAL	R67 K67 ; R67 := 0x6c97a788
	965	[9178]	GETTABLE 	R67 R67 K145 ; R67 := R67[0x6e0e9f85]
	966	[9178]	CALL     	R67 1 2 ; R67 := R67()
	967	[9178]	MOVE     	R10 R67 ; R10 := R67
	968	[9179]	GETGLOBAL	R67 K147 ; R67 := 0x7ed0a956
	969	[9179]	LOADK    	R68 K148 ; R68 := "/Lotus/Types/GameRules/LotusPhotoBoothGameRules"
	970	[9179]	CALL     	R67 2 2 ; R67 := R67(R68)
	971	[9179]	SETTABLE 	R10 K146 R67 ; R10["gameRules"] := R67
	972	[9180]	GETGLOBAL	R67 K22 ; R67 := 0x603636ad
	973	[9180]	LOADK    	R68 K149 ; R68 := "/Lotus/Language/Menu/Loadout_Photobooth"
	974	[9180]	LOADNIL  	R69 R69 ; R69 := nil
	975	[9180]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	976	[9180]	MOVE     	R11 R67 ; R11 := R67
	977	[9181]	MOVE     	R67 R10 ; R67 := R10
	978	[9181]	MOVE     	R68 R11 ; R68 := R11
	979	[9181]	RETURN   	R67 3 ; return R67, R68 
	980	[9181]	JMP      	999 ; PC := 999
	981	[9182]	EQ       	0 R3 K150 ; if R3 ~= "Simulacrum" then PC := 999
	982	[9182]	JMP      	999 ; PC := 999
	983	[9183]	GETGLOBAL	R67 K67 ; R67 := 0x6c97a788
	984	[9183]	GETTABLE 	R67 R67 K145 ; R67 := R67[0x6e0e9f85]
	985	[9183]	CALL     	R67 1 2 ; R67 := R67()
	986	[9183]	MOVE     	R10 R67 ; R10 := R67
	987	[9184]	GETGLOBAL	R67 K147 ; R67 := 0x7ed0a956
	988	[9184]	LOADK    	R68 K151 ; R68 := "/Lotus/Types/GameRules/LotusDangerRoomGameRules"
	989	[9184]	CALL     	R67 2 2 ; R67 := R67(R68)
	990	[9184]	SETTABLE 	R10 K146 R67 ; R10["gameRules"] := R67
	991	[9185]	GETGLOBAL	R67 K22 ; R67 := 0x603636ad
	992	[9185]	LOADK    	R68 K152 ; R68 := "/Lotus/Language/Game/DangerRoomConsole"
	993	[9185]	LOADNIL  	R69 R69 ; R69 := nil
	994	[9185]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	995	[9185]	MOVE     	R11 R67 ; R11 := R67
	996	[9186]	MOVE     	R67 R10 ; R67 := R10
	997	[9186]	MOVE     	R68 R11 ; R68 := R11
	998	[9186]	RETURN   	R67 3 ; return R67, R68 
	999	[9189]	GETGLOBAL	R67 K5 ; R67 := 0x7f5022cf
	1000	[9189]	GETTABLE 	R67 R67 K6 ; R67 := R67[0xa5c556b9]
	1001	[9189]	MOVE     	R68 R3 ; R68 := R3
	1002	[9189]	GETGLOBAL	R69 K153 ; R69 := KEY_TAG
	1003	[9189]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	1004	[9190]	EQ       	1 R67 K8 ; if R67 == nil then PC := 1075
	1005	[9190]	JMP      	1075 ; PC := 1075
	1006	[9191]	TEST     	R2 0 ; if not R2 then PC := 1011
	1007	[9191]	JMP      	1011 ; PC := 1011
	1008	[9192]	GETGLOBAL	R68 K12 ; R68 := 0x3d106989
	1009	[9192]	LOADK    	R69 K154 ; R69 := "Key index found"
	1010	[9192]	CALL     	R68 2 1 ; R68(R69)
	1011	[9195]	GETGLOBAL	R68 K5 ; R68 := 0x7f5022cf
	1012	[9195]	GETTABLE 	R68 R68 K9 ; R68 := R68[0x1a94c9cc]
	1013	[9195]	MOVE     	R69 R3 ; R69 := R3
	1014	[9195]	LOADK    	R70 := 1.000000
	1015	[9195]	SUB      	R71 R67 K10 ; R71 := R67 - 1.000000
	1016	[9195]	CALL     	R68 4 2 ; R68 := R68(R69,R70,R71)
	1017	[9196]	GETGLOBAL	R69 K86 ; R69 := 0xb009bbc6
	1018	[9196]	MOVE     	R70 R68 ; R70 := R68
	1019	[9196]	CALL     	R69 2 2 ; R69 := R69(R70)
	1020	[9197]	GETGLOBAL	R70 K0 ; R70 := 0x7b998233
	1021	[9197]	MOVE     	R71 R69 ; R71 := R69
	1022	[9197]	CALL     	R70 2 2 ; R70 := R70(R71)
	1023	[9197]	TEST     	R70 1 ; if R70 then PC := 1075
	1024	[9197]	JMP      	1075 ; PC := 1075
	1025	[9198]	SELF     	R70 R69 K155 ; R71 := R69; R70 := R69[0x6c053909]
	1026	[9198]	CALL     	R70 2 2 ; R70 := R70(R71)
	1027	[9199]	TEST     	R2 0 ; if not R2 then PC := 1032
	1028	[9199]	JMP      	1032 ; PC := 1032
	1029	[9200]	GETGLOBAL	R71 K12 ; R71 := 0x3d106989
	1030	[9200]	LOADK    	R72 K156 ; R72 := "Getting mission from key"
	1031	[9200]	CALL     	R71 2 1 ; R71(R72)
	1032	[9202]	SELF     	R71 R69 K157 ; R72 := R69; R71 := R69[0xef893aec]
	1033	[9202]	CALL     	R71 2 2 ; R71 := R71(R72)
	1034	[9202]	MOVE     	R10 R71 ; R10 := R71
	1035	[9203]	GETGLOBAL	R71 K147 ; R71 := 0x7ed0a956
	1036	[9203]	MOVE     	R72 R68 ; R72 := R68
	1037	[9203]	CALL     	R71 2 2 ; R71 := R71(R72)
	1038	[9203]	SETTABLE 	R10 K142 R71 ; R10["levelKeyName"] := R71
	1039	[9204]	GETTABLE 	R71 R1 K158 ; R71 := R1["quest"]
	1040	[9204]	EQ       	1 R71 K8 ; if R71 == nil then PC := 1046
	1041	[9204]	JMP      	1046 ; PC := 1046
	1042	[9205]	GETGLOBAL	R71 K147 ; R71 := 0x7ed0a956
	1043	[9205]	GETTABLE 	R72 R1 K158 ; R72 := R1["quest"]
	1044	[9205]	CALL     	R71 2 2 ; R71 := R71(R72)
	1045	[9205]	SETTABLE 	R10 K114 R71 ; R10["keyChainName"] := R71
	1046	[9208]	GETTABLE 	R71 R1 K159 ; R71 := R1["difficulty"]
	1047	[9208]	EQ       	1 R71 K8 ; if R71 == nil then PC := 1054
	1048	[9208]	JMP      	1054 ; PC := 1054
	1049	[9208]	GETTABLE 	R71 R1 K159 ; R71 := R1["difficulty"]
	1050	[9208]	LE       	0 K124 R71 ; if 0.000000 > R71 then PC := 1054
	1051	[9208]	JMP      	1054 ; PC := 1054
	1052	[9209]	GETTABLE 	R71 R1 K159 ; R71 := R1["difficulty"]
	1053	[9209]	SETTABLE 	R10 K159 R71 ; R10["difficulty"] := R71
	1054	[9212]	GETTABLE 	R71 R10 K83 ; R71 := R10["uniqueName"]
	1055	[9212]	EQ       	1 R71 K160 ; if R71 == "" then PC := 1063
	1056	[9212]	JMP      	1063 ; PC := 1063
	1057	[9213]	GETGLOBAL	R71 K22 ; R71 := 0x603636ad
	1058	[9213]	GETTABLE 	R72 R10 K83 ; R72 := R10["uniqueName"]
	1059	[9213]	OP_LOADBOOL	R73 0 0 ; R73 := false
	1060	[9213]	CALL     	R71 3 2 ; R71 := R71(R72,R73)
	1061	[9213]	MOVE     	R11 R71 ; R11 := R71
	1062	[9213]	JMP      	1071 ; PC := 1071
	1063	[9215]	GETGLOBAL	R71 K22 ; R71 := 0x603636ad
	1064	[9215]	GETGLOBAL	R72 K2 ; R72 := 0x64fb1586
	1065	[9215]	SELF     	R73 R69 K161 ; R74 := R69; R73 := R69[0xd3a9d01f]
	1066	[9215]	CALL     	R73 2 0 ; R73,... := R73(R74)
	1067	[9215]	CALL     	R72 0 2 ; R72 := R72(R73,...)
	1068	[9215]	OP_LOADBOOL	R73 0 0 ; R73 := false
	1069	[9215]	CALL     	R71 3 2 ; R71 := R71(R72,R73)
	1070	[9215]	MOVE     	R11 R71 ; R11 := R71
	1071	[9218]	SELF     	R71 R0 K162 ; R72 := R0; R71 := R0[0xc1dee03f]
	1072	[9218]	CALL     	R71 2 2 ; R71 := R71(R72)
	1073	[9218]	GETTABLE 	R71 R71 R70 ; R71 := R71[R70]
	1074	[9218]	GETTABLE 	R13 R71 K1 ; R13 := R71["name"]
	1075	[9222]	TEST     	R10 0 ; if not R10 then PC := 1100
	1076	[9222]	JMP      	1100 ; PC := 1100
	1077	[9223]	GETTABLE 	R71 R1 K163 ; R71 := R1["scenarioId"]
	1078	[9223]	TEST     	R71 0 ; if not R71 then PC := 1090
	1079	[9223]	JMP      	1090 ; PC := 1090
	1080	[9224]	GETTABLE 	R71 R1 K163 ; R71 := R1["scenarioId"]
	1081	[9224]	SETTABLE 	R10 K163 R71 ; R10["scenarioId"] := R71
	1082	[9226]	LOADNIL  	R13 R13 ; R13 := nil
	1083	[9227]	GETGLOBAL	R71 K22 ; R71 := 0x603636ad
	1084	[9227]	LOADK    	R72 K164 ; R72 := "/Lotus/Language/G1Quests/FlotillaOperation"
	1085	[9227]	LOADNIL  	R73 R73 ; R73 := nil
	1086	[9227]	CALL     	R71 3 2 ; R71 := R71(R72,R73)
	1087	[9227]	LOADK    	R72 K165 ; R72 := ": "
	1088	[9227]	MOVE     	R73 R11 ; R73 := R11
	1089	[9227]	CONCAT   	R11 R71 R73 ; R11 := R71 .. R72 .. R73
	1090	[9230]	GETTABLE 	R71 R1 K32 ; R71 := R1["goalId"]
	1091	[9230]	TEST     	R71 0 ; if not R71 then PC := 1095
	1092	[9230]	JMP      	1095 ; PC := 1095
	1093	[9231]	GETTABLE 	R71 R1 K32 ; R71 := R1["goalId"]
	1094	[9231]	SETTABLE 	R10 K32 R71 ; R10["goalId"] := R71
	1095	[9234]	GETTABLE 	R71 R1 K166 ; R71 := R1["metadata"]
	1096	[9234]	TEST     	R71 0 ; if not R71 then PC := 1100
	1097	[9234]	JMP      	1100 ; PC := 1100
	1098	[9235]	GETTABLE 	R71 R1 K166 ; R71 := R1["metadata"]
	1099	[9235]	SETTABLE 	R10 K166 R71 ; R10["metadata"] := R71
	1100	[9240]	TEST     	R13 0 ; if not R13 then PC := 1127
	1101	[9240]	JMP      	1127 ; PC := 1127
	1102	[9240]	TEST     	R16 1 ; if R16 then PC := 1127
	1103	[9240]	JMP      	1127 ; PC := 1127
	1104	[9240]	GETTABLE 	R71 R10 K109 ; R71 := R10["missionType"]
	1105	[9240]	EQ       	1 R71 K167 ; if R71 == 30.000000 then PC := 1127
	1106	[9240]	JMP      	1127 ; PC := 1127
	1107	[9241]	GETUPVAL 	R71 U1 ; R71 := U1
	1108	[9241]	GETTABLE 	R71 R71 K73 ; R71 := R71[0x06d055f9]
	1109	[9241]	GETTABLE 	R72 R10 K109 ; R72 := R10["missionType"]
	1110	[9241]	EQ       	1 R72 K168 ; if R72 == 31.000000 then PC := 1113
	1111	[9241]	JMP      	1113 ; PC := 1113
	1112	[9241]	OP_LOADBOOL	R72 0 1 ; R72 := false; PC := 1113
	1113	[9241]	OP_LOADBOOL	R72 1 0 ; R72 := true
	1114	[9241]	LOADK    	R73 K169 ; R73 := "_SPACE"
	1115	[9241]	LOADK    	R74 K160 ; R74 := ""
	1116	[9241]	CALL     	R71 4 2 ; R71 := R71(R72,R73,R74)
	1117	[9242]	MOVE     	R72 R11 ; R72 := R11
	1118	[9242]	LOADK    	R73 K53 ; R73 := " ("
	1119	[9242]	GETGLOBAL	R74 K22 ; R74 := 0x603636ad
	1120	[9242]	MOVE     	R75 R13 ; R75 := R13
	1121	[9242]	MOVE     	R76 R71 ; R76 := R71
	1122	[9242]	CONCAT   	R75 R75 R76 ; R75 := R75 .. R76
	1123	[9242]	OP_LOADBOOL	R76 0 0 ; R76 := false
	1124	[9242]	CALL     	R74 3 2 ; R74 := R74(R75,R76)
	1125	[9242]	LOADK    	R75 K57 ; R75 := ")"
	1126	[9242]	CONCAT   	R11 R72 R75 ; R11 := R72 .. R73 .. R74 .. R75
	1127	[9244]	TEST     	R12 0 ; if not R12 then PC := 1133
	1128	[9244]	JMP      	1133 ; PC := 1133
	1129	[9245]	MOVE     	R72 R11 ; R72 := R11
	1130	[9245]	LOADK    	R73 K170 ; R73 := " - "
	1131	[9245]	MOVE     	R74 R12 ; R74 := R12
	1132	[9245]	CONCAT   	R11 R72 R74 ; R11 := R72 .. R73 .. R74
	1133	[9248]	TEST     	R10 0 ; if not R10 then PC := 1139
	1134	[9248]	JMP      	1139 ; PC := 1139
	1135	[9249]	MOVE     	R72 R10 ; R72 := R10
	1136	[9249]	MOVE     	R73 R11 ; R73 := R11
	1137	[9249]	RETURN   	R72 3 ; return R72, R73 
	1138	[9249]	JMP      	1146 ; PC := 1146
	1139	[9251]	GETGLOBAL	R72 K12 ; R72 := 0x3d106989
	1140	[9251]	LOADK    	R73 K171 ; R73 := "GetMissionVoteInfo failed for "
	1141	[9251]	GETGLOBAL	R74 K2 ; R74 := 0x64fb1586
	1142	[9251]	GETTABLE 	R75 R1 K1 ; R75 := R1["name"]
	1143	[9251]	CALL     	R74 2 2 ; R74 := R74(R75)
	1144	[9251]	CONCAT   	R73 R73 R74 ; R73 := R73 .. R74
	1145	[9251]	CALL     	R72 2 1 ; R72(R73)
	1146	[9255]	LOADNIL  	R72 R74 ; R72 := R73 := R74 := nil
	1147	[9255]	RETURN   	R72 4 ; return R72, R73, R74 
	1148	[9256]	RETURN   	R0 1 ; return 

function #405 <?:9258,9274> (31 instructions, 124 bytes at 0000025274F4D5B0)
2 params, 7 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[9260]	EQ       	1 R0 K0 ; if R0 == nil then PC := 5
	2	[9260]	JMP      	5 ; PC := 5
	3	[9260]	EQ       	0 R0 K1 ; if R0 ~= "" then PC := 6
	4	[9260]	JMP      	6 ; PC := 6
	5	[9260]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 6
	6	[9260]	OP_LOADBOOL	R2 1 0 ; R2 := true
	7	[9261]	GETGLOBAL	R3 K2 ; R3 := 0x0997dbe6
	8	[9261]	LOADK    	R4 := 0.000000
	9	[9261]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[9261]	EQ       	1 R1 R3 ; if R1 == R3 then PC := 26
	11	[9261]	JMP      	26 ; PC := 26
	12	[9262]	TEST     	R2 0 ; if not R2 then PC := 22
	13	[9262]	JMP      	22 ; PC := 22
	14	[9263]	MOVE     	R3 R0 ; R3 := R0
	15	[9263]	LOADK    	R4 K3 ; R4 := "_"
	16	[9263]	GETGLOBAL	R5 K4 ; R5 := 0x64fb1586
	17	[9263]	MOVE     	R6 R1 ; R6 := R1
	18	[9263]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[9263]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	20	[9263]	RETURN   	R3 2 ; return R3 
	21	[9263]	JMP      	26 ; PC := 26
	22	[9265]	GETGLOBAL	R3 K4 ; R3 := 0x64fb1586
	23	[9265]	MOVE     	R4 R1 ; R4 := R1
	24	[9265]	TAILCALL 	R3 2 0 ; R3,... := R3(R4)
	25	[9265]	RETURN   	R3 0 ; return R3,... 
	26	[9269]	TEST     	R2 0 ; if not R2 then PC := 29
	27	[9269]	JMP      	29 ; PC := 29
	28	[9270]	RETURN   	R0 2 ; return R0 
	29	[9273]	LOADK    	R3 K1 ; R3 := ""
	30	[9273]	RETURN   	R3 2 ; return R3 
	31	[9274]	RETURN   	R0 1 ; return 

function #406 <?:9276,9294> (41 instructions, 164 bytes at 0000025274F4D7C0)
0 params, 6 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[9277]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[9277]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[9277]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9277]	TEST     	R0 1 ; if R0 then PC := 41
	5	[9277]	JMP      	41 ; PC := 41
	6	[9278]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	7	[9278]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x41f4ba99]
	8	[9278]	CALL     	R0 2 1 ; R0(R1)
	9	[9279]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	10	[9279]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x62c81b76]
	11	[9279]	CALL     	R0 2 2 ; R0 := R0(R1)
	12	[9280]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xb61abfd2]
	13	[9280]	LOADK    	R3 := 1.000000
	14	[9280]	LOADK    	R4 := 0.000000
	15	[9280]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	16	[9282]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	17	[9282]	GETTABLE 	R3 R1 K6 ; R3 := R1["mItemType"]
	18	[9282]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[9282]	TEST     	R2 0 ; if not R2 then PC := 41
	20	[9282]	JMP      	41 ; PC := 41
	21	[9283]	GETUPVAL 	R2 U0 ; R2 := U0
	22	[9283]	CALL     	R2 1 2 ; R2 := R2()
	23	[9284]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	24	[9284]	MOVE     	R4 R2 ; R4 := R2
	25	[9284]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[9284]	TEST     	R3 1 ; if R3 then PC := 30
	27	[9284]	JMP      	30 ; PC := 30
	28	[9285]	SELF     	R3 R2 K7 ; R4 := R2; R3 := R2[0xa2880940]
	29	[9285]	CALL     	R3 2 1 ; R3(R4)
	30	[9288]	GETUPVAL 	R3 U1 ; R3 := U1
	31	[9288]	GETTABLE 	R3 R3 K8 ; R3 := R3[0xa9882367]
	32	[9288]	LOADK    	R4 K9 ; R4 := "MoaInteractionAction"
	33	[9288]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[9289]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	35	[9289]	MOVE     	R5 R3 ; R5 := R3
	36	[9289]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[9289]	TEST     	R4 1 ; if R4 then PC := 41
	38	[9289]	JMP      	41 ; PC := 41
	39	[9290]	SELF     	R4 R3 K10 ; R5 := R3; R4 := R3[0xf4e253b6]
	40	[9290]	CALL     	R4 2 1 ; R4(R5)
	41	[9294]	RETURN   	R0 1 ; return 

function #407 <?:9296,9314> (42 instructions, 168 bytes at 0000025274F4DAD0)
1 param, 17 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[9297]	GETGLOBAL	R1 K0 ; R1 := 0xb009bbc6
	2	[9297]	GETTABLE 	R2 R0 K1 ; R2 := R0["mItemType"]
	3	[9297]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9298]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x67bc9d36]
	5	[9298]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[9299]	GETTABLE 	R3 R0 K3 ; R3 := R0["mReqCredits"]
	7	[9300]	SUB      	R4 R2 R3 ; R4 := R2 - R3
	8	[9300]	DIV      	R4 R4 R2 ; R4 := R4 / R2
	9	[9300]	MUL      	R4 R4 K4 ; R4 := R4 * 0.200000
	10	[9302]	SELF     	R5 R1 K5 ; R6 := R1; R5 := R1[0xfc40d6a1]
	11	[9302]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[9303]	LOADK    	R6 := 1.000000
	13	[9303]	LEN      	R7 R5 ; R7 := # R5
	14	[9303]	LOADK    	R8 := 1.000000
	15	[9303]	FORPREP  	R6 40 ; R6 -= R8; PC := 40
	16	[9304]	LOADK    	R10 := 1.000000
	17	[9304]	GETTABLE 	R11 R0 K6 ; R11 := R0["mReqItems"]
	18	[9304]	LEN      	R11 R11 ; R11 := # R11
	19	[9304]	LOADK    	R12 := 1.000000
	20	[9304]	FORPREP  	R10 39 ; R10 -= R12; PC := 39
	21	[9305]	GETTABLE 	R14 R0 K6 ; R14 := R0["mReqItems"]
	22	[9305]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	23	[9305]	GETTABLE 	R14 R14 K1 ; R14 := R14["mItemType"]
	24	[9305]	GETTABLE 	R15 R5 R9 ; R15 := R5[R9]
	25	[9305]	GETTABLE 	R15 R15 K1 ; R15 := R15["mItemType"]
	26	[9305]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 39
	27	[9305]	JMP      	39 ; PC := 39
	28	[9306]	GETTABLE 	R14 R0 K6 ; R14 := R0["mReqItems"]
	29	[9306]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	30	[9306]	GETTABLE 	R14 R14 K7 ; R14 := R14["mItemCount"]
	31	[9308]	GETTABLE 	R15 R5 R9 ; R15 := R5[R9]
	32	[9308]	GETTABLE 	R15 R15 K7 ; R15 := R15["mItemCount"]
	33	[9308]	SUB      	R15 R15 R14 ; R15 := R15 - R14
	34	[9308]	GETTABLE 	R16 R5 R9 ; R16 := R5[R9]
	35	[9308]	GETTABLE 	R16 R16 K7 ; R16 := R16["mItemCount"]
	36	[9308]	DIV      	R15 R15 R16 ; R15 := R15 / R16
	37	[9308]	MUL      	R15 R15 K4 ; R15 := R15 * 0.200000
	38	[9308]	ADD      	R4 R4 R15 ; R4 := R4 + R15
	39	[9304]	FORLOOP  	R10 21 ; R10 += R12; if R10 <= R11 then begin PC := 21; R13 := R10 end
	40	[9303]	FORLOOP  	R6 16 ; R6 += R8; if R6 <= R7 then begin PC := 16; R9 := R6 end
	41	[9313]	RETURN   	R4 2 ; return R4 
	42	[9314]	RETURN   	R0 1 ; return 

function #408 <?:9316,9329> (59 instructions, 236 bytes at 0000025274F4DDF0)
1 param, 14 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[9317]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[9317]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	3	[9317]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9317]	TEST     	R1 1 ; if R1 then PC := 11
	5	[9317]	JMP      	11 ; PC := 11
	6	[9317]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	7	[9317]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xefee6c91]
	8	[9317]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[9317]	LT       	0 R1 K3 ; if R1 >= 30.000000 then PC := 58
	10	[9317]	JMP      	58 ; PC := 58
	11	[9318]	LOADNIL  	R1 R2 ; R1 := R2 := nil
	12	[9319]	GETGLOBAL	R3 K4 ; R3 := 0xc8802016
	13	[9319]	NEWTABLE 	R4 2 0 ; R4 := {}
	14	[9319]	LOADK    	R5 K5 ; R5 := "truemaster"
	15	[9319]	LOADK    	R6 K6 ; R6 := "truemasteralt"
	16	[9319]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	17	[9319]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	18	[9319]	JMP      	56 ; PC := 56
	19	[9320]	LOADK    	R8 K7 ; R8 := ":"
	20	[9320]	MOVE     	R9 R7 ; R9 := R7
	21	[9320]	LOADK    	R10 K7 ; R10 := ":"
	22	[9320]	CONCAT   	R7 R8 R10 ; R7 := R8 .. R9 .. R10
	23	[9321]	GETGLOBAL	R8 K8 ; R8 := 0x7f5022cf
	24	[9321]	GETTABLE 	R8 R8 K9 ; R8 := R8[0xa5c556b9]
	25	[9321]	GETGLOBAL	R9 K10 ; R9 := 0x83e41587
	26	[9321]	MOVE     	R10 R0 ; R10 := R0
	27	[9321]	CALL     	R9 2 2 ; R9 := R9(R10)
	28	[9321]	MOVE     	R10 R7 ; R10 := R7
	29	[9321]	CALL     	R8 3 3 ; R8,R9 := R8(R9,R10)
	30	[9321]	MOVE     	R2 R9 ; R2 := R9
	31	[9321]	MOVE     	R1 R8 ; R1 := R8
	32	[9322]	EQ       	1 R1 K11 ; if R1 == nil then PC := 56
	33	[9322]	JMP      	56 ; PC := 56
	34	[9323]	GETGLOBAL	R8 K8 ; R8 := 0x7f5022cf
	35	[9323]	GETTABLE 	R8 R8 K12 ; R8 := R8[0x66edf04f]
	36	[9323]	MOVE     	R9 R0 ; R9 := R0
	37	[9323]	GETGLOBAL	R10 K8 ; R10 := 0x7f5022cf
	38	[9323]	GETTABLE 	R10 R10 K13 ; R10 := R10[0x1a94c9cc]
	39	[9323]	MOVE     	R11 R0 ; R11 := R0
	40	[9323]	MOVE     	R12 R1 ; R12 := R1
	41	[9323]	MOVE     	R13 R2 ; R13 := R2
	42	[9323]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	43	[9323]	LOADK    	R11 K14 ; R11 := ":clem:"
	44	[9323]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	45	[9323]	MOVE     	R0 R8 ; R0 := R8
	46	[9324]	GETGLOBAL	R8 K8 ; R8 := 0x7f5022cf
	47	[9324]	GETTABLE 	R8 R8 K9 ; R8 := R8[0xa5c556b9]
	48	[9324]	GETGLOBAL	R9 K10 ; R9 := 0x83e41587
	49	[9324]	MOVE     	R10 R0 ; R10 := R0
	50	[9324]	CALL     	R9 2 2 ; R9 := R9(R10)
	51	[9324]	MOVE     	R10 R7 ; R10 := R7
	52	[9324]	CALL     	R8 3 3 ; R8,R9 := R8(R9,R10)
	53	[9324]	MOVE     	R2 R9 ; R2 := R9
	54	[9324]	MOVE     	R1 R8 ; R1 := R8
	55	[9324]	JMP      	32 ; PC := 32
	56	[9319]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 19; R5 := R6 end
	57	[9325]	JMP      	19 ; PC := 19
	58	[9328]	RETURN   	R0 2 ; return R0 
	59	[9329]	RETURN   	R0 1 ; return 

function #409 <?:9331,9333> (5 instructions, 20 bytes at 0000025274F4E260)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[9332]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[9332]	MOVE     	R2 R0 ; R2 := R0
	3	[9332]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[9332]	RETURN   	R1 0 ; return R1,... 
	5	[9333]	RETURN   	R0 1 ; return 

function #410 <?:9335,9344> (19 instructions, 76 bytes at 0000025274F4E350)
3 params, 8 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[9336]	EQ       	0 R2 K0 ; if R2 ~= nil then PC := 4
	2	[9336]	JMP      	4 ; PC := 4
	3	[9337]	OP_LOADBOOL	R2 0 0 ; R2 := false
	4	[9340]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	5	[9340]	GETGLOBAL	R4 K2 ; R4 := 0x25d99d89
	6	[9340]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[9340]	TEST     	R3 1 ; if R3 then PC := 19
	8	[9340]	JMP      	19 ; PC := 19
	9	[9341]	GETUPVAL 	R3 U0 ; R3 := U0
	10	[9341]	MOVE     	R4 R0 ; R4 := R0
	11	[9341]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[9341]	MOVE     	R0 R3 ; R0 := R3
	13	[9342]	GETGLOBAL	R3 K2 ; R3 := 0x25d99d89
	14	[9342]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x4ac9c4ef]
	15	[9342]	MOVE     	R5 R0 ; R5 := R0
	16	[9342]	MOVE     	R6 R1 ; R6 := R1
	17	[9342]	MOVE     	R7 R2 ; R7 := R2
	18	[9342]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	19	[9344]	RETURN   	R0 1 ; return 

function #411 <?:9346,9348> (7 instructions, 28 bytes at 0000025274F4E4F0)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[9347]	GETGLOBAL	R1 K0 ; R1 := SLOT_TYPES
	2	[9347]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	3	[9347]	TEST     	R1 1 ; if R1 then PC := 6
	4	[9347]	JMP      	6 ; PC := 6
	5	[9347]	LOADK    	R1 K1 ; R1 := "NOT_RECOGNIZED"
	6	[9347]	RETURN   	R1 2 ; return R1 
	7	[9348]	RETURN   	R0 1 ; return 

function #412 <?:9350,9374> (54 instructions, 216 bytes at 0000025274F4E650)
1 param, 8 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[9351]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[9351]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x1467d5f4]
	3	[9351]	CALL     	R1 1 2 ; R1 := R1()
	4	[9351]	TEST     	R1 1 ; if R1 then PC := 10
	5	[9351]	JMP      	10 ; PC := 10
	6	[9351]	GETGLOBAL	R1 K2 ; R1 := _T
	7	[9351]	GETTABLE 	R1 R1 K3 ; R1 := R1["ChatMaximized"]
	8	[9351]	TEST     	R1 0 ; if not R1 then PC := 12
	9	[9351]	JMP      	12 ; PC := 12
	10	[9352]	OP_LOADBOOL	R1 0 0 ; R1 := false
	11	[9352]	RETURN   	R1 2 ; return R1 
	12	[9355]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	13	[9355]	MOVE     	R2 R0 ; R2 := R0
	14	[9355]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[9355]	TEST     	R1 0 ; if not R1 then PC := 19
	16	[9355]	JMP      	19 ; PC := 19
	17	[9356]	OP_LOADBOOL	R1 1 0 ; R1 := true
	18	[9356]	RETURN   	R1 2 ; return R1 
	19	[9359]	GETGLOBAL	R1 K5 ; R1 := 0x76ea806b
	20	[9359]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x3f3ae64c]
	21	[9359]	LOADK    	R3 := 0.000000
	22	[9359]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	23	[9360]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	24	[9360]	MOVE     	R3 R1 ; R3 := R1
	25	[9360]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[9360]	TEST     	R2 0 ; if not R2 then PC := 30
	27	[9360]	JMP      	30 ; PC := 30
	28	[9361]	OP_LOADBOOL	R2 1 0 ; R2 := true
	29	[9361]	RETURN   	R2 2 ; return R2 
	30	[9364]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0x40e9c32b]
	31	[9364]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[9365]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	33	[9365]	MOVE     	R4 R2 ; R4 := R2
	34	[9365]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[9365]	TEST     	R3 0 ; if not R3 then PC := 39
	36	[9365]	JMP      	39 ; PC := 39
	37	[9366]	OP_LOADBOOL	R3 1 0 ; R3 := true
	38	[9366]	RETURN   	R3 2 ; return R3 
	39	[9369]	SELF     	R3 R2 K8 ; R4 := R2; R3 := R2[0x658fe518]
	40	[9369]	CALL     	R3 2 2 ; R3 := R3(R4)
	41	[9370]	EQ       	0 R3 K9 ; if R3 ~= 2.000000 then PC := 49
	42	[9370]	JMP      	49 ; PC := 49
	43	[9371]	SELF     	R4 R0 K10 ; R5 := R0; R4 := R0[0xe4162eed]
	44	[9371]	LOADK    	R6 K11 ; R6 := "IsEndOfMatch"
	45	[9371]	LOADK    	R7 K12 ; R7 := ""
	46	[9371]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	47	[9371]	NOT      	R4 R4 ; R4 := not R4
	48	[9371]	RETURN   	R4 2 ; return R4 
	49	[9373]	EQ       	1 R3 K13 ; if R3 == 1.000000 then PC := 52
	50	[9373]	JMP      	52 ; PC := 52
	51	[9373]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 52
	52	[9373]	OP_LOADBOOL	R4 1 0 ; R4 := true
	53	[9373]	RETURN   	R4 2 ; return R4 
	54	[9374]	RETURN   	R0 1 ; return 

function #413 <?:9376,9418> (112 instructions, 448 bytes at 0000025274F4EA30)
1 param, 11 slots, 2 upvalues, 0 locals, 40 constants, 0 functions
	1	[9377]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	2	[9377]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x18d05d30]
	3	[9377]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9377]	TEST     	R1 0 ; if not R1 then PC := 23
	5	[9377]	JMP      	23 ; PC := 23
	6	[9378]	GETGLOBAL	R1 K2 ; R1 := 0x25d99d89
	7	[9378]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xf14b6e0b]
	8	[9378]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[9378]	TEST     	R1 1 ; if R1 then PC := 16
	10	[9378]	JMP      	16 ; PC := 16
	11	[9379]	GETGLOBAL	R1 K4 ; R1 := 0x34291f5c
	12	[9379]	GETTABLE 	R1 R1 K5 ; R1 := R1[0x8ee24660]
	13	[9379]	OP_LOADBOOL	R2 0 0 ; R2 := false
	14	[9379]	CALL     	R1 2 1 ; R1(R2)
	15	[9380]	RETURN   	R0 1 ; return 
	16	[9383]	GETGLOBAL	R1 K6 ; R1 := _T
	17	[9383]	GETTABLE 	R1 R1 K7 ; R1 := R1["RailjackStopHullBreach"]
	18	[9383]	TEST     	R1 0 ; if not R1 then PC := 23
	19	[9383]	JMP      	23 ; PC := 23
	20	[9384]	GETGLOBAL	R1 K6 ; R1 := _T
	21	[9384]	GETTABLE 	R1 R1 K8 ; R1 := R1[0x6bc4e323]
	22	[9384]	CALL     	R1 1 1 ; R1()
	23	[9388]	GETGLOBAL	R1 K6 ; R1 := _T
	24	[9388]	SETTABLE 	R1 K9 R0 ; R1["AbortedRailjackMission"] := R0
	25	[9389]	GETGLOBAL	R1 K6 ; R1 := _T
	26	[9389]	GETTABLE 	R1 R1 K9 ; R1 := R1["AbortedRailjackMission"]
	27	[9389]	TEST     	R1 0 ; if not R1 then PC := 41
	28	[9389]	JMP      	41 ; PC := 41
	29	[9389]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	30	[9389]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x18d05d30]
	31	[9389]	CALL     	R1 2 2 ; R1 := R1(R2)
	32	[9389]	TEST     	R1 0 ; if not R1 then PC := 41
	33	[9389]	JMP      	41 ; PC := 41
	34	[9390]	GETGLOBAL	R1 K10 ; R1 := 0xbe190284
	35	[9390]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x751f061d]
	36	[9390]	GETGLOBAL	R3 K12 ; R3 := 0x0469f296
	37	[9390]	LOADK    	R4 K13 ; R4 := "RJMissionAborted"
	38	[9390]	CALL     	R3 2 2 ; R3 := R3(R4)
	39	[9390]	LOADK    	R4 := 1.000000
	40	[9390]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	41	[9393]	GETUPVAL 	R1 U0 ; R1 := U0
	42	[9393]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	43	[9393]	CALL     	R1 2 2 ; R1 := R1(R2)
	44	[9393]	TEST     	R1 0 ; if not R1 then PC := 49
	45	[9393]	JMP      	49 ; PC := 49
	46	[9394]	GETGLOBAL	R1 K6 ; R1 := _T
	47	[9394]	SETTABLE 	R1 K14 K15 ; R1["RailJackNextMissionNode"] := "ReplayQuest"
	48	[9394]	JMP      	90 ; PC := 90
	49	[9396]	LOADK    	R1 K16 ; R1 := "CrewBattleNodeDojo"
	50	[9397]	GETGLOBAL	R2 K17 ; R2 := 0x7b998233
	51	[9397]	GETGLOBAL	R3 K2 ; R3 := 0x25d99d89
	52	[9397]	CALL     	R2 2 2 ; R2 := R2(R3)
	53	[9397]	TEST     	R2 1 ; if R2 then PC := 68
	54	[9397]	JMP      	68 ; PC := 68
	55	[9397]	GETGLOBAL	R2 K18 ; R2 := 0xe7f2b02f
	56	[9397]	SELF     	R2 R2 K19 ; R3 := R2; R2 := R2[0xca33534d]
	57	[9397]	CALL     	R2 2 2 ; R2 := R2(R3)
	58	[9397]	TEST     	R2 0 ; if not R2 then PC := 68
	59	[9397]	JMP      	68 ; PC := 68
	60	[9398]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	61	[9398]	SELF     	R2 R2 K20 ; R3 := R2; R2 := R2[0xc8253330]
	62	[9398]	CALL     	R2 2 2 ; R2 := R2(R3)
	63	[9399]	GETGLOBAL	R3 K21 ; R3 := 0x64fb1586
	64	[9399]	GETTABLE 	R4 R2 K22 ; R4 := R2["location"]
	65	[9399]	CALL     	R3 2 2 ; R3 := R3(R4)
	66	[9399]	LOADK    	R4 K23 ; R4 := "_HUB"
	67	[9399]	CONCAT   	R1 R3 R4 ; R1 := R3 .. R4
	68	[9402]	GETGLOBAL	R3 K6 ; R3 := _T
	69	[9402]	GETGLOBAL	R4 K12 ; R4 := 0x0469f296
	70	[9402]	MOVE     	R5 R1 ; R5 := R1
	71	[9402]	CALL     	R4 2 2 ; R4 := R4(R5)
	72	[9402]	SETTABLE 	R3 K14 R4 ; R3["RailJackNextMissionNode"] := R4
	73	[9403]	GETGLOBAL	R3 K6 ; R3 := _T
	74	[9403]	GETGLOBAL	R4 K10 ; R4 := 0xbe190284
	75	[9403]	SELF     	R4 R4 K25 ; R5 := R4; R4 := R4[0xf2deaf69]
	76	[9403]	GETGLOBAL	R6 K26 ; R6 := gLotusAttractModeGameRulesType
	77	[9403]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	78	[9403]	SETTABLE 	R3 K24 R4 ; R3["SeamlessRailJackTransition"] := R4
	79	[9405]	NEWTABLE 	R3 0 2 ; R3 := {}
	80	[9405]	SETTABLE 	R3 K27 R1 ; R3["name"] := R1
	81	[9405]	SETTABLE 	R3 K28 K29 ; R3["difficulty"] := 0.000000
	82	[9406]	GETGLOBAL	R4 K30 ; R4 := cjson
	83	[9406]	GETTABLE 	R4 R4 K31 ; R4 := R4[0xb139d7bc]
	84	[9406]	MOVE     	R5 R3 ; R5 := R3
	85	[9406]	CALL     	R4 2 2 ; R4 := R4(R5)
	86	[9407]	GETGLOBAL	R5 K18 ; R5 := 0xe7f2b02f
	87	[9407]	SELF     	R5 R5 K32 ; R6 := R5; R5 := R5[0xd8f4f9d0]
	88	[9407]	MOVE     	R7 R4 ; R7 := R4
	89	[9407]	CALL     	R5 3 1 ; R5(R6,R7)
	90	[9410]	GETUPVAL 	R5 U1 ; R5 := U1
	91	[9410]	CALL     	R5 1 2 ; R5 := R5()
	92	[9411]	SELF     	R6 R5 K33 ; R7 := R5; R6 := R5[0x3ad9ed31]
	93	[9411]	GETGLOBAL	R8 K12 ; R8 := 0x0469f296
	94	[9411]	LOADK    	R9 K34 ; R9 := "CrewShipGenericTunnel"
	95	[9411]	CALL     	R8 2 0 ; R8,... := R8(R9)
	96	[9411]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	97	[9412]	GETGLOBAL	R7 K10 ; R7 := 0xbe190284
	98	[9412]	SELF     	R7 R7 K35 ; R8 := R7; R7 := R7[0xd7d79b74]
	99	[9412]	CALL     	R7 2 2 ; R7 := R7(R8)
	100	[9413]	SELF     	R8 R7 K36 ; R9 := R7; R8 := R7[0xb642d60b]
	101	[9413]	GETTABLE 	R10 R6 K37 ; R10 := R6["mission"]
	102	[9413]	CALL     	R8 3 1 ; R8(R9,R10)
	103	[9415]	GETGLOBAL	R8 K17 ; R8 := 0x7b998233
	104	[9415]	GETGLOBAL	R9 K6 ; R9 := _T
	105	[9415]	GETTABLE 	R9 R9 K38 ; R9 := R9["ClearRailjackMissionState"]
	106	[9415]	CALL     	R8 2 2 ; R8 := R8(R9)
	107	[9415]	TEST     	R8 1 ; if R8 then PC := 112
	108	[9415]	JMP      	112 ; PC := 112
	109	[9416]	GETGLOBAL	R8 K6 ; R8 := _T
	110	[9416]	GETTABLE 	R8 R8 K39 ; R8 := R8[0x7f11b15b]
	111	[9416]	CALL     	R8 1 1 ; R8()
	112	[9418]	RETURN   	R0 1 ; return 

function #414 <?:9420,9424> (28 instructions, 112 bytes at 0000025274F4F380)
0 params, 7 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[9421]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[9421]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xd7d79b74]
	3	[9421]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9422]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	5	[9422]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x78298275]
	6	[9422]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[9423]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	8	[9423]	MOVE     	R3 R0 ; R3 := R0
	9	[9423]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[9423]	TEST     	R2 1 ; if R2 then PC := 25
	11	[9423]	JMP      	25 ; PC := 25
	12	[9423]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	13	[9423]	MOVE     	R3 R1 ; R3 := R1
	14	[9423]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[9423]	TEST     	R2 1 ; if R2 then PC := 25
	16	[9423]	JMP      	25 ; PC := 25
	17	[9423]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	18	[9423]	SELF     	R3 R0 K5 ; R4 := R0; R3 := R0[0x973c5b4d]
	19	[9423]	SELF     	R5 R1 K6 ; R6 := R1; R5 := R1[0xe79e7ef4]
	20	[9423]	CALL     	R5 2 0 ; R5,... := R5(R6)
	21	[9423]	CALL     	R3 0 0 ; R3,... := R3(R4,...)
	22	[9423]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	23	[9423]	NOT      	R2 R2 ; R2 := not R2
	24	[9423]	JMP      	27 ; PC := 27
	25	[9423]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 26
	26	[9423]	OP_LOADBOOL	R2 1 0 ; R2 := true
	27	[9423]	RETURN   	R2 2 ; return R2 
	28	[9424]	RETURN   	R0 1 ; return 

function #415 <?:9426,9445> (45 instructions, 180 bytes at 0000025274F4F590)
5 params, 21 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[9427]	GETGLOBAL	R5 K0 ; R5 := 0xeb8fddd7
	2	[9427]	CALL     	R5 1 2 ; R5 := R5()
	3	[9427]	TEST     	R5 1 ; if R5 then PC := 11
	4	[9427]	JMP      	11 ; PC := 11
	5	[9427]	GETGLOBAL	R5 K1 ; R5 := 0x9ba7909f
	6	[9427]	SELF     	R5 R5 K2 ; R6 := R5; R5 := R5[0xbf9494fc]
	7	[9427]	LOADK    	R7 K3 ; R7 := "Graphics.UseWeGameCensoring"
	8	[9427]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	9	[9427]	TEST     	R5 0 ; if not R5 then PC := 45
	10	[9427]	JMP      	45 ; PC := 45
	11	[9428]	LOADK    	R5 := 1.000000
	12	[9428]	LEN      	R6 R1 ; R6 := # R1
	13	[9428]	LOADK    	R7 := 1.000000
	14	[9428]	FORPREP  	R5 20 ; R5 -= R7; PC := 20
	15	[9429]	SELF     	R9 R0 K4 ; R10 := R0; R9 := R0[0xcddc3abb]
	16	[9429]	SUB      	R11 R8 K5 ; R11 := R8 - 1.000000
	17	[9429]	GETTABLE 	R12 R1 R8 ; R12 := R1[R8]
	18	[9429]	OP_LOADBOOL	R13 0 0 ; R13 := false
	19	[9429]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	20	[9428]	FORLOOP  	R5 15 ; R5 += R7; if R5 <= R6 then begin PC := 15; R8 := R5 end
	21	[9432]	LOADK    	R9 := 1.000000
	22	[9432]	LEN      	R10 R2 ; R10 := # R2
	23	[9432]	LOADK    	R11 := 1.000000
	24	[9432]	FORPREP  	R9 44 ; R9 -= R11; PC := 44
	25	[9433]	GETGLOBAL	R13 K6 ; R13 := 0xa421af95
	26	[9433]	CALL     	R13 1 2 ; R13 := R13()
	27	[9434]	GETGLOBAL	R14 K7 ; R14 := 0x00046924
	28	[9434]	CALL     	R14 1 2 ; R14 := R14()
	29	[9435]	LEN      	R15 R3 ; R15 := # R3
	30	[9435]	LE       	0 R12 R15 ; if R12 > R15 then PC := 33
	31	[9435]	JMP      	33 ; PC := 33
	32	[9436]	GETTABLE 	R13 R3 R12 ; R13 := R3[R12]
	33	[9439]	LEN      	R15 R4 ; R15 := # R4
	34	[9439]	LE       	0 R12 R15 ; if R12 > R15 then PC := 37
	35	[9439]	JMP      	37 ; PC := 37
	36	[9440]	GETTABLE 	R14 R4 R12 ; R14 := R4[R12]
	37	[9442]	SELF     	R15 R0 K8 ; R16 := R0; R15 := R0[0x47901f07]
	38	[9442]	GETTABLE 	R17 R2 R12 ; R17 := R2[R12]
	39	[9442]	GETGLOBAL	R18 K9 ; R18 := 0x0469f296
	40	[9442]	CALL     	R18 1 2 ; R18 := R18()
	41	[9442]	MOVE     	R19 R13 ; R19 := R13
	42	[9442]	MOVE     	R20 R14 ; R20 := R14
	43	[9442]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	44	[9432]	FORLOOP  	R9 25 ; R9 += R11; if R9 <= R10 then begin PC := 25; R12 := R9 end
	45	[9445]	RETURN   	R0 1 ; return 

function #416 <?:9447,9455> (28 instructions, 112 bytes at 0000025274F4F8C0)
4 params, 12 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[9449]	GETGLOBAL	R5 K0 ; R5 := 0x03f57322
	2	[9449]	MOVE     	R6 R0 ; R6 := R0
	3	[9449]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[9449]	EQ       	0 R5 K2 ; if R5 ~= 4.000000 then PC := 11
	5	[9449]	JMP      	11 ; PC := 11
	6	[9450]	GETGLOBAL	R5 K3 ; R5 := 0x25d99d89
	7	[9450]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x98453b6b]
	8	[9450]	MOVE     	R7 R1 ; R7 := R1
	9	[9450]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	10	[9450]	MOVE     	R4 R5 ; R4 := R5
	11	[9452]	GETGLOBAL	R5 K5 ; R5 := 0x7b998233
	12	[9452]	MOVE     	R6 R2 ; R6 := R2
	13	[9452]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[9452]	TEST     	R5 1 ; if R5 then PC := 28
	15	[9452]	JMP      	28 ; PC := 28
	16	[9452]	LEN      	R5 R3 ; R5 := # R3
	17	[9452]	LT       	0 K6 R5 ; if 0.000000 >= R5 then PC := 28
	18	[9452]	JMP      	28 ; PC := 28
	19	[9453]	SELF     	R5 R2 K7 ; R6 := R2; R5 := R2[0xf56f3887]
	20	[9453]	MOVE     	R7 R3 ; R7 := R3
	21	[9453]	NEWTABLE 	R8 1 0 ; R8 := {}
	22	[9453]	MOVE     	R9 R1 ; R9 := R1
	23	[9453]	GETGLOBAL	R10 K8 ; R10 := 0x64fb1586
	24	[9453]	MOVE     	R11 R4 ; R11 := R4
	25	[9453]	CALL     	R10 2 0 ; R10,... := R10(R11)
	26	[9453]	SETLIST  	R8 0 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
	27	[9453]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	28	[9455]	RETURN   	R0 1 ; return 

function #417 <?:9457,9498> (55 instructions, 220 bytes at 0000025274F4FAF0)
2 params, 9 slots, 3 upvalues, 0 locals, 13 constants, 2 functions
	1	[9459]	LEN      	R2 R0 ; R2 := # R0
	2	[9459]	LT       	0 R2 K0 ; if R2 >= 0.000000 then PC := 13
	3	[9459]	JMP      	13 ; PC := 13
	4	[9460]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[9460]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xa53f5e12]
	6	[9460]	GETGLOBAL	R3 K2 ; R3 := 0x603636ad
	7	[9460]	LOADK    	R4 K3 ; R4 := "/Lotus/Language/Menu/Chat_InvalidUser"
	8	[9460]	NEWTABLE 	R5 0 1 ; R5 := {}
	9	[9460]	SETTABLE 	R5 K4 R0 ; R5["USER"] := R0
	10	[9460]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	11	[9460]	CALL     	R2 0 1 ; R2(R3,...)
	12	[9461]	RETURN   	R0 1 ; return 
	13	[9464]	GETUPVAL 	R2 U1 ; R2 := U1
	14	[9464]	CALL     	R2 1 2 ; R2 := R2()
	15	[9476]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	16	[9476]	MOVE     	R0 R0 ; R0 := R0
	17	[9476]	GETUPVAL 	R0 U2 ; R0 := U2
	18	[9476]	MOVE     	R0 R2 ; R0 := R2
	19	[9476]	MOVE     	R0 R1 ; R0 := R1
	20	[9476]	GETUPVAL 	R0 U0 ; R0 := U0
	21	[9478]	GETGLOBAL	R4 K5 ; R4 := 0x25d99d89
	22	[9478]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0xfd6e8666]
	23	[9478]	MOVE     	R6 R0 ; R6 := R0
	24	[9478]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	25	[9478]	TEST     	R4 0 ; if not R4 then PC := 30
	26	[9478]	JMP      	30 ; PC := 30
	27	[9479]	MOVE     	R4 R3 ; R4 := R3
	28	[9479]	CALL     	R4 1 1 ; R4()
	29	[9480]	RETURN   	R0 1 ; return 
	30	[9490]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	31	[9490]	GETUPVAL 	R0 U0 ; R0 := U0
	32	[9490]	MOVE     	R0 R0 ; R0 := R0
	33	[9490]	MOVE     	R0 R3 ; R0 := R3
	34	[9490]	SETTABLE 	R2 K7 R4 ; R2["UtilWhoIsResult"] := R4
	35	[9492]	GETGLOBAL	R4 K8 ; R4 := 0xe7f2b02f
	36	[9492]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0x0b151d80]
	37	[9492]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[9493]	GETGLOBAL	R5 K10 ; R5 := 0x7b998233
	39	[9493]	MOVE     	R6 R4 ; R6 := R4
	40	[9493]	CALL     	R5 2 2 ; R5 := R5(R6)
	41	[9493]	TEST     	R5 0 ; if not R5 then PC := 51
	42	[9493]	JMP      	51 ; PC := 51
	43	[9494]	GETUPVAL 	R5 U0 ; R5 := U0
	44	[9494]	GETTABLE 	R5 R5 K1 ; R5 := R5[0xa53f5e12]
	45	[9494]	GETGLOBAL	R6 K2 ; R6 := 0x603636ad
	46	[9494]	LOADK    	R7 K11 ; R7 := "/Lotus/Language/Menu/PurchaseFailure_UnknownError"
	47	[9494]	NEWTABLE 	R8 0 0 ; R8 := {}
	48	[9494]	CALL     	R6 3 0 ; R6,... := R6(R7,R8)
	49	[9494]	CALL     	R5 0 1 ; R5(R6,...)
	50	[9495]	RETURN   	R0 1 ; return 
	51	[9497]	SELF     	R5 R4 K12 ; R6 := R4; R5 := R4[0x00dc7406]
	52	[9497]	MOVE     	R7 R0 ; R7 := R0
	53	[9497]	LOADK    	R8 K7 ; R8 := "UtilWhoIsResult"
	54	[9497]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	55	[9498]	RETURN   	R0 1 ; return 

function #418 <?:9500,9507> (23 instructions, 92 bytes at 0000025274F50580)
0 params, 5 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[9501]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	2	[9501]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xca9ea368]
	3	[9501]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9502]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	5	[9502]	MOVE     	R2 R0 ; R2 := R0
	6	[9502]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[9502]	TEST     	R1 0 ; if not R1 then PC := 11
	8	[9502]	JMP      	11 ; PC := 11
	9	[9503]	OP_LOADBOOL	R1 0 0 ; R1 := false
	10	[9503]	RETURN   	R1 2 ; return R1 
	11	[9505]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xed4e0128]
	12	[9505]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[9506]	GETGLOBAL	R2 K4 ; R2 := 0x7f5022cf
	14	[9506]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xa5c556b9]
	15	[9506]	MOVE     	R3 R1 ; R3 := R1
	16	[9506]	LOADK    	R4 K6 ; R4 := "EmptyLevel"
	17	[9506]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	18	[9506]	EQ       	0 R2 K7 ; if R2 ~= nil then PC := 21
	19	[9506]	JMP      	21 ; PC := 21
	20	[9506]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 21
	21	[9506]	OP_LOADBOOL	R2 1 0 ; R2 := true
	22	[9506]	RETURN   	R2 2 ; return R2 
	23	[9507]	RETURN   	R0 1 ; return 

function #419 <?:9509,9536> (64 instructions, 256 bytes at 0000025274F507C0)
1 param, 9 slots, 0 upvalues, 0 locals, 19 constants, 0 functions
	1	[9510]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	2	[9510]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xca9ea368]
	3	[9510]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9511]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	5	[9511]	MOVE     	R3 R1 ; R3 := R1
	6	[9511]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[9511]	TEST     	R2 0 ; if not R2 then PC := 11
	8	[9511]	JMP      	11 ; PC := 11
	9	[9512]	OP_LOADBOOL	R2 0 0 ; R2 := false
	10	[9512]	RETURN   	R2 2 ; return R2 
	11	[9514]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0xed4e0128]
	12	[9514]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[9515]	GETGLOBAL	R3 K4 ; R3 := 0x7f5022cf
	14	[9515]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xa5c556b9]
	15	[9515]	MOVE     	R4 R2 ; R4 := R2
	16	[9515]	LOADK    	R5 K6 ; R5 := "TNWDrifterCamp"
	17	[9515]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	18	[9515]	EQ       	0 R3 K7 ; if R3 ~= nil then PC := 21
	19	[9515]	JMP      	21 ; PC := 21
	20	[9515]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 21
	21	[9515]	OP_LOADBOOL	R3 1 0 ; R3 := true
	22	[9516]	TEST     	R3 0 ; if not R3 then PC := 63
	23	[9516]	JMP      	63 ; PC := 63
	24	[9516]	EQ       	1 R0 K7 ; if R0 == nil then PC := 63
	25	[9516]	JMP      	63 ; PC := 63
	26	[9517]	GETGLOBAL	R4 K8 ; R4 := 0x76ea806b
	27	[9517]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0x3f3ae64c]
	28	[9517]	LOADK    	R6 := 0.000000
	29	[9517]	OP_LOADBOOL	R7 0 0 ; R7 := false
	30	[9517]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	31	[9518]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	32	[9518]	MOVE     	R6 R4 ; R6 := R4
	33	[9518]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[9518]	TEST     	R5 1 ; if R5 then PC := 61
	35	[9518]	JMP      	61 ; PC := 61
	36	[9519]	SELF     	R5 R4 K10 ; R6 := R4; R5 := R4[0x80563238]
	37	[9519]	CALL     	R5 2 2 ; R5 := R5(R6)
	38	[9520]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	39	[9520]	MOVE     	R7 R5 ; R7 := R5
	40	[9520]	CALL     	R6 2 2 ; R6 := R6(R7)
	41	[9520]	TEST     	R6 1 ; if R6 then PC := 61
	42	[9520]	JMP      	61 ; PC := 61
	43	[9521]	SELF     	R6 R5 K11 ; R7 := R5; R6 := R5[0x25a6e75e]
	44	[9521]	CALL     	R6 2 2 ; R6 := R6(R7)
	45	[9521]	SELF     	R6 R6 K12 ; R7 := R6; R6 := R6[0x8e7c3b5e]
	46	[9521]	CALL     	R6 2 2 ; R6 := R6(R7)
	47	[9521]	GETGLOBAL	R7 K13 ; R7 := 0x7ed0a956
	48	[9521]	LOADK    	R8 K14 ; R8 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
	49	[9521]	CALL     	R7 2 2 ; R7 := R7(R8)
	50	[9521]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 59
	51	[9521]	JMP      	59 ; PC := 59
	52	[9523]	SELF     	R6 R5 K15 ; R7 := R5; R6 := R5[0xcd57f819]
	53	[9523]	OP_LOADBOOL	R8 1 0 ; R8 := true
	54	[9523]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	55	[9523]	GETTABLE 	R6 R6 K16 ; R6 := R6["mBootLocation"]
	56	[9524]	EQ       	0 R6 K18 ; if R6 ~= 1.000000 then PC := 59
	57	[9524]	JMP      	59 ; PC := 59
	58	[9526]	RETURN   	R0 2 ; return R0 
	59	[9530]	NOT      	R7 R0 ; R7 := not R0
	60	[9530]	RETURN   	R7 2 ; return R7 
	61	[9533]	OP_LOADBOOL	R7 1 0 ; R7 := true
	62	[9533]	RETURN   	R7 2 ; return R7 
	63	[9535]	RETURN   	R3 2 ; return R3 
	64	[9536]	RETURN   	R0 1 ; return 

function #420 <?:9538,9540> (5 instructions, 20 bytes at 0000025274F50BF0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[9539]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[9539]	MOVE     	R2 R0 ; R2 := R0
	3	[9539]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9539]	RETURN   	R1 2 ; return R1 
	5	[9540]	RETURN   	R0 1 ; return 

function #421 <?:9542,9552> (37 instructions, 148 bytes at 0000025274F50CE0)
0 params, 5 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[9543]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[9543]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	3	[9543]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9543]	TEST     	R0 0 ; if not R0 then PC := 8
	5	[9543]	JMP      	8 ; PC := 8
	6	[9544]	OP_LOADBOOL	R0 0 0 ; R0 := false
	7	[9544]	RETURN   	R0 2 ; return R0 
	8	[9546]	GETGLOBAL	R0 K1 ; R0 := 0x89326c93
	9	[9546]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xca9ea368]
	10	[9546]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[9547]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	12	[9547]	MOVE     	R2 R0 ; R2 := R0
	13	[9547]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[9547]	TEST     	R1 0 ; if not R1 then PC := 18
	15	[9547]	JMP      	18 ; PC := 18
	16	[9548]	OP_LOADBOOL	R1 0 0 ; R1 := false
	17	[9548]	RETURN   	R1 2 ; return R1 
	18	[9550]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xed4e0128]
	19	[9550]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[9551]	GETGLOBAL	R2 K4 ; R2 := 0x7f5022cf
	21	[9551]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xa5c556b9]
	22	[9551]	MOVE     	R3 R1 ; R3 := R1
	23	[9551]	LOADK    	R4 K6 ; R4 := "ZarimanHubApartment"
	24	[9551]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	25	[9551]	EQ       	0 R2 K7 ; if R2 ~= nil then PC := 35
	26	[9551]	JMP      	35 ; PC := 35
	27	[9551]	GETGLOBAL	R2 K4 ; R2 := 0x7f5022cf
	28	[9551]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xa5c556b9]
	29	[9551]	MOVE     	R3 R1 ; R3 := R1
	30	[9551]	LOADK    	R4 K8 ; R4 := "PBZarApartment"
	31	[9551]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	32	[9551]	EQ       	0 R2 K7 ; if R2 ~= nil then PC := 35
	33	[9551]	JMP      	35 ; PC := 35
	34	[9551]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 35
	35	[9551]	OP_LOADBOOL	R2 1 0 ; R2 := true
	36	[9551]	RETURN   	R2 2 ; return R2 
	37	[9552]	RETURN   	R0 1 ; return 

function #422 <?:9554,9556> (4 instructions, 16 bytes at 0000025274F50FF0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[9555]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[9555]	CALL     	R0 1 2 ; R0 := R0()
	3	[9555]	RETURN   	R0 2 ; return R0 
	4	[9556]	RETURN   	R0 1 ; return 

function #423 <?:9558,9573> (31 instructions, 124 bytes at 0000025274F510C0)
0 params, 7 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[9560]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[9560]	OP_LOADBOOL	R2 0 0 ; R2 := false
	3	[9560]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9560]	TEST     	R1 0 ; if not R1 then PC := 21
	5	[9560]	JMP      	21 ; PC := 21
	6	[9561]	GETGLOBAL	R1 K0 ; R1 := 0xbe190284
	7	[9561]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xf2deaf69]
	8	[9561]	GETGLOBAL	R3 K2 ; R3 := 0x7ed0a956
	9	[9561]	LOADK    	R4 K3 ; R4 := "/Lotus/Types/GameRules/CampFirstLoadFrontEndGameRules"
	10	[9561]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[9561]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	12	[9561]	TEST     	R1 0 ; if not R1 then PC := 15
	13	[9561]	JMP      	15 ; PC := 15
	14	[9562]	LOADK    	R0 K4 ; R0 := "LoginCampPreview"
	15	[9565]	EQ       	0 R0 K5 ; if R0 ~= nil then PC := 22
	16	[9565]	JMP      	22 ; PC := 22
	17	[9566]	LOADK    	R0 K6 ; R0 := "LoginCamp"
	18	[9567]	GETGLOBAL	R1 K7 ; R1 := _T
	19	[9567]	SETTABLE 	R1 K8 K9 ; R1["SkipDropShipCinematic"] := true
	20	[9568]	JMP      	22 ; PC := 22
	21	[9570]	LOADK    	R0 K10 ; R0 := "Login"
	22	[9572]	GETGLOBAL	R1 K7 ; R1 := _T
	23	[9572]	GETTABLE 	R1 R1 K11 ; R1 := R1["BackgroundMovie"]
	24	[9572]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0xf56f3887]
	25	[9572]	LOADK    	R3 K13 ; R3 := "PlayCameraTransition"
	26	[9572]	NEWTABLE 	R4 2 0 ; R4 := {}
	27	[9572]	MOVE     	R5 R0 ; R5 := R0
	28	[9572]	LOADK    	R6 K14 ; R6 := 0.100000
	29	[9572]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	30	[9572]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	31	[9573]	RETURN   	R0 1 ; return 

function #424 <?:9575,9584> (21 instructions, 84 bytes at 0000025274F51500)
1 param, 9 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[9576]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[9576]	MOVE     	R2 R0 ; R2 := R0
	3	[9576]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9576]	TEST     	R1 1 ; if R1 then PC := 19
	5	[9576]	JMP      	19 ; PC := 19
	6	[9577]	GETGLOBAL	R1 K1 ; R1 := 0xc8802016
	7	[9577]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[9577]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	9	[9577]	JMP      	17 ; PC := 17
	10	[9578]	SELF     	R6 R0 K2 ; R7 := R0; R6 := R0[0xf2deaf69]
	11	[9578]	MOVE     	R8 R5 ; R8 := R5
	12	[9578]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	13	[9578]	TEST     	R6 0 ; if not R6 then PC := 17
	14	[9578]	JMP      	17 ; PC := 17
	15	[9579]	OP_LOADBOOL	R6 1 0 ; R6 := true
	16	[9579]	RETURN   	R6 2 ; return R6 
	17	[9577]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 10; R3 := R4 end
	18	[9580]	JMP      	10 ; PC := 10
	19	[9583]	OP_LOADBOOL	R6 0 0 ; R6 := false
	20	[9583]	RETURN   	R6 2 ; return R6 
	21	[9584]	RETURN   	R0 1 ; return 

function #425 <?:9586,9680> (216 instructions, 864 bytes at 0000025274F516B0)
4 params, 42 slots, 3 upvalues, 0 locals, 55 constants, 2 functions
	1	[9587]	LOADK    	R4 K0 ; R4 := ""
	2	[9588]	GETGLOBAL	R5 K1 ; R5 := _T
	3	[9588]	GETTABLE 	R5 R5 K2 ; R5 := R5["Notifications"]
	4	[9589]	EQ       	1 R5 K3 ; if R5 == nil then PC := 45
	5	[9589]	JMP      	45 ; PC := 45
	6	[9590]	SELF     	R6 R5 K4 ; R7 := R5; R6 := R5[0x9a6ca645]
	7	[9590]	CALL     	R6 2 2 ; R6 := R6(R7)
	8	[9591]	LEN      	R7 R6 ; R7 := # R6
	9	[9591]	LT       	0 K5 R7 ; if 0.000000 >= R7 then PC := 45
	10	[9591]	JMP      	45 ; PC := 45
	11	[9592]	NEWTABLE 	R7 5 0 ; R7 := {}
	12	[9593]	GETTABLE 	R8 R5 K6 ; R8 := R5["ATTACK_POLARITY"]
	13	[9594]	GETTABLE 	R9 R5 K7 ; R9 := R5["DEFENSE_POLARITY"]
	14	[9595]	GETTABLE 	R10 R5 K8 ; R10 := R5["TACTIC_POLARITY"]
	15	[9596]	GETTABLE 	R11 R5 K9 ; R11 := R5["POWER_POLARITY"]
	16	[9598]	GETTABLE 	R12 R5 K10 ; R12 := R5["WARD_POLARITY"]
	17	[9598]	SETLIST  	R7 5 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 5
	18	[9599]	GETTABLE 	R8 R7 K11 ; R8 := R7[1.000000]
	19	[9600]	GETGLOBAL	R9 K12 ; R9 := 0x25d99d89
	20	[9600]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0xa340c0e2]
	21	[9600]	CALL     	R9 2 2 ; R9 := R9(R10)
	22	[9602]	LOADK    	R10 := 1.000000
	23	[9602]	LEN      	R11 R1 ; R11 := # R1
	24	[9602]	LOADK    	R12 := 1.000000
	25	[9602]	FORPREP  	R10 31 ; R10 -= R12; PC := 31
	26	[9603]	GETTABLE 	R14 R1 R13 ; R14 := R1[R13]
	27	[9603]	EQ       	0 R14 R9 ; if R14 ~= R9 then PC := 31
	28	[9603]	JMP      	31 ; PC := 31
	29	[9604]	GETTABLE 	R8 R7 R13 ; R8 := R7[R13]
	30	[9605]	JMP      	32 ; PC := 32
	31	[9602]	FORLOOP  	R10 26 ; R10 += R12; if R10 <= R11 then begin PC := 26; R13 := R10 end
	32	[9609]	GETTABLE 	R14 R6 R8 ; R14 := R6[R8]
	33	[9609]	EQ       	1 R14 K3 ; if R14 == nil then PC := 45
	34	[9609]	JMP      	45 ; PC := 45
	35	[9609]	GETTABLE 	R14 R6 R8 ; R14 := R6[R8]
	36	[9609]	GETTABLE 	R14 R14 K14 ; R14 := R14["Value"]
	37	[9609]	EQ       	0 R14 K11 ; if R14 ~= 1.000000 then PC := 45
	38	[9609]	JMP      	45 ; PC := 45
	39	[9610]	MOVE     	R14 R4 ; R14 := R4
	40	[9610]	GETGLOBAL	R15 K15 ; R15 := 0x603636ad
	41	[9610]	LOADK    	R16 K16 ; R16 := "/Lotus/Language/ZarimanQuest/BeginWarningFocusDesc"
	42	[9610]	NEWTABLE 	R17 0 0 ; R17 := {}
	43	[9610]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	44	[9610]	CONCAT   	R4 R14 R15 ; R4 := R14 .. R15
	45	[9615]	GETGLOBAL	R14 K12 ; R14 := 0x25d99d89
	46	[9615]	SELF     	R14 R14 K17 ; R15 := R14; R14 := R14[0x25a6e75e]
	47	[9615]	CALL     	R14 2 2 ; R14 := R14(R15)
	48	[9616]	GETGLOBAL	R15 K18 ; R15 := 0x7b998233
	49	[9616]	MOVE     	R16 R14 ; R16 := R14
	50	[9616]	CALL     	R15 2 2 ; R15 := R15(R16)
	51	[9616]	TEST     	R15 1 ; if R15 then PC := 110
	52	[9616]	JMP      	110 ; PC := 110
	53	[9617]	GETGLOBAL	R15 K12 ; R15 := 0x25d99d89
	54	[9617]	SELF     	R15 R15 K19 ; R16 := R15; R15 := R15[0x62c81b76]
	55	[9617]	CALL     	R15 2 2 ; R15 := R15(R16)
	56	[9618]	LOADK    	R16 := 5.000000
	57	[9619]	GETTABLE 	R17 R15 K21 ; R17 := R15["mOperatorType"]
	58	[9619]	EQ       	0 R17 K22 ; if R17 ~= 4.000000 then PC := 61
	59	[9619]	JMP      	61 ; PC := 61
	60	[9620]	LOADK    	R16 := 9.000000
	61	[9622]	SELF     	R17 R14 K23 ; R18 := R14; R17 := R14[0x566259e1]
	62	[9622]	MOVE     	R19 R16 ; R19 := R16
	63	[9622]	SELF     	R20 R14 K24 ; R21 := R14; R20 := R14[0x4e457768]
	64	[9622]	MOVE     	R22 R16 ; R22 := R16
	65	[9622]	CALL     	R20 3 0 ; R20,... := R20(R21,R22)
	66	[9622]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	67	[9623]	SELF     	R18 R17 K25 ; R19 := R17; R18 := R17[0x2abbe722]
	68	[9623]	LOADK    	R20 := 2.000000
	69	[9623]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	70	[9624]	GETTABLE 	R19 R18 K26 ; R19 := R18["mItemId"]
	71	[9624]	GETTABLE 	R19 R19 K27 ; R19 := R19["mId"]
	72	[9625]	SELF     	R20 R14 K28 ; R21 := R14; R20 := R14[0x99718a3d]
	73	[9625]	CALL     	R20 2 2 ; R20 := R20(R21)
	74	[9626]	LOADNIL  	R21 R21 ; R21 := nil
	75	[9627]	LOADK    	R22 := 1.000000
	76	[9627]	LEN      	R23 R20 ; R23 := # R20
	77	[9627]	LOADK    	R24 := 1.000000
	78	[9627]	FORPREP  	R22 86 ; R22 -= R24; PC := 86
	79	[9628]	GETTABLE 	R26 R20 R25 ; R26 := R20[R25]
	80	[9629]	GETTABLE 	R27 R26 K26 ; R27 := R26["mItemId"]
	81	[9629]	GETTABLE 	R27 R27 K27 ; R27 := R27["mId"]
	82	[9629]	EQ       	0 R19 R27 ; if R19 ~= R27 then PC := 86
	83	[9629]	JMP      	86 ; PC := 86
	84	[9630]	MOVE     	R21 R26 ; R21 := R26
	85	[9631]	JMP      	87 ; PC := 87
	86	[9627]	FORLOOP  	R22 79 ; R22 += R24; if R22 <= R23 then begin PC := 79; R25 := R22 end
	87	[9634]	GETGLOBAL	R27 K18 ; R27 := 0x7b998233
	88	[9634]	MOVE     	R28 R21 ; R28 := R21
	89	[9634]	CALL     	R27 2 2 ; R27 := R27(R28)
	90	[9634]	TEST     	R27 1 ; if R27 then PC := 98
	91	[9634]	JMP      	98 ; PC := 98
	92	[9634]	GETTABLE 	R27 R21 K29 ; R27 := R21["mItemType"]
	93	[9634]	SELF     	R27 R27 K30 ; R28 := R27; R27 := R27[0xf2deaf69]
	94	[9634]	MOVE     	R29 R2 ; R29 := R2
	95	[9634]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	96	[9634]	TEST     	R27 0 ; if not R27 then PC := 110
	97	[9634]	JMP      	110 ; PC := 110
	98	[9635]	LEN      	R27 R4 ; R27 := # R4
	99	[9635]	LT       	0 K5 R27 ; if 0.000000 >= R27 then PC := 104
	100	[9635]	JMP      	104 ; PC := 104
	101	[9636]	MOVE     	R27 R4 ; R27 := R4
	102	[9636]	LOADK    	R28 K31 ; R28 := "\r\n\r\n"
	103	[9636]	CONCAT   	R4 R27 R28 ; R4 := R27 .. R28
	104	[9638]	MOVE     	R27 R4 ; R27 := R4
	105	[9638]	GETGLOBAL	R28 K15 ; R28 := 0x603636ad
	106	[9638]	LOADK    	R29 K32 ; R29 := "/Lotus/Language/ZarimanQuest/BeginWarningMoteAmpDesc"
	107	[9638]	NEWTABLE 	R30 0 0 ; R30 := {}
	108	[9638]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	109	[9638]	CONCAT   	R4 R27 R28 ; R4 := R27 .. R28
	110	[9642]	LEN      	R27 R4 ; R27 := # R4
	111	[9642]	LT       	0 K5 R27 ; if 0.000000 >= R27 then PC := 214
	112	[9642]	JMP      	214 ; PC := 214
	113	[9643]	GETUPVAL 	R27 U0 ; R27 := U0
	114	[9643]	CALL     	R27 1 2 ; R27 := R27()
	115	[9644]	GETGLOBAL	R28 K15 ; R28 := 0x603636ad
	116	[9644]	GETGLOBAL	R29 K33 ; R29 := 0x64fb1586
	117	[9644]	SELF     	R30 R0 K34 ; R31 := R0; R30 := R0[0xd3a9d01f]
	118	[9644]	CALL     	R30 2 0 ; R30,... := R30(R31)
	119	[9644]	CALL     	R29 0 2 ; R29 := R29(R30,...)
	120	[9644]	NEWTABLE 	R30 0 0 ; R30 := {}
	121	[9644]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	122	[9645]	MOVE     	R29 R28 ; R29 := R28
	123	[9646]	GETGLOBAL	R30 K15 ; R30 := 0x603636ad
	124	[9646]	LOADK    	R31 K35 ; R31 := "/Lotus/Language/ZarimanQuest/BeginWarningConfirm"
	125	[9646]	NEWTABLE 	R32 0 0 ; R32 := {}
	126	[9646]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	127	[9647]	GETGLOBAL	R31 K15 ; R31 := 0x603636ad
	128	[9647]	LOADK    	R32 K36 ; R32 := "/Lotus/Language/G1Quests/QuestCommitmentConfirm"
	129	[9647]	NEWTABLE 	R33 0 1 ; R33 := {}
	130	[9647]	GETGLOBAL	R34 K38 ; R34 := 0x7f5022cf
	131	[9647]	GETTABLE 	R34 R34 K39 ; R34 := R34[0x3f3e4d12]
	132	[9647]	MOVE     	R35 R30 ; R35 := R30
	133	[9647]	CALL     	R34 2 2 ; R34 := R34(R35)
	134	[9647]	SETTABLE 	R33 K37 R34 ; R33["WORD"] := R34
	135	[9647]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	136	[9648]	GETGLOBAL	R32 K15 ; R32 := 0x603636ad
	137	[9648]	LOADK    	R33 K40 ; R33 := "/Lotus/Language/ZarimanQuest/BeginWarningCommonDesc"
	138	[9648]	NEWTABLE 	R34 0 0 ; R34 := {}
	139	[9648]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	140	[9648]	LOADK    	R33 K31 ; R33 := "\r\n\r\n"
	141	[9648]	MOVE     	R34 R4 ; R34 := R4
	142	[9648]	CONCAT   	R4 R32 R34 ; R4 := R32 .. R33 .. R34
	143	[9650]	GETGLOBAL	R32 K41 ; R32 := 0x34291f5c
	144	[9650]	GETTABLE 	R32 R32 K42 ; R32 := R32[0xe6b41adb]
	145	[9650]	CALL     	R32 1 2 ; R32 := R32()
	146	[9650]	TEST     	R32 1 ; if R32 then PC := 158
	147	[9650]	JMP      	158 ; PC := 158
	148	[9650]	GETGLOBAL	R32 K41 ; R32 := 0x34291f5c
	149	[9650]	GETTABLE 	R32 R32 K43 ; R32 := R32[0x1467d5f4]
	150	[9650]	CALL     	R32 1 2 ; R32 := R32()
	151	[9650]	TEST     	R32 1 ; if R32 then PC := 158
	152	[9650]	JMP      	158 ; PC := 158
	153	[9650]	GETGLOBAL	R32 K41 ; R32 := 0x34291f5c
	154	[9650]	GETTABLE 	R32 R32 K44 ; R32 := R32[0x399826a5]
	155	[9650]	CALL     	R32 1 2 ; R32 := R32()
	156	[9650]	TEST     	R32 0 ; if not R32 then PC := 176
	157	[9650]	JMP      	176 ; PC := 176
	158	[9650]	GETGLOBAL	R32 K41 ; R32 := 0x34291f5c
	159	[9650]	GETTABLE 	R32 R32 K45 ; R32 := R32[0x94617168]
	160	[9650]	CALL     	R32 1 2 ; R32 := R32()
	161	[9650]	TEST     	R32 0 ; if not R32 then PC := 176
	162	[9650]	JMP      	176 ; PC := 176
	163	[9662]	CLOSURE  	R32 0 ; R32 := closure(Function #1)
	164	[9662]	MOVE     	R0 R27 ; R0 := R27
	165	[9662]	MOVE     	R0 R3 ; R0 := R3
	166	[9662]	GETUPVAL 	R0 U1 ; R0 := U1
	167	[9662]	MOVE     	R0 R29 ; R0 := R29
	168	[9662]	MOVE     	R0 R31 ; R0 := R31
	169	[9662]	MOVE     	R0 R30 ; R0 := R30
	170	[9663]	GETUPVAL 	R33 U2 ; R33 := U2
	171	[9663]	GETTABLE 	R33 R33 K46 ; R33 := R33[0xe0cba3ca]
	172	[9663]	MOVE     	R34 R4 ; R34 := R4
	173	[9663]	MOVE     	R35 R32 ; R35 := R32
	174	[9663]	CALL     	R33 3 1 ; R33(R34,R35)
	175	[9663]	JMP      	211 ; PC := 211
	176	[9667]	CLOSURE  	R33 1 ; R33 := closure(Function #2)
	177	[9667]	MOVE     	R0 R3 ; R0 := R3
	178	[9667]	SETTABLE 	R27 K47 R33 ; R27["ConfirmZarimanQuestWarning"] := R33
	179	[9669]	MOVE     	R33 R4 ; R33 := R4
	180	[9669]	LOADK    	R34 K31 ; R34 := "\r\n\r\n"
	181	[9669]	MOVE     	R35 R31 ; R35 := R31
	182	[9669]	CONCAT   	R33 R33 R35 ; R33 := R33 .. R34 .. R35
	183	[9670]	GETUPVAL 	R34 U1 ; R34 := U1
	184	[9670]	GETTABLE 	R35 R27 K48 ; R35 := R27["mMovie"]
	185	[9670]	MOVE     	R36 R29 ; R36 := R29
	186	[9670]	LOADK    	R37 K0 ; R37 := ""
	187	[9670]	LOADK    	R38 := 40.000000
	188	[9670]	LOADK    	R39 K47 ; R39 := "ConfirmZarimanQuestWarning"
	189	[9670]	LOADK    	R40 K0 ; R40 := ""
	190	[9670]	NEWTABLE 	R41 0 1 ; R41 := {}
	191	[9670]	SETTABLE 	R41 K49 R33 ; R41["desc"] := R33
	192	[9670]	CALL     	R34 8 3 ; R34,R35 := R34(R35,R36,R37,R38,R39,R40,R41)
	193	[9672]	TEST     	R34 0 ; if not R34 then PC := 211
	194	[9672]	JMP      	211 ; PC := 211
	195	[9672]	GETGLOBAL	R36 K18 ; R36 := 0x7b998233
	196	[9672]	MOVE     	R37 R35 ; R37 := R35
	197	[9672]	CALL     	R36 2 2 ; R36 := R36(R37)
	198	[9672]	TEST     	R36 1 ; if R36 then PC := 211
	199	[9672]	JMP      	211 ; PC := 211
	200	[9673]	SELF     	R36 R35 K50 ; R37 := R35; R36 := R35[0xe4162eed]
	201	[9673]	LOADK    	R38 K51 ; R38 := "SetYesTag"
	202	[9673]	LOADK    	R39 K52 ; R39 := "/Lotus/Language/ZarimanQuest/BeginWarningButton"
	203	[9673]	CALL     	R36 4 1 ; R36(R37,R38,R39)
	204	[9674]	SELF     	R36 R35 K50 ; R37 := R35; R36 := R35[0xe4162eed]
	205	[9674]	LOADK    	R38 K53 ; R38 := "SetConditionalWord"
	206	[9674]	GETGLOBAL	R39 K38 ; R39 := 0x7f5022cf
	207	[9674]	GETTABLE 	R39 R39 K54 ; R39 := R39[0x04981ab3]
	208	[9674]	MOVE     	R40 R30 ; R40 := R30
	209	[9674]	CALL     	R39 2 0 ; R39,... := R39(R40)
	210	[9674]	CALL     	R36 0 1 ; R36(R37,...)
	211	[9677]	OP_LOADBOOL	R36 1 0 ; R36 := true
	212	[9677]	RETURN   	R36 2 ; return R36 
	213	[9677]	CLOSE    	R27 ; SAVE R27,...
	214	[9679]	OP_LOADBOOL	R27 0 0 ; R27 := false
	215	[9679]	RETURN   	R27 2 ; return R27 
	216	[9680]	RETURN   	R0 1 ; return 

function #426 <?:9682,9696> (29 instructions, 116 bytes at 0000025274F52C10)
0 params, 6 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[9683]	LOADK    	R0 K0 ; R0 := "/Lotus/Language/Bosses/Lotus"
	2	[9684]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	3	[9684]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	4	[9684]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[9684]	TEST     	R1 1 ; if R1 then PC := 24
	6	[9684]	JMP      	24 ; PC := 24
	7	[9685]	GETGLOBAL	R1 K2 ; R1 := 0x25d99d89
	8	[9685]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x25a6e75e]
	9	[9685]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[9686]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	11	[9686]	MOVE     	R3 R1 ; R3 := R1
	12	[9686]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[9686]	TEST     	R2 1 ; if R2 then PC := 24
	14	[9686]	JMP      	24 ; PC := 24
	15	[9687]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0xd297b8b3]
	16	[9687]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[9688]	EQ       	0 R2 K6 ; if R2 ~= 0.000000 then PC := 21
	18	[9688]	JMP      	21 ; PC := 21
	19	[9689]	LOADK    	R0 K7 ; R0 := "/Lotus/Language/Inbox/TNWQuestNatahInboxMsgSubject"
	20	[9689]	JMP      	24 ; PC := 24
	21	[9690]	EQ       	0 R2 K8 ; if R2 ~= 2.000000 then PC := 24
	22	[9690]	JMP      	24 ; PC := 24
	23	[9691]	LOADK    	R0 K9 ; R0 := "/Lotus/Language/Bosses/Margulis"
	24	[9695]	GETGLOBAL	R3 K10 ; R3 := 0x603636ad
	25	[9695]	MOVE     	R4 R0 ; R4 := R0
	26	[9695]	NEWTABLE 	R5 0 0 ; R5 := {}
	27	[9695]	TAILCALL 	R3 3 0 ; R3,... := R3(R4,R5)
	28	[9695]	RETURN   	R3 0 ; return R3,... 
	29	[9696]	RETURN   	R0 1 ; return 

function #427 <?:9698,9720> (73 instructions, 292 bytes at 0000025274F52F80)
2 params, 11 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[9699]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[9699]	GETGLOBAL	R3 K1 ; R3 := 0x89326c93
	3	[9699]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[9699]	TEST     	R2 1 ; if R2 then PC := 73
	5	[9699]	JMP      	73 ; PC := 73
	6	[9700]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	7	[9700]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x78298275]
	8	[9700]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[9701]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	10	[9701]	MOVE     	R4 R2 ; R4 := R2
	11	[9701]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[9701]	TEST     	R3 1 ; if R3 then PC := 73
	13	[9701]	JMP      	73 ; PC := 73
	14	[9702]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0xb2532845]
	15	[9702]	GETGLOBAL	R5 K4 ; R5 := 0x0469f296
	16	[9702]	LOADK    	R6 K5 ; R6 := "IDLE"
	17	[9702]	CALL     	R5 2 0 ; R5,... := R5(R6)
	18	[9702]	CALL     	R3 0 1 ; R3(R4,...)
	19	[9703]	GETUPVAL 	R3 U0 ; R3 := U0
	20	[9703]	OP_LOADBOOL	R4 0 0 ; R4 := false
	21	[9703]	CALL     	R3 2 2 ; R3 := R3(R4)
	22	[9703]	TEST     	R3 0 ; if not R3 then PC := 35
	23	[9703]	JMP      	35 ; PC := 35
	24	[9704]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0x89c6dbf7]
	25	[9704]	GETGLOBAL	R5 K7 ; R5 := 0x00046924
	26	[9704]	LOADK    	R6 := 230.000000
	27	[9704]	LOADK    	R7 := 0.000000
	28	[9704]	LOADK    	R8 := 0.000000
	29	[9704]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	30	[9704]	CALL     	R3 0 1 ; R3(R4,...)
	31	[9705]	SELF     	R3 R2 K8 ; R4 := R2; R3 := R2[0x2e9b92e3]
	32	[9705]	LOADK    	R5 := 0.000000
	33	[9705]	CALL     	R3 3 1 ; R3(R4,R5)
	34	[9705]	JMP      	73 ; PC := 73
	35	[9707]	GETUPVAL 	R3 U0 ; R3 := U0
	36	[9707]	CALL     	R3 1 2 ; R3 := R3()
	37	[9707]	TEST     	R3 1 ; if R3 then PC := 43
	38	[9707]	JMP      	43 ; PC := 43
	39	[9708]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0x89c6dbf7]
	40	[9708]	GETGLOBAL	R5 K7 ; R5 := 0x00046924
	41	[9708]	CALL     	R5 1 0 ; R5,... := R5()
	42	[9708]	CALL     	R3 0 1 ; R3(R4,...)
	43	[9710]	TEST     	R1 0 ; if not R1 then PC := 50
	44	[9710]	JMP      	50 ; PC := 50
	45	[9710]	GETGLOBAL	R3 K9 ; R3 := 0x34291f5c
	46	[9710]	GETTABLE 	R3 R3 K10 ; R3 := R3[0x86647daf]
	47	[9710]	CALL     	R3 1 2 ; R3 := R3()
	48	[9710]	TEST     	R3 0 ; if not R3 then PC := 73
	49	[9710]	JMP      	73 ; PC := 73
	50	[9711]	SELF     	R3 R2 K11 ; R4 := R2; R3 := R2[0xde321e6f]
	51	[9711]	CALL     	R3 2 2 ; R3 := R3(R4)
	52	[9711]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0xf7d48ee0]
	53	[9711]	CALL     	R3 2 2 ; R3 := R3(R4)
	54	[9712]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	55	[9712]	MOVE     	R5 R3 ; R5 := R3
	56	[9712]	CALL     	R4 2 2 ; R4 := R4(R5)
	57	[9712]	TEST     	R4 1 ; if R4 then PC := 66
	58	[9712]	JMP      	66 ; PC := 66
	59	[9713]	SELF     	R4 R3 K13 ; R5 := R3; R4 := R3[0xbc4ebb44]
	60	[9713]	GETGLOBAL	R6 K4 ; R6 := 0x0469f296
	61	[9713]	LOADK    	R7 K14 ; R7 := "KneelToStandTurn"
	62	[9713]	CALL     	R6 2 0 ; R6,... := R6(R7)
	63	[9713]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	64	[9713]	TESTSET  	R0 R4 1 ; if R4 then PC := 66 else R0 := R4 
	65	[9713]	JMP      	66 ; PC := 66
	66	[9715]	SELF     	R4 R2 K15 ; R5 := R2; R4 := R2[0x5d985c7e]
	67	[9715]	MOVE     	R6 R0 ; R6 := R0
	68	[9715]	OP_LOADBOOL	R7 0 0 ; R7 := false
	69	[9715]	LOADK    	R8 := 3.000000
	70	[9715]	LOADK    	R9 := 1.000000
	71	[9715]	OP_LOADBOOL	R10 1 0 ; R10 := true
	72	[9715]	CALL     	R4 7 1 ; R4(R5,R6,R7,R8,R9,R10)
	73	[9720]	RETURN   	R0 1 ; return 

function #428 <?:9722,9732> (25 instructions, 100 bytes at 0000025274F533E0)
1 param, 9 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[9723]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	2	[9723]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xfb669000]
	3	[9723]	GETGLOBAL	R3 K2 ; R3 := gDynamicSkyType
	4	[9723]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[9724]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	6	[9724]	MOVE     	R3 R1 ; R3 := R1
	7	[9724]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[9724]	TEST     	R2 1 ; if R2 then PC := 25
	9	[9724]	JMP      	25 ; PC := 25
	10	[9725]	LOADK    	R2 := 1.000000
	11	[9725]	LEN      	R3 R1 ; R3 := # R1
	12	[9725]	LOADK    	R4 := 1.000000
	13	[9725]	FORPREP  	R2 24 ; R2 -= R4; PC := 24
	14	[9726]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	15	[9726]	SELF     	R6 R6 K4 ; R7 := R6; R6 := R6[0x0056783b]
	16	[9726]	CALL     	R6 2 2 ; R6 := R6(R7)
	17	[9726]	TEST     	R6 0 ; if not R6 then PC := 24
	18	[9726]	JMP      	24 ; PC := 24
	19	[9727]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	20	[9727]	SELF     	R6 R6 K5 ; R7 := R6; R6 := R6[0x16c76090]
	21	[9727]	MOVE     	R8 R0 ; R8 := R0
	22	[9727]	CALL     	R6 3 1 ; R6(R7,R8)
	23	[9728]	RETURN   	R0 1 ; return 
	24	[9725]	FORLOOP  	R2 14 ; R2 += R4; if R2 <= R3 then begin PC := 14; R5 := R2 end
	25	[9732]	RETURN   	R0 1 ; return 

main <?:0,0> (2332 instructions, 9328 bytes at 00000160C677A210)
0+ params, 168 slots, 0 upvalues, 0 locals, 776 constants, 428 functions
	1	[1]	GETGLOBAL	R0 K0 ; R0 := 0xaeabecda
	2	[1]	VARARG   	R1 R2 ; R1 := R2 := ...
	3	[1]	GETGLOBAL	R2 K1 ; R2 := package
	4	[1]	GETTABLE 	R2 R2 K2 ; R2 := R2["seeall"]
	5	[1]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[3]	NEWTABLE 	R0 21 0 ; R0 := {}
	7	[4]	LOADK    	R1 K3 ; R1 := "DT_IMPACT"
	8	[5]	LOADK    	R2 K4 ; R2 := "DT_PUNCTURE"
	9	[6]	LOADK    	R3 K5 ; R3 := "DT_SLASH"
	10	[7]	LOADK    	R4 K6 ; R4 := "DT_FIRE"
	11	[8]	LOADK    	R5 K7 ; R5 := "DT_FREEZE"
	12	[9]	LOADK    	R6 K8 ; R6 := "DT_ELECTRICITY"
	13	[10]	LOADK    	R7 K9 ; R7 := "DT_POISON"
	14	[11]	LOADK    	R8 K10 ; R8 := "DT_EXPLOSION"
	15	[12]	LOADK    	R9 K11 ; R9 := "DT_RADIATION"
	16	[13]	LOADK    	R10 K12 ; R10 := "DT_GAS"
	17	[14]	LOADK    	R11 K13 ; R11 := "DT_MAGNETIC"
	18	[15]	LOADK    	R12 K14 ; R12 := "DT_VIRAL"
	19	[16]	LOADK    	R13 K15 ; R13 := "DT_CORROSIVE"
	20	[17]	LOADK    	R14 K16 ; R14 := "DT_RADIANT"
	21	[18]	LOADK    	R15 K17 ; R15 := "DT_SENTIENT"
	22	[19]	LOADK    	R16 K18 ; R16 := "DT_CINEMATIC"
	23	[20]	LOADK    	R17 K19 ; R17 := "DT_SHIELD_DRAIN"
	24	[21]	LOADK    	R18 K20 ; R18 := "DT_HEALTH_DRAIN"
	25	[22]	LOADK    	R19 K21 ; R19 := "DT_ENERGY_DRAIN"
	26	[23]	LOADK    	R20 K22 ; R20 := "DT_FINISHER"
	27	[24]	LOADK    	R21 K23 ; R21 := "DT_SUICIDE"
	28	[25]	LOADK    	R22 K24 ; R22 := "DT_PHYSICAL"
	29	[26]	LOADK    	R23 K25 ; R23 := "DT_INVALID"
	30	[27]	LOADK    	R24 K26 ; R24 := "DT_BASE_ELEMENTAL"
	31	[28]	LOADK    	R25 K27 ; R25 := "DT_COMPOUND_ELEMENTAL"
	32	[30]	LOADK    	R26 K28 ; R26 := "DT_ANY"
	33	[30]	SETLIST  	R0 26 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 26
	34	[32]	NEWTABLE 	R1 23 0 ; R1 := {}
	35	[34]	LOADK    	R2 K29 ; R2 := "PT_KNOCKBACK"
	36	[35]	LOADK    	R3 K30 ; R3 := "PT_FRAILTY"
	37	[36]	LOADK    	R4 K31 ; R4 := "PT_BLEEDING"
	38	[37]	LOADK    	R5 K32 ; R5 := "PT_IMMOLATION"
	39	[38]	LOADK    	R6 K33 ; R6 := "PT_CHILLED"
	40	[39]	LOADK    	R7 K34 ; R7 := "PT_ELECTROCUTION"
	41	[40]	LOADK    	R8 K35 ; R8 := "PT_POISONED"
	42	[41]	LOADK    	R9 K36 ; R9 := "PT_FLASHBANG"
	43	[42]	LOADK    	R10 K37 ; R10 := "PT_RAD_TOX"
	44	[43]	LOADK    	R11 K38 ; R11 := "PT_ASPHYXIATION"
	45	[44]	LOADK    	R12 K39 ; R12 := "PT_MAGNETIZED"
	46	[45]	LOADK    	R13 K40 ; R13 := "PT_INFECTED"
	47	[46]	LOADK    	R14 K41 ; R14 := "PT_CAUSTIC_BURN"
	48	[47]	LOADK    	R15 K42 ; R15 := "PT_RADIANT"
	49	[48]	LOADK    	R16 K43 ; R16 := "PT_SENTIENT"
	50	[49]	LOADK    	R17 K44 ; R17 := "PT_MICROWAVE_BURN"
	51	[50]	LOADK    	R18 K45 ; R18 := "PT_STAGGERED"
	52	[51]	LOADK    	R19 K46 ; R19 := "PT_BIG_STAGGER"
	53	[52]	LOADK    	R20 K47 ; R20 := "PT_STUNNED"
	54	[53]	LOADK    	R21 K48 ; R21 := "PT_KNOCKED_DOWN"
	55	[54]	LOADK    	R22 K49 ; R22 := "PT_RAGDOLL"
	56	[55]	LOADK    	R23 K50 ; R23 := "PT_PARRIED"
	57	[56]	LOADK    	R24 K51 ; R24 := "PT_DISARMED"
	58	[57]	LOADK    	R25 K52 ; R25 := "PT_SILENCED"
	59	[58]	LOADK    	R26 K53 ; R26 := "PT_ROOTS"
	60	[59]	LOADK    	R27 K54 ; R27 := "PT_VOID"
	61	[60]	LOADK    	R28 K55 ; R28 := "PT_GLUE"
	62	[61]	LOADK    	R29 K56 ; R29 := "PT_SLEEP"
	63	[62]	LOADK    	R30 K57 ; R30 := "PT_LIFT_HIT"
	64	[64]	LOADK    	R31 K58 ; R31 := "MAX_ProcType"
	65	[64]	SETLIST  	R1 30 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 30
	66	[66]	GETGLOBAL	R2 K59 ; R2 := 0x60cce7b4
	67	[66]	LEN      	R3 R0 ; R3 := # R0
	68	[66]	EQ       	1 R3 K61 ; if R3 == 26.000000 then PC := 71
	69	[66]	JMP      	71 ; PC := 71
	70	[66]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 71
	71	[66]	OP_LOADBOOL	R3 1 0 ; R3 := true
	72	[66]	CALL     	R2 2 1 ; R2(R3)
	73	[67]	GETGLOBAL	R2 K59 ; R2 := 0x60cce7b4
	74	[67]	LEN      	R3 R1 ; R3 := # R1
	75	[67]	EQ       	1 R3 K62 ; if R3 == 30.000000 then PC := 78
	76	[67]	JMP      	78 ; PC := 78
	77	[67]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 78
	78	[67]	OP_LOADBOOL	R3 1 0 ; R3 := true
	79	[67]	CALL     	R2 2 1 ; R2(R3)
	80	[69]	GETGLOBAL	R2 K63 ; R2 := 0x7ed0a956
	81	[69]	LOADK    	R3 K64 ; R3 := "/Lotus/Types/StoreItems/SuitCustomizations/ColourPickerDefaultsItemA"
	82	[69]	CALL     	R2 2 2 ; R2 := R2(R3)
	83	[70]	GETGLOBAL	R3 K63 ; R3 := 0x7ed0a956
	84	[70]	LOADK    	R4 K65 ; R4 := "/Lotus/Upgrades/Mods/Fusers/UncommonModFuser"
	85	[70]	CALL     	R3 2 2 ; R3 := R3(R4)
	86	[71]	GETGLOBAL	R4 K63 ; R4 := 0x7ed0a956
	87	[71]	LOADK    	R5 K66 ; R5 := "/Lotus/Upgrades/Mods/Fusers/RareModFuser"
	88	[71]	CALL     	R4 2 2 ; R4 := R4(R5)
	89	[72]	GETGLOBAL	R5 K63 ; R5 := 0x7ed0a956
	90	[72]	LOADK    	R6 K67 ; R6 := "/Lotus/Types/Items/MiscItems/Elitium"
	91	[72]	CALL     	R5 2 2 ; R5 := R5(R6)
	92	[74]	GETGLOBAL	R6 K63 ; R6 := 0x7ed0a956
	93	[74]	LOADK    	R7 K68 ; R7 := "/Lotus/Types/Game/OrokinGoldenMawAvatar"
	94	[74]	CALL     	R6 2 2 ; R6 := R6(R7)
	95	[76]	GETGLOBAL	R7 K63 ; R7 := 0x7ed0a956
	96	[76]	LOADK    	R8 K69 ; R8 := "/Lotus/Types/Items/MiscItems/PhotoboothTile"
	97	[76]	CALL     	R7 2 2 ; R7 := R7(R8)
	98	[78]	GETGLOBAL	R8 K63 ; R8 := 0x7ed0a956
	99	[78]	LOADK    	R9 K70 ; R9 := "/Lotus/Types/Items/ShipFeatureItems/ShipFeatureItem"
	100	[78]	CALL     	R8 2 2 ; R8 := R8(R9)
	101	[80]	GETGLOBAL	R9 K63 ; R9 := 0x7ed0a956
	102	[80]	LOADK    	R10 K71 ; R10 := "/Lotus/Types/Restoratives/LisetBaseAirSupportPower"
	103	[80]	CALL     	R9 2 2 ; R9 := R9(R10)
	104	[82]	GETGLOBAL	R10 K63 ; R10 := 0x7ed0a956
	105	[82]	LOADK    	R11 K72 ; R11 := "/Lotus/Weapons/Tenno/HackingDevices/TnHackingDevice/TnHackingDeviceWeapon"
	106	[82]	CALL     	R10 2 2 ; R10 := R10(R11)
	107	[84]	GETGLOBAL	R11 K63 ; R11 := 0x7ed0a956
	108	[84]	LOADK    	R12 K73 ; R12 := "/Lotus/Powersuits/Wraith/ReaperAvatar"
	109	[84]	CALL     	R11 2 2 ; R11 := R11(R12)
	110	[86]	LOADK    	R12 := 1.000000
	111	[86]	SETGLOBALHASH	R12 K74 ; UI_MODE_IN_SPACE_SHIP := R12
	112	[87]	LOADK    	R12 := 2.000000
	113	[87]	SETGLOBALHASH	R12 K75 ; UI_MODE_IN_SPACE_HUB := R12
	114	[88]	LOADK    	R12 := 3.000000
	115	[88]	SETGLOBALHASH	R12 K76 ; UI_MODE_IN_DOJO := R12
	116	[89]	LOADK    	R12 := 4.000000
	117	[89]	SETGLOBALHASH	R12 K77 ; UI_MODE_IN_GAME := R12
	118	[91]	LOADK    	R12 := 14.000000
	119	[91]	SETGLOBALHASH	R12 K78 ; REGION_ID_DOJO := R12
	120	[92]	LOADK    	R12 := 15.000000
	121	[92]	SETGLOBALHASH	R12 K79 ; REGION_ID_VOID := R12
	122	[93]	LOADK    	R12 := 17.000000
	123	[93]	SETGLOBALHASH	R12 K80 ; REGION_ID_DERELICT := R12
	124	[94]	LOADK    	R12 := 18.000000
	125	[94]	SETGLOBALHASH	R12 K81 ; REGION_ID_MOON := R12
	126	[95]	LOADK    	R12 := 19.000000
	127	[95]	SETGLOBALHASH	R12 K82 ; REGION_ID_FORTRESS := R12
	128	[96]	LOADK    	R12 := 20.000000
	129	[96]	SETGLOBALHASH	R12 K83 ; REGION_ID_DARK_SECTOR := R12
	130	[97]	LOADK    	R12 := 21.000000
	131	[97]	SETGLOBALHASH	R12 K84 ; REGION_ID_DEEP_SPACE := R12
	132	[98]	LOADK    	R12 := 22.000000
	133	[98]	SETGLOBALHASH	R12 K85 ; REGION_ID_ZARIMAN := R12
	134	[99]	LOADK    	R12 := 97.000000
	135	[99]	SETGLOBALHASH	R12 K86 ; REGION_ID_DOJO_DUEL := R12
	136	[100]	LOADK    	R12 := 98.000000
	137	[100]	SETGLOBALHASH	R12 K87 ; REGION_ID_CLAN_DOJO := R12
	138	[101]	LOADK    	R12 := 99.000000
	139	[101]	SETGLOBALHASH	R12 K88 ; REGION_ID_PVP := R12
	140	[102]	LOADK    	R12 := 100.000000
	141	[102]	SETGLOBALHASH	R12 K89 ; REGION_ID_PHOTOBOOTH := R12
	142	[103]	LOADK    	R12 := 101.000000
	143	[103]	SETGLOBALHASH	R12 K90 ; REGION_ID_SIMULACRUM := R12
	144	[105]	LOADK    	R12 := 1.000000
	145	[105]	SETGLOBALHASH	R12 K91 ; SLIDER := R12
	146	[106]	LOADK    	R12 := 2.000000
	147	[106]	SETGLOBALHASH	R12 K92 ; CHECKBOX := R12
	148	[107]	LOADK    	R12 := 3.000000
	149	[107]	SETGLOBALHASH	R12 K93 ; TOGGLE := R12
	150	[108]	LOADK    	R12 := 4.000000
	151	[108]	SETGLOBALHASH	R12 K94 ; BUTTON := R12
	152	[109]	LOADK    	R12 := 5.000000
	153	[109]	SETGLOBALHASH	R12 K95 ; TITLE := R12
	154	[110]	LOADK    	R12 := 6.000000
	155	[110]	SETGLOBALHASH	R12 K96 ; INPUTBOX := R12
	156	[111]	LOADK    	R12 := 7.000000
	157	[111]	SETGLOBALHASH	R12 K97 ; SPACER := R12
	158	[112]	LOADK    	R12 := 8.000000
	159	[112]	SETGLOBALHASH	R12 K98 ; INPUTCOUNT := R12
	160	[113]	LOADK    	R12 := 9.000000
	161	[113]	SETGLOBALHASH	R12 K99 ; ICONBUTTON := R12
	162	[114]	LOADK    	R12 := 10.000000
	163	[114]	SETGLOBALHASH	R12 K100 ; CHOICE := R12
	164	[115]	LOADK    	R12 := 11.000000
	165	[115]	SETGLOBALHASH	R12 K101 ; COLOR := R12
	166	[117]	LOADK    	R12 := 0.000000
	167	[117]	SETGLOBALHASH	R12 K102 ; DECO_AREA_UNKNOWN := R12
	168	[118]	LOADK    	R12 := 1.000000
	169	[118]	SETGLOBALHASH	R12 K103 ; DECO_AREA_SHIP := R12
	170	[119]	LOADK    	R12 := 2.000000
	171	[119]	SETGLOBALHASH	R12 K104 ; DECO_AREA_APARTMENT := R12
	172	[120]	LOADK    	R12 := 3.000000
	173	[120]	SETGLOBALHASH	R12 K105 ; DECO_AREA_COUNT := R12
	174	[122]	LOADK    	R12 := 1.000000
	175	[122]	SETGLOBALHASH	R12 K106 ; REPORT_PLAYER := R12
	176	[123]	LOADK    	R12 := 2.000000
	177	[123]	SETGLOBALHASH	R12 K107 ; REPORT_CLAN_AD := R12
	178	[125]	NEWTABLE 	R12 0 2 ; R12 := {}
	179	[125]	GETGLOBAL	R13 K110 ; R13 := 0x0469f296
	180	[125]	LOADK    	R14 K111 ; R14 := "OutsideRoom"
	181	[125]	CALL     	R13 2 2 ; R13 := R13(R14)
	182	[125]	SETTABLE 	R12 K109 R13 ; R12["Name"] := R13
	183	[125]	SETTABLE 	R12 K112 K113 ; R12["LocTag"] := "/Lotus/Language/UiElements/OutsideRoom"
	184	[125]	SETGLOBALHASH	R12 K108 ; OUTSIDE_THE_SHIP_ROOM := R12
	185	[127]	NEWTABLE 	R12 0 2 ; R12 := {}
	186	[127]	GETGLOBAL	R13 K110 ; R13 := 0x0469f296
	187	[127]	LOADK    	R14 K115 ; R14 := "LisetRoom"
	188	[127]	CALL     	R13 2 2 ; R13 := R13(R14)
	189	[127]	SETTABLE 	R12 K109 R13 ; R12["Name"] := R13
	190	[127]	SETTABLE 	R12 K112 K116 ; R12["LocTag"] := "/Lotus/Language/UiElements/ShipLisetRoom"
	191	[127]	SETGLOBALHASH	R12 K114 ; LISET_ROOM := R12
	192	[129]	NEWTABLE 	R12 5 0 ; R12 := {}
	193	[129]	NEWTABLE 	R13 0 2 ; R13 := {}
	194	[130]	GETGLOBAL	R14 K110 ; R14 := 0x0469f296
	195	[130]	LOADK    	R15 K118 ; R15 := "OperatorChamberRoom"
	196	[130]	CALL     	R14 2 2 ; R14 := R14(R15)
	197	[130]	SETTABLE 	R13 K109 R14 ; R13["Name"] := R14
	198	[130]	SETTABLE 	R13 K112 K119 ; R13["LocTag"] := "/Lotus/Language/UiElements/ShipOperatorChamberRoom"
	199	[130]	NEWTABLE 	R14 0 2 ; R14 := {}
	200	[131]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	201	[131]	LOADK    	R16 K120 ; R16 := "AlchemyRoom"
	202	[131]	CALL     	R15 2 2 ; R15 := R15(R16)
	203	[131]	SETTABLE 	R14 K109 R15 ; R14["Name"] := R15
	204	[131]	SETTABLE 	R14 K112 K121 ; R14["LocTag"] := "/Lotus/Language/UiElements/ShipAlchemyRoom"
	205	[131]	NEWTABLE 	R15 0 2 ; R15 := {}
	206	[132]	GETGLOBAL	R16 K110 ; R16 := 0x0469f296
	207	[132]	LOADK    	R17 K122 ; R17 := "PersonalQuartersRoom"
	208	[132]	CALL     	R16 2 2 ; R16 := R16(R17)
	209	[132]	SETTABLE 	R15 K109 R16 ; R15["Name"] := R16
	210	[132]	SETTABLE 	R15 K112 K123 ; R15["LocTag"] := "/Lotus/Language/UiElements/ShipPersonalQuartersRoom"
	211	[132]	NEWTABLE 	R16 0 2 ; R16 := {}
	212	[133]	GETGLOBAL	R17 K110 ; R17 := 0x0469f296
	213	[133]	LOADK    	R18 K124 ; R18 := "BridgeRoom"
	214	[133]	CALL     	R17 2 2 ; R17 := R17(R18)
	215	[133]	SETTABLE 	R16 K109 R17 ; R16["Name"] := R17
	216	[133]	SETTABLE 	R16 K112 K125 ; R16["LocTag"] := "/Lotus/Language/UiElements/ShipBridgeRoom"
	217	[135]	GETGLOBAL	R17 K114 ; R17 := LISET_ROOM
	218	[135]	SETLIST  	R12 5 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 5
	219	[135]	SETGLOBALHASH	R12 K117 ; SHIP_ROOMS := R12
	220	[137]	NEWTABLE 	R12 4 0 ; R12 := {}
	221	[137]	NEWTABLE 	R13 0 2 ; R13 := {}
	222	[138]	GETGLOBAL	R14 K110 ; R14 := 0x0469f296
	223	[138]	LOADK    	R15 K127 ; R15 := "ElevatorLanding"
	224	[138]	CALL     	R14 2 2 ; R14 := R14(R15)
	225	[138]	SETTABLE 	R13 K109 R14 ; R13["Name"] := R14
	226	[138]	SETTABLE 	R13 K112 K128 ; R13["LocTag"] := "/Lotus/Language/UiElements/ApartmentElevatorLanding"
	227	[138]	NEWTABLE 	R14 0 2 ; R14 := {}
	228	[139]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	229	[139]	LOADK    	R16 K129 ; R16 := "ApartmentRoomA"
	230	[139]	CALL     	R15 2 2 ; R15 := R15(R16)
	231	[139]	SETTABLE 	R14 K109 R15 ; R14["Name"] := R15
	232	[139]	SETTABLE 	R14 K112 K130 ; R14["LocTag"] := "/Lotus/Language/UiElements/ApartmentRoomA"
	233	[139]	NEWTABLE 	R15 0 2 ; R15 := {}
	234	[140]	GETGLOBAL	R16 K110 ; R16 := 0x0469f296
	235	[140]	LOADK    	R17 K131 ; R17 := "ApartmentRoomB"
	236	[140]	CALL     	R16 2 2 ; R16 := R16(R17)
	237	[140]	SETTABLE 	R15 K109 R16 ; R15["Name"] := R16
	238	[140]	SETTABLE 	R15 K112 K132 ; R15["LocTag"] := "/Lotus/Language/UiElements/ApartmentRoomB"
	239	[140]	NEWTABLE 	R16 0 2 ; R16 := {}
	240	[141]	GETGLOBAL	R17 K110 ; R17 := 0x0469f296
	241	[141]	LOADK    	R18 K133 ; R18 := "ApartmentRoomC"
	242	[141]	CALL     	R17 2 2 ; R17 := R17(R18)
	243	[141]	SETTABLE 	R16 K109 R17 ; R16["Name"] := R17
	244	[141]	SETTABLE 	R16 K112 K134 ; R16["LocTag"] := "/Lotus/Language/UiElements/ApartmentRoomC"
	245	[142]	SETLIST  	R12 4 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 4
	246	[142]	SETGLOBALHASH	R12 K126 ; APARTMENT_ROOMS := R12
	247	[144]	NEWTABLE 	R12 0 8 ; R12 := {}
	248	[145]	SETTABLE 	R12 K137 K138 ; R12[0.000000] := "WARFRAME_SLOT"
	249	[146]	SETTABLE 	R12 K139 K140 ; R12[1.000000] := "WEAPON_SLOT"
	250	[147]	SETTABLE 	R12 K141 K142 ; R12[2.000000] := "SENTINEL_SLOT"
	251	[148]	SETTABLE 	R12 K143 K144 ; R12[3.000000] := "SPACE_SUIT_SLOT"
	252	[149]	SETTABLE 	R12 K145 K146 ; R12[4.000000] := "SPACE_WEAPON_SLOT"
	253	[150]	SETTABLE 	R12 K147 K148 ; R12[8.000000] := "OPERATOR_AMP_SLOT"
	254	[151]	SETTABLE 	R12 K149 K150 ; R12[10.000000] := "MECH_SLOT"
	255	[152]	SETTABLE 	R12 K151 K152 ; R12[11.000000] := "CREW_MEMBER_SLOT"
	256	[153]	SETGLOBALHASH	R12 K135 ; SLOT_TYPES := R12
	257	[155]	LOADK    	R12 := 1.000000
	258	[155]	SETGLOBALHASH	R12 K153 ; SOUND_SET_EIDOLON := R12
	259	[156]	LOADK    	R12 := 2.000000
	260	[156]	SETGLOBALHASH	R12 K154 ; SOUND_SET_FORTUNA := R12
	261	[157]	LOADK    	R12 := 3.000000
	262	[157]	SETGLOBALHASH	R12 K155 ; SOUND_SET_ORB_VALLIS := R12
	263	[158]	LOADK    	R12 := 4.000000
	264	[158]	SETGLOBALHASH	R12 K156 ; SOUND_SET_RAILJACK := R12
	265	[159]	LOADK    	R12 := 5.000000
	266	[159]	SETGLOBALHASH	R12 K157 ; SOUND_SET_OROKIN_TOWER := R12
	267	[160]	LOADK    	R12 := 6.000000
	268	[160]	SETGLOBALHASH	R12 K158 ; SOUND_SET_ZARIMAN := R12
	269	[162]	LOADK    	R12 := 100.000000
	270	[163]	LOADK    	R13 := 1000.000000
	271	[164]	LOADK    	R14 K159 ; R14 := 100000.000000
	272	[166]	LOADK    	R15 K161 ; R15 := "_"
	273	[166]	SETGLOBALHASH	R15 K160 ; TAG_SEPERATOR := R15
	274	[168]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	275	[168]	LOADK    	R16 K163 ; R16 := "Alert"
	276	[168]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	277	[168]	SETGLOBALHASH	R15 K162 ; ALERT_TAG := R15
	278	[169]	MUL      	R15 K139 R14 ; R15 := 1.000000 * R14
	279	[169]	SETGLOBALHASH	R15 K164 ; ALERT_FLAG := R15
	280	[171]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	281	[171]	LOADK    	R16 K166 ; R16 := "Nightmare"
	282	[171]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	283	[171]	SETGLOBALHASH	R15 K165 ; NIGHTMARE_TAG := R15
	284	[172]	MUL      	R15 K141 R14 ; R15 := 2.000000 * R14
	285	[172]	SETGLOBALHASH	R15 K167 ; NIGHTMARE_FLAG := R15
	286	[173]	LOADK    	R15 := 28800.000000
	287	[173]	SETGLOBALHASH	R15 K168 ; NIGHTMARE_MISSION_INTERVAL := R15
	288	[175]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	289	[175]	LOADK    	R16 K170 ; R16 := "Event"
	290	[175]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	291	[175]	SETGLOBALHASH	R15 K169 ; EVENT_TAG := R15
	292	[176]	MUL      	R15 K143 R14 ; R15 := 3.000000 * R14
	293	[176]	SETGLOBALHASH	R15 K171 ; EVENT_FLAG := R15
	294	[178]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	295	[178]	LOADK    	R16 K173 ; R16 := "PVP"
	296	[178]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	297	[178]	SETGLOBALHASH	R15 K172 ; PVP_TAG := R15
	298	[179]	MUL      	R15 K145 R14 ; R15 := 4.000000 * R14
	299	[179]	SETGLOBALHASH	R15 K174 ; PVP_FLAG := R15
	300	[181]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	301	[181]	LOADK    	R16 K176 ; R16 := "InvasionAttacker"
	302	[181]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	303	[181]	SETGLOBALHASH	R15 K175 ; INVASION_ATTACKER_TAG := R15
	304	[182]	MUL      	R15 K178 R14 ; R15 := 5.000000 * R14
	305	[182]	SETGLOBALHASH	R15 K177 ; INVASION_ATTACKER_FLAG := R15
	306	[184]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	307	[184]	LOADK    	R16 K180 ; R16 := "InvasionDefender"
	308	[184]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	309	[184]	SETGLOBALHASH	R15 K179 ; INVASION_DEFENDER_TAG := R15
	310	[185]	MUL      	R15 K182 R14 ; R15 := 6.000000 * R14
	311	[185]	SETGLOBALHASH	R15 K181 ; INVASION_DEFENDER_FLAG := R15
	312	[187]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	313	[187]	LOADK    	R16 K184 ; R16 := "HUB"
	314	[187]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	315	[187]	SETGLOBALHASH	R15 K183 ; HUB_TAG := R15
	316	[188]	MUL      	R15 K186 R14 ; R15 := 7.000000 * R14
	317	[188]	SETGLOBALHASH	R15 K185 ; HUB_FLAG := R15
	318	[204]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	319	[204]	LOADK    	R16 K188 ; R16 := "Syndicate"
	320	[204]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	321	[204]	SETGLOBALHASH	R15 K187 ; SYNDICATE_MISSION_TAG := R15
	322	[205]	MUL      	R15 K151 R14 ; R15 := 11.000000 * R14
	323	[205]	SETGLOBALHASH	R15 K189 ; SYNDICATE_MISSION_FLAG := R15
	324	[207]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	325	[207]	LOADK    	R16 K191 ; R16 := "Key"
	326	[207]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	327	[207]	SETGLOBALHASH	R15 K190 ; KEY_TAG := R15
	328	[208]	MUL      	R15 K193 R14 ; R15 := 12.000000 * R14
	329	[208]	SETGLOBALHASH	R15 K192 ; KEY_FLAG := R15
	330	[210]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	331	[210]	LOADK    	R16 K195 ; R16 := "Sortie"
	332	[210]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	333	[210]	SETGLOBALHASH	R15 K194 ; SORTIE_MISSION_TAG := R15
	334	[211]	MUL      	R15 K197 R14 ; R15 := 13.000000 * R14
	335	[211]	SETGLOBALHASH	R15 K196 ; SORTIE_MISSION_FLAG := R15
	336	[213]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	337	[213]	LOADK    	R16 K199 ; R16 := "ActiveMission"
	338	[213]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	339	[213]	SETGLOBALHASH	R15 K198 ; ACTIVE_MISSION_TAG := R15
	340	[214]	MUL      	R15 K201 R14 ; R15 := 14.000000 * R14
	341	[214]	SETGLOBALHASH	R15 K200 ; ACTIVE_MISSION_FLAG := R15
	342	[216]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	343	[216]	LOADK    	R16 K203 ; R16 := "GhostTower"
	344	[216]	CALL     	R15 2 2 ; R15 := R15(R16)
	345	[216]	SETGLOBALHASH	R15 K202 ; KUVA_TOWER_GOAL_TAG := R15
	346	[217]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	347	[217]	LOADK    	R16 K203 ; R16 := "GhostTower"
	348	[217]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	349	[217]	SETGLOBALHASH	R15 K204 ; KUVA_TOWER_MISSION_TAG := R15
	350	[218]	MUL      	R15 K206 R14 ; R15 := 15.000000 * R14
	351	[218]	SETGLOBALHASH	R15 K205 ; KUVA_TOWER_MISSION_FLAG := R15
	352	[220]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	353	[220]	LOADK    	R16 K208 ; R16 := "JUNCTION"
	354	[220]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	355	[220]	SETGLOBALHASH	R15 K207 ; JUNCTION_TAG := R15
	356	[221]	MUL      	R15 K210 R14 ; R15 := 16.000000 * R14
	357	[221]	SETGLOBALHASH	R15 K209 ; JUNCTION_FLAG := R15
	358	[223]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	359	[223]	LOADK    	R16 K212 ; R16 := "Nemesis"
	360	[223]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	361	[223]	SETGLOBALHASH	R15 K211 ; NEMESIS_MISSION_TAG := R15
	362	[224]	MUL      	R15 K214 R14 ; R15 := 17.000000 * R14
	363	[224]	SETGLOBALHASH	R15 K213 ; NEMESIS_MISSION_FLAG := R15
	364	[226]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	365	[226]	LOADK    	R16 K216 ; R16 := "EliteAlert"
	366	[226]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	367	[226]	SETGLOBALHASH	R15 K215 ; ELITE_ALERT_TAG := R15
	368	[227]	MUL      	R15 K218 R14 ; R15 := 18.000000 * R14
	369	[227]	SETGLOBALHASH	R15 K217 ; ELITE_ALERT_FLAG := R15
	370	[228]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	371	[228]	LOADK    	R16 K216 ; R16 := "EliteAlert"
	372	[228]	CALL     	R15 2 2 ; R15 := R15(R16)
	373	[228]	SETGLOBALHASH	R15 K219 ; ELITE_ALERT_PERIODIC_MISSION_TAG := R15
	374	[229]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	375	[229]	LOADK    	R16 K221 ; R16 := "EliteAlertB"
	376	[229]	CALL     	R15 2 2 ; R15 := R15(R16)
	377	[229]	SETGLOBALHASH	R15 K220 ; ELITE_ALERT_PERIODIC_MISSION_TAG_ALT := R15
	378	[230]	LOADK    	R15 := 3600.000000
	379	[230]	SETGLOBALHASH	R15 K222 ; ELITE_ALERT_MISSION_INTERVAL := R15
	380	[232]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	381	[232]	LOADK    	R16 K224 ; R16 := "Scenario"
	382	[232]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	383	[232]	SETGLOBALHASH	R15 K223 ; SCENARIO_BEACON_TAG := R15
	384	[233]	MUL      	R15 K226 R14 ; R15 := 19.000000 * R14
	385	[233]	SETGLOBALHASH	R15 K225 ; SCENARIO_BEACON_FLAG := R15
	386	[235]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	387	[235]	LOADK    	R16 K228 ; R16 := "Hard"
	388	[235]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	389	[235]	SETGLOBALHASH	R15 K227 ; HARD_MODE_TAG := R15
	390	[236]	MUL      	R15 K230 R14 ; R15 := 20.000000 * R14
	391	[236]	SETGLOBALHASH	R15 K229 ; HARD_MODE_FLAG := R15
	392	[237]	LOADK    	R15 := 100.000000
	393	[237]	SETGLOBALHASH	R15 K231 ; HARD_MODE_LEVEL_MODIFIER := R15
	394	[238]	LOADK    	R15 := 50.000000
	395	[238]	SETGLOBALHASH	R15 K232 ; HARD_MODE_ARCHWING_LEVEL_MODIFIER := R15
	396	[239]	LOADK    	R15 := 86400.000000
	397	[239]	SETGLOBALHASH	R15 K233 ; HARD_MODE_DAILY_MISSION_INTERVAL := R15
	398	[241]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	399	[241]	LOADK    	R16 K235 ; R16 := "HardDaily"
	400	[241]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	401	[241]	SETGLOBALHASH	R15 K234 ; HARD_DAILY_TAG := R15
	402	[242]	MUL      	R15 K237 R14 ; R15 := 21.000000 * R14
	403	[242]	SETGLOBALHASH	R15 K236 ; HARD_DAILY_FLAG := R15
	404	[244]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	405	[244]	LOADK    	R16 K239 ; R16 := "VoidStorm"
	406	[244]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	407	[244]	SETGLOBALHASH	R15 K238 ; VOID_STORM_TAG := R15
	408	[245]	MUL      	R15 K241 R14 ; R15 := 22.000000 * R14
	409	[245]	SETGLOBALHASH	R15 K240 ; VOID_STORM_FLAG := R15
	410	[247]	GETGLOBAL	R15 K160 ; R15 := TAG_SEPERATOR
	411	[247]	LOADK    	R16 K243 ; R16 := "LiteSortie"
	412	[247]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	413	[247]	SETGLOBALHASH	R15 K242 ; LITE_SORTIE_MISSION_TAG := R15
	414	[248]	MUL      	R15 K245 R14 ; R15 := 23.000000 * R14
	415	[248]	SETGLOBALHASH	R15 K244 ; LITE_SORTIE_MISSION_FLAG := R15
	416	[250]	LOADK    	R15 := 3600.000000
	417	[250]	SETGLOBALHASH	R15 K246 ; KUVA_TOWER_MISSION_INTERVAL := R15
	418	[252]	LOADK    	R15 K248 ; R15 := "OptionalGoal"
	419	[252]	SETGLOBALHASH	R15 K247 ; OPTIONAL_GOAL_PREFIX := R15
	420	[253]	LOADK    	R15 K250 ; R15 := "AnyNode"
	421	[253]	SETGLOBALHASH	R15 K249 ; ANY_NODE_PREFIX := R15
	422	[254]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	423	[254]	LOADK    	R16 K252 ; R16 := "ZarimanHub"
	424	[254]	CALL     	R15 2 2 ; R15 := R15(R16)
	425	[254]	SETGLOBALHASH	R15 K251 ; ZARIMAN_NODE_TAG := R15
	426	[255]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	427	[255]	LOADK    	R16 K254 ; R16 := "CetusHub4"
	428	[255]	CALL     	R15 2 2 ; R15 := R15(R16)
	429	[255]	SETGLOBALHASH	R15 K253 ; CETUS_NODE_TAG := R15
	430	[256]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	431	[256]	LOADK    	R16 K256 ; R16 := "SolNode228"
	432	[256]	CALL     	R15 2 2 ; R15 := R15(R16)
	433	[256]	SETGLOBALHASH	R15 K255 ; PLAINS_NODE_TAG := R15
	434	[257]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	435	[257]	LOADK    	R16 K258 ; R16 := "IronwakeHUB3"
	436	[257]	CALL     	R15 2 2 ; R15 := R15(R16)
	437	[257]	SETGLOBALHASH	R15 K257 ; IRON_WAKE_NODE_TAG := R15
	438	[258]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	439	[258]	LOADK    	R16 K260 ; R16 := "SolarisUnitedHub1"
	440	[258]	CALL     	R15 2 2 ; R15 := R15(R16)
	441	[258]	SETGLOBALHASH	R15 K259 ; FORTUNA_NODE_TAG := R15
	442	[259]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	443	[259]	LOADK    	R16 K262 ; R16 := "SolNode129"
	444	[259]	CALL     	R15 2 2 ; R15 := R15(R16)
	445	[259]	SETGLOBALHASH	R15 K261 ; ORB_VALLIS_NODE_TAG := R15
	446	[260]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	447	[260]	LOADK    	R16 K264 ; R16 := "DeimosHub"
	448	[260]	CALL     	R15 2 2 ; R15 := R15(R16)
	449	[260]	SETGLOBALHASH	R15 K263 ; OROKIN_TOWER_NODE_TAG := R15
	450	[261]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	451	[261]	LOADK    	R16 K266 ; R16 := "SolNode229"
	452	[261]	CALL     	R15 2 2 ; R15 := R15(R16)
	453	[261]	SETGLOBALHASH	R15 K265 ; ENTRATI_LANDSCAPE_NODE_TAG := R15
	454	[262]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	455	[262]	LOADK    	R16 K268 ; R16 := "ScenarioEventHub5"
	456	[262]	CALL     	R15 2 2 ; R15 := R15(R16)
	457	[262]	SETGLOBALHASH	R15 K267 ; SCENARIO_EVENT_HUB_TAG := R15
	458	[263]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	459	[263]	LOADK    	R16 K270 ; R16 := "SolNode234"
	460	[263]	CALL     	R15 2 2 ; R15 := R15(R16)
	461	[263]	SETGLOBALHASH	R15 K269 ; APARTMENT_NODE_TAG := R15
	462	[264]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	463	[264]	LOADK    	R16 K272 ; R16 := "SolNode230"
	464	[264]	CALL     	R15 2 2 ; R15 := R15(R16)
	465	[264]	SETGLOBALHASH	R15 K271 ; ZARIMAN_MISSION_A_TAG := R15
	466	[265]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	467	[265]	LOADK    	R16 K274 ; R16 := "SolNode231"
	468	[265]	CALL     	R15 2 2 ; R15 := R15(R16)
	469	[265]	SETGLOBALHASH	R15 K273 ; ZARIMAN_MISSION_B_TAG := R15
	470	[266]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	471	[266]	LOADK    	R16 K276 ; R16 := "SolNode232"
	472	[266]	CALL     	R15 2 2 ; R15 := R15(R16)
	473	[266]	SETGLOBALHASH	R15 K275 ; ZARIMAN_MISSION_C_TAG := R15
	474	[267]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	475	[267]	LOADK    	R16 K278 ; R16 := "SolNode233"
	476	[267]	CALL     	R15 2 2 ; R15 := R15(R16)
	477	[267]	SETGLOBALHASH	R15 K277 ; ZARIMAN_MISSION_D_TAG := R15
	478	[268]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	479	[268]	LOADK    	R16 K280 ; R16 := "SolNode235"
	480	[268]	CALL     	R15 2 2 ; R15 := R15(R16)
	481	[268]	SETGLOBALHASH	R15 K279 ; ZARIMAN_MISSION_E_TAG := R15
	482	[269]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	483	[269]	LOADK    	R16 K282 ; R16 := "/Lotus/Types/Keys/TestKeyForestOpLinkFragment"
	484	[269]	CALL     	R15 2 2 ; R15 := R15(R16)
	485	[269]	SETGLOBALHASH	R15 K281 ; SCENARIO_EVENT_GROUND_TAG := R15
	486	[270]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	487	[270]	LOADK    	R16 K284 ; R16 := "/Lotus/Types/Keys/TestKeyCrewBattleSentientSquadLink"
	488	[270]	CALL     	R15 2 2 ; R15 := R15(R16)
	489	[270]	SETGLOBALHASH	R15 K283 ; SCENARIO_EVENT_SPACE_TAG := R15
	490	[273]	LOADK    	R15 := 0.000000
	491	[273]	SETGLOBALHASH	R15 K285 ; PLAINS_ELO_IN_LISET := R15
	492	[274]	LOADK    	R15 := 1.000000
	493	[274]	SETGLOBALHASH	R15 K286 ; PLAINS_ELO_INSIDE_SAFE_ZONE := R15
	494	[275]	LOADK    	R15 := 2.000000
	495	[275]	SETGLOBALHASH	R15 K287 ; PLAINS_ELO_OUTSIDE_SAFE_ZONE := R15
	496	[276]	LOADK    	R15 := 3.000000
	497	[276]	SETGLOBALHASH	R15 K288 ; PLAINS_ELO_BOUNTY_ACTIVE := R15
	498	[277]	LOADK    	R15 := 10.000000
	499	[277]	SETGLOBALHASH	R15 K289 ; PLAINS_ELO_POST_NEW_WAR_OFFSET := R15
	500	[279]	GETGLOBAL	R15 K110 ; R15 := 0x0469f296
	501	[279]	LOADK    	R16 K290 ; R16 := "Darvo"
	502	[279]	CALL     	R15 2 2 ; R15 := R15(R16)
	503	[282]	NEWTABLE 	R16 8 0 ; R16 := {}
	504	[284]	LOADK    	R17 K292 ; R17 := "/Lotus/Language/Game/Faction_GrineerUC"
	505	[285]	LOADK    	R18 K293 ; R18 := "/Lotus/Language/Game/Faction_CorpusUC"
	506	[286]	LOADK    	R19 K294 ; R19 := "/Lotus/Language/Game/Faction_InfestationUC"
	507	[287]	LOADK    	R20 K295 ; R20 := "/Lotus/Language/Game/Faction_OrokinUC"
	508	[288]	LOADK    	R21 K296 ; R21 := "/Lotus/Language/Game/Faction_RedVeilUC"
	509	[289]	LOADK    	R22 K297 ; R22 := "/Lotus/Language/Game/Faction_SentientUC"
	510	[290]	LOADK    	R23 K298 ; R23 := "/Lotus/Language/Game/Faction_NarmerUC"
	511	[292]	LOADK    	R24 K299 ; R24 := ""
	512	[292]	SETLIST  	R16 8 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 8
	513	[292]	SETGLOBALHASH	R16 K291 ; FactionNames := R16
	514	[294]	LOADK    	R16 K301 ; R16 := "???"
	515	[294]	SETGLOBALHASH	R16 K300 ; HIDDEN_PLAYER_NAME := R16
	516	[297]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	517	[297]	LOADK    	R17 K303 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/AlertsFeatureItem"
	518	[297]	CALL     	R16 2 2 ; R16 := R16(R17)
	519	[297]	SETGLOBALHASH	R16 K302 ; SF_ALERTS := R16
	520	[298]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	521	[298]	LOADK    	R17 K305 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ArsenalFeatureItem"
	522	[298]	CALL     	R16 2 2 ; R16 := R16(R17)
	523	[298]	SETGLOBALHASH	R16 K304 ; SF_ARSENAL := R16
	524	[299]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	525	[299]	LOADK    	R17 K307 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
	526	[299]	CALL     	R16 2 2 ; R16 := R16(R17)
	527	[299]	SETGLOBALHASH	R16 K306 ; SF_CLAN := R16
	528	[301]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	529	[301]	LOADK    	R17 K309 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/FoundryFeatureItem"
	530	[301]	CALL     	R16 2 2 ; R16 := R16(R17)
	531	[301]	SETGLOBALHASH	R16 K308 ; SF_FOUNDRY := R16
	532	[302]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	533	[302]	LOADK    	R17 K311 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/FoundryVesselUpgradeFeatureItem"
	534	[302]	CALL     	R16 2 2 ; R16 := R16(R17)
	535	[302]	SETGLOBALHASH	R16 K310 ; SF_FOUNDRY_VESSEL_UPGRADE := R16
	536	[304]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	537	[304]	LOADK    	R17 K313 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/GeneticFoundryFeatureItem"
	538	[304]	CALL     	R16 2 2 ; R16 := R16(R17)
	539	[304]	SETGLOBALHASH	R16 K312 ; SF_GENETIC_FOUNDRY := R16
	540	[305]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	541	[305]	LOADK    	R17 K315 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/GeneticFoundryUpgradeFeatureItem"
	542	[305]	CALL     	R16 2 2 ; R16 := R16(R17)
	543	[305]	SETGLOBALHASH	R16 K314 ; SF_GENETIC_FOUNDRY_UPGRADE := R16
	544	[307]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	545	[307]	LOADK    	R17 K317 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/InfestedFoundryItem"
	546	[307]	CALL     	R16 2 2 ; R16 := R16(R17)
	547	[307]	SETGLOBALHASH	R16 K316 ; SF_INFESTED_FOUNDRY := R16
	548	[309]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	549	[309]	LOADK    	R17 K307 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
	550	[309]	CALL     	R16 2 2 ; R16 := R16(R17)
	551	[309]	SETGLOBALHASH	R16 K318 ; SF_MARKET_TIER_ONE := R16
	552	[310]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	553	[310]	LOADK    	R17 K307 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
	554	[310]	CALL     	R16 2 2 ; R16 := R16(R17)
	555	[310]	SETGLOBALHASH	R16 K319 ; SF_MARKET_TIER_TWO := R16
	556	[312]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	557	[312]	LOADK    	R17 K321 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
	558	[312]	CALL     	R16 2 2 ; R16 := R16(R17)
	559	[312]	SETGLOBALHASH	R16 K320 ; SF_MODS := R16
	560	[313]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	561	[313]	LOADK    	R17 K321 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
	562	[313]	CALL     	R16 2 2 ; R16 := R16(R17)
	563	[313]	SETGLOBALHASH	R16 K322 ; SF_MODS_FUSION := R16
	564	[314]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	565	[314]	LOADK    	R17 K321 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
	566	[314]	CALL     	R16 2 2 ; R16 := R16(R17)
	567	[314]	SETGLOBALHASH	R16 K323 ; SF_MODS_TRANSMUTE := R16
	568	[316]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	569	[316]	LOADK    	R17 K307 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
	570	[316]	CALL     	R16 2 2 ; R16 := R16(R17)
	571	[316]	SETGLOBALHASH	R16 K324 ; SF_CONCLAVE := R16
	572	[317]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	573	[317]	LOADK    	R17 K307 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
	574	[317]	CALL     	R16 2 2 ; R16 := R16(R17)
	575	[317]	SETGLOBALHASH	R16 K325 ; SF_SOCIAL_MENU := R16
	576	[318]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	577	[318]	LOADK    	R17 K327 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/MercuryNavigationFeatureItem"
	578	[318]	CALL     	R16 2 2 ; R16 := R16(R17)
	579	[318]	SETGLOBALHASH	R16 K326 ; SF_SOLAR_CHART := R16
	580	[320]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	581	[320]	LOADK    	R17 K329 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/VoidProjectionFeatureItem"
	582	[320]	CALL     	R16 2 2 ; R16 := R16(R17)
	583	[320]	SETGLOBALHASH	R16 K328 ; SF_VOID_PROJECTION := R16
	584	[322]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	585	[322]	LOADK    	R17 K331 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/PersonalQuartersFeatureItem"
	586	[322]	CALL     	R16 2 2 ; R16 := R16(R17)
	587	[322]	SETGLOBALHASH	R16 K330 ; SF_PERSONAL_QUARTERS := R16
	588	[324]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	589	[324]	LOADK    	R17 K333 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/RailjackCephalonShipFeatureItem"
	590	[324]	CALL     	R16 2 2 ; R16 := R16(R17)
	591	[324]	SETGLOBALHASH	R16 K332 ; SF_RAILJACK_CEPHALON := R16
	592	[326]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	593	[326]	LOADK    	R17 K335 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/RailjackKeyShipFeatureItem"
	594	[326]	CALL     	R16 2 2 ; R16 := R16(R17)
	595	[326]	SETGLOBALHASH	R16 K334 ; SF_RAILJACK_KEY := R16
	596	[328]	GETGLOBAL	R16 K63 ; R16 := 0x7ed0a956
	597	[328]	LOADK    	R17 K337 ; R17 := "/Lotus/Types/Items/ShipFeatureItems/AdvancedOrdisFeatureItem"
	598	[328]	CALL     	R16 2 2 ; R16 := R16(R17)
	599	[328]	SETGLOBALHASH	R16 K336 ; SF_ADVANCED_ORDIS := R16
	600	[332]	LOADK    	R16 := 20.000000
	601	[332]	SETGLOBALHASH	R16 K338 ; MAX_PVE_EXTRA_LOADOUTS := R16
	602	[333]	LOADK    	R16 := 20.000000
	603	[333]	SETGLOBALHASH	R16 K339 ; MAX_PVP_LOADOUTS := R16
	604	[337]	NEWTABLE 	R16 0 5 ; R16 := {}
	605	[338]	LOADK    	R17 K341 ; R17 := "VoidT1"
	606	[338]	GETGLOBAL	R18 K63 ; R18 := 0x7ed0a956
	607	[338]	LOADK    	R19 K342 ; R19 := "/Lotus/Types/Game/Projections/T1VoidProjection"
	608	[338]	CALL     	R18 2 2 ; R18 := R18(R19)
	609	[338]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	610	[339]	LOADK    	R17 K343 ; R17 := "VoidT2"
	611	[339]	GETGLOBAL	R18 K63 ; R18 := 0x7ed0a956
	612	[339]	LOADK    	R19 K344 ; R19 := "/Lotus/Types/Game/Projections/T2VoidProjection"
	613	[339]	CALL     	R18 2 2 ; R18 := R18(R19)
	614	[339]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	615	[340]	LOADK    	R17 K345 ; R17 := "VoidT3"
	616	[340]	GETGLOBAL	R18 K63 ; R18 := 0x7ed0a956
	617	[340]	LOADK    	R19 K346 ; R19 := "/Lotus/Types/Game/Projections/T3VoidProjection"
	618	[340]	CALL     	R18 2 2 ; R18 := R18(R19)
	619	[340]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	620	[341]	LOADK    	R17 K347 ; R17 := "VoidT4"
	621	[341]	GETGLOBAL	R18 K63 ; R18 := 0x7ed0a956
	622	[341]	LOADK    	R19 K348 ; R19 := "/Lotus/Types/Game/Projections/T4VoidProjection"
	623	[341]	CALL     	R18 2 2 ; R18 := R18(R19)
	624	[341]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	625	[342]	LOADK    	R17 K349 ; R17 := "VoidT5"
	626	[342]	GETGLOBAL	R18 K63 ; R18 := 0x7ed0a956
	627	[342]	LOADK    	R19 K350 ; R19 := "/Lotus/Types/Game/Projections/T5VoidProjectionImmortal"
	628	[342]	CALL     	R18 2 2 ; R18 := R18(R19)
	629	[342]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	630	[343]	SETGLOBALHASH	R16 K340 ; VOID_PROJECTION_ITEMS := R16
	631	[347]	NEWTABLE 	R16 0 4 ; R16 := {}
	632	[348]	NEWTABLE 	R17 0 2 ; R17 := {}
	633	[348]	LOADK    	R18 K352 ; R18 := "levelOverride"
	634	[348]	GETGLOBAL	R19 K63 ; R19 := 0x7ed0a956
	635	[348]	LOADK    	R20 K353 ; R20 := "/Lotus/Levels/Proc/TheNewWar/PartOne/PostWarOstronTown"
	636	[348]	CALL     	R19 2 2 ; R19 := R19(R20)
	637	[348]	SETTABLE 	R17 R18 R19 ; R17[R18] := R19
	638	[348]	LOADK    	R18 K354 ; R18 := "goalTag"
	639	[348]	GETGLOBAL	R19 K110 ; R19 := 0x0469f296
	640	[348]	LOADK    	R20 K355 ; R20 := "PostWar"
	641	[348]	CALL     	R19 2 2 ; R19 := R19(R20)
	642	[348]	SETTABLE 	R17 R18 R19 ; R17[R18] := R19
	643	[348]	SETTABLE 	R16 K254 R17 ; R16["CetusHub4"] := R17
	644	[349]	LOADK    	R17 K256 ; R17 := "SolNode228"
	645	[349]	NEWTABLE 	R18 0 6 ; R18 := {}
	646	[349]	LOADK    	R19 K352 ; R19 := "levelOverride"
	647	[349]	GETGLOBAL	R20 K63 ; R20 := 0x7ed0a956
	648	[349]	LOADK    	R21 K356 ; R21 := "/Lotus/Levels/Proc/TheNewWar/PartOne/PostWarEidolonLandscape"
	649	[349]	CALL     	R20 2 2 ; R20 := R20(R21)
	650	[349]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	651	[349]	LOADK    	R19 K354 ; R19 := "goalTag"
	652	[349]	GETGLOBAL	R20 K110 ; R20 := 0x0469f296
	653	[349]	LOADK    	R21 K355 ; R21 := "PostWar"
	654	[349]	CALL     	R20 2 2 ; R20 := R20(R21)
	655	[349]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	656	[350]	LOADK    	R19 K357 ; R19 := "eloMin"
	657	[350]	GETGLOBAL	R20 K285 ; R20 := PLAINS_ELO_IN_LISET
	658	[350]	GETGLOBAL	R21 K289 ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	659	[350]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	660	[350]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	661	[350]	LOADK    	R19 K358 ; R19 := "eloMax"
	662	[350]	GETGLOBAL	R20 K288 ; R20 := PLAINS_ELO_BOUNTY_ACTIVE
	663	[350]	GETGLOBAL	R21 K289 ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	664	[350]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	665	[350]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	666	[351]	LOADK    	R19 K359 ; R19 := "extraEnemySpec"
	667	[351]	LOADK    	R20 K360 ; R20 := "/Lotus/Types/Game/EnemySpecs/Narmer/GrineerNarmer"
	668	[351]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	669	[352]	LOADK    	R19 K361 ; R19 := "streamingOffset"
	670	[352]	GETGLOBAL	R20 K362 ; R20 := 0xa421af95
	671	[352]	LOADK    	R21 := 0.000000
	672	[352]	LOADK    	R22 K363 ; R22 := 0.249985
	673	[352]	LOADK    	R23 K364 ; R23 := -0.099987
	674	[352]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	675	[352]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	676	[352]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	677	[353]	LOADK    	R17 K260 ; R17 := "SolarisUnitedHub1"
	678	[353]	NEWTABLE 	R18 0 2 ; R18 := {}
	679	[353]	LOADK    	R19 K352 ; R19 := "levelOverride"
	680	[353]	GETGLOBAL	R20 K63 ; R20 := 0x7ed0a956
	681	[353]	LOADK    	R21 K365 ; R21 := "/Lotus/Levels/Proc/TheNewWar/PartTwo/PostWarFortuna"
	682	[353]	CALL     	R20 2 2 ; R20 := R20(R21)
	683	[353]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	684	[353]	LOADK    	R19 K354 ; R19 := "goalTag"
	685	[353]	GETGLOBAL	R20 K110 ; R20 := 0x0469f296
	686	[353]	LOADK    	R21 K355 ; R21 := "PostWar"
	687	[353]	CALL     	R20 2 2 ; R20 := R20(R21)
	688	[353]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	689	[353]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	690	[354]	LOADK    	R17 K262 ; R17 := "SolNode129"
	691	[354]	NEWTABLE 	R18 0 5 ; R18 := {}
	692	[354]	LOADK    	R19 K352 ; R19 := "levelOverride"
	693	[354]	GETGLOBAL	R20 K63 ; R20 := 0x7ed0a956
	694	[354]	LOADK    	R21 K366 ; R21 := "/Lotus/Levels/Proc/TheNewWar/PartTwo/PostWarVenusLandscape"
	695	[354]	CALL     	R20 2 2 ; R20 := R20(R21)
	696	[354]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	697	[354]	LOADK    	R19 K354 ; R19 := "goalTag"
	698	[354]	GETGLOBAL	R20 K110 ; R20 := 0x0469f296
	699	[354]	LOADK    	R21 K355 ; R21 := "PostWar"
	700	[354]	CALL     	R20 2 2 ; R20 := R20(R21)
	701	[354]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	702	[354]	LOADK    	R19 K357 ; R19 := "eloMin"
	703	[354]	GETGLOBAL	R20 K285 ; R20 := PLAINS_ELO_IN_LISET
	704	[354]	GETGLOBAL	R21 K289 ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	705	[354]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	706	[354]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	707	[354]	LOADK    	R19 K358 ; R19 := "eloMax"
	708	[354]	GETGLOBAL	R20 K288 ; R20 := PLAINS_ELO_BOUNTY_ACTIVE
	709	[354]	GETGLOBAL	R21 K289 ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	710	[354]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	711	[354]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	712	[354]	LOADK    	R19 K359 ; R19 := "extraEnemySpec"
	713	[354]	LOADK    	R20 K367 ; R20 := "/Lotus/Types/Game/EnemySpecs/Narmer/CorpusNarmer"
	714	[354]	SETTABLE 	R18 R19 R20 ; R18[R19] := R20
	715	[354]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	716	[355]	SETGLOBALHASH	R16 K351 ; POST_NEW_WAR_MISSIONS := R16
	717	[359]	LOADK    	R16 := 1.000000
	718	[359]	SETGLOBALHASH	R16 K368 ; HT_PROGRESS_BAR := R16
	719	[360]	LOADK    	R16 := 2.000000
	720	[360]	SETGLOBALHASH	R16 K369 ; HT_TIMER := R16
	721	[361]	LOADK    	R16 := 3.000000
	722	[361]	SETGLOBALHASH	R16 K370 ; HT_HEALTH_TRACKER := R16
	723	[362]	LOADK    	R16 := 4.000000
	724	[362]	SETGLOBALHASH	R16 K371 ; HT_ICON_BAR := R16
	725	[363]	LOADK    	R16 := 5.000000
	726	[363]	SETGLOBALHASH	R16 K372 ; HT_OPPONENT_BAR := R16
	727	[364]	LOADK    	R16 := 6.000000
	728	[364]	SETGLOBALHASH	R16 K373 ; HT_LABEL := R16
	729	[365]	LOADK    	R16 := 7.000000
	730	[365]	SETGLOBALHASH	R16 K374 ; HT_TEMPERATURE_BAR := R16
	731	[366]	LOADK    	R16 := 8.000000
	732	[366]	SETGLOBALHASH	R16 K375 ; HT_CORRUPTION_BAR := R16
	733	[367]	LOADK    	R16 := 9.000000
	734	[367]	SETGLOBALHASH	R16 K376 ; HT_NODE_CONFLICT_BAR := R16
	735	[371]	NEWTABLE 	R16 8 0 ; R16 := {}
	736	[373]	GETGLOBAL	R17 K378 ; R17 := gDecorationType
	737	[374]	GETGLOBAL	R18 K379 ; R18 := gDynamicCoverType
	738	[375]	GETGLOBAL	R19 K380 ; R19 := gEmplacementType
	739	[376]	GETGLOBAL	R20 K381 ; R20 := gDevourerType
	740	[377]	MOVE     	R21 R6 ; R21 := R6
	741	[378]	GETGLOBAL	R22 K382 ; R22 := gBaseAvatarType
	742	[379]	GETGLOBAL	R23 K383 ; R23 := gHitProxyType
	743	[381]	GETGLOBAL	R24 K384 ; R24 := gPickUpType
	744	[381]	SETLIST  	R16 8 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 8
	745	[381]	SETGLOBALHASH	R16 K377 ; SCAN_ENTITY_TYPES := R16
	746	[385]	NEWTABLE 	R16 0 13 ; R16 := {}
	747	[387]	LOADK    	R17 K386 ; R17 := "HOURS_PER_SECOND_EIDOLON"
	748	[387]	LOADK    	R18 K387 ; R18 := 0.002667
	749	[387]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	750	[388]	LOADK    	R17 K388 ; R17 := "HOURS_PER_SECOND_VENUS"
	751	[388]	LOADK    	R18 K389 ; R18 := 0.015000
	752	[388]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	753	[389]	LOADK    	R17 K390 ; R17 := "HOURS_PER_SECOND_ENTRATI"
	754	[389]	LOADK    	R18 K387 ; R18 := 0.002667
	755	[389]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	756	[390]	LOADK    	R17 K391 ; R17 := "HOURS_PER_SECOND_ZARIMAN"
	757	[390]	LOADK    	R18 K392 ; R18 := 0.001667
	758	[390]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	759	[392]	LOADK    	R17 K393 ; R17 := "TIME_OF_DAY_LABEL_NIGHT"
	760	[392]	LOADK    	R18 K394 ; R18 := "/Lotus/Language/Game/TimeOfDay_Night"
	761	[392]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	762	[393]	LOADK    	R17 K395 ; R17 := "TIME_OF_DAY_LABEL_DAY"
	763	[393]	LOADK    	R18 K396 ; R18 := "/Lotus/Language/Game/TimeOfDay_Day"
	764	[393]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	765	[395]	LOADK    	R17 K397 ; R17 := "TIME_OF_DAY_LABEL_WARM"
	766	[395]	LOADK    	R18 K398 ; R18 := "/Lotus/Language/Game/TimeOfDay_Warm"
	767	[395]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	768	[396]	LOADK    	R17 K399 ; R17 := "TIME_OF_DAY_LABEL_COLD"
	769	[396]	LOADK    	R18 K400 ; R18 := "/Lotus/Language/Game/TimeOfDay_Cold"
	770	[396]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	771	[398]	LOADK    	R17 K401 ; R17 := "TIME_OF_DAY_LABEL_FASS"
	772	[398]	LOADK    	R18 K402 ; R18 := "/Lotus/Language/Mods/ImmortalSixModName"
	773	[398]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	774	[399]	LOADK    	R17 K403 ; R17 := "TIME_OF_DAY_LABEL_VOME"
	775	[399]	LOADK    	R18 K404 ; R18 := "/Lotus/Language/Mods/ImmortalFourModName"
	776	[399]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	777	[400]	LOADK    	R17 K405 ; R17 := "TIME_OF_DAY_LABEL_CONFLICT"
	778	[400]	LOADK    	R18 K406 ; R18 := "/Lotus/Language/Game/Territory_Conflict"
	779	[400]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	780	[402]	LOADK    	R17 K407 ; R17 := "TIME_OF_DAY_LABEL_CORPUS"
	781	[402]	LOADK    	R18 K408 ; R18 := "/Lotus/Language/Zariman/ZarimanInfluenceCorpus"
	782	[402]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	783	[403]	LOADK    	R17 K409 ; R17 := "TIME_OF_DAY_LABEL_GRINEER"
	784	[403]	LOADK    	R18 K410 ; R18 := "/Lotus/Language/Zariman/ZarimanInfluenceGrineer"
	785	[403]	SETTABLE 	R16 R17 R18 ; R16[R17] := R18
	786	[404]	SETGLOBALHASH	R16 K385 ; TimeOfDayConstants := R16
	787	[407]	NEWTABLE 	R16 3 0 ; R16 := {}
	788	[407]	GETGLOBAL	R17 K110 ; R17 := 0x0469f296
	789	[407]	LOADK    	R18 K411 ; R18 := "GAME_L1_ARM2"
	790	[407]	CALL     	R17 2 2 ; R17 := R17(R18)
	791	[407]	GETGLOBAL	R18 K110 ; R18 := 0x0469f296
	792	[407]	LOADK    	R19 K412 ; R19 := "GAME_C1_HEAD1"
	793	[407]	CALL     	R18 2 2 ; R18 := R18(R19)
	794	[407]	GETGLOBAL	R19 K110 ; R19 := 0x0469f296
	795	[407]	LOADK    	R20 K413 ; R20 := "GAME_R1_LEG1"
	796	[407]	CALL     	R19 2 2 ; R19 := R19(R20)
	797	[407]	GETGLOBAL	R20 K110 ; R20 := 0x0469f296
	798	[407]	LOADK    	R21 K414 ; R21 := "GAME_L1_LEG2"
	799	[407]	CALL     	R20 2 0 ; R20,... := R20(R21)
	800	[407]	SETLIST  	R16 0 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 0
	801	[409]	GETGLOBAL	R17 K415 ; R17 := 0x2d0fad09
	802	[409]	LOADK    	R18 K416 ; R18 := "EE.Interface.Utilities"
	803	[409]	CALL     	R17 2 2 ; R17 := R17(R18)
	804	[410]	GETGLOBAL	R18 K415 ; R18 := 0x2d0fad09
	805	[410]	LOADK    	R19 K417 ; R19 := "Lotus.Interface.UIStyleUtilities"
	806	[410]	CALL     	R18 2 2 ; R18 := R18(R19)
	807	[412]	NEWTABLE 	R19 4 0 ; R19 := {}
	808	[412]	LOADK    	R20 K418 ; R20 := "#FFFFFF"
	809	[412]	LOADK    	R21 K419 ; R21 := "#24D628"
	810	[412]	LOADK    	R22 K420 ; R22 := "#238DFF"
	811	[412]	LOADK    	R23 K421 ; R23 := "#C724D6"
	812	[412]	SETLIST  	R19 4 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 4
	813	[413]	NEWTABLE 	R20 4 0 ; R20 := {}
	814	[413]	LOADK    	R21 K422 ; R21 := 16777215.000000
	815	[413]	LOADK    	R22 K423 ; R22 := 2414120.000000
	816	[413]	LOADK    	R23 K424 ; R23 := 2330111.000000
	817	[413]	LOADK    	R24 K425 ; R24 := 13051094.000000
	818	[413]	SETLIST  	R20 4 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 4
	819	[414]	LOADK    	R21 := 0.000000
	820	[416]	LOADK    	R22 := 0.000000
	821	[417]	LOADK    	R23 K426 ; R23 := 3289650.000000
	822	[419]	OP_LOADBOOL	R24 0 0 ; R24 := false
	823	[421]	GETGLOBAL	R25 K63 ; R25 := 0x7ed0a956
	824	[421]	LOADK    	R26 K427 ; R26 := "/Lotus/Types/Game/LotusPvpGameRules"
	825	[421]	CALL     	R25 2 2 ; R25 := R25(R26)
	826	[422]	GETGLOBAL	R26 K110 ; R26 := 0x0469f296
	827	[422]	LOADK    	R27 K428 ; R27 := "ScanPoint"
	828	[422]	CALL     	R26 2 2 ; R26 := R26(R27)
	829	[424]	GETGLOBAL	R27 K110 ; R27 := 0x0469f296
	830	[424]	LOADK    	R28 K429 ; R28 := "KuvaSurvival"
	831	[424]	CALL     	R27 2 2 ; R27 := R27(R28)
	832	[426]	LOADNIL  	R28 R35 ; R28 := R29 := R30 := R31 := R32 := R33 := R34 := R35 := nil
	833	[439]	NEWTABLE 	R36 0 13 ; R36 := {}
	834	[441]	LOADK    	R37 := 2.000000
	835	[441]	NEWTABLE 	R38 0 2 ; R38 := {}
	836	[441]	LOADK    	R39 := 0.000000
	837	[441]	OP_LOADBOOL	R40 1 0 ; R40 := true
	838	[441]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	839	[441]	LOADK    	R39 := 1.000000
	840	[441]	OP_LOADBOOL	R40 1 0 ; R40 := true
	841	[441]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	842	[441]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	843	[442]	LOADK    	R37 := 3.000000
	844	[442]	NEWTABLE 	R38 0 2 ; R38 := {}
	845	[442]	LOADK    	R39 := 2.000000
	846	[442]	OP_LOADBOOL	R40 1 0 ; R40 := true
	847	[442]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	848	[442]	LOADK    	R39 := 3.000000
	849	[442]	OP_LOADBOOL	R40 1 0 ; R40 := true
	850	[442]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	851	[442]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	852	[443]	LOADK    	R37 := 4.000000
	853	[443]	NEWTABLE 	R38 0 2 ; R38 := {}
	854	[443]	LOADK    	R39 := 8.000000
	855	[443]	OP_LOADBOOL	R40 1 0 ; R40 := true
	856	[443]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	857	[443]	LOADK    	R39 := 9.000000
	858	[443]	OP_LOADBOOL	R40 1 0 ; R40 := true
	859	[443]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	860	[443]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	861	[444]	LOADK    	R37 := 5.000000
	862	[444]	NEWTABLE 	R38 0 2 ; R38 := {}
	863	[444]	LOADK    	R39 := 4.000000
	864	[444]	OP_LOADBOOL	R40 1 0 ; R40 := true
	865	[444]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	866	[444]	LOADK    	R39 := 5.000000
	867	[444]	OP_LOADBOOL	R40 1 0 ; R40 := true
	868	[444]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	869	[444]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	870	[445]	LOADK    	R37 := 6.000000
	871	[445]	NEWTABLE 	R38 0 2 ; R38 := {}
	872	[445]	LOADK    	R39 := 12.000000
	873	[445]	OP_LOADBOOL	R40 1 0 ; R40 := true
	874	[445]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	875	[445]	LOADK    	R39 := 13.000000
	876	[445]	OP_LOADBOOL	R40 1 0 ; R40 := true
	877	[445]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	878	[445]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	879	[446]	LOADK    	R37 := 7.000000
	880	[446]	NEWTABLE 	R38 0 2 ; R38 := {}
	881	[446]	LOADK    	R39 := 16.000000
	882	[446]	OP_LOADBOOL	R40 1 0 ; R40 := true
	883	[446]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	884	[446]	LOADK    	R39 := 17.000000
	885	[446]	OP_LOADBOOL	R40 1 0 ; R40 := true
	886	[446]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	887	[446]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	888	[447]	LOADK    	R37 := 8.000000
	889	[447]	NEWTABLE 	R38 0 2 ; R38 := {}
	890	[447]	LOADK    	R39 := 20.000000
	891	[447]	OP_LOADBOOL	R40 1 0 ; R40 := true
	892	[447]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	893	[447]	LOADK    	R39 := 21.000000
	894	[447]	OP_LOADBOOL	R40 1 0 ; R40 := true
	895	[447]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	896	[447]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	897	[448]	LOADK    	R37 := 9.000000
	898	[448]	NEWTABLE 	R38 0 2 ; R38 := {}
	899	[448]	LOADK    	R39 := 24.000000
	900	[448]	OP_LOADBOOL	R40 1 0 ; R40 := true
	901	[448]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	902	[448]	LOADK    	R39 := 25.000000
	903	[448]	OP_LOADBOOL	R40 1 0 ; R40 := true
	904	[448]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	905	[448]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	906	[449]	LOADK    	R37 := 10.000000
	907	[449]	NEWTABLE 	R38 0 2 ; R38 := {}
	908	[449]	LOADK    	R39 := 22.000000
	909	[449]	OP_LOADBOOL	R40 1 0 ; R40 := true
	910	[449]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	911	[449]	LOADK    	R39 := 23.000000
	912	[449]	OP_LOADBOOL	R40 1 0 ; R40 := true
	913	[449]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	914	[449]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	915	[450]	LOADK    	R37 := 11.000000
	916	[450]	NEWTABLE 	R38 0 2 ; R38 := {}
	917	[450]	LOADK    	R39 := 18.000000
	918	[450]	OP_LOADBOOL	R40 1 0 ; R40 := true
	919	[450]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	920	[450]	LOADK    	R39 := 19.000000
	921	[450]	OP_LOADBOOL	R40 1 0 ; R40 := true
	922	[450]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	923	[450]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	924	[451]	LOADK    	R37 := 12.000000
	925	[451]	NEWTABLE 	R38 0 2 ; R38 := {}
	926	[451]	LOADK    	R39 := 13.000000
	927	[451]	OP_LOADBOOL	R40 1 0 ; R40 := true
	928	[451]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	929	[451]	LOADK    	R39 := 14.000000
	930	[451]	OP_LOADBOOL	R40 1 0 ; R40 := true
	931	[451]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	932	[451]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	933	[452]	LOADK    	R37 := 13.000000
	934	[452]	NEWTABLE 	R38 0 2 ; R38 := {}
	935	[452]	LOADK    	R39 := 6.000000
	936	[452]	OP_LOADBOOL	R40 1 0 ; R40 := true
	937	[452]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	938	[452]	LOADK    	R39 := 7.000000
	939	[452]	OP_LOADBOOL	R40 1 0 ; R40 := true
	940	[452]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	941	[452]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	942	[453]	LOADK    	R37 := 16.000000
	943	[453]	NEWTABLE 	R38 0 2 ; R38 := {}
	944	[453]	LOADK    	R39 := 10.000000
	945	[453]	OP_LOADBOOL	R40 1 0 ; R40 := true
	946	[453]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	947	[453]	LOADK    	R39 := 11.000000
	948	[453]	OP_LOADBOOL	R40 1 0 ; R40 := true
	949	[453]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	950	[453]	SETTABLE 	R36 R37 R38 ; R36[R37] := R38
	951	[457]	NEWTABLE 	R37 1 0 ; R37 := {}
	952	[460]	LOADK    	R38 := 34.000000
	953	[460]	SETLIST  	R37 1 1 ; R37[(1-1)*FPF+i] := R(37+i), 1 <= i <= 1
	954	[462]	GETGLOBAL	R38 K63 ; R38 := 0x7ed0a956
	955	[462]	LOADK    	R39 K430 ; R39 := "/Lotus/Types/Keys/WarWithinQuest/WarWithinQuestKeyChain"
	956	[462]	CALL     	R38 2 2 ; R38 := R38(R39)
	957	[463]	GETGLOBAL	R39 K63 ; R39 := 0x7ed0a956
	958	[463]	LOADK    	R40 K431 ; R40 := "/Lotus/Types/Keys/WraithQuest/WraithQuestKeyChain"
	959	[463]	CALL     	R39 2 2 ; R39 := R39(R40)
	960	[464]	GETGLOBAL	R40 K63 ; R40 := 0x7ed0a956
	961	[464]	LOADK    	R41 K432 ; R41 := "/Lotus/Types/Enemies/AdvancedSpawners/LarvlingSpawner"
	962	[464]	CALL     	R40 2 2 ; R40 := R40(R41)
	963	[465]	GETGLOBAL	R41 K63 ; R41 := 0x7ed0a956
	964	[465]	LOADK    	R42 K433 ; R42 := "/Lotus/Types/Enemies/AdvancedSpawners/LawyerTreasurerSpawner"
	965	[465]	CALL     	R41 2 2 ; R41 := R41(R42)
	966	[466]	GETGLOBAL	R42 K63 ; R42 := 0x7ed0a956
	967	[466]	LOADK    	R43 K434 ; R43 := "/Lotus/Types/Enemies/AdvancedSpawners/LawyerPetSpawner"
	968	[466]	CALL     	R42 2 2 ; R42 := R42(R43)
	969	[467]	GETGLOBAL	R43 K63 ; R43 := 0x7ed0a956
	970	[467]	LOADK    	R44 K435 ; R44 := "/Lotus/Types/Keys/InfestedMicroplanetQuest/InfestedMicroplanetQuestKeyChain"
	971	[467]	CALL     	R43 2 2 ; R43 := R43(R44)
	972	[468]	GETGLOBAL	R44 K63 ; R44 := 0x7ed0a956
	973	[468]	LOADK    	R45 K436 ; R45 := "/Lotus/Types/Keys/SolarisQuest/SolarisQuestKeyChain"
	974	[468]	CALL     	R44 2 2 ; R44 := R44(R45)
	975	[469]	NEWTABLE 	R45 3 0 ; R45 := {}
	976	[470]	GETGLOBAL	R46 K63 ; R46 := 0x7ed0a956
	977	[470]	LOADK    	R47 K437 ; R47 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
	978	[470]	CALL     	R46 2 2 ; R46 := R46(R47)
	979	[471]	GETGLOBAL	R47 K63 ; R47 := 0x7ed0a956
	980	[471]	LOADK    	R48 K438 ; R48 := "/Lotus/Types/Keys/NewWarIntroQuest/NewWarIntroKeyChain"
	981	[471]	CALL     	R47 2 2 ; R47 := R47(R48)
	982	[472]	GETGLOBAL	R48 K63 ; R48 := 0x7ed0a956
	983	[472]	LOADK    	R49 K439 ; R49 := "/Lotus/Types/Keys/SacrificeQuest/SacrificeQuestKeyChain"
	984	[472]	CALL     	R48 2 2 ; R48 := R48(R49)
	985	[473]	GETGLOBAL	R49 K63 ; R49 := 0x7ed0a956
	986	[473]	LOADK    	R50 K440 ; R50 := "/Lotus/Types/Keys/ChimeraQuest/ChimeraKeyChain"
	987	[473]	CALL     	R49 2 0 ; R49,... := R49(R50)
	988	[474]	SETLIST  	R45 0 1 ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 0
	989	[482]	CLOSURE  	R46 0 ; R46 := closure(Function #1)
	990	[476]	SETGLOBAL	R46 K441 ; GetWarframeFromOperator := R46
	991	[493]	CLOSURE  	R46 1 ; R46 := closure(Function #2)
	992	[484]	SETGLOBAL	R46 K442 ; UnmountVehicleAndGetRider := R46
	993	[503]	CLOSURE  	R46 2 ; R46 := closure(Function #3)
	994	[503]	MOVE     	R0 R17 ; R0 := R17
	995	[511]	CLOSURE  	R47 3 ; R47 := closure(Function #4)
	996	[505]	SETGLOBAL	R47 K443 ; ShouldBlockForTutorial := R47
	997	[536]	CLOSURE  	R47 4 ; R47 := closure(Function #5)
	998	[513]	SETGLOBAL	R47 K444 ; GetPhotoshopDefaultSwatches := R47
	999	[565]	CLOSURE  	R47 5 ; R47 := closure(Function #6)
	1000	[538]	SETGLOBAL	R47 K445 ; GetKubrowTypesTable := R47
	1001	[621]	CLOSURE  	R47 6 ; R47 := closure(Function #7)
	1002	[621]	MOVE     	R0 R17 ; R0 := R17
	1003	[636]	CLOSURE  	R48 7 ; R48 := closure(Function #8)
	1004	[640]	CLOSURE  	R49 8 ; R49 := closure(Function #9)
	1005	[640]	MOVE     	R0 R48 ; R0 := R48
	1006	[638]	SETGLOBAL	R49 K446 ; GetSecondElements := R49
	1007	[651]	CLOSURE  	R49 9 ; R49 := closure(Function #10)
	1008	[651]	MOVE     	R0 R48 ; R0 := R48
	1009	[651]	MOVE     	R0 R47 ; R0 := R47
	1010	[655]	CLOSURE  	R50 10 ; R50 := closure(Function #11)
	1011	[655]	MOVE     	R0 R49 ; R0 := R49
	1012	[653]	SETGLOBAL	R50 K447 ; SecondsToFormattedTime := R50
	1013	[687]	CLOSURE  	R50 11 ; R50 := closure(Function #12)
	1014	[687]	MOVE     	R0 R48 ; R0 := R48
	1015	[687]	MOVE     	R0 R17 ; R0 := R17
	1016	[657]	SETGLOBAL	R50 K448 ; GetTwitterStyleTime := R50
	1017	[711]	CLOSURE  	R50 12 ; R50 := closure(Function #13)
	1018	[711]	MOVE     	R0 R48 ; R0 := R48
	1019	[715]	CLOSURE  	R51 13 ; R51 := closure(Function #14)
	1020	[715]	MOVE     	R0 R50 ; R0 := R50
	1021	[713]	SETGLOBAL	R51 K449 ; GetStoreTime := R51
	1022	[745]	CLOSURE  	R51 14 ; R51 := closure(Function #15)
	1023	[745]	MOVE     	R0 R48 ; R0 := R48
	1024	[749]	CLOSURE  	R52 15 ; R52 := closure(Function #16)
	1025	[749]	MOVE     	R0 R51 ; R0 := R51
	1026	[747]	SETGLOBAL	R52 K450 ; GetFullTime := R52
	1027	[767]	CLOSURE  	R52 16 ; R52 := closure(Function #17)
	1028	[767]	MOVE     	R0 R11 ; R0 := R11
	1029	[751]	SETGLOBAL	R52 K451 ; GetPlayerAvatar := R52
	1030	[784]	CLOSURE  	R52 17 ; R52 := closure(Function #18)
	1031	[788]	CLOSURE  	R53 18 ; R53 := closure(Function #19)
	1032	[788]	MOVE     	R0 R52 ; R0 := R52
	1033	[786]	SETGLOBAL	R53 K452 ; GetMainMenuSuitAvatar := R53
	1034	[798]	CLOSURE  	R53 19 ; R53 := closure(Function #20)
	1035	[798]	MOVE     	R0 R52 ; R0 := R52
	1036	[802]	CLOSURE  	R54 20 ; R54 := closure(Function #21)
	1037	[802]	MOVE     	R0 R53 ; R0 := R53
	1038	[800]	SETGLOBAL	R54 K453 ; GetMainMenuSentinelAvatar := R54
	1039	[816]	CLOSURE  	R54 21 ; R54 := closure(Function #22)
	1040	[816]	MOVE     	R0 R22 ; R0 := R22
	1041	[816]	MOVE     	R0 R23 ; R0 := R23
	1042	[816]	MOVE     	R0 R17 ; R0 := R17
	1043	[883]	CLOSURE  	R55 22 ; R55 := closure(Function #23)
	1044	[883]	MOVE     	R0 R54 ; R0 := R54
	1045	[883]	MOVE     	R0 R19 ; R0 := R19
	1046	[887]	CLOSURE  	R56 23 ; R56 := closure(Function #24)
	1047	[887]	MOVE     	R0 R55 ; R0 := R55
	1048	[885]	SETGLOBAL	R56 K454 ; GetItemToolTipText := R56
	1049	[895]	CLOSURE  	R56 24 ; R56 := closure(Function #25)
	1050	[895]	MOVE     	R0 R20 ; R0 := R20
	1051	[889]	SETGLOBAL	R56 K455 ; GetItemRarityColor := R56
	1052	[909]	CLOSURE  	R56 25 ; R56 := closure(Function #26)
	1053	[899]	SETGLOBAL	R56 K456 ; OpenColorPicker := R56
	1054	[1131]	CLOSURE  	R56 26 ; R56 := closure(Function #27)
	1055	[1131]	MOVE     	R0 R52 ; R0 := R52
	1056	[1131]	MOVE     	R0 R21 ; R0 := R21
	1057	[1131]	MOVE     	R0 R17 ; R0 := R17
	1058	[911]	SETGLOBAL	R56 K457 ; UpdateSuit := R56
	1059	[1139]	CLOSURE  	R56 27 ; R56 := closure(Function #28)
	1060	[1133]	SETGLOBAL	R56 K458 ; UpdateMiniGameHeadTracking := R56
	1061	[1143]	CLOSURE  	R56 28 ; R56 := closure(Function #29)
	1062	[1142]	SETGLOBAL	R56 K459 ; OnAvatarImageSet := R56
	1063	[1217]	CLOSURE  	R56 29 ; R56 := closure(Function #30)
	1064	[1145]	SETGLOBAL	R56 K460 ; InitializeProfileIconList := R56
	1065	[1231]	CLOSURE  	R56 30 ; R56 := closure(Function #31)
	1066	[1220]	SETGLOBAL	R56 K461 ; UnregisterProfileIcon := R56
	1067	[1253]	CLOSURE  	R56 31 ; R56 := closure(Function #32)
	1068	[1233]	SETGLOBAL	R56 K462 ; RegisterProfileIcon := R56
	1069	[1266]	CLOSURE  	R56 32 ; R56 := closure(Function #33)
	1070	[1314]	CLOSURE  	R57 33 ; R57 := closure(Function #34)
	1071	[1407]	CLOSURE  	R58 34 ; R58 := closure(Function #35)
	1072	[1407]	MOVE     	R0 R46 ; R0 := R46
	1073	[1407]	MOVE     	R0 R17 ; R0 := R17
	1074	[1407]	MOVE     	R0 R56 ; R0 := R56
	1075	[1407]	MOVE     	R0 R57 ; R0 := R57
	1076	[1316]	SETGLOBAL	R58 K463 ; ShowReportMenu := R58
	1077	[1411]	CLOSURE  	R58 35 ; R58 := closure(Function #36)
	1078	[1411]	MOVE     	R0 R17 ; R0 := R17
	1079	[1409]	SETGLOBAL	R58 K464 ; ToRad := R58
	1080	[1415]	CLOSURE  	R58 36 ; R58 := closure(Function #37)
	1081	[1415]	MOVE     	R0 R17 ; R0 := R17
	1082	[1413]	SETGLOBAL	R58 K465 ; TransformPixelToViewportCoordinates := R58
	1083	[1419]	CLOSURE  	R58 37 ; R58 := closure(Function #38)
	1084	[1419]	MOVE     	R0 R17 ; R0 := R17
	1085	[1417]	SETGLOBAL	R58 K466 ; GetRootBasedPosition := R58
	1086	[1423]	CLOSURE  	R58 38 ; R58 := closure(Function #39)
	1087	[1423]	MOVE     	R0 R17 ; R0 := R17
	1088	[1421]	SETGLOBAL	R58 K467 ; CreateScreenParticles := R58
	1089	[1453]	CLOSURE  	R58 39 ; R58 := closure(Function #40)
	1090	[1426]	SETGLOBAL	R58 K468 ; SetupAbilityUIBySuitType := R58
	1091	[1482]	CLOSURE  	R58 40 ; R58 := closure(Function #41)
	1092	[1456]	SETGLOBAL	R58 K469 ; SetupAbilityUIBySuitInstance := R58
	1093	[1543]	CLOSURE  	R58 41 ; R58 := closure(Function #42)
	1094	[1543]	MOVE     	R0 R17 ; R0 := R17
	1095	[1485]	SETGLOBAL	R58 K470 ; InitializeContextMenu := R58
	1096	[1563]	CLOSURE  	R58 42 ; R58 := closure(Function #43)
	1097	[1546]	SETGLOBAL	R58 K471 ; GetPointsRemainingForItem := R58
	1098	[1569]	CLOSURE  	R58 43 ; R58 := closure(Function #44)
	1099	[1573]	CLOSURE  	R59 44 ; R59 := closure(Function #45)
	1100	[1573]	MOVE     	R0 R58 ; R0 := R58
	1101	[1571]	SETGLOBAL	R59 K472 ; CanPurchaseIfAlreadyOwned := R59
	1102	[1589]	CLOSURE  	R59 45 ; R59 := closure(Function #46)
	1103	[1576]	SETGLOBAL	R59 K473 ; HaveEnoughSlots := R59
	1104	[1607]	CLOSURE  	R59 46 ; R59 := closure(Function #47)
	1105	[1591]	SETGLOBAL	R59 K474 ; IsXPLocked := R59
	1106	[1631]	CLOSURE  	R59 47 ; R59 := closure(Function #48)
	1107	[1609]	SETGLOBAL	R59 K475 ; IsPVPLocked := R59
	1108	[1635]	CLOSURE  	R59 48 ; R59 := closure(Function #49)
	1109	[1635]	MOVE     	R0 R17 ; R0 := R17
	1110	[1633]	SETGLOBAL	R59 K476 ; CreateParticles := R59
	1111	[1640]	CLOSURE  	R59 49 ; R59 := closure(Function #50)
	1112	[1643]	CLOSURE  	R60 50 ; R60 := closure(Function #51)
	1113	[1643]	MOVE     	R0 R59 ; R0 := R59
	1114	[1641]	SETGLOBAL	R60 K477 ; IsDevServer := R60
	1115	[1648]	CLOSURE  	R60 51 ; R60 := closure(Function #52)
	1116	[1651]	CLOSURE  	R61 52 ; R61 := closure(Function #53)
	1117	[1651]	MOVE     	R0 R60 ; R0 := R60
	1118	[1649]	SETGLOBAL	R61 K478 ; IsTestServer := R61
	1119	[1656]	CLOSURE  	R61 53 ; R61 := closure(Function #54)
	1120	[1659]	CLOSURE  	R62 54 ; R62 := closure(Function #55)
	1121	[1659]	MOVE     	R0 R61 ; R0 := R61
	1122	[1657]	SETGLOBAL	R62 K479 ; IsLocalServer := R62
	1123	[1668]	CLOSURE  	R62 55 ; R62 := closure(Function #56)
	1124	[1668]	MOVE     	R0 R59 ; R0 := R59
	1125	[1668]	MOVE     	R0 R60 ; R0 := R60
	1126	[1668]	MOVE     	R0 R61 ; R0 := R61
	1127	[1661]	SETGLOBAL	R62 K480 ; IsRetailServer := R62
	1128	[1683]	CLOSURE  	R62 56 ; R62 := closure(Function #57)
	1129	[1692]	CLOSURE  	R63 57 ; R63 := closure(Function #58)
	1130	[1692]	MOVE     	R0 R62 ; R0 := R62
	1131	[1727]	CLOSURE  	R64 58 ; R64 := closure(Function #59)
	1132	[1727]	MOVE     	R0 R63 ; R0 := R63
	1133	[1731]	CLOSURE  	R65 59 ; R65 := closure(Function #60)
	1134	[1731]	MOVE     	R0 R62 ; R0 := R62
	1135	[1729]	SETGLOBAL	R65 K481 ; IsInGamePlay := R65
	1136	[1739]	CLOSURE  	R65 60 ; R65 := closure(Function #61)
	1137	[1743]	CLOSURE  	R66 61 ; R66 := closure(Function #62)
	1138	[1743]	MOVE     	R0 R65 ; R0 := R65
	1139	[1741]	SETGLOBAL	R66 K482 ; IsInMissionOrDojo := R66
	1140	[1755]	CLOSURE  	R66 62 ; R66 := closure(Function #63)
	1141	[1759]	CLOSURE  	R67 63 ; R67 := closure(Function #64)
	1142	[1759]	MOVE     	R0 R66 ; R0 := R66
	1143	[1757]	SETGLOBAL	R67 K483 ; IsInMission := R67
	1144	[1772]	CLOSURE  	R67 64 ; R67 := closure(Function #65)
	1145	[1772]	MOVE     	R0 R31 ; R0 := R31
	1146	[1772]	MOVE     	R0 R66 ; R0 := R66
	1147	[1761]	SETGLOBAL	R67 K484 ; IsInNewWarAltCharacterMission := R67
	1148	[1776]	CLOSURE  	R67 65 ; R67 := closure(Function #66)
	1149	[1776]	MOVE     	R0 R63 ; R0 := R63
	1150	[1774]	SETGLOBAL	R67 K485 ; GetStarChart := R67
	1151	[1780]	CLOSURE  	R67 66 ; R67 := closure(Function #67)
	1152	[1780]	MOVE     	R0 R64 ; R0 := R64
	1153	[1778]	SETGLOBAL	R67 K486 ; GetStarChartNodes := R67
	1154	[1784]	CLOSURE  	R67 67 ; R67 := closure(Function #68)
	1155	[1788]	CLOSURE  	R68 68 ; R68 := closure(Function #69)
	1156	[1788]	MOVE     	R0 R67 ; R0 := R67
	1157	[1786]	SETGLOBAL	R68 K487 ; IsInHub := R68
	1158	[1792]	CLOSURE  	R68 69 ; R68 := closure(Function #70)
	1159	[1796]	CLOSURE  	R69 70 ; R69 := closure(Function #71)
	1160	[1796]	MOVE     	R0 R68 ; R0 := R68
	1161	[1794]	SETGLOBAL	R69 K488 ; RegionIsAKey := R69
	1162	[1800]	CLOSURE  	R69 71 ; R69 := closure(Function #72)
	1163	[1798]	SETGLOBAL	R69 K489 ; ResourceDronesEnabledForRegion := R69
	1164	[1947]	CLOSURE  	R69 72 ; R69 := closure(Function #73)
	1165	[1947]	MOVE     	R0 R63 ; R0 := R63
	1166	[1947]	MOVE     	R0 R68 ; R0 := R68
	1167	[1951]	CLOSURE  	R70 73 ; R70 := closure(Function #74)
	1168	[1951]	MOVE     	R0 R69 ; R0 := R69
	1169	[1949]	SETGLOBAL	R70 K490 ; GetNodeInfo := R70
	1170	[2012]	CLOSURE  	R70 74 ; R70 := closure(Function #75)
	1171	[2012]	MOVE     	R0 R63 ; R0 := R63
	1172	[2012]	MOVE     	R0 R69 ; R0 := R69
	1173	[2012]	MOVE     	R0 R17 ; R0 := R17
	1174	[2012]	MOVE     	R0 R13 ; R0 := R13
	1175	[2016]	CLOSURE  	R71 75 ; R71 := closure(Function #76)
	1176	[2016]	MOVE     	R0 R70 ; R0 := R70
	1177	[2014]	SETGLOBAL	R71 K491 ; BuildGameModeIdForNode := R71
	1178	[2020]	CLOSURE  	R71 76 ; R71 := closure(Function #77)
	1179	[2018]	SETGLOBAL	R71 K492 ; BuildGameModeIdForSimulacrum := R71
	1180	[2024]	CLOSURE  	R71 77 ; R71 := closure(Function #78)
	1181	[2022]	SETGLOBAL	R71 K493 ; IsSimulacrumGameModeId := R71
	1182	[2028]	CLOSURE  	R71 78 ; R71 := closure(Function #79)
	1183	[2026]	SETGLOBAL	R71 K494 ; BuildGameModeIdForPhotobooth := R71
	1184	[2032]	CLOSURE  	R71 79 ; R71 := closure(Function #80)
	1185	[2030]	SETGLOBAL	R71 K495 ; IsPhotoboothGameModeId := R71
	1186	[2037]	CLOSURE  	R71 80 ; R71 := closure(Function #81)
	1187	[2037]	MOVE     	R0 R13 ; R0 := R13
	1188	[2034]	SETGLOBAL	R71 K496 ; BuildGameModeIdForPVP := R71
	1189	[2041]	CLOSURE  	R71 81 ; R71 := closure(Function #82)
	1190	[2041]	MOVE     	R0 R13 ; R0 := R13
	1191	[2039]	SETGLOBAL	R71 K497 ; BuildGameModeIdForClanDojo := R71
	1192	[2045]	CLOSURE  	R71 82 ; R71 := closure(Function #83)
	1193	[2045]	MOVE     	R0 R13 ; R0 := R13
	1194	[2043]	SETGLOBAL	R71 K498 ; IsClanDojoGameModeId := R71
	1195	[2049]	CLOSURE  	R71 83 ; R71 := closure(Function #84)
	1196	[2049]	MOVE     	R0 R13 ; R0 := R13
	1197	[2047]	SETGLOBAL	R71 K499 ; BuildGameModeIdForDojoDuel := R71
	1198	[2053]	CLOSURE  	R71 84 ; R71 := closure(Function #85)
	1199	[2053]	MOVE     	R0 R13 ; R0 := R13
	1200	[2051]	SETGLOBAL	R71 K500 ; IsDojoDuelGameModeId := R71
	1201	[2057]	CLOSURE  	R71 85 ; R71 := closure(Function #86)
	1202	[2057]	MOVE     	R0 R14 ; R0 := R14
	1203	[2061]	CLOSURE  	R72 86 ; R72 := closure(Function #87)
	1204	[2061]	MOVE     	R0 R71 ; R0 := R71
	1205	[2059]	SETGLOBAL	R72 K501 ; IsAlertGameModeId := R72
	1206	[2065]	CLOSURE  	R72 87 ; R72 := closure(Function #88)
	1207	[2065]	MOVE     	R0 R14 ; R0 := R14
	1208	[2069]	CLOSURE  	R73 88 ; R73 := closure(Function #89)
	1209	[2069]	MOVE     	R0 R72 ; R0 := R72
	1210	[2067]	SETGLOBAL	R73 K502 ; IsNightmareGameModeId := R73
	1211	[2073]	CLOSURE  	R73 89 ; R73 := closure(Function #90)
	1212	[2073]	MOVE     	R0 R14 ; R0 := R14
	1213	[2077]	CLOSURE  	R74 90 ; R74 := closure(Function #91)
	1214	[2077]	MOVE     	R0 R73 ; R0 := R73
	1215	[2075]	SETGLOBAL	R74 K503 ; IsEventGameModeId := R74
	1216	[2081]	CLOSURE  	R74 91 ; R74 := closure(Function #92)
	1217	[2081]	MOVE     	R0 R14 ; R0 := R14
	1218	[2085]	CLOSURE  	R75 92 ; R75 := closure(Function #93)
	1219	[2085]	MOVE     	R0 R14 ; R0 := R14
	1220	[2089]	CLOSURE  	R76 93 ; R76 := closure(Function #94)
	1221	[2089]	MOVE     	R0 R14 ; R0 := R14
	1222	[2093]	CLOSURE  	R77 94 ; R77 := closure(Function #95)
	1223	[2093]	MOVE     	R0 R76 ; R0 := R76
	1224	[2091]	SETGLOBAL	R77 K504 ; IsPvpGameModeId := R77
	1225	[2098]	CLOSURE  	R77 95 ; R77 := closure(Function #96)
	1226	[2098]	MOVE     	R0 R14 ; R0 := R14
	1227	[2102]	CLOSURE  	R78 96 ; R78 := closure(Function #97)
	1228	[2102]	MOVE     	R0 R77 ; R0 := R77
	1229	[2100]	SETGLOBAL	R78 K505 ; IsSyndicateGameModeId := R78
	1230	[2107]	CLOSURE  	R78 97 ; R78 := closure(Function #98)
	1231	[2107]	MOVE     	R0 R14 ; R0 := R14
	1232	[2111]	CLOSURE  	R79 98 ; R79 := closure(Function #99)
	1233	[2111]	MOVE     	R0 R78 ; R0 := R78
	1234	[2109]	SETGLOBAL	R79 K506 ; IsSortieGameModeId := R79
	1235	[2116]	CLOSURE  	R79 99 ; R79 := closure(Function #100)
	1236	[2116]	MOVE     	R0 R14 ; R0 := R14
	1237	[2121]	CLOSURE  	R80 100 ; R80 := closure(Function #101)
	1238	[2121]	MOVE     	R0 R14 ; R0 := R14
	1239	[2125]	CLOSURE  	R81 101 ; R81 := closure(Function #102)
	1240	[2125]	MOVE     	R0 R80 ; R0 := R80
	1241	[2123]	SETGLOBAL	R81 K507 ; IsHubGameModeId := R81
	1242	[2130]	CLOSURE  	R81 102 ; R81 := closure(Function #103)
	1243	[2130]	MOVE     	R0 R14 ; R0 := R14
	1244	[2135]	CLOSURE  	R82 103 ; R82 := closure(Function #104)
	1245	[2135]	MOVE     	R0 R14 ; R0 := R14
	1246	[2140]	CLOSURE  	R83 104 ; R83 := closure(Function #105)
	1247	[2140]	MOVE     	R0 R14 ; R0 := R14
	1248	[2144]	CLOSURE  	R84 105 ; R84 := closure(Function #106)
	1249	[2144]	MOVE     	R0 R83 ; R0 := R83
	1250	[2142]	SETGLOBAL	R84 K508 ; IsJunctionGameModeId := R84
	1251	[2150]	CLOSURE  	R84 106 ; R84 := closure(Function #107)
	1252	[2155]	CLOSURE  	R85 107 ; R85 := closure(Function #108)
	1253	[2155]	MOVE     	R0 R14 ; R0 := R14
	1254	[2159]	CLOSURE  	R86 108 ; R86 := closure(Function #109)
	1255	[2159]	MOVE     	R0 R85 ; R0 := R85
	1256	[2157]	SETGLOBAL	R86 K509 ; IsKeyGameModeId := R86
	1257	[2164]	CLOSURE  	R86 109 ; R86 := closure(Function #110)
	1258	[2164]	MOVE     	R0 R14 ; R0 := R14
	1259	[2168]	CLOSURE  	R87 110 ; R87 := closure(Function #111)
	1260	[2168]	MOVE     	R0 R86 ; R0 := R86
	1261	[2166]	SETGLOBAL	R87 K510 ; IsHardGameModeId := R87
	1262	[2175]	CLOSURE  	R87 111 ; R87 := closure(Function #112)
	1263	[2170]	SETGLOBAL	R87 K511 ; IsPlayingHardGameModeMission := R87
	1264	[2180]	CLOSURE  	R87 112 ; R87 := closure(Function #113)
	1265	[2180]	MOVE     	R0 R14 ; R0 := R14
	1266	[2184]	CLOSURE  	R88 113 ; R88 := closure(Function #114)
	1267	[2184]	MOVE     	R0 R87 ; R0 := R87
	1268	[2182]	SETGLOBAL	R88 K512 ; IsHardDailyGameModeId := R88
	1269	[2205]	CLOSURE  	R88 114 ; R88 := closure(Function #115)
	1270	[2205]	MOVE     	R0 R63 ; R0 := R63
	1271	[2205]	MOVE     	R0 R70 ; R0 := R70
	1272	[2186]	SETGLOBAL	R88 K513 ; IsScenarioGameModeId := R88
	1273	[2210]	CLOSURE  	R88 115 ; R88 := closure(Function #116)
	1274	[2210]	MOVE     	R0 R14 ; R0 := R14
	1275	[2214]	CLOSURE  	R89 116 ; R89 := closure(Function #117)
	1276	[2214]	MOVE     	R0 R13 ; R0 := R13
	1277	[2214]	MOVE     	R0 R12 ; R0 := R12
	1278	[2212]	SETGLOBAL	R89 K514 ; GetRegionFromGameModeId := R89
	1279	[2218]	CLOSURE  	R89 117 ; R89 := closure(Function #118)
	1280	[2216]	SETGLOBAL	R89 K515 ; GetNodeFromGameModeId := R89
	1281	[2280]	CLOSURE  	R89 118 ; R89 := closure(Function #119)
	1282	[2280]	MOVE     	R0 R13 ; R0 := R13
	1283	[2280]	MOVE     	R0 R12 ; R0 := R12
	1284	[2280]	MOVE     	R0 R76 ; R0 := R76
	1285	[2280]	MOVE     	R0 R73 ; R0 := R73
	1286	[2280]	MOVE     	R0 R77 ; R0 := R77
	1287	[2280]	MOVE     	R0 R78 ; R0 := R78
	1288	[2280]	MOVE     	R0 R80 ; R0 := R80
	1289	[2280]	MOVE     	R0 R84 ; R0 := R84
	1290	[2280]	MOVE     	R0 R85 ; R0 := R85
	1291	[2280]	MOVE     	R0 R63 ; R0 := R63
	1292	[2280]	MOVE     	R0 R36 ; R0 := R36
	1293	[2284]	CLOSURE  	R90 119 ; R90 := closure(Function #120)
	1294	[2284]	MOVE     	R0 R89 ; R0 := R89
	1295	[2282]	SETGLOBAL	R90 K516 ; GetNodeNameFromGameModeId := R90
	1296	[2320]	CLOSURE  	R90 120 ; R90 := closure(Function #121)
	1297	[2320]	MOVE     	R0 R71 ; R0 := R71
	1298	[2320]	MOVE     	R0 R73 ; R0 := R73
	1299	[2320]	MOVE     	R0 R74 ; R0 := R74
	1300	[2320]	MOVE     	R0 R75 ; R0 := R75
	1301	[2320]	MOVE     	R0 R77 ; R0 := R77
	1302	[2320]	MOVE     	R0 R78 ; R0 := R78
	1303	[2320]	MOVE     	R0 R79 ; R0 := R79
	1304	[2320]	MOVE     	R0 R80 ; R0 := R80
	1305	[2320]	MOVE     	R0 R81 ; R0 := R81
	1306	[2320]	MOVE     	R0 R82 ; R0 := R82
	1307	[2320]	MOVE     	R0 R85 ; R0 := R85
	1308	[2320]	MOVE     	R0 R72 ; R0 := R72
	1309	[2320]	MOVE     	R0 R87 ; R0 := R87
	1310	[2320]	MOVE     	R0 R86 ; R0 := R86
	1311	[2320]	MOVE     	R0 R88 ; R0 := R88
	1312	[2286]	SETGLOBAL	R90 K517 ; GetNodeModifierTagFromGameModeId := R90
	1313	[2332]	CLOSURE  	R90 121 ; R90 := closure(Function #122)
	1314	[2332]	MOVE     	R0 R63 ; R0 := R63
	1315	[2332]	MOVE     	R0 R89 ; R0 := R89
	1316	[2332]	MOVE     	R0 R25 ; R0 := R25
	1317	[2345]	CLOSURE  	R91 122 ; R91 := closure(Function #123)
	1318	[2345]	MOVE     	R0 R90 ; R0 := R90
	1319	[2349]	CLOSURE  	R92 123 ; R92 := closure(Function #124)
	1320	[2349]	MOVE     	R0 R91 ; R0 := R91
	1321	[2347]	SETGLOBAL	R92 K518 ; CanMergeSquad := R92
	1322	[2359]	CLOSURE  	R92 124 ; R92 := closure(Function #125)
	1323	[2359]	MOVE     	R0 R77 ; R0 := R77
	1324	[2359]	MOVE     	R0 R78 ; R0 := R78
	1325	[2359]	MOVE     	R0 R13 ; R0 := R13
	1326	[2359]	MOVE     	R0 R12 ; R0 := R12
	1327	[2359]	MOVE     	R0 R17 ; R0 := R17
	1328	[2359]	MOVE     	R0 R89 ; R0 := R89
	1329	[2351]	SETGLOBAL	R92 K519 ; GetDisplayedNodeNameFromGameModeId := R92
	1330	[2378]	CLOSURE  	R92 125 ; R92 := closure(Function #126)
	1331	[2361]	SETGLOBAL	R92 K520 ; GetAlertExpiryforNode := R92
	1332	[2400]	CLOSURE  	R92 126 ; R92 := closure(Function #127)
	1333	[2400]	MOVE     	R0 R63 ; R0 := R63
	1334	[2380]	SETGLOBAL	R92 K521 ; IsRegionUnlocked := R92
	1335	[2410]	CLOSURE  	R92 127 ; R92 := closure(Function #128)
	1336	[2410]	MOVE     	R0 R17 ; R0 := R17
	1337	[2402]	SETGLOBAL	R92 K522 ; IsChatTextActive := R92
	1338	[2438]	CLOSURE  	R92 128 ; R92 := closure(Function #129)
	1339	[2438]	MOVE     	R0 R71 ; R0 := R71
	1340	[2412]	SETGLOBAL	R92 K523 ; IsSessionExpired := R92
	1341	[2457]	CLOSURE  	R92 129 ; R92 := closure(Function #130)
	1342	[2440]	SETGLOBAL	R92 K524 ; CheckShowTutorial := R92
	1343	[2483]	CLOSURE  	R92 130 ; R92 := closure(Function #131)
	1344	[2487]	CLOSURE  	R93 131 ; R93 := closure(Function #132)
	1345	[2487]	MOVE     	R0 R92 ; R0 := R92
	1346	[2485]	SETGLOBAL	R93 K525 ; InterruptTransmission := R93
	1347	[2504]	CLOSURE  	R93 132 ; R93 := closure(Function #133)
	1348	[2504]	MOVE     	R0 R92 ; R0 := R92
	1349	[2508]	CLOSURE  	R94 133 ; R94 := closure(Function #134)
	1350	[2508]	MOVE     	R0 R93 ; R0 := R93
	1351	[2506]	SETGLOBAL	R94 K526 ; QueueTransmission := R94
	1352	[2522]	CLOSURE  	R94 134 ; R94 := closure(Function #135)
	1353	[2522]	MOVE     	R0 R93 ; R0 := R93
	1354	[2526]	CLOSURE  	R95 135 ; R95 := closure(Function #136)
	1355	[2526]	MOVE     	R0 R94 ; R0 := R94
	1356	[2524]	SETGLOBAL	R95 K527 ; CreateHudlessTransmission := R95
	1357	[2533]	CLOSURE  	R95 136 ; R95 := closure(Function #137)
	1358	[2528]	SETGLOBAL	R95 K528 ; IsTransmissionPlaying := R95
	1359	[2545]	CLOSURE  	R95 137 ; R95 := closure(Function #138)
	1360	[2535]	SETGLOBAL	R95 K529 ; GetActualPlayerRank := R95
	1361	[2572]	CLOSURE  	R95 138 ; R95 := closure(Function #139)
	1362	[2576]	CLOSURE  	R96 139 ; R96 := closure(Function #140)
	1363	[2576]	MOVE     	R0 R95 ; R0 := R95
	1364	[2574]	SETGLOBAL	R96 K530 ; HasCompletedVorsPrize := R96
	1365	[2614]	CLOSURE  	R96 140 ; R96 := closure(Function #141)
	1366	[2614]	MOVE     	R0 R95 ; R0 := R95
	1367	[2618]	CLOSURE  	R97 141 ; R97 := closure(Function #142)
	1368	[2618]	MOVE     	R0 R96 ; R0 := R96
	1369	[2616]	SETGLOBAL	R97 K531 ; HasCompletedQuest := R97
	1370	[2629]	CLOSURE  	R97 142 ; R97 := closure(Function #143)
	1371	[2622]	SETGLOBAL	R97 K532 ; GetLocalizedQuestName := R97
	1372	[2635]	CLOSURE  	R97 143 ; R97 := closure(Function #144)
	1373	[2635]	MOVE     	R0 R96 ; R0 := R96
	1374	[2639]	CLOSURE  	R98 144 ; R98 := closure(Function #145)
	1375	[2639]	MOVE     	R0 R97 ; R0 := R97
	1376	[2637]	SETGLOBAL	R98 K533 ; HasCompletedNewWar := R98
	1377	[2659]	CLOSURE  	R98 145 ; R98 := closure(Function #146)
	1378	[2659]	MOVE     	R0 R97 ; R0 := R97
	1379	[2663]	CLOSURE  	R99 146 ; R99 := closure(Function #147)
	1380	[2663]	MOVE     	R0 R98 ; R0 := R98
	1381	[2661]	SETGLOBAL	R99 K534 ; HasSquadHostCompletedNewWar := R99
	1382	[2669]	CLOSURE  	R99 147 ; R99 := closure(Function #148)
	1383	[2669]	MOVE     	R0 R31 ; R0 := R31
	1384	[2669]	MOVE     	R0 R44 ; R0 := R44
	1385	[2673]	CLOSURE  	R100 148 ; R100 := closure(Function #149)
	1386	[2673]	MOVE     	R0 R99 ; R0 := R99
	1387	[2671]	SETGLOBAL	R100 K535 ; CanOverridePostNewWar := R100
	1388	[2698]	CLOSURE  	R100 149 ; R100 := closure(Function #150)
	1389	[2698]	MOVE     	R0 R99 ; R0 := R99
	1390	[2698]	MOVE     	R0 R98 ; R0 := R98
	1391	[2702]	CLOSURE  	R101 150 ; R101 := closure(Function #151)
	1392	[2702]	MOVE     	R0 R100 ; R0 := R100
	1393	[2700]	SETGLOBAL	R101 K536 ; ApplyPostNewWarMissionOverrides := R101
	1394	[2721]	CLOSURE  	R101 151 ; R101 := closure(Function #152)
	1395	[2721]	MOVE     	R0 R63 ; R0 := R63
	1396	[2721]	MOVE     	R0 R98 ; R0 := R98
	1397	[2704]	SETGLOBAL	R101 K537 ; SetLevelStreamingArgs := R101
	1398	[2732]	CLOSURE  	R101 152 ; R101 := closure(Function #153)
	1399	[2732]	MOVE     	R0 R98 ; R0 := R98
	1400	[2723]	SETGLOBAL	R101 K538 ; ApplyPostNewWarHubLevelArgs := R101
	1401	[2739]	CLOSURE  	R101 153 ; R101 := closure(Function #154)
	1402	[2739]	MOVE     	R0 R63 ; R0 := R63
	1403	[2739]	MOVE     	R0 R100 ; R0 := R100
	1404	[2734]	SETGLOBAL	R101 K539 ; BuildMissionForLocation := R101
	1405	[2750]	CLOSURE  	R101 154 ; R101 := closure(Function #155)
	1406	[2750]	MOVE     	R0 R17 ; R0 := R17
	1407	[2750]	MOVE     	R0 R97 ; R0 := R97
	1408	[2754]	CLOSURE  	R102 155 ; R102 := closure(Function #156)
	1409	[2754]	MOVE     	R0 R101 ; R0 := R101
	1410	[2752]	SETGLOBAL	R102 K540 ; GetModifiedPlainsElo := R102
	1411	[2758]	CLOSURE  	R102 156 ; R102 := closure(Function #157)
	1412	[2756]	SETGLOBAL	R102 K541 ; IsPlainsElo := R102
	1413	[2772]	CLOSURE  	R102 157 ; R102 := closure(Function #158)
	1414	[2772]	MOVE     	R0 R43 ; R0 := R43
	1415	[2760]	SETGLOBAL	R102 K542 ; CanAccessDeimosHub := R102
	1416	[2776]	CLOSURE  	R102 158 ; R102 := closure(Function #159)
	1417	[2776]	MOVE     	R0 R96 ; R0 := R96
	1418	[2776]	MOVE     	R0 R43 ; R0 := R43
	1419	[2780]	CLOSURE  	R103 159 ; R103 := closure(Function #160)
	1420	[2780]	MOVE     	R0 R102 ; R0 := R102
	1421	[2778]	SETGLOBAL	R103 K543 ; HasCompletedDeimosIntroQuest := R103
	1422	[2852]	CLOSURE  	R103 160 ; R103 := closure(Function #161)
	1423	[2852]	MOVE     	R0 R63 ; R0 := R63
	1424	[2852]	MOVE     	R0 R17 ; R0 := R17
	1425	[2856]	CLOSURE  	R104 161 ; R104 := closure(Function #162)
	1426	[2856]	MOVE     	R0 R103 ; R0 := R103
	1427	[2854]	SETGLOBAL	R104 K544 ; GetStarChartProgress := R104
	1428	[2862]	CLOSURE  	R104 162 ; R104 := closure(Function #163)
	1429	[2862]	MOVE     	R0 R103 ; R0 := R103
	1430	[2866]	CLOSURE  	R105 163 ; R105 := closure(Function #164)
	1431	[2866]	MOVE     	R0 R104 ; R0 := R104
	1432	[2864]	SETGLOBAL	R105 K545 ; HasCompletedStarChart := R105
	1433	[2921]	CLOSURE  	R105 164 ; R105 := closure(Function #165)
	1434	[2925]	CLOSURE  	R106 165 ; R106 := closure(Function #166)
	1435	[2925]	MOVE     	R0 R105 ; R0 := R105
	1436	[2923]	SETGLOBAL	R106 K546 ; GetSaleInfo := R106
	1437	[2927]	NEWTABLE 	R106 0 0 ; R106 := {}
	1438	[2928]	LOADK    	R107 := 3.000000
	1439	[2928]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1440	[2928]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1441	[2929]	LOADK    	R107 := 1.000000
	1442	[2929]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1443	[2929]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1444	[2930]	LOADK    	R107 := 0.000000
	1445	[2930]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1446	[2930]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1447	[2931]	LOADK    	R107 := 5.000000
	1448	[2931]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1449	[2931]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1450	[2932]	LOADK    	R107 := 15.000000
	1451	[2932]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1452	[2932]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1453	[2933]	LOADK    	R107 := 16.000000
	1454	[2933]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1455	[2933]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1456	[2934]	LOADK    	R107 := 6.000000
	1457	[2934]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1458	[2934]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1459	[2935]	LOADK    	R107 := 10.000000
	1460	[2935]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1461	[2935]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1462	[2936]	LOADK    	R107 := 27.000000
	1463	[2936]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1464	[2936]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1465	[2937]	LOADK    	R107 := 28.000000
	1466	[2937]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1467	[2937]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1468	[2938]	LOADK    	R107 := 29.000000
	1469	[2938]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1470	[2938]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1471	[2939]	LOADK    	R107 := 13.000000
	1472	[2939]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1473	[2939]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1474	[2940]	LOADK    	R107 := 42.000000
	1475	[2940]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1476	[2940]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1477	[2941]	LOADK    	R107 := 21.000000
	1478	[2941]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1479	[2941]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1480	[2942]	LOADK    	R107 := 48.000000
	1481	[2942]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1482	[2942]	SETTABLE 	R106 R107 R108 ; R106[R107] := R108
	1483	[2946]	CLOSURE  	R107 166 ; R107 := closure(Function #167)
	1484	[2946]	MOVE     	R0 R106 ; R0 := R106
	1485	[2950]	CLOSURE  	R108 167 ; R108 := closure(Function #168)
	1486	[2950]	MOVE     	R0 R107 ; R0 := R107
	1487	[2948]	SETGLOBAL	R108 K547 ; IsProratedPackageCategory := R108
	1488	[2953]	CLOSURE  	R108 168 ; R108 := closure(Function #169)
	1489	[2954]	CLOSURE  	R109 169 ; R109 := closure(Function #170)
	1490	[2955]	CLOSURE  	R110 170 ; R110 := closure(Function #171)
	1491	[2987]	CLOSURE  	R111 171 ; R111 := closure(Function #172)
	1492	[2987]	MOVE     	R0 R108 ; R0 := R108
	1493	[2987]	MOVE     	R0 R110 ; R0 := R110
	1494	[2987]	MOVE     	R0 R109 ; R0 := R109
	1495	[2991]	CLOSURE  	R112 172 ; R112 := closure(Function #173)
	1496	[2991]	MOVE     	R0 R111 ; R0 := R111
	1497	[2989]	SETGLOBAL	R112 K548 ; BinarySearch := R112
	1498	[2998]	CLOSURE  	R112 173 ; R112 := closure(Function #174)
	1499	[3008]	CLOSURE  	R113 174 ; R113 := closure(Function #175)
	1500	[3008]	MOVE     	R0 R107 ; R0 := R107
	1501	[3008]	MOVE     	R0 R111 ; R0 := R111
	1502	[3008]	MOVE     	R0 R112 ; R0 := R112
	1503	[3012]	CLOSURE  	R114 175 ; R114 := closure(Function #176)
	1504	[3012]	MOVE     	R0 R113 ; R0 := R113
	1505	[3010]	SETGLOBAL	R114 K549 ; ShouldGiveFromPackage := R114
	1506	[3016]	CLOSURE  	R114 176 ; R114 := closure(Function #177)
	1507	[3016]	MOVE     	R0 R24 ; R0 := R24
	1508	[3014]	SETGLOBAL	R114 K550 ; ProratedBundlesEnabled := R114
	1509	[3156]	CLOSURE  	R114 177 ; R114 := closure(Function #178)
	1510	[3156]	MOVE     	R0 R8 ; R0 := R8
	1511	[3156]	MOVE     	R0 R32 ; R0 := R32
	1512	[3156]	MOVE     	R0 R33 ; R0 := R33
	1513	[3156]	MOVE     	R0 R105 ; R0 := R105
	1514	[3156]	MOVE     	R0 R24 ; R0 := R24
	1515	[3156]	MOVE     	R0 R113 ; R0 := R113
	1516	[3156]	MOVE     	R0 R114 ; R0 := R114
	1517	[3160]	CLOSURE  	R115 178 ; R115 := closure(Function #179)
	1518	[3160]	MOVE     	R0 R114 ; R0 := R114
	1519	[3158]	SETGLOBAL	R115 K551 ; GetStoreItemPrice := R115
	1520	[3162]	NEWTABLE 	R115 8 0 ; R115 := {}
	1521	[3163]	LOADK    	R116 K552 ; R116 := "/Lotus/Language/Menu/AP_UNIVERSAL"
	1522	[3164]	LOADK    	R117 K553 ; R117 := "/Lotus/Language/Menu/AP_ATTACK"
	1523	[3165]	LOADK    	R118 K554 ; R118 := "/Lotus/Language/Menu/AP_DEFENSE"
	1524	[3166]	LOADK    	R119 K555 ; R119 := "/Lotus/Language/Menu/AP_TACTIC"
	1525	[3167]	LOADK    	R120 K556 ; R120 := "/Lotus/Language/Menu/AP_POWER"
	1526	[3168]	LOADK    	R121 K557 ; R121 := "/Lotus/Language/Menu/AP_PRECEPT"
	1527	[3169]	LOADK    	R122 K558 ; R122 := "/Lotus/Language/Menu/AP_FUSION"
	1528	[3171]	LOADK    	R123 K559 ; R123 := "/Lotus/Language/Menu/AP_WARD"
	1529	[3171]	SETLIST  	R115 8 1 ; R115[(1-1)*FPF+i] := R(115+i), 1 <= i <= 8
	1530	[3175]	CLOSURE  	R116 179 ; R116 := closure(Function #180)
	1531	[3175]	MOVE     	R0 R115 ; R0 := R115
	1532	[3173]	SETGLOBAL	R116 K560 ; GetPolarityName := R116
	1533	[3183]	CLOSURE  	R116 180 ; R116 := closure(Function #181)
	1534	[3177]	SETGLOBAL	R116 K561 ; GetPVPEloRatingForRank := R116
	1535	[3190]	CLOSURE  	R116 181 ; R116 := closure(Function #182)
	1536	[3202]	CLOSURE  	R117 182 ; R117 := closure(Function #183)
	1537	[3260]	CLOSURE  	R118 183 ; R118 := closure(Function #184)
	1538	[3260]	MOVE     	R0 R116 ; R0 := R116
	1539	[3260]	MOVE     	R0 R101 ; R0 := R101
	1540	[3260]	MOVE     	R0 R117 ; R0 := R117
	1541	[3260]	MOVE     	R0 R52 ; R0 := R52
	1542	[3264]	CLOSURE  	R119 184 ; R119 := closure(Function #185)
	1543	[3264]	MOVE     	R0 R118 ; R0 := R118
	1544	[3262]	SETGLOBAL	R119 K562 ; GetPlayerEloRating := R119
	1545	[3307]	CLOSURE  	R119 185 ; R119 := closure(Function #186)
	1546	[3307]	MOVE     	R0 R26 ; R0 := R26
	1547	[3307]	MOVE     	R0 R6 ; R0 := R6
	1548	[3307]	MOVE     	R0 R119 ; R0 := R119
	1549	[3311]	CLOSURE  	R120 186 ; R120 := closure(Function #187)
	1550	[3311]	MOVE     	R0 R119 ; R0 := R119
	1551	[3309]	SETGLOBAL	R120 K563 ; FilterStatusEntity := R120
	1552	[3341]	CLOSURE  	R120 187 ; R120 := closure(Function #188)
	1553	[3341]	MOVE     	R0 R17 ; R0 := R17
	1554	[3345]	CLOSURE  	R121 188 ; R121 := closure(Function #189)
	1555	[3345]	MOVE     	R0 R120 ; R0 := R120
	1556	[3343]	SETGLOBAL	R121 K564 ; AddTableToPurchasedItems := R121
	1557	[3395]	CLOSURE  	R121 189 ; R121 := closure(Function #190)
	1558	[3395]	MOVE     	R0 R120 ; R0 := R120
	1559	[3347]	SETGLOBAL	R121 K565 ; GetAllPurchasedItems := R121
	1560	[3516]	CLOSURE  	R121 190 ; R121 := closure(Function #191)
	1561	[3516]	MOVE     	R0 R17 ; R0 := R17
	1562	[3516]	MOVE     	R0 R3 ; R0 := R3
	1563	[3516]	MOVE     	R0 R4 ; R0 := R4
	1564	[3516]	MOVE     	R0 R5 ; R0 := R5
	1565	[3398]	SETGLOBAL	R121 K566 ; GetRewardDesc := R121
	1566	[3545]	CLOSURE  	R121 191 ; R121 := closure(Function #192)
	1567	[3549]	CLOSURE  	R122 192 ; R122 := closure(Function #193)
	1568	[3549]	MOVE     	R0 R121 ; R0 := R121
	1569	[3547]	SETGLOBAL	R122 K567 ; GetRecipeIconTexture := R122
	1570	[3592]	CLOSURE  	R122 193 ; R122 := closure(Function #194)
	1571	[3592]	MOVE     	R0 R121 ; R0 := R121
	1572	[3553]	SETGLOBAL	R122 K568 ; GetRewardIcon := R122
	1573	[3629]	CLOSURE  	R122 194 ; R122 := closure(Function #195)
	1574	[3629]	MOVE     	R0 R17 ; R0 := R17
	1575	[3594]	SETGLOBAL	R122 K569 ; GetRewardInfo := R122
	1576	[3634]	CLOSURE  	R122 195 ; R122 := closure(Function #196)
	1577	[3634]	MOVE     	R0 R0 ; R0 := R0
	1578	[3631]	SETGLOBAL	R122 K570 ; GetDamageTypeTag := R122
	1579	[3639]	CLOSURE  	R122 196 ; R122 := closure(Function #197)
	1580	[3639]	MOVE     	R0 R1 ; R0 := R1
	1581	[3636]	SETGLOBAL	R122 K571 ; GetProcTypeTag := R122
	1582	[3660]	CLOSURE  	R122 197 ; R122 := closure(Function #198)
	1583	[3641]	SETGLOBAL	R122 K572 ; GetRecoveryMissionInfo := R122
	1584	[3680]	CLOSURE  	R122 198 ; R122 := closure(Function #199)
	1585	[3662]	SETGLOBAL	R122 K573 ; FormatGoalPercentage := R122
	1586	[3693]	CLOSURE  	R122 199 ; R122 := closure(Function #200)
	1587	[3693]	MOVE     	R0 R17 ; R0 := R17
	1588	[3693]	MOVE     	R0 R67 ; R0 := R67
	1589	[3697]	CLOSURE  	R123 200 ; R123 := closure(Function #201)
	1590	[3697]	MOVE     	R0 R122 ; R0 := R122
	1591	[3695]	SETGLOBAL	R123 K574 ; AvatarLight := R123
	1592	[3711]	CLOSURE  	R123 201 ; R123 := closure(Function #202)
	1593	[3711]	MOVE     	R0 R52 ; R0 := R52
	1594	[3711]	MOVE     	R0 R122 ; R0 := R122
	1595	[3700]	SETGLOBAL	R123 K575 ; MakeMainMenuAvatarKneel := R123
	1596	[3730]	CLOSURE  	R123 202 ; R123 := closure(Function #203)
	1597	[3730]	MOVE     	R0 R118 ; R0 := R118
	1598	[3713]	SETGLOBAL	R123 K576 ; OnSaveLoadOutCompleteCommon := R123
	1599	[3741]	CLOSURE  	R123 203 ; R123 := closure(Function #204)
	1600	[3732]	SETGLOBAL	R123 K577 ; MakeLevelItemString := R123
	1601	[3762]	CLOSURE  	R123 204 ; R123 := closure(Function #205)
	1602	[3743]	SETGLOBAL	R123 K578 ; IsHarvestedOrBranded := R123
	1603	[3783]	CLOSURE  	R123 205 ; R123 := closure(Function #206)
	1604	[3764]	SETGLOBAL	R123 K579 ; GetUIMode := R123
	1605	[3837]	CLOSURE  	R123 206 ; R123 := closure(Function #207)
	1606	[3841]	CLOSURE  	R124 207 ; R124 := closure(Function #208)
	1607	[3841]	MOVE     	R0 R123 ; R0 := R123
	1608	[3839]	SETGLOBAL	R124 K580 ; ShowInputDialog := R124
	1609	[3853]	CLOSURE  	R124 208 ; R124 := closure(Function #209)
	1610	[3843]	SETGLOBAL	R124 K581 ; GetMaxAllianceMemberCount := R124
	1611	[3861]	CLOSURE  	R124 209 ; R124 := closure(Function #210)
	1612	[3865]	CLOSURE  	R125 210 ; R125 := closure(Function #211)
	1613	[3865]	MOVE     	R0 R124 ; R0 := R124
	1614	[3863]	SETGLOBAL	R125 K582 ; GetNodeAlertMissionInfo := R125
	1615	[3869]	CLOSURE  	R125 211 ; R125 := closure(Function #212)
	1616	[3873]	CLOSURE  	R126 212 ; R126 := closure(Function #213)
	1617	[3873]	MOVE     	R0 R125 ; R0 := R125
	1618	[3871]	SETGLOBAL	R126 K583 ; GetInvasionInfo := R126
	1619	[3877]	CLOSURE  	R126 213 ; R126 := closure(Function #214)
	1620	[3881]	CLOSURE  	R127 214 ; R127 := closure(Function #215)
	1621	[3881]	MOVE     	R0 R126 ; R0 := R126
	1622	[3879]	SETGLOBAL	R127 K584 ; GetGoalInfo := R127
	1623	[3889]	CLOSURE  	R127 215 ; R127 := closure(Function #216)
	1624	[3893]	CLOSURE  	R128 216 ; R128 := closure(Function #217)
	1625	[3893]	MOVE     	R0 R127 ; R0 := R127
	1626	[3891]	SETGLOBAL	R128 K585 ; GetEventTexture := R128
	1627	[3928]	CLOSURE  	R128 217 ; R128 := closure(Function #218)
	1628	[3928]	MOVE     	R0 R27 ; R0 := R27
	1629	[3932]	CLOSURE  	R129 218 ; R129 := closure(Function #219)
	1630	[3932]	MOVE     	R0 R128 ; R0 := R128
	1631	[3930]	SETGLOBAL	R129 K586 ; GetMissionTypeName := R129
	1632	[3942]	CLOSURE  	R129 219 ; R129 := closure(Function #220)
	1633	[3942]	MOVE     	R0 R37 ; R0 := R37
	1634	[3934]	SETGLOBAL	R129 K587 ; HasTutorialForMissionType := R129
	1635	[3946]	CLOSURE  	R129 220 ; R129 := closure(Function #221)
	1636	[3950]	CLOSURE  	R130 221 ; R130 := closure(Function #222)
	1637	[3950]	MOVE     	R0 R129 ; R0 := R129
	1638	[3948]	SETGLOBAL	R130 K588 ; GetLocalizedFactionName := R130
	1639	[4011]	CLOSURE  	R130 222 ; R130 := closure(Function #223)
	1640	[4011]	MOVE     	R0 R127 ; R0 := R127
	1641	[4015]	CLOSURE  	R131 223 ; R131 := closure(Function #224)
	1642	[4015]	MOVE     	R0 R130 ; R0 := R130
	1643	[4013]	SETGLOBAL	R131 K589 ; GetLocationTexture := R131
	1644	[4052]	CLOSURE  	R131 224 ; R131 := closure(Function #225)
	1645	[4052]	MOVE     	R0 R129 ; R0 := R129
	1646	[4056]	CLOSURE  	R132 225 ; R132 := closure(Function #226)
	1647	[4056]	MOVE     	R0 R131 ; R0 := R131
	1648	[4054]	SETGLOBAL	R132 K590 ; TryGetCrossfireDesc := R132
	1649	[4350]	CLOSURE  	R132 226 ; R132 := closure(Function #227)
	1650	[4350]	MOVE     	R0 R46 ; R0 := R46
	1651	[4350]	MOVE     	R0 R124 ; R0 := R124
	1652	[4350]	MOVE     	R0 R126 ; R0 := R126
	1653	[4350]	MOVE     	R0 R15 ; R0 := R15
	1654	[4350]	MOVE     	R0 R128 ; R0 := R128
	1655	[4350]	MOVE     	R0 R125 ; R0 := R125
	1656	[4350]	MOVE     	R0 R17 ; R0 := R17
	1657	[4350]	MOVE     	R0 R130 ; R0 := R130
	1658	[4350]	MOVE     	R0 R131 ; R0 := R131
	1659	[4058]	SETGLOBAL	R132 K591 ; GetMissionInfo := R132
	1660	[4360]	CLOSURE  	R132 227 ; R132 := closure(Function #228)
	1661	[4352]	SETGLOBAL	R132 K592 ; ShowCombos := R132
	1662	[4409]	CLOSURE  	R132 228 ; R132 := closure(Function #229)
	1663	[4362]	SETGLOBAL	R132 K593 ; GetMeleeStanceUpgradeInfo := R132
	1664	[4428]	CLOSURE  	R132 229 ; R132 := closure(Function #230)
	1665	[4411]	SETGLOBAL	R132 K594 ; RemoveModsFromWeapon := R132
	1666	[4462]	CLOSURE  	R132 230 ; R132 := closure(Function #231)
	1667	[4430]	SETGLOBAL	R132 K595 ; GetGameModeTexture := R132
	1668	[4546]	CLOSURE  	R132 231 ; R132 := closure(Function #232)
	1669	[4550]	CLOSURE  	R133 232 ; R133 := closure(Function #233)
	1670	[4550]	MOVE     	R0 R132 ; R0 := R132
	1671	[4548]	SETGLOBAL	R133 K596 ; GetQuestInfo := R133
	1672	[4569]	CLOSURE  	R31 233 ; R31 := closure(Function #234)
	1673	[4569]	MOVE     	R0 R132 ; R0 := R132
	1674	[4573]	CLOSURE  	R133 234 ; R133 := closure(Function #235)
	1675	[4573]	MOVE     	R0 R31 ; R0 := R31
	1676	[4571]	SETGLOBAL	R133 K597 ; GetActiveQuest := R133
	1677	[4578]	CLOSURE  	R133 235 ; R133 := closure(Function #236)
	1678	[4582]	CLOSURE  	R134 236 ; R134 := closure(Function #237)
	1679	[4582]	MOVE     	R0 R133 ; R0 := R133
	1680	[4580]	SETGLOBAL	R134 K598 ; InQuestCommitment := R134
	1681	[4681]	CLOSURE  	R134 237 ; R134 := closure(Function #238)
	1682	[4681]	MOVE     	R0 R17 ; R0 := R17
	1683	[4681]	MOVE     	R0 R55 ; R0 := R55
	1684	[4584]	SETGLOBAL	R134 K599 ; GetAllKeys := R134
	1685	[4720]	CLOSURE  	R134 238 ; R134 := closure(Function #239)
	1686	[4720]	MOVE     	R0 R17 ; R0 := R17
	1687	[4720]	MOVE     	R0 R18 ; R0 := R18
	1688	[4683]	SETGLOBAL	R134 K600 ; ShowDialogForFeatureUpgrade := R134
	1689	[4781]	CLOSURE  	R134 239 ; R134 := closure(Function #240)
	1690	[4781]	MOVE     	R0 R95 ; R0 := R95
	1691	[4781]	MOVE     	R0 R17 ; R0 := R17
	1692	[4781]	MOVE     	R0 R94 ; R0 := R94
	1693	[4722]	SETGLOBAL	R134 K601 ; UpdateUIConsoleTriggers := R134
	1694	[4800]	CLOSURE  	R134 240 ; R134 := closure(Function #241)
	1695	[4783]	SETGLOBAL	R134 K602 ; DoesStringContainAllDigits := R134
	1696	[4835]	CLOSURE  	R134 241 ; R134 := closure(Function #242)
	1697	[4835]	MOVE     	R0 R10 ; R0 := R10
	1698	[4802]	SETGLOBAL	R134 K603 ; UpdateHeadTracking := R134
	1699	[4870]	CLOSURE  	R134 242 ; R134 := closure(Function #243)
	1700	[4870]	MOVE     	R0 R63 ; R0 := R63
	1701	[4837]	SETGLOBAL	R134 K604 ; GetUnlockedNavFeatures := R134
	1702	[4890]	CLOSURE  	R134 243 ; R134 := closure(Function #244)
	1703	[4890]	MOVE     	R0 R17 ; R0 := R17
	1704	[4872]	SETGLOBAL	R134 K605 ; SetUpInWorldPanel := R134
	1705	[4899]	CLOSURE  	R134 244 ; R134 := closure(Function #245)
	1706	[4893]	SETGLOBAL	R134 K606 ; LinearToSRGB := R134
	1707	[4907]	CLOSURE  	R134 245 ; R134 := closure(Function #246)
	1708	[4901]	SETGLOBAL	R134 K607 ; SRGBToLinear := R134
	1709	[4909]	LOADNIL  	R134 R134 ; R134 := nil
	1710	[4927]	CLOSURE  	R135 246 ; R135 := closure(Function #247)
	1711	[4927]	MOVE     	R0 R46 ; R0 := R46
	1712	[4927]	MOVE     	R0 R134 ; R0 := R134
	1713	[4931]	CLOSURE  	R136 247 ; R136 := closure(Function #248)
	1714	[4931]	MOVE     	R0 R135 ; R0 := R135
	1715	[4929]	SETGLOBAL	R136 K608 ; LocalizePolarities := R136
	1716	[4942]	CLOSURE  	R136 248 ; R136 := closure(Function #249)
	1717	[4942]	MOVE     	R0 R134 ; R0 := R134
	1718	[4942]	MOVE     	R0 R135 ; R0 := R135
	1719	[4933]	SETGLOBAL	R136 K609 ; GetTagForPolarity := R136
	1720	[4954]	CLOSURE  	R136 249 ; R136 := closure(Function #250)
	1721	[4944]	SETGLOBAL	R136 K610 ; ShowQuestCompleted := R136
	1722	[4963]	CLOSURE  	R136 250 ; R136 := closure(Function #251)
	1723	[4963]	MOVE     	R0 R17 ; R0 := R17
	1724	[4956]	SETGLOBAL	R136 K611 ; ApplyGenericBackerMaterial := R136
	1725	[5023]	CLOSURE  	R136 251 ; R136 := closure(Function #252)
	1726	[5023]	MOVE     	R0 R17 ; R0 := R17
	1727	[5027]	CLOSURE  	R137 252 ; R137 := closure(Function #253)
	1728	[5027]	MOVE     	R0 R136 ; R0 := R136
	1729	[5025]	SETGLOBAL	R137 K612 ; GetReputationInfoForSyndicate := R137
	1730	[5048]	CLOSURE  	R137 253 ; R137 := closure(Function #254)
	1731	[5048]	MOVE     	R0 R136 ; R0 := R136
	1732	[5052]	CLOSURE  	R138 254 ; R138 := closure(Function #255)
	1733	[5052]	MOVE     	R0 R137 ; R0 := R137
	1734	[5050]	SETGLOBAL	R138 K613 ; GetLovedReputationInfoForSyndicate := R138
	1735	[5067]	CLOSURE  	R138 255 ; R138 := closure(Function #256)
	1736	[5067]	MOVE     	R0 R17 ; R0 := R17
	1737	[5054]	SETGLOBAL	R138 K614 ; DrawItem := R138
	1738	[5087]	CLOSURE  	R138 256 ; R138 := closure(Function #257)
	1739	[5069]	SETGLOBAL	R138 K615 ; GetDailyDeal := R138
	1740	[5120]	CLOSURE  	R138 257 ; R138 := closure(Function #258)
	1741	[5089]	SETGLOBAL	R138 K616 ; GetLocalizedItemName := R138
	1742	[5151]	CLOSURE  	R138 258 ; R138 := closure(Function #259)
	1743	[5122]	SETGLOBAL	R138 K617 ; OpenTrainingMission := R138
	1744	[5155]	CLOSURE  	R138 259 ; R138 := closure(Function #260)
	1745	[5159]	CLOSURE  	R139 260 ; R139 := closure(Function #261)
	1746	[5159]	MOVE     	R0 R138 ; R0 := R138
	1747	[5157]	SETGLOBAL	R139 K618 ; GetTrainingRetryPlatinumCost := R139
	1748	[5228]	CLOSURE  	R139 261 ; R139 := closure(Function #262)
	1749	[5228]	MOVE     	R0 R49 ; R0 := R49
	1750	[5228]	MOVE     	R0 R138 ; R0 := R138
	1751	[5161]	SETGLOBAL	R139 K619 ; CanRankUp := R139
	1752	[5232]	CLOSURE  	R139 262 ; R139 := closure(Function #263)
	1753	[5258]	CLOSURE  	R140 263 ; R140 := closure(Function #264)
	1754	[5258]	MOVE     	R0 R17 ; R0 := R17
	1755	[5258]	MOVE     	R0 R139 ; R0 := R139
	1756	[5234]	SETGLOBAL	R140 K620 ; OnChallengePassed := R140
	1757	[5274]	CLOSURE  	R140 264 ; R140 := closure(Function #265)
	1758	[5260]	SETGLOBAL	R140 K621 ; GetFriendlyPlayers := R140
	1759	[5289]	CLOSURE  	R140 265 ; R140 := closure(Function #266)
	1760	[5277]	SETGLOBAL	R140 K622 ; FindNearestTagged := R140
	1761	[5303]	CLOSURE  	R140 266 ; R140 := closure(Function #267)
	1762	[5307]	CLOSURE  	R141 267 ; R141 := closure(Function #268)
	1763	[5307]	MOVE     	R0 R140 ; R0 := R140
	1764	[5305]	SETGLOBAL	R141 K623 ; GetLoadoutPresetName := R141
	1765	[5382]	CLOSURE  	R141 268 ; R141 := closure(Function #269)
	1766	[5382]	MOVE     	R0 R31 ; R0 := R31
	1767	[5382]	MOVE     	R0 R67 ; R0 := R67
	1768	[5382]	MOVE     	R0 R62 ; R0 := R62
	1769	[5382]	MOVE     	R0 R63 ; R0 := R63
	1770	[5309]	SETGLOBAL	R141 K624 ; UpdateQuests := R141
	1771	[5386]	CLOSURE  	R141 269 ; R141 := closure(Function #270)
	1772	[5386]	MOVE     	R0 R16 ; R0 := R16
	1773	[5384]	SETGLOBAL	R141 K625 ; GetScanPointBones := R141
	1774	[5390]	CLOSURE  	R141 270 ; R141 := closure(Function #271)
	1775	[5390]	MOVE     	R0 R16 ; R0 := R16
	1776	[5388]	SETGLOBAL	R141 K626 ; MaxScanPointBones := R141
	1777	[5402]	CLOSURE  	R141 271 ; R141 := closure(Function #272)
	1778	[5392]	SETGLOBAL	R141 K627 ; RayCastForScanPoints := R141
	1779	[5431]	CLOSURE  	R141 272 ; R141 := closure(Function #273)
	1780	[5485]	CLOSURE  	R142 273 ; R142 := closure(Function #274)
	1781	[5485]	MOVE     	R0 R141 ; R0 := R141
	1782	[5434]	SETGLOBAL	R142 K628 ; HasPvpCompatibleGear := R142
	1783	[5494]	CLOSURE  	R142 274 ; R142 := closure(Function #275)
	1784	[5494]	MOVE     	R0 R17 ; R0 := R17
	1785	[5487]	SETGLOBAL	R142 K629 ; AdjustBluerSize := R142
	1786	[5513]	CLOSURE  	R142 275 ; R142 := closure(Function #276)
	1787	[5496]	SETGLOBAL	R142 K630 ; GetInputCameraRotation := R142
	1788	[5535]	CLOSURE  	R142 276 ; R142 := closure(Function #277)
	1789	[5535]	MOVE     	R0 R46 ; R0 := R46
	1790	[5515]	SETGLOBAL	R142 K631 ; ViewConsoleProfile := R142
	1791	[5564]	CLOSURE  	R142 277 ; R142 := closure(Function #278)
	1792	[5537]	SETGLOBAL	R142 K632 ; GetCurrentPurchaseSource := R142
	1793	[5569]	CLOSURE  	R33 278 ; R33 := closure(Function #279)
	1794	[5573]	CLOSURE  	R142 279 ; R142 := closure(Function #280)
	1795	[5573]	MOVE     	R0 R33 ; R0 := R33
	1796	[5571]	SETGLOBAL	R142 K633 ; GetPriceWithCoupon := R142
	1797	[5590]	CLOSURE  	R142 280 ; R142 := closure(Function #281)
	1798	[5576]	SETGLOBAL	R142 K634 ; GetCouponName := R142
	1799	[5625]	CLOSURE  	R32 281 ; R32 := closure(Function #282)
	1800	[5629]	CLOSURE  	R142 282 ; R142 := closure(Function #283)
	1801	[5629]	MOVE     	R0 R32 ; R0 := R32
	1802	[5627]	SETGLOBAL	R142 K635 ; PopulateCouponInfo := R142
	1803	[5690]	CLOSURE  	R142 283 ; R142 := closure(Function #284)
	1804	[5690]	MOVE     	R0 R2 ; R0 := R2
	1805	[5694]	CLOSURE  	R143 284 ; R143 := closure(Function #285)
	1806	[5694]	MOVE     	R0 R142 ; R0 := R142
	1807	[5692]	SETGLOBAL	R143 K636 ; GetAvailableColourPickers := R143
	1808	[5737]	CLOSURE  	R143 285 ; R143 := closure(Function #286)
	1809	[5737]	MOVE     	R0 R142 ; R0 := R142
	1810	[5696]	SETGLOBAL	R143 K637 ; GetRandomColorPalette := R143
	1811	[5747]	CLOSURE  	R143 286 ; R143 := closure(Function #287)
	1812	[5747]	MOVE     	R0 R136 ; R0 := R136
	1813	[5751]	CLOSURE  	R144 287 ; R144 := closure(Function #288)
	1814	[5751]	MOVE     	R0 R143 ; R0 := R143
	1815	[5749]	SETGLOBAL	R144 K638 ; GetPvPLoadoutCapacity := R144
	1816	[5771]	CLOSURE  	R144 288 ; R144 := closure(Function #289)
	1817	[5771]	MOVE     	R0 R111 ; R0 := R111
	1818	[5771]	MOVE     	R0 R112 ; R0 := R112
	1819	[5753]	SETGLOBAL	R144 K639 ; GetRecipesOwned := R144
	1820	[5897]	CLOSURE  	R144 289 ; R144 := closure(Function #290)
	1821	[5897]	MOVE     	R0 R107 ; R0 := R107
	1822	[5897]	MOVE     	R0 R113 ; R0 := R113
	1823	[5897]	MOVE     	R0 R58 ; R0 := R58
	1824	[5897]	MOVE     	R0 R111 ; R0 := R111
	1825	[5897]	MOVE     	R0 R112 ; R0 := R112
	1826	[5897]	MOVE     	R0 R24 ; R0 := R24
	1827	[5897]	MOVE     	R0 R114 ; R0 := R114
	1828	[5897]	MOVE     	R0 R8 ; R0 := R8
	1829	[5897]	MOVE     	R0 R143 ; R0 := R143
	1830	[5773]	SETGLOBAL	R144 K640 ; GetNumOwned := R144
	1831	[5911]	CLOSURE  	R144 290 ; R144 := closure(Function #291)
	1832	[5899]	SETGLOBAL	R144 K641 ; GetImageDimansionsFromName := R144
	1833	[5954]	CLOSURE  	R144 291 ; R144 := closure(Function #292)
	1834	[5913]	SETGLOBAL	R144 K642 ; VerifyInventorySlots := R144
	1835	[5966]	CLOSURE  	R144 292 ; R144 := closure(Function #293)
	1836	[5966]	MOVE     	R0 R17 ; R0 := R17
	1837	[5956]	SETGLOBAL	R144 K643 ; ShowInvalidBinError := R144
	1838	[5976]	CLOSURE  	R144 293 ; R144 := closure(Function #294)
	1839	[5976]	MOVE     	R0 R17 ; R0 := R17
	1840	[5968]	SETGLOBAL	R144 K644 ; HandleInvalidBinErrorResponse := R144
	1841	[5984]	CLOSURE  	R144 294 ; R144 := closure(Function #295)
	1842	[5978]	SETGLOBAL	R144 K645 ; GetProductTimeLeft := R144
	1843	[5996]	CLOSURE  	R144 295 ; R144 := closure(Function #296)
	1844	[5986]	SETGLOBAL	R144 K646 ; IsProductExpired := R144
	1845	[5998]	NEWTABLE 	R144 0 10 ; R144 := {}
	1846	[5999]	LOADK    	R145 := 0.000000
	1847	[5999]	NEWTABLE 	R146 0 4 ; R146 := {}
	1848	[5999]	LOADK    	R147 K647 ; R147 := "Icon"
	1849	[5999]	LOADK    	R148 K299 ; R148 := ""
	1850	[5999]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1851	[5999]	LOADK    	R147 K648 ; R147 := "Ability"
	1852	[5999]	LOADK    	R148 K299 ; R148 := ""
	1853	[5999]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1854	[5999]	LOADK    	R147 K649 ; R147 := "Lens"
	1855	[5999]	LOADK    	R148 K299 ; R148 := ""
	1856	[5999]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1857	[5999]	LOADK    	R147 K650 ; R147 := "Polarity"
	1858	[5999]	LOADK    	R148 K299 ; R148 := ""
	1859	[5999]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1860	[5999]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1861	[6000]	LOADK    	R145 := 1.000000
	1862	[6000]	NEWTABLE 	R146 0 4 ; R146 := {}
	1863	[6000]	LOADK    	R147 K647 ; R147 := "Icon"
	1864	[6000]	LOADK    	R148 K651 ; R148 := "FocusLensMadurai.png"
	1865	[6000]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1866	[6001]	LOADK    	R147 K648 ; R147 := "Ability"
	1867	[6001]	LOADK    	R148 K652 ; R148 := "/Lotus/Upgrades/Focus/Attack/AttackFocusAbility"
	1868	[6001]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1869	[6002]	LOADK    	R147 K649 ; R147 := "Lens"
	1870	[6002]	LOADK    	R148 K653 ; R148 := "MADURAI"
	1871	[6002]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1872	[6003]	LOADK    	R147 K650 ; R147 := "Polarity"
	1873	[6003]	LOADK    	R148 K654 ; R148 := "/Lotus/Language/TennoWay/Madurai"
	1874	[6003]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1875	[6003]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1876	[6004]	LOADK    	R145 := 2.000000
	1877	[6004]	NEWTABLE 	R146 0 4 ; R146 := {}
	1878	[6004]	LOADK    	R147 K647 ; R147 := "Icon"
	1879	[6004]	LOADK    	R148 K655 ; R148 := "FocusLensVazarin.png"
	1880	[6004]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1881	[6005]	LOADK    	R147 K648 ; R147 := "Ability"
	1882	[6005]	LOADK    	R148 K656 ; R148 := "/Lotus/Upgrades/Focus/Defense/DefenseFocusAbility"
	1883	[6005]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1884	[6006]	LOADK    	R147 K649 ; R147 := "Lens"
	1885	[6006]	LOADK    	R148 K657 ; R148 := "VAZARIN"
	1886	[6006]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1887	[6007]	LOADK    	R147 K650 ; R147 := "Polarity"
	1888	[6007]	LOADK    	R148 K658 ; R148 := "/Lotus/Language/TennoWay/Vazarin"
	1889	[6007]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1890	[6007]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1891	[6008]	LOADK    	R145 := 3.000000
	1892	[6008]	NEWTABLE 	R146 0 4 ; R146 := {}
	1893	[6008]	LOADK    	R147 K647 ; R147 := "Icon"
	1894	[6008]	LOADK    	R148 K659 ; R148 := "FocusLensNaramon.png"
	1895	[6008]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1896	[6009]	LOADK    	R147 K648 ; R147 := "Ability"
	1897	[6009]	LOADK    	R148 K660 ; R148 := "/Lotus/Upgrades/Focus/Tactic/TacticFocusAbility"
	1898	[6009]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1899	[6010]	LOADK    	R147 K649 ; R147 := "Lens"
	1900	[6010]	LOADK    	R148 K661 ; R148 := "NARAMON"
	1901	[6010]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1902	[6011]	LOADK    	R147 K650 ; R147 := "Polarity"
	1903	[6011]	LOADK    	R148 K662 ; R148 := "/Lotus/Language/TennoWay/Naramon"
	1904	[6011]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1905	[6011]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1906	[6012]	LOADK    	R145 := 4.000000
	1907	[6012]	NEWTABLE 	R146 0 4 ; R146 := {}
	1908	[6012]	LOADK    	R147 K647 ; R147 := "Icon"
	1909	[6012]	LOADK    	R148 K663 ; R148 := "FocusLensZenurik.png"
	1910	[6012]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1911	[6013]	LOADK    	R147 K648 ; R147 := "Ability"
	1912	[6013]	LOADK    	R148 K664 ; R148 := "/Lotus/Upgrades/Focus/Power/PowerFocusAbility"
	1913	[6013]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1914	[6014]	LOADK    	R147 K649 ; R147 := "Lens"
	1915	[6014]	LOADK    	R148 K665 ; R148 := "ZENURIK"
	1916	[6014]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1917	[6015]	LOADK    	R147 K650 ; R147 := "Polarity"
	1918	[6015]	LOADK    	R148 K666 ; R148 := "/Lotus/Language/TennoWay/Zenurik"
	1919	[6015]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1920	[6015]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1921	[6016]	LOADK    	R145 := 5.000000
	1922	[6016]	NEWTABLE 	R146 0 4 ; R146 := {}
	1923	[6016]	LOADK    	R147 K647 ; R147 := "Icon"
	1924	[6016]	LOADK    	R148 K299 ; R148 := ""
	1925	[6016]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1926	[6016]	LOADK    	R147 K648 ; R147 := "Ability"
	1927	[6016]	LOADK    	R148 K299 ; R148 := ""
	1928	[6016]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1929	[6016]	LOADK    	R147 K649 ; R147 := "Lens"
	1930	[6016]	LOADK    	R148 K299 ; R148 := ""
	1931	[6016]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1932	[6016]	LOADK    	R147 K650 ; R147 := "Polarity"
	1933	[6016]	LOADK    	R148 K299 ; R148 := ""
	1934	[6016]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1935	[6016]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1936	[6017]	LOADK    	R145 := 6.000000
	1937	[6017]	NEWTABLE 	R146 0 4 ; R146 := {}
	1938	[6017]	LOADK    	R147 K647 ; R147 := "Icon"
	1939	[6017]	LOADK    	R148 K299 ; R148 := ""
	1940	[6017]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1941	[6017]	LOADK    	R147 K648 ; R147 := "Ability"
	1942	[6017]	LOADK    	R148 K299 ; R148 := ""
	1943	[6017]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1944	[6017]	LOADK    	R147 K649 ; R147 := "Lens"
	1945	[6017]	LOADK    	R148 K299 ; R148 := ""
	1946	[6017]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1947	[6017]	LOADK    	R147 K650 ; R147 := "Polarity"
	1948	[6017]	LOADK    	R148 K299 ; R148 := ""
	1949	[6017]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1950	[6017]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1951	[6018]	LOADK    	R145 := 7.000000
	1952	[6018]	NEWTABLE 	R146 0 4 ; R146 := {}
	1953	[6018]	LOADK    	R147 K647 ; R147 := "Icon"
	1954	[6018]	LOADK    	R148 K667 ; R148 := "FocusLensUnairu.png"
	1955	[6018]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1956	[6019]	LOADK    	R147 K648 ; R147 := "Ability"
	1957	[6019]	LOADK    	R148 K668 ; R148 := "/Lotus/Upgrades/Focus/Ward/WardFocusAbility"
	1958	[6019]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1959	[6020]	LOADK    	R147 K649 ; R147 := "Lens"
	1960	[6020]	LOADK    	R148 K669 ; R148 := "UNAIRU"
	1961	[6020]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1962	[6021]	LOADK    	R147 K650 ; R147 := "Polarity"
	1963	[6021]	LOADK    	R148 K670 ; R148 := "/Lotus/Language/TennoWay/Unairu"
	1964	[6021]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1965	[6021]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1966	[6022]	LOADK    	R145 := 8.000000
	1967	[6022]	NEWTABLE 	R146 0 4 ; R146 := {}
	1968	[6022]	LOADK    	R147 K647 ; R147 := "Icon"
	1969	[6022]	LOADK    	R148 K299 ; R148 := ""
	1970	[6022]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1971	[6022]	LOADK    	R147 K648 ; R147 := "Ability"
	1972	[6022]	LOADK    	R148 K299 ; R148 := ""
	1973	[6022]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1974	[6022]	LOADK    	R147 K649 ; R147 := "Lens"
	1975	[6022]	LOADK    	R148 K299 ; R148 := ""
	1976	[6022]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1977	[6022]	LOADK    	R147 K650 ; R147 := "Polarity"
	1978	[6022]	LOADK    	R148 K299 ; R148 := ""
	1979	[6022]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1980	[6022]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1981	[6023]	LOADK    	R145 := 9.000000
	1982	[6023]	NEWTABLE 	R146 0 4 ; R146 := {}
	1983	[6023]	LOADK    	R147 K647 ; R147 := "Icon"
	1984	[6023]	LOADK    	R148 K299 ; R148 := ""
	1985	[6023]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1986	[6023]	LOADK    	R147 K648 ; R147 := "Ability"
	1987	[6023]	LOADK    	R148 K299 ; R148 := ""
	1988	[6023]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1989	[6023]	LOADK    	R147 K649 ; R147 := "Lens"
	1990	[6023]	LOADK    	R148 K299 ; R148 := ""
	1991	[6023]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1992	[6023]	LOADK    	R147 K650 ; R147 := "Polarity"
	1993	[6023]	LOADK    	R148 K299 ; R148 := ""
	1994	[6023]	SETTABLE 	R146 R147 R148 ; R146[R147] := R148
	1995	[6023]	SETTABLE 	R144 R145 R146 ; R144[R145] := R146
	1996	[6078]	CLOSURE  	R145 296 ; R145 := closure(Function #297)
	1997	[6078]	MOVE     	R0 R17 ; R0 := R17
	1998	[6078]	MOVE     	R0 R144 ; R0 := R144
	1999	[6027]	SETGLOBAL	R145 K671 ; GetPolarityInfoForLens := R145
	2000	[6082]	CLOSURE  	R145 297 ; R145 := closure(Function #298)
	2001	[6082]	MOVE     	R0 R144 ; R0 := R144
	2002	[6080]	SETGLOBAL	R145 K672 ; GetWayInfo := R145
	2003	[6120]	CLOSURE  	R145 298 ; R145 := closure(Function #299)
	2004	[6120]	MOVE     	R0 R17 ; R0 := R17
	2005	[6084]	SETGLOBAL	R145 K673 ; ClearOperatorLookAt := R145
	2006	[6209]	CLOSURE  	R145 299 ; R145 := closure(Function #300)
	2007	[6209]	MOVE     	R0 R17 ; R0 := R17
	2008	[6122]	SETGLOBAL	R145 K674 ; UpdateOperatorLookAt := R145
	2009	[6217]	CLOSURE  	R145 300 ; R145 := closure(Function #301)
	2010	[6211]	SETGLOBAL	R145 K675 ; IsDeluxeSkin := R145
	2011	[6242]	CLOSURE  	R145 301 ; R145 := closure(Function #302)
	2012	[6242]	MOVE     	R0 R17 ; R0 := R17
	2013	[6219]	SETGLOBAL	R145 K676 ; SetupThreeColorText := R145
	2014	[6273]	CLOSURE  	R145 302 ; R145 := closure(Function #303)
	2015	[6244]	SETGLOBAL	R145 K677 ; SetEnergyToTeamColor := R145
	2016	[6277]	CLOSURE  	R145 303 ; R145 := closure(Function #304)
	2017	[6275]	SETGLOBAL	R145 K678 ; ClearTransmissionQueue := R145
	2018	[6292]	CLOSURE  	R145 304 ; R145 := closure(Function #305)
	2019	[6297]	CLOSURE  	R146 305 ; R146 := closure(Function #306)
	2020	[6297]	MOVE     	R0 R145 ; R0 := R145
	2021	[6295]	SETGLOBAL	R146 K679 ; GetProductId := R146
	2022	[6315]	CLOSURE  	R146 306 ; R146 := closure(Function #307)
	2023	[6315]	MOVE     	R0 R145 ; R0 := R145
	2024	[6319]	CLOSURE  	R147 307 ; R147 := closure(Function #308)
	2025	[6319]	MOVE     	R0 R146 ; R0 := R146
	2026	[6317]	SETGLOBAL	R147 K680 ; CheckIOSPurchaseAvailability := R147
	2027	[6357]	CLOSURE  	R147 308 ; R147 := closure(Function #309)
	2028	[6362]	CLOSURE  	R148 309 ; R148 := closure(Function #310)
	2029	[6362]	MOVE     	R0 R147 ; R0 := R147
	2030	[6360]	SETGLOBAL	R148 K681 ; CheckSteamPurchaseAvailability := R148
	2031	[6380]	CLOSURE  	R148 310 ; R148 := closure(Function #311)
	2032	[6384]	CLOSURE  	R149 311 ; R149 := closure(Function #312)
	2033	[6384]	MOVE     	R0 R148 ; R0 := R148
	2034	[6382]	SETGLOBAL	R149 K682 ; CheckEpicPurchaseAvailability := R149
	2035	[6397]	CLOSURE  	R149 312 ; R149 := closure(Function #313)
	2036	[6397]	MOVE     	R0 R148 ; R0 := R148
	2037	[6397]	MOVE     	R0 R146 ; R0 := R146
	2038	[6397]	MOVE     	R0 R147 ; R0 := R147
	2039	[6397]	MOVE     	R0 R145 ; R0 := R145
	2040	[6401]	CLOSURE  	R150 313 ; R150 := closure(Function #314)
	2041	[6401]	MOVE     	R0 R149 ; R0 := R149
	2042	[6399]	SETGLOBAL	R150 K683 ; IsExternalProduct := R150
	2043	[6424]	CLOSURE  	R150 314 ; R150 := closure(Function #315)
	2044	[6428]	CLOSURE  	R151 315 ; R151 := closure(Function #316)
	2045	[6428]	MOVE     	R0 R150 ; R0 := R150
	2046	[6451]	CLOSURE  	R152 316 ; R152 := closure(Function #317)
	2047	[6451]	MOVE     	R0 R145 ; R0 := R145
	2048	[6451]	MOVE     	R0 R150 ; R0 := R150
	2049	[6451]	MOVE     	R0 R149 ; R0 := R149
	2050	[6431]	SETGLOBAL	R152 K684 ; ShowItem := R152
	2051	[6483]	CLOSURE  	R152 317 ; R152 := closure(Function #318)
	2052	[6483]	MOVE     	R0 R17 ; R0 := R17
	2053	[6453]	SETGLOBAL	R152 K685 ; GetTreasureName := R152
	2054	[6487]	CLOSURE  	R152 318 ; R152 := closure(Function #319)
	2055	[6485]	SETGLOBAL	R152 K686 ; GetSecondCount := R152
	2056	[6491]	CLOSURE  	R152 319 ; R152 := closure(Function #320)
	2057	[6495]	CLOSURE  	R153 320 ; R153 := closure(Function #321)
	2058	[6495]	MOVE     	R0 R152 ; R0 := R152
	2059	[6493]	SETGLOBAL	R153 K687 ; GetMinuteCount := R153
	2060	[6499]	CLOSURE  	R153 321 ; R153 := closure(Function #322)
	2061	[6503]	CLOSURE  	R154 322 ; R154 := closure(Function #323)
	2062	[6503]	MOVE     	R0 R153 ; R0 := R153
	2063	[6501]	SETGLOBAL	R154 K688 ; GetHourCount := R154
	2064	[6507]	CLOSURE  	R154 323 ; R154 := closure(Function #324)
	2065	[6511]	CLOSURE  	R155 324 ; R155 := closure(Function #325)
	2066	[6511]	MOVE     	R0 R154 ; R0 := R154
	2067	[6509]	SETGLOBAL	R155 K689 ; GetDayCount := R155
	2068	[6515]	CLOSURE  	R155 325 ; R155 := closure(Function #326)
	2069	[6513]	SETGLOBAL	R155 K690 ; GetWeekCount := R155
	2070	[6577]	CLOSURE  	R155 326 ; R155 := closure(Function #327)
	2071	[6577]	MOVE     	R0 R154 ; R0 := R154
	2072	[6517]	SETGLOBAL	R155 K691 ; RollForNightmareMutators := R155
	2073	[6602]	CLOSURE  	R28 327 ; R28 := closure(Function #328)
	2074	[6606]	CLOSURE  	R155 328 ; R155 := closure(Function #329)
	2075	[6606]	MOVE     	R0 R28 ; R0 := R28
	2076	[6604]	SETGLOBAL	R155 K692 ; GetOmegaCards := R155
	2077	[6620]	CLOSURE  	R29 329 ; R29 := closure(Function #330)
	2078	[6620]	MOVE     	R0 R28 ; R0 := R28
	2079	[6620]	MOVE     	R0 R30 ; R0 := R30
	2080	[6624]	CLOSURE  	R155 330 ; R155 := closure(Function #331)
	2081	[6624]	MOVE     	R0 R29 ; R0 := R29
	2082	[6622]	SETGLOBAL	R155 K693 ; IsOverOmegaLimit := R155
	2083	[6637]	CLOSURE  	R30 331 ; R30 := closure(Function #332)
	2084	[6641]	CLOSURE  	R155 332 ; R155 := closure(Function #333)
	2085	[6641]	MOVE     	R0 R30 ; R0 := R30
	2086	[6639]	SETGLOBAL	R155 K694 ; GetMaxOmegaCapacity := R155
	2087	[6656]	CLOSURE  	R155 333 ; R155 := closure(Function #334)
	2088	[6661]	CLOSURE  	R156 334 ; R156 := closure(Function #335)
	2089	[6661]	MOVE     	R0 R155 ; R0 := R155
	2090	[6658]	SETGLOBAL	R156 K695 ; IsCurrentSuitInfestedEnoughToHeal := R156
	2091	[6666]	CLOSURE  	R156 335 ; R156 := closure(Function #336)
	2092	[6666]	MOVE     	R0 R155 ; R0 := R155
	2093	[6663]	SETGLOBAL	R156 K696 ; IsCurrentSuitFullyInfested := R156
	2094	[6697]	CLOSURE  	R156 336 ; R156 := closure(Function #337)
	2095	[6668]	SETGLOBAL	R156 K697 ; ShowTradeUI := R156
	2096	[6710]	CLOSURE  	R156 337 ; R156 := closure(Function #338)
	2097	[6699]	SETGLOBAL	R156 K698 ; UpdateScannerInfo := R156
	2098	[6719]	CLOSURE  	R156 338 ; R156 := closure(Function #339)
	2099	[6712]	SETGLOBAL	R156 K699 ; SetFlashlightDimness := R156
	2100	[6771]	CLOSURE  	R156 339 ; R156 := closure(Function #340)
	2101	[6771]	MOVE     	R0 R17 ; R0 := R17
	2102	[6721]	SETGLOBAL	R156 K700 ; GetRewardTextForMastery := R156
	2103	[6831]	CLOSURE  	R156 340 ; R156 := closure(Function #341)
	2104	[6895]	CLOSURE  	R157 341 ; R157 := closure(Function #342)
	2105	[6895]	MOVE     	R0 R54 ; R0 := R54
	2106	[6895]	MOVE     	R0 R17 ; R0 := R17
	2107	[6895]	MOVE     	R0 R156 ; R0 := R156
	2108	[6899]	CLOSURE  	R158 342 ; R158 := closure(Function #343)
	2109	[6899]	MOVE     	R0 R157 ; R0 := R157
	2110	[6897]	SETGLOBAL	R158 K701 ; GetPresetInfo := R158
	2111	[6905]	CLOSURE  	R158 343 ; R158 := closure(Function #344)
	2112	[6901]	SETGLOBAL	R158 K702 ; GetClanEmblemPath := R158
	2113	[6951]	CLOSURE  	R158 344 ; R158 := closure(Function #345)
	2114	[6907]	SETGLOBAL	R158 K703 ; GetPersonalGoalProgress := R158
	2115	[7015]	CLOSURE  	R158 345 ; R158 := closure(Function #346)
	2116	[7015]	MOVE     	R0 R63 ; R0 := R63
	2117	[6953]	SETGLOBAL	R158 K704 ; HasRelayReconstructionEnemy := R158
	2118	[7052]	CLOSURE  	R158 346 ; R158 := closure(Function #347)
	2119	[7017]	SETGLOBAL	R158 K705 ; ApplyWeaponRestriction := R158
	2120	[7139]	CLOSURE  	R158 347 ; R158 := closure(Function #348)
	2121	[7054]	SETGLOBAL	R158 K706 ; ApplyModlessLoadout := R158
	2122	[7149]	CLOSURE  	R158 348 ; R158 := closure(Function #349)
	2123	[7141]	SETGLOBAL	R158 K707 ; IsNoModsMode := R158
	2124	[7163]	CLOSURE  	R158 349 ; R158 := closure(Function #350)
	2125	[7151]	SETGLOBAL	R158 K708 ; ToggleAvatarAuras := R158
	2126	[7172]	CLOSURE  	R158 350 ; R158 := closure(Function #351)
	2127	[7166]	SETGLOBAL	R158 K709 ; IsFirstTimeInNode := R158
	2128	[7179]	CLOSURE  	R158 351 ; R158 := closure(Function #352)
	2129	[7174]	SETGLOBAL	R158 K710 ; SetEquippingGearItem := R158
	2130	[7187]	CLOSURE  	R158 352 ; R158 := closure(Function #353)
	2131	[7181]	SETGLOBAL	R158 K711 ; IsEquippingGearItem := R158
	2132	[7232]	CLOSURE  	R158 353 ; R158 := closure(Function #354)
	2133	[7236]	CLOSURE  	R159 354 ; R159 := closure(Function #355)
	2134	[7236]	MOVE     	R0 R158 ; R0 := R158
	2135	[7234]	SETGLOBAL	R159 K712 ; GetShipDecoRoom := R159
	2136	[7251]	CLOSURE  	R159 355 ; R159 := closure(Function #356)
	2137	[7238]	SETGLOBAL	R159 K713 ; GetDecoArea := R159
	2138	[7330]	CLOSURE  	R159 356 ; R159 := closure(Function #357)
	2139	[7330]	MOVE     	R0 R34 ; R0 := R34
	2140	[7253]	SETGLOBAL	R159 K714 ; GetShipDecoAnchor := R159
	2141	[7356]	CLOSURE  	R159 357 ; R159 := closure(Function #358)
	2142	[7332]	SETGLOBAL	R159 K715 ; ShowLoadoutSelectionMenu := R159
	2143	[7426]	CLOSURE  	R159 358 ; R159 := closure(Function #359)
	2144	[7358]	SETGLOBAL	R159 K716 ; GetTimeOfDayLabel := R159
	2145	[7451]	CLOSURE  	R159 359 ; R159 := closure(Function #360)
	2146	[7428]	SETGLOBAL	R159 K717 ; CalculateTimeOfDay := R159
	2147	[7466]	CLOSURE  	R159 360 ; R159 := closure(Function #361)
	2148	[7470]	CLOSURE  	R160 361 ; R160 := closure(Function #362)
	2149	[7470]	MOVE     	R0 R159 ; R0 := R159
	2150	[7468]	SETGLOBAL	R160 K718 ; ProcessPlayerLevel := R160
	2151	[7601]	CLOSURE  	R160 362 ; R160 := closure(Function #363)
	2152	[7601]	MOVE     	R0 R159 ; R0 := R159
	2153	[7601]	MOVE     	R0 R17 ; R0 := R17
	2154	[7472]	SETGLOBAL	R160 K719 ; GetSquadMemberLoadoutInfo := R160
	2155	[7720]	CLOSURE  	R160 363 ; R160 := closure(Function #364)
	2156	[7720]	MOVE     	R0 R137 ; R0 := R137
	2157	[7720]	MOVE     	R0 R97 ; R0 := R97
	2158	[7603]	SETGLOBAL	R160 K720 ; CreateVendorConversationFunctions := R160
	2159	[7728]	CLOSURE  	R160 364 ; R160 := closure(Function #365)
	2160	[7728]	MOVE     	R0 R17 ; R0 := R17
	2161	[7722]	SETGLOBAL	R160 K721 ; RegisterHideHud := R160
	2162	[7736]	CLOSURE  	R160 365 ; R160 := closure(Function #366)
	2163	[7736]	MOVE     	R0 R17 ; R0 := R17
	2164	[7730]	SETGLOBAL	R160 K722 ; RegisterHideNotifications := R160
	2165	[7744]	CLOSURE  	R160 366 ; R160 := closure(Function #367)
	2166	[7744]	MOVE     	R0 R17 ; R0 := R17
	2167	[7738]	SETGLOBAL	R160 K723 ; RegisterHideStarChart := R160
	2168	[7752]	CLOSURE  	R160 367 ; R160 := closure(Function #368)
	2169	[7752]	MOVE     	R0 R17 ; R0 := R17
	2170	[7746]	SETGLOBAL	R160 K724 ; RegisterHideSquadOverlay := R160
	2171	[7760]	CLOSURE  	R160 368 ; R160 := closure(Function #369)
	2172	[7760]	MOVE     	R0 R17 ; R0 := R17
	2173	[7754]	SETGLOBAL	R160 K725 ; RegisterHideEOM := R160
	2174	[7773]	CLOSURE  	R160 369 ; R160 := closure(Function #370)
	2175	[7762]	SETGLOBAL	R160 K726 ; GetEntityUnderCursor := R160
	2176	[7791]	CLOSURE  	R160 370 ; R160 := closure(Function #371)
	2177	[7775]	SETGLOBAL	R160 K727 ; HasDojoArchitectPermission := R160
	2178	[7834]	CLOSURE  	R160 371 ; R160 := closure(Function #372)
	2179	[7793]	SETGLOBAL	R160 K728 ; GetDojoConsole := R160
	2180	[7838]	CLOSURE  	R160 372 ; R160 := closure(Function #373)
	2181	[7836]	SETGLOBAL	R160 K729 ; IsWarlordRank := R160
	2182	[7878]	CLOSURE  	R160 373 ; R160 := closure(Function #374)
	2183	[7878]	MOVE     	R0 R123 ; R0 := R123
	2184	[7878]	MOVE     	R0 R46 ; R0 := R46
	2185	[7878]	MOVE     	R0 R17 ; R0 := R17
	2186	[7840]	SETGLOBAL	R160 K730 ; ShowConditionalWordConfirm := R160
	2187	[7892]	CLOSURE  	R160 374 ; R160 := closure(Function #375)
	2188	[7880]	SETGLOBAL	R160 K731 ; GetAltFireKey := R160
	2189	[7921]	CLOSURE  	R160 375 ; R160 := closure(Function #376)
	2190	[7894]	SETGLOBAL	R160 K732 ; GetActiveSoundSet := R160
	2191	[7936]	CLOSURE  	R160 376 ; R160 := closure(Function #377)
	2192	[7923]	SETGLOBAL	R160 K733 ; InitializeTitleBookends := R160
	2193	[7974]	CLOSURE  	R160 377 ; R160 := closure(Function #378)
	2194	[8210]	CLOSURE  	R161 378 ; R161 := closure(Function #379)
	2195	[8210]	MOVE     	R0 R152 ; R0 := R152
	2196	[8210]	MOVE     	R0 R160 ; R0 := R160
	2197	[8210]	MOVE     	R0 R17 ; R0 := R17
	2198	[7976]	SETGLOBAL	R161 K734 ; GetHelminthUpgradeOffers := R161
	2199	[8310]	CLOSURE  	R161 379 ; R161 := closure(Function #380)
	2200	[8310]	MOVE     	R0 R17 ; R0 := R17
	2201	[8310]	MOVE     	R0 R152 ; R0 := R152
	2202	[8212]	SETGLOBAL	R161 K735 ; GetEliteAlertCustomUpgrades := R161
	2203	[8328]	CLOSURE  	R161 380 ; R161 := closure(Function #381)
	2204	[8312]	SETGLOBAL	R161 K736 ; AppendItemRank := R161
	2205	[8348]	CLOSURE  	R161 381 ; R161 := closure(Function #382)
	2206	[8348]	MOVE     	R0 R17 ; R0 := R17
	2207	[8348]	MOVE     	R0 R18 ; R0 := R18
	2208	[8330]	SETGLOBAL	R161 K737 ; ApplyParticleThemeColors := R161
	2209	[8377]	CLOSURE  	R161 382 ; R161 := closure(Function #383)
	2210	[8377]	MOVE     	R0 R18 ; R0 := R18
	2211	[8350]	SETGLOBAL	R161 K738 ; ReplaceTextColors := R161
	2212	[8444]	CLOSURE  	R161 383 ; R161 := closure(Function #384)
	2213	[8444]	MOVE     	R0 R133 ; R0 := R133
	2214	[8381]	SETGLOBAL	R161 K739 ; UpdateMailbox := R161
	2215	[8448]	CLOSURE  	R161 384 ; R161 := closure(Function #385)
	2216	[8448]	MOVE     	R0 R95 ; R0 := R95
	2217	[8446]	SETGLOBAL	R161 K740 ; IsSeasonActive := R161
	2218	[8505]	CLOSURE  	R161 385 ; R161 := closure(Function #386)
	2219	[8505]	MOVE     	R0 R63 ; R0 := R63
	2220	[8505]	MOVE     	R0 R42 ; R0 := R42
	2221	[8509]	CLOSURE  	R162 386 ; R162 := closure(Function #387)
	2222	[8509]	MOVE     	R0 R161 ; R0 := R161
	2223	[8507]	SETGLOBAL	R162 K741 ; BuildNemesisMission := R162
	2224	[8522]	CLOSURE  	R162 387 ; R162 := closure(Function #388)
	2225	[8511]	SETGLOBAL	R162 K742 ; ShouldHideRecipe := R162
	2226	[8534]	CLOSURE  	R162 388 ; R162 := closure(Function #389)
	2227	[8524]	SETGLOBAL	R162 K743 ; CheckLetterSpacing := R162
	2228	[8544]	CLOSURE  	R162 389 ; R162 := closure(Function #390)
	2229	[8536]	SETGLOBAL	R162 K744 ; ServerSideSettings := R162
	2230	[8557]	CLOSURE  	R162 390 ; R162 := closure(Function #391)
	2231	[8557]	MOVE     	R0 R17 ; R0 := R17
	2232	[8561]	CLOSURE  	R163 391 ; R163 := closure(Function #392)
	2233	[8561]	MOVE     	R0 R162 ; R0 := R162
	2234	[8559]	SETGLOBAL	R163 K745 ; FriendLimitReached := R163
	2235	[8593]	CLOSURE  	R163 392 ; R163 := closure(Function #393)
	2236	[8593]	MOVE     	R0 R46 ; R0 := R46
	2237	[8593]	MOVE     	R0 R17 ; R0 := R17
	2238	[8614]	CLOSURE  	R164 393 ; R164 := closure(Function #394)
	2239	[8614]	MOVE     	R0 R163 ; R0 := R163
	2240	[8614]	MOVE     	R0 R162 ; R0 := R162
	2241	[8614]	MOVE     	R0 R123 ; R0 := R123
	2242	[8595]	SETGLOBAL	R164 K746 ; AddFriend := R164
	2243	[8635]	CLOSURE  	R164 394 ; R164 := closure(Function #395)
	2244	[8616]	SETGLOBAL	R164 K747 ; GetSyndicateBackgroundAlignments := R164
	2245	[8646]	CLOSURE  	R164 395 ; R164 := closure(Function #396)
	2246	[8637]	SETGLOBAL	R164 K748 ; ForceCloseTransmission := R164
	2247	[8687]	CLOSURE  	R164 396 ; R164 := closure(Function #397)
	2248	[8648]	SETGLOBAL	R164 K749 ; GetNetworkAnalysisURL := R164
	2249	[8707]	CLOSURE  	R164 397 ; R164 := closure(Function #398)
	2250	[8689]	SETGLOBAL	R164 K750 ; AvatarHasActiveActions := R164
	2251	[8715]	CLOSURE  	R164 398 ; R164 := closure(Function #399)
	2252	[8715]	MOVE     	R0 R9 ; R0 := R9
	2253	[8709]	SETGLOBAL	R164 K751 ; ShouldHideConsumable := R164
	2254	[8747]	CLOSURE  	R164 399 ; R164 := closure(Function #400)
	2255	[8747]	MOVE     	R0 R158 ; R0 := R158
	2256	[8717]	SETGLOBAL	R164 K752 ; ShouldShowRoomDecorationReset := R164
	2257	[8825]	CLOSURE  	R164 400 ; R164 := closure(Function #401)
	2258	[8825]	MOVE     	R0 R63 ; R0 := R63
	2259	[8749]	SETGLOBAL	R164 K753 ; GetMissionName := R164
	2260	[8847]	CLOSURE  	R164 401 ; R164 := closure(Function #402)
	2261	[8827]	SETGLOBAL	R164 K754 ; HasUnlockedHardMode := R164
	2262	[8877]	CLOSURE  	R164 402 ; R164 := closure(Function #403)
	2263	[9256]	CLOSURE  	R165 403 ; R165 := closure(Function #404)
	2264	[9256]	MOVE     	R0 R164 ; R0 := R164
	2265	[9256]	MOVE     	R0 R17 ; R0 := R17
	2266	[9256]	MOVE     	R0 R161 ; R0 := R161
	2267	[9256]	MOVE     	R0 R40 ; R0 := R40
	2268	[9256]	MOVE     	R0 R41 ; R0 := R41
	2269	[9256]	MOVE     	R0 R102 ; R0 := R102
	2270	[8879]	SETGLOBAL	R165 K755 ; GetMissionVoteInfo := R165
	2271	[9274]	CLOSURE  	R165 404 ; R165 := closure(Function #405)
	2272	[9258]	SETGLOBAL	R165 K756 ; BuildMissionMapString := R165
	2273	[9294]	CLOSURE  	R165 405 ; R165 := closure(Function #406)
	2274	[9294]	MOVE     	R0 R53 ; R0 := R53
	2275	[9294]	MOVE     	R0 R17 ; R0 := R17
	2276	[9276]	SETGLOBAL	R165 K757 ; RefreshPetsAfterSell := R165
	2277	[9314]	CLOSURE  	R165 406 ; R165 := closure(Function #407)
	2278	[9296]	SETGLOBAL	R165 K758 ; GetResearchProgress := R165
	2279	[9329]	CLOSURE  	R165 407 ; R165 := closure(Function #408)
	2280	[9333]	CLOSURE  	R166 408 ; R166 := closure(Function #409)
	2281	[9333]	MOVE     	R0 R165 ; R0 := R165
	2282	[9331]	SETGLOBAL	R166 K759 ; ValidateTrueMaster := R166
	2283	[9344]	CLOSURE  	R166 409 ; R166 := closure(Function #410)
	2284	[9344]	MOVE     	R0 R165 ; R0 := R165
	2285	[9335]	SETGLOBAL	R166 K760 ; SetMOTD := R166
	2286	[9348]	CLOSURE  	R166 410 ; R166 := closure(Function #411)
	2287	[9346]	SETGLOBAL	R166 K761 ; GetSlotType := R166
	2288	[9374]	CLOSURE  	R166 411 ; R166 := closure(Function #412)
	2289	[9350]	SETGLOBAL	R166 K762 ; AutofocusTextfield := R166
	2290	[9418]	CLOSURE  	R166 412 ; R166 := closure(Function #413)
	2291	[9418]	MOVE     	R0 R133 ; R0 := R133
	2292	[9418]	MOVE     	R0 R63 ; R0 := R63
	2293	[9376]	SETGLOBAL	R166 K763 ; ReturnToDojo := R166
	2294	[9424]	CLOSURE  	R166 413 ; R166 := closure(Function #414)
	2295	[9420]	SETGLOBAL	R166 K764 ; IsPlayerInCrewship := R166
	2296	[9445]	CLOSURE  	R166 414 ; R166 := closure(Function #415)
	2297	[9426]	SETGLOBAL	R166 K765 ; ApplyCensorshipOverridesAndAttachments := R166
	2298	[9455]	CLOSURE  	R166 415 ; R166 := closure(Function #416)
	2299	[9498]	CLOSURE  	R167 416 ; R167 := closure(Function #417)
	2300	[9498]	MOVE     	R0 R17 ; R0 := R17
	2301	[9498]	MOVE     	R0 R46 ; R0 := R46
	2302	[9498]	MOVE     	R0 R166 ; R0 := R166
	2303	[9457]	SETGLOBAL	R167 K766 ; ToggleIgnoreUser := R167
	2304	[9507]	CLOSURE  	R167 417 ; R167 := closure(Function #418)
	2305	[9500]	SETGLOBAL	R167 K767 ; IsEmptyLevel := R167
	2306	[9536]	CLOSURE  	R34 418 ; R34 := closure(Function #419)
	2307	[9540]	CLOSURE  	R167 419 ; R167 := closure(Function #420)
	2308	[9540]	MOVE     	R0 R34 ; R0 := R34
	2309	[9538]	SETGLOBAL	R167 K768 ; IsCampLevel := R167
	2310	[9552]	CLOSURE  	R35 420 ; R35 := closure(Function #421)
	2311	[9556]	CLOSURE  	R167 421 ; R167 := closure(Function #422)
	2312	[9556]	MOVE     	R0 R35 ; R0 := R35
	2313	[9554]	SETGLOBAL	R167 K769 ; IsApartmentLevel := R167
	2314	[9573]	CLOSURE  	R167 422 ; R167 := closure(Function #423)
	2315	[9573]	MOVE     	R0 R34 ; R0 := R34
	2316	[9558]	SETGLOBAL	R167 K770 ; SetLoginCameraSpot := R167
	2317	[9584]	CLOSURE  	R167 423 ; R167 := closure(Function #424)
	2318	[9584]	MOVE     	R0 R45 ; R0 := R45
	2319	[9575]	SETGLOBAL	R167 K771 ; QuestRequiresLotusHelmet := R167
	2320	[9680]	CLOSURE  	R167 424 ; R167 := closure(Function #425)
	2321	[9680]	MOVE     	R0 R46 ; R0 := R46
	2322	[9680]	MOVE     	R0 R123 ; R0 := R123
	2323	[9680]	MOVE     	R0 R17 ; R0 := R17
	2324	[9586]	SETGLOBAL	R167 K772 ; ShowBeginZarimanQuestWarning := R167
	2325	[9696]	CLOSURE  	R167 425 ; R167 := closure(Function #426)
	2326	[9682]	SETGLOBAL	R167 K773 ; GetLocalizedLotusName := R167
	2327	[9720]	CLOSURE  	R167 426 ; R167 := closure(Function #427)
	2328	[9720]	MOVE     	R0 R34 ; R0 := R34
	2329	[9698]	SETGLOBAL	R167 K774 ; PlayLoginAnim := R167
	2330	[9732]	CLOSURE  	R167 427 ; R167 := closure(Function #428)
	2331	[9722]	SETGLOBAL	R167 K775 ; SetTimeOfDay := R167
	2332	[9732]	RETURN   	R0 1 ; return 


function #1 <?:476,482> (13 instructions, 52 bytes at 00000160C67E8490)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[477]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0x5b89142c]
	2	[477]	CALL     	R1 2 2 ; R1 := R1(R2)
	3	[478]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[478]	MOVE     	R3 R1 ; R3 := R1
	5	[478]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[478]	TEST     	R2 1 ; if R2 then PC := 11
	7	[478]	JMP      	11 ; PC := 11
	8	[479]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0xa534c3ac]
	9	[479]	TAILCALL 	R2 2 0 ; R2,... := R2(R3)
	10	[479]	RETURN   	R2 0 ; return R2,... 
	11	[481]	LOADNIL  	R2 R2 ; R2 := nil
	12	[481]	RETURN   	R2 2 ; return R2 
	13	[482]	RETURN   	R0 1 ; return 

function #2 <?:484,493> (21 instructions, 84 bytes at 00000160C67E8600)
1 param, 7 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[485]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xf2deaf69]
	2	[485]	GETGLOBAL	R3 K1 ; R3 := gLotusVehicleAvatarType
	3	[485]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	4	[485]	TEST     	R1 0 ; if not R1 then PC := 20
	5	[485]	JMP      	20 ; PC := 20
	6	[486]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xff005826]
	7	[486]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[487]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	9	[487]	MOVE     	R3 R1 ; R3 := R1
	10	[487]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[487]	TEST     	R2 1 ; if R2 then PC := 20
	12	[487]	JMP      	20 ; PC := 20
	13	[488]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0xcaa5de6d]
	14	[488]	MOVE     	R4 R1 ; R4 := R1
	15	[488]	GETGLOBAL	R5 K5 ; R5 := 0xa421af95
	16	[488]	CALL     	R5 1 2 ; R5 := R5()
	17	[488]	OP_LOADBOOL	R6 1 0 ; R6 := true
	18	[488]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	19	[489]	MOVE     	R0 R1 ; R0 := R1
	20	[492]	RETURN   	R0 2 ; return R0 
	21	[493]	RETURN   	R0 1 ; return 

function #3 <?:495,503> (31 instructions, 124 bytes at 00000160C67E87E0)
2 params, 6 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[496]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[496]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x06d055f9]
	3	[496]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 6
	4	[496]	JMP      	6 ; PC := 6
	5	[496]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 6
	6	[496]	OP_LOADBOOL	R3 1 0 ; R3 := true
	7	[496]	MOVE     	R4 R1 ; R4 := R1
	8	[496]	LOADK    	R5 := 2.000000
	9	[496]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	10	[497]	GETGLOBAL	R3 K2 ; R3 := 0xcd0165a3
	11	[497]	MOVE     	R4 R2 ; R4 := R2
	12	[497]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[498]	GETTABLE 	R4 R3 K3 ; R4 := R3["mMovie"]
	14	[498]	TEST     	R4 0 ; if not R4 then PC := 24
	15	[498]	JMP      	24 ; PC := 24
	16	[498]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	17	[498]	MOVE     	R5 R0 ; R5 := R0
	18	[498]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[498]	TEST     	R4 1 ; if R4 then PC := 30
	20	[498]	JMP      	30 ; PC := 30
	21	[498]	GETTABLE 	R4 R3 K3 ; R4 := R3["mMovie"]
	22	[498]	EQ       	1 R4 R0 ; if R4 == R0 then PC := 30
	23	[498]	JMP      	30 ; PC := 30
	24	[499]	ADD      	R2 R2 K5 ; R2 := R2 + 1.000000
	25	[500]	GETGLOBAL	R4 K2 ; R4 := 0xcd0165a3
	26	[500]	MOVE     	R5 R2 ; R5 := R2
	27	[500]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[500]	MOVE     	R3 R4 ; R3 := R4
	29	[500]	JMP      	13 ; PC := 13
	30	[502]	RETURN   	R3 2 ; return R3 
	31	[503]	RETURN   	R0 1 ; return 

function #4 <?:505,511> (21 instructions, 84 bytes at 00000160C67E8A00)
0 params, 2 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[506]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[506]	GETTABLE 	R0 R0 K1 ; R0 := R0["hasCheckedTutorial"]
	3	[506]	EQ       	1 R0 K2 ; if R0 == nil then PC := 9
	4	[506]	JMP      	9 ; PC := 9
	5	[506]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[506]	GETTABLE 	R0 R0 K1 ; R0 := R0["hasCheckedTutorial"]
	7	[506]	TEST     	R0 1 ; if R0 then PC := 11
	8	[506]	JMP      	11 ; PC := 11
	9	[507]	OP_LOADBOOL	R0 1 0 ; R0 := true
	10	[507]	RETURN   	R0 2 ; return R0 
	11	[510]	GETGLOBAL	R0 K0 ; R0 := _T
	12	[510]	GETTABLE 	R0 R0 K3 ; R0 := R0["tutorialActive"]
	13	[510]	EQ       	1 R0 K2 ; if R0 == nil then PC := 18
	14	[510]	JMP      	18 ; PC := 18
	15	[510]	GETGLOBAL	R0 K0 ; R0 := _T
	16	[510]	GETTABLE 	R0 R0 K3 ; R0 := R0["tutorialActive"]
	17	[510]	JMP      	20 ; PC := 20
	18	[510]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 19
	19	[510]	OP_LOADBOOL	R0 1 0 ; R0 := true
	20	[510]	RETURN   	R0 2 ; return R0 
	21	[511]	RETURN   	R0 1 ; return 

function #5 <?:513,536> (95 instructions, 380 bytes at 00000160C67E8C40)
0 params, 51 slots, 0 upvalues, 0 locals, 90 constants, 0 functions
	1	[514]	NEWTABLE 	R0 36 0 ; R0 := {}
	2	[516]	LOADK    	R1 K0 ; R1 := 4591633.000000
	3	[516]	LOADK    	R2 K1 ; R2 := 6756120.000000
	4	[516]	LOADK    	R3 K2 ; R3 := 9773092.000000
	5	[516]	LOADK    	R4 K3 ; R4 := 12265515.000000
	6	[516]	LOADK    	R5 K4 ; R5 := 13708851.000000
	7	[517]	LOADK    	R6 K5 ; R6 := 4003870.000000
	8	[517]	LOADK    	R7 K6 ; R7 := 5775914.000000
	9	[517]	LOADK    	R8 K7 ; R8 := 8663871.000000
	10	[517]	LOADK    	R9 K8 ; R9 := 11421784.000000
	11	[517]	LOADK    	R10 K9 ; R10 := 13260653.000000
	12	[518]	LOADK    	R11 K10 ; R11 := 2100501.000000
	13	[518]	LOADK    	R12 K11 ; R12 := 3873573.000000
	14	[518]	LOADK    	R13 K12 ; R13 := 7419972.000000
	15	[518]	LOADK    	R14 K13 ; R14 := 11428207.000000
	16	[518]	LOADK    	R15 K14 ; R15 := 13928599.000000
	17	[519]	LOADK    	R16 K15 ; R16 := 2492950.000000
	18	[519]	LOADK    	R17 K16 ; R17 := 4067364.000000
	19	[519]	LOADK    	R18 K17 ; R18 := 7216189.000000
	20	[519]	LOADK    	R19 K18 ; R19 := 10299227.000000
	21	[519]	LOADK    	R20 K19 ; R20 := 12464506.000000
	22	[520]	LOADK    	R21 K20 ; R21 := 987681.000000
	23	[520]	LOADK    	R22 K21 ; R22 := 1448500.000000
	24	[520]	LOADK    	R23 K22 ; R23 := 2502747.000000
	25	[520]	LOADK    	R24 K23 ; R24 := 3950990.000000
	26	[520]	LOADK    	R25 K24 ; R25 := 5334711.000000
	27	[521]	LOADK    	R26 K25 ; R26 := 530470.000000
	28	[521]	LOADK    	R27 K26 ; R27 := 797252.000000
	29	[521]	LOADK    	R28 K27 ; R28 := 1460087.000000
	30	[521]	LOADK    	R29 K28 ; R29 := 1994408.000000
	31	[521]	LOADK    	R30 K29 ; R30 := 2396358.000000
	32	[522]	LOADK    	R31 K30 ; R31 := 930629.000000
	33	[522]	LOADK    	R32 K31 ; R32 := 1526113.000000
	34	[522]	LOADK    	R33 K32 ; R33 := 2716301.000000
	35	[522]	LOADK    	R34 K33 ; R34 := 4169655.000000
	36	[522]	LOADK    	R35 K34 ; R35 := 5619666.000000
	37	[523]	LOADK    	R36 K35 ; R36 := 1650218.000000
	38	[523]	LOADK    	R37 K36 ; R37 := 2442557.000000
	39	[523]	LOADK    	R38 K37 ; R38 := 3828063.000000
	40	[523]	LOADK    	R39 K38 ; R39 := 5543563.000000
	41	[523]	LOADK    	R40 K39 ; R40 := 7388337.000000
	42	[524]	LOADK    	R41 K40 ; R41 := 1125400.000000
	43	[524]	LOADK    	R42 K41 ; R42 := 1721894.000000
	44	[524]	LOADK    	R43 K42 ; R43 := 2914624.000000
	45	[524]	LOADK    	R44 K43 ; R44 := 4303198.000000
	46	[524]	LOADK    	R45 K44 ; R45 := 5491068.000000
	47	[525]	LOADK    	R46 K45 ; R46 := 3816203.000000
	48	[525]	LOADK    	R47 K46 ; R47 := 6317074.000000
	49	[525]	LOADK    	R48 K47 ; R48 := 9409055.000000
	50	[525]	LOADK    	R49 K48 ; R49 := 12106284.000000
	51	[525]	LOADK    	R50 K49 ; R50 := 13750327.000000
	52	[525]	SETLIST  	R0 50 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 50
	53	[526]	LOADK    	R1 K50 ; R1 := 5916201.000000
	54	[526]	LOADK    	R2 K51 ; R2 := 8347962.000000
	55	[526]	LOADK    	R3 K52 ; R3 := 11111504.000000
	56	[526]	LOADK    	R4 K53 ; R4 := 13546858.000000
	57	[526]	LOADK    	R5 K54 ; R5 := 15126918.000000
	58	[527]	LOADK    	R6 K55 ; R6 := 8143131.000000
	59	[527]	LOADK    	R7 K56 ; R7 := 9589797.000000
	60	[527]	LOADK    	R8 K57 ; R8 := 11366711.000000
	61	[527]	LOADK    	R9 K58 ; R9 := 13014608.000000
	62	[527]	LOADK    	R10 K59 ; R10 := 14530158.000000
	63	[528]	LOADK    	R11 K60 ; R11 := 10107422.000000
	64	[528]	LOADK    	R12 K61 ; R12 := 11751209.000000
	65	[528]	LOADK    	R13 K62 ; R13 := 13529661.000000
	66	[528]	LOADK    	R14 K63 ; R14 := 14786650.000000
	67	[528]	LOADK    	R15 K64 ; R15 := 15254401.000000
	68	[529]	LOADK    	R16 K65 ; R16 := 3282697.000000
	69	[529]	LOADK    	R17 K66 ; R17 := 6301969.000000
	70	[529]	LOADK    	R18 K67 ; R18 := 10767646.000000
	71	[529]	LOADK    	R19 K68 ; R19 := 13726758.000000
	72	[529]	LOADK    	R20 K69 ; R20 := 14127655.000000
	73	[530]	LOADK    	R21 K70 ; R21 := 2694428.000000
	74	[530]	LOADK    	R22 K71 ; R22 := 4994866.000000
	75	[530]	LOADK    	R23 K72 ; R23 := 9398364.000000
	76	[530]	LOADK    	R24 K73 ; R24 := 13213582.000000
	77	[530]	LOADK    	R25 K74 ; R25 := 14991277.000000
	78	[531]	LOADK    	R26 K75 ; R26 := 2631460.000000
	79	[531]	LOADK    	R27 K76 ; R27 := 6117971.000000
	80	[531]	LOADK    	R28 K77 ; R28 := 12499631.000000
	81	[531]	LOADK    	R29 K78 ; R29 := 16118763.000000
	82	[531]	LOADK    	R30 K79 ; R30 := 16777215.000000
	83	[532]	LOADK    	R31 K80 ; R31 := 2106148.000000
	84	[532]	LOADK    	R32 K81 ; R32 := 4673359.000000
	85	[532]	LOADK    	R33 K82 ; R33 := 9872548.000000
	86	[532]	LOADK    	R34 K83 ; R34 := 14082529.000000
	87	[532]	LOADK    	R35 K84 ; R35 := 15989754.000000
	88	[533]	LOADK    	R36 K85 ; R36 := 1908258.000000
	89	[533]	LOADK    	R37 K86 ; R37 := 4145995.000000
	90	[533]	LOADK    	R38 K87 ; R38 := 9080479.000000
	91	[533]	LOADK    	R39 K88 ; R39 := 13225437.000000
	92	[534]	LOADK    	R40 K89 ; R40 := 15199223.000000
	93	[534]	SETLIST  	R0 40 2 ; R0[(2-1)*FPF+i] := R(0+i), 1 <= i <= 40
	94	[535]	RETURN   	R0 2 ; return R0 
	95	[536]	RETURN   	R0 1 ; return 

function #6 <?:538,565> (104 instructions, 416 bytes at 00000160C67E95A0)
0 params, 18 slots, 0 upvalues, 0 locals, 36 constants, 0 functions
	1	[541]	NEWTABLE 	R0 15 0 ; R0 := {}
	2	[542]	NEWTABLE 	R1 0 2 ; R1 := {}
	3	[543]	GETGLOBAL	R2 K1 ; R2 := 0x7ed0a956
	4	[543]	LOADK    	R3 K2 ; R3 := "/Lotus/Types/Game/KubrowPet/AdventurerKubrowPetPowerSuit"
	5	[543]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[543]	SETTABLE 	R1 K0 R2 ; R1["Type"] := R2
	7	[543]	SETTABLE 	R1 K3 K4 ; R1["Name"] := "/Lotus/Language/Items/AdventurerKubrowName"
	8	[543]	NEWTABLE 	R2 0 2 ; R2 := {}
	9	[544]	GETGLOBAL	R3 K1 ; R3 := 0x7ed0a956
	10	[544]	LOADK    	R4 K5 ; R4 := "/Lotus/Types/Game/KubrowPet/FurtiveKubrowPetPowerSuit"
	11	[544]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[544]	SETTABLE 	R2 K0 R3 ; R2["Type"] := R3
	13	[544]	SETTABLE 	R2 K3 K6 ; R2["Name"] := "/Lotus/Language/Items/FurtiveKubrowName"
	14	[544]	NEWTABLE 	R3 0 2 ; R3 := {}
	15	[545]	GETGLOBAL	R4 K1 ; R4 := 0x7ed0a956
	16	[545]	LOADK    	R5 K7 ; R5 := "/Lotus/Types/Game/KubrowPet/GuardKubrowPetPowerSuit"
	17	[545]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[545]	SETTABLE 	R3 K0 R4 ; R3["Type"] := R4
	19	[545]	SETTABLE 	R3 K3 K8 ; R3["Name"] := "/Lotus/Language/Items/GuardKubrowName"
	20	[545]	NEWTABLE 	R4 0 2 ; R4 := {}
	21	[546]	GETGLOBAL	R5 K1 ; R5 := 0x7ed0a956
	22	[546]	LOADK    	R6 K9 ; R6 := "/Lotus/Types/Game/KubrowPet/HunterKubrowPetPowerSuit"
	23	[546]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[546]	SETTABLE 	R4 K0 R5 ; R4["Type"] := R5
	25	[546]	SETTABLE 	R4 K3 K10 ; R4["Name"] := "/Lotus/Language/Items/HunterKubrowName"
	26	[546]	NEWTABLE 	R5 0 2 ; R5 := {}
	27	[547]	GETGLOBAL	R6 K1 ; R6 := 0x7ed0a956
	28	[547]	LOADK    	R7 K11 ; R7 := "/Lotus/Types/Game/KubrowPet/RetrieverKubrowPetPowerSuit"
	29	[547]	CALL     	R6 2 2 ; R6 := R6(R7)
	30	[547]	SETTABLE 	R5 K0 R6 ; R5["Type"] := R6
	31	[547]	SETTABLE 	R5 K3 K12 ; R5["Name"] := "/Lotus/Language/Items/RetrieverKubrowName"
	32	[547]	NEWTABLE 	R6 0 2 ; R6 := {}
	33	[548]	GETGLOBAL	R7 K1 ; R7 := 0x7ed0a956
	34	[548]	LOADK    	R8 K13 ; R8 := "/Lotus/Types/Game/KubrowPet/ChargerKubrowPetPowerSuit"
	35	[548]	CALL     	R7 2 2 ; R7 := R7(R8)
	36	[548]	SETTABLE 	R6 K0 R7 ; R6["Type"] := R7
	37	[548]	SETTABLE 	R6 K3 K14 ; R6["Name"] := "/Lotus/Language/Items/InfestedKubrowName"
	38	[548]	NEWTABLE 	R7 0 2 ; R7 := {}
	39	[549]	GETGLOBAL	R8 K1 ; R8 := 0x7ed0a956
	40	[549]	LOADK    	R9 K15 ; R9 := "/Lotus/Types/Game/CatbrowPet/MirrorCatbrowPetPowerSuit"
	41	[549]	CALL     	R8 2 2 ; R8 := R8(R9)
	42	[549]	SETTABLE 	R7 K0 R8 ; R7["Type"] := R8
	43	[549]	SETTABLE 	R7 K3 K16 ; R7["Name"] := "/Lotus/Language/Items/MirrorCatbrowName"
	44	[549]	NEWTABLE 	R8 0 2 ; R8 := {}
	45	[550]	GETGLOBAL	R9 K1 ; R9 := 0x7ed0a956
	46	[550]	LOADK    	R10 K17 ; R10 := "/Lotus/Types/Game/CatbrowPet/CheshireCatbrowPetPowerSuit"
	47	[550]	CALL     	R9 2 2 ; R9 := R9(R10)
	48	[550]	SETTABLE 	R8 K0 R9 ; R8["Type"] := R9
	49	[550]	SETTABLE 	R8 K3 K18 ; R8["Name"] := "/Lotus/Language/Items/CheshireCatbrowName"
	50	[550]	NEWTABLE 	R9 0 2 ; R9 := {}
	51	[551]	GETGLOBAL	R10 K1 ; R10 := 0x7ed0a956
	52	[551]	LOADK    	R11 K19 ; R11 := "/Lotus/Types/Game/CatbrowPet/VampireCatbrowPetPowerSuit"
	53	[551]	CALL     	R10 2 2 ; R10 := R10(R11)
	54	[551]	SETTABLE 	R9 K0 R10 ; R9["Type"] := R10
	55	[551]	SETTABLE 	R9 K3 K20 ; R9["Name"] := "/Lotus/Language/Pets/VampireKavatName"
	56	[551]	NEWTABLE 	R10 0 2 ; R10 := {}
	57	[552]	GETGLOBAL	R11 K1 ; R11 := 0x7ed0a956
	58	[552]	LOADK    	R12 K21 ; R12 := "/Lotus/Types/Friendly/Pets/CreaturePets/VizierPredatorKubrowPetPowerSuit"
	59	[552]	CALL     	R11 2 2 ; R11 := R11(R12)
	60	[552]	SETTABLE 	R10 K0 R11 ; R10["Type"] := R11
	61	[552]	SETTABLE 	R10 K3 K22 ; R10["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedPredatorCommonName"
	62	[552]	NEWTABLE 	R11 0 2 ; R11 := {}
	63	[553]	GETGLOBAL	R12 K1 ; R12 := 0x7ed0a956
	64	[553]	LOADK    	R13 K23 ; R13 := "/Lotus/Types/Friendly/Pets/CreaturePets/MedjayPredatorKubrowPetPowerSuit"
	65	[553]	CALL     	R12 2 2 ; R12 := R12(R13)
	66	[553]	SETTABLE 	R11 K0 R12 ; R11["Type"] := R12
	67	[553]	SETTABLE 	R11 K3 K24 ; R11["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedPredatorRareName"
	68	[553]	NEWTABLE 	R12 0 2 ; R12 := {}
	69	[554]	GETGLOBAL	R13 K1 ; R13 := 0x7ed0a956
	70	[554]	LOADK    	R14 K25 ; R14 := "/Lotus/Types/Friendly/Pets/CreaturePets/PharaohPredatorKubrowPetPowerSuit"
	71	[554]	CALL     	R13 2 2 ; R13 := R13(R14)
	72	[554]	SETTABLE 	R12 K0 R13 ; R12["Type"] := R13
	73	[554]	SETTABLE 	R12 K3 K26 ; R12["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedPredatorUncommonName"
	74	[554]	NEWTABLE 	R13 0 2 ; R13 := {}
	75	[555]	GETGLOBAL	R14 K1 ; R14 := 0x7ed0a956
	76	[555]	LOADK    	R15 K27 ; R15 := "/Lotus/Types/Friendly/Pets/CreaturePets/ArmoredInfestedCatbrowPetPowerSuit"
	77	[555]	CALL     	R14 2 2 ; R14 := R14(R15)
	78	[555]	SETTABLE 	R13 K0 R14 ; R13["Type"] := R14
	79	[555]	SETTABLE 	R13 K3 K28 ; R13["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedCritterRareName"
	80	[555]	NEWTABLE 	R14 0 2 ; R14 := {}
	81	[556]	GETGLOBAL	R15 K1 ; R15 := 0x7ed0a956
	82	[556]	LOADK    	R16 K29 ; R16 := "/Lotus/Types/Friendly/Pets/CreaturePets/HornedInfestedCatbrowPetPowerSuit"
	83	[556]	CALL     	R15 2 2 ; R15 := R15(R16)
	84	[556]	SETTABLE 	R14 K0 R15 ; R14["Type"] := R15
	85	[556]	SETTABLE 	R14 K3 K30 ; R14["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedCritterUncommonName"
	86	[556]	NEWTABLE 	R15 0 2 ; R15 := {}
	87	[557]	GETGLOBAL	R16 K1 ; R16 := 0x7ed0a956
	88	[557]	LOADK    	R17 K31 ; R17 := "/Lotus/Types/Friendly/Pets/CreaturePets/VulpineInfestedCatbrowPetPowerSuit"
	89	[557]	CALL     	R16 2 2 ; R16 := R16(R17)
	90	[557]	SETTABLE 	R15 K0 R16 ; R15["Type"] := R16
	91	[557]	SETTABLE 	R15 K3 K32 ; R15["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedCritterCommonName"
	92	[558]	SETLIST  	R0 15 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 15
	93	[560]	LOADK    	R1 := 1.000000
	94	[560]	LEN      	R2 R0 ; R2 := # R0
	95	[560]	LOADK    	R3 := 1.000000
	96	[560]	FORPREP  	R1 102 ; R1 -= R3; PC := 102
	97	[561]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	98	[561]	GETGLOBAL	R6 K34 ; R6 := 0x0032441c
	99	[561]	GETTABLE 	R6 R6 K35 ; R6 := R6["UITexture_CompanionIcons"]
	100	[561]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	101	[561]	SETTABLE 	R5 K33 R6 ; R5["Icon"] := R6
	102	[560]	FORLOOP  	R1 97 ; R1 += R3; if R1 <= R2 then begin PC := 97; R4 := R1 end
	103	[564]	RETURN   	R0 2 ; return R0 
	104	[565]	RETURN   	R0 1 ; return 

function #7 <?:567,621> (298 instructions, 1192 bytes at 00000160C67EA860)
7 params, 23 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[569]	GETGLOBAL	R7 K0 ; R7 := 0x603636ad
	2	[569]	LOADK    	R8 K1 ; R8 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
	3	[569]	OP_LOADBOOL	R9 0 0 ; R9 := false
	4	[569]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	5	[570]	GETGLOBAL	R8 K0 ; R8 := 0x603636ad
	6	[570]	LOADK    	R9 K2 ; R9 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
	7	[570]	OP_LOADBOOL	R10 0 0 ; R10 := false
	8	[570]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	9	[571]	GETGLOBAL	R9 K0 ; R9 := 0x603636ad
	10	[571]	LOADK    	R10 K3 ; R10 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
	11	[571]	OP_LOADBOOL	R11 0 0 ; R11 := false
	12	[571]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	13	[572]	GETGLOBAL	R10 K0 ; R10 := 0x603636ad
	14	[572]	LOADK    	R11 K4 ; R11 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
	15	[572]	OP_LOADBOOL	R12 0 0 ; R12 := false
	16	[572]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	17	[573]	TEST     	R5 0 ; if not R5 then PC := 260
	18	[573]	JMP      	260 ; PC := 260
	19	[574]	EQ       	1 R5 K5 ; if R5 == "Compact" then PC := 25
	20	[574]	JMP      	25 ; PC := 25
	21	[574]	EQ       	1 R5 K6 ; if R5 == "CompactTwoMax" then PC := 25
	22	[574]	JMP      	25 ; PC := 25
	23	[574]	EQ       	0 R5 K7 ; if R5 ~= "CompactOne" then PC := 164
	24	[574]	JMP      	164 ; PC := 164
	25	[575]	LT       	0 K8 R1 ; if 0.000000 >= R1 then PC := 76
	26	[575]	JMP      	76 ; PC := 76
	27	[576]	EQ       	0 R5 K6 ; if R5 ~= "CompactTwoMax" then PC := 43
	28	[576]	JMP      	43 ; PC := 43
	29	[577]	MOVE     	R11 R6 ; R11 := R6
	30	[577]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	31	[577]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	32	[577]	LOADK    	R13 K11 ; R13 := "%d"
	33	[577]	MOVE     	R14 R7 ; R14 := R7
	34	[577]	LOADK    	R15 K12 ; R15 := " %d"
	35	[577]	MOVE     	R16 R8 ; R16 := R8
	36	[577]	CONCAT   	R13 R13 R16 ; R13 := R13 .. R14 .. R15 .. R16
	37	[577]	MOVE     	R14 R1 ; R14 := R1
	38	[577]	MOVE     	R15 R2 ; R15 := R2
	39	[577]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	40	[577]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	41	[577]	RETURN   	R11 2 ; return R11 
	42	[577]	JMP      	298 ; PC := 298
	43	[578]	EQ       	0 R5 K7 ; if R5 ~= "CompactOne" then PC := 56
	44	[578]	JMP      	56 ; PC := 56
	45	[579]	MOVE     	R11 R6 ; R11 := R6
	46	[579]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	47	[579]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	48	[579]	LOADK    	R13 K11 ; R13 := "%d"
	49	[579]	MOVE     	R14 R7 ; R14 := R7
	50	[579]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	51	[579]	MOVE     	R14 R1 ; R14 := R1
	52	[579]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	53	[579]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	54	[579]	RETURN   	R11 2 ; return R11 
	55	[579]	JMP      	298 ; PC := 298
	56	[581]	MOVE     	R11 R6 ; R11 := R6
	57	[581]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	58	[581]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	59	[581]	LOADK    	R13 K11 ; R13 := "%d"
	60	[581]	MOVE     	R14 R7 ; R14 := R7
	61	[581]	LOADK    	R15 K12 ; R15 := " %d"
	62	[581]	MOVE     	R16 R8 ; R16 := R8
	63	[581]	LOADK    	R17 K12 ; R17 := " %d"
	64	[581]	MOVE     	R18 R9 ; R18 := R9
	65	[581]	LOADK    	R19 K12 ; R19 := " %d"
	66	[581]	MOVE     	R20 R10 ; R20 := R10
	67	[581]	CONCAT   	R13 R13 R20 ; R13 := R13 .. R14 .. R15 .. R16 .. R17 .. R18 .. R19 .. R20
	68	[581]	MOVE     	R14 R1 ; R14 := R1
	69	[581]	MOVE     	R15 R2 ; R15 := R2
	70	[581]	MOVE     	R16 R3 ; R16 := R3
	71	[581]	MOVE     	R17 R4 ; R17 := R4
	72	[581]	CALL     	R12 6 2 ; R12 := R12(R13,R14,R15,R16,R17)
	73	[581]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	74	[581]	RETURN   	R11 2 ; return R11 
	75	[582]	JMP      	298 ; PC := 298
	76	[583]	LT       	0 K8 R2 ; if 0.000000 >= R2 then PC := 124
	77	[583]	JMP      	124 ; PC := 124
	78	[584]	EQ       	0 R5 K6 ; if R5 ~= "CompactTwoMax" then PC := 94
	79	[584]	JMP      	94 ; PC := 94
	80	[585]	MOVE     	R11 R6 ; R11 := R6
	81	[585]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	82	[585]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	83	[585]	LOADK    	R13 K11 ; R13 := "%d"
	84	[585]	MOVE     	R14 R8 ; R14 := R8
	85	[585]	LOADK    	R15 K12 ; R15 := " %d"
	86	[585]	MOVE     	R16 R9 ; R16 := R9
	87	[585]	CONCAT   	R13 R13 R16 ; R13 := R13 .. R14 .. R15 .. R16
	88	[585]	MOVE     	R14 R2 ; R14 := R2
	89	[585]	MOVE     	R15 R3 ; R15 := R3
	90	[585]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	91	[585]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	92	[585]	RETURN   	R11 2 ; return R11 
	93	[585]	JMP      	298 ; PC := 298
	94	[586]	EQ       	0 R5 K7 ; if R5 ~= "CompactOne" then PC := 107
	95	[586]	JMP      	107 ; PC := 107
	96	[587]	MOVE     	R11 R6 ; R11 := R6
	97	[587]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	98	[587]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	99	[587]	LOADK    	R13 K11 ; R13 := "%d"
	100	[587]	MOVE     	R14 R8 ; R14 := R8
	101	[587]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	102	[587]	MOVE     	R14 R2 ; R14 := R2
	103	[587]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	104	[587]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	105	[587]	RETURN   	R11 2 ; return R11 
	106	[587]	JMP      	298 ; PC := 298
	107	[589]	MOVE     	R11 R6 ; R11 := R6
	108	[589]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	109	[589]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	110	[589]	LOADK    	R13 K11 ; R13 := "%d"
	111	[589]	MOVE     	R14 R8 ; R14 := R8
	112	[589]	LOADK    	R15 K12 ; R15 := " %d"
	113	[589]	MOVE     	R16 R9 ; R16 := R9
	114	[589]	LOADK    	R17 K12 ; R17 := " %d"
	115	[589]	MOVE     	R18 R10 ; R18 := R10
	116	[589]	CONCAT   	R13 R13 R18 ; R13 := R13 .. R14 .. R15 .. R16 .. R17 .. R18
	117	[589]	MOVE     	R14 R2 ; R14 := R2
	118	[589]	MOVE     	R15 R3 ; R15 := R3
	119	[589]	MOVE     	R16 R4 ; R16 := R4
	120	[589]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	121	[589]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	122	[589]	RETURN   	R11 2 ; return R11 
	123	[590]	JMP      	298 ; PC := 298
	124	[591]	LT       	0 K8 R3 ; if 0.000000 >= R3 then PC := 153
	125	[591]	JMP      	153 ; PC := 153
	126	[592]	EQ       	0 R5 K7 ; if R5 ~= "CompactOne" then PC := 139
	127	[592]	JMP      	139 ; PC := 139
	128	[593]	MOVE     	R11 R6 ; R11 := R6
	129	[593]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	130	[593]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	131	[593]	LOADK    	R13 K11 ; R13 := "%d"
	132	[593]	MOVE     	R14 R9 ; R14 := R9
	133	[593]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	134	[593]	MOVE     	R14 R3 ; R14 := R3
	135	[593]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	136	[593]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	137	[593]	RETURN   	R11 2 ; return R11 
	138	[593]	JMP      	298 ; PC := 298
	139	[595]	MOVE     	R11 R6 ; R11 := R6
	140	[595]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	141	[595]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	142	[595]	LOADK    	R13 K11 ; R13 := "%d"
	143	[595]	MOVE     	R14 R9 ; R14 := R9
	144	[595]	LOADK    	R15 K12 ; R15 := " %d"
	145	[595]	MOVE     	R16 R10 ; R16 := R10
	146	[595]	CONCAT   	R13 R13 R16 ; R13 := R13 .. R14 .. R15 .. R16
	147	[595]	MOVE     	R14 R3 ; R14 := R3
	148	[595]	MOVE     	R15 R4 ; R15 := R4
	149	[595]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	150	[595]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	151	[595]	RETURN   	R11 2 ; return R11 
	152	[596]	JMP      	298 ; PC := 298
	153	[598]	MOVE     	R11 R6 ; R11 := R6
	154	[598]	GETGLOBAL	R12 K9 ; R12 := 0x7f5022cf
	155	[598]	GETTABLE 	R12 R12 K10 ; R12 := R12[0xe8072ded]
	156	[598]	LOADK    	R13 K11 ; R13 := "%d"
	157	[598]	MOVE     	R14 R10 ; R14 := R10
	158	[598]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	159	[598]	MOVE     	R14 R4 ; R14 := R4
	160	[598]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	161	[598]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	162	[598]	RETURN   	R11 2 ; return R11 
	163	[599]	JMP      	298 ; PC := 298
	164	[600]	EQ       	0 R5 K13 ; if R5 ~= "HoursOrMinutes" then PC := 193
	165	[600]	JMP      	193 ; PC := 193
	166	[600]	EQ       	0 R1 K8 ; if R1 ~= 0.000000 then PC := 193
	167	[600]	JMP      	193 ; PC := 193
	168	[600]	EQ       	0 R2 K8 ; if R2 ~= 0.000000 then PC := 193
	169	[600]	JMP      	193 ; PC := 193
	170	[601]	GETUPVAL 	R11 U0 ; R11 := U0
	171	[601]	GETTABLE 	R11 R11 K14 ; R11 := R11[0x06d055f9]
	172	[601]	LT       	1 K15 R3 ; if 1.000000 < R3 then PC := 175
	173	[601]	JMP      	175 ; PC := 175
	174	[601]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 175
	175	[601]	OP_LOADBOOL	R12 1 0 ; R12 := true
	176	[601]	LOADK    	R13 K16 ; R13 := "/Lotus/Language/Menu/TimeFormat_Minutes"
	177	[601]	LOADK    	R14 K17 ; R14 := "/Lotus/Language/Menu/TimeFormat_Minute"
	178	[601]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	179	[602]	MOVE     	R12 R6 ; R12 := R6
	180	[602]	GETGLOBAL	R13 K0 ; R13 := 0x603636ad
	181	[602]	MOVE     	R14 R11 ; R14 := R11
	182	[602]	NEWTABLE 	R15 0 1 ; R15 := {}
	183	[602]	GETGLOBAL	R16 K9 ; R16 := 0x7f5022cf
	184	[602]	GETTABLE 	R16 R16 K10 ; R16 := R16[0xe8072ded]
	185	[602]	LOADK    	R17 K11 ; R17 := "%d"
	186	[602]	MOVE     	R18 R3 ; R18 := R3
	187	[602]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	188	[602]	SETTABLE 	R15 K18 R16 ; R15["TIME"] := R16
	189	[602]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	190	[602]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	191	[602]	RETURN   	R12 2 ; return R12 
	192	[602]	JMP      	298 ; PC := 298
	193	[603]	EQ       	0 R5 K19 ; if R5 ~= "CompactHours" then PC := 234
	194	[603]	JMP      	234 ; PC := 234
	195	[604]	MUL      	R12 R1 K20 ; R12 := R1 * 24.000000
	196	[604]	ADD      	R2 R12 R2 ; R2 := R12 + R2
	197	[605]	LT       	0 K8 R2 ; if 0.000000 >= R2 then PC := 210
	198	[605]	JMP      	210 ; PC := 210
	199	[606]	MOVE     	R12 R6 ; R12 := R6
	200	[606]	GETGLOBAL	R13 K9 ; R13 := 0x7f5022cf
	201	[606]	GETTABLE 	R13 R13 K10 ; R13 := R13[0xe8072ded]
	202	[606]	LOADK    	R14 K21 ; R14 := "%d "
	203	[606]	MOVE     	R15 R8 ; R15 := R8
	204	[606]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	205	[606]	MOVE     	R15 R2 ; R15 := R2
	206	[606]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	207	[606]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	208	[606]	RETURN   	R12 2 ; return R12 
	209	[606]	JMP      	298 ; PC := 298
	210	[607]	LT       	0 K8 R3 ; if 0.000000 >= R3 then PC := 223
	211	[607]	JMP      	223 ; PC := 223
	212	[608]	MOVE     	R12 R6 ; R12 := R6
	213	[608]	GETGLOBAL	R13 K9 ; R13 := 0x7f5022cf
	214	[608]	GETTABLE 	R13 R13 K10 ; R13 := R13[0xe8072ded]
	215	[608]	LOADK    	R14 K21 ; R14 := "%d "
	216	[608]	MOVE     	R15 R9 ; R15 := R9
	217	[608]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	218	[608]	MOVE     	R15 R3 ; R15 := R3
	219	[608]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	220	[608]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	221	[608]	RETURN   	R12 2 ; return R12 
	222	[608]	JMP      	298 ; PC := 298
	223	[610]	MOVE     	R12 R6 ; R12 := R6
	224	[610]	GETGLOBAL	R13 K9 ; R13 := 0x7f5022cf
	225	[610]	GETTABLE 	R13 R13 K10 ; R13 := R13[0xe8072ded]
	226	[610]	LOADK    	R14 K21 ; R14 := "%d "
	227	[610]	MOVE     	R15 R10 ; R15 := R10
	228	[610]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	229	[610]	MOVE     	R15 R4 ; R15 := R4
	230	[610]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	231	[610]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	232	[610]	RETURN   	R12 2 ; return R12 
	233	[611]	JMP      	298 ; PC := 298
	234	[613]	GETUPVAL 	R12 U0 ; R12 := U0
	235	[613]	GETTABLE 	R12 R12 K14 ; R12 := R12[0x06d055f9]
	236	[613]	LT       	1 K15 R2 ; if 1.000000 < R2 then PC := 241
	237	[613]	JMP      	241 ; PC := 241
	238	[613]	LT       	1 K8 R1 ; if 0.000000 < R1 then PC := 241
	239	[613]	JMP      	241 ; PC := 241
	240	[613]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 241
	241	[613]	OP_LOADBOOL	R13 1 0 ; R13 := true
	242	[613]	LOADK    	R14 K22 ; R14 := "/Lotus/Language/Menu/TimeFormat_Hours"
	243	[613]	LOADK    	R15 K23 ; R15 := "/Lotus/Language/Menu/TimeFormat_Hour"
	244	[613]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	245	[614]	MOVE     	R13 R6 ; R13 := R6
	246	[614]	GETGLOBAL	R14 K0 ; R14 := 0x603636ad
	247	[614]	MOVE     	R15 R12 ; R15 := R12
	248	[614]	NEWTABLE 	R16 0 1 ; R16 := {}
	249	[614]	GETGLOBAL	R17 K9 ; R17 := 0x7f5022cf
	250	[614]	GETTABLE 	R17 R17 K10 ; R17 := R17[0xe8072ded]
	251	[614]	LOADK    	R18 K11 ; R18 := "%d"
	252	[614]	MUL      	R19 R1 K20 ; R19 := R1 * 24.000000
	253	[614]	ADD      	R19 R19 R2 ; R19 := R19 + R2
	254	[614]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	255	[614]	SETTABLE 	R16 K18 R17 ; R16["TIME"] := R17
	256	[614]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	257	[614]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	258	[614]	RETURN   	R13 2 ; return R13 
	259	[615]	JMP      	298 ; PC := 298
	260	[616]	LT       	0 K8 R1 ; if 0.000000 >= R1 then PC := 282
	261	[616]	JMP      	282 ; PC := 282
	262	[617]	MOVE     	R13 R6 ; R13 := R6
	263	[617]	GETGLOBAL	R14 K9 ; R14 := 0x7f5022cf
	264	[617]	GETTABLE 	R14 R14 K10 ; R14 := R14[0xe8072ded]
	265	[617]	LOADK    	R15 K11 ; R15 := "%d"
	266	[617]	MOVE     	R16 R7 ; R16 := R7
	267	[617]	LOADK    	R17 K12 ; R17 := " %d"
	268	[617]	MOVE     	R18 R8 ; R18 := R8
	269	[617]	LOADK    	R19 K12 ; R19 := " %d"
	270	[617]	MOVE     	R20 R9 ; R20 := R9
	271	[617]	LOADK    	R21 K12 ; R21 := " %d"
	272	[617]	MOVE     	R22 R10 ; R22 := R10
	273	[617]	CONCAT   	R15 R15 R22 ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20 .. R21 .. R22
	274	[617]	MOVE     	R16 R1 ; R16 := R1
	275	[617]	MOVE     	R17 R2 ; R17 := R2
	276	[617]	MOVE     	R18 R3 ; R18 := R3
	277	[617]	MOVE     	R19 R4 ; R19 := R4
	278	[617]	CALL     	R14 6 2 ; R14 := R14(R15,R16,R17,R18,R19)
	279	[617]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	280	[617]	RETURN   	R13 2 ; return R13 
	281	[617]	JMP      	298 ; PC := 298
	282	[619]	MOVE     	R13 R6 ; R13 := R6
	283	[619]	GETGLOBAL	R14 K9 ; R14 := 0x7f5022cf
	284	[619]	GETTABLE 	R14 R14 K10 ; R14 := R14[0xe8072ded]
	285	[619]	LOADK    	R15 K11 ; R15 := "%d"
	286	[619]	MOVE     	R16 R8 ; R16 := R8
	287	[619]	LOADK    	R17 K12 ; R17 := " %d"
	288	[619]	MOVE     	R18 R9 ; R18 := R9
	289	[619]	LOADK    	R19 K12 ; R19 := " %d"
	290	[619]	MOVE     	R20 R10 ; R20 := R10
	291	[619]	CONCAT   	R15 R15 R20 ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20
	292	[619]	MOVE     	R16 R2 ; R16 := R2
	293	[619]	MOVE     	R17 R3 ; R17 := R3
	294	[619]	MOVE     	R18 R4 ; R18 := R4
	295	[619]	CALL     	R14 5 2 ; R14 := R14(R15,R16,R17,R18)
	296	[619]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	297	[619]	RETURN   	R13 2 ; return R13 
	298	[621]	RETURN   	R0 1 ; return 

function #8 <?:623,636> (27 instructions, 108 bytes at 00000160C67EB8B0)
1 param, 12 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[624]	LOADK    	R1 := 60.000000
	2	[625]	LOADK    	R2 := 3600.000000
	3	[626]	LOADK    	R3 := 86400.000000
	4	[628]	GETGLOBAL	R4 K0 ; R4 := 0x5bced4c4
	5	[628]	GETTABLE 	R4 R4 K1 ; R4 := R4[0x55f27c30]
	6	[628]	DIV      	R5 R0 R3 ; R5 := R0 / R3
	7	[628]	CALL     	R4 2 2 ; R4 := R4(R5)
	8	[629]	MUL      	R5 R4 R3 ; R5 := R4 * R3
	9	[629]	SUB      	R0 R0 R5 ; R0 := R0 - R5
	10	[630]	GETGLOBAL	R5 K0 ; R5 := 0x5bced4c4
	11	[630]	GETTABLE 	R5 R5 K1 ; R5 := R5[0x55f27c30]
	12	[630]	DIV      	R6 R0 R2 ; R6 := R0 / R2
	13	[630]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[631]	MUL      	R6 R5 R2 ; R6 := R5 * R2
	15	[631]	SUB      	R0 R0 R6 ; R0 := R0 - R6
	16	[632]	GETGLOBAL	R6 K0 ; R6 := 0x5bced4c4
	17	[632]	GETTABLE 	R6 R6 K1 ; R6 := R6[0x55f27c30]
	18	[632]	DIV      	R7 R0 R1 ; R7 := R0 / R1
	19	[632]	CALL     	R6 2 2 ; R6 := R6(R7)
	20	[633]	MUL      	R7 R6 R1 ; R7 := R6 * R1
	21	[633]	SUB      	R7 R0 R7 ; R7 := R0 - R7
	22	[635]	MOVE     	R8 R4 ; R8 := R4
	23	[635]	MOVE     	R9 R5 ; R9 := R5
	24	[635]	MOVE     	R10 R6 ; R10 := R6
	25	[635]	MOVE     	R11 R7 ; R11 := R7
	26	[635]	RETURN   	R8 5 ; return R8, R9, R10, R11 
	27	[636]	RETURN   	R0 1 ; return 

function #9 <?:638,640> (5 instructions, 20 bytes at 00000160C67EBA70)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[639]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[639]	MOVE     	R2 R0 ; R2 := R0
	3	[639]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[639]	RETURN   	R1 0 ; return R1,... 
	5	[640]	RETURN   	R0 1 ; return 

function #10 <?:642,651> (19 instructions, 76 bytes at 00000160C67EBB60)
3 params, 16 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[643]	LOADK    	R3 K0 ; R3 := ""
	2	[644]	LT       	0 R1 K1 ; if R1 >= 0.000000 then PC := 6
	3	[644]	JMP      	6 ; PC := 6
	4	[645]	UNM      	R1 R1 ; R1 := ^ R1
	5	[646]	LOADK    	R3 K2 ; R3 := "-"
	6	[649]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[649]	MOVE     	R5 R1 ; R5 := R1
	8	[649]	CALL     	R4 2 5 ; R4,R5,R6,R7 := R4(R5)
	9	[650]	GETUPVAL 	R8 U1 ; R8 := U1
	10	[650]	MOVE     	R9 R0 ; R9 := R0
	11	[650]	MOVE     	R10 R4 ; R10 := R4
	12	[650]	MOVE     	R11 R5 ; R11 := R5
	13	[650]	MOVE     	R12 R6 ; R12 := R6
	14	[650]	MOVE     	R13 R7 ; R13 := R7
	15	[650]	MOVE     	R14 R2 ; R14 := R2
	16	[650]	MOVE     	R15 R3 ; R15 := R3
	17	[650]	TAILCALL 	R8 8 0 ; R8,... := R8(R9,R10,R11,R12,R13,R14,R15)
	18	[650]	RETURN   	R8 0 ; return R8,... 
	19	[651]	RETURN   	R0 1 ; return 

function #11 <?:653,655> (7 instructions, 28 bytes at 00000160C67EBCF0)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[654]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[654]	MOVE     	R4 R0 ; R4 := R0
	3	[654]	MOVE     	R5 R1 ; R5 := R1
	4	[654]	MOVE     	R6 R2 ; R6 := R2
	5	[654]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	6	[654]	RETURN   	R3 2 ; return R3 
	7	[655]	RETURN   	R0 1 ; return 

function #12 <?:657,687> (103 instructions, 412 bytes at 00000160C67EBDE0)
3 params, 18 slots, 2 upvalues, 0 locals, 16 constants, 0 functions
	1	[658]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	2	[658]	LOADK    	R4 K1 ; R4 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
	3	[658]	OP_LOADBOOL	R5 0 0 ; R5 := false
	4	[658]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	5	[659]	GETGLOBAL	R4 K0 ; R4 := 0x603636ad
	6	[659]	LOADK    	R5 K2 ; R5 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
	7	[659]	OP_LOADBOOL	R6 0 0 ; R6 := false
	8	[659]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	9	[660]	GETGLOBAL	R5 K0 ; R5 := 0x603636ad
	10	[660]	LOADK    	R6 K3 ; R6 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
	11	[660]	OP_LOADBOOL	R7 0 0 ; R7 := false
	12	[660]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	13	[661]	GETGLOBAL	R6 K0 ; R6 := 0x603636ad
	14	[661]	LOADK    	R7 K4 ; R7 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
	15	[661]	OP_LOADBOOL	R8 0 0 ; R8 := false
	16	[661]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	17	[663]	LOADK    	R7 K5 ; R7 := ""
	18	[664]	LT       	0 R0 K6 ; if R0 >= 0.000000 then PC := 22
	19	[664]	JMP      	22 ; PC := 22
	20	[665]	UNM      	R0 R0 ; R0 := ^ R0
	21	[666]	LOADK    	R7 K7 ; R7 := "-"
	22	[669]	GETUPVAL 	R8 U0 ; R8 := U0
	23	[669]	MOVE     	R9 R0 ; R9 := R0
	24	[669]	CALL     	R8 2 5 ; R8,R9,R10,R11 := R8(R9)
	25	[670]	LOADK    	R12 K5 ; R12 := ""
	26	[671]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	27	[671]	GETTABLE 	R13 R13 K9 ; R13 := R13[0xe4a5b3ca]
	28	[671]	MOVE     	R14 R8 ; R14 := R8
	29	[671]	CALL     	R13 2 2 ; R13 := R13(R14)
	30	[671]	LT       	0 K6 R13 ; if 0.000000 >= R13 then PC := 43
	31	[671]	JMP      	43 ; PC := 43
	32	[672]	MOVE     	R13 R8 ; R13 := R8
	33	[672]	MOVE     	R14 R3 ; R14 := R3
	34	[672]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	35	[673]	EQ       	1 R1 K10 ; if R1 == false then PC := 99
	36	[673]	JMP      	99 ; PC := 99
	37	[674]	MOVE     	R13 R12 ; R13 := R12
	38	[674]	LOADK    	R14 K11 ; R14 := " "
	39	[674]	MOVE     	R15 R9 ; R15 := R9
	40	[674]	MOVE     	R16 R4 ; R16 := R4
	41	[674]	CONCAT   	R12 R13 R16 ; R12 := R13 .. R14 .. R15 .. R16
	42	[675]	JMP      	99 ; PC := 99
	43	[676]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	44	[676]	GETTABLE 	R13 R13 K9 ; R13 := R13[0xe4a5b3ca]
	45	[676]	MOVE     	R14 R9 ; R14 := R9
	46	[676]	CALL     	R13 2 2 ; R13 := R13(R14)
	47	[676]	LT       	0 K6 R13 ; if 0.000000 >= R13 then PC := 70
	48	[676]	JMP      	70 ; PC := 70
	49	[677]	MOVE     	R13 R9 ; R13 := R9
	50	[677]	MOVE     	R14 R4 ; R14 := R4
	51	[677]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	52	[678]	TEST     	R2 0 ; if not R2 then PC := 99
	53	[678]	JMP      	99 ; PC := 99
	54	[678]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	55	[678]	GETTABLE 	R13 R13 K9 ; R13 := R13[0xe4a5b3ca]
	56	[678]	MOVE     	R14 R10 ; R14 := R10
	57	[678]	CALL     	R13 2 2 ; R13 := R13(R14)
	58	[678]	LT       	0 K6 R13 ; if 0.000000 >= R13 then PC := 99
	59	[678]	JMP      	99 ; PC := 99
	60	[679]	MOVE     	R13 R12 ; R13 := R12
	61	[679]	LOADK    	R14 K11 ; R14 := " "
	62	[679]	GETGLOBAL	R15 K8 ; R15 := 0x5bced4c4
	63	[679]	GETTABLE 	R15 R15 K12 ; R15 := R15[0xac1b386a]
	64	[679]	ADD      	R16 R10 K13 ; R16 := R10 + 1.000000
	65	[679]	LOADK    	R17 := 59.000000
	66	[679]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	67	[679]	MOVE     	R16 R5 ; R16 := R5
	68	[679]	CONCAT   	R12 R13 R16 ; R12 := R13 .. R14 .. R15 .. R16
	69	[680]	JMP      	99 ; PC := 99
	70	[681]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	71	[681]	GETTABLE 	R13 R13 K9 ; R13 := R13[0xe4a5b3ca]
	72	[681]	MOVE     	R14 R10 ; R14 := R10
	73	[681]	CALL     	R13 2 2 ; R13 := R13(R14)
	74	[681]	LT       	0 K6 R13 ; if 0.000000 >= R13 then PC := 93
	75	[681]	JMP      	93 ; PC := 93
	76	[682]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	77	[682]	GETTABLE 	R13 R13 K12 ; R13 := R13[0xac1b386a]
	78	[682]	GETUPVAL 	R14 U1 ; R14 := U1
	79	[682]	GETTABLE 	R14 R14 K14 ; R14 := R14[0x06d055f9]
	80	[682]	EQ       	1 R11 K6 ; if R11 == 0.000000 then PC := 83
	81	[682]	JMP      	83 ; PC := 83
	82	[682]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 83
	83	[682]	OP_LOADBOOL	R15 1 0 ; R15 := true
	84	[682]	LOADK    	R16 := 0.000000
	85	[682]	LOADK    	R17 := 1.000000
	86	[682]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	87	[682]	ADD      	R14 R10 R14 ; R14 := R10 + R14
	88	[682]	LOADK    	R15 := 59.000000
	89	[682]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	90	[682]	MOVE     	R14 R5 ; R14 := R5
	91	[682]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	92	[682]	JMP      	99 ; PC := 99
	93	[684]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	94	[684]	GETTABLE 	R13 R13 K15 ; R13 := R13[0x99675e23]
	95	[684]	MOVE     	R14 R0 ; R14 := R0
	96	[684]	CALL     	R13 2 2 ; R13 := R13(R14)
	97	[684]	MOVE     	R14 R6 ; R14 := R6
	98	[684]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	99	[686]	MOVE     	R13 R7 ; R13 := R7
	100	[686]	MOVE     	R14 R12 ; R14 := R12
	101	[686]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	102	[686]	RETURN   	R13 2 ; return R13 
	103	[687]	RETURN   	R0 1 ; return 

function #13 <?:689,711> (74 instructions, 296 bytes at 00000160C67EC2E0)
1 param, 19 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[690]	GETGLOBAL	R1 K0 ; R1 := 0x603636ad
	2	[690]	LOADK    	R2 K1 ; R2 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
	3	[690]	OP_LOADBOOL	R3 0 0 ; R3 := false
	4	[690]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[691]	GETGLOBAL	R2 K0 ; R2 := 0x603636ad
	6	[691]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
	7	[691]	OP_LOADBOOL	R4 0 0 ; R4 := false
	8	[691]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	9	[692]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	10	[692]	LOADK    	R4 K3 ; R4 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
	11	[692]	OP_LOADBOOL	R5 0 0 ; R5 := false
	12	[692]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	13	[693]	GETGLOBAL	R4 K0 ; R4 := 0x603636ad
	14	[693]	LOADK    	R5 K4 ; R5 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
	15	[693]	OP_LOADBOOL	R6 0 0 ; R6 := false
	16	[693]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	17	[695]	LOADK    	R5 K5 ; R5 := ""
	18	[696]	LT       	0 R0 K6 ; if R0 >= 0.000000 then PC := 22
	19	[696]	JMP      	22 ; PC := 22
	20	[697]	UNM      	R0 R0 ; R0 := ^ R0
	21	[698]	LOADK    	R5 K7 ; R5 := "-"
	22	[701]	GETUPVAL 	R6 U0 ; R6 := U0
	23	[701]	MOVE     	R7 R0 ; R7 := R0
	24	[701]	CALL     	R6 2 5 ; R6,R7,R8,R9 := R6(R7)
	25	[702]	LOADK    	R10 K5 ; R10 := ""
	26	[703]	GETGLOBAL	R11 K8 ; R11 := 0x5bced4c4
	27	[703]	GETTABLE 	R11 R11 K9 ; R11 := R11[0xe4a5b3ca]
	28	[703]	MOVE     	R12 R6 ; R12 := R6
	29	[703]	CALL     	R11 2 2 ; R11 := R11(R12)
	30	[703]	LT       	0 K6 R11 ; if 0.000000 >= R11 then PC := 36
	31	[703]	JMP      	36 ; PC := 36
	32	[704]	MOVE     	R11 R6 ; R11 := R6
	33	[704]	MOVE     	R12 R1 ; R12 := R1
	34	[704]	CONCAT   	R10 R11 R12 ; R10 := R11 .. R12
	35	[704]	JMP      	70 ; PC := 70
	36	[705]	GETGLOBAL	R11 K8 ; R11 := 0x5bced4c4
	37	[705]	GETTABLE 	R11 R11 K9 ; R11 := R11[0xe4a5b3ca]
	38	[705]	MOVE     	R12 R7 ; R12 := R7
	39	[705]	CALL     	R11 2 2 ; R11 := R11(R12)
	40	[705]	LT       	0 K6 R11 ; if 0.000000 >= R11 then PC := 55
	41	[705]	JMP      	55 ; PC := 55
	42	[706]	MOVE     	R11 R7 ; R11 := R7
	43	[706]	MOVE     	R12 R2 ; R12 := R2
	44	[706]	LOADK    	R13 K10 ; R13 := " "
	45	[706]	MOVE     	R14 R8 ; R14 := R8
	46	[706]	MOVE     	R15 R3 ; R15 := R3
	47	[706]	LOADK    	R16 K10 ; R16 := " "
	48	[706]	GETGLOBAL	R17 K8 ; R17 := 0x5bced4c4
	49	[706]	GETTABLE 	R17 R17 K11 ; R17 := R17[0x55f27c30]
	50	[706]	ADD      	R18 R9 K12 ; R18 := R9 + 0.500000
	51	[706]	CALL     	R17 2 2 ; R17 := R17(R18)
	52	[706]	MOVE     	R18 R4 ; R18 := R4
	53	[706]	CONCAT   	R10 R11 R18 ; R10 := R11 .. R12 .. R13 .. R14 .. R15 .. R16 .. R17 .. R18
	54	[706]	JMP      	70 ; PC := 70
	55	[707]	GETGLOBAL	R11 K8 ; R11 := 0x5bced4c4
	56	[707]	GETTABLE 	R11 R11 K9 ; R11 := R11[0xe4a5b3ca]
	57	[707]	MOVE     	R12 R8 ; R12 := R8
	58	[707]	CALL     	R11 2 2 ; R11 := R11(R12)
	59	[707]	LE       	0 K6 R11 ; if 0.000000 > R11 then PC := 70
	60	[707]	JMP      	70 ; PC := 70
	61	[708]	MOVE     	R11 R8 ; R11 := R8
	62	[708]	MOVE     	R12 R3 ; R12 := R3
	63	[708]	LOADK    	R13 K10 ; R13 := " "
	64	[708]	GETGLOBAL	R14 K8 ; R14 := 0x5bced4c4
	65	[708]	GETTABLE 	R14 R14 K11 ; R14 := R14[0x55f27c30]
	66	[708]	ADD      	R15 R9 K12 ; R15 := R9 + 0.500000
	67	[708]	CALL     	R14 2 2 ; R14 := R14(R15)
	68	[708]	MOVE     	R15 R4 ; R15 := R4
	69	[708]	CONCAT   	R10 R11 R15 ; R10 := R11 .. R12 .. R13 .. R14 .. R15
	70	[710]	MOVE     	R11 R5 ; R11 := R5
	71	[710]	MOVE     	R12 R10 ; R12 := R10
	72	[710]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	73	[710]	RETURN   	R11 2 ; return R11 
	74	[711]	RETURN   	R0 1 ; return 

function #14 <?:713,715> (5 instructions, 20 bytes at 00000160C67EC6D0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[714]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[714]	MOVE     	R2 R0 ; R2 := R0
	3	[714]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[714]	RETURN   	R1 0 ; return R1,... 
	5	[715]	RETURN   	R0 1 ; return 

function #15 <?:717,745> (72 instructions, 288 bytes at 00000160C67EC7C0)
2 params, 16 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[718]	GETGLOBAL	R2 K0 ; R2 := 0x603636ad
	2	[718]	LOADK    	R3 K1 ; R3 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
	3	[718]	OP_LOADBOOL	R4 0 0 ; R4 := false
	4	[718]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	5	[719]	GETGLOBAL	R3 K0 ; R3 := 0x603636ad
	6	[719]	LOADK    	R4 K2 ; R4 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
	7	[719]	OP_LOADBOOL	R5 0 0 ; R5 := false
	8	[719]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	9	[720]	GETGLOBAL	R4 K0 ; R4 := 0x603636ad
	10	[720]	LOADK    	R5 K3 ; R5 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
	11	[720]	OP_LOADBOOL	R6 0 0 ; R6 := false
	12	[720]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	13	[721]	GETGLOBAL	R5 K0 ; R5 := 0x603636ad
	14	[721]	LOADK    	R6 K4 ; R6 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
	15	[721]	OP_LOADBOOL	R7 0 0 ; R7 := false
	16	[721]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	17	[723]	LOADK    	R6 K5 ; R6 := ""
	18	[724]	LT       	0 R0 K6 ; if R0 >= 0.000000 then PC := 22
	19	[724]	JMP      	22 ; PC := 22
	20	[725]	UNM      	R0 R0 ; R0 := ^ R0
	21	[726]	LOADK    	R6 K7 ; R6 := "-"
	22	[729]	GETUPVAL 	R7 U0 ; R7 := U0
	23	[729]	MOVE     	R8 R0 ; R8 := R0
	24	[729]	CALL     	R7 2 5 ; R7,R8,R9,R10 := R7(R8)
	25	[730]	LOADK    	R11 K5 ; R11 := ""
	26	[731]	GETGLOBAL	R12 K8 ; R12 := 0x5bced4c4
	27	[731]	GETTABLE 	R12 R12 K9 ; R12 := R12[0xe4a5b3ca]
	28	[731]	MOVE     	R13 R7 ; R13 := R7
	29	[731]	CALL     	R12 2 2 ; R12 := R12(R13)
	30	[731]	LT       	0 K6 R12 ; if 0.000000 >= R12 then PC := 36
	31	[731]	JMP      	36 ; PC := 36
	32	[732]	MOVE     	R12 R7 ; R12 := R7
	33	[732]	MOVE     	R13 R2 ; R13 := R2
	34	[732]	LOADK    	R14 K10 ; R14 := " "
	35	[732]	CONCAT   	R11 R12 R14 ; R11 := R12 .. R13 .. R14
	36	[734]	GETGLOBAL	R12 K8 ; R12 := 0x5bced4c4
	37	[734]	GETTABLE 	R12 R12 K9 ; R12 := R12[0xe4a5b3ca]
	38	[734]	MOVE     	R13 R8 ; R13 := R8
	39	[734]	CALL     	R12 2 2 ; R12 := R12(R13)
	40	[734]	LT       	0 K6 R12 ; if 0.000000 >= R12 then PC := 47
	41	[734]	JMP      	47 ; PC := 47
	42	[735]	MOVE     	R12 R11 ; R12 := R11
	43	[735]	MOVE     	R13 R8 ; R13 := R8
	44	[735]	MOVE     	R14 R3 ; R14 := R3
	45	[735]	LOADK    	R15 K10 ; R15 := " "
	46	[735]	CONCAT   	R11 R12 R15 ; R11 := R12 .. R13 .. R14 .. R15
	47	[737]	GETGLOBAL	R12 K8 ; R12 := 0x5bced4c4
	48	[737]	GETTABLE 	R12 R12 K9 ; R12 := R12[0xe4a5b3ca]
	49	[737]	MOVE     	R13 R9 ; R13 := R9
	50	[737]	CALL     	R12 2 2 ; R12 := R12(R13)
	51	[737]	LE       	0 K6 R12 ; if 0.000000 > R12 then PC := 58
	52	[737]	JMP      	58 ; PC := 58
	53	[738]	MOVE     	R12 R11 ; R12 := R11
	54	[738]	MOVE     	R13 R9 ; R13 := R9
	55	[738]	MOVE     	R14 R4 ; R14 := R4
	56	[738]	LOADK    	R15 K10 ; R15 := " "
	57	[738]	CONCAT   	R11 R12 R15 ; R11 := R12 .. R13 .. R14 .. R15
	58	[740]	MOVE     	R12 R11 ; R12 := R11
	59	[740]	GETGLOBAL	R13 K8 ; R13 := 0x5bced4c4
	60	[740]	GETTABLE 	R13 R13 K11 ; R13 := R13[0x55f27c30]
	61	[740]	ADD      	R14 R10 K12 ; R14 := R10 + 0.500000
	62	[740]	CALL     	R13 2 2 ; R13 := R13(R14)
	63	[740]	MOVE     	R14 R5 ; R14 := R5
	64	[740]	CONCAT   	R11 R12 R14 ; R11 := R12 .. R13 .. R14
	65	[741]	LT       	0 R7 K6 ; if R7 >= 0.000000 then PC := 68
	66	[741]	JMP      	68 ; PC := 68
	67	[742]	LOADK    	R11 K13 ; R11 := "-1"
	68	[744]	MOVE     	R12 R6 ; R12 := R6
	69	[744]	MOVE     	R13 R11 ; R13 := R11
	70	[744]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	71	[744]	RETURN   	R12 2 ; return R12 
	72	[745]	RETURN   	R0 1 ; return 

function #16 <?:747,749> (5 instructions, 20 bytes at 00000160C67ECBD0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[748]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[748]	MOVE     	R2 R0 ; R2 := R0
	3	[748]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[748]	RETURN   	R1 0 ; return R1,... 
	5	[749]	RETURN   	R0 1 ; return 

function #17 <?:751,767> (35 instructions, 140 bytes at 00000160C67ECCC0)
3 params, 7 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[752]	MOVE     	R3 R1 ; R3 := R1
	2	[753]	SELF     	R4 R0 K0 ; R5 := R0; R4 := R0[0xeeba5cd2]
	3	[753]	MOVE     	R6 R1 ; R6 := R1
	4	[753]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	5	[753]	TEST     	R4 1 ; if R4 then PC := 10
	6	[753]	JMP      	10 ; PC := 10
	7	[754]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0xbb610e5b]
	8	[754]	CALL     	R4 2 2 ; R4 := R4(R5)
	9	[754]	MOVE     	R3 R4 ; R3 := R4
	10	[758]	TEST     	R2 1 ; if R2 then PC := 34
	11	[758]	JMP      	34 ; PC := 34
	12	[758]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	13	[758]	MOVE     	R5 R3 ; R5 := R3
	14	[758]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[758]	TEST     	R4 1 ; if R4 then PC := 34
	16	[758]	JMP      	34 ; PC := 34
	17	[758]	SELF     	R4 R3 K3 ; R5 := R3; R4 := R3[0xf2deaf69]
	18	[758]	GETUPVAL 	R6 U0 ; R6 := U0
	19	[758]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	20	[758]	TEST     	R4 0 ; if not R4 then PC := 34
	21	[758]	JMP      	34 ; PC := 34
	22	[759]	SELF     	R4 R0 K4 ; R5 := R0; R4 := R0[0xa534c3ac]
	23	[759]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[761]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	25	[761]	MOVE     	R6 R4 ; R6 := R4
	26	[761]	CALL     	R5 2 2 ; R5 := R5(R6)
	27	[761]	TEST     	R5 1 ; if R5 then PC := 34
	28	[761]	JMP      	34 ; PC := 34
	29	[761]	SELF     	R5 R4 K5 ; R6 := R4; R5 := R4[0x73901acf]
	30	[761]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[761]	TEST     	R5 0 ; if not R5 then PC := 34
	32	[761]	JMP      	34 ; PC := 34
	33	[762]	RETURN   	R4 2 ; return R4 
	34	[766]	RETURN   	R3 2 ; return R3 
	35	[767]	RETURN   	R0 1 ; return 

function #18 <?:769,784> (34 instructions, 136 bytes at 00000160C67ECF00)
0 params, 4 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[770]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[770]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	3	[770]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[770]	TEST     	R0 1 ; if R0 then PC := 11
	5	[770]	JMP      	11 ; PC := 11
	6	[770]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[770]	GETGLOBAL	R1 K2 ; R1 := 0x83f4e77c
	8	[770]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[770]	TEST     	R0 0 ; if not R0 then PC := 13
	10	[770]	JMP      	13 ; PC := 13
	11	[771]	LOADNIL  	R0 R0 ; R0 := nil
	12	[771]	RETURN   	R0 2 ; return R0 
	13	[774]	GETGLOBAL	R0 K1 ; R0 := 0x89326c93
	14	[774]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xfb64e76c]
	15	[774]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[775]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	17	[775]	MOVE     	R2 R0 ; R2 := R0
	18	[775]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[775]	TEST     	R1 0 ; if not R1 then PC := 23
	20	[775]	JMP      	23 ; PC := 23
	21	[776]	LOADNIL  	R1 R1 ; R1 := nil
	22	[776]	RETURN   	R1 2 ; return R1 
	23	[779]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xa534c3ac]
	24	[779]	CALL     	R1 2 2 ; R1 := R1(R2)
	25	[780]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	26	[780]	MOVE     	R3 R1 ; R3 := R1
	27	[780]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[780]	TEST     	R2 0 ; if not R2 then PC := 33
	29	[780]	JMP      	33 ; PC := 33
	30	[781]	SELF     	R2 R0 K5 ; R3 := R0; R2 := R0[0xbb610e5b]
	31	[781]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[781]	MOVE     	R1 R2 ; R1 := R2
	33	[783]	RETURN   	R1 2 ; return R1 
	34	[784]	RETURN   	R0 1 ; return 

function #19 <?:786,788> (4 instructions, 16 bytes at 00000160C67ED140)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[787]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[787]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[787]	RETURN   	R0 0 ; return R0,... 
	4	[788]	RETURN   	R0 1 ; return 

function #20 <?:790,798> (15 instructions, 60 bytes at 00000160C67ED210)
0 params, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[791]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[791]	CALL     	R0 1 2 ; R0 := R0()
	3	[792]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	4	[792]	MOVE     	R2 R0 ; R2 := R0
	5	[792]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[792]	TEST     	R1 1 ; if R1 then PC := 13
	7	[792]	JMP      	13 ; PC := 13
	8	[793]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xde321e6f]
	9	[793]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[793]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x2676deee]
	11	[793]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[794]	RETURN   	R1 2 ; return R1 
	13	[797]	LOADNIL  	R2 R2 ; R2 := nil
	14	[797]	RETURN   	R2 2 ; return R2 
	15	[798]	RETURN   	R0 1 ; return 

function #21 <?:800,802> (4 instructions, 16 bytes at 00000160C67ED380)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[801]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[801]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[801]	RETURN   	R0 0 ; return R0,... 
	4	[802]	RETURN   	R0 1 ; return 

function #22 <?:804,816> (25 instructions, 100 bytes at 00000160C67ED450)
0 params, 5 slots, 3 upvalues, 0 locals, 8 constants, 0 functions
	1	[805]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[806]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[808]	GETGLOBAL	R2 K0 ; R2 := _T
	4	[808]	GETTABLE 	R2 R2 K1 ; R2 := R2["ToolTipUpdateColors"]
	5	[808]	EQ       	1 R2 K2 ; if R2 == nil then PC := 16
	6	[808]	JMP      	16 ; PC := 16
	7	[809]	GETGLOBAL	R2 K0 ; R2 := _T
	8	[809]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xcb478cb8]
	9	[809]	CALL     	R2 1 1 ; R2()
	10	[811]	GETGLOBAL	R2 K0 ; R2 := _T
	11	[811]	GETTABLE 	R2 R2 K4 ; R2 := R2["ToolTipColors"]
	12	[811]	GETTABLE 	R0 R2 K5 ; R0 := R2["Title"]
	13	[812]	GETGLOBAL	R2 K0 ; R2 := _T
	14	[812]	GETTABLE 	R2 R2 K4 ; R2 := R2["ToolTipColors"]
	15	[812]	GETTABLE 	R1 R2 K6 ; R1 := R2["Content"]
	16	[815]	GETUPVAL 	R2 U2 ; R2 := U2
	17	[815]	GETTABLE 	R2 R2 K7 ; R2 := R2[0x9f57dd7d]
	18	[815]	MOVE     	R3 R0 ; R3 := R0
	19	[815]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[815]	GETUPVAL 	R3 U2 ; R3 := U2
	21	[815]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x9f57dd7d]
	22	[815]	MOVE     	R4 R1 ; R4 := R1
	23	[815]	CALL     	R3 2 0 ; R3,... := R3(R4)
	24	[815]	RETURN   	R2 0 ; return R2,... 
	25	[816]	RETURN   	R0 1 ; return 

function #23 <?:819,883> (140 instructions, 560 bytes at 00000160C67ED6F0)
7 params, 23 slots, 2 upvalues, 0 locals, 24 constants, 0 functions
	1	[820]	LOADK    	R7 K0 ; R7 := ""
	2	[821]	OP_LOADBOOL	R8 1 0 ; R8 := true
	3	[823]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	4	[823]	MOVE     	R10 R4 ; R10 := R4
	5	[823]	CALL     	R9 2 2 ; R9 := R9(R10)
	6	[823]	TEST     	R9 0 ; if not R9 then PC := 10
	7	[823]	JMP      	10 ; PC := 10
	8	[824]	NEWTABLE 	R9 0 0 ; R9 := {}
	9	[824]	MOVE     	R4 R9 ; R4 := R9
	10	[827]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	11	[827]	GETTABLE 	R10 R4 K2 ; R10 := R4["endLineTag"]
	12	[827]	CALL     	R9 2 2 ; R9 := R9(R10)
	13	[827]	TEST     	R9 1 ; if R9 then PC := 16
	14	[827]	JMP      	16 ; PC := 16
	15	[828]	GETTABLE 	R7 R4 K2 ; R7 := R4["endLineTag"]
	16	[830]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	17	[830]	GETTABLE 	R10 R4 K3 ; R10 := R4["includeParagraphTag"]
	18	[830]	CALL     	R9 2 2 ; R9 := R9(R10)
	19	[830]	TEST     	R9 1 ; if R9 then PC := 22
	20	[830]	JMP      	22 ; PC := 22
	21	[831]	GETTABLE 	R8 R4 K3 ; R8 := R4["includeParagraphTag"]
	22	[834]	GETUPVAL 	R9 U0 ; R9 := U0
	23	[834]	CALL     	R9 1 3 ; R9,R10 := R9()
	24	[835]	EQ       	0 R5 K4 ; if R5 ~= nil then PC := 27
	25	[835]	JMP      	27 ; PC := 27
	26	[836]	MOVE     	R5 R9 ; R5 := R9
	27	[838]	EQ       	0 R6 K4 ; if R6 ~= nil then PC := 30
	28	[838]	JMP      	30 ; PC := 30
	29	[839]	MOVE     	R6 R10 ; R6 := R10
	30	[842]	EQ       	1 R2 K4 ; if R2 == nil then PC := 36
	31	[842]	JMP      	36 ; PC := 36
	32	[843]	GETUPVAL 	R11 U1 ; R11 := U1
	33	[843]	GETTABLE 	R12 R2 K5 ; R12 := R2["rarity"]
	34	[843]	ADD      	R12 R12 K6 ; R12 := R12 + 1.000000
	35	[843]	GETTABLE 	R5 R11 R12 ; R5 := R11[R12]
	36	[846]	LOADK    	R11 K7 ; R11 := "<br>"
	37	[847]	LOADK    	R12 K0 ; R12 := ""
	38	[848]	TEST     	R8 0 ; if not R8 then PC := 43
	39	[848]	JMP      	43 ; PC := 43
	40	[849]	MOVE     	R13 R12 ; R13 := R12
	41	[849]	LOADK    	R14 K8 ; R14 := "<p>"
	42	[849]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	43	[851]	MOVE     	R13 R12 ; R13 := R12
	44	[851]	LOADK    	R14 K9 ; R14 := "<font color=\""
	45	[851]	MOVE     	R15 R5 ; R15 := R5
	46	[851]	LOADK    	R16 K10 ; R16 := "\">"
	47	[851]	CONCAT   	R12 R13 R16 ; R12 := R13 .. R14 .. R15 .. R16
	48	[852]	EQ       	1 R2 K4 ; if R2 == nil then PC := 54
	49	[852]	JMP      	54 ; PC := 54
	50	[853]	MOVE     	R13 R12 ; R13 := R12
	51	[853]	GETTABLE 	R14 R2 K11 ; R14 := R2["localizedTitle"]
	52	[853]	CONCAT   	R12 R13 R14 ; R12 := R13 .. R14
	53	[853]	JMP      	77 ; PC := 77
	54	[854]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	55	[854]	MOVE     	R14 R1 ; R14 := R1
	56	[854]	CALL     	R13 2 2 ; R13 := R13(R14)
	57	[854]	TEST     	R13 1 ; if R13 then PC := 77
	58	[854]	JMP      	77 ; PC := 77
	59	[855]	GETGLOBAL	R13 K12 ; R13 := 0x603636ad
	60	[855]	GETGLOBAL	R14 K13 ; R14 := 0x64fb1586
	61	[855]	SELF     	R15 R1 K14 ; R16 := R1; R15 := R1[0xd3a9d01f]
	62	[855]	CALL     	R15 2 0 ; R15,... := R15(R16)
	63	[855]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	64	[855]	OP_LOADBOOL	R15 0 0 ; R15 := false
	65	[855]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	66	[856]	GETTABLE 	R14 R4 K15 ; R14 := R4["Upper"]
	67	[856]	TEST     	R14 0 ; if not R14 then PC := 74
	68	[856]	JMP      	74 ; PC := 74
	69	[857]	GETGLOBAL	R14 K16 ; R14 := 0x7f5022cf
	70	[857]	GETTABLE 	R14 R14 K17 ; R14 := R14[0x3f3e4d12]
	71	[857]	MOVE     	R15 R13 ; R15 := R13
	72	[857]	CALL     	R14 2 2 ; R14 := R14(R15)
	73	[857]	MOVE     	R13 R14 ; R13 := R14
	74	[859]	MOVE     	R14 R12 ; R14 := R12
	75	[859]	MOVE     	R15 R13 ; R15 := R13
	76	[859]	CONCAT   	R12 R14 R15 ; R12 := R14 .. R15
	77	[861]	MOVE     	R14 R12 ; R14 := R12
	78	[861]	MOVE     	R15 R11 ; R15 := R11
	79	[861]	LOADK    	R16 K18 ; R16 := "</font>"
	80	[861]	CONCAT   	R12 R14 R16 ; R12 := R14 .. R15 .. R16
	81	[863]	MOVE     	R14 R12 ; R14 := R12
	82	[863]	LOADK    	R15 K9 ; R15 := "<font color=\""
	83	[863]	MOVE     	R16 R6 ; R16 := R6
	84	[863]	LOADK    	R17 K10 ; R17 := "\">"
	85	[863]	CONCAT   	R12 R14 R17 ; R12 := R14 .. R15 .. R16 .. R17
	86	[864]	EQ       	1 R2 K4 ; if R2 == nil then PC := 117
	87	[864]	JMP      	117 ; PC := 117
	88	[865]	MOVE     	R14 R12 ; R14 := R12
	89	[865]	GETTABLE 	R15 R2 K19 ; R15 := R2["localizedDescription"]
	90	[865]	CONCAT   	R12 R14 R15 ; R12 := R14 .. R15
	91	[866]	GETTABLE 	R14 R2 K20 ; R14 := R2["affixes"]
	92	[866]	EQ       	1 R14 K4 ; if R14 == nil then PC := 131
	93	[866]	JMP      	131 ; PC := 131
	94	[867]	LOADK    	R14 := 1.000000
	95	[867]	GETTABLE 	R15 R2 K20 ; R15 := R2["affixes"]
	96	[867]	LEN      	R15 R15 ; R15 := # R15
	97	[867]	LOADK    	R16 := 1.000000
	98	[867]	FORPREP  	R14 115 ; R14 -= R16; PC := 115
	99	[868]	MOVE     	R18 R12 ; R18 := R12
	100	[868]	MOVE     	R19 R11 ; R19 := R11
	101	[868]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	102	[869]	MOVE     	R18 R12 ; R18 := R12
	103	[869]	LOADK    	R19 K21 ; R19 := "<font color=\"#FFFFFF\">"
	104	[869]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	105	[870]	MOVE     	R18 R12 ; R18 := R12
	106	[870]	GETTABLE 	R19 R2 K20 ; R19 := R2["affixes"]
	107	[870]	GETTABLE 	R19 R19 R17 ; R19 := R19[R17]
	108	[870]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	109	[871]	MOVE     	R18 R12 ; R18 := R12
	110	[871]	LOADK    	R19 K18 ; R19 := "</font>"
	111	[871]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	112	[872]	MOVE     	R18 R12 ; R18 := R12
	113	[872]	MOVE     	R19 R7 ; R19 := R7
	114	[872]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	115	[867]	FORLOOP  	R14 99 ; R14 += R16; if R14 <= R15 then begin PC := 99; R17 := R14 end
	116	[874]	JMP      	131 ; PC := 131
	117	[875]	GETGLOBAL	R18 K1 ; R18 := 0x7b998233
	118	[875]	MOVE     	R19 R1 ; R19 := R1
	119	[875]	CALL     	R18 2 2 ; R18 := R18(R19)
	120	[875]	TEST     	R18 1 ; if R18 then PC := 131
	121	[875]	JMP      	131 ; PC := 131
	122	[876]	MOVE     	R18 R12 ; R18 := R12
	123	[876]	GETGLOBAL	R19 K12 ; R19 := 0x603636ad
	124	[876]	GETGLOBAL	R20 K13 ; R20 := 0x64fb1586
	125	[876]	SELF     	R21 R1 K22 ; R22 := R1; R21 := R1[0x5ba460ac]
	126	[876]	CALL     	R21 2 0 ; R21,... := R21(R22)
	127	[876]	CALL     	R20 0 2 ; R20 := R20(R21,...)
	128	[876]	OP_LOADBOOL	R21 0 0 ; R21 := false
	129	[876]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	130	[876]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	131	[878]	MOVE     	R18 R12 ; R18 := R12
	132	[878]	LOADK    	R19 K18 ; R19 := "</font>"
	133	[878]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	134	[879]	TEST     	R8 0 ; if not R8 then PC := 139
	135	[879]	JMP      	139 ; PC := 139
	136	[880]	MOVE     	R18 R12 ; R18 := R12
	137	[880]	LOADK    	R19 K23 ; R19 := "</p>"
	138	[880]	CONCAT   	R12 R18 R19 ; R12 := R18 .. R19
	139	[882]	RETURN   	R12 2 ; return R12 
	140	[883]	RETURN   	R0 1 ; return 

function #24 <?:885,887> (11 instructions, 44 bytes at 00000160C67EDF60)
7 params, 15 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[886]	GETUPVAL 	R7 U0 ; R7 := U0
	2	[886]	MOVE     	R8 R0 ; R8 := R0
	3	[886]	MOVE     	R9 R1 ; R9 := R1
	4	[886]	MOVE     	R10 R2 ; R10 := R2
	5	[886]	MOVE     	R11 R3 ; R11 := R3
	6	[886]	MOVE     	R12 R4 ; R12 := R4
	7	[886]	MOVE     	R13 R5 ; R13 := R5
	8	[886]	MOVE     	R14 R6 ; R14 := R6
	9	[886]	TAILCALL 	R7 8 0 ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
	10	[886]	RETURN   	R7 0 ; return R7,... 
	11	[887]	RETURN   	R0 1 ; return 

function #25 <?:889,895> (9 instructions, 36 bytes at 00000160C67EE070)
1 param, 4 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[890]	LOADK    	R1 K0 ; R1 := 16777215.000000
	2	[891]	EQ       	1 R0 K1 ; if R0 == nil then PC := 8
	3	[891]	JMP      	8 ; PC := 8
	4	[892]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[892]	GETTABLE 	R3 R0 K2 ; R3 := R0["rarity"]
	6	[892]	ADD      	R3 R3 K3 ; R3 := R3 + 1.000000
	7	[892]	GETTABLE 	R1 R2 R3 ; R1 := R2[R3]
	8	[894]	RETURN   	R1 2 ; return R1 
	9	[895]	RETURN   	R0 1 ; return 

function #26 <?:899,909> (30 instructions, 120 bytes at 00000160C67EE1D0)
5 params, 9 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[900]	GETGLOBAL	R5 K0 ; R5 := _T
	2	[900]	TEST     	R1 0 ; if not R1 then PC := 11
	3	[900]	JMP      	11 ; PC := 11
	4	[900]	GETGLOBAL	R6 K2 ; R6 := 0x7f5022cf
	5	[900]	GETTABLE 	R6 R6 K3 ; R6 := R6[0xe8072ded]
	6	[900]	LOADK    	R7 K4 ; R7 := "0x%08X"
	7	[900]	MOVE     	R8 R1 ; R8 := R1
	8	[900]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	9	[900]	TEST     	R6 1 ; if R6 then PC := 12
	10	[900]	JMP      	12 ; PC := 12
	11	[900]	LOADNIL  	R6 R6 ; R6 := nil
	12	[900]	SETTABLE 	R5 K1 R6 ; R5["ColorPickerCurrentColor"] := R6
	13	[901]	GETGLOBAL	R5 K0 ; R5 := _T
	14	[901]	SETTABLE 	R5 K5 R2 ; R5["ColorPickerCallback"] := R2
	15	[902]	GETGLOBAL	R5 K0 ; R5 := _T
	16	[902]	SETTABLE 	R5 K6 R3 ; R5[0x06d055f9] := R3
	17	[903]	GETGLOBAL	R5 K0 ; R5 := _T
	18	[903]	SETTABLE 	R5 K7 R4 ; R5["ColorPickerSpecificColorsInfo"] := R4
	19	[904]	GETGLOBAL	R5 K0 ; R5 := _T
	20	[904]	GETTABLE 	R5 R5 K8 ; R5 := R5["InSimulacrum"]
	21	[904]	TEST     	R5 0 ; if not R5 then PC := 25
	22	[904]	JMP      	25 ; PC := 25
	23	[906]	GETGLOBAL	R5 K0 ; R5 := _T
	24	[906]	SETTABLE 	R5 K9 K10 ; R5["ColorPickerUseCustomBg"] := true
	25	[908]	SELF     	R5 R0 K11 ; R6 := R0; R5 := R0[0x1fd6abd0]
	26	[908]	GETGLOBAL	R7 K12 ; R7 := 0x0032441c
	27	[908]	GETTABLE 	R7 R7 K13 ; R7 := R7["UIMovie_ColorPicker"]
	28	[908]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	29	[908]	RETURN   	R5 2 ; return R5 
	30	[909]	RETURN   	R0 1 ; return 

function #27 <?:911,1131> (628 instructions, 2512 bytes at 00000160C67EE680)
4 params, 30 slots, 3 upvalues, 0 locals, 83 constants, 0 functions
	1	[914]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	2	[914]	MOVE     	R6 R1 ; R6 := R1
	3	[914]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[914]	TEST     	R5 0 ; if not R5 then PC := 9
	5	[914]	JMP      	9 ; PC := 9
	6	[915]	GETUPVAL 	R5 U0 ; R5 := U0
	7	[915]	CALL     	R5 1 2 ; R5 := R5()
	8	[915]	MOVE     	R1 R5 ; R1 := R5
	9	[917]	GETGLOBAL	R5 K1 ; R5 := _T
	10	[917]	GETTABLE 	R5 R5 K2 ; R5 := R5["mSpecialSuitMode"]
	11	[917]	TEST     	R5 0 ; if not R5 then PC := 16
	12	[917]	JMP      	16 ; PC := 16
	13	[918]	GETGLOBAL	R5 K1 ; R5 := _T
	14	[918]	GETTABLE 	R4 R5 K3 ; R4 := R5["SpecialSuitAvatar"]
	15	[918]	JMP      	55 ; PC := 55
	16	[919]	GETGLOBAL	R5 K1 ; R5 := _T
	17	[919]	GETTABLE 	R5 R5 K4 ; R5 := R5["mSentinelMode"]
	18	[919]	TEST     	R5 0 ; if not R5 then PC := 54
	19	[919]	JMP      	54 ; PC := 54
	20	[920]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	21	[920]	MOVE     	R6 R1 ; R6 := R1
	22	[920]	CALL     	R5 2 2 ; R5 := R5(R6)
	23	[920]	TEST     	R5 1 ; if R5 then PC := 55
	24	[920]	JMP      	55 ; PC := 55
	25	[921]	SELF     	R5 R1 K5 ; R6 := R1; R5 := R1[0xf2deaf69]
	26	[921]	GETGLOBAL	R7 K6 ; R7 := gLotusSentinelAvatarType
	27	[921]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	28	[921]	TEST     	R5 0 ; if not R5 then PC := 32
	29	[921]	JMP      	32 ; PC := 32
	30	[922]	MOVE     	R4 R1 ; R4 := R1
	31	[922]	JMP      	55 ; PC := 55
	32	[924]	SELF     	R5 R1 K7 ; R6 := R1; R5 := R1[0xde321e6f]
	33	[924]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[924]	SELF     	R5 R5 K8 ; R6 := R5; R5 := R5[0x2676deee]
	35	[924]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[924]	MOVE     	R4 R5 ; R4 := R5
	37	[925]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	38	[925]	MOVE     	R6 R4 ; R6 := R4
	39	[925]	CALL     	R5 2 2 ; R5 := R5(R6)
	40	[925]	TEST     	R5 0 ; if not R5 then PC := 55
	41	[925]	JMP      	55 ; PC := 55
	42	[926]	GETGLOBAL	R5 K9 ; R5 := 0xbe190284
	43	[926]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0xf2deaf69]
	44	[926]	GETGLOBAL	R7 K10 ; R7 := gLotusAttractModeGameRulesType
	45	[926]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	46	[926]	TEST     	R5 0 ; if not R5 then PC := 55
	47	[926]	JMP      	55 ; PC := 55
	48	[927]	GETGLOBAL	R5 K9 ; R5 := 0xbe190284
	49	[927]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x7cf8123f]
	50	[927]	LOADK    	R7 := 3.000000
	51	[927]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	52	[927]	MOVE     	R4 R5 ; R4 := R5
	53	[931]	JMP      	55 ; PC := 55
	54	[933]	MOVE     	R4 R1 ; R4 := R1
	55	[936]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	56	[936]	MOVE     	R6 R4 ; R6 := R4
	57	[936]	CALL     	R5 2 2 ; R5 := R5(R6)
	58	[936]	TEST     	R5 0 ; if not R5 then PC := 61
	59	[936]	JMP      	61 ; PC := 61
	60	[937]	RETURN   	R0 1 ; return 
	61	[940]	GETGLOBAL	R5 K1 ; R5 := _T
	62	[940]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	63	[940]	EQ       	0 R5 K14 ; if R5 ~= nil then PC := 82
	64	[940]	JMP      	82 ; PC := 82
	65	[941]	GETGLOBAL	R5 K1 ; R5 := _T
	66	[941]	NEWTABLE 	R6 0 0 ; R6 := {}
	67	[941]	SETTABLE 	R5 K13 R6 ; R5["suitTable"] := R6
	68	[942]	GETGLOBAL	R5 K1 ; R5 := _T
	69	[942]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	70	[942]	SETTABLE 	R5 K15 K16 ; R5["desiredRot"] := -90.000000
	71	[943]	GETGLOBAL	R5 K1 ; R5 := _T
	72	[943]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	73	[943]	GETGLOBAL	R6 K1 ; R6 := _T
	74	[943]	GETTABLE 	R6 R6 K13 ; R6 := R6["suitTable"]
	75	[943]	GETTABLE 	R6 R6 K15 ; R6 := R6["desiredRot"]
	76	[943]	SETTABLE 	R5 K17 R6 ; R5["lerpRot"] := R6
	77	[944]	GETGLOBAL	R5 K1 ; R5 := _T
	78	[944]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	79	[944]	GETGLOBAL	R6 K19 ; R6 := 0x00046924
	80	[944]	CALL     	R6 1 2 ; R6 := R6()
	81	[944]	SETTABLE 	R5 K18 R6 ; R5["lerpHead"] := R6
	82	[947]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	83	[947]	GETGLOBAL	R6 K1 ; R6 := _T
	84	[947]	GETTABLE 	R6 R6 K13 ; R6 := R6["suitTable"]
	85	[947]	GETTABLE 	R6 R6 K17 ; R6 := R6["lerpRot"]
	86	[947]	CALL     	R5 2 2 ; R5 := R5(R6)
	87	[947]	TEST     	R5 0 ; if not R5 then PC := 92
	88	[947]	JMP      	92 ; PC := 92
	89	[948]	GETGLOBAL	R5 K1 ; R5 := _T
	90	[948]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	91	[948]	SETTABLE 	R5 K17 K20 ; R5["lerpRot"] := 0.000000
	92	[950]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	93	[950]	GETGLOBAL	R6 K1 ; R6 := _T
	94	[950]	GETTABLE 	R6 R6 K13 ; R6 := R6["suitTable"]
	95	[950]	GETTABLE 	R6 R6 K15 ; R6 := R6["desiredRot"]
	96	[950]	CALL     	R5 2 2 ; R5 := R5(R6)
	97	[950]	TEST     	R5 0 ; if not R5 then PC := 102
	98	[950]	JMP      	102 ; PC := 102
	99	[951]	GETGLOBAL	R5 K1 ; R5 := _T
	100	[951]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	101	[951]	SETTABLE 	R5 K15 K16 ; R5["desiredRot"] := -90.000000
	102	[953]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	103	[953]	GETGLOBAL	R6 K1 ; R6 := _T
	104	[953]	GETTABLE 	R6 R6 K13 ; R6 := R6["suitTable"]
	105	[953]	GETTABLE 	R6 R6 K18 ; R6 := R6["lerpHead"]
	106	[953]	CALL     	R5 2 2 ; R5 := R5(R6)
	107	[953]	TEST     	R5 0 ; if not R5 then PC := 114
	108	[953]	JMP      	114 ; PC := 114
	109	[954]	GETGLOBAL	R5 K1 ; R5 := _T
	110	[954]	GETTABLE 	R5 R5 K13 ; R5 := R5["suitTable"]
	111	[954]	GETGLOBAL	R6 K19 ; R6 := 0x00046924
	112	[954]	CALL     	R6 1 2 ; R6 := R6()
	113	[954]	SETTABLE 	R5 K18 R6 ; R5["lerpHead"] := R6
	114	[957]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	115	[957]	MOVE     	R6 R0 ; R6 := R0
	116	[957]	CALL     	R5 2 2 ; R5 := R5(R6)
	117	[957]	TEST     	R5 1 ; if R5 then PC := 124
	118	[957]	JMP      	124 ; PC := 124
	119	[957]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	120	[957]	MOVE     	R6 R4 ; R6 := R4
	121	[957]	CALL     	R5 2 2 ; R5 := R5(R6)
	122	[957]	TEST     	R5 0 ; if not R5 then PC := 125
	123	[957]	JMP      	125 ; PC := 125
	124	[958]	RETURN   	R0 1 ; return 
	125	[961]	SELF     	R5 R0 K21 ; R6 := R0; R5 := R0[0xd4cc05b4]
	126	[961]	CALL     	R5 2 2 ; R5 := R5(R6)
	127	[961]	TEST     	R5 1 ; if R5 then PC := 130
	128	[961]	JMP      	130 ; PC := 130
	129	[962]	RETURN   	R0 1 ; return 
	130	[965]	SELF     	R5 R0 K22 ; R6 := R0; R5 := R0[0x91a24e4b]
	131	[965]	LOADK    	R7 K23 ; R7 := "_root"
	132	[965]	LOADK    	R8 := 25.000000
	133	[965]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	134	[966]	SELF     	R6 R0 K22 ; R7 := R0; R6 := R0[0x91a24e4b]
	135	[966]	LOADK    	R8 K23 ; R8 := "_root"
	136	[966]	LOADK    	R9 := 26.000000
	137	[966]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	138	[968]	GETGLOBAL	R7 K24 ; R7 := 0x34291f5c
	139	[968]	GETTABLE 	R7 R7 K25 ; R7 := R7[0x1467d5f4]
	140	[968]	CALL     	R7 1 2 ; R7 := R7()
	141	[973]	EQ       	0 R5 K26 ; if R5 ~= -1000.000000 then PC := 161
	142	[973]	JMP      	161 ; PC := 161
	143	[973]	EQ       	0 R6 K26 ; if R6 ~= -1000.000000 then PC := 161
	144	[973]	JMP      	161 ; PC := 161
	145	[974]	GETGLOBAL	R8 K1 ; R8 := _T
	146	[974]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	147	[974]	GETTABLE 	R5 R8 K27 ; R5 := R8["lastMX"]
	148	[975]	GETGLOBAL	R8 K1 ; R8 := _T
	149	[975]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	150	[975]	GETTABLE 	R6 R8 K28 ; R6 := R8["lastMY"]
	151	[979]	EQ       	1 R5 K14 ; if R5 == nil then PC := 155
	152	[979]	JMP      	155 ; PC := 155
	153	[979]	EQ       	0 R6 K14 ; if R6 ~= nil then PC := 157
	154	[979]	JMP      	157 ; PC := 157
	155	[980]	LOADK    	R5 := 0.000000
	156	[981]	LOADK    	R6 := 0.000000
	157	[984]	GETGLOBAL	R8 K1 ; R8 := _T
	158	[984]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	159	[984]	SETTABLE 	R8 K29 K30 ; R8["mouseOffScreen"] := true
	160	[984]	JMP      	177 ; PC := 177
	161	[985]	GETGLOBAL	R8 K1 ; R8 := _T
	162	[985]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	163	[985]	GETTABLE 	R8 R8 K29 ; R8 := R8["mouseOffScreen"]
	164	[985]	TEST     	R8 0 ; if not R8 then PC := 177
	165	[985]	JMP      	177 ; PC := 177
	166	[986]	TEST     	R7 1 ; if R7 then PC := 174
	167	[986]	JMP      	174 ; PC := 174
	168	[987]	GETGLOBAL	R8 K1 ; R8 := _T
	169	[987]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	170	[987]	SETTABLE 	R8 K27 R5 ; R8["lastMX"] := R5
	171	[988]	GETGLOBAL	R8 K1 ; R8 := _T
	172	[988]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	173	[988]	SETTABLE 	R8 K28 R6 ; R8["lastMY"] := R6
	174	[991]	GETGLOBAL	R8 K1 ; R8 := _T
	175	[991]	GETTABLE 	R8 R8 K13 ; R8 := R8["suitTable"]
	176	[991]	SETTABLE 	R8 K29 K31 ; R8["mouseOffScreen"] := false
	177	[994]	SELF     	R8 R0 K32 ; R9 := R0; R8 := R0[0x5b638cce]
	178	[994]	LOADK    	R10 K23 ; R10 := "_root"
	179	[994]	LOADK    	R11 K33 ; R11 := "suitRotationX"
	180	[994]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	181	[995]	TEST     	R7 1 ; if R7 then PC := 185
	182	[995]	JMP      	185 ; PC := 185
	183	[995]	TEST     	R3 0 ; if not R3 then PC := 208
	184	[995]	JMP      	208 ; PC := 208
	185	[995]	TEST     	R2 0 ; if not R2 then PC := 208
	186	[995]	JMP      	208 ; PC := 208
	187	[995]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	188	[995]	MOVE     	R10 R8 ; R10 := R8
	189	[995]	CALL     	R9 2 2 ; R9 := R9(R10)
	190	[995]	TEST     	R9 1 ; if R9 then PC := 208
	191	[995]	JMP      	208 ; PC := 208
	192	[995]	GETGLOBAL	R9 K34 ; R9 := 0x03f57322
	193	[995]	MOVE     	R10 R8 ; R10 := R8
	194	[995]	CALL     	R9 2 2 ; R9 := R9(R10)
	195	[995]	EQ       	1 R9 K14 ; if R9 == nil then PC := 208
	196	[995]	JMP      	208 ; PC := 208
	197	[996]	GETUPVAL 	R9 U1 ; R9 := U1
	198	[996]	GETGLOBAL	R10 K34 ; R10 := 0x03f57322
	199	[996]	MOVE     	R11 R8 ; R11 := R8
	200	[996]	CALL     	R10 2 2 ; R10 := R10(R11)
	201	[996]	MUL      	R10 R10 K35 ; R10 := R10 * 1000.000000
	202	[996]	GETGLOBAL	R11 K36 ; R11 := 0x67652851
	203	[996]	CALL     	R11 1 2 ; R11 := R11()
	204	[996]	MUL      	R10 R10 R11 ; R10 := R10 * R11
	205	[996]	ADD      	R9 R9 R10 ; R9 := R9 + R10
	206	[996]	SETUPVAL 	R9 U1 ; U1 := R9
	207	[997]	GETUPVAL 	R5 U1 ; R5 := U1
	208	[1000]	GETGLOBAL	R9 K1 ; R9 := _T
	209	[1000]	GETTABLE 	R9 R9 K13 ; R9 := R9["suitTable"]
	210	[1000]	GETTABLE 	R9 R9 K37 ; R9 := R9["wasUsingController"]
	211	[1000]	EQ       	1 R9 R7 ; if R9 == R7 then PC := 222
	212	[1000]	JMP      	222 ; PC := 222
	213	[1001]	GETGLOBAL	R9 K1 ; R9 := _T
	214	[1001]	GETTABLE 	R9 R9 K13 ; R9 := R9["suitTable"]
	215	[1001]	SETTABLE 	R9 K37 R7 ; R9["wasUsingController"] := R7
	216	[1002]	GETGLOBAL	R9 K1 ; R9 := _T
	217	[1002]	GETTABLE 	R9 R9 K13 ; R9 := R9["suitTable"]
	218	[1002]	SETTABLE 	R9 K27 R5 ; R9["lastMX"] := R5
	219	[1003]	GETGLOBAL	R9 K1 ; R9 := _T
	220	[1003]	GETTABLE 	R9 R9 K13 ; R9 := R9["suitTable"]
	221	[1003]	SETTABLE 	R9 K28 R6 ; R9["lastMY"] := R6
	222	[1006]	GETUPVAL 	R9 U2 ; R9 := U2
	223	[1006]	GETTABLE 	R9 R9 K38 ; R9 := R9[0x06d055f9]
	224	[1006]	MOVE     	R10 R3 ; R10 := R3
	225	[1006]	LOADK    	R11 K39 ; R11 := ""
	226	[1006]	SELF     	R12 R0 K40 ; R13 := R0; R12 := R0[0xee5aaf3e]
	227	[1006]	CALL     	R12 2 0 ; R12,... := R12(R13)
	228	[1006]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	229	[1007]	EQ       	0 R9 K39 ; if R9 ~= "" then PC := 262
	230	[1007]	JMP      	262 ; PC := 262
	231	[1007]	TEST     	R2 0 ; if not R2 then PC := 262
	232	[1007]	JMP      	262 ; PC := 262
	233	[1008]	GETGLOBAL	R10 K1 ; R10 := _T
	234	[1008]	GETTABLE 	R10 R10 K13 ; R10 := R10["suitTable"]
	235	[1008]	GETTABLE 	R10 R10 K27 ; R10 := R10["lastMX"]
	236	[1008]	EQ       	1 R10 K14 ; if R10 == nil then PC := 250
	237	[1008]	JMP      	250 ; PC := 250
	238	[1009]	GETGLOBAL	R10 K1 ; R10 := _T
	239	[1009]	GETTABLE 	R10 R10 K13 ; R10 := R10["suitTable"]
	240	[1009]	GETGLOBAL	R11 K1 ; R11 := _T
	241	[1009]	GETTABLE 	R11 R11 K13 ; R11 := R11["suitTable"]
	242	[1009]	GETTABLE 	R11 R11 K15 ; R11 := R11["desiredRot"]
	243	[1009]	GETGLOBAL	R12 K1 ; R12 := _T
	244	[1009]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	245	[1009]	GETTABLE 	R12 R12 K27 ; R12 := R12["lastMX"]
	246	[1009]	SUB      	R12 R12 R5 ; R12 := R12 - R5
	247	[1009]	MUL      	R12 R12 K41 ; R12 := R12 * 0.500000
	248	[1009]	ADD      	R11 R11 R12 ; R11 := R11 + R12
	249	[1009]	SETTABLE 	R10 K15 R11 ; R10["desiredRot"] := R11
	250	[1012]	GETGLOBAL	R10 K1 ; R10 := _T
	251	[1012]	GETTABLE 	R10 R10 K13 ; R10 := R10["suitTable"]
	252	[1012]	GETTABLE 	R10 R10 K28 ; R10 := R10["lastMY"]
	253	[1012]	EQ       	1 R10 K14 ; if R10 == nil then PC := 262
	254	[1012]	JMP      	262 ; PC := 262
	255	[1013]	GETGLOBAL	R10 K1 ; R10 := _T
	256	[1013]	GETTABLE 	R10 R10 K13 ; R10 := R10["suitTable"]
	257	[1013]	GETGLOBAL	R11 K1 ; R11 := _T
	258	[1013]	GETTABLE 	R11 R11 K13 ; R11 := R11["suitTable"]
	259	[1013]	GETTABLE 	R11 R11 K28 ; R11 := R11["lastMY"]
	260	[1013]	SUB      	R11 R11 R6 ; R11 := R11 - R6
	261	[1013]	SETTABLE 	R10 K42 R11 ; R10["myDiff"] := R11
	262	[1018]	GETGLOBAL	R10 K1 ; R10 := _T
	263	[1018]	GETTABLE 	R10 R10 K13 ; R10 := R10["suitTable"]
	264	[1018]	GETGLOBAL	R11 K43 ; R11 := 0x9bafffe3
	265	[1018]	GETGLOBAL	R12 K1 ; R12 := _T
	266	[1018]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	267	[1018]	GETTABLE 	R12 R12 K17 ; R12 := R12["lerpRot"]
	268	[1018]	GETGLOBAL	R13 K1 ; R13 := _T
	269	[1018]	GETTABLE 	R13 R13 K13 ; R13 := R13["suitTable"]
	270	[1018]	GETTABLE 	R13 R13 K15 ; R13 := R13["desiredRot"]
	271	[1018]	GETGLOBAL	R14 K36 ; R14 := 0x67652851
	272	[1018]	CALL     	R14 1 2 ; R14 := R14()
	273	[1018]	MUL      	R14 R14 K44 ; R14 := R14 * 4.000000
	274	[1018]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	275	[1018]	SETTABLE 	R10 K17 R11 ; R10["lerpRot"] := R11
	276	[1020]	LOADK    	R10 := 0.000000
	277	[1021]	GETGLOBAL	R11 K1 ; R11 := _T
	278	[1021]	GETTABLE 	R11 R11 K13 ; R11 := R11["suitTable"]
	279	[1021]	GETTABLE 	R11 R11 K17 ; R11 := R11["lerpRot"]
	280	[1021]	GETGLOBAL	R12 K1 ; R12 := _T
	281	[1021]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	282	[1021]	GETTABLE 	R12 R12 K15 ; R12 := R12["desiredRot"]
	283	[1021]	LE       	0 R11 R12 ; if R11 > R12 then PC := 294
	284	[1021]	JMP      	294 ; PC := 294
	285	[1022]	GETGLOBAL	R11 K45 ; R11 := 0x5bced4c4
	286	[1022]	GETTABLE 	R11 R11 K46 ; R11 := R11[0xe4a5b3ca]
	287	[1022]	GETGLOBAL	R12 K1 ; R12 := _T
	288	[1022]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	289	[1022]	GETTABLE 	R12 R12 K17 ; R12 := R12["lerpRot"]
	290	[1022]	MOD      	R12 R12 K47 ; R12 := R12 % 360.000000
	291	[1022]	CALL     	R11 2 2 ; R11 := R11(R12)
	292	[1022]	SUB      	R10 K47 R11 ; R10 := 360.000000 - R11
	293	[1022]	JMP      	302 ; PC := 302
	294	[1024]	GETGLOBAL	R11 K45 ; R11 := 0x5bced4c4
	295	[1024]	GETTABLE 	R11 R11 K46 ; R11 := R11[0xe4a5b3ca]
	296	[1024]	GETGLOBAL	R12 K1 ; R12 := _T
	297	[1024]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	298	[1024]	GETTABLE 	R12 R12 K17 ; R12 := R12["lerpRot"]
	299	[1024]	MOD      	R12 R12 K47 ; R12 := R12 % 360.000000
	300	[1024]	CALL     	R11 2 2 ; R11 := R11(R12)
	301	[1024]	MOVE     	R10 R11 ; R10 := R11
	302	[1026]	GETGLOBAL	R11 K45 ; R11 := 0x5bced4c4
	303	[1026]	GETTABLE 	R11 R11 K46 ; R11 := R11[0xe4a5b3ca]
	304	[1026]	GETGLOBAL	R12 K1 ; R12 := _T
	305	[1026]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	306	[1026]	GETTABLE 	R12 R12 K15 ; R12 := R12["desiredRot"]
	307	[1026]	GETGLOBAL	R13 K1 ; R13 := _T
	308	[1026]	GETTABLE 	R13 R13 K13 ; R13 := R13["suitTable"]
	309	[1026]	GETTABLE 	R13 R13 K17 ; R13 := R13["lerpRot"]
	310	[1026]	SUB      	R12 R12 R13 ; R12 := R12 - R13
	311	[1026]	CALL     	R11 2 2 ; R11 := R11(R12)
	312	[1027]	LT       	0 R11 R10 ; if R11 >= R10 then PC := 328
	313	[1027]	JMP      	328 ; PC := 328
	314	[1028]	GETGLOBAL	R12 K1 ; R12 := _T
	315	[1028]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	316	[1028]	GETGLOBAL	R13 K1 ; R13 := _T
	317	[1028]	GETTABLE 	R13 R13 K13 ; R13 := R13["suitTable"]
	318	[1028]	GETTABLE 	R13 R13 K17 ; R13 := R13["lerpRot"]
	319	[1028]	MOD      	R13 R13 K47 ; R13 := R13 % 360.000000
	320	[1028]	SETTABLE 	R12 K17 R13 ; R12["lerpRot"] := R13
	321	[1029]	GETGLOBAL	R12 K1 ; R12 := _T
	322	[1029]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	323	[1029]	GETGLOBAL	R13 K1 ; R13 := _T
	324	[1029]	GETTABLE 	R13 R13 K13 ; R13 := R13["suitTable"]
	325	[1029]	GETTABLE 	R13 R13 K15 ; R13 := R13["desiredRot"]
	326	[1029]	MOD      	R13 R13 K47 ; R13 := R13 % 360.000000
	327	[1029]	SETTABLE 	R12 K15 R13 ; R12["desiredRot"] := R13
	328	[1032]	GETGLOBAL	R12 K1 ; R12 := _T
	329	[1032]	GETTABLE 	R12 R12 K13 ; R12 := R12["suitTable"]
	330	[1032]	GETTABLE 	R12 R12 K17 ; R12 := R12["lerpRot"]
	331	[1034]	GETGLOBAL	R13 K1 ; R13 := _T
	332	[1034]	GETTABLE 	R13 R13 K4 ; R13 := R13["mSentinelMode"]
	333	[1034]	TEST     	R13 0 ; if not R13 then PC := 343
	334	[1034]	JMP      	343 ; PC := 343
	335	[1034]	GETGLOBAL	R13 K1 ; R13 := _T
	336	[1034]	GETTABLE 	R13 R13 K48 ; R13 := R13["SENTINEL_DEFAULT_ROTATION"]
	337	[1034]	EQ       	1 R13 K14 ; if R13 == nil then PC := 343
	338	[1034]	JMP      	343 ; PC := 343
	339	[1035]	GETGLOBAL	R13 K1 ; R13 := _T
	340	[1035]	GETTABLE 	R13 R13 K48 ; R13 := R13["SENTINEL_DEFAULT_ROTATION"]
	341	[1035]	ADD      	R13 R12 R13 ; R13 := R12 + R13
	342	[1035]	MOD      	R12 R13 K47 ; R12 := R13 % 360.000000
	343	[1039]	MOD      	R12 R12 K47 ; R12 := R12 % 360.000000
	344	[1040]	LE       	0 R12 K49 ; if R12 > -180.000000 then PC := 348
	345	[1040]	JMP      	348 ; PC := 348
	346	[1041]	ADD      	R12 R12 K47 ; R12 := R12 + 360.000000
	347	[1041]	JMP      	351 ; PC := 351
	348	[1042]	LE       	0 K50 R12 ; if 180.000000 > R12 then PC := 351
	349	[1042]	JMP      	351 ; PC := 351
	350	[1043]	SUB      	R12 R12 K47 ; R12 := R12 - 360.000000
	351	[1047]	SELF     	R13 R4 K51 ; R14 := R4; R13 := R4[0x89c6dbf7]
	352	[1047]	GETGLOBAL	R15 K19 ; R15 := 0x00046924
	353	[1047]	MOVE     	R16 R12 ; R16 := R12
	354	[1047]	LOADK    	R17 := 0.000000
	355	[1047]	LOADK    	R18 := 0.000000
	356	[1047]	CALL     	R15 4 0 ; R15,... := R15(R16,R17,R18)
	357	[1047]	CALL     	R13 0 1 ; R13(R14,...)
	358	[1049]	SELF     	R13 R4 K52 ; R14 := R4; R13 := R4[0xd1586535]
	359	[1049]	CALL     	R13 2 2 ; R13 := R13(R14)
	360	[1050]	SELF     	R14 R4 K53 ; R15 := R4; R14 := R4[0x388577d5]
	361	[1050]	CALL     	R14 2 2 ; R14 := R14(R15)
	362	[1051]	GETGLOBAL	R15 K1 ; R15 := _T
	363	[1051]	GETTABLE 	R15 R15 K13 ; R15 := R15["suitTable"]
	364	[1051]	GETTABLE 	R15 R15 K54 ; R15 := R15["positions"]
	365	[1051]	TEST     	R15 0 ; if not R15 then PC := 371
	366	[1051]	JMP      	371 ; PC := 371
	367	[1051]	GETGLOBAL	R15 K1 ; R15 := _T
	368	[1051]	GETTABLE 	R15 R15 K13 ; R15 := R15["suitTable"]
	369	[1051]	GETTABLE 	R15 R15 K54 ; R15 := R15["positions"]
	370	[1051]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	371	[1052]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	372	[1052]	MOVE     	R17 R15 ; R17 := R15
	373	[1052]	CALL     	R16 2 2 ; R16 := R16(R17)
	374	[1052]	TEST     	R16 1 ; if R16 then PC := 378
	375	[1052]	JMP      	378 ; PC := 378
	376	[1053]	MOVE     	R13 R15 ; R13 := R15
	377	[1053]	JMP      	398 ; PC := 398
	378	[1054]	GETGLOBAL	R16 K1 ; R16 := _T
	379	[1054]	GETTABLE 	R16 R16 K13 ; R16 := R16["suitTable"]
	380	[1054]	GETTABLE 	R16 R16 K55 ; R16 := R16["desiredPos"]
	381	[1054]	EQ       	1 R16 K14 ; if R16 == nil then PC := 398
	382	[1054]	JMP      	398 ; PC := 398
	383	[1054]	SELF     	R16 R4 K5 ; R17 := R4; R16 := R4[0xf2deaf69]
	384	[1054]	GETGLOBAL	R18 K56 ; R18 := gPetAvatarType
	385	[1054]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	386	[1054]	TEST     	R16 1 ; if R16 then PC := 398
	387	[1054]	JMP      	398 ; PC := 398
	388	[1055]	GETGLOBAL	R16 K57 ; R16 := 0x5db3ce80
	389	[1055]	MOVE     	R17 R13 ; R17 := R13
	390	[1055]	GETGLOBAL	R18 K1 ; R18 := _T
	391	[1055]	GETTABLE 	R18 R18 K13 ; R18 := R18["suitTable"]
	392	[1055]	GETTABLE 	R18 R18 K55 ; R18 := R18["desiredPos"]
	393	[1055]	GETGLOBAL	R19 K36 ; R19 := 0x67652851
	394	[1055]	CALL     	R19 1 2 ; R19 := R19()
	395	[1055]	MUL      	R19 R19 K44 ; R19 := R19 * 4.000000
	396	[1055]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	397	[1055]	MOVE     	R13 R16 ; R13 := R16
	398	[1058]	GETGLOBAL	R16 K1 ; R16 := _T
	399	[1058]	GETTABLE 	R16 R16 K13 ; R16 := R16["suitTable"]
	400	[1058]	GETTABLE 	R16 R16 K58 ; R16 := R16["queuedTeleport"]
	401	[1058]	EQ       	0 R16 K14 ; if R16 ~= nil then PC := 492
	402	[1058]	JMP      	492 ; PC := 492
	403	[1059]	LOADK    	R16 := 0.000000
	404	[1060]	LOADK    	R17 := 0.000000
	405	[1061]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	406	[1061]	GETGLOBAL	R19 K1 ; R19 := _T
	407	[1061]	GETTABLE 	R19 R19 K13 ; R19 := R19["suitTable"]
	408	[1061]	GETTABLE 	R19 R19 K59 ; R19 := R19["lerpRotZ"]
	409	[1061]	CALL     	R18 2 2 ; R18 := R18(R19)
	410	[1061]	TEST     	R18 1 ; if R18 then PC := 415
	411	[1061]	JMP      	415 ; PC := 415
	412	[1062]	GETGLOBAL	R18 K1 ; R18 := _T
	413	[1062]	GETTABLE 	R18 R18 K13 ; R18 := R18["suitTable"]
	414	[1062]	GETTABLE 	R17 R18 K59 ; R17 := R18["lerpRotZ"]
	415	[1064]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	416	[1064]	GETGLOBAL	R19 K1 ; R19 := _T
	417	[1064]	GETTABLE 	R19 R19 K13 ; R19 := R19["suitTable"]
	418	[1064]	GETTABLE 	R19 R19 K60 ; R19 := R19["lerpRotY"]
	419	[1064]	CALL     	R18 2 2 ; R18 := R18(R19)
	420	[1064]	TEST     	R18 1 ; if R18 then PC := 425
	421	[1064]	JMP      	425 ; PC := 425
	422	[1065]	GETGLOBAL	R18 K1 ; R18 := _T
	423	[1065]	GETTABLE 	R18 R18 K13 ; R18 := R18["suitTable"]
	424	[1065]	GETTABLE 	R16 R18 K60 ; R16 := R18["lerpRotY"]
	425	[1067]	SELF     	R18 R4 K61 ; R19 := R4; R18 := R4[0x589ef1c1]
	426	[1067]	MOVE     	R20 R13 ; R20 := R13
	427	[1067]	GETGLOBAL	R21 K19 ; R21 := 0x00046924
	428	[1067]	MOVE     	R22 R12 ; R22 := R12
	429	[1067]	MOVE     	R23 R16 ; R23 := R16
	430	[1067]	MOVE     	R24 R17 ; R24 := R17
	431	[1067]	CALL     	R21 4 0 ; R21,... := R21(R22,R23,R24)
	432	[1067]	CALL     	R18 0 1 ; R18(R19,...)
	433	[1069]	LOADNIL  	R18 R18 ; R18 := nil
	434	[1070]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	435	[1070]	GETGLOBAL	R20 K62 ; R20 := 0x89326c93
	436	[1070]	CALL     	R19 2 2 ; R19 := R19(R20)
	437	[1070]	TEST     	R19 1 ; if R19 then PC := 443
	438	[1070]	JMP      	443 ; PC := 443
	439	[1071]	GETGLOBAL	R19 K62 ; R19 := 0x89326c93
	440	[1071]	SELF     	R19 R19 K63 ; R20 := R19; R19 := R19[0x78298275]
	441	[1071]	CALL     	R19 2 2 ; R19 := R19(R20)
	442	[1071]	MOVE     	R18 R19 ; R18 := R19
	443	[1073]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	444	[1073]	MOVE     	R20 R18 ; R20 := R18
	445	[1073]	CALL     	R19 2 2 ; R19 := R19(R20)
	446	[1073]	TEST     	R19 1 ; if R19 then PC := 509
	447	[1073]	JMP      	509 ; PC := 509
	448	[1073]	SELF     	R19 R18 K5 ; R20 := R18; R19 := R18[0xf2deaf69]
	449	[1073]	GETGLOBAL	R21 K64 ; R21 := gLotusOperatorAvatarType
	450	[1073]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	451	[1073]	TEST     	R19 1 ; if R19 then PC := 509
	452	[1073]	JMP      	509 ; PC := 509
	453	[1073]	GETGLOBAL	R19 K1 ; R19 := _T
	454	[1073]	GETTABLE 	R19 R19 K65 ; R19 := R19["MenuSuitAvatar"]
	455	[1073]	EQ       	1 R4 R19 ; if R4 == R19 then PC := 461
	456	[1073]	JMP      	461 ; PC := 461
	457	[1073]	GETGLOBAL	R19 K1 ; R19 := _T
	458	[1073]	GETTABLE 	R19 R19 K66 ; R19 := R19["KDriveAvatar"]
	459	[1073]	EQ       	0 R4 R19 ; if R4 ~= R19 then PC := 509
	460	[1073]	JMP      	509 ; PC := 509
	461	[1073]	EQ       	1 R18 R4 ; if R18 == R4 then PC := 509
	462	[1073]	JMP      	509 ; PC := 509
	463	[1075]	SELF     	R19 R18 K61 ; R20 := R18; R19 := R18[0x589ef1c1]
	464	[1075]	MOVE     	R21 R13 ; R21 := R13
	465	[1075]	GETGLOBAL	R22 K19 ; R22 := 0x00046924
	466	[1075]	MOVE     	R23 R12 ; R23 := R12
	467	[1075]	LOADK    	R24 := 0.000000
	468	[1075]	LOADK    	R25 := 0.000000
	469	[1075]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	470	[1075]	CALL     	R19 0 1 ; R19(R20,...)
	471	[1077]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	472	[1077]	GETGLOBAL	R20 K1 ; R20 := _T
	473	[1077]	GETTABLE 	R20 R20 K65 ; R20 := R20["MenuSuitAvatar"]
	474	[1077]	CALL     	R19 2 2 ; R19 := R19(R20)
	475	[1077]	TEST     	R19 1 ; if R19 then PC := 509
	476	[1077]	JMP      	509 ; PC := 509
	477	[1077]	GETGLOBAL	R19 K1 ; R19 := _T
	478	[1077]	GETTABLE 	R19 R19 K66 ; R19 := R19["KDriveAvatar"]
	479	[1077]	EQ       	0 R4 R19 ; if R4 ~= R19 then PC := 509
	480	[1077]	JMP      	509 ; PC := 509
	481	[1078]	GETGLOBAL	R19 K1 ; R19 := _T
	482	[1078]	GETTABLE 	R19 R19 K65 ; R19 := R19["MenuSuitAvatar"]
	483	[1078]	SELF     	R19 R19 K61 ; R20 := R19; R19 := R19[0x589ef1c1]
	484	[1078]	MOVE     	R21 R13 ; R21 := R13
	485	[1078]	GETGLOBAL	R22 K19 ; R22 := 0x00046924
	486	[1078]	MOVE     	R23 R12 ; R23 := R12
	487	[1078]	LOADK    	R24 := 0.000000
	488	[1078]	LOADK    	R25 := 0.000000
	489	[1078]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	490	[1078]	CALL     	R19 0 1 ; R19(R20,...)
	491	[1080]	JMP      	509 ; PC := 509
	492	[1082]	GETGLOBAL	R19 K1 ; R19 := _T
	493	[1082]	GETTABLE 	R19 R19 K13 ; R19 := R19["suitTable"]
	494	[1082]	GETGLOBAL	R20 K1 ; R20 := _T
	495	[1082]	GETTABLE 	R20 R20 K13 ; R20 := R20["suitTable"]
	496	[1082]	GETTABLE 	R20 R20 K58 ; R20 := R20["queuedTeleport"]
	497	[1082]	GETGLOBAL	R21 K67 ; R21 := 0xb693b6c1
	498	[1082]	CALL     	R21 1 2 ; R21 := R21()
	499	[1082]	SUB      	R20 R20 R21 ; R20 := R20 - R21
	500	[1082]	SETTABLE 	R19 K58 R20 ; R19["queuedTeleport"] := R20
	501	[1083]	GETGLOBAL	R19 K1 ; R19 := _T
	502	[1083]	GETTABLE 	R19 R19 K13 ; R19 := R19["suitTable"]
	503	[1083]	GETTABLE 	R19 R19 K58 ; R19 := R19["queuedTeleport"]
	504	[1083]	LE       	0 R19 K20 ; if R19 > 0.000000 then PC := 509
	505	[1083]	JMP      	509 ; PC := 509
	506	[1084]	GETGLOBAL	R19 K1 ; R19 := _T
	507	[1084]	GETTABLE 	R19 R19 K13 ; R19 := R19["suitTable"]
	508	[1084]	SETTABLE 	R19 K58 K14 ; R19["queuedTeleport"] := nil
	509	[1088]	GETGLOBAL	R19 K68 ; R19 := 0xa421af95
	510	[1088]	MOVE     	R20 R5 ; R20 := R5
	511	[1088]	MOVE     	R21 R6 ; R21 := R6
	512	[1088]	LOADK    	R22 := -200.000000
	513	[1088]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	514	[1089]	SELF     	R20 R4 K69 ; R21 := R4; R20 := R4[0xebfba9e4]
	515	[1089]	CALL     	R20 2 2 ; R20 := R20(R21)
	516	[1090]	SELF     	R21 R0 K70 ; R22 := R0; R21 := R0[0x28209ddc]
	517	[1090]	MOVE     	R23 R20 ; R23 := R20
	518	[1090]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	519	[1091]	SETTABLE 	R21 K71 K20 ; R21["z"] := 0.000000
	520	[1093]	GETGLOBAL	R22 K72 ; R22 := 0x20b7f774
	521	[1093]	MOVE     	R23 R21 ; R23 := R21
	522	[1093]	MOVE     	R24 R19 ; R24 := R19
	523	[1093]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	524	[1094]	GETGLOBAL	R23 K73 ; R23 := 0xf6c6e505
	525	[1094]	MOVE     	R24 R22 ; R24 := R22
	526	[1094]	CALL     	R23 2 2 ; R23 := R23(R24)
	527	[1096]	GETTABLE 	R24 R23 K71 ; R24 := R23["z"]
	528	[1096]	LT       	0 K20 R24 ; if 0.000000 >= R24 then PC := 533
	529	[1096]	JMP      	533 ; PC := 533
	530	[1097]	GETTABLE 	R24 R23 K71 ; R24 := R23["z"]
	531	[1097]	UNM      	R24 R24 ; R24 := ^ R24
	532	[1097]	SETTABLE 	R23 K71 R24 ; R23["z"] := R24
	533	[1100]	GETGLOBAL	R24 K74 ; R24 := 0x492c7f2a
	534	[1100]	MOVE     	R25 R23 ; R25 := R23
	535	[1100]	GETGLOBAL	R26 K19 ; R26 := 0x00046924
	536	[1100]	SUB      	R27 K75 R12 ; R27 := 90.000000 - R12
	537	[1100]	LOADK    	R28 := 0.000000
	538	[1100]	LOADK    	R29 := 0.000000
	539	[1100]	CALL     	R26 4 0 ; R26,... := R26(R27,R28,R29)
	540	[1100]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	541	[1100]	MOVE     	R23 R24 ; R23 := R24
	542	[1102]	GETGLOBAL	R24 K72 ; R24 := 0x20b7f774
	543	[1102]	GETGLOBAL	R25 K76 ; R25 := ZERO_VECTOR
	544	[1102]	MOVE     	R26 R23 ; R26 := R23
	545	[1102]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	546	[1102]	MOVE     	R22 R24 ; R22 := R24
	547	[1104]	SETTABLE 	R22 K77 K20 ; R22["bank"] := 0.000000
	548	[1105]	GETTABLE 	R24 R22 K78 ; R24 := R22["pitch"]
	549	[1105]	UNM      	R24 R24 ; R24 := ^ R24
	550	[1105]	SETTABLE 	R22 K78 R24 ; R22["pitch"] := R24
	551	[1106]	GETGLOBAL	R24 K80 ; R24 := 0x42dcc9f5
	552	[1106]	GETTABLE 	R25 R22 K79 ; R25 := R22["heading"]
	553	[1106]	LOADK    	R26 := -70.000000
	554	[1106]	LOADK    	R27 := 70.000000
	555	[1106]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	556	[1106]	SETTABLE 	R22 K79 R24 ; R22["heading"] := R24
	557	[1107]	GETGLOBAL	R24 K80 ; R24 := 0x42dcc9f5
	558	[1107]	GETTABLE 	R25 R22 K78 ; R25 := R22["pitch"]
	559	[1107]	LOADK    	R26 := -30.000000
	560	[1107]	LOADK    	R27 := 20.000000
	561	[1107]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	562	[1107]	SETTABLE 	R22 K78 R24 ; R22["pitch"] := R24
	563	[1109]	GETGLOBAL	R24 K1 ; R24 := _T
	564	[1109]	GETTABLE 	R24 R24 K13 ; R24 := R24["suitTable"]
	565	[1109]	GETTABLE 	R24 R24 K18 ; R24 := R24["lerpHead"]
	566	[1109]	GETGLOBAL	R25 K43 ; R25 := 0x9bafffe3
	567	[1109]	GETGLOBAL	R26 K1 ; R26 := _T
	568	[1109]	GETTABLE 	R26 R26 K13 ; R26 := R26["suitTable"]
	569	[1109]	GETTABLE 	R26 R26 K18 ; R26 := R26["lerpHead"]
	570	[1109]	GETTABLE 	R26 R26 K79 ; R26 := R26["heading"]
	571	[1109]	GETTABLE 	R27 R22 K79 ; R27 := R22["heading"]
	572	[1109]	GETGLOBAL	R28 K36 ; R28 := 0x67652851
	573	[1109]	CALL     	R28 1 2 ; R28 := R28()
	574	[1109]	MUL      	R28 R28 K81 ; R28 := R28 * 8.000000
	575	[1109]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	576	[1109]	SETTABLE 	R24 K79 R25 ; R24["heading"] := R25
	577	[1110]	GETGLOBAL	R24 K1 ; R24 := _T
	578	[1110]	GETTABLE 	R24 R24 K13 ; R24 := R24["suitTable"]
	579	[1110]	GETTABLE 	R24 R24 K18 ; R24 := R24["lerpHead"]
	580	[1110]	GETGLOBAL	R25 K43 ; R25 := 0x9bafffe3
	581	[1110]	GETGLOBAL	R26 K1 ; R26 := _T
	582	[1110]	GETTABLE 	R26 R26 K13 ; R26 := R26["suitTable"]
	583	[1110]	GETTABLE 	R26 R26 K18 ; R26 := R26["lerpHead"]
	584	[1110]	GETTABLE 	R26 R26 K78 ; R26 := R26["pitch"]
	585	[1110]	GETTABLE 	R27 R22 K78 ; R27 := R22["pitch"]
	586	[1110]	GETGLOBAL	R28 K36 ; R28 := 0x67652851
	587	[1110]	CALL     	R28 1 2 ; R28 := R28()
	588	[1110]	MUL      	R28 R28 K81 ; R28 := R28 * 8.000000
	589	[1110]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	590	[1110]	SETTABLE 	R24 K78 R25 ; R24["pitch"] := R25
	591	[1113]	GETGLOBAL	R24 K24 ; R24 := 0x34291f5c
	592	[1113]	GETTABLE 	R24 R24 K82 ; R24 := R24[0xe6b41adb]
	593	[1113]	CALL     	R24 1 2 ; R24 := R24()
	594	[1114]	TEST     	R7 1 ; if R7 then PC := 598
	595	[1114]	JMP      	598 ; PC := 598
	596	[1114]	TEST     	R24 1 ; if R24 then PC := 605
	597	[1114]	JMP      	605 ; PC := 605
	598	[1115]	GETGLOBAL	R25 K1 ; R25 := _T
	599	[1115]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	600	[1115]	SETTABLE 	R25 K27 R5 ; R25["lastMX"] := R5
	601	[1116]	GETGLOBAL	R25 K1 ; R25 := _T
	602	[1116]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	603	[1116]	SETTABLE 	R25 K28 R6 ; R25["lastMY"] := R6
	604	[1116]	JMP      	622 ; PC := 622
	605	[1117]	TEST     	R24 0 ; if not R24 then PC := 622
	606	[1117]	JMP      	622 ; PC := 622
	607	[1119]	TEST     	R2 0 ; if not R2 then PC := 616
	608	[1119]	JMP      	616 ; PC := 616
	609	[1120]	GETGLOBAL	R25 K1 ; R25 := _T
	610	[1120]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	611	[1120]	SETTABLE 	R25 K27 R5 ; R25["lastMX"] := R5
	612	[1121]	GETGLOBAL	R25 K1 ; R25 := _T
	613	[1121]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	614	[1121]	SETTABLE 	R25 K28 R6 ; R25["lastMY"] := R6
	615	[1121]	JMP      	622 ; PC := 622
	616	[1123]	GETGLOBAL	R25 K1 ; R25 := _T
	617	[1123]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	618	[1123]	SETTABLE 	R25 K27 K14 ; R25["lastMX"] := nil
	619	[1124]	GETGLOBAL	R25 K1 ; R25 := _T
	620	[1124]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	621	[1124]	SETTABLE 	R25 K28 K14 ; R25["lastMY"] := nil
	622	[1128]	TEST     	R7 0 ; if not R7 then PC := 628
	623	[1128]	JMP      	628 ; PC := 628
	624	[1129]	GETGLOBAL	R25 K1 ; R25 := _T
	625	[1129]	GETTABLE 	R25 R25 K13 ; R25 := R25["suitTable"]
	626	[1129]	GETUPVAL 	R26 U1 ; R26 := U1
	627	[1129]	SETTABLE 	R25 K27 R26 ; R25["lastMX"] := R26
	628	[1131]	RETURN   	R0 1 ; return 

function #28 <?:1133,1139> (27 instructions, 108 bytes at 00000160C67F05B0)
2 params, 7 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[1134]	GETGLOBAL	R2 K0 ; R2 := 0x89326c93
	2	[1134]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x78298275]
	3	[1134]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[1135]	GETGLOBAL	R3 K3 ; R3 := 0x9bafffe3
	5	[1135]	GETTABLE 	R4 R1 K2 ; R4 := R1["heading"]
	6	[1135]	GETTABLE 	R5 R0 K2 ; R5 := R0["heading"]
	7	[1135]	GETGLOBAL	R6 K4 ; R6 := 0x67652851
	8	[1135]	CALL     	R6 1 2 ; R6 := R6()
	9	[1135]	MUL      	R6 R6 K5 ; R6 := R6 * 8.000000
	10	[1135]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	11	[1135]	SETTABLE 	R1 K2 R3 ; R1["heading"] := R3
	12	[1136]	GETGLOBAL	R3 K3 ; R3 := 0x9bafffe3
	13	[1136]	GETTABLE 	R4 R1 K6 ; R4 := R1["pitch"]
	14	[1136]	GETTABLE 	R5 R0 K6 ; R5 := R0["pitch"]
	15	[1136]	GETGLOBAL	R6 K4 ; R6 := 0x67652851
	16	[1136]	CALL     	R6 1 2 ; R6 := R6()
	17	[1136]	MUL      	R6 R6 K5 ; R6 := R6 * 8.000000
	18	[1136]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	19	[1136]	SETTABLE 	R1 K6 R3 ; R1["pitch"] := R3
	20	[1137]	SELF     	R3 R2 K7 ; R4 := R2; R3 := R2[0xb63fc1d8]
	21	[1137]	GETGLOBAL	R5 K8 ; R5 := 0x0469f296
	22	[1137]	LOADK    	R6 K9 ; R6 := "GAME_C1_HEAD1"
	23	[1137]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[1137]	MOVE     	R6 R1 ; R6 := R1
	25	[1137]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	26	[1138]	RETURN   	R1 2 ; return R1 
	27	[1139]	RETURN   	R0 1 ; return 

function #29 <?:1142,1143> (1 instruction, 4 bytes at 00000160C67F07F0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[1143]	RETURN   	R0 1 ; return 

function #30 <?:1145,1217> (19 instructions, 76 bytes at 00000160C67F08C0)
0 params, 2 slots, 0 upvalues, 0 locals, 6 constants, 3 functions
	1	[1146]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1146]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[1146]	GETTABLE 	R1 R1 K2 ; R1 := R1["profileIconList"]
	4	[1146]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[1146]	TEST     	R0 0 ; if not R0 then PC := 19
	6	[1146]	JMP      	19 ; PC := 19
	7	[1147]	GETGLOBAL	R0 K1 ; R0 := _T
	8	[1147]	NEWTABLE 	R1 0 0 ; R1 := {}
	9	[1147]	SETTABLE 	R0 K2 R1 ; R0["profileIconList"] := R1
	10	[1148]	GETGLOBAL	R0 K1 ; R0 := _T
	11	[1156]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	12	[1156]	SETTABLE 	R0 K3 R1 ; R0["GetLocalLoadout"] := R1
	13	[1157]	GETGLOBAL	R0 K1 ; R0 := _T
	14	[1179]	CLOSURE  	R1 1 ; R1 := closure(Function #2)
	15	[1179]	SETTABLE 	R0 K4 R1 ; R0[0x7b998233] := R1
	16	[1180]	GETGLOBAL	R0 K1 ; R0 := _T
	17	[1215]	CLOSURE  	R1 2 ; R1 := closure(Function #3)
	18	[1215]	SETTABLE 	R0 K5 R1 ; R0["UpdateProfileIconList"] := R1
	19	[1217]	RETURN   	R0 1 ; return 

function #31 <?:1220,1231> (35 instructions, 140 bytes at 00000160C67F1650)
2 params, 10 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1221]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[1221]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[1221]	GETTABLE 	R3 R3 K2 ; R3 := R3["profileIconList"]
	4	[1221]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[1221]	TEST     	R2 0 ; if not R2 then PC := 8
	6	[1221]	JMP      	8 ; PC := 8
	7	[1222]	RETURN   	R0 1 ; return 
	8	[1224]	GETGLOBAL	R2 K1 ; R2 := _T
	9	[1224]	GETTABLE 	R2 R2 K2 ; R2 := R2["profileIconList"]
	10	[1224]	LEN      	R2 R2 ; R2 := # R2
	11	[1225]	LOADK    	R3 := 1.000000
	12	[1225]	MOVE     	R4 R2 ; R4 := R2
	13	[1225]	LOADK    	R5 := 1.000000
	14	[1225]	FORPREP  	R3 34 ; R3 -= R5; PC := 34
	15	[1226]	GETGLOBAL	R7 K1 ; R7 := _T
	16	[1226]	GETTABLE 	R7 R7 K2 ; R7 := R7["profileIconList"]
	17	[1226]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	18	[1226]	GETTABLE 	R7 R7 K3 ; R7 := R7["Movie"]
	19	[1226]	EQ       	0 R7 R0 ; if R7 ~= R0 then PC := 34
	20	[1226]	JMP      	34 ; PC := 34
	21	[1226]	GETGLOBAL	R7 K1 ; R7 := _T
	22	[1226]	GETTABLE 	R7 R7 K2 ; R7 := R7["profileIconList"]
	23	[1226]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	24	[1226]	GETTABLE 	R7 R7 K4 ; R7 := R7["Clip"]
	25	[1226]	EQ       	0 R7 R1 ; if R7 ~= R1 then PC := 34
	26	[1226]	JMP      	34 ; PC := 34
	27	[1227]	GETGLOBAL	R7 K5 ; R7 := 0x33bdd652
	28	[1227]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x9c1f3b5a]
	29	[1227]	GETGLOBAL	R8 K1 ; R8 := _T
	30	[1227]	GETTABLE 	R8 R8 K2 ; R8 := R8["profileIconList"]
	31	[1227]	MOVE     	R9 R6 ; R9 := R6
	32	[1227]	CALL     	R7 3 1 ; R7(R8,R9)
	33	[1228]	RETURN   	R0 1 ; return 
	34	[1225]	FORLOOP  	R3 15 ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
	35	[1231]	RETURN   	R0 1 ; return 

function #32 <?:1233,1253> (42 instructions, 168 bytes at 00000160C67F18A0)
3 params, 12 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[1234]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[1234]	GETGLOBAL	R4 K1 ; R4 := _T
	3	[1234]	GETTABLE 	R4 R4 K2 ; R4 := R4["profileIconList"]
	4	[1234]	CALL     	R3 2 2 ; R3 := R3(R4)
	5	[1234]	TEST     	R3 0 ; if not R3 then PC := 8
	6	[1234]	JMP      	8 ; PC := 8
	7	[1235]	RETURN   	R0 1 ; return 
	8	[1237]	NEWTABLE 	R3 0 3 ; R3 := {}
	9	[1237]	SETTABLE 	R3 K3 R0 ; R3["Movie"] := R0
	10	[1237]	SETTABLE 	R3 K4 R1 ; R3["Clip"] := R1
	11	[1237]	SETTABLE 	R3 K5 R2 ; R3["HumanPlayer"] := R2
	12	[1239]	OP_LOADBOOL	R4 0 0 ; R4 := false
	13	[1240]	GETGLOBAL	R5 K1 ; R5 := _T
	14	[1240]	GETTABLE 	R5 R5 K2 ; R5 := R5["profileIconList"]
	15	[1240]	LEN      	R5 R5 ; R5 := # R5
	16	[1241]	LOADK    	R6 := 1.000000
	17	[1241]	MOVE     	R7 R5 ; R7 := R5
	18	[1241]	LOADK    	R8 := 1.000000
	19	[1241]	FORPREP  	R6 32 ; R6 -= R8; PC := 32
	20	[1242]	GETGLOBAL	R10 K1 ; R10 := _T
	21	[1242]	GETTABLE 	R10 R10 K2 ; R10 := R10["profileIconList"]
	22	[1242]	GETTABLE 	R10 R10 R9 ; R10 := R10[R9]
	23	[1242]	GETTABLE 	R10 R10 K4 ; R10 := R10["Clip"]
	24	[1242]	GETTABLE 	R11 R3 K4 ; R11 := R3["Clip"]
	25	[1242]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 32
	26	[1242]	JMP      	32 ; PC := 32
	27	[1243]	OP_LOADBOOL	R4 1 0 ; R4 := true
	28	[1244]	GETGLOBAL	R10 K1 ; R10 := _T
	29	[1244]	GETTABLE 	R10 R10 K2 ; R10 := R10["profileIconList"]
	30	[1244]	SETTABLE 	R10 R9 R3 ; R10[R9] := R3
	31	[1245]	JMP      	33 ; PC := 33
	32	[1241]	FORLOOP  	R6 20 ; R6 += R8; if R6 <= R7 then begin PC := 20; R9 := R6 end
	33	[1249]	TEST     	R4 1 ; if R4 then PC := 39
	34	[1249]	JMP      	39 ; PC := 39
	35	[1250]	GETGLOBAL	R10 K1 ; R10 := _T
	36	[1250]	GETTABLE 	R10 R10 K2 ; R10 := R10["profileIconList"]
	37	[1250]	ADD      	R11 R5 K6 ; R11 := R5 + 1.000000
	38	[1250]	SETTABLE 	R10 R11 R3 ; R10[R11] := R3
	39	[1252]	GETGLOBAL	R10 K1 ; R10 := _T
	40	[1252]	SELF     	R10 R10 K7 ; R11 := R10; R10 := R10[0x6ee6cad5]
	41	[1252]	CALL     	R10 2 1 ; R10(R11)
	42	[1253]	RETURN   	R0 1 ; return 

function #33 <?:1256,1266> (33 instructions, 132 bytes at 00000160C67F1B40)
5 params, 12 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1257]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	2	[1257]	GETGLOBAL	R6 K1 ; R6 := 0x25d99d89
	3	[1257]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[1257]	TEST     	R5 0 ; if not R5 then PC := 7
	5	[1257]	JMP      	7 ; PC := 7
	6	[1258]	RETURN   	R0 1 ; return 
	7	[1261]	GETGLOBAL	R5 K2 ; R5 := REPORT_PLAYER
	8	[1261]	EQ       	0 R3 R5 ; if R3 ~= R5 then PC := 23
	9	[1261]	JMP      	23 ; PC := 23
	10	[1262]	GETGLOBAL	R5 K1 ; R5 := 0x25d99d89
	11	[1262]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0x024a42a1]
	12	[1262]	MOVE     	R7 R0 ; R7 := R0
	13	[1262]	GETGLOBAL	R8 K4 ; R8 := 0x89326c93
	14	[1262]	SELF     	R8 R8 K5 ; R9 := R8; R8 := R8[0xfb64e76c]
	15	[1262]	CALL     	R8 2 2 ; R8 := R8(R9)
	16	[1262]	SELF     	R8 R8 K6 ; R9 := R8; R8 := R8[0x5ca33548]
	17	[1262]	CALL     	R8 2 2 ; R8 := R8(R9)
	18	[1262]	MOVE     	R9 R1 ; R9 := R1
	19	[1262]	MOVE     	R10 R2 ; R10 := R2
	20	[1262]	MOVE     	R11 R4 ; R11 := R4
	21	[1262]	CALL     	R5 7 1 ; R5(R6,R7,R8,R9,R10,R11)
	22	[1262]	JMP      	33 ; PC := 33
	23	[1263]	GETGLOBAL	R5 K7 ; R5 := REPORT_CLAN_AD
	24	[1263]	EQ       	0 R3 R5 ; if R3 ~= R5 then PC := 33
	25	[1263]	JMP      	33 ; PC := 33
	26	[1264]	GETGLOBAL	R5 K1 ; R5 := 0x25d99d89
	27	[1264]	SELF     	R5 R5 K8 ; R6 := R5; R5 := R5[0xd58aef72]
	28	[1264]	MOVE     	R7 R0 ; R7 := R0
	29	[1264]	MOVE     	R8 R1 ; R8 := R1
	30	[1264]	MOVE     	R9 R2 ; R9 := R2
	31	[1264]	MOVE     	R10 R4 ; R10 := R4
	32	[1264]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	33	[1266]	RETURN   	R0 1 ; return 

function #34 <?:1268,1314> (47 instructions, 188 bytes at 00000160C67F1DB0)
2 params, 7 slots, 0 upvalues, 0 locals, 14 constants, 2 functions
	1	[1269]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[1269]	MOVE     	R3 R0 ; R3 := R0
	3	[1269]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[1269]	TEST     	R2 1 ; if R2 then PC := 12
	5	[1269]	JMP      	12 ; PC := 12
	6	[1269]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[1269]	GETGLOBAL	R3 K1 ; R3 := 0x0032441c
	8	[1269]	GETTABLE 	R3 R3 K2 ; R3 := R3["UIMovie_GenericSettings"]
	9	[1269]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[1269]	TEST     	R2 0 ; if not R2 then PC := 13
	11	[1269]	JMP      	13 ; PC := 13
	12	[1270]	RETURN   	R0 1 ; return 
	13	[1273]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x1fd6abd0]
	14	[1273]	GETGLOBAL	R4 K1 ; R4 := 0x0032441c
	15	[1273]	GETTABLE 	R4 R4 K2 ; R4 := R4["UIMovie_GenericSettings"]
	16	[1273]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	17	[1274]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	18	[1274]	MOVE     	R4 R2 ; R4 := R2
	19	[1274]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[1274]	TEST     	R3 0 ; if not R3 then PC := 23
	21	[1274]	JMP      	23 ; PC := 23
	22	[1275]	RETURN   	R0 1 ; return 
	23	[1278]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0xe4162eed]
	24	[1278]	LOADK    	R5 K5 ; R5 := "SetTitle"
	25	[1278]	LOADK    	R6 K6 ; R6 := "/Lotus/Language/Menu/ReportPlayer_DetailsTitle"
	26	[1278]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	27	[1279]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0xe4162eed]
	28	[1279]	LOADK    	R5 K7 ; R5 := "SetConfirmButtonActive"
	29	[1279]	LOADK    	R6 K8 ; R6 := "true"
	30	[1279]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	31	[1280]	GETGLOBAL	R3 K9 ; R3 := _T
	32	[1294]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	33	[1294]	MOVE     	R0 R1 ; R0 := R1
	34	[1294]	MOVE     	R0 R0 ; R0 := R0
	35	[1294]	SETTABLE 	R3 K10 R4 ; R3[0xe4162eed] := R4
	36	[1295]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0xe4162eed]
	37	[1295]	LOADK    	R5 K11 ; R5 := "SetCallBack"
	38	[1295]	LOADK    	R6 K10 ; R6 := "ReportReason_Done"
	39	[1295]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	40	[1297]	GETGLOBAL	R3 K9 ; R3 := _T
	41	[1312]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	42	[1312]	SETTABLE 	R3 K12 R4 ; R3["ReportReason_GetSettings"] := R4
	43	[1313]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0xe4162eed]
	44	[1313]	LOADK    	R5 K13 ; R5 := "SetElementsFunction"
	45	[1313]	LOADK    	R6 K12 ; R6 := "ReportReason_GetSettings"
	46	[1313]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	47	[1314]	RETURN   	R0 1 ; return 

function #35 <?:1316,1407> (75 instructions, 300 bytes at 00000160C67F2900)
5 params, 16 slots, 4 upvalues, 0 locals, 20 constants, 5 functions
	1	[1317]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	2	[1317]	MOVE     	R6 R0 ; R6 := R0
	3	[1317]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[1317]	TEST     	R5 1 ; if R5 then PC := 12
	5	[1317]	JMP      	12 ; PC := 12
	6	[1317]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	7	[1317]	GETGLOBAL	R6 K1 ; R6 := 0x0032441c
	8	[1317]	GETTABLE 	R6 R6 K2 ; R6 := R6["UIMovie_GenericMenu"]
	9	[1317]	CALL     	R5 2 2 ; R5 := R5(R6)
	10	[1317]	TEST     	R5 0 ; if not R5 then PC := 14
	11	[1317]	JMP      	14 ; PC := 14
	12	[1318]	LOADNIL  	R5 R5 ; R5 := nil
	13	[1318]	RETURN   	R5 2 ; return R5 
	14	[1321]	EQ       	0 R4 K3 ; if R4 ~= nil then PC := 17
	15	[1321]	JMP      	17 ; PC := 17
	16	[1322]	GETGLOBAL	R4 K4 ; R4 := REPORT_PLAYER
	17	[1325]	LOADK    	R5 K5 ; R5 := ""
	18	[1326]	LOADK    	R6 K5 ; R6 := ""
	19	[1327]	GETUPVAL 	R7 U0 ; R7 := U0
	20	[1327]	MOVE     	R8 R0 ; R8 := R0
	21	[1327]	LOADK    	R9 := 1.000000
	22	[1327]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	23	[1340]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	24	[1340]	MOVE     	R0 R6 ; R0 := R6
	25	[1340]	GETUPVAL 	R0 U1 ; R0 := U1
	26	[1340]	MOVE     	R0 R3 ; R0 := R3
	27	[1340]	SETTABLE 	R7 K6 R8 ; R7["ConfirmReport"] := R8
	28	[1349]	CLOSURE  	R8 1 ; R8 := closure(Function #2)
	29	[1349]	GETUPVAL 	R0 U2 ; R0 := U2
	30	[1349]	MOVE     	R0 R1 ; R0 := R1
	31	[1349]	MOVE     	R0 R5 ; R0 := R5
	32	[1349]	MOVE     	R0 R6 ; R0 := R6
	33	[1349]	MOVE     	R0 R4 ; R0 := R4
	34	[1349]	MOVE     	R0 R2 ; R0 := R2
	35	[1349]	SETTABLE 	R7 K7 R8 ; R7["OnConfirmReport"] := R8
	36	[1368]	CLOSURE  	R8 2 ; R8 := closure(Function #3)
	37	[1368]	GETUPVAL 	R0 U1 ; R0 := U1
	38	[1368]	MOVE     	R0 R5 ; R0 := R5
	39	[1368]	MOVE     	R0 R2 ; R0 := R2
	40	[1368]	MOVE     	R0 R7 ; R0 := R7
	41	[1368]	SETTABLE 	R7 K8 R8 ; R7["OnReported"] := R8
	42	[1370]	SELF     	R8 R0 K9 ; R9 := R0; R8 := R0[0x1fd6abd0]
	43	[1370]	GETGLOBAL	R10 K1 ; R10 := 0x0032441c
	44	[1370]	GETTABLE 	R10 R10 K2 ; R10 := R10["UIMovie_GenericMenu"]
	45	[1370]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	46	[1371]	SELF     	R9 R8 K10 ; R10 := R8; R9 := R8[0xe4162eed]
	47	[1371]	LOADK    	R11 K11 ; R11 := "SetTitle"
	48	[1371]	SELF     	R12 R0 K12 ; R13 := R0; R12 := R0[0x42b04007]
	49	[1371]	LOADK    	R14 K13 ; R14 := "/Lotus/Language/Menu/SocialOverlay_ReportPlayer"
	50	[1371]	OP_LOADBOOL	R15 0 0 ; R15 := false
	51	[1371]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	52	[1371]	LOADK    	R13 K14 ; R13 := " "
	53	[1371]	MOVE     	R14 R1 ; R14 := R1
	54	[1371]	CONCAT   	R12 R12 R14 ; R12 := R12 .. R13 .. R14
	55	[1371]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	56	[1373]	GETGLOBAL	R9 K15 ; R9 := _T
	57	[1385]	CLOSURE  	R10 3 ; R10 := closure(Function #4)
	58	[1385]	MOVE     	R0 R5 ; R0 := R5
	59	[1385]	GETUPVAL 	R0 U3 ; R0 := U3
	60	[1385]	MOVE     	R0 R0 ; R0 := R0
	61	[1385]	MOVE     	R0 R2 ; R0 := R2
	62	[1385]	SETTABLE 	R9 K16 R10 ; R9["ReportSelectionDone"] := R10
	63	[1386]	SELF     	R9 R8 K10 ; R10 := R8; R9 := R8[0xe4162eed]
	64	[1386]	LOADK    	R11 K17 ; R11 := "SetCallBack"
	65	[1386]	LOADK    	R12 K16 ; R12 := "ReportSelectionDone"
	66	[1386]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	67	[1388]	GETGLOBAL	R9 K15 ; R9 := _T
	68	[1403]	CLOSURE  	R10 4 ; R10 := closure(Function #5)
	69	[1403]	SETTABLE 	R9 K18 R10 ; R9["GetReportOptions"] := R10
	70	[1404]	SELF     	R9 R8 K10 ; R10 := R8; R9 := R8[0xe4162eed]
	71	[1404]	LOADK    	R11 K19 ; R11 := "SetElementsFunction"
	72	[1404]	LOADK    	R12 K18 ; R12 := "GetReportOptions"
	73	[1404]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	74	[1406]	RETURN   	R8 2 ; return R8 
	75	[1407]	RETURN   	R0 1 ; return 

function #36 <?:1409,1411> (6 instructions, 24 bytes at 00000160C67F4390)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1410]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1410]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x15ba5fe6]
	3	[1410]	MOVE     	R2 R0 ; R2 := R0
	4	[1410]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[1410]	RETURN   	R1 2 ; return R1 
	6	[1411]	RETURN   	R0 1 ; return 

function #37 <?:1413,1415> (8 instructions, 32 bytes at 00000160C67F44A0)
3 params, 7 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1414]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1414]	GETTABLE 	R3 R3 K0 ; R3 := R3[0x6d7e6810]
	3	[1414]	MOVE     	R4 R0 ; R4 := R0
	4	[1414]	MOVE     	R5 R1 ; R5 := R1
	5	[1414]	MOVE     	R6 R2 ; R6 := R2
	6	[1414]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	7	[1414]	RETURN   	R3 2 ; return R3 
	8	[1415]	RETURN   	R0 1 ; return 

function #38 <?:1417,1419> (8 instructions, 32 bytes at 00000160C67F45B0)
3 params, 7 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1418]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1418]	GETTABLE 	R3 R3 K0 ; R3 := R3[0xb5be5d4a]
	3	[1418]	MOVE     	R4 R0 ; R4 := R0
	4	[1418]	MOVE     	R5 R1 ; R5 := R1
	5	[1418]	MOVE     	R6 R2 ; R6 := R2
	6	[1418]	TAILCALL 	R3 4 0 ; R3,... := R3(R4,R5,R6)
	7	[1418]	RETURN   	R3 0 ; return R3,... 
	8	[1419]	RETURN   	R0 1 ; return 

function #39 <?:1421,1423> (12 instructions, 48 bytes at 00000160C67F46C0)
7 params, 15 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1422]	GETUPVAL 	R7 U0 ; R7 := U0
	2	[1422]	GETTABLE 	R7 R7 K0 ; R7 := R7[0x5a22d251]
	3	[1422]	MOVE     	R8 R0 ; R8 := R0
	4	[1422]	MOVE     	R9 R1 ; R9 := R1
	5	[1422]	MOVE     	R10 R2 ; R10 := R2
	6	[1422]	MOVE     	R11 R3 ; R11 := R3
	7	[1422]	MOVE     	R12 R4 ; R12 := R4
	8	[1422]	MOVE     	R13 R5 ; R13 := R5
	9	[1422]	MOVE     	R14 R6 ; R14 := R6
	10	[1422]	TAILCALL 	R7 8 0 ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
	11	[1422]	RETURN   	R7 0 ; return R7,... 
	12	[1423]	RETURN   	R0 1 ; return 

function #40 <?:1426,1453> (91 instructions, 364 bytes at 00000160C67F47F0)
4 params, 19 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[1427]	NEWTABLE 	R4 0 0 ; R4 := {}
	2	[1428]	LOADK    	R5 := 1.000000
	3	[1428]	LOADK    	R6 := 4.000000
	4	[1428]	LOADK    	R7 := 1.000000
	5	[1428]	FORPREP  	R5 89 ; R5 -= R7; PC := 89
	6	[1429]	LOADNIL  	R9 R9 ; R9 := nil
	7	[1430]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	8	[1430]	MOVE     	R11 R2 ; R11 := R2
	9	[1430]	CALL     	R10 2 2 ; R10 := R10(R11)
	10	[1430]	TEST     	R10 1 ; if R10 then PC := 16
	11	[1430]	JMP      	16 ; PC := 16
	12	[1431]	SELF     	R10 R2 K1 ; R11 := R2; R10 := R2[0x41a92792]
	13	[1431]	SUB      	R12 R8 K2 ; R12 := R8 - 1.000000
	14	[1431]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	15	[1431]	MOVE     	R9 R10 ; R9 := R10
	16	[1434]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	17	[1434]	MOVE     	R11 R9 ; R11 := R9
	18	[1434]	CALL     	R10 2 2 ; R10 := R10(R11)
	19	[1434]	TEST     	R10 1 ; if R10 then PC := 64
	20	[1434]	JMP      	64 ; PC := 64
	21	[1435]	GETGLOBAL	R10 K3 ; R10 := 0xb009bbc6
	22	[1435]	MOVE     	R11 R9 ; R11 := R9
	23	[1435]	CALL     	R10 2 2 ; R10 := R10(R11)
	24	[1436]	SETTABLE 	R4 R8 R10 ; R4[R8] := R10
	25	[1438]	SELF     	R11 R10 K4 ; R12 := R10; R11 := R10[0xd3a9d01f]
	26	[1438]	CALL     	R11 2 2 ; R11 := R11(R12)
	27	[1439]	SELF     	R12 R0 K5 ; R13 := R0; R12 := R0[0x20b98db3]
	28	[1439]	MOVE     	R14 R1 ; R14 := R1
	29	[1439]	LOADK    	R15 K6 ; R15 := ".Ability"
	30	[1439]	MOVE     	R16 R8 ; R16 := R8
	31	[1439]	LOADK    	R17 K7 ; R17 := ".Name.text"
	32	[1439]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	33	[1439]	SELF     	R15 R11 K8 ; R16 := R11; R15 := R11[0x6d604ba7]
	34	[1439]	CALL     	R15 2 0 ; R15,... := R15(R16)
	35	[1439]	CALL     	R12 0 1 ; R12(R13,...)
	36	[1441]	SELF     	R12 R10 K9 ; R13 := R10; R12 := R10[0x056dcf06]
	37	[1441]	CALL     	R12 2 2 ; R12 := R12(R13)
	38	[1442]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	39	[1442]	MOVE     	R14 R12 ; R14 := R12
	40	[1442]	CALL     	R13 2 2 ; R13 := R13(R14)
	41	[1442]	TEST     	R13 1 ; if R13 then PC := 51
	42	[1442]	JMP      	51 ; PC := 51
	43	[1443]	SELF     	R13 R0 K10 ; R14 := R0; R13 := R0[0x1cb415c1]
	44	[1443]	MOVE     	R15 R1 ; R15 := R1
	45	[1443]	LOADK    	R16 K6 ; R16 := ".Ability"
	46	[1443]	MOVE     	R17 R8 ; R17 := R8
	47	[1443]	LOADK    	R18 K11 ; R18 := ".Icon"
	48	[1443]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	49	[1443]	MOVE     	R16 R12 ; R16 := R12
	50	[1443]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	51	[1445]	SELF     	R13 R0 K12 ; R14 := R0; R13 := R0[0xaade900e]
	52	[1445]	MOVE     	R15 R1 ; R15 := R1
	53	[1445]	LOADK    	R16 K6 ; R16 := ".Ability"
	54	[1445]	MOVE     	R17 R8 ; R17 := R8
	55	[1445]	LOADK    	R18 K11 ; R18 := ".Icon"
	56	[1445]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	57	[1445]	LOADK    	R16 := 11.000000
	58	[1445]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	59	[1445]	MOVE     	R18 R12 ; R18 := R12
	60	[1445]	CALL     	R17 2 2 ; R17 := R17(R18)
	61	[1445]	NOT      	R17 R17 ; R17 := not R17
	62	[1445]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	63	[1445]	JMP      	89 ; PC := 89
	64	[1447]	SELF     	R13 R0 K5 ; R14 := R0; R13 := R0[0x20b98db3]
	65	[1447]	MOVE     	R15 R1 ; R15 := R1
	66	[1447]	LOADK    	R16 K6 ; R16 := ".Ability"
	67	[1447]	MOVE     	R17 R8 ; R17 := R8
	68	[1447]	LOADK    	R18 K7 ; R18 := ".Name.text"
	69	[1447]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	70	[1447]	LOADK    	R16 K13 ; R16 := ""
	71	[1447]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	72	[1448]	SELF     	R13 R0 K10 ; R14 := R0; R13 := R0[0x1cb415c1]
	73	[1448]	MOVE     	R15 R1 ; R15 := R1
	74	[1448]	LOADK    	R16 K6 ; R16 := ".Ability"
	75	[1448]	MOVE     	R17 R8 ; R17 := R8
	76	[1448]	LOADK    	R18 K11 ; R18 := ".Icon"
	77	[1448]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	78	[1448]	LOADNIL  	R16 R16 ; R16 := nil
	79	[1448]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	80	[1449]	SELF     	R13 R0 K12 ; R14 := R0; R13 := R0[0xaade900e]
	81	[1449]	MOVE     	R15 R1 ; R15 := R1
	82	[1449]	LOADK    	R16 K6 ; R16 := ".Ability"
	83	[1449]	MOVE     	R17 R8 ; R17 := R8
	84	[1449]	LOADK    	R18 K11 ; R18 := ".Icon"
	85	[1449]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	86	[1449]	LOADK    	R16 := 11.000000
	87	[1449]	OP_LOADBOOL	R17 0 0 ; R17 := false
	88	[1449]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	89	[1428]	FORLOOP  	R5 6 ; R5 += R7; if R5 <= R6 then begin PC := 6; R8 := R5 end
	90	[1452]	RETURN   	R4 2 ; return R4 
	91	[1453]	RETURN   	R0 1 ; return 

function #41 <?:1456,1482> (88 instructions, 352 bytes at 00000160C67F4CF0)
4 params, 18 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[1457]	NEWTABLE 	R4 0 0 ; R4 := {}
	2	[1458]	LOADK    	R5 := 1.000000
	3	[1458]	LOADK    	R6 := 4.000000
	4	[1458]	LOADK    	R7 := 1.000000
	5	[1458]	FORPREP  	R5 86 ; R5 -= R7; PC := 86
	6	[1459]	LOADNIL  	R9 R9 ; R9 := nil
	7	[1460]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	8	[1460]	MOVE     	R11 R2 ; R11 := R2
	9	[1460]	CALL     	R10 2 2 ; R10 := R10(R11)
	10	[1460]	TEST     	R10 1 ; if R10 then PC := 16
	11	[1460]	JMP      	16 ; PC := 16
	12	[1461]	SELF     	R10 R2 K1 ; R11 := R2; R10 := R2[0xdaddfb73]
	13	[1461]	SUB      	R12 R8 K2 ; R12 := R8 - 1.000000
	14	[1461]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	15	[1461]	MOVE     	R9 R10 ; R9 := R10
	16	[1464]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	17	[1464]	MOVE     	R11 R9 ; R11 := R9
	18	[1464]	CALL     	R10 2 2 ; R10 := R10(R11)
	19	[1464]	TEST     	R10 1 ; if R10 then PC := 61
	20	[1464]	JMP      	61 ; PC := 61
	21	[1465]	SETTABLE 	R4 R8 R9 ; R4[R8] := R9
	22	[1467]	SELF     	R10 R9 K3 ; R11 := R9; R10 := R9[0xd3a9d01f]
	23	[1467]	CALL     	R10 2 2 ; R10 := R10(R11)
	24	[1468]	SELF     	R11 R0 K4 ; R12 := R0; R11 := R0[0x20b98db3]
	25	[1468]	MOVE     	R13 R1 ; R13 := R1
	26	[1468]	LOADK    	R14 K5 ; R14 := ".Ability"
	27	[1468]	MOVE     	R15 R8 ; R15 := R8
	28	[1468]	LOADK    	R16 K6 ; R16 := ".Name.text"
	29	[1468]	CONCAT   	R13 R13 R16 ; R13 := R13 .. R14 .. R15 .. R16
	30	[1468]	SELF     	R14 R10 K7 ; R15 := R10; R14 := R10[0x6d604ba7]
	31	[1468]	CALL     	R14 2 0 ; R14,... := R14(R15)
	32	[1468]	CALL     	R11 0 1 ; R11(R12,...)
	33	[1470]	SELF     	R11 R9 K8 ; R12 := R9; R11 := R9[0x056dcf06]
	34	[1470]	CALL     	R11 2 2 ; R11 := R11(R12)
	35	[1471]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	36	[1471]	MOVE     	R13 R11 ; R13 := R11
	37	[1471]	CALL     	R12 2 2 ; R12 := R12(R13)
	38	[1471]	TEST     	R12 1 ; if R12 then PC := 48
	39	[1471]	JMP      	48 ; PC := 48
	40	[1472]	SELF     	R12 R0 K9 ; R13 := R0; R12 := R0[0x1cb415c1]
	41	[1472]	MOVE     	R14 R1 ; R14 := R1
	42	[1472]	LOADK    	R15 K5 ; R15 := ".Ability"
	43	[1472]	MOVE     	R16 R8 ; R16 := R8
	44	[1472]	LOADK    	R17 K10 ; R17 := ".Icon"
	45	[1472]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	46	[1472]	MOVE     	R15 R11 ; R15 := R11
	47	[1472]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	48	[1474]	SELF     	R12 R0 K11 ; R13 := R0; R12 := R0[0xaade900e]
	49	[1474]	MOVE     	R14 R1 ; R14 := R1
	50	[1474]	LOADK    	R15 K5 ; R15 := ".Ability"
	51	[1474]	MOVE     	R16 R8 ; R16 := R8
	52	[1474]	LOADK    	R17 K10 ; R17 := ".Icon"
	53	[1474]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	54	[1474]	LOADK    	R15 := 11.000000
	55	[1474]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	56	[1474]	MOVE     	R17 R11 ; R17 := R11
	57	[1474]	CALL     	R16 2 2 ; R16 := R16(R17)
	58	[1474]	NOT      	R16 R16 ; R16 := not R16
	59	[1474]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	60	[1474]	JMP      	86 ; PC := 86
	61	[1476]	SELF     	R12 R0 K4 ; R13 := R0; R12 := R0[0x20b98db3]
	62	[1476]	MOVE     	R14 R1 ; R14 := R1
	63	[1476]	LOADK    	R15 K5 ; R15 := ".Ability"
	64	[1476]	MOVE     	R16 R8 ; R16 := R8
	65	[1476]	LOADK    	R17 K6 ; R17 := ".Name.text"
	66	[1476]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	67	[1476]	LOADK    	R15 K12 ; R15 := "/Lotus/Language/Menu/Empty_Precept"
	68	[1476]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	69	[1477]	SELF     	R12 R0 K9 ; R13 := R0; R12 := R0[0x1cb415c1]
	70	[1477]	MOVE     	R14 R1 ; R14 := R1
	71	[1477]	LOADK    	R15 K5 ; R15 := ".Ability"
	72	[1477]	MOVE     	R16 R8 ; R16 := R8
	73	[1477]	LOADK    	R17 K10 ; R17 := ".Icon"
	74	[1477]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	75	[1477]	LOADNIL  	R15 R15 ; R15 := nil
	76	[1477]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	77	[1478]	SELF     	R12 R0 K11 ; R13 := R0; R12 := R0[0xaade900e]
	78	[1478]	MOVE     	R14 R1 ; R14 := R1
	79	[1478]	LOADK    	R15 K5 ; R15 := ".Ability"
	80	[1478]	MOVE     	R16 R8 ; R16 := R8
	81	[1478]	LOADK    	R17 K10 ; R17 := ".Icon"
	82	[1478]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	83	[1478]	LOADK    	R15 := 11.000000
	84	[1478]	OP_LOADBOOL	R16 0 0 ; R16 := false
	85	[1478]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	86	[1458]	FORLOOP  	R5 6 ; R5 += R7; if R5 <= R6 then begin PC := 6; R8 := R5 end
	87	[1481]	RETURN   	R4 2 ; return R4 
	88	[1482]	RETURN   	R0 1 ; return 

function #42 <?:1485,1543> (23 instructions, 92 bytes at 00000160C67F5190)
1 param, 3 slots, 1 upvalue, 0 locals, 14 constants, 5 functions
	1	[1486]	NEWTABLE 	R1 0 9 ; R1 := {}
	2	[1488]	SETTABLE 	R1 K0 K1 ; R1["mIndex"] := 0.000000
	3	[1489]	SETTABLE 	R1 K2 K3 ; R1["mMovie"] := nil
	4	[1490]	SETTABLE 	R1 K4 K5 ; R1["mIsShowing"] := false
	5	[1491]	NEWTABLE 	R2 0 0 ; R2 := {}
	6	[1491]	SETTABLE 	R1 K6 R2 ; R1["mListItems"] := R2
	7	[1500]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	8	[1500]	SETTABLE 	R1 K7 R2 ; R1["Add"] := R2
	9	[1505]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	10	[1505]	SETTABLE 	R1 K8 R2 ; R1["Clear"] := R2
	11	[1509]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	12	[1509]	SETTABLE 	R1 K9 R2 ; R1["IsShowing"] := R2
	13	[1518]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	14	[1518]	SETTABLE 	R1 K10 R2 ; R1["Hide"] := R2
	15	[1539]	CLOSURE  	R2 4 ; R2 := closure(Function #5)
	16	[1539]	GETUPVAL 	R0 U0 ; R0 := U0
	17	[1539]	SETTABLE 	R1 K11 R2 ; R1["Show"] := R2
	18	[1541]	GETGLOBAL	R2 K12 ; R2 := _T
	19	[1541]	SETTABLE 	R2 K13 R1 ; R2["ContextMenu"] := R1
	20	[1542]	GETGLOBAL	R2 K12 ; R2 := _T
	21	[1542]	GETTABLE 	R2 R2 K13 ; R2 := R2["ContextMenu"]
	22	[1542]	SETTABLE 	R2 K2 R0 ; R2[0x1597ad56] := R0
	23	[1543]	RETURN   	R0 1 ; return 

function #43 <?:1546,1563> (30 instructions, 120 bytes at 00000160C67F6150)
1 param, 6 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[1547]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1547]	MOVE     	R2 R0 ; R2 := R0
	3	[1547]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1547]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[1547]	JMP      	8 ; PC := 8
	6	[1548]	LOADK    	R1 := 0.000000
	7	[1548]	RETURN   	R1 2 ; return R1 
	8	[1551]	GETTABLE 	R1 R0 K1 ; R1 := R0["mItemType"]
	9	[1552]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	10	[1552]	MOVE     	R3 R1 ; R3 := R1
	11	[1552]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[1552]	TEST     	R2 0 ; if not R2 then PC := 16
	13	[1552]	JMP      	16 ; PC := 16
	14	[1553]	LOADK    	R2 := 0.000000
	15	[1553]	RETURN   	R2 2 ; return R2 
	16	[1556]	GETTABLE 	R2 R0 K2 ; R2 := R0["mUpgradeVer"]
	17	[1556]	GETGLOBAL	R3 K3 ; R3 := 0x6c97a788
	18	[1556]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x1597ad56]
	19	[1556]	CALL     	R3 1 2 ; R3 := R3()
	20	[1556]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 24
	21	[1556]	JMP      	24 ; PC := 24
	22	[1557]	LOADK    	R2 := 0.000000
	23	[1557]	RETURN   	R2 2 ; return R2 
	24	[1561]	GETGLOBAL	R2 K5 ; R2 := 0xa94df70b
	25	[1561]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x8427bf69]
	26	[1561]	GETTABLE 	R4 R0 K7 ; R4 := R0["mXP"]
	27	[1561]	GETTABLE 	R5 R0 K1 ; R5 := R0["mItemType"]
	28	[1561]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	29	[1562]	RETURN   	R2 2 ; return R2 
	30	[1563]	RETURN   	R0 1 ; return 

function #44 <?:1566,1569> (6 instructions, 24 bytes at 00000160C67F6400)
1 param, 4 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[1567]	GETGLOBAL	R1 K0 ; R1 := 0xa94df70b
	2	[1567]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x792d6f59]
	3	[1567]	MOVE     	R3 R0 ; R3 := R0
	4	[1567]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[1568]	RETURN   	R1 2 ; return R1 
	6	[1569]	RETURN   	R0 1 ; return 

function #45 <?:1571,1573> (5 instructions, 20 bytes at 00000160C67F6520)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1572]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1572]	MOVE     	R2 R0 ; R2 := R0
	3	[1572]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[1572]	RETURN   	R1 0 ; return R1,... 
	5	[1573]	RETURN   	R0 1 ; return 

function #46 <?:1576,1589> (27 instructions, 108 bytes at 00000160C67F6610)
2 params, 7 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1577]	GETGLOBAL	R2 K0 ; R2 := 0x25d99d89
	2	[1579]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 5
	3	[1579]	JMP      	5 ; PC := 5
	4	[1580]	LOADK    	R1 := 1.000000
	5	[1583]	GETGLOBAL	R3 K2 ; R3 := 0xa94df70b
	6	[1583]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x99c4ef3a]
	7	[1583]	MOVE     	R5 R0 ; R5 := R0
	8	[1583]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	9	[1584]	GETGLOBAL	R4 K4 ; R4 := 0x6c97a788
	10	[1584]	GETTABLE 	R4 R4 K5 ; R4 := R4["MiscBin"]
	11	[1584]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 25
	12	[1584]	JMP      	25 ; PC := 25
	13	[1584]	LT       	0 R3 K6 ; if R3 >= 12.000000 then PC := 25
	14	[1584]	JMP      	25 ; PC := 25
	15	[1585]	SELF     	R4 R2 K7 ; R5 := R2; R4 := R2[0x25a6e75e]
	16	[1585]	CALL     	R4 2 2 ; R4 := R4(R5)
	17	[1585]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xb8a2d888]
	18	[1585]	MOVE     	R6 R3 ; R6 := R3
	19	[1585]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	20	[1585]	LE       	1 R1 R4 ; if R1 <= R4 then PC := 23
	21	[1585]	JMP      	23 ; PC := 23
	22	[1585]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 23
	23	[1585]	OP_LOADBOOL	R4 1 0 ; R4 := true
	24	[1585]	RETURN   	R4 2 ; return R4 
	25	[1588]	OP_LOADBOOL	R4 1 0 ; R4 := true
	26	[1588]	RETURN   	R4 2 ; return R4 
	27	[1589]	RETURN   	R0 1 ; return 

function #47 <?:1591,1607> (30 instructions, 120 bytes at 00000160C67F6870)
1 param, 6 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[1592]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1592]	MOVE     	R2 R0 ; R2 := R0
	3	[1592]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1592]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[1592]	JMP      	8 ; PC := 8
	6	[1593]	OP_LOADBOOL	R1 0 0 ; R1 := false
	7	[1593]	RETURN   	R1 2 ; return R1 
	8	[1596]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x9ed94a63]
	9	[1596]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[1598]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	11	[1598]	GETGLOBAL	R3 K2 ; R3 := 0x25d99d89
	12	[1598]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[1598]	TEST     	R2 0 ; if not R2 then PC := 20
	14	[1598]	JMP      	20 ; PC := 20
	15	[1600]	GETGLOBAL	R2 K3 ; R2 := 0x3d106989
	16	[1600]	LOADK    	R3 K4 ; R3 := "IsXPLocked: gGameData was nil"
	17	[1600]	CALL     	R2 2 1 ; R2(R3)
	18	[1601]	OP_LOADBOOL	R2 0 0 ; R2 := false
	19	[1601]	RETURN   	R2 2 ; return R2 
	20	[1604]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	21	[1604]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xefee6c91]
	22	[1604]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[1605]	LT       	1 R2 R1 ; if R2 < R1 then PC := 26
	24	[1605]	JMP      	26 ; PC := 26
	25	[1605]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 26
	26	[1605]	OP_LOADBOOL	R3 1 0 ; R3 := true
	27	[1606]	MOVE     	R4 R3 ; R4 := R3
	28	[1606]	MOVE     	R5 R1 ; R5 := R1
	29	[1606]	RETURN   	R4 3 ; return R4, R5 
	30	[1607]	RETURN   	R0 1 ; return 

function #48 <?:1609,1631> (37 instructions, 148 bytes at 00000160C67F6AE0)
1 param, 9 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1610]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1610]	MOVE     	R2 R0 ; R2 := R0
	3	[1610]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1610]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[1610]	JMP      	8 ; PC := 8
	6	[1611]	OP_LOADBOOL	R1 0 0 ; R1 := false
	7	[1611]	RETURN   	R1 2 ; return R1 
	8	[1614]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x516e225c]
	9	[1614]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[1615]	OP_LOADBOOL	R2 0 0 ; R2 := false
	11	[1616]	LT       	0 K2 R1 ; if 0.000000 >= R1 then PC := 34
	12	[1616]	JMP      	34 ; PC := 34
	13	[1617]	GETGLOBAL	R3 K3 ; R3 := 0x25d99d89
	14	[1618]	SELF     	R4 R3 K4 ; R5 := R3; R4 := R3[0x62c81b76]
	15	[1618]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[1618]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x416005a4]
	17	[1618]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[1619]	LT       	1 R4 R1 ; if R4 < R1 then PC := 21
	19	[1619]	JMP      	21 ; PC := 21
	20	[1619]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 21
	21	[1619]	OP_LOADBOOL	R2 1 0 ; R2 := true
	22	[1621]	TEST     	R2 0 ; if not R2 then PC := 34
	23	[1621]	JMP      	34 ; PC := 34
	24	[1623]	SELF     	R5 R3 K6 ; R6 := R3; R5 := R3[0x7616e196]
	25	[1623]	SELF     	R7 R0 K7 ; R8 := R0; R7 := R0[0xef3662ab]
	26	[1623]	CALL     	R7 2 0 ; R7,... := R7(R8)
	27	[1623]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	28	[1624]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	29	[1624]	GETTABLE 	R7 R5 K8 ; R7 := R5["mSuit"]
	30	[1624]	CALL     	R6 2 2 ; R6 := R6(R7)
	31	[1624]	TEST     	R6 1 ; if R6 then PC := 34
	32	[1624]	JMP      	34 ; PC := 34
	33	[1625]	OP_LOADBOOL	R2 0 0 ; R2 := false
	34	[1630]	MOVE     	R6 R2 ; R6 := R2
	35	[1630]	MOVE     	R7 R1 ; R7 := R1
	36	[1630]	RETURN   	R6 3 ; return R6, R7 
	37	[1631]	RETURN   	R0 1 ; return 

function #49 <?:1633,1635> (10 instructions, 40 bytes at 00000160C67F6DA0)
5 params, 11 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[1634]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[1634]	GETTABLE 	R5 R5 K0 ; R5 := R5[0xf76783e5]
	3	[1634]	MOVE     	R6 R0 ; R6 := R0
	4	[1634]	MOVE     	R7 R1 ; R7 := R1
	5	[1634]	MOVE     	R8 R2 ; R8 := R2
	6	[1634]	MOVE     	R9 R3 ; R9 := R3
	7	[1634]	MOVE     	R10 R4 ; R10 := R4
	8	[1634]	TAILCALL 	R5 6 0 ; R5,... := R5(R6,R7,R8,R9,R10)
	9	[1634]	RETURN   	R5 0 ; return R5,... 
	10	[1635]	RETURN   	R0 1 ; return 

function #50 <?:1637,1640> (17 instructions, 68 bytes at 00000160C67F6ED0)
0 params, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1638]	GETGLOBAL	R0 K0 ; R0 := 0x7f5022cf
	2	[1638]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x04981ab3]
	3	[1638]	GETGLOBAL	R1 K2 ; R1 := 0xa94df70b
	4	[1638]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x2608b62f]
	5	[1638]	CALL     	R1 2 0 ; R1,... := R1(R2)
	6	[1638]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[1639]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	8	[1639]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xa5c556b9]
	9	[1639]	MOVE     	R2 R0 ; R2 := R0
	10	[1639]	LOADK    	R3 K5 ; R3 := "api.dev."
	11	[1639]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[1639]	EQ       	0 R1 K6 ; if R1 ~= nil then PC := 15
	13	[1639]	JMP      	15 ; PC := 15
	14	[1639]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[1639]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[1639]	RETURN   	R1 2 ; return R1 
	17	[1640]	RETURN   	R0 1 ; return 

function #51 <?:1641,1643> (4 instructions, 16 bytes at 00000160C67F70E0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1642]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1642]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1642]	RETURN   	R0 0 ; return R0,... 
	4	[1643]	RETURN   	R0 1 ; return 

function #52 <?:1645,1648> (17 instructions, 68 bytes at 00000160C67F71B0)
0 params, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1646]	GETGLOBAL	R0 K0 ; R0 := 0x7f5022cf
	2	[1646]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x04981ab3]
	3	[1646]	GETGLOBAL	R1 K2 ; R1 := 0xa94df70b
	4	[1646]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x2608b62f]
	5	[1646]	CALL     	R1 2 0 ; R1,... := R1(R2)
	6	[1646]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[1647]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	8	[1647]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xa5c556b9]
	9	[1647]	MOVE     	R2 R0 ; R2 := R0
	10	[1647]	LOADK    	R3 K5 ; R3 := "api.test."
	11	[1647]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[1647]	EQ       	0 R1 K6 ; if R1 ~= nil then PC := 15
	13	[1647]	JMP      	15 ; PC := 15
	14	[1647]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[1647]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[1647]	RETURN   	R1 2 ; return R1 
	17	[1648]	RETURN   	R0 1 ; return 

function #53 <?:1649,1651> (4 instructions, 16 bytes at 00000160C67F73C0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1650]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1650]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1650]	RETURN   	R0 0 ; return R0,... 
	4	[1651]	RETURN   	R0 1 ; return 

function #54 <?:1653,1656> (17 instructions, 68 bytes at 00000160C67F7490)
0 params, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1654]	GETGLOBAL	R0 K0 ; R0 := 0x7f5022cf
	2	[1654]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x04981ab3]
	3	[1654]	GETGLOBAL	R1 K2 ; R1 := 0xa94df70b
	4	[1654]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x2608b62f]
	5	[1654]	CALL     	R1 2 0 ; R1,... := R1(R2)
	6	[1654]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[1655]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	8	[1655]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xa5c556b9]
	9	[1655]	MOVE     	R2 R0 ; R2 := R0
	10	[1655]	LOADK    	R3 K5 ; R3 := "/localhost/"
	11	[1655]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[1655]	EQ       	0 R1 K6 ; if R1 ~= nil then PC := 15
	13	[1655]	JMP      	15 ; PC := 15
	14	[1655]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[1655]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[1655]	RETURN   	R1 2 ; return R1 
	17	[1656]	RETURN   	R0 1 ; return 

function #55 <?:1657,1659> (4 instructions, 16 bytes at 00000160C67F76A0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1658]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1658]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1658]	RETURN   	R0 0 ; return R0,... 
	4	[1659]	RETURN   	R0 1 ; return 

function #56 <?:1661,1668> (17 instructions, 68 bytes at 00000160C67F7770)
0 params, 2 slots, 3 upvalues, 0 locals, 0 constants, 0 functions
	1	[1662]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1662]	CALL     	R0 1 2 ; R0 := R0()
	3	[1662]	TEST     	R0 1 ; if R0 then PC := 13
	4	[1662]	JMP      	13 ; PC := 13
	5	[1663]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[1663]	CALL     	R0 1 2 ; R0 := R0()
	7	[1663]	TEST     	R0 1 ; if R0 then PC := 13
	8	[1663]	JMP      	13 ; PC := 13
	9	[1664]	GETUPVAL 	R0 U2 ; R0 := U2
	10	[1664]	CALL     	R0 1 2 ; R0 := R0()
	11	[1664]	TEST     	R0 0 ; if not R0 then PC := 15
	12	[1664]	JMP      	15 ; PC := 15
	13	[1665]	OP_LOADBOOL	R0 0 0 ; R0 := false
	14	[1665]	RETURN   	R0 2 ; return R0 
	15	[1667]	OP_LOADBOOL	R0 1 0 ; R0 := true
	16	[1667]	RETURN   	R0 2 ; return R0 
	17	[1668]	RETURN   	R0 1 ; return 

function #57 <?:1670,1683> (40 instructions, 160 bytes at 00000160C67F78C0)
0 params, 3 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[1671]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1671]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[1671]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1671]	TEST     	R0 1 ; if R0 then PC := 38
	5	[1671]	JMP      	38 ; PC := 38
	6	[1672]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[1672]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[1672]	GETGLOBAL	R2 K3 ; R2 := gLotusGameRulesType
	9	[1672]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[1672]	TEST     	R0 1 ; if R0 then PC := 36
	11	[1672]	JMP      	36 ; PC := 36
	12	[1673]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	13	[1673]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	14	[1673]	GETGLOBAL	R2 K4 ; R2 := gLotusDojoGameRulesType
	15	[1673]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	16	[1673]	TEST     	R0 1 ; if R0 then PC := 36
	17	[1673]	JMP      	36 ; PC := 36
	18	[1674]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	19	[1674]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	20	[1674]	GETGLOBAL	R2 K5 ; R2 := gLotusBasePvpGameRulesType
	21	[1674]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	22	[1674]	TEST     	R0 1 ; if R0 then PC := 36
	23	[1674]	JMP      	36 ; PC := 36
	24	[1675]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	25	[1675]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	26	[1675]	GETGLOBAL	R2 K6 ; R2 := gLotusHubGameRulesType
	27	[1675]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	28	[1675]	TEST     	R0 1 ; if R0 then PC := 36
	29	[1675]	JMP      	36 ; PC := 36
	30	[1676]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	31	[1676]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	32	[1676]	GETGLOBAL	R2 K7 ; R2 := gLotusDuelGameRulesType
	33	[1676]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	34	[1676]	TEST     	R0 0 ; if not R0 then PC := 38
	35	[1676]	JMP      	38 ; PC := 38
	36	[1678]	OP_LOADBOOL	R0 1 0 ; R0 := true
	37	[1678]	RETURN   	R0 2 ; return R0 
	38	[1682]	OP_LOADBOOL	R0 0 0 ; R0 := false
	39	[1682]	RETURN   	R0 2 ; return R0 
	40	[1683]	RETURN   	R0 1 ; return 

function #58 <?:1685,1692> (27 instructions, 108 bytes at 00000160C67F7B40)
0 params, 3 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[1686]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1686]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[1686]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1686]	TEST     	R0 0 ; if not R0 then PC := 9
	5	[1686]	JMP      	9 ; PC := 9
	6	[1687]	GETGLOBAL	R0 K2 ; R0 := 0xee5faf01
	7	[1687]	RETURN   	R0 2 ; return R0 
	8	[1687]	JMP      	23 ; PC := 23
	9	[1688]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	10	[1688]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xf2deaf69]
	11	[1688]	GETGLOBAL	R2 K4 ; R2 := gLotusHubGameRulesType
	12	[1688]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	13	[1688]	TEST     	R0 1 ; if R0 then PC := 19
	14	[1688]	JMP      	19 ; PC := 19
	15	[1688]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[1688]	CALL     	R0 1 2 ; R0 := R0()
	17	[1688]	TEST     	R0 0 ; if not R0 then PC := 23
	18	[1688]	JMP      	23 ; PC := 23
	19	[1689]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	20	[1689]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xd7e23b71]
	21	[1689]	TAILCALL 	R0 2 0 ; R0,... := R0(R1)
	22	[1689]	RETURN   	R0 0 ; return R0,... 
	23	[1691]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	24	[1691]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x5e35d4d6]
	25	[1691]	TAILCALL 	R0 2 0 ; R0,... := R0(R1)
	26	[1691]	RETURN   	R0 0 ; return R0,... 
	27	[1692]	RETURN   	R0 1 ; return 

function #59 <?:1694,1727> (55 instructions, 220 bytes at 00000160C67F7D50)
0 params, 22 slots, 1 upvalue, 0 locals, 18 constants, 0 functions
	1	[1695]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[1696]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[1696]	CALL     	R1 1 2 ; R1 := R1()
	4	[1697]	SELF     	R2 R1 K0 ; R3 := R1; R2 := R1[0xc1dee03f]
	5	[1697]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[1698]	LOADK    	R3 := 1.000000
	7	[1698]	LEN      	R4 R2 ; R4 := # R2
	8	[1698]	LOADK    	R5 := 1.000000
	9	[1698]	FORPREP  	R3 53 ; R3 -= R5; PC := 53
	10	[1699]	GETTABLE 	R7 R2 R6 ; R7 := R2[R6]
	11	[1700]	GETTABLE 	R8 R7 K1 ; R8 := R7["name"]
	12	[1702]	LOADK    	R9 := 1.000000
	13	[1702]	GETTABLE 	R10 R7 K2 ; R10 := R7["sectors"]
	14	[1702]	LEN      	R10 R10 ; R10 := # R10
	15	[1702]	LOADK    	R11 := 1.000000
	16	[1702]	FORPREP  	R9 52 ; R9 -= R11; PC := 52
	17	[1703]	GETGLOBAL	R13 K3 ; R13 := 0xce225efa
	18	[1703]	LOADK    	R14 := 0.000000
	19	[1703]	CALL     	R13 2 1 ; R13(R14)
	20	[1705]	GETTABLE 	R13 R7 K2 ; R13 := R7["sectors"]
	21	[1705]	GETTABLE 	R13 R13 R12 ; R13 := R13[R12]
	22	[1707]	GETTABLE 	R14 R13 K4 ; R14 := R13["nodeType"]
	23	[1707]	EQ       	1 R14 K6 ; if R14 == 0.000000 then PC := 31
	24	[1707]	JMP      	31 ; PC := 31
	25	[1707]	GETTABLE 	R14 R13 K4 ; R14 := R13["nodeType"]
	26	[1707]	EQ       	1 R14 K7 ; if R14 == 4.000000 then PC := 31
	27	[1707]	JMP      	31 ; PC := 31
	28	[1707]	GETTABLE 	R14 R13 K4 ; R14 := R13["nodeType"]
	29	[1707]	EQ       	0 R14 K8 ; if R14 ~= 8.000000 then PC := 52
	30	[1707]	JMP      	52 ; PC := 52
	31	[1708]	GETTABLE 	R14 R13 K9 ; R14 := R13["mission"]
	32	[1709]	GETTABLE 	R15 R14 K10 ; R15 := R14["missionReward"]
	33	[1710]	GETTABLE 	R16 R15 K11 ; R16 := R15["randomizedItems"]
	34	[1711]	GETTABLE 	R17 R14 K12 ; R17 := R14["enemyCacheOverride"]
	35	[1713]	NEWTABLE 	R18 0 5 ; R18 := {}
	36	[1715]	GETTABLE 	R19 R13 K1 ; R19 := R13["name"]
	37	[1715]	SELF     	R19 R19 K13 ; R20 := R19; R19 := R19[0x6d604ba7]
	38	[1715]	CALL     	R19 2 2 ; R19 := R19(R20)
	39	[1715]	SETTABLE 	R18 K1 R19 ; R18["name"] := R19
	40	[1716]	GETTABLE 	R19 R13 K14 ; R19 := R13["locTag"]
	41	[1716]	SELF     	R19 R19 K13 ; R20 := R19; R19 := R19[0x6d604ba7]
	42	[1716]	CALL     	R19 2 2 ; R19 := R19(R20)
	43	[1716]	SETTABLE 	R18 K14 R19 ; R18["locTag"] := R19
	44	[1717]	SETTABLE 	R18 K15 R8 ; R18["regionLocTag"] := R8
	45	[1718]	SETTABLE 	R18 K11 R16 ; R18["randomizedItems"] := R16
	46	[1719]	SETTABLE 	R18 K12 R17 ; R18["enemyCacheOverride"] := R17
	47	[1721]	GETGLOBAL	R19 K16 ; R19 := 0x33bdd652
	48	[1721]	GETTABLE 	R19 R19 K17 ; R19 := R19[0x23d5322f]
	49	[1721]	MOVE     	R20 R0 ; R20 := R0
	50	[1721]	MOVE     	R21 R18 ; R21 := R18
	51	[1721]	CALL     	R19 3 1 ; R19(R20,R21)
	52	[1702]	FORLOOP  	R9 17 ; R9 += R11; if R9 <= R10 then begin PC := 17; R12 := R9 end
	53	[1698]	FORLOOP  	R3 10 ; R3 += R5; if R3 <= R4 then begin PC := 10; R6 := R3 end
	54	[1726]	RETURN   	R0 2 ; return R0 
	55	[1727]	RETURN   	R0 1 ; return 

function #60 <?:1729,1731> (4 instructions, 16 bytes at 00000160C67F82F0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1730]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1730]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1730]	RETURN   	R0 0 ; return R0,... 
	4	[1731]	RETURN   	R0 1 ; return 

function #61 <?:1733,1739> (28 instructions, 112 bytes at 00000160C67F83C0)
0 params, 3 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[1734]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1734]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[1734]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1734]	TEST     	R0 1 ; if R0 then PC := 26
	5	[1734]	JMP      	26 ; PC := 26
	6	[1734]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[1734]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[1734]	GETGLOBAL	R2 K3 ; R2 := gLotusGameRulesType
	9	[1734]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[1734]	TEST     	R0 1 ; if R0 then PC := 24
	11	[1734]	JMP      	24 ; PC := 24
	12	[1734]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	13	[1734]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	14	[1734]	GETGLOBAL	R2 K4 ; R2 := gLotusDojoGameRulesType
	15	[1734]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	16	[1734]	TEST     	R0 1 ; if R0 then PC := 24
	17	[1734]	JMP      	24 ; PC := 24
	18	[1734]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	19	[1734]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	20	[1734]	GETGLOBAL	R2 K5 ; R2 := gLotusBasePvpGameRulesType
	21	[1734]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	22	[1734]	TEST     	R0 0 ; if not R0 then PC := 26
	23	[1734]	JMP      	26 ; PC := 26
	24	[1735]	OP_LOADBOOL	R0 1 0 ; R0 := true
	25	[1735]	RETURN   	R0 2 ; return R0 
	26	[1738]	OP_LOADBOOL	R0 0 0 ; R0 := false
	27	[1738]	RETURN   	R0 2 ; return R0 
	28	[1739]	RETURN   	R0 1 ; return 

function #62 <?:1741,1743> (4 instructions, 16 bytes at 00000160C67F85C0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1742]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1742]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1742]	RETURN   	R0 0 ; return R0,... 
	4	[1743]	RETURN   	R0 1 ; return 

function #63 <?:1745,1755> (31 instructions, 124 bytes at 00000160C67F8690)
0 params, 3 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[1746]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1746]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[1746]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1746]	TEST     	R0 1 ; if R0 then PC := 29
	5	[1746]	JMP      	29 ; PC := 29
	6	[1747]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[1747]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[1747]	GETGLOBAL	R2 K3 ; R2 := gLotusPhotoBoothGameRulesType
	9	[1747]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[1747]	TEST     	R0 0 ; if not R0 then PC := 15
	11	[1747]	JMP      	15 ; PC := 15
	12	[1748]	OP_LOADBOOL	R0 0 0 ; R0 := false
	13	[1748]	RETURN   	R0 2 ; return R0 
	14	[1748]	JMP      	29 ; PC := 29
	15	[1749]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	16	[1749]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	17	[1749]	GETGLOBAL	R2 K4 ; R2 := gLotusGameRulesType
	18	[1749]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	19	[1749]	TEST     	R0 1 ; if R0 then PC := 27
	20	[1749]	JMP      	27 ; PC := 27
	21	[1749]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	22	[1749]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	23	[1749]	GETGLOBAL	R2 K5 ; R2 := gLotusBasePvpGameRulesType
	24	[1749]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	25	[1749]	TEST     	R0 0 ; if not R0 then PC := 29
	26	[1749]	JMP      	29 ; PC := 29
	27	[1750]	OP_LOADBOOL	R0 1 0 ; R0 := true
	28	[1750]	RETURN   	R0 2 ; return R0 
	29	[1754]	OP_LOADBOOL	R0 0 0 ; R0 := false
	30	[1754]	RETURN   	R0 2 ; return R0 
	31	[1755]	RETURN   	R0 1 ; return 

function #64 <?:1757,1759> (4 instructions, 16 bytes at 00000160C67F88B0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1758]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1758]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1758]	RETURN   	R0 0 ; return R0,... 
	4	[1759]	RETURN   	R0 1 ; return 

function #65 <?:1761,1772> (36 instructions, 144 bytes at 00000160C67F8980)
0 params, 7 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[1762]	GETGLOBAL	R0 K0 ; R0 := 0x7ed0a956
	2	[1762]	LOADK    	R1 K1 ; R1 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
	3	[1762]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1763]	GETUPVAL 	R1 U0 ; R1 := U0
	5	[1763]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	6	[1763]	CALL     	R1 2 3 ; R1,R2 := R1(R2)
	7	[1764]	OP_LOADBOOL	R3 1 0 ; R3 := true
	8	[1765]	LOADNIL  	R4 R4 ; R4 := nil
	9	[1767]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	10	[1767]	GETGLOBAL	R6 K4 ; R6 := 0xbe190284
	11	[1767]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[1767]	TEST     	R5 1 ; if R5 then PC := 22
	13	[1767]	JMP      	22 ; PC := 22
	14	[1767]	GETUPVAL 	R5 U1 ; R5 := U1
	15	[1767]	CALL     	R5 1 2 ; R5 := R5()
	16	[1767]	TEST     	R5 0 ; if not R5 then PC := 22
	17	[1767]	JMP      	22 ; PC := 22
	18	[1768]	GETGLOBAL	R5 K4 ; R5 := 0xbe190284
	19	[1768]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0xef893aec]
	20	[1768]	CALL     	R5 2 2 ; R5 := R5(R6)
	21	[1768]	GETTABLE 	R4 R5 K6 ; R4 := R5["keyChainName"]
	22	[1771]	EQ       	0 R1 R0 ; if R1 ~= R0 then PC := 33
	23	[1771]	JMP      	33 ; PC := 33
	24	[1771]	LE       	0 R2 K7 ; if R2 > 13.000000 then PC := 33
	25	[1771]	JMP      	33 ; PC := 33
	26	[1771]	LT       	0 R2 K8 ; if R2 >= 5.000000 then PC := 34
	27	[1771]	JMP      	34 ; PC := 34
	28	[1771]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	29	[1771]	MOVE     	R6 R4 ; R6 := R4
	30	[1771]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[1771]	NOT      	R5 R5 ; R5 := not R5
	32	[1771]	JMP      	35 ; PC := 35
	33	[1771]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 34
	34	[1771]	OP_LOADBOOL	R5 1 0 ; R5 := true
	35	[1771]	RETURN   	R5 2 ; return R5 
	36	[1772]	RETURN   	R0 1 ; return 

function #66 <?:1774,1776> (4 instructions, 16 bytes at 00000160C67F8C30)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1775]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1775]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1775]	RETURN   	R0 0 ; return R0,... 
	4	[1776]	RETURN   	R0 1 ; return 

function #67 <?:1778,1780> (4 instructions, 16 bytes at 00000160C67F8D00)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1779]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1779]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1779]	RETURN   	R0 0 ; return R0,... 
	4	[1780]	RETURN   	R0 1 ; return 

function #68 <?:1782,1784> (14 instructions, 56 bytes at 00000160C67F8DD0)
0 params, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[1783]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1783]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[1783]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1783]	TEST     	R0 1 ; if R0 then PC := 11
	5	[1783]	JMP      	11 ; PC := 11
	6	[1783]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[1783]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[1783]	GETGLOBAL	R2 K3 ; R2 := gLotusHubGameRulesType
	9	[1783]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[1783]	JMP      	13 ; PC := 13
	11	[1783]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 12
	12	[1783]	OP_LOADBOOL	R0 1 0 ; R0 := true
	13	[1783]	RETURN   	R0 2 ; return R0 
	14	[1784]	RETURN   	R0 1 ; return 

function #69 <?:1786,1788> (4 instructions, 16 bytes at 00000160C67F8F50)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1787]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1787]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[1787]	RETURN   	R0 0 ; return R0,... 
	4	[1788]	RETURN   	R0 1 ; return 

function #70 <?:1790,1792> (7 instructions, 28 bytes at 00000160C67F9020)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[1791]	GETGLOBAL	R1 K0 ; R1 := REGION_ID_DOJO
	2	[1791]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 5
	3	[1791]	JMP      	5 ; PC := 5
	4	[1791]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 5
	5	[1791]	OP_LOADBOOL	R1 1 0 ; R1 := true
	6	[1791]	RETURN   	R1 2 ; return R1 
	7	[1792]	RETURN   	R0 1 ; return 

function #71 <?:1794,1796> (5 instructions, 20 bytes at 00000160C67F9130)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1795]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1795]	MOVE     	R2 R0 ; R2 := R0
	3	[1795]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[1795]	RETURN   	R1 0 ; return R1,... 
	5	[1796]	RETURN   	R0 1 ; return 

function #72 <?:1798,1800> (16 instructions, 64 bytes at 00000160C67F9220)
1 param, 2 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[1799]	GETGLOBAL	R1 K0 ; R1 := REGION_ID_VOID
	2	[1799]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 13
	3	[1799]	JMP      	13 ; PC := 13
	4	[1799]	GETGLOBAL	R1 K1 ; R1 := REGION_ID_DOJO
	5	[1799]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 13
	6	[1799]	JMP      	13 ; PC := 13
	7	[1799]	GETGLOBAL	R1 K2 ; R1 := REGION_ID_DARK_SECTOR
	8	[1799]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 13
	9	[1799]	JMP      	13 ; PC := 13
	10	[1799]	GETGLOBAL	R1 K3 ; R1 := REGION_ID_DEEP_SPACE
	11	[1799]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 14
	12	[1799]	JMP      	14 ; PC := 14
	13	[1799]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 14
	14	[1799]	OP_LOADBOOL	R1 1 0 ; R1 := true
	15	[1799]	RETURN   	R1 2 ; return R1 
	16	[1800]	RETURN   	R0 1 ; return 

function #73 <?:1802,1947> (353 instructions, 1412 bytes at 00000160C67F93A0)
3 params, 30 slots, 2 upvalues, 0 locals, 54 constants, 0 functions
	1	[1803]	TEST     	R1 1 ; if R1 then PC := 6
	2	[1803]	JMP      	6 ; PC := 6
	3	[1804]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[1804]	CALL     	R3 1 2 ; R3 := R3()
	5	[1804]	MOVE     	R1 R3 ; R1 := R3
	6	[1807]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	7	[1807]	MOVE     	R4 R1 ; R4 := R1
	8	[1807]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[1807]	TEST     	R3 1 ; if R3 then PC := 349
	10	[1807]	JMP      	349 ; PC := 349
	11	[1807]	EQ       	1 R0 K1 ; if R0 == nil then PC := 349
	12	[1807]	JMP      	349 ; PC := 349
	13	[1807]	EQ       	1 R0 K2 ; if R0 == "" then PC := 349
	14	[1807]	JMP      	349 ; PC := 349
	15	[1808]	LOADK    	R3 := 0.000000
	16	[1809]	LOADK    	R4 := 0.000000
	17	[1811]	GETGLOBAL	R5 K3 ; R5 := 0x7f5022cf
	18	[1811]	GETTABLE 	R5 R5 K4 ; R5 := R5[0xa5c556b9]
	19	[1811]	MOVE     	R6 R0 ; R6 := R0
	20	[1811]	GETGLOBAL	R7 K5 ; R7 := KEY_TAG
	21	[1811]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	22	[1812]	EQ       	1 R5 K1 ; if R5 == nil then PC := 60
	23	[1812]	JMP      	60 ; PC := 60
	24	[1813]	GETGLOBAL	R3 K6 ; R3 := KEY_FLAG
	25	[1815]	GETGLOBAL	R6 K7 ; R6 := _T
	26	[1815]	GETTABLE 	R6 R6 K8 ; R6 := R6["gSelectedRegionId"]
	27	[1815]	EQ       	1 R6 K1 ; if R6 == nil then PC := 35
	28	[1815]	JMP      	35 ; PC := 35
	29	[1815]	GETGLOBAL	R6 K7 ; R6 := _T
	30	[1815]	GETTABLE 	R6 R6 K8 ; R6 := R6["gSelectedRegionId"]
	31	[1815]	LT       	0 K9 R6 ; if 0.000000 >= R6 then PC := 35
	32	[1815]	JMP      	35 ; PC := 35
	33	[1816]	GETGLOBAL	R6 K7 ; R6 := _T
	34	[1816]	GETTABLE 	R4 R6 K8 ; R4 := R6["gSelectedRegionId"]
	35	[1819]	GETUPVAL 	R6 U1 ; R6 := U1
	36	[1819]	MOVE     	R7 R4 ; R7 := R4
	37	[1819]	CALL     	R6 2 2 ; R6 := R6(R7)
	38	[1819]	TEST     	R6 1 ; if R6 then PC := 60
	39	[1819]	JMP      	60 ; PC := 60
	40	[1821]	GETGLOBAL	R6 K10 ; R6 := 0xb009bbc6
	41	[1821]	GETGLOBAL	R7 K3 ; R7 := 0x7f5022cf
	42	[1821]	GETTABLE 	R7 R7 K11 ; R7 := R7[0x1a94c9cc]
	43	[1821]	MOVE     	R8 R0 ; R8 := R0
	44	[1821]	LOADK    	R9 := 1.000000
	45	[1821]	SUB      	R10 R5 K12 ; R10 := R5 - 1.000000
	46	[1821]	CALL     	R7 4 0 ; R7,... := R7(R8,R9,R10)
	47	[1821]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	48	[1822]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	49	[1822]	MOVE     	R8 R6 ; R8 := R6
	50	[1822]	CALL     	R7 2 2 ; R7 := R7(R8)
	51	[1822]	TEST     	R7 1 ; if R7 then PC := 60
	52	[1822]	JMP      	60 ; PC := 60
	53	[1823]	GETGLOBAL	R7 K13 ; R7 := 0x64fb1586
	54	[1823]	SELF     	R8 R6 K14 ; R9 := R6; R8 := R6[0x92608d86]
	55	[1823]	CALL     	R8 2 0 ; R8,... := R8(R9)
	56	[1823]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	57	[1824]	EQ       	1 R7 K2 ; if R7 == "" then PC := 60
	58	[1824]	JMP      	60 ; PC := 60
	59	[1825]	MOVE     	R0 R7 ; R0 := R7
	60	[1831]	GETGLOBAL	R8 K3 ; R8 := 0x7f5022cf
	61	[1831]	GETTABLE 	R8 R8 K4 ; R8 := R8[0xa5c556b9]
	62	[1831]	MOVE     	R9 R0 ; R9 := R0
	63	[1831]	GETGLOBAL	R10 K15 ; R10 := ALERT_TAG
	64	[1831]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	65	[1832]	EQ       	1 R8 K1 ; if R8 == nil then PC := 75
	66	[1832]	JMP      	75 ; PC := 75
	67	[1833]	GETGLOBAL	R9 K3 ; R9 := 0x7f5022cf
	68	[1833]	GETTABLE 	R9 R9 K11 ; R9 := R9[0x1a94c9cc]
	69	[1833]	MOVE     	R10 R0 ; R10 := R0
	70	[1833]	LOADK    	R11 := 1.000000
	71	[1833]	SUB      	R12 R8 K12 ; R12 := R8 - 1.000000
	72	[1833]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	73	[1833]	MOVE     	R0 R9 ; R0 := R9
	74	[1834]	GETGLOBAL	R3 K16 ; R3 := ALERT_FLAG
	75	[1837]	GETGLOBAL	R9 K3 ; R9 := 0x7f5022cf
	76	[1837]	GETTABLE 	R9 R9 K4 ; R9 := R9[0xa5c556b9]
	77	[1837]	MOVE     	R10 R0 ; R10 := R0
	78	[1837]	GETGLOBAL	R11 K17 ; R11 := NIGHTMARE_TAG
	79	[1837]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	80	[1838]	EQ       	1 R9 K1 ; if R9 == nil then PC := 90
	81	[1838]	JMP      	90 ; PC := 90
	82	[1839]	GETGLOBAL	R10 K3 ; R10 := 0x7f5022cf
	83	[1839]	GETTABLE 	R10 R10 K11 ; R10 := R10[0x1a94c9cc]
	84	[1839]	MOVE     	R11 R0 ; R11 := R0
	85	[1839]	LOADK    	R12 := 1.000000
	86	[1839]	SUB      	R13 R9 K12 ; R13 := R9 - 1.000000
	87	[1839]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	88	[1839]	MOVE     	R0 R10 ; R0 := R10
	89	[1840]	GETGLOBAL	R3 K18 ; R3 := NIGHTMARE_FLAG
	90	[1843]	GETGLOBAL	R10 K3 ; R10 := 0x7f5022cf
	91	[1843]	GETTABLE 	R10 R10 K4 ; R10 := R10[0xa5c556b9]
	92	[1843]	MOVE     	R11 R0 ; R11 := R0
	93	[1843]	GETGLOBAL	R12 K19 ; R12 := EVENT_TAG
	94	[1843]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	95	[1844]	EQ       	1 R10 K1 ; if R10 == nil then PC := 105
	96	[1844]	JMP      	105 ; PC := 105
	97	[1845]	GETGLOBAL	R11 K3 ; R11 := 0x7f5022cf
	98	[1845]	GETTABLE 	R11 R11 K11 ; R11 := R11[0x1a94c9cc]
	99	[1845]	MOVE     	R12 R0 ; R12 := R0
	100	[1845]	LOADK    	R13 := 1.000000
	101	[1845]	SUB      	R14 R10 K12 ; R14 := R10 - 1.000000
	102	[1845]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	103	[1845]	MOVE     	R0 R11 ; R0 := R11
	104	[1846]	GETGLOBAL	R3 K20 ; R3 := EVENT_FLAG
	105	[1849]	GETGLOBAL	R11 K3 ; R11 := 0x7f5022cf
	106	[1849]	GETTABLE 	R11 R11 K4 ; R11 := R11[0xa5c556b9]
	107	[1849]	MOVE     	R12 R0 ; R12 := R0
	108	[1849]	GETGLOBAL	R13 K21 ; R13 := PVP_TAG
	109	[1849]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	110	[1850]	EQ       	1 R11 K1 ; if R11 == nil then PC := 120
	111	[1850]	JMP      	120 ; PC := 120
	112	[1851]	GETGLOBAL	R12 K3 ; R12 := 0x7f5022cf
	113	[1851]	GETTABLE 	R12 R12 K11 ; R12 := R12[0x1a94c9cc]
	114	[1851]	MOVE     	R13 R0 ; R13 := R0
	115	[1851]	LOADK    	R14 := 1.000000
	116	[1851]	SUB      	R15 R11 K12 ; R15 := R11 - 1.000000
	117	[1851]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	118	[1851]	MOVE     	R0 R12 ; R0 := R12
	119	[1852]	GETGLOBAL	R3 K22 ; R3 := PVP_FLAG
	120	[1855]	GETGLOBAL	R12 K3 ; R12 := 0x7f5022cf
	121	[1855]	GETTABLE 	R12 R12 K4 ; R12 := R12[0xa5c556b9]
	122	[1855]	MOVE     	R13 R0 ; R13 := R0
	123	[1855]	GETGLOBAL	R14 K23 ; R14 := INVASION_ATTACKER_TAG
	124	[1855]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	125	[1856]	EQ       	1 R12 K1 ; if R12 == nil then PC := 135
	126	[1856]	JMP      	135 ; PC := 135
	127	[1857]	GETGLOBAL	R13 K3 ; R13 := 0x7f5022cf
	128	[1857]	GETTABLE 	R13 R13 K11 ; R13 := R13[0x1a94c9cc]
	129	[1857]	MOVE     	R14 R0 ; R14 := R0
	130	[1857]	LOADK    	R15 := 1.000000
	131	[1857]	SUB      	R16 R12 K12 ; R16 := R12 - 1.000000
	132	[1857]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	133	[1857]	MOVE     	R0 R13 ; R0 := R13
	134	[1858]	GETGLOBAL	R3 K24 ; R3 := INVASION_ATTACKER_FLAG
	135	[1861]	GETGLOBAL	R13 K3 ; R13 := 0x7f5022cf
	136	[1861]	GETTABLE 	R13 R13 K4 ; R13 := R13[0xa5c556b9]
	137	[1861]	MOVE     	R14 R0 ; R14 := R0
	138	[1861]	GETGLOBAL	R15 K25 ; R15 := INVASION_DEFENDER_TAG
	139	[1861]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	140	[1862]	EQ       	1 R13 K1 ; if R13 == nil then PC := 150
	141	[1862]	JMP      	150 ; PC := 150
	142	[1863]	GETGLOBAL	R14 K3 ; R14 := 0x7f5022cf
	143	[1863]	GETTABLE 	R14 R14 K11 ; R14 := R14[0x1a94c9cc]
	144	[1863]	MOVE     	R15 R0 ; R15 := R0
	145	[1863]	LOADK    	R16 := 1.000000
	146	[1863]	SUB      	R17 R13 K12 ; R17 := R13 - 1.000000
	147	[1863]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	148	[1863]	MOVE     	R0 R14 ; R0 := R14
	149	[1864]	GETGLOBAL	R3 K26 ; R3 := INVASION_DEFENDER_FLAG
	150	[1867]	GETGLOBAL	R14 K3 ; R14 := 0x7f5022cf
	151	[1867]	GETTABLE 	R14 R14 K4 ; R14 := R14[0xa5c556b9]
	152	[1867]	MOVE     	R15 R0 ; R15 := R0
	153	[1867]	GETGLOBAL	R16 K27 ; R16 := SYNDICATE_MISSION_TAG
	154	[1867]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	155	[1868]	EQ       	1 R14 K1 ; if R14 == nil then PC := 165
	156	[1868]	JMP      	165 ; PC := 165
	157	[1869]	GETGLOBAL	R15 K3 ; R15 := 0x7f5022cf
	158	[1869]	GETTABLE 	R15 R15 K11 ; R15 := R15[0x1a94c9cc]
	159	[1869]	MOVE     	R16 R0 ; R16 := R0
	160	[1869]	LOADK    	R17 := 1.000000
	161	[1869]	SUB      	R18 R14 K12 ; R18 := R14 - 1.000000
	162	[1869]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	163	[1869]	MOVE     	R0 R15 ; R0 := R15
	164	[1870]	GETGLOBAL	R3 K28 ; R3 := SYNDICATE_MISSION_FLAG
	165	[1873]	GETGLOBAL	R15 K3 ; R15 := 0x7f5022cf
	166	[1873]	GETTABLE 	R15 R15 K4 ; R15 := R15[0xa5c556b9]
	167	[1873]	MOVE     	R16 R0 ; R16 := R0
	168	[1873]	GETGLOBAL	R17 K29 ; R17 := SORTIE_MISSION_TAG
	169	[1873]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	170	[1874]	EQ       	1 R15 K1 ; if R15 == nil then PC := 180
	171	[1874]	JMP      	180 ; PC := 180
	172	[1875]	GETGLOBAL	R16 K3 ; R16 := 0x7f5022cf
	173	[1875]	GETTABLE 	R16 R16 K11 ; R16 := R16[0x1a94c9cc]
	174	[1875]	MOVE     	R17 R0 ; R17 := R0
	175	[1875]	LOADK    	R18 := 1.000000
	176	[1875]	SUB      	R19 R15 K12 ; R19 := R15 - 1.000000
	177	[1875]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	178	[1875]	MOVE     	R0 R16 ; R0 := R16
	179	[1876]	GETGLOBAL	R3 K30 ; R3 := SORTIE_MISSION_FLAG
	180	[1879]	GETGLOBAL	R16 K3 ; R16 := 0x7f5022cf
	181	[1879]	GETTABLE 	R16 R16 K4 ; R16 := R16[0xa5c556b9]
	182	[1879]	MOVE     	R17 R0 ; R17 := R0
	183	[1879]	GETGLOBAL	R18 K31 ; R18 := LITE_SORTIE_MISSION_TAG
	184	[1879]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	185	[1880]	EQ       	1 R16 K1 ; if R16 == nil then PC := 195
	186	[1880]	JMP      	195 ; PC := 195
	187	[1881]	GETGLOBAL	R17 K3 ; R17 := 0x7f5022cf
	188	[1881]	GETTABLE 	R17 R17 K11 ; R17 := R17[0x1a94c9cc]
	189	[1881]	MOVE     	R18 R0 ; R18 := R0
	190	[1881]	LOADK    	R19 := 1.000000
	191	[1881]	SUB      	R20 R16 K12 ; R20 := R16 - 1.000000
	192	[1881]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	193	[1881]	MOVE     	R0 R17 ; R0 := R17
	194	[1882]	GETGLOBAL	R3 K32 ; R3 := LITE_SORTIE_MISSION_FLAG
	195	[1885]	GETGLOBAL	R17 K3 ; R17 := 0x7f5022cf
	196	[1885]	GETTABLE 	R17 R17 K4 ; R17 := R17[0xa5c556b9]
	197	[1885]	MOVE     	R18 R0 ; R18 := R0
	198	[1885]	GETGLOBAL	R19 K33 ; R19 := HUB_TAG
	199	[1885]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	200	[1886]	EQ       	1 R17 K1 ; if R17 == nil then PC := 210
	201	[1886]	JMP      	210 ; PC := 210
	202	[1887]	GETGLOBAL	R18 K3 ; R18 := 0x7f5022cf
	203	[1887]	GETTABLE 	R18 R18 K11 ; R18 := R18[0x1a94c9cc]
	204	[1887]	MOVE     	R19 R0 ; R19 := R0
	205	[1887]	LOADK    	R20 := 1.000000
	206	[1887]	SUB      	R21 R17 K12 ; R21 := R17 - 1.000000
	207	[1887]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	208	[1887]	MOVE     	R0 R18 ; R0 := R18
	209	[1888]	GETGLOBAL	R3 K34 ; R3 := HUB_FLAG
	210	[1891]	GETGLOBAL	R18 K3 ; R18 := 0x7f5022cf
	211	[1891]	GETTABLE 	R18 R18 K4 ; R18 := R18[0xa5c556b9]
	212	[1891]	MOVE     	R19 R0 ; R19 := R0
	213	[1891]	GETGLOBAL	R20 K35 ; R20 := ACTIVE_MISSION_TAG
	214	[1891]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	215	[1892]	EQ       	1 R18 K1 ; if R18 == nil then PC := 225
	216	[1892]	JMP      	225 ; PC := 225
	217	[1893]	GETGLOBAL	R19 K3 ; R19 := 0x7f5022cf
	218	[1893]	GETTABLE 	R19 R19 K11 ; R19 := R19[0x1a94c9cc]
	219	[1893]	MOVE     	R20 R0 ; R20 := R0
	220	[1893]	LOADK    	R21 := 1.000000
	221	[1893]	SUB      	R22 R18 K12 ; R22 := R18 - 1.000000
	222	[1893]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	223	[1893]	MOVE     	R0 R19 ; R0 := R19
	224	[1894]	GETGLOBAL	R3 K36 ; R3 := ACTIVE_MISSION_FLAG
	225	[1897]	GETGLOBAL	R19 K3 ; R19 := 0x7f5022cf
	226	[1897]	GETTABLE 	R19 R19 K4 ; R19 := R19[0xa5c556b9]
	227	[1897]	MOVE     	R20 R0 ; R20 := R0
	228	[1897]	GETGLOBAL	R21 K37 ; R21 := KUVA_TOWER_MISSION_TAG
	229	[1897]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	230	[1898]	EQ       	1 R19 K1 ; if R19 == nil then PC := 240
	231	[1898]	JMP      	240 ; PC := 240
	232	[1899]	GETGLOBAL	R20 K3 ; R20 := 0x7f5022cf
	233	[1899]	GETTABLE 	R20 R20 K11 ; R20 := R20[0x1a94c9cc]
	234	[1899]	MOVE     	R21 R0 ; R21 := R0
	235	[1899]	LOADK    	R22 := 1.000000
	236	[1899]	SUB      	R23 R19 K12 ; R23 := R19 - 1.000000
	237	[1899]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	238	[1899]	MOVE     	R0 R20 ; R0 := R20
	239	[1900]	GETGLOBAL	R3 K38 ; R3 := KUVA_TOWER_MISSION_FLAG
	240	[1903]	GETGLOBAL	R20 K3 ; R20 := 0x7f5022cf
	241	[1903]	GETTABLE 	R20 R20 K4 ; R20 := R20[0xa5c556b9]
	242	[1903]	MOVE     	R21 R0 ; R21 := R0
	243	[1903]	GETGLOBAL	R22 K39 ; R22 := NEMESIS_MISSION_TAG
	244	[1903]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	245	[1904]	EQ       	1 R20 K1 ; if R20 == nil then PC := 255
	246	[1904]	JMP      	255 ; PC := 255
	247	[1905]	GETGLOBAL	R21 K3 ; R21 := 0x7f5022cf
	248	[1905]	GETTABLE 	R21 R21 K11 ; R21 := R21[0x1a94c9cc]
	249	[1905]	MOVE     	R22 R0 ; R22 := R0
	250	[1905]	LOADK    	R23 := 1.000000
	251	[1905]	SUB      	R24 R20 K12 ; R24 := R20 - 1.000000
	252	[1905]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	253	[1905]	MOVE     	R0 R21 ; R0 := R21
	254	[1906]	GETGLOBAL	R3 K40 ; R3 := NEMESIS_MISSION_FLAG
	255	[1909]	GETGLOBAL	R21 K3 ; R21 := 0x7f5022cf
	256	[1909]	GETTABLE 	R21 R21 K4 ; R21 := R21[0xa5c556b9]
	257	[1909]	MOVE     	R22 R0 ; R22 := R0
	258	[1909]	GETGLOBAL	R23 K41 ; R23 := ELITE_ALERT_TAG
	259	[1909]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	260	[1910]	EQ       	1 R21 K1 ; if R21 == nil then PC := 270
	261	[1910]	JMP      	270 ; PC := 270
	262	[1911]	GETGLOBAL	R22 K3 ; R22 := 0x7f5022cf
	263	[1911]	GETTABLE 	R22 R22 K11 ; R22 := R22[0x1a94c9cc]
	264	[1911]	MOVE     	R23 R0 ; R23 := R0
	265	[1911]	LOADK    	R24 := 1.000000
	266	[1911]	SUB      	R25 R21 K12 ; R25 := R21 - 1.000000
	267	[1911]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	268	[1911]	MOVE     	R0 R22 ; R0 := R22
	269	[1912]	GETGLOBAL	R3 K42 ; R3 := ELITE_ALERT_FLAG
	270	[1915]	GETGLOBAL	R22 K3 ; R22 := 0x7f5022cf
	271	[1915]	GETTABLE 	R22 R22 K4 ; R22 := R22[0xa5c556b9]
	272	[1915]	GETGLOBAL	R23 K3 ; R23 := 0x7f5022cf
	273	[1915]	GETTABLE 	R23 R23 K43 ; R23 := R23[0x04981ab3]
	274	[1915]	MOVE     	R24 R0 ; R24 := R0
	275	[1915]	CALL     	R23 2 2 ; R23 := R23(R24)
	276	[1915]	LOADK    	R24 K44 ; R24 := "junction"
	277	[1915]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	278	[1916]	EQ       	1 R22 K1 ; if R22 == nil then PC := 288
	279	[1916]	JMP      	288 ; PC := 288
	280	[1917]	GETGLOBAL	R23 K3 ; R23 := 0x7f5022cf
	281	[1917]	GETTABLE 	R23 R23 K11 ; R23 := R23[0x1a94c9cc]
	282	[1917]	MOVE     	R24 R0 ; R24 := R0
	283	[1917]	LOADK    	R25 := 1.000000
	284	[1917]	SUB      	R26 R22 K12 ; R26 := R22 - 1.000000
	285	[1917]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	286	[1917]	MOVE     	R0 R23 ; R0 := R23
	287	[1918]	GETGLOBAL	R3 K45 ; R3 := JUNCTION_FLAG
	288	[1921]	GETGLOBAL	R23 K3 ; R23 := 0x7f5022cf
	289	[1921]	GETTABLE 	R23 R23 K4 ; R23 := R23[0xa5c556b9]
	290	[1921]	MOVE     	R24 R0 ; R24 := R0
	291	[1921]	GETGLOBAL	R25 K46 ; R25 := HARD_DAILY_TAG
	292	[1921]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	293	[1922]	EQ       	1 R23 K1 ; if R23 == nil then PC := 304
	294	[1922]	JMP      	304 ; PC := 304
	295	[1923]	GETGLOBAL	R24 K3 ; R24 := 0x7f5022cf
	296	[1923]	GETTABLE 	R24 R24 K11 ; R24 := R24[0x1a94c9cc]
	297	[1923]	MOVE     	R25 R0 ; R25 := R0
	298	[1923]	LOADK    	R26 := 1.000000
	299	[1923]	SUB      	R27 R23 K12 ; R27 := R23 - 1.000000
	300	[1923]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	301	[1923]	MOVE     	R0 R24 ; R0 := R24
	302	[1924]	GETGLOBAL	R3 K47 ; R3 := HARD_DAILY_FLAG
	303	[1924]	JMP      	319 ; PC := 319
	304	[1926]	GETGLOBAL	R24 K3 ; R24 := 0x7f5022cf
	305	[1926]	GETTABLE 	R24 R24 K4 ; R24 := R24[0xa5c556b9]
	306	[1926]	MOVE     	R25 R0 ; R25 := R0
	307	[1926]	GETGLOBAL	R26 K48 ; R26 := HARD_MODE_TAG
	308	[1926]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	309	[1927]	EQ       	1 R24 K1 ; if R24 == nil then PC := 319
	310	[1927]	JMP      	319 ; PC := 319
	311	[1928]	GETGLOBAL	R25 K3 ; R25 := 0x7f5022cf
	312	[1928]	GETTABLE 	R25 R25 K11 ; R25 := R25[0x1a94c9cc]
	313	[1928]	MOVE     	R26 R0 ; R26 := R0
	314	[1928]	LOADK    	R27 := 1.000000
	315	[1928]	SUB      	R28 R24 K12 ; R28 := R24 - 1.000000
	316	[1928]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	317	[1928]	MOVE     	R0 R25 ; R0 := R25
	318	[1929]	GETGLOBAL	R3 K49 ; R3 := HARD_MODE_FLAG
	319	[1933]	GETGLOBAL	R25 K3 ; R25 := 0x7f5022cf
	320	[1933]	GETTABLE 	R25 R25 K4 ; R25 := R25[0xa5c556b9]
	321	[1933]	MOVE     	R26 R0 ; R26 := R0
	322	[1933]	GETGLOBAL	R27 K50 ; R27 := VOID_STORM_TAG
	323	[1933]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	324	[1934]	EQ       	1 R25 K1 ; if R25 == nil then PC := 334
	325	[1934]	JMP      	334 ; PC := 334
	326	[1935]	GETGLOBAL	R26 K3 ; R26 := 0x7f5022cf
	327	[1935]	GETTABLE 	R26 R26 K11 ; R26 := R26[0x1a94c9cc]
	328	[1935]	MOVE     	R27 R0 ; R27 := R0
	329	[1935]	LOADK    	R28 := 1.000000
	330	[1935]	SUB      	R29 R25 K12 ; R29 := R25 - 1.000000
	331	[1935]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	332	[1935]	MOVE     	R0 R26 ; R0 := R26
	333	[1936]	GETGLOBAL	R3 K51 ; R3 := VOID_STORM_FLAG
	334	[1939]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	335	[1939]	MOVE     	R27 R2 ; R27 := R2
	336	[1939]	CALL     	R26 2 2 ; R26 := R26(R27)
	337	[1939]	TEST     	R26 0 ; if not R26 then PC := 345
	338	[1939]	JMP      	345 ; PC := 345
	339	[1940]	SELF     	R26 R1 K52 ; R27 := R1; R26 := R1[0x3ad9ed31]
	340	[1940]	GETGLOBAL	R28 K53 ; R28 := 0x0469f296
	341	[1940]	MOVE     	R29 R0 ; R29 := R0
	342	[1940]	CALL     	R28 2 0 ; R28,... := R28(R29)
	343	[1940]	CALL     	R26 0 2 ; R26 := R26(R27,...)
	344	[1940]	MOVE     	R2 R26 ; R2 := R26
	345	[1943]	MOVE     	R26 R2 ; R26 := R2
	346	[1943]	MOVE     	R27 R3 ; R27 := R3
	347	[1943]	MOVE     	R28 R4 ; R28 := R4
	348	[1943]	RETURN   	R26 4 ; return R26, R27, R28 
	349	[1946]	LOADNIL  	R26 R26 ; R26 := nil
	350	[1946]	LOADK    	R27 := 0.000000
	351	[1946]	LOADK    	R28 := 0.000000
	352	[1946]	RETURN   	R26 4 ; return R26, R27, R28 
	353	[1947]	RETURN   	R0 1 ; return 

function #74 <?:1949,1951> (7 instructions, 28 bytes at 00000160C67FA360)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1950]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1950]	MOVE     	R4 R0 ; R4 := R0
	3	[1950]	MOVE     	R5 R1 ; R5 := R1
	4	[1950]	MOVE     	R6 R2 ; R6 := R2
	5	[1950]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	6	[1950]	RETURN   	R3 2 ; return R3 
	7	[1951]	RETURN   	R0 1 ; return 

function #75 <?:1953,2012> (109 instructions, 436 bytes at 00000160C67FA450)
3 params, 21 slots, 4 upvalues, 0 locals, 21 constants, 0 functions
	1	[1962]	TEST     	R1 1 ; if R1 then PC := 6
	2	[1962]	JMP      	6 ; PC := 6
	3	[1963]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[1963]	CALL     	R3 1 2 ; R3 := R3()
	5	[1963]	MOVE     	R1 R3 ; R1 := R3
	6	[1966]	GETUPVAL 	R3 U1 ; R3 := U1
	7	[1966]	MOVE     	R4 R0 ; R4 := R0
	8	[1966]	MOVE     	R5 R1 ; R5 := R1
	9	[1966]	MOVE     	R6 R2 ; R6 := R2
	10	[1966]	CALL     	R3 4 4 ; R3,R4,R5 := R3(R4,R5,R6)
	11	[1968]	GETGLOBAL	R6 K0 ; R6 := 0x7f5022cf
	12	[1968]	GETTABLE 	R6 R6 K1 ; R6 := R6[0xa5c556b9]
	13	[1968]	MOVE     	R7 R0 ; R7 := R0
	14	[1968]	GETGLOBAL	R8 K2 ; R8 := TAG_SEPERATOR
	15	[1968]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	16	[1969]	LOADNIL  	R7 R7 ; R7 := nil
	17	[1970]	EQ       	1 R6 K3 ; if R6 == nil then PC := 27
	18	[1970]	JMP      	27 ; PC := 27
	19	[1971]	GETGLOBAL	R8 K0 ; R8 := 0x7f5022cf
	20	[1971]	GETTABLE 	R8 R8 K4 ; R8 := R8[0x1a94c9cc]
	21	[1971]	MOVE     	R9 R0 ; R9 := R0
	22	[1971]	LOADK    	R10 := 1.000000
	23	[1971]	SUB      	R11 R6 K5 ; R11 := R6 - 1.000000
	24	[1971]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	25	[1971]	MOVE     	R7 R8 ; R7 := R8
	26	[1971]	JMP      	28 ; PC := 28
	27	[1973]	MOVE     	R7 R0 ; R7 := R0
	28	[1976]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	29	[1976]	MOVE     	R9 R3 ; R9 := R3
	30	[1976]	CALL     	R8 2 2 ; R8 := R8(R9)
	31	[1976]	TEST     	R8 1 ; if R8 then PC := 99
	32	[1976]	JMP      	99 ; PC := 99
	33	[1977]	GETTABLE 	R8 R3 K7 ; R8 := R3["region"]
	34	[1977]	ADD      	R8 R8 K5 ; R8 := R8 + 1.000000
	35	[1978]	GETUPVAL 	R9 U2 ; R9 := U2
	36	[1978]	GETTABLE 	R9 R9 K8 ; R9 := R9[0x06d055f9]
	37	[1978]	LT       	1 K9 R5 ; if 0.000000 < R5 then PC := 40
	38	[1978]	JMP      	40 ; PC := 40
	39	[1978]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 40
	40	[1978]	OP_LOADBOOL	R10 1 0 ; R10 := true
	41	[1978]	MOVE     	R11 R5 ; R11 := R5
	42	[1978]	MOVE     	R12 R8 ; R12 := R8
	43	[1978]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	44	[1978]	GETUPVAL 	R10 U3 ; R10 := U3
	45	[1978]	MUL      	R9 R9 R10 ; R9 := R9 * R10
	46	[1979]	EQ       	1 R7 K3 ; if R7 == nil then PC := 99
	47	[1979]	JMP      	99 ; PC := 99
	48	[1980]	LOADK    	R10 := 0.000000
	49	[1981]	LOADK    	R11 := 1.000000
	50	[1982]	GETGLOBAL	R12 K0 ; R12 := 0x7f5022cf
	51	[1982]	GETTABLE 	R12 R12 K10 ; R12 := R12[0x41e2ae25]
	52	[1982]	MOVE     	R13 R7 ; R13 := R7
	53	[1982]	CALL     	R12 2 2 ; R12 := R12(R13)
	54	[1982]	LOADK    	R13 := 1.000000
	55	[1982]	LOADK    	R14 := -1.000000
	56	[1982]	FORPREP  	R12 72 ; R12 -= R14; PC := 72
	57	[1983]	GETGLOBAL	R16 K11 ; R16 := 0x03f57322
	58	[1983]	GETGLOBAL	R17 K0 ; R17 := 0x7f5022cf
	59	[1983]	GETTABLE 	R17 R17 K4 ; R17 := R17[0x1a94c9cc]
	60	[1983]	MOVE     	R18 R7 ; R18 := R7
	61	[1983]	MOVE     	R19 R15 ; R19 := R15
	62	[1983]	MOVE     	R20 R15 ; R20 := R15
	63	[1983]	CALL     	R17 4 0 ; R17,... := R17(R18,R19,R20)
	64	[1983]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	65	[1984]	EQ       	1 R16 K3 ; if R16 == nil then PC := 73
	66	[1984]	JMP      	73 ; PC := 73
	67	[1985]	MUL      	R17 R16 R11 ; R17 := R16 * R11
	68	[1985]	ADD      	R10 R10 R17 ; R10 := R10 + R17
	69	[1986]	MUL      	R11 R11 K12 ; R11 := R11 * 10.000000
	70	[1986]	JMP      	72 ; PC := 72
	71	[1988]	JMP      	73 ; PC := 73
	72	[1982]	FORLOOP  	R12 57 ; R12 += R14; if R12 <= R13 then begin PC := 57; R15 := R12 end
	73	[1992]	EQ       	0 R10 K9 ; if R10 ~= 0.000000 then PC := 82
	74	[1992]	JMP      	82 ; PC := 82
	75	[1992]	GETGLOBAL	R17 K13 ; R17 := KEY_FLAG
	76	[1992]	EQ       	0 R4 R17 ; if R4 ~= R17 then PC := 82
	77	[1992]	JMP      	82 ; PC := 82
	78	[1993]	SELF     	R17 R1 K14 ; R18 := R1; R17 := R1[0x4e163aa4]
	79	[1993]	MOVE     	R19 R7 ; R19 := R7
	80	[1993]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	81	[1993]	MOVE     	R10 R17 ; R10 := R17
	82	[1997]	EQ       	0 R8 K15 ; if R8 ~= 16.000000 then PC := 96
	83	[1997]	JMP      	96 ; PC := 96
	84	[1997]	EQ       	1 R10 K12 ; if R10 == 10.000000 then PC := 88
	85	[1997]	JMP      	88 ; PC := 88
	86	[1997]	EQ       	0 R10 K16 ; if R10 ~= 11.000000 then PC := 96
	87	[1997]	JMP      	96 ; PC := 96
	88	[1997]	GETGLOBAL	R17 K0 ; R17 := 0x7f5022cf
	89	[1997]	GETTABLE 	R17 R17 K1 ; R17 := R17[0xa5c556b9]
	90	[1997]	MOVE     	R18 R7 ; R18 := R7
	91	[1997]	LOADK    	R19 K17 ; R19 := "ClanNode"
	92	[1997]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	93	[1997]	TEST     	R17 0 ; if not R17 then PC := 96
	94	[1997]	JMP      	96 ; PC := 96
	95	[1998]	ADD      	R10 R10 K18 ; R10 := R10 + 80.000000
	96	[2001]	ADD      	R17 R9 R10 ; R17 := R9 + R10
	97	[2001]	ADD      	R17 R17 R4 ; R17 := R17 + R4
	98	[2001]	RETURN   	R17 2 ; return R17 
	99	[2006]	GETGLOBAL	R17 K19 ; R17 := _T
	100	[2006]	GETTABLE 	R17 R17 K20 ; R17 := R17["gSelectedRegionId"]
	101	[2007]	EQ       	1 R17 K3 ; if R17 == nil then PC := 105
	102	[2007]	JMP      	105 ; PC := 105
	103	[2007]	LE       	0 R17 K9 ; if R17 > 0.000000 then PC := 106
	104	[2007]	JMP      	106 ; PC := 106
	105	[2008]	LOADK    	R17 := 1.000000
	106	[2011]	GETUPVAL 	R18 U3 ; R18 := U3
	107	[2011]	MUL      	R18 R17 R18 ; R18 := R17 * R18
	108	[2011]	RETURN   	R18 2 ; return R18 
	109	[2012]	RETURN   	R0 1 ; return 

function #76 <?:2014,2016> (7 instructions, 28 bytes at 00000160C67FAA50)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2015]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[2015]	MOVE     	R4 R0 ; R4 := R0
	3	[2015]	MOVE     	R5 R1 ; R5 := R1
	4	[2015]	MOVE     	R6 R2 ; R6 := R2
	5	[2015]	TAILCALL 	R3 4 0 ; R3,... := R3(R4,R5,R6)
	6	[2015]	RETURN   	R3 0 ; return R3,... 
	7	[2016]	RETURN   	R0 1 ; return 

function #77 <?:2018,2020> (3 instructions, 12 bytes at 00000160C67FAB40)
0 params, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2019]	GETGLOBAL	R0 K0 ; R0 := REGION_ID_SIMULACRUM
	2	[2019]	RETURN   	R0 2 ; return R0 
	3	[2020]	RETURN   	R0 1 ; return 

function #78 <?:2022,2024> (7 instructions, 28 bytes at 00000160C67FAC30)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2023]	GETGLOBAL	R1 K0 ; R1 := REGION_ID_SIMULACRUM
	2	[2023]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 5
	3	[2023]	JMP      	5 ; PC := 5
	4	[2023]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 5
	5	[2023]	OP_LOADBOOL	R1 1 0 ; R1 := true
	6	[2023]	RETURN   	R1 2 ; return R1 
	7	[2024]	RETURN   	R0 1 ; return 

function #79 <?:2026,2028> (3 instructions, 12 bytes at 00000160C67FAD40)
0 params, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2027]	GETGLOBAL	R0 K0 ; R0 := REGION_ID_PHOTOBOOTH
	2	[2027]	RETURN   	R0 2 ; return R0 
	3	[2028]	RETURN   	R0 1 ; return 

function #80 <?:2030,2032> (7 instructions, 28 bytes at 00000160C67FAE30)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2031]	GETGLOBAL	R1 K0 ; R1 := REGION_ID_PHOTOBOOTH
	2	[2031]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 5
	3	[2031]	JMP      	5 ; PC := 5
	4	[2031]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 5
	5	[2031]	OP_LOADBOOL	R1 1 0 ; R1 := true
	6	[2031]	RETURN   	R1 2 ; return R1 
	7	[2032]	RETURN   	R0 1 ; return 

function #81 <?:2034,2037> (10 instructions, 40 bytes at 00000160C67FAF40)
1 param, 3 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[2035]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[2035]	MOVE     	R2 R0 ; R2 := R0
	3	[2035]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2035]	MOVE     	R0 R1 ; R0 := R1
	5	[2036]	GETGLOBAL	R1 K1 ; R1 := REGION_ID_PVP
	6	[2036]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[2036]	MUL      	R1 R1 R2 ; R1 := R1 * R2
	8	[2036]	ADD      	R1 R1 R0 ; R1 := R1 + R0
	9	[2036]	RETURN   	R1 2 ; return R1 
	10	[2037]	RETURN   	R0 1 ; return 

function #82 <?:2039,2041> (5 instructions, 20 bytes at 00000160C67FB080)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[2040]	GETGLOBAL	R0 K0 ; R0 := REGION_ID_CLAN_DOJO
	2	[2040]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[2040]	MUL      	R0 R0 R1 ; R0 := R0 * R1
	4	[2040]	RETURN   	R0 2 ; return R0 
	5	[2041]	RETURN   	R0 1 ; return 

function #83 <?:2043,2045> (12 instructions, 48 bytes at 00000160C67FB190)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2044]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2044]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2044]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2044]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2044]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2044]	GETGLOBAL	R2 K2 ; R2 := REGION_ID_CLAN_DOJO
	7	[2044]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 10
	8	[2044]	JMP      	10 ; PC := 10
	9	[2044]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 10
	10	[2044]	OP_LOADBOOL	R1 1 0 ; R1 := true
	11	[2044]	RETURN   	R1 2 ; return R1 
	12	[2045]	RETURN   	R0 1 ; return 

function #84 <?:2047,2049> (5 instructions, 20 bytes at 00000160C67FB2E0)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[2048]	GETGLOBAL	R0 K0 ; R0 := REGION_ID_DOJO_DUEL
	2	[2048]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[2048]	MUL      	R0 R0 R1 ; R0 := R0 * R1
	4	[2048]	RETURN   	R0 2 ; return R0 
	5	[2049]	RETURN   	R0 1 ; return 

function #85 <?:2051,2053> (12 instructions, 48 bytes at 00000160C67FB3F0)
1 param, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2052]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2052]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2052]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2052]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2052]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2052]	GETGLOBAL	R2 K2 ; R2 := REGION_ID_DOJO_DUEL
	7	[2052]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 10
	8	[2052]	JMP      	10 ; PC := 10
	9	[2052]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 10
	10	[2052]	OP_LOADBOOL	R1 1 0 ; R1 := true
	11	[2052]	RETURN   	R1 2 ; return R1 
	12	[2053]	RETURN   	R0 1 ; return 

function #86 <?:2055,2057> (17 instructions, 68 bytes at 00000160C67FB540)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2056]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2056]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2056]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2056]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2056]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2056]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2056]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2056]	GETGLOBAL	R3 K2 ; R3 := ALERT_FLAG
	9	[2056]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2056]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2056]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2056]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2056]	JMP      	15 ; PC := 15
	14	[2056]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2056]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2056]	RETURN   	R1 2 ; return R1 
	17	[2057]	RETURN   	R0 1 ; return 

function #87 <?:2059,2061> (5 instructions, 20 bytes at 00000160C67FB6D0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2060]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2060]	MOVE     	R2 R0 ; R2 := R0
	3	[2060]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2060]	RETURN   	R1 2 ; return R1 
	5	[2061]	RETURN   	R0 1 ; return 

function #88 <?:2063,2065> (17 instructions, 68 bytes at 00000160C67FB7C0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2064]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2064]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2064]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2064]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2064]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2064]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2064]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2064]	GETGLOBAL	R3 K2 ; R3 := NIGHTMARE_FLAG
	9	[2064]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2064]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2064]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2064]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2064]	JMP      	15 ; PC := 15
	14	[2064]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2064]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2064]	RETURN   	R1 2 ; return R1 
	17	[2065]	RETURN   	R0 1 ; return 

function #89 <?:2067,2069> (5 instructions, 20 bytes at 00000160C67FB950)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2068]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2068]	MOVE     	R2 R0 ; R2 := R0
	3	[2068]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2068]	RETURN   	R1 2 ; return R1 
	5	[2069]	RETURN   	R0 1 ; return 

function #90 <?:2071,2073> (17 instructions, 68 bytes at 00000160C67FBA40)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2072]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2072]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2072]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2072]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2072]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2072]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2072]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2072]	GETGLOBAL	R3 K2 ; R3 := EVENT_FLAG
	9	[2072]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2072]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2072]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2072]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2072]	JMP      	15 ; PC := 15
	14	[2072]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2072]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2072]	RETURN   	R1 2 ; return R1 
	17	[2073]	RETURN   	R0 1 ; return 

function #91 <?:2075,2077> (5 instructions, 20 bytes at 00000160C67FBBD0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2076]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2076]	MOVE     	R2 R0 ; R2 := R0
	3	[2076]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2076]	RETURN   	R1 2 ; return R1 
	5	[2077]	RETURN   	R0 1 ; return 

function #92 <?:2079,2081> (17 instructions, 68 bytes at 00000160C67FBCC0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2080]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2080]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2080]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2080]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2080]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2080]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2080]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2080]	GETGLOBAL	R3 K2 ; R3 := INVASION_ATTACKER_FLAG
	9	[2080]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2080]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2080]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2080]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2080]	JMP      	15 ; PC := 15
	14	[2080]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2080]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2080]	RETURN   	R1 2 ; return R1 
	17	[2081]	RETURN   	R0 1 ; return 

function #93 <?:2083,2085> (17 instructions, 68 bytes at 00000160C67FBE50)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2084]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2084]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2084]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2084]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2084]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2084]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2084]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2084]	GETGLOBAL	R3 K2 ; R3 := INVASION_DEFENDER_FLAG
	9	[2084]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2084]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2084]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2084]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2084]	JMP      	15 ; PC := 15
	14	[2084]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2084]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2084]	RETURN   	R1 2 ; return R1 
	17	[2085]	RETURN   	R0 1 ; return 

function #94 <?:2087,2089> (17 instructions, 68 bytes at 00000160C67FBFE0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2088]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2088]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2088]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2088]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2088]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2088]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2088]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2088]	GETGLOBAL	R3 K2 ; R3 := PVP_FLAG
	9	[2088]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2088]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2088]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2088]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2088]	JMP      	15 ; PC := 15
	14	[2088]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2088]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2088]	RETURN   	R1 2 ; return R1 
	17	[2089]	RETURN   	R0 1 ; return 

function #95 <?:2091,2093> (5 instructions, 20 bytes at 00000160C67FC170)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2092]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2092]	MOVE     	R2 R0 ; R2 := R0
	3	[2092]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2092]	RETURN   	R1 2 ; return R1 
	5	[2093]	RETURN   	R0 1 ; return 

function #96 <?:2095,2098> (17 instructions, 68 bytes at 00000160C67FC260)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2096]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2096]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2096]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2096]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2096]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2097]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2097]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2097]	GETGLOBAL	R3 K2 ; R3 := SYNDICATE_MISSION_FLAG
	9	[2097]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2097]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2097]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2097]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2097]	JMP      	15 ; PC := 15
	14	[2097]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2097]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2097]	RETURN   	R2 2 ; return R2 
	17	[2098]	RETURN   	R0 1 ; return 

function #97 <?:2100,2102> (5 instructions, 20 bytes at 00000160C67FC3F0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2101]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2101]	MOVE     	R2 R0 ; R2 := R0
	3	[2101]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2101]	RETURN   	R1 2 ; return R1 
	5	[2102]	RETURN   	R0 1 ; return 

function #98 <?:2104,2107> (17 instructions, 68 bytes at 00000160C67FC4E0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2105]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2105]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2105]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2105]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2105]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2106]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2106]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2106]	GETGLOBAL	R3 K2 ; R3 := SORTIE_MISSION_FLAG
	9	[2106]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2106]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2106]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2106]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2106]	JMP      	15 ; PC := 15
	14	[2106]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2106]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2106]	RETURN   	R2 2 ; return R2 
	17	[2107]	RETURN   	R0 1 ; return 

function #99 <?:2109,2111> (5 instructions, 20 bytes at 00000160C67FC670)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2110]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2110]	MOVE     	R2 R0 ; R2 := R0
	3	[2110]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[2110]	RETURN   	R1 0 ; return R1,... 
	5	[2111]	RETURN   	R0 1 ; return 

function #100 <?:2113,2116> (17 instructions, 68 bytes at 00000160C67FC760)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2114]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2114]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2114]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2114]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2114]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2115]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2115]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2115]	GETGLOBAL	R3 K2 ; R3 := LITE_SORTIE_MISSION_FLAG
	9	[2115]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2115]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2115]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2115]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2115]	JMP      	15 ; PC := 15
	14	[2115]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2115]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2115]	RETURN   	R2 2 ; return R2 
	17	[2116]	RETURN   	R0 1 ; return 

function #101 <?:2118,2121> (17 instructions, 68 bytes at 00000160C67FC8F0)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2119]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2119]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2119]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2119]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2119]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2120]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2120]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2120]	GETGLOBAL	R3 K2 ; R3 := HUB_FLAG
	9	[2120]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2120]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2120]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2120]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2120]	JMP      	15 ; PC := 15
	14	[2120]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2120]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2120]	RETURN   	R2 2 ; return R2 
	17	[2121]	RETURN   	R0 1 ; return 

function #102 <?:2123,2125> (5 instructions, 20 bytes at 00000160C67FCA80)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2124]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2124]	MOVE     	R2 R0 ; R2 := R0
	3	[2124]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2124]	RETURN   	R1 2 ; return R1 
	5	[2125]	RETURN   	R0 1 ; return 

function #103 <?:2127,2130> (17 instructions, 68 bytes at 00000160C67FCB70)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2128]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2128]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2128]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2128]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2128]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2129]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2129]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2129]	GETGLOBAL	R3 K2 ; R3 := ACTIVE_MISSION_FLAG
	9	[2129]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2129]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2129]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2129]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2129]	JMP      	15 ; PC := 15
	14	[2129]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2129]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2129]	RETURN   	R2 2 ; return R2 
	17	[2130]	RETURN   	R0 1 ; return 

function #104 <?:2132,2135> (17 instructions, 68 bytes at 00000160C67FCD00)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2133]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2133]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2133]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2133]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2133]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2134]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2134]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2134]	GETGLOBAL	R3 K2 ; R3 := KUVA_TOWER_MISSION_FLAG
	9	[2134]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2134]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2134]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2134]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2134]	JMP      	15 ; PC := 15
	14	[2134]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2134]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2134]	RETURN   	R2 2 ; return R2 
	17	[2135]	RETURN   	R0 1 ; return 

function #105 <?:2137,2140> (17 instructions, 68 bytes at 00000160C67FCE90)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2138]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2138]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2138]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2138]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2138]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2139]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2139]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2139]	GETGLOBAL	R3 K2 ; R3 := JUNCTION_FLAG
	9	[2139]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2139]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2139]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2139]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2139]	JMP      	15 ; PC := 15
	14	[2139]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2139]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2139]	RETURN   	R2 2 ; return R2 
	17	[2140]	RETURN   	R0 1 ; return 

function #106 <?:2142,2144> (5 instructions, 20 bytes at 00000160C67FD020)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2143]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2143]	MOVE     	R2 R0 ; R2 := R0
	3	[2143]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2143]	RETURN   	R1 2 ; return R1 
	5	[2144]	RETURN   	R0 1 ; return 

function #107 <?:2146,2150> (11 instructions, 44 bytes at 00000160C67FD110)
1 param, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[2149]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2149]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2149]	DIV      	R2 R0 K2 ; R2 := R0 / 100.000000
	4	[2149]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[2149]	MOD      	R1 R1 K3 ; R1 := R1 % 10.000000
	6	[2149]	EQ       	1 R1 K4 ; if R1 == 5.000000 then PC := 9
	7	[2149]	JMP      	9 ; PC := 9
	8	[2149]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 9
	9	[2149]	OP_LOADBOOL	R1 1 0 ; R1 := true
	10	[2149]	RETURN   	R1 2 ; return R1 
	11	[2150]	RETURN   	R0 1 ; return 

function #108 <?:2152,2155> (17 instructions, 68 bytes at 00000160C67FD280)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2153]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2153]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2153]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2153]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2153]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2154]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2154]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2154]	GETGLOBAL	R3 K2 ; R3 := KEY_FLAG
	9	[2154]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2154]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2154]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2154]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2154]	JMP      	15 ; PC := 15
	14	[2154]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2154]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2154]	RETURN   	R2 2 ; return R2 
	17	[2155]	RETURN   	R0 1 ; return 

function #109 <?:2157,2159> (5 instructions, 20 bytes at 00000160C67FD410)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2158]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2158]	MOVE     	R2 R0 ; R2 := R0
	3	[2158]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2158]	RETURN   	R1 2 ; return R1 
	5	[2159]	RETURN   	R0 1 ; return 

function #110 <?:2161,2164> (17 instructions, 68 bytes at 00000160C67FD500)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2162]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2162]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2162]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2162]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2162]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2163]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2163]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2163]	GETGLOBAL	R3 K2 ; R3 := HARD_MODE_FLAG
	9	[2163]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2163]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2163]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2163]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2163]	JMP      	15 ; PC := 15
	14	[2163]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2163]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2163]	RETURN   	R2 2 ; return R2 
	17	[2164]	RETURN   	R0 1 ; return 

function #111 <?:2166,2168> (5 instructions, 20 bytes at 00000160C67FD690)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2167]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2167]	MOVE     	R2 R0 ; R2 := R0
	3	[2167]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2167]	RETURN   	R1 2 ; return R1 
	5	[2168]	RETURN   	R0 1 ; return 

function #112 <?:2170,2175> (23 instructions, 92 bytes at 00000160C67FD780)
0 params, 3 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[2171]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2171]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[2171]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2171]	TEST     	R0 1 ; if R0 then PC := 21
	5	[2171]	JMP      	21 ; PC := 21
	6	[2171]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[2171]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[2171]	GETGLOBAL	R2 K3 ; R2 := gLotusGameRulesType
	9	[2171]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[2171]	TEST     	R0 0 ; if not R0 then PC := 21
	11	[2171]	JMP      	21 ; PC := 21
	12	[2172]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	13	[2172]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xef893aec]
	14	[2172]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[2172]	GETTABLE 	R0 R0 K5 ; R0 := R0["tier"]
	16	[2172]	LT       	1 K6 R0 ; if 0.000000 < R0 then PC := 19
	17	[2172]	JMP      	19 ; PC := 19
	18	[2172]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 19
	19	[2172]	OP_LOADBOOL	R0 1 0 ; R0 := true
	20	[2172]	RETURN   	R0 2 ; return R0 
	21	[2174]	OP_LOADBOOL	R0 0 0 ; R0 := false
	22	[2174]	RETURN   	R0 2 ; return R0 
	23	[2175]	RETURN   	R0 1 ; return 

function #113 <?:2177,2180> (17 instructions, 68 bytes at 00000160C67FD970)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2178]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2178]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2178]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2178]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2178]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2179]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2179]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2179]	GETGLOBAL	R3 K2 ; R3 := HARD_DAILY_FLAG
	9	[2179]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2179]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2179]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2179]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2179]	JMP      	15 ; PC := 15
	14	[2179]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2179]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2179]	RETURN   	R2 2 ; return R2 
	17	[2180]	RETURN   	R0 1 ; return 

function #114 <?:2182,2184> (5 instructions, 20 bytes at 00000160C67FDB00)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2183]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2183]	MOVE     	R2 R0 ; R2 := R0
	3	[2183]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2183]	RETURN   	R1 2 ; return R1 
	5	[2184]	RETURN   	R0 1 ; return 

function #115 <?:2186,2205> (48 instructions, 192 bytes at 00000160C67FDBF0)
1 param, 9 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[2188]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[2188]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedScenarioGameModeIds"]
	3	[2188]	TEST     	R1 1 ; if R1 then PC := 35
	4	[2188]	JMP      	35 ; PC := 35
	5	[2189]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[2189]	CALL     	R1 1 2 ; R1 := R1()
	7	[2190]	GETGLOBAL	R2 K0 ; R2 := _T
	8	[2190]	NEWTABLE 	R3 2 0 ; R3 := {}
	9	[2192]	GETUPVAL 	R4 U1 ; R4 := U1
	10	[2192]	GETGLOBAL	R5 K2 ; R5 := 0x64fb1586
	11	[2192]	GETGLOBAL	R6 K3 ; R6 := SCENARIO_EVENT_HUB_TAG
	12	[2192]	CALL     	R5 2 2 ; R5 := R5(R6)
	13	[2192]	GETGLOBAL	R6 K4 ; R6 := HUB_TAG
	14	[2192]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	15	[2192]	MOVE     	R6 R1 ; R6 := R1
	16	[2192]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	17	[2193]	GETUPVAL 	R5 U1 ; R5 := U1
	18	[2193]	GETGLOBAL	R6 K2 ; R6 := 0x64fb1586
	19	[2193]	GETGLOBAL	R7 K5 ; R7 := SCENARIO_EVENT_GROUND_TAG
	20	[2193]	CALL     	R6 2 2 ; R6 := R6(R7)
	21	[2193]	GETGLOBAL	R7 K6 ; R7 := KEY_TAG
	22	[2193]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	23	[2193]	MOVE     	R7 R1 ; R7 := R1
	24	[2193]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	25	[2194]	GETUPVAL 	R6 U1 ; R6 := U1
	26	[2194]	GETGLOBAL	R7 K2 ; R7 := 0x64fb1586
	27	[2194]	GETGLOBAL	R8 K7 ; R8 := SCENARIO_EVENT_SPACE_TAG
	28	[2194]	CALL     	R7 2 2 ; R7 := R7(R8)
	29	[2194]	GETGLOBAL	R8 K6 ; R8 := KEY_TAG
	30	[2194]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	31	[2194]	MOVE     	R8 R1 ; R8 := R1
	32	[2194]	CALL     	R6 3 0 ; R6,... := R6(R7,R8)
	33	[2195]	SETLIST  	R3 0 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 0
	34	[2195]	SETTABLE 	R2 K1 R3 ; R2["CachedScenarioGameModeIds"] := R3
	35	[2198]	GETGLOBAL	R2 K8 ; R2 := 0xcfc01047
	36	[2198]	GETGLOBAL	R3 K0 ; R3 := _T
	37	[2198]	GETTABLE 	R3 R3 K1 ; R3 := R3["CachedScenarioGameModeIds"]
	38	[2198]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	39	[2198]	JMP      	44 ; PC := 44
	40	[2199]	EQ       	0 R0 R6 ; if R0 ~= R6 then PC := 44
	41	[2199]	JMP      	44 ; PC := 44
	42	[2200]	OP_LOADBOOL	R7 1 0 ; R7 := true
	43	[2200]	RETURN   	R7 2 ; return R7 
	44	[2198]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 40; R4 := R5 end
	45	[2201]	JMP      	40 ; PC := 40
	46	[2204]	OP_LOADBOOL	R7 0 0 ; R7 := false
	47	[2204]	RETURN   	R7 2 ; return R7 
	48	[2205]	RETURN   	R0 1 ; return 

function #116 <?:2207,2210> (17 instructions, 68 bytes at 00000160C67FDF10)
1 param, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2208]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2208]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2208]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2208]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2208]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2209]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	7	[2209]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x55f27c30]
	8	[2209]	GETGLOBAL	R3 K2 ; R3 := VOID_STORM_FLAG
	9	[2209]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[2209]	DIV      	R3 R3 R4 ; R3 := R3 / R4
	11	[2209]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[2209]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	13	[2209]	JMP      	15 ; PC := 15
	14	[2209]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 15
	15	[2209]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[2209]	RETURN   	R2 2 ; return R2 
	17	[2210]	RETURN   	R0 1 ; return 

function #117 <?:2212,2214> (9 instructions, 36 bytes at 00000160C67FE0A0)
1 param, 3 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[2213]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2213]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2213]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2213]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2213]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2213]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[2213]	MOD      	R1 R1 R2 ; R1 := R1 % R2
	8	[2213]	RETURN   	R1 2 ; return R1 
	9	[2214]	RETURN   	R0 1 ; return 

function #118 <?:2216,2218> (11 instructions, 44 bytes at 00000160C67FE1E0)
1 param, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[2217]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[2217]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	3	[2217]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x1a94c9cc]
	4	[2217]	GETGLOBAL	R3 K3 ; R3 := 0x64fb1586
	5	[2217]	MOVE     	R4 R0 ; R4 := R0
	6	[2217]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[2217]	LOADK    	R4 := -3.000000
	8	[2217]	CALL     	R2 3 0 ; R2,... := R2(R3,R4)
	9	[2217]	TAILCALL 	R1 0 0 ; R1,... := R1(R2,...)
	10	[2217]	RETURN   	R1 0 ; return R1,... 
	11	[2218]	RETURN   	R0 1 ; return 

function #119 <?:2220,2280> (248 instructions, 992 bytes at 00000160C67FE340)
1 param, 8 slots, 11 upvalues, 0 locals, 64 constants, 0 functions
	1	[2221]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[2221]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	3	[2221]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2221]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	5	[2221]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[2221]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[2221]	MOD      	R1 R1 R2 ; R1 := R1 % R2
	8	[2222]	GETGLOBAL	R2 K2 ; R2 := 0x03f57322
	9	[2222]	GETGLOBAL	R3 K3 ; R3 := 0x7f5022cf
	10	[2222]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x1a94c9cc]
	11	[2222]	GETGLOBAL	R4 K5 ; R4 := 0x64fb1586
	12	[2222]	MOVE     	R5 R0 ; R5 := R0
	13	[2222]	CALL     	R4 2 2 ; R4 := R4(R5)
	14	[2222]	LOADK    	R5 := -3.000000
	15	[2222]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	16	[2222]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	17	[2223]	GETUPVAL 	R3 U2 ; R3 := U2
	18	[2223]	MOVE     	R4 R0 ; R4 := R0
	19	[2223]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[2223]	TEST     	R3 0 ; if not R3 then PC := 27
	21	[2223]	JMP      	27 ; PC := 27
	22	[2224]	LOADK    	R3 K6 ; R3 := "PvpNode"
	23	[2224]	MOVE     	R4 R2 ; R4 := R2
	24	[2224]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	25	[2224]	RETURN   	R3 2 ; return R3 
	26	[2224]	JMP      	248 ; PC := 248
	27	[2225]	GETUPVAL 	R3 U3 ; R3 := U3
	28	[2225]	MOVE     	R4 R0 ; R4 := R0
	29	[2225]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[2225]	TEST     	R3 0 ; if not R3 then PC := 73
	31	[2225]	JMP      	73 ; PC := 73
	32	[2225]	GETGLOBAL	R3 K7 ; R3 := 0x0032441c
	33	[2225]	GETTABLE 	R3 R3 K8 ; R3 := R3["CachedGoalInfo"]
	34	[2225]	TEST     	R3 0 ; if not R3 then PC := 44
	35	[2225]	JMP      	44 ; PC := 44
	36	[2225]	GETGLOBAL	R3 K7 ; R3 := 0x0032441c
	37	[2225]	GETTABLE 	R3 R3 K8 ; R3 := R3["CachedGoalInfo"]
	38	[2225]	LOADK    	R4 K9 ; R4 := "EventNode"
	39	[2225]	MOVE     	R5 R2 ; R5 := R2
	40	[2225]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	41	[2225]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	42	[2225]	TEST     	R3 1 ; if R3 then PC := 68
	43	[2225]	JMP      	68 ; PC := 68
	44	[2225]	GETGLOBAL	R3 K7 ; R3 := 0x0032441c
	45	[2225]	GETTABLE 	R3 R3 K10 ; R3 := R3["MergedGoalNodes"]
	46	[2225]	TEST     	R3 0 ; if not R3 then PC := 56
	47	[2225]	JMP      	56 ; PC := 56
	48	[2225]	GETGLOBAL	R3 K7 ; R3 := 0x0032441c
	49	[2225]	GETTABLE 	R3 R3 K10 ; R3 := R3["MergedGoalNodes"]
	50	[2225]	LOADK    	R4 K9 ; R4 := "EventNode"
	51	[2225]	MOVE     	R5 R2 ; R5 := R2
	52	[2225]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	53	[2225]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	54	[2225]	TEST     	R3 1 ; if R3 then PC := 68
	55	[2225]	JMP      	68 ; PC := 68
	56	[2225]	GETGLOBAL	R3 K11 ; R3 := _T
	57	[2225]	GETTABLE 	R3 R3 K12 ; R3 := R3["LockedGoalList"]
	58	[2225]	TEST     	R3 0 ; if not R3 then PC := 73
	59	[2225]	JMP      	73 ; PC := 73
	60	[2225]	GETGLOBAL	R3 K11 ; R3 := _T
	61	[2225]	GETTABLE 	R3 R3 K12 ; R3 := R3["LockedGoalList"]
	62	[2225]	LOADK    	R4 K9 ; R4 := "EventNode"
	63	[2225]	MOVE     	R5 R2 ; R5 := R2
	64	[2225]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	65	[2225]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	66	[2225]	TEST     	R3 0 ; if not R3 then PC := 73
	67	[2225]	JMP      	73 ; PC := 73
	68	[2226]	LOADK    	R3 K9 ; R3 := "EventNode"
	69	[2226]	MOVE     	R4 R2 ; R4 := R2
	70	[2226]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	71	[2226]	RETURN   	R3 2 ; return R3 
	72	[2226]	JMP      	248 ; PC := 248
	73	[2227]	GETUPVAL 	R3 U4 ; R3 := U4
	74	[2227]	MOVE     	R4 R0 ; R4 := R0
	75	[2227]	CALL     	R3 2 2 ; R3 := R3(R4)
	76	[2227]	TEST     	R3 0 ; if not R3 then PC := 83
	77	[2227]	JMP      	83 ; PC := 83
	78	[2228]	LOADK    	R3 K13 ; R3 := "SyndicateNode"
	79	[2228]	MOVE     	R4 R2 ; R4 := R2
	80	[2228]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	81	[2228]	RETURN   	R3 2 ; return R3 
	82	[2228]	JMP      	248 ; PC := 248
	83	[2229]	GETUPVAL 	R3 U5 ; R3 := U5
	84	[2229]	MOVE     	R4 R0 ; R4 := R0
	85	[2229]	CALL     	R3 2 2 ; R3 := R3(R4)
	86	[2229]	TEST     	R3 0 ; if not R3 then PC := 93
	87	[2229]	JMP      	93 ; PC := 93
	88	[2230]	LOADK    	R3 K14 ; R3 := "SortieNode"
	89	[2230]	MOVE     	R4 R2 ; R4 := R2
	90	[2230]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	91	[2230]	RETURN   	R3 2 ; return R3 
	92	[2230]	JMP      	248 ; PC := 248
	93	[2231]	GETUPVAL 	R3 U6 ; R3 := U6
	94	[2231]	MOVE     	R4 R0 ; R4 := R0
	95	[2231]	CALL     	R3 2 2 ; R3 := R3(R4)
	96	[2231]	TEST     	R3 0 ; if not R3 then PC := 188
	97	[2231]	JMP      	188 ; PC := 188
	98	[2232]	GETGLOBAL	R3 K0 ; R3 := 0x5bced4c4
	99	[2232]	GETTABLE 	R3 R3 K15 ; R3 := R3[0xb62ecfe0]
	100	[2232]	MOVE     	R4 R1 ; R4 := R1
	101	[2232]	LOADK    	R5 := 1.000000
	102	[2232]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	103	[2232]	MOVE     	R1 R3 ; R1 := R3
	104	[2233]	EQ       	0 R1 K16 ; if R1 ~= 3.000000 then PC := 112
	105	[2233]	JMP      	112 ; PC := 112
	106	[2233]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	107	[2233]	EQ       	0 R3 K18 ; if R3 ~= 2.000000 then PC := 112
	108	[2233]	JMP      	112 ; PC := 112
	109	[2235]	LOADK    	R3 K19 ; R3 := "TennoConHUB2"
	110	[2235]	RETURN   	R3 2 ; return R3 
	111	[2235]	JMP      	248 ; PC := 248
	112	[2236]	EQ       	0 R1 K16 ; if R1 ~= 3.000000 then PC := 120
	113	[2236]	JMP      	120 ; PC := 120
	114	[2236]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	115	[2236]	EQ       	0 R3 K16 ; if R3 ~= 3.000000 then PC := 120
	116	[2236]	JMP      	120 ; PC := 120
	117	[2238]	LOADK    	R3 K20 ; R3 := "IronwakeHUB3"
	118	[2238]	RETURN   	R3 2 ; return R3 
	119	[2238]	JMP      	248 ; PC := 248
	120	[2239]	EQ       	0 R1 K16 ; if R1 ~= 3.000000 then PC := 130
	121	[2239]	JMP      	130 ; PC := 130
	122	[2239]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	123	[2239]	EQ       	0 R3 K21 ; if R3 ~= 4.000000 then PC := 130
	124	[2239]	JMP      	130 ; PC := 130
	125	[2241]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	126	[2241]	GETGLOBAL	R4 K22 ; R4 := CETUS_NODE_TAG
	127	[2241]	TAILCALL 	R3 2 0 ; R3,... := R3(R4)
	128	[2241]	RETURN   	R3 0 ; return R3,... 
	129	[2241]	JMP      	248 ; PC := 248
	130	[2242]	EQ       	0 R1 K16 ; if R1 ~= 3.000000 then PC := 140
	131	[2242]	JMP      	140 ; PC := 140
	132	[2242]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	133	[2242]	EQ       	0 R3 K23 ; if R3 ~= 5.000000 then PC := 140
	134	[2242]	JMP      	140 ; PC := 140
	135	[2244]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	136	[2244]	GETGLOBAL	R4 K24 ; R4 := SCENARIO_EVENT_HUB_TAG
	137	[2244]	TAILCALL 	R3 2 0 ; R3,... := R3(R4)
	138	[2244]	RETURN   	R3 0 ; return R3,... 
	139	[2244]	JMP      	248 ; PC := 248
	140	[2245]	EQ       	0 R1 K16 ; if R1 ~= 3.000000 then PC := 148
	141	[2245]	JMP      	148 ; PC := 148
	142	[2245]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	143	[2245]	EQ       	0 R3 K25 ; if R3 ~= 7.000000 then PC := 148
	144	[2245]	JMP      	148 ; PC := 148
	145	[2247]	LOADK    	R3 K26 ; R3 := "DevStreamHUB7"
	146	[2247]	RETURN   	R3 2 ; return R3 
	147	[2247]	JMP      	248 ; PC := 248
	148	[2248]	EQ       	0 R1 K18 ; if R1 ~= 2.000000 then PC := 158
	149	[2248]	JMP      	158 ; PC := 158
	150	[2248]	MOD      	R3 R0 K17 ; R3 := R0 % 10.000000
	151	[2248]	EQ       	0 R3 K27 ; if R3 ~= 1.000000 then PC := 158
	152	[2248]	JMP      	158 ; PC := 158
	153	[2250]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	154	[2250]	GETGLOBAL	R4 K28 ; R4 := FORTUNA_NODE_TAG
	155	[2250]	TAILCALL 	R3 2 0 ; R3,... := R3(R4)
	156	[2250]	RETURN   	R3 0 ; return R3,... 
	157	[2250]	JMP      	248 ; PC := 248
	158	[2252]	NEWTABLE 	R3 0 15 ; R3 := {}
	159	[2252]	SETTABLE 	R3 K27 K29 ; R3[1.000000] := "MercuryHUB"
	160	[2252]	SETTABLE 	R3 K18 K30 ; R3[2.000000] := "VenusHUB"
	161	[2252]	SETTABLE 	R3 K16 K31 ; R3[3.000000] := "EarthHUB"
	162	[2252]	SETTABLE 	R3 K21 K32 ; R3[4.000000] := "TradeHUB1"
	163	[2252]	SETTABLE 	R3 K23 K33 ; R3[5.000000] := "JupiterHUB"
	164	[2252]	SETTABLE 	R3 K34 K35 ; R3[6.000000] := "SaturnHUB"
	165	[2252]	SETTABLE 	R3 K25 K36 ; R3[7.000000] := "UranusHUB"
	166	[2252]	SETTABLE 	R3 K37 K38 ; R3[8.000000] := "NeptuneHUB"
	167	[2252]	SETTABLE 	R3 K39 K40 ; R3[9.000000] := "PlutoHUB"
	168	[2252]	SETTABLE 	R3 K17 K41 ; R3[10.000000] := "CeresHUB"
	169	[2252]	SETTABLE 	R3 K42 K43 ; R3[11.000000] := "ErisHUB"
	170	[2252]	SETTABLE 	R3 K44 K45 ; R3[12.000000] := "SednaHUB"
	171	[2252]	SETTABLE 	R3 K46 K47 ; R3[13.000000] := "EuropaHUB"
	172	[2252]	SETTABLE 	R3 K48 K49 ; R3[17.000000] := "DeimosHub"
	173	[2252]	SETTABLE 	R3 K50 K51 ; R3[22.000000] := "ZarimanHub"
	174	[2253]	GETTABLE 	R4 R3 R1 ; R4 := R3[R1]
	175	[2253]	TEST     	R4 0 ; if not R4 then PC := 179
	176	[2253]	JMP      	179 ; PC := 179
	177	[2254]	GETTABLE 	R4 R3 R1 ; R4 := R3[R1]
	178	[2254]	RETURN   	R4 2 ; return R4 
	179	[2256]	GETGLOBAL	R4 K52 ; R4 := 0x3d106989
	180	[2256]	LOADK    	R5 K53 ; R5 := "Invalid hub gameModeId "
	181	[2256]	MOVE     	R6 R0 ; R6 := R0
	182	[2256]	LOADK    	R7 K54 ; R7 := "! Defaulting to MercuryHUB"
	183	[2256]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	184	[2256]	CALL     	R4 2 1 ; R4(R5)
	185	[2257]	GETTABLE 	R4 R3 K27 ; R4 := R3[1.000000]
	186	[2257]	RETURN   	R4 2 ; return R4 
	187	[2258]	JMP      	248 ; PC := 248
	188	[2259]	GETUPVAL 	R4 U7 ; R4 := U7
	189	[2259]	MOVE     	R5 R0 ; R5 := R0
	190	[2259]	CALL     	R4 2 2 ; R4 := R4(R5)
	191	[2259]	TEST     	R4 0 ; if not R4 then PC := 198
	192	[2259]	JMP      	198 ; PC := 198
	193	[2260]	LOADK    	R4 K55 ; R4 := "CrewBattleNode"
	194	[2260]	MOVE     	R5 R2 ; R5 := R2
	195	[2260]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	196	[2260]	RETURN   	R4 2 ; return R4 
	197	[2260]	JMP      	248 ; PC := 248
	198	[2261]	GETUPVAL 	R4 U8 ; R4 := U8
	199	[2261]	MOVE     	R5 R0 ; R5 := R0
	200	[2261]	CALL     	R4 2 2 ; R4 := R4(R5)
	201	[2261]	TEST     	R4 0 ; if not R4 then PC := 212
	202	[2261]	JMP      	212 ; PC := 212
	203	[2262]	GETUPVAL 	R4 U0 ; R4 := U0
	204	[2262]	MOD      	R4 R0 R4 ; R4 := R0 % R4
	205	[2263]	GETUPVAL 	R5 U9 ; R5 := U9
	206	[2263]	CALL     	R5 1 2 ; R5 := R5()
	207	[2263]	SELF     	R5 R5 K56 ; R6 := R5; R5 := R5[0x63e6e330]
	208	[2263]	MOVE     	R7 R4 ; R7 := R4
	209	[2263]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	210	[2264]	RETURN   	R5 2 ; return R5 
	211	[2264]	JMP      	248 ; PC := 248
	212	[2265]	EQ       	0 R1 K57 ; if R1 ~= 16.000000 then PC := 226
	213	[2265]	JMP      	226 ; PC := 226
	214	[2266]	LE       	0 K58 R2 ; if 80.000000 > R2 then PC := 221
	215	[2266]	JMP      	221 ; PC := 221
	216	[2268]	SUB      	R2 R2 K58 ; R2 := R2 - 80.000000
	217	[2269]	LOADK    	R6 K59 ; R6 := "ClanNode"
	218	[2269]	MOVE     	R7 R2 ; R7 := R2
	219	[2269]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	220	[2269]	RETURN   	R6 2 ; return R6 
	221	[2271]	LOADK    	R6 K60 ; R6 := "SettlementNode"
	222	[2271]	MOVE     	R7 R2 ; R7 := R2
	223	[2271]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	224	[2271]	RETURN   	R6 2 ; return R6 
	225	[2271]	JMP      	248 ; PC := 248
	226	[2272]	LT       	0 K61 R2 ; if 0.000000 >= R2 then PC := 246
	227	[2272]	JMP      	246 ; PC := 246
	228	[2273]	GETUPVAL 	R6 U10 ; R6 := U10
	229	[2273]	GETTABLE 	R6 R6 R1 ; R6 := R6[R1]
	230	[2273]	TEST     	R6 0 ; if not R6 then PC := 241
	231	[2273]	JMP      	241 ; PC := 241
	232	[2273]	GETUPVAL 	R6 U10 ; R6 := U10
	233	[2273]	GETTABLE 	R6 R6 R1 ; R6 := R6[R1]
	234	[2273]	GETTABLE 	R6 R6 R2 ; R6 := R6[R2]
	235	[2273]	EQ       	0 R6 K62 ; if R6 ~= true then PC := 241
	236	[2273]	JMP      	241 ; PC := 241
	237	[2274]	LOADK    	R6 K59 ; R6 := "ClanNode"
	238	[2274]	MOVE     	R7 R2 ; R7 := R2
	239	[2274]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	240	[2274]	RETURN   	R6 2 ; return R6 
	241	[2276]	LOADK    	R6 K63 ; R6 := "SolNode"
	242	[2276]	MOVE     	R7 R2 ; R7 := R2
	243	[2276]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	244	[2276]	RETURN   	R6 2 ; return R6 
	245	[2276]	JMP      	248 ; PC := 248
	246	[2278]	LOADNIL  	R6 R6 ; R6 := nil
	247	[2278]	RETURN   	R6 2 ; return R6 
	248	[2280]	RETURN   	R0 1 ; return 

function #120 <?:2282,2284> (5 instructions, 20 bytes at 00000160C67FF660)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2283]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2283]	MOVE     	R2 R0 ; R2 := R0
	3	[2283]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2283]	RETURN   	R1 2 ; return R1 
	5	[2284]	RETURN   	R0 1 ; return 

function #121 <?:2286,2320> (122 instructions, 488 bytes at 00000160C67FF750)
1 param, 3 slots, 15 upvalues, 0 locals, 16 constants, 0 functions
	1	[2287]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2287]	MOVE     	R2 R0 ; R2 := R0
	3	[2287]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2287]	TEST     	R1 0 ; if not R1 then PC := 9
	5	[2287]	JMP      	9 ; PC := 9
	6	[2288]	GETGLOBAL	R1 K0 ; R1 := ALERT_TAG
	7	[2288]	RETURN   	R1 2 ; return R1 
	8	[2288]	JMP      	120 ; PC := 120
	9	[2289]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[2289]	MOVE     	R2 R0 ; R2 := R0
	11	[2289]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[2289]	TEST     	R1 0 ; if not R1 then PC := 17
	13	[2289]	JMP      	17 ; PC := 17
	14	[2290]	GETGLOBAL	R1 K1 ; R1 := EVENT_TAG
	15	[2290]	RETURN   	R1 2 ; return R1 
	16	[2290]	JMP      	120 ; PC := 120
	17	[2291]	GETUPVAL 	R1 U2 ; R1 := U2
	18	[2291]	MOVE     	R2 R0 ; R2 := R0
	19	[2291]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[2291]	TEST     	R1 0 ; if not R1 then PC := 25
	21	[2291]	JMP      	25 ; PC := 25
	22	[2292]	GETGLOBAL	R1 K2 ; R1 := INVASION_ATTACKER_TAG
	23	[2292]	RETURN   	R1 2 ; return R1 
	24	[2292]	JMP      	120 ; PC := 120
	25	[2293]	GETUPVAL 	R1 U3 ; R1 := U3
	26	[2293]	MOVE     	R2 R0 ; R2 := R0
	27	[2293]	CALL     	R1 2 2 ; R1 := R1(R2)
	28	[2293]	TEST     	R1 0 ; if not R1 then PC := 33
	29	[2293]	JMP      	33 ; PC := 33
	30	[2294]	GETGLOBAL	R1 K3 ; R1 := INVASION_DEFENDER_TAG
	31	[2294]	RETURN   	R1 2 ; return R1 
	32	[2294]	JMP      	120 ; PC := 120
	33	[2295]	GETUPVAL 	R1 U4 ; R1 := U4
	34	[2295]	MOVE     	R2 R0 ; R2 := R0
	35	[2295]	CALL     	R1 2 2 ; R1 := R1(R2)
	36	[2295]	TEST     	R1 0 ; if not R1 then PC := 41
	37	[2295]	JMP      	41 ; PC := 41
	38	[2296]	GETGLOBAL	R1 K4 ; R1 := SYNDICATE_MISSION_TAG
	39	[2296]	RETURN   	R1 2 ; return R1 
	40	[2296]	JMP      	120 ; PC := 120
	41	[2297]	GETUPVAL 	R1 U5 ; R1 := U5
	42	[2297]	MOVE     	R2 R0 ; R2 := R0
	43	[2297]	CALL     	R1 2 2 ; R1 := R1(R2)
	44	[2297]	TEST     	R1 0 ; if not R1 then PC := 49
	45	[2297]	JMP      	49 ; PC := 49
	46	[2298]	GETGLOBAL	R1 K5 ; R1 := SORTIE_MISSION_TAG
	47	[2298]	RETURN   	R1 2 ; return R1 
	48	[2298]	JMP      	120 ; PC := 120
	49	[2299]	GETUPVAL 	R1 U6 ; R1 := U6
	50	[2299]	MOVE     	R2 R0 ; R2 := R0
	51	[2299]	CALL     	R1 2 2 ; R1 := R1(R2)
	52	[2299]	TEST     	R1 0 ; if not R1 then PC := 57
	53	[2299]	JMP      	57 ; PC := 57
	54	[2300]	GETGLOBAL	R1 K6 ; R1 := LITE_SORTIE_MISSION_TAG
	55	[2300]	RETURN   	R1 2 ; return R1 
	56	[2300]	JMP      	120 ; PC := 120
	57	[2301]	GETUPVAL 	R1 U7 ; R1 := U7
	58	[2301]	MOVE     	R2 R0 ; R2 := R0
	59	[2301]	CALL     	R1 2 2 ; R1 := R1(R2)
	60	[2301]	TEST     	R1 0 ; if not R1 then PC := 65
	61	[2301]	JMP      	65 ; PC := 65
	62	[2302]	GETGLOBAL	R1 K7 ; R1 := HUB_TAG
	63	[2302]	RETURN   	R1 2 ; return R1 
	64	[2302]	JMP      	120 ; PC := 120
	65	[2303]	GETUPVAL 	R1 U8 ; R1 := U8
	66	[2303]	MOVE     	R2 R0 ; R2 := R0
	67	[2303]	CALL     	R1 2 2 ; R1 := R1(R2)
	68	[2303]	TEST     	R1 0 ; if not R1 then PC := 73
	69	[2303]	JMP      	73 ; PC := 73
	70	[2304]	GETGLOBAL	R1 K8 ; R1 := ACTIVE_MISSION_TAG
	71	[2304]	RETURN   	R1 2 ; return R1 
	72	[2304]	JMP      	120 ; PC := 120
	73	[2305]	GETUPVAL 	R1 U9 ; R1 := U9
	74	[2305]	MOVE     	R2 R0 ; R2 := R0
	75	[2305]	CALL     	R1 2 2 ; R1 := R1(R2)
	76	[2305]	TEST     	R1 0 ; if not R1 then PC := 81
	77	[2305]	JMP      	81 ; PC := 81
	78	[2306]	GETGLOBAL	R1 K9 ; R1 := KUVA_TOWER_MISSION_TAG
	79	[2306]	RETURN   	R1 2 ; return R1 
	80	[2306]	JMP      	120 ; PC := 120
	81	[2307]	GETUPVAL 	R1 U10 ; R1 := U10
	82	[2307]	MOVE     	R2 R0 ; R2 := R0
	83	[2307]	CALL     	R1 2 2 ; R1 := R1(R2)
	84	[2307]	TEST     	R1 0 ; if not R1 then PC := 89
	85	[2307]	JMP      	89 ; PC := 89
	86	[2308]	GETGLOBAL	R1 K10 ; R1 := KEY_TAG
	87	[2308]	RETURN   	R1 2 ; return R1 
	88	[2308]	JMP      	120 ; PC := 120
	89	[2309]	GETUPVAL 	R1 U11 ; R1 := U11
	90	[2309]	MOVE     	R2 R0 ; R2 := R0
	91	[2309]	CALL     	R1 2 2 ; R1 := R1(R2)
	92	[2309]	TEST     	R1 0 ; if not R1 then PC := 97
	93	[2309]	JMP      	97 ; PC := 97
	94	[2310]	GETGLOBAL	R1 K11 ; R1 := NIGHTMARE_TAG
	95	[2310]	RETURN   	R1 2 ; return R1 
	96	[2310]	JMP      	120 ; PC := 120
	97	[2311]	GETUPVAL 	R1 U12 ; R1 := U12
	98	[2311]	MOVE     	R2 R0 ; R2 := R0
	99	[2311]	CALL     	R1 2 2 ; R1 := R1(R2)
	100	[2311]	TEST     	R1 0 ; if not R1 then PC := 105
	101	[2311]	JMP      	105 ; PC := 105
	102	[2312]	GETGLOBAL	R1 K12 ; R1 := HARD_DAILY_TAG
	103	[2312]	RETURN   	R1 2 ; return R1 
	104	[2312]	JMP      	120 ; PC := 120
	105	[2313]	GETUPVAL 	R1 U13 ; R1 := U13
	106	[2313]	MOVE     	R2 R0 ; R2 := R0
	107	[2313]	CALL     	R1 2 2 ; R1 := R1(R2)
	108	[2313]	TEST     	R1 0 ; if not R1 then PC := 113
	109	[2313]	JMP      	113 ; PC := 113
	110	[2314]	GETGLOBAL	R1 K13 ; R1 := HARD_MODE_TAG
	111	[2314]	RETURN   	R1 2 ; return R1 
	112	[2314]	JMP      	120 ; PC := 120
	113	[2315]	GETUPVAL 	R1 U14 ; R1 := U14
	114	[2315]	MOVE     	R2 R0 ; R2 := R0
	115	[2315]	CALL     	R1 2 2 ; R1 := R1(R2)
	116	[2315]	TEST     	R1 0 ; if not R1 then PC := 120
	117	[2315]	JMP      	120 ; PC := 120
	118	[2316]	GETGLOBAL	R1 K14 ; R1 := VOID_STORM_TAG
	119	[2316]	RETURN   	R1 2 ; return R1 
	120	[2319]	LOADK    	R1 K15 ; R1 := ""
	121	[2319]	RETURN   	R1 2 ; return R1 
	122	[2320]	RETURN   	R0 1 ; return 

function #122 <?:2322,2332> (35 instructions, 140 bytes at 00000160C67FFCF0)
1 param, 8 slots, 3 upvalues, 0 locals, 7 constants, 0 functions
	1	[2323]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2323]	CALL     	R1 1 2 ; R1 := R1()
	3	[2324]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[2324]	MOVE     	R3 R0 ; R3 := R0
	5	[2324]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[2325]	LOADNIL  	R3 R3 ; R3 := nil
	7	[2326]	TEST     	R2 0 ; if not R2 then PC := 15
	8	[2326]	JMP      	15 ; PC := 15
	9	[2327]	SELF     	R4 R1 K0 ; R5 := R1; R4 := R1[0xc18bf6f0]
	10	[2327]	GETGLOBAL	R6 K1 ; R6 := 0x0469f296
	11	[2327]	MOVE     	R7 R2 ; R7 := R2
	12	[2327]	CALL     	R6 2 0 ; R6,... := R6(R7)
	13	[2327]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	14	[2327]	MOVE     	R3 R4 ; R3 := R4
	15	[2330]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	16	[2330]	MOVE     	R5 R3 ; R5 := R3
	17	[2330]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[2330]	TEST     	R4 1 ; if R4 then PC := 30
	19	[2330]	JMP      	30 ; PC := 30
	20	[2330]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	21	[2330]	GETTABLE 	R5 R3 K3 ; R5 := R3["gameRules"]
	22	[2330]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[2330]	TEST     	R4 1 ; if R4 then PC := 30
	24	[2330]	JMP      	30 ; PC := 30
	25	[2330]	GETTABLE 	R4 R3 K3 ; R4 := R3["gameRules"]
	26	[2330]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0xf2deaf69]
	27	[2330]	GETUPVAL 	R6 U2 ; R6 := U2
	28	[2330]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	29	[2330]	JMP      	32 ; PC := 32
	30	[2330]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 31
	31	[2330]	OP_LOADBOOL	R4 1 0 ; R4 := true
	32	[2331]	GETGLOBAL	R5 K5 ; R5 := _T
	33	[2331]	GETTABLE 	R5 R5 K6 ; R5 := R5["CachedPvpNodes"]
	34	[2331]	SETTABLE 	R5 R0 R4 ; R5[R0] := R4
	35	[2332]	RETURN   	R0 1 ; return 

function #123 <?:2334,2345> (20 instructions, 80 bytes at 00000160C67FFFC0)
1 param, 3 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[2335]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[2335]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedPvpNodes"]
	3	[2335]	TEST     	R1 1 ; if R1 then PC := 8
	4	[2335]	JMP      	8 ; PC := 8
	5	[2336]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[2336]	NEWTABLE 	R2 0 0 ; R2 := {}
	7	[2336]	SETTABLE 	R1 K1 R2 ; R1["CachedPvpNodes"] := R2
	8	[2340]	GETGLOBAL	R1 K0 ; R1 := _T
	9	[2340]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedPvpNodes"]
	10	[2340]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	11	[2340]	TEST     	R1 1 ; if R1 then PC := 16
	12	[2340]	JMP      	16 ; PC := 16
	13	[2341]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[2341]	MOVE     	R2 R0 ; R2 := R0
	15	[2341]	CALL     	R1 2 1 ; R1(R2)
	16	[2344]	GETGLOBAL	R1 K0 ; R1 := _T
	17	[2344]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedPvpNodes"]
	18	[2344]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	19	[2344]	RETURN   	R1 2 ; return R1 
	20	[2345]	RETURN   	R0 1 ; return 

function #124 <?:2347,2349> (5 instructions, 20 bytes at 00000160C6800140)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2348]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2348]	MOVE     	R2 R0 ; R2 := R0
	3	[2348]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2348]	RETURN   	R1 2 ; return R1 
	5	[2349]	RETURN   	R0 1 ; return 

function #125 <?:2351,2359> (44 instructions, 176 bytes at 00000160C6800230)
1 param, 7 slots, 6 upvalues, 0 locals, 10 constants, 0 functions
	1	[2352]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2352]	MOVE     	R2 R0 ; R2 := R0
	3	[2352]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2352]	TEST     	R1 1 ; if R1 then PC := 11
	5	[2352]	JMP      	11 ; PC := 11
	6	[2352]	GETUPVAL 	R1 U1 ; R1 := U1
	7	[2352]	MOVE     	R2 R0 ; R2 := R0
	8	[2352]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[2352]	TEST     	R1 0 ; if not R1 then PC := 40
	10	[2352]	JMP      	40 ; PC := 40
	11	[2353]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	12	[2353]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x55f27c30]
	13	[2353]	GETUPVAL 	R2 U2 ; R2 := U2
	14	[2353]	DIV      	R2 R0 R2 ; R2 := R0 / R2
	15	[2353]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[2353]	GETUPVAL 	R2 U3 ; R2 := U3
	17	[2353]	MOD      	R1 R1 R2 ; R1 := R1 % R2
	18	[2354]	GETGLOBAL	R2 K2 ; R2 := 0x03f57322
	19	[2354]	GETGLOBAL	R3 K3 ; R3 := 0x7f5022cf
	20	[2354]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x1a94c9cc]
	21	[2354]	GETGLOBAL	R4 K5 ; R4 := 0x64fb1586
	22	[2354]	MOVE     	R5 R0 ; R5 := R0
	23	[2354]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[2354]	LOADK    	R5 := -3.000000
	25	[2354]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	26	[2354]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	27	[2355]	GETUPVAL 	R3 U4 ; R3 := U4
	28	[2355]	GETTABLE 	R3 R3 K6 ; R3 := R3[0x06d055f9]
	29	[2355]	EQ       	1 R1 K7 ; if R1 == 16.000000 then PC := 32
	30	[2355]	JMP      	32 ; PC := 32
	31	[2355]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 32
	32	[2355]	OP_LOADBOOL	R4 1 0 ; R4 := true
	33	[2355]	LOADK    	R5 K8 ; R5 := "SettlementNode"
	34	[2355]	LOADK    	R6 K9 ; R6 := "SolNode"
	35	[2355]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	36	[2355]	MOVE     	R4 R2 ; R4 := R2
	37	[2355]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	38	[2355]	RETURN   	R3 2 ; return R3 
	39	[2355]	JMP      	44 ; PC := 44
	40	[2357]	GETUPVAL 	R3 U5 ; R3 := U5
	41	[2357]	MOVE     	R4 R0 ; R4 := R0
	42	[2357]	CALL     	R3 2 2 ; R3 := R3(R4)
	43	[2357]	RETURN   	R3 2 ; return R3 
	44	[2359]	RETURN   	R0 1 ; return 

function #126 <?:2361,2378> (36 instructions, 144 bytes at 00000160C68004F0)
1 param, 11 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[2362]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[2363]	SELF     	R2 R1 K1 ; R3 := R1; R2 := R1[0x69727e0b]
	3	[2363]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[2365]	GETGLOBAL	R3 K2 ; R3 := 0x7f5022cf
	5	[2365]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xa5c556b9]
	6	[2365]	MOVE     	R4 R0 ; R4 := R0
	7	[2365]	GETGLOBAL	R5 K4 ; R5 := ALERT_TAG
	8	[2365]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	9	[2366]	EQ       	1 R3 K5 ; if R3 == nil then PC := 18
	10	[2366]	JMP      	18 ; PC := 18
	11	[2367]	GETGLOBAL	R4 K2 ; R4 := 0x7f5022cf
	12	[2367]	GETTABLE 	R4 R4 K6 ; R4 := R4[0x1a94c9cc]
	13	[2367]	MOVE     	R5 R0 ; R5 := R0
	14	[2367]	LOADK    	R6 := 1.000000
	15	[2367]	SUB      	R7 R3 K7 ; R7 := R3 - 1.000000
	16	[2367]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	17	[2367]	MOVE     	R0 R4 ; R0 := R4
	18	[2370]	GETTABLE 	R4 R2 K8 ; R4 := R2["mAlerts"]
	19	[2371]	LOADK    	R5 := 1.000000
	20	[2371]	LEN      	R6 R4 ; R6 := # R4
	21	[2371]	LOADK    	R7 := 1.000000
	22	[2371]	FORPREP  	R5 33 ; R5 -= R7; PC := 33
	23	[2372]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	24	[2372]	GETTABLE 	R9 R9 K9 ; R9 := R9["mMissionInfo"]
	25	[2372]	GETTABLE 	R9 R9 K10 ; R9 := R9["location"]
	26	[2372]	SELF     	R9 R9 K11 ; R10 := R9; R9 := R9[0x6d604ba7]
	27	[2372]	CALL     	R9 2 2 ; R9 := R9(R10)
	28	[2372]	EQ       	0 R9 R0 ; if R9 ~= R0 then PC := 33
	29	[2372]	JMP      	33 ; PC := 33
	30	[2373]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	31	[2373]	GETTABLE 	R9 R9 K12 ; R9 := R9["mExpiry"]
	32	[2373]	RETURN   	R9 2 ; return R9 
	33	[2371]	FORLOOP  	R5 23 ; R5 += R7; if R5 <= R6 then begin PC := 23; R8 := R5 end
	34	[2377]	LOADNIL  	R9 R9 ; R9 := nil
	35	[2377]	RETURN   	R9 2 ; return R9 
	36	[2378]	RETURN   	R0 1 ; return 

function #127 <?:2380,2400> (57 instructions, 228 bytes at 00000160C6800880)
3 params, 7 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[2381]	OP_LOADBOOL	R3 0 0 ; R3 := false
	2	[2381]	TEST     	R3 0 ; if not R3 then PC := 6
	3	[2381]	JMP      	6 ; PC := 6
	4	[2382]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[2382]	RETURN   	R3 2 ; return R3 
	6	[2386]	GETGLOBAL	R3 K0 ; R3 := _T
	7	[2386]	GETTABLE 	R3 R3 K1 ; R3 := R3["CachedRegionStatus"]
	8	[2386]	TEST     	R3 0 ; if not R3 then PC := 23
	9	[2386]	JMP      	23 ; PC := 23
	10	[2386]	GETGLOBAL	R3 K0 ; R3 := _T
	11	[2386]	GETTABLE 	R3 R3 K1 ; R3 := R3["CachedRegionStatus"]
	12	[2386]	GETTABLE 	R3 R3 R2 ; R3 := R3[R2]
	13	[2386]	TEST     	R3 0 ; if not R3 then PC := 23
	14	[2386]	JMP      	23 ; PC := 23
	15	[2386]	GETGLOBAL	R3 K0 ; R3 := _T
	16	[2386]	GETTABLE 	R3 R3 K1 ; R3 := R3["CachedRegionStatus"]
	17	[2386]	GETTABLE 	R3 R3 R2 ; R3 := R3[R2]
	18	[2386]	GETTABLE 	R3 R3 K2 ; R3 := R3["goal"]
	19	[2386]	EQ       	0 R3 K3 ; if R3 ~= true then PC := 23
	20	[2386]	JMP      	23 ; PC := 23
	21	[2387]	OP_LOADBOOL	R3 1 0 ; R3 := true
	22	[2387]	RETURN   	R3 2 ; return R3 
	23	[2390]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	24	[2390]	MOVE     	R4 R0 ; R4 := R0
	25	[2390]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[2390]	TEST     	R3 0 ; if not R3 then PC := 31
	27	[2390]	JMP      	31 ; PC := 31
	28	[2391]	GETUPVAL 	R3 U0 ; R3 := U0
	29	[2391]	CALL     	R3 1 2 ; R3 := R3()
	30	[2391]	MOVE     	R0 R3 ; R0 := R3
	31	[2394]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	32	[2394]	MOVE     	R4 R1 ; R4 := R1
	33	[2394]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[2394]	TEST     	R3 0 ; if not R3 then PC := 38
	35	[2394]	JMP      	38 ; PC := 38
	36	[2395]	OP_LOADBOOL	R3 0 0 ; R3 := false
	37	[2395]	RETURN   	R3 2 ; return R3 
	38	[2398]	SELF     	R3 R0 K5 ; R4 := R0; R3 := R0[0xc1dee03f]
	39	[2398]	CALL     	R3 2 2 ; R3 := R3(R4)
	40	[2398]	GETTABLE 	R3 R3 R2 ; R3 := R3[R2]
	41	[2399]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	42	[2399]	MOVE     	R5 R3 ; R5 := R3
	43	[2399]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[2399]	TEST     	R4 1 ; if R4 then PC := 54
	45	[2399]	JMP      	54 ; PC := 54
	46	[2399]	SELF     	R4 R3 K6 ; R5 := R3; R4 := R3[0x699fd1e2]
	47	[2399]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[2399]	EQ       	0 R4 K8 ; if R4 ~= 0.000000 then PC := 55
	49	[2399]	JMP      	55 ; PC := 55
	50	[2399]	SELF     	R4 R1 K9 ; R5 := R1; R4 := R1[0x25452953]
	51	[2399]	MOVE     	R6 R2 ; R6 := R2
	52	[2399]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	53	[2399]	JMP      	56 ; PC := 56
	54	[2399]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 55
	55	[2399]	OP_LOADBOOL	R4 1 0 ; R4 := true
	56	[2399]	RETURN   	R4 2 ; return R4 
	57	[2400]	RETURN   	R0 1 ; return 

function #128 <?:2402,2410> (19 instructions, 76 bytes at 00000160C6800C30)
0 params, 5 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[2403]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[2403]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[2403]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2403]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xc472e470]
	5	[2403]	CALL     	R2 1 0 ; R2,... := R2()
	6	[2403]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[2405]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	8	[2405]	MOVE     	R2 R0 ; R2 := R0
	9	[2405]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[2405]	TEST     	R1 1 ; if R1 then PC := 17
	11	[2405]	JMP      	17 ; PC := 17
	12	[2406]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xe4162eed]
	13	[2406]	LOADK    	R3 K5 ; R3 := "IsMaximized"
	14	[2406]	LOADK    	R4 K6 ; R4 := ""
	15	[2406]	TAILCALL 	R1 4 0 ; R1,... := R1(R2,R3,R4)
	16	[2406]	RETURN   	R1 0 ; return R1,... 
	17	[2409]	OP_LOADBOOL	R1 0 0 ; R1 := false
	18	[2409]	RETURN   	R1 2 ; return R1 
	19	[2410]	RETURN   	R0 1 ; return 

function #129 <?:2412,2438> (49 instructions, 196 bytes at 00000160C6800E40)
1 param, 7 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[2413]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2413]	MOVE     	R2 R0 ; R2 := R0
	3	[2413]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2413]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[2413]	JMP      	8 ; PC := 8
	6	[2414]	OP_LOADBOOL	R1 1 0 ; R1 := true
	7	[2414]	RETURN   	R1 2 ; return R1 
	8	[2417]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xfdd3576f]
	9	[2417]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[2418]	GETUPVAL 	R2 U0 ; R2 := U0
	11	[2418]	GETTABLE 	R3 R1 K2 ; R3 := R1["gameModeId"]
	12	[2418]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[2418]	TEST     	R2 0 ; if not R2 then PC := 47
	14	[2418]	JMP      	47 ; PC := 47
	15	[2420]	LOADK    	R2 K3 ; R2 := ""
	16	[2421]	SELF     	R3 R1 K4 ; R4 := R1; R3 := R1[0xabb735a5]
	17	[2421]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[2422]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	19	[2422]	MOVE     	R5 R3 ; R5 := R3
	20	[2422]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[2422]	TEST     	R4 1 ; if R4 then PC := 26
	22	[2422]	JMP      	26 ; PC := 26
	23	[2422]	LEN      	R4 R3 ; R4 := # R3
	24	[2422]	LE       	0 R4 K5 ; if R4 > 0.000000 then PC := 28
	25	[2422]	JMP      	28 ; PC := 28
	26	[2423]	OP_LOADBOOL	R4 1 0 ; R4 := true
	27	[2423]	RETURN   	R4 2 ; return R4 
	28	[2426]	GETTABLE 	R2 R3 K6 ; R2 := R3[1.000000]
	29	[2428]	GETGLOBAL	R4 K7 ; R4 := 0x7f5022cf
	30	[2428]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x41e2ae25]
	31	[2428]	MOVE     	R5 R2 ; R5 := R2
	32	[2428]	CALL     	R4 2 2 ; R4 := R4(R5)
	33	[2428]	LT       	0 K5 R4 ; if 0.000000 >= R4 then PC := 47
	34	[2428]	JMP      	47 ; PC := 47
	35	[2429]	GETGLOBAL	R4 K9 ; R4 := 0xcb2f6c8f
	36	[2429]	CALL     	R4 1 2 ; R4 := R4()
	37	[2430]	SETTABLE 	R4 K10 R2 ; R4["sec"] := R2
	38	[2432]	GETGLOBAL	R5 K11 ; R5 := 0x34291f5c
	39	[2432]	GETTABLE 	R5 R5 K12 ; R5 := R5[0x397b920f]
	40	[2432]	MOVE     	R6 R4 ; R6 := R4
	41	[2432]	CALL     	R5 2 2 ; R5 := R5(R6)
	42	[2433]	LE       	1 R5 K5 ; if R5 <= 0.000000 then PC := 45
	43	[2433]	JMP      	45 ; PC := 45
	44	[2433]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 45
	45	[2433]	OP_LOADBOOL	R6 1 0 ; R6 := true
	46	[2433]	RETURN   	R6 2 ; return R6 
	47	[2437]	OP_LOADBOOL	R6 0 0 ; R6 := false
	48	[2437]	RETURN   	R6 2 ; return R6 
	49	[2438]	RETURN   	R0 1 ; return 

function #130 <?:2440,2457> (34 instructions, 136 bytes at 00000160C68011E0)
1 param, 11 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[2441]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[2442]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	3	[2442]	MOVE     	R3 R1 ; R3 := R1
	4	[2442]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[2442]	TEST     	R2 0 ; if not R2 then PC := 9
	6	[2442]	JMP      	9 ; PC := 9
	7	[2443]	OP_LOADBOOL	R2 0 0 ; R2 := false
	8	[2443]	RETURN   	R2 2 ; return R2 
	9	[2446]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0xed5b57ee]
	10	[2446]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[2447]	GETGLOBAL	R3 K3 ; R3 := 0x0469f296
	12	[2447]	MOVE     	R4 R0 ; R4 := R0
	13	[2447]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[2448]	LOADK    	R4 := 1.000000
	15	[2448]	LEN      	R5 R2 ; R5 := # R2
	16	[2448]	LOADK    	R6 := 1.000000
	17	[2448]	FORPREP  	R4 24 ; R4 -= R6; PC := 24
	18	[2449]	GETTABLE 	R8 R2 R7 ; R8 := R2[R7]
	19	[2449]	GETTABLE 	R8 R8 K4 ; R8 := R8["node"]
	20	[2449]	EQ       	0 R8 R3 ; if R8 ~= R3 then PC := 24
	21	[2449]	JMP      	24 ; PC := 24
	22	[2450]	OP_LOADBOOL	R8 0 0 ; R8 := false
	23	[2450]	RETURN   	R8 2 ; return R8 
	24	[2448]	FORLOOP  	R4 18 ; R4 += R6; if R4 <= R5 then begin PC := 18; R7 := R4 end
	25	[2454]	SELF     	R8 R1 K5 ; R9 := R1; R8 := R1[0x8b363264]
	26	[2454]	MOVE     	R10 R3 ; R10 := R3
	27	[2454]	CALL     	R8 3 1 ; R8(R9,R10)
	28	[2455]	GETGLOBAL	R8 K6 ; R8 := 0x76ea806b
	29	[2455]	SELF     	R8 R8 K7 ; R9 := R8; R8 := R8[0x524772b5]
	30	[2455]	LOADK    	R10 := 0.000000
	31	[2455]	CALL     	R8 3 1 ; R8(R9,R10)
	32	[2456]	OP_LOADBOOL	R8 1 0 ; R8 := true
	33	[2456]	RETURN   	R8 2 ; return R8 
	34	[2457]	RETURN   	R0 1 ; return 

function #131 <?:2459,2483> (77 instructions, 308 bytes at 00000160C6801470)
2 params, 7 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[2460]	GETGLOBAL	R2 K0 ; R2 := 0x9ba7909f
	2	[2460]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xbcfb64ab]
	3	[2460]	GETGLOBAL	R4 K2 ; R4 := 0x0032441c
	4	[2460]	GETTABLE 	R4 R4 K3 ; R4 := R4["UIMovie_TransmissionMovie"]
	5	[2460]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	6	[2462]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 10
	7	[2462]	JMP      	10 ; PC := 10
	8	[2463]	GETGLOBAL	R3 K5 ; R3 := _T
	9	[2463]	GETTABLE 	R0 R3 K6 ; R0 := R3["curTransmission"]
	10	[2466]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	11	[2466]	MOVE     	R4 R0 ; R4 := R0
	12	[2466]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[2466]	TEST     	R3 1 ; if R3 then PC := 77
	14	[2466]	JMP      	77 ; PC := 77
	15	[2466]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	16	[2466]	MOVE     	R4 R2 ; R4 := R2
	17	[2466]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[2466]	TEST     	R3 1 ; if R3 then PC := 77
	19	[2466]	JMP      	77 ; PC := 77
	20	[2468]	GETGLOBAL	R3 K5 ; R3 := _T
	21	[2468]	GETTABLE 	R3 R3 K6 ; R3 := R3["curTransmission"]
	22	[2468]	EQ       	1 R3 R0 ; if R3 == R0 then PC := 33
	23	[2468]	JMP      	33 ; PC := 33
	24	[2468]	TEST     	R1 0 ; if not R1 then PC := 38
	25	[2468]	JMP      	38 ; PC := 38
	26	[2468]	GETGLOBAL	R3 K5 ; R3 := _T
	27	[2468]	GETTABLE 	R3 R3 K6 ; R3 := R3["curTransmission"]
	28	[2468]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xf2deaf69]
	29	[2468]	MOVE     	R5 R0 ; R5 := R0
	30	[2468]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	31	[2468]	TEST     	R3 0 ; if not R3 then PC := 38
	32	[2468]	JMP      	38 ; PC := 38
	33	[2469]	SELF     	R3 R2 K9 ; R4 := R2; R3 := R2[0xe4162eed]
	34	[2469]	LOADK    	R5 K10 ; R5 := "QueueClose"
	35	[2469]	LOADK    	R6 K11 ; R6 := ""
	36	[2469]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	37	[2469]	JMP      	77 ; PC := 77
	38	[2470]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	39	[2470]	GETGLOBAL	R4 K5 ; R4 := _T
	40	[2470]	GETTABLE 	R4 R4 K12 ; R4 := R4["QueuedTransmissions"]
	41	[2470]	CALL     	R3 2 2 ; R3 := R3(R4)
	42	[2470]	TEST     	R3 1 ; if R3 then PC := 77
	43	[2470]	JMP      	77 ; PC := 77
	44	[2472]	LOADK    	R3 := 1.000000
	45	[2473]	GETGLOBAL	R4 K5 ; R4 := _T
	46	[2473]	GETTABLE 	R4 R4 K12 ; R4 := R4["QueuedTransmissions"]
	47	[2473]	LEN      	R4 R4 ; R4 := # R4
	48	[2473]	LE       	0 R3 R4 ; if R3 > R4 then PC := 77
	49	[2473]	JMP      	77 ; PC := 77
	50	[2474]	GETGLOBAL	R4 K5 ; R4 := _T
	51	[2474]	GETTABLE 	R4 R4 K12 ; R4 := R4["QueuedTransmissions"]
	52	[2474]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	53	[2474]	GETTABLE 	R4 R4 K13 ; R4 := R4["Transmission"]
	54	[2474]	EQ       	1 R4 R0 ; if R4 == R0 then PC := 67
	55	[2474]	JMP      	67 ; PC := 67
	56	[2474]	TEST     	R1 0 ; if not R1 then PC := 75
	57	[2474]	JMP      	75 ; PC := 75
	58	[2474]	GETGLOBAL	R4 K5 ; R4 := _T
	59	[2474]	GETTABLE 	R4 R4 K12 ; R4 := R4["QueuedTransmissions"]
	60	[2474]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	61	[2474]	GETTABLE 	R4 R4 K13 ; R4 := R4["Transmission"]
	62	[2474]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0xf2deaf69]
	63	[2474]	MOVE     	R6 R0 ; R6 := R0
	64	[2474]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	65	[2474]	TEST     	R4 0 ; if not R4 then PC := 75
	66	[2474]	JMP      	75 ; PC := 75
	67	[2475]	GETGLOBAL	R4 K14 ; R4 := 0x33bdd652
	68	[2475]	GETTABLE 	R4 R4 K15 ; R4 := R4[0x9c1f3b5a]
	69	[2475]	GETGLOBAL	R5 K5 ; R5 := _T
	70	[2475]	GETTABLE 	R5 R5 K12 ; R5 := R5["QueuedTransmissions"]
	71	[2475]	MOVE     	R6 R3 ; R6 := R3
	72	[2475]	CALL     	R4 3 1 ; R4(R5,R6)
	73	[2476]	JMP      	77 ; PC := 77
	74	[2476]	JMP      	45 ; PC := 45
	75	[2478]	ADD      	R3 R3 K16 ; R3 := R3 + 1.000000
	76	[2479]	JMP      	45 ; PC := 45
	77	[2483]	RETURN   	R0 1 ; return 

function #132 <?:2485,2487> (5 instructions, 20 bytes at 00000160C6801A10)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2486]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2486]	MOVE     	R3 R0 ; R3 := R0
	3	[2486]	MOVE     	R4 R1 ; R4 := R1
	4	[2486]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[2487]	RETURN   	R0 1 ; return 

function #133 <?:2489,2504> (37 instructions, 148 bytes at 00000160C6801B00)
2 params, 6 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[2490]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[2490]	GETTABLE 	R2 R2 K1 ; R2 := R2["QueuedTransmissions"]
	3	[2490]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 8
	4	[2490]	JMP      	8 ; PC := 8
	5	[2491]	GETGLOBAL	R2 K0 ; R2 := _T
	6	[2491]	NEWTABLE 	R3 0 0 ; R3 := {}
	7	[2491]	SETTABLE 	R2 K1 R3 ; R2["QueuedTransmissions"] := R3
	8	[2494]	GETGLOBAL	R2 K3 ; R2 := 0x3d106989
	9	[2494]	LOADK    	R3 K4 ; R3 := "Queuing new transmission: "
	10	[2494]	SELF     	R4 R0 K5 ; R5 := R0; R4 := R0[0xe223e2b1]
	11	[2494]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[2494]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	13	[2494]	CALL     	R2 2 1 ; R2(R3)
	14	[2495]	GETGLOBAL	R2 K6 ; R2 := 0x6c97a788
	15	[2495]	GETTABLE 	R2 R2 K7 ; R2 := R2[0xe368acc9]
	16	[2495]	MOVE     	R3 R0 ; R3 := R0
	17	[2495]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[2497]	GETTABLE 	R3 R2 K8 ; R3 := R2["mQueueDump"]
	19	[2497]	TEST     	R3 0 ; if not R3 then PC := 29
	20	[2497]	JMP      	29 ; PC := 29
	21	[2498]	GETGLOBAL	R3 K3 ; R3 := 0x3d106989
	22	[2498]	LOADK    	R4 K9 ; R4 := "Dumping queued transmissions and interrupting current one"
	23	[2498]	CALL     	R3 2 1 ; R3(R4)
	24	[2499]	GETUPVAL 	R3 U0 ; R3 := U0
	25	[2499]	CALL     	R3 1 1 ; R3()
	26	[2500]	GETGLOBAL	R3 K0 ; R3 := _T
	27	[2500]	NEWTABLE 	R4 0 0 ; R4 := {}
	28	[2500]	SETTABLE 	R3 K1 R4 ; R3["QueuedTransmissions"] := R4
	29	[2503]	GETGLOBAL	R3 K10 ; R3 := 0x33bdd652
	30	[2503]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x23d5322f]
	31	[2503]	GETGLOBAL	R4 K0 ; R4 := _T
	32	[2503]	GETTABLE 	R4 R4 K1 ; R4 := R4["QueuedTransmissions"]
	33	[2503]	NEWTABLE 	R5 0 2 ; R5 := {}
	34	[2503]	SETTABLE 	R5 K12 R0 ; R5["Transmission"] := R0
	35	[2503]	SETTABLE 	R5 K13 R1 ; R5["SpeakerData"] := R1
	36	[2503]	CALL     	R3 3 1 ; R3(R4,R5)
	37	[2504]	RETURN   	R0 1 ; return 

function #134 <?:2506,2508> (5 instructions, 20 bytes at 00000160C6801F20)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2507]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2507]	MOVE     	R3 R0 ; R3 := R0
	3	[2507]	MOVE     	R4 R1 ; R4 := R1
	4	[2507]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[2508]	RETURN   	R0 1 ; return 

function #135 <?:2510,2522> (27 instructions, 108 bytes at 00000160C6802010)
2 params, 6 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[2511]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[2511]	MOVE     	R3 R0 ; R3 := R0
	3	[2511]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[2511]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[2511]	JMP      	7 ; PC := 7
	6	[2512]	RETURN   	R0 1 ; return 
	7	[2515]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[2515]	MOVE     	R3 R0 ; R3 := R0
	9	[2515]	MOVE     	R4 R1 ; R4 := R1
	10	[2515]	CALL     	R2 3 1 ; R2(R3,R4)
	11	[2517]	GETGLOBAL	R2 K1 ; R2 := 0x9ba7909f
	12	[2517]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xbcfb64ab]
	13	[2517]	GETGLOBAL	R4 K3 ; R4 := 0x0032441c
	14	[2517]	GETTABLE 	R4 R4 K4 ; R4 := R4["UIMovie_TransmissionMovie"]
	15	[2517]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[2518]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	17	[2518]	MOVE     	R4 R2 ; R4 := R2
	18	[2518]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[2518]	TEST     	R3 0 ; if not R3 then PC := 27
	20	[2518]	JMP      	27 ; PC := 27
	21	[2519]	GETGLOBAL	R3 K1 ; R3 := 0x9ba7909f
	22	[2519]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x6dd7aa66]
	23	[2519]	GETGLOBAL	R5 K3 ; R5 := 0x0032441c
	24	[2519]	GETTABLE 	R5 R5 K4 ; R5 := R5["UIMovie_TransmissionMovie"]
	25	[2519]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	26	[2519]	MOVE     	R2 R3 ; R2 := R3
	27	[2522]	RETURN   	R0 1 ; return 

function #136 <?:2524,2526> (5 instructions, 20 bytes at 00000160C6802210)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2525]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2525]	MOVE     	R3 R0 ; R3 := R0
	3	[2525]	MOVE     	R4 R1 ; R4 := R1
	4	[2525]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[2526]	RETURN   	R0 1 ; return 

function #137 <?:2528,2533> (12 instructions, 48 bytes at 00000160C6802300)
0 params, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[2529]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[2529]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x5374b92e]
	3	[2529]	GETGLOBAL	R2 K2 ; R2 := 0x0032441c
	4	[2529]	GETTABLE 	R2 R2 K3 ; R2 := R2["UIMovie_TransmissionMovie"]
	5	[2529]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	6	[2529]	TEST     	R0 0 ; if not R0 then PC := 10
	7	[2529]	JMP      	10 ; PC := 10
	8	[2530]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[2530]	RETURN   	R0 2 ; return R0 
	10	[2532]	OP_LOADBOOL	R0 0 0 ; R0 := false
	11	[2532]	RETURN   	R0 2 ; return R0 
	12	[2533]	RETURN   	R0 1 ; return 

function #138 <?:2535,2545> (16 instructions, 64 bytes at 00000160C6802460)
0 params, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[2537]	LOADK    	R0 := 0.000000
	2	[2538]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	3	[2539]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[2539]	MOVE     	R3 R1 ; R3 := R1
	5	[2539]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[2539]	TEST     	R2 1 ; if R2 then PC := 15
	7	[2539]	JMP      	15 ; PC := 15
	8	[2540]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0xa59dbd63]
	9	[2540]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[2541]	GETGLOBAL	R3 K3 ; R3 := 0xa94df70b
	11	[2541]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x18a82453]
	12	[2541]	MOVE     	R5 R2 ; R5 := R2
	13	[2541]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	14	[2541]	MOVE     	R0 R3 ; R0 := R3
	15	[2544]	RETURN   	R0 2 ; return R0 
	16	[2545]	RETURN   	R0 1 ; return 

function #139 <?:2547,2572> (64 instructions, 256 bytes at 00000160C68025F0)
0 params, 9 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[2548]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2548]	GETTABLE 	R0 R0 K1 ; R0 := R0["HasCompletedVorsPrize"]
	3	[2548]	TEST     	R0 0 ; if not R0 then PC := 7
	4	[2548]	JMP      	7 ; PC := 7
	5	[2549]	OP_LOADBOOL	R0 1 0 ; R0 := true
	6	[2549]	RETURN   	R0 2 ; return R0 
	7	[2553]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	8	[2553]	GETGLOBAL	R1 K3 ; R1 := 0x83f4e77c
	9	[2553]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[2553]	TEST     	R0 0 ; if not R0 then PC := 16
	11	[2553]	JMP      	16 ; PC := 16
	12	[2554]	GETGLOBAL	R0 K0 ; R0 := _T
	13	[2554]	SETTABLE 	R0 K1 K4 ; R0["HasCompletedVorsPrize"] := true
	14	[2555]	OP_LOADBOOL	R0 1 0 ; R0 := true
	15	[2555]	RETURN   	R0 2 ; return R0 
	16	[2559]	GETGLOBAL	R0 K5 ; R0 := 0x7ed0a956
	17	[2559]	LOADK    	R1 K6 ; R1 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
	18	[2559]	CALL     	R0 2 2 ; R0 := R0(R1)
	19	[2560]	GETGLOBAL	R1 K5 ; R1 := 0x7ed0a956
	20	[2560]	LOADK    	R2 K7 ; R2 := "/Lotus/Types/Keys/InfestedIntroQuest/InfestedIntroQuestKeyChain"
	21	[2560]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[2562]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	23	[2562]	GETGLOBAL	R3 K8 ; R3 := 0x25d99d89
	24	[2562]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[2562]	TEST     	R2 1 ; if R2 then PC := 62
	26	[2562]	JMP      	62 ; PC := 62
	27	[2562]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	28	[2562]	GETGLOBAL	R3 K8 ; R3 := 0x25d99d89
	29	[2562]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x25a6e75e]
	30	[2562]	CALL     	R3 2 0 ; R3,... := R3(R4)
	31	[2562]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	32	[2562]	TEST     	R2 1 ; if R2 then PC := 62
	33	[2562]	JMP      	62 ; PC := 62
	34	[2563]	GETGLOBAL	R2 K10 ; R2 := 0xcfc01047
	35	[2563]	GETGLOBAL	R3 K8 ; R3 := 0x25d99d89
	36	[2563]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x25a6e75e]
	37	[2563]	CALL     	R3 2 2 ; R3 := R3(R4)
	38	[2563]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0xe9768ed0]
	39	[2563]	CALL     	R3 2 0 ; R3,... := R3(R4)
	40	[2563]	CALL     	R2 0 4 ; R2,R3,R4 := R2(R3,...)
	41	[2563]	JMP      	60 ; PC := 60
	42	[2564]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	43	[2564]	MOVE     	R8 R6 ; R8 := R6
	44	[2564]	CALL     	R7 2 2 ; R7 := R7(R8)
	45	[2564]	TEST     	R7 1 ; if R7 then PC := 60
	46	[2564]	JMP      	60 ; PC := 60
	47	[2564]	GETTABLE 	R7 R6 K12 ; R7 := R6["mItemType"]
	48	[2564]	EQ       	1 R7 R1 ; if R7 == R1 then PC := 56
	49	[2564]	JMP      	56 ; PC := 56
	50	[2564]	GETTABLE 	R7 R6 K12 ; R7 := R6["mItemType"]
	51	[2564]	EQ       	0 R7 R0 ; if R7 ~= R0 then PC := 60
	52	[2564]	JMP      	60 ; PC := 60
	53	[2564]	GETTABLE 	R7 R6 K13 ; R7 := R6["mCompleted"]
	54	[2564]	TEST     	R7 0 ; if not R7 then PC := 60
	55	[2564]	JMP      	60 ; PC := 60
	56	[2565]	GETGLOBAL	R7 K0 ; R7 := _T
	57	[2565]	SETTABLE 	R7 K1 K4 ; R7["HasCompletedVorsPrize"] := true
	58	[2566]	OP_LOADBOOL	R7 1 0 ; R7 := true
	59	[2566]	RETURN   	R7 2 ; return R7 
	60	[2563]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 42; R4 := R5 end
	61	[2567]	JMP      	42 ; PC := 42
	62	[2571]	OP_LOADBOOL	R7 0 0 ; R7 := false
	63	[2571]	RETURN   	R7 2 ; return R7 
	64	[2572]	RETURN   	R0 1 ; return 

function #140 <?:2574,2576> (4 instructions, 16 bytes at 00000160C6802AA0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2575]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2575]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2575]	RETURN   	R0 0 ; return R0,... 
	4	[2576]	RETURN   	R0 1 ; return 

function #141 <?:2578,2614> (74 instructions, 296 bytes at 00000160C6802B70)
1 param, 12 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[2581]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2581]	GETGLOBAL	R2 K1 ; R2 := 0x83f4e77c
	3	[2581]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2581]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[2581]	JMP      	8 ; PC := 8
	6	[2582]	OP_LOADBOOL	R1 1 0 ; R1 := true
	7	[2582]	RETURN   	R1 2 ; return R1 
	8	[2585]	GETGLOBAL	R1 K2 ; R1 := 0x7ed0a956
	9	[2585]	LOADK    	R2 K3 ; R2 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
	10	[2585]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[2586]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 16
	12	[2586]	JMP      	16 ; PC := 16
	13	[2587]	GETUPVAL 	R2 U0 ; R2 := U0
	14	[2587]	CALL     	R2 1 2 ; R2 := R2()
	15	[2587]	RETURN   	R2 2 ; return R2 
	16	[2590]	GETGLOBAL	R2 K4 ; R2 := 0x25d99d89
	17	[2591]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	18	[2591]	MOVE     	R4 R2 ; R4 := R2
	19	[2591]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[2591]	TEST     	R3 0 ; if not R3 then PC := 34
	21	[2591]	JMP      	34 ; PC := 34
	22	[2592]	GETGLOBAL	R3 K5 ; R3 := 0x76ea806b
	23	[2592]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0x3f3ae64c]
	24	[2592]	LOADK    	R5 := 0.000000
	25	[2592]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	26	[2593]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	27	[2593]	MOVE     	R5 R3 ; R5 := R3
	28	[2593]	CALL     	R4 2 2 ; R4 := R4(R5)
	29	[2593]	TEST     	R4 1 ; if R4 then PC := 34
	30	[2593]	JMP      	34 ; PC := 34
	31	[2594]	SELF     	R4 R3 K7 ; R5 := R3; R4 := R3[0x80563238]
	32	[2594]	CALL     	R4 2 2 ; R4 := R4(R5)
	33	[2594]	MOVE     	R2 R4 ; R2 := R4
	34	[2597]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	35	[2597]	MOVE     	R5 R0 ; R5 := R0
	36	[2597]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[2597]	TEST     	R4 0 ; if not R4 then PC := 41
	38	[2597]	JMP      	41 ; PC := 41
	39	[2598]	OP_LOADBOOL	R4 0 0 ; R4 := false
	40	[2598]	RETURN   	R4 2 ; return R4 
	41	[2600]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	42	[2600]	MOVE     	R5 R2 ; R5 := R2
	43	[2600]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[2600]	TEST     	R4 1 ; if R4 then PC := 72
	45	[2600]	JMP      	72 ; PC := 72
	46	[2601]	SELF     	R4 R2 K8 ; R5 := R2; R4 := R2[0x25a6e75e]
	47	[2601]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[2602]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	49	[2602]	MOVE     	R6 R4 ; R6 := R4
	50	[2602]	CALL     	R5 2 2 ; R5 := R5(R6)
	51	[2602]	TEST     	R5 1 ; if R5 then PC := 72
	52	[2602]	JMP      	72 ; PC := 72
	53	[2603]	SELF     	R5 R4 K9 ; R6 := R4; R5 := R4[0xe9768ed0]
	54	[2603]	CALL     	R5 2 2 ; R5 := R5(R6)
	55	[2605]	LOADK    	R6 := 1.000000
	56	[2605]	LEN      	R7 R5 ; R7 := # R5
	57	[2605]	LOADK    	R8 := 1.000000
	58	[2605]	FORPREP  	R6 71 ; R6 -= R8; PC := 71
	59	[2606]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	60	[2606]	GETTABLE 	R11 R5 R9 ; R11 := R5[R9]
	61	[2606]	CALL     	R10 2 2 ; R10 := R10(R11)
	62	[2606]	TEST     	R10 1 ; if R10 then PC := 71
	63	[2606]	JMP      	71 ; PC := 71
	64	[2606]	GETTABLE 	R10 R5 R9 ; R10 := R5[R9]
	65	[2606]	GETTABLE 	R10 R10 K10 ; R10 := R10["mItemType"]
	66	[2606]	EQ       	0 R0 R10 ; if R0 ~= R10 then PC := 71
	67	[2606]	JMP      	71 ; PC := 71
	68	[2607]	GETTABLE 	R10 R5 R9 ; R10 := R5[R9]
	69	[2607]	GETTABLE 	R10 R10 K11 ; R10 := R10["mCompleted"]
	70	[2607]	RETURN   	R10 2 ; return R10 
	71	[2605]	FORLOOP  	R6 59 ; R6 += R8; if R6 <= R7 then begin PC := 59; R9 := R6 end
	72	[2613]	OP_LOADBOOL	R10 0 0 ; R10 := false
	73	[2613]	RETURN   	R10 2 ; return R10 
	74	[2614]	RETURN   	R0 1 ; return 

function #142 <?:2616,2618> (5 instructions, 20 bytes at 00000160C6802F50)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2617]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2617]	MOVE     	R2 R0 ; R2 := R0
	3	[2617]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[2617]	RETURN   	R1 0 ; return R1,... 
	5	[2618]	RETURN   	R0 1 ; return 

function #143 <?:2622,2629> (28 instructions, 112 bytes at 00000160C6803040)
1 param, 7 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[2623]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	2	[2623]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x66edf04f]
	3	[2623]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	4	[2623]	SELF     	R3 R0 K3 ; R4 := R0; R3 := R0[0xed4e0128]
	5	[2623]	CALL     	R3 2 0 ; R3,... := R3(R4)
	6	[2623]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	7	[2623]	LOADK    	R3 K4 ; R3 := "/Lotus/Types/"
	8	[2623]	LOADK    	R4 K5 ; R4 := "/Lotus/StoreItems/Types/"
	9	[2623]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	10	[2624]	GETGLOBAL	R2 K6 ; R2 := 0xb009bbc6
	11	[2624]	MOVE     	R3 R1 ; R3 := R1
	12	[2624]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[2625]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	14	[2625]	MOVE     	R4 R2 ; R4 := R2
	15	[2625]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[2625]	TEST     	R3 1 ; if R3 then PC := 26
	17	[2625]	JMP      	26 ; PC := 26
	18	[2626]	GETGLOBAL	R3 K8 ; R3 := 0x603636ad
	19	[2626]	GETGLOBAL	R4 K2 ; R4 := 0x64fb1586
	20	[2626]	SELF     	R5 R2 K9 ; R6 := R2; R5 := R2[0xd3a9d01f]
	21	[2626]	CALL     	R5 2 0 ; R5,... := R5(R6)
	22	[2626]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	23	[2626]	LOADNIL  	R5 R5 ; R5 := nil
	24	[2626]	TAILCALL 	R3 3 0 ; R3,... := R3(R4,R5)
	25	[2626]	RETURN   	R3 0 ; return R3,... 
	26	[2628]	LOADK    	R3 K10 ; R3 := ""
	27	[2628]	RETURN   	R3 2 ; return R3 
	28	[2629]	RETURN   	R0 1 ; return 

function #144 <?:2632,2635> (16 instructions, 64 bytes at 00000160C6803320)
0 params, 3 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2633]	GETGLOBAL	R0 K0 ; R0 := 0x7ed0a956
	2	[2633]	LOADK    	R1 K1 ; R1 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
	3	[2633]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2634]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	5	[2634]	MOVE     	R2 R0 ; R2 := R0
	6	[2634]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[2634]	TEST     	R1 1 ; if R1 then PC := 13
	8	[2634]	JMP      	13 ; PC := 13
	9	[2634]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[2634]	MOVE     	R2 R0 ; R2 := R0
	11	[2634]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[2634]	JMP      	15 ; PC := 15
	13	[2634]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 14
	14	[2634]	OP_LOADBOOL	R1 1 0 ; R1 := true
	15	[2634]	RETURN   	R1 2 ; return R1 
	16	[2635]	RETURN   	R0 1 ; return 

function #145 <?:2637,2639> (4 instructions, 16 bytes at 00000160C6803490)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2638]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2638]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2638]	RETURN   	R0 0 ; return R0,... 
	4	[2639]	RETURN   	R0 1 ; return 

function #146 <?:2641,2659> (44 instructions, 176 bytes at 00000160C6803560)
0 params, 8 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[2643]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[2644]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	3	[2644]	GETGLOBAL	R2 K1 ; R2 := 0xe7f2b02f
	4	[2644]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x565be9ee]
	5	[2644]	CALL     	R2 2 0 ; R2,... := R2(R3)
	6	[2644]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	7	[2644]	TEST     	R1 1 ; if R1 then PC := 14
	8	[2644]	JMP      	14 ; PC := 14
	9	[2644]	GETGLOBAL	R1 K1 ; R1 := 0xe7f2b02f
	10	[2644]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xb321d806]
	11	[2644]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[2644]	TEST     	R1 0 ; if not R1 then PC := 18
	13	[2644]	JMP      	18 ; PC := 18
	14	[2645]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[2645]	CALL     	R1 1 2 ; R1 := R1()
	16	[2645]	MOVE     	R0 R1 ; R0 := R1
	17	[2645]	JMP      	37 ; PC := 37
	18	[2647]	GETGLOBAL	R1 K1 ; R1 := 0xe7f2b02f
	19	[2647]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x6d0aa187]
	20	[2647]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[2648]	LOADK    	R2 := 1.000000
	22	[2648]	LEN      	R3 R1 ; R3 := # R1
	23	[2648]	LOADK    	R4 := 1.000000
	24	[2648]	FORPREP  	R2 36 ; R2 -= R4; PC := 36
	25	[2649]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	26	[2649]	GETTABLE 	R6 R6 K5 ; R6 := R6["isHost"]
	27	[2649]	TEST     	R6 0 ; if not R6 then PC := 36
	28	[2649]	JMP      	36 ; PC := 36
	29	[2650]	GETGLOBAL	R6 K6 ; R6 := cjson
	30	[2650]	GETTABLE 	R6 R6 K7 ; R6 := R6[0x7ab914d8]
	31	[2650]	GETTABLE 	R7 R1 R5 ; R7 := R1[R5]
	32	[2650]	GETTABLE 	R7 R7 K8 ; R7 := R7["loadout"]
	33	[2650]	CALL     	R6 2 2 ; R6 := R6(R7)
	34	[2651]	GETTABLE 	R0 R6 K9 ; R0 := R6["PostNewWar"]
	35	[2652]	JMP      	37 ; PC := 37
	36	[2648]	FORLOOP  	R2 25 ; R2 += R4; if R2 <= R3 then begin PC := 25; R5 := R2 end
	37	[2658]	EQ       	1 R0 K10 ; if R0 == nil then PC := 41
	38	[2658]	JMP      	41 ; PC := 41
	39	[2658]	EQ       	0 R0 K11 ; if R0 ~= false then PC := 42
	40	[2658]	JMP      	42 ; PC := 42
	41	[2658]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 42
	42	[2658]	OP_LOADBOOL	R7 1 0 ; R7 := true
	43	[2658]	RETURN   	R7 2 ; return R7 
	44	[2659]	RETURN   	R0 1 ; return 

function #147 <?:2661,2663> (4 instructions, 16 bytes at 00000160C68038E0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2662]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2662]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2662]	RETURN   	R0 0 ; return R0,... 
	4	[2663]	RETURN   	R0 1 ; return 

function #148 <?:2665,2669> (15 instructions, 60 bytes at 00000160C68039B0)
0 params, 4 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[2666]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2666]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	3	[2666]	CALL     	R0 2 3 ; R0,R1 := R0(R1)
	4	[2668]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	5	[2668]	MOVE     	R3 R0 ; R3 := R0
	6	[2668]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[2668]	TEST     	R2 1 ; if R2 then PC := 14
	8	[2668]	JMP      	14 ; PC := 14
	9	[2668]	GETUPVAL 	R2 U1 ; R2 := U1
	10	[2668]	EQ       	0 R0 R2 ; if R0 ~= R2 then PC := 13
	11	[2668]	JMP      	13 ; PC := 13
	12	[2668]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 13
	13	[2668]	OP_LOADBOOL	R2 1 0 ; R2 := true
	14	[2668]	RETURN   	R2 2 ; return R2 
	15	[2669]	RETURN   	R0 1 ; return 

function #149 <?:2671,2673> (4 instructions, 16 bytes at 00000160C6803B10)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2672]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2672]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2672]	RETURN   	R0 0 ; return R0,... 
	4	[2673]	RETURN   	R0 1 ; return 

function #150 <?:2675,2698> (39 instructions, 156 bytes at 00000160C6803BE0)
1 param, 5 slots, 2 upvalues, 0 locals, 8 constants, 0 functions
	1	[2676]	TEST     	R0 1 ; if R0 then PC := 4
	2	[2676]	JMP      	4 ; PC := 4
	3	[2677]	RETURN   	R0 1 ; return 
	4	[2680]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	5	[2680]	GETTABLE 	R2 R0 K1 ; R2 := R0["location"]
	6	[2680]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[2681]	GETGLOBAL	R2 K2 ; R2 := POST_NEW_WAR_MISSIONS
	8	[2681]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	9	[2683]	TEST     	R2 1 ; if R2 then PC := 12
	10	[2683]	JMP      	12 ; PC := 12
	11	[2684]	RETURN   	R0 1 ; return 
	12	[2687]	GETUPVAL 	R3 U0 ; R3 := U0
	13	[2687]	CALL     	R3 1 2 ; R3 := R3()
	14	[2687]	TEST     	R3 0 ; if not R3 then PC := 39
	15	[2687]	JMP      	39 ; PC := 39
	16	[2687]	GETUPVAL 	R3 U1 ; R3 := U1
	17	[2687]	CALL     	R3 1 2 ; R3 := R3()
	18	[2687]	TEST     	R3 0 ; if not R3 then PC := 39
	19	[2687]	JMP      	39 ; PC := 39
	20	[2688]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	21	[2688]	GETTABLE 	R4 R2 K4 ; R4 := R2["levelOverride"]
	22	[2688]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[2688]	TEST     	R3 1 ; if R3 then PC := 27
	24	[2688]	JMP      	27 ; PC := 27
	25	[2689]	GETTABLE 	R3 R2 K4 ; R3 := R2["levelOverride"]
	26	[2689]	SETTABLE 	R0 K4 R3 ; R0["levelOverride"] := R3
	27	[2691]	GETTABLE 	R3 R2 K5 ; R3 := R2["goalTag"]
	28	[2691]	TEST     	R3 0 ; if not R3 then PC := 32
	29	[2691]	JMP      	32 ; PC := 32
	30	[2692]	GETTABLE 	R3 R2 K5 ; R3 := R2["goalTag"]
	31	[2692]	SETTABLE 	R0 K5 R3 ; R0["goalTag"] := R3
	32	[2694]	GETTABLE 	R3 R2 K6 ; R3 := R2["extraEnemySpec"]
	33	[2694]	TEST     	R3 0 ; if not R3 then PC := 39
	34	[2694]	JMP      	39 ; PC := 39
	35	[2695]	GETGLOBAL	R3 K7 ; R3 := 0xb009bbc6
	36	[2695]	GETTABLE 	R4 R2 K6 ; R4 := R2["extraEnemySpec"]
	37	[2695]	CALL     	R3 2 2 ; R3 := R3(R4)
	38	[2695]	SETTABLE 	R0 K6 R3 ; R0["extraEnemySpec"] := R3
	39	[2698]	RETURN   	R0 1 ; return 

function #151 <?:2700,2702> (4 instructions, 16 bytes at 00000160C6803E60)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2701]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2701]	MOVE     	R2 R0 ; R2 := R0
	3	[2701]	CALL     	R1 2 1 ; R1(R2)
	4	[2702]	RETURN   	R0 1 ; return 

function #152 <?:2704,2721> (30 instructions, 120 bytes at 00000160C6803F30)
2 params, 7 slots, 2 upvalues, 0 locals, 6 constants, 0 functions
	1	[2706]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2706]	CALL     	R2 1 2 ; R2 := R2()
	3	[2706]	SELF     	R2 R2 K0 ; R3 := R2; R2 := R2[0x228a5581]
	4	[2706]	MOVE     	R4 R0 ; R4 := R0
	5	[2706]	MOVE     	R5 R1 ; R5 := R1
	6	[2706]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	7	[2708]	TEST     	R0 1 ; if R0 then PC := 10
	8	[2708]	JMP      	10 ; PC := 10
	9	[2709]	RETURN   	R0 1 ; return 
	10	[2712]	GETGLOBAL	R2 K1 ; R2 := POST_NEW_WAR_MISSIONS
	11	[2712]	GETGLOBAL	R3 K2 ; R3 := 0x64fb1586
	12	[2712]	MOVE     	R4 R0 ; R4 := R0
	13	[2712]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[2712]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	15	[2714]	TEST     	R2 0 ; if not R2 then PC := 21
	16	[2714]	JMP      	21 ; PC := 21
	17	[2714]	GETUPVAL 	R3 U1 ; R3 := U1
	18	[2714]	CALL     	R3 1 2 ; R3 := R3()
	19	[2714]	TEST     	R3 1 ; if R3 then PC := 22
	20	[2714]	JMP      	22 ; PC := 22
	21	[2715]	RETURN   	R0 1 ; return 
	22	[2718]	GETTABLE 	R3 R2 K3 ; R3 := R2["streamingOffset"]
	23	[2718]	TEST     	R3 0 ; if not R3 then PC := 30
	24	[2718]	JMP      	30 ; PC := 30
	25	[2719]	SELF     	R3 R1 K4 ; R4 := R1; R3 := R1[0x691a3b2d]
	26	[2719]	GETTABLE 	R5 R2 K3 ; R5 := R2["streamingOffset"]
	27	[2719]	GETGLOBAL	R6 K5 ; R6 := 0x00046924
	28	[2719]	CALL     	R6 1 0 ; R6,... := R6()
	29	[2719]	CALL     	R3 0 1 ; R3(R4,...)
	30	[2721]	RETURN   	R0 1 ; return 

function #153 <?:2723,2732> (15 instructions, 60 bytes at 00000160C6804150)
2 params, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[2724]	TEST     	R1 0 ; if not R1 then PC := 7
	2	[2724]	JMP      	7 ; PC := 7
	3	[2724]	GETGLOBAL	R2 K0 ; R2 := POST_NEW_WAR_MISSIONS
	4	[2724]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	5	[2724]	TEST     	R2 1 ; if R2 then PC := 8
	6	[2724]	JMP      	8 ; PC := 8
	7	[2725]	RETURN   	R0 1 ; return 
	8	[2728]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[2728]	CALL     	R2 1 2 ; R2 := R2()
	10	[2728]	TEST     	R2 0 ; if not R2 then PC := 15
	11	[2728]	JMP      	15 ; PC := 15
	12	[2730]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0xeaa7e8dc]
	13	[2730]	LOADK    	R4 K2 ; R4 := "Alt"
	14	[2730]	CALL     	R2 3 1 ; R2(R3,R4)
	15	[2732]	RETURN   	R0 1 ; return 

function #154 <?:2734,2739> (12 instructions, 48 bytes at 00000160C68042F0)
1 param, 4 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[2736]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2736]	CALL     	R1 1 2 ; R1 := R1()
	3	[2736]	SELF     	R1 R1 K0 ; R2 := R1; R1 := R1[0xc18bf6f0]
	4	[2736]	MOVE     	R3 R0 ; R3 := R0
	5	[2736]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[2736]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x8f89d633]
	7	[2736]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[2737]	GETUPVAL 	R2 U1 ; R2 := U1
	9	[2737]	MOVE     	R3 R1 ; R3 := R1
	10	[2737]	CALL     	R2 2 1 ; R2(R3)
	11	[2738]	RETURN   	R1 2 ; return R1 
	12	[2739]	RETURN   	R0 1 ; return 

function #155 <?:2741,2750> (18 instructions, 72 bytes at 00000160C6804430)
2 params, 7 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[2744]	GETGLOBAL	R2 K0 ; R2 := POST_NEW_WAR_MISSIONS
	2	[2744]	GETGLOBAL	R3 K1 ; R3 := 0x64fb1586
	3	[2744]	MOVE     	R4 R0 ; R4 := R0
	4	[2744]	CALL     	R3 2 2 ; R3 := R3(R4)
	5	[2744]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	6	[2745]	TEST     	R2 1 ; if R2 then PC := 9
	7	[2745]	JMP      	9 ; PC := 9
	8	[2746]	RETURN   	R1 2 ; return R1 
	9	[2749]	GETUPVAL 	R3 U0 ; R3 := U0
	10	[2749]	GETTABLE 	R3 R3 K2 ; R3 := R3[0x06d055f9]
	11	[2749]	GETUPVAL 	R4 U1 ; R4 := U1
	12	[2749]	CALL     	R4 1 2 ; R4 := R4()
	13	[2749]	GETGLOBAL	R5 K3 ; R5 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	14	[2749]	LOADK    	R6 := 0.000000
	15	[2749]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	16	[2749]	ADD      	R3 R1 R3 ; R3 := R1 + R3
	17	[2749]	RETURN   	R3 2 ; return R3 
	18	[2750]	RETURN   	R0 1 ; return 

function #156 <?:2752,2754> (6 instructions, 24 bytes at 00000160C68045D0)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2753]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[2753]	MOVE     	R3 R0 ; R3 := R0
	3	[2753]	MOVE     	R4 R1 ; R4 := R1
	4	[2753]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	5	[2753]	RETURN   	R2 0 ; return R2,... 
	6	[2754]	RETURN   	R0 1 ; return 

function #157 <?:2756,2758> (10 instructions, 40 bytes at 00000160C68046C0)
2 params, 3 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2757]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 8
	2	[2757]	JMP      	8 ; PC := 8
	3	[2757]	GETGLOBAL	R2 K0 ; R2 := PLAINS_ELO_POST_NEW_WAR_OFFSET
	4	[2757]	ADD      	R2 R1 R2 ; R2 := R1 + R2
	5	[2757]	EQ       	1 R0 R2 ; if R0 == R2 then PC := 8
	6	[2757]	JMP      	8 ; PC := 8
	7	[2757]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 8
	8	[2757]	OP_LOADBOOL	R2 1 0 ; R2 := true
	9	[2757]	RETURN   	R2 2 ; return R2 
	10	[2758]	RETURN   	R0 1 ; return 

function #158 <?:2760,2772> (38 instructions, 152 bytes at 00000160C68047F0)
0 params, 10 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[2761]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2761]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[2761]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2761]	TEST     	R0 1 ; if R0 then PC := 36
	5	[2761]	JMP      	36 ; PC := 36
	6	[2762]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	7	[2762]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x25a6e75e]
	8	[2762]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[2763]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xe9768ed0]
	10	[2763]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[2764]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0x8e7c3b5e]
	12	[2764]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[2765]	GETGLOBAL	R3 K5 ; R3 := 0xcfc01047
	14	[2765]	MOVE     	R4 R1 ; R4 := R1
	15	[2765]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	16	[2765]	JMP      	34 ; PC := 34
	17	[2766]	GETTABLE 	R8 R7 K6 ; R8 := R7["mItemType"]
	18	[2766]	GETUPVAL 	R9 U0 ; R9 := U0
	19	[2766]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 34
	20	[2766]	JMP      	34 ; PC := 34
	21	[2767]	GETTABLE 	R8 R7 K7 ; R8 := R7["mCompleted"]
	22	[2767]	TEST     	R8 1 ; if R8 then PC := 33
	23	[2767]	JMP      	33 ; PC := 33
	24	[2767]	GETUPVAL 	R8 U0 ; R8 := U0
	25	[2767]	EQ       	0 R2 R8 ; if R2 ~= R8 then PC := 31
	26	[2767]	JMP      	31 ; PC := 31
	27	[2767]	GETTABLE 	R8 R7 K8 ; R8 := R7["mProgress"]
	28	[2767]	LEN      	R8 R8 ; R8 := # R8
	29	[2767]	LT       	1 K9 R8 ; if 0.000000 < R8 then PC := 32
	30	[2767]	JMP      	32 ; PC := 32
	31	[2767]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 32
	32	[2767]	OP_LOADBOOL	R8 1 0 ; R8 := true
	33	[2767]	RETURN   	R8 2 ; return R8 
	34	[2765]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 17; R5 := R6 end
	35	[2768]	JMP      	17 ; PC := 17
	36	[2771]	OP_LOADBOOL	R8 0 0 ; R8 := false
	37	[2771]	RETURN   	R8 2 ; return R8 
	38	[2772]	RETURN   	R0 1 ; return 

function #159 <?:2774,2776> (5 instructions, 20 bytes at 00000160C6804AD0)
0 params, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[2775]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2775]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[2775]	TAILCALL 	R0 2 0 ; R0,... := R0(R1)
	4	[2775]	RETURN   	R0 0 ; return R0,... 
	5	[2776]	RETURN   	R0 1 ; return 

function #160 <?:2778,2780> (4 instructions, 16 bytes at 00000160C6804BC0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2779]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2779]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2779]	RETURN   	R0 0 ; return R0,... 
	4	[2780]	RETURN   	R0 1 ; return 

function #161 <?:2782,2852> (160 instructions, 640 bytes at 00000160C6804C90)
0 params, 31 slots, 2 upvalues, 0 locals, 32 constants, 0 functions
	1	[2783]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2783]	GETTABLE 	R0 R0 K1 ; R0 := R0["CachedStarChartProgress"]
	3	[2783]	TEST     	R0 0 ; if not R0 then PC := 24
	4	[2783]	JMP      	24 ; PC := 24
	5	[2784]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[2784]	GETTABLE 	R0 R0 K1 ; R0 := R0["CachedStarChartProgress"]
	7	[2784]	GETTABLE 	R0 R0 K2 ; R0 := R0["numCompleted"]
	8	[2784]	GETGLOBAL	R1 K0 ; R1 := _T
	9	[2784]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedStarChartProgress"]
	10	[2784]	GETTABLE 	R1 R1 K3 ; R1 := R1["totalMissions"]
	11	[2784]	GETGLOBAL	R2 K0 ; R2 := _T
	12	[2784]	GETTABLE 	R2 R2 K1 ; R2 := R2["CachedStarChartProgress"]
	13	[2784]	GETTABLE 	R2 R2 K4 ; R2 := R2["missingNodes"]
	14	[2784]	GETGLOBAL	R3 K0 ; R3 := _T
	15	[2784]	GETTABLE 	R3 R3 K1 ; R3 := R3["CachedStarChartProgress"]
	16	[2784]	GETTABLE 	R3 R3 K5 ; R3 := R3["numHardCompleted"]
	17	[2784]	GETGLOBAL	R4 K0 ; R4 := _T
	18	[2784]	GETTABLE 	R4 R4 K1 ; R4 := R4["CachedStarChartProgress"]
	19	[2784]	GETTABLE 	R4 R4 K6 ; R4 := R4["missionXp"]
	20	[2784]	GETGLOBAL	R5 K0 ; R5 := _T
	21	[2784]	GETTABLE 	R5 R5 K1 ; R5 := R5["CachedStarChartProgress"]
	22	[2784]	GETTABLE 	R5 R5 K7 ; R5 := R5["hardMissionXp"]
	23	[2784]	RETURN   	R0 7 ; return R0, R1, R2, R3, R4, R5 
	24	[2787]	LOADNIL  	R0 R0 ; R0 := nil
	25	[2788]	GETGLOBAL	R1 K8 ; R1 := 0x7b998233
	26	[2788]	GETGLOBAL	R2 K9 ; R2 := 0x25d99d89
	27	[2788]	CALL     	R1 2 2 ; R1 := R1(R2)
	28	[2788]	TEST     	R1 1 ; if R1 then PC := 35
	29	[2788]	JMP      	35 ; PC := 35
	30	[2789]	GETGLOBAL	R1 K9 ; R1 := 0x25d99d89
	31	[2789]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xb407484d]
	32	[2789]	CALL     	R1 2 2 ; R1 := R1(R2)
	33	[2789]	MOVE     	R0 R1 ; R0 := R1
	34	[2789]	JMP      	61 ; PC := 61
	35	[2791]	NEWTABLE 	R1 0 0 ; R1 := {}
	36	[2791]	MOVE     	R0 R1 ; R0 := R1
	37	[2793]	GETGLOBAL	R1 K8 ; R1 := 0x7b998233
	38	[2793]	GETGLOBAL	R2 K11 ; R2 := 0x76ea806b
	39	[2793]	CALL     	R1 2 2 ; R1 := R1(R2)
	40	[2793]	TEST     	R1 1 ; if R1 then PC := 61
	41	[2793]	JMP      	61 ; PC := 61
	42	[2794]	GETGLOBAL	R1 K11 ; R1 := 0x76ea806b
	43	[2794]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0x3f3ae64c]
	44	[2794]	LOADK    	R3 := 0.000000
	45	[2794]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	46	[2795]	GETGLOBAL	R2 K8 ; R2 := 0x7b998233
	47	[2795]	MOVE     	R3 R1 ; R3 := R1
	48	[2795]	CALL     	R2 2 2 ; R2 := R2(R3)
	49	[2795]	TEST     	R2 1 ; if R2 then PC := 61
	50	[2795]	JMP      	61 ; PC := 61
	51	[2796]	SELF     	R2 R1 K13 ; R3 := R1; R2 := R1[0x80563238]
	52	[2796]	CALL     	R2 2 2 ; R2 := R2(R3)
	53	[2797]	GETGLOBAL	R3 K8 ; R3 := 0x7b998233
	54	[2797]	MOVE     	R4 R2 ; R4 := R2
	55	[2797]	CALL     	R3 2 2 ; R3 := R3(R4)
	56	[2797]	TEST     	R3 1 ; if R3 then PC := 61
	57	[2797]	JMP      	61 ; PC := 61
	58	[2798]	SELF     	R3 R2 K10 ; R4 := R2; R3 := R2[0xb407484d]
	59	[2798]	CALL     	R3 2 2 ; R3 := R3(R4)
	60	[2798]	MOVE     	R0 R3 ; R0 := R3
	61	[2804]	NEWTABLE 	R3 0 0 ; R3 := {}
	62	[2805]	LOADK    	R4 := 0.000000
	63	[2806]	OP_LOADBOOL	R5 0 0 ; R5 := false
	64	[2808]	GETGLOBAL	R6 K14 ; R6 := 0xcfc01047
	65	[2808]	MOVE     	R7 R0 ; R7 := R0
	66	[2808]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	67	[2808]	JMP      	78 ; PC := 78
	68	[2809]	GETTABLE 	R11 R10 K15 ; R11 := R10["mTag"]
	69	[2809]	SELF     	R11 R11 K16 ; R12 := R11; R11 := R11[0x56c01834]
	70	[2809]	CALL     	R11 2 2 ; R11 := R11(R12)
	71	[2809]	TEST     	R11 0 ; if not R11 then PC := 78
	72	[2809]	JMP      	78 ; PC := 78
	73	[2810]	GETGLOBAL	R11 K17 ; R11 := 0x64fb1586
	74	[2810]	GETTABLE 	R12 R10 K15 ; R12 := R10["mTag"]
	75	[2810]	CALL     	R11 2 2 ; R11 := R11(R12)
	76	[2810]	GETTABLE 	R12 R10 K18 ; R12 := R10["mTier"]
	77	[2810]	SETTABLE 	R3 R11 R12 ; R3[R11] := R12
	78	[2808]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 68; R8 := R9 end
	79	[2811]	JMP      	68 ; PC := 68
	80	[2814]	GETUPVAL 	R11 U0 ; R11 := U0
	81	[2814]	CALL     	R11 1 2 ; R11 := R11()
	82	[2815]	SELF     	R12 R11 K19 ; R13 := R11; R12 := R11[0xd13b47be]
	83	[2815]	CALL     	R12 2 2 ; R12 := R12(R13)
	84	[2816]	LOADK    	R13 := 0.000000
	85	[2817]	LOADK    	R14 := 0.000000
	86	[2818]	NEWTABLE 	R15 0 0 ; R15 := {}
	87	[2820]	GETGLOBAL	R16 K14 ; R16 := 0xcfc01047
	88	[2820]	MOVE     	R17 R12 ; R17 := R12
	89	[2820]	CALL     	R16 2 4 ; R16,R17,R18 := R16(R17)
	90	[2820]	JMP      	130 ; PC := 130
	91	[2821]	GETTABLE 	R21 R20 K20 ; R21 := R20["name"]
	92	[2822]	SELF     	R22 R20 K21 ; R23 := R20; R22 := R20[0x7c303c3d]
	93	[2822]	OP_LOADBOOL	R24 0 0 ; R24 := false
	94	[2822]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	95	[2822]	TEST     	R22 0 ; if not R22 then PC := 130
	96	[2822]	JMP      	130 ; PC := 130
	97	[2822]	GETGLOBAL	R22 K22 ; R22 := APARTMENT_NODE_TAG
	98	[2822]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 130
	99	[2822]	JMP      	130 ; PC := 130
	100	[2823]	ADD      	R13 R13 K23 ; R13 := R13 + 1.000000
	101	[2824]	GETGLOBAL	R22 K17 ; R22 := 0x64fb1586
	102	[2824]	MOVE     	R23 R21 ; R23 := R21
	103	[2824]	CALL     	R22 2 2 ; R22 := R22(R23)
	104	[2825]	TEST     	R5 1 ; if R5 then PC := 109
	105	[2825]	JMP      	109 ; PC := 109
	106	[2825]	GETTABLE 	R23 R3 R22 ; R23 := R3[R22]
	107	[2825]	EQ       	1 R23 K24 ; if R23 == nil then PC := 117
	108	[2825]	JMP      	117 ; PC := 117
	109	[2826]	ADD      	R14 R14 K23 ; R14 := R14 + 1.000000
	110	[2827]	TEST     	R5 1 ; if R5 then PC := 115
	111	[2827]	JMP      	115 ; PC := 115
	112	[2827]	GETTABLE 	R23 R3 R22 ; R23 := R3[R22]
	113	[2827]	LT       	0 K25 R23 ; if 0.000000 >= R23 then PC := 130
	114	[2827]	JMP      	130 ; PC := 130
	115	[2828]	ADD      	R4 R4 K23 ; R4 := R4 + 1.000000
	116	[2829]	JMP      	130 ; PC := 130
	117	[2831]	GETGLOBAL	R23 K26 ; R23 := 0x33bdd652
	118	[2831]	GETTABLE 	R23 R23 K27 ; R23 := R23[0x23d5322f]
	119	[2831]	MOVE     	R24 R15 ; R24 := R15
	120	[2831]	NEWTABLE 	R25 0 2 ; R25 := {}
	121	[2831]	GETGLOBAL	R26 K28 ; R26 := 0x0469f296
	122	[2831]	GETTABLE 	R27 R20 K20 ; R27 := R20["name"]
	123	[2831]	CALL     	R26 2 2 ; R26 := R26(R27)
	124	[2831]	SETTABLE 	R25 K20 R26 ; R25["name"] := R26
	125	[2831]	GETGLOBAL	R26 K28 ; R26 := 0x0469f296
	126	[2831]	GETTABLE 	R27 R20 K29 ; R27 := R20["locTag"]
	127	[2831]	CALL     	R26 2 2 ; R26 := R26(R27)
	128	[2831]	SETTABLE 	R25 K29 R26 ; R25["locTag"] := R26
	129	[2831]	CALL     	R23 3 1 ; R23(R24,R25)
	130	[2820]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 91; R18 := R19 end
	131	[2834]	JMP      	91 ; PC := 91
	132	[2837]	SELF     	R23 R11 K30 ; R24 := R11; R23 := R11[0x5ad726d0]
	133	[2837]	MOVE     	R25 R0 ; R25 := R0
	134	[2837]	LOADK    	R26 := 0.000000
	135	[2837]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	136	[2838]	SELF     	R24 R11 K30 ; R25 := R11; R24 := R11[0x5ad726d0]
	137	[2838]	MOVE     	R26 R0 ; R26 := R0
	138	[2838]	LOADK    	R27 := 1.000000
	139	[2838]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	140	[2841]	GETGLOBAL	R25 K0 ; R25 := _T
	141	[2841]	NEWTABLE 	R26 0 6 ; R26 := {}
	142	[2843]	SETTABLE 	R26 K2 R14 ; R26["numCompleted"] := R14
	143	[2844]	SETTABLE 	R26 K3 R13 ; R26["totalMissions"] := R13
	144	[2845]	GETUPVAL 	R27 U1 ; R27 := U1
	145	[2845]	GETTABLE 	R27 R27 K31 ; R27 := R27[0xae97c4f5]
	146	[2845]	MOVE     	R28 R15 ; R28 := R15
	147	[2845]	CALL     	R27 2 2 ; R27 := R27(R28)
	148	[2845]	SETTABLE 	R26 K4 R27 ; R26["missingNodes"] := R27
	149	[2846]	SETTABLE 	R26 K5 R4 ; R26["numHardCompleted"] := R4
	150	[2847]	SETTABLE 	R26 K6 R23 ; R26["missionXp"] := R23
	151	[2848]	SETTABLE 	R26 K7 R24 ; R26["hardMissionXp"] := R24
	152	[2849]	SETTABLE 	R25 K1 R26 ; R25["CachedStarChartProgress"] := R26
	153	[2851]	MOVE     	R25 R14 ; R25 := R14
	154	[2851]	MOVE     	R26 R13 ; R26 := R13
	155	[2851]	MOVE     	R27 R15 ; R27 := R15
	156	[2851]	MOVE     	R28 R4 ; R28 := R4
	157	[2851]	MOVE     	R29 R23 ; R29 := R23
	158	[2851]	MOVE     	R30 R24 ; R30 := R24
	159	[2851]	RETURN   	R25 7 ; return R25, R26, R27, R28, R29, R30 
	160	[2852]	RETURN   	R0 1 ; return 

function #162 <?:2854,2856> (4 instructions, 16 bytes at 00000160C61AC720)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2855]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2855]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2855]	RETURN   	R0 0 ; return R0,... 
	4	[2856]	RETURN   	R0 1 ; return 

function #163 <?:2858,2862> (12 instructions, 48 bytes at 00000160C61AC7F0)
0 params, 8 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2859]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2859]	CALL     	R0 1 6 ; R0,R1,R2,R3,R4 := R0()
	3	[2860]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 8
	4	[2860]	JMP      	8 ; PC := 8
	5	[2860]	OP_LOADBOOL	R5 0 0 ; R5 := false
	6	[2860]	JMP      	9 ; PC := 9
	7	[2860]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 8
	8	[2860]	OP_LOADBOOL	R5 1 0 ; R5 := true
	9	[2861]	MOVE     	R6 R5 ; R6 := R5
	10	[2861]	MOVE     	R7 R2 ; R7 := R2
	11	[2861]	RETURN   	R6 3 ; return R6, R7 
	12	[2862]	RETURN   	R0 1 ; return 

function #164 <?:2864,2866> (4 instructions, 16 bytes at 00000160C61AC900)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2865]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2865]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[2865]	RETURN   	R0 0 ; return R0,... 
	4	[2866]	RETURN   	R0 1 ; return 

function #165 <?:2868,2921> (125 instructions, 500 bytes at 00000160C61AC9D0)
1 param, 19 slots, 0 upvalues, 0 locals, 18 constants, 0 functions
	1	[2869]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[2871]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	3	[2871]	MOVE     	R3 R1 ; R3 := R1
	4	[2871]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[2871]	TEST     	R2 0 ; if not R2 then PC := 9
	6	[2871]	JMP      	9 ; PC := 9
	7	[2872]	LOADNIL  	R2 R2 ; R2 := nil
	8	[2872]	RETURN   	R2 2 ; return R2 
	9	[2875]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x69727e0b]
	10	[2875]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[2876]	GETTABLE 	R3 R2 K3 ; R3 := R2["mFlashSales"]
	12	[2878]	GETGLOBAL	R4 K4 ; R4 := _T
	13	[2878]	GETTABLE 	R4 R4 K5 ; R4 := R4["CachedFlashSales"]
	14	[2878]	EQ       	0 R4 K6 ; if R4 ~= nil then PC := 36
	15	[2878]	JMP      	36 ; PC := 36
	16	[2879]	GETGLOBAL	R4 K4 ; R4 := _T
	17	[2879]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[2879]	SETTABLE 	R4 K5 R5 ; R4[0xfe9eb1a5] := R5
	19	[2880]	GETGLOBAL	R4 K7 ; R4 := 0xc8802016
	20	[2880]	MOVE     	R5 R3 ; R5 := R3
	21	[2880]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	22	[2880]	JMP      	34 ; PC := 34
	23	[2881]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	24	[2881]	GETTABLE 	R10 R8 K8 ; R10 := R8["mTypeName"]
	25	[2881]	CALL     	R9 2 2 ; R9 := R9(R10)
	26	[2881]	TEST     	R9 1 ; if R9 then PC := 34
	27	[2881]	JMP      	34 ; PC := 34
	28	[2882]	GETGLOBAL	R9 K4 ; R9 := _T
	29	[2882]	GETTABLE 	R9 R9 K5 ; R9 := R9["CachedFlashSales"]
	30	[2882]	GETTABLE 	R10 R8 K8 ; R10 := R8["mTypeName"]
	31	[2882]	SELF     	R10 R10 K9 ; R11 := R10; R10 := R10[0xed4e0128]
	32	[2882]	CALL     	R10 2 2 ; R10 := R10(R11)
	33	[2882]	SETTABLE 	R9 R10 R8 ; R9[R10] := R8
	34	[2880]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 23; R6 := R7 end
	35	[2883]	JMP      	23 ; PC := 23
	36	[2887]	GETGLOBAL	R9 K4 ; R9 := _T
	37	[2887]	GETTABLE 	R9 R9 K5 ; R9 := R9["CachedFlashSales"]
	38	[2887]	EQ       	0 R9 K6 ; if R9 ~= nil then PC := 42
	39	[2887]	JMP      	42 ; PC := 42
	40	[2888]	LOADNIL  	R9 R9 ; R9 := nil
	41	[2888]	RETURN   	R9 2 ; return R9 
	42	[2891]	LOADNIL  	R9 R9 ; R9 := nil
	43	[2892]	SELF     	R10 R0 K10 ; R11 := R0; R10 := R0[0x9dbbea0a]
	44	[2892]	CALL     	R10 2 2 ; R10 := R10(R11)
	45	[2892]	TEST     	R10 0 ; if not R10 then PC := 49
	46	[2892]	JMP      	49 ; PC := 49
	47	[2893]	MOVE     	R9 R0 ; R9 := R0
	48	[2893]	JMP      	59 ; PC := 59
	49	[2895]	SELF     	R10 R0 K11 ; R11 := R0; R10 := R0[0xf278f8a1]
	50	[2895]	CALL     	R10 2 2 ; R10 := R10(R11)
	51	[2895]	MOVE     	R9 R10 ; R9 := R10
	52	[2896]	GETGLOBAL	R10 K1 ; R10 := 0x7b998233
	53	[2896]	MOVE     	R11 R9 ; R11 := R9
	54	[2896]	CALL     	R10 2 2 ; R10 := R10(R11)
	55	[2896]	TEST     	R10 0 ; if not R10 then PC := 59
	56	[2896]	JMP      	59 ; PC := 59
	57	[2897]	LOADNIL  	R10 R10 ; R10 := nil
	58	[2897]	RETURN   	R10 2 ; return R10 
	59	[2901]	GETGLOBAL	R10 K4 ; R10 := _T
	60	[2901]	GETTABLE 	R10 R10 K5 ; R10 := R10["CachedFlashSales"]
	61	[2901]	SELF     	R11 R9 K9 ; R12 := R9; R11 := R9[0xed4e0128]
	62	[2901]	CALL     	R11 2 2 ; R11 := R11(R12)
	63	[2901]	GETTABLE 	R10 R10 R11 ; R10 := R10[R11]
	64	[2902]	GETGLOBAL	R11 K1 ; R11 := 0x7b998233
	65	[2902]	MOVE     	R12 R10 ; R12 := R10
	66	[2902]	CALL     	R11 2 2 ; R11 := R11(R12)
	67	[2902]	TEST     	R11 1 ; if R11 then PC := 123
	68	[2902]	JMP      	123 ; PC := 123
	69	[2905]	GETGLOBAL	R11 K7 ; R11 := 0xc8802016
	70	[2905]	MOVE     	R12 R3 ; R12 := R3
	71	[2905]	CALL     	R11 2 4 ; R11,R12,R13 := R11(R12)
	72	[2905]	JMP      	105 ; PC := 105
	73	[2906]	GETGLOBAL	R16 K1 ; R16 := 0x7b998233
	74	[2906]	GETTABLE 	R17 R15 K8 ; R17 := R15["mTypeName"]
	75	[2906]	CALL     	R16 2 2 ; R16 := R16(R17)
	76	[2906]	TEST     	R16 1 ; if R16 then PC := 105
	77	[2906]	JMP      	105 ; PC := 105
	78	[2906]	GETTABLE 	R16 R15 K8 ; R16 := R15["mTypeName"]
	79	[2906]	SELF     	R16 R16 K9 ; R17 := R16; R16 := R16[0xed4e0128]
	80	[2906]	CALL     	R16 2 2 ; R16 := R16(R17)
	81	[2906]	SELF     	R17 R9 K9 ; R18 := R9; R17 := R9[0xed4e0128]
	82	[2906]	CALL     	R17 2 2 ; R17 := R17(R18)
	83	[2906]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 105
	84	[2906]	JMP      	105 ; PC := 105
	85	[2907]	GETGLOBAL	R16 K12 ; R16 := 0x34291f5c
	86	[2907]	GETTABLE 	R16 R16 K13 ; R16 := R16[0x397b920f]
	87	[2907]	GETTABLE 	R17 R15 K14 ; R17 := R15["mStartDate"]
	88	[2907]	CALL     	R16 2 2 ; R16 := R16(R17)
	89	[2907]	LT       	0 R16 K15 ; if R16 >= 0.000000 then PC := 105
	90	[2907]	JMP      	105 ; PC := 105
	91	[2908]	GETGLOBAL	R16 K12 ; R16 := 0x34291f5c
	92	[2908]	GETTABLE 	R16 R16 K13 ; R16 := R16[0x397b920f]
	93	[2908]	GETTABLE 	R17 R15 K16 ; R17 := R15["mEndDate"]
	94	[2908]	CALL     	R16 2 2 ; R16 := R16(R17)
	95	[2908]	LT       	0 K15 R16 ; if 0.000000 >= R16 then PC := 105
	96	[2908]	JMP      	105 ; PC := 105
	97	[2909]	MOVE     	R10 R15 ; R10 := R15
	98	[2910]	GETGLOBAL	R16 K4 ; R16 := _T
	99	[2910]	GETTABLE 	R16 R16 K5 ; R16 := R16["CachedFlashSales"]
	100	[2910]	GETTABLE 	R17 R15 K8 ; R17 := R15["mTypeName"]
	101	[2910]	SELF     	R17 R17 K9 ; R18 := R17; R17 := R17[0xed4e0128]
	102	[2910]	CALL     	R17 2 2 ; R17 := R17(R18)
	103	[2910]	SETTABLE 	R16 R17 R10 ; R16[R17] := R10
	104	[2911]	JMP      	107 ; PC := 107
	105	[2905]	TFORLOOP 	R11 2 ; R14,R15 := R11(R12,R13); if R14 ~= nil then begin PC = 73; R13 := R14 end
	106	[2912]	JMP      	73 ; PC := 73
	107	[2915]	GETGLOBAL	R16 K12 ; R16 := 0x34291f5c
	108	[2915]	GETTABLE 	R16 R16 K13 ; R16 := R16[0x397b920f]
	109	[2915]	GETTABLE 	R17 R10 K14 ; R17 := R10["mStartDate"]
	110	[2915]	CALL     	R16 2 2 ; R16 := R16(R17)
	111	[2915]	LT       	0 R16 K15 ; if R16 >= 0.000000 then PC := 123
	112	[2915]	JMP      	123 ; PC := 123
	113	[2915]	GETGLOBAL	R16 K12 ; R16 := 0x34291f5c
	114	[2915]	GETTABLE 	R16 R16 K13 ; R16 := R16[0x397b920f]
	115	[2915]	GETTABLE 	R17 R10 K16 ; R17 := R10["mEndDate"]
	116	[2915]	CALL     	R16 2 2 ; R16 := R16(R17)
	117	[2915]	LT       	0 K15 R16 ; if 0.000000 >= R16 then PC := 123
	118	[2915]	JMP      	123 ; PC := 123
	119	[2915]	GETTABLE 	R16 R10 K17 ; R16 := R10["mShowInMarket"]
	120	[2915]	TEST     	R16 0 ; if not R16 then PC := 123
	121	[2915]	JMP      	123 ; PC := 123
	122	[2916]	RETURN   	R10 2 ; return R10 
	123	[2920]	LOADNIL  	R16 R16 ; R16 := nil
	124	[2920]	RETURN   	R16 2 ; return R16 
	125	[2921]	RETURN   	R0 1 ; return 

function #166 <?:2923,2925> (5 instructions, 20 bytes at 00000160C61AD130)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2924]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2924]	MOVE     	R2 R0 ; R2 := R0
	3	[2924]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2924]	RETURN   	R1 2 ; return R1 
	5	[2925]	RETURN   	R0 1 ; return 

function #167 <?:2944,2946> (8 instructions, 32 bytes at 00000160C61AD220)
1 param, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[2945]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2945]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	3	[2945]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 6
	4	[2945]	JMP      	6 ; PC := 6
	5	[2945]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 6
	6	[2945]	OP_LOADBOOL	R1 1 0 ; R1 := true
	7	[2945]	RETURN   	R1 2 ; return R1 
	8	[2946]	RETURN   	R0 1 ; return 

function #168 <?:2948,2950> (5 instructions, 20 bytes at 00000160C61AD330)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2949]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2949]	MOVE     	R2 R0 ; R2 := R0
	3	[2949]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2949]	RETURN   	R1 2 ; return R1 
	5	[2950]	RETURN   	R0 1 ; return 

function #169 <?:2953,2953> (2 instructions, 8 bytes at 00000160C61AD420)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[2953]	RETURN   	R0 2 ; return R0 
	2	[2953]	RETURN   	R0 1 ; return 

function #170 <?:2954,2954> (6 instructions, 24 bytes at 00000160C61AD4F0)
2 params, 3 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[2954]	LT       	1 R0 R1 ; if R0 < R1 then PC := 4
	2	[2954]	JMP      	4 ; PC := 4
	3	[2954]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 4
	4	[2954]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[2954]	RETURN   	R2 2 ; return R2 
	6	[2954]	RETURN   	R0 1 ; return 

function #171 <?:2955,2955> (6 instructions, 24 bytes at 00000160C61AD5E0)
2 params, 3 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[2955]	LT       	1 R1 R0 ; if R1 < R0 then PC := 4
	2	[2955]	JMP      	4 ; PC := 4
	3	[2955]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 4
	4	[2955]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[2955]	RETURN   	R2 2 ; return R2 
	6	[2955]	RETURN   	R0 1 ; return 

function #172 <?:2957,2987> (62 instructions, 248 bytes at 00000160C61AD6D0)
4 params, 14 slots, 3 upvalues, 0 locals, 4 constants, 0 functions
	1	[2959]	TEST     	R2 1 ; if R2 then PC := 4
	2	[2959]	JMP      	4 ; PC := 4
	3	[2959]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2960]	TEST     	R3 0 ; if not R3 then PC := 9
	5	[2960]	JMP      	9 ; PC := 9
	6	[2960]	GETUPVAL 	R4 U1 ; R4 := U1
	7	[2960]	TEST     	R4 1 ; if R4 then PC := 10
	8	[2960]	JMP      	10 ; PC := 10
	9	[2960]	GETUPVAL 	R4 U2 ; R4 := U2
	10	[2962]	LOADK    	R5 := 1.000000
	11	[2962]	LEN      	R6 R0 ; R6 := # R0
	12	[2962]	LOADK    	R7 := 0.000000
	13	[2964]	LE       	0 R5 R6 ; if R5 > R6 then PC := 62
	14	[2964]	JMP      	62 ; PC := 62
	15	[2966]	GETGLOBAL	R8 K0 ; R8 := 0x5bced4c4
	16	[2966]	GETTABLE 	R8 R8 K1 ; R8 := R8[0x55f27c30]
	17	[2966]	ADD      	R9 R5 R6 ; R9 := R5 + R6
	18	[2966]	DIV      	R9 R9 K2 ; R9 := R9 / 2.000000
	19	[2966]	CALL     	R8 2 2 ; R8 := R8(R9)
	20	[2966]	MOVE     	R7 R8 ; R7 := R8
	21	[2968]	MOVE     	R8 R2 ; R8 := R2
	22	[2968]	GETTABLE 	R9 R0 R7 ; R9 := R0[R7]
	23	[2968]	CALL     	R8 2 2 ; R8 := R8(R9)
	24	[2970]	EQ       	0 R1 R8 ; if R1 ~= R8 then PC := 52
	25	[2970]	JMP      	52 ; PC := 52
	26	[2971]	NEWTABLE 	R9 2 0 ; R9 := {}
	27	[2971]	MOVE     	R10 R7 ; R10 := R7
	28	[2971]	MOVE     	R11 R7 ; R11 := R7
	29	[2971]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	30	[2971]	SUB      	R10 R7 K3 ; R10 := R7 - 1.000000
	31	[2972]	MOVE     	R11 R2 ; R11 := R2
	32	[2972]	GETTABLE 	R12 R0 R10 ; R12 := R0[R10]
	33	[2972]	CALL     	R11 2 2 ; R11 := R11(R12)
	34	[2972]	EQ       	0 R1 R11 ; if R1 ~= R11 then PC := 40
	35	[2972]	JMP      	40 ; PC := 40
	36	[2973]	MOVE     	R11 R10 ; R11 := R10
	37	[2973]	SUB      	R10 R10 K3 ; R10 := R10 - 1.000000
	38	[2973]	SETTABLE 	R9 K3 R11 ; R9[1.000000] := R11
	39	[2973]	JMP      	31 ; PC := 31
	40	[2975]	ADD      	R10 R7 K3 ; R10 := R7 + 1.000000
	41	[2976]	MOVE     	R11 R2 ; R11 := R2
	42	[2976]	GETTABLE 	R12 R0 R10 ; R12 := R0[R10]
	43	[2976]	CALL     	R11 2 2 ; R11 := R11(R12)
	44	[2976]	EQ       	0 R1 R11 ; if R1 ~= R11 then PC := 50
	45	[2976]	JMP      	50 ; PC := 50
	46	[2977]	MOVE     	R11 R10 ; R11 := R10
	47	[2977]	ADD      	R10 R10 K3 ; R10 := R10 + 1.000000
	48	[2977]	SETTABLE 	R9 K2 R11 ; R9[2.000000] := R11
	49	[2977]	JMP      	41 ; PC := 41
	50	[2979]	RETURN   	R9 2 ; return R9 
	51	[2979]	JMP      	13 ; PC := 13
	52	[2981]	MOVE     	R11 R4 ; R11 := R4
	53	[2981]	MOVE     	R12 R1 ; R12 := R1
	54	[2981]	MOVE     	R13 R8 ; R13 := R8
	55	[2981]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	56	[2981]	TEST     	R11 0 ; if not R11 then PC := 60
	57	[2981]	JMP      	60 ; PC := 60
	58	[2982]	SUB      	R6 R7 K3 ; R6 := R7 - 1.000000
	59	[2982]	JMP      	13 ; PC := 13
	60	[2984]	ADD      	R5 R7 K3 ; R5 := R7 + 1.000000
	61	[2985]	JMP      	13 ; PC := 13
	62	[2987]	RETURN   	R0 1 ; return 

function #173 <?:2989,2991> (8 instructions, 32 bytes at 00000160C61AD9D0)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2990]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[2990]	MOVE     	R5 R0 ; R5 := R0
	3	[2990]	MOVE     	R6 R1 ; R6 := R1
	4	[2990]	MOVE     	R7 R2 ; R7 := R2
	5	[2990]	MOVE     	R8 R3 ; R8 := R3
	6	[2990]	TAILCALL 	R4 5 0 ; R4,... := R4(R5,R6,R7,R8)
	7	[2990]	RETURN   	R4 0 ; return R4,... 
	8	[2991]	RETURN   	R0 1 ; return 

function #174 <?:2993,2998> (7 instructions, 28 bytes at 00000160C61ADAC0)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[2994]	TEST     	R0 0 ; if not R0 then PC := 5
	2	[2994]	JMP      	5 ; PC := 5
	3	[2995]	GETTABLE 	R1 R0 K0 ; R1 := R0["type"]
	4	[2995]	RETURN   	R1 2 ; return R1 
	5	[2997]	LOADNIL  	R1 R1 ; R1 := nil
	6	[2997]	RETURN   	R1 2 ; return R1 
	7	[2998]	RETURN   	R0 1 ; return 

function #175 <?:3000,3008> (20 instructions, 80 bytes at 00000160C61ADBD0)
3 params, 8 slots, 3 upvalues, 0 locals, 2 constants, 0 functions
	1	[3001]	TEST     	R2 1 ; if R2 then PC := 9
	2	[3001]	JMP      	9 ; PC := 9
	3	[3001]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[3001]	SELF     	R4 R0 K0 ; R5 := R0; R4 := R0[0xfe9eb1a5]
	5	[3001]	CALL     	R4 2 0 ; R4,... := R4(R5)
	6	[3001]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	7	[3001]	TEST     	R3 0 ; if not R3 then PC := 18
	8	[3001]	JMP      	18 ; PC := 18
	9	[3002]	SELF     	R3 R0 K1 ; R4 := R0; R3 := R0[0x170c5cfa]
	10	[3002]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[3003]	GETUPVAL 	R4 U1 ; R4 := U1
	12	[3003]	MOVE     	R5 R1 ; R5 := R1
	13	[3003]	MOVE     	R6 R3 ; R6 := R3
	14	[3003]	GETUPVAL 	R7 U2 ; R7 := U2
	15	[3003]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	16	[3004]	NOT      	R5 R4 ; R5 := not R4
	17	[3004]	RETURN   	R5 2 ; return R5 
	18	[3007]	OP_LOADBOOL	R5 1 0 ; R5 := true
	19	[3007]	RETURN   	R5 2 ; return R5 
	20	[3008]	RETURN   	R0 1 ; return 

function #176 <?:3010,3012> (7 instructions, 28 bytes at 00000160C61ADD50)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3011]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[3011]	MOVE     	R4 R0 ; R4 := R0
	3	[3011]	MOVE     	R5 R1 ; R5 := R1
	4	[3011]	MOVE     	R6 R2 ; R6 := R2
	5	[3011]	TAILCALL 	R3 4 0 ; R3,... := R3(R4,R5,R6)
	6	[3011]	RETURN   	R3 0 ; return R3,... 
	7	[3012]	RETURN   	R0 1 ; return 

function #177 <?:3014,3016> (3 instructions, 12 bytes at 00000160C61ADE40)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3015]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3015]	RETURN   	R0 2 ; return R0 
	3	[3016]	RETURN   	R0 1 ; return 

function #178 <?:3018,3156> (284 instructions, 1136 bytes at 00000160C61ADF10)
6 params, 47 slots, 7 upvalues, 0 locals, 34 constants, 0 functions
	1	[3019]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	2	[3019]	MOVE     	R7 R0 ; R7 := R0
	3	[3019]	CALL     	R6 2 2 ; R6 := R6(R7)
	4	[3019]	TEST     	R6 0 ; if not R6 then PC := 9
	5	[3019]	JMP      	9 ; PC := 9
	6	[3020]	LOADK    	R6 := 0.000000
	7	[3020]	LOADK    	R7 := 0.000000
	8	[3020]	RETURN   	R6 3 ; return R6, R7 
	9	[3023]	LOADNIL  	R6 R9 ; R6 := R7 := R8 := R9 := nil
	10	[3027]	NEWTABLE 	R10 0 0 ; R10 := {}
	11	[3029]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 34
	12	[3029]	JMP      	34 ; PC := 34
	13	[3030]	LOADK    	R11 := 0.000000
	14	[3030]	LOADK    	R12 := 3.000000
	15	[3030]	LOADK    	R13 := 1.000000
	16	[3030]	FORPREP  	R11 32 ; R11 -= R13; PC := 32
	17	[3031]	SELF     	R15 R0 K3 ; R16 := R0; R15 := R0[0x4e485a6f]
	18	[3031]	MOVE     	R17 R14 ; R17 := R14
	19	[3031]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	20	[3032]	SELF     	R16 R0 K4 ; R17 := R0; R16 := R0[0x2ce719d4]
	21	[3032]	MOVE     	R18 R14 ; R18 := R14
	22	[3032]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	23	[3034]	LT       	1 K5 R15 ; if 0.000000 < R15 then PC := 29
	24	[3034]	JMP      	29 ; PC := 29
	25	[3034]	LT       	1 K5 R16 ; if 0.000000 < R16 then PC := 29
	26	[3034]	JMP      	29 ; PC := 29
	27	[3034]	EQ       	0 R6 K1 ; if R6 ~= nil then PC := 32
	28	[3034]	JMP      	32 ; PC := 32
	29	[3035]	MOVE     	R6 R15 ; R6 := R15
	30	[3036]	MOVE     	R7 R16 ; R7 := R16
	31	[3037]	MOVE     	R8 R14 ; R8 := R14
	32	[3030]	FORLOOP  	R11 17 ; R11 += R13; if R11 <= R12 then begin PC := 17; R14 := R11 end
	33	[3039]	JMP      	42 ; PC := 42
	34	[3041]	SELF     	R17 R0 K3 ; R18 := R0; R17 := R0[0x4e485a6f]
	35	[3041]	MOVE     	R19 R1 ; R19 := R1
	36	[3041]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	37	[3041]	MOVE     	R6 R17 ; R6 := R17
	38	[3042]	SELF     	R17 R0 K4 ; R18 := R0; R17 := R0[0x2ce719d4]
	39	[3042]	MOVE     	R19 R1 ; R19 := R1
	40	[3042]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	41	[3042]	MOVE     	R7 R17 ; R7 := R17
	42	[3045]	SELF     	R17 R0 K6 ; R18 := R0; R17 := R0[0x1675b47f]
	43	[3045]	CALL     	R17 2 2 ; R17 := R17(R18)
	44	[3046]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	45	[3046]	MOVE     	R19 R17 ; R19 := R17
	46	[3046]	CALL     	R18 2 2 ; R18 := R18(R19)
	47	[3046]	TEST     	R18 1 ; if R18 then PC := 68
	48	[3046]	JMP      	68 ; PC := 68
	49	[3047]	OP_LOADBOOL	R18 0 0 ; R18 := false
	50	[3048]	GETGLOBAL	R19 K7 ; R19 := 0x25d99d89
	51	[3049]	SELF     	R20 R17 K8 ; R21 := R17; R20 := R17[0xf2deaf69]
	52	[3049]	GETUPVAL 	R22 U0 ; R22 := U0
	53	[3049]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	54	[3049]	TEST     	R20 0 ; if not R20 then PC := 60
	55	[3049]	JMP      	60 ; PC := 60
	56	[3050]	SELF     	R20 R19 K9 ; R21 := R19; R20 := R19[0x4ae54c32]
	57	[3050]	MOVE     	R22 R17 ; R22 := R17
	58	[3050]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	59	[3050]	MOVE     	R18 R20 ; R18 := R20
	60	[3053]	TEST     	R18 0 ; if not R18 then PC := 68
	61	[3053]	JMP      	68 ; PC := 68
	62	[3054]	SELF     	R20 R0 K10 ; R21 := R0; R20 := R0[0xe4598a92]
	63	[3054]	CALL     	R20 2 2 ; R20 := R20(R21)
	64	[3054]	MOVE     	R6 R20 ; R6 := R20
	65	[3055]	SELF     	R20 R0 K11 ; R21 := R0; R20 := R0[0x9a1de9a9]
	66	[3055]	CALL     	R20 2 2 ; R20 := R20(R21)
	67	[3055]	MOVE     	R7 R20 ; R7 := R20
	68	[3059]	TEST     	R4 0 ; if not R4 then PC := 101
	69	[3059]	JMP      	101 ; PC := 101
	70	[3060]	SETTABLE 	R10 K12 R0 ; R10["StoreItem"] := R0
	71	[3061]	GETUPVAL 	R20 U1 ; R20 := U1
	72	[3061]	MOVE     	R21 R10 ; R21 := R10
	73	[3061]	CALL     	R20 2 1 ; R20(R21)
	74	[3063]	GETTABLE 	R20 R10 K13 ; R20 := R10["Coupon"]
	75	[3063]	EQ       	1 R20 K1 ; if R20 == nil then PC := 101
	76	[3063]	JMP      	101 ; PC := 101
	77	[3063]	GETTABLE 	R20 R10 K13 ; R20 := R10["Coupon"]
	78	[3063]	GETTABLE 	R20 R20 K14 ; R20 := R20["mAmount"]
	79	[3063]	EQ       	1 R20 K1 ; if R20 == nil then PC := 101
	80	[3063]	JMP      	101 ; PC := 101
	81	[3063]	GETTABLE 	R20 R10 K13 ; R20 := R10["Coupon"]
	82	[3063]	GETTABLE 	R20 R20 K14 ; R20 := R20["mAmount"]
	83	[3063]	EQ       	1 R20 K5 ; if R20 == 0.000000 then PC := 101
	84	[3063]	JMP      	101 ; PC := 101
	85	[3064]	EQ       	1 R6 K1 ; if R6 == nil then PC := 93
	86	[3064]	JMP      	93 ; PC := 93
	87	[3065]	GETUPVAL 	R20 U2 ; R20 := U2
	88	[3065]	MOVE     	R21 R6 ; R21 := R6
	89	[3065]	GETTABLE 	R22 R10 K13 ; R22 := R10["Coupon"]
	90	[3065]	GETTABLE 	R22 R22 K14 ; R22 := R22["mAmount"]
	91	[3065]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	92	[3065]	MOVE     	R6 R20 ; R6 := R20
	93	[3067]	EQ       	1 R7 K1 ; if R7 == nil then PC := 101
	94	[3067]	JMP      	101 ; PC := 101
	95	[3068]	GETUPVAL 	R20 U2 ; R20 := U2
	96	[3068]	MOVE     	R21 R7 ; R21 := R7
	97	[3068]	GETTABLE 	R22 R10 K13 ; R22 := R10["Coupon"]
	98	[3068]	GETTABLE 	R22 R22 K14 ; R22 := R22["mAmount"]
	99	[3068]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	100	[3068]	MOVE     	R7 R20 ; R7 := R20
	101	[3073]	EQ       	1 R2 K1 ; if R2 == nil then PC := 105
	102	[3073]	JMP      	105 ; PC := 105
	103	[3073]	EQ       	0 R2 K15 ; if R2 ~= true then PC := 182
	104	[3073]	JMP      	182 ; PC := 182
	105	[3073]	GETTABLE 	R20 R10 K13 ; R20 := R10["Coupon"]
	106	[3073]	EQ       	1 R20 K1 ; if R20 == nil then PC := 112
	107	[3073]	JMP      	112 ; PC := 112
	108	[3073]	GETTABLE 	R20 R10 K13 ; R20 := R10["Coupon"]
	109	[3073]	GETTABLE 	R20 R20 K14 ; R20 := R20["mAmount"]
	110	[3073]	EQ       	0 R20 K5 ; if R20 ~= 0.000000 then PC := 182
	111	[3073]	JMP      	182 ; PC := 182
	112	[3074]	GETUPVAL 	R20 U3 ; R20 := U3
	113	[3074]	MOVE     	R21 R0 ; R21 := R0
	114	[3074]	CALL     	R20 2 2 ; R20 := R20(R21)
	115	[3074]	MOVE     	R9 R20 ; R9 := R20
	116	[3075]	EQ       	1 R9 K1 ; if R9 == nil then PC := 182
	117	[3075]	JMP      	182 ; PC := 182
	118	[3076]	SELF     	R20 R0 K16 ; R21 := R0; R20 := R0[0xc3bbc5cb]
	119	[3076]	CALL     	R20 2 2 ; R20 := R20(R21)
	120	[3076]	TEST     	R20 0 ; if not R20 then PC := 180
	121	[3076]	JMP      	180 ; PC := 180
	122	[3076]	GETTABLE 	R20 R9 K17 ; R20 := R9["mTieredPremiumOverrides"]
	123	[3076]	LEN      	R20 R20 ; R20 := # R20
	124	[3076]	LT       	1 K5 R20 ; if 0.000000 < R20 then PC := 130
	125	[3076]	JMP      	130 ; PC := 130
	126	[3076]	GETTABLE 	R20 R9 K18 ; R20 := R9["mTieredRegularOverrides"]
	127	[3076]	LEN      	R20 R20 ; R20 := # R20
	128	[3076]	LT       	0 K5 R20 ; if 0.000000 >= R20 then PC := 180
	129	[3076]	JMP      	180 ; PC := 180
	130	[3077]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 165
	131	[3077]	JMP      	165 ; PC := 165
	132	[3078]	LOADK    	R20 := 0.000000
	133	[3079]	LOADK    	R21 := 1.000000
	134	[3079]	GETTABLE 	R22 R9 K18 ; R22 := R9["mTieredRegularOverrides"]
	135	[3079]	LEN      	R22 R22 ; R22 := # R22
	136	[3079]	LOADK    	R23 := 1.000000
	137	[3079]	FORPREP  	R21 144 ; R21 -= R23; PC := 144
	138	[3080]	GETTABLE 	R25 R9 K18 ; R25 := R9["mTieredRegularOverrides"]
	139	[3080]	GETTABLE 	R25 R25 R24 ; R25 := R25[R24]
	140	[3080]	LT       	0 R20 R25 ; if R20 >= R25 then PC := 144
	141	[3080]	JMP      	144 ; PC := 144
	142	[3081]	GETTABLE 	R25 R9 K18 ; R25 := R9["mTieredRegularOverrides"]
	143	[3081]	GETTABLE 	R20 R25 R24 ; R20 := R25[R24]
	144	[3079]	FORLOOP  	R21 138 ; R21 += R23; if R21 <= R22 then begin PC := 138; R24 := R21 end
	145	[3084]	LT       	0 K5 R20 ; if 0.000000 >= R20 then PC := 148
	146	[3084]	JMP      	148 ; PC := 148
	147	[3085]	MOVE     	R6 R20 ; R6 := R20
	148	[3089]	LOADK    	R25 := 0.000000
	149	[3090]	LOADK    	R26 := 1.000000
	150	[3090]	GETTABLE 	R27 R9 K17 ; R27 := R9["mTieredPremiumOverrides"]
	151	[3090]	LEN      	R27 R27 ; R27 := # R27
	152	[3090]	LOADK    	R28 := 1.000000
	153	[3090]	FORPREP  	R26 160 ; R26 -= R28; PC := 160
	154	[3091]	GETTABLE 	R30 R9 K17 ; R30 := R9["mTieredPremiumOverrides"]
	155	[3091]	GETTABLE 	R30 R30 R29 ; R30 := R30[R29]
	156	[3091]	LT       	0 R25 R30 ; if R25 >= R30 then PC := 160
	157	[3091]	JMP      	160 ; PC := 160
	158	[3092]	GETTABLE 	R30 R9 K17 ; R30 := R9["mTieredPremiumOverrides"]
	159	[3092]	GETTABLE 	R25 R30 R29 ; R25 := R30[R29]
	160	[3090]	FORLOOP  	R26 154 ; R26 += R28; if R26 <= R27 then begin PC := 154; R29 := R26 end
	161	[3095]	LT       	0 K5 R25 ; if 0.000000 >= R25 then PC := 182
	162	[3095]	JMP      	182 ; PC := 182
	163	[3096]	MOVE     	R7 R25 ; R7 := R25
	164	[3097]	JMP      	182 ; PC := 182
	165	[3099]	GETTABLE 	R30 R9 K18 ; R30 := R9["mTieredRegularOverrides"]
	166	[3099]	LEN      	R30 R30 ; R30 := # R30
	167	[3099]	LT       	0 K5 R30 ; if 0.000000 >= R30 then PC := 172
	168	[3099]	JMP      	172 ; PC := 172
	169	[3100]	GETTABLE 	R30 R9 K18 ; R30 := R9["mTieredRegularOverrides"]
	170	[3100]	ADD      	R31 R1 K19 ; R31 := R1 + 1.000000
	171	[3100]	GETTABLE 	R6 R30 R31 ; R6 := R30[R31]
	172	[3103]	GETTABLE 	R30 R9 K17 ; R30 := R9["mTieredPremiumOverrides"]
	173	[3103]	LEN      	R30 R30 ; R30 := # R30
	174	[3103]	LT       	0 K5 R30 ; if 0.000000 >= R30 then PC := 182
	175	[3103]	JMP      	182 ; PC := 182
	176	[3104]	GETTABLE 	R30 R9 K17 ; R30 := R9["mTieredPremiumOverrides"]
	177	[3104]	ADD      	R31 R1 K19 ; R31 := R1 + 1.000000
	178	[3104]	GETTABLE 	R7 R30 R31 ; R7 := R30[R31]
	179	[3106]	JMP      	182 ; PC := 182
	180	[3108]	GETTABLE 	R6 R9 K20 ; R6 := R9["mRegularOverride"]
	181	[3109]	GETTABLE 	R7 R9 K21 ; R7 := R9["mPremiumOverride"]
	182	[3114]	EQ       	0 R9 K1 ; if R9 ~= nil then PC := 213
	183	[3114]	JMP      	213 ; PC := 213
	184	[3114]	SELF     	R30 R0 K22 ; R31 := R0; R30 := R0[0xc055cef8]
	185	[3114]	CALL     	R30 2 2 ; R30 := R30(R31)
	186	[3114]	TEST     	R30 1 ; if R30 then PC := 213
	187	[3114]	JMP      	213 ; PC := 213
	188	[3114]	TEST     	R5 1 ; if R5 then PC := 213
	189	[3114]	JMP      	213 ; PC := 213
	190	[3115]	LOADNIL  	R30 R30 ; R30 := nil
	191	[3116]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	192	[3116]	GETGLOBAL	R32 K23 ; R32 := 0xbe190284
	193	[3116]	CALL     	R31 2 2 ; R31 := R31(R32)
	194	[3116]	TEST     	R31 1 ; if R31 then PC := 200
	195	[3116]	JMP      	200 ; PC := 200
	196	[3117]	GETGLOBAL	R31 K23 ; R31 := 0xbe190284
	197	[3117]	SELF     	R31 R31 K24 ; R32 := R31; R31 := R31[0xa1c390fe]
	198	[3117]	CALL     	R31 2 2 ; R31 := R31(R32)
	199	[3117]	MOVE     	R30 R31 ; R30 := R31
	200	[3119]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	201	[3119]	MOVE     	R32 R30 ; R32 := R30
	202	[3119]	CALL     	R31 2 2 ; R31 := R31(R32)
	203	[3119]	TEST     	R31 1 ; if R31 then PC := 210
	204	[3119]	JMP      	210 ; PC := 210
	205	[3119]	SELF     	R31 R30 K25 ; R32 := R30; R31 := R30[0x92a8cfdb]
	206	[3119]	MOVE     	R33 R0 ; R33 := R0
	207	[3119]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	208	[3119]	EQ       	0 R31 K1 ; if R31 ~= nil then PC := 213
	209	[3119]	JMP      	213 ; PC := 213
	210	[3120]	LOADK    	R31 := 0.000000
	211	[3120]	LOADK    	R32 := 0.000000
	212	[3120]	RETURN   	R31 3 ; return R31, R32 
	213	[3124]	EQ       	1 R3 K1 ; if R3 == nil then PC := 279
	214	[3124]	JMP      	279 ; PC := 279
	215	[3124]	SELF     	R31 R0 K26 ; R32 := R0; R31 := R0[0x9dbbea0a]
	216	[3124]	CALL     	R31 2 2 ; R31 := R31(R32)
	217	[3124]	TEST     	R31 0 ; if not R31 then PC := 279
	218	[3124]	JMP      	279 ; PC := 279
	219	[3125]	SELF     	R31 R0 K27 ; R32 := R0; R31 := R0[0x24065c3f]
	220	[3125]	CALL     	R31 2 2 ; R31 := R31(R32)
	221	[3126]	SELF     	R32 R0 K28 ; R33 := R0; R32 := R0[0xd0372aa8]
	222	[3126]	CALL     	R32 2 2 ; R32 := R32(R33)
	223	[3128]	LOADK    	R33 := 0.000000
	224	[3129]	LOADK    	R34 := 0.000000
	225	[3131]	SELF     	R35 R0 K29 ; R36 := R0; R35 := R0[0x7b060e36]
	226	[3131]	CALL     	R35 2 2 ; R35 := R35(R36)
	227	[3132]	LOADK    	R36 := 1.000000
	228	[3132]	LEN      	R37 R35 ; R37 := # R35
	229	[3132]	LOADK    	R38 := 1.000000
	230	[3132]	FORPREP  	R36 262 ; R36 -= R38; PC := 262
	231	[3133]	GETGLOBAL	R40 K30 ; R40 := 0xce225efa
	232	[3133]	CALL     	R40 1 1 ; R40()
	233	[3134]	GETTABLE 	R40 R35 R39 ; R40 := R35[R39]
	234	[3134]	GETTABLE 	R40 R40 K31 ; R40 := R40["mTypeName"]
	235	[3136]	GETGLOBAL	R41 K0 ; R41 := 0x7b998233
	236	[3136]	MOVE     	R42 R40 ; R42 := R40
	237	[3136]	CALL     	R41 2 2 ; R41 := R41(R42)
	238	[3136]	TEST     	R41 1 ; if R41 then PC := 262
	239	[3136]	JMP      	262 ; PC := 262
	240	[3136]	GETUPVAL 	R41 U4 ; R41 := U4
	241	[3136]	TEST     	R41 0 ; if not R41 then PC := 262
	242	[3136]	JMP      	262 ; PC := 262
	243	[3136]	GETUPVAL 	R41 U5 ; R41 := U5
	244	[3136]	MOVE     	R42 R40 ; R42 := R40
	245	[3136]	MOVE     	R43 R3 ; R43 := R3
	246	[3136]	CALL     	R41 3 2 ; R41 := R41(R42,R43)
	247	[3136]	TEST     	R41 1 ; if R41 then PC := 262
	248	[3136]	JMP      	262 ; PC := 262
	249	[3137]	GETUPVAL 	R41 U6 ; R41 := U6
	250	[3137]	MOVE     	R42 R40 ; R42 := R40
	251	[3137]	GETTABLE 	R43 R35 R39 ; R43 := R35[R39]
	252	[3137]	GETTABLE 	R43 R43 K32 ; R43 := R43["mDurability"]
	253	[3137]	MOVE     	R44 R2 ; R44 := R2
	254	[3137]	MOVE     	R45 R3 ; R45 := R3
	255	[3137]	CALL     	R41 5 3 ; R41,R42 := R41(R42,R43,R44,R45)
	256	[3138]	DIV      	R43 R41 R31 ; R43 := R41 / R31
	257	[3138]	MUL      	R43 R43 R6 ; R43 := R43 * R6
	258	[3138]	ADD      	R33 R33 R43 ; R33 := R33 + R43
	259	[3139]	DIV      	R43 R42 R32 ; R43 := R42 / R32
	260	[3139]	MUL      	R43 R43 R7 ; R43 := R43 * R7
	261	[3139]	ADD      	R34 R34 R43 ; R34 := R34 + R43
	262	[3132]	FORLOOP  	R36 231 ; R36 += R38; if R36 <= R37 then begin PC := 231; R39 := R36 end
	263	[3143]	SUB      	R6 R6 R33 ; R6 := R6 - R33
	264	[3144]	SUB      	R7 R7 R34 ; R7 := R7 - R34
	265	[3146]	LT       	1 R6 K5 ; if R6 < 0.000000 then PC := 271
	266	[3146]	JMP      	271 ; PC := 271
	267	[3146]	SELF     	R43 R0 K33 ; R44 := R0; R43 := R0[0xdaefcda4]
	268	[3146]	CALL     	R43 2 2 ; R43 := R43(R44)
	269	[3146]	LT       	0 K5 R43 ; if 0.000000 >= R43 then PC := 272
	270	[3146]	JMP      	272 ; PC := 272
	271	[3147]	LOADK    	R6 := 0.000000
	272	[3150]	LT       	1 R7 K5 ; if R7 < 0.000000 then PC := 278
	273	[3150]	JMP      	278 ; PC := 278
	274	[3150]	SELF     	R43 R0 K33 ; R44 := R0; R43 := R0[0xdaefcda4]
	275	[3150]	CALL     	R43 2 2 ; R43 := R43(R44)
	276	[3150]	LT       	0 K5 R43 ; if 0.000000 >= R43 then PC := 279
	277	[3150]	JMP      	279 ; PC := 279
	278	[3151]	LOADK    	R7 := 0.000000
	279	[3155]	MOVE     	R43 R6 ; R43 := R6
	280	[3155]	MOVE     	R44 R7 ; R44 := R7
	281	[3155]	MOVE     	R45 R8 ; R45 := R8
	282	[3155]	MOVE     	R46 R9 ; R46 := R9
	283	[3155]	RETURN   	R43 5 ; return R43, R44, R45, R46 
	284	[3156]	RETURN   	R0 1 ; return 

function #179 <?:3158,3160> (10 instructions, 40 bytes at 00000160C61AECB0)
6 params, 13 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3159]	GETUPVAL 	R6 U0 ; R6 := U0
	2	[3159]	MOVE     	R7 R0 ; R7 := R0
	3	[3159]	MOVE     	R8 R1 ; R8 := R1
	4	[3159]	MOVE     	R9 R2 ; R9 := R2
	5	[3159]	MOVE     	R10 R3 ; R10 := R3
	6	[3159]	MOVE     	R11 R4 ; R11 := R4
	7	[3159]	MOVE     	R12 R5 ; R12 := R5
	8	[3159]	TAILCALL 	R6 7 0 ; R6,... := R6(R7,R8,R9,R10,R11,R12)
	9	[3159]	RETURN   	R6 0 ; return R6,... 
	10	[3160]	RETURN   	R0 1 ; return 

function #180 <?:3173,3175> (5 instructions, 20 bytes at 00000160C61AEDC0)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[3174]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3174]	ADD      	R2 R0 K0 ; R2 := R0 + 1.000000
	3	[3174]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	4	[3174]	RETURN   	R1 2 ; return R1 
	5	[3175]	RETURN   	R0 1 ; return 

function #181 <?:3177,3183> (8 instructions, 32 bytes at 00000160C61AEED0)
1 param, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[3178]	LT       	0 R0 K0 ; if R0 >= 3.000000 then PC := 6
	2	[3178]	JMP      	6 ; PC := 6
	3	[3179]	LOADK    	R1 := 0.000000
	4	[3179]	RETURN   	R1 2 ; return R1 
	5	[3179]	JMP      	8 ; PC := 8
	6	[3181]	LOADK    	R1 := 2.000000
	7	[3181]	RETURN   	R1 2 ; return R1 
	8	[3183]	RETURN   	R0 1 ; return 

function #182 <?:3186,3190> (19 instructions, 76 bytes at 00000160C61AEFE0)
1 param, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[3187]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	2	[3187]	GETGLOBAL	R2 K1 ; R2 := PLAINS_NODE_TAG
	3	[3187]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3187]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 17
	5	[3187]	JMP      	17 ; PC := 17
	6	[3188]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	7	[3188]	GETGLOBAL	R2 K2 ; R2 := ORB_VALLIS_NODE_TAG
	8	[3188]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[3188]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 17
	10	[3188]	JMP      	17 ; PC := 17
	11	[3189]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	12	[3189]	GETGLOBAL	R2 K3 ; R2 := ENTRATI_LANDSCAPE_NODE_TAG
	13	[3189]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[3189]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 17
	15	[3189]	JMP      	17 ; PC := 17
	16	[3189]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 17
	17	[3189]	OP_LOADBOOL	R1 1 0 ; R1 := true
	18	[3189]	RETURN   	R1 2 ; return R1 
	19	[3190]	RETURN   	R0 1 ; return 

function #183 <?:3193,3202> (23 instructions, 92 bytes at 00000160C61AF180)
1 param, 9 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[3194]	NEWTABLE 	R1 5 0 ; R1 := {}
	2	[3194]	GETGLOBAL	R2 K0 ; R2 := ZARIMAN_MISSION_A_TAG
	3	[3194]	GETGLOBAL	R3 K1 ; R3 := ZARIMAN_MISSION_B_TAG
	4	[3194]	GETGLOBAL	R4 K2 ; R4 := ZARIMAN_MISSION_C_TAG
	5	[3194]	GETGLOBAL	R5 K3 ; R5 := ZARIMAN_MISSION_D_TAG
	6	[3194]	GETGLOBAL	R6 K4 ; R6 := ZARIMAN_MISSION_E_TAG
	7	[3194]	SETLIST  	R1 5 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 5
	8	[3195]	GETGLOBAL	R2 K5 ; R2 := 0x0469f296
	9	[3195]	MOVE     	R3 R0 ; R3 := R0
	10	[3195]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[3196]	GETGLOBAL	R3 K6 ; R3 := 0xcfc01047
	12	[3196]	MOVE     	R4 R1 ; R4 := R1
	13	[3196]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	14	[3196]	JMP      	19 ; PC := 19
	15	[3197]	EQ       	0 R2 R7 ; if R2 ~= R7 then PC := 19
	16	[3197]	JMP      	19 ; PC := 19
	17	[3198]	OP_LOADBOOL	R8 1 0 ; R8 := true
	18	[3198]	RETURN   	R8 2 ; return R8 
	19	[3196]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 15; R5 := R6 end
	20	[3199]	JMP      	15 ; PC := 15
	21	[3201]	OP_LOADBOOL	R8 0 0 ; R8 := false
	22	[3201]	RETURN   	R8 2 ; return R8 
	23	[3202]	RETURN   	R0 1 ; return 

function #184 <?:3204,3260> (106 instructions, 424 bytes at 00000160C61AF370)
1 param, 16 slots, 4 upvalues, 0 locals, 21 constants, 0 functions
	1	[3205]	TEST     	R0 0 ; if not R0 then PC := 17
	2	[3205]	JMP      	17 ; PC := 17
	3	[3207]	LOADNIL  	R1 R1 ; R1 := nil
	4	[3208]	GETGLOBAL	R2 K0 ; R2 := 0x6c97a788
	5	[3208]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x9c43eb8c]
	6	[3208]	GETGLOBAL	R3 K2 ; R3 := 0x76ea806b
	7	[3208]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x3f3ae64c]
	8	[3208]	LOADK    	R5 := 0.000000
	9	[3208]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	10	[3208]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	11	[3208]	TEST     	R2 0 ; if not R2 then PC := 15
	12	[3208]	JMP      	15 ; PC := 15
	13	[3209]	LOADK    	R1 := 0.000000
	14	[3209]	JMP      	16 ; PC := 16
	15	[3211]	LOADK    	R1 := 2.000000
	16	[3214]	RETURN   	R1 2 ; return R1 
	17	[3217]	GETGLOBAL	R2 K4 ; R2 := _T
	18	[3217]	GETTABLE 	R2 R2 K5 ; R2 := R2["gPendingMission"]
	19	[3217]	TEST     	R2 0 ; if not R2 then PC := 62
	20	[3217]	JMP      	62 ; PC := 62
	21	[3217]	GETGLOBAL	R2 K6 ; R2 := 0xe7f2b02f
	22	[3217]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xedf454bc]
	23	[3217]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[3217]	TEST     	R2 0 ; if not R2 then PC := 62
	25	[3217]	JMP      	62 ; PC := 62
	26	[3218]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	27	[3218]	GETGLOBAL	R3 K4 ; R3 := _T
	28	[3218]	GETTABLE 	R3 R3 K5 ; R3 := R3["gPendingMission"]
	29	[3218]	GETTABLE 	R3 R3 K9 ; R3 := R3["name"]
	30	[3218]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[3219]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	32	[3219]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xa5c556b9]
	33	[3219]	MOVE     	R4 R2 ; R4 := R2
	34	[3219]	GETGLOBAL	R5 K12 ; R5 := TAG_SEPERATOR
	35	[3219]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	36	[3220]	TEST     	R3 0 ; if not R3 then PC := 45
	37	[3220]	JMP      	45 ; PC := 45
	38	[3221]	GETGLOBAL	R4 K10 ; R4 := 0x7f5022cf
	39	[3221]	GETTABLE 	R4 R4 K13 ; R4 := R4[0x1a94c9cc]
	40	[3221]	MOVE     	R5 R2 ; R5 := R2
	41	[3221]	LOADK    	R6 := 1.000000
	42	[3221]	SUB      	R7 R3 K14 ; R7 := R3 - 1.000000
	43	[3221]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	44	[3221]	MOVE     	R2 R4 ; R2 := R4
	45	[3223]	GETUPVAL 	R4 U0 ; R4 := U0
	46	[3223]	MOVE     	R5 R2 ; R5 := R2
	47	[3223]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[3223]	TEST     	R4 0 ; if not R4 then PC := 55
	49	[3223]	JMP      	55 ; PC := 55
	50	[3225]	GETUPVAL 	R4 U1 ; R4 := U1
	51	[3225]	MOVE     	R5 R2 ; R5 := R2
	52	[3225]	GETGLOBAL	R6 K15 ; R6 := PLAINS_ELO_IN_LISET
	53	[3225]	TAILCALL 	R4 3 0 ; R4,... := R4(R5,R6)
	54	[3225]	RETURN   	R4 0 ; return R4,... 
	55	[3228]	GETUPVAL 	R4 U2 ; R4 := U2
	56	[3228]	MOVE     	R5 R2 ; R5 := R2
	57	[3228]	CALL     	R4 2 2 ; R4 := R4(R5)
	58	[3228]	TEST     	R4 0 ; if not R4 then PC := 62
	59	[3228]	JMP      	62 ; PC := 62
	60	[3229]	GETGLOBAL	R4 K15 ; R4 := PLAINS_ELO_IN_LISET
	61	[3229]	RETURN   	R4 2 ; return R4 
	62	[3234]	NEWTABLE 	R4 4 0 ; R4 := {}
	63	[3234]	LOADK    	R5 := 0.000000
	64	[3234]	LOADK    	R6 := 1.000000
	65	[3234]	LOADK    	R7 := 3.000000
	66	[3234]	LOADK    	R8 := 5.000000
	67	[3234]	SETLIST  	R4 4 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
	68	[3235]	LOADK    	R5 := 0.000000
	69	[3236]	LOADK    	R6 := 0.000000
	70	[3238]	GETUPVAL 	R7 U3 ; R7 := U3
	71	[3238]	CALL     	R7 1 2 ; R7 := R7()
	72	[3239]	GETGLOBAL	R8 K17 ; R8 := 0x7b998233
	73	[3239]	MOVE     	R9 R7 ; R9 := R7
	74	[3239]	CALL     	R8 2 2 ; R8 := R8(R9)
	75	[3239]	TEST     	R8 1 ; if R8 then PC := 101
	76	[3239]	JMP      	101 ; PC := 101
	77	[3241]	SELF     	R8 R7 K18 ; R9 := R7; R8 := R7[0xde321e6f]
	78	[3241]	CALL     	R8 2 2 ; R8 := R8(R9)
	79	[3242]	GETGLOBAL	R9 K17 ; R9 := 0x7b998233
	80	[3242]	MOVE     	R10 R8 ; R10 := R8
	81	[3242]	CALL     	R9 2 2 ; R9 := R9(R10)
	82	[3242]	TEST     	R9 1 ; if R9 then PC := 101
	83	[3242]	JMP      	101 ; PC := 101
	84	[3244]	LOADK    	R9 := 1.000000
	85	[3244]	LEN      	R10 R4 ; R10 := # R4
	86	[3244]	LOADK    	R11 := 1.000000
	87	[3244]	FORPREP  	R9 100 ; R9 -= R11; PC := 100
	88	[3245]	SELF     	R13 R8 K19 ; R14 := R8; R13 := R8[0xe85a2361]
	89	[3245]	GETTABLE 	R15 R4 R12 ; R15 := R4[R12]
	90	[3245]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	91	[3246]	GETGLOBAL	R14 K17 ; R14 := 0x7b998233
	92	[3246]	MOVE     	R15 R13 ; R15 := R13
	93	[3246]	CALL     	R14 2 2 ; R14 := R14(R15)
	94	[3246]	TEST     	R14 1 ; if R14 then PC := 100
	95	[3246]	JMP      	100 ; PC := 100
	96	[3247]	ADD      	R5 R5 K14 ; R5 := R5 + 1.000000
	97	[3248]	SELF     	R14 R13 K20 ; R15 := R13; R14 := R13[0xca9ea368]
	98	[3248]	CALL     	R14 2 2 ; R14 := R14(R15)
	99	[3248]	ADD      	R6 R6 R14 ; R6 := R6 + R14
	100	[3244]	FORLOOP  	R9 88 ; R9 += R11; if R9 <= R10 then begin PC := 88; R12 := R9 end
	101	[3254]	LT       	0 R5 K14 ; if R5 >= 1.000000 then PC := 104
	102	[3254]	JMP      	104 ; PC := 104
	103	[3255]	LOADK    	R5 := 1.000000
	104	[3258]	DIV      	R14 R6 R5 ; R14 := R6 / R5
	105	[3259]	RETURN   	R14 2 ; return R14 
	106	[3260]	RETURN   	R0 1 ; return 

function #185 <?:3262,3264> (5 instructions, 20 bytes at 00000160C61AF920)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3263]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3263]	MOVE     	R2 R0 ; R2 := R0
	3	[3263]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3263]	RETURN   	R1 2 ; return R1 
	5	[3264]	RETURN   	R0 1 ; return 

function #186 <?:3266,3307> (156 instructions, 624 bytes at 00000160C61AFA10)
1 param, 13 slots, 3 upvalues, 0 locals, 19 constants, 0 functions
	1	[3270]	OP_LOADBOOL	R4 1 0 ; R4 := true
	2	[3271]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	3	[3271]	MOVE     	R6 R0 ; R6 := R0
	4	[3271]	CALL     	R5 2 2 ; R5 := R5(R6)
	5	[3271]	TEST     	R5 1 ; if R5 then PC := 151
	6	[3271]	JMP      	151 ; PC := 151
	7	[3272]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	8	[3272]	GETGLOBAL	R7 K2 ; R7 := gDecorationType
	9	[3272]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	10	[3272]	TEST     	R5 0 ; if not R5 then PC := 30
	11	[3272]	JMP      	30 ; PC := 30
	12	[3272]	SELF     	R5 R0 K3 ; R6 := R0; R5 := R0[0xaf8359c4]
	13	[3272]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[3272]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x56c01834]
	15	[3272]	CALL     	R5 2 2 ; R5 := R5(R6)
	16	[3272]	TEST     	R5 0 ; if not R5 then PC := 22
	17	[3272]	JMP      	22 ; PC := 22
	18	[3272]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0xe5a0a15d]
	19	[3272]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[3272]	TEST     	R5 1 ; if R5 then PC := 27
	21	[3272]	JMP      	27 ; PC := 27
	22	[3272]	SELF     	R5 R0 K6 ; R6 := R0; R5 := R0[0x22da1852]
	23	[3272]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[3272]	GETUPVAL 	R6 U0 ; R6 := U0
	25	[3272]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 30
	26	[3272]	JMP      	30 ; PC := 30
	27	[3273]	MOVE     	R1 R0 ; R1 := R0
	28	[3274]	OP_LOADBOOL	R4 0 0 ; R4 := false
	29	[3274]	JMP      	151 ; PC := 151
	30	[3275]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	31	[3275]	GETGLOBAL	R7 K7 ; R7 := gDynamicCoverType
	32	[3275]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	33	[3275]	TEST     	R5 1 ; if R5 then PC := 45
	34	[3275]	JMP      	45 ; PC := 45
	35	[3275]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	36	[3275]	GETGLOBAL	R7 K8 ; R7 := gEmplacementType
	37	[3275]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	38	[3275]	TEST     	R5 1 ; if R5 then PC := 45
	39	[3275]	JMP      	45 ; PC := 45
	40	[3275]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	41	[3275]	GETGLOBAL	R7 K9 ; R7 := gDevourerType
	42	[3275]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	43	[3275]	TEST     	R5 0 ; if not R5 then PC := 47
	44	[3275]	JMP      	47 ; PC := 47
	45	[3276]	MOVE     	R1 R0 ; R1 := R0
	46	[3276]	JMP      	151 ; PC := 151
	47	[3277]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	48	[3277]	GETUPVAL 	R7 U1 ; R7 := U1
	49	[3277]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	50	[3277]	TEST     	R5 0 ; if not R5 then PC := 55
	51	[3277]	JMP      	55 ; PC := 55
	52	[3278]	LOADNIL  	R5 R5 ; R5 := nil
	53	[3278]	RETURN   	R5 2 ; return R5 
	54	[3278]	JMP      	151 ; PC := 151
	55	[3279]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	56	[3279]	GETGLOBAL	R7 K10 ; R7 := gBaseAvatarType
	57	[3279]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	58	[3279]	TEST     	R5 0 ; if not R5 then PC := 62
	59	[3279]	JMP      	62 ; PC := 62
	60	[3280]	MOVE     	R2 R0 ; R2 := R0
	61	[3280]	JMP      	151 ; PC := 151
	62	[3282]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xf2deaf69]
	63	[3282]	GETGLOBAL	R7 K11 ; R7 := gHitProxyType
	64	[3282]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	65	[3282]	TEST     	R5 0 ; if not R5 then PC := 69
	66	[3282]	JMP      	69 ; PC := 69
	67	[3282]	SELF     	R5 R0 K12 ; R6 := R0; R5 := R0[0xf37943ff]
	68	[3282]	CALL     	R5 2 2 ; R5 := R5(R6)
	69	[3283]	SELF     	R6 R0 K13 ; R7 := R0; R6 := R0[0xc3962b21]
	70	[3283]	CALL     	R6 2 2 ; R6 := R6(R7)
	71	[3284]	TEST     	R5 0 ; if not R5 then PC := 80
	72	[3284]	JMP      	80 ; PC := 80
	73	[3284]	SELF     	R7 R6 K1 ; R8 := R6; R7 := R6[0xf2deaf69]
	74	[3284]	GETGLOBAL	R9 K10 ; R9 := gBaseAvatarType
	75	[3284]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	76	[3284]	TEST     	R7 0 ; if not R7 then PC := 80
	77	[3284]	JMP      	80 ; PC := 80
	78	[3285]	MOVE     	R2 R6 ; R2 := R6
	79	[3285]	JMP      	151 ; PC := 151
	80	[3286]	TEST     	R5 0 ; if not R5 then PC := 107
	81	[3286]	JMP      	107 ; PC := 107
	82	[3286]	SELF     	R7 R6 K1 ; R8 := R6; R7 := R6[0xf2deaf69]
	83	[3286]	GETGLOBAL	R9 K2 ; R9 := gDecorationType
	84	[3286]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	85	[3286]	TEST     	R7 0 ; if not R7 then PC := 93
	86	[3286]	JMP      	93 ; PC := 93
	87	[3286]	SELF     	R7 R6 K3 ; R8 := R6; R7 := R6[0xaf8359c4]
	88	[3286]	CALL     	R7 2 2 ; R7 := R7(R8)
	89	[3286]	SELF     	R7 R7 K4 ; R8 := R7; R7 := R7[0x56c01834]
	90	[3286]	CALL     	R7 2 2 ; R7 := R7(R8)
	91	[3286]	TEST     	R7 1 ; if R7 then PC := 103
	92	[3286]	JMP      	103 ; PC := 103
	93	[3286]	SELF     	R7 R6 K1 ; R8 := R6; R7 := R6[0xf2deaf69]
	94	[3286]	GETGLOBAL	R9 K7 ; R9 := gDynamicCoverType
	95	[3286]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	96	[3286]	TEST     	R7 1 ; if R7 then PC := 103
	97	[3286]	JMP      	103 ; PC := 103
	98	[3286]	SELF     	R7 R6 K1 ; R8 := R6; R7 := R6[0xf2deaf69]
	99	[3286]	GETGLOBAL	R9 K8 ; R9 := gEmplacementType
	100	[3286]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	101	[3286]	TEST     	R7 0 ; if not R7 then PC := 107
	102	[3286]	JMP      	107 ; PC := 107
	103	[3287]	MOVE     	R1 R6 ; R1 := R6
	104	[3288]	MOVE     	R3 R0 ; R3 := R0
	105	[3289]	OP_LOADBOOL	R4 0 0 ; R4 := false
	106	[3289]	JMP      	151 ; PC := 151
	107	[3290]	TEST     	R5 0 ; if not R5 then PC := 117
	108	[3290]	JMP      	117 ; PC := 117
	109	[3290]	SELF     	R7 R6 K1 ; R8 := R6; R7 := R6[0xf2deaf69]
	110	[3290]	GETGLOBAL	R9 K9 ; R9 := gDevourerType
	111	[3290]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	112	[3290]	TEST     	R7 0 ; if not R7 then PC := 117
	113	[3290]	JMP      	117 ; PC := 117
	114	[3291]	MOVE     	R1 R6 ; R1 := R6
	115	[3292]	MOVE     	R3 R0 ; R3 := R0
	116	[3292]	JMP      	151 ; PC := 151
	117	[3293]	SELF     	R7 R0 K1 ; R8 := R0; R7 := R0[0xf2deaf69]
	118	[3293]	GETGLOBAL	R9 K14 ; R9 := gPickUpType
	119	[3293]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	120	[3293]	TEST     	R7 0 ; if not R7 then PC := 140
	121	[3293]	JMP      	140 ; PC := 140
	122	[3293]	SELF     	R7 R0 K15 ; R8 := R0; R7 := R0[0x1cf0f63d]
	123	[3293]	CALL     	R7 2 2 ; R7 := R7(R8)
	124	[3293]	TEST     	R7 0 ; if not R7 then PC := 140
	125	[3293]	JMP      	140 ; PC := 140
	126	[3294]	SELF     	R7 R0 K16 ; R8 := R0; R7 := R0[0x4528012d]
	127	[3294]	CALL     	R7 2 2 ; R7 := R7(R8)
	128	[3295]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	129	[3295]	MOVE     	R9 R7 ; R9 := R7
	130	[3295]	CALL     	R8 2 2 ; R8 := R8(R9)
	131	[3295]	TEST     	R8 1 ; if R8 then PC := 151
	132	[3295]	JMP      	151 ; PC := 151
	133	[3295]	SELF     	R8 R7 K1 ; R9 := R7; R8 := R7[0xf2deaf69]
	134	[3295]	GETGLOBAL	R10 K17 ; R10 := gFusionTreasureType
	135	[3295]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	136	[3295]	TEST     	R8 0 ; if not R8 then PC := 151
	137	[3295]	JMP      	151 ; PC := 151
	138	[3296]	MOVE     	R1 R0 ; R1 := R0
	139	[3297]	JMP      	151 ; PC := 151
	140	[3299]	SELF     	R8 R0 K18 ; R9 := R0; R8 := R0[0x2b54251b]
	141	[3299]	CALL     	R8 2 2 ; R8 := R8(R9)
	142	[3300]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	143	[3300]	MOVE     	R10 R8 ; R10 := R8
	144	[3300]	CALL     	R9 2 2 ; R9 := R9(R10)
	145	[3300]	TEST     	R9 1 ; if R9 then PC := 151
	146	[3300]	JMP      	151 ; PC := 151
	147	[3301]	GETUPVAL 	R9 U2 ; R9 := U2
	148	[3301]	MOVE     	R10 R8 ; R10 := R8
	149	[3301]	TAILCALL 	R9 2 0 ; R9,... := R9(R10)
	150	[3301]	RETURN   	R9 0 ; return R9,... 
	151	[3306]	MOVE     	R9 R1 ; R9 := R1
	152	[3306]	MOVE     	R10 R2 ; R10 := R2
	153	[3306]	MOVE     	R11 R3 ; R11 := R3
	154	[3306]	MOVE     	R12 R4 ; R12 := R4
	155	[3306]	RETURN   	R9 5 ; return R9, R10, R11, R12 
	156	[3307]	RETURN   	R0 1 ; return 

function #187 <?:3309,3311> (5 instructions, 20 bytes at 00000160C61B00E0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3310]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3310]	MOVE     	R2 R0 ; R2 := R0
	3	[3310]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3310]	RETURN   	R1 0 ; return R1,... 
	5	[3311]	RETURN   	R0 1 ; return 

function #188 <?:3313,3341> (71 instructions, 284 bytes at 00000160C61B01D0)
3 params, 15 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[3314]	EQ       	1 R1 K0 ; if R1 == nil then PC := 71
	2	[3314]	JMP      	71 ; PC := 71
	3	[3315]	LOADK    	R3 := 1.000000
	4	[3315]	LEN      	R4 R1 ; R4 := # R1
	5	[3315]	LOADK    	R5 := 1.000000
	6	[3315]	FORPREP  	R3 70 ; R3 -= R5; PC := 70
	7	[3316]	GETGLOBAL	R7 K1 ; R7 := 0xce225efa
	8	[3316]	LOADK    	R8 := 0.000000
	9	[3316]	CALL     	R7 2 1 ; R7(R8)
	10	[3318]	GETTABLE 	R7 R1 R6 ; R7 := R1[R6]
	11	[3319]	GETTABLE 	R8 R7 K2 ; R8 := R7["mItemType"]
	12	[3319]	SELF     	R8 R8 K3 ; R9 := R8; R8 := R8[0xed4e0128]
	13	[3319]	CALL     	R8 2 2 ; R8 := R8(R9)
	14	[3321]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	15	[3321]	MOVE     	R10 R2 ; R10 := R2
	16	[3321]	CALL     	R9 2 2 ; R9 := R9(R10)
	17	[3321]	TEST     	R9 1 ; if R9 then PC := 24
	18	[3321]	JMP      	24 ; PC := 24
	19	[3321]	MOVE     	R9 R2 ; R9 := R2
	20	[3321]	MOVE     	R10 R7 ; R10 := R7
	21	[3321]	CALL     	R9 2 2 ; R9 := R9(R10)
	22	[3321]	TEST     	R9 0 ; if not R9 then PC := 70
	23	[3321]	JMP      	70 ; PC := 70
	24	[3322]	GETTABLE 	R9 R0 R8 ; R9 := R0[R8]
	25	[3324]	EQ       	1 R9 K0 ; if R9 == nil then PC := 59
	26	[3324]	JMP      	59 ; PC := 59
	27	[3325]	GETTABLE 	R10 R9 K5 ; R10 := R9["Count"]
	28	[3325]	EQ       	1 R10 K0 ; if R10 == nil then PC := 33
	29	[3325]	JMP      	33 ; PC := 33
	30	[3325]	GETTABLE 	R10 R9 K5 ; R10 := R9["Count"]
	31	[3325]	EQ       	0 R10 K6 ; if R10 ~= 0.000000 then PC := 45
	32	[3325]	JMP      	45 ; PC := 45
	33	[3326]	GETUPVAL 	R10 U0 ; R10 := U0
	34	[3326]	GETTABLE 	R10 R10 K7 ; R10 := R10[0x06d055f9]
	35	[3326]	GETTABLE 	R11 R7 K8 ; R11 := R7["mItemCount"]
	36	[3326]	EQ       	1 R11 K0 ; if R11 == nil then PC := 39
	37	[3326]	JMP      	39 ; PC := 39
	38	[3326]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 39
	39	[3326]	OP_LOADBOOL	R11 1 0 ; R11 := true
	40	[3326]	LOADK    	R12 := 1.000000
	41	[3326]	GETTABLE 	R13 R7 K8 ; R13 := R7["mItemCount"]
	42	[3326]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	43	[3326]	SETTABLE 	R9 K5 R10 ; R9["Count"] := R10
	44	[3326]	JMP      	70 ; PC := 70
	45	[3328]	GETTABLE 	R10 R9 K5 ; R10 := R9["Count"]
	46	[3328]	GETUPVAL 	R11 U0 ; R11 := U0
	47	[3328]	GETTABLE 	R11 R11 K7 ; R11 := R11[0x06d055f9]
	48	[3328]	GETTABLE 	R12 R7 K8 ; R12 := R7["mItemCount"]
	49	[3328]	EQ       	1 R12 K0 ; if R12 == nil then PC := 52
	50	[3328]	JMP      	52 ; PC := 52
	51	[3328]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 52
	52	[3328]	OP_LOADBOOL	R12 1 0 ; R12 := true
	53	[3328]	LOADK    	R13 := 1.000000
	54	[3328]	GETTABLE 	R14 R7 K8 ; R14 := R7["mItemCount"]
	55	[3328]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	56	[3328]	ADD      	R10 R10 R11 ; R10 := R10 + R11
	57	[3328]	SETTABLE 	R9 K5 R10 ; R9["Count"] := R10
	58	[3329]	JMP      	70 ; PC := 70
	59	[3331]	NEWTABLE 	R10 0 3 ; R10 := {}
	60	[3331]	GETTABLE 	R11 R7 K2 ; R11 := R7["mItemType"]
	61	[3331]	SETTABLE 	R10 K9 R11 ; R10["Type"] := R11
	62	[3331]	GETTABLE 	R11 R7 K8 ; R11 := R7["mItemCount"]
	63	[3331]	SETTABLE 	R10 K5 R11 ; R10["Count"] := R11
	64	[3331]	SETTABLE 	R10 K10 R7 ; R10["Item"] := R7
	65	[3333]	GETTABLE 	R11 R10 K5 ; R11 := R10["Count"]
	66	[3333]	EQ       	0 R11 K0 ; if R11 ~= nil then PC := 69
	67	[3333]	JMP      	69 ; PC := 69
	68	[3334]	SETTABLE 	R10 K5 K11 ; R10["Count"] := 1.000000
	69	[3336]	SETTABLE 	R0 R8 R10 ; R0[R8] := R10
	70	[3315]	FORLOOP  	R3 7 ; R3 += R5; if R3 <= R4 then begin PC := 7; R6 := R3 end
	71	[3341]	RETURN   	R0 1 ; return 

function #189 <?:3343,3345> (6 instructions, 24 bytes at 00000160C61B0600)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3344]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[3344]	MOVE     	R4 R0 ; R4 := R0
	3	[3344]	MOVE     	R5 R1 ; R5 := R1
	4	[3344]	MOVE     	R6 R2 ; R6 := R2
	5	[3344]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	6	[3345]	RETURN   	R0 1 ; return 

function #190 <?:3347,3395> (162 instructions, 648 bytes at 00000160C61B06F0)
0 params, 8 slots, 1 upvalue, 0 locals, 33 constants, 1 function
	1	[3348]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3350]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	3	[3351]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[3351]	MOVE     	R3 R1 ; R3 := R1
	5	[3351]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[3351]	TEST     	R2 1 ; if R2 then PC := 161
	7	[3351]	JMP      	161 ; PC := 161
	8	[3352]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x25a6e75e]
	9	[3352]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3353]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	11	[3353]	MOVE     	R4 R2 ; R4 := R2
	12	[3353]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[3353]	TEST     	R3 1 ; if R3 then PC := 161
	14	[3353]	JMP      	161 ; PC := 161
	15	[3354]	GETUPVAL 	R3 U0 ; R3 := U0
	16	[3354]	MOVE     	R4 R0 ; R4 := R0
	17	[3354]	SELF     	R5 R2 K3 ; R6 := R2; R5 := R2[0x57d88957]
	18	[3354]	CALL     	R5 2 0 ; R5,... := R5(R6)
	19	[3354]	CALL     	R3 0 1 ; R3(R4,...)
	20	[3355]	GETUPVAL 	R3 U0 ; R3 := U0
	21	[3355]	MOVE     	R4 R0 ; R4 := R0
	22	[3355]	SELF     	R5 R2 K4 ; R6 := R2; R5 := R2[0x215bf396]
	23	[3355]	CALL     	R5 2 0 ; R5,... := R5(R6)
	24	[3355]	CALL     	R3 0 1 ; R3(R4,...)
	25	[3356]	GETUPVAL 	R3 U0 ; R3 := U0
	26	[3356]	MOVE     	R4 R0 ; R4 := R0
	27	[3356]	SELF     	R5 R2 K5 ; R6 := R2; R5 := R2[0x21a3da0c]
	28	[3356]	CALL     	R5 2 0 ; R5,... := R5(R6)
	29	[3356]	CALL     	R3 0 1 ; R3(R4,...)
	30	[3357]	GETUPVAL 	R3 U0 ; R3 := U0
	31	[3357]	MOVE     	R4 R0 ; R4 := R0
	32	[3357]	SELF     	R5 R2 K6 ; R6 := R2; R5 := R2[0x0bf14f02]
	33	[3357]	CALL     	R5 2 0 ; R5,... := R5(R6)
	34	[3357]	CALL     	R3 0 1 ; R3(R4,...)
	35	[3358]	GETUPVAL 	R3 U0 ; R3 := U0
	36	[3358]	MOVE     	R4 R0 ; R4 := R0
	37	[3358]	SELF     	R5 R2 K7 ; R6 := R2; R5 := R2[0x4bb8609a]
	38	[3358]	CALL     	R5 2 0 ; R5,... := R5(R6)
	39	[3358]	CALL     	R3 0 1 ; R3(R4,...)
	40	[3359]	GETUPVAL 	R3 U0 ; R3 := U0
	41	[3359]	MOVE     	R4 R0 ; R4 := R0
	42	[3359]	SELF     	R5 R2 K8 ; R6 := R2; R5 := R2[0x6f7b67d7]
	43	[3359]	CALL     	R5 2 0 ; R5,... := R5(R6)
	44	[3359]	CALL     	R3 0 1 ; R3(R4,...)
	45	[3360]	GETUPVAL 	R3 U0 ; R3 := U0
	46	[3360]	MOVE     	R4 R0 ; R4 := R0
	47	[3360]	SELF     	R5 R2 K9 ; R6 := R2; R5 := R2[0x3218c3b0]
	48	[3360]	CALL     	R5 2 0 ; R5,... := R5(R6)
	49	[3360]	CALL     	R3 0 1 ; R3(R4,...)
	50	[3361]	GETUPVAL 	R3 U0 ; R3 := U0
	51	[3361]	MOVE     	R4 R0 ; R4 := R0
	52	[3361]	SELF     	R5 R2 K10 ; R6 := R2; R5 := R2[0x2a207127]
	53	[3361]	CALL     	R5 2 0 ; R5,... := R5(R6)
	54	[3361]	CALL     	R3 0 1 ; R3(R4,...)
	55	[3362]	GETUPVAL 	R3 U0 ; R3 := U0
	56	[3362]	MOVE     	R4 R0 ; R4 := R0
	57	[3362]	SELF     	R5 R2 K11 ; R6 := R2; R5 := R2[0xa2c6d8b7]
	58	[3362]	CALL     	R5 2 0 ; R5,... := R5(R6)
	59	[3362]	CALL     	R3 0 1 ; R3(R4,...)
	60	[3363]	GETUPVAL 	R3 U0 ; R3 := U0
	61	[3363]	MOVE     	R4 R0 ; R4 := R0
	62	[3363]	SELF     	R5 R2 K12 ; R6 := R2; R5 := R2[0xe9131614]
	63	[3363]	CALL     	R5 2 0 ; R5,... := R5(R6)
	64	[3363]	CALL     	R3 0 1 ; R3(R4,...)
	65	[3364]	GETGLOBAL	R3 K13 ; R3 := 0x7ed0a956
	66	[3364]	LOADK    	R4 K14 ; R4 := "/Lotus/Upgrades/Mods/Immortal/ImmortalBaseMod"
	67	[3364]	CALL     	R3 2 2 ; R3 := R3(R4)
	68	[3365]	GETUPVAL 	R4 U0 ; R4 := U0
	69	[3365]	MOVE     	R5 R0 ; R5 := R0
	70	[3365]	SELF     	R6 R2 K15 ; R7 := R2; R6 := R2[0x98b1bb53]
	71	[3365]	CALL     	R6 2 2 ; R6 := R6(R7)
	72	[3373]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	73	[3373]	MOVE     	R0 R3 ; R0 := R3
	74	[3365]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	75	[3374]	GETUPVAL 	R4 U0 ; R4 := U0
	76	[3374]	MOVE     	R5 R0 ; R5 := R0
	77	[3374]	SELF     	R6 R2 K16 ; R7 := R2; R6 := R2[0xaaeb4d91]
	78	[3374]	CALL     	R6 2 0 ; R6,... := R6(R7)
	79	[3374]	CALL     	R4 0 1 ; R4(R5,...)
	80	[3375]	GETUPVAL 	R4 U0 ; R4 := U0
	81	[3375]	MOVE     	R5 R0 ; R5 := R0
	82	[3375]	SELF     	R6 R2 K17 ; R7 := R2; R6 := R2[0x51a64e2e]
	83	[3375]	CALL     	R6 2 0 ; R6,... := R6(R7)
	84	[3375]	CALL     	R4 0 1 ; R4(R5,...)
	85	[3376]	GETUPVAL 	R4 U0 ; R4 := U0
	86	[3376]	MOVE     	R5 R0 ; R5 := R0
	87	[3376]	SELF     	R6 R2 K18 ; R7 := R2; R6 := R2[0x6cfd4151]
	88	[3376]	CALL     	R6 2 0 ; R6,... := R6(R7)
	89	[3376]	CALL     	R4 0 1 ; R4(R5,...)
	90	[3377]	GETUPVAL 	R4 U0 ; R4 := U0
	91	[3377]	MOVE     	R5 R0 ; R5 := R0
	92	[3377]	SELF     	R6 R2 K19 ; R7 := R2; R6 := R2[0xf4045b7e]
	93	[3377]	CALL     	R6 2 0 ; R6,... := R6(R7)
	94	[3377]	CALL     	R4 0 1 ; R4(R5,...)
	95	[3378]	GETUPVAL 	R4 U0 ; R4 := U0
	96	[3378]	MOVE     	R5 R0 ; R5 := R0
	97	[3378]	SELF     	R6 R2 K20 ; R7 := R2; R6 := R2[0xd8dfa041]
	98	[3378]	CALL     	R6 2 0 ; R6,... := R6(R7)
	99	[3378]	CALL     	R4 0 1 ; R4(R5,...)
	100	[3379]	GETUPVAL 	R4 U0 ; R4 := U0
	101	[3379]	MOVE     	R5 R0 ; R5 := R0
	102	[3379]	SELF     	R6 R2 K21 ; R7 := R2; R6 := R2[0x8f27d10c]
	103	[3379]	CALL     	R6 2 0 ; R6,... := R6(R7)
	104	[3379]	CALL     	R4 0 1 ; R4(R5,...)
	105	[3380]	GETUPVAL 	R4 U0 ; R4 := U0
	106	[3380]	MOVE     	R5 R0 ; R5 := R0
	107	[3380]	SELF     	R6 R2 K22 ; R7 := R2; R6 := R2[0xe9768ed0]
	108	[3380]	CALL     	R6 2 0 ; R6,... := R6(R7)
	109	[3380]	CALL     	R4 0 1 ; R4(R5,...)
	110	[3381]	GETUPVAL 	R4 U0 ; R4 := U0
	111	[3381]	MOVE     	R5 R0 ; R5 := R0
	112	[3381]	SELF     	R6 R2 K23 ; R7 := R2; R6 := R2[0xcd6e999d]
	113	[3381]	CALL     	R6 2 0 ; R6,... := R6(R7)
	114	[3381]	CALL     	R4 0 1 ; R4(R5,...)
	115	[3382]	GETUPVAL 	R4 U0 ; R4 := U0
	116	[3382]	MOVE     	R5 R0 ; R5 := R0
	117	[3382]	SELF     	R6 R2 K24 ; R7 := R2; R6 := R2[0x7c12ac22]
	118	[3382]	CALL     	R6 2 0 ; R6,... := R6(R7)
	119	[3382]	CALL     	R4 0 1 ; R4(R5,...)
	120	[3383]	GETUPVAL 	R4 U0 ; R4 := U0
	121	[3383]	MOVE     	R5 R0 ; R5 := R0
	122	[3383]	SELF     	R6 R2 K25 ; R7 := R2; R6 := R2[0x1b68b9f9]
	123	[3383]	CALL     	R6 2 0 ; R6,... := R6(R7)
	124	[3383]	CALL     	R4 0 1 ; R4(R5,...)
	125	[3384]	GETUPVAL 	R4 U0 ; R4 := U0
	126	[3384]	MOVE     	R5 R0 ; R5 := R0
	127	[3384]	SELF     	R6 R2 K26 ; R7 := R2; R6 := R2[0xbfba693e]
	128	[3384]	CALL     	R6 2 0 ; R6,... := R6(R7)
	129	[3384]	CALL     	R4 0 1 ; R4(R5,...)
	130	[3385]	GETUPVAL 	R4 U0 ; R4 := U0
	131	[3385]	MOVE     	R5 R0 ; R5 := R0
	132	[3385]	SELF     	R6 R2 K27 ; R7 := R2; R6 := R2[0xdc039065]
	133	[3385]	CALL     	R6 2 0 ; R6,... := R6(R7)
	134	[3385]	CALL     	R4 0 1 ; R4(R5,...)
	135	[3386]	GETUPVAL 	R4 U0 ; R4 := U0
	136	[3386]	MOVE     	R5 R0 ; R5 := R0
	137	[3386]	SELF     	R6 R2 K28 ; R7 := R2; R6 := R2[0x2fdbb24a]
	138	[3386]	CALL     	R6 2 0 ; R6,... := R6(R7)
	139	[3386]	CALL     	R4 0 1 ; R4(R5,...)
	140	[3387]	GETUPVAL 	R4 U0 ; R4 := U0
	141	[3387]	MOVE     	R5 R0 ; R5 := R0
	142	[3387]	SELF     	R6 R2 K29 ; R7 := R2; R6 := R2[0x738deb95]
	143	[3387]	CALL     	R6 2 0 ; R6,... := R6(R7)
	144	[3387]	CALL     	R4 0 1 ; R4(R5,...)
	145	[3388]	GETUPVAL 	R4 U0 ; R4 := U0
	146	[3388]	MOVE     	R5 R0 ; R5 := R0
	147	[3388]	SELF     	R6 R2 K30 ; R7 := R2; R6 := R2[0xfab085e3]
	148	[3388]	CALL     	R6 2 0 ; R6,... := R6(R7)
	149	[3388]	CALL     	R4 0 1 ; R4(R5,...)
	150	[3389]	GETUPVAL 	R4 U0 ; R4 := U0
	151	[3389]	MOVE     	R5 R0 ; R5 := R0
	152	[3389]	SELF     	R6 R2 K31 ; R7 := R2; R6 := R2[0x91a3eddf]
	153	[3389]	CALL     	R6 2 0 ; R6,... := R6(R7)
	154	[3389]	CALL     	R4 0 1 ; R4(R5,...)
	155	[3390]	GETUPVAL 	R4 U0 ; R4 := U0
	156	[3390]	MOVE     	R5 R0 ; R5 := R0
	157	[3390]	SELF     	R6 R2 K32 ; R7 := R2; R6 := R2[0x99718a3d]
	158	[3390]	CALL     	R6 2 0 ; R6,... := R6(R7)
	159	[3390]	CALL     	R4 0 1 ; R4(R5,...)
	160	[3390]	CLOSE    	R3 ; SAVE R3,...
	161	[3394]	RETURN   	R0 2 ; return R0 
	162	[3395]	RETURN   	R0 1 ; return 

function #191 <?:3398,3516> (104 instructions, 416 bytes at 00000160C61B11D0)
4 params, 35 slots, 4 upvalues, 0 locals, 15 constants, 2 functions
	1	[3400]	NEWTABLE 	R5 0 0 ; R5 := {}
	2	[3412]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	3	[3412]	MOVE     	R0 R2 ; R0 := R2
	4	[3412]	MOVE     	R0 R5 ; R0 := R5
	5	[3412]	MOVE     	R0 R4 ; R0 := R4
	6	[3468]	CLOSURE  	R7 1 ; R7 := closure(Function #2)
	7	[3468]	MOVE     	R0 R0 ; R0 := R0
	8	[3468]	MOVE     	R0 R3 ; R0 := R3
	9	[3468]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[3468]	GETUPVAL 	R0 U1 ; R0 := U1
	11	[3468]	GETUPVAL 	R0 U2 ; R0 := U2
	12	[3468]	GETUPVAL 	R0 U3 ; R0 := U3
	13	[3470]	GETTABLE 	R8 R1 K0 ; R8 := R1["credits"]
	14	[3470]	LT       	0 K1 R8 ; if 0.000000 >= R8 then PC := 32
	15	[3470]	JMP      	32 ; PC := 32
	16	[3471]	LOADK    	R8 K2 ; R8 := "<CREDITS>"
	17	[3472]	TEST     	R3 1 ; if R3 then PC := 24
	18	[3472]	JMP      	24 ; PC := 24
	19	[3473]	SELF     	R9 R0 K3 ; R10 := R0; R9 := R0[0x42b04007]
	20	[3473]	LOADK    	R11 K2 ; R11 := "<CREDITS>"
	21	[3473]	OP_LOADBOOL	R12 1 0 ; R12 := true
	22	[3473]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	23	[3473]	MOVE     	R8 R9 ; R8 := R9
	24	[3475]	MOVE     	R9 R6 ; R9 := R6
	25	[3475]	MOVE     	R10 R8 ; R10 := R8
	26	[3475]	GETUPVAL 	R11 U0 ; R11 := U0
	27	[3475]	GETTABLE 	R11 R11 K4 ; R11 := R11[0x1142c7a8]
	28	[3475]	GETTABLE 	R12 R1 K0 ; R12 := R1["credits"]
	29	[3475]	CALL     	R11 2 2 ; R11 := R11(R12)
	30	[3475]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	31	[3475]	CALL     	R9 2 1 ; R9(R10)
	32	[3478]	GETTABLE 	R9 R1 K5 ; R9 := R1["items"]
	33	[3480]	LOADK    	R10 := 1.000000
	34	[3480]	LEN      	R11 R9 ; R11 := # R9
	35	[3480]	LOADK    	R12 := 1.000000
	36	[3480]	FORPREP  	R10 51 ; R10 -= R12; PC := 51
	37	[3481]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	38	[3483]	GETGLOBAL	R15 K6 ; R15 := 0x7b998233
	39	[3483]	MOVE     	R16 R14 ; R16 := R14
	40	[3483]	CALL     	R15 2 2 ; R15 := R15(R16)
	41	[3483]	TEST     	R15 1 ; if R15 then PC := 51
	42	[3483]	JMP      	51 ; PC := 51
	43	[3484]	MOVE     	R15 R7 ; R15 := R7
	44	[3484]	MOVE     	R16 R14 ; R16 := R14
	45	[3484]	LOADNIL  	R17 R17 ; R17 := nil
	46	[3484]	LOADK    	R18 := 1.000000
	47	[3484]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	48	[3485]	MOVE     	R16 R6 ; R16 := R6
	49	[3485]	MOVE     	R17 R15 ; R17 := R15
	50	[3485]	CALL     	R16 2 1 ; R16(R17)
	51	[3480]	FORLOOP  	R10 37 ; R10 += R12; if R10 <= R11 then begin PC := 37; R13 := R10 end
	52	[3489]	GETTABLE 	R16 R1 K7 ; R16 := R1["countedStoreItems"]
	53	[3490]	LOADK    	R17 := 1.000000
	54	[3490]	LEN      	R18 R16 ; R18 := # R16
	55	[3490]	LOADK    	R19 := 1.000000
	56	[3490]	FORPREP  	R17 72 ; R17 -= R19; PC := 72
	57	[3491]	GETTABLE 	R21 R16 R20 ; R21 := R16[R20]
	58	[3492]	GETTABLE 	R22 R21 K8 ; R22 := R21["mStoreItem"]
	59	[3493]	GETGLOBAL	R23 K6 ; R23 := 0x7b998233
	60	[3493]	MOVE     	R24 R22 ; R24 := R22
	61	[3493]	CALL     	R23 2 2 ; R23 := R23(R24)
	62	[3493]	TEST     	R23 1 ; if R23 then PC := 72
	63	[3493]	JMP      	72 ; PC := 72
	64	[3494]	MOVE     	R23 R7 ; R23 := R7
	65	[3494]	MOVE     	R24 R22 ; R24 := R22
	66	[3494]	LOADNIL  	R25 R25 ; R25 := nil
	67	[3494]	GETTABLE 	R26 R21 K9 ; R26 := R21["mItemCount"]
	68	[3494]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	69	[3495]	MOVE     	R24 R6 ; R24 := R6
	70	[3495]	MOVE     	R25 R23 ; R25 := R23
	71	[3495]	CALL     	R24 2 1 ; R24(R25)
	72	[3490]	FORLOOP  	R17 57 ; R17 += R19; if R17 <= R18 then begin PC := 57; R20 := R17 end
	73	[3499]	GETTABLE 	R24 R1 K10 ; R24 := R1["countedItems"]
	74	[3501]	LOADK    	R25 := 1.000000
	75	[3501]	LEN      	R26 R24 ; R26 := # R24
	76	[3501]	LOADK    	R27 := 1.000000
	77	[3501]	FORPREP  	R25 93 ; R25 -= R27; PC := 93
	78	[3502]	GETTABLE 	R29 R1 K10 ; R29 := R1["countedItems"]
	79	[3502]	GETTABLE 	R29 R29 R28 ; R29 := R29[R28]
	80	[3504]	GETGLOBAL	R30 K6 ; R30 := 0x7b998233
	81	[3504]	GETTABLE 	R31 R29 K11 ; R31 := R29["mItemType"]
	82	[3504]	CALL     	R30 2 2 ; R30 := R30(R31)
	83	[3504]	TEST     	R30 1 ; if R30 then PC := 93
	84	[3504]	JMP      	93 ; PC := 93
	85	[3505]	MOVE     	R30 R7 ; R30 := R7
	86	[3505]	LOADNIL  	R31 R31 ; R31 := nil
	87	[3505]	MOVE     	R32 R29 ; R32 := R29
	88	[3505]	GETTABLE 	R33 R29 K9 ; R33 := R29["mItemCount"]
	89	[3505]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	90	[3507]	MOVE     	R31 R6 ; R31 := R6
	91	[3507]	MOVE     	R32 R30 ; R32 := R30
	92	[3507]	CALL     	R31 2 1 ; R31(R32)
	93	[3501]	FORLOOP  	R25 78 ; R25 += R27; if R25 <= R26 then begin PC := 78; R28 := R25 end
	94	[3511]	EQ       	0 R4 K12 ; if R4 ~= nil then PC := 97
	95	[3511]	JMP      	97 ; PC := 97
	96	[3512]	LOADK    	R4 K13 ; R4 := ""
	97	[3515]	GETUPVAL 	R31 U0 ; R31 := U0
	98	[3515]	GETTABLE 	R31 R31 K14 ; R31 := R31[0x06d055f9]
	99	[3515]	MOVE     	R32 R2 ; R32 := R2
	100	[3515]	MOVE     	R33 R5 ; R33 := R5
	101	[3515]	MOVE     	R34 R4 ; R34 := R4
	102	[3515]	TAILCALL 	R31 4 0 ; R31,... := R31(R32,R33,R34)
	103	[3515]	RETURN   	R31 0 ; return R31,... 
	104	[3516]	RETURN   	R0 1 ; return 

function #192 <?:3518,3545> (59 instructions, 236 bytes at 00000160C61B24E0)
1 param, 5 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[3522]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xf2deaf69]
	2	[3522]	GETGLOBAL	R3 K1 ; R3 := gStoreItemType
	3	[3522]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	4	[3522]	TEST     	R1 0 ; if not R1 then PC := 12
	5	[3522]	JMP      	12 ; PC := 12
	6	[3523]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x056dcf06]
	7	[3523]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[3523]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x599cf9c1]
	9	[3523]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3523]	NOT      	R2 R2 ; R2 := not R2
	11	[3523]	RETURN   	R1 3 ; return R1, R2 
	12	[3526]	GETGLOBAL	R1 K4 ; R1 := 0x6728fd22
	13	[3526]	MOVE     	R2 R0 ; R2 := R0
	14	[3526]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[3526]	TEST     	R1 0 ; if not R1 then PC := 20
	16	[3526]	JMP      	20 ; PC := 20
	17	[3527]	GETGLOBAL	R1 K5 ; R1 := 0x60cce7b4
	18	[3527]	OP_LOADBOOL	R2 0 0 ; R2 := false
	19	[3527]	CALL     	R1 2 1 ; R1(R2)
	20	[3531]	SELF     	R1 R0 K6 ; R2 := R0; R1 := R0[0x78ceba36]
	21	[3531]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[3531]	LT       	0 K7 R1 ; if 1.000000 >= R1 then PC := 34
	23	[3531]	JMP      	34 ; PC := 34
	24	[3532]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x056dcf06]
	25	[3532]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[3532]	TEST     	R1 0 ; if not R1 then PC := 34
	27	[3532]	JMP      	34 ; PC := 34
	28	[3533]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x056dcf06]
	29	[3533]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[3533]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x599cf9c1]
	31	[3533]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[3533]	NOT      	R2 R2 ; R2 := not R2
	33	[3533]	RETURN   	R1 3 ; return R1, R2 
	34	[3538]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x5cc4dde3]
	35	[3538]	CALL     	R1 2 2 ; R1 := R1(R2)
	36	[3539]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	37	[3539]	MOVE     	R3 R1 ; R3 := R1
	38	[3539]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[3539]	TEST     	R2 1 ; if R2 then PC := 53
	40	[3539]	JMP      	53 ; PC := 53
	41	[3539]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	42	[3539]	SELF     	R3 R1 K2 ; R4 := R1; R3 := R1[0x056dcf06]
	43	[3539]	CALL     	R3 2 0 ; R3,... := R3(R4)
	44	[3539]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	45	[3539]	TEST     	R2 1 ; if R2 then PC := 53
	46	[3539]	JMP      	53 ; PC := 53
	47	[3540]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x056dcf06]
	48	[3540]	CALL     	R2 2 2 ; R2 := R2(R3)
	49	[3540]	SELF     	R3 R1 K3 ; R4 := R1; R3 := R1[0x599cf9c1]
	50	[3540]	CALL     	R3 2 2 ; R3 := R3(R4)
	51	[3540]	NOT      	R3 R3 ; R3 := not R3
	52	[3540]	RETURN   	R2 3 ; return R2, R3 
	53	[3544]	SELF     	R2 R0 K2 ; R3 := R0; R2 := R0[0x056dcf06]
	54	[3544]	CALL     	R2 2 2 ; R2 := R2(R3)
	55	[3544]	SELF     	R3 R0 K3 ; R4 := R0; R3 := R0[0x599cf9c1]
	56	[3544]	CALL     	R3 2 2 ; R3 := R3(R4)
	57	[3544]	NOT      	R3 R3 ; R3 := not R3
	58	[3544]	RETURN   	R2 3 ; return R2, R3 
	59	[3545]	RETURN   	R0 1 ; return 

function #193 <?:3547,3549> (5 instructions, 20 bytes at 00000160C61B2820)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3548]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3548]	MOVE     	R2 R0 ; R2 := R0
	3	[3548]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3548]	RETURN   	R1 0 ; return R1,... 
	5	[3549]	RETURN   	R0 1 ; return 

function #194 <?:3553,3592> (92 instructions, 368 bytes at 00000160C61B2910)
2 params, 14 slots, 1 upvalue, 0 locals, 19 constants, 0 functions
	1	[3558]	OP_LOADBOOL	R6 0 0 ; R6 := false
	2	[3559]	OP_LOADBOOL	R7 0 0 ; R7 := false
	3	[3560]	OP_LOADBOOL	R8 0 0 ; R8 := false
	4	[3562]	GETTABLE 	R9 R0 K0 ; R9 := R0["items"]
	5	[3562]	LEN      	R9 R9 ; R9 := # R9
	6	[3562]	LT       	0 K1 R9 ; if 0.000000 >= R9 then PC := 11
	7	[3562]	JMP      	11 ; PC := 11
	8	[3563]	GETTABLE 	R9 R0 K0 ; R9 := R0["items"]
	9	[3563]	GETTABLE 	R3 R9 K2 ; R3 := R9[1.000000]
	10	[3563]	JMP      	26 ; PC := 26
	11	[3564]	GETTABLE 	R9 R0 K3 ; R9 := R0["countedItems"]
	12	[3564]	LEN      	R9 R9 ; R9 := # R9
	13	[3564]	LT       	0 K1 R9 ; if 0.000000 >= R9 then PC := 19
	14	[3564]	JMP      	19 ; PC := 19
	15	[3565]	GETTABLE 	R9 R0 K3 ; R9 := R0["countedItems"]
	16	[3565]	GETTABLE 	R9 R9 K2 ; R9 := R9[1.000000]
	17	[3565]	GETTABLE 	R4 R9 K4 ; R4 := R9["mItemType"]
	18	[3565]	JMP      	26 ; PC := 26
	19	[3566]	GETTABLE 	R9 R0 K5 ; R9 := R0["countedStoreItems"]
	20	[3566]	LEN      	R9 R9 ; R9 := # R9
	21	[3566]	LT       	0 K1 R9 ; if 0.000000 >= R9 then PC := 26
	22	[3566]	JMP      	26 ; PC := 26
	23	[3567]	GETTABLE 	R9 R0 K5 ; R9 := R0["countedStoreItems"]
	24	[3567]	GETTABLE 	R9 R9 K2 ; R9 := R9[1.000000]
	25	[3567]	GETTABLE 	R4 R9 K6 ; R4 := R9["mStoreItem"]
	26	[3570]	EQ       	1 R3 K7 ; if R3 == nil then PC := 55
	27	[3570]	JMP      	55 ; PC := 55
	28	[3571]	SELF     	R9 R3 K8 ; R10 := R3; R9 := R3[0xf278f8a1]
	29	[3571]	CALL     	R9 2 2 ; R9 := R9(R10)
	30	[3571]	MOVE     	R5 R9 ; R5 := R9
	31	[3572]	SELF     	R9 R3 K9 ; R10 := R3; R9 := R3[0x056dcf06]
	32	[3572]	CALL     	R9 2 2 ; R9 := R9(R10)
	33	[3572]	MOVE     	R2 R9 ; R2 := R9
	34	[3573]	SELF     	R9 R3 K10 ; R10 := R3; R9 := R3[0x599cf9c1]
	35	[3573]	CALL     	R9 2 2 ; R9 := R9(R10)
	36	[3573]	NOT      	R7 R9 ; R7 := not R9
	37	[3574]	GETGLOBAL	R9 K11 ; R9 := 0x7b998233
	38	[3574]	MOVE     	R10 R5 ; R10 := R5
	39	[3574]	CALL     	R9 2 2 ; R9 := R9(R10)
	40	[3574]	TEST     	R9 1 ; if R9 then PC := 49
	41	[3574]	JMP      	49 ; PC := 49
	42	[3574]	SELF     	R9 R3 K8 ; R10 := R3; R9 := R3[0xf278f8a1]
	43	[3574]	CALL     	R9 2 2 ; R9 := R9(R10)
	44	[3574]	SELF     	R9 R9 K12 ; R10 := R9; R9 := R9[0xf2deaf69]
	45	[3574]	GETGLOBAL	R11 K13 ; R11 := gRecipeItemType
	46	[3574]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	47	[3574]	MOVE     	R6 R9 ; R6 := R9
	48	[3574]	JMP      	51 ; PC := 51
	49	[3574]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 50
	50	[3574]	OP_LOADBOOL	R6 1 0 ; R6 := true
	51	[3575]	SELF     	R9 R3 K14 ; R10 := R3; R9 := R3[0xeb7b349c]
	52	[3575]	CALL     	R9 2 2 ; R9 := R9(R10)
	53	[3575]	MOVE     	R8 R9 ; R8 := R9
	54	[3575]	JMP      	86 ; PC := 86
	55	[3576]	EQ       	1 R4 K7 ; if R4 == nil then PC := 81
	56	[3576]	JMP      	81 ; PC := 81
	57	[3577]	MOVE     	R5 R4 ; R5 := R4
	58	[3578]	GETGLOBAL	R9 K15 ; R9 := 0xb009bbc6
	59	[3578]	MOVE     	R10 R4 ; R10 := R4
	60	[3578]	CALL     	R9 2 2 ; R9 := R9(R10)
	61	[3578]	MOVE     	R4 R9 ; R4 := R9
	62	[3580]	SELF     	R9 R4 K12 ; R10 := R4; R9 := R4[0xf2deaf69]
	63	[3580]	GETGLOBAL	R11 K13 ; R11 := gRecipeItemType
	64	[3580]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	65	[3580]	MOVE     	R6 R9 ; R6 := R9
	66	[3581]	TEST     	R6 0 ; if not R6 then PC := 74
	67	[3581]	JMP      	74 ; PC := 74
	68	[3582]	GETUPVAL 	R9 U0 ; R9 := U0
	69	[3582]	MOVE     	R10 R4 ; R10 := R4
	70	[3582]	CALL     	R9 2 3 ; R9,R10 := R9(R10)
	71	[3582]	MOVE     	R7 R10 ; R7 := R10
	72	[3582]	MOVE     	R2 R9 ; R2 := R9
	73	[3582]	JMP      	86 ; PC := 86
	74	[3584]	SELF     	R9 R4 K9 ; R10 := R4; R9 := R4[0x056dcf06]
	75	[3584]	CALL     	R9 2 2 ; R9 := R9(R10)
	76	[3584]	MOVE     	R2 R9 ; R2 := R9
	77	[3585]	SELF     	R9 R4 K10 ; R10 := R4; R9 := R4[0x599cf9c1]
	78	[3585]	CALL     	R9 2 2 ; R9 := R9(R10)
	79	[3585]	NOT      	R7 R9 ; R7 := not R9
	80	[3586]	JMP      	86 ; PC := 86
	81	[3587]	GETTABLE 	R9 R0 K16 ; R9 := R0["credits"]
	82	[3587]	LT       	0 K1 R9 ; if 0.000000 >= R9 then PC := 86
	83	[3587]	JMP      	86 ; PC := 86
	84	[3588]	GETGLOBAL	R9 K17 ; R9 := 0x0032441c
	85	[3588]	GETTABLE 	R2 R9 K18 ; R2 := R9["UITexture_CreditsIcon"]
	86	[3591]	MOVE     	R9 R2 ; R9 := R2
	87	[3591]	MOVE     	R10 R6 ; R10 := R6
	88	[3591]	MOVE     	R11 R5 ; R11 := R5
	89	[3591]	MOVE     	R12 R7 ; R12 := R7
	90	[3591]	MOVE     	R13 R8 ; R13 := R8
	91	[3591]	RETURN   	R9 6 ; return R9, R10, R11, R12, R13 
	92	[3592]	RETURN   	R0 1 ; return 

function #195 <?:3594,3629> (148 instructions, 592 bytes at 00000160C61B2E20)
1 param, 28 slots, 1 upvalue, 0 locals, 37 constants, 0 functions
	1	[3595]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[3597]	GETTABLE 	R2 R0 K0 ; R2 := R0["credits"]
	3	[3597]	LT       	0 K1 R2 ; if 0.000000 >= R2 then PC := 25
	4	[3597]	JMP      	25 ; PC := 25
	5	[3598]	GETGLOBAL	R2 K2 ; R2 := 0x33bdd652
	6	[3598]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x23d5322f]
	7	[3598]	MOVE     	R3 R1 ; R3 := R1
	8	[3598]	NEWTABLE 	R4 0 3 ; R4 := {}
	9	[3598]	GETGLOBAL	R5 K5 ; R5 := 0x0032441c
	10	[3598]	GETTABLE 	R5 R5 K6 ; R5 := R5["UITexture_CreditsIcon"]
	11	[3598]	SETTABLE 	R4 K4 R5 ; R4["Icon"] := R5
	12	[3598]	SETTABLE 	R4 K7 K8 ; R4["Themed"] := true
	13	[3598]	GETUPVAL 	R5 U0 ; R5 := U0
	14	[3598]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x1142c7a8]
	15	[3598]	GETTABLE 	R6 R0 K0 ; R6 := R0["credits"]
	16	[3598]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[3598]	LOADK    	R6 K11 ; R6 := " "
	18	[3598]	GETGLOBAL	R7 K12 ; R7 := 0x603636ad
	19	[3598]	LOADK    	R8 K13 ; R8 := "/Lotus/Language/Menu/Store_BuyWithCredits"
	20	[3598]	NEWTABLE 	R9 0 0 ; R9 := {}
	21	[3598]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	22	[3598]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	23	[3598]	SETTABLE 	R4 K9 R5 ; R4["NameOverride"] := R5
	24	[3598]	CALL     	R2 3 1 ; R2(R3,R4)
	25	[3601]	LOADK    	R2 := 1.000000
	26	[3601]	GETTABLE 	R3 R0 K14 ; R3 := R0["items"]
	27	[3601]	LEN      	R3 R3 ; R3 := # R3
	28	[3601]	LOADK    	R4 := 1.000000
	29	[3601]	FORPREP  	R2 66 ; R2 -= R4; PC := 66
	30	[3602]	NEWTABLE 	R6 0 1 ; R6 := {}
	31	[3602]	GETTABLE 	R7 R0 K14 ; R7 := R0["items"]
	32	[3602]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	33	[3602]	SETTABLE 	R6 K15 R7 ; R6[0xa9882367] := R7
	34	[3603]	GETTABLE 	R7 R6 K15 ; R7 := R6["StoreItem"]
	35	[3603]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0xf278f8a1]
	36	[3603]	CALL     	R7 2 2 ; R7 := R7(R8)
	37	[3604]	GETGLOBAL	R8 K17 ; R8 := 0x7b998233
	38	[3604]	MOVE     	R9 R7 ; R9 := R7
	39	[3604]	CALL     	R8 2 2 ; R8 := R8(R9)
	40	[3604]	TEST     	R8 1 ; if R8 then PC := 61
	41	[3604]	JMP      	61 ; PC := 61
	42	[3604]	SELF     	R8 R7 K18 ; R9 := R7; R8 := R7[0xf2deaf69]
	43	[3604]	GETGLOBAL	R10 K19 ; R10 := gKeyChainItemType
	44	[3604]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	45	[3604]	TEST     	R8 0 ; if not R8 then PC := 61
	46	[3604]	JMP      	61 ; PC := 61
	47	[3605]	GETGLOBAL	R8 K12 ; R8 := 0x603636ad
	48	[3605]	GETGLOBAL	R9 K20 ; R9 := 0x64fb1586
	49	[3605]	GETTABLE 	R10 R6 K15 ; R10 := R6["StoreItem"]
	50	[3605]	SELF     	R10 R10 K21 ; R11 := R10; R10 := R10[0xd3a9d01f]
	51	[3605]	CALL     	R10 2 0 ; R10,... := R10(R11)
	52	[3605]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	53	[3605]	NEWTABLE 	R10 0 0 ; R10 := {}
	54	[3605]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	55	[3606]	GETGLOBAL	R9 K12 ; R9 := 0x603636ad
	56	[3606]	LOADK    	R10 K22 ; R10 := "/Lotus/Language/Menu/MissionReward_Quest"
	57	[3606]	NEWTABLE 	R11 0 1 ; R11 := {}
	58	[3606]	SETTABLE 	R11 K23 R8 ; R11["QUEST"] := R8
	59	[3606]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	60	[3606]	SETTABLE 	R6 K9 R9 ; R6["NameOverride"] := R9
	61	[3608]	GETGLOBAL	R9 K2 ; R9 := 0x33bdd652
	62	[3608]	GETTABLE 	R9 R9 K3 ; R9 := R9[0x23d5322f]
	63	[3608]	MOVE     	R10 R1 ; R10 := R1
	64	[3608]	MOVE     	R11 R6 ; R11 := R6
	65	[3608]	CALL     	R9 3 1 ; R9(R10,R11)
	66	[3601]	FORLOOP  	R2 30 ; R2 += R4; if R2 <= R3 then begin PC := 30; R5 := R2 end
	67	[3611]	LOADK    	R9 := 1.000000
	68	[3611]	GETTABLE 	R10 R0 K24 ; R10 := R0["countedStoreItems"]
	69	[3611]	LEN      	R10 R10 ; R10 := # R10
	70	[3611]	LOADK    	R11 := 1.000000
	71	[3611]	FORPREP  	R9 108 ; R9 -= R11; PC := 108
	72	[3612]	GETTABLE 	R13 R0 K24 ; R13 := R0["countedStoreItems"]
	73	[3612]	GETTABLE 	R13 R13 R12 ; R13 := R13[R12]
	74	[3613]	GETTABLE 	R14 R13 K25 ; R14 := R13["mStoreItem"]
	75	[3614]	GETGLOBAL	R15 K17 ; R15 := 0x7b998233
	76	[3614]	MOVE     	R16 R14 ; R16 := R14
	77	[3614]	CALL     	R15 2 2 ; R15 := R15(R16)
	78	[3614]	TEST     	R15 1 ; if R15 then PC := 108
	79	[3614]	JMP      	108 ; PC := 108
	80	[3615]	NEWTABLE 	R15 0 2 ; R15 := {}
	81	[3615]	SETTABLE 	R15 K15 R14 ; R15[0xa9882367] := R14
	82	[3615]	SETTABLE 	R15 K26 K8 ; R15["SkipTitleCase"] := true
	83	[3616]	GETGLOBAL	R16 K12 ; R16 := 0x603636ad
	84	[3616]	LOADK    	R17 K27 ; R17 := "/Lotus/Language/Items/LargeBatchItem"
	85	[3616]	NEWTABLE 	R18 0 2 ; R18 := {}
	86	[3616]	GETGLOBAL	R19 K29 ; R19 := 0x5f0788c4
	87	[3616]	GETGLOBAL	R20 K12 ; R20 := 0x603636ad
	88	[3616]	GETGLOBAL	R21 K20 ; R21 := 0x64fb1586
	89	[3616]	SELF     	R22 R14 K21 ; R23 := R14; R22 := R14[0xd3a9d01f]
	90	[3616]	CALL     	R22 2 0 ; R22,... := R22(R23)
	91	[3616]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	92	[3616]	NEWTABLE 	R22 0 0 ; R22 := {}
	93	[3616]	CALL     	R20 3 0 ; R20,... := R20(R21,R22)
	94	[3616]	CALL     	R19 0 2 ; R19 := R19(R20,...)
	95	[3616]	SETTABLE 	R18 K28 R19 ; R18["ITEM"] := R19
	96	[3616]	GETUPVAL 	R19 U0 ; R19 := U0
	97	[3616]	GETTABLE 	R19 R19 K10 ; R19 := R19[0x1142c7a8]
	98	[3616]	GETTABLE 	R20 R13 K31 ; R20 := R13["mItemCount"]
	99	[3616]	CALL     	R19 2 2 ; R19 := R19(R20)
	100	[3616]	SETTABLE 	R18 K30 R19 ; R18["NUM"] := R19
	101	[3616]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	102	[3616]	SETTABLE 	R15 K9 R16 ; R15["NameOverride"] := R16
	103	[3617]	GETGLOBAL	R16 K2 ; R16 := 0x33bdd652
	104	[3617]	GETTABLE 	R16 R16 K3 ; R16 := R16[0x23d5322f]
	105	[3617]	MOVE     	R17 R1 ; R17 := R1
	106	[3617]	MOVE     	R18 R15 ; R18 := R15
	107	[3617]	CALL     	R16 3 1 ; R16(R17,R18)
	108	[3611]	FORLOOP  	R9 72 ; R9 += R11; if R9 <= R10 then begin PC := 72; R12 := R9 end
	109	[3621]	LOADK    	R16 := 1.000000
	110	[3621]	GETTABLE 	R17 R0 K32 ; R17 := R0["countedItems"]
	111	[3621]	LEN      	R17 R17 ; R17 := # R17
	112	[3621]	LOADK    	R18 := 1.000000
	113	[3621]	FORPREP  	R16 146 ; R16 -= R18; PC := 146
	114	[3622]	GETGLOBAL	R20 K33 ; R20 := 0xb009bbc6
	115	[3622]	GETTABLE 	R21 R0 K32 ; R21 := R0["countedItems"]
	116	[3622]	GETTABLE 	R21 R21 R19 ; R21 := R21[R19]
	117	[3622]	GETTABLE 	R21 R21 K34 ; R21 := R21["mItemType"]
	118	[3622]	CALL     	R20 2 2 ; R20 := R20(R21)
	119	[3623]	NEWTABLE 	R21 0 2 ; R21 := {}
	120	[3623]	SETTABLE 	R21 K35 R20 ; R21["ItemType"] := R20
	121	[3623]	GETTABLE 	R22 R0 K32 ; R22 := R0["countedItems"]
	122	[3623]	GETTABLE 	R22 R22 R19 ; R22 := R22[R19]
	123	[3623]	GETTABLE 	R22 R22 K31 ; R22 := R22["mItemCount"]
	124	[3623]	SETTABLE 	R21 K36 R22 ; R21["Count"] := R22
	125	[3624]	GETUPVAL 	R22 U0 ; R22 := U0
	126	[3624]	GETTABLE 	R22 R22 K10 ; R22 := R22[0x1142c7a8]
	127	[3624]	GETTABLE 	R23 R0 K32 ; R23 := R0["countedItems"]
	128	[3624]	GETTABLE 	R23 R23 R19 ; R23 := R23[R19]
	129	[3624]	GETTABLE 	R23 R23 K31 ; R23 := R23["mItemCount"]
	130	[3624]	CALL     	R22 2 2 ; R22 := R22(R23)
	131	[3624]	LOADK    	R23 K11 ; R23 := " "
	132	[3624]	GETGLOBAL	R24 K12 ; R24 := 0x603636ad
	133	[3624]	GETGLOBAL	R25 K20 ; R25 := 0x64fb1586
	134	[3624]	SELF     	R26 R20 K21 ; R27 := R20; R26 := R20[0xd3a9d01f]
	135	[3624]	CALL     	R26 2 0 ; R26,... := R26(R27)
	136	[3624]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	137	[3624]	NEWTABLE 	R26 0 0 ; R26 := {}
	138	[3624]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	139	[3624]	CONCAT   	R22 R22 R24 ; R22 := R22 .. R23 .. R24
	140	[3624]	SETTABLE 	R21 K9 R22 ; R21["NameOverride"] := R22
	141	[3625]	GETGLOBAL	R22 K2 ; R22 := 0x33bdd652
	142	[3625]	GETTABLE 	R22 R22 K3 ; R22 := R22[0x23d5322f]
	143	[3625]	MOVE     	R23 R1 ; R23 := R1
	144	[3625]	MOVE     	R24 R21 ; R24 := R21
	145	[3625]	CALL     	R22 3 1 ; R22(R23,R24)
	146	[3621]	FORLOOP  	R16 114 ; R16 += R18; if R16 <= R17 then begin PC := 114; R19 := R16 end
	147	[3628]	RETURN   	R1 2 ; return R1 
	148	[3629]	RETURN   	R0 1 ; return 

function #196 <?:3631,3634> (5 instructions, 20 bytes at 00000160C61B37A0)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[3632]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3632]	ADD      	R2 R0 K0 ; R2 := R0 + 1.000000
	3	[3632]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	4	[3633]	RETURN   	R1 2 ; return R1 
	5	[3634]	RETURN   	R0 1 ; return 

function #197 <?:3636,3639> (5 instructions, 20 bytes at 00000160C61B38B0)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[3637]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3637]	ADD      	R2 R0 K0 ; R2 := R0 + 1.000000
	3	[3637]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	4	[3638]	RETURN   	R1 2 ; return R1 
	5	[3639]	RETURN   	R0 1 ; return 

function #198 <?:3641,3660> (22 instructions, 88 bytes at 00000160C61B39C0)
0 params, 5 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[3642]	GETGLOBAL	R0 K0 ; R0 := 0x6c97a788
	2	[3642]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x6e0e9f85]
	3	[3642]	CALL     	R0 1 2 ; R0 := R0()
	4	[3643]	SETTABLE 	R0 K2 K3 ; R0["missionType"] := 12.000000
	5	[3644]	SETTABLE 	R0 K4 K5 ; R0["faction"] := 1.000000
	6	[3650]	LOADK    	R1 K6 ; R1 := "/Lotus/Levels/Proc/Corpus/CorpusGasCityHarvester"
	7	[3651]	LOADK    	R2 K7 ; R2 := "/Lotus/Types/Game/EnemySpecs/CorpusSquadA"
	8	[3653]	GETGLOBAL	R3 K9 ; R3 := 0x7ed0a956
	9	[3653]	MOVE     	R4 R1 ; R4 := R1
	10	[3653]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[3653]	SETTABLE 	R0 K8 R3 ; R0["levelOverride"] := R3
	12	[3654]	GETGLOBAL	R3 K11 ; R3 := 0xb009bbc6
	13	[3654]	MOVE     	R4 R2 ; R4 := R2
	14	[3654]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[3654]	SETTABLE 	R0 K10 R3 ; R0["enemySpec"] := R3
	16	[3655]	SETTABLE 	R0 K12 K13 ; R0["soloMode"] := true
	17	[3657]	GETGLOBAL	R3 K15 ; R3 := 0x0469f296
	18	[3657]	LOADK    	R4 K16 ; R4 := "/Lotus/Language/Locations/Jupiter"
	19	[3657]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[3657]	SETTABLE 	R0 K14 R3 ; R0["location"] := R3
	21	[3659]	RETURN   	R0 2 ; return R0 
	22	[3660]	RETURN   	R0 1 ; return 

function #199 <?:3662,3680> (38 instructions, 152 bytes at 00000160C61B3E50)
1 param, 8 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[3663]	GETGLOBAL	R1 K0 ; R1 := 0x42dcc9f5
	2	[3663]	MOVE     	R2 R0 ; R2 := R0
	3	[3663]	LOADK    	R3 := 0.000000
	4	[3663]	LOADK    	R4 := 100.000000
	5	[3663]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[3664]	GETGLOBAL	R2 K1 ; R2 := 0x5bced4c4
	7	[3664]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x55f27c30]
	8	[3664]	MOVE     	R3 R1 ; R3 := R1
	9	[3664]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3665]	GETGLOBAL	R3 K1 ; R3 := 0x5bced4c4
	11	[3665]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xe4a5b3ca]
	12	[3665]	GETGLOBAL	R4 K1 ; R4 := 0x5bced4c4
	13	[3665]	GETTABLE 	R4 R4 K2 ; R4 := R4[0x55f27c30]
	14	[3665]	MUL      	R5 R1 K4 ; R5 := R1 * 10.000000
	15	[3665]	CALL     	R4 2 0 ; R4,... := R4(R5)
	16	[3665]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	17	[3665]	MOD      	R3 R3 K4 ; R3 := R3 % 10.000000
	18	[3667]	EQ       	0 R2 K5 ; if R2 ~= 0.000000 then PC := 25
	19	[3667]	JMP      	25 ; PC := 25
	20	[3667]	EQ       	0 R3 K5 ; if R3 ~= 0.000000 then PC := 25
	21	[3667]	JMP      	25 ; PC := 25
	22	[3667]	EQ       	1 R1 K5 ; if R1 == 0.000000 then PC := 25
	23	[3667]	JMP      	25 ; PC := 25
	24	[3669]	LOADK    	R3 := 1.000000
	25	[3672]	GETGLOBAL	R4 K6 ; R4 := 0x64fb1586
	26	[3672]	MOVE     	R5 R2 ; R5 := R2
	27	[3672]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[3673]	EQ       	1 R3 K5 ; if R3 == 0.000000 then PC := 34
	29	[3673]	JMP      	34 ; PC := 34
	30	[3674]	MOVE     	R5 R4 ; R5 := R4
	31	[3674]	LOADK    	R6 K7 ; R6 := "."
	32	[3674]	MOVE     	R7 R3 ; R7 := R3
	33	[3674]	CONCAT   	R4 R5 R7 ; R4 := R5 .. R6 .. R7
	34	[3677]	MOVE     	R5 R4 ; R5 := R4
	35	[3677]	LOADK    	R6 K8 ; R6 := "%"
	36	[3677]	CONCAT   	R4 R5 R6 ; R4 := R5 .. R6
	37	[3679]	RETURN   	R4 2 ; return R4 
	38	[3680]	RETURN   	R0 1 ; return 

function #200 <?:3682,3693> (31 instructions, 124 bytes at 00000160C61B40E0)
1 param, 7 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[3683]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3683]	GETTABLE 	R1 R1 K0 ; R1 := R1[0xa9882367]
	3	[3683]	LOADK    	R2 K1 ; R2 := "AvatarLight"
	4	[3683]	GETUPVAL 	R3 U0 ; R3 := U0
	5	[3683]	GETTABLE 	R3 R3 K2 ; R3 := R3[0x06d055f9]
	6	[3683]	GETUPVAL 	R4 U1 ; R4 := U1
	7	[3683]	CALL     	R4 1 2 ; R4 := R4()
	8	[3683]	GETGLOBAL	R5 K3 ; R5 := 0x1211d00f
	9	[3683]	LOADNIL  	R6 R6 ; R6 := nil
	10	[3683]	CALL     	R3 4 0 ; R3,... := R3(R4,R5,R6)
	11	[3683]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	12	[3684]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	13	[3684]	MOVE     	R3 R1 ; R3 := R1
	14	[3684]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[3684]	TEST     	R2 1 ; if R2 then PC := 31
	16	[3684]	JMP      	31 ; PC := 31
	17	[3685]	TEST     	R0 0 ; if not R0 then PC := 29
	18	[3685]	JMP      	29 ; PC := 29
	19	[3686]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xd199e920]
	20	[3686]	CALL     	R2 2 1 ; R2(R3)
	21	[3687]	GETGLOBAL	R2 K6 ; R2 := 0x9ba7909f
	22	[3687]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xbf9494fc]
	23	[3687]	LOADK    	R4 K8 ; R4 := "Graphics.DynamicLighting"
	24	[3687]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	25	[3688]	SELF     	R3 R1 K9 ; R4 := R1; R3 := R1[0xfd9163db]
	26	[3688]	NOT      	R5 R2 ; R5 := not R2
	27	[3688]	CALL     	R3 3 1 ; R3(R4,R5)
	28	[3688]	JMP      	31 ; PC := 31
	29	[3690]	SELF     	R3 R1 K10 ; R4 := R1; R3 := R1[0x6b5e0c7a]
	30	[3690]	CALL     	R3 2 1 ; R3(R4)
	31	[3693]	RETURN   	R0 1 ; return 

function #201 <?:3695,3697> (4 instructions, 16 bytes at 00000160C61B43A0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3696]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3696]	MOVE     	R2 R0 ; R2 := R0
	3	[3696]	CALL     	R1 2 1 ; R1(R2)
	4	[3697]	RETURN   	R0 1 ; return 

function #202 <?:3700,3711> (24 instructions, 96 bytes at 00000160C61B4470)
0 params, 5 slots, 2 upvalues, 0 locals, 13 constants, 0 functions
	1	[3701]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3701]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[3701]	GETTABLE 	R1 R1 K2 ; R1 := R1["BackgroundMovie"]
	4	[3701]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[3701]	TEST     	R0 1 ; if R0 then PC := 24
	6	[3701]	JMP      	24 ; PC := 24
	7	[3702]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[3702]	CALL     	R0 1 2 ; R0 := R0()
	9	[3703]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xb2532845]
	10	[3703]	GETGLOBAL	R3 K4 ; R3 := 0x0469f296
	11	[3703]	LOADK    	R4 K5 ; R4 := "Kneel"
	12	[3703]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[3703]	CALL     	R1 0 1 ; R1(R2,...)
	14	[3705]	GETUPVAL 	R1 U1 ; R1 := U1
	15	[3705]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[3705]	CALL     	R1 2 1 ; R1(R2)
	17	[3707]	GETGLOBAL	R1 K6 ; R1 := 0x89326c93
	18	[3707]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x7c1a0374]
	19	[3707]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[3708]	GETTABLE 	R2 R1 K8 ; R2 := R1["postProcess"]
	21	[3708]	SETTABLE 	R2 K9 K10 ; R2["horizonDOF"] := 0.000000
	22	[3709]	GETGLOBAL	R2 K1 ; R2 := _T
	23	[3709]	SETTABLE 	R2 K11 K12 ; R2["SelectedLoadOutPart"] := nil
	24	[3711]	RETURN   	R0 1 ; return 

function #203 <?:3713,3730> (38 instructions, 152 bytes at 00000160C61B4770)
1 param, 7 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[3715]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[3715]	LOADK    	R2 K1 ; R2 := "OnSaveLoadOutCompleteCommon"
	3	[3715]	CALL     	R1 2 1 ; R1(R2)
	4	[3717]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	5	[3717]	GETGLOBAL	R2 K3 ; R2 := 0xbe190284
	6	[3717]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[3717]	TEST     	R1 1 ; if R1 then PC := 12
	8	[3717]	JMP      	12 ; PC := 12
	9	[3718]	GETGLOBAL	R1 K3 ; R1 := 0xbe190284
	10	[3718]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xb411ab6c]
	11	[3718]	CALL     	R1 2 1 ; R1(R2)
	12	[3722]	GETGLOBAL	R1 K5 ; R1 := 0xe7f2b02f
	13	[3722]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x565be9ee]
	14	[3722]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[3723]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	16	[3723]	MOVE     	R3 R1 ; R3 := R1
	17	[3723]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[3723]	TEST     	R2 1 ; if R2 then PC := 35
	19	[3723]	JMP      	35 ; PC := 35
	20	[3723]	GETGLOBAL	R2 K5 ; R2 := 0xe7f2b02f
	21	[3723]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xedf454bc]
	22	[3723]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[3723]	TEST     	R2 0 ; if not R2 then PC := 35
	24	[3723]	JMP      	35 ; PC := 35
	25	[3724]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0xfdd3576f]
	26	[3724]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[3725]	GETUPVAL 	R3 U0 ; R3 := U0
	28	[3725]	CALL     	R3 1 2 ; R3 := R3()
	29	[3725]	SETTABLE 	R2 K9 R3 ; R2["eloRating"] := R3
	30	[3726]	GETGLOBAL	R3 K5 ; R3 := 0xe7f2b02f
	31	[3726]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0xee2f24fc]
	32	[3726]	MOVE     	R5 R2 ; R5 := R2
	33	[3726]	MOVE     	R6 R0 ; R6 := R0
	34	[3726]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	35	[3729]	GETGLOBAL	R3 K5 ; R3 := 0xe7f2b02f
	36	[3729]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0xcf1bf52a]
	37	[3729]	CALL     	R3 2 1 ; R3(R4)
	38	[3730]	RETURN   	R0 1 ; return 

function #204 <?:3732,3741> (32 instructions, 128 bytes at 00000160C61B4A70)
2 params, 12 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[3733]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 5
	2	[3733]	JMP      	5 ; PC := 5
	3	[3734]	LOADK    	R1 K1 ; R1 := ""
	4	[3734]	JMP      	8 ; PC := 8
	5	[3736]	LOADK    	R2 K2 ; R2 := " "
	6	[3736]	MOVE     	R3 R1 ; R3 := R1
	7	[3736]	CONCAT   	R1 R2 R3 ; R1 := R2 .. R3
	8	[3738]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0xca9ea368]
	9	[3738]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3739]	GETGLOBAL	R3 K4 ; R3 := 0x603636ad
	11	[3739]	SELF     	R4 R0 K5 ; R5 := R0; R4 := R0[0xd3a9d01f]
	12	[3739]	CALL     	R4 2 2 ; R4 := R4(R5)
	13	[3739]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0x6d604ba7]
	14	[3739]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[3739]	LOADNIL  	R5 R5 ; R5 := nil
	16	[3739]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	17	[3740]	LOADK    	R4 K7 ; R4 := "<p><font face=\"Noto Sans\"><b>"
	18	[3740]	GETGLOBAL	R5 K4 ; R5 := 0x603636ad
	19	[3740]	LOADK    	R6 K8 ; R6 := "/Lotus/Language/Menu/LevelAbbreviation"
	20	[3740]	LOADNIL  	R7 R7 ; R7 := nil
	21	[3740]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	22	[3740]	LOADK    	R6 K2 ; R6 := " "
	23	[3740]	GETGLOBAL	R7 K9 ; R7 := 0x64fb1586
	24	[3740]	MOVE     	R8 R2 ; R8 := R2
	25	[3740]	CALL     	R7 2 2 ; R7 := R7(R8)
	26	[3740]	LOADK    	R8 K10 ; R8 := " </b>"
	27	[3740]	MOVE     	R9 R3 ; R9 := R3
	28	[3740]	MOVE     	R10 R1 ; R10 := R1
	29	[3740]	LOADK    	R11 K11 ; R11 := "</font></p>"
	30	[3740]	CONCAT   	R4 R4 R11 ; R4 := R4 .. R5 .. R6 .. R7 .. R8 .. R9 .. R10 .. R11
	31	[3740]	RETURN   	R4 2 ; return R4 
	32	[3741]	RETURN   	R0 1 ; return 

function #205 <?:3743,3762> (42 instructions, 168 bytes at 00000160C61B4E00)
1 param, 9 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[3744]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[3744]	GETTABLE 	R1 R1 K1 ; R1 := R1["gCorpusHarvesterFinisherVictim"]
	3	[3744]	EQ       	0 R1 R0 ; if R1 ~= R0 then PC := 7
	4	[3744]	JMP      	7 ; PC := 7
	5	[3745]	OP_LOADBOOL	R1 1 0 ; R1 := true
	6	[3745]	RETURN   	R1 2 ; return R1 
	7	[3748]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	8	[3748]	MOVE     	R2 R0 ; R2 := R0
	9	[3748]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[3748]	TEST     	R1 1 ; if R1 then PC := 40
	11	[3748]	JMP      	40 ; PC := 40
	12	[3749]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	13	[3749]	GETGLOBAL	R2 K3 ; R2 := 0xbe190284
	14	[3749]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[3749]	TEST     	R1 1 ; if R1 then PC := 40
	16	[3749]	JMP      	40 ; PC := 40
	17	[3750]	GETGLOBAL	R1 K3 ; R1 := 0xbe190284
	18	[3750]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xa51542f4]
	19	[3750]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[3751]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	21	[3751]	MOVE     	R3 R1 ; R3 := R1
	22	[3751]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[3751]	TEST     	R2 1 ; if R2 then PC := 40
	24	[3751]	JMP      	40 ; PC := 40
	25	[3752]	LOADK    	R2 := 1.000000
	26	[3752]	LEN      	R3 R1 ; R3 := # R1
	27	[3752]	LOADK    	R4 := 1.000000
	28	[3752]	FORPREP  	R2 39 ; R2 -= R4; PC := 39
	29	[3753]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	30	[3753]	GETTABLE 	R6 R6 K5 ; R6 := R6["playerName"]
	31	[3753]	SELF     	R7 R0 K6 ; R8 := R0; R7 := R0[0x5e651723]
	32	[3753]	CALL     	R7 2 2 ; R7 := R7(R8)
	33	[3753]	SELF     	R7 R7 K7 ; R8 := R7; R7 := R7[0x5ca33548]
	34	[3753]	CALL     	R7 2 2 ; R7 := R7(R8)
	35	[3753]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 39
	36	[3753]	JMP      	39 ; PC := 39
	37	[3754]	OP_LOADBOOL	R6 1 0 ; R6 := true
	38	[3754]	RETURN   	R6 2 ; return R6 
	39	[3752]	FORLOOP  	R2 29 ; R2 += R4; if R2 <= R3 then begin PC := 29; R5 := R2 end
	40	[3761]	OP_LOADBOOL	R6 0 0 ; R6 := false
	41	[3761]	RETURN   	R6 2 ; return R6 
	42	[3762]	RETURN   	R0 1 ; return 

function #206 <?:3764,3783> (51 instructions, 204 bytes at 00000160C61B5130)
0 params, 5 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[3765]	GETGLOBAL	R0 K0 ; R0 := UI_MODE_IN_GAME
	2	[3767]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	3	[3767]	GETGLOBAL	R2 K2 ; R2 := 0x83f4e77c
	4	[3767]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[3767]	TEST     	R1 0 ; if not R1 then PC := 8
	6	[3767]	JMP      	8 ; PC := 8
	7	[3768]	RETURN   	R0 2 ; return R0 
	8	[3771]	GETGLOBAL	R1 K2 ; R1 := 0x83f4e77c
	9	[3771]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe09828e1]
	10	[3771]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[3773]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	12	[3773]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	13	[3773]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[3773]	TEST     	R2 1 ; if R2 then PC := 50
	15	[3773]	JMP      	50 ; PC := 50
	16	[3774]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	17	[3774]	MOVE     	R3 R1 ; R3 := R1
	18	[3774]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[3774]	TEST     	R2 1 ; if R2 then PC := 29
	20	[3774]	JMP      	29 ; PC := 29
	21	[3774]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	22	[3774]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	23	[3774]	MOVE     	R4 R1 ; R4 := R1
	24	[3774]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	25	[3774]	TEST     	R2 0 ; if not R2 then PC := 29
	26	[3774]	JMP      	29 ; PC := 29
	27	[3775]	GETGLOBAL	R0 K6 ; R0 := UI_MODE_IN_SPACE_SHIP
	28	[3775]	JMP      	50 ; PC := 50
	29	[3776]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	30	[3776]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	31	[3776]	GETGLOBAL	R4 K7 ; R4 := gLotusDojoGameRulesType
	32	[3776]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	33	[3776]	TEST     	R2 1 ; if R2 then PC := 41
	34	[3776]	JMP      	41 ; PC := 41
	35	[3776]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	36	[3776]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	37	[3776]	GETGLOBAL	R4 K8 ; R4 := gLotusDuelGameRulesType
	38	[3776]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	39	[3776]	TEST     	R2 0 ; if not R2 then PC := 43
	40	[3776]	JMP      	43 ; PC := 43
	41	[3777]	GETGLOBAL	R0 K9 ; R0 := UI_MODE_IN_DOJO
	42	[3777]	JMP      	50 ; PC := 50
	43	[3778]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	44	[3778]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	45	[3778]	GETGLOBAL	R4 K10 ; R4 := gLotusHubGameRulesType
	46	[3778]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	47	[3778]	TEST     	R2 0 ; if not R2 then PC := 50
	48	[3778]	JMP      	50 ; PC := 50
	49	[3779]	GETGLOBAL	R0 K11 ; R0 := UI_MODE_IN_SPACE_HUB
	50	[3782]	RETURN   	R0 2 ; return R0 
	51	[3783]	RETURN   	R0 1 ; return 

function #207 <?:3785,3837> (148 instructions, 592 bytes at 00000160C61B5450)
7 params, 23 slots, 0 upvalues, 0 locals, 39 constants, 0 functions
	1	[3787]	NEWTABLE 	R7 0 5 ; R7 := {}
	2	[3788]	SETTABLE 	R7 K0 K1 ; R7["isMultiline"] := false
	3	[3789]	SETTABLE 	R7 K2 K1 ; R7["cancelDisabled"] := false
	4	[3790]	SETTABLE 	R7 K3 K1 ; R7["forChat"] := false
	5	[3791]	SETTABLE 	R7 K4 K5 ; R7["desc"] := nil
	6	[3792]	SETTABLE 	R7 K6 K1 ; R7["isEmail"] := false
	7	[3795]	EQ       	1 R6 K5 ; if R6 == nil then PC := 16
	8	[3795]	JMP      	16 ; PC := 16
	9	[3796]	GETGLOBAL	R8 K7 ; R8 := 0xcfc01047
	10	[3796]	MOVE     	R9 R6 ; R9 := R6
	11	[3796]	CALL     	R8 2 4 ; R8,R9,R10 := R8(R9)
	12	[3796]	JMP      	14 ; PC := 14
	13	[3797]	SETTABLE 	R7 R11 R12 ; R7[R11] := R12
	14	[3796]	TFORLOOP 	R8 2 ; R11,R12 := R8(R9,R10); if R11 ~= nil then begin PC = 13; R10 := R11 end
	15	[3797]	JMP      	13 ; PC := 13
	16	[3802]	GETGLOBAL	R13 K8 ; R13 := 0x34291f5c
	17	[3802]	GETTABLE 	R13 R13 K9 ; R13 := R13[0x1467d5f4]
	18	[3802]	CALL     	R13 1 2 ; R13 := R13()
	19	[3802]	TEST     	R13 1 ; if R13 then PC := 31
	20	[3802]	JMP      	31 ; PC := 31
	21	[3802]	GETGLOBAL	R13 K8 ; R13 := 0x34291f5c
	22	[3802]	GETTABLE 	R13 R13 K10 ; R13 := R13[0x399826a5]
	23	[3802]	CALL     	R13 1 2 ; R13 := R13()
	24	[3802]	TEST     	R13 1 ; if R13 then PC := 31
	25	[3802]	JMP      	31 ; PC := 31
	26	[3802]	GETGLOBAL	R13 K8 ; R13 := 0x34291f5c
	27	[3802]	GETTABLE 	R13 R13 K11 ; R13 := R13[0xe6b41adb]
	28	[3802]	CALL     	R13 1 2 ; R13 := R13()
	29	[3802]	TEST     	R13 0 ; if not R13 then PC := 68
	30	[3802]	JMP      	68 ; PC := 68
	31	[3802]	GETGLOBAL	R13 K8 ; R13 := 0x34291f5c
	32	[3802]	GETTABLE 	R13 R13 K12 ; R13 := R13[0x94617168]
	33	[3802]	CALL     	R13 1 2 ; R13 := R13()
	34	[3802]	TEST     	R13 0 ; if not R13 then PC := 68
	35	[3802]	JMP      	68 ; PC := 68
	36	[3803]	GETGLOBAL	R13 K13 ; R13 := 0x603636ad
	37	[3803]	MOVE     	R14 R1 ; R14 := R1
	38	[3803]	NEWTABLE 	R15 0 0 ; R15 := {}
	39	[3803]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	40	[3803]	MOVE     	R1 R13 ; R1 := R13
	41	[3804]	EQ       	1 R3 K14 ; if R3 == 0.000000 then PC := 56
	42	[3804]	JMP      	56 ; PC := 56
	43	[3805]	GETGLOBAL	R13 K15 ; R13 := 0x89326c93
	44	[3805]	SELF     	R13 R13 K16 ; R14 := R13; R13 := R13[0xa3eb3f6b]
	45	[3805]	MOVE     	R15 R2 ; R15 := R2
	46	[3805]	MOVE     	R16 R1 ; R16 := R1
	47	[3805]	MOVE     	R17 R1 ; R17 := R1
	48	[3805]	OP_LOADBOOL	R18 0 0 ; R18 := false
	49	[3805]	GETTABLE 	R19 R7 K6 ; R19 := R7["isEmail"]
	50	[3805]	GETTABLE 	R20 R7 K3 ; R20 := R7["forChat"]
	51	[3805]	MOVE     	R21 R5 ; R21 := R5
	52	[3805]	MOVE     	R22 R3 ; R22 := R3
	53	[3805]	TAILCALL 	R13 10 0 ; R13,... := R13(R14,R15,R16,R17,R18,R19,R20,R21,R22)
	54	[3805]	RETURN   	R13 0 ; return R13,... 
	55	[3805]	JMP      	148 ; PC := 148
	56	[3807]	GETGLOBAL	R13 K15 ; R13 := 0x89326c93
	57	[3807]	SELF     	R13 R13 K17 ; R14 := R13; R13 := R13[0xbf89a347]
	58	[3807]	MOVE     	R15 R2 ; R15 := R2
	59	[3807]	MOVE     	R16 R1 ; R16 := R1
	60	[3807]	MOVE     	R17 R1 ; R17 := R1
	61	[3807]	OP_LOADBOOL	R18 0 0 ; R18 := false
	62	[3807]	GETTABLE 	R19 R7 K6 ; R19 := R7["isEmail"]
	63	[3807]	GETTABLE 	R20 R7 K3 ; R20 := R7["forChat"]
	64	[3807]	MOVE     	R21 R5 ; R21 := R5
	65	[3807]	TAILCALL 	R13 9 0 ; R13,... := R13(R14,R15,R16,R17,R18,R19,R20,R21)
	66	[3807]	RETURN   	R13 0 ; return R13,... 
	67	[3808]	JMP      	148 ; PC := 148
	68	[3809]	GETGLOBAL	R13 K18 ; R13 := 0x7b998233
	69	[3809]	GETGLOBAL	R14 K19 ; R14 := 0x0032441c
	70	[3809]	GETTABLE 	R14 R14 K20 ; R14 := R14["UIMovie_InputDialogMovie"]
	71	[3809]	CALL     	R13 2 2 ; R13 := R13(R14)
	72	[3809]	TEST     	R13 1 ; if R13 then PC := 148
	73	[3809]	JMP      	148 ; PC := 148
	74	[3810]	LOADNIL  	R13 R13 ; R13 := nil
	75	[3811]	GETGLOBAL	R14 K18 ; R14 := 0x7b998233
	76	[3811]	MOVE     	R15 R0 ; R15 := R0
	77	[3811]	CALL     	R14 2 2 ; R14 := R14(R15)
	78	[3811]	TEST     	R14 1 ; if R14 then PC := 86
	79	[3811]	JMP      	86 ; PC := 86
	80	[3812]	SELF     	R14 R0 K21 ; R15 := R0; R14 := R0[0x1fd6abd0]
	81	[3812]	GETGLOBAL	R16 K19 ; R16 := 0x0032441c
	82	[3812]	GETTABLE 	R16 R16 K20 ; R16 := R16["UIMovie_InputDialogMovie"]
	83	[3812]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	84	[3812]	MOVE     	R13 R14 ; R13 := R14
	85	[3812]	JMP      	92 ; PC := 92
	86	[3814]	GETGLOBAL	R14 K22 ; R14 := 0x9ba7909f
	87	[3814]	SELF     	R14 R14 K23 ; R15 := R14; R14 := R14[0xcfba257f]
	88	[3814]	GETGLOBAL	R16 K19 ; R16 := 0x0032441c
	89	[3814]	GETTABLE 	R16 R16 K20 ; R16 := R16["UIMovie_InputDialogMovie"]
	90	[3814]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	91	[3814]	MOVE     	R13 R14 ; R13 := R14
	92	[3816]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	93	[3816]	LOADK    	R16 K25 ; R16 := "SetYesTag"
	94	[3816]	LOADK    	R17 K26 ; R17 := "/Menu/Confirm_Item_Ok"
	95	[3816]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	96	[3817]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	97	[3817]	LOADK    	R16 K27 ; R16 := "SetNoTag"
	98	[3817]	LOADK    	R17 K28 ; R17 := "/Menu/Confirm_Item_Cancel"
	99	[3817]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	100	[3819]	GETTABLE 	R14 R7 K2 ; R14 := R7["cancelDisabled"]
	101	[3819]	TEST     	R14 0 ; if not R14 then PC := 107
	102	[3819]	JMP      	107 ; PC := 107
	103	[3820]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	104	[3820]	LOADK    	R16 K29 ; R16 := "SetCancelEnable"
	105	[3820]	LOADK    	R17 K30 ; R17 := "false"
	106	[3820]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	107	[3823]	SELF     	R14 R13 K31 ; R15 := R13; R14 := R13[0xf56f3887]
	108	[3823]	LOADK    	R16 K32 ; R16 := "SetCaption"
	109	[3823]	NEWTABLE 	R17 1 0 ; R17 := {}
	110	[3823]	MOVE     	R18 R1 ; R18 := R1
	111	[3823]	SETLIST  	R17 1 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
	112	[3823]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	113	[3824]	GETTABLE 	R14 R7 K4 ; R14 := R7["desc"]
	114	[3824]	EQ       	1 R14 K5 ; if R14 == nil then PC := 122
	115	[3824]	JMP      	122 ; PC := 122
	116	[3825]	SELF     	R14 R13 K31 ; R15 := R13; R14 := R13[0xf56f3887]
	117	[3825]	LOADK    	R16 K33 ; R16 := "SetText"
	118	[3825]	NEWTABLE 	R17 1 0 ; R17 := {}
	119	[3825]	GETTABLE 	R18 R7 K4 ; R18 := R7["desc"]
	120	[3825]	SETLIST  	R17 1 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
	121	[3825]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	122	[3827]	GETTABLE 	R14 R7 K0 ; R14 := R7["isMultiline"]
	123	[3827]	TEST     	R14 0 ; if not R14 then PC := 129
	124	[3827]	JMP      	129 ; PC := 129
	125	[3828]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	126	[3828]	LOADK    	R16 K34 ; R16 := "SetMultiline"
	127	[3828]	LOADK    	R17 K35 ; R17 := ""
	128	[3828]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	129	[3830]	SELF     	R14 R13 K31 ; R15 := R13; R14 := R13[0xf56f3887]
	130	[3830]	LOADK    	R16 K36 ; R16 := "SetContent"
	131	[3830]	NEWTABLE 	R17 1 0 ; R17 := {}
	132	[3830]	MOVE     	R18 R2 ; R18 := R2
	133	[3830]	SETLIST  	R17 1 1 ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
	134	[3830]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	135	[3831]	EQ       	1 R3 K14 ; if R3 == 0.000000 then PC := 141
	136	[3831]	JMP      	141 ; PC := 141
	137	[3832]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	138	[3832]	LOADK    	R16 K37 ; R16 := "SetMaxChars"
	139	[3832]	MOVE     	R17 R3 ; R17 := R3
	140	[3832]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	141	[3834]	SELF     	R14 R13 K24 ; R15 := R13; R14 := R13[0xe4162eed]
	142	[3834]	LOADK    	R16 K38 ; R16 := "SetCallback"
	143	[3834]	MOVE     	R17 R4 ; R17 := R4
	144	[3834]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	145	[3835]	OP_LOADBOOL	R14 1 0 ; R14 := true
	146	[3835]	MOVE     	R15 R13 ; R15 := R13
	147	[3835]	RETURN   	R14 3 ; return R14, R15 
	148	[3837]	RETURN   	R0 1 ; return 

function #208 <?:3839,3841> (11 instructions, 44 bytes at 00000160C61B6040)
7 params, 15 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3840]	GETUPVAL 	R7 U0 ; R7 := U0
	2	[3840]	MOVE     	R8 R0 ; R8 := R0
	3	[3840]	MOVE     	R9 R1 ; R9 := R1
	4	[3840]	MOVE     	R10 R2 ; R10 := R2
	5	[3840]	MOVE     	R11 R3 ; R11 := R3
	6	[3840]	MOVE     	R12 R4 ; R12 := R4
	7	[3840]	MOVE     	R13 R5 ; R13 := R5
	8	[3840]	MOVE     	R14 R6 ; R14 := R6
	9	[3840]	TAILCALL 	R7 8 0 ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
	10	[3840]	RETURN   	R7 0 ; return R7,... 
	11	[3841]	RETURN   	R0 1 ; return 

function #209 <?:3843,3853> (22 instructions, 88 bytes at 00000160C61B6150)
0 params, 10 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[3844]	LOADK    	R0 := 0.000000
	2	[3845]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	3	[3846]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[3846]	MOVE     	R3 R1 ; R3 := R1
	5	[3846]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[3846]	TEST     	R2 1 ; if R2 then PC := 21
	7	[3846]	JMP      	21 ; PC := 21
	8	[3847]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x29ec8b5e]
	9	[3847]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3848]	LOADK    	R3 := 1.000000
	11	[3848]	LEN      	R4 R2 ; R4 := # R2
	12	[3848]	LOADK    	R5 := 1.000000
	13	[3848]	FORPREP  	R3 20 ; R3 -= R5; PC := 20
	14	[3849]	GETGLOBAL	R7 K3 ; R7 := 0xa94df70b
	15	[3849]	SELF     	R7 R7 K4 ; R8 := R7; R7 := R7[0xc3f26174]
	16	[3849]	GETTABLE 	R9 R2 R6 ; R9 := R2[R6]
	17	[3849]	GETTABLE 	R9 R9 K5 ; R9 := R9["mTier"]
	18	[3849]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	19	[3849]	ADD      	R0 R0 R7 ; R0 := R0 + R7
	20	[3848]	FORLOOP  	R3 14 ; R3 += R5; if R3 <= R4 then begin PC := 14; R6 := R3 end
	21	[3852]	RETURN   	R0 2 ; return R0 
	22	[3853]	RETURN   	R0 1 ; return 

function #210 <?:3856,3861> (33 instructions, 132 bytes at 00000160C61B6330)
1 param, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[3857]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[3857]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedAlerts"]
	3	[3857]	TEST     	R1 0 ; if not R1 then PC := 31
	4	[3857]	JMP      	31 ; PC := 31
	5	[3857]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[3857]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedAlerts"]
	7	[3857]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	8	[3857]	MOVE     	R3 R0 ; R3 := R0
	9	[3857]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3857]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	11	[3857]	EQ       	1 R1 K3 ; if R1 == nil then PC := 31
	12	[3857]	JMP      	31 ; PC := 31
	13	[3857]	GETGLOBAL	R1 K0 ; R1 := _T
	14	[3857]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedAlerts"]
	15	[3857]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	16	[3857]	MOVE     	R3 R0 ; R3 := R0
	17	[3857]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[3857]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	19	[3857]	GETTABLE 	R1 R1 K4 ; R1 := R1["mVisible"]
	20	[3857]	TEST     	R1 0 ; if not R1 then PC := 31
	21	[3857]	JMP      	31 ; PC := 31
	22	[3858]	GETGLOBAL	R1 K0 ; R1 := _T
	23	[3858]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedAlerts"]
	24	[3858]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	25	[3858]	MOVE     	R3 R0 ; R3 := R0
	26	[3858]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[3858]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	28	[3858]	GETTABLE 	R1 R1 K5 ; R1 := R1["mAlertInfo"]
	29	[3858]	GETTABLE 	R1 R1 K6 ; R1 := R1["mMissionInfo"]
	30	[3858]	RETURN   	R1 2 ; return R1 
	31	[3860]	LOADNIL  	R1 R1 ; R1 := nil
	32	[3860]	RETURN   	R1 2 ; return R1 
	33	[3861]	RETURN   	R0 1 ; return 

function #211 <?:3863,3865> (5 instructions, 20 bytes at 00000160C61B6600)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3864]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3864]	MOVE     	R2 R0 ; R2 := R0
	3	[3864]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3864]	RETURN   	R1 0 ; return R1,... 
	5	[3865]	RETURN   	R0 1 ; return 

function #212 <?:3867,3869> (8 instructions, 32 bytes at 00000160C61B66F0)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[3868]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[3868]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedInvasionInfo"]
	3	[3868]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	4	[3868]	MOVE     	R3 R0 ; R3 := R0
	5	[3868]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[3868]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	7	[3868]	RETURN   	R1 2 ; return R1 
	8	[3869]	RETURN   	R0 1 ; return 

function #213 <?:3871,3873> (5 instructions, 20 bytes at 00000160C61B6860)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3872]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3872]	MOVE     	R2 R0 ; R2 := R0
	3	[3872]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3872]	RETURN   	R1 0 ; return R1,... 
	5	[3873]	RETURN   	R0 1 ; return 

function #214 <?:3875,3877> (8 instructions, 32 bytes at 00000160C61B6950)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[3876]	GETGLOBAL	R1 K0 ; R1 := 0x0032441c
	2	[3876]	GETTABLE 	R1 R1 K1 ; R1 := R1["CachedGoalInfo"]
	3	[3876]	GETGLOBAL	R2 K2 ; R2 := 0x64fb1586
	4	[3876]	MOVE     	R3 R0 ; R3 := R0
	5	[3876]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[3876]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	7	[3876]	RETURN   	R1 2 ; return R1 
	8	[3877]	RETURN   	R0 1 ; return 

function #215 <?:3879,3881> (5 instructions, 20 bytes at 00000160C61B6A80)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3880]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3880]	MOVE     	R2 R0 ; R2 := R0
	3	[3880]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3880]	RETURN   	R1 0 ; return R1,... 
	5	[3881]	RETURN   	R0 1 ; return 

function #216 <?:3883,3889> (25 instructions, 100 bytes at 00000160C61B6B70)
1 param, 4 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[3884]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	2	[3884]	MOVE     	R2 R0 ; R2 := R0
	3	[3884]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3885]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	5	[3885]	GETTABLE 	R2 R2 K2 ; R2 := R2["CachedGoalInfo"]
	6	[3885]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	7	[3885]	TEST     	R2 0 ; if not R2 then PC := 22
	8	[3885]	JMP      	22 ; PC := 22
	9	[3885]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	10	[3885]	GETGLOBAL	R3 K1 ; R3 := 0x0032441c
	11	[3885]	GETTABLE 	R3 R3 K2 ; R3 := R3["CachedGoalInfo"]
	12	[3885]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	13	[3885]	GETTABLE 	R3 R3 K4 ; R3 := R3["mIcon"]
	14	[3885]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[3885]	TEST     	R2 1 ; if R2 then PC := 22
	16	[3885]	JMP      	22 ; PC := 22
	17	[3886]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	18	[3886]	GETTABLE 	R2 R2 K2 ; R2 := R2["CachedGoalInfo"]
	19	[3886]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	20	[3886]	GETTABLE 	R2 R2 K4 ; R2 := R2["mIcon"]
	21	[3886]	RETURN   	R2 2 ; return R2 
	22	[3888]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	23	[3888]	GETTABLE 	R2 R2 K5 ; R2 := R2["UITexture_Event"]
	24	[3888]	RETURN   	R2 2 ; return R2 
	25	[3889]	RETURN   	R0 1 ; return 

function #217 <?:3891,3893> (5 instructions, 20 bytes at 00000160C61B6DE0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3892]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3892]	MOVE     	R2 R0 ; R2 := R0
	3	[3892]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3892]	RETURN   	R1 2 ; return R1 
	5	[3893]	RETURN   	R0 1 ; return 

function #218 <?:3895,3928> (83 instructions, 332 bytes at 00000160C61B6ED0)
1 param, 8 slots, 1 upvalue, 0 locals, 25 constants, 0 functions
	1	[3896]	TEST     	R0 1 ; if R0 then PC := 5
	2	[3896]	JMP      	5 ; PC := 5
	3	[3897]	LOADK    	R1 K0 ; R1 := ""
	4	[3897]	RETURN   	R1 2 ; return R1 
	5	[3900]	GETGLOBAL	R1 K1 ; R1 := 0x6c97a788
	6	[3900]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x5c44e915]
	7	[3900]	GETTABLE 	R2 R0 K3 ; R2 := R0["missionType"]
	8	[3900]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[3901]	LOADNIL  	R2 R2 ; R2 := nil
	10	[3903]	EQ       	0 R1 K4 ; if R1 ~= nil then PC := 14
	11	[3903]	JMP      	14 ; PC := 14
	12	[3904]	LOADK    	R1 K0 ; R1 := ""
	13	[3904]	JMP      	80 ; PC := 80
	14	[3905]	GETTABLE 	R3 R0 K5 ; R3 := R0["forceAllyFaction"]
	15	[3905]	TEST     	R3 0 ; if not R3 then PC := 20
	16	[3905]	JMP      	20 ; PC := 20
	17	[3906]	MOVE     	R2 R1 ; R2 := R1
	18	[3907]	LOADK    	R1 K6 ; R1 := "Crossfire"
	19	[3907]	JMP      	80 ; PC := 80
	20	[3908]	GETTABLE 	R3 R0 K7 ; R3 := R0["goalTag"]
	21	[3908]	GETUPVAL 	R4 U0 ; R4 := U0
	22	[3908]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 26
	23	[3908]	JMP      	26 ; PC := 26
	24	[3909]	LOADK    	R1 K8 ; R1 := "KuvaSurvival"
	25	[3909]	JMP      	80 ; PC := 80
	26	[3910]	GETTABLE 	R3 R0 K3 ; R3 := R0["missionType"]
	27	[3910]	EQ       	0 R3 K9 ; if R3 ~= 31.000000 then PC := 80
	28	[3910]	JMP      	80 ; PC := 80
	29	[3910]	GETTABLE 	R3 R0 K10 ; R3 := R0["faction"]
	30	[3910]	EQ       	0 R3 K11 ; if R3 ~= 1.000000 then PC := 80
	31	[3910]	JMP      	80 ; PC := 80
	32	[3911]	GETGLOBAL	R3 K12 ; R3 := 0x7b998233
	33	[3911]	GETTABLE 	R4 R0 K13 ; R4 := R0["levelOverride"]
	34	[3911]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[3911]	TEST     	R3 1 ; if R3 then PC := 80
	36	[3911]	JMP      	80 ; PC := 80
	37	[3912]	GETGLOBAL	R3 K14 ; R3 := 0x64fb1586
	38	[3912]	GETTABLE 	R4 R0 K13 ; R4 := R0["levelOverride"]
	39	[3912]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0xed4e0128]
	40	[3912]	CALL     	R4 2 0 ; R4,... := R4(R5)
	41	[3912]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	42	[3913]	GETGLOBAL	R4 K12 ; R4 := 0x7b998233
	43	[3913]	GETTABLE 	R5 R0 K16 ; R5 := R0["keyChainName"]
	44	[3913]	CALL     	R4 2 2 ; R4 := R4(R5)
	45	[3913]	TEST     	R4 0 ; if not R4 then PC := 54
	46	[3913]	JMP      	54 ; PC := 54
	47	[3913]	GETGLOBAL	R4 K17 ; R4 := 0x7f5022cf
	48	[3913]	GETTABLE 	R4 R4 K18 ; R4 := R4[0xa5c556b9]
	49	[3913]	MOVE     	R5 R3 ; R5 := R3
	50	[3913]	LOADK    	R6 K19 ; R6 := "Quest"
	51	[3913]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	52	[3913]	EQ       	1 R4 K4 ; if R4 == nil then PC := 56
	53	[3913]	JMP      	56 ; PC := 56
	54	[3914]	LOADK    	R1 K20 ; R1 := "Generic"
	55	[3914]	JMP      	80 ; PC := 80
	56	[3917]	GETGLOBAL	R4 K17 ; R4 := 0x7f5022cf
	57	[3917]	GETTABLE 	R4 R4 K18 ; R4 := R4[0xa5c556b9]
	58	[3917]	GETGLOBAL	R5 K17 ; R5 := 0x7f5022cf
	59	[3917]	GETTABLE 	R5 R5 K21 ; R5 := R5[0x62f9fb80]
	60	[3917]	MOVE     	R6 R3 ; R6 := R3
	61	[3917]	CALL     	R5 2 2 ; R5 := R5(R6)
	62	[3917]	LOADK    	R6 K22 ; R6 := "%u"
	63	[3917]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	64	[3918]	EQ       	1 R4 K4 ; if R4 == nil then PC := 80
	65	[3918]	JMP      	80 ; PC := 80
	66	[3919]	GETGLOBAL	R5 K17 ; R5 := 0x7f5022cf
	67	[3919]	GETTABLE 	R5 R5 K23 ; R5 := R5[0x41e2ae25]
	68	[3919]	MOVE     	R6 R3 ; R6 := R3
	69	[3919]	CALL     	R5 2 2 ; R5 := R5(R6)
	70	[3919]	SUB      	R5 R5 R4 ; R5 := R5 - R4
	71	[3919]	ADD      	R4 R5 K11 ; R4 := R5 + 1.000000
	72	[3920]	GETGLOBAL	R5 K17 ; R5 := 0x7f5022cf
	73	[3920]	GETTABLE 	R5 R5 K24 ; R5 := R5[0x1a94c9cc]
	74	[3920]	MOVE     	R6 R3 ; R6 := R3
	75	[3920]	MOVE     	R7 R4 ; R7 := R4
	76	[3920]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	77	[3921]	MOVE     	R6 R1 ; R6 := R1
	78	[3921]	MOVE     	R7 R5 ; R7 := R5
	79	[3921]	CONCAT   	R1 R6 R7 ; R1 := R6 .. R7
	80	[3927]	MOVE     	R6 R1 ; R6 := R1
	81	[3927]	MOVE     	R7 R2 ; R7 := R2
	82	[3927]	RETURN   	R6 3 ; return R6, R7 
	83	[3928]	RETURN   	R0 1 ; return 

function #219 <?:3930,3932> (5 instructions, 20 bytes at 00000160C61B74D0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3931]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3931]	MOVE     	R2 R0 ; R2 := R0
	3	[3931]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3931]	RETURN   	R1 0 ; return R1,... 
	5	[3932]	RETURN   	R0 1 ; return 

function #220 <?:3934,3942> (15 instructions, 60 bytes at 00000160C61B75C0)
1 param, 6 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3935]	LOADK    	R1 := 1.000000
	2	[3935]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[3935]	LEN      	R2 R2 ; R2 := # R2
	4	[3935]	LOADK    	R3 := 1.000000
	5	[3935]	FORPREP  	R1 12 ; R1 -= R3; PC := 12
	6	[3936]	GETUPVAL 	R5 U0 ; R5 := U0
	7	[3936]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	8	[3936]	EQ       	0 R0 R5 ; if R0 ~= R5 then PC := 12
	9	[3936]	JMP      	12 ; PC := 12
	10	[3937]	OP_LOADBOOL	R5 1 0 ; R5 := true
	11	[3937]	RETURN   	R5 2 ; return R5 
	12	[3935]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	13	[3941]	OP_LOADBOOL	R5 0 0 ; R5 := false
	14	[3941]	RETURN   	R5 2 ; return R5 
	15	[3942]	RETURN   	R0 1 ; return 

function #221 <?:3944,3946> (8 instructions, 32 bytes at 00000160C61B76F0)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[3945]	GETGLOBAL	R1 K0 ; R1 := 0x603636ad
	2	[3945]	GETGLOBAL	R2 K1 ; R2 := FactionNames
	3	[3945]	ADD      	R3 R0 K2 ; R3 := R0 + 1.000000
	4	[3945]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	5	[3945]	LOADNIL  	R3 R3 ; R3 := nil
	6	[3945]	TAILCALL 	R1 3 0 ; R1,... := R1(R2,R3)
	7	[3945]	RETURN   	R1 0 ; return R1,... 
	8	[3946]	RETURN   	R0 1 ; return 

function #222 <?:3948,3950> (5 instructions, 20 bytes at 00000160C61B7820)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3949]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[3949]	MOVE     	R2 R0 ; R2 := R0
	3	[3949]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[3949]	RETURN   	R1 0 ; return R1,... 
	5	[3950]	RETURN   	R0 1 ; return 

function #223 <?:3952,4011> (302 instructions, 1208 bytes at 00000160C61B7910)
4 params, 10 slots, 1 upvalue, 0 locals, 55 constants, 0 functions
	1	[3953]	LOADK    	R4 K0 ; R4 := ""
	2	[3954]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	3	[3954]	GETTABLE 	R6 R0 K2 ; R6 := R0["levelOverride"]
	4	[3954]	CALL     	R5 2 2 ; R5 := R5(R6)
	5	[3954]	TEST     	R5 1 ; if R5 then PC := 11
	6	[3954]	JMP      	11 ; PC := 11
	7	[3955]	GETTABLE 	R5 R0 K2 ; R5 := R0["levelOverride"]
	8	[3955]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0xed4e0128]
	9	[3955]	CALL     	R5 2 2 ; R5 := R5(R6)
	10	[3955]	MOVE     	R4 R5 ; R4 := R5
	11	[3957]	LOADNIL  	R5 R5 ; R5 := nil
	12	[3958]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	13	[3958]	GETGLOBAL	R7 K4 ; R7 := 0x83f4e77c
	14	[3958]	CALL     	R6 2 2 ; R6 := R6(R7)
	15	[3958]	TEST     	R6 0 ; if not R6 then PC := 18
	16	[3958]	JMP      	18 ; PC := 18
	17	[3959]	RETURN   	R5 2 ; return R5 
	18	[3962]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	19	[3962]	GETTABLE 	R7 R0 K5 ; R7 := R0["icon"]
	20	[3962]	CALL     	R6 2 2 ; R6 := R6(R7)
	21	[3962]	TEST     	R6 1 ; if R6 then PC := 32
	22	[3962]	JMP      	32 ; PC := 32
	23	[3963]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	24	[3963]	MOVE     	R7 R2 ; R7 := R2
	25	[3963]	CALL     	R6 2 2 ; R6 := R6(R7)
	26	[3963]	TEST     	R6 1 ; if R6 then PC := 30
	27	[3963]	JMP      	30 ; PC := 30
	28	[3964]	GETTABLE 	R5 R2 K5 ; R5 := R2["icon"]
	29	[3964]	JMP      	301 ; PC := 301
	30	[3966]	GETTABLE 	R5 R0 K5 ; R5 := R0["icon"]
	31	[3967]	JMP      	301 ; PC := 301
	32	[3968]	GETTABLE 	R6 R0 K6 ; R6 := R0["missionType"]
	33	[3968]	EQ       	0 R6 K8 ; if R6 ~= 22.000000 then PC := 38
	34	[3968]	JMP      	38 ; PC := 38
	35	[3969]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	36	[3969]	GETTABLE 	R5 R6 K10 ; R5 := R6["UITextures_ArenaLocation"]
	37	[3969]	JMP      	301 ; PC := 301
	38	[3970]	GETTABLE 	R6 R0 K6 ; R6 := R0["missionType"]
	39	[3970]	EQ       	0 R6 K11 ; if R6 ~= 23.000000 then PC := 44
	40	[3970]	JMP      	44 ; PC := 44
	41	[3971]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	42	[3971]	GETTABLE 	R5 R6 K12 ; R5 := R6["UITextures_JunctionLocation"]
	43	[3971]	JMP      	301 ; PC := 301
	44	[3972]	GETTABLE 	R6 R0 K6 ; R6 := R0["missionType"]
	45	[3972]	EQ       	0 R6 K13 ; if R6 ~= 28.000000 then PC := 50
	46	[3972]	JMP      	50 ; PC := 50
	47	[3973]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	48	[3973]	GETTABLE 	R5 R6 K14 ; R5 := R6["UITextures_EidolonPlains"]
	49	[3973]	JMP      	301 ; PC := 301
	50	[3974]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	51	[3974]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	52	[3974]	MOVE     	R7 R4 ; R7 := R4
	53	[3974]	LOADK    	R8 K17 ; R8 := "Asteroid"
	54	[3974]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	55	[3974]	TEST     	R6 0 ; if not R6 then PC := 67
	56	[3974]	JMP      	67 ; PC := 67
	57	[3975]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	58	[3975]	GETTABLE 	R6 R6 K18 ; R6 := R6["UITextures_GrineerAsteroid"]
	59	[3975]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	60	[3975]	LOADK    	R8 := 1.000000
	61	[3975]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	62	[3975]	GETTABLE 	R9 R9 K18 ; R9 := R9["UITextures_GrineerAsteroid"]
	63	[3975]	LEN      	R9 R9 ; R9 := # R9
	64	[3975]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	65	[3975]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	66	[3975]	JMP      	301 ; PC := 301
	67	[3976]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	68	[3976]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	69	[3976]	MOVE     	R7 R4 ; R7 := R4
	70	[3976]	LOADK    	R8 K20 ; R8 := "GasCity"
	71	[3976]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	72	[3976]	TEST     	R6 0 ; if not R6 then PC := 84
	73	[3976]	JMP      	84 ; PC := 84
	74	[3977]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	75	[3977]	GETTABLE 	R6 R6 K21 ; R6 := R6["UITextures_GasCity"]
	76	[3977]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	77	[3977]	LOADK    	R8 := 1.000000
	78	[3977]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	79	[3977]	GETTABLE 	R9 R9 K21 ; R9 := R9["UITextures_GasCity"]
	80	[3977]	LEN      	R9 R9 ; R9 := # R9
	81	[3977]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	82	[3977]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	83	[3977]	JMP      	301 ; PC := 301
	84	[3978]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	85	[3978]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	86	[3978]	MOVE     	R7 R4 ; R7 := R4
	87	[3978]	LOADK    	R8 K22 ; R8 := "Galleon"
	88	[3978]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	89	[3978]	TEST     	R6 0 ; if not R6 then PC := 101
	90	[3978]	JMP      	101 ; PC := 101
	91	[3979]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	92	[3979]	GETTABLE 	R6 R6 K23 ; R6 := R6["UITextures_GrineerShip"]
	93	[3979]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	94	[3979]	LOADK    	R8 := 1.000000
	95	[3979]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	96	[3979]	GETTABLE 	R9 R9 K23 ; R9 := R9["UITextures_GrineerShip"]
	97	[3979]	LEN      	R9 R9 ; R9 := # R9
	98	[3979]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	99	[3979]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	100	[3979]	JMP      	301 ; PC := 301
	101	[3980]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	102	[3980]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	103	[3980]	MOVE     	R7 R4 ; R7 := R4
	104	[3980]	LOADK    	R8 K24 ; R8 := "Outpost"
	105	[3980]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	106	[3980]	TEST     	R6 0 ; if not R6 then PC := 118
	107	[3980]	JMP      	118 ; PC := 118
	108	[3981]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	109	[3981]	GETTABLE 	R6 R6 K25 ; R6 := R6["UITextures_Outpost"]
	110	[3981]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	111	[3981]	LOADK    	R8 := 1.000000
	112	[3981]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	113	[3981]	GETTABLE 	R9 R9 K25 ; R9 := R9["UITextures_Outpost"]
	114	[3981]	LEN      	R9 R9 ; R9 := # R9
	115	[3981]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	116	[3981]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	117	[3981]	JMP      	301 ; PC := 301
	118	[3982]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	119	[3982]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	120	[3982]	MOVE     	R7 R4 ; R7 := R4
	121	[3982]	LOADK    	R8 K26 ; R8 := "InfestedCorpus"
	122	[3982]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	123	[3982]	TEST     	R6 1 ; if R6 then PC := 132
	124	[3982]	JMP      	132 ; PC := 132
	125	[3982]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	126	[3982]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	127	[3982]	MOVE     	R7 R4 ; R7 := R4
	128	[3982]	LOADK    	R8 K27 ; R8 := "InfestedHive"
	129	[3982]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	130	[3982]	TEST     	R6 0 ; if not R6 then PC := 142
	131	[3982]	JMP      	142 ; PC := 142
	132	[3983]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	133	[3983]	GETTABLE 	R6 R6 K28 ; R6 := R6["UITextures_InfestedCorpusShip"]
	134	[3983]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	135	[3983]	LOADK    	R8 := 1.000000
	136	[3983]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	137	[3983]	GETTABLE 	R9 R9 K28 ; R9 := R9["UITextures_InfestedCorpusShip"]
	138	[3983]	LEN      	R9 R9 ; R9 := # R9
	139	[3983]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	140	[3983]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	141	[3983]	JMP      	301 ; PC := 301
	142	[3984]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	143	[3984]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	144	[3984]	MOVE     	R7 R4 ; R7 := R4
	145	[3984]	LOADK    	R8 K29 ; R8 := "IcePlanet"
	146	[3984]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	147	[3984]	TEST     	R6 0 ; if not R6 then PC := 159
	148	[3984]	JMP      	159 ; PC := 159
	149	[3985]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	150	[3985]	GETTABLE 	R6 R6 K30 ; R6 := R6["UITextures_IcePlanet"]
	151	[3985]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	152	[3985]	LOADK    	R8 := 1.000000
	153	[3985]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	154	[3985]	GETTABLE 	R9 R9 K30 ; R9 := R9["UITextures_IcePlanet"]
	155	[3985]	LEN      	R9 R9 ; R9 := # R9
	156	[3985]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	157	[3985]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	158	[3985]	JMP      	301 ; PC := 301
	159	[3986]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	160	[3986]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	161	[3986]	MOVE     	R7 R4 ; R7 := R4
	162	[3986]	LOADK    	R8 K31 ; R8 := "Corpus"
	163	[3986]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	164	[3986]	TEST     	R6 0 ; if not R6 then PC := 176
	165	[3986]	JMP      	176 ; PC := 176
	166	[3987]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	167	[3987]	GETTABLE 	R6 R6 K32 ; R6 := R6["UITextures_CorpusShip"]
	168	[3987]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	169	[3987]	LOADK    	R8 := 1.000000
	170	[3987]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	171	[3987]	GETTABLE 	R9 R9 K32 ; R9 := R9["UITextures_CorpusShip"]
	172	[3987]	LEN      	R9 R9 ; R9 := # R9
	173	[3987]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	174	[3987]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	175	[3987]	JMP      	301 ; PC := 301
	176	[3988]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	177	[3988]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	178	[3988]	MOVE     	R7 R4 ; R7 := R4
	179	[3988]	LOADK    	R8 K33 ; R8 := "Settlement"
	180	[3988]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	181	[3988]	TEST     	R6 0 ; if not R6 then PC := 193
	182	[3988]	JMP      	193 ; PC := 193
	183	[3989]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	184	[3989]	GETTABLE 	R6 R6 K34 ; R6 := R6["UITextures_Settlement"]
	185	[3989]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	186	[3989]	LOADK    	R8 := 1.000000
	187	[3989]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	188	[3989]	GETTABLE 	R9 R9 K34 ; R9 := R9["UITextures_Settlement"]
	189	[3989]	LEN      	R9 R9 ; R9 := # R9
	190	[3989]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	191	[3989]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	192	[3989]	JMP      	301 ; PC := 301
	193	[3990]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	194	[3990]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	195	[3990]	MOVE     	R7 R4 ; R7 := R4
	196	[3990]	LOADK    	R8 K35 ; R8 := "Forest"
	197	[3990]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	198	[3990]	TEST     	R6 0 ; if not R6 then PC := 210
	199	[3990]	JMP      	210 ; PC := 210
	200	[3991]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	201	[3991]	GETTABLE 	R6 R6 K36 ; R6 := R6["UITextures_GrineerForest"]
	202	[3991]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	203	[3991]	LOADK    	R8 := 1.000000
	204	[3991]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	205	[3991]	GETTABLE 	R9 R9 K36 ; R9 := R9["UITextures_GrineerForest"]
	206	[3991]	LEN      	R9 R9 ; R9 := # R9
	207	[3991]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	208	[3991]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	209	[3991]	JMP      	301 ; PC := 301
	210	[3992]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	211	[3992]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	212	[3992]	MOVE     	R7 R4 ; R7 := R4
	213	[3992]	LOADK    	R8 K37 ; R8 := "Shipyard"
	214	[3992]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	215	[3992]	TEST     	R6 0 ; if not R6 then PC := 227
	216	[3992]	JMP      	227 ; PC := 227
	217	[3993]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	218	[3993]	GETTABLE 	R6 R6 K38 ; R6 := R6["UITextures_GrineerShipyard"]
	219	[3993]	GETGLOBAL	R7 K19 ; R7 := 0x0c5e62f9
	220	[3993]	LOADK    	R8 := 1.000000
	221	[3993]	GETGLOBAL	R9 K9 ; R9 := 0x0032441c
	222	[3993]	GETTABLE 	R9 R9 K38 ; R9 := R9["UITextures_GrineerShipyard"]
	223	[3993]	LEN      	R9 R9 ; R9 := # R9
	224	[3993]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	225	[3993]	GETTABLE 	R5 R6 R7 ; R5 := R6[R7]
	226	[3993]	JMP      	301 ; PC := 301
	227	[3994]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	228	[3994]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	229	[3994]	MOVE     	R7 R4 ; R7 := R4
	230	[3994]	LOADK    	R8 K39 ; R8 := "SpaceBattles/"
	231	[3994]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	232	[3994]	TEST     	R6 0 ; if not R6 then PC := 237
	233	[3994]	JMP      	237 ; PC := 237
	234	[3995]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	235	[3995]	GETTABLE 	R5 R6 K40 ; R5 := R6["UITextures_ArchwingTrench"]
	236	[3995]	JMP      	301 ; PC := 301
	237	[3996]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	238	[3996]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	239	[3996]	MOVE     	R7 R4 ; R7 := R4
	240	[3996]	LOADK    	R8 K41 ; R8 := "GrineerOcean"
	241	[3996]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	242	[3996]	TEST     	R6 0 ; if not R6 then PC := 247
	243	[3996]	JMP      	247 ; PC := 247
	244	[3997]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	245	[3997]	GETTABLE 	R5 R6 K42 ; R5 := R6["UITextures_GrineerOcean"]
	246	[3997]	JMP      	301 ; PC := 301
	247	[3998]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	248	[3998]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	249	[3998]	MOVE     	R7 R4 ; R7 := R4
	250	[3998]	LOADK    	R8 K43 ; R8 := "OrokinMoon"
	251	[3998]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	252	[3998]	TEST     	R6 0 ; if not R6 then PC := 257
	253	[3998]	JMP      	257 ; PC := 257
	254	[3999]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	255	[3999]	GETTABLE 	R5 R6 K44 ; R5 := R6["UITextures_OrokinMoon"]
	256	[3999]	JMP      	301 ; PC := 301
	257	[4000]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	258	[4000]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	259	[4000]	MOVE     	R7 R4 ; R7 := R4
	260	[4000]	LOADK    	R8 K45 ; R8 := "OrokinTower"
	261	[4000]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	262	[4000]	TEST     	R6 0 ; if not R6 then PC := 267
	263	[4000]	JMP      	267 ; PC := 267
	264	[4001]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	265	[4001]	GETTABLE 	R5 R6 K46 ; R5 := R6["UITextures_OrokinTower"]
	266	[4001]	JMP      	301 ; PC := 301
	267	[4002]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	268	[4002]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	269	[4002]	MOVE     	R7 R4 ; R7 := R4
	270	[4002]	LOADK    	R8 K47 ; R8 := "Space/"
	271	[4002]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	272	[4002]	TEST     	R6 0 ; if not R6 then PC := 277
	273	[4002]	JMP      	277 ; PC := 277
	274	[4003]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	275	[4003]	GETTABLE 	R5 R6 K48 ; R5 := R6["UITextures_ArchwingFreeFlight"]
	276	[4003]	JMP      	301 ; PC := 301
	277	[4004]	GETGLOBAL	R6 K15 ; R6 := 0x7f5022cf
	278	[4004]	GETTABLE 	R6 R6 K16 ; R6 := R6[0xa5c556b9]
	279	[4004]	MOVE     	R7 R4 ; R7 := R4
	280	[4004]	LOADK    	R8 K49 ; R8 := "Fortress"
	281	[4004]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	282	[4004]	TEST     	R6 0 ; if not R6 then PC := 287
	283	[4004]	JMP      	287 ; PC := 287
	284	[4005]	GETGLOBAL	R6 K9 ; R6 := 0x0032441c
	285	[4005]	GETTABLE 	R5 R6 K50 ; R5 := R6["UITextures_GrineerFortress"]
	286	[4005]	JMP      	301 ; PC := 301
	287	[4006]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	288	[4006]	MOVE     	R7 R1 ; R7 := R1
	289	[4006]	CALL     	R6 2 2 ; R6 := R6(R7)
	290	[4006]	TEST     	R6 1 ; if R6 then PC := 295
	291	[4006]	JMP      	295 ; PC := 295
	292	[4006]	GETTABLE 	R6 R1 K51 ; R6 := R1["nodeType"]
	293	[4006]	EQ       	1 R6 K52 ; if R6 == 1.000000 then PC := 297
	294	[4006]	JMP      	297 ; PC := 297
	295	[4006]	EQ       	1 R3 K53 ; if R3 == nil then PC := 301
	296	[4006]	JMP      	301 ; PC := 301
	297	[4007]	GETUPVAL 	R6 U0 ; R6 := U0
	298	[4007]	GETTABLE 	R7 R1 K54 ; R7 := R1["name"]
	299	[4007]	CALL     	R6 2 2 ; R6 := R6(R7)
	300	[4007]	MOVE     	R5 R6 ; R5 := R6
	301	[4010]	RETURN   	R5 2 ; return R5 
	302	[4011]	RETURN   	R0 1 ; return 

function #224 <?:4013,4015> (8 instructions, 32 bytes at 00000160C61B9030)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4014]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[4014]	MOVE     	R5 R0 ; R5 := R0
	3	[4014]	MOVE     	R6 R1 ; R6 := R1
	4	[4014]	MOVE     	R7 R2 ; R7 := R2
	5	[4014]	MOVE     	R8 R3 ; R8 := R3
	6	[4014]	TAILCALL 	R4 5 0 ; R4,... := R4(R5,R6,R7,R8)
	7	[4014]	RETURN   	R4 0 ; return R4,... 
	8	[4015]	RETURN   	R0 1 ; return 

function #225 <?:4017,4052> (91 instructions, 364 bytes at 00000160C61B9120)
1 param, 12 slots, 1 upvalue, 0 locals, 23 constants, 0 functions
	1	[4018]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4018]	GETTABLE 	R2 R0 K1 ; R2 := R0["levelOverride"]
	3	[4018]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4018]	TEST     	R1 1 ; if R1 then PC := 13
	5	[4018]	JMP      	13 ; PC := 13
	6	[4018]	GETGLOBAL	R1 K2 ; R1 := 0x64fb1586
	7	[4018]	GETTABLE 	R2 R0 K1 ; R2 := R0["levelOverride"]
	8	[4018]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xed4e0128]
	9	[4018]	CALL     	R2 2 0 ; R2,... := R2(R3)
	10	[4018]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	11	[4018]	EQ       	1 R1 K4 ; if R1 == "/Lotus/Levels/Proc/Orokin/OrokinMoonSpy" then PC := 14
	12	[4018]	JMP      	14 ; PC := 14
	13	[4018]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 14
	14	[4018]	OP_LOADBOOL	R1 1 0 ; R1 := true
	15	[4019]	GETTABLE 	R2 R0 K5 ; R2 := R0["forceAllyFaction"]
	16	[4019]	TEST     	R2 1 ; if R2 then PC := 20
	17	[4019]	JMP      	20 ; PC := 20
	18	[4019]	TEST     	R1 0 ; if not R1 then PC := 91
	19	[4019]	JMP      	91 ; PC := 91
	20	[4020]	GETTABLE 	R2 R0 K6 ; R2 := R0["invasionAllyFaction"]
	21	[4021]	EQ       	1 R2 K8 ; if R2 == 3.000000 then PC := 25
	22	[4021]	JMP      	25 ; PC := 25
	23	[4021]	TEST     	R1 0 ; if not R1 then PC := 72
	24	[4021]	JMP      	72 ; PC := 72
	25	[4023]	GETTABLE 	R3 R0 K9 ; R3 := R0["faction"]
	26	[4023]	EQ       	0 R3 K10 ; if R3 ~= 0.000000 then PC := 30
	27	[4023]	JMP      	30 ; PC := 30
	28	[4024]	LOADK    	R2 := 1.000000
	29	[4024]	JMP      	72 ; PC := 72
	30	[4025]	GETTABLE 	R3 R0 K9 ; R3 := R0["faction"]
	31	[4025]	EQ       	0 R3 K11 ; if R3 ~= 2.000000 then PC := 71
	32	[4025]	JMP      	71 ; PC := 71
	33	[4028]	LOADK    	R3 K12 ; R3 := ""
	34	[4029]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	35	[4029]	GETTABLE 	R5 R0 K13 ; R5 := R0["enemySpec"]
	36	[4029]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[4029]	TEST     	R4 1 ; if R4 then PC := 47
	38	[4029]	JMP      	47 ; PC := 47
	39	[4030]	MOVE     	R4 R3 ; R4 := R3
	40	[4030]	GETGLOBAL	R5 K14 ; R5 := 0x7f5022cf
	41	[4030]	GETTABLE 	R5 R5 K15 ; R5 := R5[0x04981ab3]
	42	[4030]	GETTABLE 	R6 R0 K13 ; R6 := R0["enemySpec"]
	43	[4030]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0xed4e0128]
	44	[4030]	CALL     	R6 2 0 ; R6,... := R6(R7)
	45	[4030]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	46	[4030]	CONCAT   	R3 R4 R5 ; R3 := R4 .. R5
	47	[4032]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	48	[4032]	GETTABLE 	R5 R0 K16 ; R5 := R0["extraEnemySpec"]
	49	[4032]	CALL     	R4 2 2 ; R4 := R4(R5)
	50	[4032]	TEST     	R4 1 ; if R4 then PC := 60
	51	[4032]	JMP      	60 ; PC := 60
	52	[4033]	MOVE     	R4 R3 ; R4 := R3
	53	[4033]	GETGLOBAL	R5 K14 ; R5 := 0x7f5022cf
	54	[4033]	GETTABLE 	R5 R5 K15 ; R5 := R5[0x04981ab3]
	55	[4033]	GETTABLE 	R6 R0 K16 ; R6 := R0["extraEnemySpec"]
	56	[4033]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0xed4e0128]
	57	[4033]	CALL     	R6 2 0 ; R6,... := R6(R7)
	58	[4033]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	59	[4033]	CONCAT   	R3 R4 R5 ; R3 := R4 .. R5
	60	[4036]	GETGLOBAL	R4 K14 ; R4 := 0x7f5022cf
	61	[4036]	GETTABLE 	R4 R4 K17 ; R4 := R4[0xa5c556b9]
	62	[4036]	MOVE     	R5 R3 ; R5 := R3
	63	[4036]	LOADK    	R6 K18 ; R6 := "corpus"
	64	[4036]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	65	[4036]	TEST     	R4 0 ; if not R4 then PC := 69
	66	[4036]	JMP      	69 ; PC := 69
	67	[4037]	LOADK    	R2 := 1.000000
	68	[4037]	JMP      	72 ; PC := 72
	69	[4039]	LOADK    	R2 := 0.000000
	70	[4040]	JMP      	72 ; PC := 72
	71	[4042]	LOADK    	R2 := 0.000000
	72	[4046]	GETUPVAL 	R4 U0 ; R4 := U0
	73	[4046]	MOVE     	R5 R2 ; R5 := R2
	74	[4046]	CALL     	R4 2 2 ; R4 := R4(R5)
	75	[4047]	GETUPVAL 	R5 U0 ; R5 := U0
	76	[4047]	GETTABLE 	R6 R0 K9 ; R6 := R0["faction"]
	77	[4047]	CALL     	R5 2 2 ; R5 := R5(R6)
	78	[4048]	GETGLOBAL	R6 K14 ; R6 := 0x7f5022cf
	79	[4048]	GETTABLE 	R6 R6 K19 ; R6 := R6[0x3f3e4d12]
	80	[4048]	MOVE     	R7 R4 ; R7 := R4
	81	[4048]	LOADK    	R8 K20 ; R8 := " "
	82	[4048]	GETGLOBAL	R9 K21 ; R9 := 0x603636ad
	83	[4048]	LOADK    	R10 K22 ; R10 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
	84	[4048]	LOADNIL  	R11 R11 ; R11 := nil
	85	[4048]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	86	[4048]	LOADK    	R10 K20 ; R10 := " "
	87	[4048]	MOVE     	R11 R5 ; R11 := R5
	88	[4048]	CONCAT   	R7 R7 R11 ; R7 := R7 .. R8 .. R9 .. R10 .. R11
	89	[4048]	CALL     	R6 2 2 ; R6 := R6(R7)
	90	[4050]	RETURN   	R6 2 ; return R6 
	91	[4052]	RETURN   	R0 1 ; return 

function #226 <?:4054,4056> (5 instructions, 20 bytes at 00000160C61B9750)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4055]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4055]	MOVE     	R2 R0 ; R2 := R0
	3	[4055]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[4055]	RETURN   	R1 0 ; return R1,... 
	5	[4056]	RETURN   	R0 1 ; return 

function #227 <?:4058,4350> (899 instructions, 3596 bytes at 00000160C61B9840)
4 params, 60 slots, 9 upvalues, 0 locals, 150 constants, 0 functions
	1	[4059]	MOVE     	R4 R3 ; R4 := R3
	2	[4060]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	3	[4060]	MOVE     	R6 R4 ; R6 := R4
	4	[4060]	CALL     	R5 2 2 ; R5 := R5(R6)
	5	[4060]	TEST     	R5 0 ; if not R5 then PC := 10
	6	[4060]	JMP      	10 ; PC := 10
	7	[4061]	GETUPVAL 	R5 U0 ; R5 := U0
	8	[4061]	CALL     	R5 1 2 ; R5 := R5()
	9	[4062]	GETTABLE 	R4 R5 K1 ; R4 := R5["mMovie"]
	10	[4064]	LOADNIL  	R6 R6 ; R6 := nil
	11	[4065]	GETUPVAL 	R7 U1 ; R7 := U1
	12	[4065]	GETTABLE 	R8 R0 K2 ; R8 := R0["name"]
	13	[4065]	CALL     	R7 2 2 ; R7 := R7(R8)
	14	[4066]	GETUPVAL 	R8 U2 ; R8 := U2
	15	[4066]	GETTABLE 	R9 R0 K2 ; R9 := R0["name"]
	16	[4066]	CALL     	R8 2 2 ; R8 := R8(R9)
	17	[4067]	LOADNIL  	R9 R13 ; R9 := R10 := R11 := R12 := R13 := nil
	18	[4072]	GETGLOBAL	R14 K3 ; R14 := 0x64fb1586
	19	[4072]	GETTABLE 	R15 R0 K2 ; R15 := R0["name"]
	20	[4072]	CALL     	R14 2 2 ; R14 := R14(R15)
	21	[4073]	OP_LOADBOOL	R15 0 0 ; R15 := false
	22	[4074]	LOADNIL  	R16 R16 ; R16 := nil
	23	[4075]	GETTABLE 	R17 R0 K4 ; R17 := R0["radialSector"]
	24	[4076]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	25	[4076]	MOVE     	R19 R17 ; R19 := R17
	26	[4076]	CALL     	R18 2 2 ; R18 := R18(R19)
	27	[4076]	TEST     	R18 1 ; if R18 then PC := 49
	28	[4076]	JMP      	49 ; PC := 49
	29	[4077]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	30	[4077]	GETTABLE 	R19 R17 K5 ; R19 := R17["keyChain"]
	31	[4077]	CALL     	R18 2 2 ; R18 := R18(R19)
	32	[4077]	TEST     	R18 1 ; if R18 then PC := 37
	33	[4077]	JMP      	37 ; PC := 37
	34	[4078]	OP_LOADBOOL	R15 1 0 ; R15 := true
	35	[4079]	GETTABLE 	R16 R17 K5 ; R16 := R17["keyChain"]
	36	[4079]	JMP      	49 ; PC := 49
	37	[4080]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	38	[4080]	GETTABLE 	R19 R1 K6 ; R19 := R1["levelKeyName"]
	39	[4080]	CALL     	R18 2 2 ; R18 := R18(R19)
	40	[4080]	TEST     	R18 1 ; if R18 then PC := 49
	41	[4080]	JMP      	49 ; PC := 49
	42	[4081]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	43	[4081]	GETTABLE 	R19 R1 K7 ; R19 := R1["keyChainName"]
	44	[4081]	CALL     	R18 2 2 ; R18 := R18(R19)
	45	[4081]	TEST     	R18 1 ; if R18 then PC := 49
	46	[4081]	JMP      	49 ; PC := 49
	47	[4082]	OP_LOADBOOL	R15 1 0 ; R15 := true
	48	[4083]	GETTABLE 	R16 R1 K7 ; R16 := R1["keyChainName"]
	49	[4087]	GETTABLE 	R18 R0 K8 ; R18 := R0["nodeType"]
	50	[4087]	EQ       	1 R18 K10 ; if R18 == 7.000000 then PC := 53
	51	[4087]	JMP      	53 ; PC := 53
	52	[4087]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 53
	53	[4087]	OP_LOADBOOL	R18 1 0 ; R18 := true
	54	[4089]	GETTABLE 	R19 R0 K11 ; R19 := R0["reconstructionProgress"]
	55	[4089]	TEST     	R19 0 ; if not R19 then PC := 79
	56	[4089]	JMP      	79 ; PC := 79
	57	[4090]	LOADNIL  	R19 R19 ; R19 := nil
	58	[4091]	GETGLOBAL	R20 K12 ; R20 := _T
	59	[4091]	GETTABLE 	R20 R20 K13 ; R20 := R20["CachedConstructionProjects"]
	60	[4092]	LOADK    	R21 := 1.000000
	61	[4092]	LEN      	R22 R20 ; R22 := # R20
	62	[4092]	LOADK    	R23 := 1.000000
	63	[4092]	FORPREP  	R21 72 ; R21 -= R23; PC := 72
	64	[4093]	GETTABLE 	R25 R20 R24 ; R25 := R20[R24]
	65	[4094]	GETTABLE 	R26 R25 K14 ; R26 := R25["info"]
	66	[4094]	GETTABLE 	R26 R26 K15 ; R26 := R26["mNode"]
	67	[4095]	GETTABLE 	R27 R0 K2 ; R27 := R0["name"]
	68	[4095]	EQ       	0 R26 R27 ; if R26 ~= R27 then PC := 72
	69	[4095]	JMP      	72 ; PC := 72
	70	[4096]	MOVE     	R19 R25 ; R19 := R25
	71	[4097]	JMP      	73 ; PC := 73
	72	[4092]	FORLOOP  	R21 64 ; R21 += R23; if R21 <= R22 then begin PC := 64; R24 := R21 end
	73	[4101]	TEST     	R19 0 ; if not R19 then PC := 78
	74	[4101]	JMP      	78 ; PC := 78
	75	[4101]	GETTABLE 	R27 R0 K11 ; R27 := R0["reconstructionProgress"]
	76	[4101]	EQ       	1 R27 K16 ; if R27 == 1.000000 then PC := 79
	77	[4101]	JMP      	79 ; PC := 79
	78	[4102]	LOADNIL  	R8 R8 ; R8 := nil
	79	[4106]	GETTABLE 	R27 R0 K17 ; R27 := R0["locked"]
	80	[4106]	NOT      	R27 R27 ; R27 := not R27
	81	[4108]	TEST     	R15 0 ; if not R15 then PC := 85
	82	[4108]	JMP      	85 ; PC := 85
	83	[4109]	MOVE     	R6 R1 ; R6 := R1
	84	[4109]	JMP      	263 ; PC := 263
	85	[4110]	TEST     	R27 0 ; if not R27 then PC := 116
	86	[4110]	JMP      	116 ; PC := 116
	87	[4110]	GETGLOBAL	R28 K0 ; R28 := 0x7b998233
	88	[4110]	MOVE     	R29 R7 ; R29 := R7
	89	[4110]	CALL     	R28 2 2 ; R28 := R28(R29)
	90	[4110]	TEST     	R28 1 ; if R28 then PC := 116
	91	[4110]	JMP      	116 ; PC := 116
	92	[4111]	MOVE     	R6 R7 ; R6 := R7
	93	[4112]	GETGLOBAL	R28 K12 ; R28 := _T
	94	[4112]	GETTABLE 	R28 R28 K18 ; R28 := R28["CachedAlerts"]
	95	[4112]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	96	[4112]	TEST     	R28 0 ; if not R28 then PC := 263
	97	[4112]	JMP      	263 ; PC := 263
	98	[4112]	GETGLOBAL	R28 K12 ; R28 := _T
	99	[4112]	GETTABLE 	R28 R28 K18 ; R28 := R28["CachedAlerts"]
	100	[4112]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	101	[4112]	GETTABLE 	R28 R28 K19 ; R28 := R28["mVisible"]
	102	[4112]	TEST     	R28 0 ; if not R28 then PC := 263
	103	[4112]	JMP      	263 ; PC := 263
	104	[4112]	GETGLOBAL	R28 K12 ; R28 := _T
	105	[4112]	GETTABLE 	R28 R28 K18 ; R28 := R28["CachedAlerts"]
	106	[4112]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	107	[4112]	GETTABLE 	R28 R28 K20 ; R28 := R28["mAlertInfo"]
	108	[4112]	GETTABLE 	R28 R28 K21 ; R28 := R28["mTag"]
	109	[4112]	GETUPVAL 	R29 U3 ; R29 := U3
	110	[4112]	EQ       	0 R28 R29 ; if R28 ~= R29 then PC := 263
	111	[4112]	JMP      	263 ; PC := 263
	112	[4113]	GETGLOBAL	R28 K23 ; R28 := 0x0032441c
	113	[4113]	GETTABLE 	R28 R28 K24 ; R28 := R28["UITexture_Darvo"]
	114	[4113]	SETTABLE 	R6 K22 R28 ; R6["icon"] := R28
	115	[4114]	JMP      	263 ; PC := 263
	116	[4115]	TEST     	R8 0 ; if not R8 then PC := 120
	117	[4115]	JMP      	120 ; PC := 120
	118	[4116]	GETTABLE 	R6 R8 K25 ; R6 := R8["mMissionInfo"]
	119	[4116]	JMP      	263 ; PC := 263
	120	[4117]	TEST     	R27 0 ; if not R27 then PC := 151
	121	[4117]	JMP      	151 ; PC := 151
	122	[4117]	GETGLOBAL	R28 K12 ; R28 := _T
	123	[4117]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	124	[4117]	TEST     	R28 0 ; if not R28 then PC := 151
	125	[4117]	JMP      	151 ; PC := 151
	126	[4117]	GETGLOBAL	R28 K12 ; R28 := _T
	127	[4117]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	128	[4117]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	129	[4117]	TEST     	R28 0 ; if not R28 then PC := 151
	130	[4117]	JMP      	151 ; PC := 151
	131	[4117]	GETGLOBAL	R28 K12 ; R28 := _T
	132	[4117]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	133	[4117]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	134	[4117]	GETTABLE 	R28 R28 K27 ; R28 := R28["mUnlocked"]
	135	[4117]	TEST     	R28 0 ; if not R28 then PC := 151
	136	[4117]	JMP      	151 ; PC := 151
	137	[4117]	GETGLOBAL	R28 K12 ; R28 := _T
	138	[4117]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	139	[4117]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	140	[4117]	GETTABLE 	R28 R28 K28 ; R28 := R28["mShowInStarChart"]
	141	[4117]	TEST     	R28 0 ; if not R28 then PC := 151
	142	[4117]	JMP      	151 ; PC := 151
	143	[4118]	GETGLOBAL	R28 K12 ; R28 := _T
	144	[4118]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	145	[4118]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	146	[4118]	GETTABLE 	R6 R28 K25 ; R6 := R28["mMissionInfo"]
	147	[4119]	GETGLOBAL	R28 K12 ; R28 := _T
	148	[4119]	GETTABLE 	R28 R28 K26 ; R28 := R28["CachedGhostTowerMissions"]
	149	[4119]	GETTABLE 	R12 R28 R14 ; R12 := R28[R14]
	150	[4119]	JMP      	263 ; PC := 263
	151	[4120]	TEST     	R27 0 ; if not R27 then PC := 172
	152	[4120]	JMP      	172 ; PC := 172
	153	[4120]	GETGLOBAL	R28 K12 ; R28 := _T
	154	[4120]	GETTABLE 	R28 R28 K29 ; R28 := R28["CachedSyndicateMissions"]
	155	[4120]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	156	[4120]	TEST     	R28 0 ; if not R28 then PC := 172
	157	[4120]	JMP      	172 ; PC := 172
	158	[4120]	GETGLOBAL	R28 K12 ; R28 := _T
	159	[4120]	GETTABLE 	R28 R28 K29 ; R28 := R28["CachedSyndicateMissions"]
	160	[4120]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	161	[4120]	GETTABLE 	R28 R28 K19 ; R28 := R28["mVisible"]
	162	[4120]	TEST     	R28 0 ; if not R28 then PC := 172
	163	[4120]	JMP      	172 ; PC := 172
	164	[4121]	GETGLOBAL	R28 K12 ; R28 := _T
	165	[4121]	GETTABLE 	R28 R28 K29 ; R28 := R28["CachedSyndicateMissions"]
	166	[4121]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	167	[4121]	GETTABLE 	R6 R28 K25 ; R6 := R28["mMissionInfo"]
	168	[4122]	GETGLOBAL	R28 K12 ; R28 := _T
	169	[4122]	GETTABLE 	R28 R28 K29 ; R28 := R28["CachedSyndicateMissions"]
	170	[4122]	GETTABLE 	R9 R28 R14 ; R9 := R28[R14]
	171	[4122]	JMP      	263 ; PC := 263
	172	[4123]	TEST     	R27 0 ; if not R27 then PC := 193
	173	[4123]	JMP      	193 ; PC := 193
	174	[4123]	GETGLOBAL	R28 K12 ; R28 := _T
	175	[4123]	GETTABLE 	R28 R28 K30 ; R28 := R28["CachedSortieMissions"]
	176	[4123]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	177	[4123]	TEST     	R28 0 ; if not R28 then PC := 193
	178	[4123]	JMP      	193 ; PC := 193
	179	[4123]	GETGLOBAL	R28 K12 ; R28 := _T
	180	[4123]	GETTABLE 	R28 R28 K30 ; R28 := R28["CachedSortieMissions"]
	181	[4123]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	182	[4123]	GETTABLE 	R28 R28 K28 ; R28 := R28["mShowInStarChart"]
	183	[4123]	TEST     	R28 0 ; if not R28 then PC := 193
	184	[4123]	JMP      	193 ; PC := 193
	185	[4124]	GETGLOBAL	R28 K12 ; R28 := _T
	186	[4124]	GETTABLE 	R28 R28 K30 ; R28 := R28["CachedSortieMissions"]
	187	[4124]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	188	[4124]	GETTABLE 	R6 R28 K25 ; R6 := R28["mMissionInfo"]
	189	[4125]	GETGLOBAL	R28 K12 ; R28 := _T
	190	[4125]	GETTABLE 	R28 R28 K30 ; R28 := R28["CachedSortieMissions"]
	191	[4125]	GETTABLE 	R10 R28 R14 ; R10 := R28[R14]
	192	[4125]	JMP      	263 ; PC := 263
	193	[4126]	TEST     	R27 0 ; if not R27 then PC := 212
	194	[4126]	JMP      	212 ; PC := 212
	195	[4126]	GETGLOBAL	R28 K12 ; R28 := _T
	196	[4126]	GETTABLE 	R28 R28 K31 ; R28 := R28["CachedInvasionInfo"]
	197	[4126]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	198	[4126]	TEST     	R28 0 ; if not R28 then PC := 212
	199	[4126]	JMP      	212 ; PC := 212
	200	[4126]	GETGLOBAL	R28 K12 ; R28 := _T
	201	[4126]	GETTABLE 	R28 R28 K31 ; R28 := R28["CachedInvasionInfo"]
	202	[4126]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	203	[4126]	GETTABLE 	R28 R28 K32 ; R28 := R28["mEventTag"]
	204	[4126]	GETGLOBAL	R29 K33 ; R29 := EMPTY_SYMBOL
	205	[4126]	EQ       	1 R28 R29 ; if R28 == R29 then PC := 212
	206	[4126]	JMP      	212 ; PC := 212
	207	[4127]	GETGLOBAL	R28 K12 ; R28 := _T
	208	[4127]	GETTABLE 	R28 R28 K31 ; R28 := R28["CachedInvasionInfo"]
	209	[4127]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	210	[4127]	GETTABLE 	R6 R28 K34 ; R6 := R28["mAttackerMissionInfo"]
	211	[4127]	JMP      	263 ; PC := 263
	212	[4128]	TEST     	R27 0 ; if not R27 then PC := 231
	213	[4128]	JMP      	231 ; PC := 231
	214	[4128]	GETGLOBAL	R28 K12 ; R28 := _T
	215	[4128]	GETTABLE 	R28 R28 K35 ; R28 := R28["CachedActiveMissions"]
	216	[4128]	TEST     	R28 0 ; if not R28 then PC := 231
	217	[4128]	JMP      	231 ; PC := 231
	218	[4128]	GETGLOBAL	R28 K12 ; R28 := _T
	219	[4128]	GETTABLE 	R28 R28 K35 ; R28 := R28["CachedActiveMissions"]
	220	[4128]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	221	[4128]	TEST     	R28 0 ; if not R28 then PC := 231
	222	[4128]	JMP      	231 ; PC := 231
	223	[4129]	GETGLOBAL	R28 K12 ; R28 := _T
	224	[4129]	GETTABLE 	R28 R28 K35 ; R28 := R28["CachedActiveMissions"]
	225	[4129]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	226	[4129]	GETTABLE 	R6 R28 K25 ; R6 := R28["mMissionInfo"]
	227	[4130]	GETGLOBAL	R28 K12 ; R28 := _T
	228	[4130]	GETTABLE 	R28 R28 K35 ; R28 := R28["CachedActiveMissions"]
	229	[4130]	GETTABLE 	R11 R28 R14 ; R11 := R28[R14]
	230	[4130]	JMP      	263 ; PC := 263
	231	[4131]	TEST     	R27 0 ; if not R27 then PC := 262
	232	[4131]	JMP      	262 ; PC := 262
	233	[4131]	GETGLOBAL	R28 K12 ; R28 := _T
	234	[4131]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	235	[4131]	TEST     	R28 0 ; if not R28 then PC := 262
	236	[4131]	JMP      	262 ; PC := 262
	237	[4131]	GETGLOBAL	R28 K12 ; R28 := _T
	238	[4131]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	239	[4131]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	240	[4131]	TEST     	R28 0 ; if not R28 then PC := 262
	241	[4131]	JMP      	262 ; PC := 262
	242	[4131]	GETGLOBAL	R28 K12 ; R28 := _T
	243	[4131]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	244	[4131]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	245	[4131]	GETTABLE 	R28 R28 K27 ; R28 := R28["mUnlocked"]
	246	[4131]	TEST     	R28 0 ; if not R28 then PC := 262
	247	[4131]	JMP      	262 ; PC := 262
	248	[4131]	GETGLOBAL	R28 K12 ; R28 := _T
	249	[4131]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	250	[4131]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	251	[4131]	GETTABLE 	R28 R28 K28 ; R28 := R28["mShowInStarChart"]
	252	[4131]	TEST     	R28 0 ; if not R28 then PC := 262
	253	[4131]	JMP      	262 ; PC := 262
	254	[4132]	GETGLOBAL	R28 K12 ; R28 := _T
	255	[4132]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	256	[4132]	GETTABLE 	R28 R28 R14 ; R28 := R28[R14]
	257	[4132]	GETTABLE 	R6 R28 K25 ; R6 := R28["mMissionInfo"]
	258	[4133]	GETGLOBAL	R28 K12 ; R28 := _T
	259	[4133]	GETTABLE 	R28 R28 K36 ; R28 := R28["CachedEliteAlertMissions"]
	260	[4133]	GETTABLE 	R13 R28 R14 ; R13 := R28[R14]
	261	[4133]	JMP      	263 ; PC := 263
	262	[4135]	MOVE     	R6 R1 ; R6 := R1
	263	[4138]	GETUPVAL 	R28 U4 ; R28 := U4
	264	[4138]	MOVE     	R29 R6 ; R29 := R6
	265	[4138]	CALL     	R28 2 3 ; R28,R29 := R28(R29)
	266	[4139]	SELF     	R30 R4 K37 ; R31 := R4; R30 := R4[0x42b04007]
	267	[4139]	LOADK    	R32 K38 ; R32 := "/Lotus/Language/Game/MissionName_"
	268	[4139]	MOVE     	R33 R28 ; R33 := R28
	269	[4139]	CONCAT   	R32 R32 R33 ; R32 := R32 .. R33
	270	[4139]	OP_LOADBOOL	R33 0 0 ; R33 := false
	271	[4139]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	272	[4140]	TEST     	R29 0 ; if not R29 then PC := 283
	273	[4140]	JMP      	283 ; PC := 283
	274	[4141]	MOVE     	R31 R30 ; R31 := R30
	275	[4141]	LOADK    	R32 K39 ; R32 := " "
	276	[4141]	SELF     	R33 R4 K37 ; R34 := R4; R33 := R4[0x42b04007]
	277	[4141]	LOADK    	R35 K38 ; R35 := "/Lotus/Language/Game/MissionName_"
	278	[4141]	MOVE     	R36 R29 ; R36 := R29
	279	[4141]	CONCAT   	R35 R35 R36 ; R35 := R35 .. R36
	280	[4141]	OP_LOADBOOL	R36 0 0 ; R36 := false
	281	[4141]	CALL     	R33 4 2 ; R33 := R33(R34,R35,R36)
	282	[4141]	CONCAT   	R30 R31 R33 ; R30 := R31 .. R32 .. R33
	283	[4144]	LOADNIL  	R31 R31 ; R31 := nil
	284	[4145]	TEST     	R15 1 ; if R15 then PC := 295
	285	[4145]	JMP      	295 ; PC := 295
	286	[4145]	GETGLOBAL	R32 K0 ; R32 := 0x7b998233
	287	[4145]	MOVE     	R33 R7 ; R33 := R7
	288	[4145]	CALL     	R32 2 2 ; R32 := R32(R33)
	289	[4145]	TEST     	R32 0 ; if not R32 then PC := 295
	290	[4145]	JMP      	295 ; PC := 295
	291	[4146]	GETUPVAL 	R32 U5 ; R32 := U5
	292	[4146]	GETTABLE 	R33 R0 K2 ; R33 := R0["name"]
	293	[4146]	CALL     	R32 2 2 ; R32 := R32(R33)
	294	[4146]	MOVE     	R31 R32 ; R31 := R32
	295	[4149]	LOADK    	R32 := 1.000000
	296	[4150]	GETTABLE 	R33 R6 K22 ; R33 := R6["icon"]
	297	[4151]	LOADK    	R34 K40 ; R34 := ""
	298	[4152]	GETTABLE 	R35 R6 K41 ; R35 := R6["descText"]
	299	[4152]	SELF     	R35 R35 K42 ; R36 := R35; R35 := R35[0x6d604ba7]
	300	[4152]	CALL     	R35 2 2 ; R35 := R35(R36)
	301	[4153]	GETTABLE 	R36 R6 K43 ; R36 := R6["difficulty"]
	302	[4154]	GETTABLE 	R37 R6 K44 ; R37 := R6["minEnemyLevel"]
	303	[4155]	GETTABLE 	R38 R6 K45 ; R38 := R6["maxEnemyLevel"]
	304	[4156]	GETTABLE 	R39 R6 K46 ; R39 := R6["uniqueName"]
	305	[4157]	GETTABLE 	R40 R6 K47 ; R40 := R6["rarity"]
	306	[4158]	GETTABLE 	R41 R6 K48 ; R41 := R6["tag"]
	307	[4159]	LOADNIL  	R42 R42 ; R42 := nil
	308	[4161]	GETTABLE 	R43 R0 K8 ; R43 := R0["nodeType"]
	309	[4161]	EQ       	1 R43 K49 ; if R43 == 3.000000 then PC := 312
	310	[4161]	JMP      	312 ; PC := 312
	311	[4161]	OP_LOADBOOL	R43 0 1 ; R43 := false; PC := 312
	312	[4161]	OP_LOADBOOL	R43 1 0 ; R43 := true
	313	[4162]	GETGLOBAL	R44 K50 ; R44 := 0x7f5022cf
	314	[4162]	GETTABLE 	R44 R44 K51 ; R44 := R44[0xa5c556b9]
	315	[4162]	GETGLOBAL	R45 K3 ; R45 := 0x64fb1586
	316	[4162]	GETTABLE 	R46 R0 K2 ; R46 := R0["name"]
	317	[4162]	CALL     	R45 2 2 ; R45 := R45(R46)
	318	[4162]	LOADK    	R46 K52 ; R46 := "Dojo"
	319	[4162]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	320	[4162]	EQ       	0 R44 K53 ; if R44 ~= nil then PC := 323
	321	[4162]	JMP      	323 ; PC := 323
	322	[4162]	OP_LOADBOOL	R44 0 1 ; R44 := false; PC := 323
	323	[4162]	OP_LOADBOOL	R44 1 0 ; R44 := true
	324	[4164]	TEST     	R15 0 ; if not R15 then PC := 335
	325	[4164]	JMP      	335 ; PC := 335
	326	[4165]	GETGLOBAL	R45 K50 ; R45 := 0x7f5022cf
	327	[4165]	GETTABLE 	R45 R45 K54 ; R45 := R45[0x3f3e4d12]
	328	[4165]	SELF     	R46 R6 K55 ; R47 := R6; R46 := R6[0x243148d6]
	329	[4165]	CALL     	R46 2 2 ; R46 := R46(R47)
	330	[4165]	SELF     	R46 R46 K42 ; R47 := R46; R46 := R46[0x6d604ba7]
	331	[4165]	CALL     	R46 2 0 ; R46,... := R46(R47)
	332	[4165]	CALL     	R45 0 2 ; R45 := R45(R46,...)
	333	[4165]	MOVE     	R34 R45 ; R34 := R45
	334	[4165]	JMP      	679 ; PC := 679
	335	[4166]	TEST     	R43 0 ; if not R43 then PC := 360
	336	[4166]	JMP      	360 ; PC := 360
	337	[4167]	SELF     	R45 R4 K37 ; R46 := R4; R45 := R4[0x42b04007]
	338	[4167]	LOADK    	R47 K56 ; R47 := "/Lotus/Language/Menu/Chat_HubTitle"
	339	[4167]	OP_LOADBOOL	R48 0 0 ; R48 := false
	340	[4167]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	341	[4167]	MOVE     	R30 R45 ; R30 := R45
	342	[4168]	SELF     	R45 R4 K37 ; R46 := R4; R45 := R4[0x42b04007]
	343	[4168]	LOADK    	R47 K57 ; R47 := "/Lotus/Language/Bosses/Tenno"
	344	[4168]	OP_LOADBOOL	R48 0 0 ; R48 := false
	345	[4168]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	346	[4168]	MOVE     	R34 R45 ; R34 := R45
	347	[4169]	GETGLOBAL	R45 K23 ; R45 := 0x0032441c
	348	[4169]	GETTABLE 	R33 R45 K58 ; R33 := R45["UITexture_Hub"]
	349	[4170]	GETGLOBAL	R45 K50 ; R45 := 0x7f5022cf
	350	[4170]	GETTABLE 	R45 R45 K54 ; R45 := R45[0x3f3e4d12]
	351	[4170]	MOVE     	R46 R30 ; R46 := R30
	352	[4170]	CALL     	R45 2 2 ; R45 := R45(R46)
	353	[4170]	MOVE     	R30 R45 ; R30 := R45
	354	[4171]	GETGLOBAL	R45 K50 ; R45 := 0x7f5022cf
	355	[4171]	GETTABLE 	R45 R45 K54 ; R45 := R45[0x3f3e4d12]
	356	[4171]	MOVE     	R46 R34 ; R46 := R34
	357	[4171]	CALL     	R45 2 2 ; R45 := R45(R46)
	358	[4171]	MOVE     	R34 R45 ; R34 := R45
	359	[4171]	JMP      	679 ; PC := 679
	360	[4172]	TEST     	R44 0 ; if not R44 then PC := 384
	361	[4172]	JMP      	384 ; PC := 384
	362	[4173]	GETGLOBAL	R45 K59 ; R45 := 0x25d99d89
	363	[4174]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	364	[4174]	LOADK    	R48 K60 ; R48 := "/Lotus/Language/Clan/Clan_DOJO"
	365	[4174]	OP_LOADBOOL	R49 0 0 ; R49 := false
	366	[4174]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	367	[4174]	MOVE     	R30 R46 ; R30 := R46
	368	[4175]	SELF     	R46 R45 K61 ; R47 := R45; R46 := R45[0x6da6e186]
	369	[4175]	CALL     	R46 2 2 ; R46 := R46(R47)
	370	[4175]	MOVE     	R34 R46 ; R34 := R46
	371	[4176]	GETGLOBAL	R46 K23 ; R46 := 0x0032441c
	372	[4176]	GETTABLE 	R33 R46 K62 ; R33 := R46["UITexture_DefaultClan"]
	373	[4177]	GETGLOBAL	R46 K50 ; R46 := 0x7f5022cf
	374	[4177]	GETTABLE 	R46 R46 K54 ; R46 := R46[0x3f3e4d12]
	375	[4177]	MOVE     	R47 R30 ; R47 := R30
	376	[4177]	CALL     	R46 2 2 ; R46 := R46(R47)
	377	[4177]	MOVE     	R30 R46 ; R30 := R46
	378	[4178]	GETGLOBAL	R46 K50 ; R46 := 0x7f5022cf
	379	[4178]	GETTABLE 	R46 R46 K54 ; R46 := R46[0x3f3e4d12]
	380	[4178]	MOVE     	R47 R34 ; R47 := R34
	381	[4178]	CALL     	R46 2 2 ; R46 := R46(R47)
	382	[4178]	MOVE     	R34 R46 ; R34 := R46
	383	[4178]	JMP      	679 ; PC := 679
	384	[4179]	GETTABLE 	R46 R0 K8 ; R46 := R0["nodeType"]
	385	[4179]	EQ       	0 R46 K63 ; if R46 ~= 2.000000 then PC := 405
	386	[4179]	JMP      	405 ; PC := 405
	387	[4180]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	388	[4180]	LOADK    	R48 K64 ; R48 := "/Lotus/Language/Menu/MissionIntro_PVP"
	389	[4180]	OP_LOADBOOL	R49 0 0 ; R49 := false
	390	[4180]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	391	[4180]	MOVE     	R30 R46 ; R30 := R46
	392	[4181]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	393	[4181]	LOADK    	R48 K65 ; R48 := "/Lotus/Language/Menu/Codex_Tenno"
	394	[4181]	OP_LOADBOOL	R49 0 0 ; R49 := false
	395	[4181]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	396	[4181]	MOVE     	R34 R46 ; R34 := R46
	397	[4182]	GETGLOBAL	R46 K23 ; R46 := 0x0032441c
	398	[4182]	GETTABLE 	R33 R46 K66 ; R33 := R46["UITexture_Pvp"]
	399	[4183]	GETGLOBAL	R46 K50 ; R46 := 0x7f5022cf
	400	[4183]	GETTABLE 	R46 R46 K54 ; R46 := R46[0x3f3e4d12]
	401	[4183]	MOVE     	R47 R34 ; R47 := R34
	402	[4183]	CALL     	R46 2 2 ; R46 := R46(R47)
	403	[4183]	MOVE     	R34 R46 ; R34 := R46
	404	[4183]	JMP      	679 ; PC := 679
	405	[4184]	EQ       	1 R31 K53 ; if R31 == nil then PC := 483
	406	[4184]	JMP      	483 ; PC := 483
	407	[4185]	GETTABLE 	R46 R31 K67 ; R46 := R31["mFaction"]
	408	[4185]	EQ       	0 R46 K63 ; if R46 ~= 2.000000 then PC := 422
	409	[4185]	JMP      	422 ; PC := 422
	410	[4186]	GETUPVAL 	R46 U4 ; R46 := U4
	411	[4186]	GETTABLE 	R47 R31 K68 ; R47 := R31["mDefenderMissionInfo"]
	412	[4186]	CALL     	R46 2 2 ; R46 := R46(R47)
	413	[4186]	MOVE     	R28 R46 ; R28 := R46
	414	[4187]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	415	[4187]	LOADK    	R48 K38 ; R48 := "/Lotus/Language/Game/MissionName_"
	416	[4187]	MOVE     	R49 R28 ; R49 := R28
	417	[4187]	CONCAT   	R48 R48 R49 ; R48 := R48 .. R49
	418	[4187]	OP_LOADBOOL	R49 0 0 ; R49 := false
	419	[4187]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	420	[4187]	MOVE     	R30 R46 ; R30 := R46
	421	[4187]	JMP      	431 ; PC := 431
	422	[4188]	GETTABLE 	R46 R31 K32 ; R46 := R31["mEventTag"]
	423	[4188]	GETGLOBAL	R47 K33 ; R47 := EMPTY_SYMBOL
	424	[4188]	EQ       	0 R46 R47 ; if R46 ~= R47 then PC := 431
	425	[4188]	JMP      	431 ; PC := 431
	426	[4189]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	427	[4189]	LOADK    	R48 K69 ; R48 := "/Lotus/Language/Menu/MissionIntro_Invasion"
	428	[4189]	OP_LOADBOOL	R49 0 0 ; R49 := false
	429	[4189]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	430	[4189]	MOVE     	R30 R46 ; R30 := R46
	431	[4191]	GETTABLE 	R46 R31 K68 ; R46 := R31["mDefenderMissionInfo"]
	432	[4191]	SELF     	R46 R46 K55 ; R47 := R46; R46 := R46[0x243148d6]
	433	[4191]	CALL     	R46 2 2 ; R46 := R46(R47)
	434	[4191]	SELF     	R46 R46 K42 ; R47 := R46; R46 := R46[0x6d604ba7]
	435	[4191]	CALL     	R46 2 2 ; R46 := R46(R47)
	436	[4191]	MOVE     	R34 R46 ; R34 := R46
	437	[4192]	GETGLOBAL	R46 K23 ; R46 := 0x0032441c
	438	[4192]	GETTABLE 	R33 R46 K70 ; R33 := R46["UITexture_Invasion"]
	439	[4193]	GETGLOBAL	R46 K50 ; R46 := 0x7f5022cf
	440	[4193]	GETTABLE 	R46 R46 K54 ; R46 := R46[0x3f3e4d12]
	441	[4193]	MOVE     	R47 R34 ; R47 := R34
	442	[4193]	CALL     	R46 2 2 ; R46 := R46(R47)
	443	[4193]	MOVE     	R34 R46 ; R34 := R46
	444	[4194]	LOADK    	R39 K40 ; R39 := ""
	445	[4195]	GETTABLE 	R46 R31 K34 ; R46 := R31["mAttackerMissionInfo"]
	446	[4195]	GETTABLE 	R37 R46 K44 ; R37 := R46["minEnemyLevel"]
	447	[4196]	GETTABLE 	R46 R31 K34 ; R46 := R31["mAttackerMissionInfo"]
	448	[4196]	GETTABLE 	R38 R46 K45 ; R38 := R46["maxEnemyLevel"]
	449	[4198]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	450	[4198]	MOVE     	R47 R2 ; R47 := R2
	451	[4198]	CALL     	R46 2 2 ; R46 := R46(R47)
	452	[4198]	TEST     	R46 1 ; if R46 then PC := 679
	453	[4198]	JMP      	679 ; PC := 679
	454	[4198]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	455	[4198]	GETTABLE 	R47 R31 K68 ; R47 := R31["mDefenderMissionInfo"]
	456	[4198]	GETTABLE 	R47 R47 K71 ; R47 := R47["vipAgent"]
	457	[4198]	CALL     	R46 2 2 ; R46 := R46(R47)
	458	[4198]	TEST     	R46 1 ; if R46 then PC := 679
	459	[4198]	JMP      	679 ; PC := 679
	460	[4198]	GETTABLE 	R46 R31 K32 ; R46 := R31["mEventTag"]
	461	[4198]	GETGLOBAL	R47 K33 ; R47 := EMPTY_SYMBOL
	462	[4198]	EQ       	0 R46 R47 ; if R46 ~= R47 then PC := 679
	463	[4198]	JMP      	679 ; PC := 679
	464	[4199]	SELF     	R46 R2 K72 ; R47 := R2; R46 := R2[0xd94900e4]
	465	[4199]	GETTABLE 	R48 R31 K68 ; R48 := R31["mDefenderMissionInfo"]
	466	[4199]	GETTABLE 	R48 R48 K71 ; R48 := R48["vipAgent"]
	467	[4199]	CALL     	R46 3 2 ; R46 := R46(R47,R48)
	468	[4199]	MOVE     	R42 R46 ; R42 := R46
	469	[4200]	GETTABLE 	R46 R42 K73 ; R46 := R42["locName"]
	470	[4200]	GETGLOBAL	R47 K33 ; R47 := EMPTY_SYMBOL
	471	[4200]	EQ       	1 R46 R47 ; if R46 == R47 then PC := 679
	472	[4200]	JMP      	679 ; PC := 679
	473	[4201]	SELF     	R46 R4 K37 ; R47 := R4; R46 := R4[0x42b04007]
	474	[4201]	GETTABLE 	R48 R42 K73 ; R48 := R42["locName"]
	475	[4201]	SELF     	R48 R48 K42 ; R49 := R48; R48 := R48[0x6d604ba7]
	476	[4201]	CALL     	R48 2 2 ; R48 := R48(R49)
	477	[4201]	OP_LOADBOOL	R49 0 0 ; R49 := false
	478	[4201]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	479	[4201]	MOVE     	R34 R46 ; R34 := R46
	480	[4202]	GETTABLE 	R33 R42 K22 ; R33 := R42["icon"]
	481	[4203]	LOADK    	R39 K40 ; R39 := ""
	482	[4205]	JMP      	679 ; PC := 679
	483	[4207]	EQ       	1 R8 K53 ; if R8 == nil then PC := 574
	484	[4207]	JMP      	574 ; PC := 574
	485	[4209]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	486	[4209]	GETTABLE 	R47 R8 K74 ; R47 := R8["mMissionKeyName"]
	487	[4209]	CALL     	R46 2 2 ; R46 := R46(R47)
	488	[4209]	TEST     	R46 1 ; if R46 then PC := 544
	489	[4209]	JMP      	544 ; PC := 544
	490	[4210]	GETGLOBAL	R46 K75 ; R46 := 0xb009bbc6
	491	[4210]	GETTABLE 	R47 R8 K74 ; R47 := R8["mMissionKeyName"]
	492	[4210]	CALL     	R46 2 2 ; R46 := R46(R47)
	493	[4211]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	494	[4211]	MOVE     	R48 R46 ; R48 := R46
	495	[4211]	CALL     	R47 2 2 ; R47 := R47(R48)
	496	[4211]	TEST     	R47 1 ; if R47 then PC := 549
	497	[4211]	JMP      	549 ; PC := 549
	498	[4212]	SELF     	R47 R46 K76 ; R48 := R46; R47 := R46[0xef893aec]
	499	[4212]	CALL     	R47 2 2 ; R47 := R47(R48)
	500	[4212]	MOVE     	R6 R47 ; R6 := R47
	501	[4213]	GETTABLE 	R47 R8 K25 ; R47 := R8["mMissionInfo"]
	502	[4213]	GETTABLE 	R47 R47 K44 ; R47 := R47["minEnemyLevel"]
	503	[4213]	LT       	0 K16 R47 ; if 1.000000 >= R47 then PC := 508
	504	[4213]	JMP      	508 ; PC := 508
	505	[4214]	GETTABLE 	R47 R8 K25 ; R47 := R8["mMissionInfo"]
	506	[4214]	GETTABLE 	R47 R47 K44 ; R47 := R47["minEnemyLevel"]
	507	[4214]	SETTABLE 	R6 K44 R47 ; R6["minEnemyLevel"] := R47
	508	[4216]	GETTABLE 	R47 R8 K25 ; R47 := R8["mMissionInfo"]
	509	[4216]	GETTABLE 	R47 R47 K45 ; R47 := R47["maxEnemyLevel"]
	510	[4216]	LT       	0 K16 R47 ; if 1.000000 >= R47 then PC := 515
	511	[4216]	JMP      	515 ; PC := 515
	512	[4217]	GETTABLE 	R47 R8 K25 ; R47 := R8["mMissionInfo"]
	513	[4217]	GETTABLE 	R47 R47 K45 ; R47 := R47["maxEnemyLevel"]
	514	[4217]	SETTABLE 	R6 K45 R47 ; R6["maxEnemyLevel"] := R47
	515	[4219]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	516	[4219]	GETTABLE 	R48 R8 K25 ; R48 := R8["mMissionInfo"]
	517	[4219]	GETTABLE 	R48 R48 K77 ; R48 := R48["enemySpec"]
	518	[4219]	CALL     	R47 2 2 ; R47 := R47(R48)
	519	[4219]	TEST     	R47 1 ; if R47 then PC := 524
	520	[4219]	JMP      	524 ; PC := 524
	521	[4220]	GETTABLE 	R47 R8 K25 ; R47 := R8["mMissionInfo"]
	522	[4220]	GETTABLE 	R47 R47 K77 ; R47 := R47["enemySpec"]
	523	[4220]	SETTABLE 	R6 K77 R47 ; R6["enemySpec"] := R47
	524	[4222]	GETTABLE 	R37 R6 K44 ; R37 := R6["minEnemyLevel"]
	525	[4223]	GETTABLE 	R38 R6 K45 ; R38 := R6["maxEnemyLevel"]
	526	[4224]	SELF     	R47 R6 K55 ; R48 := R6; R47 := R6[0x243148d6]
	527	[4224]	CALL     	R47 2 2 ; R47 := R47(R48)
	528	[4224]	SELF     	R47 R47 K42 ; R48 := R47; R47 := R47[0x6d604ba7]
	529	[4224]	CALL     	R47 2 2 ; R47 := R47(R48)
	530	[4224]	MOVE     	R34 R47 ; R34 := R47
	531	[4225]	GETUPVAL 	R47 U4 ; R47 := U4
	532	[4225]	MOVE     	R48 R6 ; R48 := R6
	533	[4225]	CALL     	R47 2 2 ; R47 := R47(R48)
	534	[4225]	MOVE     	R28 R47 ; R28 := R47
	535	[4226]	SELF     	R47 R4 K37 ; R48 := R4; R47 := R4[0x42b04007]
	536	[4226]	LOADK    	R49 K38 ; R49 := "/Lotus/Language/Game/MissionName_"
	537	[4226]	MOVE     	R50 R28 ; R50 := R28
	538	[4226]	CONCAT   	R49 R49 R50 ; R49 := R49 .. R50
	539	[4226]	OP_LOADBOOL	R50 0 0 ; R50 := false
	540	[4226]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	541	[4226]	MOVE     	R30 R47 ; R30 := R47
	542	[4227]	LOADK    	R39 K40 ; R39 := ""
	543	[4228]	JMP      	549 ; PC := 549
	544	[4231]	SELF     	R47 R4 K37 ; R48 := R4; R47 := R4[0x42b04007]
	545	[4231]	GETTABLE 	R49 R8 K78 ; R49 := R8["mDesc"]
	546	[4231]	OP_LOADBOOL	R50 0 0 ; R50 := false
	547	[4231]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	548	[4231]	MOVE     	R30 R47 ; R30 := R47
	549	[4235]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	550	[4235]	GETTABLE 	R48 R6 K77 ; R48 := R6["enemySpec"]
	551	[4235]	CALL     	R47 2 2 ; R47 := R47(R48)
	552	[4235]	TEST     	R47 1 ; if R47 then PC := 563
	553	[4235]	JMP      	563 ; PC := 563
	554	[4235]	GETGLOBAL	R47 K3 ; R47 := 0x64fb1586
	555	[4235]	GETTABLE 	R48 R6 K77 ; R48 := R6["enemySpec"]
	556	[4235]	SELF     	R48 R48 K79 ; R49 := R48; R48 := R48[0xed4e0128]
	557	[4235]	CALL     	R48 2 0 ; R48,... := R48(R49)
	558	[4235]	CALL     	R47 0 2 ; R47 := R47(R48,...)
	559	[4235]	EQ       	0 R47 K80 ; if R47 ~= "/Lotus/Types/Game/EnemySpecs/GrineerEventSquadM" then PC := 563
	560	[4235]	JMP      	563 ; PC := 563
	561	[4236]	LOADK    	R34 K40 ; R34 := ""
	562	[4236]	JMP      	568 ; PC := 568
	563	[4238]	SELF     	R47 R6 K55 ; R48 := R6; R47 := R6[0x243148d6]
	564	[4238]	CALL     	R47 2 2 ; R47 := R47(R48)
	565	[4238]	SELF     	R47 R47 K42 ; R48 := R47; R47 := R47[0x6d604ba7]
	566	[4238]	CALL     	R47 2 2 ; R47 := R47(R48)
	567	[4238]	MOVE     	R34 R47 ; R34 := R47
	568	[4240]	GETGLOBAL	R47 K50 ; R47 := 0x7f5022cf
	569	[4240]	GETTABLE 	R47 R47 K54 ; R47 := R47[0x3f3e4d12]
	570	[4240]	MOVE     	R48 R34 ; R48 := R34
	571	[4240]	CALL     	R47 2 2 ; R47 := R47(R48)
	572	[4240]	MOVE     	R34 R47 ; R34 := R47
	573	[4240]	JMP      	679 ; PC := 679
	574	[4242]	GETTABLE 	R47 R6 K81 ; R47 := R6["missionType"]
	575	[4242]	EQ       	0 R47 K82 ; if R47 ~= 0.000000 then PC := 615
	576	[4242]	JMP      	615 ; PC := 615
	577	[4244]	OP_LOADBOOL	R47 0 0 ; R47 := false
	578	[4245]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	579	[4245]	MOVE     	R49 R2 ; R49 := R2
	580	[4245]	CALL     	R48 2 2 ; R48 := R48(R49)
	581	[4245]	TEST     	R48 1 ; if R48 then PC := 606
	582	[4245]	JMP      	606 ; PC := 606
	583	[4245]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	584	[4245]	GETTABLE 	R49 R6 K71 ; R49 := R6["vipAgent"]
	585	[4245]	CALL     	R48 2 2 ; R48 := R48(R49)
	586	[4245]	TEST     	R48 1 ; if R48 then PC := 606
	587	[4245]	JMP      	606 ; PC := 606
	588	[4246]	SELF     	R48 R2 K72 ; R49 := R2; R48 := R2[0xd94900e4]
	589	[4246]	GETTABLE 	R50 R6 K71 ; R50 := R6["vipAgent"]
	590	[4246]	CALL     	R48 3 2 ; R48 := R48(R49,R50)
	591	[4246]	MOVE     	R42 R48 ; R42 := R48
	592	[4247]	GETTABLE 	R48 R42 K73 ; R48 := R42["locName"]
	593	[4247]	GETGLOBAL	R49 K33 ; R49 := EMPTY_SYMBOL
	594	[4247]	EQ       	1 R48 R49 ; if R48 == R49 then PC := 606
	595	[4247]	JMP      	606 ; PC := 606
	596	[4248]	OP_LOADBOOL	R47 1 0 ; R47 := true
	597	[4249]	SELF     	R48 R4 K37 ; R49 := R4; R48 := R4[0x42b04007]
	598	[4249]	GETTABLE 	R50 R42 K73 ; R50 := R42["locName"]
	599	[4249]	SELF     	R50 R50 K42 ; R51 := R50; R50 := R50[0x6d604ba7]
	600	[4249]	CALL     	R50 2 2 ; R50 := R50(R51)
	601	[4249]	OP_LOADBOOL	R51 0 0 ; R51 := false
	602	[4249]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	603	[4249]	MOVE     	R34 R48 ; R34 := R48
	604	[4250]	GETTABLE 	R33 R42 K22 ; R33 := R42["icon"]
	605	[4251]	LOADK    	R39 K40 ; R39 := ""
	606	[4255]	TEST     	R47 1 ; if R47 then PC := 679
	607	[4255]	JMP      	679 ; PC := 679
	608	[4256]	SELF     	R48 R4 K37 ; R49 := R4; R48 := R4[0x42b04007]
	609	[4256]	GETTABLE 	R50 R6 K46 ; R50 := R6["uniqueName"]
	610	[4256]	OP_LOADBOOL	R51 0 0 ; R51 := false
	611	[4256]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	612	[4256]	MOVE     	R34 R48 ; R34 := R48
	613	[4257]	GETTABLE 	R33 R6 K22 ; R33 := R6["icon"]
	614	[4258]	JMP      	679 ; PC := 679
	615	[4260]	GETTABLE 	R48 R0 K2 ; R48 := R0["name"]
	616	[4260]	GETGLOBAL	R49 K83 ; R49 := APARTMENT_NODE_TAG
	617	[4260]	EQ       	0 R48 R49 ; if R48 ~= R49 then PC := 622
	618	[4260]	JMP      	622 ; PC := 622
	619	[4261]	LOADK    	R30 K40 ; R30 := ""
	620	[4262]	LOADK    	R34 K40 ; R34 := ""
	621	[4262]	JMP      	679 ; PC := 679
	622	[4266]	GETGLOBAL	R48 K12 ; R48 := _T
	623	[4266]	GETTABLE 	R48 R48 K18 ; R48 := R48["CachedAlerts"]
	624	[4266]	GETTABLE 	R49 R0 K2 ; R49 := R0["name"]
	625	[4266]	GETTABLE 	R48 R48 R49 ; R48 := R48[R49]
	626	[4266]	TEST     	R48 0 ; if not R48 then PC := 660
	627	[4266]	JMP      	660 ; PC := 660
	628	[4266]	GETGLOBAL	R48 K12 ; R48 := _T
	629	[4266]	GETTABLE 	R48 R48 K18 ; R48 := R48["CachedAlerts"]
	630	[4266]	GETTABLE 	R49 R0 K2 ; R49 := R0["name"]
	631	[4266]	GETTABLE 	R48 R48 R49 ; R48 := R48[R49]
	632	[4266]	GETTABLE 	R48 R48 K20 ; R48 := R48["mAlertInfo"]
	633	[4266]	GETTABLE 	R48 R48 K21 ; R48 := R48["mTag"]
	634	[4266]	GETGLOBAL	R49 K33 ; R49 := EMPTY_SYMBOL
	635	[4266]	EQ       	1 R48 R49 ; if R48 == R49 then PC := 660
	636	[4266]	JMP      	660 ; PC := 660
	637	[4266]	GETGLOBAL	R48 K12 ; R48 := _T
	638	[4266]	GETTABLE 	R48 R48 K18 ; R48 := R48["CachedAlerts"]
	639	[4266]	GETTABLE 	R49 R0 K2 ; R49 := R0["name"]
	640	[4266]	GETTABLE 	R48 R48 R49 ; R48 := R48[R49]
	641	[4266]	GETTABLE 	R48 R48 K20 ; R48 := R48["mAlertInfo"]
	642	[4266]	GETTABLE 	R48 R48 K25 ; R48 := R48["mMissionInfo"]
	643	[4266]	GETTABLE 	R48 R48 K41 ; R48 := R48["descText"]
	644	[4266]	GETGLOBAL	R49 K33 ; R49 := EMPTY_SYMBOL
	645	[4266]	EQ       	1 R48 R49 ; if R48 == R49 then PC := 660
	646	[4266]	JMP      	660 ; PC := 660
	647	[4267]	GETGLOBAL	R48 K84 ; R48 := 0x603636ad
	648	[4267]	GETGLOBAL	R49 K3 ; R49 := 0x64fb1586
	649	[4267]	GETGLOBAL	R50 K12 ; R50 := _T
	650	[4267]	GETTABLE 	R50 R50 K18 ; R50 := R50["CachedAlerts"]
	651	[4267]	GETTABLE 	R51 R0 K2 ; R51 := R0["name"]
	652	[4267]	GETTABLE 	R50 R50 R51 ; R50 := R50[R51]
	653	[4267]	GETTABLE 	R50 R50 K20 ; R50 := R50["mAlertInfo"]
	654	[4267]	GETTABLE 	R50 R50 K25 ; R50 := R50["mMissionInfo"]
	655	[4267]	GETTABLE 	R50 R50 K41 ; R50 := R50["descText"]
	656	[4267]	CALL     	R49 2 2 ; R49 := R49(R50)
	657	[4267]	OP_LOADBOOL	R50 0 0 ; R50 := false
	658	[4267]	CALL     	R48 3 2 ; R48 := R48(R49,R50)
	659	[4267]	MOVE     	R39 R48 ; R39 := R48
	660	[4270]	SELF     	R48 R6 K55 ; R49 := R6; R48 := R6[0x243148d6]
	661	[4270]	CALL     	R48 2 2 ; R48 := R48(R49)
	662	[4270]	SELF     	R48 R48 K42 ; R49 := R48; R48 := R48[0x6d604ba7]
	663	[4270]	CALL     	R48 2 2 ; R48 := R48(R49)
	664	[4270]	MOVE     	R34 R48 ; R34 := R48
	665	[4271]	TEST     	R18 0 ; if not R18 then PC := 668
	666	[4271]	JMP      	668 ; PC := 668
	667	[4272]	LOADK    	R34 K85 ; R34 := "TENNO"
	668	[4274]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	669	[4274]	MOVE     	R49 R33 ; R49 := R33
	670	[4274]	CALL     	R48 2 2 ; R48 := R48(R49)
	671	[4274]	TEST     	R48 0 ; if not R48 then PC := 674
	672	[4274]	JMP      	674 ; PC := 674
	673	[4275]	LOADNIL  	R33 R33 ; R33 := nil
	674	[4277]	GETGLOBAL	R48 K50 ; R48 := 0x7f5022cf
	675	[4277]	GETTABLE 	R48 R48 K54 ; R48 := R48[0x3f3e4d12]
	676	[4277]	MOVE     	R49 R34 ; R49 := R34
	677	[4277]	CALL     	R48 2 2 ; R48 := R48(R49)
	678	[4277]	MOVE     	R34 R48 ; R34 := R48
	679	[4280]	GETGLOBAL	R48 K50 ; R48 := 0x7f5022cf
	680	[4280]	GETTABLE 	R48 R48 K86 ; R48 := R48[0x41e2ae25]
	681	[4280]	MOVE     	R49 R39 ; R49 := R39
	682	[4280]	CALL     	R48 2 2 ; R48 := R48(R49)
	683	[4280]	LT       	0 K82 R48 ; if 0.000000 >= R48 then PC := 685
	684	[4280]	JMP      	685 ; PC := 685
	685	[4284]	GETUPVAL 	R48 U6 ; R48 := U6
	686	[4284]	GETTABLE 	R48 R48 K87 ; R48 := R48[0x06d055f9]
	687	[4284]	GETGLOBAL	R49 K88 ; R49 := 0x34291f5c
	688	[4284]	GETTABLE 	R49 R49 K89 ; R49 := R49[0xa7a2e381]
	689	[4284]	CALL     	R49 1 2 ; R49 := R49()
	690	[4284]	LOADK    	R50 K40 ; R50 := ""
	691	[4284]	GETTABLE 	R51 R0 K90 ; R51 := R0["founders"]
	692	[4284]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	693	[4286]	LOADNIL  	R49 R49 ; R49 := nil
	694	[4288]	GETGLOBAL	R50 K0 ; R50 := 0x7b998233
	695	[4288]	GETTABLE 	R51 R6 K91 ; R51 := R6["levelOverride"]
	696	[4288]	CALL     	R50 2 2 ; R50 := R50(R51)
	697	[4288]	TEST     	R50 1 ; if R50 then PC := 709
	698	[4288]	JMP      	709 ; PC := 709
	699	[4289]	GETGLOBAL	R50 K92 ; R50 := 0x4f6851ff
	700	[4289]	GETTABLE 	R51 R6 K93 ; R51 := R6["seed"]
	701	[4289]	CALL     	R50 2 1 ; R50(R51)
	702	[4290]	GETUPVAL 	R50 U7 ; R50 := U7
	703	[4290]	MOVE     	R51 R6 ; R51 := R6
	704	[4290]	MOVE     	R52 R0 ; R52 := R0
	705	[4290]	MOVE     	R53 R42 ; R53 := R42
	706	[4290]	MOVE     	R54 R8 ; R54 := R8
	707	[4290]	CALL     	R50 5 2 ; R50 := R50(R51,R52,R53,R54)
	708	[4290]	MOVE     	R49 R50 ; R49 := R50
	709	[4293]	LOADNIL  	R50 R50 ; R50 := nil
	710	[4294]	EQ       	0 R34 K94 ; if R34 ~= "GRINEER" then PC := 719
	711	[4294]	JMP      	719 ; PC := 719
	712	[4295]	MOVE     	R50 R34 ; R50 := R34
	713	[4296]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	714	[4296]	LOADK    	R53 K95 ; R53 := "/Lotus/Language/Game/Faction_GrineerUC"
	715	[4296]	OP_LOADBOOL	R54 0 0 ; R54 := false
	716	[4296]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	717	[4296]	MOVE     	R34 R51 ; R34 := R51
	718	[4296]	JMP      	784 ; PC := 784
	719	[4297]	EQ       	0 R34 K96 ; if R34 ~= "CORPUS" then PC := 728
	720	[4297]	JMP      	728 ; PC := 728
	721	[4298]	MOVE     	R50 R34 ; R50 := R34
	722	[4299]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	723	[4299]	LOADK    	R53 K97 ; R53 := "/Lotus/Language/Game/Faction_CorpusUC"
	724	[4299]	OP_LOADBOOL	R54 0 0 ; R54 := false
	725	[4299]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	726	[4299]	MOVE     	R34 R51 ; R34 := R51
	727	[4299]	JMP      	784 ; PC := 784
	728	[4300]	EQ       	0 R34 K98 ; if R34 ~= "INFESTATION" then PC := 737
	729	[4300]	JMP      	737 ; PC := 737
	730	[4301]	MOVE     	R50 R34 ; R50 := R34
	731	[4302]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	732	[4302]	LOADK    	R53 K99 ; R53 := "/Lotus/Language/Game/Faction_InfestationUC"
	733	[4302]	OP_LOADBOOL	R54 0 0 ; R54 := false
	734	[4302]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	735	[4302]	MOVE     	R34 R51 ; R34 := R51
	736	[4302]	JMP      	784 ; PC := 784
	737	[4303]	EQ       	0 R34 K85 ; if R34 ~= "TENNO" then PC := 746
	738	[4303]	JMP      	746 ; PC := 746
	739	[4304]	MOVE     	R50 R34 ; R50 := R34
	740	[4305]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	741	[4305]	LOADK    	R53 K65 ; R53 := "/Lotus/Language/Menu/Codex_Tenno"
	742	[4305]	OP_LOADBOOL	R54 0 0 ; R54 := false
	743	[4305]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	744	[4305]	MOVE     	R34 R51 ; R34 := R51
	745	[4305]	JMP      	784 ; PC := 784
	746	[4306]	EQ       	0 R34 K100 ; if R34 ~= "WILD" then PC := 754
	747	[4306]	JMP      	754 ; PC := 754
	748	[4307]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	749	[4307]	LOADK    	R53 K101 ; R53 := "/Lotus/Language/Game/Faction_WildUC"
	750	[4307]	OP_LOADBOOL	R54 0 0 ; R54 := false
	751	[4307]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	752	[4307]	MOVE     	R34 R51 ; R34 := R51
	753	[4307]	JMP      	784 ; PC := 784
	754	[4308]	EQ       	0 R34 K102 ; if R34 ~= "OROKIN" then PC := 763
	755	[4308]	JMP      	763 ; PC := 763
	756	[4309]	MOVE     	R50 R34 ; R50 := R34
	757	[4310]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	758	[4310]	LOADK    	R53 K103 ; R53 := "/Lotus/Language/Game/Faction_OrokinUC"
	759	[4310]	OP_LOADBOOL	R54 0 0 ; R54 := false
	760	[4310]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	761	[4310]	MOVE     	R34 R51 ; R34 := R51
	762	[4310]	JMP      	784 ; PC := 784
	763	[4311]	EQ       	0 R34 K104 ; if R34 ~= "REDVEIL" then PC := 771
	764	[4311]	JMP      	771 ; PC := 771
	765	[4312]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	766	[4312]	LOADK    	R53 K105 ; R53 := "/Lotus/Language/Game/Faction_RedVeilUC"
	767	[4312]	OP_LOADBOOL	R54 0 0 ; R54 := false
	768	[4312]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	769	[4312]	MOVE     	R34 R51 ; R34 := R51
	770	[4312]	JMP      	784 ; PC := 784
	771	[4313]	EQ       	0 R34 K106 ; if R34 ~= "SENTIENT" then PC := 779
	772	[4313]	JMP      	779 ; PC := 779
	773	[4314]	SELF     	R51 R4 K37 ; R52 := R4; R51 := R4[0x42b04007]
	774	[4314]	LOADK    	R53 K107 ; R53 := "/Lotus/Language/Game/Faction_SentientUC"
	775	[4314]	OP_LOADBOOL	R54 0 0 ; R54 := false
	776	[4314]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	777	[4314]	MOVE     	R34 R51 ; R34 := R51
	778	[4314]	JMP      	784 ; PC := 784
	779	[4316]	GETGLOBAL	R51 K50 ; R51 := 0x7f5022cf
	780	[4316]	GETTABLE 	R51 R51 K54 ; R51 := R51[0x3f3e4d12]
	781	[4316]	MOVE     	R52 R34 ; R52 := R34
	782	[4316]	CALL     	R51 2 2 ; R51 := R51(R52)
	783	[4316]	MOVE     	R34 R51 ; R34 := R51
	784	[4319]	EQ       	1 R17 K53 ; if R17 == nil then PC := 807
	785	[4319]	JMP      	807 ; PC := 807
	786	[4320]	GETTABLE 	R51 R17 K2 ; R51 := R17["name"]
	787	[4320]	GETGLOBAL	R52 K108 ; R52 := CETUS_NODE_TAG
	788	[4320]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 792
	789	[4320]	JMP      	792 ; PC := 792
	790	[4321]	LOADK    	R50 K109 ; R50 := "ostron"
	791	[4321]	JMP      	807 ; PC := 807
	792	[4322]	GETTABLE 	R51 R17 K2 ; R51 := R17["name"]
	793	[4322]	GETGLOBAL	R52 K110 ; R52 := FORTUNA_NODE_TAG
	794	[4322]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 798
	795	[4322]	JMP      	798 ; PC := 798
	796	[4323]	LOADK    	R50 K111 ; R50 := "solaris"
	797	[4323]	JMP      	807 ; PC := 807
	798	[4324]	GETTABLE 	R51 R17 K2 ; R51 := R17["name"]
	799	[4324]	GETGLOBAL	R52 K112 ; R52 := IRON_WAKE_NODE_TAG
	800	[4324]	EQ       	1 R51 R52 ; if R51 == R52 then PC := 806
	801	[4324]	JMP      	806 ; PC := 806
	802	[4324]	GETTABLE 	R51 R17 K2 ; R51 := R17["name"]
	803	[4324]	GETGLOBAL	R52 K83 ; R52 := APARTMENT_NODE_TAG
	804	[4324]	EQ       	0 R51 R52 ; if R51 ~= R52 then PC := 807
	805	[4324]	JMP      	807 ; PC := 807
	806	[4325]	LOADK    	R50 K113 ; R50 := "tenno"
	807	[4329]	TEST     	R43 1 ; if R43 then PC := 811
	808	[4329]	JMP      	811 ; PC := 811
	809	[4329]	TEST     	R44 0 ; if not R44 then PC := 812
	810	[4329]	JMP      	812 ; PC := 812
	811	[4330]	LOADK    	R50 K113 ; R50 := "tenno"
	812	[4334]	GETUPVAL 	R51 U8 ; R51 := U8
	813	[4334]	MOVE     	R52 R6 ; R52 := R6
	814	[4334]	CALL     	R51 2 2 ; R51 := R51(R52)
	815	[4335]	TEST     	R51 0 ; if not R51 then PC := 818
	816	[4335]	JMP      	818 ; PC := 818
	817	[4336]	MOVE     	R34 R51 ; R34 := R51
	818	[4339]	GETTABLE 	R52 R6 K81 ; R52 := R6["missionType"]
	819	[4339]	EQ       	0 R52 K114 ; if R52 ~= 31.000000 then PC := 835
	820	[4339]	JMP      	835 ; PC := 835
	821	[4340]	SELF     	R52 R4 K37 ; R53 := R4; R52 := R4[0x42b04007]
	822	[4340]	LOADK    	R54 K115 ; R54 := "<RAILJACK>"
	823	[4340]	OP_LOADBOOL	R55 1 0 ; R55 := true
	824	[4340]	CALL     	R52 4 2 ; R52 := R52(R53,R54,R55)
	825	[4340]	LOADK    	R53 K39 ; R53 := " "
	826	[4340]	MOVE     	R54 R30 ; R54 := R30
	827	[4340]	LOADK    	R55 K116 ; R55 := " ("
	828	[4340]	SELF     	R56 R4 K37 ; R57 := R4; R56 := R4[0x42b04007]
	829	[4340]	LOADK    	R58 K117 ; R58 := "/Lotus/Language/Menu/RailjackTitle"
	830	[4340]	OP_LOADBOOL	R59 0 0 ; R59 := false
	831	[4340]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	832	[4340]	LOADK    	R57 K118 ; R57 := ")"
	833	[4340]	CONCAT   	R30 R52 R57 ; R30 := R52 .. R53 .. R54 .. R55 .. R56 .. R57
	834	[4340]	JMP      	868 ; PC := 868
	835	[4341]	GETTABLE 	R52 R6 K119 ; R52 := R6["isSharkwingMission"]
	836	[4341]	TEST     	R52 1 ; if R52 then PC := 855
	837	[4341]	JMP      	855 ; PC := 855
	838	[4342]	GETTABLE 	R52 R6 K120 ; R52 := R6["archwingRequired"]
	839	[4342]	TEST     	R52 0 ; if not R52 then PC := 868
	840	[4342]	JMP      	868 ; PC := 868
	841	[4343]	SELF     	R52 R4 K37 ; R53 := R4; R52 := R4[0x42b04007]
	842	[4343]	LOADK    	R54 K121 ; R54 := "<ARCHWING>"
	843	[4343]	OP_LOADBOOL	R55 1 0 ; R55 := true
	844	[4343]	CALL     	R52 4 2 ; R52 := R52(R53,R54,R55)
	845	[4343]	LOADK    	R53 K39 ; R53 := " "
	846	[4343]	MOVE     	R54 R30 ; R54 := R30
	847	[4343]	LOADK    	R55 K116 ; R55 := " ("
	848	[4343]	SELF     	R56 R4 K37 ; R57 := R4; R56 := R4[0x42b04007]
	849	[4343]	LOADK    	R58 K122 ; R58 := "/Lotus/Language/Menu/Loadout_Archwing"
	850	[4343]	OP_LOADBOOL	R59 0 0 ; R59 := false
	851	[4343]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	852	[4343]	LOADK    	R57 K118 ; R57 := ")"
	853	[4343]	CONCAT   	R30 R52 R57 ; R30 := R52 .. R53 .. R54 .. R55 .. R56 .. R57
	854	[4344]	JMP      	868 ; PC := 868
	855	[4346]	SELF     	R52 R4 K37 ; R53 := R4; R52 := R4[0x42b04007]
	856	[4346]	LOADK    	R54 K121 ; R54 := "<ARCHWING>"
	857	[4346]	OP_LOADBOOL	R55 1 0 ; R55 := true
	858	[4346]	CALL     	R52 4 2 ; R52 := R52(R53,R54,R55)
	859	[4346]	LOADK    	R53 K39 ; R53 := " "
	860	[4346]	MOVE     	R54 R30 ; R54 := R30
	861	[4346]	LOADK    	R55 K116 ; R55 := " ("
	862	[4346]	SELF     	R56 R4 K37 ; R57 := R4; R56 := R4[0x42b04007]
	863	[4346]	LOADK    	R58 K123 ; R58 := "/Lotus/Language/Menu/Sharkwing"
	864	[4346]	OP_LOADBOOL	R59 0 0 ; R59 := false
	865	[4346]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	866	[4346]	LOADK    	R57 K118 ; R57 := ")"
	867	[4346]	CONCAT   	R30 R52 R57 ; R30 := R52 .. R53 .. R54 .. R55 .. R56 .. R57
	868	[4349]	NEWTABLE 	R52 0 21 ; R52 := {}
	869	[4349]	SETTABLE 	R52 K124 R6 ; R52["mMission"] := R6
	870	[4349]	SETTABLE 	R52 K125 R48 ; R52["mFounders"] := R48
	871	[4349]	SETTABLE 	R52 K126 R33 ; R52["mTexture"] := R33
	872	[4349]	SETTABLE 	R52 K127 R49 ; R52["mLocationTexture"] := R49
	873	[4349]	SETTABLE 	R52 K20 R7 ; R52["mAlertInfo"] := R7
	874	[4349]	SETTABLE 	R52 K128 R9 ; R52["mSyndicateInfo"] := R9
	875	[4349]	SETTABLE 	R52 K129 R31 ; R52["mInvasionInfo"] := R31
	876	[4349]	SETTABLE 	R52 K130 R8 ; R52["mGoalInfo"] := R8
	877	[4349]	SETTABLE 	R52 K131 R10 ; R52["mSortieInfo"] := R10
	878	[4349]	SETTABLE 	R52 K132 R11 ; R52["mActiveMissionInfo"] := R11
	879	[4349]	SETTABLE 	R52 K133 R12 ; R52["mGhostTowerMissionInfo"] := R12
	880	[4349]	SETTABLE 	R52 K134 R13 ; R52["mEliteAlertMissionInfo"] := R13
	881	[4349]	SETTABLE 	R52 K135 R41 ; R52["mCardTag"] := R41
	882	[4349]	SETTABLE 	R52 K136 R30 ; R52["mName"] := R30
	883	[4349]	SETTABLE 	R52 K137 R40 ; R52["mRarity"] := R40
	884	[4349]	SETTABLE 	R52 K78 R34 ; R52["mDesc"] := R34
	885	[4349]	SETTABLE 	R52 K138 R35 ; R52["mDescText"] := R35
	886	[4349]	SETTABLE 	R52 K139 R39 ; R52["mNameText"] := R39
	887	[4349]	SETTABLE 	R52 K140 R32 ; R52["mNumMissions"] := R32
	888	[4349]	SETTABLE 	R52 K141 R36 ; R52["mDifficulty"] := R36
	889	[4349]	SETTABLE 	R52 K142 R37 ; R52["mLevelMin"] := R37
	890	[4349]	SETTABLE 	R52 K143 R38 ; R52["mLevelMax"] := R38
	891	[4349]	GETTABLE 	R53 R6 K145 ; R53 := R6["conclaveRange"]
	892	[4349]	GETTABLE 	R53 R53 K146 ; R53 := R53["minValue"]
	893	[4349]	SETTABLE 	R52 K144 R53 ; R52["mConclaveMin"] := R53
	894	[4349]	GETTABLE 	R53 R6 K145 ; R53 := R6["conclaveRange"]
	895	[4349]	GETTABLE 	R53 R53 K148 ; R53 := R53["maxValue"]
	896	[4349]	SETTABLE 	R52 K147 R53 ; R52["mConclaveMax"] := R53
	897	[4349]	SETTABLE 	R52 K149 R50 ; R52["mFactionTag"] := R50
	898	[4349]	RETURN   	R52 2 ; return R52 
	899	[4350]	RETURN   	R0 1 ; return 

function #228 <?:4352,4360> (19 instructions, 76 bytes at 00000160C6826360)
2 params, 7 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[4353]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0x1fd6abd0]
	2	[4353]	GETGLOBAL	R4 K1 ; R4 := 0x0032441c
	3	[4353]	GETTABLE 	R4 R4 K2 ; R4 := R4["UIMovie_MeleeCombosMovie"]
	4	[4353]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	5	[4354]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	6	[4354]	MOVE     	R4 R2 ; R4 := R2
	7	[4354]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[4354]	TEST     	R3 1 ; if R3 then PC := 18
	9	[4354]	JMP      	18 ; PC := 18
	10	[4355]	GETGLOBAL	R3 K4 ; R3 := _T
	11	[4355]	SETTABLE 	R3 K5 R1 ; R3["StanceUpgradeInfo"] := R1
	12	[4356]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0xe4162eed]
	13	[4356]	LOADK    	R5 K7 ; R5 := "SetStanceUpgradeInfo"
	14	[4356]	LOADK    	R6 K5 ; R6 := "StanceUpgradeInfo"
	15	[4356]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	16	[4357]	GETGLOBAL	R3 K4 ; R3 := _T
	17	[4357]	SETTABLE 	R3 K5 K8 ; R3["StanceUpgradeInfo"] := nil
	18	[4359]	RETURN   	R2 2 ; return R2 
	19	[4360]	RETURN   	R0 1 ; return 

function #229 <?:4362,4409> (154 instructions, 616 bytes at 00000160C6826620)
0 params, 21 slots, 0 upvalues, 0 locals, 31 constants, 0 functions
	1	[4363]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[4363]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[4363]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4363]	TEST     	R0 1 ; if R0 then PC := 69
	5	[4363]	JMP      	69 ; PC := 69
	6	[4363]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[4363]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[4363]	GETGLOBAL	R2 K3 ; R2 := gLotusAttractModeGameRulesType
	9	[4363]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[4363]	TEST     	R0 0 ; if not R0 then PC := 69
	11	[4363]	JMP      	69 ; PC := 69
	12	[4363]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	13	[4363]	GETGLOBAL	R1 K4 ; R1 := 0x25d99d89
	14	[4363]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[4363]	TEST     	R0 1 ; if R0 then PC := 69
	16	[4363]	JMP      	69 ; PC := 69
	17	[4364]	GETGLOBAL	R0 K4 ; R0 := 0x25d99d89
	18	[4364]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x25a6e75e]
	19	[4364]	CALL     	R0 2 2 ; R0 := R0(R1)
	20	[4365]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	21	[4365]	MOVE     	R2 R0 ; R2 := R0
	22	[4365]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[4365]	TEST     	R1 1 ; if R1 then PC := 152
	24	[4365]	JMP      	152 ; PC := 152
	25	[4366]	SELF     	R1 R0 K6 ; R2 := R0; R1 := R0[0x566259e1]
	26	[4366]	LOADK    	R3 := 0.000000
	27	[4366]	SELF     	R4 R0 K8 ; R5 := R0; R4 := R0[0x4e457768]
	28	[4366]	LOADK    	R6 := 0.000000
	29	[4366]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	30	[4366]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	31	[4367]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	32	[4367]	MOVE     	R3 R1 ; R3 := R1
	33	[4367]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[4367]	TEST     	R2 1 ; if R2 then PC := 152
	35	[4367]	JMP      	152 ; PC := 152
	36	[4368]	SELF     	R2 R1 K9 ; R3 := R1; R2 := R1[0x2abbe722]
	37	[4368]	LOADK    	R4 := 3.000000
	38	[4368]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	39	[4368]	GETTABLE 	R2 R2 K10 ; R2 := R2["mItemId"]
	40	[4369]	SELF     	R3 R1 K9 ; R4 := R1; R3 := R1[0x2abbe722]
	41	[4369]	LOADK    	R5 := 3.000000
	42	[4369]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	43	[4369]	GETTABLE 	R3 R3 K11 ; R3 := R3["mModSlot"]
	44	[4370]	SELF     	R4 R0 K12 ; R5 := R0; R4 := R0[0x2f30b8db]
	45	[4370]	GETTABLE 	R6 R2 K13 ; R6 := R2["mId"]
	46	[4370]	MOVE     	R7 R3 ; R7 := R3
	47	[4370]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	48	[4372]	LOADK    	R5 := 1.000000
	49	[4372]	LEN      	R6 R4 ; R6 := # R4
	50	[4372]	LOADK    	R7 := 1.000000
	51	[4372]	FORPREP  	R5 67 ; R5 -= R7; PC := 67
	52	[4373]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	53	[4373]	GETTABLE 	R10 R4 R8 ; R10 := R4[R8]
	54	[4373]	GETTABLE 	R10 R10 K14 ; R10 := R10["mItemType"]
	55	[4373]	CALL     	R9 2 2 ; R9 := R9(R10)
	56	[4373]	TEST     	R9 1 ; if R9 then PC := 67
	57	[4373]	JMP      	67 ; PC := 67
	58	[4373]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	59	[4373]	GETTABLE 	R9 R9 K14 ; R9 := R9["mItemType"]
	60	[4373]	SELF     	R9 R9 K2 ; R10 := R9; R9 := R9[0xf2deaf69]
	61	[4373]	GETGLOBAL	R11 K15 ; R11 := gMeleeTreeType
	62	[4373]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	63	[4373]	TEST     	R9 0 ; if not R9 then PC := 67
	64	[4373]	JMP      	67 ; PC := 67
	65	[4374]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	66	[4374]	RETURN   	R9 2 ; return R9 
	67	[4372]	FORLOOP  	R5 52 ; R5 += R7; if R5 <= R6 then begin PC := 52; R8 := R5 end
	68	[4378]	JMP      	152 ; PC := 152
	69	[4379]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	70	[4379]	GETGLOBAL	R10 K16 ; R10 := 0x89326c93
	71	[4379]	CALL     	R9 2 2 ; R9 := R9(R10)
	72	[4379]	TEST     	R9 1 ; if R9 then PC := 152
	73	[4379]	JMP      	152 ; PC := 152
	74	[4380]	GETGLOBAL	R9 K16 ; R9 := 0x89326c93
	75	[4380]	SELF     	R9 R9 K17 ; R10 := R9; R9 := R9[0x78298275]
	76	[4380]	CALL     	R9 2 2 ; R9 := R9(R10)
	77	[4381]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	78	[4381]	MOVE     	R11 R9 ; R11 := R9
	79	[4381]	CALL     	R10 2 2 ; R10 := R10(R11)
	80	[4381]	TEST     	R10 1 ; if R10 then PC := 152
	81	[4381]	JMP      	152 ; PC := 152
	82	[4382]	SELF     	R10 R9 K18 ; R11 := R9; R10 := R9[0xde321e6f]
	83	[4382]	CALL     	R10 2 2 ; R10 := R10(R11)
	84	[4382]	SELF     	R10 R10 K19 ; R11 := R10; R10 := R10[0xbb4a3d82]
	85	[4382]	CALL     	R10 2 2 ; R10 := R10(R11)
	86	[4383]	GETGLOBAL	R11 K0 ; R11 := 0x7b998233
	87	[4383]	MOVE     	R12 R10 ; R12 := R10
	88	[4383]	CALL     	R11 2 2 ; R11 := R11(R12)
	89	[4383]	TEST     	R11 1 ; if R11 then PC := 152
	90	[4383]	JMP      	152 ; PC := 152
	91	[4384]	SELF     	R11 R10 K20 ; R12 := R10; R11 := R10[0x0ad758cb]
	92	[4384]	CALL     	R11 2 2 ; R11 := R11(R12)
	93	[4386]	LOADK    	R12 := 1.000000
	94	[4386]	MOVE     	R13 R11 ; R13 := R11
	95	[4386]	LOADK    	R14 := 1.000000
	96	[4386]	FORPREP  	R12 120 ; R12 -= R14; PC := 120
	97	[4387]	SELF     	R16 R10 K21 ; R17 := R10; R16 := R10[0xfef27732]
	98	[4387]	SUB      	R18 R15 K22 ; R18 := R15 - 1.000000
	99	[4387]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	100	[4389]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	101	[4389]	MOVE     	R18 R16 ; R18 := R16
	102	[4389]	CALL     	R17 2 2 ; R17 := R17(R18)
	103	[4389]	TEST     	R17 1 ; if R17 then PC := 120
	104	[4389]	JMP      	120 ; PC := 120
	105	[4389]	SELF     	R17 R16 K2 ; R18 := R16; R17 := R16[0xf2deaf69]
	106	[4389]	GETGLOBAL	R19 K15 ; R19 := gMeleeTreeType
	107	[4389]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	108	[4389]	TEST     	R17 0 ; if not R17 then PC := 120
	109	[4389]	JMP      	120 ; PC := 120
	110	[4390]	GETGLOBAL	R17 K7 ; R17 := 0x6c97a788
	111	[4390]	GETTABLE 	R17 R17 K23 ; R17 := R17[0x1aba4d9e]
	112	[4390]	CALL     	R17 1 2 ; R17 := R17()
	113	[4391]	SELF     	R18 R16 K24 ; R19 := R16; R18 := R16[0xcde10c4a]
	114	[4391]	CALL     	R18 2 2 ; R18 := R18(R19)
	115	[4391]	SETTABLE 	R17 K14 R18 ; R17["mItemType"] := R18
	116	[4392]	SELF     	R18 R16 K26 ; R19 := R16; R18 := R16[0x7b0c20c2]
	117	[4392]	CALL     	R18 2 2 ; R18 := R18(R19)
	118	[4392]	SETTABLE 	R17 K25 R18 ; R17["mUpgradeFingerprint"] := R18
	119	[4393]	RETURN   	R17 2 ; return R17 
	120	[4386]	FORLOOP  	R12 97 ; R12 += R14; if R12 <= R13 then begin PC := 97; R15 := R12 end
	121	[4397]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	122	[4397]	GETGLOBAL	R19 K1 ; R19 := 0xbe190284
	123	[4397]	CALL     	R18 2 2 ; R18 := R18(R19)
	124	[4397]	TEST     	R18 1 ; if R18 then PC := 152
	125	[4397]	JMP      	152 ; PC := 152
	126	[4399]	GETGLOBAL	R18 K1 ; R18 := 0xbe190284
	127	[4399]	SELF     	R18 R18 K2 ; R19 := R18; R18 := R18[0xf2deaf69]
	128	[4399]	GETGLOBAL	R20 K27 ; R20 := gLotusPvpGameRulesType
	129	[4399]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	130	[4399]	TEST     	R18 0 ; if not R18 then PC := 137
	131	[4399]	JMP      	137 ; PC := 137
	132	[4399]	GETGLOBAL	R18 K1 ; R18 := 0xbe190284
	133	[4399]	SELF     	R18 R18 K28 ; R19 := R18; R18 := R18[0xa52237bc]
	134	[4399]	CALL     	R18 2 2 ; R18 := R18(R19)
	135	[4399]	TEST     	R18 1 ; if R18 then PC := 143
	136	[4399]	JMP      	143 ; PC := 143
	137	[4399]	GETGLOBAL	R18 K1 ; R18 := 0xbe190284
	138	[4399]	SELF     	R18 R18 K2 ; R19 := R18; R18 := R18[0xf2deaf69]
	139	[4399]	GETGLOBAL	R20 K29 ; R20 := gLotusFightingGameRulesType
	140	[4399]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	141	[4399]	TEST     	R18 0 ; if not R18 then PC := 152
	142	[4399]	JMP      	152 ; PC := 152
	143	[4400]	GETGLOBAL	R18 K7 ; R18 := 0x6c97a788
	144	[4400]	GETTABLE 	R18 R18 K23 ; R18 := R18[0x1aba4d9e]
	145	[4400]	CALL     	R18 1 2 ; R18 := R18()
	146	[4401]	SELF     	R19 R10 K30 ; R20 := R10; R19 := R10[0xe3ca779e]
	147	[4401]	CALL     	R19 2 2 ; R19 := R19(R20)
	148	[4401]	SELF     	R19 R19 K24 ; R20 := R19; R19 := R19[0xcde10c4a]
	149	[4401]	CALL     	R19 2 2 ; R19 := R19(R20)
	150	[4401]	SETTABLE 	R18 K14 R19 ; R18["mItemType"] := R19
	151	[4402]	RETURN   	R18 2 ; return R18 
	152	[4408]	LOADNIL  	R19 R19 ; R19 := nil
	153	[4408]	RETURN   	R19 2 ; return R19 
	154	[4409]	RETURN   	R0 1 ; return 

function #230 <?:4411,4428> (39 instructions, 156 bytes at 00000160C6826E20)
2 params, 11 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[4412]	GETGLOBAL	R2 K0 ; R2 := 0x7ed0a956
	2	[4412]	LOADK    	R3 K1 ; R3 := "/Lotus/Types/LotusMeleeTree/LotusMeleeTree"
	3	[4412]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[4414]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	5	[4414]	MOVE     	R4 R0 ; R4 := R0
	6	[4414]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[4414]	TEST     	R3 1 ; if R3 then PC := 39
	8	[4414]	JMP      	39 ; PC := 39
	9	[4415]	LOADK    	R3 := 0.000000
	10	[4416]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	11	[4416]	SELF     	R5 R0 K3 ; R6 := R0; R5 := R0[0xfef27732]
	12	[4416]	MOVE     	R7 R3 ; R7 := R3
	13	[4416]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	14	[4416]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	15	[4416]	TEST     	R4 1 ; if R4 then PC := 39
	16	[4416]	JMP      	39 ; PC := 39
	17	[4417]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0xfef27732]
	18	[4417]	MOVE     	R6 R3 ; R6 := R3
	19	[4417]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	20	[4418]	SELF     	R5 R4 K4 ; R6 := R4; R5 := R4[0xf2deaf69]
	21	[4418]	GETGLOBAL	R7 K5 ; R7 := gLotusArtifactUpgradeType
	22	[4418]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	23	[4419]	SELF     	R6 R4 K4 ; R7 := R4; R6 := R4[0xf2deaf69]
	24	[4419]	MOVE     	R8 R2 ; R8 := R2
	25	[4419]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	26	[4421]	TEST     	R5 0 ; if not R5 then PC := 37
	27	[4421]	JMP      	37 ; PC := 37
	28	[4421]	TEST     	R6 0 ; if not R6 then PC := 32
	29	[4421]	JMP      	32 ; PC := 32
	30	[4421]	TEST     	R1 1 ; if R1 then PC := 37
	31	[4421]	JMP      	37 ; PC := 37
	32	[4422]	SELF     	R7 R0 K6 ; R8 := R0; R7 := R0[0x12dd9da2]
	33	[4422]	MOVE     	R9 R4 ; R9 := R4
	34	[4422]	OP_LOADBOOL	R10 1 0 ; R10 := true
	35	[4422]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	36	[4422]	JMP      	10 ; PC := 10
	37	[4424]	ADD      	R3 R3 K7 ; R3 := R3 + 1.000000
	38	[4425]	JMP      	10 ; PC := 10
	39	[4428]	RETURN   	R0 1 ; return 

function #231 <?:4430,4462> (105 instructions, 420 bytes at 00000160C6827100)
2 params, 4 slots, 0 upvalues, 0 locals, 32 constants, 0 functions
	1	[4431]	EQ       	0 R0 K0 ; if R0 ~= "Assassination" then PC := 8
	2	[4431]	JMP      	8 ; PC := 8
	3	[4432]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	4	[4432]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	5	[4432]	GETTABLE 	R2 R2 K3 ; R2 := R2[1.000000]
	6	[4432]	RETURN   	R2 2 ; return R2 
	7	[4432]	JMP      	101 ; PC := 101
	8	[4433]	EQ       	0 R0 K4 ; if R0 ~= "Capture" then PC := 15
	9	[4433]	JMP      	15 ; PC := 15
	10	[4434]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	11	[4434]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	12	[4434]	GETTABLE 	R2 R2 K5 ; R2 := R2[2.000000]
	13	[4434]	RETURN   	R2 2 ; return R2 
	14	[4434]	JMP      	101 ; PC := 101
	15	[4435]	EQ       	0 R0 K6 ; if R0 ~= "PVP" then PC := 22
	16	[4435]	JMP      	22 ; PC := 22
	17	[4436]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	18	[4436]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	19	[4436]	GETTABLE 	R2 R2 K7 ; R2 := R2[3.000000]
	20	[4436]	RETURN   	R2 2 ; return R2 
	21	[4436]	JMP      	101 ; PC := 101
	22	[4437]	EQ       	0 R0 K8 ; if R0 ~= "Deception" then PC := 29
	23	[4437]	JMP      	29 ; PC := 29
	24	[4438]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	25	[4438]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	26	[4438]	GETTABLE 	R2 R2 K9 ; R2 := R2[4.000000]
	27	[4438]	RETURN   	R2 2 ; return R2 
	28	[4438]	JMP      	101 ; PC := 101
	29	[4439]	EQ       	0 R0 K10 ; if R0 ~= "Defense" then PC := 36
	30	[4439]	JMP      	36 ; PC := 36
	31	[4440]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	32	[4440]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	33	[4440]	GETTABLE 	R2 R2 K11 ; R2 := R2[6.000000]
	34	[4440]	RETURN   	R2 2 ; return R2 
	35	[4440]	JMP      	101 ; PC := 101
	36	[4441]	EQ       	0 R0 K12 ; if R0 ~= "Exterminate" then PC := 46
	37	[4441]	JMP      	46 ; PC := 46
	38	[4441]	EQ       	1 R1 K13 ; if R1 == nil then PC := 46
	39	[4441]	JMP      	46 ; PC := 46
	40	[4442]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	41	[4442]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	42	[4442]	ADD      	R3 K14 R1 ; R3 := 7.000000 + R1
	43	[4442]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	44	[4442]	RETURN   	R2 2 ; return R2 
	45	[4442]	JMP      	101 ; PC := 101
	46	[4443]	EQ       	0 R0 K15 ; if R0 ~= "Hijack" then PC := 53
	47	[4443]	JMP      	53 ; PC := 53
	48	[4444]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	49	[4444]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	50	[4444]	GETTABLE 	R2 R2 K16 ; R2 := R2[10.000000]
	51	[4444]	RETURN   	R2 2 ; return R2 
	52	[4444]	JMP      	101 ; PC := 101
	53	[4445]	EQ       	0 R0 K17 ; if R0 ~= "Territory" then PC := 60
	54	[4445]	JMP      	60 ; PC := 60
	55	[4446]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	56	[4446]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	57	[4446]	GETTABLE 	R2 R2 K18 ; R2 := R2[11.000000]
	58	[4446]	RETURN   	R2 2 ; return R2 
	59	[4446]	JMP      	101 ; PC := 101
	60	[4447]	EQ       	0 R0 K19 ; if R0 ~= "MobileDefense" then PC := 67
	61	[4447]	JMP      	67 ; PC := 67
	62	[4448]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	63	[4448]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	64	[4448]	GETTABLE 	R2 R2 K20 ; R2 := R2[12.000000]
	65	[4448]	RETURN   	R2 2 ; return R2 
	66	[4448]	JMP      	101 ; PC := 101
	67	[4449]	EQ       	0 R0 K21 ; if R0 ~= "Rescue" then PC := 74
	68	[4449]	JMP      	74 ; PC := 74
	69	[4450]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	70	[4450]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	71	[4450]	GETTABLE 	R2 R2 K22 ; R2 := R2[13.000000]
	72	[4450]	RETURN   	R2 2 ; return R2 
	73	[4450]	JMP      	101 ; PC := 101
	74	[4451]	EQ       	0 R0 K23 ; if R0 ~= "Sabotage" then PC := 81
	75	[4451]	JMP      	81 ; PC := 81
	76	[4452]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	77	[4452]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	78	[4452]	GETTABLE 	R2 R2 K24 ; R2 := R2[14.000000]
	79	[4452]	RETURN   	R2 2 ; return R2 
	80	[4452]	JMP      	101 ; PC := 101
	81	[4453]	EQ       	0 R0 K25 ; if R0 ~= "Spy" then PC := 88
	82	[4453]	JMP      	88 ; PC := 88
	83	[4454]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	84	[4454]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	85	[4454]	GETTABLE 	R2 R2 K26 ; R2 := R2[15.000000]
	86	[4454]	RETURN   	R2 2 ; return R2 
	87	[4454]	JMP      	101 ; PC := 101
	88	[4455]	EQ       	0 R0 K27 ; if R0 ~= "Survival" then PC := 95
	89	[4455]	JMP      	95 ; PC := 95
	90	[4456]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	91	[4456]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	92	[4456]	GETTABLE 	R2 R2 K28 ; R2 := R2[16.000000]
	93	[4456]	RETURN   	R2 2 ; return R2 
	94	[4456]	JMP      	101 ; PC := 101
	95	[4457]	EQ       	0 R0 K29 ; if R0 ~= "Void" then PC := 101
	96	[4457]	JMP      	101 ; PC := 101
	97	[4458]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	98	[4458]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	99	[4458]	GETTABLE 	R2 R2 K30 ; R2 := R2[17.000000]
	100	[4458]	RETURN   	R2 2 ; return R2 
	101	[4461]	GETGLOBAL	R2 K1 ; R2 := 0x0032441c
	102	[4461]	GETTABLE 	R2 R2 K2 ; R2 := R2["UITextures_GameModeTextures"]
	103	[4461]	GETTABLE 	R2 R2 K31 ; R2 := R2[5.000000]
	104	[4461]	RETURN   	R2 2 ; return R2 
	105	[4462]	RETURN   	R0 1 ; return 

function #232 <?:4464,4546> (146 instructions, 584 bytes at 00000160C6827A20)
4 params, 30 slots, 0 upvalues, 0 locals, 25 constants, 0 functions
	1	[4465]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[4465]	MOVE     	R5 R0 ; R5 := R0
	3	[4465]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[4465]	TEST     	R4 1 ; if R4 then PC := 11
	5	[4465]	JMP      	11 ; PC := 11
	6	[4465]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	7	[4465]	MOVE     	R5 R1 ; R5 := R1
	8	[4465]	CALL     	R4 2 2 ; R4 := R4(R5)
	9	[4465]	TEST     	R4 0 ; if not R4 then PC := 13
	10	[4465]	JMP      	13 ; PC := 13
	11	[4466]	LOADNIL  	R4 R7 ; R4 := R5 := R6 := R7 := nil
	12	[4466]	RETURN   	R4 5 ; return R4, R5, R6, R7 
	13	[4469]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x25a6e75e]
	14	[4469]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[4470]	SELF     	R5 R4 K2 ; R6 := R4; R5 := R4[0xe9768ed0]
	16	[4470]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[4472]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	18	[4472]	MOVE     	R7 R5 ; R7 := R5
	19	[4472]	CALL     	R6 2 2 ; R6 := R6(R7)
	20	[4472]	TEST     	R6 0 ; if not R6 then PC := 24
	21	[4472]	JMP      	24 ; PC := 24
	22	[4473]	LOADNIL  	R6 R9 ; R6 := R7 := R8 := R9 := nil
	23	[4473]	RETURN   	R6 5 ; return R6, R7, R8, R9 
	24	[4476]	SELF     	R6 R1 K3 ; R7 := R1; R6 := R1[0x8a0f9f88]
	25	[4476]	CALL     	R6 2 2 ; R6 := R6(R7)
	26	[4478]	GETGLOBAL	R7 K4 ; R7 := 0xc8802016
	27	[4478]	MOVE     	R8 R5 ; R8 := R5
	28	[4478]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	29	[4478]	JMP      	142 ; PC := 142
	30	[4479]	GETTABLE 	R12 R11 K5 ; R12 := R11["mItemType"]
	31	[4479]	EQ       	0 R12 R1 ; if R12 ~= R1 then PC := 142
	32	[4479]	JMP      	142 ; PC := 142
	33	[4480]	LOADK    	R12 := -1.000000
	34	[4482]	GETTABLE 	R13 R11 K6 ; R13 := R11["mProgress"]
	35	[4483]	TEST     	R3 0 ; if not R3 then PC := 44
	36	[4483]	JMP      	44 ; PC := 44
	37	[4484]	GETGLOBAL	R14 K7 ; R14 := 0x3d106989
	38	[4484]	LOADK    	R15 K8 ; R15 := "_GetQuestInfo: progress - "
	39	[4484]	GETGLOBAL	R16 K9 ; R16 := 0x64fb1586
	40	[4484]	LEN      	R17 R13 ; R17 := # R13
	41	[4484]	CALL     	R16 2 2 ; R16 := R16(R17)
	42	[4484]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	43	[4484]	CALL     	R14 2 1 ; R14(R15)
	44	[4486]	LEN      	R14 R13 ; R14 := # R13
	45	[4486]	LT       	0 K10 R14 ; if 0.000000 >= R14 then PC := 58
	46	[4486]	JMP      	58 ; PC := 58
	47	[4487]	GETTABLE 	R14 R13 K11 ; R14 := R13[1.000000]
	48	[4487]	GETTABLE 	R12 R14 K12 ; R12 := R14["mCompletion"]
	49	[4488]	TEST     	R3 0 ; if not R3 then PC := 58
	50	[4488]	JMP      	58 ; PC := 58
	51	[4489]	GETGLOBAL	R14 K7 ; R14 := 0x3d106989
	52	[4489]	LOADK    	R15 K13 ; R15 := "_GetQuestInfo: stage 1 completion - "
	53	[4489]	GETGLOBAL	R16 K9 ; R16 := 0x64fb1586
	54	[4489]	MOVE     	R17 R12 ; R17 := R12
	55	[4489]	CALL     	R16 2 2 ; R16 := R16(R17)
	56	[4489]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	57	[4489]	CALL     	R14 2 1 ; R14(R15)
	58	[4493]	LOADK    	R14 := 0.000000
	59	[4494]	LE       	0 K10 R12 ; if 0.000000 > R12 then PC := 93
	60	[4494]	JMP      	93 ; PC := 93
	61	[4495]	LEN      	R15 R13 ; R15 := # R13
	62	[4495]	LT       	0 R15 R6 ; if R15 >= R6 then PC := 78
	63	[4495]	JMP      	78 ; PC := 78
	64	[4497]	GETGLOBAL	R15 K4 ; R15 := 0xc8802016
	65	[4497]	MOVE     	R16 R13 ; R16 := R13
	66	[4497]	CALL     	R15 2 4 ; R15,R16,R17 := R15(R16)
	67	[4497]	JMP      	74 ; PC := 74
	68	[4498]	GETTABLE 	R20 R19 K12 ; R20 := R19["mCompletion"]
	69	[4498]	LT       	0 K14 R20 ; if -1.000000 >= R20 then PC := 76
	70	[4498]	JMP      	76 ; PC := 76
	71	[4499]	MOVE     	R14 R18 ; R14 := R18
	72	[4499]	JMP      	74 ; PC := 74
	73	[4501]	JMP      	76 ; PC := 76
	74	[4497]	TFORLOOP 	R15 2 ; R18,R19 := R15(R16,R17); if R18 ~= nil then begin PC = 68; R17 := R18 end
	75	[4502]	JMP      	68 ; PC := 68
	76	[4504]	ADD      	R14 R14 K11 ; R14 := R14 + 1.000000
	77	[4504]	JMP      	93 ; PC := 93
	78	[4507]	LOADK    	R20 := 1.000000
	79	[4507]	GETGLOBAL	R21 K15 ; R21 := 0x5bced4c4
	80	[4507]	GETTABLE 	R21 R21 K16 ; R21 := R21[0xac1b386a]
	81	[4507]	LEN      	R22 R13 ; R22 := # R13
	82	[4507]	MOVE     	R23 R6 ; R23 := R6
	83	[4507]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	84	[4507]	LOADK    	R22 := 1.000000
	85	[4507]	FORPREP  	R20 92 ; R20 -= R22; PC := 92
	86	[4508]	GETTABLE 	R24 R13 R23 ; R24 := R13[R23]
	87	[4508]	GETTABLE 	R24 R24 K12 ; R24 := R24["mCompletion"]
	88	[4508]	LT       	0 R24 R12 ; if R24 >= R12 then PC := 92
	89	[4508]	JMP      	92 ; PC := 92
	90	[4509]	MOVE     	R14 R23 ; R14 := R23
	91	[4510]	JMP      	93 ; PC := 93
	92	[4507]	FORLOOP  	R20 86 ; R20 += R22; if R20 <= R21 then begin PC := 86; R23 := R20 end
	93	[4516]	TEST     	R3 0 ; if not R3 then PC := 102
	94	[4516]	JMP      	102 ; PC := 102
	95	[4517]	GETGLOBAL	R24 K7 ; R24 := 0x3d106989
	96	[4517]	LOADK    	R25 K17 ; R25 := "_GetQuestInfo: difficulty (A) - "
	97	[4517]	GETGLOBAL	R26 K9 ; R26 := 0x64fb1586
	98	[4517]	MOVE     	R27 R12 ; R27 := R12
	99	[4517]	CALL     	R26 2 2 ; R26 := R26(R27)
	100	[4517]	CONCAT   	R25 R25 R26 ; R25 := R25 .. R26
	101	[4517]	CALL     	R24 2 1 ; R24(R25)
	102	[4520]	LT       	0 R12 K10 ; if R12 >= 0.000000 then PC := 107
	103	[4520]	JMP      	107 ; PC := 107
	104	[4522]	LOADK    	R14 := 1.000000
	105	[4523]	LOADK    	R12 := 0.000000
	106	[4523]	JMP      	111 ; PC := 111
	107	[4524]	EQ       	0 R14 K10 ; if R14 ~= 0.000000 then PC := 111
	108	[4524]	JMP      	111 ; PC := 111
	109	[4526]	ADD      	R12 R12 K11 ; R12 := R12 + 1.000000
	110	[4527]	LOADK    	R14 := 1.000000
	111	[4530]	TEST     	R3 0 ; if not R3 then PC := 124
	112	[4530]	JMP      	124 ; PC := 124
	113	[4531]	GETGLOBAL	R24 K7 ; R24 := 0x3d106989
	114	[4531]	LOADK    	R25 K18 ; R25 := "_GetQuestInfo: difficulty (B) - "
	115	[4531]	GETGLOBAL	R26 K9 ; R26 := 0x64fb1586
	116	[4531]	MOVE     	R27 R12 ; R27 := R12
	117	[4531]	CALL     	R26 2 2 ; R26 := R26(R27)
	118	[4531]	LOADK    	R27 K19 ; R27 := ", mission index="
	119	[4531]	GETGLOBAL	R28 K9 ; R28 := 0x64fb1586
	120	[4531]	MOVE     	R29 R14 ; R29 := R14
	121	[4531]	CALL     	R28 2 2 ; R28 := R28(R29)
	122	[4531]	CONCAT   	R25 R25 R28 ; R25 := R25 .. R26 .. R27 .. R28
	123	[4531]	CALL     	R24 2 1 ; R24(R25)
	124	[4534]	LOADNIL  	R24 R24 ; R24 := nil
	125	[4535]	TEST     	R2 0 ; if not R2 then PC := 137
	126	[4535]	JMP      	137 ; PC := 137
	127	[4536]	SELF     	R25 R1 K20 ; R26 := R1; R25 := R1[0xe975bacb]
	128	[4536]	SUB      	R27 R14 K11 ; R27 := R14 - 1.000000
	129	[4536]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	130	[4536]	TEST     	R25 0 ; if not R25 then PC := 137
	131	[4536]	JMP      	137 ; PC := 137
	132	[4537]	SELF     	R25 R1 K21 ; R26 := R1; R25 := R1[0x42700bd0]
	133	[4537]	CALL     	R25 2 2 ; R25 := R25(R26)
	134	[4537]	GETTABLE 	R25 R25 R14 ; R25 := R25[R14]
	135	[4537]	GETTABLE 	R25 R25 K22 ; R25 := R25["mMainMission"]
	136	[4537]	GETTABLE 	R24 R25 K23 ; R24 := R25["mKey"]
	137	[4541]	MOVE     	R25 R14 ; R25 := R14
	138	[4541]	MOVE     	R26 R12 ; R26 := R12
	139	[4541]	GETTABLE 	R27 R11 K24 ; R27 := R11["mCanProgressQuest"]
	140	[4541]	MOVE     	R28 R24 ; R28 := R24
	141	[4541]	RETURN   	R25 5 ; return R25, R26, R27, R28 
	142	[4478]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 30; R9 := R10 end
	143	[4542]	JMP      	30 ; PC := 30
	144	[4545]	LOADNIL  	R25 R28 ; R25 := R26 := R27 := R28 := nil
	145	[4545]	RETURN   	R25 5 ; return R25, R26, R27, R28 
	146	[4546]	RETURN   	R0 1 ; return 

function #233 <?:4548,4550> (8 instructions, 32 bytes at 00000160C6828380)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4549]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[4549]	MOVE     	R5 R0 ; R5 := R0
	3	[4549]	MOVE     	R6 R1 ; R6 := R1
	4	[4549]	MOVE     	R7 R2 ; R7 := R2
	5	[4549]	MOVE     	R8 R3 ; R8 := R3
	6	[4549]	TAILCALL 	R4 5 0 ; R4,... := R4(R5,R6,R7,R8)
	7	[4549]	RETURN   	R4 0 ; return R4,... 
	8	[4550]	RETURN   	R0 1 ; return 

function #234 <?:4552,4569> (33 instructions, 132 bytes at 00000160C6828470)
1 param, 7 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[4553]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4553]	MOVE     	R2 R0 ; R2 := R0
	3	[4553]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4553]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[4553]	JMP      	8 ; PC := 8
	6	[4554]	LOADNIL  	R1 R4 ; R1 := R2 := R3 := R4 := nil
	7	[4554]	RETURN   	R1 5 ; return R1, R2, R3, R4 
	8	[4557]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x25a6e75e]
	9	[4557]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[4559]	GETGLOBAL	R2 K2 ; R2 := _T
	11	[4559]	GETTABLE 	R2 R2 K3 ; R2 := R2["ActiveQuestLoaded"]
	12	[4559]	TEST     	R2 1 ; if R2 then PC := 16
	13	[4559]	JMP      	16 ; PC := 16
	14	[4560]	LOADNIL  	R2 R5 ; R2 := R3 := R4 := R5 := nil
	15	[4560]	RETURN   	R2 5 ; return R2, R3, R4, R5 
	16	[4563]	GETGLOBAL	R2 K4 ; R2 := 0xb009bbc6
	17	[4563]	SELF     	R3 R1 K5 ; R4 := R1; R3 := R1[0x8e7c3b5e]
	18	[4563]	CALL     	R3 2 0 ; R3,... := R3(R4)
	19	[4563]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	20	[4564]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	21	[4564]	MOVE     	R4 R2 ; R4 := R2
	22	[4564]	CALL     	R3 2 2 ; R3 := R3(R4)
	23	[4564]	TEST     	R3 0 ; if not R3 then PC := 27
	24	[4564]	JMP      	27 ; PC := 27
	25	[4565]	LOADNIL  	R3 R6 ; R3 := R4 := R5 := R6 := nil
	26	[4565]	RETURN   	R3 5 ; return R3, R4, R5, R6 
	27	[4568]	MOVE     	R3 R2 ; R3 := R2
	28	[4568]	GETUPVAL 	R4 U0 ; R4 := U0
	29	[4568]	MOVE     	R5 R0 ; R5 := R0
	30	[4568]	MOVE     	R6 R2 ; R6 := R2
	31	[4568]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	32	[4568]	RETURN   	R3 0 ; return R3,... 
	33	[4569]	RETURN   	R0 1 ; return 

function #235 <?:4571,4573> (5 instructions, 20 bytes at 00000160C68286F0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4572]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4572]	MOVE     	R2 R0 ; R2 := R0
	3	[4572]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[4572]	RETURN   	R1 0 ; return R1,... 
	5	[4573]	RETURN   	R0 1 ; return 

function #236 <?:4575,4578> (15 instructions, 60 bytes at 00000160C68287E0)
1 param, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[4576]	TEST     	R0 1 ; if R0 then PC := 4
	2	[4576]	JMP      	4 ; PC := 4
	3	[4576]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	4	[4577]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[4577]	MOVE     	R2 R0 ; R2 := R0
	6	[4577]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[4577]	TEST     	R1 1 ; if R1 then PC := 12
	8	[4577]	JMP      	12 ; PC := 12
	9	[4577]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x293ec9c4]
	10	[4577]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[4577]	JMP      	14 ; PC := 14
	12	[4577]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 13
	13	[4577]	OP_LOADBOOL	R1 1 0 ; R1 := true
	14	[4577]	RETURN   	R1 2 ; return R1 
	15	[4578]	RETURN   	R0 1 ; return 

function #237 <?:4580,4582> (5 instructions, 20 bytes at 00000160C6828950)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4581]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4581]	MOVE     	R2 R0 ; R2 := R0
	3	[4581]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[4581]	RETURN   	R1 0 ; return R1,... 
	5	[4582]	RETURN   	R0 1 ; return 

function #238 <?:4584,4681> (100 instructions, 400 bytes at 00000160C6828A40)
3 params, 20 slots, 2 upvalues, 0 locals, 26 constants, 2 functions
	1	[4585]	GETGLOBAL	R3 K0 ; R3 := 0x25d99d89
	2	[4586]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	3	[4586]	MOVE     	R5 R3 ; R5 := R3
	4	[4586]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[4586]	TEST     	R4 0 ; if not R4 then PC := 8
	6	[4586]	JMP      	8 ; PC := 8
	7	[4587]	RETURN   	R0 2 ; return R0 
	8	[4590]	SELF     	R4 R3 K2 ; R5 := R3; R4 := R3[0x25a6e75e]
	9	[4590]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[4590]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0x8f27d10c]
	11	[4590]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[4591]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	13	[4591]	MOVE     	R6 R4 ; R6 := R4
	14	[4591]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[4591]	TEST     	R5 1 ; if R5 then PC := 100
	16	[4591]	JMP      	100 ; PC := 100
	17	[4593]	SELF     	R5 R3 K4 ; R6 := R3; R5 := R3[0x69727e0b]
	18	[4593]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[4594]	GETTABLE 	R6 R5 K5 ; R6 := R5["mGoals"]
	20	[4645]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	21	[4645]	GETUPVAL 	R0 U0 ; R0 := U0
	22	[4645]	MOVE     	R0 R6 ; R0 := R6
	23	[4645]	MOVE     	R0 R3 ; R0 := R3
	24	[4645]	MOVE     	R0 R1 ; R0 := R1
	25	[4647]	LOADK    	R8 := 1.000000
	26	[4647]	LEN      	R9 R4 ; R9 := # R4
	27	[4647]	LOADK    	R10 := 1.000000
	28	[4647]	FORPREP  	R8 93 ; R8 -= R10; PC := 93
	29	[4648]	GETTABLE 	R12 R4 R11 ; R12 := R4[R11]
	30	[4650]	MOVE     	R13 R7 ; R13 := R7
	31	[4650]	MOVE     	R14 R12 ; R14 := R12
	32	[4650]	MOVE     	R15 R6 ; R15 := R6
	33	[4650]	MOVE     	R16 R1 ; R16 := R1
	34	[4650]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	35	[4652]	GETGLOBAL	R14 K1 ; R14 := 0x7b998233
	36	[4652]	MOVE     	R15 R13 ; R15 := R13
	37	[4652]	CALL     	R14 2 2 ; R14 := R14(R15)
	38	[4652]	TEST     	R14 1 ; if R14 then PC := 93
	39	[4652]	JMP      	93 ; PC := 93
	40	[4653]	NEWTABLE 	R14 0 5 ; R14 := {}
	41	[4655]	SETTABLE 	R14 K6 R12 ; R14["Key"] := R12
	42	[4656]	SETTABLE 	R14 K7 R13 ; R14["Type"] := R13
	43	[4657]	GETGLOBAL	R15 K9 ; R15 := 0x603636ad
	44	[4657]	GETGLOBAL	R16 K10 ; R16 := 0x64fb1586
	45	[4657]	SELF     	R17 R13 K11 ; R18 := R13; R17 := R13[0xd3a9d01f]
	46	[4657]	CALL     	R17 2 0 ; R17,... := R17(R18)
	47	[4657]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	48	[4657]	OP_LOADBOOL	R17 0 0 ; R17 := false
	49	[4657]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	50	[4657]	SETTABLE 	R14 K8 R15 ; R14["Name"] := R15
	51	[4658]	GETGLOBAL	R15 K9 ; R15 := 0x603636ad
	52	[4658]	GETGLOBAL	R16 K10 ; R16 := 0x64fb1586
	53	[4658]	SELF     	R17 R13 K13 ; R18 := R13; R17 := R13[0x5ba460ac]
	54	[4658]	CALL     	R17 2 0 ; R17,... := R17(R18)
	55	[4658]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	56	[4658]	OP_LOADBOOL	R17 0 0 ; R17 := false
	57	[4658]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	58	[4658]	SETTABLE 	R14 K12 R15 ; R14["Description"] := R15
	59	[4659]	GETUPVAL 	R15 U1 ; R15 := U1
	60	[4659]	LOADNIL  	R16 R16 ; R16 := nil
	61	[4659]	MOVE     	R17 R13 ; R17 := R13
	62	[4659]	LOADNIL  	R18 R19 ; R18 := R19 := nil
	63	[4659]	CALL     	R15 5 2 ; R15 := R15(R16,R17,R18,R19)
	64	[4659]	SETTABLE 	R14 K14 R15 ; R14["ToolTip"] := R15
	65	[4662]	GETGLOBAL	R15 K1 ; R15 := 0x7b998233
	66	[4662]	MOVE     	R16 R2 ; R16 := R2
	67	[4662]	CALL     	R15 2 2 ; R15 := R15(R16)
	68	[4662]	TEST     	R15 1 ; if R15 then PC := 82
	69	[4662]	JMP      	82 ; PC := 82
	70	[4663]	SELF     	R15 R2 K15 ; R16 := R2; R15 := R2[0x105074fb]
	71	[4663]	GETTABLE 	R17 R12 K16 ; R17 := R12["mItemType"]
	72	[4663]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	73	[4664]	GETGLOBAL	R16 K1 ; R16 := 0x7b998233
	74	[4664]	MOVE     	R17 R15 ; R17 := R15
	75	[4664]	CALL     	R16 2 2 ; R16 := R16(R17)
	76	[4664]	TEST     	R16 1 ; if R16 then PC := 82
	77	[4664]	JMP      	82 ; PC := 82
	78	[4665]	SETTABLE 	R14 K17 R15 ; R14["StoreItem"] := R15
	79	[4666]	SELF     	R16 R15 K19 ; R17 := R15; R16 := R15[0x056dcf06]
	80	[4666]	CALL     	R16 2 2 ; R16 := R16(R17)
	81	[4666]	SETTABLE 	R14 K18 R16 ; R14["Icon"] := R16
	82	[4670]	SELF     	R16 R13 K20 ; R17 := R13; R16 := R13[0x535d4938]
	83	[4670]	CALL     	R16 2 2 ; R16 := R16(R17)
	84	[4670]	TEST     	R16 0 ; if not R16 then PC := 88
	85	[4670]	JMP      	88 ; PC := 88
	86	[4671]	GETTABLE 	R16 R12 K22 ; R16 := R12["mItemCount"]
	87	[4671]	SETTABLE 	R14 K21 R16 ; R14["Count"] := R16
	88	[4674]	GETGLOBAL	R16 K23 ; R16 := 0x33bdd652
	89	[4674]	GETTABLE 	R16 R16 K24 ; R16 := R16[0x23d5322f]
	90	[4674]	MOVE     	R17 R0 ; R17 := R0
	91	[4674]	MOVE     	R18 R14 ; R18 := R14
	92	[4674]	CALL     	R16 3 1 ; R16(R17,R18)
	93	[4647]	FORLOOP  	R8 29 ; R8 += R10; if R8 <= R9 then begin PC := 29; R11 := R8 end
	94	[4678]	GETGLOBAL	R16 K23 ; R16 := 0x33bdd652
	95	[4678]	GETTABLE 	R16 R16 K25 ; R16 := R16[0xf21b1d8e]
	96	[4678]	MOVE     	R17 R0 ; R17 := R0
	97	[4678]	CLOSURE  	R18 1 ; R18 := closure(Function #2)
	98	[4678]	CALL     	R16 3 1 ; R16(R17,R18)
	99	[4678]	CLOSE    	R5 ; SAVE R5,...
	100	[4681]	RETURN   	R0 1 ; return 

function #239 <?:4683,4720> (90 instructions, 360 bytes at 00000160C6829780)
1 param, 16 slots, 2 upvalues, 0 locals, 25 constants, 0 functions
	1	[4684]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4684]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x9f57dd7d]
	3	[4684]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[4684]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x5d10207d]
	5	[4684]	LOADK    	R3 := 9.000000
	6	[4684]	OP_LOADBOOL	R4 1 0 ; R4 := true
	7	[4684]	CALL     	R2 3 0 ; R2,... := R2(R3,R4)
	8	[4684]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	9	[4685]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[4685]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x9f57dd7d]
	11	[4685]	GETUPVAL 	R3 U1 ; R3 := U1
	12	[4685]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x5d10207d]
	13	[4685]	LOADK    	R4 := 6.000000
	14	[4685]	OP_LOADBOOL	R5 1 0 ; R5 := true
	15	[4685]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	16	[4685]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	17	[4688]	GETGLOBAL	R3 K3 ; R3 := 0x7f5022cf
	18	[4688]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x3f3e4d12]
	19	[4688]	GETGLOBAL	R4 K5 ; R4 := 0x603636ad
	20	[4688]	SELF     	R5 R0 K6 ; R6 := R0; R5 := R0[0xd3a9d01f]
	21	[4688]	CALL     	R5 2 2 ; R5 := R5(R6)
	22	[4688]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x6d604ba7]
	23	[4688]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[4688]	NEWTABLE 	R6 0 0 ; R6 := {}
	25	[4688]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	26	[4688]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	27	[4689]	GETGLOBAL	R4 K5 ; R4 := 0x603636ad
	28	[4689]	LOADK    	R5 K8 ; R5 := "/Lotus/Language/ShipFeatureItems/ShipFeatureUpgraded"
	29	[4689]	NEWTABLE 	R6 0 1 ; R6 := {}
	30	[4689]	SETTABLE 	R6 K9 R3 ; R6[0x64fb1586] := R3
	31	[4689]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	32	[4690]	LOADK    	R5 K10 ; R5 := "<font color=\"#FloatingContent\"><br><b>"
	33	[4690]	MOVE     	R6 R4 ; R6 := R4
	34	[4690]	CONCAT   	R4 R5 R6 ; R4 := R5 .. R6
	35	[4691]	MOVE     	R5 R4 ; R5 := R4
	36	[4691]	LOADK    	R6 K11 ; R6 := "</b><br><br></font>"
	37	[4691]	CONCAT   	R4 R5 R6 ; R4 := R5 .. R6
	38	[4694]	GETGLOBAL	R5 K5 ; R5 := 0x603636ad
	39	[4694]	SELF     	R6 R0 K12 ; R7 := R0; R6 := R0[0x5ba460ac]
	40	[4694]	CALL     	R6 2 2 ; R6 := R6(R7)
	41	[4694]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x6d604ba7]
	42	[4694]	CALL     	R6 2 2 ; R6 := R6(R7)
	43	[4694]	NEWTABLE 	R7 0 0 ; R7 := {}
	44	[4694]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	45	[4695]	LOADK    	R6 := 0.000000
	46	[4696]	LOADK    	R7 K13 ; R7 := ""
	47	[4701]	GETGLOBAL	R8 K3 ; R8 := 0x7f5022cf
	48	[4701]	GETTABLE 	R8 R8 K14 ; R8 := R8[0xa5c556b9]
	49	[4701]	MOVE     	R9 R5 ; R9 := R5
	50	[4701]	LOADK    	R10 K15 ; R10 := "\r\n%-[^%-^\r^\n]+"
	51	[4701]	MOVE     	R11 R6 ; R11 := R6
	52	[4701]	CALL     	R8 4 3 ; R8,R9 := R8(R9,R10,R11)
	53	[4702]	EQ       	1 R8 K16 ; if R8 == nil then PC := 78
	54	[4702]	JMP      	78 ; PC := 78
	55	[4702]	EQ       	0 R9 K16 ; if R9 ~= nil then PC := 58
	56	[4702]	JMP      	58 ; PC := 58
	57	[4703]	JMP      	78 ; PC := 78
	58	[4705]	SELF     	R10 R5 K17 ; R11 := R5; R10 := R5[0x1a94c9cc]
	59	[4705]	MOVE     	R12 R8 ; R12 := R8
	60	[4705]	MOVE     	R13 R9 ; R13 := R9
	61	[4705]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	62	[4706]	EQ       	1 R10 K16 ; if R10 == nil then PC := 78
	63	[4706]	JMP      	78 ; PC := 78
	64	[4707]	SELF     	R11 R10 K18 ; R12 := R10; R11 := R10[0x66edf04f]
	65	[4707]	LOADK    	R13 K19 ; R13 := "\r\n"
	66	[4707]	LOADK    	R14 K13 ; R14 := ""
	67	[4707]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	68	[4707]	MOVE     	R10 R11 ; R10 := R11
	69	[4708]	MOVE     	R11 R7 ; R11 := R7
	70	[4708]	LOADK    	R12 K20 ; R12 := "    "
	71	[4708]	MOVE     	R13 R10 ; R13 := R10
	72	[4708]	LOADK    	R14 K21 ; R14 := "<br>"
	73	[4708]	CONCAT   	R7 R11 R14 ; R7 := R11 .. R12 .. R13 .. R14
	74	[4708]	JMP      	76 ; PC := 76
	75	[4710]	JMP      	78 ; PC := 78
	76	[4712]	MOVE     	R6 R9 ; R6 := R9
	77	[4712]	JMP      	47 ; PC := 47
	78	[4716]	LOADK    	R11 K22 ; R11 := "<font color=\"#Content\">"
	79	[4716]	MOVE     	R12 R7 ; R12 := R7
	80	[4716]	LOADK    	R13 K23 ; R13 := "</font>"
	81	[4716]	CONCAT   	R7 R11 R13 ; R7 := R11 .. R12 .. R13
	82	[4719]	GETUPVAL 	R11 U0 ; R11 := U0
	83	[4719]	GETTABLE 	R11 R11 K24 ; R11 := R11[0xe0cba3ca]
	84	[4719]	MOVE     	R12 R4 ; R12 := R4
	85	[4719]	MOVE     	R13 R7 ; R13 := R7
	86	[4719]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	87	[4719]	LOADNIL  	R13 R14 ; R13 := R14 := nil
	88	[4719]	OP_LOADBOOL	R15 1 0 ; R15 := true
	89	[4719]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	90	[4720]	RETURN   	R0 1 ; return 

function #240 <?:4722,4781> (148 instructions, 592 bytes at 00000160C6829EB0)
1 param, 27 slots, 3 upvalues, 0 locals, 36 constants, 0 functions
	1	[4723]	GETGLOBAL	R1 K0 ; R1 := 0x76ea806b
	2	[4723]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x8792aaab]
	3	[4723]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4723]	TEST     	R1 0 ; if not R1 then PC := 145
	5	[4723]	JMP      	145 ; PC := 145
	6	[4724]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	7	[4724]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfb669000]
	8	[4724]	GETGLOBAL	R3 K4 ; R3 := gUIConsoleTriggerType
	9	[4724]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	10	[4726]	GETGLOBAL	R2 K5 ; R2 := 0x25d99d89
	11	[4727]	OP_LOADBOOL	R3 0 0 ; R3 := false
	12	[4728]	GETGLOBAL	R4 K6 ; R4 := 0x0469f296
	13	[4728]	LOADK    	R5 K7 ; R5 := "News"
	14	[4728]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[4729]	GETGLOBAL	R5 K6 ; R5 := 0x0469f296
	16	[4729]	LOADK    	R6 K8 ; R6 := "Conclave"
	17	[4729]	CALL     	R5 2 2 ; R5 := R5(R6)
	18	[4731]	LOADK    	R6 := 1.000000
	19	[4731]	LOADK    	R7 := 2.000000
	20	[4731]	LOADK    	R8 := 1.000000
	21	[4731]	FORPREP  	R6 141 ; R6 -= R8; PC := 141
	22	[4732]	LOADK    	R10 := 1.000000
	23	[4732]	LEN      	R11 R1 ; R11 := # R1
	24	[4732]	LOADK    	R12 := 1.000000
	25	[4732]	FORPREP  	R10 140 ; R10 -= R12; PC := 140
	26	[4733]	GETTABLE 	R14 R1 R13 ; R14 := R1[R13]
	27	[4733]	SELF     	R14 R14 K9 ; R15 := R14; R14 := R14[0x22da1852]
	28	[4733]	CALL     	R14 2 2 ; R14 := R14(R15)
	29	[4735]	OP_LOADBOOL	R15 1 0 ; R15 := true
	30	[4736]	GETGLOBAL	R16 K10 ; R16 := 0x1239e0a2
	31	[4736]	CALL     	R16 1 2 ; R16 := R16()
	32	[4736]	TEST     	R16 0 ; if not R16 then PC := 42
	33	[4736]	JMP      	42 ; PC := 42
	34	[4736]	GETGLOBAL	R16 K11 ; R16 := 0x34291f5c
	35	[4736]	GETTABLE 	R16 R16 K12 ; R16 := R16[0x056bfe8b]
	36	[4736]	CALL     	R16 1 2 ; R16 := R16()
	37	[4736]	TEST     	R16 1 ; if R16 then PC := 42
	38	[4736]	JMP      	42 ; PC := 42
	39	[4737]	EQ       	0 R14 R4 ; if R14 ~= R4 then PC := 42
	40	[4737]	JMP      	42 ; PC := 42
	41	[4738]	OP_LOADBOOL	R15 0 0 ; R15 := false
	42	[4742]	EQ       	1 R14 R5 ; if R14 == R5 then PC := 46
	43	[4742]	JMP      	46 ; PC := 46
	44	[4742]	EQ       	0 R14 R4 ; if R14 ~= R4 then PC := 51
	45	[4742]	JMP      	51 ; PC := 51
	46	[4742]	GETUPVAL 	R16 U0 ; R16 := U0
	47	[4742]	CALL     	R16 1 2 ; R16 := R16()
	48	[4742]	TEST     	R16 1 ; if R16 then PC := 51
	49	[4742]	JMP      	51 ; PC := 51
	50	[4743]	OP_LOADBOOL	R15 0 0 ; R15 := false
	51	[4746]	GETTABLE 	R16 R1 R13 ; R16 := R1[R13]
	52	[4746]	SELF     	R16 R16 K13 ; R17 := R16; R16 := R16[0xb62a384e]
	53	[4746]	CALL     	R16 2 2 ; R16 := R16(R17)
	54	[4746]	TEST     	R16 1 ; if R16 then PC := 140
	55	[4746]	JMP      	140 ; PC := 140
	56	[4746]	GETGLOBAL	R16 K14 ; R16 := 0x7b998233
	57	[4746]	MOVE     	R17 R2 ; R17 := R2
	58	[4746]	CALL     	R16 2 2 ; R16 := R16(R17)
	59	[4746]	TEST     	R16 1 ; if R16 then PC := 140
	60	[4746]	JMP      	140 ; PC := 140
	61	[4747]	GETTABLE 	R16 R1 R13 ; R16 := R1[R13]
	62	[4747]	SELF     	R16 R16 K15 ; R17 := R16; R16 := R16[0x8f163e57]
	63	[4747]	CALL     	R16 2 2 ; R16 := R16(R17)
	64	[4748]	LEN      	R17 R16 ; R17 := # R16
	65	[4748]	EQ       	1 R17 K16 ; if R17 == 0.000000 then PC := 68
	66	[4748]	JMP      	68 ; PC := 68
	67	[4748]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 68
	68	[4748]	OP_LOADBOOL	R17 1 0 ; R17 := true
	69	[4750]	GETUPVAL 	R18 U1 ; R18 := U1
	70	[4750]	GETTABLE 	R18 R18 K17 ; R18 := R18[0x06d055f9]
	71	[4750]	EQ       	1 R9 K18 ; if R9 == 1.000000 then PC := 74
	72	[4750]	JMP      	74 ; PC := 74
	73	[4750]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 74
	74	[4750]	OP_LOADBOOL	R19 1 0 ; R19 := true
	75	[4750]	GETGLOBAL	R20 K19 ; R20 := 0x5bced4c4
	76	[4750]	GETTABLE 	R20 R20 K20 ; R20 := R20[0xac1b386a]
	77	[4750]	LOADK    	R21 := 1.000000
	78	[4750]	LEN      	R22 R16 ; R22 := # R16
	79	[4750]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	80	[4750]	LEN      	R21 R16 ; R21 := # R16
	81	[4750]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	82	[4751]	LOADK    	R19 := 1.000000
	83	[4751]	MOVE     	R20 R18 ; R20 := R18
	84	[4751]	LOADK    	R21 := 1.000000
	85	[4751]	FORPREP  	R19 126 ; R19 -= R21; PC := 126
	86	[4752]	GETTABLE 	R23 R16 R22 ; R23 := R16[R22]
	87	[4752]	GETTABLE 	R23 R23 K21 ; R23 := R23["mFeatureItem"]
	88	[4753]	SELF     	R24 R2 K22 ; R25 := R2; R24 := R2[0x4ae54c32]
	89	[4753]	MOVE     	R26 R23 ; R26 := R23
	90	[4753]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	91	[4753]	TEST     	R24 0 ; if not R24 then PC := 99
	92	[4753]	JMP      	99 ; PC := 99
	93	[4754]	GETTABLE 	R24 R1 R13 ; R24 := R1[R13]
	94	[4754]	SELF     	R24 R24 K23 ; R25 := R24; R24 := R24[0x32817074]
	95	[4754]	MOVE     	R26 R23 ; R26 := R23
	96	[4754]	CALL     	R24 3 1 ; R24(R25,R26)
	97	[4755]	OP_LOADBOOL	R17 1 0 ; R17 := true
	98	[4755]	JMP      	126 ; PC := 126
	99	[4756]	TEST     	R3 1 ; if R3 then PC := 126
	100	[4756]	JMP      	126 ; PC := 126
	101	[4756]	SELF     	R24 R2 K24 ; R25 := R2; R24 := R2[0x28d326ac]
	102	[4756]	MOVE     	R26 R23 ; R26 := R23
	103	[4756]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	104	[4756]	TEST     	R24 0 ; if not R24 then PC := 126
	105	[4756]	JMP      	126 ; PC := 126
	106	[4756]	GETTABLE 	R24 R16 R22 ; R24 := R16[R22]
	107	[4756]	GETTABLE 	R24 R24 K25 ; R24 := R24["mRequiresMainUpgrade"]
	108	[4756]	TEST     	R24 0 ; if not R24 then PC := 115
	109	[4756]	JMP      	115 ; PC := 115
	110	[4756]	GETTABLE 	R24 R1 R13 ; R24 := R1[R13]
	111	[4756]	SELF     	R24 R24 K26 ; R25 := R24; R24 := R24[0x9dba7a65]
	112	[4756]	CALL     	R24 2 2 ; R24 := R24(R25)
	113	[4756]	TEST     	R24 0 ; if not R24 then PC := 126
	114	[4756]	JMP      	126 ; PC := 126
	115	[4757]	GETTABLE 	R24 R1 R13 ; R24 := R1[R13]
	116	[4757]	SELF     	R24 R24 K27 ; R25 := R24; R24 := R24[0xd76f0956]
	117	[4757]	MOVE     	R26 R23 ; R26 := R23
	118	[4757]	CALL     	R24 3 1 ; R24(R25,R26)
	119	[4758]	OP_LOADBOOL	R17 1 0 ; R17 := true
	120	[4759]	GETUPVAL 	R24 U2 ; R24 := U2
	121	[4759]	GETTABLE 	R25 R16 R22 ; R25 := R16[R22]
	122	[4759]	GETTABLE 	R25 R25 K28 ; R25 := R25["mInstallNowTransmission"]
	123	[4759]	CALL     	R24 2 1 ; R24(R25)
	124	[4764]	OP_LOADBOOL	R3 1 0 ; R3 := true
	125	[4765]	JMP      	127 ; PC := 127
	126	[4751]	FORLOOP  	R19 86 ; R19 += R21; if R19 <= R20 then begin PC := 86; R22 := R19 end
	127	[4769]	GETTABLE 	R24 R1 R13 ; R24 := R1[R13]
	128	[4769]	SELF     	R24 R24 K29 ; R25 := R24; R24 := R24[0x56c05b89]
	129	[4769]	TESTSET  	R26 R17 0 ; if not R17 then PC := 132 else R26 := R17 
	130	[4769]	JMP      	132 ; PC := 132
	131	[4769]	MOVE     	R26 R15 ; R26 := R15
	132	[4769]	CALL     	R24 3 1 ; R24(R25,R26)
	133	[4770]	TEST     	R0 0 ; if not R0 then PC := 140
	134	[4770]	JMP      	140 ; PC := 140
	135	[4770]	TEST     	R15 0 ; if not R15 then PC := 140
	136	[4770]	JMP      	140 ; PC := 140
	137	[4771]	GETTABLE 	R24 R1 R13 ; R24 := R1[R13]
	138	[4771]	SELF     	R24 R24 K30 ; R25 := R24; R24 := R24[0x6bfeac2e]
	139	[4771]	CALL     	R24 2 1 ; R24(R25)
	140	[4732]	FORLOOP  	R10 26 ; R10 += R12; if R10 <= R11 then begin PC := 26; R13 := R10 end
	141	[4731]	FORLOOP  	R6 22 ; R6 += R8; if R6 <= R7 then begin PC := 22; R9 := R6 end
	142	[4777]	GETGLOBAL	R24 K31 ; R24 := _T
	143	[4777]	SETTABLE 	R24 K32 K33 ; R24["uiConsoleTriggersInitialized"] := true
	144	[4777]	JMP      	148 ; PC := 148
	145	[4779]	GETGLOBAL	R24 K34 ; R24 := 0x3d106989
	146	[4779]	LOADK    	R25 K35 ; R25 := "Warning: called UpdateUIConsoleTriggers but the player isn't logged in yet!"
	147	[4779]	CALL     	R24 2 1 ; R24(R25)
	148	[4781]	RETURN   	R0 1 ; return 

function #241 <?:4783,4800> (55 instructions, 220 bytes at 00000160C682A850)
1 param, 13 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[4784]	MOVE     	R1 R0 ; R1 := R0
	2	[4785]	GETGLOBAL	R2 K0 ; R2 := 0x7f5022cf
	3	[4785]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x41e2ae25]
	4	[4785]	MOVE     	R3 R0 ; R3 := R0
	5	[4785]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[4786]	EQ       	0 R2 K2 ; if R2 ~= 0.000000 then PC := 10
	7	[4786]	JMP      	10 ; PC := 10
	8	[4787]	OP_LOADBOOL	R3 0 0 ; R3 := false
	9	[4787]	RETURN   	R3 2 ; return R3 
	10	[4790]	GETGLOBAL	R3 K0 ; R3 := 0x7f5022cf
	11	[4790]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x1a94c9cc]
	12	[4790]	MOVE     	R4 R0 ; R4 := R0
	13	[4790]	LOADK    	R5 := 1.000000
	14	[4790]	LOADK    	R6 := 1.000000
	15	[4790]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	16	[4791]	GETGLOBAL	R4 K0 ; R4 := 0x7f5022cf
	17	[4791]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x1a94c9cc]
	18	[4791]	MOVE     	R5 R0 ; R5 := R0
	19	[4791]	MOVE     	R6 R2 ; R6 := R2
	20	[4791]	MOVE     	R7 R2 ; R7 := R2
	21	[4791]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	22	[4792]	LOADK    	R5 := 0.000000
	23	[4792]	LOADK    	R6 := 9.000000
	24	[4792]	LOADK    	R7 := 1.000000
	25	[4792]	FORPREP  	R5 35 ; R5 -= R7; PC := 35
	26	[4793]	GETGLOBAL	R9 K0 ; R9 := 0x7f5022cf
	27	[4793]	GETTABLE 	R9 R9 K4 ; R9 := R9[0x66edf04f]
	28	[4793]	MOVE     	R10 R1 ; R10 := R1
	29	[4793]	GETGLOBAL	R11 K5 ; R11 := 0x64fb1586
	30	[4793]	MOVE     	R12 R8 ; R12 := R8
	31	[4793]	CALL     	R11 2 2 ; R11 := R11(R12)
	32	[4793]	LOADK    	R12 K6 ; R12 := ""
	33	[4793]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	34	[4793]	MOVE     	R1 R9 ; R1 := R9
	35	[4792]	FORLOOP  	R5 26 ; R5 += R7; if R5 <= R6 then begin PC := 26; R8 := R5 end
	36	[4795]	EQ       	1 R1 K6 ; if R1 == "" then PC := 50
	37	[4795]	JMP      	50 ; PC := 50
	38	[4795]	EQ       	1 R1 K7 ; if R1 == "." then PC := 50
	39	[4795]	JMP      	50 ; PC := 50
	40	[4795]	EQ       	0 R1 K8 ; if R1 ~= " " then PC := 46
	41	[4795]	JMP      	46 ; PC := 46
	42	[4795]	EQ       	1 R3 K8 ; if R3 == " " then PC := 50
	43	[4795]	JMP      	50 ; PC := 50
	44	[4795]	EQ       	1 R4 K8 ; if R4 == " " then PC := 50
	45	[4795]	JMP      	50 ; PC := 50
	46	[4795]	EQ       	1 R1 K9 ; if R1 == ". " then PC := 50
	47	[4795]	JMP      	50 ; PC := 50
	48	[4795]	EQ       	0 R1 K10 ; if R1 ~= " ." then PC := 53
	49	[4795]	JMP      	53 ; PC := 53
	50	[4796]	OP_LOADBOOL	R9 1 0 ; R9 := true
	51	[4796]	RETURN   	R9 2 ; return R9 
	52	[4796]	JMP      	55 ; PC := 55
	53	[4798]	OP_LOADBOOL	R9 0 0 ; R9 := false
	54	[4798]	RETURN   	R9 2 ; return R9 
	55	[4800]	RETURN   	R0 1 ; return 

function #242 <?:4802,4835> (94 instructions, 376 bytes at 00000160C682ABE0)
2 params, 11 slots, 1 upvalue, 0 locals, 21 constants, 0 functions
	1	[4803]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[4803]	GETTABLE 	R2 R2 K1 ; R2 := R2["GetTopScreen"]
	3	[4803]	TEST     	R2 0 ; if not R2 then PC := 15
	4	[4803]	JMP      	15 ; PC := 15
	5	[4803]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	6	[4803]	GETGLOBAL	R3 K3 ; R3 := 0x89326c93
	7	[4803]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[4803]	TEST     	R2 1 ; if R2 then PC := 15
	9	[4803]	JMP      	15 ; PC := 15
	10	[4803]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	11	[4803]	MOVE     	R3 R0 ; R3 := R0
	12	[4803]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[4803]	TEST     	R2 0 ; if not R2 then PC := 17
	14	[4803]	JMP      	17 ; PC := 17
	15	[4804]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[4804]	RETURN   	R2 2 ; return R2 
	17	[4807]	GETGLOBAL	R2 K0 ; R2 := _T
	18	[4807]	GETTABLE 	R2 R2 K4 ; R2 := R2[0x876f7e29]
	19	[4807]	CALL     	R2 1 3 ; R2,R3 := R2()
	20	[4809]	GETGLOBAL	R4 K3 ; R4 := 0x89326c93
	21	[4809]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0xdd25e9d1]
	22	[4809]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[4810]	SELF     	R5 R0 K6 ; R6 := R0; R5 := R0[0xde321e6f]
	24	[4810]	CALL     	R5 2 2 ; R5 := R5(R6)
	25	[4811]	SELF     	R6 R5 K7 ; R7 := R5; R6 := R5[0x881b6b90]
	26	[4811]	LOADK    	R8 := 0.000000
	27	[4811]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	28	[4813]	GETGLOBAL	R7 K0 ; R7 := _T
	29	[4813]	GETTABLE 	R7 R7 K9 ; R7 := R7["DisableHeadTracking"]
	30	[4813]	TEST     	R7 1 ; if R7 then PC := 73
	31	[4813]	JMP      	73 ; PC := 73
	32	[4814]	EQ       	1 R3 K10 ; if R3 == "LoadOut" then PC := 73
	33	[4814]	JMP      	73 ; PC := 73
	34	[4815]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	35	[4815]	MOVE     	R8 R4 ; R8 := R4
	36	[4815]	CALL     	R7 2 2 ; R7 := R7(R8)
	37	[4815]	TEST     	R7 0 ; if not R7 then PC := 73
	38	[4815]	JMP      	73 ; PC := 73
	39	[4816]	SELF     	R7 R0 K11 ; R8 := R0; R7 := R0[0x6f8babf9]
	40	[4816]	CALL     	R7 2 2 ; R7 := R7(R8)
	41	[4816]	TEST     	R7 1 ; if R7 then PC := 73
	42	[4816]	JMP      	73 ; PC := 73
	43	[4817]	SELF     	R7 R0 K12 ; R8 := R0; R7 := R0[0x10ba8e3e]
	44	[4817]	CALL     	R7 2 2 ; R7 := R7(R8)
	45	[4817]	TEST     	R7 1 ; if R7 then PC := 73
	46	[4817]	JMP      	73 ; PC := 73
	47	[4818]	SELF     	R7 R0 K13 ; R8 := R0; R7 := R0[0x0e46e45b]
	48	[4818]	LOADK    	R9 := 0.000000
	49	[4818]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	50	[4818]	TEST     	R7 1 ; if R7 then PC := 73
	51	[4818]	JMP      	73 ; PC := 73
	52	[4819]	SELF     	R7 R0 K13 ; R8 := R0; R7 := R0[0x0e46e45b]
	53	[4819]	LOADK    	R9 := 3.000000
	54	[4819]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	55	[4819]	TEST     	R7 1 ; if R7 then PC := 73
	56	[4819]	JMP      	73 ; PC := 73
	57	[4820]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	58	[4820]	MOVE     	R8 R6 ; R8 := R6
	59	[4820]	CALL     	R7 2 2 ; R7 := R7(R8)
	60	[4820]	TEST     	R7 1 ; if R7 then PC := 69
	61	[4820]	JMP      	69 ; PC := 69
	62	[4820]	SELF     	R7 R6 K14 ; R8 := R6; R7 := R6[0x6bb20d05]
	63	[4820]	CALL     	R7 2 2 ; R7 := R7(R8)
	64	[4820]	TEST     	R7 1 ; if R7 then PC := 73
	65	[4820]	JMP      	73 ; PC := 73
	66	[4820]	GETUPVAL 	R7 U0 ; R7 := U0
	67	[4820]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 73
	68	[4820]	JMP      	73 ; PC := 73
	69	[4821]	SELF     	R7 R0 K15 ; R8 := R0; R7 := R0[0xcbc38746]
	70	[4821]	CALL     	R7 2 2 ; R7 := R7(R8)
	71	[4821]	TEST     	R7 0 ; if not R7 then PC := 76
	72	[4821]	JMP      	76 ; PC := 76
	73	[4823]	SELF     	R7 R0 K16 ; R8 := R0; R7 := R0[0xebccefdd]
	74	[4823]	CALL     	R7 2 1 ; R7(R8)
	75	[4823]	JMP      	92 ; PC := 92
	76	[4825]	LOADNIL  	R7 R7 ; R7 := nil
	77	[4826]	GETGLOBAL	R8 K0 ; R8 := _T
	78	[4826]	GETTABLE 	R8 R8 K17 ; R8 := R8["DiegeticPosition"]
	79	[4826]	TEST     	R8 0 ; if not R8 then PC := 86
	80	[4826]	JMP      	86 ; PC := 86
	81	[4826]	EQ       	1 R1 K18 ; if R1 == true then PC := 86
	82	[4826]	JMP      	86 ; PC := 86
	83	[4827]	GETGLOBAL	R8 K0 ; R8 := _T
	84	[4827]	GETTABLE 	R7 R8 K17 ; R7 := R8["DiegeticPosition"]
	85	[4827]	JMP      	89 ; PC := 89
	86	[4829]	SELF     	R8 R5 K19 ; R9 := R5; R8 := R5[0xefd0fde2]
	87	[4829]	CALL     	R8 2 2 ; R8 := R8(R9)
	88	[4829]	MOVE     	R7 R8 ; R7 := R8
	89	[4832]	SELF     	R8 R0 K20 ; R9 := R0; R8 := R0[0x98776060]
	90	[4832]	MOVE     	R10 R7 ; R10 := R7
	91	[4832]	CALL     	R8 3 1 ; R8(R9,R10)
	92	[4834]	OP_LOADBOOL	R8 1 0 ; R8 := true
	93	[4834]	RETURN   	R8 2 ; return R8 
	94	[4835]	RETURN   	R0 1 ; return 

function #243 <?:4837,4870> (60 instructions, 240 bytes at 00000160C682B1B0)
2 params, 27 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[4838]	NEWTABLE 	R2 0 0 ; R2 := {}
	2	[4840]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	3	[4840]	MOVE     	R4 R1 ; R4 := R1
	4	[4840]	CALL     	R3 2 2 ; R3 := R3(R4)
	5	[4840]	TEST     	R3 0 ; if not R3 then PC := 8
	6	[4840]	JMP      	8 ; PC := 8
	7	[4841]	RETURN   	R2 2 ; return R2 
	8	[4845]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[4845]	CALL     	R3 1 2 ; R3 := R3()
	10	[4846]	NEWTABLE 	R4 0 0 ; R4 := {}
	11	[4848]	SELF     	R5 R0 K1 ; R6 := R0; R5 := R0[0xb407484d]
	12	[4848]	CALL     	R5 2 2 ; R5 := R5(R6)
	13	[4849]	LOADK    	R6 := 1.000000
	14	[4849]	LEN      	R7 R5 ; R7 := # R5
	15	[4849]	LOADK    	R8 := 1.000000
	16	[4849]	FORPREP  	R6 23 ; R6 -= R8; PC := 23
	17	[4850]	SELF     	R10 R3 K2 ; R11 := R3; R10 := R3[0x5484bf3c]
	18	[4850]	GETTABLE 	R12 R5 R9 ; R12 := R5[R9]
	19	[4850]	GETTABLE 	R12 R12 K3 ; R12 := R12["mTag"]
	20	[4850]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	21	[4851]	GETTABLE 	R11 R10 K4 ; R11 := R10["name"]
	22	[4851]	SETTABLE 	R4 R11 K5 ; R4[R11] := true
	23	[4849]	FORLOOP  	R6 17 ; R6 += R8; if R6 <= R7 then begin PC := 17; R9 := R6 end
	24	[4855]	SELF     	R11 R1 K6 ; R12 := R1; R11 := R1[0xe9cbffa8]
	25	[4855]	GETGLOBAL	R13 K7 ; R13 := gNavigationFeatureItemType
	26	[4855]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	27	[4856]	LOADK    	R12 := 1.000000
	28	[4856]	LEN      	R13 R11 ; R13 := # R11
	29	[4856]	LOADK    	R14 := 1.000000
	30	[4856]	FORPREP  	R12 58 ; R12 -= R14; PC := 58
	31	[4857]	GETTABLE 	R16 R11 R15 ; R16 := R11[R15]
	32	[4857]	SELF     	R16 R16 K8 ; R17 := R16; R16 := R16[0xf278f8a1]
	33	[4857]	CALL     	R16 2 2 ; R16 := R16(R17)
	34	[4858]	GETGLOBAL	R17 K9 ; R17 := 0xb009bbc6
	35	[4858]	MOVE     	R18 R16 ; R18 := R16
	36	[4858]	CALL     	R17 2 2 ; R17 := R17(R18)
	37	[4859]	SELF     	R18 R17 K10 ; R19 := R17; R18 := R17[0x3ff99026]
	38	[4859]	CALL     	R18 2 2 ; R18 := R18(R19)
	39	[4860]	LOADK    	R19 := 1.000000
	40	[4860]	LEN      	R20 R18 ; R20 := # R18
	41	[4860]	LOADK    	R21 := 1.000000
	42	[4860]	FORPREP  	R19 57 ; R19 -= R21; PC := 57
	43	[4861]	SELF     	R23 R3 K2 ; R24 := R3; R23 := R3[0x5484bf3c]
	44	[4861]	GETTABLE 	R25 R18 R22 ; R25 := R18[R22]
	45	[4861]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	46	[4862]	GETTABLE 	R24 R23 K4 ; R24 := R23["name"]
	47	[4862]	GETTABLE 	R24 R4 R24 ; R24 := R4[R24]
	48	[4862]	TEST     	R24 0 ; if not R24 then PC := 57
	49	[4862]	JMP      	57 ; PC := 57
	50	[4863]	GETTABLE 	R24 R23 K4 ; R24 := R23["name"]
	51	[4863]	SETTABLE 	R4 R24 K11 ; R4[R24] := false
	52	[4864]	GETGLOBAL	R24 K12 ; R24 := 0x33bdd652
	53	[4864]	GETTABLE 	R24 R24 K13 ; R24 := R24[0x23d5322f]
	54	[4864]	MOVE     	R25 R2 ; R25 := R2
	55	[4864]	MOVE     	R26 R16 ; R26 := R16
	56	[4864]	CALL     	R24 3 1 ; R24(R25,R26)
	57	[4860]	FORLOOP  	R19 43 ; R19 += R21; if R19 <= R20 then begin PC := 43; R22 := R19 end
	58	[4856]	FORLOOP  	R12 31 ; R12 += R14; if R12 <= R13 then begin PC := 31; R15 := R12 end
	59	[4869]	RETURN   	R2 2 ; return R2 
	60	[4870]	RETURN   	R0 1 ; return 

function #244 <?:4872,4890> (99 instructions, 396 bytes at 00000160C682B530)
3 params, 18 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[4873]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[4873]	GETTABLE 	R3 R3 K0 ; R3 := R3[0x8bcd12b6]
	3	[4873]	GETGLOBAL	R4 K1 ; R4 := 0x0032441c
	4	[4873]	GETTABLE 	R4 R4 K2 ; R4 := R4["UIColor_DarkGrey"]
	5	[4873]	CALL     	R3 2 2 ; R3 := R3(R4)
	6	[4875]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[4875]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x06d055f9]
	8	[4875]	EQ       	1 R2 K4 ; if R2 == nil then PC := 11
	9	[4875]	JMP      	11 ; PC := 11
	10	[4875]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 11
	11	[4875]	OP_LOADBOOL	R5 1 0 ; R5 := true
	12	[4875]	GETGLOBAL	R6 K1 ; R6 := 0x0032441c
	13	[4875]	GETTABLE 	R6 R6 K5 ; R6 := R6["UIMaterial_Rectangle"]
	14	[4875]	MOVE     	R7 R2 ; R7 := R2
	15	[4875]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	16	[4876]	GETGLOBAL	R5 K6 ; R5 := 0xc8802016
	17	[4876]	NEWTABLE 	R6 3 0 ; R6 := {}
	18	[4876]	MOVE     	R7 R1 ; R7 := R1
	19	[4876]	LOADK    	R8 K7 ; R8 := ".Foreground"
	20	[4876]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	21	[4876]	MOVE     	R8 R1 ; R8 := R1
	22	[4876]	LOADK    	R9 K8 ; R9 := ".Shadow"
	23	[4876]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	24	[4876]	MOVE     	R9 R1 ; R9 := R1
	25	[4876]	LOADK    	R10 K9 ; R10 := ".BackShadow"
	26	[4876]	CONCAT   	R9 R9 R10 ; R9 := R9 .. R10
	27	[4876]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	28	[4876]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	29	[4876]	JMP      	56 ; PC := 56
	30	[4877]	SELF     	R10 R0 K10 ; R11 := R0; R10 := R0[0xd5181643]
	31	[4877]	MOVE     	R12 R9 ; R12 := R9
	32	[4877]	MOVE     	R13 R4 ; R13 := R4
	33	[4877]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	34	[4878]	SELF     	R10 R0 K11 ; R11 := R0; R10 := R0[0x91e13703]
	35	[4878]	MOVE     	R12 R9 ; R12 := R9
	36	[4878]	LOADK    	R13 K12 ; R13 := "RectInnerColor"
	37	[4878]	GETTABLE 	R14 R3 K13 ; R14 := R3["r"]
	38	[4878]	GETTABLE 	R15 R3 K14 ; R15 := R3["g"]
	39	[4878]	GETTABLE 	R16 R3 K15 ; R16 := R3["b"]
	40	[4878]	LOADK    	R17 K16 ; R17 := 0.350000
	41	[4878]	CALL     	R10 8 1 ; R10(R11,R12,R13,R14,R15,R16,R17)
	42	[4879]	SELF     	R10 R0 K11 ; R11 := R0; R10 := R0[0x91e13703]
	43	[4879]	MOVE     	R12 R9 ; R12 := R9
	44	[4879]	LOADK    	R13 K17 ; R13 := "RectEdgeColor"
	45	[4879]	GETGLOBAL	R14 K1 ; R14 := 0x0032441c
	46	[4879]	GETTABLE 	R14 R14 K18 ; R14 := R14["UIColorObject_White"]
	47	[4879]	GETTABLE 	R14 R14 K13 ; R14 := R14["r"]
	48	[4879]	GETGLOBAL	R15 K1 ; R15 := 0x0032441c
	49	[4879]	GETTABLE 	R15 R15 K18 ; R15 := R15["UIColorObject_White"]
	50	[4879]	GETTABLE 	R15 R15 K14 ; R15 := R15["g"]
	51	[4879]	GETGLOBAL	R16 K1 ; R16 := 0x0032441c
	52	[4879]	GETTABLE 	R16 R16 K18 ; R16 := R16["UIColorObject_White"]
	53	[4879]	GETTABLE 	R16 R16 K15 ; R16 := R16["b"]
	54	[4879]	LOADK    	R17 := 1.000000
	55	[4879]	CALL     	R10 8 1 ; R10(R11,R12,R13,R14,R15,R16,R17)
	56	[4876]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 30; R7 := R8 end
	57	[4879]	JMP      	30 ; PC := 30
	58	[4882]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	59	[4882]	MOVE     	R12 R1 ; R12 := R1
	60	[4882]	LOADK    	R13 K20 ; R13 := "Foreground"
	61	[4882]	LOADK    	R14 := 4.000000
	62	[4882]	LOADK    	R15 := 0.000000
	63	[4882]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	64	[4883]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	65	[4883]	MOVE     	R12 R1 ; R12 := R1
	66	[4883]	LOADK    	R13 K21 ; R13 := "Shadow"
	67	[4883]	LOADK    	R14 := 4.000000
	68	[4883]	LOADK    	R15 := 200.000000
	69	[4883]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	70	[4884]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	71	[4884]	MOVE     	R12 R1 ; R12 := R1
	72	[4884]	LOADK    	R13 K22 ; R13 := "BackShadow"
	73	[4884]	LOADK    	R14 := 4.000000
	74	[4884]	LOADK    	R15 := 400.000000
	75	[4884]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	76	[4886]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	77	[4886]	MOVE     	R12 R1 ; R12 := R1
	78	[4886]	LOADK    	R13 K20 ; R13 := "Foreground"
	79	[4886]	LOADK    	R14 := 10.000000
	80	[4886]	LOADK    	R15 := 75.000000
	81	[4886]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	82	[4887]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	83	[4887]	MOVE     	R12 R1 ; R12 := R1
	84	[4887]	LOADK    	R13 K21 ; R13 := "Shadow"
	85	[4887]	LOADK    	R14 := 10.000000
	86	[4887]	LOADK    	R15 := 45.000000
	87	[4887]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	88	[4888]	SELF     	R10 R0 K19 ; R11 := R0; R10 := R0[0xf64b7262]
	89	[4888]	MOVE     	R12 R1 ; R12 := R1
	90	[4888]	LOADK    	R13 K22 ; R13 := "BackShadow"
	91	[4888]	LOADK    	R14 := 10.000000
	92	[4888]	LOADK    	R15 := 25.000000
	93	[4888]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	94	[4889]	GETGLOBAL	R10 K23 ; R10 := 0x7b998233
	95	[4889]	MOVE     	R11 R4 ; R11 := R4
	96	[4889]	CALL     	R10 2 2 ; R10 := R10(R11)
	97	[4889]	NOT      	R10 R10 ; R10 := not R10
	98	[4889]	RETURN   	R10 2 ; return R10 
	99	[4890]	RETURN   	R0 1 ; return 

function #245 <?:4893,4899> (14 instructions, 56 bytes at 00000160C682BC80)
1 param, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[4894]	LE       	0 R0 K0 ; if R0 > 0.003131 then PC := 6
	2	[4894]	JMP      	6 ; PC := 6
	3	[4895]	MUL      	R1 R0 K1 ; R1 := R0 * 12.920000
	4	[4895]	RETURN   	R1 2 ; return R1 
	5	[4895]	JMP      	14 ; PC := 14
	6	[4897]	GETGLOBAL	R1 K2 ; R1 := 0x5bced4c4
	7	[4897]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xa40531d8]
	8	[4897]	MOVE     	R2 R0 ; R2 := R0
	9	[4897]	LOADK    	R3 K4 ; R3 := 0.416667
	10	[4897]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	11	[4897]	MUL      	R1 K5 R1 ; R1 := 1.055000 * R1
	12	[4897]	SUB      	R1 R1 K6 ; R1 := R1 - 0.055000
	13	[4897]	RETURN   	R1 2 ; return R1 
	14	[4899]	RETURN   	R0 1 ; return 

function #246 <?:4901,4907> (13 instructions, 52 bytes at 00000160C682BE30)
1 param, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[4902]	LE       	0 R0 K0 ; if R0 > 0.039280 then PC := 6
	2	[4902]	JMP      	6 ; PC := 6
	3	[4903]	DIV      	R1 R0 K1 ; R1 := R0 / 12.920000
	4	[4903]	RETURN   	R1 2 ; return R1 
	5	[4903]	JMP      	13 ; PC := 13
	6	[4905]	GETGLOBAL	R1 K2 ; R1 := 0x5bced4c4
	7	[4905]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xa40531d8]
	8	[4905]	ADD      	R2 R0 K4 ; R2 := R0 + 0.055000
	9	[4905]	DIV      	R2 R2 K5 ; R2 := R2 / 1.055000
	10	[4905]	LOADK    	R3 K6 ; R3 := 2.400000
	11	[4905]	TAILCALL 	R1 3 0 ; R1,... := R1(R2,R3)
	12	[4905]	RETURN   	R1 0 ; return R1,... 
	13	[4907]	RETURN   	R0 1 ; return 

function #247 <?:4911,4927> (37 instructions, 148 bytes at 00000160C682BFE0)
0 params, 10 slots, 2 upvalues, 0 locals, 21 constants, 0 functions
	1	[4912]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4912]	CALL     	R0 1 2 ; R0 := R0()
	3	[4913]	NEWTABLE 	R1 0 0 ; R1 := {}
	4	[4913]	SETUPVAL 	R1 U1 ; U1 := R1
	5	[4914]	GETUPVAL 	R1 U1 ; R1 := U1
	6	[4914]	SETTABLE 	R1 K1 K2 ; R1[1.000000] := "<POLARITY_ATTACK>"
	7	[4915]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[4915]	SETTABLE 	R1 K3 K4 ; R1[2.000000] := "<POLARITY_DEFENSE>"
	9	[4916]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[4916]	SETTABLE 	R1 K5 K6 ; R1[3.000000] := "<POLARITY_TACTIC>"
	11	[4917]	GETUPVAL 	R1 U1 ; R1 := U1
	12	[4917]	SETTABLE 	R1 K7 K8 ; R1[4.000000] := "<POLARITY_POWER>"
	13	[4918]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[4918]	SETTABLE 	R1 K9 K10 ; R1[5.000000] := "<POLARITY_PRECEPT>"
	15	[4919]	GETUPVAL 	R1 U1 ; R1 := U1
	16	[4919]	SETTABLE 	R1 K11 K12 ; R1[6.000000] := "<POLARITY_FUSION>"
	17	[4920]	GETUPVAL 	R1 U1 ; R1 := U1
	18	[4920]	SETTABLE 	R1 K13 K14 ; R1[7.000000] := "<POLARITY_WARD>"
	19	[4921]	GETUPVAL 	R1 U1 ; R1 := U1
	20	[4921]	SETTABLE 	R1 K15 K16 ; R1[8.000000] := "<POLARITY_UMBRA>"
	21	[4922]	GETUPVAL 	R1 U1 ; R1 := U1
	22	[4922]	SETTABLE 	R1 K17 K18 ; R1[9.000000] := "<POLARITY_ANY>"
	23	[4924]	LOADK    	R1 := 1.000000
	24	[4924]	GETUPVAL 	R2 U1 ; R2 := U1
	25	[4924]	LEN      	R2 R2 ; R2 := # R2
	26	[4924]	LOADK    	R3 := 1.000000
	27	[4924]	FORPREP  	R1 36 ; R1 -= R3; PC := 36
	28	[4925]	GETUPVAL 	R5 U1 ; R5 := U1
	29	[4925]	GETTABLE 	R6 R0 K19 ; R6 := R0["mMovie"]
	30	[4925]	SELF     	R6 R6 K20 ; R7 := R6; R6 := R6[0x42b04007]
	31	[4925]	GETUPVAL 	R8 U1 ; R8 := U1
	32	[4925]	GETTABLE 	R8 R8 R4 ; R8 := R8[R4]
	33	[4925]	OP_LOADBOOL	R9 1 0 ; R9 := true
	34	[4925]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	35	[4925]	SETTABLE 	R5 R4 R6 ; R5[R4] := R6
	36	[4924]	FORLOOP  	R1 28 ; R1 += R3; if R1 <= R2 then begin PC := 28; R4 := R1 end
	37	[4927]	RETURN   	R0 1 ; return 

function #248 <?:4929,4931> (3 instructions, 12 bytes at 00000160C682C570)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4930]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4930]	CALL     	R0 1 1 ; R0()
	3	[4931]	RETURN   	R0 1 ; return 

function #249 <?:4933,4942> (15 instructions, 60 bytes at 00000160C682C640)
1 param, 2 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[4934]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4934]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 6
	3	[4934]	JMP      	6 ; PC := 6
	4	[4935]	GETUPVAL 	R1 U1 ; R1 := U1
	5	[4935]	CALL     	R1 1 1 ; R1()
	6	[4938]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[4938]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	8	[4938]	TEST     	R1 0 ; if not R1 then PC := 13
	9	[4938]	JMP      	13 ; PC := 13
	10	[4939]	GETUPVAL 	R1 U0 ; R1 := U0
	11	[4939]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	12	[4939]	RETURN   	R1 2 ; return R1 
	13	[4941]	LOADK    	R1 K1 ; R1 := ""
	14	[4941]	RETURN   	R1 2 ; return R1 
	15	[4942]	RETURN   	R0 1 ; return 

function #250 <?:4944,4954> (29 instructions, 116 bytes at 00000160C682C7A0)
1 param, 6 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[4945]	GETGLOBAL	R1 K0 ; R1 := 0x0b96777e
	2	[4945]	MOVE     	R2 R0 ; R2 := R0
	3	[4945]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4945]	EQ       	1 R1 K1 ; if R1 == "string" then PC := 9
	5	[4945]	JMP      	9 ; PC := 9
	6	[4946]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xed4e0128]
	7	[4946]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[4946]	MOVE     	R0 R1 ; R0 := R1
	9	[4948]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	10	[4948]	GETGLOBAL	R2 K4 ; R2 := 0x0032441c
	11	[4948]	GETTABLE 	R2 R2 K5 ; R2 := R2["UIMovie_EndOfQuestMovie"]
	12	[4948]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[4948]	TEST     	R1 1 ; if R1 then PC := 29
	14	[4948]	JMP      	29 ; PC := 29
	15	[4949]	GETGLOBAL	R1 K6 ; R1 := 0x9ba7909f
	16	[4949]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xcfba257f]
	17	[4949]	GETGLOBAL	R3 K4 ; R3 := 0x0032441c
	18	[4949]	GETTABLE 	R3 R3 K5 ; R3 := R3["UIMovie_EndOfQuestMovie"]
	19	[4949]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	20	[4950]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	21	[4950]	MOVE     	R3 R1 ; R3 := R1
	22	[4950]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[4950]	TEST     	R2 1 ; if R2 then PC := 29
	24	[4950]	JMP      	29 ; PC := 29
	25	[4951]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0xe4162eed]
	26	[4951]	LOADK    	R4 K9 ; R4 := "SetQuestType"
	27	[4951]	MOVE     	R5 R0 ; R5 := R0
	28	[4951]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	29	[4954]	RETURN   	R0 1 ; return 

function #251 <?:4956,4963> (43 instructions, 172 bytes at 00000160C682CA80)
3 params, 11 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[4957]	EQ       	0 R2 K0 ; if R2 ~= nil then PC := 4
	2	[4957]	JMP      	4 ; PC := 4
	3	[4958]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[4960]	SELF     	R3 R0 K1 ; R4 := R0; R3 := R0[0xd5181643]
	5	[4960]	MOVE     	R5 R1 ; R5 := R1
	6	[4960]	GETUPVAL 	R6 U0 ; R6 := U0
	7	[4960]	GETTABLE 	R6 R6 K2 ; R6 := R6[0x06d055f9]
	8	[4960]	MOVE     	R7 R2 ; R7 := R2
	9	[4960]	GETGLOBAL	R8 K3 ; R8 := 0x0032441c
	10	[4960]	GETTABLE 	R8 R8 K4 ; R8 := R8["UIMaterial_RectangleNoDepth"]
	11	[4960]	GETGLOBAL	R9 K3 ; R9 := 0x0032441c
	12	[4960]	GETTABLE 	R9 R9 K5 ; R9 := R9["UIMaterial_Rectangle"]
	13	[4960]	CALL     	R6 4 0 ; R6,... := R6(R7,R8,R9)
	14	[4960]	CALL     	R3 0 1 ; R3(R4,...)
	15	[4961]	SELF     	R3 R0 K6 ; R4 := R0; R3 := R0[0x91e13703]
	16	[4961]	MOVE     	R5 R1 ; R5 := R1
	17	[4961]	LOADK    	R6 K7 ; R6 := "RectInnerColor"
	18	[4961]	GETGLOBAL	R7 K3 ; R7 := 0x0032441c
	19	[4961]	GETTABLE 	R7 R7 K8 ; R7 := R7["UIColorObject_DarkBlue"]
	20	[4961]	GETTABLE 	R7 R7 K9 ; R7 := R7["r"]
	21	[4961]	GETGLOBAL	R8 K3 ; R8 := 0x0032441c
	22	[4961]	GETTABLE 	R8 R8 K8 ; R8 := R8["UIColorObject_DarkBlue"]
	23	[4961]	GETTABLE 	R8 R8 K10 ; R8 := R8["g"]
	24	[4961]	GETGLOBAL	R9 K3 ; R9 := 0x0032441c
	25	[4961]	GETTABLE 	R9 R9 K8 ; R9 := R9["UIColorObject_DarkBlue"]
	26	[4961]	GETTABLE 	R9 R9 K11 ; R9 := R9["b"]
	27	[4961]	LOADK    	R10 K12 ; R10 := 0.200000
	28	[4961]	CALL     	R3 8 1 ; R3(R4,R5,R6,R7,R8,R9,R10)
	29	[4962]	SELF     	R3 R0 K6 ; R4 := R0; R3 := R0[0x91e13703]
	30	[4962]	MOVE     	R5 R1 ; R5 := R1
	31	[4962]	LOADK    	R6 K13 ; R6 := "RectEdgeColor"
	32	[4962]	GETGLOBAL	R7 K3 ; R7 := 0x0032441c
	33	[4962]	GETTABLE 	R7 R7 K14 ; R7 := R7["UIColorObject_White"]
	34	[4962]	GETTABLE 	R7 R7 K9 ; R7 := R7["r"]
	35	[4962]	GETGLOBAL	R8 K3 ; R8 := 0x0032441c
	36	[4962]	GETTABLE 	R8 R8 K14 ; R8 := R8["UIColorObject_White"]
	37	[4962]	GETTABLE 	R8 R8 K10 ; R8 := R8["g"]
	38	[4962]	GETGLOBAL	R9 K3 ; R9 := 0x0032441c
	39	[4962]	GETTABLE 	R9 R9 K14 ; R9 := R9["UIColorObject_White"]
	40	[4962]	GETTABLE 	R9 R9 K11 ; R9 := R9["b"]
	41	[4962]	LOADK    	R10 := 0.000000
	42	[4962]	CALL     	R3 8 1 ; R3(R4,R5,R6,R7,R8,R9,R10)
	43	[4963]	RETURN   	R0 1 ; return 

function #252 <?:4965,5023> (132 instructions, 528 bytes at 00000160C682CE20)
5 params, 28 slots, 1 upvalue, 0 locals, 25 constants, 0 functions
	1	[4966]	GETGLOBAL	R5 K0 ; R5 := 0x25d99d89
	2	[4967]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	3	[4967]	MOVE     	R7 R5 ; R7 := R5
	4	[4967]	CALL     	R6 2 2 ; R6 := R6(R7)
	5	[4967]	TEST     	R6 1 ; if R6 then PC := 126
	6	[4967]	JMP      	126 ; PC := 126
	7	[4967]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	8	[4967]	MOVE     	R7 R0 ; R7 := R0
	9	[4967]	CALL     	R6 2 2 ; R6 := R6(R7)
	10	[4967]	TEST     	R6 1 ; if R6 then PC := 126
	11	[4967]	JMP      	126 ; PC := 126
	12	[4968]	SELF     	R6 R0 K2 ; R7 := R0; R6 := R0[0xec3ed714]
	13	[4968]	CALL     	R6 2 2 ; R6 := R6(R7)
	14	[4969]	SELF     	R7 R5 K3 ; R8 := R5; R7 := R5[0xa4d581dc]
	15	[4969]	MOVE     	R9 R6 ; R9 := R6
	16	[4969]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	17	[4970]	GETUPVAL 	R8 U0 ; R8 := U0
	18	[4970]	GETTABLE 	R8 R8 K4 ; R8 := R8[0x06d055f9]
	19	[4970]	EQ       	0 R3 K5 ; if R3 ~= nil then PC := 22
	20	[4970]	JMP      	22 ; PC := 22
	21	[4970]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 22
	22	[4970]	OP_LOADBOOL	R9 1 0 ; R9 := true
	23	[4970]	MOVE     	R10 R3 ; R10 := R3
	24	[4970]	GETTABLE 	R11 R7 K6 ; R11 := R7["mTitle"]
	25	[4970]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	26	[4971]	GETGLOBAL	R9 K7 ; R9 := 0x03f57322
	27	[4971]	MOVE     	R10 R2 ; R10 := R2
	28	[4971]	CALL     	R9 2 2 ; R9 := R9(R10)
	29	[4972]	EQ       	0 R9 K5 ; if R9 ~= nil then PC := 49
	30	[4972]	JMP      	49 ; PC := 49
	31	[4973]	GETTABLE 	R9 R7 K8 ; R9 := R7["mStanding"]
	32	[4974]	TEST     	R4 0 ; if not R4 then PC := 49
	33	[4974]	JMP      	49 ; PC := 49
	34	[4975]	GETGLOBAL	R10 K0 ; R10 := 0x25d99d89
	35	[4975]	SELF     	R10 R10 K9 ; R11 := R10; R10 := R10[0xd9a41a87]
	36	[4975]	CALL     	R10 2 2 ; R10 := R10(R11)
	37	[4976]	LOADK    	R11 := 1.000000
	38	[4976]	LEN      	R12 R10 ; R12 := # R10
	39	[4976]	LOADK    	R13 := 1.000000
	40	[4976]	FORPREP  	R11 48 ; R11 -= R13; PC := 48
	41	[4977]	GETTABLE 	R15 R10 R14 ; R15 := R10[R14]
	42	[4977]	GETTABLE 	R15 R15 K10 ; R15 := R15["mTag"]
	43	[4977]	EQ       	0 R15 R6 ; if R15 ~= R6 then PC := 48
	44	[4977]	JMP      	48 ; PC := 48
	45	[4978]	GETTABLE 	R15 R10 R14 ; R15 := R10[R14]
	46	[4978]	GETTABLE 	R15 R15 K8 ; R15 := R15["mStanding"]
	47	[4978]	SUB      	R9 R9 R15 ; R9 := R9 - R15
	48	[4976]	FORLOOP  	R11 41 ; R11 += R13; if R11 <= R12 then begin PC := 41; R14 := R11 end
	49	[4986]	GETUPVAL 	R15 U0 ; R15 := U0
	50	[4986]	GETTABLE 	R15 R15 K4 ; R15 := R15[0x06d055f9]
	51	[4986]	SELF     	R16 R0 K11 ; R17 := R0; R16 := R0[0xeca04711]
	52	[4986]	CALL     	R16 2 2 ; R16 := R16(R17)
	53	[4986]	GETGLOBAL	R17 K12 ; R17 := 0xa94df70b
	54	[4986]	SELF     	R17 R17 K13 ; R18 := R17; R17 := R17[0x45c0937f]
	55	[4986]	MOVE     	R19 R6 ; R19 := R6
	56	[4986]	MOVE     	R20 R8 ; R20 := R8
	57	[4986]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	58	[4986]	LOADK    	R18 := 0.000000
	59	[4986]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	60	[4987]	GETUPVAL 	R16 U0 ; R16 := U0
	61	[4987]	GETTABLE 	R16 R16 K4 ; R16 := R16[0x06d055f9]
	62	[4987]	SELF     	R17 R0 K11 ; R18 := R0; R17 := R0[0xeca04711]
	63	[4987]	CALL     	R17 2 2 ; R17 := R17(R18)
	64	[4987]	GETGLOBAL	R18 K12 ; R18 := 0xa94df70b
	65	[4987]	SELF     	R18 R18 K14 ; R19 := R18; R18 := R18[0xa27c9ce1]
	66	[4987]	MOVE     	R20 R6 ; R20 := R6
	67	[4987]	MOVE     	R21 R8 ; R21 := R8
	68	[4987]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	69	[4987]	SELF     	R19 R0 K15 ; R20 := R0; R19 := R0[0xd3b8447c]
	70	[4987]	CALL     	R19 2 0 ; R19,... := R19(R20)
	71	[4987]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	72	[4989]	SUB      	R17 R16 R9 ; R17 := R16 - R9
	73	[4990]	SELF     	R18 R0 K16 ; R19 := R0; R18 := R0[0x08b0b7bf]
	74	[4990]	CALL     	R18 2 2 ; R18 := R18(R19)
	75	[4991]	LT       	0 K18 R18 ; if 0.000000 >= R18 then PC := 92
	76	[4991]	JMP      	92 ; PC := 92
	77	[4991]	LT       	0 R18 K19 ; if R18 >= 13.000000 then PC := 92
	78	[4991]	JMP      	92 ; PC := 92
	79	[4992]	SELF     	R19 R0 K20 ; R20 := R0; R19 := R0[0x715e4e45]
	80	[4992]	CALL     	R19 2 2 ; R19 := R19(R20)
	81	[4992]	TEST     	R19 0 ; if not R19 then PC := 92
	82	[4992]	JMP      	92 ; PC := 92
	83	[4993]	SELF     	R19 R5 K21 ; R20 := R5; R19 := R5[0xf5b0abc2]
	84	[4993]	MOVE     	R21 R18 ; R21 := R18
	85	[4993]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	86	[4994]	GETGLOBAL	R20 K22 ; R20 := 0x5bced4c4
	87	[4994]	GETTABLE 	R20 R20 K23 ; R20 := R20[0xac1b386a]
	88	[4994]	MOVE     	R21 R17 ; R21 := R17
	89	[4994]	MOVE     	R22 R19 ; R22 := R19
	90	[4994]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	91	[4994]	MOVE     	R17 R20 ; R17 := R20
	92	[4998]	EQ       	1 R1 K5 ; if R1 == nil then PC := 98
	93	[4998]	JMP      	98 ; PC := 98
	94	[4999]	GETGLOBAL	R20 K7 ; R20 := 0x03f57322
	95	[4999]	MOVE     	R21 R1 ; R21 := R1
	96	[4999]	CALL     	R20 2 2 ; R20 := R20(R21)
	97	[4999]	ADD      	R9 R9 R20 ; R9 := R9 + R20
	98	[5002]	SUB      	R20 R9 R15 ; R20 := R9 - R15
	99	[5003]	SUB      	R21 R16 R15 ; R21 := R16 - R15
	100	[5004]	EQ       	1 R20 R21 ; if R20 == R21 then PC := 103
	101	[5004]	JMP      	103 ; PC := 103
	102	[5004]	OP_LOADBOOL	R22 0 1 ; R22 := false; PC := 103
	103	[5004]	OP_LOADBOOL	R22 1 0 ; R22 := true
	104	[5006]	SELF     	R23 R0 K11 ; R24 := R0; R23 := R0[0xeca04711]
	105	[5006]	CALL     	R23 2 2 ; R23 := R23(R24)
	106	[5006]	TEST     	R23 0 ; if not R23 then PC := 120
	107	[5006]	JMP      	120 ; PC := 120
	108	[5007]	EQ       	0 R8 K18 ; if R8 ~= 0.000000 then PC := 116
	109	[5007]	JMP      	116 ; PC := 116
	110	[5008]	DIV      	R21 R21 K24 ; R21 := R21 / 2.000000
	111	[5009]	SUB      	R20 R20 R21 ; R20 := R20 - R21
	112	[5010]	LT       	0 R20 K18 ; if R20 >= 0.000000 then PC := 120
	113	[5010]	JMP      	120 ; PC := 120
	114	[5011]	UNM      	R21 R21 ; R21 := ^ R21
	115	[5012]	JMP      	120 ; PC := 120
	116	[5013]	LT       	0 R8 K18 ; if R8 >= 0.000000 then PC := 120
	117	[5013]	JMP      	120 ; PC := 120
	118	[5014]	SUB      	R20 R20 R21 ; R20 := R20 - R21
	119	[5015]	UNM      	R21 R21 ; R21 := ^ R21
	120	[5019]	MOVE     	R23 R8 ; R23 := R8
	121	[5019]	MOVE     	R24 R20 ; R24 := R20
	122	[5019]	MOVE     	R25 R21 ; R25 := R21
	123	[5019]	MOVE     	R26 R22 ; R26 := R22
	124	[5019]	MOVE     	R27 R17 ; R27 := R17
	125	[5019]	RETURN   	R23 6 ; return R23, R24, R25, R26, R27 
	126	[5022]	LOADK    	R23 := 0.000000
	127	[5022]	LOADK    	R24 := 0.000000
	128	[5022]	LOADK    	R25 := 1.000000
	129	[5022]	OP_LOADBOOL	R26 0 0 ; R26 := false
	130	[5022]	LOADK    	R27 := 0.000000
	131	[5022]	RETURN   	R23 6 ; return R23, R24, R25, R26, R27 
	132	[5023]	RETURN   	R0 1 ; return 

function #253 <?:5025,5027> (9 instructions, 36 bytes at 00000160C682D4D0)
5 params, 11 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5026]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[5026]	MOVE     	R6 R0 ; R6 := R0
	3	[5026]	MOVE     	R7 R1 ; R7 := R1
	4	[5026]	MOVE     	R8 R2 ; R8 := R2
	5	[5026]	MOVE     	R9 R3 ; R9 := R3
	6	[5026]	MOVE     	R10 R4 ; R10 := R4
	7	[5026]	TAILCALL 	R5 6 0 ; R5,... := R5(R6,R7,R8,R9,R10)
	8	[5026]	RETURN   	R5 0 ; return R5,... 
	9	[5027]	RETURN   	R0 1 ; return 

function #254 <?:5029,5048> (47 instructions, 188 bytes at 00000160C682D5E0)
2 params, 8 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[5031]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[5031]	GETTABLE 	R4 R0 K1 ; R4 := R0["mSpeakerSyndicate"]
	3	[5031]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[5031]	TEST     	R3 1 ; if R3 then PC := 7
	5	[5031]	JMP      	7 ; PC := 7
	6	[5032]	GETTABLE 	R2 R0 K1 ; R2 := R0["mSpeakerSyndicate"]
	7	[5035]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[5035]	MOVE     	R4 R2 ; R4 := R2
	9	[5035]	CALL     	R3 2 5 ; R3,R4,R5,R6 := R3(R4)
	10	[5035]	SETTABLE 	R1 K5 R6 ; R1["HasEnoughReputationForSacrifice"] := R6
	11	[5035]	SETTABLE 	R1 K4 R5 ; R1["ReputationRequired"] := R5
	12	[5035]	SETTABLE 	R1 K3 R4 ; R1["Reputation"] := R4
	13	[5035]	SETTABLE 	R1 K2 R3 ; R1["Level"] := R3
	14	[5037]	LOADK    	R3 := 3.000000
	15	[5038]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	16	[5038]	MOVE     	R5 R2 ; R5 := R2
	17	[5038]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[5038]	TEST     	R4 1 ; if R4 then PC := 23
	19	[5038]	JMP      	23 ; PC := 23
	20	[5039]	SELF     	R4 R2 K6 ; R5 := R2; R4 := R2[0x8d5d5be4]
	21	[5039]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[5039]	MOVE     	R3 R4 ; R3 := R4
	23	[5041]	GETTABLE 	R4 R1 K2 ; R4 := R1["Level"]
	24	[5041]	LE       	1 R3 R4 ; if R3 <= R4 then PC := 27
	25	[5041]	JMP      	27 ; PC := 27
	26	[5041]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 27
	27	[5041]	OP_LOADBOOL	R4 1 0 ; R4 := true
	28	[5041]	SETTABLE 	R1 K7 R4 ; R1["Loved"] := R4
	29	[5043]	GETGLOBAL	R4 K8 ; R4 := 0x76ea806b
	30	[5043]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0x3f3ae64c]
	31	[5043]	LOADK    	R6 := 0.000000
	32	[5043]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	33	[5044]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	34	[5044]	MOVE     	R6 R4 ; R6 := R4
	35	[5044]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[5044]	TEST     	R5 1 ; if R5 then PC := 47
	37	[5044]	JMP      	47 ; PC := 47
	38	[5045]	SELF     	R5 R4 K10 ; R6 := R4; R5 := R4[0x40e9c32b]
	39	[5045]	CALL     	R5 2 2 ; R5 := R5(R6)
	40	[5046]	GETTABLE 	R6 R1 K7 ; R6 := R1["Loved"]
	41	[5046]	TEST     	R6 0 ; if not R6 then PC := 46
	42	[5046]	JMP      	46 ; PC := 46
	43	[5046]	SELF     	R6 R5 K11 ; R7 := R5; R6 := R5[0xd25ad6f2]
	44	[5046]	CALL     	R6 2 2 ; R6 := R6(R7)
	45	[5046]	NOT      	R6 R6 ; R6 := not R6
	46	[5046]	SETTABLE 	R1 K7 R6 ; R1["Loved"] := R6
	47	[5048]	RETURN   	R0 1 ; return 

function #255 <?:5050,5052> (5 instructions, 20 bytes at 00000160C682DA50)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5051]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[5051]	MOVE     	R3 R0 ; R3 := R0
	3	[5051]	MOVE     	R4 R1 ; R4 := R1
	4	[5051]	CALL     	R2 3 1 ; R2(R3,R4)
	5	[5052]	RETURN   	R0 1 ; return 

function #256 <?:5054,5067> (50 instructions, 200 bytes at 00000160C682DB40)
2 params, 11 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[5055]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0xf64b7262]
	2	[5055]	GETTABLE 	R4 R1 K1 ; R4 := R1["mClipName"]
	3	[5055]	LOADK    	R5 K2 ; R5 := "Image"
	4	[5055]	LOADK    	R6 := 10.000000
	5	[5055]	GETUPVAL 	R7 U0 ; R7 := U0
	6	[5055]	GETTABLE 	R7 R7 K3 ; R7 := R7[0x06d055f9]
	7	[5055]	GETGLOBAL	R8 K4 ; R8 := 0x7b998233
	8	[5055]	GETTABLE 	R9 R1 K5 ; R9 := R1["Icon"]
	9	[5055]	CALL     	R8 2 2 ; R8 := R8(R9)
	10	[5055]	LOADK    	R9 := 0.000000
	11	[5055]	LOADK    	R10 := 100.000000
	12	[5055]	CALL     	R7 4 0 ; R7,... := R7(R8,R9,R10)
	13	[5055]	CALL     	R2 0 1 ; R2(R3,...)
	14	[5056]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	15	[5056]	GETTABLE 	R3 R1 K5 ; R3 := R1["Icon"]
	16	[5056]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[5056]	TEST     	R2 0 ; if not R2 then PC := 20
	18	[5056]	JMP      	20 ; PC := 20
	19	[5057]	RETURN   	R0 1 ; return 
	20	[5060]	GETGLOBAL	R2 K6 ; R2 := 0x7ed0a956
	21	[5060]	LOADK    	R3 K7 ; R3 := "/Lotus/Types/Game/LotusSigil"
	22	[5060]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[5061]	SELF     	R3 R0 K8 ; R4 := R0; R3 := R0[0x91a24e4b]
	24	[5061]	GETTABLE 	R5 R1 K1 ; R5 := R1["mClipName"]
	25	[5061]	LOADK    	R6 K9 ; R6 := ".Image"
	26	[5061]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	27	[5061]	LOADK    	R6 := 13.000000
	28	[5061]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	29	[5063]	GETUPVAL 	R4 U0 ; R4 := U0
	30	[5063]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x06d055f9]
	31	[5063]	GETTABLE 	R5 R1 K10 ; R5 := R1["Type"]
	32	[5063]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0xf2deaf69]
	33	[5063]	MOVE     	R7 R2 ; R7 := R2
	34	[5063]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	35	[5063]	MOVE     	R6 R3 ; R6 := R3
	36	[5063]	MUL      	R7 R3 K12 ; R7 := R3 * 1.444000
	37	[5063]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	38	[5065]	SELF     	R5 R0 K13 ; R6 := R0; R5 := R0[0x1cb415c1]
	39	[5065]	GETTABLE 	R7 R1 K1 ; R7 := R1["mClipName"]
	40	[5065]	LOADK    	R8 K9 ; R8 := ".Image"
	41	[5065]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	42	[5065]	GETTABLE 	R8 R1 K5 ; R8 := R1["Icon"]
	43	[5065]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	44	[5066]	SELF     	R5 R0 K0 ; R6 := R0; R5 := R0[0xf64b7262]
	45	[5066]	GETTABLE 	R7 R1 K1 ; R7 := R1["mClipName"]
	46	[5066]	LOADK    	R8 K2 ; R8 := "Image"
	47	[5066]	LOADK    	R9 := 12.000000
	48	[5066]	MOVE     	R10 R4 ; R10 := R4
	49	[5066]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	50	[5067]	RETURN   	R0 1 ; return 

function #257 <?:5069,5087> (43 instructions, 172 bytes at 00000160C682DF30)
0 params, 9 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[5070]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[5071]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	3	[5071]	MOVE     	R2 R0 ; R2 := R0
	4	[5071]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5071]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[5071]	JMP      	9 ; PC := 9
	7	[5072]	LOADNIL  	R1 R1 ; R1 := nil
	8	[5072]	RETURN   	R1 2 ; return R1 
	9	[5075]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x69727e0b]
	10	[5075]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[5076]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	12	[5076]	MOVE     	R3 R1 ; R3 := R1
	13	[5076]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[5076]	TEST     	R2 0 ; if not R2 then PC := 18
	15	[5076]	JMP      	18 ; PC := 18
	16	[5077]	LOADNIL  	R2 R2 ; R2 := nil
	17	[5077]	RETURN   	R2 2 ; return R2 
	18	[5080]	GETGLOBAL	R2 K3 ; R2 := 0xc8802016
	19	[5080]	GETTABLE 	R3 R1 K4 ; R3 := R1["mDailyDeals"]
	20	[5080]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	21	[5080]	JMP      	39 ; PC := 39
	22	[5081]	GETGLOBAL	R7 K5 ; R7 := 0x34291f5c
	23	[5081]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x397b920f]
	24	[5081]	GETTABLE 	R8 R6 K7 ; R8 := R6["mActivation"]
	25	[5081]	CALL     	R7 2 2 ; R7 := R7(R8)
	26	[5081]	LE       	0 R7 K8 ; if R7 > 0.000000 then PC := 39
	27	[5081]	JMP      	39 ; PC := 39
	28	[5081]	GETGLOBAL	R7 K5 ; R7 := 0x34291f5c
	29	[5081]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x397b920f]
	30	[5081]	GETTABLE 	R8 R6 K9 ; R8 := R6["mExpiry"]
	31	[5081]	CALL     	R7 2 2 ; R7 := R7(R8)
	32	[5081]	LT       	0 K8 R7 ; if 0.000000 >= R7 then PC := 39
	33	[5081]	JMP      	39 ; PC := 39
	34	[5082]	GETGLOBAL	R7 K10 ; R7 := 0x6c97a788
	35	[5082]	GETTABLE 	R7 R7 K11 ; R7 := R7[0x403f5185]
	36	[5082]	MOVE     	R8 R6 ; R8 := R6
	37	[5082]	TAILCALL 	R7 2 0 ; R7,... := R7(R8)
	38	[5082]	RETURN   	R7 0 ; return R7,... 
	39	[5080]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 22; R4 := R5 end
	40	[5083]	JMP      	22 ; PC := 22
	41	[5086]	LOADNIL  	R7 R7 ; R7 := nil
	42	[5086]	RETURN   	R7 2 ; return R7 
	43	[5087]	RETURN   	R0 1 ; return 

function #258 <?:5089,5120> (106 instructions, 424 bytes at 00000160C682E290)
2 params, 14 slots, 0 upvalues, 0 locals, 23 constants, 0 functions
	1	[5090]	LOADK    	R2 K0 ; R2 := ""
	2	[5091]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	3	[5091]	SELF     	R4 R1 K2 ; R5 := R1; R4 := R1[0xf278f8a1]
	4	[5091]	CALL     	R4 2 0 ; R4,... := R4(R5)
	5	[5091]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	6	[5091]	TEST     	R3 1 ; if R3 then PC := 72
	7	[5091]	JMP      	72 ; PC := 72
	8	[5091]	SELF     	R3 R1 K2 ; R4 := R1; R3 := R1[0xf278f8a1]
	9	[5091]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[5091]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0xf2deaf69]
	11	[5091]	GETGLOBAL	R5 K4 ; R5 := gRecipeItemType
	12	[5091]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	13	[5091]	TEST     	R3 0 ; if not R3 then PC := 72
	14	[5091]	JMP      	72 ; PC := 72
	15	[5092]	SELF     	R3 R0 K5 ; R4 := R0; R3 := R0[0x42b04007]
	16	[5092]	GETGLOBAL	R5 K6 ; R5 := 0x64fb1586
	17	[5092]	SELF     	R6 R1 K7 ; R7 := R1; R6 := R1[0xe9472db7]
	18	[5092]	CALL     	R6 2 0 ; R6,... := R6(R7)
	19	[5092]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	20	[5092]	OP_LOADBOOL	R6 1 0 ; R6 := true
	21	[5092]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	22	[5093]	EQ       	1 R3 K0 ; if R3 == "" then PC := 26
	23	[5093]	JMP      	26 ; PC := 26
	24	[5093]	EQ       	0 R3 K8 ; if R3 ~= nil then PC := 69
	25	[5093]	JMP      	69 ; PC := 69
	26	[5094]	SELF     	R4 R1 K9 ; R5 := R1; R4 := R1[0x5cc4dde3]
	27	[5094]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[5095]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	29	[5095]	MOVE     	R6 R4 ; R6 := R4
	30	[5095]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[5095]	TEST     	R5 1 ; if R5 then PC := 42
	32	[5095]	JMP      	42 ; PC := 42
	33	[5096]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0x42b04007]
	34	[5096]	GETGLOBAL	R7 K6 ; R7 := 0x64fb1586
	35	[5096]	SELF     	R8 R4 K10 ; R9 := R4; R8 := R4[0xd3a9d01f]
	36	[5096]	CALL     	R8 2 0 ; R8,... := R8(R9)
	37	[5096]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	38	[5096]	OP_LOADBOOL	R8 1 0 ; R8 := true
	39	[5096]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	40	[5096]	MOVE     	R2 R5 ; R2 := R5
	41	[5096]	JMP      	50 ; PC := 50
	42	[5099]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0x42b04007]
	43	[5099]	GETGLOBAL	R7 K6 ; R7 := 0x64fb1586
	44	[5099]	SELF     	R8 R1 K10 ; R9 := R1; R8 := R1[0xd3a9d01f]
	45	[5099]	CALL     	R8 2 0 ; R8,... := R8(R9)
	46	[5099]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	47	[5099]	OP_LOADBOOL	R8 1 0 ; R8 := true
	48	[5099]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	49	[5099]	MOVE     	R2 R5 ; R2 := R5
	50	[5102]	NEWTABLE 	R5 0 1 ; R5 := {}
	51	[5102]	SETTABLE 	R5 K11 R2 ; R5["ITEM"] := R2
	52	[5102]	MOVE     	R3 R5 ; R3 := R5
	53	[5103]	LOADK    	R5 K12 ; R5 := "/Lotus/Language/Items/BlueprintAndItem"
	54	[5104]	SELF     	R6 R1 K13 ; R7 := R1; R6 := R1[0x78ceba36]
	55	[5104]	CALL     	R6 2 2 ; R6 := R6(R7)
	56	[5104]	LT       	0 K14 R6 ; if 1.000000 >= R6 then PC := 62
	57	[5104]	JMP      	62 ; PC := 62
	58	[5105]	SELF     	R6 R1 K13 ; R7 := R1; R6 := R1[0x78ceba36]
	59	[5105]	CALL     	R6 2 2 ; R6 := R6(R7)
	60	[5105]	SETTABLE 	R3 K15 R6 ; R3["NUM"] := R6
	61	[5106]	LOADK    	R5 K16 ; R5 := "/Lotus/Language/Items/LargeBatchBlueprintAndItem"
	62	[5108]	SELF     	R6 R0 K5 ; R7 := R0; R6 := R0[0x42b04007]
	63	[5108]	MOVE     	R8 R5 ; R8 := R5
	64	[5108]	OP_LOADBOOL	R9 1 0 ; R9 := true
	65	[5108]	MOVE     	R10 R3 ; R10 := R3
	66	[5108]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	67	[5108]	MOVE     	R2 R6 ; R2 := R6
	68	[5108]	JMP      	70 ; PC := 70
	69	[5110]	MOVE     	R2 R3 ; R2 := R3
	70	[5112]	RETURN   	R2 2 ; return R2 
	71	[5112]	JMP      	101 ; PC := 101
	72	[5113]	SELF     	R6 R1 K17 ; R7 := R1; R6 := R1[0xfe9eb1a5]
	73	[5113]	CALL     	R6 2 2 ; R6 := R6(R7)
	74	[5113]	EQ       	0 R6 K19 ; if R6 ~= 35.000000 then PC := 90
	75	[5113]	JMP      	90 ; PC := 90
	76	[5114]	SELF     	R6 R1 K20 ; R7 := R1; R6 := R1[0x4e485a6f]
	77	[5114]	CALL     	R6 2 2 ; R6 := R6(R7)
	78	[5114]	UNM      	R6 R6 ; R6 := ^ R6
	79	[5115]	MOVE     	R7 R6 ; R7 := R6
	80	[5115]	LOADK    	R8 K21 ; R8 := " "
	81	[5115]	SELF     	R9 R0 K5 ; R10 := R0; R9 := R0[0x42b04007]
	82	[5115]	GETGLOBAL	R11 K6 ; R11 := 0x64fb1586
	83	[5115]	SELF     	R12 R1 K10 ; R13 := R1; R12 := R1[0xd3a9d01f]
	84	[5115]	CALL     	R12 2 0 ; R12,... := R12(R13)
	85	[5115]	CALL     	R11 0 2 ; R11 := R11(R12,...)
	86	[5115]	OP_LOADBOOL	R12 1 0 ; R12 := true
	87	[5115]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	88	[5115]	CONCAT   	R2 R7 R9 ; R2 := R7 .. R8 .. R9
	89	[5115]	JMP      	101 ; PC := 101
	90	[5116]	SELF     	R7 R1 K17 ; R8 := R1; R7 := R1[0xfe9eb1a5]
	91	[5116]	CALL     	R7 2 2 ; R7 := R7(R8)
	92	[5116]	GETGLOBAL	R8 K18 ; R8 := 0x34291f5c
	93	[5116]	GETTABLE 	R8 R8 K22 ; R8 := R8["Item_AvatarImage"]
	94	[5116]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 101
	95	[5116]	JMP      	101 ; PC := 101
	96	[5117]	GETGLOBAL	R7 K6 ; R7 := 0x64fb1586
	97	[5117]	SELF     	R8 R1 K10 ; R9 := R1; R8 := R1[0xd3a9d01f]
	98	[5117]	CALL     	R8 2 0 ; R8,... := R8(R9)
	99	[5117]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	100	[5117]	MOVE     	R2 R7 ; R2 := R7
	101	[5119]	SELF     	R7 R0 K5 ; R8 := R0; R7 := R0[0x42b04007]
	102	[5119]	MOVE     	R9 R2 ; R9 := R2
	103	[5119]	OP_LOADBOOL	R10 1 0 ; R10 := true
	104	[5119]	TAILCALL 	R7 4 0 ; R7,... := R7(R8,R9,R10)
	105	[5119]	RETURN   	R7 0 ; return R7,... 
	106	[5120]	RETURN   	R0 1 ; return 

function #259 <?:5122,5151> (53 instructions, 212 bytes at 00000160C682E8C0)
2 params, 15 slots, 0 upvalues, 0 locals, 26 constants, 0 functions
	1	[5123]	GETGLOBAL	R2 K0 ; R2 := 0x0032441c
	2	[5123]	SETTABLE 	R2 K1 R0 ; R2["TrainingMissionRank"] := R0
	3	[5124]	GETGLOBAL	R2 K2 ; R2 := 0xa94df70b
	4	[5124]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xc006aacf]
	5	[5124]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[5127]	GETGLOBAL	R3 K4 ; R3 := 0x5bced4c4
	7	[5127]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xac1b386a]
	8	[5127]	MOVE     	R4 R0 ; R4 := R0
	9	[5127]	SUB      	R5 R2 K6 ; R5 := R2 - 1.000000
	10	[5127]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	11	[5127]	MOVE     	R0 R3 ; R0 := R3
	12	[5131]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	13	[5131]	SETTABLE 	R3 K7 R1 ; R3["IsTrainingMissionPractise"] := R1
	14	[5133]	GETGLOBAL	R3 K2 ; R3 := 0xa94df70b
	15	[5133]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x769d1b6e]
	16	[5133]	MOVE     	R5 R0 ; R5 := R0
	17	[5133]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	18	[5134]	TEST     	R1 0 ; if not R1 then PC := 22
	19	[5134]	JMP      	22 ; PC := 22
	20	[5136]	GETTABLE 	R4 R3 K9 ; R4 := R3["missionReward"]
	21	[5136]	SETTABLE 	R4 K10 K11 ; R4["credits"] := 0.000000
	22	[5139]	GETGLOBAL	R4 K12 ; R4 := 0x34291f5c
	23	[5139]	GETTABLE 	R4 R4 K13 ; R4 := R4[0x68d83431]
	24	[5139]	CALL     	R4 1 2 ; R4 := R4()
	25	[5140]	SELF     	R5 R3 K14 ; R6 := R3; R5 := R3[0xbfa0067d]
	26	[5140]	CALL     	R5 2 2 ; R5 := R5(R6)
	27	[5141]	SELF     	R6 R3 K15 ; R7 := R3; R6 := R3[0xec195a1e]
	28	[5141]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[5142]	LOADK    	R7 := 1.000000
	30	[5142]	LEN      	R8 R6 ; R8 := # R6
	31	[5142]	LOADK    	R9 := 1.000000
	32	[5142]	FORPREP  	R7 37 ; R7 -= R9; PC := 37
	33	[5143]	SELF     	R11 R4 K16 ; R12 := R4; R11 := R4[0x0f690d63]
	34	[5143]	GETTABLE 	R13 R6 R10 ; R13 := R6[R10]
	35	[5143]	GETTABLE 	R13 R13 K17 ; R13 := R13["agent"]
	36	[5143]	CALL     	R11 3 1 ; R11(R12,R13)
	37	[5142]	FORLOOP  	R7 33 ; R7 += R9; if R7 <= R8 then begin PC := 33; R10 := R7 end
	38	[5146]	SELF     	R11 R4 K18 ; R12 := R4; R11 := R4[0xeaa7e8dc]
	39	[5146]	MOVE     	R13 R5 ; R13 := R5
	40	[5146]	CALL     	R11 3 1 ; R11(R12,R13)
	41	[5147]	SELF     	R11 R4 K19 ; R12 := R4; R11 := R4[0x8623cf14]
	42	[5147]	GETTABLE 	R13 R3 K20 ; R13 := R3["levelOverride"]
	43	[5147]	SELF     	R13 R13 K21 ; R14 := R13; R13 := R13[0xed4e0128]
	44	[5147]	CALL     	R13 2 0 ; R13,... := R13(R14)
	45	[5147]	CALL     	R11 0 1 ; R11(R12,...)
	46	[5148]	GETTABLE 	R11 R3 K22 ; R11 := R3["gameRules"]
	47	[5148]	SETTABLE 	R4 K22 R11 ; R4["gameRules"] := R11
	48	[5149]	SETTABLE 	R4 K23 K24 ; R4["migrateServer"] := false
	49	[5150]	GETGLOBAL	R11 K12 ; R11 := 0x34291f5c
	50	[5150]	GETTABLE 	R11 R11 K25 ; R11 := R11[0x4e0a1dfc]
	51	[5150]	MOVE     	R12 R4 ; R12 := R4
	52	[5150]	CALL     	R11 2 1 ; R11(R12)
	53	[5151]	RETURN   	R0 1 ; return 

function #260 <?:5153,5155> (3 instructions, 12 bytes at 00000160C682ED70)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[5154]	LOADK    	R0 := 10.000000
	2	[5154]	RETURN   	R0 2 ; return R0 
	3	[5155]	RETURN   	R0 1 ; return 

function #261 <?:5157,5159> (4 instructions, 16 bytes at 00000160C682EE40)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5158]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5158]	CALL     	R0 1 2 ; R0 := R0()
	3	[5158]	RETURN   	R0 2 ; return R0 
	4	[5159]	RETURN   	R0 1 ; return 

function #262 <?:5161,5228> (172 instructions, 688 bytes at 00000160C682EF10)
2 params, 27 slots, 2 upvalues, 0 locals, 38 constants, 0 functions
	1	[5162]	OP_LOADBOOL	R2 1 0 ; R2 := true
	2	[5163]	LOADK    	R3 K0 ; R3 := ""
	3	[5164]	OP_LOADBOOL	R4 0 0 ; R4 := false
	4	[5166]	GETGLOBAL	R5 K1 ; R5 := 0x7b998233
	5	[5166]	MOVE     	R6 R0 ; R6 := R0
	6	[5166]	CALL     	R5 2 2 ; R5 := R5(R6)
	7	[5166]	TEST     	R5 0 ; if not R5 then PC := 12
	8	[5166]	JMP      	12 ; PC := 12
	9	[5167]	OP_LOADBOOL	R5 0 0 ; R5 := false
	10	[5167]	MOVE     	R6 R3 ; R6 := R3
	11	[5167]	RETURN   	R5 3 ; return R5, R6 
	12	[5171]	SELF     	R5 R0 K2 ; R6 := R0; R5 := R0[0x62c81b76]
	13	[5171]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[5172]	SELF     	R6 R5 K3 ; R7 := R5; R6 := R5[0xb61abfd2]
	15	[5172]	LOADK    	R8 := 0.000000
	16	[5172]	LOADK    	R9 := 1.000000
	17	[5172]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	18	[5173]	SELF     	R7 R5 K3 ; R8 := R5; R7 := R5[0xb61abfd2]
	19	[5173]	LOADK    	R9 := 0.000000
	20	[5173]	LOADK    	R10 := 2.000000
	21	[5173]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	22	[5174]	SELF     	R8 R5 K3 ; R9 := R5; R8 := R5[0xb61abfd2]
	23	[5174]	LOADK    	R10 := 0.000000
	24	[5174]	LOADK    	R11 := 3.000000
	25	[5174]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	26	[5176]	GETTABLE 	R9 R6 K5 ; R9 := R6["mItemId"]
	27	[5176]	GETTABLE 	R9 R9 K6 ; R9 := R9["mId"]
	28	[5176]	GETGLOBAL	R10 K4 ; R10 := 0x6c97a788
	29	[5176]	GETTABLE 	R10 R10 K7 ; R10 := R10["InvalidItemID"]
	30	[5176]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 44
	31	[5176]	JMP      	44 ; PC := 44
	32	[5177]	GETTABLE 	R9 R7 K5 ; R9 := R7["mItemId"]
	33	[5177]	GETTABLE 	R9 R9 K6 ; R9 := R9["mId"]
	34	[5177]	GETGLOBAL	R10 K4 ; R10 := 0x6c97a788
	35	[5177]	GETTABLE 	R10 R10 K7 ; R10 := R10["InvalidItemID"]
	36	[5177]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 44
	37	[5177]	JMP      	44 ; PC := 44
	38	[5178]	GETTABLE 	R9 R8 K5 ; R9 := R8["mItemId"]
	39	[5178]	GETTABLE 	R9 R9 K6 ; R9 := R9["mId"]
	40	[5178]	GETGLOBAL	R10 K4 ; R10 := 0x6c97a788
	41	[5178]	GETTABLE 	R10 R10 K7 ; R10 := R10["InvalidItemID"]
	42	[5178]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 46
	43	[5178]	JMP      	46 ; PC := 46
	44	[5180]	OP_LOADBOOL	R2 0 0 ; R2 := false
	45	[5181]	LOADK    	R3 K8 ; R3 := "/Lotus/Language/Menu/IncompleteLoadout"
	46	[5184]	GETGLOBAL	R9 K9 ; R9 := 0x25d99d89
	47	[5185]	SELF     	R10 R9 K10 ; R11 := R9; R10 := R9[0xefee6c91]
	48	[5185]	CALL     	R10 2 2 ; R10 := R10(R11)
	49	[5186]	GETGLOBAL	R11 K11 ; R11 := 0xa94df70b
	50	[5186]	SELF     	R11 R11 K12 ; R12 := R11; R11 := R11[0xc006aacf]
	51	[5186]	CALL     	R11 2 2 ; R11 := R11(R12)
	52	[5187]	GETGLOBAL	R12 K13 ; R12 := 0x5bced4c4
	53	[5187]	GETTABLE 	R12 R12 K14 ; R12 := R12[0xac1b386a]
	54	[5187]	ADD      	R13 R10 K15 ; R13 := R10 + 1.000000
	55	[5187]	SUB      	R14 R11 K15 ; R14 := R11 - 1.000000
	56	[5187]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	57	[5188]	GETGLOBAL	R13 K11 ; R13 := 0xa94df70b
	58	[5188]	SELF     	R13 R13 K16 ; R14 := R13; R13 := R13[0x769d1b6e]
	59	[5188]	MOVE     	R15 R12 ; R15 := R12
	60	[5188]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	61	[5189]	GETTABLE 	R14 R13 K17 ; R14 := R13["archwingRequired"]
	62	[5189]	TEST     	R14 0 ; if not R14 then PC := 112
	63	[5189]	JMP      	112 ; PC := 112
	64	[5190]	SELF     	R14 R9 K18 ; R15 := R9; R14 := R9[0x25a6e75e]
	65	[5190]	CALL     	R14 2 2 ; R14 := R14(R15)
	66	[5191]	SELF     	R15 R14 K19 ; R16 := R14; R15 := R14[0x566259e1]
	67	[5191]	LOADK    	R17 := 2.000000
	68	[5191]	SELF     	R18 R14 K20 ; R19 := R14; R18 := R14[0x4e457768]
	69	[5191]	LOADK    	R20 := 2.000000
	70	[5191]	CALL     	R18 3 0 ; R18,... := R18(R19,R20)
	71	[5191]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	72	[5192]	SELF     	R16 R15 K21 ; R17 := R15; R16 := R15[0x2abbe722]
	73	[5192]	LOADK    	R18 := 0.000000
	74	[5192]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	75	[5193]	SELF     	R17 R15 K21 ; R18 := R15; R17 := R15[0x2abbe722]
	76	[5193]	LOADK    	R19 := 2.000000
	77	[5193]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	78	[5194]	SELF     	R18 R15 K21 ; R19 := R15; R18 := R15[0x2abbe722]
	79	[5194]	LOADK    	R20 := 3.000000
	80	[5194]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	81	[5195]	GETTABLE 	R19 R16 K5 ; R19 := R16["mItemId"]
	82	[5195]	GETTABLE 	R19 R19 K6 ; R19 := R19["mId"]
	83	[5195]	GETGLOBAL	R20 K4 ; R20 := 0x6c97a788
	84	[5195]	GETTABLE 	R20 R20 K7 ; R20 := R20["InvalidItemID"]
	85	[5195]	EQ       	1 R19 R20 ; if R19 == R20 then PC := 99
	86	[5195]	JMP      	99 ; PC := 99
	87	[5195]	GETTABLE 	R19 R17 K5 ; R19 := R17["mItemId"]
	88	[5195]	GETTABLE 	R19 R19 K6 ; R19 := R19["mId"]
	89	[5195]	GETGLOBAL	R20 K4 ; R20 := 0x6c97a788
	90	[5195]	GETTABLE 	R20 R20 K7 ; R20 := R20["InvalidItemID"]
	91	[5195]	EQ       	1 R19 R20 ; if R19 == R20 then PC := 99
	92	[5195]	JMP      	99 ; PC := 99
	93	[5195]	GETTABLE 	R19 R18 K5 ; R19 := R18["mItemId"]
	94	[5195]	GETTABLE 	R19 R19 K6 ; R19 := R19["mId"]
	95	[5195]	GETGLOBAL	R20 K4 ; R20 := 0x6c97a788
	96	[5195]	GETTABLE 	R20 R20 K7 ; R20 := R20["InvalidItemID"]
	97	[5195]	EQ       	0 R19 R20 ; if R19 ~= R20 then PC := 100
	98	[5195]	JMP      	100 ; PC := 100
	99	[5195]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 100
	100	[5195]	OP_LOADBOOL	R19 1 0 ; R19 := true
	101	[5196]	SELF     	R20 R9 K22 ; R21 := R9; R20 := R9[0xc192c12e]
	102	[5196]	CALL     	R20 2 2 ; R20 := R20(R21)
	103	[5196]	TEST     	R20 1 ; if R20 then PC := 106
	104	[5196]	JMP      	106 ; PC := 106
	105	[5196]	OP_LOADBOOL	R20 0 0 ; R20 := false
	106	[5197]	TEST     	R19 0 ; if not R19 then PC := 110
	107	[5197]	JMP      	110 ; PC := 110
	108	[5197]	TEST     	R20 1 ; if R20 then PC := 112
	109	[5197]	JMP      	112 ; PC := 112
	110	[5198]	OP_LOADBOOL	R2 0 0 ; R2 := false
	111	[5199]	LOADK    	R3 K23 ; R3 := "/Lotus/Language/Menu/ArchwingFailureSolo"
	112	[5204]	TEST     	R2 0 ; if not R2 then PC := 150
	113	[5204]	JMP      	150 ; PC := 150
	114	[5206]	SELF     	R21 R0 K24 ; R22 := R0; R21 := R0[0xde2d1b82]
	115	[5206]	CALL     	R21 2 2 ; R21 := R21(R22)
	116	[5207]	LT       	0 K25 R21 ; if 0.000000 >= R21 then PC := 150
	117	[5207]	JMP      	150 ; PC := 150
	118	[5207]	TEST     	R1 1 ; if R1 then PC := 150
	119	[5207]	JMP      	150 ; PC := 150
	120	[5208]	GETUPVAL 	R22 U0 ; R22 := U0
	121	[5208]	LOADNIL  	R23 R23 ; R23 := nil
	122	[5208]	MOVE     	R24 R21 ; R24 := R21
	123	[5208]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	124	[5210]	SELF     	R23 R0 K26 ; R24 := R0; R23 := R0[0x6d381cdf]
	125	[5210]	CALL     	R23 2 2 ; R23 := R23(R24)
	126	[5210]	LT       	0 K25 R23 ; if 0.000000 >= R23 then PC := 139
	127	[5210]	JMP      	139 ; PC := 139
	128	[5211]	GETGLOBAL	R23 K27 ; R23 := 0x603636ad
	129	[5211]	LOADK    	R24 K28 ; R24 := "/Lotus/Language/Menu/Foreground_LevelUpRetry"
	130	[5211]	NEWTABLE 	R25 0 2 ; R25 := {}
	131	[5211]	SETTABLE 	R25 K29 R22 ; R25[0x89326c93] := R22
	132	[5211]	GETUPVAL 	R26 U1 ; R26 := U1
	133	[5211]	CALL     	R26 1 2 ; R26 := R26()
	134	[5211]	SETTABLE 	R25 K30 R26 ; R25[0xc7b81e8d] := R26
	135	[5211]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	136	[5211]	MOVE     	R3 R23 ; R3 := R23
	137	[5212]	OP_LOADBOOL	R4 1 0 ; R4 := true
	138	[5212]	JMP      	149 ; PC := 149
	139	[5214]	GETGLOBAL	R23 K27 ; R23 := 0x603636ad
	140	[5214]	LOADK    	R24 K31 ; R24 := "/Lotus/Language/Menu/Foreground_LevelUpSuspended"
	141	[5214]	OP_LOADBOOL	R25 0 0 ; R25 := false
	142	[5214]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	143	[5215]	GETGLOBAL	R24 K32 ; R24 := 0x7f5022cf
	144	[5215]	GETTABLE 	R24 R24 K33 ; R24 := R24[0xe8072ded]
	145	[5215]	MOVE     	R25 R23 ; R25 := R23
	146	[5215]	MOVE     	R26 R22 ; R26 := R22
	147	[5215]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	148	[5215]	MOVE     	R3 R24 ; R3 := R24
	149	[5218]	OP_LOADBOOL	R2 0 0 ; R2 := false
	150	[5222]	TEST     	R2 0 ; if not R2 then PC := 168
	151	[5222]	JMP      	168 ; PC := 168
	152	[5222]	GETGLOBAL	R24 K1 ; R24 := 0x7b998233
	153	[5222]	GETGLOBAL	R25 K34 ; R25 := 0xe7f2b02f
	154	[5222]	SELF     	R25 R25 K35 ; R26 := R25; R25 := R25[0x565be9ee]
	155	[5222]	CALL     	R25 2 0 ; R25,... := R25(R26)
	156	[5222]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	157	[5222]	TEST     	R24 1 ; if R24 then PC := 168
	158	[5222]	JMP      	168 ; PC := 168
	159	[5222]	GETGLOBAL	R24 K34 ; R24 := 0xe7f2b02f
	160	[5222]	SELF     	R24 R24 K35 ; R25 := R24; R24 := R24[0x565be9ee]
	161	[5222]	CALL     	R24 2 2 ; R24 := R24(R25)
	162	[5222]	SELF     	R24 R24 K36 ; R25 := R24; R24 := R24[0x3b013073]
	163	[5222]	CALL     	R24 2 2 ; R24 := R24(R25)
	164	[5222]	LT       	0 K15 R24 ; if 1.000000 >= R24 then PC := 168
	165	[5222]	JMP      	168 ; PC := 168
	166	[5223]	OP_LOADBOOL	R2 0 0 ; R2 := false
	167	[5224]	LOADK    	R3 K37 ; R3 := "/Lotus/Language/Menu/Foreground_LevelUpSessionActive"
	168	[5227]	MOVE     	R24 R2 ; R24 := R2
	169	[5227]	MOVE     	R25 R3 ; R25 := R3
	170	[5227]	MOVE     	R26 R4 ; R26 := R4
	171	[5227]	RETURN   	R24 4 ; return R24, R25, R26 
	172	[5228]	RETURN   	R0 1 ; return 

function #263 <?:5230,5232> (12 instructions, 48 bytes at 00000160C682F9D0)
2 params, 8 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[5231]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	2	[5231]	LOADK    	R3 K1 ; R3 := "Dojo: OnTrainingResultUploaded result="
	3	[5231]	GETGLOBAL	R4 K2 ; R4 := 0x64fb1586
	4	[5231]	MOVE     	R5 R0 ; R5 := R0
	5	[5231]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[5231]	LOADK    	R5 K3 ; R5 := ", body="
	7	[5231]	GETGLOBAL	R6 K2 ; R6 := 0x64fb1586
	8	[5231]	MOVE     	R7 R1 ; R7 := R1
	9	[5231]	CALL     	R6 2 2 ; R6 := R6(R7)
	10	[5231]	CONCAT   	R3 R3 R6 ; R3 := R3 .. R4 .. R5 .. R6
	11	[5231]	CALL     	R2 2 1 ; R2(R3)
	12	[5232]	RETURN   	R0 1 ; return 

function #264 <?:5234,5258> (66 instructions, 264 bytes at 00000160C682FBB0)
5 params, 14 slots, 2 upvalues, 0 locals, 19 constants, 0 functions
	1	[5235]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[5235]	GETTABLE 	R5 R5 K0 ; R5 := R5[0x06d055f9]
	3	[5235]	GETGLOBAL	R6 K1 ; R6 := 0x7b998233
	4	[5235]	GETGLOBAL	R7 K2 ; R7 := 0x0032441c
	5	[5235]	GETTABLE 	R7 R7 K3 ; R7 := R7["IsTrainingMissionPractise"]
	6	[5235]	CALL     	R6 2 2 ; R6 := R6(R7)
	7	[5235]	OP_LOADBOOL	R7 1 0 ; R7 := true
	8	[5235]	GETGLOBAL	R8 K2 ; R8 := 0x0032441c
	9	[5235]	GETTABLE 	R8 R8 K3 ; R8 := R8["IsTrainingMissionPractise"]
	10	[5235]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	11	[5236]	GETGLOBAL	R6 K4 ; R6 := 0x2d0fad09
	12	[5236]	LOADK    	R7 K5 ; R7 := "Lotus.Scripts.ChallengeRooms.BaseChallengeRoom"
	13	[5236]	CALL     	R6 2 2 ; R6 := R6(R7)
	14	[5238]	TEST     	R5 1 ; if R5 then PC := 21
	15	[5238]	JMP      	21 ; PC := 21
	16	[5239]	GETGLOBAL	R7 K6 ; R7 := 0x25d99d89
	17	[5239]	SELF     	R7 R7 K7 ; R8 := R7; R7 := R7[0x000daadd]
	18	[5239]	LOADK    	R9 := 1.000000
	19	[5239]	GETUPVAL 	R10 U1 ; R10 := U1
	20	[5239]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	21	[5242]	GETGLOBAL	R7 K1 ; R7 := 0x7b998233
	22	[5242]	MOVE     	R8 R0 ; R8 := R0
	23	[5242]	CALL     	R7 2 2 ; R7 := R7(R8)
	24	[5242]	TEST     	R7 0 ; if not R7 then PC := 31
	25	[5242]	JMP      	31 ; PC := 31
	26	[5243]	GETGLOBAL	R7 K8 ; R7 := 0x89326c93
	27	[5243]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0xe3a0bbca]
	28	[5243]	LOADK    	R9 := 0.000000
	29	[5243]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	30	[5243]	MOVE     	R0 R7 ; R0 := R7
	31	[5246]	SELF     	R7 R0 K10 ; R8 := R0; R7 := R0[0xf2deaf69]
	32	[5246]	GETGLOBAL	R9 K11 ; R9 := gLotusVehicleAvatarType
	33	[5246]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	34	[5246]	TEST     	R7 0 ; if not R7 then PC := 39
	35	[5246]	JMP      	39 ; PC := 39
	36	[5247]	SELF     	R7 R0 K12 ; R8 := R0; R7 := R0[0xff005826]
	37	[5247]	CALL     	R7 2 2 ; R7 := R7(R8)
	38	[5247]	MOVE     	R0 R7 ; R0 := R7
	39	[5250]	GETGLOBAL	R7 K1 ; R7 := 0x7b998233
	40	[5250]	MOVE     	R8 R0 ; R8 := R0
	41	[5250]	CALL     	R7 2 2 ; R7 := R7(R8)
	42	[5250]	TEST     	R7 1 ; if R7 then PC := 58
	43	[5250]	JMP      	58 ; PC := 58
	44	[5251]	SELF     	R7 R0 K13 ; R8 := R0; R7 := R0[0x7027c544]
	45	[5251]	MOVE     	R9 R1 ; R9 := R1
	46	[5251]	OP_LOADBOOL	R10 1 0 ; R10 := true
	47	[5251]	LOADK    	R11 := 2.000000
	48	[5251]	LOADK    	R12 := 3.000000
	49	[5251]	OP_LOADBOOL	R13 1 0 ; R13 := true
	50	[5251]	CALL     	R7 7 1 ; R7(R8,R9,R10,R11,R12,R13)
	51	[5252]	SELF     	R7 R0 K15 ; R8 := R0; R7 := R0[0x511d26b8]
	52	[5252]	MOVE     	R9 R2 ; R9 := R2
	53	[5252]	OP_LOADBOOL	R10 1 0 ; R10 := true
	54	[5252]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	55	[5253]	SELF     	R7 R0 K16 ; R8 := R0; R7 := R0[0x7809bf6b]
	56	[5253]	OP_LOADBOOL	R9 1 0 ; R9 := true
	57	[5253]	CALL     	R7 3 1 ; R7(R8,R9)
	58	[5256]	GETGLOBAL	R7 K17 ; R7 := 0xcbd666e1
	59	[5256]	LOADK    	R8 := 3.000000
	60	[5256]	CALL     	R7 2 1 ; R7(R8)
	61	[5257]	GETTABLE 	R7 R6 K18 ; R7 := R6[0xbe09592b]
	62	[5257]	MOVE     	R8 R3 ; R8 := R3
	63	[5257]	MOVE     	R9 R4 ; R9 := R4
	64	[5257]	MOVE     	R10 R5 ; R10 := R5
	65	[5257]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	66	[5258]	RETURN   	R0 1 ; return 

function #265 <?:5260,5274> (46 instructions, 184 bytes at 00000160C682FFC0)
1 param, 12 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[5261]	GETGLOBAL	R1 K0 ; R1 := 0xbe190284
	2	[5261]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xf2deaf69]
	3	[5261]	GETGLOBAL	R3 K2 ; R3 := gLotusBasePvpGameRulesType
	4	[5261]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[5262]	NEWTABLE 	R2 0 0 ; R2 := {}
	6	[5264]	GETGLOBAL	R3 K3 ; R3 := 0x89326c93
	7	[5264]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x7d108ddb]
	8	[5264]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[5265]	GETGLOBAL	R4 K5 ; R4 := 0xc8802016
	10	[5265]	MOVE     	R5 R3 ; R5 := R3
	11	[5265]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	12	[5265]	JMP      	43 ; PC := 43
	13	[5266]	TEST     	R1 0 ; if not R1 then PC := 33
	14	[5266]	JMP      	33 ; PC := 33
	15	[5266]	SELF     	R9 R0 K6 ; R10 := R0; R9 := R0[0xad1e0b4b]
	16	[5266]	CALL     	R9 2 2 ; R9 := R9(R10)
	17	[5266]	SELF     	R10 R8 K6 ; R11 := R8; R10 := R8[0xad1e0b4b]
	18	[5266]	CALL     	R10 2 2 ; R10 := R10(R11)
	19	[5266]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 43
	20	[5266]	JMP      	43 ; PC := 43
	21	[5266]	GETGLOBAL	R9 K7 ; R9 := _T
	22	[5266]	GETTABLE 	R9 R9 K8 ; R9 := R9["PvpMode"]
	23	[5266]	EQ       	1 R9 K9 ; if R9 == nil then PC := 33
	24	[5266]	JMP      	33 ; PC := 33
	25	[5266]	GETGLOBAL	R9 K7 ; R9 := _T
	26	[5266]	GETTABLE 	R9 R9 K8 ; R9 := R9["PvpMode"]
	27	[5266]	TEST     	R9 0 ; if not R9 then PC := 43
	28	[5266]	JMP      	43 ; PC := 43
	29	[5266]	GETGLOBAL	R9 K7 ; R9 := _T
	30	[5266]	GETTABLE 	R9 R9 K8 ; R9 := R9["PvpMode"]
	31	[5266]	EQ       	1 R9 K11 ; if R9 == 3.000000 then PC := 43
	32	[5266]	JMP      	43 ; PC := 43
	33	[5267]	SELF     	R9 R8 K12 ; R10 := R8; R9 := R8[0x5ca33548]
	34	[5267]	CALL     	R9 2 2 ; R9 := R9(R10)
	35	[5267]	GETGLOBAL	R10 K13 ; R10 := HIDDEN_PLAYER_NAME
	36	[5267]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 43
	37	[5267]	JMP      	43 ; PC := 43
	38	[5268]	GETGLOBAL	R9 K14 ; R9 := 0x33bdd652
	39	[5268]	GETTABLE 	R9 R9 K15 ; R9 := R9[0x23d5322f]
	40	[5268]	MOVE     	R10 R2 ; R10 := R2
	41	[5268]	MOVE     	R11 R8 ; R11 := R8
	42	[5268]	CALL     	R9 3 1 ; R9(R10,R11)
	43	[5265]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 13; R6 := R7 end
	44	[5270]	JMP      	13 ; PC := 13
	45	[5273]	RETURN   	R2 2 ; return R2 
	46	[5274]	RETURN   	R0 1 ; return 

function #266 <?:5277,5289> (23 instructions, 92 bytes at 00000160C6830330)
2 params, 6 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[5279]	GETGLOBAL	R2 K0 ; R2 := 0x89326c93
	2	[5279]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xc7b81e8d]
	3	[5279]	MOVE     	R4 R0 ; R4 := R0
	4	[5279]	MOVE     	R5 R1 ; R5 := R1
	5	[5279]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	6	[5281]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	7	[5281]	MOVE     	R4 R2 ; R4 := R2
	8	[5281]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[5281]	TEST     	R3 1 ; if R3 then PC := 13
	10	[5281]	JMP      	13 ; PC := 13
	11	[5282]	RETURN   	R2 2 ; return R2 
	12	[5282]	JMP      	19 ; PC := 19
	13	[5284]	GETGLOBAL	R3 K3 ; R3 := 0x60cce7b4
	14	[5284]	GETGLOBAL	R4 K0 ; R4 := 0x89326c93
	15	[5284]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x18d05d30]
	16	[5284]	CALL     	R4 2 2 ; R4 := R4(R5)
	17	[5284]	NOT      	R4 R4 ; R4 := not R4
	18	[5284]	CALL     	R3 2 1 ; R3(R4)
	19	[5287]	GETGLOBAL	R3 K5 ; R3 := 0xcbd666e1
	20	[5287]	LOADK    	R4 := 0.000000
	21	[5287]	CALL     	R3 2 1 ; R3(R4)
	22	[5287]	JMP      	1 ; PC := 1
	23	[5289]	RETURN   	R0 1 ; return 

function #267 <?:5291,5303> (19 instructions, 76 bytes at 00000160C6830510)
1 param, 5 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[5292]	MOVE     	R1 R0 ; R1 := R0
	2	[5294]	EQ       	0 R1 K0 ; if R1 ~= "" then PC := 9
	3	[5294]	JMP      	9 ; PC := 9
	4	[5295]	GETGLOBAL	R2 K1 ; R2 := 0x603636ad
	5	[5295]	LOADK    	R3 K2 ; R3 := "/Lotus/Language/Menu/Loadout_Default"
	6	[5295]	OP_LOADBOOL	R4 0 0 ; R4 := false
	7	[5295]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[5295]	MOVE     	R1 R2 ; R1 := R2
	9	[5298]	GETGLOBAL	R2 K3 ; R2 := 0xeb8fddd7
	10	[5298]	CALL     	R2 1 2 ; R2 := R2()
	11	[5298]	TEST     	R2 0 ; if not R2 then PC := 18
	12	[5298]	JMP      	18 ; PC := 18
	13	[5299]	GETGLOBAL	R2 K4 ; R2 := 0x09423272
	14	[5299]	MOVE     	R3 R1 ; R3 := R1
	15	[5299]	LOADK    	R4 := 1.000000
	16	[5299]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	17	[5299]	MOVE     	R1 R2 ; R1 := R2
	18	[5302]	RETURN   	R1 2 ; return R1 
	19	[5303]	RETURN   	R0 1 ; return 

function #268 <?:5305,5307> (5 instructions, 20 bytes at 00000160C6830720)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5306]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5306]	MOVE     	R2 R0 ; R2 := R0
	3	[5306]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[5306]	RETURN   	R1 0 ; return R1,... 
	5	[5307]	RETURN   	R0 1 ; return 

function #269 <?:5309,5382> (210 instructions, 840 bytes at 00000160C6830810)
1 param, 25 slots, 4 upvalues, 0 locals, 42 constants, 0 functions
	1	[5310]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	2	[5311]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	3	[5311]	MOVE     	R3 R1 ; R3 := R1
	4	[5311]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[5311]	TEST     	R2 0 ; if not R2 then PC := 10
	6	[5311]	JMP      	10 ; PC := 10
	7	[5313]	LOADK    	R2 K2 ; R2 := ""
	8	[5313]	OP_LOADBOOL	R3 0 0 ; R3 := false
	9	[5313]	RETURN   	R2 3 ; return R2, R3 
	10	[5316]	GETGLOBAL	R2 K3 ; R2 := _T
	11	[5316]	GETTABLE 	R2 R2 K4 ; R2 := R2["ActiveQuestLoaded"]
	12	[5316]	TEST     	R2 1 ; if R2 then PC := 20
	13	[5316]	JMP      	20 ; PC := 20
	14	[5317]	GETGLOBAL	R2 K5 ; R2 := 0x3d106989
	15	[5317]	LOADK    	R3 K6 ; R3 := "Update quests: no active quest loaded"
	16	[5317]	CALL     	R2 2 1 ; R2(R3)
	17	[5318]	LOADK    	R2 K2 ; R2 := ""
	18	[5318]	OP_LOADBOOL	R3 0 0 ; R3 := false
	19	[5318]	RETURN   	R2 3 ; return R2, R3 
	20	[5321]	GETUPVAL 	R2 U0 ; R2 := U0
	21	[5321]	MOVE     	R3 R1 ; R3 := R1
	22	[5321]	CALL     	R2 2 5 ; R2,R3,R4,R5 := R2(R3)
	23	[5322]	LOADK    	R6 K2 ; R6 := ""
	24	[5324]	GETGLOBAL	R7 K3 ; R7 := _T
	25	[5324]	GETTABLE 	R7 R7 K7 ; R7 := R7["questInfo"]
	26	[5324]	EQ       	1 R7 K8 ; if R7 == nil then PC := 50
	27	[5324]	JMP      	50 ; PC := 50
	28	[5324]	GETGLOBAL	R7 K3 ; R7 := _T
	29	[5324]	GETTABLE 	R7 R7 K7 ; R7 := R7["questInfo"]
	30	[5324]	GETTABLE 	R7 R7 K9 ; R7 := R7["activeQuest"]
	31	[5324]	EQ       	1 R7 K8 ; if R7 == nil then PC := 50
	32	[5324]	JMP      	50 ; PC := 50
	33	[5324]	GETGLOBAL	R7 K3 ; R7 := _T
	34	[5324]	GETTABLE 	R7 R7 K7 ; R7 := R7["questInfo"]
	35	[5324]	GETTABLE 	R7 R7 K9 ; R7 := R7["activeQuest"]
	36	[5324]	EQ       	0 R7 R2 ; if R7 ~= R2 then PC := 50
	37	[5324]	JMP      	50 ; PC := 50
	38	[5324]	GETGLOBAL	R7 K3 ; R7 := _T
	39	[5324]	GETTABLE 	R7 R7 K7 ; R7 := R7["questInfo"]
	40	[5324]	GETTABLE 	R7 R7 K10 ; R7 := R7["stage"]
	41	[5324]	EQ       	0 R7 R3 ; if R7 ~= R3 then PC := 50
	42	[5324]	JMP      	50 ; PC := 50
	43	[5324]	GETGLOBAL	R7 K3 ; R7 := _T
	44	[5324]	GETTABLE 	R7 R7 K7 ; R7 := R7["questInfo"]
	45	[5324]	GETTABLE 	R7 R7 K11 ; R7 := R7["gameRules"]
	46	[5324]	GETGLOBAL	R8 K12 ; R8 := 0xbe190284
	47	[5324]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 50
	48	[5324]	JMP      	50 ; PC := 50
	49	[5324]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 50
	50	[5324]	OP_LOADBOOL	R7 1 0 ; R7 := true
	51	[5326]	GETGLOBAL	R8 K3 ; R8 := _T
	52	[5326]	NEWTABLE 	R9 0 5 ; R9 := {}
	53	[5326]	SETTABLE 	R9 K9 R2 ; R9["activeQuest"] := R2
	54	[5326]	SETTABLE 	R9 K10 R3 ; R9["stage"] := R3
	55	[5326]	SETTABLE 	R9 K13 R4 ; R9["difficulty"] := R4
	56	[5326]	SETTABLE 	R9 K14 R5 ; R9["canProgress"] := R5
	57	[5326]	GETGLOBAL	R10 K12 ; R10 := 0xbe190284
	58	[5326]	SETTABLE 	R9 K11 R10 ; R9["gameRules"] := R10
	59	[5326]	SETTABLE 	R8 K7 R9 ; R8["questInfo"] := R9
	60	[5327]	GETGLOBAL	R8 K15 ; R8 := 0x0032441c
	61	[5327]	GETGLOBAL	R9 K3 ; R9 := _T
	62	[5327]	GETTABLE 	R9 R9 K7 ; R9 := R9["questInfo"]
	63	[5327]	SETTABLE 	R8 K7 R9 ; R8["questInfo"] := R9
	64	[5329]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	65	[5329]	MOVE     	R9 R2 ; R9 := R2
	66	[5329]	CALL     	R8 2 2 ; R8 := R8(R9)
	67	[5329]	TEST     	R8 0 ; if not R8 then PC := 71
	68	[5329]	JMP      	71 ; PC := 71
	69	[5329]	TEST     	R0 0 ; if not R0 then PC := 191
	70	[5329]	JMP      	191 ; PC := 191
	71	[5330]	TEST     	R3 0 ; if not R3 then PC := 183
	72	[5330]	JMP      	183 ; PC := 183
	73	[5330]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	74	[5330]	MOVE     	R9 R2 ; R9 := R2
	75	[5330]	CALL     	R8 2 2 ; R8 := R8(R9)
	76	[5330]	TEST     	R8 1 ; if R8 then PC := 183
	77	[5330]	JMP      	183 ; PC := 183
	78	[5331]	GETGLOBAL	R8 K16 ; R8 := 0x603636ad
	79	[5331]	GETGLOBAL	R9 K17 ; R9 := 0x64fb1586
	80	[5331]	SELF     	R10 R2 K18 ; R11 := R2; R10 := R2[0xd3a9d01f]
	81	[5331]	CALL     	R10 2 0 ; R10,... := R10(R11)
	82	[5331]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	83	[5331]	OP_LOADBOOL	R10 0 0 ; R10 := false
	84	[5331]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	85	[5331]	MOVE     	R6 R8 ; R6 := R8
	86	[5332]	SELF     	R8 R2 K19 ; R9 := R2; R8 := R2[0x45fdff63]
	87	[5332]	SUB      	R10 R3 K20 ; R10 := R3 - 1.000000
	88	[5332]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	89	[5333]	GETGLOBAL	R9 K21 ; R9 := EMPTY_SYMBOL
	90	[5333]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 101
	91	[5333]	JMP      	101 ; PC := 101
	92	[5334]	MOVE     	R9 R6 ; R9 := R6
	93	[5334]	LOADK    	R10 K22 ; R10 := "\r\n"
	94	[5334]	GETGLOBAL	R11 K16 ; R11 := 0x603636ad
	95	[5334]	GETGLOBAL	R12 K17 ; R12 := 0x64fb1586
	96	[5334]	MOVE     	R13 R8 ; R13 := R8
	97	[5334]	CALL     	R12 2 2 ; R12 := R12(R13)
	98	[5334]	OP_LOADBOOL	R13 0 0 ; R13 := false
	99	[5334]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	100	[5334]	CONCAT   	R6 R9 R11 ; R6 := R9 .. R10 .. R11
	101	[5337]	TEST     	R7 0 ; if not R7 then PC := 183
	102	[5337]	JMP      	183 ; PC := 183
	103	[5337]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	104	[5337]	GETGLOBAL	R10 K23 ; R10 := 0x89326c93
	105	[5337]	CALL     	R9 2 2 ; R9 := R9(R10)
	106	[5337]	TEST     	R9 1 ; if R9 then PC := 183
	107	[5337]	JMP      	183 ; PC := 183
	108	[5338]	LOADK    	R9 := 1.000000
	109	[5338]	GETGLOBAL	R10 K3 ; R10 := _T
	110	[5338]	GETTABLE 	R10 R10 K24 ; R10 := R10["QuestResetVars"]
	111	[5338]	LEN      	R10 R10 ; R10 := # R10
	112	[5338]	LOADK    	R11 := 1.000000
	113	[5338]	FORPREP  	R9 119 ; R9 -= R11; PC := 119
	114	[5339]	GETGLOBAL	R13 K3 ; R13 := _T
	115	[5339]	GETGLOBAL	R14 K3 ; R14 := _T
	116	[5339]	GETTABLE 	R14 R14 K24 ; R14 := R14["QuestResetVars"]
	117	[5339]	GETTABLE 	R14 R14 R12 ; R14 := R14[R12]
	118	[5339]	SETTABLE 	R13 R14 K8 ; R13[R14] := nil
	119	[5338]	FORLOOP  	R9 114 ; R9 += R11; if R9 <= R10 then begin PC := 114; R12 := R9 end
	120	[5341]	GETGLOBAL	R13 K3 ; R13 := _T
	121	[5341]	NEWTABLE 	R14 0 0 ; R14 := {}
	122	[5341]	SETTABLE 	R13 K24 R14 ; R13["QuestResetVars"] := R14
	123	[5343]	GETGLOBAL	R13 K23 ; R13 := 0x89326c93
	124	[5343]	SELF     	R13 R13 K25 ; R14 := R13; R13 := R13[0xfb64e76c]
	125	[5343]	CALL     	R13 2 2 ; R13 := R13(R14)
	126	[5344]	GETGLOBAL	R14 K1 ; R14 := 0x7b998233
	127	[5344]	MOVE     	R15 R13 ; R15 := R13
	128	[5344]	CALL     	R14 2 2 ; R14 := R14(R15)
	129	[5344]	TEST     	R14 0 ; if not R14 then PC := 141
	130	[5344]	JMP      	141 ; PC := 141
	131	[5345]	GETGLOBAL	R14 K5 ; R14 := 0x3d106989
	132	[5345]	LOADK    	R15 K26 ; R15 := "No local player yet, and this is kinda important"
	133	[5345]	CALL     	R14 2 1 ; R14(R15)
	134	[5346]	GETGLOBAL	R14 K3 ; R14 := _T
	135	[5346]	SETTABLE 	R14 K7 K8 ; R14["questInfo"] := nil
	136	[5347]	GETGLOBAL	R14 K15 ; R14 := 0x0032441c
	137	[5347]	SETTABLE 	R14 K7 K8 ; R14["questInfo"] := nil
	138	[5348]	LOADK    	R14 K2 ; R14 := ""
	139	[5348]	OP_LOADBOOL	R15 0 0 ; R15 := false
	140	[5348]	RETURN   	R14 3 ; return R14, R15 
	141	[5351]	GETUPVAL 	R14 U1 ; R14 := U1
	142	[5351]	CALL     	R14 1 2 ; R14 := R14()
	143	[5352]	TEST     	R14 1 ; if R14 then PC := 150
	144	[5352]	JMP      	150 ; PC := 150
	145	[5352]	GETGLOBAL	R15 K12 ; R15 := 0xbe190284
	146	[5352]	SELF     	R15 R15 K27 ; R16 := R15; R15 := R15[0x99f38c13]
	147	[5352]	CALL     	R15 2 2 ; R15 := R15(R16)
	148	[5352]	TEST     	R15 1 ; if R15 then PC := 183
	149	[5352]	JMP      	183 ; PC := 183
	150	[5353]	TEST     	R14 0 ; if not R14 then PC := 160
	151	[5353]	JMP      	160 ; PC := 160
	152	[5354]	GETGLOBAL	R15 K5 ; R15 := 0x3d106989
	153	[5354]	LOADK    	R16 K28 ; R16 := "Running RunOnPlayerSpawnedScriptsAfterIntro"
	154	[5354]	CALL     	R15 2 1 ; R15(R16)
	155	[5355]	GETGLOBAL	R15 K12 ; R15 := 0xbe190284
	156	[5355]	SELF     	R15 R15 K29 ; R16 := R15; R15 := R15[0x133ba121]
	157	[5355]	MOVE     	R17 R13 ; R17 := R13
	158	[5355]	CALL     	R15 3 1 ; R15(R16,R17)
	159	[5355]	JMP      	174 ; PC := 174
	160	[5356]	GETUPVAL 	R15 U2 ; R15 := U2
	161	[5356]	CALL     	R15 1 2 ; R15 := R15()
	162	[5356]	TEST     	R15 1 ; if R15 then PC := 174
	163	[5356]	JMP      	174 ; PC := 174
	164	[5356]	GETGLOBAL	R15 K12 ; R15 := 0xbe190284
	165	[5356]	SELF     	R15 R15 K30 ; R16 := R15; R15 := R15[0xf2deaf69]
	166	[5356]	GETGLOBAL	R17 K31 ; R17 := gLotusAttractModeGameRulesType
	167	[5356]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	168	[5356]	TEST     	R15 0 ; if not R15 then PC := 174
	169	[5356]	JMP      	174 ; PC := 174
	170	[5357]	GETGLOBAL	R15 K12 ; R15 := 0xbe190284
	171	[5357]	SELF     	R15 R15 K32 ; R16 := R15; R15 := R15[0x3254ae22]
	172	[5357]	MOVE     	R17 R13 ; R17 := R13
	173	[5357]	CALL     	R15 3 1 ; R15(R16,R17)
	174	[5362]	GETUPVAL 	R15 U3 ; R15 := U3
	175	[5362]	CALL     	R15 1 2 ; R15 := R15()
	176	[5363]	GETGLOBAL	R16 K1 ; R16 := 0x7b998233
	177	[5363]	MOVE     	R17 R15 ; R17 := R15
	178	[5363]	CALL     	R16 2 2 ; R16 := R16(R17)
	179	[5363]	TEST     	R16 1 ; if R16 then PC := 183
	180	[5363]	JMP      	183 ; PC := 183
	181	[5364]	SELF     	R16 R15 K33 ; R17 := R15; R16 := R15[0x07354ec6]
	182	[5364]	CALL     	R16 2 1 ; R16(R17)
	183	[5369]	GETGLOBAL	R16 K34 ; R16 := 0x9ba7909f
	184	[5369]	SELF     	R16 R16 K35 ; R17 := R16; R16 := R16[0x7e17ae26]
	185	[5369]	LOADK    	R18 K36 ; R18 := "OnQuestsChanged"
	186	[5369]	LOADK    	R19 K2 ; R19 := ""
	187	[5369]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	188	[5371]	MOVE     	R16 R6 ; R16 := R6
	189	[5371]	OP_LOADBOOL	R17 1 0 ; R17 := true
	190	[5371]	RETURN   	R16 3 ; return R16, R17 
	191	[5374]	SELF     	R16 R1 K37 ; R17 := R1; R16 := R1[0x25a6e75e]
	192	[5374]	CALL     	R16 2 2 ; R16 := R16(R17)
	193	[5375]	SELF     	R17 R16 K38 ; R18 := R16; R17 := R16[0xe9768ed0]
	194	[5375]	CALL     	R17 2 2 ; R17 := R17(R18)
	195	[5376]	GETGLOBAL	R18 K39 ; R18 := 0xc8802016
	196	[5376]	MOVE     	R19 R17 ; R19 := R17
	197	[5376]	CALL     	R18 2 4 ; R18,R19,R20 := R18(R19)
	198	[5376]	JMP      	205 ; PC := 205
	199	[5377]	GETTABLE 	R23 R22 K40 ; R23 := R22["mCompleted"]
	200	[5377]	TEST     	R23 1 ; if R23 then PC := 205
	201	[5377]	JMP      	205 ; PC := 205
	202	[5378]	LOADK    	R23 K41 ; R23 := "New quests are available!"
	203	[5378]	OP_LOADBOOL	R24 1 0 ; R24 := true
	204	[5378]	RETURN   	R23 3 ; return R23, R24 
	205	[5376]	TFORLOOP 	R18 2 ; R21,R22 := R18(R19,R20); if R21 ~= nil then begin PC = 199; R20 := R21 end
	206	[5379]	JMP      	199 ; PC := 199
	207	[5381]	LOADK    	R23 K2 ; R23 := ""
	208	[5381]	OP_LOADBOOL	R24 1 0 ; R24 := true
	209	[5381]	RETURN   	R23 3 ; return R23, R24 
	210	[5382]	RETURN   	R0 1 ; return 

function #270 <?:5384,5386> (3 instructions, 12 bytes at 00000160C68314E0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5385]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5385]	RETURN   	R0 2 ; return R0 
	3	[5386]	RETURN   	R0 1 ; return 

function #271 <?:5388,5390> (4 instructions, 16 bytes at 00000160C68315B0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5389]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5389]	LEN      	R0 R0 ; R0 := # R0
	3	[5389]	RETURN   	R0 2 ; return R0 
	4	[5390]	RETURN   	R0 1 ; return 

function #272 <?:5392,5402> (29 instructions, 116 bytes at 00000160C6831680)
1 param, 15 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[5395]	LOADK    	R2 := 3.000000
	2	[5396]	NEWTABLE 	R3 2 0 ; R3 := {}
	3	[5396]	GETGLOBAL	R4 K0 ; R4 := 0x7ed0a956
	4	[5396]	LOADK    	R5 K1 ; R5 := "/EE/Types/Physics/FullBody"
	5	[5396]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[5396]	GETGLOBAL	R5 K2 ; R5 := gBaseAvatarType
	7	[5396]	SETLIST  	R3 2 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
	8	[5397]	GETGLOBAL	R4 K3 ; R4 := 0xa421af95
	9	[5397]	CALL     	R4 1 2 ; R4 := R4()
	10	[5398]	GETGLOBAL	R5 K4 ; R5 := 0xf6c6e505
	11	[5398]	SELF     	R6 R0 K5 ; R7 := R0; R6 := R0[0xeea7f8c4]
	12	[5398]	CALL     	R6 2 0 ; R6,... := R6(R7)
	13	[5398]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	14	[5399]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0xde321e6f]
	15	[5399]	CALL     	R6 2 2 ; R6 := R6(R7)
	16	[5399]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0xefd0fde2]
	17	[5399]	CALL     	R6 2 2 ; R6 := R6(R7)
	18	[5400]	MUL      	R7 R5 R2 ; R7 := R5 * R2
	19	[5400]	ADD      	R7 R6 R7 ; R7 := R6 + R7
	20	[5401]	GETGLOBAL	R8 K8 ; R8 := 0x89326c93
	21	[5401]	SELF     	R8 R8 K9 ; R9 := R8; R8 := R8[0x15fbdbc0]
	22	[5401]	MOVE     	R10 R6 ; R10 := R6
	23	[5401]	MOVE     	R11 R7 ; R11 := R7
	24	[5401]	MOVE     	R12 R3 ; R12 := R3
	25	[5401]	MOVE     	R13 R1 ; R13 := R1
	26	[5401]	MOVE     	R14 R4 ; R14 := R4
	27	[5401]	TAILCALL 	R8 7 0 ; R8,... := R8(R9,R10,R11,R12,R13,R14)
	28	[5401]	RETURN   	R8 0 ; return R8,... 
	29	[5402]	RETURN   	R0 1 ; return 

function #273 <?:5404,5431> (60 instructions, 240 bytes at 00000160C6831930)
3 params, 13 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[5405]	NEWTABLE 	R3 0 0 ; R3 := {}
	2	[5406]	NEWTABLE 	R4 0 0 ; R4 := {}
	3	[5408]	EQ       	0 R0 K1 ; if R0 ~= 0.000000 then PC := 9
	4	[5408]	JMP      	9 ; PC := 9
	5	[5409]	SELF     	R5 R1 K2 ; R6 := R1; R5 := R1[0x21a3da0c]
	6	[5409]	CALL     	R5 2 2 ; R5 := R5(R6)
	7	[5409]	MOVE     	R3 R5 ; R3 := R5
	8	[5409]	JMP      	26 ; PC := 26
	9	[5410]	EQ       	0 R0 K3 ; if R0 ~= 3.000000 then PC := 15
	10	[5410]	JMP      	15 ; PC := 15
	11	[5411]	SELF     	R5 R1 K4 ; R6 := R1; R5 := R1[0x0bf14f02]
	12	[5411]	CALL     	R5 2 2 ; R5 := R5(R6)
	13	[5411]	MOVE     	R3 R5 ; R3 := R5
	14	[5411]	JMP      	26 ; PC := 26
	15	[5412]	EQ       	0 R0 K5 ; if R0 ~= 2.000000 then PC := 21
	16	[5412]	JMP      	21 ; PC := 21
	17	[5413]	SELF     	R5 R1 K6 ; R6 := R1; R5 := R1[0x57d88957]
	18	[5413]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[5413]	MOVE     	R3 R5 ; R3 := R5
	20	[5413]	JMP      	26 ; PC := 26
	21	[5414]	EQ       	0 R0 K7 ; if R0 ~= 1.000000 then PC := 26
	22	[5414]	JMP      	26 ; PC := 26
	23	[5415]	SELF     	R5 R1 K8 ; R6 := R1; R5 := R1[0x215bf396]
	24	[5415]	CALL     	R5 2 2 ; R5 := R5(R6)
	25	[5415]	MOVE     	R3 R5 ; R3 := R5
	26	[5418]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	27	[5418]	MOVE     	R6 R3 ; R6 := R3
	28	[5418]	CALL     	R5 2 2 ; R5 := R5(R6)
	29	[5418]	TEST     	R5 1 ; if R5 then PC := 59
	30	[5418]	JMP      	59 ; PC := 59
	31	[5418]	LEN      	R5 R3 ; R5 := # R3
	32	[5418]	LT       	0 K1 R5 ; if 0.000000 >= R5 then PC := 59
	33	[5418]	JMP      	59 ; PC := 59
	34	[5419]	LOADK    	R5 := 1.000000
	35	[5419]	LEN      	R6 R3 ; R6 := # R3
	36	[5419]	LOADK    	R7 := 1.000000
	37	[5419]	FORPREP  	R5 58 ; R5 -= R7; PC := 58
	38	[5420]	GETGLOBAL	R9 K9 ; R9 := 0x7b998233
	39	[5420]	GETTABLE 	R10 R3 R8 ; R10 := R3[R8]
	40	[5420]	GETTABLE 	R10 R10 K10 ; R10 := R10["mItemType"]
	41	[5420]	CALL     	R9 2 2 ; R9 := R9(R10)
	42	[5420]	TEST     	R9 1 ; if R9 then PC := 58
	43	[5420]	JMP      	58 ; PC := 58
	44	[5421]	SELF     	R9 R2 K11 ; R10 := R2; R9 := R2[0x105074fb]
	45	[5421]	GETTABLE 	R11 R3 R8 ; R11 := R3[R8]
	46	[5421]	GETTABLE 	R11 R11 K10 ; R11 := R11["mItemType"]
	47	[5421]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	48	[5423]	GETGLOBAL	R10 K9 ; R10 := 0x7b998233
	49	[5423]	MOVE     	R11 R9 ; R11 := R9
	50	[5423]	CALL     	R10 2 2 ; R10 := R10(R11)
	51	[5423]	TEST     	R10 1 ; if R10 then PC := 58
	52	[5423]	JMP      	58 ; PC := 58
	53	[5424]	GETGLOBAL	R10 K12 ; R10 := 0x33bdd652
	54	[5424]	GETTABLE 	R10 R10 K13 ; R10 := R10[0x23d5322f]
	55	[5424]	MOVE     	R11 R4 ; R11 := R4
	56	[5424]	MOVE     	R12 R9 ; R12 := R9
	57	[5424]	CALL     	R10 3 1 ; R10(R11,R12)
	58	[5419]	FORLOOP  	R5 38 ; R5 += R7; if R5 <= R6 then begin PC := 38; R8 := R5 end
	59	[5430]	RETURN   	R4 2 ; return R4 
	60	[5431]	RETURN   	R0 1 ; return 

function #274 <?:5434,5485> (116 instructions, 464 bytes at 00000160C6831CB0)
2 params, 24 slots, 1 upvalue, 0 locals, 20 constants, 0 functions
	1	[5435]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[5435]	MOVE     	R3 R0 ; R3 := R0
	3	[5435]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[5435]	TEST     	R2 1 ; if R2 then PC := 11
	5	[5435]	JMP      	11 ; PC := 11
	6	[5435]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[5435]	MOVE     	R3 R1 ; R3 := R1
	8	[5435]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[5435]	TEST     	R2 0 ; if not R2 then PC := 14
	10	[5435]	JMP      	14 ; PC := 14
	11	[5436]	OP_LOADBOOL	R2 0 0 ; R2 := false
	12	[5436]	LOADK    	R3 K1 ; R3 := ""
	13	[5436]	RETURN   	R2 3 ; return R2, R3 
	14	[5439]	OP_LOADBOOL	R2 0 0 ; R2 := false
	15	[5440]	OP_LOADBOOL	R3 0 0 ; R3 := false
	16	[5441]	OP_LOADBOOL	R4 0 0 ; R4 := false
	17	[5442]	LOADK    	R5 K1 ; R5 := ""
	18	[5443]	NEWTABLE 	R6 4 0 ; R6 := {}
	19	[5443]	NEWTABLE 	R7 0 2 ; R7 := {}
	20	[5443]	SETTABLE 	R7 K2 K4 ; R7["Cat"] := 0.000000
	21	[5443]	SETTABLE 	R7 K5 K6 ; R7["isSuit"] := true
	22	[5443]	NEWTABLE 	R8 0 2 ; R8 := {}
	23	[5444]	SETTABLE 	R8 K2 K7 ; R8["Cat"] := 2.000000
	24	[5444]	SETTABLE 	R8 K5 K8 ; R8["isSuit"] := false
	25	[5444]	NEWTABLE 	R9 0 2 ; R9 := {}
	26	[5445]	SETTABLE 	R9 K2 K9 ; R9["Cat"] := 1.000000
	27	[5445]	SETTABLE 	R9 K5 K8 ; R9["isSuit"] := false
	28	[5445]	NEWTABLE 	R10 0 2 ; R10 := {}
	29	[5446]	SETTABLE 	R10 K2 K10 ; R10["Cat"] := 3.000000
	30	[5446]	SETTABLE 	R10 K5 K8 ; R10["isSuit"] := false
	31	[5446]	SETLIST  	R6 4 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 4
	32	[5448]	GETGLOBAL	R7 K11 ; R7 := 0xc8802016
	33	[5448]	MOVE     	R8 R6 ; R8 := R6
	34	[5448]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	35	[5448]	JMP      	79 ; PC := 79
	36	[5449]	GETTABLE 	R12 R11 K5 ; R12 := R11["isSuit"]
	37	[5449]	TEST     	R12 0 ; if not R12 then PC := 41
	38	[5449]	JMP      	41 ; PC := 41
	39	[5449]	TEST     	R2 0 ; if not R2 then PC := 46
	40	[5449]	JMP      	46 ; PC := 46
	41	[5449]	GETTABLE 	R12 R11 K5 ; R12 := R11["isSuit"]
	42	[5449]	TEST     	R12 1 ; if R12 then PC := 73
	43	[5449]	JMP      	73 ; PC := 73
	44	[5449]	TEST     	R3 1 ; if R3 then PC := 73
	45	[5449]	JMP      	73 ; PC := 73
	46	[5450]	GETUPVAL 	R12 U0 ; R12 := U0
	47	[5450]	GETTABLE 	R13 R11 K2 ; R13 := R11["Cat"]
	48	[5450]	MOVE     	R14 R0 ; R14 := R0
	49	[5450]	MOVE     	R15 R1 ; R15 := R1
	50	[5450]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	51	[5451]	GETGLOBAL	R13 K11 ; R13 := 0xc8802016
	52	[5451]	MOVE     	R14 R12 ; R14 := R12
	53	[5451]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	54	[5451]	JMP      	71 ; PC := 71
	55	[5452]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	56	[5452]	MOVE     	R19 R17 ; R19 := R17
	57	[5452]	CALL     	R18 2 2 ; R18 := R18(R19)
	58	[5452]	TEST     	R18 1 ; if R18 then PC := 71
	59	[5452]	JMP      	71 ; PC := 71
	60	[5452]	SELF     	R18 R17 K12 ; R19 := R17; R18 := R17[0x9470f5c2]
	61	[5452]	CALL     	R18 2 2 ; R18 := R18(R19)
	62	[5452]	TEST     	R18 0 ; if not R18 then PC := 71
	63	[5452]	JMP      	71 ; PC := 71
	64	[5453]	GETTABLE 	R18 R11 K2 ; R18 := R11["Cat"]
	65	[5453]	EQ       	0 R18 K4 ; if R18 ~= 0.000000 then PC := 69
	66	[5453]	JMP      	69 ; PC := 69
	67	[5454]	OP_LOADBOOL	R2 1 0 ; R2 := true
	68	[5454]	JMP      	73 ; PC := 73
	69	[5456]	OP_LOADBOOL	R3 1 0 ; R3 := true
	70	[5458]	JMP      	73 ; PC := 73
	71	[5451]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 55; R15 := R16 end
	72	[5459]	JMP      	55 ; PC := 55
	73	[5463]	TESTSET  	R4 R2 0 ; if not R2 then PC := 76 else R4 := R2 
	74	[5463]	JMP      	76 ; PC := 76
	75	[5463]	MOVE     	R4 R3 ; R4 := R3
	76	[5464]	TEST     	R4 0 ; if not R4 then PC := 79
	77	[5464]	JMP      	79 ; PC := 79
	78	[5465]	JMP      	81 ; PC := 81
	79	[5448]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 36; R9 := R10 end
	80	[5466]	JMP      	36 ; PC := 36
	81	[5469]	TEST     	R4 1 ; if R4 then PC := 113
	82	[5469]	JMP      	113 ; PC := 113
	83	[5471]	LOADK    	R18 K1 ; R18 := ""
	84	[5472]	TEST     	R2 1 ; if R2 then PC := 98
	85	[5472]	JMP      	98 ; PC := 98
	86	[5473]	MOVE     	R19 R18 ; R19 := R18
	87	[5473]	LOADK    	R20 K13 ; R20 := "1x "
	88	[5473]	GETGLOBAL	R21 K14 ; R21 := 0x603636ad
	89	[5473]	LOADK    	R22 K15 ; R22 := "/Lotus/Language/Menu/Global_ProductCategory_Suit"
	90	[5473]	OP_LOADBOOL	R23 0 0 ; R23 := false
	91	[5473]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	92	[5473]	CONCAT   	R18 R19 R21 ; R18 := R19 .. R20 .. R21
	93	[5474]	TEST     	R3 1 ; if R3 then PC := 98
	94	[5474]	JMP      	98 ; PC := 98
	95	[5475]	MOVE     	R19 R18 ; R19 := R18
	96	[5475]	LOADK    	R20 K16 ; R20 := " + "
	97	[5475]	CONCAT   	R18 R19 R20 ; R18 := R19 .. R20
	98	[5478]	TEST     	R3 1 ; if R3 then PC := 107
	99	[5478]	JMP      	107 ; PC := 107
	100	[5479]	MOVE     	R19 R18 ; R19 := R18
	101	[5479]	LOADK    	R20 K13 ; R20 := "1x "
	102	[5479]	GETGLOBAL	R21 K14 ; R21 := 0x603636ad
	103	[5479]	LOADK    	R22 K17 ; R22 := "/Lotus/Language/Menu/Loadout_PVPCompatibleWeapon"
	104	[5479]	OP_LOADBOOL	R23 0 0 ; R23 := false
	105	[5479]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	106	[5479]	CONCAT   	R18 R19 R21 ; R18 := R19 .. R20 .. R21
	107	[5481]	GETGLOBAL	R19 K14 ; R19 := 0x603636ad
	108	[5481]	LOADK    	R20 K18 ; R20 := "/Lotus/Language/Menu/Loadout_PVPNeedCompatibleGear"
	109	[5481]	NEWTABLE 	R21 0 1 ; R21 := {}
	110	[5481]	SETTABLE 	R21 K19 R18 ; R21["REQ_GEAR"] := R18
	111	[5481]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	112	[5481]	MOVE     	R5 R19 ; R5 := R19
	113	[5484]	MOVE     	R19 R4 ; R19 := R4
	114	[5484]	MOVE     	R20 R5 ; R20 := R5
	115	[5484]	RETURN   	R19 3 ; return R19, R20 
	116	[5485]	RETURN   	R0 1 ; return 

function #275 <?:5487,5494> (20 instructions, 80 bytes at 00000160C6832440)
2 params, 9 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[5488]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[5488]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x44537adf]
	3	[5488]	MOVE     	R3 R0 ; R3 := R0
	4	[5488]	CALL     	R2 2 3 ; R2,R3 := R2(R3)
	5	[5490]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x67bc869f]
	6	[5490]	MOVE     	R6 R1 ; R6 := R1
	7	[5490]	LOADK    	R7 := 12.000000
	8	[5490]	MOVE     	R8 R2 ; R8 := R2
	9	[5490]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	10	[5491]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x67bc869f]
	11	[5491]	MOVE     	R6 R1 ; R6 := R1
	12	[5491]	LOADK    	R7 := 13.000000
	13	[5491]	MOVE     	R8 R3 ; R8 := R3
	14	[5491]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	15	[5493]	SELF     	R4 R0 K2 ; R5 := R0; R4 := R0[0xd5181643]
	16	[5493]	MOVE     	R6 R1 ; R6 := R1
	17	[5493]	GETGLOBAL	R7 K3 ; R7 := 0x0032441c
	18	[5493]	GETTABLE 	R7 R7 K4 ; R7 := R7["UIMaterial_Bluer"]
	19	[5493]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	20	[5494]	RETURN   	R0 1 ; return 

function #276 <?:5496,5513> (37 instructions, 148 bytes at 00000160C6832630)
2 params, 7 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[5497]	GETGLOBAL	R2 K0 ; R2 := 0x76ea806b
	2	[5497]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x3f3ae64c]
	3	[5497]	LOADK    	R4 := 0.000000
	4	[5497]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	5	[5498]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	6	[5498]	MOVE     	R4 R2 ; R4 := R2
	7	[5498]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[5498]	TEST     	R3 1 ; if R3 then PC := 33
	9	[5498]	JMP      	33 ; PC := 33
	10	[5499]	LOADK    	R3 K3 ; R3 := 0.300000
	11	[5500]	GETGLOBAL	R4 K4 ; R4 := 0x34291f5c
	12	[5500]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x1467d5f4]
	13	[5500]	CALL     	R4 1 2 ; R4 := R4()
	14	[5500]	TEST     	R4 0 ; if not R4 then PC := 22
	15	[5500]	JMP      	22 ; PC := 22
	16	[5501]	SELF     	R4 R2 K6 ; R5 := R2; R4 := R2[0x40e9c32b]
	17	[5501]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[5501]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0x0b3f5cb7]
	19	[5501]	LOADK    	R6 := 3.000000
	20	[5501]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	21	[5501]	MUL      	R3 K8 R4 ; R3 := 13.000000 * R4
	22	[5506]	SELF     	R4 R2 K6 ; R5 := R2; R4 := R2[0x40e9c32b]
	23	[5506]	CALL     	R4 2 2 ; R4 := R4(R5)
	24	[5506]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0x8bea8020]
	25	[5506]	CALL     	R4 2 2 ; R4 := R4(R5)
	26	[5506]	TEST     	R4 0 ; if not R4 then PC := 29
	27	[5506]	JMP      	29 ; PC := 29
	28	[5507]	UNM      	R1 R1 ; R1 := ^ R1
	29	[5510]	MUL      	R4 R0 R3 ; R4 := R0 * R3
	30	[5510]	MUL      	R5 R1 R3 ; R5 := R1 * R3
	31	[5510]	LOADK    	R6 := 0.000000
	32	[5510]	RETURN   	R4 4 ; return R4, R5, R6 
	33	[5512]	LOADK    	R4 := 0.000000
	34	[5512]	LOADK    	R5 := 0.000000
	35	[5512]	LOADK    	R6 := 0.000000
	36	[5512]	RETURN   	R4 4 ; return R4, R5, R6 
	37	[5513]	RETURN   	R0 1 ; return 

function #277 <?:5515,5535> (26 instructions, 104 bytes at 00000160C68328D0)
1 param, 7 slots, 1 upvalue, 0 locals, 8 constants, 1 function
	1	[5516]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5516]	MOVE     	R2 R0 ; R2 := R0
	3	[5516]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5516]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[5516]	JMP      	7 ; PC := 7
	6	[5517]	RETURN   	R0 1 ; return 
	7	[5520]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[5520]	CALL     	R1 1 2 ; R1 := R1()
	9	[5527]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	10	[5527]	SETTABLE 	R1 K1 R2 ; R1["ViewConsoleCallback"] := R2
	11	[5529]	GETGLOBAL	R2 K2 ; R2 := 0x34291f5c
	12	[5529]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x9ad21ae9]
	13	[5529]	CALL     	R2 1 2 ; R2 := R2()
	14	[5529]	TEST     	R2 0 ; if not R2 then PC := 22
	15	[5529]	JMP      	22 ; PC := 22
	16	[5530]	GETGLOBAL	R2 K4 ; R2 := 0x25d99d89
	17	[5531]	SELF     	R3 R2 K5 ; R4 := R2; R3 := R2[0x27af4576]
	18	[5531]	MOVE     	R5 R0 ; R5 := R0
	19	[5531]	LOADK    	R6 K1 ; R6 := "ViewConsoleCallback"
	20	[5531]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	21	[5531]	JMP      	26 ; PC := 26
	22	[5533]	GETGLOBAL	R3 K6 ; R3 := 0xe7f2b02f
	23	[5533]	SELF     	R3 R3 K7 ; R4 := R3; R3 := R3[0xe7696f24]
	24	[5533]	MOVE     	R5 R0 ; R5 := R0
	25	[5533]	CALL     	R3 3 1 ; R3(R4,R5)
	26	[5535]	RETURN   	R0 1 ; return 

function #278 <?:5537,5564> (96 instructions, 384 bytes at 00000160C6832C70)
0 params, 2 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[5538]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[5538]	GETTABLE 	R0 R0 K1 ; R0 := R0["ArsenalOpen"]
	3	[5538]	TEST     	R0 1 ; if R0 then PC := 11
	4	[5538]	JMP      	11 ; PC := 11
	5	[5538]	GETGLOBAL	R0 K0 ; R0 := _T
	6	[5538]	GETTABLE 	R0 R0 K2 ; R0 := R0["ArsenalUpgradeOpen"]
	7	[5538]	TEST     	R0 1 ; if R0 then PC := 11
	8	[5538]	JMP      	11 ; PC := 11
	9	[5538]	GETGLOBAL	R0 K0 ; R0 := _T
	10	[5538]	GETTABLE 	R0 R0 K3 ; R0 := R0["ModScreenOpen"]
	11	[5539]	GETGLOBAL	R1 K0 ; R1 := _T
	12	[5539]	GETTABLE 	R1 R1 K4 ; R1 := R1["AppearancePreviewOpen"]
	13	[5539]	TEST     	R1 0 ; if not R1 then PC := 18
	14	[5539]	JMP      	18 ; PC := 18
	15	[5540]	LOADK    	R1 := 8.000000
	16	[5540]	RETURN   	R1 2 ; return R1 
	17	[5540]	JMP      	96 ; PC := 96
	18	[5541]	TEST     	R0 0 ; if not R0 then PC := 23
	19	[5541]	JMP      	23 ; PC := 23
	20	[5542]	LOADK    	R1 := 4.000000
	21	[5542]	RETURN   	R1 2 ; return R1 
	22	[5542]	JMP      	96 ; PC := 96
	23	[5543]	GETGLOBAL	R1 K0 ; R1 := _T
	24	[5543]	GETTABLE 	R1 R1 K6 ; R1 := R1["PPSScreenOpen"]
	25	[5543]	TEST     	R1 1 ; if R1 then PC := 31
	26	[5543]	JMP      	31 ; PC := 31
	27	[5543]	GETGLOBAL	R1 K0 ; R1 := _T
	28	[5543]	GETTABLE 	R1 R1 K7 ; R1 := R1["ProfileMenuOpen"]
	29	[5543]	TEST     	R1 0 ; if not R1 then PC := 34
	30	[5543]	JMP      	34 ; PC := 34
	31	[5544]	LOADK    	R1 := 5.000000
	32	[5544]	RETURN   	R1 2 ; return R1 
	33	[5544]	JMP      	96 ; PC := 96
	34	[5545]	GETGLOBAL	R1 K0 ; R1 := _T
	35	[5545]	GETTABLE 	R1 R1 K8 ; R1 := R1["OperatorScreenOpen"]
	36	[5545]	TEST     	R1 0 ; if not R1 then PC := 41
	37	[5545]	JMP      	41 ; PC := 41
	38	[5546]	LOADK    	R1 := 10.000000
	39	[5546]	RETURN   	R1 2 ; return R1 
	40	[5546]	JMP      	96 ; PC := 96
	41	[5547]	GETGLOBAL	R1 K0 ; R1 := _T
	42	[5547]	GETTABLE 	R1 R1 K9 ; R1 := R1["DecoratingPlayerShip"]
	43	[5547]	TEST     	R1 1 ; if R1 then PC := 49
	44	[5547]	JMP      	49 ; PC := 49
	45	[5547]	GETGLOBAL	R1 K0 ; R1 := _T
	46	[5547]	GETTABLE 	R1 R1 K10 ; R1 := R1["CustomizingPlayerShip"]
	47	[5547]	TEST     	R1 0 ; if not R1 then PC := 52
	48	[5547]	JMP      	52 ; PC := 52
	49	[5548]	LOADK    	R1 := 11.000000
	50	[5548]	RETURN   	R1 2 ; return R1 
	51	[5548]	JMP      	96 ; PC := 96
	52	[5549]	GETGLOBAL	R1 K0 ; R1 := _T
	53	[5549]	GETTABLE 	R1 R1 K11 ; R1 := R1["CustomizingCrewship"]
	54	[5549]	TEST     	R1 0 ; if not R1 then PC := 59
	55	[5549]	JMP      	59 ; PC := 59
	56	[5550]	LOADK    	R1 := 12.000000
	57	[5550]	RETURN   	R1 2 ; return R1 
	58	[5550]	JMP      	96 ; PC := 96
	59	[5551]	GETGLOBAL	R1 K0 ; R1 := _T
	60	[5551]	GETTABLE 	R1 R1 K12 ; R1 := R1["UIStyleScreenOpen"]
	61	[5551]	TEST     	R1 0 ; if not R1 then PC := 66
	62	[5551]	JMP      	66 ; PC := 66
	63	[5552]	LOADK    	R1 := 13.000000
	64	[5552]	RETURN   	R1 2 ; return R1 
	65	[5552]	JMP      	96 ; PC := 96
	66	[5553]	GETGLOBAL	R1 K0 ; R1 := _T
	67	[5553]	GETTABLE 	R1 R1 K13 ; R1 := R1["HUDColorScreenOpen"]
	68	[5553]	TEST     	R1 0 ; if not R1 then PC := 73
	69	[5553]	JMP      	73 ; PC := 73
	70	[5554]	LOADK    	R1 := 14.000000
	71	[5554]	RETURN   	R1 2 ; return R1 
	72	[5554]	JMP      	96 ; PC := 96
	73	[5555]	GETGLOBAL	R1 K0 ; R1 := _T
	74	[5555]	GETTABLE 	R1 R1 K14 ; R1 := R1["ChatLinkOpen"]
	75	[5555]	TEST     	R1 0 ; if not R1 then PC := 80
	76	[5555]	JMP      	80 ; PC := 80
	77	[5556]	LOADK    	R1 := 15.000000
	78	[5556]	RETURN   	R1 2 ; return R1 
	79	[5556]	JMP      	96 ; PC := 96
	80	[5557]	GETGLOBAL	R1 K0 ; R1 := _T
	81	[5557]	GETTABLE 	R1 R1 K15 ; R1 := R1["InventoryScreenOpen"]
	82	[5557]	TEST     	R1 0 ; if not R1 then PC := 87
	83	[5557]	JMP      	87 ; PC := 87
	84	[5558]	LOADK    	R1 := 16.000000
	85	[5558]	RETURN   	R1 2 ; return R1 
	86	[5558]	JMP      	96 ; PC := 96
	87	[5559]	GETGLOBAL	R1 K0 ; R1 := _T
	88	[5559]	GETTABLE 	R1 R1 K16 ; R1 := R1["InStarChart"]
	89	[5559]	TEST     	R1 0 ; if not R1 then PC := 94
	90	[5559]	JMP      	94 ; PC := 94
	91	[5560]	LOADK    	R1 := 17.000000
	92	[5560]	RETURN   	R1 2 ; return R1 
	93	[5560]	JMP      	96 ; PC := 96
	94	[5562]	LOADK    	R1 := 0.000000
	95	[5562]	RETURN   	R1 2 ; return R1 
	96	[5564]	RETURN   	R0 1 ; return 

function #279 <?:5566,5569> (7 instructions, 28 bytes at 00000160C6833500)
2 params, 4 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[5567]	GETGLOBAL	R2 K0 ; R2 := 0x5bced4c4
	2	[5567]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x99675e23]
	3	[5567]	MUL      	R3 R0 R1 ; R3 := R0 * R1
	4	[5567]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[5568]	SUB      	R3 R0 R2 ; R3 := R0 - R2
	6	[5568]	RETURN   	R3 2 ; return R3 
	7	[5569]	RETURN   	R0 1 ; return 

function #280 <?:5571,5573> (6 instructions, 24 bytes at 00000160C6833620)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5572]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[5572]	MOVE     	R3 R0 ; R3 := R0
	3	[5572]	MOVE     	R4 R1 ; R4 := R1
	4	[5572]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	5	[5572]	RETURN   	R2 0 ; return R2,... 
	6	[5573]	RETURN   	R0 1 ; return 

function #281 <?:5576,5590> (22 instructions, 88 bytes at 00000160C6833710)
1 param, 5 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[5577]	LOADK    	R1 K0 ; R1 := "/Lotus/Language/Menu/Coupon_Generic"
	2	[5579]	EQ       	0 R0 K2 ; if R0 ~= 3.000000 then PC := 6
	3	[5579]	JMP      	6 ; PC := 6
	4	[5580]	LOADK    	R1 K3 ; R1 := "/Lotus/Language/Menu/Coupon_Warframe"
	5	[5580]	JMP      	17 ; PC := 17
	6	[5581]	EQ       	0 R0 K4 ; if R0 ~= 1.000000 then PC := 10
	7	[5581]	JMP      	10 ; PC := 10
	8	[5582]	LOADK    	R1 K5 ; R1 := "/Lotus/Language/Menu/Coupon_LongGun"
	9	[5582]	JMP      	17 ; PC := 17
	10	[5583]	EQ       	0 R0 K6 ; if R0 ~= 0.000000 then PC := 14
	11	[5583]	JMP      	14 ; PC := 14
	12	[5584]	LOADK    	R1 K7 ; R1 := "/Lotus/Language/Menu/Coupon_Pistol"
	13	[5584]	JMP      	17 ; PC := 17
	14	[5585]	EQ       	0 R0 K8 ; if R0 ~= 5.000000 then PC := 17
	15	[5585]	JMP      	17 ; PC := 17
	16	[5586]	LOADK    	R1 K9 ; R1 := "/Lotus/Language/Menu/Coupon_Melee"
	17	[5589]	GETGLOBAL	R2 K10 ; R2 := 0x603636ad
	18	[5589]	MOVE     	R3 R1 ; R3 := R1
	19	[5589]	OP_LOADBOOL	R4 0 0 ; R4 := false
	20	[5589]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	21	[5589]	RETURN   	R2 0 ; return R2,... 
	22	[5590]	RETURN   	R0 1 ; return 

function #282 <?:5592,5625> (90 instructions, 360 bytes at 00000160C6833AD0)
1 param, 12 slots, 0 upvalues, 0 locals, 24 constants, 0 functions
	1	[5593]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5593]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	3	[5593]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5593]	TEST     	R1 1 ; if R1 then PC := 16
	5	[5593]	JMP      	16 ; PC := 16
	6	[5593]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[5593]	MOVE     	R2 R0 ; R2 := R0
	8	[5593]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[5593]	TEST     	R1 1 ; if R1 then PC := 16
	10	[5593]	JMP      	16 ; PC := 16
	11	[5593]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	12	[5593]	GETTABLE 	R2 R0 K2 ; R2 := R0["StoreItem"]
	13	[5593]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[5593]	TEST     	R1 0 ; if not R1 then PC := 17
	15	[5593]	JMP      	17 ; PC := 17
	16	[5594]	RETURN   	R0 1 ; return 
	17	[5597]	NEWTABLE 	R1 0 1 ; R1 := {}
	18	[5597]	SETTABLE 	R1 K4 K5 ; R1["mAmount"] := 0.000000
	19	[5597]	SETTABLE 	R0 K3 R1 ; R0["Coupon"] := R1
	20	[5599]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	21	[5599]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x464542fe]
	22	[5599]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[5600]	LOADK    	R2 := 1.000000
	24	[5600]	LEN      	R3 R1 ; R3 := # R1
	25	[5600]	LOADK    	R4 := 1.000000
	26	[5600]	FORPREP  	R2 57 ; R2 -= R4; PC := 57
	27	[5601]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	28	[5602]	GETGLOBAL	R7 K7 ; R7 := 0x34291f5c
	29	[5602]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x397b920f]
	30	[5602]	GETTABLE 	R8 R6 K9 ; R8 := R6["mExpiryDate"]
	31	[5602]	CALL     	R7 2 2 ; R7 := R7(R8)
	32	[5604]	LT       	0 K5 R7 ; if 0.000000 >= R7 then PC := 57
	33	[5604]	JMP      	57 ; PC := 57
	34	[5604]	SELF     	R8 R6 K10 ; R9 := R6; R8 := R6[0x96df49a3]
	35	[5604]	GETTABLE 	R10 R0 K2 ; R10 := R0["StoreItem"]
	36	[5604]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	37	[5604]	TEST     	R8 0 ; if not R8 then PC := 57
	38	[5604]	JMP      	57 ; PC := 57
	39	[5604]	GETTABLE 	R8 R0 K2 ; R8 := R0["StoreItem"]
	40	[5604]	SELF     	R8 R8 K11 ; R9 := R8; R8 := R8[0x0f5a34d1]
	41	[5604]	CALL     	R8 2 2 ; R8 := R8(R9)
	42	[5604]	TEST     	R8 1 ; if R8 then PC := 57
	43	[5604]	JMP      	57 ; PC := 57
	44	[5605]	GETTABLE 	R8 R0 K3 ; R8 := R0["Coupon"]
	45	[5605]	GETTABLE 	R9 R6 K12 ; R9 := R6["mId"]
	46	[5605]	GETTABLE 	R9 R9 K12 ; R9 := R9["mId"]
	47	[5605]	SETTABLE 	R8 K12 R9 ; R8["mId"] := R9
	48	[5606]	GETTABLE 	R8 R0 K3 ; R8 := R0["Coupon"]
	49	[5606]	GETTABLE 	R9 R6 K4 ; R9 := R6["mAmount"]
	50	[5606]	DIV      	R9 R9 K13 ; R9 := R9 / 100.000000
	51	[5606]	SETTABLE 	R8 K4 R9 ; R8["mAmount"] := R9
	52	[5607]	GETTABLE 	R8 R0 K3 ; R8 := R0["Coupon"]
	53	[5607]	GETTABLE 	R9 R6 K9 ; R9 := R6["mExpiryDate"]
	54	[5607]	GETTABLE 	R9 R9 K15 ; R9 := R9["sec"]
	55	[5607]	SETTABLE 	R8 K14 R9 ; R8["mExpiry"] := R9
	56	[5608]	JMP      	58 ; PC := 58
	57	[5600]	FORLOOP  	R2 27 ; R2 += R4; if R2 <= R3 then begin PC := 27; R5 := R2 end
	58	[5613]	GETGLOBAL	R8 K7 ; R8 := 0x34291f5c
	59	[5613]	GETTABLE 	R8 R8 K16 ; R8 := R8[0xbcd06415]
	60	[5613]	CALL     	R8 1 2 ; R8 := R8()
	61	[5613]	TEST     	R8 0 ; if not R8 then PC := 90
	62	[5613]	JMP      	90 ; PC := 90
	63	[5613]	GETTABLE 	R8 R0 K2 ; R8 := R0["StoreItem"]
	64	[5613]	SELF     	R8 R8 K17 ; R9 := R8; R8 := R8[0xdaefcda4]
	65	[5613]	CALL     	R8 2 2 ; R8 := R8(R9)
	66	[5613]	EQ       	0 R8 K18 ; if R8 ~= 4.000000 then PC := 90
	67	[5613]	JMP      	90 ; PC := 90
	68	[5614]	GETGLOBAL	R8 K1 ; R8 := 0x25d99d89
	69	[5614]	SELF     	R8 R8 K19 ; R9 := R8; R8 := R8[0x104b2223]
	70	[5614]	CALL     	R8 2 2 ; R8 := R8(R9)
	71	[5615]	TEST     	R8 0 ; if not R8 then PC := 90
	72	[5615]	JMP      	90 ; PC := 90
	73	[5616]	GETGLOBAL	R9 K7 ; R9 := 0x34291f5c
	74	[5616]	GETTABLE 	R9 R9 K8 ; R9 := R9[0x397b920f]
	75	[5616]	GETTABLE 	R10 R8 K14 ; R10 := R8["mExpiry"]
	76	[5616]	CALL     	R9 2 2 ; R9 := R9(R10)
	77	[5617]	LT       	0 K5 R9 ; if 0.000000 >= R9 then PC := 90
	78	[5617]	JMP      	90 ; PC := 90
	79	[5618]	GETTABLE 	R10 R0 K3 ; R10 := R0["Coupon"]
	80	[5618]	SETTABLE 	R10 K12 K20 ; R10["mId"] := nil
	81	[5619]	GETTABLE 	R10 R0 K3 ; R10 := R0["Coupon"]
	82	[5619]	GETTABLE 	R11 R8 K21 ; R11 := R8["mDiscount"]
	83	[5619]	DIV      	R11 R11 K13 ; R11 := R11 / 100.000000
	84	[5619]	SETTABLE 	R10 K4 R11 ; R10["mAmount"] := R11
	85	[5620]	GETTABLE 	R10 R0 K3 ; R10 := R0["Coupon"]
	86	[5620]	GETTABLE 	R11 R8 K14 ; R11 := R8["mExpiry"]
	87	[5620]	GETTABLE 	R11 R11 K15 ; R11 := R11["sec"]
	88	[5620]	SETTABLE 	R10 K14 R11 ; R10["mExpiry"] := R11
	89	[5621]	SETTABLE 	R0 K22 K23 ; R0["IsExternalPlat"] := true
	90	[5625]	RETURN   	R0 1 ; return 

function #283 <?:5627,5629> (5 instructions, 20 bytes at 00000160C68340B0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5628]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5628]	MOVE     	R2 R0 ; R2 := R0
	3	[5628]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[5628]	RETURN   	R1 0 ; return R1,... 
	5	[5629]	RETURN   	R0 1 ; return 

function #284 <?:5631,5690> (122 instructions, 488 bytes at 00000160C68341A0)
3 params, 32 slots, 1 upvalue, 0 locals, 24 constants, 0 functions
	1	[5632]	NEWTABLE 	R3 0 0 ; R3 := {}
	2	[5633]	OP_LOADBOOL	R4 0 0 ; R4 := false
	3	[5635]	LOADNIL  	R5 R5 ; R5 := nil
	4	[5636]	GETGLOBAL	R6 K0 ; R6 := 0x25d99d89
	5	[5637]	GETGLOBAL	R7 K1 ; R7 := 0x7b998233
	6	[5637]	MOVE     	R8 R6 ; R8 := R6
	7	[5637]	CALL     	R7 2 2 ; R7 := R7(R8)
	8	[5637]	TEST     	R7 1 ; if R7 then PC := 24
	9	[5637]	JMP      	24 ; PC := 24
	10	[5638]	SELF     	R7 R6 K2 ; R8 := R6; R7 := R6[0x25a6e75e]
	11	[5638]	CALL     	R7 2 2 ; R7 := R7(R8)
	12	[5638]	SELF     	R7 R7 K3 ; R8 := R7; R7 := R7[0xd8dfa041]
	13	[5638]	CALL     	R7 2 2 ; R7 := R7(R8)
	14	[5638]	MOVE     	R5 R7 ; R5 := R7
	15	[5640]	LOADK    	R7 := 1.000000
	16	[5640]	LEN      	R8 R5 ; R8 := # R5
	17	[5640]	LOADK    	R9 := 1.000000
	18	[5640]	FORPREP  	R7 23 ; R7 -= R9; PC := 23
	19	[5641]	GETUPVAL 	R11 U0 ; R11 := U0
	20	[5641]	EQ       	0 R5 R11 ; if R5 ~= R11 then PC := 23
	21	[5641]	JMP      	23 ; PC := 23
	22	[5642]	OP_LOADBOOL	R4 1 0 ; R4 := true
	23	[5640]	FORLOOP  	R7 19 ; R7 += R9; if R7 <= R8 then begin PC := 19; R10 := R7 end
	24	[5647]	NEWTABLE 	R11 0 0 ; R11 := {}
	25	[5648]	GETGLOBAL	R12 K4 ; R12 := 0x7ed0a956
	26	[5648]	LOADK    	R13 K5 ; R13 := "/Lotus/StoreItems/Types/StoreItems/SuitCustomizations/ColourPickerAccessibilityItemA"
	27	[5648]	CALL     	R12 2 0 ; R12,... := R12(R13)
	28	[5649]	SETLIST  	R11 0 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 0
	29	[5651]	GETGLOBAL	R12 K1 ; R12 := 0x7b998233
	30	[5651]	MOVE     	R13 R0 ; R13 := R0
	31	[5651]	CALL     	R12 2 2 ; R12 := R12(R13)
	32	[5651]	TEST     	R12 1 ; if R12 then PC := 119
	33	[5651]	JMP      	119 ; PC := 119
	34	[5652]	SELF     	R12 R0 K6 ; R13 := R0; R12 := R0[0xe9cbffa8]
	35	[5652]	GETGLOBAL	R14 K7 ; R14 := gColorPickerItemType
	36	[5652]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	37	[5654]	GETGLOBAL	R13 K8 ; R13 := 0xc8802016
	38	[5654]	MOVE     	R14 R12 ; R14 := R12
	39	[5654]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	40	[5654]	JMP      	117 ; PC := 117
	41	[5655]	GETGLOBAL	R18 K9 ; R18 := 0xce225efa
	42	[5655]	LOADK    	R19 := 0.000000
	43	[5655]	CALL     	R18 2 1 ; R18(R19)
	44	[5656]	GETGLOBAL	R18 K1 ; R18 := 0x7b998233
	45	[5656]	MOVE     	R19 R17 ; R19 := R17
	46	[5656]	CALL     	R18 2 2 ; R18 := R18(R19)
	47	[5656]	TEST     	R18 1 ; if R18 then PC := 117
	48	[5656]	JMP      	117 ; PC := 117
	49	[5657]	SELF     	R18 R17 K10 ; R19 := R17; R18 := R17[0xf278f8a1]
	50	[5657]	CALL     	R18 2 2 ; R18 := R18(R19)
	51	[5659]	GETGLOBAL	R19 K1 ; R19 := 0x7b998233
	52	[5659]	MOVE     	R20 R18 ; R20 := R18
	53	[5659]	CALL     	R19 2 2 ; R19 := R19(R20)
	54	[5659]	TEST     	R19 1 ; if R19 then PC := 117
	55	[5659]	JMP      	117 ; PC := 117
	56	[5659]	SELF     	R19 R17 K11 ; R20 := R17; R19 := R17[0xfe9eb1a5]
	57	[5659]	CALL     	R19 2 2 ; R19 := R19(R20)
	58	[5659]	EQ       	0 R19 K13 ; if R19 ~= 10.000000 then PC := 117
	59	[5659]	JMP      	117 ; PC := 117
	60	[5660]	SELF     	R19 R17 K14 ; R20 := R17; R19 := R17[0x31e559d2]
	61	[5660]	CALL     	R19 2 2 ; R19 := R19(R20)
	62	[5662]	GETGLOBAL	R20 K1 ; R20 := 0x7b998233
	63	[5662]	MOVE     	R21 R5 ; R21 := R5
	64	[5662]	CALL     	R20 2 2 ; R20 := R20(R21)
	65	[5662]	TEST     	R20 1 ; if R20 then PC := 78
	66	[5662]	JMP      	78 ; PC := 78
	67	[5663]	LOADK    	R20 := 1.000000
	68	[5663]	LEN      	R21 R5 ; R21 := # R5
	69	[5663]	LOADK    	R22 := 1.000000
	70	[5663]	FORPREP  	R20 77 ; R20 -= R22; PC := 77
	71	[5664]	GETTABLE 	R24 R5 R23 ; R24 := R5[R23]
	72	[5664]	GETTABLE 	R24 R24 K15 ; R24 := R24["mItemType"]
	73	[5664]	EQ       	0 R24 R18 ; if R24 ~= R18 then PC := 77
	74	[5664]	JMP      	77 ; PC := 77
	75	[5665]	OP_LOADBOOL	R19 1 0 ; R19 := true
	76	[5666]	JMP      	78 ; PC := 78
	77	[5663]	FORLOOP  	R20 71 ; R20 += R22; if R20 <= R21 then begin PC := 71; R23 := R20 end
	78	[5671]	TEST     	R19 1 ; if R19 then PC := 88
	79	[5671]	JMP      	88 ; PC := 88
	80	[5671]	SELF     	R24 R17 K16 ; R25 := R17; R24 := R17[0xc055cef8]
	81	[5671]	CALL     	R24 2 2 ; R24 := R24(R25)
	82	[5671]	TEST     	R24 1 ; if R24 then PC := 86
	83	[5671]	JMP      	86 ; PC := 86
	84	[5671]	TEST     	R2 0 ; if not R2 then PC := 117
	85	[5671]	JMP      	117 ; PC := 117
	86	[5671]	TEST     	R1 1 ; if R1 then PC := 117
	87	[5671]	JMP      	117 ; PC := 117
	88	[5672]	OP_LOADBOOL	R24 0 0 ; R24 := false
	89	[5673]	GETGLOBAL	R25 K17 ; R25 := _T
	90	[5673]	GETTABLE 	R25 R25 K18 ; R25 := R25["AccessibilityColorsAvailable"]
	91	[5673]	TEST     	R25 1 ; if R25 then PC := 104
	92	[5673]	JMP      	104 ; PC := 104
	93	[5674]	LOADK    	R25 := 1.000000
	94	[5674]	LEN      	R26 R11 ; R26 := # R11
	95	[5674]	LOADK    	R27 := 1.000000
	96	[5674]	FORPREP  	R25 103 ; R25 -= R27; PC := 103
	97	[5675]	SELF     	R29 R17 K19 ; R30 := R17; R29 := R17[0xf2deaf69]
	98	[5675]	GETTABLE 	R31 R11 R28 ; R31 := R11[R28]
	99	[5675]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	100	[5675]	TEST     	R29 0 ; if not R29 then PC := 103
	101	[5675]	JMP      	103 ; PC := 103
	102	[5676]	OP_LOADBOOL	R24 1 0 ; R24 := true
	103	[5674]	FORLOOP  	R25 97 ; R25 += R27; if R25 <= R26 then begin PC := 97; R28 := R25 end
	104	[5680]	GETGLOBAL	R29 K17 ; R29 := _T
	105	[5680]	GETTABLE 	R29 R29 K18 ; R29 := R29["AccessibilityColorsAvailable"]
	106	[5680]	TEST     	R29 1 ; if R29 then PC := 110
	107	[5680]	JMP      	110 ; PC := 110
	108	[5680]	TEST     	R24 1 ; if R24 then PC := 117
	109	[5680]	JMP      	117 ; PC := 117
	110	[5681]	GETGLOBAL	R29 K20 ; R29 := 0x33bdd652
	111	[5681]	GETTABLE 	R29 R29 K21 ; R29 := R29[0x23d5322f]
	112	[5681]	MOVE     	R30 R3 ; R30 := R3
	113	[5681]	NEWTABLE 	R31 0 2 ; R31 := {}
	114	[5681]	SETTABLE 	R31 K22 R17 ; R31["mStoreItem"] := R17
	115	[5681]	SETTABLE 	R31 K23 R19 ; R31["mOwned"] := R19
	116	[5681]	CALL     	R29 3 1 ; R29(R30,R31)
	117	[5654]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 41; R15 := R16 end
	118	[5685]	JMP      	41 ; PC := 41
	119	[5689]	MOVE     	R29 R3 ; R29 := R3
	120	[5689]	MOVE     	R30 R4 ; R30 := R4
	121	[5689]	RETURN   	R29 3 ; return R29, R30 
	122	[5690]	RETURN   	R0 1 ; return 

function #285 <?:5692,5694> (7 instructions, 28 bytes at 00000160C68348E0)
3 params, 7 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5693]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[5693]	MOVE     	R4 R0 ; R4 := R0
	3	[5693]	MOVE     	R5 R1 ; R5 := R1
	4	[5693]	MOVE     	R6 R2 ; R6 := R2
	5	[5693]	TAILCALL 	R3 4 0 ; R3,... := R3(R4,R5,R6)
	6	[5693]	RETURN   	R3 0 ; return R3,... 
	7	[5694]	RETURN   	R0 1 ; return 

function #286 <?:5696,5737> (58 instructions, 232 bytes at 00000160C68349D0)
2 params, 17 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[5697]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[5697]	MOVE     	R3 R1 ; R3 := R1
	3	[5697]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[5697]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[5697]	JMP      	7 ; PC := 7
	6	[5698]	RETURN   	R0 1 ; return 
	7	[5701]	NEWTABLE 	R2 0 0 ; R2 := {}
	8	[5703]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[5703]	MOVE     	R4 R0 ; R4 := R0
	10	[5703]	OP_LOADBOOL	R5 1 0 ; R5 := true
	11	[5703]	CALL     	R3 3 3 ; R3,R4 := R3(R4,R5)
	12	[5706]	LEN      	R5 R3 ; R5 := # R3
	13	[5707]	TEST     	R4 1 ; if R4 then PC := 16
	14	[5707]	JMP      	16 ; PC := 16
	15	[5708]	ADD      	R5 R5 K1 ; R5 := R5 + 1.000000
	16	[5711]	GETGLOBAL	R6 K2 ; R6 := 0x55730e1a
	17	[5711]	LOADK    	R7 := 1.000000
	18	[5711]	MOVE     	R8 R5 ; R8 := R5
	19	[5711]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	20	[5713]	LOADNIL  	R7 R7 ; R7 := nil
	21	[5714]	LEN      	R8 R3 ; R8 := # R3
	22	[5714]	LE       	0 R6 R8 ; if R6 > R8 then PC := 35
	23	[5714]	JMP      	35 ; PC := 35
	24	[5715]	GETGLOBAL	R8 K3 ; R8 := 0xb009bbc6
	25	[5715]	GETTABLE 	R9 R3 R6 ; R9 := R3[R6]
	26	[5715]	GETTABLE 	R9 R9 K4 ; R9 := R9["mStoreItem"]
	27	[5715]	SELF     	R9 R9 K5 ; R10 := R9; R9 := R9[0xf278f8a1]
	28	[5715]	CALL     	R9 2 0 ; R9,... := R9(R10)
	29	[5715]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	30	[5716]	SELF     	R9 R8 K6 ; R10 := R8; R9 := R8[0x31522360]
	31	[5716]	CALL     	R9 2 2 ; R9 := R9(R10)
	32	[5716]	MOVE     	R2 R9 ; R2 := R9
	33	[5717]	GETTABLE 	R9 R3 R6 ; R9 := R3[R6]
	34	[5717]	GETTABLE 	R7 R9 K4 ; R7 := R9["mStoreItem"]
	35	[5723]	EQ       	0 R2 K7 ; if R2 ~= nil then PC := 39
	36	[5723]	JMP      	39 ; PC := 39
	37	[5724]	NEWTABLE 	R9 0 0 ; R9 := {}
	38	[5724]	MOVE     	R2 R9 ; R2 := R9
	39	[5728]	LEN      	R9 R2 ; R9 := # R2
	40	[5728]	EQ       	0 R9 K8 ; if R9 ~= 0.000000 then PC := 55
	41	[5728]	JMP      	55 ; PC := 55
	42	[5729]	SELF     	R9 R1 K6 ; R10 := R1; R9 := R1[0x31522360]
	43	[5729]	CALL     	R9 2 2 ; R9 := R9(R10)
	44	[5730]	LOADK    	R10 := 3.000000
	45	[5730]	LEN      	R11 R9 ; R11 := # R9
	46	[5730]	LOADK    	R12 := 5.000000
	47	[5730]	FORPREP  	R10 53 ; R10 -= R12; PC := 53
	48	[5731]	GETGLOBAL	R14 K9 ; R14 := 0x33bdd652
	49	[5731]	GETTABLE 	R14 R14 K10 ; R14 := R14[0x23d5322f]
	50	[5731]	MOVE     	R15 R2 ; R15 := R2
	51	[5731]	GETTABLE 	R16 R9 R13 ; R16 := R9[R13]
	52	[5731]	CALL     	R14 3 1 ; R14(R15,R16)
	53	[5730]	FORLOOP  	R10 48 ; R10 += R12; if R10 <= R11 then begin PC := 48; R13 := R10 end
	54	[5733]	LOADNIL  	R7 R7 ; R7 := nil
	55	[5736]	MOVE     	R14 R2 ; R14 := R2
	56	[5736]	MOVE     	R15 R7 ; R15 := R7
	57	[5736]	RETURN   	R14 3 ; return R14, R15 
	58	[5737]	RETURN   	R0 1 ; return 

function #287 <?:5739,5747> (24 instructions, 96 bytes at 00000160C6834D20)
1 param, 6 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[5740]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5740]	MOVE     	R2 R0 ; R2 := R0
	3	[5740]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5741]	LOADK    	R2 := 0.000000
	5	[5742]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	6	[5742]	GETGLOBAL	R4 K1 ; R4 := 0x25d99d89
	7	[5742]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[5742]	TEST     	R3 1 ; if R3 then PC := 17
	9	[5742]	JMP      	17 ; PC := 17
	10	[5743]	GETGLOBAL	R3 K1 ; R3 := 0x25d99d89
	11	[5743]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x25a6e75e]
	12	[5743]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[5743]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0xa64e07df]
	14	[5743]	LOADK    	R5 := 5.000000
	15	[5743]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	16	[5743]	MOVE     	R2 R3 ; R2 := R3
	17	[5746]	GETGLOBAL	R3 K5 ; R3 := 0x5bced4c4
	18	[5746]	GETTABLE 	R3 R3 K6 ; R3 := R3[0xac1b386a]
	19	[5746]	ADD      	R4 R1 K7 ; R4 := R1 + 1.000000
	20	[5746]	ADD      	R4 R4 R2 ; R4 := R4 + R2
	21	[5746]	GETGLOBAL	R5 K8 ; R5 := MAX_PVP_LOADOUTS
	22	[5746]	TAILCALL 	R3 3 0 ; R3,... := R3(R4,R5)
	23	[5746]	RETURN   	R3 0 ; return R3,... 
	24	[5747]	RETURN   	R0 1 ; return 

function #288 <?:5749,5751> (5 instructions, 20 bytes at 00000160C6834F30)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5750]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5750]	MOVE     	R2 R0 ; R2 := R0
	3	[5750]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[5750]	RETURN   	R1 0 ; return R1,... 
	5	[5751]	RETURN   	R0 1 ; return 

function #289 <?:5753,5771> (31 instructions, 124 bytes at 00000160C6835020)
2 params, 11 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[5754]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0xed4e0128]
	2	[5754]	CALL     	R2 2 2 ; R2 := R2(R3)
	3	[5755]	LOADK    	R3 := 0.000000
	4	[5756]	GETUPVAL 	R4 U0 ; R4 := U0
	5	[5756]	MOVE     	R5 R1 ; R5 := R1
	6	[5756]	MOVE     	R6 R2 ; R6 := R2
	7	[5756]	GETUPVAL 	R7 U1 ; R7 := U1
	8	[5756]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	9	[5757]	TEST     	R4 0 ; if not R4 then PC := 30
	10	[5757]	JMP      	30 ; PC := 30
	11	[5758]	GETTABLE 	R5 R4 K1 ; R5 := R4[1.000000]
	12	[5758]	GETTABLE 	R6 R4 K2 ; R6 := R4[2.000000]
	13	[5758]	LOADK    	R7 := 1.000000
	14	[5758]	FORPREP  	R5 29 ; R5 -= R7; PC := 29
	15	[5759]	GETTABLE 	R9 R1 R8 ; R9 := R1[R8]
	16	[5759]	GETTABLE 	R9 R9 K3 ; R9 := R9["count"]
	17	[5759]	TEST     	R9 0 ; if not R9 then PC := 23
	18	[5759]	JMP      	23 ; PC := 23
	19	[5760]	GETTABLE 	R9 R1 R8 ; R9 := R1[R8]
	20	[5760]	GETTABLE 	R9 R9 K3 ; R9 := R9["count"]
	21	[5760]	ADD      	R3 R3 R9 ; R3 := R3 + R9
	22	[5760]	JMP      	24 ; PC := 24
	23	[5762]	ADD      	R3 R3 K1 ; R3 := R3 + 1.000000
	24	[5764]	GETTABLE 	R9 R4 K1 ; R9 := R4[1.000000]
	25	[5764]	GETTABLE 	R10 R4 K2 ; R10 := R4[2.000000]
	26	[5764]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 29
	27	[5764]	JMP      	29 ; PC := 29
	28	[5765]	JMP      	30 ; PC := 30
	29	[5758]	FORLOOP  	R5 15 ; R5 += R7; if R5 <= R6 then begin PC := 15; R8 := R5 end
	30	[5770]	RETURN   	R3 2 ; return R3 
	31	[5771]	RETURN   	R0 1 ; return 

function #290 <?:5773,5897> (312 instructions, 1248 bytes at 00000160C6835250)
4 params, 48 slots, 9 upvalues, 0 locals, 43 constants, 0 functions
	1	[5774]	LOADK    	R4 := 0.000000
	2	[5775]	SELF     	R5 R2 K0 ; R6 := R2; R5 := R2[0xfe9eb1a5]
	3	[5775]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[5776]	SELF     	R6 R2 K1 ; R7 := R2; R6 := R2[0x9dbbea0a]
	5	[5776]	CALL     	R6 2 2 ; R6 := R6(R7)
	6	[5777]	SELF     	R7 R2 K2 ; R8 := R2; R7 := R2[0xf2deaf69]
	7	[5777]	GETGLOBAL	R9 K3 ; R9 := gRecipeStoreItemType
	8	[5777]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	9	[5778]	SELF     	R8 R2 K4 ; R9 := R2; R8 := R2[0xf278f8a1]
	10	[5778]	CALL     	R8 2 2 ; R8 := R8(R9)
	11	[5780]	TEST     	R6 0 ; if not R6 then PC := 136
	12	[5780]	JMP      	136 ; PC := 136
	13	[5781]	OP_LOADBOOL	R9 0 0 ; R9 := false
	14	[5782]	OP_LOADBOOL	R10 0 0 ; R10 := false
	15	[5783]	SELF     	R11 R2 K5 ; R12 := R2; R11 := R2[0x7b060e36]
	16	[5783]	CALL     	R11 2 2 ; R11 := R11(R12)
	17	[5784]	LOADK    	R12 := 0.000000
	18	[5785]	LOADK    	R13 := 0.000000
	19	[5787]	LOADK    	R14 := 1.000000
	20	[5787]	LEN      	R15 R11 ; R15 := # R11
	21	[5787]	LOADK    	R16 := 1.000000
	22	[5787]	FORPREP  	R14 60 ; R14 -= R16; PC := 60
	23	[5788]	GETTABLE 	R18 R11 R17 ; R18 := R11[R17]
	24	[5788]	GETTABLE 	R18 R18 K6 ; R18 := R18["mTypeName"]
	25	[5789]	GETGLOBAL	R19 K7 ; R19 := 0x7b998233
	26	[5789]	MOVE     	R20 R18 ; R20 := R18
	27	[5789]	CALL     	R19 2 2 ; R19 := R19(R20)
	28	[5789]	TEST     	R19 1 ; if R19 then PC := 60
	29	[5789]	JMP      	60 ; PC := 60
	30	[5790]	GETUPVAL 	R19 U0 ; R19 := U0
	31	[5790]	SELF     	R20 R18 K0 ; R21 := R18; R20 := R18[0xfe9eb1a5]
	32	[5790]	CALL     	R20 2 0 ; R20,... := R20(R21)
	33	[5790]	CALL     	R19 0 2 ; R19 := R19(R20,...)
	34	[5790]	TEST     	R19 0 ; if not R19 then PC := 45
	35	[5790]	JMP      	45 ; PC := 45
	36	[5791]	OP_LOADBOOL	R9 1 0 ; R9 := true
	37	[5792]	GETUPVAL 	R19 U1 ; R19 := U1
	38	[5792]	MOVE     	R20 R18 ; R20 := R18
	39	[5792]	MOVE     	R21 R3 ; R21 := R3
	40	[5792]	OP_LOADBOOL	R22 1 0 ; R22 := true
	41	[5792]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	42	[5792]	TEST     	R19 0 ; if not R19 then PC := 45
	43	[5792]	JMP      	45 ; PC := 45
	44	[5793]	OP_LOADBOOL	R10 1 0 ; R10 := true
	45	[5796]	GETUPVAL 	R19 U2 ; R19 := U2
	46	[5796]	MOVE     	R20 R18 ; R20 := R18
	47	[5796]	CALL     	R19 2 2 ; R19 := R19(R20)
	48	[5796]	TEST     	R19 1 ; if R19 then PC := 60
	49	[5796]	JMP      	60 ; PC := 60
	50	[5797]	ADD      	R12 R12 K8 ; R12 := R12 + 1.000000
	51	[5798]	GETUPVAL 	R19 U3 ; R19 := U3
	52	[5798]	MOVE     	R20 R3 ; R20 := R3
	53	[5798]	SELF     	R21 R18 K9 ; R22 := R18; R21 := R18[0x170c5cfa]
	54	[5798]	CALL     	R21 2 2 ; R21 := R21(R22)
	55	[5798]	GETUPVAL 	R22 U4 ; R22 := U4
	56	[5798]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	57	[5798]	TEST     	R19 0 ; if not R19 then PC := 60
	58	[5798]	JMP      	60 ; PC := 60
	59	[5799]	ADD      	R13 R13 K8 ; R13 := R13 + 1.000000
	60	[5787]	FORLOOP  	R14 23 ; R14 += R16; if R14 <= R15 then begin PC := 23; R17 := R14 end
	61	[5805]	GETGLOBAL	R19 K10 ; R19 := 0x34291f5c
	62	[5805]	GETTABLE 	R19 R19 K11 ; R19 := R19[0x056bfe8b]
	63	[5805]	CALL     	R19 1 2 ; R19 := R19()
	64	[5805]	TEST     	R19 0 ; if not R19 then PC := 79
	65	[5805]	JMP      	79 ; PC := 79
	66	[5805]	SELF     	R19 R2 K12 ; R20 := R2; R19 := R2[0x19865272]
	67	[5805]	CALL     	R19 2 2 ; R19 := R19(R20)
	68	[5805]	EQ       	1 R19 K13 ; if R19 == "" then PC := 79
	69	[5805]	JMP      	79 ; PC := 79
	70	[5805]	GETGLOBAL	R19 K14 ; R19 := 0x25d99d89
	71	[5805]	SELF     	R19 R19 K15 ; R20 := R19; R19 := R19[0x35122015]
	72	[5805]	SELF     	R21 R2 K12 ; R22 := R2; R21 := R2[0x19865272]
	73	[5805]	CALL     	R21 2 0 ; R21,... := R21(R22)
	74	[5805]	CALL     	R19 0 2 ; R19 := R19(R20,...)
	75	[5805]	TEST     	R19 1 ; if R19 then PC := 79
	76	[5805]	JMP      	79 ; PC := 79
	77	[5806]	LOADK    	R4 := 0.000000
	78	[5806]	JMP      	102 ; PC := 102
	79	[5807]	TEST     	R9 0 ; if not R9 then PC := 83
	80	[5807]	JMP      	83 ; PC := 83
	81	[5807]	TEST     	R10 0 ; if not R10 then PC := 87
	82	[5807]	JMP      	87 ; PC := 87
	83	[5807]	LT       	0 K16 R12 ; if 0.000000 >= R12 then PC := 89
	84	[5807]	JMP      	89 ; PC := 89
	85	[5807]	EQ       	0 R13 R12 ; if R13 ~= R12 then PC := 89
	86	[5807]	JMP      	89 ; PC := 89
	87	[5808]	LOADK    	R4 := 1.000000
	88	[5808]	JMP      	102 ; PC := 102
	89	[5809]	GETUPVAL 	R19 U5 ; R19 := U5
	90	[5809]	TEST     	R19 0 ; if not R19 then PC := 102
	91	[5809]	JMP      	102 ; PC := 102
	92	[5810]	GETUPVAL 	R19 U6 ; R19 := U6
	93	[5810]	MOVE     	R20 R2 ; R20 := R2
	94	[5810]	LOADNIL  	R21 R22 ; R21 := R22 := nil
	95	[5810]	MOVE     	R23 R3 ; R23 := R3
	96	[5810]	CALL     	R19 5 3 ; R19,R20 := R19(R20,R21,R22,R23)
	97	[5811]	EQ       	0 R19 K16 ; if R19 ~= 0.000000 then PC := 102
	98	[5811]	JMP      	102 ; PC := 102
	99	[5811]	EQ       	0 R20 K16 ; if R20 ~= 0.000000 then PC := 102
	100	[5811]	JMP      	102 ; PC := 102
	101	[5812]	LOADK    	R4 := 1.000000
	102	[5816]	GETGLOBAL	R21 K10 ; R21 := 0x34291f5c
	103	[5816]	GETTABLE 	R21 R21 K17 ; R21 := R21[0x49d4c6fc]
	104	[5816]	CALL     	R21 1 2 ; R21 := R21()
	105	[5816]	TEST     	R21 0 ; if not R21 then PC := 230
	106	[5816]	JMP      	230 ; PC := 230
	107	[5816]	GETGLOBAL	R21 K18 ; R21 := 0x76ea806b
	108	[5816]	SELF     	R21 R21 K19 ; R22 := R21; R21 := R21[0x3f3ae64c]
	109	[5816]	LOADK    	R23 := 0.000000
	110	[5816]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	111	[5816]	SELF     	R21 R21 K20 ; R22 := R21; R21 := R21[0xfe6131c3]
	112	[5816]	LOADK    	R23 K21 ; R23 := "steam_market"
	113	[5816]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	114	[5816]	TEST     	R21 0 ; if not R21 then PC := 230
	115	[5816]	JMP      	230 ; PC := 230
	116	[5816]	SELF     	R21 R2 K22 ; R22 := R2; R21 := R2[0x1760dc5a]
	117	[5816]	CALL     	R21 2 2 ; R21 := R21(R22)
	118	[5816]	EQ       	1 R21 K13 ; if R21 == "" then PC := 230
	119	[5816]	JMP      	230 ; PC := 230
	120	[5817]	GETGLOBAL	R21 K14 ; R21 := 0x25d99d89
	121	[5817]	SELF     	R21 R21 K23 ; R22 := R21; R21 := R21[0x1b162595]
	122	[5817]	CALL     	R21 2 2 ; R21 := R21(R22)
	123	[5818]	LOADK    	R22 := 1.000000
	124	[5818]	LEN      	R23 R21 ; R23 := # R21
	125	[5818]	LOADK    	R24 := 1.000000
	126	[5818]	FORPREP  	R22 134 ; R22 -= R24; PC := 134
	127	[5819]	GETTABLE 	R26 R21 R25 ; R26 := R21[R25]
	128	[5819]	SELF     	R27 R2 K22 ; R28 := R2; R27 := R2[0x1760dc5a]
	129	[5819]	CALL     	R27 2 2 ; R27 := R27(R28)
	130	[5819]	EQ       	0 R26 R27 ; if R26 ~= R27 then PC := 134
	131	[5819]	JMP      	134 ; PC := 134
	132	[5820]	LOADK    	R4 := 1.000000
	133	[5821]	JMP      	230 ; PC := 230
	134	[5818]	FORLOOP  	R22 127 ; R22 += R24; if R22 <= R23 then begin PC := 127; R25 := R22 end
	135	[5824]	JMP      	230 ; PC := 230
	136	[5826]	GETGLOBAL	R26 K24 ; R26 := 0xce225efa
	137	[5826]	CALL     	R26 1 1 ; R26()
	138	[5827]	SELF     	R26 R2 K9 ; R27 := R2; R26 := R2[0x170c5cfa]
	139	[5827]	CALL     	R26 2 2 ; R26 := R26(R27)
	140	[5828]	GETGLOBAL	R27 K7 ; R27 := 0x7b998233
	141	[5828]	MOVE     	R28 R8 ; R28 := R8
	142	[5828]	CALL     	R27 2 2 ; R27 := R27(R28)
	143	[5828]	TEST     	R27 1 ; if R27 then PC := 195
	144	[5828]	JMP      	195 ; PC := 195
	145	[5828]	SELF     	R27 R8 K2 ; R28 := R8; R27 := R8[0xf2deaf69]
	146	[5828]	GETGLOBAL	R29 K25 ; R29 := gVoidProjectionItemType
	147	[5828]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	148	[5828]	TEST     	R27 0 ; if not R27 then PC := 195
	149	[5828]	JMP      	195 ; PC := 195
	150	[5830]	MOVE     	R27 R26 ; R27 := R26
	151	[5831]	GETGLOBAL	R28 K26 ; R28 := 0x7f5022cf
	152	[5831]	GETTABLE 	R28 R28 K27 ; R28 := R28[0x66edf04f]
	153	[5831]	MOVE     	R29 R27 ; R29 := R27
	154	[5831]	LOADK    	R30 K28 ; R30 := "Bronze"
	155	[5831]	LOADK    	R31 K13 ; R31 := ""
	156	[5831]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	157	[5831]	MOVE     	R27 R28 ; R27 := R28
	158	[5832]	GETGLOBAL	R28 K26 ; R28 := 0x7f5022cf
	159	[5832]	GETTABLE 	R28 R28 K27 ; R28 := R28[0x66edf04f]
	160	[5832]	MOVE     	R29 R27 ; R29 := R27
	161	[5832]	LOADK    	R30 K29 ; R30 := "Silver"
	162	[5832]	LOADK    	R31 K13 ; R31 := ""
	163	[5832]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	164	[5832]	MOVE     	R27 R28 ; R27 := R28
	165	[5833]	GETGLOBAL	R28 K26 ; R28 := 0x7f5022cf
	166	[5833]	GETTABLE 	R28 R28 K27 ; R28 := R28[0x66edf04f]
	167	[5833]	MOVE     	R29 R27 ; R29 := R27
	168	[5833]	LOADK    	R30 K30 ; R30 := "Gold"
	169	[5833]	LOADK    	R31 K13 ; R31 := ""
	170	[5833]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	171	[5833]	MOVE     	R27 R28 ; R27 := R28
	172	[5834]	GETGLOBAL	R28 K26 ; R28 := 0x7f5022cf
	173	[5834]	GETTABLE 	R28 R28 K27 ; R28 := R28[0x66edf04f]
	174	[5834]	MOVE     	R29 R27 ; R29 := R27
	175	[5834]	LOADK    	R30 K31 ; R30 := "Platinum"
	176	[5834]	LOADK    	R31 K13 ; R31 := ""
	177	[5834]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	178	[5834]	MOVE     	R27 R28 ; R27 := R28
	179	[5836]	NEWTABLE 	R28 4 0 ; R28 := {}
	180	[5837]	MOVE     	R29 R27 ; R29 := R27
	181	[5837]	LOADK    	R30 K28 ; R30 := "Bronze"
	182	[5837]	CONCAT   	R29 R29 R30 ; R29 := R29 .. R30
	183	[5838]	MOVE     	R30 R27 ; R30 := R27
	184	[5838]	LOADK    	R31 K29 ; R31 := "Silver"
	185	[5838]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	186	[5839]	MOVE     	R31 R27 ; R31 := R27
	187	[5839]	LOADK    	R32 K30 ; R32 := "Gold"
	188	[5839]	CONCAT   	R31 R31 R32 ; R31 := R31 .. R32
	189	[5840]	MOVE     	R32 R27 ; R32 := R27
	190	[5840]	LOADK    	R33 K31 ; R33 := "Platinum"
	191	[5840]	CONCAT   	R32 R32 R33 ; R32 := R32 .. R33
	192	[5841]	SETLIST  	R28 4 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 4
	193	[5841]	MOVE     	R26 R28 ; R26 := R28
	194	[5841]	JMP      	199 ; PC := 199
	195	[5843]	NEWTABLE 	R28 1 0 ; R28 := {}
	196	[5843]	MOVE     	R29 R26 ; R29 := R26
	197	[5843]	SETLIST  	R28 1 1 ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 1
	198	[5843]	MOVE     	R26 R28 ; R26 := R28
	199	[5845]	LOADK    	R28 := 1.000000
	200	[5845]	LEN      	R29 R26 ; R29 := # R26
	201	[5845]	LOADK    	R30 := 1.000000
	202	[5845]	FORPREP  	R28 229 ; R28 -= R30; PC := 229
	203	[5846]	GETUPVAL 	R32 U3 ; R32 := U3
	204	[5846]	MOVE     	R33 R3 ; R33 := R3
	205	[5846]	GETTABLE 	R34 R26 R31 ; R34 := R26[R31]
	206	[5846]	GETUPVAL 	R35 U4 ; R35 := U4
	207	[5846]	CALL     	R32 4 2 ; R32 := R32(R33,R34,R35)
	208	[5847]	TEST     	R32 0 ; if not R32 then PC := 229
	209	[5847]	JMP      	229 ; PC := 229
	210	[5848]	GETTABLE 	R33 R32 K8 ; R33 := R32[1.000000]
	211	[5848]	GETTABLE 	R34 R32 K32 ; R34 := R32[2.000000]
	212	[5848]	LOADK    	R35 := 1.000000
	213	[5848]	FORPREP  	R33 228 ; R33 -= R35; PC := 228
	214	[5849]	GETTABLE 	R37 R3 R36 ; R37 := R3[R36]
	215	[5849]	GETTABLE 	R37 R37 K33 ; R37 := R37["count"]
	216	[5849]	TEST     	R37 0 ; if not R37 then PC := 222
	217	[5849]	JMP      	222 ; PC := 222
	218	[5850]	GETTABLE 	R37 R3 R36 ; R37 := R3[R36]
	219	[5850]	GETTABLE 	R37 R37 K33 ; R37 := R37["count"]
	220	[5850]	ADD      	R4 R4 R37 ; R4 := R4 + R37
	221	[5850]	JMP      	223 ; PC := 223
	222	[5852]	ADD      	R4 R4 K8 ; R4 := R4 + 1.000000
	223	[5854]	GETTABLE 	R37 R32 K8 ; R37 := R32[1.000000]
	224	[5854]	GETTABLE 	R38 R32 K32 ; R38 := R32[2.000000]
	225	[5854]	EQ       	0 R37 R38 ; if R37 ~= R38 then PC := 228
	226	[5854]	JMP      	228 ; PC := 228
	227	[5855]	JMP      	229 ; PC := 229
	228	[5848]	FORLOOP  	R33 214 ; R33 += R35; if R33 <= R34 then begin PC := 214; R36 := R33 end
	229	[5845]	FORLOOP  	R28 203 ; R28 += R30; if R28 <= R29 then begin PC := 203; R31 := R28 end
	230	[5862]	EQ       	0 R4 K16 ; if R4 ~= 0.000000 then PC := 264
	231	[5862]	JMP      	264 ; PC := 264
	232	[5862]	TEST     	R7 0 ; if not R7 then PC := 264
	233	[5862]	JMP      	264 ; PC := 264
	234	[5863]	SELF     	R37 R2 K34 ; R38 := R2; R37 := R2[0xef3662ab]
	235	[5863]	CALL     	R37 2 2 ; R37 := R37(R38)
	236	[5864]	GETGLOBAL	R38 K7 ; R38 := 0x7b998233
	237	[5864]	MOVE     	R39 R37 ; R39 := R37
	238	[5864]	CALL     	R38 2 2 ; R38 := R38(R39)
	239	[5864]	TEST     	R38 1 ; if R38 then PC := 264
	240	[5864]	JMP      	264 ; PC := 264
	241	[5864]	SELF     	R38 R37 K2 ; R39 := R37; R38 := R37[0xf2deaf69]
	242	[5864]	GETGLOBAL	R40 K35 ; R40 := gKeyChainItemType
	243	[5864]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	244	[5864]	TEST     	R38 0 ; if not R38 then PC := 264
	245	[5864]	JMP      	264 ; PC := 264
	246	[5867]	SELF     	R38 R1 K36 ; R39 := R1; R38 := R1[0xe9768ed0]
	247	[5867]	CALL     	R38 2 2 ; R38 := R38(R39)
	248	[5868]	LOADK    	R39 := 1.000000
	249	[5868]	LEN      	R40 R38 ; R40 := # R38
	250	[5868]	LOADK    	R41 := 1.000000
	251	[5868]	FORPREP  	R39 263 ; R39 -= R41; PC := 263
	252	[5869]	GETGLOBAL	R43 K7 ; R43 := 0x7b998233
	253	[5869]	GETTABLE 	R44 R38 R42 ; R44 := R38[R42]
	254	[5869]	CALL     	R43 2 2 ; R43 := R43(R44)
	255	[5869]	TEST     	R43 1 ; if R43 then PC := 263
	256	[5869]	JMP      	263 ; PC := 263
	257	[5869]	GETTABLE 	R43 R38 R42 ; R43 := R38[R42]
	258	[5869]	GETTABLE 	R43 R43 K37 ; R43 := R43["mItemType"]
	259	[5869]	EQ       	0 R43 R37 ; if R43 ~= R37 then PC := 263
	260	[5869]	JMP      	263 ; PC := 263
	261	[5872]	LOADK    	R4 := 1.000000
	262	[5873]	JMP      	264 ; PC := 264
	263	[5868]	FORLOOP  	R39 252 ; R39 += R41; if R39 <= R40 then begin PC := 252; R42 := R39 end
	264	[5880]	EQ       	0 R4 K16 ; if R4 ~= 0.000000 then PC := 294
	265	[5880]	JMP      	294 ; PC := 294
	266	[5880]	GETGLOBAL	R43 K7 ; R43 := 0x7b998233
	267	[5880]	GETGLOBAL	R44 K14 ; R44 := 0x25d99d89
	268	[5880]	CALL     	R43 2 2 ; R43 := R43(R44)
	269	[5880]	TEST     	R43 1 ; if R43 then PC := 294
	270	[5880]	JMP      	294 ; PC := 294
	271	[5881]	MOVE     	R43 R8 ; R43 := R8
	272	[5882]	TEST     	R7 0 ; if not R7 then PC := 277
	273	[5882]	JMP      	277 ; PC := 277
	274	[5883]	SELF     	R44 R2 K34 ; R45 := R2; R44 := R2[0xef3662ab]
	275	[5883]	CALL     	R44 2 2 ; R44 := R44(R45)
	276	[5883]	MOVE     	R43 R44 ; R43 := R44
	277	[5885]	GETGLOBAL	R44 K7 ; R44 := 0x7b998233
	278	[5885]	MOVE     	R45 R43 ; R45 := R43
	279	[5885]	CALL     	R44 2 2 ; R44 := R44(R45)
	280	[5885]	TEST     	R44 1 ; if R44 then PC := 294
	281	[5885]	JMP      	294 ; PC := 294
	282	[5885]	SELF     	R44 R43 K2 ; R45 := R43; R44 := R43[0xf2deaf69]
	283	[5885]	GETUPVAL 	R46 U7 ; R46 := U7
	284	[5885]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	285	[5885]	TEST     	R44 0 ; if not R44 then PC := 294
	286	[5885]	JMP      	294 ; PC := 294
	287	[5885]	GETGLOBAL	R44 K14 ; R44 := 0x25d99d89
	288	[5885]	SELF     	R44 R44 K38 ; R45 := R44; R44 := R44[0x4ae54c32]
	289	[5885]	MOVE     	R46 R43 ; R46 := R43
	290	[5885]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	291	[5885]	TEST     	R44 0 ; if not R44 then PC := 294
	292	[5885]	JMP      	294 ; PC := 294
	293	[5886]	LOADK    	R4 := 1.000000
	294	[5891]	GETGLOBAL	R44 K7 ; R44 := 0x7b998233
	295	[5891]	MOVE     	R45 R8 ; R45 := R8
	296	[5891]	CALL     	R44 2 2 ; R44 := R44(R45)
	297	[5891]	TEST     	R44 1 ; if R44 then PC := 311
	298	[5891]	JMP      	311 ; PC := 311
	299	[5891]	SELF     	R44 R8 K2 ; R45 := R8; R44 := R8[0xf2deaf69]
	300	[5891]	GETGLOBAL	R46 K39 ; R46 := 0x7ed0a956
	301	[5891]	LOADK    	R47 K40 ; R47 := "/Lotus/Types/StoreItems/SlotItems/PvPLoadoutSlotItem"
	302	[5891]	CALL     	R46 2 0 ; R46,... := R46(R47)
	303	[5891]	CALL     	R44 0 2 ; R44 := R44(R45,...)
	304	[5891]	TEST     	R44 0 ; if not R44 then PC := 311
	305	[5891]	JMP      	311 ; PC := 311
	306	[5893]	GETUPVAL 	R44 U8 ; R44 := U8
	307	[5893]	GETGLOBAL	R45 K41 ; R45 := _T
	308	[5893]	GETTABLE 	R45 R45 K42 ; R45 := R45["ShowSyndicate"]
	309	[5893]	CALL     	R44 2 2 ; R44 := R44(R45)
	310	[5893]	MOVE     	R4 R44 ; R4 := R44
	311	[5896]	RETURN   	R4 2 ; return R4 
	312	[5897]	RETURN   	R0 1 ; return 

function #291 <?:5899,5911> (49 instructions, 196 bytes at 00000160C6836090)
1 param, 11 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[5900]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xed4e0128]
	2	[5900]	CALL     	R1 2 2 ; R1 := R1(R2)
	3	[5901]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	4	[5901]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	5	[5901]	MOVE     	R3 R1 ; R3 := R1
	6	[5901]	LOADK    	R4 K3 ; R4 := "_"
	7	[5901]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[5902]	GETGLOBAL	R3 K1 ; R3 := 0x7f5022cf
	9	[5902]	GETTABLE 	R3 R3 K2 ; R3 := R3[0xa5c556b9]
	10	[5902]	MOVE     	R4 R1 ; R4 := R1
	11	[5902]	LOADK    	R5 K4 ; R5 := "x"
	12	[5902]	MOVE     	R6 R2 ; R6 := R2
	13	[5902]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	14	[5903]	GETGLOBAL	R4 K1 ; R4 := 0x7f5022cf
	15	[5903]	GETTABLE 	R4 R4 K2 ; R4 := R4[0xa5c556b9]
	16	[5903]	MOVE     	R5 R1 ; R5 := R1
	17	[5903]	LOADK    	R6 K5 ; R6 := "%."
	18	[5903]	MOVE     	R7 R3 ; R7 := R3
	19	[5903]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	20	[5904]	LOADK    	R5 := 1.000000
	21	[5905]	LOADK    	R6 := 1.000000
	22	[5906]	TEST     	R2 0 ; if not R2 then PC := 46
	23	[5906]	JMP      	46 ; PC := 46
	24	[5906]	TEST     	R3 0 ; if not R3 then PC := 46
	25	[5906]	JMP      	46 ; PC := 46
	26	[5906]	TEST     	R4 0 ; if not R4 then PC := 46
	27	[5906]	JMP      	46 ; PC := 46
	28	[5906]	LT       	0 R3 R4 ; if R3 >= R4 then PC := 46
	29	[5906]	JMP      	46 ; PC := 46
	30	[5906]	LT       	0 R2 R3 ; if R2 >= R3 then PC := 46
	31	[5906]	JMP      	46 ; PC := 46
	32	[5907]	GETGLOBAL	R7 K1 ; R7 := 0x7f5022cf
	33	[5907]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x1a94c9cc]
	34	[5907]	MOVE     	R8 R1 ; R8 := R1
	35	[5907]	ADD      	R9 R2 K7 ; R9 := R2 + 1.000000
	36	[5907]	SUB      	R10 R3 K7 ; R10 := R3 - 1.000000
	37	[5907]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	38	[5907]	MOVE     	R5 R7 ; R5 := R7
	39	[5908]	GETGLOBAL	R7 K1 ; R7 := 0x7f5022cf
	40	[5908]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x1a94c9cc]
	41	[5908]	MOVE     	R8 R1 ; R8 := R1
	42	[5908]	ADD      	R9 R3 K7 ; R9 := R3 + 1.000000
	43	[5908]	SUB      	R10 R4 K7 ; R10 := R4 - 1.000000
	44	[5908]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	45	[5908]	MOVE     	R6 R7 ; R6 := R7
	46	[5910]	MOVE     	R7 R5 ; R7 := R5
	47	[5910]	MOVE     	R8 R6 ; R8 := R6
	48	[5910]	RETURN   	R7 3 ; return R7, R8 
	49	[5911]	RETURN   	R0 1 ; return 

function #292 <?:5913,5954> (114 instructions, 456 bytes at 00000160C6836370)
2 params, 9 slots, 0 upvalues, 0 locals, 31 constants, 0 functions
	1	[5914]	OP_LOADBOOL	R2 0 0 ; R2 := false
	2	[5914]	TEST     	R2 0 ; if not R2 then PC := 6
	3	[5914]	JMP      	6 ; PC := 6
	4	[5915]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[5915]	RETURN   	R2 2 ; return R2 
	6	[5918]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[5918]	MOVE     	R3 R0 ; R3 := R0
	8	[5918]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[5918]	TEST     	R2 0 ; if not R2 then PC := 13
	10	[5918]	JMP      	13 ; PC := 13
	11	[5919]	OP_LOADBOOL	R2 0 0 ; R2 := false
	12	[5919]	RETURN   	R2 2 ; return R2 
	13	[5922]	OP_LOADBOOL	R2 1 0 ; R2 := true
	14	[5923]	SELF     	R3 R0 K1 ; R4 := R0; R3 := R0[0xa64e07df]
	15	[5923]	MOVE     	R5 R1 ; R5 := R1
	16	[5923]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	17	[5924]	LOADK    	R4 := 0.000000
	18	[5925]	EQ       	0 R1 K3 ; if R1 ~= 0.000000 then PC := 24
	19	[5925]	JMP      	24 ; PC := 24
	20	[5926]	SELF     	R5 R0 K4 ; R6 := R0; R5 := R0[0x21a3da0c]
	21	[5926]	CALL     	R5 2 2 ; R5 := R5(R6)
	22	[5926]	LEN      	R4 R5 ; R4 := # R5
	23	[5926]	JMP      	109 ; PC := 109
	24	[5927]	EQ       	0 R1 K5 ; if R1 ~= 1.000000 then PC := 38
	25	[5927]	JMP      	38 ; PC := 38
	26	[5928]	SELF     	R5 R0 K6 ; R6 := R0; R5 := R0[0x57d88957]
	27	[5928]	CALL     	R5 2 2 ; R5 := R5(R6)
	28	[5928]	LEN      	R5 R5 ; R5 := # R5
	29	[5928]	SELF     	R6 R0 K7 ; R7 := R0; R6 := R0[0x215bf396]
	30	[5928]	CALL     	R6 2 2 ; R6 := R6(R7)
	31	[5928]	LEN      	R6 R6 ; R6 := # R6
	32	[5928]	ADD      	R5 R5 R6 ; R5 := R5 + R6
	33	[5928]	SELF     	R6 R0 K8 ; R7 := R0; R6 := R0[0x0bf14f02]
	34	[5928]	CALL     	R6 2 2 ; R6 := R6(R7)
	35	[5928]	LEN      	R6 R6 ; R6 := # R6
	36	[5928]	ADD      	R4 R5 R6 ; R4 := R5 + R6
	37	[5928]	JMP      	109 ; PC := 109
	38	[5929]	EQ       	0 R1 K9 ; if R1 ~= 2.000000 then PC := 56
	39	[5929]	JMP      	56 ; PC := 56
	40	[5930]	SELF     	R5 R0 K10 ; R6 := R0; R5 := R0[0x2a207127]
	41	[5930]	CALL     	R5 2 2 ; R5 := R5(R6)
	42	[5930]	LEN      	R5 R5 ; R5 := # R5
	43	[5930]	SELF     	R6 R0 K11 ; R7 := R0; R6 := R0[0xa2c6d8b7]
	44	[5930]	CALL     	R6 2 2 ; R6 := R6(R7)
	45	[5930]	LEN      	R6 R6 ; R6 := # R6
	46	[5930]	ADD      	R5 R5 R6 ; R5 := R5 + R6
	47	[5930]	SELF     	R6 R0 K12 ; R7 := R0; R6 := R0[0x91a3eddf]
	48	[5930]	CALL     	R6 2 2 ; R6 := R6(R7)
	49	[5930]	LEN      	R6 R6 ; R6 := # R6
	50	[5930]	ADD      	R5 R5 R6 ; R5 := R5 + R6
	51	[5930]	SELF     	R6 R0 K13 ; R7 := R0; R6 := R0[0xa855881a]
	52	[5930]	CALL     	R6 2 2 ; R6 := R6(R7)
	53	[5930]	LEN      	R6 R6 ; R6 := # R6
	54	[5930]	ADD      	R4 R5 R6 ; R4 := R5 + R6
	55	[5930]	JMP      	109 ; PC := 109
	56	[5931]	EQ       	0 R1 K14 ; if R1 ~= 3.000000 then PC := 62
	57	[5931]	JMP      	62 ; PC := 62
	58	[5932]	SELF     	R5 R0 K15 ; R6 := R0; R5 := R0[0x4bb8609a]
	59	[5932]	CALL     	R5 2 2 ; R5 := R5(R6)
	60	[5932]	LEN      	R4 R5 ; R4 := # R5
	61	[5932]	JMP      	109 ; PC := 109
	62	[5933]	EQ       	0 R1 K16 ; if R1 ~= 4.000000 then PC := 72
	63	[5933]	JMP      	72 ; PC := 72
	64	[5934]	SELF     	R5 R0 K17 ; R6 := R0; R5 := R0[0x6f7b67d7]
	65	[5934]	CALL     	R5 2 2 ; R5 := R5(R6)
	66	[5934]	LEN      	R5 R5 ; R5 := # R5
	67	[5934]	SELF     	R6 R0 K18 ; R7 := R0; R6 := R0[0x3218c3b0]
	68	[5934]	CALL     	R6 2 2 ; R6 := R6(R7)
	69	[5934]	LEN      	R6 R6 ; R6 := # R6
	70	[5934]	ADD      	R4 R5 R6 ; R4 := R5 + R6
	71	[5934]	JMP      	109 ; PC := 109
	72	[5935]	EQ       	0 R1 K19 ; if R1 ~= 8.000000 then PC := 78
	73	[5935]	JMP      	78 ; PC := 78
	74	[5936]	SELF     	R5 R0 K20 ; R6 := R0; R5 := R0[0x99718a3d]
	75	[5936]	CALL     	R5 2 2 ; R5 := R5(R6)
	76	[5936]	LEN      	R4 R5 ; R4 := # R5
	77	[5936]	JMP      	109 ; PC := 109
	78	[5937]	EQ       	0 R1 K21 ; if R1 ~= 9.000000 then PC := 88
	79	[5937]	JMP      	88 ; PC := 88
	80	[5938]	SELF     	R5 R0 K22 ; R6 := R0; R5 := R0[0xbfba693e]
	81	[5938]	CALL     	R5 2 2 ; R5 := R5(R6)
	82	[5938]	LEN      	R5 R5 ; R5 := # R5
	83	[5938]	SELF     	R6 R0 K23 ; R7 := R0; R6 := R0[0xdc039065]
	84	[5938]	CALL     	R6 2 2 ; R6 := R6(R7)
	85	[5938]	LEN      	R6 R6 ; R6 := # R6
	86	[5938]	ADD      	R4 R5 R6 ; R4 := R5 + R6
	87	[5938]	JMP      	109 ; PC := 109
	88	[5939]	EQ       	0 R1 K24 ; if R1 ~= 10.000000 then PC := 94
	89	[5939]	JMP      	94 ; PC := 94
	90	[5940]	SELF     	R5 R0 K25 ; R6 := R0; R5 := R0[0xfab085e3]
	91	[5940]	CALL     	R5 2 2 ; R5 := R5(R6)
	92	[5940]	LEN      	R4 R5 ; R4 := # R5
	93	[5940]	JMP      	109 ; PC := 109
	94	[5941]	EQ       	0 R1 K26 ; if R1 ~= 11.000000 then PC := 100
	95	[5941]	JMP      	100 ; PC := 100
	96	[5942]	SELF     	R5 R0 K27 ; R6 := R0; R5 := R0[0x02ef4892]
	97	[5942]	CALL     	R5 2 2 ; R5 := R5(R6)
	98	[5942]	LEN      	R4 R5 ; R4 := # R5
	99	[5942]	JMP      	109 ; PC := 109
	100	[5944]	GETGLOBAL	R5 K28 ; R5 := 0x3d106989
	101	[5944]	LOADK    	R6 K29 ; R6 := "Unsupported bin type!"
	102	[5944]	GETGLOBAL	R7 K30 ; R7 := 0x64fb1586
	103	[5944]	MOVE     	R8 R1 ; R8 := R1
	104	[5944]	CALL     	R7 2 2 ; R7 := R7(R8)
	105	[5944]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	106	[5944]	CALL     	R5 2 1 ; R5(R6)
	107	[5945]	OP_LOADBOOL	R5 0 0 ; R5 := false
	108	[5945]	RETURN   	R5 2 ; return R5 
	109	[5948]	SUB      	R5 R3 R4 ; R5 := R3 - R4
	110	[5948]	LT       	0 R5 K3 ; if R5 >= 0.000000 then PC := 113
	111	[5948]	JMP      	113 ; PC := 113
	112	[5950]	OP_LOADBOOL	R2 0 0 ; R2 := false
	113	[5953]	RETURN   	R2 2 ; return R2 
	114	[5954]	RETURN   	R0 1 ; return 

function #293 <?:5956,5966> (26 instructions, 104 bytes at 00000160C6836A00)
1 param, 6 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[5957]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[5957]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xe27b35bb]
	3	[5957]	CALL     	R1 1 2 ; R1 := R1()
	4	[5958]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[5958]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x06d055f9]
	6	[5958]	GETGLOBAL	R3 K0 ; R3 := 0x34291f5c
	7	[5958]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x056bfe8b]
	8	[5958]	CALL     	R3 1 2 ; R3 := R3()
	9	[5958]	LOADK    	R4 := 0.000000
	10	[5958]	LOADK    	R5 := 1.000000
	11	[5958]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	12	[5958]	SETTABLE 	R1 K2 R2 ; R1["dialogType"] := R2
	13	[5959]	SETTABLE 	R1 K5 K6 ; R1["locString"] := "/Lotus/Language/Menu/Slot_InvalidBinError"
	14	[5960]	SETTABLE 	R1 K7 K8 ; R1["secondString"] := "/Lotus/Language/Menu/ContactSupport"
	15	[5961]	EQ       	1 R0 K9 ; if R0 == nil then PC := 20
	16	[5961]	JMP      	20 ; PC := 20
	17	[5962]	SELF     	R2 R1 K10 ; R3 := R1; R2 := R1[0xe6ccc5b9]
	18	[5962]	MOVE     	R4 R0 ; R4 := R0
	19	[5962]	CALL     	R2 3 1 ; R2(R3,R4)
	20	[5965]	GETGLOBAL	R2 K11 ; R2 := 0x83f4e77c
	21	[5965]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0x7d63f19c]
	22	[5965]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[5965]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x69e5aa4f]
	24	[5965]	MOVE     	R4 R1 ; R4 := R1
	25	[5965]	CALL     	R2 3 1 ; R2(R3,R4)
	26	[5966]	RETURN   	R0 1 ; return 

function #294 <?:5968,5976> (25 instructions, 100 bytes at 00000160C6836D30)
1 param, 3 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[5969]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[5969]	MOVE     	R2 R0 ; R2 := R0
	3	[5969]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5969]	EQ       	1 R1 K2 ; if R1 == 4.000000 then PC := 25
	5	[5969]	JMP      	25 ; PC := 25
	6	[5969]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	7	[5969]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x056bfe8b]
	8	[5969]	CALL     	R1 1 2 ; R1 := R1()
	9	[5969]	TEST     	R1 1 ; if R1 then PC := 25
	10	[5969]	JMP      	25 ; PC := 25
	11	[5970]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	12	[5970]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xa7a2e381]
	13	[5970]	CALL     	R1 1 2 ; R1 := R1()
	14	[5970]	TEST     	R1 0 ; if not R1 then PC := 21
	15	[5970]	JMP      	21 ; PC := 21
	16	[5971]	GETUPVAL 	R1 U0 ; R1 := U0
	17	[5971]	GETTABLE 	R1 R1 K5 ; R1 := R1[0x2c2fdf05]
	18	[5971]	LOADK    	R2 K6 ; R2 := "https://kf.qq.com/bills/200901selfsam4979ae6.html"
	19	[5971]	CALL     	R1 2 1 ; R1(R2)
	20	[5971]	JMP      	25 ; PC := 25
	21	[5973]	GETUPVAL 	R1 U0 ; R1 := U0
	22	[5973]	GETTABLE 	R1 R1 K5 ; R1 := R1[0x2c2fdf05]
	23	[5973]	LOADK    	R2 K7 ; R2 := "https://digitalextremes.zendesk.com"
	24	[5973]	CALL     	R1 2 1 ; R1(R2)
	25	[5976]	RETURN   	R0 1 ; return 

function #295 <?:5978,5984> (26 instructions, 104 bytes at 00000160C6837000)
1 param, 4 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[5979]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	2	[5979]	EQ       	1 R1 K1 ; if R1 == nil then PC := 19
	3	[5979]	JMP      	19 ; PC := 19
	4	[5979]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	5	[5979]	GETTABLE 	R1 R1 K2 ; R1 := R1["mProductExpiryOverride"]
	6	[5979]	EQ       	1 R1 K1 ; if R1 == nil then PC := 19
	7	[5979]	JMP      	19 ; PC := 19
	8	[5979]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	9	[5979]	GETTABLE 	R1 R1 K2 ; R1 := R1["mProductExpiryOverride"]
	10	[5979]	GETTABLE 	R1 R1 K3 ; R1 := R1["sec"]
	11	[5979]	EQ       	1 R1 K4 ; if R1 == "" then PC := 19
	12	[5979]	JMP      	19 ; PC := 19
	13	[5980]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	14	[5980]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x397b920f]
	15	[5980]	GETTABLE 	R2 R0 K0 ; R2 := R0["Sale"]
	16	[5980]	GETTABLE 	R2 R2 K2 ; R2 := R2["mProductExpiryOverride"]
	17	[5980]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	18	[5980]	RETURN   	R1 0 ; return R1,... 
	19	[5983]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	20	[5983]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x397b920f]
	21	[5983]	GETTABLE 	R2 R0 K7 ; R2 := R0["StoreItem"]
	22	[5983]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x5630a625]
	23	[5983]	CALL     	R2 2 0 ; R2,... := R2(R3)
	24	[5983]	TAILCALL 	R1 0 0 ; R1,... := R1(R2,...)
	25	[5983]	RETURN   	R1 0 ; return R1,... 
	26	[5984]	RETURN   	R0 1 ; return 

function #296 <?:5986,5996> (40 instructions, 160 bytes at 00000160C68372A0)
1 param, 4 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[5987]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	2	[5987]	EQ       	1 R1 K1 ; if R1 == nil then PC := 23
	3	[5987]	JMP      	23 ; PC := 23
	4	[5987]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	5	[5987]	GETTABLE 	R1 R1 K2 ; R1 := R1["mProductExpiryOverride"]
	6	[5987]	EQ       	1 R1 K1 ; if R1 == nil then PC := 23
	7	[5987]	JMP      	23 ; PC := 23
	8	[5987]	GETTABLE 	R1 R0 K0 ; R1 := R0["Sale"]
	9	[5987]	GETTABLE 	R1 R1 K2 ; R1 := R1["mProductExpiryOverride"]
	10	[5987]	GETTABLE 	R1 R1 K3 ; R1 := R1["sec"]
	11	[5987]	EQ       	1 R1 K4 ; if R1 == "" then PC := 23
	12	[5987]	JMP      	23 ; PC := 23
	13	[5988]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	14	[5988]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x397b920f]
	15	[5988]	GETTABLE 	R2 R0 K0 ; R2 := R0["Sale"]
	16	[5988]	GETTABLE 	R2 R2 K2 ; R2 := R2["mProductExpiryOverride"]
	17	[5988]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[5988]	LT       	1 R1 K7 ; if R1 < 0.000000 then PC := 21
	19	[5988]	JMP      	21 ; PC := 21
	20	[5988]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 21
	21	[5988]	OP_LOADBOOL	R1 1 0 ; R1 := true
	22	[5988]	RETURN   	R1 2 ; return R1 
	23	[5991]	GETTABLE 	R1 R0 K8 ; R1 := R0["StoreItem"]
	24	[5991]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x5630a625]
	25	[5991]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[5991]	EQ       	1 R1 K7 ; if R1 == 0.000000 then PC := 38
	27	[5991]	JMP      	38 ; PC := 38
	28	[5991]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	29	[5991]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x397b920f]
	30	[5991]	GETTABLE 	R2 R0 K8 ; R2 := R0["StoreItem"]
	31	[5991]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x5630a625]
	32	[5991]	CALL     	R2 2 0 ; R2,... := R2(R3)
	33	[5991]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	34	[5991]	LE       	0 R1 K7 ; if R1 > 0.000000 then PC := 38
	35	[5991]	JMP      	38 ; PC := 38
	36	[5992]	OP_LOADBOOL	R1 1 0 ; R1 := true
	37	[5992]	RETURN   	R1 2 ; return R1 
	38	[5995]	OP_LOADBOOL	R1 0 0 ; R1 := false
	39	[5995]	RETURN   	R1 2 ; return R1 
	40	[5996]	RETURN   	R0 1 ; return 

function #297 <?:6027,6078> (93 instructions, 372 bytes at 00000160C6837540)
3 params, 19 slots, 2 upvalues, 0 locals, 31 constants, 0 functions
	1	[6028]	LOADK    	R3 := 0.000000
	2	[6030]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	3	[6030]	MOVE     	R5 R1 ; R5 := R1
	4	[6030]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[6030]	TEST     	R4 0 ; if not R4 then PC := 8
	6	[6030]	JMP      	8 ; PC := 8
	7	[6031]	OP_LOADBOOL	R1 0 0 ; R1 := false
	8	[6034]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	9	[6034]	MOVE     	R5 R2 ; R5 := R2
	10	[6034]	CALL     	R4 2 2 ; R4 := R4(R5)
	11	[6034]	TEST     	R4 0 ; if not R4 then PC := 14
	12	[6034]	JMP      	14 ; PC := 14
	13	[6035]	OP_LOADBOOL	R2 0 0 ; R2 := false
	14	[6038]	GETGLOBAL	R4 K2 ; R4 := 0x0032441c
	15	[6038]	GETTABLE 	R4 R4 K3 ; R4 := R4["UIMaterial_FocusLens"]
	16	[6039]	TEST     	R1 0 ; if not R1 then PC := 27
	17	[6039]	JMP      	27 ; PC := 27
	18	[6040]	GETUPVAL 	R5 U0 ; R5 := U0
	19	[6040]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x06d055f9]
	20	[6040]	MOVE     	R6 R2 ; R6 := R2
	21	[6040]	GETGLOBAL	R7 K2 ; R7 := 0x0032441c
	22	[6040]	GETTABLE 	R7 R7 K5 ; R7 := R7["UIMaterial_FocusLensStoreDepth"]
	23	[6040]	GETGLOBAL	R8 K2 ; R8 := 0x0032441c
	24	[6040]	GETTABLE 	R8 R8 K6 ; R8 := R8["UIMaterial_FocusLensStore"]
	25	[6040]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	26	[6040]	MOVE     	R4 R5 ; R4 := R5
	27	[6043]	MOVE     	R5 R0 ; R5 := R0
	28	[6044]	GETGLOBAL	R6 K7 ; R6 := 0x6728fd22
	29	[6044]	MOVE     	R7 R5 ; R7 := R5
	30	[6044]	CALL     	R6 2 2 ; R6 := R6(R7)
	31	[6044]	TEST     	R6 0 ; if not R6 then PC := 37
	32	[6044]	JMP      	37 ; PC := 37
	33	[6045]	GETGLOBAL	R6 K8 ; R6 := 0xb009bbc6
	34	[6045]	MOVE     	R7 R5 ; R7 := R5
	35	[6045]	CALL     	R6 2 2 ; R6 := R6(R7)
	36	[6045]	MOVE     	R5 R6 ; R5 := R6
	37	[6048]	LOADK    	R6 K9 ; R6 := ""
	38	[6049]	LOADK    	R7 := 1.000000
	39	[6050]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	40	[6050]	MOVE     	R9 R5 ; R9 := R5
	41	[6050]	CALL     	R8 2 2 ; R8 := R8(R9)
	42	[6050]	TEST     	R8 1 ; if R8 then PC := 77
	43	[6050]	JMP      	77 ; PC := 77
	44	[6051]	SELF     	R8 R5 K10 ; R9 := R5; R8 := R5[0x3310fecd]
	45	[6051]	CALL     	R8 2 2 ; R8 := R8(R9)
	46	[6052]	LOADK    	R9 := 1.000000
	47	[6052]	GETGLOBAL	R10 K11 ; R10 := 0x5bced4c4
	48	[6052]	GETTABLE 	R10 R10 K12 ; R10 := R10[0xac1b386a]
	49	[6052]	GETUPVAL 	R11 U1 ; R11 := U1
	50	[6052]	LEN      	R11 R11 ; R11 := # R11
	51	[6052]	LEN      	R12 R8 ; R12 := # R8
	52	[6052]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	53	[6052]	LOADK    	R11 := 1.000000
	54	[6052]	FORPREP  	R9 60 ; R9 -= R11; PC := 60
	55	[6055]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	56	[6055]	LT       	0 K13 R13 ; if 0.000000 >= R13 then PC := 60
	57	[6055]	JMP      	60 ; PC := 60
	58	[6056]	SUB      	R3 R12 K14 ; R3 := R12 - 1.000000
	59	[6058]	JMP      	61 ; PC := 61
	60	[6052]	FORLOOP  	R9 55 ; R9 += R11; if R9 <= R10 then begin PC := 55; R12 := R9 end
	61	[6062]	SELF     	R13 R5 K15 ; R14 := R5; R13 := R5[0x59a2ddb4]
	62	[6062]	CALL     	R13 2 2 ; R13 := R13(R14)
	63	[6063]	EQ       	0 R13 K16 ; if R13 ~= 0.350000 then PC := 68
	64	[6063]	JMP      	68 ; PC := 68
	65	[6064]	LOADK    	R7 := 2.000000
	66	[6065]	LOADK    	R6 K17 ; R6 := "_GREATER"
	67	[6065]	JMP      	77 ; PC := 77
	68	[6066]	EQ       	0 R13 K18 ; if R13 ~= 0.450000 then PC := 73
	69	[6066]	JMP      	73 ; PC := 73
	70	[6067]	LOADK    	R7 := 3.000000
	71	[6068]	LOADK    	R6 K19 ; R6 := "_EIDOLON"
	72	[6068]	JMP      	77 ; PC := 77
	73	[6069]	EQ       	0 R13 K20 ; if R13 ~= 0.650000 then PC := 77
	74	[6069]	JMP      	77 ; PC := 77
	75	[6070]	LOADK    	R7 := 4.000000
	76	[6071]	LOADK    	R6 K21 ; R6 := "_LUA"
	77	[6075]	GETUPVAL 	R14 U1 ; R14 := U1
	78	[6075]	GETTABLE 	R14 R14 R3 ; R14 := R14[R3]
	79	[6076]	LOADK    	R15 K22 ; R15 := "<"
	80	[6076]	GETTABLE 	R16 R14 K23 ; R16 := R14["Lens"]
	81	[6076]	MOVE     	R17 R6 ; R17 := R6
	82	[6076]	LOADK    	R18 K24 ; R18 := ">"
	83	[6076]	CONCAT   	R6 R15 R18 ; R6 := R15 .. R16 .. R17 .. R18
	84	[6077]	NEWTABLE 	R15 0 5 ; R15 := {}
	85	[6077]	GETTABLE 	R16 R14 K26 ; R16 := R14["Polarity"]
	86	[6077]	SETTABLE 	R15 K25 R16 ; R15["PolarityTag"] := R16
	87	[6077]	SETTABLE 	R15 K27 R6 ; R15["LensTag"] := R6
	88	[6077]	SETTABLE 	R15 K28 R7 ; R15["LensTier"] := R7
	89	[6077]	GETTABLE 	R16 R4 R3 ; R16 := R4[R3]
	90	[6077]	SETTABLE 	R15 K29 R16 ; R15["Material"] := R16
	91	[6077]	SETTABLE 	R15 K30 R3 ; R15["PolarityType"] := R3
	92	[6077]	RETURN   	R15 2 ; return R15 
	93	[6078]	RETURN   	R0 1 ; return 

function #298 <?:6080,6082> (4 instructions, 16 bytes at 00000160C6837DB0)
1 param, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6081]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6081]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	3	[6081]	RETURN   	R1 2 ; return R1 
	4	[6082]	RETURN   	R0 1 ; return 

function #299 <?:6084,6120> (86 instructions, 344 bytes at 00000160C6837E80)
2 params, 13 slots, 1 upvalue, 0 locals, 23 constants, 0 functions
	1	[6085]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[6085]	GETGLOBAL	R3 K1 ; R3 := 0x89326c93
	3	[6085]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[6085]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[6085]	JMP      	7 ; PC := 7
	6	[6086]	RETURN   	R0 1 ; return 
	7	[6088]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	8	[6088]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xfb64e76c]
	9	[6088]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[6089]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	11	[6089]	MOVE     	R4 R2 ; R4 := R2
	12	[6089]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[6089]	TEST     	R3 0 ; if not R3 then PC := 16
	14	[6089]	JMP      	16 ; PC := 16
	15	[6090]	RETURN   	R0 1 ; return 
	16	[6093]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[6093]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x06d055f9]
	18	[6093]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	19	[6093]	MOVE     	R5 R1 ; R5 := R1
	20	[6093]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[6093]	SELF     	R5 R2 K4 ; R6 := R2; R5 := R2[0x5578d98b]
	22	[6093]	CALL     	R5 2 2 ; R5 := R5(R6)
	23	[6093]	MOVE     	R6 R1 ; R6 := R1
	24	[6093]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	25	[6094]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	26	[6094]	MOVE     	R5 R3 ; R5 := R3
	27	[6094]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[6094]	TEST     	R4 0 ; if not R4 then PC := 31
	29	[6094]	JMP      	31 ; PC := 31
	30	[6095]	RETURN   	R0 1 ; return 
	31	[6098]	GETGLOBAL	R4 K5 ; R4 := 0x0469f296
	32	[6098]	LOADK    	R5 K6 ; R5 := "GAME_R1_EYE1"
	33	[6098]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[6099]	GETGLOBAL	R5 K5 ; R5 := 0x0469f296
	35	[6099]	LOADK    	R6 K7 ; R6 := "GAME_L1_EYE1"
	36	[6099]	CALL     	R5 2 2 ; R5 := R5(R6)
	37	[6100]	GETGLOBAL	R6 K5 ; R6 := 0x0469f296
	38	[6100]	LOADK    	R7 K8 ; R7 := "GAME_C1_HEAD1"
	39	[6100]	CALL     	R6 2 2 ; R6 := R6(R7)
	40	[6102]	SELF     	R7 R3 K9 ; R8 := R3; R7 := R3[0xa390a429]
	41	[6102]	MOVE     	R9 R4 ; R9 := R4
	42	[6102]	OP_LOADBOOL	R10 0 0 ; R10 := false
	43	[6102]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	44	[6103]	SELF     	R7 R3 K9 ; R8 := R3; R7 := R3[0xa390a429]
	45	[6103]	MOVE     	R9 R5 ; R9 := R5
	46	[6103]	OP_LOADBOOL	R10 0 0 ; R10 := false
	47	[6103]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	48	[6105]	GETGLOBAL	R7 K10 ; R7 := _T
	49	[6105]	GETTABLE 	R7 R7 K11 ; R7 := R7["OperatorEyeTrack"]
	50	[6106]	EQ       	1 R7 K12 ; if R7 == nil then PC := 82
	51	[6106]	JMP      	82 ; PC := 82
	52	[6107]	GETGLOBAL	R8 K14 ; R8 := 0x5bced4c4
	53	[6107]	GETTABLE 	R8 R8 K15 ; R8 := R8[0xb62ecfe0]
	54	[6107]	LOADK    	R9 := 0.000000
	55	[6107]	GETTABLE 	R10 R7 K13 ; R10 := R7["LerpAmount"]
	56	[6107]	GETGLOBAL	R11 K16 ; R11 := 0x67652851
	57	[6107]	CALL     	R11 1 2 ; R11 := R11()
	58	[6107]	MUL      	R11 R11 K17 ; R11 := R11 * 3.000000
	59	[6107]	SUB      	R10 R10 R11 ; R10 := R10 - R11
	60	[6107]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	61	[6107]	SETTABLE 	R7 K13 R8 ; R7["LerpAmount"] := R8
	62	[6108]	TEST     	R0 0 ; if not R0 then PC := 65
	63	[6108]	JMP      	65 ; PC := 65
	64	[6109]	SETTABLE 	R7 K13 K18 ; R7["LerpAmount"] := 0.000000
	65	[6111]	GETGLOBAL	R8 K19 ; R8 := 0x5e223e7d
	66	[6111]	GETTABLE 	R9 R7 K20 ; R9 := R7["InitialRot"]
	67	[6111]	GETTABLE 	R10 R7 K21 ; R10 := R7["FinalRot"]
	68	[6111]	GETTABLE 	R11 R7 K13 ; R11 := R7["LerpAmount"]
	69	[6111]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	70	[6112]	SELF     	R9 R3 K22 ; R10 := R3; R9 := R3[0xb63fc1d8]
	71	[6112]	MOVE     	R11 R6 ; R11 := R6
	72	[6112]	MOVE     	R12 R8 ; R12 := R8
	73	[6112]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	74	[6113]	GETTABLE 	R9 R7 K13 ; R9 := R7["LerpAmount"]
	75	[6113]	EQ       	0 R9 K18 ; if R9 ~= 0.000000 then PC := 86
	76	[6113]	JMP      	86 ; PC := 86
	77	[6114]	SELF     	R9 R3 K9 ; R10 := R3; R9 := R3[0xa390a429]
	78	[6114]	MOVE     	R11 R6 ; R11 := R6
	79	[6114]	OP_LOADBOOL	R12 0 0 ; R12 := false
	80	[6114]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	81	[6115]	JMP      	86 ; PC := 86
	82	[6117]	SELF     	R9 R3 K9 ; R10 := R3; R9 := R3[0xa390a429]
	83	[6117]	MOVE     	R11 R6 ; R11 := R6
	84	[6117]	OP_LOADBOOL	R12 0 0 ; R12 := false
	85	[6117]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	86	[6120]	RETURN   	R0 1 ; return 

function #300 <?:6122,6209> (293 instructions, 1172 bytes at 00000160C68384F0)
3 params, 24 slots, 1 upvalue, 0 locals, 60 constants, 0 functions
	1	[6123]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[6123]	GETGLOBAL	R4 K1 ; R4 := 0x89326c93
	3	[6123]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[6123]	TEST     	R3 0 ; if not R3 then PC := 7
	5	[6123]	JMP      	7 ; PC := 7
	6	[6124]	RETURN   	R0 1 ; return 
	7	[6126]	GETGLOBAL	R3 K1 ; R3 := 0x89326c93
	8	[6126]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0xfb64e76c]
	9	[6126]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[6127]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	11	[6127]	MOVE     	R5 R3 ; R5 := R3
	12	[6127]	CALL     	R4 2 2 ; R4 := R4(R5)
	13	[6127]	TEST     	R4 0 ; if not R4 then PC := 16
	14	[6127]	JMP      	16 ; PC := 16
	15	[6128]	RETURN   	R0 1 ; return 
	16	[6131]	GETUPVAL 	R4 U0 ; R4 := U0
	17	[6131]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x06d055f9]
	18	[6131]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	19	[6131]	MOVE     	R6 R2 ; R6 := R2
	20	[6131]	CALL     	R5 2 2 ; R5 := R5(R6)
	21	[6131]	SELF     	R6 R3 K4 ; R7 := R3; R6 := R3[0x5578d98b]
	22	[6131]	CALL     	R6 2 2 ; R6 := R6(R7)
	23	[6131]	MOVE     	R7 R2 ; R7 := R2
	24	[6131]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	25	[6132]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	26	[6132]	MOVE     	R6 R4 ; R6 := R4
	27	[6132]	CALL     	R5 2 2 ; R5 := R5(R6)
	28	[6132]	TEST     	R5 0 ; if not R5 then PC := 31
	29	[6132]	JMP      	31 ; PC := 31
	30	[6133]	RETURN   	R0 1 ; return 
	31	[6136]	GETGLOBAL	R5 K5 ; R5 := 0x0469f296
	32	[6136]	LOADK    	R6 K6 ; R6 := "GAME_R1_EYE1"
	33	[6136]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[6137]	GETGLOBAL	R6 K5 ; R6 := 0x0469f296
	35	[6137]	LOADK    	R7 K6 ; R7 := "GAME_R1_EYE1"
	36	[6137]	CALL     	R6 2 2 ; R6 := R6(R7)
	37	[6138]	GETGLOBAL	R7 K5 ; R7 := 0x0469f296
	38	[6138]	LOADK    	R8 K7 ; R8 := "GAME_L1_EYE1"
	39	[6138]	CALL     	R7 2 2 ; R7 := R7(R8)
	40	[6139]	GETGLOBAL	R8 K5 ; R8 := 0x0469f296
	41	[6139]	LOADK    	R9 K8 ; R9 := "GAME_C1_HEAD1"
	42	[6139]	CALL     	R8 2 2 ; R8 := R8(R9)
	43	[6141]	GETGLOBAL	R9 K9 ; R9 := _T
	44	[6141]	GETTABLE 	R9 R9 K10 ; R9 := R9["OperatorEyeTrack"]
	45	[6141]	EQ       	0 R9 K11 ; if R9 ~= nil then PC := 95
	46	[6141]	JMP      	95 ; PC := 95
	47	[6142]	GETGLOBAL	R9 K9 ; R9 := _T
	48	[6142]	NEWTABLE 	R10 0 5 ; R10 := {}
	49	[6142]	GETGLOBAL	R11 K13 ; R11 := 0x78ca68a2
	50	[6142]	LOADK    	R12 := 0.000000
	51	[6142]	LOADK    	R13 K14 ; R13 := 0.150000
	52	[6142]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	53	[6142]	SETTABLE 	R10 K12 R11 ; R10["X"] := R11
	54	[6143]	GETGLOBAL	R11 K13 ; R11 := 0x78ca68a2
	55	[6143]	LOADK    	R12 := 0.000000
	56	[6143]	LOADK    	R13 K14 ; R13 := 0.150000
	57	[6143]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	58	[6143]	SETTABLE 	R10 K15 R11 ; R10["Y"] := R11
	59	[6144]	SELF     	R11 R4 K17 ; R12 := R4; R11 := R4[0xea0832ea]
	60	[6144]	MOVE     	R13 R5 ; R13 := R5
	61	[6144]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	62	[6144]	SETTABLE 	R10 K16 R11 ; R10["InitialRot"] := R11
	63	[6145]	GETGLOBAL	R11 K19 ; R11 := 0x00046924
	64	[6145]	CALL     	R11 1 2 ; R11 := R11()
	65	[6145]	SETTABLE 	R10 K18 R11 ; R10["FinalRot"] := R11
	66	[6146]	SETTABLE 	R10 K20 K21 ; R10["LerpAmount"] := 0.000000
	67	[6146]	SETTABLE 	R9 K10 R10 ; R9["OperatorEyeTrack"] := R10
	68	[6147]	GETGLOBAL	R9 K9 ; R9 := _T
	69	[6147]	GETTABLE 	R9 R9 K10 ; R9 := R9["OperatorEyeTrack"]
	70	[6147]	GETTABLE 	R9 R9 K16 ; R9 := R9["InitialRot"]
	71	[6147]	GETGLOBAL	R10 K9 ; R10 := _T
	72	[6147]	GETTABLE 	R10 R10 K10 ; R10 := R10["OperatorEyeTrack"]
	73	[6147]	GETTABLE 	R10 R10 K16 ; R10 := R10["InitialRot"]
	74	[6147]	GETTABLE 	R10 R10 K22 ; R10 := R10["pitch"]
	75	[6147]	SUB      	R10 R10 K23 ; R10 := R10 - 12.000000
	76	[6147]	SETTABLE 	R9 K22 R10 ; R9["pitch"] := R10
	77	[6148]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	78	[6148]	GETGLOBAL	R10 K9 ; R10 := _T
	79	[6148]	GETTABLE 	R10 R10 K24 ; R10 := R10["defaultOperatorRot"]
	80	[6148]	CALL     	R9 2 2 ; R9 := R9(R10)
	81	[6148]	TEST     	R9 1 ; if R9 then PC := 95
	82	[6148]	JMP      	95 ; PC := 95
	83	[6149]	GETGLOBAL	R9 K9 ; R9 := _T
	84	[6149]	GETTABLE 	R9 R9 K10 ; R9 := R9["OperatorEyeTrack"]
	85	[6149]	GETTABLE 	R9 R9 K16 ; R9 := R9["InitialRot"]
	86	[6149]	GETGLOBAL	R10 K9 ; R10 := _T
	87	[6149]	GETTABLE 	R10 R10 K10 ; R10 := R10["OperatorEyeTrack"]
	88	[6149]	GETTABLE 	R10 R10 K16 ; R10 := R10["InitialRot"]
	89	[6149]	GETTABLE 	R10 R10 K25 ; R10 := R10["heading"]
	90	[6149]	GETGLOBAL	R11 K9 ; R11 := _T
	91	[6149]	GETTABLE 	R11 R11 K24 ; R11 := R11["defaultOperatorRot"]
	92	[6149]	GETTABLE 	R11 R11 K25 ; R11 := R11["heading"]
	93	[6149]	SUB      	R10 R10 R11 ; R10 := R10 - R11
	94	[6149]	SETTABLE 	R9 K25 R10 ; R9["heading"] := R10
	95	[6153]	GETGLOBAL	R9 K1 ; R9 := 0x89326c93
	96	[6153]	SELF     	R9 R9 K26 ; R10 := R9; R9 := R9[0xb4364067]
	97	[6153]	CALL     	R9 2 2 ; R9 := R9(R10)
	98	[6155]	SELF     	R10 R0 K27 ; R11 := R0; R10 := R0[0x906faf80]
	99	[6155]	CALL     	R10 2 2 ; R10 := R10(R11)
	100	[6156]	EQ       	1 R1 K11 ; if R1 == nil then PC := 103
	101	[6156]	JMP      	103 ; PC := 103
	102	[6157]	GETTABLE 	R10 R1 K28 ; R10 := R1["x"]
	103	[6159]	SELF     	R11 R0 K29 ; R12 := R0; R11 := R0[0x916fb113]
	104	[6159]	CALL     	R11 2 2 ; R11 := R11(R12)
	105	[6160]	EQ       	1 R1 K11 ; if R1 == nil then PC := 108
	106	[6160]	JMP      	108 ; PC := 108
	107	[6161]	GETTABLE 	R11 R1 K30 ; R11 := R1["y"]
	108	[6163]	SELF     	R12 R0 K31 ; R13 := R0; R12 := R0[0x6b837788]
	109	[6163]	CALL     	R12 2 2 ; R12 := R12(R13)
	110	[6163]	DIV      	R12 R10 R12 ; R12 := R10 / R12
	111	[6163]	MUL      	R12 R12 K32 ; R12 := R12 * 2.000000
	112	[6163]	SUB      	R12 R12 K33 ; R12 := R12 - 1.000000
	113	[6164]	SELF     	R13 R0 K34 ; R14 := R0; R13 := R0[0xaf9fda9f]
	114	[6164]	CALL     	R13 2 2 ; R13 := R13(R14)
	115	[6164]	DIV      	R13 R11 R13 ; R13 := R11 / R13
	116	[6164]	MUL      	R13 R13 K32 ; R13 := R13 * 2.000000
	117	[6164]	SUB      	R13 R13 K33 ; R13 := R13 - 1.000000
	118	[6166]	GETGLOBAL	R14 K35 ; R14 := 0xf7f90318
	119	[6166]	GETGLOBAL	R15 K36 ; R15 := 0x55156ff7
	120	[6166]	CALL     	R15 1 2 ; R15 := R15()
	121	[6166]	MUL      	R15 R15 K37 ; R15 := R15 * 0.100000
	122	[6166]	CALL     	R14 2 2 ; R14 := R14(R15)
	123	[6166]	MUL      	R14 R14 K37 ; R14 := R14 * 0.100000
	124	[6166]	ADD      	R12 R12 R14 ; R12 := R12 + R14
	125	[6167]	GETGLOBAL	R14 K35 ; R14 := 0xf7f90318
	126	[6167]	GETGLOBAL	R15 K36 ; R15 := 0x55156ff7
	127	[6167]	CALL     	R15 1 2 ; R15 := R15()
	128	[6167]	MUL      	R15 R15 K37 ; R15 := R15 * 0.100000
	129	[6167]	ADD      	R15 K38 R15 ; R15 := 7.000000 + R15
	130	[6167]	CALL     	R14 2 2 ; R14 := R14(R15)
	131	[6167]	MUL      	R14 R14 K37 ; R14 := R14 * 0.100000
	132	[6167]	ADD      	R13 R13 R14 ; R13 := R13 + R14
	133	[6169]	GETGLOBAL	R14 K9 ; R14 := _T
	134	[6169]	GETTABLE 	R14 R14 K10 ; R14 := R14["OperatorEyeTrack"]
	135	[6169]	GETTABLE 	R14 R14 K12 ; R14 := R14["X"]
	136	[6169]	SELF     	R14 R14 K39 ; R15 := R14; R14 := R14[0x188e2bee]
	137	[6169]	MOVE     	R16 R12 ; R16 := R12
	138	[6169]	CALL     	R14 3 1 ; R14(R15,R16)
	139	[6170]	GETGLOBAL	R14 K9 ; R14 := _T
	140	[6170]	GETTABLE 	R14 R14 K10 ; R14 := R14["OperatorEyeTrack"]
	141	[6170]	GETTABLE 	R14 R14 K15 ; R14 := R14["Y"]
	142	[6170]	SELF     	R14 R14 K39 ; R15 := R14; R14 := R14[0x188e2bee]
	143	[6170]	MOVE     	R16 R13 ; R16 := R13
	144	[6170]	CALL     	R14 3 1 ; R14(R15,R16)
	145	[6172]	GETGLOBAL	R14 K9 ; R14 := _T
	146	[6172]	GETTABLE 	R14 R14 K10 ; R14 := R14["OperatorEyeTrack"]
	147	[6172]	GETTABLE 	R14 R14 K12 ; R14 := R14["X"]
	148	[6172]	SELF     	R14 R14 K40 ; R15 := R14; R14 := R14[0xfaa69527]
	149	[6172]	GETGLOBAL	R16 K41 ; R16 := 0x67652851
	150	[6172]	CALL     	R16 1 0 ; R16,... := R16()
	151	[6172]	CALL     	R14 0 1 ; R14(R15,...)
	152	[6173]	GETGLOBAL	R14 K9 ; R14 := _T
	153	[6173]	GETTABLE 	R14 R14 K10 ; R14 := R14["OperatorEyeTrack"]
	154	[6173]	GETTABLE 	R14 R14 K15 ; R14 := R14["Y"]
	155	[6173]	SELF     	R14 R14 K40 ; R15 := R14; R14 := R14[0xfaa69527]
	156	[6173]	GETGLOBAL	R16 K41 ; R16 := 0x67652851
	157	[6173]	CALL     	R16 1 0 ; R16,... := R16()
	158	[6173]	CALL     	R14 0 1 ; R14(R15,...)
	159	[6175]	GETGLOBAL	R14 K42 ; R14 := 0xa421af95
	160	[6175]	GETGLOBAL	R15 K9 ; R15 := _T
	161	[6175]	GETTABLE 	R15 R15 K10 ; R15 := R15["OperatorEyeTrack"]
	162	[6175]	GETTABLE 	R15 R15 K12 ; R15 := R15["X"]
	163	[6175]	SELF     	R15 R15 K43 ; R16 := R15; R15 := R15[0x54ab95f9]
	164	[6175]	CALL     	R15 2 2 ; R15 := R15(R16)
	165	[6175]	MUL      	R15 R15 K44 ; R15 := R15 * 0.300000
	166	[6175]	GETGLOBAL	R16 K9 ; R16 := _T
	167	[6175]	GETTABLE 	R16 R16 K10 ; R16 := R16["OperatorEyeTrack"]
	168	[6175]	GETTABLE 	R16 R16 K15 ; R16 := R16["Y"]
	169	[6175]	SELF     	R16 R16 K43 ; R17 := R16; R16 := R16[0x54ab95f9]
	170	[6175]	CALL     	R16 2 2 ; R16 := R16(R17)
	171	[6175]	MUL      	R16 R16 K37 ; R16 := R16 * 0.100000
	172	[6175]	ADD      	R16 K45 R16 ; R16 := 0.025000 + R16
	173	[6175]	LOADK    	R17 := 0.000000
	174	[6175]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	175	[6176]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	176	[6176]	GETGLOBAL	R16 K9 ; R16 := _T
	177	[6176]	GETTABLE 	R16 R16 K24 ; R16 := R16["defaultOperatorRot"]
	178	[6176]	CALL     	R15 2 2 ; R15 := R15(R16)
	179	[6176]	TEST     	R15 1 ; if R15 then PC := 187
	180	[6176]	JMP      	187 ; PC := 187
	181	[6177]	GETGLOBAL	R15 K46 ; R15 := 0x492c7f2a
	182	[6177]	MOVE     	R16 R14 ; R16 := R14
	183	[6177]	GETGLOBAL	R17 K9 ; R17 := _T
	184	[6177]	GETTABLE 	R17 R17 K24 ; R17 := R17["defaultOperatorRot"]
	185	[6177]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	186	[6177]	MOVE     	R14 R15 ; R14 := R15
	187	[6179]	SELF     	R15 R9 K47 ; R16 := R9; R15 := R9[0xd1586535]
	188	[6179]	CALL     	R15 2 2 ; R15 := R15(R16)
	189	[6179]	SUB      	R15 R15 R14 ; R15 := R15 - R14
	190	[6180]	SELF     	R16 R4 K48 ; R17 := R4; R16 := R4[0x003c792f]
	191	[6180]	MOVE     	R18 R5 ; R18 := R5
	192	[6180]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	193	[6181]	GETGLOBAL	R17 K49 ; R17 := 0x20b7f774
	194	[6181]	MOVE     	R18 R16 ; R18 := R16
	195	[6181]	MOVE     	R19 R15 ; R19 := R15
	196	[6181]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	197	[6182]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	198	[6182]	GETGLOBAL	R19 K9 ; R19 := _T
	199	[6182]	GETTABLE 	R19 R19 K24 ; R19 := R19["defaultOperatorRot"]
	200	[6182]	CALL     	R18 2 2 ; R18 := R18(R19)
	201	[6182]	TEST     	R18 1 ; if R18 then PC := 209
	202	[6182]	JMP      	209 ; PC := 209
	203	[6183]	GETTABLE 	R18 R17 K25 ; R18 := R17["heading"]
	204	[6183]	GETGLOBAL	R19 K9 ; R19 := _T
	205	[6183]	GETTABLE 	R19 R19 K24 ; R19 := R19["defaultOperatorRot"]
	206	[6183]	GETTABLE 	R19 R19 K25 ; R19 := R19["heading"]
	207	[6183]	SUB      	R18 R18 R19 ; R18 := R18 - R19
	208	[6183]	SETTABLE 	R17 K25 R18 ; R17["heading"] := R18
	209	[6186]	GETGLOBAL	R18 K49 ; R18 := 0x20b7f774
	210	[6186]	MOVE     	R19 R16 ; R19 := R16
	211	[6186]	MOVE     	R20 R15 ; R20 := R15
	212	[6186]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	213	[6187]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	214	[6187]	GETGLOBAL	R20 K9 ; R20 := _T
	215	[6187]	GETTABLE 	R20 R20 K24 ; R20 := R20["defaultOperatorRot"]
	216	[6187]	CALL     	R19 2 2 ; R19 := R19(R20)
	217	[6187]	TEST     	R19 1 ; if R19 then PC := 225
	218	[6187]	JMP      	225 ; PC := 225
	219	[6188]	GETTABLE 	R19 R18 K25 ; R19 := R18["heading"]
	220	[6188]	GETGLOBAL	R20 K9 ; R20 := _T
	221	[6188]	GETTABLE 	R20 R20 K24 ; R20 := R20["defaultOperatorRot"]
	222	[6188]	GETTABLE 	R20 R20 K25 ; R20 := R20["heading"]
	223	[6188]	SUB      	R19 R19 R20 ; R19 := R19 - R20
	224	[6188]	SETTABLE 	R18 K25 R19 ; R18["heading"] := R19
	225	[6190]	GETGLOBAL	R19 K50 ; R19 := 0x42dcc9f5
	226	[6190]	GETTABLE 	R20 R18 K25 ; R20 := R18["heading"]
	227	[6190]	LOADK    	R21 := -10.000000
	228	[6190]	LOADK    	R22 := 10.000000
	229	[6190]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	230	[6190]	SETTABLE 	R18 K25 R19 ; R18["heading"] := R19
	231	[6191]	SELF     	R19 R4 K51 ; R20 := R4; R19 := R4[0x9437c71b]
	232	[6191]	MOVE     	R21 R6 ; R21 := R6
	233	[6191]	MOVE     	R22 R18 ; R22 := R18
	234	[6191]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	235	[6192]	SELF     	R19 R4 K51 ; R20 := R4; R19 := R4[0x9437c71b]
	236	[6192]	MOVE     	R21 R7 ; R21 := R7
	237	[6192]	MOVE     	R22 R18 ; R22 := R18
	238	[6192]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	239	[6194]	SELF     	R19 R4 K52 ; R20 := R4; R19 := R4[0xa390a429]
	240	[6194]	MOVE     	R21 R6 ; R21 := R6
	241	[6194]	OP_LOADBOOL	R22 1 0 ; R22 := true
	242	[6194]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	243	[6195]	SELF     	R19 R4 K52 ; R20 := R4; R19 := R4[0xa390a429]
	244	[6195]	MOVE     	R21 R7 ; R21 := R7
	245	[6195]	OP_LOADBOOL	R22 1 0 ; R22 := true
	246	[6195]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	247	[6197]	SELF     	R19 R4 K52 ; R20 := R4; R19 := R4[0xa390a429]
	248	[6197]	MOVE     	R21 R8 ; R21 := R8
	249	[6197]	OP_LOADBOOL	R22 1 0 ; R22 := true
	250	[6197]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	251	[6199]	GETTABLE 	R19 R17 K22 ; R19 := R17["pitch"]
	252	[6199]	SUB      	R19 R19 K53 ; R19 := R19 - 15.000000
	253	[6199]	SETTABLE 	R17 K22 R19 ; R17["pitch"] := R19
	254	[6200]	GETGLOBAL	R19 K9 ; R19 := _T
	255	[6200]	GETTABLE 	R19 R19 K10 ; R19 := R19["OperatorEyeTrack"]
	256	[6200]	GETGLOBAL	R20 K54 ; R20 := 0x5bced4c4
	257	[6200]	GETTABLE 	R20 R20 K55 ; R20 := R20[0xac1b386a]
	258	[6200]	LOADK    	R21 := 1.000000
	259	[6200]	GETGLOBAL	R22 K9 ; R22 := _T
	260	[6200]	GETTABLE 	R22 R22 K10 ; R22 := R22["OperatorEyeTrack"]
	261	[6200]	GETTABLE 	R22 R22 K20 ; R22 := R22["LerpAmount"]
	262	[6200]	GETGLOBAL	R23 K41 ; R23 := 0x67652851
	263	[6200]	CALL     	R23 1 2 ; R23 := R23()
	264	[6200]	ADD      	R22 R22 R23 ; R22 := R22 + R23
	265	[6200]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	266	[6200]	SETTABLE 	R19 K20 R20 ; R19["LerpAmount"] := R20
	267	[6201]	GETGLOBAL	R19 K56 ; R19 := 0x5e223e7d
	268	[6201]	GETGLOBAL	R20 K9 ; R20 := _T
	269	[6201]	GETTABLE 	R20 R20 K10 ; R20 := R20["OperatorEyeTrack"]
	270	[6201]	GETTABLE 	R20 R20 K16 ; R20 := R20["InitialRot"]
	271	[6201]	MOVE     	R21 R17 ; R21 := R17
	272	[6201]	GETGLOBAL	R22 K9 ; R22 := _T
	273	[6201]	GETTABLE 	R22 R22 K10 ; R22 := R22["OperatorEyeTrack"]
	274	[6201]	GETTABLE 	R22 R22 K20 ; R22 := R22["LerpAmount"]
	275	[6201]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	276	[6202]	GETGLOBAL	R20 K9 ; R20 := _T
	277	[6202]	GETTABLE 	R20 R20 K10 ; R20 := R20["OperatorEyeTrack"]
	278	[6202]	SETTABLE 	R20 K18 R19 ; R20["FinalRot"] := R19
	279	[6203]	SELF     	R20 R4 K57 ; R21 := R4; R20 := R4[0xb63fc1d8]
	280	[6203]	MOVE     	R22 R8 ; R22 := R8
	281	[6203]	MOVE     	R23 R19 ; R23 := R19
	282	[6203]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	283	[6205]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	284	[6205]	GETGLOBAL	R21 K9 ; R21 := _T
	285	[6205]	GETTABLE 	R21 R21 K58 ; R21 := R21["TennoSpeaking"]
	286	[6205]	CALL     	R20 2 2 ; R20 := R20(R21)
	287	[6205]	TEST     	R20 1 ; if R20 then PC := 293
	288	[6205]	JMP      	293 ; PC := 293
	289	[6207]	SELF     	R20 R4 K59 ; R21 := R4; R20 := R4[0x50b8a050]
	290	[6207]	GETGLOBAL	R22 K9 ; R22 := _T
	291	[6207]	GETTABLE 	R22 R22 K58 ; R22 := R22["TennoSpeaking"]
	292	[6207]	CALL     	R20 3 1 ; R20(R21,R22)
	293	[6209]	RETURN   	R0 1 ; return 

function #301 <?:6211,6217> (34 instructions, 136 bytes at 00000160C6839330)
1 param, 5 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[6212]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xed4e0128]
	2	[6212]	CALL     	R1 2 2 ; R1 := R1(R2)
	3	[6213]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	4	[6213]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	5	[6213]	MOVE     	R3 R1 ; R3 := R1
	6	[6213]	LOADK    	R4 K3 ; R4 := "Deluxe"
	7	[6213]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[6213]	EQ       	0 R2 K4 ; if R2 ~= nil then PC := 24
	9	[6213]	JMP      	24 ; PC := 24
	10	[6214]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	11	[6214]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	12	[6214]	MOVE     	R3 R1 ; R3 := R1
	13	[6214]	LOADK    	R4 K5 ; R4 := "ExcaliburProtoSuit"
	14	[6214]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	15	[6214]	EQ       	0 R2 K4 ; if R2 ~= nil then PC := 24
	16	[6214]	JMP      	24 ; PC := 24
	17	[6215]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	18	[6215]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	19	[6215]	MOVE     	R3 R1 ; R3 := R1
	20	[6215]	LOADK    	R4 K6 ; R4 := "NyxNemesisSuit"
	21	[6215]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	22	[6215]	EQ       	1 R2 K4 ; if R2 == nil then PC := 31
	23	[6215]	JMP      	31 ; PC := 31
	24	[6216]	GETGLOBAL	R2 K1 ; R2 := 0x7f5022cf
	25	[6216]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa5c556b9]
	26	[6216]	MOVE     	R3 R1 ; R3 := R1
	27	[6216]	LOADK    	R4 K7 ; R4 := "Operator"
	28	[6216]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	29	[6216]	EQ       	1 R2 K4 ; if R2 == nil then PC := 32
	30	[6216]	JMP      	32 ; PC := 32
	31	[6216]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 32
	32	[6216]	OP_LOADBOOL	R2 1 0 ; R2 := true
	33	[6216]	RETURN   	R2 2 ; return R2 
	34	[6217]	RETURN   	R0 1 ; return 

function #302 <?:6219,6242> (95 instructions, 380 bytes at 00000160C6839680)
10 params, 23 slots, 1 upvalue, 0 locals, 23 constants, 0 functions
	1	[6220]	SELF     	R10 R0 K0 ; R11 := R0; R10 := R0[0x5f56eeab]
	2	[6220]	MOVE     	R12 R2 ; R12 := R2
	3	[6220]	LOADK    	R13 := 29.000000
	4	[6220]	MOVE     	R14 R1 ; R14 := R1
	5	[6220]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	6	[6221]	SELF     	R10 R0 K0 ; R11 := R0; R10 := R0[0x5f56eeab]
	7	[6221]	MOVE     	R12 R3 ; R12 := R3
	8	[6221]	LOADK    	R13 := 29.000000
	9	[6221]	MOVE     	R14 R1 ; R14 := R1
	10	[6221]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	11	[6222]	GETGLOBAL	R10 K1 ; R10 := 0x38f10e85
	12	[6222]	MOVE     	R11 R0 ; R11 := R0
	13	[6222]	MOVE     	R12 R2 ; R12 := R2
	14	[6222]	LOADK    	R13 K2 ; R13 := ".setVertexColors"
	15	[6222]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	16	[6222]	MOVE     	R13 R4 ; R13 := R4
	17	[6222]	MOVE     	R14 R4 ; R14 := R4
	18	[6222]	MOVE     	R15 R6 ; R15 := R6
	19	[6222]	MOVE     	R16 R6 ; R16 := R6
	20	[6222]	CALL     	R10 7 1 ; R10(R11,R12,R13,R14,R15,R16)
	21	[6224]	GETUPVAL 	R10 U0 ; R10 := U0
	22	[6224]	GETTABLE 	R10 R10 K3 ; R10 := R10[0xb5be5d4a]
	23	[6224]	MOVE     	R11 R0 ; R11 := R0
	24	[6224]	MOVE     	R12 R3 ; R12 := R3
	25	[6224]	CALL     	R10 3 3 ; R10,R11 := R10(R11,R12)
	26	[6226]	SELF     	R12 R0 K4 ; R13 := R0; R12 := R0[0x91a24e4b]
	27	[6226]	MOVE     	R14 R3 ; R14 := R3
	28	[6226]	LOADK    	R15 := 13.000000
	29	[6226]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	30	[6226]	DIV      	R12 R12 K5 ; R12 := R12 / 2.000000
	31	[6226]	ADD      	R12 R11 R12 ; R12 := R11 + R12
	32	[6228]	GETUPVAL 	R13 U0 ; R13 := U0
	33	[6228]	GETTABLE 	R13 R13 K6 ; R13 := R13[0x6d7e6810]
	34	[6228]	MOVE     	R14 R0 ; R14 := R0
	35	[6228]	NEWTABLE 	R15 0 2 ; R15 := {}
	36	[6228]	SETTABLE 	R15 K7 K8 ; R15["x"] := 0.000000
	37	[6228]	ADD      	R16 R12 R7 ; R16 := R12 + R7
	38	[6228]	SETTABLE 	R15 K9 R16 ; R15["y"] := R16
	39	[6228]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	40	[6228]	GETTABLE 	R12 R13 K9 ; R12 := R13["y"]
	41	[6229]	SELF     	R13 R0 K10 ; R14 := R0; R13 := R0[0x6b837788]
	42	[6229]	CALL     	R13 2 2 ; R13 := R13(R14)
	43	[6230]	SELF     	R14 R0 K11 ; R15 := R0; R14 := R0[0xaf9fda9f]
	44	[6230]	CALL     	R14 2 2 ; R14 := R14(R15)
	45	[6231]	SELF     	R15 R0 K12 ; R16 := R0; R15 := R0[0x091c120e]
	46	[6231]	CALL     	R15 2 2 ; R15 := R15(R16)
	47	[6231]	LT       	1 R13 R15 ; if R13 < R15 then PC := 53
	48	[6231]	JMP      	53 ; PC := 53
	49	[6231]	SELF     	R15 R0 K13 ; R16 := R0; R15 := R0[0x2cc9d281]
	50	[6231]	CALL     	R15 2 2 ; R15 := R15(R16)
	51	[6231]	LT       	0 R14 R15 ; if R14 >= R15 then PC := 64
	52	[6231]	JMP      	64 ; PC := 64
	53	[6231]	GETGLOBAL	R15 K14 ; R15 := 0x34291f5c
	54	[6231]	GETTABLE 	R15 R15 K15 ; R15 := R15[0x056bfe8b]
	55	[6231]	CALL     	R15 1 2 ; R15 := R15()
	56	[6231]	TEST     	R15 1 ; if R15 then PC := 64
	57	[6231]	JMP      	64 ; PC := 64
	58	[6232]	SELF     	R15 R0 K12 ; R16 := R0; R15 := R0[0x091c120e]
	59	[6232]	CALL     	R15 2 2 ; R15 := R15(R16)
	60	[6232]	MOVE     	R13 R15 ; R13 := R15
	61	[6233]	SELF     	R15 R0 K13 ; R16 := R0; R15 := R0[0x2cc9d281]
	62	[6233]	CALL     	R15 2 2 ; R15 := R15(R16)
	63	[6233]	MOVE     	R14 R15 ; R14 := R15
	64	[6235]	DIV      	R8 R8 R14 ; R8 := R8 / R14
	65	[6236]	DIV      	R9 R9 R14 ; R9 := R9 / R14
	66	[6238]	SELF     	R15 R0 K16 ; R16 := R0; R15 := R0[0xd5181643]
	67	[6238]	MOVE     	R17 R3 ; R17 := R3
	68	[6238]	GETGLOBAL	R18 K17 ; R18 := 0x0032441c
	69	[6238]	GETTABLE 	R18 R18 K18 ; R18 := R18["UIMaterial_VerticalVisibilityRangeText"]
	70	[6238]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	71	[6239]	SELF     	R15 R0 K19 ; R16 := R0; R15 := R0[0x91e13703]
	72	[6239]	MOVE     	R17 R3 ; R17 := R3
	73	[6239]	LOADK    	R18 K20 ; R18 := "VisibilityCenter"
	74	[6239]	MOVE     	R19 R12 ; R19 := R12
	75	[6239]	LOADK    	R20 := 0.000000
	76	[6239]	LOADK    	R21 := 0.000000
	77	[6239]	LOADK    	R22 := 0.000000
	78	[6239]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	79	[6240]	SELF     	R15 R0 K19 ; R16 := R0; R15 := R0[0x91e13703]
	80	[6240]	MOVE     	R17 R3 ; R17 := R3
	81	[6240]	LOADK    	R18 K21 ; R18 := "VisibilitySize"
	82	[6240]	MOVE     	R19 R8 ; R19 := R8
	83	[6240]	LOADK    	R20 := 0.000000
	84	[6240]	LOADK    	R21 := 0.000000
	85	[6240]	LOADK    	R22 := 0.000000
	86	[6240]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	87	[6241]	SELF     	R15 R0 K19 ; R16 := R0; R15 := R0[0x91e13703]
	88	[6241]	MOVE     	R17 R3 ; R17 := R3
	89	[6241]	LOADK    	R18 K22 ; R18 := "VisibilityFadeSize"
	90	[6241]	MOVE     	R19 R9 ; R19 := R9
	91	[6241]	LOADK    	R20 := 0.000000
	92	[6241]	LOADK    	R21 := 0.000000
	93	[6241]	LOADK    	R22 := 0.000000
	94	[6241]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	95	[6242]	RETURN   	R0 1 ; return 

function #303 <?:6244,6273> (97 instructions, 388 bytes at 00000160C6839D00)
2 params, 17 slots, 0 upvalues, 0 locals, 19 constants, 0 functions
	1	[6245]	GETGLOBAL	R2 K0 ; R2 := 0x60130201
	2	[6245]	LOADK    	R3 := 232.000000
	3	[6245]	LOADK    	R4 := 145.000000
	4	[6245]	LOADK    	R5 := 58.000000
	5	[6245]	LOADK    	R6 := 255.000000
	6	[6245]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	7	[6246]	EQ       	0 R1 K1 ; if R1 ~= 2.000000 then PC := 16
	8	[6246]	JMP      	16 ; PC := 16
	9	[6247]	GETGLOBAL	R3 K0 ; R3 := 0x60130201
	10	[6247]	LOADK    	R4 := 62.000000
	11	[6247]	LOADK    	R5 := 196.000000
	12	[6247]	LOADK    	R6 := 221.000000
	13	[6247]	LOADK    	R7 := 255.000000
	14	[6247]	CALL     	R3 5 2 ; R3 := R3(R4,R5,R6,R7)
	15	[6247]	MOVE     	R2 R3 ; R2 := R3
	16	[6250]	SELF     	R3 R0 K2 ; R4 := R0; R3 := R0[0xde321e6f]
	17	[6250]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[6251]	NEWTABLE 	R4 0 0 ; R4 := {}
	19	[6252]	GETGLOBAL	R5 K3 ; R5 := 0x33bdd652
	20	[6252]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x23d5322f]
	21	[6252]	MOVE     	R6 R4 ; R6 := R4
	22	[6252]	SELF     	R7 R3 K5 ; R8 := R3; R7 := R3[0xe85a2361]
	23	[6252]	LOADK    	R9 := 1.000000
	24	[6252]	CALL     	R7 3 0 ; R7,... := R7(R8,R9)
	25	[6252]	CALL     	R5 0 1 ; R5(R6,...)
	26	[6253]	GETGLOBAL	R5 K3 ; R5 := 0x33bdd652
	27	[6253]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x23d5322f]
	28	[6253]	MOVE     	R6 R4 ; R6 := R4
	29	[6253]	SELF     	R7 R3 K5 ; R8 := R3; R7 := R3[0xe85a2361]
	30	[6253]	LOADK    	R9 := 0.000000
	31	[6253]	CALL     	R7 3 0 ; R7,... := R7(R8,R9)
	32	[6253]	CALL     	R5 0 1 ; R5(R6,...)
	33	[6254]	GETGLOBAL	R5 K3 ; R5 := 0x33bdd652
	34	[6254]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x23d5322f]
	35	[6254]	MOVE     	R6 R4 ; R6 := R4
	36	[6254]	SELF     	R7 R3 K5 ; R8 := R3; R7 := R3[0xe85a2361]
	37	[6254]	LOADK    	R9 := 5.000000
	38	[6254]	CALL     	R7 3 0 ; R7,... := R7(R8,R9)
	39	[6254]	CALL     	R5 0 1 ; R5(R6,...)
	40	[6255]	GETGLOBAL	R5 K3 ; R5 := 0x33bdd652
	41	[6255]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x23d5322f]
	42	[6255]	MOVE     	R6 R4 ; R6 := R4
	43	[6255]	SELF     	R7 R3 K7 ; R8 := R3; R7 := R3[0xf7d48ee0]
	44	[6255]	CALL     	R7 2 0 ; R7,... := R7(R8)
	45	[6255]	CALL     	R5 0 1 ; R5(R6,...)
	46	[6257]	GETGLOBAL	R5 K8 ; R5 := 0xc8802016
	47	[6257]	MOVE     	R6 R4 ; R6 := R4
	48	[6257]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	49	[6257]	JMP      	95 ; PC := 95
	50	[6258]	GETGLOBAL	R10 K9 ; R10 := 0x7b998233
	51	[6258]	MOVE     	R11 R9 ; R11 := R9
	52	[6258]	CALL     	R10 2 2 ; R10 := R10(R11)
	53	[6258]	TEST     	R10 1 ; if R10 then PC := 95
	54	[6258]	JMP      	95 ; PC := 95
	55	[6259]	SELF     	R10 R9 K10 ; R11 := R9; R10 := R9[0x68d708a7]
	56	[6259]	CALL     	R10 2 2 ; R10 := R10(R11)
	57	[6260]	SELF     	R11 R10 K11 ; R12 := R10; R11 := R10[0x8e62760a]
	58	[6260]	LOADK    	R13 := 0.000000
	59	[6260]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	60	[6261]	SELF     	R12 R11 K13 ; R13 := R11; R12 := R11[0xa3927fe9]
	61	[6261]	LOADK    	R14 := 6.000000
	62	[6261]	MOVE     	R15 R2 ; R15 := R2
	63	[6261]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	64	[6262]	SELF     	R12 R11 K14 ; R13 := R11; R12 := R11[0xfc5d7158]
	65	[6262]	LOADK    	R14 := 6.000000
	66	[6262]	OP_LOADBOOL	R15 1 0 ; R15 := true
	67	[6262]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	68	[6263]	SELF     	R12 R10 K15 ; R13 := R10; R12 := R10[0x199edf6e]
	69	[6263]	LOADK    	R14 := 0.000000
	70	[6263]	MOVE     	R15 R11 ; R15 := R11
	71	[6263]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	72	[6264]	SELF     	R12 R9 K16 ; R13 := R9; R12 := R9[0xf2deaf69]
	73	[6264]	GETGLOBAL	R14 K17 ; R14 := gPowerSuitType
	74	[6264]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	75	[6264]	TEST     	R12 0 ; if not R12 then PC := 92
	76	[6264]	JMP      	92 ; PC := 92
	77	[6265]	SELF     	R12 R10 K11 ; R13 := R10; R12 := R10[0x8e62760a]
	78	[6265]	LOADK    	R14 := 1.000000
	79	[6265]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	80	[6266]	SELF     	R13 R12 K13 ; R14 := R12; R13 := R12[0xa3927fe9]
	81	[6266]	LOADK    	R15 := 6.000000
	82	[6266]	MOVE     	R16 R2 ; R16 := R2
	83	[6266]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	84	[6267]	SELF     	R13 R12 K14 ; R14 := R12; R13 := R12[0xfc5d7158]
	85	[6267]	LOADK    	R15 := 6.000000
	86	[6267]	OP_LOADBOOL	R16 1 0 ; R16 := true
	87	[6267]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	88	[6268]	SELF     	R13 R10 K15 ; R14 := R10; R13 := R10[0x199edf6e]
	89	[6268]	LOADK    	R15 := 1.000000
	90	[6268]	MOVE     	R16 R12 ; R16 := R12
	91	[6268]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	92	[6270]	SELF     	R13 R9 K18 ; R14 := R9; R13 := R9[0xaa041663]
	93	[6270]	MOVE     	R15 R10 ; R15 := R10
	94	[6270]	CALL     	R13 3 1 ; R13(R14,R15)
	95	[6257]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 50; R7 := R8 end
	96	[6271]	JMP      	50 ; PC := 50
	97	[6273]	RETURN   	R0 1 ; return 

function #304 <?:6275,6277> (4 instructions, 16 bytes at 00000160C683A210)
0 params, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[6276]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[6276]	NEWTABLE 	R1 0 0 ; R1 := {}
	3	[6276]	SETTABLE 	R0 K1 R1 ; R0["QueuedTransmissions"] := R1
	4	[6277]	RETURN   	R0 1 ; return 

function #305 <?:6279,6292> (39 instructions, 156 bytes at 00000160C683A310)
1 param, 3 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[6280]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6280]	MOVE     	R2 R0 ; R2 := R0
	3	[6280]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6280]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6280]	JMP      	8 ; PC := 8
	6	[6281]	LOADNIL  	R1 R1 ; R1 := nil
	7	[6281]	RETURN   	R1 2 ; return R1 
	8	[6284]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	9	[6284]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x49d4c6fc]
	10	[6284]	CALL     	R1 1 2 ; R1 := R1()
	11	[6284]	TEST     	R1 0 ; if not R1 then PC := 24
	12	[6284]	JMP      	24 ; PC := 24
	13	[6284]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0x0f5a34d1]
	14	[6284]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[6284]	TEST     	R1 0 ; if not R1 then PC := 24
	16	[6284]	JMP      	24 ; PC := 24
	17	[6284]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0x1760dc5a]
	18	[6284]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[6284]	EQ       	1 R1 K5 ; if R1 == "" then PC := 24
	20	[6284]	JMP      	24 ; PC := 24
	21	[6285]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0x1760dc5a]
	22	[6285]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	23	[6285]	RETURN   	R1 0 ; return R1,... 
	24	[6288]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	25	[6288]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x9e503547]
	26	[6288]	CALL     	R1 1 2 ; R1 := R1()
	27	[6288]	TEST     	R1 0 ; if not R1 then PC := 36
	28	[6288]	JMP      	36 ; PC := 36
	29	[6288]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0xc87566df]
	30	[6288]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[6288]	EQ       	1 R1 K5 ; if R1 == "" then PC := 36
	32	[6288]	JMP      	36 ; PC := 36
	33	[6289]	SELF     	R1 R0 K7 ; R2 := R0; R1 := R0[0xc87566df]
	34	[6289]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	35	[6289]	RETURN   	R1 0 ; return R1,... 
	36	[6291]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x19865272]
	37	[6291]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	38	[6291]	RETURN   	R1 0 ; return R1,... 
	39	[6292]	RETURN   	R0 1 ; return 

function #306 <?:6295,6297> (5 instructions, 20 bytes at 00000160C683A5A0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6296]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6296]	MOVE     	R2 R0 ; R2 := R0
	3	[6296]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6296]	RETURN   	R1 2 ; return R1 
	5	[6297]	RETURN   	R0 1 ; return 

function #307 <?:6299,6315> (24 instructions, 96 bytes at 00000160C683A690)
1 param, 3 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[6300]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6300]	MOVE     	R2 R0 ; R2 := R0
	3	[6300]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6300]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6300]	JMP      	8 ; PC := 8
	6	[6301]	LOADNIL  	R1 R1 ; R1 := nil
	7	[6301]	RETURN   	R1 2 ; return R1 
	8	[6304]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[6304]	MOVE     	R2 R0 ; R2 := R0
	10	[6304]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[6304]	EQ       	0 R1 K1 ; if R1 ~= "" then PC := 15
	12	[6304]	JMP      	15 ; PC := 15
	13	[6305]	LOADNIL  	R1 R1 ; R1 := nil
	14	[6305]	RETURN   	R1 2 ; return R1 
	15	[6309]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	16	[6309]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xe6b41adb]
	17	[6309]	CALL     	R1 1 2 ; R1 := R1()
	18	[6309]	TEST     	R1 0 ; if not R1 then PC := 22
	19	[6309]	JMP      	22 ; PC := 22
	20	[6310]	LOADK    	R1 K4 ; R1 := "EXTERNAL"
	21	[6310]	RETURN   	R1 2 ; return R1 
	22	[6314]	LOADK    	R1 K5 ; R1 := "UNAVAILABLE"
	23	[6314]	RETURN   	R1 2 ; return R1 
	24	[6315]	RETURN   	R0 1 ; return 

function #308 <?:6317,6319> (5 instructions, 20 bytes at 00000160C683A8F0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6318]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6318]	MOVE     	R2 R0 ; R2 := R0
	3	[6318]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6318]	RETURN   	R1 2 ; return R1 
	5	[6319]	RETURN   	R0 1 ; return 

function #309 <?:6321,6357> (92 instructions, 368 bytes at 00000160C683A9E0)
1 param, 4 slots, 0 upvalues, 0 locals, 18 constants, 0 functions
	1	[6322]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6322]	MOVE     	R2 R0 ; R2 := R0
	3	[6322]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6322]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6322]	JMP      	8 ; PC := 8
	6	[6323]	LOADNIL  	R1 R1 ; R1 := nil
	7	[6323]	RETURN   	R1 2 ; return R1 
	8	[6326]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x0f5a34d1]
	9	[6326]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[6326]	TEST     	R1 0 ; if not R1 then PC := 39
	11	[6326]	JMP      	39 ; PC := 39
	12	[6327]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	13	[6327]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x49d4c6fc]
	14	[6327]	CALL     	R1 1 2 ; R1 := R1()
	15	[6327]	TEST     	R1 0 ; if not R1 then PC := 30
	16	[6327]	JMP      	30 ; PC := 30
	17	[6327]	GETGLOBAL	R1 K4 ; R1 := 0x76ea806b
	18	[6327]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x3f3ae64c]
	19	[6327]	LOADK    	R3 := 0.000000
	20	[6327]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	21	[6327]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xfe6131c3]
	22	[6327]	LOADK    	R3 K7 ; R3 := "steam_market"
	23	[6327]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	24	[6327]	TEST     	R1 1 ; if R1 then PC := 30
	25	[6327]	JMP      	30 ; PC := 30
	26	[6327]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x1760dc5a]
	27	[6327]	CALL     	R1 2 2 ; R1 := R1(R2)
	28	[6327]	EQ       	0 R1 K9 ; if R1 ~= "" then PC := 39
	29	[6327]	JMP      	39 ; PC := 39
	30	[6328]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	31	[6328]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x49d4c6fc]
	32	[6328]	CALL     	R1 1 2 ; R1 := R1()
	33	[6328]	TEST     	R1 1 ; if R1 then PC := 41
	34	[6328]	JMP      	41 ; PC := 41
	35	[6328]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x1760dc5a]
	36	[6328]	CALL     	R1 2 2 ; R1 := R1(R2)
	37	[6328]	EQ       	1 R1 K9 ; if R1 == "" then PC := 41
	38	[6328]	JMP      	41 ; PC := 41
	39	[6330]	LOADNIL  	R1 R1 ; R1 := nil
	40	[6330]	RETURN   	R1 2 ; return R1 
	41	[6333]	SELF     	R1 R0 K10 ; R2 := R0; R1 := R0[0x9dbbea0a]
	42	[6333]	CALL     	R1 2 2 ; R1 := R1(R2)
	43	[6333]	TEST     	R1 0 ; if not R1 then PC := 67
	44	[6333]	JMP      	67 ; PC := 67
	45	[6336]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	46	[6336]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x056bfe8b]
	47	[6336]	CALL     	R1 1 2 ; R1 := R1()
	48	[6336]	TEST     	R1 0 ; if not R1 then PC := 56
	49	[6336]	JMP      	56 ; PC := 56
	50	[6336]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x1760dc5a]
	51	[6336]	CALL     	R1 2 2 ; R1 := R1(R2)
	52	[6336]	EQ       	0 R1 K9 ; if R1 ~= "" then PC := 56
	53	[6336]	JMP      	56 ; PC := 56
	54	[6337]	LOADK    	R1 K12 ; R1 := "MARKET"
	55	[6337]	RETURN   	R1 2 ; return R1 
	56	[6339]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	57	[6339]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x056bfe8b]
	58	[6339]	CALL     	R1 1 2 ; R1 := R1()
	59	[6339]	TEST     	R1 0 ; if not R1 then PC := 67
	60	[6339]	JMP      	67 ; PC := 67
	61	[6339]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x1760dc5a]
	62	[6339]	CALL     	R1 2 2 ; R1 := R1(R2)
	63	[6339]	EQ       	1 R1 K9 ; if R1 == "" then PC := 67
	64	[6339]	JMP      	67 ; PC := 67
	65	[6340]	LOADK    	R1 K13 ; R1 := "UNAVAILABLE"
	66	[6340]	RETURN   	R1 2 ; return R1 
	67	[6344]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	68	[6344]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x49d4c6fc]
	69	[6344]	CALL     	R1 1 2 ; R1 := R1()
	70	[6344]	TEST     	R1 0 ; if not R1 then PC := 74
	71	[6344]	JMP      	74 ; PC := 74
	72	[6346]	LOADK    	R1 K14 ; R1 := "EXTERNAL"
	73	[6346]	RETURN   	R1 2 ; return R1 
	74	[6349]	SELF     	R1 R0 K15 ; R2 := R0; R1 := R0[0x2ce719d4]
	75	[6349]	CALL     	R1 2 2 ; R1 := R1(R2)
	76	[6349]	LT       	0 K16 R1 ; if 0.000000 >= R1 then PC := 90
	77	[6349]	JMP      	90 ; PC := 90
	78	[6349]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	79	[6349]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x056bfe8b]
	80	[6349]	CALL     	R1 1 2 ; R1 := R1()
	81	[6349]	TEST     	R1 1 ; if R1 then PC := 88
	82	[6349]	JMP      	88 ; PC := 88
	83	[6349]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	84	[6349]	GETTABLE 	R1 R1 K17 ; R1 := R1[0xa7a2e381]
	85	[6349]	CALL     	R1 1 2 ; R1 := R1()
	86	[6349]	TEST     	R1 0 ; if not R1 then PC := 90
	87	[6349]	JMP      	90 ; PC := 90
	88	[6352]	LOADK    	R1 K12 ; R1 := "MARKET"
	89	[6352]	RETURN   	R1 2 ; return R1 
	90	[6356]	LOADK    	R1 K13 ; R1 := "UNAVAILABLE"
	91	[6356]	RETURN   	R1 2 ; return R1 
	92	[6357]	RETURN   	R0 1 ; return 

function #310 <?:6360,6362> (5 instructions, 20 bytes at 00000160C683AED0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6361]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6361]	MOVE     	R2 R0 ; R2 := R0
	3	[6361]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6361]	RETURN   	R1 2 ; return R1 
	5	[6362]	RETURN   	R0 1 ; return 

function #311 <?:6364,6380> (23 instructions, 92 bytes at 00000160C683AFC0)
1 param, 3 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[6365]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[6365]	MOVE     	R2 R0 ; R2 := R0
	3	[6365]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6365]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6365]	JMP      	8 ; PC := 8
	6	[6366]	LOADNIL  	R1 R1 ; R1 := nil
	7	[6366]	RETURN   	R1 2 ; return R1 
	8	[6369]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xdaefcda4]
	9	[6369]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[6369]	EQ       	0 R1 K3 ; if R1 ~= 0.000000 then PC := 14
	11	[6369]	JMP      	14 ; PC := 14
	12	[6370]	LOADNIL  	R1 R1 ; R1 := nil
	13	[6370]	RETURN   	R1 2 ; return R1 
	14	[6373]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	15	[6373]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x9e503547]
	16	[6373]	CALL     	R1 1 2 ; R1 := R1()
	17	[6373]	TEST     	R1 0 ; if not R1 then PC := 21
	18	[6373]	JMP      	21 ; PC := 21
	19	[6375]	LOADK    	R1 K5 ; R1 := "EXTERNAL"
	20	[6375]	RETURN   	R1 2 ; return R1 
	21	[6379]	LOADK    	R1 K6 ; R1 := "UNAVAILABLE"
	22	[6379]	RETURN   	R1 2 ; return R1 
	23	[6380]	RETURN   	R0 1 ; return 

function #312 <?:6382,6384> (5 instructions, 20 bytes at 00000160C683B1B0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6383]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6383]	MOVE     	R2 R0 ; R2 := R0
	3	[6383]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6383]	RETURN   	R1 2 ; return R1 
	5	[6384]	RETURN   	R0 1 ; return 

function #313 <?:6386,6397> (36 instructions, 144 bytes at 00000160C683B2A0)
1 param, 4 slots, 4 upvalues, 0 locals, 5 constants, 0 functions
	1	[6387]	LOADK    	R1 K0 ; R1 := ""
	2	[6388]	GETGLOBAL	R2 K1 ; R2 := 0x34291f5c
	3	[6388]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xbcd06415]
	4	[6388]	CALL     	R2 1 2 ; R2 := R2()
	5	[6388]	TEST     	R2 0 ; if not R2 then PC := 12
	6	[6388]	JMP      	12 ; PC := 12
	7	[6389]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[6389]	MOVE     	R3 R0 ; R3 := R0
	9	[6389]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[6389]	MOVE     	R1 R2 ; R1 := R2
	11	[6389]	JMP      	26 ; PC := 26
	12	[6390]	GETGLOBAL	R2 K1 ; R2 := 0x34291f5c
	13	[6390]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xe6b41adb]
	14	[6390]	CALL     	R2 1 2 ; R2 := R2()
	15	[6390]	TEST     	R2 0 ; if not R2 then PC := 22
	16	[6390]	JMP      	22 ; PC := 22
	17	[6391]	GETUPVAL 	R2 U1 ; R2 := U1
	18	[6391]	MOVE     	R3 R0 ; R3 := R0
	19	[6391]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[6391]	MOVE     	R1 R2 ; R1 := R2
	21	[6391]	JMP      	26 ; PC := 26
	22	[6393]	GETUPVAL 	R2 U2 ; R2 := U2
	23	[6393]	MOVE     	R3 R0 ; R3 := R0
	24	[6393]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[6393]	MOVE     	R1 R2 ; R1 := R2
	26	[6396]	EQ       	0 R1 K4 ; if R1 ~= "EXTERNAL" then PC := 33
	27	[6396]	JMP      	33 ; PC := 33
	28	[6396]	GETUPVAL 	R2 U3 ; R2 := U3
	29	[6396]	MOVE     	R3 R0 ; R3 := R0
	30	[6396]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[6396]	EQ       	0 R2 K0 ; if R2 ~= "" then PC := 34
	32	[6396]	JMP      	34 ; PC := 34
	33	[6396]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 34
	34	[6396]	OP_LOADBOOL	R2 1 0 ; R2 := true
	35	[6396]	RETURN   	R2 2 ; return R2 
	36	[6397]	RETURN   	R0 1 ; return 

function #314 <?:6399,6401> (5 instructions, 20 bytes at 00000160C683B4D0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6400]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6400]	MOVE     	R2 R0 ; R2 := R0
	3	[6400]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6400]	RETURN   	R1 2 ; return R1 
	5	[6401]	RETURN   	R0 1 ; return 

function #315 <?:6403,6424> (65 instructions, 260 bytes at 00000160C683B5C0)
1 param, 8 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[6404]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[6405]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	3	[6405]	GETGLOBAL	R3 K1 ; R3 := 0x76ea806b
	4	[6405]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[6405]	TEST     	R2 1 ; if R2 then PC := 64
	6	[6405]	JMP      	64 ; PC := 64
	7	[6406]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	8	[6406]	MOVE     	R3 R0 ; R3 := R0
	9	[6406]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[6406]	TEST     	R2 1 ; if R2 then PC := 64
	11	[6406]	JMP      	64 ; PC := 64
	12	[6406]	SELF     	R2 R0 K2 ; R3 := R0; R2 := R0[0x331940f7]
	13	[6406]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[6406]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x56c01834]
	15	[6406]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[6406]	TEST     	R2 0 ; if not R2 then PC := 64
	17	[6406]	JMP      	64 ; PC := 64
	18	[6407]	SELF     	R2 R0 K2 ; R3 := R0; R2 := R0[0x331940f7]
	19	[6407]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[6407]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x6d604ba7]
	21	[6407]	CALL     	R2 2 2 ; R2 := R2(R3)
	22	[6408]	GETGLOBAL	R3 K5 ; R3 := 0x7f5022cf
	23	[6408]	GETTABLE 	R3 R3 K6 ; R3 := R3[0xa5c556b9]
	24	[6408]	MOVE     	R4 R2 ; R4 := R2
	25	[6408]	LOADK    	R5 K7 ; R5 := "twitch.amazon.com"
	26	[6408]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	27	[6408]	EQ       	0 R3 K8 ; if R3 ~= nil then PC := 36
	28	[6408]	JMP      	36 ; PC := 36
	29	[6408]	GETGLOBAL	R3 K5 ; R3 := 0x7f5022cf
	30	[6408]	GETTABLE 	R3 R3 K6 ; R3 := R3[0xa5c556b9]
	31	[6408]	MOVE     	R4 R2 ; R4 := R2
	32	[6408]	LOADK    	R5 K9 ; R5 := "gaming.amazon.com"
	33	[6408]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	34	[6408]	EQ       	1 R3 K8 ; if R3 == nil then PC := 64
	35	[6408]	JMP      	64 ; PC := 64
	36	[6409]	SELF     	R3 R0 K10 ; R4 := R0; R3 := R0[0xed4e0128]
	37	[6409]	CALL     	R3 2 2 ; R3 := R3(R4)
	38	[6410]	GETGLOBAL	R4 K1 ; R4 := 0x76ea806b
	39	[6410]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0xe03daba5]
	40	[6410]	CALL     	R4 2 2 ; R4 := R4(R5)
	41	[6411]	EQ       	1 R4 K12 ; if R4 == "RU" then PC := 47
	42	[6411]	JMP      	47 ; PC := 47
	43	[6411]	EQ       	1 R4 K13 ; if R4 == "CN" then PC := 47
	44	[6411]	JMP      	47 ; PC := 47
	45	[6411]	EQ       	0 R4 K14 ; if R4 ~= "KR" then PC := 56
	46	[6411]	JMP      	56 ; PC := 56
	47	[6412]	GETGLOBAL	R5 K5 ; R5 := 0x7f5022cf
	48	[6412]	GETTABLE 	R5 R5 K6 ; R5 := R5[0xa5c556b9]
	49	[6412]	MOVE     	R6 R3 ; R6 := R3
	50	[6412]	LOADK    	R7 K15 ; R7 := "NoLogo"
	51	[6412]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	52	[6412]	TEST     	R5 0 ; if not R5 then PC := 64
	53	[6412]	JMP      	64 ; PC := 64
	54	[6413]	OP_LOADBOOL	R1 1 0 ; R1 := true
	55	[6414]	JMP      	64 ; PC := 64
	56	[6416]	GETGLOBAL	R5 K5 ; R5 := 0x7f5022cf
	57	[6416]	GETTABLE 	R5 R5 K6 ; R5 := R5[0xa5c556b9]
	58	[6416]	MOVE     	R6 R3 ; R6 := R3
	59	[6416]	LOADK    	R7 K15 ; R7 := "NoLogo"
	60	[6416]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	61	[6416]	TEST     	R5 1 ; if R5 then PC := 64
	62	[6416]	JMP      	64 ; PC := 64
	63	[6417]	OP_LOADBOOL	R1 1 0 ; R1 := true
	64	[6423]	RETURN   	R1 2 ; return R1 
	65	[6424]	RETURN   	R0 1 ; return 

function #316 <?:6426,6428> (5 instructions, 20 bytes at 00000160C683BAE0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6427]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6427]	MOVE     	R2 R0 ; R2 := R0
	3	[6427]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[6427]	RETURN   	R1 2 ; return R1 
	5	[6428]	RETURN   	R0 1 ; return 

function #317 <?:6431,6451> (72 instructions, 288 bytes at 00000160C683BBD0)
2 params, 8 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[6432]	OP_LOADBOOL	R2 1 0 ; R2 := true
	2	[6433]	SELF     	R3 R0 K0 ; R4 := R0; R3 := R0[0xe0cffb75]
	3	[6433]	GETUPVAL 	R5 U0 ; R5 := U0
	4	[6433]	MOVE     	R6 R1 ; R6 := R1
	5	[6433]	CALL     	R5 2 0 ; R5,... := R5(R6)
	6	[6433]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	7	[6434]	SELF     	R4 R1 K1 ; R5 := R1; R4 := R1[0xdaefcda4]
	8	[6434]	CALL     	R4 2 2 ; R4 := R4(R5)
	9	[6434]	LT       	1 K3 R4 ; if 0.000000 < R4 then PC := 12
	10	[6434]	JMP      	12 ; PC := 12
	11	[6434]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 12
	12	[6434]	OP_LOADBOOL	R4 1 0 ; R4 := true
	13	[6436]	GETUPVAL 	R5 U1 ; R5 := U1
	14	[6436]	MOVE     	R6 R1 ; R6 := R1
	15	[6436]	CALL     	R5 2 2 ; R5 := R5(R6)
	16	[6436]	TEST     	R5 1 ; if R5 then PC := 71
	17	[6436]	JMP      	71 ; PC := 71
	18	[6437]	TEST     	R3 0 ; if not R3 then PC := 58
	19	[6437]	JMP      	58 ; PC := 58
	20	[6438]	SELF     	R5 R1 K1 ; R6 := R1; R5 := R1[0xdaefcda4]
	21	[6438]	CALL     	R5 2 2 ; R5 := R5(R6)
	22	[6438]	EQ       	0 R5 K4 ; if R5 ~= 2.000000 then PC := 29
	23	[6438]	JMP      	29 ; PC := 29
	24	[6438]	GETGLOBAL	R5 K2 ; R5 := 0x34291f5c
	25	[6438]	GETTABLE 	R5 R5 K5 ; R5 := R5[0xbcd06415]
	26	[6438]	CALL     	R5 1 2 ; R5 := R5()
	27	[6438]	TEST     	R5 0 ; if not R5 then PC := 56
	28	[6438]	JMP      	56 ; PC := 56
	29	[6439]	SELF     	R5 R1 K1 ; R6 := R1; R5 := R1[0xdaefcda4]
	30	[6439]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[6439]	EQ       	1 R5 K4 ; if R5 == 2.000000 then PC := 38
	32	[6439]	JMP      	38 ; PC := 38
	33	[6439]	GETGLOBAL	R5 K2 ; R5 := 0x34291f5c
	34	[6439]	GETTABLE 	R5 R5 K5 ; R5 := R5[0xbcd06415]
	35	[6439]	CALL     	R5 1 2 ; R5 := R5()
	36	[6439]	TEST     	R5 1 ; if R5 then PC := 56
	37	[6439]	JMP      	56 ; PC := 56
	38	[6440]	GETGLOBAL	R5 K2 ; R5 := 0x34291f5c
	39	[6440]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x49d4c6fc]
	40	[6440]	CALL     	R5 1 2 ; R5 := R5()
	41	[6440]	TEST     	R5 0 ; if not R5 then PC := 71
	42	[6440]	JMP      	71 ; PC := 71
	43	[6440]	SELF     	R5 R1 K7 ; R6 := R1; R5 := R1[0x1760dc5a]
	44	[6440]	CALL     	R5 2 2 ; R5 := R5(R6)
	45	[6440]	EQ       	0 R5 K8 ; if R5 ~= "" then PC := 71
	46	[6440]	JMP      	71 ; PC := 71
	47	[6440]	GETGLOBAL	R5 K9 ; R5 := 0x76ea806b
	48	[6440]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0x3f3ae64c]
	49	[6440]	LOADK    	R7 := 0.000000
	50	[6440]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	51	[6440]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0xfe6131c3]
	52	[6440]	LOADK    	R7 K12 ; R7 := "steam_market"
	53	[6440]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	54	[6440]	TEST     	R5 0 ; if not R5 then PC := 71
	55	[6440]	JMP      	71 ; PC := 71
	56	[6441]	OP_LOADBOOL	R2 0 0 ; R2 := false
	57	[6442]	JMP      	71 ; PC := 71
	58	[6443]	GETUPVAL 	R5 U2 ; R5 := U2
	59	[6443]	MOVE     	R6 R1 ; R6 := R1
	60	[6443]	CALL     	R5 2 2 ; R5 := R5(R6)
	61	[6443]	TEST     	R5 0 ; if not R5 then PC := 71
	62	[6443]	JMP      	71 ; PC := 71
	63	[6444]	GETGLOBAL	R5 K2 ; R5 := 0x34291f5c
	64	[6444]	GETTABLE 	R5 R5 K5 ; R5 := R5[0xbcd06415]
	65	[6444]	CALL     	R5 1 2 ; R5 := R5()
	66	[6444]	TEST     	R5 0 ; if not R5 then PC := 71
	67	[6444]	JMP      	71 ; PC := 71
	68	[6444]	TEST     	R4 1 ; if R4 then PC := 71
	69	[6444]	JMP      	71 ; PC := 71
	70	[6445]	OP_LOADBOOL	R2 0 0 ; R2 := false
	71	[6450]	RETURN   	R2 2 ; return R2 
	72	[6451]	RETURN   	R0 1 ; return 

function #318 <?:6453,6483> (68 instructions, 272 bytes at 00000160C683BFA0)
4 params, 18 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[6454]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[6454]	MOVE     	R5 R2 ; R5 := R2
	3	[6454]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[6454]	TEST     	R4 1 ; if R4 then PC := 11
	5	[6454]	JMP      	11 ; PC := 11
	6	[6454]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	7	[6454]	MOVE     	R5 R1 ; R5 := R1
	8	[6454]	CALL     	R4 2 2 ; R4 := R4(R5)
	9	[6454]	TEST     	R4 0 ; if not R4 then PC := 12
	10	[6454]	JMP      	12 ; PC := 12
	11	[6455]	RETURN   	R3 2 ; return R3 
	12	[6458]	MOVE     	R4 R3 ; R4 := R3
	13	[6459]	SELF     	R5 R1 K1 ; R6 := R1; R5 := R1[0x3ef3c120]
	14	[6459]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[6460]	LEN      	R6 R5 ; R6 := # R5
	16	[6460]	LT       	0 K2 R6 ; if 0.000000 >= R6 then PC := 67
	17	[6460]	JMP      	67 ; PC := 67
	18	[6461]	LOADK    	R6 K3 ; R6 := ""
	19	[6462]	OP_LOADBOOL	R7 0 0 ; R7 := false
	20	[6463]	GETTABLE 	R8 R2 K4 ; R8 := R2["mSockets"]
	21	[6463]	EQ       	1 R8 K5 ; if R8 == nil then PC := 44
	22	[6463]	JMP      	44 ; PC := 44
	23	[6464]	LOADK    	R8 := 1.000000
	24	[6464]	LEN      	R9 R5 ; R9 := # R5
	25	[6464]	LOADK    	R10 := 1.000000
	26	[6464]	FORPREP  	R8 43 ; R8 -= R10; PC := 43
	27	[6465]	SELF     	R12 R2 K6 ; R13 := R2; R12 := R2[0x2c626e13]
	28	[6465]	SUB      	R14 R11 K7 ; R14 := R11 - 1.000000
	29	[6465]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	30	[6465]	NOT      	R12 R12 ; R12 := not R12
	31	[6466]	TEST     	R7 1 ; if R7 then PC := 34
	32	[6466]	JMP      	34 ; PC := 34
	33	[6466]	NOT      	R7 R12 ; R7 := not R12
	34	[6467]	MOVE     	R13 R6 ; R13 := R6
	35	[6467]	GETUPVAL 	R14 U0 ; R14 := U0
	36	[6467]	GETTABLE 	R14 R14 K8 ; R14 := R14[0x06d055f9]
	37	[6467]	MOVE     	R15 R12 ; R15 := R12
	38	[6467]	LOADK    	R16 K9 ; R16 := "<TREASURE_GEM_OUTLINE>"
	39	[6467]	LOADK    	R17 K10 ; R17 := "<TREASURE_GEM>"
	40	[6467]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	41	[6467]	LOADK    	R15 K3 ; R15 := ""
	42	[6467]	CONCAT   	R6 R13 R15 ; R6 := R13 .. R14 .. R15
	43	[6464]	FORLOOP  	R8 27 ; R8 += R10; if R8 <= R9 then begin PC := 27; R11 := R8 end
	44	[6471]	TEST     	R7 0 ; if not R7 then PC := 67
	45	[6471]	JMP      	67 ; PC := 67
	46	[6472]	LOADK    	R13 K3 ; R13 := ""
	47	[6473]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	48	[6473]	MOVE     	R15 R0 ; R15 := R0
	49	[6473]	CALL     	R14 2 2 ; R14 := R14(R15)
	50	[6473]	TEST     	R14 1 ; if R14 then PC := 58
	51	[6473]	JMP      	58 ; PC := 58
	52	[6474]	SELF     	R14 R0 K11 ; R15 := R0; R14 := R0[0x42b04007]
	53	[6474]	MOVE     	R16 R6 ; R16 := R6
	54	[6474]	OP_LOADBOOL	R17 1 0 ; R17 := true
	55	[6474]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	56	[6474]	MOVE     	R13 R14 ; R13 := R14
	57	[6474]	JMP      	63 ; PC := 63
	58	[6476]	GETGLOBAL	R14 K12 ; R14 := 0x603636ad
	59	[6476]	MOVE     	R15 R6 ; R15 := R6
	60	[6476]	OP_LOADBOOL	R16 1 0 ; R16 := true
	61	[6476]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	62	[6476]	MOVE     	R13 R14 ; R13 := R14
	63	[6478]	MOVE     	R14 R4 ; R14 := R4
	64	[6478]	LOADK    	R15 K13 ; R15 := "   "
	65	[6478]	MOVE     	R16 R13 ; R16 := R13
	66	[6478]	CONCAT   	R4 R14 R16 ; R4 := R14 .. R15 .. R16
	67	[6482]	RETURN   	R4 2 ; return R4 
	68	[6483]	RETURN   	R0 1 ; return 

function #319 <?:6485,6487> (8 instructions, 32 bytes at 00000160C683C450)
0 params, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[6486]	GETGLOBAL	R0 K0 ; R0 := 0x5bced4c4
	2	[6486]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x55f27c30]
	3	[6486]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	4	[6486]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x715c5d7f]
	5	[6486]	CALL     	R1 2 0 ; R1,... := R1(R2)
	6	[6486]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[6486]	RETURN   	R0 2 ; return R0 
	8	[6487]	RETURN   	R0 1 ; return 

function #320 <?:6489,6491> (9 instructions, 36 bytes at 00000160C683C590)
0 params, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6490]	GETGLOBAL	R0 K0 ; R0 := 0x5bced4c4
	2	[6490]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x55f27c30]
	3	[6490]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	4	[6490]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x715c5d7f]
	5	[6490]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[6490]	DIV      	R1 R1 K4 ; R1 := R1 / 60.000000
	7	[6490]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[6490]	RETURN   	R0 2 ; return R0 
	9	[6491]	RETURN   	R0 1 ; return 

function #321 <?:6493,6495> (4 instructions, 16 bytes at 00000160C683C700)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6494]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6494]	CALL     	R0 1 2 ; R0 := R0()
	3	[6494]	RETURN   	R0 2 ; return R0 
	4	[6495]	RETURN   	R0 1 ; return 

function #322 <?:6497,6499> (9 instructions, 36 bytes at 00000160C683C7D0)
0 params, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6498]	GETGLOBAL	R0 K0 ; R0 := 0x5bced4c4
	2	[6498]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x55f27c30]
	3	[6498]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	4	[6498]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x715c5d7f]
	5	[6498]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[6498]	DIV      	R1 R1 K4 ; R1 := R1 / 3600.000000
	7	[6498]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[6498]	RETURN   	R0 2 ; return R0 
	9	[6499]	RETURN   	R0 1 ; return 

function #323 <?:6501,6503> (4 instructions, 16 bytes at 00000160C683C940)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6502]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6502]	CALL     	R0 1 2 ; R0 := R0()
	3	[6502]	RETURN   	R0 2 ; return R0 
	4	[6503]	RETURN   	R0 1 ; return 

function #324 <?:6505,6507> (9 instructions, 36 bytes at 00000160C683CA10)
0 params, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6506]	GETGLOBAL	R0 K0 ; R0 := 0x5bced4c4
	2	[6506]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x55f27c30]
	3	[6506]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	4	[6506]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x715c5d7f]
	5	[6506]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[6506]	DIV      	R1 R1 K4 ; R1 := R1 / 86400.000000
	7	[6506]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[6506]	RETURN   	R0 2 ; return R0 
	9	[6507]	RETURN   	R0 1 ; return 

function #325 <?:6509,6511> (4 instructions, 16 bytes at 00000160C683CB80)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6510]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6510]	CALL     	R0 1 2 ; R0 := R0()
	3	[6510]	RETURN   	R0 2 ; return R0 
	4	[6511]	RETURN   	R0 1 ; return 

function #326 <?:6513,6515> (9 instructions, 36 bytes at 00000160C683CC50)
0 params, 3 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6514]	GETGLOBAL	R0 K0 ; R0 := 0x5bced4c4
	2	[6514]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x55f27c30]
	3	[6514]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	4	[6514]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x715c5d7f]
	5	[6514]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[6514]	DIV      	R1 R1 K4 ; R1 := R1 / 604800.000000
	7	[6514]	CALL     	R0 2 2 ; R0 := R0(R1)
	8	[6514]	RETURN   	R0 2 ; return R0 
	9	[6515]	RETURN   	R0 1 ; return 

function #327 <?:6517,6577> (131 instructions, 524 bytes at 00000160C683CDC0)
1 param, 12 slots, 1 upvalue, 0 locals, 35 constants, 0 functions
	1	[6518]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[6520]	GETTABLE 	R2 R0 K0 ; R2 := R0["missionType"]
	3	[6521]	EQ       	0 R2 K2 ; if R2 ~= 18.000000 then PC := 10
	4	[6521]	JMP      	10 ; PC := 10
	5	[6522]	NEWTABLE 	R3 2 0 ; R3 := {}
	6	[6522]	LOADK    	R4 := 9.000000
	7	[6522]	LOADK    	R5 K3 ; R5 := "/Lotus/Language/Menu/NightmareModeName"
	8	[6522]	SETLIST  	R3 2 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
	9	[6522]	RETURN   	R3 2 ; return R3 
	10	[6525]	NEWTABLE 	R3 0 0 ; R3 := {}
	11	[6526]	GETGLOBAL	R4 K4 ; R4 := 0x33bdd652
	12	[6526]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x23d5322f]
	13	[6526]	MOVE     	R5 R3 ; R5 := R3
	14	[6526]	NEWTABLE 	R6 2 0 ; R6 := {}
	15	[6526]	LOADK    	R7 := 1.000000
	16	[6526]	LOADK    	R8 K6 ; R8 := "/Lotus/Language/Game/NightmareModeVampire"
	17	[6526]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	18	[6526]	CALL     	R4 3 1 ; R4(R5,R6)
	19	[6527]	GETGLOBAL	R4 K4 ; R4 := 0x33bdd652
	20	[6527]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x23d5322f]
	21	[6527]	MOVE     	R5 R3 ; R5 := R3
	22	[6527]	NEWTABLE 	R6 2 0 ; R6 := {}
	23	[6527]	LOADK    	R7 := 3.000000
	24	[6527]	LOADK    	R8 K7 ; R8 := "/Lotus/Language/Game/NightmareModeEnergyDrain"
	25	[6527]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	26	[6527]	CALL     	R4 3 1 ; R4(R5,R6)
	27	[6528]	GETGLOBAL	R4 K4 ; R4 := 0x33bdd652
	28	[6528]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x23d5322f]
	29	[6528]	MOVE     	R5 R3 ; R5 := R3
	30	[6528]	NEWTABLE 	R6 2 0 ; R6 := {}
	31	[6528]	LOADK    	R7 := 6.000000
	32	[6528]	LOADK    	R8 K8 ; R8 := "/Lotus/Language/Game/NightmareModeExplodingCorpses"
	33	[6528]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	34	[6528]	CALL     	R4 3 1 ; R4(R5,R6)
	35	[6532]	EQ       	1 R2 K9 ; if R2 == 8.000000 then PC := 63
	36	[6532]	JMP      	63 ; PC := 63
	37	[6533]	EQ       	1 R2 K10 ; if R2 == 9.000000 then PC := 63
	38	[6533]	JMP      	63 ; PC := 63
	39	[6534]	EQ       	1 R2 K11 ; if R2 == 2.000000 then PC := 63
	40	[6534]	JMP      	63 ; PC := 63
	41	[6535]	EQ       	1 R2 K12 ; if R2 == 32.000000 then PC := 63
	42	[6535]	JMP      	63 ; PC := 63
	43	[6536]	EQ       	1 R2 K13 ; if R2 == 4.000000 then PC := 63
	44	[6536]	JMP      	63 ; PC := 63
	45	[6537]	EQ       	1 R2 K14 ; if R2 == 3.000000 then PC := 63
	46	[6537]	JMP      	63 ; PC := 63
	47	[6538]	EQ       	1 R2 K15 ; if R2 == 0.000000 then PC := 63
	48	[6538]	JMP      	63 ; PC := 63
	49	[6539]	EQ       	1 R2 K16 ; if R2 == 33.000000 then PC := 63
	50	[6539]	JMP      	63 ; PC := 63
	51	[6540]	EQ       	1 R2 K17 ; if R2 == 34.000000 then PC := 63
	52	[6540]	JMP      	63 ; PC := 63
	53	[6541]	EQ       	1 R2 K18 ; if R2 == 35.000000 then PC := 63
	54	[6541]	JMP      	63 ; PC := 63
	55	[6542]	GETGLOBAL	R4 K4 ; R4 := 0x33bdd652
	56	[6542]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x23d5322f]
	57	[6542]	MOVE     	R5 R3 ; R5 := R3
	58	[6542]	NEWTABLE 	R6 2 0 ; R6 := {}
	59	[6542]	LOADK    	R7 := 0.000000
	60	[6542]	LOADK    	R8 K19 ; R8 := "/Lotus/Language/Game/NightmareModeTimed"
	61	[6542]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	62	[6542]	CALL     	R4 3 1 ; R4(R5,R6)
	63	[6546]	EQ       	1 R2 K15 ; if R2 == 0.000000 then PC := 65
	64	[6546]	JMP      	65 ; PC := 65
	65	[6551]	EQ       	1 R2 K20 ; if R2 == 14.000000 then PC := 75
	66	[6551]	JMP      	75 ; PC := 75
	67	[6552]	GETGLOBAL	R4 K4 ; R4 := 0x33bdd652
	68	[6552]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x23d5322f]
	69	[6552]	MOVE     	R5 R3 ; R5 := R3
	70	[6552]	NEWTABLE 	R6 2 0 ; R6 := {}
	71	[6552]	LOADK    	R7 := 4.000000
	72	[6552]	LOADK    	R8 K21 ; R8 := "/Lotus/Language/Game/NightmareModeNoShield"
	73	[6552]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	74	[6552]	CALL     	R4 3 1 ; R4(R5,R6)
	75	[6556]	GETGLOBAL	R4 K22 ; R4 := 0xffd438ab
	76	[6556]	CALL     	R4 1 2 ; R4 := R4()
	77	[6557]	GETGLOBAL	R5 K23 ; R5 := 0x0997dbe6
	78	[6557]	GETGLOBAL	R6 K24 ; R6 := 0xf1f5e051
	79	[6557]	GETGLOBAL	R7 K25 ; R7 := 0x64fb1586
	80	[6557]	GETTABLE 	R8 R0 K26 ; R8 := R0["location"]
	81	[6557]	CALL     	R7 2 0 ; R7,... := R7(R8)
	82	[6557]	CALL     	R6 0 0 ; R6,... := R6(R7,...)
	83	[6557]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	84	[6558]	GETGLOBAL	R6 K27 ; R6 := 0x84883f05
	85	[6558]	MOVE     	R7 R5 ; R7 := R5
	86	[6558]	GETUPVAL 	R8 U0 ; R8 := U0
	87	[6558]	CALL     	R8 1 2 ; R8 := R8()
	88	[6558]	MOD      	R8 R8 K28 ; R8 := R8 % 365.000000
	89	[6558]	CALL     	R6 3 1 ; R6(R7,R8)
	90	[6560]	GETGLOBAL	R6 K29 ; R6 := 0x0c5e62f9
	91	[6560]	LOADK    	R7 := 1.000000
	92	[6560]	LEN      	R8 R3 ; R8 := # R3
	93	[6560]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	94	[6563]	GETGLOBAL	R7 K4 ; R7 := 0x33bdd652
	95	[6563]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x23d5322f]
	96	[6563]	MOVE     	R8 R1 ; R8 := R1
	97	[6563]	GETTABLE 	R9 R3 R6 ; R9 := R3[R6]
	98	[6563]	CALL     	R7 3 1 ; R7(R8,R9)
	99	[6566]	GETGLOBAL	R7 K29 ; R7 := 0x0c5e62f9
	100	[6566]	LOADK    	R8 := 0.000000
	101	[6566]	LOADK    	R9 := 2.000000
	102	[6566]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	103	[6566]	EQ       	0 R7 K30 ; if R7 ~= -1.000000 then PC := 113
	104	[6566]	JMP      	113 ; PC := 113
	105	[6567]	GETGLOBAL	R7 K4 ; R7 := 0x33bdd652
	106	[6567]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x23d5322f]
	107	[6567]	MOVE     	R8 R1 ; R8 := R1
	108	[6567]	NEWTABLE 	R9 2 0 ; R9 := {}
	109	[6567]	LOADK    	R10 := 2.000000
	110	[6567]	LOADK    	R11 K31 ; R11 := "/Lotus/Language/Game/NightmareModeNoHud"
	111	[6567]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	112	[6567]	CALL     	R7 3 1 ; R7(R8,R9)
	113	[6570]	GETGLOBAL	R7 K29 ; R7 := 0x0c5e62f9
	114	[6570]	LOADK    	R8 := 0.000000
	115	[6570]	LOADK    	R9 := 3.000000
	116	[6570]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	117	[6570]	EQ       	0 R7 K32 ; if R7 ~= 1.000000 then PC := 127
	118	[6570]	JMP      	127 ; PC := 127
	119	[6571]	GETGLOBAL	R7 K4 ; R7 := 0x33bdd652
	120	[6571]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x23d5322f]
	121	[6571]	MOVE     	R8 R1 ; R8 := R1
	122	[6571]	NEWTABLE 	R9 2 0 ; R9 := {}
	123	[6571]	LOADK    	R10 := 8.000000
	124	[6571]	LOADK    	R11 K33 ; R11 := "/Lotus/Language/Game/NightmareModeLowGrav"
	125	[6571]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	126	[6571]	CALL     	R7 3 1 ; R7(R8,R9)
	127	[6574]	GETGLOBAL	R7 K34 ; R7 := 0x4f6851ff
	128	[6574]	MOVE     	R8 R4 ; R8 := R4
	129	[6574]	CALL     	R7 2 1 ; R7(R8)
	130	[6576]	RETURN   	R1 2 ; return R1 
	131	[6577]	RETURN   	R0 1 ; return 

function #328 <?:6579,6602> (43 instructions, 172 bytes at 00000160C683D7A0)
0 params, 13 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[6580]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[6582]	GETGLOBAL	R1 K0 ; R1 := 0x25d99d89
	3	[6583]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	4	[6583]	MOVE     	R3 R1 ; R3 := R1
	5	[6583]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[6583]	TEST     	R2 0 ; if not R2 then PC := 9
	7	[6583]	JMP      	9 ; PC := 9
	8	[6584]	RETURN   	R0 2 ; return R0 
	9	[6587]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x25a6e75e]
	10	[6587]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[6588]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	12	[6588]	MOVE     	R4 R2 ; R4 := R2
	13	[6588]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[6588]	TEST     	R3 0 ; if not R3 then PC := 17
	15	[6588]	JMP      	17 ; PC := 17
	16	[6589]	RETURN   	R0 2 ; return R0 
	17	[6592]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0x98b1bb53]
	18	[6592]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[6593]	GETGLOBAL	R4 K4 ; R4 := gRandomizedArtifactUpgradeType
	20	[6594]	LOADK    	R5 := 1.000000
	21	[6594]	LEN      	R6 R3 ; R6 := # R3
	22	[6594]	LOADK    	R7 := 1.000000
	23	[6594]	FORPREP  	R5 41 ; R5 -= R7; PC := 41
	24	[6595]	GETTABLE 	R9 R3 R8 ; R9 := R3[R8]
	25	[6595]	GETTABLE 	R9 R9 K5 ; R9 := R9["mItemType"]
	26	[6596]	GETGLOBAL	R10 K1 ; R10 := 0x7b998233
	27	[6596]	MOVE     	R11 R9 ; R11 := R9
	28	[6596]	CALL     	R10 2 2 ; R10 := R10(R11)
	29	[6596]	TEST     	R10 1 ; if R10 then PC := 41
	30	[6596]	JMP      	41 ; PC := 41
	31	[6596]	SELF     	R10 R9 K6 ; R11 := R9; R10 := R9[0xf2deaf69]
	32	[6596]	MOVE     	R12 R4 ; R12 := R4
	33	[6596]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	34	[6596]	TEST     	R10 0 ; if not R10 then PC := 41
	35	[6596]	JMP      	41 ; PC := 41
	36	[6597]	GETGLOBAL	R10 K7 ; R10 := 0x33bdd652
	37	[6597]	GETTABLE 	R10 R10 K8 ; R10 := R10[0x23d5322f]
	38	[6597]	MOVE     	R11 R0 ; R11 := R0
	39	[6597]	GETTABLE 	R12 R3 R8 ; R12 := R3[R8]
	40	[6597]	CALL     	R10 3 1 ; R10(R11,R12)
	41	[6594]	FORLOOP  	R5 24 ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
	42	[6601]	RETURN   	R0 2 ; return R0 
	43	[6602]	RETURN   	R0 1 ; return 

function #329 <?:6604,6606> (4 instructions, 16 bytes at 00000160C683DA50)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6605]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6605]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[6605]	RETURN   	R0 0 ; return R0,... 
	4	[6606]	RETURN   	R0 1 ; return 

function #330 <?:6608,6620> (28 instructions, 112 bytes at 00000160C683DB20)
0 params, 4 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[6609]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[6610]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	3	[6610]	MOVE     	R2 R0 ; R2 := R0
	4	[6610]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[6610]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[6610]	JMP      	9 ; PC := 9
	7	[6611]	OP_LOADBOOL	R1 0 0 ; R1 := false
	8	[6611]	RETURN   	R1 2 ; return R1 
	9	[6614]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x25a6e75e]
	10	[6614]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[6615]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	12	[6615]	MOVE     	R3 R1 ; R3 := R1
	13	[6615]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[6615]	TEST     	R2 0 ; if not R2 then PC := 18
	15	[6615]	JMP      	18 ; PC := 18
	16	[6616]	OP_LOADBOOL	R2 0 0 ; R2 := false
	17	[6616]	RETURN   	R2 2 ; return R2 
	18	[6619]	GETUPVAL 	R2 U0 ; R2 := U0
	19	[6619]	CALL     	R2 1 2 ; R2 := R2()
	20	[6619]	LEN      	R2 R2 ; R2 := # R2
	21	[6619]	GETUPVAL 	R3 U1 ; R3 := U1
	22	[6619]	CALL     	R3 1 2 ; R3 := R3()
	23	[6619]	LT       	1 R3 R2 ; if R3 < R2 then PC := 26
	24	[6619]	JMP      	26 ; PC := 26
	25	[6619]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 26
	26	[6619]	OP_LOADBOOL	R2 1 0 ; R2 := true
	27	[6619]	RETURN   	R2 2 ; return R2 
	28	[6620]	RETURN   	R0 1 ; return 

function #331 <?:6622,6624> (4 instructions, 16 bytes at 00000160C683DCF0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6623]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6623]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[6623]	RETURN   	R0 0 ; return R0,... 
	4	[6624]	RETURN   	R0 1 ; return 

function #332 <?:6626,6637> (21 instructions, 84 bytes at 00000160C683DDC0)
0 params, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[6627]	LOADK    	R0 := 0.000000
	2	[6628]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	3	[6628]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	4	[6628]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[6628]	TEST     	R1 1 ; if R1 then PC := 20
	6	[6628]	JMP      	20 ; PC := 20
	7	[6629]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	8	[6629]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x25a6e75e]
	9	[6629]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[6630]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	11	[6630]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xefee6c91]
	12	[6630]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[6631]	SELF     	R3 R1 K4 ; R4 := R1; R3 := R1[0xa64e07df]
	14	[6631]	LOADK    	R5 := 7.000000
	15	[6631]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	16	[6631]	MOVE     	R0 R3 ; R0 := R3
	17	[6632]	LE       	0 K6 R2 ; if 30.000000 > R2 then PC := 20
	18	[6632]	JMP      	20 ; PC := 20
	19	[6633]	ADD      	R0 R0 K6 ; R0 := R0 + 30.000000
	20	[6636]	RETURN   	R0 2 ; return R0 
	21	[6637]	RETURN   	R0 1 ; return 

function #333 <?:6639,6641> (4 instructions, 16 bytes at 00000160C683DFB0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6640]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6640]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[6640]	RETURN   	R0 0 ; return R0,... 
	4	[6641]	RETURN   	R0 1 ; return 

function #334 <?:6643,6656> (23 instructions, 92 bytes at 00000160C683E080)
2 params, 7 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[6644]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0xb61abfd2]
	2	[6644]	LOADK    	R4 := 0.000000
	3	[6644]	LOADK    	R5 := 0.000000
	4	[6644]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	5	[6644]	GETTABLE 	R2 R2 K2 ; R2 := R2["mInfestationDate"]
	6	[6646]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0x56c01834]
	7	[6646]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[6646]	TEST     	R3 0 ; if not R3 then PC := 21
	9	[6646]	JMP      	21 ; PC := 21
	10	[6648]	LOADK    	R3 := -86400.000000
	11	[6649]	GETGLOBAL	R4 K4 ; R4 := 0x34291f5c
	12	[6649]	GETTABLE 	R4 R4 K5 ; R4 := R4[0x397b920f]
	13	[6649]	MOVE     	R5 R2 ; R5 := R2
	14	[6649]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[6650]	MUL      	R5 R3 R1 ; R5 := R3 * R1
	16	[6650]	LE       	1 R4 R5 ; if R4 <= R5 then PC := 19
	17	[6650]	JMP      	19 ; PC := 19
	18	[6650]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 19
	19	[6650]	OP_LOADBOOL	R5 1 0 ; R5 := true
	20	[6652]	RETURN   	R5 2 ; return R5 
	21	[6655]	OP_LOADBOOL	R6 0 0 ; R6 := false
	22	[6655]	RETURN   	R6 2 ; return R6 
	23	[6656]	RETURN   	R0 1 ; return 

function #335 <?:6658,6661> (7 instructions, 28 bytes at 00000160C683E2A0)
1 param, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6659]	LOADK    	R1 := 1.000000
	2	[6660]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[6660]	MOVE     	R3 R0 ; R3 := R0
	4	[6660]	MOVE     	R4 R1 ; R4 := R1
	5	[6660]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	6	[6660]	RETURN   	R2 0 ; return R2,... 
	7	[6661]	RETURN   	R0 1 ; return 

function #336 <?:6663,6666> (7 instructions, 28 bytes at 00000160C683E390)
1 param, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6664]	LOADK    	R1 := 7.000000
	2	[6665]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[6665]	MOVE     	R3 R0 ; R3 := R0
	4	[6665]	MOVE     	R4 R1 ; R4 := R1
	5	[6665]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	6	[6665]	RETURN   	R2 0 ; return R2,... 
	7	[6666]	RETURN   	R0 1 ; return 

function #337 <?:6668,6697> (54 instructions, 216 bytes at 00000160C683E480)
1 param, 5 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[6669]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[6669]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xa7a2e381]
	3	[6669]	CALL     	R1 1 2 ; R1 := R1()
	4	[6669]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6669]	JMP      	8 ; PC := 8
	6	[6670]	OP_LOADBOOL	R1 0 0 ; R1 := false
	7	[6670]	RETURN   	R1 2 ; return R1 
	8	[6673]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	9	[6673]	MOVE     	R2 R0 ; R2 := R0
	10	[6673]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[6673]	TEST     	R1 0 ; if not R1 then PC := 21
	12	[6673]	JMP      	21 ; PC := 21
	13	[6674]	GETGLOBAL	R0 K3 ; R0 := 0x25d99d89
	14	[6676]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	15	[6676]	MOVE     	R2 R0 ; R2 := R0
	16	[6676]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[6676]	TEST     	R1 0 ; if not R1 then PC := 21
	18	[6676]	JMP      	21 ; PC := 21
	19	[6677]	OP_LOADBOOL	R1 0 0 ; R1 := false
	20	[6677]	RETURN   	R1 2 ; return R1 
	21	[6681]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xfb6d14df]
	22	[6681]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[6681]	TEST     	R1 0 ; if not R1 then PC := 27
	24	[6681]	JMP      	27 ; PC := 27
	25	[6682]	OP_LOADBOOL	R1 0 0 ; R1 := false
	26	[6682]	RETURN   	R1 2 ; return R1 
	27	[6685]	GETGLOBAL	R1 K5 ; R1 := 0x89326c93
	28	[6685]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x78298275]
	29	[6685]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[6686]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	31	[6686]	MOVE     	R3 R1 ; R3 := R1
	32	[6686]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[6686]	TEST     	R2 0 ; if not R2 then PC := 37
	34	[6686]	JMP      	37 ; PC := 37
	35	[6687]	OP_LOADBOOL	R2 0 0 ; R2 := false
	36	[6687]	RETURN   	R2 2 ; return R2 
	37	[6690]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0xde321e6f]
	38	[6690]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[6690]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xf7d48ee0]
	40	[6690]	CALL     	R2 2 2 ; R2 := R2(R3)
	41	[6691]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	42	[6691]	MOVE     	R4 R2 ; R4 := R2
	43	[6691]	CALL     	R3 2 2 ; R3 := R3(R4)
	44	[6691]	TEST     	R3 1 ; if R3 then PC := 50
	45	[6691]	JMP      	50 ; PC := 50
	46	[6691]	SELF     	R3 R2 K9 ; R4 := R2; R3 := R2[0x1ba58c7f]
	47	[6691]	CALL     	R3 2 2 ; R3 := R3(R4)
	48	[6691]	TEST     	R3 0 ; if not R3 then PC := 52
	49	[6691]	JMP      	52 ; PC := 52
	50	[6692]	OP_LOADBOOL	R3 0 0 ; R3 := false
	51	[6692]	RETURN   	R3 2 ; return R3 
	52	[6696]	OP_LOADBOOL	R3 1 0 ; R3 := true
	53	[6696]	RETURN   	R3 2 ; return R3 
	54	[6697]	RETURN   	R0 1 ; return 

function #338 <?:6699,6710> (55 instructions, 220 bytes at 00000160C683E7A0)
2 params, 13 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[6700]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[6700]	MOVE     	R3 R0 ; R3 := R0
	3	[6700]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[6700]	TEST     	R2 1 ; if R2 then PC := 55
	5	[6700]	JMP      	55 ; PC := 55
	6	[6700]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[6700]	MOVE     	R3 R1 ; R3 := R1
	8	[6700]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[6700]	TEST     	R2 1 ; if R2 then PC := 55
	10	[6700]	JMP      	55 ; PC := 55
	11	[6701]	SELF     	R2 R1 K1 ; R3 := R1; R2 := R1[0x3583ccf1]
	12	[6701]	GETGLOBAL	R4 K2 ; R4 := 0x67652851
	13	[6701]	CALL     	R4 1 2 ; R4 := R4()
	14	[6701]	MOVE     	R5 R0 ; R5 := R0
	15	[6701]	OP_LOADBOOL	R6 0 0 ; R6 := false
	16	[6701]	SELF     	R7 R0 K3 ; R8 := R0; R7 := R0[0x1bda579e]
	17	[6701]	CALL     	R7 2 0 ; R7,... := R7(R8)
	18	[6701]	CALL     	R2 0 1 ; R2(R3,...)
	19	[6702]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0x603d617e]
	20	[6702]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[6703]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	22	[6703]	MOVE     	R4 R2 ; R4 := R2
	23	[6703]	CALL     	R3 2 2 ; R3 := R3(R4)
	24	[6703]	TEST     	R3 1 ; if R3 then PC := 55
	25	[6703]	JMP      	55 ; PC := 55
	26	[6704]	GETGLOBAL	R3 K5 ; R3 := 0x03ea2485
	27	[6704]	SELF     	R4 R0 K6 ; R5 := R0; R4 := R0[0xde321e6f]
	28	[6704]	CALL     	R4 2 2 ; R4 := R4(R5)
	29	[6704]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0xefd0fde2]
	30	[6704]	CALL     	R4 2 2 ; R4 := R4(R5)
	31	[6704]	SELF     	R5 R0 K8 ; R6 := R0; R5 := R0[0xebfba9e4]
	32	[6704]	CALL     	R5 2 0 ; R5,... := R5(R6)
	33	[6704]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	34	[6705]	GETGLOBAL	R4 K9 ; R4 := 0x5bced4c4
	35	[6705]	GETTABLE 	R4 R4 K10 ; R4 := R4[0x55f27c30]
	36	[6705]	MOVE     	R5 R3 ; R5 := R3
	37	[6705]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[6706]	GETGLOBAL	R5 K9 ; R5 := 0x5bced4c4
	39	[6706]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x55f27c30]
	40	[6706]	MUL      	R6 R3 K11 ; R6 := R3 * 10.000000
	41	[6706]	MUL      	R7 R4 K11 ; R7 := R4 * 10.000000
	42	[6706]	SUB      	R6 R6 R7 ; R6 := R6 - R7
	43	[6706]	CALL     	R5 2 2 ; R5 := R5(R6)
	44	[6707]	SELF     	R6 R2 K12 ; R7 := R2; R6 := R2[0xe4162eed]
	45	[6707]	LOADK    	R8 K13 ; R8 := "UpdateRangeFinder"
	46	[6707]	GETGLOBAL	R9 K14 ; R9 := 0x64fb1586
	47	[6707]	MOVE     	R10 R4 ; R10 := R4
	48	[6707]	CALL     	R9 2 2 ; R9 := R9(R10)
	49	[6707]	LOADK    	R10 K15 ; R10 := ","
	50	[6707]	GETGLOBAL	R11 K14 ; R11 := 0x64fb1586
	51	[6707]	MOVE     	R12 R5 ; R12 := R5
	52	[6707]	CALL     	R11 2 2 ; R11 := R11(R12)
	53	[6707]	CONCAT   	R9 R9 R11 ; R9 := R9 .. R10 .. R11
	54	[6707]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	55	[6710]	RETURN   	R0 1 ; return 

function #339 <?:6712,6719> (19 instructions, 76 bytes at 00000160C683EB60)
2 params, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6713]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[6713]	MOVE     	R3 R0 ; R3 := R0
	3	[6713]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[6713]	TEST     	R2 1 ; if R2 then PC := 19
	5	[6713]	JMP      	19 ; PC := 19
	6	[6714]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0xc9f6a7d7]
	7	[6714]	GETGLOBAL	R4 K2 ; R4 := 0x7ed0a956
	8	[6714]	LOADK    	R5 K3 ; R5 := "/Lotus/Types/Player/PlayerFlashLight"
	9	[6714]	CALL     	R4 2 0 ; R4,... := R4(R5)
	10	[6714]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	11	[6715]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	12	[6715]	MOVE     	R4 R2 ; R4 := R2
	13	[6715]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[6715]	TEST     	R3 1 ; if R3 then PC := 19
	15	[6715]	JMP      	19 ; PC := 19
	16	[6716]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x83da76cb]
	17	[6716]	MOVE     	R5 R1 ; R5 := R1
	18	[6716]	CALL     	R3 3 1 ; R3(R4,R5)
	19	[6719]	RETURN   	R0 1 ; return 

function #340 <?:6721,6771> (286 instructions, 1144 bytes at 00000160C683ED60)
4 params, 21 slots, 1 upvalue, 0 locals, 51 constants, 0 functions
	1	[6722]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[6722]	MOVE     	R5 R0 ; R5 := R0
	3	[6722]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[6722]	TEST     	R4 0 ; if not R4 then PC := 8
	5	[6722]	JMP      	8 ; PC := 8
	6	[6723]	LOADK    	R4 K1 ; R4 := ""
	7	[6723]	RETURN   	R4 2 ; return R4 
	8	[6726]	GETUPVAL 	R4 U0 ; R4 := U0
	9	[6726]	GETTABLE 	R4 R4 K2 ; R4 := R4[0x06d055f9]
	10	[6726]	EQ       	0 R2 K3 ; if R2 ~= nil then PC := 13
	11	[6726]	JMP      	13 ; PC := 13
	12	[6726]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 13
	13	[6726]	OP_LOADBOOL	R5 1 0 ; R5 := true
	14	[6726]	MOVE     	R6 R2 ; R6 := R2
	15	[6726]	LOADK    	R7 K4 ; R7 := "#FFFFFF"
	16	[6726]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	17	[6727]	GETUPVAL 	R5 U0 ; R5 := U0
	18	[6727]	GETTABLE 	R5 R5 K2 ; R5 := R5[0x06d055f9]
	19	[6727]	EQ       	0 R3 K3 ; if R3 ~= nil then PC := 22
	20	[6727]	JMP      	22 ; PC := 22
	21	[6727]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 22
	22	[6727]	OP_LOADBOOL	R6 1 0 ; R6 := true
	23	[6727]	MOVE     	R7 R3 ; R7 := R3
	24	[6727]	LOADK    	R8 K4 ; R8 := "#FFFFFF"
	25	[6727]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	26	[6729]	LOADK    	R6 K5 ; R6 := "<p><font color=\""
	27	[6729]	MOVE     	R7 R5 ; R7 := R5
	28	[6729]	LOADK    	R8 K6 ; R8 := "\">"
	29	[6729]	CONCAT   	R6 R6 R8 ; R6 := R6 .. R7 .. R8
	30	[6730]	EQ       	0 R1 K7 ; if R1 ~= 2.000000 then PC := 41
	31	[6730]	JMP      	41 ; PC := 41
	32	[6732]	SELF     	R7 R0 K8 ; R8 := R0; R7 := R0[0x42b04007]
	33	[6732]	LOADK    	R9 K9 ; R9 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpTrading"
	34	[6732]	OP_LOADBOOL	R10 0 0 ; R10 := false
	35	[6732]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	36	[6733]	MOVE     	R8 R6 ; R8 := R6
	37	[6733]	MOVE     	R9 R7 ; R9 := R7
	38	[6733]	LOADK    	R10 K10 ; R10 := "<br>"
	39	[6733]	CONCAT   	R6 R8 R10 ; R6 := R8 .. R9 .. R10
	40	[6733]	JMP      	75 ; PC := 75
	41	[6734]	EQ       	0 R1 K11 ; if R1 ~= 3.000000 then PC := 52
	42	[6734]	JMP      	52 ; PC := 52
	43	[6736]	SELF     	R8 R0 K8 ; R9 := R0; R8 := R0[0x42b04007]
	44	[6736]	LOADK    	R10 K12 ; R10 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpSyndicates"
	45	[6736]	OP_LOADBOOL	R11 0 0 ; R11 := false
	46	[6736]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	47	[6737]	MOVE     	R9 R6 ; R9 := R6
	48	[6737]	MOVE     	R10 R8 ; R10 := R8
	49	[6737]	LOADK    	R11 K10 ; R11 := "<br>"
	50	[6737]	CONCAT   	R6 R9 R11 ; R6 := R9 .. R10 .. R11
	51	[6737]	JMP      	75 ; PC := 75
	52	[6738]	EQ       	1 R1 K13 ; if R1 == 5.000000 then PC := 56
	53	[6738]	JMP      	56 ; PC := 56
	54	[6738]	EQ       	0 R1 K14 ; if R1 ~= 10.000000 then PC := 75
	55	[6738]	JMP      	75 ; PC := 75
	56	[6740]	SELF     	R9 R0 K8 ; R10 := R0; R9 := R0[0x42b04007]
	57	[6740]	LOADK    	R11 K15 ; R11 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpExtraDroneSlot"
	58	[6740]	OP_LOADBOOL	R12 0 0 ; R12 := false
	59	[6740]	NEWTABLE 	R13 0 2 ; R13 := {}
	60	[6740]	LOADK    	R14 K17 ; R14 := "</font><font color=\""
	61	[6740]	MOVE     	R15 R4 ; R15 := R4
	62	[6740]	LOADK    	R16 K6 ; R16 := "\">"
	63	[6740]	CONCAT   	R14 R14 R16 ; R14 := R14 .. R15 .. R16
	64	[6740]	SETTABLE 	R13 K16 R14 ; R13["OPEN_COLOR"] := R14
	65	[6740]	LOADK    	R14 K17 ; R14 := "</font><font color=\""
	66	[6740]	MOVE     	R15 R5 ; R15 := R5
	67	[6740]	LOADK    	R16 K6 ; R16 := "\">"
	68	[6740]	CONCAT   	R14 R14 R16 ; R14 := R14 .. R15 .. R16
	69	[6740]	SETTABLE 	R13 K18 R14 ; R13["CLOSE_COLOR"] := R14
	70	[6740]	CALL     	R9 5 2 ; R9 := R9(R10,R11,R12,R13)
	71	[6741]	MOVE     	R10 R6 ; R10 := R6
	72	[6741]	MOVE     	R11 R9 ; R11 := R9
	73	[6741]	LOADK    	R12 K10 ; R12 := "<br>"
	74	[6741]	CONCAT   	R6 R10 R12 ; R6 := R10 .. R11 .. R12
	75	[6743]	EQ       	0 R1 K19 ; if R1 ~= 30.000000 then PC := 154
	76	[6743]	JMP      	154 ; PC := 154
	77	[6744]	SELF     	R10 R0 K8 ; R11 := R0; R10 := R0[0x42b04007]
	78	[6744]	LOADK    	R12 K20 ; R12 := "/Lotus/Language/Blessings/MasteryRankUpBlessingDesc"
	79	[6744]	OP_LOADBOOL	R13 0 0 ; R13 := false
	80	[6744]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	81	[6745]	MOVE     	R11 R6 ; R11 := R6
	82	[6745]	MOVE     	R12 R10 ; R12 := R10
	83	[6745]	LOADK    	R13 K10 ; R13 := "<br>"
	84	[6745]	CONCAT   	R6 R11 R13 ; R6 := R11 .. R12 .. R13
	85	[6746]	MOVE     	R11 R6 ; R11 := R6
	86	[6746]	GETGLOBAL	R12 K21 ; R12 := 0x5f0788c4
	87	[6746]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	88	[6746]	LOADK    	R15 K22 ; R15 := "/Lotus/Language/Emotes/Rank30EmoteName"
	89	[6746]	OP_LOADBOOL	R16 0 0 ; R16 := false
	90	[6746]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	91	[6746]	LOADK    	R14 K23 ; R14 := " ("
	92	[6746]	SELF     	R15 R0 K8 ; R16 := R0; R15 := R0[0x42b04007]
	93	[6746]	LOADK    	R17 K24 ; R17 := "/Lotus/Language/Emotes/Emote"
	94	[6746]	OP_LOADBOOL	R18 0 0 ; R18 := false
	95	[6746]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	96	[6746]	LOADK    	R16 K25 ; R16 := ")"
	97	[6746]	CONCAT   	R13 R13 R16 ; R13 := R13 .. R14 .. R15 .. R16
	98	[6746]	CALL     	R12 2 2 ; R12 := R12(R13)
	99	[6746]	LOADK    	R13 K10 ; R13 := "<br>"
	100	[6746]	CONCAT   	R6 R11 R13 ; R6 := R11 .. R12 .. R13
	101	[6747]	MOVE     	R11 R6 ; R11 := R6
	102	[6747]	GETGLOBAL	R12 K21 ; R12 := 0x5f0788c4
	103	[6747]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	104	[6747]	LOADK    	R15 K26 ; R15 := "/Lotus/Language/ShipDecorations/HoodOrnament_MR30Name"
	105	[6747]	OP_LOADBOOL	R16 0 0 ; R16 := false
	106	[6747]	CALL     	R13 4 0 ; R13,... := R13(R14,R15,R16)
	107	[6747]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	108	[6747]	LOADK    	R13 K10 ; R13 := "<br>"
	109	[6747]	CONCAT   	R6 R11 R13 ; R6 := R11 .. R12 .. R13
	110	[6748]	MOVE     	R11 R6 ; R11 := R6
	111	[6748]	GETGLOBAL	R12 K21 ; R12 := 0x5f0788c4
	112	[6748]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	113	[6748]	LOADK    	R15 K27 ; R15 := "/Lotus/Language/Cosmetics/TrueMasterEmoji"
	114	[6748]	OP_LOADBOOL	R16 0 0 ; R16 := false
	115	[6748]	CALL     	R13 4 0 ; R13,... := R13(R14,R15,R16)
	116	[6748]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	117	[6748]	LOADK    	R13 K10 ; R13 := "<br>"
	118	[6748]	CONCAT   	R6 R11 R13 ; R6 := R11 .. R12 .. R13
	119	[6749]	MOVE     	R11 R6 ; R11 := R6
	120	[6749]	LOADK    	R12 K28 ; R12 := "<font color=\""
	121	[6749]	MOVE     	R13 R4 ; R13 := R4
	122	[6749]	LOADK    	R14 K29 ; R14 := "\">+3</font> "
	123	[6749]	SELF     	R15 R0 K8 ; R16 := R0; R15 := R0[0x42b04007]
	124	[6749]	LOADK    	R17 K30 ; R17 := "/Lotus/Language/Consumables/FormaUmbra"
	125	[6749]	OP_LOADBOOL	R18 0 0 ; R18 := false
	126	[6749]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	127	[6749]	LOADK    	R16 K10 ; R16 := "<br>"
	128	[6749]	CONCAT   	R6 R11 R16 ; R6 := R11 .. R12 .. R13 .. R14 .. R15 .. R16
	129	[6750]	MOVE     	R11 R6 ; R11 := R6
	130	[6750]	LOADK    	R12 K28 ; R12 := "<font color=\""
	131	[6750]	MOVE     	R13 R4 ; R13 := R4
	132	[6750]	LOADK    	R14 K31 ; R14 := "\">+15</font> "
	133	[6750]	GETGLOBAL	R15 K21 ; R15 := 0x5f0788c4
	134	[6750]	SELF     	R16 R0 K8 ; R17 := R0; R16 := R0[0x42b04007]
	135	[6750]	LOADK    	R18 K32 ; R18 := "/Lotus/Language/Menu/Loadout_Slot"
	136	[6750]	OP_LOADBOOL	R19 0 0 ; R19 := false
	137	[6750]	CALL     	R16 4 0 ; R16,... := R16(R17,R18,R19)
	138	[6750]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	139	[6750]	LOADK    	R16 K10 ; R16 := "<br>"
	140	[6750]	CONCAT   	R6 R11 R16 ; R6 := R11 .. R12 .. R13 .. R14 .. R15 .. R16
	141	[6751]	MOVE     	R11 R6 ; R11 := R6
	142	[6751]	LOADK    	R12 K28 ; R12 := "<font color=\""
	143	[6751]	MOVE     	R13 R4 ; R13 := R4
	144	[6751]	LOADK    	R14 K33 ; R14 := "\">+30</font> "
	145	[6751]	GETGLOBAL	R15 K21 ; R15 := 0x5f0788c4
	146	[6751]	SELF     	R16 R0 K8 ; R17 := R0; R16 := R0[0x42b04007]
	147	[6751]	LOADK    	R18 K34 ; R18 := "/Lotus/Language/Menu/ItemInventory_SlotsRandomMod"
	148	[6751]	OP_LOADBOOL	R19 0 0 ; R19 := false
	149	[6751]	CALL     	R16 4 0 ; R16,... := R16(R17,R18,R19)
	150	[6751]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	151	[6751]	LOADK    	R16 K10 ; R16 := "<br>"
	152	[6751]	CONCAT   	R6 R11 R16 ; R6 := R11 .. R12 .. R13 .. R14 .. R15 .. R16
	153	[6751]	JMP      	176 ; PC := 176
	154	[6752]	MOD      	R11 R1 K7 ; R11 := R1 % 2.000000
	155	[6752]	EQ       	0 R11 K35 ; if R11 ~= 0.000000 then PC := 176
	156	[6752]	JMP      	176 ; PC := 176
	157	[6754]	SELF     	R11 R0 K8 ; R12 := R0; R11 := R0[0x42b04007]
	158	[6754]	LOADK    	R13 K36 ; R13 := "/Lotus/Language/Menu/EndOfMatch_LoadOutSlot"
	159	[6754]	OP_LOADBOOL	R14 0 0 ; R14 := false
	160	[6754]	NEWTABLE 	R15 0 2 ; R15 := {}
	161	[6754]	LOADK    	R16 K17 ; R16 := "</font><font color=\""
	162	[6754]	MOVE     	R17 R4 ; R17 := R4
	163	[6754]	LOADK    	R18 K6 ; R18 := "\">"
	164	[6754]	CONCAT   	R16 R16 R18 ; R16 := R16 .. R17 .. R18
	165	[6754]	SETTABLE 	R15 K16 R16 ; R15["OPEN_COLOR"] := R16
	166	[6754]	LOADK    	R16 K17 ; R16 := "</font><font color=\""
	167	[6754]	MOVE     	R17 R5 ; R17 := R5
	168	[6754]	LOADK    	R18 K6 ; R18 := "\">"
	169	[6754]	CONCAT   	R16 R16 R18 ; R16 := R16 .. R17 .. R18
	170	[6754]	SETTABLE 	R15 K18 R16 ; R15["CLOSE_COLOR"] := R16
	171	[6754]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	172	[6755]	MOVE     	R12 R6 ; R12 := R6
	173	[6755]	MOVE     	R13 R11 ; R13 := R11
	174	[6755]	LOADK    	R14 K10 ; R14 := "<br>"
	175	[6755]	CONCAT   	R6 R12 R14 ; R6 := R12 .. R13 .. R14
	176	[6757]	MOVE     	R12 R6 ; R12 := R6
	177	[6757]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	178	[6757]	LOADK    	R15 K37 ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpStanding"
	179	[6757]	OP_LOADBOOL	R16 1 0 ; R16 := true
	180	[6757]	NEWTABLE 	R17 0 3 ; R17 := {}
	181	[6757]	SETTABLE 	R17 K38 K39 ; R17["NUM"] := 500.000000
	182	[6757]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	183	[6757]	MOVE     	R19 R4 ; R19 := R4
	184	[6757]	LOADK    	R20 K6 ; R20 := "\">"
	185	[6757]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	186	[6757]	SETTABLE 	R17 K16 R18 ; R17["OPEN_COLOR"] := R18
	187	[6757]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	188	[6757]	MOVE     	R19 R5 ; R19 := R5
	189	[6757]	LOADK    	R20 K6 ; R20 := "\">"
	190	[6757]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	191	[6757]	SETTABLE 	R17 K18 R18 ; R17["CLOSE_COLOR"] := R18
	192	[6757]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	193	[6757]	LOADK    	R14 K10 ; R14 := "<br>"
	194	[6757]	CONCAT   	R6 R12 R14 ; R6 := R12 .. R13 .. R14
	195	[6758]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	196	[6758]	GETGLOBAL	R13 K40 ; R13 := 0x25d99d89
	197	[6758]	CALL     	R12 2 2 ; R12 := R12(R13)
	198	[6758]	TEST     	R12 1 ; if R12 then PC := 205
	199	[6758]	JMP      	205 ; PC := 205
	200	[6758]	GETGLOBAL	R12 K40 ; R12 := 0x25d99d89
	201	[6758]	SELF     	R12 R12 K41 ; R13 := R12; R12 := R12[0xd8159207]
	202	[6758]	CALL     	R12 2 2 ; R12 := R12(R13)
	203	[6758]	LE       	0 K7 R12 ; if 2.000000 > R12 then PC := 224
	204	[6758]	JMP      	224 ; PC := 224
	205	[6760]	MOVE     	R12 R6 ; R12 := R6
	206	[6760]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	207	[6760]	LOADK    	R15 K43 ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpFocusCapacity"
	208	[6760]	OP_LOADBOOL	R16 1 0 ; R16 := true
	209	[6760]	NEWTABLE 	R17 0 3 ; R17 := {}
	210	[6760]	SETTABLE 	R17 K38 K44 ; R17["NUM"] := 1000.000000
	211	[6760]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	212	[6760]	MOVE     	R19 R4 ; R19 := R4
	213	[6760]	LOADK    	R20 K6 ; R20 := "\">"
	214	[6760]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	215	[6760]	SETTABLE 	R17 K16 R18 ; R17["OPEN_COLOR"] := R18
	216	[6760]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	217	[6760]	MOVE     	R19 R5 ; R19 := R5
	218	[6760]	LOADK    	R20 K6 ; R20 := "\">"
	219	[6760]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	220	[6760]	SETTABLE 	R17 K18 R18 ; R17["CLOSE_COLOR"] := R18
	221	[6760]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	222	[6760]	LOADK    	R14 K10 ; R14 := "<br>"
	223	[6760]	CONCAT   	R6 R12 R14 ; R6 := R12 .. R13 .. R14
	224	[6762]	LE       	0 R1 K19 ; if R1 > 30.000000 then PC := 245
	225	[6762]	JMP      	245 ; PC := 245
	226	[6763]	MOVE     	R12 R6 ; R12 := R6
	227	[6763]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	228	[6763]	LOADK    	R15 K45 ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpCapacity"
	229	[6763]	OP_LOADBOOL	R16 0 0 ; R16 := false
	230	[6763]	NEWTABLE 	R17 0 2 ; R17 := {}
	231	[6763]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	232	[6763]	MOVE     	R19 R4 ; R19 := R4
	233	[6763]	LOADK    	R20 K6 ; R20 := "\">"
	234	[6763]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	235	[6763]	SETTABLE 	R17 K16 R18 ; R17["OPEN_COLOR"] := R18
	236	[6763]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	237	[6763]	MOVE     	R19 R5 ; R19 := R5
	238	[6763]	LOADK    	R20 K6 ; R20 := "\">"
	239	[6763]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	240	[6763]	SETTABLE 	R17 K18 R18 ; R17["CLOSE_COLOR"] := R18
	241	[6763]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	242	[6763]	LOADK    	R14 K10 ; R14 := "<br>"
	243	[6763]	CONCAT   	R6 R12 R14 ; R6 := R12 .. R13 .. R14
	244	[6763]	JMP      	264 ; PC := 264
	245	[6765]	MOVE     	R12 R6 ; R12 := R6
	246	[6765]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	247	[6765]	LOADK    	R15 K46 ; R15 := "/Lotus/Language/MasteryTest/MasteryRankUp_LegendaryCore"
	248	[6765]	OP_LOADBOOL	R16 1 0 ; R16 := true
	249	[6765]	NEWTABLE 	R17 0 3 ; R17 := {}
	250	[6765]	SETTABLE 	R17 K38 K47 ; R17["NUM"] := 1.000000
	251	[6765]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	252	[6765]	MOVE     	R19 R4 ; R19 := R4
	253	[6765]	LOADK    	R20 K6 ; R20 := "\">"
	254	[6765]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	255	[6765]	SETTABLE 	R17 K16 R18 ; R17["OPEN_COLOR"] := R18
	256	[6765]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	257	[6765]	MOVE     	R19 R5 ; R19 := R5
	258	[6765]	LOADK    	R20 K6 ; R20 := "\">"
	259	[6765]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	260	[6765]	SETTABLE 	R17 K18 R18 ; R17["CLOSE_COLOR"] := R18
	261	[6765]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	262	[6765]	LOADK    	R14 K10 ; R14 := "<br>"
	263	[6765]	CONCAT   	R6 R12 R14 ; R6 := R12 .. R13 .. R14
	264	[6767]	MOVE     	R12 R6 ; R12 := R6
	265	[6767]	SELF     	R13 R0 K8 ; R14 := R0; R13 := R0[0x42b04007]
	266	[6767]	LOADK    	R15 K48 ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpReactant"
	267	[6767]	OP_LOADBOOL	R16 1 0 ; R16 := true
	268	[6767]	NEWTABLE 	R17 0 3 ; R17 := {}
	269	[6767]	SETTABLE 	R17 K38 K49 ; R17["NUM"] := 50.000000
	270	[6767]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	271	[6767]	MOVE     	R19 R4 ; R19 := R4
	272	[6767]	LOADK    	R20 K6 ; R20 := "\">"
	273	[6767]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	274	[6767]	SETTABLE 	R17 K16 R18 ; R17["OPEN_COLOR"] := R18
	275	[6767]	LOADK    	R18 K17 ; R18 := "</font><font color=\""
	276	[6767]	MOVE     	R19 R5 ; R19 := R5
	277	[6767]	LOADK    	R20 K6 ; R20 := "\">"
	278	[6767]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	279	[6767]	SETTABLE 	R17 K18 R18 ; R17["CLOSE_COLOR"] := R18
	280	[6767]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	281	[6767]	CONCAT   	R6 R12 R13 ; R6 := R12 .. R13
	282	[6768]	MOVE     	R12 R6 ; R12 := R6
	283	[6768]	LOADK    	R13 K50 ; R13 := "</font></p>"
	284	[6768]	CONCAT   	R6 R12 R13 ; R6 := R12 .. R13
	285	[6770]	RETURN   	R6 2 ; return R6 
	286	[6771]	RETURN   	R0 1 ; return 

function #341 <?:6773,6831> (121 instructions, 484 bytes at 00000160C6840250)
3 params, 17 slots, 0 upvalues, 0 locals, 24 constants, 0 functions
	1	[6774]	NEWTABLE 	R3 0 0 ; R3 := {}
	2	[6776]	EQ       	1 R0 K1 ; if R0 == 0.000000 then PC := 6
	3	[6776]	JMP      	6 ; PC := 6
	4	[6776]	EQ       	0 R0 K2 ; if R0 ~= 3.000000 then PC := 30
	5	[6776]	JMP      	30 ; PC := 30
	6	[6777]	EQ       	0 R1 K1 ; if R1 ~= 0.000000 then PC := 12
	7	[6777]	JMP      	12 ; PC := 12
	8	[6778]	SELF     	R4 R2 K3 ; R5 := R2; R4 := R2[0x21a3da0c]
	9	[6778]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[6778]	MOVE     	R3 R4 ; R3 := R4
	11	[6778]	JMP      	120 ; PC := 120
	12	[6779]	EQ       	0 R1 K2 ; if R1 ~= 3.000000 then PC := 18
	13	[6779]	JMP      	18 ; PC := 18
	14	[6780]	SELF     	R4 R2 K4 ; R5 := R2; R4 := R2[0x0bf14f02]
	15	[6780]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[6780]	MOVE     	R3 R4 ; R3 := R4
	17	[6780]	JMP      	120 ; PC := 120
	18	[6781]	EQ       	0 R1 K5 ; if R1 ~= 2.000000 then PC := 24
	19	[6781]	JMP      	24 ; PC := 24
	20	[6782]	SELF     	R4 R2 K6 ; R5 := R2; R4 := R2[0x57d88957]
	21	[6782]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[6782]	MOVE     	R3 R4 ; R3 := R4
	23	[6782]	JMP      	120 ; PC := 120
	24	[6783]	EQ       	0 R1 K7 ; if R1 ~= 1.000000 then PC := 120
	25	[6783]	JMP      	120 ; PC := 120
	26	[6784]	SELF     	R4 R2 K8 ; R5 := R2; R4 := R2[0x215bf396]
	27	[6784]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[6784]	MOVE     	R3 R4 ; R3 := R4
	29	[6785]	JMP      	120 ; PC := 120
	30	[6786]	EQ       	0 R0 K5 ; if R0 ~= 2.000000 then PC := 50
	31	[6786]	JMP      	50 ; PC := 50
	32	[6787]	EQ       	0 R1 K1 ; if R1 ~= 0.000000 then PC := 38
	33	[6787]	JMP      	38 ; PC := 38
	34	[6788]	SELF     	R4 R2 K9 ; R5 := R2; R4 := R2[0x4bb8609a]
	35	[6788]	CALL     	R4 2 2 ; R4 := R4(R5)
	36	[6788]	MOVE     	R3 R4 ; R3 := R4
	37	[6788]	JMP      	120 ; PC := 120
	38	[6789]	EQ       	0 R1 K2 ; if R1 ~= 3.000000 then PC := 44
	39	[6789]	JMP      	44 ; PC := 44
	40	[6790]	SELF     	R4 R2 K10 ; R5 := R2; R4 := R2[0x3218c3b0]
	41	[6790]	CALL     	R4 2 2 ; R4 := R4(R5)
	42	[6790]	MOVE     	R3 R4 ; R3 := R4
	43	[6790]	JMP      	120 ; PC := 120
	44	[6791]	EQ       	0 R1 K5 ; if R1 ~= 2.000000 then PC := 120
	45	[6791]	JMP      	120 ; PC := 120
	46	[6792]	SELF     	R4 R2 K11 ; R5 := R2; R4 := R2[0x6f7b67d7]
	47	[6792]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[6792]	MOVE     	R3 R4 ; R3 := R4
	49	[6793]	JMP      	120 ; PC := 120
	50	[6794]	EQ       	0 R0 K12 ; if R0 ~= 6.000000 then PC := 58
	51	[6794]	JMP      	58 ; PC := 58
	52	[6795]	EQ       	0 R1 K1 ; if R1 ~= 0.000000 then PC := 120
	53	[6795]	JMP      	120 ; PC := 120
	54	[6796]	SELF     	R4 R2 K13 ; R5 := R2; R4 := R2[0x738deb95]
	55	[6796]	CALL     	R4 2 2 ; R4 := R4(R5)
	56	[6796]	MOVE     	R3 R4 ; R3 := R4
	57	[6797]	JMP      	120 ; PC := 120
	58	[6798]	EQ       	0 R0 K7 ; if R0 ~= 1.000000 then PC := 113
	59	[6798]	JMP      	113 ; PC := 113
	60	[6799]	EQ       	0 R1 K1 ; if R1 ~= 0.000000 then PC := 109
	61	[6799]	JMP      	109 ; PC := 109
	62	[6800]	SELF     	R4 R2 K14 ; R5 := R2; R4 := R2[0x2a207127]
	63	[6800]	CALL     	R4 2 2 ; R4 := R4(R5)
	64	[6800]	MOVE     	R3 R4 ; R3 := R4
	65	[6801]	TEST     	R3 1 ; if R3 then PC := 69
	66	[6801]	JMP      	69 ; PC := 69
	67	[6802]	NEWTABLE 	R4 0 0 ; R4 := {}
	68	[6802]	MOVE     	R3 R4 ; R3 := R4
	69	[6805]	SELF     	R4 R2 K15 ; R5 := R2; R4 := R2[0x91a3eddf]
	70	[6805]	CALL     	R4 2 2 ; R4 := R4(R5)
	71	[6806]	LOADK    	R5 := 1.000000
	72	[6806]	LEN      	R6 R4 ; R6 := # R4
	73	[6806]	LOADK    	R7 := 1.000000
	74	[6806]	FORPREP  	R5 80 ; R5 -= R7; PC := 80
	75	[6807]	GETGLOBAL	R9 K16 ; R9 := 0x33bdd652
	76	[6807]	GETTABLE 	R9 R9 K17 ; R9 := R9[0x23d5322f]
	77	[6807]	MOVE     	R10 R3 ; R10 := R3
	78	[6807]	GETTABLE 	R11 R4 R8 ; R11 := R4[R8]
	79	[6807]	CALL     	R9 3 1 ; R9(R10,R11)
	80	[6806]	FORLOOP  	R5 75 ; R5 += R7; if R5 <= R6 then begin PC := 75; R8 := R5 end
	81	[6810]	SELF     	R9 R2 K18 ; R10 := R2; R9 := R2[0xa855881a]
	82	[6810]	CALL     	R9 2 2 ; R9 := R9(R10)
	83	[6811]	LOADK    	R10 := 1.000000
	84	[6811]	LEN      	R11 R9 ; R11 := # R9
	85	[6811]	LOADK    	R12 := 1.000000
	86	[6811]	FORPREP  	R10 107 ; R10 -= R12; PC := 107
	87	[6814]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	88	[6814]	GETTABLE 	R14 R14 K19 ; R14 := R14["mDetails"]
	89	[6814]	GETTABLE 	R14 R14 K20 ; R14 := R14["mStatus"]
	90	[6814]	EQ       	1 R14 K2 ; if R14 == 3.000000 then PC := 107
	91	[6814]	JMP      	107 ; PC := 107
	92	[6815]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	93	[6815]	GETTABLE 	R14 R14 K19 ; R14 := R14["mDetails"]
	94	[6815]	GETTABLE 	R14 R14 K20 ; R14 := R14["mStatus"]
	95	[6815]	EQ       	1 R14 K1 ; if R14 == 0.000000 then PC := 107
	96	[6815]	JMP      	107 ; PC := 107
	97	[6816]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	98	[6816]	GETTABLE 	R14 R14 K19 ; R14 := R14["mDetails"]
	99	[6816]	GETTABLE 	R14 R14 K20 ; R14 := R14["mStatus"]
	100	[6816]	EQ       	1 R14 K7 ; if R14 == 1.000000 then PC := 107
	101	[6816]	JMP      	107 ; PC := 107
	102	[6818]	GETGLOBAL	R14 K16 ; R14 := 0x33bdd652
	103	[6818]	GETTABLE 	R14 R14 K17 ; R14 := R14[0x23d5322f]
	104	[6818]	MOVE     	R15 R3 ; R15 := R3
	105	[6818]	GETTABLE 	R16 R9 R13 ; R16 := R9[R13]
	106	[6818]	CALL     	R14 3 1 ; R14(R15,R16)
	107	[6811]	FORLOOP  	R10 87 ; R10 += R12; if R10 <= R11 then begin PC := 87; R13 := R10 end
	108	[6820]	JMP      	120 ; PC := 120
	109	[6822]	SELF     	R14 R2 K21 ; R15 := R2; R14 := R2[0xa2c6d8b7]
	110	[6822]	CALL     	R14 2 2 ; R14 := R14(R15)
	111	[6822]	MOVE     	R3 R14 ; R3 := R14
	112	[6823]	JMP      	120 ; PC := 120
	113	[6824]	EQ       	0 R0 K22 ; if R0 ~= 7.000000 then PC := 120
	114	[6824]	JMP      	120 ; PC := 120
	115	[6825]	EQ       	0 R1 K1 ; if R1 ~= 0.000000 then PC := 120
	116	[6825]	JMP      	120 ; PC := 120
	117	[6826]	SELF     	R14 R2 K23 ; R15 := R2; R14 := R2[0x8d6f4300]
	118	[6826]	CALL     	R14 2 2 ; R14 := R14(R15)
	119	[6826]	MOVE     	R3 R14 ; R3 := R14
	120	[6830]	RETURN   	R3 2 ; return R3 
	121	[6831]	RETURN   	R0 1 ; return 

function #342 <?:6833,6895> (203 instructions, 812 bytes at 00000160C68408E0)
5 params, 35 slots, 3 upvalues, 0 locals, 38 constants, 0 functions
	1	[6834]	LOADK    	R5 := 3.000000
	2	[6835]	NEWTABLE 	R6 3 0 ; R6 := {}
	3	[6836]	NEWTABLE 	R7 0 2 ; R7 := {}
	4	[6837]	SETTABLE 	R7 K0 K1 ; R7["IsSentinel"] := false
	5	[6837]	SETTABLE 	R7 K2 K4 ; R7["Id"] := 0.000000
	6	[6837]	NEWTABLE 	R8 0 2 ; R8 := {}
	7	[6838]	SETTABLE 	R8 K0 K1 ; R8["IsSentinel"] := false
	8	[6838]	SETTABLE 	R8 K2 K5 ; R8["Id"] := 2.000000
	9	[6838]	NEWTABLE 	R9 0 2 ; R9 := {}
	10	[6839]	SETTABLE 	R9 K0 K1 ; R9["IsSentinel"] := false
	11	[6839]	SETTABLE 	R9 K2 K6 ; R9["Id"] := 3.000000
	12	[6840]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	13	[6841]	EQ       	1 R2 K4 ; if R2 == 0.000000 then PC := 17
	14	[6841]	JMP      	17 ; PC := 17
	15	[6841]	EQ       	0 R2 K6 ; if R2 ~= 3.000000 then PC := 26
	16	[6841]	JMP      	26 ; PC := 26
	17	[6842]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	18	[6842]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	19	[6842]	MOVE     	R8 R6 ; R8 := R6
	20	[6842]	LOADK    	R9 := 3.000000
	21	[6842]	NEWTABLE 	R10 0 2 ; R10 := {}
	22	[6842]	SETTABLE 	R10 K0 K1 ; R10["IsSentinel"] := false
	23	[6842]	SETTABLE 	R10 K2 K9 ; R10["Id"] := 1.000000
	24	[6842]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	25	[6843]	LOADK    	R5 := 4.000000
	26	[6845]	EQ       	1 R1 K10 ; if R1 == nil then PC := 42
	27	[6845]	JMP      	42 ; PC := 42
	28	[6846]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	29	[6846]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	30	[6846]	MOVE     	R8 R6 ; R8 := R6
	31	[6846]	NEWTABLE 	R9 0 2 ; R9 := {}
	32	[6846]	SETTABLE 	R9 K0 K11 ; R9["IsSentinel"] := true
	33	[6846]	SETTABLE 	R9 K2 K4 ; R9["Id"] := 0.000000
	34	[6846]	CALL     	R7 3 1 ; R7(R8,R9)
	35	[6847]	GETGLOBAL	R7 K7 ; R7 := 0x33bdd652
	36	[6847]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x23d5322f]
	37	[6847]	MOVE     	R8 R6 ; R8 := R6
	38	[6847]	NEWTABLE 	R9 0 2 ; R9 := {}
	39	[6847]	SETTABLE 	R9 K0 K11 ; R9["IsSentinel"] := true
	40	[6847]	SETTABLE 	R9 K2 K5 ; R9["Id"] := 2.000000
	41	[6847]	CALL     	R7 3 1 ; R7(R8,R9)
	42	[6850]	NEWTABLE 	R7 0 0 ; R7 := {}
	43	[6851]	LOADNIL  	R8 R8 ; R8 := nil
	44	[6852]	GETGLOBAL	R9 K12 ; R9 := 0x7b998233
	45	[6852]	MOVE     	R10 R4 ; R10 := R4
	46	[6852]	CALL     	R9 2 2 ; R9 := R9(R10)
	47	[6852]	TEST     	R9 1 ; if R9 then PC := 50
	48	[6852]	JMP      	50 ; PC := 50
	49	[6853]	LOADK    	R8 K13 ; R8 := "<p>"
	50	[6856]	GETUPVAL 	R9 U0 ; R9 := U0
	51	[6856]	CALL     	R9 1 3 ; R9,R10 := R9()
	52	[6857]	LOADK    	R11 := 1.000000
	53	[6857]	LEN      	R12 R6 ; R12 := # R6
	54	[6857]	LOADK    	R13 := 1.000000
	55	[6857]	FORPREP  	R11 194 ; R11 -= R13; PC := 194
	56	[6858]	GETUPVAL 	R15 U1 ; R15 := U1
	57	[6858]	GETTABLE 	R15 R15 K14 ; R15 := R15[0x06d055f9]
	58	[6858]	EQ       	1 R14 R5 ; if R14 == R5 then PC := 61
	59	[6858]	JMP      	61 ; PC := 61
	60	[6858]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 61
	61	[6858]	OP_LOADBOOL	R16 1 0 ; R16 := true
	62	[6858]	LOADK    	R17 K15 ; R17 := ""
	63	[6858]	LOADK    	R18 K16 ; R18 := "<br>"
	64	[6858]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	65	[6859]	GETUPVAL 	R16 U1 ; R16 := U1
	66	[6859]	GETTABLE 	R16 R16 K14 ; R16 := R16[0x06d055f9]
	67	[6859]	GETTABLE 	R17 R6 R14 ; R17 := R6[R14]
	68	[6859]	GETTABLE 	R17 R17 K0 ; R17 := R17["IsSentinel"]
	69	[6859]	MOVE     	R18 R1 ; R18 := R1
	70	[6859]	MOVE     	R19 R0 ; R19 := R0
	71	[6859]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	72	[6860]	GETGLOBAL	R17 K12 ; R17 := 0x7b998233
	73	[6860]	MOVE     	R18 R16 ; R18 := R16
	74	[6860]	CALL     	R17 2 2 ; R17 := R17(R18)
	75	[6860]	TEST     	R17 1 ; if R17 then PC := 194
	76	[6860]	JMP      	194 ; PC := 194
	77	[6861]	SELF     	R17 R16 K17 ; R18 := R16; R17 := R16[0x2abbe722]
	78	[6861]	GETTABLE 	R19 R6 R14 ; R19 := R6[R14]
	79	[6861]	GETTABLE 	R19 R19 K2 ; R19 := R19["Id"]
	80	[6861]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	81	[6862]	GETTABLE 	R18 R17 K18 ; R18 := R17["mItemId"]
	82	[6862]	GETTABLE 	R18 R18 K19 ; R18 := R18["mId"]
	83	[6862]	GETGLOBAL	R19 K3 ; R19 := 0x6c97a788
	84	[6862]	GETTABLE 	R19 R19 K20 ; R19 := R19["InvalidItemID"]
	85	[6862]	EQ       	1 R18 R19 ; if R18 == R19 then PC := 177
	86	[6862]	JMP      	177 ; PC := 177
	87	[6863]	GETUPVAL 	R18 U2 ; R18 := U2
	88	[6863]	GETUPVAL 	R19 U1 ; R19 := U1
	89	[6863]	GETTABLE 	R19 R19 K14 ; R19 := R19[0x06d055f9]
	90	[6863]	GETTABLE 	R20 R6 R14 ; R20 := R6[R14]
	91	[6863]	GETTABLE 	R20 R20 K0 ; R20 := R20["IsSentinel"]
	92	[6863]	LOADK    	R21 := 1.000000
	93	[6863]	MOVE     	R22 R2 ; R22 := R2
	94	[6863]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	95	[6863]	GETTABLE 	R20 R6 R14 ; R20 := R6[R14]
	96	[6863]	GETTABLE 	R20 R20 K2 ; R20 := R20["Id"]
	97	[6863]	MOVE     	R21 R3 ; R21 := R3
	98	[6863]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	99	[6864]	LOADK    	R19 := 1.000000
	100	[6864]	LEN      	R20 R18 ; R20 := # R18
	101	[6864]	LOADK    	R21 := 1.000000
	102	[6864]	FORPREP  	R19 175 ; R19 -= R21; PC := 175
	103	[6865]	GETTABLE 	R23 R18 R22 ; R23 := R18[R22]
	104	[6865]	GETTABLE 	R23 R23 K18 ; R23 := R23["mItemId"]
	105	[6865]	GETTABLE 	R23 R23 K19 ; R23 := R23["mId"]
	106	[6865]	GETTABLE 	R24 R17 K18 ; R24 := R17["mItemId"]
	107	[6865]	GETTABLE 	R24 R24 K19 ; R24 := R24["mId"]
	108	[6865]	EQ       	0 R23 R24 ; if R23 ~= R24 then PC := 175
	109	[6865]	JMP      	175 ; PC := 175
	110	[6866]	GETGLOBAL	R23 K7 ; R23 := 0x33bdd652
	111	[6866]	GETTABLE 	R23 R23 K8 ; R23 := R23[0x23d5322f]
	112	[6866]	MOVE     	R24 R7 ; R24 := R7
	113	[6866]	GETTABLE 	R25 R18 R22 ; R25 := R18[R22]
	114	[6866]	GETTABLE 	R25 R25 K21 ; R25 := R25["mItemType"]
	115	[6866]	CALL     	R23 3 1 ; R23(R24,R25)
	116	[6867]	GETGLOBAL	R23 K12 ; R23 := 0x7b998233
	117	[6867]	MOVE     	R24 R4 ; R24 := R4
	118	[6867]	CALL     	R23 2 2 ; R23 := R23(R24)
	119	[6867]	TEST     	R23 1 ; if R23 then PC := 194
	120	[6867]	JMP      	194 ; PC := 194
	121	[6867]	GETTABLE 	R23 R6 R14 ; R23 := R6[R14]
	122	[6867]	GETTABLE 	R23 R23 K0 ; R23 := R23["IsSentinel"]
	123	[6867]	TEST     	R23 1 ; if R23 then PC := 194
	124	[6867]	JMP      	194 ; PC := 194
	125	[6868]	SELF     	R23 R4 K22 ; R24 := R4; R23 := R4[0x105074fb]
	126	[6868]	GETTABLE 	R25 R18 R22 ; R25 := R18[R22]
	127	[6868]	GETTABLE 	R25 R25 K21 ; R25 := R25["mItemType"]
	128	[6868]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	129	[6869]	GETGLOBAL	R24 K12 ; R24 := 0x7b998233
	130	[6869]	MOVE     	R25 R23 ; R25 := R23
	131	[6869]	CALL     	R24 2 2 ; R24 := R24(R25)
	132	[6869]	TEST     	R24 1 ; if R24 then PC := 167
	133	[6869]	JMP      	167 ; PC := 167
	134	[6870]	LOADK    	R24 := 0.000000
	135	[6871]	GETTABLE 	R25 R18 R22 ; R25 := R18[R22]
	136	[6871]	GETTABLE 	R25 R25 K23 ; R25 := R25["mXP"]
	137	[6871]	EQ       	1 R25 K10 ; if R25 == nil then PC := 147
	138	[6871]	JMP      	147 ; PC := 147
	139	[6872]	GETGLOBAL	R25 K24 ; R25 := 0xa94df70b
	140	[6872]	SELF     	R25 R25 K25 ; R26 := R25; R25 := R25[0x8427bf69]
	141	[6872]	GETTABLE 	R27 R18 R22 ; R27 := R18[R22]
	142	[6872]	GETTABLE 	R27 R27 K23 ; R27 := R27["mXP"]
	143	[6872]	GETTABLE 	R28 R18 R22 ; R28 := R18[R22]
	144	[6872]	GETTABLE 	R28 R28 K21 ; R28 := R28["mItemType"]
	145	[6872]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	146	[6872]	MOVE     	R24 R25 ; R24 := R25
	147	[6875]	MOVE     	R25 R8 ; R25 := R8
	148	[6875]	LOADK    	R26 K26 ; R26 := "<font color=\""
	149	[6875]	MOVE     	R27 R10 ; R27 := R10
	150	[6875]	LOADK    	R28 K27 ; R28 := "\">"
	151	[6875]	GETGLOBAL	R29 K28 ; R29 := 0x603636ad
	152	[6875]	SELF     	R30 R23 K29 ; R31 := R23; R30 := R23[0xd3a9d01f]
	153	[6875]	CALL     	R30 2 2 ; R30 := R30(R31)
	154	[6875]	SELF     	R30 R30 K30 ; R31 := R30; R30 := R30[0x6d604ba7]
	155	[6875]	CALL     	R30 2 2 ; R30 := R30(R31)
	156	[6875]	NEWTABLE 	R31 0 0 ; R31 := {}
	157	[6875]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	158	[6875]	LOADK    	R30 K31 ; R30 := " ["
	159	[6875]	GETGLOBAL	R31 K32 ; R31 := 0x64fb1586
	160	[6875]	MOVE     	R32 R24 ; R32 := R24
	161	[6875]	CALL     	R31 2 2 ; R31 := R31(R32)
	162	[6875]	LOADK    	R32 K33 ; R32 := "]"
	163	[6875]	MOVE     	R33 R15 ; R33 := R15
	164	[6875]	LOADK    	R34 K34 ; R34 := "</font>"
	165	[6875]	CONCAT   	R8 R25 R34 ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31 .. R32 .. R33 .. R34
	166	[6875]	JMP      	194 ; PC := 194
	167	[6877]	MOVE     	R25 R8 ; R25 := R8
	168	[6877]	LOADK    	R26 K26 ; R26 := "<font color=\""
	169	[6877]	MOVE     	R27 R10 ; R27 := R10
	170	[6877]	LOADK    	R28 K35 ; R28 := "\">---"
	171	[6877]	MOVE     	R29 R15 ; R29 := R15
	172	[6877]	LOADK    	R30 K34 ; R30 := "</font>"
	173	[6877]	CONCAT   	R8 R25 R30 ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30
	174	[6881]	JMP      	194 ; PC := 194
	175	[6864]	FORLOOP  	R19 103 ; R19 += R21; if R19 <= R20 then begin PC := 103; R22 := R19 end
	176	[6883]	JMP      	194 ; PC := 194
	177	[6884]	EQ       	1 R8 K10 ; if R8 == nil then PC := 194
	178	[6884]	JMP      	194 ; PC := 194
	179	[6884]	GETTABLE 	R25 R6 R14 ; R25 := R6[R14]
	180	[6884]	GETTABLE 	R25 R25 K0 ; R25 := R25["IsSentinel"]
	181	[6884]	TEST     	R25 1 ; if R25 then PC := 194
	182	[6884]	JMP      	194 ; PC := 194
	183	[6885]	MOVE     	R25 R8 ; R25 := R8
	184	[6885]	LOADK    	R26 K26 ; R26 := "<font color=\""
	185	[6885]	MOVE     	R27 R9 ; R27 := R9
	186	[6885]	LOADK    	R28 K27 ; R28 := "\">"
	187	[6885]	GETGLOBAL	R29 K28 ; R29 := 0x603636ad
	188	[6885]	LOADK    	R30 K36 ; R30 := "/Lotus/Language/Menu/Cosmetics_None"
	189	[6885]	NEWTABLE 	R31 0 0 ; R31 := {}
	190	[6885]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	191	[6885]	MOVE     	R30 R15 ; R30 := R15
	192	[6885]	LOADK    	R31 K34 ; R31 := "</font>"
	193	[6885]	CONCAT   	R8 R25 R31 ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31
	194	[6857]	FORLOOP  	R11 56 ; R11 += R13; if R11 <= R12 then begin PC := 56; R14 := R11 end
	195	[6890]	EQ       	1 R8 K10 ; if R8 == nil then PC := 200
	196	[6890]	JMP      	200 ; PC := 200
	197	[6891]	MOVE     	R25 R8 ; R25 := R8
	198	[6891]	LOADK    	R26 K37 ; R26 := "</p>"
	199	[6891]	CONCAT   	R8 R25 R26 ; R8 := R25 .. R26
	200	[6894]	MOVE     	R25 R7 ; R25 := R7
	201	[6894]	MOVE     	R26 R8 ; R26 := R8
	202	[6894]	RETURN   	R25 3 ; return R25, R26 
	203	[6895]	RETURN   	R0 1 ; return 

function #343 <?:6897,6899> (9 instructions, 36 bytes at 00000160C6841350)
5 params, 11 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6898]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[6898]	MOVE     	R6 R0 ; R6 := R0
	3	[6898]	MOVE     	R7 R1 ; R7 := R1
	4	[6898]	MOVE     	R8 R2 ; R8 := R2
	5	[6898]	MOVE     	R9 R3 ; R9 := R3
	6	[6898]	MOVE     	R10 R4 ; R10 := R4
	7	[6898]	TAILCALL 	R5 6 0 ; R5,... := R5(R6,R7,R8,R9,R10)
	8	[6898]	RETURN   	R5 0 ; return R5,... 
	9	[6899]	RETURN   	R0 1 ; return 

function #344 <?:6901,6905> (14 instructions, 56 bytes at 00000160C6841460)
1 param, 6 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[6902]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	2	[6902]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x1a94c9cc]
	3	[6902]	MOVE     	R2 R0 ; R2 := R0
	4	[6902]	LOADK    	R3 := -1.000000
	5	[6902]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[6902]	LOADK    	R2 K2 ; R2 := "/"
	7	[6902]	CONCAT   	R1 R1 R2 ; R1 := R1 .. R2
	8	[6904]	LOADK    	R2 K3 ; R2 := "/Lotus/Interface/ClanEmblems/"
	9	[6904]	MOVE     	R3 R1 ; R3 := R1
	10	[6904]	MOVE     	R4 R0 ; R4 := R0
	11	[6904]	LOADK    	R5 K4 ; R5 := "_em.png"
	12	[6904]	CONCAT   	R2 R2 R5 ; R2 := R2 .. R3 .. R4 .. R5
	13	[6904]	RETURN   	R2 2 ; return R2 
	14	[6905]	RETURN   	R0 1 ; return 

function #345 <?:6907,6951> (83 instructions, 332 bytes at 00000160C6841670)
1 param, 14 slots, 0 upvalues, 0 locals, 20 constants, 0 functions
	1	[6908]	GETTABLE 	R1 R0 K0 ; R1 := R0["mCount"]
	2	[6909]	LOADK    	R2 := 0.000000
	3	[6910]	GETTABLE 	R3 R0 K1 ; R3 := R0["mGoal"]
	4	[6912]	GETTABLE 	R4 R0 K2 ; R4 := R0["mPersonal"]
	5	[6912]	TEST     	R4 1 ; if R4 then PC := 10
	6	[6912]	JMP      	10 ; PC := 10
	7	[6912]	GETTABLE 	R4 R0 K3 ; R4 := R0["mInvasion"]
	8	[6912]	TEST     	R4 0 ; if not R4 then PC := 79
	9	[6912]	JMP      	79 ; PC := 79
	10	[6913]	GETTABLE 	R4 R0 K4 ; R4 := R0["mTag"]
	11	[6913]	GETGLOBAL	R5 K5 ; R5 := 0x0469f296
	12	[6913]	LOADK    	R6 K6 ; R6 := "HeatFissure"
	13	[6913]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[6913]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 17
	15	[6913]	JMP      	17 ; PC := 17
	16	[6914]	LOADK    	R1 := 0.000000
	17	[6916]	GETGLOBAL	R4 K7 ; R4 := 0x25d99d89
	18	[6917]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	19	[6917]	MOVE     	R6 R4 ; R6 := R4
	20	[6917]	CALL     	R5 2 2 ; R5 := R5(R6)
	21	[6917]	TEST     	R5 1 ; if R5 then PC := 76
	22	[6917]	JMP      	76 ; PC := 76
	23	[6919]	LOADNIL  	R5 R5 ; R5 := nil
	24	[6922]	GETTABLE 	R6 R0 K9 ; R6 := R0["mClanGoal"]
	25	[6922]	LEN      	R6 R6 ; R6 := # R6
	26	[6922]	LT       	1 K10 R6 ; if 0.000000 < R6 then PC := 29
	27	[6922]	JMP      	29 ; PC := 29
	28	[6922]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 29
	29	[6922]	OP_LOADBOOL	R6 1 0 ; R6 := true
	30	[6923]	TEST     	R6 0 ; if not R6 then PC := 40
	31	[6923]	JMP      	40 ; PC := 40
	32	[6923]	SELF     	R7 R4 K11 ; R8 := R4; R7 := R4[0x713ce380]
	33	[6923]	CALL     	R7 2 2 ; R7 := R7(R8)
	34	[6923]	EQ       	1 R7 K12 ; if R7 == "" then PC := 40
	35	[6923]	JMP      	40 ; PC := 40
	36	[6924]	SELF     	R7 R4 K13 ; R8 := R4; R7 := R4[0x6b5dc079]
	37	[6924]	CALL     	R7 2 2 ; R7 := R7(R8)
	38	[6924]	MOVE     	R5 R7 ; R5 := R7
	39	[6924]	JMP      	43 ; PC := 43
	40	[6926]	SELF     	R7 R4 K14 ; R8 := R4; R7 := R4[0x9897ecc6]
	41	[6926]	CALL     	R7 2 2 ; R7 := R7(R8)
	42	[6926]	MOVE     	R5 R7 ; R5 := R7
	43	[6929]	LOADK    	R7 := 1.000000
	44	[6929]	LEN      	R8 R5 ; R8 := # R5
	45	[6929]	LOADK    	R9 := 1.000000
	46	[6929]	FORPREP  	R7 74 ; R7 -= R9; PC := 74
	47	[6930]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	48	[6930]	GETTABLE 	R11 R11 K15 ; R11 := R11["mId"]
	49	[6930]	GETTABLE 	R11 R11 K15 ; R11 := R11["mId"]
	50	[6930]	GETTABLE 	R12 R0 K15 ; R12 := R0["mId"]
	51	[6930]	GETTABLE 	R12 R12 K15 ; R12 := R12["mId"]
	52	[6930]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 74
	53	[6930]	JMP      	74 ; PC := 74
	54	[6931]	GETTABLE 	R11 R0 K16 ; R11 := R0["mBest"]
	55	[6931]	TEST     	R11 0 ; if not R11 then PC := 60
	56	[6931]	JMP      	60 ; PC := 60
	57	[6932]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	58	[6932]	GETTABLE 	R1 R11 K16 ; R1 := R11["mBest"]
	59	[6932]	JMP      	71 ; PC := 71
	60	[6934]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	61	[6934]	GETTABLE 	R11 R11 K0 ; R11 := R11["mCount"]
	62	[6934]	GETTABLE 	R12 R0 K1 ; R12 := R0["mGoal"]
	63	[6934]	LT       	0 R12 R11 ; if R12 >= R11 then PC := 69
	64	[6934]	JMP      	69 ; PC := 69
	65	[6934]	GETTABLE 	R11 R0 K17 ; R11 := R0["mBonusGoal"]
	66	[6934]	LT       	0 K10 R11 ; if 0.000000 >= R11 then PC := 69
	67	[6934]	JMP      	69 ; PC := 69
	68	[6935]	GETTABLE 	R3 R0 K17 ; R3 := R0["mBonusGoal"]
	69	[6937]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	70	[6937]	GETTABLE 	R1 R11 K0 ; R1 := R11["mCount"]
	71	[6940]	GETTABLE 	R11 R5 R10 ; R11 := R5[R10]
	72	[6940]	GETTABLE 	R2 R11 K16 ; R2 := R11["mBest"]
	73	[6942]	JMP      	79 ; PC := 79
	74	[6929]	FORLOOP  	R7 47 ; R7 += R9; if R7 <= R8 then begin PC := 47; R10 := R7 end
	75	[6944]	JMP      	79 ; PC := 79
	76	[6946]	GETGLOBAL	R11 K18 ; R11 := 0x3d106989
	77	[6946]	LOADK    	R12 K19 ; R12 := "GetPersonalGoalProgress: profile or gamedata is nil"
	78	[6946]	CALL     	R11 2 1 ; R11(R12)
	79	[6950]	MOVE     	R11 R1 ; R11 := R1
	80	[6950]	MOVE     	R12 R2 ; R12 := R2
	81	[6950]	MOVE     	R13 R3 ; R13 := R3
	82	[6950]	RETURN   	R11 4 ; return R11, R12, R13 
	83	[6951]	RETURN   	R0 1 ; return 

function #346 <?:6953,7015> (97 instructions, 388 bytes at 00000160C6841D40)
1 param, 20 slots, 1 upvalue, 0 locals, 35 constants, 0 functions
	1	[6954]	LOADK    	R1 := 1.000000
	2	[6956]	GETGLOBAL	R2 K0 ; R2 := _T
	3	[6956]	GETGLOBAL	R3 K2 ; R3 := 0x7f5022cf
	4	[6956]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x04981ab3]
	5	[6956]	GETGLOBAL	R4 K4 ; R4 := 0x9ba7909f
	6	[6956]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x0b1c45c5]
	7	[6956]	LOADK    	R6 K6 ; R6 := "LotusGameRules.ForceElementalCarrier"
	8	[6956]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	9	[6956]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	10	[6956]	SETTABLE 	R2 K1 R3 ; R2["DebugElementalCarrier"] := R3
	11	[6957]	GETGLOBAL	R2 K0 ; R2 := _T
	12	[6957]	GETTABLE 	R2 R2 K1 ; R2 := R2["DebugElementalCarrier"]
	13	[6957]	EQ       	1 R2 K7 ; if R2 == "" then PC := 19
	14	[6957]	JMP      	19 ; PC := 19
	15	[6958]	OP_LOADBOOL	R2 1 0 ; R2 := true
	16	[6958]	LOADK    	R3 := 0.000000
	17	[6958]	RETURN   	R2 3 ; return R2, R3 
	18	[6958]	JMP      	95 ; PC := 95
	19	[6981]	EQ       	1 R0 K8 ; if R0 == nil then PC := 95
	20	[6981]	JMP      	95 ; PC := 95
	21	[6982]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	22	[6982]	GETTABLE 	R3 R0 K10 ; R3 := R0["keyChainName"]
	23	[6982]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[6982]	TEST     	R2 0 ; if not R2 then PC := 95
	25	[6982]	JMP      	95 ; PC := 95
	26	[6982]	GETTABLE 	R2 R0 K11 ; R2 := R0["missionType"]
	27	[6982]	EQ       	1 R2 K13 ; if R2 == 18.000000 then PC := 95
	28	[6982]	JMP      	95 ; PC := 95
	29	[6983]	GETGLOBAL	R2 K14 ; R2 := 0xa94df70b
	30	[6983]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0xa93da813]
	31	[6983]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[6984]	GETGLOBAL	R3 K16 ; R3 := 0x25d99d89
	33	[6985]	GETGLOBAL	R4 K9 ; R4 := 0x7b998233
	34	[6985]	MOVE     	R5 R3 ; R5 := R3
	35	[6985]	CALL     	R4 2 2 ; R4 := R4(R5)
	36	[6985]	TEST     	R4 1 ; if R4 then PC := 95
	37	[6985]	JMP      	95 ; PC := 95
	38	[6986]	GETGLOBAL	R4 K17 ; R4 := 0xc8802016
	39	[6986]	SELF     	R5 R3 K18 ; R6 := R3; R5 := R3[0x69727e0b]
	40	[6986]	CALL     	R5 2 2 ; R5 := R5(R6)
	41	[6986]	GETTABLE 	R5 R5 K19 ; R5 := R5["mGoals"]
	42	[6986]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	43	[6986]	JMP      	93 ; PC := 93
	44	[6987]	GETTABLE 	R9 R8 K20 ; R9 := R8["mTag"]
	45	[6987]	EQ       	0 R9 R2 ; if R9 ~= R2 then PC := 93
	46	[6987]	JMP      	93 ; PC := 93
	47	[6987]	GETGLOBAL	R9 K21 ; R9 := 0x34291f5c
	48	[6987]	GETTABLE 	R9 R9 K22 ; R9 := R9[0x397b920f]
	49	[6987]	GETTABLE 	R10 R8 K23 ; R10 := R8["mActivation"]
	50	[6987]	CALL     	R9 2 2 ; R9 := R9(R10)
	51	[6987]	LT       	0 R9 K24 ; if R9 >= 0.000000 then PC := 93
	52	[6987]	JMP      	93 ; PC := 93
	53	[6987]	GETGLOBAL	R9 K21 ; R9 := 0x34291f5c
	54	[6987]	GETTABLE 	R9 R9 K22 ; R9 := R9[0x397b920f]
	55	[6987]	GETTABLE 	R10 R8 K25 ; R10 := R8["mExpiry"]
	56	[6987]	CALL     	R9 2 2 ; R9 := R9(R10)
	57	[6987]	LT       	0 K24 R9 ; if 0.000000 >= R9 then PC := 93
	58	[6987]	JMP      	93 ; PC := 93
	59	[6988]	GETTABLE 	R9 R0 K26 ; R9 := R0["location"]
	60	[6990]	GETGLOBAL	R10 K27 ; R10 := EMPTY_SYMBOL
	61	[6990]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 93
	62	[6990]	JMP      	93 ; PC := 93
	63	[6991]	GETUPVAL 	R10 U0 ; R10 := U0
	64	[6991]	CALL     	R10 1 2 ; R10 := R10()
	65	[6991]	SELF     	R10 R10 K28 ; R11 := R10; R10 := R10[0x3ad9ed31]
	66	[6991]	GETTABLE 	R12 R0 K26 ; R12 := R0["location"]
	67	[6991]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	68	[6993]	GETTABLE 	R11 R10 K29 ; R11 := R10["nodeType"]
	69	[6993]	EQ       	1 R11 K30 ; if R11 == 7.000000 then PC := 77
	70	[6993]	JMP      	77 ; PC := 77
	71	[6993]	GETTABLE 	R11 R0 K26 ; R11 := R0["location"]
	72	[6993]	GETGLOBAL	R12 K31 ; R12 := 0x0469f296
	73	[6993]	GETTABLE 	R13 R8 K32 ; R13 := R8["mNode"]
	74	[6993]	CALL     	R12 2 2 ; R12 := R12(R13)
	75	[6993]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 79
	76	[6993]	JMP      	79 ; PC := 79
	77	[6994]	OP_LOADBOOL	R11 0 0 ; R11 := false
	78	[6994]	RETURN   	R11 2 ; return R11 
	79	[6997]	GETTABLE 	R11 R10 K33 ; R11 := R10["region"]
	80	[6999]	GETTABLE 	R12 R8 K34 ; R12 := R8["mRegions"]
	81	[7000]	GETGLOBAL	R13 K17 ; R13 := 0xc8802016
	82	[7000]	MOVE     	R14 R12 ; R14 := R12
	83	[7000]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	84	[7000]	JMP      	90 ; PC := 90
	85	[7001]	EQ       	0 R11 R17 ; if R11 ~= R17 then PC := 90
	86	[7001]	JMP      	90 ; PC := 90
	87	[7002]	OP_LOADBOOL	R18 1 0 ; R18 := true
	88	[7002]	MOVE     	R19 R1 ; R19 := R1
	89	[7002]	RETURN   	R18 3 ; return R18, R19 
	90	[7000]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 85; R15 := R16 end
	91	[7003]	JMP      	85 ; PC := 85
	92	[7006]	JMP      	95 ; PC := 95
	93	[6986]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 44; R6 := R7 end
	94	[7008]	JMP      	44 ; PC := 44
	95	[7014]	OP_LOADBOOL	R18 0 0 ; R18 := false
	96	[7014]	RETURN   	R18 2 ; return R18 
	97	[7015]	RETURN   	R0 1 ; return 

function #347 <?:7017,7052> (77 instructions, 308 bytes at 00000160C6842420)
2 params, 16 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[7018]	GETGLOBAL	R2 K0 ; R2 := 0x89326c93
	2	[7018]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x18d05d30]
	3	[7018]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[7018]	TEST     	R2 1 ; if R2 then PC := 7
	5	[7018]	JMP      	7 ; PC := 7
	6	[7019]	RETURN   	R0 1 ; return 
	7	[7022]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	8	[7022]	MOVE     	R3 R0 ; R3 := R0
	9	[7022]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[7022]	TEST     	R2 1 ; if R2 then PC := 17
	11	[7022]	JMP      	17 ; PC := 17
	12	[7022]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	13	[7022]	MOVE     	R3 R1 ; R3 := R1
	14	[7022]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[7022]	TEST     	R2 0 ; if not R2 then PC := 18
	16	[7022]	JMP      	18 ; PC := 18
	17	[7023]	RETURN   	R0 1 ; return 
	18	[7026]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0xde321e6f]
	19	[7026]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[7027]	LOADK    	R3 := 0.000000
	21	[7029]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	22	[7029]	SELF     	R5 R2 K5 ; R6 := R2; R5 := R2[0x881b6b90]
	23	[7029]	LOADK    	R7 := 0.000000
	24	[7029]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	25	[7029]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	26	[7029]	TEST     	R4 0 ; if not R4 then PC := 32
	27	[7029]	JMP      	32 ; PC := 32
	28	[7030]	GETGLOBAL	R4 K6 ; R4 := 0xcbd666e1
	29	[7030]	LOADK    	R5 := 0.000000
	30	[7030]	CALL     	R4 2 1 ; R4(R5)
	31	[7030]	JMP      	21 ; PC := 21
	32	[7033]	NEWTABLE 	R4 3 0 ; R4 := {}
	33	[7033]	LOADK    	R5 := 0.000000
	34	[7033]	LOADK    	R6 := 1.000000
	35	[7033]	LOADK    	R7 := 5.000000
	36	[7033]	SETLIST  	R4 3 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
	37	[7034]	GETGLOBAL	R5 K7 ; R5 := 0xcfc01047
	38	[7034]	MOVE     	R6 R4 ; R6 := R4
	39	[7034]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	40	[7034]	JMP      	68 ; PC := 68
	41	[7035]	SELF     	R10 R2 K8 ; R11 := R2; R10 := R2[0xe85a2361]
	42	[7035]	MOVE     	R12 R9 ; R12 := R9
	43	[7035]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	44	[7036]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	45	[7036]	MOVE     	R12 R10 ; R12 := R10
	46	[7036]	CALL     	R11 2 2 ; R11 := R11(R12)
	47	[7036]	TEST     	R11 1 ; if R11 then PC := 56
	48	[7036]	JMP      	56 ; PC := 56
	49	[7036]	SELF     	R11 R10 K9 ; R12 := R10; R11 := R10[0xf2deaf69]
	50	[7036]	MOVE     	R13 R1 ; R13 := R1
	51	[7036]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	52	[7036]	TEST     	R11 0 ; if not R11 then PC := 56
	53	[7036]	JMP      	56 ; PC := 56
	54	[7037]	MOVE     	R3 R9 ; R3 := R9
	55	[7037]	JMP      	68 ; PC := 68
	56	[7039]	SELF     	R11 R2 K10 ; R12 := R2; R11 := R2[0x4da725ce]
	57	[7039]	MOVE     	R13 R9 ; R13 := R9
	58	[7039]	CALL     	R11 3 1 ; R11(R12,R13)
	59	[7040]	GETGLOBAL	R11 K0 ; R11 := 0x89326c93
	60	[7040]	SELF     	R11 R11 K11 ; R12 := R11; R11 := R11[0x59c96e77]
	61	[7040]	MOVE     	R13 R10 ; R13 := R10
	62	[7040]	CALL     	R11 3 1 ; R11(R12,R13)
	63	[7042]	EQ       	0 R9 K12 ; if R9 ~= 5.000000 then PC := 68
	64	[7042]	JMP      	68 ; PC := 68
	65	[7045]	SELF     	R11 R2 K13 ; R12 := R2; R11 := R2[0xd80991c3]
	66	[7045]	LOADK    	R13 := 7.000000
	67	[7045]	CALL     	R11 3 1 ; R11(R12,R13)
	68	[7034]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 41; R7 := R8 end
	69	[7047]	JMP      	41 ; PC := 41
	70	[7050]	SELF     	R11 R2 K14 ; R12 := R2; R11 := R2[0xc69087f6]
	71	[7050]	MOVE     	R13 R3 ; R13 := R3
	72	[7050]	LOADK    	R14 := 0.000000
	73	[7050]	LOADK    	R15 := 2.000000
	74	[7050]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	75	[7051]	GETGLOBAL	R11 K15 ; R11 := _T
	76	[7051]	SETTABLE 	R11 K16 R3 ; R11["ExclusiveWeaponSlot"] := R3
	77	[7052]	RETURN   	R0 1 ; return 

function #348 <?:7054,7139> (121 instructions, 484 bytes at 00000160C68428B0)
2 params, 21 slots, 0 upvalues, 0 locals, 25 constants, 1 function
	1	[7055]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[7055]	MOVE     	R3 R0 ; R3 := R0
	3	[7055]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[7055]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[7055]	JMP      	7 ; PC := 7
	6	[7056]	RETURN   	R0 1 ; return 
	7	[7059]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0xde321e6f]
	8	[7059]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[7061]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	10	[7061]	MOVE     	R4 R2 ; R4 := R2
	11	[7061]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[7061]	TEST     	R3 0 ; if not R3 then PC := 15
	13	[7061]	JMP      	15 ; PC := 15
	14	[7062]	RETURN   	R0 1 ; return 
	15	[7065]	GETGLOBAL	R3 K2 ; R3 := 0xbe190284
	16	[7065]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x9dc2a61a]
	17	[7065]	OP_LOADBOOL	R5 1 0 ; R5 := true
	18	[7065]	CALL     	R3 3 1 ; R3(R4,R5)
	19	[7101]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	20	[7103]	MOVE     	R4 R3 ; R4 := R3
	21	[7103]	MOVE     	R5 R2 ; R5 := R2
	22	[7103]	CALL     	R4 2 1 ; R4(R5)
	23	[7105]	GETGLOBAL	R4 K2 ; R4 := 0xbe190284
	24	[7105]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x1934072c]
	25	[7105]	GETGLOBAL	R6 K5 ; R6 := gLotusAuraUpgradeType
	26	[7105]	MOVE     	R7 R0 ; R7 := R0
	27	[7105]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	28	[7106]	GETGLOBAL	R5 K6 ; R5 := 0xcfc01047
	29	[7106]	MOVE     	R6 R4 ; R6 := R4
	30	[7106]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	31	[7106]	JMP      	36 ; PC := 36
	32	[7107]	GETGLOBAL	R10 K7 ; R10 := 0x89326c93
	33	[7107]	SELF     	R10 R10 K8 ; R11 := R10; R10 := R10[0x59c96e77]
	34	[7107]	MOVE     	R12 R9 ; R12 := R9
	35	[7107]	CALL     	R10 3 1 ; R10(R11,R12)
	36	[7106]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 32; R7 := R8 end
	37	[7107]	JMP      	32 ; PC := 32
	38	[7111]	SELF     	R10 R0 K9 ; R11 := R0; R10 := R0[0x1ac1655c]
	39	[7111]	CALL     	R10 2 2 ; R10 := R10(R11)
	40	[7112]	SELF     	R11 R10 K10 ; R12 := R10; R11 := R10[0x57369b8b]
	41	[7112]	SELF     	R13 R10 K11 ; R14 := R10; R13 := R10[0xb87f958d]
	42	[7112]	CALL     	R13 2 0 ; R13,... := R13(R14)
	43	[7112]	CALL     	R11 0 1 ; R11(R12,...)
	44	[7114]	LOADNIL  	R11 R11 ; R11 := nil
	45	[7115]	SELF     	R12 R0 K12 ; R13 := R0; R12 := R0[0x5b89142c]
	46	[7115]	CALL     	R12 2 2 ; R12 := R12(R13)
	47	[7116]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	48	[7116]	MOVE     	R14 R12 ; R14 := R12
	49	[7116]	CALL     	R13 2 2 ; R13 := R13(R14)
	50	[7116]	TEST     	R13 1 ; if R13 then PC := 110
	51	[7116]	JMP      	110 ; PC := 110
	52	[7117]	SELF     	R13 R12 K13 ; R14 := R12; R13 := R12[0x62c81b76]
	53	[7117]	CALL     	R13 2 2 ; R13 := R13(R14)
	54	[7117]	GETTABLE 	R13 R13 K14 ; R13 := R13["mPetType"]
	55	[7118]	EQ       	1 R13 K16 ; if R13 == 5.000000 then PC := 110
	56	[7118]	JMP      	110 ; PC := 110
	57	[7118]	GETGLOBAL	R14 K2 ; R14 := 0xbe190284
	58	[7118]	SELF     	R14 R14 K17 ; R15 := R14; R14 := R14[0xc7b09a65]
	59	[7118]	CALL     	R14 2 2 ; R14 := R14(R15)
	60	[7118]	TEST     	R14 0 ; if not R14 then PC := 110
	61	[7118]	JMP      	110 ; PC := 110
	62	[7119]	OP_LOADBOOL	R14 0 0 ; R14 := false
	63	[7120]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	64	[7120]	MOVE     	R16 R11 ; R16 := R11
	65	[7120]	CALL     	R15 2 2 ; R15 := R15(R16)
	66	[7120]	TEST     	R15 0 ; if not R15 then PC := 101
	67	[7120]	JMP      	101 ; PC := 101
	68	[7120]	TEST     	R14 1 ; if R14 then PC := 101
	69	[7120]	JMP      	101 ; PC := 101
	70	[7121]	SELF     	R15 R12 K13 ; R16 := R12; R15 := R12[0x62c81b76]
	71	[7121]	CALL     	R15 2 2 ; R15 := R15(R16)
	72	[7121]	SELF     	R15 R15 K18 ; R16 := R15; R15 := R15[0x8af486d8]
	73	[7121]	CALL     	R15 2 2 ; R15 := R15(R16)
	74	[7121]	TESTSET  	R14 R15 0 ; if not R15 then PC := 88 else R14 := R15 
	75	[7121]	JMP      	88 ; PC := 88
	76	[7121]	GETGLOBAL	R15 K2 ; R15 := 0xbe190284
	77	[7121]	SELF     	R15 R15 K19 ; R16 := R15; R15 := R15[0x3d48d263]
	78	[7121]	SELF     	R17 R0 K20 ; R18 := R0; R17 := R0[0xdff9d2a7]
	79	[7121]	CALL     	R17 2 2 ; R17 := R17(R18)
	80	[7121]	OP_LOADBOOL	R18 1 0 ; R18 := true
	81	[7121]	SELF     	R19 R12 K13 ; R20 := R12; R19 := R12[0x62c81b76]
	82	[7121]	CALL     	R19 2 2 ; R19 := R19(R20)
	83	[7121]	SELF     	R19 R19 K18 ; R20 := R19; R19 := R19[0x8af486d8]
	84	[7121]	CALL     	R19 2 2 ; R19 := R19(R20)
	85	[7121]	OP_LOADBOOL	R20 1 0 ; R20 := true
	86	[7121]	CALL     	R15 6 2 ; R15 := R15(R16,R17,R18,R19,R20)
	87	[7121]	NOT      	R14 R15 ; R14 := not R15
	88	[7122]	SELF     	R15 R2 K21 ; R16 := R2; R15 := R2[0x2676deee]
	89	[7122]	CALL     	R15 2 2 ; R15 := R15(R16)
	90	[7122]	MOVE     	R11 R15 ; R11 := R15
	91	[7123]	EQ       	1 R1 K22 ; if R1 == true then PC := 95
	92	[7123]	JMP      	95 ; PC := 95
	93	[7123]	EQ       	0 R1 K23 ; if R1 ~= nil then PC := 101
	94	[7123]	JMP      	101 ; PC := 101
	95	[7124]	GETGLOBAL	R15 K24 ; R15 := 0xcbd666e1
	96	[7124]	LOADK    	R16 := 0.000000
	97	[7124]	CALL     	R15 2 1 ; R15(R16)
	98	[7124]	JMP      	63 ; PC := 63
	99	[7126]	JMP      	101 ; PC := 101
	100	[7127]	JMP      	63 ; PC := 63
	101	[7129]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	102	[7129]	MOVE     	R16 R11 ; R16 := R11
	103	[7129]	CALL     	R15 2 2 ; R15 := R15(R16)
	104	[7129]	TEST     	R15 1 ; if R15 then PC := 110
	105	[7129]	JMP      	110 ; PC := 110
	106	[7130]	MOVE     	R15 R3 ; R15 := R3
	107	[7130]	SELF     	R16 R11 K1 ; R17 := R11; R16 := R11[0xde321e6f]
	108	[7130]	CALL     	R16 2 0 ; R16,... := R16(R17)
	109	[7130]	CALL     	R15 0 1 ; R15(R16,...)
	110	[7135]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	111	[7135]	MOVE     	R16 R11 ; R16 := R11
	112	[7135]	CALL     	R15 2 2 ; R15 := R15(R16)
	113	[7135]	TEST     	R15 1 ; if R15 then PC := 121
	114	[7135]	JMP      	121 ; PC := 121
	115	[7136]	SELF     	R15 R11 K9 ; R16 := R11; R15 := R11[0x1ac1655c]
	116	[7136]	CALL     	R15 2 2 ; R15 := R15(R16)
	117	[7137]	SELF     	R16 R15 K10 ; R17 := R15; R16 := R15[0x57369b8b]
	118	[7137]	SELF     	R18 R15 K11 ; R19 := R15; R18 := R15[0xb87f958d]
	119	[7137]	CALL     	R18 2 0 ; R18,... := R18(R19)
	120	[7137]	CALL     	R16 0 1 ; R16(R17,...)
	121	[7139]	RETURN   	R0 1 ; return 

function #349 <?:7141,7149> (36 instructions, 144 bytes at 00000160C68433A0)
0 params, 4 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[7142]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7142]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	3	[7142]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7142]	TEST     	R0 1 ; if R0 then PC := 34
	5	[7142]	JMP      	34 ; PC := 34
	6	[7142]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	7	[7142]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xf2deaf69]
	8	[7142]	GETGLOBAL	R2 K3 ; R2 := gLotusGameRulesType
	9	[7142]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[7142]	TEST     	R0 0 ; if not R0 then PC := 34
	11	[7142]	JMP      	34 ; PC := 34
	12	[7143]	GETGLOBAL	R0 K1 ; R0 := 0xbe190284
	13	[7143]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xef893aec]
	14	[7143]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[7144]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	16	[7144]	MOVE     	R2 R0 ; R2 := R0
	17	[7144]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[7144]	TEST     	R1 1 ; if R1 then PC := 34
	19	[7144]	JMP      	34 ; PC := 34
	20	[7144]	GETTABLE 	R1 R0 K5 ; R1 := R0["goalTag"]
	21	[7144]	GETGLOBAL	R2 K6 ; R2 := 0x0469f296
	22	[7144]	LOADK    	R3 K7 ; R3 := "NoMods"
	23	[7144]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[7144]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 32
	25	[7144]	JMP      	32 ; PC := 32
	26	[7144]	GETTABLE 	R1 R0 K5 ; R1 := R0["goalTag"]
	27	[7144]	GETGLOBAL	R2 K6 ; R2 := 0x0469f296
	28	[7144]	LOADK    	R3 K8 ; R3 := "WaterFight"
	29	[7144]	CALL     	R2 2 2 ; R2 := R2(R3)
	30	[7144]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 34
	31	[7144]	JMP      	34 ; PC := 34
	32	[7145]	OP_LOADBOOL	R1 1 0 ; R1 := true
	33	[7145]	RETURN   	R1 2 ; return R1 
	34	[7148]	OP_LOADBOOL	R1 0 0 ; R1 := false
	35	[7148]	RETURN   	R1 2 ; return R1 
	36	[7149]	RETURN   	R0 1 ; return 

function #350 <?:7151,7163> (25 instructions, 100 bytes at 00000160C6843680)
2 params, 10 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[7152]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[7152]	MOVE     	R3 R0 ; R3 := R0
	3	[7152]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[7152]	TEST     	R2 0 ; if not R2 then PC := 7
	5	[7152]	JMP      	7 ; PC := 7
	6	[7153]	RETURN   	R0 1 ; return 
	7	[7155]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	8	[7155]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x1934072c]
	9	[7155]	GETGLOBAL	R4 K3 ; R4 := gLotusAuraUpgradeType
	10	[7155]	MOVE     	R5 R0 ; R5 := R0
	11	[7155]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	12	[7156]	GETGLOBAL	R3 K4 ; R3 := 0xcfc01047
	13	[7156]	MOVE     	R4 R2 ; R4 := R2
	14	[7156]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	15	[7156]	JMP      	23 ; PC := 23
	16	[7157]	TEST     	R1 0 ; if not R1 then PC := 21
	17	[7157]	JMP      	21 ; PC := 21
	18	[7158]	SELF     	R8 R7 K5 ; R9 := R7; R8 := R7[0xeedfc816]
	19	[7158]	CALL     	R8 2 1 ; R8(R9)
	20	[7158]	JMP      	23 ; PC := 23
	21	[7160]	SELF     	R8 R7 K6 ; R9 := R7; R8 := R7[0xdaa0c115]
	22	[7160]	CALL     	R8 2 1 ; R8(R9)
	23	[7156]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 16; R5 := R6 end
	24	[7161]	JMP      	16 ; PC := 16
	25	[7163]	RETURN   	R0 1 ; return 

function #351 <?:7166,7172> (12 instructions, 48 bytes at 00000160C6843890)
1 param, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[7167]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7167]	MOVE     	R2 R0 ; R2 := R0
	3	[7167]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7167]	TEST     	R1 1 ; if R1 then PC := 10
	5	[7167]	JMP      	10 ; PC := 10
	6	[7168]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x62c81b76]
	7	[7168]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[7168]	GETTABLE 	R1 R1 K2 ; R1 := R1["mIsFirstTimeInNode"]
	9	[7168]	RETURN   	R1 2 ; return R1 
	10	[7171]	OP_LOADBOOL	R1 0 0 ; R1 := false
	11	[7171]	RETURN   	R1 2 ; return R1 
	12	[7172]	RETURN   	R0 1 ; return 

function #352 <?:7174,7179> (15 instructions, 60 bytes at 00000160C6843A20)
2 params, 5 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7175]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[7175]	GETGLOBAL	R3 K1 ; R3 := _T
	3	[7175]	GETTABLE 	R3 R3 K2 ; R3 := R3["PendingEquippingGearItem"]
	4	[7175]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[7175]	TEST     	R2 0 ; if not R2 then PC := 10
	6	[7175]	JMP      	10 ; PC := 10
	7	[7176]	GETGLOBAL	R2 K1 ; R2 := _T
	8	[7176]	NEWTABLE 	R3 0 0 ; R3 := {}
	9	[7176]	SETTABLE 	R2 K2 R3 ; R2[0x46a0ebf5] := R3
	10	[7178]	GETGLOBAL	R2 K1 ; R2 := _T
	11	[7178]	GETTABLE 	R2 R2 K2 ; R2 := R2["PendingEquippingGearItem"]
	12	[7178]	SELF     	R3 R0 K3 ; R4 := R0; R3 := R0[0x388577d5]
	13	[7178]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[7178]	SETTABLE 	R2 R3 R1 ; R2[R3] := R1
	15	[7179]	RETURN   	R0 1 ; return 

function #353 <?:7181,7187> (15 instructions, 60 bytes at 00000160C6843BF0)
1 param, 4 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7182]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7182]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7182]	GETTABLE 	R2 R2 K2 ; R2 := R2["PendingEquippingGearItem"]
	4	[7182]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7182]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7182]	JMP      	9 ; PC := 9
	7	[7183]	OP_LOADBOOL	R1 0 0 ; R1 := false
	8	[7183]	RETURN   	R1 2 ; return R1 
	9	[7186]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7186]	GETTABLE 	R1 R1 K2 ; R1 := R1["PendingEquippingGearItem"]
	11	[7186]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x388577d5]
	12	[7186]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[7186]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	14	[7186]	RETURN   	R1 2 ; return R1 
	15	[7187]	RETURN   	R0 1 ; return 

function #354 <?:7189,7232> (143 instructions, 572 bytes at 00000160C6843D70)
1 param, 29 slots, 0 upvalues, 0 locals, 19 constants, 0 functions
	1	[7190]	EQ       	0 R0 K0 ; if R0 ~= nil then PC := 23
	2	[7190]	JMP      	23 ; PC := 23
	3	[7191]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	4	[7191]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xfb64e76c]
	5	[7191]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[7192]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	7	[7192]	MOVE     	R3 R1 ; R3 := R1
	8	[7192]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[7192]	TEST     	R2 1 ; if R2 then PC := 19
	10	[7192]	JMP      	19 ; PC := 19
	11	[7192]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0xf08bc0f9]
	12	[7192]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[7192]	TEST     	R2 0 ; if not R2 then PC := 19
	14	[7192]	JMP      	19 ; PC := 19
	15	[7193]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xced29f79]
	16	[7193]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[7193]	MOVE     	R0 R2 ; R0 := R2
	18	[7193]	JMP      	23 ; PC := 23
	19	[7195]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	20	[7195]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x78298275]
	21	[7195]	CALL     	R2 2 2 ; R2 := R2(R3)
	22	[7195]	MOVE     	R0 R2 ; R0 := R2
	23	[7199]	OP_LOADBOOL	R2 0 0 ; R2 := false
	24	[7200]	SELF     	R3 R0 K7 ; R4 := R0; R3 := R0[0xd1586535]
	25	[7200]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[7202]	LOADK    	R4 := 1.000000
	27	[7202]	GETGLOBAL	R5 K8 ; R5 := SHIP_ROOMS
	28	[7202]	LEN      	R5 R5 ; R5 := # R5
	29	[7202]	LOADK    	R6 := 1.000000
	30	[7202]	FORPREP  	R4 80 ; R4 -= R6; PC := 80
	31	[7203]	GETGLOBAL	R8 K1 ; R8 := 0x89326c93
	32	[7203]	SELF     	R8 R8 K9 ; R9 := R8; R8 := R8[0xc7fcada9]
	33	[7203]	GETGLOBAL	R10 K8 ; R10 := SHIP_ROOMS
	34	[7203]	GETTABLE 	R10 R10 R7 ; R10 := R10[R7]
	35	[7203]	GETTABLE 	R10 R10 K10 ; R10 := R10["Name"]
	36	[7203]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	37	[7204]	LOADK    	R9 := 1.000000
	38	[7204]	LEN      	R10 R8 ; R10 := # R8
	39	[7204]	LOADK    	R11 := 1.000000
	40	[7204]	FORPREP  	R9 79 ; R9 -= R11; PC := 79
	41	[7205]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	42	[7205]	SELF     	R13 R13 K11 ; R14 := R13; R13 := R13[0x79a9e9d3]
	43	[7205]	CALL     	R13 2 2 ; R13 := R13(R14)
	44	[7206]	GETTABLE 	R14 R8 R12 ; R14 := R8[R12]
	45	[7206]	SELF     	R14 R14 K12 ; R15 := R14; R14 := R14[0x8fbd942d]
	46	[7206]	CALL     	R14 2 2 ; R14 := R14(R15)
	47	[7208]	GETTABLE 	R15 R14 K13 ; R15 := R14["x"]
	48	[7208]	GETTABLE 	R16 R3 K13 ; R16 := R3["x"]
	49	[7208]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	50	[7208]	JMP      	79 ; PC := 79
	51	[7208]	GETTABLE 	R15 R14 K14 ; R15 := R14["y"]
	52	[7208]	GETTABLE 	R16 R3 K14 ; R16 := R3["y"]
	53	[7208]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	54	[7208]	JMP      	79 ; PC := 79
	55	[7208]	GETTABLE 	R15 R14 K15 ; R15 := R14["z"]
	56	[7208]	GETTABLE 	R16 R3 K15 ; R16 := R3["z"]
	57	[7208]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	58	[7208]	JMP      	79 ; PC := 79
	59	[7209]	GETTABLE 	R15 R3 K13 ; R15 := R3["x"]
	60	[7209]	GETTABLE 	R16 R13 K13 ; R16 := R13["x"]
	61	[7209]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	62	[7209]	JMP      	79 ; PC := 79
	63	[7209]	GETTABLE 	R15 R3 K14 ; R15 := R3["y"]
	64	[7209]	GETTABLE 	R16 R13 K14 ; R16 := R13["y"]
	65	[7209]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	66	[7209]	JMP      	79 ; PC := 79
	67	[7209]	GETTABLE 	R15 R3 K15 ; R15 := R3["z"]
	68	[7209]	GETTABLE 	R16 R13 K15 ; R16 := R13["z"]
	69	[7209]	LE       	0 R15 R16 ; if R15 > R16 then PC := 79
	70	[7209]	JMP      	79 ; PC := 79
	71	[7211]	GETGLOBAL	R15 K8 ; R15 := SHIP_ROOMS
	72	[7211]	GETTABLE 	R15 R15 R7 ; R15 := R15[R7]
	73	[7211]	GETTABLE 	R15 R15 K10 ; R15 := R15["Name"]
	74	[7211]	GETGLOBAL	R16 K8 ; R16 := SHIP_ROOMS
	75	[7211]	GETTABLE 	R16 R16 R7 ; R16 := R16[R7]
	76	[7211]	GETTABLE 	R16 R16 K16 ; R16 := R16["LocTag"]
	77	[7211]	MOVE     	R17 R2 ; R17 := R2
	78	[7211]	RETURN   	R15 4 ; return R15, R16, R17 
	79	[7204]	FORLOOP  	R9 41 ; R9 += R11; if R9 <= R10 then begin PC := 41; R12 := R9 end
	80	[7202]	FORLOOP  	R4 31 ; R4 += R6; if R4 <= R5 then begin PC := 31; R7 := R4 end
	81	[7216]	LOADK    	R15 := 1.000000
	82	[7216]	GETGLOBAL	R16 K17 ; R16 := APARTMENT_ROOMS
	83	[7216]	LEN      	R16 R16 ; R16 := # R16
	84	[7216]	LOADK    	R17 := 1.000000
	85	[7216]	FORPREP  	R15 136 ; R15 -= R17; PC := 136
	86	[7217]	GETGLOBAL	R19 K1 ; R19 := 0x89326c93
	87	[7217]	SELF     	R19 R19 K9 ; R20 := R19; R19 := R19[0xc7fcada9]
	88	[7217]	GETGLOBAL	R21 K17 ; R21 := APARTMENT_ROOMS
	89	[7217]	GETTABLE 	R21 R21 R18 ; R21 := R21[R18]
	90	[7217]	GETTABLE 	R21 R21 K10 ; R21 := R21["Name"]
	91	[7217]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	92	[7218]	LOADK    	R20 := 1.000000
	93	[7218]	LEN      	R21 R19 ; R21 := # R19
	94	[7218]	LOADK    	R22 := 1.000000
	95	[7218]	FORPREP  	R20 135 ; R20 -= R22; PC := 135
	96	[7219]	GETTABLE 	R24 R19 R23 ; R24 := R19[R23]
	97	[7219]	SELF     	R24 R24 K11 ; R25 := R24; R24 := R24[0x79a9e9d3]
	98	[7219]	CALL     	R24 2 2 ; R24 := R24(R25)
	99	[7220]	GETTABLE 	R25 R19 R23 ; R25 := R19[R23]
	100	[7220]	SELF     	R25 R25 K12 ; R26 := R25; R25 := R25[0x8fbd942d]
	101	[7220]	CALL     	R25 2 2 ; R25 := R25(R26)
	102	[7222]	GETTABLE 	R26 R25 K13 ; R26 := R25["x"]
	103	[7222]	GETTABLE 	R27 R3 K13 ; R27 := R3["x"]
	104	[7222]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	105	[7222]	JMP      	135 ; PC := 135
	106	[7222]	GETTABLE 	R26 R25 K14 ; R26 := R25["y"]
	107	[7222]	GETTABLE 	R27 R3 K14 ; R27 := R3["y"]
	108	[7222]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	109	[7222]	JMP      	135 ; PC := 135
	110	[7222]	GETTABLE 	R26 R25 K15 ; R26 := R25["z"]
	111	[7222]	GETTABLE 	R27 R3 K15 ; R27 := R3["z"]
	112	[7222]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	113	[7222]	JMP      	135 ; PC := 135
	114	[7223]	GETTABLE 	R26 R3 K13 ; R26 := R3["x"]
	115	[7223]	GETTABLE 	R27 R24 K13 ; R27 := R24["x"]
	116	[7223]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	117	[7223]	JMP      	135 ; PC := 135
	118	[7223]	GETTABLE 	R26 R3 K14 ; R26 := R3["y"]
	119	[7223]	GETTABLE 	R27 R24 K14 ; R27 := R24["y"]
	120	[7223]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	121	[7223]	JMP      	135 ; PC := 135
	122	[7223]	GETTABLE 	R26 R3 K15 ; R26 := R3["z"]
	123	[7223]	GETTABLE 	R27 R24 K15 ; R27 := R24["z"]
	124	[7223]	LE       	0 R26 R27 ; if R26 > R27 then PC := 135
	125	[7223]	JMP      	135 ; PC := 135
	126	[7225]	OP_LOADBOOL	R2 1 0 ; R2 := true
	127	[7226]	GETGLOBAL	R26 K17 ; R26 := APARTMENT_ROOMS
	128	[7226]	GETTABLE 	R26 R26 R18 ; R26 := R26[R18]
	129	[7226]	GETTABLE 	R26 R26 K10 ; R26 := R26["Name"]
	130	[7226]	GETGLOBAL	R27 K17 ; R27 := APARTMENT_ROOMS
	131	[7226]	GETTABLE 	R27 R27 R18 ; R27 := R27[R18]
	132	[7226]	GETTABLE 	R27 R27 K16 ; R27 := R27["LocTag"]
	133	[7226]	MOVE     	R28 R2 ; R28 := R2
	134	[7226]	RETURN   	R26 4 ; return R26, R27, R28 
	135	[7218]	FORLOOP  	R20 96 ; R20 += R22; if R20 <= R21 then begin PC := 96; R23 := R20 end
	136	[7216]	FORLOOP  	R15 86 ; R15 += R17; if R15 <= R16 then begin PC := 86; R18 := R15 end
	137	[7231]	GETGLOBAL	R26 K18 ; R26 := OUTSIDE_THE_SHIP_ROOM
	138	[7231]	GETTABLE 	R26 R26 K10 ; R26 := R26["Name"]
	139	[7231]	GETGLOBAL	R27 K18 ; R27 := OUTSIDE_THE_SHIP_ROOM
	140	[7231]	GETTABLE 	R27 R27 K16 ; R27 := R27["LocTag"]
	141	[7231]	MOVE     	R28 R2 ; R28 := R2
	142	[7231]	RETURN   	R26 4 ; return R26, R27, R28 
	143	[7232]	RETURN   	R0 1 ; return 

function #355 <?:7234,7236> (5 instructions, 20 bytes at 00000160C68443E0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7235]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7235]	MOVE     	R2 R0 ; R2 := R0
	3	[7235]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[7235]	RETURN   	R1 0 ; return R1,... 
	5	[7236]	RETURN   	R0 1 ; return 

function #356 <?:7238,7251> (29 instructions, 116 bytes at 00000160C68444D0)
1 param, 10 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[7239]	LOADK    	R1 := 1.000000
	2	[7239]	GETGLOBAL	R2 K0 ; R2 := SHIP_ROOMS
	3	[7239]	LEN      	R2 R2 ; R2 := # R2
	4	[7239]	LOADK    	R3 := 1.000000
	5	[7239]	FORPREP  	R1 13 ; R1 -= R3; PC := 13
	6	[7240]	GETGLOBAL	R5 K0 ; R5 := SHIP_ROOMS
	7	[7240]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	8	[7240]	GETTABLE 	R5 R5 K1 ; R5 := R5["Name"]
	9	[7240]	EQ       	0 R5 R0 ; if R5 ~= R0 then PC := 13
	10	[7240]	JMP      	13 ; PC := 13
	11	[7241]	GETGLOBAL	R5 K2 ; R5 := DECO_AREA_SHIP
	12	[7241]	RETURN   	R5 2 ; return R5 
	13	[7239]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	14	[7244]	LOADK    	R5 := 1.000000
	15	[7244]	GETGLOBAL	R6 K3 ; R6 := APARTMENT_ROOMS
	16	[7244]	LEN      	R6 R6 ; R6 := # R6
	17	[7244]	LOADK    	R7 := 1.000000
	18	[7244]	FORPREP  	R5 26 ; R5 -= R7; PC := 26
	19	[7245]	GETGLOBAL	R9 K3 ; R9 := APARTMENT_ROOMS
	20	[7245]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	21	[7245]	GETTABLE 	R9 R9 K1 ; R9 := R9["Name"]
	22	[7245]	EQ       	0 R9 R0 ; if R9 ~= R0 then PC := 26
	23	[7245]	JMP      	26 ; PC := 26
	24	[7246]	GETGLOBAL	R9 K4 ; R9 := DECO_AREA_APARTMENT
	25	[7246]	RETURN   	R9 2 ; return R9 
	26	[7244]	FORLOOP  	R5 19 ; R5 += R7; if R5 <= R6 then begin PC := 19; R8 := R5 end
	27	[7250]	GETGLOBAL	R9 K5 ; R9 := DECO_AREA_UNKNOWN
	28	[7250]	RETURN   	R9 2 ; return R9 
	29	[7251]	RETURN   	R0 1 ; return 

function #357 <?:7253,7330> (210 instructions, 840 bytes at 00000160C68446F0)
3 params, 25 slots, 1 upvalue, 0 locals, 37 constants, 0 functions
	1	[7254]	TEST     	R1 0 ; if not R1 then PC := 37
	2	[7254]	JMP      	37 ; PC := 37
	3	[7255]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	4	[7255]	GETGLOBAL	R4 K1 ; R4 := _T
	5	[7255]	GETTABLE 	R4 R4 K2 ; R4 := R4["apartmentDecoAncor"]
	6	[7255]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[7255]	TEST     	R3 0 ; if not R3 then PC := 12
	8	[7255]	JMP      	12 ; PC := 12
	9	[7256]	GETGLOBAL	R3 K1 ; R3 := _T
	10	[7256]	NEWTABLE 	R4 0 0 ; R4 := {}
	11	[7256]	SETTABLE 	R3 K2 R4 ; R3["apartmentDecoAncor"] := R4
	12	[7259]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	13	[7259]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7259]	GETTABLE 	R4 R4 K2 ; R4 := R4["apartmentDecoAncor"]
	15	[7259]	GETTABLE 	R4 R4 R0 ; R4 := R4[R0]
	16	[7259]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[7259]	TEST     	R3 0 ; if not R3 then PC := 32
	18	[7259]	JMP      	32 ; PC := 32
	19	[7260]	GETGLOBAL	R3 K1 ; R3 := _T
	20	[7260]	GETTABLE 	R3 R3 K2 ; R3 := R3["apartmentDecoAncor"]
	21	[7260]	GETGLOBAL	R4 K3 ; R4 := 0x89326c93
	22	[7260]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x46a0ebf5]
	23	[7260]	GETGLOBAL	R6 K5 ; R6 := 0x0469f296
	24	[7260]	GETGLOBAL	R7 K6 ; R7 := 0x64fb1586
	25	[7260]	MOVE     	R8 R0 ; R8 := R0
	26	[7260]	CALL     	R7 2 2 ; R7 := R7(R8)
	27	[7260]	LOADK    	R8 K7 ; R8 := "Anchor"
	28	[7260]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	29	[7260]	CALL     	R6 2 0 ; R6,... := R6(R7)
	30	[7260]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	31	[7260]	SETTABLE 	R3 R0 R4 ; R3[R0] := R4
	32	[7263]	GETGLOBAL	R3 K1 ; R3 := _T
	33	[7263]	GETTABLE 	R3 R3 K2 ; R3 := R3["apartmentDecoAncor"]
	34	[7263]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	35	[7263]	RETURN   	R3 2 ; return R3 
	36	[7263]	JMP      	131 ; PC := 131
	37	[7264]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	38	[7264]	GETGLOBAL	R4 K1 ; R4 := _T
	39	[7264]	GETTABLE 	R4 R4 K8 ; R4 := R4["shipDecoOrbiterAnchor"]
	40	[7264]	CALL     	R3 2 2 ; R3 := R3(R4)
	41	[7264]	TEST     	R3 0 ; if not R3 then PC := 131
	42	[7264]	JMP      	131 ; PC := 131
	43	[7267]	GETGLOBAL	R3 K1 ; R3 := _T
	44	[7267]	GETGLOBAL	R4 K3 ; R4 := 0x89326c93
	45	[7267]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0x46a0ebf5]
	46	[7267]	GETGLOBAL	R6 K5 ; R6 := 0x0469f296
	47	[7267]	LOADK    	R7 K10 ; R7 := "PlayerShipDecosAnchorLiset"
	48	[7267]	CALL     	R6 2 0 ; R6,... := R6(R7)
	49	[7267]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	50	[7267]	SETTABLE 	R3 K9 R4 ; R3["shipDecoLisetAnchor"] := R4
	51	[7270]	GETGLOBAL	R3 K11 ; R3 := 0xa421af95
	52	[7270]	LOADK    	R4 K12 ; R4 := 9999.000000
	53	[7270]	LOADK    	R5 K12 ; R5 := 9999.000000
	54	[7270]	LOADK    	R6 K12 ; R6 := 9999.000000
	55	[7270]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	56	[7271]	GETGLOBAL	R4 K3 ; R4 := 0x89326c93
	57	[7271]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0xc7fcada9]
	58	[7271]	GETGLOBAL	R6 K14 ; R6 := LISET_ROOM
	59	[7271]	GETTABLE 	R6 R6 K15 ; R6 := R6["Name"]
	60	[7271]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	61	[7273]	LOADK    	R5 := 1.000000
	62	[7273]	LEN      	R6 R4 ; R6 := # R4
	63	[7273]	LOADK    	R7 := 1.000000
	64	[7273]	FORPREP  	R5 87 ; R5 -= R7; PC := 87
	65	[7274]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	66	[7274]	SELF     	R9 R9 K16 ; R10 := R9; R9 := R9[0x79a9e9d3]
	67	[7274]	CALL     	R9 2 2 ; R9 := R9(R10)
	68	[7275]	GETTABLE 	R10 R4 R8 ; R10 := R4[R8]
	69	[7275]	SELF     	R10 R10 K17 ; R11 := R10; R10 := R10[0x8fbd942d]
	70	[7275]	CALL     	R10 2 2 ; R10 := R10(R11)
	71	[7277]	SUB      	R11 R9 R10 ; R11 := R9 - R10
	72	[7278]	GETGLOBAL	R12 K18 ; R12 := 0x4fd57545
	73	[7278]	MOVE     	R13 R11 ; R13 := R11
	74	[7278]	MOVE     	R14 R11 ; R14 := R11
	75	[7278]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	76	[7278]	GETGLOBAL	R13 K18 ; R13 := 0x4fd57545
	77	[7278]	MOVE     	R14 R3 ; R14 := R3
	78	[7278]	MOVE     	R15 R3 ; R15 := R3
	79	[7278]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	80	[7278]	LT       	0 R12 R13 ; if R12 >= R13 then PC := 87
	81	[7278]	JMP      	87 ; PC := 87
	82	[7279]	MOVE     	R3 R11 ; R3 := R11
	83	[7280]	GETGLOBAL	R12 K1 ; R12 := _T
	84	[7280]	SETTABLE 	R12 K19 R9 ; R12["shipDecoLisetDoorwayBoundsMax"] := R9
	85	[7281]	GETGLOBAL	R12 K1 ; R12 := _T
	86	[7281]	SETTABLE 	R12 K20 R10 ; R12["shipDecoLisetDoorwayBoundsMin"] := R10
	87	[7273]	FORLOOP  	R5 65 ; R5 += R7; if R5 <= R6 then begin PC := 65; R8 := R5 end
	88	[7285]	GETGLOBAL	R12 K3 ; R12 := 0x89326c93
	89	[7285]	SELF     	R12 R12 K4 ; R13 := R12; R12 := R12[0x46a0ebf5]
	90	[7285]	GETGLOBAL	R14 K5 ; R14 := 0x0469f296
	91	[7285]	LOADK    	R15 K21 ; R15 := "PlayerShipDecosAnchorOrbiter"
	92	[7285]	CALL     	R14 2 0 ; R14,... := R14(R15)
	93	[7285]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	94	[7286]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	95	[7286]	MOVE     	R14 R12 ; R14 := R12
	96	[7286]	CALL     	R13 2 2 ; R13 := R13(R14)
	97	[7286]	TEST     	R13 1 ; if R13 then PC := 102
	98	[7286]	JMP      	102 ; PC := 102
	99	[7287]	GETGLOBAL	R13 K1 ; R13 := _T
	100	[7287]	SETTABLE 	R13 K8 R12 ; R13["shipDecoOrbiterAnchor"] := R12
	101	[7287]	JMP      	131 ; PC := 131
	102	[7291]	GETGLOBAL	R13 K3 ; R13 := 0x89326c93
	103	[7291]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0xfb669000]
	104	[7291]	GETGLOBAL	R15 K23 ; R15 := gZoneAttribsType
	105	[7291]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	106	[7292]	LOADNIL  	R14 R14 ; R14 := nil
	107	[7293]	GETGLOBAL	R15 K0 ; R15 := 0x7b998233
	108	[7293]	MOVE     	R16 R13 ; R16 := R13
	109	[7293]	CALL     	R15 2 2 ; R15 := R15(R16)
	110	[7293]	TEST     	R15 1 ; if R15 then PC := 129
	111	[7293]	JMP      	129 ; PC := 129
	112	[7293]	LEN      	R15 R13 ; R15 := # R13
	113	[7293]	LT       	0 K24 R15 ; if 0.000000 >= R15 then PC := 129
	114	[7293]	JMP      	129 ; PC := 129
	115	[7294]	GETTABLE 	R14 R13 K25 ; R14 := R13[1.000000]
	116	[7295]	LOADK    	R15 := 2.000000
	117	[7295]	LEN      	R16 R13 ; R16 := # R13
	118	[7295]	LOADK    	R17 := 1.000000
	119	[7295]	FORPREP  	R15 128 ; R15 -= R17; PC := 128
	120	[7296]	GETTABLE 	R19 R13 R18 ; R19 := R13[R18]
	121	[7296]	SELF     	R19 R19 K26 ; R20 := R19; R19 := R19[0x388577d5]
	122	[7296]	CALL     	R19 2 2 ; R19 := R19(R20)
	123	[7296]	SELF     	R20 R14 K26 ; R21 := R14; R20 := R14[0x388577d5]
	124	[7296]	CALL     	R20 2 2 ; R20 := R20(R21)
	125	[7296]	LT       	0 R19 R20 ; if R19 >= R20 then PC := 128
	126	[7296]	JMP      	128 ; PC := 128
	127	[7297]	GETTABLE 	R14 R13 R18 ; R14 := R13[R18]
	128	[7295]	FORLOOP  	R15 120 ; R15 += R17; if R15 <= R16 then begin PC := 120; R18 := R15 end
	129	[7302]	GETGLOBAL	R19 K1 ; R19 := _T
	130	[7302]	SETTABLE 	R19 K8 R14 ; R19["shipDecoOrbiterAnchor"] := R14
	131	[7306]	GETGLOBAL	R19 K14 ; R19 := LISET_ROOM
	132	[7306]	GETTABLE 	R19 R19 K15 ; R19 := R19["Name"]
	133	[7306]	EQ       	0 R0 R19 ; if R0 ~= R19 then PC := 197
	134	[7306]	JMP      	197 ; PC := 197
	135	[7307]	GETUPVAL 	R19 U0 ; R19 := U0
	136	[7307]	CALL     	R19 1 2 ; R19 := R19()
	137	[7307]	TEST     	R19 0 ; if not R19 then PC := 193
	138	[7307]	JMP      	193 ; PC := 193
	139	[7310]	LOADNIL  	R19 R19 ; R19 := nil
	140	[7311]	GETTABLE 	R20 R2 K27 ; R20 := R2["pos"]
	141	[7311]	EQ       	1 R20 K28 ; if R20 == nil then PC := 152
	142	[7311]	JMP      	152 ; PC := 152
	143	[7312]	GETGLOBAL	R20 K1 ; R20 := _T
	144	[7312]	GETTABLE 	R20 R20 K9 ; R20 := R20["shipDecoLisetAnchor"]
	145	[7312]	SELF     	R20 R20 K29 ; R21 := R20; R20 := R20[0xa5f8cbef]
	146	[7312]	GETGLOBAL	R22 K30 ; R22 := EMPTY_SYMBOL
	147	[7312]	GETTABLE 	R23 R2 K27 ; R23 := R2["pos"]
	148	[7312]	GETTABLE 	R24 R2 K31 ; R24 := R2["rot"]
	149	[7312]	CALL     	R20 5 2 ; R20 := R20(R21,R22,R23,R24)
	150	[7312]	MOVE     	R19 R20 ; R19 := R20
	151	[7312]	JMP      	155 ; PC := 155
	152	[7314]	SELF     	R20 R2 K32 ; R21 := R2; R20 := R2[0xd1586535]
	153	[7314]	CALL     	R20 2 2 ; R20 := R20(R21)
	154	[7314]	MOVE     	R19 R20 ; R19 := R20
	155	[7317]	GETGLOBAL	R20 K1 ; R20 := _T
	156	[7317]	GETTABLE 	R20 R20 K20 ; R20 := R20["shipDecoLisetDoorwayBoundsMin"]
	157	[7317]	GETTABLE 	R20 R20 K33 ; R20 := R20["x"]
	158	[7317]	GETTABLE 	R21 R19 K33 ; R21 := R19["x"]
	159	[7317]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	160	[7317]	JMP      	193 ; PC := 193
	161	[7317]	GETGLOBAL	R20 K1 ; R20 := _T
	162	[7317]	GETTABLE 	R20 R20 K20 ; R20 := R20["shipDecoLisetDoorwayBoundsMin"]
	163	[7317]	GETTABLE 	R20 R20 K34 ; R20 := R20["y"]
	164	[7317]	GETTABLE 	R21 R19 K34 ; R21 := R19["y"]
	165	[7317]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	166	[7317]	JMP      	193 ; PC := 193
	167	[7317]	GETGLOBAL	R20 K1 ; R20 := _T
	168	[7317]	GETTABLE 	R20 R20 K20 ; R20 := R20["shipDecoLisetDoorwayBoundsMin"]
	169	[7317]	GETTABLE 	R20 R20 K35 ; R20 := R20["z"]
	170	[7317]	GETTABLE 	R21 R19 K35 ; R21 := R19["z"]
	171	[7317]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	172	[7317]	JMP      	193 ; PC := 193
	173	[7318]	GETTABLE 	R20 R19 K33 ; R20 := R19["x"]
	174	[7318]	GETGLOBAL	R21 K1 ; R21 := _T
	175	[7318]	GETTABLE 	R21 R21 K19 ; R21 := R21["shipDecoLisetDoorwayBoundsMax"]
	176	[7318]	GETTABLE 	R21 R21 K33 ; R21 := R21["x"]
	177	[7318]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	178	[7318]	JMP      	193 ; PC := 193
	179	[7318]	GETTABLE 	R20 R19 K34 ; R20 := R19["y"]
	180	[7318]	GETGLOBAL	R21 K1 ; R21 := _T
	181	[7318]	GETTABLE 	R21 R21 K19 ; R21 := R21["shipDecoLisetDoorwayBoundsMax"]
	182	[7318]	GETTABLE 	R21 R21 K34 ; R21 := R21["y"]
	183	[7318]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	184	[7318]	JMP      	193 ; PC := 193
	185	[7318]	GETTABLE 	R20 R19 K35 ; R20 := R19["z"]
	186	[7318]	GETGLOBAL	R21 K1 ; R21 := _T
	187	[7318]	GETTABLE 	R21 R21 K19 ; R21 := R21["shipDecoLisetDoorwayBoundsMax"]
	188	[7318]	GETTABLE 	R21 R21 K35 ; R21 := R21["z"]
	189	[7318]	LE       	0 R20 R21 ; if R20 > R21 then PC := 193
	190	[7318]	JMP      	193 ; PC := 193
	191	[7320]	LOADNIL  	R20 R20 ; R20 := nil
	192	[7320]	RETURN   	R20 2 ; return R20 
	193	[7324]	GETGLOBAL	R20 K1 ; R20 := _T
	194	[7324]	GETTABLE 	R20 R20 K9 ; R20 := R20["shipDecoLisetAnchor"]
	195	[7324]	RETURN   	R20 2 ; return R20 
	196	[7324]	JMP      	207 ; PC := 207
	197	[7325]	GETGLOBAL	R20 K36 ; R20 := OUTSIDE_THE_SHIP_ROOM
	198	[7325]	GETTABLE 	R20 R20 K15 ; R20 := R20["Name"]
	199	[7325]	EQ       	0 R0 R20 ; if R0 ~= R20 then PC := 207
	200	[7325]	JMP      	207 ; PC := 207
	201	[7325]	GETUPVAL 	R20 U0 ; R20 := U0
	202	[7325]	CALL     	R20 1 2 ; R20 := R20()
	203	[7325]	TEST     	R20 1 ; if R20 then PC := 207
	204	[7325]	JMP      	207 ; PC := 207
	205	[7326]	LOADNIL  	R20 R20 ; R20 := nil
	206	[7326]	RETURN   	R20 2 ; return R20 
	207	[7329]	GETGLOBAL	R20 K1 ; R20 := _T
	208	[7329]	GETTABLE 	R20 R20 K8 ; R20 := R20["shipDecoOrbiterAnchor"]
	209	[7329]	RETURN   	R20 2 ; return R20 
	210	[7330]	RETURN   	R0 1 ; return 

function #358 <?:7332,7356> (45 instructions, 180 bytes at 00000160C6845330)
7 params, 12 slots, 0 upvalues, 0 locals, 12 constants, 1 function
	1	[7333]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	2	[7333]	GETGLOBAL	R8 K1 ; R8 := 0x0032441c
	3	[7333]	GETTABLE 	R8 R8 K2 ; R8 := R8["UIMovie_LoadoutSelectMovie"]
	4	[7333]	CALL     	R7 2 2 ; R7 := R7(R8)
	5	[7333]	TEST     	R7 1 ; if R7 then PC := 12
	6	[7333]	JMP      	12 ; PC := 12
	7	[7333]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	8	[7333]	MOVE     	R8 R2 ; R8 := R2
	9	[7333]	CALL     	R7 2 2 ; R7 := R7(R8)
	10	[7333]	TEST     	R7 0 ; if not R7 then PC := 14
	11	[7333]	JMP      	14 ; PC := 14
	12	[7334]	LOADNIL  	R7 R7 ; R7 := nil
	13	[7334]	RETURN   	R7 2 ; return R7 
	14	[7337]	LOADNIL  	R7 R7 ; R7 := nil
	15	[7338]	GETGLOBAL	R8 K3 ; R8 := _T
	16	[7338]	SETTABLE 	R8 K4 R3 ; R8["SelectLoadOutType"] := R3
	17	[7339]	GETGLOBAL	R8 K3 ; R8 := _T
	18	[7339]	SETTABLE 	R8 K5 R6 ; R8["CurrentLoadoutId"] := R6
	19	[7340]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	20	[7340]	MOVE     	R9 R0 ; R9 := R0
	21	[7340]	CALL     	R8 2 2 ; R8 := R8(R9)
	22	[7340]	TEST     	R8 1 ; if R8 then PC := 30
	23	[7340]	JMP      	30 ; PC := 30
	24	[7341]	SELF     	R8 R0 K6 ; R9 := R0; R8 := R0[0x1fd6abd0]
	25	[7341]	GETGLOBAL	R10 K1 ; R10 := 0x0032441c
	26	[7341]	GETTABLE 	R10 R10 K2 ; R10 := R10["UIMovie_LoadoutSelectMovie"]
	27	[7341]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	28	[7341]	MOVE     	R7 R8 ; R7 := R8
	29	[7341]	JMP      	36 ; PC := 36
	30	[7343]	GETGLOBAL	R8 K7 ; R8 := 0x9ba7909f
	31	[7343]	SELF     	R8 R8 K8 ; R9 := R8; R8 := R8[0xcfba257f]
	32	[7343]	GETGLOBAL	R10 K1 ; R10 := 0x0032441c
	33	[7343]	GETTABLE 	R10 R10 K2 ; R10 := R10["UIMovie_LoadoutSelectMovie"]
	34	[7343]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	35	[7343]	MOVE     	R7 R8 ; R7 := R8
	36	[7345]	GETGLOBAL	R8 K3 ; R8 := _T
	37	[7352]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	38	[7352]	MOVE     	R0 R4 ; R0 := R4
	39	[7352]	SETTABLE 	R8 K9 R9 ; R8["LoadoutSelectionDone"] := R9
	40	[7353]	SELF     	R8 R7 K10 ; R9 := R7; R8 := R7[0xe4162eed]
	41	[7353]	LOADK    	R10 K11 ; R10 := "SetCallBack"
	42	[7353]	LOADK    	R11 K9 ; R11 := "LoadoutSelectionDone"
	43	[7353]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	44	[7355]	RETURN   	R7 2 ; return R7 
	45	[7356]	RETURN   	R0 1 ; return 

function #359 <?:7358,7426> (124 instructions, 496 bytes at 00000160C68458C0)
2 params, 12 slots, 0 upvalues, 0 locals, 25 constants, 0 functions
	1	[7359]	LOADK    	R2 K0 ; R2 := ""
	2	[7360]	LOADK    	R3 K0 ; R3 := ""
	3	[7361]	LOADK    	R4 := 0.000000
	4	[7363]	GETGLOBAL	R5 K1 ; R5 := FORTUNA_NODE_TAG
	5	[7363]	EQ       	1 R1 R5 ; if R1 == R5 then PC := 10
	6	[7363]	JMP      	10 ; PC := 10
	7	[7363]	GETGLOBAL	R5 K2 ; R5 := ORB_VALLIS_NODE_TAG
	8	[7363]	EQ       	0 R1 R5 ; if R1 ~= R5 then PC := 37
	9	[7363]	JMP      	37 ; PC := 37
	10	[7364]	GETGLOBAL	R5 K3 ; R5 := TimeOfDayConstants
	11	[7364]	GETTABLE 	R5 R5 K4 ; R5 := R5["HOURS_PER_SECOND_VENUS"]
	12	[7365]	LT       	0 R0 K5 ; if R0 >= 12.000000 then PC := 21
	13	[7365]	JMP      	21 ; PC := 21
	14	[7366]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	15	[7366]	GETTABLE 	R2 R6 K6 ; R2 := R6["TIME_OF_DAY_LABEL_COLD"]
	16	[7367]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	17	[7367]	GETTABLE 	R3 R6 K7 ; R3 := R6["TIME_OF_DAY_LABEL_WARM"]
	18	[7368]	SUB      	R6 K5 R0 ; R6 := 12.000000 - R0
	19	[7368]	DIV      	R4 R6 R5 ; R4 := R6 / R5
	20	[7368]	JMP      	120 ; PC := 120
	21	[7369]	LT       	0 R0 K8 ; if R0 >= 18.000000 then PC := 30
	22	[7369]	JMP      	30 ; PC := 30
	23	[7370]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	24	[7370]	GETTABLE 	R2 R6 K7 ; R2 := R6["TIME_OF_DAY_LABEL_WARM"]
	25	[7371]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	26	[7371]	GETTABLE 	R3 R6 K6 ; R3 := R6["TIME_OF_DAY_LABEL_COLD"]
	27	[7372]	SUB      	R6 K8 R0 ; R6 := 18.000000 - R0
	28	[7372]	DIV      	R4 R6 R5 ; R4 := R6 / R5
	29	[7372]	JMP      	120 ; PC := 120
	30	[7374]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	31	[7374]	GETTABLE 	R2 R6 K6 ; R2 := R6["TIME_OF_DAY_LABEL_COLD"]
	32	[7375]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	33	[7375]	GETTABLE 	R3 R6 K7 ; R3 := R6["TIME_OF_DAY_LABEL_WARM"]
	34	[7376]	SUB      	R6 K9 R0 ; R6 := 36.000000 - R0
	35	[7376]	DIV      	R4 R6 R5 ; R4 := R6 / R5
	36	[7377]	JMP      	120 ; PC := 120
	37	[7378]	GETGLOBAL	R6 K10 ; R6 := OROKIN_TOWER_NODE_TAG
	38	[7378]	EQ       	1 R1 R6 ; if R1 == R6 then PC := 43
	39	[7378]	JMP      	43 ; PC := 43
	40	[7378]	GETGLOBAL	R6 K11 ; R6 := ENTRATI_LANDSCAPE_NODE_TAG
	41	[7378]	EQ       	0 R1 R6 ; if R1 ~= R6 then PC := 68
	42	[7378]	JMP      	68 ; PC := 68
	43	[7379]	GETGLOBAL	R6 K3 ; R6 := TimeOfDayConstants
	44	[7379]	GETTABLE 	R6 R6 K12 ; R6 := R6["HOURS_PER_SECOND_ENTRATI"]
	45	[7380]	LE       	1 K13 R0 ; if 22.000000 <= R0 then PC := 49
	46	[7380]	JMP      	49 ; PC := 49
	47	[7380]	LT       	0 R0 K14 ; if R0 >= 6.000000 then PC := 61
	48	[7380]	JMP      	61 ; PC := 61
	49	[7381]	GETGLOBAL	R7 K3 ; R7 := TimeOfDayConstants
	50	[7381]	GETTABLE 	R2 R7 K15 ; R2 := R7["TIME_OF_DAY_LABEL_VOME"]
	51	[7382]	GETGLOBAL	R7 K3 ; R7 := TimeOfDayConstants
	52	[7382]	GETTABLE 	R3 R7 K16 ; R3 := R7["TIME_OF_DAY_LABEL_FASS"]
	53	[7383]	LE       	0 K13 R0 ; if 22.000000 > R0 then PC := 58
	54	[7383]	JMP      	58 ; PC := 58
	55	[7384]	SUB      	R7 K17 R0 ; R7 := 30.000000 - R0
	56	[7384]	DIV      	R4 R7 R6 ; R4 := R7 / R6
	57	[7384]	JMP      	120 ; PC := 120
	58	[7386]	SUB      	R7 K14 R0 ; R7 := 6.000000 - R0
	59	[7386]	DIV      	R4 R7 R6 ; R4 := R7 / R6
	60	[7387]	JMP      	120 ; PC := 120
	61	[7389]	GETGLOBAL	R7 K3 ; R7 := TimeOfDayConstants
	62	[7389]	GETTABLE 	R2 R7 K16 ; R2 := R7["TIME_OF_DAY_LABEL_FASS"]
	63	[7390]	GETGLOBAL	R7 K3 ; R7 := TimeOfDayConstants
	64	[7390]	GETTABLE 	R3 R7 K15 ; R3 := R7["TIME_OF_DAY_LABEL_VOME"]
	65	[7391]	SUB      	R7 K13 R0 ; R7 := 22.000000 - R0
	66	[7391]	DIV      	R4 R7 R6 ; R4 := R7 / R6
	67	[7392]	JMP      	120 ; PC := 120
	68	[7393]	GETGLOBAL	R7 K18 ; R7 := ZARIMAN_NODE_TAG
	69	[7393]	EQ       	0 R1 R7 ; if R1 ~= R7 then PC := 96
	70	[7393]	JMP      	96 ; PC := 96
	71	[7394]	GETGLOBAL	R7 K3 ; R7 := TimeOfDayConstants
	72	[7394]	GETTABLE 	R7 R7 K19 ; R7 := R7["HOURS_PER_SECOND_ZARIMAN"]
	73	[7395]	LE       	1 K5 R0 ; if 12.000000 <= R0 then PC := 77
	74	[7395]	JMP      	77 ; PC := 77
	75	[7395]	LT       	0 R0 K14 ; if R0 >= 6.000000 then PC := 89
	76	[7395]	JMP      	89 ; PC := 89
	77	[7396]	GETGLOBAL	R8 K3 ; R8 := TimeOfDayConstants
	78	[7396]	GETTABLE 	R2 R8 K20 ; R2 := R8["TIME_OF_DAY_LABEL_CORPUS"]
	79	[7397]	GETGLOBAL	R8 K3 ; R8 := TimeOfDayConstants
	80	[7397]	GETTABLE 	R3 R8 K21 ; R3 := R8["TIME_OF_DAY_LABEL_GRINEER"]
	81	[7398]	LE       	0 K5 R0 ; if 12.000000 > R0 then PC := 86
	82	[7398]	JMP      	86 ; PC := 86
	83	[7399]	SUB      	R8 K9 R0 ; R8 := 36.000000 - R0
	84	[7399]	DIV      	R4 R8 R7 ; R4 := R8 / R7
	85	[7399]	JMP      	120 ; PC := 120
	86	[7401]	SUB      	R8 K5 R0 ; R8 := 12.000000 - R0
	87	[7401]	DIV      	R4 R8 R7 ; R4 := R8 / R7
	88	[7402]	JMP      	120 ; PC := 120
	89	[7404]	GETGLOBAL	R8 K3 ; R8 := TimeOfDayConstants
	90	[7404]	GETTABLE 	R2 R8 K21 ; R2 := R8["TIME_OF_DAY_LABEL_GRINEER"]
	91	[7405]	GETGLOBAL	R8 K3 ; R8 := TimeOfDayConstants
	92	[7405]	GETTABLE 	R3 R8 K20 ; R3 := R8["TIME_OF_DAY_LABEL_CORPUS"]
	93	[7406]	SUB      	R8 K5 R0 ; R8 := 12.000000 - R0
	94	[7406]	DIV      	R4 R8 R7 ; R4 := R8 / R7
	95	[7407]	JMP      	120 ; PC := 120
	96	[7409]	GETGLOBAL	R8 K3 ; R8 := TimeOfDayConstants
	97	[7409]	GETTABLE 	R8 R8 K22 ; R8 := R8["HOURS_PER_SECOND_EIDOLON"]
	98	[7410]	LE       	1 K13 R0 ; if 22.000000 <= R0 then PC := 102
	99	[7410]	JMP      	102 ; PC := 102
	100	[7410]	LT       	0 R0 K14 ; if R0 >= 6.000000 then PC := 114
	101	[7410]	JMP      	114 ; PC := 114
	102	[7411]	GETGLOBAL	R9 K3 ; R9 := TimeOfDayConstants
	103	[7411]	GETTABLE 	R2 R9 K23 ; R2 := R9["TIME_OF_DAY_LABEL_NIGHT"]
	104	[7412]	GETGLOBAL	R9 K3 ; R9 := TimeOfDayConstants
	105	[7412]	GETTABLE 	R3 R9 K24 ; R3 := R9["TIME_OF_DAY_LABEL_DAY"]
	106	[7413]	LE       	0 K13 R0 ; if 22.000000 > R0 then PC := 111
	107	[7413]	JMP      	111 ; PC := 111
	108	[7414]	SUB      	R9 K17 R0 ; R9 := 30.000000 - R0
	109	[7414]	DIV      	R4 R9 R8 ; R4 := R9 / R8
	110	[7414]	JMP      	120 ; PC := 120
	111	[7416]	SUB      	R9 K14 R0 ; R9 := 6.000000 - R0
	112	[7416]	DIV      	R4 R9 R8 ; R4 := R9 / R8
	113	[7417]	JMP      	120 ; PC := 120
	114	[7419]	GETGLOBAL	R9 K3 ; R9 := TimeOfDayConstants
	115	[7419]	GETTABLE 	R2 R9 K24 ; R2 := R9["TIME_OF_DAY_LABEL_DAY"]
	116	[7420]	GETGLOBAL	R9 K3 ; R9 := TimeOfDayConstants
	117	[7420]	GETTABLE 	R3 R9 K23 ; R3 := R9["TIME_OF_DAY_LABEL_NIGHT"]
	118	[7421]	SUB      	R9 K13 R0 ; R9 := 22.000000 - R0
	119	[7421]	DIV      	R4 R9 R8 ; R4 := R9 / R8
	120	[7425]	MOVE     	R9 R2 ; R9 := R2
	121	[7425]	MOVE     	R10 R3 ; R10 := R3
	122	[7425]	MOVE     	R11 R4 ; R11 := R4
	123	[7425]	RETURN   	R9 4 ; return R9, R10, R11 
	124	[7426]	RETURN   	R0 1 ; return 

function #360 <?:7428,7451> (53 instructions, 212 bytes at 00000160C6845EF0)
1 param, 7 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[7429]	LOADK    	R1 := 0.000000
	2	[7430]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	3	[7430]	GETGLOBAL	R3 K1 ; R3 := 0x25d99d89
	4	[7430]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[7430]	TEST     	R2 1 ; if R2 then PC := 12
	6	[7430]	JMP      	12 ; PC := 12
	7	[7430]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	8	[7430]	GETGLOBAL	R3 K2 ; R3 := 0xbe190284
	9	[7430]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[7430]	TEST     	R2 0 ; if not R2 then PC := 13
	11	[7430]	JMP      	13 ; PC := 13
	12	[7431]	RETURN   	R1 2 ; return R1 
	13	[7434]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	14	[7434]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x69727e0b]
	15	[7434]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[7435]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	17	[7435]	MOVE     	R4 R2 ; R4 := R2
	18	[7435]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[7435]	TEST     	R3 0 ; if not R3 then PC := 22
	20	[7435]	JMP      	22 ; PC := 22
	21	[7436]	RETURN   	R1 2 ; return R1 
	22	[7439]	GETGLOBAL	R3 K4 ; R3 := TimeOfDayConstants
	23	[7439]	GETTABLE 	R3 R3 K5 ; R3 := R3["HOURS_PER_SECOND_EIDOLON"]
	24	[7440]	GETGLOBAL	R4 K6 ; R4 := FORTUNA_NODE_TAG
	25	[7440]	EQ       	1 R0 R4 ; if R0 == R4 then PC := 30
	26	[7440]	JMP      	30 ; PC := 30
	27	[7440]	GETGLOBAL	R4 K7 ; R4 := ORB_VALLIS_NODE_TAG
	28	[7440]	EQ       	0 R0 R4 ; if R0 ~= R4 then PC := 33
	29	[7440]	JMP      	33 ; PC := 33
	30	[7441]	GETGLOBAL	R4 K4 ; R4 := TimeOfDayConstants
	31	[7441]	GETTABLE 	R3 R4 K8 ; R3 := R4["HOURS_PER_SECOND_VENUS"]
	32	[7441]	JMP      	47 ; PC := 47
	33	[7442]	GETGLOBAL	R4 K9 ; R4 := OROKIN_TOWER_NODE_TAG
	34	[7442]	EQ       	1 R0 R4 ; if R0 == R4 then PC := 39
	35	[7442]	JMP      	39 ; PC := 39
	36	[7442]	GETGLOBAL	R4 K10 ; R4 := ENTRATI_LANDSCAPE_NODE_TAG
	37	[7442]	EQ       	0 R0 R4 ; if R0 ~= R4 then PC := 42
	38	[7442]	JMP      	42 ; PC := 42
	39	[7443]	GETGLOBAL	R4 K4 ; R4 := TimeOfDayConstants
	40	[7443]	GETTABLE 	R3 R4 K11 ; R3 := R4["HOURS_PER_SECOND_ENTRATI"]
	41	[7443]	JMP      	47 ; PC := 47
	42	[7444]	GETGLOBAL	R4 K12 ; R4 := ZARIMAN_NODE_TAG
	43	[7444]	EQ       	0 R0 R4 ; if R0 ~= R4 then PC := 47
	44	[7444]	JMP      	47 ; PC := 47
	45	[7445]	GETGLOBAL	R4 K4 ; R4 := TimeOfDayConstants
	46	[7445]	GETTABLE 	R3 R4 K13 ; R3 := R4["HOURS_PER_SECOND_ZARIMAN"]
	47	[7448]	GETGLOBAL	R4 K2 ; R4 := 0xbe190284
	48	[7448]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0xb77ba3b0]
	49	[7448]	MOVE     	R6 R3 ; R6 := R3
	50	[7448]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	51	[7448]	MOVE     	R1 R4 ; R1 := R4
	52	[7450]	RETURN   	R1 2 ; return R1 
	53	[7451]	RETURN   	R0 1 ; return 

function #361 <?:7453,7466> (29 instructions, 116 bytes at 00000160C6846260)
1 param, 8 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[7454]	LT       	0 K0 R0 ; if 30.000000 >= R0 then PC := 25
	2	[7454]	JMP      	25 ; PC := 25
	3	[7455]	SUB      	R1 R0 K0 ; R1 := R0 - 30.000000
	4	[7456]	GETGLOBAL	R2 K1 ; R2 := 0x9ba7909f
	5	[7456]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xa1d3de97]
	6	[7456]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[7457]	LOADK    	R3 K3 ; R3 := "+"
	8	[7458]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	9	[7458]	MOVE     	R5 R2 ; R5 := R2
	10	[7458]	CALL     	R4 2 2 ; R4 := R4(R5)
	11	[7458]	TEST     	R4 1 ; if R4 then PC := 18
	12	[7458]	JMP      	18 ; PC := 18
	13	[7459]	SELF     	R4 R2 K5 ; R5 := R2; R4 := R2[0x42b04007]
	14	[7459]	LOADK    	R6 K6 ; R6 := "<LEGENDARY_RANK>"
	15	[7459]	OP_LOADBOOL	R7 1 0 ; R7 := true
	16	[7459]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	17	[7459]	MOVE     	R3 R4 ; R3 := R4
	18	[7462]	GETGLOBAL	R4 K7 ; R4 := 0x64fb1586
	19	[7462]	MOVE     	R5 R1 ; R5 := R1
	20	[7462]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[7462]	MOVE     	R5 R3 ; R5 := R3
	22	[7462]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	23	[7462]	RETURN   	R4 2 ; return R4 
	24	[7462]	JMP      	29 ; PC := 29
	25	[7464]	GETGLOBAL	R4 K7 ; R4 := 0x64fb1586
	26	[7464]	MOVE     	R5 R0 ; R5 := R0
	27	[7464]	TAILCALL 	R4 2 0 ; R4,... := R4(R5)
	28	[7464]	RETURN   	R4 0 ; return R4,... 
	29	[7466]	RETURN   	R0 1 ; return 

function #362 <?:7468,7470> (5 instructions, 20 bytes at 00000160C68464E0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7469]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7469]	MOVE     	R2 R0 ; R2 := R0
	3	[7469]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7469]	RETURN   	R1 2 ; return R1 
	5	[7470]	RETURN   	R0 1 ; return 

function #363 <?:7472,7601> (319 instructions, 1276 bytes at 00000160C68465D0)
3 params, 38 slots, 2 upvalues, 0 locals, 53 constants, 2 functions
	1	[7473]	NEWTABLE 	R3 0 5 ; R3 := {}
	2	[7473]	SETTABLE 	R3 K0 K1 ; R3["Name"] := nil
	3	[7473]	SETTABLE 	R3 K2 K1 ; R3["NameWithRank"] := nil
	4	[7473]	SETTABLE 	R3 K3 K1 ; R3["WeaponInfo"] := nil
	5	[7473]	SETTABLE 	R3 K4 K1 ; R3["CompanionInfo"] := nil
	6	[7473]	SETTABLE 	R3 K5 K1 ; R3["AuraInfo"] := nil
	7	[7474]	GETGLOBAL	R4 K6 ; R4 := 0x7b998233
	8	[7474]	MOVE     	R5 R1 ; R5 := R1
	9	[7474]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[7474]	TEST     	R4 1 ; if R4 then PC := 318
	11	[7474]	JMP      	318 ; PC := 318
	12	[7475]	GETTABLE 	R4 R1 K7 ; R4 := R1["name"]
	13	[7476]	GETGLOBAL	R5 K8 ; R5 := cjson
	14	[7476]	GETTABLE 	R5 R5 K9 ; R5 := R5[0x7ab914d8]
	15	[7476]	GETTABLE 	R6 R1 K10 ; R6 := R1["loadout"]
	16	[7476]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[7478]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	18	[7478]	MOVE     	R7 R4 ; R7 := R4
	19	[7478]	CALL     	R6 2 2 ; R6 := R6(R7)
	20	[7478]	TEST     	R6 1 ; if R6 then PC := 318
	21	[7478]	JMP      	318 ; PC := 318
	22	[7478]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	23	[7478]	MOVE     	R7 R5 ; R7 := R5
	24	[7478]	CALL     	R6 2 2 ; R6 := R6(R7)
	25	[7478]	TEST     	R6 1 ; if R6 then PC := 318
	26	[7478]	JMP      	318 ; PC := 318
	27	[7478]	EQ       	1 R4 K11 ; if R4 == "" then PC := 318
	28	[7478]	JMP      	318 ; PC := 318
	29	[7480]	LOADK    	R6 := 0.000000
	30	[7481]	GETGLOBAL	R7 K6 ; R7 := 0x7b998233
	31	[7481]	GETTABLE 	R8 R5 K12 ; R8 := R5["PlayerLevel"]
	32	[7481]	CALL     	R7 2 2 ; R7 := R7(R8)
	33	[7481]	TEST     	R7 1 ; if R7 then PC := 39
	34	[7481]	JMP      	39 ; PC := 39
	35	[7481]	GETTABLE 	R7 R5 K12 ; R7 := R5["PlayerLevel"]
	36	[7481]	EQ       	1 R7 K11 ; if R7 == "" then PC := 39
	37	[7481]	JMP      	39 ; PC := 39
	38	[7482]	GETTABLE 	R6 R5 K12 ; R6 := R5["PlayerLevel"]
	39	[7484]	MOVE     	R7 R4 ; R7 := R4
	40	[7485]	SELF     	R8 R0 K13 ; R9 := R0; R8 := R0[0x42b04007]
	41	[7485]	LOADK    	R10 K14 ; R10 := "<RANK_"
	42	[7485]	MOVE     	R11 R6 ; R11 := R6
	43	[7485]	LOADK    	R12 K15 ; R12 := ">"
	44	[7485]	CONCAT   	R10 R10 R12 ; R10 := R10 .. R11 .. R12
	45	[7485]	OP_LOADBOOL	R11 1 0 ; R11 := true
	46	[7485]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	47	[7485]	GETUPVAL 	R9 U0 ; R9 := U0
	48	[7485]	MOVE     	R10 R6 ; R10 := R6
	49	[7485]	CALL     	R9 2 2 ; R9 := R9(R10)
	50	[7485]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	51	[7486]	MOVE     	R9 R7 ; R9 := R7
	52	[7486]	LOADK    	R10 K16 ; R10 := " "
	53	[7486]	MOVE     	R11 R8 ; R11 := R8
	54	[7486]	CONCAT   	R7 R9 R11 ; R7 := R9 .. R10 .. R11
	55	[7488]	SETTABLE 	R3 K0 R4 ; R3["Name"] := R4
	56	[7489]	SETTABLE 	R3 K2 R7 ; R3["NameWithRank"] := R7
	57	[7492]	LOADNIL  	R9 R10 ; R9 := R10 := nil
	58	[7495]	GETUPVAL 	R11 U1 ; R11 := U1
	59	[7495]	GETTABLE 	R11 R11 K17 ; R11 := R11[0x06d055f9]
	60	[7495]	GETTABLE 	R12 R5 K18 ; R12 := R5["NORMAL_PVP"]
	61	[7495]	EQ       	0 R12 K1 ; if R12 ~= nil then PC := 64
	62	[7495]	JMP      	64 ; PC := 64
	63	[7495]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 64
	64	[7495]	OP_LOADBOOL	R12 1 0 ; R12 := true
	65	[7495]	GETTABLE 	R13 R5 K18 ; R13 := R5["NORMAL_PVP"]
	66	[7495]	GETTABLE 	R14 R5 K19 ; R14 := R5["NORMAL"]
	67	[7495]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	68	[7495]	MOVE     	R9 R11 ; R9 := R11
	69	[7496]	GETUPVAL 	R11 U1 ; R11 := U1
	70	[7496]	GETTABLE 	R11 R11 K17 ; R11 := R11[0x06d055f9]
	71	[7496]	GETTABLE 	R12 R5 K18 ; R12 := R5["NORMAL_PVP"]
	72	[7496]	EQ       	0 R12 K1 ; if R12 ~= nil then PC := 75
	73	[7496]	JMP      	75 ; PC := 75
	74	[7496]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 75
	75	[7496]	OP_LOADBOOL	R12 1 0 ; R12 := true
	76	[7496]	LOADK    	R13 := 3.000000
	77	[7496]	LOADK    	R14 := 0.000000
	78	[7496]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	79	[7496]	MOVE     	R10 R11 ; R10 := R11
	80	[7498]	NEWTABLE 	R11 5 0 ; R11 := {}
	81	[7499]	NEWTABLE 	R12 0 2 ; R12 := {}
	82	[7500]	GETTABLE 	R13 R9 K22 ; R13 := R9[1.000000]
	83	[7500]	SETTABLE 	R12 K21 R13 ; R12["Type"] := R13
	84	[7500]	SETTABLE 	R12 K23 K24 ; R12["isWeapon"] := true
	85	[7500]	NEWTABLE 	R13 0 1 ; R13 := {}
	86	[7501]	GETTABLE 	R14 R5 K25 ; R14 := R5["DragonKey"]
	87	[7501]	SETTABLE 	R13 K21 R14 ; R13["Type"] := R14
	88	[7501]	NEWTABLE 	R14 0 2 ; R14 := {}
	89	[7502]	GETTABLE 	R15 R9 K26 ; R15 := R9[3.000000]
	90	[7502]	SETTABLE 	R14 K21 R15 ; R14["Type"] := R15
	91	[7502]	SETTABLE 	R14 K23 K24 ; R14["isWeapon"] := true
	92	[7502]	NEWTABLE 	R15 0 2 ; R15 := {}
	93	[7503]	GETTABLE 	R16 R9 K27 ; R16 := R9[2.000000]
	94	[7503]	SETTABLE 	R15 K21 R16 ; R15["Type"] := R16
	95	[7503]	SETTABLE 	R15 K23 K24 ; R15["isWeapon"] := true
	96	[7503]	NEWTABLE 	R16 0 2 ; R16 := {}
	97	[7504]	GETTABLE 	R17 R9 K28 ; R17 := R9[4.000000]
	98	[7504]	SETTABLE 	R16 K21 R17 ; R16["Type"] := R17
	99	[7504]	SETTABLE 	R16 K23 K24 ; R16["isWeapon"] := true
	100	[7505]	SETLIST  	R11 5 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 5
	101	[7513]	CLOSURE  	R12 0 ; R12 := closure(Function #1)
	102	[7521]	CLOSURE  	R13 1 ; R13 := closure(Function #2)
	103	[7523]	MOVE     	R14 R13 ; R14 := R13
	104	[7523]	MOVE     	R15 R2 ; R15 := R2
	105	[7523]	CALL     	R14 2 2 ; R14 := R14(R15)
	106	[7523]	TEST     	R14 1 ; if R14 then PC := 113
	107	[7523]	JMP      	113 ; PC := 113
	108	[7523]	MOVE     	R14 R12 ; R14 := R12
	109	[7523]	MOVE     	R15 R2 ; R15 := R2
	110	[7523]	CALL     	R14 2 2 ; R14 := R14(R15)
	111	[7523]	TEST     	R14 0 ; if not R14 then PC := 135
	112	[7523]	JMP      	135 ; PC := 135
	113	[7523]	GETTABLE 	R14 R5 K29 ; R14 := R5["ARCHWING"]
	114	[7523]	TEST     	R14 0 ; if not R14 then PC := 135
	115	[7523]	JMP      	135 ; PC := 135
	116	[7523]	GETTABLE 	R14 R5 K30 ; R14 := R5["HasArchwing"]
	117	[7523]	TEST     	R14 0 ; if not R14 then PC := 135
	118	[7523]	JMP      	135 ; PC := 135
	119	[7524]	LOADK    	R14 := 1.000000
	120	[7524]	GETTABLE 	R15 R5 K29 ; R15 := R5["ARCHWING"]
	121	[7524]	LEN      	R15 R15 ; R15 := # R15
	122	[7524]	LOADK    	R16 := 1.000000
	123	[7524]	FORPREP  	R14 134 ; R14 -= R16; PC := 134
	124	[7525]	GETGLOBAL	R18 K31 ; R18 := 0x33bdd652
	125	[7525]	GETTABLE 	R18 R18 K32 ; R18 := R18[0x23d5322f]
	126	[7525]	MOVE     	R19 R11 ; R19 := R11
	127	[7525]	NEWTABLE 	R20 0 2 ; R20 := {}
	128	[7525]	GETTABLE 	R21 R5 K29 ; R21 := R5["ARCHWING"]
	129	[7525]	ADD      	R22 K33 R17 ; R22 := 0.000000 + R17
	130	[7525]	GETTABLE 	R21 R21 R22 ; R21 := R21[R22]
	131	[7525]	SETTABLE 	R20 K21 R21 ; R20["Type"] := R21
	132	[7525]	SETTABLE 	R20 K23 K24 ; R20["isWeapon"] := true
	133	[7525]	CALL     	R18 3 1 ; R18(R19,R20)
	134	[7524]	FORLOOP  	R14 124 ; R14 += R16; if R14 <= R15 then begin PC := 124; R17 := R14 end
	135	[7529]	GETGLOBAL	R18 K6 ; R18 := 0x7b998233
	136	[7529]	MOVE     	R19 R9 ; R19 := R9
	137	[7529]	CALL     	R18 2 2 ; R18 := R18(R19)
	138	[7529]	TEST     	R18 1 ; if R18 then PC := 239
	139	[7529]	JMP      	239 ; PC := 239
	140	[7529]	GETGLOBAL	R18 K6 ; R18 := 0x7b998233
	141	[7529]	MOVE     	R19 R11 ; R19 := R11
	142	[7529]	CALL     	R18 2 2 ; R18 := R18(R19)
	143	[7529]	TEST     	R18 1 ; if R18 then PC := 239
	144	[7529]	JMP      	239 ; PC := 239
	145	[7530]	LOADK    	R18 K11 ; R18 := ""
	146	[7531]	LOADK    	R19 := 1.000000
	147	[7531]	LEN      	R20 R11 ; R20 := # R11
	148	[7531]	LOADK    	R21 := 1.000000
	149	[7531]	FORPREP  	R19 237 ; R19 -= R21; PC := 237
	150	[7532]	GETTABLE 	R23 R11 R22 ; R23 := R11[R22]
	151	[7533]	GETGLOBAL	R24 K6 ; R24 := 0x7b998233
	152	[7533]	MOVE     	R25 R23 ; R25 := R23
	153	[7533]	CALL     	R24 2 2 ; R24 := R24(R25)
	154	[7533]	TEST     	R24 1 ; if R24 then PC := 237
	155	[7533]	JMP      	237 ; PC := 237
	156	[7533]	GETTABLE 	R24 R23 K21 ; R24 := R23["Type"]
	157	[7533]	TEST     	R24 0 ; if not R24 then PC := 237
	158	[7533]	JMP      	237 ; PC := 237
	159	[7533]	GETTABLE 	R24 R23 K21 ; R24 := R23["Type"]
	160	[7533]	GETTABLE 	R24 R24 K34 ; R24 := R24["LocTag"]
	161	[7533]	TEST     	R24 0 ; if not R24 then PC := 237
	162	[7533]	JMP      	237 ; PC := 237
	163	[7534]	GETTABLE 	R24 R23 K23 ; R24 := R23["isWeapon"]
	164	[7534]	TEST     	R24 0 ; if not R24 then PC := 199
	165	[7534]	JMP      	199 ; PC := 199
	166	[7535]	GETGLOBAL	R24 K35 ; R24 := 0x64fb1586
	167	[7535]	GETTABLE 	R25 R23 K21 ; R25 := R23["Type"]
	168	[7535]	GETTABLE 	R25 R25 K34 ; R25 := R25["LocTag"]
	169	[7535]	CALL     	R24 2 2 ; R24 := R24(R25)
	170	[7536]	GETGLOBAL	R25 K20 ; R25 := 0x6c97a788
	171	[7536]	GETTABLE 	R25 R25 K36 ; R25 := R25[0x834628e8]
	172	[7536]	MOVE     	R26 R24 ; R26 := R24
	173	[7536]	CALL     	R25 2 2 ; R25 := R25(R26)
	174	[7537]	EQ       	1 R25 K11 ; if R25 == "" then PC := 177
	175	[7537]	JMP      	177 ; PC := 177
	176	[7538]	MOVE     	R24 R25 ; R24 := R25
	177	[7541]	EQ       	1 R24 K11 ; if R24 == "" then PC := 237
	178	[7541]	JMP      	237 ; PC := 237
	179	[7542]	LT       	0 K22 R22 ; if 1.000000 >= R22 then PC := 184
	180	[7542]	JMP      	184 ; PC := 184
	181	[7543]	MOVE     	R26 R18 ; R26 := R18
	182	[7543]	LOADK    	R27 K37 ; R27 := "\n\r"
	183	[7543]	CONCAT   	R18 R26 R27 ; R18 := R26 .. R27
	184	[7545]	GETTABLE 	R26 R23 K21 ; R26 := R23["Type"]
	185	[7545]	GETTABLE 	R26 R26 K38 ; R26 := R26["Level"]
	186	[7546]	MOVE     	R27 R18 ; R27 := R18
	187	[7546]	GETGLOBAL	R28 K39 ; R28 := 0x7f5022cf
	188	[7546]	GETTABLE 	R28 R28 K40 ; R28 := R28[0x3f3e4d12]
	189	[7546]	SELF     	R29 R0 K13 ; R30 := R0; R29 := R0[0x42b04007]
	190	[7546]	MOVE     	R31 R24 ; R31 := R24
	191	[7546]	OP_LOADBOOL	R32 1 0 ; R32 := true
	192	[7546]	CALL     	R29 4 0 ; R29,... := R29(R30,R31,R32)
	193	[7546]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	194	[7546]	LOADK    	R29 K41 ; R29 := " ["
	195	[7546]	MOVE     	R30 R26 ; R30 := R26
	196	[7546]	LOADK    	R31 K42 ; R31 := "]"
	197	[7546]	CONCAT   	R18 R27 R31 ; R18 := R27 .. R28 .. R29 .. R30 .. R31
	198	[7547]	JMP      	237 ; PC := 237
	199	[7549]	GETGLOBAL	R27 K6 ; R27 := 0x7b998233
	200	[7549]	GETTABLE 	R28 R23 K21 ; R28 := R23["Type"]
	201	[7549]	CALL     	R27 2 2 ; R27 := R27(R28)
	202	[7549]	TEST     	R27 1 ; if R27 then PC := 237
	203	[7549]	JMP      	237 ; PC := 237
	204	[7549]	GETGLOBAL	R27 K43 ; R27 := 0x7ed0a956
	205	[7549]	GETTABLE 	R28 R23 K21 ; R28 := R23["Type"]
	206	[7549]	CALL     	R27 2 2 ; R27 := R27(R28)
	207	[7549]	SELF     	R27 R27 K44 ; R28 := R27; R27 := R27[0xf2deaf69]
	208	[7549]	GETGLOBAL	R29 K43 ; R29 := 0x7ed0a956
	209	[7549]	LOADK    	R30 K45 ; R30 := "/Lotus/Types/Restoratives/Upgraded/CorruptedKey"
	210	[7549]	CALL     	R29 2 0 ; R29,... := R29(R30)
	211	[7549]	CALL     	R27 0 2 ; R27 := R27(R28,...)
	212	[7549]	TEST     	R27 0 ; if not R27 then PC := 237
	213	[7549]	JMP      	237 ; PC := 237
	214	[7550]	GETGLOBAL	R27 K46 ; R27 := 0xb009bbc6
	215	[7550]	GETTABLE 	R28 R23 K21 ; R28 := R23["Type"]
	216	[7550]	CALL     	R27 2 2 ; R27 := R27(R28)
	217	[7551]	GETGLOBAL	R28 K6 ; R28 := 0x7b998233
	218	[7551]	MOVE     	R29 R27 ; R29 := R27
	219	[7551]	CALL     	R28 2 2 ; R28 := R28(R29)
	220	[7551]	TEST     	R28 1 ; if R28 then PC := 237
	221	[7551]	JMP      	237 ; PC := 237
	222	[7552]	LT       	0 K22 R22 ; if 1.000000 >= R22 then PC := 227
	223	[7552]	JMP      	227 ; PC := 227
	224	[7553]	MOVE     	R28 R18 ; R28 := R18
	225	[7553]	LOADK    	R29 K37 ; R29 := "\n\r"
	226	[7553]	CONCAT   	R18 R28 R29 ; R18 := R28 .. R29
	227	[7555]	SELF     	R28 R27 K47 ; R29 := R27; R28 := R27[0xd3a9d01f]
	228	[7555]	CALL     	R28 2 2 ; R28 := R28(R29)
	229	[7556]	MOVE     	R29 R18 ; R29 := R18
	230	[7556]	SELF     	R30 R0 K13 ; R31 := R0; R30 := R0[0x42b04007]
	231	[7556]	GETGLOBAL	R32 K35 ; R32 := 0x64fb1586
	232	[7556]	MOVE     	R33 R28 ; R33 := R28
	233	[7556]	CALL     	R32 2 2 ; R32 := R32(R33)
	234	[7556]	OP_LOADBOOL	R33 0 0 ; R33 := false
	235	[7556]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	236	[7556]	CONCAT   	R18 R29 R30 ; R18 := R29 .. R30
	237	[7531]	FORLOOP  	R19 150 ; R19 += R21; if R19 <= R20 then begin PC := 150; R22 := R19 end
	238	[7562]	SETTABLE 	R3 K3 R18 ; R3["WeaponInfo"] := R18
	239	[7566]	LOADK    	R29 K11 ; R29 := ""
	240	[7567]	GETTABLE 	R30 R5 K48 ; R30 := R5["KubrowName"]
	241	[7567]	EQ       	1 R30 K11 ; if R30 == "" then PC := 256
	242	[7567]	JMP      	256 ; PC := 256
	243	[7568]	GETUPVAL 	R30 U1 ; R30 := U1
	244	[7568]	GETTABLE 	R30 R30 K49 ; R30 := R30[0x23a862e6]
	245	[7568]	CALL     	R30 1 2 ; R30 := R30()
	246	[7568]	TEST     	R30 0 ; if not R30 then PC := 254
	247	[7568]	JMP      	254 ; PC := 254
	248	[7569]	SELF     	R30 R0 K13 ; R31 := R0; R30 := R0[0x42b04007]
	249	[7569]	LOADK    	R32 K50 ; R32 := "/Lotus/Language/Menu/CategoryKubrow"
	250	[7569]	OP_LOADBOOL	R33 0 0 ; R33 := false
	251	[7569]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	252	[7569]	MOVE     	R29 R30 ; R29 := R30
	253	[7569]	JMP      	286 ; PC := 286
	254	[7571]	GETTABLE 	R29 R5 K48 ; R29 := R5["KubrowName"]
	255	[7572]	JMP      	286 ; PC := 286
	256	[7573]	GETGLOBAL	R30 K6 ; R30 := 0x7b998233
	257	[7573]	GETTABLE 	R31 R5 K51 ; R31 := R5["SENTINEL"]
	258	[7573]	CALL     	R30 2 2 ; R30 := R30(R31)
	259	[7573]	TEST     	R30 1 ; if R30 then PC := 286
	260	[7573]	JMP      	286 ; PC := 286
	261	[7574]	GETGLOBAL	R30 K35 ; R30 := 0x64fb1586
	262	[7574]	GETTABLE 	R31 R5 K51 ; R31 := R5["SENTINEL"]
	263	[7574]	GETTABLE 	R31 R31 K22 ; R31 := R31[1.000000]
	264	[7574]	GETTABLE 	R31 R31 K34 ; R31 := R31["LocTag"]
	265	[7574]	CALL     	R30 2 2 ; R30 := R30(R31)
	266	[7575]	GETGLOBAL	R31 K6 ; R31 := 0x7b998233
	267	[7575]	MOVE     	R32 R30 ; R32 := R30
	268	[7575]	CALL     	R31 2 2 ; R31 := R31(R32)
	269	[7575]	TEST     	R31 1 ; if R31 then PC := 286
	270	[7575]	JMP      	286 ; PC := 286
	271	[7576]	GETGLOBAL	R31 K20 ; R31 := 0x6c97a788
	272	[7576]	GETTABLE 	R31 R31 K36 ; R31 := R31[0x834628e8]
	273	[7576]	MOVE     	R32 R30 ; R32 := R30
	274	[7576]	CALL     	R31 2 2 ; R31 := R31(R32)
	275	[7577]	EQ       	1 R31 K11 ; if R31 == "" then PC := 279
	276	[7577]	JMP      	279 ; PC := 279
	277	[7578]	MOVE     	R29 R31 ; R29 := R31
	278	[7578]	JMP      	286 ; PC := 286
	279	[7580]	SELF     	R32 R0 K13 ; R33 := R0; R32 := R0[0x42b04007]
	280	[7580]	GETGLOBAL	R34 K35 ; R34 := 0x64fb1586
	281	[7580]	MOVE     	R35 R30 ; R35 := R30
	282	[7580]	CALL     	R34 2 2 ; R34 := R34(R35)
	283	[7580]	OP_LOADBOOL	R35 0 0 ; R35 := false
	284	[7580]	CALL     	R32 4 2 ; R32 := R32(R33,R34,R35)
	285	[7580]	MOVE     	R29 R32 ; R29 := R32
	286	[7584]	EQ       	1 R29 K11 ; if R29 == "" then PC := 302
	287	[7584]	JMP      	302 ; PC := 302
	288	[7584]	GETGLOBAL	R32 K6 ; R32 := 0x7b998233
	289	[7584]	GETTABLE 	R33 R5 K51 ; R33 := R5["SENTINEL"]
	290	[7584]	CALL     	R32 2 2 ; R32 := R32(R33)
	291	[7584]	TEST     	R32 1 ; if R32 then PC := 302
	292	[7584]	JMP      	302 ; PC := 302
	293	[7585]	GETTABLE 	R32 R5 K51 ; R32 := R5["SENTINEL"]
	294	[7585]	GETTABLE 	R32 R32 K22 ; R32 := R32[1.000000]
	295	[7585]	GETTABLE 	R32 R32 K38 ; R32 := R32["Level"]
	296	[7586]	LOADK    	R33 K37 ; R33 := "\n\r"
	297	[7586]	MOVE     	R34 R29 ; R34 := R29
	298	[7586]	LOADK    	R35 K41 ; R35 := " ["
	299	[7586]	MOVE     	R36 R32 ; R36 := R32
	300	[7586]	LOADK    	R37 K42 ; R37 := "]"
	301	[7586]	CONCAT   	R29 R33 R37 ; R29 := R33 .. R34 .. R35 .. R36 .. R37
	302	[7589]	SETTABLE 	R3 K4 R29 ; R3["CompanionInfo"] := R29
	303	[7592]	SELF     	R33 R0 K13 ; R34 := R0; R33 := R0[0x42b04007]
	304	[7592]	GETGLOBAL	R35 K35 ; R35 := 0x64fb1586
	305	[7592]	GETTABLE 	R36 R5 K52 ; R36 := R5["AuraName"]
	306	[7592]	CALL     	R35 2 2 ; R35 := R35(R36)
	307	[7592]	OP_LOADBOOL	R36 0 0 ; R36 := false
	308	[7592]	CALL     	R33 4 2 ; R33 := R33(R34,R35,R36)
	309	[7593]	EQ       	1 R33 K11 ; if R33 == "" then PC := 317
	310	[7593]	JMP      	317 ; PC := 317
	311	[7594]	LOADK    	R34 K37 ; R34 := "\n\r"
	312	[7594]	GETGLOBAL	R35 K39 ; R35 := 0x7f5022cf
	313	[7594]	GETTABLE 	R35 R35 K40 ; R35 := R35[0x3f3e4d12]
	314	[7594]	MOVE     	R36 R33 ; R36 := R33
	315	[7594]	CALL     	R35 2 2 ; R35 := R35(R36)
	316	[7594]	CONCAT   	R33 R34 R35 ; R33 := R34 .. R35
	317	[7597]	SETTABLE 	R3 K5 R33 ; R3["AuraInfo"] := R33
	318	[7600]	RETURN   	R3 2 ; return R3 
	319	[7601]	RETURN   	R0 1 ; return 

function #364 <?:7603,7720> (10 instructions, 40 bytes at 00000160C6847B90)
0 params, 2 slots, 2 upvalues, 0 locals, 3 constants, 2 functions
	1	[7604]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[7693]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	3	[7693]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[7693]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[7693]	SETTABLE 	R0 K1 R1 ; R0["OnVendorConversationStarted"] := R1
	6	[7695]	GETGLOBAL	R0 K0 ; R0 := _T
	7	[7719]	CLOSURE  	R1 1 ; R1 := closure(Function #2)
	8	[7719]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[7719]	SETTABLE 	R0 K2 R1 ; R0["OnVendorConversationEnded"] := R1
	10	[7720]	RETURN   	R0 1 ; return 

function #365 <?:7722,7728> (24 instructions, 96 bytes at 00000160C6849200)
1 param, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7723]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7723]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7723]	GETTABLE 	R2 R2 K2 ; R2 := R2["HideHud"]
	4	[7723]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7723]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7723]	JMP      	9 ; PC := 9
	7	[7724]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[7724]	SETTABLE 	R1 K2 K3 ; R1["HideHud"] := 0.000000
	9	[7727]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7727]	GETGLOBAL	R2 K4 ; R2 := 0x5bced4c4
	11	[7727]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb62ecfe0]
	12	[7727]	LOADK    	R3 := 0.000000
	13	[7727]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7727]	GETTABLE 	R4 R4 K2 ; R4 := R4["HideHud"]
	15	[7727]	GETUPVAL 	R5 U0 ; R5 := U0
	16	[7727]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x06d055f9]
	17	[7727]	MOVE     	R6 R0 ; R6 := R0
	18	[7727]	LOADK    	R7 := 1.000000
	19	[7727]	LOADK    	R8 := -1.000000
	20	[7727]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[7727]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	22	[7727]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[7727]	SETTABLE 	R1 K2 R2 ; R1["HideHud"] := R2
	24	[7728]	RETURN   	R0 1 ; return 

function #366 <?:7730,7736> (24 instructions, 96 bytes at 00000160C6849420)
1 param, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7731]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7731]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7731]	GETTABLE 	R2 R2 K2 ; R2 := R2["HideNotifications"]
	4	[7731]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7731]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7731]	JMP      	9 ; PC := 9
	7	[7732]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[7732]	SETTABLE 	R1 K2 K3 ; R1["HideNotifications"] := 0.000000
	9	[7735]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7735]	GETGLOBAL	R2 K4 ; R2 := 0x5bced4c4
	11	[7735]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb62ecfe0]
	12	[7735]	LOADK    	R3 := 0.000000
	13	[7735]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7735]	GETTABLE 	R4 R4 K2 ; R4 := R4["HideNotifications"]
	15	[7735]	GETUPVAL 	R5 U0 ; R5 := U0
	16	[7735]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x06d055f9]
	17	[7735]	MOVE     	R6 R0 ; R6 := R0
	18	[7735]	LOADK    	R7 := 1.000000
	19	[7735]	LOADK    	R8 := -1.000000
	20	[7735]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[7735]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	22	[7735]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[7735]	SETTABLE 	R1 K2 R2 ; R1["HideNotifications"] := R2
	24	[7736]	RETURN   	R0 1 ; return 

function #367 <?:7738,7744> (24 instructions, 96 bytes at 00000160C6849650)
1 param, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7739]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7739]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7739]	GETTABLE 	R2 R2 K2 ; R2 := R2["HideMapRedux"]
	4	[7739]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7739]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7739]	JMP      	9 ; PC := 9
	7	[7740]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[7740]	SETTABLE 	R1 K2 K3 ; R1["HideMapRedux"] := 0.000000
	9	[7743]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7743]	GETGLOBAL	R2 K4 ; R2 := 0x5bced4c4
	11	[7743]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb62ecfe0]
	12	[7743]	LOADK    	R3 := 0.000000
	13	[7743]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7743]	GETTABLE 	R4 R4 K2 ; R4 := R4["HideMapRedux"]
	15	[7743]	GETUPVAL 	R5 U0 ; R5 := U0
	16	[7743]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x06d055f9]
	17	[7743]	MOVE     	R6 R0 ; R6 := R0
	18	[7743]	LOADK    	R7 := 1.000000
	19	[7743]	LOADK    	R8 := -1.000000
	20	[7743]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[7743]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	22	[7743]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[7743]	SETTABLE 	R1 K2 R2 ; R1["HideMapRedux"] := R2
	24	[7744]	RETURN   	R0 1 ; return 

function #368 <?:7746,7752> (24 instructions, 96 bytes at 00000160C6849880)
1 param, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7747]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7747]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7747]	GETTABLE 	R2 R2 K2 ; R2 := R2["HideSquadOverlay"]
	4	[7747]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7747]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7747]	JMP      	9 ; PC := 9
	7	[7748]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[7748]	SETTABLE 	R1 K2 K3 ; R1["HideSquadOverlay"] := 0.000000
	9	[7751]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7751]	GETGLOBAL	R2 K4 ; R2 := 0x5bced4c4
	11	[7751]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb62ecfe0]
	12	[7751]	LOADK    	R3 := 0.000000
	13	[7751]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7751]	GETTABLE 	R4 R4 K2 ; R4 := R4["HideSquadOverlay"]
	15	[7751]	GETUPVAL 	R5 U0 ; R5 := U0
	16	[7751]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x06d055f9]
	17	[7751]	MOVE     	R6 R0 ; R6 := R0
	18	[7751]	LOADK    	R7 := 1.000000
	19	[7751]	LOADK    	R8 := -1.000000
	20	[7751]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[7751]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	22	[7751]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[7751]	SETTABLE 	R1 K2 R2 ; R1["HideSquadOverlay"] := R2
	24	[7752]	RETURN   	R0 1 ; return 

function #369 <?:7754,7760> (24 instructions, 96 bytes at 00000160C6849AB0)
1 param, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7755]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7755]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[7755]	GETTABLE 	R2 R2 K2 ; R2 := R2["HideEOM"]
	4	[7755]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[7755]	TEST     	R1 0 ; if not R1 then PC := 9
	6	[7755]	JMP      	9 ; PC := 9
	7	[7756]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[7756]	SETTABLE 	R1 K2 K3 ; R1["HideEOM"] := 0.000000
	9	[7759]	GETGLOBAL	R1 K1 ; R1 := _T
	10	[7759]	GETGLOBAL	R2 K4 ; R2 := 0x5bced4c4
	11	[7759]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb62ecfe0]
	12	[7759]	LOADK    	R3 := 0.000000
	13	[7759]	GETGLOBAL	R4 K1 ; R4 := _T
	14	[7759]	GETTABLE 	R4 R4 K2 ; R4 := R4["HideEOM"]
	15	[7759]	GETUPVAL 	R5 U0 ; R5 := U0
	16	[7759]	GETTABLE 	R5 R5 K6 ; R5 := R5[0x06d055f9]
	17	[7759]	MOVE     	R6 R0 ; R6 := R0
	18	[7759]	LOADK    	R7 := 1.000000
	19	[7759]	LOADK    	R8 := -1.000000
	20	[7759]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	21	[7759]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	22	[7759]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	23	[7759]	SETTABLE 	R1 K2 R2 ; R1["HideEOM"] := R2
	24	[7760]	RETURN   	R0 1 ; return 

function #370 <?:7762,7773> (42 instructions, 168 bytes at 00000160C6849CD0)
3 params, 10 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[7763]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[7763]	SELF     	R4 R1 K1 ; R5 := R1; R4 := R1[0x78298275]
	3	[7763]	CALL     	R4 2 0 ; R4,... := R4(R5)
	4	[7763]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	5	[7763]	TEST     	R3 1 ; if R3 then PC := 40
	6	[7763]	JMP      	40 ; PC := 40
	7	[7764]	SELF     	R3 R1 K1 ; R4 := R1; R3 := R1[0x78298275]
	8	[7764]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[7764]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x0b4bcfb6]
	10	[7764]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[7764]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x02bb4ff1]
	12	[7764]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[7765]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	14	[7765]	MOVE     	R5 R3 ; R5 := R3
	15	[7765]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[7765]	TEST     	R4 1 ; if R4 then PC := 40
	17	[7765]	JMP      	40 ; PC := 40
	18	[7766]	SELF     	R4 R1 K4 ; R5 := R1; R4 := R1[0xa3f8dbe6]
	19	[7766]	SELF     	R6 R3 K5 ; R7 := R3; R6 := R3[0xd1586535]
	20	[7766]	CALL     	R6 2 2 ; R6 := R6(R7)
	21	[7766]	SELF     	R7 R3 K5 ; R8 := R3; R7 := R3[0xd1586535]
	22	[7766]	CALL     	R7 2 2 ; R7 := R7(R8)
	23	[7766]	SELF     	R8 R0 K6 ; R9 := R0; R8 := R0[0x548b03be]
	24	[7766]	CALL     	R8 2 2 ; R8 := R8(R9)
	25	[7766]	MUL      	R8 R8 K7 ; R8 := R8 * 200.000000
	26	[7766]	ADD      	R7 R7 R8 ; R7 := R7 + R8
	27	[7766]	LOADNIL  	R8 R8 ; R8 := nil
	28	[7766]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	29	[7767]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	30	[7767]	MOVE     	R6 R4 ; R6 := R4
	31	[7767]	CALL     	R5 2 2 ; R5 := R5(R6)
	32	[7767]	TEST     	R5 1 ; if R5 then PC := 40
	33	[7767]	JMP      	40 ; PC := 40
	34	[7767]	SELF     	R5 R4 K8 ; R6 := R4; R5 := R4[0xf2deaf69]
	35	[7767]	MOVE     	R7 R2 ; R7 := R2
	36	[7767]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	37	[7767]	TEST     	R5 0 ; if not R5 then PC := 40
	38	[7767]	JMP      	40 ; PC := 40
	39	[7768]	RETURN   	R4 2 ; return R4 
	40	[7772]	LOADNIL  	R5 R5 ; R5 := nil
	41	[7772]	RETURN   	R5 2 ; return R5 
	42	[7773]	RETURN   	R0 1 ; return 

function #371 <?:7775,7791> (29 instructions, 116 bytes at 00000160C6849F80)
1 param, 9 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[7776]	NEWTABLE 	R1 0 0 ; R1 := {}
	2	[7778]	GETGLOBAL	R2 K0 ; R2 := 0x33bdd652
	3	[7778]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x23d5322f]
	4	[7778]	MOVE     	R3 R1 ; R3 := R1
	5	[7778]	LOADK    	R4 := 16.000000
	6	[7778]	CALL     	R2 3 1 ; R2(R3,R4)
	7	[7780]	TEST     	R0 0 ; if not R0 then PC := 14
	8	[7780]	JMP      	14 ; PC := 14
	9	[7781]	GETGLOBAL	R2 K0 ; R2 := 0x33bdd652
	10	[7781]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x23d5322f]
	11	[7781]	MOVE     	R3 R1 ; R3 := R1
	12	[7781]	LOADK    	R4 := 1024.000000
	13	[7781]	CALL     	R2 3 1 ; R2(R3,R4)
	14	[7784]	LOADK    	R2 := 1.000000
	15	[7784]	LEN      	R3 R1 ; R3 := # R1
	16	[7784]	LOADK    	R4 := 1.000000
	17	[7784]	FORPREP  	R2 26 ; R2 -= R4; PC := 26
	18	[7785]	GETGLOBAL	R6 K3 ; R6 := 0x25d99d89
	19	[7785]	SELF     	R6 R6 K4 ; R7 := R6; R6 := R6[0x3a57bc9f]
	20	[7785]	GETTABLE 	R8 R1 R5 ; R8 := R1[R5]
	21	[7785]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	22	[7785]	TEST     	R6 0 ; if not R6 then PC := 26
	23	[7785]	JMP      	26 ; PC := 26
	24	[7786]	OP_LOADBOOL	R6 1 0 ; R6 := true
	25	[7786]	RETURN   	R6 2 ; return R6 
	26	[7784]	FORLOOP  	R2 18 ; R2 += R4; if R2 <= R3 then begin PC := 18; R5 := R2 end
	27	[7790]	OP_LOADBOOL	R6 0 0 ; R6 := false
	28	[7790]	RETURN   	R6 2 ; return R6 
	29	[7791]	RETURN   	R0 1 ; return 

function #372 <?:7793,7834> (63 instructions, 252 bytes at 00000160C684A190)
3 params, 18 slots, 0 upvalues, 0 locals, 16 constants, 0 functions
	1	[7794]	GETGLOBAL	R3 K0 ; R3 := _T
	2	[7794]	GETTABLE 	R3 R3 K1 ; R3 := R3["DojoMgr"]
	3	[7795]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	4	[7795]	MOVE     	R5 R3 ; R5 := R3
	5	[7795]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[7795]	TEST     	R4 0 ; if not R4 then PC := 9
	7	[7795]	JMP      	9 ; PC := 9
	8	[7796]	RETURN   	R0 1 ; return 
	9	[7799]	LOADNIL  	R4 R4 ; R4 := nil
	10	[7800]	LOADK    	R5 K3 ; R5 := 1000000.000000
	11	[7802]	GETGLOBAL	R6 K4 ; R6 := 0x89326c93
	12	[7802]	SELF     	R6 R6 K5 ; R7 := R6; R6 := R6[0xc7fcada9]
	13	[7802]	GETGLOBAL	R8 K6 ; R8 := 0x0469f296
	14	[7802]	MOVE     	R9 R0 ; R9 := R0
	15	[7802]	CALL     	R8 2 0 ; R8,... := R8(R9)
	16	[7802]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	17	[7803]	LOADK    	R7 := 1.000000
	18	[7803]	LEN      	R8 R6 ; R8 := # R6
	19	[7803]	LOADK    	R9 := 1.000000
	20	[7803]	FORPREP  	R7 61 ; R7 -= R9; PC := 61
	21	[7804]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	22	[7805]	SELF     	R12 R3 K7 ; R13 := R3; R12 := R3[0xd1964243]
	23	[7805]	MOVE     	R14 R11 ; R14 := R11
	24	[7805]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	25	[7806]	LOADNIL  	R13 R13 ; R13 := nil
	26	[7808]	GETTABLE 	R14 R12 K8 ; R14 := R12["id"]
	27	[7808]	EQ       	1 R14 K9 ; if R14 == "" then PC := 34
	28	[7808]	JMP      	34 ; PC := 34
	29	[7809]	GETTABLE 	R14 R3 K10 ; R14 := R3["mDojo"]
	30	[7809]	SELF     	R14 R14 K11 ; R15 := R14; R14 := R14[0x5c69b193]
	31	[7809]	MOVE     	R16 R12 ; R16 := R12
	32	[7809]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	33	[7809]	MOVE     	R13 R14 ; R13 := R14
	34	[7812]	EQ       	1 R13 K12 ; if R13 == nil then PC := 40
	35	[7812]	JMP      	40 ; PC := 40
	36	[7812]	SELF     	R14 R13 K13 ; R15 := R13; R14 := R13[0x56c01834]
	37	[7812]	CALL     	R14 2 2 ; R14 := R14(R15)
	38	[7812]	TEST     	R14 1 ; if R14 then PC := 50
	39	[7812]	JMP      	50 ; PC := 50
	40	[7815]	TEST     	R2 1 ; if R2 then PC := 61
	41	[7815]	JMP      	61 ; PC := 61
	42	[7816]	SELF     	R14 R11 K14 ; R15 := R11; R14 := R11[0x1f420a3a]
	43	[7816]	MOVE     	R16 R1 ; R16 := R1
	44	[7816]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	45	[7817]	LT       	0 R14 R5 ; if R14 >= R5 then PC := 61
	46	[7817]	JMP      	61 ; PC := 61
	47	[7818]	MOVE     	R4 R11 ; R4 := R11
	48	[7819]	MOVE     	R5 R14 ; R5 := R14
	49	[7821]	JMP      	61 ; PC := 61
	50	[7823]	SELF     	R15 R13 K15 ; R16 := R13; R15 := R13[0x3f724bc7]
	51	[7823]	CALL     	R15 2 2 ; R15 := R15(R16)
	52	[7823]	TEST     	R15 0 ; if not R15 then PC := 61
	53	[7823]	JMP      	61 ; PC := 61
	54	[7824]	SELF     	R15 R11 K14 ; R16 := R11; R15 := R11[0x1f420a3a]
	55	[7824]	MOVE     	R17 R1 ; R17 := R1
	56	[7824]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	57	[7825]	LT       	0 R15 R5 ; if R15 >= R5 then PC := 61
	58	[7825]	JMP      	61 ; PC := 61
	59	[7826]	MOVE     	R4 R11 ; R4 := R11
	60	[7827]	MOVE     	R5 R15 ; R5 := R15
	61	[7803]	FORLOOP  	R7 21 ; R7 += R9; if R7 <= R8 then begin PC := 21; R10 := R7 end
	62	[7833]	RETURN   	R4 2 ; return R4 
	63	[7834]	RETURN   	R0 1 ; return 

function #373 <?:7836,7838> (8 instructions, 32 bytes at 00000160C684A5B0)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[7837]	EQ       	1 R0 K0 ; if R0 == 0.000000 then PC := 6
	2	[7837]	JMP      	6 ; PC := 6
	3	[7837]	EQ       	1 R0 K1 ; if R0 == 1.000000 then PC := 6
	4	[7837]	JMP      	6 ; PC := 6
	5	[7837]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 6
	6	[7837]	OP_LOADBOOL	R1 1 0 ; R1 := true
	7	[7837]	RETURN   	R1 2 ; return R1 
	8	[7838]	RETURN   	R0 1 ; return 

function #374 <?:7840,7878> (46 instructions, 184 bytes at 00000160C684A6D0)
9 params, 15 slots, 3 upvalues, 0 locals, 7 constants, 4 functions
	1	[7848]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	2	[7848]	GETUPVAL 	R0 U0 ; R0 := U0
	3	[7848]	MOVE     	R0 R0 ; R0 := R0
	4	[7848]	MOVE     	R0 R1 ; R0 := R1
	5	[7848]	MOVE     	R0 R8 ; R0 := R8
	6	[7850]	GETUPVAL 	R10 U1 ; R10 := U1
	7	[7850]	CALL     	R10 1 2 ; R10 := R10()
	8	[7856]	CLOSURE  	R11 1 ; R11 := closure(Function #2)
	9	[7856]	MOVE     	R0 R7 ; R0 := R7
	10	[7856]	MOVE     	R0 R0 ; R0 := R0
	11	[7856]	MOVE     	R0 R5 ; R0 := R5
	12	[7856]	SETTABLE 	R10 K0 R11 ; R10["ConfirmConditionalWord"] := R11
	13	[7862]	CLOSURE  	R11 2 ; R11 := closure(Function #3)
	14	[7862]	MOVE     	R0 R7 ; R0 := R7
	15	[7862]	MOVE     	R0 R0 ; R0 := R0
	16	[7862]	MOVE     	R0 R5 ; R0 := R5
	17	[7862]	SETTABLE 	R10 K1 R11 ; R10["OSKConfirmConditionalWord"] := R11
	18	[7870]	CLOSURE  	R11 3 ; R11 := closure(Function #4)
	19	[7870]	MOVE     	R0 R9 ; R0 := R9
	20	[7870]	MOVE     	R0 R4 ; R0 := R4
	21	[7870]	MOVE     	R0 R7 ; R0 := R7
	22	[7870]	MOVE     	R0 R0 ; R0 := R0
	23	[7870]	MOVE     	R0 R5 ; R0 := R5
	24	[7870]	SETTABLE 	R10 K2 R11 ; R10["ConditionalFirstConfirm"] := R11
	25	[7873]	GETGLOBAL	R11 K3 ; R11 := 0x34291f5c
	26	[7873]	GETTABLE 	R11 R11 K4 ; R11 := R11[0x056bfe8b]
	27	[7873]	CALL     	R11 1 2 ; R11 := R11()
	28	[7873]	TEST     	R11 1 ; if R11 then PC := 35
	29	[7873]	JMP      	35 ; PC := 35
	30	[7873]	GETGLOBAL	R11 K3 ; R11 := 0x34291f5c
	31	[7873]	GETTABLE 	R11 R11 K5 ; R11 := R11[0xe6b41adb]
	32	[7873]	CALL     	R11 1 2 ; R11 := R11()
	33	[7873]	TEST     	R11 0 ; if not R11 then PC := 42
	34	[7873]	JMP      	42 ; PC := 42
	35	[7874]	GETUPVAL 	R11 U2 ; R11 := U2
	36	[7874]	GETTABLE 	R11 R11 K6 ; R11 := R11[0xf616a184]
	37	[7874]	MOVE     	R12 R3 ; R12 := R3
	38	[7874]	LOADK    	R13 K2 ; R13 := "ConditionalFirstConfirm"
	39	[7874]	LOADK    	R14 := 3.000000
	40	[7874]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	41	[7874]	JMP      	46 ; PC := 46
	42	[7876]	MOVE     	R11 R9 ; R11 := R9
	43	[7876]	MOVE     	R12 R2 ; R12 := R2
	44	[7876]	MOVE     	R13 R6 ; R13 := R6
	45	[7876]	CALL     	R11 3 1 ; R11(R12,R13)
	46	[7878]	RETURN   	R0 1 ; return 

function #375 <?:7880,7892> (29 instructions, 116 bytes at 00000160C684B270)
2 params, 8 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7881]	LOADK    	R2 K0 ; R2 := "<SECONDARY_FIRE>"
	2	[7882]	LOADK    	R3 K1 ; R3 := "<MELEE_CHANNEL>"
	3	[7883]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	4	[7883]	MOVE     	R5 R0 ; R5 := R0
	5	[7883]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[7883]	TEST     	R4 1 ; if R4 then PC := 28
	7	[7883]	JMP      	28 ; PC := 28
	8	[7883]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	9	[7883]	MOVE     	R5 R1 ; R5 := R1
	10	[7883]	CALL     	R4 2 2 ; R4 := R4(R5)
	11	[7883]	TEST     	R4 1 ; if R4 then PC := 28
	12	[7883]	JMP      	28 ; PC := 28
	13	[7884]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0x54f5d6ad]
	14	[7884]	MOVE     	R6 R2 ; R6 := R2
	15	[7884]	MOVE     	R7 R1 ; R7 := R1
	16	[7884]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	17	[7884]	EQ       	1 R4 R2 ; if R4 == R2 then PC := 21
	18	[7884]	JMP      	21 ; PC := 21
	19	[7885]	RETURN   	R2 2 ; return R2 
	20	[7885]	JMP      	28 ; PC := 28
	21	[7886]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0x54f5d6ad]
	22	[7886]	MOVE     	R6 R3 ; R6 := R3
	23	[7886]	MOVE     	R7 R1 ; R7 := R1
	24	[7886]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	25	[7886]	EQ       	1 R4 R3 ; if R4 == R3 then PC := 28
	26	[7886]	JMP      	28 ; PC := 28
	27	[7887]	RETURN   	R3 2 ; return R3 
	28	[7891]	RETURN   	R2 2 ; return R2 
	29	[7892]	RETURN   	R0 1 ; return 

function #376 <?:7894,7921> (96 instructions, 384 bytes at 00000160C684B4F0)
0 params, 5 slots, 0 upvalues, 0 locals, 30 constants, 0 functions
	1	[7896]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7896]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	3	[7896]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7896]	TEST     	R1 1 ; if R1 then PC := 92
	5	[7896]	JMP      	92 ; PC := 92
	6	[7896]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	7	[7896]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xf2deaf69]
	8	[7896]	GETGLOBAL	R3 K3 ; R3 := gLotusBaseGameRulesType
	9	[7896]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	10	[7896]	TEST     	R1 0 ; if not R1 then PC := 92
	11	[7896]	JMP      	92 ; PC := 92
	12	[7897]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	13	[7897]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xf058f9c3]
	14	[7897]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[7897]	EQ       	0 R1 K6 ; if R1 ~= 31.000000 then PC := 19
	16	[7897]	JMP      	19 ; PC := 19
	17	[7898]	GETGLOBAL	R0 K7 ; R0 := SOUND_SET_RAILJACK
	18	[7898]	JMP      	92 ; PC := 92
	19	[7900]	NEWTABLE 	R1 0 0 ; R1 := {}
	20	[7901]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	21	[7901]	GETGLOBAL	R3 K9 ; R3 := CETUS_NODE_TAG
	22	[7901]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[7901]	GETGLOBAL	R3 K10 ; R3 := SOUND_SET_EIDOLON
	24	[7901]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	25	[7902]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	26	[7902]	GETGLOBAL	R3 K11 ; R3 := PLAINS_NODE_TAG
	27	[7902]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[7902]	GETGLOBAL	R3 K10 ; R3 := SOUND_SET_EIDOLON
	29	[7902]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	30	[7903]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	31	[7903]	GETGLOBAL	R3 K12 ; R3 := ORB_VALLIS_NODE_TAG
	32	[7903]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[7903]	GETGLOBAL	R3 K13 ; R3 := SOUND_SET_ORB_VALLIS
	34	[7903]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	35	[7904]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	36	[7904]	GETGLOBAL	R3 K14 ; R3 := FORTUNA_NODE_TAG
	37	[7904]	CALL     	R2 2 2 ; R2 := R2(R3)
	38	[7904]	GETGLOBAL	R3 K15 ; R3 := SOUND_SET_FORTUNA
	39	[7904]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	40	[7905]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	41	[7905]	GETGLOBAL	R3 K16 ; R3 := OROKIN_TOWER_NODE_TAG
	42	[7905]	CALL     	R2 2 2 ; R2 := R2(R3)
	43	[7905]	GETGLOBAL	R3 K17 ; R3 := SOUND_SET_OROKIN_TOWER
	44	[7905]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	45	[7906]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	46	[7906]	GETGLOBAL	R3 K18 ; R3 := ENTRATI_LANDSCAPE_NODE_TAG
	47	[7906]	CALL     	R2 2 2 ; R2 := R2(R3)
	48	[7906]	GETGLOBAL	R3 K17 ; R3 := SOUND_SET_OROKIN_TOWER
	49	[7906]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	50	[7907]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	51	[7907]	GETGLOBAL	R3 K19 ; R3 := ZARIMAN_NODE_TAG
	52	[7907]	CALL     	R2 2 2 ; R2 := R2(R3)
	53	[7907]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	54	[7907]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	55	[7908]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	56	[7908]	GETGLOBAL	R3 K21 ; R3 := ZARIMAN_MISSION_A_TAG
	57	[7908]	CALL     	R2 2 2 ; R2 := R2(R3)
	58	[7908]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	59	[7908]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	60	[7909]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	61	[7909]	GETGLOBAL	R3 K22 ; R3 := ZARIMAN_MISSION_B_TAG
	62	[7909]	CALL     	R2 2 2 ; R2 := R2(R3)
	63	[7909]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	64	[7909]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	65	[7910]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	66	[7910]	GETGLOBAL	R3 K23 ; R3 := ZARIMAN_MISSION_C_TAG
	67	[7910]	CALL     	R2 2 2 ; R2 := R2(R3)
	68	[7910]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	69	[7910]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	70	[7911]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	71	[7911]	GETGLOBAL	R3 K24 ; R3 := ZARIMAN_MISSION_D_TAG
	72	[7911]	CALL     	R2 2 2 ; R2 := R2(R3)
	73	[7911]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	74	[7911]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	75	[7912]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	76	[7912]	GETGLOBAL	R3 K25 ; R3 := ZARIMAN_MISSION_E_TAG
	77	[7912]	CALL     	R2 2 2 ; R2 := R2(R3)
	78	[7912]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	79	[7912]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	80	[7913]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	81	[7913]	GETGLOBAL	R3 K26 ; R3 := APARTMENT_NODE_TAG
	82	[7913]	CALL     	R2 2 2 ; R2 := R2(R3)
	83	[7913]	GETGLOBAL	R3 K20 ; R3 := SOUND_SET_ZARIMAN
	84	[7913]	SETTABLE 	R1 R2 R3 ; R1[R2] := R3
	85	[7914]	GETGLOBAL	R2 K8 ; R2 := 0x64fb1586
	86	[7914]	GETGLOBAL	R3 K1 ; R3 := 0xbe190284
	87	[7914]	SELF     	R3 R3 K27 ; R4 := R3; R3 := R3[0xef893aec]
	88	[7914]	CALL     	R3 2 2 ; R3 := R3(R4)
	89	[7914]	GETTABLE 	R3 R3 K28 ; R3 := R3["location"]
	90	[7914]	CALL     	R2 2 2 ; R2 := R2(R3)
	91	[7914]	GETTABLE 	R0 R1 R2 ; R0 := R1[R2]
	92	[7917]	EQ       	0 R0 K29 ; if R0 ~= nil then PC := 95
	93	[7917]	JMP      	95 ; PC := 95
	94	[7918]	GETGLOBAL	R0 K10 ; R0 := SOUND_SET_EIDOLON
	95	[7920]	RETURN   	R0 2 ; return R0 
	96	[7921]	RETURN   	R0 1 ; return 

function #377 <?:7923,7936> (49 instructions, 196 bytes at 00000160C684BA90)
3 params, 11 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[7924]	TEST     	R2 1 ; if R2 then PC := 4
	2	[7924]	JMP      	4 ; PC := 4
	3	[7924]	LOADK    	R2 := 0.000000
	4	[7925]	LOADK    	R3 := 64.000000
	5	[7926]	SELF     	R4 R1 K0 ; R5 := R1; R4 := R1[0xdb7325e3]
	6	[7926]	CALL     	R4 2 2 ; R4 := R4(R5)
	7	[7927]	GETTABLE 	R5 R4 K1 ; R5 := R4["x"]
	8	[7927]	GETTABLE 	R6 R4 K2 ; R6 := R4["y"]
	9	[7927]	DIV      	R6 R6 R3 ; R6 := R6 / R3
	10	[7927]	DIV      	R5 R5 R6 ; R5 := R5 / R6
	11	[7928]	SELF     	R6 R0 K3 ; R7 := R0; R6 := R0[0x1cb415c1]
	12	[7928]	LOADK    	R8 K4 ; R8 := "Title.BookendLeft"
	13	[7928]	MOVE     	R9 R1 ; R9 := R1
	14	[7928]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	15	[7929]	SELF     	R6 R0 K3 ; R7 := R0; R6 := R0[0x1cb415c1]
	16	[7929]	LOADK    	R8 K5 ; R8 := "Title.BookendRight"
	17	[7929]	MOVE     	R9 R1 ; R9 := R1
	18	[7929]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	19	[7930]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	20	[7930]	LOADK    	R8 K4 ; R8 := "Title.BookendLeft"
	21	[7930]	LOADK    	R9 := 12.000000
	22	[7930]	MOVE     	R10 R5 ; R10 := R5
	23	[7930]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	24	[7931]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	25	[7931]	LOADK    	R8 K4 ; R8 := "Title.BookendLeft"
	26	[7931]	LOADK    	R9 := 13.000000
	27	[7931]	MOVE     	R10 R3 ; R10 := R3
	28	[7931]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	29	[7932]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	30	[7932]	LOADK    	R8 K4 ; R8 := "Title.BookendLeft"
	31	[7932]	LOADK    	R9 := 1.000000
	32	[7932]	ADD      	R10 K7 R2 ; R10 := 22.000000 + R2
	33	[7932]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	34	[7933]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	35	[7933]	LOADK    	R8 K5 ; R8 := "Title.BookendRight"
	36	[7933]	LOADK    	R9 := 12.000000
	37	[7933]	MOVE     	R10 R5 ; R10 := R5
	38	[7933]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	39	[7934]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	40	[7934]	LOADK    	R8 K5 ; R8 := "Title.BookendRight"
	41	[7934]	LOADK    	R9 := 13.000000
	42	[7934]	MOVE     	R10 R3 ; R10 := R3
	43	[7934]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	44	[7935]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x67bc869f]
	45	[7935]	LOADK    	R8 K5 ; R8 := "Title.BookendRight"
	46	[7935]	LOADK    	R9 := 1.000000
	47	[7935]	ADD      	R10 K7 R2 ; R10 := 22.000000 + R2
	48	[7935]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	49	[7936]	RETURN   	R0 1 ; return 

function #378 <?:7938,7974> (65 instructions, 260 bytes at 00000160C684BDF0)
2 params, 27 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[7939]	NEWTABLE 	R2 0 0 ; R2 := {}
	2	[7940]	LOADK    	R3 := 1.000000
	3	[7940]	MOVE     	R4 R1 ; R4 := R1
	4	[7940]	LOADK    	R5 := 1.000000
	5	[7940]	FORPREP  	R3 11 ; R3 -= R5; PC := 11
	6	[7941]	GETGLOBAL	R7 K0 ; R7 := 0x33bdd652
	7	[7941]	GETTABLE 	R7 R7 K1 ; R7 := R7[0x23d5322f]
	8	[7941]	MOVE     	R8 R2 ; R8 := R2
	9	[7941]	GETTABLE 	R9 R0 K2 ; R9 := R0[1.000000]
	10	[7941]	CALL     	R7 3 1 ; R7(R8,R9)
	11	[7940]	FORLOOP  	R3 6 ; R3 += R5; if R3 <= R4 then begin PC := 6; R6 := R3 end
	12	[7944]	LEN      	R7 R0 ; R7 := # R0
	13	[7944]	EQ       	0 R7 K2 ; if R7 ~= 1.000000 then PC := 16
	14	[7944]	JMP      	16 ; PC := 16
	15	[7945]	RETURN   	R2 2 ; return R2 
	16	[7948]	LOADK    	R7 := 0.000000
	17	[7949]	LOADK    	R8 := 1.000000
	18	[7949]	LEN      	R9 R0 ; R9 := # R0
	19	[7949]	LOADK    	R10 := 1.000000
	20	[7949]	FORPREP  	R8 24 ; R8 -= R10; PC := 24
	21	[7950]	GETTABLE 	R12 R0 R11 ; R12 := R0[R11]
	22	[7950]	GETTABLE 	R12 R12 K3 ; R12 := R12["mWeight"]
	23	[7950]	ADD      	R7 R7 R12 ; R7 := R7 + R12
	24	[7949]	FORLOOP  	R8 21 ; R8 += R10; if R8 <= R9 then begin PC := 21; R11 := R8 end
	25	[7953]	LOADNIL  	R12 R14 ; R12 := R13 := R14 := nil
	26	[7956]	LEN      	R15 R0 ; R15 := # R0
	27	[7957]	LOADK    	R16 := 1.000000
	28	[7957]	MOVE     	R17 R1 ; R17 := R1
	29	[7957]	LOADK    	R18 := 1.000000
	30	[7957]	FORPREP  	R16 63 ; R16 -= R18; PC := 63
	31	[7958]	MOVE     	R14 R7 ; R14 := R7
	32	[7959]	GETGLOBAL	R20 K4 ; R20 := 0xdd6e4cf8
	33	[7959]	LOADK    	R21 := 0.000000
	34	[7959]	LOADK    	R22 := 1.000000
	35	[7959]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	36	[7959]	MOVE     	R13 R20 ; R13 := R20
	37	[7960]	MUL      	R12 R13 R14 ; R12 := R13 * R14
	38	[7961]	LOADK    	R20 := 1.000000
	39	[7961]	MOVE     	R21 R15 ; R21 := R15
	40	[7961]	LOADK    	R22 := 1.000000
	41	[7961]	FORPREP  	R20 62 ; R20 -= R22; PC := 62
	42	[7962]	GETTABLE 	R24 R0 R23 ; R24 := R0[R23]
	43	[7962]	GETTABLE 	R24 R24 K3 ; R24 := R24["mWeight"]
	44	[7962]	LT       	0 R12 R24 ; if R12 >= R24 then PC := 59
	45	[7962]	JMP      	59 ; PC := 59
	46	[7963]	GETTABLE 	R24 R0 R23 ; R24 := R0[R23]
	47	[7963]	GETTABLE 	R24 R24 K5 ; R24 := R24["mItemType"]
	48	[7963]	SETTABLE 	R2 R19 R24 ; R2[R19] := R24
	49	[7964]	GETTABLE 	R24 R0 R23 ; R24 := R0[R23]
	50	[7964]	GETTABLE 	R24 R24 K3 ; R24 := R24["mWeight"]
	51	[7964]	SUB      	R7 R7 R24 ; R7 := R7 - R24
	52	[7965]	GETGLOBAL	R24 K0 ; R24 := 0x33bdd652
	53	[7965]	GETTABLE 	R24 R24 K6 ; R24 := R24[0x9c1f3b5a]
	54	[7965]	MOVE     	R25 R0 ; R25 := R0
	55	[7965]	MOVE     	R26 R23 ; R26 := R23
	56	[7965]	CALL     	R24 3 1 ; R24(R25,R26)
	57	[7966]	SUB      	R15 R15 K2 ; R15 := R15 - 1.000000
	58	[7967]	JMP      	63 ; PC := 63
	59	[7969]	GETTABLE 	R24 R0 R23 ; R24 := R0[R23]
	60	[7969]	GETTABLE 	R24 R24 K3 ; R24 := R24["mWeight"]
	61	[7969]	SUB      	R12 R12 R24 ; R12 := R12 - R24
	62	[7961]	FORLOOP  	R20 42 ; R20 += R22; if R20 <= R21 then begin PC := 42; R23 := R20 end
	63	[7957]	FORLOOP  	R16 31 ; R16 += R18; if R16 <= R17 then begin PC := 31; R19 := R16 end
	64	[7973]	RETURN   	R2 2 ; return R2 
	65	[7974]	RETURN   	R0 1 ; return 

function #379 <?:7976,8210> (641 instructions, 2564 bytes at 00000160C684C170)
4 params, 126 slots, 3 upvalues, 0 locals, 88 constants, 0 functions
	1	[7977]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[7977]	CALL     	R4 1 2 ; R4 := R4()
	3	[7978]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	4	[7978]	GETGLOBAL	R6 K1 ; R6 := _T
	5	[7978]	GETTABLE 	R6 R6 K2 ; R6 := R6["randInvigorations"]
	6	[7978]	CALL     	R5 2 2 ; R5 := R5(R6)
	7	[7978]	TEST     	R5 1 ; if R5 then PC := 12
	8	[7978]	JMP      	12 ; PC := 12
	9	[7979]	GETGLOBAL	R5 K1 ; R5 := _T
	10	[7979]	GETTABLE 	R5 R5 K2 ; R5 := R5["randInvigorations"]
	11	[7979]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	12	[7982]	SELF     	R5 R1 K3 ; R6 := R1; R5 := R1[0x20fbd800]
	13	[7982]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[7982]	DIV      	R5 R5 K4 ; R5 := R5 / 60.000000
	15	[7983]	GETTABLE 	R6 R3 K5 ; R6 := R3["mInvigorationIndex"]
	16	[7984]	GETGLOBAL	R7 K6 ; R7 := 0x5bced4c4
	17	[7984]	GETTABLE 	R7 R7 K7 ; R7 := R7[0x55f27c30]
	18	[7984]	DIV      	R8 R4 R5 ; R8 := R4 / R5
	19	[7984]	CALL     	R7 2 2 ; R7 := R7(R8)
	20	[7985]	GETGLOBAL	R8 K8 ; R8 := 0x0032441c
	21	[7985]	GETTABLE 	R8 R8 K9 ; R8 := R8["HelminthUpgradeOfferingCache"]
	22	[7985]	TEST     	R8 0 ; if not R8 then PC := 78
	23	[7985]	JMP      	78 ; PC := 78
	24	[7985]	GETGLOBAL	R8 K8 ; R8 := 0x0032441c
	25	[7985]	GETTABLE 	R8 R8 K9 ; R8 := R8["HelminthUpgradeOfferingCache"]
	26	[7985]	GETTABLE 	R8 R8 R0 ; R8 := R8[R0]
	27	[7985]	TEST     	R8 0 ; if not R8 then PC := 78
	28	[7985]	JMP      	78 ; PC := 78
	29	[7985]	GETGLOBAL	R8 K8 ; R8 := 0x0032441c
	30	[7985]	GETTABLE 	R8 R8 K10 ; R8 := R8["HelminthUpgradeIndexCache"]
	31	[7985]	TEST     	R8 0 ; if not R8 then PC := 78
	32	[7985]	JMP      	78 ; PC := 78
	33	[7985]	GETGLOBAL	R8 K8 ; R8 := 0x0032441c
	34	[7985]	GETTABLE 	R8 R8 K10 ; R8 := R8["HelminthUpgradeIndexCache"]
	35	[7985]	GETTABLE 	R8 R8 R0 ; R8 := R8[R0]
	36	[7985]	EQ       	0 R8 R7 ; if R8 ~= R7 then PC := 78
	37	[7985]	JMP      	78 ; PC := 78
	38	[7986]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	39	[7986]	GETTABLE 	R9 R3 K11 ; R9 := R3["mInvigorationSuitOfferings"]
	40	[7986]	CALL     	R8 2 2 ; R8 := R8(R9)
	41	[7986]	TEST     	R8 1 ; if R8 then PC := 49
	42	[7986]	JMP      	49 ; PC := 49
	43	[7986]	GETTABLE 	R8 R3 K11 ; R8 := R3["mInvigorationSuitOfferings"]
	44	[7986]	LEN      	R8 R8 ; R8 := # R8
	45	[7986]	EQ       	1 R8 K12 ; if R8 == 0.000000 then PC := 49
	46	[7986]	JMP      	49 ; PC := 49
	47	[7986]	EQ       	1 R7 R6 ; if R7 == R6 then PC := 74
	48	[7986]	JMP      	74 ; PC := 74
	49	[7987]	NEWTABLE 	R8 0 0 ; R8 := {}
	50	[7988]	LOADK    	R9 := 1.000000
	51	[7988]	GETGLOBAL	R10 K8 ; R10 := 0x0032441c
	52	[7988]	GETTABLE 	R10 R10 K9 ; R10 := R10["HelminthUpgradeOfferingCache"]
	53	[7988]	GETTABLE 	R10 R10 R0 ; R10 := R10[R0]
	54	[7988]	LEN      	R10 R10 ; R10 := # R10
	55	[7988]	LOADK    	R11 := 1.000000
	56	[7988]	FORPREP  	R9 66 ; R9 -= R11; PC := 66
	57	[7989]	GETGLOBAL	R13 K13 ; R13 := 0x33bdd652
	58	[7989]	GETTABLE 	R13 R13 K14 ; R13 := R13[0x23d5322f]
	59	[7989]	MOVE     	R14 R8 ; R14 := R8
	60	[7989]	GETGLOBAL	R15 K8 ; R15 := 0x0032441c
	61	[7989]	GETTABLE 	R15 R15 K9 ; R15 := R15["HelminthUpgradeOfferingCache"]
	62	[7989]	GETTABLE 	R15 R15 R0 ; R15 := R15[R0]
	63	[7989]	GETTABLE 	R15 R15 R12 ; R15 := R15[R12]
	64	[7989]	GETTABLE 	R15 R15 K15 ; R15 := R15["baseSuitType"]
	65	[7989]	CALL     	R13 3 1 ; R13(R14,R15)
	66	[7988]	FORLOOP  	R9 57 ; R9 += R11; if R9 <= R10 then begin PC := 57; R12 := R9 end
	67	[7991]	GETGLOBAL	R13 K16 ; R13 := 0x25d99d89
	68	[7991]	SELF     	R13 R13 K17 ; R14 := R13; R13 := R13[0x0805c9cf]
	69	[7991]	MOVE     	R15 R8 ; R15 := R8
	70	[7991]	MOVE     	R16 R7 ; R16 := R7
	71	[7991]	OP_LOADBOOL	R17 0 0 ; R17 := false
	72	[7991]	LOADK    	R18 K18 ; R18 := "OnHelminthOfferingsUploaded"
	73	[7991]	CALL     	R13 6 1 ; R13(R14,R15,R16,R17,R18)
	74	[7993]	GETGLOBAL	R13 K8 ; R13 := 0x0032441c
	75	[7993]	GETTABLE 	R13 R13 K9 ; R13 := R13["HelminthUpgradeOfferingCache"]
	76	[7993]	GETTABLE 	R13 R13 R0 ; R13 := R13[R0]
	77	[7993]	RETURN   	R13 2 ; return R13 
	78	[7996]	GETGLOBAL	R13 K19 ; R13 := 0xbe190284
	79	[7996]	SELF     	R13 R13 K20 ; R14 := R13; R13 := R13[0xa1c390fe]
	80	[7996]	CALL     	R13 2 2 ; R13 := R13(R14)
	81	[7997]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	82	[7997]	MOVE     	R15 R13 ; R15 := R13
	83	[7997]	CALL     	R14 2 2 ; R14 := R14(R15)
	84	[7997]	TEST     	R14 0 ; if not R14 then PC := 91
	85	[7997]	JMP      	91 ; PC := 91
	86	[7998]	GETGLOBAL	R14 K21 ; R14 := 0x3d106989
	87	[7998]	LOADK    	R15 K22 ; R15 := "Failed to find store manifest for helminth upgrades!"
	88	[7998]	CALL     	R14 2 1 ; R14(R15)
	89	[7999]	LOADNIL  	R14 R14 ; R14 := nil
	90	[7999]	RETURN   	R14 2 ; return R14 
	91	[8002]	GETGLOBAL	R14 K0 ; R14 := 0x7b998233
	92	[8002]	MOVE     	R15 R1 ; R15 := R1
	93	[8002]	CALL     	R14 2 2 ; R14 := R14(R15)
	94	[8002]	TEST     	R14 0 ; if not R14 then PC := 101
	95	[8002]	JMP      	101 ; PC := 101
	96	[8003]	GETGLOBAL	R14 K21 ; R14 := 0x3d106989
	97	[8003]	LOADK    	R15 K23 ; R15 := "Failed to find helminth manifest for helminth upgrades!"
	98	[8003]	CALL     	R14 2 1 ; R14(R15)
	99	[8004]	LOADNIL  	R14 R14 ; R14 := nil
	100	[8004]	RETURN   	R14 2 ; return R14 
	101	[8007]	SELF     	R14 R1 K24 ; R15 := R1; R14 := R1[0x7db4ea75]
	102	[8007]	CALL     	R14 2 2 ; R14 := R14(R15)
	103	[8009]	LOADNIL  	R15 R16 ; R15 := R16 := nil
	104	[8011]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	105	[8011]	GETTABLE 	R18 R3 K11 ; R18 := R3["mInvigorationSuitOfferings"]
	106	[8011]	CALL     	R17 2 2 ; R17 := R17(R18)
	107	[8011]	TEST     	R17 1 ; if R17 then PC := 117
	108	[8011]	JMP      	117 ; PC := 117
	109	[8011]	GETTABLE 	R17 R3 K11 ; R17 := R3["mInvigorationSuitOfferings"]
	110	[8011]	LEN      	R17 R17 ; R17 := # R17
	111	[8011]	EQ       	0 R17 R14 ; if R17 ~= R14 then PC := 117
	112	[8011]	JMP      	117 ; PC := 117
	113	[8011]	EQ       	0 R7 R6 ; if R7 ~= R6 then PC := 117
	114	[8011]	JMP      	117 ; PC := 117
	115	[8012]	GETTABLE 	R16 R3 K11 ; R16 := R3["mInvigorationSuitOfferings"]
	116	[8012]	JMP      	299 ; PC := 299
	117	[8014]	NEWTABLE 	R17 0 0 ; R17 := {}
	118	[8015]	SELF     	R18 R13 K25 ; R19 := R13; R18 := R13[0xe9cbffa8]
	119	[8015]	GETGLOBAL	R20 K26 ; R20 := 0x7ed0a956
	120	[8015]	LOADK    	R21 K27 ; R21 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
	121	[8015]	CALL     	R20 2 0 ; R20,... := R20(R21)
	122	[8015]	CALL     	R18 0 2 ; R18 := R18(R19,...)
	123	[8016]	GETGLOBAL	R19 K28 ; R19 := 0xcfc01047
	124	[8016]	MOVE     	R20 R18 ; R20 := R18
	125	[8016]	CALL     	R19 2 4 ; R19,R20,R21 := R19(R20)
	126	[8016]	JMP      	209 ; PC := 209
	127	[8017]	SELF     	R24 R23 K29 ; R25 := R23; R24 := R23[0xfe9eb1a5]
	128	[8017]	CALL     	R24 2 2 ; R24 := R24(R25)
	129	[8017]	EQ       	0 R24 K31 ; if R24 ~= 3.000000 then PC := 209
	130	[8017]	JMP      	209 ; PC := 209
	131	[8017]	SELF     	R24 R23 K32 ; R25 := R23; R24 := R23[0xba7bce8f]
	132	[8017]	CALL     	R24 2 2 ; R24 := R24(R25)
	133	[8017]	TEST     	R24 1 ; if R24 then PC := 209
	134	[8017]	JMP      	209 ; PC := 209
	135	[8017]	SELF     	R24 R23 K33 ; R25 := R23; R24 := R23[0xc055cef8]
	136	[8017]	CALL     	R24 2 2 ; R24 := R24(R25)
	137	[8017]	TEST     	R24 0 ; if not R24 then PC := 209
	138	[8017]	JMP      	209 ; PC := 209
	139	[8018]	SELF     	R24 R23 K34 ; R25 := R23; R24 := R23[0xed4e0128]
	140	[8018]	CALL     	R24 2 2 ; R24 := R24(R25)
	141	[8019]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	142	[8019]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	143	[8019]	MOVE     	R26 R24 ; R26 := R24
	144	[8019]	LOADK    	R27 K37 ; R27 := "Prime"
	145	[8019]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	146	[8019]	TEST     	R25 1 ; if R25 then PC := 209
	147	[8019]	JMP      	209 ; PC := 209
	148	[8019]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	149	[8019]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	150	[8019]	MOVE     	R26 R24 ; R26 := R24
	151	[8019]	LOADK    	R27 K38 ; R27 := "Operator"
	152	[8019]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	153	[8019]	TEST     	R25 1 ; if R25 then PC := 209
	154	[8019]	JMP      	209 ; PC := 209
	155	[8019]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	156	[8019]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	157	[8019]	MOVE     	R26 R24 ; R26 := R24
	158	[8019]	LOADK    	R27 K39 ; R27 := "Umbra"
	159	[8019]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	160	[8019]	TEST     	R25 1 ; if R25 then PC := 209
	161	[8019]	JMP      	209 ; PC := 209
	162	[8019]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	163	[8019]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	164	[8019]	MOVE     	R26 R24 ; R26 := R24
	165	[8019]	LOADK    	R27 K40 ; R27 := "PlayerPowerSuit"
	166	[8019]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	167	[8019]	TEST     	R25 1 ; if R25 then PC := 209
	168	[8019]	JMP      	209 ; PC := 209
	169	[8020]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	170	[8020]	GETTABLE 	R25 R25 K41 ; R25 := R25[0x66edf04f]
	171	[8020]	MOVE     	R26 R24 ; R26 := R24
	172	[8020]	LOADK    	R27 K42 ; R27 := "/StoreItems"
	173	[8020]	LOADK    	R28 K43 ; R28 := ""
	174	[8020]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	175	[8021]	GETGLOBAL	R26 K35 ; R26 := 0x7f5022cf
	176	[8021]	GETTABLE 	R26 R26 K36 ; R26 := R26[0xa5c556b9]
	177	[8021]	MOVE     	R27 R25 ; R27 := R25
	178	[8021]	LOADK    	R28 K44 ; R28 := "/Anti"
	179	[8021]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	180	[8021]	TEST     	R26 0 ; if not R26 then PC := 194
	181	[8021]	JMP      	194 ; PC := 194
	182	[8022]	GETGLOBAL	R26 K35 ; R26 := 0x7f5022cf
	183	[8022]	GETTABLE 	R26 R26 K45 ; R26 := R26[0x1a94c9cc]
	184	[8022]	MOVE     	R27 R25 ; R27 := R25
	185	[8022]	LOADK    	R28 := 1.000000
	186	[8022]	GETGLOBAL	R29 K35 ; R29 := 0x7f5022cf
	187	[8022]	GETTABLE 	R29 R29 K46 ; R29 := R29[0x41e2ae25]
	188	[8022]	MOVE     	R30 R25 ; R30 := R25
	189	[8022]	CALL     	R29 2 2 ; R29 := R29(R30)
	190	[8022]	SUB      	R29 R29 K47 ; R29 := R29 - 4.000000
	191	[8022]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	192	[8022]	LOADK    	R27 K48 ; R27 := "Nova"
	193	[8022]	CONCAT   	R25 R26 R27 ; R25 := R26 .. R27
	194	[8024]	GETGLOBAL	R26 K26 ; R26 := 0x7ed0a956
	195	[8024]	MOVE     	R27 R25 ; R27 := R25
	196	[8024]	LOADK    	R28 K49 ; R28 := "BaseSuit"
	197	[8024]	CONCAT   	R27 R27 R28 ; R27 := R27 .. R28
	198	[8024]	CALL     	R26 2 2 ; R26 := R26(R27)
	199	[8026]	GETGLOBAL	R27 K0 ; R27 := 0x7b998233
	200	[8026]	MOVE     	R28 R26 ; R28 := R26
	201	[8026]	CALL     	R27 2 2 ; R27 := R27(R28)
	202	[8026]	TEST     	R27 1 ; if R27 then PC := 209
	203	[8026]	JMP      	209 ; PC := 209
	204	[8027]	GETGLOBAL	R27 K13 ; R27 := 0x33bdd652
	205	[8027]	GETTABLE 	R27 R27 K14 ; R27 := R27[0x23d5322f]
	206	[8027]	MOVE     	R28 R17 ; R28 := R17
	207	[8027]	MOVE     	R29 R26 ; R29 := R26
	208	[8027]	CALL     	R27 3 1 ; R27(R28,R29)
	209	[8016]	TFORLOOP 	R19 2 ; R22,R23 := R19(R20,R21); if R22 ~= nil then begin PC = 127; R21 := R22 end
	210	[8030]	JMP      	127 ; PC := 127
	211	[8033]	LEN      	R27 R17 ; R27 := # R17
	212	[8033]	EQ       	0 R27 K12 ; if R27 ~= 0.000000 then PC := 219
	213	[8033]	JMP      	219 ; PC := 219
	214	[8034]	GETGLOBAL	R27 K21 ; R27 := 0x3d106989
	215	[8034]	LOADK    	R28 K50 ; R28 := "Failed to find valid suits for helminth upgrades!"
	216	[8034]	CALL     	R27 2 1 ; R27(R28)
	217	[8035]	LOADNIL  	R27 R27 ; R27 := nil
	218	[8035]	RETURN   	R27 2 ; return R27 
	219	[8038]	SELF     	R27 R1 K51 ; R28 := R1; R27 := R1[0x3c4a2d85]
	220	[8038]	CALL     	R27 2 2 ; R27 := R27(R28)
	221	[8038]	MOVE     	R15 R27 ; R15 := R27
	222	[8039]	GETGLOBAL	R27 K0 ; R27 := 0x7b998233
	223	[8039]	GETTABLE 	R28 R3 K11 ; R28 := R3["mInvigorationSuitOfferings"]
	224	[8039]	CALL     	R27 2 2 ; R27 := R27(R28)
	225	[8039]	TEST     	R27 1 ; if R27 then PC := 231
	226	[8039]	JMP      	231 ; PC := 231
	227	[8039]	GETTABLE 	R27 R3 K11 ; R27 := R3["mInvigorationSuitOfferings"]
	228	[8039]	LEN      	R27 R27 ; R27 := # R27
	229	[8039]	EQ       	1 R27 R14 ; if R27 == R14 then PC := 232
	230	[8039]	JMP      	232 ; PC := 232
	231	[8039]	OP_LOADBOOL	R27 0 1 ; R27 := false; PC := 232
	232	[8039]	OP_LOADBOOL	R27 1 0 ; R27 := true
	233	[8040]	TEST     	R27 0 ; if not R27 then PC := 255
	234	[8040]	JMP      	255 ; PC := 255
	235	[8041]	LOADK    	R28 := 1.000000
	236	[8041]	LEN      	R29 R15 ; R29 := # R15
	237	[8041]	LOADK    	R30 := 1.000000
	238	[8041]	FORPREP  	R28 254 ; R28 -= R30; PC := 254
	239	[8042]	LOADK    	R32 := 1.000000
	240	[8042]	GETTABLE 	R33 R3 K11 ; R33 := R3["mInvigorationSuitOfferings"]
	241	[8042]	LEN      	R33 R33 ; R33 := # R33
	242	[8042]	LOADK    	R34 := 1.000000
	243	[8042]	FORPREP  	R32 253 ; R32 -= R34; PC := 253
	244	[8043]	GETTABLE 	R36 R15 R31 ; R36 := R15[R31]
	245	[8043]	GETTABLE 	R36 R36 K52 ; R36 := R36["mItemType"]
	246	[8043]	GETTABLE 	R37 R3 K11 ; R37 := R3["mInvigorationSuitOfferings"]
	247	[8043]	GETTABLE 	R37 R37 R35 ; R37 := R37[R35]
	248	[8043]	EQ       	0 R36 R37 ; if R36 ~= R37 then PC := 253
	249	[8043]	JMP      	253 ; PC := 253
	250	[8044]	GETTABLE 	R36 R15 R31 ; R36 := R15[R31]
	251	[8044]	SETTABLE 	R36 K53 K12 ; R36["mWeight"] := 0.000000
	252	[8045]	JMP      	254 ; PC := 254
	253	[8042]	FORLOOP  	R32 244 ; R32 += R34; if R32 <= R33 then begin PC := 244; R35 := R32 end
	254	[8041]	FORLOOP  	R28 239 ; R28 += R30; if R28 <= R29 then begin PC := 239; R31 := R28 end
	255	[8051]	LOADK    	R36 := 1.000000
	256	[8051]	LEN      	R37 R17 ; R37 := # R17
	257	[8051]	LOADK    	R38 := 1.000000
	258	[8051]	FORPREP  	R36 298 ; R36 -= R38; PC := 298
	259	[8052]	OP_LOADBOOL	R40 0 0 ; R40 := false
	260	[8053]	LOADK    	R41 := 1.000000
	261	[8053]	LEN      	R42 R15 ; R42 := # R15
	262	[8053]	LOADK    	R43 := 1.000000
	263	[8053]	FORPREP  	R41 271 ; R41 -= R43; PC := 271
	264	[8054]	GETTABLE 	R45 R15 R44 ; R45 := R15[R44]
	265	[8054]	GETTABLE 	R45 R45 K52 ; R45 := R45["mItemType"]
	266	[8054]	GETTABLE 	R46 R17 R39 ; R46 := R17[R39]
	267	[8054]	EQ       	0 R45 R46 ; if R45 ~= R46 then PC := 271
	268	[8054]	JMP      	271 ; PC := 271
	269	[8055]	OP_LOADBOOL	R40 1 0 ; R40 := true
	270	[8056]	JMP      	272 ; PC := 272
	271	[8053]	FORLOOP  	R41 264 ; R41 += R43; if R41 <= R42 then begin PC := 264; R44 := R41 end
	272	[8060]	TEST     	R40 1 ; if R40 then PC := 298
	273	[8060]	JMP      	298 ; PC := 298
	274	[8061]	LOADK    	R45 := 1.000000
	275	[8062]	TEST     	R27 0 ; if not R27 then PC := 290
	276	[8062]	JMP      	290 ; PC := 290
	277	[8063]	LOADK    	R46 := 1.000000
	278	[8063]	GETTABLE 	R47 R3 K11 ; R47 := R3["mInvigorationSuitOfferings"]
	279	[8063]	LEN      	R47 R47 ; R47 := # R47
	280	[8063]	LOADK    	R48 := 1.000000
	281	[8063]	FORPREP  	R46 289 ; R46 -= R48; PC := 289
	282	[8064]	GETTABLE 	R50 R17 R39 ; R50 := R17[R39]
	283	[8064]	GETTABLE 	R51 R3 K11 ; R51 := R3["mInvigorationSuitOfferings"]
	284	[8064]	GETTABLE 	R51 R51 R49 ; R51 := R51[R49]
	285	[8064]	EQ       	0 R50 R51 ; if R50 ~= R51 then PC := 289
	286	[8064]	JMP      	289 ; PC := 289
	287	[8065]	LOADK    	R45 := 0.000000
	288	[8066]	JMP      	290 ; PC := 290
	289	[8063]	FORLOOP  	R46 282 ; R46 += R48; if R46 <= R47 then begin PC := 282; R49 := R46 end
	290	[8071]	GETGLOBAL	R50 K13 ; R50 := 0x33bdd652
	291	[8071]	GETTABLE 	R50 R50 K14 ; R50 := R50[0x23d5322f]
	292	[8071]	MOVE     	R51 R15 ; R51 := R15
	293	[8071]	NEWTABLE 	R52 0 2 ; R52 := {}
	294	[8071]	GETTABLE 	R53 R17 R39 ; R53 := R17[R39]
	295	[8071]	SETTABLE 	R52 K52 R53 ; R52["mItemType"] := R53
	296	[8071]	SETTABLE 	R52 K53 R45 ; R52["mWeight"] := R45
	297	[8071]	CALL     	R50 3 1 ; R50(R51,R52)
	298	[8051]	FORLOOP  	R36 259 ; R36 += R38; if R36 <= R37 then begin PC := 259; R39 := R36 end
	299	[8076]	SELF     	R50 R1 K54 ; R51 := R1; R50 := R1[0x3a5333af]
	300	[8076]	CALL     	R50 2 2 ; R50 := R50(R51)
	301	[8077]	LEN      	R51 R50 ; R51 := # R50
	302	[8077]	EQ       	0 R51 K12 ; if R51 ~= 0.000000 then PC := 309
	303	[8077]	JMP      	309 ; PC := 309
	304	[8078]	GETGLOBAL	R51 K21 ; R51 := 0x3d106989
	305	[8078]	LOADK    	R52 K55 ; R52 := "Failed to find valid offensive upgrades for helminth upgrades!"
	306	[8078]	CALL     	R51 2 1 ; R51(R52)
	307	[8079]	LOADNIL  	R51 R51 ; R51 := nil
	308	[8079]	RETURN   	R51 2 ; return R51 
	309	[8082]	SELF     	R51 R1 K56 ; R52 := R1; R51 := R1[0xf9f0dca9]
	310	[8082]	CALL     	R51 2 2 ; R51 := R51(R52)
	311	[8083]	LEN      	R52 R51 ; R52 := # R51
	312	[8083]	EQ       	0 R52 K12 ; if R52 ~= 0.000000 then PC := 319
	313	[8083]	JMP      	319 ; PC := 319
	314	[8084]	GETGLOBAL	R52 K21 ; R52 := 0x3d106989
	315	[8084]	LOADK    	R53 K57 ; R53 := "Failed to find valid defensive upgrades for helminth upgrades!"
	316	[8084]	CALL     	R52 2 1 ; R52(R53)
	317	[8085]	LOADNIL  	R52 R52 ; R52 := nil
	318	[8085]	RETURN   	R52 2 ; return R52 
	319	[8088]	LEN      	R52 R2 ; R52 := # R2
	320	[8088]	EQ       	0 R52 K12 ; if R52 ~= 0.000000 then PC := 327
	321	[8088]	JMP      	327 ; PC := 327
	322	[8089]	GETGLOBAL	R52 K21 ; R52 := 0x3d106989
	323	[8089]	LOADK    	R53 K58 ; R53 := "Failed to find resource costs for helminth upgrades!"
	324	[8089]	CALL     	R52 2 1 ; R52(R53)
	325	[8090]	LOADNIL  	R52 R52 ; R52 := nil
	326	[8090]	RETURN   	R52 2 ; return R52 
	327	[8093]	NEWTABLE 	R52 0 0 ; R52 := {}
	328	[8094]	LOADK    	R53 := 1.000000
	329	[8094]	LEN      	R54 R2 ; R54 := # R2
	330	[8094]	LOADK    	R55 := 1.000000
	331	[8094]	FORPREP  	R53 337 ; R53 -= R55; PC := 337
	332	[8095]	GETGLOBAL	R57 K13 ; R57 := 0x33bdd652
	333	[8095]	GETTABLE 	R57 R57 K14 ; R57 := R57[0x23d5322f]
	334	[8095]	MOVE     	R58 R52 ; R58 := R52
	335	[8095]	GETTABLE 	R59 R2 R56 ; R59 := R2[R56]
	336	[8095]	CALL     	R57 3 1 ; R57(R58,R59)
	337	[8094]	FORLOOP  	R53 332 ; R53 += R55; if R53 <= R54 then begin PC := 332; R56 := R53 end
	338	[8098]	GETGLOBAL	R57 K8 ; R57 := 0x0032441c
	339	[8098]	GETTABLE 	R57 R57 K10 ; R57 := R57["HelminthUpgradeIndexCache"]
	340	[8098]	TEST     	R57 1 ; if R57 then PC := 345
	341	[8098]	JMP      	345 ; PC := 345
	342	[8099]	GETGLOBAL	R57 K8 ; R57 := 0x0032441c
	343	[8099]	NEWTABLE 	R58 0 0 ; R58 := {}
	344	[8099]	SETTABLE 	R57 K10 R58 ; R57["HelminthUpgradeIndexCache"] := R58
	345	[8101]	GETGLOBAL	R57 K8 ; R57 := 0x0032441c
	346	[8101]	GETTABLE 	R57 R57 K10 ; R57 := R57["HelminthUpgradeIndexCache"]
	347	[8101]	SETTABLE 	R57 R0 R7 ; R57[R0] := R7
	348	[8104]	GETGLOBAL	R57 K59 ; R57 := 0xffd438ab
	349	[8104]	CALL     	R57 1 2 ; R57 := R57()
	350	[8106]	GETGLOBAL	R58 K60 ; R58 := 0x4f6851ff
	351	[8106]	GETGLOBAL	R59 K61 ; R59 := 0x0997dbe6
	352	[8106]	MOVE     	R60 R7 ; R60 := R7
	353	[8106]	CALL     	R59 2 0 ; R59,... := R59(R60)
	354	[8106]	CALL     	R58 0 1 ; R58(R59,...)
	355	[8107]	GETGLOBAL	R58 K62 ; R58 := 0x0c5e62f9
	356	[8107]	LOADK    	R59 := 1.000000
	357	[8107]	LOADK    	R60 K63 ; R60 := 1000000.000000
	358	[8107]	CALL     	R58 3 2 ; R58 := R58(R59,R60)
	359	[8109]	GETGLOBAL	R59 K64 ; R59 := 0xf1f5e051
	360	[8109]	MOVE     	R60 R0 ; R60 := R0
	361	[8109]	CALL     	R59 2 2 ; R59 := R59(R60)
	362	[8110]	GETGLOBAL	R60 K61 ; R60 := 0x0997dbe6
	363	[8110]	ADD      	R61 R59 R58 ; R61 := R59 + R58
	364	[8110]	CALL     	R60 2 2 ; R60 := R60(R61)
	365	[8112]	EQ       	1 R7 R6 ; if R7 == R6 then PC := 383
	366	[8112]	JMP      	383 ; PC := 383
	367	[8113]	GETGLOBAL	R61 K60 ; R61 := 0x4f6851ff
	368	[8113]	MOVE     	R62 R60 ; R62 := R60
	369	[8113]	CALL     	R61 2 1 ; R61(R62)
	370	[8114]	GETUPVAL 	R61 U1 ; R61 := U1
	371	[8114]	MOVE     	R62 R15 ; R62 := R15
	372	[8114]	MOVE     	R63 R14 ; R63 := R14
	373	[8114]	CALL     	R61 3 2 ; R61 := R61(R62,R63)
	374	[8114]	MOVE     	R16 R61 ; R16 := R61
	375	[8115]	GETGLOBAL	R61 K16 ; R61 := 0x25d99d89
	376	[8115]	SELF     	R61 R61 K17 ; R62 := R61; R61 := R61[0x0805c9cf]
	377	[8115]	MOVE     	R63 R16 ; R63 := R16
	378	[8115]	MOVE     	R64 R7 ; R64 := R7
	379	[8115]	OP_LOADBOOL	R65 0 0 ; R65 := false
	380	[8115]	LOADK    	R66 K18 ; R66 := "OnHelminthOfferingsUploaded"
	381	[8115]	CALL     	R61 6 1 ; R61(R62,R63,R64,R65,R66)
	382	[8115]	JMP      	387 ; PC := 387
	383	[8117]	GETGLOBAL	R61 K65 ; R61 := 0x84883f05
	384	[8117]	MOVE     	R62 R60 ; R62 := R60
	385	[8117]	MOVE     	R63 R14 ; R63 := R14
	386	[8117]	CALL     	R61 3 1 ; R61(R62,R63)
	387	[8120]	NEWTABLE 	R61 0 0 ; R61 := {}
	388	[8121]	LOADK    	R62 := 1.000000
	389	[8121]	LEN      	R63 R16 ; R63 := # R16
	390	[8121]	LOADK    	R64 := 1.000000
	391	[8121]	FORPREP  	R62 424 ; R62 -= R64; PC := 424
	392	[8122]	GETTABLE 	R66 R16 R65 ; R66 := R16[R65]
	393	[8122]	SELF     	R66 R66 K34 ; R67 := R66; R66 := R66[0xed4e0128]
	394	[8122]	CALL     	R66 2 2 ; R66 := R66(R67)
	395	[8123]	GETGLOBAL	R67 K35 ; R67 := 0x7f5022cf
	396	[8123]	GETTABLE 	R67 R67 K36 ; R67 := R67[0xa5c556b9]
	397	[8123]	MOVE     	R68 R66 ; R68 := R66
	398	[8123]	LOADK    	R69 K66 ; R69 := "NovaBaseSuit"
	399	[8123]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	400	[8123]	TEST     	R67 0 ; if not R67 then PC := 410
	401	[8123]	JMP      	410 ; PC := 410
	402	[8124]	GETGLOBAL	R67 K35 ; R67 := 0x7f5022cf
	403	[8124]	GETTABLE 	R67 R67 K41 ; R67 := R67[0x66edf04f]
	404	[8124]	MOVE     	R68 R66 ; R68 := R66
	405	[8124]	LOADK    	R69 K66 ; R69 := "NovaBaseSuit"
	406	[8124]	LOADK    	R70 K67 ; R70 := "Anti"
	407	[8124]	CALL     	R67 4 2 ; R67 := R67(R68,R69,R70)
	408	[8124]	MOVE     	R66 R67 ; R66 := R67
	409	[8124]	JMP      	417 ; PC := 417
	410	[8126]	GETGLOBAL	R67 K35 ; R67 := 0x7f5022cf
	411	[8126]	GETTABLE 	R67 R67 K41 ; R67 := R67[0x66edf04f]
	412	[8126]	MOVE     	R68 R66 ; R68 := R66
	413	[8126]	LOADK    	R69 K49 ; R69 := "BaseSuit"
	414	[8126]	LOADK    	R70 K43 ; R70 := ""
	415	[8126]	CALL     	R67 4 2 ; R67 := R67(R68,R69,R70)
	416	[8126]	MOVE     	R66 R67 ; R66 := R67
	417	[8128]	GETGLOBAL	R67 K13 ; R67 := 0x33bdd652
	418	[8128]	GETTABLE 	R67 R67 K14 ; R67 := R67[0x23d5322f]
	419	[8128]	MOVE     	R68 R61 ; R68 := R61
	420	[8128]	GETGLOBAL	R69 K26 ; R69 := 0x7ed0a956
	421	[8128]	MOVE     	R70 R66 ; R70 := R66
	422	[8128]	CALL     	R69 2 0 ; R69,... := R69(R70)
	423	[8128]	CALL     	R67 0 1 ; R67(R68,...)
	424	[8121]	FORLOOP  	R62 392 ; R62 += R64; if R62 <= R63 then begin PC := 392; R65 := R62 end
	425	[8132]	SELF     	R67 R1 K68 ; R68 := R1; R67 := R1[0x29056938]
	426	[8132]	CALL     	R67 2 2 ; R67 := R67(R68)
	427	[8133]	LOADK    	R68 := 1.000000
	428	[8133]	LEN      	R69 R16 ; R69 := # R16
	429	[8133]	LOADK    	R70 := 1.000000
	430	[8133]	FORPREP  	R68 483 ; R68 -= R70; PC := 483
	431	[8134]	LOADK    	R72 := 1.000000
	432	[8134]	LEN      	R73 R67 ; R73 := # R67
	433	[8134]	LOADK    	R74 := 1.000000
	434	[8134]	FORPREP  	R72 482 ; R72 -= R74; PC := 482
	435	[8135]	GETTABLE 	R76 R16 R71 ; R76 := R16[R71]
	436	[8135]	GETTABLE 	R77 R67 R75 ; R77 := R67[R75]
	437	[8135]	GETTABLE 	R77 R77 K52 ; R77 := R77["mItemType"]
	438	[8135]	EQ       	0 R76 R77 ; if R76 ~= R77 then PC := 482
	439	[8135]	JMP      	482 ; PC := 482
	440	[8136]	LOADK    	R76 := 1.000000
	441	[8136]	GETTABLE 	R77 R67 R75 ; R77 := R67[R75]
	442	[8136]	GETTABLE 	R77 R77 K69 ; R77 := R77["mInvalidUpgradeTypes"]
	443	[8136]	LEN      	R77 R77 ; R77 := # R77
	444	[8136]	LOADK    	R78 := 1.000000
	445	[8136]	FORPREP  	R76 480 ; R76 -= R78; PC := 480
	446	[8138]	LEN      	R80 R50 ; R80 := # R50
	447	[8138]	LOADK    	R81 := 1.000000
	448	[8138]	LOADK    	R82 := -1.000000
	449	[8138]	FORPREP  	R80 462 ; R80 -= R82; PC := 462
	450	[8139]	GETTABLE 	R84 R67 R75 ; R84 := R67[R75]
	451	[8139]	GETTABLE 	R84 R84 K69 ; R84 := R84["mInvalidUpgradeTypes"]
	452	[8139]	GETTABLE 	R84 R84 R79 ; R84 := R84[R79]
	453	[8139]	GETTABLE 	R85 R50 R83 ; R85 := R50[R83]
	454	[8139]	GETTABLE 	R85 R85 K52 ; R85 := R85["mItemType"]
	455	[8139]	EQ       	0 R84 R85 ; if R84 ~= R85 then PC := 462
	456	[8139]	JMP      	462 ; PC := 462
	457	[8140]	GETGLOBAL	R84 K13 ; R84 := 0x33bdd652
	458	[8140]	GETTABLE 	R84 R84 K70 ; R84 := R84[0x9c1f3b5a]
	459	[8140]	MOVE     	R85 R50 ; R85 := R50
	460	[8140]	MOVE     	R86 R83 ; R86 := R83
	461	[8140]	CALL     	R84 3 1 ; R84(R85,R86)
	462	[8138]	FORLOOP  	R80 450 ; R80 += R82; if R80 <= R81 then begin PC := 450; R83 := R80 end
	463	[8144]	LEN      	R84 R51 ; R84 := # R51
	464	[8144]	LOADK    	R85 := 1.000000
	465	[8144]	LOADK    	R86 := -1.000000
	466	[8144]	FORPREP  	R84 479 ; R84 -= R86; PC := 479
	467	[8145]	GETTABLE 	R88 R67 R75 ; R88 := R67[R75]
	468	[8145]	GETTABLE 	R88 R88 K69 ; R88 := R88["mInvalidUpgradeTypes"]
	469	[8145]	GETTABLE 	R88 R88 R79 ; R88 := R88[R79]
	470	[8145]	GETTABLE 	R89 R51 R87 ; R89 := R51[R87]
	471	[8145]	GETTABLE 	R89 R89 K52 ; R89 := R89["mItemType"]
	472	[8145]	EQ       	0 R88 R89 ; if R88 ~= R89 then PC := 479
	473	[8145]	JMP      	479 ; PC := 479
	474	[8146]	GETGLOBAL	R88 K13 ; R88 := 0x33bdd652
	475	[8146]	GETTABLE 	R88 R88 K70 ; R88 := R88[0x9c1f3b5a]
	476	[8146]	MOVE     	R89 R51 ; R89 := R51
	477	[8146]	MOVE     	R90 R87 ; R90 := R87
	478	[8146]	CALL     	R88 3 1 ; R88(R89,R90)
	479	[8144]	FORLOOP  	R84 467 ; R84 += R86; if R84 <= R85 then begin PC := 467; R87 := R84 end
	480	[8136]	FORLOOP  	R76 446 ; R76 += R78; if R76 <= R77 then begin PC := 446; R79 := R76 end
	481	[8152]	JMP      	483 ; PC := 483
	482	[8134]	FORLOOP  	R72 435 ; R72 += R74; if R72 <= R73 then begin PC := 435; R75 := R72 end
	483	[8133]	FORLOOP  	R68 431 ; R68 += R70; if R68 <= R69 then begin PC := 431; R71 := R68 end
	484	[8157]	GETUPVAL 	R88 U1 ; R88 := U1
	485	[8157]	MOVE     	R89 R50 ; R89 := R50
	486	[8157]	MOVE     	R90 R14 ; R90 := R14
	487	[8157]	CALL     	R88 3 2 ; R88 := R88(R89,R90)
	488	[8158]	GETUPVAL 	R89 U1 ; R89 := U1
	489	[8158]	MOVE     	R90 R51 ; R90 := R51
	490	[8158]	MOVE     	R91 R14 ; R91 := R14
	491	[8158]	CALL     	R89 3 2 ; R89 := R89(R90,R91)
	492	[8161]	NEWTABLE 	R90 0 0 ; R90 := {}
	493	[8162]	NEWTABLE 	R91 0 0 ; R91 := {}
	494	[8163]	SELF     	R92 R1 K71 ; R93 := R1; R92 := R1[0x9b14b099]
	495	[8163]	CALL     	R92 2 2 ; R92 := R92(R93)
	496	[8164]	SELF     	R93 R1 K72 ; R94 := R1; R93 := R1[0x1b6f1347]
	497	[8164]	CALL     	R93 2 2 ; R93 := R93(R94)
	498	[8165]	SELF     	R94 R1 K73 ; R95 := R1; R94 := R1[0x1d6f0df7]
	499	[8165]	CALL     	R94 2 2 ; R94 := R94(R95)
	500	[8166]	SELF     	R95 R1 K74 ; R96 := R1; R95 := R1[0xd1041755]
	501	[8166]	CALL     	R95 2 2 ; R95 := R95(R96)
	502	[8167]	SELF     	R96 R1 K75 ; R97 := R1; R96 := R1[0x95324e22]
	503	[8167]	CALL     	R96 2 2 ; R96 := R96(R97)
	504	[8168]	LOADK    	R97 := 1.000000
	505	[8168]	MOVE     	R98 R14 ; R98 := R14
	506	[8168]	LOADK    	R99 := 1.000000
	507	[8168]	FORPREP  	R97 591 ; R97 -= R99; PC := 591
	508	[8169]	GETGLOBAL	R101 K76 ; R101 := 0xdd6e4cf8
	509	[8169]	MOVE     	R102 R92 ; R102 := R92
	510	[8169]	MOVE     	R103 R93 ; R103 := R93
	511	[8169]	CALL     	R101 3 2 ; R101 := R101(R102,R103)
	512	[8170]	NEWTABLE 	R102 0 0 ; R102 := {}
	513	[8171]	NEWTABLE 	R103 0 0 ; R103 := {}
	514	[8173]	LOADK    	R104 := 1.000000
	515	[8173]	MOVE     	R105 R96 ; R105 := R96
	516	[8173]	LOADK    	R106 := 1.000000
	517	[8173]	FORPREP  	R104 568 ; R104 -= R106; PC := 568
	518	[8174]	GETGLOBAL	R108 K62 ; R108 := 0x0c5e62f9
	519	[8174]	LOADK    	R109 := 1.000000
	520	[8174]	LEN      	R110 R52 ; R110 := # R52
	521	[8174]	CALL     	R108 3 2 ; R108 := R108(R109,R110)
	522	[8175]	GETTABLE 	R109 R52 R108 ; R109 := R52[R108]
	523	[8176]	GETGLOBAL	R110 K13 ; R110 := 0x33bdd652
	524	[8176]	GETTABLE 	R110 R110 K70 ; R110 := R110[0x9c1f3b5a]
	525	[8176]	MOVE     	R111 R52 ; R111 := R52
	526	[8176]	MOVE     	R112 R108 ; R112 := R108
	527	[8176]	CALL     	R110 3 1 ; R110(R111,R112)
	528	[8178]	GETGLOBAL	R110 K6 ; R110 := 0x5bced4c4
	529	[8178]	GETTABLE 	R110 R110 K77 ; R110 := R110[0xac1b386a]
	530	[8178]	MOVE     	R111 R95 ; R111 := R95
	531	[8178]	SUB      	R112 R96 R107 ; R112 := R96 - R107
	532	[8178]	MUL      	R112 R94 R112 ; R112 := R94 * R112
	533	[8178]	SUB      	R112 R101 R112 ; R112 := R101 - R112
	534	[8178]	CALL     	R110 3 2 ; R110 := R110(R111,R112)
	535	[8179]	GETGLOBAL	R111 K6 ; R111 := 0x5bced4c4
	536	[8179]	GETTABLE 	R111 R111 K78 ; R111 := R111[0xb62ecfe0]
	537	[8179]	MOVE     	R112 R94 ; R112 := R94
	538	[8179]	SUB      	R113 R96 R107 ; R113 := R96 - R107
	539	[8179]	MUL      	R113 R95 R113 ; R113 := R95 * R113
	540	[8179]	SUB      	R113 R101 R113 ; R113 := R101 - R113
	541	[8179]	CALL     	R111 3 2 ; R111 := R111(R112,R113)
	542	[8180]	GETGLOBAL	R112 K6 ; R112 := 0x5bced4c4
	543	[8180]	GETTABLE 	R112 R112 K78 ; R112 := R112[0xb62ecfe0]
	544	[8180]	LOADK    	R113 := 0.000000
	545	[8180]	GETGLOBAL	R114 K76 ; R114 := 0xdd6e4cf8
	546	[8180]	MOVE     	R115 R111 ; R115 := R111
	547	[8180]	MOVE     	R116 R110 ; R116 := R110
	548	[8180]	CALL     	R114 3 0 ; R114,... := R114(R115,R116)
	549	[8180]	CALL     	R112 0 2 ; R112 := R112(R113,...)
	550	[8181]	SUB      	R101 R101 R112 ; R101 := R101 - R112
	551	[8182]	GETUPVAL 	R113 U2 ; R113 := U2
	552	[8182]	GETTABLE 	R113 R113 K79 ; R113 := R113[0x74a11ec6]
	553	[8182]	MOVE     	R114 R112 ; R114 := R112
	554	[8182]	LOADK    	R115 := 2.000000
	555	[8182]	CALL     	R113 3 2 ; R113 := R113(R114,R115)
	556	[8182]	MOVE     	R112 R113 ; R112 := R113
	557	[8184]	GETGLOBAL	R113 K13 ; R113 := 0x33bdd652
	558	[8184]	GETTABLE 	R113 R113 K14 ; R113 := R113[0x23d5322f]
	559	[8184]	MOVE     	R114 R102 ; R114 := R102
	560	[8184]	SELF     	R115 R109 K80 ; R116 := R109; R115 := R109[0xf278f8a1]
	561	[8184]	CALL     	R115 2 0 ; R115,... := R115(R116)
	562	[8184]	CALL     	R113 0 1 ; R113(R114,...)
	563	[8185]	GETGLOBAL	R113 K13 ; R113 := 0x33bdd652
	564	[8185]	GETTABLE 	R113 R113 K14 ; R113 := R113[0x23d5322f]
	565	[8185]	MOVE     	R114 R103 ; R114 := R103
	566	[8185]	MOVE     	R115 R112 ; R115 := R112
	567	[8185]	CALL     	R113 3 1 ; R113(R114,R115)
	568	[8173]	FORLOOP  	R104 518 ; R104 += R106; if R104 <= R105 then begin PC := 518; R107 := R104 end
	569	[8188]	GETGLOBAL	R113 K13 ; R113 := 0x33bdd652
	570	[8188]	GETTABLE 	R113 R113 K14 ; R113 := R113[0x23d5322f]
	571	[8188]	MOVE     	R114 R90 ; R114 := R90
	572	[8188]	MOVE     	R115 R102 ; R115 := R102
	573	[8188]	CALL     	R113 3 1 ; R113(R114,R115)
	574	[8189]	GETGLOBAL	R113 K13 ; R113 := 0x33bdd652
	575	[8189]	GETTABLE 	R113 R113 K14 ; R113 := R113[0x23d5322f]
	576	[8189]	MOVE     	R114 R91 ; R114 := R91
	577	[8189]	MOVE     	R115 R103 ; R115 := R103
	578	[8189]	CALL     	R113 3 1 ; R113(R114,R115)
	579	[8191]	NEWTABLE 	R113 0 0 ; R113 := {}
	580	[8191]	MOVE     	R52 R113 ; R52 := R113
	581	[8192]	LOADK    	R113 := 1.000000
	582	[8192]	LEN      	R114 R2 ; R114 := # R2
	583	[8192]	LOADK    	R115 := 1.000000
	584	[8192]	FORPREP  	R113 590 ; R113 -= R115; PC := 590
	585	[8193]	GETGLOBAL	R117 K13 ; R117 := 0x33bdd652
	586	[8193]	GETTABLE 	R117 R117 K14 ; R117 := R117[0x23d5322f]
	587	[8193]	MOVE     	R118 R52 ; R118 := R52
	588	[8193]	GETTABLE 	R119 R2 R116 ; R119 := R2[R116]
	589	[8193]	CALL     	R117 3 1 ; R117(R118,R119)
	590	[8192]	FORLOOP  	R113 585 ; R113 += R115; if R113 <= R114 then begin PC := 585; R116 := R113 end
	591	[8168]	FORLOOP  	R97 508 ; R97 += R99; if R97 <= R98 then begin PC := 508; R100 := R97 end
	592	[8197]	GETGLOBAL	R117 K60 ; R117 := 0x4f6851ff
	593	[8197]	MOVE     	R118 R57 ; R118 := R57
	594	[8197]	CALL     	R117 2 1 ; R117(R118)
	595	[8199]	GETGLOBAL	R117 K8 ; R117 := 0x0032441c
	596	[8199]	GETTABLE 	R117 R117 K9 ; R117 := R117["HelminthUpgradeOfferingCache"]
	597	[8199]	TEST     	R117 1 ; if R117 then PC := 602
	598	[8199]	JMP      	602 ; PC := 602
	599	[8200]	GETGLOBAL	R117 K8 ; R117 := 0x0032441c
	600	[8200]	NEWTABLE 	R118 0 0 ; R118 := {}
	601	[8200]	SETTABLE 	R117 K9 R118 ; R117["HelminthUpgradeOfferingCache"] := R118
	602	[8202]	GETGLOBAL	R117 K8 ; R117 := 0x0032441c
	603	[8202]	GETTABLE 	R117 R117 K9 ; R117 := R117["HelminthUpgradeOfferingCache"]
	604	[8202]	NEWTABLE 	R118 0 0 ; R118 := {}
	605	[8202]	SETTABLE 	R117 R0 R118 ; R117[R0] := R118
	606	[8204]	LOADK    	R117 := 1.000000
	607	[8204]	MOVE     	R118 R14 ; R118 := R14
	608	[8204]	LOADK    	R119 := 1.000000
	609	[8204]	FORPREP  	R117 629 ; R117 -= R119; PC := 629
	610	[8205]	GETGLOBAL	R121 K13 ; R121 := 0x33bdd652
	611	[8205]	GETTABLE 	R121 R121 K14 ; R121 := R121[0x23d5322f]
	612	[8205]	GETGLOBAL	R122 K8 ; R122 := 0x0032441c
	613	[8205]	GETTABLE 	R122 R122 K9 ; R122 := R122["HelminthUpgradeOfferingCache"]
	614	[8205]	GETTABLE 	R122 R122 R0 ; R122 := R122[R0]
	615	[8205]	NEWTABLE 	R123 0 6 ; R123 := {}
	616	[8205]	GETTABLE 	R124 R16 R120 ; R124 := R16[R120]
	617	[8205]	SETTABLE 	R123 K15 R124 ; R123["baseSuitType"] := R124
	618	[8205]	GETTABLE 	R124 R61 R120 ; R124 := R61[R120]
	619	[8205]	SETTABLE 	R123 K81 R124 ; R123["suitType"] := R124
	620	[8205]	GETTABLE 	R124 R88 R120 ; R124 := R88[R120]
	621	[8205]	SETTABLE 	R123 K82 R124 ; R123["offensiveUpgradeType"] := R124
	622	[8205]	GETTABLE 	R124 R89 R120 ; R124 := R89[R120]
	623	[8205]	SETTABLE 	R123 K83 R124 ; R123["defensiveUpgradeType"] := R124
	624	[8205]	GETTABLE 	R124 R90 R120 ; R124 := R90[R120]
	625	[8205]	SETTABLE 	R123 K84 R124 ; R123["resourceTypes"] := R124
	626	[8205]	GETTABLE 	R124 R91 R120 ; R124 := R91[R120]
	627	[8205]	SETTABLE 	R123 K85 R124 ; R123["resourceCosts"] := R124
	628	[8205]	CALL     	R121 3 1 ; R121(R122,R123)
	629	[8204]	FORLOOP  	R117 610 ; R117 += R119; if R117 <= R118 then begin PC := 610; R120 := R117 end
	630	[8208]	GETGLOBAL	R121 K21 ; R121 := 0x3d106989
	631	[8208]	LOADK    	R122 K86 ; R122 := "Helminth upgrade: generated offers for "
	632	[8208]	MOVE     	R123 R0 ; R123 := R0
	633	[8208]	LOADK    	R124 K87 ; R124 := " with cycle index "
	634	[8208]	MOVE     	R125 R7 ; R125 := R7
	635	[8208]	CONCAT   	R122 R122 R125 ; R122 := R122 .. R123 .. R124 .. R125
	636	[8208]	CALL     	R121 2 1 ; R121(R122)
	637	[8209]	GETGLOBAL	R121 K8 ; R121 := 0x0032441c
	638	[8209]	GETTABLE 	R121 R121 K9 ; R121 := R121["HelminthUpgradeOfferingCache"]
	639	[8209]	GETTABLE 	R121 R121 R0 ; R121 := R121[R0]
	640	[8209]	RETURN   	R121 2 ; return R121 
	641	[8210]	RETURN   	R0 1 ; return 

function #380 <?:8212,8310> (365 instructions, 1460 bytes at 00000160C684E490)
3 params, 44 slots, 2 upvalues, 0 locals, 72 constants, 0 functions
	1	[8214]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	2	[8214]	GETTABLE 	R3 R3 K1 ; R3 := R3["EliteAlertTypeNameCache"]
	3	[8214]	TEST     	R3 1 ; if R3 then PC := 202
	4	[8214]	JMP      	202 ; PC := 202
	5	[8215]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	6	[8215]	NEWTABLE 	R4 0 0 ; R4 := {}
	7	[8215]	SETTABLE 	R3 K1 R4 ; R3["EliteAlertTypeNameCache"] := R4
	8	[8216]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	9	[8216]	GETTABLE 	R3 R3 K1 ; R3 := R3["EliteAlertTypeNameCache"]
	10	[8216]	NEWTABLE 	R4 0 0 ; R4 := {}
	11	[8216]	SETTABLE 	R3 K2 R4 ; R3["suits"] := R4
	12	[8217]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	13	[8217]	GETTABLE 	R3 R3 K1 ; R3 := R3["EliteAlertTypeNameCache"]
	14	[8217]	NEWTABLE 	R4 0 0 ; R4 := {}
	15	[8217]	SETTABLE 	R3 K3 R4 ; R3["weapons"] := R4
	16	[8219]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	17	[8219]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xa1c390fe]
	18	[8219]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[8220]	GETGLOBAL	R4 K6 ; R4 := 0x7b998233
	20	[8220]	MOVE     	R5 R3 ; R5 := R3
	21	[8220]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[8220]	TEST     	R4 0 ; if not R4 then PC := 38
	23	[8220]	JMP      	38 ; PC := 38
	24	[8222]	LOADK    	R4 K7 ; R4 := ""
	25	[8222]	GETGLOBAL	R5 K8 ; R5 := 0x7ed0a956
	26	[8222]	CALL     	R5 1 2 ; R5 := R5()
	27	[8222]	GETGLOBAL	R6 K8 ; R6 := 0x7ed0a956
	28	[8222]	CALL     	R6 1 2 ; R6 := R6()
	29	[8222]	NEWTABLE 	R7 0 0 ; R7 := {}
	30	[8222]	LOADK    	R8 K7 ; R8 := ""
	31	[8222]	GETGLOBAL	R9 K8 ; R9 := 0x7ed0a956
	32	[8222]	CALL     	R9 1 2 ; R9 := R9()
	33	[8222]	GETGLOBAL	R10 K8 ; R10 := 0x7ed0a956
	34	[8222]	CALL     	R10 1 2 ; R10 := R10()
	35	[8222]	NEWTABLE 	R11 0 0 ; R11 := {}
	36	[8222]	LOADK    	R12 := 0.000000
	37	[8222]	RETURN   	R4 10 ; return R4, R5, R6, R7, R8, R9, R10, R11, R12 
	38	[8225]	OP_LOADBOOL	R4 1 0 ; R4 := true
	39	[8227]	SELF     	R5 R3 K9 ; R6 := R3; R5 := R3[0xe9cbffa8]
	40	[8227]	GETGLOBAL	R7 K8 ; R7 := 0x7ed0a956
	41	[8227]	LOADK    	R8 K10 ; R8 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
	42	[8227]	CALL     	R7 2 2 ; R7 := R7(R8)
	43	[8227]	MOVE     	R8 R4 ; R8 := R4
	44	[8227]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	45	[8228]	GETGLOBAL	R6 K11 ; R6 := 0xcfc01047
	46	[8228]	MOVE     	R7 R5 ; R7 := R5
	47	[8228]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	48	[8228]	JMP      	94 ; PC := 94
	49	[8229]	SELF     	R11 R10 K12 ; R12 := R10; R11 := R10[0xfe9eb1a5]
	50	[8229]	CALL     	R11 2 2 ; R11 := R11(R12)
	51	[8229]	EQ       	0 R11 K14 ; if R11 ~= 3.000000 then PC := 94
	52	[8229]	JMP      	94 ; PC := 94
	53	[8229]	SELF     	R11 R10 K15 ; R12 := R10; R11 := R10[0xba7bce8f]
	54	[8229]	CALL     	R11 2 2 ; R11 := R11(R12)
	55	[8229]	TEST     	R11 1 ; if R11 then PC := 94
	56	[8229]	JMP      	94 ; PC := 94
	57	[8230]	SELF     	R11 R10 K16 ; R12 := R10; R11 := R10[0xed4e0128]
	58	[8230]	CALL     	R11 2 2 ; R11 := R11(R12)
	59	[8231]	GETGLOBAL	R12 K17 ; R12 := 0x7f5022cf
	60	[8231]	GETTABLE 	R12 R12 K18 ; R12 := R12[0xa5c556b9]
	61	[8231]	MOVE     	R13 R11 ; R13 := R11
	62	[8231]	LOADK    	R14 K19 ; R14 := "Prime"
	63	[8231]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	64	[8231]	TEST     	R12 1 ; if R12 then PC := 94
	65	[8231]	JMP      	94 ; PC := 94
	66	[8231]	GETGLOBAL	R12 K17 ; R12 := 0x7f5022cf
	67	[8231]	GETTABLE 	R12 R12 K18 ; R12 := R12[0xa5c556b9]
	68	[8231]	MOVE     	R13 R11 ; R13 := R11
	69	[8231]	LOADK    	R14 K20 ; R14 := "Operator"
	70	[8231]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	71	[8231]	TEST     	R12 1 ; if R12 then PC := 94
	72	[8231]	JMP      	94 ; PC := 94
	73	[8231]	GETGLOBAL	R12 K17 ; R12 := 0x7f5022cf
	74	[8231]	GETTABLE 	R12 R12 K18 ; R12 := R12[0xa5c556b9]
	75	[8231]	MOVE     	R13 R11 ; R13 := R11
	76	[8231]	LOADK    	R14 K21 ; R14 := "Umbra"
	77	[8231]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	78	[8231]	TEST     	R12 1 ; if R12 then PC := 94
	79	[8231]	JMP      	94 ; PC := 94
	80	[8231]	GETGLOBAL	R12 K17 ; R12 := 0x7f5022cf
	81	[8231]	GETTABLE 	R12 R12 K18 ; R12 := R12[0xa5c556b9]
	82	[8231]	MOVE     	R13 R11 ; R13 := R11
	83	[8231]	LOADK    	R14 K22 ; R14 := "PlayerPowerSuit"
	84	[8231]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	85	[8231]	TEST     	R12 1 ; if R12 then PC := 94
	86	[8231]	JMP      	94 ; PC := 94
	87	[8232]	GETGLOBAL	R12 K23 ; R12 := 0x33bdd652
	88	[8232]	GETTABLE 	R12 R12 K24 ; R12 := R12[0x23d5322f]
	89	[8232]	GETGLOBAL	R13 K0 ; R13 := 0x0032441c
	90	[8232]	GETTABLE 	R13 R13 K1 ; R13 := R13["EliteAlertTypeNameCache"]
	91	[8232]	GETTABLE 	R13 R13 K2 ; R13 := R13["suits"]
	92	[8232]	MOVE     	R14 R11 ; R14 := R11
	93	[8232]	CALL     	R12 3 1 ; R12(R13,R14)
	94	[8228]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 49; R8 := R9 end
	95	[8235]	JMP      	49 ; PC := 49
	96	[8240]	SELF     	R12 R3 K9 ; R13 := R3; R12 := R3[0xe9cbffa8]
	97	[8240]	GETGLOBAL	R14 K25 ; R14 := gLotusWeaponType
	98	[8240]	MOVE     	R15 R4 ; R15 := R4
	99	[8240]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	100	[8241]	GETGLOBAL	R13 K11 ; R13 := 0xcfc01047
	101	[8241]	MOVE     	R14 R12 ; R14 := R12
	102	[8241]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	103	[8241]	JMP      	200 ; PC := 200
	104	[8242]	SELF     	R18 R17 K12 ; R19 := R17; R18 := R17[0xfe9eb1a5]
	105	[8242]	CALL     	R18 2 2 ; R18 := R18(R19)
	106	[8243]	EQ       	1 R18 K26 ; if R18 == 0.000000 then PC := 112
	107	[8243]	JMP      	112 ; PC := 112
	108	[8243]	EQ       	1 R18 K27 ; if R18 == 1.000000 then PC := 112
	109	[8243]	JMP      	112 ; PC := 112
	110	[8243]	EQ       	0 R18 K28 ; if R18 ~= 5.000000 then PC := 200
	111	[8243]	JMP      	200 ; PC := 200
	112	[8244]	SELF     	R19 R17 K29 ; R20 := R17; R19 := R17[0x5ba460ac]
	113	[8244]	CALL     	R19 2 2 ; R19 := R19(R20)
	114	[8244]	SELF     	R19 R19 K30 ; R20 := R19; R19 := R19[0x56c01834]
	115	[8244]	CALL     	R19 2 2 ; R19 := R19(R20)
	116	[8244]	TEST     	R19 0 ; if not R19 then PC := 200
	117	[8244]	JMP      	200 ; PC := 200
	118	[8245]	SELF     	R19 R17 K31 ; R20 := R17; R19 := R17[0x8170d7d9]
	119	[8245]	CALL     	R19 2 2 ; R19 := R19(R20)
	120	[8245]	TEST     	R19 0 ; if not R19 then PC := 200
	121	[8245]	JMP      	200 ; PC := 200
	122	[8246]	SELF     	R19 R17 K15 ; R20 := R17; R19 := R17[0xba7bce8f]
	123	[8246]	CALL     	R19 2 2 ; R19 := R19(R20)
	124	[8246]	TEST     	R19 1 ; if R19 then PC := 200
	125	[8246]	JMP      	200 ; PC := 200
	126	[8248]	SELF     	R19 R17 K16 ; R20 := R17; R19 := R17[0xed4e0128]
	127	[8248]	CALL     	R19 2 2 ; R19 := R19(R20)
	128	[8251]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	129	[8251]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	130	[8251]	MOVE     	R21 R19 ; R21 := R19
	131	[8251]	LOADK    	R22 K32 ; R22 := "MK1"
	132	[8251]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	133	[8251]	TEST     	R20 1 ; if R20 then PC := 200
	134	[8251]	JMP      	200 ; PC := 200
	135	[8252]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	136	[8252]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	137	[8252]	MOVE     	R21 R19 ; R21 := R19
	138	[8252]	LOADK    	R22 K33 ; R22 := "StartingRifle"
	139	[8252]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	140	[8252]	TEST     	R20 1 ; if R20 then PC := 200
	141	[8252]	JMP      	200 ; PC := 200
	142	[8258]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	143	[8258]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	144	[8258]	MOVE     	R21 R19 ; R21 := R19
	145	[8258]	LOADK    	R22 K19 ; R22 := "Prime"
	146	[8258]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	147	[8258]	TEST     	R20 1 ; if R20 then PC := 200
	148	[8258]	JMP      	200 ; PC := 200
	149	[8259]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	150	[8259]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	151	[8259]	MOVE     	R21 R19 ; R21 := R19
	152	[8259]	LOADK    	R22 K34 ; R22 := "Wraith"
	153	[8259]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	154	[8259]	TEST     	R20 1 ; if R20 then PC := 200
	155	[8259]	JMP      	200 ; PC := 200
	156	[8260]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	157	[8260]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	158	[8260]	MOVE     	R21 R19 ; R21 := R19
	159	[8260]	LOADK    	R22 K35 ; R22 := "Vandal"
	160	[8260]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	161	[8260]	TEST     	R20 1 ; if R20 then PC := 200
	162	[8260]	JMP      	200 ; PC := 200
	163	[8261]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	164	[8261]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	165	[8261]	MOVE     	R21 R19 ; R21 := R19
	166	[8261]	LOADK    	R22 K36 ; R22 := "Prisma"
	167	[8261]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	168	[8261]	TEST     	R20 1 ; if R20 then PC := 200
	169	[8261]	JMP      	200 ; PC := 200
	170	[8262]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	171	[8262]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	172	[8262]	MOVE     	R21 R19 ; R21 := R19
	173	[8262]	LOADK    	R22 K37 ; R22 := "Syndicate"
	174	[8262]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	175	[8262]	TEST     	R20 1 ; if R20 then PC := 200
	176	[8262]	JMP      	200 ; PC := 200
	177	[8264]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	178	[8264]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	179	[8264]	MOVE     	R21 R19 ; R21 := R19
	180	[8264]	LOADK    	R22 K38 ; R22 := "Modular"
	181	[8264]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	182	[8264]	TEST     	R20 1 ; if R20 then PC := 200
	183	[8264]	JMP      	200 ; PC := 200
	184	[8265]	GETGLOBAL	R20 K17 ; R20 := 0x7f5022cf
	185	[8265]	GETTABLE 	R20 R20 K18 ; R20 := R20[0xa5c556b9]
	186	[8265]	MOVE     	R21 R19 ; R21 := R19
	187	[8265]	LOADK    	R22 K39 ; R22 := "Gear"
	188	[8265]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	189	[8265]	TEST     	R20 1 ; if R20 then PC := 200
	190	[8265]	JMP      	200 ; PC := 200
	191	[8267]	GETGLOBAL	R20 K23 ; R20 := 0x33bdd652
	192	[8267]	GETTABLE 	R20 R20 K24 ; R20 := R20[0x23d5322f]
	193	[8267]	GETGLOBAL	R21 K0 ; R21 := 0x0032441c
	194	[8267]	GETTABLE 	R21 R21 K1 ; R21 := R21["EliteAlertTypeNameCache"]
	195	[8267]	GETTABLE 	R21 R21 K3 ; R21 := R21["weapons"]
	196	[8267]	NEWTABLE 	R22 0 2 ; R22 := {}
	197	[8267]	SETTABLE 	R22 K40 R19 ; R22["itemName"] := R19
	198	[8267]	SETTABLE 	R22 K41 R18 ; R22["category"] := R18
	199	[8267]	CALL     	R20 3 1 ; R20(R21,R22)
	200	[8241]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 104; R15 := R16 end
	201	[8270]	JMP      	104 ; PC := 104
	202	[8275]	GETGLOBAL	R20 K0 ; R20 := 0x0032441c
	203	[8275]	GETTABLE 	R20 R20 K1 ; R20 := R20["EliteAlertTypeNameCache"]
	204	[8275]	GETTABLE 	R20 R20 K2 ; R20 := R20["suits"]
	205	[8275]	LEN      	R20 R20 ; R20 := # R20
	206	[8275]	EQ       	0 R20 K26 ; if R20 ~= 0.000000 then PC := 222
	207	[8275]	JMP      	222 ; PC := 222
	208	[8277]	LOADK    	R20 K7 ; R20 := ""
	209	[8277]	GETGLOBAL	R21 K8 ; R21 := 0x7ed0a956
	210	[8277]	CALL     	R21 1 2 ; R21 := R21()
	211	[8277]	GETGLOBAL	R22 K8 ; R22 := 0x7ed0a956
	212	[8277]	CALL     	R22 1 2 ; R22 := R22()
	213	[8277]	NEWTABLE 	R23 0 0 ; R23 := {}
	214	[8277]	LOADK    	R24 K7 ; R24 := ""
	215	[8277]	GETGLOBAL	R25 K8 ; R25 := 0x7ed0a956
	216	[8277]	CALL     	R25 1 2 ; R25 := R25()
	217	[8277]	GETGLOBAL	R26 K8 ; R26 := 0x7ed0a956
	218	[8277]	CALL     	R26 1 2 ; R26 := R26()
	219	[8277]	NEWTABLE 	R27 0 0 ; R27 := {}
	220	[8277]	LOADK    	R28 := 0.000000
	221	[8277]	RETURN   	R20 10 ; return R20, R21, R22, R23, R24, R25, R26, R27, R28 
	222	[8280]	GETGLOBAL	R20 K42 ; R20 := 0xffd438ab
	223	[8280]	CALL     	R20 1 2 ; R20 := R20()
	224	[8283]	GETUPVAL 	R21 U0 ; R21 := U0
	225	[8283]	GETTABLE 	R21 R21 K43 ; R21 := R21[0x06d055f9]
	226	[8283]	EQ       	0 R2 K44 ; if R2 ~= nil then PC := 229
	227	[8283]	JMP      	229 ; PC := 229
	228	[8283]	OP_LOADBOOL	R22 0 1 ; R22 := false; PC := 229
	229	[8283]	OP_LOADBOOL	R22 1 0 ; R22 := true
	230	[8283]	MOVE     	R23 R2 ; R23 := R2
	231	[8283]	GETGLOBAL	R24 K45 ; R24 := 0x5bced4c4
	232	[8283]	GETTABLE 	R24 R24 K46 ; R24 := R24[0x55f27c30]
	233	[8283]	GETUPVAL 	R25 U1 ; R25 := U1
	234	[8283]	CALL     	R25 1 2 ; R25 := R25()
	235	[8283]	GETGLOBAL	R26 K47 ; R26 := ELITE_ALERT_MISSION_INTERVAL
	236	[8283]	DIV      	R26 R26 K48 ; R26 := R26 / 60.000000
	237	[8283]	DIV      	R25 R25 R26 ; R25 := R25 / R26
	238	[8283]	CALL     	R24 2 0 ; R24,... := R24(R25)
	239	[8283]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	240	[8284]	GETGLOBAL	R22 K49 ; R22 := 0x4f6851ff
	241	[8284]	GETGLOBAL	R23 K50 ; R23 := 0x0997dbe6
	242	[8284]	MOVE     	R24 R21 ; R24 := R21
	243	[8284]	CALL     	R23 2 0 ; R23,... := R23(R24)
	244	[8284]	CALL     	R22 0 1 ; R22(R23,...)
	245	[8285]	GETGLOBAL	R22 K51 ; R22 := 0x0c5e62f9
	246	[8285]	LOADK    	R23 := 1.000000
	247	[8285]	LOADK    	R24 K52 ; R24 := 1000000.000000
	248	[8285]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	249	[8287]	GETGLOBAL	R23 K53 ; R23 := 0xf1f5e051
	250	[8287]	MOVE     	R24 R0 ; R24 := R0
	251	[8287]	CALL     	R23 2 2 ; R23 := R23(R24)
	252	[8288]	GETGLOBAL	R24 K49 ; R24 := 0x4f6851ff
	253	[8288]	GETGLOBAL	R25 K50 ; R25 := 0x0997dbe6
	254	[8288]	ADD      	R26 R23 R22 ; R26 := R23 + R22
	255	[8288]	CALL     	R25 2 0 ; R25,... := R25(R26)
	256	[8288]	CALL     	R24 0 1 ; R24(R25,...)
	257	[8290]	GETGLOBAL	R24 K0 ; R24 := 0x0032441c
	258	[8290]	GETTABLE 	R24 R24 K1 ; R24 := R24["EliteAlertTypeNameCache"]
	259	[8290]	GETTABLE 	R24 R24 K2 ; R24 := R24["suits"]
	260	[8290]	GETGLOBAL	R25 K51 ; R25 := 0x0c5e62f9
	261	[8290]	LOADK    	R26 := 1.000000
	262	[8290]	GETGLOBAL	R27 K0 ; R27 := 0x0032441c
	263	[8290]	GETTABLE 	R27 R27 K1 ; R27 := R27["EliteAlertTypeNameCache"]
	264	[8290]	GETTABLE 	R27 R27 K2 ; R27 := R27["suits"]
	265	[8290]	LEN      	R27 R27 ; R27 := # R27
	266	[8290]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	267	[8290]	GETTABLE 	R24 R24 R25 ; R24 := R24[R25]
	268	[8291]	GETGLOBAL	R25 K17 ; R25 := 0x7f5022cf
	269	[8291]	GETTABLE 	R25 R25 K54 ; R25 := R25[0x66edf04f]
	270	[8291]	MOVE     	R26 R24 ; R26 := R24
	271	[8291]	LOADK    	R27 K55 ; R27 := "/StoreItems"
	272	[8291]	LOADK    	R28 K7 ; R28 := ""
	273	[8291]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	274	[8292]	GETGLOBAL	R26 K8 ; R26 := 0x7ed0a956
	275	[8292]	MOVE     	R27 R25 ; R27 := R25
	276	[8292]	CALL     	R26 2 2 ; R26 := R26(R27)
	277	[8293]	GETGLOBAL	R27 K17 ; R27 := 0x7f5022cf
	278	[8293]	GETTABLE 	R27 R27 K18 ; R27 := R27[0xa5c556b9]
	279	[8293]	MOVE     	R28 R25 ; R28 := R25
	280	[8293]	LOADK    	R29 K56 ; R29 := "/Anti"
	281	[8293]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	282	[8293]	TEST     	R27 0 ; if not R27 then PC := 296
	283	[8293]	JMP      	296 ; PC := 296
	284	[8294]	GETGLOBAL	R27 K17 ; R27 := 0x7f5022cf
	285	[8294]	GETTABLE 	R27 R27 K57 ; R27 := R27[0x1a94c9cc]
	286	[8294]	MOVE     	R28 R25 ; R28 := R25
	287	[8294]	LOADK    	R29 := 1.000000
	288	[8294]	GETGLOBAL	R30 K17 ; R30 := 0x7f5022cf
	289	[8294]	GETTABLE 	R30 R30 K58 ; R30 := R30[0x41e2ae25]
	290	[8294]	MOVE     	R31 R25 ; R31 := R25
	291	[8294]	CALL     	R30 2 2 ; R30 := R30(R31)
	292	[8294]	SUB      	R30 R30 K59 ; R30 := R30 - 4.000000
	293	[8294]	CALL     	R27 4 2 ; R27 := R27(R28,R29,R30)
	294	[8294]	LOADK    	R28 K60 ; R28 := "Nova"
	295	[8294]	CONCAT   	R25 R27 R28 ; R25 := R27 .. R28
	296	[8296]	GETGLOBAL	R27 K8 ; R27 := 0x7ed0a956
	297	[8296]	MOVE     	R28 R25 ; R28 := R25
	298	[8296]	LOADK    	R29 K61 ; R29 := "BaseSuit"
	299	[8296]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	300	[8296]	CALL     	R27 2 2 ; R27 := R27(R28)
	301	[8297]	NEWTABLE 	R28 0 2 ; R28 := {}
	302	[8297]	SETTABLE 	R28 K62 K64 ; R28["value"] := 10.000000
	303	[8297]	SETTABLE 	R28 K65 K66 ; R28["label"] := "/Lotus/Language/Labels/AVATAR_ABILITY_STRENGTH"
	304	[8299]	GETGLOBAL	R29 K0 ; R29 := 0x0032441c
	305	[8299]	GETTABLE 	R29 R29 K1 ; R29 := R29["EliteAlertTypeNameCache"]
	306	[8299]	GETTABLE 	R29 R29 K3 ; R29 := R29["weapons"]
	307	[8299]	GETGLOBAL	R30 K51 ; R30 := 0x0c5e62f9
	308	[8299]	LOADK    	R31 := 1.000000
	309	[8299]	GETGLOBAL	R32 K0 ; R32 := 0x0032441c
	310	[8299]	GETTABLE 	R32 R32 K1 ; R32 := R32["EliteAlertTypeNameCache"]
	311	[8299]	GETTABLE 	R32 R32 K3 ; R32 := R32["weapons"]
	312	[8299]	LEN      	R32 R32 ; R32 := # R32
	313	[8299]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	314	[8299]	GETTABLE 	R29 R29 R30 ; R29 := R29[R30]
	315	[8300]	GETTABLE 	R30 R29 K40 ; R30 := R29["itemName"]
	316	[8301]	GETGLOBAL	R31 K17 ; R31 := 0x7f5022cf
	317	[8301]	GETTABLE 	R31 R31 K54 ; R31 := R31[0x66edf04f]
	318	[8301]	MOVE     	R32 R30 ; R32 := R30
	319	[8301]	LOADK    	R33 K55 ; R33 := "/StoreItems"
	320	[8301]	LOADK    	R34 K7 ; R34 := ""
	321	[8301]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	322	[8302]	GETGLOBAL	R32 K8 ; R32 := 0x7ed0a956
	323	[8302]	MOVE     	R33 R31 ; R33 := R31
	324	[8302]	CALL     	R32 2 2 ; R32 := R32(R33)
	325	[8303]	GETGLOBAL	R33 K8 ; R33 := 0x7ed0a956
	326	[8303]	MOVE     	R34 R31 ; R34 := R31
	327	[8303]	LOADK    	R35 K19 ; R35 := "Prime"
	328	[8303]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	329	[8303]	CALL     	R33 2 2 ; R33 := R33(R34)
	330	[8304]	NEWTABLE 	R34 0 2 ; R34 := {}
	331	[8304]	GETUPVAL 	R35 U0 ; R35 := U0
	332	[8304]	GETTABLE 	R35 R35 K43 ; R35 := R35[0x06d055f9]
	333	[8304]	GETTABLE 	R36 R29 K41 ; R36 := R29["category"]
	334	[8304]	EQ       	1 R36 K28 ; if R36 == 5.000000 then PC := 337
	335	[8304]	JMP      	337 ; PC := 337
	336	[8304]	OP_LOADBOOL	R36 0 1 ; R36 := false; PC := 337
	337	[8304]	OP_LOADBOOL	R36 1 0 ; R36 := true
	338	[8304]	LOADK    	R37 := 276.000000
	339	[8304]	LOADK    	R38 := 216.000000
	340	[8304]	CALL     	R35 4 2 ; R35 := R35(R36,R37,R38)
	341	[8304]	SETTABLE 	R34 K62 R35 ; R34[0x4bc83635] := R35
	342	[8304]	SETTABLE 	R34 K65 K67 ; R34["label"] := "/Lotus/Language/Labels/WEAPON_DAMAGE_AMOUNT"
	343	[8306]	GETGLOBAL	R35 K49 ; R35 := 0x4f6851ff
	344	[8306]	MOVE     	R36 R20 ; R36 := R20
	345	[8306]	CALL     	R35 2 1 ; R35(R36)
	346	[8308]	GETGLOBAL	R35 K68 ; R35 := 0x3d106989
	347	[8308]	LOADK    	R36 K69 ; R36 := "EliteAlert: generated boosts for "
	348	[8308]	MOVE     	R37 R0 ; R37 := R0
	349	[8308]	LOADK    	R38 K70 ; R38 := ": suitType="
	350	[8308]	MOVE     	R39 R25 ; R39 := R25
	351	[8308]	LOADK    	R40 K71 ; R40 := " wepType="
	352	[8308]	MOVE     	R41 R31 ; R41 := R31
	353	[8308]	CONCAT   	R36 R36 R41 ; R36 := R36 .. R37 .. R38 .. R39 .. R40 .. R41
	354	[8308]	CALL     	R35 2 1 ; R35(R36)
	355	[8309]	MOVE     	R35 R24 ; R35 := R24
	356	[8309]	MOVE     	R36 R26 ; R36 := R26
	357	[8309]	MOVE     	R37 R27 ; R37 := R27
	358	[8309]	MOVE     	R38 R28 ; R38 := R28
	359	[8309]	MOVE     	R39 R30 ; R39 := R30
	360	[8309]	MOVE     	R40 R32 ; R40 := R32
	361	[8309]	MOVE     	R41 R33 ; R41 := R33
	362	[8309]	MOVE     	R42 R34 ; R42 := R34
	363	[8309]	MOVE     	R43 R21 ; R43 := R21
	364	[8309]	RETURN   	R35 10 ; return R35, R36, R37, R38, R39, R40, R41, R42, R43 
	365	[8310]	RETURN   	R0 1 ; return 

function #381 <?:8312,8328> (58 instructions, 232 bytes at 00000160C684F960)
1 param, 13 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[8313]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8313]	GETTABLE 	R2 R0 K1 ; R2 := R0["Rank"]
	3	[8313]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[8313]	TEST     	R1 0 ; if not R1 then PC := 58
	5	[8313]	JMP      	58 ; PC := 58
	6	[8314]	GETTABLE 	R1 R0 K2 ; R1 := R0["ResultItemType"]
	7	[8314]	TEST     	R1 1 ; if R1 then PC := 10
	8	[8314]	JMP      	10 ; PC := 10
	9	[8314]	GETTABLE 	R1 R0 K3 ; R1 := R0["Type"]
	10	[8315]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	11	[8315]	MOVE     	R3 R1 ; R3 := R1
	12	[8315]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[8315]	TEST     	R2 1 ; if R2 then PC := 58
	14	[8315]	JMP      	58 ; PC := 58
	15	[8315]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0xf2deaf69]
	16	[8315]	GETGLOBAL	R4 K5 ; R4 := gWeaponBaseType
	17	[8315]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	18	[8315]	TEST     	R2 0 ; if not R2 then PC := 58
	19	[8315]	JMP      	58 ; PC := 58
	20	[8316]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	21	[8316]	GETGLOBAL	R3 K6 ; R3 := 0x25d99d89
	22	[8316]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[8316]	TEST     	R2 1 ; if R2 then PC := 30
	24	[8316]	JMP      	30 ; PC := 30
	25	[8316]	GETGLOBAL	R2 K6 ; R2 := 0x25d99d89
	26	[8316]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x25a6e75e]
	27	[8316]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[8316]	TEST     	R2 1 ; if R2 then PC := 31
	29	[8316]	JMP      	31 ; PC := 31
	30	[8316]	LOADNIL  	R2 R2 ; R2 := nil
	31	[8317]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	32	[8317]	MOVE     	R4 R2 ; R4 := R2
	33	[8317]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[8317]	TEST     	R3 1 ; if R3 then PC := 58
	35	[8317]	JMP      	58 ; PC := 58
	36	[8318]	GETTABLE 	R3 R2 K8 ; R3 := R2["mXPInfo"]
	37	[8319]	LOADK    	R4 := 1.000000
	38	[8319]	LEN      	R5 R3 ; R5 := # R3
	39	[8319]	LOADK    	R6 := 1.000000
	40	[8319]	FORPREP  	R4 57 ; R4 -= R6; PC := 57
	41	[8320]	GETTABLE 	R8 R3 R7 ; R8 := R3[R7]
	42	[8320]	GETTABLE 	R8 R8 K9 ; R8 := R8["mItemType"]
	43	[8321]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	44	[8321]	MOVE     	R10 R8 ; R10 := R8
	45	[8321]	CALL     	R9 2 2 ; R9 := R9(R10)
	46	[8321]	TEST     	R9 1 ; if R9 then PC := 57
	47	[8321]	JMP      	57 ; PC := 57
	48	[8321]	EQ       	0 R8 R1 ; if R8 ~= R1 then PC := 57
	49	[8321]	JMP      	57 ; PC := 57
	50	[8322]	GETGLOBAL	R9 K10 ; R9 := 0xa94df70b
	51	[8322]	SELF     	R9 R9 K11 ; R10 := R9; R9 := R9[0x8427bf69]
	52	[8322]	GETTABLE 	R11 R3 R7 ; R11 := R3[R7]
	53	[8322]	GETTABLE 	R11 R11 K12 ; R11 := R11["mXP"]
	54	[8322]	MOVE     	R12 R8 ; R12 := R8
	55	[8322]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	56	[8322]	SETTABLE 	R0 K1 R9 ; R0["Rank"] := R9
	57	[8319]	FORLOOP  	R4 41 ; R4 += R6; if R4 <= R5 then begin PC := 41; R7 := R4 end
	58	[8328]	RETURN   	R0 1 ; return 

function #382 <?:8330,8348> (46 instructions, 184 bytes at 00000160C684FD40)
3 params, 9 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[8331]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[8331]	MOVE     	R4 R0 ; R4 := R0
	3	[8331]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[8331]	TEST     	R3 1 ; if R3 then PC := 46
	5	[8331]	JMP      	46 ; PC := 46
	6	[8332]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 9
	7	[8332]	JMP      	9 ; PC := 9
	8	[8333]	LOADK    	R1 := 10.000000
	9	[8335]	EQ       	0 R2 K1 ; if R2 ~= nil then PC := 12
	10	[8335]	JMP      	12 ; PC := 12
	11	[8336]	LOADK    	R2 := 2.000000
	12	[8339]	GETUPVAL 	R3 U0 ; R3 := U0
	13	[8339]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x4bc83635]
	14	[8339]	GETUPVAL 	R4 U1 ; R4 := U1
	15	[8339]	GETTABLE 	R4 R4 K4 ; R4 := R4[0x5d10207d]
	16	[8339]	MOVE     	R5 R1 ; R5 := R1
	17	[8339]	OP_LOADBOOL	R6 1 0 ; R6 := true
	18	[8339]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	19	[8339]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	20	[8340]	GETUPVAL 	R4 U0 ; R4 := U0
	21	[8340]	GETTABLE 	R4 R4 K3 ; R4 := R4[0x4bc83635]
	22	[8340]	GETUPVAL 	R5 U1 ; R5 := U1
	23	[8340]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x5d10207d]
	24	[8340]	MOVE     	R6 R2 ; R6 := R2
	25	[8340]	OP_LOADBOOL	R7 1 0 ; R7 := true
	26	[8340]	CALL     	R5 3 0 ; R5,... := R5(R6,R7)
	27	[8340]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	28	[8342]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0xf2deaf69]
	29	[8342]	GETGLOBAL	R7 K6 ; R7 := gParticleSysType
	30	[8342]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	31	[8342]	TEST     	R5 0 ; if not R5 then PC := 38
	32	[8342]	JMP      	38 ; PC := 38
	33	[8343]	SELF     	R5 R0 K7 ; R6 := R0; R5 := R0[0x8feccd8b]
	34	[8343]	MOVE     	R7 R3 ; R7 := R3
	35	[8343]	MOVE     	R8 R4 ; R8 := R4
	36	[8343]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	37	[8343]	JMP      	46 ; PC := 46
	38	[8344]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0xf2deaf69]
	39	[8344]	GETGLOBAL	R7 K8 ; R7 := gLensFlareType
	40	[8344]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	41	[8344]	TEST     	R5 0 ; if not R5 then PC := 46
	42	[8344]	JMP      	46 ; PC := 46
	43	[8345]	SELF     	R5 R0 K9 ; R6 := R0; R5 := R0[0xc2b4e597]
	44	[8345]	MOVE     	R7 R3 ; R7 := R3
	45	[8345]	CALL     	R5 3 1 ; R5(R6,R7)
	46	[8348]	RETURN   	R0 1 ; return 

function #383 <?:8350,8377> (10 instructions, 40 bytes at 00000160C6850020)
2 params, 6 slots, 1 upvalue, 0 locals, 3 constants, 1 function
	1	[8352]	GETGLOBAL	R2 K0 ; R2 := 0x7f5022cf
	2	[8352]	GETTABLE 	R2 R2 K1 ; R2 := R2[0x66edf04f]
	3	[8352]	MOVE     	R3 R0 ; R3 := R0
	4	[8352]	LOADK    	R4 K2 ; R4 := "\"#.-\""
	5	[8376]	CLOSURE  	R5 0 ; R5 := closure(Function #1)
	6	[8376]	MOVE     	R0 R1 ; R0 := R1
	7	[8376]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[8352]	TAILCALL 	R2 4 0 ; R2,... := R2(R3,R4,R5)
	9	[8376]	RETURN   	R2 0 ; return R2,... 
	10	[8377]	RETURN   	R0 1 ; return 

function #384 <?:8381,8444> (78 instructions, 312 bytes at 00000160C68506E0)
1 param, 10 slots, 1 upvalue, 0 locals, 30 constants, 2 functions
	1	[8396]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	2	[8396]	GETUPVAL 	R0 U0 ; R0 := U0
	3	[8398]	MOVE     	R2 R1 ; R2 := R1
	4	[8398]	CALL     	R2 1 2 ; R2 := R2()
	5	[8398]	TEST     	R2 1 ; if R2 then PC := 8
	6	[8398]	JMP      	8 ; PC := 8
	7	[8399]	RETURN   	R0 1 ; return 
	8	[8402]	GETGLOBAL	R2 K0 ; R2 := _T
	9	[8402]	GETTABLE 	R2 R2 K1 ; R2 := R2["ShowNotification"]
	10	[8402]	EQ       	1 R2 K2 ; if R2 == nil then PC := 74
	11	[8402]	JMP      	74 ; PC := 74
	12	[8403]	GETGLOBAL	R2 K3 ; R2 := 0x25d99d89
	13	[8403]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xf5fb4cbf]
	14	[8403]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[8404]	GETGLOBAL	R3 K0 ; R3 := _T
	16	[8404]	GETTABLE 	R3 R3 K5 ; R3 := R3["SkipMailNotification"]
	17	[8404]	TEST     	R3 1 ; if R3 then PC := 41
	18	[8404]	JMP      	41 ; PC := 41
	19	[8405]	GETGLOBAL	R3 K6 ; R3 := 0x7f5022cf
	20	[8405]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x04981ab3]
	21	[8405]	GETGLOBAL	R4 K8 ; R4 := 0x603636ad
	22	[8405]	EQ       	0 R2 K9 ; if R2 ~= 1.000000 then PC := 27
	23	[8405]	JMP      	27 ; PC := 27
	24	[8405]	LOADK    	R5 K10 ; R5 := "/Lotus/Language/Menu/Message"
	25	[8405]	TEST     	R5 1 ; if R5 then PC := 28
	26	[8405]	JMP      	28 ; PC := 28
	27	[8405]	LOADK    	R5 K11 ; R5 := "/Lotus/Language/Menu/Messages"
	28	[8405]	NEWTABLE 	R6 0 0 ; R6 := {}
	29	[8405]	CALL     	R4 3 0 ; R4,... := R4(R5,R6)
	30	[8405]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	31	[8406]	GETGLOBAL	R4 K0 ; R4 := _T
	32	[8406]	GETTABLE 	R4 R4 K12 ; R4 := R4[0x7dce37bc]
	33	[8406]	GETGLOBAL	R5 K8 ; R5 := 0x603636ad
	34	[8406]	LOADK    	R6 K13 ; R6 := "/Lotus/Language/Menu/Mailbox_NewMessagesNotification"
	35	[8406]	NEWTABLE 	R7 0 2 ; R7 := {}
	36	[8406]	SETTABLE 	R7 K14 R2 ; R7["COUNT"] := R2
	37	[8406]	SETTABLE 	R7 K15 R3 ; R7["MESSAGES"] := R3
	38	[8406]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	39	[8406]	LOADK    	R6 K16 ; R6 := "Mail"
	40	[8406]	CALL     	R4 3 1 ; R4(R5,R6)
	41	[8409]	GETGLOBAL	R4 K3 ; R4 := 0x25d99d89
	42	[8409]	SELF     	R4 R4 K17 ; R5 := R4; R4 := R4[0x63a9c319]
	43	[8409]	CALL     	R4 2 2 ; R4 := R4(R5)
	44	[8409]	LT       	0 K18 R4 ; if 0.000000 >= R4 then PC := 74
	45	[8409]	JMP      	74 ; PC := 74
	46	[8409]	GETGLOBAL	R4 K0 ; R4 := _T
	47	[8409]	GETTABLE 	R4 R4 K19 ; R4 := R4["GetScreenRes"]
	48	[8409]	EQ       	1 R4 K2 ; if R4 == nil then PC := 74
	49	[8409]	JMP      	74 ; PC := 74
	50	[8410]	GETGLOBAL	R4 K0 ; R4 := _T
	51	[8410]	GETTABLE 	R4 R4 K20 ; R4 := R4[0x14e3a848]
	52	[8410]	LOADK    	R5 K21 ; R5 := "Inbox"
	53	[8410]	CALL     	R4 2 2 ; R4 := R4(R5)
	54	[8411]	GETGLOBAL	R5 K22 ; R5 := 0x9ba7909f
	55	[8411]	SELF     	R5 R5 K23 ; R6 := R5; R5 := R5[0xbcfb64ab]
	56	[8411]	MOVE     	R7 R4 ; R7 := R4
	57	[8411]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	58	[8414]	GETGLOBAL	R6 K24 ; R6 := 0x7b998233
	59	[8414]	MOVE     	R7 R5 ; R7 := R5
	60	[8414]	CALL     	R6 2 2 ; R6 := R6(R7)
	61	[8414]	TEST     	R6 0 ; if not R6 then PC := 74
	62	[8414]	JMP      	74 ; PC := 74
	63	[8414]	GETGLOBAL	R6 K24 ; R6 := 0x7b998233
	64	[8414]	MOVE     	R7 R0 ; R7 := R0
	65	[8414]	CALL     	R6 2 2 ; R6 := R6(R7)
	66	[8414]	TEST     	R6 1 ; if R6 then PC := 74
	67	[8414]	JMP      	74 ; PC := 74
	68	[8415]	GETGLOBAL	R6 K0 ; R6 := _T
	69	[8415]	SETTABLE 	R6 K25 K26 ; R6["OpeningMailbox"] := true
	70	[8416]	SELF     	R6 R0 K27 ; R7 := R0; R6 := R0[0xbd2e96ea]
	71	[8416]	LOADK    	R8 := 1.000000
	72	[8437]	CLOSURE  	R9 1 ; R9 := closure(Function #2)
	73	[8416]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	74	[8442]	GETGLOBAL	R6 K0 ; R6 := _T
	75	[8442]	SETTABLE 	R6 K5 K28 ; R6["SkipMailNotification"] := false
	76	[8443]	GETGLOBAL	R6 K0 ; R6 := _T
	77	[8443]	SETTABLE 	R6 K29 K28 ; R6["gQueueMailbox"] := false
	78	[8444]	RETURN   	R0 1 ; return 

function #385 <?:8446,8448> (19 instructions, 76 bytes at 00000160C68516F0)
0 params, 2 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[8447]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[8447]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[8447]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8447]	TEST     	R0 1 ; if R0 then PC := 16
	5	[8447]	JMP      	16 ; PC := 16
	6	[8447]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	7	[8447]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x69727e0b]
	8	[8447]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[8447]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x89e663e9]
	10	[8447]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[8447]	TEST     	R0 0 ; if not R0 then PC := 18
	12	[8447]	JMP      	18 ; PC := 18
	13	[8447]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[8447]	CALL     	R0 1 2 ; R0 := R0()
	15	[8447]	JMP      	18 ; PC := 18
	16	[8447]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 17
	17	[8447]	OP_LOADBOOL	R0 1 0 ; R0 := true
	18	[8447]	RETURN   	R0 2 ; return R0 
	19	[8448]	RETURN   	R0 1 ; return 

function #386 <?:8450,8505> (94 instructions, 376 bytes at 00000160C6851890)
4 params, 13 slots, 2 upvalues, 0 locals, 26 constants, 0 functions
	1	[8451]	TESTSET  	R4 R2 1 ; if R2 then PC := 4 else R4 := R2 
	2	[8451]	JMP      	4 ; PC := 4
	3	[8451]	LOADK    	R4 := 0.000000
	4	[8452]	GETUPVAL 	R5 U0 ; R5 := U0
	5	[8452]	CALL     	R5 1 2 ; R5 := R5()
	6	[8452]	SELF     	R5 R5 K1 ; R6 := R5; R5 := R5[0x29922d98]
	7	[8452]	MOVE     	R7 R0 ; R7 := R0
	8	[8452]	MOVE     	R8 R4 ; R8 := R4
	9	[8452]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	10	[8454]	EQ       	0 R3 K2 ; if R3 ~= nil then PC := 17
	11	[8454]	JMP      	17 ; PC := 17
	12	[8455]	GETGLOBAL	R6 K3 ; R6 := 0x603636ad
	13	[8455]	LOADK    	R7 K4 ; R7 := "/Lotus/Language/Kingpins/NemesisViewer_Title"
	14	[8455]	LOADNIL  	R8 R8 ; R8 := nil
	15	[8455]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	16	[8455]	MOVE     	R3 R6 ; R3 := R6
	17	[8457]	GETGLOBAL	R6 K3 ; R6 := 0x603636ad
	18	[8457]	LOADK    	R7 K6 ; R7 := "/Lotus/Language/Kingpins/NemesisControlledTerritory"
	19	[8457]	NEWTABLE 	R8 0 1 ; R8 := {}
	20	[8457]	SETTABLE 	R8 K7 R3 ; R8["LICH_NAME"] := R3
	21	[8457]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	22	[8457]	SETTABLE 	R5 K5 R6 ; R5["uniqueName"] := R6
	23	[8459]	TESTSET  	R6 R1 1 ; if R1 then PC := 26 else R6 := R1 
	24	[8459]	JMP      	26 ; PC := 26
	25	[8459]	LOADK    	R6 := 1.000000
	26	[8461]	LOADK    	R7 := 55.000000
	27	[8462]	LOADK    	R8 := 75.000000
	28	[8463]	EQ       	0 R6 K8 ; if R6 ~= 1.000000 then PC := 33
	29	[8463]	JMP      	33 ; PC := 33
	30	[8464]	LOADK    	R7 := 50.000000
	31	[8465]	LOADK    	R8 := 60.000000
	32	[8465]	JMP      	47 ; PC := 47
	33	[8466]	EQ       	0 R6 K9 ; if R6 ~= 2.000000 then PC := 38
	34	[8466]	JMP      	38 ; PC := 38
	35	[8467]	LOADK    	R7 := 55.000000
	36	[8468]	LOADK    	R8 := 70.000000
	37	[8468]	JMP      	47 ; PC := 47
	38	[8469]	EQ       	0 R6 K10 ; if R6 ~= 3.000000 then PC := 43
	39	[8469]	JMP      	43 ; PC := 43
	40	[8470]	LOADK    	R7 := 75.000000
	41	[8471]	LOADK    	R8 := 90.000000
	42	[8471]	JMP      	47 ; PC := 47
	43	[8472]	LE       	0 K11 R6 ; if 4.000000 > R6 then PC := 47
	44	[8472]	JMP      	47 ; PC := 47
	45	[8473]	LOADK    	R7 := 90.000000
	46	[8474]	LOADK    	R8 := 110.000000
	47	[8477]	GETGLOBAL	R9 K13 ; R9 := 0x5bced4c4
	48	[8477]	GETTABLE 	R9 R9 K14 ; R9 := R9[0xb62ecfe0]
	49	[8477]	GETTABLE 	R10 R5 K12 ; R10 := R5["minEnemyLevel"]
	50	[8477]	MOVE     	R11 R7 ; R11 := R7
	51	[8477]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	52	[8477]	SETTABLE 	R5 K12 R9 ; R5["minEnemyLevel"] := R9
	53	[8478]	GETGLOBAL	R9 K13 ; R9 := 0x5bced4c4
	54	[8478]	GETTABLE 	R9 R9 K14 ; R9 := R9[0xb62ecfe0]
	55	[8478]	GETTABLE 	R10 R5 K15 ; R10 := R5["maxEnemyLevel"]
	56	[8478]	MOVE     	R11 R8 ; R11 := R8
	57	[8478]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	58	[8478]	SETTABLE 	R5 K15 R9 ; R5["maxEnemyLevel"] := R9
	59	[8480]	SETTABLE 	R5 K16 K8 ; R5["difficulty"] := 1.000000
	60	[8483]	GETTABLE 	R9 R5 K17 ; R9 := R5["missionType"]
	61	[8484]	EQ       	0 R9 K18 ; if R9 ~= 8.000000 then PC := 65
	62	[8484]	JMP      	65 ; PC := 65
	63	[8485]	SETTABLE 	R5 K19 K20 ; R5["maxWaveNum"] := 5.000000
	64	[8485]	JMP      	88 ; PC := 88
	65	[8486]	EQ       	0 R9 K21 ; if R9 ~= 13.000000 then PC := 69
	66	[8486]	JMP      	69 ; PC := 69
	67	[8487]	SETTABLE 	R5 K19 K8 ; R5["maxWaveNum"] := 1.000000
	68	[8487]	JMP      	88 ; PC := 88
	69	[8488]	EQ       	0 R9 K9 ; if R9 ~= 2.000000 then PC := 73
	70	[8488]	JMP      	73 ; PC := 73
	71	[8489]	SETTABLE 	R5 K19 K20 ; R5["maxWaveNum"] := 5.000000
	72	[8489]	JMP      	88 ; PC := 88
	73	[8490]	EQ       	0 R9 K22 ; if R9 ~= 17.000000 then PC := 77
	74	[8490]	JMP      	77 ; PC := 77
	75	[8491]	SETTABLE 	R5 K19 K20 ; R5["maxWaveNum"] := 5.000000
	76	[8491]	JMP      	88 ; PC := 88
	77	[8492]	EQ       	0 R9 K23 ; if R9 ~= 7.000000 then PC := 81
	78	[8492]	JMP      	81 ; PC := 81
	79	[8493]	SETTABLE 	R5 K19 K9 ; R5["maxWaveNum"] := 2.000000
	80	[8493]	JMP      	88 ; PC := 88
	81	[8494]	EQ       	0 R9 K11 ; if R9 ~= 4.000000 then PC := 85
	82	[8494]	JMP      	85 ; PC := 85
	83	[8495]	SETTABLE 	R5 K19 K9 ; R5["maxWaveNum"] := 2.000000
	84	[8495]	JMP      	88 ; PC := 88
	85	[8496]	EQ       	0 R9 K24 ; if R9 ~= 32.000000 then PC := 88
	86	[8496]	JMP      	88 ; PC := 88
	87	[8497]	SETTABLE 	R5 K19 K11 ; R5["maxWaveNum"] := 4.000000
	88	[8500]	EQ       	0 R4 K8 ; if R4 ~= 1.000000 then PC := 93
	89	[8500]	JMP      	93 ; PC := 93
	90	[8501]	SELF     	R10 R5 K25 ; R11 := R5; R10 := R5[0x5c0d8c92]
	91	[8501]	GETUPVAL 	R12 U1 ; R12 := U1
	92	[8501]	CALL     	R10 3 1 ; R10(R11,R12)
	93	[8504]	RETURN   	R5 2 ; return R5 
	94	[8505]	RETURN   	R0 1 ; return 

function #387 <?:8507,8509> (8 instructions, 32 bytes at 00000160C6851F30)
4 params, 9 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[8508]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[8508]	MOVE     	R5 R0 ; R5 := R0
	3	[8508]	MOVE     	R6 R1 ; R6 := R1
	4	[8508]	MOVE     	R7 R2 ; R7 := R2
	5	[8508]	MOVE     	R8 R3 ; R8 := R3
	6	[8508]	TAILCALL 	R4 5 0 ; R4,... := R4(R5,R6,R7,R8)
	7	[8508]	RETURN   	R4 0 ; return R4,... 
	8	[8509]	RETURN   	R0 1 ; return 

function #388 <?:8511,8522> (39 instructions, 156 bytes at 00000160C6852020)
1 param, 4 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[8512]	SELF     	R1 R0 K0 ; R2 := R0; R1 := R0[0xb61c0fd4]
	2	[8512]	CALL     	R1 2 2 ; R1 := R1(R2)
	3	[8513]	EQ       	1 R1 K2 ; if R1 == 1.000000 then PC := 7
	4	[8513]	JMP      	7 ; PC := 7
	5	[8513]	EQ       	0 R1 K3 ; if R1 ~= 0.000000 then PC := 10
	6	[8513]	JMP      	10 ; PC := 10
	7	[8514]	OP_LOADBOOL	R2 1 0 ; R2 := true
	8	[8514]	RETURN   	R2 2 ; return R2 
	9	[8514]	JMP      	37 ; PC := 37
	10	[8515]	EQ       	0 R1 K4 ; if R1 ~= 3.000000 then PC := 24
	11	[8515]	JMP      	24 ; PC := 24
	12	[8516]	GETGLOBAL	R2 K5 ; R2 := 0x25d99d89
	13	[8516]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x25a6e75e]
	14	[8516]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[8516]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x2fdbb24a]
	16	[8516]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[8516]	LEN      	R2 R2 ; R2 := # R2
	18	[8516]	LT       	1 K3 R2 ; if 0.000000 < R2 then PC := 21
	19	[8516]	JMP      	21 ; PC := 21
	20	[8516]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 21
	21	[8516]	OP_LOADBOOL	R2 1 0 ; R2 := true
	22	[8516]	RETURN   	R2 2 ; return R2 
	23	[8516]	JMP      	37 ; PC := 37
	24	[8517]	EQ       	0 R1 K8 ; if R1 ~= 4.000000 then PC := 37
	25	[8517]	JMP      	37 ; PC := 37
	26	[8518]	GETGLOBAL	R2 K5 ; R2 := 0x25d99d89
	27	[8518]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x25a6e75e]
	28	[8518]	CALL     	R2 2 2 ; R2 := R2(R3)
	29	[8518]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x2fdbb24a]
	30	[8518]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[8518]	LEN      	R2 R2 ; R2 := # R2
	32	[8518]	EQ       	1 R2 K3 ; if R2 == 0.000000 then PC := 35
	33	[8518]	JMP      	35 ; PC := 35
	34	[8518]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 35
	35	[8518]	OP_LOADBOOL	R2 1 0 ; R2 := true
	36	[8518]	RETURN   	R2 2 ; return R2 
	37	[8521]	OP_LOADBOOL	R2 0 0 ; R2 := false
	38	[8521]	RETURN   	R2 2 ; return R2 
	39	[8522]	RETURN   	R0 1 ; return 

function #389 <?:8524,8534> (31 instructions, 124 bytes at 00000160C68522B0)
2 params, 9 slots, 0 upvalues, 0 locals, 12 constants, 0 functions
	1	[8525]	NEWTABLE 	R2 0 6 ; R2 := {}
	2	[8525]	SETTABLE 	R2 K0 K1 ; R2["_uk"] := true
	3	[8525]	SETTABLE 	R2 K2 K1 ; R2["_ru"] := true
	4	[8525]	SETTABLE 	R2 K3 K1 ; R2["_ja"] := true
	5	[8525]	SETTABLE 	R2 K4 K1 ; R2["_zh"] := true
	6	[8525]	SETTABLE 	R2 K5 K1 ; R2["_tc"] := true
	7	[8525]	SETTABLE 	R2 K6 K1 ; R2["_ko"] := true
	8	[8526]	GETGLOBAL	R3 K7 ; R3 := 0x67513231
	9	[8526]	CALL     	R3 1 2 ; R3 := R3()
	10	[8526]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x6d604ba7]
	11	[8526]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[8527]	GETTABLE 	R4 R2 R3 ; R4 := R2[R3]
	13	[8527]	TEST     	R4 0 ; if not R4 then PC := 29
	14	[8527]	JMP      	29 ; PC := 29
	15	[8528]	GETGLOBAL	R4 K9 ; R4 := 0x7b998233
	16	[8528]	MOVE     	R5 R0 ; R5 := R0
	17	[8528]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[8528]	TEST     	R4 1 ; if R4 then PC := 27
	19	[8528]	JMP      	27 ; PC := 27
	20	[8528]	EQ       	1 R1 K10 ; if R1 == nil then PC := 27
	21	[8528]	JMP      	27 ; PC := 27
	22	[8529]	SELF     	R4 R0 K11 ; R5 := R0; R4 := R0[0x67bc869f]
	23	[8529]	MOVE     	R6 R1 ; R6 := R1
	24	[8529]	LOADK    	R7 := 65.000000
	25	[8529]	LOADK    	R8 := 0.000000
	26	[8529]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	27	[8531]	OP_LOADBOOL	R4 0 0 ; R4 := false
	28	[8531]	RETURN   	R4 2 ; return R4 
	29	[8533]	OP_LOADBOOL	R4 1 0 ; R4 := true
	30	[8533]	RETURN   	R4 2 ; return R4 
	31	[8534]	RETURN   	R0 1 ; return 

function #390 <?:8536,8544> (25 instructions, 100 bytes at 00000160C6852530)
0 params, 3 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[8537]	GETGLOBAL	R0 K0 ; R0 := 0x6c97a788
	2	[8537]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xe20ba977]
	3	[8537]	CALL     	R0 1 2 ; R0 := R0()
	4	[8538]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	5	[8538]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xd3524453]
	6	[8538]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[8538]	SETTABLE 	R0 K2 R1 ; R0["mGiftMode"] := R1
	8	[8539]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	9	[8539]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xbe5313b5]
	10	[8539]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[8539]	SETTABLE 	R0 K5 R1 ; R0["mFriendInvRestriction"] := R1
	12	[8540]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	13	[8540]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x28434616]
	14	[8540]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[8540]	SETTABLE 	R0 K7 R1 ; R0["mGuildInvRestriction"] := R1
	16	[8541]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	17	[8541]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x25b60da6]
	18	[8541]	CALL     	R1 2 2 ; R1 := R1(R2)
	19	[8541]	SETTABLE 	R0 K9 R1 ; R0["mShowFriendInvNotifications"] := R1
	20	[8542]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	21	[8542]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0x6e08bd03]
	22	[8542]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[8542]	SETTABLE 	R0 K11 R1 ; R0["mTradingRulesConfirmed"] := R1
	24	[8543]	RETURN   	R0 2 ; return R0 
	25	[8544]	RETURN   	R0 1 ; return 

function #391 <?:8546,8557> (39 instructions, 156 bytes at 00000160C68528F0)
2 params, 11 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[8547]	LOADK    	R2 := 1000.000000
	2	[8548]	GETGLOBAL	R3 K0 ; R3 := 0x25d99d89
	3	[8548]	SELF     	R3 R3 K1 ; R4 := R3; R3 := R3[0x2e37a704]
	4	[8548]	CALL     	R3 2 2 ; R3 := R3(R4)
	5	[8548]	LEN      	R3 R3 ; R3 := # R3
	6	[8549]	LE       	0 R2 R3 ; if R2 > R3 then PC := 37
	7	[8549]	JMP      	37 ; PC := 37
	8	[8550]	GETGLOBAL	R4 K2 ; R4 := 0x603636ad
	9	[8550]	LOADK    	R5 K3 ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendLimitError"
	10	[8550]	NEWTABLE 	R6 0 2 ; R6 := {}
	11	[8550]	SETTABLE 	R6 K4 R3 ; R6["NUM_FRIENDS"] := R3
	12	[8550]	SETTABLE 	R6 K5 R2 ; R6["MAX_FRIENDS"] := R2
	13	[8550]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	14	[8551]	GETGLOBAL	R5 K6 ; R5 := 0x7b998233
	15	[8551]	MOVE     	R6 R0 ; R6 := R0
	16	[8551]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[8551]	TEST     	R5 1 ; if R5 then PC := 31
	18	[8551]	JMP      	31 ; PC := 31
	19	[8551]	LEN      	R5 R1 ; R5 := # R1
	20	[8551]	EQ       	1 R5 K7 ; if R5 == 0.000000 then PC := 31
	21	[8551]	JMP      	31 ; PC := 31
	22	[8551]	SELF     	R5 R0 K8 ; R6 := R0; R5 := R0[0xf56f3887]
	23	[8551]	MOVE     	R7 R1 ; R7 := R1
	24	[8551]	NEWTABLE 	R8 2 0 ; R8 := {}
	25	[8551]	LOADK    	R9 K9 ; R9 := "false"
	26	[8551]	MOVE     	R10 R4 ; R10 := R4
	27	[8551]	SETLIST  	R8 2 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
	28	[8551]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	29	[8551]	TEST     	R5 1 ; if R5 then PC := 35
	30	[8551]	JMP      	35 ; PC := 35
	31	[8552]	GETUPVAL 	R5 U0 ; R5 := U0
	32	[8552]	GETTABLE 	R5 R5 K10 ; R5 := R5[0xe0cba3ca]
	33	[8552]	MOVE     	R6 R4 ; R6 := R4
	34	[8552]	CALL     	R5 2 1 ; R5(R6)
	35	[8554]	OP_LOADBOOL	R5 1 0 ; R5 := true
	36	[8554]	RETURN   	R5 2 ; return R5 
	37	[8556]	OP_LOADBOOL	R5 0 0 ; R5 := false
	38	[8556]	RETURN   	R5 2 ; return R5 
	39	[8557]	RETURN   	R0 1 ; return 

function #392 <?:8559,8561> (6 instructions, 24 bytes at 00000160C6852C80)
2 params, 5 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[8560]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[8560]	MOVE     	R3 R0 ; R3 := R0
	3	[8560]	MOVE     	R4 R1 ; R4 := R1
	4	[8560]	TAILCALL 	R2 3 0 ; R2,... := R2(R3,R4)
	5	[8560]	RETURN   	R2 0 ; return R2,... 
	6	[8561]	RETURN   	R0 1 ; return 

function #393 <?:8563,8593> (17 instructions, 68 bytes at 00000160C6852D70)
2 params, 4 slots, 2 upvalues, 0 locals, 4 constants, 3 functions
	1	[8564]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[8564]	CALL     	R2 1 2 ; R2 := R2()
	3	[8579]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	4	[8579]	MOVE     	R0 R2 ; R0 := R2
	5	[8579]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[8579]	MOVE     	R0 R0 ; R0 := R0
	7	[8579]	MOVE     	R0 R1 ; R0 := R1
	8	[8579]	SETTABLE 	R2 K0 R3 ; R2["UtilOnAddFriend"] := R3
	9	[8585]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	10	[8585]	MOVE     	R0 R0 ; R0 := R0
	11	[8585]	SETTABLE 	R2 K1 R3 ; R2["UtilAddFriendMessage"] := R3
	12	[8591]	CLOSURE  	R3 2 ; R3 := closure(Function #3)
	13	[8591]	MOVE     	R0 R0 ; R0 := R0
	14	[8591]	SETTABLE 	R2 K2 R3 ; R2["UtilAddFriendMessageOSK"] := R3
	15	[8592]	GETTABLE 	R3 R2 K3 ; R3 := R2["mMovie"]
	16	[8592]	RETURN   	R3 2 ; return R3 
	17	[8593]	RETURN   	R0 1 ; return 

function #394 <?:8595,8614> (56 instructions, 224 bytes at 00000160C68536A0)
3 params, 12 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[8596]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[8596]	GETGLOBAL	R4 K1 ; R4 := 0x25d99d89
	3	[8596]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[8596]	TEST     	R3 0 ; if not R3 then PC := 7
	5	[8596]	JMP      	7 ; PC := 7
	6	[8597]	RETURN   	R0 1 ; return 
	7	[8600]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[8600]	MOVE     	R4 R0 ; R4 := R0
	9	[8600]	TESTSET  	R5 R1 1 ; if R1 then PC := 12 else R5 := R1 
	10	[8600]	JMP      	12 ; PC := 12
	11	[8600]	LOADK    	R5 K2 ; R5 := "OnAddFriend"
	12	[8600]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	13	[8601]	GETUPVAL 	R4 U1 ; R4 := U1
	14	[8601]	MOVE     	R5 R3 ; R5 := R3
	15	[8601]	MOVE     	R6 R1 ; R6 := R1
	16	[8601]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	17	[8601]	TEST     	R4 0 ; if not R4 then PC := 20
	18	[8601]	JMP      	20 ; PC := 20
	19	[8602]	RETURN   	R0 1 ; return 
	20	[8605]	GETGLOBAL	R4 K3 ; R4 := 0x34291f5c
	21	[8605]	GETTABLE 	R4 R4 K4 ; R4 := R4[0x9ad21ae9]
	22	[8605]	CALL     	R4 1 2 ; R4 := R4()
	23	[8605]	TEST     	R4 0 ; if not R4 then PC := 34
	24	[8605]	JMP      	34 ; PC := 34
	25	[8607]	SELF     	R4 R3 K5 ; R5 := R3; R4 := R3[0xf56f3887]
	26	[8607]	LOADK    	R6 K6 ; R6 := "UtilAddFriendMessage"
	27	[8607]	NEWTABLE 	R7 3 0 ; R7 := {}
	28	[8607]	LOADK    	R8 K7 ; R8 := ""
	29	[8607]	LOADK    	R9 K7 ; R9 := ""
	30	[8607]	LOADK    	R10 := 4.000000
	31	[8607]	SETLIST  	R7 3 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
	32	[8607]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	33	[8607]	JMP      	56 ; PC := 56
	34	[8608]	LEN      	R4 R2 ; R4 := # R2
	35	[8608]	LT       	0 K8 R4 ; if 0.000000 >= R4 then PC := 46
	36	[8608]	JMP      	46 ; PC := 46
	37	[8610]	SELF     	R4 R3 K5 ; R5 := R3; R4 := R3[0xf56f3887]
	38	[8610]	LOADK    	R6 K6 ; R6 := "UtilAddFriendMessage"
	39	[8610]	NEWTABLE 	R7 3 0 ; R7 := {}
	40	[8610]	MOVE     	R8 R2 ; R8 := R2
	41	[8610]	LOADK    	R9 K7 ; R9 := ""
	42	[8610]	LOADK    	R10 := 4.000000
	43	[8610]	SETLIST  	R7 3 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
	44	[8610]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	45	[8610]	JMP      	56 ; PC := 56
	46	[8612]	GETUPVAL 	R4 U2 ; R4 := U2
	47	[8612]	MOVE     	R5 R3 ; R5 := R3
	48	[8612]	LOADK    	R6 K9 ; R6 := "/Lotus/Language/Menu/Message"
	49	[8612]	LOADK    	R7 K7 ; R7 := ""
	50	[8612]	LOADK    	R8 := 200.000000
	51	[8612]	LOADK    	R9 K6 ; R9 := "UtilAddFriendMessage"
	52	[8612]	LOADK    	R10 K10 ; R10 := "UtilAddFriendMessageOSK"
	53	[8612]	NEWTABLE 	R11 0 1 ; R11 := {}
	54	[8612]	SETTABLE 	R11 K11 K12 ; R11["isMultiline"] := true
	55	[8612]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	56	[8614]	RETURN   	R0 1 ; return 

function #395 <?:8616,8635> (84 instructions, 336 bytes at 00000160C6853A30)
0 params, 2 slots, 0 upvalues, 0 locals, 33 constants, 0 functions
	1	[8617]	NEWTABLE 	R0 0 15 ; R0 := {}
	2	[8618]	NEWTABLE 	R1 0 3 ; R1 := {}
	3	[8618]	SETTABLE 	R1 K1 K2 ; R1["Scale"] := 2000.000000
	4	[8618]	SETTABLE 	R1 K3 K4 ; R1["X"] := 40.000000
	5	[8618]	SETTABLE 	R1 K5 K6 ; R1["Y"] := -40.000000
	6	[8618]	SETTABLE 	R0 K0 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilRebels.png"] := R1
	7	[8619]	NEWTABLE 	R1 0 3 ; R1 := {}
	8	[8619]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	9	[8619]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	10	[8619]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	11	[8619]	SETTABLE 	R0 K7 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilJudge.png"] := R1
	12	[8620]	NEWTABLE 	R1 0 4 ; R1 := {}
	13	[8620]	SETTABLE 	R1 K1 K11 ; R1["Scale"] := 1000.000000
	14	[8620]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	15	[8620]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	16	[8620]	SETTABLE 	R1 K12 K13 ; R1["Alpha"] := 8.000000
	17	[8620]	SETTABLE 	R0 K10 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilOracle.png"] := R1
	18	[8621]	NEWTABLE 	R1 0 3 ; R1 := {}
	19	[8621]	SETTABLE 	R1 K1 K15 ; R1["Scale"] := 2400.000000
	20	[8621]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	21	[8621]	SETTABLE 	R1 K5 K16 ; R1["Y"] := 20.000000
	22	[8621]	SETTABLE 	R0 K14 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilBusiness.png"] := R1
	23	[8622]	NEWTABLE 	R1 0 3 ; R1 := {}
	24	[8622]	SETTABLE 	R1 K1 K18 ; R1["Scale"] := 1300.000000
	25	[8622]	SETTABLE 	R1 K3 K19 ; R1["X"] := -50.000000
	26	[8622]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	27	[8622]	SETTABLE 	R0 K17 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilAssassins.png"] := R1
	28	[8623]	NEWTABLE 	R1 0 3 ; R1 := {}
	29	[8623]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	30	[8623]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	31	[8623]	SETTABLE 	R1 K5 K21 ; R1["Y"] := 60.000000
	32	[8623]	SETTABLE 	R0 K20 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilChurch.png"] := R1
	33	[8624]	NEWTABLE 	R1 0 3 ; R1 := {}
	34	[8624]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	35	[8624]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	36	[8624]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	37	[8624]	SETTABLE 	R0 K22 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilEidolonCetusElder.png"] := R1
	38	[8625]	NEWTABLE 	R1 0 4 ; R1 := {}
	39	[8625]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	40	[8625]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	41	[8625]	SETTABLE 	R1 K5 K4 ; R1["Y"] := 40.000000
	42	[8625]	SETTABLE 	R1 K12 K24 ; R1["Alpha"] := 15.000000
	43	[8625]	SETTABLE 	R0 K23 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilEidolonHunter.png"] := R1
	44	[8626]	NEWTABLE 	R1 0 4 ; R1 := {}
	45	[8626]	SETTABLE 	R1 K1 K11 ; R1["Scale"] := 1000.000000
	46	[8626]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	47	[8626]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	48	[8626]	SETTABLE 	R1 K12 K13 ; R1["Alpha"] := 8.000000
	49	[8626]	SETTABLE 	R0 K25 R1 ; R0["/Lotus/Interface/Graphics/Fortuna/FortunaTitleIcon.png"] := R1
	50	[8627]	NEWTABLE 	R1 0 4 ; R1 := {}
	51	[8627]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	52	[8627]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	53	[8627]	SETTABLE 	R1 K5 K4 ; R1["Y"] := 40.000000
	54	[8627]	SETTABLE 	R1 K12 K13 ; R1["Alpha"] := 8.000000
	55	[8627]	SETTABLE 	R0 K26 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionVentKidz.png"] := R1
	56	[8628]	NEWTABLE 	R1 0 4 ; R1 := {}
	57	[8628]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	58	[8628]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	59	[8628]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	60	[8628]	SETTABLE 	R1 K12 K24 ; R1["Alpha"] := 15.000000
	61	[8628]	SETTABLE 	R0 K27 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilSolarisUnited.png"] := R1
	62	[8629]	NEWTABLE 	R1 0 4 ; R1 := {}
	63	[8629]	SETTABLE 	R1 K1 K18 ; R1["Scale"] := 1300.000000
	64	[8629]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	65	[8629]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	66	[8629]	SETTABLE 	R1 K12 K29 ; R1["Alpha"] := 7.000000
	67	[8629]	SETTABLE 	R0 K28 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilConclave.png"] := R1
	68	[8630]	NEWTABLE 	R1 0 3 ; R1 := {}
	69	[8630]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	70	[8630]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	71	[8630]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	72	[8630]	SETTABLE 	R0 K30 R1 ; R0["/Lotus/Interface/Icons/Categories/IconLibrarian256.png"] := R1
	73	[8631]	NEWTABLE 	R1 0 3 ; R1 := {}
	74	[8631]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	75	[8631]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	76	[8631]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	77	[8631]	SETTABLE 	R0 K31 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilEntrati.png"] := R1
	78	[8632]	NEWTABLE 	R1 0 3 ; R1 := {}
	79	[8632]	SETTABLE 	R1 K1 K8 ; R1["Scale"] := 1500.000000
	80	[8632]	SETTABLE 	R1 K3 K9 ; R1["X"] := 0.000000
	81	[8632]	SETTABLE 	R1 K5 K9 ; R1["Y"] := 0.000000
	82	[8632]	SETTABLE 	R0 K32 R1 ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilNecraloid.png"] := R1
	83	[8634]	RETURN   	R0 2 ; return R0 
	84	[8635]	RETURN   	R0 1 ; return 

function #396 <?:8637,8646> (20 instructions, 80 bytes at 00000160C68545F0)
1 param, 6 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[8638]	GETGLOBAL	R1 K0 ; R1 := 0x9ba7909f
	2	[8638]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbcfb64ab]
	3	[8638]	GETGLOBAL	R3 K2 ; R3 := 0x0032441c
	4	[8638]	GETTABLE 	R3 R3 K3 ; R3 := R3["UIMovie_TransmissionMovie"]
	5	[8638]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[8639]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	7	[8639]	MOVE     	R3 R1 ; R3 := R1
	8	[8639]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[8639]	TEST     	R2 1 ; if R2 then PC := 15
	10	[8639]	JMP      	15 ; PC := 15
	11	[8640]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xe4162eed]
	12	[8640]	LOADK    	R4 K6 ; R4 := "PreviewClose"
	13	[8640]	LOADK    	R5 K7 ; R5 := "true"
	14	[8640]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	15	[8643]	TEST     	R0 0 ; if not R0 then PC := 20
	16	[8643]	JMP      	20 ; PC := 20
	17	[8644]	GETGLOBAL	R2 K8 ; R2 := _T
	18	[8644]	NEWTABLE 	R3 0 0 ; R3 := {}
	19	[8644]	SETTABLE 	R2 K9 R3 ; R2["QueuedTransmissions"] := R3
	20	[8646]	RETURN   	R0 1 ; return 

function #397 <?:8648,8687> (65 instructions, 260 bytes at 00000160C6854830)
1 param, 8 slots, 0 upvalues, 0 locals, 28 constants, 0 functions
	1	[8649]	LOADK    	R1 K0 ; R1 := ""
	2	[8650]	EQ       	1 R0 K1 ; if R0 == "error" then PC := 64
	3	[8650]	JMP      	64 ; PC := 64
	4	[8651]	GETGLOBAL	R2 K2 ; R2 := 0x34291f5c
	5	[8651]	GETTABLE 	R2 R2 K3 ; R2 := R2[0xa7a2e381]
	6	[8651]	CALL     	R2 1 2 ; R2 := R2()
	7	[8651]	TEST     	R2 0 ; if not R2 then PC := 39
	8	[8651]	JMP      	39 ; PC := 39
	9	[8653]	LOADK    	R2 K0 ; R2 := ""
	10	[8654]	EQ       	0 R0 K4 ; if R0 ~= "firewall" then PC := 14
	11	[8654]	JMP      	14 ; PC := 14
	12	[8655]	LOADK    	R2 K5 ; R2 := "https://kf.qq.com/faq/201107VJry2m201107A3YJvA.html"
	13	[8655]	JMP      	33 ; PC := 33
	14	[8656]	EQ       	0 R0 K6 ; if R0 ~= "dnsfailure" then PC := 18
	15	[8656]	JMP      	18 ; PC := 18
	16	[8657]	LOADK    	R2 K7 ; R2 := "https://kf.qq.com/faq/201107Vb2uiA201107JNBZbq.html"
	17	[8657]	JMP      	33 ; PC := 33
	18	[8658]	EQ       	0 R0 K8 ; if R0 ~= "strictNAT" then PC := 22
	19	[8658]	JMP      	22 ; PC := 22
	20	[8659]	LOADK    	R2 K9 ; R2 := "https://kf.qq.com/faq/201107zmeaQz201107MZv22I.html"
	21	[8659]	JMP      	33 ; PC := 33
	22	[8660]	EQ       	0 R0 K10 ; if R0 ~= "upnpnotdetected" then PC := 26
	23	[8660]	JMP      	26 ; PC := 26
	24	[8661]	LOADK    	R2 K11 ; R2 := "https://kf.qq.com/faq/201107N77bYJ201107VvUzqQ.html"
	25	[8661]	JMP      	33 ; PC := 33
	26	[8662]	EQ       	0 R0 K12 ; if R0 ~= "upnpenabled" then PC := 30
	27	[8662]	JMP      	30 ; PC := 30
	28	[8663]	LOADK    	R2 K13 ; R2 := "https://kf.qq.com/faq/201107b22QBR201107mYR32Q.html"
	29	[8663]	JMP      	33 ; PC := 33
	30	[8664]	EQ       	0 R0 K14 ; if R0 ~= "portinuse" then PC := 33
	31	[8664]	JMP      	33 ; PC := 33
	32	[8665]	LOADK    	R2 K15 ; R2 := "https://wf.qq.com/newsDetail.shtml?tid=13969838"
	33	[8668]	EQ       	0 R2 K0 ; if R2 ~= "" then PC := 64
	34	[8668]	JMP      	64 ; PC := 64
	35	[8669]	LOADK    	R3 K16 ; R3 := "https://warframe.com/zh-hans/"
	36	[8669]	MOVE     	R4 R0 ; R4 := R0
	37	[8669]	CONCAT   	R2 R3 R4 ; R2 := R3 .. R4
	38	[8670]	JMP      	64 ; PC := 64
	39	[8672]	GETGLOBAL	R3 K17 ; R3 := 0x64fb1586
	40	[8672]	GETGLOBAL	R4 K18 ; R4 := 0x67513231
	41	[8672]	CALL     	R4 1 0 ; R4,... := R4()
	42	[8672]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	43	[8673]	SELF     	R4 R3 K19 ; R5 := R3; R4 := R3[0x1a94c9cc]
	44	[8673]	LOADK    	R6 := 2.000000
	45	[8673]	LEN      	R7 R3 ; R7 := # R3
	46	[8673]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	47	[8673]	MOVE     	R3 R4 ; R3 := R4
	48	[8674]	EQ       	0 R3 K20 ; if R3 ~= "pt" then PC := 52
	49	[8674]	JMP      	52 ; PC := 52
	50	[8675]	LOADK    	R3 K21 ; R3 := "pt-br"
	51	[8675]	JMP      	59 ; PC := 59
	52	[8676]	EQ       	0 R3 K22 ; if R3 ~= "zh" then PC := 56
	53	[8676]	JMP      	56 ; PC := 56
	54	[8677]	LOADK    	R3 K23 ; R3 := "zh-hans"
	55	[8677]	JMP      	59 ; PC := 59
	56	[8678]	EQ       	0 R3 K24 ; if R3 ~= "tc" then PC := 59
	57	[8678]	JMP      	59 ; PC := 59
	58	[8679]	LOADK    	R3 K25 ; R3 := "zh-hant"
	59	[8682]	LOADK    	R4 K26 ; R4 := "https://warframe.com/"
	60	[8682]	MOVE     	R5 R3 ; R5 := R3
	61	[8682]	LOADK    	R6 K27 ; R6 := "/"
	62	[8682]	MOVE     	R7 R0 ; R7 := R0
	63	[8682]	CONCAT   	R1 R4 R7 ; R1 := R4 .. R5 .. R6 .. R7
	64	[8686]	RETURN   	R1 2 ; return R1 
	65	[8687]	RETURN   	R0 1 ; return 

function #398 <?:8689,8707> (32 instructions, 128 bytes at 00000160C6855120)
4 params, 9 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[8690]	SELF     	R4 R0 K0 ; R5 := R0; R4 := R0[0x10ba8e3e]
	2	[8690]	CALL     	R4 2 2 ; R4 := R4(R5)
	3	[8690]	TEST     	R4 0 ; if not R4 then PC := 8
	4	[8690]	JMP      	8 ; PC := 8
	5	[8691]	OP_LOADBOOL	R4 1 0 ; R4 := true
	6	[8691]	RETURN   	R4 2 ; return R4 
	7	[8691]	JMP      	32 ; PC := 32
	8	[8693]	SELF     	R4 R0 K1 ; R5 := R0; R4 := R0[0x59e42e1b]
	9	[8693]	CALL     	R4 2 2 ; R4 := R4(R5)
	10	[8693]	SELF     	R4 R4 K2 ; R5 := R4; R4 := R4[0xc348fceb]
	11	[8693]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[8694]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	13	[8694]	MOVE     	R6 R4 ; R6 := R4
	14	[8694]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[8694]	NOT      	R5 R5 ; R5 := not R5
	16	[8695]	TEST     	R5 0 ; if not R5 then PC := 31
	17	[8695]	JMP      	31 ; PC := 31
	18	[8695]	TEST     	R1 0 ; if not R1 then PC := 31
	19	[8695]	JMP      	31 ; PC := 31
	20	[8696]	TEST     	R2 0 ; if not R2 then PC := 25
	21	[8696]	JMP      	25 ; PC := 25
	22	[8697]	SELF     	R6 R4 K4 ; R7 := R4; R6 := R4[0xf4e253b6]
	23	[8697]	CALL     	R6 2 1 ; R6(R7)
	24	[8697]	JMP      	31 ; PC := 31
	25	[8699]	EQ       	0 R3 K5 ; if R3 ~= nil then PC := 28
	26	[8699]	JMP      	28 ; PC := 28
	27	[8700]	OP_LOADBOOL	R3 0 0 ; R3 := false
	28	[8702]	SELF     	R6 R0 K6 ; R7 := R0; R6 := R0[0x32424799]
	29	[8702]	MOVE     	R8 R3 ; R8 := R3
	30	[8702]	CALL     	R6 3 1 ; R6(R7,R8)
	31	[8705]	RETURN   	R5 2 ; return R5 
	32	[8707]	RETURN   	R0 1 ; return 

function #399 <?:8709,8715> (15 instructions, 60 bytes at 00000160C6855350)
1 param, 4 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[8710]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8710]	MOVE     	R2 R0 ; R2 := R0
	3	[8710]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[8710]	TEST     	R1 1 ; if R1 then PC := 11
	5	[8710]	JMP      	11 ; PC := 11
	6	[8710]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xf2deaf69]
	7	[8710]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[8710]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	9	[8710]	TEST     	R1 0 ; if not R1 then PC := 13
	10	[8710]	JMP      	13 ; PC := 13
	11	[8711]	OP_LOADBOOL	R1 1 0 ; R1 := true
	12	[8711]	RETURN   	R1 2 ; return R1 
	13	[8714]	OP_LOADBOOL	R1 0 0 ; R1 := false
	14	[8714]	RETURN   	R1 2 ; return R1 
	15	[8715]	RETURN   	R0 1 ; return 

function #400 <?:8717,8747> (72 instructions, 288 bytes at 00000160C68554B0)
0 params, 16 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[8719]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[8719]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xd7d79b74]
	3	[8719]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8720]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	5	[8720]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x78298275]
	6	[8720]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[8721]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[8721]	CALL     	R2 1 4 ; R2,R3,R4 := R2()
	9	[8722]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	10	[8722]	MOVE     	R6 R0 ; R6 := R0
	11	[8722]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[8722]	TEST     	R5 1 ; if R5 then PC := 22
	13	[8722]	JMP      	22 ; PC := 22
	14	[8722]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	15	[8722]	SELF     	R6 R0 K5 ; R7 := R0; R6 := R0[0x973c5b4d]
	16	[8722]	SELF     	R8 R1 K6 ; R9 := R1; R8 := R1[0xe79e7ef4]
	17	[8722]	CALL     	R8 2 0 ; R8,... := R8(R9)
	18	[8722]	CALL     	R6 0 0 ; R6,... := R6(R7,...)
	19	[8722]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	20	[8722]	NOT      	R5 R5 ; R5 := not R5
	21	[8722]	JMP      	24 ; PC := 24
	22	[8722]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 23
	23	[8722]	OP_LOADBOOL	R5 1 0 ; R5 := true
	24	[8723]	TEST     	R5 1 ; if R5 then PC := 31
	25	[8723]	JMP      	31 ; PC := 31
	26	[8723]	GETGLOBAL	R6 K0 ; R6 := 0xbe190284
	27	[8723]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x99f38c13]
	28	[8723]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[8723]	TEST     	R6 0 ; if not R6 then PC := 33
	30	[8723]	JMP      	33 ; PC := 33
	31	[8724]	OP_LOADBOOL	R6 0 0 ; R6 := false
	32	[8724]	RETURN   	R6 2 ; return R6 
	33	[8727]	GETGLOBAL	R6 K4 ; R6 := 0x7b998233
	34	[8727]	GETGLOBAL	R7 K8 ; R7 := 0x25d99d89
	35	[8727]	CALL     	R6 2 2 ; R6 := R6(R7)
	36	[8727]	TEST     	R6 1 ; if R6 then PC := 66
	37	[8727]	JMP      	66 ; PC := 66
	38	[8728]	OP_LOADBOOL	R6 0 0 ; R6 := false
	39	[8729]	GETGLOBAL	R7 K8 ; R7 := 0x25d99d89
	40	[8729]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0x911c6241]
	41	[8729]	OP_LOADBOOL	R9 1 0 ; R9 := true
	42	[8729]	MOVE     	R10 R4 ; R10 := R4
	43	[8729]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	44	[8730]	LOADK    	R8 := 1.000000
	45	[8730]	LEN      	R9 R7 ; R9 := # R7
	46	[8730]	LOADK    	R10 := 1.000000
	47	[8730]	FORPREP  	R8 61 ; R8 -= R10; PC := 61
	48	[8731]	GETTABLE 	R12 R7 R11 ; R12 := R7[R11]
	49	[8732]	GETTABLE 	R13 R12 K10 ; R13 := R12["mName"]
	50	[8732]	EQ       	0 R13 R2 ; if R13 ~= R2 then PC := 61
	51	[8732]	JMP      	61 ; PC := 61
	52	[8733]	GETTABLE 	R13 R7 R11 ; R13 := R7[R11]
	53	[8733]	GETTABLE 	R13 R13 K11 ; R13 := R13["mPlacedDecos"]
	54	[8733]	LEN      	R13 R13 ; R13 := # R13
	55	[8733]	EQ       	0 R13 K12 ; if R13 ~= 0.000000 then PC := 59
	56	[8733]	JMP      	59 ; PC := 59
	57	[8734]	OP_LOADBOOL	R13 0 0 ; R13 := false
	58	[8734]	RETURN   	R13 2 ; return R13 
	59	[8737]	OP_LOADBOOL	R6 1 0 ; R6 := true
	60	[8738]	JMP      	62 ; PC := 62
	61	[8730]	FORLOOP  	R8 48 ; R8 += R10; if R8 <= R9 then begin PC := 48; R11 := R8 end
	62	[8742]	TEST     	R6 1 ; if R6 then PC := 66
	63	[8742]	JMP      	66 ; PC := 66
	64	[8743]	OP_LOADBOOL	R13 0 0 ; R13 := false
	65	[8743]	RETURN   	R13 2 ; return R13 
	66	[8746]	GETGLOBAL	R13 K0 ; R13 := 0xbe190284
	67	[8746]	SELF     	R13 R13 K13 ; R14 := R13; R13 := R13[0xf2deaf69]
	68	[8746]	GETGLOBAL	R15 K14 ; R15 := gLotusConclaveGameRulesType
	69	[8746]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	70	[8746]	NOT      	R13 R13 ; R13 := not R13
	71	[8746]	RETURN   	R13 2 ; return R13 
	72	[8747]	RETURN   	R0 1 ; return 

function #401 <?:8749,8825> (220 instructions, 880 bytes at 00000160C68558E0)
1 param, 28 slots, 1 upvalue, 0 locals, 46 constants, 0 functions
	1	[8750]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8750]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	3	[8750]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[8750]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[8750]	JMP      	8 ; PC := 8
	6	[8751]	LOADK    	R1 K2 ; R1 := ""
	7	[8751]	RETURN   	R1 2 ; return R1 
	8	[8754]	TESTSET  	R1 R0 1 ; if R0 then PC := 13 else R1 := R0 
	9	[8754]	JMP      	13 ; PC := 13
	10	[8754]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	11	[8754]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xef893aec]
	12	[8754]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[8755]	GETTABLE 	R2 R1 K4 ; R2 := R1["location"]
	14	[8756]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	15	[8756]	MOVE     	R4 R2 ; R4 := R2
	16	[8756]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[8757]	MOVE     	R4 R3 ; R4 := R3
	18	[8759]	GETUPVAL 	R5 U0 ; R5 := U0
	19	[8759]	CALL     	R5 1 2 ; R5 := R5()
	20	[8760]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	21	[8760]	MOVE     	R7 R5 ; R7 := R5
	22	[8760]	CALL     	R6 2 2 ; R6 := R6(R7)
	23	[8760]	TEST     	R6 1 ; if R6 then PC := 34
	24	[8760]	JMP      	34 ; PC := 34
	25	[8761]	GETGLOBAL	R6 K6 ; R6 := 0x603636ad
	26	[8761]	SELF     	R7 R5 K7 ; R8 := R5; R7 := R5[0xbf3618ac]
	27	[8761]	MOVE     	R9 R2 ; R9 := R2
	28	[8761]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	29	[8761]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x6d604ba7]
	30	[8761]	CALL     	R7 2 2 ; R7 := R7(R8)
	31	[8761]	OP_LOADBOOL	R8 0 0 ; R8 := false
	32	[8761]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	33	[8761]	MOVE     	R4 R6 ; R4 := R6
	34	[8764]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	35	[8764]	GETGLOBAL	R7 K9 ; R7 := 0x25d99d89
	36	[8764]	CALL     	R6 2 2 ; R6 := R6(R7)
	37	[8764]	TEST     	R6 1 ; if R6 then PC := 144
	38	[8764]	JMP      	144 ; PC := 144
	39	[8765]	GETGLOBAL	R6 K9 ; R6 := 0x25d99d89
	40	[8765]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0x69727e0b]
	41	[8765]	CALL     	R6 2 2 ; R6 := R6(R7)
	42	[8766]	LOADK    	R7 := 1.000000
	43	[8766]	GETTABLE 	R8 R6 K11 ; R8 := R6["mGoals"]
	44	[8766]	LEN      	R8 R8 ; R8 := # R8
	45	[8766]	LOADK    	R9 := 1.000000
	46	[8766]	FORPREP  	R7 114 ; R7 -= R9; PC := 114
	47	[8767]	GETTABLE 	R11 R6 K11 ; R11 := R6["mGoals"]
	48	[8767]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	49	[8768]	GETTABLE 	R12 R11 K12 ; R12 := R11["mId"]
	50	[8768]	GETTABLE 	R12 R12 K12 ; R12 := R12["mId"]
	51	[8768]	GETTABLE 	R13 R1 K13 ; R13 := R1["goalId"]
	52	[8768]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 114
	53	[8768]	JMP      	114 ; PC := 114
	54	[8769]	GETTABLE 	R12 R11 K14 ; R12 := R11["mNode"]
	55	[8769]	EQ       	1 R12 K2 ; if R12 == "" then PC := 67
	56	[8769]	JMP      	67 ; PC := 67
	57	[8769]	GETTABLE 	R12 R11 K14 ; R12 := R11["mNode"]
	58	[8769]	EQ       	0 R12 R3 ; if R12 ~= R3 then PC := 67
	59	[8769]	JMP      	67 ; PC := 67
	60	[8770]	GETGLOBAL	R12 K6 ; R12 := 0x603636ad
	61	[8770]	GETTABLE 	R13 R11 K15 ; R13 := R11["mDesc"]
	62	[8770]	OP_LOADBOOL	R14 0 0 ; R14 := false
	63	[8770]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	64	[8770]	MOVE     	R4 R12 ; R4 := R12
	65	[8771]	JMP      	115 ; PC := 115
	66	[8771]	JMP      	114 ; PC := 114
	67	[8773]	OP_LOADBOOL	R12 0 0 ; R12 := false
	68	[8774]	LOADK    	R13 := 1.000000
	69	[8774]	GETTABLE 	R14 R11 K16 ; R14 := R11["mConcurrentNodes"]
	70	[8774]	LEN      	R14 R14 ; R14 := # R14
	71	[8774]	LOADK    	R15 := 1.000000
	72	[8774]	FORPREP  	R13 110 ; R13 -= R15; PC := 110
	73	[8775]	GETTABLE 	R17 R11 K16 ; R17 := R11["mConcurrentNodes"]
	74	[8775]	GETTABLE 	R17 R17 R16 ; R17 := R17[R16]
	75	[8775]	EQ       	1 R17 K2 ; if R17 == "" then PC := 110
	76	[8775]	JMP      	110 ; PC := 110
	77	[8775]	GETTABLE 	R17 R11 K16 ; R17 := R11["mConcurrentNodes"]
	78	[8775]	GETTABLE 	R17 R17 R16 ; R17 := R17[R16]
	79	[8775]	EQ       	0 R17 R3 ; if R17 ~= R3 then PC := 110
	80	[8775]	JMP      	110 ; PC := 110
	81	[8776]	GETGLOBAL	R17 K6 ; R17 := 0x603636ad
	82	[8776]	GETTABLE 	R18 R11 K15 ; R18 := R11["mDesc"]
	83	[8776]	OP_LOADBOOL	R19 0 0 ; R19 := false
	84	[8776]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	85	[8776]	MOVE     	R4 R17 ; R4 := R17
	86	[8777]	GETTABLE 	R17 R11 K17 ; R17 := R11["mConcurrentNodeReqs"]
	87	[8777]	LEN      	R17 R17 ; R17 := # R17
	88	[8777]	LE       	0 R16 R17 ; if R16 > R17 then PC := 108
	89	[8777]	JMP      	108 ; PC := 108
	90	[8777]	GETTABLE 	R17 R11 K17 ; R17 := R11["mConcurrentNodeReqs"]
	91	[8777]	GETTABLE 	R17 R17 R16 ; R17 := R17[R16]
	92	[8777]	GETTABLE 	R18 R11 K18 ; R18 := R11["mGoal"]
	93	[8777]	LE       	0 R18 R17 ; if R18 > R17 then PC := 108
	94	[8777]	JMP      	108 ; PC := 108
	95	[8777]	GETTABLE 	R17 R11 K19 ; R17 := R11["mTag"]
	96	[8777]	GETGLOBAL	R18 K20 ; R18 := 0x0469f296
	97	[8777]	LOADK    	R19 K21 ; R19 := "WaterFight"
	98	[8777]	CALL     	R18 2 2 ; R18 := R18(R19)
	99	[8777]	EQ       	1 R17 R18 ; if R17 == R18 then PC := 108
	100	[8777]	JMP      	108 ; PC := 108
	101	[8778]	MOVE     	R17 R4 ; R17 := R4
	102	[8778]	LOADK    	R18 K22 ; R18 := " "
	103	[8778]	GETGLOBAL	R19 K6 ; R19 := 0x603636ad
	104	[8778]	LOADK    	R20 K23 ; R20 := "/Lotus/Language/Menu/WorldStateChallengeMode"
	105	[8778]	OP_LOADBOOL	R21 0 0 ; R21 := false
	106	[8778]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	107	[8778]	CONCAT   	R4 R17 R19 ; R4 := R17 .. R18 .. R19
	108	[8780]	OP_LOADBOOL	R12 1 0 ; R12 := true
	109	[8781]	JMP      	111 ; PC := 111
	110	[8774]	FORLOOP  	R13 73 ; R13 += R15; if R13 <= R14 then begin PC := 73; R16 := R13 end
	111	[8784]	TEST     	R12 0 ; if not R12 then PC := 114
	112	[8784]	JMP      	114 ; PC := 114
	113	[8785]	JMP      	115 ; PC := 115
	114	[8766]	FORLOOP  	R7 47 ; R7 += R9; if R7 <= R8 then begin PC := 47; R10 := R7 end
	115	[8791]	GETTABLE 	R17 R1 K24 ; R17 := R1["alertId"]
	116	[8791]	EQ       	1 R17 K2 ; if R17 == "" then PC := 144
	117	[8791]	JMP      	144 ; PC := 144
	118	[8792]	LOADK    	R17 := 1.000000
	119	[8792]	GETTABLE 	R18 R6 K25 ; R18 := R6["mAlerts"]
	120	[8792]	LEN      	R18 R18 ; R18 := # R18
	121	[8792]	LOADK    	R19 := 1.000000
	122	[8792]	FORPREP  	R17 143 ; R17 -= R19; PC := 143
	123	[8793]	GETTABLE 	R21 R6 K25 ; R21 := R6["mAlerts"]
	124	[8793]	GETTABLE 	R21 R21 R20 ; R21 := R21[R20]
	125	[8794]	GETTABLE 	R22 R21 K12 ; R22 := R21["mId"]
	126	[8794]	GETTABLE 	R22 R22 K12 ; R22 := R22["mId"]
	127	[8794]	GETTABLE 	R23 R1 K24 ; R23 := R1["alertId"]
	128	[8794]	EQ       	0 R22 R23 ; if R22 ~= R23 then PC := 144
	129	[8794]	JMP      	144 ; PC := 144
	130	[8794]	GETTABLE 	R22 R21 K19 ; R22 := R21["mTag"]
	131	[8794]	GETGLOBAL	R23 K26 ; R23 := EMPTY_SYMBOL
	132	[8794]	EQ       	1 R22 R23 ; if R22 == R23 then PC := 144
	133	[8794]	JMP      	144 ; PC := 144
	134	[8795]	GETGLOBAL	R22 K6 ; R22 := 0x603636ad
	135	[8795]	GETGLOBAL	R23 K5 ; R23 := 0x64fb1586
	136	[8795]	GETTABLE 	R24 R21 K27 ; R24 := R21["mMissionInfo"]
	137	[8795]	GETTABLE 	R24 R24 K28 ; R24 := R24["descText"]
	138	[8795]	CALL     	R23 2 2 ; R23 := R23(R24)
	139	[8795]	OP_LOADBOOL	R24 0 0 ; R24 := false
	140	[8795]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	141	[8795]	MOVE     	R4 R22 ; R4 := R22
	142	[8797]	JMP      	144 ; PC := 144
	143	[8792]	FORLOOP  	R17 123 ; R17 += R19; if R17 <= R18 then begin PC := 123; R20 := R17 end
	144	[8802]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	145	[8802]	GETTABLE 	R23 R1 K29 ; R23 := R1["keyChainName"]
	146	[8802]	CALL     	R22 2 2 ; R22 := R22(R23)
	147	[8802]	TEST     	R22 0 ; if not R22 then PC := 151
	148	[8802]	JMP      	151 ; PC := 151
	149	[8802]	EQ       	0 R4 K2 ; if R4 ~= "" then PC := 167
	150	[8802]	JMP      	167 ; PC := 167
	151	[8803]	GETGLOBAL	R22 K30 ; R22 := 0xb009bbc6
	152	[8803]	GETTABLE 	R23 R1 K31 ; R23 := R1["levelKeyName"]
	153	[8803]	CALL     	R22 2 2 ; R22 := R22(R23)
	154	[8804]	GETGLOBAL	R23 K0 ; R23 := 0x7b998233
	155	[8804]	MOVE     	R24 R22 ; R24 := R22
	156	[8804]	CALL     	R23 2 2 ; R23 := R23(R24)
	157	[8804]	TEST     	R23 1 ; if R23 then PC := 167
	158	[8804]	JMP      	167 ; PC := 167
	159	[8805]	SELF     	R23 R22 K32 ; R24 := R22; R23 := R22[0xd3a9d01f]
	160	[8805]	CALL     	R23 2 2 ; R23 := R23(R24)
	161	[8806]	GETGLOBAL	R24 K6 ; R24 := 0x603636ad
	162	[8806]	SELF     	R25 R23 K8 ; R26 := R23; R25 := R23[0x6d604ba7]
	163	[8806]	CALL     	R25 2 2 ; R25 := R25(R26)
	164	[8806]	OP_LOADBOOL	R26 0 0 ; R26 := false
	165	[8806]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	166	[8806]	MOVE     	R4 R24 ; R4 := R24
	167	[8810]	EQ       	0 R4 K2 ; if R4 ~= "" then PC := 202
	168	[8810]	JMP      	202 ; PC := 202
	169	[8810]	GETGLOBAL	R24 K0 ; R24 := 0x7b998233
	170	[8810]	GETTABLE 	R25 R1 K33 ; R25 := R1["levelOverride"]
	171	[8810]	CALL     	R24 2 2 ; R24 := R24(R25)
	172	[8810]	TEST     	R24 1 ; if R24 then PC := 202
	173	[8810]	JMP      	202 ; PC := 202
	174	[8812]	GETTABLE 	R24 R1 K33 ; R24 := R1["levelOverride"]
	175	[8812]	SELF     	R24 R24 K34 ; R25 := R24; R24 := R24[0xed4e0128]
	176	[8812]	CALL     	R24 2 2 ; R24 := R24(R25)
	177	[8813]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	178	[8813]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	179	[8813]	MOVE     	R26 R24 ; R26 := R24
	180	[8813]	LOADK    	R27 K37 ; R27 := "Derelict"
	181	[8813]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	182	[8813]	TEST     	R25 0 ; if not R25 then PC := 190
	183	[8813]	JMP      	190 ; PC := 190
	184	[8814]	GETGLOBAL	R25 K6 ; R25 := 0x603636ad
	185	[8814]	LOADK    	R26 K38 ; R26 := "/Lotus/Language/Locations/Derelict"
	186	[8814]	OP_LOADBOOL	R27 0 0 ; R27 := false
	187	[8814]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	188	[8814]	MOVE     	R4 R25 ; R4 := R25
	189	[8814]	JMP      	202 ; PC := 202
	190	[8815]	GETGLOBAL	R25 K35 ; R25 := 0x7f5022cf
	191	[8815]	GETTABLE 	R25 R25 K36 ; R25 := R25[0xa5c556b9]
	192	[8815]	MOVE     	R26 R24 ; R26 := R24
	193	[8815]	LOADK    	R27 K39 ; R27 := "OrokinTower"
	194	[8815]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	195	[8815]	TEST     	R25 0 ; if not R25 then PC := 202
	196	[8815]	JMP      	202 ; PC := 202
	197	[8816]	GETGLOBAL	R25 K6 ; R25 := 0x603636ad
	198	[8816]	LOADK    	R26 K40 ; R26 := "/Lotus/Language/Locations/Void"
	199	[8816]	OP_LOADBOOL	R27 0 0 ; R27 := false
	200	[8816]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	201	[8816]	MOVE     	R4 R25 ; R4 := R25
	202	[8820]	GETGLOBAL	R25 K1 ; R25 := 0xbe190284
	203	[8820]	SELF     	R25 R25 K41 ; R26 := R25; R25 := R25[0xf2deaf69]
	204	[8820]	GETGLOBAL	R27 K42 ; R27 := gLotusBaseGameRulesType
	205	[8820]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	206	[8820]	TEST     	R25 0 ; if not R25 then PC := 219
	207	[8820]	JMP      	219 ; PC := 219
	208	[8820]	GETGLOBAL	R25 K1 ; R25 := 0xbe190284
	209	[8820]	SELF     	R25 R25 K43 ; R26 := R25; R25 := R25[0x71595d3a]
	210	[8820]	CALL     	R25 2 2 ; R25 := R25(R26)
	211	[8820]	TEST     	R25 0 ; if not R25 then PC := 219
	212	[8820]	JMP      	219 ; PC := 219
	213	[8821]	GETGLOBAL	R25 K6 ; R25 := 0x603636ad
	214	[8821]	LOADK    	R26 K44 ; R26 := "/Lotus/Language/Game/MissionName_Badlands"
	215	[8821]	NEWTABLE 	R27 0 1 ; R27 := {}
	216	[8821]	SETTABLE 	R27 K45 R4 ; R27["MISSION_NAME"] := R4
	217	[8821]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	218	[8821]	MOVE     	R4 R25 ; R4 := R25
	219	[8824]	RETURN   	R4 2 ; return R4 
	220	[8825]	RETURN   	R0 1 ; return 

function #402 <?:8827,8847> (50 instructions, 200 bytes at 00000160C6856620)
0 params, 6 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[8828]	GETGLOBAL	R0 K0 ; R0 := 0x0469f296
	2	[8828]	LOADK    	R1 K1 ; R1 := "TeshinHardModeUnlocked"
	3	[8828]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8830]	OP_LOADBOOL	R1 0 0 ; R1 := false
	5	[8830]	TEST     	R1 0 ; if not R1 then PC := 12
	6	[8830]	JMP      	12 ; PC := 12
	7	[8830]	OP_LOADBOOL	R1 0 0 ; R1 := false
	8	[8830]	TEST     	R1 0 ; if not R1 then PC := 12
	9	[8830]	JMP      	12 ; PC := 12
	10	[8831]	OP_LOADBOOL	R1 1 0 ; R1 := true
	11	[8831]	RETURN   	R1 2 ; return R1 
	12	[8834]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	13	[8834]	GETGLOBAL	R2 K3 ; R2 := 0x25d99d89
	14	[8834]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[8834]	TEST     	R1 1 ; if R1 then PC := 23
	16	[8834]	JMP      	23 ; PC := 23
	17	[8835]	GETGLOBAL	R1 K3 ; R1 := 0x25d99d89
	18	[8835]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x21a1810f]
	19	[8835]	MOVE     	R3 R0 ; R3 := R0
	20	[8835]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	21	[8835]	RETURN   	R1 2 ; return R1 
	22	[8835]	JMP      	48 ; PC := 48
	23	[8836]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	24	[8836]	GETGLOBAL	R2 K5 ; R2 := 0x76ea806b
	25	[8836]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[8836]	TEST     	R1 1 ; if R1 then PC := 48
	27	[8836]	JMP      	48 ; PC := 48
	28	[8837]	GETGLOBAL	R1 K5 ; R1 := 0x76ea806b
	29	[8837]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x3f3ae64c]
	30	[8837]	LOADK    	R3 := 0.000000
	31	[8837]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	32	[8838]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	33	[8838]	MOVE     	R3 R1 ; R3 := R1
	34	[8838]	CALL     	R2 2 2 ; R2 := R2(R3)
	35	[8838]	TEST     	R2 1 ; if R2 then PC := 48
	36	[8838]	JMP      	48 ; PC := 48
	37	[8839]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0x80563238]
	38	[8839]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[8840]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	40	[8840]	MOVE     	R4 R2 ; R4 := R2
	41	[8840]	CALL     	R3 2 2 ; R3 := R3(R4)
	42	[8840]	TEST     	R3 1 ; if R3 then PC := 48
	43	[8840]	JMP      	48 ; PC := 48
	44	[8841]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x21a1810f]
	45	[8841]	MOVE     	R5 R0 ; R5 := R0
	46	[8841]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	47	[8841]	RETURN   	R3 2 ; return R3 
	48	[8846]	OP_LOADBOOL	R3 0 0 ; R3 := false
	49	[8846]	RETURN   	R3 2 ; return R3 
	50	[8847]	RETURN   	R0 1 ; return 

function #403 <?:8850,8877> (59 instructions, 236 bytes at 00000160C6856940)
3 params, 14 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[8851]	GETGLOBAL	R3 K0 ; R3 := 0xce225efa
	2	[8851]	LOADK    	R4 := 0.000000
	3	[8851]	CALL     	R3 2 1 ; R3(R4)
	4	[8852]	TEST     	R2 0 ; if not R2 then PC := 13
	5	[8852]	JMP      	13 ; PC := 13
	6	[8853]	GETGLOBAL	R3 K1 ; R3 := 0x3d106989
	7	[8853]	LOADK    	R4 K2 ; R4 := "GetRegionSectorForNode "
	8	[8853]	GETGLOBAL	R5 K3 ; R5 := 0x64fb1586
	9	[8853]	MOVE     	R6 R1 ; R6 := R1
	10	[8853]	CALL     	R5 2 2 ; R5 := R5(R6)
	11	[8853]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	12	[8853]	CALL     	R3 2 1 ; R3(R4)
	13	[8856]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	14	[8856]	MOVE     	R4 R0 ; R4 := R0
	15	[8856]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[8856]	TEST     	R3 1 ; if R3 then PC := 20
	17	[8856]	JMP      	20 ; PC := 20
	18	[8856]	EQ       	0 R1 K5 ; if R1 ~= nil then PC := 22
	19	[8856]	JMP      	22 ; PC := 22
	20	[8857]	LOADNIL  	R3 R4 ; R3 := R4 := nil
	21	[8857]	RETURN   	R3 3 ; return R3, R4 
	22	[8860]	SELF     	R3 R0 K6 ; R4 := R0; R3 := R0[0x5484bf3c]
	23	[8860]	MOVE     	R5 R1 ; R5 := R1
	24	[8860]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	25	[8861]	TEST     	R3 0 ; if not R3 then PC := 57
	26	[8861]	JMP      	57 ; PC := 57
	27	[8862]	LOADK    	R4 := 1.000000
	28	[8862]	GETTABLE 	R5 R3 K7 ; R5 := R3["sectors"]
	29	[8862]	LEN      	R5 R5 ; R5 := # R5
	30	[8862]	LOADK    	R6 := 1.000000
	31	[8862]	FORPREP  	R4 56 ; R4 -= R6; PC := 56
	32	[8863]	GETTABLE 	R8 R3 K7 ; R8 := R3["sectors"]
	33	[8863]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	34	[8864]	GETTABLE 	R9 R8 K8 ; R9 := R8["name"]
	35	[8864]	EQ       	0 R9 R1 ; if R9 ~= R1 then PC := 56
	36	[8864]	JMP      	56 ; PC := 56
	37	[8865]	SELF     	R9 R0 K9 ; R10 := R0; R9 := R0[0xc18bf6f0]
	38	[8865]	GETTABLE 	R11 R8 K8 ; R11 := R8["name"]
	39	[8865]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	40	[8866]	TEST     	R2 0 ; if not R2 then PC := 52
	41	[8866]	JMP      	52 ; PC := 52
	42	[8867]	GETGLOBAL	R10 K1 ; R10 := 0x3d106989
	43	[8867]	LOADK    	R11 K10 ; R11 := "Found sector mission"
	44	[8867]	CALL     	R10 2 1 ; R10(R11)
	45	[8868]	GETGLOBAL	R10 K1 ; R10 := 0x3d106989
	46	[8868]	LOADK    	R11 K11 ; R11 := "Unique name: "
	47	[8868]	GETGLOBAL	R12 K3 ; R12 := 0x64fb1586
	48	[8868]	GETTABLE 	R13 R9 K12 ; R13 := R9["uniqueName"]
	49	[8868]	CALL     	R12 2 2 ; R12 := R12(R13)
	50	[8868]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	51	[8868]	CALL     	R10 2 1 ; R10(R11)
	52	[8871]	MOVE     	R10 R3 ; R10 := R3
	53	[8871]	MOVE     	R11 R8 ; R11 := R8
	54	[8871]	MOVE     	R12 R9 ; R12 := R9
	55	[8871]	RETURN   	R10 4 ; return R10, R11, R12 
	56	[8862]	FORLOOP  	R4 32 ; R4 += R6; if R4 <= R5 then begin PC := 32; R7 := R4 end
	57	[8876]	LOADNIL  	R10 R11 ; R10 := R11 := nil
	58	[8876]	RETURN   	R10 3 ; return R10, R11 
	59	[8877]	RETURN   	R0 1 ; return 

function #404 <?:8879,9256> (1148 instructions, 4592 bytes at 00000160C6856D70)
3 params, 77 slots, 6 upvalues, 0 locals, 172 constants, 0 functions
	1	[8880]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[8880]	MOVE     	R4 R1 ; R4 := R1
	3	[8880]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[8880]	TEST     	R3 1 ; if R3 then PC := 1146
	5	[8880]	JMP      	1146 ; PC := 1146
	6	[8880]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	7	[8880]	GETTABLE 	R4 R1 K1 ; R4 := R1["name"]
	8	[8880]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[8880]	TEST     	R3 1 ; if R3 then PC := 1146
	10	[8880]	JMP      	1146 ; PC := 1146
	11	[8881]	GETGLOBAL	R3 K2 ; R3 := 0x64fb1586
	12	[8881]	GETTABLE 	R4 R1 K1 ; R4 := R1["name"]
	13	[8881]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[8882]	GETTABLE 	R4 R1 K3 ; R4 := R1["baseNodeName"]
	15	[8883]	GETTABLE 	R5 R1 K4 ; R5 := R1["hubMission"]
	16	[8883]	TEST     	R5 0 ; if not R5 then PC := 37
	17	[8883]	JMP      	37 ; PC := 37
	18	[8884]	GETTABLE 	R5 R1 K4 ; R5 := R1["hubMission"]
	19	[8885]	GETGLOBAL	R6 K5 ; R6 := 0x7f5022cf
	20	[8885]	GETTABLE 	R6 R6 K6 ; R6 := R6[0xa5c556b9]
	21	[8885]	MOVE     	R7 R5 ; R7 := R5
	22	[8885]	GETGLOBAL	R8 K7 ; R8 := HARD_MODE_TAG
	23	[8885]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	24	[8886]	EQ       	1 R6 K8 ; if R6 == nil then PC := 33
	25	[8886]	JMP      	33 ; PC := 33
	26	[8887]	GETGLOBAL	R7 K5 ; R7 := 0x7f5022cf
	27	[8887]	GETTABLE 	R7 R7 K9 ; R7 := R7[0x1a94c9cc]
	28	[8887]	MOVE     	R8 R5 ; R8 := R5
	29	[8887]	LOADK    	R9 := 1.000000
	30	[8887]	SUB      	R10 R6 K10 ; R10 := R6 - 1.000000
	31	[8887]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	32	[8887]	MOVE     	R5 R7 ; R5 := R7
	33	[8889]	GETGLOBAL	R7 K11 ; R7 := 0x0469f296
	34	[8889]	MOVE     	R8 R5 ; R8 := R5
	35	[8889]	CALL     	R7 2 2 ; R7 := R7(R8)
	36	[8889]	MOVE     	R4 R7 ; R4 := R7
	37	[8891]	GETUPVAL 	R7 U0 ; R7 := U0
	38	[8891]	MOVE     	R8 R0 ; R8 := R0
	39	[8891]	MOVE     	R9 R4 ; R9 := R4
	40	[8891]	MOVE     	R10 R2 ; R10 := R2
	41	[8891]	CALL     	R7 4 4 ; R7,R8,R9 := R7(R8,R9,R10)
	42	[8893]	LOADNIL  	R10 R13 ; R10 := R11 := R12 := R13 := nil
	43	[8897]	OP_LOADBOOL	R14 0 0 ; R14 := false
	44	[8898]	OP_LOADBOOL	R15 0 0 ; R15 := false
	45	[8899]	OP_LOADBOOL	R16 0 0 ; R16 := false
	46	[8901]	TEST     	R8 0 ; if not R8 then PC := 957
	47	[8901]	JMP      	957 ; PC := 957
	48	[8902]	TEST     	R2 0 ; if not R2 then PC := 62
	49	[8902]	JMP      	62 ; PC := 62
	50	[8903]	GETGLOBAL	R17 K12 ; R17 := 0x3d106989
	51	[8903]	LOADK    	R18 K13 ; R18 := "Sector: "
	52	[8903]	GETGLOBAL	R19 K2 ; R19 := 0x64fb1586
	53	[8903]	GETTABLE 	R20 R8 K1 ; R20 := R8["name"]
	54	[8903]	CALL     	R19 2 2 ; R19 := R19(R20)
	55	[8903]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	56	[8903]	CALL     	R17 2 1 ; R17(R18)
	57	[8904]	GETGLOBAL	R17 K12 ; R17 := 0x3d106989
	58	[8904]	LOADK    	R18 K14 ; R18 := "Pending mission: "
	59	[8904]	MOVE     	R19 R3 ; R19 := R3
	60	[8904]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	61	[8904]	CALL     	R17 2 1 ; R17(R18)
	62	[8907]	GETGLOBAL	R17 K5 ; R17 := 0x7f5022cf
	63	[8907]	GETTABLE 	R17 R17 K6 ; R17 := R17[0xa5c556b9]
	64	[8907]	MOVE     	R18 R3 ; R18 := R3
	65	[8907]	GETGLOBAL	R19 K15 ; R19 := ALERT_TAG
	66	[8907]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	67	[8907]	TEST     	R17 0 ; if not R17 then PC := 130
	68	[8907]	JMP      	130 ; PC := 130
	69	[8908]	GETGLOBAL	R17 K16 ; R17 := _T
	70	[8908]	GETTABLE 	R17 R17 K17 ; R17 := R17["CachedAlerts"]
	71	[8908]	TEST     	R17 0 ; if not R17 then PC := 782
	72	[8908]	JMP      	782 ; PC := 782
	73	[8910]	GETGLOBAL	R17 K16 ; R17 := _T
	74	[8910]	GETTABLE 	R17 R17 K17 ; R17 := R17["CachedAlerts"]
	75	[8910]	GETGLOBAL	R18 K2 ; R18 := 0x64fb1586
	76	[8910]	GETTABLE 	R19 R1 K3 ; R19 := R1["baseNodeName"]
	77	[8910]	CALL     	R18 2 2 ; R18 := R18(R19)
	78	[8910]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	79	[8911]	TEST     	R17 0 ; if not R17 then PC := 782
	80	[8911]	JMP      	782 ; PC := 782
	81	[8912]	GETTABLE 	R18 R17 K18 ; R18 := R17["mAlertInfo"]
	82	[8912]	GETTABLE 	R10 R18 K19 ; R10 := R18["mMissionInfo"]
	83	[8913]	GETTABLE 	R18 R17 K18 ; R18 := R17["mAlertInfo"]
	84	[8913]	GETTABLE 	R18 R18 K21 ; R18 := R18["mId"]
	85	[8913]	GETTABLE 	R18 R18 K21 ; R18 := R18["mId"]
	86	[8913]	SETTABLE 	R10 K20 R18 ; R10["alertId"] := R18
	87	[8914]	GETGLOBAL	R18 K22 ; R18 := 0x603636ad
	88	[8914]	LOADK    	R19 K23 ; R19 := "/Lotus/Language/Menu/Notification_Alert"
	89	[8914]	LOADNIL  	R20 R20 ; R20 := nil
	90	[8914]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	91	[8914]	MOVE     	R12 R18 ; R12 := R18
	92	[8916]	GETGLOBAL	R18 K2 ; R18 := 0x64fb1586
	93	[8916]	GETTABLE 	R19 R1 K3 ; R19 := R1["baseNodeName"]
	94	[8916]	CALL     	R18 2 2 ; R18 := R18(R19)
	95	[8917]	GETGLOBAL	R19 K16 ; R19 := _T
	96	[8917]	GETTABLE 	R19 R19 K17 ; R19 := R19["CachedAlerts"]
	97	[8917]	GETTABLE 	R19 R19 R18 ; R19 := R19[R18]
	98	[8917]	TEST     	R19 0 ; if not R19 then PC := 782
	99	[8917]	JMP      	782 ; PC := 782
	100	[8917]	GETGLOBAL	R19 K16 ; R19 := _T
	101	[8917]	GETTABLE 	R19 R19 K17 ; R19 := R19["CachedAlerts"]
	102	[8917]	GETTABLE 	R19 R19 R18 ; R19 := R19[R18]
	103	[8917]	GETTABLE 	R19 R19 K18 ; R19 := R19["mAlertInfo"]
	104	[8917]	GETTABLE 	R19 R19 K24 ; R19 := R19["mTag"]
	105	[8917]	GETGLOBAL	R20 K25 ; R20 := EMPTY_SYMBOL
	106	[8917]	EQ       	1 R19 R20 ; if R19 == R20 then PC := 782
	107	[8917]	JMP      	782 ; PC := 782
	108	[8917]	GETGLOBAL	R19 K16 ; R19 := _T
	109	[8917]	GETTABLE 	R19 R19 K17 ; R19 := R19["CachedAlerts"]
	110	[8917]	GETTABLE 	R19 R19 R18 ; R19 := R19[R18]
	111	[8917]	GETTABLE 	R19 R19 K18 ; R19 := R19["mAlertInfo"]
	112	[8917]	GETTABLE 	R19 R19 K19 ; R19 := R19["mMissionInfo"]
	113	[8917]	GETTABLE 	R19 R19 K26 ; R19 := R19["descText"]
	114	[8917]	GETGLOBAL	R20 K25 ; R20 := EMPTY_SYMBOL
	115	[8917]	EQ       	1 R19 R20 ; if R19 == R20 then PC := 782
	116	[8917]	JMP      	782 ; PC := 782
	117	[8918]	GETGLOBAL	R19 K22 ; R19 := 0x603636ad
	118	[8918]	GETGLOBAL	R20 K2 ; R20 := 0x64fb1586
	119	[8918]	GETGLOBAL	R21 K16 ; R21 := _T
	120	[8918]	GETTABLE 	R21 R21 K17 ; R21 := R21["CachedAlerts"]
	121	[8918]	GETTABLE 	R21 R21 R18 ; R21 := R21[R18]
	122	[8918]	GETTABLE 	R21 R21 K18 ; R21 := R21["mAlertInfo"]
	123	[8918]	GETTABLE 	R21 R21 K19 ; R21 := R21["mMissionInfo"]
	124	[8918]	GETTABLE 	R21 R21 K26 ; R21 := R21["descText"]
	125	[8918]	CALL     	R20 2 2 ; R20 := R20(R21)
	126	[8918]	OP_LOADBOOL	R21 0 0 ; R21 := false
	127	[8918]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	128	[8918]	MOVE     	R11 R19 ; R11 := R19
	129	[8921]	JMP      	782 ; PC := 782
	130	[8922]	GETGLOBAL	R19 K5 ; R19 := 0x7f5022cf
	131	[8922]	GETTABLE 	R19 R19 K6 ; R19 := R19[0xa5c556b9]
	132	[8922]	MOVE     	R20 R3 ; R20 := R3
	133	[8922]	GETGLOBAL	R21 K27 ; R21 := EVENT_TAG
	134	[8922]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	135	[8922]	TEST     	R19 0 ; if not R19 then PC := 213
	136	[8922]	JMP      	213 ; PC := 213
	137	[8923]	GETGLOBAL	R19 K28 ; R19 := 0x0032441c
	138	[8923]	GETTABLE 	R19 R19 K29 ; R19 := R19["CachedGoalInfo"]
	139	[8923]	TEST     	R19 0 ; if not R19 then PC := 782
	140	[8923]	JMP      	782 ; PC := 782
	141	[8924]	GETGLOBAL	R19 K28 ; R19 := 0x0032441c
	142	[8924]	GETTABLE 	R19 R19 K29 ; R19 := R19["CachedGoalInfo"]
	143	[8924]	GETGLOBAL	R20 K2 ; R20 := 0x64fb1586
	144	[8924]	GETTABLE 	R21 R1 K3 ; R21 := R1["baseNodeName"]
	145	[8924]	CALL     	R20 2 2 ; R20 := R20(R21)
	146	[8924]	GETTABLE 	R19 R19 R20 ; R19 := R19[R20]
	147	[8925]	EQ       	0 R19 K8 ; if R19 ~= nil then PC := 171
	148	[8925]	JMP      	171 ; PC := 171
	149	[8925]	GETGLOBAL	R20 K16 ; R20 := _T
	150	[8925]	GETTABLE 	R20 R20 K30 ; R20 := R20["LockedGoalList"]
	151	[8925]	EQ       	1 R20 K8 ; if R20 == nil then PC := 171
	152	[8925]	JMP      	171 ; PC := 171
	153	[8925]	GETGLOBAL	R20 K16 ; R20 := _T
	154	[8925]	GETTABLE 	R20 R20 K30 ; R20 := R20["LockedGoalList"]
	155	[8925]	GETGLOBAL	R21 K2 ; R21 := 0x64fb1586
	156	[8925]	GETTABLE 	R22 R1 K3 ; R22 := R1["baseNodeName"]
	157	[8925]	CALL     	R21 2 2 ; R21 := R21(R22)
	158	[8925]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	159	[8925]	TEST     	R20 0 ; if not R20 then PC := 171
	160	[8925]	JMP      	171 ; PC := 171
	161	[8925]	GETGLOBAL	R20 K16 ; R20 := _T
	162	[8925]	GETTABLE 	R20 R20 K31 ; R20 := R20["LockedGoalMissionInfo"]
	163	[8925]	EQ       	1 R20 K8 ; if R20 == nil then PC := 171
	164	[8925]	JMP      	171 ; PC := 171
	165	[8926]	GETGLOBAL	R20 K16 ; R20 := _T
	166	[8926]	GETTABLE 	R20 R20 K31 ; R20 := R20["LockedGoalMissionInfo"]
	167	[8926]	GETGLOBAL	R21 K2 ; R21 := 0x64fb1586
	168	[8926]	GETTABLE 	R22 R1 K3 ; R22 := R1["baseNodeName"]
	169	[8926]	CALL     	R21 2 2 ; R21 := R21(R22)
	170	[8926]	GETTABLE 	R19 R20 R21 ; R19 := R20[R21]
	171	[8928]	TEST     	R19 0 ; if not R19 then PC := 189
	172	[8928]	JMP      	189 ; PC := 189
	173	[8929]	GETTABLE 	R10 R19 K19 ; R10 := R19["mMissionInfo"]
	174	[8930]	GETTABLE 	R20 R19 K21 ; R20 := R19["mId"]
	175	[8930]	GETTABLE 	R20 R20 K21 ; R20 := R20["mId"]
	176	[8930]	SETTABLE 	R10 K32 R20 ; R10["goalId"] := R20
	177	[8931]	GETTABLE 	R20 R10 K33 ; R20 := R10["goalTag"]
	178	[8931]	GETGLOBAL	R21 K25 ; R21 := EMPTY_SYMBOL
	179	[8931]	EQ       	0 R20 R21 ; if R20 ~= R21 then PC := 183
	180	[8931]	JMP      	183 ; PC := 183
	181	[8932]	GETTABLE 	R20 R19 K24 ; R20 := R19["mTag"]
	182	[8932]	SETTABLE 	R10 K33 R20 ; R10["goalTag"] := R20
	183	[8934]	GETGLOBAL	R20 K22 ; R20 := 0x603636ad
	184	[8934]	GETTABLE 	R21 R19 K34 ; R21 := R19["mDesc"]
	185	[8934]	OP_LOADBOOL	R22 0 0 ; R22 := false
	186	[8934]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	187	[8934]	MOVE     	R11 R20 ; R11 := R20
	188	[8934]	JMP      	782 ; PC := 782
	189	[8935]	GETGLOBAL	R20 K16 ; R20 := _T
	190	[8935]	GETTABLE 	R20 R20 K30 ; R20 := R20["LockedGoalList"]
	191	[8935]	TEST     	R20 0 ; if not R20 then PC := 782
	192	[8935]	JMP      	782 ; PC := 782
	193	[8935]	GETGLOBAL	R20 K16 ; R20 := _T
	194	[8935]	GETTABLE 	R20 R20 K30 ; R20 := R20["LockedGoalList"]
	195	[8935]	GETGLOBAL	R21 K2 ; R21 := 0x64fb1586
	196	[8935]	GETTABLE 	R22 R1 K3 ; R22 := R1["baseNodeName"]
	197	[8935]	CALL     	R21 2 2 ; R21 := R21(R22)
	198	[8935]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	199	[8935]	TEST     	R20 0 ; if not R20 then PC := 782
	200	[8935]	JMP      	782 ; PC := 782
	201	[8936]	GETGLOBAL	R20 K22 ; R20 := 0x603636ad
	202	[8936]	GETGLOBAL	R21 K16 ; R21 := _T
	203	[8936]	GETTABLE 	R21 R21 K30 ; R21 := R21["LockedGoalList"]
	204	[8936]	GETGLOBAL	R22 K2 ; R22 := 0x64fb1586
	205	[8936]	GETTABLE 	R23 R1 K3 ; R23 := R1["baseNodeName"]
	206	[8936]	CALL     	R22 2 2 ; R22 := R22(R23)
	207	[8936]	GETTABLE 	R21 R21 R22 ; R21 := R21[R22]
	208	[8936]	GETTABLE 	R21 R21 K34 ; R21 := R21["mDesc"]
	209	[8936]	OP_LOADBOOL	R22 0 0 ; R22 := false
	210	[8936]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	211	[8936]	MOVE     	R11 R20 ; R11 := R20
	212	[8938]	JMP      	782 ; PC := 782
	213	[8939]	GETGLOBAL	R20 K5 ; R20 := 0x7f5022cf
	214	[8939]	GETTABLE 	R20 R20 K6 ; R20 := R20[0xa5c556b9]
	215	[8939]	MOVE     	R21 R3 ; R21 := R3
	216	[8939]	GETGLOBAL	R22 K35 ; R22 := SYNDICATE_MISSION_TAG
	217	[8939]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	218	[8939]	TEST     	R20 0 ; if not R20 then PC := 239
	219	[8939]	JMP      	239 ; PC := 239
	220	[8940]	GETGLOBAL	R20 K16 ; R20 := _T
	221	[8940]	GETTABLE 	R20 R20 K36 ; R20 := R20["CachedSyndicateMissions"]
	222	[8940]	TEST     	R20 0 ; if not R20 then PC := 782
	223	[8940]	JMP      	782 ; PC := 782
	224	[8942]	GETGLOBAL	R20 K16 ; R20 := _T
	225	[8942]	GETTABLE 	R20 R20 K36 ; R20 := R20["CachedSyndicateMissions"]
	226	[8942]	GETGLOBAL	R21 K2 ; R21 := 0x64fb1586
	227	[8942]	GETTABLE 	R22 R1 K3 ; R22 := R1["baseNodeName"]
	228	[8942]	CALL     	R21 2 2 ; R21 := R21(R22)
	229	[8942]	GETTABLE 	R20 R20 R21 ; R20 := R20[R21]
	230	[8943]	TEST     	R20 0 ; if not R20 then PC := 782
	231	[8943]	JMP      	782 ; PC := 782
	232	[8944]	GETTABLE 	R10 R20 K19 ; R10 := R20["mMissionInfo"]
	233	[8945]	GETGLOBAL	R21 K22 ; R21 := 0x603636ad
	234	[8945]	LOADK    	R22 K37 ; R22 := "/Lotus/Language/Menu/SyndicateMissionName"
	235	[8945]	LOADNIL  	R23 R23 ; R23 := nil
	236	[8945]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	237	[8945]	MOVE     	R12 R21 ; R12 := R21
	238	[8947]	JMP      	782 ; PC := 782
	239	[8948]	GETGLOBAL	R21 K5 ; R21 := 0x7f5022cf
	240	[8948]	GETTABLE 	R21 R21 K6 ; R21 := R21[0xa5c556b9]
	241	[8948]	MOVE     	R22 R3 ; R22 := R3
	242	[8948]	GETGLOBAL	R23 K38 ; R23 := SORTIE_MISSION_TAG
	243	[8948]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	244	[8948]	TEST     	R21 0 ; if not R21 then PC := 265
	245	[8948]	JMP      	265 ; PC := 265
	246	[8949]	GETGLOBAL	R21 K16 ; R21 := _T
	247	[8949]	GETTABLE 	R21 R21 K39 ; R21 := R21["CachedSortieMissions"]
	248	[8949]	TEST     	R21 0 ; if not R21 then PC := 782
	249	[8949]	JMP      	782 ; PC := 782
	250	[8951]	GETGLOBAL	R21 K16 ; R21 := _T
	251	[8951]	GETTABLE 	R21 R21 K39 ; R21 := R21["CachedSortieMissions"]
	252	[8951]	GETGLOBAL	R22 K2 ; R22 := 0x64fb1586
	253	[8951]	GETTABLE 	R23 R1 K3 ; R23 := R1["baseNodeName"]
	254	[8951]	CALL     	R22 2 2 ; R22 := R22(R23)
	255	[8951]	GETTABLE 	R21 R21 R22 ; R21 := R21[R22]
	256	[8952]	TEST     	R21 0 ; if not R21 then PC := 782
	257	[8952]	JMP      	782 ; PC := 782
	258	[8953]	GETTABLE 	R10 R21 K19 ; R10 := R21["mMissionInfo"]
	259	[8954]	GETGLOBAL	R22 K22 ; R22 := 0x603636ad
	260	[8954]	LOADK    	R23 K40 ; R23 := "/Lotus/Language/Menu/SortieMissionName"
	261	[8954]	LOADNIL  	R24 R24 ; R24 := nil
	262	[8954]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	263	[8954]	MOVE     	R12 R22 ; R12 := R22
	264	[8956]	JMP      	782 ; PC := 782
	265	[8957]	GETGLOBAL	R22 K5 ; R22 := 0x7f5022cf
	266	[8957]	GETTABLE 	R22 R22 K6 ; R22 := R22[0xa5c556b9]
	267	[8957]	MOVE     	R23 R3 ; R23 := R3
	268	[8957]	GETGLOBAL	R24 K41 ; R24 := LITE_SORTIE_MISSION_TAG
	269	[8957]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	270	[8957]	TEST     	R22 0 ; if not R22 then PC := 291
	271	[8957]	JMP      	291 ; PC := 291
	272	[8958]	GETGLOBAL	R22 K16 ; R22 := _T
	273	[8958]	GETTABLE 	R22 R22 K42 ; R22 := R22["CachedLiteSortieMissions"]
	274	[8958]	TEST     	R22 0 ; if not R22 then PC := 782
	275	[8958]	JMP      	782 ; PC := 782
	276	[8959]	GETGLOBAL	R22 K16 ; R22 := _T
	277	[8959]	GETTABLE 	R22 R22 K42 ; R22 := R22["CachedLiteSortieMissions"]
	278	[8959]	GETGLOBAL	R23 K2 ; R23 := 0x64fb1586
	279	[8959]	GETTABLE 	R24 R1 K3 ; R24 := R1["baseNodeName"]
	280	[8959]	CALL     	R23 2 2 ; R23 := R23(R24)
	281	[8959]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	282	[8960]	TEST     	R22 0 ; if not R22 then PC := 782
	283	[8960]	JMP      	782 ; PC := 782
	284	[8961]	GETTABLE 	R10 R22 K19 ; R10 := R22["mMissionInfo"]
	285	[8962]	GETGLOBAL	R23 K22 ; R23 := 0x603636ad
	286	[8962]	LOADK    	R24 K40 ; R24 := "/Lotus/Language/Menu/SortieMissionName"
	287	[8962]	LOADNIL  	R25 R25 ; R25 := nil
	288	[8962]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	289	[8962]	MOVE     	R12 R23 ; R12 := R23
	290	[8964]	JMP      	782 ; PC := 782
	291	[8965]	GETGLOBAL	R23 K5 ; R23 := 0x7f5022cf
	292	[8965]	GETTABLE 	R23 R23 K6 ; R23 := R23[0xa5c556b9]
	293	[8965]	MOVE     	R24 R3 ; R24 := R3
	294	[8965]	GETGLOBAL	R25 K43 ; R25 := ACTIVE_MISSION_TAG
	295	[8965]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	296	[8965]	TEST     	R23 0 ; if not R23 then PC := 317
	297	[8965]	JMP      	317 ; PC := 317
	298	[8966]	GETGLOBAL	R23 K16 ; R23 := _T
	299	[8966]	GETTABLE 	R23 R23 K44 ; R23 := R23["CachedActiveMissions"]
	300	[8966]	TEST     	R23 0 ; if not R23 then PC := 782
	301	[8966]	JMP      	782 ; PC := 782
	302	[8967]	GETGLOBAL	R23 K16 ; R23 := _T
	303	[8967]	GETTABLE 	R23 R23 K44 ; R23 := R23["CachedActiveMissions"]
	304	[8967]	GETGLOBAL	R24 K2 ; R24 := 0x64fb1586
	305	[8967]	GETTABLE 	R25 R1 K3 ; R25 := R1["baseNodeName"]
	306	[8967]	CALL     	R24 2 2 ; R24 := R24(R25)
	307	[8967]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	308	[8968]	TEST     	R23 0 ; if not R23 then PC := 782
	309	[8968]	JMP      	782 ; PC := 782
	310	[8969]	GETTABLE 	R10 R23 K19 ; R10 := R23["mMissionInfo"]
	311	[8970]	GETGLOBAL	R24 K2 ; R24 := 0x64fb1586
	312	[8970]	GETTABLE 	R25 R23 K19 ; R25 := R23["mMissionInfo"]
	313	[8970]	GETTABLE 	R25 R25 K26 ; R25 := R25["descText"]
	314	[8970]	CALL     	R24 2 2 ; R24 := R24(R25)
	315	[8970]	MOVE     	R12 R24 ; R12 := R24
	316	[8972]	JMP      	782 ; PC := 782
	317	[8973]	GETGLOBAL	R24 K5 ; R24 := 0x7f5022cf
	318	[8973]	GETTABLE 	R24 R24 K6 ; R24 := R24[0xa5c556b9]
	319	[8973]	MOVE     	R25 R3 ; R25 := R3
	320	[8973]	GETGLOBAL	R26 K45 ; R26 := INVASION_DEFENDER_TAG
	321	[8973]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	322	[8973]	TEST     	R24 0 ; if not R24 then PC := 394
	323	[8973]	JMP      	394 ; PC := 394
	324	[8974]	GETGLOBAL	R24 K16 ; R24 := _T
	325	[8974]	GETTABLE 	R24 R24 K46 ; R24 := R24["CachedInvasionInfo"]
	326	[8974]	TEST     	R24 0 ; if not R24 then PC := 782
	327	[8974]	JMP      	782 ; PC := 782
	328	[8975]	GETGLOBAL	R24 K2 ; R24 := 0x64fb1586
	329	[8975]	GETTABLE 	R25 R1 K3 ; R25 := R1["baseNodeName"]
	330	[8975]	CALL     	R24 2 2 ; R24 := R24(R25)
	331	[8976]	GETGLOBAL	R25 K16 ; R25 := _T
	332	[8976]	GETTABLE 	R25 R25 K46 ; R25 := R25["CachedInvasionInfo"]
	333	[8976]	GETTABLE 	R25 R25 R24 ; R25 := R25[R24]
	334	[8977]	TEST     	R25 0 ; if not R25 then PC := 782
	335	[8977]	JMP      	782 ; PC := 782
	336	[8978]	GETTABLE 	R10 R25 K47 ; R10 := R25["mDefenderMissionInfo"]
	337	[8979]	GETTABLE 	R26 R25 K21 ; R26 := R25["mId"]
	338	[8979]	GETTABLE 	R26 R26 K21 ; R26 := R26["mId"]
	339	[8979]	SETTABLE 	R10 K48 R26 ; R10["invasionId"] := R26
	340	[8980]	GETTABLE 	R26 R25 K50 ; R26 := R25["mAttackerMissionInfo"]
	341	[8980]	GETTABLE 	R26 R26 K51 ; R26 := R26["faction"]
	342	[8980]	SETTABLE 	R10 K49 R26 ; R10["invasionAllyFaction"] := R26
	343	[8982]	GETGLOBAL	R26 K22 ; R26 := 0x603636ad
	344	[8982]	LOADK    	R27 K52 ; R27 := "/Lotus/Language/Menu/MissionIntro_Invasion"
	345	[8982]	OP_LOADBOOL	R28 0 0 ; R28 := false
	346	[8982]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	347	[8982]	LOADK    	R27 K53 ; R27 := " ("
	348	[8982]	GETGLOBAL	R28 K22 ; R28 := 0x603636ad
	349	[8982]	LOADK    	R29 K54 ; R29 := "/Lotus/Language/Game/Faction_"
	350	[8982]	GETGLOBAL	R30 K2 ; R30 := 0x64fb1586
	351	[8982]	GETTABLE 	R31 R25 K50 ; R31 := R25["mAttackerMissionInfo"]
	352	[8982]	SELF     	R31 R31 K55 ; R32 := R31; R31 := R31[0x243148d6]
	353	[8982]	CALL     	R31 2 0 ; R31,... := R31(R32)
	354	[8982]	CALL     	R30 0 2 ; R30 := R30(R31,...)
	355	[8982]	LOADK    	R31 K56 ; R31 := "UC"
	356	[8982]	CONCAT   	R29 R29 R31 ; R29 := R29 .. R30 .. R31
	357	[8982]	OP_LOADBOOL	R30 0 0 ; R30 := false
	358	[8982]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	359	[8982]	LOADK    	R29 K57 ; R29 := ")"
	360	[8982]	CONCAT   	R26 R26 R29 ; R26 := R26 .. R27 .. R28 .. R29
	361	[8983]	GETTABLE 	R27 R25 K58 ; R27 := R25["mDefenderName"]
	362	[8983]	GETGLOBAL	R28 K25 ; R28 := EMPTY_SYMBOL
	363	[8983]	EQ       	0 R27 R28 ; if R27 ~= R28 then PC := 367
	364	[8983]	JMP      	367 ; PC := 367
	365	[8984]	MOVE     	R12 R26 ; R12 := R26
	366	[8984]	JMP      	374 ; PC := 374
	367	[8986]	GETGLOBAL	R27 K22 ; R27 := 0x603636ad
	368	[8986]	GETGLOBAL	R28 K2 ; R28 := 0x64fb1586
	369	[8986]	GETTABLE 	R29 R25 K58 ; R29 := R25["mDefenderName"]
	370	[8986]	CALL     	R28 2 2 ; R28 := R28(R29)
	371	[8986]	OP_LOADBOOL	R29 0 0 ; R29 := false
	372	[8986]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	373	[8986]	MOVE     	R12 R27 ; R12 := R27
	374	[8989]	GETGLOBAL	R27 K59 ; R27 := 0xcfc01047
	375	[8989]	GETGLOBAL	R28 K28 ; R28 := 0x0032441c
	376	[8989]	GETTABLE 	R28 R28 K29 ; R28 := R28["CachedGoalInfo"]
	377	[8989]	CALL     	R27 2 4 ; R27,R28,R29 := R27(R28)
	378	[8989]	JMP      	391 ; PC := 391
	379	[8990]	TEST     	R31 0 ; if not R31 then PC := 391
	380	[8990]	JMP      	391 ; PC := 391
	381	[8990]	GETTABLE 	R32 R31 K60 ; R32 := R31["mInvasionNode"]
	382	[8990]	GETTABLE 	R33 R1 K3 ; R33 := R1["baseNodeName"]
	383	[8990]	EQ       	0 R32 R33 ; if R32 ~= R33 then PC := 391
	384	[8990]	JMP      	391 ; PC := 391
	385	[8991]	GETGLOBAL	R32 K22 ; R32 := 0x603636ad
	386	[8991]	GETTABLE 	R33 R31 K34 ; R33 := R31["mDesc"]
	387	[8991]	OP_LOADBOOL	R34 0 0 ; R34 := false
	388	[8991]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	389	[8991]	MOVE     	R11 R32 ; R11 := R32
	390	[8992]	JMP      	782 ; PC := 782
	391	[8989]	TFORLOOP 	R27 2 ; R30,R31 := R27(R28,R29); if R30 ~= nil then begin PC = 379; R29 := R30 end
	392	[8993]	JMP      	379 ; PC := 379
	393	[8996]	JMP      	782 ; PC := 782
	394	[8997]	GETGLOBAL	R32 K5 ; R32 := 0x7f5022cf
	395	[8997]	GETTABLE 	R32 R32 K6 ; R32 := R32[0xa5c556b9]
	396	[8997]	MOVE     	R33 R3 ; R33 := R3
	397	[8997]	GETGLOBAL	R34 K61 ; R34 := INVASION_ATTACKER_TAG
	398	[8997]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	399	[8997]	TEST     	R32 0 ; if not R32 then PC := 471
	400	[8997]	JMP      	471 ; PC := 471
	401	[8998]	GETGLOBAL	R32 K16 ; R32 := _T
	402	[8998]	GETTABLE 	R32 R32 K46 ; R32 := R32["CachedInvasionInfo"]
	403	[8998]	TEST     	R32 0 ; if not R32 then PC := 782
	404	[8998]	JMP      	782 ; PC := 782
	405	[8999]	GETGLOBAL	R32 K2 ; R32 := 0x64fb1586
	406	[8999]	GETTABLE 	R33 R1 K3 ; R33 := R1["baseNodeName"]
	407	[8999]	CALL     	R32 2 2 ; R32 := R32(R33)
	408	[9000]	GETGLOBAL	R33 K16 ; R33 := _T
	409	[9000]	GETTABLE 	R33 R33 K46 ; R33 := R33["CachedInvasionInfo"]
	410	[9000]	GETTABLE 	R33 R33 R32 ; R33 := R33[R32]
	411	[9001]	TEST     	R33 0 ; if not R33 then PC := 782
	412	[9001]	JMP      	782 ; PC := 782
	413	[9002]	GETTABLE 	R10 R33 K50 ; R10 := R33["mAttackerMissionInfo"]
	414	[9003]	GETTABLE 	R34 R33 K21 ; R34 := R33["mId"]
	415	[9003]	GETTABLE 	R34 R34 K21 ; R34 := R34["mId"]
	416	[9003]	SETTABLE 	R10 K48 R34 ; R10["invasionId"] := R34
	417	[9004]	GETTABLE 	R34 R33 K47 ; R34 := R33["mDefenderMissionInfo"]
	418	[9004]	GETTABLE 	R34 R34 K51 ; R34 := R34["faction"]
	419	[9004]	SETTABLE 	R10 K49 R34 ; R10["invasionAllyFaction"] := R34
	420	[9006]	GETGLOBAL	R34 K22 ; R34 := 0x603636ad
	421	[9006]	LOADK    	R35 K52 ; R35 := "/Lotus/Language/Menu/MissionIntro_Invasion"
	422	[9006]	OP_LOADBOOL	R36 0 0 ; R36 := false
	423	[9006]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	424	[9006]	LOADK    	R35 K53 ; R35 := " ("
	425	[9006]	GETGLOBAL	R36 K22 ; R36 := 0x603636ad
	426	[9006]	LOADK    	R37 K54 ; R37 := "/Lotus/Language/Game/Faction_"
	427	[9006]	GETGLOBAL	R38 K2 ; R38 := 0x64fb1586
	428	[9006]	GETTABLE 	R39 R33 K47 ; R39 := R33["mDefenderMissionInfo"]
	429	[9006]	SELF     	R39 R39 K55 ; R40 := R39; R39 := R39[0x243148d6]
	430	[9006]	CALL     	R39 2 0 ; R39,... := R39(R40)
	431	[9006]	CALL     	R38 0 2 ; R38 := R38(R39,...)
	432	[9006]	LOADK    	R39 K56 ; R39 := "UC"
	433	[9006]	CONCAT   	R37 R37 R39 ; R37 := R37 .. R38 .. R39
	434	[9006]	OP_LOADBOOL	R38 0 0 ; R38 := false
	435	[9006]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	436	[9006]	LOADK    	R37 K57 ; R37 := ")"
	437	[9006]	CONCAT   	R34 R34 R37 ; R34 := R34 .. R35 .. R36 .. R37
	438	[9007]	GETTABLE 	R35 R33 K62 ; R35 := R33["mAttackerName"]
	439	[9007]	GETGLOBAL	R36 K25 ; R36 := EMPTY_SYMBOL
	440	[9007]	EQ       	0 R35 R36 ; if R35 ~= R36 then PC := 444
	441	[9007]	JMP      	444 ; PC := 444
	442	[9008]	MOVE     	R12 R34 ; R12 := R34
	443	[9008]	JMP      	451 ; PC := 451
	444	[9010]	GETGLOBAL	R35 K22 ; R35 := 0x603636ad
	445	[9010]	GETGLOBAL	R36 K2 ; R36 := 0x64fb1586
	446	[9010]	GETTABLE 	R37 R33 K62 ; R37 := R33["mAttackerName"]
	447	[9010]	CALL     	R36 2 2 ; R36 := R36(R37)
	448	[9010]	OP_LOADBOOL	R37 0 0 ; R37 := false
	449	[9010]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	450	[9010]	MOVE     	R12 R35 ; R12 := R35
	451	[9013]	GETGLOBAL	R35 K59 ; R35 := 0xcfc01047
	452	[9013]	GETGLOBAL	R36 K28 ; R36 := 0x0032441c
	453	[9013]	GETTABLE 	R36 R36 K29 ; R36 := R36["CachedGoalInfo"]
	454	[9013]	CALL     	R35 2 4 ; R35,R36,R37 := R35(R36)
	455	[9013]	JMP      	468 ; PC := 468
	456	[9014]	TEST     	R39 0 ; if not R39 then PC := 468
	457	[9014]	JMP      	468 ; PC := 468
	458	[9014]	GETTABLE 	R40 R39 K60 ; R40 := R39["mInvasionNode"]
	459	[9014]	GETTABLE 	R41 R1 K3 ; R41 := R1["baseNodeName"]
	460	[9014]	EQ       	0 R40 R41 ; if R40 ~= R41 then PC := 468
	461	[9014]	JMP      	468 ; PC := 468
	462	[9015]	GETGLOBAL	R40 K22 ; R40 := 0x603636ad
	463	[9015]	GETTABLE 	R41 R39 K34 ; R41 := R39["mDesc"]
	464	[9015]	OP_LOADBOOL	R42 0 0 ; R42 := false
	465	[9015]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	466	[9015]	MOVE     	R11 R40 ; R11 := R40
	467	[9016]	JMP      	782 ; PC := 782
	468	[9013]	TFORLOOP 	R35 2 ; R38,R39 := R35(R36,R37); if R38 ~= nil then begin PC = 456; R37 := R38 end
	469	[9017]	JMP      	456 ; PC := 456
	470	[9020]	JMP      	782 ; PC := 782
	471	[9021]	GETGLOBAL	R40 K5 ; R40 := 0x7f5022cf
	472	[9021]	GETTABLE 	R40 R40 K6 ; R40 := R40[0xa5c556b9]
	473	[9021]	MOVE     	R41 R3 ; R41 := R3
	474	[9021]	GETGLOBAL	R42 K63 ; R42 := NIGHTMARE_TAG
	475	[9021]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	476	[9021]	TEST     	R40 0 ; if not R40 then PC := 485
	477	[9021]	JMP      	485 ; PC := 485
	478	[9023]	GETGLOBAL	R40 K22 ; R40 := 0x603636ad
	479	[9023]	LOADK    	R41 K64 ; R41 := "/Lotus/Language/Menu/NightmareModeName"
	480	[9023]	LOADNIL  	R42 R42 ; R42 := nil
	481	[9023]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	482	[9023]	MOVE     	R12 R40 ; R12 := R40
	483	[9024]	OP_LOADBOOL	R14 1 0 ; R14 := true
	484	[9024]	JMP      	782 ; PC := 782
	485	[9026]	GETGLOBAL	R40 K5 ; R40 := 0x7f5022cf
	486	[9026]	GETTABLE 	R40 R40 K6 ; R40 := R40[0xa5c556b9]
	487	[9026]	MOVE     	R41 R3 ; R41 := R3
	488	[9026]	GETGLOBAL	R42 K65 ; R42 := PVP_TAG
	489	[9026]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	490	[9026]	TEST     	R40 1 ; if R40 then PC := 495
	491	[9026]	JMP      	495 ; PC := 495
	492	[9026]	GETTABLE 	R40 R8 K66 ; R40 := R8["nodeType"]
	493	[9026]	EQ       	0 R40 K68 ; if R40 ~= 2.000000 then PC := 514
	494	[9026]	JMP      	514 ; PC := 514
	495	[9027]	GETGLOBAL	R40 K28 ; R40 := 0x0032441c
	496	[9027]	GETTABLE 	R40 R40 K29 ; R40 := R40["CachedGoalInfo"]
	497	[9027]	TEST     	R40 0 ; if not R40 then PC := 782
	498	[9027]	JMP      	782 ; PC := 782
	499	[9028]	GETGLOBAL	R40 K28 ; R40 := 0x0032441c
	500	[9028]	GETTABLE 	R40 R40 K29 ; R40 := R40["CachedGoalInfo"]
	501	[9028]	GETGLOBAL	R41 K2 ; R41 := 0x64fb1586
	502	[9028]	GETTABLE 	R42 R1 K3 ; R42 := R1["baseNodeName"]
	503	[9028]	CALL     	R41 2 2 ; R41 := R41(R42)
	504	[9028]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	505	[9029]	TEST     	R40 0 ; if not R40 then PC := 512
	506	[9029]	JMP      	512 ; PC := 512
	507	[9030]	GETGLOBAL	R41 K22 ; R41 := 0x603636ad
	508	[9030]	GETTABLE 	R42 R40 K34 ; R42 := R40["mDesc"]
	509	[9030]	OP_LOADBOOL	R43 0 0 ; R43 := false
	510	[9030]	CALL     	R41 3 2 ; R41 := R41(R42,R43)
	511	[9030]	MOVE     	R11 R41 ; R11 := R41
	512	[9032]	OP_LOADBOOL	R16 1 0 ; R16 := true
	513	[9033]	JMP      	782 ; PC := 782
	514	[9034]	GETGLOBAL	R41 K5 ; R41 := 0x7f5022cf
	515	[9034]	GETTABLE 	R41 R41 K6 ; R41 := R41[0xa5c556b9]
	516	[9034]	MOVE     	R42 R3 ; R42 := R3
	517	[9034]	GETGLOBAL	R43 K38 ; R43 := SORTIE_MISSION_TAG
	518	[9034]	CALL     	R41 3 2 ; R41 := R41(R42,R43)
	519	[9034]	TEST     	R41 0 ; if not R41 then PC := 540
	520	[9034]	JMP      	540 ; PC := 540
	521	[9034]	GETGLOBAL	R41 K16 ; R41 := _T
	522	[9034]	GETTABLE 	R41 R41 K39 ; R41 := R41["CachedSortieMissions"]
	523	[9034]	TEST     	R41 0 ; if not R41 then PC := 540
	524	[9034]	JMP      	540 ; PC := 540
	525	[9035]	GETGLOBAL	R41 K16 ; R41 := _T
	526	[9035]	GETTABLE 	R41 R41 K39 ; R41 := R41["CachedSortieMissions"]
	527	[9035]	GETGLOBAL	R42 K2 ; R42 := 0x64fb1586
	528	[9035]	GETTABLE 	R43 R1 K3 ; R43 := R1["baseNodeName"]
	529	[9035]	CALL     	R42 2 2 ; R42 := R42(R43)
	530	[9035]	GETTABLE 	R41 R41 R42 ; R41 := R41[R42]
	531	[9036]	TEST     	R41 0 ; if not R41 then PC := 782
	532	[9036]	JMP      	782 ; PC := 782
	533	[9037]	GETTABLE 	R10 R41 K19 ; R10 := R41["mMissionInfo"]
	534	[9038]	GETGLOBAL	R42 K22 ; R42 := 0x603636ad
	535	[9038]	LOADK    	R43 K69 ; R43 := "/Lotus/Language/Menu/Notification_Sortie"
	536	[9038]	LOADNIL  	R44 R44 ; R44 := nil
	537	[9038]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	538	[9038]	MOVE     	R12 R42 ; R12 := R42
	539	[9039]	JMP      	782 ; PC := 782
	540	[9041]	GETGLOBAL	R42 K5 ; R42 := 0x7f5022cf
	541	[9041]	GETTABLE 	R42 R42 K6 ; R42 := R42[0xa5c556b9]
	542	[9041]	MOVE     	R43 R3 ; R43 := R3
	543	[9041]	GETGLOBAL	R44 K43 ; R44 := ACTIVE_MISSION_TAG
	544	[9041]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	545	[9041]	TEST     	R42 0 ; if not R42 then PC := 566
	546	[9041]	JMP      	566 ; PC := 566
	547	[9041]	GETGLOBAL	R42 K16 ; R42 := _T
	548	[9041]	GETTABLE 	R42 R42 K44 ; R42 := R42["CachedActiveMissions"]
	549	[9041]	TEST     	R42 0 ; if not R42 then PC := 566
	550	[9041]	JMP      	566 ; PC := 566
	551	[9042]	GETGLOBAL	R42 K16 ; R42 := _T
	552	[9042]	GETTABLE 	R42 R42 K44 ; R42 := R42["CachedActiveMissions"]
	553	[9042]	GETGLOBAL	R43 K2 ; R43 := 0x64fb1586
	554	[9042]	GETTABLE 	R44 R1 K3 ; R44 := R1["baseNodeName"]
	555	[9042]	CALL     	R43 2 2 ; R43 := R43(R44)
	556	[9042]	GETTABLE 	R42 R42 R43 ; R42 := R42[R43]
	557	[9043]	TEST     	R42 0 ; if not R42 then PC := 782
	558	[9043]	JMP      	782 ; PC := 782
	559	[9044]	GETTABLE 	R10 R42 K19 ; R10 := R42["mMissionInfo"]
	560	[9045]	GETGLOBAL	R43 K22 ; R43 := 0x603636ad
	561	[9045]	LOADK    	R44 K70 ; R44 := "/Lotus/Language/Menu/Notification_ActiveMission"
	562	[9045]	LOADNIL  	R45 R45 ; R45 := nil
	563	[9045]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	564	[9045]	MOVE     	R12 R43 ; R12 := R43
	565	[9046]	JMP      	782 ; PC := 782
	566	[9048]	GETGLOBAL	R43 K5 ; R43 := 0x7f5022cf
	567	[9048]	GETTABLE 	R43 R43 K6 ; R43 := R43[0xa5c556b9]
	568	[9048]	MOVE     	R44 R3 ; R44 := R3
	569	[9048]	GETGLOBAL	R45 K71 ; R45 := KUVA_TOWER_MISSION_TAG
	570	[9048]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	571	[9048]	TEST     	R43 0 ; if not R43 then PC := 602
	572	[9048]	JMP      	602 ; PC := 602
	573	[9048]	GETGLOBAL	R43 K16 ; R43 := _T
	574	[9048]	GETTABLE 	R43 R43 K72 ; R43 := R43["CachedGhostTowerMissions"]
	575	[9048]	TEST     	R43 0 ; if not R43 then PC := 602
	576	[9048]	JMP      	602 ; PC := 602
	577	[9049]	GETGLOBAL	R43 K16 ; R43 := _T
	578	[9049]	GETTABLE 	R43 R43 K72 ; R43 := R43["CachedGhostTowerMissions"]
	579	[9049]	GETGLOBAL	R44 K2 ; R44 := 0x64fb1586
	580	[9049]	GETTABLE 	R45 R1 K3 ; R45 := R1["baseNodeName"]
	581	[9049]	CALL     	R44 2 2 ; R44 := R44(R45)
	582	[9049]	GETTABLE 	R43 R43 R44 ; R43 := R43[R44]
	583	[9050]	TEST     	R43 0 ; if not R43 then PC := 782
	584	[9050]	JMP      	782 ; PC := 782
	585	[9051]	GETTABLE 	R10 R43 K19 ; R10 := R43["mMissionInfo"]
	586	[9052]	GETUPVAL 	R44 U1 ; R44 := U1
	587	[9052]	GETTABLE 	R44 R44 K73 ; R44 := R44[0x06d055f9]
	588	[9052]	GETTABLE 	R45 R10 K74 ; R45 := R10["minEnemyLevel"]
	589	[9052]	LE       	1 K75 R45 ; if 80.000000 <= R45 then PC := 592
	590	[9052]	JMP      	592 ; PC := 592
	591	[9052]	OP_LOADBOOL	R45 0 1 ; R45 := false; PC := 592
	592	[9052]	OP_LOADBOOL	R45 1 0 ; R45 := true
	593	[9052]	LOADK    	R46 K76 ; R46 := "/Lotus/Language/Menu/GhostTowerHardMissionName"
	594	[9052]	LOADK    	R47 K77 ; R47 := "/Lotus/Language/Menu/GhostTowerMissionName"
	595	[9052]	CALL     	R44 4 2 ; R44 := R44(R45,R46,R47)
	596	[9053]	GETGLOBAL	R45 K22 ; R45 := 0x603636ad
	597	[9053]	MOVE     	R46 R44 ; R46 := R44
	598	[9053]	LOADNIL  	R47 R47 ; R47 := nil
	599	[9053]	CALL     	R45 3 2 ; R45 := R45(R46,R47)
	600	[9053]	MOVE     	R12 R45 ; R12 := R45
	601	[9054]	JMP      	782 ; PC := 782
	602	[9055]	GETGLOBAL	R45 K5 ; R45 := 0x7f5022cf
	603	[9055]	GETTABLE 	R45 R45 K6 ; R45 := R45[0xa5c556b9]
	604	[9055]	MOVE     	R46 R3 ; R46 := R3
	605	[9055]	GETGLOBAL	R47 K78 ; R47 := NEMESIS_MISSION_TAG
	606	[9055]	CALL     	R45 3 2 ; R45 := R45(R46,R47)
	607	[9055]	TEST     	R45 0 ; if not R45 then PC := 649
	608	[9055]	JMP      	649 ; PC := 649
	609	[9056]	GETGLOBAL	R45 K16 ; R45 := _T
	610	[9056]	GETTABLE 	R45 R45 K79 ; R45 := R45["CachedNemesisMissions"]
	611	[9056]	TEST     	R45 0 ; if not R45 then PC := 632
	612	[9056]	JMP      	632 ; PC := 632
	613	[9056]	GETGLOBAL	R45 K16 ; R45 := _T
	614	[9056]	GETTABLE 	R45 R45 K79 ; R45 := R45["CachedNemesisMissions"]
	615	[9056]	GETGLOBAL	R46 K2 ; R46 := 0x64fb1586
	616	[9056]	GETTABLE 	R47 R1 K3 ; R47 := R1["baseNodeName"]
	617	[9056]	CALL     	R46 2 2 ; R46 := R46(R47)
	618	[9056]	GETTABLE 	R45 R45 R46 ; R45 := R45[R46]
	619	[9056]	TEST     	R45 0 ; if not R45 then PC := 632
	620	[9056]	JMP      	632 ; PC := 632
	621	[9057]	GETGLOBAL	R45 K16 ; R45 := _T
	622	[9057]	GETTABLE 	R45 R45 K79 ; R45 := R45["CachedNemesisMissions"]
	623	[9057]	GETGLOBAL	R46 K2 ; R46 := 0x64fb1586
	624	[9057]	GETTABLE 	R47 R1 K3 ; R47 := R1["baseNodeName"]
	625	[9057]	CALL     	R46 2 2 ; R46 := R46(R47)
	626	[9057]	GETTABLE 	R45 R45 R46 ; R45 := R45[R46]
	627	[9057]	GETTABLE 	R45 R45 K19 ; R45 := R45["mMissionInfo"]
	628	[9057]	SELF     	R45 R45 K80 ; R46 := R45; R45 := R45[0x8f89d633]
	629	[9057]	CALL     	R45 2 2 ; R45 := R45(R46)
	630	[9057]	MOVE     	R10 R45 ; R10 := R45
	631	[9057]	JMP      	647 ; PC := 647
	632	[9059]	GETTABLE 	R45 R1 K81 ; R45 := R1["nemesis"]
	633	[9059]	GETTABLE 	R45 R45 K82 ; R45 := R45["rank"]
	634	[9060]	GETTABLE 	R46 R1 K81 ; R46 := R1["nemesis"]
	635	[9060]	GETTABLE 	R46 R46 K51 ; R46 := R46["faction"]
	636	[9061]	GETTABLE 	R47 R1 K81 ; R47 := R1["nemesis"]
	637	[9061]	GETTABLE 	R47 R47 K1 ; R47 := R47["name"]
	638	[9062]	GETUPVAL 	R48 U2 ; R48 := U2
	639	[9062]	GETTABLE 	R49 R1 K3 ; R49 := R1["baseNodeName"]
	640	[9062]	MOVE     	R50 R45 ; R50 := R45
	641	[9062]	MOVE     	R51 R46 ; R51 := R46
	642	[9062]	MOVE     	R52 R47 ; R52 := R47
	643	[9062]	CALL     	R48 5 2 ; R48 := R48(R49,R50,R51,R52)
	644	[9062]	SELF     	R48 R48 K80 ; R49 := R48; R48 := R48[0x8f89d633]
	645	[9062]	CALL     	R48 2 2 ; R48 := R48(R49)
	646	[9062]	MOVE     	R10 R48 ; R10 := R48
	647	[9064]	GETTABLE 	R12 R10 K83 ; R12 := R10["uniqueName"]
	648	[9064]	JMP      	782 ; PC := 782
	649	[9065]	GETGLOBAL	R48 K5 ; R48 := 0x7f5022cf
	650	[9065]	GETTABLE 	R48 R48 K6 ; R48 := R48[0xa5c556b9]
	651	[9065]	MOVE     	R49 R3 ; R49 := R3
	652	[9065]	GETGLOBAL	R50 K84 ; R50 := VOID_STORM_TAG
	653	[9065]	CALL     	R48 3 2 ; R48 := R48(R49,R50)
	654	[9065]	TEST     	R48 0 ; if not R48 then PC := 658
	655	[9065]	JMP      	658 ; PC := 658
	656	[9066]	OP_LOADBOOL	R15 1 0 ; R15 := true
	657	[9066]	JMP      	782 ; PC := 782
	658	[9067]	GETGLOBAL	R48 K0 ; R48 := 0x7b998233
	659	[9067]	GETTABLE 	R49 R1 K85 ; R49 := R1["job"]
	660	[9067]	CALL     	R48 2 2 ; R48 := R48(R49)
	661	[9067]	TEST     	R48 1 ; if R48 then PC := 691
	662	[9067]	JMP      	691 ; PC := 691
	663	[9068]	GETGLOBAL	R48 K86 ; R48 := 0xb009bbc6
	664	[9068]	GETTABLE 	R49 R1 K85 ; R49 := R1["job"]
	665	[9068]	CALL     	R48 2 2 ; R48 := R48(R49)
	666	[9069]	GETGLOBAL	R49 K0 ; R49 := 0x7b998233
	667	[9069]	MOVE     	R50 R48 ; R50 := R48
	668	[9069]	CALL     	R49 2 2 ; R49 := R49(R50)
	669	[9069]	TEST     	R49 1 ; if R49 then PC := 782
	670	[9069]	JMP      	782 ; PC := 782
	671	[9070]	GETGLOBAL	R49 K22 ; R49 := 0x603636ad
	672	[9070]	GETGLOBAL	R50 K2 ; R50 := 0x64fb1586
	673	[9070]	SELF     	R51 R48 K87 ; R52 := R48; R51 := R48[0xaf8359c4]
	674	[9070]	CALL     	R51 2 0 ; R51,... := R51(R52)
	675	[9070]	CALL     	R50 0 2 ; R50 := R50(R51,...)
	676	[9070]	LOADNIL  	R51 R51 ; R51 := nil
	677	[9070]	CALL     	R49 3 2 ; R49 := R49(R50,R51)
	678	[9070]	MOVE     	R12 R49 ; R12 := R49
	679	[9071]	GETTABLE 	R49 R1 K88 ; R49 := R1["isHardJob"]
	680	[9071]	TEST     	R49 0 ; if not R49 then PC := 782
	681	[9071]	JMP      	782 ; PC := 782
	682	[9072]	MOVE     	R49 R12 ; R49 := R12
	683	[9072]	LOADK    	R50 K53 ; R50 := " ("
	684	[9072]	GETGLOBAL	R51 K22 ; R51 := 0x603636ad
	685	[9072]	LOADK    	R52 K89 ; R52 := "/Lotus/Language/Labels/HardMode"
	686	[9072]	OP_LOADBOOL	R53 1 0 ; R53 := true
	687	[9072]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	688	[9072]	LOADK    	R52 K57 ; R52 := ")"
	689	[9072]	CONCAT   	R12 R49 R52 ; R12 := R49 .. R50 .. R51 .. R52
	690	[9074]	JMP      	782 ; PC := 782
	691	[9075]	GETGLOBAL	R49 K5 ; R49 := 0x7f5022cf
	692	[9075]	GETTABLE 	R49 R49 K6 ; R49 := R49[0xa5c556b9]
	693	[9075]	MOVE     	R50 R3 ; R50 := R3
	694	[9075]	LOADK    	R51 K90 ; R51 := "_Cell"
	695	[9075]	CALL     	R49 3 2 ; R49 := R49(R50,R51)
	696	[9075]	TEST     	R49 0 ; if not R49 then PC := 712
	697	[9075]	JMP      	712 ; PC := 712
	698	[9075]	GETGLOBAL	R49 K16 ; R49 := _T
	699	[9075]	GETTABLE 	R49 R49 K91 ; R49 := R49["CachedCellMissions"]
	700	[9075]	TEST     	R49 0 ; if not R49 then PC := 712
	701	[9075]	JMP      	712 ; PC := 712
	702	[9076]	GETGLOBAL	R49 K16 ; R49 := _T
	703	[9076]	GETTABLE 	R49 R49 K91 ; R49 := R49["CachedCellMissions"]
	704	[9076]	GETGLOBAL	R50 K2 ; R50 := 0x64fb1586
	705	[9076]	GETTABLE 	R51 R1 K3 ; R51 := R1["baseNodeName"]
	706	[9076]	CALL     	R50 2 2 ; R50 := R50(R51)
	707	[9076]	GETTABLE 	R49 R49 R50 ; R49 := R49[R50]
	708	[9077]	TEST     	R49 0 ; if not R49 then PC := 782
	709	[9077]	JMP      	782 ; PC := 782
	710	[9078]	GETTABLE 	R10 R49 K19 ; R10 := R49["mMissionInfo"]
	711	[9079]	JMP      	782 ; PC := 782
	712	[9080]	GETGLOBAL	R50 K5 ; R50 := 0x7f5022cf
	713	[9080]	GETTABLE 	R50 R50 K6 ; R50 := R50[0xa5c556b9]
	714	[9080]	MOVE     	R51 R3 ; R51 := R3
	715	[9080]	GETGLOBAL	R52 K92 ; R52 := ELITE_ALERT_TAG
	716	[9080]	CALL     	R50 3 2 ; R50 := R50(R51,R52)
	717	[9080]	TEST     	R50 0 ; if not R50 then PC := 738
	718	[9080]	JMP      	738 ; PC := 738
	719	[9081]	GETGLOBAL	R50 K16 ; R50 := _T
	720	[9081]	GETTABLE 	R50 R50 K93 ; R50 := R50["CachedEliteAlertMissions"]
	721	[9081]	TEST     	R50 0 ; if not R50 then PC := 782
	722	[9081]	JMP      	782 ; PC := 782
	723	[9082]	GETGLOBAL	R50 K22 ; R50 := 0x603636ad
	724	[9082]	LOADK    	R51 K94 ; R51 := "/Lotus/Language/Menu/AlertHardMode"
	725	[9082]	LOADNIL  	R52 R52 ; R52 := nil
	726	[9082]	CALL     	R50 3 2 ; R50 := R50(R51,R52)
	727	[9082]	MOVE     	R12 R50 ; R12 := R50
	728	[9083]	GETGLOBAL	R50 K16 ; R50 := _T
	729	[9083]	GETTABLE 	R50 R50 K93 ; R50 := R50["CachedEliteAlertMissions"]
	730	[9083]	GETGLOBAL	R51 K2 ; R51 := 0x64fb1586
	731	[9083]	GETTABLE 	R52 R1 K3 ; R52 := R1["baseNodeName"]
	732	[9083]	CALL     	R51 2 2 ; R51 := R51(R52)
	733	[9083]	GETTABLE 	R50 R50 R51 ; R50 := R50[R51]
	734	[9084]	TEST     	R50 0 ; if not R50 then PC := 782
	735	[9084]	JMP      	782 ; PC := 782
	736	[9085]	GETTABLE 	R10 R50 K19 ; R10 := R50["mMissionInfo"]
	737	[9087]	JMP      	782 ; PC := 782
	738	[9088]	GETGLOBAL	R51 K5 ; R51 := 0x7f5022cf
	739	[9088]	GETTABLE 	R51 R51 K6 ; R51 := R51[0xa5c556b9]
	740	[9088]	MOVE     	R52 R3 ; R52 := R3
	741	[9088]	GETGLOBAL	R53 K95 ; R53 := HARD_DAILY_TAG
	742	[9088]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	743	[9088]	TEST     	R51 0 ; if not R51 then PC := 770
	744	[9088]	JMP      	770 ; PC := 770
	745	[9088]	GETGLOBAL	R51 K16 ; R51 := _T
	746	[9088]	GETTABLE 	R51 R51 K96 ; R51 := R51["CachedHardModeDailyMissions"]
	747	[9088]	TEST     	R51 0 ; if not R51 then PC := 770
	748	[9088]	JMP      	770 ; PC := 770
	749	[9089]	GETGLOBAL	R51 K22 ; R51 := 0x603636ad
	750	[9089]	LOADK    	R52 K97 ; R52 := "/Lotus/Language/Labels/SteelPathDaily"
	751	[9089]	LOADNIL  	R53 R53 ; R53 := nil
	752	[9089]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	753	[9089]	MOVE     	R12 R51 ; R12 := R51
	754	[9090]	GETGLOBAL	R51 K16 ; R51 := _T
	755	[9090]	GETTABLE 	R51 R51 K96 ; R51 := R51["CachedHardModeDailyMissions"]
	756	[9090]	GETGLOBAL	R52 K2 ; R52 := 0x64fb1586
	757	[9090]	GETTABLE 	R53 R1 K3 ; R53 := R1["baseNodeName"]
	758	[9090]	CALL     	R52 2 2 ; R52 := R52(R53)
	759	[9090]	GETTABLE 	R51 R51 R52 ; R51 := R51[R52]
	760	[9090]	TEST     	R51 0 ; if not R51 then PC := 782
	761	[9090]	JMP      	782 ; PC := 782
	762	[9091]	GETGLOBAL	R51 K16 ; R51 := _T
	763	[9091]	GETTABLE 	R51 R51 K96 ; R51 := R51["CachedHardModeDailyMissions"]
	764	[9091]	GETGLOBAL	R52 K2 ; R52 := 0x64fb1586
	765	[9091]	GETTABLE 	R53 R1 K3 ; R53 := R1["baseNodeName"]
	766	[9091]	CALL     	R52 2 2 ; R52 := R52(R53)
	767	[9091]	GETTABLE 	R51 R51 R52 ; R51 := R51[R52]
	768	[9091]	GETTABLE 	R10 R51 K98 ; R10 := R51["mission"]
	769	[9092]	JMP      	782 ; PC := 782
	770	[9093]	GETGLOBAL	R51 K5 ; R51 := 0x7f5022cf
	771	[9093]	GETTABLE 	R51 R51 K6 ; R51 := R51[0xa5c556b9]
	772	[9093]	MOVE     	R52 R3 ; R52 := R3
	773	[9093]	GETGLOBAL	R53 K7 ; R53 := HARD_MODE_TAG
	774	[9093]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	775	[9093]	TEST     	R51 0 ; if not R51 then PC := 782
	776	[9093]	JMP      	782 ; PC := 782
	777	[9094]	GETGLOBAL	R51 K22 ; R51 := 0x603636ad
	778	[9094]	LOADK    	R52 K89 ; R52 := "/Lotus/Language/Labels/HardMode"
	779	[9094]	LOADNIL  	R53 R53 ; R53 := nil
	780	[9094]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	781	[9094]	MOVE     	R12 R51 ; R12 := R51
	782	[9097]	TEST     	R10 1 ; if R10 then PC := 899
	783	[9097]	JMP      	899 ; PC := 899
	784	[9098]	TEST     	R2 0 ; if not R2 then PC := 789
	785	[9098]	JMP      	789 ; PC := 789
	786	[9099]	GETGLOBAL	R51 K12 ; R51 := 0x3d106989
	787	[9099]	LOADK    	R52 K99 ; R52 := "Using sector data"
	788	[9099]	CALL     	R51 2 1 ; R51(R52)
	789	[9103]	MOVE     	R10 R9 ; R10 := R9
	790	[9104]	SETTABLE 	R10 K100 R14 ; R10["nightmare"] := R14
	791	[9105]	SETTABLE 	R10 K101 R15 ; R10["voidStorm"] := R15
	792	[9106]	TEST     	R15 0 ; if not R15 then PC := 821
	793	[9106]	JMP      	821 ; PC := 821
	794	[9106]	GETGLOBAL	R51 K16 ; R51 := _T
	795	[9106]	GETTABLE 	R51 R51 K102 ; R51 := R51["CachedVoidStormMissions"]
	796	[9106]	EQ       	1 R51 K8 ; if R51 == nil then PC := 821
	797	[9106]	JMP      	821 ; PC := 821
	798	[9107]	GETGLOBAL	R51 K16 ; R51 := _T
	799	[9107]	GETTABLE 	R51 R51 K102 ; R51 := R51["CachedVoidStormMissions"]
	800	[9107]	GETGLOBAL	R52 K2 ; R52 := 0x64fb1586
	801	[9107]	GETTABLE 	R53 R1 K3 ; R53 := R1["baseNodeName"]
	802	[9107]	CALL     	R52 2 2 ; R52 := R52(R53)
	803	[9107]	GETTABLE 	R51 R51 R52 ; R51 := R51[R52]
	804	[9108]	TEST     	R51 0 ; if not R51 then PC := 821
	805	[9108]	JMP      	821 ; PC := 821
	806	[9109]	GETTABLE 	R52 R51 K104 ; R52 := R51["tier"]
	807	[9109]	SETTABLE 	R10 K103 R52 ; R10["activeMissionTag"] := R52
	808	[9110]	GETTABLE 	R52 R51 K105 ; R52 := R51["enemyLevelIncrease"]
	809	[9111]	GETTABLE 	R53 R10 K74 ; R53 := R10["minEnemyLevel"]
	810	[9111]	ADD      	R53 R53 R52 ; R53 := R53 + R52
	811	[9111]	SETTABLE 	R10 K74 R53 ; R10["minEnemyLevel"] := R53
	812	[9112]	GETTABLE 	R53 R10 K106 ; R53 := R10["maxEnemyLevel"]
	813	[9112]	ADD      	R53 R53 R52 ; R53 := R53 + R52
	814	[9112]	SETTABLE 	R10 K106 R53 ; R10["maxEnemyLevel"] := R53
	815	[9113]	GETTABLE 	R53 R10 K107 ; R53 := R10["minSpaceEnemyLevel"]
	816	[9113]	ADD      	R53 R53 R52 ; R53 := R53 + R52
	817	[9113]	SETTABLE 	R10 K107 R53 ; R10["minSpaceEnemyLevel"] := R53
	818	[9114]	GETTABLE 	R53 R10 K108 ; R53 := R10["maxSpaceEnemyLevel"]
	819	[9114]	ADD      	R53 R53 R52 ; R53 := R53 + R52
	820	[9114]	SETTABLE 	R10 K108 R53 ; R10["maxSpaceEnemyLevel"] := R53
	821	[9118]	TEST     	R14 0 ; if not R14 then PC := 827
	822	[9118]	JMP      	827 ; PC := 827
	823	[9118]	GETTABLE 	R53 R10 K109 ; R53 := R10["missionType"]
	824	[9118]	EQ       	0 R53 K110 ; if R53 ~= 8.000000 then PC := 827
	825	[9118]	JMP      	827 ; PC := 827
	826	[9119]	SETTABLE 	R10 K111 K112 ; R10["maxWaveNum"] := 10.000000
	827	[9123]	GETTABLE 	R53 R10 K113 ; R53 := R10["archwingRequired"]
	828	[9123]	TEST     	R53 1 ; if R53 then PC := 885
	829	[9123]	JMP      	885 ; PC := 885
	830	[9123]	GETGLOBAL	R53 K0 ; R53 := 0x7b998233
	831	[9123]	GETTABLE 	R54 R10 K114 ; R54 := R10["keyChainName"]
	832	[9123]	CALL     	R53 2 2 ; R53 := R53(R54)
	833	[9123]	TEST     	R53 0 ; if not R53 then PC := 885
	834	[9123]	JMP      	885 ; PC := 885
	835	[9123]	GETGLOBAL	R53 K0 ; R53 := 0x7b998233
	836	[9123]	GETTABLE 	R54 R10 K115 ; R54 := R10["levelOverride"]
	837	[9123]	CALL     	R53 2 2 ; R53 := R53(R54)
	838	[9123]	TEST     	R53 1 ; if R53 then PC := 885
	839	[9123]	JMP      	885 ; PC := 885
	840	[9123]	GETGLOBAL	R53 K5 ; R53 := 0x7f5022cf
	841	[9123]	GETTABLE 	R53 R53 K6 ; R53 := R53[0xa5c556b9]
	842	[9123]	GETGLOBAL	R54 K2 ; R54 := 0x64fb1586
	843	[9123]	GETTABLE 	R55 R10 K115 ; R55 := R10["levelOverride"]
	844	[9123]	SELF     	R55 R55 K116 ; R56 := R55; R55 := R55[0xed4e0128]
	845	[9123]	CALL     	R55 2 0 ; R55,... := R55(R56)
	846	[9123]	CALL     	R54 0 2 ; R54 := R54(R55,...)
	847	[9123]	LOADK    	R55 K117 ; R55 := "Zariman"
	848	[9123]	CALL     	R53 3 2 ; R53 := R53(R54,R55)
	849	[9123]	EQ       	0 R53 K8 ; if R53 ~= nil then PC := 885
	850	[9123]	JMP      	885 ; PC := 885
	851	[9124]	LOADNIL  	R53 R53 ; R53 := nil
	852	[9125]	GETGLOBAL	R54 K118 ; R54 := 0xe7f2b02f
	853	[9125]	SELF     	R54 R54 K119 ; R55 := R54; R54 := R54[0x6d0aa187]
	854	[9125]	CALL     	R54 2 2 ; R54 := R54(R55)
	855	[9126]	GETGLOBAL	R55 K59 ; R55 := 0xcfc01047
	856	[9126]	MOVE     	R56 R54 ; R56 := R54
	857	[9126]	CALL     	R55 2 4 ; R55,R56,R57 := R55(R56)
	858	[9126]	JMP      	883 ; PC := 883
	859	[9127]	GETGLOBAL	R60 K120 ; R60 := cjson
	860	[9127]	GETTABLE 	R60 R60 K121 ; R60 := R60[0x7ab914d8]
	861	[9127]	GETTABLE 	R61 R59 K122 ; R61 := R59["loadout"]
	862	[9127]	CALL     	R60 2 2 ; R60 := R60(R61)
	863	[9128]	TEST     	R60 0 ; if not R60 then PC := 883
	864	[9128]	JMP      	883 ; PC := 883
	865	[9128]	GETTABLE 	R61 R60 K123 ; R61 := R60["Nemesis"]
	866	[9128]	TEST     	R61 1 ; if R61 then PC := 883
	867	[9128]	JMP      	883 ; PC := 883
	868	[9129]	GETTABLE 	R61 R10 K51 ; R61 := R10["faction"]
	869	[9129]	EQ       	0 R61 K124 ; if R61 ~= 0.000000 then PC := 873
	870	[9129]	JMP      	873 ; PC := 873
	871	[9130]	GETUPVAL 	R53 U3 ; R53 := U3
	872	[9130]	JMP      	877 ; PC := 877
	873	[9131]	GETTABLE 	R61 R10 K51 ; R61 := R10["faction"]
	874	[9131]	EQ       	0 R61 K10 ; if R61 ~= 1.000000 then PC := 877
	875	[9131]	JMP      	877 ; PC := 877
	876	[9132]	GETUPVAL 	R53 U4 ; R53 := U4
	877	[9137]	TEST     	R53 0 ; if not R53 then PC := 883
	878	[9137]	JMP      	883 ; PC := 883
	879	[9138]	SELF     	R61 R10 K125 ; R62 := R10; R61 := R10[0x5c0d8c92]
	880	[9138]	MOVE     	R63 R53 ; R63 := R53
	881	[9138]	CALL     	R61 3 1 ; R61(R62,R63)
	882	[9139]	JMP      	885 ; PC := 885
	883	[9126]	TFORLOOP 	R55 2 ; R58,R59 := R55(R56,R57); if R58 ~= nil then begin PC = 859; R57 := R58 end
	884	[9141]	JMP      	859 ; PC := 859
	885	[9145]	GETTABLE 	R61 R8 K1 ; R61 := R8["name"]
	886	[9145]	GETGLOBAL	R62 K126 ; R62 := ENTRATI_LANDSCAPE_NODE_TAG
	887	[9145]	EQ       	0 R61 R62 ; if R61 ~= R62 then PC := 899
	888	[9145]	JMP      	899 ; PC := 899
	889	[9145]	GETUPVAL 	R61 U5 ; R61 := U5
	890	[9145]	CALL     	R61 1 2 ; R61 := R61()
	891	[9145]	TEST     	R61 1 ; if R61 then PC := 899
	892	[9145]	JMP      	899 ; PC := 899
	893	[9145]	GETGLOBAL	R61 K0 ; R61 := 0x7b998233
	894	[9145]	GETGLOBAL	R62 K127 ; R62 := 0x83f4e77c
	895	[9145]	CALL     	R61 2 2 ; R61 := R61(R62)
	896	[9145]	TEST     	R61 1 ; if R61 then PC := 899
	897	[9145]	JMP      	899 ; PC := 899
	898	[9147]	SETTABLE 	R10 K128 K129 ; R10["soloMode"] := true
	899	[9151]	GETTABLE 	R61 R8 K130 ; R61 := R8["missionTag"]
	900	[9151]	GETGLOBAL	R62 K11 ; R62 := 0x0469f296
	901	[9151]	LOADK    	R63 K131 ; R63 := "RECONSTRUCTION"
	902	[9151]	CALL     	R62 2 2 ; R62 := R62(R63)
	903	[9151]	EQ       	0 R61 R62 ; if R61 ~= R62 then PC := 936
	904	[9151]	JMP      	936 ; PC := 936
	905	[9152]	GETGLOBAL	R61 K16 ; R61 := _T
	906	[9152]	GETTABLE 	R61 R61 K132 ; R61 := R61["CachedConstructionProjects"]
	907	[9152]	TEST     	R61 0 ; if not R61 then PC := 936
	908	[9152]	JMP      	936 ; PC := 936
	909	[9153]	GETGLOBAL	R61 K59 ; R61 := 0xcfc01047
	910	[9153]	GETGLOBAL	R62 K16 ; R62 := _T
	911	[9153]	GETTABLE 	R62 R62 K132 ; R62 := R62["CachedConstructionProjects"]
	912	[9153]	CALL     	R61 2 4 ; R61,R62,R63 := R61(R62)
	913	[9153]	JMP      	934 ; PC := 934
	914	[9154]	GETTABLE 	R66 R65 K133 ; R66 := R65["info"]
	915	[9154]	GETTABLE 	R66 R66 K134 ; R66 := R66["mNode"]
	916	[9154]	GETTABLE 	R67 R1 K3 ; R67 := R1["baseNodeName"]
	917	[9154]	EQ       	0 R66 R67 ; if R66 ~= R67 then PC := 934
	918	[9154]	JMP      	934 ; PC := 934
	919	[9154]	GETTABLE 	R66 R65 K135 ; R66 := R65["progress"]
	920	[9154]	EQ       	0 R66 K10 ; if R66 ~= 1.000000 then PC := 934
	921	[9154]	JMP      	934 ; PC := 934
	922	[9155]	GETGLOBAL	R66 K22 ; R66 := 0x603636ad
	923	[9155]	GETTABLE 	R67 R8 K136 ; R67 := R8["locTag"]
	924	[9155]	SELF     	R67 R67 K137 ; R68 := R67; R67 := R67[0x6d604ba7]
	925	[9155]	CALL     	R67 2 2 ; R67 := R67(R68)
	926	[9155]	LOADNIL  	R68 R68 ; R68 := nil
	927	[9155]	CALL     	R66 3 2 ; R66 := R66(R67,R68)
	928	[9156]	GETGLOBAL	R67 K22 ; R67 := 0x603636ad
	929	[9156]	LOADK    	R68 K138 ; R68 := "/Lotus/Language/RelayReconstruction/ReconstructionSiteAttack"
	930	[9156]	NEWTABLE 	R69 0 1 ; R69 := {}
	931	[9156]	SETTABLE 	R69 K139 R66 ; R69["LOCATION"] := R66
	932	[9156]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	933	[9156]	MOVE     	R11 R67 ; R11 := R67
	934	[9153]	TFORLOOP 	R61 2 ; R64,R65 := R61(R62,R63); if R64 ~= nil then begin PC = 914; R63 := R64 end
	935	[9157]	JMP      	914 ; PC := 914
	936	[9162]	GETTABLE 	R67 R8 K1 ; R67 := R8["name"]
	937	[9162]	GETGLOBAL	R68 K140 ; R68 := APARTMENT_NODE_TAG
	938	[9162]	EQ       	0 R67 R68 ; if R67 ~= R68 then PC := 945
	939	[9162]	JMP      	945 ; PC := 945
	940	[9163]	GETGLOBAL	R67 K22 ; R67 := 0x603636ad
	941	[9163]	LOADK    	R68 K141 ; R68 := "/Lotus/Language/Zariman/ZarimanApartment"
	942	[9163]	NEWTABLE 	R69 0 0 ; R69 := {}
	943	[9163]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	944	[9163]	MOVE     	R11 R67 ; R11 := R67
	945	[9166]	SETTABLE 	R10 K142 K8 ; R10["levelKeyName"] := nil
	946	[9167]	TEST     	R11 1 ; if R11 then PC := 955
	947	[9167]	JMP      	955 ; PC := 955
	948	[9168]	GETGLOBAL	R67 K22 ; R67 := 0x603636ad
	949	[9168]	GETTABLE 	R68 R8 K136 ; R68 := R8["locTag"]
	950	[9168]	SELF     	R68 R68 K137 ; R69 := R68; R68 := R68[0x6d604ba7]
	951	[9168]	CALL     	R68 2 2 ; R68 := R68(R69)
	952	[9168]	LOADNIL  	R69 R69 ; R69 := nil
	953	[9168]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	954	[9168]	MOVE     	R11 R67 ; R11 := R67
	955	[9170]	GETTABLE 	R13 R7 K1 ; R13 := R7["name"]
	956	[9170]	JMP      	1100 ; PC := 1100
	957	[9173]	TEST     	R2 0 ; if not R2 then PC := 962
	958	[9173]	JMP      	962 ; PC := 962
	959	[9174]	GETGLOBAL	R67 K12 ; R67 := 0x3d106989
	960	[9174]	LOADK    	R68 K143 ; R68 := "No sector"
	961	[9174]	CALL     	R67 2 1 ; R67(R68)
	962	[9177]	EQ       	0 R3 K144 ; if R3 ~= "Photobooth" then PC := 981
	963	[9177]	JMP      	981 ; PC := 981
	964	[9178]	GETGLOBAL	R67 K67 ; R67 := 0x6c97a788
	965	[9178]	GETTABLE 	R67 R67 K145 ; R67 := R67[0x6e0e9f85]
	966	[9178]	CALL     	R67 1 2 ; R67 := R67()
	967	[9178]	MOVE     	R10 R67 ; R10 := R67
	968	[9179]	GETGLOBAL	R67 K147 ; R67 := 0x7ed0a956
	969	[9179]	LOADK    	R68 K148 ; R68 := "/Lotus/Types/GameRules/LotusPhotoBoothGameRules"
	970	[9179]	CALL     	R67 2 2 ; R67 := R67(R68)
	971	[9179]	SETTABLE 	R10 K146 R67 ; R10["gameRules"] := R67
	972	[9180]	GETGLOBAL	R67 K22 ; R67 := 0x603636ad
	973	[9180]	LOADK    	R68 K149 ; R68 := "/Lotus/Language/Menu/Loadout_Photobooth"
	974	[9180]	LOADNIL  	R69 R69 ; R69 := nil
	975	[9180]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	976	[9180]	MOVE     	R11 R67 ; R11 := R67
	977	[9181]	MOVE     	R67 R10 ; R67 := R10
	978	[9181]	MOVE     	R68 R11 ; R68 := R11
	979	[9181]	RETURN   	R67 3 ; return R67, R68 
	980	[9181]	JMP      	999 ; PC := 999
	981	[9182]	EQ       	0 R3 K150 ; if R3 ~= "Simulacrum" then PC := 999
	982	[9182]	JMP      	999 ; PC := 999
	983	[9183]	GETGLOBAL	R67 K67 ; R67 := 0x6c97a788
	984	[9183]	GETTABLE 	R67 R67 K145 ; R67 := R67[0x6e0e9f85]
	985	[9183]	CALL     	R67 1 2 ; R67 := R67()
	986	[9183]	MOVE     	R10 R67 ; R10 := R67
	987	[9184]	GETGLOBAL	R67 K147 ; R67 := 0x7ed0a956
	988	[9184]	LOADK    	R68 K151 ; R68 := "/Lotus/Types/GameRules/LotusDangerRoomGameRules"
	989	[9184]	CALL     	R67 2 2 ; R67 := R67(R68)
	990	[9184]	SETTABLE 	R10 K146 R67 ; R10["gameRules"] := R67
	991	[9185]	GETGLOBAL	R67 K22 ; R67 := 0x603636ad
	992	[9185]	LOADK    	R68 K152 ; R68 := "/Lotus/Language/Game/DangerRoomConsole"
	993	[9185]	LOADNIL  	R69 R69 ; R69 := nil
	994	[9185]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	995	[9185]	MOVE     	R11 R67 ; R11 := R67
	996	[9186]	MOVE     	R67 R10 ; R67 := R10
	997	[9186]	MOVE     	R68 R11 ; R68 := R11
	998	[9186]	RETURN   	R67 3 ; return R67, R68 
	999	[9189]	GETGLOBAL	R67 K5 ; R67 := 0x7f5022cf
	1000	[9189]	GETTABLE 	R67 R67 K6 ; R67 := R67[0xa5c556b9]
	1001	[9189]	MOVE     	R68 R3 ; R68 := R3
	1002	[9189]	GETGLOBAL	R69 K153 ; R69 := KEY_TAG
	1003	[9189]	CALL     	R67 3 2 ; R67 := R67(R68,R69)
	1004	[9190]	EQ       	1 R67 K8 ; if R67 == nil then PC := 1075
	1005	[9190]	JMP      	1075 ; PC := 1075
	1006	[9191]	TEST     	R2 0 ; if not R2 then PC := 1011
	1007	[9191]	JMP      	1011 ; PC := 1011
	1008	[9192]	GETGLOBAL	R68 K12 ; R68 := 0x3d106989
	1009	[9192]	LOADK    	R69 K154 ; R69 := "Key index found"
	1010	[9192]	CALL     	R68 2 1 ; R68(R69)
	1011	[9195]	GETGLOBAL	R68 K5 ; R68 := 0x7f5022cf
	1012	[9195]	GETTABLE 	R68 R68 K9 ; R68 := R68[0x1a94c9cc]
	1013	[9195]	MOVE     	R69 R3 ; R69 := R3
	1014	[9195]	LOADK    	R70 := 1.000000
	1015	[9195]	SUB      	R71 R67 K10 ; R71 := R67 - 1.000000
	1016	[9195]	CALL     	R68 4 2 ; R68 := R68(R69,R70,R71)
	1017	[9196]	GETGLOBAL	R69 K86 ; R69 := 0xb009bbc6
	1018	[9196]	MOVE     	R70 R68 ; R70 := R68
	1019	[9196]	CALL     	R69 2 2 ; R69 := R69(R70)
	1020	[9197]	GETGLOBAL	R70 K0 ; R70 := 0x7b998233
	1021	[9197]	MOVE     	R71 R69 ; R71 := R69
	1022	[9197]	CALL     	R70 2 2 ; R70 := R70(R71)
	1023	[9197]	TEST     	R70 1 ; if R70 then PC := 1075
	1024	[9197]	JMP      	1075 ; PC := 1075
	1025	[9198]	SELF     	R70 R69 K155 ; R71 := R69; R70 := R69[0x6c053909]
	1026	[9198]	CALL     	R70 2 2 ; R70 := R70(R71)
	1027	[9199]	TEST     	R2 0 ; if not R2 then PC := 1032
	1028	[9199]	JMP      	1032 ; PC := 1032
	1029	[9200]	GETGLOBAL	R71 K12 ; R71 := 0x3d106989
	1030	[9200]	LOADK    	R72 K156 ; R72 := "Getting mission from key"
	1031	[9200]	CALL     	R71 2 1 ; R71(R72)
	1032	[9202]	SELF     	R71 R69 K157 ; R72 := R69; R71 := R69[0xef893aec]
	1033	[9202]	CALL     	R71 2 2 ; R71 := R71(R72)
	1034	[9202]	MOVE     	R10 R71 ; R10 := R71
	1035	[9203]	GETGLOBAL	R71 K147 ; R71 := 0x7ed0a956
	1036	[9203]	MOVE     	R72 R68 ; R72 := R68
	1037	[9203]	CALL     	R71 2 2 ; R71 := R71(R72)
	1038	[9203]	SETTABLE 	R10 K142 R71 ; R10["levelKeyName"] := R71
	1039	[9204]	GETTABLE 	R71 R1 K158 ; R71 := R1["quest"]
	1040	[9204]	EQ       	1 R71 K8 ; if R71 == nil then PC := 1046
	1041	[9204]	JMP      	1046 ; PC := 1046
	1042	[9205]	GETGLOBAL	R71 K147 ; R71 := 0x7ed0a956
	1043	[9205]	GETTABLE 	R72 R1 K158 ; R72 := R1["quest"]
	1044	[9205]	CALL     	R71 2 2 ; R71 := R71(R72)
	1045	[9205]	SETTABLE 	R10 K114 R71 ; R10["keyChainName"] := R71
	1046	[9208]	GETTABLE 	R71 R1 K159 ; R71 := R1["difficulty"]
	1047	[9208]	EQ       	1 R71 K8 ; if R71 == nil then PC := 1054
	1048	[9208]	JMP      	1054 ; PC := 1054
	1049	[9208]	GETTABLE 	R71 R1 K159 ; R71 := R1["difficulty"]
	1050	[9208]	LE       	0 K124 R71 ; if 0.000000 > R71 then PC := 1054
	1051	[9208]	JMP      	1054 ; PC := 1054
	1052	[9209]	GETTABLE 	R71 R1 K159 ; R71 := R1["difficulty"]
	1053	[9209]	SETTABLE 	R10 K159 R71 ; R10["difficulty"] := R71
	1054	[9212]	GETTABLE 	R71 R10 K83 ; R71 := R10["uniqueName"]
	1055	[9212]	EQ       	1 R71 K160 ; if R71 == "" then PC := 1063
	1056	[9212]	JMP      	1063 ; PC := 1063
	1057	[9213]	GETGLOBAL	R71 K22 ; R71 := 0x603636ad
	1058	[9213]	GETTABLE 	R72 R10 K83 ; R72 := R10["uniqueName"]
	1059	[9213]	OP_LOADBOOL	R73 0 0 ; R73 := false
	1060	[9213]	CALL     	R71 3 2 ; R71 := R71(R72,R73)
	1061	[9213]	MOVE     	R11 R71 ; R11 := R71
	1062	[9213]	JMP      	1071 ; PC := 1071
	1063	[9215]	GETGLOBAL	R71 K22 ; R71 := 0x603636ad
	1064	[9215]	GETGLOBAL	R72 K2 ; R72 := 0x64fb1586
	1065	[9215]	SELF     	R73 R69 K161 ; R74 := R69; R73 := R69[0xd3a9d01f]
	1066	[9215]	CALL     	R73 2 0 ; R73,... := R73(R74)
	1067	[9215]	CALL     	R72 0 2 ; R72 := R72(R73,...)
	1068	[9215]	OP_LOADBOOL	R73 0 0 ; R73 := false
	1069	[9215]	CALL     	R71 3 2 ; R71 := R71(R72,R73)
	1070	[9215]	MOVE     	R11 R71 ; R11 := R71
	1071	[9218]	SELF     	R71 R0 K162 ; R72 := R0; R71 := R0[0xc1dee03f]
	1072	[9218]	CALL     	R71 2 2 ; R71 := R71(R72)
	1073	[9218]	GETTABLE 	R71 R71 R70 ; R71 := R71[R70]
	1074	[9218]	GETTABLE 	R13 R71 K1 ; R13 := R71["name"]
	1075	[9222]	TEST     	R10 0 ; if not R10 then PC := 1100
	1076	[9222]	JMP      	1100 ; PC := 1100
	1077	[9223]	GETTABLE 	R71 R1 K163 ; R71 := R1["scenarioId"]
	1078	[9223]	TEST     	R71 0 ; if not R71 then PC := 1090
	1079	[9223]	JMP      	1090 ; PC := 1090
	1080	[9224]	GETTABLE 	R71 R1 K163 ; R71 := R1["scenarioId"]
	1081	[9224]	SETTABLE 	R10 K163 R71 ; R10["scenarioId"] := R71
	1082	[9226]	LOADNIL  	R13 R13 ; R13 := nil
	1083	[9227]	GETGLOBAL	R71 K22 ; R71 := 0x603636ad
	1084	[9227]	LOADK    	R72 K164 ; R72 := "/Lotus/Language/G1Quests/FlotillaOperation"
	1085	[9227]	LOADNIL  	R73 R73 ; R73 := nil
	1086	[9227]	CALL     	R71 3 2 ; R71 := R71(R72,R73)
	1087	[9227]	LOADK    	R72 K165 ; R72 := ": "
	1088	[9227]	MOVE     	R73 R11 ; R73 := R11
	1089	[9227]	CONCAT   	R11 R71 R73 ; R11 := R71 .. R72 .. R73
	1090	[9230]	GETTABLE 	R71 R1 K32 ; R71 := R1["goalId"]
	1091	[9230]	TEST     	R71 0 ; if not R71 then PC := 1095
	1092	[9230]	JMP      	1095 ; PC := 1095
	1093	[9231]	GETTABLE 	R71 R1 K32 ; R71 := R1["goalId"]
	1094	[9231]	SETTABLE 	R10 K32 R71 ; R10["goalId"] := R71
	1095	[9234]	GETTABLE 	R71 R1 K166 ; R71 := R1["metadata"]
	1096	[9234]	TEST     	R71 0 ; if not R71 then PC := 1100
	1097	[9234]	JMP      	1100 ; PC := 1100
	1098	[9235]	GETTABLE 	R71 R1 K166 ; R71 := R1["metadata"]
	1099	[9235]	SETTABLE 	R10 K166 R71 ; R10["metadata"] := R71
	1100	[9240]	TEST     	R13 0 ; if not R13 then PC := 1127
	1101	[9240]	JMP      	1127 ; PC := 1127
	1102	[9240]	TEST     	R16 1 ; if R16 then PC := 1127
	1103	[9240]	JMP      	1127 ; PC := 1127
	1104	[9240]	GETTABLE 	R71 R10 K109 ; R71 := R10["missionType"]
	1105	[9240]	EQ       	1 R71 K167 ; if R71 == 30.000000 then PC := 1127
	1106	[9240]	JMP      	1127 ; PC := 1127
	1107	[9241]	GETUPVAL 	R71 U1 ; R71 := U1
	1108	[9241]	GETTABLE 	R71 R71 K73 ; R71 := R71[0x06d055f9]
	1109	[9241]	GETTABLE 	R72 R10 K109 ; R72 := R10["missionType"]
	1110	[9241]	EQ       	1 R72 K168 ; if R72 == 31.000000 then PC := 1113
	1111	[9241]	JMP      	1113 ; PC := 1113
	1112	[9241]	OP_LOADBOOL	R72 0 1 ; R72 := false; PC := 1113
	1113	[9241]	OP_LOADBOOL	R72 1 0 ; R72 := true
	1114	[9241]	LOADK    	R73 K169 ; R73 := "_SPACE"
	1115	[9241]	LOADK    	R74 K160 ; R74 := ""
	1116	[9241]	CALL     	R71 4 2 ; R71 := R71(R72,R73,R74)
	1117	[9242]	MOVE     	R72 R11 ; R72 := R11
	1118	[9242]	LOADK    	R73 K53 ; R73 := " ("
	1119	[9242]	GETGLOBAL	R74 K22 ; R74 := 0x603636ad
	1120	[9242]	MOVE     	R75 R13 ; R75 := R13
	1121	[9242]	MOVE     	R76 R71 ; R76 := R71
	1122	[9242]	CONCAT   	R75 R75 R76 ; R75 := R75 .. R76
	1123	[9242]	OP_LOADBOOL	R76 0 0 ; R76 := false
	1124	[9242]	CALL     	R74 3 2 ; R74 := R74(R75,R76)
	1125	[9242]	LOADK    	R75 K57 ; R75 := ")"
	1126	[9242]	CONCAT   	R11 R72 R75 ; R11 := R72 .. R73 .. R74 .. R75
	1127	[9244]	TEST     	R12 0 ; if not R12 then PC := 1133
	1128	[9244]	JMP      	1133 ; PC := 1133
	1129	[9245]	MOVE     	R72 R11 ; R72 := R11
	1130	[9245]	LOADK    	R73 K170 ; R73 := " - "
	1131	[9245]	MOVE     	R74 R12 ; R74 := R12
	1132	[9245]	CONCAT   	R11 R72 R74 ; R11 := R72 .. R73 .. R74
	1133	[9248]	TEST     	R10 0 ; if not R10 then PC := 1139
	1134	[9248]	JMP      	1139 ; PC := 1139
	1135	[9249]	MOVE     	R72 R10 ; R72 := R10
	1136	[9249]	MOVE     	R73 R11 ; R73 := R11
	1137	[9249]	RETURN   	R72 3 ; return R72, R73 
	1138	[9249]	JMP      	1146 ; PC := 1146
	1139	[9251]	GETGLOBAL	R72 K12 ; R72 := 0x3d106989
	1140	[9251]	LOADK    	R73 K171 ; R73 := "GetMissionVoteInfo failed for "
	1141	[9251]	GETGLOBAL	R74 K2 ; R74 := 0x64fb1586
	1142	[9251]	GETTABLE 	R75 R1 K1 ; R75 := R1["name"]
	1143	[9251]	CALL     	R74 2 2 ; R74 := R74(R75)
	1144	[9251]	CONCAT   	R73 R73 R74 ; R73 := R73 .. R74
	1145	[9251]	CALL     	R72 2 1 ; R72(R73)
	1146	[9255]	LOADNIL  	R72 R74 ; R72 := R73 := R74 := nil
	1147	[9255]	RETURN   	R72 4 ; return R72, R73, R74 
	1148	[9256]	RETURN   	R0 1 ; return 

function #405 <?:9258,9274> (31 instructions, 124 bytes at 00000160C685ADC0)
2 params, 7 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[9260]	EQ       	1 R0 K0 ; if R0 == nil then PC := 5
	2	[9260]	JMP      	5 ; PC := 5
	3	[9260]	EQ       	0 R0 K1 ; if R0 ~= "" then PC := 6
	4	[9260]	JMP      	6 ; PC := 6
	5	[9260]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 6
	6	[9260]	OP_LOADBOOL	R2 1 0 ; R2 := true
	7	[9261]	GETGLOBAL	R3 K2 ; R3 := 0x0997dbe6
	8	[9261]	LOADK    	R4 := 0.000000
	9	[9261]	CALL     	R3 2 2 ; R3 := R3(R4)
	10	[9261]	EQ       	1 R1 R3 ; if R1 == R3 then PC := 26
	11	[9261]	JMP      	26 ; PC := 26
	12	[9262]	TEST     	R2 0 ; if not R2 then PC := 22
	13	[9262]	JMP      	22 ; PC := 22
	14	[9263]	MOVE     	R3 R0 ; R3 := R0
	15	[9263]	LOADK    	R4 K3 ; R4 := "_"
	16	[9263]	GETGLOBAL	R5 K4 ; R5 := 0x64fb1586
	17	[9263]	MOVE     	R6 R1 ; R6 := R1
	18	[9263]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[9263]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	20	[9263]	RETURN   	R3 2 ; return R3 
	21	[9263]	JMP      	26 ; PC := 26
	22	[9265]	GETGLOBAL	R3 K4 ; R3 := 0x64fb1586
	23	[9265]	MOVE     	R4 R1 ; R4 := R1
	24	[9265]	TAILCALL 	R3 2 0 ; R3,... := R3(R4)
	25	[9265]	RETURN   	R3 0 ; return R3,... 
	26	[9269]	TEST     	R2 0 ; if not R2 then PC := 29
	27	[9269]	JMP      	29 ; PC := 29
	28	[9270]	RETURN   	R0 2 ; return R0 
	29	[9273]	LOADK    	R3 K1 ; R3 := ""
	30	[9273]	RETURN   	R3 2 ; return R3 
	31	[9274]	RETURN   	R0 1 ; return 

function #406 <?:9276,9294> (41 instructions, 164 bytes at 00000160C685AFD0)
0 params, 6 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[9277]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[9277]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	3	[9277]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9277]	TEST     	R0 1 ; if R0 then PC := 41
	5	[9277]	JMP      	41 ; PC := 41
	6	[9278]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	7	[9278]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x41f4ba99]
	8	[9278]	CALL     	R0 2 1 ; R0(R1)
	9	[9279]	GETGLOBAL	R0 K1 ; R0 := 0x25d99d89
	10	[9279]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x62c81b76]
	11	[9279]	CALL     	R0 2 2 ; R0 := R0(R1)
	12	[9280]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xb61abfd2]
	13	[9280]	LOADK    	R3 := 1.000000
	14	[9280]	LOADK    	R4 := 0.000000
	15	[9280]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	16	[9282]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	17	[9282]	GETTABLE 	R3 R1 K6 ; R3 := R1["mItemType"]
	18	[9282]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[9282]	TEST     	R2 0 ; if not R2 then PC := 41
	20	[9282]	JMP      	41 ; PC := 41
	21	[9283]	GETUPVAL 	R2 U0 ; R2 := U0
	22	[9283]	CALL     	R2 1 2 ; R2 := R2()
	23	[9284]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	24	[9284]	MOVE     	R4 R2 ; R4 := R2
	25	[9284]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[9284]	TEST     	R3 1 ; if R3 then PC := 30
	27	[9284]	JMP      	30 ; PC := 30
	28	[9285]	SELF     	R3 R2 K7 ; R4 := R2; R3 := R2[0xa2880940]
	29	[9285]	CALL     	R3 2 1 ; R3(R4)
	30	[9288]	GETUPVAL 	R3 U1 ; R3 := U1
	31	[9288]	GETTABLE 	R3 R3 K8 ; R3 := R3[0xa9882367]
	32	[9288]	LOADK    	R4 K9 ; R4 := "MoaInteractionAction"
	33	[9288]	CALL     	R3 2 2 ; R3 := R3(R4)
	34	[9289]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	35	[9289]	MOVE     	R5 R3 ; R5 := R3
	36	[9289]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[9289]	TEST     	R4 1 ; if R4 then PC := 41
	38	[9289]	JMP      	41 ; PC := 41
	39	[9290]	SELF     	R4 R3 K10 ; R5 := R3; R4 := R3[0xf4e253b6]
	40	[9290]	CALL     	R4 2 1 ; R4(R5)
	41	[9294]	RETURN   	R0 1 ; return 

function #407 <?:9296,9314> (42 instructions, 168 bytes at 00000160C685B2E0)
1 param, 17 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[9297]	GETGLOBAL	R1 K0 ; R1 := 0xb009bbc6
	2	[9297]	GETTABLE 	R2 R0 K1 ; R2 := R0["mItemType"]
	3	[9297]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9298]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0x67bc9d36]
	5	[9298]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[9299]	GETTABLE 	R3 R0 K3 ; R3 := R0["mReqCredits"]
	7	[9300]	SUB      	R4 R2 R3 ; R4 := R2 - R3
	8	[9300]	DIV      	R4 R4 R2 ; R4 := R4 / R2
	9	[9300]	MUL      	R4 R4 K4 ; R4 := R4 * 0.200000
	10	[9302]	SELF     	R5 R1 K5 ; R6 := R1; R5 := R1[0xfc40d6a1]
	11	[9302]	CALL     	R5 2 2 ; R5 := R5(R6)
	12	[9303]	LOADK    	R6 := 1.000000
	13	[9303]	LEN      	R7 R5 ; R7 := # R5
	14	[9303]	LOADK    	R8 := 1.000000
	15	[9303]	FORPREP  	R6 40 ; R6 -= R8; PC := 40
	16	[9304]	LOADK    	R10 := 1.000000
	17	[9304]	GETTABLE 	R11 R0 K6 ; R11 := R0["mReqItems"]
	18	[9304]	LEN      	R11 R11 ; R11 := # R11
	19	[9304]	LOADK    	R12 := 1.000000
	20	[9304]	FORPREP  	R10 39 ; R10 -= R12; PC := 39
	21	[9305]	GETTABLE 	R14 R0 K6 ; R14 := R0["mReqItems"]
	22	[9305]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	23	[9305]	GETTABLE 	R14 R14 K1 ; R14 := R14["mItemType"]
	24	[9305]	GETTABLE 	R15 R5 R9 ; R15 := R5[R9]
	25	[9305]	GETTABLE 	R15 R15 K1 ; R15 := R15["mItemType"]
	26	[9305]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 39
	27	[9305]	JMP      	39 ; PC := 39
	28	[9306]	GETTABLE 	R14 R0 K6 ; R14 := R0["mReqItems"]
	29	[9306]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	30	[9306]	GETTABLE 	R14 R14 K7 ; R14 := R14["mItemCount"]
	31	[9308]	GETTABLE 	R15 R5 R9 ; R15 := R5[R9]
	32	[9308]	GETTABLE 	R15 R15 K7 ; R15 := R15["mItemCount"]
	33	[9308]	SUB      	R15 R15 R14 ; R15 := R15 - R14
	34	[9308]	GETTABLE 	R16 R5 R9 ; R16 := R5[R9]
	35	[9308]	GETTABLE 	R16 R16 K7 ; R16 := R16["mItemCount"]
	36	[9308]	DIV      	R15 R15 R16 ; R15 := R15 / R16
	37	[9308]	MUL      	R15 R15 K4 ; R15 := R15 * 0.200000
	38	[9308]	ADD      	R4 R4 R15 ; R4 := R4 + R15
	39	[9304]	FORLOOP  	R10 21 ; R10 += R12; if R10 <= R11 then begin PC := 21; R13 := R10 end
	40	[9303]	FORLOOP  	R6 16 ; R6 += R8; if R6 <= R7 then begin PC := 16; R9 := R6 end
	41	[9313]	RETURN   	R4 2 ; return R4 
	42	[9314]	RETURN   	R0 1 ; return 

function #408 <?:9316,9329> (59 instructions, 236 bytes at 00000160C685B600)
1 param, 14 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[9317]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[9317]	GETGLOBAL	R2 K1 ; R2 := 0x25d99d89
	3	[9317]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9317]	TEST     	R1 1 ; if R1 then PC := 11
	5	[9317]	JMP      	11 ; PC := 11
	6	[9317]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	7	[9317]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xefee6c91]
	8	[9317]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[9317]	LT       	0 R1 K3 ; if R1 >= 30.000000 then PC := 58
	10	[9317]	JMP      	58 ; PC := 58
	11	[9318]	LOADNIL  	R1 R2 ; R1 := R2 := nil
	12	[9319]	GETGLOBAL	R3 K4 ; R3 := 0xc8802016
	13	[9319]	NEWTABLE 	R4 2 0 ; R4 := {}
	14	[9319]	LOADK    	R5 K5 ; R5 := "truemaster"
	15	[9319]	LOADK    	R6 K6 ; R6 := "truemasteralt"
	16	[9319]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	17	[9319]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	18	[9319]	JMP      	56 ; PC := 56
	19	[9320]	LOADK    	R8 K7 ; R8 := ":"
	20	[9320]	MOVE     	R9 R7 ; R9 := R7
	21	[9320]	LOADK    	R10 K7 ; R10 := ":"
	22	[9320]	CONCAT   	R7 R8 R10 ; R7 := R8 .. R9 .. R10
	23	[9321]	GETGLOBAL	R8 K8 ; R8 := 0x7f5022cf
	24	[9321]	GETTABLE 	R8 R8 K9 ; R8 := R8[0xa5c556b9]
	25	[9321]	GETGLOBAL	R9 K10 ; R9 := 0x83e41587
	26	[9321]	MOVE     	R10 R0 ; R10 := R0
	27	[9321]	CALL     	R9 2 2 ; R9 := R9(R10)
	28	[9321]	MOVE     	R10 R7 ; R10 := R7
	29	[9321]	CALL     	R8 3 3 ; R8,R9 := R8(R9,R10)
	30	[9321]	MOVE     	R2 R9 ; R2 := R9
	31	[9321]	MOVE     	R1 R8 ; R1 := R8
	32	[9322]	EQ       	1 R1 K11 ; if R1 == nil then PC := 56
	33	[9322]	JMP      	56 ; PC := 56
	34	[9323]	GETGLOBAL	R8 K8 ; R8 := 0x7f5022cf
	35	[9323]	GETTABLE 	R8 R8 K12 ; R8 := R8[0x66edf04f]
	36	[9323]	MOVE     	R9 R0 ; R9 := R0
	37	[9323]	GETGLOBAL	R10 K8 ; R10 := 0x7f5022cf
	38	[9323]	GETTABLE 	R10 R10 K13 ; R10 := R10[0x1a94c9cc]
	39	[9323]	MOVE     	R11 R0 ; R11 := R0
	40	[9323]	MOVE     	R12 R1 ; R12 := R1
	41	[9323]	MOVE     	R13 R2 ; R13 := R2
	42	[9323]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	43	[9323]	LOADK    	R11 K14 ; R11 := ":clem:"
	44	[9323]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	45	[9323]	MOVE     	R0 R8 ; R0 := R8
	46	[9324]	GETGLOBAL	R8 K8 ; R8 := 0x7f5022cf
	47	[9324]	GETTABLE 	R8 R8 K9 ; R8 := R8[0xa5c556b9]
	48	[9324]	GETGLOBAL	R9 K10 ; R9 := 0x83e41587
	49	[9324]	MOVE     	R10 R0 ; R10 := R0
	50	[9324]	CALL     	R9 2 2 ; R9 := R9(R10)
	51	[9324]	MOVE     	R10 R7 ; R10 := R7
	52	[9324]	CALL     	R8 3 3 ; R8,R9 := R8(R9,R10)
	53	[9324]	MOVE     	R2 R9 ; R2 := R9
	54	[9324]	MOVE     	R1 R8 ; R1 := R8
	55	[9324]	JMP      	32 ; PC := 32
	56	[9319]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 19; R5 := R6 end
	57	[9325]	JMP      	19 ; PC := 19
	58	[9328]	RETURN   	R0 2 ; return R0 
	59	[9329]	RETURN   	R0 1 ; return 

function #409 <?:9331,9333> (5 instructions, 20 bytes at 00000160C685BA70)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[9332]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[9332]	MOVE     	R2 R0 ; R2 := R0
	3	[9332]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	4	[9332]	RETURN   	R1 0 ; return R1,... 
	5	[9333]	RETURN   	R0 1 ; return 

function #410 <?:9335,9344> (19 instructions, 76 bytes at 00000160C685BB60)
3 params, 8 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[9336]	EQ       	0 R2 K0 ; if R2 ~= nil then PC := 4
	2	[9336]	JMP      	4 ; PC := 4
	3	[9337]	OP_LOADBOOL	R2 0 0 ; R2 := false
	4	[9340]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	5	[9340]	GETGLOBAL	R4 K2 ; R4 := 0x25d99d89
	6	[9340]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[9340]	TEST     	R3 1 ; if R3 then PC := 19
	8	[9340]	JMP      	19 ; PC := 19
	9	[9341]	GETUPVAL 	R3 U0 ; R3 := U0
	10	[9341]	MOVE     	R4 R0 ; R4 := R0
	11	[9341]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[9341]	MOVE     	R0 R3 ; R0 := R3
	13	[9342]	GETGLOBAL	R3 K2 ; R3 := 0x25d99d89
	14	[9342]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x4ac9c4ef]
	15	[9342]	MOVE     	R5 R0 ; R5 := R0
	16	[9342]	MOVE     	R6 R1 ; R6 := R1
	17	[9342]	MOVE     	R7 R2 ; R7 := R2
	18	[9342]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	19	[9344]	RETURN   	R0 1 ; return 

function #411 <?:9346,9348> (7 instructions, 28 bytes at 00000160C685BD00)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[9347]	GETGLOBAL	R1 K0 ; R1 := SLOT_TYPES
	2	[9347]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	3	[9347]	TEST     	R1 1 ; if R1 then PC := 6
	4	[9347]	JMP      	6 ; PC := 6
	5	[9347]	LOADK    	R1 K1 ; R1 := "NOT_RECOGNIZED"
	6	[9347]	RETURN   	R1 2 ; return R1 
	7	[9348]	RETURN   	R0 1 ; return 

function #412 <?:9350,9374> (54 instructions, 216 bytes at 00000160C685BE60)
1 param, 8 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[9351]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[9351]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x1467d5f4]
	3	[9351]	CALL     	R1 1 2 ; R1 := R1()
	4	[9351]	TEST     	R1 1 ; if R1 then PC := 10
	5	[9351]	JMP      	10 ; PC := 10
	6	[9351]	GETGLOBAL	R1 K2 ; R1 := _T
	7	[9351]	GETTABLE 	R1 R1 K3 ; R1 := R1["ChatMaximized"]
	8	[9351]	TEST     	R1 0 ; if not R1 then PC := 12
	9	[9351]	JMP      	12 ; PC := 12
	10	[9352]	OP_LOADBOOL	R1 0 0 ; R1 := false
	11	[9352]	RETURN   	R1 2 ; return R1 
	12	[9355]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	13	[9355]	MOVE     	R2 R0 ; R2 := R0
	14	[9355]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[9355]	TEST     	R1 0 ; if not R1 then PC := 19
	16	[9355]	JMP      	19 ; PC := 19
	17	[9356]	OP_LOADBOOL	R1 1 0 ; R1 := true
	18	[9356]	RETURN   	R1 2 ; return R1 
	19	[9359]	GETGLOBAL	R1 K5 ; R1 := 0x76ea806b
	20	[9359]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x3f3ae64c]
	21	[9359]	LOADK    	R3 := 0.000000
	22	[9359]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	23	[9360]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	24	[9360]	MOVE     	R3 R1 ; R3 := R1
	25	[9360]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[9360]	TEST     	R2 0 ; if not R2 then PC := 30
	27	[9360]	JMP      	30 ; PC := 30
	28	[9361]	OP_LOADBOOL	R2 1 0 ; R2 := true
	29	[9361]	RETURN   	R2 2 ; return R2 
	30	[9364]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0x40e9c32b]
	31	[9364]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[9365]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	33	[9365]	MOVE     	R4 R2 ; R4 := R2
	34	[9365]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[9365]	TEST     	R3 0 ; if not R3 then PC := 39
	36	[9365]	JMP      	39 ; PC := 39
	37	[9366]	OP_LOADBOOL	R3 1 0 ; R3 := true
	38	[9366]	RETURN   	R3 2 ; return R3 
	39	[9369]	SELF     	R3 R2 K8 ; R4 := R2; R3 := R2[0x658fe518]
	40	[9369]	CALL     	R3 2 2 ; R3 := R3(R4)
	41	[9370]	EQ       	0 R3 K9 ; if R3 ~= 2.000000 then PC := 49
	42	[9370]	JMP      	49 ; PC := 49
	43	[9371]	SELF     	R4 R0 K10 ; R5 := R0; R4 := R0[0xe4162eed]
	44	[9371]	LOADK    	R6 K11 ; R6 := "IsEndOfMatch"
	45	[9371]	LOADK    	R7 K12 ; R7 := ""
	46	[9371]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	47	[9371]	NOT      	R4 R4 ; R4 := not R4
	48	[9371]	RETURN   	R4 2 ; return R4 
	49	[9373]	EQ       	1 R3 K13 ; if R3 == 1.000000 then PC := 52
	50	[9373]	JMP      	52 ; PC := 52
	51	[9373]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 52
	52	[9373]	OP_LOADBOOL	R4 1 0 ; R4 := true
	53	[9373]	RETURN   	R4 2 ; return R4 
	54	[9374]	RETURN   	R0 1 ; return 

function #413 <?:9376,9418> (112 instructions, 448 bytes at 00000160C685C240)
1 param, 11 slots, 2 upvalues, 0 locals, 40 constants, 0 functions
	1	[9377]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	2	[9377]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x18d05d30]
	3	[9377]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9377]	TEST     	R1 0 ; if not R1 then PC := 23
	5	[9377]	JMP      	23 ; PC := 23
	6	[9378]	GETGLOBAL	R1 K2 ; R1 := 0x25d99d89
	7	[9378]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xf14b6e0b]
	8	[9378]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[9378]	TEST     	R1 1 ; if R1 then PC := 16
	10	[9378]	JMP      	16 ; PC := 16
	11	[9379]	GETGLOBAL	R1 K4 ; R1 := 0x34291f5c
	12	[9379]	GETTABLE 	R1 R1 K5 ; R1 := R1[0x8ee24660]
	13	[9379]	OP_LOADBOOL	R2 0 0 ; R2 := false
	14	[9379]	CALL     	R1 2 1 ; R1(R2)
	15	[9380]	RETURN   	R0 1 ; return 
	16	[9383]	GETGLOBAL	R1 K6 ; R1 := _T
	17	[9383]	GETTABLE 	R1 R1 K7 ; R1 := R1["RailjackStopHullBreach"]
	18	[9383]	TEST     	R1 0 ; if not R1 then PC := 23
	19	[9383]	JMP      	23 ; PC := 23
	20	[9384]	GETGLOBAL	R1 K6 ; R1 := _T
	21	[9384]	GETTABLE 	R1 R1 K8 ; R1 := R1[0x6bc4e323]
	22	[9384]	CALL     	R1 1 1 ; R1()
	23	[9388]	GETGLOBAL	R1 K6 ; R1 := _T
	24	[9388]	SETTABLE 	R1 K9 R0 ; R1["AbortedRailjackMission"] := R0
	25	[9389]	GETGLOBAL	R1 K6 ; R1 := _T
	26	[9389]	GETTABLE 	R1 R1 K9 ; R1 := R1["AbortedRailjackMission"]
	27	[9389]	TEST     	R1 0 ; if not R1 then PC := 41
	28	[9389]	JMP      	41 ; PC := 41
	29	[9389]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	30	[9389]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x18d05d30]
	31	[9389]	CALL     	R1 2 2 ; R1 := R1(R2)
	32	[9389]	TEST     	R1 0 ; if not R1 then PC := 41
	33	[9389]	JMP      	41 ; PC := 41
	34	[9390]	GETGLOBAL	R1 K10 ; R1 := 0xbe190284
	35	[9390]	SELF     	R1 R1 K11 ; R2 := R1; R1 := R1[0x751f061d]
	36	[9390]	GETGLOBAL	R3 K12 ; R3 := 0x0469f296
	37	[9390]	LOADK    	R4 K13 ; R4 := "RJMissionAborted"
	38	[9390]	CALL     	R3 2 2 ; R3 := R3(R4)
	39	[9390]	LOADK    	R4 := 1.000000
	40	[9390]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	41	[9393]	GETUPVAL 	R1 U0 ; R1 := U0
	42	[9393]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	43	[9393]	CALL     	R1 2 2 ; R1 := R1(R2)
	44	[9393]	TEST     	R1 0 ; if not R1 then PC := 49
	45	[9393]	JMP      	49 ; PC := 49
	46	[9394]	GETGLOBAL	R1 K6 ; R1 := _T
	47	[9394]	SETTABLE 	R1 K14 K15 ; R1["RailJackNextMissionNode"] := "ReplayQuest"
	48	[9394]	JMP      	90 ; PC := 90
	49	[9396]	LOADK    	R1 K16 ; R1 := "CrewBattleNodeDojo"
	50	[9397]	GETGLOBAL	R2 K17 ; R2 := 0x7b998233
	51	[9397]	GETGLOBAL	R3 K2 ; R3 := 0x25d99d89
	52	[9397]	CALL     	R2 2 2 ; R2 := R2(R3)
	53	[9397]	TEST     	R2 1 ; if R2 then PC := 68
	54	[9397]	JMP      	68 ; PC := 68
	55	[9397]	GETGLOBAL	R2 K18 ; R2 := 0xe7f2b02f
	56	[9397]	SELF     	R2 R2 K19 ; R3 := R2; R2 := R2[0xca33534d]
	57	[9397]	CALL     	R2 2 2 ; R2 := R2(R3)
	58	[9397]	TEST     	R2 0 ; if not R2 then PC := 68
	59	[9397]	JMP      	68 ; PC := 68
	60	[9398]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	61	[9398]	SELF     	R2 R2 K20 ; R3 := R2; R2 := R2[0xc8253330]
	62	[9398]	CALL     	R2 2 2 ; R2 := R2(R3)
	63	[9399]	GETGLOBAL	R3 K21 ; R3 := 0x64fb1586
	64	[9399]	GETTABLE 	R4 R2 K22 ; R4 := R2["location"]
	65	[9399]	CALL     	R3 2 2 ; R3 := R3(R4)
	66	[9399]	LOADK    	R4 K23 ; R4 := "_HUB"
	67	[9399]	CONCAT   	R1 R3 R4 ; R1 := R3 .. R4
	68	[9402]	GETGLOBAL	R3 K6 ; R3 := _T
	69	[9402]	GETGLOBAL	R4 K12 ; R4 := 0x0469f296
	70	[9402]	MOVE     	R5 R1 ; R5 := R1
	71	[9402]	CALL     	R4 2 2 ; R4 := R4(R5)
	72	[9402]	SETTABLE 	R3 K14 R4 ; R3["RailJackNextMissionNode"] := R4
	73	[9403]	GETGLOBAL	R3 K6 ; R3 := _T
	74	[9403]	GETGLOBAL	R4 K10 ; R4 := 0xbe190284
	75	[9403]	SELF     	R4 R4 K25 ; R5 := R4; R4 := R4[0xf2deaf69]
	76	[9403]	GETGLOBAL	R6 K26 ; R6 := gLotusAttractModeGameRulesType
	77	[9403]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	78	[9403]	SETTABLE 	R3 K24 R4 ; R3["SeamlessRailJackTransition"] := R4
	79	[9405]	NEWTABLE 	R3 0 2 ; R3 := {}
	80	[9405]	SETTABLE 	R3 K27 R1 ; R3["name"] := R1
	81	[9405]	SETTABLE 	R3 K28 K29 ; R3["difficulty"] := 0.000000
	82	[9406]	GETGLOBAL	R4 K30 ; R4 := cjson
	83	[9406]	GETTABLE 	R4 R4 K31 ; R4 := R4[0xb139d7bc]
	84	[9406]	MOVE     	R5 R3 ; R5 := R3
	85	[9406]	CALL     	R4 2 2 ; R4 := R4(R5)
	86	[9407]	GETGLOBAL	R5 K18 ; R5 := 0xe7f2b02f
	87	[9407]	SELF     	R5 R5 K32 ; R6 := R5; R5 := R5[0xd8f4f9d0]
	88	[9407]	MOVE     	R7 R4 ; R7 := R4
	89	[9407]	CALL     	R5 3 1 ; R5(R6,R7)
	90	[9410]	GETUPVAL 	R5 U1 ; R5 := U1
	91	[9410]	CALL     	R5 1 2 ; R5 := R5()
	92	[9411]	SELF     	R6 R5 K33 ; R7 := R5; R6 := R5[0x3ad9ed31]
	93	[9411]	GETGLOBAL	R8 K12 ; R8 := 0x0469f296
	94	[9411]	LOADK    	R9 K34 ; R9 := "CrewShipGenericTunnel"
	95	[9411]	CALL     	R8 2 0 ; R8,... := R8(R9)
	96	[9411]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	97	[9412]	GETGLOBAL	R7 K10 ; R7 := 0xbe190284
	98	[9412]	SELF     	R7 R7 K35 ; R8 := R7; R7 := R7[0xd7d79b74]
	99	[9412]	CALL     	R7 2 2 ; R7 := R7(R8)
	100	[9413]	SELF     	R8 R7 K36 ; R9 := R7; R8 := R7[0xb642d60b]
	101	[9413]	GETTABLE 	R10 R6 K37 ; R10 := R6["mission"]
	102	[9413]	CALL     	R8 3 1 ; R8(R9,R10)
	103	[9415]	GETGLOBAL	R8 K17 ; R8 := 0x7b998233
	104	[9415]	GETGLOBAL	R9 K6 ; R9 := _T
	105	[9415]	GETTABLE 	R9 R9 K38 ; R9 := R9["ClearRailjackMissionState"]
	106	[9415]	CALL     	R8 2 2 ; R8 := R8(R9)
	107	[9415]	TEST     	R8 1 ; if R8 then PC := 112
	108	[9415]	JMP      	112 ; PC := 112
	109	[9416]	GETGLOBAL	R8 K6 ; R8 := _T
	110	[9416]	GETTABLE 	R8 R8 K39 ; R8 := R8[0x7f11b15b]
	111	[9416]	CALL     	R8 1 1 ; R8()
	112	[9418]	RETURN   	R0 1 ; return 

function #414 <?:9420,9424> (28 instructions, 112 bytes at 00000160C685CB90)
0 params, 7 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[9421]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[9421]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xd7d79b74]
	3	[9421]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9422]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	5	[9422]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x78298275]
	6	[9422]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[9423]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	8	[9423]	MOVE     	R3 R0 ; R3 := R0
	9	[9423]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[9423]	TEST     	R2 1 ; if R2 then PC := 25
	11	[9423]	JMP      	25 ; PC := 25
	12	[9423]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	13	[9423]	MOVE     	R3 R1 ; R3 := R1
	14	[9423]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[9423]	TEST     	R2 1 ; if R2 then PC := 25
	16	[9423]	JMP      	25 ; PC := 25
	17	[9423]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	18	[9423]	SELF     	R3 R0 K5 ; R4 := R0; R3 := R0[0x973c5b4d]
	19	[9423]	SELF     	R5 R1 K6 ; R6 := R1; R5 := R1[0xe79e7ef4]
	20	[9423]	CALL     	R5 2 0 ; R5,... := R5(R6)
	21	[9423]	CALL     	R3 0 0 ; R3,... := R3(R4,...)
	22	[9423]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	23	[9423]	NOT      	R2 R2 ; R2 := not R2
	24	[9423]	JMP      	27 ; PC := 27
	25	[9423]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 26
	26	[9423]	OP_LOADBOOL	R2 1 0 ; R2 := true
	27	[9423]	RETURN   	R2 2 ; return R2 
	28	[9424]	RETURN   	R0 1 ; return 

function #415 <?:9426,9445> (45 instructions, 180 bytes at 00000160C685CDA0)
5 params, 21 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[9427]	GETGLOBAL	R5 K0 ; R5 := 0xeb8fddd7
	2	[9427]	CALL     	R5 1 2 ; R5 := R5()
	3	[9427]	TEST     	R5 1 ; if R5 then PC := 11
	4	[9427]	JMP      	11 ; PC := 11
	5	[9427]	GETGLOBAL	R5 K1 ; R5 := 0x9ba7909f
	6	[9427]	SELF     	R5 R5 K2 ; R6 := R5; R5 := R5[0xbf9494fc]
	7	[9427]	LOADK    	R7 K3 ; R7 := "Graphics.UseWeGameCensoring"
	8	[9427]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	9	[9427]	TEST     	R5 0 ; if not R5 then PC := 45
	10	[9427]	JMP      	45 ; PC := 45
	11	[9428]	LOADK    	R5 := 1.000000
	12	[9428]	LEN      	R6 R1 ; R6 := # R1
	13	[9428]	LOADK    	R7 := 1.000000
	14	[9428]	FORPREP  	R5 20 ; R5 -= R7; PC := 20
	15	[9429]	SELF     	R9 R0 K4 ; R10 := R0; R9 := R0[0xcddc3abb]
	16	[9429]	SUB      	R11 R8 K5 ; R11 := R8 - 1.000000
	17	[9429]	GETTABLE 	R12 R1 R8 ; R12 := R1[R8]
	18	[9429]	OP_LOADBOOL	R13 0 0 ; R13 := false
	19	[9429]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	20	[9428]	FORLOOP  	R5 15 ; R5 += R7; if R5 <= R6 then begin PC := 15; R8 := R5 end
	21	[9432]	LOADK    	R9 := 1.000000
	22	[9432]	LEN      	R10 R2 ; R10 := # R2
	23	[9432]	LOADK    	R11 := 1.000000
	24	[9432]	FORPREP  	R9 44 ; R9 -= R11; PC := 44
	25	[9433]	GETGLOBAL	R13 K6 ; R13 := 0xa421af95
	26	[9433]	CALL     	R13 1 2 ; R13 := R13()
	27	[9434]	GETGLOBAL	R14 K7 ; R14 := 0x00046924
	28	[9434]	CALL     	R14 1 2 ; R14 := R14()
	29	[9435]	LEN      	R15 R3 ; R15 := # R3
	30	[9435]	LE       	0 R12 R15 ; if R12 > R15 then PC := 33
	31	[9435]	JMP      	33 ; PC := 33
	32	[9436]	GETTABLE 	R13 R3 R12 ; R13 := R3[R12]
	33	[9439]	LEN      	R15 R4 ; R15 := # R4
	34	[9439]	LE       	0 R12 R15 ; if R12 > R15 then PC := 37
	35	[9439]	JMP      	37 ; PC := 37
	36	[9440]	GETTABLE 	R14 R4 R12 ; R14 := R4[R12]
	37	[9442]	SELF     	R15 R0 K8 ; R16 := R0; R15 := R0[0x47901f07]
	38	[9442]	GETTABLE 	R17 R2 R12 ; R17 := R2[R12]
	39	[9442]	GETGLOBAL	R18 K9 ; R18 := 0x0469f296
	40	[9442]	CALL     	R18 1 2 ; R18 := R18()
	41	[9442]	MOVE     	R19 R13 ; R19 := R13
	42	[9442]	MOVE     	R20 R14 ; R20 := R14
	43	[9442]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	44	[9432]	FORLOOP  	R9 25 ; R9 += R11; if R9 <= R10 then begin PC := 25; R12 := R9 end
	45	[9445]	RETURN   	R0 1 ; return 

function #416 <?:9447,9455> (28 instructions, 112 bytes at 00000160C685D0D0)
4 params, 12 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[9449]	GETGLOBAL	R5 K0 ; R5 := 0x03f57322
	2	[9449]	MOVE     	R6 R0 ; R6 := R0
	3	[9449]	CALL     	R5 2 2 ; R5 := R5(R6)
	4	[9449]	EQ       	0 R5 K2 ; if R5 ~= 4.000000 then PC := 11
	5	[9449]	JMP      	11 ; PC := 11
	6	[9450]	GETGLOBAL	R5 K3 ; R5 := 0x25d99d89
	7	[9450]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x98453b6b]
	8	[9450]	MOVE     	R7 R1 ; R7 := R1
	9	[9450]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	10	[9450]	MOVE     	R4 R5 ; R4 := R5
	11	[9452]	GETGLOBAL	R5 K5 ; R5 := 0x7b998233
	12	[9452]	MOVE     	R6 R2 ; R6 := R2
	13	[9452]	CALL     	R5 2 2 ; R5 := R5(R6)
	14	[9452]	TEST     	R5 1 ; if R5 then PC := 28
	15	[9452]	JMP      	28 ; PC := 28
	16	[9452]	LEN      	R5 R3 ; R5 := # R3
	17	[9452]	LT       	0 K6 R5 ; if 0.000000 >= R5 then PC := 28
	18	[9452]	JMP      	28 ; PC := 28
	19	[9453]	SELF     	R5 R2 K7 ; R6 := R2; R5 := R2[0xf56f3887]
	20	[9453]	MOVE     	R7 R3 ; R7 := R3
	21	[9453]	NEWTABLE 	R8 1 0 ; R8 := {}
	22	[9453]	MOVE     	R9 R1 ; R9 := R1
	23	[9453]	GETGLOBAL	R10 K8 ; R10 := 0x64fb1586
	24	[9453]	MOVE     	R11 R4 ; R11 := R4
	25	[9453]	CALL     	R10 2 0 ; R10,... := R10(R11)
	26	[9453]	SETLIST  	R8 0 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
	27	[9453]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	28	[9455]	RETURN   	R0 1 ; return 

function #417 <?:9457,9498> (55 instructions, 220 bytes at 00000160C685D300)
2 params, 9 slots, 3 upvalues, 0 locals, 13 constants, 2 functions
	1	[9459]	LEN      	R2 R0 ; R2 := # R0
	2	[9459]	LT       	0 R2 K0 ; if R2 >= 0.000000 then PC := 13
	3	[9459]	JMP      	13 ; PC := 13
	4	[9460]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[9460]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xa53f5e12]
	6	[9460]	GETGLOBAL	R3 K2 ; R3 := 0x603636ad
	7	[9460]	LOADK    	R4 K3 ; R4 := "/Lotus/Language/Menu/Chat_InvalidUser"
	8	[9460]	NEWTABLE 	R5 0 1 ; R5 := {}
	9	[9460]	SETTABLE 	R5 K4 R0 ; R5["USER"] := R0
	10	[9460]	CALL     	R3 3 0 ; R3,... := R3(R4,R5)
	11	[9460]	CALL     	R2 0 1 ; R2(R3,...)
	12	[9461]	RETURN   	R0 1 ; return 
	13	[9464]	GETUPVAL 	R2 U1 ; R2 := U1
	14	[9464]	CALL     	R2 1 2 ; R2 := R2()
	15	[9476]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	16	[9476]	MOVE     	R0 R0 ; R0 := R0
	17	[9476]	GETUPVAL 	R0 U2 ; R0 := U2
	18	[9476]	MOVE     	R0 R2 ; R0 := R2
	19	[9476]	MOVE     	R0 R1 ; R0 := R1
	20	[9476]	GETUPVAL 	R0 U0 ; R0 := U0
	21	[9478]	GETGLOBAL	R4 K5 ; R4 := 0x25d99d89
	22	[9478]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0xfd6e8666]
	23	[9478]	MOVE     	R6 R0 ; R6 := R0
	24	[9478]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	25	[9478]	TEST     	R4 0 ; if not R4 then PC := 30
	26	[9478]	JMP      	30 ; PC := 30
	27	[9479]	MOVE     	R4 R3 ; R4 := R3
	28	[9479]	CALL     	R4 1 1 ; R4()
	29	[9480]	RETURN   	R0 1 ; return 
	30	[9490]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	31	[9490]	GETUPVAL 	R0 U0 ; R0 := U0
	32	[9490]	MOVE     	R0 R0 ; R0 := R0
	33	[9490]	MOVE     	R0 R3 ; R0 := R3
	34	[9490]	SETTABLE 	R2 K7 R4 ; R2["UtilWhoIsResult"] := R4
	35	[9492]	GETGLOBAL	R4 K8 ; R4 := 0xe7f2b02f
	36	[9492]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0x0b151d80]
	37	[9492]	CALL     	R4 2 2 ; R4 := R4(R5)
	38	[9493]	GETGLOBAL	R5 K10 ; R5 := 0x7b998233
	39	[9493]	MOVE     	R6 R4 ; R6 := R4
	40	[9493]	CALL     	R5 2 2 ; R5 := R5(R6)
	41	[9493]	TEST     	R5 0 ; if not R5 then PC := 51
	42	[9493]	JMP      	51 ; PC := 51
	43	[9494]	GETUPVAL 	R5 U0 ; R5 := U0
	44	[9494]	GETTABLE 	R5 R5 K1 ; R5 := R5[0xa53f5e12]
	45	[9494]	GETGLOBAL	R6 K2 ; R6 := 0x603636ad
	46	[9494]	LOADK    	R7 K11 ; R7 := "/Lotus/Language/Menu/PurchaseFailure_UnknownError"
	47	[9494]	NEWTABLE 	R8 0 0 ; R8 := {}
	48	[9494]	CALL     	R6 3 0 ; R6,... := R6(R7,R8)
	49	[9494]	CALL     	R5 0 1 ; R5(R6,...)
	50	[9495]	RETURN   	R0 1 ; return 
	51	[9497]	SELF     	R5 R4 K12 ; R6 := R4; R5 := R4[0x00dc7406]
	52	[9497]	MOVE     	R7 R0 ; R7 := R0
	53	[9497]	LOADK    	R8 K7 ; R8 := "UtilWhoIsResult"
	54	[9497]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	55	[9498]	RETURN   	R0 1 ; return 

function #418 <?:9500,9507> (23 instructions, 92 bytes at 00000160C685DD90)
0 params, 5 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[9501]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	2	[9501]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xca9ea368]
	3	[9501]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9502]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	5	[9502]	MOVE     	R2 R0 ; R2 := R0
	6	[9502]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[9502]	TEST     	R1 0 ; if not R1 then PC := 11
	8	[9502]	JMP      	11 ; PC := 11
	9	[9503]	OP_LOADBOOL	R1 0 0 ; R1 := false
	10	[9503]	RETURN   	R1 2 ; return R1 
	11	[9505]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xed4e0128]
	12	[9505]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[9506]	GETGLOBAL	R2 K4 ; R2 := 0x7f5022cf
	14	[9506]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xa5c556b9]
	15	[9506]	MOVE     	R3 R1 ; R3 := R1
	16	[9506]	LOADK    	R4 K6 ; R4 := "EmptyLevel"
	17	[9506]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	18	[9506]	EQ       	0 R2 K7 ; if R2 ~= nil then PC := 21
	19	[9506]	JMP      	21 ; PC := 21
	20	[9506]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 21
	21	[9506]	OP_LOADBOOL	R2 1 0 ; R2 := true
	22	[9506]	RETURN   	R2 2 ; return R2 
	23	[9507]	RETURN   	R0 1 ; return 

function #419 <?:9509,9536> (64 instructions, 256 bytes at 00000160C685DFD0)
1 param, 9 slots, 0 upvalues, 0 locals, 19 constants, 0 functions
	1	[9510]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	2	[9510]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xca9ea368]
	3	[9510]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9511]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	5	[9511]	MOVE     	R3 R1 ; R3 := R1
	6	[9511]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[9511]	TEST     	R2 0 ; if not R2 then PC := 11
	8	[9511]	JMP      	11 ; PC := 11
	9	[9512]	OP_LOADBOOL	R2 0 0 ; R2 := false
	10	[9512]	RETURN   	R2 2 ; return R2 
	11	[9514]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0xed4e0128]
	12	[9514]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[9515]	GETGLOBAL	R3 K4 ; R3 := 0x7f5022cf
	14	[9515]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xa5c556b9]
	15	[9515]	MOVE     	R4 R2 ; R4 := R2
	16	[9515]	LOADK    	R5 K6 ; R5 := "TNWDrifterCamp"
	17	[9515]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	18	[9515]	EQ       	0 R3 K7 ; if R3 ~= nil then PC := 21
	19	[9515]	JMP      	21 ; PC := 21
	20	[9515]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 21
	21	[9515]	OP_LOADBOOL	R3 1 0 ; R3 := true
	22	[9516]	TEST     	R3 0 ; if not R3 then PC := 63
	23	[9516]	JMP      	63 ; PC := 63
	24	[9516]	EQ       	1 R0 K7 ; if R0 == nil then PC := 63
	25	[9516]	JMP      	63 ; PC := 63
	26	[9517]	GETGLOBAL	R4 K8 ; R4 := 0x76ea806b
	27	[9517]	SELF     	R4 R4 K9 ; R5 := R4; R4 := R4[0x3f3ae64c]
	28	[9517]	LOADK    	R6 := 0.000000
	29	[9517]	OP_LOADBOOL	R7 0 0 ; R7 := false
	30	[9517]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	31	[9518]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	32	[9518]	MOVE     	R6 R4 ; R6 := R4
	33	[9518]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[9518]	TEST     	R5 1 ; if R5 then PC := 61
	35	[9518]	JMP      	61 ; PC := 61
	36	[9519]	SELF     	R5 R4 K10 ; R6 := R4; R5 := R4[0x80563238]
	37	[9519]	CALL     	R5 2 2 ; R5 := R5(R6)
	38	[9520]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	39	[9520]	MOVE     	R7 R5 ; R7 := R5
	40	[9520]	CALL     	R6 2 2 ; R6 := R6(R7)
	41	[9520]	TEST     	R6 1 ; if R6 then PC := 61
	42	[9520]	JMP      	61 ; PC := 61
	43	[9521]	SELF     	R6 R5 K11 ; R7 := R5; R6 := R5[0x25a6e75e]
	44	[9521]	CALL     	R6 2 2 ; R6 := R6(R7)
	45	[9521]	SELF     	R6 R6 K12 ; R7 := R6; R6 := R6[0x8e7c3b5e]
	46	[9521]	CALL     	R6 2 2 ; R6 := R6(R7)
	47	[9521]	GETGLOBAL	R7 K13 ; R7 := 0x7ed0a956
	48	[9521]	LOADK    	R8 K14 ; R8 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
	49	[9521]	CALL     	R7 2 2 ; R7 := R7(R8)
	50	[9521]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 59
	51	[9521]	JMP      	59 ; PC := 59
	52	[9523]	SELF     	R6 R5 K15 ; R7 := R5; R6 := R5[0xcd57f819]
	53	[9523]	OP_LOADBOOL	R8 1 0 ; R8 := true
	54	[9523]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	55	[9523]	GETTABLE 	R6 R6 K16 ; R6 := R6["mBootLocation"]
	56	[9524]	EQ       	0 R6 K18 ; if R6 ~= 1.000000 then PC := 59
	57	[9524]	JMP      	59 ; PC := 59
	58	[9526]	RETURN   	R0 2 ; return R0 
	59	[9530]	NOT      	R7 R0 ; R7 := not R0
	60	[9530]	RETURN   	R7 2 ; return R7 
	61	[9533]	OP_LOADBOOL	R7 1 0 ; R7 := true
	62	[9533]	RETURN   	R7 2 ; return R7 
	63	[9535]	RETURN   	R3 2 ; return R3 
	64	[9536]	RETURN   	R0 1 ; return 

function #420 <?:9538,9540> (5 instructions, 20 bytes at 00000160C685E400)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[9539]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[9539]	MOVE     	R2 R0 ; R2 := R0
	3	[9539]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9539]	RETURN   	R1 2 ; return R1 
	5	[9540]	RETURN   	R0 1 ; return 

function #421 <?:9542,9552> (37 instructions, 148 bytes at 00000160C685E4F0)
0 params, 5 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[9543]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[9543]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	3	[9543]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[9543]	TEST     	R0 0 ; if not R0 then PC := 8
	5	[9543]	JMP      	8 ; PC := 8
	6	[9544]	OP_LOADBOOL	R0 0 0 ; R0 := false
	7	[9544]	RETURN   	R0 2 ; return R0 
	8	[9546]	GETGLOBAL	R0 K1 ; R0 := 0x89326c93
	9	[9546]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xca9ea368]
	10	[9546]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[9547]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	12	[9547]	MOVE     	R2 R0 ; R2 := R0
	13	[9547]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[9547]	TEST     	R1 0 ; if not R1 then PC := 18
	15	[9547]	JMP      	18 ; PC := 18
	16	[9548]	OP_LOADBOOL	R1 0 0 ; R1 := false
	17	[9548]	RETURN   	R1 2 ; return R1 
	18	[9550]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xed4e0128]
	19	[9550]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[9551]	GETGLOBAL	R2 K4 ; R2 := 0x7f5022cf
	21	[9551]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xa5c556b9]
	22	[9551]	MOVE     	R3 R1 ; R3 := R1
	23	[9551]	LOADK    	R4 K6 ; R4 := "ZarimanHubApartment"
	24	[9551]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	25	[9551]	EQ       	0 R2 K7 ; if R2 ~= nil then PC := 35
	26	[9551]	JMP      	35 ; PC := 35
	27	[9551]	GETGLOBAL	R2 K4 ; R2 := 0x7f5022cf
	28	[9551]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xa5c556b9]
	29	[9551]	MOVE     	R3 R1 ; R3 := R1
	30	[9551]	LOADK    	R4 K8 ; R4 := "PBZarApartment"
	31	[9551]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	32	[9551]	EQ       	0 R2 K7 ; if R2 ~= nil then PC := 35
	33	[9551]	JMP      	35 ; PC := 35
	34	[9551]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 35
	35	[9551]	OP_LOADBOOL	R2 1 0 ; R2 := true
	36	[9551]	RETURN   	R2 2 ; return R2 
	37	[9552]	RETURN   	R0 1 ; return 

function #422 <?:9554,9556> (4 instructions, 16 bytes at 00000160C685E800)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[9555]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[9555]	CALL     	R0 1 2 ; R0 := R0()
	3	[9555]	RETURN   	R0 2 ; return R0 
	4	[9556]	RETURN   	R0 1 ; return 

function #423 <?:9558,9573> (31 instructions, 124 bytes at 00000160C685E8D0)
0 params, 7 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[9560]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[9560]	OP_LOADBOOL	R2 0 0 ; R2 := false
	3	[9560]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9560]	TEST     	R1 0 ; if not R1 then PC := 21
	5	[9560]	JMP      	21 ; PC := 21
	6	[9561]	GETGLOBAL	R1 K0 ; R1 := 0xbe190284
	7	[9561]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xf2deaf69]
	8	[9561]	GETGLOBAL	R3 K2 ; R3 := 0x7ed0a956
	9	[9561]	LOADK    	R4 K3 ; R4 := "/Lotus/Types/GameRules/CampFirstLoadFrontEndGameRules"
	10	[9561]	CALL     	R3 2 0 ; R3,... := R3(R4)
	11	[9561]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	12	[9561]	TEST     	R1 0 ; if not R1 then PC := 15
	13	[9561]	JMP      	15 ; PC := 15
	14	[9562]	LOADK    	R0 K4 ; R0 := "LoginCampPreview"
	15	[9565]	EQ       	0 R0 K5 ; if R0 ~= nil then PC := 22
	16	[9565]	JMP      	22 ; PC := 22
	17	[9566]	LOADK    	R0 K6 ; R0 := "LoginCamp"
	18	[9567]	GETGLOBAL	R1 K7 ; R1 := _T
	19	[9567]	SETTABLE 	R1 K8 K9 ; R1["SkipDropShipCinematic"] := true
	20	[9568]	JMP      	22 ; PC := 22
	21	[9570]	LOADK    	R0 K10 ; R0 := "Login"
	22	[9572]	GETGLOBAL	R1 K7 ; R1 := _T
	23	[9572]	GETTABLE 	R1 R1 K11 ; R1 := R1["BackgroundMovie"]
	24	[9572]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0xf56f3887]
	25	[9572]	LOADK    	R3 K13 ; R3 := "PlayCameraTransition"
	26	[9572]	NEWTABLE 	R4 2 0 ; R4 := {}
	27	[9572]	MOVE     	R5 R0 ; R5 := R0
	28	[9572]	LOADK    	R6 K14 ; R6 := 0.100000
	29	[9572]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	30	[9572]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	31	[9573]	RETURN   	R0 1 ; return 

function #424 <?:9575,9584> (21 instructions, 84 bytes at 00000160C685ED10)
1 param, 9 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[9576]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[9576]	MOVE     	R2 R0 ; R2 := R0
	3	[9576]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[9576]	TEST     	R1 1 ; if R1 then PC := 19
	5	[9576]	JMP      	19 ; PC := 19
	6	[9577]	GETGLOBAL	R1 K1 ; R1 := 0xc8802016
	7	[9577]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[9577]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	9	[9577]	JMP      	17 ; PC := 17
	10	[9578]	SELF     	R6 R0 K2 ; R7 := R0; R6 := R0[0xf2deaf69]
	11	[9578]	MOVE     	R8 R5 ; R8 := R5
	12	[9578]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	13	[9578]	TEST     	R6 0 ; if not R6 then PC := 17
	14	[9578]	JMP      	17 ; PC := 17
	15	[9579]	OP_LOADBOOL	R6 1 0 ; R6 := true
	16	[9579]	RETURN   	R6 2 ; return R6 
	17	[9577]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 10; R3 := R4 end
	18	[9580]	JMP      	10 ; PC := 10
	19	[9583]	OP_LOADBOOL	R6 0 0 ; R6 := false
	20	[9583]	RETURN   	R6 2 ; return R6 
	21	[9584]	RETURN   	R0 1 ; return 

function #425 <?:9586,9680> (216 instructions, 864 bytes at 00000160C685EEC0)
4 params, 42 slots, 3 upvalues, 0 locals, 55 constants, 2 functions
	1	[9587]	LOADK    	R4 K0 ; R4 := ""
	2	[9588]	GETGLOBAL	R5 K1 ; R5 := _T
	3	[9588]	GETTABLE 	R5 R5 K2 ; R5 := R5["Notifications"]
	4	[9589]	EQ       	1 R5 K3 ; if R5 == nil then PC := 45
	5	[9589]	JMP      	45 ; PC := 45
	6	[9590]	SELF     	R6 R5 K4 ; R7 := R5; R6 := R5[0x9a6ca645]
	7	[9590]	CALL     	R6 2 2 ; R6 := R6(R7)
	8	[9591]	LEN      	R7 R6 ; R7 := # R6
	9	[9591]	LT       	0 K5 R7 ; if 0.000000 >= R7 then PC := 45
	10	[9591]	JMP      	45 ; PC := 45
	11	[9592]	NEWTABLE 	R7 5 0 ; R7 := {}
	12	[9593]	GETTABLE 	R8 R5 K6 ; R8 := R5["ATTACK_POLARITY"]
	13	[9594]	GETTABLE 	R9 R5 K7 ; R9 := R5["DEFENSE_POLARITY"]
	14	[9595]	GETTABLE 	R10 R5 K8 ; R10 := R5["TACTIC_POLARITY"]
	15	[9596]	GETTABLE 	R11 R5 K9 ; R11 := R5["POWER_POLARITY"]
	16	[9598]	GETTABLE 	R12 R5 K10 ; R12 := R5["WARD_POLARITY"]
	17	[9598]	SETLIST  	R7 5 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 5
	18	[9599]	GETTABLE 	R8 R7 K11 ; R8 := R7[1.000000]
	19	[9600]	GETGLOBAL	R9 K12 ; R9 := 0x25d99d89
	20	[9600]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0xa340c0e2]
	21	[9600]	CALL     	R9 2 2 ; R9 := R9(R10)
	22	[9602]	LOADK    	R10 := 1.000000
	23	[9602]	LEN      	R11 R1 ; R11 := # R1
	24	[9602]	LOADK    	R12 := 1.000000
	25	[9602]	FORPREP  	R10 31 ; R10 -= R12; PC := 31
	26	[9603]	GETTABLE 	R14 R1 R13 ; R14 := R1[R13]
	27	[9603]	EQ       	0 R14 R9 ; if R14 ~= R9 then PC := 31
	28	[9603]	JMP      	31 ; PC := 31
	29	[9604]	GETTABLE 	R8 R7 R13 ; R8 := R7[R13]
	30	[9605]	JMP      	32 ; PC := 32
	31	[9602]	FORLOOP  	R10 26 ; R10 += R12; if R10 <= R11 then begin PC := 26; R13 := R10 end
	32	[9609]	GETTABLE 	R14 R6 R8 ; R14 := R6[R8]
	33	[9609]	EQ       	1 R14 K3 ; if R14 == nil then PC := 45
	34	[9609]	JMP      	45 ; PC := 45
	35	[9609]	GETTABLE 	R14 R6 R8 ; R14 := R6[R8]
	36	[9609]	GETTABLE 	R14 R14 K14 ; R14 := R14["Value"]
	37	[9609]	EQ       	0 R14 K11 ; if R14 ~= 1.000000 then PC := 45
	38	[9609]	JMP      	45 ; PC := 45
	39	[9610]	MOVE     	R14 R4 ; R14 := R4
	40	[9610]	GETGLOBAL	R15 K15 ; R15 := 0x603636ad
	41	[9610]	LOADK    	R16 K16 ; R16 := "/Lotus/Language/ZarimanQuest/BeginWarningFocusDesc"
	42	[9610]	NEWTABLE 	R17 0 0 ; R17 := {}
	43	[9610]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	44	[9610]	CONCAT   	R4 R14 R15 ; R4 := R14 .. R15
	45	[9615]	GETGLOBAL	R14 K12 ; R14 := 0x25d99d89
	46	[9615]	SELF     	R14 R14 K17 ; R15 := R14; R14 := R14[0x25a6e75e]
	47	[9615]	CALL     	R14 2 2 ; R14 := R14(R15)
	48	[9616]	GETGLOBAL	R15 K18 ; R15 := 0x7b998233
	49	[9616]	MOVE     	R16 R14 ; R16 := R14
	50	[9616]	CALL     	R15 2 2 ; R15 := R15(R16)
	51	[9616]	TEST     	R15 1 ; if R15 then PC := 110
	52	[9616]	JMP      	110 ; PC := 110
	53	[9617]	GETGLOBAL	R15 K12 ; R15 := 0x25d99d89
	54	[9617]	SELF     	R15 R15 K19 ; R16 := R15; R15 := R15[0x62c81b76]
	55	[9617]	CALL     	R15 2 2 ; R15 := R15(R16)
	56	[9618]	LOADK    	R16 := 5.000000
	57	[9619]	GETTABLE 	R17 R15 K21 ; R17 := R15["mOperatorType"]
	58	[9619]	EQ       	0 R17 K22 ; if R17 ~= 4.000000 then PC := 61
	59	[9619]	JMP      	61 ; PC := 61
	60	[9620]	LOADK    	R16 := 9.000000
	61	[9622]	SELF     	R17 R14 K23 ; R18 := R14; R17 := R14[0x566259e1]
	62	[9622]	MOVE     	R19 R16 ; R19 := R16
	63	[9622]	SELF     	R20 R14 K24 ; R21 := R14; R20 := R14[0x4e457768]
	64	[9622]	MOVE     	R22 R16 ; R22 := R16
	65	[9622]	CALL     	R20 3 0 ; R20,... := R20(R21,R22)
	66	[9622]	CALL     	R17 0 2 ; R17 := R17(R18,...)
	67	[9623]	SELF     	R18 R17 K25 ; R19 := R17; R18 := R17[0x2abbe722]
	68	[9623]	LOADK    	R20 := 2.000000
	69	[9623]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	70	[9624]	GETTABLE 	R19 R18 K26 ; R19 := R18["mItemId"]
	71	[9624]	GETTABLE 	R19 R19 K27 ; R19 := R19["mId"]
	72	[9625]	SELF     	R20 R14 K28 ; R21 := R14; R20 := R14[0x99718a3d]
	73	[9625]	CALL     	R20 2 2 ; R20 := R20(R21)
	74	[9626]	LOADNIL  	R21 R21 ; R21 := nil
	75	[9627]	LOADK    	R22 := 1.000000
	76	[9627]	LEN      	R23 R20 ; R23 := # R20
	77	[9627]	LOADK    	R24 := 1.000000
	78	[9627]	FORPREP  	R22 86 ; R22 -= R24; PC := 86
	79	[9628]	GETTABLE 	R26 R20 R25 ; R26 := R20[R25]
	80	[9629]	GETTABLE 	R27 R26 K26 ; R27 := R26["mItemId"]
	81	[9629]	GETTABLE 	R27 R27 K27 ; R27 := R27["mId"]
	82	[9629]	EQ       	0 R19 R27 ; if R19 ~= R27 then PC := 86
	83	[9629]	JMP      	86 ; PC := 86
	84	[9630]	MOVE     	R21 R26 ; R21 := R26
	85	[9631]	JMP      	87 ; PC := 87
	86	[9627]	FORLOOP  	R22 79 ; R22 += R24; if R22 <= R23 then begin PC := 79; R25 := R22 end
	87	[9634]	GETGLOBAL	R27 K18 ; R27 := 0x7b998233
	88	[9634]	MOVE     	R28 R21 ; R28 := R21
	89	[9634]	CALL     	R27 2 2 ; R27 := R27(R28)
	90	[9634]	TEST     	R27 1 ; if R27 then PC := 98
	91	[9634]	JMP      	98 ; PC := 98
	92	[9634]	GETTABLE 	R27 R21 K29 ; R27 := R21["mItemType"]
	93	[9634]	SELF     	R27 R27 K30 ; R28 := R27; R27 := R27[0xf2deaf69]
	94	[9634]	MOVE     	R29 R2 ; R29 := R2
	95	[9634]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	96	[9634]	TEST     	R27 0 ; if not R27 then PC := 110
	97	[9634]	JMP      	110 ; PC := 110
	98	[9635]	LEN      	R27 R4 ; R27 := # R4
	99	[9635]	LT       	0 K5 R27 ; if 0.000000 >= R27 then PC := 104
	100	[9635]	JMP      	104 ; PC := 104
	101	[9636]	MOVE     	R27 R4 ; R27 := R4
	102	[9636]	LOADK    	R28 K31 ; R28 := "\r\n\r\n"
	103	[9636]	CONCAT   	R4 R27 R28 ; R4 := R27 .. R28
	104	[9638]	MOVE     	R27 R4 ; R27 := R4
	105	[9638]	GETGLOBAL	R28 K15 ; R28 := 0x603636ad
	106	[9638]	LOADK    	R29 K32 ; R29 := "/Lotus/Language/ZarimanQuest/BeginWarningMoteAmpDesc"
	107	[9638]	NEWTABLE 	R30 0 0 ; R30 := {}
	108	[9638]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	109	[9638]	CONCAT   	R4 R27 R28 ; R4 := R27 .. R28
	110	[9642]	LEN      	R27 R4 ; R27 := # R4
	111	[9642]	LT       	0 K5 R27 ; if 0.000000 >= R27 then PC := 214
	112	[9642]	JMP      	214 ; PC := 214
	113	[9643]	GETUPVAL 	R27 U0 ; R27 := U0
	114	[9643]	CALL     	R27 1 2 ; R27 := R27()
	115	[9644]	GETGLOBAL	R28 K15 ; R28 := 0x603636ad
	116	[9644]	GETGLOBAL	R29 K33 ; R29 := 0x64fb1586
	117	[9644]	SELF     	R30 R0 K34 ; R31 := R0; R30 := R0[0xd3a9d01f]
	118	[9644]	CALL     	R30 2 0 ; R30,... := R30(R31)
	119	[9644]	CALL     	R29 0 2 ; R29 := R29(R30,...)
	120	[9644]	NEWTABLE 	R30 0 0 ; R30 := {}
	121	[9644]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	122	[9645]	MOVE     	R29 R28 ; R29 := R28
	123	[9646]	GETGLOBAL	R30 K15 ; R30 := 0x603636ad
	124	[9646]	LOADK    	R31 K35 ; R31 := "/Lotus/Language/ZarimanQuest/BeginWarningConfirm"
	125	[9646]	NEWTABLE 	R32 0 0 ; R32 := {}
	126	[9646]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	127	[9647]	GETGLOBAL	R31 K15 ; R31 := 0x603636ad
	128	[9647]	LOADK    	R32 K36 ; R32 := "/Lotus/Language/G1Quests/QuestCommitmentConfirm"
	129	[9647]	NEWTABLE 	R33 0 1 ; R33 := {}
	130	[9647]	GETGLOBAL	R34 K38 ; R34 := 0x7f5022cf
	131	[9647]	GETTABLE 	R34 R34 K39 ; R34 := R34[0x3f3e4d12]
	132	[9647]	MOVE     	R35 R30 ; R35 := R30
	133	[9647]	CALL     	R34 2 2 ; R34 := R34(R35)
	134	[9647]	SETTABLE 	R33 K37 R34 ; R33["WORD"] := R34
	135	[9647]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	136	[9648]	GETGLOBAL	R32 K15 ; R32 := 0x603636ad
	137	[9648]	LOADK    	R33 K40 ; R33 := "/Lotus/Language/ZarimanQuest/BeginWarningCommonDesc"
	138	[9648]	NEWTABLE 	R34 0 0 ; R34 := {}
	139	[9648]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	140	[9648]	LOADK    	R33 K31 ; R33 := "\r\n\r\n"
	141	[9648]	MOVE     	R34 R4 ; R34 := R4
	142	[9648]	CONCAT   	R4 R32 R34 ; R4 := R32 .. R33 .. R34
	143	[9650]	GETGLOBAL	R32 K41 ; R32 := 0x34291f5c
	144	[9650]	GETTABLE 	R32 R32 K42 ; R32 := R32[0xe6b41adb]
	145	[9650]	CALL     	R32 1 2 ; R32 := R32()
	146	[9650]	TEST     	R32 1 ; if R32 then PC := 158
	147	[9650]	JMP      	158 ; PC := 158
	148	[9650]	GETGLOBAL	R32 K41 ; R32 := 0x34291f5c
	149	[9650]	GETTABLE 	R32 R32 K43 ; R32 := R32[0x1467d5f4]
	150	[9650]	CALL     	R32 1 2 ; R32 := R32()
	151	[9650]	TEST     	R32 1 ; if R32 then PC := 158
	152	[9650]	JMP      	158 ; PC := 158
	153	[9650]	GETGLOBAL	R32 K41 ; R32 := 0x34291f5c
	154	[9650]	GETTABLE 	R32 R32 K44 ; R32 := R32[0x399826a5]
	155	[9650]	CALL     	R32 1 2 ; R32 := R32()
	156	[9650]	TEST     	R32 0 ; if not R32 then PC := 176
	157	[9650]	JMP      	176 ; PC := 176
	158	[9650]	GETGLOBAL	R32 K41 ; R32 := 0x34291f5c
	159	[9650]	GETTABLE 	R32 R32 K45 ; R32 := R32[0x94617168]
	160	[9650]	CALL     	R32 1 2 ; R32 := R32()
	161	[9650]	TEST     	R32 0 ; if not R32 then PC := 176
	162	[9650]	JMP      	176 ; PC := 176
	163	[9662]	CLOSURE  	R32 0 ; R32 := closure(Function #1)
	164	[9662]	MOVE     	R0 R27 ; R0 := R27
	165	[9662]	MOVE     	R0 R3 ; R0 := R3
	166	[9662]	GETUPVAL 	R0 U1 ; R0 := U1
	167	[9662]	MOVE     	R0 R29 ; R0 := R29
	168	[9662]	MOVE     	R0 R31 ; R0 := R31
	169	[9662]	MOVE     	R0 R30 ; R0 := R30
	170	[9663]	GETUPVAL 	R33 U2 ; R33 := U2
	171	[9663]	GETTABLE 	R33 R33 K46 ; R33 := R33[0xe0cba3ca]
	172	[9663]	MOVE     	R34 R4 ; R34 := R4
	173	[9663]	MOVE     	R35 R32 ; R35 := R32
	174	[9663]	CALL     	R33 3 1 ; R33(R34,R35)
	175	[9663]	JMP      	211 ; PC := 211
	176	[9667]	CLOSURE  	R33 1 ; R33 := closure(Function #2)
	177	[9667]	MOVE     	R0 R3 ; R0 := R3
	178	[9667]	SETTABLE 	R27 K47 R33 ; R27["ConfirmZarimanQuestWarning"] := R33
	179	[9669]	MOVE     	R33 R4 ; R33 := R4
	180	[9669]	LOADK    	R34 K31 ; R34 := "\r\n\r\n"
	181	[9669]	MOVE     	R35 R31 ; R35 := R31
	182	[9669]	CONCAT   	R33 R33 R35 ; R33 := R33 .. R34 .. R35
	183	[9670]	GETUPVAL 	R34 U1 ; R34 := U1
	184	[9670]	GETTABLE 	R35 R27 K48 ; R35 := R27["mMovie"]
	185	[9670]	MOVE     	R36 R29 ; R36 := R29
	186	[9670]	LOADK    	R37 K0 ; R37 := ""
	187	[9670]	LOADK    	R38 := 40.000000
	188	[9670]	LOADK    	R39 K47 ; R39 := "ConfirmZarimanQuestWarning"
	189	[9670]	LOADK    	R40 K0 ; R40 := ""
	190	[9670]	NEWTABLE 	R41 0 1 ; R41 := {}
	191	[9670]	SETTABLE 	R41 K49 R33 ; R41["desc"] := R33
	192	[9670]	CALL     	R34 8 3 ; R34,R35 := R34(R35,R36,R37,R38,R39,R40,R41)
	193	[9672]	TEST     	R34 0 ; if not R34 then PC := 211
	194	[9672]	JMP      	211 ; PC := 211
	195	[9672]	GETGLOBAL	R36 K18 ; R36 := 0x7b998233
	196	[9672]	MOVE     	R37 R35 ; R37 := R35
	197	[9672]	CALL     	R36 2 2 ; R36 := R36(R37)
	198	[9672]	TEST     	R36 1 ; if R36 then PC := 211
	199	[9672]	JMP      	211 ; PC := 211
	200	[9673]	SELF     	R36 R35 K50 ; R37 := R35; R36 := R35[0xe4162eed]
	201	[9673]	LOADK    	R38 K51 ; R38 := "SetYesTag"
	202	[9673]	LOADK    	R39 K52 ; R39 := "/Lotus/Language/ZarimanQuest/BeginWarningButton"
	203	[9673]	CALL     	R36 4 1 ; R36(R37,R38,R39)
	204	[9674]	SELF     	R36 R35 K50 ; R37 := R35; R36 := R35[0xe4162eed]
	205	[9674]	LOADK    	R38 K53 ; R38 := "SetConditionalWord"
	206	[9674]	GETGLOBAL	R39 K38 ; R39 := 0x7f5022cf
	207	[9674]	GETTABLE 	R39 R39 K54 ; R39 := R39[0x04981ab3]
	208	[9674]	MOVE     	R40 R30 ; R40 := R30
	209	[9674]	CALL     	R39 2 0 ; R39,... := R39(R40)
	210	[9674]	CALL     	R36 0 1 ; R36(R37,...)
	211	[9677]	OP_LOADBOOL	R36 1 0 ; R36 := true
	212	[9677]	RETURN   	R36 2 ; return R36 
	213	[9677]	CLOSE    	R27 ; SAVE R27,...
	214	[9679]	OP_LOADBOOL	R27 0 0 ; R27 := false
	215	[9679]	RETURN   	R27 2 ; return R27 
	216	[9680]	RETURN   	R0 1 ; return 

function #426 <?:9682,9696> (29 instructions, 116 bytes at 00000160C6860420)
0 params, 6 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[9683]	LOADK    	R0 K0 ; R0 := "/Lotus/Language/Bosses/Lotus"
	2	[9684]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	3	[9684]	GETGLOBAL	R2 K2 ; R2 := 0x25d99d89
	4	[9684]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[9684]	TEST     	R1 1 ; if R1 then PC := 24
	6	[9684]	JMP      	24 ; PC := 24
	7	[9685]	GETGLOBAL	R1 K2 ; R1 := 0x25d99d89
	8	[9685]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x25a6e75e]
	9	[9685]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[9686]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	11	[9686]	MOVE     	R3 R1 ; R3 := R1
	12	[9686]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[9686]	TEST     	R2 1 ; if R2 then PC := 24
	14	[9686]	JMP      	24 ; PC := 24
	15	[9687]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0xd297b8b3]
	16	[9687]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[9688]	EQ       	0 R2 K6 ; if R2 ~= 0.000000 then PC := 21
	18	[9688]	JMP      	21 ; PC := 21
	19	[9689]	LOADK    	R0 K7 ; R0 := "/Lotus/Language/Inbox/TNWQuestNatahInboxMsgSubject"
	20	[9689]	JMP      	24 ; PC := 24
	21	[9690]	EQ       	0 R2 K8 ; if R2 ~= 2.000000 then PC := 24
	22	[9690]	JMP      	24 ; PC := 24
	23	[9691]	LOADK    	R0 K9 ; R0 := "/Lotus/Language/Bosses/Margulis"
	24	[9695]	GETGLOBAL	R3 K10 ; R3 := 0x603636ad
	25	[9695]	MOVE     	R4 R0 ; R4 := R0
	26	[9695]	NEWTABLE 	R5 0 0 ; R5 := {}
	27	[9695]	TAILCALL 	R3 3 0 ; R3,... := R3(R4,R5)
	28	[9695]	RETURN   	R3 0 ; return R3,... 
	29	[9696]	RETURN   	R0 1 ; return 

function #427 <?:9698,9720> (73 instructions, 292 bytes at 00000160C6860790)
2 params, 11 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[9699]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[9699]	GETGLOBAL	R3 K1 ; R3 := 0x89326c93
	3	[9699]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[9699]	TEST     	R2 1 ; if R2 then PC := 73
	5	[9699]	JMP      	73 ; PC := 73
	6	[9700]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	7	[9700]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x78298275]
	8	[9700]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[9701]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	10	[9701]	MOVE     	R4 R2 ; R4 := R2
	11	[9701]	CALL     	R3 2 2 ; R3 := R3(R4)
	12	[9701]	TEST     	R3 1 ; if R3 then PC := 73
	13	[9701]	JMP      	73 ; PC := 73
	14	[9702]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0xb2532845]
	15	[9702]	GETGLOBAL	R5 K4 ; R5 := 0x0469f296
	16	[9702]	LOADK    	R6 K5 ; R6 := "IDLE"
	17	[9702]	CALL     	R5 2 0 ; R5,... := R5(R6)
	18	[9702]	CALL     	R3 0 1 ; R3(R4,...)
	19	[9703]	GETUPVAL 	R3 U0 ; R3 := U0
	20	[9703]	OP_LOADBOOL	R4 0 0 ; R4 := false
	21	[9703]	CALL     	R3 2 2 ; R3 := R3(R4)
	22	[9703]	TEST     	R3 0 ; if not R3 then PC := 35
	23	[9703]	JMP      	35 ; PC := 35
	24	[9704]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0x89c6dbf7]
	25	[9704]	GETGLOBAL	R5 K7 ; R5 := 0x00046924
	26	[9704]	LOADK    	R6 := 230.000000
	27	[9704]	LOADK    	R7 := 0.000000
	28	[9704]	LOADK    	R8 := 0.000000
	29	[9704]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	30	[9704]	CALL     	R3 0 1 ; R3(R4,...)
	31	[9705]	SELF     	R3 R2 K8 ; R4 := R2; R3 := R2[0x2e9b92e3]
	32	[9705]	LOADK    	R5 := 0.000000
	33	[9705]	CALL     	R3 3 1 ; R3(R4,R5)
	34	[9705]	JMP      	73 ; PC := 73
	35	[9707]	GETUPVAL 	R3 U0 ; R3 := U0
	36	[9707]	CALL     	R3 1 2 ; R3 := R3()
	37	[9707]	TEST     	R3 1 ; if R3 then PC := 43
	38	[9707]	JMP      	43 ; PC := 43
	39	[9708]	SELF     	R3 R2 K6 ; R4 := R2; R3 := R2[0x89c6dbf7]
	40	[9708]	GETGLOBAL	R5 K7 ; R5 := 0x00046924
	41	[9708]	CALL     	R5 1 0 ; R5,... := R5()
	42	[9708]	CALL     	R3 0 1 ; R3(R4,...)
	43	[9710]	TEST     	R1 0 ; if not R1 then PC := 50
	44	[9710]	JMP      	50 ; PC := 50
	45	[9710]	GETGLOBAL	R3 K9 ; R3 := 0x34291f5c
	46	[9710]	GETTABLE 	R3 R3 K10 ; R3 := R3[0x86647daf]
	47	[9710]	CALL     	R3 1 2 ; R3 := R3()
	48	[9710]	TEST     	R3 0 ; if not R3 then PC := 73
	49	[9710]	JMP      	73 ; PC := 73
	50	[9711]	SELF     	R3 R2 K11 ; R4 := R2; R3 := R2[0xde321e6f]
	51	[9711]	CALL     	R3 2 2 ; R3 := R3(R4)
	52	[9711]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0xf7d48ee0]
	53	[9711]	CALL     	R3 2 2 ; R3 := R3(R4)
	54	[9712]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	55	[9712]	MOVE     	R5 R3 ; R5 := R3
	56	[9712]	CALL     	R4 2 2 ; R4 := R4(R5)
	57	[9712]	TEST     	R4 1 ; if R4 then PC := 66
	58	[9712]	JMP      	66 ; PC := 66
	59	[9713]	SELF     	R4 R3 K13 ; R5 := R3; R4 := R3[0xbc4ebb44]
	60	[9713]	GETGLOBAL	R6 K4 ; R6 := 0x0469f296
	61	[9713]	LOADK    	R7 K14 ; R7 := "KneelToStandTurn"
	62	[9713]	CALL     	R6 2 0 ; R6,... := R6(R7)
	63	[9713]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	64	[9713]	TESTSET  	R0 R4 1 ; if R4 then PC := 66 else R0 := R4 
	65	[9713]	JMP      	66 ; PC := 66
	66	[9715]	SELF     	R4 R2 K15 ; R5 := R2; R4 := R2[0x5d985c7e]
	67	[9715]	MOVE     	R6 R0 ; R6 := R0
	68	[9715]	OP_LOADBOOL	R7 0 0 ; R7 := false
	69	[9715]	LOADK    	R8 := 3.000000
	70	[9715]	LOADK    	R9 := 1.000000
	71	[9715]	OP_LOADBOOL	R10 1 0 ; R10 := true
	72	[9715]	CALL     	R4 7 1 ; R4(R5,R6,R7,R8,R9,R10)
	73	[9720]	RETURN   	R0 1 ; return 

function #428 <?:9722,9732> (25 instructions, 100 bytes at 00000160C6860BF0)
1 param, 9 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[9723]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	2	[9723]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xfb669000]
	3	[9723]	GETGLOBAL	R3 K2 ; R3 := gDynamicSkyType
	4	[9723]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[9724]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	6	[9724]	MOVE     	R3 R1 ; R3 := R1
	7	[9724]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[9724]	TEST     	R2 1 ; if R2 then PC := 25
	9	[9724]	JMP      	25 ; PC := 25
	10	[9725]	LOADK    	R2 := 1.000000
	11	[9725]	LEN      	R3 R1 ; R3 := # R1
	12	[9725]	LOADK    	R4 := 1.000000
	13	[9725]	FORPREP  	R2 24 ; R2 -= R4; PC := 24
	14	[9726]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	15	[9726]	SELF     	R6 R6 K4 ; R7 := R6; R6 := R6[0x0056783b]
	16	[9726]	CALL     	R6 2 2 ; R6 := R6(R7)
	17	[9726]	TEST     	R6 0 ; if not R6 then PC := 24
	18	[9726]	JMP      	24 ; PC := 24
	19	[9727]	GETTABLE 	R6 R1 R5 ; R6 := R1[R5]
	20	[9727]	SELF     	R6 R6 K5 ; R7 := R6; R6 := R6[0x16c76090]
	21	[9727]	MOVE     	R8 R0 ; R8 := R0
	22	[9727]	CALL     	R6 3 1 ; R6(R7,R8)
	23	[9728]	RETURN   	R0 1 ; return 
	24	[9725]	FORLOOP  	R2 14 ; R2 += R4; if R2 <= R3 then begin PC := 14; R5 := R2 end
	25	[9732]	RETURN   	R0 1 ; return 
