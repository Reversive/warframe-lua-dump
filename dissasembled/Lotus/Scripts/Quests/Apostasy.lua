
main <?:0,0> (148 instructions, 592 bytes at 00000160FF9D26C0)
0+ params, 34 slots, 0 upvalues, 0 locals, 40 constants, 21 functions
	1	[21]	GETGLOBAL	R0 K0 ; R0 := 0xb009bbc6
	2	[21]	LOADK    	R1 K1 ; R1 := "/Lotus/Types/Input/ApostasyOperatorCanRunInputFilter"
	3	[21]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[23]	GETGLOBAL	R1 K2 ; R1 := 0x7ed0a956
	5	[23]	LOADK    	R2 K3 ; R2 := "/EE/Types/Effects/Spawner"
	6	[23]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[24]	GETGLOBAL	R2 K2 ; R2 := 0x7ed0a956
	8	[24]	LOADK    	R3 K4 ; R3 := "/Lotus/Types/Actions/KneelReplicatedHitSwitch"
	9	[24]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[26]	GETGLOBAL	R3 K2 ; R3 := 0x7ed0a956
	11	[26]	LOADK    	R4 K5 ; R4 := "/Lotus/Types/Keys/PriestFrameQuest/PriestQuestKeyChain"
	12	[26]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[27]	GETGLOBAL	R4 K2 ; R4 := 0x7ed0a956
	14	[27]	LOADK    	R5 K6 ; R5 := "/Lotus/Types/Keys/SacrificeQuest/SacrificeQuestKeyChain"
	15	[27]	CALL     	R4 2 2 ; R4 := R4(R5)
	16	[28]	GETGLOBAL	R5 K2 ; R5 := 0x7ed0a956
	17	[28]	LOADK    	R6 K7 ; R6 := "/Lotus/Types/Keys/ChimeraQuest/ChimeraKeyChain"
	18	[28]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[30]	GETGLOBAL	R6 K8 ; R6 := 0x0469f296
	20	[30]	LOADK    	R7 K9 ; R7 := "EmitterWorldPos"
	21	[30]	CALL     	R6 2 2 ; R6 := R6(R7)
	22	[31]	GETGLOBAL	R7 K8 ; R7 := 0x0469f296
	23	[31]	LOADK    	R8 K10 ; R8 := "DistortScale"
	24	[31]	CALL     	R7 2 2 ; R7 := R7(R8)
	25	[32]	GETGLOBAL	R8 K8 ; R8 := 0x0469f296
	26	[32]	LOADK    	R9 K11 ; R9 := "FadeParams"
	27	[32]	CALL     	R8 2 2 ; R8 := R8(R9)
	28	[33]	GETGLOBAL	R9 K8 ; R9 := 0x0469f296
	29	[33]	LOADK    	R10 K12 ; R10 := "AlphaScale"
	30	[33]	CALL     	R9 2 2 ; R9 := R9(R10)
	31	[34]	GETGLOBAL	R10 K8 ; R10 := 0x0469f296
	32	[34]	LOADK    	R11 K13 ; R11 := "UnlitAtten"
	33	[34]	CALL     	R10 2 2 ; R10 := R10(R11)
	34	[36]	LOADK    	R11 := 0.750000
	35	[37]	LOADK    	R12 K14 ; R12 := 0.300000
	36	[38]	LOADK    	R13 := -1.000000
	37	[41]	NEWTABLE 	R14 4 0 ; R14 := {}
	38	[42]	LOADK    	R15 K15 ; R15 := 0.220000
	39	[43]	LOADK    	R16 K16 ; R16 := 0.480000
	40	[44]	LOADK    	R17 K17 ; R17 := 0.700000
	41	[46]	LOADK    	R18 K18 ; R18 := 0.900000
	42	[46]	SETLIST  	R14 4 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 4
	43	[48]	OP_LOADBOOL	R15 0 0 ; R15 := false
	44	[50]	NEWTABLE 	R16 0 0 ; R16 := {}
	45	[52]	OP_LOADBOOL	R17 0 0 ; R17 := false
	46	[53]	OP_LOADBOOL	R18 0 0 ; R18 := false
	47	[55]	OP_LOADBOOL	R19 0 0 ; R19 := false
	48	[56]	OP_LOADBOOL	R20 0 0 ; R20 := false
	49	[57]	OP_LOADBOOL	R21 0 0 ; R21 := false
	50	[58]	OP_LOADBOOL	R22 0 0 ; R22 := false
	51	[59]	OP_LOADBOOL	R23 0 0 ; R23 := false
	52	[61]	GETGLOBAL	R24 K19 ; R24 := 0x2d0fad09
	53	[61]	LOADK    	R25 K20 ; R25 := "Lotus.Scripts.Libs.TableLib"
	54	[61]	CALL     	R24 2 2 ; R24 := R24(R25)
	55	[62]	GETGLOBAL	R25 K19 ; R25 := 0x2d0fad09
	56	[62]	LOADK    	R26 K21 ; R26 := "Lotus.Scripts.Libs.TransmissionSet"
	57	[62]	CALL     	R25 2 2 ; R25 := R25(R26)
	58	[63]	GETGLOBAL	R26 K19 ; R26 := 0x2d0fad09
	59	[63]	LOADK    	R27 K22 ; R27 := "Lotus.Interface.LotusUtilities"
	60	[63]	CALL     	R26 2 2 ; R26 := R26(R27)
	61	[64]	GETGLOBAL	R27 K19 ; R27 := 0x2d0fad09
	62	[64]	LOADK    	R28 K23 ; R28 := "Lotus.Interface.LotusNetworkUtilities"
	63	[64]	CALL     	R27 2 2 ; R27 := R27(R28)
	64	[83]	CLOSURE  	R28 0 ; R28 := closure(Function #1)
	65	[83]	MOVE     	R0 R16 ; R0 := R16
	66	[83]	MOVE     	R0 R25 ; R0 := R25
	67	[83]	MOVE     	R0 R1 ; R0 := R1
	68	[67]	SETGLOBAL	R28 K24 ; OnTouched := R28
	69	[215]	CLOSURE  	R28 1 ; R28 := closure(Function #2)
	70	[215]	MOVE     	R0 R15 ; R0 := R15
	71	[215]	MOVE     	R0 R14 ; R0 := R14
	72	[215]	MOVE     	R0 R24 ; R0 := R24
	73	[215]	MOVE     	R0 R16 ; R0 := R16
	74	[85]	SETGLOBAL	R28 K25 ; MissionSetUp := R28
	75	[219]	CLOSURE  	R28 2 ; R28 := closure(Function #3)
	76	[217]	SETGLOBAL	R28 K26 ; ApostasySplineFadeOut := R28
	77	[430]	CLOSURE  	R28 3 ; R28 := closure(Function #4)
	78	[430]	MOVE     	R0 R14 ; R0 := R14
	79	[430]	MOVE     	R0 R6 ; R0 := R6
	80	[430]	MOVE     	R0 R7 ; R0 := R7
	81	[430]	MOVE     	R0 R8 ; R0 := R8
	82	[430]	MOVE     	R0 R9 ; R0 := R9
	83	[430]	MOVE     	R0 R15 ; R0 := R15
	84	[221]	SETGLOBAL	R28 K27 ; UpdateSplineMat := R28
	85	[488]	CLOSURE  	R28 4 ; R28 := closure(Function #5)
	86	[432]	SETGLOBAL	R28 K28 ; PauseOwnedNpcAvatars := R28
	87	[593]	CLOSURE  	R28 5 ; R28 := closure(Function #6)
	88	[593]	MOVE     	R0 R12 ; R0 := R12
	89	[593]	MOVE     	R0 R25 ; R0 := R25
	90	[593]	MOVE     	R0 R11 ; R0 := R11
	91	[593]	MOVE     	R0 R13 ; R0 := R13
	92	[490]	SETGLOBAL	R28 K29 ; FallTrigger := R28
	93	[653]	CLOSURE  	R28 6 ; R28 := closure(Function #7)
	94	[653]	MOVE     	R0 R10 ; R0 := R10
	95	[595]	SETGLOBAL	R28 K30 ; FovLerp := R28
	96	[664]	CLOSURE  	R28 7 ; R28 := closure(Function #8)
	97	[664]	MOVE     	R0 R0 ; R0 := R0
	98	[655]	SETGLOBAL	R28 K31 ; SwitchInputFilters := R28
	99	[669]	CLOSURE  	R28 8 ; R28 := closure(Function #9)
	100	[666]	SETGLOBAL	R28 K32 ; OnFinished := R28
	101	[677]	CLOSURE  	R28 9 ; R28 := closure(Function #10)
	102	[677]	MOVE     	R0 R17 ; R0 := R17
	103	[677]	MOVE     	R0 R18 ; R0 := R18
	104	[671]	SETGLOBAL	R28 K33 ; OnProgressQuest := R28
	105	[701]	CLOSURE  	R28 10 ; R28 := closure(Function #11)
	106	[701]	MOVE     	R0 R17 ; R0 := R17
	107	[701]	MOVE     	R0 R18 ; R0 := R18
	108	[710]	CLOSURE  	R29 11 ; R29 := closure(Function #12)
	109	[710]	MOVE     	R0 R21 ; R0 := R21
	110	[710]	MOVE     	R0 R22 ; R0 := R22
	111	[703]	SETGLOBAL	R29 K34 ; OnActiveQuestSet := R29
	112	[718]	CLOSURE  	R29 12 ; R29 := closure(Function #13)
	113	[718]	MOVE     	R0 R20 ; R0 := R20
	114	[718]	MOVE     	R0 R19 ; R0 := R19
	115	[712]	SETGLOBAL	R29 K35 ; OnGiveQuest := R29
	116	[747]	CLOSURE  	R29 13 ; R29 := closure(Function #14)
	117	[747]	MOVE     	R0 R21 ; R0 := R21
	118	[747]	MOVE     	R0 R22 ; R0 := R22
	119	[782]	CLOSURE  	R30 14 ; R30 := closure(Function #15)
	120	[782]	MOVE     	R0 R19 ; R0 := R19
	121	[782]	MOVE     	R0 R20 ; R0 := R20
	122	[787]	CLOSURE  	R31 15 ; R31 := closure(Function #16)
	123	[784]	SETGLOBAL	R31 K36 ; OnUpdateSessionSettings := R31
	124	[855]	CLOSURE  	R31 16 ; R31 := closure(Function #17)
	125	[855]	MOVE     	R0 R26 ; R0 := R26
	126	[855]	MOVE     	R0 R30 ; R0 := R30
	127	[855]	MOVE     	R0 R29 ; R0 := R29
	128	[855]	MOVE     	R0 R27 ; R0 := R27
	129	[902]	CLOSURE  	R32 17 ; R32 := closure(Function #18)
	130	[902]	MOVE     	R0 R26 ; R0 := R26
	131	[857]	SETGLOBAL	R32 K37 ; ApostasyJustCompleted := R32
	132	[1103]	CLOSURE  	R32 18 ; R32 := closure(Function #19)
	133	[1103]	MOVE     	R0 R2 ; R0 := R2
	134	[1103]	MOVE     	R0 R3 ; R0 := R3
	135	[1103]	MOVE     	R0 R4 ; R0 := R4
	136	[1103]	MOVE     	R0 R5 ; R0 := R5
	137	[1103]	MOVE     	R0 R26 ; R0 := R26
	138	[1103]	MOVE     	R0 R23 ; R0 := R23
	139	[1103]	MOVE     	R0 R32 ; R0 := R32
	140	[1103]	MOVE     	R0 R31 ; R0 := R31
	141	[1107]	CLOSURE  	R33 19 ; R33 := closure(Function #20)
	142	[1107]	MOVE     	R0 R32 ; R0 := R32
	143	[1105]	SETGLOBAL	R33 K38 ; ShipSetUp := R33
	144	[1160]	CLOSURE  	R33 20 ; R33 := closure(Function #21)
	145	[1160]	MOVE     	R0 R29 ; R0 := R29
	146	[1160]	MOVE     	R0 R28 ; R0 := R28
	147	[1109]	SETGLOBAL	R33 K39 ; OutroCinematicTriggered := R33
	148	[1160]	RETURN   	R0 1 ; return 


function #1 <?:67,83> (46 instructions, 184 bytes at 00000160FF9D2C70)
1 param, 10 slots, 3 upvalues, 0 locals, 15 constants, 0 functions
	1	[68]	LOADK    	R1 := 1.000000
	2	[68]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[68]	LEN      	R2 R2 ; R2 := # R2
	4	[68]	LOADK    	R3 := 1.000000
	5	[68]	FORPREP  	R1 45 ; R1 -= R3; PC := 45
	6	[69]	GETUPVAL 	R5 U0 ; R5 := U0
	7	[69]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	8	[69]	EQ       	0 R5 R0 ; if R5 ~= R0 then PC := 45
	9	[69]	JMP      	45 ; PC := 45
	10	[71]	LOADK    	R5 K0 ; R5 := "ApostasyPoint"
	11	[71]	GETGLOBAL	R6 K1 ; R6 := 0x64fb1586
	12	[71]	MOVE     	R7 R4 ; R7 := R4
	13	[71]	CALL     	R6 2 2 ; R6 := R6(R7)
	14	[71]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	15	[72]	GETGLOBAL	R6 K2 ; R6 := 0x3d106989
	16	[72]	LOADK    	R7 K3 ; R7 := "Apostasy - Playing transmission: "
	17	[72]	MOVE     	R8 R5 ; R8 := R5
	18	[72]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	19	[72]	CALL     	R6 2 1 ; R6(R7)
	20	[73]	GETUPVAL 	R6 U1 ; R6 := U1
	21	[73]	GETTABLE 	R6 R6 K4 ; R6 := R6[0x9742b85b]
	22	[73]	GETGLOBAL	R7 K5 ; R7 := _T
	23	[73]	GETTABLE 	R7 R7 K6 ; R7 := R7["MissionTransmissionSet"]
	24	[73]	GETGLOBAL	R8 K7 ; R8 := 0x0469f296
	25	[73]	MOVE     	R9 R5 ; R9 := R5
	26	[73]	CALL     	R8 2 0 ; R8,... := R8(R9)
	27	[73]	CALL     	R6 0 1 ; R6(R7,...)
	28	[74]	GETGLOBAL	R6 K5 ; R6 := _T
	29	[74]	ADD      	R7 R4 K9 ; R7 := R4 + 1.000000
	30	[74]	SETTABLE 	R6 K8 R7 ; R6["EnableApostasySplinesIdx"] := R7
	31	[75]	SELF     	R6 R0 K10 ; R7 := R0; R6 := R0[0xc9f6a7d7]
	32	[75]	GETUPVAL 	R8 U2 ; R8 := U2
	33	[75]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	34	[76]	GETGLOBAL	R7 K11 ; R7 := 0x7b998233
	35	[76]	MOVE     	R8 R6 ; R8 := R6
	36	[76]	CALL     	R7 2 2 ; R7 := R7(R8)
	37	[76]	TEST     	R7 1 ; if R7 then PC := 42
	38	[76]	JMP      	42 ; PC := 42
	39	[77]	SELF     	R7 R6 K12 ; R8 := R6; R7 := R6[0x8eb2112d]
	40	[77]	LOADK    	R9 K13 ; R9 := "Enable"
	41	[77]	CALL     	R7 3 1 ; R7(R8,R9)
	42	[79]	SELF     	R7 R0 K14 ; R8 := R0; R7 := R0[0xa2880940]
	43	[79]	CALL     	R7 2 1 ; R7(R8)
	44	[80]	JMP      	46 ; PC := 46
	45	[68]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	46	[83]	RETURN   	R0 1 ; return 

function #2 <?:85,215> (465 instructions, 1860 bytes at 00000160FF9D2F80)
1 param, 46 slots, 4 upvalues, 0 locals, 68 constants, 0 functions
	1	[86]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[86]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	3	[86]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[86]	TEST     	R1 1 ; if R1 then PC := 13
	5	[86]	JMP      	13 ; PC := 13
	6	[86]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[86]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	8	[86]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xabf50b1c]
	9	[86]	CALL     	R2 2 0 ; R2,... := R2(R3)
	10	[86]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	11	[86]	TEST     	R1 0 ; if not R1 then PC := 17
	12	[86]	JMP      	17 ; PC := 17
	13	[87]	GETGLOBAL	R1 K3 ; R1 := 0xcbd666e1
	14	[87]	LOADK    	R2 := 0.000000
	15	[87]	CALL     	R1 2 1 ; R1(R2)
	16	[87]	JMP      	1 ; PC := 1
	17	[90]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	18	[90]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xef893aec]
	19	[90]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[91]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	21	[91]	MOVE     	R3 R1 ; R3 := R1
	22	[91]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[91]	TEST     	R2 0 ; if not R2 then PC := 33
	24	[91]	JMP      	33 ; PC := 33
	25	[92]	GETGLOBAL	R2 K3 ; R2 := 0xcbd666e1
	26	[92]	LOADK    	R3 := 0.000000
	27	[92]	CALL     	R2 2 1 ; R2(R3)
	28	[93]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	29	[93]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xef893aec]
	30	[93]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[93]	MOVE     	R1 R2 ; R1 := R2
	32	[93]	JMP      	20 ; PC := 20
	33	[96]	GETTABLE 	R2 R1 K5 ; R2 := R1["goalTag"]
	34	[96]	GETGLOBAL	R3 K6 ; R3 := 0x0469f296
	35	[96]	LOADK    	R4 K7 ; R4 := "Apostasy"
	36	[96]	CALL     	R3 2 2 ; R3 := R3(R4)
	37	[96]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 49
	38	[96]	JMP      	49 ; PC := 49
	39	[97]	GETGLOBAL	R2 K8 ; R2 := 0x89326c93
	40	[97]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x46a0ebf5]
	41	[97]	GETGLOBAL	R4 K6 ; R4 := 0x0469f296
	42	[97]	LOADK    	R5 K10 ; R5 := "NotApostasyForwarder"
	43	[97]	CALL     	R4 2 0 ; R4,... := R4(R5)
	44	[97]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	45	[97]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x8eb2112d]
	46	[97]	LOADK    	R4 K12 ; R4 := "TriggerPort"
	47	[97]	CALL     	R2 3 1 ; R2(R3,R4)
	48	[98]	RETURN   	R0 1 ; return 
	49	[101]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	50	[101]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xabf50b1c]
	51	[101]	CALL     	R2 2 2 ; R2 := R2(R3)
	52	[101]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x543a0b5e]
	53	[101]	OP_LOADBOOL	R4 0 0 ; R4 := false
	54	[101]	CALL     	R2 3 1 ; R2(R3,R4)
	55	[102]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	56	[102]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xabf50b1c]
	57	[102]	CALL     	R2 2 2 ; R2 := R2(R3)
	58	[102]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xff185f7e]
	59	[102]	GETGLOBAL	R4 K15 ; R4 := EMPTY_SYMBOL
	60	[102]	CALL     	R2 3 1 ; R2(R3,R4)
	61	[104]	GETGLOBAL	R2 K8 ; R2 := 0x89326c93
	62	[104]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x78298275]
	63	[104]	CALL     	R2 2 2 ; R2 := R2(R3)
	64	[105]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	65	[105]	MOVE     	R4 R2 ; R4 := R2
	66	[105]	CALL     	R3 2 2 ; R3 := R3(R4)
	67	[105]	TEST     	R3 0 ; if not R3 then PC := 77
	68	[105]	JMP      	77 ; PC := 77
	69	[106]	GETGLOBAL	R3 K3 ; R3 := 0xcbd666e1
	70	[106]	LOADK    	R4 := 0.000000
	71	[106]	CALL     	R3 2 1 ; R3(R4)
	72	[107]	GETGLOBAL	R3 K8 ; R3 := 0x89326c93
	73	[107]	SELF     	R3 R3 K16 ; R4 := R3; R3 := R3[0x78298275]
	74	[107]	CALL     	R3 2 2 ; R3 := R3(R4)
	75	[107]	MOVE     	R2 R3 ; R2 := R3
	76	[107]	JMP      	64 ; PC := 64
	77	[110]	SELF     	R3 R2 K17 ; R4 := R2; R3 := R2[0xde321e6f]
	78	[110]	CALL     	R3 2 2 ; R3 := R3(R4)
	79	[110]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xf7d48ee0]
	80	[110]	CALL     	R3 2 2 ; R3 := R3(R4)
	81	[111]	SELF     	R4 R3 K19 ; R5 := R3; R4 := R3[0x83df59e9]
	82	[111]	OP_LOADBOOL	R6 1 0 ; R6 := true
	83	[111]	GETGLOBAL	R7 K6 ; R7 := 0x0469f296
	84	[111]	LOADK    	R8 K20 ; R8 := "OPERATOR_TRANSFERENCE"
	85	[111]	CALL     	R7 2 0 ; R7,... := R7(R8)
	86	[111]	CALL     	R4 0 1 ; R4(R5,...)
	87	[113]	SELF     	R4 R2 K21 ; R5 := R2; R4 := R2[0xd1586535]
	88	[113]	CALL     	R4 2 2 ; R4 := R4(R5)
	89	[114]	SELF     	R5 R0 K21 ; R6 := R0; R5 := R0[0xd1586535]
	90	[114]	CALL     	R5 2 2 ; R5 := R5(R6)
	91	[116]	GETGLOBAL	R6 K8 ; R6 := 0x89326c93
	92	[116]	SELF     	R6 R6 K22 ; R7 := R6; R6 := R6[0x29ef273d]
	93	[116]	CALL     	R6 2 2 ; R6 := R6(R7)
	94	[117]	SELF     	R7 R6 K23 ; R8 := R6; R7 := R6[0xea0b2ae7]
	95	[117]	MOVE     	R9 R4 ; R9 := R4
	96	[117]	MOVE     	R10 R5 ; R10 := R5
	97	[117]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	98	[118]	GETGLOBAL	R8 K24 ; R8 := _T
	99	[118]	SETTABLE 	R8 K25 R7 ; R8["ApostasySplinePath"] := R7
	100	[119]	NEWTABLE 	R8 0 0 ; R8 := {}
	101	[120]	GETGLOBAL	R9 K26 ; R9 := 0x60cce7b4
	102	[120]	TESTSET  	R10 R7 0 ; if not R7 then PC := 109 else R10 := R7 
	103	[120]	JMP      	109 ; PC := 109
	104	[120]	LEN      	R10 R7 ; R10 := # R7
	105	[120]	LT       	1 K27 R10 ; if 0.000000 < R10 then PC := 108
	106	[120]	JMP      	108 ; PC := 108
	107	[120]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 108
	108	[120]	OP_LOADBOOL	R10 1 0 ; R10 := true
	109	[120]	CALL     	R9 2 1 ; R9(R10)
	110	[122]	GETGLOBAL	R9 K28 ; R9 := 0x83ddcc65
	111	[122]	GETTABLE 	R10 R7 K29 ; R10 := R7[1.000000]
	112	[122]	GETTABLE 	R11 R7 K29 ; R11 := R7[1.000000]
	113	[122]	GETGLOBAL	R12 K30 ; R12 := 0xa421af95
	114	[122]	LOADK    	R13 := 0.000000
	115	[122]	LOADK    	R14 := 5.000000
	116	[122]	LOADK    	R15 := 0.000000
	117	[122]	CALL     	R12 4 0 ; R12,... := R12(R13,R14,R15)
	118	[122]	CALL     	R9 0 1 ; R9(R10,...)
	119	[124]	GETGLOBAL	R9 K31 ; R9 := 0x33bdd652
	120	[124]	GETTABLE 	R9 R9 K32 ; R9 := R9[0x23d5322f]
	121	[124]	MOVE     	R10 R7 ; R10 := R7
	122	[124]	LOADK    	R11 := 1.000000
	123	[124]	GETTABLE 	R12 R7 K29 ; R12 := R7[1.000000]
	124	[124]	GETGLOBAL	R13 K30 ; R13 := 0xa421af95
	125	[124]	LOADK    	R14 := 0.000000
	126	[124]	LOADK    	R15 := -10.000000
	127	[124]	LOADK    	R16 := 0.000000
	128	[124]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	129	[124]	ADD      	R12 R12 R13 ; R12 := R12 + R13
	130	[124]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	131	[125]	LEN      	R9 R7 ; R9 := # R7
	132	[125]	GETTABLE 	R9 R7 R9 ; R9 := R7[R9]
	133	[125]	LEN      	R10 R7 ; R10 := # R7
	134	[125]	SUB      	R10 R10 K29 ; R10 := R10 - 1.000000
	135	[125]	GETTABLE 	R10 R7 R10 ; R10 := R7[R10]
	136	[125]	SUB      	R9 R9 R10 ; R9 := R9 - R10
	137	[125]	GETGLOBAL	R10 K33 ; R10 := 0x492c7f2a
	138	[125]	GETGLOBAL	R11 K30 ; R11 := 0xa421af95
	139	[125]	LOADK    	R12 := 0.000000
	140	[125]	LOADK    	R13 := 0.000000
	141	[125]	LOADK    	R14 := -1.000000
	142	[125]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	143	[125]	SELF     	R12 R0 K34 ; R13 := R0; R12 := R0[0xcb3851b8]
	144	[125]	CALL     	R12 2 0 ; R12,... := R12(R13)
	145	[125]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	146	[125]	ADD      	R9 R9 R10 ; R9 := R9 + R10
	147	[126]	GETGLOBAL	R10 K35 ; R10 := 0xc2892f65
	148	[126]	MOVE     	R11 R9 ; R11 := R9
	149	[126]	CALL     	R10 2 1 ; R10(R11)
	150	[127]	MUL      	R9 R9 K36 ; R9 := R9 * 2.500000
	151	[128]	GETGLOBAL	R10 K31 ; R10 := 0x33bdd652
	152	[128]	GETTABLE 	R10 R10 K32 ; R10 := R10[0x23d5322f]
	153	[128]	MOVE     	R11 R7 ; R11 := R7
	154	[128]	GETGLOBAL	R12 K30 ; R12 := 0xa421af95
	155	[128]	CALL     	R12 1 0 ; R12,... := R12()
	156	[128]	CALL     	R10 0 1 ; R10(R11,...)
	157	[129]	GETGLOBAL	R10 K37 ; R10 := 0x808dc004
	158	[129]	LEN      	R11 R7 ; R11 := # R7
	159	[129]	GETTABLE 	R11 R7 R11 ; R11 := R7[R11]
	160	[129]	MOVE     	R12 R9 ; R12 := R9
	161	[129]	LEN      	R13 R7 ; R13 := # R7
	162	[129]	SUB      	R13 R13 K29 ; R13 := R13 - 1.000000
	163	[129]	GETTABLE 	R13 R7 R13 ; R13 := R7[R13]
	164	[129]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	165	[130]	SETTABLE 	R9 K38 K27 ; R9["z"] := 0.000000
	166	[131]	SETTABLE 	R9 K39 K40 ; R9["y"] := -20.000000
	167	[132]	GETGLOBAL	R10 K31 ; R10 := 0x33bdd652
	168	[132]	GETTABLE 	R10 R10 K32 ; R10 := R10[0x23d5322f]
	169	[132]	MOVE     	R11 R7 ; R11 := R7
	170	[132]	GETGLOBAL	R12 K30 ; R12 := 0xa421af95
	171	[132]	CALL     	R12 1 0 ; R12,... := R12()
	172	[132]	CALL     	R10 0 1 ; R10(R11,...)
	173	[133]	GETGLOBAL	R10 K37 ; R10 := 0x808dc004
	174	[133]	LEN      	R11 R7 ; R11 := # R7
	175	[133]	GETTABLE 	R11 R7 R11 ; R11 := R7[R11]
	176	[133]	MOVE     	R12 R9 ; R12 := R9
	177	[133]	LEN      	R13 R7 ; R13 := # R7
	178	[133]	SUB      	R13 R13 K29 ; R13 := R13 - 1.000000
	179	[133]	GETTABLE 	R13 R7 R13 ; R13 := R7[R13]
	180	[133]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	181	[134]	GETGLOBAL	R10 K31 ; R10 := 0x33bdd652
	182	[134]	GETTABLE 	R10 R10 K32 ; R10 := R10[0x23d5322f]
	183	[134]	MOVE     	R11 R7 ; R11 := R7
	184	[134]	GETGLOBAL	R12 K30 ; R12 := 0xa421af95
	185	[134]	CALL     	R12 1 0 ; R12,... := R12()
	186	[134]	CALL     	R10 0 1 ; R10(R11,...)
	187	[135]	GETGLOBAL	R10 K37 ; R10 := 0x808dc004
	188	[135]	LEN      	R11 R7 ; R11 := # R7
	189	[135]	GETTABLE 	R11 R7 R11 ; R11 := R7[R11]
	190	[135]	MOVE     	R12 R9 ; R12 := R9
	191	[135]	LEN      	R13 R7 ; R13 := # R7
	192	[135]	SUB      	R13 R13 K29 ; R13 := R13 - 1.000000
	193	[135]	GETTABLE 	R13 R7 R13 ; R13 := R7[R13]
	194	[135]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	195	[137]	LOADK    	R10 K41 ; R10 := 3.050000
	196	[138]	GETGLOBAL	R11 K42 ; R11 := 0x60130201
	197	[138]	LOADK    	R12 := 255.000000
	198	[138]	LOADK    	R13 := 0.000000
	199	[138]	LOADK    	R14 := 0.000000
	200	[138]	LOADK    	R15 := 127.000000
	201	[138]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	202	[139]	GETGLOBAL	R12 K42 ; R12 := 0x60130201
	203	[139]	LOADK    	R13 := 0.000000
	204	[139]	LOADK    	R14 := 255.000000
	205	[139]	LOADK    	R15 := 0.000000
	206	[139]	LOADK    	R16 := 127.000000
	207	[139]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	208	[141]	GETUPVAL 	R13 U0 ; R13 := U0
	209	[141]	TEST     	R13 0 ; if not R13 then PC := 253
	210	[141]	JMP      	253 ; PC := 253
	211	[142]	LOADK    	R13 := 1.000000
	212	[142]	LEN      	R14 R7 ; R14 := # R7
	213	[142]	SUB      	R14 R14 K29 ; R14 := R14 - 1.000000
	214	[142]	LOADK    	R15 := 1.000000
	215	[142]	FORPREP  	R13 252 ; R13 -= R15; PC := 252
	216	[143]	GETGLOBAL	R17 K8 ; R17 := 0x89326c93
	217	[143]	SELF     	R17 R17 K43 ; R18 := R17; R17 := R17[0x045c1874]
	218	[143]	GETTABLE 	R19 R7 R16 ; R19 := R7[R16]
	219	[143]	GETGLOBAL	R20 K30 ; R20 := 0xa421af95
	220	[143]	LOADK    	R21 := 0.000000
	221	[143]	LOADK    	R22 := 0.500000
	222	[143]	LOADK    	R23 := 0.000000
	223	[143]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	224	[143]	ADD      	R19 R19 R20 ; R19 := R19 + R20
	225	[143]	MOVE     	R20 R11 ; R20 := R11
	226	[143]	GETGLOBAL	R21 K44 ; R21 := 0x64fb1586
	227	[143]	MOVE     	R22 R16 ; R22 := R16
	228	[143]	CALL     	R21 2 2 ; R21 := R21(R22)
	229	[143]	LOADK    	R22 := 1.000000
	230	[143]	LOADK    	R23 K45 ; R23 := 340282346638528859811704183484516925440.000000
	231	[143]	CALL     	R17 7 1 ; R17(R18,R19,R20,R21,R22,R23)
	232	[144]	GETGLOBAL	R17 K8 ; R17 := 0x89326c93
	233	[144]	SELF     	R17 R17 K46 ; R18 := R17; R17 := R17[0x1cecd8f9]
	234	[144]	GETTABLE 	R19 R7 R16 ; R19 := R7[R16]
	235	[144]	GETGLOBAL	R20 K30 ; R20 := 0xa421af95
	236	[144]	LOADK    	R21 := 0.000000
	237	[144]	LOADK    	R22 := 0.500000
	238	[144]	LOADK    	R23 := 0.000000
	239	[144]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	240	[144]	ADD      	R19 R19 R20 ; R19 := R19 + R20
	241	[144]	ADD      	R20 R16 K29 ; R20 := R16 + 1.000000
	242	[144]	GETTABLE 	R20 R7 R20 ; R20 := R7[R20]
	243	[144]	GETGLOBAL	R21 K30 ; R21 := 0xa421af95
	244	[144]	LOADK    	R22 := 0.000000
	245	[144]	LOADK    	R23 := 0.500000
	246	[144]	LOADK    	R24 := 0.000000
	247	[144]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	248	[144]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	249	[144]	MOVE     	R21 R11 ; R21 := R11
	250	[144]	LOADK    	R22 K45 ; R22 := 340282346638528859811704183484516925440.000000
	251	[144]	CALL     	R17 6 1 ; R17(R18,R19,R20,R21,R22)
	252	[142]	FORLOOP  	R13 216 ; R13 += R15; if R13 <= R14 then begin PC := 216; R16 := R13 end
	253	[148]	LOADK    	R17 := 1.500000
	254	[149]	LOADK    	R18 := 0.000000
	255	[150]	LOADK    	R19 := 1.000000
	256	[151]	LEN      	R20 R7 ; R20 := # R7
	257	[151]	SUB      	R20 R20 K29 ; R20 := R20 - 1.000000
	258	[151]	LT       	0 R19 R20 ; if R19 >= R20 then PC := 303
	259	[151]	JMP      	303 ; PC := 303
	260	[152]	SETTABLE 	R8 R19 R18 ; R8[R19] := R18
	261	[153]	ADD      	R20 R19 K29 ; R20 := R19 + 1.000000
	262	[154]	GETTABLE 	R21 R7 R19 ; R21 := R7[R19]
	263	[155]	GETTABLE 	R22 R7 R20 ; R22 := R7[R20]
	264	[156]	GETGLOBAL	R23 K0 ; R23 := 0x7b998233
	265	[156]	MOVE     	R24 R22 ; R24 := R22
	266	[156]	CALL     	R23 2 2 ; R23 := R23(R24)
	267	[156]	TEST     	R23 1 ; if R23 then PC := 288
	268	[156]	JMP      	288 ; PC := 288
	269	[156]	GETGLOBAL	R23 K47 ; R23 := 0x03ea2485
	270	[156]	MOVE     	R24 R21 ; R24 := R21
	271	[156]	MOVE     	R25 R22 ; R25 := R22
	272	[156]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	273	[156]	LT       	0 R23 R10 ; if R23 >= R10 then PC := 288
	274	[156]	JMP      	288 ; PC := 288
	275	[157]	GETGLOBAL	R23 K48 ; R23 := 0x5db3ce80
	276	[157]	MOVE     	R24 R21 ; R24 := R21
	277	[157]	GETGLOBAL	R25 K31 ; R25 := 0x33bdd652
	278	[157]	GETTABLE 	R25 R25 K49 ; R25 := R25[0x9c1f3b5a]
	279	[157]	MOVE     	R26 R7 ; R26 := R7
	280	[157]	MOVE     	R27 R20 ; R27 := R20
	281	[157]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	282	[157]	LOADK    	R26 := 0.500000
	283	[157]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	284	[157]	MOVE     	R21 R23 ; R21 := R23
	285	[158]	SETTABLE 	R7 R19 R21 ; R7[R19] := R21
	286	[159]	GETTABLE 	R22 R7 R20 ; R22 := R7[R20]
	287	[159]	JMP      	264 ; PC := 264
	288	[162]	TEST     	R22 0 ; if not R22 then PC := 296
	289	[162]	JMP      	296 ; PC := 296
	290	[162]	GETGLOBAL	R23 K47 ; R23 := 0x03ea2485
	291	[162]	MOVE     	R24 R21 ; R24 := R21
	292	[162]	MOVE     	R25 R22 ; R25 := R22
	293	[162]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	294	[162]	TEST     	R23 1 ; if R23 then PC := 297
	295	[162]	JMP      	297 ; PC := 297
	296	[162]	LOADK    	R23 := 0.000000
	297	[162]	ADD      	R18 R18 R23 ; R18 := R18 + R23
	298	[163]	GETTABLE 	R23 R21 K39 ; R23 := R21["y"]
	299	[163]	ADD      	R23 R23 R17 ; R23 := R23 + R17
	300	[163]	SETTABLE 	R21 K39 R23 ; R21["y"] := R23
	301	[164]	ADD      	R19 R19 K29 ; R19 := R19 + 1.000000
	302	[164]	JMP      	256 ; PC := 256
	303	[166]	LEN      	R23 R7 ; R23 := # R7
	304	[166]	GETTABLE 	R23 R7 R23 ; R23 := R7[R23]
	305	[167]	GETTABLE 	R24 R23 K39 ; R24 := R23["y"]
	306	[167]	ADD      	R24 R24 R17 ; R24 := R24 + R17
	307	[167]	SETTABLE 	R23 K39 R24 ; R23["y"] := R24
	308	[169]	NEWTABLE 	R24 0 0 ; R24 := {}
	309	[170]	NEWTABLE 	R25 0 0 ; R25 := {}
	310	[171]	GETGLOBAL	R26 K24 ; R26 := _T
	311	[171]	SETTABLE 	R26 K50 R24 ; R26["ApostasySplines"] := R24
	312	[172]	GETGLOBAL	R26 K24 ; R26 := _T
	313	[172]	SETTABLE 	R26 K51 R25 ; R26["ApostasySplinesIndices"] := R25
	314	[174]	LOADK    	R26 := 1.000000
	315	[175]	LOADK    	R27 := 1.000000
	316	[176]	LOADK    	R28 := 1.000000
	317	[176]	LEN      	R29 R8 ; R29 := # R8
	318	[176]	LOADK    	R30 := 1.000000
	319	[176]	FORPREP  	R28 396 ; R28 -= R30; PC := 396
	320	[177]	GETUPVAL 	R32 U1 ; R32 := U1
	321	[177]	LEN      	R32 R32 ; R32 := # R32
	322	[177]	LT       	0 R32 R27 ; if R32 >= R27 then PC := 325
	323	[177]	JMP      	325 ; PC := 325
	324	[178]	JMP      	397 ; PC := 397
	325	[181]	GETUPVAL 	R32 U1 ; R32 := U1
	326	[181]	GETTABLE 	R32 R32 R27 ; R32 := R32[R27]
	327	[181]	TEST     	R32 1 ; if R32 then PC := 330
	328	[181]	JMP      	330 ; PC := 330
	329	[181]	LOADK    	R32 K45 ; R32 := 340282346638528859811704183484516925440.000000
	330	[181]	GETTABLE 	R33 R8 R31 ; R33 := R8[R31]
	331	[181]	DIV      	R33 R33 R18 ; R33 := R33 / R18
	332	[181]	LE       	0 R32 R33 ; if R32 > R33 then PC := 396
	333	[181]	JMP      	396 ; PC := 396
	334	[182]	GETGLOBAL	R32 K8 ; R32 := 0x89326c93
	335	[182]	SELF     	R32 R32 K52 ; R33 := R32; R32 := R32[0x05909209]
	336	[182]	GETGLOBAL	R34 K53 ; R34 := 0xe22553df
	337	[182]	GETGLOBAL	R35 K54 ; R35 := ZERO_VECTOR
	338	[182]	GETGLOBAL	R36 K55 ; R36 := ZERO_ROTATION
	339	[182]	CALL     	R32 5 2 ; R32 := R32(R33,R34,R35,R36)
	340	[183]	SELF     	R33 R32 K56 ; R34 := R32; R33 := R32[0x7ceafc23]
	341	[183]	GETUPVAL 	R35 U2 ; R35 := U2
	342	[183]	GETTABLE 	R35 R35 K57 ; R35 := R35[0x5d4264cc]
	343	[183]	MOVE     	R36 R7 ; R36 := R7
	344	[183]	GETGLOBAL	R37 K58 ; R37 := 0x5bced4c4
	345	[183]	GETTABLE 	R37 R37 K59 ; R37 := R37[0xb62ecfe0]
	346	[183]	SUB      	R38 R26 K29 ; R38 := R26 - 1.000000
	347	[183]	LOADK    	R39 := 1.000000
	348	[183]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	349	[183]	GETGLOBAL	R38 K58 ; R38 := 0x5bced4c4
	350	[183]	GETTABLE 	R38 R38 K60 ; R38 := R38[0xac1b386a]
	351	[183]	ADD      	R39 R31 K29 ; R39 := R31 + 1.000000
	352	[183]	LEN      	R40 R7 ; R40 := # R7
	353	[183]	CALL     	R38 3 0 ; R38,... := R38(R39,R40)
	354	[183]	CALL     	R35 0 0 ; R35,... := R35(R36,...)
	355	[183]	CALL     	R33 0 1 ; R33(R34,...)
	356	[184]	GETGLOBAL	R33 K31 ; R33 := 0x33bdd652
	357	[184]	GETTABLE 	R33 R33 K32 ; R33 := R33[0x23d5322f]
	358	[184]	MOVE     	R34 R24 ; R34 := R24
	359	[184]	MOVE     	R35 R32 ; R35 := R32
	360	[184]	CALL     	R33 3 1 ; R33(R34,R35)
	361	[185]	GETGLOBAL	R33 K31 ; R33 := 0x33bdd652
	362	[185]	GETTABLE 	R33 R33 K32 ; R33 := R33[0x23d5322f]
	363	[185]	MOVE     	R34 R25 ; R34 := R25
	364	[185]	MOVE     	R35 R26 ; R35 := R26
	365	[185]	CALL     	R33 3 1 ; R33(R34,R35)
	366	[186]	MOVE     	R26 R31 ; R26 := R31
	367	[188]	ADD      	R27 R27 K29 ; R27 := R27 + 1.000000
	368	[189]	GETGLOBAL	R33 K8 ; R33 := 0x89326c93
	369	[189]	SELF     	R33 R33 K52 ; R34 := R33; R33 := R33[0x05909209]
	370	[189]	GETGLOBAL	R35 K61 ; R35 := 0xcd7cd396
	371	[189]	GETTABLE 	R36 R7 R31 ; R36 := R7[R31]
	372	[189]	ADD      	R37 R31 K29 ; R37 := R31 + 1.000000
	373	[189]	GETTABLE 	R37 R7 R37 ; R37 := R7[R37]
	374	[189]	TEST     	R37 0 ; if not R37 then PC := 383
	375	[189]	JMP      	383 ; PC := 383
	376	[189]	GETGLOBAL	R37 K62 ; R37 := 0x20b7f774
	377	[189]	MOVE     	R38 R23 ; R38 := R23
	378	[189]	ADD      	R39 R31 K29 ; R39 := R31 + 1.000000
	379	[189]	GETTABLE 	R39 R7 R39 ; R39 := R7[R39]
	380	[189]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	381	[189]	TEST     	R37 1 ; if R37 then PC := 384
	382	[189]	JMP      	384 ; PC := 384
	383	[189]	GETGLOBAL	R37 K55 ; R37 := ZERO_ROTATION
	384	[189]	MOVE     	R38 R0 ; R38 := R0
	385	[189]	MOVE     	R39 R0 ; R39 := R0
	386	[189]	CALL     	R33 7 2 ; R33 := R33(R34,R35,R36,R37,R38,R39)
	387	[190]	GETGLOBAL	R34 K31 ; R34 := 0x33bdd652
	388	[190]	GETTABLE 	R34 R34 K32 ; R34 := R34[0x23d5322f]
	389	[190]	GETUPVAL 	R35 U3 ; R35 := U3
	390	[190]	MOVE     	R36 R33 ; R36 := R33
	391	[190]	CALL     	R34 3 1 ; R34(R35,R36)
	392	[191]	GETGLOBAL	R34 K63 ; R34 := 0x11a19c5e
	393	[191]	MOVE     	R35 R33 ; R35 := R33
	394	[191]	LOADK    	R36 K64 ; R36 := "OnTouched"
	395	[191]	CALL     	R34 3 1 ; R34(R35,R36)
	396	[176]	FORLOOP  	R28 320 ; R28 += R30; if R28 <= R29 then begin PC := 320; R31 := R28 end
	397	[195]	GETGLOBAL	R34 K8 ; R34 := 0x89326c93
	398	[195]	SELF     	R34 R34 K52 ; R35 := R34; R34 := R34[0x05909209]
	399	[195]	GETGLOBAL	R36 K53 ; R36 := 0xe22553df
	400	[195]	GETGLOBAL	R37 K54 ; R37 := ZERO_VECTOR
	401	[195]	GETGLOBAL	R38 K55 ; R38 := ZERO_ROTATION
	402	[195]	CALL     	R34 5 2 ; R34 := R34(R35,R36,R37,R38)
	403	[196]	SELF     	R35 R34 K56 ; R36 := R34; R35 := R34[0x7ceafc23]
	404	[196]	GETUPVAL 	R37 U2 ; R37 := U2
	405	[196]	GETTABLE 	R37 R37 K57 ; R37 := R37[0x5d4264cc]
	406	[196]	MOVE     	R38 R7 ; R38 := R7
	407	[196]	GETGLOBAL	R39 K58 ; R39 := 0x5bced4c4
	408	[196]	GETTABLE 	R39 R39 K59 ; R39 := R39[0xb62ecfe0]
	409	[196]	SUB      	R40 R26 K29 ; R40 := R26 - 1.000000
	410	[196]	LOADK    	R41 := 1.000000
	411	[196]	CALL     	R39 3 0 ; R39,... := R39(R40,R41)
	412	[196]	CALL     	R37 0 0 ; R37,... := R37(R38,...)
	413	[196]	CALL     	R35 0 1 ; R35(R36,...)
	414	[197]	GETGLOBAL	R35 K31 ; R35 := 0x33bdd652
	415	[197]	GETTABLE 	R35 R35 K32 ; R35 := R35[0x23d5322f]
	416	[197]	MOVE     	R36 R24 ; R36 := R24
	417	[197]	MOVE     	R37 R34 ; R37 := R34
	418	[197]	CALL     	R35 3 1 ; R35(R36,R37)
	419	[199]	GETUPVAL 	R35 U0 ; R35 := U0
	420	[199]	TEST     	R35 0 ; if not R35 then PC := 446
	421	[199]	JMP      	446 ; PC := 446
	422	[200]	LOADK    	R35 := 1.000000
	423	[200]	LEN      	R36 R7 ; R36 := # R7
	424	[200]	SUB      	R36 R36 K29 ; R36 := R36 - 1.000000
	425	[200]	LOADK    	R37 := 1.000000
	426	[200]	FORPREP  	R35 445 ; R35 -= R37; PC := 445
	427	[201]	GETGLOBAL	R39 K8 ; R39 := 0x89326c93
	428	[201]	SELF     	R39 R39 K43 ; R40 := R39; R39 := R39[0x045c1874]
	429	[201]	GETTABLE 	R41 R7 R38 ; R41 := R7[R38]
	430	[201]	MOVE     	R42 R12 ; R42 := R12
	431	[201]	GETGLOBAL	R43 K44 ; R43 := 0x64fb1586
	432	[201]	MOVE     	R44 R38 ; R44 := R38
	433	[201]	CALL     	R43 2 2 ; R43 := R43(R44)
	434	[201]	LOADK    	R44 := 1.000000
	435	[201]	LOADK    	R45 K45 ; R45 := 340282346638528859811704183484516925440.000000
	436	[201]	CALL     	R39 7 1 ; R39(R40,R41,R42,R43,R44,R45)
	437	[202]	GETGLOBAL	R39 K8 ; R39 := 0x89326c93
	438	[202]	SELF     	R39 R39 K46 ; R40 := R39; R39 := R39[0x1cecd8f9]
	439	[202]	GETTABLE 	R41 R7 R38 ; R41 := R7[R38]
	440	[202]	ADD      	R42 R38 K29 ; R42 := R38 + 1.000000
	441	[202]	GETTABLE 	R42 R7 R42 ; R42 := R7[R42]
	442	[202]	MOVE     	R43 R12 ; R43 := R12
	443	[202]	LOADK    	R44 K45 ; R44 := 340282346638528859811704183484516925440.000000
	444	[202]	CALL     	R39 6 1 ; R39(R40,R41,R42,R43,R44)
	445	[200]	FORLOOP  	R35 427 ; R35 += R37; if R35 <= R36 then begin PC := 427; R38 := R35 end
	446	[206]	GETGLOBAL	R39 K8 ; R39 := 0x89326c93
	447	[206]	SELF     	R39 R39 K22 ; R40 := R39; R39 := R39[0x29ef273d]
	448	[206]	CALL     	R39 2 2 ; R39 := R39(R40)
	449	[206]	SELF     	R39 R39 K65 ; R40 := R39; R39 := R39[0x66905cb0]
	450	[206]	CALL     	R39 2 2 ; R39 := R39(R40)
	451	[208]	SELF     	R40 R39 K66 ; R41 := R39; R40 := R39[0xe2871589]
	452	[208]	MOVE     	R42 R0 ; R42 := R0
	453	[208]	CALL     	R40 3 1 ; R40(R41,R42)
	454	[210]	GETGLOBAL	R40 K24 ; R40 := _T
	455	[210]	GETTABLE 	R40 R40 K67 ; R40 := R40["ApostasySplineFadeOut"]
	456	[210]	TEST     	R40 1 ; if R40 then PC := 462
	457	[210]	JMP      	462 ; PC := 462
	458	[211]	GETGLOBAL	R40 K3 ; R40 := 0xcbd666e1
	459	[211]	LOADK    	R41 := 0.000000
	460	[211]	CALL     	R40 2 1 ; R40(R41)
	461	[211]	JMP      	454 ; PC := 454
	462	[214]	SELF     	R40 R39 K66 ; R41 := R39; R40 := R39[0xe2871589]
	463	[214]	LOADNIL  	R42 R42 ; R42 := nil
	464	[214]	CALL     	R40 3 1 ; R40(R41,R42)
	465	[215]	RETURN   	R0 1 ; return 

function #3 <?:217,219> (3 instructions, 12 bytes at 00000160FF9D1A40)
0 params, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[218]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[218]	SETTABLE 	R0 K1 K2 ; R0["ApostasySplineFadeOut"] := true
	3	[219]	RETURN   	R0 1 ; return 

function #4 <?:221,430> (543 instructions, 2172 bytes at 00000160FF9D1B50)
1 param, 75 slots, 6 upvalues, 0 locals, 69 constants, 0 functions
	1	[222]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[222]	GETTABLE 	R1 R1 K1 ; R1 := R1["ApostasySplineTickInit"]
	3	[222]	TEST     	R1 0 ; if not R1 then PC := 6
	4	[222]	JMP      	6 ; PC := 6
	5	[223]	RETURN   	R0 1 ; return 
	6	[225]	GETGLOBAL	R1 K0 ; R1 := _T
	7	[225]	SETTABLE 	R1 K1 K2 ; R1["ApostasySplineTickInit"] := true
	8	[227]	GETGLOBAL	R1 K0 ; R1 := _T
	9	[227]	GETTABLE 	R1 R1 K3 ; R1 := R1["ApostasySplines"]
	10	[227]	LEN      	R1 R1 ; R1 := # R1
	11	[227]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[227]	LEN      	R2 R2 ; R2 := # R2
	13	[227]	LT       	0 R1 R2 ; if R1 >= R2 then PC := 19
	14	[227]	JMP      	19 ; PC := 19
	15	[228]	GETGLOBAL	R1 K4 ; R1 := 0xcbd666e1
	16	[228]	LOADK    	R2 := 0.000000
	17	[228]	CALL     	R1 2 1 ; R1(R2)
	18	[228]	JMP      	8 ; PC := 8
	19	[231]	GETGLOBAL	R1 K0 ; R1 := _T
	20	[231]	GETTABLE 	R1 R1 K3 ; R1 := R1["ApostasySplines"]
	21	[232]	GETGLOBAL	R2 K0 ; R2 := _T
	22	[232]	GETTABLE 	R2 R2 K5 ; R2 := R2["ApostasySplinesIndices"]
	23	[233]	GETGLOBAL	R3 K0 ; R3 := _T
	24	[233]	GETTABLE 	R3 R3 K6 ; R3 := R3["ApostasySplinePath"]
	25	[233]	TEST     	R3 1 ; if R3 then PC := 28
	26	[233]	JMP      	28 ; PC := 28
	27	[233]	NEWTABLE 	R3 0 0 ; R3 := {}
	28	[234]	LOADK    	R4 := 1.000000
	29	[236]	GETGLOBAL	R5 K7 ; R5 := 0x89326c93
	30	[236]	SELF     	R5 R5 K8 ; R6 := R5; R5 := R5[0x05909209]
	31	[236]	GETGLOBAL	R7 K9 ; R7 := 0xbeeb1c44
	32	[236]	SELF     	R8 R0 K10 ; R9 := R0; R8 := R0[0xd1586535]
	33	[236]	CALL     	R8 2 2 ; R8 := R8(R9)
	34	[236]	GETGLOBAL	R9 K11 ; R9 := ZERO_ROTATION
	35	[236]	CALL     	R5 5 2 ; R5 := R5(R6,R7,R8,R9)
	36	[237]	SELF     	R6 R5 K12 ; R7 := R5; R6 := R5[0x905bb2bd]
	37	[237]	CALL     	R6 2 2 ; R6 := R6(R7)
	38	[238]	LOADK    	R7 := 1.000000
	39	[238]	LEN      	R8 R6 ; R8 := # R6
	40	[238]	LOADK    	R9 := 1.000000
	41	[238]	FORPREP  	R7 53 ; R7 -= R9; PC := 53
	42	[239]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	43	[239]	EQ       	1 R11 R5 ; if R11 == R5 then PC := 53
	44	[239]	JMP      	53 ; PC := 53
	45	[239]	GETTABLE 	R11 R6 R10 ; R11 := R6[R10]
	46	[239]	SELF     	R11 R11 K13 ; R12 := R11; R11 := R11[0xf2deaf69]
	47	[239]	GETGLOBAL	R13 K14 ; R13 := gSequencerType
	48	[239]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	49	[239]	TEST     	R11 0 ; if not R11 then PC := 53
	50	[239]	JMP      	53 ; PC := 53
	51	[240]	GETTABLE 	R6 R6 R10 ; R6 := R6[R10]
	52	[241]	JMP      	54 ; PC := 54
	53	[238]	FORLOOP  	R7 42 ; R7 += R9; if R7 <= R8 then begin PC := 42; R10 := R7 end
	54	[245]	LOADK    	R11 := 1.000000
	55	[245]	LEN      	R12 R1 ; R12 := # R1
	56	[245]	LOADK    	R13 := 1.000000
	57	[245]	FORPREP  	R11 63 ; R11 -= R13; PC := 63
	58	[246]	GETTABLE 	R15 R1 R14 ; R15 := R1[R14]
	59	[246]	SELF     	R15 R15 K15 ; R16 := R15; R15 := R15[0x768274d6]
	60	[246]	OP_LOADBOOL	R17 0 0 ; R17 := false
	61	[246]	OP_LOADBOOL	R18 0 0 ; R18 := false
	62	[246]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	63	[245]	FORLOOP  	R11 58 ; R11 += R13; if R11 <= R12 then begin PC := 58; R14 := R11 end
	64	[249]	GETGLOBAL	R15 K7 ; R15 := 0x89326c93
	65	[249]	SELF     	R15 R15 K16 ; R16 := R15; R15 := R15[0x78298275]
	66	[249]	CALL     	R15 2 2 ; R15 := R15(R16)
	67	[250]	GETGLOBAL	R16 K17 ; R16 := 0xa421af95
	68	[250]	CALL     	R16 1 2 ; R16 := R16()
	69	[251]	LOADK    	R17 := 0.000000
	70	[252]	LOADK    	R18 K18 ; R18 := 0.020000
	71	[253]	GETGLOBAL	R19 K17 ; R19 := 0xa421af95
	72	[253]	CALL     	R19 1 2 ; R19 := R19()
	73	[253]	GETGLOBAL	R20 K17 ; R20 := 0xa421af95
	74	[253]	CALL     	R20 1 2 ; R20 := R20()
	75	[254]	LOADK    	R21 := 1.000000
	76	[255]	GETGLOBAL	R22 K17 ; R22 := 0xa421af95
	77	[255]	CALL     	R22 1 2 ; R22 := R22()
	78	[256]	LOADK    	R23 := 0.000000
	79	[258]	GETGLOBAL	R24 K19 ; R24 := 0x5bced4c4
	80	[258]	GETTABLE 	R24 R24 K20 ; R24 := R24["min"]
	81	[259]	GETGLOBAL	R25 K19 ; R25 := 0x5bced4c4
	82	[259]	GETTABLE 	R25 R25 K21 ; R25 := R25["max"]
	83	[260]	LOADK    	R26 K22 ; R26 := 340282346638528859811704183484516925440.000000
	84	[261]	GETGLOBAL	R27 K23 ; R27 := VectorSub
	85	[262]	GETGLOBAL	R28 K24 ; R28 := Normalize
	86	[264]	LOADK    	R29 := 1.500000
	87	[266]	LOADK    	R30 K25 ; R30 := 0.100000
	88	[267]	LOADK    	R31 := 1.000000
	89	[268]	GETGLOBAL	R32 K19 ; R32 := 0x5bced4c4
	90	[268]	GETTABLE 	R32 R32 K26 ; R32 := R32[0x00fa6bf1]
	91	[268]	GETGLOBAL	R33 K19 ; R33 := 0x5bced4c4
	92	[268]	GETTABLE 	R33 R33 K27 ; R33 := R33[0xdde5c6a1]
	93	[268]	LOADK    	R34 := 18.000000
	94	[268]	CALL     	R33 2 0 ; R33,... := R33(R34)
	95	[268]	CALL     	R32 0 2 ; R32 := R32(R33,...)
	96	[269]	LOADK    	R33 := 5.000000
	97	[271]	NEWTABLE 	R34 0 0 ; R34 := {}
	98	[273]	GETGLOBAL	R35 K0 ; R35 := _T
	99	[273]	GETTABLE 	R35 R35 K28 ; R35 := R35["ApostasySplineFadeOut"]
	100	[273]	TEST     	R35 1 ; if R35 then PC := 489
	101	[273]	JMP      	489 ; PC := 489
	102	[274]	GETGLOBAL	R35 K0 ; R35 := _T
	103	[274]	GETTABLE 	R35 R35 K29 ; R35 := R35["EnableApostasySplinesIdx"]
	104	[274]	TEST     	R35 1 ; if R35 then PC := 107
	105	[274]	JMP      	107 ; PC := 107
	106	[274]	MOVE     	R35 R4 ; R35 := R4
	107	[274]	EQ       	1 R4 R35 ; if R4 == R35 then PC := 126
	108	[274]	JMP      	126 ; PC := 126
	109	[275]	ADD      	R35 R4 K30 ; R35 := R4 + 1.000000
	110	[275]	GETGLOBAL	R36 K0 ; R36 := _T
	111	[275]	GETTABLE 	R36 R36 K29 ; R36 := R36["EnableApostasySplinesIdx"]
	112	[275]	TEST     	R36 1 ; if R36 then PC := 115
	113	[275]	JMP      	115 ; PC := 115
	114	[275]	LOADK    	R36 := 0.000000
	115	[275]	LOADK    	R37 := 1.000000
	116	[275]	FORPREP  	R35 123 ; R35 -= R37; PC := 123
	117	[276]	SETTABLE 	R34 R38 K31 ; R34[R38] := 0.000000
	118	[280]	GETTABLE 	R39 R1 R38 ; R39 := R1[R38]
	119	[280]	SELF     	R39 R39 K15 ; R40 := R39; R39 := R39[0x768274d6]
	120	[280]	OP_LOADBOOL	R41 1 0 ; R41 := true
	121	[280]	OP_LOADBOOL	R42 1 0 ; R42 := true
	122	[280]	CALL     	R39 4 1 ; R39(R40,R41,R42)
	123	[275]	FORLOOP  	R35 117 ; R35 += R37; if R35 <= R36 then begin PC := 117; R38 := R35 end
	124	[282]	GETGLOBAL	R39 K0 ; R39 := _T
	125	[282]	GETTABLE 	R4 R39 K29 ; R4 := R39["EnableApostasySplinesIdx"]
	126	[285]	GETGLOBAL	R39 K32 ; R39 := 0xcfc01047
	127	[285]	MOVE     	R40 R34 ; R40 := R34
	128	[285]	CALL     	R39 2 4 ; R39,R40,R41 := R39(R40)
	129	[285]	JMP      	156 ; PC := 156
	130	[286]	GETGLOBAL	R44 K33 ; R44 := 0x42dcc9f5
	131	[286]	GETGLOBAL	R45 K34 ; R45 := 0x67652851
	132	[286]	CALL     	R45 1 2 ; R45 := R45()
	133	[286]	DIV      	R45 R45 R29 ; R45 := R45 / R29
	134	[286]	ADD      	R45 R43 R45 ; R45 := R43 + R45
	135	[286]	LOADK    	R46 := 0.000000
	136	[286]	LOADK    	R47 := 1.000000
	137	[286]	CALL     	R44 4 2 ; R44 := R44(R45,R46,R47)
	138	[286]	MOVE     	R43 R44 ; R43 := R44
	139	[287]	LE       	0 K30 R43 ; if 1.000000 > R43 then PC := 143
	140	[287]	JMP      	143 ; PC := 143
	141	[288]	SETTABLE 	R34 R42 K35 ; R34[R42] := nil
	142	[288]	JMP      	144 ; PC := 144
	143	[290]	SETTABLE 	R34 R42 R43 ; R34[R42] := R43
	144	[293]	GETTABLE 	R44 R1 R42 ; R44 := R1[R42]
	145	[293]	SELF     	R44 R44 K36 ; R45 := R44; R44 := R44[0xc2b4e597]
	146	[293]	GETGLOBAL	R46 K37 ; R46 := 0x60130201
	147	[293]	LOADK    	R47 := 40.000000
	148	[293]	LOADK    	R48 := 100.000000
	149	[293]	LOADK    	R49 := 133.000000
	150	[293]	GETGLOBAL	R50 K38 ; R50 := 0xa533083a
	151	[293]	MOVE     	R51 R43 ; R51 := R43
	152	[293]	CALL     	R50 2 2 ; R50 := R50(R51)
	153	[293]	MUL      	R50 K39 R50 ; R50 := 255.000000 * R50
	154	[293]	CALL     	R46 5 0 ; R46,... := R46(R47,R48,R49,R50)
	155	[293]	CALL     	R44 0 1 ; R44(R45,...)
	156	[285]	TFORLOOP 	R39 2 ; R42,R43 := R39(R40,R41); if R42 ~= nil then begin PC = 130; R41 := R42 end
	157	[293]	JMP      	130 ; PC := 130
	158	[306]	GETGLOBAL	R44 K40 ; R44 := 0x7b998233
	159	[306]	GETGLOBAL	R45 K0 ; R45 := _T
	160	[306]	GETTABLE 	R45 R45 K41 ; R45 := R45["curTransmission"]
	161	[306]	CALL     	R44 2 2 ; R44 := R44(R45)
	162	[306]	TEST     	R44 1 ; if R44 then PC := 180
	163	[306]	JMP      	180 ; PC := 180
	164	[307]	GETGLOBAL	R44 K0 ; R44 := _T
	165	[307]	GETTABLE 	R44 R44 K42 ; R44 := R44["TransmissionSoundInstance"]
	166	[308]	GETGLOBAL	R45 K40 ; R45 := 0x7b998233
	167	[308]	MOVE     	R46 R44 ; R46 := R44
	168	[308]	CALL     	R45 2 2 ; R45 := R45(R46)
	169	[308]	TEST     	R45 1 ; if R45 then PC := 181
	170	[308]	JMP      	181 ; PC := 181
	171	[309]	MOVE     	R45 R24 ; R45 := R24
	172	[309]	LOADK    	R46 := 1.000000
	173	[309]	SELF     	R47 R44 K43 ; R48 := R44; R47 := R44[0xdae5bcb5]
	174	[309]	CALL     	R47 2 0 ; R47,... := R47(R48)
	175	[309]	CALL     	R45 0 2 ; R45 := R45(R46,...)
	176	[309]	SUB      	R45 R17 R45 ; R45 := R17 - R45
	177	[309]	MUL      	R45 R18 R45 ; R45 := R18 * R45
	178	[309]	SUB      	R17 R17 R45 ; R17 := R17 - R45
	179	[310]	JMP      	181 ; PC := 181
	180	[312]	LOADK    	R17 := 0.000000
	181	[314]	SELF     	R45 R15 K44 ; R46 := R15; R45 := R15[0x4078bbf8]
	182	[314]	MOVE     	R47 R16 ; R47 := R16
	183	[314]	CALL     	R45 3 1 ; R45(R46,R47)
	184	[315]	GETGLOBAL	R45 K45 ; R45 := 0x5e5d349b
	185	[315]	SELF     	R45 R45 K46 ; R46 := R45; R45 := R45[0x830eea67]
	186	[315]	GETUPVAL 	R47 U1 ; R47 := U1
	187	[315]	GETTABLE 	R48 R16 K47 ; R48 := R16["x"]
	188	[315]	GETTABLE 	R49 R16 K48 ; R49 := R16["y"]
	189	[315]	GETTABLE 	R50 R16 K49 ; R50 := R16["z"]
	190	[315]	LOADK    	R51 := 0.000000
	191	[315]	CALL     	R45 7 1 ; R45(R46,R47,R48,R49,R50,R51)
	192	[316]	GETGLOBAL	R45 K45 ; R45 := 0x5e5d349b
	193	[316]	SELF     	R45 R45 K46 ; R46 := R45; R45 := R45[0x830eea67]
	194	[316]	GETUPVAL 	R47 U2 ; R47 := U2
	195	[316]	GETGLOBAL	R48 K50 ; R48 := 0x9bafffe3
	196	[316]	LOADK    	R49 := 1.000000
	197	[316]	LOADK    	R50 := 5.000000
	198	[316]	MOVE     	R51 R17 ; R51 := R17
	199	[316]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	200	[316]	LOADK    	R49 := 1.000000
	201	[316]	LOADK    	R50 := 0.000000
	202	[316]	LOADK    	R51 := 0.000000
	203	[316]	CALL     	R45 7 1 ; R45(R46,R47,R48,R49,R50,R51)
	204	[317]	GETGLOBAL	R45 K45 ; R45 := 0x5e5d349b
	205	[317]	SELF     	R45 R45 K46 ; R46 := R45; R45 := R45[0x830eea67]
	206	[317]	GETUPVAL 	R47 U3 ; R47 := U3
	207	[317]	GETGLOBAL	R48 K50 ; R48 := 0x9bafffe3
	208	[317]	LOADK    	R49 := 10.000000
	209	[317]	LOADK    	R50 := 25.000000
	210	[317]	MOVE     	R51 R17 ; R51 := R17
	211	[317]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	212	[317]	LOADK    	R49 := 5.000000
	213	[317]	LOADK    	R50 := 0.000000
	214	[317]	LOADK    	R51 := 0.000000
	215	[317]	CALL     	R45 7 1 ; R45(R46,R47,R48,R49,R50,R51)
	216	[318]	GETGLOBAL	R45 K45 ; R45 := 0x5e5d349b
	217	[318]	SELF     	R45 R45 K46 ; R46 := R45; R45 := R45[0x830eea67]
	218	[318]	GETUPVAL 	R47 U4 ; R47 := U4
	219	[318]	GETGLOBAL	R48 K50 ; R48 := 0x9bafffe3
	220	[318]	LOADK    	R49 := 1.000000
	221	[318]	LOADK    	R50 := 8.000000
	222	[318]	MOVE     	R51 R17 ; R51 := R17
	223	[318]	CALL     	R48 4 0 ; R48,... := R48(R49,R50,R51)
	224	[318]	CALL     	R45 0 1 ; R45(R46,...)
	225	[319]	LOADK    	R45 := 1.000000
	226	[319]	LEN      	R46 R1 ; R46 := # R1
	227	[319]	LOADK    	R47 := 1.000000
	228	[319]	FORPREP  	R45 234 ; R45 -= R47; PC := 234
	229	[320]	GETTABLE 	R49 R1 R48 ; R49 := R1[R48]
	230	[320]	SELF     	R49 R49 K51 ; R50 := R49; R49 := R49[0xce1fc190]
	231	[320]	MUL      	R51 R17 K52 ; R51 := R17 * 0.250000
	232	[320]	ADD      	R51 R51 K52 ; R51 := R51 + 0.250000
	233	[320]	CALL     	R49 3 1 ; R49(R50,R51)
	234	[319]	FORLOOP  	R45 229 ; R45 += R47; if R45 <= R46 then begin PC := 229; R48 := R45 end
	235	[323]	LOADK    	R49 := -1.000000
	236	[324]	MOVE     	R50 R26 ; R50 := R26
	237	[325]	LOADK    	R51 := 1.000000
	238	[325]	LEN      	R52 R3 ; R52 := # R3
	239	[325]	SUB      	R52 R52 K30 ; R52 := R52 - 1.000000
	240	[325]	LOADK    	R53 := 1.000000
	241	[325]	FORPREP  	R51 252 ; R51 -= R53; PC := 252
	242	[326]	GETGLOBAL	R55 K53 ; R55 := 0xb6489516
	243	[326]	GETTABLE 	R56 R3 R54 ; R56 := R3[R54]
	244	[326]	ADD      	R57 R54 K30 ; R57 := R54 + 1.000000
	245	[326]	GETTABLE 	R57 R3 R57 ; R57 := R3[R57]
	246	[326]	MOVE     	R58 R16 ; R58 := R16
	247	[326]	CALL     	R55 4 2 ; R55 := R55(R56,R57,R58)
	248	[327]	LT       	0 R55 R50 ; if R55 >= R50 then PC := 252
	249	[327]	JMP      	252 ; PC := 252
	250	[328]	MOVE     	R50 R55 ; R50 := R55
	251	[329]	MOVE     	R49 R54 ; R49 := R54
	252	[325]	FORLOOP  	R51 242 ; R51 += R53; if R51 <= R52 then begin PC := 242; R54 := R51 end
	253	[333]	LT       	0 K30 R4 ; if 1.000000 >= R4 then PC := 468
	254	[333]	JMP      	468 ; PC := 468
	255	[333]	GETTABLE 	R56 R2 R4 ; R56 := R2[R4]
	256	[333]	TEST     	R56 1 ; if R56 then PC := 259
	257	[333]	JMP      	259 ; PC := 259
	258	[333]	LOADK    	R56 := -1.000000
	259	[333]	LE       	0 R56 R49 ; if R56 > R49 then PC := 468
	260	[333]	JMP      	468 ; PC := 468
	261	[334]	SELF     	R56 R5 K54 ; R57 := R5; R56 := R5[0xf37943ff]
	262	[334]	CALL     	R56 2 2 ; R56 := R56(R57)
	263	[334]	TEST     	R56 1 ; if R56 then PC := 267
	264	[334]	JMP      	267 ; PC := 267
	265	[335]	SELF     	R56 R5 K55 ; R57 := R5; R56 := R5[0x383d2e7d]
	266	[335]	CALL     	R56 2 1 ; R56(R57)
	267	[338]	GETTABLE 	R56 R3 R49 ; R56 := R3[R49]
	268	[339]	ADD      	R57 R49 K30 ; R57 := R49 + 1.000000
	269	[339]	GETTABLE 	R57 R3 R57 ; R57 := R3[R57]
	270	[340]	MOVE     	R58 R27 ; R58 := R27
	271	[340]	MOVE     	R59 R19 ; R59 := R19
	272	[340]	MOVE     	R60 R56 ; R60 := R56
	273	[340]	MOVE     	R61 R57 ; R61 := R57
	274	[340]	CALL     	R58 4 1 ; R58(R59,R60,R61)
	275	[341]	GETGLOBAL	R58 K56 ; R58 := 0x7fa0b32a
	276	[341]	GETGLOBAL	R59 K57 ; R59 := 0x4fd57545
	277	[341]	MOVE     	R60 R19 ; R60 := R19
	278	[341]	MOVE     	R61 R19 ; R61 := R19
	279	[341]	CALL     	R59 3 0 ; R59,... := R59(R60,R61)
	280	[341]	CALL     	R58 0 2 ; R58 := R58(R59,...)
	281	[342]	MOVE     	R59 R27 ; R59 := R27
	282	[342]	MOVE     	R60 R19 ; R60 := R19
	283	[342]	MOVE     	R61 R16 ; R61 := R16
	284	[342]	MOVE     	R62 R56 ; R62 := R56
	285	[342]	CALL     	R59 4 1 ; R59(R60,R61,R62)
	286	[343]	MOVE     	R59 R27 ; R59 := R27
	287	[343]	MOVE     	R60 R20 ; R60 := R20
	288	[343]	MOVE     	R61 R57 ; R61 := R57
	289	[343]	MOVE     	R62 R56 ; R62 := R56
	290	[343]	CALL     	R59 4 1 ; R59(R60,R61,R62)
	291	[344]	GETGLOBAL	R59 K33 ; R59 := 0x42dcc9f5
	292	[344]	GETGLOBAL	R60 K57 ; R60 := 0x4fd57545
	293	[344]	MOVE     	R61 R19 ; R61 := R19
	294	[344]	MOVE     	R62 R20 ; R62 := R20
	295	[344]	CALL     	R60 3 2 ; R60 := R60(R61,R62)
	296	[344]	DIV      	R60 R60 R58 ; R60 := R60 / R58
	297	[344]	LOADK    	R61 := 0.000000
	298	[344]	LOADK    	R62 := 1.000000
	299	[344]	CALL     	R59 4 2 ; R59 := R59(R60,R61,R62)
	300	[345]	GETGLOBAL	R60 K58 ; R60 := 0x5db3ce80
	301	[345]	MOVE     	R61 R56 ; R61 := R56
	302	[345]	MOVE     	R62 R57 ; R62 := R57
	303	[345]	MOVE     	R63 R59 ; R63 := R59
	304	[345]	CALL     	R60 4 2 ; R60 := R60(R61,R62,R63)
	305	[347]	LT       	0 K31 R23 ; if 0.000000 >= R23 then PC := 315
	306	[347]	JMP      	315 ; PC := 315
	307	[348]	MOVE     	R61 R25 ; R61 := R25
	308	[348]	LOADK    	R62 := 0.000000
	309	[348]	GETGLOBAL	R63 K34 ; R63 := 0x67652851
	310	[348]	CALL     	R63 1 2 ; R63 := R63()
	311	[348]	SUB      	R63 R23 R63 ; R63 := R23 - R63
	312	[348]	CALL     	R61 3 2 ; R61 := R61(R62,R63)
	313	[348]	MOVE     	R23 R61 ; R23 := R61
	314	[348]	JMP      	403 ; PC := 403
	315	[349]	LT       	0 R23 K31 ; if R23 >= 0.000000 then PC := 325
	316	[349]	JMP      	325 ; PC := 325
	317	[350]	MOVE     	R61 R24 ; R61 := R24
	318	[350]	LOADK    	R62 := 0.000000
	319	[350]	GETGLOBAL	R63 K34 ; R63 := 0x67652851
	320	[350]	CALL     	R63 1 2 ; R63 := R63()
	321	[350]	ADD      	R63 R23 R63 ; R63 := R23 + R63
	322	[350]	CALL     	R61 3 2 ; R61 := R61(R62,R63)
	323	[350]	MOVE     	R23 R61 ; R23 := R61
	324	[350]	JMP      	403 ; PC := 403
	325	[352]	MOVE     	R61 R27 ; R61 := R27
	326	[352]	MOVE     	R62 R19 ; R62 := R19
	327	[352]	MOVE     	R63 R56 ; R63 := R56
	328	[352]	MOVE     	R64 R57 ; R64 := R57
	329	[352]	CALL     	R61 4 1 ; R61(R62,R63,R64)
	330	[353]	MOVE     	R61 R27 ; R61 := R27
	331	[353]	MOVE     	R62 R20 ; R62 := R20
	332	[353]	MOVE     	R63 R57 ; R63 := R57
	333	[353]	ADD      	R64 R49 K59 ; R64 := R49 + 2.000000
	334	[353]	GETTABLE 	R64 R3 R64 ; R64 := R3[R64]
	335	[353]	TEST     	R64 1 ; if R64 then PC := 338
	336	[353]	JMP      	338 ; PC := 338
	337	[353]	MOVE     	R64 R56 ; R64 := R56
	338	[353]	CALL     	R61 4 1 ; R61(R62,R63,R64)
	339	[354]	MOVE     	R61 R28 ; R61 := R28
	340	[354]	MOVE     	R62 R19 ; R62 := R19
	341	[354]	CALL     	R61 2 1 ; R61(R62)
	342	[355]	MOVE     	R61 R28 ; R61 := R28
	343	[355]	MOVE     	R62 R20 ; R62 := R20
	344	[355]	CALL     	R61 2 1 ; R61(R62)
	345	[357]	OP_LOADBOOL	R61 0 0 ; R61 := false
	346	[359]	SELF     	R62 R5 K60 ; R63 := R5; R62 := R5[0x1f420a3a]
	347	[359]	MOVE     	R64 R57 ; R64 := R57
	348	[359]	CALL     	R62 3 2 ; R62 := R62(R63,R64)
	349	[359]	LT       	0 R62 R33 ; if R62 >= R33 then PC := 358
	350	[359]	JMP      	358 ; PC := 358
	351	[359]	GETGLOBAL	R62 K57 ; R62 := 0x4fd57545
	352	[359]	MOVE     	R63 R19 ; R63 := R19
	353	[359]	MOVE     	R64 R20 ; R64 := R20
	354	[359]	CALL     	R62 3 2 ; R62 := R62(R63,R64)
	355	[359]	LT       	0 R62 R32 ; if R62 >= R32 then PC := 358
	356	[359]	JMP      	358 ; PC := 358
	357	[360]	OP_LOADBOOL	R61 1 0 ; R61 := true
	358	[363]	TEST     	R61 1 ; if R61 then PC := 384
	359	[363]	JMP      	384 ; PC := 384
	360	[364]	MOVE     	R62 R27 ; R62 := R27
	361	[364]	MOVE     	R63 R20 ; R63 := R20
	362	[364]	SUB      	R64 R49 K30 ; R64 := R49 - 1.000000
	363	[364]	GETTABLE 	R64 R3 R64 ; R64 := R3[R64]
	364	[364]	TEST     	R64 1 ; if R64 then PC := 367
	365	[364]	JMP      	367 ; PC := 367
	366	[364]	MOVE     	R64 R56 ; R64 := R56
	367	[364]	MOVE     	R65 R56 ; R65 := R56
	368	[364]	CALL     	R62 4 1 ; R62(R63,R64,R65)
	369	[365]	MOVE     	R62 R28 ; R62 := R28
	370	[365]	MOVE     	R63 R20 ; R63 := R20
	371	[365]	CALL     	R62 2 1 ; R62(R63)
	372	[367]	SELF     	R62 R5 K60 ; R63 := R5; R62 := R5[0x1f420a3a]
	373	[367]	MOVE     	R64 R56 ; R64 := R56
	374	[367]	CALL     	R62 3 2 ; R62 := R62(R63,R64)
	375	[367]	LT       	0 R62 R33 ; if R62 >= R33 then PC := 384
	376	[367]	JMP      	384 ; PC := 384
	377	[367]	GETGLOBAL	R62 K57 ; R62 := 0x4fd57545
	378	[367]	MOVE     	R63 R19 ; R63 := R19
	379	[367]	MOVE     	R64 R20 ; R64 := R20
	380	[367]	CALL     	R62 3 2 ; R62 := R62(R63,R64)
	381	[367]	LT       	0 R62 R32 ; if R62 >= R32 then PC := 384
	382	[367]	JMP      	384 ; PC := 384
	383	[368]	OP_LOADBOOL	R61 1 0 ; R61 := true
	384	[372]	SELF     	R62 R6 K54 ; R63 := R6; R62 := R6[0xf37943ff]
	385	[372]	CALL     	R62 2 2 ; R62 := R62(R63)
	386	[373]	TEST     	R61 0 ; if not R61 then PC := 395
	387	[373]	JMP      	395 ; PC := 395
	388	[373]	TEST     	R62 1 ; if R62 then PC := 395
	389	[373]	JMP      	395 ; PC := 395
	390	[374]	MOVE     	R23 R31 ; R23 := R31
	391	[375]	SELF     	R63 R6 K61 ; R64 := R6; R63 := R6[0x8eb2112d]
	392	[375]	LOADK    	R65 K62 ; R65 := "Enable"
	393	[375]	CALL     	R63 3 1 ; R63(R64,R65)
	394	[375]	JMP      	403 ; PC := 403
	395	[376]	TEST     	R61 1 ; if R61 then PC := 403
	396	[376]	JMP      	403 ; PC := 403
	397	[376]	TEST     	R62 0 ; if not R62 then PC := 403
	398	[376]	JMP      	403 ; PC := 403
	399	[377]	UNM      	R23 R31 ; R23 := ^ R31
	400	[378]	SELF     	R63 R6 K61 ; R64 := R6; R63 := R6[0x8eb2112d]
	401	[378]	LOADK    	R65 K63 ; R65 := "Disable"
	402	[378]	CALL     	R63 3 1 ; R63(R64,R65)
	403	[383]	LE       	0 K30 R21 ; if 1.000000 > R21 then PC := 414
	404	[383]	JMP      	414 ; PC := 414
	405	[383]	SELF     	R63 R5 K60 ; R64 := R5; R63 := R5[0x1f420a3a]
	406	[383]	MOVE     	R65 R60 ; R65 := R60
	407	[383]	CALL     	R63 3 2 ; R63 := R63(R64,R65)
	408	[383]	LT       	0 R30 R63 ; if R30 >= R63 then PC := 414
	409	[383]	JMP      	414 ; PC := 414
	410	[384]	SELF     	R63 R5 K44 ; R64 := R5; R63 := R5[0x4078bbf8]
	411	[384]	MOVE     	R65 R22 ; R65 := R22
	412	[384]	CALL     	R63 3 1 ; R63(R64,R65)
	413	[385]	LOADK    	R21 := 0.000000
	414	[388]	LT       	0 R21 K30 ; if R21 >= 1.000000 then PC := 449
	415	[388]	JMP      	449 ; PC := 449
	416	[389]	MOVE     	R63 R24 ; R63 := R24
	417	[389]	LOADK    	R64 := 1.000000
	418	[389]	GETGLOBAL	R65 K34 ; R65 := 0x67652851
	419	[389]	CALL     	R65 1 2 ; R65 := R65()
	420	[389]	DIV      	R65 R65 K64 ; R65 := R65 / 0.200000
	421	[389]	ADD      	R65 R21 R65 ; R65 := R21 + R65
	422	[389]	CALL     	R63 3 2 ; R63 := R63(R64,R65)
	423	[389]	MOVE     	R21 R63 ; R21 := R63
	424	[390]	SELF     	R63 R5 K65 ; R64 := R5; R63 := R5[0x589ef1c1]
	425	[390]	GETGLOBAL	R65 K58 ; R65 := 0x5db3ce80
	426	[390]	MOVE     	R66 R22 ; R66 := R22
	427	[390]	MOVE     	R67 R60 ; R67 := R60
	428	[390]	MOVE     	R68 R21 ; R68 := R21
	429	[390]	CALL     	R65 4 2 ; R65 := R65(R66,R67,R68)
	430	[390]	GETGLOBAL	R66 K11 ; R66 := ZERO_ROTATION
	431	[390]	CALL     	R63 4 1 ; R63(R64,R65,R66)
	432	[391]	GETUPVAL 	R63 U5 ; R63 := U5
	433	[391]	TEST     	R63 0 ; if not R63 then PC := 453
	434	[391]	JMP      	453 ; PC := 453
	435	[392]	GETGLOBAL	R63 K7 ; R63 := 0x89326c93
	436	[392]	SELF     	R63 R63 K66 ; R64 := R63; R63 := R63[0x1cecd8f9]
	437	[392]	MOVE     	R65 R16 ; R65 := R16
	438	[392]	SELF     	R66 R5 K10 ; R67 := R5; R66 := R5[0xd1586535]
	439	[392]	CALL     	R66 2 2 ; R66 := R66(R67)
	440	[392]	GETGLOBAL	R67 K37 ; R67 := 0x60130201
	441	[392]	LOADK    	R68 := 255.000000
	442	[392]	LOADK    	R69 := 0.000000
	443	[392]	LOADK    	R70 := 255.000000
	444	[392]	LOADK    	R71 := 255.000000
	445	[392]	CALL     	R67 5 2 ; R67 := R67(R68,R69,R70,R71)
	446	[392]	LOADK    	R68 := 0.000000
	447	[392]	CALL     	R63 6 1 ; R63(R64,R65,R66,R67,R68)
	448	[393]	JMP      	453 ; PC := 453
	449	[395]	SELF     	R63 R5 K65 ; R64 := R5; R63 := R5[0x589ef1c1]
	450	[395]	MOVE     	R65 R60 ; R65 := R60
	451	[395]	GETGLOBAL	R66 K11 ; R66 := ZERO_ROTATION
	452	[395]	CALL     	R63 4 1 ; R63(R64,R65,R66)
	453	[398]	GETUPVAL 	R63 U5 ; R63 := U5
	454	[398]	TEST     	R63 0 ; if not R63 then PC := 468
	455	[398]	JMP      	468 ; PC := 468
	456	[399]	GETGLOBAL	R63 K7 ; R63 := 0x89326c93
	457	[399]	SELF     	R63 R63 K66 ; R64 := R63; R63 := R63[0x1cecd8f9]
	458	[399]	MOVE     	R65 R16 ; R65 := R16
	459	[399]	MOVE     	R66 R60 ; R66 := R60
	460	[399]	GETGLOBAL	R67 K37 ; R67 := 0x60130201
	461	[399]	LOADK    	R68 := 255.000000
	462	[399]	LOADK    	R69 := 255.000000
	463	[399]	LOADK    	R70 := 255.000000
	464	[399]	LOADK    	R71 := 255.000000
	465	[399]	CALL     	R67 5 2 ; R67 := R67(R68,R69,R70,R71)
	466	[399]	LOADK    	R68 := 0.000000
	467	[399]	CALL     	R63 6 1 ; R63(R64,R65,R66,R67,R68)
	468	[403]	GETGLOBAL	R63 K4 ; R63 := 0xcbd666e1
	469	[403]	LOADK    	R64 := 0.000000
	470	[403]	CALL     	R63 2 1 ; R63(R64)
	471	[404]	GETGLOBAL	R63 K7 ; R63 := 0x89326c93
	472	[404]	SELF     	R63 R63 K16 ; R64 := R63; R63 := R63[0x78298275]
	473	[404]	CALL     	R63 2 2 ; R63 := R63(R64)
	474	[404]	MOVE     	R15 R63 ; R15 := R63
	475	[405]	GETGLOBAL	R63 K40 ; R63 := 0x7b998233
	476	[405]	MOVE     	R64 R15 ; R64 := R15
	477	[405]	CALL     	R63 2 2 ; R63 := R63(R64)
	478	[405]	TEST     	R63 0 ; if not R63 then PC := 98
	479	[405]	JMP      	98 ; PC := 98
	480	[406]	GETGLOBAL	R63 K4 ; R63 := 0xcbd666e1
	481	[406]	LOADK    	R64 := 0.000000
	482	[406]	CALL     	R63 2 1 ; R63(R64)
	483	[407]	GETGLOBAL	R63 K7 ; R63 := 0x89326c93
	484	[407]	SELF     	R63 R63 K16 ; R64 := R63; R63 := R63[0x78298275]
	485	[407]	CALL     	R63 2 2 ; R63 := R63(R64)
	486	[407]	MOVE     	R15 R63 ; R15 := R63
	487	[407]	JMP      	475 ; PC := 475
	488	[408]	JMP      	98 ; PC := 98
	489	[411]	GETGLOBAL	R63 K40 ; R63 := 0x7b998233
	490	[411]	MOVE     	R64 R6 ; R64 := R6
	491	[411]	CALL     	R63 2 2 ; R63 := R63(R64)
	492	[411]	TEST     	R63 1 ; if R63 then PC := 496
	493	[411]	JMP      	496 ; PC := 496
	494	[412]	SELF     	R63 R6 K67 ; R64 := R6; R63 := R6[0xf4e253b6]
	495	[412]	CALL     	R63 2 1 ; R63(R64)
	496	[415]	GETGLOBAL	R63 K40 ; R63 := 0x7b998233
	497	[415]	MOVE     	R64 R5 ; R64 := R5
	498	[415]	CALL     	R63 2 2 ; R63 := R63(R64)
	499	[415]	TEST     	R63 1 ; if R63 then PC := 503
	500	[415]	JMP      	503 ; PC := 503
	501	[416]	SELF     	R63 R5 K67 ; R64 := R5; R63 := R5[0xf4e253b6]
	502	[416]	CALL     	R63 2 1 ; R63(R64)
	503	[419]	LOADK    	R63 := 0.000000
	504	[420]	LT       	0 R63 K30 ; if R63 >= 1.000000 then PC := 535
	505	[420]	JMP      	535 ; PC := 535
	506	[421]	GETGLOBAL	R64 K4 ; R64 := 0xcbd666e1
	507	[421]	LOADK    	R65 := 0.000000
	508	[421]	CALL     	R64 2 1 ; R64(R65)
	509	[422]	GETGLOBAL	R64 K34 ; R64 := 0x67652851
	510	[422]	CALL     	R64 1 2 ; R64 := R64()
	511	[422]	ADD      	R63 R63 R64 ; R63 := R63 + R64
	512	[424]	GETGLOBAL	R64 K45 ; R64 := 0x5e5d349b
	513	[424]	SELF     	R64 R64 K46 ; R65 := R64; R64 := R64[0x830eea67]
	514	[424]	GETUPVAL 	R66 U3 ; R66 := U3
	515	[424]	GETGLOBAL	R67 K50 ; R67 := 0x9bafffe3
	516	[424]	LOADK    	R68 := 10.000000
	517	[424]	LOADK    	R69 := 25.000000
	518	[424]	MOVE     	R70 R17 ; R70 := R17
	519	[424]	CALL     	R67 4 2 ; R67 := R67(R68,R69,R70)
	520	[424]	GETGLOBAL	R68 K50 ; R68 := 0x9bafffe3
	521	[424]	LOADK    	R69 := -5.000000
	522	[424]	LOADK    	R70 := -100.000000
	523	[424]	GETGLOBAL	R71 K33 ; R71 := 0x42dcc9f5
	524	[424]	GETGLOBAL	R72 K38 ; R72 := 0xa533083a
	525	[424]	MOVE     	R73 R63 ; R73 := R63
	526	[424]	CALL     	R72 2 2 ; R72 := R72(R73)
	527	[424]	LOADK    	R73 := 0.000000
	528	[424]	LOADK    	R74 := 1.000000
	529	[424]	CALL     	R71 4 0 ; R71,... := R71(R72,R73,R74)
	530	[424]	CALL     	R68 0 2 ; R68 := R68(R69,...)
	531	[424]	LOADK    	R69 := 0.000000
	532	[424]	LOADK    	R70 := 0.000000
	533	[424]	CALL     	R64 7 1 ; R64(R65,R66,R67,R68,R69,R70)
	534	[424]	JMP      	504 ; PC := 504
	535	[427]	LEN      	R64 R1 ; R64 := # R1
	536	[427]	LOADK    	R65 := 1.000000
	537	[427]	LOADK    	R66 := -1.000000
	538	[427]	FORPREP  	R64 542 ; R64 -= R66; PC := 542
	539	[428]	GETTABLE 	R68 R1 R67 ; R68 := R1[R67]
	540	[428]	SELF     	R68 R68 K68 ; R69 := R68; R68 := R68[0xa2880940]
	541	[428]	CALL     	R68 2 1 ; R68(R69)
	542	[427]	FORLOOP  	R64 539 ; R64 += R66; if R64 <= R65 then begin PC := 539; R67 := R64 end
	543	[430]	RETURN   	R0 1 ; return 

function #5 <?:432,488> (188 instructions, 752 bytes at 00000160FF9D2080)
1 param, 29 slots, 0 upvalues, 0 locals, 24 constants, 0 functions
	1	[434]	GETGLOBAL	R1 K0 ; R1 := 0xcbd666e1
	2	[434]	LOADK    	R2 := 0.000000
	3	[434]	CALL     	R1 2 1 ; R1(R2)
	4	[435]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	5	[435]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xfb64e76c]
	6	[435]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[435]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xa534c3ac]
	8	[435]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[438]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	10	[438]	MOVE     	R3 R0 ; R3 := R0
	11	[438]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[438]	TEST     	R2 1 ; if R2 then PC := 18
	13	[438]	JMP      	18 ; PC := 18
	14	[438]	SELF     	R2 R0 K5 ; R3 := R0; R2 := R0[0x449c4562]
	15	[438]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[438]	TEST     	R2 1 ; if R2 then PC := 27
	17	[438]	JMP      	27 ; PC := 27
	18	[439]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	19	[439]	MOVE     	R3 R1 ; R3 := R1
	20	[439]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[439]	TEST     	R2 1 ; if R2 then PC := 31
	22	[439]	JMP      	31 ; PC := 31
	23	[439]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0x449c4562]
	24	[439]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[439]	TEST     	R2 0 ; if not R2 then PC := 31
	26	[439]	JMP      	31 ; PC := 31
	27	[440]	GETGLOBAL	R2 K0 ; R2 := 0xcbd666e1
	28	[440]	LOADK    	R3 := 0.000000
	29	[440]	CALL     	R2 2 1 ; R2(R3)
	30	[440]	JMP      	9 ; PC := 9
	31	[443]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	32	[443]	MOVE     	R3 R0 ; R3 := R0
	33	[443]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[443]	TEST     	R2 1 ; if R2 then PC := 41
	35	[443]	JMP      	41 ; PC := 41
	36	[443]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	37	[443]	MOVE     	R3 R1 ; R3 := R1
	38	[443]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[443]	TEST     	R2 0 ; if not R2 then PC := 42
	40	[443]	JMP      	42 ; PC := 42
	41	[444]	RETURN   	R0 1 ; return 
	42	[447]	GETGLOBAL	R2 K6 ; R2 := 0x0469f296
	43	[447]	LOADK    	R3 K7 ; R3 := "APOSTASY"
	44	[447]	CALL     	R2 2 2 ; R2 := R2(R3)
	45	[448]	LOADNIL  	R3 R3 ; R3 := nil
	46	[449]	NEWTABLE 	R4 0 0 ; R4 := {}
	47	[450]	NEWTABLE 	R5 0 0 ; R5 := {}
	48	[453]	GETGLOBAL	R6 K1 ; R6 := 0x89326c93
	49	[453]	SELF     	R6 R6 K8 ; R7 := R6; R6 := R6[0x46a0ebf5]
	50	[453]	GETGLOBAL	R8 K6 ; R8 := 0x0469f296
	51	[453]	LOADK    	R9 K9 ; R9 := "VoidOperatorPathA2"
	52	[453]	CALL     	R8 2 0 ; R8,... := R8(R9)
	53	[453]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	54	[454]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	55	[454]	MOVE     	R8 R6 ; R8 := R6
	56	[454]	CALL     	R7 2 2 ; R7 := R7(R8)
	57	[454]	TEST     	R7 1 ; if R7 then PC := 62
	58	[454]	JMP      	62 ; PC := 62
	59	[455]	SELF     	R7 R6 K10 ; R8 := R6; R7 := R6[0xd1586535]
	60	[455]	CALL     	R7 2 2 ; R7 := R7(R8)
	61	[455]	MOVE     	R3 R7 ; R3 := R7
	62	[457]	SELF     	R7 R1 K11 ; R8 := R1; R7 := R1[0xde321e6f]
	63	[457]	CALL     	R7 2 2 ; R7 := R7(R8)
	64	[457]	SELF     	R7 R7 K12 ; R8 := R7; R7 := R7[0x2676deee]
	65	[457]	CALL     	R7 2 2 ; R7 := R7(R8)
	66	[458]	GETGLOBAL	R8 K4 ; R8 := 0x7b998233
	67	[458]	MOVE     	R9 R7 ; R9 := R7
	68	[458]	CALL     	R8 2 2 ; R8 := R8(R9)
	69	[458]	TEST     	R8 1 ; if R8 then PC := 98
	70	[458]	JMP      	98 ; PC := 98
	71	[458]	SELF     	R8 R7 K13 ; R9 := R7; R8 := R7[0xf2deaf69]
	72	[458]	GETGLOBAL	R10 K14 ; R10 := gLotusNpcAvatarType
	73	[458]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	74	[458]	TEST     	R8 0 ; if not R8 then PC := 98
	75	[458]	JMP      	98 ; PC := 98
	76	[458]	GETGLOBAL	R8 K4 ; R8 := 0x7b998233
	77	[458]	SELF     	R9 R7 K15 ; R10 := R7; R9 := R7[0xfa9e477f]
	78	[458]	CALL     	R9 2 0 ; R9,... := R9(R10)
	79	[458]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	80	[458]	TEST     	R8 1 ; if R8 then PC := 98
	81	[458]	JMP      	98 ; PC := 98
	82	[459]	GETGLOBAL	R8 K16 ; R8 := 0x33bdd652
	83	[459]	GETTABLE 	R8 R8 K17 ; R8 := R8[0x23d5322f]
	84	[459]	MOVE     	R9 R5 ; R9 := R5
	85	[459]	SELF     	R10 R7 K15 ; R11 := R7; R10 := R7[0xfa9e477f]
	86	[459]	CALL     	R10 2 0 ; R10,... := R10(R11)
	87	[459]	CALL     	R8 0 1 ; R8(R9,...)
	88	[460]	GETGLOBAL	R8 K4 ; R8 := 0x7b998233
	89	[460]	MOVE     	R9 R3 ; R9 := R3
	90	[460]	CALL     	R8 2 2 ; R8 := R8(R9)
	91	[460]	TEST     	R8 1 ; if R8 then PC := 98
	92	[460]	JMP      	98 ; PC := 98
	93	[461]	GETGLOBAL	R8 K16 ; R8 := 0x33bdd652
	94	[461]	GETTABLE 	R8 R8 K17 ; R8 := R8[0x23d5322f]
	95	[461]	MOVE     	R9 R4 ; R9 := R4
	96	[461]	MOVE     	R10 R7 ; R10 := R7
	97	[461]	CALL     	R8 3 1 ; R8(R9,R10)
	98	[464]	GETGLOBAL	R8 K1 ; R8 := 0x89326c93
	99	[464]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0x7f8e810c]
	100	[464]	GETGLOBAL	R10 K14 ; R10 := gLotusNpcAvatarType
	101	[464]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	102	[465]	GETGLOBAL	R9 K19 ; R9 := 0xc8802016
	103	[465]	MOVE     	R10 R8 ; R10 := R8
	104	[465]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	105	[465]	JMP      	141 ; PC := 141
	106	[466]	GETGLOBAL	R14 K4 ; R14 := 0x7b998233
	107	[466]	MOVE     	R15 R13 ; R15 := R13
	108	[466]	CALL     	R14 2 2 ; R14 := R14(R15)
	109	[466]	TEST     	R14 1 ; if R14 then PC := 141
	110	[466]	JMP      	141 ; PC := 141
	111	[466]	GETGLOBAL	R14 K4 ; R14 := 0x7b998233
	112	[466]	SELF     	R15 R13 K15 ; R16 := R13; R15 := R13[0xfa9e477f]
	113	[466]	CALL     	R15 2 0 ; R15,... := R15(R16)
	114	[466]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	115	[466]	TEST     	R14 1 ; if R14 then PC := 141
	116	[466]	JMP      	141 ; PC := 141
	117	[466]	SELF     	R14 R13 K20 ; R15 := R13; R14 := R13[0xe4b9db64]
	118	[466]	CALL     	R14 2 2 ; R14 := R14(R15)
	119	[466]	EQ       	1 R14 R1 ; if R14 == R1 then PC := 125
	120	[466]	JMP      	125 ; PC := 125
	121	[466]	SELF     	R14 R13 K20 ; R15 := R13; R14 := R13[0xe4b9db64]
	122	[466]	CALL     	R14 2 2 ; R14 := R14(R15)
	123	[466]	EQ       	0 R14 R0 ; if R14 ~= R0 then PC := 141
	124	[466]	JMP      	141 ; PC := 141
	125	[467]	GETGLOBAL	R14 K16 ; R14 := 0x33bdd652
	126	[467]	GETTABLE 	R14 R14 K17 ; R14 := R14[0x23d5322f]
	127	[467]	MOVE     	R15 R5 ; R15 := R5
	128	[467]	SELF     	R16 R13 K15 ; R17 := R13; R16 := R13[0xfa9e477f]
	129	[467]	CALL     	R16 2 0 ; R16,... := R16(R17)
	130	[467]	CALL     	R14 0 1 ; R14(R15,...)
	131	[468]	GETGLOBAL	R14 K4 ; R14 := 0x7b998233
	132	[468]	MOVE     	R15 R3 ; R15 := R3
	133	[468]	CALL     	R14 2 2 ; R14 := R14(R15)
	134	[468]	TEST     	R14 1 ; if R14 then PC := 141
	135	[468]	JMP      	141 ; PC := 141
	136	[469]	GETGLOBAL	R14 K16 ; R14 := 0x33bdd652
	137	[469]	GETTABLE 	R14 R14 K17 ; R14 := R14[0x23d5322f]
	138	[469]	MOVE     	R15 R4 ; R15 := R4
	139	[469]	MOVE     	R16 R13 ; R16 := R13
	140	[469]	CALL     	R14 3 1 ; R14(R15,R16)
	141	[465]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 106; R11 := R12 end
	142	[471]	JMP      	106 ; PC := 106
	143	[474]	GETGLOBAL	R14 K4 ; R14 := 0x7b998233
	144	[474]	MOVE     	R15 R0 ; R15 := R0
	145	[474]	CALL     	R14 2 2 ; R14 := R14(R15)
	146	[474]	TEST     	R14 1 ; if R14 then PC := 188
	147	[474]	JMP      	188 ; PC := 188
	148	[474]	GETGLOBAL	R14 K4 ; R14 := 0x7b998233
	149	[474]	MOVE     	R15 R1 ; R15 := R1
	150	[474]	CALL     	R14 2 2 ; R14 := R14(R15)
	151	[474]	TEST     	R14 1 ; if R14 then PC := 188
	152	[474]	JMP      	188 ; PC := 188
	153	[475]	GETGLOBAL	R14 K19 ; R14 := 0xc8802016
	154	[475]	MOVE     	R15 R5 ; R15 := R5
	155	[475]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	156	[475]	JMP      	166 ; PC := 166
	157	[476]	GETGLOBAL	R19 K4 ; R19 := 0x7b998233
	158	[476]	MOVE     	R20 R18 ; R20 := R18
	159	[476]	CALL     	R19 2 2 ; R19 := R19(R20)
	160	[476]	TEST     	R19 1 ; if R19 then PC := 166
	161	[476]	JMP      	166 ; PC := 166
	162	[477]	SELF     	R19 R18 K21 ; R20 := R18; R19 := R18[0x55e9211c]
	163	[477]	OP_LOADBOOL	R21 1 0 ; R21 := true
	164	[477]	MOVE     	R22 R2 ; R22 := R2
	165	[477]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	166	[475]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 157; R16 := R17 end
	167	[478]	JMP      	157 ; PC := 157
	168	[481]	GETGLOBAL	R19 K19 ; R19 := 0xc8802016
	169	[481]	MOVE     	R20 R4 ; R20 := R4
	170	[481]	CALL     	R19 2 4 ; R19,R20,R21 := R19(R20)
	171	[481]	JMP      	182 ; PC := 182
	172	[482]	GETGLOBAL	R24 K4 ; R24 := 0x7b998233
	173	[482]	MOVE     	R25 R23 ; R25 := R23
	174	[482]	CALL     	R24 2 2 ; R24 := R24(R25)
	175	[482]	TEST     	R24 1 ; if R24 then PC := 182
	176	[482]	JMP      	182 ; PC := 182
	177	[483]	SELF     	R24 R23 K22 ; R25 := R23; R24 := R23[0x589ef1c1]
	178	[483]	MOVE     	R26 R3 ; R26 := R3
	179	[483]	SELF     	R27 R23 K23 ; R28 := R23; R27 := R23[0xcb3851b8]
	180	[483]	CALL     	R27 2 0 ; R27,... := R27(R28)
	181	[483]	CALL     	R24 0 1 ; R24(R25,...)
	182	[481]	TFORLOOP 	R19 2 ; R22,R23 := R19(R20,R21); if R22 ~= nil then begin PC = 172; R21 := R22 end
	183	[484]	JMP      	172 ; PC := 172
	184	[486]	GETGLOBAL	R24 K0 ; R24 := 0xcbd666e1
	185	[486]	LOADK    	R25 := 0.000000
	186	[486]	CALL     	R24 2 1 ; R24(R25)
	187	[486]	JMP      	143 ; PC := 143
	188	[488]	RETURN   	R0 1 ; return 

function #6 <?:490,593> (288 instructions, 1152 bytes at 00000160FD855710)
1 param, 22 slots, 4 upvalues, 0 locals, 74 constants, 0 functions
	1	[491]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[491]	MOVE     	R2 R0 ; R2 := R0
	3	[491]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[491]	TEST     	R1 1 ; if R1 then PC := 16
	5	[491]	JMP      	16 ; PC := 16
	6	[491]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xf2deaf69]
	7	[491]	GETGLOBAL	R3 K2 ; R3 := gTennoAvatarType
	8	[491]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	9	[491]	TEST     	R1 0 ; if not R1 then PC := 16
	10	[491]	JMP      	16 ; PC := 16
	11	[491]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xf2deaf69]
	12	[491]	GETGLOBAL	R3 K3 ; R3 := gLotusOperatorAvatarType
	13	[491]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	14	[491]	TEST     	R1 0 ; if not R1 then PC := 17
	15	[491]	JMP      	17 ; PC := 17
	16	[492]	RETURN   	R0 1 ; return 
	17	[495]	GETGLOBAL	R1 K4 ; R1 := 0xbe190284
	18	[495]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xef893aec]
	19	[495]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[496]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	21	[496]	MOVE     	R3 R1 ; R3 := R1
	22	[496]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[496]	TEST     	R2 1 ; if R2 then PC := 31
	24	[496]	JMP      	31 ; PC := 31
	25	[496]	GETTABLE 	R2 R1 K6 ; R2 := R1["goalTag"]
	26	[496]	GETGLOBAL	R3 K7 ; R3 := 0x0469f296
	27	[496]	LOADK    	R4 K8 ; R4 := "Apostasy"
	28	[496]	CALL     	R3 2 2 ; R3 := R3(R4)
	29	[496]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 32
	30	[496]	JMP      	32 ; PC := 32
	31	[496]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 32
	32	[496]	OP_LOADBOOL	R2 1 0 ; R2 := true
	33	[498]	TEST     	R2 1 ; if R2 then PC := 47
	34	[498]	JMP      	47 ; PC := 47
	35	[499]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	36	[499]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0xabf50b1c]
	37	[499]	CALL     	R3 2 2 ; R3 := R3(R4)
	38	[499]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0x543a0b5e]
	39	[499]	OP_LOADBOOL	R5 0 0 ; R5 := false
	40	[499]	CALL     	R3 3 1 ; R3(R4,R5)
	41	[500]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	42	[500]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0xabf50b1c]
	43	[500]	CALL     	R3 2 2 ; R3 := R3(R4)
	44	[500]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0xff185f7e]
	45	[500]	GETGLOBAL	R5 K12 ; R5 := EMPTY_SYMBOL
	46	[500]	CALL     	R3 3 1 ; R3(R4,R5)
	47	[503]	GETGLOBAL	R3 K13 ; R3 := 0x89326c93
	48	[503]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0x46a0ebf5]
	49	[503]	GETGLOBAL	R5 K7 ; R5 := 0x0469f296
	50	[503]	LOADK    	R6 K15 ; R6 := "ApostasyFallTeleport"
	51	[503]	CALL     	R5 2 0 ; R5,... := R5(R6)
	52	[503]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	53	[504]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	54	[504]	MOVE     	R5 R3 ; R5 := R3
	55	[504]	CALL     	R4 2 2 ; R4 := R4(R5)
	56	[504]	TEST     	R4 0 ; if not R4 then PC := 59
	57	[504]	JMP      	59 ; PC := 59
	58	[505]	RETURN   	R0 1 ; return 
	59	[508]	LOADK    	R4 := 0.000000
	60	[509]	GETGLOBAL	R5 K13 ; R5 := 0x89326c93
	61	[509]	SELF     	R5 R5 K16 ; R6 := R5; R5 := R5[0x7c1a0374]
	62	[509]	CALL     	R5 2 2 ; R5 := R5(R6)
	63	[510]	LT       	0 R4 K17 ; if R4 >= 1.000000 then PC := 83
	64	[510]	JMP      	83 ; PC := 83
	65	[511]	GETGLOBAL	R6 K18 ; R6 := 0xcbd666e1
	66	[511]	LOADK    	R7 := 0.000000
	67	[511]	CALL     	R6 2 1 ; R6(R7)
	68	[512]	GETGLOBAL	R6 K19 ; R6 := 0x67652851
	69	[512]	CALL     	R6 1 2 ; R6 := R6()
	70	[512]	GETUPVAL 	R7 U0 ; R7 := U0
	71	[512]	DIV      	R6 R6 R7 ; R6 := R6 / R7
	72	[512]	ADD      	R4 R4 R6 ; R4 := R4 + R6
	73	[513]	SELF     	R6 R5 K20 ; R7 := R5; R6 := R5[0xb6df3e50]
	74	[513]	GETGLOBAL	R8 K21 ; R8 := 0x42dcc9f5
	75	[513]	GETGLOBAL	R9 K22 ; R9 := 0xa533083a
	76	[513]	MOVE     	R10 R4 ; R10 := R4
	77	[513]	CALL     	R9 2 2 ; R9 := R9(R10)
	78	[513]	LOADK    	R10 := 0.000000
	79	[513]	LOADK    	R11 := 1.000000
	80	[513]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	81	[513]	CALL     	R6 0 1 ; R6(R7,...)
	82	[513]	JMP      	63 ; PC := 63
	83	[515]	SELF     	R6 R5 K20 ; R7 := R5; R6 := R5[0xb6df3e50]
	84	[515]	LOADK    	R8 := 1.000000
	85	[515]	CALL     	R6 3 1 ; R6(R7,R8)
	86	[517]	GETGLOBAL	R6 K23 ; R6 := _T
	87	[517]	SETTABLE 	R6 K24 K25 ; R6["HideTransferenceFx"] := true
	88	[518]	SELF     	R6 R0 K26 ; R7 := R0; R6 := R0[0x18f03c5d]
	89	[518]	CALL     	R6 2 1 ; R6(R7)
	90	[519]	GETGLOBAL	R6 K13 ; R6 := 0x89326c93
	91	[519]	SELF     	R6 R6 K27 ; R7 := R6; R6 := R6[0x78298275]
	92	[519]	CALL     	R6 2 2 ; R6 := R6(R7)
	93	[520]	SELF     	R7 R6 K1 ; R8 := R6; R7 := R6[0xf2deaf69]
	94	[520]	GETGLOBAL	R9 K3 ; R9 := gLotusOperatorAvatarType
	95	[520]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	96	[520]	TEST     	R7 1 ; if R7 then PC := 106
	97	[520]	JMP      	106 ; PC := 106
	98	[521]	GETGLOBAL	R7 K18 ; R7 := 0xcbd666e1
	99	[521]	LOADK    	R8 := 0.000000
	100	[521]	CALL     	R7 2 1 ; R7(R8)
	101	[522]	GETGLOBAL	R7 K13 ; R7 := 0x89326c93
	102	[522]	SELF     	R7 R7 K27 ; R8 := R7; R7 := R7[0x78298275]
	103	[522]	CALL     	R7 2 2 ; R7 := R7(R8)
	104	[522]	MOVE     	R6 R7 ; R6 := R7
	105	[522]	JMP      	93 ; PC := 93
	106	[525]	TEST     	R2 1 ; if R2 then PC := 116
	107	[525]	JMP      	116 ; PC := 116
	108	[526]	GETUPVAL 	R7 U1 ; R7 := U1
	109	[526]	GETTABLE 	R7 R7 K28 ; R7 := R7[0x9742b85b]
	110	[526]	GETGLOBAL	R8 K23 ; R8 := _T
	111	[526]	GETTABLE 	R8 R8 K29 ; R8 := R8["MissionTransmissionSet"]
	112	[526]	GETGLOBAL	R9 K7 ; R9 := 0x0469f296
	113	[526]	LOADK    	R10 K30 ; R10 := "Fall"
	114	[526]	CALL     	R9 2 0 ; R9,... := R9(R10)
	115	[526]	CALL     	R7 0 1 ; R7(R8,...)
	116	[529]	SELF     	R7 R6 K31 ; R8 := R6; R7 := R6[0x0b4bcfb6]
	117	[529]	CALL     	R7 2 2 ; R7 := R7(R8)
	118	[530]	SELF     	R8 R7 K32 ; R9 := R7; R8 := R7[0x47de28d6]
	119	[530]	GETUPVAL 	R10 U2 ; R10 := U2
	120	[530]	OP_LOADBOOL	R11 0 0 ; R11 := false
	121	[530]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	122	[531]	SELF     	R8 R6 K33 ; R9 := R6; R8 := R6[0xde321e6f]
	123	[531]	CALL     	R8 2 2 ; R8 := R8(R9)
	124	[532]	SELF     	R9 R8 K34 ; R10 := R8; R9 := R8[0x35b09371]
	125	[532]	LOADK    	R11 := 1.000000
	126	[532]	OP_LOADBOOL	R12 1 0 ; R12 := true
	127	[532]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	128	[533]	SELF     	R9 R8 K36 ; R10 := R8; R9 := R8[0x4da725ce]
	129	[533]	LOADK    	R11 := 5.000000
	130	[533]	CALL     	R9 3 1 ; R9(R10,R11)
	131	[534]	SELF     	R9 R8 K37 ; R10 := R8; R9 := R8[0xf7d48ee0]
	132	[534]	CALL     	R9 2 2 ; R9 := R9(R10)
	133	[535]	SELF     	R10 R9 K38 ; R11 := R9; R10 := R9[0xd533f1cc]
	134	[535]	OP_LOADBOOL	R12 1 0 ; R12 := true
	135	[535]	CALL     	R10 3 1 ; R10(R11,R12)
	136	[536]	SELF     	R10 R6 K39 ; R11 := R6; R10 := R6[0x8e20fbbb]
	137	[536]	OP_LOADBOOL	R12 1 0 ; R12 := true
	138	[536]	CALL     	R10 3 1 ; R10(R11,R12)
	139	[537]	SELF     	R10 R6 K40 ; R11 := R6; R10 := R6[0x89f5abe4]
	140	[537]	GETGLOBAL	R12 K41 ; R12 := 0xea51566c
	141	[537]	CALL     	R10 3 1 ; R10(R11,R12)
	142	[538]	SELF     	R10 R3 K42 ; R11 := R3; R10 := R3[0x5280b883]
	143	[538]	CALL     	R10 2 2 ; R10 := R10(R11)
	144	[539]	SELF     	R11 R6 K43 ; R12 := R6; R11 := R6[0x589ef1c1]
	145	[539]	SELF     	R13 R3 K44 ; R14 := R3; R13 := R3[0xd1586535]
	146	[539]	CALL     	R13 2 2 ; R13 := R13(R14)
	147	[539]	MOVE     	R14 R10 ; R14 := R10
	148	[539]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	149	[540]	SELF     	R11 R6 K45 ; R12 := R6; R11 := R6[0xeea7f8c4]
	150	[540]	CALL     	R11 2 2 ; R11 := R11(R12)
	151	[541]	GETTABLE 	R12 R10 K46 ; R12 := R10["heading"]
	152	[541]	SETTABLE 	R11 K46 R12 ; R11["heading"] := R12
	153	[542]	SELF     	R12 R6 K47 ; R13 := R6; R12 := R6[0xb41a4158]
	154	[542]	MOVE     	R14 R11 ; R14 := R11
	155	[542]	CALL     	R12 3 1 ; R12(R13,R14)
	156	[543]	SELF     	R12 R6 K48 ; R13 := R6; R12 := R6[0xc9d7dff2]
	157	[543]	GETGLOBAL	R14 K49 ; R14 := 0xa421af95
	158	[543]	CALL     	R14 1 0 ; R14,... := R14()
	159	[543]	CALL     	R12 0 1 ; R12(R13,...)
	160	[544]	SELF     	R12 R6 K50 ; R13 := R6; R12 := R6[0xb326e827]
	161	[544]	LOADK    	R14 := -8.000000
	162	[544]	CALL     	R12 3 1 ; R12(R13,R14)
	163	[545]	SELF     	R12 R6 K51 ; R13 := R6; R12 := R6[0xf3cd941b]
	164	[545]	OP_LOADBOOL	R14 0 0 ; R14 := false
	165	[545]	CALL     	R12 3 1 ; R12(R13,R14)
	166	[546]	TEST     	R2 0 ; if not R2 then PC := 173
	167	[546]	JMP      	173 ; PC := 173
	168	[547]	SELF     	R12 R6 K52 ; R13 := R6; R12 := R6[0x020d4331]
	169	[547]	CALL     	R12 2 2 ; R12 := R12(R13)
	170	[547]	SELF     	R12 R12 K53 ; R13 := R12; R12 := R12[0xdf2dca58]
	171	[547]	OP_LOADBOOL	R14 1 0 ; R14 := true
	172	[547]	CALL     	R12 3 1 ; R12(R13,R14)
	173	[549]	SELF     	R12 R6 K54 ; R13 := R6; R12 := R6[0xa2a052f0]
	174	[549]	OP_LOADBOOL	R14 0 0 ; R14 := false
	175	[549]	CALL     	R12 3 1 ; R12(R13,R14)
	176	[550]	SELF     	R12 R6 K55 ; R13 := R6; R12 := R6[0xab108fbb]
	177	[550]	OP_LOADBOOL	R14 0 0 ; R14 := false
	178	[550]	CALL     	R12 3 1 ; R12(R13,R14)
	179	[551]	SELF     	R12 R6 K56 ; R13 := R6; R12 := R6[0xd5f7912b]
	180	[551]	GETGLOBAL	R14 K7 ; R14 := 0x0469f296
	181	[551]	LOADK    	R15 K57 ; R15 := "PauseOwnedNpcAvatars"
	182	[551]	CALL     	R14 2 2 ; R14 := R14(R15)
	183	[551]	OP_LOADBOOL	R15 0 0 ; R15 := false
	184	[551]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	185	[552]	GETGLOBAL	R12 K18 ; R12 := 0xcbd666e1
	186	[552]	LOADK    	R13 K58 ; R13 := 0.200000
	187	[552]	CALL     	R12 2 1 ; R12(R13)
	188	[553]	GETGLOBAL	R12 K23 ; R12 := _T
	189	[553]	SETTABLE 	R12 K24 K59 ; R12["HideTransferenceFx"] := false
	190	[555]	LOADK    	R4 := 0.000000
	191	[556]	LT       	0 R4 K17 ; if R4 >= 1.000000 then PC := 216
	192	[556]	JMP      	216 ; PC := 216
	193	[557]	GETGLOBAL	R12 K18 ; R12 := 0xcbd666e1
	194	[557]	LOADK    	R13 := 0.000000
	195	[557]	CALL     	R12 2 1 ; R12(R13)
	196	[559]	SELF     	R12 R6 K60 ; R13 := R6; R12 := R6[0x7bdccf94]
	197	[559]	CALL     	R12 2 2 ; R12 := R12(R13)
	198	[559]	TEST     	R12 0 ; if not R12 then PC := 201
	199	[559]	JMP      	201 ; PC := 201
	200	[560]	JMP      	216 ; PC := 216
	201	[563]	GETGLOBAL	R12 K19 ; R12 := 0x67652851
	202	[563]	CALL     	R12 1 2 ; R12 := R12()
	203	[563]	GETUPVAL 	R13 U0 ; R13 := U0
	204	[563]	DIV      	R12 R12 R13 ; R12 := R12 / R13
	205	[563]	ADD      	R4 R4 R12 ; R4 := R4 + R12
	206	[564]	SELF     	R12 R5 K20 ; R13 := R5; R12 := R5[0xb6df3e50]
	207	[564]	GETGLOBAL	R14 K21 ; R14 := 0x42dcc9f5
	208	[564]	GETGLOBAL	R15 K22 ; R15 := 0xa533083a
	209	[564]	SUB      	R16 K17 R4 ; R16 := 1.000000 - R4
	210	[564]	CALL     	R15 2 2 ; R15 := R15(R16)
	211	[564]	LOADK    	R16 := 0.000000
	212	[564]	LOADK    	R17 := 1.000000
	213	[564]	CALL     	R14 4 0 ; R14,... := R14(R15,R16,R17)
	214	[564]	CALL     	R12 0 1 ; R12(R13,...)
	215	[564]	JMP      	191 ; PC := 191
	216	[566]	SELF     	R12 R5 K20 ; R13 := R5; R12 := R5[0xb6df3e50]
	217	[566]	LOADK    	R14 := 0.000000
	218	[566]	CALL     	R12 3 1 ; R12(R13,R14)
	219	[568]	SELF     	R12 R6 K60 ; R13 := R6; R12 := R6[0x7bdccf94]
	220	[568]	CALL     	R12 2 2 ; R12 := R12(R13)
	221	[568]	TEST     	R12 1 ; if R12 then PC := 227
	222	[568]	JMP      	227 ; PC := 227
	223	[569]	GETGLOBAL	R12 K18 ; R12 := 0xcbd666e1
	224	[569]	LOADK    	R13 := 0.000000
	225	[569]	CALL     	R12 2 1 ; R12(R13)
	226	[569]	JMP      	219 ; PC := 219
	227	[572]	SELF     	R12 R6 K61 ; R13 := R6; R12 := R6[0x5d985c7e]
	228	[572]	GETGLOBAL	R14 K62 ; R14 := 0x881d93d4
	229	[572]	OP_LOADBOOL	R15 0 0 ; R15 := false
	230	[572]	LOADK    	R16 := 4.000000
	231	[572]	LOADK    	R17 := 1.000000
	232	[572]	OP_LOADBOOL	R18 1 0 ; R18 := true
	233	[572]	LOADK    	R19 := 1.000000
	234	[572]	CALL     	R12 8 1 ; R12(R13,R14,R15,R16,R17,R18,R19)
	235	[573]	SELF     	R12 R6 K63 ; R13 := R6; R12 := R6[0x659d451f]
	236	[573]	GETGLOBAL	R14 K64 ; R14 := 0x015f48f0
	237	[573]	OP_LOADBOOL	R15 0 0 ; R15 := false
	238	[573]	LOADK    	R16 := 1.000000
	239	[573]	OP_LOADBOOL	R17 0 0 ; R17 := false
	240	[573]	CALL     	R12 6 1 ; R12(R13,R14,R15,R16,R17)
	241	[577]	LOADK    	R12 := 1.000000
	242	[577]	GETGLOBAL	R13 K65 ; R13 := 0xd160adf4
	243	[577]	LEN      	R13 R13 ; R13 := # R13
	244	[577]	LOADK    	R14 := 1.000000
	245	[577]	FORPREP  	R12 259 ; R12 -= R14; PC := 259
	246	[578]	SELF     	R16 R6 K66 ; R17 := R6; R16 := R6[0x47901f07]
	247	[578]	GETGLOBAL	R18 K65 ; R18 := 0xd160adf4
	248	[578]	GETTABLE 	R18 R18 R15 ; R18 := R18[R15]
	249	[578]	GETGLOBAL	R19 K12 ; R19 := EMPTY_SYMBOL
	250	[578]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	251	[579]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	252	[579]	MOVE     	R18 R16 ; R18 := R16
	253	[579]	CALL     	R17 2 2 ; R17 := R17(R18)
	254	[579]	TEST     	R17 1 ; if R17 then PC := 259
	255	[579]	JMP      	259 ; PC := 259
	256	[580]	SELF     	R17 R16 K67 ; R18 := R16; R17 := R16[0x8eb2112d]
	257	[580]	LOADK    	R19 K68 ; R19 := "Burst"
	258	[580]	CALL     	R17 3 1 ; R17(R18,R19)
	259	[577]	FORLOOP  	R12 246 ; R12 += R14; if R12 <= R13 then begin PC := 246; R15 := R12 end
	260	[584]	SELF     	R17 R6 K69 ; R18 := R6; R17 := R6[0x26d544fc]
	261	[584]	GETGLOBAL	R19 K7 ; R19 := 0x0469f296
	262	[584]	LOADK    	R20 K70 ; R20 := "Operator"
	263	[584]	CALL     	R19 2 0 ; R19,... := R19(R20)
	264	[584]	CALL     	R17 0 1 ; R17(R18,...)
	265	[586]	GETUPVAL 	R17 U3 ; R17 := U3
	266	[586]	LT       	0 K71 R17 ; if 0.000000 >= R17 then PC := 280
	267	[586]	JMP      	280 ; PC := 280
	268	[587]	SELF     	R17 R6 K44 ; R18 := R6; R17 := R6[0xd1586535]
	269	[587]	CALL     	R17 2 2 ; R17 := R17(R18)
	270	[588]	SELF     	R18 R6 K72 ; R19 := R6; R18 := R6[0x1f420a3a]
	271	[588]	MOVE     	R20 R17 ; R20 := R17
	272	[588]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	273	[588]	GETUPVAL 	R19 U3 ; R19 := U3
	274	[588]	LT       	0 R18 R19 ; if R18 >= R19 then PC := 280
	275	[588]	JMP      	280 ; PC := 280
	276	[589]	GETGLOBAL	R18 K18 ; R18 := 0xcbd666e1
	277	[589]	LOADK    	R19 := 0.000000
	278	[589]	CALL     	R18 2 1 ; R18(R19)
	279	[589]	JMP      	270 ; PC := 270
	280	[592]	GETUPVAL 	R18 U1 ; R18 := U1
	281	[592]	GETTABLE 	R18 R18 K28 ; R18 := R18[0x9742b85b]
	282	[592]	GETGLOBAL	R19 K23 ; R19 := _T
	283	[592]	GETTABLE 	R19 R19 K29 ; R19 := R19["MissionTransmissionSet"]
	284	[592]	GETGLOBAL	R20 K7 ; R20 := 0x0469f296
	285	[592]	LOADK    	R21 K73 ; R21 := "Realm"
	286	[592]	CALL     	R20 2 0 ; R20,... := R20(R21)
	287	[592]	CALL     	R18 0 1 ; R18(R19,...)
	288	[593]	RETURN   	R0 1 ; return 

function #7 <?:595,653> (146 instructions, 584 bytes at 00000160FD856610)
1 param, 36 slots, 1 upvalue, 0 locals, 30 constants, 0 functions
	1	[596]	GETGLOBAL	R1 K0 ; R1 := 0x89326c93
	2	[596]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x78298275]
	3	[596]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[597]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	5	[597]	MOVE     	R3 R1 ; R3 := R1
	6	[597]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[597]	TEST     	R2 0 ; if not R2 then PC := 10
	8	[597]	JMP      	10 ; PC := 10
	9	[598]	RETURN   	R0 1 ; return 
	10	[601]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0xd1586535]
	11	[601]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[602]	SELF     	R3 R0 K4 ; R4 := R0; R3 := R0[0xcb3851b8]
	13	[602]	CALL     	R3 2 2 ; R3 := R3(R4)
	14	[603]	GETGLOBAL	R4 K5 ; R4 := 0x492c7f2a
	15	[603]	MOVE     	R5 R2 ; R5 := R2
	16	[603]	MOVE     	R6 R3 ; R6 := R3
	17	[603]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	18	[603]	GETTABLE 	R4 R4 K6 ; R4 := R4["z"]
	19	[604]	SELF     	R5 R0 K7 ; R6 := R0; R5 := R0[0xdb7325e3]
	20	[604]	CALL     	R5 2 2 ; R5 := R5(R6)
	21	[604]	GETTABLE 	R5 R5 K6 ; R5 := R5["z"]
	22	[605]	MUL      	R6 R5 K8 ; R6 := R5 * 0.500000
	23	[607]	GETGLOBAL	R7 K9 ; R7 := 0xa421af95
	24	[607]	CALL     	R7 1 2 ; R7 := R7()
	25	[609]	GETGLOBAL	R8 K0 ; R8 := 0x89326c93
	26	[609]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0xc7fcada9]
	27	[609]	GETGLOBAL	R10 K11 ; R10 := 0x0469f296
	28	[609]	LOADK    	R11 K12 ; R11 := "LotusRoomTunnelFx"
	29	[609]	CALL     	R10 2 0 ; R10,... := R10(R11)
	30	[609]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	31	[611]	GETGLOBAL	R9 K2 ; R9 := 0x7b998233
	32	[611]	MOVE     	R10 R1 ; R10 := R1
	33	[611]	CALL     	R9 2 2 ; R9 := R9(R10)
	34	[611]	TEST     	R9 1 ; if R9 then PC := 103
	35	[611]	JMP      	103 ; PC := 103
	36	[611]	SELF     	R9 R0 K13 ; R10 := R0; R9 := R0[0x4b7b7016]
	37	[611]	MOVE     	R11 R1 ; R11 := R1
	38	[611]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	39	[611]	TEST     	R9 0 ; if not R9 then PC := 103
	40	[611]	JMP      	103 ; PC := 103
	41	[612]	SELF     	R9 R1 K14 ; R10 := R1; R9 := R1[0x4078bbf8]
	42	[612]	MOVE     	R11 R7 ; R11 := R7
	43	[612]	CALL     	R9 3 1 ; R9(R10,R11)
	44	[613]	GETGLOBAL	R9 K15 ; R9 := 0x42dcc9f5
	45	[613]	GETGLOBAL	R10 K16 ; R10 := 0x5bced4c4
	46	[613]	GETTABLE 	R10 R10 K17 ; R10 := R10[0xe4a5b3ca]
	47	[613]	GETGLOBAL	R11 K5 ; R11 := 0x492c7f2a
	48	[613]	MOVE     	R12 R7 ; R12 := R7
	49	[613]	MOVE     	R13 R3 ; R13 := R3
	50	[613]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	51	[613]	GETTABLE 	R11 R11 K6 ; R11 := R11["z"]
	52	[613]	SUB      	R11 R11 R4 ; R11 := R11 - R4
	53	[613]	ADD      	R11 R11 R6 ; R11 := R11 + R6
	54	[613]	DIV      	R11 R11 R5 ; R11 := R11 / R5
	55	[613]	CALL     	R10 2 2 ; R10 := R10(R11)
	56	[613]	LOADK    	R11 := 0.000000
	57	[613]	LOADK    	R12 := 1.000000
	58	[613]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	59	[615]	GETGLOBAL	R10 K18 ; R10 := 0xa533083a
	60	[615]	SUB      	R11 K19 R9 ; R11 := 1.000000 - R9
	61	[615]	CALL     	R10 2 2 ; R10 := R10(R11)
	62	[616]	LOADK    	R11 := 1.000000
	63	[616]	LEN      	R12 R8 ; R12 := # R8
	64	[616]	LOADK    	R13 := 1.000000
	65	[616]	FORPREP  	R11 81 ; R11 -= R13; PC := 81
	66	[617]	GETTABLE 	R15 R8 R14 ; R15 := R8[R14]
	67	[618]	GETGLOBAL	R16 K2 ; R16 := 0x7b998233
	68	[618]	MOVE     	R17 R15 ; R17 := R15
	69	[618]	CALL     	R16 2 2 ; R16 := R16(R17)
	70	[618]	TEST     	R16 1 ; if R16 then PC := 81
	71	[618]	JMP      	81 ; PC := 81
	72	[619]	SELF     	R16 R15 K20 ; R17 := R15; R16 := R15[0xf2deaf69]
	73	[619]	GETGLOBAL	R18 K21 ; R18 := gDecorationType
	74	[619]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	75	[619]	TEST     	R16 0 ; if not R16 then PC := 81
	76	[619]	JMP      	81 ; PC := 81
	77	[620]	SELF     	R16 R15 K22 ; R17 := R15; R16 := R15[0x986d2ab8]
	78	[620]	GETUPVAL 	R18 U0 ; R18 := U0
	79	[620]	MOVE     	R19 R10 ; R19 := R10
	80	[620]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	81	[616]	FORLOOP  	R11 66 ; R11 += R13; if R11 <= R12 then begin PC := 66; R14 := R11 end
	82	[624]	LOADK    	R16 := 1.000000
	83	[624]	GETGLOBAL	R17 K23 ; R17 := 0x373ef19b
	84	[624]	LEN      	R17 R17 ; R17 := # R17
	85	[624]	LOADK    	R18 := 1.000000
	86	[624]	FORPREP  	R16 98 ; R16 -= R18; PC := 98
	87	[625]	GETGLOBAL	R20 K23 ; R20 := 0x373ef19b
	88	[625]	GETTABLE 	R20 R20 R19 ; R20 := R20[R19]
	89	[625]	SELF     	R20 R20 K24 ; R21 := R20; R20 := R20[0x830eea67]
	90	[625]	GETUPVAL 	R22 U0 ; R22 := U0
	91	[625]	GETGLOBAL	R23 K25 ; R23 := 0x80ba304c
	92	[625]	GETTABLE 	R23 R23 R19 ; R23 := R23[R19]
	93	[625]	MUL      	R23 R10 R23 ; R23 := R10 * R23
	94	[625]	LOADK    	R24 := 0.000000
	95	[625]	LOADK    	R25 := 0.000000
	96	[625]	LOADK    	R26 := 0.000000
	97	[625]	CALL     	R20 7 1 ; R20(R21,R22,R23,R24,R25,R26)
	98	[624]	FORLOOP  	R16 87 ; R16 += R18; if R16 <= R17 then begin PC := 87; R19 := R16 end
	99	[629]	GETGLOBAL	R20 K26 ; R20 := 0xcbd666e1
	100	[629]	LOADK    	R21 := 0.000000
	101	[629]	CALL     	R20 2 1 ; R20(R21)
	102	[629]	JMP      	31 ; PC := 31
	103	[632]	LOADK    	R20 := 1.000000
	104	[632]	LEN      	R21 R8 ; R21 := # R8
	105	[632]	LOADK    	R22 := 1.000000
	106	[632]	FORPREP  	R20 130 ; R20 -= R22; PC := 130
	107	[633]	GETTABLE 	R24 R8 R23 ; R24 := R8[R23]
	108	[634]	GETGLOBAL	R25 K2 ; R25 := 0x7b998233
	109	[634]	MOVE     	R26 R24 ; R26 := R24
	110	[634]	CALL     	R25 2 2 ; R25 := R25(R26)
	111	[634]	TEST     	R25 1 ; if R25 then PC := 130
	112	[634]	JMP      	130 ; PC := 130
	113	[635]	SELF     	R25 R24 K20 ; R26 := R24; R25 := R24[0xf2deaf69]
	114	[635]	GETGLOBAL	R27 K21 ; R27 := gDecorationType
	115	[635]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	116	[635]	TEST     	R25 0 ; if not R25 then PC := 123
	117	[635]	JMP      	123 ; PC := 123
	118	[636]	SELF     	R25 R24 K27 ; R26 := R24; R25 := R24[0x768274d6]
	119	[636]	OP_LOADBOOL	R27 0 0 ; R27 := false
	120	[636]	OP_LOADBOOL	R28 0 0 ; R28 := false
	121	[636]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	122	[636]	JMP      	130 ; PC := 130
	123	[637]	SELF     	R25 R24 K20 ; R26 := R24; R25 := R24[0xf2deaf69]
	124	[637]	GETGLOBAL	R27 K28 ; R27 := gParticleSysType
	125	[637]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	126	[637]	TEST     	R25 0 ; if not R25 then PC := 130
	127	[637]	JMP      	130 ; PC := 130
	128	[638]	SELF     	R25 R24 K29 ; R26 := R24; R25 := R24[0xa2880940]
	129	[638]	CALL     	R25 2 1 ; R25(R26)
	130	[632]	FORLOOP  	R20 107 ; R20 += R22; if R20 <= R21 then begin PC := 107; R23 := R20 end
	131	[642]	LOADK    	R25 := 1.000000
	132	[642]	GETGLOBAL	R26 K23 ; R26 := 0x373ef19b
	133	[642]	LEN      	R26 R26 ; R26 := # R26
	134	[642]	LOADK    	R27 := 1.000000
	135	[642]	FORPREP  	R25 145 ; R25 -= R27; PC := 145
	136	[643]	GETGLOBAL	R29 K23 ; R29 := 0x373ef19b
	137	[643]	GETTABLE 	R29 R29 R28 ; R29 := R29[R28]
	138	[643]	SELF     	R29 R29 K24 ; R30 := R29; R29 := R29[0x830eea67]
	139	[643]	GETUPVAL 	R31 U0 ; R31 := U0
	140	[643]	LOADK    	R32 := 0.000000
	141	[643]	LOADK    	R33 := 0.000000
	142	[643]	LOADK    	R34 := 0.000000
	143	[643]	LOADK    	R35 := 0.000000
	144	[643]	CALL     	R29 7 1 ; R29(R30,R31,R32,R33,R34,R35)
	145	[642]	FORLOOP  	R25 136 ; R25 += R27; if R25 <= R26 then begin PC := 136; R28 := R25 end
	146	[653]	RETURN   	R0 1 ; return 

function #8 <?:655,664> (22 instructions, 88 bytes at 00000160FD856D90)
0 params, 4 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[656]	GETGLOBAL	R0 K0 ; R0 := 0xcbd666e1
	2	[656]	LOADK    	R1 := 0.500000
	3	[656]	CALL     	R0 2 1 ; R0(R1)
	4	[657]	GETGLOBAL	R0 K1 ; R0 := 0x89326c93
	5	[657]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x78298275]
	6	[657]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[658]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	8	[658]	MOVE     	R2 R0 ; R2 := R0
	9	[658]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[658]	TEST     	R1 0 ; if not R1 then PC := 13
	11	[658]	JMP      	13 ; PC := 13
	12	[659]	RETURN   	R0 1 ; return 
	13	[661]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xaf7c1d8d]
	14	[661]	GETGLOBAL	R3 K5 ; R3 := 0xea51566c
	15	[661]	CALL     	R1 3 1 ; R1(R2,R3)
	16	[662]	GETGLOBAL	R1 K0 ; R1 := 0xcbd666e1
	17	[662]	LOADK    	R2 := 0.000000
	18	[662]	CALL     	R1 2 1 ; R1(R2)
	19	[663]	SELF     	R1 R0 K6 ; R2 := R0; R1 := R0[0x89f5abe4]
	20	[663]	GETUPVAL 	R3 U0 ; R3 := U0
	21	[663]	CALL     	R1 3 1 ; R1(R2,R3)
	22	[664]	RETURN   	R0 1 ; return 

function #9 <?:666,669> (5 instructions, 20 bytes at 00000160FD856F80)
1 param, 3 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[667]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[667]	SETTABLE 	R1 K1 K2 ; R1["ApostasyActionTriggered"] := true
	3	[668]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xf4e253b6]
	4	[668]	CALL     	R1 2 1 ; R1(R2)
	5	[669]	RETURN   	R0 1 ; return 

function #10 <?:671,677> (8 instructions, 32 bytes at 00000160FD857100)
2 params, 3 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[672]	TEST     	R0 0 ; if not R0 then PC := 6
	2	[672]	JMP      	6 ; PC := 6
	3	[673]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[673]	SETUPVAL 	R2 U0 ; U0 := R2
	5	[673]	JMP      	8 ; PC := 8
	6	[675]	OP_LOADBOOL	R2 1 0 ; R2 := true
	7	[675]	SETUPVAL 	R2 U1 ; U1 := R2
	8	[677]	RETURN   	R0 1 ; return 

function #11 <?:679,701> (47 instructions, 188 bytes at 00000160FD8571F0)
2 params, 10 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[680]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0x25a6e75e]
	2	[680]	CALL     	R2 2 2 ; R2 := R2(R3)
	3	[680]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x8e7c3b5e]
	4	[680]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[681]	GETGLOBAL	R3 K2 ; R3 := 0x46ceb9a3
	6	[681]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 9
	7	[681]	JMP      	9 ; PC := 9
	8	[682]	RETURN   	R0 1 ; return 
	9	[685]	LOADK    	R3 := 5.000000
	10	[686]	LOADK    	R4 := 0.000000
	11	[687]	SELF     	R5 R0 K3 ; R6 := R0; R5 := R0[0x88cfae95]
	12	[687]	MOVE     	R7 R1 ; R7 := R1
	13	[687]	LOADK    	R8 K4 ; R8 := "OnProgressQuest"
	14	[687]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	15	[688]	GETUPVAL 	R5 U0 ; R5 := U0
	16	[688]	TEST     	R5 1 ; if R5 then PC := 47
	17	[688]	JMP      	47 ; PC := 47
	18	[689]	GETGLOBAL	R5 K5 ; R5 := 0xcbd666e1
	19	[689]	LOADK    	R6 := 0.000000
	20	[689]	CALL     	R5 2 1 ; R5(R6)
	21	[690]	GETUPVAL 	R5 U1 ; R5 := U1
	22	[690]	TEST     	R5 0 ; if not R5 then PC := 15
	23	[690]	JMP      	15 ; PC := 15
	24	[691]	OP_LOADBOOL	R5 0 0 ; R5 := false
	25	[691]	SETUPVAL 	R5 U1 ; U1 := R5
	26	[692]	ADD      	R4 R4 K6 ; R4 := R4 + 1.000000
	27	[693]	LOADK    	R5 := 0.000000
	28	[694]	GETGLOBAL	R6 K7 ; R6 := 0x5bced4c4
	29	[694]	GETTABLE 	R6 R6 K8 ; R6 := R6[0xac1b386a]
	30	[694]	MUL      	R7 R3 R4 ; R7 := R3 * R4
	31	[694]	LOADK    	R8 := 60.000000
	32	[694]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	33	[694]	LT       	0 R5 R6 ; if R5 >= R6 then PC := 42
	34	[694]	JMP      	42 ; PC := 42
	35	[695]	GETGLOBAL	R6 K5 ; R6 := 0xcbd666e1
	36	[695]	LOADK    	R7 := 0.000000
	37	[695]	CALL     	R6 2 1 ; R6(R7)
	38	[696]	GETGLOBAL	R6 K9 ; R6 := 0x67652851
	39	[696]	CALL     	R6 1 2 ; R6 := R6()
	40	[696]	ADD      	R5 R5 R6 ; R5 := R5 + R6
	41	[696]	JMP      	28 ; PC := 28
	42	[698]	SELF     	R6 R0 K3 ; R7 := R0; R6 := R0[0x88cfae95]
	43	[698]	MOVE     	R8 R1 ; R8 := R1
	44	[698]	LOADK    	R9 K4 ; R9 := "OnProgressQuest"
	45	[698]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	46	[699]	JMP      	15 ; PC := 15
	47	[701]	RETURN   	R0 1 ; return 

function #12 <?:703,710> (14 instructions, 56 bytes at 00000160FD8574D0)
2 params, 6 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[704]	TEST     	R0 0 ; if not R0 then PC := 12
	2	[704]	JMP      	12 ; PC := 12
	3	[705]	GETGLOBAL	R2 K0 ; R2 := _T
	4	[705]	GETTABLE 	R2 R2 K1 ; R2 := R2["BackgroundMovie"]
	5	[705]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xe4162eed]
	6	[705]	LOADK    	R4 K3 ; R4 := "CheckQuests"
	7	[705]	LOADK    	R5 K4 ; R5 := ""
	8	[705]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	9	[706]	OP_LOADBOOL	R2 1 0 ; R2 := true
	10	[706]	SETUPVAL 	R2 U0 ; U0 := R2
	11	[706]	JMP      	14 ; PC := 14
	12	[708]	OP_LOADBOOL	R2 1 0 ; R2 := true
	13	[708]	SETUPVAL 	R2 U1 ; U1 := R2
	14	[710]	RETURN   	R0 1 ; return 

function #13 <?:712,718> (8 instructions, 32 bytes at 00000160FD857660)
2 params, 3 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[713]	TEST     	R0 1 ; if R0 then PC := 6
	2	[713]	JMP      	6 ; PC := 6
	3	[714]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[714]	SETUPVAL 	R2 U0 ; U0 := R2
	5	[714]	JMP      	8 ; PC := 8
	6	[716]	OP_LOADBOOL	R2 1 0 ; R2 := true
	7	[716]	SETUPVAL 	R2 U1 ; U1 := R2
	8	[718]	RETURN   	R0 1 ; return 

function #14 <?:720,747> (58 instructions, 232 bytes at 00000160FD857750)
2 params, 9 slots, 2 upvalues, 0 locals, 16 constants, 0 functions
	1	[721]	SELF     	R2 R0 K0 ; R3 := R0; R2 := R0[0x49cfdc52]
	2	[721]	MOVE     	R4 R1 ; R4 := R1
	3	[721]	LOADK    	R5 K1 ; R5 := "OnActiveQuestSet"
	4	[721]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	5	[723]	OP_LOADBOOL	R2 0 0 ; R2 := false
	6	[725]	LOADK    	R3 := 5.000000
	7	[726]	LOADK    	R4 := 0.000000
	8	[727]	GETUPVAL 	R5 U0 ; R5 := U0
	9	[727]	TEST     	R5 1 ; if R5 then PC := 50
	10	[727]	JMP      	50 ; PC := 50
	11	[728]	GETGLOBAL	R5 K2 ; R5 := 0xcbd666e1
	12	[728]	LOADK    	R6 := 0.000000
	13	[728]	CALL     	R5 2 1 ; R5(R6)
	14	[729]	GETGLOBAL	R5 K3 ; R5 := 0x67652851
	15	[729]	CALL     	R5 1 2 ; R5 := R5()
	16	[729]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	17	[731]	TEST     	R2 1 ; if R2 then PC := 28
	18	[731]	JMP      	28 ; PC := 28
	19	[731]	LT       	0 K4 R4 ; if 1.000000 >= R4 then PC := 28
	20	[731]	JMP      	28 ; PC := 28
	21	[732]	OP_LOADBOOL	R2 1 0 ; R2 := true
	22	[733]	GETGLOBAL	R5 K5 ; R5 := _T
	23	[733]	GETTABLE 	R5 R5 K6 ; R5 := R5["BackgroundMovie"]
	24	[733]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0xe4162eed]
	25	[733]	LOADK    	R7 K8 ; R7 := "ShowBlockingMessage"
	26	[733]	LOADK    	R8 K9 ; R8 := "1"
	27	[733]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	28	[735]	GETUPVAL 	R5 U1 ; R5 := U1
	29	[735]	TEST     	R5 0 ; if not R5 then PC := 8
	30	[735]	JMP      	8 ; PC := 8
	31	[735]	LT       	0 R3 R4 ; if R3 >= R4 then PC := 8
	32	[735]	JMP      	8 ; PC := 8
	33	[736]	OP_LOADBOOL	R5 0 0 ; R5 := false
	34	[736]	SETUPVAL 	R5 U1 ; U1 := R5
	35	[737]	LOADK    	R4 := 0.000000
	36	[738]	GETGLOBAL	R5 K10 ; R5 := 0x3d106989
	37	[738]	LOADK    	R6 K11 ; R6 := "Retrying SetActiveQuest"
	38	[738]	CALL     	R5 2 1 ; R5(R6)
	39	[739]	SELF     	R5 R0 K0 ; R6 := R0; R5 := R0[0x49cfdc52]
	40	[739]	MOVE     	R7 R1 ; R7 := R1
	41	[739]	LOADK    	R8 K1 ; R8 := "OnActiveQuestSet"
	42	[739]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	43	[740]	GETGLOBAL	R5 K12 ; R5 := 0x5bced4c4
	44	[740]	GETTABLE 	R5 R5 K13 ; R5 := R5[0xac1b386a]
	45	[740]	MUL      	R6 R3 K14 ; R6 := R3 * 2.000000
	46	[740]	LOADK    	R7 := 60.000000
	47	[740]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	48	[740]	MOVE     	R3 R5 ; R3 := R5
	49	[741]	JMP      	8 ; PC := 8
	50	[744]	TEST     	R2 0 ; if not R2 then PC := 58
	51	[744]	JMP      	58 ; PC := 58
	52	[745]	GETGLOBAL	R5 K5 ; R5 := _T
	53	[745]	GETTABLE 	R5 R5 K6 ; R5 := R5["BackgroundMovie"]
	54	[745]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0xe4162eed]
	55	[745]	LOADK    	R7 K8 ; R7 := "ShowBlockingMessage"
	56	[745]	LOADK    	R8 K15 ; R8 := "0"
	57	[745]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	58	[747]	RETURN   	R0 1 ; return 

function #15 <?:749,782> (71 instructions, 284 bytes at 00000160FD857AF0)
2 params, 10 slots, 2 upvalues, 0 locals, 25 constants, 0 functions
	1	[750]	GETGLOBAL	R2 K0 ; R2 := 0x6c97a788
	2	[750]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xc201b901]
	3	[750]	CALL     	R2 1 2 ; R2 := R2()
	4	[751]	SETTABLE 	R2 K2 K3 ; R2["mRewardType"] := 0.000000
	5	[752]	SETTABLE 	R2 K4 K6 ; R2["mProductCategory"] := 21.000000
	6	[753]	GETGLOBAL	R3 K8 ; R3 := 0x7ed0a956
	7	[753]	MOVE     	R4 R1 ; R4 := R1
	8	[753]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[753]	SETTABLE 	R2 K7 R3 ; R2["mItemType"] := R3
	10	[755]	OP_LOADBOOL	R3 0 0 ; R3 := false
	11	[755]	SETUPVAL 	R3 U0 ; U0 := R3
	12	[756]	OP_LOADBOOL	R3 0 0 ; R3 := false
	13	[756]	SETUPVAL 	R3 U1 ; U1 := R3
	14	[758]	LOADK    	R3 := 5.000000
	15	[759]	LOADK    	R4 := 0.000000
	16	[760]	OP_LOADBOOL	R5 0 0 ; R5 := false
	17	[761]	SELF     	R6 R0 K9 ; R7 := R0; R6 := R0[0x28a8cce9]
	18	[761]	MOVE     	R8 R2 ; R8 := R2
	19	[761]	LOADK    	R9 K10 ; R9 := "OnGiveQuest"
	20	[761]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	21	[762]	GETUPVAL 	R6 U0 ; R6 := U0
	22	[762]	TEST     	R6 1 ; if R6 then PC := 63
	23	[762]	JMP      	63 ; PC := 63
	24	[763]	GETGLOBAL	R6 K11 ; R6 := 0xcbd666e1
	25	[763]	LOADK    	R7 := 0.000000
	26	[763]	CALL     	R6 2 1 ; R6(R7)
	27	[764]	GETGLOBAL	R6 K12 ; R6 := 0x67652851
	28	[764]	CALL     	R6 1 2 ; R6 := R6()
	29	[764]	ADD      	R4 R4 R6 ; R4 := R4 + R6
	30	[766]	TEST     	R5 1 ; if R5 then PC := 41
	31	[766]	JMP      	41 ; PC := 41
	32	[766]	LT       	0 K13 R4 ; if 1.000000 >= R4 then PC := 41
	33	[766]	JMP      	41 ; PC := 41
	34	[767]	OP_LOADBOOL	R5 1 0 ; R5 := true
	35	[768]	GETGLOBAL	R6 K14 ; R6 := _T
	36	[768]	GETTABLE 	R6 R6 K15 ; R6 := R6["BackgroundMovie"]
	37	[768]	SELF     	R6 R6 K16 ; R7 := R6; R6 := R6[0xe4162eed]
	38	[768]	LOADK    	R8 K17 ; R8 := "ShowBlockingMessage"
	39	[768]	LOADK    	R9 K18 ; R9 := "1"
	40	[768]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	41	[770]	GETUPVAL 	R6 U1 ; R6 := U1
	42	[770]	TEST     	R6 0 ; if not R6 then PC := 21
	43	[770]	JMP      	21 ; PC := 21
	44	[770]	LT       	0 R3 R4 ; if R3 >= R4 then PC := 21
	45	[770]	JMP      	21 ; PC := 21
	46	[771]	OP_LOADBOOL	R6 0 0 ; R6 := false
	47	[771]	SETUPVAL 	R6 U1 ; U1 := R6
	48	[772]	LOADK    	R4 := 0.000000
	49	[773]	GETGLOBAL	R6 K19 ; R6 := 0x3d106989
	50	[773]	LOADK    	R7 K20 ; R7 := "Retrying AcceptQuest."
	51	[773]	CALL     	R6 2 1 ; R6(R7)
	52	[774]	SELF     	R6 R0 K9 ; R7 := R0; R6 := R0[0x28a8cce9]
	53	[774]	MOVE     	R8 R2 ; R8 := R2
	54	[774]	LOADK    	R9 K10 ; R9 := "OnGiveQuest"
	55	[774]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	56	[775]	GETGLOBAL	R6 K21 ; R6 := 0x5bced4c4
	57	[775]	GETTABLE 	R6 R6 K22 ; R6 := R6[0xac1b386a]
	58	[775]	MUL      	R7 R3 K23 ; R7 := R3 * 2.000000
	59	[775]	LOADK    	R8 := 60.000000
	60	[775]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	61	[775]	MOVE     	R3 R6 ; R3 := R6
	62	[776]	JMP      	21 ; PC := 21
	63	[779]	TEST     	R5 0 ; if not R5 then PC := 71
	64	[779]	JMP      	71 ; PC := 71
	65	[780]	GETGLOBAL	R6 K14 ; R6 := _T
	66	[780]	GETTABLE 	R6 R6 K15 ; R6 := R6["BackgroundMovie"]
	67	[780]	SELF     	R6 R6 K16 ; R7 := R6; R6 := R6[0xe4162eed]
	68	[780]	LOADK    	R8 K17 ; R8 := "ShowBlockingMessage"
	69	[780]	LOADK    	R9 K24 ; R9 := "0"
	70	[780]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	71	[782]	RETURN   	R0 1 ; return 

function #16 <?:784,787> (1 instruction, 4 bytes at 00000160FD857F80)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[787]	RETURN   	R0 1 ; return 

function #17 <?:789,855> (169 instructions, 676 bytes at 00000160FD858050)
1 param, 20 slots, 4 upvalues, 0 locals, 44 constants, 0 functions
	1	[790]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[790]	GETGLOBAL	R2 K1 ; R2 := 0xe7f2b02f
	3	[790]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[790]	TEST     	R1 1 ; if R1 then PC := 9
	5	[790]	JMP      	9 ; PC := 9
	6	[791]	GETGLOBAL	R1 K1 ; R1 := 0xe7f2b02f
	7	[791]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xa1fa8dcb]
	8	[791]	CALL     	R1 2 1 ; R1(R2)
	9	[794]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	10	[794]	GETGLOBAL	R2 K3 ; R2 := _T
	11	[794]	GETTABLE 	R2 R2 K4 ; R2 := R2["curTransmission"]
	12	[794]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[794]	TEST     	R1 1 ; if R1 then PC := 21
	14	[794]	JMP      	21 ; PC := 21
	15	[795]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[795]	GETTABLE 	R1 R1 K5 ; R1 := R1[0xa559eb32]
	17	[795]	CALL     	R1 1 1 ; R1()
	18	[796]	GETUPVAL 	R1 U0 ; R1 := U0
	19	[796]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xfe0d9469]
	20	[796]	CALL     	R1 1 1 ; R1()
	21	[799]	GETGLOBAL	R1 K7 ; R1 := 0xbd496aa1
	22	[799]	GETTABLE 	R1 R1 K8 ; R1 := R1[0x42645da3]
	23	[799]	NEWTABLE 	R2 0 0 ; R2 := {}
	24	[799]	GETGLOBAL	R3 K9 ; R3 := 0x46ceb9a3
	25	[799]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0xed4e0128]
	26	[799]	CALL     	R3 2 0 ; R3,... := R3(R4)
	27	[799]	SETLIST  	R2 0 1 ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 0
	28	[799]	OP_LOADBOOL	R3 1 0 ; R3 := true
	29	[799]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	30	[801]	GETGLOBAL	R2 K11 ; R2 := 0x89326c93
	31	[801]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0x7c1a0374]
	32	[801]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[801]	GETTABLE 	R2 R2 K13 ; R2 := R2["postProcess"]
	34	[801]	SETTABLE 	R2 K14 K15 ; R2["radialBlurStrength"] := 1.800000
	35	[802]	GETGLOBAL	R2 K11 ; R2 := 0x89326c93
	36	[802]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0x7c1a0374]
	37	[802]	CALL     	R2 2 2 ; R2 := R2(R3)
	38	[803]	LOADK    	R3 := 0.000000
	39	[804]	LT       	0 R3 K16 ; if R3 >= 1.000000 then PC := 57
	40	[804]	JMP      	57 ; PC := 57
	41	[805]	GETGLOBAL	R4 K17 ; R4 := 0xcbd666e1
	42	[805]	LOADK    	R5 := 0.000000
	43	[805]	CALL     	R4 2 1 ; R4(R5)
	44	[806]	GETGLOBAL	R4 K18 ; R4 := 0x42dcc9f5
	45	[806]	GETGLOBAL	R5 K19 ; R5 := 0x67652851
	46	[806]	CALL     	R5 1 2 ; R5 := R5()
	47	[806]	DIV      	R5 R5 K20 ; R5 := R5 / 3.000000
	48	[806]	ADD      	R5 R3 R5 ; R5 := R3 + R5
	49	[806]	LOADK    	R6 := 0.000000
	50	[806]	LOADK    	R7 := 1.000000
	51	[806]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	52	[806]	MOVE     	R3 R4 ; R3 := R4
	53	[807]	SELF     	R4 R2 K21 ; R5 := R2; R4 := R2[0xb6df3e50]
	54	[807]	UNM      	R6 R3 ; R6 := ^ R3
	55	[807]	CALL     	R4 3 1 ; R4(R5,R6)
	56	[807]	JMP      	39 ; PC := 39
	57	[810]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	58	[810]	GETGLOBAL	R5 K1 ; R5 := 0xe7f2b02f
	59	[810]	CALL     	R4 2 2 ; R4 := R4(R5)
	60	[810]	TEST     	R4 1 ; if R4 then PC := 68
	61	[810]	JMP      	68 ; PC := 68
	62	[810]	GETGLOBAL	R4 K1 ; R4 := 0xe7f2b02f
	63	[810]	SELF     	R4 R4 K22 ; R5 := R4; R4 := R4[0xebe2f513]
	64	[810]	CALL     	R4 2 2 ; R4 := R4(R5)
	65	[810]	LT       	0 K16 R4 ; if 1.000000 >= R4 then PC := 68
	66	[810]	JMP      	68 ; PC := 68
	67	[811]	RETURN   	R0 1 ; return 
	68	[813]	GETGLOBAL	R4 K17 ; R4 := 0xcbd666e1
	69	[813]	LOADK    	R5 := 0.000000
	70	[813]	CALL     	R4 2 1 ; R4(R5)
	71	[815]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	72	[815]	MOVE     	R5 R1 ; R5 := R1
	73	[815]	CALL     	R4 2 2 ; R4 := R4(R5)
	74	[815]	TEST     	R4 1 ; if R4 then PC := 84
	75	[815]	JMP      	84 ; PC := 84
	76	[815]	SELF     	R4 R1 K23 ; R5 := R1; R4 := R1[0xd2d3875a]
	77	[815]	CALL     	R4 2 2 ; R4 := R4(R5)
	78	[815]	TEST     	R4 1 ; if R4 then PC := 84
	79	[815]	JMP      	84 ; PC := 84
	80	[816]	GETGLOBAL	R4 K17 ; R4 := 0xcbd666e1
	81	[816]	LOADK    	R5 := 0.000000
	82	[816]	CALL     	R4 2 1 ; R4(R5)
	83	[816]	JMP      	71 ; PC := 71
	84	[818]	GETGLOBAL	R4 K24 ; R4 := 0xb009bbc6
	85	[818]	GETGLOBAL	R5 K9 ; R5 := 0x46ceb9a3
	86	[818]	CALL     	R4 2 2 ; R4 := R4(R5)
	87	[820]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	88	[820]	MOVE     	R6 R0 ; R6 := R0
	89	[820]	CALL     	R5 2 2 ; R5 := R5(R6)
	90	[820]	TEST     	R5 0 ; if not R5 then PC := 93
	91	[820]	JMP      	93 ; PC := 93
	92	[821]	RETURN   	R0 1 ; return 
	93	[824]	SELF     	R5 R0 K25 ; R6 := R0; R5 := R0[0x25a6e75e]
	94	[824]	CALL     	R5 2 2 ; R5 := R5(R6)
	95	[825]	OP_LOADBOOL	R6 0 0 ; R6 := false
	96	[826]	OP_LOADBOOL	R7 0 0 ; R7 := false
	97	[827]	SELF     	R8 R5 K26 ; R9 := R5; R8 := R5[0xe9768ed0]
	98	[827]	CALL     	R8 2 2 ; R8 := R8(R9)
	99	[828]	LOADK    	R9 := 1.000000
	100	[828]	LEN      	R10 R8 ; R10 := # R8
	101	[828]	LOADK    	R11 := 1.000000
	102	[828]	FORPREP  	R9 112 ; R9 -= R11; PC := 112
	103	[829]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	104	[829]	GETTABLE 	R13 R13 K27 ; R13 := R13["mItemType"]
	105	[829]	GETGLOBAL	R14 K9 ; R14 := 0x46ceb9a3
	106	[829]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 112
	107	[829]	JMP      	112 ; PC := 112
	108	[830]	OP_LOADBOOL	R6 1 0 ; R6 := true
	109	[831]	GETTABLE 	R13 R8 R12 ; R13 := R8[R12]
	110	[831]	GETTABLE 	R7 R13 K28 ; R7 := R13["mCompleted"]
	111	[832]	JMP      	113 ; PC := 113
	112	[828]	FORLOOP  	R9 103 ; R9 += R11; if R9 <= R10 then begin PC := 103; R12 := R9 end
	113	[836]	TEST     	R6 1 ; if R6 then PC := 122
	114	[836]	JMP      	122 ; PC := 122
	115	[837]	GETUPVAL 	R13 U1 ; R13 := U1
	116	[837]	MOVE     	R14 R0 ; R14 := R0
	117	[837]	MOVE     	R15 R4 ; R15 := R4
	118	[837]	CALL     	R13 3 1 ; R13(R14,R15)
	119	[838]	GETGLOBAL	R13 K17 ; R13 := 0xcbd666e1
	120	[838]	LOADK    	R14 := 0.000000
	121	[838]	CALL     	R13 2 1 ; R13(R14)
	122	[841]	SELF     	R13 R5 K29 ; R14 := R5; R13 := R5[0x8e7c3b5e]
	123	[841]	CALL     	R13 2 2 ; R13 := R13(R14)
	124	[841]	GETGLOBAL	R14 K9 ; R14 := 0x46ceb9a3
	125	[841]	EQ       	1 R13 R14 ; if R13 == R14 then PC := 131
	126	[841]	JMP      	131 ; PC := 131
	127	[842]	GETUPVAL 	R13 U2 ; R13 := U2
	128	[842]	MOVE     	R14 R0 ; R14 := R0
	129	[842]	MOVE     	R15 R4 ; R15 := R4
	130	[842]	CALL     	R13 3 1 ; R13(R14,R15)
	131	[845]	SELF     	R13 R4 K30 ; R14 := R4; R13 := R4[0x42700bd0]
	132	[845]	CALL     	R13 2 2 ; R13 := R13(R14)
	133	[845]	GETTABLE 	R13 R13 K16 ; R13 := R13[1.000000]
	134	[845]	GETTABLE 	R13 R13 K31 ; R13 := R13["mMainMission"]
	135	[845]	GETTABLE 	R13 R13 K32 ; R13 := R13["mKey"]
	136	[846]	SELF     	R14 R13 K10 ; R15 := R13; R14 := R13[0xed4e0128]
	137	[846]	CALL     	R14 2 2 ; R14 := R14(R15)
	138	[847]	SELF     	R15 R13 K33 ; R16 := R13; R15 := R13[0xef893aec]
	139	[847]	CALL     	R15 2 2 ; R15 := R15(R16)
	140	[848]	SELF     	R16 R4 K35 ; R17 := R4; R16 := R4[0xb4568f02]
	141	[848]	LOADK    	R18 := 0.000000
	142	[848]	TEST     	R7 0 ; if not R7 then PC := 147
	143	[848]	JMP      	147 ; PC := 147
	144	[848]	LOADK    	R19 := 1.000000
	145	[848]	TEST     	R19 1 ; if R19 then PC := 148
	146	[848]	JMP      	148 ; PC := 148
	147	[848]	LOADK    	R19 := 0.000000
	148	[848]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	149	[848]	SETTABLE 	R15 K34 R16 ; R15["difficulty"] := R16
	150	[849]	GETGLOBAL	R16 K9 ; R16 := 0x46ceb9a3
	151	[849]	SETTABLE 	R15 K36 R16 ; R15["keyChainName"] := R16
	152	[850]	GETGLOBAL	R16 K38 ; R16 := 0x7ed0a956
	153	[850]	MOVE     	R17 R14 ; R17 := R14
	154	[850]	CALL     	R16 2 2 ; R16 := R16(R17)
	155	[850]	SETTABLE 	R15 K37 R16 ; R15["levelKeyName"] := R16
	156	[852]	GETGLOBAL	R16 K3 ; R16 := _T
	157	[852]	SETTABLE 	R16 K39 K40 ; R16["StartingSoloMission"] := true
	158	[854]	GETUPVAL 	R16 U3 ; R16 := U3
	159	[854]	GETTABLE 	R16 R16 K41 ; R16 := R16[0xe05d242d]
	160	[854]	GETGLOBAL	R17 K42 ; R17 := 0x0469f296
	161	[854]	MOVE     	R18 R14 ; R18 := R14
	162	[854]	GETUPVAL 	R19 U0 ; R19 := U0
	163	[854]	GETTABLE 	R19 R19 K43 ; R19 := R19["KEY_TAG"]
	164	[854]	CONCAT   	R18 R18 R19 ; R18 := R18 .. R19
	165	[854]	CALL     	R17 2 2 ; R17 := R17(R18)
	166	[854]	MOVE     	R18 R15 ; R18 := R15
	167	[854]	GETTABLE 	R19 R15 K37 ; R19 := R15["levelKeyName"]
	168	[854]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	169	[855]	RETURN   	R0 1 ; return 

function #18 <?:857,902> (114 instructions, 456 bytes at 00000160F80115C0)
0 params, 6 slots, 1 upvalue, 0 locals, 27 constants, 0 functions
	1	[858]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[858]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[858]	GETTABLE 	R1 R1 K2 ; R1 := R1["curTransmission"]
	4	[858]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[858]	TEST     	R0 1 ; if R0 then PC := 13
	6	[858]	JMP      	13 ; PC := 13
	7	[859]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[859]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xa559eb32]
	9	[859]	CALL     	R0 1 1 ; R0()
	10	[860]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[860]	GETTABLE 	R0 R0 K4 ; R0 := R0[0xfe0d9469]
	12	[860]	CALL     	R0 1 1 ; R0()
	13	[863]	GETGLOBAL	R0 K1 ; R0 := _T
	14	[863]	SETTABLE 	R0 K5 K6 ; R0["pauseTransmissions"] := true
	15	[864]	GETGLOBAL	R0 K7 ; R0 := 0xcbd666e1
	16	[864]	LOADK    	R1 := 2.500000
	17	[864]	CALL     	R0 2 1 ; R0(R1)
	18	[866]	GETGLOBAL	R0 K8 ; R0 := 0x9ba7909f
	19	[866]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0xbcfb64ab]
	20	[866]	GETGLOBAL	R2 K10 ; R2 := 0x7ed0a956
	21	[866]	LOADK    	R3 K11 ; R3 := "/Lotus/Interface/Background.swf"
	22	[866]	CALL     	R2 2 0 ; R2,... := R2(R3)
	23	[866]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	24	[867]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	25	[867]	MOVE     	R2 R0 ; R2 := R0
	26	[867]	CALL     	R1 2 2 ; R1 := R1(R2)
	27	[867]	TEST     	R1 0 ; if not R1 then PC := 30
	28	[867]	JMP      	30 ; PC := 30
	29	[868]	RETURN   	R0 1 ; return 
	30	[870]	SELF     	R1 R0 K12 ; R2 := R0; R1 := R0[0xe4162eed]
	31	[870]	LOADK    	R3 K13 ; R3 := "QuestCompleted"
	32	[870]	GETGLOBAL	R4 K14 ; R4 := 0x46ceb9a3
	33	[870]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0xed4e0128]
	34	[870]	CALL     	R4 2 0 ; R4,... := R4(R5)
	35	[870]	CALL     	R1 0 1 ; R1(R2,...)
	36	[871]	GETGLOBAL	R1 K1 ; R1 := _T
	37	[871]	SETTABLE 	R1 K16 K17 ; R1["BlockTransmissionsFromSender"] := "/Lotus/Language/Bosses/Lotus"
	38	[873]	GETGLOBAL	R1 K8 ; R1 := 0x9ba7909f
	39	[873]	SELF     	R1 R1 K18 ; R2 := R1; R1 := R1[0x5374b92e]
	40	[873]	GETGLOBAL	R3 K19 ; R3 := 0x0032441c
	41	[873]	GETTABLE 	R3 R3 K20 ; R3 := R3["UIMovie_EndOfQuestMovie"]
	42	[873]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	43	[873]	TEST     	R1 1 ; if R1 then PC := 49
	44	[873]	JMP      	49 ; PC := 49
	45	[874]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	46	[874]	LOADK    	R2 := 0.000000
	47	[874]	CALL     	R1 2 1 ; R1(R2)
	48	[874]	JMP      	38 ; PC := 38
	49	[876]	GETGLOBAL	R1 K8 ; R1 := 0x9ba7909f
	50	[876]	SELF     	R1 R1 K18 ; R2 := R1; R1 := R1[0x5374b92e]
	51	[876]	GETGLOBAL	R3 K19 ; R3 := 0x0032441c
	52	[876]	GETTABLE 	R3 R3 K20 ; R3 := R3["UIMovie_EndOfQuestMovie"]
	53	[876]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	54	[876]	TEST     	R1 0 ; if not R1 then PC := 60
	55	[876]	JMP      	60 ; PC := 60
	56	[877]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	57	[877]	LOADK    	R2 := 0.000000
	58	[877]	CALL     	R1 2 1 ; R1(R2)
	59	[877]	JMP      	49 ; PC := 49
	60	[880]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	61	[880]	LOADK    	R2 := 1.000000
	62	[880]	CALL     	R1 2 1 ; R1(R2)
	63	[882]	GETGLOBAL	R1 K1 ; R1 := _T
	64	[882]	SETTABLE 	R1 K5 K21 ; R1["pauseTransmissions"] := nil
	65	[884]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	66	[884]	GETGLOBAL	R2 K1 ; R2 := _T
	67	[884]	GETTABLE 	R2 R2 K2 ; R2 := R2["curTransmission"]
	68	[884]	CALL     	R1 2 2 ; R1 := R1(R2)
	69	[884]	TEST     	R1 1 ; if R1 then PC := 80
	70	[884]	JMP      	80 ; PC := 80
	71	[885]	GETUPVAL 	R1 U0 ; R1 := U0
	72	[885]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xa559eb32]
	73	[885]	CALL     	R1 1 1 ; R1()
	74	[886]	GETUPVAL 	R1 U0 ; R1 := U0
	75	[886]	GETTABLE 	R1 R1 K4 ; R1 := R1[0xfe0d9469]
	76	[886]	CALL     	R1 1 1 ; R1()
	77	[887]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	78	[887]	LOADK    	R2 := 0.000000
	79	[887]	CALL     	R1 2 1 ; R1(R2)
	80	[890]	GETUPVAL 	R1 U0 ; R1 := U0
	81	[890]	GETTABLE 	R1 R1 K22 ; R1 := R1[0x1f60d532]
	82	[890]	GETGLOBAL	R2 K23 ; R2 := 0xf434f9ce
	83	[890]	SELF     	R2 R2 K24 ; R3 := R2; R2 := R2[0x10c9eef2]
	84	[890]	GETGLOBAL	R4 K25 ; R4 := 0x0469f296
	85	[890]	LOADK    	R5 K26 ; R5 := "OrdisLotusMissing"
	86	[890]	CALL     	R4 2 0 ; R4,... := R4(R5)
	87	[890]	CALL     	R2 0 0 ; R2,... := R2(R3,...)
	88	[890]	CALL     	R1 0 1 ; R1(R2,...)
	89	[892]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	90	[892]	GETGLOBAL	R2 K1 ; R2 := _T
	91	[892]	GETTABLE 	R2 R2 K2 ; R2 := R2["curTransmission"]
	92	[892]	CALL     	R1 2 2 ; R1 := R1(R2)
	93	[892]	TEST     	R1 0 ; if not R1 then PC := 99
	94	[892]	JMP      	99 ; PC := 99
	95	[893]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	96	[893]	LOADK    	R2 := 0.000000
	97	[893]	CALL     	R1 2 1 ; R1(R2)
	98	[893]	JMP      	89 ; PC := 89
	99	[895]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	100	[895]	GETGLOBAL	R2 K1 ; R2 := _T
	101	[895]	GETTABLE 	R2 R2 K2 ; R2 := R2["curTransmission"]
	102	[895]	CALL     	R1 2 2 ; R1 := R1(R2)
	103	[895]	TEST     	R1 1 ; if R1 then PC := 109
	104	[895]	JMP      	109 ; PC := 109
	105	[896]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	106	[896]	LOADK    	R2 := 0.000000
	107	[896]	CALL     	R1 2 1 ; R1(R2)
	108	[896]	JMP      	99 ; PC := 99
	109	[899]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	110	[899]	LOADK    	R2 := 3.000000
	111	[899]	CALL     	R1 2 1 ; R1(R2)
	112	[901]	GETGLOBAL	R1 K1 ; R1 := _T
	113	[901]	SETTABLE 	R1 K16 K21 ; R1["BlockTransmissionsFromSender"] := nil
	114	[902]	RETURN   	R0 1 ; return 

function #19 <?:904,1103> (473 instructions, 1892 bytes at 00000160F8011CA0)
1 param, 48 slots, 8 upvalues, 0 locals, 68 constants, 2 functions
	1	[905]	GETGLOBAL	R1 K0 ; R1 := 0xcbd666e1
	2	[905]	LOADK    	R2 := 0.500000
	3	[905]	CALL     	R1 2 1 ; R1(R2)
	4	[907]	GETGLOBAL	R1 K1 ; R1 := 0x0032441c
	5	[907]	GETTABLE 	R1 R1 K2 ; R1 := R1["ApostasyJustCompleted"]
	6	[907]	TEST     	R1 0 ; if not R1 then PC := 19
	7	[907]	JMP      	19 ; PC := 19
	8	[908]	GETGLOBAL	R1 K1 ; R1 := 0x0032441c
	9	[908]	SETTABLE 	R1 K2 K3 ; R1["ApostasyJustCompleted"] := nil
	10	[909]	GETGLOBAL	R1 K4 ; R1 := 0x89326c93
	11	[909]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x78298275]
	12	[909]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[909]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xd5f7912b]
	14	[909]	GETGLOBAL	R3 K7 ; R3 := 0x0469f296
	15	[909]	LOADK    	R4 K2 ; R4 := "ApostasyJustCompleted"
	16	[909]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[909]	OP_LOADBOOL	R4 0 0 ; R4 := false
	18	[909]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	19	[912]	GETGLOBAL	R1 K4 ; R1 := 0x89326c93
	20	[912]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xc7fcada9]
	21	[912]	GETGLOBAL	R3 K7 ; R3 := 0x0469f296
	22	[912]	LOADK    	R4 K9 ; R4 := "LotusHelmet"
	23	[912]	CALL     	R3 2 0 ; R3,... := R3(R4)
	24	[912]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	25	[925]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	26	[925]	MOVE     	R0 R1 ; R0 := R1
	27	[927]	SELF     	R3 R0 K10 ; R4 := R0; R3 := R0[0xc9f6a7d7]
	28	[927]	GETGLOBAL	R5 K11 ; R5 := gSequencerType
	29	[927]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	30	[928]	SELF     	R4 R0 K10 ; R5 := R0; R4 := R0[0xc9f6a7d7]
	31	[928]	GETGLOBAL	R6 K12 ; R6 := gDecorationType
	32	[928]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	33	[929]	GETGLOBAL	R5 K4 ; R5 := 0x89326c93
	34	[929]	SELF     	R5 R5 K13 ; R6 := R5; R5 := R5[0x4e5939a5]
	35	[929]	GETUPVAL 	R7 U0 ; R7 := U0
	36	[929]	SELF     	R8 R0 K14 ; R9 := R0; R8 := R0[0xd1586535]
	37	[929]	CALL     	R8 2 2 ; R8 := R8(R9)
	38	[929]	LOADK    	R9 := 5.000000
	39	[929]	LOADNIL  	R10 R11 ; R10 := R11 := nil
	40	[929]	CALL     	R5 7 2 ; R5 := R5(R6,R7,R8,R9,R10,R11)
	41	[944]	CLOSURE  	R6 1 ; R6 := closure(Function #2)
	42	[944]	MOVE     	R0 R0 ; R0 := R0
	43	[944]	MOVE     	R0 R3 ; R0 := R3
	44	[944]	MOVE     	R0 R4 ; R0 := R4
	45	[944]	MOVE     	R0 R5 ; R0 := R5
	46	[946]	MOVE     	R7 R2 ; R7 := R2
	47	[946]	OP_LOADBOOL	R8 0 0 ; R8 := false
	48	[946]	CALL     	R7 2 1 ; R7(R8)
	49	[947]	MOVE     	R7 R6 ; R7 := R6
	50	[947]	OP_LOADBOOL	R8 0 0 ; R8 := false
	51	[947]	CALL     	R7 2 1 ; R7(R8)
	52	[949]	GETGLOBAL	R7 K4 ; R7 := 0x89326c93
	53	[949]	SELF     	R7 R7 K15 ; R8 := R7; R7 := R7[0x18d05d30]
	54	[949]	CALL     	R7 2 2 ; R7 := R7(R8)
	55	[949]	TEST     	R7 1 ; if R7 then PC := 58
	56	[949]	JMP      	58 ; PC := 58
	57	[950]	RETURN   	R0 1 ; return 
	58	[953]	GETGLOBAL	R7 K16 ; R7 := _T
	59	[953]	GETTABLE 	R7 R7 K17 ; R7 := R7["syncingInventory"]
	60	[953]	EQ       	1 R7 K3 ; if R7 == nil then PC := 66
	61	[953]	JMP      	66 ; PC := 66
	62	[953]	GETGLOBAL	R7 K16 ; R7 := _T
	63	[953]	GETTABLE 	R7 R7 K17 ; R7 := R7["syncingInventory"]
	64	[953]	EQ       	0 R7 K18 ; if R7 ~= true then PC := 70
	65	[953]	JMP      	70 ; PC := 70
	66	[954]	GETGLOBAL	R7 K0 ; R7 := 0xcbd666e1
	67	[954]	LOADK    	R8 := 0.000000
	68	[954]	CALL     	R7 2 1 ; R7(R8)
	69	[954]	JMP      	58 ; PC := 58
	70	[957]	GETGLOBAL	R7 K19 ; R7 := 0x76ea806b
	71	[957]	SELF     	R7 R7 K20 ; R8 := R7; R7 := R7[0x3f3ae64c]
	72	[957]	LOADK    	R9 := 0.000000
	73	[957]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	74	[958]	GETGLOBAL	R8 K21 ; R8 := 0x7b998233
	75	[958]	MOVE     	R9 R7 ; R9 := R7
	76	[958]	CALL     	R8 2 2 ; R8 := R8(R9)
	77	[958]	TEST     	R8 0 ; if not R8 then PC := 88
	78	[958]	JMP      	88 ; PC := 88
	79	[959]	GETGLOBAL	R8 K0 ; R8 := 0xcbd666e1
	80	[959]	LOADK    	R9 := 0.000000
	81	[959]	CALL     	R8 2 1 ; R8(R9)
	82	[960]	GETGLOBAL	R8 K19 ; R8 := 0x76ea806b
	83	[960]	SELF     	R8 R8 K20 ; R9 := R8; R8 := R8[0x3f3ae64c]
	84	[960]	LOADK    	R10 := 0.000000
	85	[960]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	86	[960]	MOVE     	R7 R8 ; R7 := R8
	87	[960]	JMP      	74 ; PC := 74
	88	[962]	SELF     	R8 R7 K22 ; R9 := R7; R8 := R7[0x80563238]
	89	[962]	CALL     	R8 2 2 ; R8 := R8(R9)
	90	[963]	GETGLOBAL	R9 K21 ; R9 := 0x7b998233
	91	[963]	MOVE     	R10 R8 ; R10 := R8
	92	[963]	CALL     	R9 2 2 ; R9 := R9(R10)
	93	[963]	TEST     	R9 0 ; if not R9 then PC := 102
	94	[963]	JMP      	102 ; PC := 102
	95	[964]	GETGLOBAL	R9 K0 ; R9 := 0xcbd666e1
	96	[964]	LOADK    	R10 := 0.000000
	97	[964]	CALL     	R9 2 1 ; R9(R10)
	98	[965]	SELF     	R9 R7 K22 ; R10 := R7; R9 := R7[0x80563238]
	99	[965]	CALL     	R9 2 2 ; R9 := R9(R10)
	100	[965]	MOVE     	R8 R9 ; R8 := R9
	101	[965]	JMP      	90 ; PC := 90
	102	[967]	SELF     	R9 R8 K23 ; R10 := R8; R9 := R8[0x25a6e75e]
	103	[967]	CALL     	R9 2 2 ; R9 := R9(R10)
	104	[968]	GETGLOBAL	R10 K21 ; R10 := 0x7b998233
	105	[968]	MOVE     	R11 R9 ; R11 := R9
	106	[968]	CALL     	R10 2 2 ; R10 := R10(R11)
	107	[968]	TEST     	R10 0 ; if not R10 then PC := 116
	108	[968]	JMP      	116 ; PC := 116
	109	[969]	GETGLOBAL	R10 K0 ; R10 := 0xcbd666e1
	110	[969]	LOADK    	R11 := 0.000000
	111	[969]	CALL     	R10 2 1 ; R10(R11)
	112	[970]	SELF     	R10 R8 K23 ; R11 := R8; R10 := R8[0x25a6e75e]
	113	[970]	CALL     	R10 2 2 ; R10 := R10(R11)
	114	[970]	MOVE     	R9 R10 ; R9 := R10
	115	[970]	JMP      	104 ; PC := 104
	116	[973]	OP_LOADBOOL	R10 0 0 ; R10 := false
	117	[974]	OP_LOADBOOL	R11 0 0 ; R11 := false
	118	[975]	OP_LOADBOOL	R12 0 0 ; R12 := false
	119	[976]	OP_LOADBOOL	R13 0 0 ; R13 := false
	120	[977]	OP_LOADBOOL	R14 0 0 ; R14 := false
	121	[979]	SELF     	R15 R9 K24 ; R16 := R9; R15 := R9[0xe9768ed0]
	122	[979]	CALL     	R15 2 2 ; R15 := R15(R16)
	123	[980]	LOADK    	R16 := 1.000000
	124	[980]	LEN      	R17 R15 ; R17 := # R15
	125	[980]	LOADK    	R18 := 1.000000
	126	[980]	FORPREP  	R16 158 ; R16 -= R18; PC := 158
	127	[981]	GETTABLE 	R20 R15 R19 ; R20 := R15[R19]
	128	[982]	GETTABLE 	R21 R20 K25 ; R21 := R20["mItemType"]
	129	[983]	GETGLOBAL	R22 K26 ; R22 := 0x46ceb9a3
	130	[983]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 144
	131	[983]	JMP      	144 ; PC := 144
	132	[984]	OP_LOADBOOL	R11 1 0 ; R11 := true
	133	[985]	GETTABLE 	R22 R20 K27 ; R22 := R20["mProgress"]
	134	[985]	TESTSET  	R14 R22 0 ; if not R22 then PC := 143 else R14 := R22 
	135	[985]	JMP      	143 ; PC := 143
	136	[985]	GETTABLE 	R22 R20 K27 ; R22 := R20["mProgress"]
	137	[985]	GETTABLE 	R22 R22 K28 ; R22 := R22[1.000000]
	138	[985]	GETTABLE 	R22 R22 K29 ; R22 := R22["mCompletion"]
	139	[985]	LE       	1 K30 R22 ; if 0.000000 <= R22 then PC := 142
	140	[985]	JMP      	142 ; PC := 142
	141	[985]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 142
	142	[985]	OP_LOADBOOL	R14 1 0 ; R14 := true
	143	[985]	JMP      	158 ; PC := 158
	144	[986]	GETUPVAL 	R22 U1 ; R22 := U1
	145	[986]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 149
	146	[986]	JMP      	149 ; PC := 149
	147	[987]	GETTABLE 	R10 R20 K31 ; R10 := R20["mCompleted"]
	148	[987]	JMP      	158 ; PC := 158
	149	[988]	GETUPVAL 	R22 U2 ; R22 := U2
	150	[988]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 154
	151	[988]	JMP      	154 ; PC := 154
	152	[989]	GETTABLE 	R12 R20 K31 ; R12 := R20["mCompleted"]
	153	[989]	JMP      	158 ; PC := 158
	154	[990]	GETUPVAL 	R22 U3 ; R22 := U3
	155	[990]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 158
	156	[990]	JMP      	158 ; PC := 158
	157	[991]	OP_LOADBOOL	R13 1 0 ; R13 := true
	158	[980]	FORLOOP  	R16 127 ; R16 += R18; if R16 <= R17 then begin PC := 127; R19 := R16 end
	159	[995]	TEST     	R10 1 ; if R10 then PC := 162
	160	[995]	JMP      	162 ; PC := 162
	161	[996]	RETURN   	R0 1 ; return 
	162	[999]	TEST     	R12 0 ; if not R12 then PC := 323
	163	[999]	JMP      	323 ; PC := 323
	164	[1000]	SELF     	R22 R8 K23 ; R23 := R8; R22 := R8[0x25a6e75e]
	165	[1000]	CALL     	R22 2 2 ; R22 := R22(R23)
	166	[1000]	SELF     	R22 R22 K32 ; R23 := R22; R22 := R22[0x8e7c3b5e]
	167	[1000]	CALL     	R22 2 2 ; R22 := R22(R23)
	168	[1001]	LOADK    	R23 := -1.000000
	169	[1002]	GETGLOBAL	R24 K21 ; R24 := 0x7b998233
	170	[1002]	MOVE     	R25 R22 ; R25 := R22
	171	[1002]	CALL     	R24 2 2 ; R24 := R24(R25)
	172	[1002]	TEST     	R24 1 ; if R24 then PC := 206
	173	[1002]	JMP      	206 ; PC := 206
	174	[1003]	GETGLOBAL	R24 K33 ; R24 := 0xbd496aa1
	175	[1003]	GETTABLE 	R24 R24 K34 ; R24 := R24[0x42645da3]
	176	[1003]	NEWTABLE 	R25 0 0 ; R25 := {}
	177	[1003]	SELF     	R26 R22 K35 ; R27 := R22; R26 := R22[0xed4e0128]
	178	[1003]	CALL     	R26 2 0 ; R26,... := R26(R27)
	179	[1003]	SETLIST  	R25 0 1 ; R25[(1-1)*FPF+i] := R(25+i), 1 <= i <= 0
	180	[1003]	OP_LOADBOOL	R26 1 0 ; R26 := true
	181	[1003]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	182	[1004]	GETGLOBAL	R25 K21 ; R25 := 0x7b998233
	183	[1004]	MOVE     	R26 R24 ; R26 := R24
	184	[1004]	CALL     	R25 2 2 ; R25 := R25(R26)
	185	[1004]	TEST     	R25 1 ; if R25 then PC := 195
	186	[1004]	JMP      	195 ; PC := 195
	187	[1004]	SELF     	R25 R24 K36 ; R26 := R24; R25 := R24[0xd2d3875a]
	188	[1004]	CALL     	R25 2 2 ; R25 := R25(R26)
	189	[1004]	TEST     	R25 1 ; if R25 then PC := 195
	190	[1004]	JMP      	195 ; PC := 195
	191	[1005]	GETGLOBAL	R25 K0 ; R25 := 0xcbd666e1
	192	[1005]	LOADK    	R26 := 0.000000
	193	[1005]	CALL     	R25 2 1 ; R25(R26)
	194	[1005]	JMP      	182 ; PC := 182
	195	[1007]	GETGLOBAL	R25 K37 ; R25 := 0xb009bbc6
	196	[1007]	MOVE     	R26 R22 ; R26 := R22
	197	[1007]	CALL     	R25 2 2 ; R25 := R25(R26)
	198	[1007]	MOVE     	R22 R25 ; R22 := R25
	199	[1008]	GETUPVAL 	R25 U4 ; R25 := U4
	200	[1008]	GETTABLE 	R25 R25 K38 ; R25 := R25[0xa5a62f78]
	201	[1008]	MOVE     	R26 R8 ; R26 := R8
	202	[1008]	MOVE     	R27 R22 ; R27 := R22
	203	[1008]	OP_LOADBOOL	R28 0 0 ; R28 := false
	204	[1008]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	205	[1008]	MOVE     	R23 R25 ; R23 := R25
	206	[1010]	TEST     	R13 0 ; if not R13 then PC := 213
	207	[1010]	JMP      	213 ; PC := 213
	208	[1010]	GETUPVAL 	R25 U3 ; R25 := U3
	209	[1010]	EQ       	0 R22 R25 ; if R22 ~= R25 then PC := 323
	210	[1010]	JMP      	323 ; PC := 323
	211	[1010]	EQ       	0 R23 K28 ; if R23 ~= 1.000000 then PC := 323
	212	[1010]	JMP      	323 ; PC := 323
	213	[1011]	OP_LOADBOOL	R14 0 0 ; R14 := false
	214	[1012]	GETGLOBAL	R25 K4 ; R25 := 0x89326c93
	215	[1012]	SELF     	R25 R25 K39 ; R26 := R25; R25 := R25[0x46a0ebf5]
	216	[1012]	GETGLOBAL	R27 K7 ; R27 := 0x0469f296
	217	[1012]	LOADK    	R28 K40 ; R28 := "ChimeraHelmetTwinPoint"
	218	[1012]	CALL     	R27 2 0 ; R27,... := R27(R28)
	219	[1012]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	220	[1013]	SELF     	R26 R25 K14 ; R27 := R25; R26 := R25[0xd1586535]
	221	[1013]	CALL     	R26 2 2 ; R26 := R26(R27)
	222	[1013]	SELF     	R27 R25 K41 ; R28 := R25; R27 := R25[0xcb3851b8]
	223	[1013]	CALL     	R27 2 2 ; R27 := R27(R28)
	224	[1014]	GETGLOBAL	R28 K4 ; R28 := 0x89326c93
	225	[1014]	SELF     	R28 R28 K42 ; R29 := R28; R28 := R28[0x05909209]
	226	[1014]	GETGLOBAL	R30 K43 ; R30 := 0x3b52d235
	227	[1014]	MOVE     	R31 R26 ; R31 := R26
	228	[1014]	MOVE     	R32 R27 ; R32 := R27
	229	[1014]	CALL     	R28 5 2 ; R28 := R28(R29,R30,R31,R32)
	230	[1015]	GETGLOBAL	R29 K0 ; R29 := 0xcbd666e1
	231	[1015]	LOADK    	R30 := 0.000000
	232	[1015]	CALL     	R29 2 1 ; R29(R30)
	233	[1016]	GETGLOBAL	R29 K21 ; R29 := 0x7b998233
	234	[1016]	MOVE     	R30 R28 ; R30 := R28
	235	[1016]	CALL     	R29 2 2 ; R29 := R29(R30)
	236	[1016]	TEST     	R29 1 ; if R29 then PC := 323
	237	[1016]	JMP      	323 ; PC := 323
	238	[1017]	SELF     	R29 R28 K44 ; R30 := R28; R29 := R28[0x905bb2bd]
	239	[1017]	CALL     	R29 2 2 ; R29 := R29(R30)
	240	[1018]	LEN      	R30 R29 ; R30 := # R29
	241	[1018]	LT       	0 R30 K45 ; if R30 >= 2.000000 then PC := 260
	242	[1018]	JMP      	260 ; PC := 260
	243	[1018]	GETGLOBAL	R30 K21 ; R30 := 0x7b998233
	244	[1018]	MOVE     	R31 R28 ; R31 := R28
	245	[1018]	CALL     	R30 2 2 ; R30 := R30(R31)
	246	[1018]	TEST     	R30 1 ; if R30 then PC := 260
	247	[1018]	JMP      	260 ; PC := 260
	248	[1019]	GETGLOBAL	R30 K0 ; R30 := 0xcbd666e1
	249	[1019]	LOADK    	R31 K46 ; R31 := 0.100000
	250	[1019]	CALL     	R30 2 1 ; R30(R31)
	251	[1020]	GETGLOBAL	R30 K21 ; R30 := 0x7b998233
	252	[1020]	MOVE     	R31 R28 ; R31 := R28
	253	[1020]	CALL     	R30 2 2 ; R30 := R30(R31)
	254	[1020]	TEST     	R30 1 ; if R30 then PC := 240
	255	[1020]	JMP      	240 ; PC := 240
	256	[1021]	SELF     	R30 R28 K44 ; R31 := R28; R30 := R28[0x905bb2bd]
	257	[1021]	CALL     	R30 2 2 ; R30 := R30(R31)
	258	[1021]	MOVE     	R29 R30 ; R29 := R30
	259	[1022]	JMP      	240 ; PC := 240
	260	[1024]	GETGLOBAL	R30 K21 ; R30 := 0x7b998233
	261	[1024]	MOVE     	R31 R28 ; R31 := R28
	262	[1024]	CALL     	R30 2 2 ; R30 := R30(R31)
	263	[1024]	TEST     	R30 1 ; if R30 then PC := 277
	264	[1024]	JMP      	277 ; PC := 277
	265	[1025]	SELF     	R30 R28 K10 ; R31 := R28; R30 := R28[0xc9f6a7d7]
	266	[1025]	GETGLOBAL	R32 K47 ; R32 := 0x2f4de776
	267	[1025]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	268	[1026]	GETGLOBAL	R31 K21 ; R31 := 0x7b998233
	269	[1026]	MOVE     	R32 R30 ; R32 := R30
	270	[1026]	CALL     	R31 2 2 ; R31 := R31(R32)
	271	[1026]	TEST     	R31 1 ; if R31 then PC := 277
	272	[1026]	JMP      	277 ; PC := 277
	273	[1027]	GETGLOBAL	R31 K4 ; R31 := 0x89326c93
	274	[1027]	SELF     	R31 R31 K48 ; R32 := R31; R31 := R31[0x59c96e77]
	275	[1027]	MOVE     	R33 R30 ; R33 := R30
	276	[1027]	CALL     	R31 3 1 ; R31(R32,R33)
	277	[1030]	GETGLOBAL	R31 K49 ; R31 := 0xc8802016
	278	[1030]	MOVE     	R32 R29 ; R32 := R29
	279	[1030]	CALL     	R31 2 4 ; R31,R32,R33 := R31(R32)
	280	[1030]	JMP      	321 ; PC := 321
	281	[1031]	GETGLOBAL	R36 K21 ; R36 := 0x7b998233
	282	[1031]	MOVE     	R37 R35 ; R37 := R35
	283	[1031]	CALL     	R36 2 2 ; R36 := R36(R37)
	284	[1031]	TEST     	R36 1 ; if R36 then PC := 321
	285	[1031]	JMP      	321 ; PC := 321
	286	[1031]	SELF     	R36 R35 K50 ; R37 := R35; R36 := R35[0xf2deaf69]
	287	[1031]	GETGLOBAL	R38 K12 ; R38 := gDecorationType
	288	[1031]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	289	[1031]	TEST     	R36 0 ; if not R36 then PC := 321
	290	[1031]	JMP      	321 ; PC := 321
	291	[1032]	SELF     	R36 R35 K51 ; R37 := R35; R36 := R35[0xe860af53]
	292	[1032]	CALL     	R36 2 2 ; R36 := R36(R37)
	293	[1033]	SELF     	R37 R36 K35 ; R38 := R36; R37 := R36[0xed4e0128]
	294	[1033]	CALL     	R37 2 2 ; R37 := R37(R38)
	295	[1033]	TEST     	R37 1 ; if R37 then PC := 298
	296	[1033]	JMP      	298 ; PC := 298
	297	[1033]	LOADK    	R37 K52 ; R37 := ""
	298	[1034]	GETGLOBAL	R38 K21 ; R38 := 0x7b998233
	299	[1034]	MOVE     	R39 R36 ; R39 := R36
	300	[1034]	CALL     	R38 2 2 ; R38 := R38(R39)
	301	[1034]	TEST     	R38 1 ; if R38 then PC := 321
	302	[1034]	JMP      	321 ; PC := 321
	303	[1034]	GETGLOBAL	R38 K53 ; R38 := 0x7f5022cf
	304	[1034]	GETTABLE 	R38 R38 K54 ; R38 := R38[0xa5c556b9]
	305	[1034]	MOVE     	R39 R37 ; R39 := R37
	306	[1034]	LOADK    	R40 K55 ; R40 := "[Hh]ood"
	307	[1034]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	308	[1034]	EQ       	0 R38 K3 ; if R38 ~= nil then PC := 317
	309	[1034]	JMP      	317 ; PC := 317
	310	[1034]	GETGLOBAL	R38 K53 ; R38 := 0x7f5022cf
	311	[1034]	GETTABLE 	R38 R38 K54 ; R38 := R38[0xa5c556b9]
	312	[1034]	MOVE     	R39 R37 ; R39 := R37
	313	[1034]	LOADK    	R40 K56 ; R40 := "[Mm]ask"
	314	[1034]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	315	[1034]	EQ       	1 R38 K3 ; if R38 == nil then PC := 321
	316	[1034]	JMP      	321 ; PC := 321
	317	[1035]	GETGLOBAL	R38 K4 ; R38 := 0x89326c93
	318	[1035]	SELF     	R38 R38 K48 ; R39 := R38; R38 := R38[0x59c96e77]
	319	[1035]	MOVE     	R40 R35 ; R40 := R35
	320	[1035]	CALL     	R38 3 1 ; R38(R39,R40)
	321	[1030]	TFORLOOP 	R31 2 ; R34,R35 := R31(R32,R33); if R34 ~= nil then begin PC = 281; R33 := R34 end
	322	[1037]	JMP      	281 ; PC := 281
	323	[1043]	TEST     	R14 0 ; if not R14 then PC := 328
	324	[1043]	JMP      	328 ; PC := 328
	325	[1044]	MOVE     	R38 R2 ; R38 := R2
	326	[1044]	OP_LOADBOOL	R39 1 0 ; R39 := true
	327	[1044]	CALL     	R38 2 1 ; R38(R39)
	328	[1047]	LOADNIL  	R38 R38 ; R38 := nil
	329	[1049]	GETUPVAL 	R39 U5 ; R39 := U5
	330	[1049]	TEST     	R39 1 ; if R39 then PC := 338
	331	[1049]	JMP      	338 ; PC := 338
	332	[1050]	GETGLOBAL	R39 K57 ; R39 := 0x11a19c5e
	333	[1050]	MOVE     	R40 R0 ; R40 := R0
	334	[1050]	LOADK    	R41 K58 ; R41 := "OnFinished"
	335	[1050]	CALL     	R39 3 1 ; R39(R40,R41)
	336	[1051]	OP_LOADBOOL	R39 1 0 ; R39 := true
	337	[1051]	SETUPVAL 	R39 U5 ; U5 := R39
	338	[1054]	LOADNIL  	R39 R39 ; R39 := nil
	339	[1055]	GETGLOBAL	R40 K21 ; R40 := 0x7b998233
	340	[1055]	GETGLOBAL	R41 K59 ; R41 := 0xe7f2b02f
	341	[1055]	CALL     	R40 2 2 ; R40 := R40(R41)
	342	[1055]	TEST     	R40 0 ; if not R40 then PC := 347
	343	[1055]	JMP      	347 ; PC := 347
	344	[1055]	LOADK    	R40 := 1.000000
	345	[1055]	TEST     	R40 1 ; if R40 then PC := 350
	346	[1055]	JMP      	350 ; PC := 350
	347	[1055]	GETGLOBAL	R40 K59 ; R40 := 0xe7f2b02f
	348	[1055]	SELF     	R40 R40 K60 ; R41 := R40; R40 := R40[0xebe2f513]
	349	[1055]	CALL     	R40 2 2 ; R40 := R40(R41)
	350	[1056]	OP_LOADBOOL	R41 0 0 ; R41 := false
	351	[1057]	OP_LOADBOOL	R42 0 0 ; R42 := false
	352	[1060]	GETGLOBAL	R43 K0 ; R43 := 0xcbd666e1
	353	[1060]	LOADK    	R44 := 0.000000
	354	[1060]	CALL     	R43 2 1 ; R43(R44)
	355	[1062]	GETGLOBAL	R43 K21 ; R43 := 0x7b998233
	356	[1062]	MOVE     	R44 R9 ; R44 := R9
	357	[1062]	CALL     	R43 2 2 ; R43 := R43(R44)
	358	[1062]	TEST     	R43 0 ; if not R43 then PC := 364
	359	[1062]	JMP      	364 ; PC := 364
	360	[1063]	MOVE     	R43 R6 ; R43 := R6
	361	[1063]	OP_LOADBOOL	R44 0 0 ; R44 := false
	362	[1063]	CALL     	R43 2 1 ; R43(R44)
	363	[1064]	RETURN   	R0 1 ; return 
	364	[1067]	GETGLOBAL	R43 K16 ; R43 := _T
	365	[1067]	GETTABLE 	R43 R43 K61 ; R43 := R43["ReinitializeApostasyActions"]
	366	[1067]	TEST     	R43 0 ; if not R43 then PC := 377
	367	[1067]	JMP      	377 ; PC := 377
	368	[1068]	GETGLOBAL	R43 K16 ; R43 := _T
	369	[1068]	SETTABLE 	R43 K61 K3 ; R43["ReinitializeApostasyActions"] := nil
	370	[1069]	MOVE     	R43 R6 ; R43 := R6
	371	[1069]	OP_LOADBOOL	R44 0 0 ; R44 := false
	372	[1069]	CALL     	R43 2 1 ; R43(R44)
	373	[1070]	GETUPVAL 	R43 U6 ; R43 := U6
	374	[1070]	MOVE     	R44 R0 ; R44 := R0
	375	[1070]	TAILCALL 	R43 2 0 ; R43,... := R43(R44)
	376	[1070]	RETURN   	R43 0 ; return R43,... 
	377	[1073]	GETGLOBAL	R43 K21 ; R43 := 0x7b998233
	378	[1073]	GETGLOBAL	R44 K59 ; R44 := 0xe7f2b02f
	379	[1073]	CALL     	R43 2 2 ; R43 := R43(R44)
	380	[1073]	TEST     	R43 0 ; if not R43 then PC := 385
	381	[1073]	JMP      	385 ; PC := 385
	382	[1073]	LOADK    	R43 := 1.000000
	383	[1073]	TEST     	R43 1 ; if R43 then PC := 388
	384	[1073]	JMP      	388 ; PC := 388
	385	[1073]	GETGLOBAL	R43 K59 ; R43 := 0xe7f2b02f
	386	[1073]	SELF     	R43 R43 K60 ; R44 := R43; R43 := R43[0xebe2f513]
	387	[1073]	CALL     	R43 2 2 ; R43 := R43(R44)
	388	[1075]	GETGLOBAL	R44 K16 ; R44 := _T
	389	[1075]	GETTABLE 	R44 R44 K62 ; R44 := R44["questInfo"]
	390	[1075]	EQ       	0 R39 R44 ; if R39 ~= R44 then PC := 394
	391	[1075]	JMP      	394 ; PC := 394
	392	[1075]	EQ       	1 R43 R40 ; if R43 == R40 then PC := 457
	393	[1075]	JMP      	457 ; PC := 457
	394	[1076]	GETGLOBAL	R44 K0 ; R44 := 0xcbd666e1
	395	[1076]	LOADK    	R45 := 0.000000
	396	[1076]	CALL     	R44 2 1 ; R44(R45)
	397	[1077]	GETGLOBAL	R44 K16 ; R44 := _T
	398	[1077]	GETTABLE 	R39 R44 K62 ; R39 := R44["questInfo"]
	399	[1078]	MOVE     	R40 R43 ; R40 := R43
	400	[1080]	TEST     	R39 0 ; if not R39 then PC := 352
	401	[1080]	JMP      	352 ; PC := 352
	402	[1081]	GETTABLE 	R44 R39 K63 ; R44 := R39["activeQuest"]
	403	[1081]	GETGLOBAL	R45 K26 ; R45 := 0x46ceb9a3
	404	[1081]	EQ       	1 R44 R45 ; if R44 == R45 then PC := 407
	405	[1081]	JMP      	407 ; PC := 407
	406	[1081]	OP_LOADBOOL	R41 0 1 ; R41 := false; PC := 407
	407	[1081]	OP_LOADBOOL	R41 1 0 ; R41 := true
	408	[1082]	GETTABLE 	R44 R39 K64 ; R44 := R39["difficulty"]
	409	[1082]	TESTSET  	R42 R44 0 ; if not R44 then PC := 416 else R42 := R44 
	410	[1082]	JMP      	416 ; PC := 416
	411	[1082]	GETTABLE 	R44 R39 K64 ; R44 := R39["difficulty"]
	412	[1082]	LT       	1 K30 R44 ; if 0.000000 < R44 then PC := 415
	413	[1082]	JMP      	415 ; PC := 415
	414	[1082]	OP_LOADBOOL	R42 0 1 ; R42 := false; PC := 415
	415	[1082]	OP_LOADBOOL	R42 1 0 ; R42 := true
	416	[1084]	GETGLOBAL	R44 K21 ; R44 := 0x7b998233
	417	[1084]	GETGLOBAL	R45 K59 ; R45 := 0xe7f2b02f
	418	[1084]	CALL     	R44 2 2 ; R44 := R44(R45)
	419	[1084]	TEST     	R44 1 ; if R44 then PC := 428
	420	[1084]	JMP      	428 ; PC := 428
	421	[1084]	GETGLOBAL	R44 K59 ; R44 := 0xe7f2b02f
	422	[1084]	SELF     	R44 R44 K60 ; R45 := R44; R44 := R44[0xebe2f513]
	423	[1084]	CALL     	R44 2 2 ; R44 := R44(R45)
	424	[1084]	LE       	1 R44 K28 ; if R44 <= 1.000000 then PC := 427
	425	[1084]	JMP      	427 ; PC := 427
	426	[1084]	OP_LOADBOOL	R44 0 1 ; R44 := false; PC := 427
	427	[1084]	OP_LOADBOOL	R44 1 0 ; R44 := true
	428	[1085]	TESTSET  	R45 R44 0 ; if not R44 then PC := 439 else R45 := R44 
	429	[1085]	JMP      	439 ; PC := 439
	430	[1085]	TEST     	R41 0 ; if not R41 then PC := 435
	431	[1085]	JMP      	435 ; PC := 435
	432	[1085]	GETTABLE 	R45 R39 K65 ; R45 := R39["stage"]
	433	[1085]	EQ       	1 R45 K28 ; if R45 == 1.000000 then PC := 438
	434	[1085]	JMP      	438 ; PC := 438
	435	[1085]	NOT      	R45 R11 ; R45 := not R11
	436	[1085]	JMP      	439 ; PC := 439
	437	[1085]	OP_LOADBOOL	R45 0 1 ; R45 := false; PC := 438
	438	[1085]	OP_LOADBOOL	R45 1 0 ; R45 := true
	439	[1086]	EQ       	1 R38 K18 ; if R38 == true then PC := 448
	440	[1086]	JMP      	448 ; PC := 448
	441	[1086]	TEST     	R45 0 ; if not R45 then PC := 448
	442	[1086]	JMP      	448 ; PC := 448
	443	[1087]	OP_LOADBOOL	R38 1 0 ; R38 := true
	444	[1088]	MOVE     	R46 R6 ; R46 := R6
	445	[1088]	OP_LOADBOOL	R47 1 0 ; R47 := true
	446	[1088]	CALL     	R46 2 1 ; R46(R47)
	447	[1088]	JMP      	352 ; PC := 352
	448	[1089]	EQ       	1 R38 K66 ; if R38 == false then PC := 352
	449	[1089]	JMP      	352 ; PC := 352
	450	[1089]	TEST     	R45 1 ; if R45 then PC := 352
	451	[1089]	JMP      	352 ; PC := 352
	452	[1090]	OP_LOADBOOL	R38 0 0 ; R38 := false
	453	[1091]	MOVE     	R46 R6 ; R46 := R6
	454	[1091]	OP_LOADBOOL	R47 0 0 ; R47 := false
	455	[1091]	CALL     	R46 2 1 ; R46(R47)
	456	[1093]	JMP      	352 ; PC := 352
	457	[1094]	GETGLOBAL	R46 K16 ; R46 := _T
	458	[1094]	GETTABLE 	R46 R46 K67 ; R46 := R46["ApostasyActionTriggered"]
	459	[1094]	TEST     	R46 0 ; if not R46 then PC := 352
	460	[1094]	JMP      	352 ; PC := 352
	461	[1095]	TEST     	R38 0 ; if not R38 then PC := 467
	462	[1095]	JMP      	467 ; PC := 467
	463	[1096]	GETUPVAL 	R46 U7 ; R46 := U7
	464	[1096]	MOVE     	R47 R8 ; R47 := R8
	465	[1096]	CALL     	R46 2 1 ; R46(R47)
	466	[1096]	JMP      	352 ; PC := 352
	467	[1098]	GETGLOBAL	R46 K0 ; R46 := 0xcbd666e1
	468	[1098]	LOADK    	R47 := 0.000000
	469	[1098]	CALL     	R46 2 1 ; R46(R47)
	470	[1099]	GETGLOBAL	R46 K16 ; R46 := _T
	471	[1099]	SETTABLE 	R46 K67 K66 ; R46["ApostasyActionTriggered"] := false
	472	[1101]	JMP      	352 ; PC := 352
	473	[1103]	RETURN   	R0 1 ; return 

function #20 <?:1105,1107> (4 instructions, 16 bytes at 00000160F80136F0)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1106]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1106]	MOVE     	R2 R0 ; R2 := R0
	3	[1106]	CALL     	R1 2 1 ; R1(R2)
	4	[1107]	RETURN   	R0 1 ; return 

function #21 <?:1109,1160> (126 instructions, 504 bytes at 00000160F80137C0)
0 params, 9 slots, 2 upvalues, 0 locals, 25 constants, 0 functions
	1	[1110]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[1110]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xef893aec]
	3	[1110]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1110]	GETTABLE 	R0 R0 K2 ; R0 := R0["keyChainName"]
	5	[1110]	GETGLOBAL	R1 K3 ; R1 := 0x46ceb9a3
	6	[1110]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 9
	7	[1110]	JMP      	9 ; PC := 9
	8	[1111]	RETURN   	R0 1 ; return 
	9	[1114]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	10	[1114]	GETGLOBAL	R1 K5 ; R1 := 0x89326c93
	11	[1114]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xdd25e9d1]
	12	[1114]	CALL     	R1 2 0 ; R1,... := R1(R2)
	13	[1114]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	14	[1114]	TEST     	R0 0 ; if not R0 then PC := 20
	15	[1114]	JMP      	20 ; PC := 20
	16	[1115]	GETGLOBAL	R0 K7 ; R0 := 0xcbd666e1
	17	[1115]	LOADK    	R1 := 0.000000
	18	[1115]	CALL     	R0 2 1 ; R0(R1)
	19	[1115]	JMP      	9 ; PC := 9
	20	[1117]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	21	[1117]	GETGLOBAL	R1 K5 ; R1 := 0x89326c93
	22	[1117]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xdd25e9d1]
	23	[1117]	CALL     	R1 2 0 ; R1,... := R1(R2)
	24	[1117]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	25	[1117]	TEST     	R0 1 ; if R0 then PC := 31
	26	[1117]	JMP      	31 ; PC := 31
	27	[1118]	GETGLOBAL	R0 K7 ; R0 := 0xcbd666e1
	28	[1118]	LOADK    	R1 := 0.000000
	29	[1118]	CALL     	R0 2 1 ; R0(R1)
	30	[1118]	JMP      	20 ; PC := 20
	31	[1121]	GETGLOBAL	R0 K8 ; R0 := 0x76ea806b
	32	[1121]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0x3f3ae64c]
	33	[1121]	LOADK    	R2 := 0.000000
	34	[1121]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	35	[1122]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	36	[1122]	MOVE     	R2 R0 ; R2 := R0
	37	[1122]	CALL     	R1 2 2 ; R1 := R1(R2)
	38	[1122]	TEST     	R1 0 ; if not R1 then PC := 49
	39	[1122]	JMP      	49 ; PC := 49
	40	[1123]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	41	[1123]	LOADK    	R2 := 0.000000
	42	[1123]	CALL     	R1 2 1 ; R1(R2)
	43	[1124]	GETGLOBAL	R1 K8 ; R1 := 0x76ea806b
	44	[1124]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x3f3ae64c]
	45	[1124]	LOADK    	R3 := 0.000000
	46	[1124]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	47	[1124]	MOVE     	R0 R1 ; R0 := R1
	48	[1124]	JMP      	35 ; PC := 35
	49	[1127]	SELF     	R1 R0 K10 ; R2 := R0; R1 := R0[0x80563238]
	50	[1127]	CALL     	R1 2 2 ; R1 := R1(R2)
	51	[1128]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	52	[1128]	MOVE     	R3 R1 ; R3 := R1
	53	[1128]	CALL     	R2 2 2 ; R2 := R2(R3)
	54	[1128]	TEST     	R2 0 ; if not R2 then PC := 63
	55	[1128]	JMP      	63 ; PC := 63
	56	[1129]	GETGLOBAL	R2 K7 ; R2 := 0xcbd666e1
	57	[1129]	LOADK    	R3 := 0.000000
	58	[1129]	CALL     	R2 2 1 ; R2(R3)
	59	[1130]	SELF     	R2 R0 K10 ; R3 := R0; R2 := R0[0x80563238]
	60	[1130]	CALL     	R2 2 2 ; R2 := R2(R3)
	61	[1130]	MOVE     	R1 R2 ; R1 := R2
	62	[1130]	JMP      	51 ; PC := 51
	63	[1133]	SELF     	R2 R1 K11 ; R3 := R1; R2 := R1[0x25a6e75e]
	64	[1133]	CALL     	R2 2 2 ; R2 := R2(R3)
	65	[1134]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	66	[1134]	MOVE     	R4 R2 ; R4 := R2
	67	[1134]	CALL     	R3 2 2 ; R3 := R3(R4)
	68	[1134]	TEST     	R3 0 ; if not R3 then PC := 77
	69	[1134]	JMP      	77 ; PC := 77
	70	[1135]	GETGLOBAL	R3 K7 ; R3 := 0xcbd666e1
	71	[1135]	LOADK    	R4 := 0.000000
	72	[1135]	CALL     	R3 2 1 ; R3(R4)
	73	[1136]	SELF     	R3 R1 K11 ; R4 := R1; R3 := R1[0x25a6e75e]
	74	[1136]	CALL     	R3 2 2 ; R3 := R3(R4)
	75	[1136]	MOVE     	R2 R3 ; R2 := R3
	76	[1136]	JMP      	65 ; PC := 65
	77	[1139]	SELF     	R3 R2 K12 ; R4 := R2; R3 := R2[0x8e7c3b5e]
	78	[1139]	CALL     	R3 2 2 ; R3 := R3(R4)
	79	[1141]	GETGLOBAL	R4 K3 ; R4 := 0x46ceb9a3
	80	[1141]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 111
	81	[1141]	JMP      	111 ; PC := 111
	82	[1142]	GETGLOBAL	R4 K13 ; R4 := 0xbd496aa1
	83	[1142]	GETTABLE 	R4 R4 K14 ; R4 := R4[0x42645da3]
	84	[1142]	NEWTABLE 	R5 0 0 ; R5 := {}
	85	[1142]	GETGLOBAL	R6 K3 ; R6 := 0x46ceb9a3
	86	[1142]	SELF     	R6 R6 K15 ; R7 := R6; R6 := R6[0xed4e0128]
	87	[1142]	CALL     	R6 2 0 ; R6,... := R6(R7)
	88	[1142]	SETLIST  	R5 0 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 0
	89	[1142]	OP_LOADBOOL	R6 1 0 ; R6 := true
	90	[1142]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	91	[1143]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	92	[1143]	MOVE     	R6 R4 ; R6 := R4
	93	[1143]	CALL     	R5 2 2 ; R5 := R5(R6)
	94	[1143]	TEST     	R5 1 ; if R5 then PC := 104
	95	[1143]	JMP      	104 ; PC := 104
	96	[1143]	SELF     	R5 R4 K16 ; R6 := R4; R5 := R4[0xd2d3875a]
	97	[1143]	CALL     	R5 2 2 ; R5 := R5(R6)
	98	[1143]	TEST     	R5 1 ; if R5 then PC := 104
	99	[1143]	JMP      	104 ; PC := 104
	100	[1144]	GETGLOBAL	R5 K7 ; R5 := 0xcbd666e1
	101	[1144]	LOADK    	R6 := 0.000000
	102	[1144]	CALL     	R5 2 1 ; R5(R6)
	103	[1144]	JMP      	91 ; PC := 91
	104	[1146]	GETGLOBAL	R5 K17 ; R5 := 0xb009bbc6
	105	[1146]	GETGLOBAL	R6 K3 ; R6 := 0x46ceb9a3
	106	[1146]	CALL     	R5 2 2 ; R5 := R5(R6)
	107	[1147]	GETUPVAL 	R6 U0 ; R6 := U0
	108	[1147]	MOVE     	R7 R1 ; R7 := R1
	109	[1147]	MOVE     	R8 R5 ; R8 := R5
	110	[1147]	CALL     	R6 3 1 ; R6(R7,R8)
	111	[1150]	GETUPVAL 	R6 U1 ; R6 := U1
	112	[1150]	MOVE     	R7 R1 ; R7 := R1
	113	[1150]	LOADK    	R8 := 0.000000
	114	[1150]	CALL     	R6 3 1 ; R6(R7,R8)
	115	[1153]	GETGLOBAL	R6 K18 ; R6 := 0x8e4fdece
	116	[1153]	TEST     	R6 0 ; if not R6 then PC := 120
	117	[1153]	JMP      	120 ; PC := 120
	118	[1154]	GETGLOBAL	R6 K19 ; R6 := 0x0032441c
	119	[1154]	SETTABLE 	R6 K20 K21 ; R6["ApostasyJustCompleted"] := true
	120	[1157]	GETGLOBAL	R6 K19 ; R6 := 0x0032441c
	121	[1157]	SETTABLE 	R6 K22 K21 ; R6["DisableLoadingDiorama"] := true
	122	[1159]	GETGLOBAL	R6 K23 ; R6 := 0x34291f5c
	123	[1159]	GETTABLE 	R6 R6 K24 ; R6 := R6[0x8ee24660]
	124	[1159]	OP_LOADBOOL	R7 1 0 ; R7 := true
	125	[1159]	CALL     	R6 2 1 ; R6(R7)
	126	[1160]	RETURN   	R0 1 ; return 
