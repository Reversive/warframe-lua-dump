
main <?:0,0> (598 instructions, 2392 bytes at 0000016098CBC570)
0+ params, 16 slots, 0 upvalues, 0 locals, 125 constants, 2 functions
	1	[1]	GETGLOBAL	R0 K0 ; R0 := 0xaeabecda
	2	[1]	VARARG   	R1 R2 ; R1 := R2 := ...
	3	[1]	GETGLOBAL	R2 K1 ; R2 := package
	4	[1]	GETTABLE 	R2 R2 K2 ; R2 := R2["seeall"]
	5	[1]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[4]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	7	[4]	LOADK    	R1 K5 ; R1 := "SKILL_COMMANDER_MAP"
	8	[4]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[4]	SETGLOBALHASH	R0 K3 ; sSkillCommanderMap := R0
	10	[5]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	11	[5]	LOADK    	R1 K7 ; R1 := "SKILL_REMOTE_PLAYER_TRACKING"
	12	[5]	CALL     	R0 2 2 ; R0 := R0(R1)
	13	[5]	SETGLOBALHASH	R0 K6 ; sSkillRemotePlayerTracking := R0
	14	[6]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	15	[6]	LOADK    	R1 K9 ; R1 := "SKILL_REMOTE_PLAYER_POWER"
	16	[6]	CALL     	R0 2 2 ; R0 := R0(R1)
	17	[6]	SETGLOBALHASH	R0 K8 ; sSkillRemotePlayerPower := R0
	18	[7]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	19	[7]	LOADK    	R1 K11 ; R1 := "SKILL_COMMAND_GEAR_MENU"
	20	[7]	CALL     	R0 2 2 ; R0 := R0(R1)
	21	[7]	SETGLOBALHASH	R0 K10 ; sSkillCommandGearMenu := R0
	22	[8]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	23	[8]	LOADK    	R1 K13 ; R1 := "SKILL_REMOTE_PLAYER_DEPLOY"
	24	[8]	CALL     	R0 2 2 ; R0 := R0(R1)
	25	[8]	SETGLOBALHASH	R0 K12 ; sSkillRemotePlayerDeploy := R0
	26	[9]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	27	[9]	LOADK    	R1 K15 ; R1 := "SKILL_RECALL_TO_RJ"
	28	[9]	CALL     	R0 2 2 ; R0 := R0(R1)
	29	[9]	SETGLOBALHASH	R0 K14 ; sSkillRecallToRailjack := R0
	30	[10]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	31	[10]	LOADK    	R1 K17 ; R1 := "SKILL_MECH_SUMMON"
	32	[10]	CALL     	R0 2 2 ; R0 := R0(R1)
	33	[10]	SETGLOBALHASH	R0 K16 ; sSkillMechSummon := R0
	34	[13]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	35	[13]	LOADK    	R1 K19 ; R1 := "SKILL_RJ_BOOST"
	36	[13]	CALL     	R0 2 2 ; R0 := R0(R1)
	37	[13]	SETGLOBALHASH	R0 K18 ; sSkillRJBoost := R0
	38	[14]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	39	[14]	LOADK    	R1 K21 ; R1 := "SKILL_RJ_DODGE"
	40	[14]	CALL     	R0 2 2 ; R0 := R0(R1)
	41	[14]	SETGLOBALHASH	R0 K20 ; sSkillRJDodge := R0
	42	[15]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	43	[15]	LOADK    	R1 K23 ; R1 := "SKILL_RJ_BLINK"
	44	[15]	CALL     	R0 2 2 ; R0 := R0(R1)
	45	[15]	SETGLOBALHASH	R0 K22 ; sSkillRJBlink := R0
	46	[16]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	47	[16]	LOADK    	R1 K25 ; R1 := "SKILL_RJ_DRIFT"
	48	[16]	CALL     	R0 2 2 ; R0 := R0(R1)
	49	[16]	SETGLOBALHASH	R0 K24 ; sSkillRJDrift := R0
	50	[17]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	51	[17]	LOADK    	R1 K27 ; R1 := "SKILL_RJ_CLEAR_PROJECTILE"
	52	[17]	CALL     	R0 2 2 ; R0 := R0(R1)
	53	[17]	SETGLOBALHASH	R0 K26 ; sSkillRJClearProjectile := R0
	54	[18]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	55	[18]	LOADK    	R1 K29 ; R1 := "SKILL_VACUUM_BUFF"
	56	[18]	CALL     	R0 2 2 ; R0 := R0(R1)
	57	[18]	SETGLOBALHASH	R0 K28 ; sSkillVacuumBuff := R0
	58	[19]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	59	[19]	LOADK    	R1 K31 ; R1 := "SKILL_LOOT_POI_MARKER"
	60	[19]	CALL     	R0 2 2 ; R0 := R0(R1)
	61	[19]	SETGLOBALHASH	R0 K30 ; sSkillLootPOIMarker := R0
	62	[20]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	63	[20]	LOADK    	R1 K33 ; R1 := "SKILL_AW_CANNON"
	64	[20]	CALL     	R0 2 2 ; R0 := R0(R1)
	65	[20]	SETGLOBALHASH	R0 K32 ; sSkillAWCannon := R0
	66	[21]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	67	[21]	LOADK    	R1 K35 ; R1 := "SKILL_RAMSLED_EVASION"
	68	[21]	CALL     	R0 2 2 ; R0 := R0(R1)
	69	[21]	SETGLOBALHASH	R0 K34 ; sSkillRamsledEvasion := R0
	70	[24]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	71	[24]	LOADK    	R1 K37 ; R1 := "SKILL_RJ_LEAD_INDICATOR"
	72	[24]	CALL     	R0 2 2 ; R0 := R0(R1)
	73	[24]	SETGLOBALHASH	R0 K36 ; sSkillRJLeadIndicator := R0
	74	[25]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	75	[25]	LOADK    	R1 K39 ; R1 := "SKILL_RJ_AR_GIMBAL"
	76	[25]	CALL     	R0 2 2 ; R0 := R0(R1)
	77	[25]	SETGLOBALHASH	R0 K38 ; sSkillRJARGimbal := R0
	78	[26]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	79	[26]	LOADK    	R1 K41 ; R1 := "SKILL_RJ_ORDNANCE_LOCK_ON"
	80	[26]	CALL     	R0 2 2 ; R0 := R0(R1)
	81	[26]	SETGLOBALHASH	R0 K40 ; sSkillRJOrdLockOn := R0
	82	[27]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	83	[27]	LOADK    	R1 K43 ; R1 := "SKILL_AIM_INDICATOR_CONVERGE"
	84	[27]	CALL     	R0 2 2 ; R0 := R0(R1)
	85	[27]	SETGLOBALHASH	R0 K42 ; sSkillAimIndicatorConverge := R0
	86	[28]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	87	[28]	LOADK    	R1 K45 ; R1 := "SKILL_RJ_RELOAD"
	88	[28]	CALL     	R0 2 2 ; R0 := R0(R1)
	89	[28]	SETGLOBALHASH	R0 K44 ; sSkillRJReload := R0
	90	[31]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	91	[31]	LOADK    	R1 K47 ; R1 := "SKILL_MULTI_TOOL_EXPERT"
	92	[31]	CALL     	R0 2 2 ; R0 := R0(R1)
	93	[31]	SETGLOBALHASH	R0 K46 ; sSkillMultiToolExpert := R0
	94	[32]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	95	[32]	LOADK    	R1 K49 ; R1 := "SKILL_BC_ORDNANCE"
	96	[32]	CALL     	R0 2 2 ; R0 := R0(R1)
	97	[32]	SETGLOBALHASH	R0 K48 ; sSkillBCOrd := R0
	98	[33]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	99	[33]	LOADK    	R1 K51 ; R1 := "SKILL_BC_SUPER_AMMO"
	100	[33]	CALL     	R0 2 2 ; R0 := R0(R1)
	101	[33]	SETGLOBALHASH	R0 K50 ; sSkillBCSuperAmmo := R0
	102	[34]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	103	[34]	LOADK    	R1 K53 ; R1 := "SKILL_BC_UBER_FIX"
	104	[34]	CALL     	R0 2 2 ; R0 := R0(R1)
	105	[34]	SETGLOBALHASH	R0 K52 ; sSkillBCUberFix := R0
	106	[35]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	107	[35]	LOADK    	R1 K55 ; R1 := "SKILL_BC_HEAL"
	108	[35]	CALL     	R0 2 2 ; R0 := R0(R1)
	109	[35]	SETGLOBALHASH	R0 K54 ; sSkillBCHeal := R0
	110	[38]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	111	[38]	LOADK    	R1 K57 ; R1 := "SKILL_CREW_COMMAND"
	112	[38]	CALL     	R0 2 2 ; R0 := R0(R1)
	113	[38]	SETGLOBALHASH	R0 K56 ; sSkillCrewCommand := R0
	114	[39]	GETGLOBAL	R0 K4 ; R0 := 0x0469f296
	115	[39]	LOADK    	R1 K59 ; R1 := "SKILL_SECOND_COMMAND"
	116	[39]	CALL     	R0 2 2 ; R0 := R0(R1)
	117	[39]	SETGLOBALHASH	R0 K58 ; sSkillSecondCommand := R0
	118	[42]	LOADK    	R0 := 10.000000
	119	[42]	SETGLOBALHASH	R0 K60 ; MAX_SKILL_RANK := R0
	120	[44]	LOADK    	R0 := 1.000000
	121	[44]	SETGLOBALHASH	R0 K61 ; CATEGORY_ALL := R0
	122	[45]	LOADK    	R0 := 2.000000
	123	[45]	SETGLOBALHASH	R0 K62 ; CATEGORY_CREWSHIP := R0
	124	[46]	LOADK    	R0 := 3.000000
	125	[46]	SETGLOBALHASH	R0 K63 ; CATEGORY_PLAYER := R0
	126	[47]	LOADK    	R0 := 4.000000
	127	[47]	SETGLOBALHASH	R0 K64 ; CATEGORY_ARCHWING := R0
	128	[48]	LOADK    	R0 := 5.000000
	129	[48]	SETGLOBALHASH	R0 K65 ; CATEGORY_MECH := R0
	130	[51]	GETGLOBAL	R0 K66 ; R0 := 0x7ed0a956
	131	[51]	LOADK    	R1 K67 ; R1 := "/Lotus/Types/Game/CrewShip/CrewShipArchwingCannonEmplacement"
	132	[51]	CALL     	R0 2 2 ; R0 := R0(R1)
	133	[52]	GETGLOBAL	R1 K66 ; R1 := 0x7ed0a956
	134	[52]	LOADK    	R2 K68 ; R2 := "/Lotus/Types/Game/CrewShip/CrewShipAvatar"
	135	[52]	CALL     	R1 2 2 ; R1 := R1(R2)
	136	[53]	GETGLOBAL	R2 K66 ; R2 := 0x7ed0a956
	137	[53]	LOADK    	R3 K69 ; R3 := "/Lotus/Weapons/Tenno/Archwing/Melee/ArchMeleeWeapon"
	138	[53]	CALL     	R2 2 2 ; R2 := R2(R3)
	139	[54]	GETGLOBAL	R3 K66 ; R3 := 0x7ed0a956
	140	[54]	LOADK    	R4 K70 ; R4 := "/Lotus/Weapons/Tenno/Archwing/Primary/ArchGun"
	141	[54]	CALL     	R3 2 2 ; R3 := R3(R4)
	142	[55]	GETGLOBAL	R4 K66 ; R4 := 0x7ed0a956
	143	[55]	LOADK    	R5 K71 ; R5 := "/Lotus/Types/Restoratives/LisetAirSupport"
	144	[55]	CALL     	R4 2 2 ; R4 := R4(R5)
	145	[56]	GETGLOBAL	R5 K66 ; R5 := 0x7ed0a956
	146	[56]	LOADK    	R6 K72 ; R6 := "/Lotus/Types/Restoratives/LoadoutTechSummon"
	147	[56]	CALL     	R5 2 2 ; R5 := R5(R6)
	148	[57]	GETGLOBAL	R6 K66 ; R6 := 0x7ed0a956
	149	[57]	LOADK    	R7 K73 ; R7 := "/Lotus/Types/Game/CrewShip/CrewShipHarness"
	150	[57]	CALL     	R6 2 2 ; R6 := R6(R7)
	151	[59]	NEWTABLE 	R7 0 10 ; R7 := {}
	152	[61]	NEWTABLE 	R8 2 0 ; R8 := {}
	153	[62]	NEWTABLE 	R9 0 2 ; R9 := {}
	154	[64]	SETTABLE 	R9 K75 K77 ; R9["upgradeType"] := 348.000000
	155	[65]	GETGLOBAL	R10 K3 ; R10 := sSkillCommanderMap
	156	[65]	SETTABLE 	R9 K78 R10 ; R9[0xefd0fde2] := R10
	157	[66]	NEWTABLE 	R10 0 2 ; R10 := {}
	158	[68]	SETTABLE 	R10 K75 K77 ; R10["upgradeType"] := 348.000000
	159	[69]	GETGLOBAL	R11 K6 ; R11 := sSkillRemotePlayerTracking
	160	[69]	SETTABLE 	R10 K78 R11 ; R10[0xefd0fde2] := R11
	161	[71]	SETLIST  	R8 2 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
	162	[71]	SETTABLE 	R7 K74 R8 ; R7[0x18d05d30] := R8
	163	[73]	NEWTABLE 	R8 1 0 ; R8 := {}
	164	[74]	NEWTABLE 	R9 0 2 ; R9 := {}
	165	[76]	SETTABLE 	R9 K75 K77 ; R9["upgradeType"] := 348.000000
	166	[77]	GETGLOBAL	R10 K8 ; R10 := sSkillRemotePlayerPower
	167	[77]	SETTABLE 	R9 K78 R10 ; R9[0xefd0fde2] := R10
	168	[79]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	169	[79]	SETTABLE 	R7 K79 R8 ; R7[0xebfba9e4] := R8
	170	[81]	NEWTABLE 	R8 1 0 ; R8 := {}
	171	[82]	NEWTABLE 	R9 0 2 ; R9 := {}
	172	[84]	SETTABLE 	R9 K75 K77 ; R9["upgradeType"] := 348.000000
	173	[85]	GETGLOBAL	R10 K10 ; R10 := sSkillCommandGearMenu
	174	[85]	SETTABLE 	R9 K78 R10 ; R9[0xefd0fde2] := R10
	175	[87]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	176	[87]	SETTABLE 	R7 K80 R8 ; R7[0xc0da2b81] := R8
	177	[89]	NEWTABLE 	R8 1 0 ; R8 := {}
	178	[90]	NEWTABLE 	R9 0 2 ; R9 := {}
	179	[92]	SETTABLE 	R9 K75 K77 ; R9["upgradeType"] := 348.000000
	180	[93]	GETGLOBAL	R10 K14 ; R10 := sSkillRecallToRailjack
	181	[93]	SETTABLE 	R9 K78 R10 ; R9[0xefd0fde2] := R10
	182	[95]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	183	[95]	SETTABLE 	R7 K81 R8 ; R7[0x86f495d5] := R8
	184	[97]	NEWTABLE 	R8 1 0 ; R8 := {}
	185	[98]	NEWTABLE 	R9 0 2 ; R9 := {}
	186	[100]	SETTABLE 	R9 K75 K77 ; R9["upgradeType"] := 348.000000
	187	[101]	GETGLOBAL	R10 K16 ; R10 := sSkillMechSummon
	188	[101]	SETTABLE 	R9 K78 R10 ; R9[0xefd0fde2] := R10
	189	[103]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	190	[103]	SETTABLE 	R7 K82 R8 ; R7[0x5bced4c4] := R8
	191	[105]	NEWTABLE 	R8 2 0 ; R8 := {}
	192	[106]	NEWTABLE 	R9 0 3 ; R9 := {}
	193	[108]	SETTABLE 	R9 K75 K84 ; R9["upgradeType"] := 350.000000
	194	[109]	SETTABLE 	R9 K85 K86 ; R9["value"] := 0.250000
	195	[110]	SETTABLE 	R9 K87 K79 ; R9["operationType"] := 2.000000
	196	[111]	NEWTABLE 	R10 0 4 ; R10 := {}
	197	[113]	SETTABLE 	R10 K75 K81 ; R10["upgradeType"] := 4.000000
	198	[114]	SETTABLE 	R10 K85 K86 ; R10["value"] := 0.250000
	199	[115]	SETTABLE 	R10 K87 K79 ; R10["operationType"] := 2.000000
	200	[116]	SETTABLE 	R10 K89 R6 ; R10[0xbd5d0ec1] := R6
	201	[118]	SETLIST  	R8 2 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
	202	[118]	SETTABLE 	R7 K83 R8 ; R7[0x34e9f45c] := R8
	203	[120]	NEWTABLE 	R8 1 0 ; R8 := {}
	204	[121]	NEWTABLE 	R9 0 3 ; R9 := {}
	205	[123]	SETTABLE 	R9 K75 K91 ; R9["upgradeType"] := 349.000000
	206	[124]	SETTABLE 	R9 K85 K92 ; R9["value"] := 0.800000
	207	[125]	SETTABLE 	R9 K87 K74 ; R9["operationType"] := 1.000000
	208	[127]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	209	[127]	SETTABLE 	R7 K90 R8 ; R7[7.000000] := R8
	210	[129]	NEWTABLE 	R8 2 0 ; R8 := {}
	211	[130]	NEWTABLE 	R9 0 4 ; R9 := {}
	212	[132]	SETTABLE 	R9 K75 K94 ; R9["upgradeType"] := 38.000000
	213	[133]	SETTABLE 	R9 K85 K95 ; R9["value"] := 0.750000
	214	[134]	SETTABLE 	R9 K87 K74 ; R9["operationType"] := 1.000000
	215	[135]	GETGLOBAL	R10 K64 ; R10 := CATEGORY_ARCHWING
	216	[135]	SETTABLE 	R9 K96 R10 ; R9[0x159ed8d2] := R10
	217	[136]	NEWTABLE 	R10 0 5 ; R10 := {}
	218	[138]	SETTABLE 	R10 K75 K97 ; R10["upgradeType"] := 160.000000
	219	[139]	SETTABLE 	R10 K85 K95 ; R10["value"] := 0.750000
	220	[140]	SETTABLE 	R10 K87 K74 ; R10["operationType"] := 1.000000
	221	[141]	SETTABLE 	R10 K89 R5 ; R10[0xbd5d0ec1] := R5
	222	[142]	GETGLOBAL	R11 K63 ; R11 := CATEGORY_PLAYER
	223	[142]	SETTABLE 	R10 K96 R11 ; R10[0x159ed8d2] := R11
	224	[144]	SETLIST  	R8 2 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
	225	[144]	SETTABLE 	R7 K93 R8 ; R7[8.000000] := R8
	226	[146]	NEWTABLE 	R8 1 0 ; R8 := {}
	227	[147]	NEWTABLE 	R9 0 3 ; R9 := {}
	228	[149]	SETTABLE 	R9 K75 K91 ; R9["upgradeType"] := 349.000000
	229	[150]	SETTABLE 	R9 K85 K92 ; R9["value"] := 0.800000
	230	[151]	SETTABLE 	R9 K87 K74 ; R9["operationType"] := 1.000000
	231	[153]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	232	[153]	SETTABLE 	R7 K98 R8 ; R7[0x603636ad] := R8
	233	[155]	NEWTABLE 	R8 1 0 ; R8 := {}
	234	[156]	NEWTABLE 	R9 0 2 ; R9 := {}
	235	[158]	SETTABLE 	R9 K75 K77 ; R9["upgradeType"] := 348.000000
	236	[159]	GETGLOBAL	R10 K12 ; R10 := sSkillRemotePlayerDeploy
	237	[159]	SETTABLE 	R9 K78 R10 ; R9[0xefd0fde2] := R10
	238	[161]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	239	[161]	SETTABLE 	R7 K99 R8 ; R7[0xcb3851b8] := R8
	240	[164]	NEWTABLE 	R8 0 10 ; R8 := {}
	241	[166]	NEWTABLE 	R9 1 0 ; R9 := {}
	242	[167]	NEWTABLE 	R10 0 2 ; R10 := {}
	243	[169]	SETTABLE 	R10 K75 K77 ; R10["upgradeType"] := 348.000000
	244	[170]	GETGLOBAL	R11 K18 ; R11 := sSkillRJBoost
	245	[170]	SETTABLE 	R10 K78 R11 ; R10[0xefd0fde2] := R11
	246	[172]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	247	[172]	SETTABLE 	R8 K74 R9 ; R8[0x18d05d30] := R9
	248	[174]	NEWTABLE 	R9 1 0 ; R9 := {}
	249	[175]	NEWTABLE 	R10 0 2 ; R10 := {}
	250	[177]	SETTABLE 	R10 K75 K77 ; R10["upgradeType"] := 348.000000
	251	[178]	GETGLOBAL	R11 K20 ; R11 := sSkillRJDodge
	252	[178]	SETTABLE 	R10 K78 R11 ; R10[0xefd0fde2] := R11
	253	[180]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	254	[180]	SETTABLE 	R8 K79 R9 ; R8[0xebfba9e4] := R9
	255	[182]	NEWTABLE 	R9 1 0 ; R9 := {}
	256	[183]	NEWTABLE 	R10 0 2 ; R10 := {}
	257	[185]	SETTABLE 	R10 K75 K77 ; R10["upgradeType"] := 348.000000
	258	[186]	GETGLOBAL	R11 K26 ; R11 := sSkillRJClearProjectile
	259	[186]	SETTABLE 	R10 K78 R11 ; R10[0xefd0fde2] := R11
	260	[188]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	261	[188]	SETTABLE 	R8 K80 R9 ; R8[0xc0da2b81] := R9
	262	[190]	NEWTABLE 	R9 1 0 ; R9 := {}
	263	[191]	NEWTABLE 	R10 0 2 ; R10 := {}
	264	[193]	SETTABLE 	R10 K75 K77 ; R10["upgradeType"] := 348.000000
	265	[194]	GETGLOBAL	R11 K24 ; R11 := sSkillRJDrift
	266	[194]	SETTABLE 	R10 K78 R11 ; R10[0xefd0fde2] := R11
	267	[197]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	268	[197]	SETTABLE 	R8 K81 R9 ; R8[0x86f495d5] := R9
	269	[199]	NEWTABLE 	R9 2 0 ; R9 := {}
	270	[200]	NEWTABLE 	R10 0 2 ; R10 := {}
	271	[202]	SETTABLE 	R10 K75 K77 ; R10["upgradeType"] := 348.000000
	272	[203]	GETGLOBAL	R11 K30 ; R11 := sSkillLootPOIMarker
	273	[203]	SETTABLE 	R10 K78 R11 ; R10[0xefd0fde2] := R11
	274	[204]	NEWTABLE 	R11 0 2 ; R11 := {}
	275	[206]	SETTABLE 	R11 K75 K77 ; R11["upgradeType"] := 348.000000
	276	[207]	GETGLOBAL	R12 K28 ; R12 := sSkillVacuumBuff
	277	[207]	SETTABLE 	R11 K78 R12 ; R11[0xefd0fde2] := R12
	278	[209]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	279	[209]	SETTABLE 	R8 K82 R9 ; R8[0x5bced4c4] := R9
	280	[211]	NEWTABLE 	R9 1 0 ; R9 := {}
	281	[212]	NEWTABLE 	R10 0 2 ; R10 := {}
	282	[214]	SETTABLE 	R10 K75 K77 ; R10["upgradeType"] := 348.000000
	283	[215]	GETGLOBAL	R11 K34 ; R11 := sSkillRamsledEvasion
	284	[215]	SETTABLE 	R10 K78 R11 ; R10[0xefd0fde2] := R11
	285	[217]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	286	[217]	SETTABLE 	R8 K83 R9 ; R8[0x34e9f45c] := R9
	287	[219]	NEWTABLE 	R9 1 0 ; R9 := {}
	288	[220]	NEWTABLE 	R10 0 4 ; R10 := {}
	289	[222]	SETTABLE 	R10 K75 K100 ; R10["upgradeType"] := 79.000000
	290	[223]	SETTABLE 	R10 K85 K101 ; R10["value"] := 0.100000
	291	[224]	SETTABLE 	R10 K87 K79 ; R10["operationType"] := 2.000000
	292	[225]	GETGLOBAL	R11 K65 ; R11 := CATEGORY_MECH
	293	[225]	SETTABLE 	R10 K96 R11 ; R10[0x159ed8d2] := R11
	294	[227]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	295	[227]	SETTABLE 	R8 K90 R9 ; R8[7.000000] := R9
	296	[229]	NEWTABLE 	R9 1 0 ; R9 := {}
	297	[230]	NEWTABLE 	R10 0 4 ; R10 := {}
	298	[232]	SETTABLE 	R10 K75 K100 ; R10["upgradeType"] := 79.000000
	299	[233]	SETTABLE 	R10 K85 K102 ; R10["value"] := 0.200000
	300	[234]	SETTABLE 	R10 K87 K79 ; R10["operationType"] := 2.000000
	301	[235]	GETGLOBAL	R11 K64 ; R11 := CATEGORY_ARCHWING
	302	[235]	SETTABLE 	R10 K96 R11 ; R10[0x159ed8d2] := R11
	303	[237]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	304	[237]	SETTABLE 	R8 K93 R9 ; R8[8.000000] := R9
	305	[239]	NEWTABLE 	R9 2 0 ; R9 := {}
	306	[240]	NEWTABLE 	R10 0 5 ; R10 := {}
	307	[242]	SETTABLE 	R10 K75 K103 ; R10["upgradeType"] := 356.000000
	308	[243]	SETTABLE 	R10 K85 K95 ; R10["value"] := 0.750000
	309	[244]	SETTABLE 	R10 K104 K79 ; R10["validPosture"] := 2.000000
	310	[245]	SETTABLE 	R10 K87 K74 ; R10["operationType"] := 1.000000
	311	[246]	SETTABLE 	R10 K89 R1 ; R10[0xbd5d0ec1] := R1
	312	[247]	NEWTABLE 	R11 0 3 ; R11 := {}
	313	[249]	SETTABLE 	R11 K75 K105 ; R11["upgradeType"] := 354.000000
	314	[250]	SETTABLE 	R11 K85 K106 ; R11["value"] := 2000.000000
	315	[251]	SETTABLE 	R11 K87 K107 ; R11["operationType"] := 0.000000
	316	[254]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	317	[254]	SETTABLE 	R8 K98 R9 ; R8[0x603636ad] := R9
	318	[256]	NEWTABLE 	R9 1 0 ; R9 := {}
	319	[257]	NEWTABLE 	R10 0 2 ; R10 := {}
	320	[259]	SETTABLE 	R10 K75 K77 ; R10["upgradeType"] := 348.000000
	321	[260]	GETGLOBAL	R11 K22 ; R11 := sSkillRJBlink
	322	[260]	SETTABLE 	R10 K78 R11 ; R10[0xefd0fde2] := R11
	323	[262]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	324	[262]	SETTABLE 	R8 K99 R9 ; R8[0xcb3851b8] := R9
	325	[265]	NEWTABLE 	R9 0 10 ; R9 := {}
	326	[267]	NEWTABLE 	R10 2 0 ; R10 := {}
	327	[268]	NEWTABLE 	R11 0 2 ; R11 := {}
	328	[270]	SETTABLE 	R11 K75 K77 ; R11["upgradeType"] := 348.000000
	329	[271]	GETGLOBAL	R12 K36 ; R12 := sSkillRJLeadIndicator
	330	[271]	SETTABLE 	R11 K78 R12 ; R11[0xefd0fde2] := R12
	331	[272]	NEWTABLE 	R12 0 2 ; R12 := {}
	332	[274]	SETTABLE 	R12 K75 K77 ; R12["upgradeType"] := 348.000000
	333	[275]	GETGLOBAL	R13 K40 ; R13 := sSkillRJOrdLockOn
	334	[275]	SETTABLE 	R12 K78 R13 ; R12[0xefd0fde2] := R13
	335	[277]	SETLIST  	R10 2 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
	336	[277]	SETTABLE 	R9 K74 R10 ; R9[0x18d05d30] := R10
	337	[279]	NEWTABLE 	R10 1 0 ; R10 := {}
	338	[280]	NEWTABLE 	R11 0 2 ; R11 := {}
	339	[282]	SETTABLE 	R11 K75 K77 ; R11["upgradeType"] := 348.000000
	340	[283]	GETGLOBAL	R12 K38 ; R12 := sSkillRJARGimbal
	341	[283]	SETTABLE 	R11 K78 R12 ; R11[0xefd0fde2] := R12
	342	[285]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	343	[285]	SETTABLE 	R9 K79 R10 ; R9[0xebfba9e4] := R10
	344	[287]	NEWTABLE 	R10 1 0 ; R10 := {}
	345	[288]	NEWTABLE 	R11 0 2 ; R11 := {}
	346	[290]	SETTABLE 	R11 K75 K77 ; R11["upgradeType"] := 348.000000
	347	[291]	GETGLOBAL	R12 K32 ; R12 := sSkillAWCannon
	348	[291]	SETTABLE 	R11 K78 R12 ; R11[0xefd0fde2] := R12
	349	[293]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	350	[293]	SETTABLE 	R9 K80 R10 ; R9[0xc0da2b81] := R10
	351	[295]	NEWTABLE 	R10 3 0 ; R10 := {}
	352	[296]	NEWTABLE 	R11 0 5 ; R11 := {}
	353	[298]	SETTABLE 	R11 K75 K108 ; R11["upgradeType"] := 261.000000
	354	[299]	SETTABLE 	R11 K85 K109 ; R11["value"] := 25.000000
	355	[300]	SETTABLE 	R11 K87 K107 ; R11["operationType"] := 0.000000
	356	[301]	SETTABLE 	R11 K89 R2 ; R11[0xbd5d0ec1] := R2
	357	[302]	GETGLOBAL	R12 K64 ; R12 := CATEGORY_ARCHWING
	358	[302]	SETTABLE 	R11 K96 R12 ; R11[0x159ed8d2] := R12
	359	[303]	NEWTABLE 	R12 0 5 ; R12 := {}
	360	[305]	SETTABLE 	R12 K75 K110 ; R12["upgradeType"] := 320.000000
	361	[306]	SETTABLE 	R12 K85 K95 ; R12["value"] := 0.750000
	362	[307]	SETTABLE 	R12 K87 K107 ; R12["operationType"] := 0.000000
	363	[308]	SETTABLE 	R12 K89 R2 ; R12[0xbd5d0ec1] := R2
	364	[309]	GETGLOBAL	R13 K64 ; R13 := CATEGORY_ARCHWING
	365	[309]	SETTABLE 	R12 K96 R13 ; R12[0x159ed8d2] := R13
	366	[310]	NEWTABLE 	R13 0 5 ; R13 := {}
	367	[312]	SETTABLE 	R13 K75 K111 ; R13["upgradeType"] := 216.000000
	368	[313]	SETTABLE 	R13 K85 K102 ; R13["value"] := 0.200000
	369	[314]	SETTABLE 	R13 K87 K79 ; R13["operationType"] := 2.000000
	370	[315]	SETTABLE 	R13 K89 R2 ; R13[0xbd5d0ec1] := R2
	371	[316]	GETGLOBAL	R14 K64 ; R14 := CATEGORY_ARCHWING
	372	[316]	SETTABLE 	R13 K96 R14 ; R13[0x159ed8d2] := R14
	373	[318]	SETLIST  	R10 3 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 3
	374	[318]	SETTABLE 	R9 K81 R10 ; R9[0x86f495d5] := R10
	375	[320]	NEWTABLE 	R10 1 0 ; R10 := {}
	376	[321]	NEWTABLE 	R11 0 5 ; R11 := {}
	377	[323]	SETTABLE 	R11 K75 K111 ; R11["upgradeType"] := 216.000000
	378	[324]	SETTABLE 	R11 K85 K102 ; R11["value"] := 0.200000
	379	[325]	SETTABLE 	R11 K87 K79 ; R11["operationType"] := 2.000000
	380	[326]	SETTABLE 	R11 K89 R3 ; R11[0xbd5d0ec1] := R3
	381	[327]	GETGLOBAL	R12 K65 ; R12 := CATEGORY_MECH
	382	[327]	SETTABLE 	R11 K96 R12 ; R11[0x159ed8d2] := R12
	383	[329]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	384	[329]	SETTABLE 	R9 K82 R10 ; R9[0x5bced4c4] := R10
	385	[331]	NEWTABLE 	R10 1 0 ; R10 := {}
	386	[332]	NEWTABLE 	R11 0 4 ; R11 := {}
	387	[334]	SETTABLE 	R11 K75 K112 ; R11["upgradeType"] := 189.000000
	388	[335]	SETTABLE 	R11 K85 K92 ; R11["value"] := 0.800000
	389	[336]	SETTABLE 	R11 K87 K74 ; R11["operationType"] := 1.000000
	390	[337]	SETTABLE 	R11 K89 R1 ; R11[0xbd5d0ec1] := R1
	391	[339]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	392	[339]	SETTABLE 	R9 K83 R10 ; R9[0x34e9f45c] := R10
	393	[341]	NEWTABLE 	R10 2 0 ; R10 := {}
	394	[342]	NEWTABLE 	R11 0 4 ; R11 := {}
	395	[344]	SETTABLE 	R11 K75 K113 ; R11["upgradeType"] := 324.000000
	396	[345]	SETTABLE 	R11 K85 K114 ; R11["value"] := 0.500000
	397	[346]	SETTABLE 	R11 K87 K74 ; R11["operationType"] := 1.000000
	398	[347]	SETTABLE 	R11 K89 R1 ; R11[0xbd5d0ec1] := R1
	399	[348]	NEWTABLE 	R12 0 4 ; R12 := {}
	400	[350]	SETTABLE 	R12 K75 K98 ; R12["upgradeType"] := 9.000000
	401	[351]	SETTABLE 	R12 K85 K114 ; R12["value"] := 0.500000
	402	[352]	SETTABLE 	R12 K87 K79 ; R12["operationType"] := 2.000000
	403	[353]	SETTABLE 	R12 K89 R0 ; R12[0xbd5d0ec1] := R0
	404	[355]	SETLIST  	R10 2 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
	405	[355]	SETTABLE 	R9 K90 R10 ; R9[7.000000] := R10
	406	[357]	NEWTABLE 	R10 4 0 ; R10 := {}
	407	[358]	NEWTABLE 	R11 0 4 ; R11 := {}
	408	[360]	SETTABLE 	R11 K75 K111 ; R11["upgradeType"] := 216.000000
	409	[361]	SETTABLE 	R11 K85 K86 ; R11["value"] := 0.250000
	410	[362]	SETTABLE 	R11 K87 K79 ; R11["operationType"] := 2.000000
	411	[363]	GETGLOBAL	R12 K64 ; R12 := CATEGORY_ARCHWING
	412	[363]	SETTABLE 	R11 K96 R12 ; R11[0x159ed8d2] := R12
	413	[364]	NEWTABLE 	R12 0 4 ; R12 := {}
	414	[366]	SETTABLE 	R12 K75 K99 ; R12["upgradeType"] := 10.000000
	415	[367]	SETTABLE 	R12 K85 K102 ; R12["value"] := 0.200000
	416	[368]	SETTABLE 	R12 K87 K79 ; R12["operationType"] := 2.000000
	417	[369]	GETGLOBAL	R13 K64 ; R13 := CATEGORY_ARCHWING
	418	[369]	SETTABLE 	R12 K96 R13 ; R12[0x159ed8d2] := R13
	419	[370]	NEWTABLE 	R13 0 4 ; R13 := {}
	420	[372]	SETTABLE 	R13 K75 K98 ; R13["upgradeType"] := 9.000000
	421	[373]	SETTABLE 	R13 K85 K102 ; R13["value"] := 0.200000
	422	[374]	SETTABLE 	R13 K87 K79 ; R13["operationType"] := 2.000000
	423	[375]	GETGLOBAL	R14 K64 ; R14 := CATEGORY_ARCHWING
	424	[375]	SETTABLE 	R13 K96 R14 ; R13[0x159ed8d2] := R14
	425	[376]	NEWTABLE 	R14 0 4 ; R14 := {}
	426	[378]	SETTABLE 	R14 K75 K81 ; R14["upgradeType"] := 4.000000
	427	[379]	SETTABLE 	R14 K85 K102 ; R14["value"] := 0.200000
	428	[380]	SETTABLE 	R14 K87 K79 ; R14["operationType"] := 2.000000
	429	[381]	GETGLOBAL	R15 K64 ; R15 := CATEGORY_ARCHWING
	430	[381]	SETTABLE 	R14 K96 R15 ; R14[0x159ed8d2] := R15
	431	[383]	SETLIST  	R10 4 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 4
	432	[383]	SETTABLE 	R9 K93 R10 ; R9[8.000000] := R10
	433	[385]	NEWTABLE 	R10 1 0 ; R10 := {}
	434	[386]	NEWTABLE 	R11 0 2 ; R11 := {}
	435	[388]	SETTABLE 	R11 K75 K77 ; R11["upgradeType"] := 348.000000
	436	[389]	GETGLOBAL	R12 K44 ; R12 := sSkillRJReload
	437	[389]	SETTABLE 	R11 K78 R12 ; R11[0xefd0fde2] := R12
	438	[391]	SETLIST  	R10 1 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
	439	[391]	SETTABLE 	R9 K98 R10 ; R9[0x603636ad] := R10
	440	[393]	NEWTABLE 	R10 2 0 ; R10 := {}
	441	[394]	NEWTABLE 	R11 0 2 ; R11 := {}
	442	[396]	SETTABLE 	R11 K75 K77 ; R11["upgradeType"] := 348.000000
	443	[397]	GETGLOBAL	R12 K42 ; R12 := sSkillAimIndicatorConverge
	444	[397]	SETTABLE 	R11 K78 R12 ; R11[0xefd0fde2] := R12
	445	[398]	NEWTABLE 	R12 0 5 ; R12 := {}
	446	[400]	SETTABLE 	R12 K75 K112 ; R12["upgradeType"] := 189.000000
	447	[401]	SETTABLE 	R12 K85 K102 ; R12["value"] := 0.200000
	448	[402]	SETTABLE 	R12 K87 K79 ; R12["operationType"] := 2.000000
	449	[404]	NEWTABLE 	R13 1 0 ; R13 := {}
	450	[404]	LOADK    	R14 := 1.000000
	451	[404]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	452	[404]	SETTABLE 	R12 K115 R13 ; R12[0xc9f6a7d7] := R13
	453	[405]	SETTABLE 	R12 K89 R1 ; R12[0xbd5d0ec1] := R1
	454	[407]	SETLIST  	R10 2 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
	455	[407]	SETTABLE 	R9 K99 R10 ; R9[0xcb3851b8] := R10
	456	[410]	NEWTABLE 	R10 0 10 ; R10 := {}
	457	[412]	NEWTABLE 	R11 1 0 ; R11 := {}
	458	[413]	NEWTABLE 	R12 0 2 ; R12 := {}
	459	[415]	SETTABLE 	R12 K75 K77 ; R12["upgradeType"] := 348.000000
	460	[416]	GETGLOBAL	R13 K46 ; R13 := sSkillMultiToolExpert
	461	[416]	SETTABLE 	R12 K78 R13 ; R12[0xefd0fde2] := R13
	462	[418]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	463	[418]	SETTABLE 	R10 K74 R11 ; R10[0x18d05d30] := R11
	464	[420]	NEWTABLE 	R11 1 0 ; R11 := {}
	465	[421]	NEWTABLE 	R12 0 5 ; R12 := {}
	466	[423]	SETTABLE 	R12 K75 K97 ; R12["upgradeType"] := 160.000000
	467	[424]	SETTABLE 	R12 K85 K114 ; R12["value"] := 0.500000
	468	[425]	SETTABLE 	R12 K87 K74 ; R12["operationType"] := 1.000000
	469	[426]	SETTABLE 	R12 K89 R4 ; R12[0xbd5d0ec1] := R4
	470	[427]	GETGLOBAL	R13 K63 ; R13 := CATEGORY_PLAYER
	471	[427]	SETTABLE 	R12 K96 R13 ; R12[0x159ed8d2] := R13
	472	[429]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	473	[429]	SETTABLE 	R10 K79 R11 ; R10[0xebfba9e4] := R11
	474	[431]	NEWTABLE 	R11 1 0 ; R11 := {}
	475	[432]	NEWTABLE 	R12 0 2 ; R12 := {}
	476	[434]	SETTABLE 	R12 K75 K77 ; R12["upgradeType"] := 348.000000
	477	[435]	GETGLOBAL	R13 K48 ; R13 := sSkillBCOrd
	478	[435]	SETTABLE 	R12 K78 R13 ; R12[0xefd0fde2] := R13
	479	[437]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	480	[437]	SETTABLE 	R10 K80 R11 ; R10[0xc0da2b81] := R11
	481	[439]	NEWTABLE 	R11 1 0 ; R11 := {}
	482	[440]	NEWTABLE 	R12 0 2 ; R12 := {}
	483	[442]	SETTABLE 	R12 K75 K77 ; R12["upgradeType"] := 348.000000
	484	[443]	GETGLOBAL	R13 K50 ; R13 := sSkillBCSuperAmmo
	485	[443]	SETTABLE 	R12 K78 R13 ; R12[0xefd0fde2] := R13
	486	[445]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	487	[445]	SETTABLE 	R10 K81 R11 ; R10[0x86f495d5] := R11
	488	[447]	NEWTABLE 	R11 2 0 ; R11 := {}
	489	[448]	NEWTABLE 	R12 0 2 ; R12 := {}
	490	[450]	SETTABLE 	R12 K75 K77 ; R12["upgradeType"] := 348.000000
	491	[451]	GETGLOBAL	R13 K54 ; R13 := sSkillBCHeal
	492	[451]	SETTABLE 	R12 K78 R13 ; R12[0xefd0fde2] := R13
	493	[452]	NEWTABLE 	R13 0 3 ; R13 := {}
	494	[454]	SETTABLE 	R13 K75 K116 ; R13["upgradeType"] := 351.000000
	495	[455]	SETTABLE 	R13 K85 K86 ; R13["value"] := 0.250000
	496	[456]	SETTABLE 	R13 K87 K79 ; R13["operationType"] := 2.000000
	497	[458]	SETLIST  	R11 2 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 2
	498	[458]	SETTABLE 	R10 K82 R11 ; R10[0x5bced4c4] := R11
	499	[460]	NEWTABLE 	R11 1 0 ; R11 := {}
	500	[461]	NEWTABLE 	R12 0 3 ; R12 := {}
	501	[463]	SETTABLE 	R12 K75 K117 ; R12["upgradeType"] := 353.000000
	502	[464]	SETTABLE 	R12 K85 K118 ; R12["value"] := -0.250000
	503	[465]	SETTABLE 	R12 K87 K79 ; R12["operationType"] := 2.000000
	504	[467]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	505	[467]	SETTABLE 	R10 K83 R11 ; R10[0x34e9f45c] := R11
	506	[469]	NEWTABLE 	R11 1 0 ; R11 := {}
	507	[470]	NEWTABLE 	R12 0 3 ; R12 := {}
	508	[472]	SETTABLE 	R12 K75 K116 ; R12["upgradeType"] := 351.000000
	509	[473]	SETTABLE 	R12 K85 K86 ; R12["value"] := 0.250000
	510	[474]	SETTABLE 	R12 K87 K79 ; R12["operationType"] := 2.000000
	511	[476]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	512	[476]	SETTABLE 	R10 K90 R11 ; R10[7.000000] := R11
	513	[478]	NEWTABLE 	R11 3 0 ; R11 := {}
	514	[479]	NEWTABLE 	R12 0 4 ; R12 := {}
	515	[481]	SETTABLE 	R12 K75 K119 ; R12["upgradeType"] := 64.000000
	516	[482]	SETTABLE 	R12 K85 K120 ; R12["value"] := 0.300000
	517	[483]	SETTABLE 	R12 K87 K79 ; R12["operationType"] := 2.000000
	518	[484]	GETGLOBAL	R13 K64 ; R13 := CATEGORY_ARCHWING
	519	[484]	SETTABLE 	R12 K96 R13 ; R12[0x159ed8d2] := R13
	520	[485]	NEWTABLE 	R13 0 4 ; R13 := {}
	521	[487]	SETTABLE 	R13 K75 K121 ; R13["upgradeType"] := 117.000000
	522	[488]	SETTABLE 	R13 K85 K120 ; R13["value"] := 0.300000
	523	[489]	SETTABLE 	R13 K87 K79 ; R13["operationType"] := 2.000000
	524	[490]	GETGLOBAL	R14 K64 ; R14 := CATEGORY_ARCHWING
	525	[490]	SETTABLE 	R13 K96 R14 ; R13[0x159ed8d2] := R14
	526	[491]	NEWTABLE 	R14 0 4 ; R14 := {}
	527	[493]	SETTABLE 	R14 K75 K122 ; R14["upgradeType"] := 15.000000
	528	[494]	SETTABLE 	R14 K85 K120 ; R14["value"] := 0.300000
	529	[495]	SETTABLE 	R14 K87 K79 ; R14["operationType"] := 2.000000
	530	[496]	GETGLOBAL	R15 K64 ; R15 := CATEGORY_ARCHWING
	531	[496]	SETTABLE 	R14 K96 R15 ; R14[0x159ed8d2] := R15
	532	[498]	SETLIST  	R11 3 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 3
	533	[498]	SETTABLE 	R10 K93 R11 ; R10[8.000000] := R11
	534	[500]	NEWTABLE 	R11 2 0 ; R11 := {}
	535	[501]	NEWTABLE 	R12 0 4 ; R12 := {}
	536	[503]	SETTABLE 	R12 K75 K119 ; R12["upgradeType"] := 64.000000
	537	[504]	SETTABLE 	R12 K85 K86 ; R12["value"] := 0.250000
	538	[505]	SETTABLE 	R12 K87 K79 ; R12["operationType"] := 2.000000
	539	[506]	GETGLOBAL	R13 K65 ; R13 := CATEGORY_MECH
	540	[506]	SETTABLE 	R12 K96 R13 ; R12[0x159ed8d2] := R13
	541	[507]	NEWTABLE 	R13 0 4 ; R13 := {}
	542	[509]	SETTABLE 	R13 K75 K121 ; R13["upgradeType"] := 117.000000
	543	[510]	SETTABLE 	R13 K85 K86 ; R13["value"] := 0.250000
	544	[511]	SETTABLE 	R13 K87 K79 ; R13["operationType"] := 2.000000
	545	[512]	GETGLOBAL	R14 K65 ; R14 := CATEGORY_MECH
	546	[512]	SETTABLE 	R13 K96 R14 ; R13[0x159ed8d2] := R14
	547	[514]	SETLIST  	R11 2 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 2
	548	[514]	SETTABLE 	R10 K98 R11 ; R10[0x603636ad] := R11
	549	[516]	NEWTABLE 	R11 1 0 ; R11 := {}
	550	[517]	NEWTABLE 	R12 0 2 ; R12 := {}
	551	[519]	SETTABLE 	R12 K75 K77 ; R12["upgradeType"] := 348.000000
	552	[520]	GETGLOBAL	R13 K52 ; R13 := sSkillBCUberFix
	553	[520]	SETTABLE 	R12 K78 R13 ; R12[0xefd0fde2] := R13
	554	[522]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	555	[522]	SETTABLE 	R10 K99 R11 ; R10[0xcb3851b8] := R11
	556	[525]	NEWTABLE 	R11 0 10 ; R11 := {}
	557	[527]	NEWTABLE 	R12 1 0 ; R12 := {}
	558	[528]	NEWTABLE 	R13 0 2 ; R13 := {}
	559	[530]	SETTABLE 	R13 K75 K77 ; R13["upgradeType"] := 348.000000
	560	[531]	GETGLOBAL	R14 K56 ; R14 := sSkillCrewCommand
	561	[531]	SETTABLE 	R13 K78 R14 ; R13[0xefd0fde2] := R14
	562	[533]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	563	[533]	SETTABLE 	R11 K74 R12 ; R11[0x18d05d30] := R12
	564	[535]	NEWTABLE 	R12 0 0 ; R12 := {}
	565	[537]	SETTABLE 	R11 K79 R12 ; R11[0xebfba9e4] := R12
	566	[539]	NEWTABLE 	R12 0 0 ; R12 := {}
	567	[541]	SETTABLE 	R11 K80 R12 ; R11[0xc0da2b81] := R12
	568	[543]	NEWTABLE 	R12 0 0 ; R12 := {}
	569	[545]	SETTABLE 	R11 K81 R12 ; R11[0x86f495d5] := R12
	570	[547]	NEWTABLE 	R12 0 0 ; R12 := {}
	571	[549]	SETTABLE 	R11 K82 R12 ; R11[0x5bced4c4] := R12
	572	[551]	NEWTABLE 	R12 0 0 ; R12 := {}
	573	[553]	SETTABLE 	R11 K83 R12 ; R11[0x34e9f45c] := R12
	574	[555]	NEWTABLE 	R12 0 0 ; R12 := {}
	575	[557]	SETTABLE 	R11 K90 R12 ; R11[7.000000] := R12
	576	[559]	NEWTABLE 	R12 0 0 ; R12 := {}
	577	[561]	SETTABLE 	R11 K93 R12 ; R11[8.000000] := R12
	578	[563]	NEWTABLE 	R12 1 0 ; R12 := {}
	579	[564]	NEWTABLE 	R13 0 2 ; R13 := {}
	580	[566]	SETTABLE 	R13 K75 K77 ; R13["upgradeType"] := 348.000000
	581	[567]	GETGLOBAL	R14 K58 ; R14 := sSkillSecondCommand
	582	[567]	SETTABLE 	R13 K78 R14 ; R13[0xefd0fde2] := R14
	583	[569]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	584	[569]	SETTABLE 	R11 K98 R12 ; R11[0x603636ad] := R12
	585	[571]	NEWTABLE 	R12 0 0 ; R12 := {}
	586	[573]	SETTABLE 	R11 K99 R12 ; R11[0xcb3851b8] := R12
	587	[576]	NEWTABLE 	R12 0 5 ; R12 := {}
	588	[577]	SETTABLE 	R12 K80 R7 ; R12[0xc0da2b81] := R7
	589	[578]	SETTABLE 	R12 K74 R8 ; R12[0x18d05d30] := R8
	590	[579]	SETTABLE 	R12 K79 R9 ; R12[0xebfba9e4] := R9
	591	[580]	SETTABLE 	R12 K81 R10 ; R12[0x86f495d5] := R10
	592	[581]	SETTABLE 	R12 K82 R11 ; R12[0x5bced4c4] := R11
	593	[621]	CLOSURE  	R13 0 ; R13 := closure(Function #1)
	594	[668]	CLOSURE  	R14 1 ; R14 := closure(Function #2)
	595	[668]	MOVE     	R0 R12 ; R0 := R12
	596	[668]	MOVE     	R0 R13 ; R0 := R13
	597	[624]	SETGLOBAL	R14 K124 ; GetUpgrades := R14
	598	[668]	RETURN   	R0 1 ; return 


function #1 <?:584,621> (79 instructions, 316 bytes at 0000016098CBD620)
1 param, 11 slots, 0 upvalues, 0 locals, 19 constants, 0 functions
	1	[585]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[585]	MOVE     	R2 R0 ; R2 := R0
	3	[585]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[585]	TEST     	R1 1 ; if R1 then PC := 11
	5	[585]	JMP      	11 ; PC := 11
	6	[585]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[585]	GETTABLE 	R2 R0 K1 ; R2 := R0["upgradeType"]
	8	[585]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[585]	TEST     	R1 0 ; if not R1 then PC := 13
	10	[585]	JMP      	13 ; PC := 13
	11	[586]	LOADNIL  	R1 R1 ; R1 := nil
	12	[586]	RETURN   	R1 2 ; return R1 
	13	[589]	GETGLOBAL	R1 K2 ; R1 := 0xaf6ac8d4
	14	[589]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x449a507e]
	15	[589]	CALL     	R1 1 2 ; R1 := R1()
	16	[590]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0x14894de6]
	17	[590]	GETTABLE 	R4 R0 K1 ; R4 := R0["upgradeType"]
	18	[590]	CALL     	R2 3 1 ; R2(R3,R4)
	19	[592]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	20	[592]	GETTABLE 	R3 R0 K5 ; R3 := R0["operationType"]
	21	[592]	CALL     	R2 2 2 ; R2 := R2(R3)
	22	[592]	TEST     	R2 0 ; if not R2 then PC := 28
	23	[592]	JMP      	28 ; PC := 28
	24	[593]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xc670d7f3]
	25	[593]	LOADK    	R4 := 3.000000
	26	[593]	CALL     	R2 3 1 ; R2(R3,R4)
	27	[593]	JMP      	31 ; PC := 31
	28	[595]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xc670d7f3]
	29	[595]	GETTABLE 	R4 R0 K5 ; R4 := R0["operationType"]
	30	[595]	CALL     	R2 3 1 ; R2(R3,R4)
	31	[598]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	32	[598]	GETTABLE 	R3 R0 K8 ; R3 := R0["value"]
	33	[598]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[598]	TEST     	R2 0 ; if not R2 then PC := 40
	35	[598]	JMP      	40 ; PC := 40
	36	[599]	SELF     	R2 R1 K9 ; R3 := R1; R2 := R1[0x8550d2a7]
	37	[599]	LOADK    	R4 := 1.000000
	38	[599]	CALL     	R2 3 1 ; R2(R3,R4)
	39	[599]	JMP      	43 ; PC := 43
	40	[601]	SELF     	R2 R1 K9 ; R3 := R1; R2 := R1[0x8550d2a7]
	41	[601]	GETTABLE 	R4 R0 K8 ; R4 := R0["value"]
	42	[601]	CALL     	R2 3 1 ; R2(R3,R4)
	43	[604]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	44	[604]	GETTABLE 	R3 R0 K10 ; R3 := R0["validType"]
	45	[604]	CALL     	R2 2 2 ; R2 := R2(R3)
	46	[604]	TEST     	R2 1 ; if R2 then PC := 51
	47	[604]	JMP      	51 ; PC := 51
	48	[605]	SELF     	R2 R1 K11 ; R3 := R1; R2 := R1[0xd314c0e0]
	49	[605]	GETTABLE 	R4 R0 K10 ; R4 := R0["validType"]
	50	[605]	CALL     	R2 3 1 ; R2(R3,R4)
	51	[608]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	52	[608]	GETTABLE 	R3 R0 K12 ; R3 := R0["validPosture"]
	53	[608]	CALL     	R2 2 2 ; R2 := R2(R3)
	54	[608]	TEST     	R2 1 ; if R2 then PC := 60
	55	[608]	JMP      	60 ; PC := 60
	56	[609]	SELF     	R2 R1 K13 ; R3 := R1; R2 := R1[0xf0952e00]
	57	[609]	GETTABLE 	R4 R0 K12 ; R4 := R0["validPosture"]
	58	[609]	OP_LOADBOOL	R5 1 0 ; R5 := true
	59	[609]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	60	[612]	GETGLOBAL	R2 K14 ; R2 := 0xc8802016
	61	[612]	GETTABLE 	R3 R0 K15 ; R3 := R0["validModifiers"]
	62	[612]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	63	[612]	JMP      	68 ; PC := 68
	64	[613]	SELF     	R7 R1 K16 ; R8 := R1; R7 := R1[0x81f914f1]
	65	[613]	MOVE     	R9 R6 ; R9 := R6
	66	[613]	OP_LOADBOOL	R10 1 0 ; R10 := true
	67	[613]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	68	[612]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 64; R4 := R5 end
	69	[613]	JMP      	64 ; PC := 64
	70	[616]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	71	[616]	GETTABLE 	R8 R0 K17 ; R8 := R0["filter"]
	72	[616]	CALL     	R7 2 2 ; R7 := R7(R8)
	73	[616]	TEST     	R7 1 ; if R7 then PC := 78
	74	[616]	JMP      	78 ; PC := 78
	75	[617]	SELF     	R7 R1 K18 ; R8 := R1; R7 := R1[0x05fe5d78]
	76	[617]	GETTABLE 	R9 R0 K17 ; R9 := R0["filter"]
	77	[617]	CALL     	R7 3 1 ; R7(R8,R9)
	78	[620]	RETURN   	R1 2 ; return R1 
	79	[621]	RETURN   	R0 1 ; return 

function #2 <?:624,668> (85 instructions, 340 bytes at 0000016098CBD6B0)
4 params, 21 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[625]	LT       	1 R1 K0 ; if R1 < 1.000000 then PC := 6
	2	[625]	JMP      	6 ; PC := 6
	3	[625]	GETGLOBAL	R4 K1 ; R4 := MAX_SKILL_RANK
	4	[625]	LT       	0 R4 R1 ; if R4 >= R1 then PC := 11
	5	[625]	JMP      	11 ; PC := 11
	6	[626]	GETGLOBAL	R4 K2 ; R4 := 0x3d106989
	7	[626]	LOADK    	R5 K3 ; R5 := "PLAYER_SKILL_LIB rank arg is incorrect"
	8	[626]	CALL     	R4 2 1 ; R4(R5)
	9	[627]	LOADNIL  	R4 R4 ; R4 := nil
	10	[627]	RETURN   	R4 2 ; return R4 
	11	[630]	GETUPVAL 	R4 U0 ; R4 := U0
	12	[630]	GETTABLE 	R4 R4 R0 ; R4 := R4[R0]
	13	[631]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	14	[631]	MOVE     	R6 R4 ; R6 := R4
	15	[631]	CALL     	R5 2 2 ; R5 := R5(R6)
	16	[631]	TEST     	R5 0 ; if not R5 then PC := 23
	17	[631]	JMP      	23 ; PC := 23
	18	[632]	GETGLOBAL	R5 K2 ; R5 := 0x3d106989
	19	[632]	LOADK    	R6 K5 ; R6 := "PLAYER_SKILL_LIB skill arg is incorrect"
	20	[632]	CALL     	R5 2 1 ; R5(R6)
	21	[633]	LOADNIL  	R5 R5 ; R5 := nil
	22	[633]	RETURN   	R5 2 ; return R5 
	23	[636]	NEWTABLE 	R5 0 0 ; R5 := {}
	24	[637]	LOADK    	R6 := 1.000000
	25	[638]	TEST     	R2 0 ; if not R2 then PC := 28
	26	[638]	JMP      	28 ; PC := 28
	27	[639]	MOVE     	R6 R1 ; R6 := R1
	28	[642]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	29	[642]	MOVE     	R8 R3 ; R8 := R3
	30	[642]	CALL     	R7 2 2 ; R7 := R7(R8)
	31	[642]	TEST     	R7 0 ; if not R7 then PC := 34
	32	[642]	JMP      	34 ; PC := 34
	33	[643]	GETGLOBAL	R3 K6 ; R3 := CATEGORY_ALL
	34	[646]	MOVE     	R7 R6 ; R7 := R6
	35	[646]	MOVE     	R8 R1 ; R8 := R1
	36	[646]	LOADK    	R9 := 1.000000
	37	[646]	FORPREP  	R7 83 ; R7 -= R9; PC := 83
	38	[647]	GETTABLE 	R11 R4 R10 ; R11 := R4[R10]
	39	[648]	LOADK    	R12 := 1.000000
	40	[648]	LEN      	R13 R11 ; R13 := # R11
	41	[648]	LOADK    	R14 := 1.000000
	42	[648]	FORPREP  	R12 82 ; R12 -= R14; PC := 82
	43	[649]	OP_LOADBOOL	R16 0 0 ; R16 := false
	44	[650]	GETGLOBAL	R17 K6 ; R17 := CATEGORY_ALL
	45	[650]	EQ       	0 R3 R17 ; if R3 ~= R17 then PC := 49
	46	[650]	JMP      	49 ; PC := 49
	47	[651]	OP_LOADBOOL	R16 1 0 ; R16 := true
	48	[651]	JMP      	67 ; PC := 67
	49	[652]	GETGLOBAL	R17 K4 ; R17 := 0x7b998233
	50	[652]	GETTABLE 	R18 R11 R15 ; R18 := R11[R15]
	51	[652]	GETTABLE 	R18 R18 K7 ; R18 := R18["category"]
	52	[652]	CALL     	R17 2 2 ; R17 := R17(R18)
	53	[652]	TEST     	R17 1 ; if R17 then PC := 62
	54	[652]	JMP      	62 ; PC := 62
	55	[653]	GETTABLE 	R17 R11 R15 ; R17 := R11[R15]
	56	[653]	GETTABLE 	R17 R17 K7 ; R17 := R17["category"]
	57	[653]	EQ       	1 R3 R17 ; if R3 == R17 then PC := 60
	58	[653]	JMP      	60 ; PC := 60
	59	[653]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 60
	60	[653]	OP_LOADBOOL	R16 1 0 ; R16 := true
	61	[653]	JMP      	67 ; PC := 67
	62	[655]	GETGLOBAL	R17 K8 ; R17 := CATEGORY_CREWSHIP
	63	[655]	EQ       	1 R3 R17 ; if R3 == R17 then PC := 66
	64	[655]	JMP      	66 ; PC := 66
	65	[655]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 66
	66	[655]	OP_LOADBOOL	R16 1 0 ; R16 := true
	67	[658]	TEST     	R16 0 ; if not R16 then PC := 82
	68	[658]	JMP      	82 ; PC := 82
	69	[659]	GETUPVAL 	R17 U1 ; R17 := U1
	70	[659]	GETTABLE 	R18 R11 R15 ; R18 := R11[R15]
	71	[659]	CALL     	R17 2 2 ; R17 := R17(R18)
	72	[660]	GETGLOBAL	R18 K4 ; R18 := 0x7b998233
	73	[660]	MOVE     	R19 R17 ; R19 := R17
	74	[660]	CALL     	R18 2 2 ; R18 := R18(R19)
	75	[660]	TEST     	R18 1 ; if R18 then PC := 82
	76	[660]	JMP      	82 ; PC := 82
	77	[661]	GETGLOBAL	R18 K9 ; R18 := 0x33bdd652
	78	[661]	GETTABLE 	R18 R18 K10 ; R18 := R18[0x23d5322f]
	79	[661]	MOVE     	R19 R5 ; R19 := R5
	80	[661]	MOVE     	R20 R17 ; R20 := R17
	81	[661]	CALL     	R18 3 1 ; R18(R19,R20)
	82	[648]	FORLOOP  	R12 43 ; R12 += R14; if R12 <= R13 then begin PC := 43; R15 := R12 end
	83	[646]	FORLOOP  	R7 38 ; R7 += R9; if R7 <= R8 then begin PC := 38; R10 := R7 end
	84	[667]	RETURN   	R5 2 ; return R5 
	85	[668]	RETURN   	R0 1 ; return 
