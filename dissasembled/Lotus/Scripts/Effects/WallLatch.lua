
main <?:0,0> (47 instructions, 188 bytes at 0000016084D4F9B0)
0+ params, 9 slots, 0 upvalues, 0 locals, 16 constants, 2 functions
	1	[9]	NEWTABLE 	R0 6 0 ; R0 := {}
	2	[10]	GETGLOBAL	R1 K0 ; R1 := 0x0469f296
	3	[10]	LOADK    	R2 K1 ; R2 := "GAME_L1_LEG2"
	4	[10]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[11]	GETGLOBAL	R2 K0 ; R2 := 0x0469f296
	6	[11]	LOADK    	R3 K2 ; R3 := "GAME_R1_LEG2"
	7	[11]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[12]	GETGLOBAL	R3 K0 ; R3 := 0x0469f296
	9	[12]	LOADK    	R4 K3 ; R4 := "GAME_L1_ARM2"
	10	[12]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[13]	GETGLOBAL	R4 K0 ; R4 := 0x0469f296
	12	[13]	LOADK    	R5 K4 ; R5 := "GAME_R1_ARM2"
	13	[13]	CALL     	R4 2 2 ; R4 := R4(R5)
	14	[14]	GETGLOBAL	R5 K0 ; R5 := 0x0469f296
	15	[14]	LOADK    	R6 K5 ; R6 := "GAME_C1_SPINE1"
	16	[14]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[15]	GETGLOBAL	R6 K0 ; R6 := 0x0469f296
	18	[15]	LOADK    	R7 K6 ; R7 := "GAME_C1_SPINE2"
	19	[15]	CALL     	R6 2 2 ; R6 := R6(R7)
	20	[16]	GETGLOBAL	R7 K0 ; R7 := 0x0469f296
	21	[16]	LOADK    	R8 K7 ; R8 := "GAME_C1_HEAD1"
	22	[16]	CALL     	R7 2 0 ; R7,... := R7(R8)
	23	[17]	SETLIST  	R0 0 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 0
	24	[18]	GETGLOBAL	R1 K0 ; R1 := 0x0469f296
	25	[18]	LOADK    	R2 K8 ; R2 := "ExtrudeVector"
	26	[18]	CALL     	R1 2 2 ; R1 := R1(R2)
	27	[19]	GETGLOBAL	R2 K0 ; R2 := 0x0469f296
	28	[19]	LOADK    	R3 K9 ; R3 := "ExtrudePoint"
	29	[19]	CALL     	R2 2 2 ; R2 := R2(R3)
	30	[20]	GETGLOBAL	R3 K0 ; R3 := 0x0469f296
	31	[20]	LOADK    	R4 K10 ; R4 := "OffsetTime"
	32	[20]	CALL     	R3 2 2 ; R3 := R3(R4)
	33	[21]	LOADK    	R4 K11 ; R4 := 0.150000
	34	[23]	GETGLOBAL	R5 K12 ; R5 := 0x7ed0a956
	35	[23]	LOADK    	R6 K13 ; R6 := "/Lotus/Powersuits/Loki/LokiBaseSuit"
	36	[23]	CALL     	R5 2 2 ; R5 := R5(R6)
	37	[174]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	38	[174]	MOVE     	R0 R5 ; R0 := R5
	39	[174]	MOVE     	R0 R1 ; R0 := R1
	40	[174]	MOVE     	R0 R2 ; R0 := R2
	41	[174]	MOVE     	R0 R0 ; R0 := R0
	42	[174]	MOVE     	R0 R4 ; R0 := R4
	43	[174]	MOVE     	R0 R3 ; R0 := R3
	44	[25]	SETGLOBAL	R6 K14 ; WallLatchFX := R6
	45	[206]	CLOSURE  	R6 1 ; R6 := closure(Function #2)
	46	[176]	SETGLOBAL	R6 K15 ; AimGlideEffects := R6
	47	[206]	RETURN   	R0 1 ; return 


function #1 <?:25,174> (440 instructions, 1760 bytes at 0000016084D4FAB0)
1 param, 48 slots, 6 upvalues, 0 locals, 77 constants, 0 functions
	1	[26]	GETGLOBAL	R1 K0 ; R1 := 0xcbd666e1
	2	[26]	LOADK    	R2 K1 ; R2 := 0.100000
	3	[26]	CALL     	R1 2 1 ; R1(R2)
	4	[27]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0x2b54251b]
	5	[27]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[28]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	7	[28]	MOVE     	R3 R1 ; R3 := R1
	8	[28]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[28]	TEST     	R2 0 ; if not R2 then PC := 12
	10	[28]	JMP      	12 ; PC := 12
	11	[29]	RETURN   	R0 1 ; return 
	12	[32]	SELF     	R2 R1 K4 ; R3 := R1; R2 := R1[0xf2deaf69]
	13	[32]	GETGLOBAL	R4 K5 ; R4 := gTennoAvatarType
	14	[32]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	15	[34]	SELF     	R3 R1 K6 ; R4 := R1; R3 := R1[0xde321e6f]
	16	[34]	CALL     	R3 2 2 ; R3 := R3(R4)
	17	[34]	SELF     	R3 R3 K7 ; R4 := R3; R3 := R3[0xf7d48ee0]
	18	[34]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[35]	GETGLOBAL	R4 K3 ; R4 := 0x7b998233
	20	[35]	MOVE     	R5 R3 ; R5 := R3
	21	[35]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[35]	TEST     	R4 0 ; if not R4 then PC := 25
	23	[35]	JMP      	25 ; PC := 25
	24	[36]	RETURN   	R0 1 ; return 
	25	[38]	SELF     	R4 R3 K4 ; R5 := R3; R4 := R3[0xf2deaf69]
	26	[38]	GETUPVAL 	R6 U0 ; R6 := U0
	27	[38]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	28	[40]	SELF     	R5 R1 K8 ; R6 := R1; R5 := R1[0x659d451f]
	29	[40]	GETGLOBAL	R7 K9 ; R7 := 0xe2013efb
	30	[40]	OP_LOADBOOL	R8 0 0 ; R8 := false
	31	[40]	LOADK    	R9 := 1.000000
	32	[40]	OP_LOADBOOL	R10 0 0 ; R10 := false
	33	[40]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	34	[42]	LOADNIL  	R5 R5 ; R5 := nil
	35	[43]	TEST     	R4 0 ; if not R4 then PC := 45
	36	[43]	JMP      	45 ; PC := 45
	37	[44]	SELF     	R6 R1 K8 ; R7 := R1; R6 := R1[0x659d451f]
	38	[44]	GETGLOBAL	R8 K11 ; R8 := 0x8737a55c
	39	[44]	OP_LOADBOOL	R9 0 0 ; R9 := false
	40	[44]	LOADK    	R10 := 1.000000
	41	[44]	OP_LOADBOOL	R11 0 0 ; R11 := false
	42	[44]	CALL     	R6 6 2 ; R6 := R6(R7,R8,R9,R10,R11)
	43	[44]	MOVE     	R5 R6 ; R5 := R6
	44	[44]	JMP      	52 ; PC := 52
	45	[46]	SELF     	R6 R1 K8 ; R7 := R1; R6 := R1[0x659d451f]
	46	[46]	GETGLOBAL	R8 K12 ; R8 := 0x7b3ff8b5
	47	[46]	OP_LOADBOOL	R9 0 0 ; R9 := false
	48	[46]	LOADK    	R10 := 1.000000
	49	[46]	OP_LOADBOOL	R11 0 0 ; R11 := false
	50	[46]	CALL     	R6 6 2 ; R6 := R6(R7,R8,R9,R10,R11)
	51	[46]	MOVE     	R5 R6 ; R5 := R6
	52	[49]	SELF     	R6 R0 K13 ; R7 := R0; R6 := R0[0x89531483]
	53	[49]	CALL     	R6 2 2 ; R6 := R6(R7)
	54	[50]	GETGLOBAL	R7 K14 ; R7 := 0x492c7f2a
	55	[50]	GETGLOBAL	R8 K15 ; R8 := 0xa421af95
	56	[50]	GETTABLE 	R9 R6 K16 ; R9 := R6["x"]
	57	[50]	UNM      	R9 R9 ; R9 := ^ R9
	58	[50]	GETTABLE 	R10 R6 K17 ; R10 := R6["y"]
	59	[50]	GETTABLE 	R11 R6 K18 ; R11 := R6["z"]
	60	[50]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	61	[50]	SELF     	R9 R1 K19 ; R10 := R1; R9 := R1[0x5280b883]
	62	[50]	CALL     	R9 2 0 ; R9,... := R9(R10)
	63	[50]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	64	[52]	SELF     	R8 R1 K20 ; R9 := R1; R8 := R1[0xc9f6a7d7]
	65	[52]	GETGLOBAL	R10 K21 ; R10 := 0x78403f35
	66	[52]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	67	[53]	GETGLOBAL	R9 K3 ; R9 := 0x7b998233
	68	[53]	MOVE     	R10 R8 ; R10 := R8
	69	[53]	CALL     	R9 2 2 ; R9 := R9(R10)
	70	[53]	TEST     	R9 0 ; if not R9 then PC := 80
	71	[53]	JMP      	80 ; PC := 80
	72	[54]	SELF     	R9 R1 K22 ; R10 := R1; R9 := R1[0x47901f07]
	73	[54]	GETGLOBAL	R11 K21 ; R11 := 0x78403f35
	74	[54]	GETGLOBAL	R12 K23 ; R12 := EMPTY_SYMBOL
	75	[54]	GETGLOBAL	R13 K24 ; R13 := ZERO_VECTOR
	76	[54]	GETGLOBAL	R14 K25 ; R14 := ZERO_ROTATION
	77	[54]	MOVE     	R15 R1 ; R15 := R1
	78	[54]	CALL     	R9 7 2 ; R9 := R9(R10,R11,R12,R13,R14,R15)
	79	[54]	MOVE     	R8 R9 ; R8 := R9
	80	[56]	GETGLOBAL	R9 K3 ; R9 := 0x7b998233
	81	[56]	MOVE     	R10 R8 ; R10 := R8
	82	[56]	CALL     	R9 2 2 ; R9 := R9(R10)
	83	[56]	TEST     	R9 1 ; if R9 then PC := 97
	84	[56]	JMP      	97 ; PC := 97
	85	[57]	SELF     	R9 R8 K26 ; R10 := R8; R9 := R8[0x986d2ab8]
	86	[57]	GETUPVAL 	R11 U1 ; R11 := U1
	87	[57]	GETTABLE 	R12 R7 K16 ; R12 := R7["x"]
	88	[57]	LOADK    	R13 := 0.000000
	89	[57]	GETTABLE 	R14 R7 K18 ; R14 := R7["z"]
	90	[57]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	91	[58]	SELF     	R9 R8 K26 ; R10 := R8; R9 := R8[0x986d2ab8]
	92	[58]	GETUPVAL 	R11 U2 ; R11 := U2
	93	[58]	GETTABLE 	R12 R7 K16 ; R12 := R7["x"]
	94	[58]	LOADK    	R13 := 1.000000
	95	[58]	GETTABLE 	R14 R7 K18 ; R14 := R7["z"]
	96	[58]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	97	[61]	SELF     	R9 R1 K27 ; R10 := R1; R9 := R1[0xf6ebd926]
	98	[61]	CALL     	R9 2 2 ; R9 := R9(R10)
	99	[61]	GETGLOBAL	R10 K15 ; R10 := 0xa421af95
	100	[61]	LOADK    	R11 := 0.000000
	101	[61]	LOADK    	R12 K28 ; R12 := 0.800000
	102	[61]	LOADK    	R13 := 0.000000
	103	[61]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	104	[61]	ADD      	R9 R9 R10 ; R9 := R9 + R10
	105	[61]	SUB      	R9 R9 R7 ; R9 := R9 - R7
	106	[63]	GETGLOBAL	R10 K29 ; R10 := 0x89326c93
	107	[63]	SELF     	R10 R10 K30 ; R11 := R10; R10 := R10[0x05909209]
	108	[63]	GETGLOBAL	R12 K31 ; R12 := 0x673e873c
	109	[63]	MOVE     	R13 R9 ; R13 := R9
	110	[63]	GETGLOBAL	R14 K25 ; R14 := ZERO_ROTATION
	111	[63]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	112	[65]	SELF     	R11 R1 K32 ; R12 := R1; R11 := R1[0xc1595bd5]
	113	[65]	GETGLOBAL	R13 K33 ; R13 := 0xb11624cf
	114	[65]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	115	[66]	LOADK    	R12 := 1.000000
	116	[66]	LEN      	R13 R11 ; R13 := # R11
	117	[66]	LOADK    	R14 := 1.000000
	118	[66]	FORPREP  	R12 122 ; R12 -= R14; PC := 122
	119	[67]	GETTABLE 	R16 R11 R15 ; R16 := R11[R15]
	120	[67]	SELF     	R16 R16 K34 ; R17 := R16; R16 := R16[0xa2880940]
	121	[67]	CALL     	R16 2 1 ; R16(R17)
	122	[66]	FORLOOP  	R12 119 ; R12 += R14; if R12 <= R13 then begin PC := 119; R15 := R12 end
	123	[69]	NEWTABLE 	R16 0 0 ; R16 := {}
	124	[70]	SELF     	R17 R1 K35 ; R18 := R1; R17 := R1[0x77f7be62]
	125	[70]	CALL     	R17 2 2 ; R17 := R17(R18)
	126	[71]	LOADK    	R18 := 1.000000
	127	[71]	GETGLOBAL	R19 K36 ; R19 := 0x5bced4c4
	128	[71]	GETTABLE 	R19 R19 K37 ; R19 := R19[0x99675e23]
	129	[71]	GETUPVAL 	R20 U3 ; R20 := U3
	130	[71]	LEN      	R20 R20 ; R20 := # R20
	131	[71]	MUL      	R20 R20 R17 ; R20 := R20 * R17
	132	[71]	CALL     	R19 2 2 ; R19 := R19(R20)
	133	[71]	LOADK    	R20 := 1.000000
	134	[71]	FORPREP  	R18 181 ; R18 -= R20; PC := 181
	135	[72]	SELF     	R22 R1 K22 ; R23 := R1; R22 := R1[0x47901f07]
	136	[72]	GETGLOBAL	R24 K33 ; R24 := 0xb11624cf
	137	[72]	GETUPVAL 	R25 U3 ; R25 := U3
	138	[72]	GETTABLE 	R25 R25 R21 ; R25 := R25[R21]
	139	[72]	GETGLOBAL	R26 K24 ; R26 := ZERO_VECTOR
	140	[72]	GETGLOBAL	R27 K25 ; R27 := ZERO_ROTATION
	141	[72]	MOVE     	R28 R1 ; R28 := R1
	142	[72]	CALL     	R22 7 2 ; R22 := R22(R23,R24,R25,R26,R27,R28)
	143	[73]	GETGLOBAL	R23 K3 ; R23 := 0x7b998233
	144	[73]	MOVE     	R24 R22 ; R24 := R22
	145	[73]	CALL     	R23 2 2 ; R23 := R23(R24)
	146	[73]	TEST     	R23 1 ; if R23 then PC := 181
	147	[73]	JMP      	181 ; PC := 181
	148	[74]	SELF     	R23 R1 K19 ; R24 := R1; R23 := R1[0x5280b883]
	149	[74]	CALL     	R23 2 2 ; R23 := R23(R24)
	150	[75]	SELF     	R24 R22 K38 ; R25 := R22; R24 := R22[0x9e9c67cb]
	151	[75]	GETGLOBAL	R26 K14 ; R26 := 0x492c7f2a
	152	[75]	GETGLOBAL	R27 K15 ; R27 := 0xa421af95
	153	[75]	GETGLOBAL	R28 K39 ; R28 := 0xc163f229
	154	[75]	GETUPVAL 	R29 U4 ; R29 := U4
	155	[75]	UNM      	R29 R29 ; R29 := ^ R29
	156	[75]	GETUPVAL 	R30 U4 ; R30 := U4
	157	[75]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	158	[75]	GETGLOBAL	R29 K39 ; R29 := 0xc163f229
	159	[75]	GETUPVAL 	R30 U4 ; R30 := U4
	160	[75]	UNM      	R30 R30 ; R30 := ^ R30
	161	[75]	GETUPVAL 	R31 U4 ; R31 := U4
	162	[75]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	163	[75]	LOADK    	R30 := 0.000000
	164	[75]	CALL     	R27 4 2 ; R27 := R27(R28,R29,R30)
	165	[75]	MOVE     	R28 R23 ; R28 := R23
	166	[75]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	167	[75]	ADD      	R26 R9 R26 ; R26 := R9 + R26
	168	[75]	CALL     	R24 3 1 ; R24(R25,R26)
	169	[76]	SELF     	R24 R22 K26 ; R25 := R22; R24 := R22[0x986d2ab8]
	170	[76]	GETUPVAL 	R26 U5 ; R26 := U5
	171	[76]	GETGLOBAL	R27 K39 ; R27 := 0xc163f229
	172	[76]	LOADK    	R28 := 0.000000
	173	[76]	LOADK    	R29 := 10.000000
	174	[76]	CALL     	R27 3 0 ; R27,... := R27(R28,R29)
	175	[76]	CALL     	R24 0 1 ; R24(R25,...)
	176	[77]	GETGLOBAL	R24 K40 ; R24 := 0x33bdd652
	177	[77]	GETTABLE 	R24 R24 K41 ; R24 := R24[0x23d5322f]
	178	[77]	MOVE     	R25 R16 ; R25 := R16
	179	[77]	MOVE     	R26 R22 ; R26 := R22
	180	[77]	CALL     	R24 3 1 ; R24(R25,R26)
	181	[71]	FORLOOP  	R18 135 ; R18 += R20; if R18 <= R19 then begin PC := 135; R21 := R18 end
	182	[81]	LOADNIL  	R24 R24 ; R24 := nil
	183	[82]	LOADK    	R25 := 1.000000
	184	[83]	SELF     	R26 R1 K42 ; R27 := R1; R26 := R1[0xa5e492d4]
	185	[83]	CALL     	R26 2 2 ; R26 := R26(R27)
	186	[83]	TEST     	R26 0 ; if not R26 then PC := 192
	187	[83]	JMP      	192 ; PC := 192
	188	[84]	GETGLOBAL	R26 K29 ; R26 := 0x89326c93
	189	[84]	SELF     	R26 R26 K43 ; R27 := R26; R26 := R26[0x7c1a0374]
	190	[84]	CALL     	R26 2 2 ; R26 := R26(R27)
	191	[84]	GETTABLE 	R24 R26 K44 ; R24 := R26["postProcess"]
	192	[87]	GETGLOBAL	R26 K3 ; R26 := 0x7b998233
	193	[87]	MOVE     	R27 R1 ; R27 := R1
	194	[87]	CALL     	R26 2 2 ; R26 := R26(R27)
	195	[87]	TEST     	R26 1 ; if R26 then PC := 366
	196	[87]	JMP      	366 ; PC := 366
	197	[87]	SELF     	R26 R1 K45 ; R27 := R1; R26 := R1[0x2047cfe7]
	198	[87]	CALL     	R26 2 2 ; R26 := R26(R27)
	199	[87]	TEST     	R26 1 ; if R26 then PC := 366
	200	[87]	JMP      	366 ; PC := 366
	201	[87]	SELF     	R26 R1 K46 ; R27 := R1; R26 := R1[0xe668799a]
	202	[87]	CALL     	R26 2 2 ; R26 := R26(R27)
	203	[87]	EQ       	1 R26 K47 ; if R26 == 20.000000 then PC := 213
	204	[87]	JMP      	213 ; PC := 213
	205	[87]	SELF     	R26 R1 K46 ; R27 := R1; R26 := R1[0xe668799a]
	206	[87]	CALL     	R26 2 2 ; R26 := R26(R27)
	207	[87]	EQ       	1 R26 K48 ; if R26 == 21.000000 then PC := 213
	208	[87]	JMP      	213 ; PC := 213
	209	[87]	SELF     	R26 R1 K46 ; R27 := R1; R26 := R1[0xe668799a]
	210	[87]	CALL     	R26 2 2 ; R26 := R26(R27)
	211	[87]	EQ       	0 R26 K49 ; if R26 ~= 22.000000 then PC := 366
	212	[87]	JMP      	366 ; PC := 366
	213	[87]	LT       	0 K50 R17 ; if 0.000000 >= R17 then PC := 366
	214	[87]	JMP      	366 ; PC := 366
	215	[88]	TEST     	R2 0 ; if not R2 then PC := 222
	216	[88]	JMP      	222 ; PC := 222
	217	[88]	SELF     	R26 R1 K51 ; R27 := R1; R26 := R1[0x35844cf2]
	218	[88]	CALL     	R26 2 2 ; R26 := R26(R27)
	219	[88]	TEST     	R26 1 ; if R26 then PC := 222
	220	[88]	JMP      	222 ; PC := 222
	221	[89]	JMP      	366 ; PC := 366
	222	[92]	SELF     	R26 R1 K27 ; R27 := R1; R26 := R1[0xf6ebd926]
	223	[92]	CALL     	R26 2 2 ; R26 := R26(R27)
	224	[92]	MOVE     	R9 R26 ; R9 := R26
	225	[93]	SELF     	R26 R1 K35 ; R27 := R1; R26 := R1[0x77f7be62]
	226	[93]	CALL     	R26 2 2 ; R26 := R26(R27)
	227	[93]	MOVE     	R17 R26 ; R17 := R26
	228	[95]	GETGLOBAL	R26 K3 ; R26 := 0x7b998233
	229	[95]	MOVE     	R27 R8 ; R27 := R8
	230	[95]	CALL     	R26 2 2 ; R26 := R26(R27)
	231	[95]	TEST     	R26 1 ; if R26 then PC := 255
	232	[95]	JMP      	255 ; PC := 255
	233	[96]	SELF     	R26 R8 K26 ; R27 := R8; R26 := R8[0x986d2ab8]
	234	[96]	GETGLOBAL	R28 K52 ; R28 := 0x6c97a788
	235	[96]	GETTABLE 	R28 R28 K53 ; R28 := R28["ALPHA_ATTEN"]
	236	[96]	MOVE     	R29 R17 ; R29 := R17
	237	[96]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	238	[97]	GETGLOBAL	R26 K14 ; R26 := 0x492c7f2a
	239	[97]	GETGLOBAL	R27 K15 ; R27 := 0xa421af95
	240	[97]	GETTABLE 	R28 R6 K16 ; R28 := R6["x"]
	241	[97]	UNM      	R28 R28 ; R28 := ^ R28
	242	[97]	GETTABLE 	R29 R6 K17 ; R29 := R6["y"]
	243	[97]	GETTABLE 	R30 R6 K18 ; R30 := R6["z"]
	244	[97]	CALL     	R27 4 2 ; R27 := R27(R28,R29,R30)
	245	[97]	SELF     	R28 R1 K19 ; R29 := R1; R28 := R1[0x5280b883]
	246	[97]	CALL     	R28 2 0 ; R28,... := R28(R29)
	247	[97]	CALL     	R26 0 2 ; R26 := R26(R27,...)
	248	[97]	MOVE     	R7 R26 ; R7 := R26
	249	[98]	SELF     	R26 R8 K26 ; R27 := R8; R26 := R8[0x986d2ab8]
	250	[98]	GETUPVAL 	R28 U2 ; R28 := U2
	251	[98]	GETTABLE 	R29 R7 K16 ; R29 := R7["x"]
	252	[98]	LOADK    	R30 := 1.000000
	253	[98]	GETTABLE 	R31 R7 K18 ; R31 := R7["z"]
	254	[98]	CALL     	R26 6 1 ; R26(R27,R28,R29,R30,R31)
	255	[101]	LOADK    	R26 := 1.000000
	256	[101]	LEN      	R27 R16 ; R27 := # R16
	257	[101]	LOADK    	R28 := 1.000000
	258	[101]	FORPREP  	R26 309 ; R26 -= R28; PC := 309
	259	[102]	GETGLOBAL	R30 K3 ; R30 := 0x7b998233
	260	[102]	GETTABLE 	R31 R16 R29 ; R31 := R16[R29]
	261	[102]	CALL     	R30 2 2 ; R30 := R30(R31)
	262	[102]	TEST     	R30 1 ; if R30 then PC := 309
	263	[102]	JMP      	309 ; PC := 309
	264	[103]	GETUPVAL 	R30 U3 ; R30 := U3
	265	[103]	LEN      	R30 R30 ; R30 := # R30
	266	[103]	MUL      	R30 R30 R17 ; R30 := R30 * R17
	267	[103]	LT       	0 R30 R29 ; if R30 >= R29 then PC := 278
	268	[103]	JMP      	278 ; PC := 278
	269	[104]	GETTABLE 	R30 R16 R29 ; R30 := R16[R29]
	270	[105]	GETGLOBAL	R31 K40 ; R31 := 0x33bdd652
	271	[105]	GETTABLE 	R31 R31 K54 ; R31 := R31[0x9c1f3b5a]
	272	[105]	MOVE     	R32 R16 ; R32 := R16
	273	[105]	MOVE     	R33 R29 ; R33 := R29
	274	[105]	CALL     	R31 3 1 ; R31(R32,R33)
	275	[106]	SELF     	R31 R30 K34 ; R32 := R30; R31 := R30[0xa2880940]
	276	[106]	CALL     	R31 2 1 ; R31(R32)
	277	[106]	JMP      	309 ; PC := 309
	278	[109]	GETGLOBAL	R31 K55 ; R31 := 0x55156ff7
	279	[109]	CALL     	R31 1 2 ; R31 := R31()
	280	[109]	MUL      	R31 R31 K56 ; R31 := R31 * 0.200000
	281	[110]	GETGLOBAL	R32 K57 ; R32 := 0xdef8aeae
	282	[110]	LOADK    	R33 := 3.000000
	283	[110]	LOADK    	R34 K28 ; R34 := 0.800000
	284	[110]	ADD      	R35 R29 R31 ; R35 := R29 + R31
	285	[110]	ADD      	R36 R29 K58 ; R36 := R29 + 0.300000
	286	[110]	ADD      	R36 R36 R31 ; R36 := R36 + R31
	287	[110]	CALL     	R32 5 2 ; R32 := R32(R33,R34,R35,R36)
	288	[111]	GETGLOBAL	R33 K57 ; R33 := 0xdef8aeae
	289	[111]	LOADK    	R34 := 3.000000
	290	[111]	LOADK    	R35 K28 ; R35 := 0.800000
	291	[111]	ADD      	R36 K59 R29 ; R36 := 0.700000 + R29
	292	[111]	ADD      	R36 R36 R31 ; R36 := R36 + R31
	293	[111]	ADD      	R37 K59 R29 ; R37 := 0.700000 + R29
	294	[111]	ADD      	R37 R37 K58 ; R37 := R37 + 0.300000
	295	[111]	ADD      	R37 R37 R31 ; R37 := R37 + R31
	296	[111]	CALL     	R33 5 2 ; R33 := R33(R34,R35,R36,R37)
	297	[112]	GETTABLE 	R34 R16 R29 ; R34 := R16[R29]
	298	[112]	SELF     	R34 R34 K38 ; R35 := R34; R34 := R34[0x9e9c67cb]
	299	[112]	GETGLOBAL	R36 K15 ; R36 := 0xa421af95
	300	[112]	MUL      	R37 R32 K60 ; R37 := R32 * 0.050000
	301	[112]	MUL      	R38 R33 K56 ; R38 := R33 * 0.200000
	302	[112]	ADD      	R38 K61 R38 ; R38 := 1.000000 + R38
	303	[112]	UNM      	R39 R32 ; R39 := ^ R32
	304	[112]	MUL      	R39 R39 K60 ; R39 := R39 * 0.050000
	305	[112]	CALL     	R36 4 2 ; R36 := R36(R37,R38,R39)
	306	[112]	ADD      	R36 R9 R36 ; R36 := R9 + R36
	307	[112]	SUB      	R36 R36 R6 ; R36 := R36 - R6
	308	[112]	CALL     	R34 3 1 ; R34(R35,R36)
	309	[101]	FORLOOP  	R26 259 ; R26 += R28; if R26 <= R27 then begin PC := 259; R29 := R26 end
	310	[117]	GETGLOBAL	R34 K3 ; R34 := 0x7b998233
	311	[117]	MOVE     	R35 R10 ; R35 := R10
	312	[117]	CALL     	R34 2 2 ; R34 := R34(R35)
	313	[117]	TEST     	R34 1 ; if R34 then PC := 332
	314	[117]	JMP      	332 ; PC := 332
	315	[118]	SELF     	R34 R10 K62 ; R35 := R10; R34 := R10[0x9307aa51]
	316	[118]	GETGLOBAL	R36 K15 ; R36 := 0xa421af95
	317	[118]	LOADK    	R37 := 0.000000
	318	[118]	LOADK    	R38 K28 ; R38 := 0.800000
	319	[118]	LOADK    	R39 := 0.000000
	320	[118]	CALL     	R36 4 2 ; R36 := R36(R37,R38,R39)
	321	[118]	ADD      	R36 R9 R36 ; R36 := R9 + R36
	322	[118]	SUB      	R36 R36 R6 ; R36 := R36 - R6
	323	[118]	CALL     	R34 3 1 ; R34(R35,R36)
	324	[119]	GETGLOBAL	R34 K63 ; R34 := 0xb7cbd06b
	325	[119]	MUL      	R35 K64 R17 ; R35 := 10.000000 * R17
	326	[119]	SUB      	R35 K65 R35 ; R35 := -2.000000 - R35
	327	[119]	LOADK    	R36 := 0.000000
	328	[119]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	329	[120]	SELF     	R35 R10 K66 ; R36 := R10; R35 := R10[0xaed5398d]
	330	[120]	MOVE     	R37 R34 ; R37 := R34
	331	[120]	CALL     	R35 3 1 ; R35(R36,R37)
	332	[123]	TEST     	R4 1 ; if R4 then PC := 346
	333	[123]	JMP      	346 ; PC := 346
	334	[124]	GETGLOBAL	R35 K36 ; R35 := 0x5bced4c4
	335	[124]	GETTABLE 	R35 R35 K67 ; R35 := R35[0xa40531d8]
	336	[124]	MOVE     	R36 R17 ; R36 := R17
	337	[124]	LOADK    	R37 := 0.500000
	338	[124]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	339	[125]	SELF     	R36 R5 K68 ; R37 := R5; R36 := R5[0xf96848d4]
	340	[125]	GETGLOBAL	R38 K69 ; R38 := 0x9bafffe3
	341	[125]	LOADK    	R39 := 0.500000
	342	[125]	LOADK    	R40 := 1.750000
	343	[125]	MOVE     	R41 R35 ; R41 := R35
	344	[125]	CALL     	R38 4 0 ; R38,... := R38(R39,R40,R41)
	345	[125]	CALL     	R36 0 1 ; R36(R37,...)
	346	[128]	GETGLOBAL	R36 K3 ; R36 := 0x7b998233
	347	[128]	MOVE     	R37 R24 ; R37 := R24
	348	[128]	CALL     	R36 2 2 ; R36 := R36(R37)
	349	[128]	TEST     	R36 1 ; if R36 then PC := 358
	350	[128]	JMP      	358 ; PC := 358
	351	[129]	SELF     	R36 R24 K70 ; R37 := R24; R36 := R24[0xc7bdb630]
	352	[129]	GETGLOBAL	R38 K36 ; R38 := 0x5bced4c4
	353	[129]	GETTABLE 	R38 R38 K71 ; R38 := R38[0xb62ecfe0]
	354	[129]	LOADK    	R39 := 0.000000
	355	[129]	MUL      	R40 R25 K72 ; R40 := R25 * 5.000000
	356	[129]	CALL     	R38 3 0 ; R38,... := R38(R39,R40)
	357	[129]	CALL     	R36 0 1 ; R36(R37,...)
	358	[131]	GETGLOBAL	R36 K73 ; R36 := 0x67652851
	359	[131]	CALL     	R36 1 2 ; R36 := R36()
	360	[131]	MUL      	R36 R36 K74 ; R36 := R36 * 0.500000
	361	[131]	SUB      	R25 R25 R36 ; R25 := R25 - R36
	362	[132]	GETGLOBAL	R36 K0 ; R36 := 0xcbd666e1
	363	[132]	LOADK    	R37 := 0.000000
	364	[132]	CALL     	R36 2 1 ; R36(R37)
	365	[132]	JMP      	192 ; PC := 192
	366	[135]	GETGLOBAL	R36 K3 ; R36 := 0x7b998233
	367	[135]	MOVE     	R37 R24 ; R37 := R24
	368	[135]	CALL     	R36 2 2 ; R36 := R36(R37)
	369	[135]	TEST     	R36 1 ; if R36 then PC := 374
	370	[135]	JMP      	374 ; PC := 374
	371	[136]	SELF     	R36 R24 K70 ; R37 := R24; R36 := R24[0xc7bdb630]
	372	[136]	LOADK    	R38 := 0.000000
	373	[136]	CALL     	R36 3 1 ; R36(R37,R38)
	374	[139]	OP_LOADBOOL	R36 0 0 ; R36 := false
	375	[139]	TEST     	R36 0 ; if not R36 then PC := 387
	376	[139]	JMP      	387 ; PC := 387
	377	[140]	LOADK    	R36 := 1.000000
	378	[141]	LT       	0 K50 R36 ; if 0.000000 >= R36 then PC := 387
	379	[141]	JMP      	387 ; PC := 387
	380	[142]	GETGLOBAL	R37 K73 ; R37 := 0x67652851
	381	[142]	CALL     	R37 1 2 ; R37 := R37()
	382	[142]	SUB      	R36 R36 R37 ; R36 := R36 - R37
	383	[143]	GETGLOBAL	R37 K0 ; R37 := 0xcbd666e1
	384	[143]	LOADK    	R38 := 0.000000
	385	[143]	CALL     	R37 2 1 ; R37(R38)
	386	[143]	JMP      	378 ; PC := 378
	387	[147]	LOADK    	R37 := 1.000000
	388	[147]	LEN      	R38 R16 ; R38 := # R16
	389	[147]	LOADK    	R39 := 1.000000
	390	[147]	FORPREP  	R37 399 ; R37 -= R39; PC := 399
	391	[148]	GETTABLE 	R41 R16 R40 ; R41 := R16[R40]
	392	[149]	GETGLOBAL	R42 K3 ; R42 := 0x7b998233
	393	[149]	MOVE     	R43 R41 ; R43 := R41
	394	[149]	CALL     	R42 2 2 ; R42 := R42(R43)
	395	[149]	TEST     	R42 1 ; if R42 then PC := 399
	396	[149]	JMP      	399 ; PC := 399
	397	[150]	SELF     	R42 R41 K34 ; R43 := R41; R42 := R41[0xa2880940]
	398	[150]	CALL     	R42 2 1 ; R42(R43)
	399	[147]	FORLOOP  	R37 391 ; R37 += R39; if R37 <= R38 then begin PC := 391; R40 := R37 end
	400	[154]	GETGLOBAL	R42 K3 ; R42 := 0x7b998233
	401	[154]	MOVE     	R43 R1 ; R43 := R1
	402	[154]	CALL     	R42 2 2 ; R42 := R42(R43)
	403	[154]	TEST     	R42 1 ; if R42 then PC := 411
	404	[154]	JMP      	411 ; PC := 411
	405	[155]	SELF     	R42 R1 K8 ; R43 := R1; R42 := R1[0x659d451f]
	406	[155]	GETGLOBAL	R44 K75 ; R44 := 0x8d5eaf1c
	407	[155]	OP_LOADBOOL	R45 0 0 ; R45 := false
	408	[155]	LOADK    	R46 := 1.000000
	409	[155]	OP_LOADBOOL	R47 0 0 ; R47 := false
	410	[155]	CALL     	R42 6 1 ; R42(R43,R44,R45,R46,R47)
	411	[158]	GETGLOBAL	R42 K3 ; R42 := 0x7b998233
	412	[158]	MOVE     	R43 R10 ; R43 := R10
	413	[158]	CALL     	R42 2 2 ; R42 := R42(R43)
	414	[158]	TEST     	R42 1 ; if R42 then PC := 418
	415	[158]	JMP      	418 ; PC := 418
	416	[159]	SELF     	R42 R10 K34 ; R43 := R10; R42 := R10[0xa2880940]
	417	[159]	CALL     	R42 2 1 ; R42(R43)
	418	[163]	GETGLOBAL	R42 K3 ; R42 := 0x7b998233
	419	[163]	MOVE     	R43 R8 ; R43 := R8
	420	[163]	CALL     	R42 2 2 ; R42 := R42(R43)
	421	[163]	TEST     	R42 1 ; if R42 then PC := 425
	422	[163]	JMP      	425 ; PC := 425
	423	[164]	SELF     	R42 R8 K34 ; R43 := R8; R42 := R8[0xa2880940]
	424	[164]	CALL     	R42 2 1 ; R42(R43)
	425	[167]	GETGLOBAL	R42 K3 ; R42 := 0x7b998233
	426	[167]	MOVE     	R43 R5 ; R43 := R5
	427	[167]	CALL     	R42 2 2 ; R42 := R42(R43)
	428	[167]	TEST     	R42 1 ; if R42 then PC := 433
	429	[167]	JMP      	433 ; PC := 433
	430	[168]	SELF     	R42 R5 K76 ; R43 := R5; R42 := R5[0x6cf1e476]
	431	[168]	OP_LOADBOOL	R44 1 0 ; R44 := true
	432	[168]	CALL     	R42 3 1 ; R42(R43,R44)
	433	[171]	GETGLOBAL	R42 K3 ; R42 := 0x7b998233
	434	[171]	MOVE     	R43 R0 ; R43 := R0
	435	[171]	CALL     	R42 2 2 ; R42 := R42(R43)
	436	[171]	TEST     	R42 1 ; if R42 then PC := 440
	437	[171]	JMP      	440 ; PC := 440
	438	[172]	SELF     	R42 R0 K34 ; R43 := R0; R42 := R0[0xa2880940]
	439	[172]	CALL     	R42 2 1 ; R42(R43)
	440	[174]	RETURN   	R0 1 ; return 

function #2 <?:176,206> (68 instructions, 272 bytes at 0000016084D4FB40)
1 param, 8 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[177]	GETGLOBAL	R1 K0 ; R1 := 0xcbd666e1
	2	[177]	LOADK    	R2 := 0.000000
	3	[177]	CALL     	R1 2 1 ; R1(R2)
	4	[178]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x2b54251b]
	5	[178]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[179]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	7	[179]	MOVE     	R3 R1 ; R3 := R1
	8	[179]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[179]	TEST     	R2 0 ; if not R2 then PC := 12
	10	[179]	JMP      	12 ; PC := 12
	11	[180]	RETURN   	R0 1 ; return 
	12	[182]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0xa5e492d4]
	13	[182]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[182]	TEST     	R2 1 ; if R2 then PC := 17
	15	[182]	JMP      	17 ; PC := 17
	16	[183]	RETURN   	R0 1 ; return 
	17	[185]	LOADNIL  	R2 R2 ; R2 := nil
	18	[186]	LOADK    	R3 := 1.000000
	19	[187]	GETGLOBAL	R4 K4 ; R4 := 0x89326c93
	20	[187]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x7c1a0374]
	21	[187]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[187]	GETTABLE 	R2 R4 K6 ; R2 := R4["postProcess"]
	23	[188]	SELF     	R4 R1 K7 ; R5 := R1; R4 := R1[0x77f7be62]
	24	[188]	CALL     	R4 2 2 ; R4 := R4(R5)
	25	[190]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	26	[190]	MOVE     	R6 R1 ; R6 := R1
	27	[190]	CALL     	R5 2 2 ; R5 := R5(R6)
	28	[190]	TEST     	R5 1 ; if R5 then PC := 53
	29	[190]	JMP      	53 ; PC := 53
	30	[190]	LT       	0 K8 R4 ; if 0.000000 >= R4 then PC := 53
	31	[190]	JMP      	53 ; PC := 53
	32	[190]	LT       	0 K8 R3 ; if 0.000000 >= R3 then PC := 53
	33	[190]	JMP      	53 ; PC := 53
	34	[191]	SELF     	R5 R1 K7 ; R6 := R1; R5 := R1[0x77f7be62]
	35	[191]	CALL     	R5 2 2 ; R5 := R5(R6)
	36	[191]	MOVE     	R4 R5 ; R4 := R5
	37	[192]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	38	[192]	MOVE     	R6 R2 ; R6 := R2
	39	[192]	CALL     	R5 2 2 ; R5 := R5(R6)
	40	[192]	TEST     	R5 1 ; if R5 then PC := 45
	41	[192]	JMP      	45 ; PC := 45
	42	[193]	SELF     	R5 R2 K9 ; R6 := R2; R5 := R2[0xc7bdb630]
	43	[193]	MUL      	R7 R3 K10 ; R7 := R3 * 10.000000
	44	[193]	CALL     	R5 3 1 ; R5(R6,R7)
	45	[195]	GETGLOBAL	R5 K11 ; R5 := 0x67652851
	46	[195]	CALL     	R5 1 2 ; R5 := R5()
	47	[195]	MUL      	R5 R5 K12 ; R5 := R5 * 0.600000
	48	[195]	SUB      	R3 R3 R5 ; R3 := R3 - R5
	49	[196]	GETGLOBAL	R5 K0 ; R5 := 0xcbd666e1
	50	[196]	LOADK    	R6 := 0.000000
	51	[196]	CALL     	R5 2 1 ; R5(R6)
	52	[196]	JMP      	25 ; PC := 25
	53	[199]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	54	[199]	MOVE     	R6 R2 ; R6 := R2
	55	[199]	CALL     	R5 2 2 ; R5 := R5(R6)
	56	[199]	TEST     	R5 1 ; if R5 then PC := 61
	57	[199]	JMP      	61 ; PC := 61
	58	[200]	SELF     	R5 R2 K9 ; R6 := R2; R5 := R2[0xc7bdb630]
	59	[200]	LOADK    	R7 := 0.000000
	60	[200]	CALL     	R5 3 1 ; R5(R6,R7)
	61	[203]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	62	[203]	MOVE     	R6 R0 ; R6 := R0
	63	[203]	CALL     	R5 2 2 ; R5 := R5(R6)
	64	[203]	TEST     	R5 1 ; if R5 then PC := 68
	65	[203]	JMP      	68 ; PC := 68
	66	[204]	SELF     	R5 R0 K13 ; R6 := R0; R5 := R0[0xa2880940]
	67	[204]	CALL     	R5 2 1 ; R5(R6)
	68	[206]	RETURN   	R0 1 ; return 
