
main <?:0,0> (258 instructions, 1032 bytes at 00000160FBF36A90)
0+ params, 41 slots, 0 upvalues, 0 locals, 70 constants, 20 functions
	1	[3]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[4]	NEWTABLE 	R1 0 0 ; R1 := {}
	3	[5]	NEWTABLE 	R2 0 0 ; R2 := {}
	4	[6]	NEWTABLE 	R3 0 0 ; R3 := {}
	5	[7]	NEWTABLE 	R4 0 0 ; R4 := {}
	6	[8]	NEWTABLE 	R5 0 0 ; R5 := {}
	7	[9]	LOADNIL  	R6 R7 ; R6 := R7 := nil
	8	[11]	OP_LOADBOOL	R8 1 0 ; R8 := true
	9	[13]	NEWTABLE 	R9 0 0 ; R9 := {}
	10	[15]	LOADNIL  	R10 R11 ; R10 := R11 := nil
	11	[17]	GETGLOBAL	R12 K0 ; R12 := 0x00046924
	12	[17]	LOADK    	R13 := 90.000000
	13	[17]	LOADK    	R14 := 0.000000
	14	[17]	LOADK    	R15 := 0.000000
	15	[17]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	16	[18]	LOADNIL  	R13 R13 ; R13 := nil
	17	[20]	LOADK    	R14 := 1.000000
	18	[21]	LOADK    	R15 := 2.000000
	19	[22]	LOADK    	R16 := 3.000000
	20	[24]	LOADK    	R17 := 1.000000
	21	[25]	LOADK    	R18 := 2.000000
	22	[27]	GETGLOBAL	R19 K1 ; R19 := 0x88efc25e
	23	[27]	LOADK    	R20 K2 ; R20 := "/Lotus/Types/Game/LandingCraftDeco"
	24	[27]	CALL     	R19 2 2 ; R19 := R19(R20)
	25	[29]	LOADNIL  	R20 R20 ; R20 := nil
	26	[32]	NEWTABLE 	R21 0 2 ; R21 := {}
	27	[33]	SETTABLE 	R21 K3 K4 ; R21["backDropActualScale"] := 100.000000
	28	[36]	NEWTABLE 	R22 0 9 ; R22 := {}
	29	[37]	SETTABLE 	R22 K6 K7 ; R22["useAmbientLighting"] := false
	30	[38]	GETGLOBAL	R23 K9 ; R23 := 0xa421af95
	31	[38]	LOADK    	R24 := -4.000000
	32	[38]	LOADK    	R25 := 4.500000
	33	[38]	LOADK    	R26 := 0.250000
	34	[38]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	35	[38]	MUL      	R23 R23 K10 ; R23 := R23 * 5.000000
	36	[38]	SETTABLE 	R22 K8 R23 ; R22["offset"] := R23
	37	[39]	GETGLOBAL	R23 K9 ; R23 := 0xa421af95
	38	[39]	LOADK    	R24 := 20.000000
	39	[39]	LOADK    	R25 := -4.000000
	40	[39]	LOADK    	R26 := -4.000000
	41	[39]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	42	[39]	MUL      	R23 R23 K12 ; R23 := R23 * 10.000000
	43	[39]	SETTABLE 	R22 K11 R23 ; R22["lookTo"] := R23
	44	[40]	GETGLOBAL	R23 K14 ; R23 := 0x60130201
	45	[40]	LOADK    	R24 := 255.000000
	46	[40]	LOADK    	R25 := 219.000000
	47	[40]	LOADK    	R26 := 181.000000
	48	[40]	LOADK    	R27 := 255.000000
	49	[40]	CALL     	R23 5 2 ; R23 := R23(R24,R25,R26,R27)
	50	[40]	SETTABLE 	R22 K13 R23 ; R22["color"] := R23
	51	[41]	SETTABLE 	R22 K15 K16 ; R22["brightness"] := 3.000000
	52	[42]	SETTABLE 	R22 K17 K18 ; R22["falloffExponent"] := 0.010000
	53	[43]	SETTABLE 	R22 K19 K20 ; R22["fastDynamic"] := true
	54	[44]	SETTABLE 	R22 K21 K16 ; R22["effect"] := 3.000000
	55	[45]	SETTABLE 	R22 K22 K23 ; R22["effectSecondary"] := 0.990000
	56	[46]	SETTABLE 	R21 K5 R22 ; R21[0xa40531d8] := R22
	57	[51]	NEWTABLE 	R22 0 4 ; R22 := {}
	58	[52]	NEWTABLE 	R23 0 10 ; R23 := {}
	59	[53]	SETTABLE 	R23 K25 K26 ; R23["minTime"] := 12.000000
	60	[54]	SETTABLE 	R23 K27 K28 ; R23["maxTime"] := 18.000000
	61	[55]	SETTABLE 	R23 K29 K30 ; R23["timeToRotate"] := 4.000000
	62	[56]	SETTABLE 	R23 K31 K32 ; R23["timeToPlaySound"] := 7.000000
	63	[57]	GETGLOBAL	R24 K34 ; R24 := 0x0469f296
	64	[57]	LOADK    	R25 K35 ; R25 := "SFXSquadShipArrival"
	65	[57]	CALL     	R24 2 2 ; R24 := R24(R25)
	66	[57]	SETTABLE 	R23 K33 R24 ; R23["soundRes"] := R24
	67	[58]	NEWTABLE 	R24 3 0 ; R24 := {}
	68	[58]	LOADK    	R25 K37 ; R25 := 0.707000
	69	[58]	LOADK    	R26 K38 ; R26 := 0.912000
	70	[58]	LOADK    	R27 := 1.000000
	71	[58]	SETLIST  	R24 3 1 ; R24[(1-1)*FPF+i] := R(24+i), 1 <= i <= 3
	72	[58]	SETTABLE 	R23 K36 R24 ; R23["partitions"] := R24
	73	[59]	CLOSURE  	R24 0 ; R24 := closure(Function #1)
	74	[59]	SETTABLE 	R23 K39 R24 ; R23["timeFunc"] := R24
	75	[60]	CLOSURE  	R24 1 ; R24 := closure(Function #2)
	76	[60]	SETTABLE 	R23 K40 R24 ; R23["distanceFunc"] := R24
	77	[62]	NEWTABLE 	R24 0 3 ; R24 := {}
	78	[63]	NEWTABLE 	R25 0 3 ; R25 := {}
	79	[64]	SETTABLE 	R25 K43 K18 ; R25["strength"] := 0.010000
	80	[65]	GETGLOBAL	R26 K9 ; R26 := 0xa421af95
	81	[65]	LOADK    	R27 := 0.000000
	82	[65]	LOADK    	R28 := 1.000000
	83	[65]	LOADK    	R29 := 0.000000
	84	[65]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	85	[65]	SETTABLE 	R25 K44 R26 ; R25["normal"] := R26
	86	[66]	SETTABLE 	R25 K45 K46 ; R25["speed"] := 0.020000
	87	[67]	SETTABLE 	R24 K42 R25 ; R24["position"] := R25
	88	[68]	NEWTABLE 	R25 0 3 ; R25 := {}
	89	[69]	SETTABLE 	R25 K43 K18 ; R25["strength"] := 0.010000
	90	[70]	GETGLOBAL	R26 K9 ; R26 := 0xa421af95
	91	[70]	LOADK    	R27 := 5.000000
	92	[70]	LOADK    	R28 := 5.000000
	93	[70]	LOADK    	R29 := 20.000000
	94	[70]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	95	[70]	SETTABLE 	R25 K48 R26 ; R25["vec"] := R26
	96	[71]	SETTABLE 	R25 K45 K46 ; R25["speed"] := 0.020000
	97	[72]	SETTABLE 	R24 K47 R25 ; R24["rotation"] := R25
	98	[73]	SETTABLE 	R24 K49 K50 ; R24["decay"] := 0.100000
	99	[74]	SETTABLE 	R23 K41 R24 ; R23["noise"] := R24
	100	[76]	GETGLOBAL	R24 K9 ; R24 := 0xa421af95
	101	[76]	LOADK    	R25 := -300.000000
	102	[76]	LOADK    	R26 := 60.000000
	103	[76]	LOADK    	R27 := -3.000000
	104	[76]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	105	[76]	SETTABLE 	R23 K42 R24 ; R23["position"] := R24
	106	[77]	SETTABLE 	R22 K24 R23 ; R22["flyIn"] := R23
	107	[79]	NEWTABLE 	R23 0 3 ; R23 := {}
	108	[80]	SETTABLE 	R23 K52 K53 ; R23["time"] := 20.000000
	109	[83]	GETGLOBAL	R24 K9 ; R24 := 0xa421af95
	110	[83]	LOADK    	R25 := 200.000000
	111	[83]	LOADK    	R26 := 10.000000
	112	[83]	LOADK    	R27 := 0.000000
	113	[83]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	114	[83]	SETTABLE 	R23 K42 R24 ; R23["position"] := R24
	115	[84]	GETGLOBAL	R24 K34 ; R24 := 0x0469f296
	116	[84]	LOADK    	R25 K54 ; R25 := "SFXSquadShipDepart"
	117	[84]	CALL     	R24 2 2 ; R24 := R24(R25)
	118	[84]	SETTABLE 	R23 K33 R24 ; R23["soundRes"] := R24
	119	[85]	SETTABLE 	R22 K51 R23 ; R22["flyOut"] := R23
	120	[87]	NEWTABLE 	R23 0 4 ; R23 := {}
	121	[88]	SETTABLE 	R23 K52 K26 ; R23["time"] := 12.000000
	122	[89]	NEWTABLE 	R24 0 3 ; R24 := {}
	123	[90]	SETTABLE 	R24 K43 K56 ; R24["strength"] := 0.080000
	124	[91]	GETGLOBAL	R25 K9 ; R25 := 0xa421af95
	125	[91]	LOADK    	R26 := 0.000000
	126	[91]	LOADK    	R27 := 1.000000
	127	[91]	LOADK    	R28 := 0.000000
	128	[91]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	129	[91]	SETTABLE 	R24 K44 R25 ; R24["normal"] := R25
	130	[92]	SETTABLE 	R24 K45 K46 ; R24["speed"] := 0.020000
	131	[93]	SETTABLE 	R23 K42 R24 ; R23["position"] := R24
	132	[94]	NEWTABLE 	R24 0 3 ; R24 := {}
	133	[95]	SETTABLE 	R24 K43 K57 ; R24["strength"] := 0.800000
	134	[96]	GETGLOBAL	R25 K9 ; R25 := 0xa421af95
	135	[96]	LOADK    	R26 := 5.000000
	136	[96]	LOADK    	R27 := 5.000000
	137	[96]	LOADK    	R28 := 20.000000
	138	[96]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	139	[96]	SETTABLE 	R24 K48 R25 ; R24["vec"] := R25
	140	[97]	SETTABLE 	R24 K45 K46 ; R24["speed"] := 0.020000
	141	[98]	SETTABLE 	R23 K47 R24 ; R23["rotation"] := R24
	142	[99]	SETTABLE 	R23 K49 K50 ; R23["decay"] := 0.100000
	143	[100]	SETTABLE 	R22 K55 R23 ; R22["idle"] := R23
	144	[102]	NEWTABLE 	R23 0 3 ; R23 := {}
	145	[104]	SETTABLE 	R23 K59 K60 ; R23["planetMargin"] := 8.000000
	146	[107]	SETTABLE 	R23 K61 K10 ; R23["maxAttempts"] := 5.000000
	147	[111]	SETTABLE 	R23 K62 K30 ; R23["planetMarginOvershoot"] := 4.000000
	148	[112]	SETTABLE 	R22 K58 R23 ; R22["collision"] := R23
	149	[121]	CLOSURE  	R23 2 ; R23 := closure(Function #3)
	150	[129]	CLOSURE  	R24 3 ; R24 := closure(Function #4)
	151	[170]	CLOSURE  	R25 4 ; R25 := closure(Function #5)
	152	[170]	MOVE     	R0 R4 ; R0 := R4
	153	[170]	MOVE     	R0 R17 ; R0 := R17
	154	[467]	CLOSURE  	R26 5 ; R26 := closure(Function #6)
	155	[467]	MOVE     	R0 R14 ; R0 := R14
	156	[467]	MOVE     	R0 R22 ; R0 := R22
	157	[467]	MOVE     	R0 R13 ; R0 := R13
	158	[467]	MOVE     	R0 R15 ; R0 := R15
	159	[467]	MOVE     	R0 R17 ; R0 := R17
	160	[525]	CLOSURE  	R27 6 ; R27 := closure(Function #7)
	161	[525]	MOVE     	R0 R3 ; R0 := R3
	162	[525]	MOVE     	R0 R6 ; R0 := R6
	163	[525]	MOVE     	R0 R19 ; R0 := R19
	164	[525]	MOVE     	R0 R21 ; R0 := R21
	165	[525]	MOVE     	R0 R22 ; R0 := R22
	166	[525]	MOVE     	R0 R26 ; R0 := R26
	167	[525]	MOVE     	R0 R14 ; R0 := R14
	168	[525]	MOVE     	R0 R25 ; R0 := R25
	169	[525]	MOVE     	R0 R17 ; R0 := R17
	170	[525]	MOVE     	R0 R16 ; R0 := R16
	171	[525]	MOVE     	R0 R18 ; R0 := R18
	172	[539]	CLOSURE  	R28 7 ; R28 := closure(Function #8)
	173	[687]	CLOSURE  	R29 8 ; R29 := closure(Function #9)
	174	[687]	MOVE     	R0 R28 ; R0 := R28
	175	[687]	MOVE     	R0 R5 ; R0 := R5
	176	[687]	MOVE     	R0 R6 ; R0 := R6
	177	[687]	MOVE     	R0 R19 ; R0 := R19
	178	[687]	MOVE     	R0 R21 ; R0 := R21
	179	[687]	MOVE     	R0 R22 ; R0 := R22
	180	[687]	MOVE     	R0 R13 ; R0 := R13
	181	[687]	MOVE     	R0 R23 ; R0 := R23
	182	[687]	MOVE     	R0 R26 ; R0 := R26
	183	[687]	MOVE     	R0 R14 ; R0 := R14
	184	[687]	MOVE     	R0 R25 ; R0 := R25
	185	[687]	MOVE     	R0 R17 ; R0 := R17
	186	[687]	MOVE     	R0 R16 ; R0 := R16
	187	[687]	MOVE     	R0 R18 ; R0 := R18
	188	[712]	CLOSURE  	R30 9 ; R30 := closure(Function #10)
	189	[712]	MOVE     	R0 R28 ; R0 := R28
	190	[712]	MOVE     	R0 R2 ; R0 := R2
	191	[769]	CLOSURE  	R20 10 ; R20 := closure(Function #11)
	192	[769]	MOVE     	R0 R2 ; R0 := R2
	193	[769]	MOVE     	R0 R29 ; R0 := R29
	194	[769]	MOVE     	R0 R1 ; R0 := R1
	195	[783]	CLOSURE  	R31 11 ; R31 := closure(Function #12)
	196	[783]	MOVE     	R0 R26 ; R0 := R26
	197	[783]	MOVE     	R0 R15 ; R0 := R15
	198	[783]	MOVE     	R0 R25 ; R0 := R25
	199	[783]	MOVE     	R0 R17 ; R0 := R17
	200	[783]	MOVE     	R0 R6 ; R0 := R6
	201	[987]	CLOSURE  	R32 12 ; R32 := closure(Function #13)
	202	[987]	MOVE     	R0 R1 ; R0 := R1
	203	[987]	MOVE     	R0 R3 ; R0 := R3
	204	[987]	MOVE     	R0 R4 ; R0 := R4
	205	[987]	MOVE     	R0 R5 ; R0 := R5
	206	[987]	MOVE     	R0 R6 ; R0 := R6
	207	[987]	MOVE     	R0 R7 ; R0 := R7
	208	[987]	MOVE     	R0 R9 ; R0 := R9
	209	[987]	MOVE     	R0 R8 ; R0 := R8
	210	[987]	MOVE     	R0 R13 ; R0 := R13
	211	[987]	MOVE     	R0 R21 ; R0 := R21
	212	[987]	MOVE     	R0 R22 ; R0 := R22
	213	[987]	MOVE     	R0 R10 ; R0 := R10
	214	[987]	MOVE     	R0 R11 ; R0 := R11
	215	[987]	MOVE     	R0 R12 ; R0 := R12
	216	[987]	MOVE     	R0 R24 ; R0 := R24
	217	[987]	MOVE     	R0 R29 ; R0 := R29
	218	[987]	MOVE     	R0 R27 ; R0 := R27
	219	[987]	MOVE     	R0 R0 ; R0 := R0
	220	[1018]	CLOSURE  	R33 13 ; R33 := closure(Function #14)
	221	[1018]	MOVE     	R0 R30 ; R0 := R30
	222	[1018]	MOVE     	R0 R29 ; R0 := R29
	223	[1018]	MOVE     	R0 R1 ; R0 := R1
	224	[1037]	CLOSURE  	R34 14 ; R34 := closure(Function #15)
	225	[1037]	MOVE     	R0 R1 ; R0 := R1
	226	[1037]	MOVE     	R0 R31 ; R0 := R31
	227	[1053]	CLOSURE  	R35 15 ; R35 := closure(Function #16)
	228	[1053]	MOVE     	R0 R1 ; R0 := R1
	229	[1053]	MOVE     	R0 R31 ; R0 := R31
	230	[1089]	CLOSURE  	R36 16 ; R36 := closure(Function #17)
	231	[1089]	MOVE     	R0 R1 ; R0 := R1
	232	[1089]	MOVE     	R0 R34 ; R0 := R34
	233	[1092]	CLOSURE  	R37 17 ; R37 := closure(Function #18)
	234	[1092]	MOVE     	R0 R35 ; R0 := R35
	235	[1096]	CLOSURE  	R38 18 ; R38 := closure(Function #19)
	236	[1244]	CLOSURE  	R39 19 ; R39 := closure(Function #20)
	237	[1244]	MOVE     	R0 R0 ; R0 := R0
	238	[1244]	MOVE     	R0 R32 ; R0 := R32
	239	[1244]	MOVE     	R0 R20 ; R0 := R20
	240	[1244]	MOVE     	R0 R4 ; R0 := R4
	241	[1244]	MOVE     	R0 R17 ; R0 := R17
	242	[1244]	MOVE     	R0 R13 ; R0 := R13
	243	[1244]	MOVE     	R0 R23 ; R0 := R23
	244	[1244]	MOVE     	R0 R3 ; R0 := R3
	245	[1244]	MOVE     	R0 R26 ; R0 := R26
	246	[1244]	MOVE     	R0 R15 ; R0 := R15
	247	[1244]	MOVE     	R0 R25 ; R0 := R25
	248	[1244]	MOVE     	R0 R6 ; R0 := R6
	249	[1246]	NEWTABLE 	R40 0 7 ; R40 := {}
	250	[1248]	SETTABLE 	R40 K63 R35 ; R40["LeaveSquad"] := R35
	251	[1249]	SETTABLE 	R40 K64 R32 ; R40["Initialize"] := R32
	252	[1250]	SETTABLE 	R40 K65 R39 ; R40[0x33bdd652] := R39
	253	[1251]	SETTABLE 	R40 K66 R33 ; R40[0x9c1f3b5a] := R33
	254	[1252]	SETTABLE 	R40 K67 R34 ; R40["RemoveMember"] := R34
	255	[1253]	SETTABLE 	R40 K68 R36 ; R40["UpdateSquad"] := R36
	256	[1254]	SETTABLE 	R40 K69 R37 ; R40["Shutdown"] := R37
	257	[1255]	RETURN   	R40 2 ; return R40 
	258	[1255]	RETURN   	R0 1 ; return 


function #1 <?:59,59> (3 instructions, 12 bytes at 00000160FBF37CE0)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[59]	MUL      	R1 R0 R0 ; R1 := R0 * R0
	2	[59]	RETURN   	R1 2 ; return R1 
	3	[59]	RETURN   	R0 1 ; return 

function #2 <?:60,60> (6 instructions, 24 bytes at 00000160FBF37D70)
1 param, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[60]	GETGLOBAL	R1 K0 ; R1 := 0x5bced4c4
	2	[60]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x3eda26fc]
	3	[60]	MUL      	R2 R0 K2 ; R2 := R0 * 1.570000
	4	[60]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	5	[60]	RETURN   	R1 0 ; return R1,... 
	6	[60]	RETURN   	R0 1 ; return 

function #3 <?:116,121> (10 instructions, 40 bytes at 00000160FBF37EA0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[117]	LOADK    	R1 K0 ; R1 := 0.060000
	2	[118]	GETGLOBAL	R2 K1 ; R2 := 0x5bced4c4
	3	[118]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xa40531d8]
	4	[118]	DIV      	R3 R0 K3 ; R3 := R0 / 600.000000
	5	[118]	SUB      	R3 K4 R3 ; R3 := 1.000000 - R3
	6	[118]	LOADK    	R4 := 2.000000
	7	[118]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	8	[118]	MUL      	R2 R2 R1 ; R2 := R2 * R1
	9	[120]	RETURN   	R2 2 ; return R2 
	10	[121]	RETURN   	R0 1 ; return 

function #4 <?:126,129> (7 instructions, 28 bytes at 00000160FBF38010)
3 params, 4 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[127]	NEWTABLE 	R3 0 4 ; R3 := {}
	2	[127]	SETTABLE 	R3 K0 K1 ; R3["inUse"] := false
	3	[127]	SETTABLE 	R3 K2 R0 ; R3[0xf64b7262] := R0
	4	[127]	SETTABLE 	R3 K3 R1 ; R3["flyIn"] := R1
	5	[127]	SETTABLE 	R3 K4 R2 ; R3["flyOut"] := R2
	6	[128]	RETURN   	R3 2 ; return R3 
	7	[129]	RETURN   	R0 1 ; return 

function #5 <?:132,170> (62 instructions, 248 bytes at 00000160FBF38190)
5 params, 21 slots, 2 upvalues, 0 locals, 24 constants, 0 functions
	1	[133]	GETTABLE 	R5 R1 K0 ; R5 := R1["ship"]
	2	[136]	LOADK    	R6 := 1.000000
	3	[136]	GETUPVAL 	R7 U0 ; R7 := U0
	4	[136]	LEN      	R7 R7 ; R7 := # R7
	5	[136]	LOADK    	R8 := 1.000000
	6	[136]	FORPREP  	R6 18 ; R6 -= R8; PC := 18
	7	[137]	GETUPVAL 	R10 U0 ; R10 := U0
	8	[137]	GETTABLE 	R10 R10 R9 ; R10 := R10[R9]
	9	[137]	GETTABLE 	R10 R10 K1 ; R10 := R10["name"]
	10	[137]	EQ       	0 R10 R0 ; if R10 ~= R0 then PC := 18
	11	[137]	JMP      	18 ; PC := 18
	12	[138]	GETGLOBAL	R10 K2 ; R10 := 0x33bdd652
	13	[138]	GETTABLE 	R10 R10 K3 ; R10 := R10[0x9c1f3b5a]
	14	[138]	GETUPVAL 	R11 U0 ; R11 := U0
	15	[138]	MOVE     	R12 R9 ; R12 := R9
	16	[138]	CALL     	R10 3 1 ; R10(R11,R12)
	17	[139]	JMP      	19 ; PC := 19
	18	[136]	FORLOOP  	R6 7 ; R6 += R8; if R6 <= R7 then begin PC := 7; R9 := R6 end
	19	[145]	NEWTABLE 	R10 0 7 ; R10 := {}
	20	[145]	SETTABLE 	R10 K1 R0 ; R10["name"] := R0
	21	[145]	SETTABLE 	R10 K0 R5 ; R10["ship"] := R5
	22	[145]	NEWTABLE 	R11 0 0 ; R11 := {}
	23	[145]	SETTABLE 	R10 K4 R11 ; R10["keyframes"] := R11
	24	[145]	SETTABLE 	R10 K5 K6 ; R10["keyframeIndex"] := 1.000000
	25	[145]	SETTABLE 	R10 K7 K8 ; R10["timeInKeyframe"] := 0.000000
	26	[145]	SETTABLE 	R10 K9 R4 ; R10["callback"] := R4
	27	[145]	SETTABLE 	R10 K10 R3 ; R10["animType"] := R3
	28	[147]	GETUPVAL 	R11 U1 ; R11 := U1
	29	[147]	EQ       	0 R3 R11 ; if R3 ~= R11 then PC := 45
	30	[147]	JMP      	45 ; PC := 45
	31	[148]	SELF     	R11 R5 K11 ; R12 := R5; R11 := R5[0xcb3851b8]
	32	[148]	CALL     	R11 2 2 ; R11 := R11(R12)
	33	[149]	SELF     	R12 R5 K12 ; R13 := R5; R12 := R5[0xd1586535]
	34	[149]	CALL     	R12 2 2 ; R12 := R12(R13)
	35	[150]	GETTABLE 	R13 R2 K6 ; R13 := R2[1.000000]
	36	[153]	GETTABLE 	R14 R13 K14 ; R14 := R13["velocity"]
	37	[153]	SETTABLE 	R10 K13 R14 ; R10["initialVelocity"] := R14
	38	[154]	GETTABLE 	R14 R13 K15 ; R14 := R13["acceleration"]
	39	[154]	SETTABLE 	R10 K15 R14 ; R10["acceleration"] := R14
	40	[155]	SETTABLE 	R10 K16 R12 ; R10["position"] := R12
	41	[156]	SETTABLE 	R10 K17 R12 ; R10["initialPosition"] := R12
	42	[157]	SETTABLE 	R10 K18 R11 ; R10["initialRotation"] := R11
	43	[158]	GETTABLE 	R14 R13 K20 ; R14 := R13["rotation"]
	44	[158]	SETTABLE 	R10 K19 R14 ; R10["endRotation"] := R14
	45	[161]	GETGLOBAL	R14 K2 ; R14 := 0x33bdd652
	46	[161]	GETTABLE 	R14 R14 K21 ; R14 := R14[0x23d5322f]
	47	[161]	GETUPVAL 	R15 U0 ; R15 := U0
	48	[161]	MOVE     	R16 R10 ; R16 := R10
	49	[161]	CALL     	R14 3 1 ; R14(R15,R16)
	50	[164]	LOADK    	R14 := 1.000000
	51	[164]	LEN      	R15 R2 ; R15 := # R2
	52	[164]	LOADK    	R16 := 1.000000
	53	[164]	FORPREP  	R14 59 ; R14 -= R16; PC := 59
	54	[165]	GETGLOBAL	R18 K2 ; R18 := 0x33bdd652
	55	[165]	GETTABLE 	R18 R18 K21 ; R18 := R18[0x23d5322f]
	56	[165]	GETTABLE 	R19 R10 K4 ; R19 := R10["keyframes"]
	57	[165]	GETTABLE 	R20 R2 R17 ; R20 := R2[R17]
	58	[165]	CALL     	R18 3 1 ; R18(R19,R20)
	59	[164]	FORLOOP  	R14 54 ; R14 += R16; if R14 <= R15 then begin PC := 54; R17 := R14 end
	60	[168]	SETTABLE 	R1 K22 R10 ; R1["animation"] := R10
	61	[169]	SETTABLE 	R10 K23 R1 ; R10["member"] := R1
	62	[170]	RETURN   	R0 1 ; return 

function #6 <?:186,467> (426 instructions, 1704 bytes at 000001608544B480)
2 params, 79 slots, 5 upvalues, 0 locals, 68 constants, 4 functions
	1	[188]	GETTABLE 	R2 R0 K0 ; R2 := R0["location"]
	2	[189]	GETTABLE 	R3 R0 K1 ; R3 := R0["animation"]
	3	[190]	GETTABLE 	R4 R0 K2 ; R4 := R0["ship"]
	4	[192]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	5	[192]	MOVE     	R6 R4 ; R6 := R4
	6	[192]	CALL     	R5 2 2 ; R5 := R5(R6)
	7	[192]	TEST     	R5 0 ; if not R5 then PC := 10
	8	[192]	JMP      	10 ; PC := 10
	9	[193]	RETURN   	R0 1 ; return 
	10	[219]	CLOSURE  	R5 0 ; R5 := closure(Function #1)
	11	[246]	CLOSURE  	R6 1 ; R6 := closure(Function #2)
	12	[246]	MOVE     	R0 R4 ; R0 := R4
	13	[248]	NEWTABLE 	R7 0 0 ; R7 := {}
	14	[249]	GETUPVAL 	R8 U0 ; R8 := U0
	15	[249]	EQ       	0 R1 R8 ; if R1 ~= R8 then PC := 264
	16	[249]	JMP      	264 ; PC := 264
	17	[251]	GETTABLE 	R8 R2 K4 ; R8 := R2["position"]
	18	[251]	GETTABLE 	R9 R2 K5 ; R9 := R2["flyIn"]
	19	[251]	GETTABLE 	R9 R9 K6 ; R9 := R9["from"]
	20	[251]	GETTABLE 	R9 R9 K4 ; R9 := R9["position"]
	21	[251]	SUB      	R8 R8 R9 ; R8 := R8 - R9
	22	[252]	GETGLOBAL	R9 K7 ; R9 := 0xae2294fa
	23	[252]	MOVE     	R10 R8 ; R10 := R8
	24	[252]	CALL     	R9 2 2 ; R9 := R9(R10)
	25	[253]	MOVE     	R10 R8 ; R10 := R8
	26	[254]	GETGLOBAL	R11 K8 ; R11 := 0xc2892f65
	27	[254]	MOVE     	R12 R10 ; R12 := R10
	28	[254]	CALL     	R11 2 1 ; R11(R12)
	29	[256]	GETUPVAL 	R11 U1 ; R11 := U1
	30	[256]	GETTABLE 	R11 R11 K5 ; R11 := R11["flyIn"]
	31	[256]	GETTABLE 	R11 R11 K9 ; R11 := R11["minTime"]
	32	[257]	GETUPVAL 	R12 U1 ; R12 := U1
	33	[257]	GETTABLE 	R12 R12 K5 ; R12 := R12["flyIn"]
	34	[257]	GETTABLE 	R12 R12 K10 ; R12 := R12["maxTime"]
	35	[258]	GETGLOBAL	R13 K11 ; R13 := 0x5bced4c4
	36	[258]	GETTABLE 	R13 R13 K12 ; R13 := R13[0x55f27c30]
	37	[258]	GETGLOBAL	R14 K11 ; R14 := 0x5bced4c4
	38	[258]	GETTABLE 	R14 R14 K13 ; R14 := R14[0x3630e649]
	39	[258]	CALL     	R14 1 2 ; R14 := R14()
	40	[258]	SUB      	R15 R12 R11 ; R15 := R12 - R11
	41	[258]	MUL      	R14 R14 R15 ; R14 := R14 * R15
	42	[258]	CALL     	R13 2 2 ; R13 := R13(R14)
	43	[258]	ADD      	R13 R13 R11 ; R13 := R13 + R11
	44	[259]	MOVE     	R14 R13 ; R14 := R13
	45	[261]	GETGLOBAL	R15 K14 ; R15 := 0x20b7f774
	46	[261]	GETTABLE 	R16 R2 K5 ; R16 := R2["flyIn"]
	47	[261]	GETTABLE 	R16 R16 K6 ; R16 := R16["from"]
	48	[261]	GETTABLE 	R16 R16 K4 ; R16 := R16["position"]
	49	[261]	GETTABLE 	R17 R2 K4 ; R17 := R2["position"]
	50	[261]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	51	[262]	GETGLOBAL	R16 K14 ; R16 := 0x20b7f774
	52	[262]	GETTABLE 	R17 R2 K4 ; R17 := R2["position"]
	53	[262]	GETUPVAL 	R18 U2 ; R18 := U2
	54	[262]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	55	[263]	GETUPVAL 	R17 U1 ; R17 := U1
	56	[263]	GETTABLE 	R17 R17 K5 ; R17 := R17["flyIn"]
	57	[263]	GETTABLE 	R17 R17 K15 ; R17 := R17["timeToRotate"]
	58	[264]	GETUPVAL 	R18 U1 ; R18 := U1
	59	[264]	GETTABLE 	R18 R18 K5 ; R18 := R18["flyIn"]
	60	[264]	GETTABLE 	R18 R18 K16 ; R18 := R18["timeToPlaySound"]
	61	[266]	GETGLOBAL	R19 K11 ; R19 := 0x5bced4c4
	62	[266]	GETTABLE 	R19 R19 K17 ; R19 := R19[0xb62ecfe0]
	63	[266]	MOVE     	R20 R14 ; R20 := R14
	64	[266]	MOVE     	R21 R17 ; R21 := R17
	65	[266]	MOVE     	R22 R18 ; R22 := R18
	66	[266]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	67	[266]	MOVE     	R14 R19 ; R14 := R19
	68	[270]	NEWTABLE 	R19 0 0 ; R19 := {}
	69	[271]	NEWTABLE 	R20 0 0 ; R20 := {}
	70	[272]	LOADK    	R21 := 1.000000
	71	[272]	GETUPVAL 	R22 U1 ; R22 := U1
	72	[272]	GETTABLE 	R22 R22 K5 ; R22 := R22["flyIn"]
	73	[272]	GETTABLE 	R22 R22 K18 ; R22 := R22["partitions"]
	74	[272]	LEN      	R22 R22 ; R22 := # R22
	75	[272]	LOADK    	R23 := 1.000000
	76	[272]	FORPREP  	R21 87 ; R21 -= R23; PC := 87
	77	[273]	GETGLOBAL	R25 K19 ; R25 := 0x33bdd652
	78	[273]	GETTABLE 	R25 R25 K20 ; R25 := R25[0x23d5322f]
	79	[273]	MOVE     	R26 R20 ; R26 := R20
	80	[273]	NEWTABLE 	R27 0 1 ; R27 := {}
	81	[273]	GETUPVAL 	R28 U1 ; R28 := U1
	82	[273]	GETTABLE 	R28 R28 K5 ; R28 := R28["flyIn"]
	83	[273]	GETTABLE 	R28 R28 K18 ; R28 := R28["partitions"]
	84	[273]	GETTABLE 	R28 R28 R24 ; R28 := R28[R24]
	85	[273]	SETTABLE 	R27 K21 R28 ; R27["p"] := R28
	86	[273]	CALL     	R25 3 1 ; R25(R26,R27)
	87	[272]	FORLOOP  	R21 77 ; R21 += R23; if R21 <= R22 then begin PC := 77; R24 := R21 end
	88	[277]	LOADK    	R25 := 0.000000
	89	[278]	LOADK    	R26 := 0.000000
	90	[279]	LOADK    	R27 := 1.000000
	91	[279]	LEN      	R28 R20 ; R28 := # R20
	92	[279]	LOADK    	R29 := 1.000000
	93	[279]	FORPREP  	R27 123 ; R27 -= R29; PC := 123
	94	[280]	GETTABLE 	R31 R20 R30 ; R31 := R20[R30]
	95	[281]	GETTABLE 	R32 R31 K21 ; R32 := R31["p"]
	96	[283]	NEWTABLE 	R33 0 0 ; R33 := {}
	97	[284]	GETUPVAL 	R34 U1 ; R34 := U1
	98	[284]	GETTABLE 	R34 R34 K5 ; R34 := R34["flyIn"]
	99	[284]	GETTABLE 	R34 R34 K23 ; R34 := R34[0x8c550b65]
	100	[284]	MOVE     	R35 R32 ; R35 := R32
	101	[284]	CALL     	R34 2 2 ; R34 := R34(R35)
	102	[284]	MUL      	R34 R14 R34 ; R34 := R14 * R34
	103	[284]	SUB      	R34 R34 R26 ; R34 := R34 - R26
	104	[284]	SETTABLE 	R33 K22 R34 ; R33["time"] := R34
	105	[285]	GETUPVAL 	R34 U1 ; R34 := U1
	106	[285]	GETTABLE 	R34 R34 K5 ; R34 := R34["flyIn"]
	107	[285]	GETTABLE 	R34 R34 K25 ; R34 := R34[0x1dcb7bc7]
	108	[285]	MOVE     	R35 R32 ; R35 := R32
	109	[285]	CALL     	R34 2 2 ; R34 := R34(R35)
	110	[285]	MUL      	R34 R9 R34 ; R34 := R9 * R34
	111	[285]	SUB      	R34 R34 R25 ; R34 := R34 - R25
	112	[285]	SETTABLE 	R33 K24 R34 ; R33["distance"] := R34
	113	[286]	SETTABLE 	R33 K26 R10 ; R33["direction"] := R10
	114	[288]	GETTABLE 	R34 R33 K24 ; R34 := R33["distance"]
	115	[288]	ADD      	R25 R25 R34 ; R25 := R25 + R34
	116	[289]	GETTABLE 	R34 R33 K22 ; R34 := R33["time"]
	117	[289]	ADD      	R26 R26 R34 ; R26 := R26 + R34
	118	[291]	GETGLOBAL	R34 K19 ; R34 := 0x33bdd652
	119	[291]	GETTABLE 	R34 R34 K20 ; R34 := R34[0x23d5322f]
	120	[291]	MOVE     	R35 R19 ; R35 := R19
	121	[291]	MOVE     	R36 R33 ; R36 := R33
	122	[291]	CALL     	R34 3 1 ; R34(R35,R36)
	123	[279]	FORLOOP  	R27 94 ; R27 += R29; if R27 <= R28 then begin PC := 94; R30 := R27 end
	124	[295]	GETGLOBAL	R34 K27 ; R34 := 0xa421af95
	125	[295]	CALL     	R34 1 2 ; R34 := R34()
	126	[296]	LEN      	R35 R19 ; R35 := # R19
	127	[296]	LOADK    	R36 := 1.000000
	128	[296]	LOADK    	R37 := -1.000000
	129	[296]	FORPREP  	R35 146 ; R35 -= R37; PC := 146
	130	[298]	GETTABLE 	R39 R19 R38 ; R39 := R19[R38]
	131	[302]	GETTABLE 	R40 R39 K26 ; R40 := R39["direction"]
	132	[302]	GETTABLE 	R41 R39 K24 ; R41 := R39["distance"]
	133	[302]	MUL      	R40 R40 R41 ; R40 := R40 * R41
	134	[302]	MUL      	R40 R40 K28 ; R40 := R40 * 2.000000
	135	[302]	GETTABLE 	R41 R39 K22 ; R41 := R39["time"]
	136	[302]	DIV      	R40 R40 R41 ; R40 := R40 / R41
	137	[302]	SUB      	R40 R40 R34 ; R40 := R40 - R34
	138	[306]	SUB      	R41 R34 R40 ; R41 := R34 - R40
	139	[306]	GETTABLE 	R42 R39 K22 ; R42 := R39["time"]
	140	[306]	DIV      	R41 R41 R42 ; R41 := R41 / R42
	141	[308]	SETTABLE 	R39 K29 R40 ; R39["v_0"] := R40
	142	[309]	SETTABLE 	R39 K30 R34 ; R39["v_f"] := R34
	143	[310]	SETTABLE 	R39 K31 R41 ; R39["a"] := R41
	144	[311]	SETTABLE 	R39 K32 R15 ; R39["rotation"] := R15
	145	[313]	MOVE     	R34 R40 ; R34 := R40
	146	[296]	FORLOOP  	R35 130 ; R35 += R37; if R35 <= R36 then begin PC := 130; R38 := R35 end
	147	[318]	MOVE     	R42 R5 ; R42 := R5
	148	[318]	MOVE     	R43 R19 ; R43 := R19
	149	[318]	MOVE     	R44 R17 ; R44 := R17
	150	[318]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	151	[319]	TEST     	R42 0 ; if not R42 then PC := 209
	152	[319]	JMP      	209 ; PC := 209
	153	[320]	GETTABLE 	R43 R42 K33 ; R43 := R42["segment"]
	154	[321]	GETTABLE 	R44 R42 K34 ; R44 := R42["segmentIndex"]
	155	[322]	GETTABLE 	R45 R42 K35 ; R45 := R42["timeOffsetInSegment"]
	156	[323]	GETTABLE 	R46 R42 K36 ; R46 := R42["timeFromEnd"]
	157	[325]	LT       	0 K37 R45 ; if 0.000000 >= R45 then PC := 179
	158	[325]	JMP      	179 ; PC := 179
	159	[328]	GETTABLE 	R47 R43 K22 ; R47 := R43["time"]
	160	[329]	MOVE     	R48 R6 ; R48 := R6
	161	[329]	MOVE     	R49 R19 ; R49 := R19
	162	[329]	MOVE     	R50 R43 ; R50 := R43
	163	[329]	MOVE     	R51 R44 ; R51 := R44
	164	[329]	MOVE     	R52 R45 ; R52 := R45
	165	[329]	CALL     	R48 5 2 ; R48 := R48(R49,R50,R51,R52)
	166	[330]	GETGLOBAL	R49 K38 ; R49 := 0x5e223e7d
	167	[330]	GETTABLE 	R50 R43 K32 ; R50 := R43["rotation"]
	168	[330]	MOVE     	R51 R16 ; R51 := R16
	169	[330]	SUB      	R52 R47 R45 ; R52 := R47 - R45
	170	[330]	DIV      	R52 R52 R17 ; R52 := R52 / R17
	171	[330]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	172	[330]	SETTABLE 	R48 K32 R49 ; R48["rotation"] := R49
	173	[332]	ADD      	R44 R44 K39 ; R44 := R44 + 1.000000
	174	[333]	GETTABLE 	R49 R43 K22 ; R49 := R43["time"]
	175	[333]	SUB      	R49 R46 R49 ; R49 := R46 - R49
	176	[333]	GETTABLE 	R50 R48 K22 ; R50 := R48["time"]
	177	[333]	SUB      	R46 R49 R50 ; R46 := R49 - R50
	178	[333]	JMP      	188 ; PC := 188
	179	[337]	GETGLOBAL	R49 K38 ; R49 := 0x5e223e7d
	180	[337]	GETTABLE 	R50 R43 K32 ; R50 := R43["rotation"]
	181	[337]	MOVE     	R51 R16 ; R51 := R16
	182	[337]	GETTABLE 	R52 R43 K22 ; R52 := R43["time"]
	183	[337]	DIV      	R52 R52 R17 ; R52 := R52 / R17
	184	[337]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	185	[337]	SETTABLE 	R43 K32 R49 ; R43["rotation"] := R49
	186	[338]	GETTABLE 	R49 R43 K22 ; R49 := R43["time"]
	187	[338]	SUB      	R46 R46 R49 ; R46 := R46 - R49
	188	[342]	ADD      	R49 R44 K39 ; R49 := R44 + 1.000000
	189	[342]	LEN      	R50 R19 ; R50 := # R19
	190	[342]	LOADK    	R51 := 1.000000
	191	[342]	FORPREP  	R49 208 ; R49 -= R51; PC := 208
	192	[343]	GETTABLE 	R53 R19 R52 ; R53 := R19[R52]
	193	[343]	GETTABLE 	R53 R53 K22 ; R53 := R53["time"]
	194	[343]	SUB      	R46 R46 R53 ; R46 := R46 - R53
	195	[344]	GETTABLE 	R53 R19 R52 ; R53 := R19[R52]
	196	[344]	GETGLOBAL	R54 K38 ; R54 := 0x5e223e7d
	197	[344]	GETTABLE 	R55 R43 K32 ; R55 := R43["rotation"]
	198	[344]	MOVE     	R56 R16 ; R56 := R16
	199	[344]	SUB      	R57 R14 R46 ; R57 := R14 - R46
	200	[344]	DIV      	R57 R57 R14 ; R57 := R57 / R14
	201	[344]	CALL     	R54 4 2 ; R54 := R54(R55,R56,R57)
	202	[344]	SETTABLE 	R53 K32 R54 ; R53["rotation"] := R54
	203	[345]	GETTABLE 	R53 R19 R52 ; R53 := R19[R52]
	204	[345]	SUB      	R54 R52 K39 ; R54 := R52 - 1.000000
	205	[345]	GETTABLE 	R54 R19 R54 ; R54 := R19[R54]
	206	[345]	GETTABLE 	R54 R54 K32 ; R54 := R54["rotation"]
	207	[345]	SETTABLE 	R53 K40 R54 ; R53["initialRotation"] := R54
	208	[342]	FORLOOP  	R49 192 ; R49 += R51; if R49 <= R50 then begin PC := 192; R52 := R49 end
	209	[350]	MOVE     	R53 R5 ; R53 := R5
	210	[350]	MOVE     	R54 R19 ; R54 := R19
	211	[350]	MOVE     	R55 R18 ; R55 := R18
	212	[350]	CALL     	R53 3 2 ; R53 := R53(R54,R55)
	213	[351]	TEST     	R53 0 ; if not R53 then PC := 233
	214	[351]	JMP      	233 ; PC := 233
	215	[352]	GETTABLE 	R54 R53 K33 ; R54 := R53["segment"]
	216	[353]	GETTABLE 	R55 R53 K34 ; R55 := R53["segmentIndex"]
	217	[354]	GETTABLE 	R56 R53 K35 ; R56 := R53["timeOffsetInSegment"]
	218	[356]	MOVE     	R57 R54 ; R57 := R54
	219	[357]	LT       	0 K37 R56 ; if 0.000000 >= R56 then PC := 228
	220	[357]	JMP      	228 ; PC := 228
	221	[358]	MOVE     	R58 R6 ; R58 := R6
	222	[358]	MOVE     	R59 R19 ; R59 := R19
	223	[358]	MOVE     	R60 R54 ; R60 := R54
	224	[358]	MOVE     	R61 R55 ; R61 := R55
	225	[358]	MOVE     	R62 R56 ; R62 := R56
	226	[358]	CALL     	R58 5 2 ; R58 := R58(R59,R60,R61,R62)
	227	[358]	MOVE     	R57 R58 ; R57 := R58
	228	[361]	TEST     	R57 0 ; if not R57 then PC := 233
	229	[361]	JMP      	233 ; PC := 233
	230	[367]	CLOSURE  	R58 2 ; R58 := closure(Function #3)
	231	[367]	GETUPVAL 	R0 U1 ; R0 := U1
	232	[367]	SETTABLE 	R57 K41 R58 ; R57["onEnter"] := R58
	233	[372]	LOADK    	R58 := 1.000000
	234	[372]	LEN      	R59 R19 ; R59 := # R19
	235	[372]	LOADK    	R60 := 1.000000
	236	[372]	FORPREP  	R58 262 ; R58 -= R60; PC := 262
	237	[373]	GETGLOBAL	R62 K19 ; R62 := 0x33bdd652
	238	[373]	GETTABLE 	R62 R62 K20 ; R62 := R62[0x23d5322f]
	239	[373]	MOVE     	R63 R7 ; R63 := R7
	240	[373]	NEWTABLE 	R64 0 6 ; R64 := {}
	241	[373]	GETTABLE 	R65 R19 R61 ; R65 := R19[R61]
	242	[373]	GETTABLE 	R65 R65 K31 ; R65 := R65["a"]
	243	[373]	SETTABLE 	R64 K42 R65 ; R64["acceleration"] := R65
	244	[373]	GETTABLE 	R65 R19 R61 ; R65 := R19[R61]
	245	[373]	GETTABLE 	R65 R65 K29 ; R65 := R65["v_0"]
	246	[373]	SETTABLE 	R64 K43 R65 ; R64["velocity"] := R65
	247	[373]	GETTABLE 	R65 R19 R61 ; R65 := R19[R61]
	248	[373]	GETTABLE 	R65 R65 K32 ; R65 := R65["rotation"]
	249	[373]	SETTABLE 	R64 K32 R65 ; R64["rotation"] := R65
	250	[373]	GETTABLE 	R65 R19 R61 ; R65 := R19[R61]
	251	[373]	GETTABLE 	R65 R65 K22 ; R65 := R65["time"]
	252	[373]	SETTABLE 	R64 K22 R65 ; R64["time"] := R65
	253	[373]	EQ       	1 R61 K39 ; if R61 == 1.000000 then PC := 256
	254	[373]	JMP      	256 ; PC := 256
	255	[373]	OP_LOADBOOL	R65 0 1 ; R65 := false; PC := 256
	256	[373]	OP_LOADBOOL	R65 1 0 ; R65 := true
	257	[373]	SETTABLE 	R64 K44 R65 ; R64["firstKeyframe"] := R65
	258	[373]	GETTABLE 	R65 R19 R61 ; R65 := R19[R61]
	259	[373]	GETTABLE 	R65 R65 K41 ; R65 := R65["onEnter"]
	260	[373]	SETTABLE 	R64 K41 R65 ; R64["onEnter"] := R65
	261	[373]	CALL     	R62 3 1 ; R62(R63,R64)
	262	[372]	FORLOOP  	R58 237 ; R58 += R60; if R58 <= R59 then begin PC := 237; R61 := R58 end
	263	[374]	JMP      	425 ; PC := 425
	264	[376]	GETUPVAL 	R62 U3 ; R62 := U3
	265	[376]	EQ       	0 R1 R62 ; if R1 ~= R62 then PC := 381
	266	[376]	JMP      	381 ; PC := 381
	267	[379]	LOADNIL  	R62 R63 ; R62 := R63 := nil
	268	[381]	TEST     	R3 0 ; if not R3 then PC := 284
	269	[381]	JMP      	284 ; PC := 284
	270	[381]	GETTABLE 	R64 R3 K45 ; R64 := R3["animType"]
	271	[381]	GETUPVAL 	R65 U4 ; R65 := U4
	272	[381]	EQ       	0 R64 R65 ; if R64 ~= R65 then PC := 284
	273	[381]	JMP      	284 ; PC := 284
	274	[382]	GETTABLE 	R64 R3 K46 ; R64 := R3["keyframes"]
	275	[382]	GETTABLE 	R65 R3 K47 ; R65 := R3["keyframeIndex"]
	276	[382]	GETTABLE 	R64 R64 R65 ; R64 := R64[R65]
	277	[382]	GETTABLE 	R64 R64 K43 ; R64 := R64["velocity"]
	278	[382]	GETTABLE 	R65 R3 K42 ; R65 := R3["acceleration"]
	279	[382]	GETTABLE 	R66 R3 K48 ; R66 := R3["timeInKeyframe"]
	280	[382]	MUL      	R65 R65 R66 ; R65 := R65 * R66
	281	[382]	ADD      	R62 R64 R65 ; R62 := R64 + R65
	282	[383]	GETTABLE 	R63 R3 K42 ; R63 := R3["acceleration"]
	283	[383]	JMP      	290 ; PC := 290
	284	[385]	GETGLOBAL	R64 K27 ; R64 := 0xa421af95
	285	[385]	CALL     	R64 1 2 ; R64 := R64()
	286	[385]	MOVE     	R62 R64 ; R62 := R64
	287	[386]	GETGLOBAL	R64 K27 ; R64 := 0xa421af95
	288	[386]	CALL     	R64 1 2 ; R64 := R64()
	289	[386]	MOVE     	R63 R64 ; R63 := R64
	290	[389]	SELF     	R64 R4 K49 ; R65 := R4; R64 := R4[0xd1586535]
	291	[389]	CALL     	R64 2 2 ; R64 := R64(R65)
	292	[390]	GETTABLE 	R65 R2 K50 ; R65 := R2["flyOut"]
	293	[390]	GETTABLE 	R65 R65 K51 ; R65 := R65["to"]
	294	[390]	GETTABLE 	R65 R65 K4 ; R65 := R65["position"]
	295	[390]	SUB      	R65 R65 R64 ; R65 := R65 - R64
	296	[391]	GETGLOBAL	R66 K7 ; R66 := 0xae2294fa
	297	[391]	MOVE     	R67 R65 ; R67 := R65
	298	[391]	CALL     	R66 2 2 ; R66 := R66(R67)
	299	[392]	GETGLOBAL	R67 K27 ; R67 := 0xa421af95
	300	[392]	GETTABLE 	R68 R65 K52 ; R68 := R65["x"]
	301	[392]	DIV      	R68 R68 R66 ; R68 := R68 / R66
	302	[392]	GETTABLE 	R69 R65 K53 ; R69 := R65["y"]
	303	[392]	DIV      	R69 R69 R66 ; R69 := R69 / R66
	304	[392]	GETTABLE 	R70 R65 K54 ; R70 := R65["z"]
	305	[392]	DIV      	R70 R70 R66 ; R70 := R70 / R66
	306	[392]	CALL     	R67 4 2 ; R67 := R67(R68,R69,R70)
	307	[393]	GETUPVAL 	R68 U1 ; R68 := U1
	308	[393]	GETTABLE 	R68 R68 K50 ; R68 := R68["flyOut"]
	309	[393]	GETTABLE 	R68 R68 K22 ; R68 := R68["time"]
	310	[394]	NEWTABLE 	R69 0 0 ; R69 := {}
	311	[430]	NEWTABLE 	R70 0 0 ; R70 := {}
	312	[431]	SETTABLE 	R70 K22 R68 ; R70["time"] := R68
	313	[432]	GETGLOBAL	R71 K7 ; R71 := 0xae2294fa
	314	[432]	GETTABLE 	R72 R2 K50 ; R72 := R2["flyOut"]
	315	[432]	GETTABLE 	R72 R72 K51 ; R72 := R72["to"]
	316	[432]	GETTABLE 	R72 R72 K4 ; R72 := R72["position"]
	317	[432]	SUB      	R72 R72 R64 ; R72 := R72 - R64
	318	[432]	CALL     	R71 2 2 ; R71 := R71(R72)
	319	[432]	SETTABLE 	R70 K24 R71 ; R70["distance"] := R71
	320	[433]	SETTABLE 	R70 K29 R62 ; R70["v_0"] := R62
	321	[434]	GETTABLE 	R71 R2 K50 ; R71 := R2["flyOut"]
	322	[434]	GETTABLE 	R71 R71 K51 ; R71 := R71["to"]
	323	[434]	GETTABLE 	R71 R71 K4 ; R71 := R71["position"]
	324	[434]	SUB      	R71 R71 R64 ; R71 := R71 - R64
	325	[434]	GETTABLE 	R72 R70 K29 ; R72 := R70["v_0"]
	326	[434]	MUL      	R72 R72 R68 ; R72 := R72 * R68
	327	[434]	SUB      	R71 R71 R72 ; R71 := R71 - R72
	328	[434]	MUL      	R71 R71 K28 ; R71 := R71 * 2.000000
	329	[434]	MUL      	R72 R68 R68 ; R72 := R68 * R68
	330	[434]	DIV      	R71 R71 R72 ; R71 := R71 / R72
	331	[434]	SETTABLE 	R70 K31 R71 ; R70["a"] := R71
	332	[435]	GETGLOBAL	R71 K14 ; R71 := 0x20b7f774
	333	[435]	MOVE     	R72 R64 ; R72 := R64
	334	[435]	GETTABLE 	R73 R2 K50 ; R73 := R2["flyOut"]
	335	[435]	GETTABLE 	R73 R73 K51 ; R73 := R73["to"]
	336	[435]	GETTABLE 	R73 R73 K4 ; R73 := R73["position"]
	337	[435]	CALL     	R71 3 2 ; R71 := R71(R72,R73)
	338	[435]	SETTABLE 	R70 K32 R71 ; R70["rotation"] := R71
	339	[436]	SELF     	R71 R4 K55 ; R72 := R4; R71 := R4[0xcb3851b8]
	340	[436]	CALL     	R71 2 2 ; R71 := R71(R72)
	341	[436]	SETTABLE 	R70 K40 R71 ; R70["initialRotation"] := R71
	342	[437]	GETGLOBAL	R71 K19 ; R71 := 0x33bdd652
	343	[437]	GETTABLE 	R71 R71 K20 ; R71 := R71[0x23d5322f]
	344	[437]	MOVE     	R72 R69 ; R72 := R69
	345	[437]	MOVE     	R73 R70 ; R73 := R70
	346	[437]	CALL     	R71 3 1 ; R71(R72,R73)
	347	[442]	CLOSURE  	R71 3 ; R71 := closure(Function #4)
	348	[442]	GETUPVAL 	R0 U1 ; R0 := U1
	349	[442]	SETTABLE 	R70 K41 R71 ; R70["onEnter"] := R71
	350	[445]	LOADK    	R71 := 1.000000
	351	[445]	LEN      	R72 R69 ; R72 := # R69
	352	[445]	LOADK    	R73 := 1.000000
	353	[445]	FORPREP  	R71 379 ; R71 -= R73; PC := 379
	354	[446]	GETGLOBAL	R75 K19 ; R75 := 0x33bdd652
	355	[446]	GETTABLE 	R75 R75 K20 ; R75 := R75[0x23d5322f]
	356	[446]	MOVE     	R76 R7 ; R76 := R7
	357	[446]	NEWTABLE 	R77 0 6 ; R77 := {}
	358	[446]	GETTABLE 	R78 R69 R74 ; R78 := R69[R74]
	359	[446]	GETTABLE 	R78 R78 K31 ; R78 := R78["a"]
	360	[446]	SETTABLE 	R77 K42 R78 ; R77["acceleration"] := R78
	361	[446]	GETTABLE 	R78 R69 R74 ; R78 := R69[R74]
	362	[446]	GETTABLE 	R78 R78 K29 ; R78 := R78["v_0"]
	363	[446]	SETTABLE 	R77 K43 R78 ; R77["velocity"] := R78
	364	[446]	GETTABLE 	R78 R69 R74 ; R78 := R69[R74]
	365	[446]	GETTABLE 	R78 R78 K32 ; R78 := R78["rotation"]
	366	[446]	SETTABLE 	R77 K32 R78 ; R77["rotation"] := R78
	367	[446]	GETTABLE 	R78 R69 R74 ; R78 := R69[R74]
	368	[446]	GETTABLE 	R78 R78 K22 ; R78 := R78["time"]
	369	[446]	SETTABLE 	R77 K22 R78 ; R77["time"] := R78
	370	[446]	EQ       	1 R74 K39 ; if R74 == 1.000000 then PC := 373
	371	[446]	JMP      	373 ; PC := 373
	372	[446]	OP_LOADBOOL	R78 0 1 ; R78 := false; PC := 373
	373	[446]	OP_LOADBOOL	R78 1 0 ; R78 := true
	374	[446]	SETTABLE 	R77 K44 R78 ; R77["firstKeyframe"] := R78
	375	[446]	GETTABLE 	R78 R69 R74 ; R78 := R69[R74]
	376	[446]	GETTABLE 	R78 R78 K41 ; R78 := R78["onEnter"]
	377	[446]	SETTABLE 	R77 K41 R78 ; R77["onEnter"] := R78
	378	[446]	CALL     	R75 3 1 ; R75(R76,R77)
	379	[445]	FORLOOP  	R71 354 ; R71 += R73; if R71 <= R72 then begin PC := 354; R74 := R71 end
	380	[447]	JMP      	425 ; PC := 425
	381	[452]	NEWTABLE 	R75 0 8 ; R75 := {}
	382	[453]	GETUPVAL 	R76 U1 ; R76 := U1
	383	[453]	GETTABLE 	R76 R76 K56 ; R76 := R76["idle"]
	384	[453]	GETTABLE 	R76 R76 K22 ; R76 := R76["time"]
	385	[453]	SETTABLE 	R75 K22 R76 ; R75["time"] := R76
	386	[454]	GETUPVAL 	R76 U1 ; R76 := U1
	387	[454]	GETTABLE 	R76 R76 K56 ; R76 := R76["idle"]
	388	[454]	GETTABLE 	R76 R76 K4 ; R76 := R76["position"]
	389	[454]	GETTABLE 	R76 R76 K58 ; R76 := R76["strength"]
	390	[454]	SETTABLE 	R75 K57 R76 ; R75["posStrength"] := R76
	391	[455]	GETUPVAL 	R76 U1 ; R76 := U1
	392	[455]	GETTABLE 	R76 R76 K56 ; R76 := R76["idle"]
	393	[455]	GETTABLE 	R76 R76 K32 ; R76 := R76["rotation"]
	394	[455]	GETTABLE 	R76 R76 K58 ; R76 := R76["strength"]
	395	[455]	SETTABLE 	R75 K59 R76 ; R75["rotStrength"] := R76
	396	[456]	GETUPVAL 	R76 U1 ; R76 := U1
	397	[456]	GETTABLE 	R76 R76 K56 ; R76 := R76["idle"]
	398	[456]	GETTABLE 	R76 R76 K4 ; R76 := R76["position"]
	399	[456]	GETTABLE 	R76 R76 K61 ; R76 := R76["normal"]
	400	[456]	SETTABLE 	R75 K60 R76 ; R75["positionNoise"] := R76
	401	[457]	GETUPVAL 	R76 U1 ; R76 := U1
	402	[457]	GETTABLE 	R76 R76 K56 ; R76 := R76["idle"]
	403	[457]	GETTABLE 	R76 R76 K32 ; R76 := R76["rotation"]
	404	[457]	GETTABLE 	R76 R76 K63 ; R76 := R76["vec"]
	405	[457]	SETTABLE 	R75 K62 R76 ; R75["rotationNoise"] := R76
	406	[458]	GETUPVAL 	R76 U1 ; R76 := U1
	407	[458]	GETTABLE 	R76 R76 K56 ; R76 := R76["idle"]
	408	[458]	GETTABLE 	R76 R76 K4 ; R76 := R76["position"]
	409	[458]	GETTABLE 	R76 R76 K65 ; R76 := R76["speed"]
	410	[458]	SETTABLE 	R75 K64 R76 ; R75["positionNoiseSpeed"] := R76
	411	[459]	GETUPVAL 	R76 U1 ; R76 := U1
	412	[459]	GETTABLE 	R76 R76 K56 ; R76 := R76["idle"]
	413	[459]	GETTABLE 	R76 R76 K32 ; R76 := R76["rotation"]
	414	[459]	GETTABLE 	R76 R76 K65 ; R76 := R76["speed"]
	415	[459]	SETTABLE 	R75 K66 R76 ; R75["rotationNoiseSpeed"] := R76
	416	[460]	GETUPVAL 	R76 U1 ; R76 := U1
	417	[460]	GETTABLE 	R76 R76 K56 ; R76 := R76["idle"]
	418	[460]	GETTABLE 	R76 R76 K67 ; R76 := R76["decay"]
	419	[460]	SETTABLE 	R75 K67 R76 ; R75["decay"] := R76
	420	[463]	GETGLOBAL	R76 K19 ; R76 := 0x33bdd652
	421	[463]	GETTABLE 	R76 R76 K20 ; R76 := R76[0x23d5322f]
	422	[463]	MOVE     	R77 R7 ; R77 := R7
	423	[463]	MOVE     	R78 R75 ; R78 := R75
	424	[463]	CALL     	R76 3 1 ; R76(R77,R78)
	425	[466]	RETURN   	R7 2 ; return R7 
	426	[467]	RETURN   	R0 1 ; return 

function #7 <?:470,525> (25 instructions, 100 bytes at 000001608544D230)
0 params, 9 slots, 11 upvalues, 0 locals, 2 constants, 1 function
	1	[473]	LOADK    	R0 := 1.000000
	2	[473]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[473]	LEN      	R1 R1 ; R1 := # R1
	4	[473]	LOADK    	R2 := 1.000000
	5	[473]	FORPREP  	R0 24 ; R0 -= R2; PC := 24
	6	[474]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[474]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	8	[475]	SETTABLE 	R4 K0 K1 ; R4["active"] := true
	9	[521]	CLOSURE  	R5 0 ; R5 := closure(Function #1)
	10	[521]	GETUPVAL 	R0 U1 ; R0 := U1
	11	[521]	GETUPVAL 	R0 U2 ; R0 := U2
	12	[521]	GETUPVAL 	R0 U3 ; R0 := U3
	13	[521]	GETUPVAL 	R0 U4 ; R0 := U4
	14	[521]	GETUPVAL 	R0 U5 ; R0 := U5
	15	[521]	GETUPVAL 	R0 U6 ; R0 := U6
	16	[521]	GETUPVAL 	R0 U7 ; R0 := U7
	17	[521]	GETUPVAL 	R0 U8 ; R0 := U8
	18	[521]	GETUPVAL 	R0 U9 ; R0 := U9
	19	[521]	GETUPVAL 	R0 U10 ; R0 := U10
	20	[523]	MOVE     	R6 R5 ; R6 := R5
	21	[523]	MOVE     	R7 R4 ; R7 := R4
	22	[523]	MOVE     	R8 R3 ; R8 := R3
	23	[523]	CALL     	R6 3 1 ; R6(R7,R8)
	24	[473]	FORLOOP  	R0 6 ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
	25	[525]	RETURN   	R0 1 ; return 

function #8 <?:527,539> (24 instructions, 96 bytes at 0000016088DE9340)
1 param, 5 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[528]	GETTABLE 	R1 R0 K0 ; R1 := R0["isLocal"]
	2	[528]	NOT      	R1 R1 ; R1 := not R1
	3	[529]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	4	[529]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x18d05d30]
	5	[529]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[529]	TEST     	R2 1 ; if R2 then PC := 23
	7	[529]	JMP      	23 ; PC := 23
	8	[529]	GETGLOBAL	R2 K3 ; R2 := 0xbe190284
	9	[529]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xf2deaf69]
	10	[529]	GETGLOBAL	R4 K5 ; R4 := gLotusAttractModeGameRulesType
	11	[529]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	12	[529]	TEST     	R2 0 ; if not R2 then PC := 23
	13	[529]	JMP      	23 ; PC := 23
	14	[531]	GETTABLE 	R2 R0 K0 ; R2 := R0["isLocal"]
	15	[531]	TEST     	R2 0 ; if not R2 then PC := 19
	16	[531]	JMP      	19 ; PC := 19
	17	[532]	OP_LOADBOOL	R1 1 0 ; R1 := true
	18	[532]	JMP      	23 ; PC := 23
	19	[533]	GETTABLE 	R2 R0 K6 ; R2 := R0["isHost"]
	20	[533]	TEST     	R2 0 ; if not R2 then PC := 23
	21	[533]	JMP      	23 ; PC := 23
	22	[534]	OP_LOADBOOL	R1 0 0 ; R1 := false
	23	[538]	RETURN   	R1 2 ; return R1 
	24	[539]	RETURN   	R0 1 ; return 

function #9 <?:543,687> (353 instructions, 1412 bytes at 0000016088DE9530)
3 params, 49 slots, 14 upvalues, 0 locals, 79 constants, 1 function
	1	[544]	TEST     	R2 1 ; if R2 then PC := 8
	2	[544]	JMP      	8 ; PC := 8
	3	[545]	GETGLOBAL	R3 K0 ; R3 := cjson
	4	[545]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x7ab914d8]
	5	[545]	GETTABLE 	R4 R0 K2 ; R4 := R0["loadout"]
	6	[545]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[545]	MOVE     	R2 R3 ; R2 := R3
	8	[548]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[548]	MOVE     	R4 R0 ; R4 := R0
	10	[548]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[550]	LOADNIL  	R4 R5 ; R4 := R5 := nil
	12	[552]	TEST     	R3 0 ; if not R3 then PC := 276
	13	[552]	JMP      	276 ; PC := 276
	14	[555]	LOADK    	R6 := 1.000000
	15	[555]	GETUPVAL 	R7 U1 ; R7 := U1
	16	[555]	LEN      	R7 R7 ; R7 := # R7
	17	[555]	LOADK    	R8 := 1.000000
	18	[555]	FORPREP  	R6 27 ; R6 -= R8; PC := 27
	19	[556]	GETUPVAL 	R10 U1 ; R10 := U1
	20	[556]	GETTABLE 	R10 R10 R9 ; R10 := R10[R9]
	21	[556]	GETTABLE 	R10 R10 K3 ; R10 := R10["inUse"]
	22	[556]	TEST     	R10 1 ; if R10 then PC := 27
	23	[556]	JMP      	27 ; PC := 27
	24	[557]	GETUPVAL 	R10 U1 ; R10 := U1
	25	[557]	GETTABLE 	R5 R10 R9 ; R5 := R10[R9]
	26	[558]	JMP      	28 ; PC := 28
	27	[555]	FORLOOP  	R6 19 ; R6 += R8; if R6 <= R7 then begin PC := 19; R9 := R6 end
	28	[562]	TEST     	R5 0 ; if not R5 then PC := 276
	29	[562]	JMP      	276 ; PC := 276
	30	[565]	GETGLOBAL	R10 K4 ; R10 := 0xb009bbc6
	31	[565]	GETTABLE 	R11 R2 K5 ; R11 := R2["ShipType"]
	32	[565]	CALL     	R10 2 2 ; R10 := R10(R11)
	33	[566]	GETTABLE 	R11 R5 K6 ; R11 := R5["flyIn"]
	34	[566]	GETTABLE 	R11 R11 K7 ; R11 := R11["from"]
	35	[566]	GETTABLE 	R11 R11 K8 ; R11 := R11["position"]
	36	[567]	GETGLOBAL	R12 K9 ; R12 := 0x20b7f774
	37	[567]	GETTABLE 	R13 R5 K6 ; R13 := R5["flyIn"]
	38	[567]	GETTABLE 	R13 R13 K7 ; R13 := R13["from"]
	39	[567]	GETTABLE 	R13 R13 K8 ; R13 := R13["position"]
	40	[567]	GETTABLE 	R14 R5 K8 ; R14 := R5["position"]
	41	[567]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	42	[568]	GETUPVAL 	R13 U2 ; R13 := U2
	43	[568]	SELF     	R13 R13 K10 ; R14 := R13; R13 := R13[0x05909209]
	44	[568]	GETUPVAL 	R15 U3 ; R15 := U3
	45	[568]	MOVE     	R16 R11 ; R16 := R11
	46	[568]	MOVE     	R17 R12 ; R17 := R12
	47	[568]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	48	[568]	MOVE     	R4 R13 ; R4 := R13
	49	[569]	SELF     	R13 R4 K11 ; R14 := R4; R13 := R4[0xde61adb3]
	50	[569]	MOVE     	R15 R10 ; R15 := R10
	51	[569]	CALL     	R13 3 1 ; R13(R14,R15)
	52	[570]	SELF     	R13 R4 K12 ; R14 := R4; R13 := R4[0x2d9ba74f]
	53	[570]	LOADK    	R15 := 0.000000
	54	[570]	CALL     	R13 3 1 ; R13(R14,R15)
	55	[573]	GETGLOBAL	R13 K13 ; R13 := 0x6c97a788
	56	[573]	GETTABLE 	R13 R13 K14 ; R13 := R13[0xc5329145]
	57	[573]	CALL     	R13 1 2 ; R13 := R13()
	58	[574]	GETGLOBAL	R14 K15 ; R14 := 0x7b998233
	59	[574]	GETTABLE 	R15 R2 K16 ; R15 := R2["ShipCustomizations"]
	60	[574]	CALL     	R14 2 2 ; R14 := R14(R15)
	61	[574]	TEST     	R14 1 ; if R14 then PC := 168
	62	[574]	JMP      	168 ; PC := 168
	63	[576]	GETGLOBAL	R14 K17 ; R14 := 0x7ed0a956
	64	[576]	GETTABLE 	R15 R2 K16 ; R15 := R2["ShipCustomizations"]
	65	[576]	GETTABLE 	R15 R15 K18 ; R15 := R15["SkinFlavourItem"]
	66	[576]	CALL     	R14 2 2 ; R14 := R14(R15)
	67	[577]	GETGLOBAL	R15 K4 ; R15 := 0xb009bbc6
	68	[577]	MOVE     	R16 R14 ; R16 := R14
	69	[577]	CALL     	R15 2 2 ; R15 := R15(R16)
	70	[578]	MOVE     	R16 R15 ; R16 := R15
	71	[580]	NEWTABLE 	R17 0 0 ; R17 := {}
	72	[582]	GETTABLE 	R18 R2 K16 ; R18 := R2["ShipCustomizations"]
	73	[582]	GETTABLE 	R18 R18 K19 ; R18 := R18["ShipAttachments"]
	74	[582]	EQ       	1 R18 K20 ; if R18 == nil then PC := 90
	75	[582]	JMP      	90 ; PC := 90
	76	[583]	GETGLOBAL	R18 K21 ; R18 := 0xcfc01047
	77	[583]	GETTABLE 	R19 R2 K16 ; R19 := R2["ShipCustomizations"]
	78	[583]	GETTABLE 	R19 R19 K19 ; R19 := R19["ShipAttachments"]
	79	[583]	CALL     	R18 2 4 ; R18,R19,R20 := R18(R19)
	80	[583]	JMP      	88 ; PC := 88
	81	[584]	GETGLOBAL	R23 K22 ; R23 := 0x33bdd652
	82	[584]	GETTABLE 	R23 R23 K23 ; R23 := R23[0x23d5322f]
	83	[584]	MOVE     	R24 R17 ; R24 := R17
	84	[584]	GETGLOBAL	R25 K17 ; R25 := 0x7ed0a956
	85	[584]	MOVE     	R26 R22 ; R26 := R22
	86	[584]	CALL     	R25 2 0 ; R25,... := R25(R26)
	87	[584]	CALL     	R23 0 1 ; R23(R24,...)
	88	[583]	TFORLOOP 	R18 2 ; R21,R22 := R18(R19,R20); if R21 ~= nil then begin PC = 81; R20 := R21 end
	89	[584]	JMP      	81 ; PC := 81
	90	[589]	GETTABLE 	R23 R2 K16 ; R23 := R2["ShipCustomizations"]
	91	[589]	GETTABLE 	R23 R23 K24 ; R23 := R23["Colors"]
	92	[590]	GETTABLE 	R24 R23 K25 ; R24 := R23["t0"]
	93	[590]	EQ       	1 R24 K20 ; if R24 == nil then PC := 103
	94	[590]	JMP      	103 ; PC := 103
	95	[591]	SELF     	R24 R13 K26 ; R25 := R13; R24 := R13[0x0c1dc4da]
	96	[591]	LOADK    	R26 := 0.000000
	97	[591]	GETTABLE 	R27 R23 K25 ; R27 := R23["t0"]
	98	[591]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	99	[592]	SELF     	R24 R13 K27 ; R25 := R13; R24 := R13[0xfc5d7158]
	100	[592]	LOADK    	R26 := 0.000000
	101	[592]	OP_LOADBOOL	R27 1 0 ; R27 := true
	102	[592]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	103	[595]	GETTABLE 	R24 R23 K28 ; R24 := R23["t1"]
	104	[595]	EQ       	1 R24 K20 ; if R24 == nil then PC := 114
	105	[595]	JMP      	114 ; PC := 114
	106	[596]	SELF     	R24 R13 K26 ; R25 := R13; R24 := R13[0x0c1dc4da]
	107	[596]	LOADK    	R26 := 1.000000
	108	[596]	GETTABLE 	R27 R23 K28 ; R27 := R23["t1"]
	109	[596]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	110	[597]	SELF     	R24 R13 K27 ; R25 := R13; R24 := R13[0xfc5d7158]
	111	[597]	LOADK    	R26 := 1.000000
	112	[597]	OP_LOADBOOL	R27 1 0 ; R27 := true
	113	[597]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	114	[600]	GETTABLE 	R24 R23 K29 ; R24 := R23["t2"]
	115	[600]	EQ       	1 R24 K20 ; if R24 == nil then PC := 125
	116	[600]	JMP      	125 ; PC := 125
	117	[601]	SELF     	R24 R13 K26 ; R25 := R13; R24 := R13[0x0c1dc4da]
	118	[601]	LOADK    	R26 := 2.000000
	119	[601]	GETTABLE 	R27 R23 K29 ; R27 := R23["t2"]
	120	[601]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	121	[602]	SELF     	R24 R13 K27 ; R25 := R13; R24 := R13[0xfc5d7158]
	122	[602]	LOADK    	R26 := 2.000000
	123	[602]	OP_LOADBOOL	R27 1 0 ; R27 := true
	124	[602]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	125	[605]	GETTABLE 	R24 R23 K30 ; R24 := R23["t3"]
	126	[605]	EQ       	1 R24 K20 ; if R24 == nil then PC := 136
	127	[605]	JMP      	136 ; PC := 136
	128	[606]	SELF     	R24 R13 K26 ; R25 := R13; R24 := R13[0x0c1dc4da]
	129	[606]	LOADK    	R26 := 3.000000
	130	[606]	GETTABLE 	R27 R23 K30 ; R27 := R23["t3"]
	131	[606]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	132	[607]	SELF     	R24 R13 K27 ; R25 := R13; R24 := R13[0xfc5d7158]
	133	[607]	LOADK    	R26 := 3.000000
	134	[607]	OP_LOADBOOL	R27 1 0 ; R27 := true
	135	[607]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	136	[610]	GETTABLE 	R24 R23 K31 ; R24 := R23["en"]
	137	[610]	EQ       	1 R24 K20 ; if R24 == nil then PC := 147
	138	[610]	JMP      	147 ; PC := 147
	139	[611]	SELF     	R24 R13 K26 ; R25 := R13; R24 := R13[0x0c1dc4da]
	140	[611]	LOADK    	R26 := 6.000000
	141	[611]	GETTABLE 	R27 R23 K31 ; R27 := R23["en"]
	142	[611]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	143	[612]	SELF     	R24 R13 K27 ; R25 := R13; R24 := R13[0xfc5d7158]
	144	[612]	LOADK    	R26 := 6.000000
	145	[612]	OP_LOADBOOL	R27 1 0 ; R27 := true
	146	[612]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	147	[615]	GETGLOBAL	R24 K13 ; R24 := 0x6c97a788
	148	[615]	GETTABLE 	R24 R24 K32 ; R24 := R24[0x6d1a47e5]
	149	[615]	CALL     	R24 1 2 ; R24 := R24()
	150	[616]	SETTABLE 	R24 K33 R14 ; R24["mSkinFlavourItem"] := R14
	151	[617]	SETTABLE 	R24 K34 R13 ; R24[0xd2d3875a] := R13
	152	[619]	GETGLOBAL	R25 K35 ; R25 := 0xc8802016
	153	[619]	MOVE     	R26 R17 ; R26 := R17
	154	[619]	CALL     	R25 2 4 ; R25,R26,R27 := R25(R26)
	155	[619]	JMP      	163 ; PC := 163
	156	[620]	SUB      	R30 R28 K36 ; R30 := R28 - 1.000000
	157	[621]	LT       	0 R30 K36 ; if R30 >= 1.000000 then PC := 163
	158	[621]	JMP      	163 ; PC := 163
	159	[622]	SELF     	R31 R24 K37 ; R32 := R24; R31 := R24[0x50365263]
	160	[622]	MOVE     	R33 R30 ; R33 := R30
	161	[622]	MOVE     	R34 R29 ; R34 := R29
	162	[622]	CALL     	R31 4 1 ; R31(R32,R33,R34)
	163	[619]	TFORLOOP 	R25 2 ; R28,R29 := R25(R26,R27); if R28 ~= nil then begin PC = 156; R27 := R28 end
	164	[623]	JMP      	156 ; PC := 156
	165	[626]	SELF     	R31 R4 K38 ; R32 := R4; R31 := R4[0xaa041663]
	166	[626]	MOVE     	R33 R24 ; R33 := R24
	167	[626]	CALL     	R31 3 1 ; R31(R32,R33)
	168	[629]	SELF     	R31 R4 K39 ; R32 := R4; R31 := R4[0x5e228d92]
	169	[629]	GETUPVAL 	R33 U4 ; R33 := U4
	170	[629]	GETTABLE 	R33 R33 K40 ; R33 := R33["Lighting"]
	171	[629]	GETTABLE 	R33 R33 K41 ; R33 := R33["useAmbientLighting"]
	172	[629]	CALL     	R31 3 1 ; R31(R32,R33)
	173	[632]	GETGLOBAL	R31 K4 ; R31 := 0xb009bbc6
	174	[632]	LOADK    	R32 K42 ; R32 := "/EE/Types/Engine/Light"
	175	[632]	CALL     	R31 2 2 ; R31 := R31(R32)
	176	[633]	GETUPVAL 	R32 U4 ; R32 := U4
	177	[633]	GETTABLE 	R32 R32 K40 ; R32 := R32["Lighting"]
	178	[633]	GETTABLE 	R32 R32 K43 ; R32 := R32["offset"]
	179	[634]	GETUPVAL 	R33 U4 ; R33 := U4
	180	[634]	GETTABLE 	R33 R33 K40 ; R33 := R33["Lighting"]
	181	[634]	GETTABLE 	R33 R33 K44 ; R33 := R33["lookTo"]
	182	[635]	SELF     	R34 R4 K45 ; R35 := R4; R34 := R4[0x47901f07]
	183	[635]	MOVE     	R36 R31 ; R36 := R31
	184	[635]	GETGLOBAL	R37 K46 ; R37 := EMPTY_SYMBOL
	185	[635]	MOVE     	R38 R32 ; R38 := R32
	186	[635]	GETGLOBAL	R39 K9 ; R39 := 0x20b7f774
	187	[635]	MOVE     	R40 R32 ; R40 := R32
	188	[635]	MOVE     	R41 R33 ; R41 := R33
	189	[635]	CALL     	R39 3 0 ; R39,... := R39(R40,R41)
	190	[635]	CALL     	R34 0 2 ; R34 := R34(R35,...)
	191	[636]	SELF     	R35 R34 K47 ; R36 := R34; R35 := R34[0xa3927fe9]
	192	[636]	GETUPVAL 	R37 U4 ; R37 := U4
	193	[636]	GETTABLE 	R37 R37 K40 ; R37 := R37["Lighting"]
	194	[636]	GETTABLE 	R37 R37 K48 ; R37 := R37["color"]
	195	[636]	CALL     	R35 3 1 ; R35(R36,R37)
	196	[637]	SELF     	R35 R34 K49 ; R36 := R34; R35 := R34[0xe29e950d]
	197	[637]	GETUPVAL 	R37 U4 ; R37 := U4
	198	[637]	GETTABLE 	R37 R37 K40 ; R37 := R37["Lighting"]
	199	[637]	GETTABLE 	R37 R37 K50 ; R37 := R37["brightness"]
	200	[637]	CALL     	R35 3 1 ; R35(R36,R37)
	201	[638]	SELF     	R35 R34 K51 ; R36 := R34; R35 := R34[0x24edc517]
	202	[638]	GETUPVAL 	R37 U4 ; R37 := U4
	203	[638]	GETTABLE 	R37 R37 K40 ; R37 := R37["Lighting"]
	204	[638]	GETTABLE 	R37 R37 K52 ; R37 := R37["falloffExponent"]
	205	[638]	CALL     	R35 3 1 ; R35(R36,R37)
	206	[639]	SELF     	R35 R34 K53 ; R36 := R34; R35 := R34[0x756b804d]
	207	[639]	GETUPVAL 	R37 U4 ; R37 := U4
	208	[639]	GETTABLE 	R37 R37 K40 ; R37 := R37["Lighting"]
	209	[639]	GETTABLE 	R37 R37 K54 ; R37 := R37["fastDynamic"]
	210	[639]	CALL     	R35 3 1 ; R35(R36,R37)
	211	[640]	SELF     	R35 R34 K55 ; R36 := R34; R35 := R34[0xee87c35b]
	212	[640]	GETUPVAL 	R37 U4 ; R37 := U4
	213	[640]	GETTABLE 	R37 R37 K40 ; R37 := R37["Lighting"]
	214	[640]	GETTABLE 	R37 R37 K56 ; R37 := R37["effect"]
	215	[640]	CALL     	R35 3 1 ; R35(R36,R37)
	216	[641]	SELF     	R35 R34 K57 ; R36 := R34; R35 := R34[0xa8193dbf]
	217	[641]	GETUPVAL 	R37 U4 ; R37 := U4
	218	[641]	GETTABLE 	R37 R37 K40 ; R37 := R37["Lighting"]
	219	[641]	GETTABLE 	R37 R37 K58 ; R37 := R37["effectSecondary"]
	220	[641]	CALL     	R35 3 1 ; R35(R36,R37)
	221	[642]	SELF     	R35 R34 K59 ; R36 := R34; R35 := R34[0x61b3910f]
	222	[642]	OP_LOADBOOL	R37 1 0 ; R37 := true
	223	[642]	CALL     	R35 3 1 ; R35(R36,R37)
	224	[645]	SELF     	R35 R4 K60 ; R36 := R4; R35 := R4[0x8bad1fdf]
	225	[645]	OP_LOADBOOL	R37 1 0 ; R37 := true
	226	[645]	CALL     	R35 3 1 ; R35(R36,R37)
	227	[646]	SELF     	R35 R4 K61 ; R36 := R4; R35 := R4[0x47d2a163]
	228	[646]	GETUPVAL 	R37 U5 ; R37 := U5
	229	[646]	GETTABLE 	R37 R37 K6 ; R37 := R37["flyIn"]
	230	[646]	GETTABLE 	R37 R37 K62 ; R37 := R37["noise"]
	231	[646]	GETTABLE 	R37 R37 K8 ; R37 := R37["position"]
	232	[646]	GETTABLE 	R37 R37 K63 ; R37 := R37["normal"]
	233	[646]	GETUPVAL 	R38 U5 ; R38 := U5
	234	[646]	GETTABLE 	R38 R38 K6 ; R38 := R38["flyIn"]
	235	[646]	GETTABLE 	R38 R38 K62 ; R38 := R38["noise"]
	236	[646]	GETTABLE 	R38 R38 K8 ; R38 := R38["position"]
	237	[646]	GETTABLE 	R38 R38 K64 ; R38 := R38["speed"]
	238	[646]	GETUPVAL 	R39 U5 ; R39 := U5
	239	[646]	GETTABLE 	R39 R39 K6 ; R39 := R39["flyIn"]
	240	[646]	GETTABLE 	R39 R39 K62 ; R39 := R39["noise"]
	241	[646]	GETTABLE 	R39 R39 K65 ; R39 := R39["rotation"]
	242	[646]	GETTABLE 	R39 R39 K66 ; R39 := R39["vec"]
	243	[646]	GETUPVAL 	R40 U5 ; R40 := U5
	244	[646]	GETTABLE 	R40 R40 K6 ; R40 := R40["flyIn"]
	245	[646]	GETTABLE 	R40 R40 K62 ; R40 := R40["noise"]
	246	[646]	GETTABLE 	R40 R40 K65 ; R40 := R40["rotation"]
	247	[646]	GETTABLE 	R40 R40 K64 ; R40 := R40["speed"]
	248	[646]	LOADK    	R41 := 0.000000
	249	[646]	GETUPVAL 	R42 U5 ; R42 := U5
	250	[646]	GETTABLE 	R42 R42 K6 ; R42 := R42["flyIn"]
	251	[646]	GETTABLE 	R42 R42 K62 ; R42 := R42["noise"]
	252	[646]	GETTABLE 	R42 R42 K67 ; R42 := R42["decay"]
	253	[646]	GETGLOBAL	R43 K68 ; R43 := 0xa421af95
	254	[646]	LOADK    	R44 := 1.000000
	255	[646]	LOADK    	R45 := 1.000000
	256	[646]	LOADK    	R46 := 1.000000
	257	[646]	CALL     	R43 4 2 ; R43 := R43(R44,R45,R46)
	258	[646]	GETUPVAL 	R44 U5 ; R44 := U5
	259	[646]	GETTABLE 	R44 R44 K6 ; R44 := R44["flyIn"]
	260	[646]	GETTABLE 	R44 R44 K62 ; R44 := R44["noise"]
	261	[646]	GETTABLE 	R44 R44 K8 ; R44 := R44["position"]
	262	[646]	GETTABLE 	R44 R44 K69 ; R44 := R44["strength"]
	263	[646]	MUL      	R43 R43 R44 ; R43 := R43 * R44
	264	[646]	GETGLOBAL	R44 K68 ; R44 := 0xa421af95
	265	[646]	LOADK    	R45 := 1.000000
	266	[646]	LOADK    	R46 := 1.000000
	267	[646]	LOADK    	R47 := 1.000000
	268	[646]	CALL     	R44 4 2 ; R44 := R44(R45,R46,R47)
	269	[646]	GETUPVAL 	R45 U5 ; R45 := U5
	270	[646]	GETTABLE 	R45 R45 K6 ; R45 := R45["flyIn"]
	271	[646]	GETTABLE 	R45 R45 K62 ; R45 := R45["noise"]
	272	[646]	GETTABLE 	R45 R45 K65 ; R45 := R45["rotation"]
	273	[646]	GETTABLE 	R45 R45 K69 ; R45 := R45["strength"]
	274	[646]	MUL      	R44 R44 R45 ; R44 := R44 * R45
	275	[646]	CALL     	R35 10 1 ; R35(R36,R37,R38,R39,R40,R41,R42,R43,R44)
	276	[652]	NEWTABLE 	R35 0 5 ; R35 := {}
	277	[652]	SETTABLE 	R35 K2 R2 ; R35["loadout"] := R2
	278	[652]	SETTABLE 	R35 K70 R4 ; R35["ship"] := R4
	279	[652]	SETTABLE 	R35 K71 R5 ; R35["location"] := R5
	280	[652]	GETTABLE 	R36 R0 K72 ; R36 := R0["isLocal"]
	281	[652]	SETTABLE 	R35 K72 R36 ; R35["isLocal"] := R36
	282	[652]	GETTABLE 	R36 R0 K73 ; R36 := R0["name"]
	283	[652]	SETTABLE 	R35 K73 R36 ; R35["name"] := R36
	284	[655]	TEST     	R3 0 ; if not R3 then PC := 352
	285	[655]	JMP      	352 ; PC := 352
	286	[655]	TEST     	R5 0 ; if not R5 then PC := 352
	287	[655]	JMP      	352 ; PC := 352
	288	[657]	TEST     	R1 0 ; if not R1 then PC := 334
	289	[657]	JMP      	334 ; PC := 334
	290	[659]	GETTABLE 	R36 R5 K8 ; R36 := R5["position"]
	291	[660]	GETGLOBAL	R37 K9 ; R37 := 0x20b7f774
	292	[660]	MOVE     	R38 R36 ; R38 := R36
	293	[660]	GETUPVAL 	R39 U6 ; R39 := U6
	294	[660]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	295	[661]	SELF     	R38 R4 K74 ; R39 := R4; R38 := R4[0x589ef1c1]
	296	[661]	MOVE     	R40 R36 ; R40 := R36
	297	[661]	MOVE     	R41 R37 ; R41 := R37
	298	[661]	CALL     	R38 4 1 ; R38(R39,R40,R41)
	299	[663]	GETGLOBAL	R38 K75 ; R38 := 0xae2294fa
	300	[663]	GETUPVAL 	R39 U6 ; R39 := U6
	301	[663]	SUB      	R39 R39 R36 ; R39 := R39 - R36
	302	[663]	CALL     	R38 2 2 ; R38 := R38(R39)
	303	[664]	GETUPVAL 	R39 U7 ; R39 := U7
	304	[664]	MOVE     	R40 R38 ; R40 := R38
	305	[664]	CALL     	R39 2 2 ; R39 := R39(R40)
	306	[665]	SELF     	R40 R4 K12 ; R41 := R4; R40 := R4[0x2d9ba74f]
	307	[665]	MOVE     	R42 R39 ; R42 := R39
	308	[665]	CALL     	R40 3 1 ; R40(R41,R42)
	309	[668]	GETGLOBAL	R40 K68 ; R40 := 0xa421af95
	310	[668]	LOADK    	R41 := 1.000000
	311	[668]	LOADK    	R42 := 1.000000
	312	[668]	LOADK    	R43 := 1.000000
	313	[668]	CALL     	R40 4 2 ; R40 := R40(R41,R42,R43)
	314	[668]	GETUPVAL 	R41 U5 ; R41 := U5
	315	[668]	GETTABLE 	R41 R41 K76 ; R41 := R41["idle"]
	316	[668]	GETTABLE 	R41 R41 K8 ; R41 := R41["position"]
	317	[668]	GETTABLE 	R41 R41 K69 ; R41 := R41["strength"]
	318	[668]	MUL      	R40 R40 R41 ; R40 := R40 * R41
	319	[669]	GETGLOBAL	R41 K68 ; R41 := 0xa421af95
	320	[669]	LOADK    	R42 := 1.000000
	321	[669]	LOADK    	R43 := 1.000000
	322	[669]	LOADK    	R44 := 1.000000
	323	[669]	CALL     	R41 4 2 ; R41 := R41(R42,R43,R44)
	324	[669]	GETUPVAL 	R42 U5 ; R42 := U5
	325	[669]	GETTABLE 	R42 R42 K76 ; R42 := R42["idle"]
	326	[669]	GETTABLE 	R42 R42 K65 ; R42 := R42["rotation"]
	327	[669]	GETTABLE 	R42 R42 K69 ; R42 := R42["strength"]
	328	[669]	MUL      	R41 R41 R42 ; R41 := R41 * R42
	329	[670]	SELF     	R42 R4 K77 ; R43 := R4; R42 := R4[0x4c7e81e6]
	330	[670]	MOVE     	R44 R40 ; R44 := R40
	331	[670]	MOVE     	R45 R41 ; R45 := R41
	332	[670]	CALL     	R42 4 1 ; R42(R43,R44,R45)
	333	[670]	JMP      	351 ; PC := 351
	334	[674]	GETUPVAL 	R42 U8 ; R42 := U8
	335	[674]	MOVE     	R43 R35 ; R43 := R35
	336	[674]	GETUPVAL 	R44 U9 ; R44 := U9
	337	[674]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	338	[675]	GETUPVAL 	R43 U10 ; R43 := U10
	339	[675]	GETTABLE 	R44 R0 K73 ; R44 := R0["name"]
	340	[675]	MOVE     	R45 R35 ; R45 := R35
	341	[675]	MOVE     	R46 R42 ; R46 := R42
	342	[675]	GETUPVAL 	R47 U11 ; R47 := U11
	343	[680]	CLOSURE  	R48 0 ; R48 := closure(Function #1)
	344	[680]	GETUPVAL 	R0 U8 ; R0 := U8
	345	[680]	MOVE     	R0 R35 ; R0 := R35
	346	[680]	GETUPVAL 	R0 U12 ; R0 := U12
	347	[680]	GETUPVAL 	R0 U10 ; R0 := U10
	348	[680]	MOVE     	R0 R0 ; R0 := R0
	349	[680]	GETUPVAL 	R0 U13 ; R0 := U13
	350	[675]	CALL     	R43 6 1 ; R43(R44,R45,R46,R47,R48)
	351	[683]	SETTABLE 	R5 K3 K78 ; R5["inUse"] := true
	352	[686]	RETURN   	R35 2 ; return R35 
	353	[687]	RETURN   	R0 1 ; return 

function #10 <?:689,712> (50 instructions, 200 bytes at 0000016088DEA770)
1 param, 9 slots, 2 upvalues, 0 locals, 19 constants, 0 functions
	1	[690]	GETGLOBAL	R1 K0 ; R1 := cjson
	2	[690]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x7ab914d8]
	3	[690]	GETTABLE 	R2 R0 K2 ; R2 := R0["loadout"]
	4	[690]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[691]	NEWTABLE 	R2 0 0 ; R2 := {}
	6	[693]	GETUPVAL 	R3 U0 ; R3 := U0
	7	[693]	MOVE     	R4 R0 ; R4 := R0
	8	[693]	CALL     	R3 2 2 ; R3 := R3(R4)
	9	[694]	TEST     	R3 0 ; if not R3 then PC := 28
	10	[694]	JMP      	28 ; PC := 28
	11	[696]	GETGLOBAL	R4 K3 ; R4 := 0x33bdd652
	12	[696]	GETTABLE 	R4 R4 K4 ; R4 := R4[0x23d5322f]
	13	[696]	MOVE     	R5 R2 ; R5 := R2
	14	[696]	GETTABLE 	R6 R1 K5 ; R6 := R1["ShipType"]
	15	[696]	CALL     	R4 3 1 ; R4(R5,R6)
	16	[697]	GETGLOBAL	R4 K6 ; R4 := 0x7b998233
	17	[697]	GETTABLE 	R5 R1 K7 ; R5 := R1["ShipCustomizations"]
	18	[697]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[697]	TEST     	R4 1 ; if R4 then PC := 28
	20	[697]	JMP      	28 ; PC := 28
	21	[698]	GETTABLE 	R4 R1 K7 ; R4 := R1["ShipCustomizations"]
	22	[698]	GETTABLE 	R4 R4 K8 ; R4 := R4["SkinFlavourItem"]
	23	[699]	GETGLOBAL	R5 K3 ; R5 := 0x33bdd652
	24	[699]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x23d5322f]
	25	[699]	MOVE     	R6 R2 ; R6 := R2
	26	[699]	MOVE     	R7 R4 ; R7 := R4
	27	[699]	CALL     	R5 3 1 ; R5(R6,R7)
	28	[703]	NEWTABLE 	R5 0 4 ; R5 := {}
	29	[703]	SETTABLE 	R5 K2 R1 ; R5["loadout"] := R1
	30	[703]	GETTABLE 	R6 R0 K10 ; R6 := R0["name"]
	31	[703]	SETTABLE 	R5 K9 R6 ; R5["memberName"] := R6
	32	[703]	SETTABLE 	R5 K11 K12 ; R5["loader"] := nil
	33	[703]	SETTABLE 	R5 K13 K14 ; R5["done"] := true
	34	[705]	LEN      	R6 R2 ; R6 := # R2
	35	[705]	LT       	0 K15 R6 ; if 0.000000 >= R6 then PC := 48
	36	[705]	JMP      	48 ; PC := 48
	37	[706]	GETGLOBAL	R6 K16 ; R6 := 0xbd496aa1
	38	[706]	GETTABLE 	R6 R6 K17 ; R6 := R6[0x42645da3]
	39	[706]	MOVE     	R7 R2 ; R7 := R2
	40	[706]	CALL     	R6 2 2 ; R6 := R6(R7)
	41	[706]	SETTABLE 	R5 K11 R6 ; R5["loader"] := R6
	42	[707]	SETTABLE 	R5 K13 K18 ; R5["done"] := false
	43	[708]	GETGLOBAL	R6 K3 ; R6 := 0x33bdd652
	44	[708]	GETTABLE 	R6 R6 K4 ; R6 := R6[0x23d5322f]
	45	[708]	GETUPVAL 	R7 U1 ; R7 := U1
	46	[708]	MOVE     	R8 R5 ; R8 := R5
	47	[708]	CALL     	R6 3 1 ; R6(R7,R8)
	48	[711]	GETTABLE 	R6 R5 K13 ; R6 := R5["done"]
	49	[711]	RETURN   	R6 2 ; return R6 
	50	[712]	RETURN   	R0 1 ; return 

function #11 <?:714,769> (92 instructions, 368 bytes at 0000016088DEAB30)
0 params, 18 slots, 3 upvalues, 0 locals, 19 constants, 0 functions
	1	[716]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[716]	LEN      	R0 R0 ; R0 := # R0
	3	[716]	EQ       	0 R0 K0 ; if R0 ~= 0.000000 then PC := 6
	4	[716]	JMP      	6 ; PC := 6
	5	[717]	RETURN   	R0 1 ; return 
	6	[720]	OP_LOADBOOL	R0 0 0 ; R0 := false
	7	[722]	LOADNIL  	R1 R1 ; R1 := nil
	8	[723]	LOADK    	R2 := 1.000000
	9	[723]	GETUPVAL 	R3 U0 ; R3 := U0
	10	[723]	LEN      	R3 R3 ; R3 := # R3
	11	[723]	LOADK    	R4 := 1.000000
	12	[723]	FORPREP  	R2 69 ; R2 -= R4; PC := 69
	13	[725]	GETUPVAL 	R6 U0 ; R6 := U0
	14	[725]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	15	[726]	GETTABLE 	R7 R6 K1 ; R7 := R6["done"]
	16	[726]	TEST     	R7 1 ; if R7 then PC := 69
	17	[726]	JMP      	69 ; PC := 69
	18	[726]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	19	[726]	GETTABLE 	R8 R6 K3 ; R8 := R6["loader"]
	20	[726]	CALL     	R7 2 2 ; R7 := R7(R8)
	21	[726]	TEST     	R7 1 ; if R7 then PC := 69
	22	[726]	JMP      	69 ; PC := 69
	23	[726]	GETTABLE 	R7 R6 K3 ; R7 := R6["loader"]
	24	[726]	SELF     	R7 R7 K4 ; R8 := R7; R7 := R7[0xd2d3875a]
	25	[726]	CALL     	R7 2 2 ; R7 := R7(R8)
	26	[726]	TEST     	R7 0 ; if not R7 then PC := 69
	27	[726]	JMP      	69 ; PC := 69
	28	[728]	SETTABLE 	R6 K1 K5 ; R6["done"] := true
	29	[729]	OP_LOADBOOL	R0 1 0 ; R0 := true
	30	[731]	GETGLOBAL	R7 K6 ; R7 := 0x3d106989
	31	[731]	LOADK    	R8 K7 ; R8 := "Ship loader for "
	32	[731]	GETGLOBAL	R9 K8 ; R9 := 0x64fb1586
	33	[731]	GETTABLE 	R10 R6 K9 ; R10 := R6["memberName"]
	34	[731]	CALL     	R9 2 2 ; R9 := R9(R10)
	35	[731]	LOADK    	R10 K10 ; R10 := " done!"
	36	[731]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	37	[731]	CALL     	R7 2 1 ; R7(R8)
	38	[734]	TEST     	R1 1 ; if R1 then PC := 44
	39	[734]	JMP      	44 ; PC := 44
	40	[735]	GETGLOBAL	R7 K11 ; R7 := 0xe7f2b02f
	41	[735]	SELF     	R7 R7 K12 ; R8 := R7; R7 := R7[0x6d0aa187]
	42	[735]	CALL     	R7 2 2 ; R7 := R7(R8)
	43	[735]	MOVE     	R1 R7 ; R1 := R7
	44	[738]	LOADK    	R7 := 0.000000
	45	[739]	LOADK    	R8 := 1.000000
	46	[739]	LEN      	R9 R1 ; R9 := # R1
	47	[739]	LOADK    	R10 := 1.000000
	48	[739]	FORPREP  	R8 56 ; R8 -= R10; PC := 56
	49	[740]	GETTABLE 	R12 R1 R11 ; R12 := R1[R11]
	50	[741]	GETTABLE 	R13 R6 K9 ; R13 := R6["memberName"]
	51	[741]	GETTABLE 	R14 R12 K13 ; R14 := R12["name"]
	52	[741]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 56
	53	[741]	JMP      	56 ; PC := 56
	54	[742]	MOVE     	R7 R11 ; R7 := R11
	55	[743]	JMP      	57 ; PC := 57
	56	[739]	FORLOOP  	R8 49 ; R8 += R10; if R8 <= R9 then begin PC := 49; R11 := R8 end
	57	[747]	LT       	0 K0 R7 ; if 0.000000 >= R7 then PC := 69
	58	[747]	JMP      	69 ; PC := 69
	59	[748]	GETUPVAL 	R13 U1 ; R13 := U1
	60	[748]	GETTABLE 	R14 R1 R7 ; R14 := R1[R7]
	61	[748]	OP_LOADBOOL	R15 0 0 ; R15 := false
	62	[748]	GETTABLE 	R16 R6 K14 ; R16 := R6["loadout"]
	63	[748]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	64	[749]	GETGLOBAL	R14 K15 ; R14 := 0x33bdd652
	65	[749]	GETTABLE 	R14 R14 K16 ; R14 := R14[0x23d5322f]
	66	[749]	GETUPVAL 	R15 U2 ; R15 := U2
	67	[749]	MOVE     	R16 R13 ; R16 := R13
	68	[749]	CALL     	R14 3 1 ; R14(R15,R16)
	69	[723]	FORLOOP  	R2 13 ; R2 += R4; if R2 <= R3 then begin PC := 13; R5 := R2 end
	70	[755]	TEST     	R0 0 ; if not R0 then PC := 92
	71	[755]	JMP      	92 ; PC := 92
	72	[756]	LOADK    	R14 := 1.000000
	73	[757]	GETUPVAL 	R15 U0 ; R15 := U0
	74	[757]	LEN      	R15 R15 ; R15 := # R15
	75	[759]	LE       	0 R14 R15 ; if R14 > R15 then PC := 92
	76	[759]	JMP      	92 ; PC := 92
	77	[760]	GETUPVAL 	R16 U0 ; R16 := U0
	78	[760]	GETTABLE 	R16 R16 R14 ; R16 := R16[R14]
	79	[760]	GETTABLE 	R16 R16 K1 ; R16 := R16["done"]
	80	[760]	TEST     	R16 0 ; if not R16 then PC := 90
	81	[760]	JMP      	90 ; PC := 90
	82	[761]	GETUPVAL 	R16 U0 ; R16 := U0
	83	[761]	GETUPVAL 	R17 U0 ; R17 := U0
	84	[761]	GETTABLE 	R17 R17 R15 ; R17 := R17[R15]
	85	[761]	SETTABLE 	R16 R14 R17 ; R16[R14] := R17
	86	[762]	GETUPVAL 	R16 U0 ; R16 := U0
	87	[762]	SETTABLE 	R16 R15 K17 ; R16[R15] := nil
	88	[763]	SUB      	R15 R15 K18 ; R15 := R15 - 1.000000
	89	[763]	JMP      	75 ; PC := 75
	90	[765]	ADD      	R14 R14 K18 ; R14 := R14 + 1.000000
	91	[766]	JMP      	75 ; PC := 75
	92	[769]	RETURN   	R0 1 ; return 

function #12 <?:771,783> (21 instructions, 84 bytes at 0000016088DEB070)
1 param, 8 slots, 5 upvalues, 0 locals, 6 constants, 1 function
	1	[773]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[773]	GETTABLE 	R2 R0 K1 ; R2 := R0["ship"]
	3	[773]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[773]	TEST     	R1 1 ; if R1 then PC := 21
	5	[773]	JMP      	21 ; PC := 21
	6	[774]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[774]	MOVE     	R2 R0 ; R2 := R0
	8	[774]	GETUPVAL 	R3 U1 ; R3 := U1
	9	[774]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	10	[775]	GETUPVAL 	R2 U2 ; R2 := U2
	11	[775]	GETTABLE 	R3 R0 K2 ; R3 := R0["name"]
	12	[775]	MOVE     	R4 R0 ; R4 := R0
	13	[775]	MOVE     	R5 R1 ; R5 := R1
	14	[775]	GETUPVAL 	R6 U3 ; R6 := U3
	15	[780]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	16	[780]	MOVE     	R0 R0 ; R0 := R0
	17	[780]	GETUPVAL 	R0 U4 ; R0 := U4
	18	[775]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	19	[781]	GETTABLE 	R2 R0 K3 ; R2 := R0["location"]
	20	[781]	SETTABLE 	R2 K4 K5 ; R2["inUse"] := false
	21	[783]	RETURN   	R0 1 ; return 

function #13 <?:785,987> (332 instructions, 1328 bytes at 0000016088DEB3F0)
0 params, 41 slots, 18 upvalues, 0 locals, 52 constants, 1 function
	1	[788]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[788]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[789]	NEWTABLE 	R0 0 0 ; R0 := {}
	4	[789]	SETUPVAL 	R0 U1 ; U1 := R0
	5	[790]	NEWTABLE 	R0 0 0 ; R0 := {}
	6	[790]	SETUPVAL 	R0 U2 ; U2 := R0
	7	[791]	NEWTABLE 	R0 0 0 ; R0 := {}
	8	[791]	SETUPVAL 	R0 U3 ; U3 := R0
	9	[792]	LOADNIL  	R0 R0 ; R0 := nil
	10	[792]	SETUPVAL 	R0 U4 ; U4 := R0
	11	[793]	LOADNIL  	R0 R0 ; R0 := nil
	12	[793]	SETUPVAL 	R0 U5 ; U5 := R0
	13	[794]	NEWTABLE 	R0 0 0 ; R0 := {}
	14	[794]	SETUPVAL 	R0 U6 ; U6 := R0
	15	[796]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	16	[796]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	17	[796]	CALL     	R0 2 2 ; R0 := R0(R1)
	18	[796]	TEST     	R0 1 ; if R0 then PC := 23
	19	[796]	JMP      	23 ; PC := 23
	20	[796]	GETUPVAL 	R0 U7 ; R0 := U7
	21	[796]	TEST     	R0 1 ; if R0 then PC := 24
	22	[796]	JMP      	24 ; PC := 24
	23	[797]	RETURN   	R0 1 ; return 
	24	[800]	GETGLOBAL	R0 K2 ; R0 := 0xbe190284
	25	[801]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	26	[801]	MOVE     	R2 R0 ; R2 := R0
	27	[801]	CALL     	R1 2 2 ; R1 := R1(R2)
	28	[801]	TEST     	R1 1 ; if R1 then PC := 332
	29	[801]	JMP      	332 ; PC := 332
	30	[801]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xf2deaf69]
	31	[801]	GETGLOBAL	R3 K4 ; R3 := gLotusAttractModeGameRulesType
	32	[801]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	33	[801]	TEST     	R1 0 ; if not R1 then PC := 332
	34	[801]	JMP      	332 ; PC := 332
	35	[804]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	36	[804]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xfb669000]
	37	[804]	GETGLOBAL	R3 K6 ; R3 := gZoneAttribsType
	38	[804]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	39	[805]	LOADNIL  	R2 R2 ; R2 := nil
	40	[807]	GETGLOBAL	R3 K7 ; R3 := 0x0469f296
	41	[807]	LOADK    	R4 K8 ; R4 := "BackDropSpace"
	42	[807]	CALL     	R3 2 2 ; R3 := R3(R4)
	43	[808]	GETGLOBAL	R4 K7 ; R4 := 0x0469f296
	44	[808]	LOADK    	R5 K9 ; R5 := "LandscapeBackDrop"
	45	[808]	CALL     	R4 2 2 ; R4 := R4(R5)
	46	[810]	LOADK    	R5 := 1.000000
	47	[810]	LEN      	R6 R1 ; R6 := # R1
	48	[810]	LOADK    	R7 := 1.000000
	49	[810]	FORPREP  	R5 76 ; R5 -= R7; PC := 76
	50	[811]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	51	[811]	GETTABLE 	R10 R1 R8 ; R10 := R1[R8]
	52	[811]	CALL     	R9 2 2 ; R9 := R9(R10)
	53	[811]	TEST     	R9 1 ; if R9 then PC := 76
	54	[811]	JMP      	76 ; PC := 76
	55	[812]	GETTABLE 	R9 R1 R8 ; R9 := R1[R8]
	56	[812]	SELF     	R9 R9 K10 ; R10 := R9; R9 := R9[0xefe29e59]
	57	[812]	CALL     	R9 2 2 ; R9 := R9(R10)
	58	[813]	EQ       	0 R9 R3 ; if R9 ~= R3 then PC := 72
	59	[813]	JMP      	72 ; PC := 72
	60	[814]	GETTABLE 	R10 R1 R8 ; R10 := R1[R8]
	61	[815]	SELF     	R11 R10 K11 ; R12 := R10; R11 := R10[0xe79e7ef4]
	62	[815]	CALL     	R11 2 2 ; R11 := R11(R12)
	63	[815]	MOVE     	R2 R11 ; R2 := R11
	64	[816]	SELF     	R11 R10 K12 ; R12 := R10; R11 := R10[0xd1586535]
	65	[816]	CALL     	R11 2 2 ; R11 := R11(R12)
	66	[817]	SETUPVAL 	R11 U5 ; U5 := R11
	67	[818]	SELF     	R12 R2 K13 ; R13 := R2; R12 := R2[0xadbdc520]
	68	[818]	CALL     	R12 2 2 ; R12 := R12(R13)
	69	[818]	SETUPVAL 	R12 U4 ; U4 := R12
	70	[819]	JMP      	77 ; PC := 77
	71	[819]	JMP      	76 ; PC := 76
	72	[820]	EQ       	0 R9 R4 ; if R9 ~= R4 then PC := 76
	73	[820]	JMP      	76 ; PC := 76
	74	[823]	OP_LOADBOOL	R12 0 0 ; R12 := false
	75	[823]	SETUPVAL 	R12 U7 ; U7 := R12
	76	[810]	FORLOOP  	R5 50 ; R5 += R7; if R5 <= R6 then begin PC := 50; R8 := R5 end
	77	[830]	GETUPVAL 	R12 U5 ; R12 := U5
	78	[830]	TEST     	R12 0 ; if not R12 then PC := 83
	79	[830]	JMP      	83 ; PC := 83
	80	[830]	GETUPVAL 	R12 U4 ; R12 := U4
	81	[830]	TEST     	R12 1 ; if R12 then PC := 84
	82	[830]	JMP      	84 ; PC := 84
	83	[831]	RETURN   	R0 1 ; return 
	84	[835]	GETGLOBAL	R12 K14 ; R12 := 0xa421af95
	85	[835]	GETUPVAL 	R13 U5 ; R13 := U5
	86	[835]	GETTABLE 	R13 R13 K15 ; R13 := R13["x"]
	87	[835]	ADD      	R13 R13 K16 ; R13 := R13 + 20.000000
	88	[835]	GETUPVAL 	R14 U5 ; R14 := U5
	89	[835]	GETTABLE 	R14 R14 K17 ; R14 := R14["y"]
	90	[835]	SUB      	R14 R14 K18 ; R14 := R14 - 15.000000
	91	[835]	GETUPVAL 	R15 U5 ; R15 := U5
	92	[835]	GETTABLE 	R15 R15 K19 ; R15 := R15["z"]
	93	[835]	SUB      	R15 R15 K20 ; R15 := R15 - 25.000000
	94	[835]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	95	[835]	SETUPVAL 	R12 U8 ; U8 := R12
	96	[838]	SELF     	R12 R2 K21 ; R13 := R2; R12 := R2[0xff227b62]
	97	[838]	GETUPVAL 	R14 U9 ; R14 := U9
	98	[838]	GETTABLE 	R14 R14 K22 ; R14 := R14["backDropActualScale"]
	99	[838]	CALL     	R12 3 1 ; R12(R13,R14)
	100	[842]	GETGLOBAL	R12 K1 ; R12 := 0x89326c93
	101	[842]	SELF     	R12 R12 K23 ; R13 := R12; R12 := R12[0xc7fcada9]
	102	[842]	GETGLOBAL	R14 K7 ; R14 := 0x0469f296
	103	[842]	LOADK    	R15 K24 ; R15 := "SkyboxPlanet"
	104	[842]	CALL     	R14 2 0 ; R14,... := R14(R15)
	105	[842]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	106	[843]	LOADK    	R13 := 1.000000
	107	[843]	LEN      	R14 R12 ; R14 := # R12
	108	[843]	LOADK    	R15 := 1.000000
	109	[843]	FORPREP  	R13 128 ; R13 -= R15; PC := 128
	110	[844]	GETTABLE 	R17 R12 R16 ; R17 := R12[R16]
	111	[846]	NEWTABLE 	R18 0 0 ; R18 := {}
	112	[847]	SETTABLE 	R18 K25 R17 ; R18["mesh"] := R17
	113	[848]	SELF     	R19 R17 K12 ; R20 := R17; R19 := R17[0xd1586535]
	114	[848]	CALL     	R19 2 2 ; R19 := R19(R20)
	115	[848]	SETTABLE 	R18 K26 R19 ; R18["position"] := R19
	116	[849]	SELF     	R19 R17 K28 ; R20 := R17; R19 := R17[0x65d389cb]
	117	[849]	CALL     	R19 2 2 ; R19 := R19(R20)
	118	[849]	GETUPVAL 	R20 U10 ; R20 := U10
	119	[849]	GETTABLE 	R20 R20 K29 ; R20 := R20["collision"]
	120	[849]	GETTABLE 	R20 R20 K30 ; R20 := R20["planetMargin"]
	121	[849]	ADD      	R19 R19 R20 ; R19 := R19 + R20
	122	[849]	SETTABLE 	R18 K27 R19 ; R18["radius"] := R19
	123	[851]	GETGLOBAL	R19 K31 ; R19 := 0x33bdd652
	124	[851]	GETTABLE 	R19 R19 K32 ; R19 := R19[0x23d5322f]
	125	[851]	GETUPVAL 	R20 U6 ; R20 := U6
	126	[851]	MOVE     	R21 R18 ; R21 := R18
	127	[851]	CALL     	R19 3 1 ; R19(R20,R21)
	128	[843]	FORLOOP  	R13 110 ; R13 += R15; if R13 <= R14 then begin PC := 110; R16 := R13 end
	129	[855]	LOADNIL  	R19 R19 ; R19 := nil
	130	[929]	CLOSURE  	R19 0 ; R19 := closure(Function #1)
	131	[929]	GETUPVAL 	R0 U10 ; R0 := U10
	132	[929]	GETUPVAL 	R0 U6 ; R0 := U6
	133	[929]	MOVE     	R0 R19 ; R0 := R19
	134	[932]	GETUPVAL 	R20 U5 ; R20 := U5
	135	[932]	GETUPVAL 	R21 U10 ; R21 := U10
	136	[932]	GETTABLE 	R21 R21 K33 ; R21 := R21["flyIn"]
	137	[932]	GETTABLE 	R21 R21 K26 ; R21 := R21["position"]
	138	[932]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	139	[932]	SETUPVAL 	R20 U11 ; U11 := R20
	140	[933]	GETUPVAL 	R20 U5 ; R20 := U5
	141	[933]	GETUPVAL 	R21 U10 ; R21 := U10
	142	[933]	GETTABLE 	R21 R21 K34 ; R21 := R21["flyOut"]
	143	[933]	GETTABLE 	R21 R21 K26 ; R21 := R21["position"]
	144	[933]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	145	[933]	SETUPVAL 	R20 U12 ; U12 := R20
	146	[936]	MOVE     	R20 R19 ; R20 := R19
	147	[936]	GETUPVAL 	R21 U11 ; R21 := U11
	148	[936]	GETUPVAL 	R22 U8 ; R22 := U8
	149	[936]	LOADK    	R23 := 0.000000
	150	[936]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	151	[937]	GETTABLE 	R21 R20 K35 ; R21 := R20[1.000000]
	152	[937]	SETUPVAL 	R21 U11 ; U11 := R21
	153	[940]	NEWTABLE 	R21 0 0 ; R21 := {}
	154	[940]	SETUPVAL 	R21 U3 ; U3 := R21
	155	[941]	LOADNIL  	R21 R21 ; R21 := nil
	156	[944]	GETGLOBAL	R22 K14 ; R22 := 0xa421af95
	157	[944]	GETUPVAL 	R23 U5 ; R23 := U5
	158	[944]	GETTABLE 	R23 R23 K15 ; R23 := R23["x"]
	159	[944]	SUB      	R23 R23 K36 ; R23 := R23 - 2.100000
	160	[944]	GETUPVAL 	R24 U5 ; R24 := U5
	161	[944]	GETTABLE 	R24 R24 K17 ; R24 := R24["y"]
	162	[944]	ADD      	R24 R24 K37 ; R24 := R24 + 0.410000
	163	[944]	GETUPVAL 	R25 U5 ; R25 := U5
	164	[944]	GETTABLE 	R25 R25 K19 ; R25 := R25["z"]
	165	[944]	SUB      	R25 R25 K38 ; R25 := R25 - 1.590000
	166	[944]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	167	[945]	NEWTABLE 	R23 0 1 ; R23 := {}
	168	[945]	NEWTABLE 	R24 0 2 ; R24 := {}
	169	[945]	GETUPVAL 	R25 U11 ; R25 := U11
	170	[945]	SETTABLE 	R24 K26 R25 ; R24["position"] := R25
	171	[945]	GETUPVAL 	R25 U13 ; R25 := U13
	172	[945]	SETTABLE 	R24 K40 R25 ; R24["rotation"] := R25
	173	[945]	SETTABLE 	R23 K39 R24 ; R23["from"] := R24
	174	[946]	NEWTABLE 	R24 0 2 ; R24 := {}
	175	[946]	NEWTABLE 	R25 0 2 ; R25 := {}
	176	[946]	GETGLOBAL	R26 K14 ; R26 := 0xa421af95
	177	[946]	GETTABLE 	R27 R22 K15 ; R27 := R22["x"]
	178	[946]	GETTABLE 	R28 R22 K17 ; R28 := R22["y"]
	179	[946]	ADD      	R28 R28 K41 ; R28 := R28 + 1.500000
	180	[946]	GETTABLE 	R29 R22 K19 ; R29 := R22["z"]
	181	[946]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	182	[946]	SETTABLE 	R25 K26 R26 ; R25["position"] := R26
	183	[946]	GETUPVAL 	R26 U13 ; R26 := U13
	184	[946]	SETTABLE 	R25 K40 R26 ; R25["rotation"] := R26
	185	[946]	SETTABLE 	R24 K39 R25 ; R24["from"] := R25
	186	[946]	NEWTABLE 	R25 0 2 ; R25 := {}
	187	[946]	GETUPVAL 	R26 U12 ; R26 := U12
	188	[946]	SETTABLE 	R25 K26 R26 ; R25["position"] := R26
	189	[946]	GETUPVAL 	R26 U13 ; R26 := U13
	190	[946]	SETTABLE 	R25 K40 R26 ; R25["rotation"] := R26
	191	[946]	SETTABLE 	R24 K42 R25 ; R24["to"] := R25
	192	[947]	GETUPVAL 	R25 U14 ; R25 := U14
	193	[947]	MOVE     	R26 R22 ; R26 := R22
	194	[947]	MOVE     	R27 R23 ; R27 := R23
	195	[947]	MOVE     	R28 R24 ; R28 := R24
	196	[947]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	197	[947]	MOVE     	R21 R25 ; R21 := R25
	198	[948]	GETGLOBAL	R25 K31 ; R25 := 0x33bdd652
	199	[948]	GETTABLE 	R25 R25 K32 ; R25 := R25[0x23d5322f]
	200	[948]	GETUPVAL 	R26 U3 ; R26 := U3
	201	[948]	MOVE     	R27 R21 ; R27 := R21
	202	[948]	CALL     	R25 3 1 ; R25(R26,R27)
	203	[951]	GETGLOBAL	R25 K14 ; R25 := 0xa421af95
	204	[951]	GETUPVAL 	R26 U5 ; R26 := U5
	205	[951]	GETTABLE 	R26 R26 K15 ; R26 := R26["x"]
	206	[951]	SUB      	R26 R26 K43 ; R26 := R26 - 3.020000
	207	[951]	GETUPVAL 	R27 U5 ; R27 := U5
	208	[951]	GETTABLE 	R27 R27 K17 ; R27 := R27["y"]
	209	[951]	ADD      	R27 R27 K44 ; R27 := R27 + 0.750000
	210	[951]	GETUPVAL 	R28 U5 ; R28 := U5
	211	[951]	GETTABLE 	R28 R28 K19 ; R28 := R28["z"]
	212	[951]	ADD      	R28 R28 K45 ; R28 := R28 + 1.140000
	213	[951]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	214	[952]	NEWTABLE 	R26 0 1 ; R26 := {}
	215	[952]	NEWTABLE 	R27 0 2 ; R27 := {}
	216	[952]	GETUPVAL 	R28 U11 ; R28 := U11
	217	[952]	SETTABLE 	R27 K26 R28 ; R27["position"] := R28
	218	[952]	GETUPVAL 	R28 U13 ; R28 := U13
	219	[952]	SETTABLE 	R27 K40 R28 ; R27["rotation"] := R28
	220	[952]	SETTABLE 	R26 K39 R27 ; R26["from"] := R27
	221	[953]	NEWTABLE 	R27 0 2 ; R27 := {}
	222	[953]	NEWTABLE 	R28 0 2 ; R28 := {}
	223	[953]	GETGLOBAL	R29 K14 ; R29 := 0xa421af95
	224	[953]	GETTABLE 	R30 R25 K15 ; R30 := R25["x"]
	225	[953]	GETTABLE 	R31 R25 K17 ; R31 := R25["y"]
	226	[953]	ADD      	R31 R31 K41 ; R31 := R31 + 1.500000
	227	[953]	GETTABLE 	R32 R25 K19 ; R32 := R25["z"]
	228	[953]	CALL     	R29 4 2 ; R29 := R29(R30,R31,R32)
	229	[953]	SETTABLE 	R28 K26 R29 ; R28["position"] := R29
	230	[953]	GETUPVAL 	R29 U13 ; R29 := U13
	231	[953]	SETTABLE 	R28 K40 R29 ; R28["rotation"] := R29
	232	[953]	SETTABLE 	R27 K39 R28 ; R27["from"] := R28
	233	[953]	NEWTABLE 	R28 0 2 ; R28 := {}
	234	[953]	GETUPVAL 	R29 U12 ; R29 := U12
	235	[953]	SETTABLE 	R28 K26 R29 ; R28["position"] := R29
	236	[953]	GETUPVAL 	R29 U13 ; R29 := U13
	237	[953]	SETTABLE 	R28 K40 R29 ; R28["rotation"] := R29
	238	[953]	SETTABLE 	R27 K42 R28 ; R27["to"] := R28
	239	[954]	GETUPVAL 	R28 U14 ; R28 := U14
	240	[954]	MOVE     	R29 R25 ; R29 := R25
	241	[954]	MOVE     	R30 R26 ; R30 := R26
	242	[954]	MOVE     	R31 R27 ; R31 := R27
	243	[954]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	244	[954]	MOVE     	R21 R28 ; R21 := R28
	245	[955]	GETGLOBAL	R28 K31 ; R28 := 0x33bdd652
	246	[955]	GETTABLE 	R28 R28 K32 ; R28 := R28[0x23d5322f]
	247	[955]	GETUPVAL 	R29 U3 ; R29 := U3
	248	[955]	MOVE     	R30 R21 ; R30 := R21
	249	[955]	CALL     	R28 3 1 ; R28(R29,R30)
	250	[958]	GETGLOBAL	R28 K14 ; R28 := 0xa421af95
	251	[958]	GETUPVAL 	R29 U5 ; R29 := U5
	252	[958]	GETTABLE 	R29 R29 K15 ; R29 := R29["x"]
	253	[958]	SUB      	R29 R29 K46 ; R29 := R29 - 2.630000
	254	[958]	GETUPVAL 	R30 U5 ; R30 := U5
	255	[958]	GETTABLE 	R30 R30 K17 ; R30 := R30["y"]
	256	[958]	ADD      	R30 R30 K47 ; R30 := R30 + 0.010000
	257	[958]	GETUPVAL 	R31 U5 ; R31 := U5
	258	[958]	GETTABLE 	R31 R31 K19 ; R31 := R31["z"]
	259	[958]	SUB      	R31 R31 K48 ; R31 := R31 - 0.250000
	260	[958]	CALL     	R28 4 2 ; R28 := R28(R29,R30,R31)
	261	[959]	NEWTABLE 	R29 0 1 ; R29 := {}
	262	[959]	NEWTABLE 	R30 0 2 ; R30 := {}
	263	[959]	GETUPVAL 	R31 U11 ; R31 := U11
	264	[959]	SETTABLE 	R30 K26 R31 ; R30["position"] := R31
	265	[959]	GETUPVAL 	R31 U13 ; R31 := U13
	266	[959]	SETTABLE 	R30 K40 R31 ; R30["rotation"] := R31
	267	[959]	SETTABLE 	R29 K39 R30 ; R29["from"] := R30
	268	[960]	NEWTABLE 	R30 0 2 ; R30 := {}
	269	[960]	NEWTABLE 	R31 0 2 ; R31 := {}
	270	[960]	GETGLOBAL	R32 K14 ; R32 := 0xa421af95
	271	[960]	GETTABLE 	R33 R28 K15 ; R33 := R28["x"]
	272	[960]	GETTABLE 	R34 R28 K17 ; R34 := R28["y"]
	273	[960]	ADD      	R34 R34 K41 ; R34 := R34 + 1.500000
	274	[960]	GETTABLE 	R35 R28 K19 ; R35 := R28["z"]
	275	[960]	CALL     	R32 4 2 ; R32 := R32(R33,R34,R35)
	276	[960]	SETTABLE 	R31 K26 R32 ; R31["position"] := R32
	277	[960]	GETUPVAL 	R32 U13 ; R32 := U13
	278	[960]	SETTABLE 	R31 K40 R32 ; R31["rotation"] := R32
	279	[960]	SETTABLE 	R30 K39 R31 ; R30["from"] := R31
	280	[960]	NEWTABLE 	R31 0 2 ; R31 := {}
	281	[960]	GETUPVAL 	R32 U12 ; R32 := U12
	282	[960]	GETGLOBAL	R33 K14 ; R33 := 0xa421af95
	283	[960]	LOADK    	R34 := 0.000000
	284	[960]	LOADK    	R35 := 20.000000
	285	[960]	LOADK    	R36 := 0.000000
	286	[960]	CALL     	R33 4 2 ; R33 := R33(R34,R35,R36)
	287	[960]	ADD      	R32 R32 R33 ; R32 := R32 + R33
	288	[960]	SETTABLE 	R31 K26 R32 ; R31["position"] := R32
	289	[960]	GETUPVAL 	R32 U13 ; R32 := U13
	290	[960]	SETTABLE 	R31 K40 R32 ; R31["rotation"] := R32
	291	[960]	SETTABLE 	R30 K42 R31 ; R30["to"] := R31
	292	[961]	GETUPVAL 	R31 U14 ; R31 := U14
	293	[961]	MOVE     	R32 R28 ; R32 := R28
	294	[961]	MOVE     	R33 R29 ; R33 := R29
	295	[961]	MOVE     	R34 R30 ; R34 := R30
	296	[961]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	297	[961]	MOVE     	R21 R31 ; R21 := R31
	298	[962]	GETGLOBAL	R31 K31 ; R31 := 0x33bdd652
	299	[962]	GETTABLE 	R31 R31 K32 ; R31 := R31[0x23d5322f]
	300	[962]	GETUPVAL 	R32 U3 ; R32 := U3
	301	[962]	MOVE     	R33 R21 ; R33 := R21
	302	[962]	CALL     	R31 3 1 ; R31(R32,R33)
	303	[966]	NEWTABLE 	R31 0 0 ; R31 := {}
	304	[966]	SETUPVAL 	R31 U1 ; U1 := R31
	305	[973]	GETGLOBAL	R31 K49 ; R31 := 0xe7f2b02f
	306	[973]	SELF     	R31 R31 K50 ; R32 := R31; R31 := R31[0x6d0aa187]
	307	[973]	CALL     	R31 2 2 ; R31 := R31(R32)
	308	[974]	LOADK    	R32 := 1.000000
	309	[974]	LEN      	R33 R31 ; R33 := # R31
	310	[974]	LOADK    	R34 := 1.000000
	311	[974]	FORPREP  	R32 322 ; R32 -= R34; PC := 322
	312	[975]	GETTABLE 	R36 R31 R35 ; R36 := R31[R35]
	313	[976]	GETUPVAL 	R37 U15 ; R37 := U15
	314	[976]	MOVE     	R38 R36 ; R38 := R36
	315	[976]	OP_LOADBOOL	R39 1 0 ; R39 := true
	316	[976]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	317	[977]	GETGLOBAL	R38 K31 ; R38 := 0x33bdd652
	318	[977]	GETTABLE 	R38 R38 K32 ; R38 := R38[0x23d5322f]
	319	[977]	GETUPVAL 	R39 U0 ; R39 := U0
	320	[977]	MOVE     	R40 R37 ; R40 := R37
	321	[977]	CALL     	R38 3 1 ; R38(R39,R40)
	322	[974]	FORLOOP  	R32 312 ; R32 += R34; if R32 <= R33 then begin PC := 312; R35 := R32 end
	323	[981]	GETUPVAL 	R38 U1 ; R38 := U1
	324	[981]	LEN      	R38 R38 ; R38 := # R38
	325	[981]	LT       	0 K51 R38 ; if 0.000000 >= R38 then PC := 329
	326	[981]	JMP      	329 ; PC := 329
	327	[982]	GETUPVAL 	R38 U16 ; R38 := U16
	328	[982]	CALL     	R38 1 1 ; R38()
	329	[985]	OP_LOADBOOL	R38 1 0 ; R38 := true
	330	[985]	SETUPVAL 	R38 U17 ; U17 := R38
	331	[985]	CLOSE    	R1 ; SAVE R1,...
	332	[987]	RETURN   	R0 1 ; return 

function #14 <?:989,1018> (47 instructions, 188 bytes at 0000016088DEC2D0)
1 param, 12 slots, 3 upvalues, 0 locals, 10 constants, 0 functions
	1	[990]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[990]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	3	[990]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[990]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[990]	JMP      	7 ; PC := 7
	6	[991]	RETURN   	R0 1 ; return 
	7	[994]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	8	[995]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	9	[995]	MOVE     	R3 R1 ; R3 := R1
	10	[995]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[995]	TEST     	R2 1 ; if R2 then PC := 47
	12	[995]	JMP      	47 ; PC := 47
	13	[995]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0xf2deaf69]
	14	[995]	GETGLOBAL	R4 K4 ; R4 := gLotusAttractModeGameRulesType
	15	[995]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[995]	TEST     	R2 0 ; if not R2 then PC := 47
	17	[995]	JMP      	47 ; PC := 47
	18	[997]	GETGLOBAL	R2 K5 ; R2 := 0xe7f2b02f
	19	[997]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x6d0aa187]
	20	[997]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[1000]	LOADNIL  	R3 R3 ; R3 := nil
	22	[1001]	LOADK    	R4 := 1.000000
	23	[1001]	LEN      	R5 R2 ; R5 := # R2
	24	[1001]	LOADK    	R6 := 1.000000
	25	[1001]	FORPREP  	R4 46 ; R4 -= R6; PC := 46
	26	[1002]	GETTABLE 	R8 R2 R7 ; R8 := R2[R7]
	27	[1002]	GETTABLE 	R8 R8 K7 ; R8 := R8["name"]
	28	[1002]	EQ       	0 R8 R0 ; if R8 ~= R0 then PC := 46
	29	[1002]	JMP      	46 ; PC := 46
	30	[1003]	GETTABLE 	R3 R2 R7 ; R3 := R2[R7]
	31	[1008]	GETUPVAL 	R8 U0 ; R8 := U0
	32	[1008]	MOVE     	R9 R3 ; R9 := R3
	33	[1008]	CALL     	R8 2 2 ; R8 := R8(R9)
	34	[1008]	TEST     	R8 0 ; if not R8 then PC := 45
	35	[1008]	JMP      	45 ; PC := 45
	36	[1009]	GETUPVAL 	R8 U1 ; R8 := U1
	37	[1009]	MOVE     	R9 R3 ; R9 := R3
	38	[1009]	OP_LOADBOOL	R10 0 0 ; R10 := false
	39	[1009]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	40	[1010]	GETGLOBAL	R9 K8 ; R9 := 0x33bdd652
	41	[1010]	GETTABLE 	R9 R9 K9 ; R9 := R9[0x23d5322f]
	42	[1010]	GETUPVAL 	R10 U2 ; R10 := U2
	43	[1010]	MOVE     	R11 R8 ; R11 := R8
	44	[1010]	CALL     	R9 3 1 ; R9(R10,R11)
	45	[1013]	RETURN   	R0 1 ; return 
	46	[1001]	FORLOOP  	R4 26 ; R4 += R6; if R4 <= R5 then begin PC := 26; R7 := R4 end
	47	[1018]	RETURN   	R0 1 ; return 

function #15 <?:1020,1037> (56 instructions, 224 bytes at 00000160997DA0A0)
1 param, 9 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[1021]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1021]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	3	[1021]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1021]	TEST     	R1 1 ; if R1 then PC := 11
	5	[1021]	JMP      	11 ; PC := 11
	6	[1021]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[1021]	MOVE     	R2 R0 ; R2 := R0
	8	[1021]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[1021]	TEST     	R1 0 ; if not R1 then PC := 12
	10	[1021]	JMP      	12 ; PC := 12
	11	[1022]	RETURN   	R0 1 ; return 
	12	[1025]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	13	[1026]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	14	[1026]	MOVE     	R3 R1 ; R3 := R1
	15	[1026]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[1026]	TEST     	R2 1 ; if R2 then PC := 56
	17	[1026]	JMP      	56 ; PC := 56
	18	[1026]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0xf2deaf69]
	19	[1026]	GETGLOBAL	R4 K4 ; R4 := gLotusAttractModeGameRulesType
	20	[1026]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	21	[1026]	TEST     	R2 0 ; if not R2 then PC := 56
	22	[1026]	JMP      	56 ; PC := 56
	23	[1029]	LOADK    	R2 := 1.000000
	24	[1029]	GETUPVAL 	R3 U0 ; R3 := U0
	25	[1029]	LEN      	R3 R3 ; R3 := # R3
	26	[1029]	LOADK    	R4 := 1.000000
	27	[1029]	FORPREP  	R2 55 ; R2 -= R4; PC := 55
	28	[1030]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	29	[1030]	GETUPVAL 	R7 U0 ; R7 := U0
	30	[1030]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	31	[1030]	CALL     	R6 2 2 ; R6 := R6(R7)
	32	[1030]	TEST     	R6 1 ; if R6 then PC := 55
	33	[1030]	JMP      	55 ; PC := 55
	34	[1030]	GETUPVAL 	R6 U0 ; R6 := U0
	35	[1030]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	36	[1030]	GETTABLE 	R6 R6 K5 ; R6 := R6["isLocal"]
	37	[1030]	TEST     	R6 1 ; if R6 then PC := 55
	38	[1030]	JMP      	55 ; PC := 55
	39	[1030]	GETTABLE 	R6 R0 K6 ; R6 := R0["name"]
	40	[1030]	GETUPVAL 	R7 U0 ; R7 := U0
	41	[1030]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	42	[1030]	GETTABLE 	R7 R7 K6 ; R7 := R7["name"]
	43	[1030]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 55
	44	[1030]	JMP      	55 ; PC := 55
	45	[1031]	GETUPVAL 	R6 U1 ; R6 := U1
	46	[1031]	GETUPVAL 	R7 U0 ; R7 := U0
	47	[1031]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	48	[1031]	CALL     	R6 2 1 ; R6(R7)
	49	[1032]	GETGLOBAL	R6 K7 ; R6 := 0x33bdd652
	50	[1032]	GETTABLE 	R6 R6 K8 ; R6 := R6[0x9c1f3b5a]
	51	[1032]	GETUPVAL 	R7 U0 ; R7 := U0
	52	[1032]	MOVE     	R8 R5 ; R8 := R5
	53	[1032]	CALL     	R6 3 1 ; R6(R7,R8)
	54	[1033]	JMP      	56 ; PC := 56
	55	[1029]	FORLOOP  	R2 28 ; R2 += R4; if R2 <= R3 then begin PC := 28; R5 := R2 end
	56	[1037]	RETURN   	R0 1 ; return 

function #16 <?:1039,1053> (30 instructions, 120 bytes at 00000160997DA3B0)
0 params, 7 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[1040]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1040]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	3	[1040]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1040]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[1040]	JMP      	7 ; PC := 7
	6	[1041]	RETURN   	R0 1 ; return 
	7	[1044]	GETGLOBAL	R0 K2 ; R0 := 0xbe190284
	8	[1045]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	9	[1045]	MOVE     	R2 R0 ; R2 := R0
	10	[1045]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[1045]	TEST     	R1 1 ; if R1 then PC := 30
	12	[1045]	JMP      	30 ; PC := 30
	13	[1045]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xf2deaf69]
	14	[1045]	GETGLOBAL	R3 K4 ; R3 := gLotusAttractModeGameRulesType
	15	[1045]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	16	[1045]	TEST     	R1 0 ; if not R1 then PC := 30
	17	[1045]	JMP      	30 ; PC := 30
	18	[1048]	LOADK    	R1 := 1.000000
	19	[1048]	GETUPVAL 	R2 U0 ; R2 := U0
	20	[1048]	LEN      	R2 R2 ; R2 := # R2
	21	[1048]	LOADK    	R3 := 1.000000
	22	[1048]	FORPREP  	R1 27 ; R1 -= R3; PC := 27
	23	[1049]	GETUPVAL 	R5 U1 ; R5 := U1
	24	[1049]	GETUPVAL 	R6 U0 ; R6 := U0
	25	[1049]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	26	[1049]	CALL     	R5 2 1 ; R5(R6)
	27	[1048]	FORLOOP  	R1 23 ; R1 += R3; if R1 <= R2 then begin PC := 23; R4 := R1 end
	28	[1051]	NEWTABLE 	R5 0 0 ; R5 := {}
	29	[1051]	SETUPVAL 	R5 U0 ; U0 := R5
	30	[1053]	RETURN   	R0 1 ; return 

function #17 <?:1055,1089> (50 instructions, 200 bytes at 00000160997DA5C0)
0 params, 14 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[1059]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1059]	GETGLOBAL	R1 K1 ; R1 := 0x89326c93
	3	[1059]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1059]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[1059]	JMP      	7 ; PC := 7
	6	[1060]	RETURN   	R0 1 ; return 
	7	[1063]	GETGLOBAL	R0 K2 ; R0 := 0xbe190284
	8	[1064]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	9	[1064]	MOVE     	R2 R0 ; R2 := R0
	10	[1064]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[1064]	TEST     	R1 1 ; if R1 then PC := 50
	12	[1064]	JMP      	50 ; PC := 50
	13	[1064]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xf2deaf69]
	14	[1064]	GETGLOBAL	R3 K4 ; R3 := gLotusAttractModeGameRulesType
	15	[1064]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	16	[1064]	TEST     	R1 0 ; if not R1 then PC := 50
	17	[1064]	JMP      	50 ; PC := 50
	18	[1066]	GETGLOBAL	R1 K5 ; R1 := 0xe7f2b02f
	19	[1066]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x6d0aa187]
	20	[1066]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[1069]	GETUPVAL 	R2 U0 ; R2 := U0
	22	[1069]	LEN      	R2 R2 ; R2 := # R2
	23	[1069]	LOADK    	R3 := 1.000000
	24	[1069]	LOADK    	R4 := -1.000000
	25	[1069]	FORPREP  	R2 49 ; R2 -= R4; PC := 49
	26	[1070]	GETUPVAL 	R6 U0 ; R6 := U0
	27	[1070]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	28	[1071]	GETTABLE 	R7 R6 K7 ; R7 := R6["isLocal"]
	29	[1071]	TEST     	R7 1 ; if R7 then PC := 49
	30	[1071]	JMP      	49 ; PC := 49
	31	[1072]	OP_LOADBOOL	R7 0 0 ; R7 := false
	32	[1073]	LOADK    	R8 := 1.000000
	33	[1073]	LEN      	R9 R1 ; R9 := # R1
	34	[1073]	LOADK    	R10 := 1.000000
	35	[1073]	FORPREP  	R8 43 ; R8 -= R10; PC := 43
	36	[1074]	GETTABLE 	R12 R1 R11 ; R12 := R1[R11]
	37	[1074]	GETTABLE 	R12 R12 K8 ; R12 := R12["name"]
	38	[1074]	GETTABLE 	R13 R6 K8 ; R13 := R6["name"]
	39	[1074]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 43
	40	[1074]	JMP      	43 ; PC := 43
	41	[1076]	OP_LOADBOOL	R7 1 0 ; R7 := true
	42	[1077]	JMP      	44 ; PC := 44
	43	[1073]	FORLOOP  	R8 36 ; R8 += R10; if R8 <= R9 then begin PC := 36; R11 := R8 end
	44	[1082]	TEST     	R7 1 ; if R7 then PC := 49
	45	[1082]	JMP      	49 ; PC := 49
	46	[1083]	GETUPVAL 	R12 U1 ; R12 := U1
	47	[1083]	MOVE     	R13 R6 ; R13 := R6
	48	[1083]	CALL     	R12 2 1 ; R12(R13)
	49	[1069]	FORLOOP  	R2 26 ; R2 += R4; if R2 <= R3 then begin PC := 26; R5 := R2 end
	50	[1089]	RETURN   	R0 1 ; return 

function #18 <?:1090,1092> (3 instructions, 12 bytes at 00000160997DA8B0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1091]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1091]	CALL     	R0 1 1 ; R0()
	3	[1092]	RETURN   	R0 1 ; return 

function #19 <?:1094,1096> (1 instruction, 4 bytes at 00000160997DA980)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[1096]	RETURN   	R0 1 ; return 

function #20 <?:1098,1244> (331 instructions, 1324 bytes at 00000160997DAA50)
1 param, 39 slots, 12 upvalues, 0 locals, 40 constants, 1 function
	1	[1099]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1099]	GETGLOBAL	R2 K1 ; R2 := 0x89326c93
	3	[1099]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1099]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[1099]	JMP      	7 ; PC := 7
	6	[1100]	RETURN   	R0 1 ; return 
	7	[1103]	GETGLOBAL	R1 K2 ; R1 := 0xbe190284
	8	[1104]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	9	[1104]	MOVE     	R3 R1 ; R3 := R1
	10	[1104]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[1104]	TEST     	R2 1 ; if R2 then PC := 331
	12	[1104]	JMP      	331 ; PC := 331
	13	[1104]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0xf2deaf69]
	14	[1104]	GETGLOBAL	R4 K4 ; R4 := gLotusAttractModeGameRulesType
	15	[1104]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[1104]	TEST     	R2 0 ; if not R2 then PC := 331
	17	[1104]	JMP      	331 ; PC := 331
	18	[1108]	GETUPVAL 	R2 U0 ; R2 := U0
	19	[1108]	TEST     	R2 1 ; if R2 then PC := 24
	20	[1108]	JMP      	24 ; PC := 24
	21	[1109]	GETUPVAL 	R2 U1 ; R2 := U1
	22	[1109]	CALL     	R2 1 1 ; R2()
	23	[1110]	RETURN   	R0 1 ; return 
	24	[1113]	GETUPVAL 	R2 U2 ; R2 := U2
	25	[1113]	CALL     	R2 1 1 ; R2()
	26	[1116]	GETUPVAL 	R2 U3 ; R2 := U3
	27	[1116]	LEN      	R2 R2 ; R2 := # R2
	28	[1116]	LOADK    	R3 := 1.000000
	29	[1116]	LOADK    	R4 := -1.000000
	30	[1116]	FORPREP  	R2 289 ; R2 -= R4; PC := 289
	31	[1117]	GETUPVAL 	R6 U3 ; R6 := U3
	32	[1117]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	33	[1120]	GETTABLE 	R7 R6 K5 ; R7 := R6["timeInKeyframe"]
	34	[1120]	EQ       	0 R7 K6 ; if R7 ~= 0.000000 then PC := 46
	35	[1120]	JMP      	46 ; PC := 46
	36	[1121]	GETTABLE 	R7 R6 K7 ; R7 := R6["keyframes"]
	37	[1121]	GETTABLE 	R7 R7 K8 ; R7 := R7[1.000000]
	38	[1121]	GETTABLE 	R7 R7 K9 ; R7 := R7["onEnter"]
	39	[1121]	TEST     	R7 0 ; if not R7 then PC := 46
	40	[1121]	JMP      	46 ; PC := 46
	41	[1122]	GETTABLE 	R7 R6 K7 ; R7 := R6["keyframes"]
	42	[1122]	GETTABLE 	R7 R7 K8 ; R7 := R7[1.000000]
	43	[1122]	GETTABLE 	R7 R7 K10 ; R7 := R7[0x1bc6f7c3]
	44	[1122]	GETTABLE 	R8 R6 K11 ; R8 := R6["member"]
	45	[1122]	CALL     	R7 2 1 ; R7(R8)
	46	[1127]	GETTABLE 	R7 R6 K5 ; R7 := R6["timeInKeyframe"]
	47	[1128]	GETTABLE 	R8 R6 K5 ; R8 := R6["timeInKeyframe"]
	48	[1128]	ADD      	R8 R8 R0 ; R8 := R8 + R0
	49	[1128]	SETTABLE 	R6 K5 R8 ; R6["timeInKeyframe"] := R8
	50	[1129]	GETTABLE 	R8 R6 K5 ; R8 := R6["timeInKeyframe"]
	51	[1129]	GETTABLE 	R9 R6 K7 ; R9 := R6["keyframes"]
	52	[1129]	GETTABLE 	R10 R6 K12 ; R10 := R6["keyframeIndex"]
	53	[1129]	GETTABLE 	R9 R9 R10 ; R9 := R9[R10]
	54	[1129]	GETTABLE 	R9 R9 K13 ; R9 := R9["time"]
	55	[1129]	DIV      	R8 R8 R9 ; R8 := R8 / R9
	56	[1131]	LE       	0 K8 R8 ; if 1.000000 > R8 then PC := 222
	57	[1131]	JMP      	222 ; PC := 222
	58	[1134]	GETTABLE 	R9 R6 K7 ; R9 := R6["keyframes"]
	59	[1134]	GETTABLE 	R10 R6 K12 ; R10 := R6["keyframeIndex"]
	60	[1134]	GETTABLE 	R9 R9 R10 ; R9 := R9[R10]
	61	[1135]	GETTABLE 	R10 R6 K12 ; R10 := R6["keyframeIndex"]
	62	[1135]	ADD      	R10 R10 K8 ; R10 := R10 + 1.000000
	63	[1135]	GETTABLE 	R11 R6 K7 ; R11 := R6["keyframes"]
	64	[1135]	LEN      	R11 R11 ; R11 := # R11
	65	[1135]	LT       	0 R11 R10 ; if R11 >= R10 then PC := 138
	66	[1135]	JMP      	138 ; PC := 138
	67	[1139]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	68	[1139]	GETTABLE 	R11 R6 K14 ; R11 := R6["ship"]
	69	[1139]	CALL     	R10 2 2 ; R10 := R10(R11)
	70	[1139]	TEST     	R10 1 ; if R10 then PC := 125
	71	[1139]	JMP      	125 ; PC := 125
	72	[1140]	GETTABLE 	R10 R6 K15 ; R10 := R6["animType"]
	73	[1140]	GETUPVAL 	R11 U4 ; R11 := U4
	74	[1140]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 106
	75	[1140]	JMP      	106 ; PC := 106
	76	[1142]	GETTABLE 	R10 R6 K16 ; R10 := R6["initialPosition"]
	77	[1142]	GETTABLE 	R11 R9 K17 ; R11 := R9["velocity"]
	78	[1142]	GETTABLE 	R12 R9 K13 ; R12 := R9["time"]
	79	[1142]	MUL      	R11 R11 R12 ; R11 := R11 * R12
	80	[1142]	ADD      	R10 R10 R11 ; R10 := R10 + R11
	81	[1142]	GETTABLE 	R11 R9 K18 ; R11 := R9["acceleration"]
	82	[1142]	MUL      	R11 R11 K19 ; R11 := R11 * 0.500000
	83	[1142]	GETTABLE 	R12 R9 K13 ; R12 := R9["time"]
	84	[1142]	MUL      	R11 R11 R12 ; R11 := R11 * R12
	85	[1142]	GETTABLE 	R12 R9 K13 ; R12 := R9["time"]
	86	[1142]	MUL      	R11 R11 R12 ; R11 := R11 * R12
	87	[1142]	ADD      	R10 R10 R11 ; R10 := R10 + R11
	88	[1143]	GETTABLE 	R11 R9 K20 ; R11 := R9["rotation"]
	89	[1144]	GETGLOBAL	R12 K21 ; R12 := 0xae2294fa
	90	[1144]	GETUPVAL 	R13 U5 ; R13 := U5
	91	[1144]	SUB      	R13 R13 R10 ; R13 := R13 - R10
	92	[1144]	CALL     	R12 2 2 ; R12 := R12(R13)
	93	[1145]	GETUPVAL 	R13 U6 ; R13 := U6
	94	[1145]	MOVE     	R14 R12 ; R14 := R12
	95	[1145]	CALL     	R13 2 2 ; R13 := R13(R14)
	96	[1146]	GETTABLE 	R14 R6 K14 ; R14 := R6["ship"]
	97	[1146]	SELF     	R14 R14 K22 ; R15 := R14; R14 := R14[0x589ef1c1]
	98	[1146]	MOVE     	R16 R10 ; R16 := R10
	99	[1146]	MOVE     	R17 R11 ; R17 := R11
	100	[1146]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	101	[1147]	GETTABLE 	R14 R6 K14 ; R14 := R6["ship"]
	102	[1147]	SELF     	R14 R14 K23 ; R15 := R14; R14 := R14[0x2d9ba74f]
	103	[1147]	MOVE     	R16 R13 ; R16 := R13
	104	[1147]	CALL     	R14 3 1 ; R14(R15,R16)
	105	[1147]	JMP      	125 ; PC := 125
	106	[1150]	GETGLOBAL	R14 K24 ; R14 := 0xa421af95
	107	[1150]	LOADK    	R15 := 1.000000
	108	[1150]	LOADK    	R16 := 1.000000
	109	[1150]	LOADK    	R17 := 1.000000
	110	[1150]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	111	[1150]	GETTABLE 	R15 R9 K25 ; R15 := R9["posStrength"]
	112	[1150]	MUL      	R14 R14 R15 ; R14 := R14 * R15
	113	[1151]	GETGLOBAL	R15 K24 ; R15 := 0xa421af95
	114	[1151]	LOADK    	R16 := 1.000000
	115	[1151]	LOADK    	R17 := 1.000000
	116	[1151]	LOADK    	R18 := 1.000000
	117	[1151]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	118	[1151]	GETTABLE 	R16 R9 K26 ; R16 := R9["rotStrength"]
	119	[1151]	MUL      	R15 R15 R16 ; R15 := R15 * R16
	120	[1152]	GETTABLE 	R16 R6 K14 ; R16 := R6["ship"]
	121	[1152]	SELF     	R16 R16 K27 ; R17 := R16; R16 := R16[0x4c7e81e6]
	122	[1152]	MOVE     	R18 R14 ; R18 := R14
	123	[1152]	MOVE     	R19 R15 ; R19 := R15
	124	[1152]	CALL     	R16 4 1 ; R16(R17,R18,R19)
	125	[1157]	GETGLOBAL	R16 K28 ; R16 := 0x33bdd652
	126	[1157]	GETTABLE 	R16 R16 K29 ; R16 := R16[0x9c1f3b5a]
	127	[1157]	GETUPVAL 	R17 U3 ; R17 := U3
	128	[1157]	MOVE     	R18 R5 ; R18 := R5
	129	[1157]	CALL     	R16 3 1 ; R16(R17,R18)
	130	[1158]	GETTABLE 	R16 R6 K11 ; R16 := R6["member"]
	131	[1158]	SETTABLE 	R16 K30 K31 ; R16["animation"] := nil
	132	[1160]	GETTABLE 	R16 R6 K32 ; R16 := R6["callback"]
	133	[1160]	EQ       	1 R16 K31 ; if R16 == nil then PC := 137
	134	[1160]	JMP      	137 ; PC := 137
	135	[1161]	GETTABLE 	R16 R6 K33 ; R16 := R6[0x56348e81]
	136	[1161]	CALL     	R16 1 1 ; R16()
	137	[1163]	RETURN   	R0 1 ; return 
	138	[1167]	GETTABLE 	R16 R6 K7 ; R16 := R6["keyframes"]
	139	[1167]	GETTABLE 	R17 R6 K12 ; R17 := R6["keyframeIndex"]
	140	[1167]	GETTABLE 	R16 R16 R17 ; R16 := R16[R17]
	141	[1167]	GETTABLE 	R16 R16 K13 ; R16 := R16["time"]
	142	[1167]	SUB      	R16 R16 R7 ; R16 := R16 - R7
	143	[1168]	SUB      	R0 R0 R16 ; R0 := R0 - R16
	144	[1171]	SETTABLE 	R6 K5 R0 ; R6["timeInKeyframe"] := R0
	145	[1172]	LOADK    	R7 := 0.000000
	146	[1173]	GETTABLE 	R17 R6 K12 ; R17 := R6["keyframeIndex"]
	147	[1173]	ADD      	R17 R17 K8 ; R17 := R17 + 1.000000
	148	[1173]	SETTABLE 	R6 K12 R17 ; R6["keyframeIndex"] := R17
	149	[1174]	GETTABLE 	R17 R6 K5 ; R17 := R6["timeInKeyframe"]
	150	[1174]	GETTABLE 	R18 R6 K7 ; R18 := R6["keyframes"]
	151	[1174]	GETTABLE 	R19 R6 K12 ; R19 := R6["keyframeIndex"]
	152	[1174]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	153	[1174]	GETTABLE 	R18 R18 K13 ; R18 := R18["time"]
	154	[1174]	DIV      	R8 R17 R18 ; R8 := R17 / R18
	155	[1177]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	156	[1177]	GETTABLE 	R18 R6 K14 ; R18 := R6["ship"]
	157	[1177]	CALL     	R17 2 2 ; R17 := R17(R18)
	158	[1177]	TEST     	R17 1 ; if R17 then PC := 209
	159	[1177]	JMP      	209 ; PC := 209
	160	[1178]	GETTABLE 	R17 R6 K15 ; R17 := R6["animType"]
	161	[1178]	GETUPVAL 	R18 U4 ; R18 := U4
	162	[1178]	EQ       	0 R17 R18 ; if R17 ~= R18 then PC := 190
	163	[1178]	JMP      	190 ; PC := 190
	164	[1180]	GETTABLE 	R17 R6 K16 ; R17 := R6["initialPosition"]
	165	[1180]	GETTABLE 	R18 R9 K17 ; R18 := R9["velocity"]
	166	[1180]	GETTABLE 	R19 R9 K13 ; R19 := R9["time"]
	167	[1180]	MUL      	R18 R18 R19 ; R18 := R18 * R19
	168	[1180]	ADD      	R17 R17 R18 ; R17 := R17 + R18
	169	[1180]	GETTABLE 	R18 R9 K18 ; R18 := R9["acceleration"]
	170	[1180]	MUL      	R18 R18 K19 ; R18 := R18 * 0.500000
	171	[1180]	GETTABLE 	R19 R9 K13 ; R19 := R9["time"]
	172	[1180]	MUL      	R18 R18 R19 ; R18 := R18 * R19
	173	[1180]	GETTABLE 	R19 R9 K13 ; R19 := R9["time"]
	174	[1180]	MUL      	R18 R18 R19 ; R18 := R18 * R19
	175	[1180]	ADD      	R17 R17 R18 ; R17 := R17 + R18
	176	[1180]	SETTABLE 	R6 K16 R17 ; R6["initialPosition"] := R17
	177	[1181]	GETTABLE 	R17 R6 K7 ; R17 := R6["keyframes"]
	178	[1181]	GETTABLE 	R18 R6 K12 ; R18 := R6["keyframeIndex"]
	179	[1181]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	180	[1181]	GETTABLE 	R17 R17 K18 ; R17 := R17["acceleration"]
	181	[1181]	SETTABLE 	R6 K18 R17 ; R6["acceleration"] := R17
	182	[1183]	GETTABLE 	R17 R9 K20 ; R17 := R9["rotation"]
	183	[1183]	SETTABLE 	R6 K34 R17 ; R6["initialRotation"] := R17
	184	[1184]	GETTABLE 	R17 R6 K7 ; R17 := R6["keyframes"]
	185	[1184]	GETTABLE 	R18 R6 K12 ; R18 := R6["keyframeIndex"]
	186	[1184]	GETTABLE 	R17 R17 R18 ; R17 := R17[R18]
	187	[1184]	GETTABLE 	R17 R17 K20 ; R17 := R17["rotation"]
	188	[1184]	SETTABLE 	R6 K35 R17 ; R6["endRotation"] := R17
	189	[1184]	JMP      	209 ; PC := 209
	190	[1187]	GETGLOBAL	R17 K24 ; R17 := 0xa421af95
	191	[1187]	LOADK    	R18 := 1.000000
	192	[1187]	LOADK    	R19 := 1.000000
	193	[1187]	LOADK    	R20 := 1.000000
	194	[1187]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	195	[1187]	GETTABLE 	R18 R9 K25 ; R18 := R9["posStrength"]
	196	[1187]	MUL      	R17 R17 R18 ; R17 := R17 * R18
	197	[1188]	GETGLOBAL	R18 K24 ; R18 := 0xa421af95
	198	[1188]	LOADK    	R19 := 1.000000
	199	[1188]	LOADK    	R20 := 1.000000
	200	[1188]	LOADK    	R21 := 1.000000
	201	[1188]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	202	[1188]	GETTABLE 	R19 R9 K26 ; R19 := R9["rotStrength"]
	203	[1188]	MUL      	R18 R18 R19 ; R18 := R18 * R19
	204	[1189]	GETTABLE 	R19 R6 K14 ; R19 := R6["ship"]
	205	[1189]	SELF     	R19 R19 K27 ; R20 := R19; R19 := R19[0x4c7e81e6]
	206	[1189]	MOVE     	R21 R17 ; R21 := R17
	207	[1189]	MOVE     	R22 R18 ; R22 := R18
	208	[1189]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	209	[1194]	GETTABLE 	R19 R6 K7 ; R19 := R6["keyframes"]
	210	[1194]	GETTABLE 	R20 R6 K12 ; R20 := R6["keyframeIndex"]
	211	[1194]	GETTABLE 	R19 R19 R20 ; R19 := R19[R20]
	212	[1194]	GETTABLE 	R19 R19 K9 ; R19 := R19["onEnter"]
	213	[1194]	TEST     	R19 0 ; if not R19 then PC := 56
	214	[1194]	JMP      	56 ; PC := 56
	215	[1195]	GETTABLE 	R19 R6 K7 ; R19 := R6["keyframes"]
	216	[1195]	GETTABLE 	R20 R6 K12 ; R20 := R6["keyframeIndex"]
	217	[1195]	GETTABLE 	R19 R19 R20 ; R19 := R19[R20]
	218	[1195]	GETTABLE 	R19 R19 K10 ; R19 := R19[0x1bc6f7c3]
	219	[1195]	GETTABLE 	R20 R6 K11 ; R20 := R6["member"]
	220	[1195]	CALL     	R19 2 1 ; R19(R20)
	221	[1196]	JMP      	56 ; PC := 56
	222	[1199]	GETTABLE 	R19 R6 K7 ; R19 := R6["keyframes"]
	223	[1199]	GETTABLE 	R20 R6 K12 ; R20 := R6["keyframeIndex"]
	224	[1199]	GETTABLE 	R19 R19 R20 ; R19 := R19[R20]
	225	[1202]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	226	[1202]	GETTABLE 	R21 R6 K14 ; R21 := R6["ship"]
	227	[1202]	CALL     	R20 2 2 ; R20 := R20(R21)
	228	[1202]	TEST     	R20 1 ; if R20 then PC := 289
	229	[1202]	JMP      	289 ; PC := 289
	230	[1203]	GETTABLE 	R20 R6 K15 ; R20 := R6["animType"]
	231	[1203]	GETUPVAL 	R21 U4 ; R21 := U4
	232	[1203]	EQ       	0 R20 R21 ; if R20 ~= R21 then PC := 268
	233	[1203]	JMP      	268 ; PC := 268
	234	[1205]	GETTABLE 	R20 R6 K16 ; R20 := R6["initialPosition"]
	235	[1205]	GETTABLE 	R21 R19 K17 ; R21 := R19["velocity"]
	236	[1205]	GETTABLE 	R22 R6 K5 ; R22 := R6["timeInKeyframe"]
	237	[1205]	MUL      	R21 R21 R22 ; R21 := R21 * R22
	238	[1205]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	239	[1205]	GETTABLE 	R21 R19 K18 ; R21 := R19["acceleration"]
	240	[1205]	MUL      	R21 R21 K19 ; R21 := R21 * 0.500000
	241	[1205]	GETTABLE 	R22 R6 K5 ; R22 := R6["timeInKeyframe"]
	242	[1205]	MUL      	R21 R21 R22 ; R21 := R21 * R22
	243	[1205]	GETTABLE 	R22 R6 K5 ; R22 := R6["timeInKeyframe"]
	244	[1205]	MUL      	R21 R21 R22 ; R21 := R21 * R22
	245	[1205]	ADD      	R20 R20 R21 ; R20 := R20 + R21
	246	[1206]	GETGLOBAL	R21 K36 ; R21 := 0x5e223e7d
	247	[1206]	GETTABLE 	R22 R6 K34 ; R22 := R6["initialRotation"]
	248	[1206]	GETTABLE 	R23 R6 K35 ; R23 := R6["endRotation"]
	249	[1206]	MOVE     	R24 R8 ; R24 := R8
	250	[1206]	CALL     	R21 4 2 ; R21 := R21(R22,R23,R24)
	251	[1207]	GETGLOBAL	R22 K21 ; R22 := 0xae2294fa
	252	[1207]	GETUPVAL 	R23 U5 ; R23 := U5
	253	[1207]	SUB      	R23 R23 R20 ; R23 := R23 - R20
	254	[1207]	CALL     	R22 2 2 ; R22 := R22(R23)
	255	[1208]	GETUPVAL 	R23 U6 ; R23 := U6
	256	[1208]	MOVE     	R24 R22 ; R24 := R22
	257	[1208]	CALL     	R23 2 2 ; R23 := R23(R24)
	258	[1209]	GETTABLE 	R24 R6 K14 ; R24 := R6["ship"]
	259	[1209]	SELF     	R24 R24 K22 ; R25 := R24; R24 := R24[0x589ef1c1]
	260	[1209]	MOVE     	R26 R20 ; R26 := R20
	261	[1209]	MOVE     	R27 R21 ; R27 := R21
	262	[1209]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	263	[1210]	GETTABLE 	R24 R6 K14 ; R24 := R6["ship"]
	264	[1210]	SELF     	R24 R24 K23 ; R25 := R24; R24 := R24[0x2d9ba74f]
	265	[1210]	MOVE     	R26 R23 ; R26 := R23
	266	[1210]	CALL     	R24 3 1 ; R24(R25,R26)
	267	[1210]	JMP      	289 ; PC := 289
	268	[1213]	GETGLOBAL	R24 K24 ; R24 := 0xa421af95
	269	[1213]	LOADK    	R25 := 1.000000
	270	[1213]	LOADK    	R26 := 1.000000
	271	[1213]	LOADK    	R27 := 1.000000
	272	[1213]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	273	[1213]	GETTABLE 	R25 R19 K25 ; R25 := R19["posStrength"]
	274	[1213]	MUL      	R24 R24 R25 ; R24 := R24 * R25
	275	[1213]	MUL      	R24 R24 R8 ; R24 := R24 * R8
	276	[1214]	GETGLOBAL	R25 K24 ; R25 := 0xa421af95
	277	[1214]	LOADK    	R26 := 1.000000
	278	[1214]	LOADK    	R27 := 1.000000
	279	[1214]	LOADK    	R28 := 1.000000
	280	[1214]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	281	[1214]	GETTABLE 	R26 R19 K26 ; R26 := R19["rotStrength"]
	282	[1214]	MUL      	R25 R25 R26 ; R25 := R25 * R26
	283	[1214]	MUL      	R25 R25 R8 ; R25 := R25 * R8
	284	[1215]	GETTABLE 	R26 R6 K14 ; R26 := R6["ship"]
	285	[1215]	SELF     	R26 R26 K27 ; R27 := R26; R26 := R26[0x4c7e81e6]
	286	[1215]	MOVE     	R28 R24 ; R28 := R24
	287	[1215]	MOVE     	R29 R25 ; R29 := R25
	288	[1215]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	289	[1116]	FORLOOP  	R2 31 ; R2 += R4; if R2 <= R3 then begin PC := 31; R5 := R2 end
	290	[1223]	GETUPVAL 	R26 U7 ; R26 := U7
	291	[1223]	LEN      	R26 R26 ; R26 := # R26
	292	[1223]	LT       	0 K6 R26 ; if 0.000000 >= R26 then PC := 331
	293	[1223]	JMP      	331 ; PC := 331
	294	[1224]	LOADK    	R26 := 1.000000
	295	[1224]	GETUPVAL 	R27 U7 ; R27 := U7
	296	[1224]	LEN      	R27 R27 ; R27 := # R27
	297	[1224]	LOADK    	R28 := 1.000000
	298	[1224]	FORPREP  	R26 330 ; R26 -= R28; PC := 330
	299	[1225]	GETUPVAL 	R30 U7 ; R30 := U7
	300	[1225]	GETTABLE 	R30 R30 R29 ; R30 := R30[R29]
	301	[1227]	GETTABLE 	R31 R30 K37 ; R31 := R30["active"]
	302	[1227]	TEST     	R31 0 ; if not R31 then PC := 329
	303	[1227]	JMP      	329 ; PC := 329
	304	[1227]	GETTABLE 	R31 R30 K38 ; R31 := R30["timeUntilFlyOut"]
	305	[1227]	LT       	0 K6 R31 ; if 0.000000 >= R31 then PC := 329
	306	[1227]	JMP      	329 ; PC := 329
	307	[1228]	GETTABLE 	R31 R30 K38 ; R31 := R30["timeUntilFlyOut"]
	308	[1228]	SUB      	R31 R31 R0 ; R31 := R31 - R0
	309	[1228]	SETTABLE 	R30 K38 R31 ; R30["timeUntilFlyOut"] := R31
	310	[1229]	GETTABLE 	R31 R30 K38 ; R31 := R30["timeUntilFlyOut"]
	311	[1229]	LE       	0 R31 K6 ; if R31 > 0.000000 then PC := 329
	312	[1229]	JMP      	329 ; PC := 329
	313	[1231]	GETUPVAL 	R31 U8 ; R31 := U8
	314	[1231]	MOVE     	R32 R30 ; R32 := R30
	315	[1231]	GETUPVAL 	R33 U9 ; R33 := U9
	316	[1231]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	317	[1232]	GETTABLE 	R32 R30 K14 ; R32 := R30["ship"]
	318	[1233]	GETUPVAL 	R33 U10 ; R33 := U10
	319	[1233]	GETTABLE 	R34 R30 K39 ; R34 := R30["name"]
	320	[1233]	MOVE     	R35 R30 ; R35 := R30
	321	[1233]	MOVE     	R36 R31 ; R36 := R31
	322	[1233]	GETUPVAL 	R37 U4 ; R37 := U4
	323	[1237]	CLOSURE  	R38 0 ; R38 := closure(Function #1)
	324	[1237]	MOVE     	R0 R30 ; R0 := R30
	325	[1237]	MOVE     	R0 R32 ; R0 := R32
	326	[1237]	GETUPVAL 	R0 U11 ; R0 := U11
	327	[1233]	CALL     	R33 6 1 ; R33(R34,R35,R36,R37,R38)
	328	[1237]	CLOSE    	R31 ; SAVE R31,...
	329	[1240]	CLOSE    	R30 ; SAVE R30,...
	330	[1224]	FORLOOP  	R26 299 ; R26 += R28; if R26 <= R27 then begin PC := 299; R29 := R26 end
	331	[1244]	RETURN   	R0 1 ; return 
