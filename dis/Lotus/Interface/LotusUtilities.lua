; This file has been disassembled using luadec 2.0.2 by sztupy (modified by Reversive)

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  168

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xaeabecda
  2 [-]: VARARG    R1 R2        ; R1 := R2 := ...
  3 [-]: GETGLOBAL R2 K1        ; R2 := package
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["seeall"]
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: NEWTABLE  R0 21 0      ; R0 := {}
  7 [-]: LOADK     R1 K3        ; R1 := "DT_IMPACT"
  8 [-]: LOADK     R2 K4        ; R2 := "DT_PUNCTURE"
  9 [-]: LOADK     R3 K5        ; R3 := "DT_SLASH"
 10 [-]: LOADK     R4 K6        ; R4 := "DT_FIRE"
 11 [-]: LOADK     R5 K7        ; R5 := "DT_FREEZE"
 12 [-]: LOADK     R6 K8        ; R6 := "DT_ELECTRICITY"
 13 [-]: LOADK     R7 K9        ; R7 := "DT_POISON"
 14 [-]: LOADK     R8 K10       ; R8 := "DT_EXPLOSION"
 15 [-]: LOADK     R9 K11       ; R9 := "DT_RADIATION"
 16 [-]: LOADK     R10 K12      ; R10 := "DT_GAS"
 17 [-]: LOADK     R11 K13      ; R11 := "DT_MAGNETIC"
 18 [-]: LOADK     R12 K14      ; R12 := "DT_VIRAL"
 19 [-]: LOADK     R13 K15      ; R13 := "DT_CORROSIVE"
 20 [-]: LOADK     R14 K16      ; R14 := "DT_RADIANT"
 21 [-]: LOADK     R15 K17      ; R15 := "DT_SENTIENT"
 22 [-]: LOADK     R16 K18      ; R16 := "DT_CINEMATIC"
 23 [-]: LOADK     R17 K19      ; R17 := "DT_SHIELD_DRAIN"
 24 [-]: LOADK     R18 K20      ; R18 := "DT_HEALTH_DRAIN"
 25 [-]: LOADK     R19 K21      ; R19 := "DT_ENERGY_DRAIN"
 26 [-]: LOADK     R20 K22      ; R20 := "DT_FINISHER"
 27 [-]: LOADK     R21 K23      ; R21 := "DT_SUICIDE"
 28 [-]: LOADK     R22 K24      ; R22 := "DT_PHYSICAL"
 29 [-]: LOADK     R23 K25      ; R23 := "DT_INVALID"
 30 [-]: LOADK     R24 K26      ; R24 := "DT_BASE_ELEMENTAL"
 31 [-]: LOADK     R25 K27      ; R25 := "DT_COMPOUND_ELEMENTAL"
 32 [-]: LOADK     R26 K28      ; R26 := "DT_ANY"
 33 [-]: SETLIST   R0 26 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 26
 34 [-]: NEWTABLE  R1 23 0      ; R1 := {}
 35 [-]: LOADK     R2 K29       ; R2 := "PT_KNOCKBACK"
 36 [-]: LOADK     R3 K30       ; R3 := "PT_FRAILTY"
 37 [-]: LOADK     R4 K31       ; R4 := "PT_BLEEDING"
 38 [-]: LOADK     R5 K32       ; R5 := "PT_IMMOLATION"
 39 [-]: LOADK     R6 K33       ; R6 := "PT_CHILLED"
 40 [-]: LOADK     R7 K34       ; R7 := "PT_ELECTROCUTION"
 41 [-]: LOADK     R8 K35       ; R8 := "PT_POISONED"
 42 [-]: LOADK     R9 K36       ; R9 := "PT_FLASHBANG"
 43 [-]: LOADK     R10 K37      ; R10 := "PT_RAD_TOX"
 44 [-]: LOADK     R11 K38      ; R11 := "PT_ASPHYXIATION"
 45 [-]: LOADK     R12 K39      ; R12 := "PT_MAGNETIZED"
 46 [-]: LOADK     R13 K40      ; R13 := "PT_INFECTED"
 47 [-]: LOADK     R14 K41      ; R14 := "PT_CAUSTIC_BURN"
 48 [-]: LOADK     R15 K42      ; R15 := "PT_RADIANT"
 49 [-]: LOADK     R16 K43      ; R16 := "PT_SENTIENT"
 50 [-]: LOADK     R17 K44      ; R17 := "PT_MICROWAVE_BURN"
 51 [-]: LOADK     R18 K45      ; R18 := "PT_STAGGERED"
 52 [-]: LOADK     R19 K46      ; R19 := "PT_BIG_STAGGER"
 53 [-]: LOADK     R20 K47      ; R20 := "PT_STUNNED"
 54 [-]: LOADK     R21 K48      ; R21 := "PT_KNOCKED_DOWN"
 55 [-]: LOADK     R22 K49      ; R22 := "PT_RAGDOLL"
 56 [-]: LOADK     R23 K50      ; R23 := "PT_PARRIED"
 57 [-]: LOADK     R24 K51      ; R24 := "PT_DISARMED"
 58 [-]: LOADK     R25 K52      ; R25 := "PT_SILENCED"
 59 [-]: LOADK     R26 K53      ; R26 := "PT_ROOTS"
 60 [-]: LOADK     R27 K54      ; R27 := "PT_VOID"
 61 [-]: LOADK     R28 K55      ; R28 := "PT_GLUE"
 62 [-]: LOADK     R29 K56      ; R29 := "PT_SLEEP"
 63 [-]: LOADK     R30 K57      ; R30 := "PT_LIFT_HIT"
 64 [-]: LOADK     R31 K58      ; R31 := "MAX_ProcType"
 65 [-]: SETLIST   R1 30 1      ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 30
 66 [-]: GETGLOBAL R2 K59       ; R2 := 0x60cce7b4
 67 [-]: LEN       R3 R0        ; R3 := # R0
 68 [-]: EQ        1 R3 K61     ; if R3 == 26.000000 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 71
 71 [-]: LOADBOOL  R3 1 0       ; R3 := true
 72 [-]: CALL      R2 2 1       ; R2(R3)
 73 [-]: GETGLOBAL R2 K59       ; R2 := 0x60cce7b4
 74 [-]: LEN       R3 R1        ; R3 := # R1
 75 [-]: EQ        1 R3 K62     ; if R3 == 30.000000 then PC := 78
 76 [-]: JMP       78           ; PC := 78
 77 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 78
 78 [-]: LOADBOOL  R3 1 0       ; R3 := true
 79 [-]: CALL      R2 2 1       ; R2(R3)
 80 [-]: GETGLOBAL R2 K63       ; R2 := 0x7ed0a956
 81 [-]: LOADK     R3 K64       ; R3 := "/Lotus/Types/StoreItems/SuitCustomizations/ColourPickerDefaultsItemA"
 82 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 83 [-]: GETGLOBAL R3 K63       ; R3 := 0x7ed0a956
 84 [-]: LOADK     R4 K65       ; R4 := "/Lotus/Upgrades/Mods/Fusers/UncommonModFuser"
 85 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 86 [-]: GETGLOBAL R4 K63       ; R4 := 0x7ed0a956
 87 [-]: LOADK     R5 K66       ; R5 := "/Lotus/Upgrades/Mods/Fusers/RareModFuser"
 88 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 89 [-]: GETGLOBAL R5 K63       ; R5 := 0x7ed0a956
 90 [-]: LOADK     R6 K67       ; R6 := "/Lotus/Types/Items/MiscItems/Elitium"
 91 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 92 [-]: GETGLOBAL R6 K63       ; R6 := 0x7ed0a956
 93 [-]: LOADK     R7 K68       ; R7 := "/Lotus/Types/Game/OrokinGoldenMawAvatar"
 94 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 95 [-]: GETGLOBAL R7 K63       ; R7 := 0x7ed0a956
 96 [-]: LOADK     R8 K69       ; R8 := "/Lotus/Types/Items/MiscItems/PhotoboothTile"
 97 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 98 [-]: GETGLOBAL R8 K63       ; R8 := 0x7ed0a956
 99 [-]: LOADK     R9 K70       ; R9 := "/Lotus/Types/Items/ShipFeatureItems/ShipFeatureItem"
100 [-]: CALL      R8 2 2       ; R8 := R8(R9)
101 [-]: GETGLOBAL R9 K63       ; R9 := 0x7ed0a956
102 [-]: LOADK     R10 K71      ; R10 := "/Lotus/Types/Restoratives/LisetBaseAirSupportPower"
103 [-]: CALL      R9 2 2       ; R9 := R9(R10)
104 [-]: GETGLOBAL R10 K63      ; R10 := 0x7ed0a956
105 [-]: LOADK     R11 K72      ; R11 := "/Lotus/Weapons/Tenno/HackingDevices/TnHackingDevice/TnHackingDeviceWeapon"
106 [-]: CALL      R10 2 2      ; R10 := R10(R11)
107 [-]: GETGLOBAL R11 K63      ; R11 := 0x7ed0a956
108 [-]: LOADK     R12 K73      ; R12 := "/Lotus/Powersuits/Wraith/ReaperAvatar"
109 [-]: CALL      R11 2 2      ; R11 := R11(R12)
110 [-]: LOADK     R12 1        ; R12 := 1.000000
111 [-]: SETGLOBAL R12 K74      ; UI_MODE_IN_SPACE_SHIP := R12
112 [-]: LOADK     R12 2        ; R12 := 2.000000
113 [-]: SETGLOBAL R12 K75      ; UI_MODE_IN_SPACE_HUB := R12
114 [-]: LOADK     R12 3        ; R12 := 3.000000
115 [-]: SETGLOBAL R12 K76      ; UI_MODE_IN_DOJO := R12
116 [-]: LOADK     R12 4        ; R12 := 4.000000
117 [-]: SETGLOBAL R12 K77      ; UI_MODE_IN_GAME := R12
118 [-]: LOADK     R12 14       ; R12 := 14.000000
119 [-]: SETGLOBAL R12 K78      ; REGION_ID_DOJO := R12
120 [-]: LOADK     R12 15       ; R12 := 15.000000
121 [-]: SETGLOBAL R12 K79      ; REGION_ID_VOID := R12
122 [-]: LOADK     R12 17       ; R12 := 17.000000
123 [-]: SETGLOBAL R12 K80      ; REGION_ID_DERELICT := R12
124 [-]: LOADK     R12 18       ; R12 := 18.000000
125 [-]: SETGLOBAL R12 K81      ; REGION_ID_MOON := R12
126 [-]: LOADK     R12 19       ; R12 := 19.000000
127 [-]: SETGLOBAL R12 K82      ; REGION_ID_FORTRESS := R12
128 [-]: LOADK     R12 20       ; R12 := 20.000000
129 [-]: SETGLOBAL R12 K83      ; REGION_ID_DARK_SECTOR := R12
130 [-]: LOADK     R12 21       ; R12 := 21.000000
131 [-]: SETGLOBAL R12 K84      ; REGION_ID_DEEP_SPACE := R12
132 [-]: LOADK     R12 22       ; R12 := 22.000000
133 [-]: SETGLOBAL R12 K85      ; REGION_ID_ZARIMAN := R12
134 [-]: LOADK     R12 97       ; R12 := 97.000000
135 [-]: SETGLOBAL R12 K86      ; REGION_ID_DOJO_DUEL := R12
136 [-]: LOADK     R12 98       ; R12 := 98.000000
137 [-]: SETGLOBAL R12 K87      ; REGION_ID_CLAN_DOJO := R12
138 [-]: LOADK     R12 99       ; R12 := 99.000000
139 [-]: SETGLOBAL R12 K88      ; REGION_ID_PVP := R12
140 [-]: LOADK     R12 100      ; R12 := 100.000000
141 [-]: SETGLOBAL R12 K89      ; REGION_ID_PHOTOBOOTH := R12
142 [-]: LOADK     R12 101      ; R12 := 101.000000
143 [-]: SETGLOBAL R12 K90      ; REGION_ID_SIMULACRUM := R12
144 [-]: LOADK     R12 1        ; R12 := 1.000000
145 [-]: SETGLOBAL R12 K91      ; SLIDER := R12
146 [-]: LOADK     R12 2        ; R12 := 2.000000
147 [-]: SETGLOBAL R12 K92      ; CHECKBOX := R12
148 [-]: LOADK     R12 3        ; R12 := 3.000000
149 [-]: SETGLOBAL R12 K93      ; TOGGLE := R12
150 [-]: LOADK     R12 4        ; R12 := 4.000000
151 [-]: SETGLOBAL R12 K94      ; BUTTON := R12
152 [-]: LOADK     R12 5        ; R12 := 5.000000
153 [-]: SETGLOBAL R12 K95      ; TITLE := R12
154 [-]: LOADK     R12 6        ; R12 := 6.000000
155 [-]: SETGLOBAL R12 K96      ; INPUTBOX := R12
156 [-]: LOADK     R12 7        ; R12 := 7.000000
157 [-]: SETGLOBAL R12 K97      ; SPACER := R12
158 [-]: LOADK     R12 8        ; R12 := 8.000000
159 [-]: SETGLOBAL R12 K98      ; INPUTCOUNT := R12
160 [-]: LOADK     R12 9        ; R12 := 9.000000
161 [-]: SETGLOBAL R12 K99      ; ICONBUTTON := R12
162 [-]: LOADK     R12 10       ; R12 := 10.000000
163 [-]: SETGLOBAL R12 K100     ; CHOICE := R12
164 [-]: LOADK     R12 11       ; R12 := 11.000000
165 [-]: SETGLOBAL R12 K101     ; COLOR := R12
166 [-]: LOADK     R12 0        ; R12 := 0.000000
167 [-]: SETGLOBAL R12 K102     ; DECO_AREA_UNKNOWN := R12
168 [-]: LOADK     R12 1        ; R12 := 1.000000
169 [-]: SETGLOBAL R12 K103     ; DECO_AREA_SHIP := R12
170 [-]: LOADK     R12 2        ; R12 := 2.000000
171 [-]: SETGLOBAL R12 K104     ; DECO_AREA_APARTMENT := R12
172 [-]: LOADK     R12 3        ; R12 := 3.000000
173 [-]: SETGLOBAL R12 K105     ; DECO_AREA_COUNT := R12
174 [-]: LOADK     R12 1        ; R12 := 1.000000
175 [-]: SETGLOBAL R12 K106     ; REPORT_PLAYER := R12
176 [-]: LOADK     R12 2        ; R12 := 2.000000
177 [-]: SETGLOBAL R12 K107     ; REPORT_CLAN_AD := R12
178 [-]: NEWTABLE  R12 0 2      ; R12 := {}
179 [-]: GETGLOBAL R13 K110     ; R13 := 0x0469f296
180 [-]: LOADK     R14 K111     ; R14 := "OutsideRoom"
181 [-]: CALL      R13 2 2      ; R13 := R13(R14)
182 [-]: SETTABLE  R12 K109 R13 ; R12["Name"] := R13
183 [-]: SETTABLE  R12 K112 K113; R12["LocTag"] := "/Lotus/Language/UiElements/OutsideRoom"
184 [-]: SETGLOBAL R12 K108     ; OUTSIDE_THE_SHIP_ROOM := R12
185 [-]: NEWTABLE  R12 0 2      ; R12 := {}
186 [-]: GETGLOBAL R13 K110     ; R13 := 0x0469f296
187 [-]: LOADK     R14 K115     ; R14 := "LisetRoom"
188 [-]: CALL      R13 2 2      ; R13 := R13(R14)
189 [-]: SETTABLE  R12 K109 R13 ; R12["Name"] := R13
190 [-]: SETTABLE  R12 K112 K116; R12["LocTag"] := "/Lotus/Language/UiElements/ShipLisetRoom"
191 [-]: SETGLOBAL R12 K114     ; LISET_ROOM := R12
192 [-]: NEWTABLE  R12 5 0      ; R12 := {}
193 [-]: NEWTABLE  R13 0 2      ; R13 := {}
194 [-]: GETGLOBAL R14 K110     ; R14 := 0x0469f296
195 [-]: LOADK     R15 K118     ; R15 := "OperatorChamberRoom"
196 [-]: CALL      R14 2 2      ; R14 := R14(R15)
197 [-]: SETTABLE  R13 K109 R14 ; R13["Name"] := R14
198 [-]: SETTABLE  R13 K112 K119; R13["LocTag"] := "/Lotus/Language/UiElements/ShipOperatorChamberRoom"
199 [-]: NEWTABLE  R14 0 2      ; R14 := {}
200 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
201 [-]: LOADK     R16 K120     ; R16 := "AlchemyRoom"
202 [-]: CALL      R15 2 2      ; R15 := R15(R16)
203 [-]: SETTABLE  R14 K109 R15 ; R14["Name"] := R15
204 [-]: SETTABLE  R14 K112 K121; R14["LocTag"] := "/Lotus/Language/UiElements/ShipAlchemyRoom"
205 [-]: NEWTABLE  R15 0 2      ; R15 := {}
206 [-]: GETGLOBAL R16 K110     ; R16 := 0x0469f296
207 [-]: LOADK     R17 K122     ; R17 := "PersonalQuartersRoom"
208 [-]: CALL      R16 2 2      ; R16 := R16(R17)
209 [-]: SETTABLE  R15 K109 R16 ; R15["Name"] := R16
210 [-]: SETTABLE  R15 K112 K123; R15["LocTag"] := "/Lotus/Language/UiElements/ShipPersonalQuartersRoom"
211 [-]: NEWTABLE  R16 0 2      ; R16 := {}
212 [-]: GETGLOBAL R17 K110     ; R17 := 0x0469f296
213 [-]: LOADK     R18 K124     ; R18 := "BridgeRoom"
214 [-]: CALL      R17 2 2      ; R17 := R17(R18)
215 [-]: SETTABLE  R16 K109 R17 ; R16["Name"] := R17
216 [-]: SETTABLE  R16 K112 K125; R16["LocTag"] := "/Lotus/Language/UiElements/ShipBridgeRoom"
217 [-]: GETGLOBAL R17 K114     ; R17 := LISET_ROOM
218 [-]: SETLIST   R12 5 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 5
219 [-]: SETGLOBAL R12 K117     ; SHIP_ROOMS := R12
220 [-]: NEWTABLE  R12 4 0      ; R12 := {}
221 [-]: NEWTABLE  R13 0 2      ; R13 := {}
222 [-]: GETGLOBAL R14 K110     ; R14 := 0x0469f296
223 [-]: LOADK     R15 K127     ; R15 := "ElevatorLanding"
224 [-]: CALL      R14 2 2      ; R14 := R14(R15)
225 [-]: SETTABLE  R13 K109 R14 ; R13["Name"] := R14
226 [-]: SETTABLE  R13 K112 K128; R13["LocTag"] := "/Lotus/Language/UiElements/ApartmentElevatorLanding"
227 [-]: NEWTABLE  R14 0 2      ; R14 := {}
228 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
229 [-]: LOADK     R16 K129     ; R16 := "ApartmentRoomA"
230 [-]: CALL      R15 2 2      ; R15 := R15(R16)
231 [-]: SETTABLE  R14 K109 R15 ; R14["Name"] := R15
232 [-]: SETTABLE  R14 K112 K130; R14["LocTag"] := "/Lotus/Language/UiElements/ApartmentRoomA"
233 [-]: NEWTABLE  R15 0 2      ; R15 := {}
234 [-]: GETGLOBAL R16 K110     ; R16 := 0x0469f296
235 [-]: LOADK     R17 K131     ; R17 := "ApartmentRoomB"
236 [-]: CALL      R16 2 2      ; R16 := R16(R17)
237 [-]: SETTABLE  R15 K109 R16 ; R15["Name"] := R16
238 [-]: SETTABLE  R15 K112 K132; R15["LocTag"] := "/Lotus/Language/UiElements/ApartmentRoomB"
239 [-]: NEWTABLE  R16 0 2      ; R16 := {}
240 [-]: GETGLOBAL R17 K110     ; R17 := 0x0469f296
241 [-]: LOADK     R18 K133     ; R18 := "ApartmentRoomC"
242 [-]: CALL      R17 2 2      ; R17 := R17(R18)
243 [-]: SETTABLE  R16 K109 R17 ; R16["Name"] := R17
244 [-]: SETTABLE  R16 K112 K134; R16["LocTag"] := "/Lotus/Language/UiElements/ApartmentRoomC"
245 [-]: SETLIST   R12 4 1      ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 4
246 [-]: SETGLOBAL R12 K126     ; APARTMENT_ROOMS := R12
247 [-]: NEWTABLE  R12 0 8      ; R12 := {}
248 [-]: SETTABLE  R12 K137 K138; R12[0.000000] := "WARFRAME_SLOT"
249 [-]: SETTABLE  R12 K139 K140; R12[1.000000] := "WEAPON_SLOT"
250 [-]: SETTABLE  R12 K141 K142; R12[2.000000] := "SENTINEL_SLOT"
251 [-]: SETTABLE  R12 K143 K144; R12[3.000000] := "SPACE_SUIT_SLOT"
252 [-]: SETTABLE  R12 K145 K146; R12[4.000000] := "SPACE_WEAPON_SLOT"
253 [-]: SETTABLE  R12 K147 K148; R12[8.000000] := "OPERATOR_AMP_SLOT"
254 [-]: SETTABLE  R12 K149 K150; R12[10.000000] := "MECH_SLOT"
255 [-]: SETTABLE  R12 K151 K152; R12[11.000000] := "CREW_MEMBER_SLOT"
256 [-]: SETGLOBAL R12 K135     ; SLOT_TYPES := R12
257 [-]: LOADK     R12 1        ; R12 := 1.000000
258 [-]: SETGLOBAL R12 K153     ; SOUND_SET_EIDOLON := R12
259 [-]: LOADK     R12 2        ; R12 := 2.000000
260 [-]: SETGLOBAL R12 K154     ; SOUND_SET_FORTUNA := R12
261 [-]: LOADK     R12 3        ; R12 := 3.000000
262 [-]: SETGLOBAL R12 K155     ; SOUND_SET_ORB_VALLIS := R12
263 [-]: LOADK     R12 4        ; R12 := 4.000000
264 [-]: SETGLOBAL R12 K156     ; SOUND_SET_RAILJACK := R12
265 [-]: LOADK     R12 5        ; R12 := 5.000000
266 [-]: SETGLOBAL R12 K157     ; SOUND_SET_OROKIN_TOWER := R12
267 [-]: LOADK     R12 6        ; R12 := 6.000000
268 [-]: SETGLOBAL R12 K158     ; SOUND_SET_ZARIMAN := R12
269 [-]: LOADK     R12 100      ; R12 := 100.000000
270 [-]: LOADK     R13 1000     ; R13 := 1000.000000
271 [-]: LOADK     R14 K159     ; R14 := 100000.000000
272 [-]: LOADK     R15 K161     ; R15 := "_"
273 [-]: SETGLOBAL R15 K160     ; TAG_SEPERATOR := R15
274 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
275 [-]: LOADK     R16 K163     ; R16 := "Alert"
276 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
277 [-]: SETGLOBAL R15 K162     ; ALERT_TAG := R15
278 [-]: MUL       R15 K139 R14 ; R15 := 1.000000 * R14
279 [-]: SETGLOBAL R15 K164     ; ALERT_FLAG := R15
280 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
281 [-]: LOADK     R16 K166     ; R16 := "Nightmare"
282 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
283 [-]: SETGLOBAL R15 K165     ; NIGHTMARE_TAG := R15
284 [-]: MUL       R15 K141 R14 ; R15 := 2.000000 * R14
285 [-]: SETGLOBAL R15 K167     ; NIGHTMARE_FLAG := R15
286 [-]: LOADK     R15 28800    ; R15 := 28800.000000
287 [-]: SETGLOBAL R15 K168     ; NIGHTMARE_MISSION_INTERVAL := R15
288 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
289 [-]: LOADK     R16 K170     ; R16 := "Event"
290 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
291 [-]: SETGLOBAL R15 K169     ; EVENT_TAG := R15
292 [-]: MUL       R15 K143 R14 ; R15 := 3.000000 * R14
293 [-]: SETGLOBAL R15 K171     ; EVENT_FLAG := R15
294 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
295 [-]: LOADK     R16 K173     ; R16 := "PVP"
296 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
297 [-]: SETGLOBAL R15 K172     ; PVP_TAG := R15
298 [-]: MUL       R15 K145 R14 ; R15 := 4.000000 * R14
299 [-]: SETGLOBAL R15 K174     ; PVP_FLAG := R15
300 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
301 [-]: LOADK     R16 K176     ; R16 := "InvasionAttacker"
302 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
303 [-]: SETGLOBAL R15 K175     ; INVASION_ATTACKER_TAG := R15
304 [-]: MUL       R15 K178 R14 ; R15 := 5.000000 * R14
305 [-]: SETGLOBAL R15 K177     ; INVASION_ATTACKER_FLAG := R15
306 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
307 [-]: LOADK     R16 K180     ; R16 := "InvasionDefender"
308 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
309 [-]: SETGLOBAL R15 K179     ; INVASION_DEFENDER_TAG := R15
310 [-]: MUL       R15 K182 R14 ; R15 := 6.000000 * R14
311 [-]: SETGLOBAL R15 K181     ; INVASION_DEFENDER_FLAG := R15
312 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
313 [-]: LOADK     R16 K184     ; R16 := "HUB"
314 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
315 [-]: SETGLOBAL R15 K183     ; HUB_TAG := R15
316 [-]: MUL       R15 K186 R14 ; R15 := 7.000000 * R14
317 [-]: SETGLOBAL R15 K185     ; HUB_FLAG := R15
318 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
319 [-]: LOADK     R16 K188     ; R16 := "Syndicate"
320 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
321 [-]: SETGLOBAL R15 K187     ; SYNDICATE_MISSION_TAG := R15
322 [-]: MUL       R15 K151 R14 ; R15 := 11.000000 * R14
323 [-]: SETGLOBAL R15 K189     ; SYNDICATE_MISSION_FLAG := R15
324 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
325 [-]: LOADK     R16 K191     ; R16 := "Key"
326 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
327 [-]: SETGLOBAL R15 K190     ; KEY_TAG := R15
328 [-]: MUL       R15 K193 R14 ; R15 := 12.000000 * R14
329 [-]: SETGLOBAL R15 K192     ; KEY_FLAG := R15
330 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
331 [-]: LOADK     R16 K195     ; R16 := "Sortie"
332 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
333 [-]: SETGLOBAL R15 K194     ; SORTIE_MISSION_TAG := R15
334 [-]: MUL       R15 K197 R14 ; R15 := 13.000000 * R14
335 [-]: SETGLOBAL R15 K196     ; SORTIE_MISSION_FLAG := R15
336 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
337 [-]: LOADK     R16 K199     ; R16 := "ActiveMission"
338 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
339 [-]: SETGLOBAL R15 K198     ; ACTIVE_MISSION_TAG := R15
340 [-]: MUL       R15 K201 R14 ; R15 := 14.000000 * R14
341 [-]: SETGLOBAL R15 K200     ; ACTIVE_MISSION_FLAG := R15
342 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
343 [-]: LOADK     R16 K203     ; R16 := "GhostTower"
344 [-]: CALL      R15 2 2      ; R15 := R15(R16)
345 [-]: SETGLOBAL R15 K202     ; KUVA_TOWER_GOAL_TAG := R15
346 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
347 [-]: LOADK     R16 K203     ; R16 := "GhostTower"
348 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
349 [-]: SETGLOBAL R15 K204     ; KUVA_TOWER_MISSION_TAG := R15
350 [-]: MUL       R15 K206 R14 ; R15 := 15.000000 * R14
351 [-]: SETGLOBAL R15 K205     ; KUVA_TOWER_MISSION_FLAG := R15
352 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
353 [-]: LOADK     R16 K208     ; R16 := "JUNCTION"
354 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
355 [-]: SETGLOBAL R15 K207     ; JUNCTION_TAG := R15
356 [-]: MUL       R15 K210 R14 ; R15 := 16.000000 * R14
357 [-]: SETGLOBAL R15 K209     ; JUNCTION_FLAG := R15
358 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
359 [-]: LOADK     R16 K212     ; R16 := "Nemesis"
360 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
361 [-]: SETGLOBAL R15 K211     ; NEMESIS_MISSION_TAG := R15
362 [-]: MUL       R15 K214 R14 ; R15 := 17.000000 * R14
363 [-]: SETGLOBAL R15 K213     ; NEMESIS_MISSION_FLAG := R15
364 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
365 [-]: LOADK     R16 K216     ; R16 := "EliteAlert"
366 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
367 [-]: SETGLOBAL R15 K215     ; ELITE_ALERT_TAG := R15
368 [-]: MUL       R15 K218 R14 ; R15 := 18.000000 * R14
369 [-]: SETGLOBAL R15 K217     ; ELITE_ALERT_FLAG := R15
370 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
371 [-]: LOADK     R16 K216     ; R16 := "EliteAlert"
372 [-]: CALL      R15 2 2      ; R15 := R15(R16)
373 [-]: SETGLOBAL R15 K219     ; ELITE_ALERT_PERIODIC_MISSION_TAG := R15
374 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
375 [-]: LOADK     R16 K221     ; R16 := "EliteAlertB"
376 [-]: CALL      R15 2 2      ; R15 := R15(R16)
377 [-]: SETGLOBAL R15 K220     ; ELITE_ALERT_PERIODIC_MISSION_TAG_ALT := R15
378 [-]: LOADK     R15 3600     ; R15 := 3600.000000
379 [-]: SETGLOBAL R15 K222     ; ELITE_ALERT_MISSION_INTERVAL := R15
380 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
381 [-]: LOADK     R16 K224     ; R16 := "Scenario"
382 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
383 [-]: SETGLOBAL R15 K223     ; SCENARIO_BEACON_TAG := R15
384 [-]: MUL       R15 K226 R14 ; R15 := 19.000000 * R14
385 [-]: SETGLOBAL R15 K225     ; SCENARIO_BEACON_FLAG := R15
386 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
387 [-]: LOADK     R16 K228     ; R16 := "Hard"
388 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
389 [-]: SETGLOBAL R15 K227     ; HARD_MODE_TAG := R15
390 [-]: MUL       R15 K230 R14 ; R15 := 20.000000 * R14
391 [-]: SETGLOBAL R15 K229     ; HARD_MODE_FLAG := R15
392 [-]: LOADK     R15 100      ; R15 := 100.000000
393 [-]: SETGLOBAL R15 K231     ; HARD_MODE_LEVEL_MODIFIER := R15
394 [-]: LOADK     R15 50       ; R15 := 50.000000
395 [-]: SETGLOBAL R15 K232     ; HARD_MODE_ARCHWING_LEVEL_MODIFIER := R15
396 [-]: LOADK     R15 86400    ; R15 := 86400.000000
397 [-]: SETGLOBAL R15 K233     ; HARD_MODE_DAILY_MISSION_INTERVAL := R15
398 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
399 [-]: LOADK     R16 K235     ; R16 := "HardDaily"
400 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
401 [-]: SETGLOBAL R15 K234     ; HARD_DAILY_TAG := R15
402 [-]: MUL       R15 K237 R14 ; R15 := 21.000000 * R14
403 [-]: SETGLOBAL R15 K236     ; HARD_DAILY_FLAG := R15
404 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
405 [-]: LOADK     R16 K239     ; R16 := "VoidStorm"
406 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
407 [-]: SETGLOBAL R15 K238     ; VOID_STORM_TAG := R15
408 [-]: MUL       R15 K241 R14 ; R15 := 22.000000 * R14
409 [-]: SETGLOBAL R15 K240     ; VOID_STORM_FLAG := R15
410 [-]: GETGLOBAL R15 K160     ; R15 := TAG_SEPERATOR
411 [-]: LOADK     R16 K243     ; R16 := "LiteSortie"
412 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
413 [-]: SETGLOBAL R15 K242     ; LITE_SORTIE_MISSION_TAG := R15
414 [-]: MUL       R15 K245 R14 ; R15 := 23.000000 * R14
415 [-]: SETGLOBAL R15 K244     ; LITE_SORTIE_MISSION_FLAG := R15
416 [-]: LOADK     R15 3600     ; R15 := 3600.000000
417 [-]: SETGLOBAL R15 K246     ; KUVA_TOWER_MISSION_INTERVAL := R15
418 [-]: LOADK     R15 K248     ; R15 := "OptionalGoal"
419 [-]: SETGLOBAL R15 K247     ; OPTIONAL_GOAL_PREFIX := R15
420 [-]: LOADK     R15 K250     ; R15 := "AnyNode"
421 [-]: SETGLOBAL R15 K249     ; ANY_NODE_PREFIX := R15
422 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
423 [-]: LOADK     R16 K252     ; R16 := "ZarimanHub"
424 [-]: CALL      R15 2 2      ; R15 := R15(R16)
425 [-]: SETGLOBAL R15 K251     ; ZARIMAN_NODE_TAG := R15
426 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
427 [-]: LOADK     R16 K254     ; R16 := "CetusHub4"
428 [-]: CALL      R15 2 2      ; R15 := R15(R16)
429 [-]: SETGLOBAL R15 K253     ; CETUS_NODE_TAG := R15
430 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
431 [-]: LOADK     R16 K256     ; R16 := "SolNode228"
432 [-]: CALL      R15 2 2      ; R15 := R15(R16)
433 [-]: SETGLOBAL R15 K255     ; PLAINS_NODE_TAG := R15
434 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
435 [-]: LOADK     R16 K258     ; R16 := "IronwakeHUB3"
436 [-]: CALL      R15 2 2      ; R15 := R15(R16)
437 [-]: SETGLOBAL R15 K257     ; IRON_WAKE_NODE_TAG := R15
438 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
439 [-]: LOADK     R16 K260     ; R16 := "SolarisUnitedHub1"
440 [-]: CALL      R15 2 2      ; R15 := R15(R16)
441 [-]: SETGLOBAL R15 K259     ; FORTUNA_NODE_TAG := R15
442 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
443 [-]: LOADK     R16 K262     ; R16 := "SolNode129"
444 [-]: CALL      R15 2 2      ; R15 := R15(R16)
445 [-]: SETGLOBAL R15 K261     ; ORB_VALLIS_NODE_TAG := R15
446 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
447 [-]: LOADK     R16 K264     ; R16 := "DeimosHub"
448 [-]: CALL      R15 2 2      ; R15 := R15(R16)
449 [-]: SETGLOBAL R15 K263     ; OROKIN_TOWER_NODE_TAG := R15
450 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
451 [-]: LOADK     R16 K266     ; R16 := "SolNode229"
452 [-]: CALL      R15 2 2      ; R15 := R15(R16)
453 [-]: SETGLOBAL R15 K265     ; ENTRATI_LANDSCAPE_NODE_TAG := R15
454 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
455 [-]: LOADK     R16 K268     ; R16 := "ScenarioEventHub5"
456 [-]: CALL      R15 2 2      ; R15 := R15(R16)
457 [-]: SETGLOBAL R15 K267     ; SCENARIO_EVENT_HUB_TAG := R15
458 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
459 [-]: LOADK     R16 K270     ; R16 := "SolNode234"
460 [-]: CALL      R15 2 2      ; R15 := R15(R16)
461 [-]: SETGLOBAL R15 K269     ; APARTMENT_NODE_TAG := R15
462 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
463 [-]: LOADK     R16 K272     ; R16 := "SolNode230"
464 [-]: CALL      R15 2 2      ; R15 := R15(R16)
465 [-]: SETGLOBAL R15 K271     ; ZARIMAN_MISSION_A_TAG := R15
466 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
467 [-]: LOADK     R16 K274     ; R16 := "SolNode231"
468 [-]: CALL      R15 2 2      ; R15 := R15(R16)
469 [-]: SETGLOBAL R15 K273     ; ZARIMAN_MISSION_B_TAG := R15
470 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
471 [-]: LOADK     R16 K276     ; R16 := "SolNode232"
472 [-]: CALL      R15 2 2      ; R15 := R15(R16)
473 [-]: SETGLOBAL R15 K275     ; ZARIMAN_MISSION_C_TAG := R15
474 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
475 [-]: LOADK     R16 K278     ; R16 := "SolNode233"
476 [-]: CALL      R15 2 2      ; R15 := R15(R16)
477 [-]: SETGLOBAL R15 K277     ; ZARIMAN_MISSION_D_TAG := R15
478 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
479 [-]: LOADK     R16 K280     ; R16 := "SolNode235"
480 [-]: CALL      R15 2 2      ; R15 := R15(R16)
481 [-]: SETGLOBAL R15 K279     ; ZARIMAN_MISSION_E_TAG := R15
482 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
483 [-]: LOADK     R16 K282     ; R16 := "/Lotus/Types/Keys/TestKeyForestOpLinkFragment"
484 [-]: CALL      R15 2 2      ; R15 := R15(R16)
485 [-]: SETGLOBAL R15 K281     ; SCENARIO_EVENT_GROUND_TAG := R15
486 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
487 [-]: LOADK     R16 K284     ; R16 := "/Lotus/Types/Keys/TestKeyCrewBattleSentientSquadLink"
488 [-]: CALL      R15 2 2      ; R15 := R15(R16)
489 [-]: SETGLOBAL R15 K283     ; SCENARIO_EVENT_SPACE_TAG := R15
490 [-]: LOADK     R15 0        ; R15 := 0.000000
491 [-]: SETGLOBAL R15 K285     ; PLAINS_ELO_IN_LISET := R15
492 [-]: LOADK     R15 1        ; R15 := 1.000000
493 [-]: SETGLOBAL R15 K286     ; PLAINS_ELO_INSIDE_SAFE_ZONE := R15
494 [-]: LOADK     R15 2        ; R15 := 2.000000
495 [-]: SETGLOBAL R15 K287     ; PLAINS_ELO_OUTSIDE_SAFE_ZONE := R15
496 [-]: LOADK     R15 3        ; R15 := 3.000000
497 [-]: SETGLOBAL R15 K288     ; PLAINS_ELO_BOUNTY_ACTIVE := R15
498 [-]: LOADK     R15 10       ; R15 := 10.000000
499 [-]: SETGLOBAL R15 K289     ; PLAINS_ELO_POST_NEW_WAR_OFFSET := R15
500 [-]: GETGLOBAL R15 K110     ; R15 := 0x0469f296
501 [-]: LOADK     R16 K290     ; R16 := "Darvo"
502 [-]: CALL      R15 2 2      ; R15 := R15(R16)
503 [-]: NEWTABLE  R16 8 0      ; R16 := {}
504 [-]: LOADK     R17 K292     ; R17 := "/Lotus/Language/Game/Faction_GrineerUC"
505 [-]: LOADK     R18 K293     ; R18 := "/Lotus/Language/Game/Faction_CorpusUC"
506 [-]: LOADK     R19 K294     ; R19 := "/Lotus/Language/Game/Faction_InfestationUC"
507 [-]: LOADK     R20 K295     ; R20 := "/Lotus/Language/Game/Faction_OrokinUC"
508 [-]: LOADK     R21 K296     ; R21 := "/Lotus/Language/Game/Faction_RedVeilUC"
509 [-]: LOADK     R22 K297     ; R22 := "/Lotus/Language/Game/Faction_SentientUC"
510 [-]: LOADK     R23 K298     ; R23 := "/Lotus/Language/Game/Faction_NarmerUC"
511 [-]: LOADK     R24 K299     ; R24 := ""
512 [-]: SETLIST   R16 8 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 8
513 [-]: SETGLOBAL R16 K291     ; FactionNames := R16
514 [-]: LOADK     R16 K301     ; R16 := "???"
515 [-]: SETGLOBAL R16 K300     ; HIDDEN_PLAYER_NAME := R16
516 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
517 [-]: LOADK     R17 K303     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/AlertsFeatureItem"
518 [-]: CALL      R16 2 2      ; R16 := R16(R17)
519 [-]: SETGLOBAL R16 K302     ; SF_ALERTS := R16
520 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
521 [-]: LOADK     R17 K305     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ArsenalFeatureItem"
522 [-]: CALL      R16 2 2      ; R16 := R16(R17)
523 [-]: SETGLOBAL R16 K304     ; SF_ARSENAL := R16
524 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
525 [-]: LOADK     R17 K307     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
526 [-]: CALL      R16 2 2      ; R16 := R16(R17)
527 [-]: SETGLOBAL R16 K306     ; SF_CLAN := R16
528 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
529 [-]: LOADK     R17 K309     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/FoundryFeatureItem"
530 [-]: CALL      R16 2 2      ; R16 := R16(R17)
531 [-]: SETGLOBAL R16 K308     ; SF_FOUNDRY := R16
532 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
533 [-]: LOADK     R17 K311     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/FoundryVesselUpgradeFeatureItem"
534 [-]: CALL      R16 2 2      ; R16 := R16(R17)
535 [-]: SETGLOBAL R16 K310     ; SF_FOUNDRY_VESSEL_UPGRADE := R16
536 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
537 [-]: LOADK     R17 K313     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/GeneticFoundryFeatureItem"
538 [-]: CALL      R16 2 2      ; R16 := R16(R17)
539 [-]: SETGLOBAL R16 K312     ; SF_GENETIC_FOUNDRY := R16
540 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
541 [-]: LOADK     R17 K315     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/GeneticFoundryUpgradeFeatureItem"
542 [-]: CALL      R16 2 2      ; R16 := R16(R17)
543 [-]: SETGLOBAL R16 K314     ; SF_GENETIC_FOUNDRY_UPGRADE := R16
544 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
545 [-]: LOADK     R17 K317     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/InfestedFoundryItem"
546 [-]: CALL      R16 2 2      ; R16 := R16(R17)
547 [-]: SETGLOBAL R16 K316     ; SF_INFESTED_FOUNDRY := R16
548 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
549 [-]: LOADK     R17 K307     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
550 [-]: CALL      R16 2 2      ; R16 := R16(R17)
551 [-]: SETGLOBAL R16 K318     ; SF_MARKET_TIER_ONE := R16
552 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
553 [-]: LOADK     R17 K307     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
554 [-]: CALL      R16 2 2      ; R16 := R16(R17)
555 [-]: SETGLOBAL R16 K319     ; SF_MARKET_TIER_TWO := R16
556 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
557 [-]: LOADK     R17 K321     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
558 [-]: CALL      R16 2 2      ; R16 := R16(R17)
559 [-]: SETGLOBAL R16 K320     ; SF_MODS := R16
560 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
561 [-]: LOADK     R17 K321     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
562 [-]: CALL      R16 2 2      ; R16 := R16(R17)
563 [-]: SETGLOBAL R16 K322     ; SF_MODS_FUSION := R16
564 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
565 [-]: LOADK     R17 K321     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/ModsFeatureItem"
566 [-]: CALL      R16 2 2      ; R16 := R16(R17)
567 [-]: SETGLOBAL R16 K323     ; SF_MODS_TRANSMUTE := R16
568 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
569 [-]: LOADK     R17 K307     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
570 [-]: CALL      R16 2 2      ; R16 := R16(R17)
571 [-]: SETGLOBAL R16 K324     ; SF_CONCLAVE := R16
572 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
573 [-]: LOADK     R17 K307     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/SocialMenuFeatureItem"
574 [-]: CALL      R16 2 2      ; R16 := R16(R17)
575 [-]: SETGLOBAL R16 K325     ; SF_SOCIAL_MENU := R16
576 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
577 [-]: LOADK     R17 K327     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/MercuryNavigationFeatureItem"
578 [-]: CALL      R16 2 2      ; R16 := R16(R17)
579 [-]: SETGLOBAL R16 K326     ; SF_SOLAR_CHART := R16
580 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
581 [-]: LOADK     R17 K329     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/VoidProjectionFeatureItem"
582 [-]: CALL      R16 2 2      ; R16 := R16(R17)
583 [-]: SETGLOBAL R16 K328     ; SF_VOID_PROJECTION := R16
584 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
585 [-]: LOADK     R17 K331     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/PersonalQuartersFeatureItem"
586 [-]: CALL      R16 2 2      ; R16 := R16(R17)
587 [-]: SETGLOBAL R16 K330     ; SF_PERSONAL_QUARTERS := R16
588 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
589 [-]: LOADK     R17 K333     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/RailjackCephalonShipFeatureItem"
590 [-]: CALL      R16 2 2      ; R16 := R16(R17)
591 [-]: SETGLOBAL R16 K332     ; SF_RAILJACK_CEPHALON := R16
592 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
593 [-]: LOADK     R17 K335     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/RailjackKeyShipFeatureItem"
594 [-]: CALL      R16 2 2      ; R16 := R16(R17)
595 [-]: SETGLOBAL R16 K334     ; SF_RAILJACK_KEY := R16
596 [-]: GETGLOBAL R16 K63      ; R16 := 0x7ed0a956
597 [-]: LOADK     R17 K337     ; R17 := "/Lotus/Types/Items/ShipFeatureItems/AdvancedOrdisFeatureItem"
598 [-]: CALL      R16 2 2      ; R16 := R16(R17)
599 [-]: SETGLOBAL R16 K336     ; SF_ADVANCED_ORDIS := R16
600 [-]: LOADK     R16 20       ; R16 := 20.000000
601 [-]: SETGLOBAL R16 K338     ; MAX_PVE_EXTRA_LOADOUTS := R16
602 [-]: LOADK     R16 20       ; R16 := 20.000000
603 [-]: SETGLOBAL R16 K339     ; MAX_PVP_LOADOUTS := R16
604 [-]: NEWTABLE  R16 0 5      ; R16 := {}
605 [-]: LOADK     R17 K341     ; R17 := "VoidT1"
606 [-]: GETGLOBAL R18 K63      ; R18 := 0x7ed0a956
607 [-]: LOADK     R19 K342     ; R19 := "/Lotus/Types/Game/Projections/T1VoidProjection"
608 [-]: CALL      R18 2 2      ; R18 := R18(R19)
609 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
610 [-]: LOADK     R17 K343     ; R17 := "VoidT2"
611 [-]: GETGLOBAL R18 K63      ; R18 := 0x7ed0a956
612 [-]: LOADK     R19 K344     ; R19 := "/Lotus/Types/Game/Projections/T2VoidProjection"
613 [-]: CALL      R18 2 2      ; R18 := R18(R19)
614 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
615 [-]: LOADK     R17 K345     ; R17 := "VoidT3"
616 [-]: GETGLOBAL R18 K63      ; R18 := 0x7ed0a956
617 [-]: LOADK     R19 K346     ; R19 := "/Lotus/Types/Game/Projections/T3VoidProjection"
618 [-]: CALL      R18 2 2      ; R18 := R18(R19)
619 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
620 [-]: LOADK     R17 K347     ; R17 := "VoidT4"
621 [-]: GETGLOBAL R18 K63      ; R18 := 0x7ed0a956
622 [-]: LOADK     R19 K348     ; R19 := "/Lotus/Types/Game/Projections/T4VoidProjection"
623 [-]: CALL      R18 2 2      ; R18 := R18(R19)
624 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
625 [-]: LOADK     R17 K349     ; R17 := "VoidT5"
626 [-]: GETGLOBAL R18 K63      ; R18 := 0x7ed0a956
627 [-]: LOADK     R19 K350     ; R19 := "/Lotus/Types/Game/Projections/T5VoidProjectionImmortal"
628 [-]: CALL      R18 2 2      ; R18 := R18(R19)
629 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
630 [-]: SETGLOBAL R16 K340     ; VOID_PROJECTION_ITEMS := R16
631 [-]: NEWTABLE  R16 0 4      ; R16 := {}
632 [-]: NEWTABLE  R17 0 2      ; R17 := {}
633 [-]: LOADK     R18 K352     ; R18 := "levelOverride"
634 [-]: GETGLOBAL R19 K63      ; R19 := 0x7ed0a956
635 [-]: LOADK     R20 K353     ; R20 := "/Lotus/Levels/Proc/TheNewWar/PartOne/PostWarOstronTown"
636 [-]: CALL      R19 2 2      ; R19 := R19(R20)
637 [-]: SETTABLE  R17 R18 R19  ; R17[R18] := R19
638 [-]: LOADK     R18 K354     ; R18 := "goalTag"
639 [-]: GETGLOBAL R19 K110     ; R19 := 0x0469f296
640 [-]: LOADK     R20 K355     ; R20 := "PostWar"
641 [-]: CALL      R19 2 2      ; R19 := R19(R20)
642 [-]: SETTABLE  R17 R18 R19  ; R17[R18] := R19
643 [-]: SETTABLE  R16 K254 R17 ; R16["CetusHub4"] := R17
644 [-]: LOADK     R17 K256     ; R17 := "SolNode228"
645 [-]: NEWTABLE  R18 0 6      ; R18 := {}
646 [-]: LOADK     R19 K352     ; R19 := "levelOverride"
647 [-]: GETGLOBAL R20 K63      ; R20 := 0x7ed0a956
648 [-]: LOADK     R21 K356     ; R21 := "/Lotus/Levels/Proc/TheNewWar/PartOne/PostWarEidolonLandscape"
649 [-]: CALL      R20 2 2      ; R20 := R20(R21)
650 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
651 [-]: LOADK     R19 K354     ; R19 := "goalTag"
652 [-]: GETGLOBAL R20 K110     ; R20 := 0x0469f296
653 [-]: LOADK     R21 K355     ; R21 := "PostWar"
654 [-]: CALL      R20 2 2      ; R20 := R20(R21)
655 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
656 [-]: LOADK     R19 K357     ; R19 := "eloMin"
657 [-]: GETGLOBAL R20 K285     ; R20 := PLAINS_ELO_IN_LISET
658 [-]: GETGLOBAL R21 K289     ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
659 [-]: ADD       R20 R20 R21  ; R20 := R20 + R21
660 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
661 [-]: LOADK     R19 K358     ; R19 := "eloMax"
662 [-]: GETGLOBAL R20 K288     ; R20 := PLAINS_ELO_BOUNTY_ACTIVE
663 [-]: GETGLOBAL R21 K289     ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
664 [-]: ADD       R20 R20 R21  ; R20 := R20 + R21
665 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
666 [-]: LOADK     R19 K359     ; R19 := "extraEnemySpec"
667 [-]: LOADK     R20 K360     ; R20 := "/Lotus/Types/Game/EnemySpecs/Narmer/GrineerNarmer"
668 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
669 [-]: LOADK     R19 K361     ; R19 := "streamingOffset"
670 [-]: GETGLOBAL R20 K362     ; R20 := 0xa421af95
671 [-]: LOADK     R21 0        ; R21 := 0.000000
672 [-]: LOADK     R22 K363     ; R22 := 0.249985
673 [-]: LOADK     R23 K364     ; R23 := -0.099987
674 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
675 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
676 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
677 [-]: LOADK     R17 K260     ; R17 := "SolarisUnitedHub1"
678 [-]: NEWTABLE  R18 0 2      ; R18 := {}
679 [-]: LOADK     R19 K352     ; R19 := "levelOverride"
680 [-]: GETGLOBAL R20 K63      ; R20 := 0x7ed0a956
681 [-]: LOADK     R21 K365     ; R21 := "/Lotus/Levels/Proc/TheNewWar/PartTwo/PostWarFortuna"
682 [-]: CALL      R20 2 2      ; R20 := R20(R21)
683 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
684 [-]: LOADK     R19 K354     ; R19 := "goalTag"
685 [-]: GETGLOBAL R20 K110     ; R20 := 0x0469f296
686 [-]: LOADK     R21 K355     ; R21 := "PostWar"
687 [-]: CALL      R20 2 2      ; R20 := R20(R21)
688 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
689 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
690 [-]: LOADK     R17 K262     ; R17 := "SolNode129"
691 [-]: NEWTABLE  R18 0 5      ; R18 := {}
692 [-]: LOADK     R19 K352     ; R19 := "levelOverride"
693 [-]: GETGLOBAL R20 K63      ; R20 := 0x7ed0a956
694 [-]: LOADK     R21 K366     ; R21 := "/Lotus/Levels/Proc/TheNewWar/PartTwo/PostWarVenusLandscape"
695 [-]: CALL      R20 2 2      ; R20 := R20(R21)
696 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
697 [-]: LOADK     R19 K354     ; R19 := "goalTag"
698 [-]: GETGLOBAL R20 K110     ; R20 := 0x0469f296
699 [-]: LOADK     R21 K355     ; R21 := "PostWar"
700 [-]: CALL      R20 2 2      ; R20 := R20(R21)
701 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
702 [-]: LOADK     R19 K357     ; R19 := "eloMin"
703 [-]: GETGLOBAL R20 K285     ; R20 := PLAINS_ELO_IN_LISET
704 [-]: GETGLOBAL R21 K289     ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
705 [-]: ADD       R20 R20 R21  ; R20 := R20 + R21
706 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
707 [-]: LOADK     R19 K358     ; R19 := "eloMax"
708 [-]: GETGLOBAL R20 K288     ; R20 := PLAINS_ELO_BOUNTY_ACTIVE
709 [-]: GETGLOBAL R21 K289     ; R21 := PLAINS_ELO_POST_NEW_WAR_OFFSET
710 [-]: ADD       R20 R20 R21  ; R20 := R20 + R21
711 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
712 [-]: LOADK     R19 K359     ; R19 := "extraEnemySpec"
713 [-]: LOADK     R20 K367     ; R20 := "/Lotus/Types/Game/EnemySpecs/Narmer/CorpusNarmer"
714 [-]: SETTABLE  R18 R19 R20  ; R18[R19] := R20
715 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
716 [-]: SETGLOBAL R16 K351     ; POST_NEW_WAR_MISSIONS := R16
717 [-]: LOADK     R16 1        ; R16 := 1.000000
718 [-]: SETGLOBAL R16 K368     ; HT_PROGRESS_BAR := R16
719 [-]: LOADK     R16 2        ; R16 := 2.000000
720 [-]: SETGLOBAL R16 K369     ; HT_TIMER := R16
721 [-]: LOADK     R16 3        ; R16 := 3.000000
722 [-]: SETGLOBAL R16 K370     ; HT_HEALTH_TRACKER := R16
723 [-]: LOADK     R16 4        ; R16 := 4.000000
724 [-]: SETGLOBAL R16 K371     ; HT_ICON_BAR := R16
725 [-]: LOADK     R16 5        ; R16 := 5.000000
726 [-]: SETGLOBAL R16 K372     ; HT_OPPONENT_BAR := R16
727 [-]: LOADK     R16 6        ; R16 := 6.000000
728 [-]: SETGLOBAL R16 K373     ; HT_LABEL := R16
729 [-]: LOADK     R16 7        ; R16 := 7.000000
730 [-]: SETGLOBAL R16 K374     ; HT_TEMPERATURE_BAR := R16
731 [-]: LOADK     R16 8        ; R16 := 8.000000
732 [-]: SETGLOBAL R16 K375     ; HT_CORRUPTION_BAR := R16
733 [-]: LOADK     R16 9        ; R16 := 9.000000
734 [-]: SETGLOBAL R16 K376     ; HT_NODE_CONFLICT_BAR := R16
735 [-]: NEWTABLE  R16 8 0      ; R16 := {}
736 [-]: GETGLOBAL R17 K378     ; R17 := gDecorationType
737 [-]: GETGLOBAL R18 K379     ; R18 := gDynamicCoverType
738 [-]: GETGLOBAL R19 K380     ; R19 := gEmplacementType
739 [-]: GETGLOBAL R20 K381     ; R20 := gDevourerType
740 [-]: MOVE      R21 R6       ; R21 := R6
741 [-]: GETGLOBAL R22 K382     ; R22 := gBaseAvatarType
742 [-]: GETGLOBAL R23 K383     ; R23 := gHitProxyType
743 [-]: GETGLOBAL R24 K384     ; R24 := gPickUpType
744 [-]: SETLIST   R16 8 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 8
745 [-]: SETGLOBAL R16 K377     ; SCAN_ENTITY_TYPES := R16
746 [-]: NEWTABLE  R16 0 13     ; R16 := {}
747 [-]: LOADK     R17 K386     ; R17 := "HOURS_PER_SECOND_EIDOLON"
748 [-]: LOADK     R18 K387     ; R18 := 0.002667
749 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
750 [-]: LOADK     R17 K388     ; R17 := "HOURS_PER_SECOND_VENUS"
751 [-]: LOADK     R18 K389     ; R18 := 0.015000
752 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
753 [-]: LOADK     R17 K390     ; R17 := "HOURS_PER_SECOND_ENTRATI"
754 [-]: LOADK     R18 K387     ; R18 := 0.002667
755 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
756 [-]: LOADK     R17 K391     ; R17 := "HOURS_PER_SECOND_ZARIMAN"
757 [-]: LOADK     R18 K392     ; R18 := 0.001667
758 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
759 [-]: LOADK     R17 K393     ; R17 := "TIME_OF_DAY_LABEL_NIGHT"
760 [-]: LOADK     R18 K394     ; R18 := "/Lotus/Language/Game/TimeOfDay_Night"
761 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
762 [-]: LOADK     R17 K395     ; R17 := "TIME_OF_DAY_LABEL_DAY"
763 [-]: LOADK     R18 K396     ; R18 := "/Lotus/Language/Game/TimeOfDay_Day"
764 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
765 [-]: LOADK     R17 K397     ; R17 := "TIME_OF_DAY_LABEL_WARM"
766 [-]: LOADK     R18 K398     ; R18 := "/Lotus/Language/Game/TimeOfDay_Warm"
767 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
768 [-]: LOADK     R17 K399     ; R17 := "TIME_OF_DAY_LABEL_COLD"
769 [-]: LOADK     R18 K400     ; R18 := "/Lotus/Language/Game/TimeOfDay_Cold"
770 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
771 [-]: LOADK     R17 K401     ; R17 := "TIME_OF_DAY_LABEL_FASS"
772 [-]: LOADK     R18 K402     ; R18 := "/Lotus/Language/Mods/ImmortalSixModName"
773 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
774 [-]: LOADK     R17 K403     ; R17 := "TIME_OF_DAY_LABEL_VOME"
775 [-]: LOADK     R18 K404     ; R18 := "/Lotus/Language/Mods/ImmortalFourModName"
776 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
777 [-]: LOADK     R17 K405     ; R17 := "TIME_OF_DAY_LABEL_CONFLICT"
778 [-]: LOADK     R18 K406     ; R18 := "/Lotus/Language/Game/Territory_Conflict"
779 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
780 [-]: LOADK     R17 K407     ; R17 := "TIME_OF_DAY_LABEL_CORPUS"
781 [-]: LOADK     R18 K408     ; R18 := "/Lotus/Language/Zariman/ZarimanInfluenceCorpus"
782 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
783 [-]: LOADK     R17 K409     ; R17 := "TIME_OF_DAY_LABEL_GRINEER"
784 [-]: LOADK     R18 K410     ; R18 := "/Lotus/Language/Zariman/ZarimanInfluenceGrineer"
785 [-]: SETTABLE  R16 R17 R18  ; R16[R17] := R18
786 [-]: SETGLOBAL R16 K385     ; TimeOfDayConstants := R16
787 [-]: NEWTABLE  R16 3 0      ; R16 := {}
788 [-]: GETGLOBAL R17 K110     ; R17 := 0x0469f296
789 [-]: LOADK     R18 K411     ; R18 := "GAME_L1_ARM2"
790 [-]: CALL      R17 2 2      ; R17 := R17(R18)
791 [-]: GETGLOBAL R18 K110     ; R18 := 0x0469f296
792 [-]: LOADK     R19 K412     ; R19 := "GAME_C1_HEAD1"
793 [-]: CALL      R18 2 2      ; R18 := R18(R19)
794 [-]: GETGLOBAL R19 K110     ; R19 := 0x0469f296
795 [-]: LOADK     R20 K413     ; R20 := "GAME_R1_LEG1"
796 [-]: CALL      R19 2 2      ; R19 := R19(R20)
797 [-]: GETGLOBAL R20 K110     ; R20 := 0x0469f296
798 [-]: LOADK     R21 K414     ; R21 := "GAME_L1_LEG2"
799 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
800 [-]: SETLIST   R16 0 1      ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 0
801 [-]: GETGLOBAL R17 K415     ; R17 := 0x2d0fad09
802 [-]: LOADK     R18 K416     ; R18 := "EE.Interface.Utilities"
803 [-]: CALL      R17 2 2      ; R17 := R17(R18)
804 [-]: GETGLOBAL R18 K415     ; R18 := 0x2d0fad09
805 [-]: LOADK     R19 K417     ; R19 := "Lotus.Interface.UIStyleUtilities"
806 [-]: CALL      R18 2 2      ; R18 := R18(R19)
807 [-]: NEWTABLE  R19 4 0      ; R19 := {}
808 [-]: LOADK     R20 K418     ; R20 := "#FFFFFF"
809 [-]: LOADK     R21 K419     ; R21 := "#24D628"
810 [-]: LOADK     R22 K420     ; R22 := "#238DFF"
811 [-]: LOADK     R23 K421     ; R23 := "#C724D6"
812 [-]: SETLIST   R19 4 1      ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 4
813 [-]: NEWTABLE  R20 4 0      ; R20 := {}
814 [-]: LOADK     R21 K422     ; R21 := 16777215.000000
815 [-]: LOADK     R22 K423     ; R22 := 2414120.000000
816 [-]: LOADK     R23 K424     ; R23 := 2330111.000000
817 [-]: LOADK     R24 K425     ; R24 := 13051094.000000
818 [-]: SETLIST   R20 4 1      ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 4
819 [-]: LOADK     R21 0        ; R21 := 0.000000
820 [-]: LOADK     R22 0        ; R22 := 0.000000
821 [-]: LOADK     R23 K426     ; R23 := 3289650.000000
822 [-]: LOADBOOL  R24 0 0      ; R24 := false
823 [-]: GETGLOBAL R25 K63      ; R25 := 0x7ed0a956
824 [-]: LOADK     R26 K427     ; R26 := "/Lotus/Types/Game/LotusPvpGameRules"
825 [-]: CALL      R25 2 2      ; R25 := R25(R26)
826 [-]: GETGLOBAL R26 K110     ; R26 := 0x0469f296
827 [-]: LOADK     R27 K428     ; R27 := "ScanPoint"
828 [-]: CALL      R26 2 2      ; R26 := R26(R27)
829 [-]: GETGLOBAL R27 K110     ; R27 := 0x0469f296
830 [-]: LOADK     R28 K429     ; R28 := "KuvaSurvival"
831 [-]: CALL      R27 2 2      ; R27 := R27(R28)
832 [-]: LOADNIL   R28 R35      ; R28 := R29 := R30 := R31 := R32 := R33 := R34 := R35 := nil
833 [-]: NEWTABLE  R36 0 13     ; R36 := {}
834 [-]: LOADK     R37 2        ; R37 := 2.000000
835 [-]: NEWTABLE  R38 0 2      ; R38 := {}
836 [-]: LOADK     R39 0        ; R39 := 0.000000
837 [-]: LOADBOOL  R40 1 0      ; R40 := true
838 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
839 [-]: LOADK     R39 1        ; R39 := 1.000000
840 [-]: LOADBOOL  R40 1 0      ; R40 := true
841 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
842 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
843 [-]: LOADK     R37 3        ; R37 := 3.000000
844 [-]: NEWTABLE  R38 0 2      ; R38 := {}
845 [-]: LOADK     R39 2        ; R39 := 2.000000
846 [-]: LOADBOOL  R40 1 0      ; R40 := true
847 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
848 [-]: LOADK     R39 3        ; R39 := 3.000000
849 [-]: LOADBOOL  R40 1 0      ; R40 := true
850 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
851 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
852 [-]: LOADK     R37 4        ; R37 := 4.000000
853 [-]: NEWTABLE  R38 0 2      ; R38 := {}
854 [-]: LOADK     R39 8        ; R39 := 8.000000
855 [-]: LOADBOOL  R40 1 0      ; R40 := true
856 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
857 [-]: LOADK     R39 9        ; R39 := 9.000000
858 [-]: LOADBOOL  R40 1 0      ; R40 := true
859 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
860 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
861 [-]: LOADK     R37 5        ; R37 := 5.000000
862 [-]: NEWTABLE  R38 0 2      ; R38 := {}
863 [-]: LOADK     R39 4        ; R39 := 4.000000
864 [-]: LOADBOOL  R40 1 0      ; R40 := true
865 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
866 [-]: LOADK     R39 5        ; R39 := 5.000000
867 [-]: LOADBOOL  R40 1 0      ; R40 := true
868 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
869 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
870 [-]: LOADK     R37 6        ; R37 := 6.000000
871 [-]: NEWTABLE  R38 0 2      ; R38 := {}
872 [-]: LOADK     R39 12       ; R39 := 12.000000
873 [-]: LOADBOOL  R40 1 0      ; R40 := true
874 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
875 [-]: LOADK     R39 13       ; R39 := 13.000000
876 [-]: LOADBOOL  R40 1 0      ; R40 := true
877 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
878 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
879 [-]: LOADK     R37 7        ; R37 := 7.000000
880 [-]: NEWTABLE  R38 0 2      ; R38 := {}
881 [-]: LOADK     R39 16       ; R39 := 16.000000
882 [-]: LOADBOOL  R40 1 0      ; R40 := true
883 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
884 [-]: LOADK     R39 17       ; R39 := 17.000000
885 [-]: LOADBOOL  R40 1 0      ; R40 := true
886 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
887 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
888 [-]: LOADK     R37 8        ; R37 := 8.000000
889 [-]: NEWTABLE  R38 0 2      ; R38 := {}
890 [-]: LOADK     R39 20       ; R39 := 20.000000
891 [-]: LOADBOOL  R40 1 0      ; R40 := true
892 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
893 [-]: LOADK     R39 21       ; R39 := 21.000000
894 [-]: LOADBOOL  R40 1 0      ; R40 := true
895 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
896 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
897 [-]: LOADK     R37 9        ; R37 := 9.000000
898 [-]: NEWTABLE  R38 0 2      ; R38 := {}
899 [-]: LOADK     R39 24       ; R39 := 24.000000
900 [-]: LOADBOOL  R40 1 0      ; R40 := true
901 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
902 [-]: LOADK     R39 25       ; R39 := 25.000000
903 [-]: LOADBOOL  R40 1 0      ; R40 := true
904 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
905 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
906 [-]: LOADK     R37 10       ; R37 := 10.000000
907 [-]: NEWTABLE  R38 0 2      ; R38 := {}
908 [-]: LOADK     R39 22       ; R39 := 22.000000
909 [-]: LOADBOOL  R40 1 0      ; R40 := true
910 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
911 [-]: LOADK     R39 23       ; R39 := 23.000000
912 [-]: LOADBOOL  R40 1 0      ; R40 := true
913 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
914 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
915 [-]: LOADK     R37 11       ; R37 := 11.000000
916 [-]: NEWTABLE  R38 0 2      ; R38 := {}
917 [-]: LOADK     R39 18       ; R39 := 18.000000
918 [-]: LOADBOOL  R40 1 0      ; R40 := true
919 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
920 [-]: LOADK     R39 19       ; R39 := 19.000000
921 [-]: LOADBOOL  R40 1 0      ; R40 := true
922 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
923 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
924 [-]: LOADK     R37 12       ; R37 := 12.000000
925 [-]: NEWTABLE  R38 0 2      ; R38 := {}
926 [-]: LOADK     R39 13       ; R39 := 13.000000
927 [-]: LOADBOOL  R40 1 0      ; R40 := true
928 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
929 [-]: LOADK     R39 14       ; R39 := 14.000000
930 [-]: LOADBOOL  R40 1 0      ; R40 := true
931 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
932 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
933 [-]: LOADK     R37 13       ; R37 := 13.000000
934 [-]: NEWTABLE  R38 0 2      ; R38 := {}
935 [-]: LOADK     R39 6        ; R39 := 6.000000
936 [-]: LOADBOOL  R40 1 0      ; R40 := true
937 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
938 [-]: LOADK     R39 7        ; R39 := 7.000000
939 [-]: LOADBOOL  R40 1 0      ; R40 := true
940 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
941 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
942 [-]: LOADK     R37 16       ; R37 := 16.000000
943 [-]: NEWTABLE  R38 0 2      ; R38 := {}
944 [-]: LOADK     R39 10       ; R39 := 10.000000
945 [-]: LOADBOOL  R40 1 0      ; R40 := true
946 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
947 [-]: LOADK     R39 11       ; R39 := 11.000000
948 [-]: LOADBOOL  R40 1 0      ; R40 := true
949 [-]: SETTABLE  R38 R39 R40  ; R38[R39] := R40
950 [-]: SETTABLE  R36 R37 R38  ; R36[R37] := R38
951 [-]: NEWTABLE  R37 1 0      ; R37 := {}
952 [-]: LOADK     R38 34       ; R38 := 34.000000
953 [-]: SETLIST   R37 1 1      ; R37[(1-1)*FPF+i] := R(37+i), 1 <= i <= 1
954 [-]: GETGLOBAL R38 K63      ; R38 := 0x7ed0a956
955 [-]: LOADK     R39 K430     ; R39 := "/Lotus/Types/Keys/WarWithinQuest/WarWithinQuestKeyChain"
956 [-]: CALL      R38 2 2      ; R38 := R38(R39)
957 [-]: GETGLOBAL R39 K63      ; R39 := 0x7ed0a956
958 [-]: LOADK     R40 K431     ; R40 := "/Lotus/Types/Keys/WraithQuest/WraithQuestKeyChain"
959 [-]: CALL      R39 2 2      ; R39 := R39(R40)
960 [-]: GETGLOBAL R40 K63      ; R40 := 0x7ed0a956
961 [-]: LOADK     R41 K432     ; R41 := "/Lotus/Types/Enemies/AdvancedSpawners/LarvlingSpawner"
962 [-]: CALL      R40 2 2      ; R40 := R40(R41)
963 [-]: GETGLOBAL R41 K63      ; R41 := 0x7ed0a956
964 [-]: LOADK     R42 K433     ; R42 := "/Lotus/Types/Enemies/AdvancedSpawners/LawyerTreasurerSpawner"
965 [-]: CALL      R41 2 2      ; R41 := R41(R42)
966 [-]: GETGLOBAL R42 K63      ; R42 := 0x7ed0a956
967 [-]: LOADK     R43 K434     ; R43 := "/Lotus/Types/Enemies/AdvancedSpawners/LawyerPetSpawner"
968 [-]: CALL      R42 2 2      ; R42 := R42(R43)
969 [-]: GETGLOBAL R43 K63      ; R43 := 0x7ed0a956
970 [-]: LOADK     R44 K435     ; R44 := "/Lotus/Types/Keys/InfestedMicroplanetQuest/InfestedMicroplanetQuestKeyChain"
971 [-]: CALL      R43 2 2      ; R43 := R43(R44)
972 [-]: GETGLOBAL R44 K63      ; R44 := 0x7ed0a956
973 [-]: LOADK     R45 K436     ; R45 := "/Lotus/Types/Keys/SolarisQuest/SolarisQuestKeyChain"
974 [-]: CALL      R44 2 2      ; R44 := R44(R45)
975 [-]: NEWTABLE  R45 3 0      ; R45 := {}
976 [-]: GETGLOBAL R46 K63      ; R46 := 0x7ed0a956
977 [-]: LOADK     R47 K437     ; R47 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
978 [-]: CALL      R46 2 2      ; R46 := R46(R47)
979 [-]: GETGLOBAL R47 K63      ; R47 := 0x7ed0a956
980 [-]: LOADK     R48 K438     ; R48 := "/Lotus/Types/Keys/NewWarIntroQuest/NewWarIntroKeyChain"
981 [-]: CALL      R47 2 2      ; R47 := R47(R48)
982 [-]: GETGLOBAL R48 K63      ; R48 := 0x7ed0a956
983 [-]: LOADK     R49 K439     ; R49 := "/Lotus/Types/Keys/SacrificeQuest/SacrificeQuestKeyChain"
984 [-]: CALL      R48 2 2      ; R48 := R48(R49)
985 [-]: GETGLOBAL R49 K63      ; R49 := 0x7ed0a956
986 [-]: LOADK     R50 K440     ; R50 := "/Lotus/Types/Keys/ChimeraQuest/ChimeraKeyChain"
987 [-]: CALL      R49 2 0      ; R49,... := R49(R50)
988 [-]: SETLIST   R45 0 1      ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 0
989 [-]: CLOSURE   R46 0        ; R46 := closure(Function #1)
990 [-]: SETGLOBAL R46 K441     ; GetWarframeFromOperator := R46
991 [-]: CLOSURE   R46 1        ; R46 := closure(Function #2)
992 [-]: SETGLOBAL R46 K442     ; UnmountVehicleAndGetRider := R46
993 [-]: CLOSURE   R46 2        ; R46 := closure(Function #3)
994 [-]: MOVE      R0 R17       ; R0 := R17
995 [-]: CLOSURE   R47 3        ; R47 := closure(Function #4)
996 [-]: SETGLOBAL R47 K443     ; ShouldBlockForTutorial := R47
997 [-]: CLOSURE   R47 4        ; R47 := closure(Function #5)
998 [-]: SETGLOBAL R47 K444     ; GetPhotoshopDefaultSwatches := R47
999 [-]: CLOSURE   R47 5        ; R47 := closure(Function #6)
1000 [-]: SETGLOBAL R47 K445     ; GetKubrowTypesTable := R47
1001 [-]: CLOSURE   R47 6        ; R47 := closure(Function #7)
1002 [-]: MOVE      R0 R17       ; R0 := R17
1003 [-]: CLOSURE   R48 7        ; R48 := closure(Function #8)
1004 [-]: CLOSURE   R49 8        ; R49 := closure(Function #9)
1005 [-]: MOVE      R0 R48       ; R0 := R48
1006 [-]: SETGLOBAL R49 K446     ; GetSecondElements := R49
1007 [-]: CLOSURE   R49 9        ; R49 := closure(Function #10)
1008 [-]: MOVE      R0 R48       ; R0 := R48
1009 [-]: MOVE      R0 R47       ; R0 := R47
1010 [-]: CLOSURE   R50 10       ; R50 := closure(Function #11)
1011 [-]: MOVE      R0 R49       ; R0 := R49
1012 [-]: SETGLOBAL R50 K447     ; SecondsToFormattedTime := R50
1013 [-]: CLOSURE   R50 11       ; R50 := closure(Function #12)
1014 [-]: MOVE      R0 R48       ; R0 := R48
1015 [-]: MOVE      R0 R17       ; R0 := R17
1016 [-]: SETGLOBAL R50 K448     ; GetTwitterStyleTime := R50
1017 [-]: CLOSURE   R50 12       ; R50 := closure(Function #13)
1018 [-]: MOVE      R0 R48       ; R0 := R48
1019 [-]: CLOSURE   R51 13       ; R51 := closure(Function #14)
1020 [-]: MOVE      R0 R50       ; R0 := R50
1021 [-]: SETGLOBAL R51 K449     ; GetStoreTime := R51
1022 [-]: CLOSURE   R51 14       ; R51 := closure(Function #15)
1023 [-]: MOVE      R0 R48       ; R0 := R48
1024 [-]: CLOSURE   R52 15       ; R52 := closure(Function #16)
1025 [-]: MOVE      R0 R51       ; R0 := R51
1026 [-]: SETGLOBAL R52 K450     ; GetFullTime := R52
1027 [-]: CLOSURE   R52 16       ; R52 := closure(Function #17)
1028 [-]: MOVE      R0 R11       ; R0 := R11
1029 [-]: SETGLOBAL R52 K451     ; GetPlayerAvatar := R52
1030 [-]: CLOSURE   R52 17       ; R52 := closure(Function #18)
1031 [-]: CLOSURE   R53 18       ; R53 := closure(Function #19)
1032 [-]: MOVE      R0 R52       ; R0 := R52
1033 [-]: SETGLOBAL R53 K452     ; GetMainMenuSuitAvatar := R53
1034 [-]: CLOSURE   R53 19       ; R53 := closure(Function #20)
1035 [-]: MOVE      R0 R52       ; R0 := R52
1036 [-]: CLOSURE   R54 20       ; R54 := closure(Function #21)
1037 [-]: MOVE      R0 R53       ; R0 := R53
1038 [-]: SETGLOBAL R54 K453     ; GetMainMenuSentinelAvatar := R54
1039 [-]: CLOSURE   R54 21       ; R54 := closure(Function #22)
1040 [-]: MOVE      R0 R22       ; R0 := R22
1041 [-]: MOVE      R0 R23       ; R0 := R23
1042 [-]: MOVE      R0 R17       ; R0 := R17
1043 [-]: CLOSURE   R55 22       ; R55 := closure(Function #23)
1044 [-]: MOVE      R0 R54       ; R0 := R54
1045 [-]: MOVE      R0 R19       ; R0 := R19
1046 [-]: CLOSURE   R56 23       ; R56 := closure(Function #24)
1047 [-]: MOVE      R0 R55       ; R0 := R55
1048 [-]: SETGLOBAL R56 K454     ; GetItemToolTipText := R56
1049 [-]: CLOSURE   R56 24       ; R56 := closure(Function #25)
1050 [-]: MOVE      R0 R20       ; R0 := R20
1051 [-]: SETGLOBAL R56 K455     ; GetItemRarityColor := R56
1052 [-]: CLOSURE   R56 25       ; R56 := closure(Function #26)
1053 [-]: SETGLOBAL R56 K456     ; OpenColorPicker := R56
1054 [-]: CLOSURE   R56 26       ; R56 := closure(Function #27)
1055 [-]: MOVE      R0 R52       ; R0 := R52
1056 [-]: MOVE      R0 R21       ; R0 := R21
1057 [-]: MOVE      R0 R17       ; R0 := R17
1058 [-]: SETGLOBAL R56 K457     ; UpdateSuit := R56
1059 [-]: CLOSURE   R56 27       ; R56 := closure(Function #28)
1060 [-]: SETGLOBAL R56 K458     ; UpdateMiniGameHeadTracking := R56
1061 [-]: CLOSURE   R56 28       ; R56 := closure(Function #29)
1062 [-]: SETGLOBAL R56 K459     ; OnAvatarImageSet := R56
1063 [-]: CLOSURE   R56 29       ; R56 := closure(Function #30)
1064 [-]: SETGLOBAL R56 K460     ; InitializeProfileIconList := R56
1065 [-]: CLOSURE   R56 30       ; R56 := closure(Function #31)
1066 [-]: SETGLOBAL R56 K461     ; UnregisterProfileIcon := R56
1067 [-]: CLOSURE   R56 31       ; R56 := closure(Function #32)
1068 [-]: SETGLOBAL R56 K462     ; RegisterProfileIcon := R56
1069 [-]: CLOSURE   R56 32       ; R56 := closure(Function #33)
1070 [-]: CLOSURE   R57 33       ; R57 := closure(Function #34)
1071 [-]: CLOSURE   R58 34       ; R58 := closure(Function #35)
1072 [-]: MOVE      R0 R46       ; R0 := R46
1073 [-]: MOVE      R0 R17       ; R0 := R17
1074 [-]: MOVE      R0 R56       ; R0 := R56
1075 [-]: MOVE      R0 R57       ; R0 := R57
1076 [-]: SETGLOBAL R58 K463     ; ShowReportMenu := R58
1077 [-]: CLOSURE   R58 35       ; R58 := closure(Function #36)
1078 [-]: MOVE      R0 R17       ; R0 := R17
1079 [-]: SETGLOBAL R58 K464     ; ToRad := R58
1080 [-]: CLOSURE   R58 36       ; R58 := closure(Function #37)
1081 [-]: MOVE      R0 R17       ; R0 := R17
1082 [-]: SETGLOBAL R58 K465     ; TransformPixelToViewportCoordinates := R58
1083 [-]: CLOSURE   R58 37       ; R58 := closure(Function #38)
1084 [-]: MOVE      R0 R17       ; R0 := R17
1085 [-]: SETGLOBAL R58 K466     ; GetRootBasedPosition := R58
1086 [-]: CLOSURE   R58 38       ; R58 := closure(Function #39)
1087 [-]: MOVE      R0 R17       ; R0 := R17
1088 [-]: SETGLOBAL R58 K467     ; CreateScreenParticles := R58
1089 [-]: CLOSURE   R58 39       ; R58 := closure(Function #40)
1090 [-]: SETGLOBAL R58 K468     ; SetupAbilityUIBySuitType := R58
1091 [-]: CLOSURE   R58 40       ; R58 := closure(Function #41)
1092 [-]: SETGLOBAL R58 K469     ; SetupAbilityUIBySuitInstance := R58
1093 [-]: CLOSURE   R58 41       ; R58 := closure(Function #42)
1094 [-]: MOVE      R0 R17       ; R0 := R17
1095 [-]: SETGLOBAL R58 K470     ; InitializeContextMenu := R58
1096 [-]: CLOSURE   R58 42       ; R58 := closure(Function #43)
1097 [-]: SETGLOBAL R58 K471     ; GetPointsRemainingForItem := R58
1098 [-]: CLOSURE   R58 43       ; R58 := closure(Function #44)
1099 [-]: CLOSURE   R59 44       ; R59 := closure(Function #45)
1100 [-]: MOVE      R0 R58       ; R0 := R58
1101 [-]: SETGLOBAL R59 K472     ; CanPurchaseIfAlreadyOwned := R59
1102 [-]: CLOSURE   R59 45       ; R59 := closure(Function #46)
1103 [-]: SETGLOBAL R59 K473     ; HaveEnoughSlots := R59
1104 [-]: CLOSURE   R59 46       ; R59 := closure(Function #47)
1105 [-]: SETGLOBAL R59 K474     ; IsXPLocked := R59
1106 [-]: CLOSURE   R59 47       ; R59 := closure(Function #48)
1107 [-]: SETGLOBAL R59 K475     ; IsPVPLocked := R59
1108 [-]: CLOSURE   R59 48       ; R59 := closure(Function #49)
1109 [-]: MOVE      R0 R17       ; R0 := R17
1110 [-]: SETGLOBAL R59 K476     ; CreateParticles := R59
1111 [-]: CLOSURE   R59 49       ; R59 := closure(Function #50)
1112 [-]: CLOSURE   R60 50       ; R60 := closure(Function #51)
1113 [-]: MOVE      R0 R59       ; R0 := R59
1114 [-]: SETGLOBAL R60 K477     ; IsDevServer := R60
1115 [-]: CLOSURE   R60 51       ; R60 := closure(Function #52)
1116 [-]: CLOSURE   R61 52       ; R61 := closure(Function #53)
1117 [-]: MOVE      R0 R60       ; R0 := R60
1118 [-]: SETGLOBAL R61 K478     ; IsTestServer := R61
1119 [-]: CLOSURE   R61 53       ; R61 := closure(Function #54)
1120 [-]: CLOSURE   R62 54       ; R62 := closure(Function #55)
1121 [-]: MOVE      R0 R61       ; R0 := R61
1122 [-]: SETGLOBAL R62 K479     ; IsLocalServer := R62
1123 [-]: CLOSURE   R62 55       ; R62 := closure(Function #56)
1124 [-]: MOVE      R0 R59       ; R0 := R59
1125 [-]: MOVE      R0 R60       ; R0 := R60
1126 [-]: MOVE      R0 R61       ; R0 := R61
1127 [-]: SETGLOBAL R62 K480     ; IsRetailServer := R62
1128 [-]: CLOSURE   R62 56       ; R62 := closure(Function #57)
1129 [-]: CLOSURE   R63 57       ; R63 := closure(Function #58)
1130 [-]: MOVE      R0 R62       ; R0 := R62
1131 [-]: CLOSURE   R64 58       ; R64 := closure(Function #59)
1132 [-]: MOVE      R0 R63       ; R0 := R63
1133 [-]: CLOSURE   R65 59       ; R65 := closure(Function #60)
1134 [-]: MOVE      R0 R62       ; R0 := R62
1135 [-]: SETGLOBAL R65 K481     ; IsInGamePlay := R65
1136 [-]: CLOSURE   R65 60       ; R65 := closure(Function #61)
1137 [-]: CLOSURE   R66 61       ; R66 := closure(Function #62)
1138 [-]: MOVE      R0 R65       ; R0 := R65
1139 [-]: SETGLOBAL R66 K482     ; IsInMissionOrDojo := R66
1140 [-]: CLOSURE   R66 62       ; R66 := closure(Function #63)
1141 [-]: CLOSURE   R67 63       ; R67 := closure(Function #64)
1142 [-]: MOVE      R0 R66       ; R0 := R66
1143 [-]: SETGLOBAL R67 K483     ; IsInMission := R67
1144 [-]: CLOSURE   R67 64       ; R67 := closure(Function #65)
1145 [-]: MOVE      R0 R31       ; R0 := R31
1146 [-]: MOVE      R0 R66       ; R0 := R66
1147 [-]: SETGLOBAL R67 K484     ; IsInNewWarAltCharacterMission := R67
1148 [-]: CLOSURE   R67 65       ; R67 := closure(Function #66)
1149 [-]: MOVE      R0 R63       ; R0 := R63
1150 [-]: SETGLOBAL R67 K485     ; GetStarChart := R67
1151 [-]: CLOSURE   R67 66       ; R67 := closure(Function #67)
1152 [-]: MOVE      R0 R64       ; R0 := R64
1153 [-]: SETGLOBAL R67 K486     ; GetStarChartNodes := R67
1154 [-]: CLOSURE   R67 67       ; R67 := closure(Function #68)
1155 [-]: CLOSURE   R68 68       ; R68 := closure(Function #69)
1156 [-]: MOVE      R0 R67       ; R0 := R67
1157 [-]: SETGLOBAL R68 K487     ; IsInHub := R68
1158 [-]: CLOSURE   R68 69       ; R68 := closure(Function #70)
1159 [-]: CLOSURE   R69 70       ; R69 := closure(Function #71)
1160 [-]: MOVE      R0 R68       ; R0 := R68
1161 [-]: SETGLOBAL R69 K488     ; RegionIsAKey := R69
1162 [-]: CLOSURE   R69 71       ; R69 := closure(Function #72)
1163 [-]: SETGLOBAL R69 K489     ; ResourceDronesEnabledForRegion := R69
1164 [-]: CLOSURE   R69 72       ; R69 := closure(Function #73)
1165 [-]: MOVE      R0 R63       ; R0 := R63
1166 [-]: MOVE      R0 R68       ; R0 := R68
1167 [-]: CLOSURE   R70 73       ; R70 := closure(Function #74)
1168 [-]: MOVE      R0 R69       ; R0 := R69
1169 [-]: SETGLOBAL R70 K490     ; GetNodeInfo := R70
1170 [-]: CLOSURE   R70 74       ; R70 := closure(Function #75)
1171 [-]: MOVE      R0 R63       ; R0 := R63
1172 [-]: MOVE      R0 R69       ; R0 := R69
1173 [-]: MOVE      R0 R17       ; R0 := R17
1174 [-]: MOVE      R0 R13       ; R0 := R13
1175 [-]: CLOSURE   R71 75       ; R71 := closure(Function #76)
1176 [-]: MOVE      R0 R70       ; R0 := R70
1177 [-]: SETGLOBAL R71 K491     ; BuildGameModeIdForNode := R71
1178 [-]: CLOSURE   R71 76       ; R71 := closure(Function #77)
1179 [-]: SETGLOBAL R71 K492     ; BuildGameModeIdForSimulacrum := R71
1180 [-]: CLOSURE   R71 77       ; R71 := closure(Function #78)
1181 [-]: SETGLOBAL R71 K493     ; IsSimulacrumGameModeId := R71
1182 [-]: CLOSURE   R71 78       ; R71 := closure(Function #79)
1183 [-]: SETGLOBAL R71 K494     ; BuildGameModeIdForPhotobooth := R71
1184 [-]: CLOSURE   R71 79       ; R71 := closure(Function #80)
1185 [-]: SETGLOBAL R71 K495     ; IsPhotoboothGameModeId := R71
1186 [-]: CLOSURE   R71 80       ; R71 := closure(Function #81)
1187 [-]: MOVE      R0 R13       ; R0 := R13
1188 [-]: SETGLOBAL R71 K496     ; BuildGameModeIdForPVP := R71
1189 [-]: CLOSURE   R71 81       ; R71 := closure(Function #82)
1190 [-]: MOVE      R0 R13       ; R0 := R13
1191 [-]: SETGLOBAL R71 K497     ; BuildGameModeIdForClanDojo := R71
1192 [-]: CLOSURE   R71 82       ; R71 := closure(Function #83)
1193 [-]: MOVE      R0 R13       ; R0 := R13
1194 [-]: SETGLOBAL R71 K498     ; IsClanDojoGameModeId := R71
1195 [-]: CLOSURE   R71 83       ; R71 := closure(Function #84)
1196 [-]: MOVE      R0 R13       ; R0 := R13
1197 [-]: SETGLOBAL R71 K499     ; BuildGameModeIdForDojoDuel := R71
1198 [-]: CLOSURE   R71 84       ; R71 := closure(Function #85)
1199 [-]: MOVE      R0 R13       ; R0 := R13
1200 [-]: SETGLOBAL R71 K500     ; IsDojoDuelGameModeId := R71
1201 [-]: CLOSURE   R71 85       ; R71 := closure(Function #86)
1202 [-]: MOVE      R0 R14       ; R0 := R14
1203 [-]: CLOSURE   R72 86       ; R72 := closure(Function #87)
1204 [-]: MOVE      R0 R71       ; R0 := R71
1205 [-]: SETGLOBAL R72 K501     ; IsAlertGameModeId := R72
1206 [-]: CLOSURE   R72 87       ; R72 := closure(Function #88)
1207 [-]: MOVE      R0 R14       ; R0 := R14
1208 [-]: CLOSURE   R73 88       ; R73 := closure(Function #89)
1209 [-]: MOVE      R0 R72       ; R0 := R72
1210 [-]: SETGLOBAL R73 K502     ; IsNightmareGameModeId := R73
1211 [-]: CLOSURE   R73 89       ; R73 := closure(Function #90)
1212 [-]: MOVE      R0 R14       ; R0 := R14
1213 [-]: CLOSURE   R74 90       ; R74 := closure(Function #91)
1214 [-]: MOVE      R0 R73       ; R0 := R73
1215 [-]: SETGLOBAL R74 K503     ; IsEventGameModeId := R74
1216 [-]: CLOSURE   R74 91       ; R74 := closure(Function #92)
1217 [-]: MOVE      R0 R14       ; R0 := R14
1218 [-]: CLOSURE   R75 92       ; R75 := closure(Function #93)
1219 [-]: MOVE      R0 R14       ; R0 := R14
1220 [-]: CLOSURE   R76 93       ; R76 := closure(Function #94)
1221 [-]: MOVE      R0 R14       ; R0 := R14
1222 [-]: CLOSURE   R77 94       ; R77 := closure(Function #95)
1223 [-]: MOVE      R0 R76       ; R0 := R76
1224 [-]: SETGLOBAL R77 K504     ; IsPvpGameModeId := R77
1225 [-]: CLOSURE   R77 95       ; R77 := closure(Function #96)
1226 [-]: MOVE      R0 R14       ; R0 := R14
1227 [-]: CLOSURE   R78 96       ; R78 := closure(Function #97)
1228 [-]: MOVE      R0 R77       ; R0 := R77
1229 [-]: SETGLOBAL R78 K505     ; IsSyndicateGameModeId := R78
1230 [-]: CLOSURE   R78 97       ; R78 := closure(Function #98)
1231 [-]: MOVE      R0 R14       ; R0 := R14
1232 [-]: CLOSURE   R79 98       ; R79 := closure(Function #99)
1233 [-]: MOVE      R0 R78       ; R0 := R78
1234 [-]: SETGLOBAL R79 K506     ; IsSortieGameModeId := R79
1235 [-]: CLOSURE   R79 99       ; R79 := closure(Function #100)
1236 [-]: MOVE      R0 R14       ; R0 := R14
1237 [-]: CLOSURE   R80 100      ; R80 := closure(Function #101)
1238 [-]: MOVE      R0 R14       ; R0 := R14
1239 [-]: CLOSURE   R81 101      ; R81 := closure(Function #102)
1240 [-]: MOVE      R0 R80       ; R0 := R80
1241 [-]: SETGLOBAL R81 K507     ; IsHubGameModeId := R81
1242 [-]: CLOSURE   R81 102      ; R81 := closure(Function #103)
1243 [-]: MOVE      R0 R14       ; R0 := R14
1244 [-]: CLOSURE   R82 103      ; R82 := closure(Function #104)
1245 [-]: MOVE      R0 R14       ; R0 := R14
1246 [-]: CLOSURE   R83 104      ; R83 := closure(Function #105)
1247 [-]: MOVE      R0 R14       ; R0 := R14
1248 [-]: CLOSURE   R84 105      ; R84 := closure(Function #106)
1249 [-]: MOVE      R0 R83       ; R0 := R83
1250 [-]: SETGLOBAL R84 K508     ; IsJunctionGameModeId := R84
1251 [-]: CLOSURE   R84 106      ; R84 := closure(Function #107)
1252 [-]: CLOSURE   R85 107      ; R85 := closure(Function #108)
1253 [-]: MOVE      R0 R14       ; R0 := R14
1254 [-]: CLOSURE   R86 108      ; R86 := closure(Function #109)
1255 [-]: MOVE      R0 R85       ; R0 := R85
1256 [-]: SETGLOBAL R86 K509     ; IsKeyGameModeId := R86
1257 [-]: CLOSURE   R86 109      ; R86 := closure(Function #110)
1258 [-]: MOVE      R0 R14       ; R0 := R14
1259 [-]: CLOSURE   R87 110      ; R87 := closure(Function #111)
1260 [-]: MOVE      R0 R86       ; R0 := R86
1261 [-]: SETGLOBAL R87 K510     ; IsHardGameModeId := R87
1262 [-]: CLOSURE   R87 111      ; R87 := closure(Function #112)
1263 [-]: SETGLOBAL R87 K511     ; IsPlayingHardGameModeMission := R87
1264 [-]: CLOSURE   R87 112      ; R87 := closure(Function #113)
1265 [-]: MOVE      R0 R14       ; R0 := R14
1266 [-]: CLOSURE   R88 113      ; R88 := closure(Function #114)
1267 [-]: MOVE      R0 R87       ; R0 := R87
1268 [-]: SETGLOBAL R88 K512     ; IsHardDailyGameModeId := R88
1269 [-]: CLOSURE   R88 114      ; R88 := closure(Function #115)
1270 [-]: MOVE      R0 R63       ; R0 := R63
1271 [-]: MOVE      R0 R70       ; R0 := R70
1272 [-]: SETGLOBAL R88 K513     ; IsScenarioGameModeId := R88
1273 [-]: CLOSURE   R88 115      ; R88 := closure(Function #116)
1274 [-]: MOVE      R0 R14       ; R0 := R14
1275 [-]: CLOSURE   R89 116      ; R89 := closure(Function #117)
1276 [-]: MOVE      R0 R13       ; R0 := R13
1277 [-]: MOVE      R0 R12       ; R0 := R12
1278 [-]: SETGLOBAL R89 K514     ; GetRegionFromGameModeId := R89
1279 [-]: CLOSURE   R89 117      ; R89 := closure(Function #118)
1280 [-]: SETGLOBAL R89 K515     ; GetNodeFromGameModeId := R89
1281 [-]: CLOSURE   R89 118      ; R89 := closure(Function #119)
1282 [-]: MOVE      R0 R13       ; R0 := R13
1283 [-]: MOVE      R0 R12       ; R0 := R12
1284 [-]: MOVE      R0 R76       ; R0 := R76
1285 [-]: MOVE      R0 R73       ; R0 := R73
1286 [-]: MOVE      R0 R77       ; R0 := R77
1287 [-]: MOVE      R0 R78       ; R0 := R78
1288 [-]: MOVE      R0 R80       ; R0 := R80
1289 [-]: MOVE      R0 R84       ; R0 := R84
1290 [-]: MOVE      R0 R85       ; R0 := R85
1291 [-]: MOVE      R0 R63       ; R0 := R63
1292 [-]: MOVE      R0 R36       ; R0 := R36
1293 [-]: CLOSURE   R90 119      ; R90 := closure(Function #120)
1294 [-]: MOVE      R0 R89       ; R0 := R89
1295 [-]: SETGLOBAL R90 K516     ; GetNodeNameFromGameModeId := R90
1296 [-]: CLOSURE   R90 120      ; R90 := closure(Function #121)
1297 [-]: MOVE      R0 R71       ; R0 := R71
1298 [-]: MOVE      R0 R73       ; R0 := R73
1299 [-]: MOVE      R0 R74       ; R0 := R74
1300 [-]: MOVE      R0 R75       ; R0 := R75
1301 [-]: MOVE      R0 R77       ; R0 := R77
1302 [-]: MOVE      R0 R78       ; R0 := R78
1303 [-]: MOVE      R0 R79       ; R0 := R79
1304 [-]: MOVE      R0 R80       ; R0 := R80
1305 [-]: MOVE      R0 R81       ; R0 := R81
1306 [-]: MOVE      R0 R82       ; R0 := R82
1307 [-]: MOVE      R0 R85       ; R0 := R85
1308 [-]: MOVE      R0 R72       ; R0 := R72
1309 [-]: MOVE      R0 R87       ; R0 := R87
1310 [-]: MOVE      R0 R86       ; R0 := R86
1311 [-]: MOVE      R0 R88       ; R0 := R88
1312 [-]: SETGLOBAL R90 K517     ; GetNodeModifierTagFromGameModeId := R90
1313 [-]: CLOSURE   R90 121      ; R90 := closure(Function #122)
1314 [-]: MOVE      R0 R63       ; R0 := R63
1315 [-]: MOVE      R0 R89       ; R0 := R89
1316 [-]: MOVE      R0 R25       ; R0 := R25
1317 [-]: CLOSURE   R91 122      ; R91 := closure(Function #123)
1318 [-]: MOVE      R0 R90       ; R0 := R90
1319 [-]: CLOSURE   R92 123      ; R92 := closure(Function #124)
1320 [-]: MOVE      R0 R91       ; R0 := R91
1321 [-]: SETGLOBAL R92 K518     ; CanMergeSquad := R92
1322 [-]: CLOSURE   R92 124      ; R92 := closure(Function #125)
1323 [-]: MOVE      R0 R77       ; R0 := R77
1324 [-]: MOVE      R0 R78       ; R0 := R78
1325 [-]: MOVE      R0 R13       ; R0 := R13
1326 [-]: MOVE      R0 R12       ; R0 := R12
1327 [-]: MOVE      R0 R17       ; R0 := R17
1328 [-]: MOVE      R0 R89       ; R0 := R89
1329 [-]: SETGLOBAL R92 K519     ; GetDisplayedNodeNameFromGameModeId := R92
1330 [-]: CLOSURE   R92 125      ; R92 := closure(Function #126)
1331 [-]: SETGLOBAL R92 K520     ; GetAlertExpiryforNode := R92
1332 [-]: CLOSURE   R92 126      ; R92 := closure(Function #127)
1333 [-]: MOVE      R0 R63       ; R0 := R63
1334 [-]: SETGLOBAL R92 K521     ; IsRegionUnlocked := R92
1335 [-]: CLOSURE   R92 127      ; R92 := closure(Function #128)
1336 [-]: MOVE      R0 R17       ; R0 := R17
1337 [-]: SETGLOBAL R92 K522     ; IsChatTextActive := R92
1338 [-]: CLOSURE   R92 128      ; R92 := closure(Function #129)
1339 [-]: MOVE      R0 R71       ; R0 := R71
1340 [-]: SETGLOBAL R92 K523     ; IsSessionExpired := R92
1341 [-]: CLOSURE   R92 129      ; R92 := closure(Function #130)
1342 [-]: SETGLOBAL R92 K524     ; CheckShowTutorial := R92
1343 [-]: CLOSURE   R92 130      ; R92 := closure(Function #131)
1344 [-]: CLOSURE   R93 131      ; R93 := closure(Function #132)
1345 [-]: MOVE      R0 R92       ; R0 := R92
1346 [-]: SETGLOBAL R93 K525     ; InterruptTransmission := R93
1347 [-]: CLOSURE   R93 132      ; R93 := closure(Function #133)
1348 [-]: MOVE      R0 R92       ; R0 := R92
1349 [-]: CLOSURE   R94 133      ; R94 := closure(Function #134)
1350 [-]: MOVE      R0 R93       ; R0 := R93
1351 [-]: SETGLOBAL R94 K526     ; QueueTransmission := R94
1352 [-]: CLOSURE   R94 134      ; R94 := closure(Function #135)
1353 [-]: MOVE      R0 R93       ; R0 := R93
1354 [-]: CLOSURE   R95 135      ; R95 := closure(Function #136)
1355 [-]: MOVE      R0 R94       ; R0 := R94
1356 [-]: SETGLOBAL R95 K527     ; CreateHudlessTransmission := R95
1357 [-]: CLOSURE   R95 136      ; R95 := closure(Function #137)
1358 [-]: SETGLOBAL R95 K528     ; IsTransmissionPlaying := R95
1359 [-]: CLOSURE   R95 137      ; R95 := closure(Function #138)
1360 [-]: SETGLOBAL R95 K529     ; GetActualPlayerRank := R95
1361 [-]: CLOSURE   R95 138      ; R95 := closure(Function #139)
1362 [-]: CLOSURE   R96 139      ; R96 := closure(Function #140)
1363 [-]: MOVE      R0 R95       ; R0 := R95
1364 [-]: SETGLOBAL R96 K530     ; HasCompletedVorsPrize := R96
1365 [-]: CLOSURE   R96 140      ; R96 := closure(Function #141)
1366 [-]: MOVE      R0 R95       ; R0 := R95
1367 [-]: CLOSURE   R97 141      ; R97 := closure(Function #142)
1368 [-]: MOVE      R0 R96       ; R0 := R96
1369 [-]: SETGLOBAL R97 K531     ; HasCompletedQuest := R97
1370 [-]: CLOSURE   R97 142      ; R97 := closure(Function #143)
1371 [-]: SETGLOBAL R97 K532     ; GetLocalizedQuestName := R97
1372 [-]: CLOSURE   R97 143      ; R97 := closure(Function #144)
1373 [-]: MOVE      R0 R96       ; R0 := R96
1374 [-]: CLOSURE   R98 144      ; R98 := closure(Function #145)
1375 [-]: MOVE      R0 R97       ; R0 := R97
1376 [-]: SETGLOBAL R98 K533     ; HasCompletedNewWar := R98
1377 [-]: CLOSURE   R98 145      ; R98 := closure(Function #146)
1378 [-]: MOVE      R0 R97       ; R0 := R97
1379 [-]: CLOSURE   R99 146      ; R99 := closure(Function #147)
1380 [-]: MOVE      R0 R98       ; R0 := R98
1381 [-]: SETGLOBAL R99 K534     ; HasSquadHostCompletedNewWar := R99
1382 [-]: CLOSURE   R99 147      ; R99 := closure(Function #148)
1383 [-]: MOVE      R0 R31       ; R0 := R31
1384 [-]: MOVE      R0 R44       ; R0 := R44
1385 [-]: CLOSURE   R100 148     ; R100 := closure(Function #149)
1386 [-]: MOVE      R0 R99       ; R0 := R99
1387 [-]: SETGLOBAL R100 K535    ; CanOverridePostNewWar := R100
1388 [-]: CLOSURE   R100 149     ; R100 := closure(Function #150)
1389 [-]: MOVE      R0 R99       ; R0 := R99
1390 [-]: MOVE      R0 R98       ; R0 := R98
1391 [-]: CLOSURE   R101 150     ; R101 := closure(Function #151)
1392 [-]: MOVE      R0 R100      ; R0 := R100
1393 [-]: SETGLOBAL R101 K536    ; ApplyPostNewWarMissionOverrides := R101
1394 [-]: CLOSURE   R101 151     ; R101 := closure(Function #152)
1395 [-]: MOVE      R0 R63       ; R0 := R63
1396 [-]: MOVE      R0 R98       ; R0 := R98
1397 [-]: SETGLOBAL R101 K537    ; SetLevelStreamingArgs := R101
1398 [-]: CLOSURE   R101 152     ; R101 := closure(Function #153)
1399 [-]: MOVE      R0 R98       ; R0 := R98
1400 [-]: SETGLOBAL R101 K538    ; ApplyPostNewWarHubLevelArgs := R101
1401 [-]: CLOSURE   R101 153     ; R101 := closure(Function #154)
1402 [-]: MOVE      R0 R63       ; R0 := R63
1403 [-]: MOVE      R0 R100      ; R0 := R100
1404 [-]: SETGLOBAL R101 K539    ; BuildMissionForLocation := R101
1405 [-]: CLOSURE   R101 154     ; R101 := closure(Function #155)
1406 [-]: MOVE      R0 R17       ; R0 := R17
1407 [-]: MOVE      R0 R97       ; R0 := R97
1408 [-]: CLOSURE   R102 155     ; R102 := closure(Function #156)
1409 [-]: MOVE      R0 R101      ; R0 := R101
1410 [-]: SETGLOBAL R102 K540    ; GetModifiedPlainsElo := R102
1411 [-]: CLOSURE   R102 156     ; R102 := closure(Function #157)
1412 [-]: SETGLOBAL R102 K541    ; IsPlainsElo := R102
1413 [-]: CLOSURE   R102 157     ; R102 := closure(Function #158)
1414 [-]: MOVE      R0 R43       ; R0 := R43
1415 [-]: SETGLOBAL R102 K542    ; CanAccessDeimosHub := R102
1416 [-]: CLOSURE   R102 158     ; R102 := closure(Function #159)
1417 [-]: MOVE      R0 R96       ; R0 := R96
1418 [-]: MOVE      R0 R43       ; R0 := R43
1419 [-]: CLOSURE   R103 159     ; R103 := closure(Function #160)
1420 [-]: MOVE      R0 R102      ; R0 := R102
1421 [-]: SETGLOBAL R103 K543    ; HasCompletedDeimosIntroQuest := R103
1422 [-]: CLOSURE   R103 160     ; R103 := closure(Function #161)
1423 [-]: MOVE      R0 R63       ; R0 := R63
1424 [-]: MOVE      R0 R17       ; R0 := R17
1425 [-]: CLOSURE   R104 161     ; R104 := closure(Function #162)
1426 [-]: MOVE      R0 R103      ; R0 := R103
1427 [-]: SETGLOBAL R104 K544    ; GetStarChartProgress := R104
1428 [-]: CLOSURE   R104 162     ; R104 := closure(Function #163)
1429 [-]: MOVE      R0 R103      ; R0 := R103
1430 [-]: CLOSURE   R105 163     ; R105 := closure(Function #164)
1431 [-]: MOVE      R0 R104      ; R0 := R104
1432 [-]: SETGLOBAL R105 K545    ; HasCompletedStarChart := R105
1433 [-]: CLOSURE   R105 164     ; R105 := closure(Function #165)
1434 [-]: CLOSURE   R106 165     ; R106 := closure(Function #166)
1435 [-]: MOVE      R0 R105      ; R0 := R105
1436 [-]: SETGLOBAL R106 K546    ; GetSaleInfo := R106
1437 [-]: NEWTABLE  R106 0 0     ; R106 := {}
1438 [-]: LOADK     R107 3       ; R107 := 3.000000
1439 [-]: LOADBOOL  R108 1 0     ; R108 := true
1440 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1441 [-]: LOADK     R107 1       ; R107 := 1.000000
1442 [-]: LOADBOOL  R108 1 0     ; R108 := true
1443 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1444 [-]: LOADK     R107 0       ; R107 := 0.000000
1445 [-]: LOADBOOL  R108 1 0     ; R108 := true
1446 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1447 [-]: LOADK     R107 5       ; R107 := 5.000000
1448 [-]: LOADBOOL  R108 1 0     ; R108 := true
1449 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1450 [-]: LOADK     R107 15      ; R107 := 15.000000
1451 [-]: LOADBOOL  R108 1 0     ; R108 := true
1452 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1453 [-]: LOADK     R107 16      ; R107 := 16.000000
1454 [-]: LOADBOOL  R108 1 0     ; R108 := true
1455 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1456 [-]: LOADK     R107 6       ; R107 := 6.000000
1457 [-]: LOADBOOL  R108 1 0     ; R108 := true
1458 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1459 [-]: LOADK     R107 10      ; R107 := 10.000000
1460 [-]: LOADBOOL  R108 1 0     ; R108 := true
1461 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1462 [-]: LOADK     R107 27      ; R107 := 27.000000
1463 [-]: LOADBOOL  R108 1 0     ; R108 := true
1464 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1465 [-]: LOADK     R107 28      ; R107 := 28.000000
1466 [-]: LOADBOOL  R108 1 0     ; R108 := true
1467 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1468 [-]: LOADK     R107 29      ; R107 := 29.000000
1469 [-]: LOADBOOL  R108 1 0     ; R108 := true
1470 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1471 [-]: LOADK     R107 13      ; R107 := 13.000000
1472 [-]: LOADBOOL  R108 1 0     ; R108 := true
1473 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1474 [-]: LOADK     R107 42      ; R107 := 42.000000
1475 [-]: LOADBOOL  R108 1 0     ; R108 := true
1476 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1477 [-]: LOADK     R107 21      ; R107 := 21.000000
1478 [-]: LOADBOOL  R108 1 0     ; R108 := true
1479 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1480 [-]: LOADK     R107 48      ; R107 := 48.000000
1481 [-]: LOADBOOL  R108 1 0     ; R108 := true
1482 [-]: SETTABLE  R106 R107 R108; R106[R107] := R108
1483 [-]: CLOSURE   R107 166     ; R107 := closure(Function #167)
1484 [-]: MOVE      R0 R106      ; R0 := R106
1485 [-]: CLOSURE   R108 167     ; R108 := closure(Function #168)
1486 [-]: MOVE      R0 R107      ; R0 := R107
1487 [-]: SETGLOBAL R108 K547    ; IsProratedPackageCategory := R108
1488 [-]: CLOSURE   R108 168     ; R108 := closure(Function #169)
1489 [-]: CLOSURE   R109 169     ; R109 := closure(Function #170)
1490 [-]: CLOSURE   R110 170     ; R110 := closure(Function #171)
1491 [-]: CLOSURE   R111 171     ; R111 := closure(Function #172)
1492 [-]: MOVE      R0 R108      ; R0 := R108
1493 [-]: MOVE      R0 R110      ; R0 := R110
1494 [-]: MOVE      R0 R109      ; R0 := R109
1495 [-]: CLOSURE   R112 172     ; R112 := closure(Function #173)
1496 [-]: MOVE      R0 R111      ; R0 := R111
1497 [-]: SETGLOBAL R112 K548    ; BinarySearch := R112
1498 [-]: CLOSURE   R112 173     ; R112 := closure(Function #174)
1499 [-]: CLOSURE   R113 174     ; R113 := closure(Function #175)
1500 [-]: MOVE      R0 R107      ; R0 := R107
1501 [-]: MOVE      R0 R111      ; R0 := R111
1502 [-]: MOVE      R0 R112      ; R0 := R112
1503 [-]: CLOSURE   R114 175     ; R114 := closure(Function #176)
1504 [-]: MOVE      R0 R113      ; R0 := R113
1505 [-]: SETGLOBAL R114 K549    ; ShouldGiveFromPackage := R114
1506 [-]: CLOSURE   R114 176     ; R114 := closure(Function #177)
1507 [-]: MOVE      R0 R24       ; R0 := R24
1508 [-]: SETGLOBAL R114 K550    ; ProratedBundlesEnabled := R114
1509 [-]: CLOSURE   R114 177     ; R114 := closure(Function #178)
1510 [-]: MOVE      R0 R8        ; R0 := R8
1511 [-]: MOVE      R0 R32       ; R0 := R32
1512 [-]: MOVE      R0 R33       ; R0 := R33
1513 [-]: MOVE      R0 R105      ; R0 := R105
1514 [-]: MOVE      R0 R24       ; R0 := R24
1515 [-]: MOVE      R0 R113      ; R0 := R113
1516 [-]: MOVE      R0 R114      ; R0 := R114
1517 [-]: CLOSURE   R115 178     ; R115 := closure(Function #179)
1518 [-]: MOVE      R0 R114      ; R0 := R114
1519 [-]: SETGLOBAL R115 K551    ; GetStoreItemPrice := R115
1520 [-]: NEWTABLE  R115 8 0     ; R115 := {}
1521 [-]: LOADK     R116 K552    ; R116 := "/Lotus/Language/Menu/AP_UNIVERSAL"
1522 [-]: LOADK     R117 K553    ; R117 := "/Lotus/Language/Menu/AP_ATTACK"
1523 [-]: LOADK     R118 K554    ; R118 := "/Lotus/Language/Menu/AP_DEFENSE"
1524 [-]: LOADK     R119 K555    ; R119 := "/Lotus/Language/Menu/AP_TACTIC"
1525 [-]: LOADK     R120 K556    ; R120 := "/Lotus/Language/Menu/AP_POWER"
1526 [-]: LOADK     R121 K557    ; R121 := "/Lotus/Language/Menu/AP_PRECEPT"
1527 [-]: LOADK     R122 K558    ; R122 := "/Lotus/Language/Menu/AP_FUSION"
1528 [-]: LOADK     R123 K559    ; R123 := "/Lotus/Language/Menu/AP_WARD"
1529 [-]: SETLIST   R115 8 1     ; R115[(1-1)*FPF+i] := R(115+i), 1 <= i <= 8
1530 [-]: CLOSURE   R116 179     ; R116 := closure(Function #180)
1531 [-]: MOVE      R0 R115      ; R0 := R115
1532 [-]: SETGLOBAL R116 K560    ; GetPolarityName := R116
1533 [-]: CLOSURE   R116 180     ; R116 := closure(Function #181)
1534 [-]: SETGLOBAL R116 K561    ; GetPVPEloRatingForRank := R116
1535 [-]: CLOSURE   R116 181     ; R116 := closure(Function #182)
1536 [-]: CLOSURE   R117 182     ; R117 := closure(Function #183)
1537 [-]: CLOSURE   R118 183     ; R118 := closure(Function #184)
1538 [-]: MOVE      R0 R116      ; R0 := R116
1539 [-]: MOVE      R0 R101      ; R0 := R101
1540 [-]: MOVE      R0 R117      ; R0 := R117
1541 [-]: MOVE      R0 R52       ; R0 := R52
1542 [-]: CLOSURE   R119 184     ; R119 := closure(Function #185)
1543 [-]: MOVE      R0 R118      ; R0 := R118
1544 [-]: SETGLOBAL R119 K562    ; GetPlayerEloRating := R119
1545 [-]: CLOSURE   R119 185     ; R119 := closure(Function #186)
1546 [-]: MOVE      R0 R26       ; R0 := R26
1547 [-]: MOVE      R0 R6        ; R0 := R6
1548 [-]: MOVE      R0 R119      ; R0 := R119
1549 [-]: CLOSURE   R120 186     ; R120 := closure(Function #187)
1550 [-]: MOVE      R0 R119      ; R0 := R119
1551 [-]: SETGLOBAL R120 K563    ; FilterStatusEntity := R120
1552 [-]: CLOSURE   R120 187     ; R120 := closure(Function #188)
1553 [-]: MOVE      R0 R17       ; R0 := R17
1554 [-]: CLOSURE   R121 188     ; R121 := closure(Function #189)
1555 [-]: MOVE      R0 R120      ; R0 := R120
1556 [-]: SETGLOBAL R121 K564    ; AddTableToPurchasedItems := R121
1557 [-]: CLOSURE   R121 189     ; R121 := closure(Function #190)
1558 [-]: MOVE      R0 R120      ; R0 := R120
1559 [-]: SETGLOBAL R121 K565    ; GetAllPurchasedItems := R121
1560 [-]: CLOSURE   R121 190     ; R121 := closure(Function #191)
1561 [-]: MOVE      R0 R17       ; R0 := R17
1562 [-]: MOVE      R0 R3        ; R0 := R3
1563 [-]: MOVE      R0 R4        ; R0 := R4
1564 [-]: MOVE      R0 R5        ; R0 := R5
1565 [-]: SETGLOBAL R121 K566    ; GetRewardDesc := R121
1566 [-]: CLOSURE   R121 191     ; R121 := closure(Function #192)
1567 [-]: CLOSURE   R122 192     ; R122 := closure(Function #193)
1568 [-]: MOVE      R0 R121      ; R0 := R121
1569 [-]: SETGLOBAL R122 K567    ; GetRecipeIconTexture := R122
1570 [-]: CLOSURE   R122 193     ; R122 := closure(Function #194)
1571 [-]: MOVE      R0 R121      ; R0 := R121
1572 [-]: SETGLOBAL R122 K568    ; GetRewardIcon := R122
1573 [-]: CLOSURE   R122 194     ; R122 := closure(Function #195)
1574 [-]: MOVE      R0 R17       ; R0 := R17
1575 [-]: SETGLOBAL R122 K569    ; GetRewardInfo := R122
1576 [-]: CLOSURE   R122 195     ; R122 := closure(Function #196)
1577 [-]: MOVE      R0 R0        ; R0 := R0
1578 [-]: SETGLOBAL R122 K570    ; GetDamageTypeTag := R122
1579 [-]: CLOSURE   R122 196     ; R122 := closure(Function #197)
1580 [-]: MOVE      R0 R1        ; R0 := R1
1581 [-]: SETGLOBAL R122 K571    ; GetProcTypeTag := R122
1582 [-]: CLOSURE   R122 197     ; R122 := closure(Function #198)
1583 [-]: SETGLOBAL R122 K572    ; GetRecoveryMissionInfo := R122
1584 [-]: CLOSURE   R122 198     ; R122 := closure(Function #199)
1585 [-]: SETGLOBAL R122 K573    ; FormatGoalPercentage := R122
1586 [-]: CLOSURE   R122 199     ; R122 := closure(Function #200)
1587 [-]: MOVE      R0 R17       ; R0 := R17
1588 [-]: MOVE      R0 R67       ; R0 := R67
1589 [-]: CLOSURE   R123 200     ; R123 := closure(Function #201)
1590 [-]: MOVE      R0 R122      ; R0 := R122
1591 [-]: SETGLOBAL R123 K574    ; AvatarLight := R123
1592 [-]: CLOSURE   R123 201     ; R123 := closure(Function #202)
1593 [-]: MOVE      R0 R52       ; R0 := R52
1594 [-]: MOVE      R0 R122      ; R0 := R122
1595 [-]: SETGLOBAL R123 K575    ; MakeMainMenuAvatarKneel := R123
1596 [-]: CLOSURE   R123 202     ; R123 := closure(Function #203)
1597 [-]: MOVE      R0 R118      ; R0 := R118
1598 [-]: SETGLOBAL R123 K576    ; OnSaveLoadOutCompleteCommon := R123
1599 [-]: CLOSURE   R123 203     ; R123 := closure(Function #204)
1600 [-]: SETGLOBAL R123 K577    ; MakeLevelItemString := R123
1601 [-]: CLOSURE   R123 204     ; R123 := closure(Function #205)
1602 [-]: SETGLOBAL R123 K578    ; IsHarvestedOrBranded := R123
1603 [-]: CLOSURE   R123 205     ; R123 := closure(Function #206)
1604 [-]: SETGLOBAL R123 K579    ; GetUIMode := R123
1605 [-]: CLOSURE   R123 206     ; R123 := closure(Function #207)
1606 [-]: CLOSURE   R124 207     ; R124 := closure(Function #208)
1607 [-]: MOVE      R0 R123      ; R0 := R123
1608 [-]: SETGLOBAL R124 K580    ; ShowInputDialog := R124
1609 [-]: CLOSURE   R124 208     ; R124 := closure(Function #209)
1610 [-]: SETGLOBAL R124 K581    ; GetMaxAllianceMemberCount := R124
1611 [-]: CLOSURE   R124 209     ; R124 := closure(Function #210)
1612 [-]: CLOSURE   R125 210     ; R125 := closure(Function #211)
1613 [-]: MOVE      R0 R124      ; R0 := R124
1614 [-]: SETGLOBAL R125 K582    ; GetNodeAlertMissionInfo := R125
1615 [-]: CLOSURE   R125 211     ; R125 := closure(Function #212)
1616 [-]: CLOSURE   R126 212     ; R126 := closure(Function #213)
1617 [-]: MOVE      R0 R125      ; R0 := R125
1618 [-]: SETGLOBAL R126 K583    ; GetInvasionInfo := R126
1619 [-]: CLOSURE   R126 213     ; R126 := closure(Function #214)
1620 [-]: CLOSURE   R127 214     ; R127 := closure(Function #215)
1621 [-]: MOVE      R0 R126      ; R0 := R126
1622 [-]: SETGLOBAL R127 K584    ; GetGoalInfo := R127
1623 [-]: CLOSURE   R127 215     ; R127 := closure(Function #216)
1624 [-]: CLOSURE   R128 216     ; R128 := closure(Function #217)
1625 [-]: MOVE      R0 R127      ; R0 := R127
1626 [-]: SETGLOBAL R128 K585    ; GetEventTexture := R128
1627 [-]: CLOSURE   R128 217     ; R128 := closure(Function #218)
1628 [-]: MOVE      R0 R27       ; R0 := R27
1629 [-]: CLOSURE   R129 218     ; R129 := closure(Function #219)
1630 [-]: MOVE      R0 R128      ; R0 := R128
1631 [-]: SETGLOBAL R129 K586    ; GetMissionTypeName := R129
1632 [-]: CLOSURE   R129 219     ; R129 := closure(Function #220)
1633 [-]: MOVE      R0 R37       ; R0 := R37
1634 [-]: SETGLOBAL R129 K587    ; HasTutorialForMissionType := R129
1635 [-]: CLOSURE   R129 220     ; R129 := closure(Function #221)
1636 [-]: CLOSURE   R130 221     ; R130 := closure(Function #222)
1637 [-]: MOVE      R0 R129      ; R0 := R129
1638 [-]: SETGLOBAL R130 K588    ; GetLocalizedFactionName := R130
1639 [-]: CLOSURE   R130 222     ; R130 := closure(Function #223)
1640 [-]: MOVE      R0 R127      ; R0 := R127
1641 [-]: CLOSURE   R131 223     ; R131 := closure(Function #224)
1642 [-]: MOVE      R0 R130      ; R0 := R130
1643 [-]: SETGLOBAL R131 K589    ; GetLocationTexture := R131
1644 [-]: CLOSURE   R131 224     ; R131 := closure(Function #225)
1645 [-]: MOVE      R0 R129      ; R0 := R129
1646 [-]: CLOSURE   R132 225     ; R132 := closure(Function #226)
1647 [-]: MOVE      R0 R131      ; R0 := R131
1648 [-]: SETGLOBAL R132 K590    ; TryGetCrossfireDesc := R132
1649 [-]: CLOSURE   R132 226     ; R132 := closure(Function #227)
1650 [-]: MOVE      R0 R46       ; R0 := R46
1651 [-]: MOVE      R0 R124      ; R0 := R124
1652 [-]: MOVE      R0 R126      ; R0 := R126
1653 [-]: MOVE      R0 R15       ; R0 := R15
1654 [-]: MOVE      R0 R128      ; R0 := R128
1655 [-]: MOVE      R0 R125      ; R0 := R125
1656 [-]: MOVE      R0 R17       ; R0 := R17
1657 [-]: MOVE      R0 R130      ; R0 := R130
1658 [-]: MOVE      R0 R131      ; R0 := R131
1659 [-]: SETGLOBAL R132 K591    ; GetMissionInfo := R132
1660 [-]: CLOSURE   R132 227     ; R132 := closure(Function #228)
1661 [-]: SETGLOBAL R132 K592    ; ShowCombos := R132
1662 [-]: CLOSURE   R132 228     ; R132 := closure(Function #229)
1663 [-]: SETGLOBAL R132 K593    ; GetMeleeStanceUpgradeInfo := R132
1664 [-]: CLOSURE   R132 229     ; R132 := closure(Function #230)
1665 [-]: SETGLOBAL R132 K594    ; RemoveModsFromWeapon := R132
1666 [-]: CLOSURE   R132 230     ; R132 := closure(Function #231)
1667 [-]: SETGLOBAL R132 K595    ; GetGameModeTexture := R132
1668 [-]: CLOSURE   R132 231     ; R132 := closure(Function #232)
1669 [-]: CLOSURE   R133 232     ; R133 := closure(Function #233)
1670 [-]: MOVE      R0 R132      ; R0 := R132
1671 [-]: SETGLOBAL R133 K596    ; GetQuestInfo := R133
1672 [-]: CLOSURE   R31 233      ; R31 := closure(Function #234)
1673 [-]: MOVE      R0 R132      ; R0 := R132
1674 [-]: CLOSURE   R133 234     ; R133 := closure(Function #235)
1675 [-]: MOVE      R0 R31       ; R0 := R31
1676 [-]: SETGLOBAL R133 K597    ; GetActiveQuest := R133
1677 [-]: CLOSURE   R133 235     ; R133 := closure(Function #236)
1678 [-]: CLOSURE   R134 236     ; R134 := closure(Function #237)
1679 [-]: MOVE      R0 R133      ; R0 := R133
1680 [-]: SETGLOBAL R134 K598    ; InQuestCommitment := R134
1681 [-]: CLOSURE   R134 237     ; R134 := closure(Function #238)
1682 [-]: MOVE      R0 R17       ; R0 := R17
1683 [-]: MOVE      R0 R55       ; R0 := R55
1684 [-]: SETGLOBAL R134 K599    ; GetAllKeys := R134
1685 [-]: CLOSURE   R134 238     ; R134 := closure(Function #239)
1686 [-]: MOVE      R0 R17       ; R0 := R17
1687 [-]: MOVE      R0 R18       ; R0 := R18
1688 [-]: SETGLOBAL R134 K600    ; ShowDialogForFeatureUpgrade := R134
1689 [-]: CLOSURE   R134 239     ; R134 := closure(Function #240)
1690 [-]: MOVE      R0 R95       ; R0 := R95
1691 [-]: MOVE      R0 R17       ; R0 := R17
1692 [-]: MOVE      R0 R94       ; R0 := R94
1693 [-]: SETGLOBAL R134 K601    ; UpdateUIConsoleTriggers := R134
1694 [-]: CLOSURE   R134 240     ; R134 := closure(Function #241)
1695 [-]: SETGLOBAL R134 K602    ; DoesStringContainAllDigits := R134
1696 [-]: CLOSURE   R134 241     ; R134 := closure(Function #242)
1697 [-]: MOVE      R0 R10       ; R0 := R10
1698 [-]: SETGLOBAL R134 K603    ; UpdateHeadTracking := R134
1699 [-]: CLOSURE   R134 242     ; R134 := closure(Function #243)
1700 [-]: MOVE      R0 R63       ; R0 := R63
1701 [-]: SETGLOBAL R134 K604    ; GetUnlockedNavFeatures := R134
1702 [-]: CLOSURE   R134 243     ; R134 := closure(Function #244)
1703 [-]: MOVE      R0 R17       ; R0 := R17
1704 [-]: SETGLOBAL R134 K605    ; SetUpInWorldPanel := R134
1705 [-]: CLOSURE   R134 244     ; R134 := closure(Function #245)
1706 [-]: SETGLOBAL R134 K606    ; LinearToSRGB := R134
1707 [-]: CLOSURE   R134 245     ; R134 := closure(Function #246)
1708 [-]: SETGLOBAL R134 K607    ; SRGBToLinear := R134
1709 [-]: LOADNIL   R134 R134    ; R134 := nil
1710 [-]: CLOSURE   R135 246     ; R135 := closure(Function #247)
1711 [-]: MOVE      R0 R46       ; R0 := R46
1712 [-]: MOVE      R0 R134      ; R0 := R134
1713 [-]: CLOSURE   R136 247     ; R136 := closure(Function #248)
1714 [-]: MOVE      R0 R135      ; R0 := R135
1715 [-]: SETGLOBAL R136 K608    ; LocalizePolarities := R136
1716 [-]: CLOSURE   R136 248     ; R136 := closure(Function #249)
1717 [-]: MOVE      R0 R134      ; R0 := R134
1718 [-]: MOVE      R0 R135      ; R0 := R135
1719 [-]: SETGLOBAL R136 K609    ; GetTagForPolarity := R136
1720 [-]: CLOSURE   R136 249     ; R136 := closure(Function #250)
1721 [-]: SETGLOBAL R136 K610    ; ShowQuestCompleted := R136
1722 [-]: CLOSURE   R136 250     ; R136 := closure(Function #251)
1723 [-]: MOVE      R0 R17       ; R0 := R17
1724 [-]: SETGLOBAL R136 K611    ; ApplyGenericBackerMaterial := R136
1725 [-]: CLOSURE   R136 251     ; R136 := closure(Function #252)
1726 [-]: MOVE      R0 R17       ; R0 := R17
1727 [-]: CLOSURE   R137 252     ; R137 := closure(Function #253)
1728 [-]: MOVE      R0 R136      ; R0 := R136
1729 [-]: SETGLOBAL R137 K612    ; GetReputationInfoForSyndicate := R137
1730 [-]: CLOSURE   R137 253     ; R137 := closure(Function #254)
1731 [-]: MOVE      R0 R136      ; R0 := R136
1732 [-]: CLOSURE   R138 254     ; R138 := closure(Function #255)
1733 [-]: MOVE      R0 R137      ; R0 := R137
1734 [-]: SETGLOBAL R138 K613    ; GetLovedReputationInfoForSyndicate := R138
1735 [-]: CLOSURE   R138 255     ; R138 := closure(Function #256)
1736 [-]: MOVE      R0 R17       ; R0 := R17
1737 [-]: SETGLOBAL R138 K614    ; DrawItem := R138
1738 [-]: CLOSURE   R138 256     ; R138 := closure(Function #257)
1739 [-]: SETGLOBAL R138 K615    ; GetDailyDeal := R138
1740 [-]: CLOSURE   R138 257     ; R138 := closure(Function #258)
1741 [-]: SETGLOBAL R138 K616    ; GetLocalizedItemName := R138
1742 [-]: CLOSURE   R138 258     ; R138 := closure(Function #259)
1743 [-]: SETGLOBAL R138 K617    ; OpenTrainingMission := R138
1744 [-]: CLOSURE   R138 259     ; R138 := closure(Function #260)
1745 [-]: CLOSURE   R139 260     ; R139 := closure(Function #261)
1746 [-]: MOVE      R0 R138      ; R0 := R138
1747 [-]: SETGLOBAL R139 K618    ; GetTrainingRetryPlatinumCost := R139
1748 [-]: CLOSURE   R139 261     ; R139 := closure(Function #262)
1749 [-]: MOVE      R0 R49       ; R0 := R49
1750 [-]: MOVE      R0 R138      ; R0 := R138
1751 [-]: SETGLOBAL R139 K619    ; CanRankUp := R139
1752 [-]: CLOSURE   R139 262     ; R139 := closure(Function #263)
1753 [-]: CLOSURE   R140 263     ; R140 := closure(Function #264)
1754 [-]: MOVE      R0 R17       ; R0 := R17
1755 [-]: MOVE      R0 R139      ; R0 := R139
1756 [-]: SETGLOBAL R140 K620    ; OnChallengePassed := R140
1757 [-]: CLOSURE   R140 264     ; R140 := closure(Function #265)
1758 [-]: SETGLOBAL R140 K621    ; GetFriendlyPlayers := R140
1759 [-]: CLOSURE   R140 265     ; R140 := closure(Function #266)
1760 [-]: SETGLOBAL R140 K622    ; FindNearestTagged := R140
1761 [-]: CLOSURE   R140 266     ; R140 := closure(Function #267)
1762 [-]: CLOSURE   R141 267     ; R141 := closure(Function #268)
1763 [-]: MOVE      R0 R140      ; R0 := R140
1764 [-]: SETGLOBAL R141 K623    ; GetLoadoutPresetName := R141
1765 [-]: CLOSURE   R141 268     ; R141 := closure(Function #269)
1766 [-]: MOVE      R0 R31       ; R0 := R31
1767 [-]: MOVE      R0 R67       ; R0 := R67
1768 [-]: MOVE      R0 R62       ; R0 := R62
1769 [-]: MOVE      R0 R63       ; R0 := R63
1770 [-]: SETGLOBAL R141 K624    ; UpdateQuests := R141
1771 [-]: CLOSURE   R141 269     ; R141 := closure(Function #270)
1772 [-]: MOVE      R0 R16       ; R0 := R16
1773 [-]: SETGLOBAL R141 K625    ; GetScanPointBones := R141
1774 [-]: CLOSURE   R141 270     ; R141 := closure(Function #271)
1775 [-]: MOVE      R0 R16       ; R0 := R16
1776 [-]: SETGLOBAL R141 K626    ; MaxScanPointBones := R141
1777 [-]: CLOSURE   R141 271     ; R141 := closure(Function #272)
1778 [-]: SETGLOBAL R141 K627    ; RayCastForScanPoints := R141
1779 [-]: CLOSURE   R141 272     ; R141 := closure(Function #273)
1780 [-]: CLOSURE   R142 273     ; R142 := closure(Function #274)
1781 [-]: MOVE      R0 R141      ; R0 := R141
1782 [-]: SETGLOBAL R142 K628    ; HasPvpCompatibleGear := R142
1783 [-]: CLOSURE   R142 274     ; R142 := closure(Function #275)
1784 [-]: MOVE      R0 R17       ; R0 := R17
1785 [-]: SETGLOBAL R142 K629    ; AdjustBluerSize := R142
1786 [-]: CLOSURE   R142 275     ; R142 := closure(Function #276)
1787 [-]: SETGLOBAL R142 K630    ; GetInputCameraRotation := R142
1788 [-]: CLOSURE   R142 276     ; R142 := closure(Function #277)
1789 [-]: MOVE      R0 R46       ; R0 := R46
1790 [-]: SETGLOBAL R142 K631    ; ViewConsoleProfile := R142
1791 [-]: CLOSURE   R142 277     ; R142 := closure(Function #278)
1792 [-]: SETGLOBAL R142 K632    ; GetCurrentPurchaseSource := R142
1793 [-]: CLOSURE   R33 278      ; R33 := closure(Function #279)
1794 [-]: CLOSURE   R142 279     ; R142 := closure(Function #280)
1795 [-]: MOVE      R0 R33       ; R0 := R33
1796 [-]: SETGLOBAL R142 K633    ; GetPriceWithCoupon := R142
1797 [-]: CLOSURE   R142 280     ; R142 := closure(Function #281)
1798 [-]: SETGLOBAL R142 K634    ; GetCouponName := R142
1799 [-]: CLOSURE   R32 281      ; R32 := closure(Function #282)
1800 [-]: CLOSURE   R142 282     ; R142 := closure(Function #283)
1801 [-]: MOVE      R0 R32       ; R0 := R32
1802 [-]: SETGLOBAL R142 K635    ; PopulateCouponInfo := R142
1803 [-]: CLOSURE   R142 283     ; R142 := closure(Function #284)
1804 [-]: MOVE      R0 R2        ; R0 := R2
1805 [-]: CLOSURE   R143 284     ; R143 := closure(Function #285)
1806 [-]: MOVE      R0 R142      ; R0 := R142
1807 [-]: SETGLOBAL R143 K636    ; GetAvailableColourPickers := R143
1808 [-]: CLOSURE   R143 285     ; R143 := closure(Function #286)
1809 [-]: MOVE      R0 R142      ; R0 := R142
1810 [-]: SETGLOBAL R143 K637    ; GetRandomColorPalette := R143
1811 [-]: CLOSURE   R143 286     ; R143 := closure(Function #287)
1812 [-]: MOVE      R0 R136      ; R0 := R136
1813 [-]: CLOSURE   R144 287     ; R144 := closure(Function #288)
1814 [-]: MOVE      R0 R143      ; R0 := R143
1815 [-]: SETGLOBAL R144 K638    ; GetPvPLoadoutCapacity := R144
1816 [-]: CLOSURE   R144 288     ; R144 := closure(Function #289)
1817 [-]: MOVE      R0 R111      ; R0 := R111
1818 [-]: MOVE      R0 R112      ; R0 := R112
1819 [-]: SETGLOBAL R144 K639    ; GetRecipesOwned := R144
1820 [-]: CLOSURE   R144 289     ; R144 := closure(Function #290)
1821 [-]: MOVE      R0 R107      ; R0 := R107
1822 [-]: MOVE      R0 R113      ; R0 := R113
1823 [-]: MOVE      R0 R58       ; R0 := R58
1824 [-]: MOVE      R0 R111      ; R0 := R111
1825 [-]: MOVE      R0 R112      ; R0 := R112
1826 [-]: MOVE      R0 R24       ; R0 := R24
1827 [-]: MOVE      R0 R114      ; R0 := R114
1828 [-]: MOVE      R0 R8        ; R0 := R8
1829 [-]: MOVE      R0 R143      ; R0 := R143
1830 [-]: SETGLOBAL R144 K640    ; GetNumOwned := R144
1831 [-]: CLOSURE   R144 290     ; R144 := closure(Function #291)
1832 [-]: SETGLOBAL R144 K641    ; GetImageDimansionsFromName := R144
1833 [-]: CLOSURE   R144 291     ; R144 := closure(Function #292)
1834 [-]: SETGLOBAL R144 K642    ; VerifyInventorySlots := R144
1835 [-]: CLOSURE   R144 292     ; R144 := closure(Function #293)
1836 [-]: MOVE      R0 R17       ; R0 := R17
1837 [-]: SETGLOBAL R144 K643    ; ShowInvalidBinError := R144
1838 [-]: CLOSURE   R144 293     ; R144 := closure(Function #294)
1839 [-]: MOVE      R0 R17       ; R0 := R17
1840 [-]: SETGLOBAL R144 K644    ; HandleInvalidBinErrorResponse := R144
1841 [-]: CLOSURE   R144 294     ; R144 := closure(Function #295)
1842 [-]: SETGLOBAL R144 K645    ; GetProductTimeLeft := R144
1843 [-]: CLOSURE   R144 295     ; R144 := closure(Function #296)
1844 [-]: SETGLOBAL R144 K646    ; IsProductExpired := R144
1845 [-]: NEWTABLE  R144 0 10    ; R144 := {}
1846 [-]: LOADK     R145 0       ; R145 := 0.000000
1847 [-]: NEWTABLE  R146 0 4     ; R146 := {}
1848 [-]: LOADK     R147 K647    ; R147 := "Icon"
1849 [-]: LOADK     R148 K299    ; R148 := ""
1850 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1851 [-]: LOADK     R147 K648    ; R147 := "Ability"
1852 [-]: LOADK     R148 K299    ; R148 := ""
1853 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1854 [-]: LOADK     R147 K649    ; R147 := "Lens"
1855 [-]: LOADK     R148 K299    ; R148 := ""
1856 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1857 [-]: LOADK     R147 K650    ; R147 := "Polarity"
1858 [-]: LOADK     R148 K299    ; R148 := ""
1859 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1860 [-]: SETTABLE  R144 R145 R146; R144[R145] := R146
1861 [-]: LOADK     R145 1       ; R145 := 1.000000
1862 [-]: NEWTABLE  R146 0 4     ; R146 := {}
1863 [-]: LOADK     R147 K647    ; R147 := "Icon"
1864 [-]: LOADK     R148 K651    ; R148 := "FocusLensMadurai.png"
1865 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1866 [-]: LOADK     R147 K648    ; R147 := "Ability"
1867 [-]: LOADK     R148 K652    ; R148 := "/Lotus/Upgrades/Focus/Attack/AttackFocusAbility"
1868 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1869 [-]: LOADK     R147 K649    ; R147 := "Lens"
1870 [-]: LOADK     R148 K653    ; R148 := "MADURAI"
1871 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1872 [-]: LOADK     R147 K650    ; R147 := "Polarity"
1873 [-]: LOADK     R148 K654    ; R148 := "/Lotus/Language/TennoWay/Madurai"
1874 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1875 [-]: SETTABLE  R144 R145 R146; R144[R145] := R146
1876 [-]: LOADK     R145 2       ; R145 := 2.000000
1877 [-]: NEWTABLE  R146 0 4     ; R146 := {}
1878 [-]: LOADK     R147 K647    ; R147 := "Icon"
1879 [-]: LOADK     R148 K655    ; R148 := "FocusLensVazarin.png"
1880 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1881 [-]: LOADK     R147 K648    ; R147 := "Ability"
1882 [-]: LOADK     R148 K656    ; R148 := "/Lotus/Upgrades/Focus/Defense/DefenseFocusAbility"
1883 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1884 [-]: LOADK     R147 K649    ; R147 := "Lens"
1885 [-]: LOADK     R148 K657    ; R148 := "VAZARIN"
1886 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1887 [-]: LOADK     R147 K650    ; R147 := "Polarity"
1888 [-]: LOADK     R148 K658    ; R148 := "/Lotus/Language/TennoWay/Vazarin"
1889 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1890 [-]: SETTABLE  R144 R145 R146; R144[R145] := R146
1891 [-]: LOADK     R145 3       ; R145 := 3.000000
1892 [-]: NEWTABLE  R146 0 4     ; R146 := {}
1893 [-]: LOADK     R147 K647    ; R147 := "Icon"
1894 [-]: LOADK     R148 K659    ; R148 := "FocusLensNaramon.png"
1895 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1896 [-]: LOADK     R147 K648    ; R147 := "Ability"
1897 [-]: LOADK     R148 K660    ; R148 := "/Lotus/Upgrades/Focus/Tactic/TacticFocusAbility"
1898 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1899 [-]: LOADK     R147 K649    ; R147 := "Lens"
1900 [-]: LOADK     R148 K661    ; R148 := "NARAMON"
1901 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1902 [-]: LOADK     R147 K650    ; R147 := "Polarity"
1903 [-]: LOADK     R148 K662    ; R148 := "/Lotus/Language/TennoWay/Naramon"
1904 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1905 [-]: SETTABLE  R144 R145 R146; R144[R145] := R146
1906 [-]: LOADK     R145 4       ; R145 := 4.000000
1907 [-]: NEWTABLE  R146 0 4     ; R146 := {}
1908 [-]: LOADK     R147 K647    ; R147 := "Icon"
1909 [-]: LOADK     R148 K663    ; R148 := "FocusLensZenurik.png"
1910 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1911 [-]: LOADK     R147 K648    ; R147 := "Ability"
1912 [-]: LOADK     R148 K664    ; R148 := "/Lotus/Upgrades/Focus/Power/PowerFocusAbility"
1913 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1914 [-]: LOADK     R147 K649    ; R147 := "Lens"
1915 [-]: LOADK     R148 K665    ; R148 := "ZENURIK"
1916 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1917 [-]: LOADK     R147 K650    ; R147 := "Polarity"
1918 [-]: LOADK     R148 K666    ; R148 := "/Lotus/Language/TennoWay/Zenurik"
1919 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1920 [-]: SETTABLE  R144 R145 R146; R144[R145] := R146
1921 [-]: LOADK     R145 5       ; R145 := 5.000000
1922 [-]: NEWTABLE  R146 0 4     ; R146 := {}
1923 [-]: LOADK     R147 K647    ; R147 := "Icon"
1924 [-]: LOADK     R148 K299    ; R148 := ""
1925 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1926 [-]: LOADK     R147 K648    ; R147 := "Ability"
1927 [-]: LOADK     R148 K299    ; R148 := ""
1928 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1929 [-]: LOADK     R147 K649    ; R147 := "Lens"
1930 [-]: LOADK     R148 K299    ; R148 := ""
1931 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1932 [-]: LOADK     R147 K650    ; R147 := "Polarity"
1933 [-]: LOADK     R148 K299    ; R148 := ""
1934 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1935 [-]: SETTABLE  R144 R145 R146; R144[R145] := R146
1936 [-]: LOADK     R145 6       ; R145 := 6.000000
1937 [-]: NEWTABLE  R146 0 4     ; R146 := {}
1938 [-]: LOADK     R147 K647    ; R147 := "Icon"
1939 [-]: LOADK     R148 K299    ; R148 := ""
1940 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1941 [-]: LOADK     R147 K648    ; R147 := "Ability"
1942 [-]: LOADK     R148 K299    ; R148 := ""
1943 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1944 [-]: LOADK     R147 K649    ; R147 := "Lens"
1945 [-]: LOADK     R148 K299    ; R148 := ""
1946 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1947 [-]: LOADK     R147 K650    ; R147 := "Polarity"
1948 [-]: LOADK     R148 K299    ; R148 := ""
1949 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1950 [-]: SETTABLE  R144 R145 R146; R144[R145] := R146
1951 [-]: LOADK     R145 7       ; R145 := 7.000000
1952 [-]: NEWTABLE  R146 0 4     ; R146 := {}
1953 [-]: LOADK     R147 K647    ; R147 := "Icon"
1954 [-]: LOADK     R148 K667    ; R148 := "FocusLensUnairu.png"
1955 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1956 [-]: LOADK     R147 K648    ; R147 := "Ability"
1957 [-]: LOADK     R148 K668    ; R148 := "/Lotus/Upgrades/Focus/Ward/WardFocusAbility"
1958 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1959 [-]: LOADK     R147 K649    ; R147 := "Lens"
1960 [-]: LOADK     R148 K669    ; R148 := "UNAIRU"
1961 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1962 [-]: LOADK     R147 K650    ; R147 := "Polarity"
1963 [-]: LOADK     R148 K670    ; R148 := "/Lotus/Language/TennoWay/Unairu"
1964 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1965 [-]: SETTABLE  R144 R145 R146; R144[R145] := R146
1966 [-]: LOADK     R145 8       ; R145 := 8.000000
1967 [-]: NEWTABLE  R146 0 4     ; R146 := {}
1968 [-]: LOADK     R147 K647    ; R147 := "Icon"
1969 [-]: LOADK     R148 K299    ; R148 := ""
1970 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1971 [-]: LOADK     R147 K648    ; R147 := "Ability"
1972 [-]: LOADK     R148 K299    ; R148 := ""
1973 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1974 [-]: LOADK     R147 K649    ; R147 := "Lens"
1975 [-]: LOADK     R148 K299    ; R148 := ""
1976 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1977 [-]: LOADK     R147 K650    ; R147 := "Polarity"
1978 [-]: LOADK     R148 K299    ; R148 := ""
1979 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1980 [-]: SETTABLE  R144 R145 R146; R144[R145] := R146
1981 [-]: LOADK     R145 9       ; R145 := 9.000000
1982 [-]: NEWTABLE  R146 0 4     ; R146 := {}
1983 [-]: LOADK     R147 K647    ; R147 := "Icon"
1984 [-]: LOADK     R148 K299    ; R148 := ""
1985 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1986 [-]: LOADK     R147 K648    ; R147 := "Ability"
1987 [-]: LOADK     R148 K299    ; R148 := ""
1988 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1989 [-]: LOADK     R147 K649    ; R147 := "Lens"
1990 [-]: LOADK     R148 K299    ; R148 := ""
1991 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1992 [-]: LOADK     R147 K650    ; R147 := "Polarity"
1993 [-]: LOADK     R148 K299    ; R148 := ""
1994 [-]: SETTABLE  R146 R147 R148; R146[R147] := R148
1995 [-]: SETTABLE  R144 R145 R146; R144[R145] := R146
1996 [-]: CLOSURE   R145 296     ; R145 := closure(Function #297)
1997 [-]: MOVE      R0 R17       ; R0 := R17
1998 [-]: MOVE      R0 R144      ; R0 := R144
1999 [-]: SETGLOBAL R145 K671    ; GetPolarityInfoForLens := R145
2000 [-]: CLOSURE   R145 297     ; R145 := closure(Function #298)
2001 [-]: MOVE      R0 R144      ; R0 := R144
2002 [-]: SETGLOBAL R145 K672    ; GetWayInfo := R145
2003 [-]: CLOSURE   R145 298     ; R145 := closure(Function #299)
2004 [-]: MOVE      R0 R17       ; R0 := R17
2005 [-]: SETGLOBAL R145 K673    ; ClearOperatorLookAt := R145
2006 [-]: CLOSURE   R145 299     ; R145 := closure(Function #300)
2007 [-]: MOVE      R0 R17       ; R0 := R17
2008 [-]: SETGLOBAL R145 K674    ; UpdateOperatorLookAt := R145
2009 [-]: CLOSURE   R145 300     ; R145 := closure(Function #301)
2010 [-]: SETGLOBAL R145 K675    ; IsDeluxeSkin := R145
2011 [-]: CLOSURE   R145 301     ; R145 := closure(Function #302)
2012 [-]: MOVE      R0 R17       ; R0 := R17
2013 [-]: SETGLOBAL R145 K676    ; SetupThreeColorText := R145
2014 [-]: CLOSURE   R145 302     ; R145 := closure(Function #303)
2015 [-]: SETGLOBAL R145 K677    ; SetEnergyToTeamColor := R145
2016 [-]: CLOSURE   R145 303     ; R145 := closure(Function #304)
2017 [-]: SETGLOBAL R145 K678    ; ClearTransmissionQueue := R145
2018 [-]: CLOSURE   R145 304     ; R145 := closure(Function #305)
2019 [-]: CLOSURE   R146 305     ; R146 := closure(Function #306)
2020 [-]: MOVE      R0 R145      ; R0 := R145
2021 [-]: SETGLOBAL R146 K679    ; GetProductId := R146
2022 [-]: CLOSURE   R146 306     ; R146 := closure(Function #307)
2023 [-]: MOVE      R0 R145      ; R0 := R145
2024 [-]: CLOSURE   R147 307     ; R147 := closure(Function #308)
2025 [-]: MOVE      R0 R146      ; R0 := R146
2026 [-]: SETGLOBAL R147 K680    ; CheckIOSPurchaseAvailability := R147
2027 [-]: CLOSURE   R147 308     ; R147 := closure(Function #309)
2028 [-]: CLOSURE   R148 309     ; R148 := closure(Function #310)
2029 [-]: MOVE      R0 R147      ; R0 := R147
2030 [-]: SETGLOBAL R148 K681    ; CheckSteamPurchaseAvailability := R148
2031 [-]: CLOSURE   R148 310     ; R148 := closure(Function #311)
2032 [-]: CLOSURE   R149 311     ; R149 := closure(Function #312)
2033 [-]: MOVE      R0 R148      ; R0 := R148
2034 [-]: SETGLOBAL R149 K682    ; CheckEpicPurchaseAvailability := R149
2035 [-]: CLOSURE   R149 312     ; R149 := closure(Function #313)
2036 [-]: MOVE      R0 R148      ; R0 := R148
2037 [-]: MOVE      R0 R146      ; R0 := R146
2038 [-]: MOVE      R0 R147      ; R0 := R147
2039 [-]: MOVE      R0 R145      ; R0 := R145
2040 [-]: CLOSURE   R150 313     ; R150 := closure(Function #314)
2041 [-]: MOVE      R0 R149      ; R0 := R149
2042 [-]: SETGLOBAL R150 K683    ; IsExternalProduct := R150
2043 [-]: CLOSURE   R150 314     ; R150 := closure(Function #315)
2044 [-]: CLOSURE   R151 315     ; R151 := closure(Function #316)
2045 [-]: MOVE      R0 R150      ; R0 := R150
2046 [-]: CLOSURE   R152 316     ; R152 := closure(Function #317)
2047 [-]: MOVE      R0 R145      ; R0 := R145
2048 [-]: MOVE      R0 R150      ; R0 := R150
2049 [-]: MOVE      R0 R149      ; R0 := R149
2050 [-]: SETGLOBAL R152 K684    ; ShowItem := R152
2051 [-]: CLOSURE   R152 317     ; R152 := closure(Function #318)
2052 [-]: MOVE      R0 R17       ; R0 := R17
2053 [-]: SETGLOBAL R152 K685    ; GetTreasureName := R152
2054 [-]: CLOSURE   R152 318     ; R152 := closure(Function #319)
2055 [-]: SETGLOBAL R152 K686    ; GetSecondCount := R152
2056 [-]: CLOSURE   R152 319     ; R152 := closure(Function #320)
2057 [-]: CLOSURE   R153 320     ; R153 := closure(Function #321)
2058 [-]: MOVE      R0 R152      ; R0 := R152
2059 [-]: SETGLOBAL R153 K687    ; GetMinuteCount := R153
2060 [-]: CLOSURE   R153 321     ; R153 := closure(Function #322)
2061 [-]: CLOSURE   R154 322     ; R154 := closure(Function #323)
2062 [-]: MOVE      R0 R153      ; R0 := R153
2063 [-]: SETGLOBAL R154 K688    ; GetHourCount := R154
2064 [-]: CLOSURE   R154 323     ; R154 := closure(Function #324)
2065 [-]: CLOSURE   R155 324     ; R155 := closure(Function #325)
2066 [-]: MOVE      R0 R154      ; R0 := R154
2067 [-]: SETGLOBAL R155 K689    ; GetDayCount := R155
2068 [-]: CLOSURE   R155 325     ; R155 := closure(Function #326)
2069 [-]: SETGLOBAL R155 K690    ; GetWeekCount := R155
2070 [-]: CLOSURE   R155 326     ; R155 := closure(Function #327)
2071 [-]: MOVE      R0 R154      ; R0 := R154
2072 [-]: SETGLOBAL R155 K691    ; RollForNightmareMutators := R155
2073 [-]: CLOSURE   R28 327      ; R28 := closure(Function #328)
2074 [-]: CLOSURE   R155 328     ; R155 := closure(Function #329)
2075 [-]: MOVE      R0 R28       ; R0 := R28
2076 [-]: SETGLOBAL R155 K692    ; GetOmegaCards := R155
2077 [-]: CLOSURE   R29 329      ; R29 := closure(Function #330)
2078 [-]: MOVE      R0 R28       ; R0 := R28
2079 [-]: MOVE      R0 R30       ; R0 := R30
2080 [-]: CLOSURE   R155 330     ; R155 := closure(Function #331)
2081 [-]: MOVE      R0 R29       ; R0 := R29
2082 [-]: SETGLOBAL R155 K693    ; IsOverOmegaLimit := R155
2083 [-]: CLOSURE   R30 331      ; R30 := closure(Function #332)
2084 [-]: CLOSURE   R155 332     ; R155 := closure(Function #333)
2085 [-]: MOVE      R0 R30       ; R0 := R30
2086 [-]: SETGLOBAL R155 K694    ; GetMaxOmegaCapacity := R155
2087 [-]: CLOSURE   R155 333     ; R155 := closure(Function #334)
2088 [-]: CLOSURE   R156 334     ; R156 := closure(Function #335)
2089 [-]: MOVE      R0 R155      ; R0 := R155
2090 [-]: SETGLOBAL R156 K695    ; IsCurrentSuitInfestedEnoughToHeal := R156
2091 [-]: CLOSURE   R156 335     ; R156 := closure(Function #336)
2092 [-]: MOVE      R0 R155      ; R0 := R155
2093 [-]: SETGLOBAL R156 K696    ; IsCurrentSuitFullyInfested := R156
2094 [-]: CLOSURE   R156 336     ; R156 := closure(Function #337)
2095 [-]: SETGLOBAL R156 K697    ; ShowTradeUI := R156
2096 [-]: CLOSURE   R156 337     ; R156 := closure(Function #338)
2097 [-]: SETGLOBAL R156 K698    ; UpdateScannerInfo := R156
2098 [-]: CLOSURE   R156 338     ; R156 := closure(Function #339)
2099 [-]: SETGLOBAL R156 K699    ; SetFlashlightDimness := R156
2100 [-]: CLOSURE   R156 339     ; R156 := closure(Function #340)
2101 [-]: MOVE      R0 R17       ; R0 := R17
2102 [-]: SETGLOBAL R156 K700    ; GetRewardTextForMastery := R156
2103 [-]: CLOSURE   R156 340     ; R156 := closure(Function #341)
2104 [-]: CLOSURE   R157 341     ; R157 := closure(Function #342)
2105 [-]: MOVE      R0 R54       ; R0 := R54
2106 [-]: MOVE      R0 R17       ; R0 := R17
2107 [-]: MOVE      R0 R156      ; R0 := R156
2108 [-]: CLOSURE   R158 342     ; R158 := closure(Function #343)
2109 [-]: MOVE      R0 R157      ; R0 := R157
2110 [-]: SETGLOBAL R158 K701    ; GetPresetInfo := R158
2111 [-]: CLOSURE   R158 343     ; R158 := closure(Function #344)
2112 [-]: SETGLOBAL R158 K702    ; GetClanEmblemPath := R158
2113 [-]: CLOSURE   R158 344     ; R158 := closure(Function #345)
2114 [-]: SETGLOBAL R158 K703    ; GetPersonalGoalProgress := R158
2115 [-]: CLOSURE   R158 345     ; R158 := closure(Function #346)
2116 [-]: MOVE      R0 R63       ; R0 := R63
2117 [-]: SETGLOBAL R158 K704    ; HasRelayReconstructionEnemy := R158
2118 [-]: CLOSURE   R158 346     ; R158 := closure(Function #347)
2119 [-]: SETGLOBAL R158 K705    ; ApplyWeaponRestriction := R158
2120 [-]: CLOSURE   R158 347     ; R158 := closure(Function #348)
2121 [-]: SETGLOBAL R158 K706    ; ApplyModlessLoadout := R158
2122 [-]: CLOSURE   R158 348     ; R158 := closure(Function #349)
2123 [-]: SETGLOBAL R158 K707    ; IsNoModsMode := R158
2124 [-]: CLOSURE   R158 349     ; R158 := closure(Function #350)
2125 [-]: SETGLOBAL R158 K708    ; ToggleAvatarAuras := R158
2126 [-]: CLOSURE   R158 350     ; R158 := closure(Function #351)
2127 [-]: SETGLOBAL R158 K709    ; IsFirstTimeInNode := R158
2128 [-]: CLOSURE   R158 351     ; R158 := closure(Function #352)
2129 [-]: SETGLOBAL R158 K710    ; SetEquippingGearItem := R158
2130 [-]: CLOSURE   R158 352     ; R158 := closure(Function #353)
2131 [-]: SETGLOBAL R158 K711    ; IsEquippingGearItem := R158
2132 [-]: CLOSURE   R158 353     ; R158 := closure(Function #354)
2133 [-]: CLOSURE   R159 354     ; R159 := closure(Function #355)
2134 [-]: MOVE      R0 R158      ; R0 := R158
2135 [-]: SETGLOBAL R159 K712    ; GetShipDecoRoom := R159
2136 [-]: CLOSURE   R159 355     ; R159 := closure(Function #356)
2137 [-]: SETGLOBAL R159 K713    ; GetDecoArea := R159
2138 [-]: CLOSURE   R159 356     ; R159 := closure(Function #357)
2139 [-]: MOVE      R0 R34       ; R0 := R34
2140 [-]: SETGLOBAL R159 K714    ; GetShipDecoAnchor := R159
2141 [-]: CLOSURE   R159 357     ; R159 := closure(Function #358)
2142 [-]: SETGLOBAL R159 K715    ; ShowLoadoutSelectionMenu := R159
2143 [-]: CLOSURE   R159 358     ; R159 := closure(Function #359)
2144 [-]: SETGLOBAL R159 K716    ; GetTimeOfDayLabel := R159
2145 [-]: CLOSURE   R159 359     ; R159 := closure(Function #360)
2146 [-]: SETGLOBAL R159 K717    ; CalculateTimeOfDay := R159
2147 [-]: CLOSURE   R159 360     ; R159 := closure(Function #361)
2148 [-]: CLOSURE   R160 361     ; R160 := closure(Function #362)
2149 [-]: MOVE      R0 R159      ; R0 := R159
2150 [-]: SETGLOBAL R160 K718    ; ProcessPlayerLevel := R160
2151 [-]: CLOSURE   R160 362     ; R160 := closure(Function #363)
2152 [-]: MOVE      R0 R159      ; R0 := R159
2153 [-]: MOVE      R0 R17       ; R0 := R17
2154 [-]: SETGLOBAL R160 K719    ; GetSquadMemberLoadoutInfo := R160
2155 [-]: CLOSURE   R160 363     ; R160 := closure(Function #364)
2156 [-]: MOVE      R0 R137      ; R0 := R137
2157 [-]: MOVE      R0 R97       ; R0 := R97
2158 [-]: SETGLOBAL R160 K720    ; CreateVendorConversationFunctions := R160
2159 [-]: CLOSURE   R160 364     ; R160 := closure(Function #365)
2160 [-]: MOVE      R0 R17       ; R0 := R17
2161 [-]: SETGLOBAL R160 K721    ; RegisterHideHud := R160
2162 [-]: CLOSURE   R160 365     ; R160 := closure(Function #366)
2163 [-]: MOVE      R0 R17       ; R0 := R17
2164 [-]: SETGLOBAL R160 K722    ; RegisterHideNotifications := R160
2165 [-]: CLOSURE   R160 366     ; R160 := closure(Function #367)
2166 [-]: MOVE      R0 R17       ; R0 := R17
2167 [-]: SETGLOBAL R160 K723    ; RegisterHideStarChart := R160
2168 [-]: CLOSURE   R160 367     ; R160 := closure(Function #368)
2169 [-]: MOVE      R0 R17       ; R0 := R17
2170 [-]: SETGLOBAL R160 K724    ; RegisterHideSquadOverlay := R160
2171 [-]: CLOSURE   R160 368     ; R160 := closure(Function #369)
2172 [-]: MOVE      R0 R17       ; R0 := R17
2173 [-]: SETGLOBAL R160 K725    ; RegisterHideEOM := R160
2174 [-]: CLOSURE   R160 369     ; R160 := closure(Function #370)
2175 [-]: SETGLOBAL R160 K726    ; GetEntityUnderCursor := R160
2176 [-]: CLOSURE   R160 370     ; R160 := closure(Function #371)
2177 [-]: SETGLOBAL R160 K727    ; HasDojoArchitectPermission := R160
2178 [-]: CLOSURE   R160 371     ; R160 := closure(Function #372)
2179 [-]: SETGLOBAL R160 K728    ; GetDojoConsole := R160
2180 [-]: CLOSURE   R160 372     ; R160 := closure(Function #373)
2181 [-]: SETGLOBAL R160 K729    ; IsWarlordRank := R160
2182 [-]: CLOSURE   R160 373     ; R160 := closure(Function #374)
2183 [-]: MOVE      R0 R123      ; R0 := R123
2184 [-]: MOVE      R0 R46       ; R0 := R46
2185 [-]: MOVE      R0 R17       ; R0 := R17
2186 [-]: SETGLOBAL R160 K730    ; ShowConditionalWordConfirm := R160
2187 [-]: CLOSURE   R160 374     ; R160 := closure(Function #375)
2188 [-]: SETGLOBAL R160 K731    ; GetAltFireKey := R160
2189 [-]: CLOSURE   R160 375     ; R160 := closure(Function #376)
2190 [-]: SETGLOBAL R160 K732    ; GetActiveSoundSet := R160
2191 [-]: CLOSURE   R160 376     ; R160 := closure(Function #377)
2192 [-]: SETGLOBAL R160 K733    ; InitializeTitleBookends := R160
2193 [-]: CLOSURE   R160 377     ; R160 := closure(Function #378)
2194 [-]: CLOSURE   R161 378     ; R161 := closure(Function #379)
2195 [-]: MOVE      R0 R152      ; R0 := R152
2196 [-]: MOVE      R0 R160      ; R0 := R160
2197 [-]: MOVE      R0 R17       ; R0 := R17
2198 [-]: SETGLOBAL R161 K734    ; GetHelminthUpgradeOffers := R161
2199 [-]: CLOSURE   R161 379     ; R161 := closure(Function #380)
2200 [-]: MOVE      R0 R17       ; R0 := R17
2201 [-]: MOVE      R0 R152      ; R0 := R152
2202 [-]: SETGLOBAL R161 K735    ; GetEliteAlertCustomUpgrades := R161
2203 [-]: CLOSURE   R161 380     ; R161 := closure(Function #381)
2204 [-]: SETGLOBAL R161 K736    ; AppendItemRank := R161
2205 [-]: CLOSURE   R161 381     ; R161 := closure(Function #382)
2206 [-]: MOVE      R0 R17       ; R0 := R17
2207 [-]: MOVE      R0 R18       ; R0 := R18
2208 [-]: SETGLOBAL R161 K737    ; ApplyParticleThemeColors := R161
2209 [-]: CLOSURE   R161 382     ; R161 := closure(Function #383)
2210 [-]: MOVE      R0 R18       ; R0 := R18
2211 [-]: SETGLOBAL R161 K738    ; ReplaceTextColors := R161
2212 [-]: CLOSURE   R161 383     ; R161 := closure(Function #384)
2213 [-]: MOVE      R0 R133      ; R0 := R133
2214 [-]: SETGLOBAL R161 K739    ; UpdateMailbox := R161
2215 [-]: CLOSURE   R161 384     ; R161 := closure(Function #385)
2216 [-]: MOVE      R0 R95       ; R0 := R95
2217 [-]: SETGLOBAL R161 K740    ; IsSeasonActive := R161
2218 [-]: CLOSURE   R161 385     ; R161 := closure(Function #386)
2219 [-]: MOVE      R0 R63       ; R0 := R63
2220 [-]: MOVE      R0 R42       ; R0 := R42
2221 [-]: CLOSURE   R162 386     ; R162 := closure(Function #387)
2222 [-]: MOVE      R0 R161      ; R0 := R161
2223 [-]: SETGLOBAL R162 K741    ; BuildNemesisMission := R162
2224 [-]: CLOSURE   R162 387     ; R162 := closure(Function #388)
2225 [-]: SETGLOBAL R162 K742    ; ShouldHideRecipe := R162
2226 [-]: CLOSURE   R162 388     ; R162 := closure(Function #389)
2227 [-]: SETGLOBAL R162 K743    ; CheckLetterSpacing := R162
2228 [-]: CLOSURE   R162 389     ; R162 := closure(Function #390)
2229 [-]: SETGLOBAL R162 K744    ; ServerSideSettings := R162
2230 [-]: CLOSURE   R162 390     ; R162 := closure(Function #391)
2231 [-]: MOVE      R0 R17       ; R0 := R17
2232 [-]: CLOSURE   R163 391     ; R163 := closure(Function #392)
2233 [-]: MOVE      R0 R162      ; R0 := R162
2234 [-]: SETGLOBAL R163 K745    ; FriendLimitReached := R163
2235 [-]: CLOSURE   R163 392     ; R163 := closure(Function #393)
2236 [-]: MOVE      R0 R46       ; R0 := R46
2237 [-]: MOVE      R0 R17       ; R0 := R17
2238 [-]: CLOSURE   R164 393     ; R164 := closure(Function #394)
2239 [-]: MOVE      R0 R163      ; R0 := R163
2240 [-]: MOVE      R0 R162      ; R0 := R162
2241 [-]: MOVE      R0 R123      ; R0 := R123
2242 [-]: SETGLOBAL R164 K746    ; AddFriend := R164
2243 [-]: CLOSURE   R164 394     ; R164 := closure(Function #395)
2244 [-]: SETGLOBAL R164 K747    ; GetSyndicateBackgroundAlignments := R164
2245 [-]: CLOSURE   R164 395     ; R164 := closure(Function #396)
2246 [-]: SETGLOBAL R164 K748    ; ForceCloseTransmission := R164
2247 [-]: CLOSURE   R164 396     ; R164 := closure(Function #397)
2248 [-]: SETGLOBAL R164 K749    ; GetNetworkAnalysisURL := R164
2249 [-]: CLOSURE   R164 397     ; R164 := closure(Function #398)
2250 [-]: SETGLOBAL R164 K750    ; AvatarHasActiveActions := R164
2251 [-]: CLOSURE   R164 398     ; R164 := closure(Function #399)
2252 [-]: MOVE      R0 R9        ; R0 := R9
2253 [-]: SETGLOBAL R164 K751    ; ShouldHideConsumable := R164
2254 [-]: CLOSURE   R164 399     ; R164 := closure(Function #400)
2255 [-]: MOVE      R0 R158      ; R0 := R158
2256 [-]: SETGLOBAL R164 K752    ; ShouldShowRoomDecorationReset := R164
2257 [-]: CLOSURE   R164 400     ; R164 := closure(Function #401)
2258 [-]: MOVE      R0 R63       ; R0 := R63
2259 [-]: SETGLOBAL R164 K753    ; GetMissionName := R164
2260 [-]: CLOSURE   R164 401     ; R164 := closure(Function #402)
2261 [-]: SETGLOBAL R164 K754    ; HasUnlockedHardMode := R164
2262 [-]: CLOSURE   R164 402     ; R164 := closure(Function #403)
2263 [-]: CLOSURE   R165 403     ; R165 := closure(Function #404)
2264 [-]: MOVE      R0 R164      ; R0 := R164
2265 [-]: MOVE      R0 R17       ; R0 := R17
2266 [-]: MOVE      R0 R161      ; R0 := R161
2267 [-]: MOVE      R0 R40       ; R0 := R40
2268 [-]: MOVE      R0 R41       ; R0 := R41
2269 [-]: MOVE      R0 R102      ; R0 := R102
2270 [-]: SETGLOBAL R165 K755    ; GetMissionVoteInfo := R165
2271 [-]: CLOSURE   R165 404     ; R165 := closure(Function #405)
2272 [-]: SETGLOBAL R165 K756    ; BuildMissionMapString := R165
2273 [-]: CLOSURE   R165 405     ; R165 := closure(Function #406)
2274 [-]: MOVE      R0 R53       ; R0 := R53
2275 [-]: MOVE      R0 R17       ; R0 := R17
2276 [-]: SETGLOBAL R165 K757    ; RefreshPetsAfterSell := R165
2277 [-]: CLOSURE   R165 406     ; R165 := closure(Function #407)
2278 [-]: SETGLOBAL R165 K758    ; GetResearchProgress := R165
2279 [-]: CLOSURE   R165 407     ; R165 := closure(Function #408)
2280 [-]: CLOSURE   R166 408     ; R166 := closure(Function #409)
2281 [-]: MOVE      R0 R165      ; R0 := R165
2282 [-]: SETGLOBAL R166 K759    ; ValidateTrueMaster := R166
2283 [-]: CLOSURE   R166 409     ; R166 := closure(Function #410)
2284 [-]: MOVE      R0 R165      ; R0 := R165
2285 [-]: SETGLOBAL R166 K760    ; SetMOTD := R166
2286 [-]: CLOSURE   R166 410     ; R166 := closure(Function #411)
2287 [-]: SETGLOBAL R166 K761    ; GetSlotType := R166
2288 [-]: CLOSURE   R166 411     ; R166 := closure(Function #412)
2289 [-]: SETGLOBAL R166 K762    ; AutofocusTextfield := R166
2290 [-]: CLOSURE   R166 412     ; R166 := closure(Function #413)
2291 [-]: MOVE      R0 R133      ; R0 := R133
2292 [-]: MOVE      R0 R63       ; R0 := R63
2293 [-]: SETGLOBAL R166 K763    ; ReturnToDojo := R166
2294 [-]: CLOSURE   R166 413     ; R166 := closure(Function #414)
2295 [-]: SETGLOBAL R166 K764    ; IsPlayerInCrewship := R166
2296 [-]: CLOSURE   R166 414     ; R166 := closure(Function #415)
2297 [-]: SETGLOBAL R166 K765    ; ApplyCensorshipOverridesAndAttachments := R166
2298 [-]: CLOSURE   R166 415     ; R166 := closure(Function #416)
2299 [-]: CLOSURE   R167 416     ; R167 := closure(Function #417)
2300 [-]: MOVE      R0 R17       ; R0 := R17
2301 [-]: MOVE      R0 R46       ; R0 := R46
2302 [-]: MOVE      R0 R166      ; R0 := R166
2303 [-]: SETGLOBAL R167 K766    ; ToggleIgnoreUser := R167
2304 [-]: CLOSURE   R167 417     ; R167 := closure(Function #418)
2305 [-]: SETGLOBAL R167 K767    ; IsEmptyLevel := R167
2306 [-]: CLOSURE   R34 418      ; R34 := closure(Function #419)
2307 [-]: CLOSURE   R167 419     ; R167 := closure(Function #420)
2308 [-]: MOVE      R0 R34       ; R0 := R34
2309 [-]: SETGLOBAL R167 K768    ; IsCampLevel := R167
2310 [-]: CLOSURE   R35 420      ; R35 := closure(Function #421)
2311 [-]: CLOSURE   R167 421     ; R167 := closure(Function #422)
2312 [-]: MOVE      R0 R35       ; R0 := R35
2313 [-]: SETGLOBAL R167 K769    ; IsApartmentLevel := R167
2314 [-]: CLOSURE   R167 422     ; R167 := closure(Function #423)
2315 [-]: MOVE      R0 R34       ; R0 := R34
2316 [-]: SETGLOBAL R167 K770    ; SetLoginCameraSpot := R167
2317 [-]: CLOSURE   R167 423     ; R167 := closure(Function #424)
2318 [-]: MOVE      R0 R45       ; R0 := R45
2319 [-]: SETGLOBAL R167 K771    ; QuestRequiresLotusHelmet := R167
2320 [-]: CLOSURE   R167 424     ; R167 := closure(Function #425)
2321 [-]: MOVE      R0 R46       ; R0 := R46
2322 [-]: MOVE      R0 R123      ; R0 := R123
2323 [-]: MOVE      R0 R17       ; R0 := R17
2324 [-]: SETGLOBAL R167 K772    ; ShowBeginZarimanQuestWarning := R167
2325 [-]: CLOSURE   R167 425     ; R167 := closure(Function #426)
2326 [-]: SETGLOBAL R167 K773    ; GetLocalizedLotusName := R167
2327 [-]: CLOSURE   R167 426     ; R167 := closure(Function #427)
2328 [-]: MOVE      R0 R34       ; R0 := R34
2329 [-]: SETGLOBAL R167 K774    ; PlayLoginAnim := R167
2330 [-]: CLOSURE   R167 427     ; R167 := closure(Function #428)
2331 [-]: SETGLOBAL R167 K775    ; SetTimeOfDay := R167
2332 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 476
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0x5b89142c]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1[0xa534c3ac]
  9 [-]: TAILCALL  R2 2 0       ; R2,... := R2(R3)
 10 [-]: RETURN    R2 0         ; return R2,...
 11 [-]: LOADNIL   R2 R2        ; R2 := nil
 12 [-]: RETURN    R2 2         ; return R2
 13 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 484
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xf2deaf69]
  2 [-]: GETGLOBAL R3 K1        ; R3 := gLotusVehicleAvatarType
  3 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 20
  5 [-]: JMP       20           ; PC := 20
  6 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0xff005826]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0xcaa5de6d]
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: GETGLOBAL R5 K5        ; R5 := 0xa421af95
 16 [-]: CALL      R5 1 2       ; R5 := R5()
 17 [-]: LOADBOOL  R6 1 0       ; R6 := true
 18 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 19 [-]: MOVE      R0 R1        ; R0 := R1
 20 [-]: RETURN    R0 2         ; return R0
 21 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 495
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R82 := R2[0x06d055f9]
  3 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 6
  6 [-]: LOADBOOL  R3 1 0       ; R3 := true
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: LOADK     R5 2         ; R5 := 2.000000
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: GETGLOBAL R3 K2        ; R3 := 0xcd0165a3
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETTABLE  R4 R3 K3     ; R4 := R3["mMovie"]
 14 [-]: TEST      R4 0         ; if not R4 then PC := 24
 15 [-]: JMP       24           ; PC := 24
 16 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 17 [-]: MOVE      R5 R0        ; R5 := R0
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 1         ; if R4 then PC := 30
 20 [-]: JMP       30           ; PC := 30
 21 [-]: GETTABLE  R4 R3 K3     ; R4 := R3["mMovie"]
 22 [-]: EQ        1 R4 R0      ; if R4 == R0 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: ADD       R2 R2 K5     ; R2 := R2 + 1.000000
 25 [-]: GETGLOBAL R4 K2        ; R4 := 0xcd0165a3
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: MOVE      R3 R4        ; R3 := R4
 29 [-]: JMP       13           ; PC := 13
 30 [-]: RETURN    R3 2         ; return R3
 31 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 505
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["hasCheckedTutorial"]
  3 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["hasCheckedTutorial"]
  7 [-]: TEST      R0 1         ; if R0 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADBOOL  R0 1 0       ; R0 := true
 10 [-]: RETURN    R0 2         ; return R0
 11 [-]: GETGLOBAL R0 K0        ; R0 := _T
 12 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["tutorialActive"]
 13 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETGLOBAL R0 K0        ; R0 := _T
 16 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["tutorialActive"]
 17 [-]: JMP       20           ; PC := 20
 18 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 19
 19 [-]: LOADBOOL  R0 1 0       ; R0 := true
 20 [-]: RETURN    R0 2         ; return R0
 21 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 513
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  51

  1 [-]: NEWTABLE  R0 36 0      ; R0 := {}
  2 [-]: LOADK     R1 K0        ; R1 := 4591633.000000
  3 [-]: LOADK     R2 K1        ; R2 := 6756120.000000
  4 [-]: LOADK     R3 K2        ; R3 := 9773092.000000
  5 [-]: LOADK     R4 K3        ; R4 := 12265515.000000
  6 [-]: LOADK     R5 K4        ; R5 := 13708851.000000
  7 [-]: LOADK     R6 K5        ; R6 := 4003870.000000
  8 [-]: LOADK     R7 K6        ; R7 := 5775914.000000
  9 [-]: LOADK     R8 K7        ; R8 := 8663871.000000
 10 [-]: LOADK     R9 K8        ; R9 := 11421784.000000
 11 [-]: LOADK     R10 K9       ; R10 := 13260653.000000
 12 [-]: LOADK     R11 K10      ; R11 := 2100501.000000
 13 [-]: LOADK     R12 K11      ; R12 := 3873573.000000
 14 [-]: LOADK     R13 K12      ; R13 := 7419972.000000
 15 [-]: LOADK     R14 K13      ; R14 := 11428207.000000
 16 [-]: LOADK     R15 K14      ; R15 := 13928599.000000
 17 [-]: LOADK     R16 K15      ; R16 := 2492950.000000
 18 [-]: LOADK     R17 K16      ; R17 := 4067364.000000
 19 [-]: LOADK     R18 K17      ; R18 := 7216189.000000
 20 [-]: LOADK     R19 K18      ; R19 := 10299227.000000
 21 [-]: LOADK     R20 K19      ; R20 := 12464506.000000
 22 [-]: LOADK     R21 K20      ; R21 := 987681.000000
 23 [-]: LOADK     R22 K21      ; R22 := 1448500.000000
 24 [-]: LOADK     R23 K22      ; R23 := 2502747.000000
 25 [-]: LOADK     R24 K23      ; R24 := 3950990.000000
 26 [-]: LOADK     R25 K24      ; R25 := 5334711.000000
 27 [-]: LOADK     R26 K25      ; R26 := 530470.000000
 28 [-]: LOADK     R27 K26      ; R27 := 797252.000000
 29 [-]: LOADK     R28 K27      ; R28 := 1460087.000000
 30 [-]: LOADK     R29 K28      ; R29 := 1994408.000000
 31 [-]: LOADK     R30 K29      ; R30 := 2396358.000000
 32 [-]: LOADK     R31 K30      ; R31 := 930629.000000
 33 [-]: LOADK     R32 K31      ; R32 := 1526113.000000
 34 [-]: LOADK     R33 K32      ; R33 := 2716301.000000
 35 [-]: LOADK     R34 K33      ; R34 := 4169655.000000
 36 [-]: LOADK     R35 K34      ; R35 := 5619666.000000
 37 [-]: LOADK     R36 K35      ; R36 := 1650218.000000
 38 [-]: LOADK     R37 K36      ; R37 := 2442557.000000
 39 [-]: LOADK     R38 K37      ; R38 := 3828063.000000
 40 [-]: LOADK     R39 K38      ; R39 := 5543563.000000
 41 [-]: LOADK     R40 K39      ; R40 := 7388337.000000
 42 [-]: LOADK     R41 K40      ; R41 := 1125400.000000
 43 [-]: LOADK     R42 K41      ; R42 := 1721894.000000
 44 [-]: LOADK     R43 K42      ; R43 := 2914624.000000
 45 [-]: LOADK     R44 K43      ; R44 := 4303198.000000
 46 [-]: LOADK     R45 K44      ; R45 := 5491068.000000
 47 [-]: LOADK     R46 K45      ; R46 := 3816203.000000
 48 [-]: LOADK     R47 K46      ; R47 := 6317074.000000
 49 [-]: LOADK     R48 K47      ; R48 := 9409055.000000
 50 [-]: LOADK     R49 K48      ; R49 := 12106284.000000
 51 [-]: LOADK     R50 K49      ; R50 := 13750327.000000
 52 [-]: SETLIST   R0 50 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 50
 53 [-]: LOADK     R1 K50       ; R1 := 5916201.000000
 54 [-]: LOADK     R2 K51       ; R2 := 8347962.000000
 55 [-]: LOADK     R3 K52       ; R3 := 11111504.000000
 56 [-]: LOADK     R4 K53       ; R4 := 13546858.000000
 57 [-]: LOADK     R5 K54       ; R5 := 15126918.000000
 58 [-]: LOADK     R6 K55       ; R6 := 8143131.000000
 59 [-]: LOADK     R7 K56       ; R7 := 9589797.000000
 60 [-]: LOADK     R8 K57       ; R8 := 11366711.000000
 61 [-]: LOADK     R9 K58       ; R9 := 13014608.000000
 62 [-]: LOADK     R10 K59      ; R10 := 14530158.000000
 63 [-]: LOADK     R11 K60      ; R11 := 10107422.000000
 64 [-]: LOADK     R12 K61      ; R12 := 11751209.000000
 65 [-]: LOADK     R13 K62      ; R13 := 13529661.000000
 66 [-]: LOADK     R14 K63      ; R14 := 14786650.000000
 67 [-]: LOADK     R15 K64      ; R15 := 15254401.000000
 68 [-]: LOADK     R16 K65      ; R16 := 3282697.000000
 69 [-]: LOADK     R17 K66      ; R17 := 6301969.000000
 70 [-]: LOADK     R18 K67      ; R18 := 10767646.000000
 71 [-]: LOADK     R19 K68      ; R19 := 13726758.000000
 72 [-]: LOADK     R20 K69      ; R20 := 14127655.000000
 73 [-]: LOADK     R21 K70      ; R21 := 2694428.000000
 74 [-]: LOADK     R22 K71      ; R22 := 4994866.000000
 75 [-]: LOADK     R23 K72      ; R23 := 9398364.000000
 76 [-]: LOADK     R24 K73      ; R24 := 13213582.000000
 77 [-]: LOADK     R25 K74      ; R25 := 14991277.000000
 78 [-]: LOADK     R26 K75      ; R26 := 2631460.000000
 79 [-]: LOADK     R27 K76      ; R27 := 6117971.000000
 80 [-]: LOADK     R28 K77      ; R28 := 12499631.000000
 81 [-]: LOADK     R29 K78      ; R29 := 16118763.000000
 82 [-]: LOADK     R30 K79      ; R30 := 16777215.000000
 83 [-]: LOADK     R31 K80      ; R31 := 2106148.000000
 84 [-]: LOADK     R32 K81      ; R32 := 4673359.000000
 85 [-]: LOADK     R33 K82      ; R33 := 9872548.000000
 86 [-]: LOADK     R34 K83      ; R34 := 14082529.000000
 87 [-]: LOADK     R35 K84      ; R35 := 15989754.000000
 88 [-]: LOADK     R36 K85      ; R36 := 1908258.000000
 89 [-]: LOADK     R37 K86      ; R37 := 4145995.000000
 90 [-]: LOADK     R38 K87      ; R38 := 9080479.000000
 91 [-]: LOADK     R39 K88      ; R39 := 13225437.000000
 92 [-]: LOADK     R40 K89      ; R40 := 15199223.000000
 93 [-]: SETLIST   R0 40 2      ; R0[(2-1)*FPF+i] := R(0+i), 1 <= i <= 40
 94 [-]: RETURN    R0 2         ; return R0
 95 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 538
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: NEWTABLE  R0 15 0      ; R0 := {}
  2 [-]: NEWTABLE  R1 0 2       ; R1 := {}
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x7ed0a956
  4 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Types/Game/KubrowPet/AdventurerKubrowPetPowerSuit"
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: SETTABLE  R1 K0 R2     ; R1["Type"] := R2
  7 [-]: SETTABLE  R1 K3 K4     ; R1["Name"] := "/Lotus/Language/Items/AdventurerKubrowName"
  8 [-]: NEWTABLE  R2 0 2       ; R2 := {}
  9 [-]: GETGLOBAL R3 K1        ; R3 := 0x7ed0a956
 10 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Types/Game/KubrowPet/FurtiveKubrowPetPowerSuit"
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: SETTABLE  R2 K0 R3     ; R2["Type"] := R3
 13 [-]: SETTABLE  R2 K3 K6     ; R2["Name"] := "/Lotus/Language/Items/FurtiveKubrowName"
 14 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 15 [-]: GETGLOBAL R4 K1        ; R4 := 0x7ed0a956
 16 [-]: LOADK     R5 K7        ; R5 := "/Lotus/Types/Game/KubrowPet/GuardKubrowPetPowerSuit"
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: SETTABLE  R3 K0 R4     ; R3["Type"] := R4
 19 [-]: SETTABLE  R3 K3 K8     ; R3["Name"] := "/Lotus/Language/Items/GuardKubrowName"
 20 [-]: NEWTABLE  R4 0 2       ; R4 := {}
 21 [-]: GETGLOBAL R5 K1        ; R5 := 0x7ed0a956
 22 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Types/Game/KubrowPet/HunterKubrowPetPowerSuit"
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: SETTABLE  R4 K0 R5     ; R4["Type"] := R5
 25 [-]: SETTABLE  R4 K3 K10    ; R4["Name"] := "/Lotus/Language/Items/HunterKubrowName"
 26 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 27 [-]: GETGLOBAL R6 K1        ; R6 := 0x7ed0a956
 28 [-]: LOADK     R7 K11       ; R7 := "/Lotus/Types/Game/KubrowPet/RetrieverKubrowPetPowerSuit"
 29 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 30 [-]: SETTABLE  R5 K0 R6     ; R5["Type"] := R6
 31 [-]: SETTABLE  R5 K3 K12    ; R5["Name"] := "/Lotus/Language/Items/RetrieverKubrowName"
 32 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 33 [-]: GETGLOBAL R7 K1        ; R7 := 0x7ed0a956
 34 [-]: LOADK     R8 K13       ; R8 := "/Lotus/Types/Game/KubrowPet/ChargerKubrowPetPowerSuit"
 35 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 36 [-]: SETTABLE  R6 K0 R7     ; R6["Type"] := R7
 37 [-]: SETTABLE  R6 K3 K14    ; R6["Name"] := "/Lotus/Language/Items/InfestedKubrowName"
 38 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 39 [-]: GETGLOBAL R8 K1        ; R8 := 0x7ed0a956
 40 [-]: LOADK     R9 K15       ; R9 := "/Lotus/Types/Game/CatbrowPet/MirrorCatbrowPetPowerSuit"
 41 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 42 [-]: SETTABLE  R7 K0 R8     ; R7["Type"] := R8
 43 [-]: SETTABLE  R7 K3 K16    ; R7["Name"] := "/Lotus/Language/Items/MirrorCatbrowName"
 44 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 45 [-]: GETGLOBAL R9 K1        ; R9 := 0x7ed0a956
 46 [-]: LOADK     R10 K17      ; R10 := "/Lotus/Types/Game/CatbrowPet/CheshireCatbrowPetPowerSuit"
 47 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 48 [-]: SETTABLE  R8 K0 R9     ; R8["Type"] := R9
 49 [-]: SETTABLE  R8 K3 K18    ; R8["Name"] := "/Lotus/Language/Items/CheshireCatbrowName"
 50 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 51 [-]: GETGLOBAL R10 K1       ; R10 := 0x7ed0a956
 52 [-]: LOADK     R11 K19      ; R11 := "/Lotus/Types/Game/CatbrowPet/VampireCatbrowPetPowerSuit"
 53 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 54 [-]: SETTABLE  R9 K0 R10    ; R9["Type"] := R10
 55 [-]: SETTABLE  R9 K3 K20    ; R9["Name"] := "/Lotus/Language/Pets/VampireKavatName"
 56 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 57 [-]: GETGLOBAL R11 K1       ; R11 := 0x7ed0a956
 58 [-]: LOADK     R12 K21      ; R12 := "/Lotus/Types/Friendly/Pets/CreaturePets/VizierPredatorKubrowPetPowerSuit"
 59 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 60 [-]: SETTABLE  R10 K0 R11   ; R10["Type"] := R11
 61 [-]: SETTABLE  R10 K3 K22   ; R10["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedPredatorCommonName"
 62 [-]: NEWTABLE  R11 0 2      ; R11 := {}
 63 [-]: GETGLOBAL R12 K1       ; R12 := 0x7ed0a956
 64 [-]: LOADK     R13 K23      ; R13 := "/Lotus/Types/Friendly/Pets/CreaturePets/MedjayPredatorKubrowPetPowerSuit"
 65 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 66 [-]: SETTABLE  R11 K0 R12   ; R11["Type"] := R12
 67 [-]: SETTABLE  R11 K3 K24   ; R11["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedPredatorRareName"
 68 [-]: NEWTABLE  R12 0 2      ; R12 := {}
 69 [-]: GETGLOBAL R13 K1       ; R13 := 0x7ed0a956
 70 [-]: LOADK     R14 K25      ; R14 := "/Lotus/Types/Friendly/Pets/CreaturePets/PharaohPredatorKubrowPetPowerSuit"
 71 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 72 [-]: SETTABLE  R12 K0 R13   ; R12["Type"] := R13
 73 [-]: SETTABLE  R12 K3 K26   ; R12["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedPredatorUncommonName"
 74 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 75 [-]: GETGLOBAL R14 K1       ; R14 := 0x7ed0a956
 76 [-]: LOADK     R15 K27      ; R15 := "/Lotus/Types/Friendly/Pets/CreaturePets/ArmoredInfestedCatbrowPetPowerSuit"
 77 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 78 [-]: SETTABLE  R13 K0 R14   ; R13["Type"] := R14
 79 [-]: SETTABLE  R13 K3 K28   ; R13["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedCritterRareName"
 80 [-]: NEWTABLE  R14 0 2      ; R14 := {}
 81 [-]: GETGLOBAL R15 K1       ; R15 := 0x7ed0a956
 82 [-]: LOADK     R16 K29      ; R16 := "/Lotus/Types/Friendly/Pets/CreaturePets/HornedInfestedCatbrowPetPowerSuit"
 83 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 84 [-]: SETTABLE  R14 K0 R15   ; R14["Type"] := R15
 85 [-]: SETTABLE  R14 K3 K30   ; R14["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedCritterUncommonName"
 86 [-]: NEWTABLE  R15 0 2      ; R15 := {}
 87 [-]: GETGLOBAL R16 K1       ; R16 := 0x7ed0a956
 88 [-]: LOADK     R17 K31      ; R17 := "/Lotus/Types/Friendly/Pets/CreaturePets/VulpineInfestedCatbrowPetPowerSuit"
 89 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 90 [-]: SETTABLE  R15 K0 R16   ; R15["Type"] := R16
 91 [-]: SETTABLE  R15 K3 K32   ; R15["Name"] := "/Lotus/Language/InfestedMicroplanet/InfestedCritterCommonName"
 92 [-]: SETLIST   R0 15 1      ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 15
 93 [-]: LOADK     R1 1         ; R1 := 1.000000
 94 [-]: LEN       R2 R0        ; R2 := # R0
 95 [-]: LOADK     R3 1         ; R3 := 1.000000
 96 [-]: FORPREP   R1 102       ; R1 -= R3; PC := 102
 97 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 98 [-]: GETGLOBAL R6 K34       ; R6 := 0x0032441c
 99 [-]: GETTABLE  R6 R6 K35    ; R6 := R6["UITexture_CompanionIcons"]
100 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
101 [-]: SETTABLE  R5 K33 R6    ; R5["Icon"] := R6
102 [-]: FORLOOP   R1 97        ; R1 += R3; if R1 <= R2 then begin PC := 97; R4 := R1 end
103 [-]: RETURN    R0 2         ; return R0
104 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 567
; #Upvalues:       1
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R7 K0        ; R7 := 0x603636ad
  2 [-]: LOADK     R8 K1        ; R8 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: LOADBOOL  R9 0 0       ; R9 := false
  4 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
  5 [-]: GETGLOBAL R8 K0        ; R8 := 0x603636ad
  6 [-]: LOADK     R9 K2        ; R9 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: LOADBOOL  R10 0 0      ; R10 := false
  8 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
  9 [-]: GETGLOBAL R9 K0        ; R9 := 0x603636ad
 10 [-]: LOADK     R10 K3       ; R10 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: LOADBOOL  R11 0 0      ; R11 := false
 12 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 13 [-]: GETGLOBAL R10 K0       ; R10 := 0x603636ad
 14 [-]: LOADK     R11 K4       ; R11 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: LOADBOOL  R12 0 0      ; R12 := false
 16 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 17 [-]: TEST      R5 0         ; if not R5 then PC := 260
 18 [-]: JMP       260          ; PC := 260
 19 [-]: EQ        1 R5 K5      ; if R5 == "Compact" then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: EQ        1 R5 K6      ; if R5 == "CompactTwoMax" then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 164
 24 [-]: JMP       164          ; PC := 164
 25 [-]: LT        0 K8 R1      ; if 0.000000 >= R1 then PC := 76
 26 [-]: JMP       76           ; PC := 76
 27 [-]: EQ        0 R5 K6      ; if R5 ~= "CompactTwoMax" then PC := 43
 28 [-]: JMP       43           ; PC := 43
 29 [-]: MOVE      R11 R6       ; R11 := R6
 30 [-]: GETGLOBAL R12 K9       ; R12 := 0x7f5022cf
 31 [-]: GETTABLE  R12 R12 K10  ; R82 := R12[0xe8072ded]
 32 [-]: LOADK     R13 K11      ; R13 := "%d"
 33 [-]: MOVE      R14 R7       ; R14 := R7
 34 [-]: LOADK     R15 K12      ; R15 := " %d"
 35 [-]: MOVE      R16 R8       ; R16 := R8
 36 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
 37 [-]: MOVE      R14 R1       ; R14 := R1
 38 [-]: MOVE      R15 R2       ; R15 := R2
 39 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 40 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 41 [-]: RETURN    R11 2        ; return R11
 42 [-]: JMP       298          ; PC := 298
 43 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 56
 44 [-]: JMP       56           ; PC := 56
 45 [-]: MOVE      R11 R6       ; R11 := R6
 46 [-]: GETGLOBAL R12 K9       ; R12 := 0x7f5022cf
 47 [-]: GETTABLE  R12 R12 K10  ; R82 := R12[0xe8072ded]
 48 [-]: LOADK     R13 K11      ; R13 := "%d"
 49 [-]: MOVE      R14 R7       ; R14 := R7
 50 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 51 [-]: MOVE      R14 R1       ; R14 := R1
 52 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 53 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 54 [-]: RETURN    R11 2        ; return R11
 55 [-]: JMP       298          ; PC := 298
 56 [-]: MOVE      R11 R6       ; R11 := R6
 57 [-]: GETGLOBAL R12 K9       ; R12 := 0x7f5022cf
 58 [-]: GETTABLE  R12 R12 K10  ; R82 := R12[0xe8072ded]
 59 [-]: LOADK     R13 K11      ; R13 := "%d"
 60 [-]: MOVE      R14 R7       ; R14 := R7
 61 [-]: LOADK     R15 K12      ; R15 := " %d"
 62 [-]: MOVE      R16 R8       ; R16 := R8
 63 [-]: LOADK     R17 K12      ; R17 := " %d"
 64 [-]: MOVE      R18 R9       ; R18 := R9
 65 [-]: LOADK     R19 K12      ; R19 := " %d"
 66 [-]: MOVE      R20 R10      ; R20 := R10
 67 [-]: CONCAT    R13 R13 R20  ; R13 := R13 .. R14 .. R15 .. R16 .. R17 .. R18 .. R19 .. R20
 68 [-]: MOVE      R14 R1       ; R14 := R1
 69 [-]: MOVE      R15 R2       ; R15 := R2
 70 [-]: MOVE      R16 R3       ; R16 := R3
 71 [-]: MOVE      R17 R4       ; R17 := R4
 72 [-]: CALL      R12 6 2      ; R12 := R12(R13,R14,R15,R16,R17)
 73 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 74 [-]: RETURN    R11 2        ; return R11
 75 [-]: JMP       298          ; PC := 298
 76 [-]: LT        0 K8 R2      ; if 0.000000 >= R2 then PC := 124
 77 [-]: JMP       124          ; PC := 124
 78 [-]: EQ        0 R5 K6      ; if R5 ~= "CompactTwoMax" then PC := 94
 79 [-]: JMP       94           ; PC := 94
 80 [-]: MOVE      R11 R6       ; R11 := R6
 81 [-]: GETGLOBAL R12 K9       ; R12 := 0x7f5022cf
 82 [-]: GETTABLE  R12 R12 K10  ; R82 := R12[0xe8072ded]
 83 [-]: LOADK     R13 K11      ; R13 := "%d"
 84 [-]: MOVE      R14 R8       ; R14 := R8
 85 [-]: LOADK     R15 K12      ; R15 := " %d"
 86 [-]: MOVE      R16 R9       ; R16 := R9
 87 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
 88 [-]: MOVE      R14 R2       ; R14 := R2
 89 [-]: MOVE      R15 R3       ; R15 := R3
 90 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 91 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 92 [-]: RETURN    R11 2        ; return R11
 93 [-]: JMP       298          ; PC := 298
 94 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 107
 95 [-]: JMP       107          ; PC := 107
 96 [-]: MOVE      R11 R6       ; R11 := R6
 97 [-]: GETGLOBAL R12 K9       ; R12 := 0x7f5022cf
 98 [-]: GETTABLE  R12 R12 K10  ; R82 := R12[0xe8072ded]
 99 [-]: LOADK     R13 K11      ; R13 := "%d"
100 [-]: MOVE      R14 R8       ; R14 := R8
101 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
102 [-]: MOVE      R14 R2       ; R14 := R2
103 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
104 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
105 [-]: RETURN    R11 2        ; return R11
106 [-]: JMP       298          ; PC := 298
107 [-]: MOVE      R11 R6       ; R11 := R6
108 [-]: GETGLOBAL R12 K9       ; R12 := 0x7f5022cf
109 [-]: GETTABLE  R12 R12 K10  ; R82 := R12[0xe8072ded]
110 [-]: LOADK     R13 K11      ; R13 := "%d"
111 [-]: MOVE      R14 R8       ; R14 := R8
112 [-]: LOADK     R15 K12      ; R15 := " %d"
113 [-]: MOVE      R16 R9       ; R16 := R9
114 [-]: LOADK     R17 K12      ; R17 := " %d"
115 [-]: MOVE      R18 R10      ; R18 := R10
116 [-]: CONCAT    R13 R13 R18  ; R13 := R13 .. R14 .. R15 .. R16 .. R17 .. R18
117 [-]: MOVE      R14 R2       ; R14 := R2
118 [-]: MOVE      R15 R3       ; R15 := R3
119 [-]: MOVE      R16 R4       ; R16 := R4
120 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
121 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
122 [-]: RETURN    R11 2        ; return R11
123 [-]: JMP       298          ; PC := 298
124 [-]: LT        0 K8 R3      ; if 0.000000 >= R3 then PC := 153
125 [-]: JMP       153          ; PC := 153
126 [-]: EQ        0 R5 K7      ; if R5 ~= "CompactOne" then PC := 139
127 [-]: JMP       139          ; PC := 139
128 [-]: MOVE      R11 R6       ; R11 := R6
129 [-]: GETGLOBAL R12 K9       ; R12 := 0x7f5022cf
130 [-]: GETTABLE  R12 R12 K10  ; R82 := R12[0xe8072ded]
131 [-]: LOADK     R13 K11      ; R13 := "%d"
132 [-]: MOVE      R14 R9       ; R14 := R9
133 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
134 [-]: MOVE      R14 R3       ; R14 := R3
135 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
136 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
137 [-]: RETURN    R11 2        ; return R11
138 [-]: JMP       298          ; PC := 298
139 [-]: MOVE      R11 R6       ; R11 := R6
140 [-]: GETGLOBAL R12 K9       ; R12 := 0x7f5022cf
141 [-]: GETTABLE  R12 R12 K10  ; R82 := R12[0xe8072ded]
142 [-]: LOADK     R13 K11      ; R13 := "%d"
143 [-]: MOVE      R14 R9       ; R14 := R9
144 [-]: LOADK     R15 K12      ; R15 := " %d"
145 [-]: MOVE      R16 R10      ; R16 := R10
146 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
147 [-]: MOVE      R14 R3       ; R14 := R3
148 [-]: MOVE      R15 R4       ; R15 := R4
149 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
150 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
151 [-]: RETURN    R11 2        ; return R11
152 [-]: JMP       298          ; PC := 298
153 [-]: MOVE      R11 R6       ; R11 := R6
154 [-]: GETGLOBAL R12 K9       ; R12 := 0x7f5022cf
155 [-]: GETTABLE  R12 R12 K10  ; R82 := R12[0xe8072ded]
156 [-]: LOADK     R13 K11      ; R13 := "%d"
157 [-]: MOVE      R14 R10      ; R14 := R10
158 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
159 [-]: MOVE      R14 R4       ; R14 := R4
160 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
161 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
162 [-]: RETURN    R11 2        ; return R11
163 [-]: JMP       298          ; PC := 298
164 [-]: EQ        0 R5 K13     ; if R5 ~= "HoursOrMinutes" then PC := 193
165 [-]: JMP       193          ; PC := 193
166 [-]: EQ        0 R1 K8      ; if R1 ~= 0.000000 then PC := 193
167 [-]: JMP       193          ; PC := 193
168 [-]: EQ        0 R2 K8      ; if R2 ~= 0.000000 then PC := 193
169 [-]: JMP       193          ; PC := 193
170 [-]: GETUPVAL  R11 U0       ; R11 := U0
171 [-]: GETTABLE  R11 R11 K14  ; R82 := R11[0x06d055f9]
172 [-]: LT        1 K15 R3     ; if 1.000000 < R3 then PC := 175
173 [-]: JMP       175          ; PC := 175
174 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 175
175 [-]: LOADBOOL  R12 1 0      ; R12 := true
176 [-]: LOADK     R13 K16      ; R13 := "/Lotus/Language/Menu/TimeFormat_Minutes"
177 [-]: LOADK     R14 K17      ; R14 := "/Lotus/Language/Menu/TimeFormat_Minute"
178 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
179 [-]: MOVE      R12 R6       ; R12 := R6
180 [-]: GETGLOBAL R13 K0       ; R13 := 0x603636ad
181 [-]: MOVE      R14 R11      ; R14 := R11
182 [-]: NEWTABLE  R15 0 1      ; R15 := {}
183 [-]: GETGLOBAL R16 K9       ; R16 := 0x7f5022cf
184 [-]: GETTABLE  R16 R16 K10  ; R82 := R16[0xe8072ded]
185 [-]: LOADK     R17 K11      ; R17 := "%d"
186 [-]: MOVE      R18 R3       ; R18 := R3
187 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
188 [-]: SETTABLE  R15 K18 R16  ; R15["TIME"] := R16
189 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
190 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
191 [-]: RETURN    R12 2        ; return R12
192 [-]: JMP       298          ; PC := 298
193 [-]: EQ        0 R5 K19     ; if R5 ~= "CompactHours" then PC := 234
194 [-]: JMP       234          ; PC := 234
195 [-]: MUL       R12 R1 K20   ; R12 := R1 * 24.000000
196 [-]: ADD       R2 R12 R2    ; R2 := R12 + R2
197 [-]: LT        0 K8 R2      ; if 0.000000 >= R2 then PC := 210
198 [-]: JMP       210          ; PC := 210
199 [-]: MOVE      R12 R6       ; R12 := R6
200 [-]: GETGLOBAL R13 K9       ; R13 := 0x7f5022cf
201 [-]: GETTABLE  R13 R13 K10  ; R82 := R13[0xe8072ded]
202 [-]: LOADK     R14 K21      ; R14 := "%d "
203 [-]: MOVE      R15 R8       ; R15 := R8
204 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
205 [-]: MOVE      R15 R2       ; R15 := R2
206 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
207 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
208 [-]: RETURN    R12 2        ; return R12
209 [-]: JMP       298          ; PC := 298
210 [-]: LT        0 K8 R3      ; if 0.000000 >= R3 then PC := 223
211 [-]: JMP       223          ; PC := 223
212 [-]: MOVE      R12 R6       ; R12 := R6
213 [-]: GETGLOBAL R13 K9       ; R13 := 0x7f5022cf
214 [-]: GETTABLE  R13 R13 K10  ; R82 := R13[0xe8072ded]
215 [-]: LOADK     R14 K21      ; R14 := "%d "
216 [-]: MOVE      R15 R9       ; R15 := R9
217 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
218 [-]: MOVE      R15 R3       ; R15 := R3
219 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
220 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
221 [-]: RETURN    R12 2        ; return R12
222 [-]: JMP       298          ; PC := 298
223 [-]: MOVE      R12 R6       ; R12 := R6
224 [-]: GETGLOBAL R13 K9       ; R13 := 0x7f5022cf
225 [-]: GETTABLE  R13 R13 K10  ; R82 := R13[0xe8072ded]
226 [-]: LOADK     R14 K21      ; R14 := "%d "
227 [-]: MOVE      R15 R10      ; R15 := R10
228 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
229 [-]: MOVE      R15 R4       ; R15 := R4
230 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
231 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
232 [-]: RETURN    R12 2        ; return R12
233 [-]: JMP       298          ; PC := 298
234 [-]: GETUPVAL  R12 U0       ; R12 := U0
235 [-]: GETTABLE  R12 R12 K14  ; R82 := R12[0x06d055f9]
236 [-]: LT        1 K15 R2     ; if 1.000000 < R2 then PC := 241
237 [-]: JMP       241          ; PC := 241
238 [-]: LT        1 K8 R1      ; if 0.000000 < R1 then PC := 241
239 [-]: JMP       241          ; PC := 241
240 [-]: LOADBOOL  R13 0 1      ; R13 := false; PC := 241
241 [-]: LOADBOOL  R13 1 0      ; R13 := true
242 [-]: LOADK     R14 K22      ; R14 := "/Lotus/Language/Menu/TimeFormat_Hours"
243 [-]: LOADK     R15 K23      ; R15 := "/Lotus/Language/Menu/TimeFormat_Hour"
244 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
245 [-]: MOVE      R13 R6       ; R13 := R6
246 [-]: GETGLOBAL R14 K0       ; R14 := 0x603636ad
247 [-]: MOVE      R15 R12      ; R15 := R12
248 [-]: NEWTABLE  R16 0 1      ; R16 := {}
249 [-]: GETGLOBAL R17 K9       ; R17 := 0x7f5022cf
250 [-]: GETTABLE  R17 R17 K10  ; R82 := R17[0xe8072ded]
251 [-]: LOADK     R18 K11      ; R18 := "%d"
252 [-]: MUL       R19 R1 K20   ; R19 := R1 * 24.000000
253 [-]: ADD       R19 R19 R2   ; R19 := R19 + R2
254 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
255 [-]: SETTABLE  R16 K18 R17  ; R16["TIME"] := R17
256 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
257 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
258 [-]: RETURN    R13 2        ; return R13
259 [-]: JMP       298          ; PC := 298
260 [-]: LT        0 K8 R1      ; if 0.000000 >= R1 then PC := 282
261 [-]: JMP       282          ; PC := 282
262 [-]: MOVE      R13 R6       ; R13 := R6
263 [-]: GETGLOBAL R14 K9       ; R14 := 0x7f5022cf
264 [-]: GETTABLE  R14 R14 K10  ; R82 := R14[0xe8072ded]
265 [-]: LOADK     R15 K11      ; R15 := "%d"
266 [-]: MOVE      R16 R7       ; R16 := R7
267 [-]: LOADK     R17 K12      ; R17 := " %d"
268 [-]: MOVE      R18 R8       ; R18 := R8
269 [-]: LOADK     R19 K12      ; R19 := " %d"
270 [-]: MOVE      R20 R9       ; R20 := R9
271 [-]: LOADK     R21 K12      ; R21 := " %d"
272 [-]: MOVE      R22 R10      ; R22 := R10
273 [-]: CONCAT    R15 R15 R22  ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20 .. R21 .. R22
274 [-]: MOVE      R16 R1       ; R16 := R1
275 [-]: MOVE      R17 R2       ; R17 := R2
276 [-]: MOVE      R18 R3       ; R18 := R3
277 [-]: MOVE      R19 R4       ; R19 := R4
278 [-]: CALL      R14 6 2      ; R14 := R14(R15,R16,R17,R18,R19)
279 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
280 [-]: RETURN    R13 2        ; return R13
281 [-]: JMP       298          ; PC := 298
282 [-]: MOVE      R13 R6       ; R13 := R6
283 [-]: GETGLOBAL R14 K9       ; R14 := 0x7f5022cf
284 [-]: GETTABLE  R14 R14 K10  ; R82 := R14[0xe8072ded]
285 [-]: LOADK     R15 K11      ; R15 := "%d"
286 [-]: MOVE      R16 R8       ; R16 := R8
287 [-]: LOADK     R17 K12      ; R17 := " %d"
288 [-]: MOVE      R18 R9       ; R18 := R9
289 [-]: LOADK     R19 K12      ; R19 := " %d"
290 [-]: MOVE      R20 R10      ; R20 := R10
291 [-]: CONCAT    R15 R15 R20  ; R15 := R15 .. R16 .. R17 .. R18 .. R19 .. R20
292 [-]: MOVE      R16 R2       ; R16 := R2
293 [-]: MOVE      R17 R3       ; R17 := R3
294 [-]: MOVE      R18 R4       ; R18 := R4
295 [-]: CALL      R14 5 2      ; R14 := R14(R15,R16,R17,R18)
296 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
297 [-]: RETURN    R13 2        ; return R13
298 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 623
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: LOADK     R1 60        ; R1 := 60.000000
  2 [-]: LOADK     R2 3600      ; R2 := 3600.000000
  3 [-]: LOADK     R3 86400     ; R3 := 86400.000000
  4 [-]: GETGLOBAL R4 K0        ; R4 := 0x5bced4c4
  5 [-]: GETTABLE  R4 R4 K1     ; R82 := R4[0x55f27c30]
  6 [-]: DIV       R5 R0 R3     ; R5 := R0 / R3
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: MUL       R5 R4 R3     ; R5 := R4 * R3
  9 [-]: SUB       R0 R0 R5     ; R0 := R0 - R5
 10 [-]: GETGLOBAL R5 K0        ; R5 := 0x5bced4c4
 11 [-]: GETTABLE  R5 R5 K1     ; R82 := R5[0x55f27c30]
 12 [-]: DIV       R6 R0 R2     ; R6 := R0 / R2
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: MUL       R6 R5 R2     ; R6 := R5 * R2
 15 [-]: SUB       R0 R0 R6     ; R0 := R0 - R6
 16 [-]: GETGLOBAL R6 K0        ; R6 := 0x5bced4c4
 17 [-]: GETTABLE  R6 R6 K1     ; R82 := R6[0x55f27c30]
 18 [-]: DIV       R7 R0 R1     ; R7 := R0 / R1
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: MUL       R7 R6 R1     ; R7 := R6 * R1
 21 [-]: SUB       R7 R0 R7     ; R7 := R0 - R7
 22 [-]: MOVE      R8 R4        ; R8 := R4
 23 [-]: MOVE      R9 R5        ; R9 := R5
 24 [-]: MOVE      R10 R6       ; R10 := R6
 25 [-]: MOVE      R11 R7       ; R11 := R7
 26 [-]: RETURN    R8 5         ; return R8,R9,R10,R11
 27 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 638
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 642
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: LOADK     R3 K0        ; R3 := ""
  2 [-]: LT        0 R1 K1      ; if R1 >= 0.000000 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: UNM       R1 R1        ; R1 := ^ R1
  5 [-]: LOADK     R3 K2        ; R3 := "-"
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R4 2 5       ; R4,R5,R6,R7 := R4(R5)
  9 [-]: GETUPVAL  R8 U1        ; R8 := U1
 10 [-]: MOVE      R9 R0        ; R9 := R0
 11 [-]: MOVE      R10 R4       ; R10 := R4
 12 [-]: MOVE      R11 R5       ; R11 := R5
 13 [-]: MOVE      R12 R6       ; R12 := R6
 14 [-]: MOVE      R13 R7       ; R13 := R7
 15 [-]: MOVE      R14 R2       ; R14 := R2
 16 [-]: MOVE      R15 R3       ; R15 := R3
 17 [-]: TAILCALL  R8 8 0       ; R8,... := R8(R9,R10,R11,R12,R13,R14,R15)
 18 [-]: RETURN    R8 0         ; return R8,...
 19 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 653
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  6 [-]: RETURN    R3 2         ; return R3
  7 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 657
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x603636ad
  2 [-]: LOADK     R4 K1        ; R4 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: LOADBOOL  R5 0 0       ; R5 := false
  4 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  5 [-]: GETGLOBAL R4 K0        ; R4 := 0x603636ad
  6 [-]: LOADK     R5 K2        ; R5 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: LOADBOOL  R6 0 0       ; R6 := false
  8 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
  9 [-]: GETGLOBAL R5 K0        ; R5 := 0x603636ad
 10 [-]: LOADK     R6 K3        ; R6 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: LOADBOOL  R7 0 0       ; R7 := false
 12 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 13 [-]: GETGLOBAL R6 K0        ; R6 := 0x603636ad
 14 [-]: LOADK     R7 K4        ; R7 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: LOADBOOL  R8 0 0       ; R8 := false
 16 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 17 [-]: LOADK     R7 K5        ; R7 := ""
 18 [-]: LT        0 R0 K6      ; if R0 >= 0.000000 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: UNM       R0 R0        ; R0 := ^ R0
 21 [-]: LOADK     R7 K7        ; R7 := "-"
 22 [-]: GETUPVAL  R8 U0        ; R8 := U0
 23 [-]: MOVE      R9 R0        ; R9 := R0
 24 [-]: CALL      R8 2 5       ; R8,R9,R10,R11 := R8(R9)
 25 [-]: LOADK     R12 K5       ; R12 := ""
 26 [-]: GETGLOBAL R13 K8       ; R13 := 0x5bced4c4
 27 [-]: GETTABLE  R13 R13 K9   ; R82 := R13[0xe4a5b3ca]
 28 [-]: MOVE      R14 R8       ; R14 := R8
 29 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 30 [-]: LT        0 K6 R13     ; if 0.000000 >= R13 then PC := 43
 31 [-]: JMP       43           ; PC := 43
 32 [-]: MOVE      R13 R8       ; R13 := R8
 33 [-]: MOVE      R14 R3       ; R14 := R3
 34 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 35 [-]: EQ        1 R1 K10     ; if R1 == false then PC := 99
 36 [-]: JMP       99           ; PC := 99
 37 [-]: MOVE      R13 R12      ; R13 := R12
 38 [-]: LOADK     R14 K11      ; R14 := " "
 39 [-]: MOVE      R15 R9       ; R15 := R9
 40 [-]: MOVE      R16 R4       ; R16 := R4
 41 [-]: CONCAT    R12 R13 R16  ; R12 := R13 .. R14 .. R15 .. R16
 42 [-]: JMP       99           ; PC := 99
 43 [-]: GETGLOBAL R13 K8       ; R13 := 0x5bced4c4
 44 [-]: GETTABLE  R13 R13 K9   ; R82 := R13[0xe4a5b3ca]
 45 [-]: MOVE      R14 R9       ; R14 := R9
 46 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 47 [-]: LT        0 K6 R13     ; if 0.000000 >= R13 then PC := 70
 48 [-]: JMP       70           ; PC := 70
 49 [-]: MOVE      R13 R9       ; R13 := R9
 50 [-]: MOVE      R14 R4       ; R14 := R4
 51 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 52 [-]: TEST      R2 0         ; if not R2 then PC := 99
 53 [-]: JMP       99           ; PC := 99
 54 [-]: GETGLOBAL R13 K8       ; R13 := 0x5bced4c4
 55 [-]: GETTABLE  R13 R13 K9   ; R82 := R13[0xe4a5b3ca]
 56 [-]: MOVE      R14 R10      ; R14 := R10
 57 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 58 [-]: LT        0 K6 R13     ; if 0.000000 >= R13 then PC := 99
 59 [-]: JMP       99           ; PC := 99
 60 [-]: MOVE      R13 R12      ; R13 := R12
 61 [-]: LOADK     R14 K11      ; R14 := " "
 62 [-]: GETGLOBAL R15 K8       ; R15 := 0x5bced4c4
 63 [-]: GETTABLE  R15 R15 K12  ; R82 := R15[0xac1b386a]
 64 [-]: ADD       R16 R10 K13  ; R16 := R10 + 1.000000
 65 [-]: LOADK     R17 59       ; R17 := 59.000000
 66 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 67 [-]: MOVE      R16 R5       ; R16 := R5
 68 [-]: CONCAT    R12 R13 R16  ; R12 := R13 .. R14 .. R15 .. R16
 69 [-]: JMP       99           ; PC := 99
 70 [-]: GETGLOBAL R13 K8       ; R13 := 0x5bced4c4
 71 [-]: GETTABLE  R13 R13 K9   ; R82 := R13[0xe4a5b3ca]
 72 [-]: MOVE      R14 R10      ; R14 := R10
 73 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 74 [-]: LT        0 K6 R13     ; if 0.000000 >= R13 then PC := 93
 75 [-]: JMP       93           ; PC := 93
 76 [-]: GETGLOBAL R13 K8       ; R13 := 0x5bced4c4
 77 [-]: GETTABLE  R13 R13 K12  ; R82 := R13[0xac1b386a]
 78 [-]: GETUPVAL  R14 U1       ; R14 := U1
 79 [-]: GETTABLE  R14 R14 K14  ; R82 := R14[0x06d055f9]
 80 [-]: EQ        1 R11 K6     ; if R11 == 0.000000 then PC := 83
 81 [-]: JMP       83           ; PC := 83
 82 [-]: LOADBOOL  R15 0 1      ; R15 := false; PC := 83
 83 [-]: LOADBOOL  R15 1 0      ; R15 := true
 84 [-]: LOADK     R16 0        ; R16 := 0.000000
 85 [-]: LOADK     R17 1        ; R17 := 1.000000
 86 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 87 [-]: ADD       R14 R10 R14  ; R14 := R10 + R14
 88 [-]: LOADK     R15 59       ; R15 := 59.000000
 89 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 90 [-]: MOVE      R14 R5       ; R14 := R5
 91 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 92 [-]: JMP       99           ; PC := 99
 93 [-]: GETGLOBAL R13 K8       ; R13 := 0x5bced4c4
 94 [-]: GETTABLE  R13 R13 K15  ; R82 := R13[0x99675e23]
 95 [-]: MOVE      R14 R0       ; R14 := R0
 96 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 97 [-]: MOVE      R14 R6       ; R14 := R6
 98 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 99 [-]: MOVE      R13 R7       ; R13 := R7
100 [-]: MOVE      R14 R12      ; R14 := R12
101 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
102 [-]: RETURN    R13 2        ; return R13
103 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 689
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x603636ad
  2 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: LOADBOOL  R3 0 0       ; R3 := false
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K0        ; R2 := 0x603636ad
  6 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: LOADBOOL  R4 0 0       ; R4 := false
  8 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0x603636ad
 10 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: LOADBOOL  R5 0 0       ; R5 := false
 12 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0x603636ad
 14 [-]: LOADK     R5 K4        ; R5 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: LOADBOOL  R6 0 0       ; R6 := false
 16 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 17 [-]: LOADK     R5 K5        ; R5 := ""
 18 [-]: LT        0 R0 K6      ; if R0 >= 0.000000 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: UNM       R0 R0        ; R0 := ^ R0
 21 [-]: LOADK     R5 K7        ; R5 := "-"
 22 [-]: GETUPVAL  R6 U0        ; R6 := U0
 23 [-]: MOVE      R7 R0        ; R7 := R0
 24 [-]: CALL      R6 2 5       ; R6,R7,R8,R9 := R6(R7)
 25 [-]: LOADK     R10 K5       ; R10 := ""
 26 [-]: GETGLOBAL R11 K8       ; R11 := 0x5bced4c4
 27 [-]: GETTABLE  R11 R11 K9   ; R82 := R11[0xe4a5b3ca]
 28 [-]: MOVE      R12 R6       ; R12 := R6
 29 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 30 [-]: LT        0 K6 R11     ; if 0.000000 >= R11 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: MOVE      R11 R6       ; R11 := R6
 33 [-]: MOVE      R12 R1       ; R12 := R1
 34 [-]: CONCAT    R10 R11 R12  ; R10 := R11 .. R12
 35 [-]: JMP       70           ; PC := 70
 36 [-]: GETGLOBAL R11 K8       ; R11 := 0x5bced4c4
 37 [-]: GETTABLE  R11 R11 K9   ; R82 := R11[0xe4a5b3ca]
 38 [-]: MOVE      R12 R7       ; R12 := R7
 39 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 40 [-]: LT        0 K6 R11     ; if 0.000000 >= R11 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: MOVE      R11 R7       ; R11 := R7
 43 [-]: MOVE      R12 R2       ; R12 := R2
 44 [-]: LOADK     R13 K10      ; R13 := " "
 45 [-]: MOVE      R14 R8       ; R14 := R8
 46 [-]: MOVE      R15 R3       ; R15 := R3
 47 [-]: LOADK     R16 K10      ; R16 := " "
 48 [-]: GETGLOBAL R17 K8       ; R17 := 0x5bced4c4
 49 [-]: GETTABLE  R17 R17 K11  ; R82 := R17[0x55f27c30]
 50 [-]: ADD       R18 R9 K12   ; R18 := R9 + 0.500000
 51 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 52 [-]: MOVE      R18 R4       ; R18 := R4
 53 [-]: CONCAT    R10 R11 R18  ; R10 := R11 .. R12 .. R13 .. R14 .. R15 .. R16 .. R17 .. R18
 54 [-]: JMP       70           ; PC := 70
 55 [-]: GETGLOBAL R11 K8       ; R11 := 0x5bced4c4
 56 [-]: GETTABLE  R11 R11 K9   ; R82 := R11[0xe4a5b3ca]
 57 [-]: MOVE      R12 R8       ; R12 := R8
 58 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 59 [-]: LE        0 K6 R11     ; if 0.000000 > R11 then PC := 70
 60 [-]: JMP       70           ; PC := 70
 61 [-]: MOVE      R11 R8       ; R11 := R8
 62 [-]: MOVE      R12 R3       ; R12 := R3
 63 [-]: LOADK     R13 K10      ; R13 := " "
 64 [-]: GETGLOBAL R14 K8       ; R14 := 0x5bced4c4
 65 [-]: GETTABLE  R14 R14 K11  ; R82 := R14[0x55f27c30]
 66 [-]: ADD       R15 R9 K12   ; R15 := R9 + 0.500000
 67 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 68 [-]: MOVE      R15 R4       ; R15 := R4
 69 [-]: CONCAT    R10 R11 R15  ; R10 := R11 .. R12 .. R13 .. R14 .. R15
 70 [-]: MOVE      R11 R5       ; R11 := R5
 71 [-]: MOVE      R12 R10      ; R12 := R10
 72 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 73 [-]: RETURN    R11 2        ; return R11
 74 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 713
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 717
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x603636ad
  2 [-]: LOADK     R3 K1        ; R3 := "/Lotus/Language/Menu/TimeFormat_DaysShort"
  3 [-]: LOADBOOL  R4 0 0       ; R4 := false
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0x603636ad
  6 [-]: LOADK     R4 K2        ; R4 := "/Lotus/Language/Menu/TimeFormat_HoursShort"
  7 [-]: LOADBOOL  R5 0 0       ; R5 := false
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: GETGLOBAL R4 K0        ; R4 := 0x603636ad
 10 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Language/Menu/TimeFormat_MinutesShort"
 11 [-]: LOADBOOL  R6 0 0       ; R6 := false
 12 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 13 [-]: GETGLOBAL R5 K0        ; R5 := 0x603636ad
 14 [-]: LOADK     R6 K4        ; R6 := "/Lotus/Language/Menu/TimeFormat_SecondsShort"
 15 [-]: LOADBOOL  R7 0 0       ; R7 := false
 16 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 17 [-]: LOADK     R6 K5        ; R6 := ""
 18 [-]: LT        0 R0 K6      ; if R0 >= 0.000000 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: UNM       R0 R0        ; R0 := ^ R0
 21 [-]: LOADK     R6 K7        ; R6 := "-"
 22 [-]: GETUPVAL  R7 U0        ; R7 := U0
 23 [-]: MOVE      R8 R0        ; R8 := R0
 24 [-]: CALL      R7 2 5       ; R7,R8,R9,R10 := R7(R8)
 25 [-]: LOADK     R11 K5       ; R11 := ""
 26 [-]: GETGLOBAL R12 K8       ; R12 := 0x5bced4c4
 27 [-]: GETTABLE  R12 R12 K9   ; R82 := R12[0xe4a5b3ca]
 28 [-]: MOVE      R13 R7       ; R13 := R7
 29 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 30 [-]: LT        0 K6 R12     ; if 0.000000 >= R12 then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: MOVE      R12 R7       ; R12 := R7
 33 [-]: MOVE      R13 R2       ; R13 := R2
 34 [-]: LOADK     R14 K10      ; R14 := " "
 35 [-]: CONCAT    R11 R12 R14  ; R11 := R12 .. R13 .. R14
 36 [-]: GETGLOBAL R12 K8       ; R12 := 0x5bced4c4
 37 [-]: GETTABLE  R12 R12 K9   ; R82 := R12[0xe4a5b3ca]
 38 [-]: MOVE      R13 R8       ; R13 := R8
 39 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 40 [-]: LT        0 K6 R12     ; if 0.000000 >= R12 then PC := 47
 41 [-]: JMP       47           ; PC := 47
 42 [-]: MOVE      R12 R11      ; R12 := R11
 43 [-]: MOVE      R13 R8       ; R13 := R8
 44 [-]: MOVE      R14 R3       ; R14 := R3
 45 [-]: LOADK     R15 K10      ; R15 := " "
 46 [-]: CONCAT    R11 R12 R15  ; R11 := R12 .. R13 .. R14 .. R15
 47 [-]: GETGLOBAL R12 K8       ; R12 := 0x5bced4c4
 48 [-]: GETTABLE  R12 R12 K9   ; R82 := R12[0xe4a5b3ca]
 49 [-]: MOVE      R13 R9       ; R13 := R9
 50 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 51 [-]: LE        0 K6 R12     ; if 0.000000 > R12 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: MOVE      R12 R11      ; R12 := R11
 54 [-]: MOVE      R13 R9       ; R13 := R9
 55 [-]: MOVE      R14 R4       ; R14 := R4
 56 [-]: LOADK     R15 K10      ; R15 := " "
 57 [-]: CONCAT    R11 R12 R15  ; R11 := R12 .. R13 .. R14 .. R15
 58 [-]: MOVE      R12 R11      ; R12 := R11
 59 [-]: GETGLOBAL R13 K8       ; R13 := 0x5bced4c4
 60 [-]: GETTABLE  R13 R13 K11  ; R82 := R13[0x55f27c30]
 61 [-]: ADD       R14 R10 K12  ; R14 := R10 + 0.500000
 62 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 63 [-]: MOVE      R14 R5       ; R14 := R5
 64 [-]: CONCAT    R11 R12 R14  ; R11 := R12 .. R13 .. R14
 65 [-]: LT        0 R7 K6      ; if R7 >= 0.000000 then PC := 68
 66 [-]: JMP       68           ; PC := 68
 67 [-]: LOADK     R11 K13      ; R11 := "-1"
 68 [-]: MOVE      R12 R6       ; R12 := R6
 69 [-]: MOVE      R13 R11      ; R13 := R11
 70 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 71 [-]: RETURN    R12 2        ; return R12
 72 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 747
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 751
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R3 R1        ; R3 := R1
  2 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0[0xeeba5cd2]
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
  5 [-]: TEST      R4 1         ; if R4 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0[0xbb610e5b]
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: MOVE      R3 R4        ; R3 := R4
 10 [-]: TEST      R2 1         ; if R2 then PC := 34
 11 [-]: JMP       34           ; PC := 34
 12 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 13 [-]: MOVE      R5 R3        ; R5 := R3
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: TEST      R4 1         ; if R4 then PC := 34
 16 [-]: JMP       34           ; PC := 34
 17 [-]: SELF      R4 R3 K3     ; R5 := R3; R4 := R3[0xf2deaf69]
 18 [-]: GETUPVAL  R6 U0        ; R6 := U0
 19 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 20 [-]: TEST      R4 0         ; if not R4 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: SELF      R4 R0 K4     ; R5 := R0; R4 := R0[0xa534c3ac]
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: GETGLOBAL R5 K2        ; R5 := 0x7b998233
 25 [-]: MOVE      R6 R4        ; R6 := R4
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: TEST      R5 1         ; if R5 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: SELF      R5 R4 K5     ; R6 := R4; R5 := R4[0x73901acf]
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: TEST      R5 0         ; if not R5 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: RETURN    R4 2         ; return R4
 34 [-]: RETURN    R3 2         ; return R3
 35 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 769
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x89326c93
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x83f4e77c
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADNIL   R0 R0        ; R0 := nil
 12 [-]: RETURN    R0 2         ; return R0
 13 [-]: GETGLOBAL R0 K1        ; R0 := 0x89326c93
 14 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xfb64e76c]
 15 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 16 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 0         ; if not R1 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: LOADNIL   R1 R1        ; R1 := nil
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xa534c3ac]
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 26 [-]: MOVE      R3 R1        ; R3 := R1
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 0         ; if not R2 then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: SELF      R2 R0 K5     ; R3 := R0; R2 := R0[0xbb610e5b]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: MOVE      R1 R2        ; R1 := R2
 33 [-]: RETURN    R1 2         ; return R1
 34 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 786
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 790
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0xde321e6f]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x2676deee]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: LOADNIL   R2 R2        ; R2 := nil
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 800
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 804
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ToolTipUpdateColors"]
  5 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 16
  6 [-]: JMP       16           ; PC := 16
  7 [-]: GETGLOBAL R2 K0        ; R2 := _T
  8 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0xcb478cb8]
  9 [-]: CALL      R2 1 1       ; R2()
 10 [-]: GETGLOBAL R2 K0        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["ToolTipColors"]
 12 [-]: GETTABLE  R0 R2 K5     ; R0 := R2["Title"]
 13 [-]: GETGLOBAL R2 K0        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["ToolTipColors"]
 15 [-]: GETTABLE  R1 R2 K6     ; R1 := R2["Content"]
 16 [-]: GETUPVAL  R2 U2        ; R2 := U2
 17 [-]: GETTABLE  R2 R2 K7     ; R82 := R2[0x9f57dd7d]
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: GETTABLE  R3 R3 K7     ; R82 := R3[0x9f57dd7d]
 22 [-]: MOVE      R4 R1        ; R4 := R1
 23 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 24 [-]: RETURN    R2 0         ; return R2,...
 25 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 819
; #Upvalues:       2
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: LOADK     R7 K0        ; R7 := ""
  2 [-]: LOADBOOL  R8 1 0       ; R8 := true
  3 [-]: GETGLOBAL R9 K1        ; R9 := 0x7b998233
  4 [-]: MOVE      R10 R4       ; R10 := R4
  5 [-]: CALL      R9 2 2       ; R9 := R9(R10)
  6 [-]: TEST      R9 0         ; if not R9 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: NEWTABLE  R9 0 0       ; R9 := {}
  9 [-]: MOVE      R4 R9        ; R4 := R9
 10 [-]: GETGLOBAL R9 K1        ; R9 := 0x7b998233
 11 [-]: GETTABLE  R10 R4 K2    ; R10 := R4["endLineTag"]
 12 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 13 [-]: TEST      R9 1         ; if R9 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: GETTABLE  R7 R4 K2     ; R7 := R4["endLineTag"]
 16 [-]: GETGLOBAL R9 K1        ; R9 := 0x7b998233
 17 [-]: GETTABLE  R10 R4 K3    ; R10 := R4["includeParagraphTag"]
 18 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 19 [-]: TEST      R9 1         ; if R9 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: GETTABLE  R8 R4 K3     ; R8 := R4["includeParagraphTag"]
 22 [-]: GETUPVAL  R9 U0        ; R9 := U0
 23 [-]: CALL      R9 1 3       ; R9,R10 := R9()
 24 [-]: EQ        0 R5 K4      ; if R5 ~= nil then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: MOVE      R5 R9        ; R5 := R9
 27 [-]: EQ        0 R6 K4      ; if R6 ~= nil then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: MOVE      R6 R10       ; R6 := R10
 30 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETUPVAL  R11 U1       ; R11 := U1
 33 [-]: GETTABLE  R12 R2 K5    ; R12 := R2["rarity"]
 34 [-]: ADD       R12 R12 K6   ; R12 := R12 + 1.000000
 35 [-]: GETTABLE  R5 R11 R12   ; R5 := R11[R12]
 36 [-]: LOADK     R11 K7       ; R11 := "<br>"
 37 [-]: LOADK     R12 K0       ; R12 := ""
 38 [-]: TEST      R8 0         ; if not R8 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: MOVE      R13 R12      ; R13 := R12
 41 [-]: LOADK     R14 K8       ; R14 := "<p>"
 42 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 43 [-]: MOVE      R13 R12      ; R13 := R12
 44 [-]: LOADK     R14 K9       ; R14 := "<font color=\""
 45 [-]: MOVE      R15 R5       ; R15 := R5
 46 [-]: LOADK     R16 K10      ; R16 := "\">"
 47 [-]: CONCAT    R12 R13 R16  ; R12 := R13 .. R14 .. R15 .. R16
 48 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 54
 49 [-]: JMP       54           ; PC := 54
 50 [-]: MOVE      R13 R12      ; R13 := R12
 51 [-]: GETTABLE  R14 R2 K11   ; R14 := R2["localizedTitle"]
 52 [-]: CONCAT    R12 R13 R14  ; R12 := R13 .. R14
 53 [-]: JMP       77           ; PC := 77
 54 [-]: GETGLOBAL R13 K1       ; R13 := 0x7b998233
 55 [-]: MOVE      R14 R1       ; R14 := R1
 56 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 57 [-]: TEST      R13 1        ; if R13 then PC := 77
 58 [-]: JMP       77           ; PC := 77
 59 [-]: GETGLOBAL R13 K12      ; R13 := 0x603636ad
 60 [-]: GETGLOBAL R14 K13      ; R14 := 0x64fb1586
 61 [-]: SELF      R15 R1 K14   ; R16 := R1; R15 := R1[0xd3a9d01f]
 62 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 63 [-]: CALL      R14 0 2      ; R14 := R14(R15,...)
 64 [-]: LOADBOOL  R15 0 0      ; R15 := false
 65 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 66 [-]: GETTABLE  R14 R4 K15   ; R14 := R4["Upper"]
 67 [-]: TEST      R14 0        ; if not R14 then PC := 74
 68 [-]: JMP       74           ; PC := 74
 69 [-]: GETGLOBAL R14 K16      ; R14 := 0x7f5022cf
 70 [-]: GETTABLE  R14 R14 K17  ; R82 := R14[0x3f3e4d12]
 71 [-]: MOVE      R15 R13      ; R15 := R13
 72 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 73 [-]: MOVE      R13 R14      ; R13 := R14
 74 [-]: MOVE      R14 R12      ; R14 := R12
 75 [-]: MOVE      R15 R13      ; R15 := R13
 76 [-]: CONCAT    R12 R14 R15  ; R12 := R14 .. R15
 77 [-]: MOVE      R14 R12      ; R14 := R12
 78 [-]: MOVE      R15 R11      ; R15 := R11
 79 [-]: LOADK     R16 K18      ; R16 := "</font>"
 80 [-]: CONCAT    R12 R14 R16  ; R12 := R14 .. R15 .. R16
 81 [-]: MOVE      R14 R12      ; R14 := R12
 82 [-]: LOADK     R15 K9       ; R15 := "<font color=\""
 83 [-]: MOVE      R16 R6       ; R16 := R6
 84 [-]: LOADK     R17 K10      ; R17 := "\">"
 85 [-]: CONCAT    R12 R14 R17  ; R12 := R14 .. R15 .. R16 .. R17
 86 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 117
 87 [-]: JMP       117          ; PC := 117
 88 [-]: MOVE      R14 R12      ; R14 := R12
 89 [-]: GETTABLE  R15 R2 K19   ; R15 := R2["localizedDescription"]
 90 [-]: CONCAT    R12 R14 R15  ; R12 := R14 .. R15
 91 [-]: GETTABLE  R14 R2 K20   ; R14 := R2["affixes"]
 92 [-]: EQ        1 R14 K4     ; if R14 == nil then PC := 131
 93 [-]: JMP       131          ; PC := 131
 94 [-]: LOADK     R14 1        ; R14 := 1.000000
 95 [-]: GETTABLE  R15 R2 K20   ; R15 := R2["affixes"]
 96 [-]: LEN       R15 R15      ; R15 := # R15
 97 [-]: LOADK     R16 1        ; R16 := 1.000000
 98 [-]: FORPREP   R14 115      ; R14 -= R16; PC := 115
 99 [-]: MOVE      R18 R12      ; R18 := R12
100 [-]: MOVE      R19 R11      ; R19 := R11
101 [-]: CONCAT    R12 R18 R19  ; R12 := R18 .. R19
102 [-]: MOVE      R18 R12      ; R18 := R12
103 [-]: LOADK     R19 K21      ; R19 := "<font color=\"#FFFFFF\">"
104 [-]: CONCAT    R12 R18 R19  ; R12 := R18 .. R19
105 [-]: MOVE      R18 R12      ; R18 := R12
106 [-]: GETTABLE  R19 R2 K20   ; R19 := R2["affixes"]
107 [-]: GETTABLE  R19 R19 R17  ; R19 := R19[R17]
108 [-]: CONCAT    R12 R18 R19  ; R12 := R18 .. R19
109 [-]: MOVE      R18 R12      ; R18 := R12
110 [-]: LOADK     R19 K18      ; R19 := "</font>"
111 [-]: CONCAT    R12 R18 R19  ; R12 := R18 .. R19
112 [-]: MOVE      R18 R12      ; R18 := R12
113 [-]: MOVE      R19 R7       ; R19 := R7
114 [-]: CONCAT    R12 R18 R19  ; R12 := R18 .. R19
115 [-]: FORLOOP   R14 99       ; R14 += R16; if R14 <= R15 then begin PC := 99; R17 := R14 end
116 [-]: JMP       131          ; PC := 131
117 [-]: GETGLOBAL R18 K1       ; R18 := 0x7b998233
118 [-]: MOVE      R19 R1       ; R19 := R1
119 [-]: CALL      R18 2 2      ; R18 := R18(R19)
120 [-]: TEST      R18 1        ; if R18 then PC := 131
121 [-]: JMP       131          ; PC := 131
122 [-]: MOVE      R18 R12      ; R18 := R12
123 [-]: GETGLOBAL R19 K12      ; R19 := 0x603636ad
124 [-]: GETGLOBAL R20 K13      ; R20 := 0x64fb1586
125 [-]: SELF      R21 R1 K22   ; R22 := R1; R21 := R1[0x5ba460ac]
126 [-]: CALL      R21 2 0      ; R21,... := R21(R22)
127 [-]: CALL      R20 0 2      ; R20 := R20(R21,...)
128 [-]: LOADBOOL  R21 0 0      ; R21 := false
129 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
130 [-]: CONCAT    R12 R18 R19  ; R12 := R18 .. R19
131 [-]: MOVE      R18 R12      ; R18 := R12
132 [-]: LOADK     R19 K18      ; R19 := "</font>"
133 [-]: CONCAT    R12 R18 R19  ; R12 := R18 .. R19
134 [-]: TEST      R8 0         ; if not R8 then PC := 139
135 [-]: JMP       139          ; PC := 139
136 [-]: MOVE      R18 R12      ; R18 := R12
137 [-]: LOADK     R19 K23      ; R19 := "</p>"
138 [-]: CONCAT    R12 R18 R19  ; R12 := R18 .. R19
139 [-]: RETURN    R12 2        ; return R12
140 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 885
; #Upvalues:       1
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: MOVE      R8 R0        ; R8 := R0
  3 [-]: MOVE      R9 R1        ; R9 := R1
  4 [-]: MOVE      R10 R2       ; R10 := R2
  5 [-]: MOVE      R11 R3       ; R11 := R3
  6 [-]: MOVE      R12 R4       ; R12 := R4
  7 [-]: MOVE      R13 R5       ; R13 := R5
  8 [-]: MOVE      R14 R6       ; R14 := R6
  9 [-]: TAILCALL  R7 8 0       ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
 10 [-]: RETURN    R7 0         ; return R7,...
 11 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 889
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LOADK     R1 K0        ; R1 := 16777215.000000
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["rarity"]
  6 [-]: ADD       R3 R3 K3     ; R3 := R3 + 1.000000
  7 [-]: GETTABLE  R1 R2 R3     ; R1 := R2[R3]
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 899
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R5 K0        ; R5 := _T
  2 [-]: TEST      R1 0         ; if not R1 then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETGLOBAL R6 K2        ; R6 := 0x7f5022cf
  5 [-]: GETTABLE  R6 R6 K3     ; R82 := R6[0xe8072ded]
  6 [-]: LOADK     R7 K4        ; R7 := "0x%08X"
  7 [-]: MOVE      R8 R1        ; R8 := R1
  8 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
  9 [-]: TEST      R6 1         ; if R6 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADNIL   R6 R6        ; R6 := nil
 12 [-]: SETTABLE  R5 K1 R6     ; R5["ColorPickerCurrentColor"] := R6
 13 [-]: GETGLOBAL R5 K0        ; R5 := _T
 14 [-]: SETTABLE  R5 K5 R2     ; R5["ColorPickerCallback"] := R2
 15 [-]: GETGLOBAL R5 K0        ; R5 := _T
 16 [-]: SETTABLE  R5 K6 R3     ; R5["ColorPickerOnCloseCallback"] := R3
 17 [-]: GETGLOBAL R5 K0        ; R5 := _T
 18 [-]: SETTABLE  R5 K7 R4     ; R5["ColorPickerSpecificColorsInfo"] := R4
 19 [-]: GETGLOBAL R5 K0        ; R5 := _T
 20 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["InSimulacrum"]
 21 [-]: TEST      R5 0         ; if not R5 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: GETGLOBAL R5 K0        ; R5 := _T
 24 [-]: SETTABLE  R5 K9 K10    ; R5["ColorPickerUseCustomBg"] := true
 25 [-]: SELF      R5 R0 K11    ; R6 := R0; R5 := R0[0x1fd6abd0]
 26 [-]: GETGLOBAL R7 K12       ; R7 := 0x0032441c
 27 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["UIMovie_ColorPicker"]
 28 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 29 [-]: RETURN    R5 2         ; return R5
 30 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 911
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
  2 [-]: MOVE      R6 R1        ; R6 := R1
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: TEST      R5 0         ; if not R5 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R5 U0        ; R5 := U0
  7 [-]: CALL      R5 1 2       ; R5 := R5()
  8 [-]: MOVE      R1 R5        ; R1 := R5
  9 [-]: GETGLOBAL R5 K1        ; R5 := _T
 10 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mSpecialSuitMode"]
 11 [-]: TEST      R5 0         ; if not R5 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETGLOBAL R5 K1        ; R5 := _T
 14 [-]: GETTABLE  R4 R5 K3     ; R4 := R5["SpecialSuitAvatar"]
 15 [-]: JMP       55           ; PC := 55
 16 [-]: GETGLOBAL R5 K1        ; R5 := _T
 17 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mSentinelMode"]
 18 [-]: TEST      R5 0         ; if not R5 then PC := 54
 19 [-]: JMP       54           ; PC := 54
 20 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 21 [-]: MOVE      R6 R1        ; R6 := R1
 22 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 23 [-]: TEST      R5 1         ; if R5 then PC := 55
 24 [-]: JMP       55           ; PC := 55
 25 [-]: SELF      R5 R1 K5     ; R6 := R1; R5 := R1[0xf2deaf69]
 26 [-]: GETGLOBAL R7 K6        ; R7 := gLotusSentinelAvatarType
 27 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 28 [-]: TEST      R5 0         ; if not R5 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: MOVE      R4 R1        ; R4 := R1
 31 [-]: JMP       55           ; PC := 55
 32 [-]: SELF      R5 R1 K7     ; R6 := R1; R5 := R1[0xde321e6f]
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5[0x2676deee]
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: MOVE      R4 R5        ; R4 := R5
 37 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 38 [-]: MOVE      R6 R4        ; R6 := R4
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: TEST      R5 0         ; if not R5 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: GETGLOBAL R5 K9        ; R5 := 0xbe190284
 43 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0xf2deaf69]
 44 [-]: GETGLOBAL R7 K10       ; R7 := gLotusAttractModeGameRulesType
 45 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 46 [-]: TEST      R5 0         ; if not R5 then PC := 55
 47 [-]: JMP       55           ; PC := 55
 48 [-]: GETGLOBAL R5 K9        ; R5 := 0xbe190284
 49 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0x7cf8123f]
 50 [-]: LOADK     R7 3         ; R7 := 3.000000
 51 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 52 [-]: MOVE      R4 R5        ; R4 := R5
 53 [-]: JMP       55           ; PC := 55
 54 [-]: MOVE      R4 R1        ; R4 := R1
 55 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 56 [-]: MOVE      R6 R4        ; R6 := R4
 57 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 58 [-]: TEST      R5 0         ; if not R5 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: RETURN    R0 1         ; return 
 61 [-]: GETGLOBAL R5 K1        ; R5 := _T
 62 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["suitTable"]
 63 [-]: EQ        0 R5 K14     ; if R5 ~= nil then PC := 82
 64 [-]: JMP       82           ; PC := 82
 65 [-]: GETGLOBAL R5 K1        ; R5 := _T
 66 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 67 [-]: SETTABLE  R5 K13 R6    ; R5["suitTable"] := R6
 68 [-]: GETGLOBAL R5 K1        ; R5 := _T
 69 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["suitTable"]
 70 [-]: SETTABLE  R5 K15 K16   ; R5["desiredRot"] := -90.000000
 71 [-]: GETGLOBAL R5 K1        ; R5 := _T
 72 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["suitTable"]
 73 [-]: GETGLOBAL R6 K1        ; R6 := _T
 74 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["suitTable"]
 75 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["desiredRot"]
 76 [-]: SETTABLE  R5 K17 R6    ; R5["lerpRot"] := R6
 77 [-]: GETGLOBAL R5 K1        ; R5 := _T
 78 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["suitTable"]
 79 [-]: GETGLOBAL R6 K19       ; R6 := 0x00046924
 80 [-]: CALL      R6 1 2       ; R6 := R6()
 81 [-]: SETTABLE  R5 K18 R6    ; R5["lerpHead"] := R6
 82 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 83 [-]: GETGLOBAL R6 K1        ; R6 := _T
 84 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["suitTable"]
 85 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["lerpRot"]
 86 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 87 [-]: TEST      R5 0         ; if not R5 then PC := 92
 88 [-]: JMP       92           ; PC := 92
 89 [-]: GETGLOBAL R5 K1        ; R5 := _T
 90 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["suitTable"]
 91 [-]: SETTABLE  R5 K17 K20   ; R5["lerpRot"] := 0.000000
 92 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 93 [-]: GETGLOBAL R6 K1        ; R6 := _T
 94 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["suitTable"]
 95 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["desiredRot"]
 96 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 97 [-]: TEST      R5 0         ; if not R5 then PC := 102
 98 [-]: JMP       102          ; PC := 102
 99 [-]: GETGLOBAL R5 K1        ; R5 := _T
100 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["suitTable"]
101 [-]: SETTABLE  R5 K15 K16   ; R5["desiredRot"] := -90.000000
102 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
103 [-]: GETGLOBAL R6 K1        ; R6 := _T
104 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["suitTable"]
105 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["lerpHead"]
106 [-]: CALL      R5 2 2       ; R5 := R5(R6)
107 [-]: TEST      R5 0         ; if not R5 then PC := 114
108 [-]: JMP       114          ; PC := 114
109 [-]: GETGLOBAL R5 K1        ; R5 := _T
110 [-]: GETTABLE  R5 R5 K13    ; R5 := R5["suitTable"]
111 [-]: GETGLOBAL R6 K19       ; R6 := 0x00046924
112 [-]: CALL      R6 1 2       ; R6 := R6()
113 [-]: SETTABLE  R5 K18 R6    ; R5["lerpHead"] := R6
114 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
115 [-]: MOVE      R6 R0        ; R6 := R0
116 [-]: CALL      R5 2 2       ; R5 := R5(R6)
117 [-]: TEST      R5 1         ; if R5 then PC := 124
118 [-]: JMP       124          ; PC := 124
119 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
120 [-]: MOVE      R6 R4        ; R6 := R4
121 [-]: CALL      R5 2 2       ; R5 := R5(R6)
122 [-]: TEST      R5 0         ; if not R5 then PC := 125
123 [-]: JMP       125          ; PC := 125
124 [-]: RETURN    R0 1         ; return 
125 [-]: SELF      R5 R0 K21    ; R6 := R0; R5 := R0[0xd4cc05b4]
126 [-]: CALL      R5 2 2       ; R5 := R5(R6)
127 [-]: TEST      R5 1         ; if R5 then PC := 130
128 [-]: JMP       130          ; PC := 130
129 [-]: RETURN    R0 1         ; return 
130 [-]: SELF      R5 R0 K22    ; R6 := R0; R5 := R0[0x91a24e4b]
131 [-]: LOADK     R7 K23       ; R7 := "_root"
132 [-]: LOADK     R8 25        ; R8 := 25.000000
133 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
134 [-]: SELF      R6 R0 K22    ; R7 := R0; R6 := R0[0x91a24e4b]
135 [-]: LOADK     R8 K23       ; R8 := "_root"
136 [-]: LOADK     R9 26        ; R9 := 26.000000
137 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
138 [-]: GETGLOBAL R7 K24       ; R7 := 0x34291f5c
139 [-]: GETTABLE  R7 R7 K25    ; R82 := R7[0x1467d5f4]
140 [-]: CALL      R7 1 2       ; R7 := R7()
141 [-]: EQ        0 R5 K26     ; if R5 ~= -1000.000000 then PC := 161
142 [-]: JMP       161          ; PC := 161
143 [-]: EQ        0 R6 K26     ; if R6 ~= -1000.000000 then PC := 161
144 [-]: JMP       161          ; PC := 161
145 [-]: GETGLOBAL R8 K1        ; R8 := _T
146 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["suitTable"]
147 [-]: GETTABLE  R5 R8 K27    ; R5 := R8["lastMX"]
148 [-]: GETGLOBAL R8 K1        ; R8 := _T
149 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["suitTable"]
150 [-]: GETTABLE  R6 R8 K28    ; R6 := R8["lastMY"]
151 [-]: EQ        1 R5 K14     ; if R5 == nil then PC := 155
152 [-]: JMP       155          ; PC := 155
153 [-]: EQ        0 R6 K14     ; if R6 ~= nil then PC := 157
154 [-]: JMP       157          ; PC := 157
155 [-]: LOADK     R5 0         ; R5 := 0.000000
156 [-]: LOADK     R6 0         ; R6 := 0.000000
157 [-]: GETGLOBAL R8 K1        ; R8 := _T
158 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["suitTable"]
159 [-]: SETTABLE  R8 K29 K30   ; R8["mouseOffScreen"] := true
160 [-]: JMP       177          ; PC := 177
161 [-]: GETGLOBAL R8 K1        ; R8 := _T
162 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["suitTable"]
163 [-]: GETTABLE  R8 R8 K29    ; R8 := R8["mouseOffScreen"]
164 [-]: TEST      R8 0         ; if not R8 then PC := 177
165 [-]: JMP       177          ; PC := 177
166 [-]: TEST      R7 1         ; if R7 then PC := 174
167 [-]: JMP       174          ; PC := 174
168 [-]: GETGLOBAL R8 K1        ; R8 := _T
169 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["suitTable"]
170 [-]: SETTABLE  R8 K27 R5    ; R8["lastMX"] := R5
171 [-]: GETGLOBAL R8 K1        ; R8 := _T
172 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["suitTable"]
173 [-]: SETTABLE  R8 K28 R6    ; R8["lastMY"] := R6
174 [-]: GETGLOBAL R8 K1        ; R8 := _T
175 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["suitTable"]
176 [-]: SETTABLE  R8 K29 K31   ; R8["mouseOffScreen"] := false
177 [-]: SELF      R8 R0 K32    ; R9 := R0; R8 := R0[0x5b638cce]
178 [-]: LOADK     R10 K23      ; R10 := "_root"
179 [-]: LOADK     R11 K33      ; R11 := "suitRotationX"
180 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
181 [-]: TEST      R7 1         ; if R7 then PC := 185
182 [-]: JMP       185          ; PC := 185
183 [-]: TEST      R3 0         ; if not R3 then PC := 208
184 [-]: JMP       208          ; PC := 208
185 [-]: TEST      R2 0         ; if not R2 then PC := 208
186 [-]: JMP       208          ; PC := 208
187 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
188 [-]: MOVE      R10 R8       ; R10 := R8
189 [-]: CALL      R9 2 2       ; R9 := R9(R10)
190 [-]: TEST      R9 1         ; if R9 then PC := 208
191 [-]: JMP       208          ; PC := 208
192 [-]: GETGLOBAL R9 K34       ; R9 := 0x03f57322
193 [-]: MOVE      R10 R8       ; R10 := R8
194 [-]: CALL      R9 2 2       ; R9 := R9(R10)
195 [-]: EQ        1 R9 K14     ; if R9 == nil then PC := 208
196 [-]: JMP       208          ; PC := 208
197 [-]: GETUPVAL  R9 U1        ; R9 := U1
198 [-]: GETGLOBAL R10 K34      ; R10 := 0x03f57322
199 [-]: MOVE      R11 R8       ; R11 := R8
200 [-]: CALL      R10 2 2      ; R10 := R10(R11)
201 [-]: MUL       R10 R10 K35  ; R10 := R10 * 1000.000000
202 [-]: GETGLOBAL R11 K36      ; R11 := 0x67652851
203 [-]: CALL      R11 1 2      ; R11 := R11()
204 [-]: MUL       R10 R10 R11  ; R10 := R10 * R11
205 [-]: ADD       R9 R9 R10    ; R9 := R9 + R10
206 [-]: SETUPVAL  R9 U1        ; U82 := 	
207 [-]: GETUPVAL  R5 U1        ; R5 := U1
208 [-]: GETGLOBAL R9 K1        ; R9 := _T
209 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["suitTable"]
210 [-]: GETTABLE  R9 R9 K37    ; R9 := R9["wasUsingController"]
211 [-]: EQ        1 R9 R7      ; if R9 == R7 then PC := 222
212 [-]: JMP       222          ; PC := 222
213 [-]: GETGLOBAL R9 K1        ; R9 := _T
214 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["suitTable"]
215 [-]: SETTABLE  R9 K37 R7    ; R9["wasUsingController"] := R7
216 [-]: GETGLOBAL R9 K1        ; R9 := _T
217 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["suitTable"]
218 [-]: SETTABLE  R9 K27 R5    ; R9["lastMX"] := R5
219 [-]: GETGLOBAL R9 K1        ; R9 := _T
220 [-]: GETTABLE  R9 R9 K13    ; R9 := R9["suitTable"]
221 [-]: SETTABLE  R9 K28 R6    ; R9["lastMY"] := R6
222 [-]: GETUPVAL  R9 U2        ; R9 := U2
223 [-]: GETTABLE  R9 R9 K38    ; R82 := R9[0x06d055f9]
224 [-]: MOVE      R10 R3       ; R10 := R3
225 [-]: LOADK     R11 K39      ; R11 := ""
226 [-]: SELF      R12 R0 K40   ; R13 := R0; R12 := R0[0xee5aaf3e]
227 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
228 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
229 [-]: EQ        0 R9 K39     ; if R9 ~= "" then PC := 262
230 [-]: JMP       262          ; PC := 262
231 [-]: TEST      R2 0         ; if not R2 then PC := 262
232 [-]: JMP       262          ; PC := 262
233 [-]: GETGLOBAL R10 K1       ; R10 := _T
234 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["suitTable"]
235 [-]: GETTABLE  R10 R10 K27  ; R10 := R10["lastMX"]
236 [-]: EQ        1 R10 K14    ; if R10 == nil then PC := 250
237 [-]: JMP       250          ; PC := 250
238 [-]: GETGLOBAL R10 K1       ; R10 := _T
239 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["suitTable"]
240 [-]: GETGLOBAL R11 K1       ; R11 := _T
241 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["suitTable"]
242 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["desiredRot"]
243 [-]: GETGLOBAL R12 K1       ; R12 := _T
244 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["suitTable"]
245 [-]: GETTABLE  R12 R12 K27  ; R12 := R12["lastMX"]
246 [-]: SUB       R12 R12 R5   ; R12 := R12 - R5
247 [-]: MUL       R12 R12 K41  ; R12 := R12 * 0.500000
248 [-]: ADD       R11 R11 R12  ; R11 := R11 + R12
249 [-]: SETTABLE  R10 K15 R11  ; R10["desiredRot"] := R11
250 [-]: GETGLOBAL R10 K1       ; R10 := _T
251 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["suitTable"]
252 [-]: GETTABLE  R10 R10 K28  ; R10 := R10["lastMY"]
253 [-]: EQ        1 R10 K14    ; if R10 == nil then PC := 262
254 [-]: JMP       262          ; PC := 262
255 [-]: GETGLOBAL R10 K1       ; R10 := _T
256 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["suitTable"]
257 [-]: GETGLOBAL R11 K1       ; R11 := _T
258 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["suitTable"]
259 [-]: GETTABLE  R11 R11 K28  ; R11 := R11["lastMY"]
260 [-]: SUB       R11 R11 R6   ; R11 := R11 - R6
261 [-]: SETTABLE  R10 K42 R11  ; R10["myDiff"] := R11
262 [-]: GETGLOBAL R10 K1       ; R10 := _T
263 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["suitTable"]
264 [-]: GETGLOBAL R11 K43      ; R11 := 0x9bafffe3
265 [-]: GETGLOBAL R12 K1       ; R12 := _T
266 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["suitTable"]
267 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["lerpRot"]
268 [-]: GETGLOBAL R13 K1       ; R13 := _T
269 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["suitTable"]
270 [-]: GETTABLE  R13 R13 K15  ; R13 := R13["desiredRot"]
271 [-]: GETGLOBAL R14 K36      ; R14 := 0x67652851
272 [-]: CALL      R14 1 2      ; R14 := R14()
273 [-]: MUL       R14 R14 K44  ; R14 := R14 * 4.000000
274 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
275 [-]: SETTABLE  R10 K17 R11  ; R10["lerpRot"] := R11
276 [-]: LOADK     R10 0        ; R10 := 0.000000
277 [-]: GETGLOBAL R11 K1       ; R11 := _T
278 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["suitTable"]
279 [-]: GETTABLE  R11 R11 K17  ; R11 := R11["lerpRot"]
280 [-]: GETGLOBAL R12 K1       ; R12 := _T
281 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["suitTable"]
282 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["desiredRot"]
283 [-]: LE        0 R11 R12    ; if R11 > R12 then PC := 294
284 [-]: JMP       294          ; PC := 294
285 [-]: GETGLOBAL R11 K45      ; R11 := 0x5bced4c4
286 [-]: GETTABLE  R11 R11 K46  ; R82 := R11[0xe4a5b3ca]
287 [-]: GETGLOBAL R12 K1       ; R12 := _T
288 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["suitTable"]
289 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["lerpRot"]
290 [-]: MOD       R12 R12 K47  ; R12 := R12 % 360.000000
291 [-]: CALL      R11 2 2      ; R11 := R11(R12)
292 [-]: SUB       R10 K47 R11  ; R10 := 360.000000 - R11
293 [-]: JMP       302          ; PC := 302
294 [-]: GETGLOBAL R11 K45      ; R11 := 0x5bced4c4
295 [-]: GETTABLE  R11 R11 K46  ; R82 := R11[0xe4a5b3ca]
296 [-]: GETGLOBAL R12 K1       ; R12 := _T
297 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["suitTable"]
298 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["lerpRot"]
299 [-]: MOD       R12 R12 K47  ; R12 := R12 % 360.000000
300 [-]: CALL      R11 2 2      ; R11 := R11(R12)
301 [-]: MOVE      R10 R11      ; R10 := R11
302 [-]: GETGLOBAL R11 K45      ; R11 := 0x5bced4c4
303 [-]: GETTABLE  R11 R11 K46  ; R82 := R11[0xe4a5b3ca]
304 [-]: GETGLOBAL R12 K1       ; R12 := _T
305 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["suitTable"]
306 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["desiredRot"]
307 [-]: GETGLOBAL R13 K1       ; R13 := _T
308 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["suitTable"]
309 [-]: GETTABLE  R13 R13 K17  ; R13 := R13["lerpRot"]
310 [-]: SUB       R12 R12 R13  ; R12 := R12 - R13
311 [-]: CALL      R11 2 2      ; R11 := R11(R12)
312 [-]: LT        0 R11 R10    ; if R11 >= R10 then PC := 328
313 [-]: JMP       328          ; PC := 328
314 [-]: GETGLOBAL R12 K1       ; R12 := _T
315 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["suitTable"]
316 [-]: GETGLOBAL R13 K1       ; R13 := _T
317 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["suitTable"]
318 [-]: GETTABLE  R13 R13 K17  ; R13 := R13["lerpRot"]
319 [-]: MOD       R13 R13 K47  ; R13 := R13 % 360.000000
320 [-]: SETTABLE  R12 K17 R13  ; R12["lerpRot"] := R13
321 [-]: GETGLOBAL R12 K1       ; R12 := _T
322 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["suitTable"]
323 [-]: GETGLOBAL R13 K1       ; R13 := _T
324 [-]: GETTABLE  R13 R13 K13  ; R13 := R13["suitTable"]
325 [-]: GETTABLE  R13 R13 K15  ; R13 := R13["desiredRot"]
326 [-]: MOD       R13 R13 K47  ; R13 := R13 % 360.000000
327 [-]: SETTABLE  R12 K15 R13  ; R12["desiredRot"] := R13
328 [-]: GETGLOBAL R12 K1       ; R12 := _T
329 [-]: GETTABLE  R12 R12 K13  ; R12 := R12["suitTable"]
330 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["lerpRot"]
331 [-]: GETGLOBAL R13 K1       ; R13 := _T
332 [-]: GETTABLE  R13 R13 K4   ; R13 := R13["mSentinelMode"]
333 [-]: TEST      R13 0        ; if not R13 then PC := 343
334 [-]: JMP       343          ; PC := 343
335 [-]: GETGLOBAL R13 K1       ; R13 := _T
336 [-]: GETTABLE  R13 R13 K48  ; R13 := R13["SENTINEL_DEFAULT_ROTATION"]
337 [-]: EQ        1 R13 K14    ; if R13 == nil then PC := 343
338 [-]: JMP       343          ; PC := 343
339 [-]: GETGLOBAL R13 K1       ; R13 := _T
340 [-]: GETTABLE  R13 R13 K48  ; R13 := R13["SENTINEL_DEFAULT_ROTATION"]
341 [-]: ADD       R13 R12 R13  ; R13 := R12 + R13
342 [-]: MOD       R12 R13 K47  ; R12 := R13 % 360.000000
343 [-]: MOD       R12 R12 K47  ; R12 := R12 % 360.000000
344 [-]: LE        0 R12 K49    ; if R12 > -180.000000 then PC := 348
345 [-]: JMP       348          ; PC := 348
346 [-]: ADD       R12 R12 K47  ; R12 := R12 + 360.000000
347 [-]: JMP       351          ; PC := 351
348 [-]: LE        0 K50 R12    ; if 180.000000 > R12 then PC := 351
349 [-]: JMP       351          ; PC := 351
350 [-]: SUB       R12 R12 K47  ; R12 := R12 - 360.000000
351 [-]: SELF      R13 R4 K51   ; R14 := R4; R13 := R4[0x89c6dbf7]
352 [-]: GETGLOBAL R15 K19      ; R15 := 0x00046924
353 [-]: MOVE      R16 R12      ; R16 := R12
354 [-]: LOADK     R17 0        ; R17 := 0.000000
355 [-]: LOADK     R18 0        ; R18 := 0.000000
356 [-]: CALL      R15 4 0      ; R15,... := R15(R16,R17,R18)
357 [-]: CALL      R13 0 1      ; R13(R14,...)
358 [-]: SELF      R13 R4 K52   ; R14 := R4; R13 := R4[0xd1586535]
359 [-]: CALL      R13 2 2      ; R13 := R13(R14)
360 [-]: SELF      R14 R4 K53   ; R15 := R4; R14 := R4[0x388577d5]
361 [-]: CALL      R14 2 2      ; R14 := R14(R15)
362 [-]: GETGLOBAL R15 K1       ; R15 := _T
363 [-]: GETTABLE  R15 R15 K13  ; R15 := R15["suitTable"]
364 [-]: GETTABLE  R15 R15 K54  ; R15 := R15["positions"]
365 [-]: TEST      R15 0        ; if not R15 then PC := 371
366 [-]: JMP       371          ; PC := 371
367 [-]: GETGLOBAL R15 K1       ; R15 := _T
368 [-]: GETTABLE  R15 R15 K13  ; R15 := R15["suitTable"]
369 [-]: GETTABLE  R15 R15 K54  ; R15 := R15["positions"]
370 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
371 [-]: GETGLOBAL R16 K0       ; R16 := 0x7b998233
372 [-]: MOVE      R17 R15      ; R17 := R15
373 [-]: CALL      R16 2 2      ; R16 := R16(R17)
374 [-]: TEST      R16 1        ; if R16 then PC := 378
375 [-]: JMP       378          ; PC := 378
376 [-]: MOVE      R13 R15      ; R13 := R15
377 [-]: JMP       398          ; PC := 398
378 [-]: GETGLOBAL R16 K1       ; R16 := _T
379 [-]: GETTABLE  R16 R16 K13  ; R16 := R16["suitTable"]
380 [-]: GETTABLE  R16 R16 K55  ; R16 := R16["desiredPos"]
381 [-]: EQ        1 R16 K14    ; if R16 == nil then PC := 398
382 [-]: JMP       398          ; PC := 398
383 [-]: SELF      R16 R4 K5    ; R17 := R4; R16 := R4[0xf2deaf69]
384 [-]: GETGLOBAL R18 K56      ; R18 := gPetAvatarType
385 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
386 [-]: TEST      R16 1        ; if R16 then PC := 398
387 [-]: JMP       398          ; PC := 398
388 [-]: GETGLOBAL R16 K57      ; R16 := 0x5db3ce80
389 [-]: MOVE      R17 R13      ; R17 := R13
390 [-]: GETGLOBAL R18 K1       ; R18 := _T
391 [-]: GETTABLE  R18 R18 K13  ; R18 := R18["suitTable"]
392 [-]: GETTABLE  R18 R18 K55  ; R18 := R18["desiredPos"]
393 [-]: GETGLOBAL R19 K36      ; R19 := 0x67652851
394 [-]: CALL      R19 1 2      ; R19 := R19()
395 [-]: MUL       R19 R19 K44  ; R19 := R19 * 4.000000
396 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
397 [-]: MOVE      R13 R16      ; R13 := R16
398 [-]: GETGLOBAL R16 K1       ; R16 := _T
399 [-]: GETTABLE  R16 R16 K13  ; R16 := R16["suitTable"]
400 [-]: GETTABLE  R16 R16 K58  ; R16 := R16["queuedTeleport"]
401 [-]: EQ        0 R16 K14    ; if R16 ~= nil then PC := 492
402 [-]: JMP       492          ; PC := 492
403 [-]: LOADK     R16 0        ; R16 := 0.000000
404 [-]: LOADK     R17 0        ; R17 := 0.000000
405 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
406 [-]: GETGLOBAL R19 K1       ; R19 := _T
407 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["suitTable"]
408 [-]: GETTABLE  R19 R19 K59  ; R19 := R19["lerpRotZ"]
409 [-]: CALL      R18 2 2      ; R18 := R18(R19)
410 [-]: TEST      R18 1        ; if R18 then PC := 415
411 [-]: JMP       415          ; PC := 415
412 [-]: GETGLOBAL R18 K1       ; R18 := _T
413 [-]: GETTABLE  R18 R18 K13  ; R18 := R18["suitTable"]
414 [-]: GETTABLE  R17 R18 K59  ; R17 := R18["lerpRotZ"]
415 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
416 [-]: GETGLOBAL R19 K1       ; R19 := _T
417 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["suitTable"]
418 [-]: GETTABLE  R19 R19 K60  ; R19 := R19["lerpRotY"]
419 [-]: CALL      R18 2 2      ; R18 := R18(R19)
420 [-]: TEST      R18 1        ; if R18 then PC := 425
421 [-]: JMP       425          ; PC := 425
422 [-]: GETGLOBAL R18 K1       ; R18 := _T
423 [-]: GETTABLE  R18 R18 K13  ; R18 := R18["suitTable"]
424 [-]: GETTABLE  R16 R18 K60  ; R16 := R18["lerpRotY"]
425 [-]: SELF      R18 R4 K61   ; R19 := R4; R18 := R4[0x589ef1c1]
426 [-]: MOVE      R20 R13      ; R20 := R13
427 [-]: GETGLOBAL R21 K19      ; R21 := 0x00046924
428 [-]: MOVE      R22 R12      ; R22 := R12
429 [-]: MOVE      R23 R16      ; R23 := R16
430 [-]: MOVE      R24 R17      ; R24 := R17
431 [-]: CALL      R21 4 0      ; R21,... := R21(R22,R23,R24)
432 [-]: CALL      R18 0 1      ; R18(R19,...)
433 [-]: LOADNIL   R18 R18      ; R18 := nil
434 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
435 [-]: GETGLOBAL R20 K62      ; R20 := 0x89326c93
436 [-]: CALL      R19 2 2      ; R19 := R19(R20)
437 [-]: TEST      R19 1        ; if R19 then PC := 443
438 [-]: JMP       443          ; PC := 443
439 [-]: GETGLOBAL R19 K62      ; R19 := 0x89326c93
440 [-]: SELF      R19 R19 K63  ; R20 := R19; R19 := R19[0x78298275]
441 [-]: CALL      R19 2 2      ; R19 := R19(R20)
442 [-]: MOVE      R18 R19      ; R18 := R19
443 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
444 [-]: MOVE      R20 R18      ; R20 := R18
445 [-]: CALL      R19 2 2      ; R19 := R19(R20)
446 [-]: TEST      R19 1        ; if R19 then PC := 509
447 [-]: JMP       509          ; PC := 509
448 [-]: SELF      R19 R18 K5   ; R20 := R18; R19 := R18[0xf2deaf69]
449 [-]: GETGLOBAL R21 K64      ; R21 := gLotusOperatorAvatarType
450 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
451 [-]: TEST      R19 1        ; if R19 then PC := 509
452 [-]: JMP       509          ; PC := 509
453 [-]: GETGLOBAL R19 K1       ; R19 := _T
454 [-]: GETTABLE  R19 R19 K65  ; R19 := R19["MenuSuitAvatar"]
455 [-]: EQ        1 R4 R19     ; if R4 == R19 then PC := 461
456 [-]: JMP       461          ; PC := 461
457 [-]: GETGLOBAL R19 K1       ; R19 := _T
458 [-]: GETTABLE  R19 R19 K66  ; R19 := R19["KDriveAvatar"]
459 [-]: EQ        0 R4 R19     ; if R4 ~= R19 then PC := 509
460 [-]: JMP       509          ; PC := 509
461 [-]: EQ        1 R18 R4     ; if R18 == R4 then PC := 509
462 [-]: JMP       509          ; PC := 509
463 [-]: SELF      R19 R18 K61  ; R20 := R18; R19 := R18[0x589ef1c1]
464 [-]: MOVE      R21 R13      ; R21 := R13
465 [-]: GETGLOBAL R22 K19      ; R22 := 0x00046924
466 [-]: MOVE      R23 R12      ; R23 := R12
467 [-]: LOADK     R24 0        ; R24 := 0.000000
468 [-]: LOADK     R25 0        ; R25 := 0.000000
469 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
470 [-]: CALL      R19 0 1      ; R19(R20,...)
471 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
472 [-]: GETGLOBAL R20 K1       ; R20 := _T
473 [-]: GETTABLE  R20 R20 K65  ; R20 := R20["MenuSuitAvatar"]
474 [-]: CALL      R19 2 2      ; R19 := R19(R20)
475 [-]: TEST      R19 1        ; if R19 then PC := 509
476 [-]: JMP       509          ; PC := 509
477 [-]: GETGLOBAL R19 K1       ; R19 := _T
478 [-]: GETTABLE  R19 R19 K66  ; R19 := R19["KDriveAvatar"]
479 [-]: EQ        0 R4 R19     ; if R4 ~= R19 then PC := 509
480 [-]: JMP       509          ; PC := 509
481 [-]: GETGLOBAL R19 K1       ; R19 := _T
482 [-]: GETTABLE  R19 R19 K65  ; R19 := R19["MenuSuitAvatar"]
483 [-]: SELF      R19 R19 K61  ; R20 := R19; R19 := R19[0x589ef1c1]
484 [-]: MOVE      R21 R13      ; R21 := R13
485 [-]: GETGLOBAL R22 K19      ; R22 := 0x00046924
486 [-]: MOVE      R23 R12      ; R23 := R12
487 [-]: LOADK     R24 0        ; R24 := 0.000000
488 [-]: LOADK     R25 0        ; R25 := 0.000000
489 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
490 [-]: CALL      R19 0 1      ; R19(R20,...)
491 [-]: JMP       509          ; PC := 509
492 [-]: GETGLOBAL R19 K1       ; R19 := _T
493 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["suitTable"]
494 [-]: GETGLOBAL R20 K1       ; R20 := _T
495 [-]: GETTABLE  R20 R20 K13  ; R20 := R20["suitTable"]
496 [-]: GETTABLE  R20 R20 K58  ; R20 := R20["queuedTeleport"]
497 [-]: GETGLOBAL R21 K67      ; R21 := 0xb693b6c1
498 [-]: CALL      R21 1 2      ; R21 := R21()
499 [-]: SUB       R20 R20 R21  ; R20 := R20 - R21
500 [-]: SETTABLE  R19 K58 R20  ; R19["queuedTeleport"] := R20
501 [-]: GETGLOBAL R19 K1       ; R19 := _T
502 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["suitTable"]
503 [-]: GETTABLE  R19 R19 K58  ; R19 := R19["queuedTeleport"]
504 [-]: LE        0 R19 K20    ; if R19 > 0.000000 then PC := 509
505 [-]: JMP       509          ; PC := 509
506 [-]: GETGLOBAL R19 K1       ; R19 := _T
507 [-]: GETTABLE  R19 R19 K13  ; R19 := R19["suitTable"]
508 [-]: SETTABLE  R19 K58 K14  ; R19["queuedTeleport"] := nil
509 [-]: GETGLOBAL R19 K68      ; R19 := 0xa421af95
510 [-]: MOVE      R20 R5       ; R20 := R5
511 [-]: MOVE      R21 R6       ; R21 := R6
512 [-]: LOADK     R22 -200     ; R22 := -200.000000
513 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
514 [-]: SELF      R20 R4 K69   ; R21 := R4; R20 := R4[0xebfba9e4]
515 [-]: CALL      R20 2 2      ; R20 := R20(R21)
516 [-]: SELF      R21 R0 K70   ; R22 := R0; R21 := R0[0x28209ddc]
517 [-]: MOVE      R23 R20      ; R23 := R20
518 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
519 [-]: SETTABLE  R21 K71 K20  ; R21["z"] := 0.000000
520 [-]: GETGLOBAL R22 K72      ; R22 := 0x20b7f774
521 [-]: MOVE      R23 R21      ; R23 := R21
522 [-]: MOVE      R24 R19      ; R24 := R19
523 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
524 [-]: GETGLOBAL R23 K73      ; R23 := 0xf6c6e505
525 [-]: MOVE      R24 R22      ; R24 := R22
526 [-]: CALL      R23 2 2      ; R23 := R23(R24)
527 [-]: GETTABLE  R24 R23 K71  ; R24 := R23["z"]
528 [-]: LT        0 K20 R24    ; if 0.000000 >= R24 then PC := 533
529 [-]: JMP       533          ; PC := 533
530 [-]: GETTABLE  R24 R23 K71  ; R24 := R23["z"]
531 [-]: UNM       R24 R24      ; R24 := ^ R24
532 [-]: SETTABLE  R23 K71 R24  ; R23["z"] := R24
533 [-]: GETGLOBAL R24 K74      ; R24 := 0x492c7f2a
534 [-]: MOVE      R25 R23      ; R25 := R23
535 [-]: GETGLOBAL R26 K19      ; R26 := 0x00046924
536 [-]: SUB       R27 K75 R12  ; R27 := 90.000000 - R12
537 [-]: LOADK     R28 0        ; R28 := 0.000000
538 [-]: LOADK     R29 0        ; R29 := 0.000000
539 [-]: CALL      R26 4 0      ; R26,... := R26(R27,R28,R29)
540 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
541 [-]: MOVE      R23 R24      ; R23 := R24
542 [-]: GETGLOBAL R24 K72      ; R24 := 0x20b7f774
543 [-]: GETGLOBAL R25 K76      ; R25 := ZERO_VECTOR
544 [-]: MOVE      R26 R23      ; R26 := R23
545 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
546 [-]: MOVE      R22 R24      ; R22 := R24
547 [-]: SETTABLE  R22 K77 K20  ; R22["bank"] := 0.000000
548 [-]: GETTABLE  R24 R22 K78  ; R24 := R22["pitch"]
549 [-]: UNM       R24 R24      ; R24 := ^ R24
550 [-]: SETTABLE  R22 K78 R24  ; R22["pitch"] := R24
551 [-]: GETGLOBAL R24 K80      ; R24 := 0x42dcc9f5
552 [-]: GETTABLE  R25 R22 K79  ; R25 := R22["heading"]
553 [-]: LOADK     R26 -70      ; R26 := -70.000000
554 [-]: LOADK     R27 70       ; R27 := 70.000000
555 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
556 [-]: SETTABLE  R22 K79 R24  ; R22["heading"] := R24
557 [-]: GETGLOBAL R24 K80      ; R24 := 0x42dcc9f5
558 [-]: GETTABLE  R25 R22 K78  ; R25 := R22["pitch"]
559 [-]: LOADK     R26 -30      ; R26 := -30.000000
560 [-]: LOADK     R27 20       ; R27 := 20.000000
561 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
562 [-]: SETTABLE  R22 K78 R24  ; R22["pitch"] := R24
563 [-]: GETGLOBAL R24 K1       ; R24 := _T
564 [-]: GETTABLE  R24 R24 K13  ; R24 := R24["suitTable"]
565 [-]: GETTABLE  R24 R24 K18  ; R24 := R24["lerpHead"]
566 [-]: GETGLOBAL R25 K43      ; R25 := 0x9bafffe3
567 [-]: GETGLOBAL R26 K1       ; R26 := _T
568 [-]: GETTABLE  R26 R26 K13  ; R26 := R26["suitTable"]
569 [-]: GETTABLE  R26 R26 K18  ; R26 := R26["lerpHead"]
570 [-]: GETTABLE  R26 R26 K79  ; R26 := R26["heading"]
571 [-]: GETTABLE  R27 R22 K79  ; R27 := R22["heading"]
572 [-]: GETGLOBAL R28 K36      ; R28 := 0x67652851
573 [-]: CALL      R28 1 2      ; R28 := R28()
574 [-]: MUL       R28 R28 K81  ; R28 := R28 * 8.000000
575 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
576 [-]: SETTABLE  R24 K79 R25  ; R24["heading"] := R25
577 [-]: GETGLOBAL R24 K1       ; R24 := _T
578 [-]: GETTABLE  R24 R24 K13  ; R24 := R24["suitTable"]
579 [-]: GETTABLE  R24 R24 K18  ; R24 := R24["lerpHead"]
580 [-]: GETGLOBAL R25 K43      ; R25 := 0x9bafffe3
581 [-]: GETGLOBAL R26 K1       ; R26 := _T
582 [-]: GETTABLE  R26 R26 K13  ; R26 := R26["suitTable"]
583 [-]: GETTABLE  R26 R26 K18  ; R26 := R26["lerpHead"]
584 [-]: GETTABLE  R26 R26 K78  ; R26 := R26["pitch"]
585 [-]: GETTABLE  R27 R22 K78  ; R27 := R22["pitch"]
586 [-]: GETGLOBAL R28 K36      ; R28 := 0x67652851
587 [-]: CALL      R28 1 2      ; R28 := R28()
588 [-]: MUL       R28 R28 K81  ; R28 := R28 * 8.000000
589 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
590 [-]: SETTABLE  R24 K78 R25  ; R24["pitch"] := R25
591 [-]: GETGLOBAL R24 K24      ; R24 := 0x34291f5c
592 [-]: GETTABLE  R24 R24 K82  ; R82 := R24[0xe6b41adb]
593 [-]: CALL      R24 1 2      ; R24 := R24()
594 [-]: TEST      R7 1         ; if R7 then PC := 598
595 [-]: JMP       598          ; PC := 598
596 [-]: TEST      R24 1        ; if R24 then PC := 605
597 [-]: JMP       605          ; PC := 605
598 [-]: GETGLOBAL R25 K1       ; R25 := _T
599 [-]: GETTABLE  R25 R25 K13  ; R25 := R25["suitTable"]
600 [-]: SETTABLE  R25 K27 R5   ; R25["lastMX"] := R5
601 [-]: GETGLOBAL R25 K1       ; R25 := _T
602 [-]: GETTABLE  R25 R25 K13  ; R25 := R25["suitTable"]
603 [-]: SETTABLE  R25 K28 R6   ; R25["lastMY"] := R6
604 [-]: JMP       622          ; PC := 622
605 [-]: TEST      R24 0        ; if not R24 then PC := 622
606 [-]: JMP       622          ; PC := 622
607 [-]: TEST      R2 0         ; if not R2 then PC := 616
608 [-]: JMP       616          ; PC := 616
609 [-]: GETGLOBAL R25 K1       ; R25 := _T
610 [-]: GETTABLE  R25 R25 K13  ; R25 := R25["suitTable"]
611 [-]: SETTABLE  R25 K27 R5   ; R25["lastMX"] := R5
612 [-]: GETGLOBAL R25 K1       ; R25 := _T
613 [-]: GETTABLE  R25 R25 K13  ; R25 := R25["suitTable"]
614 [-]: SETTABLE  R25 K28 R6   ; R25["lastMY"] := R6
615 [-]: JMP       622          ; PC := 622
616 [-]: GETGLOBAL R25 K1       ; R25 := _T
617 [-]: GETTABLE  R25 R25 K13  ; R25 := R25["suitTable"]
618 [-]: SETTABLE  R25 K27 K14  ; R25["lastMX"] := nil
619 [-]: GETGLOBAL R25 K1       ; R25 := _T
620 [-]: GETTABLE  R25 R25 K13  ; R25 := R25["suitTable"]
621 [-]: SETTABLE  R25 K28 K14  ; R25["lastMY"] := nil
622 [-]: TEST      R7 0         ; if not R7 then PC := 628
623 [-]: JMP       628          ; PC := 628
624 [-]: GETGLOBAL R25 K1       ; R25 := _T
625 [-]: GETTABLE  R25 R25 K13  ; R25 := R25["suitTable"]
626 [-]: GETUPVAL  R26 U1       ; R26 := U1
627 [-]: SETTABLE  R25 K27 R26  ; R25["lastMX"] := R26
628 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 1133
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x89326c93
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x78298275]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x9bafffe3
  5 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["heading"]
  6 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["heading"]
  7 [-]: GETGLOBAL R6 K4        ; R6 := 0x67652851
  8 [-]: CALL      R6 1 2       ; R6 := R6()
  9 [-]: MUL       R6 R6 K5     ; R6 := R6 * 8.000000
 10 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 11 [-]: SETTABLE  R1 K2 R3     ; R1["heading"] := R3
 12 [-]: GETGLOBAL R3 K3        ; R3 := 0x9bafffe3
 13 [-]: GETTABLE  R4 R1 K6     ; R4 := R1["pitch"]
 14 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["pitch"]
 15 [-]: GETGLOBAL R6 K4        ; R6 := 0x67652851
 16 [-]: CALL      R6 1 2       ; R6 := R6()
 17 [-]: MUL       R6 R6 K5     ; R6 := R6 * 8.000000
 18 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 19 [-]: SETTABLE  R1 K6 R3     ; R1["pitch"] := R3
 20 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xb63fc1d8]
 21 [-]: GETGLOBAL R5 K8        ; R5 := 0x0469f296
 22 [-]: LOADK     R6 K9        ; R6 := "GAME_C1_HEAD1"
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: MOVE      R6 R1        ; R6 := R1
 25 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 26 [-]: RETURN    R1 2         ; return R1
 27 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 1142
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 1145
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["profileIconList"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 19
  6 [-]: JMP       19           ; PC := 19
  7 [-]: GETGLOBAL R0 K1        ; R0 := _T
  8 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  9 [-]: SETTABLE  R0 K2 R1     ; R0["profileIconList"] := R1
 10 [-]: GETGLOBAL R0 K1        ; R0 := _T
 11 [-]: CLOSURE   R1 0         ; R1 := closure(Function #30.1)
 12 [-]: SETTABLE  R0 K3 R1     ; R0["GetLocalLoadout"] := R1
 13 [-]: GETGLOBAL R0 K1        ; R0 := _T
 14 [-]: CLOSURE   R1 1         ; R1 := closure(Function #30.2)
 15 [-]: SETTABLE  R0 K4 R1     ; R0["SetProfileIcon"] := R1
 16 [-]: GETGLOBAL R0 K1        ; R0 := _T
 17 [-]: CLOSURE   R1 2         ; R1 := closure(Function #30.3)
 18 [-]: SETTABLE  R0 K5 R1     ; R0["UpdateProfileIconList"] := R1
 19 [-]: RETURN    R0 1         ; return 


; Function #30.1:
;
; Name:            
; Defined at line: 1149
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25d99d89
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADNIL   R1 R1        ; R1 := nil
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x62c81b76]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #30.2:
;
; Name:            
; Defined at line: 1158
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x7f53dbf7]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0x25d99d89
 11 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 12 [-]: MOVE      R5 R3        ; R5 := R3
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: TEST      R4 1         ; if R4 then PC := 20
 15 [-]: JMP       20           ; PC := 20
 16 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3[0x285a468e]
 17 [-]: MOVE      R6 R1        ; R6 := R1
 18 [-]: LOADK     R7 K5        ; R7 := "OnAvatarImageSet"
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: SELF      R4 R2 K4     ; R5 := R2; R4 := R2[0x285a468e]
 21 [-]: MOVE      R6 R1        ; R6 := R1
 22 [-]: CALL      R4 3 1       ; R4(R5,R6)
 23 [-]: GETGLOBAL R4 K6        ; R4 := 0xe7f2b02f
 24 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x565be9ee]
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: GETGLOBAL R5 K2        ; R5 := 0x7b998233
 27 [-]: MOVE      R6 R4        ; R6 := R4
 28 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 29 [-]: TEST      R5 1         ; if R5 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: SELF      R5 R4 K8     ; R6 := R4; R5 := R4[0xe6abf1a9]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: TEST      R5 0         ; if not R5 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: GETGLOBAL R5 K9        ; R5 := 0x3d106989
 36 [-]: LOADK     R6 K10       ; R6 := "SetProfileIcon - SendLobbyLoadout"
 37 [-]: CALL      R5 2 1       ; R5(R6)
 38 [-]: GETGLOBAL R5 K11       ; R5 := 0xbe190284
 39 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5[0xb411ab6c]
 40 [-]: CALL      R5 2 1       ; R5(R6)
 41 [-]: GETGLOBAL R5 K0        ; R5 := _T
 42 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0x6ee6cad5]
 43 [-]: CALL      R5 2 1       ; R5(R6)
 44 [-]: RETURN    R0 1         ; return 


; Function #30.3:
;
; Name:            
; Defined at line: 1181
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["profileIconList"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R0 K1        ; R0 := _T
  9 [-]: GETTABLE  R0 R0 K3     ; R82 := R0[0x7f53dbf7]
 10 [-]: CALL      R0 1 2       ; R0 := R0()
 11 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 12 [-]: GETGLOBAL R2 K1        ; R2 := _T
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["profileIconList"]
 14 [-]: LEN       R2 R2        ; R2 := # R2
 15 [-]: LOADK     R3 1         ; R3 := 1.000000
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: LOADK     R5 1         ; R5 := 1.000000
 18 [-]: FORPREP   R3 91        ; R3 -= R5; PC := 91
 19 [-]: GETGLOBAL R7 K1        ; R7 := _T
 20 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["profileIconList"]
 21 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 22 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
 23 [-]: GETTABLE  R9 R7 K4     ; R9 := R7["Movie"]
 24 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 25 [-]: TEST      R8 1         ; if R8 then PC := 91
 26 [-]: JMP       91           ; PC := 91
 27 [-]: MOVE      R8 R0        ; R8 := R0
 28 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 29 [-]: GETTABLE  R10 R7 K5    ; R10 := R7["HumanPlayer"]
 30 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 31 [-]: TEST      R9 1         ; if R9 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: GETTABLE  R9 R7 K5     ; R9 := R7["HumanPlayer"]
 34 [-]: SELF      R9 R9 K6     ; R10 := R9; R9 := R9[0x420402a9]
 35 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 36 [-]: TEST      R9 1         ; if R9 then PC := 42
 37 [-]: JMP       42           ; PC := 42
 38 [-]: GETTABLE  R9 R7 K5     ; R9 := R7["HumanPlayer"]
 39 [-]: SELF      R9 R9 K7     ; R10 := R9; R9 := R9[0x62c81b76]
 40 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 41 [-]: MOVE      R8 R9        ; R8 := R9
 42 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 43 [-]: MOVE      R10 R8       ; R10 := R8
 44 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 45 [-]: TEST      R9 1         ; if R9 then PC := 91
 46 [-]: JMP       91           ; PC := 91
 47 [-]: SELF      R9 R8 K8     ; R10 := R8; R9 := R8[0x5734fdfa]
 48 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 49 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
 50 [-]: MOVE      R11 R9       ; R11 := R9
 51 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 52 [-]: TEST      R10 1        ; if R10 then PC := 71
 53 [-]: JMP       71           ; PC := 71
 54 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
 55 [-]: GETTABLE  R11 R9 K9    ; R11 := R9["mItemType"]
 56 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 57 [-]: TEST      R10 1        ; if R10 then PC := 71
 58 [-]: JMP       71           ; PC := 71
 59 [-]: GETGLOBAL R10 K10      ; R10 := 0xb009bbc6
 60 [-]: GETTABLE  R11 R9 K9    ; R11 := R9["mItemType"]
 61 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 62 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
 63 [-]: MOVE      R12 R10      ; R12 := R10
 64 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 65 [-]: TEST      R11 1        ; if R11 then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: SELF      R11 R10 K11  ; R12 := R10; R11 := R10[0x056dcf06]
 68 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 69 [-]: MOVE      R9 R11       ; R9 := R11
 70 [-]: JMP       73           ; PC := 73
 71 [-]: GETGLOBAL R11 K12      ; R11 := 0x0032441c
 72 [-]: GETTABLE  R9 R11 K13   ; R9 := R11["UITexture_ProfilePlaceHolder"]
 73 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
 74 [-]: MOVE      R12 R9       ; R12 := R9
 75 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 76 [-]: TEST      R11 1        ; if R11 then PC := 88
 77 [-]: JMP       88           ; PC := 88
 78 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
 79 [-]: GETTABLE  R12 R7 K4    ; R12 := R7["Movie"]
 80 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 81 [-]: TEST      R11 1        ; if R11 then PC := 88
 82 [-]: JMP       88           ; PC := 88
 83 [-]: GETTABLE  R11 R7 K4    ; R11 := R7["Movie"]
 84 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11[0x1cb415c1]
 85 [-]: GETTABLE  R13 R7 K15   ; R13 := R7["Clip"]
 86 [-]: MOVE      R14 R9       ; R14 := R9
 87 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 88 [-]: LEN       R11 R1       ; R11 := # R1
 89 [-]: ADD       R11 R11 K16  ; R11 := R11 + 1.000000
 90 [-]: SETTABLE  R1 R11 R7    ; R1[R11] := R7
 91 [-]: FORLOOP   R3 19        ; R3 += R5; if R3 <= R4 then begin PC := 19; R6 := R3 end
 92 [-]: GETGLOBAL R11 K1       ; R11 := _T
 93 [-]: SETTABLE  R11 K2 R1    ; R11["profileIconList"] := R1
 94 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 1220
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := _T
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["profileIconList"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R2 K1        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["profileIconList"]
 10 [-]: LEN       R2 R2        ; R2 := # R2
 11 [-]: LOADK     R3 1         ; R3 := 1.000000
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: LOADK     R5 1         ; R5 := 1.000000
 14 [-]: FORPREP   R3 34        ; R3 -= R5; PC := 34
 15 [-]: GETGLOBAL R7 K1        ; R7 := _T
 16 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["profileIconList"]
 17 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 18 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["Movie"]
 19 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 34
 20 [-]: JMP       34           ; PC := 34
 21 [-]: GETGLOBAL R7 K1        ; R7 := _T
 22 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["profileIconList"]
 23 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 24 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["Clip"]
 25 [-]: EQ        0 R7 R1      ; if R7 ~= R1 then PC := 34
 26 [-]: JMP       34           ; PC := 34
 27 [-]: GETGLOBAL R7 K5        ; R7 := 0x33bdd652
 28 [-]: GETTABLE  R7 R7 K6     ; R82 := R7[0x9c1f3b5a]
 29 [-]: GETGLOBAL R8 K1        ; R8 := _T
 30 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["profileIconList"]
 31 [-]: MOVE      R9 R6        ; R9 := R6
 32 [-]: CALL      R7 3 1       ; R7(R8,R9)
 33 [-]: RETURN    R0 1         ; return 
 34 [-]: FORLOOP   R3 15        ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
 35 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 1233
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETGLOBAL R4 K1        ; R4 := _T
  3 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["profileIconList"]
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: TEST      R3 0         ; if not R3 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: NEWTABLE  R3 0 3       ; R3 := {}
  9 [-]: SETTABLE  R3 K3 R0     ; R3["Movie"] := R0
 10 [-]: SETTABLE  R3 K4 R1     ; R3["Clip"] := R1
 11 [-]: SETTABLE  R3 K5 R2     ; R3["HumanPlayer"] := R2
 12 [-]: LOADBOOL  R4 0 0       ; R4 := false
 13 [-]: GETGLOBAL R5 K1        ; R5 := _T
 14 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["profileIconList"]
 15 [-]: LEN       R5 R5        ; R5 := # R5
 16 [-]: LOADK     R6 1         ; R6 := 1.000000
 17 [-]: MOVE      R7 R5        ; R7 := R5
 18 [-]: LOADK     R8 1         ; R8 := 1.000000
 19 [-]: FORPREP   R6 32        ; R6 -= R8; PC := 32
 20 [-]: GETGLOBAL R10 K1       ; R10 := _T
 21 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["profileIconList"]
 22 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 23 [-]: GETTABLE  R10 R10 K4   ; R10 := R10["Clip"]
 24 [-]: GETTABLE  R11 R3 K4    ; R11 := R3["Clip"]
 25 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: LOADBOOL  R4 1 0       ; R4 := true
 28 [-]: GETGLOBAL R10 K1       ; R10 := _T
 29 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["profileIconList"]
 30 [-]: SETTABLE  R10 R9 R3    ; R10[R9] := R3
 31 [-]: JMP       33           ; PC := 33
 32 [-]: FORLOOP   R6 20        ; R6 += R8; if R6 <= R7 then begin PC := 20; R9 := R6 end
 33 [-]: TEST      R4 1         ; if R4 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETGLOBAL R10 K1       ; R10 := _T
 36 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["profileIconList"]
 37 [-]: ADD       R11 R5 K6    ; R11 := R5 + 1.000000
 38 [-]: SETTABLE  R10 R11 R3   ; R10[R11] := R3
 39 [-]: GETGLOBAL R10 K1       ; R10 := _T
 40 [-]: SELF      R10 R10 K7   ; R11 := R10; R10 := R10[0x6ee6cad5]
 41 [-]: CALL      R10 2 1      ; R10(R11)
 42 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 1256
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
  2 [-]: GETGLOBAL R6 K1        ; R6 := 0x25d99d89
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: TEST      R5 0         ; if not R5 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R5 K2        ; R5 := REPORT_PLAYER
  8 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 23
  9 [-]: JMP       23           ; PC := 23
 10 [-]: GETGLOBAL R5 K1        ; R5 := 0x25d99d89
 11 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5[0x024a42a1]
 12 [-]: MOVE      R7 R0        ; R7 := R0
 13 [-]: GETGLOBAL R8 K4        ; R8 := 0x89326c93
 14 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8[0xfb64e76c]
 15 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 16 [-]: SELF      R8 R8 K6     ; R9 := R8; R8 := R8[0x5ca33548]
 17 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 18 [-]: MOVE      R9 R1        ; R9 := R1
 19 [-]: MOVE      R10 R2       ; R10 := R2
 20 [-]: MOVE      R11 R4       ; R11 := R4
 21 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
 22 [-]: JMP       33           ; PC := 33
 23 [-]: GETGLOBAL R5 K7        ; R5 := REPORT_CLAN_AD
 24 [-]: EQ        0 R3 R5      ; if R3 ~= R5 then PC := 33
 25 [-]: JMP       33           ; PC := 33
 26 [-]: GETGLOBAL R5 K1        ; R5 := 0x25d99d89
 27 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5[0xd58aef72]
 28 [-]: MOVE      R7 R0        ; R7 := R0
 29 [-]: MOVE      R8 R1        ; R8 := R1
 30 [-]: MOVE      R9 R2        ; R9 := R2
 31 [-]: MOVE      R10 R4       ; R10 := R4
 32 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 33 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 1268
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: GETGLOBAL R3 K1        ; R3 := 0x0032441c
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["UIMovie_GenericSettings"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 0         ; if not R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0x1fd6abd0]
 14 [-]: GETGLOBAL R4 K1        ; R4 := 0x0032441c
 15 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["UIMovie_GenericSettings"]
 16 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 17 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 18 [-]: MOVE      R4 R2        ; R4 := R2
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 0         ; if not R3 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0xe4162eed]
 24 [-]: LOADK     R5 K5        ; R5 := "SetTitle"
 25 [-]: LOADK     R6 K6        ; R6 := "/Lotus/Language/Menu/ReportPlayer_DetailsTitle"
 26 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 27 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0xe4162eed]
 28 [-]: LOADK     R5 K7        ; R5 := "SetConfirmButtonActive"
 29 [-]: LOADK     R6 K8        ; R6 := "true"
 30 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 31 [-]: GETGLOBAL R3 K9        ; R3 := _T
 32 [-]: CLOSURE   R4 0         ; R4 := closure(Function #34.1)
 33 [-]: MOVE      R0 R1        ; R0 := R1
 34 [-]: MOVE      R0 R0        ; R0 := R0
 35 [-]: SETTABLE  R3 K10 R4    ; R3["ReportReason_Done"] := R4
 36 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0xe4162eed]
 37 [-]: LOADK     R5 K11       ; R5 := "SetCallBack"
 38 [-]: LOADK     R6 K10       ; R6 := "ReportReason_Done"
 39 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 40 [-]: GETGLOBAL R3 K9        ; R3 := _T
 41 [-]: CLOSURE   R4 1         ; R4 := closure(Function #34.2)
 42 [-]: SETTABLE  R3 K12 R4    ; R3["ReportReason_GetSettings"] := R4
 43 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0xe4162eed]
 44 [-]: LOADK     R5 K13       ; R5 := "SetElementsFunction"
 45 [-]: LOADK     R6 K12       ; R6 := "ReportReason_GetSettings"
 46 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 47 [-]: RETURN    R0 1         ; return 


; Function #34.1:
;
; Name:            
; Defined at line: 1281
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: SETTABLE  R2 K1 K2     ; R2["ReportReason_Done"] := nil
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: SETTABLE  R2 K3 K2     ; R2["ReportReason_GetSettings"] := nil
  5 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 11 [-]: GETUPVAL  R3 U0        ; R3 := U0
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: LOADBOOL  R3 0 0       ; R3 := false
 17 [-]: CALL      R2 2 1       ; R2(R3)
 18 [-]: RETURN    R0 1         ; return 
 19 [-]: GETUPVAL  R2 U1        ; R2 := U1
 20 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xe4162eed]
 21 [-]: LOADK     R4 K6        ; R4 := "ConfirmReport"
 22 [-]: GETTABLE  R5 R0 K7     ; R5 := R0[1.000000]
 23 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mContent"]
 24 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 25 [-]: RETURN    R0 1         ; return 


; Function #34.2:
;
; Name:            
; Defined at line: 1298
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
  3 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x23d5322f]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: NEWTABLE  R3 0 6       ; R3 := {}
  6 [-]: SETTABLE  R3 K2 K3     ; R3["mLabel"] := "/Lotus/Language/CrashHandler/STRING_DETAILS"
  7 [-]: GETGLOBAL R4 K5        ; R4 := INPUTBOX
  8 [-]: SETTABLE  R3 K4 R4     ; R3["mType"] := R4
  9 [-]: SETTABLE  R3 K6 K7     ; R3["mMaxChars"] := 200.000000
 10 [-]: SETTABLE  R3 K8 K9     ; R3["mWidth"] := 500.000000
 11 [-]: SETTABLE  R3 K10 K11   ; R3["mHeight"] := 210.000000
 12 [-]: SETTABLE  R3 K12 K13   ; R3["mMultiLine"] := true
 13 [-]: CALL      R1 3 1       ; R1(R2,R3)
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 1316
; #Upvalues:       4
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
  2 [-]: MOVE      R6 R0        ; R6 := R0
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: TEST      R5 1         ; if R5 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
  7 [-]: GETGLOBAL R6 K1        ; R6 := 0x0032441c
  8 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["UIMovie_GenericMenu"]
  9 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 10 [-]: TEST      R5 0         ; if not R5 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADNIL   R5 R5        ; R5 := nil
 13 [-]: RETURN    R5 2         ; return R5
 14 [-]: EQ        0 R4 K3      ; if R4 ~= nil then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: GETGLOBAL R4 K4        ; R4 := REPORT_PLAYER
 17 [-]: LOADK     R5 K5        ; R5 := ""
 18 [-]: LOADK     R6 K5        ; R6 := ""
 19 [-]: GETUPVAL  R7 U0        ; R7 := U0
 20 [-]: MOVE      R8 R0        ; R8 := R0
 21 [-]: LOADK     R9 1         ; R9 := 1.000000
 22 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 23 [-]: CLOSURE   R8 0         ; R8 := closure(Function #35.1)
 24 [-]: MOVE      R0 R6        ; R0 := R6
 25 [-]: GETUPVAL  R0 U1        ; R0 := U1
 26 [-]: MOVE      R0 R3        ; R0 := R3
 27 [-]: SETTABLE  R7 K6 R8     ; R7["ConfirmReport"] := R8
 28 [-]: CLOSURE   R8 1         ; R8 := closure(Function #35.2)
 29 [-]: GETUPVAL  R0 U2        ; R0 := U2
 30 [-]: MOVE      R0 R1        ; R0 := R1
 31 [-]: MOVE      R0 R5        ; R0 := R5
 32 [-]: MOVE      R0 R6        ; R0 := R6
 33 [-]: MOVE      R0 R4        ; R0 := R4
 34 [-]: MOVE      R0 R2        ; R0 := R2
 35 [-]: SETTABLE  R7 K7 R8     ; R7["OnConfirmReport"] := R8
 36 [-]: CLOSURE   R8 2         ; R8 := closure(Function #35.3)
 37 [-]: GETUPVAL  R0 U1        ; R0 := U1
 38 [-]: MOVE      R0 R5        ; R0 := R5
 39 [-]: MOVE      R0 R2        ; R0 := R2
 40 [-]: MOVE      R0 R7        ; R0 := R7
 41 [-]: SETTABLE  R7 K8 R8     ; R7["OnReported"] := R8
 42 [-]: SELF      R8 R0 K9     ; R9 := R0; R8 := R0[0x1fd6abd0]
 43 [-]: GETGLOBAL R10 K1       ; R10 := 0x0032441c
 44 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["UIMovie_GenericMenu"]
 45 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 46 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8[0xe4162eed]
 47 [-]: LOADK     R11 K11      ; R11 := "SetTitle"
 48 [-]: SELF      R12 R0 K12   ; R13 := R0; R12 := R0[0x42b04007]
 49 [-]: LOADK     R14 K13      ; R14 := "/Lotus/Language/Menu/SocialOverlay_ReportPlayer"
 50 [-]: LOADBOOL  R15 0 0      ; R15 := false
 51 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 52 [-]: LOADK     R13 K14      ; R13 := " "
 53 [-]: MOVE      R14 R1       ; R14 := R1
 54 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
 55 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 56 [-]: GETGLOBAL R9 K15       ; R9 := _T
 57 [-]: CLOSURE   R10 3        ; R10 := closure(Function #35.4)
 58 [-]: MOVE      R0 R5        ; R0 := R5
 59 [-]: GETUPVAL  R0 U3        ; R0 := U3
 60 [-]: MOVE      R0 R0        ; R0 := R0
 61 [-]: MOVE      R0 R2        ; R0 := R2
 62 [-]: SETTABLE  R9 K16 R10   ; R9["ReportSelectionDone"] := R10
 63 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8[0xe4162eed]
 64 [-]: LOADK     R11 K17      ; R11 := "SetCallBack"
 65 [-]: LOADK     R12 K16      ; R12 := "ReportSelectionDone"
 66 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 67 [-]: GETGLOBAL R9 K15       ; R9 := _T
 68 [-]: CLOSURE   R10 4        ; R10 := closure(Function #35.5)
 69 [-]: SETTABLE  R9 K18 R10   ; R9["GetReportOptions"] := R10
 70 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8[0xe4162eed]
 71 [-]: LOADK     R11 K19      ; R11 := "SetElementsFunction"
 72 [-]: LOADK     R12 K18      ; R12 := "GetReportOptions"
 73 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 74 [-]: RETURN    R8 2         ; return R8
 75 [-]: RETURN    R0 1         ; return 


; Function #35.1:
;
; Name:            
; Defined at line: 1329
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U1        ; R1 := U1
  2 [-]: GETTABLE  R1 R1 K0     ; R82 := R1[0x06d055f9]
  3 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADBOOL  R2 1 0       ; R2 := true
  7 [-]: LOADK     R3 K2        ; R3 := ""
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: SETUPVAL  R1 U0        ; U82 := 
 11 [-]: GETUPVAL  R1 U2        ; R1 := U2
 12 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: LOADK     R2 K3        ; R2 := "<br><br>"
 16 [-]: GETUPVAL  R3 U2        ; R3 := U2
 17 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 18 [-]: SETUPVAL  R1 U0        ; U82 := 
 19 [-]: GETUPVAL  R1 U1        ; R1 := U1
 20 [-]: GETTABLE  R1 R1 K4     ; R82 := R1[0xdedfded7]
 21 [-]: LOADK     R2 K5        ; R2 := "/Lotus/Language/Menu/ReportPlayer_ConfirmText"
 22 [-]: LOADK     R3 K6        ; R3 := "OnConfirmReport"
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: GETGLOBAL R2 K7        ; R2 := 0x7b998233
 25 [-]: MOVE      R3 R1        ; R3 := R1
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: TEST      R2 1         ; if R2 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0xe4162eed]
 30 [-]: LOADK     R4 K9        ; R4 := "SetSendCallbackOnShutdown"
 31 [-]: LOADK     R5 K10       ; R5 := "true"
 32 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 33 [-]: RETURN    R0 1         ; return 


; Function #35.2:
;
; Name:            
; Defined at line: 1343
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: GETUPVAL  R3 U2        ; R3 := U2
  9 [-]: GETUPVAL  R4 U3        ; R4 := U3
 10 [-]: GETUPVAL  R5 U4        ; R5 := U4
 11 [-]: LOADK     R6 K3        ; R6 := "OnReported"
 12 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 13 [-]: JMP       22           ; PC := 22
 14 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 15 [-]: GETUPVAL  R2 U5        ; R2 := U5
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: GETUPVAL  R1 U5        ; R1 := U5
 20 [-]: LOADNIL   R2 R2        ; R2 := nil
 21 [-]: CALL      R1 2 1       ; R1(R2)
 22 [-]: RETURN    R0 1         ; return 


; Function #35.3:
;
; Name:            
; Defined at line: 1352
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 0         ; if not R0 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K0     ; R82 := R3[0xe0cba3ca]
  5 [-]: LOADK     R4 K1        ; R4 := "/Lotus/Language/Menu/ReportPlayerSuccess"
  6 [-]: CALL      R3 2 1       ; R3(R4)
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K2     ; R82 := R3[0xa53f5e12]
 11 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/Menu/ReportPlayerFailed"
 12 [-]: CALL      R3 2 1       ; R3(R4)
 13 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 14 [-]: GETUPVAL  R4 U2        ; R4 := U2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: GETUPVAL  R3 U2        ; R3 := U2
 19 [-]: MOVE      R4 R2        ; R4 := R2
 20 [-]: CALL      R3 2 1       ; R3(R4)
 21 [-]: GETUPVAL  R3 U3        ; R3 := U3
 22 [-]: SETTABLE  R3 K5 K6     ; R3["ConfirmReport"] := nil
 23 [-]: GETUPVAL  R3 U3        ; R3 := U3
 24 [-]: SETTABLE  R3 K7 K6     ; R3["OnConfirmReport"] := nil
 25 [-]: GETUPVAL  R3 U3        ; R3 := U3
 26 [-]: SETTABLE  R3 K8 K6     ; R3["OnReported"] := nil
 27 [-]: RETURN    R0 1         ; return 


; Function #35.4:
;
; Name:            
; Defined at line: 1374
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["ReportSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["GetReportOptions"] := nil
  5 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1.000000]
  6 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 16
  7 [-]: JMP       16           ; PC := 16
  8 [-]: GETTABLE  R1 R0 K4     ; R1 := R0[1.000000]
  9 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mReason"]
 10 [-]: SETUPVAL  R1 U0        ; U82 := 
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: GETUPVAL  R2 U2        ; R2 := U2
 13 [-]: GETUPVAL  R3 U3        ; R3 := U3
 14 [-]: CALL      R1 3 1       ; R1(R2,R3)
 15 [-]: JMP       24           ; PC := 24
 16 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 17 [-]: GETUPVAL  R2 U3        ; R2 := U3
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETUPVAL  R1 U3        ; R1 := U3
 22 [-]: LOADBOOL  R2 0 0       ; R2 := false
 23 [-]: CALL      R1 2 1       ; R1(R2)
 24 [-]: RETURN    R0 1         ; return 


; Function #35.5:
;
; Name:            
; Defined at line: 1389
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
  3 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x23d5322f]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: NEWTABLE  R3 0 2       ; R3 := {}
  6 [-]: SETTABLE  R3 K2 K3     ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_Spam"
  7 [-]: SETTABLE  R3 K4 K5     ; R3["mReason"] := "Spam"
  8 [-]: CALL      R1 3 1       ; R1(R2,R3)
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
 10 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x23d5322f]
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 13 [-]: SETTABLE  R3 K2 K6     ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_OffensiveLanguage"
 14 [-]: SETTABLE  R3 K4 K7     ; R3["mReason"] := "OffensiveLangauge"
 15 [-]: CALL      R1 3 1       ; R1(R2,R3)
 16 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
 17 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x23d5322f]
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 20 [-]: SETTABLE  R3 K2 K8     ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_OffensiveName"
 21 [-]: SETTABLE  R3 K4 K9     ; R3["mReason"] := "OffensiveName"
 22 [-]: CALL      R1 3 1       ; R1(R2,R3)
 23 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
 24 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x23d5322f]
 25 [-]: MOVE      R2 R0        ; R2 := R0
 26 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 27 [-]: SETTABLE  R3 K2 K10    ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_Harassment"
 28 [-]: SETTABLE  R3 K4 K11    ; R3["mReason"] := "Harassment"
 29 [-]: CALL      R1 3 1       ; R1(R2,R3)
 30 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
 31 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x23d5322f]
 32 [-]: MOVE      R2 R0        ; R2 := R0
 33 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 34 [-]: SETTABLE  R3 K2 K12    ; R3["mName"] := "/Lotus/Language/Menu/ReportPlayer_RealLifeThreat"
 35 [-]: SETTABLE  R3 K4 K13    ; R3["mReason"] := "RealLifeThreat"
 36 [-]: CALL      R1 3 1       ; R1(R2,R3)
 37 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
 38 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x23d5322f]
 39 [-]: MOVE      R2 R0        ; R2 := R0
 40 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 41 [-]: SETTABLE  R3 K2 K14    ; R3["mName"] := "/Lotus/Language/CustomerSupport/ReportPlayer_Cheating"
 42 [-]: SETTABLE  R3 K4 K15    ; R3["mReason"] := "Cheating"
 43 [-]: CALL      R1 3 1       ; R1(R2,R3)
 44 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
 45 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x23d5322f]
 46 [-]: MOVE      R2 R0        ; R2 := R0
 47 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 48 [-]: SETTABLE  R3 K2 K16    ; R3["mName"] := "/Lotus/Language/CustomerSupport/ReportPlayer_RealMoneyTrade"
 49 [-]: SETTABLE  R3 K4 K17    ; R3["mReason"] := "RealMoneyTrade"
 50 [-]: CALL      R1 3 1       ; R1(R2,R3)
 51 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
 52 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x23d5322f]
 53 [-]: MOVE      R2 R0        ; R2 := R0
 54 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 55 [-]: SETTABLE  R3 K2 K18    ; R3["mName"] := "/Lotus/Language/CustomerSupport/ReportPlayer_Griefing"
 56 [-]: SETTABLE  R3 K4 K19    ; R3["mReason"] := "Griefing"
 57 [-]: CALL      R1 3 1       ; R1(R2,R3)
 58 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
 59 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x23d5322f]
 60 [-]: MOVE      R2 R0        ; R2 := R0
 61 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 62 [-]: SETTABLE  R3 K2 K20    ; R3["mName"] := "/Lotus/Language/CustomerSupport/ReportPlayer_HateSpeech"
 63 [-]: SETTABLE  R3 K4 K21    ; R3["mReason"] := "HateSpeech"
 64 [-]: CALL      R1 3 1       ; R1(R2,R3)
 65 [-]: RETURN    R0 2         ; return R0
 66 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 1409
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R82 := R1[0x15ba5fe6]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: RETURN    R1 2         ; return R1
  6 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 1413
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R82 := R3[0x6d7e6810]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: MOVE      R6 R2        ; R6 := R2
  6 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  7 [-]: RETURN    R3 2         ; return R3
  8 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 1417
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R82 := R3[0xb5be5d4a]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: MOVE      R6 R2        ; R6 := R2
  6 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
  7 [-]: RETURN    R3 0         ; return R3,...
  8 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 1421
; #Upvalues:       1
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: GETTABLE  R7 R7 K0     ; R82 := R7[0x5a22d251]
  3 [-]: MOVE      R8 R0        ; R8 := R0
  4 [-]: MOVE      R9 R1        ; R9 := R1
  5 [-]: MOVE      R10 R2       ; R10 := R2
  6 [-]: MOVE      R11 R3       ; R11 := R3
  7 [-]: MOVE      R12 R4       ; R12 := R4
  8 [-]: MOVE      R13 R5       ; R13 := R5
  9 [-]: MOVE      R14 R6       ; R14 := R6
 10 [-]: TAILCALL  R7 8 0       ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
 11 [-]: RETURN    R7 0         ; return R7,...
 12 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 1426
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  2 [-]: LOADK     R5 1         ; R5 := 1.000000
  3 [-]: LOADK     R6 4         ; R6 := 4.000000
  4 [-]: LOADK     R7 1         ; R7 := 1.000000
  5 [-]: FORPREP   R5 89        ; R5 -= R7; PC := 89
  6 [-]: LOADNIL   R9 R9        ; R9 := nil
  7 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
  8 [-]: MOVE      R11 R2       ; R11 := R2
  9 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 10 [-]: TEST      R10 1        ; if R10 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: SELF      R10 R2 K1    ; R11 := R2; R10 := R2[0x41a92792]
 13 [-]: SUB       R12 R8 K2    ; R12 := R8 - 1.000000
 14 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 15 [-]: MOVE      R9 R10       ; R9 := R10
 16 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
 17 [-]: MOVE      R11 R9       ; R11 := R9
 18 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 19 [-]: TEST      R10 1        ; if R10 then PC := 64
 20 [-]: JMP       64           ; PC := 64
 21 [-]: GETGLOBAL R10 K3       ; R10 := 0xb009bbc6
 22 [-]: MOVE      R11 R9       ; R11 := R9
 23 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 24 [-]: SETTABLE  R4 R8 R10    ; R4[R8] := R10
 25 [-]: SELF      R11 R10 K4   ; R12 := R10; R11 := R10[0xd3a9d01f]
 26 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 27 [-]: SELF      R12 R0 K5    ; R13 := R0; R12 := R0[0x20b98db3]
 28 [-]: MOVE      R14 R1       ; R14 := R1
 29 [-]: LOADK     R15 K6       ; R15 := ".Ability"
 30 [-]: MOVE      R16 R8       ; R16 := R8
 31 [-]: LOADK     R17 K7       ; R17 := ".Name.text"
 32 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 33 [-]: SELF      R15 R11 K8   ; R16 := R11; R15 := R11[0x6d604ba7]
 34 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 35 [-]: CALL      R12 0 1      ; R12(R13,...)
 36 [-]: SELF      R12 R10 K9   ; R13 := R10; R12 := R10[0x056dcf06]
 37 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 38 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
 39 [-]: MOVE      R14 R12      ; R14 := R12
 40 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 41 [-]: TEST      R13 1        ; if R13 then PC := 51
 42 [-]: JMP       51           ; PC := 51
 43 [-]: SELF      R13 R0 K10   ; R14 := R0; R13 := R0[0x1cb415c1]
 44 [-]: MOVE      R15 R1       ; R15 := R1
 45 [-]: LOADK     R16 K6       ; R16 := ".Ability"
 46 [-]: MOVE      R17 R8       ; R17 := R8
 47 [-]: LOADK     R18 K11      ; R18 := ".Icon"
 48 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 49 [-]: MOVE      R16 R12      ; R16 := R12
 50 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 51 [-]: SELF      R13 R0 K12   ; R14 := R0; R13 := R0[0xaade900e]
 52 [-]: MOVE      R15 R1       ; R15 := R1
 53 [-]: LOADK     R16 K6       ; R16 := ".Ability"
 54 [-]: MOVE      R17 R8       ; R17 := R8
 55 [-]: LOADK     R18 K11      ; R18 := ".Icon"
 56 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 57 [-]: LOADK     R16 11       ; R16 := 11.000000
 58 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
 59 [-]: MOVE      R18 R12      ; R18 := R12
 60 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 61 [-]: NOT       R17 R17      ; R17 := not R17
 62 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
 63 [-]: JMP       89           ; PC := 89
 64 [-]: SELF      R13 R0 K5    ; R14 := R0; R13 := R0[0x20b98db3]
 65 [-]: MOVE      R15 R1       ; R15 := R1
 66 [-]: LOADK     R16 K6       ; R16 := ".Ability"
 67 [-]: MOVE      R17 R8       ; R17 := R8
 68 [-]: LOADK     R18 K7       ; R18 := ".Name.text"
 69 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 70 [-]: LOADK     R16 K13      ; R16 := ""
 71 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 72 [-]: SELF      R13 R0 K10   ; R14 := R0; R13 := R0[0x1cb415c1]
 73 [-]: MOVE      R15 R1       ; R15 := R1
 74 [-]: LOADK     R16 K6       ; R16 := ".Ability"
 75 [-]: MOVE      R17 R8       ; R17 := R8
 76 [-]: LOADK     R18 K11      ; R18 := ".Icon"
 77 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 78 [-]: LOADNIL   R16 R16      ; R16 := nil
 79 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 80 [-]: SELF      R13 R0 K12   ; R14 := R0; R13 := R0[0xaade900e]
 81 [-]: MOVE      R15 R1       ; R15 := R1
 82 [-]: LOADK     R16 K6       ; R16 := ".Ability"
 83 [-]: MOVE      R17 R8       ; R17 := R8
 84 [-]: LOADK     R18 K11      ; R18 := ".Icon"
 85 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 86 [-]: LOADK     R16 11       ; R16 := 11.000000
 87 [-]: LOADBOOL  R17 0 0      ; R17 := false
 88 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
 89 [-]: FORLOOP   R5 6         ; R5 += R7; if R5 <= R6 then begin PC := 6; R8 := R5 end
 90 [-]: RETURN    R4 2         ; return R4
 91 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 1456
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  2 [-]: LOADK     R5 1         ; R5 := 1.000000
  3 [-]: LOADK     R6 4         ; R6 := 4.000000
  4 [-]: LOADK     R7 1         ; R7 := 1.000000
  5 [-]: FORPREP   R5 86        ; R5 -= R7; PC := 86
  6 [-]: LOADNIL   R9 R9        ; R9 := nil
  7 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
  8 [-]: MOVE      R11 R2       ; R11 := R2
  9 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 10 [-]: TEST      R10 1        ; if R10 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: SELF      R10 R2 K1    ; R11 := R2; R10 := R2[0xdaddfb73]
 13 [-]: SUB       R12 R8 K2    ; R12 := R8 - 1.000000
 14 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 15 [-]: MOVE      R9 R10       ; R9 := R10
 16 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
 17 [-]: MOVE      R11 R9       ; R11 := R9
 18 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 19 [-]: TEST      R10 1        ; if R10 then PC := 61
 20 [-]: JMP       61           ; PC := 61
 21 [-]: SETTABLE  R4 R8 R9     ; R4[R8] := R9
 22 [-]: SELF      R10 R9 K3    ; R11 := R9; R10 := R9[0xd3a9d01f]
 23 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 24 [-]: SELF      R11 R0 K4    ; R12 := R0; R11 := R0[0x20b98db3]
 25 [-]: MOVE      R13 R1       ; R13 := R1
 26 [-]: LOADK     R14 K5       ; R14 := ".Ability"
 27 [-]: MOVE      R15 R8       ; R15 := R8
 28 [-]: LOADK     R16 K6       ; R16 := ".Name.text"
 29 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
 30 [-]: SELF      R14 R10 K7   ; R15 := R10; R14 := R10[0x6d604ba7]
 31 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 32 [-]: CALL      R11 0 1      ; R11(R12,...)
 33 [-]: SELF      R11 R9 K8    ; R12 := R9; R11 := R9[0x056dcf06]
 34 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 35 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
 36 [-]: MOVE      R13 R11      ; R13 := R11
 37 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 38 [-]: TEST      R12 1        ; if R12 then PC := 48
 39 [-]: JMP       48           ; PC := 48
 40 [-]: SELF      R12 R0 K9    ; R13 := R0; R12 := R0[0x1cb415c1]
 41 [-]: MOVE      R14 R1       ; R14 := R1
 42 [-]: LOADK     R15 K5       ; R15 := ".Ability"
 43 [-]: MOVE      R16 R8       ; R16 := R8
 44 [-]: LOADK     R17 K10      ; R17 := ".Icon"
 45 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 46 [-]: MOVE      R15 R11      ; R15 := R11
 47 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 48 [-]: SELF      R12 R0 K11   ; R13 := R0; R12 := R0[0xaade900e]
 49 [-]: MOVE      R14 R1       ; R14 := R1
 50 [-]: LOADK     R15 K5       ; R15 := ".Ability"
 51 [-]: MOVE      R16 R8       ; R16 := R8
 52 [-]: LOADK     R17 K10      ; R17 := ".Icon"
 53 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 54 [-]: LOADK     R15 11       ; R15 := 11.000000
 55 [-]: GETGLOBAL R16 K0       ; R16 := 0x7b998233
 56 [-]: MOVE      R17 R11      ; R17 := R11
 57 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 58 [-]: NOT       R16 R16      ; R16 := not R16
 59 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 60 [-]: JMP       86           ; PC := 86
 61 [-]: SELF      R12 R0 K4    ; R13 := R0; R12 := R0[0x20b98db3]
 62 [-]: MOVE      R14 R1       ; R14 := R1
 63 [-]: LOADK     R15 K5       ; R15 := ".Ability"
 64 [-]: MOVE      R16 R8       ; R16 := R8
 65 [-]: LOADK     R17 K6       ; R17 := ".Name.text"
 66 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 67 [-]: LOADK     R15 K12      ; R15 := "/Lotus/Language/Menu/Empty_Precept"
 68 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 69 [-]: SELF      R12 R0 K9    ; R13 := R0; R12 := R0[0x1cb415c1]
 70 [-]: MOVE      R14 R1       ; R14 := R1
 71 [-]: LOADK     R15 K5       ; R15 := ".Ability"
 72 [-]: MOVE      R16 R8       ; R16 := R8
 73 [-]: LOADK     R17 K10      ; R17 := ".Icon"
 74 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 75 [-]: LOADNIL   R15 R15      ; R15 := nil
 76 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 77 [-]: SELF      R12 R0 K11   ; R13 := R0; R12 := R0[0xaade900e]
 78 [-]: MOVE      R14 R1       ; R14 := R1
 79 [-]: LOADK     R15 K5       ; R15 := ".Ability"
 80 [-]: MOVE      R16 R8       ; R16 := R8
 81 [-]: LOADK     R17 K10      ; R17 := ".Icon"
 82 [-]: CONCAT    R14 R14 R17  ; R14 := R14 .. R15 .. R16 .. R17
 83 [-]: LOADK     R15 11       ; R15 := 11.000000
 84 [-]: LOADBOOL  R16 0 0      ; R16 := false
 85 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
 86 [-]: FORLOOP   R5 6         ; R5 += R7; if R5 <= R6 then begin PC := 6; R8 := R5 end
 87 [-]: RETURN    R4 2         ; return R4
 88 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 1485
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: NEWTABLE  R1 0 9       ; R1 := {}
  2 [-]: SETTABLE  R1 K0 K1     ; R1["mIndex"] := 0.000000
  3 [-]: SETTABLE  R1 K2 K3     ; R1["mMovie"] := nil
  4 [-]: SETTABLE  R1 K4 K5     ; R1["mIsShowing"] := false
  5 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  6 [-]: SETTABLE  R1 K6 R2     ; R1["mListItems"] := R2
  7 [-]: CLOSURE   R2 0         ; R2 := closure(Function #42.1)
  8 [-]: SETTABLE  R1 K7 R2     ; R1["Add"] := R2
  9 [-]: CLOSURE   R2 1         ; R2 := closure(Function #42.2)
 10 [-]: SETTABLE  R1 K8 R2     ; R1["Clear"] := R2
 11 [-]: CLOSURE   R2 2         ; R2 := closure(Function #42.3)
 12 [-]: SETTABLE  R1 K9 R2     ; R1["IsShowing"] := R2
 13 [-]: CLOSURE   R2 3         ; R2 := closure(Function #42.4)
 14 [-]: SETTABLE  R1 K10 R2    ; R1["Hide"] := R2
 15 [-]: CLOSURE   R2 4         ; R2 := closure(Function #42.5)
 16 [-]: GETUPVAL  R0 U0        ; R0 := U0
 17 [-]: SETTABLE  R1 K11 R2    ; R1["Show"] := R2
 18 [-]: GETGLOBAL R2 K12       ; R2 := _T
 19 [-]: SETTABLE  R2 K13 R1    ; R2["ContextMenu"] := R1
 20 [-]: GETGLOBAL R2 K12       ; R2 := _T
 21 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["ContextMenu"]
 22 [-]: SETTABLE  R2 K2 R0     ; R2["mMovie"] := R0
 23 [-]: RETURN    R0 1         ; return 


; Function #42.1:
;
; Name:            
; Defined at line: 1493
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mIndex"]
  2 [-]: ADD       R3 R3 K1     ; R3 := R3 + 1.000000
  3 [-]: SETTABLE  R0 K0 R3     ; R0["mIndex"] := R3
  4 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
  5 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0xaade900e]
  6 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
  7 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
  8 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  9 [-]: LOADK     R6 59        ; R6 := 59.000000
 10 [-]: LOADBOOL  R7 1 0       ; R7 := true
 11 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 12 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
 13 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0xaade900e]
 14 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
 15 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
 16 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 17 [-]: LOADK     R6 11        ; R6 := 11.000000
 18 [-]: LOADBOOL  R7 1 0       ; R7 := true
 19 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 20 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
 21 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x0c33ebb2]
 22 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
 23 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
 24 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 25 [-]: LOADK     R6 K6        ; R6 := "Id"
 26 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mIndex"]
 27 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 28 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mMovie"]
 29 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x20b98db3]
 30 [-]: LOADK     R5 K4        ; R5 := "ContextMenu.Btn"
 31 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIndex"]
 32 [-]: LOADK     R7 K8        ; R7 := ".Label.text"
 33 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 34 [-]: MOVE      R6 R1        ; R6 := R1
 35 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 36 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mListItems"]
 37 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mIndex"]
 38 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 39 [-]: SETTABLE  R5 K10 R1    ; R5["Label"] := R1
 40 [-]: SETTABLE  R5 K11 R2    ; R5["PressedCallback"] := R2
 41 [-]: SETTABLE  R3 R4 R5     ; R3[R4] := R5
 42 [-]: RETURN    R0 1         ; return 


; Function #42.2:
;
; Name:            
; Defined at line: 1502
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: SETTABLE  R0 K0 K1     ; R0["mIndex"] := 0.000000
  2 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x587aa683]
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #42.3:
;
; Name:            
; Defined at line: 1507
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mIsShowing"]
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #42.4:
;
; Name:            
; Defined at line: 1511
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0x67dbb071]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: TEST      R1 1         ; if R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: SETTABLE  R0 K1 K2     ; R0["mIsShowing"] := false
  7 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["mMovie"]
  8 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
  9 [-]: LOADK     R3 K5        ; R3 := "ContextMenu"
 10 [-]: LOADK     R4 59        ; R4 := 59.000000
 11 [-]: LOADBOOL  R5 0 0       ; R5 := false
 12 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 13 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["mMovie"]
 14 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xaade900e]
 15 [-]: LOADK     R3 K5        ; R3 := "ContextMenu"
 16 [-]: LOADK     R4 11        ; R4 := 11.000000
 17 [-]: LOADBOOL  R5 0 0       ; R5 := false
 18 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 19 [-]: RETURN    R0 1         ; return 


; Function #42.5:
;
; Name:            
; Defined at line: 1520
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: SETTABLE  R0 K0 K1     ; R0["mIsShowing"] := true
  2 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mIndex"]
  3 [-]: LT        0 K3 R1      ; if 0.000000 >= R1 then PC := 41
  4 [-]: JMP       41           ; PC := 41
  5 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mMovie"]
  6 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xaade900e]
  7 [-]: LOADK     R3 K6        ; R3 := "ContextMenu"
  8 [-]: LOADK     R4 59        ; R4 := 59.000000
  9 [-]: LOADBOOL  R5 1 0       ; R5 := true
 10 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 11 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mMovie"]
 12 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xaade900e]
 13 [-]: LOADK     R3 K6        ; R3 := "ContextMenu"
 14 [-]: LOADK     R4 11        ; R4 := 11.000000
 15 [-]: LOADBOOL  R5 1 0       ; R5 := true
 16 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 17 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mMovie"]
 18 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x91a24e4b]
 19 [-]: LOADK     R3 K8        ; R3 := "_root"
 20 [-]: LOADK     R4 25        ; R4 := 25.000000
 21 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 22 [-]: ADD       R1 R1 K9     ; R1 := R1 + 60.000000
 23 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mMovie"]
 24 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x91a24e4b]
 25 [-]: LOADK     R4 K8        ; R4 := "_root"
 26 [-]: LOADK     R5 26        ; R5 := 26.000000
 27 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 28 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mMovie"]
 29 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x67bc869f]
 30 [-]: LOADK     R5 K6        ; R5 := "ContextMenu"
 31 [-]: LOADK     R6 0         ; R6 := 0.000000
 32 [-]: MOVE      R7 R1        ; R7 := R1
 33 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 34 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mMovie"]
 35 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x67bc869f]
 36 [-]: LOADK     R5 K6        ; R5 := "ContextMenu"
 37 [-]: LOADK     R6 1         ; R6 := 1.000000
 38 [-]: MOVE      R7 R2        ; R7 := R2
 39 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 40 [-]: JMP       43           ; PC := 43
 41 [-]: SELF      R3 R0 K11    ; R4 := R0; R3 := R0[0xe0f7ce9e]
 42 [-]: CALL      R3 2 1       ; R3(R4)
 43 [-]: LOADK     R3 1         ; R3 := 1.000000
 44 [-]: LOADK     R4 8         ; R4 := 8.000000
 45 [-]: LOADK     R5 1         ; R5 := 1.000000
 46 [-]: FORPREP   R3 73        ; R3 -= R5; PC := 73
 47 [-]: GETUPVAL  R7 U0        ; R7 := U0
 48 [-]: GETTABLE  R7 R7 K12    ; R82 := R7[0x06d055f9]
 49 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["mIndex"]
 50 [-]: LE        1 R6 R8      ; if R6 <= R8 then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: LOADBOOL  R8 0 1       ; R8 := false; PC := 53
 53 [-]: LOADBOOL  R8 1 0       ; R8 := true
 54 [-]: LOADBOOL  R9 1 0       ; R9 := true
 55 [-]: LOADBOOL  R10 0 0      ; R10 := false
 56 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 57 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["mMovie"]
 58 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8[0xaade900e]
 59 [-]: LOADK     R10 K13      ; R10 := "ContextMenu.Btn"
 60 [-]: MOVE      R11 R6       ; R11 := R6
 61 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 62 [-]: LOADK     R11 59       ; R11 := 59.000000
 63 [-]: MOVE      R12 R7       ; R12 := R7
 64 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 65 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["mMovie"]
 66 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8[0xaade900e]
 67 [-]: LOADK     R10 K13      ; R10 := "ContextMenu.Btn"
 68 [-]: MOVE      R11 R6       ; R11 := R6
 69 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 70 [-]: LOADK     R11 11       ; R11 := 11.000000
 71 [-]: MOVE      R12 R7       ; R12 := R7
 72 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 73 [-]: FORLOOP   R3 47        ; R3 += R5; if R3 <= R4 then begin PC := 47; R6 := R3 end
 74 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 1546
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 0         ; R1 := 0.000000
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mItemType"]
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADK     R2 0         ; R2 := 0.000000
 15 [-]: RETURN    R2 2         ; return R2
 16 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mUpgradeVer"]
 17 [-]: GETGLOBAL R3 K3        ; R3 := 0x6c97a788
 18 [-]: GETTABLE  R3 R3 K4     ; R82 := R3[0x1597ad56]
 19 [-]: CALL      R3 1 2       ; R3 := R3()
 20 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADK     R2 0         ; R2 := 0.000000
 23 [-]: RETURN    R2 2         ; return R2
 24 [-]: GETGLOBAL R2 K5        ; R2 := 0xa94df70b
 25 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x8427bf69]
 26 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mXP"]
 27 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mItemType"]
 28 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 29 [-]: RETURN    R2 2         ; return R2
 30 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 1566
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xa94df70b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x792d6f59]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: RETURN    R1 2         ; return R1
  6 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 1571
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 1576
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x25d99d89
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADK     R1 1         ; R1 := 1.000000
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0xa94df70b
  6 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x99c4ef3a]
  7 [-]: MOVE      R5 R0        ; R5 := R0
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: GETGLOBAL R4 K4        ; R4 := 0x6c97a788
 10 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["MiscBin"]
 11 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 25
 12 [-]: JMP       25           ; PC := 25
 13 [-]: LT        0 R3 K6      ; if R3 >= 12.000000 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: SELF      R4 R2 K7     ; R5 := R2; R4 := R2[0x25a6e75e]
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xb8a2d888]
 18 [-]: MOVE      R6 R3        ; R6 := R3
 19 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 20 [-]: LE        1 R1 R4      ; if R1 <= R4 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 23
 23 [-]: LOADBOOL  R4 1 0       ; R4 := true
 24 [-]: RETURN    R4 2         ; return R4
 25 [-]: LOADBOOL  R4 1 0       ; R4 := true
 26 [-]: RETURN    R4 2         ; return R4
 27 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 1591
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADBOOL  R1 0 0       ; R1 := false
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0x9ed94a63]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0x25d99d89
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 20
 14 [-]: JMP       20           ; PC := 20
 15 [-]: GETGLOBAL R2 K3        ; R2 := 0x3d106989
 16 [-]: LOADK     R3 K4        ; R3 := "IsXPLocked: gGameData was nil"
 17 [-]: CALL      R2 2 1       ; R2(R3)
 18 [-]: LOADBOOL  R2 0 0       ; R2 := false
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: GETGLOBAL R2 K2        ; R2 := 0x25d99d89
 21 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xefee6c91]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: LT        1 R2 R1      ; if R2 < R1 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 26
 26 [-]: LOADBOOL  R3 1 0       ; R3 := true
 27 [-]: MOVE      R4 R3        ; R4 := R3
 28 [-]: MOVE      R5 R1        ; R5 := R1
 29 [-]: RETURN    R4 3         ; return R4,R5
 30 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 1609
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADBOOL  R1 0 0       ; R1 := false
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0x516e225c]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: LOADBOOL  R2 0 0       ; R2 := false
 11 [-]: LT        0 K2 R1      ; if 0.000000 >= R1 then PC := 34
 12 [-]: JMP       34           ; PC := 34
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x25d99d89
 14 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3[0x62c81b76]
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x416005a4]
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: LT        1 R4 R1      ; if R4 < R1 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 21
 21 [-]: LOADBOOL  R2 1 0       ; R2 := true
 22 [-]: TEST      R2 0         ; if not R2 then PC := 34
 23 [-]: JMP       34           ; PC := 34
 24 [-]: SELF      R5 R3 K6     ; R6 := R3; R5 := R3[0x7616e196]
 25 [-]: SELF      R7 R0 K7     ; R8 := R0; R7 := R0[0xef3662ab]
 26 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 27 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 28 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 29 [-]: GETTABLE  R7 R5 K8     ; R7 := R5["mSuit"]
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: TEST      R6 1         ; if R6 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: LOADBOOL  R2 0 0       ; R2 := false
 34 [-]: MOVE      R6 R2        ; R6 := R2
 35 [-]: MOVE      R7 R1        ; R7 := R1
 36 [-]: RETURN    R6 3         ; return R6,R7
 37 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 1633
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: GETTABLE  R5 R5 K0     ; R82 := R5[0xf76783e5]
  3 [-]: MOVE      R6 R0        ; R6 := R0
  4 [-]: MOVE      R7 R1        ; R7 := R1
  5 [-]: MOVE      R8 R2        ; R8 := R2
  6 [-]: MOVE      R9 R3        ; R9 := R3
  7 [-]: MOVE      R10 R4       ; R10 := R4
  8 [-]: TAILCALL  R5 6 0       ; R5,... := R5(R6,R7,R8,R9,R10)
  9 [-]: RETURN    R5 0         ; return R5,...
 10 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 1637
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7f5022cf
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x04981ab3]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0xa94df70b
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x2608b62f]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  8 [-]: GETTABLE  R1 R1 K4     ; R82 := R1[0xa5c556b9]
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: LOADK     R3 K5        ; R3 := "api.dev."
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 15
 15 [-]: LOADBOOL  R1 1 0       ; R1 := true
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 1641
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1645
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7f5022cf
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x04981ab3]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0xa94df70b
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x2608b62f]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  8 [-]: GETTABLE  R1 R1 K4     ; R82 := R1[0xa5c556b9]
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: LOADK     R3 K5        ; R3 := "api.test."
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 15
 15 [-]: LOADBOOL  R1 1 0       ; R1 := true
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 1649
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 1653
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7f5022cf
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x04981ab3]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0xa94df70b
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x2608b62f]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  8 [-]: GETTABLE  R1 R1 K4     ; R82 := R1[0xa5c556b9]
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: LOADK     R3 K5        ; R3 := "/localhost/"
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: EQ        0 R1 K6      ; if R1 ~= nil then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 15
 15 [-]: LOADBOOL  R1 1 0       ; R1 := true
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 1657
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 1661
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: TEST      R0 1         ; if R0 then PC := 13
  4 [-]: JMP       13           ; PC := 13
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: TEST      R0 1         ; if R0 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R0 U2        ; R0 := U2
 10 [-]: CALL      R0 1 2       ; R0 := R0()
 11 [-]: TEST      R0 0         ; if not R0 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADBOOL  R0 0 0       ; R0 := false
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: LOADBOOL  R0 1 0       ; R0 := true
 16 [-]: RETURN    R0 2         ; return R0
 17 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 1670
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 38
  5 [-]: JMP       38           ; PC := 38
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 1         ; if R0 then PC := 36
 11 [-]: JMP       36           ; PC := 36
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 13 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 14 [-]: GETGLOBAL R2 K4        ; R2 := gLotusDojoGameRulesType
 15 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 16 [-]: TEST      R0 1         ; if R0 then PC := 36
 17 [-]: JMP       36           ; PC := 36
 18 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 19 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 20 [-]: GETGLOBAL R2 K5        ; R2 := gLotusBasePvpGameRulesType
 21 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 22 [-]: TEST      R0 1         ; if R0 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 25 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 26 [-]: GETGLOBAL R2 K6        ; R2 := gLotusHubGameRulesType
 27 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 28 [-]: TEST      R0 1         ; if R0 then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 31 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 32 [-]: GETGLOBAL R2 K7        ; R2 := gLotusDuelGameRulesType
 33 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 34 [-]: TEST      R0 0         ; if not R0 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: LOADBOOL  R0 1 0       ; R0 := true
 37 [-]: RETURN    R0 2         ; return R0
 38 [-]: LOADBOOL  R0 0 0       ; R0 := false
 39 [-]: RETURN    R0 2         ; return R0
 40 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 1685
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0xee5faf01
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: JMP       23           ; PC := 23
  9 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 10 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xf2deaf69]
 11 [-]: GETGLOBAL R2 K4        ; R2 := gLotusHubGameRulesType
 12 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 13 [-]: TEST      R0 1         ; if R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: CALL      R0 1 2       ; R0 := R0()
 17 [-]: TEST      R0 0         ; if not R0 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 20 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0xd7e23b71]
 21 [-]: TAILCALL  R0 2 0       ; R0,... := R0(R1)
 22 [-]: RETURN    R0 0         ; return R0,...
 23 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 24 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x5e35d4d6]
 25 [-]: TAILCALL  R0 2 0       ; R0,... := R0(R1)
 26 [-]: RETURN    R0 0         ; return R0,...
 27 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 1694
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: SELF      R2 R1 K0     ; R3 := R1; R2 := R1[0xc1dee03f]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: LOADK     R3 1         ; R3 := 1.000000
  7 [-]: LEN       R4 R2        ; R4 := # R2
  8 [-]: LOADK     R5 1         ; R5 := 1.000000
  9 [-]: FORPREP   R3 53        ; R3 -= R5; PC := 53
 10 [-]: GETTABLE  R7 R2 R6     ; R7 := R2[R6]
 11 [-]: GETTABLE  R8 R7 K1     ; R8 := R7["name"]
 12 [-]: LOADK     R9 1         ; R9 := 1.000000
 13 [-]: GETTABLE  R10 R7 K2    ; R10 := R7["sectors"]
 14 [-]: LEN       R10 R10      ; R10 := # R10
 15 [-]: LOADK     R11 1        ; R11 := 1.000000
 16 [-]: FORPREP   R9 52        ; R9 -= R11; PC := 52
 17 [-]: GETGLOBAL R13 K3       ; R13 := 0xce225efa
 18 [-]: LOADK     R14 0        ; R14 := 0.000000
 19 [-]: CALL      R13 2 1      ; R13(R14)
 20 [-]: GETTABLE  R13 R7 K2    ; R13 := R7["sectors"]
 21 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
 22 [-]: GETTABLE  R14 R13 K4   ; R14 := R13["nodeType"]
 23 [-]: EQ        1 R14 K6     ; if R14 == 0.000000 then PC := 31
 24 [-]: JMP       31           ; PC := 31
 25 [-]: GETTABLE  R14 R13 K4   ; R14 := R13["nodeType"]
 26 [-]: EQ        1 R14 K7     ; if R14 == 4.000000 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETTABLE  R14 R13 K4   ; R14 := R13["nodeType"]
 29 [-]: EQ        0 R14 K8     ; if R14 ~= 8.000000 then PC := 52
 30 [-]: JMP       52           ; PC := 52
 31 [-]: GETTABLE  R14 R13 K9   ; R14 := R13["mission"]
 32 [-]: GETTABLE  R15 R14 K10  ; R15 := R14["missionReward"]
 33 [-]: GETTABLE  R16 R15 K11  ; R16 := R15["randomizedItems"]
 34 [-]: GETTABLE  R17 R14 K12  ; R17 := R14["enemyCacheOverride"]
 35 [-]: NEWTABLE  R18 0 5      ; R18 := {}
 36 [-]: GETTABLE  R19 R13 K1   ; R19 := R13["name"]
 37 [-]: SELF      R19 R19 K13  ; R20 := R19; R19 := R19[0x6d604ba7]
 38 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 39 [-]: SETTABLE  R18 K1 R19   ; R18["name"] := R19
 40 [-]: GETTABLE  R19 R13 K14  ; R19 := R13["locTag"]
 41 [-]: SELF      R19 R19 K13  ; R20 := R19; R19 := R19[0x6d604ba7]
 42 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 43 [-]: SETTABLE  R18 K14 R19  ; R18["locTag"] := R19
 44 [-]: SETTABLE  R18 K15 R8   ; R18["regionLocTag"] := R8
 45 [-]: SETTABLE  R18 K11 R16  ; R18["randomizedItems"] := R16
 46 [-]: SETTABLE  R18 K12 R17  ; R18["enemyCacheOverride"] := R17
 47 [-]: GETGLOBAL R19 K16      ; R19 := 0x33bdd652
 48 [-]: GETTABLE  R19 R19 K17  ; R82 := R19[0x23d5322f]
 49 [-]: MOVE      R20 R0       ; R20 := R0
 50 [-]: MOVE      R21 R18      ; R21 := R18
 51 [-]: CALL      R19 3 1      ; R19(R20,R21)
 52 [-]: FORLOOP   R9 17        ; R9 += R11; if R9 <= R10 then begin PC := 17; R12 := R9 end
 53 [-]: FORLOOP   R3 10        ; R3 += R5; if R3 <= R4 then begin PC := 10; R6 := R3 end
 54 [-]: RETURN    R0 2         ; return R0
 55 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 1729
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 1733
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 1         ; if R0 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 13 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 14 [-]: GETGLOBAL R2 K4        ; R2 := gLotusDojoGameRulesType
 15 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 16 [-]: TEST      R0 1         ; if R0 then PC := 24
 17 [-]: JMP       24           ; PC := 24
 18 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 19 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 20 [-]: GETGLOBAL R2 K5        ; R2 := gLotusBasePvpGameRulesType
 21 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 22 [-]: TEST      R0 0         ; if not R0 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LOADBOOL  R0 1 0       ; R0 := true
 25 [-]: RETURN    R0 2         ; return R0
 26 [-]: LOADBOOL  R0 0 0       ; R0 := false
 27 [-]: RETURN    R0 2         ; return R0
 28 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 1741
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 1745
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusPhotoBoothGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: LOADBOOL  R0 0 0       ; R0 := false
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 16 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 17 [-]: GETGLOBAL R2 K4        ; R2 := gLotusGameRulesType
 18 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 19 [-]: TEST      R0 1         ; if R0 then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 22 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
 23 [-]: GETGLOBAL R2 K5        ; R2 := gLotusBasePvpGameRulesType
 24 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 25 [-]: TEST      R0 0         ; if not R0 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: LOADBOOL  R0 1 0       ; R0 := true
 28 [-]: RETURN    R0 2         ; return R0
 29 [-]: LOADBOOL  R0 0 0       ; R0 := false
 30 [-]: RETURN    R0 2         ; return R0
 31 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 1757
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 1761
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7ed0a956
  2 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x25d99d89
  6 [-]: CALL      R1 2 3       ; R1,R2 := R1(R2)
  7 [-]: LOADBOOL  R3 1 0       ; R3 := true
  8 [-]: LOADNIL   R4 R4        ; R4 := nil
  9 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 10 [-]: GETGLOBAL R6 K4        ; R6 := 0xbe190284
 11 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 12 [-]: TEST      R5 1         ; if R5 then PC := 22
 13 [-]: JMP       22           ; PC := 22
 14 [-]: GETUPVAL  R5 U1        ; R5 := U1
 15 [-]: CALL      R5 1 2       ; R5 := R5()
 16 [-]: TEST      R5 0         ; if not R5 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: GETGLOBAL R5 K4        ; R5 := 0xbe190284
 19 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0xef893aec]
 20 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 21 [-]: GETTABLE  R4 R5 K6     ; R4 := R5["keyChainName"]
 22 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 33
 23 [-]: JMP       33           ; PC := 33
 24 [-]: LE        0 R2 K7      ; if R2 > 13.000000 then PC := 33
 25 [-]: JMP       33           ; PC := 33
 26 [-]: LT        0 R2 K8      ; if R2 >= 5.000000 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 29 [-]: MOVE      R6 R4        ; R6 := R4
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: NOT       R5 R5        ; R5 := not R5
 32 [-]: JMP       35           ; PC := 35
 33 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 34
 34 [-]: LOADBOOL  R5 1 0       ; R5 := true
 35 [-]: RETURN    R5 2         ; return R5
 36 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 1774
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 1778
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 1782
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusHubGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 12
 12 [-]: LOADBOOL  R0 1 0       ; R0 := true
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 1786
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 1790
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := REGION_ID_DOJO
  2 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 5
  5 [-]: LOADBOOL  R1 1 0       ; R1 := true
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 1794
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 1798
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := REGION_ID_VOID
  2 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R1 K1        ; R1 := REGION_ID_DOJO
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R1 K2        ; R1 := REGION_ID_DARK_SECTOR
  8 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETGLOBAL R1 K3        ; R1 := REGION_ID_DEEP_SPACE
 11 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 14
 14 [-]: LOADBOOL  R1 1 0       ; R1 := true
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 1802
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: TEST      R1 1         ; if R1 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: CALL      R3 1 2       ; R3 := R3()
  5 [-]: MOVE      R1 R3        ; R1 := R3
  6 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  7 [-]: MOVE      R4 R1        ; R4 := R1
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 349
 10 [-]: JMP       349          ; PC := 349
 11 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 349
 12 [-]: JMP       349          ; PC := 349
 13 [-]: EQ        1 R0 K2      ; if R0 == "" then PC := 349
 14 [-]: JMP       349          ; PC := 349
 15 [-]: LOADK     R3 0         ; R3 := 0.000000
 16 [-]: LOADK     R4 0         ; R4 := 0.000000
 17 [-]: GETGLOBAL R5 K3        ; R5 := 0x7f5022cf
 18 [-]: GETTABLE  R5 R5 K4     ; R82 := R5[0xa5c556b9]
 19 [-]: MOVE      R6 R0        ; R6 := R0
 20 [-]: GETGLOBAL R7 K5        ; R7 := KEY_TAG
 21 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 22 [-]: EQ        1 R5 K1      ; if R5 == nil then PC := 60
 23 [-]: JMP       60           ; PC := 60
 24 [-]: GETGLOBAL R3 K6        ; R3 := KEY_FLAG
 25 [-]: GETGLOBAL R6 K7        ; R6 := _T
 26 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["gSelectedRegionId"]
 27 [-]: EQ        1 R6 K1      ; if R6 == nil then PC := 35
 28 [-]: JMP       35           ; PC := 35
 29 [-]: GETGLOBAL R6 K7        ; R6 := _T
 30 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["gSelectedRegionId"]
 31 [-]: LT        0 K9 R6      ; if 0.000000 >= R6 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: GETGLOBAL R6 K7        ; R6 := _T
 34 [-]: GETTABLE  R4 R6 K8     ; R4 := R6["gSelectedRegionId"]
 35 [-]: GETUPVAL  R6 U1        ; R6 := U1
 36 [-]: MOVE      R7 R4        ; R7 := R4
 37 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 38 [-]: TEST      R6 1         ; if R6 then PC := 60
 39 [-]: JMP       60           ; PC := 60
 40 [-]: GETGLOBAL R6 K10       ; R6 := 0xb009bbc6
 41 [-]: GETGLOBAL R7 K3        ; R7 := 0x7f5022cf
 42 [-]: GETTABLE  R7 R7 K11    ; R82 := R7[0x1a94c9cc]
 43 [-]: MOVE      R8 R0        ; R8 := R0
 44 [-]: LOADK     R9 1         ; R9 := 1.000000
 45 [-]: SUB       R10 R5 K12   ; R10 := R5 - 1.000000
 46 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 47 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 48 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
 49 [-]: MOVE      R8 R6        ; R8 := R6
 50 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 51 [-]: TEST      R7 1         ; if R7 then PC := 60
 52 [-]: JMP       60           ; PC := 60
 53 [-]: GETGLOBAL R7 K13       ; R7 := 0x64fb1586
 54 [-]: SELF      R8 R6 K14    ; R9 := R6; R8 := R6[0x92608d86]
 55 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 56 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 57 [-]: EQ        1 R7 K2      ; if R7 == "" then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: MOVE      R0 R7        ; R0 := R7
 60 [-]: GETGLOBAL R8 K3        ; R8 := 0x7f5022cf
 61 [-]: GETTABLE  R8 R8 K4     ; R82 := R8[0xa5c556b9]
 62 [-]: MOVE      R9 R0        ; R9 := R0
 63 [-]: GETGLOBAL R10 K15      ; R10 := ALERT_TAG
 64 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 65 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 75
 66 [-]: JMP       75           ; PC := 75
 67 [-]: GETGLOBAL R9 K3        ; R9 := 0x7f5022cf
 68 [-]: GETTABLE  R9 R9 K11    ; R82 := R9[0x1a94c9cc]
 69 [-]: MOVE      R10 R0       ; R10 := R0
 70 [-]: LOADK     R11 1        ; R11 := 1.000000
 71 [-]: SUB       R12 R8 K12   ; R12 := R8 - 1.000000
 72 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 73 [-]: MOVE      R0 R9        ; R0 := R9
 74 [-]: GETGLOBAL R3 K16       ; R3 := ALERT_FLAG
 75 [-]: GETGLOBAL R9 K3        ; R9 := 0x7f5022cf
 76 [-]: GETTABLE  R9 R9 K4     ; R82 := R9[0xa5c556b9]
 77 [-]: MOVE      R10 R0       ; R10 := R0
 78 [-]: GETGLOBAL R11 K17      ; R11 := NIGHTMARE_TAG
 79 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 80 [-]: EQ        1 R9 K1      ; if R9 == nil then PC := 90
 81 [-]: JMP       90           ; PC := 90
 82 [-]: GETGLOBAL R10 K3       ; R10 := 0x7f5022cf
 83 [-]: GETTABLE  R10 R10 K11  ; R82 := R10[0x1a94c9cc]
 84 [-]: MOVE      R11 R0       ; R11 := R0
 85 [-]: LOADK     R12 1        ; R12 := 1.000000
 86 [-]: SUB       R13 R9 K12   ; R13 := R9 - 1.000000
 87 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 88 [-]: MOVE      R0 R10       ; R0 := R10
 89 [-]: GETGLOBAL R3 K18       ; R3 := NIGHTMARE_FLAG
 90 [-]: GETGLOBAL R10 K3       ; R10 := 0x7f5022cf
 91 [-]: GETTABLE  R10 R10 K4   ; R82 := R10[0xa5c556b9]
 92 [-]: MOVE      R11 R0       ; R11 := R0
 93 [-]: GETGLOBAL R12 K19      ; R12 := EVENT_TAG
 94 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 95 [-]: EQ        1 R10 K1     ; if R10 == nil then PC := 105
 96 [-]: JMP       105          ; PC := 105
 97 [-]: GETGLOBAL R11 K3       ; R11 := 0x7f5022cf
 98 [-]: GETTABLE  R11 R11 K11  ; R82 := R11[0x1a94c9cc]
 99 [-]: MOVE      R12 R0       ; R12 := R0
100 [-]: LOADK     R13 1        ; R13 := 1.000000
101 [-]: SUB       R14 R10 K12  ; R14 := R10 - 1.000000
102 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
103 [-]: MOVE      R0 R11       ; R0 := R11
104 [-]: GETGLOBAL R3 K20       ; R3 := EVENT_FLAG
105 [-]: GETGLOBAL R11 K3       ; R11 := 0x7f5022cf
106 [-]: GETTABLE  R11 R11 K4   ; R82 := R11[0xa5c556b9]
107 [-]: MOVE      R12 R0       ; R12 := R0
108 [-]: GETGLOBAL R13 K21      ; R13 := PVP_TAG
109 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
110 [-]: EQ        1 R11 K1     ; if R11 == nil then PC := 120
111 [-]: JMP       120          ; PC := 120
112 [-]: GETGLOBAL R12 K3       ; R12 := 0x7f5022cf
113 [-]: GETTABLE  R12 R12 K11  ; R82 := R12[0x1a94c9cc]
114 [-]: MOVE      R13 R0       ; R13 := R0
115 [-]: LOADK     R14 1        ; R14 := 1.000000
116 [-]: SUB       R15 R11 K12  ; R15 := R11 - 1.000000
117 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
118 [-]: MOVE      R0 R12       ; R0 := R12
119 [-]: GETGLOBAL R3 K22       ; R3 := PVP_FLAG
120 [-]: GETGLOBAL R12 K3       ; R12 := 0x7f5022cf
121 [-]: GETTABLE  R12 R12 K4   ; R82 := R12[0xa5c556b9]
122 [-]: MOVE      R13 R0       ; R13 := R0
123 [-]: GETGLOBAL R14 K23      ; R14 := INVASION_ATTACKER_TAG
124 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
125 [-]: EQ        1 R12 K1     ; if R12 == nil then PC := 135
126 [-]: JMP       135          ; PC := 135
127 [-]: GETGLOBAL R13 K3       ; R13 := 0x7f5022cf
128 [-]: GETTABLE  R13 R13 K11  ; R82 := R13[0x1a94c9cc]
129 [-]: MOVE      R14 R0       ; R14 := R0
130 [-]: LOADK     R15 1        ; R15 := 1.000000
131 [-]: SUB       R16 R12 K12  ; R16 := R12 - 1.000000
132 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
133 [-]: MOVE      R0 R13       ; R0 := R13
134 [-]: GETGLOBAL R3 K24       ; R3 := INVASION_ATTACKER_FLAG
135 [-]: GETGLOBAL R13 K3       ; R13 := 0x7f5022cf
136 [-]: GETTABLE  R13 R13 K4   ; R82 := R13[0xa5c556b9]
137 [-]: MOVE      R14 R0       ; R14 := R0
138 [-]: GETGLOBAL R15 K25      ; R15 := INVASION_DEFENDER_TAG
139 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
140 [-]: EQ        1 R13 K1     ; if R13 == nil then PC := 150
141 [-]: JMP       150          ; PC := 150
142 [-]: GETGLOBAL R14 K3       ; R14 := 0x7f5022cf
143 [-]: GETTABLE  R14 R14 K11  ; R82 := R14[0x1a94c9cc]
144 [-]: MOVE      R15 R0       ; R15 := R0
145 [-]: LOADK     R16 1        ; R16 := 1.000000
146 [-]: SUB       R17 R13 K12  ; R17 := R13 - 1.000000
147 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
148 [-]: MOVE      R0 R14       ; R0 := R14
149 [-]: GETGLOBAL R3 K26       ; R3 := INVASION_DEFENDER_FLAG
150 [-]: GETGLOBAL R14 K3       ; R14 := 0x7f5022cf
151 [-]: GETTABLE  R14 R14 K4   ; R82 := R14[0xa5c556b9]
152 [-]: MOVE      R15 R0       ; R15 := R0
153 [-]: GETGLOBAL R16 K27      ; R16 := SYNDICATE_MISSION_TAG
154 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
155 [-]: EQ        1 R14 K1     ; if R14 == nil then PC := 165
156 [-]: JMP       165          ; PC := 165
157 [-]: GETGLOBAL R15 K3       ; R15 := 0x7f5022cf
158 [-]: GETTABLE  R15 R15 K11  ; R82 := R15[0x1a94c9cc]
159 [-]: MOVE      R16 R0       ; R16 := R0
160 [-]: LOADK     R17 1        ; R17 := 1.000000
161 [-]: SUB       R18 R14 K12  ; R18 := R14 - 1.000000
162 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
163 [-]: MOVE      R0 R15       ; R0 := R15
164 [-]: GETGLOBAL R3 K28       ; R3 := SYNDICATE_MISSION_FLAG
165 [-]: GETGLOBAL R15 K3       ; R15 := 0x7f5022cf
166 [-]: GETTABLE  R15 R15 K4   ; R82 := R15[0xa5c556b9]
167 [-]: MOVE      R16 R0       ; R16 := R0
168 [-]: GETGLOBAL R17 K29      ; R17 := SORTIE_MISSION_TAG
169 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
170 [-]: EQ        1 R15 K1     ; if R15 == nil then PC := 180
171 [-]: JMP       180          ; PC := 180
172 [-]: GETGLOBAL R16 K3       ; R16 := 0x7f5022cf
173 [-]: GETTABLE  R16 R16 K11  ; R82 := R16[0x1a94c9cc]
174 [-]: MOVE      R17 R0       ; R17 := R0
175 [-]: LOADK     R18 1        ; R18 := 1.000000
176 [-]: SUB       R19 R15 K12  ; R19 := R15 - 1.000000
177 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
178 [-]: MOVE      R0 R16       ; R0 := R16
179 [-]: GETGLOBAL R3 K30       ; R3 := SORTIE_MISSION_FLAG
180 [-]: GETGLOBAL R16 K3       ; R16 := 0x7f5022cf
181 [-]: GETTABLE  R16 R16 K4   ; R82 := R16[0xa5c556b9]
182 [-]: MOVE      R17 R0       ; R17 := R0
183 [-]: GETGLOBAL R18 K31      ; R18 := LITE_SORTIE_MISSION_TAG
184 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
185 [-]: EQ        1 R16 K1     ; if R16 == nil then PC := 195
186 [-]: JMP       195          ; PC := 195
187 [-]: GETGLOBAL R17 K3       ; R17 := 0x7f5022cf
188 [-]: GETTABLE  R17 R17 K11  ; R82 := R17[0x1a94c9cc]
189 [-]: MOVE      R18 R0       ; R18 := R0
190 [-]: LOADK     R19 1        ; R19 := 1.000000
191 [-]: SUB       R20 R16 K12  ; R20 := R16 - 1.000000
192 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
193 [-]: MOVE      R0 R17       ; R0 := R17
194 [-]: GETGLOBAL R3 K32       ; R3 := LITE_SORTIE_MISSION_FLAG
195 [-]: GETGLOBAL R17 K3       ; R17 := 0x7f5022cf
196 [-]: GETTABLE  R17 R17 K4   ; R82 := R17[0xa5c556b9]
197 [-]: MOVE      R18 R0       ; R18 := R0
198 [-]: GETGLOBAL R19 K33      ; R19 := HUB_TAG
199 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
200 [-]: EQ        1 R17 K1     ; if R17 == nil then PC := 210
201 [-]: JMP       210          ; PC := 210
202 [-]: GETGLOBAL R18 K3       ; R18 := 0x7f5022cf
203 [-]: GETTABLE  R18 R18 K11  ; R82 := R18[0x1a94c9cc]
204 [-]: MOVE      R19 R0       ; R19 := R0
205 [-]: LOADK     R20 1        ; R20 := 1.000000
206 [-]: SUB       R21 R17 K12  ; R21 := R17 - 1.000000
207 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
208 [-]: MOVE      R0 R18       ; R0 := R18
209 [-]: GETGLOBAL R3 K34       ; R3 := HUB_FLAG
210 [-]: GETGLOBAL R18 K3       ; R18 := 0x7f5022cf
211 [-]: GETTABLE  R18 R18 K4   ; R82 := R18[0xa5c556b9]
212 [-]: MOVE      R19 R0       ; R19 := R0
213 [-]: GETGLOBAL R20 K35      ; R20 := ACTIVE_MISSION_TAG
214 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
215 [-]: EQ        1 R18 K1     ; if R18 == nil then PC := 225
216 [-]: JMP       225          ; PC := 225
217 [-]: GETGLOBAL R19 K3       ; R19 := 0x7f5022cf
218 [-]: GETTABLE  R19 R19 K11  ; R82 := R19[0x1a94c9cc]
219 [-]: MOVE      R20 R0       ; R20 := R0
220 [-]: LOADK     R21 1        ; R21 := 1.000000
221 [-]: SUB       R22 R18 K12  ; R22 := R18 - 1.000000
222 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
223 [-]: MOVE      R0 R19       ; R0 := R19
224 [-]: GETGLOBAL R3 K36       ; R3 := ACTIVE_MISSION_FLAG
225 [-]: GETGLOBAL R19 K3       ; R19 := 0x7f5022cf
226 [-]: GETTABLE  R19 R19 K4   ; R82 := R19[0xa5c556b9]
227 [-]: MOVE      R20 R0       ; R20 := R0
228 [-]: GETGLOBAL R21 K37      ; R21 := KUVA_TOWER_MISSION_TAG
229 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
230 [-]: EQ        1 R19 K1     ; if R19 == nil then PC := 240
231 [-]: JMP       240          ; PC := 240
232 [-]: GETGLOBAL R20 K3       ; R20 := 0x7f5022cf
233 [-]: GETTABLE  R20 R20 K11  ; R82 := R20[0x1a94c9cc]
234 [-]: MOVE      R21 R0       ; R21 := R0
235 [-]: LOADK     R22 1        ; R22 := 1.000000
236 [-]: SUB       R23 R19 K12  ; R23 := R19 - 1.000000
237 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
238 [-]: MOVE      R0 R20       ; R0 := R20
239 [-]: GETGLOBAL R3 K38       ; R3 := KUVA_TOWER_MISSION_FLAG
240 [-]: GETGLOBAL R20 K3       ; R20 := 0x7f5022cf
241 [-]: GETTABLE  R20 R20 K4   ; R82 := R20[0xa5c556b9]
242 [-]: MOVE      R21 R0       ; R21 := R0
243 [-]: GETGLOBAL R22 K39      ; R22 := NEMESIS_MISSION_TAG
244 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
245 [-]: EQ        1 R20 K1     ; if R20 == nil then PC := 255
246 [-]: JMP       255          ; PC := 255
247 [-]: GETGLOBAL R21 K3       ; R21 := 0x7f5022cf
248 [-]: GETTABLE  R21 R21 K11  ; R82 := R21[0x1a94c9cc]
249 [-]: MOVE      R22 R0       ; R22 := R0
250 [-]: LOADK     R23 1        ; R23 := 1.000000
251 [-]: SUB       R24 R20 K12  ; R24 := R20 - 1.000000
252 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
253 [-]: MOVE      R0 R21       ; R0 := R21
254 [-]: GETGLOBAL R3 K40       ; R3 := NEMESIS_MISSION_FLAG
255 [-]: GETGLOBAL R21 K3       ; R21 := 0x7f5022cf
256 [-]: GETTABLE  R21 R21 K4   ; R82 := R21[0xa5c556b9]
257 [-]: MOVE      R22 R0       ; R22 := R0
258 [-]: GETGLOBAL R23 K41      ; R23 := ELITE_ALERT_TAG
259 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
260 [-]: EQ        1 R21 K1     ; if R21 == nil then PC := 270
261 [-]: JMP       270          ; PC := 270
262 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
263 [-]: GETTABLE  R22 R22 K11  ; R82 := R22[0x1a94c9cc]
264 [-]: MOVE      R23 R0       ; R23 := R0
265 [-]: LOADK     R24 1        ; R24 := 1.000000
266 [-]: SUB       R25 R21 K12  ; R25 := R21 - 1.000000
267 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
268 [-]: MOVE      R0 R22       ; R0 := R22
269 [-]: GETGLOBAL R3 K42       ; R3 := ELITE_ALERT_FLAG
270 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
271 [-]: GETTABLE  R22 R22 K4   ; R82 := R22[0xa5c556b9]
272 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
273 [-]: GETTABLE  R23 R23 K43  ; R82 := R23[0x04981ab3]
274 [-]: MOVE      R24 R0       ; R24 := R0
275 [-]: CALL      R23 2 2      ; R23 := R23(R24)
276 [-]: LOADK     R24 K44      ; R24 := "junction"
277 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
278 [-]: EQ        1 R22 K1     ; if R22 == nil then PC := 288
279 [-]: JMP       288          ; PC := 288
280 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
281 [-]: GETTABLE  R23 R23 K11  ; R82 := R23[0x1a94c9cc]
282 [-]: MOVE      R24 R0       ; R24 := R0
283 [-]: LOADK     R25 1        ; R25 := 1.000000
284 [-]: SUB       R26 R22 K12  ; R26 := R22 - 1.000000
285 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
286 [-]: MOVE      R0 R23       ; R0 := R23
287 [-]: GETGLOBAL R3 K45       ; R3 := JUNCTION_FLAG
288 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
289 [-]: GETTABLE  R23 R23 K4   ; R82 := R23[0xa5c556b9]
290 [-]: MOVE      R24 R0       ; R24 := R0
291 [-]: GETGLOBAL R25 K46      ; R25 := HARD_DAILY_TAG
292 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
293 [-]: EQ        1 R23 K1     ; if R23 == nil then PC := 304
294 [-]: JMP       304          ; PC := 304
295 [-]: GETGLOBAL R24 K3       ; R24 := 0x7f5022cf
296 [-]: GETTABLE  R24 R24 K11  ; R82 := R24[0x1a94c9cc]
297 [-]: MOVE      R25 R0       ; R25 := R0
298 [-]: LOADK     R26 1        ; R26 := 1.000000
299 [-]: SUB       R27 R23 K12  ; R27 := R23 - 1.000000
300 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
301 [-]: MOVE      R0 R24       ; R0 := R24
302 [-]: GETGLOBAL R3 K47       ; R3 := HARD_DAILY_FLAG
303 [-]: JMP       319          ; PC := 319
304 [-]: GETGLOBAL R24 K3       ; R24 := 0x7f5022cf
305 [-]: GETTABLE  R24 R24 K4   ; R82 := R24[0xa5c556b9]
306 [-]: MOVE      R25 R0       ; R25 := R0
307 [-]: GETGLOBAL R26 K48      ; R26 := HARD_MODE_TAG
308 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
309 [-]: EQ        1 R24 K1     ; if R24 == nil then PC := 319
310 [-]: JMP       319          ; PC := 319
311 [-]: GETGLOBAL R25 K3       ; R25 := 0x7f5022cf
312 [-]: GETTABLE  R25 R25 K11  ; R82 := R25[0x1a94c9cc]
313 [-]: MOVE      R26 R0       ; R26 := R0
314 [-]: LOADK     R27 1        ; R27 := 1.000000
315 [-]: SUB       R28 R24 K12  ; R28 := R24 - 1.000000
316 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
317 [-]: MOVE      R0 R25       ; R0 := R25
318 [-]: GETGLOBAL R3 K49       ; R3 := HARD_MODE_FLAG
319 [-]: GETGLOBAL R25 K3       ; R25 := 0x7f5022cf
320 [-]: GETTABLE  R25 R25 K4   ; R82 := R25[0xa5c556b9]
321 [-]: MOVE      R26 R0       ; R26 := R0
322 [-]: GETGLOBAL R27 K50      ; R27 := VOID_STORM_TAG
323 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
324 [-]: EQ        1 R25 K1     ; if R25 == nil then PC := 334
325 [-]: JMP       334          ; PC := 334
326 [-]: GETGLOBAL R26 K3       ; R26 := 0x7f5022cf
327 [-]: GETTABLE  R26 R26 K11  ; R82 := R26[0x1a94c9cc]
328 [-]: MOVE      R27 R0       ; R27 := R0
329 [-]: LOADK     R28 1        ; R28 := 1.000000
330 [-]: SUB       R29 R25 K12  ; R29 := R25 - 1.000000
331 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
332 [-]: MOVE      R0 R26       ; R0 := R26
333 [-]: GETGLOBAL R3 K51       ; R3 := VOID_STORM_FLAG
334 [-]: GETGLOBAL R26 K0       ; R26 := 0x7b998233
335 [-]: MOVE      R27 R2       ; R27 := R2
336 [-]: CALL      R26 2 2      ; R26 := R26(R27)
337 [-]: TEST      R26 0        ; if not R26 then PC := 345
338 [-]: JMP       345          ; PC := 345
339 [-]: SELF      R26 R1 K52   ; R27 := R1; R26 := R1[0x3ad9ed31]
340 [-]: GETGLOBAL R28 K53      ; R28 := 0x0469f296
341 [-]: MOVE      R29 R0       ; R29 := R0
342 [-]: CALL      R28 2 0      ; R28,... := R28(R29)
343 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
344 [-]: MOVE      R2 R26       ; R2 := R26
345 [-]: MOVE      R26 R2       ; R26 := R2
346 [-]: MOVE      R27 R3       ; R27 := R3
347 [-]: MOVE      R28 R4       ; R28 := R4
348 [-]: RETURN    R26 4        ; return R26,R27,R28
349 [-]: LOADNIL   R26 R26      ; R26 := nil
350 [-]: LOADK     R27 0        ; R27 := 0.000000
351 [-]: LOADK     R28 0        ; R28 := 0.000000
352 [-]: RETURN    R26 4        ; return R26,R27,R28
353 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 1949
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  6 [-]: RETURN    R3 2         ; return R3
  7 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 1953
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: TEST      R1 1         ; if R1 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: CALL      R3 1 2       ; R3 := R3()
  5 [-]: MOVE      R1 R3        ; R1 := R3
  6 [-]: GETUPVAL  R3 U1        ; R3 := U1
  7 [-]: MOVE      R4 R0        ; R4 := R0
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: MOVE      R6 R2        ; R6 := R2
 10 [-]: CALL      R3 4 4       ; R3,R4,R5 := R3(R4,R5,R6)
 11 [-]: GETGLOBAL R6 K0        ; R6 := 0x7f5022cf
 12 [-]: GETTABLE  R6 R6 K1     ; R82 := R6[0xa5c556b9]
 13 [-]: MOVE      R7 R0        ; R7 := R0
 14 [-]: GETGLOBAL R8 K2        ; R8 := TAG_SEPERATOR
 15 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 16 [-]: LOADNIL   R7 R7        ; R7 := nil
 17 [-]: EQ        1 R6 K3      ; if R6 == nil then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: GETGLOBAL R8 K0        ; R8 := 0x7f5022cf
 20 [-]: GETTABLE  R8 R8 K4     ; R82 := R8[0x1a94c9cc]
 21 [-]: MOVE      R9 R0        ; R9 := R0
 22 [-]: LOADK     R10 1        ; R10 := 1.000000
 23 [-]: SUB       R11 R6 K5    ; R11 := R6 - 1.000000
 24 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 25 [-]: MOVE      R7 R8        ; R7 := R8
 26 [-]: JMP       28           ; PC := 28
 27 [-]: MOVE      R7 R0        ; R7 := R0
 28 [-]: GETGLOBAL R8 K6        ; R8 := 0x7b998233
 29 [-]: MOVE      R9 R3        ; R9 := R3
 30 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 31 [-]: TEST      R8 1         ; if R8 then PC := 99
 32 [-]: JMP       99           ; PC := 99
 33 [-]: GETTABLE  R8 R3 K7     ; R8 := R3["region"]
 34 [-]: ADD       R8 R8 K5     ; R8 := R8 + 1.000000
 35 [-]: GETUPVAL  R9 U2        ; R9 := U2
 36 [-]: GETTABLE  R9 R9 K8     ; R82 := R9[0x06d055f9]
 37 [-]: LT        1 K9 R5      ; if 0.000000 < R5 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADBOOL  R10 0 1      ; R10 := false; PC := 40
 40 [-]: LOADBOOL  R10 1 0      ; R10 := true
 41 [-]: MOVE      R11 R5       ; R11 := R5
 42 [-]: MOVE      R12 R8       ; R12 := R8
 43 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 44 [-]: GETUPVAL  R10 U3       ; R10 := U3
 45 [-]: MUL       R9 R9 R10    ; R9 := R9 * R10
 46 [-]: EQ        1 R7 K3      ; if R7 == nil then PC := 99
 47 [-]: JMP       99           ; PC := 99
 48 [-]: LOADK     R10 0        ; R10 := 0.000000
 49 [-]: LOADK     R11 1        ; R11 := 1.000000
 50 [-]: GETGLOBAL R12 K0       ; R12 := 0x7f5022cf
 51 [-]: GETTABLE  R12 R12 K10  ; R82 := R12[0x41e2ae25]
 52 [-]: MOVE      R13 R7       ; R13 := R7
 53 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 54 [-]: LOADK     R13 1        ; R13 := 1.000000
 55 [-]: LOADK     R14 -1       ; R14 := -1.000000
 56 [-]: FORPREP   R12 72       ; R12 -= R14; PC := 72
 57 [-]: GETGLOBAL R16 K11      ; R16 := 0x03f57322
 58 [-]: GETGLOBAL R17 K0       ; R17 := 0x7f5022cf
 59 [-]: GETTABLE  R17 R17 K4   ; R82 := R17[0x1a94c9cc]
 60 [-]: MOVE      R18 R7       ; R18 := R7
 61 [-]: MOVE      R19 R15      ; R19 := R15
 62 [-]: MOVE      R20 R15      ; R20 := R15
 63 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
 64 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
 65 [-]: EQ        1 R16 K3     ; if R16 == nil then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: MUL       R17 R16 R11  ; R17 := R16 * R11
 68 [-]: ADD       R10 R10 R17  ; R10 := R10 + R17
 69 [-]: MUL       R11 R11 K12  ; R11 := R11 * 10.000000
 70 [-]: JMP       72           ; PC := 72
 71 [-]: JMP       73           ; PC := 73
 72 [-]: FORLOOP   R12 57       ; R12 += R14; if R12 <= R13 then begin PC := 57; R15 := R12 end
 73 [-]: EQ        0 R10 K9     ; if R10 ~= 0.000000 then PC := 82
 74 [-]: JMP       82           ; PC := 82
 75 [-]: GETGLOBAL R17 K13      ; R17 := KEY_FLAG
 76 [-]: EQ        0 R4 R17     ; if R4 ~= R17 then PC := 82
 77 [-]: JMP       82           ; PC := 82
 78 [-]: SELF      R17 R1 K14   ; R18 := R1; R17 := R1[0x4e163aa4]
 79 [-]: MOVE      R19 R7       ; R19 := R7
 80 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 81 [-]: MOVE      R10 R17      ; R10 := R17
 82 [-]: EQ        0 R8 K15     ; if R8 ~= 16.000000 then PC := 96
 83 [-]: JMP       96           ; PC := 96
 84 [-]: EQ        1 R10 K12    ; if R10 == 10.000000 then PC := 88
 85 [-]: JMP       88           ; PC := 88
 86 [-]: EQ        0 R10 K16    ; if R10 ~= 11.000000 then PC := 96
 87 [-]: JMP       96           ; PC := 96
 88 [-]: GETGLOBAL R17 K0       ; R17 := 0x7f5022cf
 89 [-]: GETTABLE  R17 R17 K1   ; R82 := R17[0xa5c556b9]
 90 [-]: MOVE      R18 R7       ; R18 := R7
 91 [-]: LOADK     R19 K17      ; R19 := "ClanNode"
 92 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 93 [-]: TEST      R17 0        ; if not R17 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: ADD       R10 R10 K18  ; R10 := R10 + 80.000000
 96 [-]: ADD       R17 R9 R10   ; R17 := R9 + R10
 97 [-]: ADD       R17 R17 R4   ; R17 := R17 + R4
 98 [-]: RETURN    R17 2        ; return R17
 99 [-]: GETGLOBAL R17 K19      ; R17 := _T
100 [-]: GETTABLE  R17 R17 K20  ; R17 := R17["gSelectedRegionId"]
101 [-]: EQ        1 R17 K3     ; if R17 == nil then PC := 105
102 [-]: JMP       105          ; PC := 105
103 [-]: LE        0 R17 K9     ; if R17 > 0.000000 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: LOADK     R17 1        ; R17 := 1.000000
106 [-]: GETUPVAL  R18 U3       ; R18 := U3
107 [-]: MUL       R18 R17 R18  ; R18 := R17 * R18
108 [-]: RETURN    R18 2        ; return R18
109 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 2014
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
  6 [-]: RETURN    R3 0         ; return R3,...
  7 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 2018
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_SIMULACRUM
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 2022
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := REGION_ID_SIMULACRUM
  2 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 5
  5 [-]: LOADBOOL  R1 1 0       ; R1 := true
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 2026
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_PHOTOBOOTH
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 2030
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := REGION_ID_PHOTOBOOTH
  2 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 5
  5 [-]: LOADBOOL  R1 1 0       ; R1 := true
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 2034
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: GETGLOBAL R1 K1        ; R1 := REGION_ID_PVP
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: MUL       R1 R1 R2     ; R1 := R1 * R2
  8 [-]: ADD       R1 R1 R0     ; R1 := R1 + R0
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 2039
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_CLAN_DOJO
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: MUL       R0 R0 R1     ; R0 := R0 * R1
  4 [-]: RETURN    R0 2         ; return R0
  5 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 2043
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K2        ; R2 := REGION_ID_CLAN_DOJO
  7 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 10
 10 [-]: LOADBOOL  R1 1 0       ; R1 := true
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 2047
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := REGION_ID_DOJO_DUEL
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: MUL       R0 R0 R1     ; R0 := R0 * R1
  4 [-]: RETURN    R0 2         ; return R0
  5 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 2051
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K2        ; R2 := REGION_ID_DOJO_DUEL
  7 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 10
 10 [-]: LOADBOOL  R1 1 0       ; R1 := true
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 2055
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := ALERT_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 15
 15 [-]: LOADBOOL  R1 1 0       ; R1 := true
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 2059
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 2063
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := NIGHTMARE_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 15
 15 [-]: LOADBOOL  R1 1 0       ; R1 := true
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 2067
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 2071
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := EVENT_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 15
 15 [-]: LOADBOOL  R1 1 0       ; R1 := true
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 2075
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 2079
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := INVASION_ATTACKER_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 15
 15 [-]: LOADBOOL  R1 1 0       ; R1 := true
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 2083
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := INVASION_DEFENDER_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 15
 15 [-]: LOADBOOL  R1 1 0       ; R1 := true
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 2087
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := PVP_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 15
 15 [-]: LOADBOOL  R1 1 0       ; R1 := true
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 2091
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 2095
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := SYNDICATE_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 2100
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 2104
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := SORTIE_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 2109
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 2113
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := LITE_SORTIE_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 2118
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := HUB_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 2123
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 2127
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := ACTIVE_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 2132
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := KUVA_TOWER_MISSION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 2137
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := JUNCTION_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 2142
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 2146
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: DIV       R2 R0 K2     ; R2 := R0 / 100.000000
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: MOD       R1 R1 K3     ; R1 := R1 % 10.000000
  6 [-]: EQ        1 R1 K4      ; if R1 == 5.000000 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 9
  9 [-]: LOADBOOL  R1 1 0       ; R1 := true
 10 [-]: RETURN    R1 2         ; return R1
 11 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 2152
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := KEY_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 2157
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 2161
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := HARD_MODE_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 2166
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 2170
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 21
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 21
 11 [-]: JMP       21           ; PC := 21
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 13 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xef893aec]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["tier"]
 16 [-]: LT        1 K6 R0      ; if 0.000000 < R0 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 19
 19 [-]: LOADBOOL  R0 1 0       ; R0 := true
 20 [-]: RETURN    R0 2         ; return R0
 21 [-]: LOADBOOL  R0 0 0       ; R0 := false
 22 [-]: RETURN    R0 2         ; return R0
 23 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 2177
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := HARD_DAILY_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 2182
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 2186
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedScenarioGameModeIds"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 35
  4 [-]: JMP       35           ; PC := 35
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R1 1 2       ; R1 := R1()
  7 [-]: GETGLOBAL R2 K0        ; R2 := _T
  8 [-]: NEWTABLE  R3 2 0       ; R3 := {}
  9 [-]: GETUPVAL  R4 U1        ; R4 := U1
 10 [-]: GETGLOBAL R5 K2        ; R5 := 0x64fb1586
 11 [-]: GETGLOBAL R6 K3        ; R6 := SCENARIO_EVENT_HUB_TAG
 12 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 13 [-]: GETGLOBAL R6 K4        ; R6 := HUB_TAG
 14 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 17 [-]: GETUPVAL  R5 U1        ; R5 := U1
 18 [-]: GETGLOBAL R6 K2        ; R6 := 0x64fb1586
 19 [-]: GETGLOBAL R7 K5        ; R7 := SCENARIO_EVENT_GROUND_TAG
 20 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 21 [-]: GETGLOBAL R7 K6        ; R7 := KEY_TAG
 22 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 23 [-]: MOVE      R7 R1        ; R7 := R1
 24 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 25 [-]: GETUPVAL  R6 U1        ; R6 := U1
 26 [-]: GETGLOBAL R7 K2        ; R7 := 0x64fb1586
 27 [-]: GETGLOBAL R8 K7        ; R8 := SCENARIO_EVENT_SPACE_TAG
 28 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 29 [-]: GETGLOBAL R8 K6        ; R8 := KEY_TAG
 30 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 31 [-]: MOVE      R8 R1        ; R8 := R1
 32 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
 33 [-]: SETLIST   R3 0 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 0
 34 [-]: SETTABLE  R2 K1 R3     ; R2["CachedScenarioGameModeIds"] := R3
 35 [-]: GETGLOBAL R2 K8        ; R2 := 0xcfc01047
 36 [-]: GETGLOBAL R3 K0        ; R3 := _T
 37 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedScenarioGameModeIds"]
 38 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 39 [-]: JMP       44           ; PC := 44
 40 [-]: EQ        0 R0 R6      ; if R0 ~= R6 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: LOADBOOL  R7 1 0       ; R7 := true
 43 [-]: RETURN    R7 2         ; return R7
 44 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 40; R4 := R5 end
 45 [-]: JMP       40           ; PC := 40
 46 [-]: LOADBOOL  R7 0 0       ; R7 := false
 47 [-]: RETURN    R7 2         ; return R7
 48 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 2207
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x55f27c30]
  8 [-]: GETGLOBAL R3 K2        ; R3 := VOID_STORM_FLAG
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: DIV       R3 R3 R4     ; R3 := R3 / R4
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 15
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 2212
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: MOD       R1 R1 R2     ; R1 := R1 % R2
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 2216
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x7f5022cf
  3 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0x1a94c9cc]
  4 [-]: GETGLOBAL R3 K3        ; R3 := 0x64fb1586
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: LOADK     R4 -3        ; R4 := -3.000000
  8 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
  9 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
 10 [-]: RETURN    R1 0         ; return R1,...
 11 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 2220
; #Upvalues:       11
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: MOD       R1 R1 R2     ; R1 := R1 % R2
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0x03f57322
  9 [-]: GETGLOBAL R3 K3        ; R3 := 0x7f5022cf
 10 [-]: GETTABLE  R3 R3 K4     ; R82 := R3[0x1a94c9cc]
 11 [-]: GETGLOBAL R4 K5        ; R4 := 0x64fb1586
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: LOADK     R5 -3        ; R5 := -3.000000
 15 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 16 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 17 [-]: GETUPVAL  R3 U2        ; R3 := U2
 18 [-]: MOVE      R4 R0        ; R4 := R0
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 0         ; if not R3 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: LOADK     R3 K6        ; R3 := "PvpNode"
 23 [-]: MOVE      R4 R2        ; R4 := R2
 24 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 25 [-]: RETURN    R3 2         ; return R3
 26 [-]: JMP       248          ; PC := 248
 27 [-]: GETUPVAL  R3 U3        ; R3 := U3
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: TEST      R3 0         ; if not R3 then PC := 73
 31 [-]: JMP       73           ; PC := 73
 32 [-]: GETGLOBAL R3 K7        ; R3 := 0x0032441c
 33 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["CachedGoalInfo"]
 34 [-]: TEST      R3 0         ; if not R3 then PC := 44
 35 [-]: JMP       44           ; PC := 44
 36 [-]: GETGLOBAL R3 K7        ; R3 := 0x0032441c
 37 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["CachedGoalInfo"]
 38 [-]: LOADK     R4 K9        ; R4 := "EventNode"
 39 [-]: MOVE      R5 R2        ; R5 := R2
 40 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 41 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 42 [-]: TEST      R3 1         ; if R3 then PC := 68
 43 [-]: JMP       68           ; PC := 68
 44 [-]: GETGLOBAL R3 K7        ; R3 := 0x0032441c
 45 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["MergedGoalNodes"]
 46 [-]: TEST      R3 0         ; if not R3 then PC := 56
 47 [-]: JMP       56           ; PC := 56
 48 [-]: GETGLOBAL R3 K7        ; R3 := 0x0032441c
 49 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["MergedGoalNodes"]
 50 [-]: LOADK     R4 K9        ; R4 := "EventNode"
 51 [-]: MOVE      R5 R2        ; R5 := R2
 52 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 53 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 54 [-]: TEST      R3 1         ; if R3 then PC := 68
 55 [-]: JMP       68           ; PC := 68
 56 [-]: GETGLOBAL R3 K11       ; R3 := _T
 57 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["LockedGoalList"]
 58 [-]: TEST      R3 0         ; if not R3 then PC := 73
 59 [-]: JMP       73           ; PC := 73
 60 [-]: GETGLOBAL R3 K11       ; R3 := _T
 61 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["LockedGoalList"]
 62 [-]: LOADK     R4 K9        ; R4 := "EventNode"
 63 [-]: MOVE      R5 R2        ; R5 := R2
 64 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 65 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 66 [-]: TEST      R3 0         ; if not R3 then PC := 73
 67 [-]: JMP       73           ; PC := 73
 68 [-]: LOADK     R3 K9        ; R3 := "EventNode"
 69 [-]: MOVE      R4 R2        ; R4 := R2
 70 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 71 [-]: RETURN    R3 2         ; return R3
 72 [-]: JMP       248          ; PC := 248
 73 [-]: GETUPVAL  R3 U4        ; R3 := U4
 74 [-]: MOVE      R4 R0        ; R4 := R0
 75 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 76 [-]: TEST      R3 0         ; if not R3 then PC := 83
 77 [-]: JMP       83           ; PC := 83
 78 [-]: LOADK     R3 K13       ; R3 := "SyndicateNode"
 79 [-]: MOVE      R4 R2        ; R4 := R2
 80 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 81 [-]: RETURN    R3 2         ; return R3
 82 [-]: JMP       248          ; PC := 248
 83 [-]: GETUPVAL  R3 U5        ; R3 := U5
 84 [-]: MOVE      R4 R0        ; R4 := R0
 85 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 86 [-]: TEST      R3 0         ; if not R3 then PC := 93
 87 [-]: JMP       93           ; PC := 93
 88 [-]: LOADK     R3 K14       ; R3 := "SortieNode"
 89 [-]: MOVE      R4 R2        ; R4 := R2
 90 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 91 [-]: RETURN    R3 2         ; return R3
 92 [-]: JMP       248          ; PC := 248
 93 [-]: GETUPVAL  R3 U6        ; R3 := U6
 94 [-]: MOVE      R4 R0        ; R4 := R0
 95 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 96 [-]: TEST      R3 0         ; if not R3 then PC := 188
 97 [-]: JMP       188          ; PC := 188
 98 [-]: GETGLOBAL R3 K0        ; R3 := 0x5bced4c4
 99 [-]: GETTABLE  R3 R3 K15    ; R82 := R3[0xb62ecfe0]
100 [-]: MOVE      R4 R1        ; R4 := R1
101 [-]: LOADK     R5 1         ; R5 := 1.000000
102 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
103 [-]: MOVE      R1 R3        ; R1 := R3
104 [-]: EQ        0 R1 K16     ; if R1 ~= 3.000000 then PC := 112
105 [-]: JMP       112          ; PC := 112
106 [-]: MOD       R3 R0 K17    ; R3 := R0 % 10.000000
107 [-]: EQ        0 R3 K18     ; if R3 ~= 2.000000 then PC := 112
108 [-]: JMP       112          ; PC := 112
109 [-]: LOADK     R3 K19       ; R3 := "TennoConHUB2"
110 [-]: RETURN    R3 2         ; return R3
111 [-]: JMP       248          ; PC := 248
112 [-]: EQ        0 R1 K16     ; if R1 ~= 3.000000 then PC := 120
113 [-]: JMP       120          ; PC := 120
114 [-]: MOD       R3 R0 K17    ; R3 := R0 % 10.000000
115 [-]: EQ        0 R3 K16     ; if R3 ~= 3.000000 then PC := 120
116 [-]: JMP       120          ; PC := 120
117 [-]: LOADK     R3 K20       ; R3 := "IronwakeHUB3"
118 [-]: RETURN    R3 2         ; return R3
119 [-]: JMP       248          ; PC := 248
120 [-]: EQ        0 R1 K16     ; if R1 ~= 3.000000 then PC := 130
121 [-]: JMP       130          ; PC := 130
122 [-]: MOD       R3 R0 K17    ; R3 := R0 % 10.000000
123 [-]: EQ        0 R3 K21     ; if R3 ~= 4.000000 then PC := 130
124 [-]: JMP       130          ; PC := 130
125 [-]: GETGLOBAL R3 K5        ; R3 := 0x64fb1586
126 [-]: GETGLOBAL R4 K22       ; R4 := CETUS_NODE_TAG
127 [-]: TAILCALL  R3 2 0       ; R3,... := R3(R4)
128 [-]: RETURN    R3 0         ; return R3,...
129 [-]: JMP       248          ; PC := 248
130 [-]: EQ        0 R1 K16     ; if R1 ~= 3.000000 then PC := 140
131 [-]: JMP       140          ; PC := 140
132 [-]: MOD       R3 R0 K17    ; R3 := R0 % 10.000000
133 [-]: EQ        0 R3 K23     ; if R3 ~= 5.000000 then PC := 140
134 [-]: JMP       140          ; PC := 140
135 [-]: GETGLOBAL R3 K5        ; R3 := 0x64fb1586
136 [-]: GETGLOBAL R4 K24       ; R4 := SCENARIO_EVENT_HUB_TAG
137 [-]: TAILCALL  R3 2 0       ; R3,... := R3(R4)
138 [-]: RETURN    R3 0         ; return R3,...
139 [-]: JMP       248          ; PC := 248
140 [-]: EQ        0 R1 K16     ; if R1 ~= 3.000000 then PC := 148
141 [-]: JMP       148          ; PC := 148
142 [-]: MOD       R3 R0 K17    ; R3 := R0 % 10.000000
143 [-]: EQ        0 R3 K25     ; if R3 ~= 7.000000 then PC := 148
144 [-]: JMP       148          ; PC := 148
145 [-]: LOADK     R3 K26       ; R3 := "DevStreamHUB7"
146 [-]: RETURN    R3 2         ; return R3
147 [-]: JMP       248          ; PC := 248
148 [-]: EQ        0 R1 K18     ; if R1 ~= 2.000000 then PC := 158
149 [-]: JMP       158          ; PC := 158
150 [-]: MOD       R3 R0 K17    ; R3 := R0 % 10.000000
151 [-]: EQ        0 R3 K27     ; if R3 ~= 1.000000 then PC := 158
152 [-]: JMP       158          ; PC := 158
153 [-]: GETGLOBAL R3 K5        ; R3 := 0x64fb1586
154 [-]: GETGLOBAL R4 K28       ; R4 := FORTUNA_NODE_TAG
155 [-]: TAILCALL  R3 2 0       ; R3,... := R3(R4)
156 [-]: RETURN    R3 0         ; return R3,...
157 [-]: JMP       248          ; PC := 248
158 [-]: NEWTABLE  R3 0 15      ; R3 := {}
159 [-]: SETTABLE  R3 K27 K29   ; R3[1.000000] := "MercuryHUB"
160 [-]: SETTABLE  R3 K18 K30   ; R3[2.000000] := "VenusHUB"
161 [-]: SETTABLE  R3 K16 K31   ; R3[3.000000] := "EarthHUB"
162 [-]: SETTABLE  R3 K21 K32   ; R3[4.000000] := "TradeHUB1"
163 [-]: SETTABLE  R3 K23 K33   ; R3[5.000000] := "JupiterHUB"
164 [-]: SETTABLE  R3 K34 K35   ; R3[6.000000] := "SaturnHUB"
165 [-]: SETTABLE  R3 K25 K36   ; R3[7.000000] := "UranusHUB"
166 [-]: SETTABLE  R3 K37 K38   ; R3[8.000000] := "NeptuneHUB"
167 [-]: SETTABLE  R3 K39 K40   ; R3[9.000000] := "PlutoHUB"
168 [-]: SETTABLE  R3 K17 K41   ; R3[10.000000] := "CeresHUB"
169 [-]: SETTABLE  R3 K42 K43   ; R3[11.000000] := "ErisHUB"
170 [-]: SETTABLE  R3 K44 K45   ; R3[12.000000] := "SednaHUB"
171 [-]: SETTABLE  R3 K46 K47   ; R3[13.000000] := "EuropaHUB"
172 [-]: SETTABLE  R3 K48 K49   ; R3[17.000000] := "DeimosHub"
173 [-]: SETTABLE  R3 K50 K51   ; R3[22.000000] := "ZarimanHub"
174 [-]: GETTABLE  R4 R3 R1     ; R4 := R3[R1]
175 [-]: TEST      R4 0         ; if not R4 then PC := 179
176 [-]: JMP       179          ; PC := 179
177 [-]: GETTABLE  R4 R3 R1     ; R4 := R3[R1]
178 [-]: RETURN    R4 2         ; return R4
179 [-]: GETGLOBAL R4 K52       ; R4 := 0x3d106989
180 [-]: LOADK     R5 K53       ; R5 := "Invalid hub gameModeId "
181 [-]: MOVE      R6 R0        ; R6 := R0
182 [-]: LOADK     R7 K54       ; R7 := "! Defaulting to MercuryHUB"
183 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
184 [-]: CALL      R4 2 1       ; R4(R5)
185 [-]: GETTABLE  R4 R3 K27    ; R4 := R3[1.000000]
186 [-]: RETURN    R4 2         ; return R4
187 [-]: JMP       248          ; PC := 248
188 [-]: GETUPVAL  R4 U7        ; R4 := U7
189 [-]: MOVE      R5 R0        ; R5 := R0
190 [-]: CALL      R4 2 2       ; R4 := R4(R5)
191 [-]: TEST      R4 0         ; if not R4 then PC := 198
192 [-]: JMP       198          ; PC := 198
193 [-]: LOADK     R4 K55       ; R4 := "CrewBattleNode"
194 [-]: MOVE      R5 R2        ; R5 := R2
195 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
196 [-]: RETURN    R4 2         ; return R4
197 [-]: JMP       248          ; PC := 248
198 [-]: GETUPVAL  R4 U8        ; R4 := U8
199 [-]: MOVE      R5 R0        ; R5 := R0
200 [-]: CALL      R4 2 2       ; R4 := R4(R5)
201 [-]: TEST      R4 0         ; if not R4 then PC := 212
202 [-]: JMP       212          ; PC := 212
203 [-]: GETUPVAL  R4 U0        ; R4 := U0
204 [-]: MOD       R4 R0 R4     ; R4 := R0 % R4
205 [-]: GETUPVAL  R5 U9        ; R5 := U9
206 [-]: CALL      R5 1 2       ; R5 := R5()
207 [-]: SELF      R5 R5 K56    ; R6 := R5; R5 := R5[0x63e6e330]
208 [-]: MOVE      R7 R4        ; R7 := R4
209 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
210 [-]: RETURN    R5 2         ; return R5
211 [-]: JMP       248          ; PC := 248
212 [-]: EQ        0 R1 K57     ; if R1 ~= 16.000000 then PC := 226
213 [-]: JMP       226          ; PC := 226
214 [-]: LE        0 K58 R2     ; if 80.000000 > R2 then PC := 221
215 [-]: JMP       221          ; PC := 221
216 [-]: SUB       R2 R2 K58    ; R2 := R2 - 80.000000
217 [-]: LOADK     R6 K59       ; R6 := "ClanNode"
218 [-]: MOVE      R7 R2        ; R7 := R2
219 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
220 [-]: RETURN    R6 2         ; return R6
221 [-]: LOADK     R6 K60       ; R6 := "SettlementNode"
222 [-]: MOVE      R7 R2        ; R7 := R2
223 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
224 [-]: RETURN    R6 2         ; return R6
225 [-]: JMP       248          ; PC := 248
226 [-]: LT        0 K61 R2     ; if 0.000000 >= R2 then PC := 246
227 [-]: JMP       246          ; PC := 246
228 [-]: GETUPVAL  R6 U10       ; R6 := U10
229 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
230 [-]: TEST      R6 0         ; if not R6 then PC := 241
231 [-]: JMP       241          ; PC := 241
232 [-]: GETUPVAL  R6 U10       ; R6 := U10
233 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
234 [-]: GETTABLE  R6 R6 R2     ; R6 := R6[R2]
235 [-]: EQ        0 R6 K62     ; if R6 ~= true then PC := 241
236 [-]: JMP       241          ; PC := 241
237 [-]: LOADK     R6 K59       ; R6 := "ClanNode"
238 [-]: MOVE      R7 R2        ; R7 := R2
239 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
240 [-]: RETURN    R6 2         ; return R6
241 [-]: LOADK     R6 K63       ; R6 := "SolNode"
242 [-]: MOVE      R7 R2        ; R7 := R2
243 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
244 [-]: RETURN    R6 2         ; return R6
245 [-]: JMP       248          ; PC := 248
246 [-]: LOADNIL   R6 R6        ; R6 := nil
247 [-]: RETURN    R6 2         ; return R6
248 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 2282
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 2286
; #Upvalues:       15
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R1 K0        ; R1 := ALERT_TAG
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: JMP       120          ; PC := 120
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETGLOBAL R1 K1        ; R1 := EVENT_TAG
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: JMP       120          ; PC := 120
 17 [-]: GETUPVAL  R1 U2        ; R1 := U2
 18 [-]: MOVE      R2 R0        ; R2 := R0
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 0         ; if not R1 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETGLOBAL R1 K2        ; R1 := INVASION_ATTACKER_TAG
 23 [-]: RETURN    R1 2         ; return R1
 24 [-]: JMP       120          ; PC := 120
 25 [-]: GETUPVAL  R1 U3        ; R1 := U3
 26 [-]: MOVE      R2 R0        ; R2 := R0
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: TEST      R1 0         ; if not R1 then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: GETGLOBAL R1 K3        ; R1 := INVASION_DEFENDER_TAG
 31 [-]: RETURN    R1 2         ; return R1
 32 [-]: JMP       120          ; PC := 120
 33 [-]: GETUPVAL  R1 U4        ; R1 := U4
 34 [-]: MOVE      R2 R0        ; R2 := R0
 35 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 36 [-]: TEST      R1 0         ; if not R1 then PC := 41
 37 [-]: JMP       41           ; PC := 41
 38 [-]: GETGLOBAL R1 K4        ; R1 := SYNDICATE_MISSION_TAG
 39 [-]: RETURN    R1 2         ; return R1
 40 [-]: JMP       120          ; PC := 120
 41 [-]: GETUPVAL  R1 U5        ; R1 := U5
 42 [-]: MOVE      R2 R0        ; R2 := R0
 43 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 44 [-]: TEST      R1 0         ; if not R1 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: GETGLOBAL R1 K5        ; R1 := SORTIE_MISSION_TAG
 47 [-]: RETURN    R1 2         ; return R1
 48 [-]: JMP       120          ; PC := 120
 49 [-]: GETUPVAL  R1 U6        ; R1 := U6
 50 [-]: MOVE      R2 R0        ; R2 := R0
 51 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 52 [-]: TEST      R1 0         ; if not R1 then PC := 57
 53 [-]: JMP       57           ; PC := 57
 54 [-]: GETGLOBAL R1 K6        ; R1 := LITE_SORTIE_MISSION_TAG
 55 [-]: RETURN    R1 2         ; return R1
 56 [-]: JMP       120          ; PC := 120
 57 [-]: GETUPVAL  R1 U7        ; R1 := U7
 58 [-]: MOVE      R2 R0        ; R2 := R0
 59 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 60 [-]: TEST      R1 0         ; if not R1 then PC := 65
 61 [-]: JMP       65           ; PC := 65
 62 [-]: GETGLOBAL R1 K7        ; R1 := HUB_TAG
 63 [-]: RETURN    R1 2         ; return R1
 64 [-]: JMP       120          ; PC := 120
 65 [-]: GETUPVAL  R1 U8        ; R1 := U8
 66 [-]: MOVE      R2 R0        ; R2 := R0
 67 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 68 [-]: TEST      R1 0         ; if not R1 then PC := 73
 69 [-]: JMP       73           ; PC := 73
 70 [-]: GETGLOBAL R1 K8        ; R1 := ACTIVE_MISSION_TAG
 71 [-]: RETURN    R1 2         ; return R1
 72 [-]: JMP       120          ; PC := 120
 73 [-]: GETUPVAL  R1 U9        ; R1 := U9
 74 [-]: MOVE      R2 R0        ; R2 := R0
 75 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 76 [-]: TEST      R1 0         ; if not R1 then PC := 81
 77 [-]: JMP       81           ; PC := 81
 78 [-]: GETGLOBAL R1 K9        ; R1 := KUVA_TOWER_MISSION_TAG
 79 [-]: RETURN    R1 2         ; return R1
 80 [-]: JMP       120          ; PC := 120
 81 [-]: GETUPVAL  R1 U10       ; R1 := U10
 82 [-]: MOVE      R2 R0        ; R2 := R0
 83 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 84 [-]: TEST      R1 0         ; if not R1 then PC := 89
 85 [-]: JMP       89           ; PC := 89
 86 [-]: GETGLOBAL R1 K10       ; R1 := KEY_TAG
 87 [-]: RETURN    R1 2         ; return R1
 88 [-]: JMP       120          ; PC := 120
 89 [-]: GETUPVAL  R1 U11       ; R1 := U11
 90 [-]: MOVE      R2 R0        ; R2 := R0
 91 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 92 [-]: TEST      R1 0         ; if not R1 then PC := 97
 93 [-]: JMP       97           ; PC := 97
 94 [-]: GETGLOBAL R1 K11       ; R1 := NIGHTMARE_TAG
 95 [-]: RETURN    R1 2         ; return R1
 96 [-]: JMP       120          ; PC := 120
 97 [-]: GETUPVAL  R1 U12       ; R1 := U12
 98 [-]: MOVE      R2 R0        ; R2 := R0
 99 [-]: CALL      R1 2 2       ; R1 := R1(R2)
100 [-]: TEST      R1 0         ; if not R1 then PC := 105
101 [-]: JMP       105          ; PC := 105
102 [-]: GETGLOBAL R1 K12       ; R1 := HARD_DAILY_TAG
103 [-]: RETURN    R1 2         ; return R1
104 [-]: JMP       120          ; PC := 120
105 [-]: GETUPVAL  R1 U13       ; R1 := U13
106 [-]: MOVE      R2 R0        ; R2 := R0
107 [-]: CALL      R1 2 2       ; R1 := R1(R2)
108 [-]: TEST      R1 0         ; if not R1 then PC := 113
109 [-]: JMP       113          ; PC := 113
110 [-]: GETGLOBAL R1 K13       ; R1 := HARD_MODE_TAG
111 [-]: RETURN    R1 2         ; return R1
112 [-]: JMP       120          ; PC := 120
113 [-]: GETUPVAL  R1 U14       ; R1 := U14
114 [-]: MOVE      R2 R0        ; R2 := R0
115 [-]: CALL      R1 2 2       ; R1 := R1(R2)
116 [-]: TEST      R1 0         ; if not R1 then PC := 120
117 [-]: JMP       120          ; PC := 120
118 [-]: GETGLOBAL R1 K14       ; R1 := VOID_STORM_TAG
119 [-]: RETURN    R1 2         ; return R1
120 [-]: LOADK     R1 K15       ; R1 := ""
121 [-]: RETURN    R1 2         ; return R1
122 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 2322
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: LOADNIL   R3 R3        ; R3 := nil
  7 [-]: TEST      R2 0         ; if not R2 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: SELF      R4 R1 K0     ; R5 := R1; R4 := R1[0xc18bf6f0]
 10 [-]: GETGLOBAL R6 K1        ; R6 := 0x0469f296
 11 [-]: MOVE      R7 R2        ; R7 := R2
 12 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 13 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 14 [-]: MOVE      R3 R4        ; R3 := R4
 15 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 16 [-]: MOVE      R5 R3        ; R5 := R3
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 30
 19 [-]: JMP       30           ; PC := 30
 20 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 21 [-]: GETTABLE  R5 R3 K3     ; R5 := R3["gameRules"]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETTABLE  R4 R3 K3     ; R4 := R3["gameRules"]
 26 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0xf2deaf69]
 27 [-]: GETUPVAL  R6 U2        ; R6 := U2
 28 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 29 [-]: JMP       32           ; PC := 32
 30 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 31
 31 [-]: LOADBOOL  R4 1 0       ; R4 := true
 32 [-]: GETGLOBAL R5 K5        ; R5 := _T
 33 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["CachedPvpNodes"]
 34 [-]: SETTABLE  R5 R0 R4     ; R5[R0] := R4
 35 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 2334
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedPvpNodes"]
  3 [-]: TEST      R1 1         ; if R1 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  7 [-]: SETTABLE  R1 K1 R2     ; R1["CachedPvpNodes"] := R2
  8 [-]: GETGLOBAL R1 K0        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedPvpNodes"]
 10 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 11 [-]: TEST      R1 1         ; if R1 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETUPVAL  R1 U0        ; R1 := U0
 14 [-]: MOVE      R2 R0        ; R2 := R0
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K0        ; R1 := _T
 17 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedPvpNodes"]
 18 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 2347
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 2351
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETUPVAL  R1 U1        ; R1 := U1
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 40
 10 [-]: JMP       40           ; PC := 40
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x5bced4c4
 12 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x55f27c30]
 13 [-]: GETUPVAL  R2 U2        ; R2 := U2
 14 [-]: DIV       R2 R0 R2     ; R2 := R0 / R2
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: GETUPVAL  R2 U3        ; R2 := U3
 17 [-]: MOD       R1 R1 R2     ; R1 := R1 % R2
 18 [-]: GETGLOBAL R2 K2        ; R2 := 0x03f57322
 19 [-]: GETGLOBAL R3 K3        ; R3 := 0x7f5022cf
 20 [-]: GETTABLE  R3 R3 K4     ; R82 := R3[0x1a94c9cc]
 21 [-]: GETGLOBAL R4 K5        ; R4 := 0x64fb1586
 22 [-]: MOVE      R5 R0        ; R5 := R0
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: LOADK     R5 -3        ; R5 := -3.000000
 25 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 26 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 27 [-]: GETUPVAL  R3 U4        ; R3 := U4
 28 [-]: GETTABLE  R3 R3 K6     ; R82 := R3[0x06d055f9]
 29 [-]: EQ        1 R1 K7      ; if R1 == 16.000000 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 32
 32 [-]: LOADBOOL  R4 1 0       ; R4 := true
 33 [-]: LOADK     R5 K8        ; R5 := "SettlementNode"
 34 [-]: LOADK     R6 K9        ; R6 := "SolNode"
 35 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 36 [-]: MOVE      R4 R2        ; R4 := R2
 37 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 38 [-]: RETURN    R3 2         ; return R3
 39 [-]: JMP       44           ; PC := 44
 40 [-]: GETUPVAL  R3 U5        ; R3 := U5
 41 [-]: MOVE      R4 R0        ; R4 := R0
 42 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 43 [-]: RETURN    R3 2         ; return R3
 44 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 2361
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x25d99d89
  2 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1[0x69727e0b]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x7f5022cf
  5 [-]: GETTABLE  R3 R3 K3     ; R82 := R3[0xa5c556b9]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETGLOBAL R5 K4        ; R5 := ALERT_TAG
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: EQ        1 R3 K5      ; if R3 == nil then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: GETGLOBAL R4 K2        ; R4 := 0x7f5022cf
 12 [-]: GETTABLE  R4 R4 K6     ; R82 := R4[0x1a94c9cc]
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: LOADK     R6 1         ; R6 := 1.000000
 15 [-]: SUB       R7 R3 K7     ; R7 := R3 - 1.000000
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: MOVE      R0 R4        ; R0 := R4
 18 [-]: GETTABLE  R4 R2 K8     ; R4 := R2["mAlerts"]
 19 [-]: LOADK     R5 1         ; R5 := 1.000000
 20 [-]: LEN       R6 R4        ; R6 := # R4
 21 [-]: LOADK     R7 1         ; R7 := 1.000000
 22 [-]: FORPREP   R5 33        ; R5 -= R7; PC := 33
 23 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 24 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mMissionInfo"]
 25 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["location"]
 26 [-]: SELF      R9 R9 K11    ; R10 := R9; R9 := R9[0x6d604ba7]
 27 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 28 [-]: EQ        0 R9 R0      ; if R9 ~= R0 then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 31 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["mExpiry"]
 32 [-]: RETURN    R9 2         ; return R9
 33 [-]: FORLOOP   R5 23        ; R5 += R7; if R5 <= R6 then begin PC := 23; R8 := R5 end
 34 [-]: LOADNIL   R9 R9        ; R9 := nil
 35 [-]: RETURN    R9 2         ; return R9
 36 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 2380
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: LOADBOOL  R3 0 0       ; R3 := false
  2 [-]: TEST      R3 0         ; if not R3 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: LOADBOOL  R3 1 0       ; R3 := true
  5 [-]: RETURN    R3 2         ; return R3
  6 [-]: GETGLOBAL R3 K0        ; R3 := _T
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedRegionStatus"]
  8 [-]: TEST      R3 0         ; if not R3 then PC := 23
  9 [-]: JMP       23           ; PC := 23
 10 [-]: GETGLOBAL R3 K0        ; R3 := _T
 11 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedRegionStatus"]
 12 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 13 [-]: TEST      R3 0         ; if not R3 then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETGLOBAL R3 K0        ; R3 := _T
 16 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedRegionStatus"]
 17 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 18 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["goal"]
 19 [-]: EQ        0 R3 K3      ; if R3 ~= true then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: LOADBOOL  R3 1 0       ; R3 := true
 22 [-]: RETURN    R3 2         ; return R3
 23 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 24 [-]: MOVE      R4 R0        ; R4 := R0
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: CALL      R3 1 2       ; R3 := R3()
 30 [-]: MOVE      R0 R3        ; R0 := R3
 31 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 32 [-]: MOVE      R4 R1        ; R4 := R1
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: TEST      R3 0         ; if not R3 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: LOADBOOL  R3 0 0       ; R3 := false
 37 [-]: RETURN    R3 2         ; return R3
 38 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0[0xc1dee03f]
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: GETTABLE  R3 R3 R2     ; R3 := R3[R2]
 41 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 42 [-]: MOVE      R5 R3        ; R5 := R3
 43 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 44 [-]: TEST      R4 1         ; if R4 then PC := 54
 45 [-]: JMP       54           ; PC := 54
 46 [-]: SELF      R4 R3 K6     ; R5 := R3; R4 := R3[0x699fd1e2]
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: EQ        0 R4 K8      ; if R4 ~= 0.000000 then PC := 55
 49 [-]: JMP       55           ; PC := 55
 50 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1[0x25452953]
 51 [-]: MOVE      R6 R2        ; R6 := R2
 52 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 53 [-]: JMP       56           ; PC := 56
 54 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 55
 55 [-]: LOADBOOL  R4 1 0       ; R4 := true
 56 [-]: RETURN    R4 2         ; return R4
 57 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 2402
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xbcfb64ab]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0xc472e470]
  5 [-]: CALL      R2 1 0       ; R2,... := R2()
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xe4162eed]
 13 [-]: LOADK     R3 K5        ; R3 := "IsMaximized"
 14 [-]: LOADK     R4 K6        ; R4 := ""
 15 [-]: TAILCALL  R1 4 0       ; R1,... := R1(R2,R3,R4)
 16 [-]: RETURN    R1 0         ; return R1,...
 17 [-]: LOADBOOL  R1 0 0       ; R1 := false
 18 [-]: RETURN    R1 2         ; return R1
 19 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 2412
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADBOOL  R1 1 0       ; R1 := true
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0xfdd3576f]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["gameModeId"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 47
 14 [-]: JMP       47           ; PC := 47
 15 [-]: LOADK     R2 K3        ; R2 := ""
 16 [-]: SELF      R3 R1 K4     ; R4 := R1; R3 := R1[0xabb735a5]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 19 [-]: MOVE      R5 R3        ; R5 := R3
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 1         ; if R4 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: LEN       R4 R3        ; R4 := # R3
 24 [-]: LE        0 R4 K5      ; if R4 > 0.000000 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: LOADBOOL  R4 1 0       ; R4 := true
 27 [-]: RETURN    R4 2         ; return R4
 28 [-]: GETTABLE  R2 R3 K6     ; R2 := R3[1.000000]
 29 [-]: GETGLOBAL R4 K7        ; R4 := 0x7f5022cf
 30 [-]: GETTABLE  R4 R4 K8     ; R82 := R4[0x41e2ae25]
 31 [-]: MOVE      R5 R2        ; R5 := R2
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: LT        0 K5 R4      ; if 0.000000 >= R4 then PC := 47
 34 [-]: JMP       47           ; PC := 47
 35 [-]: GETGLOBAL R4 K9        ; R4 := 0xcb2f6c8f
 36 [-]: CALL      R4 1 2       ; R4 := R4()
 37 [-]: SETTABLE  R4 K10 R2    ; R4["sec"] := R2
 38 [-]: GETGLOBAL R5 K11       ; R5 := 0x34291f5c
 39 [-]: GETTABLE  R5 R5 K12    ; R82 := R5[0x397b920f]
 40 [-]: MOVE      R6 R4        ; R6 := R4
 41 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 42 [-]: LE        1 R5 K5      ; if R5 <= 0.000000 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 45
 45 [-]: LOADBOOL  R6 1 0       ; R6 := true
 46 [-]: RETURN    R6 2         ; return R6
 47 [-]: LOADBOOL  R6 0 0       ; R6 := false
 48 [-]: RETURN    R6 2         ; return R6
 49 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 2440
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x25d99d89
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADBOOL  R2 0 0       ; R2 := false
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1[0xed5b57ee]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETGLOBAL R3 K3        ; R3 := 0x0469f296
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: LOADK     R4 1         ; R4 := 1.000000
 15 [-]: LEN       R5 R2        ; R5 := # R2
 16 [-]: LOADK     R6 1         ; R6 := 1.000000
 17 [-]: FORPREP   R4 24        ; R4 -= R6; PC := 24
 18 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 19 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["node"]
 20 [-]: EQ        0 R8 R3      ; if R8 ~= R3 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADBOOL  R8 0 0       ; R8 := false
 23 [-]: RETURN    R8 2         ; return R8
 24 [-]: FORLOOP   R4 18        ; R4 += R6; if R4 <= R5 then begin PC := 18; R7 := R4 end
 25 [-]: SELF      R8 R1 K5     ; R9 := R1; R8 := R1[0x8b363264]
 26 [-]: MOVE      R10 R3       ; R10 := R3
 27 [-]: CALL      R8 3 1       ; R8(R9,R10)
 28 [-]: GETGLOBAL R8 K6        ; R8 := 0x76ea806b
 29 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0x524772b5]
 30 [-]: LOADK     R10 0        ; R10 := 0.000000
 31 [-]: CALL      R8 3 1       ; R8(R9,R10)
 32 [-]: LOADBOOL  R8 1 0       ; R8 := true
 33 [-]: RETURN    R8 2         ; return R8
 34 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 2459
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x9ba7909f
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xbcfb64ab]
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x0032441c
  4 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  6 [-]: EQ        0 R0 K4      ; if R0 ~= nil then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: GETGLOBAL R3 K5        ; R3 := _T
  9 [-]: GETTABLE  R0 R3 K6     ; R0 := R3["curTransmission"]
 10 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 11 [-]: MOVE      R4 R0        ; R4 := R0
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: TEST      R3 1         ; if R3 then PC := 77
 14 [-]: JMP       77           ; PC := 77
 15 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 16 [-]: MOVE      R4 R2        ; R4 := R2
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: TEST      R3 1         ; if R3 then PC := 77
 19 [-]: JMP       77           ; PC := 77
 20 [-]: GETGLOBAL R3 K5        ; R3 := _T
 21 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["curTransmission"]
 22 [-]: EQ        1 R3 R0      ; if R3 == R0 then PC := 33
 23 [-]: JMP       33           ; PC := 33
 24 [-]: TEST      R1 0         ; if not R1 then PC := 38
 25 [-]: JMP       38           ; PC := 38
 26 [-]: GETGLOBAL R3 K5        ; R3 := _T
 27 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["curTransmission"]
 28 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xf2deaf69]
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 31 [-]: TEST      R3 0         ; if not R3 then PC := 38
 32 [-]: JMP       38           ; PC := 38
 33 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0xe4162eed]
 34 [-]: LOADK     R5 K10       ; R5 := "QueueClose"
 35 [-]: LOADK     R6 K11       ; R6 := ""
 36 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 37 [-]: JMP       77           ; PC := 77
 38 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 39 [-]: GETGLOBAL R4 K5        ; R4 := _T
 40 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["QueuedTransmissions"]
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: TEST      R3 1         ; if R3 then PC := 77
 43 [-]: JMP       77           ; PC := 77
 44 [-]: LOADK     R3 1         ; R3 := 1.000000
 45 [-]: GETGLOBAL R4 K5        ; R4 := _T
 46 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["QueuedTransmissions"]
 47 [-]: LEN       R4 R4        ; R4 := # R4
 48 [-]: LE        0 R3 R4      ; if R3 > R4 then PC := 77
 49 [-]: JMP       77           ; PC := 77
 50 [-]: GETGLOBAL R4 K5        ; R4 := _T
 51 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["QueuedTransmissions"]
 52 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 53 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["Transmission"]
 54 [-]: EQ        1 R4 R0      ; if R4 == R0 then PC := 67
 55 [-]: JMP       67           ; PC := 67
 56 [-]: TEST      R1 0         ; if not R1 then PC := 75
 57 [-]: JMP       75           ; PC := 75
 58 [-]: GETGLOBAL R4 K5        ; R4 := _T
 59 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["QueuedTransmissions"]
 60 [-]: GETTABLE  R4 R4 R3     ; R4 := R4[R3]
 61 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["Transmission"]
 62 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xf2deaf69]
 63 [-]: MOVE      R6 R0        ; R6 := R0
 64 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 65 [-]: TEST      R4 0         ; if not R4 then PC := 75
 66 [-]: JMP       75           ; PC := 75
 67 [-]: GETGLOBAL R4 K14       ; R4 := 0x33bdd652
 68 [-]: GETTABLE  R4 R4 K15    ; R82 := R4[0x9c1f3b5a]
 69 [-]: GETGLOBAL R5 K5        ; R5 := _T
 70 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["QueuedTransmissions"]
 71 [-]: MOVE      R6 R3        ; R6 := R3
 72 [-]: CALL      R4 3 1       ; R4(R5,R6)
 73 [-]: JMP       77           ; PC := 77
 74 [-]: JMP       45           ; PC := 45
 75 [-]: ADD       R3 R3 K16    ; R3 := R3 + 1.000000
 76 [-]: JMP       45           ; PC := 45
 77 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 2485
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 2489
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["QueuedTransmissions"]
  3 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: GETGLOBAL R2 K0        ; R2 := _T
  6 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  7 [-]: SETTABLE  R2 K1 R3     ; R2["QueuedTransmissions"] := R3
  8 [-]: GETGLOBAL R2 K3        ; R2 := 0x3d106989
  9 [-]: LOADK     R3 K4        ; R3 := "Queuing new transmission: "
 10 [-]: SELF      R4 R0 K5     ; R5 := R0; R4 := R0[0xe223e2b1]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 13 [-]: CALL      R2 2 1       ; R2(R3)
 14 [-]: GETGLOBAL R2 K6        ; R2 := 0x6c97a788
 15 [-]: GETTABLE  R2 R2 K7     ; R82 := R2[0xe368acc9]
 16 [-]: MOVE      R3 R0        ; R3 := R0
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["mQueueDump"]
 19 [-]: TEST      R3 0         ; if not R3 then PC := 29
 20 [-]: JMP       29           ; PC := 29
 21 [-]: GETGLOBAL R3 K3        ; R3 := 0x3d106989
 22 [-]: LOADK     R4 K9        ; R4 := "Dumping queued transmissions and interrupting current one"
 23 [-]: CALL      R3 2 1       ; R3(R4)
 24 [-]: GETUPVAL  R3 U0        ; R3 := U0
 25 [-]: CALL      R3 1 1       ; R3()
 26 [-]: GETGLOBAL R3 K0        ; R3 := _T
 27 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 28 [-]: SETTABLE  R3 K1 R4     ; R3["QueuedTransmissions"] := R4
 29 [-]: GETGLOBAL R3 K10       ; R3 := 0x33bdd652
 30 [-]: GETTABLE  R3 R3 K11    ; R82 := R3[0x23d5322f]
 31 [-]: GETGLOBAL R4 K0        ; R4 := _T
 32 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["QueuedTransmissions"]
 33 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 34 [-]: SETTABLE  R5 K12 R0    ; R5["Transmission"] := R0
 35 [-]: SETTABLE  R5 K13 R1    ; R5["SpeakerData"] := R1
 36 [-]: CALL      R3 3 1       ; R3(R4,R5)
 37 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 2506
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 2510
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CALL      R2 3 1       ; R2(R3,R4)
 11 [-]: GETGLOBAL R2 K1        ; R2 := 0x9ba7909f
 12 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xbcfb64ab]
 13 [-]: GETGLOBAL R4 K3        ; R4 := 0x0032441c
 14 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["UIMovie_TransmissionMovie"]
 15 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 16 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 0         ; if not R3 then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETGLOBAL R3 K1        ; R3 := 0x9ba7909f
 22 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x6dd7aa66]
 23 [-]: GETGLOBAL R5 K3        ; R5 := 0x0032441c
 24 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["UIMovie_TransmissionMovie"]
 25 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 26 [-]: MOVE      R2 R3        ; R2 := R3
 27 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 2524
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 2528
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x5374b92e]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
  4 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: TEST      R0 0         ; if not R0 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: LOADBOOL  R0 1 0       ; R0 := true
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: LOADBOOL  R0 0 0       ; R0 := false
 11 [-]: RETURN    R0 2         ; return R0
 12 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 2535
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R0 0         ; R0 := 0.000000
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x25d99d89
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1[0xa59dbd63]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0xa94df70b
 11 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x18a82453]
 12 [-]: MOVE      R5 R2        ; R5 := R2
 13 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 14 [-]: MOVE      R0 R3        ; R0 := R3
 15 [-]: RETURN    R0 2         ; return R0
 16 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 2547
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["HasCompletedVorsPrize"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: LOADBOOL  R0 1 0       ; R0 := true
  6 [-]: RETURN    R0 2         ; return R0
  7 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x83f4e77c
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETGLOBAL R0 K0        ; R0 := _T
 13 [-]: SETTABLE  R0 K1 K4     ; R0["HasCompletedVorsPrize"] := true
 14 [-]: LOADBOOL  R0 1 0       ; R0 := true
 15 [-]: RETURN    R0 2         ; return R0
 16 [-]: GETGLOBAL R0 K5        ; R0 := 0x7ed0a956
 17 [-]: LOADK     R1 K6        ; R1 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0x7ed0a956
 20 [-]: LOADK     R2 K7        ; R2 := "/Lotus/Types/Keys/InfestedIntroQuest/InfestedIntroQuestKeyChain"
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 23 [-]: GETGLOBAL R3 K8        ; R3 := 0x25d99d89
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: TEST      R2 1         ; if R2 then PC := 62
 26 [-]: JMP       62           ; PC := 62
 27 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 28 [-]: GETGLOBAL R3 K8        ; R3 := 0x25d99d89
 29 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x25a6e75e]
 30 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 31 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 32 [-]: TEST      R2 1         ; if R2 then PC := 62
 33 [-]: JMP       62           ; PC := 62
 34 [-]: GETGLOBAL R2 K10       ; R2 := 0xcfc01047
 35 [-]: GETGLOBAL R3 K8        ; R3 := 0x25d99d89
 36 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x25a6e75e]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0xe9768ed0]
 39 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 40 [-]: CALL      R2 0 4       ; R2,R3,R4 := R2(R3,...)
 41 [-]: JMP       60           ; PC := 60
 42 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 43 [-]: MOVE      R8 R6        ; R8 := R6
 44 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 45 [-]: TEST      R7 1         ; if R7 then PC := 60
 46 [-]: JMP       60           ; PC := 60
 47 [-]: GETTABLE  R7 R6 K12    ; R7 := R6["mItemType"]
 48 [-]: EQ        1 R7 R1      ; if R7 == R1 then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: GETTABLE  R7 R6 K12    ; R7 := R6["mItemType"]
 51 [-]: EQ        0 R7 R0      ; if R7 ~= R0 then PC := 60
 52 [-]: JMP       60           ; PC := 60
 53 [-]: GETTABLE  R7 R6 K13    ; R7 := R6["mCompleted"]
 54 [-]: TEST      R7 0         ; if not R7 then PC := 60
 55 [-]: JMP       60           ; PC := 60
 56 [-]: GETGLOBAL R7 K0        ; R7 := _T
 57 [-]: SETTABLE  R7 K1 K4     ; R7["HasCompletedVorsPrize"] := true
 58 [-]: LOADBOOL  R7 1 0       ; R7 := true
 59 [-]: RETURN    R7 2         ; return R7
 60 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 42; R4 := R5 end
 61 [-]: JMP       42           ; PC := 42
 62 [-]: LOADBOOL  R7 0 0       ; R7 := false
 63 [-]: RETURN    R7 2         ; return R7
 64 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 2574
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 2578
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x83f4e77c
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADBOOL  R1 1 0       ; R1 := true
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x7ed0a956
  9 [-]: LOADK     R2 K3        ; R2 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: CALL      R2 1 2       ; R2 := R2()
 15 [-]: RETURN    R2 2         ; return R2
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x25d99d89
 17 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 18 [-]: MOVE      R4 R2        ; R4 := R2
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 0         ; if not R3 then PC := 34
 21 [-]: JMP       34           ; PC := 34
 22 [-]: GETGLOBAL R3 K5        ; R3 := 0x76ea806b
 23 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x3f3ae64c]
 24 [-]: LOADK     R5 0         ; R5 := 0.000000
 25 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 26 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 27 [-]: MOVE      R5 R3        ; R5 := R3
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: TEST      R4 1         ; if R4 then PC := 34
 30 [-]: JMP       34           ; PC := 34
 31 [-]: SELF      R4 R3 K7     ; R5 := R3; R4 := R3[0x80563238]
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: MOVE      R2 R4        ; R2 := R4
 34 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 35 [-]: MOVE      R5 R0        ; R5 := R0
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: TEST      R4 0         ; if not R4 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: LOADBOOL  R4 0 0       ; R4 := false
 40 [-]: RETURN    R4 2         ; return R4
 41 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 42 [-]: MOVE      R5 R2        ; R5 := R2
 43 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 44 [-]: TEST      R4 1         ; if R4 then PC := 72
 45 [-]: JMP       72           ; PC := 72
 46 [-]: SELF      R4 R2 K8     ; R5 := R2; R4 := R2[0x25a6e75e]
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 49 [-]: MOVE      R6 R4        ; R6 := R4
 50 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 51 [-]: TEST      R5 1         ; if R5 then PC := 72
 52 [-]: JMP       72           ; PC := 72
 53 [-]: SELF      R5 R4 K9     ; R6 := R4; R5 := R4[0xe9768ed0]
 54 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 55 [-]: LOADK     R6 1         ; R6 := 1.000000
 56 [-]: LEN       R7 R5        ; R7 := # R5
 57 [-]: LOADK     R8 1         ; R8 := 1.000000
 58 [-]: FORPREP   R6 71        ; R6 -= R8; PC := 71
 59 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
 60 [-]: GETTABLE  R11 R5 R9    ; R11 := R5[R9]
 61 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 62 [-]: TEST      R10 1        ; if R10 then PC := 71
 63 [-]: JMP       71           ; PC := 71
 64 [-]: GETTABLE  R10 R5 R9    ; R10 := R5[R9]
 65 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["mItemType"]
 66 [-]: EQ        0 R0 R10     ; if R0 ~= R10 then PC := 71
 67 [-]: JMP       71           ; PC := 71
 68 [-]: GETTABLE  R10 R5 R9    ; R10 := R5[R9]
 69 [-]: GETTABLE  R10 R10 K11  ; R10 := R10["mCompleted"]
 70 [-]: RETURN    R10 2        ; return R10
 71 [-]: FORLOOP   R6 59        ; R6 += R8; if R6 <= R7 then begin PC := 59; R9 := R6 end
 72 [-]: LOADBOOL  R10 0 0      ; R10 := false
 73 [-]: RETURN    R10 2        ; return R10
 74 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 2616
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 2622
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x66edf04f]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x64fb1586
  4 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0[0xed4e0128]
  5 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  6 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
  7 [-]: LOADK     R3 K4        ; R3 := "/Lotus/Types/"
  8 [-]: LOADK     R4 K5        ; R4 := "/Lotus/StoreItems/Types/"
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: GETGLOBAL R2 K6        ; R2 := 0xb009bbc6
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 14 [-]: MOVE      R4 R2        ; R4 := R2
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 26
 17 [-]: JMP       26           ; PC := 26
 18 [-]: GETGLOBAL R3 K8        ; R3 := 0x603636ad
 19 [-]: GETGLOBAL R4 K2        ; R4 := 0x64fb1586
 20 [-]: SELF      R5 R2 K9     ; R6 := R2; R5 := R2[0xd3a9d01f]
 21 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 22 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 23 [-]: LOADNIL   R5 R5        ; R5 := nil
 24 [-]: TAILCALL  R3 3 0       ; R3,... := R3(R4,R5)
 25 [-]: RETURN    R3 0         ; return R3,...
 26 [-]: LOADK     R3 K10       ; R3 := ""
 27 [-]: RETURN    R3 2         ; return R3
 28 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 2632
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7ed0a956
  2 [-]: LOADK     R1 K1        ; R1 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: MOVE      R2 R0        ; R2 := R0
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 14
 14 [-]: LOADBOOL  R1 1 0       ; R1 := true
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 2637
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 2641
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADBOOL  R0 0 0       ; R0 := false
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0xe7f2b02f
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x565be9ee]
  5 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
  6 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  7 [-]: TEST      R1 1         ; if R1 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETGLOBAL R1 K1        ; R1 := 0xe7f2b02f
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xb321d806]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: CALL      R1 1 2       ; R1 := R1()
 16 [-]: MOVE      R0 R1        ; R0 := R1
 17 [-]: JMP       37           ; PC := 37
 18 [-]: GETGLOBAL R1 K1        ; R1 := 0xe7f2b02f
 19 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x6d0aa187]
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: LOADK     R2 1         ; R2 := 1.000000
 22 [-]: LEN       R3 R1        ; R3 := # R1
 23 [-]: LOADK     R4 1         ; R4 := 1.000000
 24 [-]: FORPREP   R2 36        ; R2 -= R4; PC := 36
 25 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 26 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["isHost"]
 27 [-]: TEST      R6 0         ; if not R6 then PC := 36
 28 [-]: JMP       36           ; PC := 36
 29 [-]: GETGLOBAL R6 K6        ; R6 := cjson
 30 [-]: GETTABLE  R6 R6 K7     ; R82 := R6[0x7ab914d8]
 31 [-]: GETTABLE  R7 R1 R5     ; R7 := R1[R5]
 32 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["loadout"]
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: GETTABLE  R0 R6 K9     ; R0 := R6["PostNewWar"]
 35 [-]: JMP       37           ; PC := 37
 36 [-]: FORLOOP   R2 25        ; R2 += R4; if R2 <= R3 then begin PC := 25; R5 := R2 end
 37 [-]: EQ        1 R0 K10     ; if R0 == nil then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: EQ        0 R0 K11     ; if R0 ~= false then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 42
 42 [-]: LOADBOOL  R7 1 0       ; R7 := true
 43 [-]: RETURN    R7 2         ; return R7
 44 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 2661
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 2665
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 3       ; R0,R1 := R0(R1)
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  5 [-]: MOVE      R3 R0        ; R3 := R0
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETUPVAL  R2 U1        ; R2 := U1
 10 [-]: EQ        0 R0 R2      ; if R0 ~= R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 13
 13 [-]: LOADBOOL  R2 1 0       ; R2 := true
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 2671
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 2675
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x64fb1586
  5 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["location"]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K2        ; R2 := POST_NEW_WAR_MISSIONS
  8 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
  9 [-]: TEST      R2 1         ; if R2 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: CALL      R3 1 2       ; R3 := R3()
 14 [-]: TEST      R3 0         ; if not R3 then PC := 39
 15 [-]: JMP       39           ; PC := 39
 16 [-]: GETUPVAL  R3 U1        ; R3 := U1
 17 [-]: CALL      R3 1 2       ; R3 := R3()
 18 [-]: TEST      R3 0         ; if not R3 then PC := 39
 19 [-]: JMP       39           ; PC := 39
 20 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 21 [-]: GETTABLE  R4 R2 K4     ; R4 := R2["levelOverride"]
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: TEST      R3 1         ; if R3 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: GETTABLE  R3 R2 K4     ; R3 := R2["levelOverride"]
 26 [-]: SETTABLE  R0 K4 R3     ; R0["levelOverride"] := R3
 27 [-]: GETTABLE  R3 R2 K5     ; R3 := R2["goalTag"]
 28 [-]: TEST      R3 0         ; if not R3 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: GETTABLE  R3 R2 K5     ; R3 := R2["goalTag"]
 31 [-]: SETTABLE  R0 K5 R3     ; R0["goalTag"] := R3
 32 [-]: GETTABLE  R3 R2 K6     ; R3 := R2["extraEnemySpec"]
 33 [-]: TEST      R3 0         ; if not R3 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETGLOBAL R3 K7        ; R3 := 0xb009bbc6
 36 [-]: GETTABLE  R4 R2 K6     ; R4 := R2["extraEnemySpec"]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: SETTABLE  R0 K6 R3     ; R0["extraEnemySpec"] := R3
 39 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 2700
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 2704
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 2       ; R2 := R2()
  3 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2[0x228a5581]
  4 [-]: MOVE      R4 R0        ; R4 := R0
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  7 [-]: TEST      R0 1         ; if R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R2 K1        ; R2 := POST_NEW_WAR_MISSIONS
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0x64fb1586
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 15 [-]: TEST      R2 0         ; if not R2 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETUPVAL  R3 U1        ; R3 := U1
 18 [-]: CALL      R3 1 2       ; R3 := R3()
 19 [-]: TEST      R3 1         ; if R3 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: GETTABLE  R3 R2 K3     ; R3 := R2["streamingOffset"]
 23 [-]: TEST      R3 0         ; if not R3 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: SELF      R3 R1 K4     ; R4 := R1; R3 := R1[0x691a3b2d]
 26 [-]: GETTABLE  R5 R2 K3     ; R5 := R2["streamingOffset"]
 27 [-]: GETGLOBAL R6 K5        ; R6 := 0x00046924
 28 [-]: CALL      R6 1 0       ; R6,... := R6()
 29 [-]: CALL      R3 0 1       ; R3(R4,...)
 30 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 2723
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R1 0         ; if not R1 then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETGLOBAL R2 K0        ; R2 := POST_NEW_WAR_MISSIONS
  4 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
  5 [-]: TEST      R2 1         ; if R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: CALL      R2 1 2       ; R2 := R2()
 10 [-]: TEST      R2 0         ; if not R2 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0[0xeaa7e8dc]
 13 [-]: LOADK     R4 K2        ; R4 := "Alt"
 14 [-]: CALL      R2 3 1       ; R2(R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 2734
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0xc18bf6f0]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x8f89d633]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 1       ; R2(R3)
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 2741
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := POST_NEW_WAR_MISSIONS
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0x64fb1586
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
  6 [-]: TEST      R2 1         ; if R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: GETTABLE  R3 R3 K2     ; R82 := R3[0x06d055f9]
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: CALL      R4 1 2       ; R4 := R4()
 13 [-]: GETGLOBAL R5 K3        ; R5 := PLAINS_ELO_POST_NEW_WAR_OFFSET
 14 [-]: LOADK     R6 0         ; R6 := 0.000000
 15 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 16 [-]: ADD       R3 R1 R3     ; R3 := R1 + R3
 17 [-]: RETURN    R3 2         ; return R3
 18 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 2752
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  5 [-]: RETURN    R2 0         ; return R2,...
  6 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 2756
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETGLOBAL R2 K0        ; R2 := PLAINS_ELO_POST_NEW_WAR_OFFSET
  4 [-]: ADD       R2 R1 R2     ; R2 := R1 + R2
  5 [-]: EQ        1 R0 R2      ; if R0 == R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 8
  8 [-]: LOADBOOL  R2 1 0       ; R2 := true
  9 [-]: RETURN    R2 2         ; return R2
 10 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 2760
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 36
  5 [-]: JMP       36           ; PC := 36
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x25a6e75e]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0xe9768ed0]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0x8e7c3b5e]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K5        ; R3 := 0xcfc01047
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 16 [-]: JMP       34           ; PC := 34
 17 [-]: GETTABLE  R8 R7 K6     ; R8 := R7["mItemType"]
 18 [-]: GETUPVAL  R9 U0        ; R9 := U0
 19 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 34
 20 [-]: JMP       34           ; PC := 34
 21 [-]: GETTABLE  R8 R7 K7     ; R8 := R7["mCompleted"]
 22 [-]: TEST      R8 1         ; if R8 then PC := 33
 23 [-]: JMP       33           ; PC := 33
 24 [-]: GETUPVAL  R8 U0        ; R8 := U0
 25 [-]: EQ        0 R2 R8      ; if R2 ~= R8 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETTABLE  R8 R7 K8     ; R8 := R7["mProgress"]
 28 [-]: LEN       R8 R8        ; R8 := # R8
 29 [-]: LT        1 K9 R8      ; if 0.000000 < R8 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: LOADBOOL  R8 0 1       ; R8 := false; PC := 32
 32 [-]: LOADBOOL  R8 1 0       ; R8 := true
 33 [-]: RETURN    R8 2         ; return R8
 34 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 17; R5 := R6 end
 35 [-]: JMP       17           ; PC := 17
 36 [-]: LOADBOOL  R8 0 0       ; R8 := false
 37 [-]: RETURN    R8 2         ; return R8
 38 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 2774
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: TAILCALL  R0 2 0       ; R0,... := R0(R1)
  4 [-]: RETURN    R0 0         ; return R0,...
  5 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 2778
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 2782
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["CachedStarChartProgress"]
  3 [-]: TEST      R0 0         ; if not R0 then PC := 24
  4 [-]: JMP       24           ; PC := 24
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["CachedStarChartProgress"]
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["numCompleted"]
  8 [-]: GETGLOBAL R1 K0        ; R1 := _T
  9 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedStarChartProgress"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["totalMissions"]
 11 [-]: GETGLOBAL R2 K0        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["CachedStarChartProgress"]
 13 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["missingNodes"]
 14 [-]: GETGLOBAL R3 K0        ; R3 := _T
 15 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CachedStarChartProgress"]
 16 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["numHardCompleted"]
 17 [-]: GETGLOBAL R4 K0        ; R4 := _T
 18 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["CachedStarChartProgress"]
 19 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["missionXp"]
 20 [-]: GETGLOBAL R5 K0        ; R5 := _T
 21 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["CachedStarChartProgress"]
 22 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["hardMissionXp"]
 23 [-]: RETURN    R0 7         ; return R0,R1,R2,R3,R4,R5
 24 [-]: LOADNIL   R0 R0        ; R0 := nil
 25 [-]: GETGLOBAL R1 K8        ; R1 := 0x7b998233
 26 [-]: GETGLOBAL R2 K9        ; R2 := 0x25d99d89
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: TEST      R1 1         ; if R1 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETGLOBAL R1 K9        ; R1 := 0x25d99d89
 31 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xb407484d]
 32 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 33 [-]: MOVE      R0 R1        ; R0 := R1
 34 [-]: JMP       61           ; PC := 61
 35 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 36 [-]: MOVE      R0 R1        ; R0 := R1
 37 [-]: GETGLOBAL R1 K8        ; R1 := 0x7b998233
 38 [-]: GETGLOBAL R2 K11       ; R2 := 0x76ea806b
 39 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 40 [-]: TEST      R1 1         ; if R1 then PC := 61
 41 [-]: JMP       61           ; PC := 61
 42 [-]: GETGLOBAL R1 K11       ; R1 := 0x76ea806b
 43 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0x3f3ae64c]
 44 [-]: LOADK     R3 0         ; R3 := 0.000000
 45 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 46 [-]: GETGLOBAL R2 K8        ; R2 := 0x7b998233
 47 [-]: MOVE      R3 R1        ; R3 := R1
 48 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 49 [-]: TEST      R2 1         ; if R2 then PC := 61
 50 [-]: JMP       61           ; PC := 61
 51 [-]: SELF      R2 R1 K13    ; R3 := R1; R2 := R1[0x80563238]
 52 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 53 [-]: GETGLOBAL R3 K8        ; R3 := 0x7b998233
 54 [-]: MOVE      R4 R2        ; R4 := R2
 55 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 56 [-]: TEST      R3 1         ; if R3 then PC := 61
 57 [-]: JMP       61           ; PC := 61
 58 [-]: SELF      R3 R2 K10    ; R4 := R2; R3 := R2[0xb407484d]
 59 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 60 [-]: MOVE      R0 R3        ; R0 := R3
 61 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 62 [-]: LOADK     R4 0         ; R4 := 0.000000
 63 [-]: LOADBOOL  R5 0 0       ; R5 := false
 64 [-]: GETGLOBAL R6 K14       ; R6 := 0xcfc01047
 65 [-]: MOVE      R7 R0        ; R7 := R0
 66 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 67 [-]: JMP       78           ; PC := 78
 68 [-]: GETTABLE  R11 R10 K15  ; R11 := R10["mTag"]
 69 [-]: SELF      R11 R11 K16  ; R12 := R11; R11 := R11[0x56c01834]
 70 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 71 [-]: TEST      R11 0        ; if not R11 then PC := 78
 72 [-]: JMP       78           ; PC := 78
 73 [-]: GETGLOBAL R11 K17      ; R11 := 0x64fb1586
 74 [-]: GETTABLE  R12 R10 K15  ; R12 := R10["mTag"]
 75 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 76 [-]: GETTABLE  R12 R10 K18  ; R12 := R10["mTier"]
 77 [-]: SETTABLE  R3 R11 R12   ; R3[R11] := R12
 78 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 68; R8 := R9 end
 79 [-]: JMP       68           ; PC := 68
 80 [-]: GETUPVAL  R11 U0       ; R11 := U0
 81 [-]: CALL      R11 1 2      ; R11 := R11()
 82 [-]: SELF      R12 R11 K19  ; R13 := R11; R12 := R11[0xd13b47be]
 83 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 84 [-]: LOADK     R13 0        ; R13 := 0.000000
 85 [-]: LOADK     R14 0        ; R14 := 0.000000
 86 [-]: NEWTABLE  R15 0 0      ; R15 := {}
 87 [-]: GETGLOBAL R16 K14      ; R16 := 0xcfc01047
 88 [-]: MOVE      R17 R12      ; R17 := R12
 89 [-]: CALL      R16 2 4      ; R16,R17,R18 := R16(R17)
 90 [-]: JMP       130          ; PC := 130
 91 [-]: GETTABLE  R21 R20 K20  ; R21 := R20["name"]
 92 [-]: SELF      R22 R20 K21  ; R23 := R20; R22 := R20[0x7c303c3d]
 93 [-]: LOADBOOL  R24 0 0      ; R24 := false
 94 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
 95 [-]: TEST      R22 0        ; if not R22 then PC := 130
 96 [-]: JMP       130          ; PC := 130
 97 [-]: GETGLOBAL R22 K22      ; R22 := APARTMENT_NODE_TAG
 98 [-]: EQ        1 R21 R22    ; if R21 == R22 then PC := 130
 99 [-]: JMP       130          ; PC := 130
100 [-]: ADD       R13 R13 K23  ; R13 := R13 + 1.000000
101 [-]: GETGLOBAL R22 K17      ; R22 := 0x64fb1586
102 [-]: MOVE      R23 R21      ; R23 := R21
103 [-]: CALL      R22 2 2      ; R22 := R22(R23)
104 [-]: TEST      R5 1         ; if R5 then PC := 109
105 [-]: JMP       109          ; PC := 109
106 [-]: GETTABLE  R23 R3 R22   ; R23 := R3[R22]
107 [-]: EQ        1 R23 K24    ; if R23 == nil then PC := 117
108 [-]: JMP       117          ; PC := 117
109 [-]: ADD       R14 R14 K23  ; R14 := R14 + 1.000000
110 [-]: TEST      R5 1         ; if R5 then PC := 115
111 [-]: JMP       115          ; PC := 115
112 [-]: GETTABLE  R23 R3 R22   ; R23 := R3[R22]
113 [-]: LT        0 K25 R23    ; if 0.000000 >= R23 then PC := 130
114 [-]: JMP       130          ; PC := 130
115 [-]: ADD       R4 R4 K23    ; R4 := R4 + 1.000000
116 [-]: JMP       130          ; PC := 130
117 [-]: GETGLOBAL R23 K26      ; R23 := 0x33bdd652
118 [-]: GETTABLE  R23 R23 K27  ; R82 := R23[0x23d5322f]
119 [-]: MOVE      R24 R15      ; R24 := R15
120 [-]: NEWTABLE  R25 0 2      ; R25 := {}
121 [-]: GETGLOBAL R26 K28      ; R26 := 0x0469f296
122 [-]: GETTABLE  R27 R20 K20  ; R27 := R20["name"]
123 [-]: CALL      R26 2 2      ; R26 := R26(R27)
124 [-]: SETTABLE  R25 K20 R26  ; R25["name"] := R26
125 [-]: GETGLOBAL R26 K28      ; R26 := 0x0469f296
126 [-]: GETTABLE  R27 R20 K29  ; R27 := R20["locTag"]
127 [-]: CALL      R26 2 2      ; R26 := R26(R27)
128 [-]: SETTABLE  R25 K29 R26  ; R25["locTag"] := R26
129 [-]: CALL      R23 3 1      ; R23(R24,R25)
130 [-]: TFORLOOP  R16 2        ; R19,R20 :=  R16(R17,R18); if R19 ~= nil then begin PC = 91; R18 := R19 end
131 [-]: JMP       91           ; PC := 91
132 [-]: SELF      R23 R11 K30  ; R24 := R11; R23 := R11[0x5ad726d0]
133 [-]: MOVE      R25 R0       ; R25 := R0
134 [-]: LOADK     R26 0        ; R26 := 0.000000
135 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
136 [-]: SELF      R24 R11 K30  ; R25 := R11; R24 := R11[0x5ad726d0]
137 [-]: MOVE      R26 R0       ; R26 := R0
138 [-]: LOADK     R27 1        ; R27 := 1.000000
139 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
140 [-]: GETGLOBAL R25 K0       ; R25 := _T
141 [-]: NEWTABLE  R26 0 6      ; R26 := {}
142 [-]: SETTABLE  R26 K2 R14   ; R26["numCompleted"] := R14
143 [-]: SETTABLE  R26 K3 R13   ; R26["totalMissions"] := R13
144 [-]: GETUPVAL  R27 U1       ; R27 := U1
145 [-]: GETTABLE  R27 R27 K31  ; R82 := R27[0xae97c4f5]
146 [-]: MOVE      R28 R15      ; R28 := R15
147 [-]: CALL      R27 2 2      ; R27 := R27(R28)
148 [-]: SETTABLE  R26 K4 R27   ; R26["missingNodes"] := R27
149 [-]: SETTABLE  R26 K5 R4    ; R26["numHardCompleted"] := R4
150 [-]: SETTABLE  R26 K6 R23   ; R26["missionXp"] := R23
151 [-]: SETTABLE  R26 K7 R24   ; R26["hardMissionXp"] := R24
152 [-]: SETTABLE  R25 K1 R26   ; R25["CachedStarChartProgress"] := R26
153 [-]: MOVE      R25 R14      ; R25 := R14
154 [-]: MOVE      R26 R13      ; R26 := R13
155 [-]: MOVE      R27 R15      ; R27 := R15
156 [-]: MOVE      R28 R4       ; R28 := R4
157 [-]: MOVE      R29 R23      ; R29 := R23
158 [-]: MOVE      R30 R24      ; R30 := R24
159 [-]: RETURN    R25 7        ; return R25,R26,R27,R28,R29,R30
160 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 2854
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 2858
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 6       ; R0,R1,R2,R3,R4 := R0()
  3 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: LOADBOOL  R5 0 0       ; R5 := false
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 8
  8 [-]: LOADBOOL  R5 1 0       ; R5 := true
  9 [-]: MOVE      R6 R5        ; R6 := R5
 10 [-]: MOVE      R7 R2        ; R7 := R2
 11 [-]: RETURN    R6 3         ; return R6,R7
 12 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 2864
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 2868
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x25d99d89
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADNIL   R2 R2        ; R2 := nil
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1[0x69727e0b]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETTABLE  R3 R2 K3     ; R3 := R2["mFlashSales"]
 12 [-]: GETGLOBAL R4 K4        ; R4 := _T
 13 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["CachedFlashSales"]
 14 [-]: EQ        0 R4 K6      ; if R4 ~= nil then PC := 36
 15 [-]: JMP       36           ; PC := 36
 16 [-]: GETGLOBAL R4 K4        ; R4 := _T
 17 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 18 [-]: SETTABLE  R4 K5 R5     ; R4["CachedFlashSales"] := R5
 19 [-]: GETGLOBAL R4 K7        ; R4 := 0xc8802016
 20 [-]: MOVE      R5 R3        ; R5 := R3
 21 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 22 [-]: JMP       34           ; PC := 34
 23 [-]: GETGLOBAL R9 K1        ; R9 := 0x7b998233
 24 [-]: GETTABLE  R10 R8 K8    ; R10 := R8["mTypeName"]
 25 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 26 [-]: TEST      R9 1         ; if R9 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R9 K4        ; R9 := _T
 29 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["CachedFlashSales"]
 30 [-]: GETTABLE  R10 R8 K8    ; R10 := R8["mTypeName"]
 31 [-]: SELF      R10 R10 K9   ; R11 := R10; R10 := R10[0xed4e0128]
 32 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 33 [-]: SETTABLE  R9 R10 R8    ; R9[R10] := R8
 34 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 23; R6 := R7 end
 35 [-]: JMP       23           ; PC := 23
 36 [-]: GETGLOBAL R9 K4        ; R9 := _T
 37 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["CachedFlashSales"]
 38 [-]: EQ        0 R9 K6      ; if R9 ~= nil then PC := 42
 39 [-]: JMP       42           ; PC := 42
 40 [-]: LOADNIL   R9 R9        ; R9 := nil
 41 [-]: RETURN    R9 2         ; return R9
 42 [-]: LOADNIL   R9 R9        ; R9 := nil
 43 [-]: SELF      R10 R0 K10   ; R11 := R0; R10 := R0[0x9dbbea0a]
 44 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 45 [-]: TEST      R10 0        ; if not R10 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: MOVE      R9 R0        ; R9 := R0
 48 [-]: JMP       59           ; PC := 59
 49 [-]: SELF      R10 R0 K11   ; R11 := R0; R10 := R0[0xf278f8a1]
 50 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 51 [-]: MOVE      R9 R10       ; R9 := R10
 52 [-]: GETGLOBAL R10 K1       ; R10 := 0x7b998233
 53 [-]: MOVE      R11 R9       ; R11 := R9
 54 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 55 [-]: TEST      R10 0        ; if not R10 then PC := 59
 56 [-]: JMP       59           ; PC := 59
 57 [-]: LOADNIL   R10 R10      ; R10 := nil
 58 [-]: RETURN    R10 2        ; return R10
 59 [-]: GETGLOBAL R10 K4       ; R10 := _T
 60 [-]: GETTABLE  R10 R10 K5   ; R10 := R10["CachedFlashSales"]
 61 [-]: SELF      R11 R9 K9    ; R12 := R9; R11 := R9[0xed4e0128]
 62 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 63 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
 64 [-]: GETGLOBAL R11 K1       ; R11 := 0x7b998233
 65 [-]: MOVE      R12 R10      ; R12 := R10
 66 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 67 [-]: TEST      R11 1        ; if R11 then PC := 123
 68 [-]: JMP       123          ; PC := 123
 69 [-]: GETGLOBAL R11 K7       ; R11 := 0xc8802016
 70 [-]: MOVE      R12 R3       ; R12 := R3
 71 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
 72 [-]: JMP       105          ; PC := 105
 73 [-]: GETGLOBAL R16 K1       ; R16 := 0x7b998233
 74 [-]: GETTABLE  R17 R15 K8   ; R17 := R15["mTypeName"]
 75 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 76 [-]: TEST      R16 1        ; if R16 then PC := 105
 77 [-]: JMP       105          ; PC := 105
 78 [-]: GETTABLE  R16 R15 K8   ; R16 := R15["mTypeName"]
 79 [-]: SELF      R16 R16 K9   ; R17 := R16; R16 := R16[0xed4e0128]
 80 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 81 [-]: SELF      R17 R9 K9    ; R18 := R9; R17 := R9[0xed4e0128]
 82 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 83 [-]: EQ        0 R16 R17    ; if R16 ~= R17 then PC := 105
 84 [-]: JMP       105          ; PC := 105
 85 [-]: GETGLOBAL R16 K12      ; R16 := 0x34291f5c
 86 [-]: GETTABLE  R16 R16 K13  ; R82 := R16[0x397b920f]
 87 [-]: GETTABLE  R17 R15 K14  ; R17 := R15["mStartDate"]
 88 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 89 [-]: LT        0 R16 K15    ; if R16 >= 0.000000 then PC := 105
 90 [-]: JMP       105          ; PC := 105
 91 [-]: GETGLOBAL R16 K12      ; R16 := 0x34291f5c
 92 [-]: GETTABLE  R16 R16 K13  ; R82 := R16[0x397b920f]
 93 [-]: GETTABLE  R17 R15 K16  ; R17 := R15["mEndDate"]
 94 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 95 [-]: LT        0 K15 R16    ; if 0.000000 >= R16 then PC := 105
 96 [-]: JMP       105          ; PC := 105
 97 [-]: MOVE      R10 R15      ; R10 := R15
 98 [-]: GETGLOBAL R16 K4       ; R16 := _T
 99 [-]: GETTABLE  R16 R16 K5   ; R16 := R16["CachedFlashSales"]
100 [-]: GETTABLE  R17 R15 K8   ; R17 := R15["mTypeName"]
101 [-]: SELF      R17 R17 K9   ; R18 := R17; R17 := R17[0xed4e0128]
102 [-]: CALL      R17 2 2      ; R17 := R17(R18)
103 [-]: SETTABLE  R16 R17 R10  ; R16[R17] := R10
104 [-]: JMP       107          ; PC := 107
105 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 73; R13 := R14 end
106 [-]: JMP       73           ; PC := 73
107 [-]: GETGLOBAL R16 K12      ; R16 := 0x34291f5c
108 [-]: GETTABLE  R16 R16 K13  ; R82 := R16[0x397b920f]
109 [-]: GETTABLE  R17 R10 K14  ; R17 := R10["mStartDate"]
110 [-]: CALL      R16 2 2      ; R16 := R16(R17)
111 [-]: LT        0 R16 K15    ; if R16 >= 0.000000 then PC := 123
112 [-]: JMP       123          ; PC := 123
113 [-]: GETGLOBAL R16 K12      ; R16 := 0x34291f5c
114 [-]: GETTABLE  R16 R16 K13  ; R82 := R16[0x397b920f]
115 [-]: GETTABLE  R17 R10 K16  ; R17 := R10["mEndDate"]
116 [-]: CALL      R16 2 2      ; R16 := R16(R17)
117 [-]: LT        0 K15 R16    ; if 0.000000 >= R16 then PC := 123
118 [-]: JMP       123          ; PC := 123
119 [-]: GETTABLE  R16 R10 K17  ; R16 := R10["mShowInMarket"]
120 [-]: TEST      R16 0        ; if not R16 then PC := 123
121 [-]: JMP       123          ; PC := 123
122 [-]: RETURN    R10 2        ; return R10
123 [-]: LOADNIL   R16 R16      ; R16 := nil
124 [-]: RETURN    R16 2        ; return R16
125 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 2923
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 2944
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 6
  6 [-]: LOADBOOL  R1 1 0       ; R1 := true
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 2948
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 2953
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 2         ; return R0
  2 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 2954
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LT        1 R0 R1      ; if R0 < R1 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 4
  4 [-]: LOADBOOL  R2 1 0       ; R2 := true
  5 [-]: RETURN    R2 2         ; return R2
  6 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 2955
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LT        1 R1 R0      ; if R1 < R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 4
  4 [-]: LOADBOOL  R2 1 0       ; R2 := true
  5 [-]: RETURN    R2 2         ; return R2
  6 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 2957
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: TEST      R2 1         ; if R2 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: TEST      R3 0         ; if not R3 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETUPVAL  R4 U1        ; R4 := U1
  7 [-]: TEST      R4 1         ; if R4 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: GETUPVAL  R4 U2        ; R4 := U2
 10 [-]: LOADK     R5 1         ; R5 := 1.000000
 11 [-]: LEN       R6 R0        ; R6 := # R0
 12 [-]: LOADK     R7 0         ; R7 := 0.000000
 13 [-]: LE        0 R5 R6      ; if R5 > R6 then PC := 62
 14 [-]: JMP       62           ; PC := 62
 15 [-]: GETGLOBAL R8 K0        ; R8 := 0x5bced4c4
 16 [-]: GETTABLE  R8 R8 K1     ; R82 := R8[0x55f27c30]
 17 [-]: ADD       R9 R5 R6     ; R9 := R5 + R6
 18 [-]: DIV       R9 R9 K2     ; R9 := R9 / 2.000000
 19 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 20 [-]: MOVE      R7 R8        ; R7 := R8
 21 [-]: MOVE      R8 R2        ; R8 := R2
 22 [-]: GETTABLE  R9 R0 R7     ; R9 := R0[R7]
 23 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 24 [-]: EQ        0 R1 R8      ; if R1 ~= R8 then PC := 52
 25 [-]: JMP       52           ; PC := 52
 26 [-]: NEWTABLE  R9 2 0       ; R9 := {}
 27 [-]: MOVE      R10 R7       ; R10 := R7
 28 [-]: MOVE      R11 R7       ; R11 := R7
 29 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
 30 [-]: SUB       R10 R7 K3    ; R10 := R7 - 1.000000
 31 [-]: MOVE      R11 R2       ; R11 := R2
 32 [-]: GETTABLE  R12 R0 R10   ; R12 := R0[R10]
 33 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 34 [-]: EQ        0 R1 R11     ; if R1 ~= R11 then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: MOVE      R11 R10      ; R11 := R10
 37 [-]: SUB       R10 R10 K3   ; R10 := R10 - 1.000000
 38 [-]: SETTABLE  R9 K3 R11    ; R9[1.000000] := R11
 39 [-]: JMP       31           ; PC := 31
 40 [-]: ADD       R10 R7 K3    ; R10 := R7 + 1.000000
 41 [-]: MOVE      R11 R2       ; R11 := R2
 42 [-]: GETTABLE  R12 R0 R10   ; R12 := R0[R10]
 43 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 44 [-]: EQ        0 R1 R11     ; if R1 ~= R11 then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: MOVE      R11 R10      ; R11 := R10
 47 [-]: ADD       R10 R10 K3   ; R10 := R10 + 1.000000
 48 [-]: SETTABLE  R9 K2 R11    ; R9[2.000000] := R11
 49 [-]: JMP       41           ; PC := 41
 50 [-]: RETURN    R9 2         ; return R9
 51 [-]: JMP       13           ; PC := 13
 52 [-]: MOVE      R11 R4       ; R11 := R4
 53 [-]: MOVE      R12 R1       ; R12 := R1
 54 [-]: MOVE      R13 R8       ; R13 := R8
 55 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 56 [-]: TEST      R11 0        ; if not R11 then PC := 60
 57 [-]: JMP       60           ; PC := 60
 58 [-]: SUB       R6 R7 K3     ; R6 := R7 - 1.000000
 59 [-]: JMP       13           ; PC := 13
 60 [-]: ADD       R5 R7 K3     ; R5 := R7 + 1.000000
 61 [-]: JMP       13           ; PC := 13
 62 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 2989
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #174:
;
; Name:            
; Defined at line: 2993
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: TEST      R0 0         ; if not R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["type"]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: LOADNIL   R1 R1        ; R1 := nil
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #175:
;
; Name:            
; Defined at line: 3000
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R2 1         ; if R2 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0[0xfe9eb1a5]
  5 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  6 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 18
  8 [-]: JMP       18           ; PC := 18
  9 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0x170c5cfa]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: MOVE      R6 R3        ; R6 := R3
 14 [-]: GETUPVAL  R7 U2        ; R7 := U2
 15 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 16 [-]: NOT       R5 R4        ; R5 := not R4
 17 [-]: RETURN    R5 2         ; return R5
 18 [-]: LOADBOOL  R5 1 0       ; R5 := true
 19 [-]: RETURN    R5 2         ; return R5
 20 [-]: RETURN    R0 1         ; return 


; Function #176:
;
; Name:            
; Defined at line: 3010
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
  6 [-]: RETURN    R3 0         ; return R3,...
  7 [-]: RETURN    R0 1         ; return 


; Function #177:
;
; Name:            
; Defined at line: 3014
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #178:
;
; Name:            
; Defined at line: 3018
; #Upvalues:       7
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  47

  1 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
  2 [-]: MOVE      R7 R0        ; R7 := R0
  3 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  4 [-]: TEST      R6 0         ; if not R6 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: LOADK     R6 0         ; R6 := 0.000000
  7 [-]: LOADK     R7 0         ; R7 := 0.000000
  8 [-]: RETURN    R6 3         ; return R6,R7
  9 [-]: LOADNIL   R6 R9        ; R6 := R7 := R8 := R9 := nil
 10 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 11 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 34
 12 [-]: JMP       34           ; PC := 34
 13 [-]: LOADK     R11 0        ; R11 := 0.000000
 14 [-]: LOADK     R12 3        ; R12 := 3.000000
 15 [-]: LOADK     R13 1        ; R13 := 1.000000
 16 [-]: FORPREP   R11 32       ; R11 -= R13; PC := 32
 17 [-]: SELF      R15 R0 K3    ; R16 := R0; R15 := R0[0x4e485a6f]
 18 [-]: MOVE      R17 R14      ; R17 := R14
 19 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 20 [-]: SELF      R16 R0 K4    ; R17 := R0; R16 := R0[0x2ce719d4]
 21 [-]: MOVE      R18 R14      ; R18 := R14
 22 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 23 [-]: LT        1 K5 R15     ; if 0.000000 < R15 then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: LT        1 K5 R16     ; if 0.000000 < R16 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: EQ        0 R6 K1      ; if R6 ~= nil then PC := 32
 28 [-]: JMP       32           ; PC := 32
 29 [-]: MOVE      R6 R15       ; R6 := R15
 30 [-]: MOVE      R7 R16       ; R7 := R16
 31 [-]: MOVE      R8 R14       ; R8 := R14
 32 [-]: FORLOOP   R11 17       ; R11 += R13; if R11 <= R12 then begin PC := 17; R14 := R11 end
 33 [-]: JMP       42           ; PC := 42
 34 [-]: SELF      R17 R0 K3    ; R18 := R0; R17 := R0[0x4e485a6f]
 35 [-]: MOVE      R19 R1       ; R19 := R1
 36 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 37 [-]: MOVE      R6 R17       ; R6 := R17
 38 [-]: SELF      R17 R0 K4    ; R18 := R0; R17 := R0[0x2ce719d4]
 39 [-]: MOVE      R19 R1       ; R19 := R1
 40 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 41 [-]: MOVE      R7 R17       ; R7 := R17
 42 [-]: SELF      R17 R0 K6    ; R18 := R0; R17 := R0[0x1675b47f]
 43 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 44 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
 45 [-]: MOVE      R19 R17      ; R19 := R17
 46 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 47 [-]: TEST      R18 1        ; if R18 then PC := 68
 48 [-]: JMP       68           ; PC := 68
 49 [-]: LOADBOOL  R18 0 0      ; R18 := false
 50 [-]: GETGLOBAL R19 K7       ; R19 := 0x25d99d89
 51 [-]: SELF      R20 R17 K8   ; R21 := R17; R20 := R17[0xf2deaf69]
 52 [-]: GETUPVAL  R22 U0       ; R22 := U0
 53 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 54 [-]: TEST      R20 0        ; if not R20 then PC := 60
 55 [-]: JMP       60           ; PC := 60
 56 [-]: SELF      R20 R19 K9   ; R21 := R19; R20 := R19[0x4ae54c32]
 57 [-]: MOVE      R22 R17      ; R22 := R17
 58 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 59 [-]: MOVE      R18 R20      ; R18 := R20
 60 [-]: TEST      R18 0        ; if not R18 then PC := 68
 61 [-]: JMP       68           ; PC := 68
 62 [-]: SELF      R20 R0 K10   ; R21 := R0; R20 := R0[0xe4598a92]
 63 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 64 [-]: MOVE      R6 R20       ; R6 := R20
 65 [-]: SELF      R20 R0 K11   ; R21 := R0; R20 := R0[0x9a1de9a9]
 66 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 67 [-]: MOVE      R7 R20       ; R7 := R20
 68 [-]: TEST      R4 0         ; if not R4 then PC := 101
 69 [-]: JMP       101          ; PC := 101
 70 [-]: SETTABLE  R10 K12 R0   ; R10["StoreItem"] := R0
 71 [-]: GETUPVAL  R20 U1       ; R20 := U1
 72 [-]: MOVE      R21 R10      ; R21 := R10
 73 [-]: CALL      R20 2 1      ; R20(R21)
 74 [-]: GETTABLE  R20 R10 K13  ; R20 := R10["Coupon"]
 75 [-]: EQ        1 R20 K1     ; if R20 == nil then PC := 101
 76 [-]: JMP       101          ; PC := 101
 77 [-]: GETTABLE  R20 R10 K13  ; R20 := R10["Coupon"]
 78 [-]: GETTABLE  R20 R20 K14  ; R20 := R20["mAmount"]
 79 [-]: EQ        1 R20 K1     ; if R20 == nil then PC := 101
 80 [-]: JMP       101          ; PC := 101
 81 [-]: GETTABLE  R20 R10 K13  ; R20 := R10["Coupon"]
 82 [-]: GETTABLE  R20 R20 K14  ; R20 := R20["mAmount"]
 83 [-]: EQ        1 R20 K5     ; if R20 == 0.000000 then PC := 101
 84 [-]: JMP       101          ; PC := 101
 85 [-]: EQ        1 R6 K1      ; if R6 == nil then PC := 93
 86 [-]: JMP       93           ; PC := 93
 87 [-]: GETUPVAL  R20 U2       ; R20 := U2
 88 [-]: MOVE      R21 R6       ; R21 := R6
 89 [-]: GETTABLE  R22 R10 K13  ; R22 := R10["Coupon"]
 90 [-]: GETTABLE  R22 R22 K14  ; R22 := R22["mAmount"]
 91 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 92 [-]: MOVE      R6 R20       ; R6 := R20
 93 [-]: EQ        1 R7 K1      ; if R7 == nil then PC := 101
 94 [-]: JMP       101          ; PC := 101
 95 [-]: GETUPVAL  R20 U2       ; R20 := U2
 96 [-]: MOVE      R21 R7       ; R21 := R7
 97 [-]: GETTABLE  R22 R10 K13  ; R22 := R10["Coupon"]
 98 [-]: GETTABLE  R22 R22 K14  ; R22 := R22["mAmount"]
 99 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
100 [-]: MOVE      R7 R20       ; R7 := R20
101 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 105
102 [-]: JMP       105          ; PC := 105
103 [-]: EQ        0 R2 K15     ; if R2 ~= true then PC := 182
104 [-]: JMP       182          ; PC := 182
105 [-]: GETTABLE  R20 R10 K13  ; R20 := R10["Coupon"]
106 [-]: EQ        1 R20 K1     ; if R20 == nil then PC := 112
107 [-]: JMP       112          ; PC := 112
108 [-]: GETTABLE  R20 R10 K13  ; R20 := R10["Coupon"]
109 [-]: GETTABLE  R20 R20 K14  ; R20 := R20["mAmount"]
110 [-]: EQ        0 R20 K5     ; if R20 ~= 0.000000 then PC := 182
111 [-]: JMP       182          ; PC := 182
112 [-]: GETUPVAL  R20 U3       ; R20 := U3
113 [-]: MOVE      R21 R0       ; R21 := R0
114 [-]: CALL      R20 2 2      ; R20 := R20(R21)
115 [-]: MOVE      R9 R20       ; R9 := R20
116 [-]: EQ        1 R9 K1      ; if R9 == nil then PC := 182
117 [-]: JMP       182          ; PC := 182
118 [-]: SELF      R20 R0 K16   ; R21 := R0; R20 := R0[0xc3bbc5cb]
119 [-]: CALL      R20 2 2      ; R20 := R20(R21)
120 [-]: TEST      R20 0        ; if not R20 then PC := 180
121 [-]: JMP       180          ; PC := 180
122 [-]: GETTABLE  R20 R9 K17   ; R20 := R9["mTieredPremiumOverrides"]
123 [-]: LEN       R20 R20      ; R20 := # R20
124 [-]: LT        1 K5 R20     ; if 0.000000 < R20 then PC := 130
125 [-]: JMP       130          ; PC := 130
126 [-]: GETTABLE  R20 R9 K18   ; R20 := R9["mTieredRegularOverrides"]
127 [-]: LEN       R20 R20      ; R20 := # R20
128 [-]: LT        0 K5 R20     ; if 0.000000 >= R20 then PC := 180
129 [-]: JMP       180          ; PC := 180
130 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 165
131 [-]: JMP       165          ; PC := 165
132 [-]: LOADK     R20 0        ; R20 := 0.000000
133 [-]: LOADK     R21 1        ; R21 := 1.000000
134 [-]: GETTABLE  R22 R9 K18   ; R22 := R9["mTieredRegularOverrides"]
135 [-]: LEN       R22 R22      ; R22 := # R22
136 [-]: LOADK     R23 1        ; R23 := 1.000000
137 [-]: FORPREP   R21 144      ; R21 -= R23; PC := 144
138 [-]: GETTABLE  R25 R9 K18   ; R25 := R9["mTieredRegularOverrides"]
139 [-]: GETTABLE  R25 R25 R24  ; R25 := R25[R24]
140 [-]: LT        0 R20 R25    ; if R20 >= R25 then PC := 144
141 [-]: JMP       144          ; PC := 144
142 [-]: GETTABLE  R25 R9 K18   ; R25 := R9["mTieredRegularOverrides"]
143 [-]: GETTABLE  R20 R25 R24  ; R20 := R25[R24]
144 [-]: FORLOOP   R21 138      ; R21 += R23; if R21 <= R22 then begin PC := 138; R24 := R21 end
145 [-]: LT        0 K5 R20     ; if 0.000000 >= R20 then PC := 148
146 [-]: JMP       148          ; PC := 148
147 [-]: MOVE      R6 R20       ; R6 := R20
148 [-]: LOADK     R25 0        ; R25 := 0.000000
149 [-]: LOADK     R26 1        ; R26 := 1.000000
150 [-]: GETTABLE  R27 R9 K17   ; R27 := R9["mTieredPremiumOverrides"]
151 [-]: LEN       R27 R27      ; R27 := # R27
152 [-]: LOADK     R28 1        ; R28 := 1.000000
153 [-]: FORPREP   R26 160      ; R26 -= R28; PC := 160
154 [-]: GETTABLE  R30 R9 K17   ; R30 := R9["mTieredPremiumOverrides"]
155 [-]: GETTABLE  R30 R30 R29  ; R30 := R30[R29]
156 [-]: LT        0 R25 R30    ; if R25 >= R30 then PC := 160
157 [-]: JMP       160          ; PC := 160
158 [-]: GETTABLE  R30 R9 K17   ; R30 := R9["mTieredPremiumOverrides"]
159 [-]: GETTABLE  R25 R30 R29  ; R25 := R30[R29]
160 [-]: FORLOOP   R26 154      ; R26 += R28; if R26 <= R27 then begin PC := 154; R29 := R26 end
161 [-]: LT        0 K5 R25     ; if 0.000000 >= R25 then PC := 182
162 [-]: JMP       182          ; PC := 182
163 [-]: MOVE      R7 R25       ; R7 := R25
164 [-]: JMP       182          ; PC := 182
165 [-]: GETTABLE  R30 R9 K18   ; R30 := R9["mTieredRegularOverrides"]
166 [-]: LEN       R30 R30      ; R30 := # R30
167 [-]: LT        0 K5 R30     ; if 0.000000 >= R30 then PC := 172
168 [-]: JMP       172          ; PC := 172
169 [-]: GETTABLE  R30 R9 K18   ; R30 := R9["mTieredRegularOverrides"]
170 [-]: ADD       R31 R1 K19   ; R31 := R1 + 1.000000
171 [-]: GETTABLE  R6 R30 R31   ; R6 := R30[R31]
172 [-]: GETTABLE  R30 R9 K17   ; R30 := R9["mTieredPremiumOverrides"]
173 [-]: LEN       R30 R30      ; R30 := # R30
174 [-]: LT        0 K5 R30     ; if 0.000000 >= R30 then PC := 182
175 [-]: JMP       182          ; PC := 182
176 [-]: GETTABLE  R30 R9 K17   ; R30 := R9["mTieredPremiumOverrides"]
177 [-]: ADD       R31 R1 K19   ; R31 := R1 + 1.000000
178 [-]: GETTABLE  R7 R30 R31   ; R7 := R30[R31]
179 [-]: JMP       182          ; PC := 182
180 [-]: GETTABLE  R6 R9 K20    ; R6 := R9["mRegularOverride"]
181 [-]: GETTABLE  R7 R9 K21    ; R7 := R9["mPremiumOverride"]
182 [-]: EQ        0 R9 K1      ; if R9 ~= nil then PC := 213
183 [-]: JMP       213          ; PC := 213
184 [-]: SELF      R30 R0 K22   ; R31 := R0; R30 := R0[0xc055cef8]
185 [-]: CALL      R30 2 2      ; R30 := R30(R31)
186 [-]: TEST      R30 1        ; if R30 then PC := 213
187 [-]: JMP       213          ; PC := 213
188 [-]: TEST      R5 1         ; if R5 then PC := 213
189 [-]: JMP       213          ; PC := 213
190 [-]: LOADNIL   R30 R30      ; R30 := nil
191 [-]: GETGLOBAL R31 K0       ; R31 := 0x7b998233
192 [-]: GETGLOBAL R32 K23      ; R32 := 0xbe190284
193 [-]: CALL      R31 2 2      ; R31 := R31(R32)
194 [-]: TEST      R31 1        ; if R31 then PC := 200
195 [-]: JMP       200          ; PC := 200
196 [-]: GETGLOBAL R31 K23      ; R31 := 0xbe190284
197 [-]: SELF      R31 R31 K24  ; R32 := R31; R31 := R31[0xa1c390fe]
198 [-]: CALL      R31 2 2      ; R31 := R31(R32)
199 [-]: MOVE      R30 R31      ; R30 := R31
200 [-]: GETGLOBAL R31 K0       ; R31 := 0x7b998233
201 [-]: MOVE      R32 R30      ; R32 := R30
202 [-]: CALL      R31 2 2      ; R31 := R31(R32)
203 [-]: TEST      R31 1        ; if R31 then PC := 210
204 [-]: JMP       210          ; PC := 210
205 [-]: SELF      R31 R30 K25  ; R32 := R30; R31 := R30[0x92a8cfdb]
206 [-]: MOVE      R33 R0       ; R33 := R0
207 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
208 [-]: EQ        0 R31 K1     ; if R31 ~= nil then PC := 213
209 [-]: JMP       213          ; PC := 213
210 [-]: LOADK     R31 0        ; R31 := 0.000000
211 [-]: LOADK     R32 0        ; R32 := 0.000000
212 [-]: RETURN    R31 3        ; return R31,R32
213 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 279
214 [-]: JMP       279          ; PC := 279
215 [-]: SELF      R31 R0 K26   ; R32 := R0; R31 := R0[0x9dbbea0a]
216 [-]: CALL      R31 2 2      ; R31 := R31(R32)
217 [-]: TEST      R31 0        ; if not R31 then PC := 279
218 [-]: JMP       279          ; PC := 279
219 [-]: SELF      R31 R0 K27   ; R32 := R0; R31 := R0[0x24065c3f]
220 [-]: CALL      R31 2 2      ; R31 := R31(R32)
221 [-]: SELF      R32 R0 K28   ; R33 := R0; R32 := R0[0xd0372aa8]
222 [-]: CALL      R32 2 2      ; R32 := R32(R33)
223 [-]: LOADK     R33 0        ; R33 := 0.000000
224 [-]: LOADK     R34 0        ; R34 := 0.000000
225 [-]: SELF      R35 R0 K29   ; R36 := R0; R35 := R0[0x7b060e36]
226 [-]: CALL      R35 2 2      ; R35 := R35(R36)
227 [-]: LOADK     R36 1        ; R36 := 1.000000
228 [-]: LEN       R37 R35      ; R37 := # R35
229 [-]: LOADK     R38 1        ; R38 := 1.000000
230 [-]: FORPREP   R36 262      ; R36 -= R38; PC := 262
231 [-]: GETGLOBAL R40 K30      ; R40 := 0xce225efa
232 [-]: CALL      R40 1 1      ; R40()
233 [-]: GETTABLE  R40 R35 R39  ; R40 := R35[R39]
234 [-]: GETTABLE  R40 R40 K31  ; R40 := R40["mTypeName"]
235 [-]: GETGLOBAL R41 K0       ; R41 := 0x7b998233
236 [-]: MOVE      R42 R40      ; R42 := R40
237 [-]: CALL      R41 2 2      ; R41 := R41(R42)
238 [-]: TEST      R41 1        ; if R41 then PC := 262
239 [-]: JMP       262          ; PC := 262
240 [-]: GETUPVAL  R41 U4       ; R41 := U4
241 [-]: TEST      R41 0        ; if not R41 then PC := 262
242 [-]: JMP       262          ; PC := 262
243 [-]: GETUPVAL  R41 U5       ; R41 := U5
244 [-]: MOVE      R42 R40      ; R42 := R40
245 [-]: MOVE      R43 R3       ; R43 := R3
246 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
247 [-]: TEST      R41 1        ; if R41 then PC := 262
248 [-]: JMP       262          ; PC := 262
249 [-]: GETUPVAL  R41 U6       ; R41 := U6
250 [-]: MOVE      R42 R40      ; R42 := R40
251 [-]: GETTABLE  R43 R35 R39  ; R43 := R35[R39]
252 [-]: GETTABLE  R43 R43 K32  ; R43 := R43["mDurability"]
253 [-]: MOVE      R44 R2       ; R44 := R2
254 [-]: MOVE      R45 R3       ; R45 := R3
255 [-]: CALL      R41 5 3      ; R41,R42 := R41(R42,R43,R44,R45)
256 [-]: DIV       R43 R41 R31  ; R43 := R41 / R31
257 [-]: MUL       R43 R43 R6   ; R43 := R43 * R6
258 [-]: ADD       R33 R33 R43  ; R33 := R33 + R43
259 [-]: DIV       R43 R42 R32  ; R43 := R42 / R32
260 [-]: MUL       R43 R43 R7   ; R43 := R43 * R7
261 [-]: ADD       R34 R34 R43  ; R34 := R34 + R43
262 [-]: FORLOOP   R36 231      ; R36 += R38; if R36 <= R37 then begin PC := 231; R39 := R36 end
263 [-]: SUB       R6 R6 R33    ; R6 := R6 - R33
264 [-]: SUB       R7 R7 R34    ; R7 := R7 - R34
265 [-]: LT        1 R6 K5      ; if R6 < 0.000000 then PC := 271
266 [-]: JMP       271          ; PC := 271
267 [-]: SELF      R43 R0 K33   ; R44 := R0; R43 := R0[0xdaefcda4]
268 [-]: CALL      R43 2 2      ; R43 := R43(R44)
269 [-]: LT        0 K5 R43     ; if 0.000000 >= R43 then PC := 272
270 [-]: JMP       272          ; PC := 272
271 [-]: LOADK     R6 0         ; R6 := 0.000000
272 [-]: LT        1 R7 K5      ; if R7 < 0.000000 then PC := 278
273 [-]: JMP       278          ; PC := 278
274 [-]: SELF      R43 R0 K33   ; R44 := R0; R43 := R0[0xdaefcda4]
275 [-]: CALL      R43 2 2      ; R43 := R43(R44)
276 [-]: LT        0 K5 R43     ; if 0.000000 >= R43 then PC := 279
277 [-]: JMP       279          ; PC := 279
278 [-]: LOADK     R7 0         ; R7 := 0.000000
279 [-]: MOVE      R43 R6       ; R43 := R6
280 [-]: MOVE      R44 R7       ; R44 := R7
281 [-]: MOVE      R45 R8       ; R45 := R8
282 [-]: MOVE      R46 R9       ; R46 := R9
283 [-]: RETURN    R43 5        ; return R43,R44,R45,R46
284 [-]: RETURN    R0 1         ; return 


; Function #179:
;
; Name:            
; Defined at line: 3158
; #Upvalues:       1
; #Parameters:     6
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETUPVAL  R6 U0        ; R6 := U0
  2 [-]: MOVE      R7 R0        ; R7 := R0
  3 [-]: MOVE      R8 R1        ; R8 := R1
  4 [-]: MOVE      R9 R2        ; R9 := R2
  5 [-]: MOVE      R10 R3       ; R10 := R3
  6 [-]: MOVE      R11 R4       ; R11 := R4
  7 [-]: MOVE      R12 R5       ; R12 := R5
  8 [-]: TAILCALL  R6 7 0       ; R6,... := R6(R7,R8,R9,R10,R11,R12)
  9 [-]: RETURN    R6 0         ; return R6,...
 10 [-]: RETURN    R0 1         ; return 


; Function #180:
;
; Name:            
; Defined at line: 3173
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: ADD       R2 R0 K0     ; R2 := R0 + 1.000000
  3 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #181:
;
; Name:            
; Defined at line: 3177
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LT        0 R0 K0      ; if R0 >= 3.000000 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: LOADK     R1 0         ; R1 := 0.000000
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 2         ; R1 := 2.000000
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #182:
;
; Name:            
; Defined at line: 3186
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x64fb1586
  2 [-]: GETGLOBAL R2 K1        ; R2 := PLAINS_NODE_TAG
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x64fb1586
  7 [-]: GETGLOBAL R2 K2        ; R2 := ORB_VALLIS_NODE_TAG
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x64fb1586
 12 [-]: GETGLOBAL R2 K3        ; R2 := ENTRATI_LANDSCAPE_NODE_TAG
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 17
 17 [-]: LOADBOOL  R1 1 0       ; R1 := true
 18 [-]: RETURN    R1 2         ; return R1
 19 [-]: RETURN    R0 1         ; return 


; Function #183:
;
; Name:            
; Defined at line: 3193
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R1 5 0       ; R1 := {}
  2 [-]: GETGLOBAL R2 K0        ; R2 := ZARIMAN_MISSION_A_TAG
  3 [-]: GETGLOBAL R3 K1        ; R3 := ZARIMAN_MISSION_B_TAG
  4 [-]: GETGLOBAL R4 K2        ; R4 := ZARIMAN_MISSION_C_TAG
  5 [-]: GETGLOBAL R5 K3        ; R5 := ZARIMAN_MISSION_D_TAG
  6 [-]: GETGLOBAL R6 K4        ; R6 := ZARIMAN_MISSION_E_TAG
  7 [-]: SETLIST   R1 5 1       ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 5
  8 [-]: GETGLOBAL R2 K5        ; R2 := 0x0469f296
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETGLOBAL R3 K6        ; R3 := 0xcfc01047
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 14 [-]: JMP       19           ; PC := 19
 15 [-]: EQ        0 R2 R7      ; if R2 ~= R7 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: LOADBOOL  R8 1 0       ; R8 := true
 18 [-]: RETURN    R8 2         ; return R8
 19 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 15; R5 := R6 end
 20 [-]: JMP       15           ; PC := 15
 21 [-]: LOADBOOL  R8 0 0       ; R8 := false
 22 [-]: RETURN    R8 2         ; return R8
 23 [-]: RETURN    R0 1         ; return 


; Function #184:
;
; Name:            
; Defined at line: 3204
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: TEST      R0 0         ; if not R0 then PC := 17
  2 [-]: JMP       17           ; PC := 17
  3 [-]: LOADNIL   R1 R1        ; R1 := nil
  4 [-]: GETGLOBAL R2 K0        ; R2 := 0x6c97a788
  5 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x9c43eb8c]
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0x76ea806b
  7 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x3f3ae64c]
  8 [-]: LOADK     R5 0         ; R5 := 0.000000
  9 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 10 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 11 [-]: TEST      R2 0         ; if not R2 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADK     R1 0         ; R1 := 0.000000
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADK     R1 2         ; R1 := 2.000000
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: GETGLOBAL R2 K4        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["gPendingMission"]
 19 [-]: TEST      R2 0         ; if not R2 then PC := 62
 20 [-]: JMP       62           ; PC := 62
 21 [-]: GETGLOBAL R2 K6        ; R2 := 0xe7f2b02f
 22 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xedf454bc]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 0         ; if not R2 then PC := 62
 25 [-]: JMP       62           ; PC := 62
 26 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 27 [-]: GETGLOBAL R3 K4        ; R3 := _T
 28 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["gPendingMission"]
 29 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["name"]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: GETGLOBAL R3 K10       ; R3 := 0x7f5022cf
 32 [-]: GETTABLE  R3 R3 K11    ; R82 := R3[0xa5c556b9]
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: GETGLOBAL R5 K12       ; R5 := TAG_SEPERATOR
 35 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 36 [-]: TEST      R3 0         ; if not R3 then PC := 45
 37 [-]: JMP       45           ; PC := 45
 38 [-]: GETGLOBAL R4 K10       ; R4 := 0x7f5022cf
 39 [-]: GETTABLE  R4 R4 K13    ; R82 := R4[0x1a94c9cc]
 40 [-]: MOVE      R5 R2        ; R5 := R2
 41 [-]: LOADK     R6 1         ; R6 := 1.000000
 42 [-]: SUB       R7 R3 K14    ; R7 := R3 - 1.000000
 43 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 44 [-]: MOVE      R2 R4        ; R2 := R4
 45 [-]: GETUPVAL  R4 U0        ; R4 := U0
 46 [-]: MOVE      R5 R2        ; R5 := R2
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: TEST      R4 0         ; if not R4 then PC := 55
 49 [-]: JMP       55           ; PC := 55
 50 [-]: GETUPVAL  R4 U1        ; R4 := U1
 51 [-]: MOVE      R5 R2        ; R5 := R2
 52 [-]: GETGLOBAL R6 K15       ; R6 := PLAINS_ELO_IN_LISET
 53 [-]: TAILCALL  R4 3 0       ; R4,... := R4(R5,R6)
 54 [-]: RETURN    R4 0         ; return R4,...
 55 [-]: GETUPVAL  R4 U2        ; R4 := U2
 56 [-]: MOVE      R5 R2        ; R5 := R2
 57 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 58 [-]: TEST      R4 0         ; if not R4 then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: GETGLOBAL R4 K15       ; R4 := PLAINS_ELO_IN_LISET
 61 [-]: RETURN    R4 2         ; return R4
 62 [-]: NEWTABLE  R4 4 0       ; R4 := {}
 63 [-]: LOADK     R5 0         ; R5 := 0.000000
 64 [-]: LOADK     R6 1         ; R6 := 1.000000
 65 [-]: LOADK     R7 3         ; R7 := 3.000000
 66 [-]: LOADK     R8 5         ; R8 := 5.000000
 67 [-]: SETLIST   R4 4 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
 68 [-]: LOADK     R5 0         ; R5 := 0.000000
 69 [-]: LOADK     R6 0         ; R6 := 0.000000
 70 [-]: GETUPVAL  R7 U3        ; R7 := U3
 71 [-]: CALL      R7 1 2       ; R7 := R7()
 72 [-]: GETGLOBAL R8 K17       ; R8 := 0x7b998233
 73 [-]: MOVE      R9 R7        ; R9 := R7
 74 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 75 [-]: TEST      R8 1         ; if R8 then PC := 101
 76 [-]: JMP       101          ; PC := 101
 77 [-]: SELF      R8 R7 K18    ; R9 := R7; R8 := R7[0xde321e6f]
 78 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 79 [-]: GETGLOBAL R9 K17       ; R9 := 0x7b998233
 80 [-]: MOVE      R10 R8       ; R10 := R8
 81 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 82 [-]: TEST      R9 1         ; if R9 then PC := 101
 83 [-]: JMP       101          ; PC := 101
 84 [-]: LOADK     R9 1         ; R9 := 1.000000
 85 [-]: LEN       R10 R4       ; R10 := # R4
 86 [-]: LOADK     R11 1        ; R11 := 1.000000
 87 [-]: FORPREP   R9 100       ; R9 -= R11; PC := 100
 88 [-]: SELF      R13 R8 K19   ; R14 := R8; R13 := R8[0xe85a2361]
 89 [-]: GETTABLE  R15 R4 R12   ; R15 := R4[R12]
 90 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 91 [-]: GETGLOBAL R14 K17      ; R14 := 0x7b998233
 92 [-]: MOVE      R15 R13      ; R15 := R13
 93 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 94 [-]: TEST      R14 1        ; if R14 then PC := 100
 95 [-]: JMP       100          ; PC := 100
 96 [-]: ADD       R5 R5 K14    ; R5 := R5 + 1.000000
 97 [-]: SELF      R14 R13 K20  ; R15 := R13; R14 := R13[0xca9ea368]
 98 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 99 [-]: ADD       R6 R6 R14    ; R6 := R6 + R14
100 [-]: FORLOOP   R9 88        ; R9 += R11; if R9 <= R10 then begin PC := 88; R12 := R9 end
101 [-]: LT        0 R5 K14     ; if R5 >= 1.000000 then PC := 104
102 [-]: JMP       104          ; PC := 104
103 [-]: LOADK     R5 1         ; R5 := 1.000000
104 [-]: DIV       R14 R6 R5    ; R14 := R6 / R5
105 [-]: RETURN    R14 2        ; return R14
106 [-]: RETURN    R0 1         ; return 


; Function #185:
;
; Name:            
; Defined at line: 3262
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #186:
;
; Name:            
; Defined at line: 3266
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: LOADBOOL  R4 1 0       ; R4 := true
  2 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
  3 [-]: MOVE      R6 R0        ; R6 := R0
  4 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  5 [-]: TEST      R5 1         ; if R5 then PC := 151
  6 [-]: JMP       151          ; PC := 151
  7 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R7 K2        ; R7 := gDecorationType
  9 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 10 [-]: TEST      R5 0         ; if not R5 then PC := 30
 11 [-]: JMP       30           ; PC := 30
 12 [-]: SELF      R5 R0 K3     ; R6 := R0; R5 := R0[0xaf8359c4]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5[0x56c01834]
 15 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 16 [-]: TEST      R5 0         ; if not R5 then PC := 22
 17 [-]: JMP       22           ; PC := 22
 18 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0[0xe5a0a15d]
 19 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 20 [-]: TEST      R5 1         ; if R5 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0[0x22da1852]
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: GETUPVAL  R6 U0        ; R6 := U0
 25 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: MOVE      R1 R0        ; R1 := R0
 28 [-]: LOADBOOL  R4 0 0       ; R4 := false
 29 [-]: JMP       151          ; PC := 151
 30 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0[0xf2deaf69]
 31 [-]: GETGLOBAL R7 K7        ; R7 := gDynamicCoverType
 32 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 33 [-]: TEST      R5 1         ; if R5 then PC := 45
 34 [-]: JMP       45           ; PC := 45
 35 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0[0xf2deaf69]
 36 [-]: GETGLOBAL R7 K8        ; R7 := gEmplacementType
 37 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 38 [-]: TEST      R5 1         ; if R5 then PC := 45
 39 [-]: JMP       45           ; PC := 45
 40 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0[0xf2deaf69]
 41 [-]: GETGLOBAL R7 K9        ; R7 := gDevourerType
 42 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 43 [-]: TEST      R5 0         ; if not R5 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: MOVE      R1 R0        ; R1 := R0
 46 [-]: JMP       151          ; PC := 151
 47 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0[0xf2deaf69]
 48 [-]: GETUPVAL  R7 U1        ; R7 := U1
 49 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 50 [-]: TEST      R5 0         ; if not R5 then PC := 55
 51 [-]: JMP       55           ; PC := 55
 52 [-]: LOADNIL   R5 R5        ; R5 := nil
 53 [-]: RETURN    R5 2         ; return R5
 54 [-]: JMP       151          ; PC := 151
 55 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0[0xf2deaf69]
 56 [-]: GETGLOBAL R7 K10       ; R7 := gBaseAvatarType
 57 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 58 [-]: TEST      R5 0         ; if not R5 then PC := 62
 59 [-]: JMP       62           ; PC := 62
 60 [-]: MOVE      R2 R0        ; R2 := R0
 61 [-]: JMP       151          ; PC := 151
 62 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0[0xf2deaf69]
 63 [-]: GETGLOBAL R7 K11       ; R7 := gHitProxyType
 64 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 65 [-]: TEST      R5 0         ; if not R5 then PC := 69
 66 [-]: JMP       69           ; PC := 69
 67 [-]: SELF      R5 R0 K12    ; R6 := R0; R5 := R0[0xf37943ff]
 68 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 69 [-]: SELF      R6 R0 K13    ; R7 := R0; R6 := R0[0xc3962b21]
 70 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 71 [-]: TEST      R5 0         ; if not R5 then PC := 80
 72 [-]: JMP       80           ; PC := 80
 73 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6[0xf2deaf69]
 74 [-]: GETGLOBAL R9 K10       ; R9 := gBaseAvatarType
 75 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 76 [-]: TEST      R7 0         ; if not R7 then PC := 80
 77 [-]: JMP       80           ; PC := 80
 78 [-]: MOVE      R2 R6        ; R2 := R6
 79 [-]: JMP       151          ; PC := 151
 80 [-]: TEST      R5 0         ; if not R5 then PC := 107
 81 [-]: JMP       107          ; PC := 107
 82 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6[0xf2deaf69]
 83 [-]: GETGLOBAL R9 K2        ; R9 := gDecorationType
 84 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 85 [-]: TEST      R7 0         ; if not R7 then PC := 93
 86 [-]: JMP       93           ; PC := 93
 87 [-]: SELF      R7 R6 K3     ; R8 := R6; R7 := R6[0xaf8359c4]
 88 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 89 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7[0x56c01834]
 90 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 91 [-]: TEST      R7 1         ; if R7 then PC := 103
 92 [-]: JMP       103          ; PC := 103
 93 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6[0xf2deaf69]
 94 [-]: GETGLOBAL R9 K7        ; R9 := gDynamicCoverType
 95 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 96 [-]: TEST      R7 1         ; if R7 then PC := 103
 97 [-]: JMP       103          ; PC := 103
 98 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6[0xf2deaf69]
 99 [-]: GETGLOBAL R9 K8        ; R9 := gEmplacementType
100 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
101 [-]: TEST      R7 0         ; if not R7 then PC := 107
102 [-]: JMP       107          ; PC := 107
103 [-]: MOVE      R1 R6        ; R1 := R6
104 [-]: MOVE      R3 R0        ; R3 := R0
105 [-]: LOADBOOL  R4 0 0       ; R4 := false
106 [-]: JMP       151          ; PC := 151
107 [-]: TEST      R5 0         ; if not R5 then PC := 117
108 [-]: JMP       117          ; PC := 117
109 [-]: SELF      R7 R6 K1     ; R8 := R6; R7 := R6[0xf2deaf69]
110 [-]: GETGLOBAL R9 K9        ; R9 := gDevourerType
111 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
112 [-]: TEST      R7 0         ; if not R7 then PC := 117
113 [-]: JMP       117          ; PC := 117
114 [-]: MOVE      R1 R6        ; R1 := R6
115 [-]: MOVE      R3 R0        ; R3 := R0
116 [-]: JMP       151          ; PC := 151
117 [-]: SELF      R7 R0 K1     ; R8 := R0; R7 := R0[0xf2deaf69]
118 [-]: GETGLOBAL R9 K14       ; R9 := gPickUpType
119 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
120 [-]: TEST      R7 0         ; if not R7 then PC := 140
121 [-]: JMP       140          ; PC := 140
122 [-]: SELF      R7 R0 K15    ; R8 := R0; R7 := R0[0x1cf0f63d]
123 [-]: CALL      R7 2 2       ; R7 := R7(R8)
124 [-]: TEST      R7 0         ; if not R7 then PC := 140
125 [-]: JMP       140          ; PC := 140
126 [-]: SELF      R7 R0 K16    ; R8 := R0; R7 := R0[0x4528012d]
127 [-]: CALL      R7 2 2       ; R7 := R7(R8)
128 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
129 [-]: MOVE      R9 R7        ; R9 := R7
130 [-]: CALL      R8 2 2       ; R8 := R8(R9)
131 [-]: TEST      R8 1         ; if R8 then PC := 151
132 [-]: JMP       151          ; PC := 151
133 [-]: SELF      R8 R7 K1     ; R9 := R7; R8 := R7[0xf2deaf69]
134 [-]: GETGLOBAL R10 K17      ; R10 := gFusionTreasureType
135 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
136 [-]: TEST      R8 0         ; if not R8 then PC := 151
137 [-]: JMP       151          ; PC := 151
138 [-]: MOVE      R1 R0        ; R1 := R0
139 [-]: JMP       151          ; PC := 151
140 [-]: SELF      R8 R0 K18    ; R9 := R0; R8 := R0[0x2b54251b]
141 [-]: CALL      R8 2 2       ; R8 := R8(R9)
142 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
143 [-]: MOVE      R10 R8       ; R10 := R8
144 [-]: CALL      R9 2 2       ; R9 := R9(R10)
145 [-]: TEST      R9 1         ; if R9 then PC := 151
146 [-]: JMP       151          ; PC := 151
147 [-]: GETUPVAL  R9 U2        ; R9 := U2
148 [-]: MOVE      R10 R8       ; R10 := R8
149 [-]: TAILCALL  R9 2 0       ; R9,... := R9(R10)
150 [-]: RETURN    R9 0         ; return R9,...
151 [-]: MOVE      R9 R1        ; R9 := R1
152 [-]: MOVE      R10 R2       ; R10 := R2
153 [-]: MOVE      R11 R3       ; R11 := R3
154 [-]: MOVE      R12 R4       ; R12 := R4
155 [-]: RETURN    R9 5         ; return R9,R10,R11,R12
156 [-]: RETURN    R0 1         ; return 


; Function #187:
;
; Name:            
; Defined at line: 3309
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #188:
;
; Name:            
; Defined at line: 3313
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 71
  2 [-]: JMP       71           ; PC := 71
  3 [-]: LOADK     R3 1         ; R3 := 1.000000
  4 [-]: LEN       R4 R1        ; R4 := # R1
  5 [-]: LOADK     R5 1         ; R5 := 1.000000
  6 [-]: FORPREP   R3 70        ; R3 -= R5; PC := 70
  7 [-]: GETGLOBAL R7 K1        ; R7 := 0xce225efa
  8 [-]: LOADK     R8 0         ; R8 := 0.000000
  9 [-]: CALL      R7 2 1       ; R7(R8)
 10 [-]: GETTABLE  R7 R1 R6     ; R7 := R1[R6]
 11 [-]: GETTABLE  R8 R7 K2     ; R8 := R7["mItemType"]
 12 [-]: SELF      R8 R8 K3     ; R9 := R8; R8 := R8[0xed4e0128]
 13 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 14 [-]: GETGLOBAL R9 K4        ; R9 := 0x7b998233
 15 [-]: MOVE      R10 R2       ; R10 := R2
 16 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 17 [-]: TEST      R9 1         ; if R9 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: MOVE      R9 R2        ; R9 := R2
 20 [-]: MOVE      R10 R7       ; R10 := R7
 21 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 22 [-]: TEST      R9 0         ; if not R9 then PC := 70
 23 [-]: JMP       70           ; PC := 70
 24 [-]: GETTABLE  R9 R0 R8     ; R9 := R0[R8]
 25 [-]: EQ        1 R9 K0      ; if R9 == nil then PC := 59
 26 [-]: JMP       59           ; PC := 59
 27 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["Count"]
 28 [-]: EQ        1 R10 K0     ; if R10 == nil then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["Count"]
 31 [-]: EQ        0 R10 K6     ; if R10 ~= 0.000000 then PC := 45
 32 [-]: JMP       45           ; PC := 45
 33 [-]: GETUPVAL  R10 U0       ; R10 := U0
 34 [-]: GETTABLE  R10 R10 K7   ; R82 := R10[0x06d055f9]
 35 [-]: GETTABLE  R11 R7 K8    ; R11 := R7["mItemCount"]
 36 [-]: EQ        1 R11 K0     ; if R11 == nil then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 39
 39 [-]: LOADBOOL  R11 1 0      ; R11 := true
 40 [-]: LOADK     R12 1        ; R12 := 1.000000
 41 [-]: GETTABLE  R13 R7 K8    ; R13 := R7["mItemCount"]
 42 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 43 [-]: SETTABLE  R9 K5 R10    ; R9["Count"] := R10
 44 [-]: JMP       70           ; PC := 70
 45 [-]: GETTABLE  R10 R9 K5    ; R10 := R9["Count"]
 46 [-]: GETUPVAL  R11 U0       ; R11 := U0
 47 [-]: GETTABLE  R11 R11 K7   ; R82 := R11[0x06d055f9]
 48 [-]: GETTABLE  R12 R7 K8    ; R12 := R7["mItemCount"]
 49 [-]: EQ        1 R12 K0     ; if R12 == nil then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 52
 52 [-]: LOADBOOL  R12 1 0      ; R12 := true
 53 [-]: LOADK     R13 1        ; R13 := 1.000000
 54 [-]: GETTABLE  R14 R7 K8    ; R14 := R7["mItemCount"]
 55 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 56 [-]: ADD       R10 R10 R11  ; R10 := R10 + R11
 57 [-]: SETTABLE  R9 K5 R10    ; R9["Count"] := R10
 58 [-]: JMP       70           ; PC := 70
 59 [-]: NEWTABLE  R10 0 3      ; R10 := {}
 60 [-]: GETTABLE  R11 R7 K2    ; R11 := R7["mItemType"]
 61 [-]: SETTABLE  R10 K9 R11   ; R10[0xf37943ff] := R11
 62 [-]: GETTABLE  R11 R7 K8    ; R11 := R7["mItemCount"]
 63 [-]: SETTABLE  R10 K5 R11   ; R10["Count"] := R11
 64 [-]: SETTABLE  R10 K10 R7   ; R10[0xc3962b21] := R7
 65 [-]: GETTABLE  R11 R10 K5   ; R11 := R10["Count"]
 66 [-]: EQ        0 R11 K0     ; if R11 ~= nil then PC := 69
 67 [-]: JMP       69           ; PC := 69
 68 [-]: SETTABLE  R10 K5 K11   ; R10["Count"] := 1.000000
 69 [-]: SETTABLE  R0 R8 R10    ; R0[R8] := R10
 70 [-]: FORLOOP   R3 7         ; R3 += R5; if R3 <= R4 then begin PC := 7; R6 := R3 end
 71 [-]: RETURN    R0 1         ; return 


; Function #189:
;
; Name:            
; Defined at line: 3343
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
  6 [-]: RETURN    R0 1         ; return 


; Function #190:
;
; Name:            
; Defined at line: 3347
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x25d99d89
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 161
  7 [-]: JMP       161          ; PC := 161
  8 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1[0x25a6e75e]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: TEST      R3 1         ; if R3 then PC := 161
 14 [-]: JMP       161          ; PC := 161
 15 [-]: GETUPVAL  R3 U0        ; R3 := U0
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: SELF      R5 R2 K3     ; R6 := R2; R5 := R2[0x57d88957]
 18 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 19 [-]: CALL      R3 0 1       ; R3(R4,...)
 20 [-]: GETUPVAL  R3 U0        ; R3 := U0
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: SELF      R5 R2 K4     ; R6 := R2; R5 := R2[0x215bf396]
 23 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 24 [-]: CALL      R3 0 1       ; R3(R4,...)
 25 [-]: GETUPVAL  R3 U0        ; R3 := U0
 26 [-]: MOVE      R4 R0        ; R4 := R0
 27 [-]: SELF      R5 R2 K5     ; R6 := R2; R5 := R2[0x21a3da0c]
 28 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 29 [-]: CALL      R3 0 1       ; R3(R4,...)
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: MOVE      R4 R0        ; R4 := R0
 32 [-]: SELF      R5 R2 K6     ; R6 := R2; R5 := R2[0x0bf14f02]
 33 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 34 [-]: CALL      R3 0 1       ; R3(R4,...)
 35 [-]: GETUPVAL  R3 U0        ; R3 := U0
 36 [-]: MOVE      R4 R0        ; R4 := R0
 37 [-]: SELF      R5 R2 K7     ; R6 := R2; R5 := R2[0x4bb8609a]
 38 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 39 [-]: CALL      R3 0 1       ; R3(R4,...)
 40 [-]: GETUPVAL  R3 U0        ; R3 := U0
 41 [-]: MOVE      R4 R0        ; R4 := R0
 42 [-]: SELF      R5 R2 K8     ; R6 := R2; R5 := R2[0x6f7b67d7]
 43 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 44 [-]: CALL      R3 0 1       ; R3(R4,...)
 45 [-]: GETUPVAL  R3 U0        ; R3 := U0
 46 [-]: MOVE      R4 R0        ; R4 := R0
 47 [-]: SELF      R5 R2 K9     ; R6 := R2; R5 := R2[0x3218c3b0]
 48 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 49 [-]: CALL      R3 0 1       ; R3(R4,...)
 50 [-]: GETUPVAL  R3 U0        ; R3 := U0
 51 [-]: MOVE      R4 R0        ; R4 := R0
 52 [-]: SELF      R5 R2 K10    ; R6 := R2; R5 := R2[0x2a207127]
 53 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 54 [-]: CALL      R3 0 1       ; R3(R4,...)
 55 [-]: GETUPVAL  R3 U0        ; R3 := U0
 56 [-]: MOVE      R4 R0        ; R4 := R0
 57 [-]: SELF      R5 R2 K11    ; R6 := R2; R5 := R2[0xa2c6d8b7]
 58 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 59 [-]: CALL      R3 0 1       ; R3(R4,...)
 60 [-]: GETUPVAL  R3 U0        ; R3 := U0
 61 [-]: MOVE      R4 R0        ; R4 := R0
 62 [-]: SELF      R5 R2 K12    ; R6 := R2; R5 := R2[0xe9131614]
 63 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 64 [-]: CALL      R3 0 1       ; R3(R4,...)
 65 [-]: GETGLOBAL R3 K13       ; R3 := 0x7ed0a956
 66 [-]: LOADK     R4 K14       ; R4 := "/Lotus/Upgrades/Mods/Immortal/ImmortalBaseMod"
 67 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 68 [-]: GETUPVAL  R4 U0        ; R4 := U0
 69 [-]: MOVE      R5 R0        ; R5 := R0
 70 [-]: SELF      R6 R2 K15    ; R7 := R2; R6 := R2[0x98b1bb53]
 71 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 72 [-]: CLOSURE   R7 0         ; R7 := closure(Function #190.1)
 73 [-]: MOVE      R0 R3        ; R0 := R3
 74 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 75 [-]: GETUPVAL  R4 U0        ; R4 := U0
 76 [-]: MOVE      R5 R0        ; R5 := R0
 77 [-]: SELF      R6 R2 K16    ; R7 := R2; R6 := R2[0xaaeb4d91]
 78 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 79 [-]: CALL      R4 0 1       ; R4(R5,...)
 80 [-]: GETUPVAL  R4 U0        ; R4 := U0
 81 [-]: MOVE      R5 R0        ; R5 := R0
 82 [-]: SELF      R6 R2 K17    ; R7 := R2; R6 := R2[0x51a64e2e]
 83 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 84 [-]: CALL      R4 0 1       ; R4(R5,...)
 85 [-]: GETUPVAL  R4 U0        ; R4 := U0
 86 [-]: MOVE      R5 R0        ; R5 := R0
 87 [-]: SELF      R6 R2 K18    ; R7 := R2; R6 := R2[0x6cfd4151]
 88 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 89 [-]: CALL      R4 0 1       ; R4(R5,...)
 90 [-]: GETUPVAL  R4 U0        ; R4 := U0
 91 [-]: MOVE      R5 R0        ; R5 := R0
 92 [-]: SELF      R6 R2 K19    ; R7 := R2; R6 := R2[0xf4045b7e]
 93 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 94 [-]: CALL      R4 0 1       ; R4(R5,...)
 95 [-]: GETUPVAL  R4 U0        ; R4 := U0
 96 [-]: MOVE      R5 R0        ; R5 := R0
 97 [-]: SELF      R6 R2 K20    ; R7 := R2; R6 := R2[0xd8dfa041]
 98 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 99 [-]: CALL      R4 0 1       ; R4(R5,...)
100 [-]: GETUPVAL  R4 U0        ; R4 := U0
101 [-]: MOVE      R5 R0        ; R5 := R0
102 [-]: SELF      R6 R2 K21    ; R7 := R2; R6 := R2[0x8f27d10c]
103 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
104 [-]: CALL      R4 0 1       ; R4(R5,...)
105 [-]: GETUPVAL  R4 U0        ; R4 := U0
106 [-]: MOVE      R5 R0        ; R5 := R0
107 [-]: SELF      R6 R2 K22    ; R7 := R2; R6 := R2[0xe9768ed0]
108 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
109 [-]: CALL      R4 0 1       ; R4(R5,...)
110 [-]: GETUPVAL  R4 U0        ; R4 := U0
111 [-]: MOVE      R5 R0        ; R5 := R0
112 [-]: SELF      R6 R2 K23    ; R7 := R2; R6 := R2[0xcd6e999d]
113 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
114 [-]: CALL      R4 0 1       ; R4(R5,...)
115 [-]: GETUPVAL  R4 U0        ; R4 := U0
116 [-]: MOVE      R5 R0        ; R5 := R0
117 [-]: SELF      R6 R2 K24    ; R7 := R2; R6 := R2[0x7c12ac22]
118 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
119 [-]: CALL      R4 0 1       ; R4(R5,...)
120 [-]: GETUPVAL  R4 U0        ; R4 := U0
121 [-]: MOVE      R5 R0        ; R5 := R0
122 [-]: SELF      R6 R2 K25    ; R7 := R2; R6 := R2[0x1b68b9f9]
123 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
124 [-]: CALL      R4 0 1       ; R4(R5,...)
125 [-]: GETUPVAL  R4 U0        ; R4 := U0
126 [-]: MOVE      R5 R0        ; R5 := R0
127 [-]: SELF      R6 R2 K26    ; R7 := R2; R6 := R2[0xbfba693e]
128 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
129 [-]: CALL      R4 0 1       ; R4(R5,...)
130 [-]: GETUPVAL  R4 U0        ; R4 := U0
131 [-]: MOVE      R5 R0        ; R5 := R0
132 [-]: SELF      R6 R2 K27    ; R7 := R2; R6 := R2[0xdc039065]
133 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
134 [-]: CALL      R4 0 1       ; R4(R5,...)
135 [-]: GETUPVAL  R4 U0        ; R4 := U0
136 [-]: MOVE      R5 R0        ; R5 := R0
137 [-]: SELF      R6 R2 K28    ; R7 := R2; R6 := R2[0x2fdbb24a]
138 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
139 [-]: CALL      R4 0 1       ; R4(R5,...)
140 [-]: GETUPVAL  R4 U0        ; R4 := U0
141 [-]: MOVE      R5 R0        ; R5 := R0
142 [-]: SELF      R6 R2 K29    ; R7 := R2; R6 := R2[0x738deb95]
143 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
144 [-]: CALL      R4 0 1       ; R4(R5,...)
145 [-]: GETUPVAL  R4 U0        ; R4 := U0
146 [-]: MOVE      R5 R0        ; R5 := R0
147 [-]: SELF      R6 R2 K30    ; R7 := R2; R6 := R2[0xfab085e3]
148 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
149 [-]: CALL      R4 0 1       ; R4(R5,...)
150 [-]: GETUPVAL  R4 U0        ; R4 := U0
151 [-]: MOVE      R5 R0        ; R5 := R0
152 [-]: SELF      R6 R2 K31    ; R7 := R2; R6 := R2[0x91a3eddf]
153 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
154 [-]: CALL      R4 0 1       ; R4(R5,...)
155 [-]: GETUPVAL  R4 U0        ; R4 := U0
156 [-]: MOVE      R5 R0        ; R5 := R0
157 [-]: SELF      R6 R2 K32    ; R7 := R2; R6 := R2[0x99718a3d]
158 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
159 [-]: CALL      R4 0 1       ; R4(R5,...)
160 [-]: CLOSE     R3           ; SAVE R3,...
161 [-]: RETURN    R0 2         ; return R0
162 [-]: RETURN    R0 1         ; return 


; Function #190.1:
;
; Name:            
; Defined at line: 3365
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mItemType"]
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf2deaf69]
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 21
  6 [-]: JMP       21           ; PC := 21
  7 [-]: GETGLOBAL R1 K2        ; R1 := cjson
  8 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0x7ab914d8]
  9 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mUpgradeFingerprint"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETTABLE  R2 R1 K6     ; R2 := R1["lvl"]
 17 [-]: EQ        0 R2 K7      ; if R2 ~= 3.000000 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADBOOL  R2 0 0       ; R2 := false
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: LOADBOOL  R2 1 0       ; R2 := true
 22 [-]: RETURN    R2 2         ; return R2
 23 [-]: RETURN    R0 1         ; return 


; Function #191:
;
; Name:            
; Defined at line: 3398
; #Upvalues:       4
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  35

  1 [-]: NEWTABLE  R5 0 0       ; R5 := {}
  2 [-]: CLOSURE   R6 0         ; R6 := closure(Function #191.1)
  3 [-]: MOVE      R0 R2        ; R0 := R2
  4 [-]: MOVE      R0 R5        ; R0 := R5
  5 [-]: MOVE      R0 R4        ; R0 := R4
  6 [-]: CLOSURE   R7 1         ; R7 := closure(Function #191.2)
  7 [-]: MOVE      R0 R0        ; R0 := R0
  8 [-]: MOVE      R0 R3        ; R0 := R3
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: GETUPVAL  R0 U2        ; R0 := U2
 12 [-]: GETUPVAL  R0 U3        ; R0 := U3
 13 [-]: GETTABLE  R8 R1 K0     ; R8 := R1["credits"]
 14 [-]: LT        0 K1 R8      ; if 0.000000 >= R8 then PC := 32
 15 [-]: JMP       32           ; PC := 32
 16 [-]: LOADK     R8 K2        ; R8 := "<CREDITS>"
 17 [-]: TEST      R3 1         ; if R3 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: SELF      R9 R0 K3     ; R10 := R0; R9 := R0[0x42b04007]
 20 [-]: LOADK     R11 K2       ; R11 := "<CREDITS>"
 21 [-]: LOADBOOL  R12 1 0      ; R12 := true
 22 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 23 [-]: MOVE      R8 R9        ; R8 := R9
 24 [-]: MOVE      R9 R6        ; R9 := R6
 25 [-]: MOVE      R10 R8       ; R10 := R8
 26 [-]: GETUPVAL  R11 U0       ; R11 := U0
 27 [-]: GETTABLE  R11 R11 K4   ; R82 := R11[0x1142c7a8]
 28 [-]: GETTABLE  R12 R1 K0    ; R12 := R1["credits"]
 29 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 30 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 31 [-]: CALL      R9 2 1       ; R9(R10)
 32 [-]: GETTABLE  R9 R1 K5     ; R9 := R1["items"]
 33 [-]: LOADK     R10 1        ; R10 := 1.000000
 34 [-]: LEN       R11 R9       ; R11 := # R9
 35 [-]: LOADK     R12 1        ; R12 := 1.000000
 36 [-]: FORPREP   R10 51       ; R10 -= R12; PC := 51
 37 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
 38 [-]: GETGLOBAL R15 K6       ; R15 := 0x7b998233
 39 [-]: MOVE      R16 R14      ; R16 := R14
 40 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 41 [-]: TEST      R15 1        ; if R15 then PC := 51
 42 [-]: JMP       51           ; PC := 51
 43 [-]: MOVE      R15 R7       ; R15 := R7
 44 [-]: MOVE      R16 R14      ; R16 := R14
 45 [-]: LOADNIL   R17 R17      ; R17 := nil
 46 [-]: LOADK     R18 1        ; R18 := 1.000000
 47 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 48 [-]: MOVE      R16 R6       ; R16 := R6
 49 [-]: MOVE      R17 R15      ; R17 := R15
 50 [-]: CALL      R16 2 1      ; R16(R17)
 51 [-]: FORLOOP   R10 37       ; R10 += R12; if R10 <= R11 then begin PC := 37; R13 := R10 end
 52 [-]: GETTABLE  R16 R1 K7    ; R16 := R1["countedStoreItems"]
 53 [-]: LOADK     R17 1        ; R17 := 1.000000
 54 [-]: LEN       R18 R16      ; R18 := # R16
 55 [-]: LOADK     R19 1        ; R19 := 1.000000
 56 [-]: FORPREP   R17 72       ; R17 -= R19; PC := 72
 57 [-]: GETTABLE  R21 R16 R20  ; R21 := R16[R20]
 58 [-]: GETTABLE  R22 R21 K8   ; R22 := R21["mStoreItem"]
 59 [-]: GETGLOBAL R23 K6       ; R23 := 0x7b998233
 60 [-]: MOVE      R24 R22      ; R24 := R22
 61 [-]: CALL      R23 2 2      ; R23 := R23(R24)
 62 [-]: TEST      R23 1        ; if R23 then PC := 72
 63 [-]: JMP       72           ; PC := 72
 64 [-]: MOVE      R23 R7       ; R23 := R7
 65 [-]: MOVE      R24 R22      ; R24 := R22
 66 [-]: LOADNIL   R25 R25      ; R25 := nil
 67 [-]: GETTABLE  R26 R21 K9   ; R26 := R21["mItemCount"]
 68 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
 69 [-]: MOVE      R24 R6       ; R24 := R6
 70 [-]: MOVE      R25 R23      ; R25 := R23
 71 [-]: CALL      R24 2 1      ; R24(R25)
 72 [-]: FORLOOP   R17 57       ; R17 += R19; if R17 <= R18 then begin PC := 57; R20 := R17 end
 73 [-]: GETTABLE  R24 R1 K10   ; R24 := R1["countedItems"]
 74 [-]: LOADK     R25 1        ; R25 := 1.000000
 75 [-]: LEN       R26 R24      ; R26 := # R24
 76 [-]: LOADK     R27 1        ; R27 := 1.000000
 77 [-]: FORPREP   R25 93       ; R25 -= R27; PC := 93
 78 [-]: GETTABLE  R29 R1 K10   ; R29 := R1["countedItems"]
 79 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
 80 [-]: GETGLOBAL R30 K6       ; R30 := 0x7b998233
 81 [-]: GETTABLE  R31 R29 K11  ; R31 := R29["mItemType"]
 82 [-]: CALL      R30 2 2      ; R30 := R30(R31)
 83 [-]: TEST      R30 1        ; if R30 then PC := 93
 84 [-]: JMP       93           ; PC := 93
 85 [-]: MOVE      R30 R7       ; R30 := R7
 86 [-]: LOADNIL   R31 R31      ; R31 := nil
 87 [-]: MOVE      R32 R29      ; R32 := R29
 88 [-]: GETTABLE  R33 R29 K9   ; R33 := R29["mItemCount"]
 89 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
 90 [-]: MOVE      R31 R6       ; R31 := R6
 91 [-]: MOVE      R32 R30      ; R32 := R30
 92 [-]: CALL      R31 2 1      ; R31(R32)
 93 [-]: FORLOOP   R25 78       ; R25 += R27; if R25 <= R26 then begin PC := 78; R28 := R25 end
 94 [-]: EQ        0 R4 K12     ; if R4 ~= nil then PC := 97
 95 [-]: JMP       97           ; PC := 97
 96 [-]: LOADK     R4 K13       ; R4 := ""
 97 [-]: GETUPVAL  R31 U0       ; R31 := U0
 98 [-]: GETTABLE  R31 R31 K14  ; R82 := R31[0x06d055f9]
 99 [-]: MOVE      R32 R2       ; R32 := R2
100 [-]: MOVE      R33 R5       ; R33 := R5
101 [-]: MOVE      R34 R4       ; R34 := R4
102 [-]: TAILCALL  R31 4 0      ; R31,... := R31(R32,R33,R34)
103 [-]: RETURN    R31 0        ; return R31,...
104 [-]: RETURN    R0 1         ; return 


; Function #191.1:
;
; Name:            
; Defined at line: 3402
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: TEST      R1 0         ; if not R1 then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0x33bdd652
  5 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x23d5322f]
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: CALL      R1 3 1       ; R1(R2,R3)
  9 [-]: JMP       20           ; PC := 20
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: SETUPVAL  R0 U2        ; U82 := 
 14 [-]: JMP       20           ; PC := 20
 15 [-]: GETUPVAL  R1 U2        ; R1 := U2
 16 [-]: LOADK     R2 K3        ; R2 := " + "
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 19 [-]: SETUPVAL  R1 U2        ; U82 := 
 20 [-]: RETURN    R0 1         ; return 


; Function #191.2:
;
; Name:            
; Defined at line: 3414
; #Upvalues:       6
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: LOADK     R3 K0        ; R3 := ""
  2 [-]: LOADNIL   R4 R4        ; R4 := nil
  3 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
  4 [-]: MOVE      R6 R1        ; R6 := R1
  5 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  6 [-]: TEST      R5 1         ; if R5 then PC := 35
  7 [-]: JMP       35           ; PC := 35
  8 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mItemType"]
  9 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["mItemType"]
 10 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5[0xf2deaf69]
 11 [-]: GETGLOBAL R7 K4        ; R7 := gRecipeItemType
 12 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 13 [-]: TEST      R5 0         ; if not R5 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R5 K5        ; R5 := 0xb009bbc6
 16 [-]: GETTABLE  R6 R1 K2     ; R6 := R1["mItemType"]
 17 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 18 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
 19 [-]: MOVE      R7 R5        ; R7 := R5
 20 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 21 [-]: TEST      R6 1         ; if R6 then PC := 43
 22 [-]: JMP       43           ; PC := 43
 23 [-]: GETGLOBAL R6 K6        ; R6 := 0x64fb1586
 24 [-]: SELF      R7 R5 K7     ; R8 := R5; R7 := R5[0xd3a9d01f]
 25 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 26 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 27 [-]: MOVE      R3 R6        ; R3 := R6
 28 [-]: JMP       43           ; PC := 43
 29 [-]: GETGLOBAL R6 K6        ; R6 := 0x64fb1586
 30 [-]: SELF      R7 R1 K8     ; R8 := R1; R7 := R1[0xd88af2a0]
 31 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 32 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 33 [-]: MOVE      R3 R6        ; R3 := R6
 34 [-]: JMP       43           ; PC := 43
 35 [-]: SELF      R6 R0 K9     ; R7 := R0; R6 := R0[0xf278f8a1]
 36 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 37 [-]: MOVE      R4 R6        ; R4 := R6
 38 [-]: GETGLOBAL R6 K6        ; R6 := 0x64fb1586
 39 [-]: SELF      R7 R0 K7     ; R8 := R0; R7 := R0[0xd3a9d01f]
 40 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 41 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 42 [-]: MOVE      R3 R6        ; R3 := R6
 43 [-]: GETUPVAL  R6 U0        ; R6 := U0
 44 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6[0x42b04007]
 45 [-]: MOVE      R8 R3        ; R8 := R3
 46 [-]: LOADBOOL  R9 0 0       ; R9 := false
 47 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 48 [-]: MOVE      R3 R6        ; R3 := R6
 49 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
 50 [-]: MOVE      R7 R0        ; R7 := R0
 51 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 52 [-]: TEST      R6 1         ; if R6 then PC := 72
 53 [-]: JMP       72           ; PC := 72
 54 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
 55 [-]: MOVE      R7 R4        ; R7 := R4
 56 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 57 [-]: TEST      R6 1         ; if R6 then PC := 72
 58 [-]: JMP       72           ; PC := 72
 59 [-]: SELF      R6 R4 K3     ; R7 := R4; R6 := R4[0xf2deaf69]
 60 [-]: GETGLOBAL R8 K4        ; R8 := gRecipeItemType
 61 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 62 [-]: TEST      R6 0         ; if not R6 then PC := 72
 63 [-]: JMP       72           ; PC := 72
 64 [-]: GETUPVAL  R6 U0        ; R6 := U0
 65 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6[0x42b04007]
 66 [-]: LOADK     R8 K11       ; R8 := "/Lotus/Language/Items/BlueprintAndItem"
 67 [-]: LOADBOOL  R9 0 0       ; R9 := false
 68 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 69 [-]: SETTABLE  R10 K12 R3   ; R10["ITEM"] := R3
 70 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 71 [-]: MOVE      R3 R6        ; R3 := R6
 72 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
 73 [-]: MOVE      R7 R0        ; R7 := R0
 74 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 75 [-]: TEST      R6 1         ; if R6 then PC := 81
 76 [-]: JMP       81           ; PC := 81
 77 [-]: SELF      R6 R0 K13    ; R7 := R0; R6 := R0[0xfe9eb1a5]
 78 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 79 [-]: EQ        1 R6 K15     ; if R6 == 35.000000 then PC := 91
 80 [-]: JMP       91           ; PC := 91
 81 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
 82 [-]: MOVE      R7 R4        ; R7 := R4
 83 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 84 [-]: TEST      R6 1         ; if R6 then PC := 126
 85 [-]: JMP       126          ; PC := 126
 86 [-]: SELF      R6 R4 K3     ; R7 := R4; R6 := R4[0xf2deaf69]
 87 [-]: GETGLOBAL R8 K16       ; R8 := gFusionBundleType
 88 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 89 [-]: TEST      R6 0         ; if not R6 then PC := 126
 90 [-]: JMP       126          ; PC := 126
 91 [-]: LOADK     R6 0         ; R6 := 0.000000
 92 [-]: LOADK     R7 0         ; R7 := 0.000000
 93 [-]: GETGLOBAL R8 K1        ; R8 := 0x7b998233
 94 [-]: MOVE      R9 R1        ; R9 := R1
 95 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 96 [-]: TEST      R8 1         ; if R8 then PC := 103
 97 [-]: JMP       103          ; PC := 103
 98 [-]: SELF      R8 R1 K17    ; R9 := R1; R8 := R1[0x7c6b2650]
 99 [-]: CALL      R8 2 2       ; R8 := R8(R9)
100 [-]: UNM       R6 R8        ; R6 := ^ R8
101 [-]: MOVE      R7 R2        ; R7 := R2
102 [-]: JMP       109          ; PC := 109
103 [-]: SELF      R8 R0 K18    ; R9 := R0; R8 := R0[0x4e485a6f]
104 [-]: CALL      R8 2 2       ; R8 := R8(R9)
105 [-]: UNM       R6 R8        ; R6 := ^ R8
106 [-]: SELF      R8 R0 K19    ; R9 := R0; R8 := R0[0x075cb724]
107 [-]: CALL      R8 2 2       ; R8 := R8(R9)
108 [-]: MOVE      R7 R8        ; R7 := R8
109 [-]: LOADK     R8 K20       ; R8 := "<FUSION_POINTS>"
110 [-]: GETUPVAL  R9 U1        ; R9 := U1
111 [-]: TEST      R9 1         ; if R9 then PC := 119
112 [-]: JMP       119          ; PC := 119
113 [-]: GETUPVAL  R9 U0        ; R9 := U0
114 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9[0x42b04007]
115 [-]: LOADK     R11 K20      ; R11 := "<FUSION_POINTS>"
116 [-]: LOADBOOL  R12 1 0      ; R12 := true
117 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
118 [-]: MOVE      R8 R9        ; R8 := R9
119 [-]: MOVE      R9 R8        ; R9 := R8
120 [-]: GETUPVAL  R10 U2       ; R10 := U2
121 [-]: GETTABLE  R10 R10 K21  ; R82 := R10[0x1142c7a8]
122 [-]: MUL       R11 R6 R7    ; R11 := R6 * R7
123 [-]: CALL      R10 2 2      ; R10 := R10(R11)
124 [-]: CONCAT    R3 R9 R10    ; R3 := R9 .. R10
125 [-]: JMP       133          ; PC := 133
126 [-]: LT        0 K22 R2     ; if 1.000000 >= R2 then PC := 133
127 [-]: JMP       133          ; PC := 133
128 [-]: MOVE      R9 R3        ; R9 := R3
129 [-]: LOADK     R10 K23      ; R10 := " ("
130 [-]: MOVE      R11 R2       ; R11 := R2
131 [-]: LOADK     R12 K24      ; R12 := ")"
132 [-]: CONCAT    R3 R9 R12    ; R3 := R9 .. R10 .. R11 .. R12
133 [-]: GETGLOBAL R9 K1        ; R9 := 0x7b998233
134 [-]: MOVE      R10 R4       ; R10 := R4
135 [-]: CALL      R9 2 2       ; R9 := R9(R10)
136 [-]: TEST      R9 1         ; if R9 then PC := 196
137 [-]: JMP       196          ; PC := 196
138 [-]: SELF      R9 R4 K3     ; R10 := R4; R9 := R4[0xf2deaf69]
139 [-]: GETUPVAL  R11 U3       ; R11 := U3
140 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
141 [-]: TEST      R9 0         ; if not R9 then PC := 154
142 [-]: JMP       154          ; PC := 154
143 [-]: LOADK     R9 K25       ; R9 := "U"
144 [-]: GETGLOBAL R10 K5       ; R10 := 0xb009bbc6
145 [-]: MOVE      R11 R4       ; R11 := R4
146 [-]: CALL      R10 2 2      ; R10 := R10(R11)
147 [-]: SELF      R10 R10 K26  ; R11 := R10; R10 := R10[0x7062f184]
148 [-]: LOADK     R12 K0       ; R12 := ""
149 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
150 [-]: LOADK     R11 K27      ; R11 := " "
151 [-]: MOVE      R12 R3       ; R12 := R3
152 [-]: CONCAT    R3 R9 R12    ; R3 := R9 .. R10 .. R11 .. R12
153 [-]: JMP       196          ; PC := 196
154 [-]: SELF      R9 R4 K3     ; R10 := R4; R9 := R4[0xf2deaf69]
155 [-]: GETUPVAL  R11 U4       ; R11 := U4
156 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
157 [-]: TEST      R9 0         ; if not R9 then PC := 170
158 [-]: JMP       170          ; PC := 170
159 [-]: LOADK     R9 K28       ; R9 := "R"
160 [-]: GETGLOBAL R10 K5       ; R10 := 0xb009bbc6
161 [-]: MOVE      R11 R4       ; R11 := R4
162 [-]: CALL      R10 2 2      ; R10 := R10(R11)
163 [-]: SELF      R10 R10 K26  ; R11 := R10; R10 := R10[0x7062f184]
164 [-]: LOADK     R12 K0       ; R12 := ""
165 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
166 [-]: LOADK     R11 K27      ; R11 := " "
167 [-]: MOVE      R12 R3       ; R12 := R3
168 [-]: CONCAT    R3 R9 R12    ; R3 := R9 .. R10 .. R11 .. R12
169 [-]: JMP       196          ; PC := 196
170 [-]: SELF      R9 R4 K3     ; R10 := R4; R9 := R4[0xf2deaf69]
171 [-]: GETGLOBAL R11 K29      ; R11 := gKeyChainItemType
172 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
173 [-]: TEST      R9 0         ; if not R9 then PC := 184
174 [-]: JMP       184          ; PC := 184
175 [-]: GETUPVAL  R9 U0        ; R9 := U0
176 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9[0x42b04007]
177 [-]: LOADK     R11 K30      ; R11 := "/Lotus/Language/Menu/MissionReward_Quest"
178 [-]: LOADBOOL  R12 0 0      ; R12 := false
179 [-]: NEWTABLE  R13 0 1      ; R13 := {}
180 [-]: SETTABLE  R13 K31 R3   ; R13["QUEST"] := R3
181 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
182 [-]: MOVE      R3 R9        ; R3 := R9
183 [-]: JMP       196          ; PC := 196
184 [-]: SELF      R9 R4 K3     ; R10 := R4; R9 := R4[0xf2deaf69]
185 [-]: GETUPVAL  R11 U5       ; R11 := U5
186 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
187 [-]: TEST      R9 0         ; if not R9 then PC := 196
188 [-]: JMP       196          ; PC := 196
189 [-]: GETUPVAL  R9 U0        ; R9 := U0
190 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9[0x42b04007]
191 [-]: LOADK     R11 K32      ; R11 := "<ELITIUM>"
192 [-]: LOADBOOL  R12 1 0      ; R12 := true
193 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
194 [-]: MOVE      R10 R3       ; R10 := R3
195 [-]: CONCAT    R3 R9 R10    ; R3 := R9 .. R10
196 [-]: RETURN    R3 2         ; return R3
197 [-]: RETURN    R0 1         ; return 


; Function #192:
;
; Name:            
; Defined at line: 3518
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xf2deaf69]
  2 [-]: GETGLOBAL R3 K1        ; R3 := gStoreItemType
  3 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x056dcf06]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0x599cf9c1]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: NOT       R2 R2        ; R2 := not R2
 11 [-]: RETURN    R1 3         ; return R1,R2
 12 [-]: GETGLOBAL R1 K4        ; R1 := 0x6728fd22
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 0         ; if not R1 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETGLOBAL R1 K5        ; R1 := 0x60cce7b4
 18 [-]: LOADBOOL  R2 0 0       ; R2 := false
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0[0x78ceba36]
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: LT        0 K7 R1      ; if 1.000000 >= R1 then PC := 34
 23 [-]: JMP       34           ; PC := 34
 24 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x056dcf06]
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: TEST      R1 0         ; if not R1 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x056dcf06]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0x599cf9c1]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: NOT       R2 R2        ; R2 := not R2
 33 [-]: RETURN    R1 3         ; return R1,R2
 34 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0[0x5cc4dde3]
 35 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 36 [-]: GETGLOBAL R2 K9        ; R2 := 0x7b998233
 37 [-]: MOVE      R3 R1        ; R3 := R1
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: TEST      R2 1         ; if R2 then PC := 53
 40 [-]: JMP       53           ; PC := 53
 41 [-]: GETGLOBAL R2 K9        ; R2 := 0x7b998233
 42 [-]: SELF      R3 R1 K2     ; R4 := R1; R3 := R1[0x056dcf06]
 43 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 44 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 45 [-]: TEST      R2 1         ; if R2 then PC := 53
 46 [-]: JMP       53           ; PC := 53
 47 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1[0x056dcf06]
 48 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 49 [-]: SELF      R3 R1 K3     ; R4 := R1; R3 := R1[0x599cf9c1]
 50 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 51 [-]: NOT       R3 R3        ; R3 := not R3
 52 [-]: RETURN    R2 3         ; return R2,R3
 53 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0x056dcf06]
 54 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 55 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0[0x599cf9c1]
 56 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 57 [-]: NOT       R3 R3        ; R3 := not R3
 58 [-]: RETURN    R2 3         ; return R2,R3
 59 [-]: RETURN    R0 1         ; return 


; Function #193:
;
; Name:            
; Defined at line: 3547
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #194:
;
; Name:            
; Defined at line: 3553
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: LOADBOOL  R6 0 0       ; R6 := false
  2 [-]: LOADBOOL  R7 0 0       ; R7 := false
  3 [-]: LOADBOOL  R8 0 0       ; R8 := false
  4 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["items"]
  5 [-]: LEN       R9 R9        ; R9 := # R9
  6 [-]: LT        0 K1 R9      ; if 0.000000 >= R9 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["items"]
  9 [-]: GETTABLE  R3 R9 K2     ; R3 := R9[1.000000]
 10 [-]: JMP       26           ; PC := 26
 11 [-]: GETTABLE  R9 R0 K3     ; R9 := R0["countedItems"]
 12 [-]: LEN       R9 R9        ; R9 := # R9
 13 [-]: LT        0 K1 R9      ; if 0.000000 >= R9 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETTABLE  R9 R0 K3     ; R9 := R0["countedItems"]
 16 [-]: GETTABLE  R9 R9 K2     ; R9 := R9[1.000000]
 17 [-]: GETTABLE  R4 R9 K4     ; R4 := R9["mItemType"]
 18 [-]: JMP       26           ; PC := 26
 19 [-]: GETTABLE  R9 R0 K5     ; R9 := R0["countedStoreItems"]
 20 [-]: LEN       R9 R9        ; R9 := # R9
 21 [-]: LT        0 K1 R9      ; if 0.000000 >= R9 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETTABLE  R9 R0 K5     ; R9 := R0["countedStoreItems"]
 24 [-]: GETTABLE  R9 R9 K2     ; R9 := R9[1.000000]
 25 [-]: GETTABLE  R4 R9 K6     ; R4 := R9["mStoreItem"]
 26 [-]: EQ        1 R3 K7      ; if R3 == nil then PC := 55
 27 [-]: JMP       55           ; PC := 55
 28 [-]: SELF      R9 R3 K8     ; R10 := R3; R9 := R3[0xf278f8a1]
 29 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 30 [-]: MOVE      R5 R9        ; R5 := R9
 31 [-]: SELF      R9 R3 K9     ; R10 := R3; R9 := R3[0x056dcf06]
 32 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 33 [-]: MOVE      R2 R9        ; R2 := R9
 34 [-]: SELF      R9 R3 K10    ; R10 := R3; R9 := R3[0x599cf9c1]
 35 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 36 [-]: NOT       R7 R9        ; R7 := not R9
 37 [-]: GETGLOBAL R9 K11       ; R9 := 0x7b998233
 38 [-]: MOVE      R10 R5       ; R10 := R5
 39 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 40 [-]: TEST      R9 1         ; if R9 then PC := 49
 41 [-]: JMP       49           ; PC := 49
 42 [-]: SELF      R9 R3 K8     ; R10 := R3; R9 := R3[0xf278f8a1]
 43 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 44 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xf2deaf69]
 45 [-]: GETGLOBAL R11 K13      ; R11 := gRecipeItemType
 46 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 47 [-]: MOVE      R6 R9        ; R6 := R9
 48 [-]: JMP       51           ; PC := 51
 49 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 50
 50 [-]: LOADBOOL  R6 1 0       ; R6 := true
 51 [-]: SELF      R9 R3 K14    ; R10 := R3; R9 := R3[0xeb7b349c]
 52 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 53 [-]: MOVE      R8 R9        ; R8 := R9
 54 [-]: JMP       86           ; PC := 86
 55 [-]: EQ        1 R4 K7      ; if R4 == nil then PC := 81
 56 [-]: JMP       81           ; PC := 81
 57 [-]: MOVE      R5 R4        ; R5 := R4
 58 [-]: GETGLOBAL R9 K15       ; R9 := 0xb009bbc6
 59 [-]: MOVE      R10 R4       ; R10 := R4
 60 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 61 [-]: MOVE      R4 R9        ; R4 := R9
 62 [-]: SELF      R9 R4 K12    ; R10 := R4; R9 := R4[0xf2deaf69]
 63 [-]: GETGLOBAL R11 K13      ; R11 := gRecipeItemType
 64 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 65 [-]: MOVE      R6 R9        ; R6 := R9
 66 [-]: TEST      R6 0         ; if not R6 then PC := 74
 67 [-]: JMP       74           ; PC := 74
 68 [-]: GETUPVAL  R9 U0        ; R9 := U0
 69 [-]: MOVE      R10 R4       ; R10 := R4
 70 [-]: CALL      R9 2 3       ; R9,R10 := R9(R10)
 71 [-]: MOVE      R7 R10       ; R7 := R10
 72 [-]: MOVE      R2 R9        ; R2 := R9
 73 [-]: JMP       86           ; PC := 86
 74 [-]: SELF      R9 R4 K9     ; R10 := R4; R9 := R4[0x056dcf06]
 75 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 76 [-]: MOVE      R2 R9        ; R2 := R9
 77 [-]: SELF      R9 R4 K10    ; R10 := R4; R9 := R4[0x599cf9c1]
 78 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 79 [-]: NOT       R7 R9        ; R7 := not R9
 80 [-]: JMP       86           ; PC := 86
 81 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["credits"]
 82 [-]: LT        0 K1 R9      ; if 0.000000 >= R9 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: GETGLOBAL R9 K17       ; R9 := 0x0032441c
 85 [-]: GETTABLE  R2 R9 K18    ; R2 := R9["UITexture_CreditsIcon"]
 86 [-]: MOVE      R9 R2        ; R9 := R2
 87 [-]: MOVE      R10 R6       ; R10 := R6
 88 [-]: MOVE      R11 R5       ; R11 := R5
 89 [-]: MOVE      R12 R7       ; R12 := R7
 90 [-]: MOVE      R13 R8       ; R13 := R8
 91 [-]: RETURN    R9 6         ; return R9,R10,R11,R12,R13
 92 [-]: RETURN    R0 1         ; return 


; Function #195:
;
; Name:            
; Defined at line: 3594
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["credits"]
  3 [-]: LT        0 K1 R2      ; if 0.000000 >= R2 then PC := 25
  4 [-]: JMP       25           ; PC := 25
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x33bdd652
  6 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0x23d5322f]
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: NEWTABLE  R4 0 3       ; R4 := {}
  9 [-]: GETGLOBAL R5 K5        ; R5 := 0x0032441c
 10 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UITexture_CreditsIcon"]
 11 [-]: SETTABLE  R4 K4 R5     ; R4["Icon"] := R5
 12 [-]: SETTABLE  R4 K7 K8     ; R4["Themed"] := true
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: GETTABLE  R5 R5 K10    ; R82 := R5[0x1142c7a8]
 15 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["credits"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: LOADK     R6 K11       ; R6 := " "
 18 [-]: GETGLOBAL R7 K12       ; R7 := 0x603636ad
 19 [-]: LOADK     R8 K13       ; R8 := "/Lotus/Language/Menu/Store_BuyWithCredits"
 20 [-]: NEWTABLE  R9 0 0       ; R9 := {}
 21 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 22 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 23 [-]: SETTABLE  R4 K9 R5     ; R4["NameOverride"] := R5
 24 [-]: CALL      R2 3 1       ; R2(R3,R4)
 25 [-]: LOADK     R2 1         ; R2 := 1.000000
 26 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["items"]
 27 [-]: LEN       R3 R3        ; R3 := # R3
 28 [-]: LOADK     R4 1         ; R4 := 1.000000
 29 [-]: FORPREP   R2 66        ; R2 -= R4; PC := 66
 30 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 31 [-]: GETTABLE  R7 R0 K14    ; R7 := R0["items"]
 32 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 33 [-]: SETTABLE  R6 K15 R7    ; R6["StoreItem"] := R7
 34 [-]: GETTABLE  R7 R6 K15    ; R7 := R6["StoreItem"]
 35 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7[0xf278f8a1]
 36 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 37 [-]: GETGLOBAL R8 K17       ; R8 := 0x7b998233
 38 [-]: MOVE      R9 R7        ; R9 := R7
 39 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 40 [-]: TEST      R8 1         ; if R8 then PC := 61
 41 [-]: JMP       61           ; PC := 61
 42 [-]: SELF      R8 R7 K18    ; R9 := R7; R8 := R7[0xf2deaf69]
 43 [-]: GETGLOBAL R10 K19      ; R10 := gKeyChainItemType
 44 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 45 [-]: TEST      R8 0         ; if not R8 then PC := 61
 46 [-]: JMP       61           ; PC := 61
 47 [-]: GETGLOBAL R8 K12       ; R8 := 0x603636ad
 48 [-]: GETGLOBAL R9 K20       ; R9 := 0x64fb1586
 49 [-]: GETTABLE  R10 R6 K15   ; R10 := R6["StoreItem"]
 50 [-]: SELF      R10 R10 K21  ; R11 := R10; R10 := R10[0xd3a9d01f]
 51 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 52 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 53 [-]: NEWTABLE  R10 0 0      ; R10 := {}
 54 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 55 [-]: GETGLOBAL R9 K12       ; R9 := 0x603636ad
 56 [-]: LOADK     R10 K22      ; R10 := "/Lotus/Language/Menu/MissionReward_Quest"
 57 [-]: NEWTABLE  R11 0 1      ; R11 := {}
 58 [-]: SETTABLE  R11 K23 R8   ; R11["QUEST"] := R8
 59 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 60 [-]: SETTABLE  R6 K9 R9     ; R6["NameOverride"] := R9
 61 [-]: GETGLOBAL R9 K2        ; R9 := 0x33bdd652
 62 [-]: GETTABLE  R9 R9 K3     ; R82 := R9[0x23d5322f]
 63 [-]: MOVE      R10 R1       ; R10 := R1
 64 [-]: MOVE      R11 R6       ; R11 := R6
 65 [-]: CALL      R9 3 1       ; R9(R10,R11)
 66 [-]: FORLOOP   R2 30        ; R2 += R4; if R2 <= R3 then begin PC := 30; R5 := R2 end
 67 [-]: LOADK     R9 1         ; R9 := 1.000000
 68 [-]: GETTABLE  R10 R0 K24   ; R10 := R0["countedStoreItems"]
 69 [-]: LEN       R10 R10      ; R10 := # R10
 70 [-]: LOADK     R11 1        ; R11 := 1.000000
 71 [-]: FORPREP   R9 108       ; R9 -= R11; PC := 108
 72 [-]: GETTABLE  R13 R0 K24   ; R13 := R0["countedStoreItems"]
 73 [-]: GETTABLE  R13 R13 R12  ; R13 := R13[R12]
 74 [-]: GETTABLE  R14 R13 K25  ; R14 := R13["mStoreItem"]
 75 [-]: GETGLOBAL R15 K17      ; R15 := 0x7b998233
 76 [-]: MOVE      R16 R14      ; R16 := R14
 77 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 78 [-]: TEST      R15 1        ; if R15 then PC := 108
 79 [-]: JMP       108          ; PC := 108
 80 [-]: NEWTABLE  R15 0 2      ; R15 := {}
 81 [-]: SETTABLE  R15 K15 R14  ; R15["StoreItem"] := R14
 82 [-]: SETTABLE  R15 K26 K8   ; R15["SkipTitleCase"] := true
 83 [-]: GETGLOBAL R16 K12      ; R16 := 0x603636ad
 84 [-]: LOADK     R17 K27      ; R17 := "/Lotus/Language/Items/LargeBatchItem"
 85 [-]: NEWTABLE  R18 0 2      ; R18 := {}
 86 [-]: GETGLOBAL R19 K29      ; R19 := 0x5f0788c4
 87 [-]: GETGLOBAL R20 K12      ; R20 := 0x603636ad
 88 [-]: GETGLOBAL R21 K20      ; R21 := 0x64fb1586
 89 [-]: SELF      R22 R14 K21  ; R23 := R14; R22 := R14[0xd3a9d01f]
 90 [-]: CALL      R22 2 0      ; R22,... := R22(R23)
 91 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
 92 [-]: NEWTABLE  R22 0 0      ; R22 := {}
 93 [-]: CALL      R20 3 0      ; R20,... := R20(R21,R22)
 94 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
 95 [-]: SETTABLE  R18 K28 R19  ; R18["ITEM"] := R19
 96 [-]: GETUPVAL  R19 U0       ; R19 := U0
 97 [-]: GETTABLE  R19 R19 K10  ; R82 := R19[0x1142c7a8]
 98 [-]: GETTABLE  R20 R13 K31  ; R20 := R13["mItemCount"]
 99 [-]: CALL      R19 2 2      ; R19 := R19(R20)
100 [-]: SETTABLE  R18 K30 R19  ; R18["NUM"] := R19
101 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
102 [-]: SETTABLE  R15 K9 R16   ; R15["NameOverride"] := R16
103 [-]: GETGLOBAL R16 K2       ; R16 := 0x33bdd652
104 [-]: GETTABLE  R16 R16 K3   ; R82 := R16[0x23d5322f]
105 [-]: MOVE      R17 R1       ; R17 := R1
106 [-]: MOVE      R18 R15      ; R18 := R15
107 [-]: CALL      R16 3 1      ; R16(R17,R18)
108 [-]: FORLOOP   R9 72        ; R9 += R11; if R9 <= R10 then begin PC := 72; R12 := R9 end
109 [-]: LOADK     R16 1        ; R16 := 1.000000
110 [-]: GETTABLE  R17 R0 K32   ; R17 := R0["countedItems"]
111 [-]: LEN       R17 R17      ; R17 := # R17
112 [-]: LOADK     R18 1        ; R18 := 1.000000
113 [-]: FORPREP   R16 146      ; R16 -= R18; PC := 146
114 [-]: GETGLOBAL R20 K33      ; R20 := 0xb009bbc6
115 [-]: GETTABLE  R21 R0 K32   ; R21 := R0["countedItems"]
116 [-]: GETTABLE  R21 R21 R19  ; R21 := R21[R19]
117 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["mItemType"]
118 [-]: CALL      R20 2 2      ; R20 := R20(R21)
119 [-]: NEWTABLE  R21 0 2      ; R21 := {}
120 [-]: SETTABLE  R21 K35 R20  ; R21["ItemType"] := R20
121 [-]: GETTABLE  R22 R0 K32   ; R22 := R0["countedItems"]
122 [-]: GETTABLE  R22 R22 R19  ; R22 := R22[R19]
123 [-]: GETTABLE  R22 R22 K31  ; R22 := R22["mItemCount"]
124 [-]: SETTABLE  R21 K36 R22  ; R21["Count"] := R22
125 [-]: GETUPVAL  R22 U0       ; R22 := U0
126 [-]: GETTABLE  R22 R22 K10  ; R82 := R22[0x1142c7a8]
127 [-]: GETTABLE  R23 R0 K32   ; R23 := R0["countedItems"]
128 [-]: GETTABLE  R23 R23 R19  ; R23 := R23[R19]
129 [-]: GETTABLE  R23 R23 K31  ; R23 := R23["mItemCount"]
130 [-]: CALL      R22 2 2      ; R22 := R22(R23)
131 [-]: LOADK     R23 K11      ; R23 := " "
132 [-]: GETGLOBAL R24 K12      ; R24 := 0x603636ad
133 [-]: GETGLOBAL R25 K20      ; R25 := 0x64fb1586
134 [-]: SELF      R26 R20 K21  ; R27 := R20; R26 := R20[0xd3a9d01f]
135 [-]: CALL      R26 2 0      ; R26,... := R26(R27)
136 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
137 [-]: NEWTABLE  R26 0 0      ; R26 := {}
138 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
139 [-]: CONCAT    R22 R22 R24  ; R22 := R22 .. R23 .. R24
140 [-]: SETTABLE  R21 K9 R22   ; R21["NameOverride"] := R22
141 [-]: GETGLOBAL R22 K2       ; R22 := 0x33bdd652
142 [-]: GETTABLE  R22 R22 K3   ; R82 := R22[0x23d5322f]
143 [-]: MOVE      R23 R1       ; R23 := R1
144 [-]: MOVE      R24 R21      ; R24 := R21
145 [-]: CALL      R22 3 1      ; R22(R23,R24)
146 [-]: FORLOOP   R16 114      ; R16 += R18; if R16 <= R17 then begin PC := 114; R19 := R16 end
147 [-]: RETURN    R1 2         ; return R1
148 [-]: RETURN    R0 1         ; return 


; Function #196:
;
; Name:            
; Defined at line: 3631
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: ADD       R2 R0 K0     ; R2 := R0 + 1.000000
  3 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #197:
;
; Name:            
; Defined at line: 3636
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: ADD       R2 R0 K0     ; R2 := R0 + 1.000000
  3 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #198:
;
; Name:            
; Defined at line: 3641
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x6c97a788
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x6e0e9f85]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: SETTABLE  R0 K2 K3     ; R0["missionType"] := 12.000000
  5 [-]: SETTABLE  R0 K4 K5     ; R0["faction"] := 1.000000
  6 [-]: LOADK     R1 K6        ; R1 := "/Lotus/Levels/Proc/Corpus/CorpusGasCityHarvester"
  7 [-]: LOADK     R2 K7        ; R2 := "/Lotus/Types/Game/EnemySpecs/CorpusSquadA"
  8 [-]: GETGLOBAL R3 K9        ; R3 := 0x7ed0a956
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: SETTABLE  R0 K8 R3     ; R0["levelOverride"] := R3
 12 [-]: GETGLOBAL R3 K11       ; R3 := 0xb009bbc6
 13 [-]: MOVE      R4 R2        ; R4 := R2
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: SETTABLE  R0 K10 R3    ; R0["enemySpec"] := R3
 16 [-]: SETTABLE  R0 K12 K13   ; R0["soloMode"] := true
 17 [-]: GETGLOBAL R3 K15       ; R3 := 0x0469f296
 18 [-]: LOADK     R4 K16       ; R4 := "/Lotus/Language/Locations/Jupiter"
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: SETTABLE  R0 K14 R3    ; R0["location"] := R3
 21 [-]: RETURN    R0 2         ; return R0
 22 [-]: RETURN    R0 1         ; return 


; Function #199:
;
; Name:            
; Defined at line: 3662
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x42dcc9f5
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: LOADK     R3 0         ; R3 := 0.000000
  4 [-]: LOADK     R4 100       ; R4 := 100.000000
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: GETGLOBAL R2 K1        ; R2 := 0x5bced4c4
  7 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0x55f27c30]
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K1        ; R3 := 0x5bced4c4
 11 [-]: GETTABLE  R3 R3 K3     ; R82 := R3[0xe4a5b3ca]
 12 [-]: GETGLOBAL R4 K1        ; R4 := 0x5bced4c4
 13 [-]: GETTABLE  R4 R4 K2     ; R82 := R4[0x55f27c30]
 14 [-]: MUL       R5 R1 K4     ; R5 := R1 * 10.000000
 15 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 16 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 17 [-]: MOD       R3 R3 K4     ; R3 := R3 % 10.000000
 18 [-]: EQ        0 R2 K5      ; if R2 ~= 0.000000 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: EQ        0 R3 K5      ; if R3 ~= 0.000000 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: EQ        1 R1 K5      ; if R1 == 0.000000 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: LOADK     R3 1         ; R3 := 1.000000
 25 [-]: GETGLOBAL R4 K6        ; R4 := 0x64fb1586
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: EQ        1 R3 K5      ; if R3 == 0.000000 then PC := 34
 29 [-]: JMP       34           ; PC := 34
 30 [-]: MOVE      R5 R4        ; R5 := R4
 31 [-]: LOADK     R6 K7        ; R6 := "."
 32 [-]: MOVE      R7 R3        ; R7 := R3
 33 [-]: CONCAT    R4 R5 R7     ; R4 := R5 .. R6 .. R7
 34 [-]: MOVE      R5 R4        ; R5 := R4
 35 [-]: LOADK     R6 K8        ; R6 := "%"
 36 [-]: CONCAT    R4 R5 R6     ; R4 := R5 .. R6
 37 [-]: RETURN    R4 2         ; return R4
 38 [-]: RETURN    R0 1         ; return 


; Function #200:
;
; Name:            
; Defined at line: 3682
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R82 := R1[0xa9882367]
  3 [-]: LOADK     R2 K1        ; R2 := "AvatarLight"
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: GETTABLE  R3 R3 K2     ; R82 := R3[0x06d055f9]
  6 [-]: GETUPVAL  R4 U1        ; R4 := U1
  7 [-]: CALL      R4 1 2       ; R4 := R4()
  8 [-]: GETGLOBAL R5 K3        ; R5 := 0x1211d00f
  9 [-]: LOADNIL   R6 R6        ; R6 := nil
 10 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 11 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 12 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 31
 16 [-]: JMP       31           ; PC := 31
 17 [-]: TEST      R0 0         ; if not R0 then PC := 29
 18 [-]: JMP       29           ; PC := 29
 19 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1[0xd199e920]
 20 [-]: CALL      R2 2 1       ; R2(R3)
 21 [-]: GETGLOBAL R2 K6        ; R2 := 0x9ba7909f
 22 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xbf9494fc]
 23 [-]: LOADK     R4 K8        ; R4 := "Graphics.DynamicLighting"
 24 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 25 [-]: SELF      R3 R1 K9     ; R4 := R1; R3 := R1[0xfd9163db]
 26 [-]: NOT       R5 R2        ; R5 := not R2
 27 [-]: CALL      R3 3 1       ; R3(R4,R5)
 28 [-]: JMP       31           ; PC := 31
 29 [-]: SELF      R3 R1 K10    ; R4 := R1; R3 := R1[0x6b5e0c7a]
 30 [-]: CALL      R3 2 1       ; R3(R4)
 31 [-]: RETURN    R0 1         ; return 


; Function #201:
;
; Name:            
; Defined at line: 3695
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #202:
;
; Name:            
; Defined at line: 3700
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["BackgroundMovie"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 24
  6 [-]: JMP       24           ; PC := 24
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0xb2532845]
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0x0469f296
 11 [-]: LOADK     R4 K5        ; R4 := "Kneel"
 12 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: GETUPVAL  R1 U1        ; R1 := U1
 15 [-]: LOADBOOL  R2 0 0       ; R2 := false
 16 [-]: CALL      R1 2 1       ; R1(R2)
 17 [-]: GETGLOBAL R1 K6        ; R1 := 0x89326c93
 18 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x7c1a0374]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETTABLE  R2 R1 K8     ; R2 := R1["postProcess"]
 21 [-]: SETTABLE  R2 K9 K10    ; R2["horizonDOF"] := 0.000000
 22 [-]: GETGLOBAL R2 K1        ; R2 := _T
 23 [-]: SETTABLE  R2 K11 K12   ; R2["SelectedLoadOutPart"] := nil
 24 [-]: RETURN    R0 1         ; return 


; Function #203:
;
; Name:            
; Defined at line: 3713
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x3d106989
  2 [-]: LOADK     R2 K1        ; R2 := "OnSaveLoadOutCompleteCommon"
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0xbe190284
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0xbe190284
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xb411ab6c]
 11 [-]: CALL      R1 2 1       ; R1(R2)
 12 [-]: GETGLOBAL R1 K5        ; R1 := 0xe7f2b02f
 13 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x565be9ee]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 16 [-]: MOVE      R3 R1        ; R3 := R1
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: TEST      R2 1         ; if R2 then PC := 35
 19 [-]: JMP       35           ; PC := 35
 20 [-]: GETGLOBAL R2 K5        ; R2 := 0xe7f2b02f
 21 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xedf454bc]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 0         ; if not R2 then PC := 35
 24 [-]: JMP       35           ; PC := 35
 25 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0xfdd3576f]
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: GETUPVAL  R3 U0        ; R3 := U0
 28 [-]: CALL      R3 1 2       ; R3 := R3()
 29 [-]: SETTABLE  R2 K9 R3     ; R2["eloRating"] := R3
 30 [-]: GETGLOBAL R3 K5        ; R3 := 0xe7f2b02f
 31 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0xee2f24fc]
 32 [-]: MOVE      R5 R2        ; R5 := R2
 33 [-]: MOVE      R6 R0        ; R6 := R0
 34 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 35 [-]: GETGLOBAL R3 K5        ; R3 := 0xe7f2b02f
 36 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0xcf1bf52a]
 37 [-]: CALL      R3 2 1       ; R3(R4)
 38 [-]: RETURN    R0 1         ; return 


; Function #204:
;
; Name:            
; Defined at line: 3732
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADK     R1 K1        ; R1 := ""
  4 [-]: JMP       8            ; PC := 8
  5 [-]: LOADK     R2 K2        ; R2 := " "
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CONCAT    R1 R2 R3     ; R1 := R2 .. R3
  8 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0xca9ea368]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K4        ; R3 := 0x603636ad
 11 [-]: SELF      R4 R0 K5     ; R5 := R0; R4 := R0[0xd3a9d01f]
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x6d604ba7]
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: LOADNIL   R5 R5        ; R5 := nil
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: LOADK     R4 K7        ; R4 := "<p><font face=\"Noto Sans\"><b>"
 18 [-]: GETGLOBAL R5 K4        ; R5 := 0x603636ad
 19 [-]: LOADK     R6 K8        ; R6 := "/Lotus/Language/Menu/LevelAbbreviation"
 20 [-]: LOADNIL   R7 R7        ; R7 := nil
 21 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 22 [-]: LOADK     R6 K2        ; R6 := " "
 23 [-]: GETGLOBAL R7 K9        ; R7 := 0x64fb1586
 24 [-]: MOVE      R8 R2        ; R8 := R2
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: LOADK     R8 K10       ; R8 := " </b>"
 27 [-]: MOVE      R9 R3        ; R9 := R3
 28 [-]: MOVE      R10 R1       ; R10 := R1
 29 [-]: LOADK     R11 K11      ; R11 := "</font></p>"
 30 [-]: CONCAT    R4 R4 R11    ; R4 := R4 .. R5 .. R6 .. R7 .. R8 .. R9 .. R10 .. R11
 31 [-]: RETURN    R4 2         ; return R4
 32 [-]: RETURN    R0 1         ; return 


; Function #205:
;
; Name:            
; Defined at line: 3743
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["gCorpusHarvesterFinisherVictim"]
  3 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: LOADBOOL  R1 1 0       ; R1 := true
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 40
 11 [-]: JMP       40           ; PC := 40
 12 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 13 [-]: GETGLOBAL R2 K3        ; R2 := 0xbe190284
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 40
 16 [-]: JMP       40           ; PC := 40
 17 [-]: GETGLOBAL R1 K3        ; R1 := 0xbe190284
 18 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xa51542f4]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 40
 24 [-]: JMP       40           ; PC := 40
 25 [-]: LOADK     R2 1         ; R2 := 1.000000
 26 [-]: LEN       R3 R1        ; R3 := # R1
 27 [-]: LOADK     R4 1         ; R4 := 1.000000
 28 [-]: FORPREP   R2 39        ; R2 -= R4; PC := 39
 29 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 30 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["playerName"]
 31 [-]: SELF      R7 R0 K6     ; R8 := R0; R7 := R0[0x5e651723]
 32 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 33 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7[0x5ca33548]
 34 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 35 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: LOADBOOL  R6 1 0       ; R6 := true
 38 [-]: RETURN    R6 2         ; return R6
 39 [-]: FORLOOP   R2 29        ; R2 += R4; if R2 <= R3 then begin PC := 29; R5 := R2 end
 40 [-]: LOADBOOL  R6 0 0       ; R6 := false
 41 [-]: RETURN    R6 2         ; return R6
 42 [-]: RETURN    R0 1         ; return 


; Function #206:
;
; Name:            
; Defined at line: 3764
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := UI_MODE_IN_GAME
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x83f4e77c
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x83f4e77c
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xe09828e1]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0xbe190284
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 50
 15 [-]: JMP       50           ; PC := 50
 16 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 17 [-]: MOVE      R3 R1        ; R3 := R1
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 29
 20 [-]: JMP       29           ; PC := 29
 21 [-]: GETGLOBAL R2 K4        ; R2 := 0xbe190284
 22 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf2deaf69]
 23 [-]: MOVE      R4 R1        ; R4 := R1
 24 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 25 [-]: TEST      R2 0         ; if not R2 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: GETGLOBAL R0 K6        ; R0 := UI_MODE_IN_SPACE_SHIP
 28 [-]: JMP       50           ; PC := 50
 29 [-]: GETGLOBAL R2 K4        ; R2 := 0xbe190284
 30 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf2deaf69]
 31 [-]: GETGLOBAL R4 K7        ; R4 := gLotusDojoGameRulesType
 32 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 33 [-]: TEST      R2 1         ; if R2 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: GETGLOBAL R2 K4        ; R2 := 0xbe190284
 36 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf2deaf69]
 37 [-]: GETGLOBAL R4 K8        ; R4 := gLotusDuelGameRulesType
 38 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 39 [-]: TEST      R2 0         ; if not R2 then PC := 43
 40 [-]: JMP       43           ; PC := 43
 41 [-]: GETGLOBAL R0 K9        ; R0 := UI_MODE_IN_DOJO
 42 [-]: JMP       50           ; PC := 50
 43 [-]: GETGLOBAL R2 K4        ; R2 := 0xbe190284
 44 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf2deaf69]
 45 [-]: GETGLOBAL R4 K10       ; R4 := gLotusHubGameRulesType
 46 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 47 [-]: TEST      R2 0         ; if not R2 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: GETGLOBAL R0 K11       ; R0 := UI_MODE_IN_SPACE_HUB
 50 [-]: RETURN    R0 2         ; return R0
 51 [-]: RETURN    R0 1         ; return 


; Function #207:
;
; Name:            
; Defined at line: 3785
; #Upvalues:       0
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: NEWTABLE  R7 0 5       ; R7 := {}
  2 [-]: SETTABLE  R7 K0 K1     ; R7["isMultiline"] := false
  3 [-]: SETTABLE  R7 K2 K1     ; R7["cancelDisabled"] := false
  4 [-]: SETTABLE  R7 K3 K1     ; R7["forChat"] := false
  5 [-]: SETTABLE  R7 K4 K5     ; R7["desc"] := nil
  6 [-]: SETTABLE  R7 K6 K1     ; R7["isEmail"] := false
  7 [-]: EQ        1 R6 K5      ; if R6 == nil then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETGLOBAL R8 K7        ; R8 := 0xcfc01047
 10 [-]: MOVE      R9 R6        ; R9 := R6
 11 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 12 [-]: JMP       14           ; PC := 14
 13 [-]: SETTABLE  R7 R11 R12   ; R7[R11] := R12
 14 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 13; R10 := R11 end
 15 [-]: JMP       13           ; PC := 13
 16 [-]: GETGLOBAL R13 K8       ; R13 := 0x34291f5c
 17 [-]: GETTABLE  R13 R13 K9   ; R82 := R13[0x1467d5f4]
 18 [-]: CALL      R13 1 2      ; R13 := R13()
 19 [-]: TEST      R13 1        ; if R13 then PC := 31
 20 [-]: JMP       31           ; PC := 31
 21 [-]: GETGLOBAL R13 K8       ; R13 := 0x34291f5c
 22 [-]: GETTABLE  R13 R13 K10  ; R82 := R13[0x399826a5]
 23 [-]: CALL      R13 1 2      ; R13 := R13()
 24 [-]: TEST      R13 1        ; if R13 then PC := 31
 25 [-]: JMP       31           ; PC := 31
 26 [-]: GETGLOBAL R13 K8       ; R13 := 0x34291f5c
 27 [-]: GETTABLE  R13 R13 K11  ; R82 := R13[0xe6b41adb]
 28 [-]: CALL      R13 1 2      ; R13 := R13()
 29 [-]: TEST      R13 0        ; if not R13 then PC := 68
 30 [-]: JMP       68           ; PC := 68
 31 [-]: GETGLOBAL R13 K8       ; R13 := 0x34291f5c
 32 [-]: GETTABLE  R13 R13 K12  ; R82 := R13[0x94617168]
 33 [-]: CALL      R13 1 2      ; R13 := R13()
 34 [-]: TEST      R13 0        ; if not R13 then PC := 68
 35 [-]: JMP       68           ; PC := 68
 36 [-]: GETGLOBAL R13 K13      ; R13 := 0x603636ad
 37 [-]: MOVE      R14 R1       ; R14 := R1
 38 [-]: NEWTABLE  R15 0 0      ; R15 := {}
 39 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 40 [-]: MOVE      R1 R13       ; R1 := R13
 41 [-]: EQ        1 R3 K14     ; if R3 == 0.000000 then PC := 56
 42 [-]: JMP       56           ; PC := 56
 43 [-]: GETGLOBAL R13 K15      ; R13 := 0x89326c93
 44 [-]: SELF      R13 R13 K16  ; R14 := R13; R13 := R13[0xa3eb3f6b]
 45 [-]: MOVE      R15 R2       ; R15 := R2
 46 [-]: MOVE      R16 R1       ; R16 := R1
 47 [-]: MOVE      R17 R1       ; R17 := R1
 48 [-]: LOADBOOL  R18 0 0      ; R18 := false
 49 [-]: GETTABLE  R19 R7 K6    ; R19 := R7["isEmail"]
 50 [-]: GETTABLE  R20 R7 K3    ; R20 := R7["forChat"]
 51 [-]: MOVE      R21 R5       ; R21 := R5
 52 [-]: MOVE      R22 R3       ; R22 := R3
 53 [-]: TAILCALL  R13 10 0     ; R13,... := R13(R14,R15,R16,R17,R18,R19,R20,R21,R22)
 54 [-]: RETURN    R13 0        ; return R13,...
 55 [-]: JMP       148          ; PC := 148
 56 [-]: GETGLOBAL R13 K15      ; R13 := 0x89326c93
 57 [-]: SELF      R13 R13 K17  ; R14 := R13; R13 := R13[0xbf89a347]
 58 [-]: MOVE      R15 R2       ; R15 := R2
 59 [-]: MOVE      R16 R1       ; R16 := R1
 60 [-]: MOVE      R17 R1       ; R17 := R1
 61 [-]: LOADBOOL  R18 0 0      ; R18 := false
 62 [-]: GETTABLE  R19 R7 K6    ; R19 := R7["isEmail"]
 63 [-]: GETTABLE  R20 R7 K3    ; R20 := R7["forChat"]
 64 [-]: MOVE      R21 R5       ; R21 := R5
 65 [-]: TAILCALL  R13 9 0      ; R13,... := R13(R14,R15,R16,R17,R18,R19,R20,R21)
 66 [-]: RETURN    R13 0        ; return R13,...
 67 [-]: JMP       148          ; PC := 148
 68 [-]: GETGLOBAL R13 K18      ; R13 := 0x7b998233
 69 [-]: GETGLOBAL R14 K19      ; R14 := 0x0032441c
 70 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["UIMovie_InputDialogMovie"]
 71 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 72 [-]: TEST      R13 1        ; if R13 then PC := 148
 73 [-]: JMP       148          ; PC := 148
 74 [-]: LOADNIL   R13 R13      ; R13 := nil
 75 [-]: GETGLOBAL R14 K18      ; R14 := 0x7b998233
 76 [-]: MOVE      R15 R0       ; R15 := R0
 77 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 78 [-]: TEST      R14 1        ; if R14 then PC := 86
 79 [-]: JMP       86           ; PC := 86
 80 [-]: SELF      R14 R0 K21   ; R15 := R0; R14 := R0[0x1fd6abd0]
 81 [-]: GETGLOBAL R16 K19      ; R16 := 0x0032441c
 82 [-]: GETTABLE  R16 R16 K20  ; R16 := R16["UIMovie_InputDialogMovie"]
 83 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 84 [-]: MOVE      R13 R14      ; R13 := R14
 85 [-]: JMP       92           ; PC := 92
 86 [-]: GETGLOBAL R14 K22      ; R14 := 0x9ba7909f
 87 [-]: SELF      R14 R14 K23  ; R15 := R14; R14 := R14[0xcfba257f]
 88 [-]: GETGLOBAL R16 K19      ; R16 := 0x0032441c
 89 [-]: GETTABLE  R16 R16 K20  ; R16 := R16["UIMovie_InputDialogMovie"]
 90 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 91 [-]: MOVE      R13 R14      ; R13 := R14
 92 [-]: SELF      R14 R13 K24  ; R15 := R13; R14 := R13[0xe4162eed]
 93 [-]: LOADK     R16 K25      ; R16 := "SetYesTag"
 94 [-]: LOADK     R17 K26      ; R17 := "/Menu/Confirm_Item_Ok"
 95 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
 96 [-]: SELF      R14 R13 K24  ; R15 := R13; R14 := R13[0xe4162eed]
 97 [-]: LOADK     R16 K27      ; R16 := "SetNoTag"
 98 [-]: LOADK     R17 K28      ; R17 := "/Menu/Confirm_Item_Cancel"
 99 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
100 [-]: GETTABLE  R14 R7 K2    ; R14 := R7["cancelDisabled"]
101 [-]: TEST      R14 0        ; if not R14 then PC := 107
102 [-]: JMP       107          ; PC := 107
103 [-]: SELF      R14 R13 K24  ; R15 := R13; R14 := R13[0xe4162eed]
104 [-]: LOADK     R16 K29      ; R16 := "SetCancelEnable"
105 [-]: LOADK     R17 K30      ; R17 := "false"
106 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
107 [-]: SELF      R14 R13 K31  ; R15 := R13; R14 := R13[0xf56f3887]
108 [-]: LOADK     R16 K32      ; R16 := "SetCaption"
109 [-]: NEWTABLE  R17 1 0      ; R17 := {}
110 [-]: MOVE      R18 R1       ; R18 := R1
111 [-]: SETLIST   R17 1 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
112 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
113 [-]: GETTABLE  R14 R7 K4    ; R14 := R7["desc"]
114 [-]: EQ        1 R14 K5     ; if R14 == nil then PC := 122
115 [-]: JMP       122          ; PC := 122
116 [-]: SELF      R14 R13 K31  ; R15 := R13; R14 := R13[0xf56f3887]
117 [-]: LOADK     R16 K33      ; R16 := "SetText"
118 [-]: NEWTABLE  R17 1 0      ; R17 := {}
119 [-]: GETTABLE  R18 R7 K4    ; R18 := R7["desc"]
120 [-]: SETLIST   R17 1 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
121 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
122 [-]: GETTABLE  R14 R7 K0    ; R14 := R7["isMultiline"]
123 [-]: TEST      R14 0        ; if not R14 then PC := 129
124 [-]: JMP       129          ; PC := 129
125 [-]: SELF      R14 R13 K24  ; R15 := R13; R14 := R13[0xe4162eed]
126 [-]: LOADK     R16 K34      ; R16 := "SetMultiline"
127 [-]: LOADK     R17 K35      ; R17 := ""
128 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
129 [-]: SELF      R14 R13 K31  ; R15 := R13; R14 := R13[0xf56f3887]
130 [-]: LOADK     R16 K36      ; R16 := "SetContent"
131 [-]: NEWTABLE  R17 1 0      ; R17 := {}
132 [-]: MOVE      R18 R2       ; R18 := R2
133 [-]: SETLIST   R17 1 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 1
134 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
135 [-]: EQ        1 R3 K14     ; if R3 == 0.000000 then PC := 141
136 [-]: JMP       141          ; PC := 141
137 [-]: SELF      R14 R13 K24  ; R15 := R13; R14 := R13[0xe4162eed]
138 [-]: LOADK     R16 K37      ; R16 := "SetMaxChars"
139 [-]: MOVE      R17 R3       ; R17 := R3
140 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
141 [-]: SELF      R14 R13 K24  ; R15 := R13; R14 := R13[0xe4162eed]
142 [-]: LOADK     R16 K38      ; R16 := "SetCallback"
143 [-]: MOVE      R17 R4       ; R17 := R4
144 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
145 [-]: LOADBOOL  R14 1 0      ; R14 := true
146 [-]: MOVE      R15 R13      ; R15 := R13
147 [-]: RETURN    R14 3        ; return R14,R15
148 [-]: RETURN    R0 1         ; return 


; Function #208:
;
; Name:            
; Defined at line: 3839
; #Upvalues:       1
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETUPVAL  R7 U0        ; R7 := U0
  2 [-]: MOVE      R8 R0        ; R8 := R0
  3 [-]: MOVE      R9 R1        ; R9 := R1
  4 [-]: MOVE      R10 R2       ; R10 := R2
  5 [-]: MOVE      R11 R3       ; R11 := R3
  6 [-]: MOVE      R12 R4       ; R12 := R4
  7 [-]: MOVE      R13 R5       ; R13 := R5
  8 [-]: MOVE      R14 R6       ; R14 := R6
  9 [-]: TAILCALL  R7 8 0       ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
 10 [-]: RETURN    R7 0         ; return R7,...
 11 [-]: RETURN    R0 1         ; return 


; Function #209:
;
; Name:            
; Defined at line: 3843
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R0 0         ; R0 := 0.000000
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x25d99d89
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 21
  7 [-]: JMP       21           ; PC := 21
  8 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1[0x29ec8b5e]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: LOADK     R3 1         ; R3 := 1.000000
 11 [-]: LEN       R4 R2        ; R4 := # R2
 12 [-]: LOADK     R5 1         ; R5 := 1.000000
 13 [-]: FORPREP   R3 20        ; R3 -= R5; PC := 20
 14 [-]: GETGLOBAL R7 K3        ; R7 := 0xa94df70b
 15 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7[0xc3f26174]
 16 [-]: GETTABLE  R9 R2 R6     ; R9 := R2[R6]
 17 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["mTier"]
 18 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 19 [-]: ADD       R0 R0 R7     ; R0 := R0 + R7
 20 [-]: FORLOOP   R3 14        ; R3 += R5; if R3 <= R4 then begin PC := 14; R6 := R3 end
 21 [-]: RETURN    R0 2         ; return R0
 22 [-]: RETURN    R0 1         ; return 


; Function #210:
;
; Name:            
; Defined at line: 3856
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 31
  4 [-]: JMP       31           ; PC := 31
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x64fb1586
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 11 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 31
 12 [-]: JMP       31           ; PC := 31
 13 [-]: GETGLOBAL R1 K0        ; R1 := _T
 14 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
 15 [-]: GETGLOBAL R2 K2        ; R2 := 0x64fb1586
 16 [-]: MOVE      R3 R0        ; R3 := R0
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 19 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mVisible"]
 20 [-]: TEST      R1 0         ; if not R1 then PC := 31
 21 [-]: JMP       31           ; PC := 31
 22 [-]: GETGLOBAL R1 K0        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedAlerts"]
 24 [-]: GETGLOBAL R2 K2        ; R2 := 0x64fb1586
 25 [-]: MOVE      R3 R0        ; R3 := R0
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 28 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mAlertInfo"]
 29 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mMissionInfo"]
 30 [-]: RETURN    R1 2         ; return R1
 31 [-]: LOADNIL   R1 R1        ; R1 := nil
 32 [-]: RETURN    R1 2         ; return R1
 33 [-]: RETURN    R0 1         ; return 


; Function #211:
;
; Name:            
; Defined at line: 3863
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #212:
;
; Name:            
; Defined at line: 3867
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedInvasionInfo"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x64fb1586
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #213:
;
; Name:            
; Defined at line: 3871
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #214:
;
; Name:            
; Defined at line: 3875
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x0032441c
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["CachedGoalInfo"]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x64fb1586
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #215:
;
; Name:            
; Defined at line: 3879
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #216:
;
; Name:            
; Defined at line: 3883
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x64fb1586
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedGoalInfo"]
  6 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
  7 [-]: TEST      R2 0         ; if not R2 then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 10 [-]: GETGLOBAL R3 K1        ; R3 := 0x0032441c
 11 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["CachedGoalInfo"]
 12 [-]: GETTABLE  R3 R3 R1     ; R3 := R3[R1]
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mIcon"]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["CachedGoalInfo"]
 19 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 20 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mIcon"]
 21 [-]: RETURN    R2 2         ; return R2
 22 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 23 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UITexture_Event"]
 24 [-]: RETURN    R2 2         ; return R2
 25 [-]: RETURN    R0 1         ; return 


; Function #217:
;
; Name:            
; Defined at line: 3891
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #218:
;
; Name:            
; Defined at line: 3895
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 1         ; if R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: LOADK     R1 K0        ; R1 := ""
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: GETGLOBAL R1 K1        ; R1 := 0x6c97a788
  6 [-]: GETTABLE  R1 R1 K2     ; R82 := R1[0x5c44e915]
  7 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["missionType"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: LOADNIL   R2 R2        ; R2 := nil
 10 [-]: EQ        0 R1 K4      ; if R1 ~= nil then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADK     R1 K0        ; R1 := ""
 13 [-]: JMP       80           ; PC := 80
 14 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["forceAllyFaction"]
 15 [-]: TEST      R3 0         ; if not R3 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: MOVE      R2 R1        ; R2 := R1
 18 [-]: LOADK     R1 K6        ; R1 := "Crossfire"
 19 [-]: JMP       80           ; PC := 80
 20 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["goalTag"]
 21 [-]: GETUPVAL  R4 U0        ; R4 := U0
 22 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LOADK     R1 K8        ; R1 := "KuvaSurvival"
 25 [-]: JMP       80           ; PC := 80
 26 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["missionType"]
 27 [-]: EQ        0 R3 K9      ; if R3 ~= 31.000000 then PC := 80
 28 [-]: JMP       80           ; PC := 80
 29 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["faction"]
 30 [-]: EQ        0 R3 K11     ; if R3 ~= 1.000000 then PC := 80
 31 [-]: JMP       80           ; PC := 80
 32 [-]: GETGLOBAL R3 K12       ; R3 := 0x7b998233
 33 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["levelOverride"]
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: TEST      R3 1         ; if R3 then PC := 80
 36 [-]: JMP       80           ; PC := 80
 37 [-]: GETGLOBAL R3 K14       ; R3 := 0x64fb1586
 38 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["levelOverride"]
 39 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0xed4e0128]
 40 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 41 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 42 [-]: GETGLOBAL R4 K12       ; R4 := 0x7b998233
 43 [-]: GETTABLE  R5 R0 K16    ; R5 := R0["keyChainName"]
 44 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 45 [-]: TEST      R4 0         ; if not R4 then PC := 54
 46 [-]: JMP       54           ; PC := 54
 47 [-]: GETGLOBAL R4 K17       ; R4 := 0x7f5022cf
 48 [-]: GETTABLE  R4 R4 K18    ; R82 := R4[0xa5c556b9]
 49 [-]: MOVE      R5 R3        ; R5 := R3
 50 [-]: LOADK     R6 K19       ; R6 := "Quest"
 51 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 52 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 56
 53 [-]: JMP       56           ; PC := 56
 54 [-]: LOADK     R1 K20       ; R1 := "Generic"
 55 [-]: JMP       80           ; PC := 80
 56 [-]: GETGLOBAL R4 K17       ; R4 := 0x7f5022cf
 57 [-]: GETTABLE  R4 R4 K18    ; R82 := R4[0xa5c556b9]
 58 [-]: GETGLOBAL R5 K17       ; R5 := 0x7f5022cf
 59 [-]: GETTABLE  R5 R5 K21    ; R82 := R5[0x62f9fb80]
 60 [-]: MOVE      R6 R3        ; R6 := R3
 61 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 62 [-]: LOADK     R6 K22       ; R6 := "%u"
 63 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 64 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 80
 65 [-]: JMP       80           ; PC := 80
 66 [-]: GETGLOBAL R5 K17       ; R5 := 0x7f5022cf
 67 [-]: GETTABLE  R5 R5 K23    ; R82 := R5[0x41e2ae25]
 68 [-]: MOVE      R6 R3        ; R6 := R3
 69 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 70 [-]: SUB       R5 R5 R4     ; R5 := R5 - R4
 71 [-]: ADD       R4 R5 K11    ; R4 := R5 + 1.000000
 72 [-]: GETGLOBAL R5 K17       ; R5 := 0x7f5022cf
 73 [-]: GETTABLE  R5 R5 K24    ; R82 := R5[0x1a94c9cc]
 74 [-]: MOVE      R6 R3        ; R6 := R3
 75 [-]: MOVE      R7 R4        ; R7 := R4
 76 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 77 [-]: MOVE      R6 R1        ; R6 := R1
 78 [-]: MOVE      R7 R5        ; R7 := R5
 79 [-]: CONCAT    R1 R6 R7     ; R1 := R6 .. R7
 80 [-]: MOVE      R6 R1        ; R6 := R1
 81 [-]: MOVE      R7 R2        ; R7 := R2
 82 [-]: RETURN    R6 3         ; return R6,R7
 83 [-]: RETURN    R0 1         ; return 


; Function #219:
;
; Name:            
; Defined at line: 3930
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #220:
;
; Name:            
; Defined at line: 3934
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R1 1         ; R1 := 1.000000
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: LOADK     R3 1         ; R3 := 1.000000
  5 [-]: FORPREP   R1 12        ; R1 -= R3; PC := 12
  6 [-]: GETUPVAL  R5 U0        ; R5 := U0
  7 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
  8 [-]: EQ        0 R0 R5      ; if R0 ~= R5 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: LOADBOOL  R5 1 0       ; R5 := true
 11 [-]: RETURN    R5 2         ; return R5
 12 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 13 [-]: LOADBOOL  R5 0 0       ; R5 := false
 14 [-]: RETURN    R5 2         ; return R5
 15 [-]: RETURN    R0 1         ; return 


; Function #221:
;
; Name:            
; Defined at line: 3944
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x603636ad
  2 [-]: GETGLOBAL R2 K1        ; R2 := FactionNames
  3 [-]: ADD       R3 R0 K2     ; R3 := R0 + 1.000000
  4 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
  5 [-]: LOADNIL   R3 R3        ; R3 := nil
  6 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
  7 [-]: RETURN    R1 0         ; return R1,...
  8 [-]: RETURN    R0 1         ; return 


; Function #222:
;
; Name:            
; Defined at line: 3948
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #223:
;
; Name:            
; Defined at line: 3952
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R4 K0        ; R4 := ""
  2 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
  3 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["levelOverride"]
  4 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  5 [-]: TEST      R5 1         ; if R5 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["levelOverride"]
  8 [-]: SELF      R5 R5 K3     ; R6 := R5; R5 := R5[0xed4e0128]
  9 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 10 [-]: MOVE      R4 R5        ; R4 := R5
 11 [-]: LOADNIL   R5 R5        ; R5 := nil
 12 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
 13 [-]: GETGLOBAL R7 K4        ; R7 := 0x83f4e77c
 14 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 15 [-]: TEST      R6 0         ; if not R6 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R5 2         ; return R5
 18 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
 19 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["icon"]
 20 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 21 [-]: TEST      R6 1         ; if R6 then PC := 32
 22 [-]: JMP       32           ; PC := 32
 23 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
 24 [-]: MOVE      R7 R2        ; R7 := R2
 25 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 26 [-]: TEST      R6 1         ; if R6 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: GETTABLE  R5 R2 K5     ; R5 := R2["icon"]
 29 [-]: JMP       301          ; PC := 301
 30 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["icon"]
 31 [-]: JMP       301          ; PC := 301
 32 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["missionType"]
 33 [-]: EQ        0 R6 K8      ; if R6 ~= 22.000000 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
 36 [-]: GETTABLE  R5 R6 K10    ; R5 := R6["UITextures_ArenaLocation"]
 37 [-]: JMP       301          ; PC := 301
 38 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["missionType"]
 39 [-]: EQ        0 R6 K11     ; if R6 ~= 23.000000 then PC := 44
 40 [-]: JMP       44           ; PC := 44
 41 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
 42 [-]: GETTABLE  R5 R6 K12    ; R5 := R6["UITextures_JunctionLocation"]
 43 [-]: JMP       301          ; PC := 301
 44 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["missionType"]
 45 [-]: EQ        0 R6 K13     ; if R6 ~= 28.000000 then PC := 50
 46 [-]: JMP       50           ; PC := 50
 47 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
 48 [-]: GETTABLE  R5 R6 K14    ; R5 := R6["UITextures_EidolonPlains"]
 49 [-]: JMP       301          ; PC := 301
 50 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
 51 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
 52 [-]: MOVE      R7 R4        ; R7 := R4
 53 [-]: LOADK     R8 K17       ; R8 := "Asteroid"
 54 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 55 [-]: TEST      R6 0         ; if not R6 then PC := 67
 56 [-]: JMP       67           ; PC := 67
 57 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
 58 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["UITextures_GrineerAsteroid"]
 59 [-]: GETGLOBAL R7 K19       ; R7 := 0x0c5e62f9
 60 [-]: LOADK     R8 1         ; R8 := 1.000000
 61 [-]: GETGLOBAL R9 K9        ; R9 := 0x0032441c
 62 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["UITextures_GrineerAsteroid"]
 63 [-]: LEN       R9 R9        ; R9 := # R9
 64 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 65 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
 66 [-]: JMP       301          ; PC := 301
 67 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
 68 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
 69 [-]: MOVE      R7 R4        ; R7 := R4
 70 [-]: LOADK     R8 K20       ; R8 := "GasCity"
 71 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 72 [-]: TEST      R6 0         ; if not R6 then PC := 84
 73 [-]: JMP       84           ; PC := 84
 74 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
 75 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["UITextures_GasCity"]
 76 [-]: GETGLOBAL R7 K19       ; R7 := 0x0c5e62f9
 77 [-]: LOADK     R8 1         ; R8 := 1.000000
 78 [-]: GETGLOBAL R9 K9        ; R9 := 0x0032441c
 79 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["UITextures_GasCity"]
 80 [-]: LEN       R9 R9        ; R9 := # R9
 81 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 82 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
 83 [-]: JMP       301          ; PC := 301
 84 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
 85 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
 86 [-]: MOVE      R7 R4        ; R7 := R4
 87 [-]: LOADK     R8 K22       ; R8 := "Galleon"
 88 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 89 [-]: TEST      R6 0         ; if not R6 then PC := 101
 90 [-]: JMP       101          ; PC := 101
 91 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
 92 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["UITextures_GrineerShip"]
 93 [-]: GETGLOBAL R7 K19       ; R7 := 0x0c5e62f9
 94 [-]: LOADK     R8 1         ; R8 := 1.000000
 95 [-]: GETGLOBAL R9 K9        ; R9 := 0x0032441c
 96 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["UITextures_GrineerShip"]
 97 [-]: LEN       R9 R9        ; R9 := # R9
 98 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 99 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
100 [-]: JMP       301          ; PC := 301
101 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
102 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
103 [-]: MOVE      R7 R4        ; R7 := R4
104 [-]: LOADK     R8 K24       ; R8 := "Outpost"
105 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
106 [-]: TEST      R6 0         ; if not R6 then PC := 118
107 [-]: JMP       118          ; PC := 118
108 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
109 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["UITextures_Outpost"]
110 [-]: GETGLOBAL R7 K19       ; R7 := 0x0c5e62f9
111 [-]: LOADK     R8 1         ; R8 := 1.000000
112 [-]: GETGLOBAL R9 K9        ; R9 := 0x0032441c
113 [-]: GETTABLE  R9 R9 K25    ; R9 := R9["UITextures_Outpost"]
114 [-]: LEN       R9 R9        ; R9 := # R9
115 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
116 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
117 [-]: JMP       301          ; PC := 301
118 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
119 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
120 [-]: MOVE      R7 R4        ; R7 := R4
121 [-]: LOADK     R8 K26       ; R8 := "InfestedCorpus"
122 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
123 [-]: TEST      R6 1         ; if R6 then PC := 132
124 [-]: JMP       132          ; PC := 132
125 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
126 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
127 [-]: MOVE      R7 R4        ; R7 := R4
128 [-]: LOADK     R8 K27       ; R8 := "InfestedHive"
129 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
130 [-]: TEST      R6 0         ; if not R6 then PC := 142
131 [-]: JMP       142          ; PC := 142
132 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
133 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["UITextures_InfestedCorpusShip"]
134 [-]: GETGLOBAL R7 K19       ; R7 := 0x0c5e62f9
135 [-]: LOADK     R8 1         ; R8 := 1.000000
136 [-]: GETGLOBAL R9 K9        ; R9 := 0x0032441c
137 [-]: GETTABLE  R9 R9 K28    ; R9 := R9["UITextures_InfestedCorpusShip"]
138 [-]: LEN       R9 R9        ; R9 := # R9
139 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
140 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
141 [-]: JMP       301          ; PC := 301
142 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
143 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
144 [-]: MOVE      R7 R4        ; R7 := R4
145 [-]: LOADK     R8 K29       ; R8 := "IcePlanet"
146 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
147 [-]: TEST      R6 0         ; if not R6 then PC := 159
148 [-]: JMP       159          ; PC := 159
149 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
150 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["UITextures_IcePlanet"]
151 [-]: GETGLOBAL R7 K19       ; R7 := 0x0c5e62f9
152 [-]: LOADK     R8 1         ; R8 := 1.000000
153 [-]: GETGLOBAL R9 K9        ; R9 := 0x0032441c
154 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["UITextures_IcePlanet"]
155 [-]: LEN       R9 R9        ; R9 := # R9
156 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
157 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
158 [-]: JMP       301          ; PC := 301
159 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
160 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
161 [-]: MOVE      R7 R4        ; R7 := R4
162 [-]: LOADK     R8 K31       ; R8 := "Corpus"
163 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
164 [-]: TEST      R6 0         ; if not R6 then PC := 176
165 [-]: JMP       176          ; PC := 176
166 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
167 [-]: GETTABLE  R6 R6 K32    ; R6 := R6["UITextures_CorpusShip"]
168 [-]: GETGLOBAL R7 K19       ; R7 := 0x0c5e62f9
169 [-]: LOADK     R8 1         ; R8 := 1.000000
170 [-]: GETGLOBAL R9 K9        ; R9 := 0x0032441c
171 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["UITextures_CorpusShip"]
172 [-]: LEN       R9 R9        ; R9 := # R9
173 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
174 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
175 [-]: JMP       301          ; PC := 301
176 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
177 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
178 [-]: MOVE      R7 R4        ; R7 := R4
179 [-]: LOADK     R8 K33       ; R8 := "Settlement"
180 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
181 [-]: TEST      R6 0         ; if not R6 then PC := 193
182 [-]: JMP       193          ; PC := 193
183 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
184 [-]: GETTABLE  R6 R6 K34    ; R6 := R6["UITextures_Settlement"]
185 [-]: GETGLOBAL R7 K19       ; R7 := 0x0c5e62f9
186 [-]: LOADK     R8 1         ; R8 := 1.000000
187 [-]: GETGLOBAL R9 K9        ; R9 := 0x0032441c
188 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["UITextures_Settlement"]
189 [-]: LEN       R9 R9        ; R9 := # R9
190 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
191 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
192 [-]: JMP       301          ; PC := 301
193 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
194 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
195 [-]: MOVE      R7 R4        ; R7 := R4
196 [-]: LOADK     R8 K35       ; R8 := "Forest"
197 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
198 [-]: TEST      R6 0         ; if not R6 then PC := 210
199 [-]: JMP       210          ; PC := 210
200 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
201 [-]: GETTABLE  R6 R6 K36    ; R6 := R6["UITextures_GrineerForest"]
202 [-]: GETGLOBAL R7 K19       ; R7 := 0x0c5e62f9
203 [-]: LOADK     R8 1         ; R8 := 1.000000
204 [-]: GETGLOBAL R9 K9        ; R9 := 0x0032441c
205 [-]: GETTABLE  R9 R9 K36    ; R9 := R9["UITextures_GrineerForest"]
206 [-]: LEN       R9 R9        ; R9 := # R9
207 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
208 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
209 [-]: JMP       301          ; PC := 301
210 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
211 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
212 [-]: MOVE      R7 R4        ; R7 := R4
213 [-]: LOADK     R8 K37       ; R8 := "Shipyard"
214 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
215 [-]: TEST      R6 0         ; if not R6 then PC := 227
216 [-]: JMP       227          ; PC := 227
217 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
218 [-]: GETTABLE  R6 R6 K38    ; R6 := R6["UITextures_GrineerShipyard"]
219 [-]: GETGLOBAL R7 K19       ; R7 := 0x0c5e62f9
220 [-]: LOADK     R8 1         ; R8 := 1.000000
221 [-]: GETGLOBAL R9 K9        ; R9 := 0x0032441c
222 [-]: GETTABLE  R9 R9 K38    ; R9 := R9["UITextures_GrineerShipyard"]
223 [-]: LEN       R9 R9        ; R9 := # R9
224 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
225 [-]: GETTABLE  R5 R6 R7     ; R5 := R6[R7]
226 [-]: JMP       301          ; PC := 301
227 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
228 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
229 [-]: MOVE      R7 R4        ; R7 := R4
230 [-]: LOADK     R8 K39       ; R8 := "SpaceBattles/"
231 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
232 [-]: TEST      R6 0         ; if not R6 then PC := 237
233 [-]: JMP       237          ; PC := 237
234 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
235 [-]: GETTABLE  R5 R6 K40    ; R5 := R6["UITextures_ArchwingTrench"]
236 [-]: JMP       301          ; PC := 301
237 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
238 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
239 [-]: MOVE      R7 R4        ; R7 := R4
240 [-]: LOADK     R8 K41       ; R8 := "GrineerOcean"
241 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
242 [-]: TEST      R6 0         ; if not R6 then PC := 247
243 [-]: JMP       247          ; PC := 247
244 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
245 [-]: GETTABLE  R5 R6 K42    ; R5 := R6["UITextures_GrineerOcean"]
246 [-]: JMP       301          ; PC := 301
247 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
248 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
249 [-]: MOVE      R7 R4        ; R7 := R4
250 [-]: LOADK     R8 K43       ; R8 := "OrokinMoon"
251 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
252 [-]: TEST      R6 0         ; if not R6 then PC := 257
253 [-]: JMP       257          ; PC := 257
254 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
255 [-]: GETTABLE  R5 R6 K44    ; R5 := R6["UITextures_OrokinMoon"]
256 [-]: JMP       301          ; PC := 301
257 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
258 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
259 [-]: MOVE      R7 R4        ; R7 := R4
260 [-]: LOADK     R8 K45       ; R8 := "OrokinTower"
261 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
262 [-]: TEST      R6 0         ; if not R6 then PC := 267
263 [-]: JMP       267          ; PC := 267
264 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
265 [-]: GETTABLE  R5 R6 K46    ; R5 := R6["UITextures_OrokinTower"]
266 [-]: JMP       301          ; PC := 301
267 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
268 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
269 [-]: MOVE      R7 R4        ; R7 := R4
270 [-]: LOADK     R8 K47       ; R8 := "Space/"
271 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
272 [-]: TEST      R6 0         ; if not R6 then PC := 277
273 [-]: JMP       277          ; PC := 277
274 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
275 [-]: GETTABLE  R5 R6 K48    ; R5 := R6["UITextures_ArchwingFreeFlight"]
276 [-]: JMP       301          ; PC := 301
277 [-]: GETGLOBAL R6 K15       ; R6 := 0x7f5022cf
278 [-]: GETTABLE  R6 R6 K16    ; R82 := R6[0xa5c556b9]
279 [-]: MOVE      R7 R4        ; R7 := R4
280 [-]: LOADK     R8 K49       ; R8 := "Fortress"
281 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
282 [-]: TEST      R6 0         ; if not R6 then PC := 287
283 [-]: JMP       287          ; PC := 287
284 [-]: GETGLOBAL R6 K9        ; R6 := 0x0032441c
285 [-]: GETTABLE  R5 R6 K50    ; R5 := R6["UITextures_GrineerFortress"]
286 [-]: JMP       301          ; PC := 301
287 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
288 [-]: MOVE      R7 R1        ; R7 := R1
289 [-]: CALL      R6 2 2       ; R6 := R6(R7)
290 [-]: TEST      R6 1         ; if R6 then PC := 295
291 [-]: JMP       295          ; PC := 295
292 [-]: GETTABLE  R6 R1 K51    ; R6 := R1["nodeType"]
293 [-]: EQ        1 R6 K52     ; if R6 == 1.000000 then PC := 297
294 [-]: JMP       297          ; PC := 297
295 [-]: EQ        1 R3 K53     ; if R3 == nil then PC := 301
296 [-]: JMP       301          ; PC := 301
297 [-]: GETUPVAL  R6 U0        ; R6 := U0
298 [-]: GETTABLE  R7 R1 K54    ; R7 := R1["name"]
299 [-]: CALL      R6 2 2       ; R6 := R6(R7)
300 [-]: MOVE      R5 R6        ; R5 := R6
301 [-]: RETURN    R5 2         ; return R5
302 [-]: RETURN    R0 1         ; return 


; Function #224:
;
; Name:            
; Defined at line: 4013
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #225:
;
; Name:            
; Defined at line: 4017
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["levelOverride"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x64fb1586
  7 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["levelOverride"]
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xed4e0128]
  9 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 10 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 11 [-]: EQ        1 R1 K4      ; if R1 == "/Lotus/Levels/Proc/Orokin/OrokinMoonSpy" then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 14
 14 [-]: LOADBOOL  R1 1 0       ; R1 := true
 15 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["forceAllyFaction"]
 16 [-]: TEST      R2 1         ; if R2 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: TEST      R1 0         ; if not R1 then PC := 91
 19 [-]: JMP       91           ; PC := 91
 20 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["invasionAllyFaction"]
 21 [-]: EQ        1 R2 K8      ; if R2 == 3.000000 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: TEST      R1 0         ; if not R1 then PC := 72
 24 [-]: JMP       72           ; PC := 72
 25 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["faction"]
 26 [-]: EQ        0 R3 K10     ; if R3 ~= 0.000000 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: LOADK     R2 1         ; R2 := 1.000000
 29 [-]: JMP       72           ; PC := 72
 30 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["faction"]
 31 [-]: EQ        0 R3 K11     ; if R3 ~= 2.000000 then PC := 71
 32 [-]: JMP       71           ; PC := 71
 33 [-]: LOADK     R3 K12       ; R3 := ""
 34 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 35 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["enemySpec"]
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: TEST      R4 1         ; if R4 then PC := 47
 38 [-]: JMP       47           ; PC := 47
 39 [-]: MOVE      R4 R3        ; R4 := R3
 40 [-]: GETGLOBAL R5 K14       ; R5 := 0x7f5022cf
 41 [-]: GETTABLE  R5 R5 K15    ; R82 := R5[0x04981ab3]
 42 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["enemySpec"]
 43 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0xed4e0128]
 44 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 45 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 46 [-]: CONCAT    R3 R4 R5     ; R3 := R4 .. R5
 47 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 48 [-]: GETTABLE  R5 R0 K16    ; R5 := R0["extraEnemySpec"]
 49 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 50 [-]: TEST      R4 1         ; if R4 then PC := 60
 51 [-]: JMP       60           ; PC := 60
 52 [-]: MOVE      R4 R3        ; R4 := R3
 53 [-]: GETGLOBAL R5 K14       ; R5 := 0x7f5022cf
 54 [-]: GETTABLE  R5 R5 K15    ; R82 := R5[0x04981ab3]
 55 [-]: GETTABLE  R6 R0 K16    ; R6 := R0["extraEnemySpec"]
 56 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0xed4e0128]
 57 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 58 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 59 [-]: CONCAT    R3 R4 R5     ; R3 := R4 .. R5
 60 [-]: GETGLOBAL R4 K14       ; R4 := 0x7f5022cf
 61 [-]: GETTABLE  R4 R4 K17    ; R82 := R4[0xa5c556b9]
 62 [-]: MOVE      R5 R3        ; R5 := R3
 63 [-]: LOADK     R6 K18       ; R6 := "corpus"
 64 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 65 [-]: TEST      R4 0         ; if not R4 then PC := 69
 66 [-]: JMP       69           ; PC := 69
 67 [-]: LOADK     R2 1         ; R2 := 1.000000
 68 [-]: JMP       72           ; PC := 72
 69 [-]: LOADK     R2 0         ; R2 := 0.000000
 70 [-]: JMP       72           ; PC := 72
 71 [-]: LOADK     R2 0         ; R2 := 0.000000
 72 [-]: GETUPVAL  R4 U0        ; R4 := U0
 73 [-]: MOVE      R5 R2        ; R5 := R2
 74 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 75 [-]: GETUPVAL  R5 U0        ; R5 := U0
 76 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["faction"]
 77 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 78 [-]: GETGLOBAL R6 K14       ; R6 := 0x7f5022cf
 79 [-]: GETTABLE  R6 R6 K19    ; R82 := R6[0x3f3e4d12]
 80 [-]: MOVE      R7 R4        ; R7 := R4
 81 [-]: LOADK     R8 K20       ; R8 := " "
 82 [-]: GETGLOBAL R9 K21       ; R9 := 0x603636ad
 83 [-]: LOADK     R10 K22      ; R10 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
 84 [-]: LOADNIL   R11 R11      ; R11 := nil
 85 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 86 [-]: LOADK     R10 K20      ; R10 := " "
 87 [-]: MOVE      R11 R5       ; R11 := R5
 88 [-]: CONCAT    R7 R7 R11    ; R7 := R7 .. R8 .. R9 .. R10 .. R11
 89 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 90 [-]: RETURN    R6 2         ; return R6
 91 [-]: RETURN    R0 1         ; return 


; Function #226:
;
; Name:            
; Defined at line: 4054
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #227:
;
; Name:            
; Defined at line: 4058
; #Upvalues:       9
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  60

  1 [-]: MOVE      R4 R3        ; R4 := R3
  2 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
  3 [-]: MOVE      R6 R4        ; R6 := R4
  4 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  5 [-]: TEST      R5 0         ; if not R5 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETUPVAL  R5 U0        ; R5 := U0
  8 [-]: CALL      R5 1 2       ; R5 := R5()
  9 [-]: GETTABLE  R4 R5 K1     ; R4 := R5["mMovie"]
 10 [-]: LOADNIL   R6 R6        ; R6 := nil
 11 [-]: GETUPVAL  R7 U1        ; R7 := U1
 12 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["name"]
 13 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 14 [-]: GETUPVAL  R8 U2        ; R8 := U2
 15 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["name"]
 16 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 17 [-]: LOADNIL   R9 R13       ; R9 := R10 := R11 := R12 := R13 := nil
 18 [-]: GETGLOBAL R14 K3       ; R14 := 0x64fb1586
 19 [-]: GETTABLE  R15 R0 K2    ; R15 := R0["name"]
 20 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 21 [-]: LOADBOOL  R15 0 0      ; R15 := false
 22 [-]: LOADNIL   R16 R16      ; R16 := nil
 23 [-]: GETTABLE  R17 R0 K4    ; R17 := R0["radialSector"]
 24 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
 25 [-]: MOVE      R19 R17      ; R19 := R17
 26 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 27 [-]: TEST      R18 1        ; if R18 then PC := 49
 28 [-]: JMP       49           ; PC := 49
 29 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
 30 [-]: GETTABLE  R19 R17 K5   ; R19 := R17["keyChain"]
 31 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 32 [-]: TEST      R18 1        ; if R18 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: LOADBOOL  R15 1 0      ; R15 := true
 35 [-]: GETTABLE  R16 R17 K5   ; R16 := R17["keyChain"]
 36 [-]: JMP       49           ; PC := 49
 37 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
 38 [-]: GETTABLE  R19 R1 K6    ; R19 := R1["levelKeyName"]
 39 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 40 [-]: TEST      R18 1        ; if R18 then PC := 49
 41 [-]: JMP       49           ; PC := 49
 42 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
 43 [-]: GETTABLE  R19 R1 K7    ; R19 := R1["keyChainName"]
 44 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 45 [-]: TEST      R18 1        ; if R18 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: LOADBOOL  R15 1 0      ; R15 := true
 48 [-]: GETTABLE  R16 R1 K7    ; R16 := R1["keyChainName"]
 49 [-]: GETTABLE  R18 R0 K8    ; R18 := R0["nodeType"]
 50 [-]: EQ        1 R18 K10    ; if R18 == 7.000000 then PC := 53
 51 [-]: JMP       53           ; PC := 53
 52 [-]: LOADBOOL  R18 0 1      ; R18 := false; PC := 53
 53 [-]: LOADBOOL  R18 1 0      ; R18 := true
 54 [-]: GETTABLE  R19 R0 K11   ; R19 := R0["reconstructionProgress"]
 55 [-]: TEST      R19 0        ; if not R19 then PC := 79
 56 [-]: JMP       79           ; PC := 79
 57 [-]: LOADNIL   R19 R19      ; R19 := nil
 58 [-]: GETGLOBAL R20 K12      ; R20 := _T
 59 [-]: GETTABLE  R20 R20 K13  ; R20 := R20["CachedConstructionProjects"]
 60 [-]: LOADK     R21 1        ; R21 := 1.000000
 61 [-]: LEN       R22 R20      ; R22 := # R20
 62 [-]: LOADK     R23 1        ; R23 := 1.000000
 63 [-]: FORPREP   R21 72       ; R21 -= R23; PC := 72
 64 [-]: GETTABLE  R25 R20 R24  ; R25 := R20[R24]
 65 [-]: GETTABLE  R26 R25 K14  ; R26 := R25["info"]
 66 [-]: GETTABLE  R26 R26 K15  ; R26 := R26["mNode"]
 67 [-]: GETTABLE  R27 R0 K2    ; R27 := R0["name"]
 68 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 72
 69 [-]: JMP       72           ; PC := 72
 70 [-]: MOVE      R19 R25      ; R19 := R25
 71 [-]: JMP       73           ; PC := 73
 72 [-]: FORLOOP   R21 64       ; R21 += R23; if R21 <= R22 then begin PC := 64; R24 := R21 end
 73 [-]: TEST      R19 0        ; if not R19 then PC := 78
 74 [-]: JMP       78           ; PC := 78
 75 [-]: GETTABLE  R27 R0 K11   ; R27 := R0["reconstructionProgress"]
 76 [-]: EQ        1 R27 K16    ; if R27 == 1.000000 then PC := 79
 77 [-]: JMP       79           ; PC := 79
 78 [-]: LOADNIL   R8 R8        ; R8 := nil
 79 [-]: GETTABLE  R27 R0 K17   ; R27 := R0["locked"]
 80 [-]: NOT       R27 R27      ; R27 := not R27
 81 [-]: TEST      R15 0        ; if not R15 then PC := 85
 82 [-]: JMP       85           ; PC := 85
 83 [-]: MOVE      R6 R1        ; R6 := R1
 84 [-]: JMP       263          ; PC := 263
 85 [-]: TEST      R27 0        ; if not R27 then PC := 116
 86 [-]: JMP       116          ; PC := 116
 87 [-]: GETGLOBAL R28 K0       ; R28 := 0x7b998233
 88 [-]: MOVE      R29 R7       ; R29 := R7
 89 [-]: CALL      R28 2 2      ; R28 := R28(R29)
 90 [-]: TEST      R28 1        ; if R28 then PC := 116
 91 [-]: JMP       116          ; PC := 116
 92 [-]: MOVE      R6 R7        ; R6 := R7
 93 [-]: GETGLOBAL R28 K12      ; R28 := _T
 94 [-]: GETTABLE  R28 R28 K18  ; R28 := R28["CachedAlerts"]
 95 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
 96 [-]: TEST      R28 0        ; if not R28 then PC := 263
 97 [-]: JMP       263          ; PC := 263
 98 [-]: GETGLOBAL R28 K12      ; R28 := _T
 99 [-]: GETTABLE  R28 R28 K18  ; R28 := R28["CachedAlerts"]
100 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
101 [-]: GETTABLE  R28 R28 K19  ; R28 := R28["mVisible"]
102 [-]: TEST      R28 0        ; if not R28 then PC := 263
103 [-]: JMP       263          ; PC := 263
104 [-]: GETGLOBAL R28 K12      ; R28 := _T
105 [-]: GETTABLE  R28 R28 K18  ; R28 := R28["CachedAlerts"]
106 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
107 [-]: GETTABLE  R28 R28 K20  ; R28 := R28["mAlertInfo"]
108 [-]: GETTABLE  R28 R28 K21  ; R28 := R28["mTag"]
109 [-]: GETUPVAL  R29 U3       ; R29 := U3
110 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 263
111 [-]: JMP       263          ; PC := 263
112 [-]: GETGLOBAL R28 K23      ; R28 := 0x0032441c
113 [-]: GETTABLE  R28 R28 K24  ; R28 := R28["UITexture_Darvo"]
114 [-]: SETTABLE  R6 K22 R28   ; R6["icon"] := R28
115 [-]: JMP       263          ; PC := 263
116 [-]: TEST      R8 0         ; if not R8 then PC := 120
117 [-]: JMP       120          ; PC := 120
118 [-]: GETTABLE  R6 R8 K25    ; R6 := R8["mMissionInfo"]
119 [-]: JMP       263          ; PC := 263
120 [-]: TEST      R27 0        ; if not R27 then PC := 151
121 [-]: JMP       151          ; PC := 151
122 [-]: GETGLOBAL R28 K12      ; R28 := _T
123 [-]: GETTABLE  R28 R28 K26  ; R28 := R28["CachedGhostTowerMissions"]
124 [-]: TEST      R28 0        ; if not R28 then PC := 151
125 [-]: JMP       151          ; PC := 151
126 [-]: GETGLOBAL R28 K12      ; R28 := _T
127 [-]: GETTABLE  R28 R28 K26  ; R28 := R28["CachedGhostTowerMissions"]
128 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
129 [-]: TEST      R28 0        ; if not R28 then PC := 151
130 [-]: JMP       151          ; PC := 151
131 [-]: GETGLOBAL R28 K12      ; R28 := _T
132 [-]: GETTABLE  R28 R28 K26  ; R28 := R28["CachedGhostTowerMissions"]
133 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
134 [-]: GETTABLE  R28 R28 K27  ; R28 := R28["mUnlocked"]
135 [-]: TEST      R28 0        ; if not R28 then PC := 151
136 [-]: JMP       151          ; PC := 151
137 [-]: GETGLOBAL R28 K12      ; R28 := _T
138 [-]: GETTABLE  R28 R28 K26  ; R28 := R28["CachedGhostTowerMissions"]
139 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
140 [-]: GETTABLE  R28 R28 K28  ; R28 := R28["mShowInStarChart"]
141 [-]: TEST      R28 0        ; if not R28 then PC := 151
142 [-]: JMP       151          ; PC := 151
143 [-]: GETGLOBAL R28 K12      ; R28 := _T
144 [-]: GETTABLE  R28 R28 K26  ; R28 := R28["CachedGhostTowerMissions"]
145 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
146 [-]: GETTABLE  R6 R28 K25   ; R6 := R28["mMissionInfo"]
147 [-]: GETGLOBAL R28 K12      ; R28 := _T
148 [-]: GETTABLE  R28 R28 K26  ; R28 := R28["CachedGhostTowerMissions"]
149 [-]: GETTABLE  R12 R28 R14  ; R12 := R28[R14]
150 [-]: JMP       263          ; PC := 263
151 [-]: TEST      R27 0        ; if not R27 then PC := 172
152 [-]: JMP       172          ; PC := 172
153 [-]: GETGLOBAL R28 K12      ; R28 := _T
154 [-]: GETTABLE  R28 R28 K29  ; R28 := R28["CachedSyndicateMissions"]
155 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
156 [-]: TEST      R28 0        ; if not R28 then PC := 172
157 [-]: JMP       172          ; PC := 172
158 [-]: GETGLOBAL R28 K12      ; R28 := _T
159 [-]: GETTABLE  R28 R28 K29  ; R28 := R28["CachedSyndicateMissions"]
160 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
161 [-]: GETTABLE  R28 R28 K19  ; R28 := R28["mVisible"]
162 [-]: TEST      R28 0        ; if not R28 then PC := 172
163 [-]: JMP       172          ; PC := 172
164 [-]: GETGLOBAL R28 K12      ; R28 := _T
165 [-]: GETTABLE  R28 R28 K29  ; R28 := R28["CachedSyndicateMissions"]
166 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
167 [-]: GETTABLE  R6 R28 K25   ; R6 := R28["mMissionInfo"]
168 [-]: GETGLOBAL R28 K12      ; R28 := _T
169 [-]: GETTABLE  R28 R28 K29  ; R28 := R28["CachedSyndicateMissions"]
170 [-]: GETTABLE  R9 R28 R14   ; R9 := R28[R14]
171 [-]: JMP       263          ; PC := 263
172 [-]: TEST      R27 0        ; if not R27 then PC := 193
173 [-]: JMP       193          ; PC := 193
174 [-]: GETGLOBAL R28 K12      ; R28 := _T
175 [-]: GETTABLE  R28 R28 K30  ; R28 := R28["CachedSortieMissions"]
176 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
177 [-]: TEST      R28 0        ; if not R28 then PC := 193
178 [-]: JMP       193          ; PC := 193
179 [-]: GETGLOBAL R28 K12      ; R28 := _T
180 [-]: GETTABLE  R28 R28 K30  ; R28 := R28["CachedSortieMissions"]
181 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
182 [-]: GETTABLE  R28 R28 K28  ; R28 := R28["mShowInStarChart"]
183 [-]: TEST      R28 0        ; if not R28 then PC := 193
184 [-]: JMP       193          ; PC := 193
185 [-]: GETGLOBAL R28 K12      ; R28 := _T
186 [-]: GETTABLE  R28 R28 K30  ; R28 := R28["CachedSortieMissions"]
187 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
188 [-]: GETTABLE  R6 R28 K25   ; R6 := R28["mMissionInfo"]
189 [-]: GETGLOBAL R28 K12      ; R28 := _T
190 [-]: GETTABLE  R28 R28 K30  ; R28 := R28["CachedSortieMissions"]
191 [-]: GETTABLE  R10 R28 R14  ; R10 := R28[R14]
192 [-]: JMP       263          ; PC := 263
193 [-]: TEST      R27 0        ; if not R27 then PC := 212
194 [-]: JMP       212          ; PC := 212
195 [-]: GETGLOBAL R28 K12      ; R28 := _T
196 [-]: GETTABLE  R28 R28 K31  ; R28 := R28["CachedInvasionInfo"]
197 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
198 [-]: TEST      R28 0        ; if not R28 then PC := 212
199 [-]: JMP       212          ; PC := 212
200 [-]: GETGLOBAL R28 K12      ; R28 := _T
201 [-]: GETTABLE  R28 R28 K31  ; R28 := R28["CachedInvasionInfo"]
202 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
203 [-]: GETTABLE  R28 R28 K32  ; R28 := R28["mEventTag"]
204 [-]: GETGLOBAL R29 K33      ; R29 := EMPTY_SYMBOL
205 [-]: EQ        1 R28 R29    ; if R28 == R29 then PC := 212
206 [-]: JMP       212          ; PC := 212
207 [-]: GETGLOBAL R28 K12      ; R28 := _T
208 [-]: GETTABLE  R28 R28 K31  ; R28 := R28["CachedInvasionInfo"]
209 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
210 [-]: GETTABLE  R6 R28 K34   ; R6 := R28["mAttackerMissionInfo"]
211 [-]: JMP       263          ; PC := 263
212 [-]: TEST      R27 0        ; if not R27 then PC := 231
213 [-]: JMP       231          ; PC := 231
214 [-]: GETGLOBAL R28 K12      ; R28 := _T
215 [-]: GETTABLE  R28 R28 K35  ; R28 := R28["CachedActiveMissions"]
216 [-]: TEST      R28 0        ; if not R28 then PC := 231
217 [-]: JMP       231          ; PC := 231
218 [-]: GETGLOBAL R28 K12      ; R28 := _T
219 [-]: GETTABLE  R28 R28 K35  ; R28 := R28["CachedActiveMissions"]
220 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
221 [-]: TEST      R28 0        ; if not R28 then PC := 231
222 [-]: JMP       231          ; PC := 231
223 [-]: GETGLOBAL R28 K12      ; R28 := _T
224 [-]: GETTABLE  R28 R28 K35  ; R28 := R28["CachedActiveMissions"]
225 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
226 [-]: GETTABLE  R6 R28 K25   ; R6 := R28["mMissionInfo"]
227 [-]: GETGLOBAL R28 K12      ; R28 := _T
228 [-]: GETTABLE  R28 R28 K35  ; R28 := R28["CachedActiveMissions"]
229 [-]: GETTABLE  R11 R28 R14  ; R11 := R28[R14]
230 [-]: JMP       263          ; PC := 263
231 [-]: TEST      R27 0        ; if not R27 then PC := 262
232 [-]: JMP       262          ; PC := 262
233 [-]: GETGLOBAL R28 K12      ; R28 := _T
234 [-]: GETTABLE  R28 R28 K36  ; R28 := R28["CachedEliteAlertMissions"]
235 [-]: TEST      R28 0        ; if not R28 then PC := 262
236 [-]: JMP       262          ; PC := 262
237 [-]: GETGLOBAL R28 K12      ; R28 := _T
238 [-]: GETTABLE  R28 R28 K36  ; R28 := R28["CachedEliteAlertMissions"]
239 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
240 [-]: TEST      R28 0        ; if not R28 then PC := 262
241 [-]: JMP       262          ; PC := 262
242 [-]: GETGLOBAL R28 K12      ; R28 := _T
243 [-]: GETTABLE  R28 R28 K36  ; R28 := R28["CachedEliteAlertMissions"]
244 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
245 [-]: GETTABLE  R28 R28 K27  ; R28 := R28["mUnlocked"]
246 [-]: TEST      R28 0        ; if not R28 then PC := 262
247 [-]: JMP       262          ; PC := 262
248 [-]: GETGLOBAL R28 K12      ; R28 := _T
249 [-]: GETTABLE  R28 R28 K36  ; R28 := R28["CachedEliteAlertMissions"]
250 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
251 [-]: GETTABLE  R28 R28 K28  ; R28 := R28["mShowInStarChart"]
252 [-]: TEST      R28 0        ; if not R28 then PC := 262
253 [-]: JMP       262          ; PC := 262
254 [-]: GETGLOBAL R28 K12      ; R28 := _T
255 [-]: GETTABLE  R28 R28 K36  ; R28 := R28["CachedEliteAlertMissions"]
256 [-]: GETTABLE  R28 R28 R14  ; R28 := R28[R14]
257 [-]: GETTABLE  R6 R28 K25   ; R6 := R28["mMissionInfo"]
258 [-]: GETGLOBAL R28 K12      ; R28 := _T
259 [-]: GETTABLE  R28 R28 K36  ; R28 := R28["CachedEliteAlertMissions"]
260 [-]: GETTABLE  R13 R28 R14  ; R13 := R28[R14]
261 [-]: JMP       263          ; PC := 263
262 [-]: MOVE      R6 R1        ; R6 := R1
263 [-]: GETUPVAL  R28 U4       ; R28 := U4
264 [-]: MOVE      R29 R6       ; R29 := R6
265 [-]: CALL      R28 2 3      ; R28,R29 := R28(R29)
266 [-]: SELF      R30 R4 K37   ; R31 := R4; R30 := R4[0x42b04007]
267 [-]: LOADK     R32 K38      ; R32 := "/Lotus/Language/Game/MissionName_"
268 [-]: MOVE      R33 R28      ; R33 := R28
269 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
270 [-]: LOADBOOL  R33 0 0      ; R33 := false
271 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
272 [-]: TEST      R29 0        ; if not R29 then PC := 283
273 [-]: JMP       283          ; PC := 283
274 [-]: MOVE      R31 R30      ; R31 := R30
275 [-]: LOADK     R32 K39      ; R32 := " "
276 [-]: SELF      R33 R4 K37   ; R34 := R4; R33 := R4[0x42b04007]
277 [-]: LOADK     R35 K38      ; R35 := "/Lotus/Language/Game/MissionName_"
278 [-]: MOVE      R36 R29      ; R36 := R29
279 [-]: CONCAT    R35 R35 R36  ; R35 := R35 .. R36
280 [-]: LOADBOOL  R36 0 0      ; R36 := false
281 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
282 [-]: CONCAT    R30 R31 R33  ; R30 := R31 .. R32 .. R33
283 [-]: LOADNIL   R31 R31      ; R31 := nil
284 [-]: TEST      R15 1        ; if R15 then PC := 295
285 [-]: JMP       295          ; PC := 295
286 [-]: GETGLOBAL R32 K0       ; R32 := 0x7b998233
287 [-]: MOVE      R33 R7       ; R33 := R7
288 [-]: CALL      R32 2 2      ; R32 := R32(R33)
289 [-]: TEST      R32 0        ; if not R32 then PC := 295
290 [-]: JMP       295          ; PC := 295
291 [-]: GETUPVAL  R32 U5       ; R32 := U5
292 [-]: GETTABLE  R33 R0 K2    ; R33 := R0["name"]
293 [-]: CALL      R32 2 2      ; R32 := R32(R33)
294 [-]: MOVE      R31 R32      ; R31 := R32
295 [-]: LOADK     R32 1        ; R32 := 1.000000
296 [-]: GETTABLE  R33 R6 K22   ; R33 := R6["icon"]
297 [-]: LOADK     R34 K40      ; R34 := ""
298 [-]: GETTABLE  R35 R6 K41   ; R35 := R6["descText"]
299 [-]: SELF      R35 R35 K42  ; R36 := R35; R35 := R35[0x6d604ba7]
300 [-]: CALL      R35 2 2      ; R35 := R35(R36)
301 [-]: GETTABLE  R36 R6 K43   ; R36 := R6["difficulty"]
302 [-]: GETTABLE  R37 R6 K44   ; R37 := R6["minEnemyLevel"]
303 [-]: GETTABLE  R38 R6 K45   ; R38 := R6["maxEnemyLevel"]
304 [-]: GETTABLE  R39 R6 K46   ; R39 := R6["uniqueName"]
305 [-]: GETTABLE  R40 R6 K47   ; R40 := R6["rarity"]
306 [-]: GETTABLE  R41 R6 K48   ; R41 := R6["tag"]
307 [-]: LOADNIL   R42 R42      ; R42 := nil
308 [-]: GETTABLE  R43 R0 K8    ; R43 := R0["nodeType"]
309 [-]: EQ        1 R43 K49    ; if R43 == 3.000000 then PC := 312
310 [-]: JMP       312          ; PC := 312
311 [-]: LOADBOOL  R43 0 1      ; R43 := false; PC := 312
312 [-]: LOADBOOL  R43 1 0      ; R43 := true
313 [-]: GETGLOBAL R44 K50      ; R44 := 0x7f5022cf
314 [-]: GETTABLE  R44 R44 K51  ; R82 := R44[0xa5c556b9]
315 [-]: GETGLOBAL R45 K3       ; R45 := 0x64fb1586
316 [-]: GETTABLE  R46 R0 K2    ; R46 := R0["name"]
317 [-]: CALL      R45 2 2      ; R45 := R45(R46)
318 [-]: LOADK     R46 K52      ; R46 := "Dojo"
319 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
320 [-]: EQ        0 R44 K53    ; if R44 ~= nil then PC := 323
321 [-]: JMP       323          ; PC := 323
322 [-]: LOADBOOL  R44 0 1      ; R44 := false; PC := 323
323 [-]: LOADBOOL  R44 1 0      ; R44 := true
324 [-]: TEST      R15 0        ; if not R15 then PC := 335
325 [-]: JMP       335          ; PC := 335
326 [-]: GETGLOBAL R45 K50      ; R45 := 0x7f5022cf
327 [-]: GETTABLE  R45 R45 K54  ; R82 := R45[0x3f3e4d12]
328 [-]: SELF      R46 R6 K55   ; R47 := R6; R46 := R6[0x243148d6]
329 [-]: CALL      R46 2 2      ; R46 := R46(R47)
330 [-]: SELF      R46 R46 K42  ; R47 := R46; R46 := R46[0x6d604ba7]
331 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
332 [-]: CALL      R45 0 2      ; R45 := R45(R46,...)
333 [-]: MOVE      R34 R45      ; R34 := R45
334 [-]: JMP       679          ; PC := 679
335 [-]: TEST      R43 0        ; if not R43 then PC := 360
336 [-]: JMP       360          ; PC := 360
337 [-]: SELF      R45 R4 K37   ; R46 := R4; R45 := R4[0x42b04007]
338 [-]: LOADK     R47 K56      ; R47 := "/Lotus/Language/Menu/Chat_HubTitle"
339 [-]: LOADBOOL  R48 0 0      ; R48 := false
340 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
341 [-]: MOVE      R30 R45      ; R30 := R45
342 [-]: SELF      R45 R4 K37   ; R46 := R4; R45 := R4[0x42b04007]
343 [-]: LOADK     R47 K57      ; R47 := "/Lotus/Language/Bosses/Tenno"
344 [-]: LOADBOOL  R48 0 0      ; R48 := false
345 [-]: CALL      R45 4 2      ; R45 := R45(R46,R47,R48)
346 [-]: MOVE      R34 R45      ; R34 := R45
347 [-]: GETGLOBAL R45 K23      ; R45 := 0x0032441c
348 [-]: GETTABLE  R33 R45 K58  ; R33 := R45["UITexture_Hub"]
349 [-]: GETGLOBAL R45 K50      ; R45 := 0x7f5022cf
350 [-]: GETTABLE  R45 R45 K54  ; R82 := R45[0x3f3e4d12]
351 [-]: MOVE      R46 R30      ; R46 := R30
352 [-]: CALL      R45 2 2      ; R45 := R45(R46)
353 [-]: MOVE      R30 R45      ; R30 := R45
354 [-]: GETGLOBAL R45 K50      ; R45 := 0x7f5022cf
355 [-]: GETTABLE  R45 R45 K54  ; R82 := R45[0x3f3e4d12]
356 [-]: MOVE      R46 R34      ; R46 := R34
357 [-]: CALL      R45 2 2      ; R45 := R45(R46)
358 [-]: MOVE      R34 R45      ; R34 := R45
359 [-]: JMP       679          ; PC := 679
360 [-]: TEST      R44 0        ; if not R44 then PC := 384
361 [-]: JMP       384          ; PC := 384
362 [-]: GETGLOBAL R45 K59      ; R45 := 0x25d99d89
363 [-]: SELF      R46 R4 K37   ; R47 := R4; R46 := R4[0x42b04007]
364 [-]: LOADK     R48 K60      ; R48 := "/Lotus/Language/Clan/Clan_DOJO"
365 [-]: LOADBOOL  R49 0 0      ; R49 := false
366 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
367 [-]: MOVE      R30 R46      ; R30 := R46
368 [-]: SELF      R46 R45 K61  ; R47 := R45; R46 := R45[0x6da6e186]
369 [-]: CALL      R46 2 2      ; R46 := R46(R47)
370 [-]: MOVE      R34 R46      ; R34 := R46
371 [-]: GETGLOBAL R46 K23      ; R46 := 0x0032441c
372 [-]: GETTABLE  R33 R46 K62  ; R33 := R46["UITexture_DefaultClan"]
373 [-]: GETGLOBAL R46 K50      ; R46 := 0x7f5022cf
374 [-]: GETTABLE  R46 R46 K54  ; R82 := R46[0x3f3e4d12]
375 [-]: MOVE      R47 R30      ; R47 := R30
376 [-]: CALL      R46 2 2      ; R46 := R46(R47)
377 [-]: MOVE      R30 R46      ; R30 := R46
378 [-]: GETGLOBAL R46 K50      ; R46 := 0x7f5022cf
379 [-]: GETTABLE  R46 R46 K54  ; R82 := R46[0x3f3e4d12]
380 [-]: MOVE      R47 R34      ; R47 := R34
381 [-]: CALL      R46 2 2      ; R46 := R46(R47)
382 [-]: MOVE      R34 R46      ; R34 := R46
383 [-]: JMP       679          ; PC := 679
384 [-]: GETTABLE  R46 R0 K8    ; R46 := R0["nodeType"]
385 [-]: EQ        0 R46 K63    ; if R46 ~= 2.000000 then PC := 405
386 [-]: JMP       405          ; PC := 405
387 [-]: SELF      R46 R4 K37   ; R47 := R4; R46 := R4[0x42b04007]
388 [-]: LOADK     R48 K64      ; R48 := "/Lotus/Language/Menu/MissionIntro_PVP"
389 [-]: LOADBOOL  R49 0 0      ; R49 := false
390 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
391 [-]: MOVE      R30 R46      ; R30 := R46
392 [-]: SELF      R46 R4 K37   ; R47 := R4; R46 := R4[0x42b04007]
393 [-]: LOADK     R48 K65      ; R48 := "/Lotus/Language/Menu/Codex_Tenno"
394 [-]: LOADBOOL  R49 0 0      ; R49 := false
395 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
396 [-]: MOVE      R34 R46      ; R34 := R46
397 [-]: GETGLOBAL R46 K23      ; R46 := 0x0032441c
398 [-]: GETTABLE  R33 R46 K66  ; R33 := R46["UITexture_Pvp"]
399 [-]: GETGLOBAL R46 K50      ; R46 := 0x7f5022cf
400 [-]: GETTABLE  R46 R46 K54  ; R82 := R46[0x3f3e4d12]
401 [-]: MOVE      R47 R34      ; R47 := R34
402 [-]: CALL      R46 2 2      ; R46 := R46(R47)
403 [-]: MOVE      R34 R46      ; R34 := R46
404 [-]: JMP       679          ; PC := 679
405 [-]: EQ        1 R31 K53    ; if R31 == nil then PC := 483
406 [-]: JMP       483          ; PC := 483
407 [-]: GETTABLE  R46 R31 K67  ; R46 := R31["mFaction"]
408 [-]: EQ        0 R46 K63    ; if R46 ~= 2.000000 then PC := 422
409 [-]: JMP       422          ; PC := 422
410 [-]: GETUPVAL  R46 U4       ; R46 := U4
411 [-]: GETTABLE  R47 R31 K68  ; R47 := R31["mDefenderMissionInfo"]
412 [-]: CALL      R46 2 2      ; R46 := R46(R47)
413 [-]: MOVE      R28 R46      ; R28 := R46
414 [-]: SELF      R46 R4 K37   ; R47 := R4; R46 := R4[0x42b04007]
415 [-]: LOADK     R48 K38      ; R48 := "/Lotus/Language/Game/MissionName_"
416 [-]: MOVE      R49 R28      ; R49 := R28
417 [-]: CONCAT    R48 R48 R49  ; R48 := R48 .. R49
418 [-]: LOADBOOL  R49 0 0      ; R49 := false
419 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
420 [-]: MOVE      R30 R46      ; R30 := R46
421 [-]: JMP       431          ; PC := 431
422 [-]: GETTABLE  R46 R31 K32  ; R46 := R31["mEventTag"]
423 [-]: GETGLOBAL R47 K33      ; R47 := EMPTY_SYMBOL
424 [-]: EQ        0 R46 R47    ; if R46 ~= R47 then PC := 431
425 [-]: JMP       431          ; PC := 431
426 [-]: SELF      R46 R4 K37   ; R47 := R4; R46 := R4[0x42b04007]
427 [-]: LOADK     R48 K69      ; R48 := "/Lotus/Language/Menu/MissionIntro_Invasion"
428 [-]: LOADBOOL  R49 0 0      ; R49 := false
429 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
430 [-]: MOVE      R30 R46      ; R30 := R46
431 [-]: GETTABLE  R46 R31 K68  ; R46 := R31["mDefenderMissionInfo"]
432 [-]: SELF      R46 R46 K55  ; R47 := R46; R46 := R46[0x243148d6]
433 [-]: CALL      R46 2 2      ; R46 := R46(R47)
434 [-]: SELF      R46 R46 K42  ; R47 := R46; R46 := R46[0x6d604ba7]
435 [-]: CALL      R46 2 2      ; R46 := R46(R47)
436 [-]: MOVE      R34 R46      ; R34 := R46
437 [-]: GETGLOBAL R46 K23      ; R46 := 0x0032441c
438 [-]: GETTABLE  R33 R46 K70  ; R33 := R46["UITexture_Invasion"]
439 [-]: GETGLOBAL R46 K50      ; R46 := 0x7f5022cf
440 [-]: GETTABLE  R46 R46 K54  ; R82 := R46[0x3f3e4d12]
441 [-]: MOVE      R47 R34      ; R47 := R34
442 [-]: CALL      R46 2 2      ; R46 := R46(R47)
443 [-]: MOVE      R34 R46      ; R34 := R46
444 [-]: LOADK     R39 K40      ; R39 := ""
445 [-]: GETTABLE  R46 R31 K34  ; R46 := R31["mAttackerMissionInfo"]
446 [-]: GETTABLE  R37 R46 K44  ; R37 := R46["minEnemyLevel"]
447 [-]: GETTABLE  R46 R31 K34  ; R46 := R31["mAttackerMissionInfo"]
448 [-]: GETTABLE  R38 R46 K45  ; R38 := R46["maxEnemyLevel"]
449 [-]: GETGLOBAL R46 K0       ; R46 := 0x7b998233
450 [-]: MOVE      R47 R2       ; R47 := R2
451 [-]: CALL      R46 2 2      ; R46 := R46(R47)
452 [-]: TEST      R46 1        ; if R46 then PC := 679
453 [-]: JMP       679          ; PC := 679
454 [-]: GETGLOBAL R46 K0       ; R46 := 0x7b998233
455 [-]: GETTABLE  R47 R31 K68  ; R47 := R31["mDefenderMissionInfo"]
456 [-]: GETTABLE  R47 R47 K71  ; R47 := R47["vipAgent"]
457 [-]: CALL      R46 2 2      ; R46 := R46(R47)
458 [-]: TEST      R46 1        ; if R46 then PC := 679
459 [-]: JMP       679          ; PC := 679
460 [-]: GETTABLE  R46 R31 K32  ; R46 := R31["mEventTag"]
461 [-]: GETGLOBAL R47 K33      ; R47 := EMPTY_SYMBOL
462 [-]: EQ        0 R46 R47    ; if R46 ~= R47 then PC := 679
463 [-]: JMP       679          ; PC := 679
464 [-]: SELF      R46 R2 K72   ; R47 := R2; R46 := R2[0xd94900e4]
465 [-]: GETTABLE  R48 R31 K68  ; R48 := R31["mDefenderMissionInfo"]
466 [-]: GETTABLE  R48 R48 K71  ; R48 := R48["vipAgent"]
467 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
468 [-]: MOVE      R42 R46      ; R42 := R46
469 [-]: GETTABLE  R46 R42 K73  ; R46 := R42["locName"]
470 [-]: GETGLOBAL R47 K33      ; R47 := EMPTY_SYMBOL
471 [-]: EQ        1 R46 R47    ; if R46 == R47 then PC := 679
472 [-]: JMP       679          ; PC := 679
473 [-]: SELF      R46 R4 K37   ; R47 := R4; R46 := R4[0x42b04007]
474 [-]: GETTABLE  R48 R42 K73  ; R48 := R42["locName"]
475 [-]: SELF      R48 R48 K42  ; R49 := R48; R48 := R48[0x6d604ba7]
476 [-]: CALL      R48 2 2      ; R48 := R48(R49)
477 [-]: LOADBOOL  R49 0 0      ; R49 := false
478 [-]: CALL      R46 4 2      ; R46 := R46(R47,R48,R49)
479 [-]: MOVE      R34 R46      ; R34 := R46
480 [-]: GETTABLE  R33 R42 K22  ; R33 := R42["icon"]
481 [-]: LOADK     R39 K40      ; R39 := ""
482 [-]: JMP       679          ; PC := 679
483 [-]: EQ        1 R8 K53     ; if R8 == nil then PC := 574
484 [-]: JMP       574          ; PC := 574
485 [-]: GETGLOBAL R46 K0       ; R46 := 0x7b998233
486 [-]: GETTABLE  R47 R8 K74   ; R47 := R8["mMissionKeyName"]
487 [-]: CALL      R46 2 2      ; R46 := R46(R47)
488 [-]: TEST      R46 1        ; if R46 then PC := 544
489 [-]: JMP       544          ; PC := 544
490 [-]: GETGLOBAL R46 K75      ; R46 := 0xb009bbc6
491 [-]: GETTABLE  R47 R8 K74   ; R47 := R8["mMissionKeyName"]
492 [-]: CALL      R46 2 2      ; R46 := R46(R47)
493 [-]: GETGLOBAL R47 K0       ; R47 := 0x7b998233
494 [-]: MOVE      R48 R46      ; R48 := R46
495 [-]: CALL      R47 2 2      ; R47 := R47(R48)
496 [-]: TEST      R47 1        ; if R47 then PC := 549
497 [-]: JMP       549          ; PC := 549
498 [-]: SELF      R47 R46 K76  ; R48 := R46; R47 := R46[0xef893aec]
499 [-]: CALL      R47 2 2      ; R47 := R47(R48)
500 [-]: MOVE      R6 R47       ; R6 := R47
501 [-]: GETTABLE  R47 R8 K25   ; R47 := R8["mMissionInfo"]
502 [-]: GETTABLE  R47 R47 K44  ; R47 := R47["minEnemyLevel"]
503 [-]: LT        0 K16 R47    ; if 1.000000 >= R47 then PC := 508
504 [-]: JMP       508          ; PC := 508
505 [-]: GETTABLE  R47 R8 K25   ; R47 := R8["mMissionInfo"]
506 [-]: GETTABLE  R47 R47 K44  ; R47 := R47["minEnemyLevel"]
507 [-]: SETTABLE  R6 K44 R47   ; R6["minEnemyLevel"] := R47
508 [-]: GETTABLE  R47 R8 K25   ; R47 := R8["mMissionInfo"]
509 [-]: GETTABLE  R47 R47 K45  ; R47 := R47["maxEnemyLevel"]
510 [-]: LT        0 K16 R47    ; if 1.000000 >= R47 then PC := 515
511 [-]: JMP       515          ; PC := 515
512 [-]: GETTABLE  R47 R8 K25   ; R47 := R8["mMissionInfo"]
513 [-]: GETTABLE  R47 R47 K45  ; R47 := R47["maxEnemyLevel"]
514 [-]: SETTABLE  R6 K45 R47   ; R6["maxEnemyLevel"] := R47
515 [-]: GETGLOBAL R47 K0       ; R47 := 0x7b998233
516 [-]: GETTABLE  R48 R8 K25   ; R48 := R8["mMissionInfo"]
517 [-]: GETTABLE  R48 R48 K77  ; R48 := R48["enemySpec"]
518 [-]: CALL      R47 2 2      ; R47 := R47(R48)
519 [-]: TEST      R47 1        ; if R47 then PC := 524
520 [-]: JMP       524          ; PC := 524
521 [-]: GETTABLE  R47 R8 K25   ; R47 := R8["mMissionInfo"]
522 [-]: GETTABLE  R47 R47 K77  ; R47 := R47["enemySpec"]
523 [-]: SETTABLE  R6 K77 R47   ; R6["enemySpec"] := R47
524 [-]: GETTABLE  R37 R6 K44   ; R37 := R6["minEnemyLevel"]
525 [-]: GETTABLE  R38 R6 K45   ; R38 := R6["maxEnemyLevel"]
526 [-]: SELF      R47 R6 K55   ; R48 := R6; R47 := R6[0x243148d6]
527 [-]: CALL      R47 2 2      ; R47 := R47(R48)
528 [-]: SELF      R47 R47 K42  ; R48 := R47; R47 := R47[0x6d604ba7]
529 [-]: CALL      R47 2 2      ; R47 := R47(R48)
530 [-]: MOVE      R34 R47      ; R34 := R47
531 [-]: GETUPVAL  R47 U4       ; R47 := U4
532 [-]: MOVE      R48 R6       ; R48 := R6
533 [-]: CALL      R47 2 2      ; R47 := R47(R48)
534 [-]: MOVE      R28 R47      ; R28 := R47
535 [-]: SELF      R47 R4 K37   ; R48 := R4; R47 := R4[0x42b04007]
536 [-]: LOADK     R49 K38      ; R49 := "/Lotus/Language/Game/MissionName_"
537 [-]: MOVE      R50 R28      ; R50 := R28
538 [-]: CONCAT    R49 R49 R50  ; R49 := R49 .. R50
539 [-]: LOADBOOL  R50 0 0      ; R50 := false
540 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
541 [-]: MOVE      R30 R47      ; R30 := R47
542 [-]: LOADK     R39 K40      ; R39 := ""
543 [-]: JMP       549          ; PC := 549
544 [-]: SELF      R47 R4 K37   ; R48 := R4; R47 := R4[0x42b04007]
545 [-]: GETTABLE  R49 R8 K78   ; R49 := R8["mDesc"]
546 [-]: LOADBOOL  R50 0 0      ; R50 := false
547 [-]: CALL      R47 4 2      ; R47 := R47(R48,R49,R50)
548 [-]: MOVE      R30 R47      ; R30 := R47
549 [-]: GETGLOBAL R47 K0       ; R47 := 0x7b998233
550 [-]: GETTABLE  R48 R6 K77   ; R48 := R6["enemySpec"]
551 [-]: CALL      R47 2 2      ; R47 := R47(R48)
552 [-]: TEST      R47 1        ; if R47 then PC := 563
553 [-]: JMP       563          ; PC := 563
554 [-]: GETGLOBAL R47 K3       ; R47 := 0x64fb1586
555 [-]: GETTABLE  R48 R6 K77   ; R48 := R6["enemySpec"]
556 [-]: SELF      R48 R48 K79  ; R49 := R48; R48 := R48[0xed4e0128]
557 [-]: CALL      R48 2 0      ; R48,... := R48(R49)
558 [-]: CALL      R47 0 2      ; R47 := R47(R48,...)
559 [-]: EQ        0 R47 K80    ; if R47 ~= "/Lotus/Types/Game/EnemySpecs/GrineerEventSquadM" then PC := 563
560 [-]: JMP       563          ; PC := 563
561 [-]: LOADK     R34 K40      ; R34 := ""
562 [-]: JMP       568          ; PC := 568
563 [-]: SELF      R47 R6 K55   ; R48 := R6; R47 := R6[0x243148d6]
564 [-]: CALL      R47 2 2      ; R47 := R47(R48)
565 [-]: SELF      R47 R47 K42  ; R48 := R47; R47 := R47[0x6d604ba7]
566 [-]: CALL      R47 2 2      ; R47 := R47(R48)
567 [-]: MOVE      R34 R47      ; R34 := R47
568 [-]: GETGLOBAL R47 K50      ; R47 := 0x7f5022cf
569 [-]: GETTABLE  R47 R47 K54  ; R82 := R47[0x3f3e4d12]
570 [-]: MOVE      R48 R34      ; R48 := R34
571 [-]: CALL      R47 2 2      ; R47 := R47(R48)
572 [-]: MOVE      R34 R47      ; R34 := R47
573 [-]: JMP       679          ; PC := 679
574 [-]: GETTABLE  R47 R6 K81   ; R47 := R6["missionType"]
575 [-]: EQ        0 R47 K82    ; if R47 ~= 0.000000 then PC := 615
576 [-]: JMP       615          ; PC := 615
577 [-]: LOADBOOL  R47 0 0      ; R47 := false
578 [-]: GETGLOBAL R48 K0       ; R48 := 0x7b998233
579 [-]: MOVE      R49 R2       ; R49 := R2
580 [-]: CALL      R48 2 2      ; R48 := R48(R49)
581 [-]: TEST      R48 1        ; if R48 then PC := 606
582 [-]: JMP       606          ; PC := 606
583 [-]: GETGLOBAL R48 K0       ; R48 := 0x7b998233
584 [-]: GETTABLE  R49 R6 K71   ; R49 := R6["vipAgent"]
585 [-]: CALL      R48 2 2      ; R48 := R48(R49)
586 [-]: TEST      R48 1        ; if R48 then PC := 606
587 [-]: JMP       606          ; PC := 606
588 [-]: SELF      R48 R2 K72   ; R49 := R2; R48 := R2[0xd94900e4]
589 [-]: GETTABLE  R50 R6 K71   ; R50 := R6["vipAgent"]
590 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
591 [-]: MOVE      R42 R48      ; R42 := R48
592 [-]: GETTABLE  R48 R42 K73  ; R48 := R42["locName"]
593 [-]: GETGLOBAL R49 K33      ; R49 := EMPTY_SYMBOL
594 [-]: EQ        1 R48 R49    ; if R48 == R49 then PC := 606
595 [-]: JMP       606          ; PC := 606
596 [-]: LOADBOOL  R47 1 0      ; R47 := true
597 [-]: SELF      R48 R4 K37   ; R49 := R4; R48 := R4[0x42b04007]
598 [-]: GETTABLE  R50 R42 K73  ; R50 := R42["locName"]
599 [-]: SELF      R50 R50 K42  ; R51 := R50; R50 := R50[0x6d604ba7]
600 [-]: CALL      R50 2 2      ; R50 := R50(R51)
601 [-]: LOADBOOL  R51 0 0      ; R51 := false
602 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
603 [-]: MOVE      R34 R48      ; R34 := R48
604 [-]: GETTABLE  R33 R42 K22  ; R33 := R42["icon"]
605 [-]: LOADK     R39 K40      ; R39 := ""
606 [-]: TEST      R47 1        ; if R47 then PC := 679
607 [-]: JMP       679          ; PC := 679
608 [-]: SELF      R48 R4 K37   ; R49 := R4; R48 := R4[0x42b04007]
609 [-]: GETTABLE  R50 R6 K46   ; R50 := R6["uniqueName"]
610 [-]: LOADBOOL  R51 0 0      ; R51 := false
611 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
612 [-]: MOVE      R34 R48      ; R34 := R48
613 [-]: GETTABLE  R33 R6 K22   ; R33 := R6["icon"]
614 [-]: JMP       679          ; PC := 679
615 [-]: GETTABLE  R48 R0 K2    ; R48 := R0["name"]
616 [-]: GETGLOBAL R49 K83      ; R49 := APARTMENT_NODE_TAG
617 [-]: EQ        0 R48 R49    ; if R48 ~= R49 then PC := 622
618 [-]: JMP       622          ; PC := 622
619 [-]: LOADK     R30 K40      ; R30 := ""
620 [-]: LOADK     R34 K40      ; R34 := ""
621 [-]: JMP       679          ; PC := 679
622 [-]: GETGLOBAL R48 K12      ; R48 := _T
623 [-]: GETTABLE  R48 R48 K18  ; R48 := R48["CachedAlerts"]
624 [-]: GETTABLE  R49 R0 K2    ; R49 := R0["name"]
625 [-]: GETTABLE  R48 R48 R49  ; R48 := R48[R49]
626 [-]: TEST      R48 0        ; if not R48 then PC := 660
627 [-]: JMP       660          ; PC := 660
628 [-]: GETGLOBAL R48 K12      ; R48 := _T
629 [-]: GETTABLE  R48 R48 K18  ; R48 := R48["CachedAlerts"]
630 [-]: GETTABLE  R49 R0 K2    ; R49 := R0["name"]
631 [-]: GETTABLE  R48 R48 R49  ; R48 := R48[R49]
632 [-]: GETTABLE  R48 R48 K20  ; R48 := R48["mAlertInfo"]
633 [-]: GETTABLE  R48 R48 K21  ; R48 := R48["mTag"]
634 [-]: GETGLOBAL R49 K33      ; R49 := EMPTY_SYMBOL
635 [-]: EQ        1 R48 R49    ; if R48 == R49 then PC := 660
636 [-]: JMP       660          ; PC := 660
637 [-]: GETGLOBAL R48 K12      ; R48 := _T
638 [-]: GETTABLE  R48 R48 K18  ; R48 := R48["CachedAlerts"]
639 [-]: GETTABLE  R49 R0 K2    ; R49 := R0["name"]
640 [-]: GETTABLE  R48 R48 R49  ; R48 := R48[R49]
641 [-]: GETTABLE  R48 R48 K20  ; R48 := R48["mAlertInfo"]
642 [-]: GETTABLE  R48 R48 K25  ; R48 := R48["mMissionInfo"]
643 [-]: GETTABLE  R48 R48 K41  ; R48 := R48["descText"]
644 [-]: GETGLOBAL R49 K33      ; R49 := EMPTY_SYMBOL
645 [-]: EQ        1 R48 R49    ; if R48 == R49 then PC := 660
646 [-]: JMP       660          ; PC := 660
647 [-]: GETGLOBAL R48 K84      ; R48 := 0x603636ad
648 [-]: GETGLOBAL R49 K3       ; R49 := 0x64fb1586
649 [-]: GETGLOBAL R50 K12      ; R50 := _T
650 [-]: GETTABLE  R50 R50 K18  ; R50 := R50["CachedAlerts"]
651 [-]: GETTABLE  R51 R0 K2    ; R51 := R0["name"]
652 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
653 [-]: GETTABLE  R50 R50 K20  ; R50 := R50["mAlertInfo"]
654 [-]: GETTABLE  R50 R50 K25  ; R50 := R50["mMissionInfo"]
655 [-]: GETTABLE  R50 R50 K41  ; R50 := R50["descText"]
656 [-]: CALL      R49 2 2      ; R49 := R49(R50)
657 [-]: LOADBOOL  R50 0 0      ; R50 := false
658 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
659 [-]: MOVE      R39 R48      ; R39 := R48
660 [-]: SELF      R48 R6 K55   ; R49 := R6; R48 := R6[0x243148d6]
661 [-]: CALL      R48 2 2      ; R48 := R48(R49)
662 [-]: SELF      R48 R48 K42  ; R49 := R48; R48 := R48[0x6d604ba7]
663 [-]: CALL      R48 2 2      ; R48 := R48(R49)
664 [-]: MOVE      R34 R48      ; R34 := R48
665 [-]: TEST      R18 0        ; if not R18 then PC := 668
666 [-]: JMP       668          ; PC := 668
667 [-]: LOADK     R34 K85      ; R34 := "TENNO"
668 [-]: GETGLOBAL R48 K0       ; R48 := 0x7b998233
669 [-]: MOVE      R49 R33      ; R49 := R33
670 [-]: CALL      R48 2 2      ; R48 := R48(R49)
671 [-]: TEST      R48 0        ; if not R48 then PC := 674
672 [-]: JMP       674          ; PC := 674
673 [-]: LOADNIL   R33 R33      ; R33 := nil
674 [-]: GETGLOBAL R48 K50      ; R48 := 0x7f5022cf
675 [-]: GETTABLE  R48 R48 K54  ; R82 := R48[0x3f3e4d12]
676 [-]: MOVE      R49 R34      ; R49 := R34
677 [-]: CALL      R48 2 2      ; R48 := R48(R49)
678 [-]: MOVE      R34 R48      ; R34 := R48
679 [-]: GETGLOBAL R48 K50      ; R48 := 0x7f5022cf
680 [-]: GETTABLE  R48 R48 K86  ; R82 := R48[0x41e2ae25]
681 [-]: MOVE      R49 R39      ; R49 := R39
682 [-]: CALL      R48 2 2      ; R48 := R48(R49)
683 [-]: LT        0 K82 R48    ; if 0.000000 >= R48 then PC := 685
684 [-]: JMP       685          ; PC := 685
685 [-]: GETUPVAL  R48 U6       ; R48 := U6
686 [-]: GETTABLE  R48 R48 K87  ; R82 := R48[0x06d055f9]
687 [-]: GETGLOBAL R49 K88      ; R49 := 0x34291f5c
688 [-]: GETTABLE  R49 R49 K89  ; R82 := R49[0xa7a2e381]
689 [-]: CALL      R49 1 2      ; R49 := R49()
690 [-]: LOADK     R50 K40      ; R50 := ""
691 [-]: GETTABLE  R51 R0 K90   ; R51 := R0["founders"]
692 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
693 [-]: LOADNIL   R49 R49      ; R49 := nil
694 [-]: GETGLOBAL R50 K0       ; R50 := 0x7b998233
695 [-]: GETTABLE  R51 R6 K91   ; R51 := R6["levelOverride"]
696 [-]: CALL      R50 2 2      ; R50 := R50(R51)
697 [-]: TEST      R50 1        ; if R50 then PC := 709
698 [-]: JMP       709          ; PC := 709
699 [-]: GETGLOBAL R50 K92      ; R50 := 0x4f6851ff
700 [-]: GETTABLE  R51 R6 K93   ; R51 := R6["seed"]
701 [-]: CALL      R50 2 1      ; R50(R51)
702 [-]: GETUPVAL  R50 U7       ; R50 := U7
703 [-]: MOVE      R51 R6       ; R51 := R6
704 [-]: MOVE      R52 R0       ; R52 := R0
705 [-]: MOVE      R53 R42      ; R53 := R42
706 [-]: MOVE      R54 R8       ; R54 := R8
707 [-]: CALL      R50 5 2      ; R50 := R50(R51,R52,R53,R54)
708 [-]: MOVE      R49 R50      ; R49 := R50
709 [-]: LOADNIL   R50 R50      ; R50 := nil
710 [-]: EQ        0 R34 K94    ; if R34 ~= "GRINEER" then PC := 719
711 [-]: JMP       719          ; PC := 719
712 [-]: MOVE      R50 R34      ; R50 := R34
713 [-]: SELF      R51 R4 K37   ; R52 := R4; R51 := R4[0x42b04007]
714 [-]: LOADK     R53 K95      ; R53 := "/Lotus/Language/Game/Faction_GrineerUC"
715 [-]: LOADBOOL  R54 0 0      ; R54 := false
716 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
717 [-]: MOVE      R34 R51      ; R34 := R51
718 [-]: JMP       784          ; PC := 784
719 [-]: EQ        0 R34 K96    ; if R34 ~= "CORPUS" then PC := 728
720 [-]: JMP       728          ; PC := 728
721 [-]: MOVE      R50 R34      ; R50 := R34
722 [-]: SELF      R51 R4 K37   ; R52 := R4; R51 := R4[0x42b04007]
723 [-]: LOADK     R53 K97      ; R53 := "/Lotus/Language/Game/Faction_CorpusUC"
724 [-]: LOADBOOL  R54 0 0      ; R54 := false
725 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
726 [-]: MOVE      R34 R51      ; R34 := R51
727 [-]: JMP       784          ; PC := 784
728 [-]: EQ        0 R34 K98    ; if R34 ~= "INFESTATION" then PC := 737
729 [-]: JMP       737          ; PC := 737
730 [-]: MOVE      R50 R34      ; R50 := R34
731 [-]: SELF      R51 R4 K37   ; R52 := R4; R51 := R4[0x42b04007]
732 [-]: LOADK     R53 K99      ; R53 := "/Lotus/Language/Game/Faction_InfestationUC"
733 [-]: LOADBOOL  R54 0 0      ; R54 := false
734 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
735 [-]: MOVE      R34 R51      ; R34 := R51
736 [-]: JMP       784          ; PC := 784
737 [-]: EQ        0 R34 K85    ; if R34 ~= "TENNO" then PC := 746
738 [-]: JMP       746          ; PC := 746
739 [-]: MOVE      R50 R34      ; R50 := R34
740 [-]: SELF      R51 R4 K37   ; R52 := R4; R51 := R4[0x42b04007]
741 [-]: LOADK     R53 K65      ; R53 := "/Lotus/Language/Menu/Codex_Tenno"
742 [-]: LOADBOOL  R54 0 0      ; R54 := false
743 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
744 [-]: MOVE      R34 R51      ; R34 := R51
745 [-]: JMP       784          ; PC := 784
746 [-]: EQ        0 R34 K100   ; if R34 ~= "WILD" then PC := 754
747 [-]: JMP       754          ; PC := 754
748 [-]: SELF      R51 R4 K37   ; R52 := R4; R51 := R4[0x42b04007]
749 [-]: LOADK     R53 K101     ; R53 := "/Lotus/Language/Game/Faction_WildUC"
750 [-]: LOADBOOL  R54 0 0      ; R54 := false
751 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
752 [-]: MOVE      R34 R51      ; R34 := R51
753 [-]: JMP       784          ; PC := 784
754 [-]: EQ        0 R34 K102   ; if R34 ~= "OROKIN" then PC := 763
755 [-]: JMP       763          ; PC := 763
756 [-]: MOVE      R50 R34      ; R50 := R34
757 [-]: SELF      R51 R4 K37   ; R52 := R4; R51 := R4[0x42b04007]
758 [-]: LOADK     R53 K103     ; R53 := "/Lotus/Language/Game/Faction_OrokinUC"
759 [-]: LOADBOOL  R54 0 0      ; R54 := false
760 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
761 [-]: MOVE      R34 R51      ; R34 := R51
762 [-]: JMP       784          ; PC := 784
763 [-]: EQ        0 R34 K104   ; if R34 ~= "REDVEIL" then PC := 771
764 [-]: JMP       771          ; PC := 771
765 [-]: SELF      R51 R4 K37   ; R52 := R4; R51 := R4[0x42b04007]
766 [-]: LOADK     R53 K105     ; R53 := "/Lotus/Language/Game/Faction_RedVeilUC"
767 [-]: LOADBOOL  R54 0 0      ; R54 := false
768 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
769 [-]: MOVE      R34 R51      ; R34 := R51
770 [-]: JMP       784          ; PC := 784
771 [-]: EQ        0 R34 K106   ; if R34 ~= "SENTIENT" then PC := 779
772 [-]: JMP       779          ; PC := 779
773 [-]: SELF      R51 R4 K37   ; R52 := R4; R51 := R4[0x42b04007]
774 [-]: LOADK     R53 K107     ; R53 := "/Lotus/Language/Game/Faction_SentientUC"
775 [-]: LOADBOOL  R54 0 0      ; R54 := false
776 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
777 [-]: MOVE      R34 R51      ; R34 := R51
778 [-]: JMP       784          ; PC := 784
779 [-]: GETGLOBAL R51 K50      ; R51 := 0x7f5022cf
780 [-]: GETTABLE  R51 R51 K54  ; R82 := R51[0x3f3e4d12]
781 [-]: MOVE      R52 R34      ; R52 := R34
782 [-]: CALL      R51 2 2      ; R51 := R51(R52)
783 [-]: MOVE      R34 R51      ; R34 := R51
784 [-]: EQ        1 R17 K53    ; if R17 == nil then PC := 807
785 [-]: JMP       807          ; PC := 807
786 [-]: GETTABLE  R51 R17 K2   ; R51 := R17["name"]
787 [-]: GETGLOBAL R52 K108     ; R52 := CETUS_NODE_TAG
788 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 792
789 [-]: JMP       792          ; PC := 792
790 [-]: LOADK     R50 K109     ; R50 := "ostron"
791 [-]: JMP       807          ; PC := 807
792 [-]: GETTABLE  R51 R17 K2   ; R51 := R17["name"]
793 [-]: GETGLOBAL R52 K110     ; R52 := FORTUNA_NODE_TAG
794 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 798
795 [-]: JMP       798          ; PC := 798
796 [-]: LOADK     R50 K111     ; R50 := "solaris"
797 [-]: JMP       807          ; PC := 807
798 [-]: GETTABLE  R51 R17 K2   ; R51 := R17["name"]
799 [-]: GETGLOBAL R52 K112     ; R52 := IRON_WAKE_NODE_TAG
800 [-]: EQ        1 R51 R52    ; if R51 == R52 then PC := 806
801 [-]: JMP       806          ; PC := 806
802 [-]: GETTABLE  R51 R17 K2   ; R51 := R17["name"]
803 [-]: GETGLOBAL R52 K83      ; R52 := APARTMENT_NODE_TAG
804 [-]: EQ        0 R51 R52    ; if R51 ~= R52 then PC := 807
805 [-]: JMP       807          ; PC := 807
806 [-]: LOADK     R50 K113     ; R50 := "tenno"
807 [-]: TEST      R43 1        ; if R43 then PC := 811
808 [-]: JMP       811          ; PC := 811
809 [-]: TEST      R44 0        ; if not R44 then PC := 812
810 [-]: JMP       812          ; PC := 812
811 [-]: LOADK     R50 K113     ; R50 := "tenno"
812 [-]: GETUPVAL  R51 U8       ; R51 := U8
813 [-]: MOVE      R52 R6       ; R52 := R6
814 [-]: CALL      R51 2 2      ; R51 := R51(R52)
815 [-]: TEST      R51 0        ; if not R51 then PC := 818
816 [-]: JMP       818          ; PC := 818
817 [-]: MOVE      R34 R51      ; R34 := R51
818 [-]: GETTABLE  R52 R6 K81   ; R52 := R6["missionType"]
819 [-]: EQ        0 R52 K114   ; if R52 ~= 31.000000 then PC := 835
820 [-]: JMP       835          ; PC := 835
821 [-]: SELF      R52 R4 K37   ; R53 := R4; R52 := R4[0x42b04007]
822 [-]: LOADK     R54 K115     ; R54 := "<RAILJACK>"
823 [-]: LOADBOOL  R55 1 0      ; R55 := true
824 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
825 [-]: LOADK     R53 K39      ; R53 := " "
826 [-]: MOVE      R54 R30      ; R54 := R30
827 [-]: LOADK     R55 K116     ; R55 := " ("
828 [-]: SELF      R56 R4 K37   ; R57 := R4; R56 := R4[0x42b04007]
829 [-]: LOADK     R58 K117     ; R58 := "/Lotus/Language/Menu/RailjackTitle"
830 [-]: LOADBOOL  R59 0 0      ; R59 := false
831 [-]: CALL      R56 4 2      ; R56 := R56(R57,R58,R59)
832 [-]: LOADK     R57 K118     ; R57 := ")"
833 [-]: CONCAT    R30 R52 R57  ; R30 := R52 .. R53 .. R54 .. R55 .. R56 .. R57
834 [-]: JMP       868          ; PC := 868
835 [-]: GETTABLE  R52 R6 K119  ; R52 := R6["isSharkwingMission"]
836 [-]: TEST      R52 1        ; if R52 then PC := 855
837 [-]: JMP       855          ; PC := 855
838 [-]: GETTABLE  R52 R6 K120  ; R52 := R6["archwingRequired"]
839 [-]: TEST      R52 0        ; if not R52 then PC := 868
840 [-]: JMP       868          ; PC := 868
841 [-]: SELF      R52 R4 K37   ; R53 := R4; R52 := R4[0x42b04007]
842 [-]: LOADK     R54 K121     ; R54 := "<ARCHWING>"
843 [-]: LOADBOOL  R55 1 0      ; R55 := true
844 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
845 [-]: LOADK     R53 K39      ; R53 := " "
846 [-]: MOVE      R54 R30      ; R54 := R30
847 [-]: LOADK     R55 K116     ; R55 := " ("
848 [-]: SELF      R56 R4 K37   ; R57 := R4; R56 := R4[0x42b04007]
849 [-]: LOADK     R58 K122     ; R58 := "/Lotus/Language/Menu/Loadout_Archwing"
850 [-]: LOADBOOL  R59 0 0      ; R59 := false
851 [-]: CALL      R56 4 2      ; R56 := R56(R57,R58,R59)
852 [-]: LOADK     R57 K118     ; R57 := ")"
853 [-]: CONCAT    R30 R52 R57  ; R30 := R52 .. R53 .. R54 .. R55 .. R56 .. R57
854 [-]: JMP       868          ; PC := 868
855 [-]: SELF      R52 R4 K37   ; R53 := R4; R52 := R4[0x42b04007]
856 [-]: LOADK     R54 K121     ; R54 := "<ARCHWING>"
857 [-]: LOADBOOL  R55 1 0      ; R55 := true
858 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
859 [-]: LOADK     R53 K39      ; R53 := " "
860 [-]: MOVE      R54 R30      ; R54 := R30
861 [-]: LOADK     R55 K116     ; R55 := " ("
862 [-]: SELF      R56 R4 K37   ; R57 := R4; R56 := R4[0x42b04007]
863 [-]: LOADK     R58 K123     ; R58 := "/Lotus/Language/Menu/Sharkwing"
864 [-]: LOADBOOL  R59 0 0      ; R59 := false
865 [-]: CALL      R56 4 2      ; R56 := R56(R57,R58,R59)
866 [-]: LOADK     R57 K118     ; R57 := ")"
867 [-]: CONCAT    R30 R52 R57  ; R30 := R52 .. R53 .. R54 .. R55 .. R56 .. R57
868 [-]: NEWTABLE  R52 0 21     ; R52 := {}
869 [-]: SETTABLE  R52 K124 R6  ; R52["mMission"] := R6
870 [-]: SETTABLE  R52 K125 R48 ; R52["mFounders"] := R48
871 [-]: SETTABLE  R52 K126 R33 ; R52["mTexture"] := R33
872 [-]: SETTABLE  R52 K127 R49 ; R52["mLocationTexture"] := R49
873 [-]: SETTABLE  R52 K20 R7   ; R52["mAlertInfo"] := R7
874 [-]: SETTABLE  R52 K128 R9  ; R52["mSyndicateInfo"] := R9
875 [-]: SETTABLE  R52 K129 R31 ; R52["mInvasionInfo"] := R31
876 [-]: SETTABLE  R52 K130 R8  ; R52["mGoalInfo"] := R8
877 [-]: SETTABLE  R52 K131 R10 ; R52["mSortieInfo"] := R10
878 [-]: SETTABLE  R52 K132 R11 ; R52["mActiveMissionInfo"] := R11
879 [-]: SETTABLE  R52 K133 R12 ; R52["mGhostTowerMissionInfo"] := R12
880 [-]: SETTABLE  R52 K134 R13 ; R52["mEliteAlertMissionInfo"] := R13
881 [-]: SETTABLE  R52 K135 R41 ; R52["mCardTag"] := R41
882 [-]: SETTABLE  R52 K136 R30 ; R52["mName"] := R30
883 [-]: SETTABLE  R52 K137 R40 ; R52["mRarity"] := R40
884 [-]: SETTABLE  R52 K78 R34  ; R52["mDesc"] := R34
885 [-]: SETTABLE  R52 K138 R35 ; R52["mDescText"] := R35
886 [-]: SETTABLE  R52 K139 R39 ; R52["mNameText"] := R39
887 [-]: SETTABLE  R52 K140 R32 ; R52["mNumMissions"] := R32
888 [-]: SETTABLE  R52 K141 R36 ; R52["mDifficulty"] := R36
889 [-]: SETTABLE  R52 K142 R37 ; R52["mLevelMin"] := R37
890 [-]: SETTABLE  R52 K143 R38 ; R52["mLevelMax"] := R38
891 [-]: GETTABLE  R53 R6 K145  ; R53 := R6["conclaveRange"]
892 [-]: GETTABLE  R53 R53 K146 ; R53 := R53["minValue"]
893 [-]: SETTABLE  R52 K144 R53 ; R52["mConclaveMin"] := R53
894 [-]: GETTABLE  R53 R6 K145  ; R53 := R6["conclaveRange"]
895 [-]: GETTABLE  R53 R53 K148 ; R53 := R53["maxValue"]
896 [-]: SETTABLE  R52 K147 R53 ; R52["mConclaveMax"] := R53
897 [-]: SETTABLE  R52 K149 R50 ; R52["mFactionTag"] := R50
898 [-]: RETURN    R52 2        ; return R52
899 [-]: RETURN    R0 1         ; return 


; Function #228:
;
; Name:            
; Defined at line: 4352
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x1fd6abd0]
  2 [-]: GETGLOBAL R4 K1        ; R4 := 0x0032441c
  3 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["UIMovie_MeleeCombosMovie"]
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 18
  9 [-]: JMP       18           ; PC := 18
 10 [-]: GETGLOBAL R3 K4        ; R3 := _T
 11 [-]: SETTABLE  R3 K5 R1     ; R3["StanceUpgradeInfo"] := R1
 12 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0xe4162eed]
 13 [-]: LOADK     R5 K7        ; R5 := "SetStanceUpgradeInfo"
 14 [-]: LOADK     R6 K5        ; R6 := "StanceUpgradeInfo"
 15 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 16 [-]: GETGLOBAL R3 K4        ; R3 := _T
 17 [-]: SETTABLE  R3 K5 K8     ; R3["StanceUpgradeInfo"] := nil
 18 [-]: RETURN    R2 2         ; return R2
 19 [-]: RETURN    R0 1         ; return 


; Function #229:
;
; Name:            
; Defined at line: 4362
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 69
  5 [-]: JMP       69           ; PC := 69
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusAttractModeGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 69
 11 [-]: JMP       69           ; PC := 69
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 13 [-]: GETGLOBAL R1 K4        ; R1 := 0x25d99d89
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 69
 16 [-]: JMP       69           ; PC := 69
 17 [-]: GETGLOBAL R0 K4        ; R0 := 0x25d99d89
 18 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x25a6e75e]
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 21 [-]: MOVE      R2 R0        ; R2 := R0
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 152
 24 [-]: JMP       152          ; PC := 152
 25 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0[0x566259e1]
 26 [-]: LOADK     R3 0         ; R3 := 0.000000
 27 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0[0x4e457768]
 28 [-]: LOADK     R6 0         ; R6 := 0.000000
 29 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 30 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 31 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 32 [-]: MOVE      R3 R1        ; R3 := R1
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 152
 35 [-]: JMP       152          ; PC := 152
 36 [-]: SELF      R2 R1 K9     ; R3 := R1; R2 := R1[0x2abbe722]
 37 [-]: LOADK     R4 3         ; R4 := 3.000000
 38 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 39 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["mItemId"]
 40 [-]: SELF      R3 R1 K9     ; R4 := R1; R3 := R1[0x2abbe722]
 41 [-]: LOADK     R5 3         ; R5 := 3.000000
 42 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 43 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mModSlot"]
 44 [-]: SELF      R4 R0 K12    ; R5 := R0; R4 := R0[0x2f30b8db]
 45 [-]: GETTABLE  R6 R2 K13    ; R6 := R2["mId"]
 46 [-]: MOVE      R7 R3        ; R7 := R3
 47 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 48 [-]: LOADK     R5 1         ; R5 := 1.000000
 49 [-]: LEN       R6 R4        ; R6 := # R4
 50 [-]: LOADK     R7 1         ; R7 := 1.000000
 51 [-]: FORPREP   R5 67        ; R5 -= R7; PC := 67
 52 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 53 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 54 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["mItemType"]
 55 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 56 [-]: TEST      R9 1         ; if R9 then PC := 67
 57 [-]: JMP       67           ; PC := 67
 58 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 59 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["mItemType"]
 60 [-]: SELF      R9 R9 K2     ; R10 := R9; R9 := R9[0xf2deaf69]
 61 [-]: GETGLOBAL R11 K15      ; R11 := gMeleeTreeType
 62 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 63 [-]: TEST      R9 0         ; if not R9 then PC := 67
 64 [-]: JMP       67           ; PC := 67
 65 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 66 [-]: RETURN    R9 2         ; return R9
 67 [-]: FORLOOP   R5 52        ; R5 += R7; if R5 <= R6 then begin PC := 52; R8 := R5 end
 68 [-]: JMP       152          ; PC := 152
 69 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 70 [-]: GETGLOBAL R10 K16      ; R10 := 0x89326c93
 71 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 72 [-]: TEST      R9 1         ; if R9 then PC := 152
 73 [-]: JMP       152          ; PC := 152
 74 [-]: GETGLOBAL R9 K16       ; R9 := 0x89326c93
 75 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9[0x78298275]
 76 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 77 [-]: GETGLOBAL R10 K0       ; R10 := 0x7b998233
 78 [-]: MOVE      R11 R9       ; R11 := R9
 79 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 80 [-]: TEST      R10 1        ; if R10 then PC := 152
 81 [-]: JMP       152          ; PC := 152
 82 [-]: SELF      R10 R9 K18   ; R11 := R9; R10 := R9[0xde321e6f]
 83 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 84 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10[0xbb4a3d82]
 85 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 86 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
 87 [-]: MOVE      R12 R10      ; R12 := R10
 88 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 89 [-]: TEST      R11 1        ; if R11 then PC := 152
 90 [-]: JMP       152          ; PC := 152
 91 [-]: SELF      R11 R10 K20  ; R12 := R10; R11 := R10[0x0ad758cb]
 92 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 93 [-]: LOADK     R12 1        ; R12 := 1.000000
 94 [-]: MOVE      R13 R11      ; R13 := R11
 95 [-]: LOADK     R14 1        ; R14 := 1.000000
 96 [-]: FORPREP   R12 120      ; R12 -= R14; PC := 120
 97 [-]: SELF      R16 R10 K21  ; R17 := R10; R16 := R10[0xfef27732]
 98 [-]: SUB       R18 R15 K22  ; R18 := R15 - 1.000000
 99 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
100 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
101 [-]: MOVE      R18 R16      ; R18 := R16
102 [-]: CALL      R17 2 2      ; R17 := R17(R18)
103 [-]: TEST      R17 1        ; if R17 then PC := 120
104 [-]: JMP       120          ; PC := 120
105 [-]: SELF      R17 R16 K2   ; R18 := R16; R17 := R16[0xf2deaf69]
106 [-]: GETGLOBAL R19 K15      ; R19 := gMeleeTreeType
107 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
108 [-]: TEST      R17 0        ; if not R17 then PC := 120
109 [-]: JMP       120          ; PC := 120
110 [-]: GETGLOBAL R17 K7       ; R17 := 0x6c97a788
111 [-]: GETTABLE  R17 R17 K23  ; R82 := R17[0x1aba4d9e]
112 [-]: CALL      R17 1 2      ; R17 := R17()
113 [-]: SELF      R18 R16 K24  ; R19 := R16; R18 := R16[0xcde10c4a]
114 [-]: CALL      R18 2 2      ; R18 := R18(R19)
115 [-]: SETTABLE  R17 K14 R18  ; R17["mItemType"] := R18
116 [-]: SELF      R18 R16 K26  ; R19 := R16; R18 := R16[0x7b0c20c2]
117 [-]: CALL      R18 2 2      ; R18 := R18(R19)
118 [-]: SETTABLE  R17 K25 R18  ; R17["mUpgradeFingerprint"] := R18
119 [-]: RETURN    R17 2        ; return R17
120 [-]: FORLOOP   R12 97       ; R12 += R14; if R12 <= R13 then begin PC := 97; R15 := R12 end
121 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
122 [-]: GETGLOBAL R19 K1       ; R19 := 0xbe190284
123 [-]: CALL      R18 2 2      ; R18 := R18(R19)
124 [-]: TEST      R18 1        ; if R18 then PC := 152
125 [-]: JMP       152          ; PC := 152
126 [-]: GETGLOBAL R18 K1       ; R18 := 0xbe190284
127 [-]: SELF      R18 R18 K2   ; R19 := R18; R18 := R18[0xf2deaf69]
128 [-]: GETGLOBAL R20 K27      ; R20 := gLotusPvpGameRulesType
129 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
130 [-]: TEST      R18 0        ; if not R18 then PC := 137
131 [-]: JMP       137          ; PC := 137
132 [-]: GETGLOBAL R18 K1       ; R18 := 0xbe190284
133 [-]: SELF      R18 R18 K28  ; R19 := R18; R18 := R18[0xa52237bc]
134 [-]: CALL      R18 2 2      ; R18 := R18(R19)
135 [-]: TEST      R18 1        ; if R18 then PC := 143
136 [-]: JMP       143          ; PC := 143
137 [-]: GETGLOBAL R18 K1       ; R18 := 0xbe190284
138 [-]: SELF      R18 R18 K2   ; R19 := R18; R18 := R18[0xf2deaf69]
139 [-]: GETGLOBAL R20 K29      ; R20 := gLotusFightingGameRulesType
140 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
141 [-]: TEST      R18 0        ; if not R18 then PC := 152
142 [-]: JMP       152          ; PC := 152
143 [-]: GETGLOBAL R18 K7       ; R18 := 0x6c97a788
144 [-]: GETTABLE  R18 R18 K23  ; R82 := R18[0x1aba4d9e]
145 [-]: CALL      R18 1 2      ; R18 := R18()
146 [-]: SELF      R19 R10 K30  ; R20 := R10; R19 := R10[0xe3ca779e]
147 [-]: CALL      R19 2 2      ; R19 := R19(R20)
148 [-]: SELF      R19 R19 K24  ; R20 := R19; R19 := R19[0xcde10c4a]
149 [-]: CALL      R19 2 2      ; R19 := R19(R20)
150 [-]: SETTABLE  R18 K14 R19  ; R18["mItemType"] := R19
151 [-]: RETURN    R18 2        ; return R18
152 [-]: LOADNIL   R19 R19      ; R19 := nil
153 [-]: RETURN    R19 2        ; return R19
154 [-]: RETURN    R0 1         ; return 


; Function #230:
;
; Name:            
; Defined at line: 4411
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7ed0a956
  2 [-]: LOADK     R3 K1        ; R3 := "/Lotus/Types/LotusMeleeTree/LotusMeleeTree"
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  5 [-]: MOVE      R4 R0        ; R4 := R0
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 1         ; if R3 then PC := 39
  8 [-]: JMP       39           ; PC := 39
  9 [-]: LOADK     R3 0         ; R3 := 0.000000
 10 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 11 [-]: SELF      R5 R0 K3     ; R6 := R0; R5 := R0[0xfef27732]
 12 [-]: MOVE      R7 R3        ; R7 := R3
 13 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 14 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 15 [-]: TEST      R4 1         ; if R4 then PC := 39
 16 [-]: JMP       39           ; PC := 39
 17 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0[0xfef27732]
 18 [-]: MOVE      R6 R3        ; R6 := R3
 19 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 20 [-]: SELF      R5 R4 K4     ; R6 := R4; R5 := R4[0xf2deaf69]
 21 [-]: GETGLOBAL R7 K5        ; R7 := gLotusArtifactUpgradeType
 22 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 23 [-]: SELF      R6 R4 K4     ; R7 := R4; R6 := R4[0xf2deaf69]
 24 [-]: MOVE      R8 R2        ; R8 := R2
 25 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 26 [-]: TEST      R5 0         ; if not R5 then PC := 37
 27 [-]: JMP       37           ; PC := 37
 28 [-]: TEST      R6 0         ; if not R6 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: TEST      R1 1         ; if R1 then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: SELF      R7 R0 K6     ; R8 := R0; R7 := R0[0x12dd9da2]
 33 [-]: MOVE      R9 R4        ; R9 := R4
 34 [-]: LOADBOOL  R10 1 0      ; R10 := true
 35 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 36 [-]: JMP       10           ; PC := 10
 37 [-]: ADD       R3 R3 K7     ; R3 := R3 + 1.000000
 38 [-]: JMP       10           ; PC := 10
 39 [-]: RETURN    R0 1         ; return 


; Function #231:
;
; Name:            
; Defined at line: 4430
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "Assassination" then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
  5 [-]: GETTABLE  R2 R2 K3     ; R2 := R2[1.000000]
  6 [-]: RETURN    R2 2         ; return R2
  7 [-]: JMP       101          ; PC := 101
  8 [-]: EQ        0 R0 K4      ; if R0 ~= "Capture" then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 12 [-]: GETTABLE  R2 R2 K5     ; R2 := R2[2.000000]
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: JMP       101          ; PC := 101
 15 [-]: EQ        0 R0 K6      ; if R0 ~= "PVP" then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 18 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 19 [-]: GETTABLE  R2 R2 K7     ; R2 := R2[3.000000]
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: JMP       101          ; PC := 101
 22 [-]: EQ        0 R0 K8      ; if R0 ~= "Deception" then PC := 29
 23 [-]: JMP       29           ; PC := 29
 24 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 25 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 26 [-]: GETTABLE  R2 R2 K9     ; R2 := R2[4.000000]
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: JMP       101          ; PC := 101
 29 [-]: EQ        0 R0 K10     ; if R0 ~= "Defense" then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 32 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 33 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[6.000000]
 34 [-]: RETURN    R2 2         ; return R2
 35 [-]: JMP       101          ; PC := 101
 36 [-]: EQ        0 R0 K12     ; if R0 ~= "Exterminate" then PC := 46
 37 [-]: JMP       46           ; PC := 46
 38 [-]: EQ        1 R1 K13     ; if R1 == nil then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 41 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 42 [-]: ADD       R3 K14 R1    ; R3 := 7.000000 + R1
 43 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 44 [-]: RETURN    R2 2         ; return R2
 45 [-]: JMP       101          ; PC := 101
 46 [-]: EQ        0 R0 K15     ; if R0 ~= "Hijack" then PC := 53
 47 [-]: JMP       53           ; PC := 53
 48 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 49 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 50 [-]: GETTABLE  R2 R2 K16    ; R2 := R2[10.000000]
 51 [-]: RETURN    R2 2         ; return R2
 52 [-]: JMP       101          ; PC := 101
 53 [-]: EQ        0 R0 K17     ; if R0 ~= "Territory" then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 56 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 57 [-]: GETTABLE  R2 R2 K18    ; R2 := R2[11.000000]
 58 [-]: RETURN    R2 2         ; return R2
 59 [-]: JMP       101          ; PC := 101
 60 [-]: EQ        0 R0 K19     ; if R0 ~= "MobileDefense" then PC := 67
 61 [-]: JMP       67           ; PC := 67
 62 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 63 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 64 [-]: GETTABLE  R2 R2 K20    ; R2 := R2[12.000000]
 65 [-]: RETURN    R2 2         ; return R2
 66 [-]: JMP       101          ; PC := 101
 67 [-]: EQ        0 R0 K21     ; if R0 ~= "Rescue" then PC := 74
 68 [-]: JMP       74           ; PC := 74
 69 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 70 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 71 [-]: GETTABLE  R2 R2 K22    ; R2 := R2[13.000000]
 72 [-]: RETURN    R2 2         ; return R2
 73 [-]: JMP       101          ; PC := 101
 74 [-]: EQ        0 R0 K23     ; if R0 ~= "Sabotage" then PC := 81
 75 [-]: JMP       81           ; PC := 81
 76 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 77 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 78 [-]: GETTABLE  R2 R2 K24    ; R2 := R2[14.000000]
 79 [-]: RETURN    R2 2         ; return R2
 80 [-]: JMP       101          ; PC := 101
 81 [-]: EQ        0 R0 K25     ; if R0 ~= "Spy" then PC := 88
 82 [-]: JMP       88           ; PC := 88
 83 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 84 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 85 [-]: GETTABLE  R2 R2 K26    ; R2 := R2[15.000000]
 86 [-]: RETURN    R2 2         ; return R2
 87 [-]: JMP       101          ; PC := 101
 88 [-]: EQ        0 R0 K27     ; if R0 ~= "Survival" then PC := 95
 89 [-]: JMP       95           ; PC := 95
 90 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 91 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 92 [-]: GETTABLE  R2 R2 K28    ; R2 := R2[16.000000]
 93 [-]: RETURN    R2 2         ; return R2
 94 [-]: JMP       101          ; PC := 101
 95 [-]: EQ        0 R0 K29     ; if R0 ~= "Void" then PC := 101
 96 [-]: JMP       101          ; PC := 101
 97 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 98 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
 99 [-]: GETTABLE  R2 R2 K30    ; R2 := R2[17.000000]
100 [-]: RETURN    R2 2         ; return R2
101 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
102 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["UITextures_GameModeTextures"]
103 [-]: GETTABLE  R2 R2 K31    ; R2 := R2[5.000000]
104 [-]: RETURN    R2 2         ; return R2
105 [-]: RETURN    R0 1         ; return 


; Function #232:
;
; Name:            
; Defined at line: 4464
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 1         ; if R4 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: TEST      R4 0         ; if not R4 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADNIL   R4 R7        ; R4 := R5 := R6 := R7 := nil
 12 [-]: RETURN    R4 5         ; return R4,R5,R6,R7
 13 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0[0x25a6e75e]
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: SELF      R5 R4 K2     ; R6 := R4; R5 := R4[0xe9768ed0]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 18 [-]: MOVE      R7 R5        ; R7 := R5
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: TEST      R6 0         ; if not R6 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADNIL   R6 R9        ; R6 := R7 := R8 := R9 := nil
 23 [-]: RETURN    R6 5         ; return R6,R7,R8,R9
 24 [-]: SELF      R6 R1 K3     ; R7 := R1; R6 := R1[0x8a0f9f88]
 25 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 26 [-]: GETGLOBAL R7 K4        ; R7 := 0xc8802016
 27 [-]: MOVE      R8 R5        ; R8 := R5
 28 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 29 [-]: JMP       142          ; PC := 142
 30 [-]: GETTABLE  R12 R11 K5   ; R12 := R11["mItemType"]
 31 [-]: EQ        0 R12 R1     ; if R12 ~= R1 then PC := 142
 32 [-]: JMP       142          ; PC := 142
 33 [-]: LOADK     R12 -1       ; R12 := -1.000000
 34 [-]: GETTABLE  R13 R11 K6   ; R13 := R11["mProgress"]
 35 [-]: TEST      R3 0         ; if not R3 then PC := 44
 36 [-]: JMP       44           ; PC := 44
 37 [-]: GETGLOBAL R14 K7       ; R14 := 0x3d106989
 38 [-]: LOADK     R15 K8       ; R15 := "_GetQuestInfo: progress - "
 39 [-]: GETGLOBAL R16 K9       ; R16 := 0x64fb1586
 40 [-]: LEN       R17 R13      ; R17 := # R13
 41 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 42 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 43 [-]: CALL      R14 2 1      ; R14(R15)
 44 [-]: LEN       R14 R13      ; R14 := # R13
 45 [-]: LT        0 K10 R14    ; if 0.000000 >= R14 then PC := 58
 46 [-]: JMP       58           ; PC := 58
 47 [-]: GETTABLE  R14 R13 K11  ; R14 := R13[1.000000]
 48 [-]: GETTABLE  R12 R14 K12  ; R12 := R14["mCompletion"]
 49 [-]: TEST      R3 0         ; if not R3 then PC := 58
 50 [-]: JMP       58           ; PC := 58
 51 [-]: GETGLOBAL R14 K7       ; R14 := 0x3d106989
 52 [-]: LOADK     R15 K13      ; R15 := "_GetQuestInfo: stage 1 completion - "
 53 [-]: GETGLOBAL R16 K9       ; R16 := 0x64fb1586
 54 [-]: MOVE      R17 R12      ; R17 := R12
 55 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 56 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 57 [-]: CALL      R14 2 1      ; R14(R15)
 58 [-]: LOADK     R14 0        ; R14 := 0.000000
 59 [-]: LE        0 K10 R12    ; if 0.000000 > R12 then PC := 93
 60 [-]: JMP       93           ; PC := 93
 61 [-]: LEN       R15 R13      ; R15 := # R13
 62 [-]: LT        0 R15 R6     ; if R15 >= R6 then PC := 78
 63 [-]: JMP       78           ; PC := 78
 64 [-]: GETGLOBAL R15 K4       ; R15 := 0xc8802016
 65 [-]: MOVE      R16 R13      ; R16 := R13
 66 [-]: CALL      R15 2 4      ; R15,R16,R17 := R15(R16)
 67 [-]: JMP       74           ; PC := 74
 68 [-]: GETTABLE  R20 R19 K12  ; R20 := R19["mCompletion"]
 69 [-]: LT        0 K14 R20    ; if -1.000000 >= R20 then PC := 76
 70 [-]: JMP       76           ; PC := 76
 71 [-]: MOVE      R14 R18      ; R14 := R18
 72 [-]: JMP       74           ; PC := 74
 73 [-]: JMP       76           ; PC := 76
 74 [-]: TFORLOOP  R15 2        ; R18,R19 :=  R15(R16,R17); if R18 ~= nil then begin PC = 68; R17 := R18 end
 75 [-]: JMP       68           ; PC := 68
 76 [-]: ADD       R14 R14 K11  ; R14 := R14 + 1.000000
 77 [-]: JMP       93           ; PC := 93
 78 [-]: LOADK     R20 1        ; R20 := 1.000000
 79 [-]: GETGLOBAL R21 K15      ; R21 := 0x5bced4c4
 80 [-]: GETTABLE  R21 R21 K16  ; R82 := R21[0xac1b386a]
 81 [-]: LEN       R22 R13      ; R22 := # R13
 82 [-]: MOVE      R23 R6       ; R23 := R6
 83 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
 84 [-]: LOADK     R22 1        ; R22 := 1.000000
 85 [-]: FORPREP   R20 92       ; R20 -= R22; PC := 92
 86 [-]: GETTABLE  R24 R13 R23  ; R24 := R13[R23]
 87 [-]: GETTABLE  R24 R24 K12  ; R24 := R24["mCompletion"]
 88 [-]: LT        0 R24 R12    ; if R24 >= R12 then PC := 92
 89 [-]: JMP       92           ; PC := 92
 90 [-]: MOVE      R14 R23      ; R14 := R23
 91 [-]: JMP       93           ; PC := 93
 92 [-]: FORLOOP   R20 86       ; R20 += R22; if R20 <= R21 then begin PC := 86; R23 := R20 end
 93 [-]: TEST      R3 0         ; if not R3 then PC := 102
 94 [-]: JMP       102          ; PC := 102
 95 [-]: GETGLOBAL R24 K7       ; R24 := 0x3d106989
 96 [-]: LOADK     R25 K17      ; R25 := "_GetQuestInfo: difficulty (A) - "
 97 [-]: GETGLOBAL R26 K9       ; R26 := 0x64fb1586
 98 [-]: MOVE      R27 R12      ; R27 := R12
 99 [-]: CALL      R26 2 2      ; R26 := R26(R27)
100 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
101 [-]: CALL      R24 2 1      ; R24(R25)
102 [-]: LT        0 R12 K10    ; if R12 >= 0.000000 then PC := 107
103 [-]: JMP       107          ; PC := 107
104 [-]: LOADK     R14 1        ; R14 := 1.000000
105 [-]: LOADK     R12 0        ; R12 := 0.000000
106 [-]: JMP       111          ; PC := 111
107 [-]: EQ        0 R14 K10    ; if R14 ~= 0.000000 then PC := 111
108 [-]: JMP       111          ; PC := 111
109 [-]: ADD       R12 R12 K11  ; R12 := R12 + 1.000000
110 [-]: LOADK     R14 1        ; R14 := 1.000000
111 [-]: TEST      R3 0         ; if not R3 then PC := 124
112 [-]: JMP       124          ; PC := 124
113 [-]: GETGLOBAL R24 K7       ; R24 := 0x3d106989
114 [-]: LOADK     R25 K18      ; R25 := "_GetQuestInfo: difficulty (B) - "
115 [-]: GETGLOBAL R26 K9       ; R26 := 0x64fb1586
116 [-]: MOVE      R27 R12      ; R27 := R12
117 [-]: CALL      R26 2 2      ; R26 := R26(R27)
118 [-]: LOADK     R27 K19      ; R27 := ", mission index="
119 [-]: GETGLOBAL R28 K9       ; R28 := 0x64fb1586
120 [-]: MOVE      R29 R14      ; R29 := R14
121 [-]: CALL      R28 2 2      ; R28 := R28(R29)
122 [-]: CONCAT    R25 R25 R28  ; R25 := R25 .. R26 .. R27 .. R28
123 [-]: CALL      R24 2 1      ; R24(R25)
124 [-]: LOADNIL   R24 R24      ; R24 := nil
125 [-]: TEST      R2 0         ; if not R2 then PC := 137
126 [-]: JMP       137          ; PC := 137
127 [-]: SELF      R25 R1 K20   ; R26 := R1; R25 := R1[0xe975bacb]
128 [-]: SUB       R27 R14 K11  ; R27 := R14 - 1.000000
129 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
130 [-]: TEST      R25 0        ; if not R25 then PC := 137
131 [-]: JMP       137          ; PC := 137
132 [-]: SELF      R25 R1 K21   ; R26 := R1; R25 := R1[0x42700bd0]
133 [-]: CALL      R25 2 2      ; R25 := R25(R26)
134 [-]: GETTABLE  R25 R25 R14  ; R25 := R25[R14]
135 [-]: GETTABLE  R25 R25 K22  ; R25 := R25["mMainMission"]
136 [-]: GETTABLE  R24 R25 K23  ; R24 := R25["mKey"]
137 [-]: MOVE      R25 R14      ; R25 := R14
138 [-]: MOVE      R26 R12      ; R26 := R12
139 [-]: GETTABLE  R27 R11 K24  ; R27 := R11["mCanProgressQuest"]
140 [-]: MOVE      R28 R24      ; R28 := R24
141 [-]: RETURN    R25 5        ; return R25,R26,R27,R28
142 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 30; R9 := R10 end
143 [-]: JMP       30           ; PC := 30
144 [-]: LOADNIL   R25 R28      ; R25 := R26 := R27 := R28 := nil
145 [-]: RETURN    R25 5        ; return R25,R26,R27,R28
146 [-]: RETURN    R0 1         ; return 


; Function #233:
;
; Name:            
; Defined at line: 4548
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #234:
;
; Name:            
; Defined at line: 4552
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R4        ; R1 := R2 := R3 := R4 := nil
  7 [-]: RETURN    R1 5         ; return R1,R2,R3,R4
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0x25a6e75e]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K2        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["ActiveQuestLoaded"]
 12 [-]: TEST      R2 1         ; if R2 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADNIL   R2 R5        ; R2 := R3 := R4 := R5 := nil
 15 [-]: RETURN    R2 5         ; return R2,R3,R4,R5
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0xb009bbc6
 17 [-]: SELF      R3 R1 K5     ; R4 := R1; R3 := R1[0x8e7c3b5e]
 18 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 19 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 20 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 21 [-]: MOVE      R4 R2        ; R4 := R2
 22 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 23 [-]: TEST      R3 0         ; if not R3 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADNIL   R3 R6        ; R3 := R4 := R5 := R6 := nil
 26 [-]: RETURN    R3 5         ; return R3,R4,R5,R6
 27 [-]: MOVE      R3 R2        ; R3 := R2
 28 [-]: GETUPVAL  R4 U0        ; R4 := U0
 29 [-]: MOVE      R5 R0        ; R5 := R0
 30 [-]: MOVE      R6 R2        ; R6 := R2
 31 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 32 [-]: RETURN    R3 0         ; return R3,...
 33 [-]: RETURN    R0 1         ; return 


; Function #235:
;
; Name:            
; Defined at line: 4571
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #236:
;
; Name:            
; Defined at line: 4575
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: TEST      R0 1         ; if R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: GETGLOBAL R0 K0        ; R0 := 0x25d99d89
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x293ec9c4]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 13
 13 [-]: LOADBOOL  R1 1 0       ; R1 := true
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #237:
;
; Name:            
; Defined at line: 4580
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #238:
;
; Name:            
; Defined at line: 4584
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x25d99d89
  2 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  3 [-]: MOVE      R5 R3        ; R5 := R3
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: TEST      R4 0         ; if not R4 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: SELF      R4 R3 K2     ; R5 := R3; R4 := R3[0x25a6e75e]
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x8f27d10c]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: TEST      R5 1         ; if R5 then PC := 100
 16 [-]: JMP       100          ; PC := 100
 17 [-]: SELF      R5 R3 K4     ; R6 := R3; R5 := R3[0x69727e0b]
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: GETTABLE  R6 R5 K5     ; R6 := R5["mGoals"]
 20 [-]: CLOSURE   R7 0         ; R7 := closure(Function #238.1)
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: MOVE      R0 R6        ; R0 := R6
 23 [-]: MOVE      R0 R3        ; R0 := R3
 24 [-]: MOVE      R0 R1        ; R0 := R1
 25 [-]: LOADK     R8 1         ; R8 := 1.000000
 26 [-]: LEN       R9 R4        ; R9 := # R4
 27 [-]: LOADK     R10 1        ; R10 := 1.000000
 28 [-]: FORPREP   R8 93        ; R8 -= R10; PC := 93
 29 [-]: GETTABLE  R12 R4 R11   ; R12 := R4[R11]
 30 [-]: MOVE      R13 R7       ; R13 := R7
 31 [-]: MOVE      R14 R12      ; R14 := R12
 32 [-]: MOVE      R15 R6       ; R15 := R6
 33 [-]: MOVE      R16 R1       ; R16 := R1
 34 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 35 [-]: GETGLOBAL R14 K1       ; R14 := 0x7b998233
 36 [-]: MOVE      R15 R13      ; R15 := R13
 37 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 38 [-]: TEST      R14 1        ; if R14 then PC := 93
 39 [-]: JMP       93           ; PC := 93
 40 [-]: NEWTABLE  R14 0 5      ; R14 := {}
 41 [-]: SETTABLE  R14 K6 R12   ; R14[0x5ba460ac] := R12
 42 [-]: SETTABLE  R14 K7 R13   ; R14["Type"] := R13
 43 [-]: GETGLOBAL R15 K9       ; R15 := 0x603636ad
 44 [-]: GETGLOBAL R16 K10      ; R16 := 0x64fb1586
 45 [-]: SELF      R17 R13 K11  ; R18 := R13; R17 := R13[0xd3a9d01f]
 46 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
 47 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
 48 [-]: LOADBOOL  R17 0 0      ; R17 := false
 49 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 50 [-]: SETTABLE  R14 K8 R15   ; R14[0xa5c556b9] := R15
 51 [-]: GETGLOBAL R15 K9       ; R15 := 0x603636ad
 52 [-]: GETGLOBAL R16 K10      ; R16 := 0x64fb1586
 53 [-]: SELF      R17 R13 K13  ; R18 := R13; R17 := R13[0x5ba460ac]
 54 [-]: CALL      R17 2 0      ; R17,... := R17(R18)
 55 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
 56 [-]: LOADBOOL  R17 0 0      ; R17 := false
 57 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 58 [-]: SETTABLE  R14 K12 R15  ; R14[0x66edf04f] := R15
 59 [-]: GETUPVAL  R15 U1       ; R15 := U1
 60 [-]: LOADNIL   R16 R16      ; R16 := nil
 61 [-]: MOVE      R17 R13      ; R17 := R13
 62 [-]: LOADNIL   R18 R19      ; R18 := R19 := nil
 63 [-]: CALL      R15 5 2      ; R15 := R15(R16,R17,R18,R19)
 64 [-]: SETTABLE  R14 K14 R15  ; R14["ToolTip"] := R15
 65 [-]: GETGLOBAL R15 K1       ; R15 := 0x7b998233
 66 [-]: MOVE      R16 R2       ; R16 := R2
 67 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 68 [-]: TEST      R15 1        ; if R15 then PC := 82
 69 [-]: JMP       82           ; PC := 82
 70 [-]: SELF      R15 R2 K15   ; R16 := R2; R15 := R2[0x105074fb]
 71 [-]: GETTABLE  R17 R12 K16  ; R17 := R12["mItemType"]
 72 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 73 [-]: GETGLOBAL R16 K1       ; R16 := 0x7b998233
 74 [-]: MOVE      R17 R15      ; R17 := R15
 75 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 76 [-]: TEST      R16 1        ; if R16 then PC := 82
 77 [-]: JMP       82           ; PC := 82
 78 [-]: SETTABLE  R14 K17 R15  ; R14["StoreItem"] := R15
 79 [-]: SELF      R16 R15 K19  ; R17 := R15; R16 := R15[0x056dcf06]
 80 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 81 [-]: SETTABLE  R14 K18 R16  ; R14[0xe0cba3ca] := R16
 82 [-]: SELF      R16 R13 K20  ; R17 := R13; R16 := R13[0x535d4938]
 83 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 84 [-]: TEST      R16 0        ; if not R16 then PC := 88
 85 [-]: JMP       88           ; PC := 88
 86 [-]: GETTABLE  R16 R12 K22  ; R16 := R12["mItemCount"]
 87 [-]: SETTABLE  R14 K21 R16  ; R14["Count"] := R16
 88 [-]: GETGLOBAL R16 K23      ; R16 := 0x33bdd652
 89 [-]: GETTABLE  R16 R16 K24  ; R82 := R16[0x23d5322f]
 90 [-]: MOVE      R17 R0       ; R17 := R0
 91 [-]: MOVE      R18 R14      ; R18 := R14
 92 [-]: CALL      R16 3 1      ; R16(R17,R18)
 93 [-]: FORLOOP   R8 29        ; R8 += R10; if R8 <= R9 then begin PC := 29; R11 := R8 end
 94 [-]: GETGLOBAL R16 K23      ; R16 := 0x33bdd652
 95 [-]: GETTABLE  R16 R16 K25  ; R82 := R16[0xf21b1d8e]
 96 [-]: MOVE      R17 R0       ; R17 := R0
 97 [-]: CLOSURE   R18 1        ; R18 := closure(Function #238.2)
 98 [-]: CALL      R16 3 1      ; R16(R17,R18)
 99 [-]: CLOSE     R5           ; SAVE R5,...
100 [-]: RETURN    R0 1         ; return 


; Function #238.1:
;
; Name:            
; Defined at line: 4597
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mItemCount"]
  2 [-]: LE        0 R1 K1      ; if R1 > 0.000000 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: LOADNIL   R1 R1        ; R1 := nil
  5 [-]: RETURN    R1 2         ; return R1
  6 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mItemType"]
  7 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0xf2deaf69]
 13 [-]: GETGLOBAL R4 K5        ; R4 := gKeyItemType
 14 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 15 [-]: TEST      R2 1         ; if R2 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: LOADNIL   R2 R2        ; R2 := nil
 18 [-]: RETURN    R2 2         ; return R2
 19 [-]: GETUPVAL  R2 U0        ; R2 := U0
 20 [-]: GETTABLE  R2 R2 K6     ; R82 := R2[0x23a862e6]
 21 [-]: CALL      R2 1 2       ; R2 := R2()
 22 [-]: TEST      R2 0         ; if not R2 then PC := 54
 23 [-]: JMP       54           ; PC := 54
 24 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 25 [-]: GETGLOBAL R3 K7        ; R3 := 0x0032441c
 26 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["UITypes_UGCKeys"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 1         ; if R2 then PC := 54
 29 [-]: JMP       54           ; PC := 54
 30 [-]: LOADK     R2 1         ; R2 := 1.000000
 31 [-]: GETGLOBAL R3 K7        ; R3 := 0x0032441c
 32 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["UITypes_UGCKeys"]
 33 [-]: LEN       R3 R3        ; R3 := # R3
 34 [-]: LOADK     R4 1         ; R4 := 1.000000
 35 [-]: FORPREP   R2 53        ; R2 -= R4; PC := 53
 36 [-]: GETGLOBAL R6 K3        ; R6 := 0x7b998233
 37 [-]: GETGLOBAL R7 K7        ; R7 := 0x0032441c
 38 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["UITypes_UGCKeys"]
 39 [-]: GETTABLE  R7 R7 R5     ; R7 := R7[R5]
 40 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 41 [-]: TEST      R6 1         ; if R6 then PC := 53
 42 [-]: JMP       53           ; PC := 53
 43 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mItemType"]
 44 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6[0xf2deaf69]
 45 [-]: GETGLOBAL R8 K7        ; R8 := 0x0032441c
 46 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["UITypes_UGCKeys"]
 47 [-]: GETTABLE  R8 R8 R5     ; R8 := R8[R5]
 48 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 49 [-]: TEST      R6 0         ; if not R6 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: LOADNIL   R6 R6        ; R6 := nil
 52 [-]: RETURN    R6 2         ; return R6
 53 [-]: FORLOOP   R2 36        ; R2 += R4; if R2 <= R3 then begin PC := 36; R5 := R2 end
 54 [-]: GETGLOBAL R6 K9        ; R6 := 0xb009bbc6
 55 [-]: MOVE      R7 R1        ; R7 := R1
 56 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 57 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
 58 [-]: MOVE      R8 R6        ; R8 := R6
 59 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 60 [-]: TEST      R7 0         ; if not R7 then PC := 64
 61 [-]: JMP       64           ; PC := 64
 62 [-]: LOADNIL   R7 R7        ; R7 := nil
 63 [-]: RETURN    R7 2         ; return R7
 64 [-]: SELF      R7 R6 K10    ; R8 := R6; R7 := R6[0x9f056544]
 65 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 66 [-]: TEST      R7 0         ; if not R7 then PC := 95
 67 [-]: JMP       95           ; PC := 95
 68 [-]: LOADBOOL  R7 1 0       ; R7 := true
 69 [-]: LOADK     R8 1         ; R8 := 1.000000
 70 [-]: GETUPVAL  R9 U1        ; R9 := U1
 71 [-]: LEN       R9 R9        ; R9 := # R9
 72 [-]: LOADK     R10 1        ; R10 := 1.000000
 73 [-]: FORPREP   R8 90        ; R8 -= R10; PC := 90
 74 [-]: GETUPVAL  R12 U2       ; R12 := U2
 75 [-]: SELF      R12 R12 K11  ; R13 := R12; R12 := R12[0x7e2a4aa9]
 76 [-]: SUB       R14 R11 K12  ; R14 := R11 - 1.000000
 77 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 78 [-]: TEST      R12 0        ; if not R12 then PC := 90
 79 [-]: JMP       90           ; PC := 90
 80 [-]: GETUPVAL  R12 U1       ; R12 := U1
 81 [-]: GETTABLE  R12 R12 R11  ; R12 := R12[R11]
 82 [-]: GETTABLE  R13 R12 K13  ; R13 := R12["mKeyRequired"]
 83 [-]: EQ        0 R1 R13     ; if R1 ~= R13 then PC := 90
 84 [-]: JMP       90           ; PC := 90
 85 [-]: GETTABLE  R13 R12 K14  ; R13 := R12["mSuccess"]
 86 [-]: EQ        0 R13 K1     ; if R13 ~= 0.000000 then PC := 90
 87 [-]: JMP       90           ; PC := 90
 88 [-]: LOADBOOL  R7 0 0       ; R7 := false
 89 [-]: JMP       91           ; PC := 91
 90 [-]: FORLOOP   R8 74        ; R8 += R10; if R8 <= R9 then begin PC := 74; R11 := R8 end
 91 [-]: TEST      R7 0         ; if not R7 then PC := 95
 92 [-]: JMP       95           ; PC := 95
 93 [-]: LOADNIL   R13 R13      ; R13 := nil
 94 [-]: RETURN    R13 2        ; return R13
 95 [-]: GETUPVAL  R13 U3       ; R13 := U3
 96 [-]: EQ        1 R13 K15    ; if R13 == nil then PC := 105
 97 [-]: JMP       105          ; PC := 105
 98 [-]: SELF      R13 R6 K16   ; R14 := R6; R13 := R6[0x6c053909]
 99 [-]: CALL      R13 2 2      ; R13 := R13(R14)
100 [-]: GETUPVAL  R14 U3       ; R14 := U3
101 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 105
102 [-]: JMP       105          ; PC := 105
103 [-]: LOADNIL   R13 R13      ; R13 := nil
104 [-]: RETURN    R13 2        ; return R13
105 [-]: RETURN    R6 2         ; return R6
106 [-]: RETURN    R0 1         ; return 


; Function #238.2:
;
; Name:            
; Defined at line: 4678
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["Name"]
  2 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["Name"]
  3 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADBOOL  R2 1 0       ; R2 := true
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #239:
;
; Name:            
; Defined at line: 4683
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R82 := R1[0x9f57dd7d]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x5d10207d]
  5 [-]: LOADK     R3 9         ; R3 := 9.000000
  6 [-]: LOADBOOL  R4 1 0       ; R4 := true
  7 [-]: CALL      R2 3 0       ; R2,... := R2(R3,R4)
  8 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K0     ; R82 := R2[0x9f57dd7d]
 11 [-]: GETUPVAL  R3 U1        ; R3 := U1
 12 [-]: GETTABLE  R3 R3 K1     ; R82 := R3[0x5d10207d]
 13 [-]: LOADK     R4 6         ; R4 := 6.000000
 14 [-]: LOADBOOL  R5 1 0       ; R5 := true
 15 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 16 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 17 [-]: GETGLOBAL R3 K3        ; R3 := 0x7f5022cf
 18 [-]: GETTABLE  R3 R3 K4     ; R82 := R3[0x3f3e4d12]
 19 [-]: GETGLOBAL R4 K5        ; R4 := 0x603636ad
 20 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0[0xd3a9d01f]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0x6d604ba7]
 23 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 24 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 25 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 26 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 27 [-]: GETGLOBAL R4 K5        ; R4 := 0x603636ad
 28 [-]: LOADK     R5 K8        ; R5 := "/Lotus/Language/ShipFeatureItems/ShipFeatureUpgraded"
 29 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 30 [-]: SETTABLE  R6 K9 R3     ; R6["SEGMENT"] := R3
 31 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 32 [-]: LOADK     R5 K10       ; R5 := "<font color=\"#FloatingContent\"><br><b>"
 33 [-]: MOVE      R6 R4        ; R6 := R4
 34 [-]: CONCAT    R4 R5 R6     ; R4 := R5 .. R6
 35 [-]: MOVE      R5 R4        ; R5 := R4
 36 [-]: LOADK     R6 K11       ; R6 := "</b><br><br></font>"
 37 [-]: CONCAT    R4 R5 R6     ; R4 := R5 .. R6
 38 [-]: GETGLOBAL R5 K5        ; R5 := 0x603636ad
 39 [-]: SELF      R6 R0 K12    ; R7 := R0; R6 := R0[0x5ba460ac]
 40 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 41 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6[0x6d604ba7]
 42 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 43 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 44 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 45 [-]: LOADK     R6 0         ; R6 := 0.000000
 46 [-]: LOADK     R7 K13       ; R7 := ""
 47 [-]: GETGLOBAL R8 K3        ; R8 := 0x7f5022cf
 48 [-]: GETTABLE  R8 R8 K14    ; R82 := R8[0xa5c556b9]
 49 [-]: MOVE      R9 R5        ; R9 := R5
 50 [-]: LOADK     R10 K15      ; R10 := "\r\n%-[^%-^\r^\n]+"
 51 [-]: MOVE      R11 R6       ; R11 := R6
 52 [-]: CALL      R8 4 3       ; R8,R9 := R8(R9,R10,R11)
 53 [-]: EQ        1 R8 K16     ; if R8 == nil then PC := 78
 54 [-]: JMP       78           ; PC := 78
 55 [-]: EQ        0 R9 K16     ; if R9 ~= nil then PC := 58
 56 [-]: JMP       58           ; PC := 58
 57 [-]: JMP       78           ; PC := 78
 58 [-]: SELF      R10 R5 K17   ; R11 := R5; R10 := R5[0x1a94c9cc]
 59 [-]: MOVE      R12 R8       ; R12 := R8
 60 [-]: MOVE      R13 R9       ; R13 := R9
 61 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 62 [-]: EQ        1 R10 K16    ; if R10 == nil then PC := 78
 63 [-]: JMP       78           ; PC := 78
 64 [-]: SELF      R11 R10 K18  ; R12 := R10; R11 := R10[0x66edf04f]
 65 [-]: LOADK     R13 K19      ; R13 := "\r\n"
 66 [-]: LOADK     R14 K13      ; R14 := ""
 67 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 68 [-]: MOVE      R10 R11      ; R10 := R11
 69 [-]: MOVE      R11 R7       ; R11 := R7
 70 [-]: LOADK     R12 K20      ; R12 := "    "
 71 [-]: MOVE      R13 R10      ; R13 := R10
 72 [-]: LOADK     R14 K21      ; R14 := "<br>"
 73 [-]: CONCAT    R7 R11 R14   ; R7 := R11 .. R12 .. R13 .. R14
 74 [-]: JMP       76           ; PC := 76
 75 [-]: JMP       78           ; PC := 78
 76 [-]: MOVE      R6 R9        ; R6 := R9
 77 [-]: JMP       47           ; PC := 47
 78 [-]: LOADK     R11 K22      ; R11 := "<font color=\"#Content\">"
 79 [-]: MOVE      R12 R7       ; R12 := R7
 80 [-]: LOADK     R13 K23      ; R13 := "</font>"
 81 [-]: CONCAT    R7 R11 R13   ; R7 := R11 .. R12 .. R13
 82 [-]: GETUPVAL  R11 U0       ; R11 := U0
 83 [-]: GETTABLE  R11 R11 K24  ; R82 := R11[0xe0cba3ca]
 84 [-]: MOVE      R12 R4       ; R12 := R4
 85 [-]: MOVE      R13 R7       ; R13 := R7
 86 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 87 [-]: LOADNIL   R13 R14      ; R13 := R14 := nil
 88 [-]: LOADBOOL  R15 1 0      ; R15 := true
 89 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 90 [-]: RETURN    R0 1         ; return 


; Function #240:
;
; Name:            
; Defined at line: 4722
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x76ea806b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x8792aaab]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 145
  5 [-]: JMP       145          ; PC := 145
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x89326c93
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xfb669000]
  8 [-]: GETGLOBAL R3 K4        ; R3 := gUIConsoleTriggerType
  9 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 10 [-]: GETGLOBAL R2 K5        ; R2 := 0x25d99d89
 11 [-]: LOADBOOL  R3 0 0       ; R3 := false
 12 [-]: GETGLOBAL R4 K6        ; R4 := 0x0469f296
 13 [-]: LOADK     R5 K7        ; R5 := "News"
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: GETGLOBAL R5 K6        ; R5 := 0x0469f296
 16 [-]: LOADK     R6 K8        ; R6 := "Conclave"
 17 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 18 [-]: LOADK     R6 1         ; R6 := 1.000000
 19 [-]: LOADK     R7 2         ; R7 := 2.000000
 20 [-]: LOADK     R8 1         ; R8 := 1.000000
 21 [-]: FORPREP   R6 141       ; R6 -= R8; PC := 141
 22 [-]: LOADK     R10 1        ; R10 := 1.000000
 23 [-]: LEN       R11 R1       ; R11 := # R1
 24 [-]: LOADK     R12 1        ; R12 := 1.000000
 25 [-]: FORPREP   R10 140      ; R10 -= R12; PC := 140
 26 [-]: GETTABLE  R14 R1 R13   ; R14 := R1[R13]
 27 [-]: SELF      R14 R14 K9   ; R15 := R14; R14 := R14[0x22da1852]
 28 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 29 [-]: LOADBOOL  R15 1 0      ; R15 := true
 30 [-]: GETGLOBAL R16 K10      ; R16 := 0x1239e0a2
 31 [-]: CALL      R16 1 2      ; R16 := R16()
 32 [-]: TEST      R16 0        ; if not R16 then PC := 42
 33 [-]: JMP       42           ; PC := 42
 34 [-]: GETGLOBAL R16 K11      ; R16 := 0x34291f5c
 35 [-]: GETTABLE  R16 R16 K12  ; R82 := R16[0x056bfe8b]
 36 [-]: CALL      R16 1 2      ; R16 := R16()
 37 [-]: TEST      R16 1        ; if R16 then PC := 42
 38 [-]: JMP       42           ; PC := 42
 39 [-]: EQ        0 R14 R4     ; if R14 ~= R4 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: LOADBOOL  R15 0 0      ; R15 := false
 42 [-]: EQ        1 R14 R5     ; if R14 == R5 then PC := 46
 43 [-]: JMP       46           ; PC := 46
 44 [-]: EQ        0 R14 R4     ; if R14 ~= R4 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETUPVAL  R16 U0       ; R16 := U0
 47 [-]: CALL      R16 1 2      ; R16 := R16()
 48 [-]: TEST      R16 1        ; if R16 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: LOADBOOL  R15 0 0      ; R15 := false
 51 [-]: GETTABLE  R16 R1 R13   ; R16 := R1[R13]
 52 [-]: SELF      R16 R16 K13  ; R17 := R16; R16 := R16[0xb62a384e]
 53 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 54 [-]: TEST      R16 1        ; if R16 then PC := 140
 55 [-]: JMP       140          ; PC := 140
 56 [-]: GETGLOBAL R16 K14      ; R16 := 0x7b998233
 57 [-]: MOVE      R17 R2       ; R17 := R2
 58 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 59 [-]: TEST      R16 1        ; if R16 then PC := 140
 60 [-]: JMP       140          ; PC := 140
 61 [-]: GETTABLE  R16 R1 R13   ; R16 := R1[R13]
 62 [-]: SELF      R16 R16 K15  ; R17 := R16; R16 := R16[0x8f163e57]
 63 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 64 [-]: LEN       R17 R16      ; R17 := # R16
 65 [-]: EQ        1 R17 K16    ; if R17 == 0.000000 then PC := 68
 66 [-]: JMP       68           ; PC := 68
 67 [-]: LOADBOOL  R17 0 1      ; R17 := false; PC := 68
 68 [-]: LOADBOOL  R17 1 0      ; R17 := true
 69 [-]: GETUPVAL  R18 U1       ; R18 := U1
 70 [-]: GETTABLE  R18 R18 K17  ; R82 := R18[0x06d055f9]
 71 [-]: EQ        1 R9 K18     ; if R9 == 1.000000 then PC := 74
 72 [-]: JMP       74           ; PC := 74
 73 [-]: LOADBOOL  R19 0 1      ; R19 := false; PC := 74
 74 [-]: LOADBOOL  R19 1 0      ; R19 := true
 75 [-]: GETGLOBAL R20 K19      ; R20 := 0x5bced4c4
 76 [-]: GETTABLE  R20 R20 K20  ; R82 := R20[0xac1b386a]
 77 [-]: LOADK     R21 1        ; R21 := 1.000000
 78 [-]: LEN       R22 R16      ; R22 := # R16
 79 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 80 [-]: LEN       R21 R16      ; R21 := # R16
 81 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
 82 [-]: LOADK     R19 1        ; R19 := 1.000000
 83 [-]: MOVE      R20 R18      ; R20 := R18
 84 [-]: LOADK     R21 1        ; R21 := 1.000000
 85 [-]: FORPREP   R19 126      ; R19 -= R21; PC := 126
 86 [-]: GETTABLE  R23 R16 R22  ; R23 := R16[R22]
 87 [-]: GETTABLE  R23 R23 K21  ; R23 := R23["mFeatureItem"]
 88 [-]: SELF      R24 R2 K22   ; R25 := R2; R24 := R2[0x4ae54c32]
 89 [-]: MOVE      R26 R23      ; R26 := R23
 90 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
 91 [-]: TEST      R24 0        ; if not R24 then PC := 99
 92 [-]: JMP       99           ; PC := 99
 93 [-]: GETTABLE  R24 R1 R13   ; R24 := R1[R13]
 94 [-]: SELF      R24 R24 K23  ; R25 := R24; R24 := R24[0x32817074]
 95 [-]: MOVE      R26 R23      ; R26 := R23
 96 [-]: CALL      R24 3 1      ; R24(R25,R26)
 97 [-]: LOADBOOL  R17 1 0      ; R17 := true
 98 [-]: JMP       126          ; PC := 126
 99 [-]: TEST      R3 1         ; if R3 then PC := 126
100 [-]: JMP       126          ; PC := 126
101 [-]: SELF      R24 R2 K24   ; R25 := R2; R24 := R2[0x28d326ac]
102 [-]: MOVE      R26 R23      ; R26 := R23
103 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
104 [-]: TEST      R24 0        ; if not R24 then PC := 126
105 [-]: JMP       126          ; PC := 126
106 [-]: GETTABLE  R24 R16 R22  ; R24 := R16[R22]
107 [-]: GETTABLE  R24 R24 K25  ; R24 := R24["mRequiresMainUpgrade"]
108 [-]: TEST      R24 0        ; if not R24 then PC := 115
109 [-]: JMP       115          ; PC := 115
110 [-]: GETTABLE  R24 R1 R13   ; R24 := R1[R13]
111 [-]: SELF      R24 R24 K26  ; R25 := R24; R24 := R24[0x9dba7a65]
112 [-]: CALL      R24 2 2      ; R24 := R24(R25)
113 [-]: TEST      R24 0        ; if not R24 then PC := 126
114 [-]: JMP       126          ; PC := 126
115 [-]: GETTABLE  R24 R1 R13   ; R24 := R1[R13]
116 [-]: SELF      R24 R24 K27  ; R25 := R24; R24 := R24[0xd76f0956]
117 [-]: MOVE      R26 R23      ; R26 := R23
118 [-]: CALL      R24 3 1      ; R24(R25,R26)
119 [-]: LOADBOOL  R17 1 0      ; R17 := true
120 [-]: GETUPVAL  R24 U2       ; R24 := U2
121 [-]: GETTABLE  R25 R16 R22  ; R25 := R16[R22]
122 [-]: GETTABLE  R25 R25 K28  ; R25 := R25["mInstallNowTransmission"]
123 [-]: CALL      R24 2 1      ; R24(R25)
124 [-]: LOADBOOL  R3 1 0       ; R3 := true
125 [-]: JMP       127          ; PC := 127
126 [-]: FORLOOP   R19 86       ; R19 += R21; if R19 <= R20 then begin PC := 86; R22 := R19 end
127 [-]: GETTABLE  R24 R1 R13   ; R24 := R1[R13]
128 [-]: SELF      R24 R24 K29  ; R25 := R24; R24 := R24[0x56c05b89]
129 [-]: TESTSET   R26 R17 0    ; if not R17 then PC := 132 else R26 := R17
130 [-]: JMP       132          ; PC := 132
131 [-]: MOVE      R26 R15      ; R26 := R15
132 [-]: CALL      R24 3 1      ; R24(R25,R26)
133 [-]: TEST      R0 0         ; if not R0 then PC := 140
134 [-]: JMP       140          ; PC := 140
135 [-]: TEST      R15 0        ; if not R15 then PC := 140
136 [-]: JMP       140          ; PC := 140
137 [-]: GETTABLE  R24 R1 R13   ; R24 := R1[R13]
138 [-]: SELF      R24 R24 K30  ; R25 := R24; R24 := R24[0x6bfeac2e]
139 [-]: CALL      R24 2 1      ; R24(R25)
140 [-]: FORLOOP   R10 26       ; R10 += R12; if R10 <= R11 then begin PC := 26; R13 := R10 end
141 [-]: FORLOOP   R6 22        ; R6 += R8; if R6 <= R7 then begin PC := 22; R9 := R6 end
142 [-]: GETGLOBAL R24 K31      ; R24 := _T
143 [-]: SETTABLE  R24 K32 K33  ; R24["uiConsoleTriggersInitialized"] := true
144 [-]: JMP       148          ; PC := 148
145 [-]: GETGLOBAL R24 K34      ; R24 := 0x3d106989
146 [-]: LOADK     R25 K35      ; R25 := "Warning: called UpdateUIConsoleTriggers but the player isn't logged in yet!"
147 [-]: CALL      R24 2 1      ; R24(R25)
148 [-]: RETURN    R0 1         ; return 


; Function #241:
;
; Name:            
; Defined at line: 4783
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x7f5022cf
  3 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x41e2ae25]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: EQ        0 R2 K2      ; if R2 ~= 0.000000 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: LOADBOOL  R3 0 0       ; R3 := false
  9 [-]: RETURN    R3 2         ; return R3
 10 [-]: GETGLOBAL R3 K0        ; R3 := 0x7f5022cf
 11 [-]: GETTABLE  R3 R3 K3     ; R82 := R3[0x1a94c9cc]
 12 [-]: MOVE      R4 R0        ; R4 := R0
 13 [-]: LOADK     R5 1         ; R5 := 1.000000
 14 [-]: LOADK     R6 1         ; R6 := 1.000000
 15 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 16 [-]: GETGLOBAL R4 K0        ; R4 := 0x7f5022cf
 17 [-]: GETTABLE  R4 R4 K3     ; R82 := R4[0x1a94c9cc]
 18 [-]: MOVE      R5 R0        ; R5 := R0
 19 [-]: MOVE      R6 R2        ; R6 := R2
 20 [-]: MOVE      R7 R2        ; R7 := R2
 21 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 22 [-]: LOADK     R5 0         ; R5 := 0.000000
 23 [-]: LOADK     R6 9         ; R6 := 9.000000
 24 [-]: LOADK     R7 1         ; R7 := 1.000000
 25 [-]: FORPREP   R5 35        ; R5 -= R7; PC := 35
 26 [-]: GETGLOBAL R9 K0        ; R9 := 0x7f5022cf
 27 [-]: GETTABLE  R9 R9 K4     ; R82 := R9[0x66edf04f]
 28 [-]: MOVE      R10 R1       ; R10 := R1
 29 [-]: GETGLOBAL R11 K5       ; R11 := 0x64fb1586
 30 [-]: MOVE      R12 R8       ; R12 := R8
 31 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 32 [-]: LOADK     R12 K6       ; R12 := ""
 33 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 34 [-]: MOVE      R1 R9        ; R1 := R9
 35 [-]: FORLOOP   R5 26        ; R5 += R7; if R5 <= R6 then begin PC := 26; R8 := R5 end
 36 [-]: EQ        1 R1 K6      ; if R1 == "" then PC := 50
 37 [-]: JMP       50           ; PC := 50
 38 [-]: EQ        1 R1 K7      ; if R1 == "." then PC := 50
 39 [-]: JMP       50           ; PC := 50
 40 [-]: EQ        0 R1 K8      ; if R1 ~= " " then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: EQ        1 R3 K8      ; if R3 == " " then PC := 50
 43 [-]: JMP       50           ; PC := 50
 44 [-]: EQ        1 R4 K8      ; if R4 == " " then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: EQ        1 R1 K9      ; if R1 == ". " then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: EQ        0 R1 K10     ; if R1 ~= " ." then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: LOADBOOL  R9 1 0       ; R9 := true
 51 [-]: RETURN    R9 2         ; return R9
 52 [-]: JMP       55           ; PC := 55
 53 [-]: LOADBOOL  R9 0 0       ; R9 := false
 54 [-]: RETURN    R9 2         ; return R9
 55 [-]: RETURN    R0 1         ; return 


; Function #242:
;
; Name:            
; Defined at line: 4802
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["GetTopScreen"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  6 [-]: GETGLOBAL R3 K3        ; R3 := 0x89326c93
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: LOADBOOL  R2 0 0       ; R2 := false
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: GETGLOBAL R2 K0        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K4     ; R82 := R2[0x876f7e29]
 19 [-]: CALL      R2 1 3       ; R2,R3 := R2()
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x89326c93
 21 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0xdd25e9d1]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0[0xde321e6f]
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: SELF      R6 R5 K7     ; R7 := R5; R6 := R5[0x881b6b90]
 26 [-]: LOADK     R8 0         ; R8 := 0.000000
 27 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 28 [-]: GETGLOBAL R7 K0        ; R7 := _T
 29 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["DisableHeadTracking"]
 30 [-]: TEST      R7 1         ; if R7 then PC := 73
 31 [-]: JMP       73           ; PC := 73
 32 [-]: EQ        1 R3 K10     ; if R3 == "LoadOut" then PC := 73
 33 [-]: JMP       73           ; PC := 73
 34 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 35 [-]: MOVE      R8 R4        ; R8 := R4
 36 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 37 [-]: TEST      R7 0         ; if not R7 then PC := 73
 38 [-]: JMP       73           ; PC := 73
 39 [-]: SELF      R7 R0 K11    ; R8 := R0; R7 := R0[0x6f8babf9]
 40 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 41 [-]: TEST      R7 1         ; if R7 then PC := 73
 42 [-]: JMP       73           ; PC := 73
 43 [-]: SELF      R7 R0 K12    ; R8 := R0; R7 := R0[0x10ba8e3e]
 44 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 45 [-]: TEST      R7 1         ; if R7 then PC := 73
 46 [-]: JMP       73           ; PC := 73
 47 [-]: SELF      R7 R0 K13    ; R8 := R0; R7 := R0[0x0e46e45b]
 48 [-]: LOADK     R9 0         ; R9 := 0.000000
 49 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 50 [-]: TEST      R7 1         ; if R7 then PC := 73
 51 [-]: JMP       73           ; PC := 73
 52 [-]: SELF      R7 R0 K13    ; R8 := R0; R7 := R0[0x0e46e45b]
 53 [-]: LOADK     R9 3         ; R9 := 3.000000
 54 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 55 [-]: TEST      R7 1         ; if R7 then PC := 73
 56 [-]: JMP       73           ; PC := 73
 57 [-]: GETGLOBAL R7 K2        ; R7 := 0x7b998233
 58 [-]: MOVE      R8 R6        ; R8 := R6
 59 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 60 [-]: TEST      R7 1         ; if R7 then PC := 69
 61 [-]: JMP       69           ; PC := 69
 62 [-]: SELF      R7 R6 K14    ; R8 := R6; R7 := R6[0x6bb20d05]
 63 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 64 [-]: TEST      R7 1         ; if R7 then PC := 73
 65 [-]: JMP       73           ; PC := 73
 66 [-]: GETUPVAL  R7 U0        ; R7 := U0
 67 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 73
 68 [-]: JMP       73           ; PC := 73
 69 [-]: SELF      R7 R0 K15    ; R8 := R0; R7 := R0[0xcbc38746]
 70 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 71 [-]: TEST      R7 0         ; if not R7 then PC := 76
 72 [-]: JMP       76           ; PC := 76
 73 [-]: SELF      R7 R0 K16    ; R8 := R0; R7 := R0[0xebccefdd]
 74 [-]: CALL      R7 2 1       ; R7(R8)
 75 [-]: JMP       92           ; PC := 92
 76 [-]: LOADNIL   R7 R7        ; R7 := nil
 77 [-]: GETGLOBAL R8 K0        ; R8 := _T
 78 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["DiegeticPosition"]
 79 [-]: TEST      R8 0         ; if not R8 then PC := 86
 80 [-]: JMP       86           ; PC := 86
 81 [-]: EQ        1 R1 K18     ; if R1 == true then PC := 86
 82 [-]: JMP       86           ; PC := 86
 83 [-]: GETGLOBAL R8 K0        ; R8 := _T
 84 [-]: GETTABLE  R7 R8 K17    ; R7 := R8["DiegeticPosition"]
 85 [-]: JMP       89           ; PC := 89
 86 [-]: SELF      R8 R5 K19    ; R9 := R5; R8 := R5[0xefd0fde2]
 87 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 88 [-]: MOVE      R7 R8        ; R7 := R8
 89 [-]: SELF      R8 R0 K20    ; R9 := R0; R8 := R0[0x98776060]
 90 [-]: MOVE      R10 R7       ; R10 := R7
 91 [-]: CALL      R8 3 1       ; R8(R9,R10)
 92 [-]: LOADBOOL  R8 1 0       ; R8 := true
 93 [-]: RETURN    R8 2         ; return R8
 94 [-]: RETURN    R0 1         ; return 


; Function #243:
;
; Name:            
; Defined at line: 4837
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: TEST      R3 0         ; if not R3 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: CALL      R3 1 2       ; R3 := R3()
 10 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 11 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0[0xb407484d]
 12 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 13 [-]: LOADK     R6 1         ; R6 := 1.000000
 14 [-]: LEN       R7 R5        ; R7 := # R5
 15 [-]: LOADK     R8 1         ; R8 := 1.000000
 16 [-]: FORPREP   R6 23        ; R6 -= R8; PC := 23
 17 [-]: SELF      R10 R3 K2    ; R11 := R3; R10 := R3[0x5484bf3c]
 18 [-]: GETTABLE  R12 R5 R9    ; R12 := R5[R9]
 19 [-]: GETTABLE  R12 R12 K3   ; R12 := R12["mTag"]
 20 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 21 [-]: GETTABLE  R11 R10 K4   ; R11 := R10["name"]
 22 [-]: SETTABLE  R4 R11 K5    ; R4[R11] := true
 23 [-]: FORLOOP   R6 17        ; R6 += R8; if R6 <= R7 then begin PC := 17; R9 := R6 end
 24 [-]: SELF      R11 R1 K6    ; R12 := R1; R11 := R1[0xe9cbffa8]
 25 [-]: GETGLOBAL R13 K7       ; R13 := gNavigationFeatureItemType
 26 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 27 [-]: LOADK     R12 1        ; R12 := 1.000000
 28 [-]: LEN       R13 R11      ; R13 := # R11
 29 [-]: LOADK     R14 1        ; R14 := 1.000000
 30 [-]: FORPREP   R12 58       ; R12 -= R14; PC := 58
 31 [-]: GETTABLE  R16 R11 R15  ; R16 := R11[R15]
 32 [-]: SELF      R16 R16 K8   ; R17 := R16; R16 := R16[0xf278f8a1]
 33 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 34 [-]: GETGLOBAL R17 K9       ; R17 := 0xb009bbc6
 35 [-]: MOVE      R18 R16      ; R18 := R16
 36 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 37 [-]: SELF      R18 R17 K10  ; R19 := R17; R18 := R17[0x3ff99026]
 38 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 39 [-]: LOADK     R19 1        ; R19 := 1.000000
 40 [-]: LEN       R20 R18      ; R20 := # R18
 41 [-]: LOADK     R21 1        ; R21 := 1.000000
 42 [-]: FORPREP   R19 57       ; R19 -= R21; PC := 57
 43 [-]: SELF      R23 R3 K2    ; R24 := R3; R23 := R3[0x5484bf3c]
 44 [-]: GETTABLE  R25 R18 R22  ; R25 := R18[R22]
 45 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
 46 [-]: GETTABLE  R24 R23 K4   ; R24 := R23["name"]
 47 [-]: GETTABLE  R24 R4 R24   ; R24 := R4[R24]
 48 [-]: TEST      R24 0        ; if not R24 then PC := 57
 49 [-]: JMP       57           ; PC := 57
 50 [-]: GETTABLE  R24 R23 K4   ; R24 := R23["name"]
 51 [-]: SETTABLE  R4 R24 K11   ; R4[R24] := false
 52 [-]: GETGLOBAL R24 K12      ; R24 := 0x33bdd652
 53 [-]: GETTABLE  R24 R24 K13  ; R82 := R24[0x23d5322f]
 54 [-]: MOVE      R25 R2       ; R25 := R2
 55 [-]: MOVE      R26 R16      ; R26 := R16
 56 [-]: CALL      R24 3 1      ; R24(R25,R26)
 57 [-]: FORLOOP   R19 43       ; R19 += R21; if R19 <= R20 then begin PC := 43; R22 := R19 end
 58 [-]: FORLOOP   R12 31       ; R12 += R14; if R12 <= R13 then begin PC := 31; R15 := R12 end
 59 [-]: RETURN    R2 2         ; return R2
 60 [-]: RETURN    R0 1         ; return 


; Function #244:
;
; Name:            
; Defined at line: 4872
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R82 := R3[0x8bcd12b6]
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x0032441c
  4 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["UIColor_DarkGrey"]
  5 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  6 [-]: GETUPVAL  R4 U0        ; R4 := U0
  7 [-]: GETTABLE  R4 R4 K3     ; R82 := R4[0x06d055f9]
  8 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 11
 11 [-]: LOADBOOL  R5 1 0       ; R5 := true
 12 [-]: GETGLOBAL R6 K1        ; R6 := 0x0032441c
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["UIMaterial_Rectangle"]
 14 [-]: MOVE      R7 R2        ; R7 := R2
 15 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 16 [-]: GETGLOBAL R5 K6        ; R5 := 0xc8802016
 17 [-]: NEWTABLE  R6 3 0       ; R6 := {}
 18 [-]: MOVE      R7 R1        ; R7 := R1
 19 [-]: LOADK     R8 K7        ; R8 := ".Foreground"
 20 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 21 [-]: MOVE      R8 R1        ; R8 := R1
 22 [-]: LOADK     R9 K8        ; R9 := ".Shadow"
 23 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 24 [-]: MOVE      R9 R1        ; R9 := R1
 25 [-]: LOADK     R10 K9       ; R10 := ".BackShadow"
 26 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 27 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 28 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 29 [-]: JMP       56           ; PC := 56
 30 [-]: SELF      R10 R0 K10   ; R11 := R0; R10 := R0[0xd5181643]
 31 [-]: MOVE      R12 R9       ; R12 := R9
 32 [-]: MOVE      R13 R4       ; R13 := R4
 33 [-]: CALL      R10 4 1      ; R10(R11,R12,R13)
 34 [-]: SELF      R10 R0 K11   ; R11 := R0; R10 := R0[0x91e13703]
 35 [-]: MOVE      R12 R9       ; R12 := R9
 36 [-]: LOADK     R13 K12      ; R13 := "RectInnerColor"
 37 [-]: GETTABLE  R14 R3 K13   ; R14 := R3["r"]
 38 [-]: GETTABLE  R15 R3 K14   ; R15 := R3["g"]
 39 [-]: GETTABLE  R16 R3 K15   ; R16 := R3["b"]
 40 [-]: LOADK     R17 K16      ; R17 := 0.350000
 41 [-]: CALL      R10 8 1      ; R10(R11,R12,R13,R14,R15,R16,R17)
 42 [-]: SELF      R10 R0 K11   ; R11 := R0; R10 := R0[0x91e13703]
 43 [-]: MOVE      R12 R9       ; R12 := R9
 44 [-]: LOADK     R13 K17      ; R13 := "RectEdgeColor"
 45 [-]: GETGLOBAL R14 K1       ; R14 := 0x0032441c
 46 [-]: GETTABLE  R14 R14 K18  ; R14 := R14["UIColorObject_White"]
 47 [-]: GETTABLE  R14 R14 K13  ; R14 := R14["r"]
 48 [-]: GETGLOBAL R15 K1       ; R15 := 0x0032441c
 49 [-]: GETTABLE  R15 R15 K18  ; R15 := R15["UIColorObject_White"]
 50 [-]: GETTABLE  R15 R15 K14  ; R15 := R15["g"]
 51 [-]: GETGLOBAL R16 K1       ; R16 := 0x0032441c
 52 [-]: GETTABLE  R16 R16 K18  ; R16 := R16["UIColorObject_White"]
 53 [-]: GETTABLE  R16 R16 K15  ; R16 := R16["b"]
 54 [-]: LOADK     R17 1        ; R17 := 1.000000
 55 [-]: CALL      R10 8 1      ; R10(R11,R12,R13,R14,R15,R16,R17)
 56 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 30; R7 := R8 end
 57 [-]: JMP       30           ; PC := 30
 58 [-]: SELF      R10 R0 K19   ; R11 := R0; R10 := R0[0xf64b7262]
 59 [-]: MOVE      R12 R1       ; R12 := R1
 60 [-]: LOADK     R13 K20      ; R13 := "Foreground"
 61 [-]: LOADK     R14 4        ; R14 := 4.000000
 62 [-]: LOADK     R15 0        ; R15 := 0.000000
 63 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 64 [-]: SELF      R10 R0 K19   ; R11 := R0; R10 := R0[0xf64b7262]
 65 [-]: MOVE      R12 R1       ; R12 := R1
 66 [-]: LOADK     R13 K21      ; R13 := "Shadow"
 67 [-]: LOADK     R14 4        ; R14 := 4.000000
 68 [-]: LOADK     R15 200      ; R15 := 200.000000
 69 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 70 [-]: SELF      R10 R0 K19   ; R11 := R0; R10 := R0[0xf64b7262]
 71 [-]: MOVE      R12 R1       ; R12 := R1
 72 [-]: LOADK     R13 K22      ; R13 := "BackShadow"
 73 [-]: LOADK     R14 4        ; R14 := 4.000000
 74 [-]: LOADK     R15 400      ; R15 := 400.000000
 75 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 76 [-]: SELF      R10 R0 K19   ; R11 := R0; R10 := R0[0xf64b7262]
 77 [-]: MOVE      R12 R1       ; R12 := R1
 78 [-]: LOADK     R13 K20      ; R13 := "Foreground"
 79 [-]: LOADK     R14 10       ; R14 := 10.000000
 80 [-]: LOADK     R15 75       ; R15 := 75.000000
 81 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 82 [-]: SELF      R10 R0 K19   ; R11 := R0; R10 := R0[0xf64b7262]
 83 [-]: MOVE      R12 R1       ; R12 := R1
 84 [-]: LOADK     R13 K21      ; R13 := "Shadow"
 85 [-]: LOADK     R14 10       ; R14 := 10.000000
 86 [-]: LOADK     R15 45       ; R15 := 45.000000
 87 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 88 [-]: SELF      R10 R0 K19   ; R11 := R0; R10 := R0[0xf64b7262]
 89 [-]: MOVE      R12 R1       ; R12 := R1
 90 [-]: LOADK     R13 K22      ; R13 := "BackShadow"
 91 [-]: LOADK     R14 10       ; R14 := 10.000000
 92 [-]: LOADK     R15 25       ; R15 := 25.000000
 93 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 94 [-]: GETGLOBAL R10 K23      ; R10 := 0x7b998233
 95 [-]: MOVE      R11 R4       ; R11 := R4
 96 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 97 [-]: NOT       R10 R10      ; R10 := not R10
 98 [-]: RETURN    R10 2        ; return R10
 99 [-]: RETURN    R0 1         ; return 


; Function #245:
;
; Name:            
; Defined at line: 4893
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LE        0 R0 K0      ; if R0 > 0.003131 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: MUL       R1 R0 K1     ; R1 := R0 * 12.920000
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x5bced4c4
  7 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0xa40531d8]
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: LOADK     R3 K4        ; R3 := 0.416667
 10 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 11 [-]: MUL       R1 K5 R1     ; R1 := 1.055000 * R1
 12 [-]: SUB       R1 R1 K6     ; R1 := R1 - 0.055000
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: RETURN    R0 1         ; return 


; Function #246:
;
; Name:            
; Defined at line: 4901
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LE        0 R0 K0      ; if R0 > 0.039280 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: DIV       R1 R0 K1     ; R1 := R0 / 12.920000
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x5bced4c4
  7 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0xa40531d8]
  8 [-]: ADD       R2 R0 K4     ; R2 := R0 + 0.055000
  9 [-]: DIV       R2 R2 K5     ; R2 := R2 / 1.055000
 10 [-]: LOADK     R3 K6        ; R3 := 2.400000
 11 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
 12 [-]: RETURN    R1 0         ; return R1,...
 13 [-]: RETURN    R0 1         ; return 


; Function #247:
;
; Name:            
; Defined at line: 4911
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  4 [-]: SETUPVAL  R1 U1        ; U82 := 
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: SETTABLE  R1 K1 K2     ; R1[1.000000] := "<POLARITY_ATTACK>"
  7 [-]: GETUPVAL  R1 U1        ; R1 := U1
  8 [-]: SETTABLE  R1 K3 K4     ; R1[2.000000] := "<POLARITY_DEFENSE>"
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SETTABLE  R1 K5 K6     ; R1[3.000000] := "<POLARITY_TACTIC>"
 11 [-]: GETUPVAL  R1 U1        ; R1 := U1
 12 [-]: SETTABLE  R1 K7 K8     ; R1[4.000000] := "<POLARITY_POWER>"
 13 [-]: GETUPVAL  R1 U1        ; R1 := U1
 14 [-]: SETTABLE  R1 K9 K10    ; R1[5.000000] := "<POLARITY_PRECEPT>"
 15 [-]: GETUPVAL  R1 U1        ; R1 := U1
 16 [-]: SETTABLE  R1 K11 K12   ; R1[6.000000] := "<POLARITY_FUSION>"
 17 [-]: GETUPVAL  R1 U1        ; R1 := U1
 18 [-]: SETTABLE  R1 K13 K14   ; R1[7.000000] := "<POLARITY_WARD>"
 19 [-]: GETUPVAL  R1 U1        ; R1 := U1
 20 [-]: SETTABLE  R1 K15 K16   ; R1[8.000000] := "<POLARITY_UMBRA>"
 21 [-]: GETUPVAL  R1 U1        ; R1 := U1
 22 [-]: SETTABLE  R1 K17 K18   ; R1[9.000000] := "<POLARITY_ANY>"
 23 [-]: LOADK     R1 1         ; R1 := 1.000000
 24 [-]: GETUPVAL  R2 U1        ; R2 := U1
 25 [-]: LEN       R2 R2        ; R2 := # R2
 26 [-]: LOADK     R3 1         ; R3 := 1.000000
 27 [-]: FORPREP   R1 36        ; R1 -= R3; PC := 36
 28 [-]: GETUPVAL  R5 U1        ; R5 := U1
 29 [-]: GETTABLE  R6 R0 K19    ; R6 := R0["mMovie"]
 30 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0x42b04007]
 31 [-]: GETUPVAL  R8 U1        ; R8 := U1
 32 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 33 [-]: LOADBOOL  R9 1 0       ; R9 := true
 34 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 35 [-]: SETTABLE  R5 R4 R6     ; R5[R4] := R6
 36 [-]: FORLOOP   R1 28        ; R1 += R3; if R1 <= R2 then begin PC := 28; R4 := R1 end
 37 [-]: RETURN    R0 1         ; return 


; Function #248:
;
; Name:            
; Defined at line: 4929
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #249:
;
; Name:            
; Defined at line: 4933
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: CALL      R1 1 1       ; R1()
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  8 [-]: TEST      R1 0         ; if not R1 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: LOADK     R1 K1        ; R1 := ""
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #250:
;
; Name:            
; Defined at line: 4944
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x0b96777e
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        1 R1 K1      ; if R1 == "string" then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0xed4e0128]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: MOVE      R0 R1        ; R0 := R1
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K4        ; R2 := 0x0032441c
 11 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["UIMovie_EndOfQuestMovie"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R1 K6        ; R1 := 0x9ba7909f
 16 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xcfba257f]
 17 [-]: GETGLOBAL R3 K4        ; R3 := 0x0032441c
 18 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["UIMovie_EndOfQuestMovie"]
 19 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 20 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: SELF      R2 R1 K8     ; R3 := R1; R2 := R1[0xe4162eed]
 26 [-]: LOADK     R4 K9        ; R4 := "SetQuestType"
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 29 [-]: RETURN    R0 1         ; return 


; Function #251:
;
; Name:            
; Defined at line: 4956
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: EQ        0 R2 K0      ; if R2 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADBOOL  R2 1 0       ; R2 := true
  4 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0xd5181643]
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: GETUPVAL  R6 U0        ; R6 := U0
  7 [-]: GETTABLE  R6 R6 K2     ; R82 := R6[0x06d055f9]
  8 [-]: MOVE      R7 R2        ; R7 := R2
  9 [-]: GETGLOBAL R8 K3        ; R8 := 0x0032441c
 10 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["UIMaterial_RectangleNoDepth"]
 11 [-]: GETGLOBAL R9 K3        ; R9 := 0x0032441c
 12 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["UIMaterial_Rectangle"]
 13 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 14 [-]: CALL      R3 0 1       ; R3(R4,...)
 15 [-]: SELF      R3 R0 K6     ; R4 := R0; R3 := R0[0x91e13703]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADK     R6 K7        ; R6 := "RectInnerColor"
 18 [-]: GETGLOBAL R7 K3        ; R7 := 0x0032441c
 19 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["UIColorObject_DarkBlue"]
 20 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["r"]
 21 [-]: GETGLOBAL R8 K3        ; R8 := 0x0032441c
 22 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["UIColorObject_DarkBlue"]
 23 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["g"]
 24 [-]: GETGLOBAL R9 K3        ; R9 := 0x0032441c
 25 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["UIColorObject_DarkBlue"]
 26 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["b"]
 27 [-]: LOADK     R10 K12      ; R10 := 0.200000
 28 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 29 [-]: SELF      R3 R0 K6     ; R4 := R0; R3 := R0[0x91e13703]
 30 [-]: MOVE      R5 R1        ; R5 := R1
 31 [-]: LOADK     R6 K13       ; R6 := "RectEdgeColor"
 32 [-]: GETGLOBAL R7 K3        ; R7 := 0x0032441c
 33 [-]: GETTABLE  R7 R7 K14    ; R7 := R7["UIColorObject_White"]
 34 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["r"]
 35 [-]: GETGLOBAL R8 K3        ; R8 := 0x0032441c
 36 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["UIColorObject_White"]
 37 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["g"]
 38 [-]: GETGLOBAL R9 K3        ; R9 := 0x0032441c
 39 [-]: GETTABLE  R9 R9 K14    ; R9 := R9["UIColorObject_White"]
 40 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["b"]
 41 [-]: LOADK     R10 0        ; R10 := 0.000000
 42 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 43 [-]: RETURN    R0 1         ; return 


; Function #252:
;
; Name:            
; Defined at line: 4965
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x25d99d89
  2 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
  3 [-]: MOVE      R7 R5        ; R7 := R5
  4 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  5 [-]: TEST      R6 1         ; if R6 then PC := 126
  6 [-]: JMP       126          ; PC := 126
  7 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
  8 [-]: MOVE      R7 R0        ; R7 := R0
  9 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 10 [-]: TEST      R6 1         ; if R6 then PC := 126
 11 [-]: JMP       126          ; PC := 126
 12 [-]: SELF      R6 R0 K2     ; R7 := R0; R6 := R0[0xec3ed714]
 13 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 14 [-]: SELF      R7 R5 K3     ; R8 := R5; R7 := R5[0xa4d581dc]
 15 [-]: MOVE      R9 R6        ; R9 := R6
 16 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 17 [-]: GETUPVAL  R8 U0        ; R8 := U0
 18 [-]: GETTABLE  R8 R8 K4     ; R82 := R8[0x06d055f9]
 19 [-]: EQ        0 R3 K5      ; if R3 ~= nil then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: LOADBOOL  R9 0 1       ; R9 := false; PC := 22
 22 [-]: LOADBOOL  R9 1 0       ; R9 := true
 23 [-]: MOVE      R10 R3       ; R10 := R3
 24 [-]: GETTABLE  R11 R7 K6    ; R11 := R7["mTitle"]
 25 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 26 [-]: GETGLOBAL R9 K7        ; R9 := 0x03f57322
 27 [-]: MOVE      R10 R2       ; R10 := R2
 28 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 29 [-]: EQ        0 R9 K5      ; if R9 ~= nil then PC := 49
 30 [-]: JMP       49           ; PC := 49
 31 [-]: GETTABLE  R9 R7 K8     ; R9 := R7["mStanding"]
 32 [-]: TEST      R4 0         ; if not R4 then PC := 49
 33 [-]: JMP       49           ; PC := 49
 34 [-]: GETGLOBAL R10 K0       ; R10 := 0x25d99d89
 35 [-]: SELF      R10 R10 K9   ; R11 := R10; R10 := R10[0xd9a41a87]
 36 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 37 [-]: LOADK     R11 1        ; R11 := 1.000000
 38 [-]: LEN       R12 R10      ; R12 := # R10
 39 [-]: LOADK     R13 1        ; R13 := 1.000000
 40 [-]: FORPREP   R11 48       ; R11 -= R13; PC := 48
 41 [-]: GETTABLE  R15 R10 R14  ; R15 := R10[R14]
 42 [-]: GETTABLE  R15 R15 K10  ; R15 := R15["mTag"]
 43 [-]: EQ        0 R15 R6     ; if R15 ~= R6 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: GETTABLE  R15 R10 R14  ; R15 := R10[R14]
 46 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["mStanding"]
 47 [-]: SUB       R9 R9 R15    ; R9 := R9 - R15
 48 [-]: FORLOOP   R11 41       ; R11 += R13; if R11 <= R12 then begin PC := 41; R14 := R11 end
 49 [-]: GETUPVAL  R15 U0       ; R15 := U0
 50 [-]: GETTABLE  R15 R15 K4   ; R82 := R15[0x06d055f9]
 51 [-]: SELF      R16 R0 K11   ; R17 := R0; R16 := R0[0xeca04711]
 52 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 53 [-]: GETGLOBAL R17 K12      ; R17 := 0xa94df70b
 54 [-]: SELF      R17 R17 K13  ; R18 := R17; R17 := R17[0x45c0937f]
 55 [-]: MOVE      R19 R6       ; R19 := R6
 56 [-]: MOVE      R20 R8       ; R20 := R8
 57 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 58 [-]: LOADK     R18 0        ; R18 := 0.000000
 59 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 60 [-]: GETUPVAL  R16 U0       ; R16 := U0
 61 [-]: GETTABLE  R16 R16 K4   ; R82 := R16[0x06d055f9]
 62 [-]: SELF      R17 R0 K11   ; R18 := R0; R17 := R0[0xeca04711]
 63 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 64 [-]: GETGLOBAL R18 K12      ; R18 := 0xa94df70b
 65 [-]: SELF      R18 R18 K14  ; R19 := R18; R18 := R18[0xa27c9ce1]
 66 [-]: MOVE      R20 R6       ; R20 := R6
 67 [-]: MOVE      R21 R8       ; R21 := R8
 68 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
 69 [-]: SELF      R19 R0 K15   ; R20 := R0; R19 := R0[0xd3b8447c]
 70 [-]: CALL      R19 2 0      ; R19,... := R19(R20)
 71 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
 72 [-]: SUB       R17 R16 R9   ; R17 := R16 - R9
 73 [-]: SELF      R18 R0 K16   ; R19 := R0; R18 := R0[0x08b0b7bf]
 74 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 75 [-]: LT        0 K18 R18    ; if 0.000000 >= R18 then PC := 92
 76 [-]: JMP       92           ; PC := 92
 77 [-]: LT        0 R18 K19    ; if R18 >= 13.000000 then PC := 92
 78 [-]: JMP       92           ; PC := 92
 79 [-]: SELF      R19 R0 K20   ; R20 := R0; R19 := R0[0x715e4e45]
 80 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 81 [-]: TEST      R19 0        ; if not R19 then PC := 92
 82 [-]: JMP       92           ; PC := 92
 83 [-]: SELF      R19 R5 K21   ; R20 := R5; R19 := R5[0xf5b0abc2]
 84 [-]: MOVE      R21 R18      ; R21 := R18
 85 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
 86 [-]: GETGLOBAL R20 K22      ; R20 := 0x5bced4c4
 87 [-]: GETTABLE  R20 R20 K23  ; R82 := R20[0xac1b386a]
 88 [-]: MOVE      R21 R17      ; R21 := R17
 89 [-]: MOVE      R22 R19      ; R22 := R19
 90 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 91 [-]: MOVE      R17 R20      ; R17 := R20
 92 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 98
 93 [-]: JMP       98           ; PC := 98
 94 [-]: GETGLOBAL R20 K7       ; R20 := 0x03f57322
 95 [-]: MOVE      R21 R1       ; R21 := R1
 96 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 97 [-]: ADD       R9 R9 R20    ; R9 := R9 + R20
 98 [-]: SUB       R20 R9 R15   ; R20 := R9 - R15
 99 [-]: SUB       R21 R16 R15  ; R21 := R16 - R15
100 [-]: EQ        1 R20 R21    ; if R20 == R21 then PC := 103
101 [-]: JMP       103          ; PC := 103
102 [-]: LOADBOOL  R22 0 1      ; R22 := false; PC := 103
103 [-]: LOADBOOL  R22 1 0      ; R22 := true
104 [-]: SELF      R23 R0 K11   ; R24 := R0; R23 := R0[0xeca04711]
105 [-]: CALL      R23 2 2      ; R23 := R23(R24)
106 [-]: TEST      R23 0        ; if not R23 then PC := 120
107 [-]: JMP       120          ; PC := 120
108 [-]: EQ        0 R8 K18     ; if R8 ~= 0.000000 then PC := 116
109 [-]: JMP       116          ; PC := 116
110 [-]: DIV       R21 R21 K24  ; R21 := R21 / 2.000000
111 [-]: SUB       R20 R20 R21  ; R20 := R20 - R21
112 [-]: LT        0 R20 K18    ; if R20 >= 0.000000 then PC := 120
113 [-]: JMP       120          ; PC := 120
114 [-]: UNM       R21 R21      ; R21 := ^ R21
115 [-]: JMP       120          ; PC := 120
116 [-]: LT        0 R8 K18     ; if R8 >= 0.000000 then PC := 120
117 [-]: JMP       120          ; PC := 120
118 [-]: SUB       R20 R20 R21  ; R20 := R20 - R21
119 [-]: UNM       R21 R21      ; R21 := ^ R21
120 [-]: MOVE      R23 R8       ; R23 := R8
121 [-]: MOVE      R24 R20      ; R24 := R20
122 [-]: MOVE      R25 R21      ; R25 := R21
123 [-]: MOVE      R26 R22      ; R26 := R22
124 [-]: MOVE      R27 R17      ; R27 := R17
125 [-]: RETURN    R23 6        ; return R23,R24,R25,R26,R27
126 [-]: LOADK     R23 0        ; R23 := 0.000000
127 [-]: LOADK     R24 0        ; R24 := 0.000000
128 [-]: LOADK     R25 1        ; R25 := 1.000000
129 [-]: LOADBOOL  R26 0 0      ; R26 := false
130 [-]: LOADK     R27 0        ; R27 := 0.000000
131 [-]: RETURN    R23 6        ; return R23,R24,R25,R26,R27
132 [-]: RETURN    R0 1         ; return 


; Function #253:
;
; Name:            
; Defined at line: 5025
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: MOVE      R6 R0        ; R6 := R0
  3 [-]: MOVE      R7 R1        ; R7 := R1
  4 [-]: MOVE      R8 R2        ; R8 := R2
  5 [-]: MOVE      R9 R3        ; R9 := R3
  6 [-]: MOVE      R10 R4       ; R10 := R4
  7 [-]: TAILCALL  R5 6 0       ; R5,... := R5(R6,R7,R8,R9,R10)
  8 [-]: RETURN    R5 0         ; return R5,...
  9 [-]: RETURN    R0 1         ; return 


; Function #254:
;
; Name:            
; Defined at line: 5029
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mSpeakerSyndicate"]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mSpeakerSyndicate"]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: MOVE      R4 R2        ; R4 := R2
  9 [-]: CALL      R3 2 5       ; R3,R4,R5,R6 := R3(R4)
 10 [-]: SETTABLE  R1 K5 R6     ; R1["HasEnoughReputationForSacrifice"] := R6
 11 [-]: SETTABLE  R1 K4 R5     ; R1["ReputationRequired"] := R5
 12 [-]: SETTABLE  R1 K3 R4     ; R1["Reputation"] := R4
 13 [-]: SETTABLE  R1 K2 R3     ; R1["Level"] := R3
 14 [-]: LOADK     R3 3         ; R3 := 3.000000
 15 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 16 [-]: MOVE      R5 R2        ; R5 := R2
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: SELF      R4 R2 K6     ; R5 := R2; R4 := R2[0x8d5d5be4]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: MOVE      R3 R4        ; R3 := R4
 23 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["Level"]
 24 [-]: LE        1 R3 R4      ; if R3 <= R4 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 27
 27 [-]: LOADBOOL  R4 1 0       ; R4 := true
 28 [-]: SETTABLE  R1 K7 R4     ; R1["Loved"] := R4
 29 [-]: GETGLOBAL R4 K8        ; R4 := 0x76ea806b
 30 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0x3f3ae64c]
 31 [-]: LOADK     R6 0         ; R6 := 0.000000
 32 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 33 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 34 [-]: MOVE      R6 R4        ; R6 := R4
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: TEST      R5 1         ; if R5 then PC := 47
 37 [-]: JMP       47           ; PC := 47
 38 [-]: SELF      R5 R4 K10    ; R6 := R4; R5 := R4[0x40e9c32b]
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: GETTABLE  R6 R1 K7     ; R6 := R1["Loved"]
 41 [-]: TEST      R6 0         ; if not R6 then PC := 46
 42 [-]: JMP       46           ; PC := 46
 43 [-]: SELF      R6 R5 K11    ; R7 := R5; R6 := R5[0xd25ad6f2]
 44 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 45 [-]: NOT       R6 R6        ; R6 := not R6
 46 [-]: SETTABLE  R1 K7 R6     ; R1["Loved"] := R6
 47 [-]: RETURN    R0 1         ; return 


; Function #255:
;
; Name:            
; Defined at line: 5050
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #256:
;
; Name:            
; Defined at line: 5054
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0xf64b7262]
  2 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mClipName"]
  3 [-]: LOADK     R5 K2        ; R5 := "Image"
  4 [-]: LOADK     R6 10        ; R6 := 10.000000
  5 [-]: GETUPVAL  R7 U0        ; R7 := U0
  6 [-]: GETTABLE  R7 R7 K3     ; R82 := R7[0x06d055f9]
  7 [-]: GETGLOBAL R8 K4        ; R8 := 0x7b998233
  8 [-]: GETTABLE  R9 R1 K5     ; R9 := R1["Icon"]
  9 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 10 [-]: LOADK     R9 0         ; R9 := 0.000000
 11 [-]: LOADK     R10 100      ; R10 := 100.000000
 12 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 13 [-]: CALL      R2 0 1       ; R2(R3,...)
 14 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 15 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["Icon"]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R2 K6        ; R2 := 0x7ed0a956
 21 [-]: LOADK     R3 K7        ; R3 := "/Lotus/Types/Game/LotusSigil"
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: SELF      R3 R0 K8     ; R4 := R0; R3 := R0[0x91a24e4b]
 24 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mClipName"]
 25 [-]: LOADK     R6 K9        ; R6 := ".Image"
 26 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 27 [-]: LOADK     R6 13        ; R6 := 13.000000
 28 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 29 [-]: GETUPVAL  R4 U0        ; R4 := U0
 30 [-]: GETTABLE  R4 R4 K3     ; R82 := R4[0x06d055f9]
 31 [-]: GETTABLE  R5 R1 K10    ; R5 := R1["Type"]
 32 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0xf2deaf69]
 33 [-]: MOVE      R7 R2        ; R7 := R2
 34 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 35 [-]: MOVE      R6 R3        ; R6 := R3
 36 [-]: MUL       R7 R3 K12    ; R7 := R3 * 1.444000
 37 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 38 [-]: SELF      R5 R0 K13    ; R6 := R0; R5 := R0[0x1cb415c1]
 39 [-]: GETTABLE  R7 R1 K1     ; R7 := R1["mClipName"]
 40 [-]: LOADK     R8 K9        ; R8 := ".Image"
 41 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 42 [-]: GETTABLE  R8 R1 K5     ; R8 := R1["Icon"]
 43 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 44 [-]: SELF      R5 R0 K0     ; R6 := R0; R5 := R0[0xf64b7262]
 45 [-]: GETTABLE  R7 R1 K1     ; R7 := R1["mClipName"]
 46 [-]: LOADK     R8 K2        ; R8 := "Image"
 47 [-]: LOADK     R9 12        ; R9 := 12.000000
 48 [-]: MOVE      R10 R4       ; R10 := R4
 49 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 50 [-]: RETURN    R0 1         ; return 


; Function #257:
;
; Name:            
; Defined at line: 5069
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25d99d89
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADNIL   R1 R1        ; R1 := nil
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x69727e0b]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADNIL   R2 R2        ; R2 := nil
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: GETGLOBAL R2 K3        ; R2 := 0xc8802016
 19 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mDailyDeals"]
 20 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 21 [-]: JMP       39           ; PC := 39
 22 [-]: GETGLOBAL R7 K5        ; R7 := 0x34291f5c
 23 [-]: GETTABLE  R7 R7 K6     ; R82 := R7[0x397b920f]
 24 [-]: GETTABLE  R8 R6 K7     ; R8 := R6["mActivation"]
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: LE        0 R7 K8      ; if R7 > 0.000000 then PC := 39
 27 [-]: JMP       39           ; PC := 39
 28 [-]: GETGLOBAL R7 K5        ; R7 := 0x34291f5c
 29 [-]: GETTABLE  R7 R7 K6     ; R82 := R7[0x397b920f]
 30 [-]: GETTABLE  R8 R6 K9     ; R8 := R6["mExpiry"]
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: LT        0 K8 R7      ; if 0.000000 >= R7 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: GETGLOBAL R7 K10       ; R7 := 0x6c97a788
 35 [-]: GETTABLE  R7 R7 K11    ; R82 := R7[0x403f5185]
 36 [-]: MOVE      R8 R6        ; R8 := R6
 37 [-]: TAILCALL  R7 2 0       ; R7,... := R7(R8)
 38 [-]: RETURN    R7 0         ; return R7,...
 39 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 22; R4 := R5 end
 40 [-]: JMP       22           ; PC := 22
 41 [-]: LOADNIL   R7 R7        ; R7 := nil
 42 [-]: RETURN    R7 2         ; return R7
 43 [-]: RETURN    R0 1         ; return 


; Function #258:
;
; Name:            
; Defined at line: 5089
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: LOADK     R2 K0        ; R2 := ""
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
  3 [-]: SELF      R4 R1 K2     ; R5 := R1; R4 := R1[0xf278f8a1]
  4 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  5 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  6 [-]: TEST      R3 1         ; if R3 then PC := 72
  7 [-]: JMP       72           ; PC := 72
  8 [-]: SELF      R3 R1 K2     ; R4 := R1; R3 := R1[0xf278f8a1]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0xf2deaf69]
 11 [-]: GETGLOBAL R5 K4        ; R5 := gRecipeItemType
 12 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 13 [-]: TEST      R3 0         ; if not R3 then PC := 72
 14 [-]: JMP       72           ; PC := 72
 15 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0[0x42b04007]
 16 [-]: GETGLOBAL R5 K6        ; R5 := 0x64fb1586
 17 [-]: SELF      R6 R1 K7     ; R7 := R1; R6 := R1[0xe9472db7]
 18 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 19 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 20 [-]: LOADBOOL  R6 1 0       ; R6 := true
 21 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 22 [-]: EQ        1 R3 K0      ; if R3 == "" then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 69
 25 [-]: JMP       69           ; PC := 69
 26 [-]: SELF      R4 R1 K9     ; R5 := R1; R4 := R1[0x5cc4dde3]
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
 29 [-]: MOVE      R6 R4        ; R6 := R4
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: TEST      R5 1         ; if R5 then PC := 42
 32 [-]: JMP       42           ; PC := 42
 33 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0[0x42b04007]
 34 [-]: GETGLOBAL R7 K6        ; R7 := 0x64fb1586
 35 [-]: SELF      R8 R4 K10    ; R9 := R4; R8 := R4[0xd3a9d01f]
 36 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 37 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 38 [-]: LOADBOOL  R8 1 0       ; R8 := true
 39 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 40 [-]: MOVE      R2 R5        ; R2 := R5
 41 [-]: JMP       50           ; PC := 50
 42 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0[0x42b04007]
 43 [-]: GETGLOBAL R7 K6        ; R7 := 0x64fb1586
 44 [-]: SELF      R8 R1 K10    ; R9 := R1; R8 := R1[0xd3a9d01f]
 45 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 46 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 47 [-]: LOADBOOL  R8 1 0       ; R8 := true
 48 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 49 [-]: MOVE      R2 R5        ; R2 := R5
 50 [-]: NEWTABLE  R5 0 1       ; R5 := {}
 51 [-]: SETTABLE  R5 K11 R2    ; R5[0x99675e23] := R2
 52 [-]: MOVE      R3 R5        ; R3 := R5
 53 [-]: LOADK     R5 K12       ; R5 := "/Lotus/Language/Items/BlueprintAndItem"
 54 [-]: SELF      R6 R1 K13    ; R7 := R1; R6 := R1[0x78ceba36]
 55 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 56 [-]: LT        0 K14 R6     ; if 1.000000 >= R6 then PC := 62
 57 [-]: JMP       62           ; PC := 62
 58 [-]: SELF      R6 R1 K13    ; R7 := R1; R6 := R1[0x78ceba36]
 59 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 60 [-]: SETTABLE  R3 K15 R6    ; R3["NUM"] := R6
 61 [-]: LOADK     R5 K16       ; R5 := "/Lotus/Language/Items/LargeBatchBlueprintAndItem"
 62 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0[0x42b04007]
 63 [-]: MOVE      R8 R5        ; R8 := R5
 64 [-]: LOADBOOL  R9 1 0       ; R9 := true
 65 [-]: MOVE      R10 R3       ; R10 := R3
 66 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 67 [-]: MOVE      R2 R6        ; R2 := R6
 68 [-]: JMP       70           ; PC := 70
 69 [-]: MOVE      R2 R3        ; R2 := R3
 70 [-]: RETURN    R2 2         ; return R2
 71 [-]: JMP       101          ; PC := 101
 72 [-]: SELF      R6 R1 K17    ; R7 := R1; R6 := R1[0xfe9eb1a5]
 73 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 74 [-]: EQ        0 R6 K19     ; if R6 ~= 35.000000 then PC := 90
 75 [-]: JMP       90           ; PC := 90
 76 [-]: SELF      R6 R1 K20    ; R7 := R1; R6 := R1[0x4e485a6f]
 77 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 78 [-]: UNM       R6 R6        ; R6 := ^ R6
 79 [-]: MOVE      R7 R6        ; R7 := R6
 80 [-]: LOADK     R8 K21       ; R8 := " "
 81 [-]: SELF      R9 R0 K5     ; R10 := R0; R9 := R0[0x42b04007]
 82 [-]: GETGLOBAL R11 K6       ; R11 := 0x64fb1586
 83 [-]: SELF      R12 R1 K10   ; R13 := R1; R12 := R1[0xd3a9d01f]
 84 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 85 [-]: CALL      R11 0 2      ; R11 := R11(R12,...)
 86 [-]: LOADBOOL  R12 1 0      ; R12 := true
 87 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 88 [-]: CONCAT    R2 R7 R9     ; R2 := R7 .. R8 .. R9
 89 [-]: JMP       101          ; PC := 101
 90 [-]: SELF      R7 R1 K17    ; R8 := R1; R7 := R1[0xfe9eb1a5]
 91 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 92 [-]: GETGLOBAL R8 K18       ; R8 := 0x34291f5c
 93 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["Item_AvatarImage"]
 94 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 101
 95 [-]: JMP       101          ; PC := 101
 96 [-]: GETGLOBAL R7 K6        ; R7 := 0x64fb1586
 97 [-]: SELF      R8 R1 K10    ; R9 := R1; R8 := R1[0xd3a9d01f]
 98 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 99 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
100 [-]: MOVE      R2 R7        ; R2 := R7
101 [-]: SELF      R7 R0 K5     ; R8 := R0; R7 := R0[0x42b04007]
102 [-]: MOVE      R9 R2        ; R9 := R2
103 [-]: LOADBOOL  R10 1 0      ; R10 := true
104 [-]: TAILCALL  R7 4 0       ; R7,... := R7(R8,R9,R10)
105 [-]: RETURN    R7 0         ; return R7,...
106 [-]: RETURN    R0 1         ; return 


; Function #259:
;
; Name:            
; Defined at line: 5122
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x0032441c
  2 [-]: SETTABLE  R2 K1 R0     ; R2["TrainingMissionRank"] := R0
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0xa94df70b
  4 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xc006aacf]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETGLOBAL R3 K4        ; R3 := 0x5bced4c4
  7 [-]: GETTABLE  R3 R3 K5     ; R82 := R3[0xac1b386a]
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: SUB       R5 R2 K6     ; R5 := R2 - 1.000000
 10 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 11 [-]: MOVE      R0 R3        ; R0 := R3
 12 [-]: GETGLOBAL R3 K0        ; R3 := 0x0032441c
 13 [-]: SETTABLE  R3 K7 R1     ; R3["IsTrainingMissionPractise"] := R1
 14 [-]: GETGLOBAL R3 K2        ; R3 := 0xa94df70b
 15 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x769d1b6e]
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 18 [-]: TEST      R1 0         ; if not R1 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: GETTABLE  R4 R3 K9     ; R4 := R3["missionReward"]
 21 [-]: SETTABLE  R4 K10 K11   ; R4["credits"] := 0.000000
 22 [-]: GETGLOBAL R4 K12       ; R4 := 0x34291f5c
 23 [-]: GETTABLE  R4 R4 K13    ; R82 := R4[0x68d83431]
 24 [-]: CALL      R4 1 2       ; R4 := R4()
 25 [-]: SELF      R5 R3 K14    ; R6 := R3; R5 := R3[0xbfa0067d]
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: SELF      R6 R3 K15    ; R7 := R3; R6 := R3[0xec195a1e]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: LOADK     R7 1         ; R7 := 1.000000
 30 [-]: LEN       R8 R6        ; R8 := # R6
 31 [-]: LOADK     R9 1         ; R9 := 1.000000
 32 [-]: FORPREP   R7 37        ; R7 -= R9; PC := 37
 33 [-]: SELF      R11 R4 K16   ; R12 := R4; R11 := R4[0x0f690d63]
 34 [-]: GETTABLE  R13 R6 R10   ; R13 := R6[R10]
 35 [-]: GETTABLE  R13 R13 K17  ; R13 := R13["agent"]
 36 [-]: CALL      R11 3 1      ; R11(R12,R13)
 37 [-]: FORLOOP   R7 33        ; R7 += R9; if R7 <= R8 then begin PC := 33; R10 := R7 end
 38 [-]: SELF      R11 R4 K18   ; R12 := R4; R11 := R4[0xeaa7e8dc]
 39 [-]: MOVE      R13 R5       ; R13 := R5
 40 [-]: CALL      R11 3 1      ; R11(R12,R13)
 41 [-]: SELF      R11 R4 K19   ; R12 := R4; R11 := R4[0x8623cf14]
 42 [-]: GETTABLE  R13 R3 K20   ; R13 := R3["levelOverride"]
 43 [-]: SELF      R13 R13 K21  ; R14 := R13; R13 := R13[0xed4e0128]
 44 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 45 [-]: CALL      R11 0 1      ; R11(R12,...)
 46 [-]: GETTABLE  R11 R3 K22   ; R11 := R3["gameRules"]
 47 [-]: SETTABLE  R4 K22 R11   ; R4["gameRules"] := R11
 48 [-]: SETTABLE  R4 K23 K24   ; R4["migrateServer"] := false
 49 [-]: GETGLOBAL R11 K12      ; R11 := 0x34291f5c
 50 [-]: GETTABLE  R11 R11 K25  ; R82 := R11[0x4e0a1dfc]
 51 [-]: MOVE      R12 R4       ; R12 := R4
 52 [-]: CALL      R11 2 1      ; R11(R12)
 53 [-]: RETURN    R0 1         ; return 


; Function #260:
;
; Name:            
; Defined at line: 5153
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R0 10        ; R0 := 10.000000
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #261:
;
; Name:            
; Defined at line: 5157
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #262:
;
; Name:            
; Defined at line: 5161
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: LOADBOOL  R2 1 0       ; R2 := true
  2 [-]: LOADK     R3 K0        ; R3 := ""
  3 [-]: LOADBOOL  R4 0 0       ; R4 := false
  4 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
  5 [-]: MOVE      R6 R0        ; R6 := R0
  6 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  7 [-]: TEST      R5 0         ; if not R5 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: LOADBOOL  R5 0 0       ; R5 := false
 10 [-]: MOVE      R6 R3        ; R6 := R3
 11 [-]: RETURN    R5 3         ; return R5,R6
 12 [-]: SELF      R5 R0 K2     ; R6 := R0; R5 := R0[0x62c81b76]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: SELF      R6 R5 K3     ; R7 := R5; R6 := R5[0xb61abfd2]
 15 [-]: LOADK     R8 0         ; R8 := 0.000000
 16 [-]: LOADK     R9 1         ; R9 := 1.000000
 17 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 18 [-]: SELF      R7 R5 K3     ; R8 := R5; R7 := R5[0xb61abfd2]
 19 [-]: LOADK     R9 0         ; R9 := 0.000000
 20 [-]: LOADK     R10 2        ; R10 := 2.000000
 21 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 22 [-]: SELF      R8 R5 K3     ; R9 := R5; R8 := R5[0xb61abfd2]
 23 [-]: LOADK     R10 0        ; R10 := 0.000000
 24 [-]: LOADK     R11 3        ; R11 := 3.000000
 25 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 26 [-]: GETTABLE  R9 R6 K5     ; R9 := R6["mItemId"]
 27 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["mId"]
 28 [-]: GETGLOBAL R10 K4       ; R10 := 0x6c97a788
 29 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["InvalidItemID"]
 30 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 44
 31 [-]: JMP       44           ; PC := 44
 32 [-]: GETTABLE  R9 R7 K5     ; R9 := R7["mItemId"]
 33 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["mId"]
 34 [-]: GETGLOBAL R10 K4       ; R10 := 0x6c97a788
 35 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["InvalidItemID"]
 36 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 44
 37 [-]: JMP       44           ; PC := 44
 38 [-]: GETTABLE  R9 R8 K5     ; R9 := R8["mItemId"]
 39 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["mId"]
 40 [-]: GETGLOBAL R10 K4       ; R10 := 0x6c97a788
 41 [-]: GETTABLE  R10 R10 K7   ; R10 := R10["InvalidItemID"]
 42 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 46
 43 [-]: JMP       46           ; PC := 46
 44 [-]: LOADBOOL  R2 0 0       ; R2 := false
 45 [-]: LOADK     R3 K8        ; R3 := "/Lotus/Language/Menu/IncompleteLoadout"
 46 [-]: GETGLOBAL R9 K9        ; R9 := 0x25d99d89
 47 [-]: SELF      R10 R9 K10   ; R11 := R9; R10 := R9[0xefee6c91]
 48 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 49 [-]: GETGLOBAL R11 K11      ; R11 := 0xa94df70b
 50 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11[0xc006aacf]
 51 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 52 [-]: GETGLOBAL R12 K13      ; R12 := 0x5bced4c4
 53 [-]: GETTABLE  R12 R12 K14  ; R82 := R12[0xac1b386a]
 54 [-]: ADD       R13 R10 K15  ; R13 := R10 + 1.000000
 55 [-]: SUB       R14 R11 K15  ; R14 := R11 - 1.000000
 56 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 57 [-]: GETGLOBAL R13 K11      ; R13 := 0xa94df70b
 58 [-]: SELF      R13 R13 K16  ; R14 := R13; R13 := R13[0x769d1b6e]
 59 [-]: MOVE      R15 R12      ; R15 := R12
 60 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 61 [-]: GETTABLE  R14 R13 K17  ; R14 := R13["archwingRequired"]
 62 [-]: TEST      R14 0        ; if not R14 then PC := 112
 63 [-]: JMP       112          ; PC := 112
 64 [-]: SELF      R14 R9 K18   ; R15 := R9; R14 := R9[0x25a6e75e]
 65 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 66 [-]: SELF      R15 R14 K19  ; R16 := R14; R15 := R14[0x566259e1]
 67 [-]: LOADK     R17 2        ; R17 := 2.000000
 68 [-]: SELF      R18 R14 K20  ; R19 := R14; R18 := R14[0x4e457768]
 69 [-]: LOADK     R20 2        ; R20 := 2.000000
 70 [-]: CALL      R18 3 0      ; R18,... := R18(R19,R20)
 71 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
 72 [-]: SELF      R16 R15 K21  ; R17 := R15; R16 := R15[0x2abbe722]
 73 [-]: LOADK     R18 0        ; R18 := 0.000000
 74 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 75 [-]: SELF      R17 R15 K21  ; R18 := R15; R17 := R15[0x2abbe722]
 76 [-]: LOADK     R19 2        ; R19 := 2.000000
 77 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 78 [-]: SELF      R18 R15 K21  ; R19 := R15; R18 := R15[0x2abbe722]
 79 [-]: LOADK     R20 3        ; R20 := 3.000000
 80 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
 81 [-]: GETTABLE  R19 R16 K5   ; R19 := R16["mItemId"]
 82 [-]: GETTABLE  R19 R19 K6   ; R19 := R19["mId"]
 83 [-]: GETGLOBAL R20 K4       ; R20 := 0x6c97a788
 84 [-]: GETTABLE  R20 R20 K7   ; R20 := R20["InvalidItemID"]
 85 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 99
 86 [-]: JMP       99           ; PC := 99
 87 [-]: GETTABLE  R19 R17 K5   ; R19 := R17["mItemId"]
 88 [-]: GETTABLE  R19 R19 K6   ; R19 := R19["mId"]
 89 [-]: GETGLOBAL R20 K4       ; R20 := 0x6c97a788
 90 [-]: GETTABLE  R20 R20 K7   ; R20 := R20["InvalidItemID"]
 91 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 99
 92 [-]: JMP       99           ; PC := 99
 93 [-]: GETTABLE  R19 R18 K5   ; R19 := R18["mItemId"]
 94 [-]: GETTABLE  R19 R19 K6   ; R19 := R19["mId"]
 95 [-]: GETGLOBAL R20 K4       ; R20 := 0x6c97a788
 96 [-]: GETTABLE  R20 R20 K7   ; R20 := R20["InvalidItemID"]
 97 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 100
 98 [-]: JMP       100          ; PC := 100
 99 [-]: LOADBOOL  R19 0 1      ; R19 := false; PC := 100
100 [-]: LOADBOOL  R19 1 0      ; R19 := true
101 [-]: SELF      R20 R9 K22   ; R21 := R9; R20 := R9[0xc192c12e]
102 [-]: CALL      R20 2 2      ; R20 := R20(R21)
103 [-]: TEST      R20 1        ; if R20 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: LOADBOOL  R20 0 0      ; R20 := false
106 [-]: TEST      R19 0        ; if not R19 then PC := 110
107 [-]: JMP       110          ; PC := 110
108 [-]: TEST      R20 1        ; if R20 then PC := 112
109 [-]: JMP       112          ; PC := 112
110 [-]: LOADBOOL  R2 0 0       ; R2 := false
111 [-]: LOADK     R3 K23       ; R3 := "/Lotus/Language/Menu/ArchwingFailureSolo"
112 [-]: TEST      R2 0         ; if not R2 then PC := 150
113 [-]: JMP       150          ; PC := 150
114 [-]: SELF      R21 R0 K24   ; R22 := R0; R21 := R0[0xde2d1b82]
115 [-]: CALL      R21 2 2      ; R21 := R21(R22)
116 [-]: LT        0 K25 R21    ; if 0.000000 >= R21 then PC := 150
117 [-]: JMP       150          ; PC := 150
118 [-]: TEST      R1 1         ; if R1 then PC := 150
119 [-]: JMP       150          ; PC := 150
120 [-]: GETUPVAL  R22 U0       ; R22 := U0
121 [-]: LOADNIL   R23 R23      ; R23 := nil
122 [-]: MOVE      R24 R21      ; R24 := R21
123 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
124 [-]: SELF      R23 R0 K26   ; R24 := R0; R23 := R0[0x6d381cdf]
125 [-]: CALL      R23 2 2      ; R23 := R23(R24)
126 [-]: LT        0 K25 R23    ; if 0.000000 >= R23 then PC := 139
127 [-]: JMP       139          ; PC := 139
128 [-]: GETGLOBAL R23 K27      ; R23 := 0x603636ad
129 [-]: LOADK     R24 K28      ; R24 := "/Lotus/Language/Menu/Foreground_LevelUpRetry"
130 [-]: NEWTABLE  R25 0 2      ; R25 := {}
131 [-]: SETTABLE  R25 K29 R22  ; R25["TIME_REMAINING"] := R22
132 [-]: GETUPVAL  R26 U1       ; R26 := U1
133 [-]: CALL      R26 1 2      ; R26 := R26()
134 [-]: SETTABLE  R25 K30 R26  ; R25["COST"] := R26
135 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
136 [-]: MOVE      R3 R23       ; R3 := R23
137 [-]: LOADBOOL  R4 1 0       ; R4 := true
138 [-]: JMP       149          ; PC := 149
139 [-]: GETGLOBAL R23 K27      ; R23 := 0x603636ad
140 [-]: LOADK     R24 K31      ; R24 := "/Lotus/Language/Menu/Foreground_LevelUpSuspended"
141 [-]: LOADBOOL  R25 0 0      ; R25 := false
142 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
143 [-]: GETGLOBAL R24 K32      ; R24 := 0x7f5022cf
144 [-]: GETTABLE  R24 R24 K33  ; R82 := R24[0xe8072ded]
145 [-]: MOVE      R25 R23      ; R25 := R23
146 [-]: MOVE      R26 R22      ; R26 := R22
147 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
148 [-]: MOVE      R3 R24       ; R3 := R24
149 [-]: LOADBOOL  R2 0 0       ; R2 := false
150 [-]: TEST      R2 0         ; if not R2 then PC := 168
151 [-]: JMP       168          ; PC := 168
152 [-]: GETGLOBAL R24 K1       ; R24 := 0x7b998233
153 [-]: GETGLOBAL R25 K34      ; R25 := 0xe7f2b02f
154 [-]: SELF      R25 R25 K35  ; R26 := R25; R25 := R25[0x565be9ee]
155 [-]: CALL      R25 2 0      ; R25,... := R25(R26)
156 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
157 [-]: TEST      R24 1        ; if R24 then PC := 168
158 [-]: JMP       168          ; PC := 168
159 [-]: GETGLOBAL R24 K34      ; R24 := 0xe7f2b02f
160 [-]: SELF      R24 R24 K35  ; R25 := R24; R24 := R24[0x565be9ee]
161 [-]: CALL      R24 2 2      ; R24 := R24(R25)
162 [-]: SELF      R24 R24 K36  ; R25 := R24; R24 := R24[0x3b013073]
163 [-]: CALL      R24 2 2      ; R24 := R24(R25)
164 [-]: LT        0 K15 R24    ; if 1.000000 >= R24 then PC := 168
165 [-]: JMP       168          ; PC := 168
166 [-]: LOADBOOL  R2 0 0       ; R2 := false
167 [-]: LOADK     R3 K37       ; R3 := "/Lotus/Language/Menu/Foreground_LevelUpSessionActive"
168 [-]: MOVE      R24 R2       ; R24 := R2
169 [-]: MOVE      R25 R3       ; R25 := R3
170 [-]: MOVE      R26 R4       ; R26 := R4
171 [-]: RETURN    R24 4        ; return R24,R25,R26
172 [-]: RETURN    R0 1         ; return 


; Function #263:
;
; Name:            
; Defined at line: 5230
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  2 [-]: LOADK     R3 K1        ; R3 := "Dojo: OnTrainingResultUploaded result="
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x64fb1586
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: LOADK     R5 K3        ; R5 := ", body="
  7 [-]: GETGLOBAL R6 K2        ; R6 := 0x64fb1586
  8 [-]: MOVE      R7 R1        ; R7 := R1
  9 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 10 [-]: CONCAT    R3 R3 R6     ; R3 := R3 .. R4 .. R5 .. R6
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: RETURN    R0 1         ; return 


; Function #264:
;
; Name:            
; Defined at line: 5234
; #Upvalues:       2
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: GETTABLE  R5 R5 K0     ; R82 := R5[0x06d055f9]
  3 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
  4 [-]: GETGLOBAL R7 K2        ; R7 := 0x0032441c
  5 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["IsTrainingMissionPractise"]
  6 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  7 [-]: LOADBOOL  R7 1 0       ; R7 := true
  8 [-]: GETGLOBAL R8 K2        ; R8 := 0x0032441c
  9 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["IsTrainingMissionPractise"]
 10 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 11 [-]: GETGLOBAL R6 K4        ; R6 := 0x2d0fad09
 12 [-]: LOADK     R7 K5        ; R7 := "Lotus.Scripts.ChallengeRooms.BaseChallengeRoom"
 13 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 14 [-]: TEST      R5 1         ; if R5 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETGLOBAL R7 K6        ; R7 := 0x25d99d89
 17 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7[0x000daadd]
 18 [-]: LOADK     R9 1         ; R9 := 1.000000
 19 [-]: GETUPVAL  R10 U1       ; R10 := U1
 20 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 21 [-]: GETGLOBAL R7 K1        ; R7 := 0x7b998233
 22 [-]: MOVE      R8 R0        ; R8 := R0
 23 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 24 [-]: TEST      R7 0         ; if not R7 then PC := 31
 25 [-]: JMP       31           ; PC := 31
 26 [-]: GETGLOBAL R7 K8        ; R7 := 0x89326c93
 27 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0xe3a0bbca]
 28 [-]: LOADK     R9 0         ; R9 := 0.000000
 29 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 30 [-]: MOVE      R0 R7        ; R0 := R7
 31 [-]: SELF      R7 R0 K10    ; R8 := R0; R7 := R0[0xf2deaf69]
 32 [-]: GETGLOBAL R9 K11       ; R9 := gLotusVehicleAvatarType
 33 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 34 [-]: TEST      R7 0         ; if not R7 then PC := 39
 35 [-]: JMP       39           ; PC := 39
 36 [-]: SELF      R7 R0 K12    ; R8 := R0; R7 := R0[0xff005826]
 37 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 38 [-]: MOVE      R0 R7        ; R0 := R7
 39 [-]: GETGLOBAL R7 K1        ; R7 := 0x7b998233
 40 [-]: MOVE      R8 R0        ; R8 := R0
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: TEST      R7 1         ; if R7 then PC := 58
 43 [-]: JMP       58           ; PC := 58
 44 [-]: SELF      R7 R0 K13    ; R8 := R0; R7 := R0[0x7027c544]
 45 [-]: MOVE      R9 R1        ; R9 := R1
 46 [-]: LOADBOOL  R10 1 0      ; R10 := true
 47 [-]: LOADK     R11 2        ; R11 := 2.000000
 48 [-]: LOADK     R12 3        ; R12 := 3.000000
 49 [-]: LOADBOOL  R13 1 0      ; R13 := true
 50 [-]: CALL      R7 7 1       ; R7(R8,R9,R10,R11,R12,R13)
 51 [-]: SELF      R7 R0 K15    ; R8 := R0; R7 := R0[0x511d26b8]
 52 [-]: MOVE      R9 R2        ; R9 := R2
 53 [-]: LOADBOOL  R10 1 0      ; R10 := true
 54 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 55 [-]: SELF      R7 R0 K16    ; R8 := R0; R7 := R0[0x7809bf6b]
 56 [-]: LOADBOOL  R9 1 0       ; R9 := true
 57 [-]: CALL      R7 3 1       ; R7(R8,R9)
 58 [-]: GETGLOBAL R7 K17       ; R7 := 0xcbd666e1
 59 [-]: LOADK     R8 3         ; R8 := 3.000000
 60 [-]: CALL      R7 2 1       ; R7(R8)
 61 [-]: GETTABLE  R7 R6 K18    ; R82 := R7[0xbe09592b]
 62 [-]: MOVE      R8 R3        ; R8 := R3
 63 [-]: MOVE      R9 R4        ; R9 := R4
 64 [-]: MOVE      R10 R5       ; R10 := R5
 65 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 66 [-]: RETURN    R0 1         ; return 


; Function #265:
;
; Name:            
; Defined at line: 5260
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xbe190284
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf2deaf69]
  3 [-]: GETGLOBAL R3 K2        ; R3 := gLotusBasePvpGameRulesType
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  6 [-]: GETGLOBAL R3 K3        ; R3 := 0x89326c93
  7 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x7d108ddb]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: GETGLOBAL R4 K5        ; R4 := 0xc8802016
 10 [-]: MOVE      R5 R3        ; R5 := R3
 11 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 12 [-]: JMP       43           ; PC := 43
 13 [-]: TEST      R1 0         ; if not R1 then PC := 33
 14 [-]: JMP       33           ; PC := 33
 15 [-]: SELF      R9 R0 K6     ; R10 := R0; R9 := R0[0xad1e0b4b]
 16 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 17 [-]: SELF      R10 R8 K6    ; R11 := R8; R10 := R8[0xad1e0b4b]
 18 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 19 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 43
 20 [-]: JMP       43           ; PC := 43
 21 [-]: GETGLOBAL R9 K7        ; R9 := _T
 22 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["PvpMode"]
 23 [-]: EQ        1 R9 K9      ; if R9 == nil then PC := 33
 24 [-]: JMP       33           ; PC := 33
 25 [-]: GETGLOBAL R9 K7        ; R9 := _T
 26 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["PvpMode"]
 27 [-]: TEST      R9 0         ; if not R9 then PC := 43
 28 [-]: JMP       43           ; PC := 43
 29 [-]: GETGLOBAL R9 K7        ; R9 := _T
 30 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["PvpMode"]
 31 [-]: EQ        1 R9 K11     ; if R9 == 3.000000 then PC := 43
 32 [-]: JMP       43           ; PC := 43
 33 [-]: SELF      R9 R8 K12    ; R10 := R8; R9 := R8[0x5ca33548]
 34 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 35 [-]: GETGLOBAL R10 K13      ; R10 := HIDDEN_PLAYER_NAME
 36 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 43
 37 [-]: JMP       43           ; PC := 43
 38 [-]: GETGLOBAL R9 K14       ; R9 := 0x33bdd652
 39 [-]: GETTABLE  R9 R9 K15    ; R82 := R9[0x23d5322f]
 40 [-]: MOVE      R10 R2       ; R10 := R2
 41 [-]: MOVE      R11 R8       ; R11 := R8
 42 [-]: CALL      R9 3 1       ; R9(R10,R11)
 43 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 13; R6 := R7 end
 44 [-]: JMP       13           ; PC := 13
 45 [-]: RETURN    R2 2         ; return R2
 46 [-]: RETURN    R0 1         ; return 


; Function #266:
;
; Name:            
; Defined at line: 5277
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x89326c93
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xc7b81e8d]
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  7 [-]: MOVE      R4 R2        ; R4 := R2
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: RETURN    R2 2         ; return R2
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x60cce7b4
 14 [-]: GETGLOBAL R4 K0        ; R4 := 0x89326c93
 15 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x18d05d30]
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: NOT       R4 R4        ; R4 := not R4
 18 [-]: CALL      R3 2 1       ; R3(R4)
 19 [-]: GETGLOBAL R3 K5        ; R3 := 0xcbd666e1
 20 [-]: LOADK     R4 0         ; R4 := 0.000000
 21 [-]: CALL      R3 2 1       ; R3(R4)
 22 [-]: JMP       1            ; PC := 1
 23 [-]: RETURN    R0 1         ; return 


; Function #267:
;
; Name:            
; Defined at line: 5291
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: EQ        0 R1 K0      ; if R1 ~= "" then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x603636ad
  5 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/Loadout_Default"
  6 [-]: LOADBOOL  R4 0 0       ; R4 := false
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: MOVE      R1 R2        ; R1 := R2
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0xeb8fddd7
 10 [-]: CALL      R2 1 2       ; R2 := R2()
 11 [-]: TEST      R2 0         ; if not R2 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0x09423272
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: LOADK     R4 1         ; R4 := 1.000000
 16 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 17 [-]: MOVE      R1 R2        ; R1 := R2
 18 [-]: RETURN    R1 2         ; return R1
 19 [-]: RETURN    R0 1         ; return 


; Function #268:
;
; Name:            
; Defined at line: 5305
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #269:
;
; Name:            
; Defined at line: 5309
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x25d99d89
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: LOADK     R2 K2        ; R2 := ""
  8 [-]: LOADBOOL  R3 0 0       ; R3 := false
  9 [-]: RETURN    R2 3         ; return R2,R3
 10 [-]: GETGLOBAL R2 K3        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["ActiveQuestLoaded"]
 12 [-]: TEST      R2 1         ; if R2 then PC := 20
 13 [-]: JMP       20           ; PC := 20
 14 [-]: GETGLOBAL R2 K5        ; R2 := 0x3d106989
 15 [-]: LOADK     R3 K6        ; R3 := "Update quests: no active quest loaded"
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: LOADK     R2 K2        ; R2 := ""
 18 [-]: LOADBOOL  R3 0 0       ; R3 := false
 19 [-]: RETURN    R2 3         ; return R2,R3
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: MOVE      R3 R1        ; R3 := R1
 22 [-]: CALL      R2 2 5       ; R2,R3,R4,R5 := R2(R3)
 23 [-]: LOADK     R6 K2        ; R6 := ""
 24 [-]: GETGLOBAL R7 K3        ; R7 := _T
 25 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["questInfo"]
 26 [-]: EQ        1 R7 K8      ; if R7 == nil then PC := 50
 27 [-]: JMP       50           ; PC := 50
 28 [-]: GETGLOBAL R7 K3        ; R7 := _T
 29 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["questInfo"]
 30 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["activeQuest"]
 31 [-]: EQ        1 R7 K8      ; if R7 == nil then PC := 50
 32 [-]: JMP       50           ; PC := 50
 33 [-]: GETGLOBAL R7 K3        ; R7 := _T
 34 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["questInfo"]
 35 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["activeQuest"]
 36 [-]: EQ        0 R7 R2      ; if R7 ~= R2 then PC := 50
 37 [-]: JMP       50           ; PC := 50
 38 [-]: GETGLOBAL R7 K3        ; R7 := _T
 39 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["questInfo"]
 40 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["stage"]
 41 [-]: EQ        0 R7 R3      ; if R7 ~= R3 then PC := 50
 42 [-]: JMP       50           ; PC := 50
 43 [-]: GETGLOBAL R7 K3        ; R7 := _T
 44 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["questInfo"]
 45 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["gameRules"]
 46 [-]: GETGLOBAL R8 K12       ; R8 := 0xbe190284
 47 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: LOADBOOL  R7 0 1       ; R7 := false; PC := 50
 50 [-]: LOADBOOL  R7 1 0       ; R7 := true
 51 [-]: GETGLOBAL R8 K3        ; R8 := _T
 52 [-]: NEWTABLE  R9 0 5       ; R9 := {}
 53 [-]: SETTABLE  R9 K9 R2     ; R9["activeQuest"] := R2
 54 [-]: SETTABLE  R9 K10 R3    ; R9["stage"] := R3
 55 [-]: SETTABLE  R9 K13 R4    ; R9["difficulty"] := R4
 56 [-]: SETTABLE  R9 K14 R5    ; R9["canProgress"] := R5
 57 [-]: GETGLOBAL R10 K12      ; R10 := 0xbe190284
 58 [-]: SETTABLE  R9 K11 R10   ; R9["gameRules"] := R10
 59 [-]: SETTABLE  R8 K7 R9     ; R8["questInfo"] := R9
 60 [-]: GETGLOBAL R8 K15       ; R8 := 0x0032441c
 61 [-]: GETGLOBAL R9 K3        ; R9 := _T
 62 [-]: GETTABLE  R9 R9 K7     ; R9 := R9["questInfo"]
 63 [-]: SETTABLE  R8 K7 R9     ; R8["questInfo"] := R9
 64 [-]: GETGLOBAL R8 K1        ; R8 := 0x7b998233
 65 [-]: MOVE      R9 R2        ; R9 := R2
 66 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 67 [-]: TEST      R8 0         ; if not R8 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: TEST      R0 0         ; if not R0 then PC := 191
 70 [-]: JMP       191          ; PC := 191
 71 [-]: TEST      R3 0         ; if not R3 then PC := 183
 72 [-]: JMP       183          ; PC := 183
 73 [-]: GETGLOBAL R8 K1        ; R8 := 0x7b998233
 74 [-]: MOVE      R9 R2        ; R9 := R2
 75 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 76 [-]: TEST      R8 1         ; if R8 then PC := 183
 77 [-]: JMP       183          ; PC := 183
 78 [-]: GETGLOBAL R8 K16       ; R8 := 0x603636ad
 79 [-]: GETGLOBAL R9 K17       ; R9 := 0x64fb1586
 80 [-]: SELF      R10 R2 K18   ; R11 := R2; R10 := R2[0xd3a9d01f]
 81 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 82 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 83 [-]: LOADBOOL  R10 0 0      ; R10 := false
 84 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 85 [-]: MOVE      R6 R8        ; R6 := R8
 86 [-]: SELF      R8 R2 K19    ; R9 := R2; R8 := R2[0x45fdff63]
 87 [-]: SUB       R10 R3 K20   ; R10 := R3 - 1.000000
 88 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 89 [-]: GETGLOBAL R9 K21       ; R9 := EMPTY_SYMBOL
 90 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 101
 91 [-]: JMP       101          ; PC := 101
 92 [-]: MOVE      R9 R6        ; R9 := R6
 93 [-]: LOADK     R10 K22      ; R10 := "\r\n"
 94 [-]: GETGLOBAL R11 K16      ; R11 := 0x603636ad
 95 [-]: GETGLOBAL R12 K17      ; R12 := 0x64fb1586
 96 [-]: MOVE      R13 R8       ; R13 := R8
 97 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 98 [-]: LOADBOOL  R13 0 0      ; R13 := false
 99 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
100 [-]: CONCAT    R6 R9 R11    ; R6 := R9 .. R10 .. R11
101 [-]: TEST      R7 0         ; if not R7 then PC := 183
102 [-]: JMP       183          ; PC := 183
103 [-]: GETGLOBAL R9 K1        ; R9 := 0x7b998233
104 [-]: GETGLOBAL R10 K23      ; R10 := 0x89326c93
105 [-]: CALL      R9 2 2       ; R9 := R9(R10)
106 [-]: TEST      R9 1         ; if R9 then PC := 183
107 [-]: JMP       183          ; PC := 183
108 [-]: LOADK     R9 1         ; R9 := 1.000000
109 [-]: GETGLOBAL R10 K3       ; R10 := _T
110 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["QuestResetVars"]
111 [-]: LEN       R10 R10      ; R10 := # R10
112 [-]: LOADK     R11 1        ; R11 := 1.000000
113 [-]: FORPREP   R9 119       ; R9 -= R11; PC := 119
114 [-]: GETGLOBAL R13 K3       ; R13 := _T
115 [-]: GETGLOBAL R14 K3       ; R14 := _T
116 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["QuestResetVars"]
117 [-]: GETTABLE  R14 R14 R12  ; R14 := R14[R12]
118 [-]: SETTABLE  R13 R14 K8   ; R13[R14] := nil
119 [-]: FORLOOP   R9 114       ; R9 += R11; if R9 <= R10 then begin PC := 114; R12 := R9 end
120 [-]: GETGLOBAL R13 K3       ; R13 := _T
121 [-]: NEWTABLE  R14 0 0      ; R14 := {}
122 [-]: SETTABLE  R13 K24 R14  ; R13["QuestResetVars"] := R14
123 [-]: GETGLOBAL R13 K23      ; R13 := 0x89326c93
124 [-]: SELF      R13 R13 K25  ; R14 := R13; R13 := R13[0xfb64e76c]
125 [-]: CALL      R13 2 2      ; R13 := R13(R14)
126 [-]: GETGLOBAL R14 K1       ; R14 := 0x7b998233
127 [-]: MOVE      R15 R13      ; R15 := R13
128 [-]: CALL      R14 2 2      ; R14 := R14(R15)
129 [-]: TEST      R14 0        ; if not R14 then PC := 141
130 [-]: JMP       141          ; PC := 141
131 [-]: GETGLOBAL R14 K5       ; R14 := 0x3d106989
132 [-]: LOADK     R15 K26      ; R15 := "No local player yet, and this is kinda important"
133 [-]: CALL      R14 2 1      ; R14(R15)
134 [-]: GETGLOBAL R14 K3       ; R14 := _T
135 [-]: SETTABLE  R14 K7 K8    ; R14["questInfo"] := nil
136 [-]: GETGLOBAL R14 K15      ; R14 := 0x0032441c
137 [-]: SETTABLE  R14 K7 K8    ; R14["questInfo"] := nil
138 [-]: LOADK     R14 K2       ; R14 := ""
139 [-]: LOADBOOL  R15 0 0      ; R15 := false
140 [-]: RETURN    R14 3        ; return R14,R15
141 [-]: GETUPVAL  R14 U1       ; R14 := U1
142 [-]: CALL      R14 1 2      ; R14 := R14()
143 [-]: TEST      R14 1        ; if R14 then PC := 150
144 [-]: JMP       150          ; PC := 150
145 [-]: GETGLOBAL R15 K12      ; R15 := 0xbe190284
146 [-]: SELF      R15 R15 K27  ; R16 := R15; R15 := R15[0x99f38c13]
147 [-]: CALL      R15 2 2      ; R15 := R15(R16)
148 [-]: TEST      R15 1        ; if R15 then PC := 183
149 [-]: JMP       183          ; PC := 183
150 [-]: TEST      R14 0        ; if not R14 then PC := 160
151 [-]: JMP       160          ; PC := 160
152 [-]: GETGLOBAL R15 K5       ; R15 := 0x3d106989
153 [-]: LOADK     R16 K28      ; R16 := "Running RunOnPlayerSpawnedScriptsAfterIntro"
154 [-]: CALL      R15 2 1      ; R15(R16)
155 [-]: GETGLOBAL R15 K12      ; R15 := 0xbe190284
156 [-]: SELF      R15 R15 K29  ; R16 := R15; R15 := R15[0x133ba121]
157 [-]: MOVE      R17 R13      ; R17 := R13
158 [-]: CALL      R15 3 1      ; R15(R16,R17)
159 [-]: JMP       174          ; PC := 174
160 [-]: GETUPVAL  R15 U2       ; R15 := U2
161 [-]: CALL      R15 1 2      ; R15 := R15()
162 [-]: TEST      R15 1        ; if R15 then PC := 174
163 [-]: JMP       174          ; PC := 174
164 [-]: GETGLOBAL R15 K12      ; R15 := 0xbe190284
165 [-]: SELF      R15 R15 K30  ; R16 := R15; R15 := R15[0xf2deaf69]
166 [-]: GETGLOBAL R17 K31      ; R17 := gLotusAttractModeGameRulesType
167 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
168 [-]: TEST      R15 0        ; if not R15 then PC := 174
169 [-]: JMP       174          ; PC := 174
170 [-]: GETGLOBAL R15 K12      ; R15 := 0xbe190284
171 [-]: SELF      R15 R15 K32  ; R16 := R15; R15 := R15[0x3254ae22]
172 [-]: MOVE      R17 R13      ; R17 := R13
173 [-]: CALL      R15 3 1      ; R15(R16,R17)
174 [-]: GETUPVAL  R15 U3       ; R15 := U3
175 [-]: CALL      R15 1 2      ; R15 := R15()
176 [-]: GETGLOBAL R16 K1       ; R16 := 0x7b998233
177 [-]: MOVE      R17 R15      ; R17 := R15
178 [-]: CALL      R16 2 2      ; R16 := R16(R17)
179 [-]: TEST      R16 1        ; if R16 then PC := 183
180 [-]: JMP       183          ; PC := 183
181 [-]: SELF      R16 R15 K33  ; R17 := R15; R16 := R15[0x07354ec6]
182 [-]: CALL      R16 2 1      ; R16(R17)
183 [-]: GETGLOBAL R16 K34      ; R16 := 0x9ba7909f
184 [-]: SELF      R16 R16 K35  ; R17 := R16; R16 := R16[0x7e17ae26]
185 [-]: LOADK     R18 K36      ; R18 := "OnQuestsChanged"
186 [-]: LOADK     R19 K2       ; R19 := ""
187 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
188 [-]: MOVE      R16 R6       ; R16 := R6
189 [-]: LOADBOOL  R17 1 0      ; R17 := true
190 [-]: RETURN    R16 3        ; return R16,R17
191 [-]: SELF      R16 R1 K37   ; R17 := R1; R16 := R1[0x25a6e75e]
192 [-]: CALL      R16 2 2      ; R16 := R16(R17)
193 [-]: SELF      R17 R16 K38  ; R18 := R16; R17 := R16[0xe9768ed0]
194 [-]: CALL      R17 2 2      ; R17 := R17(R18)
195 [-]: GETGLOBAL R18 K39      ; R18 := 0xc8802016
196 [-]: MOVE      R19 R17      ; R19 := R17
197 [-]: CALL      R18 2 4      ; R18,R19,R20 := R18(R19)
198 [-]: JMP       205          ; PC := 205
199 [-]: GETTABLE  R23 R22 K40  ; R23 := R22["mCompleted"]
200 [-]: TEST      R23 1        ; if R23 then PC := 205
201 [-]: JMP       205          ; PC := 205
202 [-]: LOADK     R23 K41      ; R23 := "New quests are available!"
203 [-]: LOADBOOL  R24 1 0      ; R24 := true
204 [-]: RETURN    R23 3        ; return R23,R24
205 [-]: TFORLOOP  R18 2        ; R21,R22 :=  R18(R19,R20); if R21 ~= nil then begin PC = 199; R20 := R21 end
206 [-]: JMP       199          ; PC := 199
207 [-]: LOADK     R23 K2       ; R23 := ""
208 [-]: LOADBOOL  R24 1 0      ; R24 := true
209 [-]: RETURN    R23 3        ; return R23,R24
210 [-]: RETURN    R0 1         ; return 


; Function #270:
;
; Name:            
; Defined at line: 5384
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #271:
;
; Name:            
; Defined at line: 5388
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LEN       R0 R0        ; R0 := # R0
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #272:
;
; Name:            
; Defined at line: 5392
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: LOADK     R2 3         ; R2 := 3.000000
  2 [-]: NEWTABLE  R3 2 0       ; R3 := {}
  3 [-]: GETGLOBAL R4 K0        ; R4 := 0x7ed0a956
  4 [-]: LOADK     R5 K1        ; R5 := "/EE/Types/Physics/FullBody"
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: GETGLOBAL R5 K2        ; R5 := gBaseAvatarType
  7 [-]: SETLIST   R3 2 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
  8 [-]: GETGLOBAL R4 K3        ; R4 := 0xa421af95
  9 [-]: CALL      R4 1 2       ; R4 := R4()
 10 [-]: GETGLOBAL R5 K4        ; R5 := 0xf6c6e505
 11 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0[0xeea7f8c4]
 12 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 13 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 14 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0[0xde321e6f]
 15 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 16 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6[0xefd0fde2]
 17 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 18 [-]: MUL       R7 R5 R2     ; R7 := R5 * R2
 19 [-]: ADD       R7 R6 R7     ; R7 := R6 + R7
 20 [-]: GETGLOBAL R8 K8        ; R8 := 0x89326c93
 21 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8[0x15fbdbc0]
 22 [-]: MOVE      R10 R6       ; R10 := R6
 23 [-]: MOVE      R11 R7       ; R11 := R7
 24 [-]: MOVE      R12 R3       ; R12 := R3
 25 [-]: MOVE      R13 R1       ; R13 := R1
 26 [-]: MOVE      R14 R4       ; R14 := R4
 27 [-]: TAILCALL  R8 7 0       ; R8,... := R8(R9,R10,R11,R12,R13,R14)
 28 [-]: RETURN    R8 0         ; return R8,...
 29 [-]: RETURN    R0 1         ; return 


; Function #273:
;
; Name:            
; Defined at line: 5404
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  2 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  3 [-]: EQ        0 R0 K1      ; if R0 ~= 0.000000 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: SELF      R5 R1 K2     ; R6 := R1; R5 := R1[0x21a3da0c]
  6 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  7 [-]: MOVE      R3 R5        ; R3 := R5
  8 [-]: JMP       26           ; PC := 26
  9 [-]: EQ        0 R0 K3      ; if R0 ~= 3.000000 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: SELF      R5 R1 K4     ; R6 := R1; R5 := R1[0x0bf14f02]
 12 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 13 [-]: MOVE      R3 R5        ; R3 := R5
 14 [-]: JMP       26           ; PC := 26
 15 [-]: EQ        0 R0 K5      ; if R0 ~= 2.000000 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: SELF      R5 R1 K6     ; R6 := R1; R5 := R1[0x57d88957]
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: MOVE      R3 R5        ; R3 := R5
 20 [-]: JMP       26           ; PC := 26
 21 [-]: EQ        0 R0 K7      ; if R0 ~= 1.000000 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: SELF      R5 R1 K8     ; R6 := R1; R5 := R1[0x215bf396]
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: MOVE      R3 R5        ; R3 := R5
 26 [-]: GETGLOBAL R5 K9        ; R5 := 0x7b998233
 27 [-]: MOVE      R6 R3        ; R6 := R3
 28 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 29 [-]: TEST      R5 1         ; if R5 then PC := 59
 30 [-]: JMP       59           ; PC := 59
 31 [-]: LEN       R5 R3        ; R5 := # R3
 32 [-]: LT        0 K1 R5      ; if 0.000000 >= R5 then PC := 59
 33 [-]: JMP       59           ; PC := 59
 34 [-]: LOADK     R5 1         ; R5 := 1.000000
 35 [-]: LEN       R6 R3        ; R6 := # R3
 36 [-]: LOADK     R7 1         ; R7 := 1.000000
 37 [-]: FORPREP   R5 58        ; R5 -= R7; PC := 58
 38 [-]: GETGLOBAL R9 K9        ; R9 := 0x7b998233
 39 [-]: GETTABLE  R10 R3 R8    ; R10 := R3[R8]
 40 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["mItemType"]
 41 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 42 [-]: TEST      R9 1         ; if R9 then PC := 58
 43 [-]: JMP       58           ; PC := 58
 44 [-]: SELF      R9 R2 K11    ; R10 := R2; R9 := R2[0x105074fb]
 45 [-]: GETTABLE  R11 R3 R8    ; R11 := R3[R8]
 46 [-]: GETTABLE  R11 R11 K10  ; R11 := R11["mItemType"]
 47 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 48 [-]: GETGLOBAL R10 K9       ; R10 := 0x7b998233
 49 [-]: MOVE      R11 R9       ; R11 := R9
 50 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 51 [-]: TEST      R10 1        ; if R10 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETGLOBAL R10 K12      ; R10 := 0x33bdd652
 54 [-]: GETTABLE  R10 R10 K13  ; R82 := R10[0x23d5322f]
 55 [-]: MOVE      R11 R4       ; R11 := R4
 56 [-]: MOVE      R12 R9       ; R12 := R9
 57 [-]: CALL      R10 3 1      ; R10(R11,R12)
 58 [-]: FORLOOP   R5 38        ; R5 += R7; if R5 <= R6 then begin PC := 38; R8 := R5 end
 59 [-]: RETURN    R4 2         ; return R4
 60 [-]: RETURN    R0 1         ; return 


; Function #274:
;
; Name:            
; Defined at line: 5434
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 14
 10 [-]: JMP       14           ; PC := 14
 11 [-]: LOADBOOL  R2 0 0       ; R2 := false
 12 [-]: LOADK     R3 K1        ; R3 := ""
 13 [-]: RETURN    R2 3         ; return R2,R3
 14 [-]: LOADBOOL  R2 0 0       ; R2 := false
 15 [-]: LOADBOOL  R3 0 0       ; R3 := false
 16 [-]: LOADBOOL  R4 0 0       ; R4 := false
 17 [-]: LOADK     R5 K1        ; R5 := ""
 18 [-]: NEWTABLE  R6 4 0       ; R6 := {}
 19 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 20 [-]: SETTABLE  R7 K2 K4     ; R7["Cat"] := 0.000000
 21 [-]: SETTABLE  R7 K5 K6     ; R7["isSuit"] := true
 22 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 23 [-]: SETTABLE  R8 K2 K7     ; R8["Cat"] := 2.000000
 24 [-]: SETTABLE  R8 K5 K8     ; R8["isSuit"] := false
 25 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 26 [-]: SETTABLE  R9 K2 K9     ; R9["Cat"] := 1.000000
 27 [-]: SETTABLE  R9 K5 K8     ; R9["isSuit"] := false
 28 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 29 [-]: SETTABLE  R10 K2 K10   ; R10["Cat"] := 3.000000
 30 [-]: SETTABLE  R10 K5 K8    ; R10["isSuit"] := false
 31 [-]: SETLIST   R6 4 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 4
 32 [-]: GETGLOBAL R7 K11       ; R7 := 0xc8802016
 33 [-]: MOVE      R8 R6        ; R8 := R6
 34 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 35 [-]: JMP       79           ; PC := 79
 36 [-]: GETTABLE  R12 R11 K5   ; R12 := R11["isSuit"]
 37 [-]: TEST      R12 0        ; if not R12 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: TEST      R2 0         ; if not R2 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: GETTABLE  R12 R11 K5   ; R12 := R11["isSuit"]
 42 [-]: TEST      R12 1        ; if R12 then PC := 73
 43 [-]: JMP       73           ; PC := 73
 44 [-]: TEST      R3 1         ; if R3 then PC := 73
 45 [-]: JMP       73           ; PC := 73
 46 [-]: GETUPVAL  R12 U0       ; R12 := U0
 47 [-]: GETTABLE  R13 R11 K2   ; R13 := R11["Cat"]
 48 [-]: MOVE      R14 R0       ; R14 := R0
 49 [-]: MOVE      R15 R1       ; R15 := R1
 50 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 51 [-]: GETGLOBAL R13 K11      ; R13 := 0xc8802016
 52 [-]: MOVE      R14 R12      ; R14 := R12
 53 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 54 [-]: JMP       71           ; PC := 71
 55 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
 56 [-]: MOVE      R19 R17      ; R19 := R17
 57 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 58 [-]: TEST      R18 1        ; if R18 then PC := 71
 59 [-]: JMP       71           ; PC := 71
 60 [-]: SELF      R18 R17 K12  ; R19 := R17; R18 := R17[0x9470f5c2]
 61 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 62 [-]: TEST      R18 0        ; if not R18 then PC := 71
 63 [-]: JMP       71           ; PC := 71
 64 [-]: GETTABLE  R18 R11 K2   ; R18 := R11["Cat"]
 65 [-]: EQ        0 R18 K4     ; if R18 ~= 0.000000 then PC := 69
 66 [-]: JMP       69           ; PC := 69
 67 [-]: LOADBOOL  R2 1 0       ; R2 := true
 68 [-]: JMP       73           ; PC := 73
 69 [-]: LOADBOOL  R3 1 0       ; R3 := true
 70 [-]: JMP       73           ; PC := 73
 71 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 55; R15 := R16 end
 72 [-]: JMP       55           ; PC := 55
 73 [-]: TESTSET   R4 R2 0      ; if not R2 then PC := 76 else R4 := R2
 74 [-]: JMP       76           ; PC := 76
 75 [-]: MOVE      R4 R3        ; R4 := R3
 76 [-]: TEST      R4 0         ; if not R4 then PC := 79
 77 [-]: JMP       79           ; PC := 79
 78 [-]: JMP       81           ; PC := 81
 79 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 36; R9 := R10 end
 80 [-]: JMP       36           ; PC := 36
 81 [-]: TEST      R4 1         ; if R4 then PC := 113
 82 [-]: JMP       113          ; PC := 113
 83 [-]: LOADK     R18 K1       ; R18 := ""
 84 [-]: TEST      R2 1         ; if R2 then PC := 98
 85 [-]: JMP       98           ; PC := 98
 86 [-]: MOVE      R19 R18      ; R19 := R18
 87 [-]: LOADK     R20 K13      ; R20 := "1x "
 88 [-]: GETGLOBAL R21 K14      ; R21 := 0x603636ad
 89 [-]: LOADK     R22 K15      ; R22 := "/Lotus/Language/Menu/Global_ProductCategory_Suit"
 90 [-]: LOADBOOL  R23 0 0      ; R23 := false
 91 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
 92 [-]: CONCAT    R18 R19 R21  ; R18 := R19 .. R20 .. R21
 93 [-]: TEST      R3 1         ; if R3 then PC := 98
 94 [-]: JMP       98           ; PC := 98
 95 [-]: MOVE      R19 R18      ; R19 := R18
 96 [-]: LOADK     R20 K16      ; R20 := " + "
 97 [-]: CONCAT    R18 R19 R20  ; R18 := R19 .. R20
 98 [-]: TEST      R3 1         ; if R3 then PC := 107
 99 [-]: JMP       107          ; PC := 107
100 [-]: MOVE      R19 R18      ; R19 := R18
101 [-]: LOADK     R20 K13      ; R20 := "1x "
102 [-]: GETGLOBAL R21 K14      ; R21 := 0x603636ad
103 [-]: LOADK     R22 K17      ; R22 := "/Lotus/Language/Menu/Loadout_PVPCompatibleWeapon"
104 [-]: LOADBOOL  R23 0 0      ; R23 := false
105 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
106 [-]: CONCAT    R18 R19 R21  ; R18 := R19 .. R20 .. R21
107 [-]: GETGLOBAL R19 K14      ; R19 := 0x603636ad
108 [-]: LOADK     R20 K18      ; R20 := "/Lotus/Language/Menu/Loadout_PVPNeedCompatibleGear"
109 [-]: NEWTABLE  R21 0 1      ; R21 := {}
110 [-]: SETTABLE  R21 K19 R18  ; R21["REQ_GEAR"] := R18
111 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
112 [-]: MOVE      R5 R19       ; R5 := R19
113 [-]: MOVE      R19 R4       ; R19 := R4
114 [-]: MOVE      R20 R5       ; R20 := R5
115 [-]: RETURN    R19 3        ; return R19,R20
116 [-]: RETURN    R0 1         ; return 


; Function #275:
;
; Name:            
; Defined at line: 5487
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R82 := R2[0x44537adf]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 3       ; R2,R3 := R2(R3)
  5 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0[0x67bc869f]
  6 [-]: MOVE      R6 R1        ; R6 := R1
  7 [-]: LOADK     R7 12        ; R7 := 12.000000
  8 [-]: MOVE      R8 R2        ; R8 := R2
  9 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 10 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0[0x67bc869f]
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: LOADK     R7 13        ; R7 := 13.000000
 13 [-]: MOVE      R8 R3        ; R8 := R3
 14 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 15 [-]: SELF      R4 R0 K2     ; R5 := R0; R4 := R0[0xd5181643]
 16 [-]: MOVE      R6 R1        ; R6 := R1
 17 [-]: GETGLOBAL R7 K3        ; R7 := 0x0032441c
 18 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["UIMaterial_Bluer"]
 19 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 20 [-]: RETURN    R0 1         ; return 


; Function #276:
;
; Name:            
; Defined at line: 5496
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x76ea806b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x3f3ae64c]
  3 [-]: LOADK     R4 0         ; R4 := 0.000000
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 33
  9 [-]: JMP       33           ; PC := 33
 10 [-]: LOADK     R3 K3        ; R3 := 0.300000
 11 [-]: GETGLOBAL R4 K4        ; R4 := 0x34291f5c
 12 [-]: GETTABLE  R4 R4 K5     ; R82 := R4[0x1467d5f4]
 13 [-]: CALL      R4 1 2       ; R4 := R4()
 14 [-]: TEST      R4 0         ; if not R4 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: SELF      R4 R2 K6     ; R5 := R2; R4 := R2[0x40e9c32b]
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x0b3f5cb7]
 19 [-]: LOADK     R6 3         ; R6 := 3.000000
 20 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 21 [-]: MUL       R3 K8 R4     ; R3 := 13.000000 * R4
 22 [-]: SELF      R4 R2 K6     ; R5 := R2; R4 := R2[0x40e9c32b]
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0x8bea8020]
 25 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 26 [-]: TEST      R4 0         ; if not R4 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: UNM       R1 R1        ; R1 := ^ R1
 29 [-]: MUL       R4 R0 R3     ; R4 := R0 * R3
 30 [-]: MUL       R5 R1 R3     ; R5 := R1 * R3
 31 [-]: LOADK     R6 0         ; R6 := 0.000000
 32 [-]: RETURN    R4 4         ; return R4,R5,R6
 33 [-]: LOADK     R4 0         ; R4 := 0.000000
 34 [-]: LOADK     R5 0         ; R5 := 0.000000
 35 [-]: LOADK     R6 0         ; R6 := 0.000000
 36 [-]: RETURN    R4 4         ; return R4,R5,R6
 37 [-]: RETURN    R0 1         ; return 


; Function #277:
;
; Name:            
; Defined at line: 5515
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: CALL      R1 1 2       ; R1 := R1()
  9 [-]: CLOSURE   R2 0         ; R2 := closure(Function #277.1)
 10 [-]: SETTABLE  R1 K1 R2     ; R1["ViewConsoleCallback"] := R2
 11 [-]: GETGLOBAL R2 K2        ; R2 := 0x34291f5c
 12 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0x9ad21ae9]
 13 [-]: CALL      R2 1 2       ; R2 := R2()
 14 [-]: TEST      R2 0         ; if not R2 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R2 K4        ; R2 := 0x25d99d89
 17 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2[0x27af4576]
 18 [-]: MOVE      R5 R0        ; R5 := R0
 19 [-]: LOADK     R6 K1        ; R6 := "ViewConsoleCallback"
 20 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETGLOBAL R3 K6        ; R3 := 0xe7f2b02f
 23 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xe7696f24]
 24 [-]: MOVE      R5 R0        ; R5 := R0
 25 [-]: CALL      R3 3 1       ; R3(R4,R5)
 26 [-]: RETURN    R0 1         ; return 


; Function #277.1:
;
; Name:            
; Defined at line: 5521
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETGLOBAL R2 K0        ; R2 := 0xe7f2b02f
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xe7696f24]
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: CALL      R2 3 1       ; R2(R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #278:
;
; Name:            
; Defined at line: 5537
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["ArsenalOpen"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 11
  4 [-]: JMP       11           ; PC := 11
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["ArsenalUpgradeOpen"]
  7 [-]: TEST      R0 1         ; if R0 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: GETGLOBAL R0 K0        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["ModScreenOpen"]
 11 [-]: GETGLOBAL R1 K0        ; R1 := _T
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["AppearancePreviewOpen"]
 13 [-]: TEST      R1 0         ; if not R1 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: LOADK     R1 8         ; R1 := 8.000000
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: JMP       96           ; PC := 96
 18 [-]: TEST      R0 0         ; if not R0 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: LOADK     R1 4         ; R1 := 4.000000
 21 [-]: RETURN    R1 2         ; return R1
 22 [-]: JMP       96           ; PC := 96
 23 [-]: GETGLOBAL R1 K0        ; R1 := _T
 24 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["PPSScreenOpen"]
 25 [-]: TEST      R1 1         ; if R1 then PC := 31
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETGLOBAL R1 K0        ; R1 := _T
 28 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["ProfileMenuOpen"]
 29 [-]: TEST      R1 0         ; if not R1 then PC := 34
 30 [-]: JMP       34           ; PC := 34
 31 [-]: LOADK     R1 5         ; R1 := 5.000000
 32 [-]: RETURN    R1 2         ; return R1
 33 [-]: JMP       96           ; PC := 96
 34 [-]: GETGLOBAL R1 K0        ; R1 := _T
 35 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["OperatorScreenOpen"]
 36 [-]: TEST      R1 0         ; if not R1 then PC := 41
 37 [-]: JMP       41           ; PC := 41
 38 [-]: LOADK     R1 10        ; R1 := 10.000000
 39 [-]: RETURN    R1 2         ; return R1
 40 [-]: JMP       96           ; PC := 96
 41 [-]: GETGLOBAL R1 K0        ; R1 := _T
 42 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["DecoratingPlayerShip"]
 43 [-]: TEST      R1 1         ; if R1 then PC := 49
 44 [-]: JMP       49           ; PC := 49
 45 [-]: GETGLOBAL R1 K0        ; R1 := _T
 46 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["CustomizingPlayerShip"]
 47 [-]: TEST      R1 0         ; if not R1 then PC := 52
 48 [-]: JMP       52           ; PC := 52
 49 [-]: LOADK     R1 11        ; R1 := 11.000000
 50 [-]: RETURN    R1 2         ; return R1
 51 [-]: JMP       96           ; PC := 96
 52 [-]: GETGLOBAL R1 K0        ; R1 := _T
 53 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["CustomizingCrewship"]
 54 [-]: TEST      R1 0         ; if not R1 then PC := 59
 55 [-]: JMP       59           ; PC := 59
 56 [-]: LOADK     R1 12        ; R1 := 12.000000
 57 [-]: RETURN    R1 2         ; return R1
 58 [-]: JMP       96           ; PC := 96
 59 [-]: GETGLOBAL R1 K0        ; R1 := _T
 60 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["UIStyleScreenOpen"]
 61 [-]: TEST      R1 0         ; if not R1 then PC := 66
 62 [-]: JMP       66           ; PC := 66
 63 [-]: LOADK     R1 13        ; R1 := 13.000000
 64 [-]: RETURN    R1 2         ; return R1
 65 [-]: JMP       96           ; PC := 96
 66 [-]: GETGLOBAL R1 K0        ; R1 := _T
 67 [-]: GETTABLE  R1 R1 K13    ; R1 := R1["HUDColorScreenOpen"]
 68 [-]: TEST      R1 0         ; if not R1 then PC := 73
 69 [-]: JMP       73           ; PC := 73
 70 [-]: LOADK     R1 14        ; R1 := 14.000000
 71 [-]: RETURN    R1 2         ; return R1
 72 [-]: JMP       96           ; PC := 96
 73 [-]: GETGLOBAL R1 K0        ; R1 := _T
 74 [-]: GETTABLE  R1 R1 K14    ; R1 := R1["ChatLinkOpen"]
 75 [-]: TEST      R1 0         ; if not R1 then PC := 80
 76 [-]: JMP       80           ; PC := 80
 77 [-]: LOADK     R1 15        ; R1 := 15.000000
 78 [-]: RETURN    R1 2         ; return R1
 79 [-]: JMP       96           ; PC := 96
 80 [-]: GETGLOBAL R1 K0        ; R1 := _T
 81 [-]: GETTABLE  R1 R1 K15    ; R1 := R1["InventoryScreenOpen"]
 82 [-]: TEST      R1 0         ; if not R1 then PC := 87
 83 [-]: JMP       87           ; PC := 87
 84 [-]: LOADK     R1 16        ; R1 := 16.000000
 85 [-]: RETURN    R1 2         ; return R1
 86 [-]: JMP       96           ; PC := 96
 87 [-]: GETGLOBAL R1 K0        ; R1 := _T
 88 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["InStarChart"]
 89 [-]: TEST      R1 0         ; if not R1 then PC := 94
 90 [-]: JMP       94           ; PC := 94
 91 [-]: LOADK     R1 17        ; R1 := 17.000000
 92 [-]: RETURN    R1 2         ; return R1
 93 [-]: JMP       96           ; PC := 96
 94 [-]: LOADK     R1 0         ; R1 := 0.000000
 95 [-]: RETURN    R1 2         ; return R1
 96 [-]: RETURN    R0 1         ; return 


; Function #279:
;
; Name:            
; Defined at line: 5566
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x5bced4c4
  2 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x99675e23]
  3 [-]: MUL       R3 R0 R1     ; R3 := R0 * R1
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: SUB       R3 R0 R2     ; R3 := R0 - R2
  6 [-]: RETURN    R3 2         ; return R3
  7 [-]: RETURN    R0 1         ; return 


; Function #280:
;
; Name:            
; Defined at line: 5571
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  5 [-]: RETURN    R2 0         ; return R2,...
  6 [-]: RETURN    R0 1         ; return 


; Function #281:
;
; Name:            
; Defined at line: 5576
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R1 K0        ; R1 := "/Lotus/Language/Menu/Coupon_Generic"
  2 [-]: EQ        0 R0 K2      ; if R0 ~= 3.000000 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: LOADK     R1 K3        ; R1 := "/Lotus/Language/Menu/Coupon_Warframe"
  5 [-]: JMP       17           ; PC := 17
  6 [-]: EQ        0 R0 K4      ; if R0 ~= 1.000000 then PC := 10
  7 [-]: JMP       10           ; PC := 10
  8 [-]: LOADK     R1 K5        ; R1 := "/Lotus/Language/Menu/Coupon_LongGun"
  9 [-]: JMP       17           ; PC := 17
 10 [-]: EQ        0 R0 K6      ; if R0 ~= 0.000000 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADK     R1 K7        ; R1 := "/Lotus/Language/Menu/Coupon_Pistol"
 13 [-]: JMP       17           ; PC := 17
 14 [-]: EQ        0 R0 K8      ; if R0 ~= 5.000000 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: LOADK     R1 K9        ; R1 := "/Lotus/Language/Menu/Coupon_Melee"
 17 [-]: GETGLOBAL R2 K10       ; R2 := 0x603636ad
 18 [-]: MOVE      R3 R1        ; R3 := R1
 19 [-]: LOADBOOL  R4 0 0       ; R4 := false
 20 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
 21 [-]: RETURN    R2 0         ; return R2,...
 22 [-]: RETURN    R0 1         ; return 


; Function #282:
;
; Name:            
; Defined at line: 5592
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 12 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["StoreItem"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 0         ; if not R1 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: NEWTABLE  R1 0 1       ; R1 := {}
 18 [-]: SETTABLE  R1 K4 K5     ; R1["mAmount"] := 0.000000
 19 [-]: SETTABLE  R0 K3 R1     ; R0["Coupon"] := R1
 20 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x464542fe]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: LOADK     R2 1         ; R2 := 1.000000
 24 [-]: LEN       R3 R1        ; R3 := # R1
 25 [-]: LOADK     R4 1         ; R4 := 1.000000
 26 [-]: FORPREP   R2 57        ; R2 -= R4; PC := 57
 27 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 28 [-]: GETGLOBAL R7 K7        ; R7 := 0x34291f5c
 29 [-]: GETTABLE  R7 R7 K8     ; R82 := R7[0x397b920f]
 30 [-]: GETTABLE  R8 R6 K9     ; R8 := R6["mExpiryDate"]
 31 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 32 [-]: LT        0 K5 R7      ; if 0.000000 >= R7 then PC := 57
 33 [-]: JMP       57           ; PC := 57
 34 [-]: SELF      R8 R6 K10    ; R9 := R6; R8 := R6[0x96df49a3]
 35 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["StoreItem"]
 36 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 37 [-]: TEST      R8 0         ; if not R8 then PC := 57
 38 [-]: JMP       57           ; PC := 57
 39 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["StoreItem"]
 40 [-]: SELF      R8 R8 K11    ; R9 := R8; R8 := R8[0x0f5a34d1]
 41 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 42 [-]: TEST      R8 1         ; if R8 then PC := 57
 43 [-]: JMP       57           ; PC := 57
 44 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["Coupon"]
 45 [-]: GETTABLE  R9 R6 K12    ; R9 := R6["mId"]
 46 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["mId"]
 47 [-]: SETTABLE  R8 K12 R9    ; R8["mId"] := R9
 48 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["Coupon"]
 49 [-]: GETTABLE  R9 R6 K4     ; R9 := R6["mAmount"]
 50 [-]: DIV       R9 R9 K13    ; R9 := R9 / 100.000000
 51 [-]: SETTABLE  R8 K4 R9     ; R8["mAmount"] := R9
 52 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["Coupon"]
 53 [-]: GETTABLE  R9 R6 K9     ; R9 := R6["mExpiryDate"]
 54 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["sec"]
 55 [-]: SETTABLE  R8 K14 R9    ; R8["mExpiry"] := R9
 56 [-]: JMP       58           ; PC := 58
 57 [-]: FORLOOP   R2 27        ; R2 += R4; if R2 <= R3 then begin PC := 27; R5 := R2 end
 58 [-]: GETGLOBAL R8 K7        ; R8 := 0x34291f5c
 59 [-]: GETTABLE  R8 R8 K16    ; R82 := R8[0xbcd06415]
 60 [-]: CALL      R8 1 2       ; R8 := R8()
 61 [-]: TEST      R8 0         ; if not R8 then PC := 90
 62 [-]: JMP       90           ; PC := 90
 63 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["StoreItem"]
 64 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8[0xdaefcda4]
 65 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 66 [-]: EQ        0 R8 K18     ; if R8 ~= 4.000000 then PC := 90
 67 [-]: JMP       90           ; PC := 90
 68 [-]: GETGLOBAL R8 K1        ; R8 := 0x25d99d89
 69 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8[0x104b2223]
 70 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 71 [-]: TEST      R8 0         ; if not R8 then PC := 90
 72 [-]: JMP       90           ; PC := 90
 73 [-]: GETGLOBAL R9 K7        ; R9 := 0x34291f5c
 74 [-]: GETTABLE  R9 R9 K8     ; R82 := R9[0x397b920f]
 75 [-]: GETTABLE  R10 R8 K14   ; R10 := R8["mExpiry"]
 76 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 77 [-]: LT        0 K5 R9      ; if 0.000000 >= R9 then PC := 90
 78 [-]: JMP       90           ; PC := 90
 79 [-]: GETTABLE  R10 R0 K3    ; R10 := R0["Coupon"]
 80 [-]: SETTABLE  R10 K12 K20  ; R10["mId"] := nil
 81 [-]: GETTABLE  R10 R0 K3    ; R10 := R0["Coupon"]
 82 [-]: GETTABLE  R11 R8 K21   ; R11 := R8["mDiscount"]
 83 [-]: DIV       R11 R11 K13  ; R11 := R11 / 100.000000
 84 [-]: SETTABLE  R10 K4 R11   ; R10["mAmount"] := R11
 85 [-]: GETTABLE  R10 R0 K3    ; R10 := R0["Coupon"]
 86 [-]: GETTABLE  R11 R8 K14   ; R11 := R8["mExpiry"]
 87 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["sec"]
 88 [-]: SETTABLE  R10 K14 R11  ; R10["mExpiry"] := R11
 89 [-]: SETTABLE  R0 K22 K23   ; R0["IsExternalPlat"] := true
 90 [-]: RETURN    R0 1         ; return 


; Function #283:
;
; Name:            
; Defined at line: 5627
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #284:
;
; Name:            
; Defined at line: 5631
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  32

  1 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  2 [-]: LOADBOOL  R4 0 0       ; R4 := false
  3 [-]: LOADNIL   R5 R5        ; R5 := nil
  4 [-]: GETGLOBAL R6 K0        ; R6 := 0x25d99d89
  5 [-]: GETGLOBAL R7 K1        ; R7 := 0x7b998233
  6 [-]: MOVE      R8 R6        ; R8 := R6
  7 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  8 [-]: TEST      R7 1         ; if R7 then PC := 24
  9 [-]: JMP       24           ; PC := 24
 10 [-]: SELF      R7 R6 K2     ; R8 := R6; R7 := R6[0x25a6e75e]
 11 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 12 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7[0xd8dfa041]
 13 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 14 [-]: MOVE      R5 R7        ; R5 := R7
 15 [-]: LOADK     R7 1         ; R7 := 1.000000
 16 [-]: LEN       R8 R5        ; R8 := # R5
 17 [-]: LOADK     R9 1         ; R9 := 1.000000
 18 [-]: FORPREP   R7 23        ; R7 -= R9; PC := 23
 19 [-]: GETUPVAL  R11 U0       ; R11 := U0
 20 [-]: EQ        0 R5 R11     ; if R5 ~= R11 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: LOADBOOL  R4 1 0       ; R4 := true
 23 [-]: FORLOOP   R7 19        ; R7 += R9; if R7 <= R8 then begin PC := 19; R10 := R7 end
 24 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 25 [-]: GETGLOBAL R12 K4       ; R12 := 0x7ed0a956
 26 [-]: LOADK     R13 K5       ; R13 := "/Lotus/StoreItems/Types/StoreItems/SuitCustomizations/ColourPickerAccessibilityItemA"
 27 [-]: CALL      R12 2 0      ; R12,... := R12(R13)
 28 [-]: SETLIST   R11 0 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 0
 29 [-]: GETGLOBAL R12 K1       ; R12 := 0x7b998233
 30 [-]: MOVE      R13 R0       ; R13 := R0
 31 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 32 [-]: TEST      R12 1        ; if R12 then PC := 119
 33 [-]: JMP       119          ; PC := 119
 34 [-]: SELF      R12 R0 K6    ; R13 := R0; R12 := R0[0xe9cbffa8]
 35 [-]: GETGLOBAL R14 K7       ; R14 := gColorPickerItemType
 36 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 37 [-]: GETGLOBAL R13 K8       ; R13 := 0xc8802016
 38 [-]: MOVE      R14 R12      ; R14 := R12
 39 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 40 [-]: JMP       117          ; PC := 117
 41 [-]: GETGLOBAL R18 K9       ; R18 := 0xce225efa
 42 [-]: LOADK     R19 0        ; R19 := 0.000000
 43 [-]: CALL      R18 2 1      ; R18(R19)
 44 [-]: GETGLOBAL R18 K1       ; R18 := 0x7b998233
 45 [-]: MOVE      R19 R17      ; R19 := R17
 46 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 47 [-]: TEST      R18 1        ; if R18 then PC := 117
 48 [-]: JMP       117          ; PC := 117
 49 [-]: SELF      R18 R17 K10  ; R19 := R17; R18 := R17[0xf278f8a1]
 50 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 51 [-]: GETGLOBAL R19 K1       ; R19 := 0x7b998233
 52 [-]: MOVE      R20 R18      ; R20 := R18
 53 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 54 [-]: TEST      R19 1        ; if R19 then PC := 117
 55 [-]: JMP       117          ; PC := 117
 56 [-]: SELF      R19 R17 K11  ; R20 := R17; R19 := R17[0xfe9eb1a5]
 57 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 58 [-]: EQ        0 R19 K13    ; if R19 ~= 10.000000 then PC := 117
 59 [-]: JMP       117          ; PC := 117
 60 [-]: SELF      R19 R17 K14  ; R20 := R17; R19 := R17[0x31e559d2]
 61 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 62 [-]: GETGLOBAL R20 K1       ; R20 := 0x7b998233
 63 [-]: MOVE      R21 R5       ; R21 := R5
 64 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 65 [-]: TEST      R20 1        ; if R20 then PC := 78
 66 [-]: JMP       78           ; PC := 78
 67 [-]: LOADK     R20 1        ; R20 := 1.000000
 68 [-]: LEN       R21 R5       ; R21 := # R5
 69 [-]: LOADK     R22 1        ; R22 := 1.000000
 70 [-]: FORPREP   R20 77       ; R20 -= R22; PC := 77
 71 [-]: GETTABLE  R24 R5 R23   ; R24 := R5[R23]
 72 [-]: GETTABLE  R24 R24 K15  ; R24 := R24["mItemType"]
 73 [-]: EQ        0 R24 R18    ; if R24 ~= R18 then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: LOADBOOL  R19 1 0      ; R19 := true
 76 [-]: JMP       78           ; PC := 78
 77 [-]: FORLOOP   R20 71       ; R20 += R22; if R20 <= R21 then begin PC := 71; R23 := R20 end
 78 [-]: TEST      R19 1        ; if R19 then PC := 88
 79 [-]: JMP       88           ; PC := 88
 80 [-]: SELF      R24 R17 K16  ; R25 := R17; R24 := R17[0xc055cef8]
 81 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 82 [-]: TEST      R24 1        ; if R24 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: TEST      R2 0         ; if not R2 then PC := 117
 85 [-]: JMP       117          ; PC := 117
 86 [-]: TEST      R1 1         ; if R1 then PC := 117
 87 [-]: JMP       117          ; PC := 117
 88 [-]: LOADBOOL  R24 0 0      ; R24 := false
 89 [-]: GETGLOBAL R25 K17      ; R25 := _T
 90 [-]: GETTABLE  R25 R25 K18  ; R25 := R25["AccessibilityColorsAvailable"]
 91 [-]: TEST      R25 1        ; if R25 then PC := 104
 92 [-]: JMP       104          ; PC := 104
 93 [-]: LOADK     R25 1        ; R25 := 1.000000
 94 [-]: LEN       R26 R11      ; R26 := # R11
 95 [-]: LOADK     R27 1        ; R27 := 1.000000
 96 [-]: FORPREP   R25 103      ; R25 -= R27; PC := 103
 97 [-]: SELF      R29 R17 K19  ; R30 := R17; R29 := R17[0xf2deaf69]
 98 [-]: GETTABLE  R31 R11 R28  ; R31 := R11[R28]
 99 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
100 [-]: TEST      R29 0        ; if not R29 then PC := 103
101 [-]: JMP       103          ; PC := 103
102 [-]: LOADBOOL  R24 1 0      ; R24 := true
103 [-]: FORLOOP   R25 97       ; R25 += R27; if R25 <= R26 then begin PC := 97; R28 := R25 end
104 [-]: GETGLOBAL R29 K17      ; R29 := _T
105 [-]: GETTABLE  R29 R29 K18  ; R29 := R29["AccessibilityColorsAvailable"]
106 [-]: TEST      R29 1        ; if R29 then PC := 110
107 [-]: JMP       110          ; PC := 110
108 [-]: TEST      R24 1        ; if R24 then PC := 117
109 [-]: JMP       117          ; PC := 117
110 [-]: GETGLOBAL R29 K20      ; R29 := 0x33bdd652
111 [-]: GETTABLE  R29 R29 K21  ; R82 := R29[0x23d5322f]
112 [-]: MOVE      R30 R3       ; R30 := R3
113 [-]: NEWTABLE  R31 0 2      ; R31 := {}
114 [-]: SETTABLE  R31 K22 R17  ; R31["mStoreItem"] := R17
115 [-]: SETTABLE  R31 K23 R19  ; R31["mOwned"] := R19
116 [-]: CALL      R29 3 1      ; R29(R30,R31)
117 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 41; R15 := R16 end
118 [-]: JMP       41           ; PC := 41
119 [-]: MOVE      R29 R3       ; R29 := R3
120 [-]: MOVE      R30 R4       ; R30 := R4
121 [-]: RETURN    R29 3        ; return R29,R30
122 [-]: RETURN    R0 1         ; return 


; Function #285:
;
; Name:            
; Defined at line: 5692
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: MOVE      R6 R2        ; R6 := R2
  5 [-]: TAILCALL  R3 4 0       ; R3,... := R3(R4,R5,R6)
  6 [-]: RETURN    R3 0         ; return R3,...
  7 [-]: RETURN    R0 1         ; return 


; Function #286:
;
; Name:            
; Defined at line: 5696
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  8 [-]: GETUPVAL  R3 U0        ; R3 := U0
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: LOADBOOL  R5 1 0       ; R5 := true
 11 [-]: CALL      R3 3 3       ; R3,R4 := R3(R4,R5)
 12 [-]: LEN       R5 R3        ; R5 := # R3
 13 [-]: TEST      R4 1         ; if R4 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: ADD       R5 R5 K1     ; R5 := R5 + 1.000000
 16 [-]: GETGLOBAL R6 K2        ; R6 := 0x55730e1a
 17 [-]: LOADK     R7 1         ; R7 := 1.000000
 18 [-]: MOVE      R8 R5        ; R8 := R5
 19 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 20 [-]: LOADNIL   R7 R7        ; R7 := nil
 21 [-]: LEN       R8 R3        ; R8 := # R3
 22 [-]: LE        0 R6 R8      ; if R6 > R8 then PC := 35
 23 [-]: JMP       35           ; PC := 35
 24 [-]: GETGLOBAL R8 K3        ; R8 := 0xb009bbc6
 25 [-]: GETTABLE  R9 R3 R6     ; R9 := R3[R6]
 26 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["mStoreItem"]
 27 [-]: SELF      R9 R9 K5     ; R10 := R9; R9 := R9[0xf278f8a1]
 28 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 29 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 30 [-]: SELF      R9 R8 K6     ; R10 := R8; R9 := R8[0x31522360]
 31 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 32 [-]: MOVE      R2 R9        ; R2 := R9
 33 [-]: GETTABLE  R9 R3 R6     ; R9 := R3[R6]
 34 [-]: GETTABLE  R7 R9 K4     ; R7 := R9["mStoreItem"]
 35 [-]: EQ        0 R2 K7      ; if R2 ~= nil then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: NEWTABLE  R9 0 0       ; R9 := {}
 38 [-]: MOVE      R2 R9        ; R2 := R9
 39 [-]: LEN       R9 R2        ; R9 := # R2
 40 [-]: EQ        0 R9 K8      ; if R9 ~= 0.000000 then PC := 55
 41 [-]: JMP       55           ; PC := 55
 42 [-]: SELF      R9 R1 K6     ; R10 := R1; R9 := R1[0x31522360]
 43 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 44 [-]: LOADK     R10 3        ; R10 := 3.000000
 45 [-]: LEN       R11 R9       ; R11 := # R9
 46 [-]: LOADK     R12 5        ; R12 := 5.000000
 47 [-]: FORPREP   R10 53       ; R10 -= R12; PC := 53
 48 [-]: GETGLOBAL R14 K9       ; R14 := 0x33bdd652
 49 [-]: GETTABLE  R14 R14 K10  ; R82 := R14[0x23d5322f]
 50 [-]: MOVE      R15 R2       ; R15 := R2
 51 [-]: GETTABLE  R16 R9 R13   ; R16 := R9[R13]
 52 [-]: CALL      R14 3 1      ; R14(R15,R16)
 53 [-]: FORLOOP   R10 48       ; R10 += R12; if R10 <= R11 then begin PC := 48; R13 := R10 end
 54 [-]: LOADNIL   R7 R7        ; R7 := nil
 55 [-]: MOVE      R14 R2       ; R14 := R2
 56 [-]: MOVE      R15 R7       ; R15 := R7
 57 [-]: RETURN    R14 3        ; return R14,R15
 58 [-]: RETURN    R0 1         ; return 


; Function #287:
;
; Name:            
; Defined at line: 5739
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: LOADK     R2 0         ; R2 := 0.000000
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  6 [-]: GETGLOBAL R4 K1        ; R4 := 0x25d99d89
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 17
  9 [-]: JMP       17           ; PC := 17
 10 [-]: GETGLOBAL R3 K1        ; R3 := 0x25d99d89
 11 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0x25a6e75e]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0xa64e07df]
 14 [-]: LOADK     R5 5         ; R5 := 5.000000
 15 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 16 [-]: MOVE      R2 R3        ; R2 := R3
 17 [-]: GETGLOBAL R3 K5        ; R3 := 0x5bced4c4
 18 [-]: GETTABLE  R3 R3 K6     ; R82 := R3[0xac1b386a]
 19 [-]: ADD       R4 R1 K7     ; R4 := R1 + 1.000000
 20 [-]: ADD       R4 R4 R2     ; R4 := R4 + R2
 21 [-]: GETGLOBAL R5 K8        ; R5 := MAX_PVP_LOADOUTS
 22 [-]: TAILCALL  R3 3 0       ; R3,... := R3(R4,R5)
 23 [-]: RETURN    R3 0         ; return R3,...
 24 [-]: RETURN    R0 1         ; return 


; Function #288:
;
; Name:            
; Defined at line: 5749
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #289:
;
; Name:            
; Defined at line: 5753
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0xed4e0128]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: LOADK     R3 0         ; R3 := 0.000000
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: MOVE      R6 R2        ; R6 := R2
  7 [-]: GETUPVAL  R7 U1        ; R7 := U1
  8 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  9 [-]: TEST      R4 0         ; if not R4 then PC := 30
 10 [-]: JMP       30           ; PC := 30
 11 [-]: GETTABLE  R5 R4 K1     ; R5 := R4[1.000000]
 12 [-]: GETTABLE  R6 R4 K2     ; R6 := R4[2.000000]
 13 [-]: LOADK     R7 1         ; R7 := 1.000000
 14 [-]: FORPREP   R5 29        ; R5 -= R7; PC := 29
 15 [-]: GETTABLE  R9 R1 R8     ; R9 := R1[R8]
 16 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["count"]
 17 [-]: TEST      R9 0         ; if not R9 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETTABLE  R9 R1 R8     ; R9 := R1[R8]
 20 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["count"]
 21 [-]: ADD       R3 R3 R9     ; R3 := R3 + R9
 22 [-]: JMP       24           ; PC := 24
 23 [-]: ADD       R3 R3 K1     ; R3 := R3 + 1.000000
 24 [-]: GETTABLE  R9 R4 K1     ; R9 := R4[1.000000]
 25 [-]: GETTABLE  R10 R4 K2    ; R10 := R4[2.000000]
 26 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: JMP       30           ; PC := 30
 29 [-]: FORLOOP   R5 15        ; R5 += R7; if R5 <= R6 then begin PC := 15; R8 := R5 end
 30 [-]: RETURN    R3 2         ; return R3
 31 [-]: RETURN    R0 1         ; return 


; Function #290:
;
; Name:            
; Defined at line: 5773
; #Upvalues:       9
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  48

  1 [-]: LOADK     R4 0         ; R4 := 0.000000
  2 [-]: SELF      R5 R2 K0     ; R6 := R2; R5 := R2[0xfe9eb1a5]
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: SELF      R6 R2 K1     ; R7 := R2; R6 := R2[0x9dbbea0a]
  5 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  6 [-]: SELF      R7 R2 K2     ; R8 := R2; R7 := R2[0xf2deaf69]
  7 [-]: GETGLOBAL R9 K3        ; R9 := gRecipeStoreItemType
  8 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
  9 [-]: SELF      R8 R2 K4     ; R9 := R2; R8 := R2[0xf278f8a1]
 10 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 11 [-]: TEST      R6 0         ; if not R6 then PC := 136
 12 [-]: JMP       136          ; PC := 136
 13 [-]: LOADBOOL  R9 0 0       ; R9 := false
 14 [-]: LOADBOOL  R10 0 0      ; R10 := false
 15 [-]: SELF      R11 R2 K5    ; R12 := R2; R11 := R2[0x7b060e36]
 16 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 17 [-]: LOADK     R12 0        ; R12 := 0.000000
 18 [-]: LOADK     R13 0        ; R13 := 0.000000
 19 [-]: LOADK     R14 1        ; R14 := 1.000000
 20 [-]: LEN       R15 R11      ; R15 := # R11
 21 [-]: LOADK     R16 1        ; R16 := 1.000000
 22 [-]: FORPREP   R14 60       ; R14 -= R16; PC := 60
 23 [-]: GETTABLE  R18 R11 R17  ; R18 := R11[R17]
 24 [-]: GETTABLE  R18 R18 K6   ; R18 := R18["mTypeName"]
 25 [-]: GETGLOBAL R19 K7       ; R19 := 0x7b998233
 26 [-]: MOVE      R20 R18      ; R20 := R18
 27 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 28 [-]: TEST      R19 1        ; if R19 then PC := 60
 29 [-]: JMP       60           ; PC := 60
 30 [-]: GETUPVAL  R19 U0       ; R19 := U0
 31 [-]: SELF      R20 R18 K0   ; R21 := R18; R20 := R18[0xfe9eb1a5]
 32 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
 33 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
 34 [-]: TEST      R19 0        ; if not R19 then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: LOADBOOL  R9 1 0       ; R9 := true
 37 [-]: GETUPVAL  R19 U1       ; R19 := U1
 38 [-]: MOVE      R20 R18      ; R20 := R18
 39 [-]: MOVE      R21 R3       ; R21 := R3
 40 [-]: LOADBOOL  R22 1 0      ; R22 := true
 41 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
 42 [-]: TEST      R19 0        ; if not R19 then PC := 45
 43 [-]: JMP       45           ; PC := 45
 44 [-]: LOADBOOL  R10 1 0      ; R10 := true
 45 [-]: GETUPVAL  R19 U2       ; R19 := U2
 46 [-]: MOVE      R20 R18      ; R20 := R18
 47 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 48 [-]: TEST      R19 1        ; if R19 then PC := 60
 49 [-]: JMP       60           ; PC := 60
 50 [-]: ADD       R12 R12 K8   ; R12 := R12 + 1.000000
 51 [-]: GETUPVAL  R19 U3       ; R19 := U3
 52 [-]: MOVE      R20 R3       ; R20 := R3
 53 [-]: SELF      R21 R18 K9   ; R22 := R18; R21 := R18[0x170c5cfa]
 54 [-]: CALL      R21 2 2      ; R21 := R21(R22)
 55 [-]: GETUPVAL  R22 U4       ; R22 := U4
 56 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
 57 [-]: TEST      R19 0        ; if not R19 then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: ADD       R13 R13 K8   ; R13 := R13 + 1.000000
 60 [-]: FORLOOP   R14 23       ; R14 += R16; if R14 <= R15 then begin PC := 23; R17 := R14 end
 61 [-]: GETGLOBAL R19 K10      ; R19 := 0x34291f5c
 62 [-]: GETTABLE  R19 R19 K11  ; R82 := R19[0x056bfe8b]
 63 [-]: CALL      R19 1 2      ; R19 := R19()
 64 [-]: TEST      R19 0        ; if not R19 then PC := 79
 65 [-]: JMP       79           ; PC := 79
 66 [-]: SELF      R19 R2 K12   ; R20 := R2; R19 := R2[0x19865272]
 67 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 68 [-]: EQ        1 R19 K13    ; if R19 == "" then PC := 79
 69 [-]: JMP       79           ; PC := 79
 70 [-]: GETGLOBAL R19 K14      ; R19 := 0x25d99d89
 71 [-]: SELF      R19 R19 K15  ; R20 := R19; R19 := R19[0x35122015]
 72 [-]: SELF      R21 R2 K12   ; R22 := R2; R21 := R2[0x19865272]
 73 [-]: CALL      R21 2 0      ; R21,... := R21(R22)
 74 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
 75 [-]: TEST      R19 1        ; if R19 then PC := 79
 76 [-]: JMP       79           ; PC := 79
 77 [-]: LOADK     R4 0         ; R4 := 0.000000
 78 [-]: JMP       102          ; PC := 102
 79 [-]: TEST      R9 0         ; if not R9 then PC := 83
 80 [-]: JMP       83           ; PC := 83
 81 [-]: TEST      R10 0        ; if not R10 then PC := 87
 82 [-]: JMP       87           ; PC := 87
 83 [-]: LT        0 K16 R12    ; if 0.000000 >= R12 then PC := 89
 84 [-]: JMP       89           ; PC := 89
 85 [-]: EQ        0 R13 R12    ; if R13 ~= R12 then PC := 89
 86 [-]: JMP       89           ; PC := 89
 87 [-]: LOADK     R4 1         ; R4 := 1.000000
 88 [-]: JMP       102          ; PC := 102
 89 [-]: GETUPVAL  R19 U5       ; R19 := U5
 90 [-]: TEST      R19 0        ; if not R19 then PC := 102
 91 [-]: JMP       102          ; PC := 102
 92 [-]: GETUPVAL  R19 U6       ; R19 := U6
 93 [-]: MOVE      R20 R2       ; R20 := R2
 94 [-]: LOADNIL   R21 R22      ; R21 := R22 := nil
 95 [-]: MOVE      R23 R3       ; R23 := R3
 96 [-]: CALL      R19 5 3      ; R19,R20 := R19(R20,R21,R22,R23)
 97 [-]: EQ        0 R19 K16    ; if R19 ~= 0.000000 then PC := 102
 98 [-]: JMP       102          ; PC := 102
 99 [-]: EQ        0 R20 K16    ; if R20 ~= 0.000000 then PC := 102
100 [-]: JMP       102          ; PC := 102
101 [-]: LOADK     R4 1         ; R4 := 1.000000
102 [-]: GETGLOBAL R21 K10      ; R21 := 0x34291f5c
103 [-]: GETTABLE  R21 R21 K17  ; R82 := R21[0x49d4c6fc]
104 [-]: CALL      R21 1 2      ; R21 := R21()
105 [-]: TEST      R21 0        ; if not R21 then PC := 230
106 [-]: JMP       230          ; PC := 230
107 [-]: GETGLOBAL R21 K18      ; R21 := 0x76ea806b
108 [-]: SELF      R21 R21 K19  ; R22 := R21; R21 := R21[0x3f3ae64c]
109 [-]: LOADK     R23 0        ; R23 := 0.000000
110 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
111 [-]: SELF      R21 R21 K20  ; R22 := R21; R21 := R21[0xfe6131c3]
112 [-]: LOADK     R23 K21      ; R23 := "steam_market"
113 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
114 [-]: TEST      R21 0        ; if not R21 then PC := 230
115 [-]: JMP       230          ; PC := 230
116 [-]: SELF      R21 R2 K22   ; R22 := R2; R21 := R2[0x1760dc5a]
117 [-]: CALL      R21 2 2      ; R21 := R21(R22)
118 [-]: EQ        1 R21 K13    ; if R21 == "" then PC := 230
119 [-]: JMP       230          ; PC := 230
120 [-]: GETGLOBAL R21 K14      ; R21 := 0x25d99d89
121 [-]: SELF      R21 R21 K23  ; R22 := R21; R21 := R21[0x1b162595]
122 [-]: CALL      R21 2 2      ; R21 := R21(R22)
123 [-]: LOADK     R22 1        ; R22 := 1.000000
124 [-]: LEN       R23 R21      ; R23 := # R21
125 [-]: LOADK     R24 1        ; R24 := 1.000000
126 [-]: FORPREP   R22 134      ; R22 -= R24; PC := 134
127 [-]: GETTABLE  R26 R21 R25  ; R26 := R21[R25]
128 [-]: SELF      R27 R2 K22   ; R28 := R2; R27 := R2[0x1760dc5a]
129 [-]: CALL      R27 2 2      ; R27 := R27(R28)
130 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 134
131 [-]: JMP       134          ; PC := 134
132 [-]: LOADK     R4 1         ; R4 := 1.000000
133 [-]: JMP       230          ; PC := 230
134 [-]: FORLOOP   R22 127      ; R22 += R24; if R22 <= R23 then begin PC := 127; R25 := R22 end
135 [-]: JMP       230          ; PC := 230
136 [-]: GETGLOBAL R26 K24      ; R26 := 0xce225efa
137 [-]: CALL      R26 1 1      ; R26()
138 [-]: SELF      R26 R2 K9    ; R27 := R2; R26 := R2[0x170c5cfa]
139 [-]: CALL      R26 2 2      ; R26 := R26(R27)
140 [-]: GETGLOBAL R27 K7       ; R27 := 0x7b998233
141 [-]: MOVE      R28 R8       ; R28 := R8
142 [-]: CALL      R27 2 2      ; R27 := R27(R28)
143 [-]: TEST      R27 1        ; if R27 then PC := 195
144 [-]: JMP       195          ; PC := 195
145 [-]: SELF      R27 R8 K2    ; R28 := R8; R27 := R8[0xf2deaf69]
146 [-]: GETGLOBAL R29 K25      ; R29 := gVoidProjectionItemType
147 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
148 [-]: TEST      R27 0        ; if not R27 then PC := 195
149 [-]: JMP       195          ; PC := 195
150 [-]: MOVE      R27 R26      ; R27 := R26
151 [-]: GETGLOBAL R28 K26      ; R28 := 0x7f5022cf
152 [-]: GETTABLE  R28 R28 K27  ; R82 := R28[0x66edf04f]
153 [-]: MOVE      R29 R27      ; R29 := R27
154 [-]: LOADK     R30 K28      ; R30 := "Bronze"
155 [-]: LOADK     R31 K13      ; R31 := ""
156 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
157 [-]: MOVE      R27 R28      ; R27 := R28
158 [-]: GETGLOBAL R28 K26      ; R28 := 0x7f5022cf
159 [-]: GETTABLE  R28 R28 K27  ; R82 := R28[0x66edf04f]
160 [-]: MOVE      R29 R27      ; R29 := R27
161 [-]: LOADK     R30 K29      ; R30 := "Silver"
162 [-]: LOADK     R31 K13      ; R31 := ""
163 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
164 [-]: MOVE      R27 R28      ; R27 := R28
165 [-]: GETGLOBAL R28 K26      ; R28 := 0x7f5022cf
166 [-]: GETTABLE  R28 R28 K27  ; R82 := R28[0x66edf04f]
167 [-]: MOVE      R29 R27      ; R29 := R27
168 [-]: LOADK     R30 K30      ; R30 := "Gold"
169 [-]: LOADK     R31 K13      ; R31 := ""
170 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
171 [-]: MOVE      R27 R28      ; R27 := R28
172 [-]: GETGLOBAL R28 K26      ; R28 := 0x7f5022cf
173 [-]: GETTABLE  R28 R28 K27  ; R82 := R28[0x66edf04f]
174 [-]: MOVE      R29 R27      ; R29 := R27
175 [-]: LOADK     R30 K31      ; R30 := "Platinum"
176 [-]: LOADK     R31 K13      ; R31 := ""
177 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
178 [-]: MOVE      R27 R28      ; R27 := R28
179 [-]: NEWTABLE  R28 4 0      ; R28 := {}
180 [-]: MOVE      R29 R27      ; R29 := R27
181 [-]: LOADK     R30 K28      ; R30 := "Bronze"
182 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
183 [-]: MOVE      R30 R27      ; R30 := R27
184 [-]: LOADK     R31 K29      ; R31 := "Silver"
185 [-]: CONCAT    R30 R30 R31  ; R30 := R30 .. R31
186 [-]: MOVE      R31 R27      ; R31 := R27
187 [-]: LOADK     R32 K30      ; R32 := "Gold"
188 [-]: CONCAT    R31 R31 R32  ; R31 := R31 .. R32
189 [-]: MOVE      R32 R27      ; R32 := R27
190 [-]: LOADK     R33 K31      ; R33 := "Platinum"
191 [-]: CONCAT    R32 R32 R33  ; R32 := R32 .. R33
192 [-]: SETLIST   R28 4 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 4
193 [-]: MOVE      R26 R28      ; R26 := R28
194 [-]: JMP       199          ; PC := 199
195 [-]: NEWTABLE  R28 1 0      ; R28 := {}
196 [-]: MOVE      R29 R26      ; R29 := R26
197 [-]: SETLIST   R28 1 1      ; R28[(1-1)*FPF+i] := R(28+i), 1 <= i <= 1
198 [-]: MOVE      R26 R28      ; R26 := R28
199 [-]: LOADK     R28 1        ; R28 := 1.000000
200 [-]: LEN       R29 R26      ; R29 := # R26
201 [-]: LOADK     R30 1        ; R30 := 1.000000
202 [-]: FORPREP   R28 229      ; R28 -= R30; PC := 229
203 [-]: GETUPVAL  R32 U3       ; R32 := U3
204 [-]: MOVE      R33 R3       ; R33 := R3
205 [-]: GETTABLE  R34 R26 R31  ; R34 := R26[R31]
206 [-]: GETUPVAL  R35 U4       ; R35 := U4
207 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
208 [-]: TEST      R32 0        ; if not R32 then PC := 229
209 [-]: JMP       229          ; PC := 229
210 [-]: GETTABLE  R33 R32 K8   ; R33 := R32[1.000000]
211 [-]: GETTABLE  R34 R32 K32  ; R34 := R32[2.000000]
212 [-]: LOADK     R35 1        ; R35 := 1.000000
213 [-]: FORPREP   R33 228      ; R33 -= R35; PC := 228
214 [-]: GETTABLE  R37 R3 R36   ; R37 := R3[R36]
215 [-]: GETTABLE  R37 R37 K33  ; R37 := R37["count"]
216 [-]: TEST      R37 0        ; if not R37 then PC := 222
217 [-]: JMP       222          ; PC := 222
218 [-]: GETTABLE  R37 R3 R36   ; R37 := R3[R36]
219 [-]: GETTABLE  R37 R37 K33  ; R37 := R37["count"]
220 [-]: ADD       R4 R4 R37    ; R4 := R4 + R37
221 [-]: JMP       223          ; PC := 223
222 [-]: ADD       R4 R4 K8     ; R4 := R4 + 1.000000
223 [-]: GETTABLE  R37 R32 K8   ; R37 := R32[1.000000]
224 [-]: GETTABLE  R38 R32 K32  ; R38 := R32[2.000000]
225 [-]: EQ        0 R37 R38    ; if R37 ~= R38 then PC := 228
226 [-]: JMP       228          ; PC := 228
227 [-]: JMP       229          ; PC := 229
228 [-]: FORLOOP   R33 214      ; R33 += R35; if R33 <= R34 then begin PC := 214; R36 := R33 end
229 [-]: FORLOOP   R28 203      ; R28 += R30; if R28 <= R29 then begin PC := 203; R31 := R28 end
230 [-]: EQ        0 R4 K16     ; if R4 ~= 0.000000 then PC := 264
231 [-]: JMP       264          ; PC := 264
232 [-]: TEST      R7 0         ; if not R7 then PC := 264
233 [-]: JMP       264          ; PC := 264
234 [-]: SELF      R37 R2 K34   ; R38 := R2; R37 := R2[0xef3662ab]
235 [-]: CALL      R37 2 2      ; R37 := R37(R38)
236 [-]: GETGLOBAL R38 K7       ; R38 := 0x7b998233
237 [-]: MOVE      R39 R37      ; R39 := R37
238 [-]: CALL      R38 2 2      ; R38 := R38(R39)
239 [-]: TEST      R38 1        ; if R38 then PC := 264
240 [-]: JMP       264          ; PC := 264
241 [-]: SELF      R38 R37 K2   ; R39 := R37; R38 := R37[0xf2deaf69]
242 [-]: GETGLOBAL R40 K35      ; R40 := gKeyChainItemType
243 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
244 [-]: TEST      R38 0        ; if not R38 then PC := 264
245 [-]: JMP       264          ; PC := 264
246 [-]: SELF      R38 R1 K36   ; R39 := R1; R38 := R1[0xe9768ed0]
247 [-]: CALL      R38 2 2      ; R38 := R38(R39)
248 [-]: LOADK     R39 1        ; R39 := 1.000000
249 [-]: LEN       R40 R38      ; R40 := # R38
250 [-]: LOADK     R41 1        ; R41 := 1.000000
251 [-]: FORPREP   R39 263      ; R39 -= R41; PC := 263
252 [-]: GETGLOBAL R43 K7       ; R43 := 0x7b998233
253 [-]: GETTABLE  R44 R38 R42  ; R44 := R38[R42]
254 [-]: CALL      R43 2 2      ; R43 := R43(R44)
255 [-]: TEST      R43 1        ; if R43 then PC := 263
256 [-]: JMP       263          ; PC := 263
257 [-]: GETTABLE  R43 R38 R42  ; R43 := R38[R42]
258 [-]: GETTABLE  R43 R43 K37  ; R43 := R43["mItemType"]
259 [-]: EQ        0 R43 R37    ; if R43 ~= R37 then PC := 263
260 [-]: JMP       263          ; PC := 263
261 [-]: LOADK     R4 1         ; R4 := 1.000000
262 [-]: JMP       264          ; PC := 264
263 [-]: FORLOOP   R39 252      ; R39 += R41; if R39 <= R40 then begin PC := 252; R42 := R39 end
264 [-]: EQ        0 R4 K16     ; if R4 ~= 0.000000 then PC := 294
265 [-]: JMP       294          ; PC := 294
266 [-]: GETGLOBAL R43 K7       ; R43 := 0x7b998233
267 [-]: GETGLOBAL R44 K14      ; R44 := 0x25d99d89
268 [-]: CALL      R43 2 2      ; R43 := R43(R44)
269 [-]: TEST      R43 1        ; if R43 then PC := 294
270 [-]: JMP       294          ; PC := 294
271 [-]: MOVE      R43 R8       ; R43 := R8
272 [-]: TEST      R7 0         ; if not R7 then PC := 277
273 [-]: JMP       277          ; PC := 277
274 [-]: SELF      R44 R2 K34   ; R45 := R2; R44 := R2[0xef3662ab]
275 [-]: CALL      R44 2 2      ; R44 := R44(R45)
276 [-]: MOVE      R43 R44      ; R43 := R44
277 [-]: GETGLOBAL R44 K7       ; R44 := 0x7b998233
278 [-]: MOVE      R45 R43      ; R45 := R43
279 [-]: CALL      R44 2 2      ; R44 := R44(R45)
280 [-]: TEST      R44 1        ; if R44 then PC := 294
281 [-]: JMP       294          ; PC := 294
282 [-]: SELF      R44 R43 K2   ; R45 := R43; R44 := R43[0xf2deaf69]
283 [-]: GETUPVAL  R46 U7       ; R46 := U7
284 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
285 [-]: TEST      R44 0        ; if not R44 then PC := 294
286 [-]: JMP       294          ; PC := 294
287 [-]: GETGLOBAL R44 K14      ; R44 := 0x25d99d89
288 [-]: SELF      R44 R44 K38  ; R45 := R44; R44 := R44[0x4ae54c32]
289 [-]: MOVE      R46 R43      ; R46 := R43
290 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
291 [-]: TEST      R44 0        ; if not R44 then PC := 294
292 [-]: JMP       294          ; PC := 294
293 [-]: LOADK     R4 1         ; R4 := 1.000000
294 [-]: GETGLOBAL R44 K7       ; R44 := 0x7b998233
295 [-]: MOVE      R45 R8       ; R45 := R8
296 [-]: CALL      R44 2 2      ; R44 := R44(R45)
297 [-]: TEST      R44 1        ; if R44 then PC := 311
298 [-]: JMP       311          ; PC := 311
299 [-]: SELF      R44 R8 K2    ; R45 := R8; R44 := R8[0xf2deaf69]
300 [-]: GETGLOBAL R46 K39      ; R46 := 0x7ed0a956
301 [-]: LOADK     R47 K40      ; R47 := "/Lotus/Types/StoreItems/SlotItems/PvPLoadoutSlotItem"
302 [-]: CALL      R46 2 0      ; R46,... := R46(R47)
303 [-]: CALL      R44 0 2      ; R44 := R44(R45,...)
304 [-]: TEST      R44 0        ; if not R44 then PC := 311
305 [-]: JMP       311          ; PC := 311
306 [-]: GETUPVAL  R44 U8       ; R44 := U8
307 [-]: GETGLOBAL R45 K41      ; R45 := _T
308 [-]: GETTABLE  R45 R45 K42  ; R45 := R45["ShowSyndicate"]
309 [-]: CALL      R44 2 2      ; R44 := R44(R45)
310 [-]: MOVE      R4 R44       ; R4 := R44
311 [-]: RETURN    R4 2         ; return R4
312 [-]: RETURN    R0 1         ; return 


; Function #291:
;
; Name:            
; Defined at line: 5899
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xed4e0128]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x7f5022cf
  4 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0xa5c556b9]
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: LOADK     R4 K3        ; R4 := "_"
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: GETGLOBAL R3 K1        ; R3 := 0x7f5022cf
  9 [-]: GETTABLE  R3 R3 K2     ; R82 := R3[0xa5c556b9]
 10 [-]: MOVE      R4 R1        ; R4 := R1
 11 [-]: LOADK     R5 K4        ; R5 := "x"
 12 [-]: MOVE      R6 R2        ; R6 := R2
 13 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 14 [-]: GETGLOBAL R4 K1        ; R4 := 0x7f5022cf
 15 [-]: GETTABLE  R4 R4 K2     ; R82 := R4[0xa5c556b9]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADK     R6 K5        ; R6 := "%."
 18 [-]: MOVE      R7 R3        ; R7 := R3
 19 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 20 [-]: LOADK     R5 1         ; R5 := 1.000000
 21 [-]: LOADK     R6 1         ; R6 := 1.000000
 22 [-]: TEST      R2 0         ; if not R2 then PC := 46
 23 [-]: JMP       46           ; PC := 46
 24 [-]: TEST      R3 0         ; if not R3 then PC := 46
 25 [-]: JMP       46           ; PC := 46
 26 [-]: TEST      R4 0         ; if not R4 then PC := 46
 27 [-]: JMP       46           ; PC := 46
 28 [-]: LT        0 R3 R4      ; if R3 >= R4 then PC := 46
 29 [-]: JMP       46           ; PC := 46
 30 [-]: LT        0 R2 R3      ; if R2 >= R3 then PC := 46
 31 [-]: JMP       46           ; PC := 46
 32 [-]: GETGLOBAL R7 K1        ; R7 := 0x7f5022cf
 33 [-]: GETTABLE  R7 R7 K6     ; R82 := R7[0x1a94c9cc]
 34 [-]: MOVE      R8 R1        ; R8 := R1
 35 [-]: ADD       R9 R2 K7     ; R9 := R2 + 1.000000
 36 [-]: SUB       R10 R3 K7    ; R10 := R3 - 1.000000
 37 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 38 [-]: MOVE      R5 R7        ; R5 := R7
 39 [-]: GETGLOBAL R7 K1        ; R7 := 0x7f5022cf
 40 [-]: GETTABLE  R7 R7 K6     ; R82 := R7[0x1a94c9cc]
 41 [-]: MOVE      R8 R1        ; R8 := R1
 42 [-]: ADD       R9 R3 K7     ; R9 := R3 + 1.000000
 43 [-]: SUB       R10 R4 K7    ; R10 := R4 - 1.000000
 44 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 45 [-]: MOVE      R6 R7        ; R6 := R7
 46 [-]: MOVE      R7 R5        ; R7 := R5
 47 [-]: MOVE      R8 R6        ; R8 := R6
 48 [-]: RETURN    R7 3         ; return R7,R8
 49 [-]: RETURN    R0 1         ; return 


; Function #292:
;
; Name:            
; Defined at line: 5913
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADBOOL  R2 0 0       ; R2 := false
  2 [-]: TEST      R2 0         ; if not R2 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: LOADBOOL  R2 1 0       ; R2 := true
  5 [-]: RETURN    R2 2         ; return R2
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R0        ; R3 := R0
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADBOOL  R2 0 0       ; R2 := false
 12 [-]: RETURN    R2 2         ; return R2
 13 [-]: LOADBOOL  R2 1 0       ; R2 := true
 14 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0xa64e07df]
 15 [-]: MOVE      R5 R1        ; R5 := R1
 16 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 17 [-]: LOADK     R4 0         ; R4 := 0.000000
 18 [-]: EQ        0 R1 K3      ; if R1 ~= 0.000000 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: SELF      R5 R0 K4     ; R6 := R0; R5 := R0[0x21a3da0c]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: LEN       R4 R5        ; R4 := # R5
 23 [-]: JMP       109          ; PC := 109
 24 [-]: EQ        0 R1 K5      ; if R1 ~= 1.000000 then PC := 38
 25 [-]: JMP       38           ; PC := 38
 26 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0[0x57d88957]
 27 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 28 [-]: LEN       R5 R5        ; R5 := # R5
 29 [-]: SELF      R6 R0 K7     ; R7 := R0; R6 := R0[0x215bf396]
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: LEN       R6 R6        ; R6 := # R6
 32 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 33 [-]: SELF      R6 R0 K8     ; R7 := R0; R6 := R0[0x0bf14f02]
 34 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 35 [-]: LEN       R6 R6        ; R6 := # R6
 36 [-]: ADD       R4 R5 R6     ; R4 := R5 + R6
 37 [-]: JMP       109          ; PC := 109
 38 [-]: EQ        0 R1 K9      ; if R1 ~= 2.000000 then PC := 56
 39 [-]: JMP       56           ; PC := 56
 40 [-]: SELF      R5 R0 K10    ; R6 := R0; R5 := R0[0x2a207127]
 41 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 42 [-]: LEN       R5 R5        ; R5 := # R5
 43 [-]: SELF      R6 R0 K11    ; R7 := R0; R6 := R0[0xa2c6d8b7]
 44 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 45 [-]: LEN       R6 R6        ; R6 := # R6
 46 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 47 [-]: SELF      R6 R0 K12    ; R7 := R0; R6 := R0[0x91a3eddf]
 48 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 49 [-]: LEN       R6 R6        ; R6 := # R6
 50 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 51 [-]: SELF      R6 R0 K13    ; R7 := R0; R6 := R0[0xa855881a]
 52 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 53 [-]: LEN       R6 R6        ; R6 := # R6
 54 [-]: ADD       R4 R5 R6     ; R4 := R5 + R6
 55 [-]: JMP       109          ; PC := 109
 56 [-]: EQ        0 R1 K14     ; if R1 ~= 3.000000 then PC := 62
 57 [-]: JMP       62           ; PC := 62
 58 [-]: SELF      R5 R0 K15    ; R6 := R0; R5 := R0[0x4bb8609a]
 59 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 60 [-]: LEN       R4 R5        ; R4 := # R5
 61 [-]: JMP       109          ; PC := 109
 62 [-]: EQ        0 R1 K16     ; if R1 ~= 4.000000 then PC := 72
 63 [-]: JMP       72           ; PC := 72
 64 [-]: SELF      R5 R0 K17    ; R6 := R0; R5 := R0[0x6f7b67d7]
 65 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 66 [-]: LEN       R5 R5        ; R5 := # R5
 67 [-]: SELF      R6 R0 K18    ; R7 := R0; R6 := R0[0x3218c3b0]
 68 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 69 [-]: LEN       R6 R6        ; R6 := # R6
 70 [-]: ADD       R4 R5 R6     ; R4 := R5 + R6
 71 [-]: JMP       109          ; PC := 109
 72 [-]: EQ        0 R1 K19     ; if R1 ~= 8.000000 then PC := 78
 73 [-]: JMP       78           ; PC := 78
 74 [-]: SELF      R5 R0 K20    ; R6 := R0; R5 := R0[0x99718a3d]
 75 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 76 [-]: LEN       R4 R5        ; R4 := # R5
 77 [-]: JMP       109          ; PC := 109
 78 [-]: EQ        0 R1 K21     ; if R1 ~= 9.000000 then PC := 88
 79 [-]: JMP       88           ; PC := 88
 80 [-]: SELF      R5 R0 K22    ; R6 := R0; R5 := R0[0xbfba693e]
 81 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 82 [-]: LEN       R5 R5        ; R5 := # R5
 83 [-]: SELF      R6 R0 K23    ; R7 := R0; R6 := R0[0xdc039065]
 84 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 85 [-]: LEN       R6 R6        ; R6 := # R6
 86 [-]: ADD       R4 R5 R6     ; R4 := R5 + R6
 87 [-]: JMP       109          ; PC := 109
 88 [-]: EQ        0 R1 K24     ; if R1 ~= 10.000000 then PC := 94
 89 [-]: JMP       94           ; PC := 94
 90 [-]: SELF      R5 R0 K25    ; R6 := R0; R5 := R0[0xfab085e3]
 91 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 92 [-]: LEN       R4 R5        ; R4 := # R5
 93 [-]: JMP       109          ; PC := 109
 94 [-]: EQ        0 R1 K26     ; if R1 ~= 11.000000 then PC := 100
 95 [-]: JMP       100          ; PC := 100
 96 [-]: SELF      R5 R0 K27    ; R6 := R0; R5 := R0[0x02ef4892]
 97 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 98 [-]: LEN       R4 R5        ; R4 := # R5
 99 [-]: JMP       109          ; PC := 109
100 [-]: GETGLOBAL R5 K28       ; R5 := 0x3d106989
101 [-]: LOADK     R6 K29       ; R6 := "Unsupported bin type!"
102 [-]: GETGLOBAL R7 K30       ; R7 := 0x64fb1586
103 [-]: MOVE      R8 R1        ; R8 := R1
104 [-]: CALL      R7 2 2       ; R7 := R7(R8)
105 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
106 [-]: CALL      R5 2 1       ; R5(R6)
107 [-]: LOADBOOL  R5 0 0       ; R5 := false
108 [-]: RETURN    R5 2         ; return R5
109 [-]: SUB       R5 R3 R4     ; R5 := R3 - R4
110 [-]: LT        0 R5 K3      ; if R5 >= 0.000000 then PC := 113
111 [-]: JMP       113          ; PC := 113
112 [-]: LOADBOOL  R2 0 0       ; R2 := false
113 [-]: RETURN    R2 2         ; return R2
114 [-]: RETURN    R0 1         ; return 


; Function #293:
;
; Name:            
; Defined at line: 5956
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0xe27b35bb]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0x06d055f9]
  6 [-]: GETGLOBAL R3 K0        ; R3 := 0x34291f5c
  7 [-]: GETTABLE  R3 R3 K4     ; R82 := R3[0x056bfe8b]
  8 [-]: CALL      R3 1 2       ; R3 := R3()
  9 [-]: LOADK     R4 0         ; R4 := 0.000000
 10 [-]: LOADK     R5 1         ; R5 := 1.000000
 11 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 12 [-]: SETTABLE  R1 K2 R2     ; R1["dialogType"] := R2
 13 [-]: SETTABLE  R1 K5 K6     ; R1["locString"] := "/Lotus/Language/Menu/Slot_InvalidBinError"
 14 [-]: SETTABLE  R1 K7 K8     ; R1["secondString"] := "/Lotus/Language/Menu/ContactSupport"
 15 [-]: EQ        1 R0 K9      ; if R0 == nil then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: SELF      R2 R1 K10    ; R3 := R1; R2 := R1[0xe6ccc5b9]
 18 [-]: MOVE      R4 R0        ; R4 := R0
 19 [-]: CALL      R2 3 1       ; R2(R3,R4)
 20 [-]: GETGLOBAL R2 K11       ; R2 := 0x83f4e77c
 21 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0x7d63f19c]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x69e5aa4f]
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: CALL      R2 3 1       ; R2(R3,R4)
 26 [-]: RETURN    R0 1         ; return 


; Function #294:
;
; Name:            
; Defined at line: 5968
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        1 R1 K2      ; if R1 == 4.000000 then PC := 25
  5 [-]: JMP       25           ; PC := 25
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0x34291f5c
  7 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0x056bfe8b]
  8 [-]: CALL      R1 1 2       ; R1 := R1()
  9 [-]: TEST      R1 1         ; if R1 then PC := 25
 10 [-]: JMP       25           ; PC := 25
 11 [-]: GETGLOBAL R1 K1        ; R1 := 0x34291f5c
 12 [-]: GETTABLE  R1 R1 K4     ; R82 := R1[0xa7a2e381]
 13 [-]: CALL      R1 1 2       ; R1 := R1()
 14 [-]: TEST      R1 0         ; if not R1 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETTABLE  R1 R1 K5     ; R82 := R1[0x2c2fdf05]
 18 [-]: LOADK     R2 K6        ; R2 := "https://kf.qq.com/bills/200901selfsam4979ae6.html"
 19 [-]: CALL      R1 2 1       ; R1(R2)
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: GETTABLE  R1 R1 K5     ; R82 := R1[0x2c2fdf05]
 23 [-]: LOADK     R2 K7        ; R2 := "https://digitalextremes.zendesk.com"
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: RETURN    R0 1         ; return 


; Function #295:
;
; Name:            
; Defined at line: 5978
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 19
  3 [-]: JMP       19           ; PC := 19
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
  6 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 19
  7 [-]: JMP       19           ; PC := 19
  8 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["sec"]
 11 [-]: EQ        1 R1 K4      ; if R1 == "" then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R1 K5        ; R1 := 0x34291f5c
 14 [-]: GETTABLE  R1 R1 K6     ; R82 := R1[0x397b920f]
 15 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Sale"]
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mProductExpiryOverride"]
 17 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
 18 [-]: RETURN    R1 0         ; return R1,...
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0x34291f5c
 20 [-]: GETTABLE  R1 R1 K6     ; R82 := R1[0x397b920f]
 21 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["StoreItem"]
 22 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x5630a625]
 23 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 24 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
 25 [-]: RETURN    R1 0         ; return R1,...
 26 [-]: RETURN    R0 1         ; return 


; Function #296:
;
; Name:            
; Defined at line: 5986
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 23
  3 [-]: JMP       23           ; PC := 23
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
  6 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 23
  7 [-]: JMP       23           ; PC := 23
  8 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Sale"]
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mProductExpiryOverride"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["sec"]
 11 [-]: EQ        1 R1 K4      ; if R1 == "" then PC := 23
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETGLOBAL R1 K5        ; R1 := 0x34291f5c
 14 [-]: GETTABLE  R1 R1 K6     ; R82 := R1[0x397b920f]
 15 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Sale"]
 16 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mProductExpiryOverride"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: LT        1 R1 K7      ; if R1 < 0.000000 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 21
 21 [-]: LOADBOOL  R1 1 0       ; R1 := true
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["StoreItem"]
 24 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x5630a625]
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: EQ        1 R1 K7      ; if R1 == 0.000000 then PC := 38
 27 [-]: JMP       38           ; PC := 38
 28 [-]: GETGLOBAL R1 K5        ; R1 := 0x34291f5c
 29 [-]: GETTABLE  R1 R1 K6     ; R82 := R1[0x397b920f]
 30 [-]: GETTABLE  R2 R0 K8     ; R2 := R0["StoreItem"]
 31 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x5630a625]
 32 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 33 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 34 [-]: LE        0 R1 K7      ; if R1 > 0.000000 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: LOADBOOL  R1 1 0       ; R1 := true
 37 [-]: RETURN    R1 2         ; return R1
 38 [-]: LOADBOOL  R1 0 0       ; R1 := false
 39 [-]: RETURN    R1 2         ; return R1
 40 [-]: RETURN    R0 1         ; return 


; Function #297:
;
; Name:            
; Defined at line: 6027
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: LOADK     R3 0         ; R3 := 0.000000
  2 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: TEST      R4 0         ; if not R4 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: LOADBOOL  R1 0 0       ; R1 := false
  8 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  9 [-]: MOVE      R5 R2        ; R5 := R2
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: TEST      R4 0         ; if not R4 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: LOADBOOL  R2 0 0       ; R2 := false
 14 [-]: GETGLOBAL R4 K2        ; R4 := 0x0032441c
 15 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["UIMaterial_FocusLens"]
 16 [-]: TEST      R1 0         ; if not R1 then PC := 27
 17 [-]: JMP       27           ; PC := 27
 18 [-]: GETUPVAL  R5 U0        ; R5 := U0
 19 [-]: GETTABLE  R5 R5 K4     ; R82 := R5[0x06d055f9]
 20 [-]: MOVE      R6 R2        ; R6 := R2
 21 [-]: GETGLOBAL R7 K2        ; R7 := 0x0032441c
 22 [-]: GETTABLE  R7 R7 K5     ; R7 := R7["UIMaterial_FocusLensStoreDepth"]
 23 [-]: GETGLOBAL R8 K2        ; R8 := 0x0032441c
 24 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["UIMaterial_FocusLensStore"]
 25 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 26 [-]: MOVE      R4 R5        ; R4 := R5
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: GETGLOBAL R6 K7        ; R6 := 0x6728fd22
 29 [-]: MOVE      R7 R5        ; R7 := R5
 30 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 31 [-]: TEST      R6 0         ; if not R6 then PC := 37
 32 [-]: JMP       37           ; PC := 37
 33 [-]: GETGLOBAL R6 K8        ; R6 := 0xb009bbc6
 34 [-]: MOVE      R7 R5        ; R7 := R5
 35 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 36 [-]: MOVE      R5 R6        ; R5 := R6
 37 [-]: LOADK     R6 K9        ; R6 := ""
 38 [-]: LOADK     R7 1         ; R7 := 1.000000
 39 [-]: GETGLOBAL R8 K1        ; R8 := 0x7b998233
 40 [-]: MOVE      R9 R5        ; R9 := R5
 41 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 42 [-]: TEST      R8 1         ; if R8 then PC := 77
 43 [-]: JMP       77           ; PC := 77
 44 [-]: SELF      R8 R5 K10    ; R9 := R5; R8 := R5[0x3310fecd]
 45 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 46 [-]: LOADK     R9 1         ; R9 := 1.000000
 47 [-]: GETGLOBAL R10 K11      ; R10 := 0x5bced4c4
 48 [-]: GETTABLE  R10 R10 K12  ; R82 := R10[0xac1b386a]
 49 [-]: GETUPVAL  R11 U1       ; R11 := U1
 50 [-]: LEN       R11 R11      ; R11 := # R11
 51 [-]: LEN       R12 R8       ; R12 := # R8
 52 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 53 [-]: LOADK     R11 1        ; R11 := 1.000000
 54 [-]: FORPREP   R9 60        ; R9 -= R11; PC := 60
 55 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
 56 [-]: LT        0 K13 R13    ; if 0.000000 >= R13 then PC := 60
 57 [-]: JMP       60           ; PC := 60
 58 [-]: SUB       R3 R12 K14   ; R3 := R12 - 1.000000
 59 [-]: JMP       61           ; PC := 61
 60 [-]: FORLOOP   R9 55        ; R9 += R11; if R9 <= R10 then begin PC := 55; R12 := R9 end
 61 [-]: SELF      R13 R5 K15   ; R14 := R5; R13 := R5[0x59a2ddb4]
 62 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 63 [-]: EQ        0 R13 K16    ; if R13 ~= 0.350000 then PC := 68
 64 [-]: JMP       68           ; PC := 68
 65 [-]: LOADK     R7 2         ; R7 := 2.000000
 66 [-]: LOADK     R6 K17       ; R6 := "_GREATER"
 67 [-]: JMP       77           ; PC := 77
 68 [-]: EQ        0 R13 K18    ; if R13 ~= 0.450000 then PC := 73
 69 [-]: JMP       73           ; PC := 73
 70 [-]: LOADK     R7 3         ; R7 := 3.000000
 71 [-]: LOADK     R6 K19       ; R6 := "_EIDOLON"
 72 [-]: JMP       77           ; PC := 77
 73 [-]: EQ        0 R13 K20    ; if R13 ~= 0.650000 then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: LOADK     R7 4         ; R7 := 4.000000
 76 [-]: LOADK     R6 K21       ; R6 := "_LUA"
 77 [-]: GETUPVAL  R14 U1       ; R14 := U1
 78 [-]: GETTABLE  R14 R14 R3   ; R14 := R14[R3]
 79 [-]: LOADK     R15 K22      ; R15 := "<"
 80 [-]: GETTABLE  R16 R14 K23  ; R16 := R14["Lens"]
 81 [-]: MOVE      R17 R6       ; R17 := R6
 82 [-]: LOADK     R18 K24      ; R18 := ">"
 83 [-]: CONCAT    R6 R15 R18   ; R6 := R15 .. R16 .. R17 .. R18
 84 [-]: NEWTABLE  R15 0 5      ; R15 := {}
 85 [-]: GETTABLE  R16 R14 K26  ; R16 := R14["Polarity"]
 86 [-]: SETTABLE  R15 K25 R16  ; R15["PolarityTag"] := R16
 87 [-]: SETTABLE  R15 K27 R6   ; R15["LensTag"] := R6
 88 [-]: SETTABLE  R15 K28 R7   ; R15["LensTier"] := R7
 89 [-]: GETTABLE  R16 R4 R3    ; R16 := R4[R3]
 90 [-]: SETTABLE  R15 K29 R16  ; R15["Material"] := R16
 91 [-]: SETTABLE  R15 K30 R3   ; R15["PolarityType"] := R3
 92 [-]: RETURN    R15 2        ; return R15
 93 [-]: RETURN    R0 1         ; return 


; Function #298:
;
; Name:            
; Defined at line: 6080
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: RETURN    R1 2         ; return R1
  4 [-]: RETURN    R0 1         ; return 


; Function #299:
;
; Name:            
; Defined at line: 6084
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0x89326c93
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K1        ; R2 := 0x89326c93
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xfb64e76c]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: TEST      R3 0         ; if not R3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETUPVAL  R3 U0        ; R3 := U0
 17 [-]: GETTABLE  R3 R3 K3     ; R82 := R3[0x06d055f9]
 18 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 19 [-]: MOVE      R5 R1        ; R5 := R1
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: SELF      R5 R2 K4     ; R6 := R2; R5 := R2[0x5578d98b]
 22 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 23 [-]: MOVE      R6 R1        ; R6 := R1
 24 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 25 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 26 [-]: MOVE      R5 R3        ; R5 := R3
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: TEST      R4 0         ; if not R4 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: GETGLOBAL R4 K5        ; R4 := 0x0469f296
 32 [-]: LOADK     R5 K6        ; R5 := "GAME_R1_EYE1"
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: GETGLOBAL R5 K5        ; R5 := 0x0469f296
 35 [-]: LOADK     R6 K7        ; R6 := "GAME_L1_EYE1"
 36 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 37 [-]: GETGLOBAL R6 K5        ; R6 := 0x0469f296
 38 [-]: LOADK     R7 K8        ; R7 := "GAME_C1_HEAD1"
 39 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 40 [-]: SELF      R7 R3 K9     ; R8 := R3; R7 := R3[0xa390a429]
 41 [-]: MOVE      R9 R4        ; R9 := R4
 42 [-]: LOADBOOL  R10 0 0      ; R10 := false
 43 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 44 [-]: SELF      R7 R3 K9     ; R8 := R3; R7 := R3[0xa390a429]
 45 [-]: MOVE      R9 R5        ; R9 := R5
 46 [-]: LOADBOOL  R10 0 0      ; R10 := false
 47 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 48 [-]: GETGLOBAL R7 K10       ; R7 := _T
 49 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["OperatorEyeTrack"]
 50 [-]: EQ        1 R7 K12     ; if R7 == nil then PC := 82
 51 [-]: JMP       82           ; PC := 82
 52 [-]: GETGLOBAL R8 K14       ; R8 := 0x5bced4c4
 53 [-]: GETTABLE  R8 R8 K15    ; R82 := R8[0xb62ecfe0]
 54 [-]: LOADK     R9 0         ; R9 := 0.000000
 55 [-]: GETTABLE  R10 R7 K13   ; R10 := R7["LerpAmount"]
 56 [-]: GETGLOBAL R11 K16      ; R11 := 0x67652851
 57 [-]: CALL      R11 1 2      ; R11 := R11()
 58 [-]: MUL       R11 R11 K17  ; R11 := R11 * 3.000000
 59 [-]: SUB       R10 R10 R11  ; R10 := R10 - R11
 60 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 61 [-]: SETTABLE  R7 K13 R8    ; R7["LerpAmount"] := R8
 62 [-]: TEST      R0 0         ; if not R0 then PC := 65
 63 [-]: JMP       65           ; PC := 65
 64 [-]: SETTABLE  R7 K13 K18   ; R7["LerpAmount"] := 0.000000
 65 [-]: GETGLOBAL R8 K19       ; R8 := 0x5e223e7d
 66 [-]: GETTABLE  R9 R7 K20    ; R9 := R7["InitialRot"]
 67 [-]: GETTABLE  R10 R7 K21   ; R10 := R7["FinalRot"]
 68 [-]: GETTABLE  R11 R7 K13   ; R11 := R7["LerpAmount"]
 69 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 70 [-]: SELF      R9 R3 K22    ; R10 := R3; R9 := R3[0xb63fc1d8]
 71 [-]: MOVE      R11 R6       ; R11 := R6
 72 [-]: MOVE      R12 R8       ; R12 := R8
 73 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 74 [-]: GETTABLE  R9 R7 K13    ; R9 := R7["LerpAmount"]
 75 [-]: EQ        0 R9 K18     ; if R9 ~= 0.000000 then PC := 86
 76 [-]: JMP       86           ; PC := 86
 77 [-]: SELF      R9 R3 K9     ; R10 := R3; R9 := R3[0xa390a429]
 78 [-]: MOVE      R11 R6       ; R11 := R6
 79 [-]: LOADBOOL  R12 0 0      ; R12 := false
 80 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 81 [-]: JMP       86           ; PC := 86
 82 [-]: SELF      R9 R3 K9     ; R10 := R3; R9 := R3[0xa390a429]
 83 [-]: MOVE      R11 R6       ; R11 := R6
 84 [-]: LOADBOOL  R12 0 0      ; R12 := false
 85 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 86 [-]: RETURN    R0 1         ; return 


; Function #300:
;
; Name:            
; Defined at line: 6122
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETGLOBAL R4 K1        ; R4 := 0x89326c93
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R3 K1        ; R3 := 0x89326c93
  8 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0xfb64e76c]
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 11 [-]: MOVE      R5 R3        ; R5 := R3
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 0         ; if not R4 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: GETTABLE  R4 R4 K3     ; R82 := R4[0x06d055f9]
 18 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 19 [-]: MOVE      R6 R2        ; R6 := R2
 20 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 21 [-]: SELF      R6 R3 K4     ; R7 := R3; R6 := R3[0x5578d98b]
 22 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 23 [-]: MOVE      R7 R2        ; R7 := R2
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 26 [-]: MOVE      R6 R4        ; R6 := R4
 27 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 28 [-]: TEST      R5 0         ; if not R5 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: GETGLOBAL R5 K5        ; R5 := 0x0469f296
 32 [-]: LOADK     R6 K6        ; R6 := "GAME_R1_EYE1"
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: GETGLOBAL R6 K5        ; R6 := 0x0469f296
 35 [-]: LOADK     R7 K6        ; R7 := "GAME_R1_EYE1"
 36 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 37 [-]: GETGLOBAL R7 K5        ; R7 := 0x0469f296
 38 [-]: LOADK     R8 K7        ; R8 := "GAME_L1_EYE1"
 39 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 40 [-]: GETGLOBAL R8 K5        ; R8 := 0x0469f296
 41 [-]: LOADK     R9 K8        ; R9 := "GAME_C1_HEAD1"
 42 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 43 [-]: GETGLOBAL R9 K9        ; R9 := _T
 44 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["OperatorEyeTrack"]
 45 [-]: EQ        0 R9 K11     ; if R9 ~= nil then PC := 95
 46 [-]: JMP       95           ; PC := 95
 47 [-]: GETGLOBAL R9 K9        ; R9 := _T
 48 [-]: NEWTABLE  R10 0 5      ; R10 := {}
 49 [-]: GETGLOBAL R11 K13      ; R11 := 0x78ca68a2
 50 [-]: LOADK     R12 0        ; R12 := 0.000000
 51 [-]: LOADK     R13 K14      ; R13 := 0.150000
 52 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 53 [-]: SETTABLE  R10 K12 R11  ; R10["X"] := R11
 54 [-]: GETGLOBAL R11 K13      ; R11 := 0x78ca68a2
 55 [-]: LOADK     R12 0        ; R12 := 0.000000
 56 [-]: LOADK     R13 K14      ; R13 := 0.150000
 57 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 58 [-]: SETTABLE  R10 K15 R11  ; R10["Y"] := R11
 59 [-]: SELF      R11 R4 K17   ; R12 := R4; R11 := R4[0xea0832ea]
 60 [-]: MOVE      R13 R5       ; R13 := R5
 61 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 62 [-]: SETTABLE  R10 K16 R11  ; R10["InitialRot"] := R11
 63 [-]: GETGLOBAL R11 K19      ; R11 := 0x00046924
 64 [-]: CALL      R11 1 2      ; R11 := R11()
 65 [-]: SETTABLE  R10 K18 R11  ; R10["FinalRot"] := R11
 66 [-]: SETTABLE  R10 K20 K21  ; R10["LerpAmount"] := 0.000000
 67 [-]: SETTABLE  R9 K10 R10   ; R9["OperatorEyeTrack"] := R10
 68 [-]: GETGLOBAL R9 K9        ; R9 := _T
 69 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["OperatorEyeTrack"]
 70 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["InitialRot"]
 71 [-]: GETGLOBAL R10 K9       ; R10 := _T
 72 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["OperatorEyeTrack"]
 73 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["InitialRot"]
 74 [-]: GETTABLE  R10 R10 K22  ; R10 := R10["pitch"]
 75 [-]: SUB       R10 R10 K23  ; R10 := R10 - 12.000000
 76 [-]: SETTABLE  R9 K22 R10   ; R9["pitch"] := R10
 77 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 78 [-]: GETGLOBAL R10 K9       ; R10 := _T
 79 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["defaultOperatorRot"]
 80 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 81 [-]: TEST      R9 1         ; if R9 then PC := 95
 82 [-]: JMP       95           ; PC := 95
 83 [-]: GETGLOBAL R9 K9        ; R9 := _T
 84 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["OperatorEyeTrack"]
 85 [-]: GETTABLE  R9 R9 K16    ; R9 := R9["InitialRot"]
 86 [-]: GETGLOBAL R10 K9       ; R10 := _T
 87 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["OperatorEyeTrack"]
 88 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["InitialRot"]
 89 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["heading"]
 90 [-]: GETGLOBAL R11 K9       ; R11 := _T
 91 [-]: GETTABLE  R11 R11 K24  ; R11 := R11["defaultOperatorRot"]
 92 [-]: GETTABLE  R11 R11 K25  ; R11 := R11["heading"]
 93 [-]: SUB       R10 R10 R11  ; R10 := R10 - R11
 94 [-]: SETTABLE  R9 K25 R10   ; R9["heading"] := R10
 95 [-]: GETGLOBAL R9 K1        ; R9 := 0x89326c93
 96 [-]: SELF      R9 R9 K26    ; R10 := R9; R9 := R9[0xb4364067]
 97 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 98 [-]: SELF      R10 R0 K27   ; R11 := R0; R10 := R0[0x906faf80]
 99 [-]: CALL      R10 2 2      ; R10 := R10(R11)
100 [-]: EQ        1 R1 K11     ; if R1 == nil then PC := 103
101 [-]: JMP       103          ; PC := 103
102 [-]: GETTABLE  R10 R1 K28   ; R10 := R1["x"]
103 [-]: SELF      R11 R0 K29   ; R12 := R0; R11 := R0[0x916fb113]
104 [-]: CALL      R11 2 2      ; R11 := R11(R12)
105 [-]: EQ        1 R1 K11     ; if R1 == nil then PC := 108
106 [-]: JMP       108          ; PC := 108
107 [-]: GETTABLE  R11 R1 K30   ; R11 := R1["y"]
108 [-]: SELF      R12 R0 K31   ; R13 := R0; R12 := R0[0x6b837788]
109 [-]: CALL      R12 2 2      ; R12 := R12(R13)
110 [-]: DIV       R12 R10 R12  ; R12 := R10 / R12
111 [-]: MUL       R12 R12 K32  ; R12 := R12 * 2.000000
112 [-]: SUB       R12 R12 K33  ; R12 := R12 - 1.000000
113 [-]: SELF      R13 R0 K34   ; R14 := R0; R13 := R0[0xaf9fda9f]
114 [-]: CALL      R13 2 2      ; R13 := R13(R14)
115 [-]: DIV       R13 R11 R13  ; R13 := R11 / R13
116 [-]: MUL       R13 R13 K32  ; R13 := R13 * 2.000000
117 [-]: SUB       R13 R13 K33  ; R13 := R13 - 1.000000
118 [-]: GETGLOBAL R14 K35      ; R14 := 0xf7f90318
119 [-]: GETGLOBAL R15 K36      ; R15 := 0x55156ff7
120 [-]: CALL      R15 1 2      ; R15 := R15()
121 [-]: MUL       R15 R15 K37  ; R15 := R15 * 0.100000
122 [-]: CALL      R14 2 2      ; R14 := R14(R15)
123 [-]: MUL       R14 R14 K37  ; R14 := R14 * 0.100000
124 [-]: ADD       R12 R12 R14  ; R12 := R12 + R14
125 [-]: GETGLOBAL R14 K35      ; R14 := 0xf7f90318
126 [-]: GETGLOBAL R15 K36      ; R15 := 0x55156ff7
127 [-]: CALL      R15 1 2      ; R15 := R15()
128 [-]: MUL       R15 R15 K37  ; R15 := R15 * 0.100000
129 [-]: ADD       R15 K38 R15  ; R15 := 7.000000 + R15
130 [-]: CALL      R14 2 2      ; R14 := R14(R15)
131 [-]: MUL       R14 R14 K37  ; R14 := R14 * 0.100000
132 [-]: ADD       R13 R13 R14  ; R13 := R13 + R14
133 [-]: GETGLOBAL R14 K9       ; R14 := _T
134 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["OperatorEyeTrack"]
135 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["X"]
136 [-]: SELF      R14 R14 K39  ; R15 := R14; R14 := R14[0x188e2bee]
137 [-]: MOVE      R16 R12      ; R16 := R12
138 [-]: CALL      R14 3 1      ; R14(R15,R16)
139 [-]: GETGLOBAL R14 K9       ; R14 := _T
140 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["OperatorEyeTrack"]
141 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["Y"]
142 [-]: SELF      R14 R14 K39  ; R15 := R14; R14 := R14[0x188e2bee]
143 [-]: MOVE      R16 R13      ; R16 := R13
144 [-]: CALL      R14 3 1      ; R14(R15,R16)
145 [-]: GETGLOBAL R14 K9       ; R14 := _T
146 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["OperatorEyeTrack"]
147 [-]: GETTABLE  R14 R14 K12  ; R14 := R14["X"]
148 [-]: SELF      R14 R14 K40  ; R15 := R14; R14 := R14[0xfaa69527]
149 [-]: GETGLOBAL R16 K41      ; R16 := 0x67652851
150 [-]: CALL      R16 1 0      ; R16,... := R16()
151 [-]: CALL      R14 0 1      ; R14(R15,...)
152 [-]: GETGLOBAL R14 K9       ; R14 := _T
153 [-]: GETTABLE  R14 R14 K10  ; R14 := R14["OperatorEyeTrack"]
154 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["Y"]
155 [-]: SELF      R14 R14 K40  ; R15 := R14; R14 := R14[0xfaa69527]
156 [-]: GETGLOBAL R16 K41      ; R16 := 0x67652851
157 [-]: CALL      R16 1 0      ; R16,... := R16()
158 [-]: CALL      R14 0 1      ; R14(R15,...)
159 [-]: GETGLOBAL R14 K42      ; R14 := 0xa421af95
160 [-]: GETGLOBAL R15 K9       ; R15 := _T
161 [-]: GETTABLE  R15 R15 K10  ; R15 := R15["OperatorEyeTrack"]
162 [-]: GETTABLE  R15 R15 K12  ; R15 := R15["X"]
163 [-]: SELF      R15 R15 K43  ; R16 := R15; R15 := R15[0x54ab95f9]
164 [-]: CALL      R15 2 2      ; R15 := R15(R16)
165 [-]: MUL       R15 R15 K44  ; R15 := R15 * 0.300000
166 [-]: GETGLOBAL R16 K9       ; R16 := _T
167 [-]: GETTABLE  R16 R16 K10  ; R16 := R16["OperatorEyeTrack"]
168 [-]: GETTABLE  R16 R16 K15  ; R16 := R16["Y"]
169 [-]: SELF      R16 R16 K43  ; R17 := R16; R16 := R16[0x54ab95f9]
170 [-]: CALL      R16 2 2      ; R16 := R16(R17)
171 [-]: MUL       R16 R16 K37  ; R16 := R16 * 0.100000
172 [-]: ADD       R16 K45 R16  ; R16 := 0.025000 + R16
173 [-]: LOADK     R17 0        ; R17 := 0.000000
174 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
175 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
176 [-]: GETGLOBAL R16 K9       ; R16 := _T
177 [-]: GETTABLE  R16 R16 K24  ; R16 := R16["defaultOperatorRot"]
178 [-]: CALL      R15 2 2      ; R15 := R15(R16)
179 [-]: TEST      R15 1        ; if R15 then PC := 187
180 [-]: JMP       187          ; PC := 187
181 [-]: GETGLOBAL R15 K46      ; R15 := 0x492c7f2a
182 [-]: MOVE      R16 R14      ; R16 := R14
183 [-]: GETGLOBAL R17 K9       ; R17 := _T
184 [-]: GETTABLE  R17 R17 K24  ; R17 := R17["defaultOperatorRot"]
185 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
186 [-]: MOVE      R14 R15      ; R14 := R15
187 [-]: SELF      R15 R9 K47   ; R16 := R9; R15 := R9[0xd1586535]
188 [-]: CALL      R15 2 2      ; R15 := R15(R16)
189 [-]: SUB       R15 R15 R14  ; R15 := R15 - R14
190 [-]: SELF      R16 R4 K48   ; R17 := R4; R16 := R4[0x003c792f]
191 [-]: MOVE      R18 R5       ; R18 := R5
192 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
193 [-]: GETGLOBAL R17 K49      ; R17 := 0x20b7f774
194 [-]: MOVE      R18 R16      ; R18 := R16
195 [-]: MOVE      R19 R15      ; R19 := R15
196 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
197 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
198 [-]: GETGLOBAL R19 K9       ; R19 := _T
199 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["defaultOperatorRot"]
200 [-]: CALL      R18 2 2      ; R18 := R18(R19)
201 [-]: TEST      R18 1        ; if R18 then PC := 209
202 [-]: JMP       209          ; PC := 209
203 [-]: GETTABLE  R18 R17 K25  ; R18 := R17["heading"]
204 [-]: GETGLOBAL R19 K9       ; R19 := _T
205 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["defaultOperatorRot"]
206 [-]: GETTABLE  R19 R19 K25  ; R19 := R19["heading"]
207 [-]: SUB       R18 R18 R19  ; R18 := R18 - R19
208 [-]: SETTABLE  R17 K25 R18  ; R17["heading"] := R18
209 [-]: GETGLOBAL R18 K49      ; R18 := 0x20b7f774
210 [-]: MOVE      R19 R16      ; R19 := R16
211 [-]: MOVE      R20 R15      ; R20 := R15
212 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
213 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
214 [-]: GETGLOBAL R20 K9       ; R20 := _T
215 [-]: GETTABLE  R20 R20 K24  ; R20 := R20["defaultOperatorRot"]
216 [-]: CALL      R19 2 2      ; R19 := R19(R20)
217 [-]: TEST      R19 1        ; if R19 then PC := 225
218 [-]: JMP       225          ; PC := 225
219 [-]: GETTABLE  R19 R18 K25  ; R19 := R18["heading"]
220 [-]: GETGLOBAL R20 K9       ; R20 := _T
221 [-]: GETTABLE  R20 R20 K24  ; R20 := R20["defaultOperatorRot"]
222 [-]: GETTABLE  R20 R20 K25  ; R20 := R20["heading"]
223 [-]: SUB       R19 R19 R20  ; R19 := R19 - R20
224 [-]: SETTABLE  R18 K25 R19  ; R18["heading"] := R19
225 [-]: GETGLOBAL R19 K50      ; R19 := 0x42dcc9f5
226 [-]: GETTABLE  R20 R18 K25  ; R20 := R18["heading"]
227 [-]: LOADK     R21 -10      ; R21 := -10.000000
228 [-]: LOADK     R22 10       ; R22 := 10.000000
229 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
230 [-]: SETTABLE  R18 K25 R19  ; R18["heading"] := R19
231 [-]: SELF      R19 R4 K51   ; R20 := R4; R19 := R4[0x9437c71b]
232 [-]: MOVE      R21 R6       ; R21 := R6
233 [-]: MOVE      R22 R18      ; R22 := R18
234 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
235 [-]: SELF      R19 R4 K51   ; R20 := R4; R19 := R4[0x9437c71b]
236 [-]: MOVE      R21 R7       ; R21 := R7
237 [-]: MOVE      R22 R18      ; R22 := R18
238 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
239 [-]: SELF      R19 R4 K52   ; R20 := R4; R19 := R4[0xa390a429]
240 [-]: MOVE      R21 R6       ; R21 := R6
241 [-]: LOADBOOL  R22 1 0      ; R22 := true
242 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
243 [-]: SELF      R19 R4 K52   ; R20 := R4; R19 := R4[0xa390a429]
244 [-]: MOVE      R21 R7       ; R21 := R7
245 [-]: LOADBOOL  R22 1 0      ; R22 := true
246 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
247 [-]: SELF      R19 R4 K52   ; R20 := R4; R19 := R4[0xa390a429]
248 [-]: MOVE      R21 R8       ; R21 := R8
249 [-]: LOADBOOL  R22 1 0      ; R22 := true
250 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
251 [-]: GETTABLE  R19 R17 K22  ; R19 := R17["pitch"]
252 [-]: SUB       R19 R19 K53  ; R19 := R19 - 15.000000
253 [-]: SETTABLE  R17 K22 R19  ; R17["pitch"] := R19
254 [-]: GETGLOBAL R19 K9       ; R19 := _T
255 [-]: GETTABLE  R19 R19 K10  ; R19 := R19["OperatorEyeTrack"]
256 [-]: GETGLOBAL R20 K54      ; R20 := 0x5bced4c4
257 [-]: GETTABLE  R20 R20 K55  ; R82 := R20[0xac1b386a]
258 [-]: LOADK     R21 1        ; R21 := 1.000000
259 [-]: GETGLOBAL R22 K9       ; R22 := _T
260 [-]: GETTABLE  R22 R22 K10  ; R22 := R22["OperatorEyeTrack"]
261 [-]: GETTABLE  R22 R22 K20  ; R22 := R22["LerpAmount"]
262 [-]: GETGLOBAL R23 K41      ; R23 := 0x67652851
263 [-]: CALL      R23 1 2      ; R23 := R23()
264 [-]: ADD       R22 R22 R23  ; R22 := R22 + R23
265 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
266 [-]: SETTABLE  R19 K20 R20  ; R19["LerpAmount"] := R20
267 [-]: GETGLOBAL R19 K56      ; R19 := 0x5e223e7d
268 [-]: GETGLOBAL R20 K9       ; R20 := _T
269 [-]: GETTABLE  R20 R20 K10  ; R20 := R20["OperatorEyeTrack"]
270 [-]: GETTABLE  R20 R20 K16  ; R20 := R20["InitialRot"]
271 [-]: MOVE      R21 R17      ; R21 := R17
272 [-]: GETGLOBAL R22 K9       ; R22 := _T
273 [-]: GETTABLE  R22 R22 K10  ; R22 := R22["OperatorEyeTrack"]
274 [-]: GETTABLE  R22 R22 K20  ; R22 := R22["LerpAmount"]
275 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
276 [-]: GETGLOBAL R20 K9       ; R20 := _T
277 [-]: GETTABLE  R20 R20 K10  ; R20 := R20["OperatorEyeTrack"]
278 [-]: SETTABLE  R20 K18 R19  ; R20["FinalRot"] := R19
279 [-]: SELF      R20 R4 K57   ; R21 := R4; R20 := R4[0xb63fc1d8]
280 [-]: MOVE      R22 R8       ; R22 := R8
281 [-]: MOVE      R23 R19      ; R23 := R19
282 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
283 [-]: GETGLOBAL R20 K0       ; R20 := 0x7b998233
284 [-]: GETGLOBAL R21 K9       ; R21 := _T
285 [-]: GETTABLE  R21 R21 K58  ; R21 := R21["TennoSpeaking"]
286 [-]: CALL      R20 2 2      ; R20 := R20(R21)
287 [-]: TEST      R20 1        ; if R20 then PC := 293
288 [-]: JMP       293          ; PC := 293
289 [-]: SELF      R20 R4 K59   ; R21 := R4; R20 := R4[0x50b8a050]
290 [-]: GETGLOBAL R22 K9       ; R22 := _T
291 [-]: GETTABLE  R22 R22 K58  ; R22 := R22["TennoSpeaking"]
292 [-]: CALL      R20 3 1      ; R20(R21,R22)
293 [-]: RETURN    R0 1         ; return 


; Function #301:
;
; Name:            
; Defined at line: 6211
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xed4e0128]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x7f5022cf
  4 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0xa5c556b9]
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: LOADK     R4 K3        ; R4 := "Deluxe"
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 24
  9 [-]: JMP       24           ; PC := 24
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0x7f5022cf
 11 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0xa5c556b9]
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: LOADK     R4 K5        ; R4 := "ExcaliburProtoSuit"
 14 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 15 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 24
 16 [-]: JMP       24           ; PC := 24
 17 [-]: GETGLOBAL R2 K1        ; R2 := 0x7f5022cf
 18 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0xa5c556b9]
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: LOADK     R4 K6        ; R4 := "NyxNemesisSuit"
 21 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 22 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 31
 23 [-]: JMP       31           ; PC := 31
 24 [-]: GETGLOBAL R2 K1        ; R2 := 0x7f5022cf
 25 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0xa5c556b9]
 26 [-]: MOVE      R3 R1        ; R3 := R1
 27 [-]: LOADK     R4 K7        ; R4 := "Operator"
 28 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 29 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 32
 32 [-]: LOADBOOL  R2 1 0       ; R2 := true
 33 [-]: RETURN    R2 2         ; return R2
 34 [-]: RETURN    R0 1         ; return 


; Function #302:
;
; Name:            
; Defined at line: 6219
; #Upvalues:       1
; #Parameters:     10
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: SELF      R10 R0 K0    ; R11 := R0; R10 := R0[0x5f56eeab]
  2 [-]: MOVE      R12 R2       ; R12 := R2
  3 [-]: LOADK     R13 29       ; R13 := 29.000000
  4 [-]: MOVE      R14 R1       ; R14 := R1
  5 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
  6 [-]: SELF      R10 R0 K0    ; R11 := R0; R10 := R0[0x5f56eeab]
  7 [-]: MOVE      R12 R3       ; R12 := R3
  8 [-]: LOADK     R13 29       ; R13 := 29.000000
  9 [-]: MOVE      R14 R1       ; R14 := R1
 10 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 11 [-]: GETGLOBAL R10 K1       ; R10 := 0x38f10e85
 12 [-]: MOVE      R11 R0       ; R11 := R0
 13 [-]: MOVE      R12 R2       ; R12 := R2
 14 [-]: LOADK     R13 K2       ; R13 := ".setVertexColors"
 15 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 16 [-]: MOVE      R13 R4       ; R13 := R4
 17 [-]: MOVE      R14 R4       ; R14 := R4
 18 [-]: MOVE      R15 R6       ; R15 := R6
 19 [-]: MOVE      R16 R6       ; R16 := R6
 20 [-]: CALL      R10 7 1      ; R10(R11,R12,R13,R14,R15,R16)
 21 [-]: GETUPVAL  R10 U0       ; R10 := U0
 22 [-]: GETTABLE  R10 R10 K3   ; R82 := R10[0xb5be5d4a]
 23 [-]: MOVE      R11 R0       ; R11 := R0
 24 [-]: MOVE      R12 R3       ; R12 := R3
 25 [-]: CALL      R10 3 3      ; R10,R11 := R10(R11,R12)
 26 [-]: SELF      R12 R0 K4    ; R13 := R0; R12 := R0[0x91a24e4b]
 27 [-]: MOVE      R14 R3       ; R14 := R3
 28 [-]: LOADK     R15 13       ; R15 := 13.000000
 29 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 30 [-]: DIV       R12 R12 K5   ; R12 := R12 / 2.000000
 31 [-]: ADD       R12 R11 R12  ; R12 := R11 + R12
 32 [-]: GETUPVAL  R13 U0       ; R13 := U0
 33 [-]: GETTABLE  R13 R13 K6   ; R82 := R13[0x6d7e6810]
 34 [-]: MOVE      R14 R0       ; R14 := R0
 35 [-]: NEWTABLE  R15 0 2      ; R15 := {}
 36 [-]: SETTABLE  R15 K7 K8    ; R15["x"] := 0.000000
 37 [-]: ADD       R16 R12 R7   ; R16 := R12 + R7
 38 [-]: SETTABLE  R15 K9 R16   ; R15["y"] := R16
 39 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 40 [-]: GETTABLE  R12 R13 K9   ; R12 := R13["y"]
 41 [-]: SELF      R13 R0 K10   ; R14 := R0; R13 := R0[0x6b837788]
 42 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 43 [-]: SELF      R14 R0 K11   ; R15 := R0; R14 := R0[0xaf9fda9f]
 44 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 45 [-]: SELF      R15 R0 K12   ; R16 := R0; R15 := R0[0x091c120e]
 46 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 47 [-]: LT        1 R13 R15    ; if R13 < R15 then PC := 53
 48 [-]: JMP       53           ; PC := 53
 49 [-]: SELF      R15 R0 K13   ; R16 := R0; R15 := R0[0x2cc9d281]
 50 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 51 [-]: LT        0 R14 R15    ; if R14 >= R15 then PC := 64
 52 [-]: JMP       64           ; PC := 64
 53 [-]: GETGLOBAL R15 K14      ; R15 := 0x34291f5c
 54 [-]: GETTABLE  R15 R15 K15  ; R82 := R15[0x056bfe8b]
 55 [-]: CALL      R15 1 2      ; R15 := R15()
 56 [-]: TEST      R15 1        ; if R15 then PC := 64
 57 [-]: JMP       64           ; PC := 64
 58 [-]: SELF      R15 R0 K12   ; R16 := R0; R15 := R0[0x091c120e]
 59 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 60 [-]: MOVE      R13 R15      ; R13 := R15
 61 [-]: SELF      R15 R0 K13   ; R16 := R0; R15 := R0[0x2cc9d281]
 62 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 63 [-]: MOVE      R14 R15      ; R14 := R15
 64 [-]: DIV       R8 R8 R14    ; R8 := R8 / R14
 65 [-]: DIV       R9 R9 R14    ; R9 := R9 / R14
 66 [-]: SELF      R15 R0 K16   ; R16 := R0; R15 := R0[0xd5181643]
 67 [-]: MOVE      R17 R3       ; R17 := R3
 68 [-]: GETGLOBAL R18 K17      ; R18 := 0x0032441c
 69 [-]: GETTABLE  R18 R18 K18  ; R18 := R18["UIMaterial_VerticalVisibilityRangeText"]
 70 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
 71 [-]: SELF      R15 R0 K19   ; R16 := R0; R15 := R0[0x91e13703]
 72 [-]: MOVE      R17 R3       ; R17 := R3
 73 [-]: LOADK     R18 K20      ; R18 := "VisibilityCenter"
 74 [-]: MOVE      R19 R12      ; R19 := R12
 75 [-]: LOADK     R20 0        ; R20 := 0.000000
 76 [-]: LOADK     R21 0        ; R21 := 0.000000
 77 [-]: LOADK     R22 0        ; R22 := 0.000000
 78 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
 79 [-]: SELF      R15 R0 K19   ; R16 := R0; R15 := R0[0x91e13703]
 80 [-]: MOVE      R17 R3       ; R17 := R3
 81 [-]: LOADK     R18 K21      ; R18 := "VisibilitySize"
 82 [-]: MOVE      R19 R8       ; R19 := R8
 83 [-]: LOADK     R20 0        ; R20 := 0.000000
 84 [-]: LOADK     R21 0        ; R21 := 0.000000
 85 [-]: LOADK     R22 0        ; R22 := 0.000000
 86 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
 87 [-]: SELF      R15 R0 K19   ; R16 := R0; R15 := R0[0x91e13703]
 88 [-]: MOVE      R17 R3       ; R17 := R3
 89 [-]: LOADK     R18 K22      ; R18 := "VisibilityFadeSize"
 90 [-]: MOVE      R19 R9       ; R19 := R9
 91 [-]: LOADK     R20 0        ; R20 := 0.000000
 92 [-]: LOADK     R21 0        ; R21 := 0.000000
 93 [-]: LOADK     R22 0        ; R22 := 0.000000
 94 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
 95 [-]: RETURN    R0 1         ; return 


; Function #303:
;
; Name:            
; Defined at line: 6244
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x60130201
  2 [-]: LOADK     R3 232       ; R3 := 232.000000
  3 [-]: LOADK     R4 145       ; R4 := 145.000000
  4 [-]: LOADK     R5 58        ; R5 := 58.000000
  5 [-]: LOADK     R6 255       ; R6 := 255.000000
  6 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
  7 [-]: EQ        0 R1 K1      ; if R1 ~= 2.000000 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0x60130201
 10 [-]: LOADK     R4 62        ; R4 := 62.000000
 11 [-]: LOADK     R5 196       ; R5 := 196.000000
 12 [-]: LOADK     R6 221       ; R6 := 221.000000
 13 [-]: LOADK     R7 255       ; R7 := 255.000000
 14 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 15 [-]: MOVE      R2 R3        ; R2 := R3
 16 [-]: SELF      R3 R0 K2     ; R4 := R0; R3 := R0[0xde321e6f]
 17 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 18 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 19 [-]: GETGLOBAL R5 K3        ; R5 := 0x33bdd652
 20 [-]: GETTABLE  R5 R5 K4     ; R82 := R5[0x23d5322f]
 21 [-]: MOVE      R6 R4        ; R6 := R4
 22 [-]: SELF      R7 R3 K5     ; R8 := R3; R7 := R3[0xe85a2361]
 23 [-]: LOADK     R9 1         ; R9 := 1.000000
 24 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 25 [-]: CALL      R5 0 1       ; R5(R6,...)
 26 [-]: GETGLOBAL R5 K3        ; R5 := 0x33bdd652
 27 [-]: GETTABLE  R5 R5 K4     ; R82 := R5[0x23d5322f]
 28 [-]: MOVE      R6 R4        ; R6 := R4
 29 [-]: SELF      R7 R3 K5     ; R8 := R3; R7 := R3[0xe85a2361]
 30 [-]: LOADK     R9 0         ; R9 := 0.000000
 31 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 32 [-]: CALL      R5 0 1       ; R5(R6,...)
 33 [-]: GETGLOBAL R5 K3        ; R5 := 0x33bdd652
 34 [-]: GETTABLE  R5 R5 K4     ; R82 := R5[0x23d5322f]
 35 [-]: MOVE      R6 R4        ; R6 := R4
 36 [-]: SELF      R7 R3 K5     ; R8 := R3; R7 := R3[0xe85a2361]
 37 [-]: LOADK     R9 5         ; R9 := 5.000000
 38 [-]: CALL      R7 3 0       ; R7,... := R7(R8,R9)
 39 [-]: CALL      R5 0 1       ; R5(R6,...)
 40 [-]: GETGLOBAL R5 K3        ; R5 := 0x33bdd652
 41 [-]: GETTABLE  R5 R5 K4     ; R82 := R5[0x23d5322f]
 42 [-]: MOVE      R6 R4        ; R6 := R4
 43 [-]: SELF      R7 R3 K7     ; R8 := R3; R7 := R3[0xf7d48ee0]
 44 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 45 [-]: CALL      R5 0 1       ; R5(R6,...)
 46 [-]: GETGLOBAL R5 K8        ; R5 := 0xc8802016
 47 [-]: MOVE      R6 R4        ; R6 := R4
 48 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 49 [-]: JMP       95           ; PC := 95
 50 [-]: GETGLOBAL R10 K9       ; R10 := 0x7b998233
 51 [-]: MOVE      R11 R9       ; R11 := R9
 52 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 53 [-]: TEST      R10 1        ; if R10 then PC := 95
 54 [-]: JMP       95           ; PC := 95
 55 [-]: SELF      R10 R9 K10   ; R11 := R9; R10 := R9[0x68d708a7]
 56 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 57 [-]: SELF      R11 R10 K11  ; R12 := R10; R11 := R10[0x8e62760a]
 58 [-]: LOADK     R13 0        ; R13 := 0.000000
 59 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 60 [-]: SELF      R12 R11 K13  ; R13 := R11; R12 := R11[0xa3927fe9]
 61 [-]: LOADK     R14 6        ; R14 := 6.000000
 62 [-]: MOVE      R15 R2       ; R15 := R2
 63 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 64 [-]: SELF      R12 R11 K14  ; R13 := R11; R12 := R11[0xfc5d7158]
 65 [-]: LOADK     R14 6        ; R14 := 6.000000
 66 [-]: LOADBOOL  R15 1 0      ; R15 := true
 67 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 68 [-]: SELF      R12 R10 K15  ; R13 := R10; R12 := R10[0x199edf6e]
 69 [-]: LOADK     R14 0        ; R14 := 0.000000
 70 [-]: MOVE      R15 R11      ; R15 := R11
 71 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 72 [-]: SELF      R12 R9 K16   ; R13 := R9; R12 := R9[0xf2deaf69]
 73 [-]: GETGLOBAL R14 K17      ; R14 := gPowerSuitType
 74 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 75 [-]: TEST      R12 0        ; if not R12 then PC := 92
 76 [-]: JMP       92           ; PC := 92
 77 [-]: SELF      R12 R10 K11  ; R13 := R10; R12 := R10[0x8e62760a]
 78 [-]: LOADK     R14 1        ; R14 := 1.000000
 79 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 80 [-]: SELF      R13 R12 K13  ; R14 := R12; R13 := R12[0xa3927fe9]
 81 [-]: LOADK     R15 6        ; R15 := 6.000000
 82 [-]: MOVE      R16 R2       ; R16 := R2
 83 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 84 [-]: SELF      R13 R12 K14  ; R14 := R12; R13 := R12[0xfc5d7158]
 85 [-]: LOADK     R15 6        ; R15 := 6.000000
 86 [-]: LOADBOOL  R16 1 0      ; R16 := true
 87 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 88 [-]: SELF      R13 R10 K15  ; R14 := R10; R13 := R10[0x199edf6e]
 89 [-]: LOADK     R15 1        ; R15 := 1.000000
 90 [-]: MOVE      R16 R12      ; R16 := R12
 91 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 92 [-]: SELF      R13 R9 K18   ; R14 := R9; R13 := R9[0xaa041663]
 93 [-]: MOVE      R15 R10      ; R15 := R10
 94 [-]: CALL      R13 3 1      ; R13(R14,R15)
 95 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 50; R7 := R8 end
 96 [-]: JMP       50           ; PC := 50
 97 [-]: RETURN    R0 1         ; return 


; Function #304:
;
; Name:            
; Defined at line: 6275
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  3 [-]: SETTABLE  R0 K1 R1     ; R0["QueuedTransmissions"] := R1
  4 [-]: RETURN    R0 1         ; return 


; Function #305:
;
; Name:            
; Defined at line: 6279
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETGLOBAL R1 K1        ; R1 := 0x34291f5c
  9 [-]: GETTABLE  R1 R1 K2     ; R82 := R1[0x49d4c6fc]
 10 [-]: CALL      R1 1 2       ; R1 := R1()
 11 [-]: TEST      R1 0         ; if not R1 then PC := 24
 12 [-]: JMP       24           ; PC := 24
 13 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x0f5a34d1]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 0         ; if not R1 then PC := 24
 16 [-]: JMP       24           ; PC := 24
 17 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0x1760dc5a]
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: EQ        1 R1 K5      ; if R1 == "" then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0x1760dc5a]
 22 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
 23 [-]: RETURN    R1 0         ; return R1,...
 24 [-]: GETGLOBAL R1 K1        ; R1 := 0x34291f5c
 25 [-]: GETTABLE  R1 R1 K6     ; R82 := R1[0x9e503547]
 26 [-]: CALL      R1 1 2       ; R1 := R1()
 27 [-]: TEST      R1 0         ; if not R1 then PC := 36
 28 [-]: JMP       36           ; PC := 36
 29 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0[0xc87566df]
 30 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 31 [-]: EQ        1 R1 K5      ; if R1 == "" then PC := 36
 32 [-]: JMP       36           ; PC := 36
 33 [-]: SELF      R1 R0 K7     ; R2 := R0; R1 := R0[0xc87566df]
 34 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
 35 [-]: RETURN    R1 0         ; return R1,...
 36 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0[0x19865272]
 37 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
 38 [-]: RETURN    R1 0         ; return R1,...
 39 [-]: RETURN    R0 1         ; return 


; Function #306:
;
; Name:            
; Defined at line: 6295
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #307:
;
; Name:            
; Defined at line: 6299
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: EQ        0 R1 K1      ; if R1 ~= "" then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADNIL   R1 R1        ; R1 := nil
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: GETGLOBAL R1 K2        ; R1 := 0x34291f5c
 16 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0xe6b41adb]
 17 [-]: CALL      R1 1 2       ; R1 := R1()
 18 [-]: TEST      R1 0         ; if not R1 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: LOADK     R1 K4        ; R1 := "EXTERNAL"
 21 [-]: RETURN    R1 2         ; return R1
 22 [-]: LOADK     R1 K5        ; R1 := "UNAVAILABLE"
 23 [-]: RETURN    R1 2         ; return R1
 24 [-]: RETURN    R0 1         ; return 


; Function #308:
;
; Name:            
; Defined at line: 6317
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #309:
;
; Name:            
; Defined at line: 6321
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0x0f5a34d1]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 0         ; if not R1 then PC := 39
 11 [-]: JMP       39           ; PC := 39
 12 [-]: GETGLOBAL R1 K2        ; R1 := 0x34291f5c
 13 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0x49d4c6fc]
 14 [-]: CALL      R1 1 2       ; R1 := R1()
 15 [-]: TEST      R1 0         ; if not R1 then PC := 30
 16 [-]: JMP       30           ; PC := 30
 17 [-]: GETGLOBAL R1 K4        ; R1 := 0x76ea806b
 18 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x3f3ae64c]
 19 [-]: LOADK     R3 0         ; R3 := 0.000000
 20 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 21 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xfe6131c3]
 22 [-]: LOADK     R3 K7        ; R3 := "steam_market"
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: TEST      R1 1         ; if R1 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0[0x1760dc5a]
 27 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 28 [-]: EQ        0 R1 K9      ; if R1 ~= "" then PC := 39
 29 [-]: JMP       39           ; PC := 39
 30 [-]: GETGLOBAL R1 K2        ; R1 := 0x34291f5c
 31 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0x49d4c6fc]
 32 [-]: CALL      R1 1 2       ; R1 := R1()
 33 [-]: TEST      R1 1         ; if R1 then PC := 41
 34 [-]: JMP       41           ; PC := 41
 35 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0[0x1760dc5a]
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: EQ        1 R1 K9      ; if R1 == "" then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: LOADNIL   R1 R1        ; R1 := nil
 40 [-]: RETURN    R1 2         ; return R1
 41 [-]: SELF      R1 R0 K10    ; R2 := R0; R1 := R0[0x9dbbea0a]
 42 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 43 [-]: TEST      R1 0         ; if not R1 then PC := 67
 44 [-]: JMP       67           ; PC := 67
 45 [-]: GETGLOBAL R1 K2        ; R1 := 0x34291f5c
 46 [-]: GETTABLE  R1 R1 K11    ; R82 := R1[0x056bfe8b]
 47 [-]: CALL      R1 1 2       ; R1 := R1()
 48 [-]: TEST      R1 0         ; if not R1 then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0[0x1760dc5a]
 51 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 52 [-]: EQ        0 R1 K9      ; if R1 ~= "" then PC := 56
 53 [-]: JMP       56           ; PC := 56
 54 [-]: LOADK     R1 K12       ; R1 := "MARKET"
 55 [-]: RETURN    R1 2         ; return R1
 56 [-]: GETGLOBAL R1 K2        ; R1 := 0x34291f5c
 57 [-]: GETTABLE  R1 R1 K11    ; R82 := R1[0x056bfe8b]
 58 [-]: CALL      R1 1 2       ; R1 := R1()
 59 [-]: TEST      R1 0         ; if not R1 then PC := 67
 60 [-]: JMP       67           ; PC := 67
 61 [-]: SELF      R1 R0 K8     ; R2 := R0; R1 := R0[0x1760dc5a]
 62 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 63 [-]: EQ        1 R1 K9      ; if R1 == "" then PC := 67
 64 [-]: JMP       67           ; PC := 67
 65 [-]: LOADK     R1 K13       ; R1 := "UNAVAILABLE"
 66 [-]: RETURN    R1 2         ; return R1
 67 [-]: GETGLOBAL R1 K2        ; R1 := 0x34291f5c
 68 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0x49d4c6fc]
 69 [-]: CALL      R1 1 2       ; R1 := R1()
 70 [-]: TEST      R1 0         ; if not R1 then PC := 74
 71 [-]: JMP       74           ; PC := 74
 72 [-]: LOADK     R1 K14       ; R1 := "EXTERNAL"
 73 [-]: RETURN    R1 2         ; return R1
 74 [-]: SELF      R1 R0 K15    ; R2 := R0; R1 := R0[0x2ce719d4]
 75 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 76 [-]: LT        0 K16 R1     ; if 0.000000 >= R1 then PC := 90
 77 [-]: JMP       90           ; PC := 90
 78 [-]: GETGLOBAL R1 K2        ; R1 := 0x34291f5c
 79 [-]: GETTABLE  R1 R1 K11    ; R82 := R1[0x056bfe8b]
 80 [-]: CALL      R1 1 2       ; R1 := R1()
 81 [-]: TEST      R1 1         ; if R1 then PC := 88
 82 [-]: JMP       88           ; PC := 88
 83 [-]: GETGLOBAL R1 K2        ; R1 := 0x34291f5c
 84 [-]: GETTABLE  R1 R1 K17    ; R82 := R1[0xa7a2e381]
 85 [-]: CALL      R1 1 2       ; R1 := R1()
 86 [-]: TEST      R1 0         ; if not R1 then PC := 90
 87 [-]: JMP       90           ; PC := 90
 88 [-]: LOADK     R1 K12       ; R1 := "MARKET"
 89 [-]: RETURN    R1 2         ; return R1
 90 [-]: LOADK     R1 K13       ; R1 := "UNAVAILABLE"
 91 [-]: RETURN    R1 2         ; return R1
 92 [-]: RETURN    R0 1         ; return 


; Function #310:
;
; Name:            
; Defined at line: 6360
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #311:
;
; Name:            
; Defined at line: 6364
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADNIL   R1 R1        ; R1 := nil
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0xdaefcda4]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: EQ        0 R1 K3      ; if R1 ~= 0.000000 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADNIL   R1 R1        ; R1 := nil
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: GETGLOBAL R1 K2        ; R1 := 0x34291f5c
 15 [-]: GETTABLE  R1 R1 K4     ; R82 := R1[0x9e503547]
 16 [-]: CALL      R1 1 2       ; R1 := R1()
 17 [-]: TEST      R1 0         ; if not R1 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADK     R1 K5        ; R1 := "EXTERNAL"
 20 [-]: RETURN    R1 2         ; return R1
 21 [-]: LOADK     R1 K6        ; R1 := "UNAVAILABLE"
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: RETURN    R0 1         ; return 


; Function #312:
;
; Name:            
; Defined at line: 6382
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #313:
;
; Name:            
; Defined at line: 6386
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x34291f5c
  3 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0xbcd06415]
  4 [-]: CALL      R2 1 2       ; R2 := R2()
  5 [-]: TEST      R2 0         ; if not R2 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: MOVE      R1 R2        ; R1 := R2
 11 [-]: JMP       26           ; PC := 26
 12 [-]: GETGLOBAL R2 K1        ; R2 := 0x34291f5c
 13 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0xe6b41adb]
 14 [-]: CALL      R2 1 2       ; R2 := R2()
 15 [-]: TEST      R2 0         ; if not R2 then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: MOVE      R1 R2        ; R1 := R2
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETUPVAL  R2 U2        ; R2 := U2
 23 [-]: MOVE      R3 R0        ; R3 := R0
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: MOVE      R1 R2        ; R1 := R2
 26 [-]: EQ        0 R1 K4      ; if R1 ~= "EXTERNAL" then PC := 33
 27 [-]: JMP       33           ; PC := 33
 28 [-]: GETUPVAL  R2 U3        ; R2 := U3
 29 [-]: MOVE      R3 R0        ; R3 := R0
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: EQ        0 R2 K0      ; if R2 ~= "" then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 34
 34 [-]: LOADBOOL  R2 1 0       ; R2 := true
 35 [-]: RETURN    R2 2         ; return R2
 36 [-]: RETURN    R0 1         ; return 


; Function #314:
;
; Name:            
; Defined at line: 6399
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #315:
;
; Name:            
; Defined at line: 6403
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADBOOL  R1 0 0       ; R1 := false
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0x76ea806b
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 64
  6 [-]: JMP       64           ; PC := 64
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 64
 11 [-]: JMP       64           ; PC := 64
 12 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0x331940f7]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x56c01834]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 0         ; if not R2 then PC := 64
 17 [-]: JMP       64           ; PC := 64
 18 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0x331940f7]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x6d604ba7]
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: GETGLOBAL R3 K5        ; R3 := 0x7f5022cf
 23 [-]: GETTABLE  R3 R3 K6     ; R82 := R3[0xa5c556b9]
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: LOADK     R5 K7        ; R5 := "twitch.amazon.com"
 26 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 27 [-]: EQ        0 R3 K8      ; if R3 ~= nil then PC := 36
 28 [-]: JMP       36           ; PC := 36
 29 [-]: GETGLOBAL R3 K5        ; R3 := 0x7f5022cf
 30 [-]: GETTABLE  R3 R3 K6     ; R82 := R3[0xa5c556b9]
 31 [-]: MOVE      R4 R2        ; R4 := R2
 32 [-]: LOADK     R5 K9        ; R5 := "gaming.amazon.com"
 33 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 34 [-]: EQ        1 R3 K8      ; if R3 == nil then PC := 64
 35 [-]: JMP       64           ; PC := 64
 36 [-]: SELF      R3 R0 K10    ; R4 := R0; R3 := R0[0xed4e0128]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: GETGLOBAL R4 K1        ; R4 := 0x76ea806b
 39 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xe03daba5]
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: EQ        1 R4 K12     ; if R4 == "RU" then PC := 47
 42 [-]: JMP       47           ; PC := 47
 43 [-]: EQ        1 R4 K13     ; if R4 == "CN" then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: EQ        0 R4 K14     ; if R4 ~= "KR" then PC := 56
 46 [-]: JMP       56           ; PC := 56
 47 [-]: GETGLOBAL R5 K5        ; R5 := 0x7f5022cf
 48 [-]: GETTABLE  R5 R5 K6     ; R82 := R5[0xa5c556b9]
 49 [-]: MOVE      R6 R3        ; R6 := R3
 50 [-]: LOADK     R7 K15       ; R7 := "NoLogo"
 51 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 52 [-]: TEST      R5 0         ; if not R5 then PC := 64
 53 [-]: JMP       64           ; PC := 64
 54 [-]: LOADBOOL  R1 1 0       ; R1 := true
 55 [-]: JMP       64           ; PC := 64
 56 [-]: GETGLOBAL R5 K5        ; R5 := 0x7f5022cf
 57 [-]: GETTABLE  R5 R5 K6     ; R82 := R5[0xa5c556b9]
 58 [-]: MOVE      R6 R3        ; R6 := R3
 59 [-]: LOADK     R7 K15       ; R7 := "NoLogo"
 60 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 61 [-]: TEST      R5 1         ; if R5 then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: LOADBOOL  R1 1 0       ; R1 := true
 64 [-]: RETURN    R1 2         ; return R1
 65 [-]: RETURN    R0 1         ; return 


; Function #316:
;
; Name:            
; Defined at line: 6426
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #317:
;
; Name:            
; Defined at line: 6431
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADBOOL  R2 1 0       ; R2 := true
  2 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0[0xe0cffb75]
  3 [-]: GETUPVAL  R5 U0        ; R5 := U0
  4 [-]: MOVE      R6 R1        ; R6 := R1
  5 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
  6 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  7 [-]: SELF      R4 R1 K1     ; R5 := R1; R4 := R1[0xdaefcda4]
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: LT        1 K3 R4      ; if 0.000000 < R4 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 12
 12 [-]: LOADBOOL  R4 1 0       ; R4 := true
 13 [-]: GETUPVAL  R5 U1        ; R5 := U1
 14 [-]: MOVE      R6 R1        ; R6 := R1
 15 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 16 [-]: TEST      R5 1         ; if R5 then PC := 71
 17 [-]: JMP       71           ; PC := 71
 18 [-]: TEST      R3 0         ; if not R3 then PC := 58
 19 [-]: JMP       58           ; PC := 58
 20 [-]: SELF      R5 R1 K1     ; R6 := R1; R5 := R1[0xdaefcda4]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: EQ        0 R5 K4      ; if R5 ~= 2.000000 then PC := 29
 23 [-]: JMP       29           ; PC := 29
 24 [-]: GETGLOBAL R5 K2        ; R5 := 0x34291f5c
 25 [-]: GETTABLE  R5 R5 K5     ; R82 := R5[0xbcd06415]
 26 [-]: CALL      R5 1 2       ; R5 := R5()
 27 [-]: TEST      R5 0         ; if not R5 then PC := 56
 28 [-]: JMP       56           ; PC := 56
 29 [-]: SELF      R5 R1 K1     ; R6 := R1; R5 := R1[0xdaefcda4]
 30 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 31 [-]: EQ        1 R5 K4      ; if R5 == 2.000000 then PC := 38
 32 [-]: JMP       38           ; PC := 38
 33 [-]: GETGLOBAL R5 K2        ; R5 := 0x34291f5c
 34 [-]: GETTABLE  R5 R5 K5     ; R82 := R5[0xbcd06415]
 35 [-]: CALL      R5 1 2       ; R5 := R5()
 36 [-]: TEST      R5 1         ; if R5 then PC := 56
 37 [-]: JMP       56           ; PC := 56
 38 [-]: GETGLOBAL R5 K2        ; R5 := 0x34291f5c
 39 [-]: GETTABLE  R5 R5 K6     ; R82 := R5[0x49d4c6fc]
 40 [-]: CALL      R5 1 2       ; R5 := R5()
 41 [-]: TEST      R5 0         ; if not R5 then PC := 71
 42 [-]: JMP       71           ; PC := 71
 43 [-]: SELF      R5 R1 K7     ; R6 := R1; R5 := R1[0x1760dc5a]
 44 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 45 [-]: EQ        0 R5 K8      ; if R5 ~= "" then PC := 71
 46 [-]: JMP       71           ; PC := 71
 47 [-]: GETGLOBAL R5 K9        ; R5 := 0x76ea806b
 48 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0x3f3ae64c]
 49 [-]: LOADK     R7 0         ; R7 := 0.000000
 50 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 51 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0xfe6131c3]
 52 [-]: LOADK     R7 K12       ; R7 := "steam_market"
 53 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 54 [-]: TEST      R5 0         ; if not R5 then PC := 71
 55 [-]: JMP       71           ; PC := 71
 56 [-]: LOADBOOL  R2 0 0       ; R2 := false
 57 [-]: JMP       71           ; PC := 71
 58 [-]: GETUPVAL  R5 U2        ; R5 := U2
 59 [-]: MOVE      R6 R1        ; R6 := R1
 60 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 61 [-]: TEST      R5 0         ; if not R5 then PC := 71
 62 [-]: JMP       71           ; PC := 71
 63 [-]: GETGLOBAL R5 K2        ; R5 := 0x34291f5c
 64 [-]: GETTABLE  R5 R5 K5     ; R82 := R5[0xbcd06415]
 65 [-]: CALL      R5 1 2       ; R5 := R5()
 66 [-]: TEST      R5 0         ; if not R5 then PC := 71
 67 [-]: JMP       71           ; PC := 71
 68 [-]: TEST      R4 1         ; if R4 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: LOADBOOL  R2 0 0       ; R2 := false
 71 [-]: RETURN    R2 2         ; return R2
 72 [-]: RETURN    R0 1         ; return 


; Function #318:
;
; Name:            
; Defined at line: 6453
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R2        ; R5 := R2
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 1         ; if R4 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: TEST      R4 0         ; if not R4 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R3 2         ; return R3
 12 [-]: MOVE      R4 R3        ; R4 := R3
 13 [-]: SELF      R5 R1 K1     ; R6 := R1; R5 := R1[0x3ef3c120]
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: LEN       R6 R5        ; R6 := # R5
 16 [-]: LT        0 K2 R6      ; if 0.000000 >= R6 then PC := 67
 17 [-]: JMP       67           ; PC := 67
 18 [-]: LOADK     R6 K3        ; R6 := ""
 19 [-]: LOADBOOL  R7 0 0       ; R7 := false
 20 [-]: GETTABLE  R8 R2 K4     ; R8 := R2["mSockets"]
 21 [-]: EQ        1 R8 K5      ; if R8 == nil then PC := 44
 22 [-]: JMP       44           ; PC := 44
 23 [-]: LOADK     R8 1         ; R8 := 1.000000
 24 [-]: LEN       R9 R5        ; R9 := # R5
 25 [-]: LOADK     R10 1        ; R10 := 1.000000
 26 [-]: FORPREP   R8 43        ; R8 -= R10; PC := 43
 27 [-]: SELF      R12 R2 K6    ; R13 := R2; R12 := R2[0x2c626e13]
 28 [-]: SUB       R14 R11 K7   ; R14 := R11 - 1.000000
 29 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 30 [-]: NOT       R12 R12      ; R12 := not R12
 31 [-]: TEST      R7 1         ; if R7 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: NOT       R7 R12       ; R7 := not R12
 34 [-]: MOVE      R13 R6       ; R13 := R6
 35 [-]: GETUPVAL  R14 U0       ; R14 := U0
 36 [-]: GETTABLE  R14 R14 K8   ; R82 := R14[0x06d055f9]
 37 [-]: MOVE      R15 R12      ; R15 := R12
 38 [-]: LOADK     R16 K9       ; R16 := "<TREASURE_GEM_OUTLINE>"
 39 [-]: LOADK     R17 K10      ; R17 := "<TREASURE_GEM>"
 40 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 41 [-]: LOADK     R15 K3       ; R15 := ""
 42 [-]: CONCAT    R6 R13 R15   ; R6 := R13 .. R14 .. R15
 43 [-]: FORLOOP   R8 27        ; R8 += R10; if R8 <= R9 then begin PC := 27; R11 := R8 end
 44 [-]: TEST      R7 0         ; if not R7 then PC := 67
 45 [-]: JMP       67           ; PC := 67
 46 [-]: LOADK     R13 K3       ; R13 := ""
 47 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
 48 [-]: MOVE      R15 R0       ; R15 := R0
 49 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 50 [-]: TEST      R14 1        ; if R14 then PC := 58
 51 [-]: JMP       58           ; PC := 58
 52 [-]: SELF      R14 R0 K11   ; R15 := R0; R14 := R0[0x42b04007]
 53 [-]: MOVE      R16 R6       ; R16 := R6
 54 [-]: LOADBOOL  R17 1 0      ; R17 := true
 55 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 56 [-]: MOVE      R13 R14      ; R13 := R14
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETGLOBAL R14 K12      ; R14 := 0x603636ad
 59 [-]: MOVE      R15 R6       ; R15 := R6
 60 [-]: LOADBOOL  R16 1 0      ; R16 := true
 61 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 62 [-]: MOVE      R13 R14      ; R13 := R14
 63 [-]: MOVE      R14 R4       ; R14 := R4
 64 [-]: LOADK     R15 K13      ; R15 := "   "
 65 [-]: MOVE      R16 R13      ; R16 := R13
 66 [-]: CONCAT    R4 R14 R16   ; R4 := R14 .. R15 .. R16
 67 [-]: RETURN    R4 2         ; return R4
 68 [-]: RETURN    R0 1         ; return 


; Function #319:
;
; Name:            
; Defined at line: 6485
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x5bced4c4
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x55f27c30]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x715c5d7f]
  5 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  6 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: RETURN    R0 1         ; return 


; Function #320:
;
; Name:            
; Defined at line: 6489
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x5bced4c4
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x55f27c30]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x715c5d7f]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 60.000000
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #321:
;
; Name:            
; Defined at line: 6493
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #322:
;
; Name:            
; Defined at line: 6497
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x5bced4c4
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x55f27c30]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x715c5d7f]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 3600.000000
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #323:
;
; Name:            
; Defined at line: 6501
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #324:
;
; Name:            
; Defined at line: 6505
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x5bced4c4
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x55f27c30]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x715c5d7f]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 86400.000000
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #325:
;
; Name:            
; Defined at line: 6509
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #326:
;
; Name:            
; Defined at line: 6513
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x5bced4c4
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x55f27c30]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
  4 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x715c5d7f]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: DIV       R1 R1 K4     ; R1 := R1 / 604800.000000
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: RETURN    R0 1         ; return 


; Function #327:
;
; Name:            
; Defined at line: 6517
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["missionType"]
  3 [-]: EQ        0 R2 K2      ; if R2 ~= 18.000000 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: NEWTABLE  R3 2 0       ; R3 := {}
  6 [-]: LOADK     R4 9         ; R4 := 9.000000
  7 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Language/Menu/NightmareModeName"
  8 [-]: SETLIST   R3 2 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 2
  9 [-]: RETURN    R3 2         ; return R3
 10 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 11 [-]: GETGLOBAL R4 K4        ; R4 := 0x33bdd652
 12 [-]: GETTABLE  R4 R4 K5     ; R82 := R4[0x23d5322f]
 13 [-]: MOVE      R5 R3        ; R5 := R3
 14 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 15 [-]: LOADK     R7 1         ; R7 := 1.000000
 16 [-]: LOADK     R8 K6        ; R8 := "/Lotus/Language/Game/NightmareModeVampire"
 17 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 18 [-]: CALL      R4 3 1       ; R4(R5,R6)
 19 [-]: GETGLOBAL R4 K4        ; R4 := 0x33bdd652
 20 [-]: GETTABLE  R4 R4 K5     ; R82 := R4[0x23d5322f]
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 23 [-]: LOADK     R7 3         ; R7 := 3.000000
 24 [-]: LOADK     R8 K7        ; R8 := "/Lotus/Language/Game/NightmareModeEnergyDrain"
 25 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 26 [-]: CALL      R4 3 1       ; R4(R5,R6)
 27 [-]: GETGLOBAL R4 K4        ; R4 := 0x33bdd652
 28 [-]: GETTABLE  R4 R4 K5     ; R82 := R4[0x23d5322f]
 29 [-]: MOVE      R5 R3        ; R5 := R3
 30 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 31 [-]: LOADK     R7 6         ; R7 := 6.000000
 32 [-]: LOADK     R8 K8        ; R8 := "/Lotus/Language/Game/NightmareModeExplodingCorpses"
 33 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 34 [-]: CALL      R4 3 1       ; R4(R5,R6)
 35 [-]: EQ        1 R2 K9      ; if R2 == 8.000000 then PC := 63
 36 [-]: JMP       63           ; PC := 63
 37 [-]: EQ        1 R2 K10     ; if R2 == 9.000000 then PC := 63
 38 [-]: JMP       63           ; PC := 63
 39 [-]: EQ        1 R2 K11     ; if R2 == 2.000000 then PC := 63
 40 [-]: JMP       63           ; PC := 63
 41 [-]: EQ        1 R2 K12     ; if R2 == 32.000000 then PC := 63
 42 [-]: JMP       63           ; PC := 63
 43 [-]: EQ        1 R2 K13     ; if R2 == 4.000000 then PC := 63
 44 [-]: JMP       63           ; PC := 63
 45 [-]: EQ        1 R2 K14     ; if R2 == 3.000000 then PC := 63
 46 [-]: JMP       63           ; PC := 63
 47 [-]: EQ        1 R2 K15     ; if R2 == 0.000000 then PC := 63
 48 [-]: JMP       63           ; PC := 63
 49 [-]: EQ        1 R2 K16     ; if R2 == 33.000000 then PC := 63
 50 [-]: JMP       63           ; PC := 63
 51 [-]: EQ        1 R2 K17     ; if R2 == 34.000000 then PC := 63
 52 [-]: JMP       63           ; PC := 63
 53 [-]: EQ        1 R2 K18     ; if R2 == 35.000000 then PC := 63
 54 [-]: JMP       63           ; PC := 63
 55 [-]: GETGLOBAL R4 K4        ; R4 := 0x33bdd652
 56 [-]: GETTABLE  R4 R4 K5     ; R82 := R4[0x23d5322f]
 57 [-]: MOVE      R5 R3        ; R5 := R3
 58 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 59 [-]: LOADK     R7 0         ; R7 := 0.000000
 60 [-]: LOADK     R8 K19       ; R8 := "/Lotus/Language/Game/NightmareModeTimed"
 61 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 62 [-]: CALL      R4 3 1       ; R4(R5,R6)
 63 [-]: EQ        1 R2 K15     ; if R2 == 0.000000 then PC := 65
 64 [-]: JMP       65           ; PC := 65
 65 [-]: EQ        1 R2 K20     ; if R2 == 14.000000 then PC := 75
 66 [-]: JMP       75           ; PC := 75
 67 [-]: GETGLOBAL R4 K4        ; R4 := 0x33bdd652
 68 [-]: GETTABLE  R4 R4 K5     ; R82 := R4[0x23d5322f]
 69 [-]: MOVE      R5 R3        ; R5 := R3
 70 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 71 [-]: LOADK     R7 4         ; R7 := 4.000000
 72 [-]: LOADK     R8 K21       ; R8 := "/Lotus/Language/Game/NightmareModeNoShield"
 73 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 74 [-]: CALL      R4 3 1       ; R4(R5,R6)
 75 [-]: GETGLOBAL R4 K22       ; R4 := 0xffd438ab
 76 [-]: CALL      R4 1 2       ; R4 := R4()
 77 [-]: GETGLOBAL R5 K23       ; R5 := 0x0997dbe6
 78 [-]: GETGLOBAL R6 K24       ; R6 := 0xf1f5e051
 79 [-]: GETGLOBAL R7 K25       ; R7 := 0x64fb1586
 80 [-]: GETTABLE  R8 R0 K26    ; R8 := R0["location"]
 81 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 82 [-]: CALL      R6 0 0       ; R6,... := R6(R7,...)
 83 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 84 [-]: GETGLOBAL R6 K27       ; R6 := 0x84883f05
 85 [-]: MOVE      R7 R5        ; R7 := R5
 86 [-]: GETUPVAL  R8 U0        ; R8 := U0
 87 [-]: CALL      R8 1 2       ; R8 := R8()
 88 [-]: MOD       R8 R8 K28    ; R8 := R8 % 365.000000
 89 [-]: CALL      R6 3 1       ; R6(R7,R8)
 90 [-]: GETGLOBAL R6 K29       ; R6 := 0x0c5e62f9
 91 [-]: LOADK     R7 1         ; R7 := 1.000000
 92 [-]: LEN       R8 R3        ; R8 := # R3
 93 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 94 [-]: GETGLOBAL R7 K4        ; R7 := 0x33bdd652
 95 [-]: GETTABLE  R7 R7 K5     ; R82 := R7[0x23d5322f]
 96 [-]: MOVE      R8 R1        ; R8 := R1
 97 [-]: GETTABLE  R9 R3 R6     ; R9 := R3[R6]
 98 [-]: CALL      R7 3 1       ; R7(R8,R9)
 99 [-]: GETGLOBAL R7 K29       ; R7 := 0x0c5e62f9
100 [-]: LOADK     R8 0         ; R8 := 0.000000
101 [-]: LOADK     R9 2         ; R9 := 2.000000
102 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
103 [-]: EQ        0 R7 K30     ; if R7 ~= -1.000000 then PC := 113
104 [-]: JMP       113          ; PC := 113
105 [-]: GETGLOBAL R7 K4        ; R7 := 0x33bdd652
106 [-]: GETTABLE  R7 R7 K5     ; R82 := R7[0x23d5322f]
107 [-]: MOVE      R8 R1        ; R8 := R1
108 [-]: NEWTABLE  R9 2 0       ; R9 := {}
109 [-]: LOADK     R10 2        ; R10 := 2.000000
110 [-]: LOADK     R11 K31      ; R11 := "/Lotus/Language/Game/NightmareModeNoHud"
111 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
112 [-]: CALL      R7 3 1       ; R7(R8,R9)
113 [-]: GETGLOBAL R7 K29       ; R7 := 0x0c5e62f9
114 [-]: LOADK     R8 0         ; R8 := 0.000000
115 [-]: LOADK     R9 3         ; R9 := 3.000000
116 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
117 [-]: EQ        0 R7 K32     ; if R7 ~= 1.000000 then PC := 127
118 [-]: JMP       127          ; PC := 127
119 [-]: GETGLOBAL R7 K4        ; R7 := 0x33bdd652
120 [-]: GETTABLE  R7 R7 K5     ; R82 := R7[0x23d5322f]
121 [-]: MOVE      R8 R1        ; R8 := R1
122 [-]: NEWTABLE  R9 2 0       ; R9 := {}
123 [-]: LOADK     R10 8        ; R10 := 8.000000
124 [-]: LOADK     R11 K33      ; R11 := "/Lotus/Language/Game/NightmareModeLowGrav"
125 [-]: SETLIST   R9 2 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
126 [-]: CALL      R7 3 1       ; R7(R8,R9)
127 [-]: GETGLOBAL R7 K34       ; R7 := 0x4f6851ff
128 [-]: MOVE      R8 R4        ; R8 := R4
129 [-]: CALL      R7 2 1       ; R7(R8)
130 [-]: RETURN    R1 2         ; return R1
131 [-]: RETURN    R0 1         ; return 


; Function #328:
;
; Name:            
; Defined at line: 6579
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x25d99d89
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 0         ; if not R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 2         ; return R0
  9 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1[0x25a6e75e]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 0         ; if not R3 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 2         ; return R0
 17 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0x98b1bb53]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: GETGLOBAL R4 K4        ; R4 := gRandomizedArtifactUpgradeType
 20 [-]: LOADK     R5 1         ; R5 := 1.000000
 21 [-]: LEN       R6 R3        ; R6 := # R3
 22 [-]: LOADK     R7 1         ; R7 := 1.000000
 23 [-]: FORPREP   R5 41        ; R5 -= R7; PC := 41
 24 [-]: GETTABLE  R9 R3 R8     ; R9 := R3[R8]
 25 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["mItemType"]
 26 [-]: GETGLOBAL R10 K1       ; R10 := 0x7b998233
 27 [-]: MOVE      R11 R9       ; R11 := R9
 28 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 29 [-]: TEST      R10 1        ; if R10 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: SELF      R10 R9 K6    ; R11 := R9; R10 := R9[0xf2deaf69]
 32 [-]: MOVE      R12 R4       ; R12 := R4
 33 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 34 [-]: TEST      R10 0        ; if not R10 then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETGLOBAL R10 K7       ; R10 := 0x33bdd652
 37 [-]: GETTABLE  R10 R10 K8   ; R82 := R10[0x23d5322f]
 38 [-]: MOVE      R11 R0       ; R11 := R0
 39 [-]: GETTABLE  R12 R3 R8    ; R12 := R3[R8]
 40 [-]: CALL      R10 3 1      ; R10(R11,R12)
 41 [-]: FORLOOP   R5 24        ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
 42 [-]: RETURN    R0 2         ; return R0
 43 [-]: RETURN    R0 1         ; return 


; Function #329:
;
; Name:            
; Defined at line: 6604
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #330:
;
; Name:            
; Defined at line: 6608
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25d99d89
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADBOOL  R1 0 0       ; R1 := false
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x25a6e75e]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADBOOL  R2 0 0       ; R2 := false
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: CALL      R2 1 2       ; R2 := R2()
 20 [-]: LEN       R2 R2        ; R2 := # R2
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: CALL      R3 1 2       ; R3 := R3()
 23 [-]: LT        1 R3 R2      ; if R3 < R2 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 26
 26 [-]: LOADBOOL  R2 1 0       ; R2 := true
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: RETURN    R0 1         ; return 


; Function #331:
;
; Name:            
; Defined at line: 6622
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #332:
;
; Name:            
; Defined at line: 6626
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R0 0         ; R0 := 0.000000
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 20
  6 [-]: JMP       20           ; PC := 20
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x25a6e75e]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
 11 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xefee6c91]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: SELF      R3 R1 K4     ; R4 := R1; R3 := R1[0xa64e07df]
 14 [-]: LOADK     R5 7         ; R5 := 7.000000
 15 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 16 [-]: MOVE      R0 R3        ; R0 := R3
 17 [-]: LE        0 K6 R2      ; if 30.000000 > R2 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: ADD       R0 R0 K6     ; R0 := R0 + 30.000000
 20 [-]: RETURN    R0 2         ; return R0
 21 [-]: RETURN    R0 1         ; return 


; Function #333:
;
; Name:            
; Defined at line: 6639
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #334:
;
; Name:            
; Defined at line: 6643
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0xb61abfd2]
  2 [-]: LOADK     R4 0         ; R4 := 0.000000
  3 [-]: LOADK     R5 0         ; R5 := 0.000000
  4 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  5 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mInfestationDate"]
  6 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0x56c01834]
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 0         ; if not R3 then PC := 21
  9 [-]: JMP       21           ; PC := 21
 10 [-]: LOADK     R3 -86400    ; R3 := -86400.000000
 11 [-]: GETGLOBAL R4 K4        ; R4 := 0x34291f5c
 12 [-]: GETTABLE  R4 R4 K5     ; R82 := R4[0x397b920f]
 13 [-]: MOVE      R5 R2        ; R5 := R2
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: MUL       R5 R3 R1     ; R5 := R3 * R1
 16 [-]: LE        1 R4 R5      ; if R4 <= R5 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 19
 19 [-]: LOADBOOL  R5 1 0       ; R5 := true
 20 [-]: RETURN    R5 2         ; return R5
 21 [-]: LOADBOOL  R6 0 0       ; R6 := false
 22 [-]: RETURN    R6 2         ; return R6
 23 [-]: RETURN    R0 1         ; return 


; Function #335:
;
; Name:            
; Defined at line: 6658
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R1 1         ; R1 := 1.000000
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  6 [-]: RETURN    R2 0         ; return R2,...
  7 [-]: RETURN    R0 1         ; return 


; Function #336:
;
; Name:            
; Defined at line: 6663
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R1 7         ; R1 := 7.000000
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  6 [-]: RETURN    R2 0         ; return R2,...
  7 [-]: RETURN    R0 1         ; return 


; Function #337:
;
; Name:            
; Defined at line: 6668
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0xa7a2e381]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADBOOL  R1 0 0       ; R1 := false
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 0         ; if not R1 then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETGLOBAL R0 K3        ; R0 := 0x25d99d89
 14 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADBOOL  R1 0 0       ; R1 := false
 20 [-]: RETURN    R1 2         ; return R1
 21 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xfb6d14df]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 0         ; if not R1 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADBOOL  R1 0 0       ; R1 := false
 26 [-]: RETURN    R1 2         ; return R1
 27 [-]: GETGLOBAL R1 K5        ; R1 := 0x89326c93
 28 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x78298275]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 0         ; if not R2 then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: LOADBOOL  R2 0 0       ; R2 := false
 36 [-]: RETURN    R2 2         ; return R2
 37 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1[0xde321e6f]
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xf7d48ee0]
 40 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 41 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 42 [-]: MOVE      R4 R2        ; R4 := R2
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: TEST      R3 1         ; if R3 then PC := 50
 45 [-]: JMP       50           ; PC := 50
 46 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x1ba58c7f]
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: TEST      R3 0         ; if not R3 then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: LOADBOOL  R3 0 0       ; R3 := false
 51 [-]: RETURN    R3 2         ; return R3
 52 [-]: LOADBOOL  R3 1 0       ; R3 := true
 53 [-]: RETURN    R3 2         ; return R3
 54 [-]: RETURN    R0 1         ; return 


; Function #338:
;
; Name:            
; Defined at line: 6699
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 55
  5 [-]: JMP       55           ; PC := 55
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 55
 10 [-]: JMP       55           ; PC := 55
 11 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1[0x3583ccf1]
 12 [-]: GETGLOBAL R4 K2        ; R4 := 0x67652851
 13 [-]: CALL      R4 1 2       ; R4 := R4()
 14 [-]: MOVE      R5 R0        ; R5 := R0
 15 [-]: LOADBOOL  R6 0 0       ; R6 := false
 16 [-]: SELF      R7 R0 K3     ; R8 := R0; R7 := R0[0x1bda579e]
 17 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 18 [-]: CALL      R2 0 1       ; R2(R3,...)
 19 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0x603d617e]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 22 [-]: MOVE      R4 R2        ; R4 := R2
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: TEST      R3 1         ; if R3 then PC := 55
 25 [-]: JMP       55           ; PC := 55
 26 [-]: GETGLOBAL R3 K5        ; R3 := 0x03ea2485
 27 [-]: SELF      R4 R0 K6     ; R5 := R0; R4 := R0[0xde321e6f]
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0xefd0fde2]
 30 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 31 [-]: SELF      R5 R0 K8     ; R6 := R0; R5 := R0[0xebfba9e4]
 32 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 33 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 34 [-]: GETGLOBAL R4 K9        ; R4 := 0x5bced4c4
 35 [-]: GETTABLE  R4 R4 K10    ; R82 := R4[0x55f27c30]
 36 [-]: MOVE      R5 R3        ; R5 := R3
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: GETGLOBAL R5 K9        ; R5 := 0x5bced4c4
 39 [-]: GETTABLE  R5 R5 K10    ; R82 := R5[0x55f27c30]
 40 [-]: MUL       R6 R3 K11    ; R6 := R3 * 10.000000
 41 [-]: MUL       R7 R4 K11    ; R7 := R4 * 10.000000
 42 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
 43 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 44 [-]: SELF      R6 R2 K12    ; R7 := R2; R6 := R2[0xe4162eed]
 45 [-]: LOADK     R8 K13       ; R8 := "UpdateRangeFinder"
 46 [-]: GETGLOBAL R9 K14       ; R9 := 0x64fb1586
 47 [-]: MOVE      R10 R4       ; R10 := R4
 48 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 49 [-]: LOADK     R10 K15      ; R10 := ","
 50 [-]: GETGLOBAL R11 K14      ; R11 := 0x64fb1586
 51 [-]: MOVE      R12 R5       ; R12 := R5
 52 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 53 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 54 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 55 [-]: RETURN    R0 1         ; return 


; Function #339:
;
; Name:            
; Defined at line: 6712
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0[0xc9f6a7d7]
  7 [-]: GETGLOBAL R4 K2        ; R4 := 0x7ed0a956
  8 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Types/Player/PlayerFlashLight"
  9 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 10 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 11 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 1         ; if R3 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0x83da76cb]
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CALL      R3 3 1       ; R3(R4,R5)
 19 [-]: RETURN    R0 1         ; return 


; Function #340:
;
; Name:            
; Defined at line: 6721
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 0         ; if not R4 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R4 K1        ; R4 := ""
  7 [-]: RETURN    R4 2         ; return R4
  8 [-]: GETUPVAL  R4 U0        ; R4 := U0
  9 [-]: GETTABLE  R4 R4 K2     ; R82 := R4[0x06d055f9]
 10 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 13
 13 [-]: LOADBOOL  R5 1 0       ; R5 := true
 14 [-]: MOVE      R6 R2        ; R6 := R2
 15 [-]: LOADK     R7 K4        ; R7 := "#FFFFFF"
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K2     ; R82 := R5[0x06d055f9]
 19 [-]: EQ        0 R3 K3      ; if R3 ~= nil then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 22
 22 [-]: LOADBOOL  R6 1 0       ; R6 := true
 23 [-]: MOVE      R7 R3        ; R7 := R3
 24 [-]: LOADK     R8 K4        ; R8 := "#FFFFFF"
 25 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 26 [-]: LOADK     R6 K5        ; R6 := "<p><font color=\""
 27 [-]: MOVE      R7 R5        ; R7 := R5
 28 [-]: LOADK     R8 K6        ; R8 := "\">"
 29 [-]: CONCAT    R6 R6 R8     ; R6 := R6 .. R7 .. R8
 30 [-]: EQ        0 R1 K7      ; if R1 ~= 2.000000 then PC := 41
 31 [-]: JMP       41           ; PC := 41
 32 [-]: SELF      R7 R0 K8     ; R8 := R0; R7 := R0[0x42b04007]
 33 [-]: LOADK     R9 K9        ; R9 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpTrading"
 34 [-]: LOADBOOL  R10 0 0      ; R10 := false
 35 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 36 [-]: MOVE      R8 R6        ; R8 := R6
 37 [-]: MOVE      R9 R7        ; R9 := R7
 38 [-]: LOADK     R10 K10      ; R10 := "<br>"
 39 [-]: CONCAT    R6 R8 R10    ; R6 := R8 .. R9 .. R10
 40 [-]: JMP       75           ; PC := 75
 41 [-]: EQ        0 R1 K11     ; if R1 ~= 3.000000 then PC := 52
 42 [-]: JMP       52           ; PC := 52
 43 [-]: SELF      R8 R0 K8     ; R9 := R0; R8 := R0[0x42b04007]
 44 [-]: LOADK     R10 K12      ; R10 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpSyndicates"
 45 [-]: LOADBOOL  R11 0 0      ; R11 := false
 46 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 47 [-]: MOVE      R9 R6        ; R9 := R6
 48 [-]: MOVE      R10 R8       ; R10 := R8
 49 [-]: LOADK     R11 K10      ; R11 := "<br>"
 50 [-]: CONCAT    R6 R9 R11    ; R6 := R9 .. R10 .. R11
 51 [-]: JMP       75           ; PC := 75
 52 [-]: EQ        1 R1 K13     ; if R1 == 5.000000 then PC := 56
 53 [-]: JMP       56           ; PC := 56
 54 [-]: EQ        0 R1 K14     ; if R1 ~= 10.000000 then PC := 75
 55 [-]: JMP       75           ; PC := 75
 56 [-]: SELF      R9 R0 K8     ; R10 := R0; R9 := R0[0x42b04007]
 57 [-]: LOADK     R11 K15      ; R11 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpExtraDroneSlot"
 58 [-]: LOADBOOL  R12 0 0      ; R12 := false
 59 [-]: NEWTABLE  R13 0 2      ; R13 := {}
 60 [-]: LOADK     R14 K17      ; R14 := "</font><font color=\""
 61 [-]: MOVE      R15 R4       ; R15 := R4
 62 [-]: LOADK     R16 K6       ; R16 := "\">"
 63 [-]: CONCAT    R14 R14 R16  ; R14 := R14 .. R15 .. R16
 64 [-]: SETTABLE  R13 K16 R14  ; R13[0x9c1f3b5a] := R14
 65 [-]: LOADK     R14 K17      ; R14 := "</font><font color=\""
 66 [-]: MOVE      R15 R5       ; R15 := R5
 67 [-]: LOADK     R16 K6       ; R16 := "\">"
 68 [-]: CONCAT    R14 R14 R16  ; R14 := R14 .. R15 .. R16
 69 [-]: SETTABLE  R13 K18 R14  ; R13["CLOSE_COLOR"] := R14
 70 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 71 [-]: MOVE      R10 R6       ; R10 := R6
 72 [-]: MOVE      R11 R9       ; R11 := R9
 73 [-]: LOADK     R12 K10      ; R12 := "<br>"
 74 [-]: CONCAT    R6 R10 R12   ; R6 := R10 .. R11 .. R12
 75 [-]: EQ        0 R1 K19     ; if R1 ~= 30.000000 then PC := 154
 76 [-]: JMP       154          ; PC := 154
 77 [-]: SELF      R10 R0 K8    ; R11 := R0; R10 := R0[0x42b04007]
 78 [-]: LOADK     R12 K20      ; R12 := "/Lotus/Language/Blessings/MasteryRankUpBlessingDesc"
 79 [-]: LOADBOOL  R13 0 0      ; R13 := false
 80 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 81 [-]: MOVE      R11 R6       ; R11 := R6
 82 [-]: MOVE      R12 R10      ; R12 := R10
 83 [-]: LOADK     R13 K10      ; R13 := "<br>"
 84 [-]: CONCAT    R6 R11 R13   ; R6 := R11 .. R12 .. R13
 85 [-]: MOVE      R11 R6       ; R11 := R6
 86 [-]: GETGLOBAL R12 K21      ; R12 := 0x5f0788c4
 87 [-]: SELF      R13 R0 K8    ; R14 := R0; R13 := R0[0x42b04007]
 88 [-]: LOADK     R15 K22      ; R15 := "/Lotus/Language/Emotes/Rank30EmoteName"
 89 [-]: LOADBOOL  R16 0 0      ; R16 := false
 90 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 91 [-]: LOADK     R14 K23      ; R14 := " ("
 92 [-]: SELF      R15 R0 K8    ; R16 := R0; R15 := R0[0x42b04007]
 93 [-]: LOADK     R17 K24      ; R17 := "/Lotus/Language/Emotes/Emote"
 94 [-]: LOADBOOL  R18 0 0      ; R18 := false
 95 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 96 [-]: LOADK     R16 K25      ; R16 := ")"
 97 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
 98 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 99 [-]: LOADK     R13 K10      ; R13 := "<br>"
100 [-]: CONCAT    R6 R11 R13   ; R6 := R11 .. R12 .. R13
101 [-]: MOVE      R11 R6       ; R11 := R6
102 [-]: GETGLOBAL R12 K21      ; R12 := 0x5f0788c4
103 [-]: SELF      R13 R0 K8    ; R14 := R0; R13 := R0[0x42b04007]
104 [-]: LOADK     R15 K26      ; R15 := "/Lotus/Language/ShipDecorations/HoodOrnament_MR30Name"
105 [-]: LOADBOOL  R16 0 0      ; R16 := false
106 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
107 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
108 [-]: LOADK     R13 K10      ; R13 := "<br>"
109 [-]: CONCAT    R6 R11 R13   ; R6 := R11 .. R12 .. R13
110 [-]: MOVE      R11 R6       ; R11 := R6
111 [-]: GETGLOBAL R12 K21      ; R12 := 0x5f0788c4
112 [-]: SELF      R13 R0 K8    ; R14 := R0; R13 := R0[0x42b04007]
113 [-]: LOADK     R15 K27      ; R15 := "/Lotus/Language/Cosmetics/TrueMasterEmoji"
114 [-]: LOADBOOL  R16 0 0      ; R16 := false
115 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
116 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
117 [-]: LOADK     R13 K10      ; R13 := "<br>"
118 [-]: CONCAT    R6 R11 R13   ; R6 := R11 .. R12 .. R13
119 [-]: MOVE      R11 R6       ; R11 := R6
120 [-]: LOADK     R12 K28      ; R12 := "<font color=\""
121 [-]: MOVE      R13 R4       ; R13 := R4
122 [-]: LOADK     R14 K29      ; R14 := "\">+3</font> "
123 [-]: SELF      R15 R0 K8    ; R16 := R0; R15 := R0[0x42b04007]
124 [-]: LOADK     R17 K30      ; R17 := "/Lotus/Language/Consumables/FormaUmbra"
125 [-]: LOADBOOL  R18 0 0      ; R18 := false
126 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
127 [-]: LOADK     R16 K10      ; R16 := "<br>"
128 [-]: CONCAT    R6 R11 R16   ; R6 := R11 .. R12 .. R13 .. R14 .. R15 .. R16
129 [-]: MOVE      R11 R6       ; R11 := R6
130 [-]: LOADK     R12 K28      ; R12 := "<font color=\""
131 [-]: MOVE      R13 R4       ; R13 := R4
132 [-]: LOADK     R14 K31      ; R14 := "\">+15</font> "
133 [-]: GETGLOBAL R15 K21      ; R15 := 0x5f0788c4
134 [-]: SELF      R16 R0 K8    ; R17 := R0; R16 := R0[0x42b04007]
135 [-]: LOADK     R18 K32      ; R18 := "/Lotus/Language/Menu/Loadout_Slot"
136 [-]: LOADBOOL  R19 0 0      ; R19 := false
137 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
138 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
139 [-]: LOADK     R16 K10      ; R16 := "<br>"
140 [-]: CONCAT    R6 R11 R16   ; R6 := R11 .. R12 .. R13 .. R14 .. R15 .. R16
141 [-]: MOVE      R11 R6       ; R11 := R6
142 [-]: LOADK     R12 K28      ; R12 := "<font color=\""
143 [-]: MOVE      R13 R4       ; R13 := R4
144 [-]: LOADK     R14 K33      ; R14 := "\">+30</font> "
145 [-]: GETGLOBAL R15 K21      ; R15 := 0x5f0788c4
146 [-]: SELF      R16 R0 K8    ; R17 := R0; R16 := R0[0x42b04007]
147 [-]: LOADK     R18 K34      ; R18 := "/Lotus/Language/Menu/ItemInventory_SlotsRandomMod"
148 [-]: LOADBOOL  R19 0 0      ; R19 := false
149 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
150 [-]: CALL      R15 0 2      ; R15 := R15(R16,...)
151 [-]: LOADK     R16 K10      ; R16 := "<br>"
152 [-]: CONCAT    R6 R11 R16   ; R6 := R11 .. R12 .. R13 .. R14 .. R15 .. R16
153 [-]: JMP       176          ; PC := 176
154 [-]: MOD       R11 R1 K7    ; R11 := R1 % 2.000000
155 [-]: EQ        0 R11 K35    ; if R11 ~= 0.000000 then PC := 176
156 [-]: JMP       176          ; PC := 176
157 [-]: SELF      R11 R0 K8    ; R12 := R0; R11 := R0[0x42b04007]
158 [-]: LOADK     R13 K36      ; R13 := "/Lotus/Language/Menu/EndOfMatch_LoadOutSlot"
159 [-]: LOADBOOL  R14 0 0      ; R14 := false
160 [-]: NEWTABLE  R15 0 2      ; R15 := {}
161 [-]: LOADK     R16 K17      ; R16 := "</font><font color=\""
162 [-]: MOVE      R17 R4       ; R17 := R4
163 [-]: LOADK     R18 K6       ; R18 := "\">"
164 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
165 [-]: SETTABLE  R15 K16 R16  ; R15[0x9c1f3b5a] := R16
166 [-]: LOADK     R16 K17      ; R16 := "</font><font color=\""
167 [-]: MOVE      R17 R5       ; R17 := R5
168 [-]: LOADK     R18 K6       ; R18 := "\">"
169 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
170 [-]: SETTABLE  R15 K18 R16  ; R15["CLOSE_COLOR"] := R16
171 [-]: CALL      R11 5 2      ; R11 := R11(R12,R13,R14,R15)
172 [-]: MOVE      R12 R6       ; R12 := R6
173 [-]: MOVE      R13 R11      ; R13 := R11
174 [-]: LOADK     R14 K10      ; R14 := "<br>"
175 [-]: CONCAT    R6 R12 R14   ; R6 := R12 .. R13 .. R14
176 [-]: MOVE      R12 R6       ; R12 := R6
177 [-]: SELF      R13 R0 K8    ; R14 := R0; R13 := R0[0x42b04007]
178 [-]: LOADK     R15 K37      ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpStanding"
179 [-]: LOADBOOL  R16 1 0      ; R16 := true
180 [-]: NEWTABLE  R17 0 3      ; R17 := {}
181 [-]: SETTABLE  R17 K38 K39  ; R17["NUM"] := 500.000000
182 [-]: LOADK     R18 K17      ; R18 := "</font><font color=\""
183 [-]: MOVE      R19 R4       ; R19 := R4
184 [-]: LOADK     R20 K6       ; R20 := "\">"
185 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
186 [-]: SETTABLE  R17 K16 R18  ; R17[0x9c1f3b5a] := R18
187 [-]: LOADK     R18 K17      ; R18 := "</font><font color=\""
188 [-]: MOVE      R19 R5       ; R19 := R5
189 [-]: LOADK     R20 K6       ; R20 := "\">"
190 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
191 [-]: SETTABLE  R17 K18 R18  ; R17["CLOSE_COLOR"] := R18
192 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
193 [-]: LOADK     R14 K10      ; R14 := "<br>"
194 [-]: CONCAT    R6 R12 R14   ; R6 := R12 .. R13 .. R14
195 [-]: GETGLOBAL R12 K0       ; R12 := 0x7b998233
196 [-]: GETGLOBAL R13 K40      ; R13 := 0x25d99d89
197 [-]: CALL      R12 2 2      ; R12 := R12(R13)
198 [-]: TEST      R12 1        ; if R12 then PC := 205
199 [-]: JMP       205          ; PC := 205
200 [-]: GETGLOBAL R12 K40      ; R12 := 0x25d99d89
201 [-]: SELF      R12 R12 K41  ; R13 := R12; R12 := R12[0xd8159207]
202 [-]: CALL      R12 2 2      ; R12 := R12(R13)
203 [-]: LE        0 K7 R12     ; if 2.000000 > R12 then PC := 224
204 [-]: JMP       224          ; PC := 224
205 [-]: MOVE      R12 R6       ; R12 := R6
206 [-]: SELF      R13 R0 K8    ; R14 := R0; R13 := R0[0x42b04007]
207 [-]: LOADK     R15 K43      ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpFocusCapacity"
208 [-]: LOADBOOL  R16 1 0      ; R16 := true
209 [-]: NEWTABLE  R17 0 3      ; R17 := {}
210 [-]: SETTABLE  R17 K38 K44  ; R17["NUM"] := 1000.000000
211 [-]: LOADK     R18 K17      ; R18 := "</font><font color=\""
212 [-]: MOVE      R19 R4       ; R19 := R4
213 [-]: LOADK     R20 K6       ; R20 := "\">"
214 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
215 [-]: SETTABLE  R17 K16 R18  ; R17[0x9c1f3b5a] := R18
216 [-]: LOADK     R18 K17      ; R18 := "</font><font color=\""
217 [-]: MOVE      R19 R5       ; R19 := R5
218 [-]: LOADK     R20 K6       ; R20 := "\">"
219 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
220 [-]: SETTABLE  R17 K18 R18  ; R17["CLOSE_COLOR"] := R18
221 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
222 [-]: LOADK     R14 K10      ; R14 := "<br>"
223 [-]: CONCAT    R6 R12 R14   ; R6 := R12 .. R13 .. R14
224 [-]: LE        0 R1 K19     ; if R1 > 30.000000 then PC := 245
225 [-]: JMP       245          ; PC := 245
226 [-]: MOVE      R12 R6       ; R12 := R6
227 [-]: SELF      R13 R0 K8    ; R14 := R0; R13 := R0[0x42b04007]
228 [-]: LOADK     R15 K45      ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpCapacity"
229 [-]: LOADBOOL  R16 0 0      ; R16 := false
230 [-]: NEWTABLE  R17 0 2      ; R17 := {}
231 [-]: LOADK     R18 K17      ; R18 := "</font><font color=\""
232 [-]: MOVE      R19 R4       ; R19 := R4
233 [-]: LOADK     R20 K6       ; R20 := "\">"
234 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
235 [-]: SETTABLE  R17 K16 R18  ; R17[0x9c1f3b5a] := R18
236 [-]: LOADK     R18 K17      ; R18 := "</font><font color=\""
237 [-]: MOVE      R19 R5       ; R19 := R5
238 [-]: LOADK     R20 K6       ; R20 := "\">"
239 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
240 [-]: SETTABLE  R17 K18 R18  ; R17["CLOSE_COLOR"] := R18
241 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
242 [-]: LOADK     R14 K10      ; R14 := "<br>"
243 [-]: CONCAT    R6 R12 R14   ; R6 := R12 .. R13 .. R14
244 [-]: JMP       264          ; PC := 264
245 [-]: MOVE      R12 R6       ; R12 := R6
246 [-]: SELF      R13 R0 K8    ; R14 := R0; R13 := R0[0x42b04007]
247 [-]: LOADK     R15 K46      ; R15 := "/Lotus/Language/MasteryTest/MasteryRankUp_LegendaryCore"
248 [-]: LOADBOOL  R16 1 0      ; R16 := true
249 [-]: NEWTABLE  R17 0 3      ; R17 := {}
250 [-]: SETTABLE  R17 K38 K47  ; R17["NUM"] := 1.000000
251 [-]: LOADK     R18 K17      ; R18 := "</font><font color=\""
252 [-]: MOVE      R19 R4       ; R19 := R4
253 [-]: LOADK     R20 K6       ; R20 := "\">"
254 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
255 [-]: SETTABLE  R17 K16 R18  ; R17[0x9c1f3b5a] := R18
256 [-]: LOADK     R18 K17      ; R18 := "</font><font color=\""
257 [-]: MOVE      R19 R5       ; R19 := R5
258 [-]: LOADK     R20 K6       ; R20 := "\">"
259 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
260 [-]: SETTABLE  R17 K18 R18  ; R17["CLOSE_COLOR"] := R18
261 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
262 [-]: LOADK     R14 K10      ; R14 := "<br>"
263 [-]: CONCAT    R6 R12 R14   ; R6 := R12 .. R13 .. R14
264 [-]: MOVE      R12 R6       ; R12 := R6
265 [-]: SELF      R13 R0 K8    ; R14 := R0; R13 := R0[0x42b04007]
266 [-]: LOADK     R15 K48      ; R15 := "/Lotus/Language/Menu/EndOfMatch_MasteryRankUpReactant"
267 [-]: LOADBOOL  R16 1 0      ; R16 := true
268 [-]: NEWTABLE  R17 0 3      ; R17 := {}
269 [-]: SETTABLE  R17 K38 K49  ; R17["NUM"] := 50.000000
270 [-]: LOADK     R18 K17      ; R18 := "</font><font color=\""
271 [-]: MOVE      R19 R4       ; R19 := R4
272 [-]: LOADK     R20 K6       ; R20 := "\">"
273 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
274 [-]: SETTABLE  R17 K16 R18  ; R17[0x9c1f3b5a] := R18
275 [-]: LOADK     R18 K17      ; R18 := "</font><font color=\""
276 [-]: MOVE      R19 R5       ; R19 := R5
277 [-]: LOADK     R20 K6       ; R20 := "\">"
278 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
279 [-]: SETTABLE  R17 K18 R18  ; R17["CLOSE_COLOR"] := R18
280 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
281 [-]: CONCAT    R6 R12 R13   ; R6 := R12 .. R13
282 [-]: MOVE      R12 R6       ; R12 := R6
283 [-]: LOADK     R13 K50      ; R13 := "</font></p>"
284 [-]: CONCAT    R6 R12 R13   ; R6 := R12 .. R13
285 [-]: RETURN    R6 2         ; return R6
286 [-]: RETURN    R0 1         ; return 


; Function #341:
;
; Name:            
; Defined at line: 6773
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  2 [-]: EQ        1 R0 K1      ; if R0 == 0.000000 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: EQ        0 R0 K2      ; if R0 ~= 3.000000 then PC := 30
  5 [-]: JMP       30           ; PC := 30
  6 [-]: EQ        0 R1 K1      ; if R1 ~= 0.000000 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: SELF      R4 R2 K3     ; R5 := R2; R4 := R2[0x21a3da0c]
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: MOVE      R3 R4        ; R3 := R4
 11 [-]: JMP       120          ; PC := 120
 12 [-]: EQ        0 R1 K2      ; if R1 ~= 3.000000 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: SELF      R4 R2 K4     ; R5 := R2; R4 := R2[0x0bf14f02]
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: MOVE      R3 R4        ; R3 := R4
 17 [-]: JMP       120          ; PC := 120
 18 [-]: EQ        0 R1 K5      ; if R1 ~= 2.000000 then PC := 24
 19 [-]: JMP       24           ; PC := 24
 20 [-]: SELF      R4 R2 K6     ; R5 := R2; R4 := R2[0x57d88957]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: MOVE      R3 R4        ; R3 := R4
 23 [-]: JMP       120          ; PC := 120
 24 [-]: EQ        0 R1 K7      ; if R1 ~= 1.000000 then PC := 120
 25 [-]: JMP       120          ; PC := 120
 26 [-]: SELF      R4 R2 K8     ; R5 := R2; R4 := R2[0x215bf396]
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: MOVE      R3 R4        ; R3 := R4
 29 [-]: JMP       120          ; PC := 120
 30 [-]: EQ        0 R0 K5      ; if R0 ~= 2.000000 then PC := 50
 31 [-]: JMP       50           ; PC := 50
 32 [-]: EQ        0 R1 K1      ; if R1 ~= 0.000000 then PC := 38
 33 [-]: JMP       38           ; PC := 38
 34 [-]: SELF      R4 R2 K9     ; R5 := R2; R4 := R2[0x4bb8609a]
 35 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 36 [-]: MOVE      R3 R4        ; R3 := R4
 37 [-]: JMP       120          ; PC := 120
 38 [-]: EQ        0 R1 K2      ; if R1 ~= 3.000000 then PC := 44
 39 [-]: JMP       44           ; PC := 44
 40 [-]: SELF      R4 R2 K10    ; R5 := R2; R4 := R2[0x3218c3b0]
 41 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 42 [-]: MOVE      R3 R4        ; R3 := R4
 43 [-]: JMP       120          ; PC := 120
 44 [-]: EQ        0 R1 K5      ; if R1 ~= 2.000000 then PC := 120
 45 [-]: JMP       120          ; PC := 120
 46 [-]: SELF      R4 R2 K11    ; R5 := R2; R4 := R2[0x6f7b67d7]
 47 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 48 [-]: MOVE      R3 R4        ; R3 := R4
 49 [-]: JMP       120          ; PC := 120
 50 [-]: EQ        0 R0 K12     ; if R0 ~= 6.000000 then PC := 58
 51 [-]: JMP       58           ; PC := 58
 52 [-]: EQ        0 R1 K1      ; if R1 ~= 0.000000 then PC := 120
 53 [-]: JMP       120          ; PC := 120
 54 [-]: SELF      R4 R2 K13    ; R5 := R2; R4 := R2[0x738deb95]
 55 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 56 [-]: MOVE      R3 R4        ; R3 := R4
 57 [-]: JMP       120          ; PC := 120
 58 [-]: EQ        0 R0 K7      ; if R0 ~= 1.000000 then PC := 113
 59 [-]: JMP       113          ; PC := 113
 60 [-]: EQ        0 R1 K1      ; if R1 ~= 0.000000 then PC := 109
 61 [-]: JMP       109          ; PC := 109
 62 [-]: SELF      R4 R2 K14    ; R5 := R2; R4 := R2[0x2a207127]
 63 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 64 [-]: MOVE      R3 R4        ; R3 := R4
 65 [-]: TEST      R3 1         ; if R3 then PC := 69
 66 [-]: JMP       69           ; PC := 69
 67 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 68 [-]: MOVE      R3 R4        ; R3 := R4
 69 [-]: SELF      R4 R2 K15    ; R5 := R2; R4 := R2[0x91a3eddf]
 70 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 71 [-]: LOADK     R5 1         ; R5 := 1.000000
 72 [-]: LEN       R6 R4        ; R6 := # R4
 73 [-]: LOADK     R7 1         ; R7 := 1.000000
 74 [-]: FORPREP   R5 80        ; R5 -= R7; PC := 80
 75 [-]: GETGLOBAL R9 K16       ; R9 := 0x33bdd652
 76 [-]: GETTABLE  R9 R9 K17    ; R82 := R9[0x23d5322f]
 77 [-]: MOVE      R10 R3       ; R10 := R3
 78 [-]: GETTABLE  R11 R4 R8    ; R11 := R4[R8]
 79 [-]: CALL      R9 3 1       ; R9(R10,R11)
 80 [-]: FORLOOP   R5 75        ; R5 += R7; if R5 <= R6 then begin PC := 75; R8 := R5 end
 81 [-]: SELF      R9 R2 K18    ; R10 := R2; R9 := R2[0xa855881a]
 82 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 83 [-]: LOADK     R10 1        ; R10 := 1.000000
 84 [-]: LEN       R11 R9       ; R11 := # R9
 85 [-]: LOADK     R12 1        ; R12 := 1.000000
 86 [-]: FORPREP   R10 107      ; R10 -= R12; PC := 107
 87 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
 88 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["mDetails"]
 89 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["mStatus"]
 90 [-]: EQ        1 R14 K2     ; if R14 == 3.000000 then PC := 107
 91 [-]: JMP       107          ; PC := 107
 92 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
 93 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["mDetails"]
 94 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["mStatus"]
 95 [-]: EQ        1 R14 K1     ; if R14 == 0.000000 then PC := 107
 96 [-]: JMP       107          ; PC := 107
 97 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
 98 [-]: GETTABLE  R14 R14 K19  ; R14 := R14["mDetails"]
 99 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["mStatus"]
100 [-]: EQ        1 R14 K7     ; if R14 == 1.000000 then PC := 107
101 [-]: JMP       107          ; PC := 107
102 [-]: GETGLOBAL R14 K16      ; R14 := 0x33bdd652
103 [-]: GETTABLE  R14 R14 K17  ; R82 := R14[0x23d5322f]
104 [-]: MOVE      R15 R3       ; R15 := R3
105 [-]: GETTABLE  R16 R9 R13   ; R16 := R9[R13]
106 [-]: CALL      R14 3 1      ; R14(R15,R16)
107 [-]: FORLOOP   R10 87       ; R10 += R12; if R10 <= R11 then begin PC := 87; R13 := R10 end
108 [-]: JMP       120          ; PC := 120
109 [-]: SELF      R14 R2 K21   ; R15 := R2; R14 := R2[0xa2c6d8b7]
110 [-]: CALL      R14 2 2      ; R14 := R14(R15)
111 [-]: MOVE      R3 R14       ; R3 := R14
112 [-]: JMP       120          ; PC := 120
113 [-]: EQ        0 R0 K22     ; if R0 ~= 7.000000 then PC := 120
114 [-]: JMP       120          ; PC := 120
115 [-]: EQ        0 R1 K1      ; if R1 ~= 0.000000 then PC := 120
116 [-]: JMP       120          ; PC := 120
117 [-]: SELF      R14 R2 K23   ; R15 := R2; R14 := R2[0x8d6f4300]
118 [-]: CALL      R14 2 2      ; R14 := R14(R15)
119 [-]: MOVE      R3 R14       ; R3 := R14
120 [-]: RETURN    R3 2         ; return R3
121 [-]: RETURN    R0 1         ; return 


; Function #342:
;
; Name:            
; Defined at line: 6833
; #Upvalues:       3
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  35

  1 [-]: LOADK     R5 3         ; R5 := 3.000000
  2 [-]: NEWTABLE  R6 3 0       ; R6 := {}
  3 [-]: NEWTABLE  R7 0 2       ; R7 := {}
  4 [-]: SETTABLE  R7 K0 K1     ; R7["IsSentinel"] := false
  5 [-]: SETTABLE  R7 K2 K4     ; R7["Id"] := 0.000000
  6 [-]: NEWTABLE  R8 0 2       ; R8 := {}
  7 [-]: SETTABLE  R8 K0 K1     ; R8["IsSentinel"] := false
  8 [-]: SETTABLE  R8 K2 K5     ; R8["Id"] := 2.000000
  9 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 10 [-]: SETTABLE  R9 K0 K1     ; R9["IsSentinel"] := false
 11 [-]: SETTABLE  R9 K2 K6     ; R9["Id"] := 3.000000
 12 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 13 [-]: EQ        1 R2 K4      ; if R2 == 0.000000 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: EQ        0 R2 K6      ; if R2 ~= 3.000000 then PC := 26
 16 [-]: JMP       26           ; PC := 26
 17 [-]: GETGLOBAL R7 K7        ; R7 := 0x33bdd652
 18 [-]: GETTABLE  R7 R7 K8     ; R82 := R7[0x23d5322f]
 19 [-]: MOVE      R8 R6        ; R8 := R6
 20 [-]: LOADK     R9 3         ; R9 := 3.000000
 21 [-]: NEWTABLE  R10 0 2      ; R10 := {}
 22 [-]: SETTABLE  R10 K0 K1    ; R10["IsSentinel"] := false
 23 [-]: SETTABLE  R10 K2 K9    ; R10["Id"] := 1.000000
 24 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 25 [-]: LOADK     R5 4         ; R5 := 4.000000
 26 [-]: EQ        1 R1 K10     ; if R1 == nil then PC := 42
 27 [-]: JMP       42           ; PC := 42
 28 [-]: GETGLOBAL R7 K7        ; R7 := 0x33bdd652
 29 [-]: GETTABLE  R7 R7 K8     ; R82 := R7[0x23d5322f]
 30 [-]: MOVE      R8 R6        ; R8 := R6
 31 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 32 [-]: SETTABLE  R9 K0 K11    ; R9["IsSentinel"] := true
 33 [-]: SETTABLE  R9 K2 K4     ; R9["Id"] := 0.000000
 34 [-]: CALL      R7 3 1       ; R7(R8,R9)
 35 [-]: GETGLOBAL R7 K7        ; R7 := 0x33bdd652
 36 [-]: GETTABLE  R7 R7 K8     ; R82 := R7[0x23d5322f]
 37 [-]: MOVE      R8 R6        ; R8 := R6
 38 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 39 [-]: SETTABLE  R9 K0 K11    ; R9["IsSentinel"] := true
 40 [-]: SETTABLE  R9 K2 K5     ; R9["Id"] := 2.000000
 41 [-]: CALL      R7 3 1       ; R7(R8,R9)
 42 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 43 [-]: LOADNIL   R8 R8        ; R8 := nil
 44 [-]: GETGLOBAL R9 K12       ; R9 := 0x7b998233
 45 [-]: MOVE      R10 R4       ; R10 := R4
 46 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 47 [-]: TEST      R9 1         ; if R9 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: LOADK     R8 K13       ; R8 := "<p>"
 50 [-]: GETUPVAL  R9 U0        ; R9 := U0
 51 [-]: CALL      R9 1 3       ; R9,R10 := R9()
 52 [-]: LOADK     R11 1        ; R11 := 1.000000
 53 [-]: LEN       R12 R6       ; R12 := # R6
 54 [-]: LOADK     R13 1        ; R13 := 1.000000
 55 [-]: FORPREP   R11 194      ; R11 -= R13; PC := 194
 56 [-]: GETUPVAL  R15 U1       ; R15 := U1
 57 [-]: GETTABLE  R15 R15 K14  ; R82 := R15[0x06d055f9]
 58 [-]: EQ        1 R14 R5     ; if R14 == R5 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: LOADBOOL  R16 0 1      ; R16 := false; PC := 61
 61 [-]: LOADBOOL  R16 1 0      ; R16 := true
 62 [-]: LOADK     R17 K15      ; R17 := ""
 63 [-]: LOADK     R18 K16      ; R18 := "<br>"
 64 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 65 [-]: GETUPVAL  R16 U1       ; R16 := U1
 66 [-]: GETTABLE  R16 R16 K14  ; R82 := R16[0x06d055f9]
 67 [-]: GETTABLE  R17 R6 R14   ; R17 := R6[R14]
 68 [-]: GETTABLE  R17 R17 K0   ; R17 := R17["IsSentinel"]
 69 [-]: MOVE      R18 R1       ; R18 := R1
 70 [-]: MOVE      R19 R0       ; R19 := R0
 71 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 72 [-]: GETGLOBAL R17 K12      ; R17 := 0x7b998233
 73 [-]: MOVE      R18 R16      ; R18 := R16
 74 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 75 [-]: TEST      R17 1        ; if R17 then PC := 194
 76 [-]: JMP       194          ; PC := 194
 77 [-]: SELF      R17 R16 K17  ; R18 := R16; R17 := R16[0x2abbe722]
 78 [-]: GETTABLE  R19 R6 R14   ; R19 := R6[R14]
 79 [-]: GETTABLE  R19 R19 K2   ; R19 := R19["Id"]
 80 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 81 [-]: GETTABLE  R18 R17 K18  ; R18 := R17["mItemId"]
 82 [-]: GETTABLE  R18 R18 K19  ; R18 := R18["mId"]
 83 [-]: GETGLOBAL R19 K3       ; R19 := 0x6c97a788
 84 [-]: GETTABLE  R19 R19 K20  ; R19 := R19["InvalidItemID"]
 85 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 177
 86 [-]: JMP       177          ; PC := 177
 87 [-]: GETUPVAL  R18 U2       ; R18 := U2
 88 [-]: GETUPVAL  R19 U1       ; R19 := U1
 89 [-]: GETTABLE  R19 R19 K14  ; R82 := R19[0x06d055f9]
 90 [-]: GETTABLE  R20 R6 R14   ; R20 := R6[R14]
 91 [-]: GETTABLE  R20 R20 K0   ; R20 := R20["IsSentinel"]
 92 [-]: LOADK     R21 1        ; R21 := 1.000000
 93 [-]: MOVE      R22 R2       ; R22 := R2
 94 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
 95 [-]: GETTABLE  R20 R6 R14   ; R20 := R6[R14]
 96 [-]: GETTABLE  R20 R20 K2   ; R20 := R20["Id"]
 97 [-]: MOVE      R21 R3       ; R21 := R3
 98 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
 99 [-]: LOADK     R19 1        ; R19 := 1.000000
100 [-]: LEN       R20 R18      ; R20 := # R18
101 [-]: LOADK     R21 1        ; R21 := 1.000000
102 [-]: FORPREP   R19 175      ; R19 -= R21; PC := 175
103 [-]: GETTABLE  R23 R18 R22  ; R23 := R18[R22]
104 [-]: GETTABLE  R23 R23 K18  ; R23 := R23["mItemId"]
105 [-]: GETTABLE  R23 R23 K19  ; R23 := R23["mId"]
106 [-]: GETTABLE  R24 R17 K18  ; R24 := R17["mItemId"]
107 [-]: GETTABLE  R24 R24 K19  ; R24 := R24["mId"]
108 [-]: EQ        0 R23 R24    ; if R23 ~= R24 then PC := 175
109 [-]: JMP       175          ; PC := 175
110 [-]: GETGLOBAL R23 K7       ; R23 := 0x33bdd652
111 [-]: GETTABLE  R23 R23 K8   ; R82 := R23[0x23d5322f]
112 [-]: MOVE      R24 R7       ; R24 := R7
113 [-]: GETTABLE  R25 R18 R22  ; R25 := R18[R22]
114 [-]: GETTABLE  R25 R25 K21  ; R25 := R25["mItemType"]
115 [-]: CALL      R23 3 1      ; R23(R24,R25)
116 [-]: GETGLOBAL R23 K12      ; R23 := 0x7b998233
117 [-]: MOVE      R24 R4       ; R24 := R4
118 [-]: CALL      R23 2 2      ; R23 := R23(R24)
119 [-]: TEST      R23 1        ; if R23 then PC := 194
120 [-]: JMP       194          ; PC := 194
121 [-]: GETTABLE  R23 R6 R14   ; R23 := R6[R14]
122 [-]: GETTABLE  R23 R23 K0   ; R23 := R23["IsSentinel"]
123 [-]: TEST      R23 1        ; if R23 then PC := 194
124 [-]: JMP       194          ; PC := 194
125 [-]: SELF      R23 R4 K22   ; R24 := R4; R23 := R4[0x105074fb]
126 [-]: GETTABLE  R25 R18 R22  ; R25 := R18[R22]
127 [-]: GETTABLE  R25 R25 K21  ; R25 := R25["mItemType"]
128 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
129 [-]: GETGLOBAL R24 K12      ; R24 := 0x7b998233
130 [-]: MOVE      R25 R23      ; R25 := R23
131 [-]: CALL      R24 2 2      ; R24 := R24(R25)
132 [-]: TEST      R24 1        ; if R24 then PC := 167
133 [-]: JMP       167          ; PC := 167
134 [-]: LOADK     R24 0        ; R24 := 0.000000
135 [-]: GETTABLE  R25 R18 R22  ; R25 := R18[R22]
136 [-]: GETTABLE  R25 R25 K23  ; R25 := R25["mXP"]
137 [-]: EQ        1 R25 K10    ; if R25 == nil then PC := 147
138 [-]: JMP       147          ; PC := 147
139 [-]: GETGLOBAL R25 K24      ; R25 := 0xa94df70b
140 [-]: SELF      R25 R25 K25  ; R26 := R25; R25 := R25[0x8427bf69]
141 [-]: GETTABLE  R27 R18 R22  ; R27 := R18[R22]
142 [-]: GETTABLE  R27 R27 K23  ; R27 := R27["mXP"]
143 [-]: GETTABLE  R28 R18 R22  ; R28 := R18[R22]
144 [-]: GETTABLE  R28 R28 K21  ; R28 := R28["mItemType"]
145 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
146 [-]: MOVE      R24 R25      ; R24 := R25
147 [-]: MOVE      R25 R8       ; R25 := R8
148 [-]: LOADK     R26 K26      ; R26 := "<font color=\""
149 [-]: MOVE      R27 R10      ; R27 := R10
150 [-]: LOADK     R28 K27      ; R28 := "\">"
151 [-]: GETGLOBAL R29 K28      ; R29 := 0x603636ad
152 [-]: SELF      R30 R23 K29  ; R31 := R23; R30 := R23[0xd3a9d01f]
153 [-]: CALL      R30 2 2      ; R30 := R30(R31)
154 [-]: SELF      R30 R30 K30  ; R31 := R30; R30 := R30[0x6d604ba7]
155 [-]: CALL      R30 2 2      ; R30 := R30(R31)
156 [-]: NEWTABLE  R31 0 0      ; R31 := {}
157 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
158 [-]: LOADK     R30 K31      ; R30 := " ["
159 [-]: GETGLOBAL R31 K32      ; R31 := 0x64fb1586
160 [-]: MOVE      R32 R24      ; R32 := R24
161 [-]: CALL      R31 2 2      ; R31 := R31(R32)
162 [-]: LOADK     R32 K33      ; R32 := "]"
163 [-]: MOVE      R33 R15      ; R33 := R15
164 [-]: LOADK     R34 K34      ; R34 := "</font>"
165 [-]: CONCAT    R8 R25 R34   ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31 .. R32 .. R33 .. R34
166 [-]: JMP       194          ; PC := 194
167 [-]: MOVE      R25 R8       ; R25 := R8
168 [-]: LOADK     R26 K26      ; R26 := "<font color=\""
169 [-]: MOVE      R27 R10      ; R27 := R10
170 [-]: LOADK     R28 K35      ; R28 := "\">---"
171 [-]: MOVE      R29 R15      ; R29 := R15
172 [-]: LOADK     R30 K34      ; R30 := "</font>"
173 [-]: CONCAT    R8 R25 R30   ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30
174 [-]: JMP       194          ; PC := 194
175 [-]: FORLOOP   R19 103      ; R19 += R21; if R19 <= R20 then begin PC := 103; R22 := R19 end
176 [-]: JMP       194          ; PC := 194
177 [-]: EQ        1 R8 K10     ; if R8 == nil then PC := 194
178 [-]: JMP       194          ; PC := 194
179 [-]: GETTABLE  R25 R6 R14   ; R25 := R6[R14]
180 [-]: GETTABLE  R25 R25 K0   ; R25 := R25["IsSentinel"]
181 [-]: TEST      R25 1        ; if R25 then PC := 194
182 [-]: JMP       194          ; PC := 194
183 [-]: MOVE      R25 R8       ; R25 := R8
184 [-]: LOADK     R26 K26      ; R26 := "<font color=\""
185 [-]: MOVE      R27 R9       ; R27 := R9
186 [-]: LOADK     R28 K27      ; R28 := "\">"
187 [-]: GETGLOBAL R29 K28      ; R29 := 0x603636ad
188 [-]: LOADK     R30 K36      ; R30 := "/Lotus/Language/Menu/Cosmetics_None"
189 [-]: NEWTABLE  R31 0 0      ; R31 := {}
190 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
191 [-]: MOVE      R30 R15      ; R30 := R15
192 [-]: LOADK     R31 K34      ; R31 := "</font>"
193 [-]: CONCAT    R8 R25 R31   ; R8 := R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31
194 [-]: FORLOOP   R11 56       ; R11 += R13; if R11 <= R12 then begin PC := 56; R14 := R11 end
195 [-]: EQ        1 R8 K10     ; if R8 == nil then PC := 200
196 [-]: JMP       200          ; PC := 200
197 [-]: MOVE      R25 R8       ; R25 := R8
198 [-]: LOADK     R26 K37      ; R26 := "</p>"
199 [-]: CONCAT    R8 R25 R26   ; R8 := R25 .. R26
200 [-]: MOVE      R25 R7       ; R25 := R7
201 [-]: MOVE      R26 R8       ; R26 := R8
202 [-]: RETURN    R25 3        ; return R25,R26
203 [-]: RETURN    R0 1         ; return 


; Function #343:
;
; Name:            
; Defined at line: 6897
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETUPVAL  R5 U0        ; R5 := U0
  2 [-]: MOVE      R6 R0        ; R6 := R0
  3 [-]: MOVE      R7 R1        ; R7 := R1
  4 [-]: MOVE      R8 R2        ; R8 := R2
  5 [-]: MOVE      R9 R3        ; R9 := R3
  6 [-]: MOVE      R10 R4       ; R10 := R4
  7 [-]: TAILCALL  R5 6 0       ; R5,... := R5(R6,R7,R8,R9,R10)
  8 [-]: RETURN    R5 0         ; return R5,...
  9 [-]: RETURN    R0 1         ; return 


; Function #344:
;
; Name:            
; Defined at line: 6901
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x1a94c9cc]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 -1        ; R3 := -1.000000
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: LOADK     R2 K2        ; R2 := "/"
  7 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
  8 [-]: LOADK     R2 K3        ; R2 := "/Lotus/Interface/ClanEmblems/"
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: LOADK     R5 K4        ; R5 := "_em.png"
 12 [-]: CONCAT    R2 R2 R5     ; R2 := R2 .. R3 .. R4 .. R5
 13 [-]: RETURN    R2 2         ; return R2
 14 [-]: RETURN    R0 1         ; return 


; Function #345:
;
; Name:            
; Defined at line: 6907
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mCount"]
  2 [-]: LOADK     R2 0         ; R2 := 0.000000
  3 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mGoal"]
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mPersonal"]
  5 [-]: TEST      R4 1         ; if R4 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mInvasion"]
  8 [-]: TEST      R4 0         ; if not R4 then PC := 79
  9 [-]: JMP       79           ; PC := 79
 10 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mTag"]
 11 [-]: GETGLOBAL R5 K5        ; R5 := 0x0469f296
 12 [-]: LOADK     R6 K6        ; R6 := "HeatFissure"
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: LOADK     R1 0         ; R1 := 0.000000
 17 [-]: GETGLOBAL R4 K7        ; R4 := 0x25d99d89
 18 [-]: GETGLOBAL R5 K8        ; R5 := 0x7b998233
 19 [-]: MOVE      R6 R4        ; R6 := R4
 20 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 21 [-]: TEST      R5 1         ; if R5 then PC := 76
 22 [-]: JMP       76           ; PC := 76
 23 [-]: LOADNIL   R5 R5        ; R5 := nil
 24 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["mClanGoal"]
 25 [-]: LEN       R6 R6        ; R6 := # R6
 26 [-]: LT        1 K10 R6     ; if 0.000000 < R6 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 29
 29 [-]: LOADBOOL  R6 1 0       ; R6 := true
 30 [-]: TEST      R6 0         ; if not R6 then PC := 40
 31 [-]: JMP       40           ; PC := 40
 32 [-]: SELF      R7 R4 K11    ; R8 := R4; R7 := R4[0x713ce380]
 33 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 34 [-]: EQ        1 R7 K12     ; if R7 == "" then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: SELF      R7 R4 K13    ; R8 := R4; R7 := R4[0x6b5dc079]
 37 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 38 [-]: MOVE      R5 R7        ; R5 := R7
 39 [-]: JMP       43           ; PC := 43
 40 [-]: SELF      R7 R4 K14    ; R8 := R4; R7 := R4[0x9897ecc6]
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: MOVE      R5 R7        ; R5 := R7
 43 [-]: LOADK     R7 1         ; R7 := 1.000000
 44 [-]: LEN       R8 R5        ; R8 := # R5
 45 [-]: LOADK     R9 1         ; R9 := 1.000000
 46 [-]: FORPREP   R7 74        ; R7 -= R9; PC := 74
 47 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 48 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["mId"]
 49 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["mId"]
 50 [-]: GETTABLE  R12 R0 K15   ; R12 := R0["mId"]
 51 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["mId"]
 52 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 74
 53 [-]: JMP       74           ; PC := 74
 54 [-]: GETTABLE  R11 R0 K16   ; R11 := R0["mBest"]
 55 [-]: TEST      R11 0        ; if not R11 then PC := 60
 56 [-]: JMP       60           ; PC := 60
 57 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 58 [-]: GETTABLE  R1 R11 K16   ; R1 := R11["mBest"]
 59 [-]: JMP       71           ; PC := 71
 60 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 61 [-]: GETTABLE  R11 R11 K0   ; R11 := R11["mCount"]
 62 [-]: GETTABLE  R12 R0 K1    ; R12 := R0["mGoal"]
 63 [-]: LT        0 R12 R11    ; if R12 >= R11 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: GETTABLE  R11 R0 K17   ; R11 := R0["mBonusGoal"]
 66 [-]: LT        0 K10 R11    ; if 0.000000 >= R11 then PC := 69
 67 [-]: JMP       69           ; PC := 69
 68 [-]: GETTABLE  R3 R0 K17    ; R3 := R0["mBonusGoal"]
 69 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 70 [-]: GETTABLE  R1 R11 K0    ; R1 := R11["mCount"]
 71 [-]: GETTABLE  R11 R5 R10   ; R11 := R5[R10]
 72 [-]: GETTABLE  R2 R11 K16   ; R2 := R11["mBest"]
 73 [-]: JMP       79           ; PC := 79
 74 [-]: FORLOOP   R7 47        ; R7 += R9; if R7 <= R8 then begin PC := 47; R10 := R7 end
 75 [-]: JMP       79           ; PC := 79
 76 [-]: GETGLOBAL R11 K18      ; R11 := 0x3d106989
 77 [-]: LOADK     R12 K19      ; R12 := "GetPersonalGoalProgress: profile or gamedata is nil"
 78 [-]: CALL      R11 2 1      ; R11(R12)
 79 [-]: MOVE      R11 R1       ; R11 := R1
 80 [-]: MOVE      R12 R2       ; R12 := R2
 81 [-]: MOVE      R13 R3       ; R13 := R3
 82 [-]: RETURN    R11 4        ; return R11,R12,R13
 83 [-]: RETURN    R0 1         ; return 


; Function #346:
;
; Name:            
; Defined at line: 6953
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: LOADK     R1 1         ; R1 := 1.000000
  2 [-]: GETGLOBAL R2 K0        ; R2 := _T
  3 [-]: GETGLOBAL R3 K2        ; R3 := 0x7f5022cf
  4 [-]: GETTABLE  R3 R3 K3     ; R82 := R3[0x04981ab3]
  5 [-]: GETGLOBAL R4 K4        ; R4 := 0x9ba7909f
  6 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x0b1c45c5]
  7 [-]: LOADK     R6 K6        ; R6 := "LotusGameRules.ForceElementalCarrier"
  8 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
  9 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 10 [-]: SETTABLE  R2 K1 R3     ; R2["DebugElementalCarrier"] := R3
 11 [-]: GETGLOBAL R2 K0        ; R2 := _T
 12 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["DebugElementalCarrier"]
 13 [-]: EQ        1 R2 K7      ; if R2 == "" then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: LOADBOOL  R2 1 0       ; R2 := true
 16 [-]: LOADK     R3 0         ; R3 := 0.000000
 17 [-]: RETURN    R2 3         ; return R2,R3
 18 [-]: JMP       95           ; PC := 95
 19 [-]: EQ        1 R0 K8      ; if R0 == nil then PC := 95
 20 [-]: JMP       95           ; PC := 95
 21 [-]: GETGLOBAL R2 K9        ; R2 := 0x7b998233
 22 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["keyChainName"]
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: TEST      R2 0         ; if not R2 then PC := 95
 25 [-]: JMP       95           ; PC := 95
 26 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["missionType"]
 27 [-]: EQ        1 R2 K13     ; if R2 == 18.000000 then PC := 95
 28 [-]: JMP       95           ; PC := 95
 29 [-]: GETGLOBAL R2 K14       ; R2 := 0xa94df70b
 30 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0xa93da813]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: GETGLOBAL R3 K16       ; R3 := 0x25d99d89
 33 [-]: GETGLOBAL R4 K9        ; R4 := 0x7b998233
 34 [-]: MOVE      R5 R3        ; R5 := R3
 35 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 36 [-]: TEST      R4 1         ; if R4 then PC := 95
 37 [-]: JMP       95           ; PC := 95
 38 [-]: GETGLOBAL R4 K17       ; R4 := 0xc8802016
 39 [-]: SELF      R5 R3 K18    ; R6 := R3; R5 := R3[0x69727e0b]
 40 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 41 [-]: GETTABLE  R5 R5 K19    ; R5 := R5["mGoals"]
 42 [-]: CALL      R4 2 4       ; R4,R5,R6 := R4(R5)
 43 [-]: JMP       93           ; PC := 93
 44 [-]: GETTABLE  R9 R8 K20    ; R9 := R8["mTag"]
 45 [-]: EQ        0 R9 R2      ; if R9 ~= R2 then PC := 93
 46 [-]: JMP       93           ; PC := 93
 47 [-]: GETGLOBAL R9 K21       ; R9 := 0x34291f5c
 48 [-]: GETTABLE  R9 R9 K22    ; R82 := R9[0x397b920f]
 49 [-]: GETTABLE  R10 R8 K23   ; R10 := R8["mActivation"]
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: LT        0 R9 K24     ; if R9 >= 0.000000 then PC := 93
 52 [-]: JMP       93           ; PC := 93
 53 [-]: GETGLOBAL R9 K21       ; R9 := 0x34291f5c
 54 [-]: GETTABLE  R9 R9 K22    ; R82 := R9[0x397b920f]
 55 [-]: GETTABLE  R10 R8 K25   ; R10 := R8["mExpiry"]
 56 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 57 [-]: LT        0 K24 R9     ; if 0.000000 >= R9 then PC := 93
 58 [-]: JMP       93           ; PC := 93
 59 [-]: GETTABLE  R9 R0 K26    ; R9 := R0["location"]
 60 [-]: GETGLOBAL R10 K27      ; R10 := EMPTY_SYMBOL
 61 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 93
 62 [-]: JMP       93           ; PC := 93
 63 [-]: GETUPVAL  R10 U0       ; R10 := U0
 64 [-]: CALL      R10 1 2      ; R10 := R10()
 65 [-]: SELF      R10 R10 K28  ; R11 := R10; R10 := R10[0x3ad9ed31]
 66 [-]: GETTABLE  R12 R0 K26   ; R12 := R0["location"]
 67 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 68 [-]: GETTABLE  R11 R10 K29  ; R11 := R10["nodeType"]
 69 [-]: EQ        1 R11 K30    ; if R11 == 7.000000 then PC := 77
 70 [-]: JMP       77           ; PC := 77
 71 [-]: GETTABLE  R11 R0 K26   ; R11 := R0["location"]
 72 [-]: GETGLOBAL R12 K31      ; R12 := 0x0469f296
 73 [-]: GETTABLE  R13 R8 K32   ; R13 := R8["mNode"]
 74 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 75 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 79
 76 [-]: JMP       79           ; PC := 79
 77 [-]: LOADBOOL  R11 0 0      ; R11 := false
 78 [-]: RETURN    R11 2        ; return R11
 79 [-]: GETTABLE  R11 R10 K33  ; R11 := R10["region"]
 80 [-]: GETTABLE  R12 R8 K34   ; R12 := R8["mRegions"]
 81 [-]: GETGLOBAL R13 K17      ; R13 := 0xc8802016
 82 [-]: MOVE      R14 R12      ; R14 := R12
 83 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
 84 [-]: JMP       90           ; PC := 90
 85 [-]: EQ        0 R11 R17    ; if R11 ~= R17 then PC := 90
 86 [-]: JMP       90           ; PC := 90
 87 [-]: LOADBOOL  R18 1 0      ; R18 := true
 88 [-]: MOVE      R19 R1       ; R19 := R1
 89 [-]: RETURN    R18 3        ; return R18,R19
 90 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 85; R15 := R16 end
 91 [-]: JMP       85           ; PC := 85
 92 [-]: JMP       95           ; PC := 95
 93 [-]: TFORLOOP  R4 2         ; R7,R8 :=  R4(R5,R6); if R7 ~= nil then begin PC = 44; R6 := R7 end
 94 [-]: JMP       44           ; PC := 44
 95 [-]: LOADBOOL  R18 0 0      ; R18 := false
 96 [-]: RETURN    R18 2        ; return R18
 97 [-]: RETURN    R0 1         ; return 


; Function #347:
;
; Name:            
; Defined at line: 7017
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x89326c93
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x18d05d30]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 0         ; if not R2 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0xde321e6f]
 19 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 20 [-]: LOADK     R3 0         ; R3 := 0.000000
 21 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 22 [-]: SELF      R5 R2 K5     ; R6 := R2; R5 := R2[0x881b6b90]
 23 [-]: LOADK     R7 0         ; R7 := 0.000000
 24 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 25 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 26 [-]: TEST      R4 0         ; if not R4 then PC := 32
 27 [-]: JMP       32           ; PC := 32
 28 [-]: GETGLOBAL R4 K6        ; R4 := 0xcbd666e1
 29 [-]: LOADK     R5 0         ; R5 := 0.000000
 30 [-]: CALL      R4 2 1       ; R4(R5)
 31 [-]: JMP       21           ; PC := 21
 32 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 33 [-]: LOADK     R5 0         ; R5 := 0.000000
 34 [-]: LOADK     R6 1         ; R6 := 1.000000
 35 [-]: LOADK     R7 5         ; R7 := 5.000000
 36 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 37 [-]: GETGLOBAL R5 K7        ; R5 := 0xcfc01047
 38 [-]: MOVE      R6 R4        ; R6 := R4
 39 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 40 [-]: JMP       68           ; PC := 68
 41 [-]: SELF      R10 R2 K8    ; R11 := R2; R10 := R2[0xe85a2361]
 42 [-]: MOVE      R12 R9       ; R12 := R9
 43 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 44 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
 45 [-]: MOVE      R12 R10      ; R12 := R10
 46 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 47 [-]: TEST      R11 1        ; if R11 then PC := 56
 48 [-]: JMP       56           ; PC := 56
 49 [-]: SELF      R11 R10 K9   ; R12 := R10; R11 := R10[0xf2deaf69]
 50 [-]: MOVE      R13 R1       ; R13 := R1
 51 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 52 [-]: TEST      R11 0        ; if not R11 then PC := 56
 53 [-]: JMP       56           ; PC := 56
 54 [-]: MOVE      R3 R9        ; R3 := R9
 55 [-]: JMP       68           ; PC := 68
 56 [-]: SELF      R11 R2 K10   ; R12 := R2; R11 := R2[0x4da725ce]
 57 [-]: MOVE      R13 R9       ; R13 := R9
 58 [-]: CALL      R11 3 1      ; R11(R12,R13)
 59 [-]: GETGLOBAL R11 K0       ; R11 := 0x89326c93
 60 [-]: SELF      R11 R11 K11  ; R12 := R11; R11 := R11[0x59c96e77]
 61 [-]: MOVE      R13 R10      ; R13 := R10
 62 [-]: CALL      R11 3 1      ; R11(R12,R13)
 63 [-]: EQ        0 R9 K12     ; if R9 ~= 5.000000 then PC := 68
 64 [-]: JMP       68           ; PC := 68
 65 [-]: SELF      R11 R2 K13   ; R12 := R2; R11 := R2[0xd80991c3]
 66 [-]: LOADK     R13 7        ; R13 := 7.000000
 67 [-]: CALL      R11 3 1      ; R11(R12,R13)
 68 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 41; R7 := R8 end
 69 [-]: JMP       41           ; PC := 41
 70 [-]: SELF      R11 R2 K14   ; R12 := R2; R11 := R2[0xc69087f6]
 71 [-]: MOVE      R13 R3       ; R13 := R3
 72 [-]: LOADK     R14 0        ; R14 := 0.000000
 73 [-]: LOADK     R15 2        ; R15 := 2.000000
 74 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 75 [-]: GETGLOBAL R11 K15      ; R11 := _T
 76 [-]: SETTABLE  R11 K16 R3   ; R11["ExclusiveWeaponSlot"] := R3
 77 [-]: RETURN    R0 1         ; return 


; Function #348:
;
; Name:            
; Defined at line: 7054
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: SELF      R2 R0 K1     ; R3 := R0; R2 := R0[0xde321e6f]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 10 [-]: MOVE      R4 R2        ; R4 := R2
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: TEST      R3 0         ; if not R3 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R3 K2        ; R3 := 0xbe190284
 16 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x9dc2a61a]
 17 [-]: LOADBOOL  R5 1 0       ; R5 := true
 18 [-]: CALL      R3 3 1       ; R3(R4,R5)
 19 [-]: CLOSURE   R3 0         ; R3 := closure(Function #348.1)
 20 [-]: MOVE      R4 R3        ; R4 := R3
 21 [-]: MOVE      R5 R2        ; R5 := R2
 22 [-]: CALL      R4 2 1       ; R4(R5)
 23 [-]: GETGLOBAL R4 K2        ; R4 := 0xbe190284
 24 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x1934072c]
 25 [-]: GETGLOBAL R6 K5        ; R6 := gLotusAuraUpgradeType
 26 [-]: MOVE      R7 R0        ; R7 := R0
 27 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 28 [-]: GETGLOBAL R5 K6        ; R5 := 0xcfc01047
 29 [-]: MOVE      R6 R4        ; R6 := R4
 30 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETGLOBAL R10 K7       ; R10 := 0x89326c93
 33 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10[0x59c96e77]
 34 [-]: MOVE      R12 R9       ; R12 := R9
 35 [-]: CALL      R10 3 1      ; R10(R11,R12)
 36 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 32; R7 := R8 end
 37 [-]: JMP       32           ; PC := 32
 38 [-]: SELF      R10 R0 K9    ; R11 := R0; R10 := R0[0x1ac1655c]
 39 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 40 [-]: SELF      R11 R10 K10  ; R12 := R10; R11 := R10[0x57369b8b]
 41 [-]: SELF      R13 R10 K11  ; R14 := R10; R13 := R10[0xb87f958d]
 42 [-]: CALL      R13 2 0      ; R13,... := R13(R14)
 43 [-]: CALL      R11 0 1      ; R11(R12,...)
 44 [-]: LOADNIL   R11 R11      ; R11 := nil
 45 [-]: SELF      R12 R0 K12   ; R13 := R0; R12 := R0[0x5b89142c]
 46 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 47 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
 48 [-]: MOVE      R14 R12      ; R14 := R12
 49 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 50 [-]: TEST      R13 1        ; if R13 then PC := 110
 51 [-]: JMP       110          ; PC := 110
 52 [-]: SELF      R13 R12 K13  ; R14 := R12; R13 := R12[0x62c81b76]
 53 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 54 [-]: GETTABLE  R13 R13 K14  ; R13 := R13["mPetType"]
 55 [-]: EQ        1 R13 K16    ; if R13 == 5.000000 then PC := 110
 56 [-]: JMP       110          ; PC := 110
 57 [-]: GETGLOBAL R14 K2       ; R14 := 0xbe190284
 58 [-]: SELF      R14 R14 K17  ; R15 := R14; R14 := R14[0xc7b09a65]
 59 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 60 [-]: TEST      R14 0        ; if not R14 then PC := 110
 61 [-]: JMP       110          ; PC := 110
 62 [-]: LOADBOOL  R14 0 0      ; R14 := false
 63 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
 64 [-]: MOVE      R16 R11      ; R16 := R11
 65 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 66 [-]: TEST      R15 0        ; if not R15 then PC := 101
 67 [-]: JMP       101          ; PC := 101
 68 [-]: TEST      R14 1        ; if R14 then PC := 101
 69 [-]: JMP       101          ; PC := 101
 70 [-]: SELF      R15 R12 K13  ; R16 := R12; R15 := R12[0x62c81b76]
 71 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 72 [-]: SELF      R15 R15 K18  ; R16 := R15; R15 := R15[0x8af486d8]
 73 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 74 [-]: TESTSET   R14 R15 0    ; if not R15 then PC := 88 else R14 := R15
 75 [-]: JMP       88           ; PC := 88
 76 [-]: GETGLOBAL R15 K2       ; R15 := 0xbe190284
 77 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15[0x3d48d263]
 78 [-]: SELF      R17 R0 K20   ; R18 := R0; R17 := R0[0xdff9d2a7]
 79 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 80 [-]: LOADBOOL  R18 1 0      ; R18 := true
 81 [-]: SELF      R19 R12 K13  ; R20 := R12; R19 := R12[0x62c81b76]
 82 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 83 [-]: SELF      R19 R19 K18  ; R20 := R19; R19 := R19[0x8af486d8]
 84 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 85 [-]: LOADBOOL  R20 1 0      ; R20 := true
 86 [-]: CALL      R15 6 2      ; R15 := R15(R16,R17,R18,R19,R20)
 87 [-]: NOT       R14 R15      ; R14 := not R15
 88 [-]: SELF      R15 R2 K21   ; R16 := R2; R15 := R2[0x2676deee]
 89 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 90 [-]: MOVE      R11 R15      ; R11 := R15
 91 [-]: EQ        1 R1 K22     ; if R1 == true then PC := 95
 92 [-]: JMP       95           ; PC := 95
 93 [-]: EQ        0 R1 K23     ; if R1 ~= nil then PC := 101
 94 [-]: JMP       101          ; PC := 101
 95 [-]: GETGLOBAL R15 K24      ; R15 := 0xcbd666e1
 96 [-]: LOADK     R16 0        ; R16 := 0.000000
 97 [-]: CALL      R15 2 1      ; R15(R16)
 98 [-]: JMP       63           ; PC := 63
 99 [-]: JMP       101          ; PC := 101
100 [-]: JMP       63           ; PC := 63
101 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
102 [-]: MOVE      R16 R11      ; R16 := R11
103 [-]: CALL      R15 2 2      ; R15 := R15(R16)
104 [-]: TEST      R15 1        ; if R15 then PC := 110
105 [-]: JMP       110          ; PC := 110
106 [-]: MOVE      R15 R3       ; R15 := R3
107 [-]: SELF      R16 R11 K1   ; R17 := R11; R16 := R11[0xde321e6f]
108 [-]: CALL      R16 2 0      ; R16,... := R16(R17)
109 [-]: CALL      R15 0 1      ; R15(R16,...)
110 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
111 [-]: MOVE      R16 R11      ; R16 := R11
112 [-]: CALL      R15 2 2      ; R15 := R15(R16)
113 [-]: TEST      R15 1        ; if R15 then PC := 121
114 [-]: JMP       121          ; PC := 121
115 [-]: SELF      R15 R11 K9   ; R16 := R11; R15 := R11[0x1ac1655c]
116 [-]: CALL      R15 2 2      ; R15 := R15(R16)
117 [-]: SELF      R16 R15 K10  ; R17 := R15; R16 := R15[0x57369b8b]
118 [-]: SELF      R18 R15 K11  ; R19 := R15; R18 := R15[0xb87f958d]
119 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
120 [-]: CALL      R16 0 1      ; R16(R17,...)
121 [-]: RETURN    R0 1         ; return 


; Function #348.1:
;
; Name:            
; Defined at line: 7068
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7ed0a956
  2 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Types/Game/SentinelPrecept"
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: LOADK     R2 0         ; R2 := 0.000000
  5 [-]: LOADK     R3 11        ; R3 := 11.000000
  6 [-]: LOADK     R4 1         ; R4 := 1.000000
  7 [-]: FORPREP   R2 69        ; R2 -= R4; PC := 69
  8 [-]: SELF      R6 R0 K3     ; R7 := R0; R6 := R0[0xe85a2361]
  9 [-]: MOVE      R8 R5        ; R8 := R5
 10 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 11 [-]: GETGLOBAL R7 K4        ; R7 := 0x7b998233
 12 [-]: MOVE      R8 R6        ; R8 := R6
 13 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 14 [-]: TEST      R7 1         ; if R7 then PC := 69
 15 [-]: JMP       69           ; PC := 69
 16 [-]: LOADK     R7 0         ; R7 := 0.000000
 17 [-]: GETGLOBAL R8 K4        ; R8 := 0x7b998233
 18 [-]: SELF      R9 R6 K5     ; R10 := R6; R9 := R6[0xfef27732]
 19 [-]: MOVE      R11 R7       ; R11 := R7
 20 [-]: CALL      R9 3 0       ; R9,... := R9(R10,R11)
 21 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 22 [-]: TEST      R8 1         ; if R8 then PC := 69
 23 [-]: JMP       69           ; PC := 69
 24 [-]: SELF      R8 R6 K5     ; R9 := R6; R8 := R6[0xfef27732]
 25 [-]: MOVE      R10 R7       ; R10 := R7
 26 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 27 [-]: SELF      R9 R8 K6     ; R10 := R8; R9 := R8[0xf2deaf69]
 28 [-]: GETGLOBAL R11 K7       ; R11 := gLotusArtifactUpgradeType
 29 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 30 [-]: SELF      R10 R8 K6    ; R11 := R8; R10 := R8[0xf2deaf69]
 31 [-]: MOVE      R12 R1       ; R12 := R1
 32 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 33 [-]: SELF      R11 R8 K6    ; R12 := R8; R11 := R8[0xf2deaf69]
 34 [-]: GETGLOBAL R13 K8       ; R13 := gLotusSuitCustomizationType
 35 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 36 [-]: TEST      R11 0        ; if not R11 then PC := 44
 37 [-]: JMP       44           ; PC := 44
 38 [-]: SELF      R11 R8 K9    ; R12 := R8; R11 := R8[0x0ad758cb]
 39 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 40 [-]: LT        1 K10 R11    ; if 0.000000 < R11 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: LOADBOOL  R11 0 1      ; R11 := false; PC := 43
 43 [-]: LOADBOOL  R11 1 0      ; R11 := true
 44 [-]: TEST      R9 0         ; if not R9 then PC := 62
 45 [-]: JMP       62           ; PC := 62
 46 [-]: TEST      R10 0        ; if not R10 then PC := 57
 47 [-]: JMP       57           ; PC := 57
 48 [-]: SELF      R12 R8 K11   ; R13 := R8; R12 := R8[0x10e0e540]
 49 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 50 [-]: TEST      R12 0        ; if not R12 then PC := 57
 51 [-]: JMP       57           ; PC := 57
 52 [-]: SELF      R13 R12 K12  ; R14 := R12; R13 := R12[0xa74ea8ac]
 53 [-]: LOADBOOL  R15 1 0      ; R15 := true
 54 [-]: CALL      R13 3 1      ; R13(R14,R15)
 55 [-]: SELF      R13 R12 K13  ; R14 := R12; R13 := R12[0x585fd25a]
 56 [-]: CALL      R13 2 1      ; R13(R14)
 57 [-]: SELF      R13 R6 K14   ; R14 := R6; R13 := R6[0x12dd9da2]
 58 [-]: MOVE      R15 R8       ; R15 := R8
 59 [-]: LOADBOOL  R16 1 0      ; R16 := true
 60 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
 61 [-]: JMP       17           ; PC := 17
 62 [-]: TEST      R11 0        ; if not R11 then PC := 67
 63 [-]: JMP       67           ; PC := 67
 64 [-]: SELF      R13 R6 K15   ; R14 := R6; R13 := R6[0x7c412269]
 65 [-]: MOVE      R15 R8       ; R15 := R8
 66 [-]: CALL      R13 3 1      ; R13(R14,R15)
 67 [-]: ADD       R7 R7 K16    ; R7 := R7 + 1.000000
 68 [-]: JMP       17           ; PC := 17
 69 [-]: FORLOOP   R2 8         ; R2 += R4; if R2 <= R3 then begin PC := 8; R5 := R2 end
 70 [-]: RETURN    R0 1         ; return 


; Function #349:
;
; Name:            
; Defined at line: 7141
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 34
  5 [-]: JMP       34           ; PC := 34
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xf2deaf69]
  8 [-]: GETGLOBAL R2 K3        ; R2 := gLotusGameRulesType
  9 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 10 [-]: TEST      R0 0         ; if not R0 then PC := 34
 11 [-]: JMP       34           ; PC := 34
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
 13 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xef893aec]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 34
 19 [-]: JMP       34           ; PC := 34
 20 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["goalTag"]
 21 [-]: GETGLOBAL R2 K6        ; R2 := 0x0469f296
 22 [-]: LOADK     R3 K7        ; R3 := "NoMods"
 23 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 24 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETTABLE  R1 R0 K5     ; R1 := R0["goalTag"]
 27 [-]: GETGLOBAL R2 K6        ; R2 := 0x0469f296
 28 [-]: LOADK     R3 K8        ; R3 := "WaterFight"
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 34
 31 [-]: JMP       34           ; PC := 34
 32 [-]: LOADBOOL  R1 1 0       ; R1 := true
 33 [-]: RETURN    R1 2         ; return R1
 34 [-]: LOADBOOL  R1 0 0       ; R1 := false
 35 [-]: RETURN    R1 2         ; return R1
 36 [-]: RETURN    R0 1         ; return 


; Function #350:
;
; Name:            
; Defined at line: 7151
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K1        ; R2 := 0xbe190284
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x1934072c]
  9 [-]: GETGLOBAL R4 K3        ; R4 := gLotusAuraUpgradeType
 10 [-]: MOVE      R5 R0        ; R5 := R0
 11 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0xcfc01047
 13 [-]: MOVE      R4 R2        ; R4 := R2
 14 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 15 [-]: JMP       23           ; PC := 23
 16 [-]: TEST      R1 0         ; if not R1 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: SELF      R8 R7 K5     ; R9 := R7; R8 := R7[0xeedfc816]
 19 [-]: CALL      R8 2 1       ; R8(R9)
 20 [-]: JMP       23           ; PC := 23
 21 [-]: SELF      R8 R7 K6     ; R9 := R7; R8 := R7[0xdaa0c115]
 22 [-]: CALL      R8 2 1       ; R8(R9)
 23 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 16; R5 := R6 end
 24 [-]: JMP       16           ; PC := 16
 25 [-]: RETURN    R0 1         ; return 


; Function #351:
;
; Name:            
; Defined at line: 7166
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0x62c81b76]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mIsFirstTimeInNode"]
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: LOADBOOL  R1 0 0       ; R1 := false
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #352:
;
; Name:            
; Defined at line: 7174
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := _T
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["PendingEquippingGearItem"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETGLOBAL R2 K1        ; R2 := _T
  8 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  9 [-]: SETTABLE  R2 K2 R3     ; R2[0x8623cf14] := R3
 10 [-]: GETGLOBAL R2 K1        ; R2 := _T
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["PendingEquippingGearItem"]
 12 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0[0x388577d5]
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: SETTABLE  R2 R3 R1     ; R2[R3] := R1
 15 [-]: RETURN    R0 1         ; return 


; Function #353:
;
; Name:            
; Defined at line: 7181
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["PendingEquippingGearItem"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADBOOL  R1 0 0       ; R1 := false
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["PendingEquippingGearItem"]
 11 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0x388577d5]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #354:
;
; Name:            
; Defined at line: 7189
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  29

  1 [-]: EQ        0 R0 K0      ; if R0 ~= nil then PC := 23
  2 [-]: JMP       23           ; PC := 23
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x89326c93
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xfb64e76c]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0xf08bc0f9]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1[0xced29f79]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: MOVE      R0 R2        ; R0 := R2
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0x89326c93
 20 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x78298275]
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: MOVE      R0 R2        ; R0 := R2
 23 [-]: LOADBOOL  R2 0 0       ; R2 := false
 24 [-]: SELF      R3 R0 K7     ; R4 := R0; R3 := R0[0xd1586535]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: LOADK     R4 1         ; R4 := 1.000000
 27 [-]: GETGLOBAL R5 K8        ; R5 := SHIP_ROOMS
 28 [-]: LEN       R5 R5        ; R5 := # R5
 29 [-]: LOADK     R6 1         ; R6 := 1.000000
 30 [-]: FORPREP   R4 80        ; R4 -= R6; PC := 80
 31 [-]: GETGLOBAL R8 K1        ; R8 := 0x89326c93
 32 [-]: SELF      R8 R8 K9     ; R9 := R8; R8 := R8[0xc7fcada9]
 33 [-]: GETGLOBAL R10 K8       ; R10 := SHIP_ROOMS
 34 [-]: GETTABLE  R10 R10 R7   ; R10 := R10[R7]
 35 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["Name"]
 36 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 37 [-]: LOADK     R9 1         ; R9 := 1.000000
 38 [-]: LEN       R10 R8       ; R10 := # R8
 39 [-]: LOADK     R11 1        ; R11 := 1.000000
 40 [-]: FORPREP   R9 79        ; R9 -= R11; PC := 79
 41 [-]: GETTABLE  R13 R8 R12   ; R13 := R8[R12]
 42 [-]: SELF      R13 R13 K11  ; R14 := R13; R13 := R13[0x79a9e9d3]
 43 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 44 [-]: GETTABLE  R14 R8 R12   ; R14 := R8[R12]
 45 [-]: SELF      R14 R14 K12  ; R15 := R14; R14 := R14[0x8fbd942d]
 46 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 47 [-]: GETTABLE  R15 R14 K13  ; R15 := R14["x"]
 48 [-]: GETTABLE  R16 R3 K13   ; R16 := R3["x"]
 49 [-]: LE        0 R15 R16    ; if R15 > R16 then PC := 79
 50 [-]: JMP       79           ; PC := 79
 51 [-]: GETTABLE  R15 R14 K14  ; R15 := R14["y"]
 52 [-]: GETTABLE  R16 R3 K14   ; R16 := R3["y"]
 53 [-]: LE        0 R15 R16    ; if R15 > R16 then PC := 79
 54 [-]: JMP       79           ; PC := 79
 55 [-]: GETTABLE  R15 R14 K15  ; R15 := R14["z"]
 56 [-]: GETTABLE  R16 R3 K15   ; R16 := R3["z"]
 57 [-]: LE        0 R15 R16    ; if R15 > R16 then PC := 79
 58 [-]: JMP       79           ; PC := 79
 59 [-]: GETTABLE  R15 R3 K13   ; R15 := R3["x"]
 60 [-]: GETTABLE  R16 R13 K13  ; R16 := R13["x"]
 61 [-]: LE        0 R15 R16    ; if R15 > R16 then PC := 79
 62 [-]: JMP       79           ; PC := 79
 63 [-]: GETTABLE  R15 R3 K14   ; R15 := R3["y"]
 64 [-]: GETTABLE  R16 R13 K14  ; R16 := R13["y"]
 65 [-]: LE        0 R15 R16    ; if R15 > R16 then PC := 79
 66 [-]: JMP       79           ; PC := 79
 67 [-]: GETTABLE  R15 R3 K15   ; R15 := R3["z"]
 68 [-]: GETTABLE  R16 R13 K15  ; R16 := R13["z"]
 69 [-]: LE        0 R15 R16    ; if R15 > R16 then PC := 79
 70 [-]: JMP       79           ; PC := 79
 71 [-]: GETGLOBAL R15 K8       ; R15 := SHIP_ROOMS
 72 [-]: GETTABLE  R15 R15 R7   ; R15 := R15[R7]
 73 [-]: GETTABLE  R15 R15 K10  ; R15 := R15["Name"]
 74 [-]: GETGLOBAL R16 K8       ; R16 := SHIP_ROOMS
 75 [-]: GETTABLE  R16 R16 R7   ; R16 := R16[R7]
 76 [-]: GETTABLE  R16 R16 K16  ; R16 := R16["LocTag"]
 77 [-]: MOVE      R17 R2       ; R17 := R2
 78 [-]: RETURN    R15 4        ; return R15,R16,R17
 79 [-]: FORLOOP   R9 41        ; R9 += R11; if R9 <= R10 then begin PC := 41; R12 := R9 end
 80 [-]: FORLOOP   R4 31        ; R4 += R6; if R4 <= R5 then begin PC := 31; R7 := R4 end
 81 [-]: LOADK     R15 1        ; R15 := 1.000000
 82 [-]: GETGLOBAL R16 K17      ; R16 := APARTMENT_ROOMS
 83 [-]: LEN       R16 R16      ; R16 := # R16
 84 [-]: LOADK     R17 1        ; R17 := 1.000000
 85 [-]: FORPREP   R15 136      ; R15 -= R17; PC := 136
 86 [-]: GETGLOBAL R19 K1       ; R19 := 0x89326c93
 87 [-]: SELF      R19 R19 K9   ; R20 := R19; R19 := R19[0xc7fcada9]
 88 [-]: GETGLOBAL R21 K17      ; R21 := APARTMENT_ROOMS
 89 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
 90 [-]: GETTABLE  R21 R21 K10  ; R21 := R21["Name"]
 91 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
 92 [-]: LOADK     R20 1        ; R20 := 1.000000
 93 [-]: LEN       R21 R19      ; R21 := # R19
 94 [-]: LOADK     R22 1        ; R22 := 1.000000
 95 [-]: FORPREP   R20 135      ; R20 -= R22; PC := 135
 96 [-]: GETTABLE  R24 R19 R23  ; R24 := R19[R23]
 97 [-]: SELF      R24 R24 K11  ; R25 := R24; R24 := R24[0x79a9e9d3]
 98 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 99 [-]: GETTABLE  R25 R19 R23  ; R25 := R19[R23]
100 [-]: SELF      R25 R25 K12  ; R26 := R25; R25 := R25[0x8fbd942d]
101 [-]: CALL      R25 2 2      ; R25 := R25(R26)
102 [-]: GETTABLE  R26 R25 K13  ; R26 := R25["x"]
103 [-]: GETTABLE  R27 R3 K13   ; R27 := R3["x"]
104 [-]: LE        0 R26 R27    ; if R26 > R27 then PC := 135
105 [-]: JMP       135          ; PC := 135
106 [-]: GETTABLE  R26 R25 K14  ; R26 := R25["y"]
107 [-]: GETTABLE  R27 R3 K14   ; R27 := R3["y"]
108 [-]: LE        0 R26 R27    ; if R26 > R27 then PC := 135
109 [-]: JMP       135          ; PC := 135
110 [-]: GETTABLE  R26 R25 K15  ; R26 := R25["z"]
111 [-]: GETTABLE  R27 R3 K15   ; R27 := R3["z"]
112 [-]: LE        0 R26 R27    ; if R26 > R27 then PC := 135
113 [-]: JMP       135          ; PC := 135
114 [-]: GETTABLE  R26 R3 K13   ; R26 := R3["x"]
115 [-]: GETTABLE  R27 R24 K13  ; R27 := R24["x"]
116 [-]: LE        0 R26 R27    ; if R26 > R27 then PC := 135
117 [-]: JMP       135          ; PC := 135
118 [-]: GETTABLE  R26 R3 K14   ; R26 := R3["y"]
119 [-]: GETTABLE  R27 R24 K14  ; R27 := R24["y"]
120 [-]: LE        0 R26 R27    ; if R26 > R27 then PC := 135
121 [-]: JMP       135          ; PC := 135
122 [-]: GETTABLE  R26 R3 K15   ; R26 := R3["z"]
123 [-]: GETTABLE  R27 R24 K15  ; R27 := R24["z"]
124 [-]: LE        0 R26 R27    ; if R26 > R27 then PC := 135
125 [-]: JMP       135          ; PC := 135
126 [-]: LOADBOOL  R2 1 0       ; R2 := true
127 [-]: GETGLOBAL R26 K17      ; R26 := APARTMENT_ROOMS
128 [-]: GETTABLE  R26 R26 R18  ; R26 := R26[R18]
129 [-]: GETTABLE  R26 R26 K10  ; R26 := R26["Name"]
130 [-]: GETGLOBAL R27 K17      ; R27 := APARTMENT_ROOMS
131 [-]: GETTABLE  R27 R27 R18  ; R27 := R27[R18]
132 [-]: GETTABLE  R27 R27 K16  ; R27 := R27["LocTag"]
133 [-]: MOVE      R28 R2       ; R28 := R2
134 [-]: RETURN    R26 4        ; return R26,R27,R28
135 [-]: FORLOOP   R20 96       ; R20 += R22; if R20 <= R21 then begin PC := 96; R23 := R20 end
136 [-]: FORLOOP   R15 86       ; R15 += R17; if R15 <= R16 then begin PC := 86; R18 := R15 end
137 [-]: GETGLOBAL R26 K18      ; R26 := OUTSIDE_THE_SHIP_ROOM
138 [-]: GETTABLE  R26 R26 K10  ; R26 := R26["Name"]
139 [-]: GETGLOBAL R27 K18      ; R27 := OUTSIDE_THE_SHIP_ROOM
140 [-]: GETTABLE  R27 R27 K16  ; R27 := R27["LocTag"]
141 [-]: MOVE      R28 R2       ; R28 := R2
142 [-]: RETURN    R26 4        ; return R26,R27,R28
143 [-]: RETURN    R0 1         ; return 


; Function #355:
;
; Name:            
; Defined at line: 7234
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #356:
;
; Name:            
; Defined at line: 7238
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R1 1         ; R1 := 1.000000
  2 [-]: GETGLOBAL R2 K0        ; R2 := SHIP_ROOMS
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: LOADK     R3 1         ; R3 := 1.000000
  5 [-]: FORPREP   R1 13        ; R1 -= R3; PC := 13
  6 [-]: GETGLOBAL R5 K0        ; R5 := SHIP_ROOMS
  7 [-]: GETTABLE  R5 R5 R4     ; R5 := R5[R4]
  8 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["Name"]
  9 [-]: EQ        0 R5 R0      ; if R5 ~= R0 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETGLOBAL R5 K2        ; R5 := DECO_AREA_SHIP
 12 [-]: RETURN    R5 2         ; return R5
 13 [-]: FORLOOP   R1 6         ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
 14 [-]: LOADK     R5 1         ; R5 := 1.000000
 15 [-]: GETGLOBAL R6 K3        ; R6 := APARTMENT_ROOMS
 16 [-]: LEN       R6 R6        ; R6 := # R6
 17 [-]: LOADK     R7 1         ; R7 := 1.000000
 18 [-]: FORPREP   R5 26        ; R5 -= R7; PC := 26
 19 [-]: GETGLOBAL R9 K3        ; R9 := APARTMENT_ROOMS
 20 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 21 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["Name"]
 22 [-]: EQ        0 R9 R0      ; if R9 ~= R0 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: GETGLOBAL R9 K4        ; R9 := DECO_AREA_APARTMENT
 25 [-]: RETURN    R9 2         ; return R9
 26 [-]: FORLOOP   R5 19        ; R5 += R7; if R5 <= R6 then begin PC := 19; R8 := R5 end
 27 [-]: GETGLOBAL R9 K5        ; R9 := DECO_AREA_UNKNOWN
 28 [-]: RETURN    R9 2         ; return R9
 29 [-]: RETURN    R0 1         ; return 


; Function #357:
;
; Name:            
; Defined at line: 7253
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  25

  1 [-]: TEST      R1 0         ; if not R1 then PC := 37
  2 [-]: JMP       37           ; PC := 37
  3 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  4 [-]: GETGLOBAL R4 K1        ; R4 := _T
  5 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["apartmentDecoAncor"]
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETGLOBAL R3 K1        ; R3 := _T
 10 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 11 [-]: SETTABLE  R3 K2 R4     ; R3["apartmentDecoAncor"] := R4
 12 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["apartmentDecoAncor"]
 15 [-]: GETTABLE  R4 R4 R0     ; R4 := R4[R0]
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 0         ; if not R3 then PC := 32
 18 [-]: JMP       32           ; PC := 32
 19 [-]: GETGLOBAL R3 K1        ; R3 := _T
 20 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["apartmentDecoAncor"]
 21 [-]: GETGLOBAL R4 K3        ; R4 := 0x89326c93
 22 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x46a0ebf5]
 23 [-]: GETGLOBAL R6 K5        ; R6 := 0x0469f296
 24 [-]: GETGLOBAL R7 K6        ; R7 := 0x64fb1586
 25 [-]: MOVE      R8 R0        ; R8 := R0
 26 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 27 [-]: LOADK     R8 K7        ; R8 := "Anchor"
 28 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 29 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 30 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 31 [-]: SETTABLE  R3 R0 R4     ; R3[R0] := R4
 32 [-]: GETGLOBAL R3 K1        ; R3 := _T
 33 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["apartmentDecoAncor"]
 34 [-]: GETTABLE  R3 R3 R0     ; R3 := R3[R0]
 35 [-]: RETURN    R3 2         ; return R3
 36 [-]: JMP       131          ; PC := 131
 37 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 38 [-]: GETGLOBAL R4 K1        ; R4 := _T
 39 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["shipDecoOrbiterAnchor"]
 40 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 41 [-]: TEST      R3 0         ; if not R3 then PC := 131
 42 [-]: JMP       131          ; PC := 131
 43 [-]: GETGLOBAL R3 K1        ; R3 := _T
 44 [-]: GETGLOBAL R4 K3        ; R4 := 0x89326c93
 45 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x46a0ebf5]
 46 [-]: GETGLOBAL R6 K5        ; R6 := 0x0469f296
 47 [-]: LOADK     R7 K10       ; R7 := "PlayerShipDecosAnchorLiset"
 48 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 49 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 50 [-]: SETTABLE  R3 K9 R4     ; R3["shipDecoLisetAnchor"] := R4
 51 [-]: GETGLOBAL R3 K11       ; R3 := 0xa421af95
 52 [-]: LOADK     R4 K12       ; R4 := 9999.000000
 53 [-]: LOADK     R5 K12       ; R5 := 9999.000000
 54 [-]: LOADK     R6 K12       ; R6 := 9999.000000
 55 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 56 [-]: GETGLOBAL R4 K3        ; R4 := 0x89326c93
 57 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4[0xc7fcada9]
 58 [-]: GETGLOBAL R6 K14       ; R6 := LISET_ROOM
 59 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["Name"]
 60 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 61 [-]: LOADK     R5 1         ; R5 := 1.000000
 62 [-]: LEN       R6 R4        ; R6 := # R4
 63 [-]: LOADK     R7 1         ; R7 := 1.000000
 64 [-]: FORPREP   R5 87        ; R5 -= R7; PC := 87
 65 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 66 [-]: SELF      R9 R9 K16    ; R10 := R9; R9 := R9[0x79a9e9d3]
 67 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 68 [-]: GETTABLE  R10 R4 R8    ; R10 := R4[R8]
 69 [-]: SELF      R10 R10 K17  ; R11 := R10; R10 := R10[0x8fbd942d]
 70 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 71 [-]: SUB       R11 R9 R10   ; R11 := R9 - R10
 72 [-]: GETGLOBAL R12 K18      ; R12 := 0x4fd57545
 73 [-]: MOVE      R13 R11      ; R13 := R11
 74 [-]: MOVE      R14 R11      ; R14 := R11
 75 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 76 [-]: GETGLOBAL R13 K18      ; R13 := 0x4fd57545
 77 [-]: MOVE      R14 R3       ; R14 := R3
 78 [-]: MOVE      R15 R3       ; R15 := R3
 79 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 80 [-]: LT        0 R12 R13    ; if R12 >= R13 then PC := 87
 81 [-]: JMP       87           ; PC := 87
 82 [-]: MOVE      R3 R11       ; R3 := R11
 83 [-]: GETGLOBAL R12 K1       ; R12 := _T
 84 [-]: SETTABLE  R12 K19 R9   ; R12["shipDecoLisetDoorwayBoundsMax"] := R9
 85 [-]: GETGLOBAL R12 K1       ; R12 := _T
 86 [-]: SETTABLE  R12 K20 R10  ; R12["shipDecoLisetDoorwayBoundsMin"] := R10
 87 [-]: FORLOOP   R5 65        ; R5 += R7; if R5 <= R6 then begin PC := 65; R8 := R5 end
 88 [-]: GETGLOBAL R12 K3       ; R12 := 0x89326c93
 89 [-]: SELF      R12 R12 K4   ; R13 := R12; R12 := R12[0x46a0ebf5]
 90 [-]: GETGLOBAL R14 K5       ; R14 := 0x0469f296
 91 [-]: LOADK     R15 K21      ; R15 := "PlayerShipDecosAnchorOrbiter"
 92 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
 93 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
 94 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
 95 [-]: MOVE      R14 R12      ; R14 := R12
 96 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 97 [-]: TEST      R13 1        ; if R13 then PC := 102
 98 [-]: JMP       102          ; PC := 102
 99 [-]: GETGLOBAL R13 K1       ; R13 := _T
100 [-]: SETTABLE  R13 K8 R12   ; R13["shipDecoOrbiterAnchor"] := R12
101 [-]: JMP       131          ; PC := 131
102 [-]: GETGLOBAL R13 K3       ; R13 := 0x89326c93
103 [-]: SELF      R13 R13 K22  ; R14 := R13; R13 := R13[0xfb669000]
104 [-]: GETGLOBAL R15 K23      ; R15 := gZoneAttribsType
105 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
106 [-]: LOADNIL   R14 R14      ; R14 := nil
107 [-]: GETGLOBAL R15 K0       ; R15 := 0x7b998233
108 [-]: MOVE      R16 R13      ; R16 := R13
109 [-]: CALL      R15 2 2      ; R15 := R15(R16)
110 [-]: TEST      R15 1        ; if R15 then PC := 129
111 [-]: JMP       129          ; PC := 129
112 [-]: LEN       R15 R13      ; R15 := # R13
113 [-]: LT        0 K24 R15    ; if 0.000000 >= R15 then PC := 129
114 [-]: JMP       129          ; PC := 129
115 [-]: GETTABLE  R14 R13 K25  ; R14 := R13[1.000000]
116 [-]: LOADK     R15 2        ; R15 := 2.000000
117 [-]: LEN       R16 R13      ; R16 := # R13
118 [-]: LOADK     R17 1        ; R17 := 1.000000
119 [-]: FORPREP   R15 128      ; R15 -= R17; PC := 128
120 [-]: GETTABLE  R19 R13 R18  ; R19 := R13[R18]
121 [-]: SELF      R19 R19 K26  ; R20 := R19; R19 := R19[0x388577d5]
122 [-]: CALL      R19 2 2      ; R19 := R19(R20)
123 [-]: SELF      R20 R14 K26  ; R21 := R14; R20 := R14[0x388577d5]
124 [-]: CALL      R20 2 2      ; R20 := R20(R21)
125 [-]: LT        0 R19 R20    ; if R19 >= R20 then PC := 128
126 [-]: JMP       128          ; PC := 128
127 [-]: GETTABLE  R14 R13 R18  ; R14 := R13[R18]
128 [-]: FORLOOP   R15 120      ; R15 += R17; if R15 <= R16 then begin PC := 120; R18 := R15 end
129 [-]: GETGLOBAL R19 K1       ; R19 := _T
130 [-]: SETTABLE  R19 K8 R14   ; R19["shipDecoOrbiterAnchor"] := R14
131 [-]: GETGLOBAL R19 K14      ; R19 := LISET_ROOM
132 [-]: GETTABLE  R19 R19 K15  ; R19 := R19["Name"]
133 [-]: EQ        0 R0 R19     ; if R0 ~= R19 then PC := 197
134 [-]: JMP       197          ; PC := 197
135 [-]: GETUPVAL  R19 U0       ; R19 := U0
136 [-]: CALL      R19 1 2      ; R19 := R19()
137 [-]: TEST      R19 0        ; if not R19 then PC := 193
138 [-]: JMP       193          ; PC := 193
139 [-]: LOADNIL   R19 R19      ; R19 := nil
140 [-]: GETTABLE  R20 R2 K27   ; R20 := R2["pos"]
141 [-]: EQ        1 R20 K28    ; if R20 == nil then PC := 152
142 [-]: JMP       152          ; PC := 152
143 [-]: GETGLOBAL R20 K1       ; R20 := _T
144 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["shipDecoLisetAnchor"]
145 [-]: SELF      R20 R20 K29  ; R21 := R20; R20 := R20[0xa5f8cbef]
146 [-]: GETGLOBAL R22 K30      ; R22 := EMPTY_SYMBOL
147 [-]: GETTABLE  R23 R2 K27   ; R23 := R2["pos"]
148 [-]: GETTABLE  R24 R2 K31   ; R24 := R2["rot"]
149 [-]: CALL      R20 5 2      ; R20 := R20(R21,R22,R23,R24)
150 [-]: MOVE      R19 R20      ; R19 := R20
151 [-]: JMP       155          ; PC := 155
152 [-]: SELF      R20 R2 K32   ; R21 := R2; R20 := R2[0xd1586535]
153 [-]: CALL      R20 2 2      ; R20 := R20(R21)
154 [-]: MOVE      R19 R20      ; R19 := R20
155 [-]: GETGLOBAL R20 K1       ; R20 := _T
156 [-]: GETTABLE  R20 R20 K20  ; R20 := R20["shipDecoLisetDoorwayBoundsMin"]
157 [-]: GETTABLE  R20 R20 K33  ; R20 := R20["x"]
158 [-]: GETTABLE  R21 R19 K33  ; R21 := R19["x"]
159 [-]: LE        0 R20 R21    ; if R20 > R21 then PC := 193
160 [-]: JMP       193          ; PC := 193
161 [-]: GETGLOBAL R20 K1       ; R20 := _T
162 [-]: GETTABLE  R20 R20 K20  ; R20 := R20["shipDecoLisetDoorwayBoundsMin"]
163 [-]: GETTABLE  R20 R20 K34  ; R20 := R20["y"]
164 [-]: GETTABLE  R21 R19 K34  ; R21 := R19["y"]
165 [-]: LE        0 R20 R21    ; if R20 > R21 then PC := 193
166 [-]: JMP       193          ; PC := 193
167 [-]: GETGLOBAL R20 K1       ; R20 := _T
168 [-]: GETTABLE  R20 R20 K20  ; R20 := R20["shipDecoLisetDoorwayBoundsMin"]
169 [-]: GETTABLE  R20 R20 K35  ; R20 := R20["z"]
170 [-]: GETTABLE  R21 R19 K35  ; R21 := R19["z"]
171 [-]: LE        0 R20 R21    ; if R20 > R21 then PC := 193
172 [-]: JMP       193          ; PC := 193
173 [-]: GETTABLE  R20 R19 K33  ; R20 := R19["x"]
174 [-]: GETGLOBAL R21 K1       ; R21 := _T
175 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["shipDecoLisetDoorwayBoundsMax"]
176 [-]: GETTABLE  R21 R21 K33  ; R21 := R21["x"]
177 [-]: LE        0 R20 R21    ; if R20 > R21 then PC := 193
178 [-]: JMP       193          ; PC := 193
179 [-]: GETTABLE  R20 R19 K34  ; R20 := R19["y"]
180 [-]: GETGLOBAL R21 K1       ; R21 := _T
181 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["shipDecoLisetDoorwayBoundsMax"]
182 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["y"]
183 [-]: LE        0 R20 R21    ; if R20 > R21 then PC := 193
184 [-]: JMP       193          ; PC := 193
185 [-]: GETTABLE  R20 R19 K35  ; R20 := R19["z"]
186 [-]: GETGLOBAL R21 K1       ; R21 := _T
187 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["shipDecoLisetDoorwayBoundsMax"]
188 [-]: GETTABLE  R21 R21 K35  ; R21 := R21["z"]
189 [-]: LE        0 R20 R21    ; if R20 > R21 then PC := 193
190 [-]: JMP       193          ; PC := 193
191 [-]: LOADNIL   R20 R20      ; R20 := nil
192 [-]: RETURN    R20 2        ; return R20
193 [-]: GETGLOBAL R20 K1       ; R20 := _T
194 [-]: GETTABLE  R20 R20 K9   ; R20 := R20["shipDecoLisetAnchor"]
195 [-]: RETURN    R20 2        ; return R20
196 [-]: JMP       207          ; PC := 207
197 [-]: GETGLOBAL R20 K36      ; R20 := OUTSIDE_THE_SHIP_ROOM
198 [-]: GETTABLE  R20 R20 K15  ; R20 := R20["Name"]
199 [-]: EQ        0 R0 R20     ; if R0 ~= R20 then PC := 207
200 [-]: JMP       207          ; PC := 207
201 [-]: GETUPVAL  R20 U0       ; R20 := U0
202 [-]: CALL      R20 1 2      ; R20 := R20()
203 [-]: TEST      R20 1        ; if R20 then PC := 207
204 [-]: JMP       207          ; PC := 207
205 [-]: LOADNIL   R20 R20      ; R20 := nil
206 [-]: RETURN    R20 2        ; return R20
207 [-]: GETGLOBAL R20 K1       ; R20 := _T
208 [-]: GETTABLE  R20 R20 K8   ; R20 := R20["shipDecoOrbiterAnchor"]
209 [-]: RETURN    R20 2        ; return R20
210 [-]: RETURN    R0 1         ; return 


; Function #358:
;
; Name:            
; Defined at line: 7332
; #Upvalues:       0
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
  2 [-]: GETGLOBAL R8 K1        ; R8 := 0x0032441c
  3 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["UIMovie_LoadoutSelectMovie"]
  4 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  5 [-]: TEST      R7 1         ; if R7 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
  8 [-]: MOVE      R8 R2        ; R8 := R2
  9 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 10 [-]: TEST      R7 0         ; if not R7 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADNIL   R7 R7        ; R7 := nil
 13 [-]: RETURN    R7 2         ; return R7
 14 [-]: LOADNIL   R7 R7        ; R7 := nil
 15 [-]: GETGLOBAL R8 K3        ; R8 := _T
 16 [-]: SETTABLE  R8 K4 R3     ; R8["SelectLoadOutType"] := R3
 17 [-]: GETGLOBAL R8 K3        ; R8 := _T
 18 [-]: SETTABLE  R8 K5 R6     ; R8["CurrentLoadoutId"] := R6
 19 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
 20 [-]: MOVE      R9 R0        ; R9 := R0
 21 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 22 [-]: TEST      R8 1         ; if R8 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: SELF      R8 R0 K6     ; R9 := R0; R8 := R0[0x1fd6abd0]
 25 [-]: GETGLOBAL R10 K1       ; R10 := 0x0032441c
 26 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["UIMovie_LoadoutSelectMovie"]
 27 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 28 [-]: MOVE      R7 R8        ; R7 := R8
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R8 K7        ; R8 := 0x9ba7909f
 31 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8[0xcfba257f]
 32 [-]: GETGLOBAL R10 K1       ; R10 := 0x0032441c
 33 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["UIMovie_LoadoutSelectMovie"]
 34 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 35 [-]: MOVE      R7 R8        ; R7 := R8
 36 [-]: GETGLOBAL R8 K3        ; R8 := _T
 37 [-]: CLOSURE   R9 0         ; R9 := closure(Function #358.1)
 38 [-]: MOVE      R0 R4        ; R0 := R4
 39 [-]: SETTABLE  R8 K9 R9     ; R8["LoadoutSelectionDone"] := R9
 40 [-]: SELF      R8 R7 K10    ; R9 := R7; R8 := R7[0xe4162eed]
 41 [-]: LOADK     R10 K11      ; R10 := "SetCallBack"
 42 [-]: LOADK     R11 K9       ; R11 := "LoadoutSelectionDone"
 43 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 44 [-]: RETURN    R7 2         ; return R7
 45 [-]: RETURN    R0 1         ; return 


; Function #358.1:
;
; Name:            
; Defined at line: 7346
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["LoadoutSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: TEST      R1 1         ; if R1 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: MOVE      R2 R0        ; R2 := R0
 10 [-]: CALL      R1 2 1       ; R1(R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #359:
;
; Name:            
; Defined at line: 7358
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: LOADK     R2 K0        ; R2 := ""
  2 [-]: LOADK     R3 K0        ; R3 := ""
  3 [-]: LOADK     R4 0         ; R4 := 0.000000
  4 [-]: GETGLOBAL R5 K1        ; R5 := FORTUNA_NODE_TAG
  5 [-]: EQ        1 R1 R5      ; if R1 == R5 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETGLOBAL R5 K2        ; R5 := ORB_VALLIS_NODE_TAG
  8 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 37
  9 [-]: JMP       37           ; PC := 37
 10 [-]: GETGLOBAL R5 K3        ; R5 := TimeOfDayConstants
 11 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["HOURS_PER_SECOND_VENUS"]
 12 [-]: LT        0 R0 K5      ; if R0 >= 12.000000 then PC := 21
 13 [-]: JMP       21           ; PC := 21
 14 [-]: GETGLOBAL R6 K3        ; R6 := TimeOfDayConstants
 15 [-]: GETTABLE  R2 R6 K6     ; R2 := R6["TIME_OF_DAY_LABEL_COLD"]
 16 [-]: GETGLOBAL R6 K3        ; R6 := TimeOfDayConstants
 17 [-]: GETTABLE  R3 R6 K7     ; R3 := R6["TIME_OF_DAY_LABEL_WARM"]
 18 [-]: SUB       R6 K5 R0     ; R6 := 12.000000 - R0
 19 [-]: DIV       R4 R6 R5     ; R4 := R6 / R5
 20 [-]: JMP       120          ; PC := 120
 21 [-]: LT        0 R0 K8      ; if R0 >= 18.000000 then PC := 30
 22 [-]: JMP       30           ; PC := 30
 23 [-]: GETGLOBAL R6 K3        ; R6 := TimeOfDayConstants
 24 [-]: GETTABLE  R2 R6 K7     ; R2 := R6["TIME_OF_DAY_LABEL_WARM"]
 25 [-]: GETGLOBAL R6 K3        ; R6 := TimeOfDayConstants
 26 [-]: GETTABLE  R3 R6 K6     ; R3 := R6["TIME_OF_DAY_LABEL_COLD"]
 27 [-]: SUB       R6 K8 R0     ; R6 := 18.000000 - R0
 28 [-]: DIV       R4 R6 R5     ; R4 := R6 / R5
 29 [-]: JMP       120          ; PC := 120
 30 [-]: GETGLOBAL R6 K3        ; R6 := TimeOfDayConstants
 31 [-]: GETTABLE  R2 R6 K6     ; R2 := R6["TIME_OF_DAY_LABEL_COLD"]
 32 [-]: GETGLOBAL R6 K3        ; R6 := TimeOfDayConstants
 33 [-]: GETTABLE  R3 R6 K7     ; R3 := R6["TIME_OF_DAY_LABEL_WARM"]
 34 [-]: SUB       R6 K9 R0     ; R6 := 36.000000 - R0
 35 [-]: DIV       R4 R6 R5     ; R4 := R6 / R5
 36 [-]: JMP       120          ; PC := 120
 37 [-]: GETGLOBAL R6 K10       ; R6 := OROKIN_TOWER_NODE_TAG
 38 [-]: EQ        1 R1 R6      ; if R1 == R6 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: GETGLOBAL R6 K11       ; R6 := ENTRATI_LANDSCAPE_NODE_TAG
 41 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 68
 42 [-]: JMP       68           ; PC := 68
 43 [-]: GETGLOBAL R6 K3        ; R6 := TimeOfDayConstants
 44 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["HOURS_PER_SECOND_ENTRATI"]
 45 [-]: LE        1 K13 R0     ; if 22.000000 <= R0 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: LT        0 R0 K14     ; if R0 >= 6.000000 then PC := 61
 48 [-]: JMP       61           ; PC := 61
 49 [-]: GETGLOBAL R7 K3        ; R7 := TimeOfDayConstants
 50 [-]: GETTABLE  R2 R7 K15    ; R2 := R7["TIME_OF_DAY_LABEL_VOME"]
 51 [-]: GETGLOBAL R7 K3        ; R7 := TimeOfDayConstants
 52 [-]: GETTABLE  R3 R7 K16    ; R3 := R7["TIME_OF_DAY_LABEL_FASS"]
 53 [-]: LE        0 K13 R0     ; if 22.000000 > R0 then PC := 58
 54 [-]: JMP       58           ; PC := 58
 55 [-]: SUB       R7 K17 R0    ; R7 := 30.000000 - R0
 56 [-]: DIV       R4 R7 R6     ; R4 := R7 / R6
 57 [-]: JMP       120          ; PC := 120
 58 [-]: SUB       R7 K14 R0    ; R7 := 6.000000 - R0
 59 [-]: DIV       R4 R7 R6     ; R4 := R7 / R6
 60 [-]: JMP       120          ; PC := 120
 61 [-]: GETGLOBAL R7 K3        ; R7 := TimeOfDayConstants
 62 [-]: GETTABLE  R2 R7 K16    ; R2 := R7["TIME_OF_DAY_LABEL_FASS"]
 63 [-]: GETGLOBAL R7 K3        ; R7 := TimeOfDayConstants
 64 [-]: GETTABLE  R3 R7 K15    ; R3 := R7["TIME_OF_DAY_LABEL_VOME"]
 65 [-]: SUB       R7 K13 R0    ; R7 := 22.000000 - R0
 66 [-]: DIV       R4 R7 R6     ; R4 := R7 / R6
 67 [-]: JMP       120          ; PC := 120
 68 [-]: GETGLOBAL R7 K18       ; R7 := ZARIMAN_NODE_TAG
 69 [-]: EQ        0 R1 R7      ; if R1 ~= R7 then PC := 96
 70 [-]: JMP       96           ; PC := 96
 71 [-]: GETGLOBAL R7 K3        ; R7 := TimeOfDayConstants
 72 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["HOURS_PER_SECOND_ZARIMAN"]
 73 [-]: LE        1 K5 R0      ; if 12.000000 <= R0 then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: LT        0 R0 K14     ; if R0 >= 6.000000 then PC := 89
 76 [-]: JMP       89           ; PC := 89
 77 [-]: GETGLOBAL R8 K3        ; R8 := TimeOfDayConstants
 78 [-]: GETTABLE  R2 R8 K20    ; R2 := R8["TIME_OF_DAY_LABEL_CORPUS"]
 79 [-]: GETGLOBAL R8 K3        ; R8 := TimeOfDayConstants
 80 [-]: GETTABLE  R3 R8 K21    ; R3 := R8["TIME_OF_DAY_LABEL_GRINEER"]
 81 [-]: LE        0 K5 R0      ; if 12.000000 > R0 then PC := 86
 82 [-]: JMP       86           ; PC := 86
 83 [-]: SUB       R8 K9 R0     ; R8 := 36.000000 - R0
 84 [-]: DIV       R4 R8 R7     ; R4 := R8 / R7
 85 [-]: JMP       120          ; PC := 120
 86 [-]: SUB       R8 K5 R0     ; R8 := 12.000000 - R0
 87 [-]: DIV       R4 R8 R7     ; R4 := R8 / R7
 88 [-]: JMP       120          ; PC := 120
 89 [-]: GETGLOBAL R8 K3        ; R8 := TimeOfDayConstants
 90 [-]: GETTABLE  R2 R8 K21    ; R2 := R8["TIME_OF_DAY_LABEL_GRINEER"]
 91 [-]: GETGLOBAL R8 K3        ; R8 := TimeOfDayConstants
 92 [-]: GETTABLE  R3 R8 K20    ; R3 := R8["TIME_OF_DAY_LABEL_CORPUS"]
 93 [-]: SUB       R8 K5 R0     ; R8 := 12.000000 - R0
 94 [-]: DIV       R4 R8 R7     ; R4 := R8 / R7
 95 [-]: JMP       120          ; PC := 120
 96 [-]: GETGLOBAL R8 K3        ; R8 := TimeOfDayConstants
 97 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["HOURS_PER_SECOND_EIDOLON"]
 98 [-]: LE        1 K13 R0     ; if 22.000000 <= R0 then PC := 102
 99 [-]: JMP       102          ; PC := 102
100 [-]: LT        0 R0 K14     ; if R0 >= 6.000000 then PC := 114
101 [-]: JMP       114          ; PC := 114
102 [-]: GETGLOBAL R9 K3        ; R9 := TimeOfDayConstants
103 [-]: GETTABLE  R2 R9 K23    ; R2 := R9["TIME_OF_DAY_LABEL_NIGHT"]
104 [-]: GETGLOBAL R9 K3        ; R9 := TimeOfDayConstants
105 [-]: GETTABLE  R3 R9 K24    ; R3 := R9["TIME_OF_DAY_LABEL_DAY"]
106 [-]: LE        0 K13 R0     ; if 22.000000 > R0 then PC := 111
107 [-]: JMP       111          ; PC := 111
108 [-]: SUB       R9 K17 R0    ; R9 := 30.000000 - R0
109 [-]: DIV       R4 R9 R8     ; R4 := R9 / R8
110 [-]: JMP       120          ; PC := 120
111 [-]: SUB       R9 K14 R0    ; R9 := 6.000000 - R0
112 [-]: DIV       R4 R9 R8     ; R4 := R9 / R8
113 [-]: JMP       120          ; PC := 120
114 [-]: GETGLOBAL R9 K3        ; R9 := TimeOfDayConstants
115 [-]: GETTABLE  R2 R9 K24    ; R2 := R9["TIME_OF_DAY_LABEL_DAY"]
116 [-]: GETGLOBAL R9 K3        ; R9 := TimeOfDayConstants
117 [-]: GETTABLE  R3 R9 K23    ; R3 := R9["TIME_OF_DAY_LABEL_NIGHT"]
118 [-]: SUB       R9 K13 R0    ; R9 := 22.000000 - R0
119 [-]: DIV       R4 R9 R8     ; R4 := R9 / R8
120 [-]: MOVE      R9 R2        ; R9 := R2
121 [-]: MOVE      R10 R3       ; R10 := R3
122 [-]: MOVE      R11 R4       ; R11 := R4
123 [-]: RETURN    R9 4         ; return R9,R10,R11
124 [-]: RETURN    R0 1         ; return 


; Function #360:
;
; Name:            
; Defined at line: 7428
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: LOADK     R1 0         ; R1 := 0.000000
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0x25d99d89
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0xbe190284
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 0         ; if not R2 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
 14 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x69727e0b]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 0         ; if not R3 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: RETURN    R1 2         ; return R1
 22 [-]: GETGLOBAL R3 K4        ; R3 := TimeOfDayConstants
 23 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["HOURS_PER_SECOND_EIDOLON"]
 24 [-]: GETGLOBAL R4 K6        ; R4 := FORTUNA_NODE_TAG
 25 [-]: EQ        1 R0 R4      ; if R0 == R4 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: GETGLOBAL R4 K7        ; R4 := ORB_VALLIS_NODE_TAG
 28 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: GETGLOBAL R4 K4        ; R4 := TimeOfDayConstants
 31 [-]: GETTABLE  R3 R4 K8     ; R3 := R4["HOURS_PER_SECOND_VENUS"]
 32 [-]: JMP       47           ; PC := 47
 33 [-]: GETGLOBAL R4 K9        ; R4 := OROKIN_TOWER_NODE_TAG
 34 [-]: EQ        1 R0 R4      ; if R0 == R4 then PC := 39
 35 [-]: JMP       39           ; PC := 39
 36 [-]: GETGLOBAL R4 K10       ; R4 := ENTRATI_LANDSCAPE_NODE_TAG
 37 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 42
 38 [-]: JMP       42           ; PC := 42
 39 [-]: GETGLOBAL R4 K4        ; R4 := TimeOfDayConstants
 40 [-]: GETTABLE  R3 R4 K11    ; R3 := R4["HOURS_PER_SECOND_ENTRATI"]
 41 [-]: JMP       47           ; PC := 47
 42 [-]: GETGLOBAL R4 K12       ; R4 := ZARIMAN_NODE_TAG
 43 [-]: EQ        0 R0 R4      ; if R0 ~= R4 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: GETGLOBAL R4 K4        ; R4 := TimeOfDayConstants
 46 [-]: GETTABLE  R3 R4 K13    ; R3 := R4["HOURS_PER_SECOND_ZARIMAN"]
 47 [-]: GETGLOBAL R4 K2        ; R4 := 0xbe190284
 48 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0xb77ba3b0]
 49 [-]: MOVE      R6 R3        ; R6 := R3
 50 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 51 [-]: MOVE      R1 R4        ; R1 := R4
 52 [-]: RETURN    R1 2         ; return R1
 53 [-]: RETURN    R0 1         ; return 


; Function #361:
;
; Name:            
; Defined at line: 7453
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LT        0 K0 R0      ; if 30.000000 >= R0 then PC := 25
  2 [-]: JMP       25           ; PC := 25
  3 [-]: SUB       R1 R0 K0     ; R1 := R0 - 30.000000
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x9ba7909f
  5 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xa1d3de97]
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: LOADK     R3 K3        ; R3 := "+"
  8 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
  9 [-]: MOVE      R5 R2        ; R5 := R2
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: TEST      R4 1         ; if R4 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: SELF      R4 R2 K5     ; R5 := R2; R4 := R2[0x42b04007]
 14 [-]: LOADK     R6 K6        ; R6 := "<LEGENDARY_RANK>"
 15 [-]: LOADBOOL  R7 1 0       ; R7 := true
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: MOVE      R3 R4        ; R3 := R4
 18 [-]: GETGLOBAL R4 K7        ; R4 := 0x64fb1586
 19 [-]: MOVE      R5 R1        ; R5 := R1
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 23 [-]: RETURN    R4 2         ; return R4
 24 [-]: JMP       29           ; PC := 29
 25 [-]: GETGLOBAL R4 K7        ; R4 := 0x64fb1586
 26 [-]: MOVE      R5 R0        ; R5 := R0
 27 [-]: TAILCALL  R4 2 0       ; R4,... := R4(R5)
 28 [-]: RETURN    R4 0         ; return R4,...
 29 [-]: RETURN    R0 1         ; return 


; Function #362:
;
; Name:            
; Defined at line: 7468
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #363:
;
; Name:            
; Defined at line: 7472
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  38

  1 [-]: NEWTABLE  R3 0 5       ; R3 := {}
  2 [-]: SETTABLE  R3 K0 K1     ; R3["Name"] := nil
  3 [-]: SETTABLE  R3 K2 K1     ; R3["NameWithRank"] := nil
  4 [-]: SETTABLE  R3 K3 K1     ; R3["WeaponInfo"] := nil
  5 [-]: SETTABLE  R3 K4 K1     ; R3["CompanionInfo"] := nil
  6 [-]: SETTABLE  R3 K5 K1     ; R3["AuraInfo"] := nil
  7 [-]: GETGLOBAL R4 K6        ; R4 := 0x7b998233
  8 [-]: MOVE      R5 R1        ; R5 := R1
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: TEST      R4 1         ; if R4 then PC := 318
 11 [-]: JMP       318          ; PC := 318
 12 [-]: GETTABLE  R4 R1 K7     ; R4 := R1["name"]
 13 [-]: GETGLOBAL R5 K8        ; R5 := cjson
 14 [-]: GETTABLE  R5 R5 K9     ; R82 := R5[0x7ab914d8]
 15 [-]: GETTABLE  R6 R1 K10    ; R6 := R1["loadout"]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: GETGLOBAL R6 K6        ; R6 := 0x7b998233
 18 [-]: MOVE      R7 R4        ; R7 := R4
 19 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 20 [-]: TEST      R6 1         ; if R6 then PC := 318
 21 [-]: JMP       318          ; PC := 318
 22 [-]: GETGLOBAL R6 K6        ; R6 := 0x7b998233
 23 [-]: MOVE      R7 R5        ; R7 := R5
 24 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 25 [-]: TEST      R6 1         ; if R6 then PC := 318
 26 [-]: JMP       318          ; PC := 318
 27 [-]: EQ        1 R4 K11     ; if R4 == "" then PC := 318
 28 [-]: JMP       318          ; PC := 318
 29 [-]: LOADK     R6 0         ; R6 := 0.000000
 30 [-]: GETGLOBAL R7 K6        ; R7 := 0x7b998233
 31 [-]: GETTABLE  R8 R5 K12    ; R8 := R5["PlayerLevel"]
 32 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 33 [-]: TEST      R7 1         ; if R7 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETTABLE  R7 R5 K12    ; R7 := R5["PlayerLevel"]
 36 [-]: EQ        1 R7 K11     ; if R7 == "" then PC := 39
 37 [-]: JMP       39           ; PC := 39
 38 [-]: GETTABLE  R6 R5 K12    ; R6 := R5["PlayerLevel"]
 39 [-]: MOVE      R7 R4        ; R7 := R4
 40 [-]: SELF      R8 R0 K13    ; R9 := R0; R8 := R0[0x42b04007]
 41 [-]: LOADK     R10 K14      ; R10 := "<RANK_"
 42 [-]: MOVE      R11 R6       ; R11 := R6
 43 [-]: LOADK     R12 K15      ; R12 := ">"
 44 [-]: CONCAT    R10 R10 R12  ; R10 := R10 .. R11 .. R12
 45 [-]: LOADBOOL  R11 1 0      ; R11 := true
 46 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 47 [-]: GETUPVAL  R9 U0        ; R9 := U0
 48 [-]: MOVE      R10 R6       ; R10 := R6
 49 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 50 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 51 [-]: MOVE      R9 R7        ; R9 := R7
 52 [-]: LOADK     R10 K16      ; R10 := " "
 53 [-]: MOVE      R11 R8       ; R11 := R8
 54 [-]: CONCAT    R7 R9 R11    ; R7 := R9 .. R10 .. R11
 55 [-]: SETTABLE  R3 K0 R4     ; R3["Name"] := R4
 56 [-]: SETTABLE  R3 K2 R7     ; R3["NameWithRank"] := R7
 57 [-]: LOADNIL   R9 R10       ; R9 := R10 := nil
 58 [-]: GETUPVAL  R11 U1       ; R11 := U1
 59 [-]: GETTABLE  R11 R11 K17  ; R82 := R11[0x06d055f9]
 60 [-]: GETTABLE  R12 R5 K18   ; R12 := R5["NORMAL_PVP"]
 61 [-]: EQ        0 R12 K1     ; if R12 ~= nil then PC := 64
 62 [-]: JMP       64           ; PC := 64
 63 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 64
 64 [-]: LOADBOOL  R12 1 0      ; R12 := true
 65 [-]: GETTABLE  R13 R5 K18   ; R13 := R5["NORMAL_PVP"]
 66 [-]: GETTABLE  R14 R5 K19   ; R14 := R5["NORMAL"]
 67 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 68 [-]: MOVE      R9 R11       ; R9 := R11
 69 [-]: GETUPVAL  R11 U1       ; R11 := U1
 70 [-]: GETTABLE  R11 R11 K17  ; R82 := R11[0x06d055f9]
 71 [-]: GETTABLE  R12 R5 K18   ; R12 := R5["NORMAL_PVP"]
 72 [-]: EQ        0 R12 K1     ; if R12 ~= nil then PC := 75
 73 [-]: JMP       75           ; PC := 75
 74 [-]: LOADBOOL  R12 0 1      ; R12 := false; PC := 75
 75 [-]: LOADBOOL  R12 1 0      ; R12 := true
 76 [-]: LOADK     R13 3        ; R13 := 3.000000
 77 [-]: LOADK     R14 0        ; R14 := 0.000000
 78 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 79 [-]: MOVE      R10 R11      ; R10 := R11
 80 [-]: NEWTABLE  R11 5 0      ; R11 := {}
 81 [-]: NEWTABLE  R12 0 2      ; R12 := {}
 82 [-]: GETTABLE  R13 R9 K22   ; R13 := R9[1.000000]
 83 [-]: SETTABLE  R12 K21 R13  ; R12["Type"] := R13
 84 [-]: SETTABLE  R12 K23 K24  ; R12["isWeapon"] := true
 85 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 86 [-]: GETTABLE  R14 R5 K25   ; R14 := R5["DragonKey"]
 87 [-]: SETTABLE  R13 K21 R14  ; R13["Type"] := R14
 88 [-]: NEWTABLE  R14 0 2      ; R14 := {}
 89 [-]: GETTABLE  R15 R9 K26   ; R15 := R9[3.000000]
 90 [-]: SETTABLE  R14 K21 R15  ; R14["Type"] := R15
 91 [-]: SETTABLE  R14 K23 K24  ; R14["isWeapon"] := true
 92 [-]: NEWTABLE  R15 0 2      ; R15 := {}
 93 [-]: GETTABLE  R16 R9 K27   ; R16 := R9[2.000000]
 94 [-]: SETTABLE  R15 K21 R16  ; R15["Type"] := R16
 95 [-]: SETTABLE  R15 K23 K24  ; R15["isWeapon"] := true
 96 [-]: NEWTABLE  R16 0 2      ; R16 := {}
 97 [-]: GETTABLE  R17 R9 K28   ; R17 := R9[4.000000]
 98 [-]: SETTABLE  R16 K21 R17  ; R16["Type"] := R17
 99 [-]: SETTABLE  R16 K23 K24  ; R16["isWeapon"] := true
100 [-]: SETLIST   R11 5 1      ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 5
101 [-]: CLOSURE   R12 0        ; R12 := closure(Function #363.1)
102 [-]: CLOSURE   R13 1        ; R13 := closure(Function #363.2)
103 [-]: MOVE      R14 R13      ; R14 := R13
104 [-]: MOVE      R15 R2       ; R15 := R2
105 [-]: CALL      R14 2 2      ; R14 := R14(R15)
106 [-]: TEST      R14 1        ; if R14 then PC := 113
107 [-]: JMP       113          ; PC := 113
108 [-]: MOVE      R14 R12      ; R14 := R12
109 [-]: MOVE      R15 R2       ; R15 := R2
110 [-]: CALL      R14 2 2      ; R14 := R14(R15)
111 [-]: TEST      R14 0        ; if not R14 then PC := 135
112 [-]: JMP       135          ; PC := 135
113 [-]: GETTABLE  R14 R5 K29   ; R14 := R5["ARCHWING"]
114 [-]: TEST      R14 0        ; if not R14 then PC := 135
115 [-]: JMP       135          ; PC := 135
116 [-]: GETTABLE  R14 R5 K30   ; R14 := R5["HasArchwing"]
117 [-]: TEST      R14 0        ; if not R14 then PC := 135
118 [-]: JMP       135          ; PC := 135
119 [-]: LOADK     R14 1        ; R14 := 1.000000
120 [-]: GETTABLE  R15 R5 K29   ; R15 := R5["ARCHWING"]
121 [-]: LEN       R15 R15      ; R15 := # R15
122 [-]: LOADK     R16 1        ; R16 := 1.000000
123 [-]: FORPREP   R14 134      ; R14 -= R16; PC := 134
124 [-]: GETGLOBAL R18 K31      ; R18 := 0x33bdd652
125 [-]: GETTABLE  R18 R18 K32  ; R82 := R18[0x23d5322f]
126 [-]: MOVE      R19 R11      ; R19 := R11
127 [-]: NEWTABLE  R20 0 2      ; R20 := {}
128 [-]: GETTABLE  R21 R5 K29   ; R21 := R5["ARCHWING"]
129 [-]: ADD       R22 K33 R17  ; R22 := 0.000000 + R17
130 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
131 [-]: SETTABLE  R20 K21 R21  ; R20["Type"] := R21
132 [-]: SETTABLE  R20 K23 K24  ; R20["isWeapon"] := true
133 [-]: CALL      R18 3 1      ; R18(R19,R20)
134 [-]: FORLOOP   R14 124      ; R14 += R16; if R14 <= R15 then begin PC := 124; R17 := R14 end
135 [-]: GETGLOBAL R18 K6       ; R18 := 0x7b998233
136 [-]: MOVE      R19 R9       ; R19 := R9
137 [-]: CALL      R18 2 2      ; R18 := R18(R19)
138 [-]: TEST      R18 1        ; if R18 then PC := 239
139 [-]: JMP       239          ; PC := 239
140 [-]: GETGLOBAL R18 K6       ; R18 := 0x7b998233
141 [-]: MOVE      R19 R11      ; R19 := R11
142 [-]: CALL      R18 2 2      ; R18 := R18(R19)
143 [-]: TEST      R18 1        ; if R18 then PC := 239
144 [-]: JMP       239          ; PC := 239
145 [-]: LOADK     R18 K11      ; R18 := ""
146 [-]: LOADK     R19 1        ; R19 := 1.000000
147 [-]: LEN       R20 R11      ; R20 := # R11
148 [-]: LOADK     R21 1        ; R21 := 1.000000
149 [-]: FORPREP   R19 237      ; R19 -= R21; PC := 237
150 [-]: GETTABLE  R23 R11 R22  ; R23 := R11[R22]
151 [-]: GETGLOBAL R24 K6       ; R24 := 0x7b998233
152 [-]: MOVE      R25 R23      ; R25 := R23
153 [-]: CALL      R24 2 2      ; R24 := R24(R25)
154 [-]: TEST      R24 1        ; if R24 then PC := 237
155 [-]: JMP       237          ; PC := 237
156 [-]: GETTABLE  R24 R23 K21  ; R24 := R23["Type"]
157 [-]: TEST      R24 0        ; if not R24 then PC := 237
158 [-]: JMP       237          ; PC := 237
159 [-]: GETTABLE  R24 R23 K21  ; R24 := R23["Type"]
160 [-]: GETTABLE  R24 R24 K34  ; R24 := R24["LocTag"]
161 [-]: TEST      R24 0        ; if not R24 then PC := 237
162 [-]: JMP       237          ; PC := 237
163 [-]: GETTABLE  R24 R23 K23  ; R24 := R23["isWeapon"]
164 [-]: TEST      R24 0        ; if not R24 then PC := 199
165 [-]: JMP       199          ; PC := 199
166 [-]: GETGLOBAL R24 K35      ; R24 := 0x64fb1586
167 [-]: GETTABLE  R25 R23 K21  ; R25 := R23["Type"]
168 [-]: GETTABLE  R25 R25 K34  ; R25 := R25["LocTag"]
169 [-]: CALL      R24 2 2      ; R24 := R24(R25)
170 [-]: GETGLOBAL R25 K20      ; R25 := 0x6c97a788
171 [-]: GETTABLE  R25 R25 K36  ; R82 := R25[0x834628e8]
172 [-]: MOVE      R26 R24      ; R26 := R24
173 [-]: CALL      R25 2 2      ; R25 := R25(R26)
174 [-]: EQ        1 R25 K11    ; if R25 == "" then PC := 177
175 [-]: JMP       177          ; PC := 177
176 [-]: MOVE      R24 R25      ; R24 := R25
177 [-]: EQ        1 R24 K11    ; if R24 == "" then PC := 237
178 [-]: JMP       237          ; PC := 237
179 [-]: LT        0 K22 R22    ; if 1.000000 >= R22 then PC := 184
180 [-]: JMP       184          ; PC := 184
181 [-]: MOVE      R26 R18      ; R26 := R18
182 [-]: LOADK     R27 K37      ; R27 := "\n\r"
183 [-]: CONCAT    R18 R26 R27  ; R18 := R26 .. R27
184 [-]: GETTABLE  R26 R23 K21  ; R26 := R23["Type"]
185 [-]: GETTABLE  R26 R26 K38  ; R26 := R26["Level"]
186 [-]: MOVE      R27 R18      ; R27 := R18
187 [-]: GETGLOBAL R28 K39      ; R28 := 0x7f5022cf
188 [-]: GETTABLE  R28 R28 K40  ; R82 := R28[0x3f3e4d12]
189 [-]: SELF      R29 R0 K13   ; R30 := R0; R29 := R0[0x42b04007]
190 [-]: MOVE      R31 R24      ; R31 := R24
191 [-]: LOADBOOL  R32 1 0      ; R32 := true
192 [-]: CALL      R29 4 0      ; R29,... := R29(R30,R31,R32)
193 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
194 [-]: LOADK     R29 K41      ; R29 := " ["
195 [-]: MOVE      R30 R26      ; R30 := R26
196 [-]: LOADK     R31 K42      ; R31 := "]"
197 [-]: CONCAT    R18 R27 R31  ; R18 := R27 .. R28 .. R29 .. R30 .. R31
198 [-]: JMP       237          ; PC := 237
199 [-]: GETGLOBAL R27 K6       ; R27 := 0x7b998233
200 [-]: GETTABLE  R28 R23 K21  ; R28 := R23["Type"]
201 [-]: CALL      R27 2 2      ; R27 := R27(R28)
202 [-]: TEST      R27 1        ; if R27 then PC := 237
203 [-]: JMP       237          ; PC := 237
204 [-]: GETGLOBAL R27 K43      ; R27 := 0x7ed0a956
205 [-]: GETTABLE  R28 R23 K21  ; R28 := R23["Type"]
206 [-]: CALL      R27 2 2      ; R27 := R27(R28)
207 [-]: SELF      R27 R27 K44  ; R28 := R27; R27 := R27[0xf2deaf69]
208 [-]: GETGLOBAL R29 K43      ; R29 := 0x7ed0a956
209 [-]: LOADK     R30 K45      ; R30 := "/Lotus/Types/Restoratives/Upgraded/CorruptedKey"
210 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
211 [-]: CALL      R27 0 2      ; R27 := R27(R28,...)
212 [-]: TEST      R27 0        ; if not R27 then PC := 237
213 [-]: JMP       237          ; PC := 237
214 [-]: GETGLOBAL R27 K46      ; R27 := 0xb009bbc6
215 [-]: GETTABLE  R28 R23 K21  ; R28 := R23["Type"]
216 [-]: CALL      R27 2 2      ; R27 := R27(R28)
217 [-]: GETGLOBAL R28 K6       ; R28 := 0x7b998233
218 [-]: MOVE      R29 R27      ; R29 := R27
219 [-]: CALL      R28 2 2      ; R28 := R28(R29)
220 [-]: TEST      R28 1        ; if R28 then PC := 237
221 [-]: JMP       237          ; PC := 237
222 [-]: LT        0 K22 R22    ; if 1.000000 >= R22 then PC := 227
223 [-]: JMP       227          ; PC := 227
224 [-]: MOVE      R28 R18      ; R28 := R18
225 [-]: LOADK     R29 K37      ; R29 := "\n\r"
226 [-]: CONCAT    R18 R28 R29  ; R18 := R28 .. R29
227 [-]: SELF      R28 R27 K47  ; R29 := R27; R28 := R27[0xd3a9d01f]
228 [-]: CALL      R28 2 2      ; R28 := R28(R29)
229 [-]: MOVE      R29 R18      ; R29 := R18
230 [-]: SELF      R30 R0 K13   ; R31 := R0; R30 := R0[0x42b04007]
231 [-]: GETGLOBAL R32 K35      ; R32 := 0x64fb1586
232 [-]: MOVE      R33 R28      ; R33 := R28
233 [-]: CALL      R32 2 2      ; R32 := R32(R33)
234 [-]: LOADBOOL  R33 0 0      ; R33 := false
235 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
236 [-]: CONCAT    R18 R29 R30  ; R18 := R29 .. R30
237 [-]: FORLOOP   R19 150      ; R19 += R21; if R19 <= R20 then begin PC := 150; R22 := R19 end
238 [-]: SETTABLE  R3 K3 R18    ; R3["WeaponInfo"] := R18
239 [-]: LOADK     R29 K11      ; R29 := ""
240 [-]: GETTABLE  R30 R5 K48   ; R30 := R5["KubrowName"]
241 [-]: EQ        1 R30 K11    ; if R30 == "" then PC := 256
242 [-]: JMP       256          ; PC := 256
243 [-]: GETUPVAL  R30 U1       ; R30 := U1
244 [-]: GETTABLE  R30 R30 K49  ; R82 := R30[0x23a862e6]
245 [-]: CALL      R30 1 2      ; R30 := R30()
246 [-]: TEST      R30 0        ; if not R30 then PC := 254
247 [-]: JMP       254          ; PC := 254
248 [-]: SELF      R30 R0 K13   ; R31 := R0; R30 := R0[0x42b04007]
249 [-]: LOADK     R32 K50      ; R32 := "/Lotus/Language/Menu/CategoryKubrow"
250 [-]: LOADBOOL  R33 0 0      ; R33 := false
251 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
252 [-]: MOVE      R29 R30      ; R29 := R30
253 [-]: JMP       286          ; PC := 286
254 [-]: GETTABLE  R29 R5 K48   ; R29 := R5["KubrowName"]
255 [-]: JMP       286          ; PC := 286
256 [-]: GETGLOBAL R30 K6       ; R30 := 0x7b998233
257 [-]: GETTABLE  R31 R5 K51   ; R31 := R5["SENTINEL"]
258 [-]: CALL      R30 2 2      ; R30 := R30(R31)
259 [-]: TEST      R30 1        ; if R30 then PC := 286
260 [-]: JMP       286          ; PC := 286
261 [-]: GETGLOBAL R30 K35      ; R30 := 0x64fb1586
262 [-]: GETTABLE  R31 R5 K51   ; R31 := R5["SENTINEL"]
263 [-]: GETTABLE  R31 R31 K22  ; R31 := R31[1.000000]
264 [-]: GETTABLE  R31 R31 K34  ; R31 := R31["LocTag"]
265 [-]: CALL      R30 2 2      ; R30 := R30(R31)
266 [-]: GETGLOBAL R31 K6       ; R31 := 0x7b998233
267 [-]: MOVE      R32 R30      ; R32 := R30
268 [-]: CALL      R31 2 2      ; R31 := R31(R32)
269 [-]: TEST      R31 1        ; if R31 then PC := 286
270 [-]: JMP       286          ; PC := 286
271 [-]: GETGLOBAL R31 K20      ; R31 := 0x6c97a788
272 [-]: GETTABLE  R31 R31 K36  ; R82 := R31[0x834628e8]
273 [-]: MOVE      R32 R30      ; R32 := R30
274 [-]: CALL      R31 2 2      ; R31 := R31(R32)
275 [-]: EQ        1 R31 K11    ; if R31 == "" then PC := 279
276 [-]: JMP       279          ; PC := 279
277 [-]: MOVE      R29 R31      ; R29 := R31
278 [-]: JMP       286          ; PC := 286
279 [-]: SELF      R32 R0 K13   ; R33 := R0; R32 := R0[0x42b04007]
280 [-]: GETGLOBAL R34 K35      ; R34 := 0x64fb1586
281 [-]: MOVE      R35 R30      ; R35 := R30
282 [-]: CALL      R34 2 2      ; R34 := R34(R35)
283 [-]: LOADBOOL  R35 0 0      ; R35 := false
284 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
285 [-]: MOVE      R29 R32      ; R29 := R32
286 [-]: EQ        1 R29 K11    ; if R29 == "" then PC := 302
287 [-]: JMP       302          ; PC := 302
288 [-]: GETGLOBAL R32 K6       ; R32 := 0x7b998233
289 [-]: GETTABLE  R33 R5 K51   ; R33 := R5["SENTINEL"]
290 [-]: CALL      R32 2 2      ; R32 := R32(R33)
291 [-]: TEST      R32 1        ; if R32 then PC := 302
292 [-]: JMP       302          ; PC := 302
293 [-]: GETTABLE  R32 R5 K51   ; R32 := R5["SENTINEL"]
294 [-]: GETTABLE  R32 R32 K22  ; R32 := R32[1.000000]
295 [-]: GETTABLE  R32 R32 K38  ; R32 := R32["Level"]
296 [-]: LOADK     R33 K37      ; R33 := "\n\r"
297 [-]: MOVE      R34 R29      ; R34 := R29
298 [-]: LOADK     R35 K41      ; R35 := " ["
299 [-]: MOVE      R36 R32      ; R36 := R32
300 [-]: LOADK     R37 K42      ; R37 := "]"
301 [-]: CONCAT    R29 R33 R37  ; R29 := R33 .. R34 .. R35 .. R36 .. R37
302 [-]: SETTABLE  R3 K4 R29    ; R3["CompanionInfo"] := R29
303 [-]: SELF      R33 R0 K13   ; R34 := R0; R33 := R0[0x42b04007]
304 [-]: GETGLOBAL R35 K35      ; R35 := 0x64fb1586
305 [-]: GETTABLE  R36 R5 K52   ; R36 := R5["AuraName"]
306 [-]: CALL      R35 2 2      ; R35 := R35(R36)
307 [-]: LOADBOOL  R36 0 0      ; R36 := false
308 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
309 [-]: EQ        1 R33 K11    ; if R33 == "" then PC := 317
310 [-]: JMP       317          ; PC := 317
311 [-]: LOADK     R34 K37      ; R34 := "\n\r"
312 [-]: GETGLOBAL R35 K39      ; R35 := 0x7f5022cf
313 [-]: GETTABLE  R35 R35 K40  ; R82 := R35[0x3f3e4d12]
314 [-]: MOVE      R36 R33      ; R36 := R33
315 [-]: CALL      R35 2 2      ; R35 := R35(R36)
316 [-]: CONCAT    R33 R34 R35  ; R33 := R34 .. R35
317 [-]: SETTABLE  R3 K5 R33    ; R3["AuraInfo"] := R33
318 [-]: RETURN    R3 2         ; return R3
319 [-]: RETURN    R0 1         ; return 


; Function #363.1:
;
; Name:            
; Defined at line: 7508
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADBOOL  R1 0 0       ; R1 := false
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["missionType"]
  9 [-]: EQ        0 R1 K3      ; if R1 ~= 28.000000 then PC := 18
 10 [-]: JMP       18           ; PC := 18
 11 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["sortieId"]
 12 [-]: EQ        0 R1 K5      ; if R1 ~= "" then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["goalTag"]
 15 [-]: GETGLOBAL R2 K7        ; R2 := EMPTY_SYMBOL
 16 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 19
 19 [-]: LOADBOOL  R1 1 0       ; R1 := true
 20 [-]: RETURN    R1 2         ; return R1
 21 [-]: RETURN    R0 1         ; return 


; Function #363.2:
;
; Name:            
; Defined at line: 7516
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADBOOL  R1 0 0       ; R1 := false
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["archwingRequired"]
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: RETURN    R0 1         ; return 


; Function #364:
;
; Name:            
; Defined at line: 7603
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: CLOSURE   R1 0         ; R1 := closure(Function #364.1)
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: SETTABLE  R0 K1 R1     ; R0["OnVendorConversationStarted"] := R1
  6 [-]: GETGLOBAL R0 K0        ; R0 := _T
  7 [-]: CLOSURE   R1 1         ; R1 := closure(Function #364.2)
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: SETTABLE  R0 K2 R1     ; R0["OnVendorConversationEnded"] := R1
 10 [-]: RETURN    R0 1         ; return 


; Function #364.1:
;
; Name:            
; Defined at line: 7605
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SkipVendorDialog"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["SkipVendorDialog"]
  7 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mSpeakerName"]
  8 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0x0b96777e
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: EQ        0 R2 K4      ; if R2 ~= "function" then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: MOVE      R2 R1        ; R2 := R1
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: MOVE      R1 R2        ; R1 := R2
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 19 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mTransmissionSet"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: TEST      R1 0         ; if not R1 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: RETURN    R0 1         ; return 
 26 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 27 [-]: GETUPVAL  R3 U0        ; R3 := U0
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: MOVE      R5 R2        ; R5 := R2
 30 [-]: CALL      R3 3 1       ; R3(R4,R5)
 31 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mTransmissionSet"]
 32 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x10c9eef2]
 33 [-]: GETGLOBAL R5 K8        ; R5 := 0x0469f296
 34 [-]: LOADK     R6 K9        ; R6 := "FirstVisit"
 35 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 36 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 37 [-]: GETGLOBAL R4 K8        ; R4 := 0x0469f296
 38 [-]: LOADK     R5 K10       ; R5 := "FirstVisitIntro"
 39 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 40 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mSpeakerName"]
 41 [-]: GETGLOBAL R6 K5        ; R6 := 0x7b998233
 42 [-]: MOVE      R7 R3        ; R7 := R3
 43 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 44 [-]: TEST      R6 1         ; if R6 then PC := 54
 45 [-]: JMP       54           ; PC := 54
 46 [-]: GETGLOBAL R6 K11       ; R6 := 0x25d99d89
 47 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6[0x21a1810f]
 48 [-]: GETGLOBAL R8 K8        ; R8 := 0x0469f296
 49 [-]: MOVE      R9 R5        ; R9 := R5
 50 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 51 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 52 [-]: NOT       R6 R6        ; R6 := not R6
 53 [-]: JMP       56           ; PC := 56
 54 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 55
 55 [-]: LOADBOOL  R6 1 0       ; R6 := true
 56 [-]: TEST      R6 1         ; if R6 then PC := 87
 57 [-]: JMP       87           ; PC := 87
 58 [-]: GETUPVAL  R7 U1        ; R7 := U1
 59 [-]: CALL      R7 1 2       ; R7 := R7()
 60 [-]: TEST      R7 0         ; if not R7 then PC := 87
 61 [-]: JMP       87           ; PC := 87
 62 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["mTransmissionSet"]
 63 [-]: SELF      R7 R7 K7     ; R8 := R7; R7 := R7[0x10c9eef2]
 64 [-]: GETGLOBAL R9 K8        ; R9 := 0x0469f296
 65 [-]: LOADK     R10 K13      ; R10 := "PostNewWar"
 66 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 67 [-]: CALL      R7 0 2       ; R7 := R7(R8,...)
 68 [-]: MOVE      R3 R7        ; R3 := R7
 69 [-]: GETGLOBAL R7 K5        ; R7 := 0x7b998233
 70 [-]: MOVE      R8 R3        ; R8 := R3
 71 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 72 [-]: TEST      R7 1         ; if R7 then PC := 87
 73 [-]: JMP       87           ; PC := 87
 74 [-]: MOVE      R7 R5        ; R7 := R5
 75 [-]: LOADK     R8 K13       ; R8 := "PostNewWar"
 76 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 77 [-]: GETGLOBAL R8 K11       ; R8 := 0x25d99d89
 78 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8[0x21a1810f]
 79 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
 80 [-]: MOVE      R11 R7       ; R11 := R7
 81 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 82 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 83 [-]: TEST      R8 1         ; if R8 then PC := 87
 84 [-]: JMP       87           ; PC := 87
 85 [-]: LOADBOOL  R6 1 0       ; R6 := true
 86 [-]: MOVE      R5 R7        ; R5 := R7
 87 [-]: GETTABLE  R8 R2 K14    ; R8 := R2["Loved"]
 88 [-]: TEST      R8 0         ; if not R8 then PC := 134
 89 [-]: JMP       134          ; PC := 134
 90 [-]: TEST      R6 1         ; if R6 then PC := 118
 91 [-]: JMP       118          ; PC := 118
 92 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["mTransmissionSet"]
 93 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0x10c9eef2]
 94 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
 95 [-]: LOADK     R11 K15      ; R11 := "FirstLoved"
 96 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 97 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 98 [-]: MOVE      R3 R8        ; R3 := R8
 99 [-]: LOADNIL   R4 R4        ; R4 := nil
100 [-]: MOVE      R8 R5        ; R8 := R5
101 [-]: LOADK     R9 K14       ; R9 := "Loved"
102 [-]: CONCAT    R5 R8 R9     ; R5 := R8 .. R9
103 [-]: GETGLOBAL R8 K5        ; R8 := 0x7b998233
104 [-]: MOVE      R9 R3        ; R9 := R3
105 [-]: CALL      R8 2 2       ; R8 := R8(R9)
106 [-]: TEST      R8 1         ; if R8 then PC := 116
107 [-]: JMP       116          ; PC := 116
108 [-]: GETGLOBAL R8 K11       ; R8 := 0x25d99d89
109 [-]: SELF      R8 R8 K12    ; R9 := R8; R8 := R8[0x21a1810f]
110 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
111 [-]: MOVE      R11 R5       ; R11 := R5
112 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
113 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
114 [-]: NOT       R6 R8        ; R6 := not R8
115 [-]: JMP       118          ; PC := 118
116 [-]: LOADBOOL  R6 0 1       ; R6 := false; PC := 117
117 [-]: LOADBOOL  R6 1 0       ; R6 := true
118 [-]: GETGLOBAL R8 K5        ; R8 := 0x7b998233
119 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["mHubNpc"]
120 [-]: CALL      R8 2 2       ; R8 := R8(R9)
121 [-]: TEST      R8 1         ; if R8 then PC := 134
122 [-]: JMP       134          ; PC := 134
123 [-]: GETTABLE  R8 R0 K16    ; R8 := R0["mHubNpc"]
124 [-]: SELF      R8 R8 K17    ; R9 := R8; R8 := R8[0x4c1db200]
125 [-]: LOADBOOL  R10 0 0      ; R10 := false
126 [-]: CALL      R8 3 1       ; R8(R9,R10)
127 [-]: GETTABLE  R8 R0 K16    ; R8 := R0["mHubNpc"]
128 [-]: SELF      R8 R8 K18    ; R9 := R8; R8 := R8[0x69fcfd29]
129 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
130 [-]: LOADK     R11 K19      ; R11 := "LovedIntro"
131 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
132 [-]: CALL      R8 0 1       ; R8(R9,...)
133 [-]: SETTABLE  R0 K20 K21   ; R0["IsUnmasked"] := true
134 [-]: TEST      R6 1         ; if R6 then PC := 185
135 [-]: JMP       185          ; PC := 185
136 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["mTransmissionSet"]
137 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0x10c9eef2]
138 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
139 [-]: LOADK     R11 K22      ; R11 := "IntroRank"
140 [-]: GETGLOBAL R12 K23      ; R12 := 0x64fb1586
141 [-]: GETTABLE  R13 R2 K24   ; R13 := R2["Level"]
142 [-]: CALL      R12 2 2      ; R12 := R12(R13)
143 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
144 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
145 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
146 [-]: MOVE      R3 R8        ; R3 := R8
147 [-]: GETGLOBAL R8 K5        ; R8 := 0x7b998233
148 [-]: MOVE      R9 R3        ; R9 := R3
149 [-]: CALL      R8 2 2       ; R8 := R8(R9)
150 [-]: TEST      R8 0         ; if not R8 then PC := 184
151 [-]: JMP       184          ; PC := 184
152 [-]: GETTABLE  R8 R2 K24    ; R8 := R2["Level"]
153 [-]: EQ        0 R8 K25     ; if R8 ~= 0.000000 then PC := 166
154 [-]: JMP       166          ; PC := 166
155 [-]: GETTABLE  R8 R2 K26    ; R8 := R2["Reputation"]
156 [-]: EQ        0 R8 K25     ; if R8 ~= 0.000000 then PC := 166
157 [-]: JMP       166          ; PC := 166
158 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["mTransmissionSet"]
159 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0x10c9eef2]
160 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
161 [-]: LOADK     R11 K27      ; R11 := "Intro"
162 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
163 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
164 [-]: MOVE      R3 R8        ; R3 := R8
165 [-]: JMP       184          ; PC := 184
166 [-]: GETTABLE  R8 R2 K14    ; R8 := R2["Loved"]
167 [-]: TEST      R8 1         ; if R8 then PC := 177
168 [-]: JMP       177          ; PC := 177
169 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["mTransmissionSet"]
170 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0x10c9eef2]
171 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
172 [-]: LOADK     R11 K28      ; R11 := "Welcome"
173 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
174 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
175 [-]: MOVE      R3 R8        ; R3 := R8
176 [-]: JMP       184          ; PC := 184
177 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["mTransmissionSet"]
178 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0x10c9eef2]
179 [-]: GETGLOBAL R10 K8       ; R10 := 0x0469f296
180 [-]: LOADK     R11 K14      ; R11 := "Loved"
181 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
182 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
183 [-]: MOVE      R3 R8        ; R3 := R8
184 [-]: LOADNIL   R4 R4        ; R4 := nil
185 [-]: GETTABLE  R8 R0 K29    ; R8 := R0["mEventStageTag"]
186 [-]: GETGLOBAL R9 K30       ; R9 := EMPTY_SYMBOL
187 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 225
188 [-]: JMP       225          ; PC := 225
189 [-]: GETTABLE  R8 R0 K31    ; R8 := R0["mEventTransmissionTag"]
190 [-]: GETGLOBAL R9 K30       ; R9 := EMPTY_SYMBOL
191 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 225
192 [-]: JMP       225          ; PC := 225
193 [-]: GETGLOBAL R8 K11       ; R8 := 0x25d99d89
194 [-]: SELF      R8 R8 K32    ; R9 := R8; R8 := R8[0x69727e0b]
195 [-]: CALL      R8 2 2       ; R8 := R8(R9)
196 [-]: GETTABLE  R9 R8 K33    ; R9 := R8["mGoals"]
197 [-]: LOADK     R10 1        ; R10 := 1.000000
198 [-]: LEN       R11 R9       ; R11 := # R9
199 [-]: LOADK     R12 1        ; R12 := 1.000000
200 [-]: FORPREP   R10 224      ; R10 -= R12; PC := 224
201 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
202 [-]: GETGLOBAL R15 K34      ; R15 := 0x34291f5c
203 [-]: GETTABLE  R15 R15 K35  ; R82 := R15[0x397b920f]
204 [-]: GETTABLE  R16 R14 K36  ; R16 := R14["mActivation"]
205 [-]: CALL      R15 2 2      ; R15 := R15(R16)
206 [-]: LE        0 R15 K25    ; if R15 > 0.000000 then PC := 224
207 [-]: JMP       224          ; PC := 224
208 [-]: GETGLOBAL R15 K34      ; R15 := 0x34291f5c
209 [-]: GETTABLE  R15 R15 K35  ; R82 := R15[0x397b920f]
210 [-]: GETTABLE  R16 R14 K37  ; R16 := R14["mExpiry"]
211 [-]: CALL      R15 2 2      ; R15 := R15(R16)
212 [-]: LT        0 K25 R15    ; if 0.000000 >= R15 then PC := 224
213 [-]: JMP       224          ; PC := 224
214 [-]: GETTABLE  R15 R14 K38  ; R15 := R14["mTag"]
215 [-]: GETTABLE  R16 R0 K29   ; R16 := R0["mEventStageTag"]
216 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 224
217 [-]: JMP       224          ; PC := 224
218 [-]: GETTABLE  R15 R0 K6    ; R15 := R0["mTransmissionSet"]
219 [-]: SELF      R15 R15 K7   ; R16 := R15; R15 := R15[0x10c9eef2]
220 [-]: GETTABLE  R17 R0 K31   ; R17 := R0["mEventTransmissionTag"]
221 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
222 [-]: MOVE      R3 R15       ; R3 := R15
223 [-]: LOADBOOL  R6 0 0       ; R6 := false
224 [-]: FORLOOP   R10 201      ; R10 += R12; if R10 <= R11 then begin PC := 201; R13 := R10 end
225 [-]: GETTABLE  R15 R0 K39   ; R15 := R0["IntroTransFunction"]
226 [-]: EQ        1 R15 K40    ; if R15 == "" then PC := 246
227 [-]: JMP       246          ; PC := 246
228 [-]: GETGLOBAL R15 K0       ; R15 := _T
229 [-]: GETTABLE  R16 R0 K39   ; R16 := R0["IntroTransFunction"]
230 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
231 [-]: EQ        1 R15 K41    ; if R15 == nil then PC := 246
232 [-]: JMP       246          ; PC := 246
233 [-]: GETGLOBAL R15 K0       ; R15 := _T
234 [-]: GETTABLE  R16 R0 K39   ; R16 := R0["IntroTransFunction"]
235 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
236 [-]: MOVE      R16 R0       ; R16 := R0
237 [-]: MOVE      R17 R6       ; R17 := R6
238 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
239 [-]: EQ        1 R15 K41    ; if R15 == nil then PC := 246
240 [-]: JMP       246          ; PC := 246
241 [-]: GETTABLE  R16 R0 K6    ; R16 := R0["mTransmissionSet"]
242 [-]: SELF      R16 R16 K7   ; R17 := R16; R16 := R16[0x10c9eef2]
243 [-]: MOVE      R18 R15      ; R18 := R15
244 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
245 [-]: MOVE      R3 R16       ; R3 := R16
246 [-]: GETGLOBAL R16 K5       ; R16 := 0x7b998233
247 [-]: MOVE      R17 R3       ; R17 := R3
248 [-]: CALL      R16 2 2      ; R16 := R16(R17)
249 [-]: TEST      R16 1        ; if R16 then PC := 266
250 [-]: JMP       266          ; PC := 266
251 [-]: SELF      R16 R0 K42   ; R17 := R0; R16 := R0[0x68d7cbe0]
252 [-]: MOVE      R18 R3       ; R18 := R3
253 [-]: LOADNIL   R19 R19      ; R19 := nil
254 [-]: MOVE      R20 R6       ; R20 := R6
255 [-]: LOADBOOL  R21 1 0      ; R21 := true
256 [-]: MOVE      R22 R4       ; R22 := R4
257 [-]: CALL      R16 7 1      ; R16(R17,R18,R19,R20,R21,R22)
258 [-]: TEST      R6 0         ; if not R6 then PC := 266
259 [-]: JMP       266          ; PC := 266
260 [-]: GETGLOBAL R16 K11      ; R16 := 0x25d99d89
261 [-]: SELF      R16 R16 K43  ; R17 := R16; R16 := R16[0xbf6c9575]
262 [-]: GETGLOBAL R18 K8       ; R18 := 0x0469f296
263 [-]: MOVE      R19 R5       ; R19 := R5
264 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
265 [-]: CALL      R16 0 1      ; R16(R17,...)
266 [-]: RETURN    R0 1         ; return 


; Function #364.2:
;
; Name:            
; Defined at line: 7696
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: MOVE      R4 R1        ; R4 := R1
  5 [-]: CALL      R2 3 1       ; R2(R3,R4)
  6 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["Loved"]
  7 [-]: TEST      R2 0         ; if not R2 then PC := 30
  8 [-]: JMP       30           ; PC := 30
  9 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 10 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mHubNpc"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 30
 13 [-]: JMP       30           ; PC := 30
 14 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["IsUnmasked"]
 15 [-]: TEST      R2 0         ; if not R2 then PC := 30
 16 [-]: JMP       30           ; PC := 30
 17 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mHubNpc"]
 18 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x69fcfd29]
 19 [-]: GETGLOBAL R4 K5        ; R4 := 0x0469f296
 20 [-]: LOADK     R5 K6        ; R5 := "LovedOutro"
 21 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 22 [-]: CALL      R2 0 1       ; R2(R3,...)
 23 [-]: GETGLOBAL R2 K7        ; R2 := 0xcbd666e1
 24 [-]: LOADK     R3 0         ; R3 := 0.500000
 25 [-]: CALL      R2 2 1       ; R2(R3)
 26 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mHubNpc"]
 27 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x4c1db200]
 28 [-]: LOADBOOL  R4 1 0       ; R4 := true
 29 [-]: CALL      R2 3 1       ; R2(R3,R4)
 30 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 31 [-]: GETTABLE  R3 R0 K9     ; R3 := R0["mTransmissionSet"]
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 48
 34 [-]: JMP       48           ; PC := 48
 35 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mSkipEndTrans"]
 36 [-]: TEST      R2 1         ; if R2 then PC := 48
 37 [-]: JMP       48           ; PC := 48
 38 [-]: GETGLOBAL R2 K11       ; R2 := _T
 39 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["SkipVendorDialog"]
 40 [-]: TEST      R2 0         ; if not R2 then PC := 50
 41 [-]: JMP       50           ; PC := 50
 42 [-]: GETGLOBAL R2 K11       ; R2 := _T
 43 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["SkipVendorDialog"]
 44 [-]: GETTABLE  R3 R0 K13    ; R3 := R0["mSpeakerName"]
 45 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 46 [-]: TEST      R2 0         ; if not R2 then PC := 50
 47 [-]: JMP       50           ; PC := 50
 48 [-]: SETTABLE  R0 K10 K14   ; R0["mSkipEndTrans"] := false
 49 [-]: RETURN    R0 1         ; return 
 50 [-]: GETTABLE  R2 R0 K9     ; R2 := R0["mTransmissionSet"]
 51 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0x10c9eef2]
 52 [-]: GETGLOBAL R4 K5        ; R4 := 0x0469f296
 53 [-]: LOADK     R5 K16       ; R5 := "Bye"
 54 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 55 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 56 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 57 [-]: MOVE      R4 R2        ; R4 := R2
 58 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 59 [-]: TEST      R3 1         ; if R3 then PC := 67
 60 [-]: JMP       67           ; PC := 67
 61 [-]: SELF      R3 R0 K17    ; R4 := R0; R3 := R0[0x68d7cbe0]
 62 [-]: MOVE      R5 R2        ; R5 := R2
 63 [-]: LOADNIL   R6 R6        ; R6 := nil
 64 [-]: LOADBOOL  R7 0 0       ; R7 := false
 65 [-]: LOADBOOL  R8 1 0       ; R8 := true
 66 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 67 [-]: RETURN    R0 1         ; return 


; Function #365:
;
; Name:            
; Defined at line: 7722
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideHud"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideHud"] := 0.000000
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := 0x5bced4c4
 11 [-]: GETTABLE  R2 R2 K5     ; R82 := R2[0xb62ecfe0]
 12 [-]: LOADK     R3 0         ; R3 := 0.000000
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideHud"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R82 := R5[0x06d055f9]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 1         ; R7 := 1.000000
 19 [-]: LOADK     R8 -1        ; R8 := -1.000000
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideHud"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #366:
;
; Name:            
; Defined at line: 7730
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideNotifications"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideNotifications"] := 0.000000
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := 0x5bced4c4
 11 [-]: GETTABLE  R2 R2 K5     ; R82 := R2[0xb62ecfe0]
 12 [-]: LOADK     R3 0         ; R3 := 0.000000
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideNotifications"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R82 := R5[0x06d055f9]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 1         ; R7 := 1.000000
 19 [-]: LOADK     R8 -1        ; R8 := -1.000000
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideNotifications"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #367:
;
; Name:            
; Defined at line: 7738
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideMapRedux"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideMapRedux"] := 0.000000
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := 0x5bced4c4
 11 [-]: GETTABLE  R2 R2 K5     ; R82 := R2[0xb62ecfe0]
 12 [-]: LOADK     R3 0         ; R3 := 0.000000
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideMapRedux"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R82 := R5[0x06d055f9]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 1         ; R7 := 1.000000
 19 [-]: LOADK     R8 -1        ; R8 := -1.000000
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideMapRedux"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #368:
;
; Name:            
; Defined at line: 7746
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideSquadOverlay"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideSquadOverlay"] := 0.000000
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := 0x5bced4c4
 11 [-]: GETTABLE  R2 R2 K5     ; R82 := R2[0xb62ecfe0]
 12 [-]: LOADK     R3 0         ; R3 := 0.000000
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideSquadOverlay"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R82 := R5[0x06d055f9]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 1         ; R7 := 1.000000
 19 [-]: LOADK     R8 -1        ; R8 := -1.000000
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideSquadOverlay"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #369:
;
; Name:            
; Defined at line: 7754
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := _T
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["HideEOM"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: GETGLOBAL R1 K1        ; R1 := _T
  8 [-]: SETTABLE  R1 K2 K3     ; R1["HideEOM"] := 0.000000
  9 [-]: GETGLOBAL R1 K1        ; R1 := _T
 10 [-]: GETGLOBAL R2 K4        ; R2 := 0x5bced4c4
 11 [-]: GETTABLE  R2 R2 K5     ; R82 := R2[0xb62ecfe0]
 12 [-]: LOADK     R3 0         ; R3 := 0.000000
 13 [-]: GETGLOBAL R4 K1        ; R4 := _T
 14 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HideEOM"]
 15 [-]: GETUPVAL  R5 U0        ; R5 := U0
 16 [-]: GETTABLE  R5 R5 K6     ; R82 := R5[0x06d055f9]
 17 [-]: MOVE      R6 R0        ; R6 := R0
 18 [-]: LOADK     R7 1         ; R7 := 1.000000
 19 [-]: LOADK     R8 -1        ; R8 := -1.000000
 20 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 21 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: SETTABLE  R1 K2 R2     ; R1["HideEOM"] := R2
 24 [-]: RETURN    R0 1         ; return 


; Function #370:
;
; Name:            
; Defined at line: 7762
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: SELF      R4 R1 K1     ; R5 := R1; R4 := R1[0x78298275]
  3 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
  4 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  5 [-]: TEST      R3 1         ; if R3 then PC := 40
  6 [-]: JMP       40           ; PC := 40
  7 [-]: SELF      R3 R1 K1     ; R4 := R1; R3 := R1[0x78298275]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0x0b4bcfb6]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x02bb4ff1]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 14 [-]: MOVE      R5 R3        ; R5 := R3
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: TEST      R4 1         ; if R4 then PC := 40
 17 [-]: JMP       40           ; PC := 40
 18 [-]: SELF      R4 R1 K4     ; R5 := R1; R4 := R1[0xa3f8dbe6]
 19 [-]: SELF      R6 R3 K5     ; R7 := R3; R6 := R3[0xd1586535]
 20 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 21 [-]: SELF      R7 R3 K5     ; R8 := R3; R7 := R3[0xd1586535]
 22 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 23 [-]: SELF      R8 R0 K6     ; R9 := R0; R8 := R0[0x548b03be]
 24 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 25 [-]: MUL       R8 R8 K7     ; R8 := R8 * 200.000000
 26 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 27 [-]: LOADNIL   R8 R8        ; R8 := nil
 28 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 29 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 30 [-]: MOVE      R6 R4        ; R6 := R4
 31 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 32 [-]: TEST      R5 1         ; if R5 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: SELF      R5 R4 K8     ; R6 := R4; R5 := R4[0xf2deaf69]
 35 [-]: MOVE      R7 R2        ; R7 := R2
 36 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 37 [-]: TEST      R5 0         ; if not R5 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: RETURN    R4 2         ; return R4
 40 [-]: LOADNIL   R5 R5        ; R5 := nil
 41 [-]: RETURN    R5 2         ; return R5
 42 [-]: RETURN    R0 1         ; return 


; Function #371:
;
; Name:            
; Defined at line: 7775
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x33bdd652
  3 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x23d5322f]
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: LOADK     R4 16        ; R4 := 16.000000
  6 [-]: CALL      R2 3 1       ; R2(R3,R4)
  7 [-]: TEST      R0 0         ; if not R0 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETGLOBAL R2 K0        ; R2 := 0x33bdd652
 10 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x23d5322f]
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: LOADK     R4 1024      ; R4 := 1024.000000
 13 [-]: CALL      R2 3 1       ; R2(R3,R4)
 14 [-]: LOADK     R2 1         ; R2 := 1.000000
 15 [-]: LEN       R3 R1        ; R3 := # R1
 16 [-]: LOADK     R4 1         ; R4 := 1.000000
 17 [-]: FORPREP   R2 26        ; R2 -= R4; PC := 26
 18 [-]: GETGLOBAL R6 K3        ; R6 := 0x25d99d89
 19 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6[0x3a57bc9f]
 20 [-]: GETTABLE  R8 R1 R5     ; R8 := R1[R5]
 21 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 22 [-]: TEST      R6 0         ; if not R6 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LOADBOOL  R6 1 0       ; R6 := true
 25 [-]: RETURN    R6 2         ; return R6
 26 [-]: FORLOOP   R2 18        ; R2 += R4; if R2 <= R3 then begin PC := 18; R5 := R2 end
 27 [-]: LOADBOOL  R6 0 0       ; R6 := false
 28 [-]: RETURN    R6 2         ; return R6
 29 [-]: RETURN    R0 1         ; return 


; Function #372:
;
; Name:            
; Defined at line: 7793
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETGLOBAL R3 K0        ; R3 := _T
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["DojoMgr"]
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
  4 [-]: MOVE      R5 R3        ; R5 := R3
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 0         ; if not R4 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: LOADNIL   R4 R4        ; R4 := nil
 10 [-]: LOADK     R5 K3        ; R5 := 1000000.000000
 11 [-]: GETGLOBAL R6 K4        ; R6 := 0x89326c93
 12 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0xc7fcada9]
 13 [-]: GETGLOBAL R8 K6        ; R8 := 0x0469f296
 14 [-]: MOVE      R9 R0        ; R9 := R0
 15 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 16 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 17 [-]: LOADK     R7 1         ; R7 := 1.000000
 18 [-]: LEN       R8 R6        ; R8 := # R6
 19 [-]: LOADK     R9 1         ; R9 := 1.000000
 20 [-]: FORPREP   R7 61        ; R7 -= R9; PC := 61
 21 [-]: GETTABLE  R11 R6 R10   ; R11 := R6[R10]
 22 [-]: SELF      R12 R3 K7    ; R13 := R3; R12 := R3[0xd1964243]
 23 [-]: MOVE      R14 R11      ; R14 := R11
 24 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 25 [-]: LOADNIL   R13 R13      ; R13 := nil
 26 [-]: GETTABLE  R14 R12 K8   ; R14 := R12["id"]
 27 [-]: EQ        1 R14 K9     ; if R14 == "" then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETTABLE  R14 R3 K10   ; R14 := R3["mDojo"]
 30 [-]: SELF      R14 R14 K11  ; R15 := R14; R14 := R14[0x5c69b193]
 31 [-]: MOVE      R16 R12      ; R16 := R12
 32 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 33 [-]: MOVE      R13 R14      ; R13 := R14
 34 [-]: EQ        1 R13 K12    ; if R13 == nil then PC := 40
 35 [-]: JMP       40           ; PC := 40
 36 [-]: SELF      R14 R13 K13  ; R15 := R13; R14 := R13[0x56c01834]
 37 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 38 [-]: TEST      R14 1        ; if R14 then PC := 50
 39 [-]: JMP       50           ; PC := 50
 40 [-]: TEST      R2 1         ; if R2 then PC := 61
 41 [-]: JMP       61           ; PC := 61
 42 [-]: SELF      R14 R11 K14  ; R15 := R11; R14 := R11[0x1f420a3a]
 43 [-]: MOVE      R16 R1       ; R16 := R1
 44 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 45 [-]: LT        0 R14 R5     ; if R14 >= R5 then PC := 61
 46 [-]: JMP       61           ; PC := 61
 47 [-]: MOVE      R4 R11       ; R4 := R11
 48 [-]: MOVE      R5 R14       ; R5 := R14
 49 [-]: JMP       61           ; PC := 61
 50 [-]: SELF      R15 R13 K15  ; R16 := R13; R15 := R13[0x3f724bc7]
 51 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 52 [-]: TEST      R15 0        ; if not R15 then PC := 61
 53 [-]: JMP       61           ; PC := 61
 54 [-]: SELF      R15 R11 K14  ; R16 := R11; R15 := R11[0x1f420a3a]
 55 [-]: MOVE      R17 R1       ; R17 := R1
 56 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 57 [-]: LT        0 R15 R5     ; if R15 >= R5 then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: MOVE      R4 R11       ; R4 := R11
 60 [-]: MOVE      R5 R15       ; R5 := R15
 61 [-]: FORLOOP   R7 21        ; R7 += R9; if R7 <= R8 then begin PC := 21; R10 := R7 end
 62 [-]: RETURN    R4 2         ; return R4
 63 [-]: RETURN    R0 1         ; return 


; Function #373:
;
; Name:            
; Defined at line: 7836
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K0      ; if R0 == 0.000000 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: EQ        1 R0 K1      ; if R0 == 1.000000 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADBOOL  R1 0 1       ; R1 := false; PC := 6
  6 [-]: LOADBOOL  R1 1 0       ; R1 := true
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: RETURN    R0 1         ; return 


; Function #374:
;
; Name:            
; Defined at line: 7840
; #Upvalues:       3
; #Parameters:     9
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: CLOSURE   R9 0         ; R9 := closure(Function #374.1)
  2 [-]: GETUPVAL  R0 U0        ; R0 := U0
  3 [-]: MOVE      R0 R0        ; R0 := R0
  4 [-]: MOVE      R0 R1        ; R0 := R1
  5 [-]: MOVE      R0 R8        ; R0 := R8
  6 [-]: GETUPVAL  R10 U1       ; R10 := U1
  7 [-]: CALL      R10 1 2      ; R10 := R10()
  8 [-]: CLOSURE   R11 1        ; R11 := closure(Function #374.2)
  9 [-]: MOVE      R0 R7        ; R0 := R7
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: MOVE      R0 R5        ; R0 := R5
 12 [-]: SETTABLE  R10 K0 R11   ; R10["ConfirmConditionalWord"] := R11
 13 [-]: CLOSURE   R11 2        ; R11 := closure(Function #374.3)
 14 [-]: MOVE      R0 R7        ; R0 := R7
 15 [-]: MOVE      R0 R0        ; R0 := R0
 16 [-]: MOVE      R0 R5        ; R0 := R5
 17 [-]: SETTABLE  R10 K1 R11   ; R10["OSKConfirmConditionalWord"] := R11
 18 [-]: CLOSURE   R11 3        ; R11 := closure(Function #374.4)
 19 [-]: MOVE      R0 R9        ; R0 := R9
 20 [-]: MOVE      R0 R4        ; R0 := R4
 21 [-]: MOVE      R0 R7        ; R0 := R7
 22 [-]: MOVE      R0 R0        ; R0 := R0
 23 [-]: MOVE      R0 R5        ; R0 := R5
 24 [-]: SETTABLE  R10 K2 R11   ; R10["ConditionalFirstConfirm"] := R11
 25 [-]: GETGLOBAL R11 K3       ; R11 := 0x34291f5c
 26 [-]: GETTABLE  R11 R11 K4   ; R82 := R11[0x056bfe8b]
 27 [-]: CALL      R11 1 2      ; R11 := R11()
 28 [-]: TEST      R11 1        ; if R11 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETGLOBAL R11 K3       ; R11 := 0x34291f5c
 31 [-]: GETTABLE  R11 R11 K5   ; R82 := R11[0xe6b41adb]
 32 [-]: CALL      R11 1 2      ; R11 := R11()
 33 [-]: TEST      R11 0        ; if not R11 then PC := 42
 34 [-]: JMP       42           ; PC := 42
 35 [-]: GETUPVAL  R11 U2       ; R11 := U2
 36 [-]: GETTABLE  R11 R11 K6   ; R82 := R11[0xf616a184]
 37 [-]: MOVE      R12 R3       ; R12 := R3
 38 [-]: LOADK     R13 K2       ; R13 := "ConditionalFirstConfirm"
 39 [-]: LOADK     R14 3        ; R14 := 3.000000
 40 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
 41 [-]: JMP       46           ; PC := 46
 42 [-]: MOVE      R11 R9       ; R11 := R9
 43 [-]: MOVE      R12 R2       ; R12 := R2
 44 [-]: MOVE      R13 R6       ; R13 := R6
 45 [-]: CALL      R11 3 1      ; R11(R12,R13)
 46 [-]: RETURN    R0 1         ; return 


; Function #374.1:
;
; Name:            
; Defined at line: 7842
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETUPVAL  R3 U1        ; R3 := U1
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: LOADK     R5 K0        ; R5 := ""
  5 [-]: LOADK     R6 40        ; R6 := 40.000000
  6 [-]: LOADK     R7 K1        ; R7 := "ConfirmConditionalWord"
  7 [-]: LOADK     R8 K2        ; R8 := "OSKConfirmConditionalWord"
  8 [-]: NEWTABLE  R9 0 4       ; R9 := {}
  9 [-]: SETTABLE  R9 K3 K4     ; R9["isMultiline"] := nil
 10 [-]: SETTABLE  R9 K5 K4     ; R9["cancelDisabled"] := nil
 11 [-]: SETTABLE  R9 K6 K4     ; R9["forChat"] := nil
 12 [-]: SETTABLE  R9 K7 R1     ; R9["desc"] := R1
 13 [-]: CALL      R2 8 3       ; R2,R3 := R2(R3,R4,R5,R6,R7,R8,R9)
 14 [-]: GETGLOBAL R4 K8        ; R4 := 0x7b998233
 15 [-]: MOVE      R5 R3        ; R5 := R3
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: TEST      R4 1         ; if R4 then PC := 27
 18 [-]: JMP       27           ; PC := 27
 19 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0xe4162eed]
 20 [-]: LOADK     R6 K10       ; R6 := "SetConditionalWord"
 21 [-]: GETUPVAL  R7 U2        ; R7 := U2
 22 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 23 [-]: SELF      R4 R3 K9     ; R5 := R3; R4 := R3[0xe4162eed]
 24 [-]: LOADK     R6 K11       ; R6 := "SetDialogWidth"
 25 [-]: GETUPVAL  R7 U3        ; R7 := U3
 26 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 27 [-]: RETURN    R0 1         ; return 


; Function #374.2:
;
; Name:            
; Defined at line: 7851
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x03f57322
  2 [-]: MOVE      R4 R2        ; R4 := R2
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: EQ        1 R3 K2      ; if R3 == 4.000000 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 7
  7 [-]: LOADBOOL  R3 1 0       ; R3 := true
  8 [-]: TEST      R3 1         ; if R3 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETUPVAL  R4 U0        ; R4 := U0
 11 [-]: TEST      R4 0         ; if not R4 then PC := 23
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETUPVAL  R4 U1        ; R4 := U1
 14 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0xf56f3887]
 15 [-]: GETUPVAL  R6 U2        ; R6 := U2
 16 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 17 [-]: MOVE      R8 R0        ; R8 := R0
 18 [-]: GETGLOBAL R9 K4        ; R9 := 0x64fb1586
 19 [-]: MOVE      R10 R3       ; R10 := R3
 20 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 21 [-]: SETLIST   R7 0 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
 22 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 23 [-]: RETURN    R0 1         ; return 


; Function #374.3:
;
; Name:            
; Defined at line: 7858
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: TEST      R0 0         ; if not R0 then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: TEST      R2 0         ; if not R2 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: SELF      R2 R2 K0     ; R3 := R2; R2 := R2[0xf56f3887]
  8 [-]: GETUPVAL  R4 U2        ; R4 := U2
  9 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 10 [-]: MOVE      R6 R1        ; R6 := R1
 11 [-]: GETGLOBAL R7 K1        ; R7 := 0x64fb1586
 12 [-]: NOT       R8 R0        ; R8 := not R0
 13 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 14 [-]: SETLIST   R5 0 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 0
 15 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 16 [-]: RETURN    R0 1         ; return 


; Function #374.4:
;
; Name:            
; Defined at line: 7864
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: JMP       21           ; PC := 21
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: TEST      R1 0         ; if not R1 then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETUPVAL  R1 U3        ; R1 := U3
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf56f3887]
 15 [-]: GETUPVAL  R3 U4        ; R3 := U4
 16 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 17 [-]: LOADK     R5 K4        ; R5 := ""
 18 [-]: LOADK     R6 K5        ; R6 := "false"
 19 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 20 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 21 [-]: RETURN    R0 1         ; return 


; Function #375:
;
; Name:            
; Defined at line: 7880
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R2 K0        ; R2 := "<SECONDARY_FIRE>"
  2 [-]: LOADK     R3 K1        ; R3 := "<MELEE_CHANNEL>"
  3 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
  4 [-]: MOVE      R5 R0        ; R5 := R0
  5 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  6 [-]: TEST      R4 1         ; if R4 then PC := 28
  7 [-]: JMP       28           ; PC := 28
  8 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: TEST      R4 1         ; if R4 then PC := 28
 12 [-]: JMP       28           ; PC := 28
 13 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0[0x54f5d6ad]
 14 [-]: MOVE      R6 R2        ; R6 := R2
 15 [-]: MOVE      R7 R1        ; R7 := R1
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: EQ        1 R4 R2      ; if R4 == R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: RETURN    R2 2         ; return R2
 20 [-]: JMP       28           ; PC := 28
 21 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0[0x54f5d6ad]
 22 [-]: MOVE      R6 R3        ; R6 := R3
 23 [-]: MOVE      R7 R1        ; R7 := R1
 24 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 25 [-]: EQ        1 R4 R3      ; if R4 == R3 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R3 2         ; return R3
 28 [-]: RETURN    R2 2         ; return R2
 29 [-]: RETURN    R0 1         ; return 


; Function #376:
;
; Name:            
; Defined at line: 7894
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xbe190284
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 92
  5 [-]: JMP       92           ; PC := 92
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xf2deaf69]
  8 [-]: GETGLOBAL R3 K3        ; R3 := gLotusBaseGameRulesType
  9 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 10 [-]: TEST      R1 0         ; if not R1 then PC := 92
 11 [-]: JMP       92           ; PC := 92
 12 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
 13 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xf058f9c3]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: EQ        0 R1 K6      ; if R1 ~= 31.000000 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: GETGLOBAL R0 K7        ; R0 := SOUND_SET_RAILJACK
 18 [-]: JMP       92           ; PC := 92
 19 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 20 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 21 [-]: GETGLOBAL R3 K9        ; R3 := CETUS_NODE_TAG
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K10       ; R3 := SOUND_SET_EIDOLON
 24 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 25 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 26 [-]: GETGLOBAL R3 K11       ; R3 := PLAINS_NODE_TAG
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: GETGLOBAL R3 K10       ; R3 := SOUND_SET_EIDOLON
 29 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 30 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 31 [-]: GETGLOBAL R3 K12       ; R3 := ORB_VALLIS_NODE_TAG
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: GETGLOBAL R3 K13       ; R3 := SOUND_SET_ORB_VALLIS
 34 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 35 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 36 [-]: GETGLOBAL R3 K14       ; R3 := FORTUNA_NODE_TAG
 37 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 38 [-]: GETGLOBAL R3 K15       ; R3 := SOUND_SET_FORTUNA
 39 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 40 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 41 [-]: GETGLOBAL R3 K16       ; R3 := OROKIN_TOWER_NODE_TAG
 42 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 43 [-]: GETGLOBAL R3 K17       ; R3 := SOUND_SET_OROKIN_TOWER
 44 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 45 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 46 [-]: GETGLOBAL R3 K18       ; R3 := ENTRATI_LANDSCAPE_NODE_TAG
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: GETGLOBAL R3 K17       ; R3 := SOUND_SET_OROKIN_TOWER
 49 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 50 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 51 [-]: GETGLOBAL R3 K19       ; R3 := ZARIMAN_NODE_TAG
 52 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 53 [-]: GETGLOBAL R3 K20       ; R3 := SOUND_SET_ZARIMAN
 54 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 55 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 56 [-]: GETGLOBAL R3 K21       ; R3 := ZARIMAN_MISSION_A_TAG
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: GETGLOBAL R3 K20       ; R3 := SOUND_SET_ZARIMAN
 59 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 60 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 61 [-]: GETGLOBAL R3 K22       ; R3 := ZARIMAN_MISSION_B_TAG
 62 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 63 [-]: GETGLOBAL R3 K20       ; R3 := SOUND_SET_ZARIMAN
 64 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 65 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 66 [-]: GETGLOBAL R3 K23       ; R3 := ZARIMAN_MISSION_C_TAG
 67 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 68 [-]: GETGLOBAL R3 K20       ; R3 := SOUND_SET_ZARIMAN
 69 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 70 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 71 [-]: GETGLOBAL R3 K24       ; R3 := ZARIMAN_MISSION_D_TAG
 72 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 73 [-]: GETGLOBAL R3 K20       ; R3 := SOUND_SET_ZARIMAN
 74 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 75 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 76 [-]: GETGLOBAL R3 K25       ; R3 := ZARIMAN_MISSION_E_TAG
 77 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 78 [-]: GETGLOBAL R3 K20       ; R3 := SOUND_SET_ZARIMAN
 79 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 80 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 81 [-]: GETGLOBAL R3 K26       ; R3 := APARTMENT_NODE_TAG
 82 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 83 [-]: GETGLOBAL R3 K20       ; R3 := SOUND_SET_ZARIMAN
 84 [-]: SETTABLE  R1 R2 R3     ; R1[R2] := R3
 85 [-]: GETGLOBAL R2 K8        ; R2 := 0x64fb1586
 86 [-]: GETGLOBAL R3 K1        ; R3 := 0xbe190284
 87 [-]: SELF      R3 R3 K27    ; R4 := R3; R3 := R3[0xef893aec]
 88 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 89 [-]: GETTABLE  R3 R3 K28    ; R3 := R3["location"]
 90 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 91 [-]: GETTABLE  R0 R1 R2     ; R0 := R1[R2]
 92 [-]: EQ        0 R0 K29     ; if R0 ~= nil then PC := 95
 93 [-]: JMP       95           ; PC := 95
 94 [-]: GETGLOBAL R0 K10       ; R0 := SOUND_SET_EIDOLON
 95 [-]: RETURN    R0 2         ; return R0
 96 [-]: RETURN    R0 1         ; return 


; Function #377:
;
; Name:            
; Defined at line: 7923
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: TEST      R2 1         ; if R2 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R2 0         ; R2 := 0.000000
  4 [-]: LOADK     R3 64        ; R3 := 64.000000
  5 [-]: SELF      R4 R1 K0     ; R5 := R1; R4 := R1[0xdb7325e3]
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["x"]
  8 [-]: GETTABLE  R6 R4 K2     ; R6 := R4["y"]
  9 [-]: DIV       R6 R6 R3     ; R6 := R6 / R3
 10 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
 11 [-]: SELF      R6 R0 K3     ; R7 := R0; R6 := R0[0x1cb415c1]
 12 [-]: LOADK     R8 K4        ; R8 := "Title.BookendLeft"
 13 [-]: MOVE      R9 R1        ; R9 := R1
 14 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 15 [-]: SELF      R6 R0 K3     ; R7 := R0; R6 := R0[0x1cb415c1]
 16 [-]: LOADK     R8 K5        ; R8 := "Title.BookendRight"
 17 [-]: MOVE      R9 R1        ; R9 := R1
 18 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 19 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0[0x67bc869f]
 20 [-]: LOADK     R8 K4        ; R8 := "Title.BookendLeft"
 21 [-]: LOADK     R9 12        ; R9 := 12.000000
 22 [-]: MOVE      R10 R5       ; R10 := R5
 23 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 24 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0[0x67bc869f]
 25 [-]: LOADK     R8 K4        ; R8 := "Title.BookendLeft"
 26 [-]: LOADK     R9 13        ; R9 := 13.000000
 27 [-]: MOVE      R10 R3       ; R10 := R3
 28 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 29 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0[0x67bc869f]
 30 [-]: LOADK     R8 K4        ; R8 := "Title.BookendLeft"
 31 [-]: LOADK     R9 1         ; R9 := 1.000000
 32 [-]: ADD       R10 K7 R2    ; R10 := 22.000000 + R2
 33 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 34 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0[0x67bc869f]
 35 [-]: LOADK     R8 K5        ; R8 := "Title.BookendRight"
 36 [-]: LOADK     R9 12        ; R9 := 12.000000
 37 [-]: MOVE      R10 R5       ; R10 := R5
 38 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 39 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0[0x67bc869f]
 40 [-]: LOADK     R8 K5        ; R8 := "Title.BookendRight"
 41 [-]: LOADK     R9 13        ; R9 := 13.000000
 42 [-]: MOVE      R10 R3       ; R10 := R3
 43 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 44 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0[0x67bc869f]
 45 [-]: LOADK     R8 K5        ; R8 := "Title.BookendRight"
 46 [-]: LOADK     R9 1         ; R9 := 1.000000
 47 [-]: ADD       R10 K7 R2    ; R10 := 22.000000 + R2
 48 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 49 [-]: RETURN    R0 1         ; return 


; Function #378:
;
; Name:            
; Defined at line: 7938
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: LOADK     R3 1         ; R3 := 1.000000
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: LOADK     R5 1         ; R5 := 1.000000
  5 [-]: FORPREP   R3 11        ; R3 -= R5; PC := 11
  6 [-]: GETGLOBAL R7 K0        ; R7 := 0x33bdd652
  7 [-]: GETTABLE  R7 R7 K1     ; R82 := R7[0x23d5322f]
  8 [-]: MOVE      R8 R2        ; R8 := R2
  9 [-]: GETTABLE  R9 R0 K2     ; R9 := R0[1.000000]
 10 [-]: CALL      R7 3 1       ; R7(R8,R9)
 11 [-]: FORLOOP   R3 6         ; R3 += R5; if R3 <= R4 then begin PC := 6; R6 := R3 end
 12 [-]: LEN       R7 R0        ; R7 := # R0
 13 [-]: EQ        0 R7 K2      ; if R7 ~= 1.000000 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R2 2         ; return R2
 16 [-]: LOADK     R7 0         ; R7 := 0.000000
 17 [-]: LOADK     R8 1         ; R8 := 1.000000
 18 [-]: LEN       R9 R0        ; R9 := # R0
 19 [-]: LOADK     R10 1        ; R10 := 1.000000
 20 [-]: FORPREP   R8 24        ; R8 -= R10; PC := 24
 21 [-]: GETTABLE  R12 R0 R11   ; R12 := R0[R11]
 22 [-]: GETTABLE  R12 R12 K3   ; R12 := R12["mWeight"]
 23 [-]: ADD       R7 R7 R12    ; R7 := R7 + R12
 24 [-]: FORLOOP   R8 21        ; R8 += R10; if R8 <= R9 then begin PC := 21; R11 := R8 end
 25 [-]: LOADNIL   R12 R14      ; R12 := R13 := R14 := nil
 26 [-]: LEN       R15 R0       ; R15 := # R0
 27 [-]: LOADK     R16 1        ; R16 := 1.000000
 28 [-]: MOVE      R17 R1       ; R17 := R1
 29 [-]: LOADK     R18 1        ; R18 := 1.000000
 30 [-]: FORPREP   R16 63       ; R16 -= R18; PC := 63
 31 [-]: MOVE      R14 R7       ; R14 := R7
 32 [-]: GETGLOBAL R20 K4       ; R20 := 0xdd6e4cf8
 33 [-]: LOADK     R21 0        ; R21 := 0.000000
 34 [-]: LOADK     R22 1        ; R22 := 1.000000
 35 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
 36 [-]: MOVE      R13 R20      ; R13 := R20
 37 [-]: MUL       R12 R13 R14  ; R12 := R13 * R14
 38 [-]: LOADK     R20 1        ; R20 := 1.000000
 39 [-]: MOVE      R21 R15      ; R21 := R15
 40 [-]: LOADK     R22 1        ; R22 := 1.000000
 41 [-]: FORPREP   R20 62       ; R20 -= R22; PC := 62
 42 [-]: GETTABLE  R24 R0 R23   ; R24 := R0[R23]
 43 [-]: GETTABLE  R24 R24 K3   ; R24 := R24["mWeight"]
 44 [-]: LT        0 R12 R24    ; if R12 >= R24 then PC := 59
 45 [-]: JMP       59           ; PC := 59
 46 [-]: GETTABLE  R24 R0 R23   ; R24 := R0[R23]
 47 [-]: GETTABLE  R24 R24 K5   ; R24 := R24["mItemType"]
 48 [-]: SETTABLE  R2 R19 R24   ; R2[R19] := R24
 49 [-]: GETTABLE  R24 R0 R23   ; R24 := R0[R23]
 50 [-]: GETTABLE  R24 R24 K3   ; R24 := R24["mWeight"]
 51 [-]: SUB       R7 R7 R24    ; R7 := R7 - R24
 52 [-]: GETGLOBAL R24 K0       ; R24 := 0x33bdd652
 53 [-]: GETTABLE  R24 R24 K6   ; R82 := R24[0x9c1f3b5a]
 54 [-]: MOVE      R25 R0       ; R25 := R0
 55 [-]: MOVE      R26 R23      ; R26 := R23
 56 [-]: CALL      R24 3 1      ; R24(R25,R26)
 57 [-]: SUB       R15 R15 K2   ; R15 := R15 - 1.000000
 58 [-]: JMP       63           ; PC := 63
 59 [-]: GETTABLE  R24 R0 R23   ; R24 := R0[R23]
 60 [-]: GETTABLE  R24 R24 K3   ; R24 := R24["mWeight"]
 61 [-]: SUB       R12 R12 R24  ; R12 := R12 - R24
 62 [-]: FORLOOP   R20 42       ; R20 += R22; if R20 <= R21 then begin PC := 42; R23 := R20 end
 63 [-]: FORLOOP   R16 31       ; R16 += R18; if R16 <= R17 then begin PC := 31; R19 := R16 end
 64 [-]: RETURN    R2 2         ; return R2
 65 [-]: RETURN    R0 1         ; return 


; Function #379:
;
; Name:            
; Defined at line: 7976
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  126

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: CALL      R4 1 2       ; R4 := R4()
  3 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
  4 [-]: GETGLOBAL R6 K1        ; R6 := _T
  5 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["randInvigorations"]
  6 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  7 [-]: TEST      R5 1         ; if R5 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETGLOBAL R5 K1        ; R5 := _T
 10 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["randInvigorations"]
 11 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 12 [-]: SELF      R5 R1 K3     ; R6 := R1; R5 := R1[0x20fbd800]
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: DIV       R5 R5 K4     ; R5 := R5 / 60.000000
 15 [-]: GETTABLE  R6 R3 K5     ; R6 := R3["mInvigorationIndex"]
 16 [-]: GETGLOBAL R7 K6        ; R7 := 0x5bced4c4
 17 [-]: GETTABLE  R7 R7 K7     ; R82 := R7[0x55f27c30]
 18 [-]: DIV       R8 R4 R5     ; R8 := R4 / R5
 19 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 20 [-]: GETGLOBAL R8 K8        ; R8 := 0x0032441c
 21 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["HelminthUpgradeOfferingCache"]
 22 [-]: TEST      R8 0         ; if not R8 then PC := 78
 23 [-]: JMP       78           ; PC := 78
 24 [-]: GETGLOBAL R8 K8        ; R8 := 0x0032441c
 25 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["HelminthUpgradeOfferingCache"]
 26 [-]: GETTABLE  R8 R8 R0     ; R8 := R8[R0]
 27 [-]: TEST      R8 0         ; if not R8 then PC := 78
 28 [-]: JMP       78           ; PC := 78
 29 [-]: GETGLOBAL R8 K8        ; R8 := 0x0032441c
 30 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["HelminthUpgradeIndexCache"]
 31 [-]: TEST      R8 0         ; if not R8 then PC := 78
 32 [-]: JMP       78           ; PC := 78
 33 [-]: GETGLOBAL R8 K8        ; R8 := 0x0032441c
 34 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["HelminthUpgradeIndexCache"]
 35 [-]: GETTABLE  R8 R8 R0     ; R8 := R8[R0]
 36 [-]: EQ        0 R8 R7      ; if R8 ~= R7 then PC := 78
 37 [-]: JMP       78           ; PC := 78
 38 [-]: GETGLOBAL R8 K0        ; R8 := 0x7b998233
 39 [-]: GETTABLE  R9 R3 K11    ; R9 := R3["mInvigorationSuitOfferings"]
 40 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 41 [-]: TEST      R8 1         ; if R8 then PC := 49
 42 [-]: JMP       49           ; PC := 49
 43 [-]: GETTABLE  R8 R3 K11    ; R8 := R3["mInvigorationSuitOfferings"]
 44 [-]: LEN       R8 R8        ; R8 := # R8
 45 [-]: EQ        1 R8 K12     ; if R8 == 0.000000 then PC := 49
 46 [-]: JMP       49           ; PC := 49
 47 [-]: EQ        1 R7 R6      ; if R7 == R6 then PC := 74
 48 [-]: JMP       74           ; PC := 74
 49 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 50 [-]: LOADK     R9 1         ; R9 := 1.000000
 51 [-]: GETGLOBAL R10 K8       ; R10 := 0x0032441c
 52 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["HelminthUpgradeOfferingCache"]
 53 [-]: GETTABLE  R10 R10 R0   ; R10 := R10[R0]
 54 [-]: LEN       R10 R10      ; R10 := # R10
 55 [-]: LOADK     R11 1        ; R11 := 1.000000
 56 [-]: FORPREP   R9 66        ; R9 -= R11; PC := 66
 57 [-]: GETGLOBAL R13 K13      ; R13 := 0x33bdd652
 58 [-]: GETTABLE  R13 R13 K14  ; R82 := R13[0x23d5322f]
 59 [-]: MOVE      R14 R8       ; R14 := R8
 60 [-]: GETGLOBAL R15 K8       ; R15 := 0x0032441c
 61 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["HelminthUpgradeOfferingCache"]
 62 [-]: GETTABLE  R15 R15 R0   ; R15 := R15[R0]
 63 [-]: GETTABLE  R15 R15 R12  ; R15 := R15[R12]
 64 [-]: GETTABLE  R15 R15 K15  ; R15 := R15["baseSuitType"]
 65 [-]: CALL      R13 3 1      ; R13(R14,R15)
 66 [-]: FORLOOP   R9 57        ; R9 += R11; if R9 <= R10 then begin PC := 57; R12 := R9 end
 67 [-]: GETGLOBAL R13 K16      ; R13 := 0x25d99d89
 68 [-]: SELF      R13 R13 K17  ; R14 := R13; R13 := R13[0x0805c9cf]
 69 [-]: MOVE      R15 R8       ; R15 := R8
 70 [-]: MOVE      R16 R7       ; R16 := R7
 71 [-]: LOADBOOL  R17 0 0      ; R17 := false
 72 [-]: LOADK     R18 K18      ; R18 := "OnHelminthOfferingsUploaded"
 73 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
 74 [-]: GETGLOBAL R13 K8       ; R13 := 0x0032441c
 75 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["HelminthUpgradeOfferingCache"]
 76 [-]: GETTABLE  R13 R13 R0   ; R13 := R13[R0]
 77 [-]: RETURN    R13 2        ; return R13
 78 [-]: GETGLOBAL R13 K19      ; R13 := 0xbe190284
 79 [-]: SELF      R13 R13 K20  ; R14 := R13; R13 := R13[0xa1c390fe]
 80 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 81 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
 82 [-]: MOVE      R15 R13      ; R15 := R13
 83 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 84 [-]: TEST      R14 0        ; if not R14 then PC := 91
 85 [-]: JMP       91           ; PC := 91
 86 [-]: GETGLOBAL R14 K21      ; R14 := 0x3d106989
 87 [-]: LOADK     R15 K22      ; R15 := "Failed to find store manifest for helminth upgrades!"
 88 [-]: CALL      R14 2 1      ; R14(R15)
 89 [-]: LOADNIL   R14 R14      ; R14 := nil
 90 [-]: RETURN    R14 2        ; return R14
 91 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
 92 [-]: MOVE      R15 R1       ; R15 := R1
 93 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 94 [-]: TEST      R14 0        ; if not R14 then PC := 101
 95 [-]: JMP       101          ; PC := 101
 96 [-]: GETGLOBAL R14 K21      ; R14 := 0x3d106989
 97 [-]: LOADK     R15 K23      ; R15 := "Failed to find helminth manifest for helminth upgrades!"
 98 [-]: CALL      R14 2 1      ; R14(R15)
 99 [-]: LOADNIL   R14 R14      ; R14 := nil
100 [-]: RETURN    R14 2        ; return R14
101 [-]: SELF      R14 R1 K24   ; R15 := R1; R14 := R1[0x7db4ea75]
102 [-]: CALL      R14 2 2      ; R14 := R14(R15)
103 [-]: LOADNIL   R15 R16      ; R15 := R16 := nil
104 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
105 [-]: GETTABLE  R18 R3 K11   ; R18 := R3["mInvigorationSuitOfferings"]
106 [-]: CALL      R17 2 2      ; R17 := R17(R18)
107 [-]: TEST      R17 1        ; if R17 then PC := 117
108 [-]: JMP       117          ; PC := 117
109 [-]: GETTABLE  R17 R3 K11   ; R17 := R3["mInvigorationSuitOfferings"]
110 [-]: LEN       R17 R17      ; R17 := # R17
111 [-]: EQ        0 R17 R14    ; if R17 ~= R14 then PC := 117
112 [-]: JMP       117          ; PC := 117
113 [-]: EQ        0 R7 R6      ; if R7 ~= R6 then PC := 117
114 [-]: JMP       117          ; PC := 117
115 [-]: GETTABLE  R16 R3 K11   ; R16 := R3["mInvigorationSuitOfferings"]
116 [-]: JMP       299          ; PC := 299
117 [-]: NEWTABLE  R17 0 0      ; R17 := {}
118 [-]: SELF      R18 R13 K25  ; R19 := R13; R18 := R13[0xe9cbffa8]
119 [-]: GETGLOBAL R20 K26      ; R20 := 0x7ed0a956
120 [-]: LOADK     R21 K27      ; R21 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
121 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
122 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
123 [-]: GETGLOBAL R19 K28      ; R19 := 0xcfc01047
124 [-]: MOVE      R20 R18      ; R20 := R18
125 [-]: CALL      R19 2 4      ; R19,R20,R21 := R19(R20)
126 [-]: JMP       209          ; PC := 209
127 [-]: SELF      R24 R23 K29  ; R25 := R23; R24 := R23[0xfe9eb1a5]
128 [-]: CALL      R24 2 2      ; R24 := R24(R25)
129 [-]: EQ        0 R24 K31    ; if R24 ~= 3.000000 then PC := 209
130 [-]: JMP       209          ; PC := 209
131 [-]: SELF      R24 R23 K32  ; R25 := R23; R24 := R23[0xba7bce8f]
132 [-]: CALL      R24 2 2      ; R24 := R24(R25)
133 [-]: TEST      R24 1        ; if R24 then PC := 209
134 [-]: JMP       209          ; PC := 209
135 [-]: SELF      R24 R23 K33  ; R25 := R23; R24 := R23[0xc055cef8]
136 [-]: CALL      R24 2 2      ; R24 := R24(R25)
137 [-]: TEST      R24 0        ; if not R24 then PC := 209
138 [-]: JMP       209          ; PC := 209
139 [-]: SELF      R24 R23 K34  ; R25 := R23; R24 := R23[0xed4e0128]
140 [-]: CALL      R24 2 2      ; R24 := R24(R25)
141 [-]: GETGLOBAL R25 K35      ; R25 := 0x7f5022cf
142 [-]: GETTABLE  R25 R25 K36  ; R82 := R25[0xa5c556b9]
143 [-]: MOVE      R26 R24      ; R26 := R24
144 [-]: LOADK     R27 K37      ; R27 := "Prime"
145 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
146 [-]: TEST      R25 1        ; if R25 then PC := 209
147 [-]: JMP       209          ; PC := 209
148 [-]: GETGLOBAL R25 K35      ; R25 := 0x7f5022cf
149 [-]: GETTABLE  R25 R25 K36  ; R82 := R25[0xa5c556b9]
150 [-]: MOVE      R26 R24      ; R26 := R24
151 [-]: LOADK     R27 K38      ; R27 := "Operator"
152 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
153 [-]: TEST      R25 1        ; if R25 then PC := 209
154 [-]: JMP       209          ; PC := 209
155 [-]: GETGLOBAL R25 K35      ; R25 := 0x7f5022cf
156 [-]: GETTABLE  R25 R25 K36  ; R82 := R25[0xa5c556b9]
157 [-]: MOVE      R26 R24      ; R26 := R24
158 [-]: LOADK     R27 K39      ; R27 := "Umbra"
159 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
160 [-]: TEST      R25 1        ; if R25 then PC := 209
161 [-]: JMP       209          ; PC := 209
162 [-]: GETGLOBAL R25 K35      ; R25 := 0x7f5022cf
163 [-]: GETTABLE  R25 R25 K36  ; R82 := R25[0xa5c556b9]
164 [-]: MOVE      R26 R24      ; R26 := R24
165 [-]: LOADK     R27 K40      ; R27 := "PlayerPowerSuit"
166 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
167 [-]: TEST      R25 1        ; if R25 then PC := 209
168 [-]: JMP       209          ; PC := 209
169 [-]: GETGLOBAL R25 K35      ; R25 := 0x7f5022cf
170 [-]: GETTABLE  R25 R25 K41  ; R82 := R25[0x66edf04f]
171 [-]: MOVE      R26 R24      ; R26 := R24
172 [-]: LOADK     R27 K42      ; R27 := "/StoreItems"
173 [-]: LOADK     R28 K43      ; R28 := ""
174 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
175 [-]: GETGLOBAL R26 K35      ; R26 := 0x7f5022cf
176 [-]: GETTABLE  R26 R26 K36  ; R82 := R26[0xa5c556b9]
177 [-]: MOVE      R27 R25      ; R27 := R25
178 [-]: LOADK     R28 K44      ; R28 := "/Anti"
179 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
180 [-]: TEST      R26 0        ; if not R26 then PC := 194
181 [-]: JMP       194          ; PC := 194
182 [-]: GETGLOBAL R26 K35      ; R26 := 0x7f5022cf
183 [-]: GETTABLE  R26 R26 K45  ; R82 := R26[0x1a94c9cc]
184 [-]: MOVE      R27 R25      ; R27 := R25
185 [-]: LOADK     R28 1        ; R28 := 1.000000
186 [-]: GETGLOBAL R29 K35      ; R29 := 0x7f5022cf
187 [-]: GETTABLE  R29 R29 K46  ; R82 := R29[0x41e2ae25]
188 [-]: MOVE      R30 R25      ; R30 := R25
189 [-]: CALL      R29 2 2      ; R29 := R29(R30)
190 [-]: SUB       R29 R29 K47  ; R29 := R29 - 4.000000
191 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
192 [-]: LOADK     R27 K48      ; R27 := "Nova"
193 [-]: CONCAT    R25 R26 R27  ; R25 := R26 .. R27
194 [-]: GETGLOBAL R26 K26      ; R26 := 0x7ed0a956
195 [-]: MOVE      R27 R25      ; R27 := R25
196 [-]: LOADK     R28 K49      ; R28 := "BaseSuit"
197 [-]: CONCAT    R27 R27 R28  ; R27 := R27 .. R28
198 [-]: CALL      R26 2 2      ; R26 := R26(R27)
199 [-]: GETGLOBAL R27 K0       ; R27 := 0x7b998233
200 [-]: MOVE      R28 R26      ; R28 := R26
201 [-]: CALL      R27 2 2      ; R27 := R27(R28)
202 [-]: TEST      R27 1        ; if R27 then PC := 209
203 [-]: JMP       209          ; PC := 209
204 [-]: GETGLOBAL R27 K13      ; R27 := 0x33bdd652
205 [-]: GETTABLE  R27 R27 K14  ; R82 := R27[0x23d5322f]
206 [-]: MOVE      R28 R17      ; R28 := R17
207 [-]: MOVE      R29 R26      ; R29 := R26
208 [-]: CALL      R27 3 1      ; R27(R28,R29)
209 [-]: TFORLOOP  R19 2        ; R22,R23 :=  R19(R20,R21); if R22 ~= nil then begin PC = 127; R21 := R22 end
210 [-]: JMP       127          ; PC := 127
211 [-]: LEN       R27 R17      ; R27 := # R17
212 [-]: EQ        0 R27 K12    ; if R27 ~= 0.000000 then PC := 219
213 [-]: JMP       219          ; PC := 219
214 [-]: GETGLOBAL R27 K21      ; R27 := 0x3d106989
215 [-]: LOADK     R28 K50      ; R28 := "Failed to find valid suits for helminth upgrades!"
216 [-]: CALL      R27 2 1      ; R27(R28)
217 [-]: LOADNIL   R27 R27      ; R27 := nil
218 [-]: RETURN    R27 2        ; return R27
219 [-]: SELF      R27 R1 K51   ; R28 := R1; R27 := R1[0x3c4a2d85]
220 [-]: CALL      R27 2 2      ; R27 := R27(R28)
221 [-]: MOVE      R15 R27      ; R15 := R27
222 [-]: GETGLOBAL R27 K0       ; R27 := 0x7b998233
223 [-]: GETTABLE  R28 R3 K11   ; R28 := R3["mInvigorationSuitOfferings"]
224 [-]: CALL      R27 2 2      ; R27 := R27(R28)
225 [-]: TEST      R27 1        ; if R27 then PC := 231
226 [-]: JMP       231          ; PC := 231
227 [-]: GETTABLE  R27 R3 K11   ; R27 := R3["mInvigorationSuitOfferings"]
228 [-]: LEN       R27 R27      ; R27 := # R27
229 [-]: EQ        1 R27 R14    ; if R27 == R14 then PC := 232
230 [-]: JMP       232          ; PC := 232
231 [-]: LOADBOOL  R27 0 1      ; R27 := false; PC := 232
232 [-]: LOADBOOL  R27 1 0      ; R27 := true
233 [-]: TEST      R27 0        ; if not R27 then PC := 255
234 [-]: JMP       255          ; PC := 255
235 [-]: LOADK     R28 1        ; R28 := 1.000000
236 [-]: LEN       R29 R15      ; R29 := # R15
237 [-]: LOADK     R30 1        ; R30 := 1.000000
238 [-]: FORPREP   R28 254      ; R28 -= R30; PC := 254
239 [-]: LOADK     R32 1        ; R32 := 1.000000
240 [-]: GETTABLE  R33 R3 K11   ; R33 := R3["mInvigorationSuitOfferings"]
241 [-]: LEN       R33 R33      ; R33 := # R33
242 [-]: LOADK     R34 1        ; R34 := 1.000000
243 [-]: FORPREP   R32 253      ; R32 -= R34; PC := 253
244 [-]: GETTABLE  R36 R15 R31  ; R36 := R15[R31]
245 [-]: GETTABLE  R36 R36 K52  ; R36 := R36["mItemType"]
246 [-]: GETTABLE  R37 R3 K11   ; R37 := R3["mInvigorationSuitOfferings"]
247 [-]: GETTABLE  R37 R37 R35  ; R37 := R37[R35]
248 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 253
249 [-]: JMP       253          ; PC := 253
250 [-]: GETTABLE  R36 R15 R31  ; R36 := R15[R31]
251 [-]: SETTABLE  R36 K53 K12  ; R36["mWeight"] := 0.000000
252 [-]: JMP       254          ; PC := 254
253 [-]: FORLOOP   R32 244      ; R32 += R34; if R32 <= R33 then begin PC := 244; R35 := R32 end
254 [-]: FORLOOP   R28 239      ; R28 += R30; if R28 <= R29 then begin PC := 239; R31 := R28 end
255 [-]: LOADK     R36 1        ; R36 := 1.000000
256 [-]: LEN       R37 R17      ; R37 := # R17
257 [-]: LOADK     R38 1        ; R38 := 1.000000
258 [-]: FORPREP   R36 298      ; R36 -= R38; PC := 298
259 [-]: LOADBOOL  R40 0 0      ; R40 := false
260 [-]: LOADK     R41 1        ; R41 := 1.000000
261 [-]: LEN       R42 R15      ; R42 := # R15
262 [-]: LOADK     R43 1        ; R43 := 1.000000
263 [-]: FORPREP   R41 271      ; R41 -= R43; PC := 271
264 [-]: GETTABLE  R45 R15 R44  ; R45 := R15[R44]
265 [-]: GETTABLE  R45 R45 K52  ; R45 := R45["mItemType"]
266 [-]: GETTABLE  R46 R17 R39  ; R46 := R17[R39]
267 [-]: EQ        0 R45 R46    ; if R45 ~= R46 then PC := 271
268 [-]: JMP       271          ; PC := 271
269 [-]: LOADBOOL  R40 1 0      ; R40 := true
270 [-]: JMP       272          ; PC := 272
271 [-]: FORLOOP   R41 264      ; R41 += R43; if R41 <= R42 then begin PC := 264; R44 := R41 end
272 [-]: TEST      R40 1        ; if R40 then PC := 298
273 [-]: JMP       298          ; PC := 298
274 [-]: LOADK     R45 1        ; R45 := 1.000000
275 [-]: TEST      R27 0        ; if not R27 then PC := 290
276 [-]: JMP       290          ; PC := 290
277 [-]: LOADK     R46 1        ; R46 := 1.000000
278 [-]: GETTABLE  R47 R3 K11   ; R47 := R3["mInvigorationSuitOfferings"]
279 [-]: LEN       R47 R47      ; R47 := # R47
280 [-]: LOADK     R48 1        ; R48 := 1.000000
281 [-]: FORPREP   R46 289      ; R46 -= R48; PC := 289
282 [-]: GETTABLE  R50 R17 R39  ; R50 := R17[R39]
283 [-]: GETTABLE  R51 R3 K11   ; R51 := R3["mInvigorationSuitOfferings"]
284 [-]: GETTABLE  R51 R51 R49  ; R51 := R51[R49]
285 [-]: EQ        0 R50 R51    ; if R50 ~= R51 then PC := 289
286 [-]: JMP       289          ; PC := 289
287 [-]: LOADK     R45 0        ; R45 := 0.000000
288 [-]: JMP       290          ; PC := 290
289 [-]: FORLOOP   R46 282      ; R46 += R48; if R46 <= R47 then begin PC := 282; R49 := R46 end
290 [-]: GETGLOBAL R50 K13      ; R50 := 0x33bdd652
291 [-]: GETTABLE  R50 R50 K14  ; R82 := R50[0x23d5322f]
292 [-]: MOVE      R51 R15      ; R51 := R15
293 [-]: NEWTABLE  R52 0 2      ; R52 := {}
294 [-]: GETTABLE  R53 R17 R39  ; R53 := R17[R39]
295 [-]: SETTABLE  R52 K52 R53  ; R52["mItemType"] := R53
296 [-]: SETTABLE  R52 K53 R45  ; R52["mWeight"] := R45
297 [-]: CALL      R50 3 1      ; R50(R51,R52)
298 [-]: FORLOOP   R36 259      ; R36 += R38; if R36 <= R37 then begin PC := 259; R39 := R36 end
299 [-]: SELF      R50 R1 K54   ; R51 := R1; R50 := R1[0x3a5333af]
300 [-]: CALL      R50 2 2      ; R50 := R50(R51)
301 [-]: LEN       R51 R50      ; R51 := # R50
302 [-]: EQ        0 R51 K12    ; if R51 ~= 0.000000 then PC := 309
303 [-]: JMP       309          ; PC := 309
304 [-]: GETGLOBAL R51 K21      ; R51 := 0x3d106989
305 [-]: LOADK     R52 K55      ; R52 := "Failed to find valid offensive upgrades for helminth upgrades!"
306 [-]: CALL      R51 2 1      ; R51(R52)
307 [-]: LOADNIL   R51 R51      ; R51 := nil
308 [-]: RETURN    R51 2        ; return R51
309 [-]: SELF      R51 R1 K56   ; R52 := R1; R51 := R1[0xf9f0dca9]
310 [-]: CALL      R51 2 2      ; R51 := R51(R52)
311 [-]: LEN       R52 R51      ; R52 := # R51
312 [-]: EQ        0 R52 K12    ; if R52 ~= 0.000000 then PC := 319
313 [-]: JMP       319          ; PC := 319
314 [-]: GETGLOBAL R52 K21      ; R52 := 0x3d106989
315 [-]: LOADK     R53 K57      ; R53 := "Failed to find valid defensive upgrades for helminth upgrades!"
316 [-]: CALL      R52 2 1      ; R52(R53)
317 [-]: LOADNIL   R52 R52      ; R52 := nil
318 [-]: RETURN    R52 2        ; return R52
319 [-]: LEN       R52 R2       ; R52 := # R2
320 [-]: EQ        0 R52 K12    ; if R52 ~= 0.000000 then PC := 327
321 [-]: JMP       327          ; PC := 327
322 [-]: GETGLOBAL R52 K21      ; R52 := 0x3d106989
323 [-]: LOADK     R53 K58      ; R53 := "Failed to find resource costs for helminth upgrades!"
324 [-]: CALL      R52 2 1      ; R52(R53)
325 [-]: LOADNIL   R52 R52      ; R52 := nil
326 [-]: RETURN    R52 2        ; return R52
327 [-]: NEWTABLE  R52 0 0      ; R52 := {}
328 [-]: LOADK     R53 1        ; R53 := 1.000000
329 [-]: LEN       R54 R2       ; R54 := # R2
330 [-]: LOADK     R55 1        ; R55 := 1.000000
331 [-]: FORPREP   R53 337      ; R53 -= R55; PC := 337
332 [-]: GETGLOBAL R57 K13      ; R57 := 0x33bdd652
333 [-]: GETTABLE  R57 R57 K14  ; R82 := R57[0x23d5322f]
334 [-]: MOVE      R58 R52      ; R58 := R52
335 [-]: GETTABLE  R59 R2 R56   ; R59 := R2[R56]
336 [-]: CALL      R57 3 1      ; R57(R58,R59)
337 [-]: FORLOOP   R53 332      ; R53 += R55; if R53 <= R54 then begin PC := 332; R56 := R53 end
338 [-]: GETGLOBAL R57 K8       ; R57 := 0x0032441c
339 [-]: GETTABLE  R57 R57 K10  ; R57 := R57["HelminthUpgradeIndexCache"]
340 [-]: TEST      R57 1        ; if R57 then PC := 345
341 [-]: JMP       345          ; PC := 345
342 [-]: GETGLOBAL R57 K8       ; R57 := 0x0032441c
343 [-]: NEWTABLE  R58 0 0      ; R58 := {}
344 [-]: SETTABLE  R57 K10 R58  ; R57["HelminthUpgradeIndexCache"] := R58
345 [-]: GETGLOBAL R57 K8       ; R57 := 0x0032441c
346 [-]: GETTABLE  R57 R57 K10  ; R57 := R57["HelminthUpgradeIndexCache"]
347 [-]: SETTABLE  R57 R0 R7    ; R57[R0] := R7
348 [-]: GETGLOBAL R57 K59      ; R57 := 0xffd438ab
349 [-]: CALL      R57 1 2      ; R57 := R57()
350 [-]: GETGLOBAL R58 K60      ; R58 := 0x4f6851ff
351 [-]: GETGLOBAL R59 K61      ; R59 := 0x0997dbe6
352 [-]: MOVE      R60 R7       ; R60 := R7
353 [-]: CALL      R59 2 0      ; R59,... := R59(R60)
354 [-]: CALL      R58 0 1      ; R58(R59,...)
355 [-]: GETGLOBAL R58 K62      ; R58 := 0x0c5e62f9
356 [-]: LOADK     R59 1        ; R59 := 1.000000
357 [-]: LOADK     R60 K63      ; R60 := 1000000.000000
358 [-]: CALL      R58 3 2      ; R58 := R58(R59,R60)
359 [-]: GETGLOBAL R59 K64      ; R59 := 0xf1f5e051
360 [-]: MOVE      R60 R0       ; R60 := R0
361 [-]: CALL      R59 2 2      ; R59 := R59(R60)
362 [-]: GETGLOBAL R60 K61      ; R60 := 0x0997dbe6
363 [-]: ADD       R61 R59 R58  ; R61 := R59 + R58
364 [-]: CALL      R60 2 2      ; R60 := R60(R61)
365 [-]: EQ        1 R7 R6      ; if R7 == R6 then PC := 383
366 [-]: JMP       383          ; PC := 383
367 [-]: GETGLOBAL R61 K60      ; R61 := 0x4f6851ff
368 [-]: MOVE      R62 R60      ; R62 := R60
369 [-]: CALL      R61 2 1      ; R61(R62)
370 [-]: GETUPVAL  R61 U1       ; R61 := U1
371 [-]: MOVE      R62 R15      ; R62 := R15
372 [-]: MOVE      R63 R14      ; R63 := R14
373 [-]: CALL      R61 3 2      ; R61 := R61(R62,R63)
374 [-]: MOVE      R16 R61      ; R16 := R61
375 [-]: GETGLOBAL R61 K16      ; R61 := 0x25d99d89
376 [-]: SELF      R61 R61 K17  ; R62 := R61; R61 := R61[0x0805c9cf]
377 [-]: MOVE      R63 R16      ; R63 := R16
378 [-]: MOVE      R64 R7       ; R64 := R7
379 [-]: LOADBOOL  R65 0 0      ; R65 := false
380 [-]: LOADK     R66 K18      ; R66 := "OnHelminthOfferingsUploaded"
381 [-]: CALL      R61 6 1      ; R61(R62,R63,R64,R65,R66)
382 [-]: JMP       387          ; PC := 387
383 [-]: GETGLOBAL R61 K65      ; R61 := 0x84883f05
384 [-]: MOVE      R62 R60      ; R62 := R60
385 [-]: MOVE      R63 R14      ; R63 := R14
386 [-]: CALL      R61 3 1      ; R61(R62,R63)
387 [-]: NEWTABLE  R61 0 0      ; R61 := {}
388 [-]: LOADK     R62 1        ; R62 := 1.000000
389 [-]: LEN       R63 R16      ; R63 := # R16
390 [-]: LOADK     R64 1        ; R64 := 1.000000
391 [-]: FORPREP   R62 424      ; R62 -= R64; PC := 424
392 [-]: GETTABLE  R66 R16 R65  ; R66 := R16[R65]
393 [-]: SELF      R66 R66 K34  ; R67 := R66; R66 := R66[0xed4e0128]
394 [-]: CALL      R66 2 2      ; R66 := R66(R67)
395 [-]: GETGLOBAL R67 K35      ; R67 := 0x7f5022cf
396 [-]: GETTABLE  R67 R67 K36  ; R82 := R67[0xa5c556b9]
397 [-]: MOVE      R68 R66      ; R68 := R66
398 [-]: LOADK     R69 K66      ; R69 := "NovaBaseSuit"
399 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
400 [-]: TEST      R67 0        ; if not R67 then PC := 410
401 [-]: JMP       410          ; PC := 410
402 [-]: GETGLOBAL R67 K35      ; R67 := 0x7f5022cf
403 [-]: GETTABLE  R67 R67 K41  ; R82 := R67[0x66edf04f]
404 [-]: MOVE      R68 R66      ; R68 := R66
405 [-]: LOADK     R69 K66      ; R69 := "NovaBaseSuit"
406 [-]: LOADK     R70 K67      ; R70 := "Anti"
407 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
408 [-]: MOVE      R66 R67      ; R66 := R67
409 [-]: JMP       417          ; PC := 417
410 [-]: GETGLOBAL R67 K35      ; R67 := 0x7f5022cf
411 [-]: GETTABLE  R67 R67 K41  ; R82 := R67[0x66edf04f]
412 [-]: MOVE      R68 R66      ; R68 := R66
413 [-]: LOADK     R69 K49      ; R69 := "BaseSuit"
414 [-]: LOADK     R70 K43      ; R70 := ""
415 [-]: CALL      R67 4 2      ; R67 := R67(R68,R69,R70)
416 [-]: MOVE      R66 R67      ; R66 := R67
417 [-]: GETGLOBAL R67 K13      ; R67 := 0x33bdd652
418 [-]: GETTABLE  R67 R67 K14  ; R82 := R67[0x23d5322f]
419 [-]: MOVE      R68 R61      ; R68 := R61
420 [-]: GETGLOBAL R69 K26      ; R69 := 0x7ed0a956
421 [-]: MOVE      R70 R66      ; R70 := R66
422 [-]: CALL      R69 2 0      ; R69,... := R69(R70)
423 [-]: CALL      R67 0 1      ; R67(R68,...)
424 [-]: FORLOOP   R62 392      ; R62 += R64; if R62 <= R63 then begin PC := 392; R65 := R62 end
425 [-]: SELF      R67 R1 K68   ; R68 := R1; R67 := R1[0x29056938]
426 [-]: CALL      R67 2 2      ; R67 := R67(R68)
427 [-]: LOADK     R68 1        ; R68 := 1.000000
428 [-]: LEN       R69 R16      ; R69 := # R16
429 [-]: LOADK     R70 1        ; R70 := 1.000000
430 [-]: FORPREP   R68 483      ; R68 -= R70; PC := 483
431 [-]: LOADK     R72 1        ; R72 := 1.000000
432 [-]: LEN       R73 R67      ; R73 := # R67
433 [-]: LOADK     R74 1        ; R74 := 1.000000
434 [-]: FORPREP   R72 482      ; R72 -= R74; PC := 482
435 [-]: GETTABLE  R76 R16 R71  ; R76 := R16[R71]
436 [-]: GETTABLE  R77 R67 R75  ; R77 := R67[R75]
437 [-]: GETTABLE  R77 R77 K52  ; R77 := R77["mItemType"]
438 [-]: EQ        0 R76 R77    ; if R76 ~= R77 then PC := 482
439 [-]: JMP       482          ; PC := 482
440 [-]: LOADK     R76 1        ; R76 := 1.000000
441 [-]: GETTABLE  R77 R67 R75  ; R77 := R67[R75]
442 [-]: GETTABLE  R77 R77 K69  ; R77 := R77["mInvalidUpgradeTypes"]
443 [-]: LEN       R77 R77      ; R77 := # R77
444 [-]: LOADK     R78 1        ; R78 := 1.000000
445 [-]: FORPREP   R76 480      ; R76 -= R78; PC := 480
446 [-]: LEN       R80 R50      ; R80 := # R50
447 [-]: LOADK     R81 1        ; R81 := 1.000000
448 [-]: LOADK     R82 -1       ; R82 := -1.000000
449 [-]: FORPREP   R80 462      ; R80 -= R82; PC := 462
450 [-]: GETTABLE  R84 R67 R75  ; R84 := R67[R75]
451 [-]: GETTABLE  R84 R84 K69  ; R84 := R84["mInvalidUpgradeTypes"]
452 [-]: GETTABLE  R84 R84 R79  ; R84 := R84[R79]
453 [-]: GETTABLE  R85 R50 R83  ; R85 := R50[R83]
454 [-]: GETTABLE  R85 R85 K52  ; R85 := R85["mItemType"]
455 [-]: EQ        0 R84 R85    ; if R84 ~= R85 then PC := 462
456 [-]: JMP       462          ; PC := 462
457 [-]: GETGLOBAL R84 K13      ; R84 := 0x33bdd652
458 [-]: GETTABLE  R84 R84 K70  ; R82 := R84[0x9c1f3b5a]
459 [-]: MOVE      R85 R50      ; R85 := R50
460 [-]: MOVE      R86 R83      ; R86 := R83
461 [-]: CALL      R84 3 1      ; R84(R85,R86)
462 [-]: FORLOOP   R80 450      ; R80 += R82; if R80 <= R81 then begin PC := 450; R83 := R80 end
463 [-]: LEN       R84 R51      ; R84 := # R51
464 [-]: LOADK     R85 1        ; R85 := 1.000000
465 [-]: LOADK     R86 -1       ; R86 := -1.000000
466 [-]: FORPREP   R84 479      ; R84 -= R86; PC := 479
467 [-]: GETTABLE  R88 R67 R75  ; R88 := R67[R75]
468 [-]: GETTABLE  R88 R88 K69  ; R88 := R88["mInvalidUpgradeTypes"]
469 [-]: GETTABLE  R88 R88 R79  ; R88 := R88[R79]
470 [-]: GETTABLE  R89 R51 R87  ; R89 := R51[R87]
471 [-]: GETTABLE  R89 R89 K52  ; R89 := R89["mItemType"]
472 [-]: EQ        0 R88 R89    ; if R88 ~= R89 then PC := 479
473 [-]: JMP       479          ; PC := 479
474 [-]: GETGLOBAL R88 K13      ; R88 := 0x33bdd652
475 [-]: GETTABLE  R88 R88 K70  ; R82 := R88[0x9c1f3b5a]
476 [-]: MOVE      R89 R51      ; R89 := R51
477 [-]: MOVE      R90 R87      ; R90 := R87
478 [-]: CALL      R88 3 1      ; R88(R89,R90)
479 [-]: FORLOOP   R84 467      ; R84 += R86; if R84 <= R85 then begin PC := 467; R87 := R84 end
480 [-]: FORLOOP   R76 446      ; R76 += R78; if R76 <= R77 then begin PC := 446; R79 := R76 end
481 [-]: JMP       483          ; PC := 483
482 [-]: FORLOOP   R72 435      ; R72 += R74; if R72 <= R73 then begin PC := 435; R75 := R72 end
483 [-]: FORLOOP   R68 431      ; R68 += R70; if R68 <= R69 then begin PC := 431; R71 := R68 end
484 [-]: GETUPVAL  R88 U1       ; R88 := U1
485 [-]: MOVE      R89 R50      ; R89 := R50
486 [-]: MOVE      R90 R14      ; R90 := R14
487 [-]: CALL      R88 3 2      ; R88 := R88(R89,R90)
488 [-]: GETUPVAL  R89 U1       ; R89 := U1
489 [-]: MOVE      R90 R51      ; R90 := R51
490 [-]: MOVE      R91 R14      ; R91 := R14
491 [-]: CALL      R89 3 2      ; R89 := R89(R90,R91)
492 [-]: NEWTABLE  R90 0 0      ; R90 := {}
493 [-]: NEWTABLE  R91 0 0      ; R91 := {}
494 [-]: SELF      R92 R1 K71   ; R93 := R1; R92 := R1[0x9b14b099]
495 [-]: CALL      R92 2 2      ; R92 := R92(R93)
496 [-]: SELF      R93 R1 K72   ; R94 := R1; R93 := R1[0x1b6f1347]
497 [-]: CALL      R93 2 2      ; R93 := R93(R94)
498 [-]: SELF      R94 R1 K73   ; R95 := R1; R94 := R1[0x1d6f0df7]
499 [-]: CALL      R94 2 2      ; R94 := R94(R95)
500 [-]: SELF      R95 R1 K74   ; R96 := R1; R95 := R1[0xd1041755]
501 [-]: CALL      R95 2 2      ; R95 := R95(R96)
502 [-]: SELF      R96 R1 K75   ; R97 := R1; R96 := R1[0x95324e22]
503 [-]: CALL      R96 2 2      ; R96 := R96(R97)
504 [-]: LOADK     R97 1        ; R97 := 1.000000
505 [-]: MOVE      R98 R14      ; R98 := R14
506 [-]: LOADK     R99 1        ; R99 := 1.000000
507 [-]: FORPREP   R97 591      ; R97 -= R99; PC := 591
508 [-]: GETGLOBAL R101 K76     ; R101 := 0xdd6e4cf8
509 [-]: MOVE      R102 R92     ; R102 := R92
510 [-]: MOVE      R103 R93     ; R103 := R93
511 [-]: CALL      R101 3 2     ; R101 := R101(R102,R103)
512 [-]: NEWTABLE  R102 0 0     ; R102 := {}
513 [-]: NEWTABLE  R103 0 0     ; R103 := {}
514 [-]: LOADK     R104 1       ; R104 := 1.000000
515 [-]: MOVE      R105 R96     ; R105 := R96
516 [-]: LOADK     R106 1       ; R106 := 1.000000
517 [-]: FORPREP   R104 568     ; R104 -= R106; PC := 568
518 [-]: GETGLOBAL R108 K62     ; R108 := 0x0c5e62f9
519 [-]: LOADK     R109 1       ; R109 := 1.000000
520 [-]: LEN       R110 R52     ; R110 := # R52
521 [-]: CALL      R108 3 2     ; R108 := R108(R109,R110)
522 [-]: GETTABLE  R109 R52 R108; R109 := R52[R108]
523 [-]: GETGLOBAL R110 K13     ; R110 := 0x33bdd652
524 [-]: GETTABLE  R110 R110 K70; R82 := R110[0x9c1f3b5a]
525 [-]: MOVE      R111 R52     ; R111 := R52
526 [-]: MOVE      R112 R108    ; R112 := R108
527 [-]: CALL      R110 3 1     ; R110(R111,R112)
528 [-]: GETGLOBAL R110 K6      ; R110 := 0x5bced4c4
529 [-]: GETTABLE  R110 R110 K77; R82 := R110[0xac1b386a]
530 [-]: MOVE      R111 R95     ; R111 := R95
531 [-]: SUB       R112 R96 R107; R112 := R96 - R107
532 [-]: MUL       R112 R94 R112; R112 := R94 * R112
533 [-]: SUB       R112 R101 R112; R112 := R101 - R112
534 [-]: CALL      R110 3 2     ; R110 := R110(R111,R112)
535 [-]: GETGLOBAL R111 K6      ; R111 := 0x5bced4c4
536 [-]: GETTABLE  R111 R111 K78; R82 := R111[0xb62ecfe0]
537 [-]: MOVE      R112 R94     ; R112 := R94
538 [-]: SUB       R113 R96 R107; R113 := R96 - R107
539 [-]: MUL       R113 R95 R113; R113 := R95 * R113
540 [-]: SUB       R113 R101 R113; R113 := R101 - R113
541 [-]: CALL      R111 3 2     ; R111 := R111(R112,R113)
542 [-]: GETGLOBAL R112 K6      ; R112 := 0x5bced4c4
543 [-]: GETTABLE  R112 R112 K78; R82 := R112[0xb62ecfe0]
544 [-]: LOADK     R113 0       ; R113 := 0.000000
545 [-]: GETGLOBAL R114 K76     ; R114 := 0xdd6e4cf8
546 [-]: MOVE      R115 R111    ; R115 := R111
547 [-]: MOVE      R116 R110    ; R116 := R110
548 [-]: CALL      R114 3 0     ; R114,... := R114(R115,R116)
549 [-]: CALL      R112 0 2     ; R112 := R112(R113,...)
550 [-]: SUB       R101 R101 R112; R101 := R101 - R112
551 [-]: GETUPVAL  R113 U2      ; R113 := U2
552 [-]: GETTABLE  R113 R113 K79; R82 := R113[0x74a11ec6]
553 [-]: MOVE      R114 R112    ; R114 := R112
554 [-]: LOADK     R115 2       ; R115 := 2.000000
555 [-]: CALL      R113 3 2     ; R113 := R113(R114,R115)
556 [-]: MOVE      R112 R113    ; R112 := R113
557 [-]: GETGLOBAL R113 K13     ; R113 := 0x33bdd652
558 [-]: GETTABLE  R113 R113 K14; R82 := R113[0x23d5322f]
559 [-]: MOVE      R114 R102    ; R114 := R102
560 [-]: SELF      R115 R109 K80; R116 := R109; R115 := R109[0xf278f8a1]
561 [-]: CALL      R115 2 0     ; R115,... := R115(R116)
562 [-]: CALL      R113 0 1     ; R113(R114,...)
563 [-]: GETGLOBAL R113 K13     ; R113 := 0x33bdd652
564 [-]: GETTABLE  R113 R113 K14; R82 := R113[0x23d5322f]
565 [-]: MOVE      R114 R103    ; R114 := R103
566 [-]: MOVE      R115 R112    ; R115 := R112
567 [-]: CALL      R113 3 1     ; R113(R114,R115)
568 [-]: FORLOOP   R104 518     ; R104 += R106; if R104 <= R105 then begin PC := 518; R107 := R104 end
569 [-]: GETGLOBAL R113 K13     ; R113 := 0x33bdd652
570 [-]: GETTABLE  R113 R113 K14; R82 := R113[0x23d5322f]
571 [-]: MOVE      R114 R90     ; R114 := R90
572 [-]: MOVE      R115 R102    ; R115 := R102
573 [-]: CALL      R113 3 1     ; R113(R114,R115)
574 [-]: GETGLOBAL R113 K13     ; R113 := 0x33bdd652
575 [-]: GETTABLE  R113 R113 K14; R82 := R113[0x23d5322f]
576 [-]: MOVE      R114 R91     ; R114 := R91
577 [-]: MOVE      R115 R103    ; R115 := R103
578 [-]: CALL      R113 3 1     ; R113(R114,R115)
579 [-]: NEWTABLE  R113 0 0     ; R113 := {}
580 [-]: MOVE      R52 R113     ; R52 := R113
581 [-]: LOADK     R113 1       ; R113 := 1.000000
582 [-]: LEN       R114 R2      ; R114 := # R2
583 [-]: LOADK     R115 1       ; R115 := 1.000000
584 [-]: FORPREP   R113 590     ; R113 -= R115; PC := 590
585 [-]: GETGLOBAL R117 K13     ; R117 := 0x33bdd652
586 [-]: GETTABLE  R117 R117 K14; R82 := R117[0x23d5322f]
587 [-]: MOVE      R118 R52     ; R118 := R52
588 [-]: GETTABLE  R119 R2 R116 ; R119 := R2[R116]
589 [-]: CALL      R117 3 1     ; R117(R118,R119)
590 [-]: FORLOOP   R113 585     ; R113 += R115; if R113 <= R114 then begin PC := 585; R116 := R113 end
591 [-]: FORLOOP   R97 508      ; R97 += R99; if R97 <= R98 then begin PC := 508; R100 := R97 end
592 [-]: GETGLOBAL R117 K60     ; R117 := 0x4f6851ff
593 [-]: MOVE      R118 R57     ; R118 := R57
594 [-]: CALL      R117 2 1     ; R117(R118)
595 [-]: GETGLOBAL R117 K8      ; R117 := 0x0032441c
596 [-]: GETTABLE  R117 R117 K9 ; R117 := R117["HelminthUpgradeOfferingCache"]
597 [-]: TEST      R117 1       ; if R117 then PC := 602
598 [-]: JMP       602          ; PC := 602
599 [-]: GETGLOBAL R117 K8      ; R117 := 0x0032441c
600 [-]: NEWTABLE  R118 0 0     ; R118 := {}
601 [-]: SETTABLE  R117 K9 R118 ; R117["HelminthUpgradeOfferingCache"] := R118
602 [-]: GETGLOBAL R117 K8      ; R117 := 0x0032441c
603 [-]: GETTABLE  R117 R117 K9 ; R117 := R117["HelminthUpgradeOfferingCache"]
604 [-]: NEWTABLE  R118 0 0     ; R118 := {}
605 [-]: SETTABLE  R117 R0 R118 ; R117[R0] := R118
606 [-]: LOADK     R117 1       ; R117 := 1.000000
607 [-]: MOVE      R118 R14     ; R118 := R14
608 [-]: LOADK     R119 1       ; R119 := 1.000000
609 [-]: FORPREP   R117 629     ; R117 -= R119; PC := 629
610 [-]: GETGLOBAL R121 K13     ; R121 := 0x33bdd652
611 [-]: GETTABLE  R121 R121 K14; R82 := R121[0x23d5322f]
612 [-]: GETGLOBAL R122 K8      ; R122 := 0x0032441c
613 [-]: GETTABLE  R122 R122 K9 ; R122 := R122["HelminthUpgradeOfferingCache"]
614 [-]: GETTABLE  R122 R122 R0 ; R122 := R122[R0]
615 [-]: NEWTABLE  R123 0 6     ; R123 := {}
616 [-]: GETTABLE  R124 R16 R120; R124 := R16[R120]
617 [-]: SETTABLE  R123 K15 R124; R123["baseSuitType"] := R124
618 [-]: GETTABLE  R124 R61 R120; R124 := R61[R120]
619 [-]: SETTABLE  R123 K81 R124; R123["suitType"] := R124
620 [-]: GETTABLE  R124 R88 R120; R124 := R88[R120]
621 [-]: SETTABLE  R123 K82 R124; R123["offensiveUpgradeType"] := R124
622 [-]: GETTABLE  R124 R89 R120; R124 := R89[R120]
623 [-]: SETTABLE  R123 K83 R124; R123["defensiveUpgradeType"] := R124
624 [-]: GETTABLE  R124 R90 R120; R124 := R90[R120]
625 [-]: SETTABLE  R123 K84 R124; R123["resourceTypes"] := R124
626 [-]: GETTABLE  R124 R91 R120; R124 := R91[R120]
627 [-]: SETTABLE  R123 K85 R124; R123["resourceCosts"] := R124
628 [-]: CALL      R121 3 1     ; R121(R122,R123)
629 [-]: FORLOOP   R117 610     ; R117 += R119; if R117 <= R118 then begin PC := 610; R120 := R117 end
630 [-]: GETGLOBAL R121 K21     ; R121 := 0x3d106989
631 [-]: LOADK     R122 K86     ; R122 := "Helminth upgrade: generated offers for "
632 [-]: MOVE      R123 R0      ; R123 := R0
633 [-]: LOADK     R124 K87     ; R124 := " with cycle index "
634 [-]: MOVE      R125 R7      ; R125 := R7
635 [-]: CONCAT    R122 R122 R125; R122 := R122 .. R123 .. R124 .. R125
636 [-]: CALL      R121 2 1     ; R121(R122)
637 [-]: GETGLOBAL R121 K8      ; R121 := 0x0032441c
638 [-]: GETTABLE  R121 R121 K9 ; R121 := R121["HelminthUpgradeOfferingCache"]
639 [-]: GETTABLE  R121 R121 R0 ; R121 := R121[R0]
640 [-]: RETURN    R121 2       ; return R121
641 [-]: RETURN    R0 1         ; return 


; Function #380:
;
; Name:            
; Defined at line: 8212
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  44

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x0032441c
  2 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["EliteAlertTypeNameCache"]
  3 [-]: TEST      R3 1         ; if R3 then PC := 202
  4 [-]: JMP       202          ; PC := 202
  5 [-]: GETGLOBAL R3 K0        ; R3 := 0x0032441c
  6 [-]: NEWTABLE  R4 0 0       ; R4 := {}
  7 [-]: SETTABLE  R3 K1 R4     ; R3["EliteAlertTypeNameCache"] := R4
  8 [-]: GETGLOBAL R3 K0        ; R3 := 0x0032441c
  9 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["EliteAlertTypeNameCache"]
 10 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 11 [-]: SETTABLE  R3 K2 R4     ; R3["suits"] := R4
 12 [-]: GETGLOBAL R3 K0        ; R3 := 0x0032441c
 13 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["EliteAlertTypeNameCache"]
 14 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 15 [-]: SETTABLE  R3 K3 R4     ; R3["weapons"] := R4
 16 [-]: GETGLOBAL R3 K4        ; R3 := 0xbe190284
 17 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0xa1c390fe]
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: GETGLOBAL R4 K6        ; R4 := 0x7b998233
 20 [-]: MOVE      R5 R3        ; R5 := R3
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: TEST      R4 0         ; if not R4 then PC := 38
 23 [-]: JMP       38           ; PC := 38
 24 [-]: LOADK     R4 K7        ; R4 := ""
 25 [-]: GETGLOBAL R5 K8        ; R5 := 0x7ed0a956
 26 [-]: CALL      R5 1 2       ; R5 := R5()
 27 [-]: GETGLOBAL R6 K8        ; R6 := 0x7ed0a956
 28 [-]: CALL      R6 1 2       ; R6 := R6()
 29 [-]: NEWTABLE  R7 0 0       ; R7 := {}
 30 [-]: LOADK     R8 K7        ; R8 := ""
 31 [-]: GETGLOBAL R9 K8        ; R9 := 0x7ed0a956
 32 [-]: CALL      R9 1 2       ; R9 := R9()
 33 [-]: GETGLOBAL R10 K8       ; R10 := 0x7ed0a956
 34 [-]: CALL      R10 1 2      ; R10 := R10()
 35 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 36 [-]: LOADK     R12 0        ; R12 := 0.000000
 37 [-]: RETURN    R4 10        ; return R4,R5,R6,R7,R8,R9,R10,R11,R12
 38 [-]: LOADBOOL  R4 1 0       ; R4 := true
 39 [-]: SELF      R5 R3 K9     ; R6 := R3; R5 := R3[0xe9cbffa8]
 40 [-]: GETGLOBAL R7 K8        ; R7 := 0x7ed0a956
 41 [-]: LOADK     R8 K10       ; R8 := "/Lotus/Types/Game/PowerSuits/PlayerPowerSuit"
 42 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 43 [-]: MOVE      R8 R4        ; R8 := R4
 44 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 45 [-]: GETGLOBAL R6 K11       ; R6 := 0xcfc01047
 46 [-]: MOVE      R7 R5        ; R7 := R5
 47 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 48 [-]: JMP       94           ; PC := 94
 49 [-]: SELF      R11 R10 K12  ; R12 := R10; R11 := R10[0xfe9eb1a5]
 50 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 51 [-]: EQ        0 R11 K14    ; if R11 ~= 3.000000 then PC := 94
 52 [-]: JMP       94           ; PC := 94
 53 [-]: SELF      R11 R10 K15  ; R12 := R10; R11 := R10[0xba7bce8f]
 54 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 55 [-]: TEST      R11 1        ; if R11 then PC := 94
 56 [-]: JMP       94           ; PC := 94
 57 [-]: SELF      R11 R10 K16  ; R12 := R10; R11 := R10[0xed4e0128]
 58 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 59 [-]: GETGLOBAL R12 K17      ; R12 := 0x7f5022cf
 60 [-]: GETTABLE  R12 R12 K18  ; R82 := R12[0xa5c556b9]
 61 [-]: MOVE      R13 R11      ; R13 := R11
 62 [-]: LOADK     R14 K19      ; R14 := "Prime"
 63 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 64 [-]: TEST      R12 1        ; if R12 then PC := 94
 65 [-]: JMP       94           ; PC := 94
 66 [-]: GETGLOBAL R12 K17      ; R12 := 0x7f5022cf
 67 [-]: GETTABLE  R12 R12 K18  ; R82 := R12[0xa5c556b9]
 68 [-]: MOVE      R13 R11      ; R13 := R11
 69 [-]: LOADK     R14 K20      ; R14 := "Operator"
 70 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 71 [-]: TEST      R12 1        ; if R12 then PC := 94
 72 [-]: JMP       94           ; PC := 94
 73 [-]: GETGLOBAL R12 K17      ; R12 := 0x7f5022cf
 74 [-]: GETTABLE  R12 R12 K18  ; R82 := R12[0xa5c556b9]
 75 [-]: MOVE      R13 R11      ; R13 := R11
 76 [-]: LOADK     R14 K21      ; R14 := "Umbra"
 77 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 78 [-]: TEST      R12 1        ; if R12 then PC := 94
 79 [-]: JMP       94           ; PC := 94
 80 [-]: GETGLOBAL R12 K17      ; R12 := 0x7f5022cf
 81 [-]: GETTABLE  R12 R12 K18  ; R82 := R12[0xa5c556b9]
 82 [-]: MOVE      R13 R11      ; R13 := R11
 83 [-]: LOADK     R14 K22      ; R14 := "PlayerPowerSuit"
 84 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 85 [-]: TEST      R12 1        ; if R12 then PC := 94
 86 [-]: JMP       94           ; PC := 94
 87 [-]: GETGLOBAL R12 K23      ; R12 := 0x33bdd652
 88 [-]: GETTABLE  R12 R12 K24  ; R82 := R12[0x23d5322f]
 89 [-]: GETGLOBAL R13 K0       ; R13 := 0x0032441c
 90 [-]: GETTABLE  R13 R13 K1   ; R13 := R13["EliteAlertTypeNameCache"]
 91 [-]: GETTABLE  R13 R13 K2   ; R13 := R13["suits"]
 92 [-]: MOVE      R14 R11      ; R14 := R11
 93 [-]: CALL      R12 3 1      ; R12(R13,R14)
 94 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 49; R8 := R9 end
 95 [-]: JMP       49           ; PC := 49
 96 [-]: SELF      R12 R3 K9    ; R13 := R3; R12 := R3[0xe9cbffa8]
 97 [-]: GETGLOBAL R14 K25      ; R14 := gLotusWeaponType
 98 [-]: MOVE      R15 R4       ; R15 := R4
 99 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
100 [-]: GETGLOBAL R13 K11      ; R13 := 0xcfc01047
101 [-]: MOVE      R14 R12      ; R14 := R12
102 [-]: CALL      R13 2 4      ; R13,R14,R15 := R13(R14)
103 [-]: JMP       200          ; PC := 200
104 [-]: SELF      R18 R17 K12  ; R19 := R17; R18 := R17[0xfe9eb1a5]
105 [-]: CALL      R18 2 2      ; R18 := R18(R19)
106 [-]: EQ        1 R18 K26    ; if R18 == 0.000000 then PC := 112
107 [-]: JMP       112          ; PC := 112
108 [-]: EQ        1 R18 K27    ; if R18 == 1.000000 then PC := 112
109 [-]: JMP       112          ; PC := 112
110 [-]: EQ        0 R18 K28    ; if R18 ~= 5.000000 then PC := 200
111 [-]: JMP       200          ; PC := 200
112 [-]: SELF      R19 R17 K29  ; R20 := R17; R19 := R17[0x5ba460ac]
113 [-]: CALL      R19 2 2      ; R19 := R19(R20)
114 [-]: SELF      R19 R19 K30  ; R20 := R19; R19 := R19[0x56c01834]
115 [-]: CALL      R19 2 2      ; R19 := R19(R20)
116 [-]: TEST      R19 0        ; if not R19 then PC := 200
117 [-]: JMP       200          ; PC := 200
118 [-]: SELF      R19 R17 K31  ; R20 := R17; R19 := R17[0x8170d7d9]
119 [-]: CALL      R19 2 2      ; R19 := R19(R20)
120 [-]: TEST      R19 0        ; if not R19 then PC := 200
121 [-]: JMP       200          ; PC := 200
122 [-]: SELF      R19 R17 K15  ; R20 := R17; R19 := R17[0xba7bce8f]
123 [-]: CALL      R19 2 2      ; R19 := R19(R20)
124 [-]: TEST      R19 1        ; if R19 then PC := 200
125 [-]: JMP       200          ; PC := 200
126 [-]: SELF      R19 R17 K16  ; R20 := R17; R19 := R17[0xed4e0128]
127 [-]: CALL      R19 2 2      ; R19 := R19(R20)
128 [-]: GETGLOBAL R20 K17      ; R20 := 0x7f5022cf
129 [-]: GETTABLE  R20 R20 K18  ; R82 := R20[0xa5c556b9]
130 [-]: MOVE      R21 R19      ; R21 := R19
131 [-]: LOADK     R22 K32      ; R22 := "MK1"
132 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
133 [-]: TEST      R20 1        ; if R20 then PC := 200
134 [-]: JMP       200          ; PC := 200
135 [-]: GETGLOBAL R20 K17      ; R20 := 0x7f5022cf
136 [-]: GETTABLE  R20 R20 K18  ; R82 := R20[0xa5c556b9]
137 [-]: MOVE      R21 R19      ; R21 := R19
138 [-]: LOADK     R22 K33      ; R22 := "StartingRifle"
139 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
140 [-]: TEST      R20 1        ; if R20 then PC := 200
141 [-]: JMP       200          ; PC := 200
142 [-]: GETGLOBAL R20 K17      ; R20 := 0x7f5022cf
143 [-]: GETTABLE  R20 R20 K18  ; R82 := R20[0xa5c556b9]
144 [-]: MOVE      R21 R19      ; R21 := R19
145 [-]: LOADK     R22 K19      ; R22 := "Prime"
146 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
147 [-]: TEST      R20 1        ; if R20 then PC := 200
148 [-]: JMP       200          ; PC := 200
149 [-]: GETGLOBAL R20 K17      ; R20 := 0x7f5022cf
150 [-]: GETTABLE  R20 R20 K18  ; R82 := R20[0xa5c556b9]
151 [-]: MOVE      R21 R19      ; R21 := R19
152 [-]: LOADK     R22 K34      ; R22 := "Wraith"
153 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
154 [-]: TEST      R20 1        ; if R20 then PC := 200
155 [-]: JMP       200          ; PC := 200
156 [-]: GETGLOBAL R20 K17      ; R20 := 0x7f5022cf
157 [-]: GETTABLE  R20 R20 K18  ; R82 := R20[0xa5c556b9]
158 [-]: MOVE      R21 R19      ; R21 := R19
159 [-]: LOADK     R22 K35      ; R22 := "Vandal"
160 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
161 [-]: TEST      R20 1        ; if R20 then PC := 200
162 [-]: JMP       200          ; PC := 200
163 [-]: GETGLOBAL R20 K17      ; R20 := 0x7f5022cf
164 [-]: GETTABLE  R20 R20 K18  ; R82 := R20[0xa5c556b9]
165 [-]: MOVE      R21 R19      ; R21 := R19
166 [-]: LOADK     R22 K36      ; R22 := "Prisma"
167 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
168 [-]: TEST      R20 1        ; if R20 then PC := 200
169 [-]: JMP       200          ; PC := 200
170 [-]: GETGLOBAL R20 K17      ; R20 := 0x7f5022cf
171 [-]: GETTABLE  R20 R20 K18  ; R82 := R20[0xa5c556b9]
172 [-]: MOVE      R21 R19      ; R21 := R19
173 [-]: LOADK     R22 K37      ; R22 := "Syndicate"
174 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
175 [-]: TEST      R20 1        ; if R20 then PC := 200
176 [-]: JMP       200          ; PC := 200
177 [-]: GETGLOBAL R20 K17      ; R20 := 0x7f5022cf
178 [-]: GETTABLE  R20 R20 K18  ; R82 := R20[0xa5c556b9]
179 [-]: MOVE      R21 R19      ; R21 := R19
180 [-]: LOADK     R22 K38      ; R22 := "Modular"
181 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
182 [-]: TEST      R20 1        ; if R20 then PC := 200
183 [-]: JMP       200          ; PC := 200
184 [-]: GETGLOBAL R20 K17      ; R20 := 0x7f5022cf
185 [-]: GETTABLE  R20 R20 K18  ; R82 := R20[0xa5c556b9]
186 [-]: MOVE      R21 R19      ; R21 := R19
187 [-]: LOADK     R22 K39      ; R22 := "Gear"
188 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
189 [-]: TEST      R20 1        ; if R20 then PC := 200
190 [-]: JMP       200          ; PC := 200
191 [-]: GETGLOBAL R20 K23      ; R20 := 0x33bdd652
192 [-]: GETTABLE  R20 R20 K24  ; R82 := R20[0x23d5322f]
193 [-]: GETGLOBAL R21 K0       ; R21 := 0x0032441c
194 [-]: GETTABLE  R21 R21 K1   ; R21 := R21["EliteAlertTypeNameCache"]
195 [-]: GETTABLE  R21 R21 K3   ; R21 := R21["weapons"]
196 [-]: NEWTABLE  R22 0 2      ; R22 := {}
197 [-]: SETTABLE  R22 K40 R19  ; R22["itemName"] := R19
198 [-]: SETTABLE  R22 K41 R18  ; R22["category"] := R18
199 [-]: CALL      R20 3 1      ; R20(R21,R22)
200 [-]: TFORLOOP  R13 2        ; R16,R17 :=  R13(R14,R15); if R16 ~= nil then begin PC = 104; R15 := R16 end
201 [-]: JMP       104          ; PC := 104
202 [-]: GETGLOBAL R20 K0       ; R20 := 0x0032441c
203 [-]: GETTABLE  R20 R20 K1   ; R20 := R20["EliteAlertTypeNameCache"]
204 [-]: GETTABLE  R20 R20 K2   ; R20 := R20["suits"]
205 [-]: LEN       R20 R20      ; R20 := # R20
206 [-]: EQ        0 R20 K26    ; if R20 ~= 0.000000 then PC := 222
207 [-]: JMP       222          ; PC := 222
208 [-]: LOADK     R20 K7       ; R20 := ""
209 [-]: GETGLOBAL R21 K8       ; R21 := 0x7ed0a956
210 [-]: CALL      R21 1 2      ; R21 := R21()
211 [-]: GETGLOBAL R22 K8       ; R22 := 0x7ed0a956
212 [-]: CALL      R22 1 2      ; R22 := R22()
213 [-]: NEWTABLE  R23 0 0      ; R23 := {}
214 [-]: LOADK     R24 K7       ; R24 := ""
215 [-]: GETGLOBAL R25 K8       ; R25 := 0x7ed0a956
216 [-]: CALL      R25 1 2      ; R25 := R25()
217 [-]: GETGLOBAL R26 K8       ; R26 := 0x7ed0a956
218 [-]: CALL      R26 1 2      ; R26 := R26()
219 [-]: NEWTABLE  R27 0 0      ; R27 := {}
220 [-]: LOADK     R28 0        ; R28 := 0.000000
221 [-]: RETURN    R20 10       ; return R20,R21,R22,R23,R24,R25,R26,R27,R28
222 [-]: GETGLOBAL R20 K42      ; R20 := 0xffd438ab
223 [-]: CALL      R20 1 2      ; R20 := R20()
224 [-]: GETUPVAL  R21 U0       ; R21 := U0
225 [-]: GETTABLE  R21 R21 K43  ; R82 := R21[0x06d055f9]
226 [-]: EQ        0 R2 K44     ; if R2 ~= nil then PC := 229
227 [-]: JMP       229          ; PC := 229
228 [-]: LOADBOOL  R22 0 1      ; R22 := false; PC := 229
229 [-]: LOADBOOL  R22 1 0      ; R22 := true
230 [-]: MOVE      R23 R2       ; R23 := R2
231 [-]: GETGLOBAL R24 K45      ; R24 := 0x5bced4c4
232 [-]: GETTABLE  R24 R24 K46  ; R82 := R24[0x55f27c30]
233 [-]: GETUPVAL  R25 U1       ; R25 := U1
234 [-]: CALL      R25 1 2      ; R25 := R25()
235 [-]: GETGLOBAL R26 K47      ; R26 := ELITE_ALERT_MISSION_INTERVAL
236 [-]: DIV       R26 R26 K48  ; R26 := R26 / 60.000000
237 [-]: DIV       R25 R25 R26  ; R25 := R25 / R26
238 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
239 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
240 [-]: GETGLOBAL R22 K49      ; R22 := 0x4f6851ff
241 [-]: GETGLOBAL R23 K50      ; R23 := 0x0997dbe6
242 [-]: MOVE      R24 R21      ; R24 := R21
243 [-]: CALL      R23 2 0      ; R23,... := R23(R24)
244 [-]: CALL      R22 0 1      ; R22(R23,...)
245 [-]: GETGLOBAL R22 K51      ; R22 := 0x0c5e62f9
246 [-]: LOADK     R23 1        ; R23 := 1.000000
247 [-]: LOADK     R24 K52      ; R24 := 1000000.000000
248 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
249 [-]: GETGLOBAL R23 K53      ; R23 := 0xf1f5e051
250 [-]: MOVE      R24 R0       ; R24 := R0
251 [-]: CALL      R23 2 2      ; R23 := R23(R24)
252 [-]: GETGLOBAL R24 K49      ; R24 := 0x4f6851ff
253 [-]: GETGLOBAL R25 K50      ; R25 := 0x0997dbe6
254 [-]: ADD       R26 R23 R22  ; R26 := R23 + R22
255 [-]: CALL      R25 2 0      ; R25,... := R25(R26)
256 [-]: CALL      R24 0 1      ; R24(R25,...)
257 [-]: GETGLOBAL R24 K0       ; R24 := 0x0032441c
258 [-]: GETTABLE  R24 R24 K1   ; R24 := R24["EliteAlertTypeNameCache"]
259 [-]: GETTABLE  R24 R24 K2   ; R24 := R24["suits"]
260 [-]: GETGLOBAL R25 K51      ; R25 := 0x0c5e62f9
261 [-]: LOADK     R26 1        ; R26 := 1.000000
262 [-]: GETGLOBAL R27 K0       ; R27 := 0x0032441c
263 [-]: GETTABLE  R27 R27 K1   ; R27 := R27["EliteAlertTypeNameCache"]
264 [-]: GETTABLE  R27 R27 K2   ; R27 := R27["suits"]
265 [-]: LEN       R27 R27      ; R27 := # R27
266 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
267 [-]: GETTABLE  R24 R24 R25  ; R24 := R24[R25]
268 [-]: GETGLOBAL R25 K17      ; R25 := 0x7f5022cf
269 [-]: GETTABLE  R25 R25 K54  ; R82 := R25[0x66edf04f]
270 [-]: MOVE      R26 R24      ; R26 := R24
271 [-]: LOADK     R27 K55      ; R27 := "/StoreItems"
272 [-]: LOADK     R28 K7       ; R28 := ""
273 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
274 [-]: GETGLOBAL R26 K8       ; R26 := 0x7ed0a956
275 [-]: MOVE      R27 R25      ; R27 := R25
276 [-]: CALL      R26 2 2      ; R26 := R26(R27)
277 [-]: GETGLOBAL R27 K17      ; R27 := 0x7f5022cf
278 [-]: GETTABLE  R27 R27 K18  ; R82 := R27[0xa5c556b9]
279 [-]: MOVE      R28 R25      ; R28 := R25
280 [-]: LOADK     R29 K56      ; R29 := "/Anti"
281 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
282 [-]: TEST      R27 0        ; if not R27 then PC := 296
283 [-]: JMP       296          ; PC := 296
284 [-]: GETGLOBAL R27 K17      ; R27 := 0x7f5022cf
285 [-]: GETTABLE  R27 R27 K57  ; R82 := R27[0x1a94c9cc]
286 [-]: MOVE      R28 R25      ; R28 := R25
287 [-]: LOADK     R29 1        ; R29 := 1.000000
288 [-]: GETGLOBAL R30 K17      ; R30 := 0x7f5022cf
289 [-]: GETTABLE  R30 R30 K58  ; R82 := R30[0x41e2ae25]
290 [-]: MOVE      R31 R25      ; R31 := R25
291 [-]: CALL      R30 2 2      ; R30 := R30(R31)
292 [-]: SUB       R30 R30 K59  ; R30 := R30 - 4.000000
293 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
294 [-]: LOADK     R28 K60      ; R28 := "Nova"
295 [-]: CONCAT    R25 R27 R28  ; R25 := R27 .. R28
296 [-]: GETGLOBAL R27 K8       ; R27 := 0x7ed0a956
297 [-]: MOVE      R28 R25      ; R28 := R25
298 [-]: LOADK     R29 K61      ; R29 := "BaseSuit"
299 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
300 [-]: CALL      R27 2 2      ; R27 := R27(R28)
301 [-]: NEWTABLE  R28 0 2      ; R28 := {}
302 [-]: SETTABLE  R28 K62 K64  ; R28["value"] := 10.000000
303 [-]: SETTABLE  R28 K65 K66  ; R28["label"] := "/Lotus/Language/Labels/AVATAR_ABILITY_STRENGTH"
304 [-]: GETGLOBAL R29 K0       ; R29 := 0x0032441c
305 [-]: GETTABLE  R29 R29 K1   ; R29 := R29["EliteAlertTypeNameCache"]
306 [-]: GETTABLE  R29 R29 K3   ; R29 := R29["weapons"]
307 [-]: GETGLOBAL R30 K51      ; R30 := 0x0c5e62f9
308 [-]: LOADK     R31 1        ; R31 := 1.000000
309 [-]: GETGLOBAL R32 K0       ; R32 := 0x0032441c
310 [-]: GETTABLE  R32 R32 K1   ; R32 := R32["EliteAlertTypeNameCache"]
311 [-]: GETTABLE  R32 R32 K3   ; R32 := R32["weapons"]
312 [-]: LEN       R32 R32      ; R32 := # R32
313 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
314 [-]: GETTABLE  R29 R29 R30  ; R29 := R29[R30]
315 [-]: GETTABLE  R30 R29 K40  ; R30 := R29["itemName"]
316 [-]: GETGLOBAL R31 K17      ; R31 := 0x7f5022cf
317 [-]: GETTABLE  R31 R31 K54  ; R82 := R31[0x66edf04f]
318 [-]: MOVE      R32 R30      ; R32 := R30
319 [-]: LOADK     R33 K55      ; R33 := "/StoreItems"
320 [-]: LOADK     R34 K7       ; R34 := ""
321 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
322 [-]: GETGLOBAL R32 K8       ; R32 := 0x7ed0a956
323 [-]: MOVE      R33 R31      ; R33 := R31
324 [-]: CALL      R32 2 2      ; R32 := R32(R33)
325 [-]: GETGLOBAL R33 K8       ; R33 := 0x7ed0a956
326 [-]: MOVE      R34 R31      ; R34 := R31
327 [-]: LOADK     R35 K19      ; R35 := "Prime"
328 [-]: CONCAT    R34 R34 R35  ; R34 := R34 .. R35
329 [-]: CALL      R33 2 2      ; R33 := R33(R34)
330 [-]: NEWTABLE  R34 0 2      ; R34 := {}
331 [-]: GETUPVAL  R35 U0       ; R35 := U0
332 [-]: GETTABLE  R35 R35 K43  ; R82 := R35[0x06d055f9]
333 [-]: GETTABLE  R36 R29 K41  ; R36 := R29["category"]
334 [-]: EQ        1 R36 K28    ; if R36 == 5.000000 then PC := 337
335 [-]: JMP       337          ; PC := 337
336 [-]: LOADBOOL  R36 0 1      ; R36 := false; PC := 337
337 [-]: LOADBOOL  R36 1 0      ; R36 := true
338 [-]: LOADK     R37 276      ; R37 := 276.000000
339 [-]: LOADK     R38 216      ; R38 := 216.000000
340 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
341 [-]: SETTABLE  R34 K62 R35  ; R34["value"] := R35
342 [-]: SETTABLE  R34 K65 K67  ; R34["label"] := "/Lotus/Language/Labels/WEAPON_DAMAGE_AMOUNT"
343 [-]: GETGLOBAL R35 K49      ; R35 := 0x4f6851ff
344 [-]: MOVE      R36 R20      ; R36 := R20
345 [-]: CALL      R35 2 1      ; R35(R36)
346 [-]: GETGLOBAL R35 K68      ; R35 := 0x3d106989
347 [-]: LOADK     R36 K69      ; R36 := "EliteAlert: generated boosts for "
348 [-]: MOVE      R37 R0       ; R37 := R0
349 [-]: LOADK     R38 K70      ; R38 := ": suitType="
350 [-]: MOVE      R39 R25      ; R39 := R25
351 [-]: LOADK     R40 K71      ; R40 := " wepType="
352 [-]: MOVE      R41 R31      ; R41 := R31
353 [-]: CONCAT    R36 R36 R41  ; R36 := R36 .. R37 .. R38 .. R39 .. R40 .. R41
354 [-]: CALL      R35 2 1      ; R35(R36)
355 [-]: MOVE      R35 R24      ; R35 := R24
356 [-]: MOVE      R36 R26      ; R36 := R26
357 [-]: MOVE      R37 R27      ; R37 := R27
358 [-]: MOVE      R38 R28      ; R38 := R28
359 [-]: MOVE      R39 R30      ; R39 := R30
360 [-]: MOVE      R40 R32      ; R40 := R32
361 [-]: MOVE      R41 R33      ; R41 := R33
362 [-]: MOVE      R42 R34      ; R42 := R34
363 [-]: MOVE      R43 R21      ; R43 := R21
364 [-]: RETURN    R35 10       ; return R35,R36,R37,R38,R39,R40,R41,R42,R43
365 [-]: RETURN    R0 1         ; return 


; Function #381:
;
; Name:            
; Defined at line: 8312
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Rank"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 58
  5 [-]: JMP       58           ; PC := 58
  6 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["ResultItemType"]
  7 [-]: TEST      R1 1         ; if R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: GETTABLE  R1 R0 K3     ; R1 := R0["Type"]
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 58
 14 [-]: JMP       58           ; PC := 58
 15 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0xf2deaf69]
 16 [-]: GETGLOBAL R4 K5        ; R4 := gWeaponBaseType
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: TEST      R2 0         ; if not R2 then PC := 58
 19 [-]: JMP       58           ; PC := 58
 20 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 21 [-]: GETGLOBAL R3 K6        ; R3 := 0x25d99d89
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETGLOBAL R2 K6        ; R2 := 0x25d99d89
 26 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x25a6e75e]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 1         ; if R2 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: LOADNIL   R2 R2        ; R2 := nil
 31 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 32 [-]: MOVE      R4 R2        ; R4 := R2
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: TEST      R3 1         ; if R3 then PC := 58
 35 [-]: JMP       58           ; PC := 58
 36 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["mXPInfo"]
 37 [-]: LOADK     R4 1         ; R4 := 1.000000
 38 [-]: LEN       R5 R3        ; R5 := # R3
 39 [-]: LOADK     R6 1         ; R6 := 1.000000
 40 [-]: FORPREP   R4 57        ; R4 -= R6; PC := 57
 41 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
 42 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mItemType"]
 43 [-]: GETGLOBAL R9 K0        ; R9 := 0x7b998233
 44 [-]: MOVE      R10 R8       ; R10 := R8
 45 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 46 [-]: TEST      R9 1         ; if R9 then PC := 57
 47 [-]: JMP       57           ; PC := 57
 48 [-]: EQ        0 R8 R1      ; if R8 ~= R1 then PC := 57
 49 [-]: JMP       57           ; PC := 57
 50 [-]: GETGLOBAL R9 K10       ; R9 := 0xa94df70b
 51 [-]: SELF      R9 R9 K11    ; R10 := R9; R9 := R9[0x8427bf69]
 52 [-]: GETTABLE  R11 R3 R7    ; R11 := R3[R7]
 53 [-]: GETTABLE  R11 R11 K12  ; R11 := R11["mXP"]
 54 [-]: MOVE      R12 R8       ; R12 := R8
 55 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 56 [-]: SETTABLE  R0 K1 R9     ; R0["Rank"] := R9
 57 [-]: FORLOOP   R4 41        ; R4 += R6; if R4 <= R5 then begin PC := 41; R7 := R4 end
 58 [-]: RETURN    R0 1         ; return 


; Function #382:
;
; Name:            
; Defined at line: 8330
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 46
  5 [-]: JMP       46           ; PC := 46
  6 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: LOADK     R1 10        ; R1 := 10.000000
  9 [-]: EQ        0 R2 K1      ; if R2 ~= nil then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADK     R2 2         ; R2 := 2.000000
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K3     ; R82 := R3[0x4bc83635]
 14 [-]: GETUPVAL  R4 U1        ; R4 := U1
 15 [-]: GETTABLE  R4 R4 K4     ; R82 := R4[0x5d10207d]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADBOOL  R6 1 0       ; R6 := true
 18 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 19 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 20 [-]: GETUPVAL  R4 U0        ; R4 := U0
 21 [-]: GETTABLE  R4 R4 K3     ; R82 := R4[0x4bc83635]
 22 [-]: GETUPVAL  R5 U1        ; R5 := U1
 23 [-]: GETTABLE  R5 R5 K4     ; R82 := R5[0x5d10207d]
 24 [-]: MOVE      R6 R2        ; R6 := R2
 25 [-]: LOADBOOL  R7 1 0       ; R7 := true
 26 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 27 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 28 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0[0xf2deaf69]
 29 [-]: GETGLOBAL R7 K6        ; R7 := gParticleSysType
 30 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 31 [-]: TEST      R5 0         ; if not R5 then PC := 38
 32 [-]: JMP       38           ; PC := 38
 33 [-]: SELF      R5 R0 K7     ; R6 := R0; R5 := R0[0x8feccd8b]
 34 [-]: MOVE      R7 R3        ; R7 := R3
 35 [-]: MOVE      R8 R4        ; R8 := R4
 36 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 37 [-]: JMP       46           ; PC := 46
 38 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0[0xf2deaf69]
 39 [-]: GETGLOBAL R7 K8        ; R7 := gLensFlareType
 40 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 41 [-]: TEST      R5 0         ; if not R5 then PC := 46
 42 [-]: JMP       46           ; PC := 46
 43 [-]: SELF      R5 R0 K9     ; R6 := R0; R5 := R0[0xc2b4e597]
 44 [-]: MOVE      R7 R3        ; R7 := R3
 45 [-]: CALL      R5 3 1       ; R5(R6,R7)
 46 [-]: RETURN    R0 1         ; return 


; Function #383:
;
; Name:            
; Defined at line: 8350
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7f5022cf
  2 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x66edf04f]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: LOADK     R4 K2        ; R4 := "\"#.-\""
  5 [-]: CLOSURE   R5 0         ; R5 := closure(Function #383.1)
  6 [-]: MOVE      R0 R1        ; R0 := R1
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: TAILCALL  R2 4 0       ; R2,... := R2(R3,R4,R5)
  9 [-]: RETURN    R2 0         ; return R2,...
 10 [-]: RETURN    R0 1         ; return 


; Function #383.1:
;
; Name:            
; Defined at line: 8353
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x66edf04f]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := "%w+"
  5 [-]: CLOSURE   R4 0         ; R4 := closure(Function #383.1.1)
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETUPVAL  R0 U1        ; R0 := U1
  8 [-]: TAILCALL  R1 4 0       ; R1,... := R1(R2,R3,R4)
  9 [-]: RETURN    R1 0         ; return R1,...
 10 [-]: RETURN    R0 1         ; return 


; Function #383.1.1:
;
; Name:            
; Defined at line: 8356
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := Lotus_Game
  2 [-]: LOADK     R2 K1        ; R2 := "UIStyle_"
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  5 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  6 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 25
  7 [-]: JMP       25           ; PC := 25
  8 [-]: LEN       R2 R0        ; R2 := # R0
  9 [-]: EQ        0 R2 K3      ; if R2 ~= 6.000000 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 2         ; return R0
 12 [-]: GETGLOBAL R2 K4        ; R2 := 0x3d106989
 13 [-]: LOADK     R3 K5        ; R3 := "Attempted to use broken color: "
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: LOADBOOL  R2 0 0       ; R2 := false
 18 [-]: TEST      R2 0         ; if not R2 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: LOADK     R2 K6        ; R2 := ""
 21 [-]: RETURN    R2 2         ; return R2
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: GETTABLE  R2 R2 K8     ; R2 := R2[9.000000]
 24 [-]: RETURN    R2 2         ; return R2
 25 [-]: GETUPVAL  R2 U0        ; R2 := U0
 26 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 27 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 40
 28 [-]: JMP       40           ; PC := 40
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: GETGLOBAL R3 K9        ; R3 := 0x7f5022cf
 31 [-]: GETTABLE  R3 R3 K10    ; R82 := R3[0xe8072ded]
 32 [-]: LOADK     R4 K11       ; R4 := "%X"
 33 [-]: GETUPVAL  R5 U1        ; R5 := U1
 34 [-]: GETTABLE  R5 R5 K12    ; R82 := R5[0x5d10207d]
 35 [-]: MOVE      R6 R1        ; R6 := R1
 36 [-]: LOADBOOL  R7 1 0       ; R7 := true
 37 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 38 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 39 [-]: SETTABLE  R2 R1 R3     ; R2[R1] := R3
 40 [-]: GETUPVAL  R2 U0        ; R2 := U0
 41 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
 42 [-]: RETURN    R2 2         ; return R2
 43 [-]: RETURN    R0 1         ; return 


; Function #384:
;
; Name:            
; Defined at line: 8381
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: CLOSURE   R1 0         ; R1 := closure(Function #384.1)
  2 [-]: GETUPVAL  R0 U0        ; R0 := U0
  3 [-]: MOVE      R2 R1        ; R2 := R1
  4 [-]: CALL      R2 1 2       ; R2 := R2()
  5 [-]: TEST      R2 1         ; if R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R2 K0        ; R2 := _T
  9 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["ShowNotification"]
 10 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 74
 11 [-]: JMP       74           ; PC := 74
 12 [-]: GETGLOBAL R2 K3        ; R2 := 0x25d99d89
 13 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xf5fb4cbf]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: GETGLOBAL R3 K0        ; R3 := _T
 16 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["SkipMailNotification"]
 17 [-]: TEST      R3 1         ; if R3 then PC := 41
 18 [-]: JMP       41           ; PC := 41
 19 [-]: GETGLOBAL R3 K6        ; R3 := 0x7f5022cf
 20 [-]: GETTABLE  R3 R3 K7     ; R82 := R3[0x04981ab3]
 21 [-]: GETGLOBAL R4 K8        ; R4 := 0x603636ad
 22 [-]: EQ        0 R2 K9      ; if R2 ~= 1.000000 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: LOADK     R5 K10       ; R5 := "/Lotus/Language/Menu/Message"
 25 [-]: TEST      R5 1         ; if R5 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: LOADK     R5 K11       ; R5 := "/Lotus/Language/Menu/Messages"
 28 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 29 [-]: CALL      R4 3 0       ; R4,... := R4(R5,R6)
 30 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 31 [-]: GETGLOBAL R4 K0        ; R4 := _T
 32 [-]: GETTABLE  R4 R4 K12    ; R82 := R4[0x7dce37bc]
 33 [-]: GETGLOBAL R5 K8        ; R5 := 0x603636ad
 34 [-]: LOADK     R6 K13       ; R6 := "/Lotus/Language/Menu/Mailbox_NewMessagesNotification"
 35 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 36 [-]: SETTABLE  R7 K14 R2    ; R7["COUNT"] := R2
 37 [-]: SETTABLE  R7 K15 R3    ; R7["MESSAGES"] := R3
 38 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 39 [-]: LOADK     R6 K16       ; R6 := "Mail"
 40 [-]: CALL      R4 3 1       ; R4(R5,R6)
 41 [-]: GETGLOBAL R4 K3        ; R4 := 0x25d99d89
 42 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4[0x63a9c319]
 43 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 44 [-]: LT        0 K18 R4     ; if 0.000000 >= R4 then PC := 74
 45 [-]: JMP       74           ; PC := 74
 46 [-]: GETGLOBAL R4 K0        ; R4 := _T
 47 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["GetScreenRes"]
 48 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 74
 49 [-]: JMP       74           ; PC := 74
 50 [-]: GETGLOBAL R4 K0        ; R4 := _T
 51 [-]: GETTABLE  R4 R4 K20    ; R82 := R4[0x14e3a848]
 52 [-]: LOADK     R5 K21       ; R5 := "Inbox"
 53 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 54 [-]: GETGLOBAL R5 K22       ; R5 := 0x9ba7909f
 55 [-]: SELF      R5 R5 K23    ; R6 := R5; R5 := R5[0xbcfb64ab]
 56 [-]: MOVE      R7 R4        ; R7 := R4
 57 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 58 [-]: GETGLOBAL R6 K24       ; R6 := 0x7b998233
 59 [-]: MOVE      R7 R5        ; R7 := R5
 60 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 61 [-]: TEST      R6 0         ; if not R6 then PC := 74
 62 [-]: JMP       74           ; PC := 74
 63 [-]: GETGLOBAL R6 K24       ; R6 := 0x7b998233
 64 [-]: MOVE      R7 R0        ; R7 := R0
 65 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 66 [-]: TEST      R6 1         ; if R6 then PC := 74
 67 [-]: JMP       74           ; PC := 74
 68 [-]: GETGLOBAL R6 K0        ; R6 := _T
 69 [-]: SETTABLE  R6 K25 K26   ; R6["OpeningMailbox"] := true
 70 [-]: SELF      R6 R0 K27    ; R7 := R0; R6 := R0[0xbd2e96ea]
 71 [-]: LOADK     R8 1         ; R8 := 1.000000
 72 [-]: CLOSURE   R9 1         ; R9 := closure(Function #384.2)
 73 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 74 [-]: GETGLOBAL R6 K0        ; R6 := _T
 75 [-]: SETTABLE  R6 K5 K28    ; R6["SkipMailNotification"] := false
 76 [-]: GETGLOBAL R6 K0        ; R6 := _T
 77 [-]: SETTABLE  R6 K29 K28   ; R6["gQueueMailbox"] := false
 78 [-]: RETURN    R0 1         ; return 


; Function #384.1:
;
; Name:            
; Defined at line: 8382
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["gQueueMailbox"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= true then PC := 14
  4 [-]: JMP       14           ; PC := 14
  5 [-]: GETGLOBAL R0 K3        ; R0 := 0x1963f5ec
  6 [-]: CALL      R0 1 2       ; R0 := R0()
  7 [-]: EQ        0 R0 K4      ; if R0 ~= "" then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETGLOBAL R0 K5        ; R0 := 0x7b998233
 10 [-]: GETGLOBAL R1 K6        ; R1 := 0x25d99d89
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: TEST      R0 0         ; if not R0 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADBOOL  R0 0 0       ; R0 := false
 15 [-]: RETURN    R0 2         ; return R0
 16 [-]: GETGLOBAL R0 K6        ; R0 := 0x25d99d89
 17 [-]: SELF      R0 R0 K7     ; R1 := R0; R0 := R0[0x5c16ba91]
 18 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 19 [-]: LEN       R0 R0        ; R0 := # R0
 20 [-]: LT        1 K8 R0      ; if 0.000000 < R0 then PC := 45
 21 [-]: JMP       45           ; PC := 45
 22 [-]: GETGLOBAL R0 K6        ; R0 := 0x25d99d89
 23 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0[0xa8c9f8a6]
 24 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 25 [-]: LEN       R0 R0        ; R0 := # R0
 26 [-]: LT        1 K8 R0      ; if 0.000000 < R0 then PC := 45
 27 [-]: JMP       45           ; PC := 45
 28 [-]: GETUPVAL  R0 U0        ; R0 := U0
 29 [-]: GETGLOBAL R1 K6        ; R1 := 0x25d99d89
 30 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 31 [-]: TEST      R0 0         ; if not R0 then PC := 47
 32 [-]: JMP       47           ; PC := 47
 33 [-]: GETGLOBAL R0 K0        ; R0 := _T
 34 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["QuestHighPriorityMessagePending"]
 35 [-]: TEST      R0 0         ; if not R0 then PC := 45
 36 [-]: JMP       45           ; PC := 45
 37 [-]: GETGLOBAL R0 K0        ; R0 := _T
 38 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["ShowNotification"]
 39 [-]: TEST      R0 0         ; if not R0 then PC := 45
 40 [-]: JMP       45           ; PC := 45
 41 [-]: GETGLOBAL R0 K0        ; R0 := _T
 42 [-]: GETTABLE  R0 R0 K12    ; R0 := R0["GetScreenRes"]
 43 [-]: TEST      R0 1         ; if R0 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: LOADBOOL  R0 0 0       ; R0 := false
 46 [-]: RETURN    R0 2         ; return R0
 47 [-]: LOADBOOL  R0 1 0       ; R0 := true
 48 [-]: RETURN    R0 2         ; return R0
 49 [-]: RETURN    R0 1         ; return 


; Function #384.2:
;
; Name:            
; Defined at line: 8417
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["UIInputEnabled"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 17
  4 [-]: JMP       17           ; PC := 17
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["RadialSolarMapOpen"]
  7 [-]: TEST      R0 1         ; if R0 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R0 K0        ; R0 := _T
 10 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["TeleportingToConsole"]
 11 [-]: TEST      R0 1         ; if R0 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R0 K0        ; R0 := _T
 14 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["QuestPickerOpen"]
 15 [-]: TEST      R0 0         ; if not R0 then PC := 24
 16 [-]: JMP       24           ; PC := 24
 17 [-]: GETGLOBAL R0 K0        ; R0 := _T
 18 [-]: SETTABLE  R0 K5 K6     ; R0["SkipMailNotification"] := true
 19 [-]: GETGLOBAL R0 K0        ; R0 := _T
 20 [-]: SETTABLE  R0 K7 K6     ; R0["gQueueMailbox"] := true
 21 [-]: GETGLOBAL R0 K0        ; R0 := _T
 22 [-]: SETTABLE  R0 K8 K9     ; R0["OpeningMailbox"] := nil
 23 [-]: JMP       50           ; PC := 50
 24 [-]: GETGLOBAL R0 K0        ; R0 := _T
 25 [-]: SETTABLE  R0 K10 K11   ; R0["ForceOpenScreen"] := "Inbox"
 26 [-]: GETGLOBAL R0 K12       ; R0 := 0x7b998233
 27 [-]: GETGLOBAL R1 K13       ; R1 := 0xbe190284
 28 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 29 [-]: TEST      R0 1         ; if R0 then PC := 48
 30 [-]: JMP       48           ; PC := 48
 31 [-]: GETGLOBAL R0 K12       ; R0 := 0x7b998233
 32 [-]: GETGLOBAL R1 K14       ; R1 := 0x89326c93
 33 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 34 [-]: TEST      R0 1         ; if R0 then PC := 48
 35 [-]: JMP       48           ; PC := 48
 36 [-]: GETGLOBAL R0 K13       ; R0 := 0xbe190284
 37 [-]: SELF      R0 R0 K15    ; R1 := R0; R0 := R0[0x4835735a]
 38 [-]: GETGLOBAL R2 K14       ; R2 := 0x89326c93
 39 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0x78298275]
 40 [-]: CALL      R2 2 0       ; R2,... := R2(R3)
 41 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 42 [-]: TEST      R0 0         ; if not R0 then PC := 48
 43 [-]: JMP       48           ; PC := 48
 44 [-]: GETGLOBAL R0 K13       ; R0 := 0xbe190284
 45 [-]: SELF      R0 R0 K17    ; R1 := R0; R0 := R0[0x71e4693c]
 46 [-]: CALL      R0 2 1       ; R0(R1)
 47 [-]: JMP       50           ; PC := 50
 48 [-]: GETGLOBAL R0 K0        ; R0 := _T
 49 [-]: SETTABLE  R0 K8 K9     ; R0["OpeningMailbox"] := nil
 50 [-]: RETURN    R0 1         ; return 


; Function #385:
;
; Name:            
; Defined at line: 8446
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x69727e0b]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x89e663e9]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: TEST      R0 0         ; if not R0 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETUPVAL  R0 U0        ; R0 := U0
 14 [-]: CALL      R0 1 2       ; R0 := R0()
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADBOOL  R0 0 1       ; R0 := false; PC := 17
 17 [-]: LOADBOOL  R0 1 0       ; R0 := true
 18 [-]: RETURN    R0 2         ; return R0
 19 [-]: RETURN    R0 1         ; return 


; Function #386:
;
; Name:            
; Defined at line: 8450
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: TESTSET   R4 R2 1      ; if R2 then PC := 4 else R4 := R2
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADK     R4 0         ; R4 := 0.000000
  4 [-]: GETUPVAL  R5 U0        ; R5 := U0
  5 [-]: CALL      R5 1 2       ; R5 := R5()
  6 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0x29922d98]
  7 [-]: MOVE      R7 R0        ; R7 := R0
  8 [-]: MOVE      R8 R4        ; R8 := R4
  9 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 10 [-]: EQ        0 R3 K2      ; if R3 ~= nil then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETGLOBAL R6 K3        ; R6 := 0x603636ad
 13 [-]: LOADK     R7 K4        ; R7 := "/Lotus/Language/Kingpins/NemesisViewer_Title"
 14 [-]: LOADNIL   R8 R8        ; R8 := nil
 15 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 16 [-]: MOVE      R3 R6        ; R3 := R6
 17 [-]: GETGLOBAL R6 K3        ; R6 := 0x603636ad
 18 [-]: LOADK     R7 K6        ; R7 := "/Lotus/Language/Kingpins/NemesisControlledTerritory"
 19 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 20 [-]: SETTABLE  R8 K7 R3     ; R8["LICH_NAME"] := R3
 21 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 22 [-]: SETTABLE  R5 K5 R6     ; R5["uniqueName"] := R6
 23 [-]: TESTSET   R6 R1 1      ; if R1 then PC := 26 else R6 := R1
 24 [-]: JMP       26           ; PC := 26
 25 [-]: LOADK     R6 1         ; R6 := 1.000000
 26 [-]: LOADK     R7 55        ; R7 := 55.000000
 27 [-]: LOADK     R8 75        ; R8 := 75.000000
 28 [-]: EQ        0 R6 K8      ; if R6 ~= 1.000000 then PC := 33
 29 [-]: JMP       33           ; PC := 33
 30 [-]: LOADK     R7 50        ; R7 := 50.000000
 31 [-]: LOADK     R8 60        ; R8 := 60.000000
 32 [-]: JMP       47           ; PC := 47
 33 [-]: EQ        0 R6 K9      ; if R6 ~= 2.000000 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: LOADK     R7 55        ; R7 := 55.000000
 36 [-]: LOADK     R8 70        ; R8 := 70.000000
 37 [-]: JMP       47           ; PC := 47
 38 [-]: EQ        0 R6 K10     ; if R6 ~= 3.000000 then PC := 43
 39 [-]: JMP       43           ; PC := 43
 40 [-]: LOADK     R7 75        ; R7 := 75.000000
 41 [-]: LOADK     R8 90        ; R8 := 90.000000
 42 [-]: JMP       47           ; PC := 47
 43 [-]: LE        0 K11 R6     ; if 4.000000 > R6 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: LOADK     R7 90        ; R7 := 90.000000
 46 [-]: LOADK     R8 110       ; R8 := 110.000000
 47 [-]: GETGLOBAL R9 K13       ; R9 := 0x5bced4c4
 48 [-]: GETTABLE  R9 R9 K14    ; R82 := R9[0xb62ecfe0]
 49 [-]: GETTABLE  R10 R5 K12   ; R10 := R5["minEnemyLevel"]
 50 [-]: MOVE      R11 R7       ; R11 := R7
 51 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 52 [-]: SETTABLE  R5 K12 R9    ; R5["minEnemyLevel"] := R9
 53 [-]: GETGLOBAL R9 K13       ; R9 := 0x5bced4c4
 54 [-]: GETTABLE  R9 R9 K14    ; R82 := R9[0xb62ecfe0]
 55 [-]: GETTABLE  R10 R5 K15   ; R10 := R5["maxEnemyLevel"]
 56 [-]: MOVE      R11 R8       ; R11 := R8
 57 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 58 [-]: SETTABLE  R5 K15 R9    ; R5["maxEnemyLevel"] := R9
 59 [-]: SETTABLE  R5 K16 K8    ; R5["difficulty"] := 1.000000
 60 [-]: GETTABLE  R9 R5 K17    ; R9 := R5["missionType"]
 61 [-]: EQ        0 R9 K18     ; if R9 ~= 8.000000 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: SETTABLE  R5 K19 K20   ; R5["maxWaveNum"] := 5.000000
 64 [-]: JMP       88           ; PC := 88
 65 [-]: EQ        0 R9 K21     ; if R9 ~= 13.000000 then PC := 69
 66 [-]: JMP       69           ; PC := 69
 67 [-]: SETTABLE  R5 K19 K8    ; R5["maxWaveNum"] := 1.000000
 68 [-]: JMP       88           ; PC := 88
 69 [-]: EQ        0 R9 K9      ; if R9 ~= 2.000000 then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: SETTABLE  R5 K19 K20   ; R5["maxWaveNum"] := 5.000000
 72 [-]: JMP       88           ; PC := 88
 73 [-]: EQ        0 R9 K22     ; if R9 ~= 17.000000 then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: SETTABLE  R5 K19 K20   ; R5["maxWaveNum"] := 5.000000
 76 [-]: JMP       88           ; PC := 88
 77 [-]: EQ        0 R9 K23     ; if R9 ~= 7.000000 then PC := 81
 78 [-]: JMP       81           ; PC := 81
 79 [-]: SETTABLE  R5 K19 K9    ; R5["maxWaveNum"] := 2.000000
 80 [-]: JMP       88           ; PC := 88
 81 [-]: EQ        0 R9 K11     ; if R9 ~= 4.000000 then PC := 85
 82 [-]: JMP       85           ; PC := 85
 83 [-]: SETTABLE  R5 K19 K9    ; R5["maxWaveNum"] := 2.000000
 84 [-]: JMP       88           ; PC := 88
 85 [-]: EQ        0 R9 K24     ; if R9 ~= 32.000000 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: SETTABLE  R5 K19 K11   ; R5["maxWaveNum"] := 4.000000
 88 [-]: EQ        0 R4 K8      ; if R4 ~= 1.000000 then PC := 93
 89 [-]: JMP       93           ; PC := 93
 90 [-]: SELF      R10 R5 K25   ; R11 := R5; R10 := R5[0x5c0d8c92]
 91 [-]: GETUPVAL  R12 U1       ; R12 := U1
 92 [-]: CALL      R10 3 1      ; R10(R11,R12)
 93 [-]: RETURN    R5 2         ; return R5
 94 [-]: RETURN    R0 1         ; return 


; Function #387:
;
; Name:            
; Defined at line: 8507
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: TAILCALL  R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
  7 [-]: RETURN    R4 0         ; return R4,...
  8 [-]: RETURN    R0 1         ; return 


; Function #388:
;
; Name:            
; Defined at line: 8511
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xb61c0fd4]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: EQ        1 R1 K2      ; if R1 == 1.000000 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: EQ        0 R1 K3      ; if R1 ~= 0.000000 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: LOADBOOL  R2 1 0       ; R2 := true
  8 [-]: RETURN    R2 2         ; return R2
  9 [-]: JMP       37           ; PC := 37
 10 [-]: EQ        0 R1 K4      ; if R1 ~= 3.000000 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETGLOBAL R2 K5        ; R2 := 0x25d99d89
 13 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x25a6e75e]
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x2fdbb24a]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: LEN       R2 R2        ; R2 := # R2
 18 [-]: LT        1 K3 R2      ; if 0.000000 < R2 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 21
 21 [-]: LOADBOOL  R2 1 0       ; R2 := true
 22 [-]: RETURN    R2 2         ; return R2
 23 [-]: JMP       37           ; PC := 37
 24 [-]: EQ        0 R1 K8      ; if R1 ~= 4.000000 then PC := 37
 25 [-]: JMP       37           ; PC := 37
 26 [-]: GETGLOBAL R2 K5        ; R2 := 0x25d99d89
 27 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x25a6e75e]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x2fdbb24a]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: LEN       R2 R2        ; R2 := # R2
 32 [-]: EQ        1 R2 K3      ; if R2 == 0.000000 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 35
 35 [-]: LOADBOOL  R2 1 0       ; R2 := true
 36 [-]: RETURN    R2 2         ; return R2
 37 [-]: LOADBOOL  R2 0 0       ; R2 := false
 38 [-]: RETURN    R2 2         ; return R2
 39 [-]: RETURN    R0 1         ; return 


; Function #389:
;
; Name:            
; Defined at line: 8524
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: NEWTABLE  R2 0 6       ; R2 := {}
  2 [-]: SETTABLE  R2 K0 K1     ; R2["_uk"] := true
  3 [-]: SETTABLE  R2 K2 K1     ; R2["_ru"] := true
  4 [-]: SETTABLE  R2 K3 K1     ; R2["_ja"] := true
  5 [-]: SETTABLE  R2 K4 K1     ; R2["_zh"] := true
  6 [-]: SETTABLE  R2 K5 K1     ; R2["_tc"] := true
  7 [-]: SETTABLE  R2 K6 K1     ; R2["_ko"] := true
  8 [-]: GETGLOBAL R3 K7        ; R3 := 0x67513231
  9 [-]: CALL      R3 1 2       ; R3 := R3()
 10 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x6d604ba7]
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: GETTABLE  R4 R2 R3     ; R4 := R2[R3]
 13 [-]: TEST      R4 0         ; if not R4 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R4 K9        ; R4 := 0x7b998233
 16 [-]: MOVE      R5 R0        ; R5 := R0
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 27
 19 [-]: JMP       27           ; PC := 27
 20 [-]: EQ        1 R1 K10     ; if R1 == nil then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: SELF      R4 R0 K11    ; R5 := R0; R4 := R0[0x67bc869f]
 23 [-]: MOVE      R6 R1        ; R6 := R1
 24 [-]: LOADK     R7 65        ; R7 := 65.000000
 25 [-]: LOADK     R8 0         ; R8 := 0.000000
 26 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 27 [-]: LOADBOOL  R4 0 0       ; R4 := false
 28 [-]: RETURN    R4 2         ; return R4
 29 [-]: LOADBOOL  R4 1 0       ; R4 := true
 30 [-]: RETURN    R4 2         ; return R4
 31 [-]: RETURN    R0 1         ; return 


; Function #390:
;
; Name:            
; Defined at line: 8536
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x6c97a788
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0xe20ba977]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
  5 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xd3524453]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: SETTABLE  R0 K2 R1     ; R0["mGiftMode"] := R1
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
  9 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xbe5313b5]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: SETTABLE  R0 K5 R1     ; R0["mFriendInvRestriction"] := R1
 12 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
 13 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x28434616]
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: SETTABLE  R0 K7 R1     ; R0["mGuildInvRestriction"] := R1
 16 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
 17 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0x25b60da6]
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: SETTABLE  R0 K9 R1     ; R0["mShowFriendInvNotifications"] := R1
 20 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
 21 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0x6e08bd03]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: SETTABLE  R0 K11 R1    ; R0["mTradingRulesConfirmed"] := R1
 24 [-]: RETURN    R0 2         ; return R0
 25 [-]: RETURN    R0 1         ; return 


; Function #391:
;
; Name:            
; Defined at line: 8546
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R2 1000      ; R2 := 1000.000000
  2 [-]: GETGLOBAL R3 K0        ; R3 := 0x25d99d89
  3 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x2e37a704]
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: LEN       R3 R3        ; R3 := # R3
  6 [-]: LE        0 R2 R3      ; if R2 > R3 then PC := 37
  7 [-]: JMP       37           ; PC := 37
  8 [-]: GETGLOBAL R4 K2        ; R4 := 0x603636ad
  9 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendLimitError"
 10 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 11 [-]: SETTABLE  R6 K4 R3     ; R6["NUM_FRIENDS"] := R3
 12 [-]: SETTABLE  R6 K5 R2     ; R6["MAX_FRIENDS"] := R2
 13 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 14 [-]: GETGLOBAL R5 K6        ; R5 := 0x7b998233
 15 [-]: MOVE      R6 R0        ; R6 := R0
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: TEST      R5 1         ; if R5 then PC := 31
 18 [-]: JMP       31           ; PC := 31
 19 [-]: LEN       R5 R1        ; R5 := # R1
 20 [-]: EQ        1 R5 K7      ; if R5 == 0.000000 then PC := 31
 21 [-]: JMP       31           ; PC := 31
 22 [-]: SELF      R5 R0 K8     ; R6 := R0; R5 := R0[0xf56f3887]
 23 [-]: MOVE      R7 R1        ; R7 := R1
 24 [-]: NEWTABLE  R8 2 0       ; R8 := {}
 25 [-]: LOADK     R9 K9        ; R9 := "false"
 26 [-]: MOVE      R10 R4       ; R10 := R4
 27 [-]: SETLIST   R8 2 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
 28 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 29 [-]: TEST      R5 1         ; if R5 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETUPVAL  R5 U0        ; R5 := U0
 32 [-]: GETTABLE  R5 R5 K10    ; R82 := R5[0xe0cba3ca]
 33 [-]: MOVE      R6 R4        ; R6 := R4
 34 [-]: CALL      R5 2 1       ; R5(R6)
 35 [-]: LOADBOOL  R5 1 0       ; R5 := true
 36 [-]: RETURN    R5 2         ; return R5
 37 [-]: LOADBOOL  R5 0 0       ; R5 := false
 38 [-]: RETURN    R5 2         ; return R5
 39 [-]: RETURN    R0 1         ; return 


; Function #392:
;
; Name:            
; Defined at line: 8559
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: TAILCALL  R2 3 0       ; R2,... := R2(R3,R4)
  5 [-]: RETURN    R2 0         ; return R2,...
  6 [-]: RETURN    R0 1         ; return 


; Function #393:
;
; Name:            
; Defined at line: 8563
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CALL      R2 1 2       ; R2 := R2()
  3 [-]: CLOSURE   R3 0         ; R3 := closure(Function #393.1)
  4 [-]: MOVE      R0 R2        ; R0 := R2
  5 [-]: GETUPVAL  R0 U1        ; R0 := U1
  6 [-]: MOVE      R0 R0        ; R0 := R0
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: SETTABLE  R2 K0 R3     ; R2["UtilOnAddFriend"] := R3
  9 [-]: CLOSURE   R3 1         ; R3 := closure(Function #393.2)
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: SETTABLE  R2 K1 R3     ; R2["UtilAddFriendMessage"] := R3
 12 [-]: CLOSURE   R3 2         ; R3 := closure(Function #393.3)
 13 [-]: MOVE      R0 R0        ; R0 := R0
 14 [-]: SETTABLE  R2 K2 R3     ; R2["UtilAddFriendMessageOSK"] := R3
 15 [-]: GETTABLE  R3 R2 K3     ; R3 := R2["mMovie"]
 16 [-]: RETURN    R3 2         ; return R3
 17 [-]: RETURN    R0 1         ; return 


; Function #393.1:
;
; Name:            
; Defined at line: 8566
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: TEST      R0 1         ; if R0 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETUPVAL  R3 U0        ; R3 := U0
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mMovie"]
  5 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x42b04007]
  6 [-]: GETUPVAL  R5 U1        ; R5 := U1
  7 [-]: GETTABLE  R5 R5 K2     ; R82 := R5[0xfbcc0d03]
  8 [-]: MOVE      R6 R1        ; R6 := R1
  9 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 10 [-]: LOADBOOL  R6 1 0       ; R6 := true
 11 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 12 [-]: MOVE      R2 R3        ; R2 := R3
 13 [-]: JMP       24           ; PC := 24
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mMovie"]
 16 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x42b04007]
 17 [-]: LOADK     R5 K3        ; R5 := "/Lotus/Language/Menu/SocialOverlay_FriendAddConfirm"
 18 [-]: LOADBOOL  R6 1 0       ; R6 := true
 19 [-]: NEWTABLE  R7 0 1       ; R7 := {}
 20 [-]: GETUPVAL  R8 U2        ; R8 := U2
 21 [-]: SETTABLE  R7 K4 R8     ; R7["NAME"] := R8
 22 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 23 [-]: MOVE      R2 R3        ; R2 := R3
 24 [-]: GETUPVAL  R3 U0        ; R3 := U0
 25 [-]: GETUPVAL  R4 U3        ; R4 := U3
 26 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 27 [-]: TEST      R3 0         ; if not R3 then PC := 49
 28 [-]: JMP       49           ; PC := 49
 29 [-]: GETUPVAL  R3 U0        ; R3 := U0
 30 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mMovie"]
 31 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0xf56f3887]
 32 [-]: GETUPVAL  R5 U3        ; R5 := U3
 33 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 34 [-]: TEST      R0 0         ; if not R0 then PC := 39
 35 [-]: JMP       39           ; PC := 39
 36 [-]: LOADK     R7 K6        ; R7 := "true"
 37 [-]: TEST      R7 1         ; if R7 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: LOADK     R7 K7        ; R7 := "false"
 40 [-]: MOVE      R8 R2        ; R8 := R2
 41 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 42 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 43 [-]: TEST      R3 1         ; if R3 then PC := 49
 44 [-]: JMP       49           ; PC := 49
 45 [-]: GETUPVAL  R3 U1        ; R3 := U1
 46 [-]: GETTABLE  R3 R3 K8     ; R82 := R3[0xe0cba3ca]
 47 [-]: MOVE      R4 R2        ; R4 := R2
 48 [-]: CALL      R3 2 1       ; R3(R4)
 49 [-]: RETURN    R0 1         ; return 


; Function #393.2:
;
; Name:            
; Defined at line: 8581
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R2        ; R4 := R2
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETGLOBAL R3 K1        ; R3 := 0x03f57322
  7 [-]: MOVE      R4 R2        ; R4 := R2
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: EQ        0 R3 K3      ; if R3 ~= 4.000000 then PC := 17
 10 [-]: JMP       17           ; PC := 17
 11 [-]: GETGLOBAL R3 K4        ; R3 := 0x25d99d89
 12 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x31543b05]
 13 [-]: GETUPVAL  R5 U0        ; R5 := U0
 14 [-]: MOVE      R6 R0        ; R6 := R0
 15 [-]: LOADK     R7 K6        ; R7 := "UtilOnAddFriend"
 16 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 17 [-]: RETURN    R0 1         ; return 


; Function #393.3:
;
; Name:            
; Defined at line: 8587
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 1         ; if R0 then PC := 9
  2 [-]: JMP       9            ; PC := 9
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x25d99d89
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x31543b05]
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: LOADK     R6 K2        ; R6 := "UtilOnAddFriend"
  8 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  9 [-]: RETURN    R0 1         ; return 


; Function #394:
;
; Name:            
; Defined at line: 8595
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETGLOBAL R4 K1        ; R4 := 0x25d99d89
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 0         ; if not R3 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: TESTSET   R5 R1 1      ; if R1 then PC := 12 else R5 := R1
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADK     R5 K2        ; R5 := "OnAddFriend"
 12 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 13 [-]: GETUPVAL  R4 U1        ; R4 := U1
 14 [-]: MOVE      R5 R3        ; R5 := R3
 15 [-]: MOVE      R6 R1        ; R6 := R1
 16 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 17 [-]: TEST      R4 0         ; if not R4 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R4 K3        ; R4 := 0x34291f5c
 21 [-]: GETTABLE  R4 R4 K4     ; R82 := R4[0x9ad21ae9]
 22 [-]: CALL      R4 1 2       ; R4 := R4()
 23 [-]: TEST      R4 0         ; if not R4 then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3[0xf56f3887]
 26 [-]: LOADK     R6 K6        ; R6 := "UtilAddFriendMessage"
 27 [-]: NEWTABLE  R7 3 0       ; R7 := {}
 28 [-]: LOADK     R8 K7        ; R8 := ""
 29 [-]: LOADK     R9 K7        ; R9 := ""
 30 [-]: LOADK     R10 4        ; R10 := 4.000000
 31 [-]: SETLIST   R7 3 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
 32 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 33 [-]: JMP       56           ; PC := 56
 34 [-]: LEN       R4 R2        ; R4 := # R2
 35 [-]: LT        0 K8 R4      ; if 0.000000 >= R4 then PC := 46
 36 [-]: JMP       46           ; PC := 46
 37 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3[0xf56f3887]
 38 [-]: LOADK     R6 K6        ; R6 := "UtilAddFriendMessage"
 39 [-]: NEWTABLE  R7 3 0       ; R7 := {}
 40 [-]: MOVE      R8 R2        ; R8 := R2
 41 [-]: LOADK     R9 K7        ; R9 := ""
 42 [-]: LOADK     R10 4        ; R10 := 4.000000
 43 [-]: SETLIST   R7 3 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
 44 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 45 [-]: JMP       56           ; PC := 56
 46 [-]: GETUPVAL  R4 U2        ; R4 := U2
 47 [-]: MOVE      R5 R3        ; R5 := R3
 48 [-]: LOADK     R6 K9        ; R6 := "/Lotus/Language/Menu/Message"
 49 [-]: LOADK     R7 K7        ; R7 := ""
 50 [-]: LOADK     R8 200       ; R8 := 200.000000
 51 [-]: LOADK     R9 K6        ; R9 := "UtilAddFriendMessage"
 52 [-]: LOADK     R10 K10      ; R10 := "UtilAddFriendMessageOSK"
 53 [-]: NEWTABLE  R11 0 1      ; R11 := {}
 54 [-]: SETTABLE  R11 K11 K12  ; R11["isMultiline"] := true
 55 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
 56 [-]: RETURN    R0 1         ; return 


; Function #395:
;
; Name:            
; Defined at line: 8616
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R0 0 15      ; R0 := {}
  2 [-]: NEWTABLE  R1 0 3       ; R1 := {}
  3 [-]: SETTABLE  R1 K1 K2     ; R1["Scale"] := 2000.000000
  4 [-]: SETTABLE  R1 K3 K4     ; R1["X"] := 40.000000
  5 [-]: SETTABLE  R1 K5 K6     ; R1["Y"] := -40.000000
  6 [-]: SETTABLE  R0 K0 R1     ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilRebels.png"] := R1
  7 [-]: NEWTABLE  R1 0 3       ; R1 := {}
  8 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500.000000
  9 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 10 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0.000000
 11 [-]: SETTABLE  R0 K7 R1     ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilJudge.png"] := R1
 12 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 13 [-]: SETTABLE  R1 K1 K11    ; R1["Scale"] := 1000.000000
 14 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 15 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0.000000
 16 [-]: SETTABLE  R1 K12 K13   ; R1["Alpha"] := 8.000000
 17 [-]: SETTABLE  R0 K10 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilOracle.png"] := R1
 18 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 19 [-]: SETTABLE  R1 K1 K15    ; R1["Scale"] := 2400.000000
 20 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 21 [-]: SETTABLE  R1 K5 K16    ; R1["Y"] := 20.000000
 22 [-]: SETTABLE  R0 K14 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilBusiness.png"] := R1
 23 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 24 [-]: SETTABLE  R1 K1 K18    ; R1["Scale"] := 1300.000000
 25 [-]: SETTABLE  R1 K3 K19    ; R1["X"] := -50.000000
 26 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0.000000
 27 [-]: SETTABLE  R0 K17 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilAssassins.png"] := R1
 28 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 29 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500.000000
 30 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 31 [-]: SETTABLE  R1 K5 K21    ; R1["Y"] := 60.000000
 32 [-]: SETTABLE  R0 K20 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilChurch.png"] := R1
 33 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 34 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500.000000
 35 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 36 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0.000000
 37 [-]: SETTABLE  R0 K22 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilEidolonCetusElder.png"] := R1
 38 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 39 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500.000000
 40 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 41 [-]: SETTABLE  R1 K5 K4     ; R1["Y"] := 40.000000
 42 [-]: SETTABLE  R1 K12 K24   ; R1["Alpha"] := 15.000000
 43 [-]: SETTABLE  R0 K23 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilEidolonHunter.png"] := R1
 44 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 45 [-]: SETTABLE  R1 K1 K11    ; R1["Scale"] := 1000.000000
 46 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 47 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0.000000
 48 [-]: SETTABLE  R1 K12 K13   ; R1["Alpha"] := 8.000000
 49 [-]: SETTABLE  R0 K25 R1    ; R0["/Lotus/Interface/Graphics/Fortuna/FortunaTitleIcon.png"] := R1
 50 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 51 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500.000000
 52 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 53 [-]: SETTABLE  R1 K5 K4     ; R1["Y"] := 40.000000
 54 [-]: SETTABLE  R1 K12 K13   ; R1["Alpha"] := 8.000000
 55 [-]: SETTABLE  R0 K26 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionVentKidz.png"] := R1
 56 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 57 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500.000000
 58 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 59 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0.000000
 60 [-]: SETTABLE  R1 K12 K24   ; R1["Alpha"] := 15.000000
 61 [-]: SETTABLE  R0 K27 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilSolarisUnited.png"] := R1
 62 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 63 [-]: SETTABLE  R1 K1 K18    ; R1["Scale"] := 1300.000000
 64 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 65 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0.000000
 66 [-]: SETTABLE  R1 K12 K29   ; R1["Alpha"] := 7.000000
 67 [-]: SETTABLE  R0 K28 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilConclave.png"] := R1
 68 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 69 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500.000000
 70 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 71 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0.000000
 72 [-]: SETTABLE  R0 K30 R1    ; R0["/Lotus/Interface/Icons/Categories/IconLibrarian256.png"] := R1
 73 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 74 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500.000000
 75 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 76 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0.000000
 77 [-]: SETTABLE  R0 K31 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilEntrati.png"] := R1
 78 [-]: NEWTABLE  R1 0 3       ; R1 := {}
 79 [-]: SETTABLE  R1 K1 K8     ; R1["Scale"] := 1500.000000
 80 [-]: SETTABLE  R1 K3 K9     ; R1["X"] := 0.000000
 81 [-]: SETTABLE  R1 K5 K9     ; R1["Y"] := 0.000000
 82 [-]: SETTABLE  R0 K32 R1    ; R0["/Lotus/Interface/Icons/Syndicates/FactionSigilNecraloid.png"] := R1
 83 [-]: RETURN    R0 2         ; return R0
 84 [-]: RETURN    R0 1         ; return 


; Function #396:
;
; Name:            
; Defined at line: 8637
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x9ba7909f
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xbcfb64ab]
  3 [-]: GETGLOBAL R3 K2        ; R3 := 0x0032441c
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["UIMovie_TransmissionMovie"]
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1[0xe4162eed]
 12 [-]: LOADK     R4 K6        ; R4 := "PreviewClose"
 13 [-]: LOADK     R5 K7        ; R5 := "true"
 14 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 15 [-]: TEST      R0 0         ; if not R0 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETGLOBAL R2 K8        ; R2 := _T
 18 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 19 [-]: SETTABLE  R2 K9 R3     ; R2["QueuedTransmissions"] := R3
 20 [-]: RETURN    R0 1         ; return 


; Function #397:
;
; Name:            
; Defined at line: 8648
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: EQ        1 R0 K1      ; if R0 == "error" then PC := 64
  3 [-]: JMP       64           ; PC := 64
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0x34291f5c
  5 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0xa7a2e381]
  6 [-]: CALL      R2 1 2       ; R2 := R2()
  7 [-]: TEST      R2 0         ; if not R2 then PC := 39
  8 [-]: JMP       39           ; PC := 39
  9 [-]: LOADK     R2 K0        ; R2 := ""
 10 [-]: EQ        0 R0 K4      ; if R0 ~= "firewall" then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: LOADK     R2 K5        ; R2 := "https://kf.qq.com/faq/201107VJry2m201107A3YJvA.html"
 13 [-]: JMP       33           ; PC := 33
 14 [-]: EQ        0 R0 K6      ; if R0 ~= "dnsfailure" then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADK     R2 K7        ; R2 := "https://kf.qq.com/faq/201107Vb2uiA201107JNBZbq.html"
 17 [-]: JMP       33           ; PC := 33
 18 [-]: EQ        0 R0 K8      ; if R0 ~= "strictNAT" then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: LOADK     R2 K9        ; R2 := "https://kf.qq.com/faq/201107zmeaQz201107MZv22I.html"
 21 [-]: JMP       33           ; PC := 33
 22 [-]: EQ        0 R0 K10     ; if R0 ~= "upnpnotdetected" then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LOADK     R2 K11       ; R2 := "https://kf.qq.com/faq/201107N77bYJ201107VvUzqQ.html"
 25 [-]: JMP       33           ; PC := 33
 26 [-]: EQ        0 R0 K12     ; if R0 ~= "upnpenabled" then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: LOADK     R2 K13       ; R2 := "https://kf.qq.com/faq/201107b22QBR201107mYR32Q.html"
 29 [-]: JMP       33           ; PC := 33
 30 [-]: EQ        0 R0 K14     ; if R0 ~= "portinuse" then PC := 33
 31 [-]: JMP       33           ; PC := 33
 32 [-]: LOADK     R2 K15       ; R2 := "https://wf.qq.com/newsDetail.shtml?tid=13969838"
 33 [-]: EQ        0 R2 K0      ; if R2 ~= "" then PC := 64
 34 [-]: JMP       64           ; PC := 64
 35 [-]: LOADK     R3 K16       ; R3 := "https://warframe.com/zh-hans/"
 36 [-]: MOVE      R4 R0        ; R4 := R0
 37 [-]: CONCAT    R2 R3 R4     ; R2 := R3 .. R4
 38 [-]: JMP       64           ; PC := 64
 39 [-]: GETGLOBAL R3 K17       ; R3 := 0x64fb1586
 40 [-]: GETGLOBAL R4 K18       ; R4 := 0x67513231
 41 [-]: CALL      R4 1 0       ; R4,... := R4()
 42 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
 43 [-]: SELF      R4 R3 K19    ; R5 := R3; R4 := R3[0x1a94c9cc]
 44 [-]: LOADK     R6 2         ; R6 := 2.000000
 45 [-]: LEN       R7 R3        ; R7 := # R3
 46 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 47 [-]: MOVE      R3 R4        ; R3 := R4
 48 [-]: EQ        0 R3 K20     ; if R3 ~= "pt" then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: LOADK     R3 K21       ; R3 := "pt-br"
 51 [-]: JMP       59           ; PC := 59
 52 [-]: EQ        0 R3 K22     ; if R3 ~= "zh" then PC := 56
 53 [-]: JMP       56           ; PC := 56
 54 [-]: LOADK     R3 K23       ; R3 := "zh-hans"
 55 [-]: JMP       59           ; PC := 59
 56 [-]: EQ        0 R3 K24     ; if R3 ~= "tc" then PC := 59
 57 [-]: JMP       59           ; PC := 59
 58 [-]: LOADK     R3 K25       ; R3 := "zh-hant"
 59 [-]: LOADK     R4 K26       ; R4 := "https://warframe.com/"
 60 [-]: MOVE      R5 R3        ; R5 := R3
 61 [-]: LOADK     R6 K27       ; R6 := "/"
 62 [-]: MOVE      R7 R0        ; R7 := R0
 63 [-]: CONCAT    R1 R4 R7     ; R1 := R4 .. R5 .. R6 .. R7
 64 [-]: RETURN    R1 2         ; return R1
 65 [-]: RETURN    R0 1         ; return 


; Function #398:
;
; Name:            
; Defined at line: 8689
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0[0x10ba8e3e]
  2 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  3 [-]: TEST      R4 0         ; if not R4 then PC := 8
  4 [-]: JMP       8            ; PC := 8
  5 [-]: LOADBOOL  R4 1 0       ; R4 := true
  6 [-]: RETURN    R4 2         ; return R4
  7 [-]: JMP       32           ; PC := 32
  8 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0[0x59e42e1b]
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4[0xc348fceb]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: GETGLOBAL R5 K3        ; R5 := 0x7b998233
 13 [-]: MOVE      R6 R4        ; R6 := R4
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: NOT       R5 R5        ; R5 := not R5
 16 [-]: TEST      R5 0         ; if not R5 then PC := 31
 17 [-]: JMP       31           ; PC := 31
 18 [-]: TEST      R1 0         ; if not R1 then PC := 31
 19 [-]: JMP       31           ; PC := 31
 20 [-]: TEST      R2 0         ; if not R2 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: SELF      R6 R4 K4     ; R7 := R4; R6 := R4[0xf4e253b6]
 23 [-]: CALL      R6 2 1       ; R6(R7)
 24 [-]: JMP       31           ; PC := 31
 25 [-]: EQ        0 R3 K5      ; if R3 ~= nil then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: LOADBOOL  R3 0 0       ; R3 := false
 28 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0[0x32424799]
 29 [-]: MOVE      R8 R3        ; R8 := R3
 30 [-]: CALL      R6 3 1       ; R6(R7,R8)
 31 [-]: RETURN    R5 2         ; return R5
 32 [-]: RETURN    R0 1         ; return 


; Function #399:
;
; Name:            
; Defined at line: 8709
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: SELF      R1 R0 K1     ; R2 := R0; R1 := R0[0xf2deaf69]
  7 [-]: GETUPVAL  R3 U0        ; R3 := U0
  8 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: LOADBOOL  R1 1 0       ; R1 := true
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: LOADBOOL  R1 0 0       ; R1 := false
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #400:
;
; Name:            
; Defined at line: 8717
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xd7d79b74]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x89326c93
  5 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x78298275]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: CALL      R2 1 4       ; R2,R3,R4 := R2()
  9 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 10 [-]: MOVE      R6 R0        ; R6 := R0
 11 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 12 [-]: TEST      R5 1         ; if R5 then PC := 22
 13 [-]: JMP       22           ; PC := 22
 14 [-]: GETGLOBAL R5 K4        ; R5 := 0x7b998233
 15 [-]: SELF      R6 R0 K5     ; R7 := R0; R6 := R0[0x973c5b4d]
 16 [-]: SELF      R8 R1 K6     ; R9 := R1; R8 := R1[0xe79e7ef4]
 17 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 18 [-]: CALL      R6 0 0       ; R6,... := R6(R7,...)
 19 [-]: CALL      R5 0 2       ; R5 := R5(R6,...)
 20 [-]: NOT       R5 R5        ; R5 := not R5
 21 [-]: JMP       24           ; PC := 24
 22 [-]: LOADBOOL  R5 0 1       ; R5 := false; PC := 23
 23 [-]: LOADBOOL  R5 1 0       ; R5 := true
 24 [-]: TEST      R5 1         ; if R5 then PC := 31
 25 [-]: JMP       31           ; PC := 31
 26 [-]: GETGLOBAL R6 K0        ; R6 := 0xbe190284
 27 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6[0x99f38c13]
 28 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 29 [-]: TEST      R6 0         ; if not R6 then PC := 33
 30 [-]: JMP       33           ; PC := 33
 31 [-]: LOADBOOL  R6 0 0       ; R6 := false
 32 [-]: RETURN    R6 2         ; return R6
 33 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 34 [-]: GETGLOBAL R7 K8        ; R7 := 0x25d99d89
 35 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 36 [-]: TEST      R6 1         ; if R6 then PC := 66
 37 [-]: JMP       66           ; PC := 66
 38 [-]: LOADBOOL  R6 0 0       ; R6 := false
 39 [-]: GETGLOBAL R7 K8        ; R7 := 0x25d99d89
 40 [-]: SELF      R7 R7 K9     ; R8 := R7; R7 := R7[0x911c6241]
 41 [-]: LOADBOOL  R9 1 0       ; R9 := true
 42 [-]: MOVE      R10 R4       ; R10 := R4
 43 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 44 [-]: LOADK     R8 1         ; R8 := 1.000000
 45 [-]: LEN       R9 R7        ; R9 := # R7
 46 [-]: LOADK     R10 1        ; R10 := 1.000000
 47 [-]: FORPREP   R8 61        ; R8 -= R10; PC := 61
 48 [-]: GETTABLE  R12 R7 R11   ; R12 := R7[R11]
 49 [-]: GETTABLE  R13 R12 K10  ; R13 := R12["mName"]
 50 [-]: EQ        0 R13 R2     ; if R13 ~= R2 then PC := 61
 51 [-]: JMP       61           ; PC := 61
 52 [-]: GETTABLE  R13 R7 R11   ; R13 := R7[R11]
 53 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["mPlacedDecos"]
 54 [-]: LEN       R13 R13      ; R13 := # R13
 55 [-]: EQ        0 R13 K12    ; if R13 ~= 0.000000 then PC := 59
 56 [-]: JMP       59           ; PC := 59
 57 [-]: LOADBOOL  R13 0 0      ; R13 := false
 58 [-]: RETURN    R13 2        ; return R13
 59 [-]: LOADBOOL  R6 1 0       ; R6 := true
 60 [-]: JMP       62           ; PC := 62
 61 [-]: FORLOOP   R8 48        ; R8 += R10; if R8 <= R9 then begin PC := 48; R11 := R8 end
 62 [-]: TEST      R6 1         ; if R6 then PC := 66
 63 [-]: JMP       66           ; PC := 66
 64 [-]: LOADBOOL  R13 0 0      ; R13 := false
 65 [-]: RETURN    R13 2        ; return R13
 66 [-]: GETGLOBAL R13 K0       ; R13 := 0xbe190284
 67 [-]: SELF      R13 R13 K13  ; R14 := R13; R13 := R13[0xf2deaf69]
 68 [-]: GETGLOBAL R15 K14      ; R15 := gLotusConclaveGameRulesType
 69 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 70 [-]: NOT       R13 R13      ; R13 := not R13
 71 [-]: RETURN    R13 2        ; return R13
 72 [-]: RETURN    R0 1         ; return 


; Function #401:
;
; Name:            
; Defined at line: 8749
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xbe190284
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADK     R1 K2        ; R1 := ""
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: TESTSET   R1 R0 1      ; if R0 then PC := 13 else R1 := R0
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETGLOBAL R1 K1        ; R1 := 0xbe190284
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xef893aec]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETTABLE  R2 R1 K4     ; R2 := R1["location"]
 14 [-]: GETGLOBAL R3 K5        ; R3 := 0x64fb1586
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: MOVE      R4 R3        ; R4 := R3
 18 [-]: GETUPVAL  R5 U0        ; R5 := U0
 19 [-]: CALL      R5 1 2       ; R5 := R5()
 20 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 21 [-]: MOVE      R7 R5        ; R7 := R5
 22 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 23 [-]: TEST      R6 1         ; if R6 then PC := 34
 24 [-]: JMP       34           ; PC := 34
 25 [-]: GETGLOBAL R6 K6        ; R6 := 0x603636ad
 26 [-]: SELF      R7 R5 K7     ; R8 := R5; R7 := R5[0xbf3618ac]
 27 [-]: MOVE      R9 R2        ; R9 := R2
 28 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 29 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x6d604ba7]
 30 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 31 [-]: LOADBOOL  R8 0 0       ; R8 := false
 32 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 33 [-]: MOVE      R4 R6        ; R4 := R6
 34 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 35 [-]: GETGLOBAL R7 K9        ; R7 := 0x25d99d89
 36 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 37 [-]: TEST      R6 1         ; if R6 then PC := 144
 38 [-]: JMP       144          ; PC := 144
 39 [-]: GETGLOBAL R6 K9        ; R6 := 0x25d99d89
 40 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6[0x69727e0b]
 41 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 42 [-]: LOADK     R7 1         ; R7 := 1.000000
 43 [-]: GETTABLE  R8 R6 K11    ; R8 := R6["mGoals"]
 44 [-]: LEN       R8 R8        ; R8 := # R8
 45 [-]: LOADK     R9 1         ; R9 := 1.000000
 46 [-]: FORPREP   R7 114       ; R7 -= R9; PC := 114
 47 [-]: GETTABLE  R11 R6 K11   ; R11 := R6["mGoals"]
 48 [-]: GETTABLE  R11 R11 R10  ; R11 := R11[R10]
 49 [-]: GETTABLE  R12 R11 K12  ; R12 := R11["mId"]
 50 [-]: GETTABLE  R12 R12 K12  ; R12 := R12["mId"]
 51 [-]: GETTABLE  R13 R1 K13   ; R13 := R1["goalId"]
 52 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 114
 53 [-]: JMP       114          ; PC := 114
 54 [-]: GETTABLE  R12 R11 K14  ; R12 := R11["mNode"]
 55 [-]: EQ        1 R12 K2     ; if R12 == "" then PC := 67
 56 [-]: JMP       67           ; PC := 67
 57 [-]: GETTABLE  R12 R11 K14  ; R12 := R11["mNode"]
 58 [-]: EQ        0 R12 R3     ; if R12 ~= R3 then PC := 67
 59 [-]: JMP       67           ; PC := 67
 60 [-]: GETGLOBAL R12 K6       ; R12 := 0x603636ad
 61 [-]: GETTABLE  R13 R11 K15  ; R13 := R11["mDesc"]
 62 [-]: LOADBOOL  R14 0 0      ; R14 := false
 63 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 64 [-]: MOVE      R4 R12       ; R4 := R12
 65 [-]: JMP       115          ; PC := 115
 66 [-]: JMP       114          ; PC := 114
 67 [-]: LOADBOOL  R12 0 0      ; R12 := false
 68 [-]: LOADK     R13 1        ; R13 := 1.000000
 69 [-]: GETTABLE  R14 R11 K16  ; R14 := R11["mConcurrentNodes"]
 70 [-]: LEN       R14 R14      ; R14 := # R14
 71 [-]: LOADK     R15 1        ; R15 := 1.000000
 72 [-]: FORPREP   R13 110      ; R13 -= R15; PC := 110
 73 [-]: GETTABLE  R17 R11 K16  ; R17 := R11["mConcurrentNodes"]
 74 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
 75 [-]: EQ        1 R17 K2     ; if R17 == "" then PC := 110
 76 [-]: JMP       110          ; PC := 110
 77 [-]: GETTABLE  R17 R11 K16  ; R17 := R11["mConcurrentNodes"]
 78 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
 79 [-]: EQ        0 R17 R3     ; if R17 ~= R3 then PC := 110
 80 [-]: JMP       110          ; PC := 110
 81 [-]: GETGLOBAL R17 K6       ; R17 := 0x603636ad
 82 [-]: GETTABLE  R18 R11 K15  ; R18 := R11["mDesc"]
 83 [-]: LOADBOOL  R19 0 0      ; R19 := false
 84 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 85 [-]: MOVE      R4 R17       ; R4 := R17
 86 [-]: GETTABLE  R17 R11 K17  ; R17 := R11["mConcurrentNodeReqs"]
 87 [-]: LEN       R17 R17      ; R17 := # R17
 88 [-]: LE        0 R16 R17    ; if R16 > R17 then PC := 108
 89 [-]: JMP       108          ; PC := 108
 90 [-]: GETTABLE  R17 R11 K17  ; R17 := R11["mConcurrentNodeReqs"]
 91 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
 92 [-]: GETTABLE  R18 R11 K18  ; R18 := R11["mGoal"]
 93 [-]: LE        0 R18 R17    ; if R18 > R17 then PC := 108
 94 [-]: JMP       108          ; PC := 108
 95 [-]: GETTABLE  R17 R11 K19  ; R17 := R11["mTag"]
 96 [-]: GETGLOBAL R18 K20      ; R18 := 0x0469f296
 97 [-]: LOADK     R19 K21      ; R19 := "WaterFight"
 98 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 99 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 108
100 [-]: JMP       108          ; PC := 108
101 [-]: MOVE      R17 R4       ; R17 := R4
102 [-]: LOADK     R18 K22      ; R18 := " "
103 [-]: GETGLOBAL R19 K6       ; R19 := 0x603636ad
104 [-]: LOADK     R20 K23      ; R20 := "/Lotus/Language/Menu/WorldStateChallengeMode"
105 [-]: LOADBOOL  R21 0 0      ; R21 := false
106 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
107 [-]: CONCAT    R4 R17 R19   ; R4 := R17 .. R18 .. R19
108 [-]: LOADBOOL  R12 1 0      ; R12 := true
109 [-]: JMP       111          ; PC := 111
110 [-]: FORLOOP   R13 73       ; R13 += R15; if R13 <= R14 then begin PC := 73; R16 := R13 end
111 [-]: TEST      R12 0        ; if not R12 then PC := 114
112 [-]: JMP       114          ; PC := 114
113 [-]: JMP       115          ; PC := 115
114 [-]: FORLOOP   R7 47        ; R7 += R9; if R7 <= R8 then begin PC := 47; R10 := R7 end
115 [-]: GETTABLE  R17 R1 K24   ; R17 := R1["alertId"]
116 [-]: EQ        1 R17 K2     ; if R17 == "" then PC := 144
117 [-]: JMP       144          ; PC := 144
118 [-]: LOADK     R17 1        ; R17 := 1.000000
119 [-]: GETTABLE  R18 R6 K25   ; R18 := R6["mAlerts"]
120 [-]: LEN       R18 R18      ; R18 := # R18
121 [-]: LOADK     R19 1        ; R19 := 1.000000
122 [-]: FORPREP   R17 143      ; R17 -= R19; PC := 143
123 [-]: GETTABLE  R21 R6 K25   ; R21 := R6["mAlerts"]
124 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
125 [-]: GETTABLE  R22 R21 K12  ; R22 := R21["mId"]
126 [-]: GETTABLE  R22 R22 K12  ; R22 := R22["mId"]
127 [-]: GETTABLE  R23 R1 K24   ; R23 := R1["alertId"]
128 [-]: EQ        0 R22 R23    ; if R22 ~= R23 then PC := 144
129 [-]: JMP       144          ; PC := 144
130 [-]: GETTABLE  R22 R21 K19  ; R22 := R21["mTag"]
131 [-]: GETGLOBAL R23 K26      ; R23 := EMPTY_SYMBOL
132 [-]: EQ        1 R22 R23    ; if R22 == R23 then PC := 144
133 [-]: JMP       144          ; PC := 144
134 [-]: GETGLOBAL R22 K6       ; R22 := 0x603636ad
135 [-]: GETGLOBAL R23 K5       ; R23 := 0x64fb1586
136 [-]: GETTABLE  R24 R21 K27  ; R24 := R21["mMissionInfo"]
137 [-]: GETTABLE  R24 R24 K28  ; R24 := R24["descText"]
138 [-]: CALL      R23 2 2      ; R23 := R23(R24)
139 [-]: LOADBOOL  R24 0 0      ; R24 := false
140 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
141 [-]: MOVE      R4 R22       ; R4 := R22
142 [-]: JMP       144          ; PC := 144
143 [-]: FORLOOP   R17 123      ; R17 += R19; if R17 <= R18 then begin PC := 123; R20 := R17 end
144 [-]: GETGLOBAL R22 K0       ; R22 := 0x7b998233
145 [-]: GETTABLE  R23 R1 K29   ; R23 := R1["keyChainName"]
146 [-]: CALL      R22 2 2      ; R22 := R22(R23)
147 [-]: TEST      R22 0        ; if not R22 then PC := 151
148 [-]: JMP       151          ; PC := 151
149 [-]: EQ        0 R4 K2      ; if R4 ~= "" then PC := 167
150 [-]: JMP       167          ; PC := 167
151 [-]: GETGLOBAL R22 K30      ; R22 := 0xb009bbc6
152 [-]: GETTABLE  R23 R1 K31   ; R23 := R1["levelKeyName"]
153 [-]: CALL      R22 2 2      ; R22 := R22(R23)
154 [-]: GETGLOBAL R23 K0       ; R23 := 0x7b998233
155 [-]: MOVE      R24 R22      ; R24 := R22
156 [-]: CALL      R23 2 2      ; R23 := R23(R24)
157 [-]: TEST      R23 1        ; if R23 then PC := 167
158 [-]: JMP       167          ; PC := 167
159 [-]: SELF      R23 R22 K32  ; R24 := R22; R23 := R22[0xd3a9d01f]
160 [-]: CALL      R23 2 2      ; R23 := R23(R24)
161 [-]: GETGLOBAL R24 K6       ; R24 := 0x603636ad
162 [-]: SELF      R25 R23 K8   ; R26 := R23; R25 := R23[0x6d604ba7]
163 [-]: CALL      R25 2 2      ; R25 := R25(R26)
164 [-]: LOADBOOL  R26 0 0      ; R26 := false
165 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
166 [-]: MOVE      R4 R24       ; R4 := R24
167 [-]: EQ        0 R4 K2      ; if R4 ~= "" then PC := 202
168 [-]: JMP       202          ; PC := 202
169 [-]: GETGLOBAL R24 K0       ; R24 := 0x7b998233
170 [-]: GETTABLE  R25 R1 K33   ; R25 := R1["levelOverride"]
171 [-]: CALL      R24 2 2      ; R24 := R24(R25)
172 [-]: TEST      R24 1        ; if R24 then PC := 202
173 [-]: JMP       202          ; PC := 202
174 [-]: GETTABLE  R24 R1 K33   ; R24 := R1["levelOverride"]
175 [-]: SELF      R24 R24 K34  ; R25 := R24; R24 := R24[0xed4e0128]
176 [-]: CALL      R24 2 2      ; R24 := R24(R25)
177 [-]: GETGLOBAL R25 K35      ; R25 := 0x7f5022cf
178 [-]: GETTABLE  R25 R25 K36  ; R82 := R25[0xa5c556b9]
179 [-]: MOVE      R26 R24      ; R26 := R24
180 [-]: LOADK     R27 K37      ; R27 := "Derelict"
181 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
182 [-]: TEST      R25 0        ; if not R25 then PC := 190
183 [-]: JMP       190          ; PC := 190
184 [-]: GETGLOBAL R25 K6       ; R25 := 0x603636ad
185 [-]: LOADK     R26 K38      ; R26 := "/Lotus/Language/Locations/Derelict"
186 [-]: LOADBOOL  R27 0 0      ; R27 := false
187 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
188 [-]: MOVE      R4 R25       ; R4 := R25
189 [-]: JMP       202          ; PC := 202
190 [-]: GETGLOBAL R25 K35      ; R25 := 0x7f5022cf
191 [-]: GETTABLE  R25 R25 K36  ; R82 := R25[0xa5c556b9]
192 [-]: MOVE      R26 R24      ; R26 := R24
193 [-]: LOADK     R27 K39      ; R27 := "OrokinTower"
194 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
195 [-]: TEST      R25 0        ; if not R25 then PC := 202
196 [-]: JMP       202          ; PC := 202
197 [-]: GETGLOBAL R25 K6       ; R25 := 0x603636ad
198 [-]: LOADK     R26 K40      ; R26 := "/Lotus/Language/Locations/Void"
199 [-]: LOADBOOL  R27 0 0      ; R27 := false
200 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
201 [-]: MOVE      R4 R25       ; R4 := R25
202 [-]: GETGLOBAL R25 K1       ; R25 := 0xbe190284
203 [-]: SELF      R25 R25 K41  ; R26 := R25; R25 := R25[0xf2deaf69]
204 [-]: GETGLOBAL R27 K42      ; R27 := gLotusBaseGameRulesType
205 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
206 [-]: TEST      R25 0        ; if not R25 then PC := 219
207 [-]: JMP       219          ; PC := 219
208 [-]: GETGLOBAL R25 K1       ; R25 := 0xbe190284
209 [-]: SELF      R25 R25 K43  ; R26 := R25; R25 := R25[0x71595d3a]
210 [-]: CALL      R25 2 2      ; R25 := R25(R26)
211 [-]: TEST      R25 0        ; if not R25 then PC := 219
212 [-]: JMP       219          ; PC := 219
213 [-]: GETGLOBAL R25 K6       ; R25 := 0x603636ad
214 [-]: LOADK     R26 K44      ; R26 := "/Lotus/Language/Game/MissionName_Badlands"
215 [-]: NEWTABLE  R27 0 1      ; R27 := {}
216 [-]: SETTABLE  R27 K45 R4   ; R27["MISSION_NAME"] := R4
217 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
218 [-]: MOVE      R4 R25       ; R4 := R25
219 [-]: RETURN    R4 2         ; return R4
220 [-]: RETURN    R0 1         ; return 


; Function #402:
;
; Name:            
; Defined at line: 8827
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x0469f296
  2 [-]: LOADK     R1 K1        ; R1 := "TeshinHardModeUnlocked"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: LOADBOOL  R1 0 0       ; R1 := false
  5 [-]: TEST      R1 0         ; if not R1 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: LOADBOOL  R1 0 0       ; R1 := false
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: LOADBOOL  R1 1 0       ; R1 := true
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 13 [-]: GETGLOBAL R2 K3        ; R2 := 0x25d99d89
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 1         ; if R1 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETGLOBAL R1 K3        ; R1 := 0x25d99d89
 18 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x21a1810f]
 19 [-]: MOVE      R3 R0        ; R3 := R0
 20 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 21 [-]: RETURN    R1 2         ; return R1
 22 [-]: JMP       48           ; PC := 48
 23 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 24 [-]: GETGLOBAL R2 K5        ; R2 := 0x76ea806b
 25 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 26 [-]: TEST      R1 1         ; if R1 then PC := 48
 27 [-]: JMP       48           ; PC := 48
 28 [-]: GETGLOBAL R1 K5        ; R1 := 0x76ea806b
 29 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x3f3ae64c]
 30 [-]: LOADK     R3 0         ; R3 := 0.000000
 31 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 32 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 33 [-]: MOVE      R3 R1        ; R3 := R1
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: TEST      R2 1         ; if R2 then PC := 48
 36 [-]: JMP       48           ; PC := 48
 37 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1[0x80563238]
 38 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 39 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 40 [-]: MOVE      R4 R2        ; R4 := R2
 41 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 42 [-]: TEST      R3 1         ; if R3 then PC := 48
 43 [-]: JMP       48           ; PC := 48
 44 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0x21a1810f]
 45 [-]: MOVE      R5 R0        ; R5 := R0
 46 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 47 [-]: RETURN    R3 2         ; return R3
 48 [-]: LOADBOOL  R3 0 0       ; R3 := false
 49 [-]: RETURN    R3 2         ; return R3
 50 [-]: RETURN    R0 1         ; return 


; Function #403:
;
; Name:            
; Defined at line: 8850
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xce225efa
  2 [-]: LOADK     R4 0         ; R4 := 0.000000
  3 [-]: CALL      R3 2 1       ; R3(R4)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R3 K1        ; R3 := 0x3d106989
  7 [-]: LOADK     R4 K2        ; R4 := "GetRegionSectorForNode "
  8 [-]: GETGLOBAL R5 K3        ; R5 := 0x64fb1586
  9 [-]: MOVE      R6 R1        ; R6 := R1
 10 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 11 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 12 [-]: CALL      R3 2 1       ; R3(R4)
 13 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 14 [-]: MOVE      R4 R0        ; R4 := R0
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: EQ        0 R1 K5      ; if R1 ~= nil then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: LOADNIL   R3 R4        ; R3 := R4 := nil
 21 [-]: RETURN    R3 3         ; return R3,R4
 22 [-]: SELF      R3 R0 K6     ; R4 := R0; R3 := R0[0x5484bf3c]
 23 [-]: MOVE      R5 R1        ; R5 := R1
 24 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 25 [-]: TEST      R3 0         ; if not R3 then PC := 57
 26 [-]: JMP       57           ; PC := 57
 27 [-]: LOADK     R4 1         ; R4 := 1.000000
 28 [-]: GETTABLE  R5 R3 K7     ; R5 := R3["sectors"]
 29 [-]: LEN       R5 R5        ; R5 := # R5
 30 [-]: LOADK     R6 1         ; R6 := 1.000000
 31 [-]: FORPREP   R4 56        ; R4 -= R6; PC := 56
 32 [-]: GETTABLE  R8 R3 K7     ; R8 := R3["sectors"]
 33 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 34 [-]: GETTABLE  R9 R8 K8     ; R9 := R8["name"]
 35 [-]: EQ        0 R9 R1      ; if R9 ~= R1 then PC := 56
 36 [-]: JMP       56           ; PC := 56
 37 [-]: SELF      R9 R0 K9     ; R10 := R0; R9 := R0[0xc18bf6f0]
 38 [-]: GETTABLE  R11 R8 K8    ; R11 := R8["name"]
 39 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 40 [-]: TEST      R2 0         ; if not R2 then PC := 52
 41 [-]: JMP       52           ; PC := 52
 42 [-]: GETGLOBAL R10 K1       ; R10 := 0x3d106989
 43 [-]: LOADK     R11 K10      ; R11 := "Found sector mission"
 44 [-]: CALL      R10 2 1      ; R10(R11)
 45 [-]: GETGLOBAL R10 K1       ; R10 := 0x3d106989
 46 [-]: LOADK     R11 K11      ; R11 := "Unique name: "
 47 [-]: GETGLOBAL R12 K3       ; R12 := 0x64fb1586
 48 [-]: GETTABLE  R13 R9 K12   ; R13 := R9["uniqueName"]
 49 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 50 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 51 [-]: CALL      R10 2 1      ; R10(R11)
 52 [-]: MOVE      R10 R3       ; R10 := R3
 53 [-]: MOVE      R11 R8       ; R11 := R8
 54 [-]: MOVE      R12 R9       ; R12 := R9
 55 [-]: RETURN    R10 4        ; return R10,R11,R12
 56 [-]: FORLOOP   R4 32        ; R4 += R6; if R4 <= R5 then begin PC := 32; R7 := R4 end
 57 [-]: LOADNIL   R10 R11      ; R10 := R11 := nil
 58 [-]: RETURN    R10 3        ; return R10,R11
 59 [-]: RETURN    R0 1         ; return 


; Function #404:
;
; Name:            
; Defined at line: 8879
; #Upvalues:       6
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  77

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 1146
  5 [-]: JMP       1146         ; PC := 1146
  6 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  7 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["name"]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 1146
 10 [-]: JMP       1146         ; PC := 1146
 11 [-]: GETGLOBAL R3 K2        ; R3 := 0x64fb1586
 12 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["name"]
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: GETTABLE  R4 R1 K3     ; R4 := R1["baseNodeName"]
 15 [-]: GETTABLE  R5 R1 K4     ; R5 := R1["hubMission"]
 16 [-]: TEST      R5 0         ; if not R5 then PC := 37
 17 [-]: JMP       37           ; PC := 37
 18 [-]: GETTABLE  R5 R1 K4     ; R5 := R1["hubMission"]
 19 [-]: GETGLOBAL R6 K5        ; R6 := 0x7f5022cf
 20 [-]: GETTABLE  R6 R6 K6     ; R82 := R6[0xa5c556b9]
 21 [-]: MOVE      R7 R5        ; R7 := R5
 22 [-]: GETGLOBAL R8 K7        ; R8 := HARD_MODE_TAG
 23 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 24 [-]: EQ        1 R6 K8      ; if R6 == nil then PC := 33
 25 [-]: JMP       33           ; PC := 33
 26 [-]: GETGLOBAL R7 K5        ; R7 := 0x7f5022cf
 27 [-]: GETTABLE  R7 R7 K9     ; R82 := R7[0x1a94c9cc]
 28 [-]: MOVE      R8 R5        ; R8 := R5
 29 [-]: LOADK     R9 1         ; R9 := 1.000000
 30 [-]: SUB       R10 R6 K10   ; R10 := R6 - 1.000000
 31 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 32 [-]: MOVE      R5 R7        ; R5 := R7
 33 [-]: GETGLOBAL R7 K11       ; R7 := 0x0469f296
 34 [-]: MOVE      R8 R5        ; R8 := R5
 35 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 36 [-]: MOVE      R4 R7        ; R4 := R7
 37 [-]: GETUPVAL  R7 U0        ; R7 := U0
 38 [-]: MOVE      R8 R0        ; R8 := R0
 39 [-]: MOVE      R9 R4        ; R9 := R4
 40 [-]: MOVE      R10 R2       ; R10 := R2
 41 [-]: CALL      R7 4 4       ; R7,R8,R9 := R7(R8,R9,R10)
 42 [-]: LOADNIL   R10 R13      ; R10 := R11 := R12 := R13 := nil
 43 [-]: LOADBOOL  R14 0 0      ; R14 := false
 44 [-]: LOADBOOL  R15 0 0      ; R15 := false
 45 [-]: LOADBOOL  R16 0 0      ; R16 := false
 46 [-]: TEST      R8 0         ; if not R8 then PC := 957
 47 [-]: JMP       957          ; PC := 957
 48 [-]: TEST      R2 0         ; if not R2 then PC := 62
 49 [-]: JMP       62           ; PC := 62
 50 [-]: GETGLOBAL R17 K12      ; R17 := 0x3d106989
 51 [-]: LOADK     R18 K13      ; R18 := "Sector: "
 52 [-]: GETGLOBAL R19 K2       ; R19 := 0x64fb1586
 53 [-]: GETTABLE  R20 R8 K1    ; R20 := R8["name"]
 54 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 55 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
 56 [-]: CALL      R17 2 1      ; R17(R18)
 57 [-]: GETGLOBAL R17 K12      ; R17 := 0x3d106989
 58 [-]: LOADK     R18 K14      ; R18 := "Pending mission: "
 59 [-]: MOVE      R19 R3       ; R19 := R3
 60 [-]: CONCAT    R18 R18 R19  ; R18 := R18 .. R19
 61 [-]: CALL      R17 2 1      ; R17(R18)
 62 [-]: GETGLOBAL R17 K5       ; R17 := 0x7f5022cf
 63 [-]: GETTABLE  R17 R17 K6   ; R82 := R17[0xa5c556b9]
 64 [-]: MOVE      R18 R3       ; R18 := R3
 65 [-]: GETGLOBAL R19 K15      ; R19 := ALERT_TAG
 66 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
 67 [-]: TEST      R17 0        ; if not R17 then PC := 130
 68 [-]: JMP       130          ; PC := 130
 69 [-]: GETGLOBAL R17 K16      ; R17 := _T
 70 [-]: GETTABLE  R17 R17 K17  ; R17 := R17["CachedAlerts"]
 71 [-]: TEST      R17 0        ; if not R17 then PC := 782
 72 [-]: JMP       782          ; PC := 782
 73 [-]: GETGLOBAL R17 K16      ; R17 := _T
 74 [-]: GETTABLE  R17 R17 K17  ; R17 := R17["CachedAlerts"]
 75 [-]: GETGLOBAL R18 K2       ; R18 := 0x64fb1586
 76 [-]: GETTABLE  R19 R1 K3    ; R19 := R1["baseNodeName"]
 77 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 78 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
 79 [-]: TEST      R17 0        ; if not R17 then PC := 782
 80 [-]: JMP       782          ; PC := 782
 81 [-]: GETTABLE  R18 R17 K18  ; R18 := R17["mAlertInfo"]
 82 [-]: GETTABLE  R10 R18 K19  ; R10 := R18["mMissionInfo"]
 83 [-]: GETTABLE  R18 R17 K18  ; R18 := R17["mAlertInfo"]
 84 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["mId"]
 85 [-]: GETTABLE  R18 R18 K21  ; R18 := R18["mId"]
 86 [-]: SETTABLE  R10 K20 R18  ; R10["alertId"] := R18
 87 [-]: GETGLOBAL R18 K22      ; R18 := 0x603636ad
 88 [-]: LOADK     R19 K23      ; R19 := "/Lotus/Language/Menu/Notification_Alert"
 89 [-]: LOADNIL   R20 R20      ; R20 := nil
 90 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
 91 [-]: MOVE      R12 R18      ; R12 := R18
 92 [-]: GETGLOBAL R18 K2       ; R18 := 0x64fb1586
 93 [-]: GETTABLE  R19 R1 K3    ; R19 := R1["baseNodeName"]
 94 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 95 [-]: GETGLOBAL R19 K16      ; R19 := _T
 96 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["CachedAlerts"]
 97 [-]: GETTABLE  R19 R19 R18  ; R19 := R19[R18]
 98 [-]: TEST      R19 0        ; if not R19 then PC := 782
 99 [-]: JMP       782          ; PC := 782
100 [-]: GETGLOBAL R19 K16      ; R19 := _T
101 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["CachedAlerts"]
102 [-]: GETTABLE  R19 R19 R18  ; R19 := R19[R18]
103 [-]: GETTABLE  R19 R19 K18  ; R19 := R19["mAlertInfo"]
104 [-]: GETTABLE  R19 R19 K24  ; R19 := R19["mTag"]
105 [-]: GETGLOBAL R20 K25      ; R20 := EMPTY_SYMBOL
106 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 782
107 [-]: JMP       782          ; PC := 782
108 [-]: GETGLOBAL R19 K16      ; R19 := _T
109 [-]: GETTABLE  R19 R19 K17  ; R19 := R19["CachedAlerts"]
110 [-]: GETTABLE  R19 R19 R18  ; R19 := R19[R18]
111 [-]: GETTABLE  R19 R19 K18  ; R19 := R19["mAlertInfo"]
112 [-]: GETTABLE  R19 R19 K19  ; R19 := R19["mMissionInfo"]
113 [-]: GETTABLE  R19 R19 K26  ; R19 := R19["descText"]
114 [-]: GETGLOBAL R20 K25      ; R20 := EMPTY_SYMBOL
115 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 782
116 [-]: JMP       782          ; PC := 782
117 [-]: GETGLOBAL R19 K22      ; R19 := 0x603636ad
118 [-]: GETGLOBAL R20 K2       ; R20 := 0x64fb1586
119 [-]: GETGLOBAL R21 K16      ; R21 := _T
120 [-]: GETTABLE  R21 R21 K17  ; R21 := R21["CachedAlerts"]
121 [-]: GETTABLE  R21 R21 R18  ; R21 := R21[R18]
122 [-]: GETTABLE  R21 R21 K18  ; R21 := R21["mAlertInfo"]
123 [-]: GETTABLE  R21 R21 K19  ; R21 := R21["mMissionInfo"]
124 [-]: GETTABLE  R21 R21 K26  ; R21 := R21["descText"]
125 [-]: CALL      R20 2 2      ; R20 := R20(R21)
126 [-]: LOADBOOL  R21 0 0      ; R21 := false
127 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
128 [-]: MOVE      R11 R19      ; R11 := R19
129 [-]: JMP       782          ; PC := 782
130 [-]: GETGLOBAL R19 K5       ; R19 := 0x7f5022cf
131 [-]: GETTABLE  R19 R19 K6   ; R82 := R19[0xa5c556b9]
132 [-]: MOVE      R20 R3       ; R20 := R3
133 [-]: GETGLOBAL R21 K27      ; R21 := EVENT_TAG
134 [-]: CALL      R19 3 2      ; R19 := R19(R20,R21)
135 [-]: TEST      R19 0        ; if not R19 then PC := 213
136 [-]: JMP       213          ; PC := 213
137 [-]: GETGLOBAL R19 K28      ; R19 := 0x0032441c
138 [-]: GETTABLE  R19 R19 K29  ; R19 := R19["CachedGoalInfo"]
139 [-]: TEST      R19 0        ; if not R19 then PC := 782
140 [-]: JMP       782          ; PC := 782
141 [-]: GETGLOBAL R19 K28      ; R19 := 0x0032441c
142 [-]: GETTABLE  R19 R19 K29  ; R19 := R19["CachedGoalInfo"]
143 [-]: GETGLOBAL R20 K2       ; R20 := 0x64fb1586
144 [-]: GETTABLE  R21 R1 K3    ; R21 := R1["baseNodeName"]
145 [-]: CALL      R20 2 2      ; R20 := R20(R21)
146 [-]: GETTABLE  R19 R19 R20  ; R19 := R19[R20]
147 [-]: EQ        0 R19 K8     ; if R19 ~= nil then PC := 171
148 [-]: JMP       171          ; PC := 171
149 [-]: GETGLOBAL R20 K16      ; R20 := _T
150 [-]: GETTABLE  R20 R20 K30  ; R20 := R20["LockedGoalList"]
151 [-]: EQ        1 R20 K8     ; if R20 == nil then PC := 171
152 [-]: JMP       171          ; PC := 171
153 [-]: GETGLOBAL R20 K16      ; R20 := _T
154 [-]: GETTABLE  R20 R20 K30  ; R20 := R20["LockedGoalList"]
155 [-]: GETGLOBAL R21 K2       ; R21 := 0x64fb1586
156 [-]: GETTABLE  R22 R1 K3    ; R22 := R1["baseNodeName"]
157 [-]: CALL      R21 2 2      ; R21 := R21(R22)
158 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
159 [-]: TEST      R20 0        ; if not R20 then PC := 171
160 [-]: JMP       171          ; PC := 171
161 [-]: GETGLOBAL R20 K16      ; R20 := _T
162 [-]: GETTABLE  R20 R20 K31  ; R20 := R20["LockedGoalMissionInfo"]
163 [-]: EQ        1 R20 K8     ; if R20 == nil then PC := 171
164 [-]: JMP       171          ; PC := 171
165 [-]: GETGLOBAL R20 K16      ; R20 := _T
166 [-]: GETTABLE  R20 R20 K31  ; R20 := R20["LockedGoalMissionInfo"]
167 [-]: GETGLOBAL R21 K2       ; R21 := 0x64fb1586
168 [-]: GETTABLE  R22 R1 K3    ; R22 := R1["baseNodeName"]
169 [-]: CALL      R21 2 2      ; R21 := R21(R22)
170 [-]: GETTABLE  R19 R20 R21  ; R19 := R20[R21]
171 [-]: TEST      R19 0        ; if not R19 then PC := 189
172 [-]: JMP       189          ; PC := 189
173 [-]: GETTABLE  R10 R19 K19  ; R10 := R19["mMissionInfo"]
174 [-]: GETTABLE  R20 R19 K21  ; R20 := R19["mId"]
175 [-]: GETTABLE  R20 R20 K21  ; R20 := R20["mId"]
176 [-]: SETTABLE  R10 K32 R20  ; R10["goalId"] := R20
177 [-]: GETTABLE  R20 R10 K33  ; R20 := R10["goalTag"]
178 [-]: GETGLOBAL R21 K25      ; R21 := EMPTY_SYMBOL
179 [-]: EQ        0 R20 R21    ; if R20 ~= R21 then PC := 183
180 [-]: JMP       183          ; PC := 183
181 [-]: GETTABLE  R20 R19 K24  ; R20 := R19["mTag"]
182 [-]: SETTABLE  R10 K33 R20  ; R10["goalTag"] := R20
183 [-]: GETGLOBAL R20 K22      ; R20 := 0x603636ad
184 [-]: GETTABLE  R21 R19 K34  ; R21 := R19["mDesc"]
185 [-]: LOADBOOL  R22 0 0      ; R22 := false
186 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
187 [-]: MOVE      R11 R20      ; R11 := R20
188 [-]: JMP       782          ; PC := 782
189 [-]: GETGLOBAL R20 K16      ; R20 := _T
190 [-]: GETTABLE  R20 R20 K30  ; R20 := R20["LockedGoalList"]
191 [-]: TEST      R20 0        ; if not R20 then PC := 782
192 [-]: JMP       782          ; PC := 782
193 [-]: GETGLOBAL R20 K16      ; R20 := _T
194 [-]: GETTABLE  R20 R20 K30  ; R20 := R20["LockedGoalList"]
195 [-]: GETGLOBAL R21 K2       ; R21 := 0x64fb1586
196 [-]: GETTABLE  R22 R1 K3    ; R22 := R1["baseNodeName"]
197 [-]: CALL      R21 2 2      ; R21 := R21(R22)
198 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
199 [-]: TEST      R20 0        ; if not R20 then PC := 782
200 [-]: JMP       782          ; PC := 782
201 [-]: GETGLOBAL R20 K22      ; R20 := 0x603636ad
202 [-]: GETGLOBAL R21 K16      ; R21 := _T
203 [-]: GETTABLE  R21 R21 K30  ; R21 := R21["LockedGoalList"]
204 [-]: GETGLOBAL R22 K2       ; R22 := 0x64fb1586
205 [-]: GETTABLE  R23 R1 K3    ; R23 := R1["baseNodeName"]
206 [-]: CALL      R22 2 2      ; R22 := R22(R23)
207 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
208 [-]: GETTABLE  R21 R21 K34  ; R21 := R21["mDesc"]
209 [-]: LOADBOOL  R22 0 0      ; R22 := false
210 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
211 [-]: MOVE      R11 R20      ; R11 := R20
212 [-]: JMP       782          ; PC := 782
213 [-]: GETGLOBAL R20 K5       ; R20 := 0x7f5022cf
214 [-]: GETTABLE  R20 R20 K6   ; R82 := R20[0xa5c556b9]
215 [-]: MOVE      R21 R3       ; R21 := R3
216 [-]: GETGLOBAL R22 K35      ; R22 := SYNDICATE_MISSION_TAG
217 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
218 [-]: TEST      R20 0        ; if not R20 then PC := 239
219 [-]: JMP       239          ; PC := 239
220 [-]: GETGLOBAL R20 K16      ; R20 := _T
221 [-]: GETTABLE  R20 R20 K36  ; R20 := R20["CachedSyndicateMissions"]
222 [-]: TEST      R20 0        ; if not R20 then PC := 782
223 [-]: JMP       782          ; PC := 782
224 [-]: GETGLOBAL R20 K16      ; R20 := _T
225 [-]: GETTABLE  R20 R20 K36  ; R20 := R20["CachedSyndicateMissions"]
226 [-]: GETGLOBAL R21 K2       ; R21 := 0x64fb1586
227 [-]: GETTABLE  R22 R1 K3    ; R22 := R1["baseNodeName"]
228 [-]: CALL      R21 2 2      ; R21 := R21(R22)
229 [-]: GETTABLE  R20 R20 R21  ; R20 := R20[R21]
230 [-]: TEST      R20 0        ; if not R20 then PC := 782
231 [-]: JMP       782          ; PC := 782
232 [-]: GETTABLE  R10 R20 K19  ; R10 := R20["mMissionInfo"]
233 [-]: GETGLOBAL R21 K22      ; R21 := 0x603636ad
234 [-]: LOADK     R22 K37      ; R22 := "/Lotus/Language/Menu/SyndicateMissionName"
235 [-]: LOADNIL   R23 R23      ; R23 := nil
236 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
237 [-]: MOVE      R12 R21      ; R12 := R21
238 [-]: JMP       782          ; PC := 782
239 [-]: GETGLOBAL R21 K5       ; R21 := 0x7f5022cf
240 [-]: GETTABLE  R21 R21 K6   ; R82 := R21[0xa5c556b9]
241 [-]: MOVE      R22 R3       ; R22 := R3
242 [-]: GETGLOBAL R23 K38      ; R23 := SORTIE_MISSION_TAG
243 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
244 [-]: TEST      R21 0        ; if not R21 then PC := 265
245 [-]: JMP       265          ; PC := 265
246 [-]: GETGLOBAL R21 K16      ; R21 := _T
247 [-]: GETTABLE  R21 R21 K39  ; R21 := R21["CachedSortieMissions"]
248 [-]: TEST      R21 0        ; if not R21 then PC := 782
249 [-]: JMP       782          ; PC := 782
250 [-]: GETGLOBAL R21 K16      ; R21 := _T
251 [-]: GETTABLE  R21 R21 K39  ; R21 := R21["CachedSortieMissions"]
252 [-]: GETGLOBAL R22 K2       ; R22 := 0x64fb1586
253 [-]: GETTABLE  R23 R1 K3    ; R23 := R1["baseNodeName"]
254 [-]: CALL      R22 2 2      ; R22 := R22(R23)
255 [-]: GETTABLE  R21 R21 R22  ; R21 := R21[R22]
256 [-]: TEST      R21 0        ; if not R21 then PC := 782
257 [-]: JMP       782          ; PC := 782
258 [-]: GETTABLE  R10 R21 K19  ; R10 := R21["mMissionInfo"]
259 [-]: GETGLOBAL R22 K22      ; R22 := 0x603636ad
260 [-]: LOADK     R23 K40      ; R23 := "/Lotus/Language/Menu/SortieMissionName"
261 [-]: LOADNIL   R24 R24      ; R24 := nil
262 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
263 [-]: MOVE      R12 R22      ; R12 := R22
264 [-]: JMP       782          ; PC := 782
265 [-]: GETGLOBAL R22 K5       ; R22 := 0x7f5022cf
266 [-]: GETTABLE  R22 R22 K6   ; R82 := R22[0xa5c556b9]
267 [-]: MOVE      R23 R3       ; R23 := R3
268 [-]: GETGLOBAL R24 K41      ; R24 := LITE_SORTIE_MISSION_TAG
269 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
270 [-]: TEST      R22 0        ; if not R22 then PC := 291
271 [-]: JMP       291          ; PC := 291
272 [-]: GETGLOBAL R22 K16      ; R22 := _T
273 [-]: GETTABLE  R22 R22 K42  ; R22 := R22["CachedLiteSortieMissions"]
274 [-]: TEST      R22 0        ; if not R22 then PC := 782
275 [-]: JMP       782          ; PC := 782
276 [-]: GETGLOBAL R22 K16      ; R22 := _T
277 [-]: GETTABLE  R22 R22 K42  ; R22 := R22["CachedLiteSortieMissions"]
278 [-]: GETGLOBAL R23 K2       ; R23 := 0x64fb1586
279 [-]: GETTABLE  R24 R1 K3    ; R24 := R1["baseNodeName"]
280 [-]: CALL      R23 2 2      ; R23 := R23(R24)
281 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
282 [-]: TEST      R22 0        ; if not R22 then PC := 782
283 [-]: JMP       782          ; PC := 782
284 [-]: GETTABLE  R10 R22 K19  ; R10 := R22["mMissionInfo"]
285 [-]: GETGLOBAL R23 K22      ; R23 := 0x603636ad
286 [-]: LOADK     R24 K40      ; R24 := "/Lotus/Language/Menu/SortieMissionName"
287 [-]: LOADNIL   R25 R25      ; R25 := nil
288 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
289 [-]: MOVE      R12 R23      ; R12 := R23
290 [-]: JMP       782          ; PC := 782
291 [-]: GETGLOBAL R23 K5       ; R23 := 0x7f5022cf
292 [-]: GETTABLE  R23 R23 K6   ; R82 := R23[0xa5c556b9]
293 [-]: MOVE      R24 R3       ; R24 := R3
294 [-]: GETGLOBAL R25 K43      ; R25 := ACTIVE_MISSION_TAG
295 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
296 [-]: TEST      R23 0        ; if not R23 then PC := 317
297 [-]: JMP       317          ; PC := 317
298 [-]: GETGLOBAL R23 K16      ; R23 := _T
299 [-]: GETTABLE  R23 R23 K44  ; R23 := R23["CachedActiveMissions"]
300 [-]: TEST      R23 0        ; if not R23 then PC := 782
301 [-]: JMP       782          ; PC := 782
302 [-]: GETGLOBAL R23 K16      ; R23 := _T
303 [-]: GETTABLE  R23 R23 K44  ; R23 := R23["CachedActiveMissions"]
304 [-]: GETGLOBAL R24 K2       ; R24 := 0x64fb1586
305 [-]: GETTABLE  R25 R1 K3    ; R25 := R1["baseNodeName"]
306 [-]: CALL      R24 2 2      ; R24 := R24(R25)
307 [-]: GETTABLE  R23 R23 R24  ; R23 := R23[R24]
308 [-]: TEST      R23 0        ; if not R23 then PC := 782
309 [-]: JMP       782          ; PC := 782
310 [-]: GETTABLE  R10 R23 K19  ; R10 := R23["mMissionInfo"]
311 [-]: GETGLOBAL R24 K2       ; R24 := 0x64fb1586
312 [-]: GETTABLE  R25 R23 K19  ; R25 := R23["mMissionInfo"]
313 [-]: GETTABLE  R25 R25 K26  ; R25 := R25["descText"]
314 [-]: CALL      R24 2 2      ; R24 := R24(R25)
315 [-]: MOVE      R12 R24      ; R12 := R24
316 [-]: JMP       782          ; PC := 782
317 [-]: GETGLOBAL R24 K5       ; R24 := 0x7f5022cf
318 [-]: GETTABLE  R24 R24 K6   ; R82 := R24[0xa5c556b9]
319 [-]: MOVE      R25 R3       ; R25 := R3
320 [-]: GETGLOBAL R26 K45      ; R26 := INVASION_DEFENDER_TAG
321 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
322 [-]: TEST      R24 0        ; if not R24 then PC := 394
323 [-]: JMP       394          ; PC := 394
324 [-]: GETGLOBAL R24 K16      ; R24 := _T
325 [-]: GETTABLE  R24 R24 K46  ; R24 := R24["CachedInvasionInfo"]
326 [-]: TEST      R24 0        ; if not R24 then PC := 782
327 [-]: JMP       782          ; PC := 782
328 [-]: GETGLOBAL R24 K2       ; R24 := 0x64fb1586
329 [-]: GETTABLE  R25 R1 K3    ; R25 := R1["baseNodeName"]
330 [-]: CALL      R24 2 2      ; R24 := R24(R25)
331 [-]: GETGLOBAL R25 K16      ; R25 := _T
332 [-]: GETTABLE  R25 R25 K46  ; R25 := R25["CachedInvasionInfo"]
333 [-]: GETTABLE  R25 R25 R24  ; R25 := R25[R24]
334 [-]: TEST      R25 0        ; if not R25 then PC := 782
335 [-]: JMP       782          ; PC := 782
336 [-]: GETTABLE  R10 R25 K47  ; R10 := R25["mDefenderMissionInfo"]
337 [-]: GETTABLE  R26 R25 K21  ; R26 := R25["mId"]
338 [-]: GETTABLE  R26 R26 K21  ; R26 := R26["mId"]
339 [-]: SETTABLE  R10 K48 R26  ; R10["invasionId"] := R26
340 [-]: GETTABLE  R26 R25 K50  ; R26 := R25["mAttackerMissionInfo"]
341 [-]: GETTABLE  R26 R26 K51  ; R26 := R26["faction"]
342 [-]: SETTABLE  R10 K49 R26  ; R10["invasionAllyFaction"] := R26
343 [-]: GETGLOBAL R26 K22      ; R26 := 0x603636ad
344 [-]: LOADK     R27 K52      ; R27 := "/Lotus/Language/Menu/MissionIntro_Invasion"
345 [-]: LOADBOOL  R28 0 0      ; R28 := false
346 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
347 [-]: LOADK     R27 K53      ; R27 := " ("
348 [-]: GETGLOBAL R28 K22      ; R28 := 0x603636ad
349 [-]: LOADK     R29 K54      ; R29 := "/Lotus/Language/Game/Faction_"
350 [-]: GETGLOBAL R30 K2       ; R30 := 0x64fb1586
351 [-]: GETTABLE  R31 R25 K50  ; R31 := R25["mAttackerMissionInfo"]
352 [-]: SELF      R31 R31 K55  ; R32 := R31; R31 := R31[0x243148d6]
353 [-]: CALL      R31 2 0      ; R31,... := R31(R32)
354 [-]: CALL      R30 0 2      ; R30 := R30(R31,...)
355 [-]: LOADK     R31 K56      ; R31 := "UC"
356 [-]: CONCAT    R29 R29 R31  ; R29 := R29 .. R30 .. R31
357 [-]: LOADBOOL  R30 0 0      ; R30 := false
358 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
359 [-]: LOADK     R29 K57      ; R29 := ")"
360 [-]: CONCAT    R26 R26 R29  ; R26 := R26 .. R27 .. R28 .. R29
361 [-]: GETTABLE  R27 R25 K58  ; R27 := R25["mDefenderName"]
362 [-]: GETGLOBAL R28 K25      ; R28 := EMPTY_SYMBOL
363 [-]: EQ        0 R27 R28    ; if R27 ~= R28 then PC := 367
364 [-]: JMP       367          ; PC := 367
365 [-]: MOVE      R12 R26      ; R12 := R26
366 [-]: JMP       374          ; PC := 374
367 [-]: GETGLOBAL R27 K22      ; R27 := 0x603636ad
368 [-]: GETGLOBAL R28 K2       ; R28 := 0x64fb1586
369 [-]: GETTABLE  R29 R25 K58  ; R29 := R25["mDefenderName"]
370 [-]: CALL      R28 2 2      ; R28 := R28(R29)
371 [-]: LOADBOOL  R29 0 0      ; R29 := false
372 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
373 [-]: MOVE      R12 R27      ; R12 := R27
374 [-]: GETGLOBAL R27 K59      ; R27 := 0xcfc01047
375 [-]: GETGLOBAL R28 K28      ; R28 := 0x0032441c
376 [-]: GETTABLE  R28 R28 K29  ; R28 := R28["CachedGoalInfo"]
377 [-]: CALL      R27 2 4      ; R27,R28,R29 := R27(R28)
378 [-]: JMP       391          ; PC := 391
379 [-]: TEST      R31 0        ; if not R31 then PC := 391
380 [-]: JMP       391          ; PC := 391
381 [-]: GETTABLE  R32 R31 K60  ; R32 := R31["mInvasionNode"]
382 [-]: GETTABLE  R33 R1 K3    ; R33 := R1["baseNodeName"]
383 [-]: EQ        0 R32 R33    ; if R32 ~= R33 then PC := 391
384 [-]: JMP       391          ; PC := 391
385 [-]: GETGLOBAL R32 K22      ; R32 := 0x603636ad
386 [-]: GETTABLE  R33 R31 K34  ; R33 := R31["mDesc"]
387 [-]: LOADBOOL  R34 0 0      ; R34 := false
388 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
389 [-]: MOVE      R11 R32      ; R11 := R32
390 [-]: JMP       782          ; PC := 782
391 [-]: TFORLOOP  R27 2        ; R30,R31 :=  R27(R28,R29); if R30 ~= nil then begin PC = 379; R29 := R30 end
392 [-]: JMP       379          ; PC := 379
393 [-]: JMP       782          ; PC := 782
394 [-]: GETGLOBAL R32 K5       ; R32 := 0x7f5022cf
395 [-]: GETTABLE  R32 R32 K6   ; R82 := R32[0xa5c556b9]
396 [-]: MOVE      R33 R3       ; R33 := R3
397 [-]: GETGLOBAL R34 K61      ; R34 := INVASION_ATTACKER_TAG
398 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
399 [-]: TEST      R32 0        ; if not R32 then PC := 471
400 [-]: JMP       471          ; PC := 471
401 [-]: GETGLOBAL R32 K16      ; R32 := _T
402 [-]: GETTABLE  R32 R32 K46  ; R32 := R32["CachedInvasionInfo"]
403 [-]: TEST      R32 0        ; if not R32 then PC := 782
404 [-]: JMP       782          ; PC := 782
405 [-]: GETGLOBAL R32 K2       ; R32 := 0x64fb1586
406 [-]: GETTABLE  R33 R1 K3    ; R33 := R1["baseNodeName"]
407 [-]: CALL      R32 2 2      ; R32 := R32(R33)
408 [-]: GETGLOBAL R33 K16      ; R33 := _T
409 [-]: GETTABLE  R33 R33 K46  ; R33 := R33["CachedInvasionInfo"]
410 [-]: GETTABLE  R33 R33 R32  ; R33 := R33[R32]
411 [-]: TEST      R33 0        ; if not R33 then PC := 782
412 [-]: JMP       782          ; PC := 782
413 [-]: GETTABLE  R10 R33 K50  ; R10 := R33["mAttackerMissionInfo"]
414 [-]: GETTABLE  R34 R33 K21  ; R34 := R33["mId"]
415 [-]: GETTABLE  R34 R34 K21  ; R34 := R34["mId"]
416 [-]: SETTABLE  R10 K48 R34  ; R10["invasionId"] := R34
417 [-]: GETTABLE  R34 R33 K47  ; R34 := R33["mDefenderMissionInfo"]
418 [-]: GETTABLE  R34 R34 K51  ; R34 := R34["faction"]
419 [-]: SETTABLE  R10 K49 R34  ; R10["invasionAllyFaction"] := R34
420 [-]: GETGLOBAL R34 K22      ; R34 := 0x603636ad
421 [-]: LOADK     R35 K52      ; R35 := "/Lotus/Language/Menu/MissionIntro_Invasion"
422 [-]: LOADBOOL  R36 0 0      ; R36 := false
423 [-]: CALL      R34 3 2      ; R34 := R34(R35,R36)
424 [-]: LOADK     R35 K53      ; R35 := " ("
425 [-]: GETGLOBAL R36 K22      ; R36 := 0x603636ad
426 [-]: LOADK     R37 K54      ; R37 := "/Lotus/Language/Game/Faction_"
427 [-]: GETGLOBAL R38 K2       ; R38 := 0x64fb1586
428 [-]: GETTABLE  R39 R33 K47  ; R39 := R33["mDefenderMissionInfo"]
429 [-]: SELF      R39 R39 K55  ; R40 := R39; R39 := R39[0x243148d6]
430 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
431 [-]: CALL      R38 0 2      ; R38 := R38(R39,...)
432 [-]: LOADK     R39 K56      ; R39 := "UC"
433 [-]: CONCAT    R37 R37 R39  ; R37 := R37 .. R38 .. R39
434 [-]: LOADBOOL  R38 0 0      ; R38 := false
435 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
436 [-]: LOADK     R37 K57      ; R37 := ")"
437 [-]: CONCAT    R34 R34 R37  ; R34 := R34 .. R35 .. R36 .. R37
438 [-]: GETTABLE  R35 R33 K62  ; R35 := R33["mAttackerName"]
439 [-]: GETGLOBAL R36 K25      ; R36 := EMPTY_SYMBOL
440 [-]: EQ        0 R35 R36    ; if R35 ~= R36 then PC := 444
441 [-]: JMP       444          ; PC := 444
442 [-]: MOVE      R12 R34      ; R12 := R34
443 [-]: JMP       451          ; PC := 451
444 [-]: GETGLOBAL R35 K22      ; R35 := 0x603636ad
445 [-]: GETGLOBAL R36 K2       ; R36 := 0x64fb1586
446 [-]: GETTABLE  R37 R33 K62  ; R37 := R33["mAttackerName"]
447 [-]: CALL      R36 2 2      ; R36 := R36(R37)
448 [-]: LOADBOOL  R37 0 0      ; R37 := false
449 [-]: CALL      R35 3 2      ; R35 := R35(R36,R37)
450 [-]: MOVE      R12 R35      ; R12 := R35
451 [-]: GETGLOBAL R35 K59      ; R35 := 0xcfc01047
452 [-]: GETGLOBAL R36 K28      ; R36 := 0x0032441c
453 [-]: GETTABLE  R36 R36 K29  ; R36 := R36["CachedGoalInfo"]
454 [-]: CALL      R35 2 4      ; R35,R36,R37 := R35(R36)
455 [-]: JMP       468          ; PC := 468
456 [-]: TEST      R39 0        ; if not R39 then PC := 468
457 [-]: JMP       468          ; PC := 468
458 [-]: GETTABLE  R40 R39 K60  ; R40 := R39["mInvasionNode"]
459 [-]: GETTABLE  R41 R1 K3    ; R41 := R1["baseNodeName"]
460 [-]: EQ        0 R40 R41    ; if R40 ~= R41 then PC := 468
461 [-]: JMP       468          ; PC := 468
462 [-]: GETGLOBAL R40 K22      ; R40 := 0x603636ad
463 [-]: GETTABLE  R41 R39 K34  ; R41 := R39["mDesc"]
464 [-]: LOADBOOL  R42 0 0      ; R42 := false
465 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
466 [-]: MOVE      R11 R40      ; R11 := R40
467 [-]: JMP       782          ; PC := 782
468 [-]: TFORLOOP  R35 2        ; R38,R39 :=  R35(R36,R37); if R38 ~= nil then begin PC = 456; R37 := R38 end
469 [-]: JMP       456          ; PC := 456
470 [-]: JMP       782          ; PC := 782
471 [-]: GETGLOBAL R40 K5       ; R40 := 0x7f5022cf
472 [-]: GETTABLE  R40 R40 K6   ; R82 := R40[0xa5c556b9]
473 [-]: MOVE      R41 R3       ; R41 := R3
474 [-]: GETGLOBAL R42 K63      ; R42 := NIGHTMARE_TAG
475 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
476 [-]: TEST      R40 0        ; if not R40 then PC := 485
477 [-]: JMP       485          ; PC := 485
478 [-]: GETGLOBAL R40 K22      ; R40 := 0x603636ad
479 [-]: LOADK     R41 K64      ; R41 := "/Lotus/Language/Menu/NightmareModeName"
480 [-]: LOADNIL   R42 R42      ; R42 := nil
481 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
482 [-]: MOVE      R12 R40      ; R12 := R40
483 [-]: LOADBOOL  R14 1 0      ; R14 := true
484 [-]: JMP       782          ; PC := 782
485 [-]: GETGLOBAL R40 K5       ; R40 := 0x7f5022cf
486 [-]: GETTABLE  R40 R40 K6   ; R82 := R40[0xa5c556b9]
487 [-]: MOVE      R41 R3       ; R41 := R3
488 [-]: GETGLOBAL R42 K65      ; R42 := PVP_TAG
489 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
490 [-]: TEST      R40 1        ; if R40 then PC := 495
491 [-]: JMP       495          ; PC := 495
492 [-]: GETTABLE  R40 R8 K66   ; R40 := R8["nodeType"]
493 [-]: EQ        0 R40 K68    ; if R40 ~= 2.000000 then PC := 514
494 [-]: JMP       514          ; PC := 514
495 [-]: GETGLOBAL R40 K28      ; R40 := 0x0032441c
496 [-]: GETTABLE  R40 R40 K29  ; R40 := R40["CachedGoalInfo"]
497 [-]: TEST      R40 0        ; if not R40 then PC := 782
498 [-]: JMP       782          ; PC := 782
499 [-]: GETGLOBAL R40 K28      ; R40 := 0x0032441c
500 [-]: GETTABLE  R40 R40 K29  ; R40 := R40["CachedGoalInfo"]
501 [-]: GETGLOBAL R41 K2       ; R41 := 0x64fb1586
502 [-]: GETTABLE  R42 R1 K3    ; R42 := R1["baseNodeName"]
503 [-]: CALL      R41 2 2      ; R41 := R41(R42)
504 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
505 [-]: TEST      R40 0        ; if not R40 then PC := 512
506 [-]: JMP       512          ; PC := 512
507 [-]: GETGLOBAL R41 K22      ; R41 := 0x603636ad
508 [-]: GETTABLE  R42 R40 K34  ; R42 := R40["mDesc"]
509 [-]: LOADBOOL  R43 0 0      ; R43 := false
510 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
511 [-]: MOVE      R11 R41      ; R11 := R41
512 [-]: LOADBOOL  R16 1 0      ; R16 := true
513 [-]: JMP       782          ; PC := 782
514 [-]: GETGLOBAL R41 K5       ; R41 := 0x7f5022cf
515 [-]: GETTABLE  R41 R41 K6   ; R82 := R41[0xa5c556b9]
516 [-]: MOVE      R42 R3       ; R42 := R3
517 [-]: GETGLOBAL R43 K38      ; R43 := SORTIE_MISSION_TAG
518 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
519 [-]: TEST      R41 0        ; if not R41 then PC := 540
520 [-]: JMP       540          ; PC := 540
521 [-]: GETGLOBAL R41 K16      ; R41 := _T
522 [-]: GETTABLE  R41 R41 K39  ; R41 := R41["CachedSortieMissions"]
523 [-]: TEST      R41 0        ; if not R41 then PC := 540
524 [-]: JMP       540          ; PC := 540
525 [-]: GETGLOBAL R41 K16      ; R41 := _T
526 [-]: GETTABLE  R41 R41 K39  ; R41 := R41["CachedSortieMissions"]
527 [-]: GETGLOBAL R42 K2       ; R42 := 0x64fb1586
528 [-]: GETTABLE  R43 R1 K3    ; R43 := R1["baseNodeName"]
529 [-]: CALL      R42 2 2      ; R42 := R42(R43)
530 [-]: GETTABLE  R41 R41 R42  ; R41 := R41[R42]
531 [-]: TEST      R41 0        ; if not R41 then PC := 782
532 [-]: JMP       782          ; PC := 782
533 [-]: GETTABLE  R10 R41 K19  ; R10 := R41["mMissionInfo"]
534 [-]: GETGLOBAL R42 K22      ; R42 := 0x603636ad
535 [-]: LOADK     R43 K69      ; R43 := "/Lotus/Language/Menu/Notification_Sortie"
536 [-]: LOADNIL   R44 R44      ; R44 := nil
537 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
538 [-]: MOVE      R12 R42      ; R12 := R42
539 [-]: JMP       782          ; PC := 782
540 [-]: GETGLOBAL R42 K5       ; R42 := 0x7f5022cf
541 [-]: GETTABLE  R42 R42 K6   ; R82 := R42[0xa5c556b9]
542 [-]: MOVE      R43 R3       ; R43 := R3
543 [-]: GETGLOBAL R44 K43      ; R44 := ACTIVE_MISSION_TAG
544 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
545 [-]: TEST      R42 0        ; if not R42 then PC := 566
546 [-]: JMP       566          ; PC := 566
547 [-]: GETGLOBAL R42 K16      ; R42 := _T
548 [-]: GETTABLE  R42 R42 K44  ; R42 := R42["CachedActiveMissions"]
549 [-]: TEST      R42 0        ; if not R42 then PC := 566
550 [-]: JMP       566          ; PC := 566
551 [-]: GETGLOBAL R42 K16      ; R42 := _T
552 [-]: GETTABLE  R42 R42 K44  ; R42 := R42["CachedActiveMissions"]
553 [-]: GETGLOBAL R43 K2       ; R43 := 0x64fb1586
554 [-]: GETTABLE  R44 R1 K3    ; R44 := R1["baseNodeName"]
555 [-]: CALL      R43 2 2      ; R43 := R43(R44)
556 [-]: GETTABLE  R42 R42 R43  ; R42 := R42[R43]
557 [-]: TEST      R42 0        ; if not R42 then PC := 782
558 [-]: JMP       782          ; PC := 782
559 [-]: GETTABLE  R10 R42 K19  ; R10 := R42["mMissionInfo"]
560 [-]: GETGLOBAL R43 K22      ; R43 := 0x603636ad
561 [-]: LOADK     R44 K70      ; R44 := "/Lotus/Language/Menu/Notification_ActiveMission"
562 [-]: LOADNIL   R45 R45      ; R45 := nil
563 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
564 [-]: MOVE      R12 R43      ; R12 := R43
565 [-]: JMP       782          ; PC := 782
566 [-]: GETGLOBAL R43 K5       ; R43 := 0x7f5022cf
567 [-]: GETTABLE  R43 R43 K6   ; R82 := R43[0xa5c556b9]
568 [-]: MOVE      R44 R3       ; R44 := R3
569 [-]: GETGLOBAL R45 K71      ; R45 := KUVA_TOWER_MISSION_TAG
570 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
571 [-]: TEST      R43 0        ; if not R43 then PC := 602
572 [-]: JMP       602          ; PC := 602
573 [-]: GETGLOBAL R43 K16      ; R43 := _T
574 [-]: GETTABLE  R43 R43 K72  ; R43 := R43["CachedGhostTowerMissions"]
575 [-]: TEST      R43 0        ; if not R43 then PC := 602
576 [-]: JMP       602          ; PC := 602
577 [-]: GETGLOBAL R43 K16      ; R43 := _T
578 [-]: GETTABLE  R43 R43 K72  ; R43 := R43["CachedGhostTowerMissions"]
579 [-]: GETGLOBAL R44 K2       ; R44 := 0x64fb1586
580 [-]: GETTABLE  R45 R1 K3    ; R45 := R1["baseNodeName"]
581 [-]: CALL      R44 2 2      ; R44 := R44(R45)
582 [-]: GETTABLE  R43 R43 R44  ; R43 := R43[R44]
583 [-]: TEST      R43 0        ; if not R43 then PC := 782
584 [-]: JMP       782          ; PC := 782
585 [-]: GETTABLE  R10 R43 K19  ; R10 := R43["mMissionInfo"]
586 [-]: GETUPVAL  R44 U1       ; R44 := U1
587 [-]: GETTABLE  R44 R44 K73  ; R82 := R44[0x06d055f9]
588 [-]: GETTABLE  R45 R10 K74  ; R45 := R10["minEnemyLevel"]
589 [-]: LE        1 K75 R45    ; if 80.000000 <= R45 then PC := 592
590 [-]: JMP       592          ; PC := 592
591 [-]: LOADBOOL  R45 0 1      ; R45 := false; PC := 592
592 [-]: LOADBOOL  R45 1 0      ; R45 := true
593 [-]: LOADK     R46 K76      ; R46 := "/Lotus/Language/Menu/GhostTowerHardMissionName"
594 [-]: LOADK     R47 K77      ; R47 := "/Lotus/Language/Menu/GhostTowerMissionName"
595 [-]: CALL      R44 4 2      ; R44 := R44(R45,R46,R47)
596 [-]: GETGLOBAL R45 K22      ; R45 := 0x603636ad
597 [-]: MOVE      R46 R44      ; R46 := R44
598 [-]: LOADNIL   R47 R47      ; R47 := nil
599 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
600 [-]: MOVE      R12 R45      ; R12 := R45
601 [-]: JMP       782          ; PC := 782
602 [-]: GETGLOBAL R45 K5       ; R45 := 0x7f5022cf
603 [-]: GETTABLE  R45 R45 K6   ; R82 := R45[0xa5c556b9]
604 [-]: MOVE      R46 R3       ; R46 := R3
605 [-]: GETGLOBAL R47 K78      ; R47 := NEMESIS_MISSION_TAG
606 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
607 [-]: TEST      R45 0        ; if not R45 then PC := 649
608 [-]: JMP       649          ; PC := 649
609 [-]: GETGLOBAL R45 K16      ; R45 := _T
610 [-]: GETTABLE  R45 R45 K79  ; R45 := R45["CachedNemesisMissions"]
611 [-]: TEST      R45 0        ; if not R45 then PC := 632
612 [-]: JMP       632          ; PC := 632
613 [-]: GETGLOBAL R45 K16      ; R45 := _T
614 [-]: GETTABLE  R45 R45 K79  ; R45 := R45["CachedNemesisMissions"]
615 [-]: GETGLOBAL R46 K2       ; R46 := 0x64fb1586
616 [-]: GETTABLE  R47 R1 K3    ; R47 := R1["baseNodeName"]
617 [-]: CALL      R46 2 2      ; R46 := R46(R47)
618 [-]: GETTABLE  R45 R45 R46  ; R45 := R45[R46]
619 [-]: TEST      R45 0        ; if not R45 then PC := 632
620 [-]: JMP       632          ; PC := 632
621 [-]: GETGLOBAL R45 K16      ; R45 := _T
622 [-]: GETTABLE  R45 R45 K79  ; R45 := R45["CachedNemesisMissions"]
623 [-]: GETGLOBAL R46 K2       ; R46 := 0x64fb1586
624 [-]: GETTABLE  R47 R1 K3    ; R47 := R1["baseNodeName"]
625 [-]: CALL      R46 2 2      ; R46 := R46(R47)
626 [-]: GETTABLE  R45 R45 R46  ; R45 := R45[R46]
627 [-]: GETTABLE  R45 R45 K19  ; R45 := R45["mMissionInfo"]
628 [-]: SELF      R45 R45 K80  ; R46 := R45; R45 := R45[0x8f89d633]
629 [-]: CALL      R45 2 2      ; R45 := R45(R46)
630 [-]: MOVE      R10 R45      ; R10 := R45
631 [-]: JMP       647          ; PC := 647
632 [-]: GETTABLE  R45 R1 K81   ; R45 := R1["nemesis"]
633 [-]: GETTABLE  R45 R45 K82  ; R45 := R45["rank"]
634 [-]: GETTABLE  R46 R1 K81   ; R46 := R1["nemesis"]
635 [-]: GETTABLE  R46 R46 K51  ; R46 := R46["faction"]
636 [-]: GETTABLE  R47 R1 K81   ; R47 := R1["nemesis"]
637 [-]: GETTABLE  R47 R47 K1   ; R47 := R47["name"]
638 [-]: GETUPVAL  R48 U2       ; R48 := U2
639 [-]: GETTABLE  R49 R1 K3    ; R49 := R1["baseNodeName"]
640 [-]: MOVE      R50 R45      ; R50 := R45
641 [-]: MOVE      R51 R46      ; R51 := R46
642 [-]: MOVE      R52 R47      ; R52 := R47
643 [-]: CALL      R48 5 2      ; R48 := R48(R49,R50,R51,R52)
644 [-]: SELF      R48 R48 K80  ; R49 := R48; R48 := R48[0x8f89d633]
645 [-]: CALL      R48 2 2      ; R48 := R48(R49)
646 [-]: MOVE      R10 R48      ; R10 := R48
647 [-]: GETTABLE  R12 R10 K83  ; R12 := R10["uniqueName"]
648 [-]: JMP       782          ; PC := 782
649 [-]: GETGLOBAL R48 K5       ; R48 := 0x7f5022cf
650 [-]: GETTABLE  R48 R48 K6   ; R82 := R48[0xa5c556b9]
651 [-]: MOVE      R49 R3       ; R49 := R3
652 [-]: GETGLOBAL R50 K84      ; R50 := VOID_STORM_TAG
653 [-]: CALL      R48 3 2      ; R48 := R48(R49,R50)
654 [-]: TEST      R48 0        ; if not R48 then PC := 658
655 [-]: JMP       658          ; PC := 658
656 [-]: LOADBOOL  R15 1 0      ; R15 := true
657 [-]: JMP       782          ; PC := 782
658 [-]: GETGLOBAL R48 K0       ; R48 := 0x7b998233
659 [-]: GETTABLE  R49 R1 K85   ; R49 := R1["job"]
660 [-]: CALL      R48 2 2      ; R48 := R48(R49)
661 [-]: TEST      R48 1        ; if R48 then PC := 691
662 [-]: JMP       691          ; PC := 691
663 [-]: GETGLOBAL R48 K86      ; R48 := 0xb009bbc6
664 [-]: GETTABLE  R49 R1 K85   ; R49 := R1["job"]
665 [-]: CALL      R48 2 2      ; R48 := R48(R49)
666 [-]: GETGLOBAL R49 K0       ; R49 := 0x7b998233
667 [-]: MOVE      R50 R48      ; R50 := R48
668 [-]: CALL      R49 2 2      ; R49 := R49(R50)
669 [-]: TEST      R49 1        ; if R49 then PC := 782
670 [-]: JMP       782          ; PC := 782
671 [-]: GETGLOBAL R49 K22      ; R49 := 0x603636ad
672 [-]: GETGLOBAL R50 K2       ; R50 := 0x64fb1586
673 [-]: SELF      R51 R48 K87  ; R52 := R48; R51 := R48[0xaf8359c4]
674 [-]: CALL      R51 2 0      ; R51,... := R51(R52)
675 [-]: CALL      R50 0 2      ; R50 := R50(R51,...)
676 [-]: LOADNIL   R51 R51      ; R51 := nil
677 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
678 [-]: MOVE      R12 R49      ; R12 := R49
679 [-]: GETTABLE  R49 R1 K88   ; R49 := R1["isHardJob"]
680 [-]: TEST      R49 0        ; if not R49 then PC := 782
681 [-]: JMP       782          ; PC := 782
682 [-]: MOVE      R49 R12      ; R49 := R12
683 [-]: LOADK     R50 K53      ; R50 := " ("
684 [-]: GETGLOBAL R51 K22      ; R51 := 0x603636ad
685 [-]: LOADK     R52 K89      ; R52 := "/Lotus/Language/Labels/HardMode"
686 [-]: LOADBOOL  R53 1 0      ; R53 := true
687 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
688 [-]: LOADK     R52 K57      ; R52 := ")"
689 [-]: CONCAT    R12 R49 R52  ; R12 := R49 .. R50 .. R51 .. R52
690 [-]: JMP       782          ; PC := 782
691 [-]: GETGLOBAL R49 K5       ; R49 := 0x7f5022cf
692 [-]: GETTABLE  R49 R49 K6   ; R82 := R49[0xa5c556b9]
693 [-]: MOVE      R50 R3       ; R50 := R3
694 [-]: LOADK     R51 K90      ; R51 := "_Cell"
695 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
696 [-]: TEST      R49 0        ; if not R49 then PC := 712
697 [-]: JMP       712          ; PC := 712
698 [-]: GETGLOBAL R49 K16      ; R49 := _T
699 [-]: GETTABLE  R49 R49 K91  ; R49 := R49["CachedCellMissions"]
700 [-]: TEST      R49 0        ; if not R49 then PC := 712
701 [-]: JMP       712          ; PC := 712
702 [-]: GETGLOBAL R49 K16      ; R49 := _T
703 [-]: GETTABLE  R49 R49 K91  ; R49 := R49["CachedCellMissions"]
704 [-]: GETGLOBAL R50 K2       ; R50 := 0x64fb1586
705 [-]: GETTABLE  R51 R1 K3    ; R51 := R1["baseNodeName"]
706 [-]: CALL      R50 2 2      ; R50 := R50(R51)
707 [-]: GETTABLE  R49 R49 R50  ; R49 := R49[R50]
708 [-]: TEST      R49 0        ; if not R49 then PC := 782
709 [-]: JMP       782          ; PC := 782
710 [-]: GETTABLE  R10 R49 K19  ; R10 := R49["mMissionInfo"]
711 [-]: JMP       782          ; PC := 782
712 [-]: GETGLOBAL R50 K5       ; R50 := 0x7f5022cf
713 [-]: GETTABLE  R50 R50 K6   ; R82 := R50[0xa5c556b9]
714 [-]: MOVE      R51 R3       ; R51 := R3
715 [-]: GETGLOBAL R52 K92      ; R52 := ELITE_ALERT_TAG
716 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
717 [-]: TEST      R50 0        ; if not R50 then PC := 738
718 [-]: JMP       738          ; PC := 738
719 [-]: GETGLOBAL R50 K16      ; R50 := _T
720 [-]: GETTABLE  R50 R50 K93  ; R50 := R50["CachedEliteAlertMissions"]
721 [-]: TEST      R50 0        ; if not R50 then PC := 782
722 [-]: JMP       782          ; PC := 782
723 [-]: GETGLOBAL R50 K22      ; R50 := 0x603636ad
724 [-]: LOADK     R51 K94      ; R51 := "/Lotus/Language/Menu/AlertHardMode"
725 [-]: LOADNIL   R52 R52      ; R52 := nil
726 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
727 [-]: MOVE      R12 R50      ; R12 := R50
728 [-]: GETGLOBAL R50 K16      ; R50 := _T
729 [-]: GETTABLE  R50 R50 K93  ; R50 := R50["CachedEliteAlertMissions"]
730 [-]: GETGLOBAL R51 K2       ; R51 := 0x64fb1586
731 [-]: GETTABLE  R52 R1 K3    ; R52 := R1["baseNodeName"]
732 [-]: CALL      R51 2 2      ; R51 := R51(R52)
733 [-]: GETTABLE  R50 R50 R51  ; R50 := R50[R51]
734 [-]: TEST      R50 0        ; if not R50 then PC := 782
735 [-]: JMP       782          ; PC := 782
736 [-]: GETTABLE  R10 R50 K19  ; R10 := R50["mMissionInfo"]
737 [-]: JMP       782          ; PC := 782
738 [-]: GETGLOBAL R51 K5       ; R51 := 0x7f5022cf
739 [-]: GETTABLE  R51 R51 K6   ; R82 := R51[0xa5c556b9]
740 [-]: MOVE      R52 R3       ; R52 := R3
741 [-]: GETGLOBAL R53 K95      ; R53 := HARD_DAILY_TAG
742 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
743 [-]: TEST      R51 0        ; if not R51 then PC := 770
744 [-]: JMP       770          ; PC := 770
745 [-]: GETGLOBAL R51 K16      ; R51 := _T
746 [-]: GETTABLE  R51 R51 K96  ; R51 := R51["CachedHardModeDailyMissions"]
747 [-]: TEST      R51 0        ; if not R51 then PC := 770
748 [-]: JMP       770          ; PC := 770
749 [-]: GETGLOBAL R51 K22      ; R51 := 0x603636ad
750 [-]: LOADK     R52 K97      ; R52 := "/Lotus/Language/Labels/SteelPathDaily"
751 [-]: LOADNIL   R53 R53      ; R53 := nil
752 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
753 [-]: MOVE      R12 R51      ; R12 := R51
754 [-]: GETGLOBAL R51 K16      ; R51 := _T
755 [-]: GETTABLE  R51 R51 K96  ; R51 := R51["CachedHardModeDailyMissions"]
756 [-]: GETGLOBAL R52 K2       ; R52 := 0x64fb1586
757 [-]: GETTABLE  R53 R1 K3    ; R53 := R1["baseNodeName"]
758 [-]: CALL      R52 2 2      ; R52 := R52(R53)
759 [-]: GETTABLE  R51 R51 R52  ; R51 := R51[R52]
760 [-]: TEST      R51 0        ; if not R51 then PC := 782
761 [-]: JMP       782          ; PC := 782
762 [-]: GETGLOBAL R51 K16      ; R51 := _T
763 [-]: GETTABLE  R51 R51 K96  ; R51 := R51["CachedHardModeDailyMissions"]
764 [-]: GETGLOBAL R52 K2       ; R52 := 0x64fb1586
765 [-]: GETTABLE  R53 R1 K3    ; R53 := R1["baseNodeName"]
766 [-]: CALL      R52 2 2      ; R52 := R52(R53)
767 [-]: GETTABLE  R51 R51 R52  ; R51 := R51[R52]
768 [-]: GETTABLE  R10 R51 K98  ; R10 := R51["mission"]
769 [-]: JMP       782          ; PC := 782
770 [-]: GETGLOBAL R51 K5       ; R51 := 0x7f5022cf
771 [-]: GETTABLE  R51 R51 K6   ; R82 := R51[0xa5c556b9]
772 [-]: MOVE      R52 R3       ; R52 := R3
773 [-]: GETGLOBAL R53 K7       ; R53 := HARD_MODE_TAG
774 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
775 [-]: TEST      R51 0        ; if not R51 then PC := 782
776 [-]: JMP       782          ; PC := 782
777 [-]: GETGLOBAL R51 K22      ; R51 := 0x603636ad
778 [-]: LOADK     R52 K89      ; R52 := "/Lotus/Language/Labels/HardMode"
779 [-]: LOADNIL   R53 R53      ; R53 := nil
780 [-]: CALL      R51 3 2      ; R51 := R51(R52,R53)
781 [-]: MOVE      R12 R51      ; R12 := R51
782 [-]: TEST      R10 1        ; if R10 then PC := 899
783 [-]: JMP       899          ; PC := 899
784 [-]: TEST      R2 0         ; if not R2 then PC := 789
785 [-]: JMP       789          ; PC := 789
786 [-]: GETGLOBAL R51 K12      ; R51 := 0x3d106989
787 [-]: LOADK     R52 K99      ; R52 := "Using sector data"
788 [-]: CALL      R51 2 1      ; R51(R52)
789 [-]: MOVE      R10 R9       ; R10 := R9
790 [-]: SETTABLE  R10 K100 R14 ; R10["nightmare"] := R14
791 [-]: SETTABLE  R10 K101 R15 ; R10["voidStorm"] := R15
792 [-]: TEST      R15 0        ; if not R15 then PC := 821
793 [-]: JMP       821          ; PC := 821
794 [-]: GETGLOBAL R51 K16      ; R51 := _T
795 [-]: GETTABLE  R51 R51 K102 ; R51 := R51["CachedVoidStormMissions"]
796 [-]: EQ        1 R51 K8     ; if R51 == nil then PC := 821
797 [-]: JMP       821          ; PC := 821
798 [-]: GETGLOBAL R51 K16      ; R51 := _T
799 [-]: GETTABLE  R51 R51 K102 ; R51 := R51["CachedVoidStormMissions"]
800 [-]: GETGLOBAL R52 K2       ; R52 := 0x64fb1586
801 [-]: GETTABLE  R53 R1 K3    ; R53 := R1["baseNodeName"]
802 [-]: CALL      R52 2 2      ; R52 := R52(R53)
803 [-]: GETTABLE  R51 R51 R52  ; R51 := R51[R52]
804 [-]: TEST      R51 0        ; if not R51 then PC := 821
805 [-]: JMP       821          ; PC := 821
806 [-]: GETTABLE  R52 R51 K104 ; R52 := R51["tier"]
807 [-]: SETTABLE  R10 K103 R52 ; R10["activeMissionTag"] := R52
808 [-]: GETTABLE  R52 R51 K105 ; R52 := R51["enemyLevelIncrease"]
809 [-]: GETTABLE  R53 R10 K74  ; R53 := R10["minEnemyLevel"]
810 [-]: ADD       R53 R53 R52  ; R53 := R53 + R52
811 [-]: SETTABLE  R10 K74 R53  ; R10["minEnemyLevel"] := R53
812 [-]: GETTABLE  R53 R10 K106 ; R53 := R10["maxEnemyLevel"]
813 [-]: ADD       R53 R53 R52  ; R53 := R53 + R52
814 [-]: SETTABLE  R10 K106 R53 ; R10["maxEnemyLevel"] := R53
815 [-]: GETTABLE  R53 R10 K107 ; R53 := R10["minSpaceEnemyLevel"]
816 [-]: ADD       R53 R53 R52  ; R53 := R53 + R52
817 [-]: SETTABLE  R10 K107 R53 ; R10["minSpaceEnemyLevel"] := R53
818 [-]: GETTABLE  R53 R10 K108 ; R53 := R10["maxSpaceEnemyLevel"]
819 [-]: ADD       R53 R53 R52  ; R53 := R53 + R52
820 [-]: SETTABLE  R10 K108 R53 ; R10["maxSpaceEnemyLevel"] := R53
821 [-]: TEST      R14 0        ; if not R14 then PC := 827
822 [-]: JMP       827          ; PC := 827
823 [-]: GETTABLE  R53 R10 K109 ; R53 := R10["missionType"]
824 [-]: EQ        0 R53 K110   ; if R53 ~= 8.000000 then PC := 827
825 [-]: JMP       827          ; PC := 827
826 [-]: SETTABLE  R10 K111 K112; R10["maxWaveNum"] := 10.000000
827 [-]: GETTABLE  R53 R10 K113 ; R53 := R10["archwingRequired"]
828 [-]: TEST      R53 1        ; if R53 then PC := 885
829 [-]: JMP       885          ; PC := 885
830 [-]: GETGLOBAL R53 K0       ; R53 := 0x7b998233
831 [-]: GETTABLE  R54 R10 K114 ; R54 := R10["keyChainName"]
832 [-]: CALL      R53 2 2      ; R53 := R53(R54)
833 [-]: TEST      R53 0        ; if not R53 then PC := 885
834 [-]: JMP       885          ; PC := 885
835 [-]: GETGLOBAL R53 K0       ; R53 := 0x7b998233
836 [-]: GETTABLE  R54 R10 K115 ; R54 := R10["levelOverride"]
837 [-]: CALL      R53 2 2      ; R53 := R53(R54)
838 [-]: TEST      R53 1        ; if R53 then PC := 885
839 [-]: JMP       885          ; PC := 885
840 [-]: GETGLOBAL R53 K5       ; R53 := 0x7f5022cf
841 [-]: GETTABLE  R53 R53 K6   ; R82 := R53[0xa5c556b9]
842 [-]: GETGLOBAL R54 K2       ; R54 := 0x64fb1586
843 [-]: GETTABLE  R55 R10 K115 ; R55 := R10["levelOverride"]
844 [-]: SELF      R55 R55 K116 ; R56 := R55; R55 := R55[0xed4e0128]
845 [-]: CALL      R55 2 0      ; R55,... := R55(R56)
846 [-]: CALL      R54 0 2      ; R54 := R54(R55,...)
847 [-]: LOADK     R55 K117     ; R55 := "Zariman"
848 [-]: CALL      R53 3 2      ; R53 := R53(R54,R55)
849 [-]: EQ        0 R53 K8     ; if R53 ~= nil then PC := 885
850 [-]: JMP       885          ; PC := 885
851 [-]: LOADNIL   R53 R53      ; R53 := nil
852 [-]: GETGLOBAL R54 K118     ; R54 := 0xe7f2b02f
853 [-]: SELF      R54 R54 K119 ; R55 := R54; R54 := R54[0x6d0aa187]
854 [-]: CALL      R54 2 2      ; R54 := R54(R55)
855 [-]: GETGLOBAL R55 K59      ; R55 := 0xcfc01047
856 [-]: MOVE      R56 R54      ; R56 := R54
857 [-]: CALL      R55 2 4      ; R55,R56,R57 := R55(R56)
858 [-]: JMP       883          ; PC := 883
859 [-]: GETGLOBAL R60 K120     ; R60 := cjson
860 [-]: GETTABLE  R60 R60 K121 ; R82 := R60[0x7ab914d8]
861 [-]: GETTABLE  R61 R59 K122 ; R61 := R59["loadout"]
862 [-]: CALL      R60 2 2      ; R60 := R60(R61)
863 [-]: TEST      R60 0        ; if not R60 then PC := 883
864 [-]: JMP       883          ; PC := 883
865 [-]: GETTABLE  R61 R60 K123 ; R61 := R60["Nemesis"]
866 [-]: TEST      R61 1        ; if R61 then PC := 883
867 [-]: JMP       883          ; PC := 883
868 [-]: GETTABLE  R61 R10 K51  ; R61 := R10["faction"]
869 [-]: EQ        0 R61 K124   ; if R61 ~= 0.000000 then PC := 873
870 [-]: JMP       873          ; PC := 873
871 [-]: GETUPVAL  R53 U3       ; R53 := U3
872 [-]: JMP       877          ; PC := 877
873 [-]: GETTABLE  R61 R10 K51  ; R61 := R10["faction"]
874 [-]: EQ        0 R61 K10    ; if R61 ~= 1.000000 then PC := 877
875 [-]: JMP       877          ; PC := 877
876 [-]: GETUPVAL  R53 U4       ; R53 := U4
877 [-]: TEST      R53 0        ; if not R53 then PC := 883
878 [-]: JMP       883          ; PC := 883
879 [-]: SELF      R61 R10 K125 ; R62 := R10; R61 := R10[0x5c0d8c92]
880 [-]: MOVE      R63 R53      ; R63 := R53
881 [-]: CALL      R61 3 1      ; R61(R62,R63)
882 [-]: JMP       885          ; PC := 885
883 [-]: TFORLOOP  R55 2        ; R58,R59 :=  R55(R56,R57); if R58 ~= nil then begin PC = 859; R57 := R58 end
884 [-]: JMP       859          ; PC := 859
885 [-]: GETTABLE  R61 R8 K1    ; R61 := R8["name"]
886 [-]: GETGLOBAL R62 K126     ; R62 := ENTRATI_LANDSCAPE_NODE_TAG
887 [-]: EQ        0 R61 R62    ; if R61 ~= R62 then PC := 899
888 [-]: JMP       899          ; PC := 899
889 [-]: GETUPVAL  R61 U5       ; R61 := U5
890 [-]: CALL      R61 1 2      ; R61 := R61()
891 [-]: TEST      R61 1        ; if R61 then PC := 899
892 [-]: JMP       899          ; PC := 899
893 [-]: GETGLOBAL R61 K0       ; R61 := 0x7b998233
894 [-]: GETGLOBAL R62 K127     ; R62 := 0x83f4e77c
895 [-]: CALL      R61 2 2      ; R61 := R61(R62)
896 [-]: TEST      R61 1        ; if R61 then PC := 899
897 [-]: JMP       899          ; PC := 899
898 [-]: SETTABLE  R10 K128 K129; R10["soloMode"] := true
899 [-]: GETTABLE  R61 R8 K130  ; R61 := R8["missionTag"]
900 [-]: GETGLOBAL R62 K11      ; R62 := 0x0469f296
901 [-]: LOADK     R63 K131     ; R63 := "RECONSTRUCTION"
902 [-]: CALL      R62 2 2      ; R62 := R62(R63)
903 [-]: EQ        0 R61 R62    ; if R61 ~= R62 then PC := 936
904 [-]: JMP       936          ; PC := 936
905 [-]: GETGLOBAL R61 K16      ; R61 := _T
906 [-]: GETTABLE  R61 R61 K132 ; R61 := R61["CachedConstructionProjects"]
907 [-]: TEST      R61 0        ; if not R61 then PC := 936
908 [-]: JMP       936          ; PC := 936
909 [-]: GETGLOBAL R61 K59      ; R61 := 0xcfc01047
910 [-]: GETGLOBAL R62 K16      ; R62 := _T
911 [-]: GETTABLE  R62 R62 K132 ; R62 := R62["CachedConstructionProjects"]
912 [-]: CALL      R61 2 4      ; R61,R62,R63 := R61(R62)
913 [-]: JMP       934          ; PC := 934
914 [-]: GETTABLE  R66 R65 K133 ; R66 := R65["info"]
915 [-]: GETTABLE  R66 R66 K134 ; R66 := R66["mNode"]
916 [-]: GETTABLE  R67 R1 K3    ; R67 := R1["baseNodeName"]
917 [-]: EQ        0 R66 R67    ; if R66 ~= R67 then PC := 934
918 [-]: JMP       934          ; PC := 934
919 [-]: GETTABLE  R66 R65 K135 ; R66 := R65["progress"]
920 [-]: EQ        0 R66 K10    ; if R66 ~= 1.000000 then PC := 934
921 [-]: JMP       934          ; PC := 934
922 [-]: GETGLOBAL R66 K22      ; R66 := 0x603636ad
923 [-]: GETTABLE  R67 R8 K136  ; R67 := R8["locTag"]
924 [-]: SELF      R67 R67 K137 ; R68 := R67; R67 := R67[0x6d604ba7]
925 [-]: CALL      R67 2 2      ; R67 := R67(R68)
926 [-]: LOADNIL   R68 R68      ; R68 := nil
927 [-]: CALL      R66 3 2      ; R66 := R66(R67,R68)
928 [-]: GETGLOBAL R67 K22      ; R67 := 0x603636ad
929 [-]: LOADK     R68 K138     ; R68 := "/Lotus/Language/RelayReconstruction/ReconstructionSiteAttack"
930 [-]: NEWTABLE  R69 0 1      ; R69 := {}
931 [-]: SETTABLE  R69 K139 R66 ; R69["LOCATION"] := R66
932 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
933 [-]: MOVE      R11 R67      ; R11 := R67
934 [-]: TFORLOOP  R61 2        ; R64,R65 :=  R61(R62,R63); if R64 ~= nil then begin PC = 914; R63 := R64 end
935 [-]: JMP       914          ; PC := 914
936 [-]: GETTABLE  R67 R8 K1    ; R67 := R8["name"]
937 [-]: GETGLOBAL R68 K140     ; R68 := APARTMENT_NODE_TAG
938 [-]: EQ        0 R67 R68    ; if R67 ~= R68 then PC := 945
939 [-]: JMP       945          ; PC := 945
940 [-]: GETGLOBAL R67 K22      ; R67 := 0x603636ad
941 [-]: LOADK     R68 K141     ; R68 := "/Lotus/Language/Zariman/ZarimanApartment"
942 [-]: NEWTABLE  R69 0 0      ; R69 := {}
943 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
944 [-]: MOVE      R11 R67      ; R11 := R67
945 [-]: SETTABLE  R10 K142 K8  ; R10["levelKeyName"] := nil
946 [-]: TEST      R11 1        ; if R11 then PC := 955
947 [-]: JMP       955          ; PC := 955
948 [-]: GETGLOBAL R67 K22      ; R67 := 0x603636ad
949 [-]: GETTABLE  R68 R8 K136  ; R68 := R8["locTag"]
950 [-]: SELF      R68 R68 K137 ; R69 := R68; R68 := R68[0x6d604ba7]
951 [-]: CALL      R68 2 2      ; R68 := R68(R69)
952 [-]: LOADNIL   R69 R69      ; R69 := nil
953 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
954 [-]: MOVE      R11 R67      ; R11 := R67
955 [-]: GETTABLE  R13 R7 K1    ; R13 := R7["name"]
956 [-]: JMP       1100         ; PC := 1100
957 [-]: TEST      R2 0         ; if not R2 then PC := 962
958 [-]: JMP       962          ; PC := 962
959 [-]: GETGLOBAL R67 K12      ; R67 := 0x3d106989
960 [-]: LOADK     R68 K143     ; R68 := "No sector"
961 [-]: CALL      R67 2 1      ; R67(R68)
962 [-]: EQ        0 R3 K144    ; if R3 ~= "Photobooth" then PC := 981
963 [-]: JMP       981          ; PC := 981
964 [-]: GETGLOBAL R67 K67      ; R67 := 0x6c97a788
965 [-]: GETTABLE  R67 R67 K145 ; R82 := R67[0x6e0e9f85]
966 [-]: CALL      R67 1 2      ; R67 := R67()
967 [-]: MOVE      R10 R67      ; R10 := R67
968 [-]: GETGLOBAL R67 K147     ; R67 := 0x7ed0a956
969 [-]: LOADK     R68 K148     ; R68 := "/Lotus/Types/GameRules/LotusPhotoBoothGameRules"
970 [-]: CALL      R67 2 2      ; R67 := R67(R68)
971 [-]: SETTABLE  R10 K146 R67 ; R10["gameRules"] := R67
972 [-]: GETGLOBAL R67 K22      ; R67 := 0x603636ad
973 [-]: LOADK     R68 K149     ; R68 := "/Lotus/Language/Menu/Loadout_Photobooth"
974 [-]: LOADNIL   R69 R69      ; R69 := nil
975 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
976 [-]: MOVE      R11 R67      ; R11 := R67
977 [-]: MOVE      R67 R10      ; R67 := R10
978 [-]: MOVE      R68 R11      ; R68 := R11
979 [-]: RETURN    R67 3        ; return R67,R68
980 [-]: JMP       999          ; PC := 999
981 [-]: EQ        0 R3 K150    ; if R3 ~= "Simulacrum" then PC := 999
982 [-]: JMP       999          ; PC := 999
983 [-]: GETGLOBAL R67 K67      ; R67 := 0x6c97a788
984 [-]: GETTABLE  R67 R67 K145 ; R82 := R67[0x6e0e9f85]
985 [-]: CALL      R67 1 2      ; R67 := R67()
986 [-]: MOVE      R10 R67      ; R10 := R67
987 [-]: GETGLOBAL R67 K147     ; R67 := 0x7ed0a956
988 [-]: LOADK     R68 K151     ; R68 := "/Lotus/Types/GameRules/LotusDangerRoomGameRules"
989 [-]: CALL      R67 2 2      ; R67 := R67(R68)
990 [-]: SETTABLE  R10 K146 R67 ; R10["gameRules"] := R67
991 [-]: GETGLOBAL R67 K22      ; R67 := 0x603636ad
992 [-]: LOADK     R68 K152     ; R68 := "/Lotus/Language/Game/DangerRoomConsole"
993 [-]: LOADNIL   R69 R69      ; R69 := nil
994 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
995 [-]: MOVE      R11 R67      ; R11 := R67
996 [-]: MOVE      R67 R10      ; R67 := R10
997 [-]: MOVE      R68 R11      ; R68 := R11
998 [-]: RETURN    R67 3        ; return R67,R68
999 [-]: GETGLOBAL R67 K5       ; R67 := 0x7f5022cf
1000 [-]: GETTABLE  R67 R67 K6   ; R82 := R67[0xa5c556b9]
1001 [-]: MOVE      R68 R3       ; R68 := R3
1002 [-]: GETGLOBAL R69 K153     ; R69 := KEY_TAG
1003 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
1004 [-]: EQ        1 R67 K8     ; if R67 == nil then PC := 1075
1005 [-]: JMP       1075         ; PC := 1075
1006 [-]: TEST      R2 0         ; if not R2 then PC := 1011
1007 [-]: JMP       1011         ; PC := 1011
1008 [-]: GETGLOBAL R68 K12      ; R68 := 0x3d106989
1009 [-]: LOADK     R69 K154     ; R69 := "Key index found"
1010 [-]: CALL      R68 2 1      ; R68(R69)
1011 [-]: GETGLOBAL R68 K5       ; R68 := 0x7f5022cf
1012 [-]: GETTABLE  R68 R68 K9   ; R82 := R68[0x1a94c9cc]
1013 [-]: MOVE      R69 R3       ; R69 := R3
1014 [-]: LOADK     R70 1        ; R70 := 1.000000
1015 [-]: SUB       R71 R67 K10  ; R71 := R67 - 1.000000
1016 [-]: CALL      R68 4 2      ; R68 := R68(R69,R70,R71)
1017 [-]: GETGLOBAL R69 K86      ; R69 := 0xb009bbc6
1018 [-]: MOVE      R70 R68      ; R70 := R68
1019 [-]: CALL      R69 2 2      ; R69 := R69(R70)
1020 [-]: GETGLOBAL R70 K0       ; R70 := 0x7b998233
1021 [-]: MOVE      R71 R69      ; R71 := R69
1022 [-]: CALL      R70 2 2      ; R70 := R70(R71)
1023 [-]: TEST      R70 1        ; if R70 then PC := 1075
1024 [-]: JMP       1075         ; PC := 1075
1025 [-]: SELF      R70 R69 K155 ; R71 := R69; R70 := R69[0x6c053909]
1026 [-]: CALL      R70 2 2      ; R70 := R70(R71)
1027 [-]: TEST      R2 0         ; if not R2 then PC := 1032
1028 [-]: JMP       1032         ; PC := 1032
1029 [-]: GETGLOBAL R71 K12      ; R71 := 0x3d106989
1030 [-]: LOADK     R72 K156     ; R72 := "Getting mission from key"
1031 [-]: CALL      R71 2 1      ; R71(R72)
1032 [-]: SELF      R71 R69 K157 ; R72 := R69; R71 := R69[0xef893aec]
1033 [-]: CALL      R71 2 2      ; R71 := R71(R72)
1034 [-]: MOVE      R10 R71      ; R10 := R71
1035 [-]: GETGLOBAL R71 K147     ; R71 := 0x7ed0a956
1036 [-]: MOVE      R72 R68      ; R72 := R68
1037 [-]: CALL      R71 2 2      ; R71 := R71(R72)
1038 [-]: SETTABLE  R10 K142 R71 ; R10["levelKeyName"] := R71
1039 [-]: GETTABLE  R71 R1 K158  ; R71 := R1["quest"]
1040 [-]: EQ        1 R71 K8     ; if R71 == nil then PC := 1046
1041 [-]: JMP       1046         ; PC := 1046
1042 [-]: GETGLOBAL R71 K147     ; R71 := 0x7ed0a956
1043 [-]: GETTABLE  R72 R1 K158  ; R72 := R1["quest"]
1044 [-]: CALL      R71 2 2      ; R71 := R71(R72)
1045 [-]: SETTABLE  R10 K114 R71 ; R10["keyChainName"] := R71
1046 [-]: GETTABLE  R71 R1 K159  ; R71 := R1["difficulty"]
1047 [-]: EQ        1 R71 K8     ; if R71 == nil then PC := 1054
1048 [-]: JMP       1054         ; PC := 1054
1049 [-]: GETTABLE  R71 R1 K159  ; R71 := R1["difficulty"]
1050 [-]: LE        0 K124 R71   ; if 0.000000 > R71 then PC := 1054
1051 [-]: JMP       1054         ; PC := 1054
1052 [-]: GETTABLE  R71 R1 K159  ; R71 := R1["difficulty"]
1053 [-]: SETTABLE  R10 K159 R71 ; R10["difficulty"] := R71
1054 [-]: GETTABLE  R71 R10 K83  ; R71 := R10["uniqueName"]
1055 [-]: EQ        1 R71 K160   ; if R71 == "" then PC := 1063
1056 [-]: JMP       1063         ; PC := 1063
1057 [-]: GETGLOBAL R71 K22      ; R71 := 0x603636ad
1058 [-]: GETTABLE  R72 R10 K83  ; R72 := R10["uniqueName"]
1059 [-]: LOADBOOL  R73 0 0      ; R73 := false
1060 [-]: CALL      R71 3 2      ; R71 := R71(R72,R73)
1061 [-]: MOVE      R11 R71      ; R11 := R71
1062 [-]: JMP       1071         ; PC := 1071
1063 [-]: GETGLOBAL R71 K22      ; R71 := 0x603636ad
1064 [-]: GETGLOBAL R72 K2       ; R72 := 0x64fb1586
1065 [-]: SELF      R73 R69 K161 ; R74 := R69; R73 := R69[0xd3a9d01f]
1066 [-]: CALL      R73 2 0      ; R73,... := R73(R74)
1067 [-]: CALL      R72 0 2      ; R72 := R72(R73,...)
1068 [-]: LOADBOOL  R73 0 0      ; R73 := false
1069 [-]: CALL      R71 3 2      ; R71 := R71(R72,R73)
1070 [-]: MOVE      R11 R71      ; R11 := R71
1071 [-]: SELF      R71 R0 K162  ; R72 := R0; R71 := R0[0xc1dee03f]
1072 [-]: CALL      R71 2 2      ; R71 := R71(R72)
1073 [-]: GETTABLE  R71 R71 R70  ; R71 := R71[R70]
1074 [-]: GETTABLE  R13 R71 K1   ; R13 := R71["name"]
1075 [-]: TEST      R10 0        ; if not R10 then PC := 1100
1076 [-]: JMP       1100         ; PC := 1100
1077 [-]: GETTABLE  R71 R1 K163  ; R71 := R1["scenarioId"]
1078 [-]: TEST      R71 0        ; if not R71 then PC := 1090
1079 [-]: JMP       1090         ; PC := 1090
1080 [-]: GETTABLE  R71 R1 K163  ; R71 := R1["scenarioId"]
1081 [-]: SETTABLE  R10 K163 R71 ; R10["scenarioId"] := R71
1082 [-]: LOADNIL   R13 R13      ; R13 := nil
1083 [-]: GETGLOBAL R71 K22      ; R71 := 0x603636ad
1084 [-]: LOADK     R72 K164     ; R72 := "/Lotus/Language/G1Quests/FlotillaOperation"
1085 [-]: LOADNIL   R73 R73      ; R73 := nil
1086 [-]: CALL      R71 3 2      ; R71 := R71(R72,R73)
1087 [-]: LOADK     R72 K165     ; R72 := ": "
1088 [-]: MOVE      R73 R11      ; R73 := R11
1089 [-]: CONCAT    R11 R71 R73  ; R11 := R71 .. R72 .. R73
1090 [-]: GETTABLE  R71 R1 K32   ; R71 := R1["goalId"]
1091 [-]: TEST      R71 0        ; if not R71 then PC := 1095
1092 [-]: JMP       1095         ; PC := 1095
1093 [-]: GETTABLE  R71 R1 K32   ; R71 := R1["goalId"]
1094 [-]: SETTABLE  R10 K32 R71  ; R10["goalId"] := R71
1095 [-]: GETTABLE  R71 R1 K166  ; R71 := R1["metadata"]
1096 [-]: TEST      R71 0        ; if not R71 then PC := 1100
1097 [-]: JMP       1100         ; PC := 1100
1098 [-]: GETTABLE  R71 R1 K166  ; R71 := R1["metadata"]
1099 [-]: SETTABLE  R10 K166 R71 ; R10["metadata"] := R71
1100 [-]: TEST      R13 0        ; if not R13 then PC := 1127
1101 [-]: JMP       1127         ; PC := 1127
1102 [-]: TEST      R16 1        ; if R16 then PC := 1127
1103 [-]: JMP       1127         ; PC := 1127
1104 [-]: GETTABLE  R71 R10 K109 ; R71 := R10["missionType"]
1105 [-]: EQ        1 R71 K167   ; if R71 == 30.000000 then PC := 1127
1106 [-]: JMP       1127         ; PC := 1127
1107 [-]: GETUPVAL  R71 U1       ; R71 := U1
1108 [-]: GETTABLE  R71 R71 K73  ; R82 := R71[0x06d055f9]
1109 [-]: GETTABLE  R72 R10 K109 ; R72 := R10["missionType"]
1110 [-]: EQ        1 R72 K168   ; if R72 == 31.000000 then PC := 1113
1111 [-]: JMP       1113         ; PC := 1113
1112 [-]: LOADBOOL  R72 0 1      ; R72 := false; PC := 1113
1113 [-]: LOADBOOL  R72 1 0      ; R72 := true
1114 [-]: LOADK     R73 K169     ; R73 := "_SPACE"
1115 [-]: LOADK     R74 K160     ; R74 := ""
1116 [-]: CALL      R71 4 2      ; R71 := R71(R72,R73,R74)
1117 [-]: MOVE      R72 R11      ; R72 := R11
1118 [-]: LOADK     R73 K53      ; R73 := " ("
1119 [-]: GETGLOBAL R74 K22      ; R74 := 0x603636ad
1120 [-]: MOVE      R75 R13      ; R75 := R13
1121 [-]: MOVE      R76 R71      ; R76 := R71
1122 [-]: CONCAT    R75 R75 R76  ; R75 := R75 .. R76
1123 [-]: LOADBOOL  R76 0 0      ; R76 := false
1124 [-]: CALL      R74 3 2      ; R74 := R74(R75,R76)
1125 [-]: LOADK     R75 K57      ; R75 := ")"
1126 [-]: CONCAT    R11 R72 R75  ; R11 := R72 .. R73 .. R74 .. R75
1127 [-]: TEST      R12 0        ; if not R12 then PC := 1133
1128 [-]: JMP       1133         ; PC := 1133
1129 [-]: MOVE      R72 R11      ; R72 := R11
1130 [-]: LOADK     R73 K170     ; R73 := " - "
1131 [-]: MOVE      R74 R12      ; R74 := R12
1132 [-]: CONCAT    R11 R72 R74  ; R11 := R72 .. R73 .. R74
1133 [-]: TEST      R10 0        ; if not R10 then PC := 1139
1134 [-]: JMP       1139         ; PC := 1139
1135 [-]: MOVE      R72 R10      ; R72 := R10
1136 [-]: MOVE      R73 R11      ; R73 := R11
1137 [-]: RETURN    R72 3        ; return R72,R73
1138 [-]: JMP       1146         ; PC := 1146
1139 [-]: GETGLOBAL R72 K12      ; R72 := 0x3d106989
1140 [-]: LOADK     R73 K171     ; R73 := "GetMissionVoteInfo failed for "
1141 [-]: GETGLOBAL R74 K2       ; R74 := 0x64fb1586
1142 [-]: GETTABLE  R75 R1 K1    ; R75 := R1["name"]
1143 [-]: CALL      R74 2 2      ; R74 := R74(R75)
1144 [-]: CONCAT    R73 R73 R74  ; R73 := R73 .. R74
1145 [-]: CALL      R72 2 1      ; R72(R73)
1146 [-]: LOADNIL   R72 R74      ; R72 := R73 := R74 := nil
1147 [-]: RETURN    R72 4        ; return R72,R73,R74
1148 [-]: RETURN    R0 1         ; return 


; Function #405:
;
; Name:            
; Defined at line: 9258
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: EQ        0 R0 K1      ; if R0 ~= "" then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 6
  6 [-]: LOADBOOL  R2 1 0       ; R2 := true
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x0997dbe6
  8 [-]: LOADK     R4 0         ; R4 := 0.000000
  9 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 10 [-]: EQ        1 R1 R3      ; if R1 == R3 then PC := 26
 11 [-]: JMP       26           ; PC := 26
 12 [-]: TEST      R2 0         ; if not R2 then PC := 22
 13 [-]: JMP       22           ; PC := 22
 14 [-]: MOVE      R3 R0        ; R3 := R0
 15 [-]: LOADK     R4 K3        ; R4 := "_"
 16 [-]: GETGLOBAL R5 K4        ; R5 := 0x64fb1586
 17 [-]: MOVE      R6 R1        ; R6 := R1
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 20 [-]: RETURN    R3 2         ; return R3
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETGLOBAL R3 K4        ; R3 := 0x64fb1586
 23 [-]: MOVE      R4 R1        ; R4 := R1
 24 [-]: TAILCALL  R3 2 0       ; R3,... := R3(R4)
 25 [-]: RETURN    R3 0         ; return R3,...
 26 [-]: TEST      R2 0         ; if not R2 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 2         ; return R0
 29 [-]: LOADK     R3 K1        ; R3 := ""
 30 [-]: RETURN    R3 2         ; return R3
 31 [-]: RETURN    R0 1         ; return 


; Function #406:
;
; Name:            
; Defined at line: 9276
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 41
  5 [-]: JMP       41           ; PC := 41
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x41f4ba99]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
 10 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x62c81b76]
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0xb61abfd2]
 13 [-]: LOADK     R3 1         ; R3 := 1.000000
 14 [-]: LOADK     R4 0         ; R4 := 0.000000
 15 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 16 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 17 [-]: GETTABLE  R3 R1 K6     ; R3 := R1["mItemType"]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 0         ; if not R2 then PC := 41
 20 [-]: JMP       41           ; PC := 41
 21 [-]: GETUPVAL  R2 U0        ; R2 := U0
 22 [-]: CALL      R2 1 2       ; R2 := R2()
 23 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 1         ; if R3 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xa2880940]
 29 [-]: CALL      R3 2 1       ; R3(R4)
 30 [-]: GETUPVAL  R3 U1        ; R3 := U1
 31 [-]: GETTABLE  R3 R3 K8     ; R82 := R3[0xa9882367]
 32 [-]: LOADK     R4 K9        ; R4 := "MoaInteractionAction"
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 35 [-]: MOVE      R5 R3        ; R5 := R3
 36 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 37 [-]: TEST      R4 1         ; if R4 then PC := 41
 38 [-]: JMP       41           ; PC := 41
 39 [-]: SELF      R4 R3 K10    ; R5 := R3; R4 := R3[0xf4e253b6]
 40 [-]: CALL      R4 2 1       ; R4(R5)
 41 [-]: RETURN    R0 1         ; return 


; Function #407:
;
; Name:            
; Defined at line: 9296
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xb009bbc6
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mItemType"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1[0x67bc9d36]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mReqCredits"]
  7 [-]: SUB       R4 R2 R3     ; R4 := R2 - R3
  8 [-]: DIV       R4 R4 R2     ; R4 := R4 / R2
  9 [-]: MUL       R4 R4 K4     ; R4 := R4 * 0.200000
 10 [-]: SELF      R5 R1 K5     ; R6 := R1; R5 := R1[0xfc40d6a1]
 11 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 12 [-]: LOADK     R6 1         ; R6 := 1.000000
 13 [-]: LEN       R7 R5        ; R7 := # R5
 14 [-]: LOADK     R8 1         ; R8 := 1.000000
 15 [-]: FORPREP   R6 40        ; R6 -= R8; PC := 40
 16 [-]: LOADK     R10 1        ; R10 := 1.000000
 17 [-]: GETTABLE  R11 R0 K6    ; R11 := R0["mReqItems"]
 18 [-]: LEN       R11 R11      ; R11 := # R11
 19 [-]: LOADK     R12 1        ; R12 := 1.000000
 20 [-]: FORPREP   R10 39       ; R10 -= R12; PC := 39
 21 [-]: GETTABLE  R14 R0 K6    ; R14 := R0["mReqItems"]
 22 [-]: GETTABLE  R14 R14 R13  ; R14 := R14[R13]
 23 [-]: GETTABLE  R14 R14 K1   ; R14 := R14["mItemType"]
 24 [-]: GETTABLE  R15 R5 R9    ; R15 := R5[R9]
 25 [-]: GETTABLE  R15 R15 K1   ; R15 := R15["mItemType"]
 26 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 39
 27 [-]: JMP       39           ; PC := 39
 28 [-]: GETTABLE  R14 R0 K6    ; R14 := R0["mReqItems"]
 29 [-]: GETTABLE  R14 R14 R13  ; R14 := R14[R13]
 30 [-]: GETTABLE  R14 R14 K7   ; R14 := R14["mItemCount"]
 31 [-]: GETTABLE  R15 R5 R9    ; R15 := R5[R9]
 32 [-]: GETTABLE  R15 R15 K7   ; R15 := R15["mItemCount"]
 33 [-]: SUB       R15 R15 R14  ; R15 := R15 - R14
 34 [-]: GETTABLE  R16 R5 R9    ; R16 := R5[R9]
 35 [-]: GETTABLE  R16 R16 K7   ; R16 := R16["mItemCount"]
 36 [-]: DIV       R15 R15 R16  ; R15 := R15 / R16
 37 [-]: MUL       R15 R15 K4   ; R15 := R15 * 0.200000
 38 [-]: ADD       R4 R4 R15    ; R4 := R4 + R15
 39 [-]: FORLOOP   R10 21       ; R10 += R12; if R10 <= R11 then begin PC := 21; R13 := R10 end
 40 [-]: FORLOOP   R6 16        ; R6 += R8; if R6 <= R7 then begin PC := 16; R9 := R6 end
 41 [-]: RETURN    R4 2         ; return R4
 42 [-]: RETURN    R0 1         ; return 


; Function #408:
;
; Name:            
; Defined at line: 9316
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0x25d99d89
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xefee6c91]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: LT        0 R1 K3      ; if R1 >= 30.000000 then PC := 58
 10 [-]: JMP       58           ; PC := 58
 11 [-]: LOADNIL   R1 R2        ; R1 := R2 := nil
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0xc8802016
 13 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 14 [-]: LOADK     R5 K5        ; R5 := "truemaster"
 15 [-]: LOADK     R6 K6        ; R6 := "truemasteralt"
 16 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 17 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 18 [-]: JMP       56           ; PC := 56
 19 [-]: LOADK     R8 K7        ; R8 := ":"
 20 [-]: MOVE      R9 R7        ; R9 := R7
 21 [-]: LOADK     R10 K7       ; R10 := ":"
 22 [-]: CONCAT    R7 R8 R10    ; R7 := R8 .. R9 .. R10
 23 [-]: GETGLOBAL R8 K8        ; R8 := 0x7f5022cf
 24 [-]: GETTABLE  R8 R8 K9     ; R82 := R8[0xa5c556b9]
 25 [-]: GETGLOBAL R9 K10       ; R9 := 0x83e41587
 26 [-]: MOVE      R10 R0       ; R10 := R0
 27 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 28 [-]: MOVE      R10 R7       ; R10 := R7
 29 [-]: CALL      R8 3 3       ; R8,R9 := R8(R9,R10)
 30 [-]: MOVE      R2 R9        ; R2 := R9
 31 [-]: MOVE      R1 R8        ; R1 := R8
 32 [-]: EQ        1 R1 K11     ; if R1 == nil then PC := 56
 33 [-]: JMP       56           ; PC := 56
 34 [-]: GETGLOBAL R8 K8        ; R8 := 0x7f5022cf
 35 [-]: GETTABLE  R8 R8 K12    ; R82 := R8[0x66edf04f]
 36 [-]: MOVE      R9 R0        ; R9 := R0
 37 [-]: GETGLOBAL R10 K8       ; R10 := 0x7f5022cf
 38 [-]: GETTABLE  R10 R10 K13  ; R82 := R10[0x1a94c9cc]
 39 [-]: MOVE      R11 R0       ; R11 := R0
 40 [-]: MOVE      R12 R1       ; R12 := R1
 41 [-]: MOVE      R13 R2       ; R13 := R2
 42 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 43 [-]: LOADK     R11 K14      ; R11 := ":clem:"
 44 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 45 [-]: MOVE      R0 R8        ; R0 := R8
 46 [-]: GETGLOBAL R8 K8        ; R8 := 0x7f5022cf
 47 [-]: GETTABLE  R8 R8 K9     ; R82 := R8[0xa5c556b9]
 48 [-]: GETGLOBAL R9 K10       ; R9 := 0x83e41587
 49 [-]: MOVE      R10 R0       ; R10 := R0
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: MOVE      R10 R7       ; R10 := R7
 52 [-]: CALL      R8 3 3       ; R8,R9 := R8(R9,R10)
 53 [-]: MOVE      R2 R9        ; R2 := R9
 54 [-]: MOVE      R1 R8        ; R1 := R8
 55 [-]: JMP       32           ; PC := 32
 56 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 19; R5 := R6 end
 57 [-]: JMP       19           ; PC := 19
 58 [-]: RETURN    R0 2         ; return R0
 59 [-]: RETURN    R0 1         ; return 


; Function #409:
;
; Name:            
; Defined at line: 9331
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: TAILCALL  R1 2 0       ; R1,... := R1(R2)
  4 [-]: RETURN    R1 0         ; return R1,...
  5 [-]: RETURN    R0 1         ; return 


; Function #410:
;
; Name:            
; Defined at line: 9335
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        0 R2 K0      ; if R2 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: LOADBOOL  R2 0 0       ; R2 := false
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
  5 [-]: GETGLOBAL R4 K2        ; R4 := 0x25d99d89
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 1         ; if R3 then PC := 19
  8 [-]: JMP       19           ; PC := 19
  9 [-]: GETUPVAL  R3 U0        ; R3 := U0
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: MOVE      R0 R3        ; R0 := R3
 13 [-]: GETGLOBAL R3 K2        ; R3 := 0x25d99d89
 14 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x4ac9c4ef]
 15 [-]: MOVE      R5 R0        ; R5 := R0
 16 [-]: MOVE      R6 R1        ; R6 := R1
 17 [-]: MOVE      R7 R2        ; R7 := R2
 18 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 19 [-]: RETURN    R0 1         ; return 


; Function #411:
;
; Name:            
; Defined at line: 9346
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R1 K0        ; R1 := SLOT_TYPES
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: TEST      R1 1         ; if R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: LOADK     R1 K1        ; R1 := "NOT_RECOGNIZED"
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: RETURN    R0 1         ; return 


; Function #412:
;
; Name:            
; Defined at line: 9350
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x34291f5c
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x1467d5f4]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: TEST      R1 1         ; if R1 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R1 K2        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["ChatMaximized"]
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: LOADBOOL  R1 0 0       ; R1 := false
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: GETGLOBAL R1 K4        ; R1 := 0x7b998233
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 15 [-]: TEST      R1 0         ; if not R1 then PC := 19
 16 [-]: JMP       19           ; PC := 19
 17 [-]: LOADBOOL  R1 1 0       ; R1 := true
 18 [-]: RETURN    R1 2         ; return R1
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0x76ea806b
 20 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x3f3ae64c]
 21 [-]: LOADK     R3 0         ; R3 := 0.000000
 22 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 23 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 24 [-]: MOVE      R3 R1        ; R3 := R1
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 0         ; if not R2 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: LOADBOOL  R2 1 0       ; R2 := true
 29 [-]: RETURN    R2 2         ; return R2
 30 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1[0x40e9c32b]
 31 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 32 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 33 [-]: MOVE      R4 R2        ; R4 := R2
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: TEST      R3 0         ; if not R3 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: LOADBOOL  R3 1 0       ; R3 := true
 38 [-]: RETURN    R3 2         ; return R3
 39 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2[0x658fe518]
 40 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 41 [-]: EQ        0 R3 K9      ; if R3 ~= 2.000000 then PC := 49
 42 [-]: JMP       49           ; PC := 49
 43 [-]: SELF      R4 R0 K10    ; R5 := R0; R4 := R0[0xe4162eed]
 44 [-]: LOADK     R6 K11       ; R6 := "IsEndOfMatch"
 45 [-]: LOADK     R7 K12       ; R7 := ""
 46 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 47 [-]: NOT       R4 R4        ; R4 := not R4
 48 [-]: RETURN    R4 2         ; return R4
 49 [-]: EQ        1 R3 K13     ; if R3 == 1.000000 then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 52
 52 [-]: LOADBOOL  R4 1 0       ; R4 := true
 53 [-]: RETURN    R4 2         ; return R4
 54 [-]: RETURN    R0 1         ; return 


; Function #413:
;
; Name:            
; Defined at line: 9376
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x18d05d30]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 23
  5 [-]: JMP       23           ; PC := 23
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0x25d99d89
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf14b6e0b]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R1 K4        ; R1 := 0x34291f5c
 12 [-]: GETTABLE  R1 R1 K5     ; R82 := R1[0x8ee24660]
 13 [-]: LOADBOOL  R2 0 0       ; R2 := false
 14 [-]: CALL      R1 2 1       ; R1(R2)
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R1 K6        ; R1 := _T
 17 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["RailjackStopHullBreach"]
 18 [-]: TEST      R1 0         ; if not R1 then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETGLOBAL R1 K6        ; R1 := _T
 21 [-]: GETTABLE  R1 R1 K8     ; R82 := R1[0x6bc4e323]
 22 [-]: CALL      R1 1 1       ; R1()
 23 [-]: GETGLOBAL R1 K6        ; R1 := _T
 24 [-]: SETTABLE  R1 K9 R0     ; R1["AbortedRailjackMission"] := R0
 25 [-]: GETGLOBAL R1 K6        ; R1 := _T
 26 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["AbortedRailjackMission"]
 27 [-]: TEST      R1 0         ; if not R1 then PC := 41
 28 [-]: JMP       41           ; PC := 41
 29 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
 30 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x18d05d30]
 31 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 32 [-]: TEST      R1 0         ; if not R1 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R1 K10       ; R1 := 0xbe190284
 35 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0x751f061d]
 36 [-]: GETGLOBAL R3 K12       ; R3 := 0x0469f296
 37 [-]: LOADK     R4 K13       ; R4 := "RJMissionAborted"
 38 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 39 [-]: LOADK     R4 1         ; R4 := 1.000000
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: GETUPVAL  R1 U0        ; R1 := U0
 42 [-]: GETGLOBAL R2 K2        ; R2 := 0x25d99d89
 43 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 44 [-]: TEST      R1 0         ; if not R1 then PC := 49
 45 [-]: JMP       49           ; PC := 49
 46 [-]: GETGLOBAL R1 K6        ; R1 := _T
 47 [-]: SETTABLE  R1 K14 K15   ; R1["RailJackNextMissionNode"] := "ReplayQuest"
 48 [-]: JMP       90           ; PC := 90
 49 [-]: LOADK     R1 K16       ; R1 := "CrewBattleNodeDojo"
 50 [-]: GETGLOBAL R2 K17       ; R2 := 0x7b998233
 51 [-]: GETGLOBAL R3 K2        ; R3 := 0x25d99d89
 52 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 53 [-]: TEST      R2 1         ; if R2 then PC := 68
 54 [-]: JMP       68           ; PC := 68
 55 [-]: GETGLOBAL R2 K18       ; R2 := 0xe7f2b02f
 56 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0xca33534d]
 57 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 58 [-]: TEST      R2 0         ; if not R2 then PC := 68
 59 [-]: JMP       68           ; PC := 68
 60 [-]: GETGLOBAL R2 K2        ; R2 := 0x25d99d89
 61 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2[0xc8253330]
 62 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 63 [-]: GETGLOBAL R3 K21       ; R3 := 0x64fb1586
 64 [-]: GETTABLE  R4 R2 K22    ; R4 := R2["location"]
 65 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 66 [-]: LOADK     R4 K23       ; R4 := "_HUB"
 67 [-]: CONCAT    R1 R3 R4     ; R1 := R3 .. R4
 68 [-]: GETGLOBAL R3 K6        ; R3 := _T
 69 [-]: GETGLOBAL R4 K12       ; R4 := 0x0469f296
 70 [-]: MOVE      R5 R1        ; R5 := R1
 71 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 72 [-]: SETTABLE  R3 K14 R4    ; R3["RailJackNextMissionNode"] := R4
 73 [-]: GETGLOBAL R3 K6        ; R3 := _T
 74 [-]: GETGLOBAL R4 K10       ; R4 := 0xbe190284
 75 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0xf2deaf69]
 76 [-]: GETGLOBAL R6 K26       ; R6 := gLotusAttractModeGameRulesType
 77 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 78 [-]: SETTABLE  R3 K24 R4    ; R3["SeamlessRailJackTransition"] := R4
 79 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 80 [-]: SETTABLE  R3 K27 R1    ; R3["name"] := R1
 81 [-]: SETTABLE  R3 K28 K29   ; R3["difficulty"] := 0.000000
 82 [-]: GETGLOBAL R4 K30       ; R4 := cjson
 83 [-]: GETTABLE  R4 R4 K31    ; R82 := R4[0xb139d7bc]
 84 [-]: MOVE      R5 R3        ; R5 := R3
 85 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 86 [-]: GETGLOBAL R5 K18       ; R5 := 0xe7f2b02f
 87 [-]: SELF      R5 R5 K32    ; R6 := R5; R5 := R5[0xd8f4f9d0]
 88 [-]: MOVE      R7 R4        ; R7 := R4
 89 [-]: CALL      R5 3 1       ; R5(R6,R7)
 90 [-]: GETUPVAL  R5 U1        ; R5 := U1
 91 [-]: CALL      R5 1 2       ; R5 := R5()
 92 [-]: SELF      R6 R5 K33    ; R7 := R5; R6 := R5[0x3ad9ed31]
 93 [-]: GETGLOBAL R8 K12       ; R8 := 0x0469f296
 94 [-]: LOADK     R9 K34       ; R9 := "CrewShipGenericTunnel"
 95 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 96 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 97 [-]: GETGLOBAL R7 K10       ; R7 := 0xbe190284
 98 [-]: SELF      R7 R7 K35    ; R8 := R7; R7 := R7[0xd7d79b74]
 99 [-]: CALL      R7 2 2       ; R7 := R7(R8)
100 [-]: SELF      R8 R7 K36    ; R9 := R7; R8 := R7[0xb642d60b]
101 [-]: GETTABLE  R10 R6 K37   ; R10 := R6["mission"]
102 [-]: CALL      R8 3 1       ; R8(R9,R10)
103 [-]: GETGLOBAL R8 K17       ; R8 := 0x7b998233
104 [-]: GETGLOBAL R9 K6        ; R9 := _T
105 [-]: GETTABLE  R9 R9 K38    ; R9 := R9["ClearRailjackMissionState"]
106 [-]: CALL      R8 2 2       ; R8 := R8(R9)
107 [-]: TEST      R8 1         ; if R8 then PC := 112
108 [-]: JMP       112          ; PC := 112
109 [-]: GETGLOBAL R8 K6        ; R8 := _T
110 [-]: GETTABLE  R8 R8 K39    ; R82 := R8[0x7f11b15b]
111 [-]: CALL      R8 1 1       ; R8()
112 [-]: RETURN    R0 1         ; return 


; Function #414:
;
; Name:            
; Defined at line: 9420
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xbe190284
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xd7d79b74]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x89326c93
  5 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x78298275]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 25
 11 [-]: JMP       25           ; PC := 25
 12 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 25
 16 [-]: JMP       25           ; PC := 25
 17 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 18 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0[0x973c5b4d]
 19 [-]: SELF      R5 R1 K6     ; R6 := R1; R5 := R1[0xe79e7ef4]
 20 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 21 [-]: CALL      R3 0 0       ; R3,... := R3(R4,...)
 22 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 23 [-]: NOT       R2 R2        ; R2 := not R2
 24 [-]: JMP       27           ; PC := 27
 25 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 26
 26 [-]: LOADBOOL  R2 1 0       ; R2 := true
 27 [-]: RETURN    R2 2         ; return R2
 28 [-]: RETURN    R0 1         ; return 


; Function #415:
;
; Name:            
; Defined at line: 9426
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0xeb8fddd7
  2 [-]: CALL      R5 1 2       ; R5 := R5()
  3 [-]: TEST      R5 1         ; if R5 then PC := 11
  4 [-]: JMP       11           ; PC := 11
  5 [-]: GETGLOBAL R5 K1        ; R5 := 0x9ba7909f
  6 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5[0xbf9494fc]
  7 [-]: LOADK     R7 K3        ; R7 := "Graphics.UseWeGameCensoring"
  8 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
  9 [-]: TEST      R5 0         ; if not R5 then PC := 45
 10 [-]: JMP       45           ; PC := 45
 11 [-]: LOADK     R5 1         ; R5 := 1.000000
 12 [-]: LEN       R6 R1        ; R6 := # R1
 13 [-]: LOADK     R7 1         ; R7 := 1.000000
 14 [-]: FORPREP   R5 20        ; R5 -= R7; PC := 20
 15 [-]: SELF      R9 R0 K4     ; R10 := R0; R9 := R0[0xcddc3abb]
 16 [-]: SUB       R11 R8 K5    ; R11 := R8 - 1.000000
 17 [-]: GETTABLE  R12 R1 R8    ; R12 := R1[R8]
 18 [-]: LOADBOOL  R13 0 0      ; R13 := false
 19 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 20 [-]: FORLOOP   R5 15        ; R5 += R7; if R5 <= R6 then begin PC := 15; R8 := R5 end
 21 [-]: LOADK     R9 1         ; R9 := 1.000000
 22 [-]: LEN       R10 R2       ; R10 := # R2
 23 [-]: LOADK     R11 1        ; R11 := 1.000000
 24 [-]: FORPREP   R9 44        ; R9 -= R11; PC := 44
 25 [-]: GETGLOBAL R13 K6       ; R13 := 0xa421af95
 26 [-]: CALL      R13 1 2      ; R13 := R13()
 27 [-]: GETGLOBAL R14 K7       ; R14 := 0x00046924
 28 [-]: CALL      R14 1 2      ; R14 := R14()
 29 [-]: LEN       R15 R3       ; R15 := # R3
 30 [-]: LE        0 R12 R15    ; if R12 > R15 then PC := 33
 31 [-]: JMP       33           ; PC := 33
 32 [-]: GETTABLE  R13 R3 R12   ; R13 := R3[R12]
 33 [-]: LEN       R15 R4       ; R15 := # R4
 34 [-]: LE        0 R12 R15    ; if R12 > R15 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: GETTABLE  R14 R4 R12   ; R14 := R4[R12]
 37 [-]: SELF      R15 R0 K8    ; R16 := R0; R15 := R0[0x47901f07]
 38 [-]: GETTABLE  R17 R2 R12   ; R17 := R2[R12]
 39 [-]: GETGLOBAL R18 K9       ; R18 := 0x0469f296
 40 [-]: CALL      R18 1 2      ; R18 := R18()
 41 [-]: MOVE      R19 R13      ; R19 := R13
 42 [-]: MOVE      R20 R14      ; R20 := R14
 43 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
 44 [-]: FORLOOP   R9 25        ; R9 += R11; if R9 <= R10 then begin PC := 25; R12 := R9 end
 45 [-]: RETURN    R0 1         ; return 


; Function #416:
;
; Name:            
; Defined at line: 9447
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0x03f57322
  2 [-]: MOVE      R6 R0        ; R6 := R0
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: EQ        0 R5 K2      ; if R5 ~= 4.000000 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R5 K3        ; R5 := 0x25d99d89
  7 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5[0x98453b6b]
  8 [-]: MOVE      R7 R1        ; R7 := R1
  9 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 10 [-]: MOVE      R4 R5        ; R4 := R5
 11 [-]: GETGLOBAL R5 K5        ; R5 := 0x7b998233
 12 [-]: MOVE      R6 R2        ; R6 := R2
 13 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 14 [-]: TEST      R5 1         ; if R5 then PC := 28
 15 [-]: JMP       28           ; PC := 28
 16 [-]: LEN       R5 R3        ; R5 := # R3
 17 [-]: LT        0 K6 R5      ; if 0.000000 >= R5 then PC := 28
 18 [-]: JMP       28           ; PC := 28
 19 [-]: SELF      R5 R2 K7     ; R6 := R2; R5 := R2[0xf56f3887]
 20 [-]: MOVE      R7 R3        ; R7 := R3
 21 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 22 [-]: MOVE      R9 R1        ; R9 := R1
 23 [-]: GETGLOBAL R10 K8       ; R10 := 0x64fb1586
 24 [-]: MOVE      R11 R4       ; R11 := R4
 25 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 26 [-]: SETLIST   R8 0 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
 27 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 28 [-]: RETURN    R0 1         ; return 


; Function #417:
;
; Name:            
; Defined at line: 9457
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LEN       R2 R0        ; R2 := # R0
  2 [-]: LT        0 R2 K0      ; if R2 >= 0.000000 then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0xa53f5e12]
  6 [-]: GETGLOBAL R3 K2        ; R3 := 0x603636ad
  7 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Language/Menu/Chat_InvalidUser"
  8 [-]: NEWTABLE  R5 0 1       ; R5 := {}
  9 [-]: SETTABLE  R5 K4 R0     ; R5["USER"] := R0
 10 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 11 [-]: CALL      R2 0 1       ; R2(R3,...)
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R2 U1        ; R2 := U1
 14 [-]: CALL      R2 1 2       ; R2 := R2()
 15 [-]: CLOSURE   R3 0         ; R3 := closure(Function #417.1)
 16 [-]: MOVE      R0 R0        ; R0 := R0
 17 [-]: GETUPVAL  R0 U2        ; R0 := U2
 18 [-]: MOVE      R0 R2        ; R0 := R2
 19 [-]: MOVE      R0 R1        ; R0 := R1
 20 [-]: GETUPVAL  R0 U0        ; R0 := U0
 21 [-]: GETGLOBAL R4 K5        ; R4 := 0x25d99d89
 22 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0xfd6e8666]
 23 [-]: MOVE      R6 R0        ; R6 := R0
 24 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 25 [-]: TEST      R4 0         ; if not R4 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: MOVE      R4 R3        ; R4 := R3
 28 [-]: CALL      R4 1 1       ; R4()
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: CLOSURE   R4 1         ; R4 := closure(Function #417.2)
 31 [-]: GETUPVAL  R0 U0        ; R0 := U0
 32 [-]: MOVE      R0 R0        ; R0 := R0
 33 [-]: MOVE      R0 R3        ; R0 := R3
 34 [-]: SETTABLE  R2 K7 R4     ; R2["UtilWhoIsResult"] := R4
 35 [-]: GETGLOBAL R4 K8        ; R4 := 0xe7f2b02f
 36 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0x0b151d80]
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: GETGLOBAL R5 K10       ; R5 := 0x7b998233
 39 [-]: MOVE      R6 R4        ; R6 := R4
 40 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 41 [-]: TEST      R5 0         ; if not R5 then PC := 51
 42 [-]: JMP       51           ; PC := 51
 43 [-]: GETUPVAL  R5 U0        ; R5 := U0
 44 [-]: GETTABLE  R5 R5 K1     ; R82 := R5[0xa53f5e12]
 45 [-]: GETGLOBAL R6 K2        ; R6 := 0x603636ad
 46 [-]: LOADK     R7 K11       ; R7 := "/Lotus/Language/Menu/PurchaseFailure_UnknownError"
 47 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 48 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
 49 [-]: CALL      R5 0 1       ; R5(R6,...)
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: SELF      R5 R4 K12    ; R6 := R4; R5 := R4[0x00dc7406]
 52 [-]: MOVE      R7 R0        ; R7 := R0
 53 [-]: LOADK     R8 K7        ; R8 := "UtilWhoIsResult"
 54 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 55 [-]: RETURN    R0 1         ; return 


; Function #417.1:
;
; Name:            
; Defined at line: 9466
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25d99d89
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x273a2275]
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: TEST      R0 1         ; if R0 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x25d99d89
  8 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xe9f157d8]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: LEN       R0 R0        ; R0 := # R0
 11 [-]: LT        0 R0 K3      ; if R0 >= 100.000000 then PC := 23
 12 [-]: JMP       23           ; PC := 23
 13 [-]: GETUPVAL  R0 U1        ; R0 := U1
 14 [-]: GETGLOBAL R1 K4        ; R1 := 0x64fb1586
 15 [-]: LOADK     R2 4         ; R2 := 4.000000
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETUPVAL  R3 U2        ; R3 := U2
 19 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mMovie"]
 20 [-]: GETUPVAL  R4 U3        ; R4 := U3
 21 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 22 [-]: JMP       40           ; PC := 40
 23 [-]: GETUPVAL  R0 U2        ; R0 := U2
 24 [-]: CLOSURE   R1 0         ; R1 := closure(Function #417.1.1)
 25 [-]: GETUPVAL  R0 U1        ; R0 := U1
 26 [-]: GETUPVAL  R0 U0        ; R0 := U0
 27 [-]: GETUPVAL  R0 U2        ; R0 := U2
 28 [-]: GETUPVAL  R0 U3        ; R0 := U3
 29 [-]: SETTABLE  R0 K7 R1     ; R0["UtilOnIgnoreUser"] := R1
 30 [-]: GETUPVAL  R0 U4        ; R0 := U4
 31 [-]: GETTABLE  R0 R0 K8     ; R82 := R0[0xf616a184]
 32 [-]: GETGLOBAL R1 K9        ; R1 := 0x603636ad
 33 [-]: LOADK     R2 K10       ; R2 := "/Lotus/Language/Labels/IgnoreLimitReached"
 34 [-]: NEWTABLE  R3 0 1       ; R3 := {}
 35 [-]: GETUPVAL  R4 U0        ; R4 := U0
 36 [-]: SETTABLE  R3 K11 R4    ; R3["PLAYER_NAME"] := R4
 37 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 38 [-]: LOADK     R2 K7        ; R2 := "UtilOnIgnoreUser"
 39 [-]: CALL      R0 3 1       ; R0(R1,R2)
 40 [-]: RETURN    R0 1         ; return 


; Function #417.1.1:
;
; Name:            
; Defined at line: 9471
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETUPVAL  R4 U2        ; R4 := U2
  5 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["mMovie"]
  6 [-]: GETUPVAL  R5 U3        ; R5 := U3
  7 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #417.2:
;
; Name:            
; Defined at line: 9484
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 1         ; if R0 then PC := 13
  2 [-]: JMP       13           ; PC := 13
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K0     ; R82 := R2[0xa53f5e12]
  5 [-]: GETGLOBAL R3 K1        ; R3 := 0x603636ad
  6 [-]: LOADK     R4 K2        ; R4 := "/Lotus/Language/Chat/NoOnlineUser"
  7 [-]: NEWTABLE  R5 0 1       ; R5 := {}
  8 [-]: GETUPVAL  R6 U1        ; R6 := U1
  9 [-]: SETTABLE  R5 K3 R6     ; R5["USER"] := R6
 10 [-]: CALL      R3 3 0       ; R3,... := R3(R4,R5)
 11 [-]: CALL      R2 0 1       ; R2(R3,...)
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R2 U2        ; R2 := U2
 14 [-]: CALL      R2 1 1       ; R2()
 15 [-]: RETURN    R0 1         ; return 


; Function #418:
;
; Name:            
; Defined at line: 9500
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x89326c93
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xca9ea368]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADBOOL  R1 0 0       ; R1 := false
 10 [-]: RETURN    R1 2         ; return R1
 11 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0xed4e0128]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0x7f5022cf
 14 [-]: GETTABLE  R2 R2 K5     ; R82 := R2[0xa5c556b9]
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: LOADK     R4 K6        ; R4 := "EmptyLevel"
 17 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 18 [-]: EQ        0 R2 K7      ; if R2 ~= nil then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 21
 21 [-]: LOADBOOL  R2 1 0       ; R2 := true
 22 [-]: RETURN    R2 2         ; return R2
 23 [-]: RETURN    R0 1         ; return 


; Function #419:
;
; Name:            
; Defined at line: 9509
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xca9ea368]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 0         ; if not R2 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: LOADBOOL  R2 0 0       ; R2 := false
 10 [-]: RETURN    R2 2         ; return R2
 11 [-]: SELF      R2 R1 K3     ; R3 := R1; R2 := R1[0xed4e0128]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K4        ; R3 := 0x7f5022cf
 14 [-]: GETTABLE  R3 R3 K5     ; R82 := R3[0xa5c556b9]
 15 [-]: MOVE      R4 R2        ; R4 := R2
 16 [-]: LOADK     R5 K6        ; R5 := "TNWDrifterCamp"
 17 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 18 [-]: EQ        0 R3 K7      ; if R3 ~= nil then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: LOADBOOL  R3 0 1       ; R3 := false; PC := 21
 21 [-]: LOADBOOL  R3 1 0       ; R3 := true
 22 [-]: TEST      R3 0         ; if not R3 then PC := 63
 23 [-]: JMP       63           ; PC := 63
 24 [-]: EQ        1 R0 K7      ; if R0 == nil then PC := 63
 25 [-]: JMP       63           ; PC := 63
 26 [-]: GETGLOBAL R4 K8        ; R4 := 0x76ea806b
 27 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0x3f3ae64c]
 28 [-]: LOADK     R6 0         ; R6 := 0.000000
 29 [-]: LOADBOOL  R7 0 0       ; R7 := false
 30 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 31 [-]: GETGLOBAL R5 K2        ; R5 := 0x7b998233
 32 [-]: MOVE      R6 R4        ; R6 := R4
 33 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 34 [-]: TEST      R5 1         ; if R5 then PC := 61
 35 [-]: JMP       61           ; PC := 61
 36 [-]: SELF      R5 R4 K10    ; R6 := R4; R5 := R4[0x80563238]
 37 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 38 [-]: GETGLOBAL R6 K2        ; R6 := 0x7b998233
 39 [-]: MOVE      R7 R5        ; R7 := R5
 40 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 41 [-]: TEST      R6 1         ; if R6 then PC := 61
 42 [-]: JMP       61           ; PC := 61
 43 [-]: SELF      R6 R5 K11    ; R7 := R5; R6 := R5[0x25a6e75e]
 44 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 45 [-]: SELF      R6 R6 K12    ; R7 := R6; R6 := R6[0x8e7c3b5e]
 46 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 47 [-]: GETGLOBAL R7 K13       ; R7 := 0x7ed0a956
 48 [-]: LOADK     R8 K14       ; R8 := "/Lotus/Types/Keys/NewWarQuest/NewWarQuestKeyChain"
 49 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 50 [-]: EQ        1 R6 R7      ; if R6 == R7 then PC := 59
 51 [-]: JMP       59           ; PC := 59
 52 [-]: SELF      R6 R5 K15    ; R7 := R5; R6 := R5[0xcd57f819]
 53 [-]: LOADBOOL  R8 1 0       ; R8 := true
 54 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 55 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mBootLocation"]
 56 [-]: EQ        0 R6 K18     ; if R6 ~= 1.000000 then PC := 59
 57 [-]: JMP       59           ; PC := 59
 58 [-]: RETURN    R0 2         ; return R0
 59 [-]: NOT       R7 R0        ; R7 := not R0
 60 [-]: RETURN    R7 2         ; return R7
 61 [-]: LOADBOOL  R7 1 0       ; R7 := true
 62 [-]: RETURN    R7 2         ; return R7
 63 [-]: RETURN    R3 2         ; return R3
 64 [-]: RETURN    R0 1         ; return 


; Function #420:
;
; Name:            
; Defined at line: 9538
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #421:
;
; Name:            
; Defined at line: 9542
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x89326c93
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: LOADBOOL  R0 0 0       ; R0 := false
  7 [-]: RETURN    R0 2         ; return R0
  8 [-]: GETGLOBAL R0 K1        ; R0 := 0x89326c93
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xca9ea368]
 10 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 12 [-]: MOVE      R2 R0        ; R2 := R0
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 0         ; if not R1 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: LOADBOOL  R1 0 0       ; R1 := false
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0xed4e0128]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: GETGLOBAL R2 K4        ; R2 := 0x7f5022cf
 21 [-]: GETTABLE  R2 R2 K5     ; R82 := R2[0xa5c556b9]
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: LOADK     R4 K6        ; R4 := "ZarimanHubApartment"
 24 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 25 [-]: EQ        0 R2 K7      ; if R2 ~= nil then PC := 35
 26 [-]: JMP       35           ; PC := 35
 27 [-]: GETGLOBAL R2 K4        ; R2 := 0x7f5022cf
 28 [-]: GETTABLE  R2 R2 K5     ; R82 := R2[0xa5c556b9]
 29 [-]: MOVE      R3 R1        ; R3 := R1
 30 [-]: LOADK     R4 K8        ; R4 := "PBZarApartment"
 31 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 32 [-]: EQ        0 R2 K7      ; if R2 ~= nil then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: LOADBOOL  R2 0 1       ; R2 := false; PC := 35
 35 [-]: LOADBOOL  R2 1 0       ; R2 := true
 36 [-]: RETURN    R2 2         ; return R2
 37 [-]: RETURN    R0 1         ; return 


; Function #422:
;
; Name:            
; Defined at line: 9554
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 2       ; R0 := R0()
  3 [-]: RETURN    R0 2         ; return R0
  4 [-]: RETURN    R0 1         ; return 


; Function #423:
;
; Name:            
; Defined at line: 9558
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LOADBOOL  R2 0 0       ; R2 := false
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 21
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0xbe190284
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xf2deaf69]
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0x7ed0a956
  9 [-]: LOADK     R4 K3        ; R4 := "/Lotus/Types/GameRules/CampFirstLoadFrontEndGameRules"
 10 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 11 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 12 [-]: TEST      R1 0         ; if not R1 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: LOADK     R0 K4        ; R0 := "LoginCampPreview"
 15 [-]: EQ        0 R0 K5      ; if R0 ~= nil then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: LOADK     R0 K6        ; R0 := "LoginCamp"
 18 [-]: GETGLOBAL R1 K7        ; R1 := _T
 19 [-]: SETTABLE  R1 K8 K9     ; R1["SkipDropShipCinematic"] := true
 20 [-]: JMP       22           ; PC := 22
 21 [-]: LOADK     R0 K10       ; R0 := "Login"
 22 [-]: GETGLOBAL R1 K7        ; R1 := _T
 23 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["BackgroundMovie"]
 24 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0xf56f3887]
 25 [-]: LOADK     R3 K13       ; R3 := "PlayCameraTransition"
 26 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 27 [-]: MOVE      R5 R0        ; R5 := R0
 28 [-]: LOADK     R6 K14       ; R6 := 0.100000
 29 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
 30 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 31 [-]: RETURN    R0 1         ; return 


; Function #424:
;
; Name:            
; Defined at line: 9575
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0xc8802016
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: CALL      R1 2 4       ; R1,R2,R3 := R1(R2)
  9 [-]: JMP       17           ; PC := 17
 10 [-]: SELF      R6 R0 K2     ; R7 := R0; R6 := R0[0xf2deaf69]
 11 [-]: MOVE      R8 R5        ; R8 := R5
 12 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 13 [-]: TEST      R6 0         ; if not R6 then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: LOADBOOL  R6 1 0       ; R6 := true
 16 [-]: RETURN    R6 2         ; return R6
 17 [-]: TFORLOOP  R1 2         ; R4,R5 :=  R1(R2,R3); if R4 ~= nil then begin PC = 10; R3 := R4 end
 18 [-]: JMP       10           ; PC := 10
 19 [-]: LOADBOOL  R6 0 0       ; R6 := false
 20 [-]: RETURN    R6 2         ; return R6
 21 [-]: RETURN    R0 1         ; return 


; Function #425:
;
; Name:            
; Defined at line: 9586
; #Upvalues:       3
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  42

  1 [-]: LOADK     R4 K0        ; R4 := ""
  2 [-]: GETGLOBAL R5 K1        ; R5 := _T
  3 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["Notifications"]
  4 [-]: EQ        1 R5 K3      ; if R5 == nil then PC := 45
  5 [-]: JMP       45           ; PC := 45
  6 [-]: SELF      R6 R5 K4     ; R7 := R5; R6 := R5[0x9a6ca645]
  7 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  8 [-]: LEN       R7 R6        ; R7 := # R6
  9 [-]: LT        0 K5 R7      ; if 0.000000 >= R7 then PC := 45
 10 [-]: JMP       45           ; PC := 45
 11 [-]: NEWTABLE  R7 5 0       ; R7 := {}
 12 [-]: GETTABLE  R8 R5 K6     ; R8 := R5["ATTACK_POLARITY"]
 13 [-]: GETTABLE  R9 R5 K7     ; R9 := R5["DEFENSE_POLARITY"]
 14 [-]: GETTABLE  R10 R5 K8    ; R10 := R5["TACTIC_POLARITY"]
 15 [-]: GETTABLE  R11 R5 K9    ; R11 := R5["POWER_POLARITY"]
 16 [-]: GETTABLE  R12 R5 K10   ; R12 := R5["WARD_POLARITY"]
 17 [-]: SETLIST   R7 5 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 5
 18 [-]: GETTABLE  R8 R7 K11    ; R8 := R7[1.000000]
 19 [-]: GETGLOBAL R9 K12       ; R9 := 0x25d99d89
 20 [-]: SELF      R9 R9 K13    ; R10 := R9; R9 := R9[0xa340c0e2]
 21 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 22 [-]: LOADK     R10 1        ; R10 := 1.000000
 23 [-]: LEN       R11 R1       ; R11 := # R1
 24 [-]: LOADK     R12 1        ; R12 := 1.000000
 25 [-]: FORPREP   R10 31       ; R10 -= R12; PC := 31
 26 [-]: GETTABLE  R14 R1 R13   ; R14 := R1[R13]
 27 [-]: EQ        0 R14 R9     ; if R14 ~= R9 then PC := 31
 28 [-]: JMP       31           ; PC := 31
 29 [-]: GETTABLE  R8 R7 R13    ; R8 := R7[R13]
 30 [-]: JMP       32           ; PC := 32
 31 [-]: FORLOOP   R10 26       ; R10 += R12; if R10 <= R11 then begin PC := 26; R13 := R10 end
 32 [-]: GETTABLE  R14 R6 R8    ; R14 := R6[R8]
 33 [-]: EQ        1 R14 K3     ; if R14 == nil then PC := 45
 34 [-]: JMP       45           ; PC := 45
 35 [-]: GETTABLE  R14 R6 R8    ; R14 := R6[R8]
 36 [-]: GETTABLE  R14 R14 K14  ; R14 := R14["Value"]
 37 [-]: EQ        0 R14 K11    ; if R14 ~= 1.000000 then PC := 45
 38 [-]: JMP       45           ; PC := 45
 39 [-]: MOVE      R14 R4       ; R14 := R4
 40 [-]: GETGLOBAL R15 K15      ; R15 := 0x603636ad
 41 [-]: LOADK     R16 K16      ; R16 := "/Lotus/Language/ZarimanQuest/BeginWarningFocusDesc"
 42 [-]: NEWTABLE  R17 0 0      ; R17 := {}
 43 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
 44 [-]: CONCAT    R4 R14 R15   ; R4 := R14 .. R15
 45 [-]: GETGLOBAL R14 K12      ; R14 := 0x25d99d89
 46 [-]: SELF      R14 R14 K17  ; R15 := R14; R14 := R14[0x25a6e75e]
 47 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 48 [-]: GETGLOBAL R15 K18      ; R15 := 0x7b998233
 49 [-]: MOVE      R16 R14      ; R16 := R14
 50 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 51 [-]: TEST      R15 1        ; if R15 then PC := 110
 52 [-]: JMP       110          ; PC := 110
 53 [-]: GETGLOBAL R15 K12      ; R15 := 0x25d99d89
 54 [-]: SELF      R15 R15 K19  ; R16 := R15; R15 := R15[0x62c81b76]
 55 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 56 [-]: LOADK     R16 5        ; R16 := 5.000000
 57 [-]: GETTABLE  R17 R15 K21  ; R17 := R15["mOperatorType"]
 58 [-]: EQ        0 R17 K22    ; if R17 ~= 4.000000 then PC := 61
 59 [-]: JMP       61           ; PC := 61
 60 [-]: LOADK     R16 9        ; R16 := 9.000000
 61 [-]: SELF      R17 R14 K23  ; R18 := R14; R17 := R14[0x566259e1]
 62 [-]: MOVE      R19 R16      ; R19 := R16
 63 [-]: SELF      R20 R14 K24  ; R21 := R14; R20 := R14[0x4e457768]
 64 [-]: MOVE      R22 R16      ; R22 := R16
 65 [-]: CALL      R20 3 0      ; R20,... := R20(R21,R22)
 66 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
 67 [-]: SELF      R18 R17 K25  ; R19 := R17; R18 := R17[0x2abbe722]
 68 [-]: LOADK     R20 2        ; R20 := 2.000000
 69 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
 70 [-]: GETTABLE  R19 R18 K26  ; R19 := R18["mItemId"]
 71 [-]: GETTABLE  R19 R19 K27  ; R19 := R19["mId"]
 72 [-]: SELF      R20 R14 K28  ; R21 := R14; R20 := R14[0x99718a3d]
 73 [-]: CALL      R20 2 2      ; R20 := R20(R21)
 74 [-]: LOADNIL   R21 R21      ; R21 := nil
 75 [-]: LOADK     R22 1        ; R22 := 1.000000
 76 [-]: LEN       R23 R20      ; R23 := # R20
 77 [-]: LOADK     R24 1        ; R24 := 1.000000
 78 [-]: FORPREP   R22 86       ; R22 -= R24; PC := 86
 79 [-]: GETTABLE  R26 R20 R25  ; R26 := R20[R25]
 80 [-]: GETTABLE  R27 R26 K26  ; R27 := R26["mItemId"]
 81 [-]: GETTABLE  R27 R27 K27  ; R27 := R27["mId"]
 82 [-]: EQ        0 R19 R27    ; if R19 ~= R27 then PC := 86
 83 [-]: JMP       86           ; PC := 86
 84 [-]: MOVE      R21 R26      ; R21 := R26
 85 [-]: JMP       87           ; PC := 87
 86 [-]: FORLOOP   R22 79       ; R22 += R24; if R22 <= R23 then begin PC := 79; R25 := R22 end
 87 [-]: GETGLOBAL R27 K18      ; R27 := 0x7b998233
 88 [-]: MOVE      R28 R21      ; R28 := R21
 89 [-]: CALL      R27 2 2      ; R27 := R27(R28)
 90 [-]: TEST      R27 1        ; if R27 then PC := 98
 91 [-]: JMP       98           ; PC := 98
 92 [-]: GETTABLE  R27 R21 K29  ; R27 := R21["mItemType"]
 93 [-]: SELF      R27 R27 K30  ; R28 := R27; R27 := R27[0xf2deaf69]
 94 [-]: MOVE      R29 R2       ; R29 := R2
 95 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
 96 [-]: TEST      R27 0        ; if not R27 then PC := 110
 97 [-]: JMP       110          ; PC := 110
 98 [-]: LEN       R27 R4       ; R27 := # R4
 99 [-]: LT        0 K5 R27     ; if 0.000000 >= R27 then PC := 104
100 [-]: JMP       104          ; PC := 104
101 [-]: MOVE      R27 R4       ; R27 := R4
102 [-]: LOADK     R28 K31      ; R28 := "\r\n\r\n"
103 [-]: CONCAT    R4 R27 R28   ; R4 := R27 .. R28
104 [-]: MOVE      R27 R4       ; R27 := R4
105 [-]: GETGLOBAL R28 K15      ; R28 := 0x603636ad
106 [-]: LOADK     R29 K32      ; R29 := "/Lotus/Language/ZarimanQuest/BeginWarningMoteAmpDesc"
107 [-]: NEWTABLE  R30 0 0      ; R30 := {}
108 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
109 [-]: CONCAT    R4 R27 R28   ; R4 := R27 .. R28
110 [-]: LEN       R27 R4       ; R27 := # R4
111 [-]: LT        0 K5 R27     ; if 0.000000 >= R27 then PC := 214
112 [-]: JMP       214          ; PC := 214
113 [-]: GETUPVAL  R27 U0       ; R27 := U0
114 [-]: CALL      R27 1 2      ; R27 := R27()
115 [-]: GETGLOBAL R28 K15      ; R28 := 0x603636ad
116 [-]: GETGLOBAL R29 K33      ; R29 := 0x64fb1586
117 [-]: SELF      R30 R0 K34   ; R31 := R0; R30 := R0[0xd3a9d01f]
118 [-]: CALL      R30 2 0      ; R30,... := R30(R31)
119 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
120 [-]: NEWTABLE  R30 0 0      ; R30 := {}
121 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
122 [-]: MOVE      R29 R28      ; R29 := R28
123 [-]: GETGLOBAL R30 K15      ; R30 := 0x603636ad
124 [-]: LOADK     R31 K35      ; R31 := "/Lotus/Language/ZarimanQuest/BeginWarningConfirm"
125 [-]: NEWTABLE  R32 0 0      ; R32 := {}
126 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
127 [-]: GETGLOBAL R31 K15      ; R31 := 0x603636ad
128 [-]: LOADK     R32 K36      ; R32 := "/Lotus/Language/G1Quests/QuestCommitmentConfirm"
129 [-]: NEWTABLE  R33 0 1      ; R33 := {}
130 [-]: GETGLOBAL R34 K38      ; R34 := 0x7f5022cf
131 [-]: GETTABLE  R34 R34 K39  ; R82 := R34[0x3f3e4d12]
132 [-]: MOVE      R35 R30      ; R35 := R30
133 [-]: CALL      R34 2 2      ; R34 := R34(R35)
134 [-]: SETTABLE  R33 K37 R34  ; R33["WORD"] := R34
135 [-]: CALL      R31 3 2      ; R31 := R31(R32,R33)
136 [-]: GETGLOBAL R32 K15      ; R32 := 0x603636ad
137 [-]: LOADK     R33 K40      ; R33 := "/Lotus/Language/ZarimanQuest/BeginWarningCommonDesc"
138 [-]: NEWTABLE  R34 0 0      ; R34 := {}
139 [-]: CALL      R32 3 2      ; R32 := R32(R33,R34)
140 [-]: LOADK     R33 K31      ; R33 := "\r\n\r\n"
141 [-]: MOVE      R34 R4       ; R34 := R4
142 [-]: CONCAT    R4 R32 R34   ; R4 := R32 .. R33 .. R34
143 [-]: GETGLOBAL R32 K41      ; R32 := 0x34291f5c
144 [-]: GETTABLE  R32 R32 K42  ; R82 := R32[0xe6b41adb]
145 [-]: CALL      R32 1 2      ; R32 := R32()
146 [-]: TEST      R32 1        ; if R32 then PC := 158
147 [-]: JMP       158          ; PC := 158
148 [-]: GETGLOBAL R32 K41      ; R32 := 0x34291f5c
149 [-]: GETTABLE  R32 R32 K43  ; R82 := R32[0x1467d5f4]
150 [-]: CALL      R32 1 2      ; R32 := R32()
151 [-]: TEST      R32 1        ; if R32 then PC := 158
152 [-]: JMP       158          ; PC := 158
153 [-]: GETGLOBAL R32 K41      ; R32 := 0x34291f5c
154 [-]: GETTABLE  R32 R32 K44  ; R82 := R32[0x399826a5]
155 [-]: CALL      R32 1 2      ; R32 := R32()
156 [-]: TEST      R32 0        ; if not R32 then PC := 176
157 [-]: JMP       176          ; PC := 176
158 [-]: GETGLOBAL R32 K41      ; R32 := 0x34291f5c
159 [-]: GETTABLE  R32 R32 K45  ; R82 := R32[0x94617168]
160 [-]: CALL      R32 1 2      ; R32 := R32()
161 [-]: TEST      R32 0        ; if not R32 then PC := 176
162 [-]: JMP       176          ; PC := 176
163 [-]: CLOSURE   R32 0        ; R32 := closure(Function #425.1)
164 [-]: MOVE      R0 R27       ; R0 := R27
165 [-]: MOVE      R0 R3        ; R0 := R3
166 [-]: GETUPVAL  R0 U1        ; R0 := U1
167 [-]: MOVE      R0 R29       ; R0 := R29
168 [-]: MOVE      R0 R31       ; R0 := R31
169 [-]: MOVE      R0 R30       ; R0 := R30
170 [-]: GETUPVAL  R33 U2       ; R33 := U2
171 [-]: GETTABLE  R33 R33 K46  ; R82 := R33[0xe0cba3ca]
172 [-]: MOVE      R34 R4       ; R34 := R4
173 [-]: MOVE      R35 R32      ; R35 := R32
174 [-]: CALL      R33 3 1      ; R33(R34,R35)
175 [-]: JMP       211          ; PC := 211
176 [-]: CLOSURE   R33 1        ; R33 := closure(Function #425.2)
177 [-]: MOVE      R0 R3        ; R0 := R3
178 [-]: SETTABLE  R27 K47 R33  ; R27["ConfirmZarimanQuestWarning"] := R33
179 [-]: MOVE      R33 R4       ; R33 := R4
180 [-]: LOADK     R34 K31      ; R34 := "\r\n\r\n"
181 [-]: MOVE      R35 R31      ; R35 := R31
182 [-]: CONCAT    R33 R33 R35  ; R33 := R33 .. R34 .. R35
183 [-]: GETUPVAL  R34 U1       ; R34 := U1
184 [-]: GETTABLE  R35 R27 K48  ; R35 := R27["mMovie"]
185 [-]: MOVE      R36 R29      ; R36 := R29
186 [-]: LOADK     R37 K0       ; R37 := ""
187 [-]: LOADK     R38 40       ; R38 := 40.000000
188 [-]: LOADK     R39 K47      ; R39 := "ConfirmZarimanQuestWarning"
189 [-]: LOADK     R40 K0       ; R40 := ""
190 [-]: NEWTABLE  R41 0 1      ; R41 := {}
191 [-]: SETTABLE  R41 K49 R33  ; R41["desc"] := R33
192 [-]: CALL      R34 8 3      ; R34,R35 := R34(R35,R36,R37,R38,R39,R40,R41)
193 [-]: TEST      R34 0        ; if not R34 then PC := 211
194 [-]: JMP       211          ; PC := 211
195 [-]: GETGLOBAL R36 K18      ; R36 := 0x7b998233
196 [-]: MOVE      R37 R35      ; R37 := R35
197 [-]: CALL      R36 2 2      ; R36 := R36(R37)
198 [-]: TEST      R36 1        ; if R36 then PC := 211
199 [-]: JMP       211          ; PC := 211
200 [-]: SELF      R36 R35 K50  ; R37 := R35; R36 := R35[0xe4162eed]
201 [-]: LOADK     R38 K51      ; R38 := "SetYesTag"
202 [-]: LOADK     R39 K52      ; R39 := "/Lotus/Language/ZarimanQuest/BeginWarningButton"
203 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
204 [-]: SELF      R36 R35 K50  ; R37 := R35; R36 := R35[0xe4162eed]
205 [-]: LOADK     R38 K53      ; R38 := "SetConditionalWord"
206 [-]: GETGLOBAL R39 K38      ; R39 := 0x7f5022cf
207 [-]: GETTABLE  R39 R39 K54  ; R82 := R39[0x04981ab3]
208 [-]: MOVE      R40 R30      ; R40 := R30
209 [-]: CALL      R39 2 0      ; R39,... := R39(R40)
210 [-]: CALL      R36 0 1      ; R36(R37,...)
211 [-]: LOADBOOL  R36 1 0      ; R36 := true
212 [-]: RETURN    R36 2        ; return R36
213 [-]: CLOSE     R27          ; SAVE R27,...
214 [-]: LOADBOOL  R27 0 0      ; R27 := false
215 [-]: RETURN    R27 2        ; return R27
216 [-]: RETURN    R0 1         ; return 


; Function #425.1:
;
; Name:            
; Defined at line: 9651
; #Upvalues:       6
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: CLOSURE   R3 0         ; R3 := closure(Function #425.1.1)
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: SETTABLE  R2 K0 R3     ; R2["OSKConfirmZarimanQuestWarning"] := R3
  5 [-]: GETUPVAL  R2 U2        ; R2 := U2
  6 [-]: GETUPVAL  R3 U0        ; R3 := U0
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mMovie"]
  8 [-]: GETUPVAL  R4 U3        ; R4 := U3
  9 [-]: GETUPVAL  R5 U4        ; R5 := U4
 10 [-]: LOADK     R6 40        ; R6 := 40.000000
 11 [-]: LOADK     R7 K2        ; R7 := ""
 12 [-]: LOADK     R8 K0        ; R8 := "OSKConfirmZarimanQuestWarning"
 13 [-]: CALL      R2 7 3       ; R2,R3 := R2(R3,R4,R5,R6,R7,R8)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 32
 15 [-]: JMP       32           ; PC := 32
 16 [-]: GETGLOBAL R4 K3        ; R4 := 0x7b998233
 17 [-]: MOVE      R5 R3        ; R5 := R3
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 1         ; if R4 then PC := 32
 20 [-]: JMP       32           ; PC := 32
 21 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3[0xe4162eed]
 22 [-]: LOADK     R6 K5        ; R6 := "SetYesTag"
 23 [-]: LOADK     R7 K6        ; R7 := "/Lotus/Language/ZarimanQuest/BeginWarningButton"
 24 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 25 [-]: SELF      R4 R3 K4     ; R5 := R3; R4 := R3[0xe4162eed]
 26 [-]: LOADK     R6 K7        ; R6 := "SetConditionalWord"
 27 [-]: GETGLOBAL R7 K8        ; R7 := 0x7f5022cf
 28 [-]: GETTABLE  R7 R7 K9     ; R82 := R7[0x04981ab3]
 29 [-]: GETUPVAL  R8 U5        ; R8 := U5
 30 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 31 [-]: CALL      R4 0 1       ; R4(R5,...)
 32 [-]: RETURN    R0 1         ; return 


; Function #425.1.1:
;
; Name:            
; Defined at line: 9652
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: GETGLOBAL R5 K0        ; R5 := 0x603636ad
  5 [-]: LOADK     R6 K1        ; R6 := "/Lotus/Language/ZarimanQuest/BeginWarningConfirm"
  6 [-]: NEWTABLE  R7 0 0       ; R7 := {}
  7 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
  8 [-]: CALL      R2 0 1       ; R2(R3,...)
  9 [-]: RETURN    R0 1         ; return 


; Function #425.2:
;
; Name:            
; Defined at line: 9665
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETGLOBAL R4 K0        ; R4 := 0x03f57322
  3 [-]: MOVE      R5 R2        ; R5 := R2
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: EQ        0 R4 K2      ; if R4 ~= 4.000000 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: LOADBOOL  R4 0 1       ; R4 := false; PC := 8
  8 [-]: LOADBOOL  R4 1 0       ; R4 := true
  9 [-]: MOVE      R5 R0        ; R5 := R0
 10 [-]: GETGLOBAL R6 K3        ; R6 := 0x603636ad
 11 [-]: LOADK     R7 K4        ; R7 := "/Lotus/Language/ZarimanQuest/BeginWarningConfirm"
 12 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 13 [-]: CALL      R6 3 0       ; R6,... := R6(R7,R8)
 14 [-]: CALL      R3 0 1       ; R3(R4,...)
 15 [-]: RETURN    R0 1         ; return 


; Function #426:
;
; Name:            
; Defined at line: 9682
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R0 K0        ; R0 := "/Lotus/Language/Bosses/Lotus"
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0x25d99d89
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 24
  6 [-]: JMP       24           ; PC := 24
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x25d99d89
  8 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x25a6e75e]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 24
 14 [-]: JMP       24           ; PC := 24
 15 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0xd297b8b3]
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: EQ        0 R2 K6      ; if R2 ~= 0.000000 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADK     R0 K7        ; R0 := "/Lotus/Language/Inbox/TNWQuestNatahInboxMsgSubject"
 20 [-]: JMP       24           ; PC := 24
 21 [-]: EQ        0 R2 K8      ; if R2 ~= 2.000000 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: LOADK     R0 K9        ; R0 := "/Lotus/Language/Bosses/Margulis"
 24 [-]: GETGLOBAL R3 K10       ; R3 := 0x603636ad
 25 [-]: MOVE      R4 R0        ; R4 := R0
 26 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 27 [-]: TAILCALL  R3 3 0       ; R3,... := R3(R4,R5)
 28 [-]: RETURN    R3 0         ; return R3,...
 29 [-]: RETURN    R0 1         ; return 


; Function #427:
;
; Name:            
; Defined at line: 9698
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0x89326c93
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 73
  5 [-]: JMP       73           ; PC := 73
  6 [-]: GETGLOBAL R2 K1        ; R2 := 0x89326c93
  7 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x78298275]
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 10 [-]: MOVE      R4 R2        ; R4 := R2
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: TEST      R3 1         ; if R3 then PC := 73
 13 [-]: JMP       73           ; PC := 73
 14 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0xb2532845]
 15 [-]: GETGLOBAL R5 K4        ; R5 := 0x0469f296
 16 [-]: LOADK     R6 K5        ; R6 := "IDLE"
 17 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 18 [-]: CALL      R3 0 1       ; R3(R4,...)
 19 [-]: GETUPVAL  R3 U0        ; R3 := U0
 20 [-]: LOADBOOL  R4 0 0       ; R4 := false
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: TEST      R3 0         ; if not R3 then PC := 35
 23 [-]: JMP       35           ; PC := 35
 24 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0x89c6dbf7]
 25 [-]: GETGLOBAL R5 K7        ; R5 := 0x00046924
 26 [-]: LOADK     R6 230       ; R6 := 230.000000
 27 [-]: LOADK     R7 0         ; R7 := 0.000000
 28 [-]: LOADK     R8 0         ; R8 := 0.000000
 29 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 30 [-]: CALL      R3 0 1       ; R3(R4,...)
 31 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2[0x2e9b92e3]
 32 [-]: LOADK     R5 0         ; R5 := 0.000000
 33 [-]: CALL      R3 3 1       ; R3(R4,R5)
 34 [-]: JMP       73           ; PC := 73
 35 [-]: GETUPVAL  R3 U0        ; R3 := U0
 36 [-]: CALL      R3 1 2       ; R3 := R3()
 37 [-]: TEST      R3 1         ; if R3 then PC := 43
 38 [-]: JMP       43           ; PC := 43
 39 [-]: SELF      R3 R2 K6     ; R4 := R2; R3 := R2[0x89c6dbf7]
 40 [-]: GETGLOBAL R5 K7        ; R5 := 0x00046924
 41 [-]: CALL      R5 1 0       ; R5,... := R5()
 42 [-]: CALL      R3 0 1       ; R3(R4,...)
 43 [-]: TEST      R1 0         ; if not R1 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETGLOBAL R3 K9        ; R3 := 0x34291f5c
 46 [-]: GETTABLE  R3 R3 K10    ; R82 := R3[0x86647daf]
 47 [-]: CALL      R3 1 2       ; R3 := R3()
 48 [-]: TEST      R3 0         ; if not R3 then PC := 73
 49 [-]: JMP       73           ; PC := 73
 50 [-]: SELF      R3 R2 K11    ; R4 := R2; R3 := R2[0xde321e6f]
 51 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 52 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0xf7d48ee0]
 53 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 54 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 55 [-]: MOVE      R5 R3        ; R5 := R3
 56 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 57 [-]: TEST      R4 1         ; if R4 then PC := 66
 58 [-]: JMP       66           ; PC := 66
 59 [-]: SELF      R4 R3 K13    ; R5 := R3; R4 := R3[0xbc4ebb44]
 60 [-]: GETGLOBAL R6 K4        ; R6 := 0x0469f296
 61 [-]: LOADK     R7 K14       ; R7 := "KneelToStandTurn"
 62 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 63 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 64 [-]: TESTSET   R0 R4 1      ; if R4 then PC := 66 else R0 := R4
 65 [-]: JMP       66           ; PC := 66
 66 [-]: SELF      R4 R2 K15    ; R5 := R2; R4 := R2[0x5d985c7e]
 67 [-]: MOVE      R6 R0        ; R6 := R0
 68 [-]: LOADBOOL  R7 0 0       ; R7 := false
 69 [-]: LOADK     R8 3         ; R8 := 3.000000
 70 [-]: LOADK     R9 1         ; R9 := 1.000000
 71 [-]: LOADBOOL  R10 1 0      ; R10 := true
 72 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 73 [-]: RETURN    R0 1         ; return 


; Function #428:
;
; Name:            
; Defined at line: 9722
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x89326c93
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xfb669000]
  3 [-]: GETGLOBAL R3 K2        ; R3 := gDynamicSkyType
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
  6 [-]: MOVE      R3 R1        ; R3 := R1
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 25
  9 [-]: JMP       25           ; PC := 25
 10 [-]: LOADK     R2 1         ; R2 := 1.000000
 11 [-]: LEN       R3 R1        ; R3 := # R1
 12 [-]: LOADK     R4 1         ; R4 := 1.000000
 13 [-]: FORPREP   R2 24        ; R2 -= R4; PC := 24
 14 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 15 [-]: SELF      R6 R6 K4     ; R7 := R6; R6 := R6[0x0056783b]
 16 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 17 [-]: TEST      R6 0         ; if not R6 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETTABLE  R6 R1 R5     ; R6 := R1[R5]
 20 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0x16c76090]
 21 [-]: MOVE      R8 R0        ; R8 := R0
 22 [-]: CALL      R6 3 1       ; R6(R7,R8)
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: FORLOOP   R2 14        ; R2 += R4; if R2 <= R3 then begin PC := 14; R5 := R2 end
 25 [-]: RETURN    R0 1         ; return 


