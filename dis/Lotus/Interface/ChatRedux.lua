; This file has been disassembled using luadec 2.0.2 by sztupy (modified by Reversive)

; Name:            
; Defined at line: 0
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       2
; Max Stack Size:  187

  1 [-]: NEWTABLE  R0 0 14      ; R0 := {}
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
  3 [-]: LOADK     R2 K2        ; R2 := "/Lotus/StoreItems/Weapons/Ostron/Melee/LotusModularWeapon"
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: SETTABLE  R0 K0 R1     ; R0["zawStoreItem"] := R1
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
  7 [-]: LOADK     R2 K4        ; R2 := "/Lotus/StoreItems/Weapons/Sentients/OperatorAmplifiers/OperatorAmpWeapon"
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: SETTABLE  R0 K3 R1     ; R0["ampStoreItem"] := R1
 10 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 11 [-]: LOADK     R2 K6        ; R2 := "/Lotus/StoreItems/Types/Friendly/Pets/MoaPets/MoaPetPowerSuit"
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: SETTABLE  R0 K5 R1     ; R0["moaPetStoreItem"] := R1
 14 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 15 [-]: LOADK     R2 K8        ; R2 := "/Lotus/StoreItems/Types/Vehicles/Hoverboard/HoverboardSuit"
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: SETTABLE  R0 K7 R1     ; R0["kdriveStoreItem"] := R1
 18 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 19 [-]: LOADK     R2 K10       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Primary/LotusModularPrimary"
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: SETTABLE  R0 K9 R1     ; R0["primaryRifleType"] := R1
 22 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 23 [-]: LOADK     R2 K12       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Primary/LotusModularPrimaryShotgun"
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: SETTABLE  R0 K11 R1    ; R0["primaryShotgunType"] := R1
 26 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 27 [-]: LOADK     R2 K14       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Primary/LotusModularPrimaryBeam"
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: SETTABLE  R0 K13 R1    ; R0["primaryBeamType"] := R1
 30 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 31 [-]: LOADK     R2 K10       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Primary/LotusModularPrimary"
 32 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 33 [-]: SETTABLE  R0 K15 R1    ; R0["primarySniperType"] := R1
 34 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 35 [-]: LOADK     R2 K10       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Primary/LotusModularPrimary"
 36 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 37 [-]: SETTABLE  R0 K16 R1    ; R0["primaryLauncherType"] := R1
 38 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 39 [-]: LOADK     R2 K18       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Secondary/LotusModularSecondary"
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: SETTABLE  R0 K17 R1    ; R0["secondaryRifleType"] := R1
 42 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 43 [-]: LOADK     R2 K20       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Secondary/LotusModularSecondaryBeam"
 44 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 45 [-]: SETTABLE  R0 K19 R1    ; R0["secondaryBeamType"] := R1
 46 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 47 [-]: LOADK     R2 K22       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Secondary/LotusModularSecondaryShotgun"
 48 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 49 [-]: SETTABLE  R0 K21 R1    ; R0["secondaryShotgunType"] := R1
 50 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 51 [-]: LOADK     R2 K18       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Secondary/LotusModularSecondary"
 52 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 53 [-]: SETTABLE  R0 K23 R1    ; R0["secondarySniperType"] := R1
 54 [-]: GETGLOBAL R1 K1        ; R1 := 0xb009bbc6
 55 [-]: LOADK     R2 K18       ; R2 := "/Lotus/StoreItems/Weapons/SolarisUnited/Secondary/LotusModularSecondary"
 56 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 57 [-]: SETTABLE  R0 K24 R1    ; R0["secondaryLauncherType"] := R1
 58 [-]: NEWTABLE  R1 0 7       ; R1 := {}
 59 [-]: SETTABLE  R1 K25 K26   ; R1["Red"] := 11806246.000000
 60 [-]: SETTABLE  R1 K27 K28   ; R1["Green"] := 2796172.000000
 61 [-]: SETTABLE  R1 K29 K30   ; R1["Orange"] := 14786925.000000
 62 [-]: SETTABLE  R1 K31 K32   ; R1["Blue"] := 5676533.000000
 63 [-]: SETTABLE  R1 K33 K34   ; R1["Purple"] := 7690684.000000
 64 [-]: SETTABLE  R1 K35 K36   ; R1["Pink"] := 16090556.000000
 65 [-]: SETTABLE  R1 K37 K38   ; R1["Teal"] := 8702926.000000
 66 [-]: GETGLOBAL R2 K39       ; R2 := 0x0032441c
 67 [-]: GETTABLE  R2 R2 K40    ; R2 := R2["UIColor_Black"]
 68 [-]: LOADK     R3 K41       ; R3 := 3881016.000000
 69 [-]: GETGLOBAL R4 K39       ; R4 := 0x0032441c
 70 [-]: GETTABLE  R4 R4 K42    ; R4 := R4["UIColor_White"]
 71 [-]: LOADK     R5 K43       ; R5 := 8298979.000000
 72 [-]: NEWTABLE  R6 0 7       ; R6 := {}
 73 [-]: SETTABLE  R6 K44 K45   ; R6["SPAM_DETECTION_PERIOD"] := 5.000000
 74 [-]: SETTABLE  R6 K46 K45   ; R6["MSGS_PER_PERIOD"] := 5.000000
 75 [-]: SETTABLE  R6 K47 K48   ; R6["SPAM_LOCKOUT_TIME"] := 30.000000
 76 [-]: SETTABLE  R6 K49 K50   ; R6["TRADE_SPAM_DETECTION_PERIOD"] := 120.000000
 77 [-]: SETTABLE  R6 K51 K52   ; R6["TRADE_MSGS_PER_PERIOD"] := 1.000000
 78 [-]: SETTABLE  R6 K53 K50   ; R6["SPAM_REPEATED_MESSAGE_DETECTION_PERIOD"] := 120.000000
 79 [-]: SETTABLE  R6 K54 K55   ; R6["GLOBAL_LINK_PERIOD"] := 15.000000
 80 [-]: CONST     R7 3600      ; R7 := 3600.000000
 81 [-]: LOADNIL   R8 R8        ; R8 := nil
 82 [-]: LOADK     R9 K56       ; R9 := 0.100000
 83 [-]: CONST     R10 20       ; R10 := 20.000000
 84 [-]: CONST     R11 10       ; R11 := 10.000000
 85 [-]: CONST     R12 125      ; R12 := 125.000000
 86 [-]: CONST     R13 0        ; R13 := 0.500000
 87 [-]: MOVE      R14 R13      ; R14 := R13
 88 [-]: CONST     R15 -1       ; R15 := -1.000000
 89 [-]: LOADNIL   R16 R17      ; R16 := R17 := nil
 90 [-]: CONST     R18 1        ; R18 := 1.000000
 91 [-]: NEWTABLE  R19 26 0     ; R19 := {}
 92 [-]: LOADK     R20 K57      ; R20 := "-"
 93 [-]: LOADK     R21 K58      ; R21 := "0"
 94 [-]: LOADK     R22 K59      ; R22 := "1"
 95 [-]: LOADK     R23 K60      ; R23 := "2"
 96 [-]: LOADK     R24 K61      ; R24 := "3"
 97 [-]: LOADK     R25 K62      ; R25 := "4"
 98 [-]: LOADK     R26 K63      ; R26 := "5"
 99 [-]: LOADK     R27 K64      ; R27 := "6"
100 [-]: LOADK     R28 K65      ; R28 := "7"
101 [-]: LOADK     R29 K66      ; R29 := "8"
102 [-]: LOADK     R30 K67      ; R30 := "9"
103 [-]: LOADK     R31 K68      ; R31 := "_"
104 [-]: LOADK     R32 K69      ; R32 := "["
105 [-]: LOADK     R33 K70      ; R33 := "]"
106 [-]: LOADK     R34 K71      ; R34 := "A"
107 [-]: LOADK     R35 K72      ; R35 := "B"
108 [-]: LOADK     R36 K73      ; R36 := "C"
109 [-]: LOADK     R37 K74      ; R37 := "D"
110 [-]: LOADK     R38 K75      ; R38 := "E"
111 [-]: LOADK     R39 K76      ; R39 := "F"
112 [-]: LOADK     R40 K77      ; R40 := "G"
113 [-]: LOADK     R41 K78      ; R41 := "H"
114 [-]: LOADK     R42 K79      ; R42 := "I"
115 [-]: LOADK     R43 K80      ; R43 := "J"
116 [-]: LOADK     R44 K81      ; R44 := "K"
117 [-]: LOADK     R45 K82      ; R45 := "L"
118 [-]: LOADK     R46 K83      ; R46 := "M"
119 [-]: LOADK     R47 K84      ; R47 := "N"
120 [-]: LOADK     R48 K85      ; R48 := "O"
121 [-]: LOADK     R49 K86      ; R49 := "P"
122 [-]: LOADK     R50 K87      ; R50 := "Q"
123 [-]: LOADK     R51 K88      ; R51 := "R"
124 [-]: LOADK     R52 K89      ; R52 := "S"
125 [-]: LOADK     R53 K90      ; R53 := "T"
126 [-]: LOADK     R54 K91      ; R54 := "U"
127 [-]: LOADK     R55 K92      ; R55 := "V"
128 [-]: LOADK     R56 K93      ; R56 := "W"
129 [-]: LOADK     R57 K94      ; R57 := "X"
130 [-]: LOADK     R58 K95      ; R58 := "Y"
131 [-]: LOADK     R59 K96      ; R59 := "Z"
132 [-]: SETLIST   R19 40 1     ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 40
133 [-]: GETGLOBAL R20 K97      ; R20 := 0x2d0fad09
134 [-]: LOADK     R21 K98      ; R21 := "EE.Interface.Utilities"
135 [-]: CALL      R20 2 2      ; R20 := R20(R21)
136 [-]: GETGLOBAL R21 K97      ; R21 := 0x2d0fad09
137 [-]: LOADK     R22 K99      ; R22 := "Lotus.Interface.LotusUtilities"
138 [-]: CALL      R21 2 2      ; R21 := R21(R22)
139 [-]: GETGLOBAL R22 K97      ; R22 := 0x2d0fad09
140 [-]: LOADK     R23 K100     ; R23 := "Lotus.Interface.UIUtilities"
141 [-]: CALL      R22 2 2      ; R22 := R22(R23)
142 [-]: GETGLOBAL R23 K97      ; R23 := 0x2d0fad09
143 [-]: LOADK     R24 K101     ; R24 := "Lotus.Interface.CardUtilitiesRedux"
144 [-]: CALL      R23 2 2      ; R23 := R23(R24)
145 [-]: GETGLOBAL R24 K97      ; R24 := 0x2d0fad09
146 [-]: LOADK     R25 K102     ; R25 := "Lotus.Interface.LotusNetworkUtilities"
147 [-]: CALL      R24 2 2      ; R24 := R24(R25)
148 [-]: GETGLOBAL R25 K97      ; R25 := 0x2d0fad09
149 [-]: LOADK     R26 K103     ; R26 := "Lotus.Interface.SequencerUtilities"
150 [-]: CALL      R25 2 2      ; R25 := R25(R26)
151 [-]: GETGLOBAL R26 K97      ; R26 := 0x2d0fad09
152 [-]: LOADK     R27 K104     ; R27 := "Lotus.Interface.ModularWeaponUtilities"
153 [-]: CALL      R26 2 2      ; R26 := R26(R27)
154 [-]: GETGLOBAL R27 K97      ; R27 := 0x2d0fad09
155 [-]: LOADK     R28 K105     ; R28 := "Lotus.Interface.UIStyleUtilities"
156 [-]: CALL      R27 2 2      ; R27 := R27(R28)
157 [-]: GETGLOBAL R28 K97      ; R28 := 0x2d0fad09
158 [-]: LOADK     R29 K106     ; R29 := "Lotus.Interface.Libs.PreviewLinkUtilities"
159 [-]: CALL      R28 2 2      ; R28 := R28(R29)
160 [-]: GETGLOBAL R29 K97      ; R29 := 0x2d0fad09
161 [-]: LOADK     R30 K107     ; R30 := "Lotus.Interface.Components.PresenceHelper"
162 [-]: CALL      R29 2 2      ; R29 := R29(R30)
163 [-]: GETGLOBAL R30 K97      ; R30 := 0x2d0fad09
164 [-]: LOADK     R31 K108     ; R31 := "EE.Interface.Components.List"
165 [-]: CALL      R30 2 2      ; R30 := R30(R31)
166 [-]: GETGLOBAL R31 K97      ; R31 := 0x2d0fad09
167 [-]: LOADK     R32 K109     ; R32 := "EE.Interface.Components.ScrollBar"
168 [-]: CALL      R31 2 2      ; R31 := R31(R32)
169 [-]: GETGLOBAL R32 K97      ; R32 := 0x2d0fad09
170 [-]: LOADK     R33 K110     ; R33 := "Lotus.Interface.TextSuggest"
171 [-]: CALL      R32 2 2      ; R32 := R32(R33)
172 [-]: OP_LOADBOOL R33 1 0      ; R33 := true
173 [-]: SETGLOBALHASH R33 K111     ; mInputBlocked := R33
174 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
175 [-]: SETGLOBALHASH R33 K112     ; mInSubScreen := R33
176 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
177 [-]: SETGLOBALHASH R33 K113     ; mInitialized := R33
178 [-]: LOADNIL   R33 R33      ; R33 := nil
179 [-]: SETGLOBALHASH R33 K114     ; mSelectedUser := R33
180 [-]: LOADNIL   R33 R33      ; R33 := nil
181 [-]: SETGLOBALHASH R33 K115     ; mGameData := R33
182 [-]: LOADNIL   R33 R33      ; R33 := nil
183 [-]: SETGLOBALHASH R33 K116     ; mProfileSettings := R33
184 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
185 [-]: SETGLOBALHASH R33 K117     ; mMouseDown := R33
186 [-]: LOADNIL   R33 R33      ; R33 := nil
187 [-]: SETGLOBALHASH R33 K118     ; mFocusTabDownStart := R33
188 [-]: LOADNIL   R33 R33      ; R33 := nil
189 [-]: SETGLOBALHASH R33 K119     ; mWindow := R33
190 [-]: LOADNIL   R33 R33      ; R33 := nil
191 [-]: SETGLOBALHASH R33 K120     ; mGameRules := R33
192 [-]: LOADNIL   R33 R33      ; R33 := nil
193 [-]: SETGLOBALHASH R33 K121     ; mIsInGameplay := R33
194 [-]: LOADNIL   R33 R33      ; R33 := nil
195 [-]: SETGLOBALHASH R33 K122     ; mIsInFrontEnd := R33
196 [-]: LOADNIL   R33 R33      ; R33 := nil
197 [-]: SETGLOBALHASH R33 K123     ; mIsInDojo := R33
198 [-]: LOADNIL   R33 R33      ; R33 := nil
199 [-]: SETGLOBALHASH R33 K124     ; mIsInPVP := R33
200 [-]: LOADNIL   R33 R33      ; R33 := nil
201 [-]: SETGLOBALHASH R33 K125     ; mUIMode := R33
202 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
203 [-]: SETGLOBALHASH R33 K126     ; mEnableRegionChat := R33
204 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
205 [-]: SETGLOBALHASH R33 K127     ; mEnableRecruitingChat := R33
206 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
207 [-]: SETGLOBALHASH R33 K128     ; mEnableTradeChat := R33
208 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
209 [-]: SETGLOBALHASH R33 K129     ; mEnableQAChat := R33
210 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
211 [-]: SETGLOBALHASH R33 K130     ; mEnableCouncilChat := R33
212 [-]: OP_LOADBOOL R33 1 0      ; R33 := true
213 [-]: SETGLOBALHASH R33 K131     ; mChatWorldNotifications := R33
214 [-]: NEWTABLE  R33 0 2      ; R33 := {}
215 [-]: SETTABLE  R33 K133 K134; R33["Enabled"] := true
216 [-]: SETTABLE  R33 K135 K134; R33["EmoticonConversion"] := true
217 [-]: SETGLOBALHASH R33 K132     ; mEmojiSettings := R33
218 [-]: CONST     R33 1        ; R33 := 1.000000
219 [-]: SETGLOBALHASH R33 K136     ; mChatScale := R33
220 [-]: CONST     R33 1        ; R33 := 1.750000
221 [-]: SETGLOBALHASH R33 K137     ; miOSChatScale := R33
222 [-]: LOADNIL   R33 R33      ; R33 := nil
223 [-]: SETGLOBALHASH R33 K138     ; mContextMenu := R33
224 [-]: LOADNIL   R33 R33      ; R33 := nil
225 [-]: SETGLOBALHASH R33 K139     ; mChildMovie := R33
226 [-]: CONST     R33 0        ; R33 := 0.000000
227 [-]: SETGLOBALHASH R33 K140     ; mViewportWidth := R33
228 [-]: CONST     R33 0        ; R33 := 0.000000
229 [-]: SETGLOBALHASH R33 K141     ; mViewportHeight := R33
230 [-]: OP_LOADBOOL R33 1 0      ; R33 := true
231 [-]: SETGLOBALHASH R33 K142     ; mDoFilter := R33
232 [-]: OP_LOADBOOL R33 1 0      ; R33 := true
233 [-]: SETGLOBALHASH R33 K143     ; mDoMotdFilter := R33
234 [-]: CONST     R33 2        ; R33 := 2.000000
235 [-]: SETGLOBALHASH R33 K144     ; mTextSizeIndex := R33
236 [-]: OP_LOADBOOL R33 1 0      ; R33 := true
237 [-]: SETGLOBALHASH R33 K145     ; mInlinePrivateMessages := R33
238 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
239 [-]: SETGLOBALHASH R33 K146     ; mActiveTabNotificationsOnly := R33
240 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
241 [-]: SETGLOBALHASH R33 K147     ; mMuteNotificationSounds := R33
242 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
243 [-]: SETGLOBALHASH R33 K148     ; mChatHidden := R33
244 [-]: NEWTABLE  R33 0 16     ; R33 := {}
245 [-]: SETTABLE  R33 K149 K150; R33["Msg"] := ""
246 [-]: SETTABLE  R33 K151 K150; R33["CurrItemString"] := ""
247 [-]: NEWTABLE  R34 0 0      ; R34 := {}
248 [-]: SETTABLE  R33 K152 R34 ; R33["OmegaLinks"] := R34
249 [-]: NEWTABLE  R34 0 0      ; R34 := {}
250 [-]: SETTABLE  R33 K153 R34 ; R33["SongLinks"] := R34
251 [-]: NEWTABLE  R34 0 0      ; R34 := {}
252 [-]: SETTABLE  R33 K154 R34 ; R33["ZawLinks"] := R34
253 [-]: NEWTABLE  R34 0 0      ; R34 := {}
254 [-]: SETTABLE  R33 K155 R34 ; R33["AmpLinks"] := R34
255 [-]: NEWTABLE  R34 0 0      ; R34 := {}
256 [-]: SETTABLE  R33 K156 R34 ; R33["MoaPetLinks"] := R34
257 [-]: NEWTABLE  R34 0 0      ; R34 := {}
258 [-]: SETTABLE  R33 K157 R34 ; R33["KdriveLinks"] := R34
259 [-]: NEWTABLE  R34 0 0      ; R34 := {}
260 [-]: SETTABLE  R33 K158 R34 ; R33["KitgunLinks"] := R34
261 [-]: NEWTABLE  R34 0 0      ; R34 := {}
262 [-]: SETTABLE  R33 K159 R34 ; R33["AppearanceLinks"] := R34
263 [-]: SETTABLE  R33 K160 K161; R33["CachedAppearanceLink"] := nil
264 [-]: NEWTABLE  R34 0 0      ; R34 := {}
265 [-]: SETTABLE  R33 K162 R34 ; R33["ModConfigLinks"] := R34
266 [-]: SETTABLE  R33 K163 K161; R33["CachedModConfigLink"] := nil
267 [-]: NEWTABLE  R34 0 0      ; R34 := {}
268 [-]: SETTABLE  R33 K164 R34 ; R33["ShawzinLinks"] := R34
269 [-]: SETTABLE  R33 K165 K161; R33["CachedShawzinLink"] := nil
270 [-]: SETTABLE  R33 K166 K167; R33["GuildReplacement"] := false
271 [-]: CLOSURE   R34 0        ; R34 := closure(Function #1)
272 [-]: NEWTABLE  R35 0 2      ; R35 := {}
273 [-]: NEWTABLE  R36 0 1      ; R36 := {}
274 [-]: SETTABLE  R36 K169 R34 ; R36["RequirementsMet"] := R34
275 [-]: SETTABLE  R35 K168 R36 ; R35["truemaster"] := R36
276 [-]: NEWTABLE  R36 0 1      ; R36 := {}
277 [-]: SETTABLE  R36 K169 R34 ; R36["RequirementsMet"] := R34
278 [-]: SETTABLE  R35 K170 R36 ; R35["truemasteralt"] := R36
279 [-]: GETGLOBAL R36 K171     ; R36 := 0x0469f296
280 [-]: LOADK     R37 K172     ; R37 := "ChatRedux"
281 [-]: CALL      R36 2 2      ; R36 := R36(R37)
282 [-]: OP_LOADBOOL R37 0 0      ; R37 := false
283 [-]: NEWTABLE  R38 0 0      ; R38 := {}
284 [-]: NEWTABLE  R39 0 0      ; R39 := {}
285 [-]: NEWTABLE  R40 0 0      ; R40 := {}
286 [-]: NEWTABLE  R41 0 0      ; R41 := {}
287 [-]: NEWTABLE  R42 0 6      ; R42 := {}
288 [-]: SETTABLE  R42 K173 K174; R42["ALERT"] := 0.000000
289 [-]: SETTABLE  R42 K175 K52 ; R42["NEWS"] := 1.000000
290 [-]: SETTABLE  R42 K176 K177; R42["GOAL"] := 2.000000
291 [-]: SETTABLE  R42 K178 K179; R42["INVASION"] := 3.000000
292 [-]: SETTABLE  R42 K180 K181; R42["BUILD"] := 4.000000
293 [-]: SETTABLE  R42 K182 K45 ; R42["PVPAFFECTOR"] := 5.000000
294 [-]: NEWTABLE  R43 0 27     ; R43 := {}
295 [-]: SETTABLE  R43 K183 K184; R43["OMEGA_STRING_LOC"] := "/Lotus/Language/Items/OmegaModGenericName"
296 [-]: SETTABLE  R43 K185 K186; R43["OMEGA_TYPE_PREFIX"] := "/Lotus/Upgrades/Mods/Randomized/"
297 [-]: SETTABLE  R43 K187 K188; R43["OMEGA_STOREITEM_PREFIX"] := "/Lotus/StoreItems/Upgrades/Mods/Randomized/"
298 [-]: SETTABLE  R43 K189 K45 ; R43["OMEGA_MAX_LINKS"] := 5.000000
299 [-]: SETTABLE  R43 K190 K191; R43["STEP_SEQUENCER_NOTEPACK_PREFIX"] := "/Lotus/Types/Game/NotePacks/"
300 [-]: SETTABLE  R43 K192 K193; R43["STEP_SEQUENCER_STRING_LOC"] := "/Lotus/Language/Menu/Composition_Song"
301 [-]: SETTABLE  R43 K194 K195; R43["STEP_SEQUENCER_STRING_PREFIX"] := "/Lotus/Language/Menu/Composition_Song_Prefix"
302 [-]: GETGLOBAL R44 K197     ; R44 := 0x7ed0a956
303 [-]: LOADK     R45 K198     ; R45 := "/Lotus/Types/StoreItems/Packages/StepSequencerPreview"
304 [-]: CALL      R44 2 2      ; R44 := R44(R45)
305 [-]: SETTABLE  R43 K196 R44 ; R43["STEP_SEQUENCER_PREVIEW"] := R44
306 [-]: SETTABLE  R43 K199 K52 ; R43["STEP_SEQUENCER_MAX_LINKS"] := 1.000000
307 [-]: SETTABLE  R43 K200 K150; R43["StepSequencerPrefixString"] := ""
308 [-]: SETTABLE  R43 K201 K161; R43["StepSequencerPendingRequest"] := nil
309 [-]: SETTABLE  R43 K202 K161; R43["StepSequencerLoader"] := nil
310 [-]: SETTABLE  R43 K203 K204; R43["ZAW_STRING_LOC"] := "/Lotus/Language/Weapons/LotusModularWeaponName"
311 [-]: SETTABLE  R43 K205 K206; R43["ZAW_STRING_PREFIX"] := "/Lotus/Language/Menu/Chat_Zaw_Link_Prefix"
312 [-]: SETTABLE  R43 K207 K179; R43["ZAW_MAX_LINKS"] := 3.000000
313 [-]: SETTABLE  R43 K208 K150; R43["ZawPrefixString"] := ""
314 [-]: SETTABLE  R43 K209 K210; R43["AMP_STRING_LOC"] := "/Lotus/Language/Items/OperatorVoidBeam"
315 [-]: SETTABLE  R43 K211 K212; R43["AMP_STRING_PREFIX"] := "/Lotus/Language/Menu/Chat_Amp_Link_Prefix"
316 [-]: SETTABLE  R43 K213 K179; R43["AMP_MAX_LINKS"] := 3.000000
317 [-]: SETTABLE  R43 K214 K150; R43["AmpPrefixString"] := ""
318 [-]: SETTABLE  R43 K215 K216; R43["MOA_PET_STRING_LOC"] := "/Lotus/Language/SolarisVenus/MoaPetItem"
319 [-]: SETTABLE  R43 K217 K218; R43["MOA_PET_STRING_PREFIX"] := "/Lotus/Language/SolarisVenus/Chat_Moa_Pet_Link_Prefix"
320 [-]: SETTABLE  R43 K219 K181; R43["MOA_MAX_LINKS"] := 4.000000
321 [-]: SETTABLE  R43 K220 K150; R43["MoaPetPrefixString"] := ""
322 [-]: SETTABLE  R43 K221 K222; R43["KDRIVE_STRING_LOC"] := "/Lotus/Language/SolarisVenus/KDriveItem"
323 [-]: SETTABLE  R43 K223 K224; R43["KDRIVE_STRING_PREFIX"] := "/Lotus/Language/SolarisVenus/Chat_KDrive_Link_Prefix"
324 [-]: SETTABLE  R43 K225 K181; R43["KDRIVE_MAX_LINKS"] := 4.000000
325 [-]: SETTABLE  R43 K226 K150; R43["KDrivePrefixString"] := ""
326 [-]: SETTABLE  R43 K227 K228; R43["KITGUN_STRING_LOC"] := "/Lotus/Language/SolarisVenus/Kitgun_Singular"
327 [-]: SETTABLE  R43 K229 K230; R43["KITGUN_STRING_PREFIX"] := "/Lotus/Language/SolarisVenus/Chat_Kitgun_Link_Prefix"
328 [-]: SETTABLE  R43 K231 K179; R43["KITGUN_MAX_LINKS"] := 3.000000
329 [-]: SETTABLE  R43 K232 K150; R43["KitgunPrefixString"] := ""
330 [-]: SETTABLE  R43 K233 K234; R43["APPEARANCE_STRING_LOC"] := "/Lotus/Language/Menu/Appearance_Prefix"
331 [-]: SETTABLE  R43 K235 K234; R43["APPEARANCE_STRING_PREFIX"] := "/Lotus/Language/Menu/Appearance_Prefix"
332 [-]: SETTABLE  R43 K236 K52 ; R43["APPEARANCE_MAX_LINKS"] := 1.000000
333 [-]: SETTABLE  R43 K237 K150; R43["AppearancePrefixString"] := ""
334 [-]: SETTABLE  R43 K238 K239; R43["MOD_CONFIG_STRING_LOC"] := "/Lotus/Language/Menu/Mod_Prefix"
335 [-]: SETTABLE  R43 K240 K239; R43["MOD_CONFIG_STRING_PREFIX"] := "/Lotus/Language/Menu/Mod_Prefix"
336 [-]: SETTABLE  R43 K241 K52 ; R43["MOD_CONFIG_MAX_LINKS"] := 1.000000
337 [-]: SETTABLE  R43 K242 K150; R43["ModConfigPrefixString"] := ""
338 [-]: SETTABLE  R43 K243 K244; R43["SHAWZIN_STRING_LOC"] := "/Lotus/Language/Menu/Shawzin_Prefix"
339 [-]: SETTABLE  R43 K245 K244; R43["SHAWZIN_STRING_PREFIX"] := "/Lotus/Language/Menu/Shawzin_Prefix"
340 [-]: SETTABLE  R43 K246 K52 ; R43["SHAWZIN_MAX_LINKS"] := 1.000000
341 [-]: SETTABLE  R43 K247 K150; R43["ShawzinPrefixString"] := ""
342 [-]: LOADNIL   R44 R45      ; R44 := R45 := nil
343 [-]: NEWTABLE  R46 0 0      ; R46 := {}
344 [-]: NEWTABLE  R47 0 0      ; R47 := {}
345 [-]: LOADNIL   R48 R48      ; R48 := nil
346 [-]: NEWTABLE  R49 0 0      ; R49 := {}
347 [-]: NEWTABLE  R50 0 0      ; R50 := {}
348 [-]: LOADNIL   R51 R51      ; R51 := nil
349 [-]: OP_LOADBOOL R52 0 0      ; R52 := false
350 [-]: CONST     R53 5        ; R53 := 5.000000
351 [-]: CONST     R54 3        ; R54 := 3.000000
352 [-]: OP_LOADBOOL R55 0 0      ; R55 := false
353 [-]: OP_LOADBOOL R56 0 0      ; R56 := false
354 [-]: OP_LOADBOOL R57 0 0      ; R57 := false
355 [-]: OP_LOADBOOL R58 0 0      ; R58 := false
356 [-]: CONST     R59 120      ; R59 := 120.000000
357 [-]: LOADNIL   R60 R61      ; R60 := R61 := nil
358 [-]: NEWTABLE  R62 0 4      ; R62 := {}
359 [-]: SETTABLE  R62 K248 K167; R62["InProgress"] := false
360 [-]: SETTABLE  R62 K249 K161; R62["PlayerId"] := nil
361 [-]: SETTABLE  R62 K250 K150; R62["PlayerName"] := ""
362 [-]: SETTABLE  R62 K251 K167; R62["TempAddToChatPartners"] := false
363 [-]: NEWTABLE  R63 0 0      ; R63 := {}
364 [-]: CONST     R64 1        ; R64 := 1.000000
365 [-]: LOADNIL   R65 R72      ; R65 := R66 := R67 := R68 := R69 := R70 := R71 := R72 := nil
366 [-]: LOADK     R73 K150     ; R73 := ""
367 [-]: LOADK     R74 K150     ; R74 := ""
368 [-]: CONST     R75 0        ; R75 := 0.000000
369 [-]: OP_LOADBOOL R76 0 0      ; R76 := false
370 [-]: OP_LOADBOOL R77 0 0      ; R77 := false
371 [-]: LOADK     R78 K150     ; R78 := ""
372 [-]: CONST     R79 0        ; R79 := 0.000000
373 [-]: CONST     R80 0        ; R80 := 0.000000
374 [-]: OP_LOADBOOL R81 0 0      ; R81 := false
375 [-]: NEWTABLE  R82 0 3      ; R82 := {}
376 [-]: SETTABLE  R82 K252 K167; R82["ResizingWindow"] := false
377 [-]: SETTABLE  R82 K253 K174; R82["RefreshChatHistoryCooldown"] := 0.000000
378 [-]: SETTABLE  R82 K254 K167; R82["ResizeRequired"] := false
379 [-]: LOADNIL   R83 R87      ; R83 := R84 := R85 := R86 := R87 := nil
380 [-]: GETTABLE  R88 R20 K255 ; R82 := R88[0x9f57dd7d]
381 [-]: GETGLOBAL R89 K39      ; R89 := 0x0032441c
382 [-]: LOADK     R90 K256     ; R90 := "UIColor_Yellow"
383 [-]: GETTABLE  R89 R89 R90  ; R89 := R89[R90]
384 [-]: CALL      R88 2 2      ; R88 := R88(R89)
385 [-]: OP_LOADBOOL R89 0 0      ; R89 := false
386 [-]: LOADNIL   R90 R90      ; R90 := nil
387 [-]: OP_LOADBOOL R91 0 0      ; R91 := false
388 [-]: OP_LOADBOOL R92 0 0      ; R92 := false
389 [-]: NEWTABLE  R93 0 10     ; R93 := {}
390 [-]: LOADK     R94 K257     ; R94 := "CHANNEL_SESSION"
391 [-]: CONST     R95 0        ; R95 := 0.000000
392 [-]: SETTABLE  R93 R94 R95  ; R93[R94] := R95
393 [-]: LOADK     R94 K258     ; R94 := "CHANNEL_HUB"
394 [-]: CONST     R95 1        ; R95 := 1.000000
395 [-]: SETTABLE  R93 R94 R95  ; R93[R94] := R95
396 [-]: LOADK     R94 K259     ; R94 := "CHANNEL_CLAN"
397 [-]: CONST     R95 2        ; R95 := 2.000000
398 [-]: SETTABLE  R93 R94 R95  ; R93[R94] := R95
399 [-]: LOADK     R94 K260     ; R94 := "CHANNEL_ALLIANCE"
400 [-]: CONST     R95 3        ; R95 := 3.000000
401 [-]: SETTABLE  R93 R94 R95  ; R93[R94] := R95
402 [-]: LOADK     R94 K261     ; R94 := "CHANNEL_COUNCIL"
403 [-]: CONST     R95 4        ; R95 := 4.000000
404 [-]: SETTABLE  R93 R94 R95  ; R93[R94] := R95
405 [-]: LOADK     R94 K262     ; R94 := "CHANNEL_GLOBAL"
406 [-]: CONST     R95 5        ; R95 := 5.000000
407 [-]: SETTABLE  R93 R94 R95  ; R93[R94] := R95
408 [-]: LOADK     R94 K263     ; R94 := "CHANNEL_QA"
409 [-]: CONST     R95 6        ; R95 := 6.000000
410 [-]: SETTABLE  R93 R94 R95  ; R93[R94] := R95
411 [-]: LOADK     R94 K264     ; R94 := "CHANNEL_RECRUITING"
412 [-]: CONST     R95 7        ; R95 := 7.000000
413 [-]: SETTABLE  R93 R94 R95  ; R93[R94] := R95
414 [-]: LOADK     R94 K265     ; R94 := "CHANNEL_TRADE"
415 [-]: CONST     R95 8        ; R95 := 8.000000
416 [-]: SETTABLE  R93 R94 R95  ; R93[R94] := R95
417 [-]: LOADK     R94 K266     ; R94 := "CHANNEL_PRIVATE_CHAT"
418 [-]: CONST     R95 9        ; R95 := 9.000000
419 [-]: SETTABLE  R93 R94 R95  ; R93[R94] := R95
420 [-]: CLOSURE   R94 1        ; R94 := closure(Function #2)
421 [-]: MOVE      R0 R93       ; R0 := R93
422 [-]: CLOSURE   R95 2        ; R95 := closure(Function #3)
423 [-]: SETGLOBAL R95 K267     ; IsInputBlocked := R95
424 [-]: CLOSURE   R95 3        ; R95 := closure(Function #4)
425 [-]: MOVE      R0 R16       ; R0 := R16
426 [-]: MOVE      R0 R17       ; R0 := R17
427 [-]: CLOSURE   R96 4        ; R96 := closure(Function #5)
428 [-]: MOVE      R0 R85       ; R0 := R85
429 [-]: CLOSURE   R97 5        ; R97 := closure(Function #6)
430 [-]: MOVE      R0 R73       ; R0 := R73
431 [-]: MOVE      R0 R96       ; R0 := R96
432 [-]: MOVE      R0 R74       ; R0 := R74
433 [-]: CLOSURE   R98 6        ; R98 := closure(Function #7)
434 [-]: CLOSURE   R99 7        ; R99 := closure(Function #8)
435 [-]: CLOSURE   R100 8       ; R100 := closure(Function #9)
436 [-]: CLOSURE   R101 9       ; R101 := closure(Function #10)
437 [-]: SETGLOBAL R101 K268    ; SystemMessage := R101
438 [-]: CLOSURE   R101 10      ; R101 := closure(Function #11)
439 [-]: SETGLOBAL R101 K269    ; ChannelSystemMessage := R101
440 [-]: CLOSURE   R101 11      ; R101 := closure(Function #12)
441 [-]: SETGLOBAL R101 K270    ; ChannelNotificationMessage := R101
442 [-]: CLOSURE   R101 12      ; R101 := closure(Function #13)
443 [-]: CLOSURE   R102 13      ; R102 := closure(Function #14)
444 [-]: MOVE      R0 R101      ; R0 := R101
445 [-]: MOVE      R0 R63       ; R0 := R63
446 [-]: MOVE      R0 R10       ; R0 := R10
447 [-]: MOVE      R0 R64       ; R0 := R64
448 [-]: CLOSURE   R103 14      ; R103 := closure(Function #15)
449 [-]: MOVE      R0 R63       ; R0 := R63
450 [-]: MOVE      R0 R101      ; R0 := R101
451 [-]: MOVE      R0 R64       ; R0 := R64
452 [-]: MOVE      R0 R20       ; R0 := R20
453 [-]: CLOSURE   R104 15      ; R104 := closure(Function #16)
454 [-]: MOVE      R0 R20       ; R0 := R20
455 [-]: CLOSURE   R105 16      ; R105 := closure(Function #17)
456 [-]: CLOSURE   R106 17      ; R106 := closure(Function #18)
457 [-]: MOVE      R0 R20       ; R0 := R20
458 [-]: MOVE      R0 R105      ; R0 := R105
459 [-]: CLOSURE   R107 18      ; R107 := closure(Function #19)
460 [-]: CLOSURE   R108 19      ; R108 := closure(Function #20)
461 [-]: MOVE      R0 R32       ; R0 := R32
462 [-]: MOVE      R0 R45       ; R0 := R45
463 [-]: MOVE      R0 R76       ; R0 := R76
464 [-]: MOVE      R0 R77       ; R0 := R77
465 [-]: CLOSURE   R109 20      ; R109 := closure(Function #21)
466 [-]: SETGLOBAL R109 K271    ; MouseCatcherPressed := R109
467 [-]: CLOSURE   R109 21      ; R109 := closure(Function #22)
468 [-]: SETGLOBAL R109 K272    ; WindowTitlePress := R109
469 [-]: CLOSURE   R109 22      ; R109 := closure(Function #23)
470 [-]: SETGLOBAL R109 K273    ; WindowTitleRelease := R109
471 [-]: CLOSURE   R109 23      ; R109 := closure(Function #24)
472 [-]: SETGLOBAL R109 K274    ; WindowTitleRollOver := R109
473 [-]: CLOSURE   R109 24      ; R109 := closure(Function #25)
474 [-]: SETGLOBAL R109 K275    ; WindowTitleRollOut := R109
475 [-]: CLOSURE   R109 25      ; R109 := closure(Function #26)
476 [-]: SETGLOBAL R109 K276    ; BottomResizePress := R109
477 [-]: CLOSURE   R109 26      ; R109 := closure(Function #27)
478 [-]: SETGLOBAL R109 K277    ; BottomResizeRelease := R109
479 [-]: CLOSURE   R109 27      ; R109 := closure(Function #28)
480 [-]: SETGLOBAL R109 K278    ; BottomResizeRollOver := R109
481 [-]: CLOSURE   R109 28      ; R109 := closure(Function #29)
482 [-]: SETGLOBAL R109 K279    ; BottomResizeRollOut := R109
483 [-]: CLOSURE   R109 29      ; R109 := closure(Function #30)
484 [-]: SETGLOBAL R109 K280    ; TopResizePressed := R109
485 [-]: CLOSURE   R109 30      ; R109 := closure(Function #31)
486 [-]: SETGLOBAL R109 K281    ; TopResizeRelease := R109
487 [-]: CLOSURE   R109 31      ; R109 := closure(Function #32)
488 [-]: SETGLOBAL R109 K282    ; TopResizeRollOver := R109
489 [-]: CLOSURE   R109 32      ; R109 := closure(Function #33)
490 [-]: SETGLOBAL R109 K283    ; TopResizeRollOut := R109
491 [-]: CLOSURE   R109 33      ; R109 := closure(Function #34)
492 [-]: SETGLOBAL R109 K284    ; Global_onRelease := R109
493 [-]: CLOSURE   R109 34      ; R109 := closure(Function #35)
494 [-]: SETGLOBAL R109 K285    ; UserLineRollOver := R109
495 [-]: CLOSURE   R109 35      ; R109 := closure(Function #36)
496 [-]: SETGLOBAL R109 K286    ; UserLineRollOut := R109
497 [-]: CLOSURE   R109 36      ; R109 := closure(Function #37)
498 [-]: SETGLOBAL R109 K287    ; UserLinePressed := R109
499 [-]: CLOSURE   R109 37      ; R109 := closure(Function #38)
500 [-]: SETGLOBAL R109 K288    ; EmoteRollOver := R109
501 [-]: CLOSURE   R109 38      ; R109 := closure(Function #39)
502 [-]: SETGLOBAL R109 K289    ; EmoteRollOut := R109
503 [-]: CLOSURE   R109 39      ; R109 := closure(Function #40)
504 [-]: MOVE      R0 R20       ; R0 := R20
505 [-]: SETGLOBAL R109 K290    ; EmotePressed := R109
506 [-]: CLOSURE   R109 40      ; R109 := closure(Function #41)
507 [-]: CLOSURE   R110 41      ; R110 := closure(Function #42)
508 [-]: CLOSURE   R111 42      ; R111 := closure(Function #43)
509 [-]: MOVE      R0 R109      ; R0 := R109
510 [-]: MOVE      R0 R110      ; R0 := R110
511 [-]: CLOSURE   R112 43      ; R112 := closure(Function #44)
512 [-]: MOVE      R0 R111      ; R0 := R111
513 [-]: MOVE      R0 R110      ; R0 := R110
514 [-]: CLOSURE   R113 44      ; R113 := closure(Function #45)
515 [-]: MOVE      R0 R107      ; R0 := R107
516 [-]: CLOSURE   R114 45      ; R114 := closure(Function #46)
517 [-]: MOVE      R0 R21       ; R0 := R21
518 [-]: CLOSURE   R115 46      ; R115 := closure(Function #47)
519 [-]: SETGLOBAL R115 K291    ; ConfirmWeaponRetrieve := R115
520 [-]: CLOSURE   R115 47      ; R115 := closure(Function #48)
521 [-]: MOVE      R0 R113      ; R0 := R113
522 [-]: SETGLOBAL R115 K292    ; MinimizeButton := R115
523 [-]: CLOSURE   R115 48      ; R115 := closure(Function #49)
524 [-]: CLOSURE   R116 49      ; R116 := closure(Function #50)
525 [-]: MOVE      R0 R115      ; R0 := R115
526 [-]: SETGLOBAL R116 K293    ; IsMinimized := R116
527 [-]: CLOSURE   R116 50      ; R116 := closure(Function #51)
528 [-]: MOVE      R0 R30       ; R0 := R30
529 [-]: MOVE      R0 R44       ; R0 := R44
530 [-]: MOVE      R0 R20       ; R0 := R20
531 [-]: MOVE      R0 R3        ; R0 := R3
532 [-]: MOVE      R0 R19       ; R0 := R19
533 [-]: MOVE      R0 R46       ; R0 := R46
534 [-]: MOVE      R0 R2        ; R0 := R2
535 [-]: MOVE      R0 R4        ; R0 := R4
536 [-]: MOVE      R0 R32       ; R0 := R32
537 [-]: MOVE      R0 R77       ; R0 := R77
538 [-]: MOVE      R0 R108      ; R0 := R108
539 [-]: MOVE      R0 R76       ; R0 := R76
540 [-]: MOVE      R0 R45       ; R0 := R45
541 [-]: MOVE      R0 R75       ; R0 := R75
542 [-]: MOVE      R0 R48       ; R0 := R48
543 [-]: MOVE      R0 R78       ; R0 := R78
544 [-]: MOVE      R0 R49       ; R0 := R49
545 [-]: MOVE      R0 R85       ; R0 := R85
546 [-]: CLOSURE   R117 51      ; R117 := closure(Function #52)
547 [-]: MOVE      R0 R20       ; R0 := R20
548 [-]: MOVE      R0 R4        ; R0 := R4
549 [-]: MOVE      R0 R2        ; R0 := R2
550 [-]: MOVE      R0 R1        ; R0 := R1
551 [-]: MOVE      R0 R99       ; R0 := R99
552 [-]: CLOSURE   R118 52      ; R118 := closure(Function #53)
553 [-]: CLOSURE   R119 53      ; R119 := closure(Function #54)
554 [-]: MOVE      R0 R33       ; R0 := R33
555 [-]: MOVE      R0 R21       ; R0 := R21
556 [-]: MOVE      R0 R47       ; R0 := R47
557 [-]: MOVE      R0 R118      ; R0 := R118
558 [-]: CLOSURE   R120 54      ; R120 := closure(Function #55)
559 [-]: MOVE      R0 R21       ; R0 := R21
560 [-]: MOVE      R0 R60       ; R0 := R60
561 [-]: MOVE      R0 R59       ; R0 := R59
562 [-]: CLOSURE   R121 55      ; R121 := closure(Function #56)
563 [-]: NEWTABLE  R122 0 0     ; R122 := {}
564 [-]: LOADK     R123 K294    ; R123 := "GetOmegaCards"
565 [-]: CLOSURE   R124 56      ; R124 := closure(Function #57)
566 [-]: MOVE      R0 R23       ; R0 := R23
567 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
568 [-]: LOADK     R123 K295    ; R123 := "GetStepSequencers"
569 [-]: CLOSURE   R124 57      ; R124 := closure(Function #58)
570 [-]: MOVE      R0 R25       ; R0 := R25
571 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
572 [-]: LOADK     R123 K296    ; R123 := "GetModularWeapons"
573 [-]: CLOSURE   R124 58      ; R124 := closure(Function #59)
574 [-]: MOVE      R0 R0        ; R0 := R0
575 [-]: MOVE      R0 R20       ; R0 := R20
576 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
577 [-]: LOADK     R123 K297    ; R123 := "GetWeaponConfigs"
578 [-]: CLOSURE   R124 59      ; R124 := closure(Function #60)
579 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
580 [-]: LOADK     R123 K298    ; R123 := "CanLink"
581 [-]: CLOSURE   R124 60      ; R124 := closure(Function #61)
582 [-]: SETTABLE  R122 R123 R124; R122[R123] := R124
583 [-]: CLOSURE   R123 61      ; R123 := closure(Function #62)
584 [-]: MOVE      R0 R33       ; R0 := R33
585 [-]: MOVE      R0 R20       ; R0 := R20
586 [-]: CLOSURE   R124 62      ; R124 := closure(Function #63)
587 [-]: MOVE      R0 R123      ; R0 := R123
588 [-]: MOVE      R0 R33       ; R0 := R33
589 [-]: SETGLOBAL R124 K299    ; RecursiveOmegaReplace := R124
590 [-]: CLOSURE   R124 63      ; R124 := closure(Function #64)
591 [-]: MOVE      R0 R123      ; R0 := R123
592 [-]: MOVE      R0 R33       ; R0 := R33
593 [-]: SETGLOBAL R124 K300    ; RecursiveSongReplace := R124
594 [-]: CLOSURE   R124 64      ; R124 := closure(Function #65)
595 [-]: MOVE      R0 R123      ; R0 := R123
596 [-]: MOVE      R0 R33       ; R0 := R33
597 [-]: SETGLOBAL R124 K301    ; RecursiveZawReplace := R124
598 [-]: CLOSURE   R124 65      ; R124 := closure(Function #66)
599 [-]: MOVE      R0 R123      ; R0 := R123
600 [-]: MOVE      R0 R33       ; R0 := R33
601 [-]: SETGLOBAL R124 K302    ; RecursiveAmpReplace := R124
602 [-]: CLOSURE   R124 66      ; R124 := closure(Function #67)
603 [-]: MOVE      R0 R123      ; R0 := R123
604 [-]: MOVE      R0 R33       ; R0 := R33
605 [-]: SETGLOBAL R124 K303    ; RecursiveMoaPetReplace := R124
606 [-]: CLOSURE   R124 67      ; R124 := closure(Function #68)
607 [-]: MOVE      R0 R123      ; R0 := R123
608 [-]: MOVE      R0 R33       ; R0 := R33
609 [-]: SETGLOBAL R124 K304    ; RecursiveKDriveReplace := R124
610 [-]: CLOSURE   R124 68      ; R124 := closure(Function #69)
611 [-]: MOVE      R0 R123      ; R0 := R123
612 [-]: MOVE      R0 R33       ; R0 := R33
613 [-]: SETGLOBAL R124 K305    ; RecursiveKitgunReplace := R124
614 [-]: CLOSURE   R124 69      ; R124 := closure(Function #70)
615 [-]: MOVE      R0 R123      ; R0 := R123
616 [-]: MOVE      R0 R33       ; R0 := R33
617 [-]: SETGLOBAL R124 K306    ; RecursiveAppearanceReplace := R124
618 [-]: CLOSURE   R124 70      ; R124 := closure(Function #71)
619 [-]: MOVE      R0 R123      ; R0 := R123
620 [-]: MOVE      R0 R33       ; R0 := R33
621 [-]: SETGLOBAL R124 K307    ; RecursiveModConfigReplace := R124
622 [-]: CLOSURE   R124 71      ; R124 := closure(Function #72)
623 [-]: MOVE      R0 R123      ; R0 := R123
624 [-]: MOVE      R0 R33       ; R0 := R33
625 [-]: SETGLOBAL R124 K308    ; RecursiveShawzinReplace := R124
626 [-]: CLOSURE   R124 72      ; R124 := closure(Function #73)
627 [-]: MOVE      R0 R6        ; R0 := R6
628 [-]: MOVE      R0 R20       ; R0 := R20
629 [-]: CLOSURE   R125 73      ; R125 := closure(Function #74)
630 [-]: CLOSURE   R126 74      ; R126 := closure(Function #75)
631 [-]: MOVE      R0 R125      ; R0 := R125
632 [-]: CLOSURE   R127 75      ; R127 := closure(Function #76)
633 [-]: MOVE      R0 R61       ; R0 := R61
634 [-]: CLOSURE   R128 76      ; R128 := closure(Function #77)
635 [-]: MOVE      R0 R127      ; R0 := R127
636 [-]: MOVE      R0 R90       ; R0 := R90
637 [-]: SETGLOBAL R128 K309    ; ConfirmModeratorKickBan := R128
638 [-]: CLOSURE   R128 77      ; R128 := closure(Function #78)
639 [-]: MOVE      R0 R20       ; R0 := R20
640 [-]: CLOSURE   R129 78      ; R129 := closure(Function #79)
641 [-]: MOVE      R0 R125      ; R0 := R125
642 [-]: MOVE      R0 R90       ; R0 := R90
643 [-]: MOVE      R0 R128      ; R0 := R128
644 [-]: MOVE      R0 R127      ; R0 := R127
645 [-]: CLOSURE   R130 79      ; R130 := closure(Function #80)
646 [-]: MOVE      R0 R20       ; R0 := R20
647 [-]: MOVE      R0 R61       ; R0 := R61
648 [-]: SETGLOBAL R130 K310    ; RemoveFromChatPlayerIDResult := R130
649 [-]: CLOSURE   R130 80      ; R130 := closure(Function #81)
650 [-]: MOVE      R0 R61       ; R0 := R61
651 [-]: MOVE      R0 R21       ; R0 := R21
652 [-]: SETGLOBAL R130 K311    ; OnGetPlayerGuildRank := R130
653 [-]: CLOSURE   R130 81      ; R130 := closure(Function #82)
654 [-]: MOVE      R0 R126      ; R0 := R126
655 [-]: MOVE      R0 R106      ; R0 := R106
656 [-]: CLOSURE   R131 82      ; R131 := closure(Function #83)
657 [-]: MOVE      R0 R129      ; R0 := R129
658 [-]: MOVE      R0 R106      ; R0 := R106
659 [-]: CLOSURE   R132 83      ; R132 := closure(Function #84)
660 [-]: MOVE      R0 R20       ; R0 := R20
661 [-]: CLOSURE   R133 84      ; R133 := closure(Function #85)
662 [-]: MOVE      R0 R61       ; R0 := R61
663 [-]: SETGLOBAL R133 K312    ; BanPlayer := R133
664 [-]: CLOSURE   R133 85      ; R133 := closure(Function #86)
665 [-]: MOVE      R0 R20       ; R0 := R20
666 [-]: MOVE      R0 R61       ; R0 := R61
667 [-]: MOVE      R0 R132      ; R0 := R132
668 [-]: MOVE      R0 R21       ; R0 := R21
669 [-]: CLOSURE   R134 86      ; R134 := closure(Function #87)
670 [-]: CLOSURE   R135 87      ; R135 := closure(Function #88)
671 [-]: MOVE      R0 R20       ; R0 := R20
672 [-]: CLOSURE   R136 88      ; R136 := closure(Function #89)
673 [-]: CLOSURE   R137 89      ; R137 := closure(Function #90)
674 [-]: MOVE      R0 R136      ; R0 := R136
675 [-]: CLOSURE   R138 90      ; R138 := closure(Function #91)
676 [-]: MOVE      R0 R28       ; R0 := R28
677 [-]: MOVE      R0 R33       ; R0 := R33
678 [-]: MOVE      R0 R43       ; R0 := R43
679 [-]: MOVE      R0 R20       ; R0 := R20
680 [-]: MOVE      R0 R115      ; R0 := R115
681 [-]: MOVE      R0 R65       ; R0 := R65
682 [-]: SETGLOBAL R138 K313    ; LinkAppearance := R138
683 [-]: CLOSURE   R138 91      ; R138 := closure(Function #92)
684 [-]: MOVE      R0 R28       ; R0 := R28
685 [-]: MOVE      R0 R33       ; R0 := R33
686 [-]: MOVE      R0 R43       ; R0 := R43
687 [-]: MOVE      R0 R20       ; R0 := R20
688 [-]: MOVE      R0 R115      ; R0 := R115
689 [-]: MOVE      R0 R65       ; R0 := R65
690 [-]: SETGLOBAL R138 K314    ; LinkModConfig := R138
691 [-]: CLOSURE   R138 92      ; R138 := closure(Function #93)
692 [-]: MOVE      R0 R33       ; R0 := R33
693 [-]: MOVE      R0 R43       ; R0 := R43
694 [-]: MOVE      R0 R20       ; R0 := R20
695 [-]: MOVE      R0 R115      ; R0 := R115
696 [-]: MOVE      R0 R65       ; R0 := R65
697 [-]: SETGLOBAL R138 K315    ; LinkShawzin := R138
698 [-]: CLOSURE   R138 93      ; R138 := closure(Function #94)
699 [-]: MOVE      R0 R43       ; R0 := R43
700 [-]: MOVE      R0 R20       ; R0 := R20
701 [-]: MOVE      R0 R31       ; R0 := R31
702 [-]: MOVE      R0 R119      ; R0 := R119
703 [-]: MOVE      R0 R134      ; R0 := R134
704 [-]: MOVE      R0 R6        ; R0 := R6
705 [-]: MOVE      R0 R102      ; R0 := R102
706 [-]: MOVE      R0 R85       ; R0 := R85
707 [-]: MOVE      R0 R100      ; R0 := R100
708 [-]: MOVE      R0 R122      ; R0 := R122
709 [-]: MOVE      R0 R33       ; R0 := R33
710 [-]: MOVE      R0 R132      ; R0 := R132
711 [-]: MOVE      R0 R123      ; R0 := R123
712 [-]: MOVE      R0 R25       ; R0 := R25
713 [-]: MOVE      R0 R135      ; R0 := R135
714 [-]: MOVE      R0 R104      ; R0 := R104
715 [-]: MOVE      R0 R118      ; R0 := R118
716 [-]: MOVE      R0 R16       ; R0 := R16
717 [-]: MOVE      R0 R17       ; R0 := R17
718 [-]: MOVE      R0 R21       ; R0 := R21
719 [-]: MOVE      R0 R24       ; R0 := R24
720 [-]: MOVE      R0 R71       ; R0 := R71
721 [-]: MOVE      R0 R19       ; R0 := R19
722 [-]: MOVE      R0 R120      ; R0 := R120
723 [-]: MOVE      R0 R62       ; R0 := R62
724 [-]: MOVE      R0 R129      ; R0 := R129
725 [-]: MOVE      R0 R133      ; R0 := R133
726 [-]: MOVE      R0 R121      ; R0 := R121
727 [-]: MOVE      R0 R124      ; R0 := R124
728 [-]: MOVE      R0 R94       ; R0 := R94
729 [-]: MOVE      R0 R99       ; R0 := R99
730 [-]: MOVE      R0 R114      ; R0 := R114
731 [-]: MOVE      R0 R1        ; R0 := R1
732 [-]: MOVE      R0 R88       ; R0 := R88
733 [-]: MOVE      R0 R28       ; R0 := R28
734 [-]: MOVE      R0 R49       ; R0 := R49
735 [-]: MOVE      R0 R91       ; R0 := R91
736 [-]: CLOSURE   R139 94      ; R139 := closure(Function #95)
737 [-]: SETGLOBAL R139 K316    ; ChatChannelJoinUserList := R139
738 [-]: CLOSURE   R139 95      ; R139 := closure(Function #96)
739 [-]: SETGLOBAL R139 K317    ; ChatChannelJoin := R139
740 [-]: CLOSURE   R139 96      ; R139 := closure(Function #97)
741 [-]: SETGLOBAL R139 K318    ; ChatChannelLeft := R139
742 [-]: CLOSURE   R139 97      ; R139 := closure(Function #98)
743 [-]: SETGLOBAL R139 K319    ; ChatMessageReceived := R139
744 [-]: CLOSURE   R139 98      ; R139 := closure(Function #99)
745 [-]: SETGLOBAL R139 K320    ; InvalidWhisperTarget := R139
746 [-]: CLOSURE   R139 99      ; R139 := closure(Function #100)
747 [-]: MOVE      R0 R20       ; R0 := R20
748 [-]: SETGLOBAL R139 K321    ; OnClanStateChanged := R139
749 [-]: CLOSURE   R139 100     ; R139 := closure(Function #101)
750 [-]: SETGLOBAL R139 K322    ; WindowTabSelected := R139
751 [-]: CLOSURE   R139 101     ; R139 := closure(Function #102)
752 [-]: SETGLOBAL R139 K323    ; WindowTabFocused := R139
753 [-]: CLOSURE   R139 102     ; R139 := closure(Function #103)
754 [-]: SETGLOBAL R139 K324    ; WindowTabUnfocused := R139
755 [-]: CLOSURE   R139 103     ; R139 := closure(Function #104)
756 [-]: SETGLOBAL R139 K325    ; EntryFocused := R139
757 [-]: CLOSURE   R139 104     ; R139 := closure(Function #105)
758 [-]: SETGLOBAL R139 K326    ; EntryUnfocused := R139
759 [-]: CLOSURE   R139 105     ; R139 := closure(Function #106)
760 [-]: MOVE      R0 R20       ; R0 := R20
761 [-]: MOVE      R0 R115      ; R0 := R115
762 [-]: MOVE      R0 R65       ; R0 := R65
763 [-]: SETGLOBAL R139 K327    ; EntryPressed := R139
764 [-]: CLOSURE   R139 106     ; R139 := closure(Function #107)
765 [-]: SETGLOBAL R139 K328    ; EntryReleased := R139
766 [-]: CLOSURE   R65 107      ; R65 := closure(Function #108)
767 [-]: MOVE      R0 R20       ; R0 := R20
768 [-]: CLOSURE   R139 108     ; R139 := closure(Function #109)
769 [-]: MOVE      R0 R65       ; R0 := R65
770 [-]: SETGLOBAL R139 K329    ; MaximizeButton := R139
771 [-]: CLOSURE   R139 109     ; R139 := closure(Function #110)
772 [-]: SETGLOBAL R139 K330    ; IsMaximized := R139
773 [-]: CLOSURE   R139 110     ; R139 := closure(Function #111)
774 [-]: SETGLOBAL R139 K331    ; IsFull := R139
775 [-]: CLOSURE   R139 111     ; R139 := closure(Function #112)
776 [-]: SETGLOBAL R139 K332    ; AlphabetExpanderFocused := R139
777 [-]: CLOSURE   R139 112     ; R139 := closure(Function #113)
778 [-]: SETGLOBAL R139 K333    ; AlphabetExpanderUnfocused := R139
779 [-]: CLOSURE   R139 113     ; R139 := closure(Function #114)
780 [-]: MOVE      R0 R20       ; R0 := R20
781 [-]: CLOSURE   R140 114     ; R140 := closure(Function #115)
782 [-]: MOVE      R0 R139      ; R0 := R139
783 [-]: SETGLOBAL R140 K334    ; AlphabetExpanderPressed := R140
784 [-]: CLOSURE   R140 115     ; R140 := closure(Function #116)
785 [-]: SETGLOBAL R140 K335    ; AlphabetIndexRollOver := R140
786 [-]: CLOSURE   R140 116     ; R140 := closure(Function #117)
787 [-]: SETGLOBAL R140 K336    ; AlphabetIndexRollOut := R140
788 [-]: CLOSURE   R140 117     ; R140 := closure(Function #118)
789 [-]: SETGLOBAL R140 K337    ; AlphabetIndexPressed := R140
790 [-]: CLOSURE   R140 118     ; R140 := closure(Function #119)
791 [-]: SETGLOBAL R140 K338    ; ChatConnectionChanged := R140
792 [-]: CLOSURE   R140 119     ; R140 := closure(Function #120)
793 [-]: SETGLOBAL R140 K339    ; OnIgnoreUser := R140
794 [-]: CLOSURE   R140 120     ; R140 := closure(Function #121)
795 [-]: MOVE      R0 R20       ; R0 := R20
796 [-]: MOVE      R0 R21       ; R0 := R21
797 [-]: MOVE      R0 R94       ; R0 := R94
798 [-]: MOVE      R0 R30       ; R0 := R30
799 [-]: MOVE      R0 R5        ; R0 := R5
800 [-]: MOVE      R0 R99       ; R0 := R99
801 [-]: MOVE      R0 R4        ; R0 := R4
802 [-]: MOVE      R0 R49       ; R0 := R49
803 [-]: MOVE      R0 R2        ; R0 := R2
804 [-]: MOVE      R0 R116      ; R0 := R116
805 [-]: MOVE      R0 R117      ; R0 := R117
806 [-]: MOVE      R0 R72       ; R0 := R72
807 [-]: MOVE      R0 R111      ; R0 := R111
808 [-]: MOVE      R0 R33       ; R0 := R33
809 [-]: MOVE      R0 R119      ; R0 := R119
810 [-]: MOVE      R0 R120      ; R0 := R120
811 [-]: MOVE      R0 R114      ; R0 := R114
812 [-]: MOVE      R0 R138      ; R0 := R138
813 [-]: MOVE      R0 R115      ; R0 := R115
814 [-]: MOVE      R0 R68       ; R0 := R68
815 [-]: MOVE      R0 R17       ; R0 := R17
816 [-]: MOVE      R0 R95       ; R0 := R95
817 [-]: MOVE      R0 R98       ; R0 := R98
818 [-]: MOVE      R0 R56       ; R0 := R56
819 [-]: MOVE      R0 R73       ; R0 := R73
820 [-]: MOVE      R0 R74       ; R0 := R74
821 [-]: MOVE      R0 R14       ; R0 := R14
822 [-]: MOVE      R0 R15       ; R0 := R15
823 [-]: MOVE      R0 R13       ; R0 := R13
824 [-]: MOVE      R0 R11       ; R0 := R11
825 [-]: MOVE      R0 R12       ; R0 := R12
826 [-]: MOVE      R0 R79       ; R0 := R79
827 [-]: MOVE      R0 R80       ; R0 := R80
828 [-]: MOVE      R0 R6        ; R0 := R6
829 [-]: MOVE      R0 R82       ; R0 := R82
830 [-]: MOVE      R0 R66       ; R0 := R66
831 [-]: MOVE      R0 R9        ; R0 := R9
832 [-]: CLOSURE   R141 121     ; R141 := closure(Function #122)
833 [-]: MOVE      R0 R20       ; R0 := R20
834 [-]: CLOSURE   R142 122     ; R142 := closure(Function #123)
835 [-]: MOVE      R0 R141      ; R0 := R141
836 [-]: CLOSURE   R143 123     ; R143 := closure(Function #124)
837 [-]: SETGLOBAL R143 K340    ; onHudMarginsChanged := R143
838 [-]: CLOSURE   R143 124     ; R143 := closure(Function #125)
839 [-]: MOVE      R0 R142      ; R0 := R142
840 [-]: SETGLOBAL R143 K341    ; onViewportSizeChanged := R143
841 [-]: CLOSURE   R143 125     ; R143 := closure(Function #126)
842 [-]: MOVE      R0 R36       ; R0 := R36
843 [-]: SETGLOBAL R143 K342    ; Shutdown := R143
844 [-]: CLOSURE   R143 126     ; R143 := closure(Function #127)
845 [-]: SETGLOBAL R143 K343    ; ContextItemFocused := R143
846 [-]: CLOSURE   R143 127     ; R143 := closure(Function #128)
847 [-]: SETGLOBAL R143 K344    ; ContextItemUnfocused := R143
848 [-]: CLOSURE   R143 128     ; R143 := closure(Function #129)
849 [-]: SETGLOBAL R143 K345    ; ContextItemPressed := R143
850 [-]: CLOSURE   R143 129     ; R143 := closure(Function #130)
851 [-]: MOVE      R0 R30       ; R0 := R30
852 [-]: MOVE      R0 R107      ; R0 := R107
853 [-]: MOVE      R0 R20       ; R0 := R20
854 [-]: MOVE      R0 R27       ; R0 := R27
855 [-]: CLOSURE   R144 130     ; R144 := closure(Function #131)
856 [-]: MOVE      R0 R42       ; R0 := R42
857 [-]: MOVE      R0 R39       ; R0 := R39
858 [-]: CLOSURE   R145 131     ; R145 := closure(Function #132)
859 [-]: MOVE      R0 R21       ; R0 := R21
860 [-]: CLOSURE   R146 132     ; R146 := closure(Function #133)
861 [-]: CLOSURE   R147 133     ; R147 := closure(Function #134)
862 [-]: MOVE      R0 R20       ; R0 := R20
863 [-]: MOVE      R0 R55       ; R0 := R55
864 [-]: CLOSURE   R148 134     ; R148 := closure(Function #135)
865 [-]: MOVE      R0 R20       ; R0 := R20
866 [-]: CLOSURE   R149 135     ; R149 := closure(Function #136)
867 [-]: MOVE      R0 R21       ; R0 := R21
868 [-]: CLOSURE   R150 136     ; R150 := closure(Function #137)
869 [-]: MOVE      R0 R21       ; R0 := R21
870 [-]: CLOSURE   R151 137     ; R151 := closure(Function #138)
871 [-]: SETGLOBAL R151 K346    ; OnSyncInbox := R151
872 [-]: CLOSURE   R151 138     ; R151 := closure(Function #139)
873 [-]: CLOSURE   R152 139     ; R152 := closure(Function #140)
874 [-]: MOVE      R0 R42       ; R0 := R42
875 [-]: MOVE      R0 R39       ; R0 := R39
876 [-]: MOVE      R0 R145      ; R0 := R145
877 [-]: MOVE      R0 R146      ; R0 := R146
878 [-]: MOVE      R0 R148      ; R0 := R148
879 [-]: MOVE      R0 R149      ; R0 := R149
880 [-]: MOVE      R0 R147      ; R0 := R147
881 [-]: MOVE      R0 R150      ; R0 := R150
882 [-]: MOVE      R0 R44       ; R0 := R44
883 [-]: MOVE      R0 R151      ; R0 := R151
884 [-]: CLOSURE   R153 140     ; R153 := closure(Function #141)
885 [-]: MOVE      R0 R54       ; R0 := R54
886 [-]: MOVE      R0 R53       ; R0 := R53
887 [-]: MOVE      R0 R20       ; R0 := R20
888 [-]: MOVE      R0 R44       ; R0 := R44
889 [-]: CLOSURE   R154 141     ; R154 := closure(Function #142)
890 [-]: MOVE      R0 R97       ; R0 := R97
891 [-]: MOVE      R0 R37       ; R0 := R37
892 [-]: MOVE      R0 R89       ; R0 := R89
893 [-]: MOVE      R0 R144      ; R0 := R144
894 [-]: MOVE      R0 R38       ; R0 := R38
895 [-]: MOVE      R0 R42       ; R0 := R42
896 [-]: MOVE      R0 R39       ; R0 := R39
897 [-]: MOVE      R0 R40       ; R0 := R40
898 [-]: MOVE      R0 R41       ; R0 := R41
899 [-]: MOVE      R0 R152      ; R0 := R152
900 [-]: MOVE      R0 R153      ; R0 := R153
901 [-]: SETGLOBAL R154 K347    ; OnSyncWorldState := R154
902 [-]: CLOSURE   R154 142     ; R154 := closure(Function #143)
903 [-]: MOVE      R0 R72       ; R0 := R72
904 [-]: MOVE      R0 R57       ; R0 := R57
905 [-]: MOVE      R0 R8        ; R0 := R8
906 [-]: MOVE      R0 R7        ; R0 := R7
907 [-]: MOVE      R0 R91       ; R0 := R91
908 [-]: MOVE      R0 R20       ; R0 := R20
909 [-]: CLOSURE   R155 143     ; R155 := closure(Function #144)
910 [-]: MOVE      R0 R154      ; R0 := R154
911 [-]: MOVE      R0 R142      ; R0 := R142
912 [-]: SETGLOBAL R155 K348    ; OnProfileSaved := R155
913 [-]: CLOSURE   R155 144     ; R155 := closure(Function #145)
914 [-]: SETGLOBAL R155 K349    ; OnInitPresenceResync := R155
915 [-]: CLOSURE   R155 145     ; R155 := closure(Function #146)
916 [-]: MOVE      R0 R21       ; R0 := R21
917 [-]: MOVE      R0 R85       ; R0 := R85
918 [-]: CLOSURE   R156 146     ; R156 := closure(Function #147)
919 [-]: MOVE      R0 R155      ; R0 := R155
920 [-]: SETGLOBAL R156 K350    ; UpdateOmegaSuggestTree := R156
921 [-]: CLOSURE   R156 147     ; R156 := closure(Function #148)
922 [-]: MOVE      R0 R85       ; R0 := R85
923 [-]: CLOSURE   R157 148     ; R157 := closure(Function #149)
924 [-]: MOVE      R0 R156      ; R0 := R156
925 [-]: SETGLOBAL R157 K351    ; UpdateModularSuggestTree := R157
926 [-]: CLOSURE   R157 149     ; R157 := closure(Function #150)
927 [-]: MOVE      R0 R21       ; R0 := R21
928 [-]: CLOSURE   R158 150     ; R158 := closure(Function #151)
929 [-]: MOVE      R0 R46       ; R0 := R46
930 [-]: MOVE      R0 R35       ; R0 := R35
931 [-]: CLOSURE   R159 151     ; R159 := closure(Function #152)
932 [-]: MOVE      R0 R91       ; R0 := R91
933 [-]: MOVE      R0 R44       ; R0 := R44
934 [-]: MOVE      R0 R157      ; R0 := R157
935 [-]: MOVE      R0 R89       ; R0 := R89
936 [-]: MOVE      R0 R21       ; R0 := R21
937 [-]: MOVE      R0 R51       ; R0 := R51
938 [-]: MOVE      R0 R29       ; R0 := R29
939 [-]: MOVE      R0 R20       ; R0 := R20
940 [-]: MOVE      R0 R158      ; R0 := R158
941 [-]: MOVE      R0 R45       ; R0 := R45
942 [-]: MOVE      R0 R85       ; R0 := R85
943 [-]: MOVE      R0 R43       ; R0 := R43
944 [-]: MOVE      R0 R155      ; R0 := R155
945 [-]: MOVE      R0 R156      ; R0 := R156
946 [-]: MOVE      R0 R47       ; R0 := R47
947 [-]: MOVE      R0 R142      ; R0 := R142
948 [-]: MOVE      R0 R56       ; R0 := R56
949 [-]: MOVE      R0 R140      ; R0 := R140
950 [-]: MOVE      R0 R143      ; R0 := R143
951 [-]: MOVE      R0 R154      ; R0 := R154
952 [-]: MOVE      R0 R97       ; R0 := R97
953 [-]: MOVE      R0 R36       ; R0 := R36
954 [-]: MOVE      R0 R132      ; R0 := R132
955 [-]: SETGLOBAL R159 K352    ; Initialize := R159
956 [-]: CLOSURE   R159 152     ; R159 := closure(Function #153)
957 [-]: SETGLOBAL R159 K353    ; ContextMenuFrameRollOut := R159
958 [-]: CLOSURE   R159 153     ; R159 := closure(Function #154)
959 [-]: SETGLOBAL R159 K354    ; ContextMenuRollOut := R159
960 [-]: CLOSURE   R159 154     ; R159 := closure(Function #155)
961 [-]: SETGLOBAL R159 K355    ; ContextMenuRelease := R159
962 [-]: CLOSURE   R159 155     ; R159 := closure(Function #156)
963 [-]: CLOSURE   R160 156     ; R160 := closure(Function #157)
964 [-]: MOVE      R0 R17       ; R0 := R17
965 [-]: MOVE      R0 R65       ; R0 := R65
966 [-]: CLOSURE   R161 157     ; R161 := closure(Function #158)
967 [-]: MOVE      R0 R111      ; R0 := R111
968 [-]: MOVE      R0 R160      ; R0 := R160
969 [-]: MOVE      R0 R65       ; R0 := R65
970 [-]: SETGLOBAL R161 K356    ; TalkToPlayer := R161
971 [-]: CLOSURE   R71 158      ; R71 := closure(Function #159)
972 [-]: MOVE      R0 R24       ; R0 := R24
973 [-]: CLOSURE   R161 159     ; R161 := closure(Function #160)
974 [-]: MOVE      R0 R71       ; R0 := R71
975 [-]: SETGLOBAL R161 K357    ; InviteUser := R161
976 [-]: CLOSURE   R161 160     ; R161 := closure(Function #161)
977 [-]: MOVE      R0 R71       ; R0 := R71
978 [-]: CLOSURE   R162 161     ; R162 := closure(Function #162)
979 [-]: MOVE      R0 R65       ; R0 := R65
980 [-]: MOVE      R0 R111      ; R0 := R111
981 [-]: CLOSURE   R163 162     ; R163 := closure(Function #163)
982 [-]: MOVE      R0 R162      ; R0 := R162
983 [-]: SETGLOBAL R163 K358    ; WhisperPlayer := R163
984 [-]: CLOSURE   R163 163     ; R163 := closure(Function #164)
985 [-]: MOVE      R0 R162      ; R0 := R162
986 [-]: SETGLOBAL R163 K359    ; EnteringTrade := R163
987 [-]: CLOSURE   R163 164     ; R163 := closure(Function #165)
988 [-]: SETGLOBAL R163 K360    ; EnteringMenu := R163
989 [-]: CLOSURE   R163 165     ; R163 := closure(Function #166)
990 [-]: MOVE      R0 R18       ; R0 := R18
991 [-]: SETGLOBAL R163 K361    ; ExitingMenu := R163
992 [-]: CLOSURE   R163 166     ; R163 := closure(Function #167)
993 [-]: SETGLOBAL R163 K362    ; EnableInput := R163
994 [-]: CLOSURE   R163 167     ; R163 := closure(Function #168)
995 [-]: CLOSURE   R164 168     ; R164 := closure(Function #169)
996 [-]: MOVE      R0 R163      ; R0 := R163
997 [-]: SETGLOBAL R164 K363    ; DisableInput := R164
998 [-]: CLOSURE   R164 169     ; R164 := closure(Function #170)
999 [-]: CLOSURE   R165 170     ; R165 := closure(Function #171)
1000 [-]: MOVE      R0 R164      ; R0 := R164
1001 [-]: CLOSURE   R166 171     ; R166 := closure(Function #172)
1002 [-]: MOVE      R0 R165      ; R0 := R165
1003 [-]: SETGLOBAL R166 K364    ; CloseAllConvos := R166
1004 [-]: LOADNIL   R166 R166    ; R166 := nil
1005 [-]: CLOSURE   R167 172     ; R167 := closure(Function #173)
1006 [-]: MOVE      R0 R20       ; R0 := R20
1007 [-]: MOVE      R0 R166      ; R0 := R166
1008 [-]: SETGLOBAL R167 K365    ; OnGuildChanges := R167
1009 [-]: CLOSURE   R167 173     ; R167 := closure(Function #174)
1010 [-]: MOVE      R0 R166      ; R0 := R166
1011 [-]: CLOSURE   R168 174     ; R168 := closure(Function #175)
1012 [-]: MOVE      R0 R167      ; R0 := R167
1013 [-]: CLOSURE   R169 175     ; R169 := closure(Function #176)
1014 [-]: SETGLOBAL R169 K366    ; ViewXBLiveAccountIdResult := R169
1015 [-]: CLOSURE   R169 176     ; R169 := closure(Function #177)
1016 [-]: CLOSURE   R170 177     ; R170 := closure(Function #178)
1017 [-]: MOVE      R0 R20       ; R0 := R20
1018 [-]: MOVE      R0 R113      ; R0 := R113
1019 [-]: SETGLOBAL R170 K367    ; ViewWarframeProfileAccountIdResult := R170
1020 [-]: CLOSURE   R170 178     ; R170 := closure(Function #179)
1021 [-]: MOVE      R0 R100      ; R0 := R100
1022 [-]: CLOSURE   R171 179     ; R171 := closure(Function #180)
1023 [-]: MOVE      R0 R100      ; R0 := R100
1024 [-]: MOVE      R0 R132      ; R0 := R132
1025 [-]: MOVE      R0 R134      ; R0 := R134
1026 [-]: MOVE      R0 R21       ; R0 := R21
1027 [-]: CLOSURE   R172 180     ; R172 := closure(Function #181)
1028 [-]: MOVE      R0 R20       ; R0 := R20
1029 [-]: MOVE      R0 R99       ; R0 := R99
1030 [-]: MOVE      R0 R160      ; R0 := R160
1031 [-]: MOVE      R0 R164      ; R0 := R164
1032 [-]: MOVE      R0 R165      ; R0 := R165
1033 [-]: MOVE      R0 R24       ; R0 := R24
1034 [-]: MOVE      R0 R161      ; R0 := R161
1035 [-]: MOVE      R0 R169      ; R0 := R169
1036 [-]: MOVE      R0 R170      ; R0 := R170
1037 [-]: MOVE      R0 R21       ; R0 := R21
1038 [-]: MOVE      R0 R168      ; R0 := R168
1039 [-]: MOVE      R0 R159      ; R0 := R159
1040 [-]: MOVE      R0 R134      ; R0 := R134
1041 [-]: MOVE      R0 R130      ; R0 := R130
1042 [-]: MOVE      R0 R131      ; R0 := R131
1043 [-]: MOVE      R0 R133      ; R0 := R133
1044 [-]: MOVE      R0 R129      ; R0 := R129
1045 [-]: MOVE      R0 R171      ; R0 := R171
1046 [-]: MOVE      R0 R106      ; R0 := R106
1047 [-]: CLOSURE   R173 181     ; R173 := closure(Function #182)
1048 [-]: CLOSURE   R174 182     ; R174 := closure(Function #183)
1049 [-]: MOVE      R0 R173      ; R0 := R173
1050 [-]: SETGLOBAL R174 K368    ; Close := R174
1051 [-]: CLOSURE   R174 183     ; R174 := closure(Function #184)
1052 [-]: MOVE      R0 R113      ; R0 := R113
1053 [-]: MOVE      R0 R20       ; R0 := R20
1054 [-]: CLOSURE   R175 184     ; R175 := closure(Function #185)
1055 [-]: MOVE      R0 R157      ; R0 := R157
1056 [-]: MOVE      R0 R174      ; R0 := R174
1057 [-]: MOVE      R0 R163      ; R0 := R163
1058 [-]: MOVE      R0 R132      ; R0 := R132
1059 [-]: MOVE      R0 R44       ; R0 := R44
1060 [-]: MOVE      R0 R51       ; R0 := R51
1061 [-]: MOVE      R0 R52       ; R0 := R52
1062 [-]: MOVE      R0 R8        ; R0 := R8
1063 [-]: MOVE      R0 R21       ; R0 := R21
1064 [-]: MOVE      R0 R25       ; R0 := R25
1065 [-]: MOVE      R0 R43       ; R0 := R43
1066 [-]: MOVE      R0 R32       ; R0 := R32
1067 [-]: MOVE      R0 R45       ; R0 := R45
1068 [-]: MOVE      R0 R172      ; R0 := R172
1069 [-]: SETGLOBAL R175 K369    ; Update := R175
1070 [-]: CLOSURE   R175 185     ; R175 := closure(Function #186)
1071 [-]: MOVE      R0 R163      ; R0 := R163
1072 [-]: SETGLOBAL R175 K370    ; SetGameplayVisualMode := R175
1073 [-]: CLOSURE   R175 186     ; R175 := closure(Function #187)
1074 [-]: MOVE      R0 R83       ; R0 := R83
1075 [-]: MOVE      R0 R58       ; R0 := R58
1076 [-]: MOVE      R0 R65       ; R0 := R65
1077 [-]: MOVE      R0 R107      ; R0 := R107
1078 [-]: MOVE      R0 R113      ; R0 := R113
1079 [-]: SETGLOBAL R175 K371    ; ToggleFocus := R175
1080 [-]: CLOSURE   R175 187     ; R175 := closure(Function #188)
1081 [-]: MOVE      R0 R107      ; R0 := R107
1082 [-]: MOVE      R0 R20       ; R0 := R20
1083 [-]: CLOSURE   R176 188     ; R176 := closure(Function #189)
1084 [-]: SETGLOBAL R176 K372    ; LeftArrowFocused := R176
1085 [-]: CLOSURE   R176 189     ; R176 := closure(Function #190)
1086 [-]: SETGLOBAL R176 K373    ; LeftArrowUnfocused := R176
1087 [-]: CLOSURE   R176 190     ; R176 := closure(Function #191)
1088 [-]: MOVE      R0 R175      ; R0 := R175
1089 [-]: MOVE      R0 R20       ; R0 := R20
1090 [-]: SETGLOBAL R176 K374    ; LeftArrowClicked := R176
1091 [-]: CLOSURE   R176 191     ; R176 := closure(Function #192)
1092 [-]: SETGLOBAL R176 K375    ; RightArrowFocused := R176
1093 [-]: CLOSURE   R176 192     ; R176 := closure(Function #193)
1094 [-]: SETGLOBAL R176 K376    ; RightArrowUnfocused := R176
1095 [-]: CLOSURE   R176 193     ; R176 := closure(Function #194)
1096 [-]: MOVE      R0 R175      ; R0 := R175
1097 [-]: MOVE      R0 R20       ; R0 := R20
1098 [-]: SETGLOBAL R176 K377    ; RightArrowClicked := R176
1099 [-]: CLOSURE   R176 194     ; R176 := closure(Function #195)
1100 [-]: MOVE      R0 R20       ; R0 := R20
1101 [-]: SETGLOBAL R176 K378    ; MinMaxBtnFocused := R176
1102 [-]: CLOSURE   R176 195     ; R176 := closure(Function #196)
1103 [-]: SETGLOBAL R176 K379    ; MinMaxBtnUnfocused := R176
1104 [-]: CLOSURE   R176 196     ; R176 := closure(Function #197)
1105 [-]: MOVE      R0 R115      ; R0 := R115
1106 [-]: MOVE      R0 R65       ; R0 := R65
1107 [-]: MOVE      R0 R67       ; R0 := R67
1108 [-]: SETGLOBAL R176 K380    ; MinMaxBtnClicked := R176
1109 [-]: CLOSURE   R176 197     ; R176 := closure(Function #198)
1110 [-]: SETGLOBAL R176 K381    ; onKeyDown_MENU_LEFT_FROM_ANALOG := R176
1111 [-]: CLOSURE   R176 198     ; R176 := closure(Function #199)
1112 [-]: SETGLOBAL R176 K382    ; onKeyDown_MENU_RIGHT_FROM_ANALOG := R176
1113 [-]: CLOSURE   R176 199     ; R176 := closure(Function #200)
1114 [-]: CLOSURE   R177 200     ; R177 := closure(Function #201)
1115 [-]: MOVE      R0 R176      ; R0 := R176
1116 [-]: SETGLOBAL R177 K383    ; onKeyDown_MENU_SELECT := R177
1117 [-]: CLOSURE   R177 201     ; R177 := closure(Function #202)
1118 [-]: MOVE      R0 R176      ; R0 := R176
1119 [-]: SETGLOBAL R177 K384    ; onKeyUp_MENU_SELECT := R177
1120 [-]: CLOSURE   R177 202     ; R177 := closure(Function #203)
1121 [-]: MOVE      R0 R18       ; R0 := R18
1122 [-]: MOVE      R0 R115      ; R0 := R115
1123 [-]: MOVE      R0 R113      ; R0 := R113
1124 [-]: SETGLOBAL R177 K385    ; ScreenStackUpdated := R177
1125 [-]: CLOSURE   R67 203      ; R67 := closure(Function #204)
1126 [-]: MOVE      R0 R107      ; R0 := R107
1127 [-]: MOVE      R0 R20       ; R0 := R20
1128 [-]: MOVE      R0 R113      ; R0 := R113
1129 [-]: CLOSURE   R177 204     ; R177 := closure(Function #205)
1130 [-]: SETGLOBAL R177 K386    ; onKeyDown_MENU_CANCEL := R177
1131 [-]: CLOSURE   R177 205     ; R177 := closure(Function #206)
1132 [-]: MOVE      R0 R67       ; R0 := R67
1133 [-]: SETGLOBAL R177 K387    ; onKeyUp_MENU_CANCEL := R177
1134 [-]: CLOSURE   R177 206     ; R177 := closure(Function #207)
1135 [-]: SETGLOBAL R177 K388    ; OSKSendMessageCallback := R177
1136 [-]: CLOSURE   R177 207     ; R177 := closure(Function #208)
1137 [-]: SETGLOBAL R177 K389    ; SendMessageCallback := R177
1138 [-]: CLOSURE   R177 208     ; R177 := closure(Function #209)
1139 [-]: MOVE      R0 R21       ; R0 := R21
1140 [-]: SETGLOBAL R177 K390    ; SendMessageWithOSK := R177
1141 [-]: CLOSURE   R177 209     ; R177 := closure(Function #210)
1142 [-]: SETGLOBAL R177 K391    ; onKeyDown_MENU_GENERIC1 := R177
1143 [-]: CLOSURE   R177 210     ; R177 := closure(Function #211)
1144 [-]: SETGLOBAL R177 K392    ; onKeyUp_MENU_GENERIC1 := R177
1145 [-]: CLOSURE   R177 211     ; R177 := closure(Function #212)
1146 [-]: SETGLOBAL R177 K393    ; onKeyDown_MENU_GENERIC2 := R177
1147 [-]: CLOSURE   R177 212     ; R177 := closure(Function #213)
1148 [-]: SETGLOBAL R177 K394    ; onKeyUp_MENU_GENERIC2 := R177
1149 [-]: CLOSURE   R177 213     ; R177 := closure(Function #214)
1150 [-]: SETGLOBAL R177 K395    ; onKeyUp_MENU_LTHUMB := R177
1151 [-]: CLOSURE   R177 214     ; R177 := closure(Function #215)
1152 [-]: MOVE      R0 R100      ; R0 := R100
1153 [-]: MOVE      R0 R86       ; R0 := R86
1154 [-]: MOVE      R0 R83       ; R0 := R83
1155 [-]: MOVE      R0 R132      ; R0 := R132
1156 [-]: SETGLOBAL R177 K396    ; onKeyDown_MENU_LTHUMB := R177
1157 [-]: CLOSURE   R177 215     ; R177 := closure(Function #216)
1158 [-]: SETGLOBAL R177 K397    ; onKeyUp_MENU_RTHUMB := R177
1159 [-]: CLOSURE   R177 216     ; R177 := closure(Function #217)
1160 [-]: MOVE      R0 R139      ; R0 := R139
1161 [-]: SETGLOBAL R177 K398    ; onKeyDown_MENU_RTHUMB := R177
1162 [-]: CLOSURE   R177 217     ; R177 := closure(Function #218)
1163 [-]: MOVE      R0 R175      ; R0 := R175
1164 [-]: MOVE      R0 R20       ; R0 := R20
1165 [-]: SETGLOBAL R177 K399    ; onKeyDown_MENU_LTRIGGER2 := R177
1166 [-]: CLOSURE   R177 218     ; R177 := closure(Function #219)
1167 [-]: MOVE      R0 R175      ; R0 := R175
1168 [-]: MOVE      R0 R20       ; R0 := R20
1169 [-]: SETGLOBAL R177 K400    ; onKeyDown_MENU_RTRIGGER2 := R177
1170 [-]: CLOSURE   R177 219     ; R177 := closure(Function #220)
1171 [-]: SETGLOBAL R177 K401    ; onKeyUp_MENU_RTRIGGER1 := R177
1172 [-]: CLOSURE   R177 220     ; R177 := closure(Function #221)
1173 [-]: MOVE      R0 R20       ; R0 := R20
1174 [-]: SETGLOBAL R177 K402    ; onKeyDown_MENU_RTRIGGER1 := R177
1175 [-]: CLOSURE   R177 221     ; R177 := closure(Function #222)
1176 [-]: CLOSURE   R178 222     ; R178 := closure(Function #223)
1177 [-]: CLOSURE   R179 223     ; R179 := closure(Function #224)
1178 [-]: CLOSURE   R180 224     ; R180 := closure(Function #225)
1179 [-]: CLOSURE   R66 225      ; R66 := closure(Function #226)
1180 [-]: MOVE      R0 R20       ; R0 := R20
1181 [-]: MOVE      R0 R179      ; R0 := R179
1182 [-]: MOVE      R0 R180      ; R0 := R180
1183 [-]: CLOSURE   R181 226     ; R181 := closure(Function #227)
1184 [-]: MOVE      R0 R81       ; R0 := R81
1185 [-]: MOVE      R0 R107      ; R0 := R107
1186 [-]: MOVE      R0 R80       ; R0 := R80
1187 [-]: MOVE      R0 R79       ; R0 := R79
1188 [-]: MOVE      R0 R20       ; R0 := R20
1189 [-]: MOVE      R0 R76       ; R0 := R76
1190 [-]: MOVE      R0 R77       ; R0 := R77
1191 [-]: MOVE      R0 R108      ; R0 := R108
1192 [-]: MOVE      R0 R32       ; R0 := R32
1193 [-]: MOVE      R0 R45       ; R0 := R45
1194 [-]: MOVE      R0 R57       ; R0 := R57
1195 [-]: MOVE      R0 R58       ; R0 := R58
1196 [-]: MOVE      R0 R21       ; R0 := R21
1197 [-]: MOVE      R0 R180      ; R0 := R180
1198 [-]: MOVE      R0 R66       ; R0 := R66
1199 [-]: MOVE      R0 R178      ; R0 := R178
1200 [-]: MOVE      R0 R172      ; R0 := R172
1201 [-]: MOVE      R0 R103      ; R0 := R103
1202 [-]: SETGLOBAL R181 K403    ; onRawInputEvent := R181
1203 [-]: CLOSURE   R181 227     ; R181 := closure(Function #228)
1204 [-]: MOVE      R0 R66       ; R0 := R66
1205 [-]: MOVE      R0 R177      ; R0 := R177
1206 [-]: MOVE      R0 R179      ; R0 := R179
1207 [-]: SETGLOBAL R181 K404    ; onKeyDown_MENU_MOUSE_Z := R181
1208 [-]: CLOSURE   R181 228     ; R181 := closure(Function #229)
1209 [-]: SETGLOBAL R181 K405    ; OnGetFriendsResult := R181
1210 [-]: CLOSURE   R181 229     ; R181 := closure(Function #230)
1211 [-]: SETGLOBAL R181 K406    ; OnAddFriendResultToPanel := R181
1212 [-]: CLOSURE   R181 230     ; R181 := closure(Function #231)
1213 [-]: SETGLOBAL R181 K407    ; OnAddFriendResultToDialog := R181
1214 [-]: CLOSURE   R181 231     ; R181 := closure(Function #232)
1215 [-]: MOVE      R0 R20       ; R0 := R20
1216 [-]: SETGLOBAL R181 K408    ; OnRemoveFriendResultToPanel := R181
1217 [-]: CLOSURE   R181 232     ; R181 := closure(Function #233)
1218 [-]: SETGLOBAL R181 K409    ; SendGameInviteCallback := R181
1219 [-]: CLOSURE   R68 233      ; R68 := closure(Function #234)
1220 [-]: MOVE      R0 R20       ; R0 := R20
1221 [-]: MOVE      R0 R95       ; R0 := R95
1222 [-]: MOVE      R0 R112      ; R0 := R112
1223 [-]: MOVE      R0 R16       ; R0 := R16
1224 [-]: MOVE      R0 R124      ; R0 := R124
1225 [-]: MOVE      R0 R111      ; R0 := R111
1226 [-]: CLOSURE   R181 234     ; R181 := closure(Function #235)
1227 [-]: MOVE      R0 R68       ; R0 := R68
1228 [-]: SETGLOBAL R181 K410    ; PrivateConvoPlayerIDResultOutgoing := R181
1229 [-]: CLOSURE   R181 235     ; R181 := closure(Function #236)
1230 [-]: MOVE      R0 R68       ; R0 := R68
1231 [-]: SETGLOBAL R181 K411    ; PrivateConvoPlayerIDResultIncoming := R181
1232 [-]: CLOSURE   R181 236     ; R181 := closure(Function #237)
1233 [-]: MOVE      R0 R20       ; R0 := R20
1234 [-]: MOVE      R0 R24       ; R0 := R24
1235 [-]: CLOSURE   R182 237     ; R182 := closure(Function #238)
1236 [-]: MOVE      R0 R181      ; R0 := R181
1237 [-]: SETGLOBAL R182 K412    ; GameInvitePlayerIDResults := R182
1238 [-]: CLOSURE   R72 238      ; R72 := closure(Function #239)
1239 [-]: MOVE      R0 R20       ; R0 := R20
1240 [-]: CLOSURE   R182 239     ; R182 := closure(Function #240)
1241 [-]: MOVE      R0 R46       ; R0 := R46
1242 [-]: CLOSURE   R183 240     ; R183 := closure(Function #241)
1243 [-]: MOVE      R0 R158      ; R0 := R158
1244 [-]: MOVE      R0 R182      ; R0 := R182
1245 [-]: SETGLOBAL R183 K413    ; ReloadEmoticonList := R183
1246 [-]: CLOSURE   R183 241     ; R183 := closure(Function #242)
1247 [-]: MOVE      R0 R72       ; R0 := R72
1248 [-]: MOVE      R0 R44       ; R0 := R44
1249 [-]: MOVE      R0 R20       ; R0 := R20
1250 [-]: MOVE      R0 R182      ; R0 := R182
1251 [-]: SETGLOBAL R183 K414    ; IconCacheFlushed := R183
1252 [-]: CLOSURE   R183 242     ; R183 := closure(Function #243)
1253 [-]: MOVE      R0 R20       ; R0 := R20
1254 [-]: SETGLOBAL R183 K415    ; NotifyGamepad := R183
1255 [-]: CLOSURE   R183 243     ; R183 := closure(Function #244)
1256 [-]: SETGLOBAL R183 K416    ; SendMessageBarClicked := R183
1257 [-]: CLOSURE   R183 244     ; R183 := closure(Function #245)
1258 [-]: CLOSURE   R184 245     ; R184 := closure(Function #246)
1259 [-]: MOVE      R0 R29       ; R0 := R29
1260 [-]: SETGLOBAL R184 K417    ; ResyncRichPresence := R184
1261 [-]: CLOSURE   R184 246     ; R184 := closure(Function #247)
1262 [-]: MOVE      R0 R183      ; R0 := R183
1263 [-]: MOVE      R0 R29       ; R0 := R29
1264 [-]: SETGLOBAL R184 K418    ; OnLitePresenceUpdated := R184
1265 [-]: CLOSURE   R184 247     ; R184 := closure(Function #248)
1266 [-]: MOVE      R0 R52       ; R0 := R52
1267 [-]: SETGLOBAL R184 K419    ; ResyncLitePresence := R184
1268 [-]: CLOSURE   R184 248     ; R184 := closure(Function #249)
1269 [-]: SETGLOBAL R184 K420    ; CanResyncPresence := R184
1270 [-]: CLOSURE   R184 249     ; R184 := closure(Function #250)
1271 [-]: MOVE      R0 R184      ; R0 := R184
1272 [-]: CLOSURE   R185 250     ; R185 := closure(Function #251)
1273 [-]: MOVE      R0 R83       ; R0 := R83
1274 [-]: MOVE      R0 R84       ; R0 := R84
1275 [-]: MOVE      R0 R132      ; R0 := R132
1276 [-]: SETGLOBAL R185 K421    ; OnDetailedViewComplete := R185
1277 [-]: CLOSURE   R185 251     ; R185 := closure(Function #252)
1278 [-]: MOVE      R0 R100      ; R0 := R100
1279 [-]: MOVE      R0 R172      ; R0 := R172
1280 [-]: MOVE      R0 R83       ; R0 := R83
1281 [-]: MOVE      R0 R43       ; R0 := R43
1282 [-]: MOVE      R0 R20       ; R0 := R20
1283 [-]: MOVE      R0 R0        ; R0 := R0
1284 [-]: MOVE      R0 R137      ; R0 := R137
1285 [-]: MOVE      R0 R104      ; R0 := R104
1286 [-]: MOVE      R0 R115      ; R0 := R115
1287 [-]: MOVE      R0 R67       ; R0 := R67
1288 [-]: MOVE      R0 R28       ; R0 := R28
1289 [-]: MOVE      R0 R122      ; R0 := R122
1290 [-]: MOVE      R0 R132      ; R0 := R132
1291 [-]: MOVE      R0 R85       ; R0 := R85
1292 [-]: MOVE      R0 R84       ; R0 := R84
1293 [-]: MOVE      R0 R26       ; R0 := R26
1294 [-]: MOVE      R0 R21       ; R0 := R21
1295 [-]: MOVE      R0 R184      ; R0 := R184
1296 [-]: MOVE      R0 R22       ; R0 := R22
1297 [-]: SETGLOBAL R185 K422    ; ShowHyperlinkItem := R185
1298 [-]: CLOSURE   R185 252     ; R185 := closure(Function #253)
1299 [-]: MOVE      R0 R20       ; R0 := R20
1300 [-]: SETGLOBAL R185 K423    ; RollOver := R185
1301 [-]: CLOSURE   R185 253     ; R185 := closure(Function #254)
1302 [-]: SETGLOBAL R185 K424    ; UserListBtnFocused := R185
1303 [-]: CLOSURE   R185 254     ; R185 := closure(Function #255)
1304 [-]: SETGLOBAL R185 K425    ; UserListBtnUnfocused := R185
1305 [-]: CLOSURE   R69 255      ; R69 := closure(Function #256)
1306 [-]: MOVE      R0 R115      ; R0 := R115
1307 [-]: MOVE      R0 R65       ; R0 := R65
1308 [-]: CLOSURE   R185 256     ; R185 := closure(Function #257)
1309 [-]: MOVE      R0 R69       ; R0 := R69
1310 [-]: SETGLOBAL R185 K426    ; UserListBtnPressed := R185
1311 [-]: CLOSURE   R185 257     ; R185 := closure(Function #258)
1312 [-]: SETGLOBAL R185 K427    ; EmojiBtnFocused := R185
1313 [-]: CLOSURE   R185 258     ; R185 := closure(Function #259)
1314 [-]: SETGLOBAL R185 K428    ; EmojiBtnUnfocused := R185
1315 [-]: CLOSURE   R70 259      ; R70 := closure(Function #260)
1316 [-]: MOVE      R0 R115      ; R0 := R115
1317 [-]: MOVE      R0 R65       ; R0 := R65
1318 [-]: CLOSURE   R185 260     ; R185 := closure(Function #261)
1319 [-]: MOVE      R0 R70       ; R0 := R70
1320 [-]: SETGLOBAL R185 K429    ; EmojiBtnPressed := R185
1321 [-]: CLOSURE   R185 261     ; R185 := closure(Function #262)
1322 [-]: SETGLOBAL R185 K430    ; FilterBtnFocused := R185
1323 [-]: CLOSURE   R185 262     ; R185 := closure(Function #263)
1324 [-]: SETGLOBAL R185 K431    ; FilterBtnUnfocused := R185
1325 [-]: CLOSURE   R185 263     ; R185 := closure(Function #264)
1326 [-]: MOVE      R0 R100      ; R0 := R100
1327 [-]: MOVE      R0 R87       ; R0 := R87
1328 [-]: MOVE      R0 R132      ; R0 := R132
1329 [-]: SETGLOBAL R185 K432    ; FilterBtnPressed := R185
1330 [-]: CLOSURE   R185 264     ; R185 := closure(Function #265)
1331 [-]: SETGLOBAL R185 K433    ; FilterSelected := R185
1332 [-]: CLOSURE   R185 265     ; R185 := closure(Function #266)
1333 [-]: SETGLOBAL R185 K434    ; FilterFocused := R185
1334 [-]: CLOSURE   R185 266     ; R185 := closure(Function #267)
1335 [-]: SETGLOBAL R185 K435    ; FilterUnfocused := R185
1336 [-]: CLOSURE   R185 267     ; R185 := closure(Function #268)
1337 [-]: MOVE      R0 R76       ; R0 := R76
1338 [-]: MOVE      R0 R78       ; R0 := R78
1339 [-]: SETGLOBAL R185 K436    ; MessageBoxFocused := R185
1340 [-]: CLOSURE   R185 268     ; R185 := closure(Function #269)
1341 [-]: MOVE      R0 R76       ; R0 := R76
1342 [-]: MOVE      R0 R32       ; R0 := R32
1343 [-]: MOVE      R0 R45       ; R0 := R45
1344 [-]: MOVE      R0 R77       ; R0 := R77
1345 [-]: SETGLOBAL R185 K437    ; MessageBoxUnfocused := R185
1346 [-]: CLOSURE   R185 269     ; R185 := closure(Function #270)
1347 [-]: MOVE      R0 R43       ; R0 := R43
1348 [-]: SETGLOBAL R185 K438    ; ConfirmLoadSong := R185
1349 [-]: CLOSURE   R185 270     ; R185 := closure(Function #271)
1350 [-]: MOVE      R0 R20       ; R0 := R20
1351 [-]: MOVE      R0 R62       ; R0 := R62
1352 [-]: MOVE      R0 R67       ; R0 := R67
1353 [-]: MOVE      R0 R92       ; R0 := R92
1354 [-]: CLOSURE   R186 271     ; R186 := closure(Function #272)
1355 [-]: MOVE      R0 R185      ; R0 := R185
1356 [-]: MOVE      R0 R62       ; R0 := R62
1357 [-]: SETGLOBAL R186 K439    ; OnJoinLobbyComplete := R186
1358 [-]: CLOSURE   R186 272     ; R186 := closure(Function #273)
1359 [-]: MOVE      R0 R24       ; R0 := R24
1360 [-]: MOVE      R0 R62       ; R0 := R62
1361 [-]: MOVE      R0 R185      ; R0 := R185
1362 [-]: MOVE      R0 R92       ; R0 := R92
1363 [-]: SETGLOBAL R186 K440    ; OnFindSessionComplete := R186
1364 [-]: CLOSURE   R186 273     ; R186 := closure(Function #274)
1365 [-]: MOVE      R0 R185      ; R0 := R185
1366 [-]: MOVE      R0 R62       ; R0 := R62
1367 [-]: MOVE      R0 R24       ; R0 := R24
1368 [-]: SETGLOBAL R186 K441    ; OnGetPresenceForJoin := R186
1369 [-]: CLOSURE   R186 274     ; R186 := closure(Function #275)
1370 [-]: SETGLOBAL R186 K442    ; AlphabetIndexBgFocused := R186
1371 [-]: CLOSURE   R186 275     ; R186 := closure(Function #276)
1372 [-]: MOVE      R0 R185      ; R0 := R185
1373 [-]: MOVE      R0 R20       ; R0 := R20
1374 [-]: MOVE      R0 R62       ; R0 := R62
1375 [-]: SETGLOBAL R186 K443    ; JoinPlayerIDResult := R186
1376 [-]: CLOSURE   R186 276     ; R186 := closure(Function #277)
1377 [-]: MOVE      R0 R72       ; R0 := R72
1378 [-]: MOVE      R0 R20       ; R0 := R20
1379 [-]: MOVE      R0 R83       ; R0 := R83
1380 [-]: MOVE      R0 R87       ; R0 := R87
1381 [-]: MOVE      R0 R86       ; R0 := R86
1382 [-]: SETGLOBAL R186 K444    ; OnGamepadTransition := R186
1383 [-]: CLOSURE   R186 277     ; R186 := closure(Function #278)
1384 [-]: MOVE      R0 R115      ; R0 := R115
1385 [-]: SETGLOBAL R186 K445    ; onKeyDown_TOGGLE_CHAT_WINDOW_ALT := R186
1386 [-]: CLOSURE   R186 278     ; R186 := closure(Function #279)
1387 [-]: SETGLOBAL R186 K446    ; ForceLargeFont := R186
1388 [-]: CLOSURE   R186 279     ; R186 := closure(Function #280)
1389 [-]: MOVE      R0 R96       ; R0 := R96
1390 [-]: SETGLOBAL R186 K447    ; OnAddToChatChannel := R186
1391 [-]: CLOSURE   R186 280     ; R186 := closure(Function #281)
1392 [-]: SETGLOBAL R186 K448    ; OnAddToGlobalChannel := R186
1393 [-]: CLOSURE   R186 281     ; R186 := closure(Function #282)
1394 [-]: SETGLOBAL R186 K449    ; OnNotifyAscensionCeremonyBegun := R186
1395 [-]: CLOSURE   R186 282     ; R186 := closure(Function #283)
1396 [-]: MOVE      R0 R21       ; R0 := R21
1397 [-]: SETGLOBAL R186 K450    ; OnQuestsChanged := R186
1398 [-]: CLOSURE   R186 283     ; R186 := closure(Function #284)
1399 [-]: MOVE      R0 R20       ; R0 := R20
1400 [-]: SETGLOBAL R186 K451    ; SetTouchLayout := R186
1401 [-]: RETURN    R0 1         ; return 


; Function #1:
;
; Name:            
; Defined at line: 211
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x25d99d89
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x25d99d89
  7 [-]: JMP       20           ; PC := 20
  8 [-]: GETGLOBAL R1 K2        ; R1 := 0x76ea806b
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x3f3ae64c]
 10 [-]: CONST     R3 0         ; R3 := 0.000000
 11 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 12 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 13 [-]: MOVE      R3 R1        ; R3 := R1
 14 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 15 [-]: TEST      R2 1         ; if R2 then PC := 20
 16 [-]: JMP       20           ; PC := 20
 17 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0x80563238]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: MOVE      R0 R2        ; R0 := R2
 20 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 21 [-]: MOVE      R3 R0        ; R3 := R0
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: TEST      R2 1         ; if R2 then PC := 33
 24 [-]: JMP       33           ; PC := 33
 25 [-]: SELF      R2 R0 K5     ; R3 := R0; R2 := R0[0xfdbedfb4]
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: TEST      R2 0         ; if not R2 then PC := 35
 28 [-]: JMP       35           ; PC := 35
 29 [-]: SELF      R2 R0 K6     ; R3 := R0; R2 := R0[0xefee6c91]
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: LE        1 K7 R2      ; if 30.000000 <= R2 then PC := 34
 32 [-]: JMP       34           ; PC := 34
 33 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 34
 34 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 35 [-]: RETURN    R2 2         ; return R2
 36 [-]: RETURN    R0 1         ; return 


; Function #2:
;
; Name:            
; Defined at line: 409
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xcfc01047
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETGLOBAL R5 K1        ; R5 := mWindow
  6 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5[0x8b75da5a]
  7 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  8 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["mChannelType"]
  9 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R3 2         ; return R3
 12 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 5; R2 := R3 end
 13 [-]: JMP       5            ; PC := 5
 14 [-]: LOADNIL   R5 R5        ; R5 := nil
 15 [-]: RETURN    R5 2         ; return R5
 16 [-]: RETURN    R0 1         ; return 


; Function #3:
;
; Name:            
; Defined at line: 418
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInputBlocked
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #4:
;
; Name:            
; Defined at line: 422
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: SETUPVAL  R0 U0        ; U82 := 
  2 [-]: LOADNIL   R0 R0        ; R0 := nil
  3 [-]: SETUPVAL  R0 U1        ; U82 := 
  4 [-]: RETURN    R0 1         ; return 


; Function #5:
;
; Name:            
; Defined at line: 427
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: MOVE      R2 R0        ; R2 := R0
  2 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
  3 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
  4 [-]: GETGLOBAL R4 K0        ; R4 := 0x7f5022cf
  5 [-]: GETTABLE  R4 R4 K1     ; R82 := R4[0x3675281c]
  6 [-]: MOVE      R5 R2        ; R5 := R2
  7 [-]: LOADK     R6 K2        ; R6 := "%[([^%[^%]]-)%]"
  8 [-]: CALL      R4 3 4       ; R4,R5,R6 := R4(R5,R6)
  9 [-]: JMP       58           ; PC := 58
 10 [-]: SELF      R8 R7 K3     ; R9 := R7; R8 := R7[0x66edf04f]
 11 [-]: LOADK     R10 K4       ; R10 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
 12 [-]: LOADK     R11 K5       ; R11 := "%%%0"
 13 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 14 [-]: TEST      R1 1         ; if R1 then PC := 47
 15 [-]: JMP       47           ; PC := 47
 16 [-]: GETGLOBAL R9 K6        ; R9 := 0x7b998233
 17 [-]: GETUPVAL  R10 U0       ; R10 := U0
 18 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 19 [-]: TEST      R9 1         ; if R9 then PC := 47
 20 [-]: JMP       47           ; PC := 47
 21 [-]: GETUPVAL  R9 U0        ; R9 := U0
 22 [-]: SELF      R9 R9 K7     ; R10 := R9; R9 := R9[0x2a39090b]
 23 [-]: GETGLOBAL R11 K8       ; R11 := 0x83e41587
 24 [-]: MOVE      R12 R7       ; R12 := R7
 25 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 26 [-]: OP_LOADBOOL R12 1 0      ; R12 := true
 27 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 28 [-]: EQ        1 R9 K9      ; if R9 == "" then PC := 47
 29 [-]: JMP       47           ; PC := 47
 30 [-]: GETGLOBAL R9 K10       ; R9 := 0x5f0788c4
 31 [-]: MOVE      R10 R7       ; R10 := R7
 32 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 33 [-]: GETGLOBAL R10 K0       ; R10 := 0x7f5022cf
 34 [-]: GETTABLE  R10 R10 K3   ; R82 := R10[0x66edf04f]
 35 [-]: MOVE      R11 R2       ; R11 := R2
 36 [-]: LOADK     R12 K11      ; R12 := "%["
 37 [-]: MOVE      R13 R8       ; R13 := R8
 38 [-]: LOADK     R14 K12      ; R14 := "%]"
 39 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
 40 [-]: LOADK     R13 K13      ; R13 := "["
 41 [-]: MOVE      R14 R9       ; R14 := R9
 42 [-]: LOADK     R15 K14      ; R15 := "]"
 43 [-]: CONCAT    R13 R13 R15  ; R13 := R13 .. R14 .. R15
 44 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 45 [-]: MOVE      R2 R10       ; R2 := R10
 46 [-]: JMP       58           ; PC := 58
 47 [-]: GETGLOBAL R10 K0       ; R10 := 0x7f5022cf
 48 [-]: GETTABLE  R10 R10 K3   ; R82 := R10[0x66edf04f]
 49 [-]: MOVE      R11 R2       ; R11 := R2
 50 [-]: LOADK     R12 K11      ; R12 := "%["
 51 [-]: MOVE      R13 R8       ; R13 := R8
 52 [-]: LOADK     R14 K12      ; R14 := "%]"
 53 [-]: CONCAT    R12 R12 R14  ; R12 := R12 .. R13 .. R14
 54 [-]: MOVE      R13 R7       ; R13 := R7
 55 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 56 [-]: MOVE      R2 R10       ; R2 := R10
 57 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 58 [-]: TFORLOOP  R4 1         ; R7 :=  R4(R5,R6); if R7 ~= nil then begin PC = 10; R6 := R7 end
 59 [-]: JMP       10           ; PC := 10
 60 [-]: TEST      R3 1         ; if R3 then PC := 3
 61 [-]: JMP       3            ; PC := 3
 62 [-]: RETURN    R2 2         ; return R2
 63 [-]: RETURN    R0 1         ; return 


; Function #6:
;
; Name:            
; Defined at line: 446
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mGameData
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 34
  5 [-]: JMP       34           ; PC := 34
  6 [-]: GETGLOBAL R0 K1        ; R0 := mGameData
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xd5b9fb0c]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["message"]
 10 [-]: GETGLOBAL R1 K1        ; R1 := mGameData
 11 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x83ce6a66]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K5        ; R2 := mDoMotdFilter
 14 [-]: TEST      R2 0         ; if not R2 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R2 K6        ; R2 := 0x09423272
 17 [-]: MOVE      R3 R0        ; R3 := R0
 18 [-]: CONST     R4 0         ; R4 := 0.000000
 19 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 20 [-]: MOVE      R0 R2        ; R0 := R2
 21 [-]: GETGLOBAL R2 K6        ; R2 := 0x09423272
 22 [-]: MOVE      R3 R1        ; R3 := R1
 23 [-]: CONST     R4 0         ; R4 := 0.000000
 24 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 25 [-]: MOVE      R1 R2        ; R1 := R2
 26 [-]: GETUPVAL  R2 U1        ; R2 := U1
 27 [-]: MOVE      R3 R0        ; R3 := R0
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: SETUPVAL  R2 U0        ; U82 := 
 30 [-]: GETUPVAL  R2 U1        ; R2 := U1
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: SETUPVAL  R2 U2        ; U82 := 
 34 [-]: RETURN    R0 1         ; return 


; Function #7:
;
; Name:            
; Defined at line: 461
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x67513231
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x6d604ba7]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: EQ        1 R1 K2      ; if R1 == "_en" then PC := 9
  6 [-]: JMP       9            ; PC := 9
  7 [-]: LOADK     R1 K3        ; R1 := ""
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: GETGLOBAL R1 K4        ; R1 := 0x34291f5c
 10 [-]: GETTABLE  R1 R1 K5     ; R82 := R1[0x056bfe8b]
 11 [-]: CALL      R1 1 2       ; R1 := R1()
 12 [-]: TEST      R1 0         ; if not R1 then PC := 29
 13 [-]: JMP       29           ; PC := 29
 14 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 15 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0x66edf04f]
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: LOADK     R3 K8        ; R3 := "_EAST$"
 18 [-]: LOADK     R4 K3        ; R4 := ""
 19 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 20 [-]: MOVE      R0 R1        ; R0 := R1
 21 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 22 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0x66edf04f]
 23 [-]: MOVE      R2 R0        ; R2 := R0
 24 [-]: LOADK     R3 K9        ; R3 := "_WEST$"
 25 [-]: LOADK     R4 K3        ; R4 := ""
 26 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 27 [-]: MOVE      R0 R1        ; R0 := R1
 28 [-]: JMP       43           ; PC := 43
 29 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 30 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0x66edf04f]
 31 [-]: MOVE      R2 R0        ; R2 := R0
 32 [-]: LOADK     R3 K8        ; R3 := "_EAST$"
 33 [-]: LOADK     R4 K10       ; R4 := "_E"
 34 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 35 [-]: MOVE      R0 R1        ; R0 := R1
 36 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 37 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0x66edf04f]
 38 [-]: MOVE      R2 R0        ; R2 := R0
 39 [-]: LOADK     R3 K9        ; R3 := "_WEST$"
 40 [-]: LOADK     R4 K11       ; R4 := "_W"
 41 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 42 [-]: MOVE      R0 R1        ; R0 := R1
 43 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 44 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0x66edf04f]
 45 [-]: MOVE      R2 R0        ; R2 := R0
 46 [-]: LOADK     R3 K12       ; R3 := "NORTH_AMERICA"
 47 [-]: LOADK     R4 K13       ; R4 := "NA"
 48 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 49 [-]: MOVE      R0 R1        ; R0 := R1
 50 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 51 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0x66edf04f]
 52 [-]: MOVE      R2 R0        ; R2 := R0
 53 [-]: LOADK     R3 K14       ; R3 := "SOUTH_AMERICA"
 54 [-]: LOADK     R4 K15       ; R4 := "SA"
 55 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 56 [-]: MOVE      R0 R1        ; R0 := R1
 57 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 58 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0x66edf04f]
 59 [-]: MOVE      R2 R0        ; R2 := R0
 60 [-]: LOADK     R3 K16       ; R3 := "OCEANIA"
 61 [-]: LOADK     R4 K17       ; R4 := "AS"
 62 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 63 [-]: MOVE      R0 R1        ; R0 := R1
 64 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 65 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0x66edf04f]
 66 [-]: MOVE      R2 R0        ; R2 := R0
 67 [-]: LOADK     R3 K14       ; R3 := "SOUTH_AMERICA"
 68 [-]: LOADK     R4 K15       ; R4 := "SA"
 69 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 70 [-]: MOVE      R0 R1        ; R0 := R1
 71 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 72 [-]: GETTABLE  R1 R1 K18    ; R82 := R1[0xa5c556b9]
 73 [-]: MOVE      R2 R0        ; R2 := R0
 74 [-]: LOADK     R3 K19       ; R3 := "_"
 75 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 76 [-]: TEST      R1 1         ; if R1 then PC := 91
 77 [-]: JMP       91           ; PC := 91
 78 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 79 [-]: GETTABLE  R1 R1 K20    ; R82 := R1[0x41e2ae25]
 80 [-]: MOVE      R2 R0        ; R2 := R0
 81 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 82 [-]: LT        0 K21 R1     ; if 2.000000 >= R1 then PC := 91
 83 [-]: JMP       91           ; PC := 91
 84 [-]: GETGLOBAL R1 K6        ; R1 := 0x7f5022cf
 85 [-]: GETTABLE  R1 R1 K22    ; R82 := R1[0x1a94c9cc]
 86 [-]: MOVE      R2 R0        ; R2 := R0
 87 [-]: CONST     R3 1         ; R3 := 1.000000
 88 [-]: CONST     R4 2         ; R4 := 2.000000
 89 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 90 [-]: MOVE      R0 R1        ; R0 := R1
 91 [-]: LOADK     R1 K19       ; R1 := "_"
 92 [-]: MOVE      R2 R0        ; R2 := R0
 93 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 94 [-]: RETURN    R1 2         ; return R1
 95 [-]: RETURN    R0 1         ; return 


; Function #8:
;
; Name:            
; Defined at line: 490
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  9 [-]: CONST     R2 0         ; R2 := 0.000000
 10 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 11 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x35a41294]
 12 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 13 [-]: NOT       R0 R0        ; R0 := not R0
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #9:
;
; Name:            
; Defined at line: 495
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x83f4e77c
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x67e75582]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 34
  5 [-]: JMP       34           ; PC := 34
  6 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
  7 [-]: TEST      R3 0         ; if not R3 then PC := 34
  8 [-]: JMP       34           ; PC := 34
  9 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
 10 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x8b75da5a]
 11 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 12 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 13 [-]: MOVE      R5 R3        ; R5 := R3
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: TEST      R4 1         ; if R4 then PC := 34
 16 [-]: JMP       34           ; PC := 34
 17 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 18 [-]: MOVE      R5 R1        ; R5 := R1
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: TEST      R4 0         ; if not R4 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 23 [-]: MOVE      R1 R4        ; R1 := R4
 24 [-]: SELF      R4 R3 K5     ; R5 := R3; R4 := R3[0x566ff49e]
 25 [-]: GETGLOBAL R6 K6        ; R6 := 0xae91e43b
 26 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6[0x42b04007]
 27 [-]: MOVE      R8 R0        ; R8 := R0
 28 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 29 [-]: MOVE      R10 R1       ; R10 := R1
 30 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 31 [-]: GETTABLE  R7 R3 K8     ; R7 := R3["MESSAGE_TYPE_SYSTEM"]
 32 [-]: LOADK     R8 K9        ; R8 := ""
 33 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 34 [-]: RETURN    R2 2         ; return R2
 35 [-]: RETURN    R0 1         ; return 


; Function #10:
;
; Name:            
; Defined at line: 511
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xd4f2405e]
  9 [-]: MOVE      R3 R0        ; R3 := R0
 10 [-]: CALL      R1 3 1       ; R1(R2,R3)
 11 [-]: RETURN    R0 1         ; return 


; Function #11:
;
; Name:            
; Defined at line: 519
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xb6a0211f]
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: GETGLOBAL R5 K3        ; R5 := 0x03f57322
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 13 [-]: CALL      R2 0 1       ; R2(R3,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #12:
;
; Name:            
; Defined at line: 526
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xf93de849]
  9 [-]: MOVE      R4 R0        ; R4 := R0
 10 [-]: GETGLOBAL R5 K3        ; R5 := 0x03f57322
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
 13 [-]: CALL      R2 0 1       ; R2(R3,...)
 14 [-]: RETURN    R0 1         ; return 


; Function #13:
;
; Name:            
; Defined at line: 533
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: OP_LOADBOOL R0 0 0       ; R0 := false
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0xe7f2b02f
  3 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x0b151d80]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  6 [-]: GETGLOBAL R3 K3        ; R3 := mWindow
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: TEST      R2 1         ; if R2 then PC := 31
  9 [-]: JMP       31           ; PC := 31
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 31
 14 [-]: JMP       31           ; PC := 31
 15 [-]: GETGLOBAL R2 K3        ; R2 := mWindow
 16 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x8b75da5a]
 17 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 18 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 19 [-]: MOVE      R4 R2        ; R4 := R2
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: TEST      R3 1         ; if R3 then PC := 31
 22 [-]: JMP       31           ; PC := 31
 23 [-]: SELF      R3 R1 K5     ; R4 := R1; R3 := R1[0xa75cd47d]
 24 [-]: LOADK     R5 K6        ; R5 := "#"
 25 [-]: GETTABLE  R6 R2 K7     ; R6 := R2["mChannelName"]
 26 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 27 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 28 [-]: TEST      R3 0         ; if not R3 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 31 [-]: RETURN    R0 2         ; return R0
 32 [-]: RETURN    R0 1         ; return 


; Function #14:
;
; Name:            
; Defined at line: 548
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 2       ; R1 := R1()
  3 [-]: TEST      R1 1         ; if R1 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xa5c556b9]
  7 [-]: LOADK     R3 K1        ; R3 := "%[OMG%-.*%]"
  8 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  9 [-]: TEST      R1 1         ; if R1 then PC := 61
 10 [-]: JMP       61           ; PC := 61
 11 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xa5c556b9]
 12 [-]: LOADK     R3 K2        ; R3 := "%[SONG%-.*%]"
 13 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 14 [-]: TEST      R1 1         ; if R1 then PC := 61
 15 [-]: JMP       61           ; PC := 61
 16 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xa5c556b9]
 17 [-]: LOADK     R3 K3        ; R3 := "%[ZAW%-.*%]"
 18 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 19 [-]: TEST      R1 1         ; if R1 then PC := 61
 20 [-]: JMP       61           ; PC := 61
 21 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xa5c556b9]
 22 [-]: LOADK     R3 K4        ; R3 := "%[AMP%-.*%]"
 23 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 24 [-]: TEST      R1 1         ; if R1 then PC := 61
 25 [-]: JMP       61           ; PC := 61
 26 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xa5c556b9]
 27 [-]: LOADK     R3 K5        ; R3 := "%[MOA%-.*%]"
 28 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 29 [-]: TEST      R1 1         ; if R1 then PC := 61
 30 [-]: JMP       61           ; PC := 61
 31 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xa5c556b9]
 32 [-]: LOADK     R3 K6        ; R3 := "%[KDR%-.*%]"
 33 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 34 [-]: TEST      R1 1         ; if R1 then PC := 61
 35 [-]: JMP       61           ; PC := 61
 36 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xa5c556b9]
 37 [-]: LOADK     R3 K7        ; R3 := "%[KIT%-.*%]"
 38 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 39 [-]: TEST      R1 1         ; if R1 then PC := 61
 40 [-]: JMP       61           ; PC := 61
 41 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xa5c556b9]
 42 [-]: LOADK     R3 K8        ; R3 := "%[FF%-.*%]"
 43 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 44 [-]: TEST      R1 1         ; if R1 then PC := 61
 45 [-]: JMP       61           ; PC := 61
 46 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xa5c556b9]
 47 [-]: LOADK     R3 K9        ; R3 := "%[MOD%-.*%]"
 48 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 49 [-]: TEST      R1 1         ; if R1 then PC := 61
 50 [-]: JMP       61           ; PC := 61
 51 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xa5c556b9]
 52 [-]: LOADK     R3 K10       ; R3 := "%[SHZN%-.*%]"
 53 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 54 [-]: TEST      R1 1         ; if R1 then PC := 61
 55 [-]: JMP       61           ; PC := 61
 56 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xa5c556b9]
 57 [-]: LOADK     R3 K11       ; R3 := "{GUILD=.*}"
 58 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 59 [-]: TEST      R1 0         ; if not R1 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: RETURN    R0 1         ; return 
 62 [-]: GETUPVAL  R1 U1        ; R1 := U1
 63 [-]: LEN       R1 R1        ; R1 := # R1
 64 [-]: GETUPVAL  R2 U2        ; R2 := U2
 65 [-]: LE        0 R2 R1      ; if R2 > R1 then PC := 72
 66 [-]: JMP       72           ; PC := 72
 67 [-]: GETGLOBAL R1 K12       ; R1 := 0x33bdd652
 68 [-]: GETTABLE  R1 R1 K13    ; R82 := R1[0x9c1f3b5a]
 69 [-]: GETUPVAL  R2 U1        ; R2 := U1
 70 [-]: CONST     R3 1         ; R3 := 1.000000
 71 [-]: CALL      R1 3 1       ; R1(R2,R3)
 72 [-]: GETUPVAL  R1 U1        ; R1 := U1
 73 [-]: LEN       R1 R1        ; R1 := # R1
 74 [-]: LT        0 K14 R1     ; if 0.000000 >= R1 then PC := 90
 75 [-]: JMP       90           ; PC := 90
 76 [-]: GETGLOBAL R1 K15       ; R1 := 0x7f5022cf
 77 [-]: GETTABLE  R1 R1 K16    ; R82 := R1[0x04981ab3]
 78 [-]: GETUPVAL  R2 U1        ; R2 := U1
 79 [-]: GETUPVAL  R3 U1        ; R3 := U1
 80 [-]: LEN       R3 R3        ; R3 := # R3
 81 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 82 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 83 [-]: GETGLOBAL R2 K15       ; R2 := 0x7f5022cf
 84 [-]: GETTABLE  R2 R2 K16    ; R82 := R2[0x04981ab3]
 85 [-]: MOVE      R3 R0        ; R3 := R0
 86 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 87 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 90
 88 [-]: JMP       90           ; PC := 90
 89 [-]: RETURN    R0 1         ; return 
 90 [-]: GETGLOBAL R1 K12       ; R1 := 0x33bdd652
 91 [-]: GETTABLE  R1 R1 K17    ; R82 := R1[0x23d5322f]
 92 [-]: GETUPVAL  R2 U1        ; R2 := U1
 93 [-]: MOVE      R3 R0        ; R3 := R0
 94 [-]: CALL      R1 3 1       ; R1(R2,R3)
 95 [-]: GETUPVAL  R1 U1        ; R1 := U1
 96 [-]: LEN       R1 R1        ; R1 := # R1
 97 [-]: ADD       R1 R1 K18    ; R1 := R1 + 1.000000
 98 [-]: SETUPVAL  R1 U3        ; U82 := 
 99 [-]: RETURN    R0 1         ; return 


; Function #15:
;
; Name:            
; Defined at line: 582
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LEN       R1 R1        ; R1 := # R1
  3 [-]: EQ        1 R1 K0      ; if R1 == 0.000000 then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETUPVAL  R1 U1        ; R1 := U1
  6 [-]: CALL      R1 1 2       ; R1 := R1()
  7 [-]: TEST      R1 1         ; if R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETUPVAL  R1 U2        ; R1 := U2
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: LEN       R2 R2        ; R2 := # R2
 13 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: LT        0 K0 R0      ; if 0.000000 >= R0 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETGLOBAL R1 K1        ; R1 := 0x42dcc9f5
 19 [-]: GETUPVAL  R2 U2        ; R2 := U2
 20 [-]: ADD       R2 R2 R0     ; R2 := R2 + R0
 21 [-]: CONST     R3 1         ; R3 := 1.000000
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: LEN       R4 R4        ; R4 := # R4
 24 [-]: ADD       R4 R4 K2     ; R4 := R4 + 1.000000
 25 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 26 [-]: GETUPVAL  R2 U2        ; R2 := U2
 27 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 59
 28 [-]: JMP       59           ; PC := 59
 29 [-]: SETUPVAL  R1 U2        ; U82 := 
 30 [-]: GETUPVAL  R2 U3        ; R2 := U3
 31 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0x06d055f9]
 32 [-]: GETUPVAL  R3 U0        ; R3 := U0
 33 [-]: LEN       R3 R3        ; R3 := # R3
 34 [-]: LT        1 R3 R1      ; if R3 < R1 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: OP_LOADBOOL R3 0 1       ; R3 := false; PC := 37
 37 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 38 [-]: LOADK     R4 K4        ; R4 := ""
 39 [-]: GETUPVAL  R5 U0        ; R5 := U0
 40 [-]: GETUPVAL  R6 U2        ; R6 := U2
 41 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 42 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 43 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 44 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x5f56eeab]
 45 [-]: LOADK     R5 K7        ; R5 := "Window.SendMessageBar.MessageBox"
 46 [-]: CONST     R6 29        ; R6 := 29.000000
 47 [-]: MOVE      R7 R2        ; R7 := R2
 48 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 49 [-]: GETGLOBAL R3 K8        ; R3 := 0x7f5022cf
 50 [-]: GETTABLE  R3 R3 K9     ; R82 := R3[0x41e2ae25]
 51 [-]: MOVE      R4 R2        ; R4 := R2
 52 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 53 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 54 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0x67bc869f]
 55 [-]: LOADK     R6 K7        ; R6 := "Window.SendMessageBar.MessageBox"
 56 [-]: CONST     R7 71        ; R7 := 71.000000
 57 [-]: MOVE      R8 R3        ; R8 := R3
 58 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 59 [-]: RETURN    R0 1         ; return 


; Function #16:
;
; Name:            
; Defined at line: 608
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: EQ        0 R2 K0      ; if R2 ~= 1.000000 then PC := 8
  2 [-]: JMP       8            ; PC := 8
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: GETTABLE  R4 R4 K1     ; R82 := R4[0xe0cba3ca]
  5 [-]: MOVE      R5 R0        ; R5 := R0
  6 [-]: CALL      R4 2 1       ; R4(R5)
  7 [-]: JMP       21           ; PC := 21
  8 [-]: TEST      R3 0         ; if not R3 then PC := 16
  9 [-]: JMP       16           ; PC := 16
 10 [-]: GETUPVAL  R4 U0        ; R4 := U0
 11 [-]: GETTABLE  R4 R4 K2     ; R82 := R4[0xdedfded7]
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: MOVE      R6 R1        ; R6 := R1
 14 [-]: CALL      R4 3 1       ; R4(R5,R6)
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: GETTABLE  R4 R4 K3     ; R82 := R4[0xf616a184]
 18 [-]: MOVE      R5 R0        ; R5 := R0
 19 [-]: MOVE      R6 R1        ; R6 := R1
 20 [-]: CALL      R4 3 1       ; R4(R5,R6)
 21 [-]: RETURN    R0 1         ; return 


; Function #17:
;
; Name:            
; Defined at line: 620
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R4 K0        ; R4 := mContextMenu
  2 [-]: SETTABLE  R4 K1 K2     ; R4["mLongestElement"] := 0.000000
  3 [-]: GETGLOBAL R4 K0        ; R4 := mContextMenu
  4 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x71e9ac81]
  5 [-]: MOVE      R6 R2        ; R6 := R2
  6 [-]: MOVE      R7 R3        ; R7 := R3
  7 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
  8 [-]: CONST     R4 1         ; R4 := 1.000000
  9 [-]: GETGLOBAL R5 K0        ; R5 := mContextMenu
 10 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5[0x5fbddc1a]
 11 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 12 [-]: CONST     R6 1         ; R6 := 1.000000
 13 [-]: FORPREP   R4 34        ; R4 -= R6; PC := 34
 14 [-]: GETGLOBAL R8 K0        ; R8 := mContextMenu
 15 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8[0x5465f8f3]
 16 [-]: MOVE      R10 R7       ; R10 := R7
 17 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 18 [-]: GETGLOBAL R9 K6        ; R9 := 0x7b998233
 19 [-]: MOVE      R10 R8       ; R10 := R8
 20 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 21 [-]: TEST      R9 1         ; if R9 then PC := 34
 22 [-]: JMP       34           ; PC := 34
 23 [-]: GETGLOBAL R9 K6        ; R9 := 0x7b998233
 24 [-]: GETTABLE  R10 R8 K7    ; R10 := R8["Button"]
 25 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 26 [-]: TEST      R9 1         ; if R9 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETTABLE  R9 R8 K7     ; R9 := R8["Button"]
 29 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9[0x8d77b2b2]
 30 [-]: GETGLOBAL R11 K0       ; R11 := mContextMenu
 31 [-]: GETTABLE  R11 R11 K1   ; R11 := R11["mLongestElement"]
 32 [-]: ADD       R11 R11 K9   ; R11 := R11 + 20.000000
 33 [-]: CALL      R9 3 1       ; R9(R10,R11)
 34 [-]: FORLOOP   R4 14        ; R4 += R6; if R4 <= R5 then begin PC := 14; R7 := R4 end
 35 [-]: GETGLOBAL R9 K0        ; R9 := mContextMenu
 36 [-]: GETTABLE  R9 R9 K1     ; R9 := R9["mLongestElement"]
 37 [-]: ADD       R9 R9 K10    ; R9 := R9 + 40.000000
 38 [-]: GETGLOBAL R10 K0       ; R10 := mContextMenu
 39 [-]: SELF      R10 R10 K4   ; R11 := R10; R10 := R10[0x5fbddc1a]
 40 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 41 [-]: GETGLOBAL R11 K0       ; R11 := mContextMenu
 42 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["mForcedVerticalSeparation"]
 43 [-]: MUL       R10 R10 R11  ; R10 := R10 * R11
 44 [-]: ADD       R10 R10 K12  ; R10 := R10 + 22.000000
 45 [-]: GETGLOBAL R11 K13      ; R11 := 0xae91e43b
 46 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11[0x67bc869f]
 47 [-]: LOADK     R13 K15      ; R13 := "ContextMenu.Bg"
 48 [-]: CONST     R14 12       ; R14 := 12.000000
 49 [-]: MOVE      R15 R9       ; R15 := R9
 50 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 51 [-]: GETGLOBAL R11 K13      ; R11 := 0xae91e43b
 52 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11[0x67bc869f]
 53 [-]: LOADK     R13 K15      ; R13 := "ContextMenu.Bg"
 54 [-]: CONST     R14 13       ; R14 := 13.000000
 55 [-]: MOVE      R15 R10      ; R15 := R10
 56 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 57 [-]: ADD       R11 R1 R10   ; R11 := R1 + R10
 58 [-]: GETGLOBAL R12 K16      ; R12 := mViewportHeight
 59 [-]: LE        0 R12 R11    ; if R12 > R11 then PC := 62
 60 [-]: JMP       62           ; PC := 62
 61 [-]: SUB       R1 R1 R10    ; R1 := R1 - R10
 62 [-]: GETGLOBAL R11 K13      ; R11 := 0xae91e43b
 63 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11[0x67bc869f]
 64 [-]: LOADK     R13 K17      ; R13 := "ContextMenu"
 65 [-]: CONST     R14 0        ; R14 := 0.000000
 66 [-]: MOVE      R15 R0       ; R15 := R0
 67 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 68 [-]: GETGLOBAL R11 K13      ; R11 := 0xae91e43b
 69 [-]: SELF      R11 R11 K14  ; R12 := R11; R11 := R11[0x67bc869f]
 70 [-]: LOADK     R13 K17      ; R13 := "ContextMenu"
 71 [-]: CONST     R14 1        ; R14 := 1.000000
 72 [-]: MOVE      R15 R1       ; R15 := R1
 73 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 74 [-]: RETURN    R0 1         ; return 


; Function #18:
;
; Name:            
; Defined at line: 646
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x0032441c
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["StalkerMode"]
  3 [-]: TEST      R2 0         ; if not R2 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xaade900e]
  8 [-]: LOADK     R4 K4        ; R4 := "ContextMenu"
  9 [-]: CONST     R5 59        ; R5 := 59.000000
 10 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 11 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 12 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 13 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xaade900e]
 14 [-]: LOADK     R4 K4        ; R4 := "ContextMenu"
 15 [-]: CONST     R5 11        ; R5 := 11.000000
 16 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: GETGLOBAL R2 K5        ; R2 := 0x34291f5c
 19 [-]: GETTABLE  R2 R2 K6     ; R82 := R2[0xe6b41adb]
 20 [-]: CALL      R2 1 2       ; R2 := R2()
 21 [-]: TEST      R2 1         ; if R2 then PC := 46
 22 [-]: JMP       46           ; PC := 46
 23 [-]: GETGLOBAL R2 K7        ; R2 := 0x7b998233
 24 [-]: MOVE      R3 R0        ; R3 := R0
 25 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 26 [-]: TEST      R2 1         ; if R2 then PC := 33
 27 [-]: JMP       33           ; PC := 33
 28 [-]: GETGLOBAL R2 K7        ; R2 := 0x7b998233
 29 [-]: MOVE      R3 R1        ; R3 := R1
 30 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 31 [-]: TEST      R2 0         ; if not R2 then PC := 77
 32 [-]: JMP       77           ; PC := 77
 33 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 34 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x91a24e4b]
 35 [-]: LOADK     R4 K9        ; R4 := "_root"
 36 [-]: CONST     R5 25        ; R5 := 25.000000
 37 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 38 [-]: ADD       R0 R2 K10    ; R0 := R2 + 4.000000
 39 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 40 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x91a24e4b]
 41 [-]: LOADK     R4 K9        ; R4 := "_root"
 42 [-]: CONST     R5 26        ; R5 := 26.000000
 43 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 44 [-]: SUB       R1 R2 K10    ; R1 := R2 - 4.000000
 45 [-]: JMP       77           ; PC := 77
 46 [-]: GETGLOBAL R2 K11       ; R2 := mWindow
 47 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mUserPanel"]
 48 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["mClipPath"]
 49 [-]: LOADK     R3 K14       ; R3 := ".Panel.UserList"
 50 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 51 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 52 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x91a24e4b]
 53 [-]: MOVE      R5 R2        ; R5 := R2
 54 [-]: CONST     R6 0         ; R6 := 0.000000
 55 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 56 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
 57 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0x91a24e4b]
 58 [-]: MOVE      R6 R2        ; R6 := R2
 59 [-]: CONST     R7 12        ; R7 := 12.000000
 60 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 61 [-]: ADD       R0 R3 R4     ; R0 := R3 + R4
 62 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 63 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x91a24e4b]
 64 [-]: MOVE      R5 R2        ; R5 := R2
 65 [-]: CONST     R6 1         ; R6 := 1.000000
 66 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 67 [-]: MOVE      R1 R3        ; R1 := R3
 68 [-]: GETUPVAL  R3 U0        ; R3 := U0
 69 [-]: GETTABLE  R3 R3 K15    ; R82 := R3[0xaaab3027]
 70 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
 71 [-]: MOVE      R5 R2        ; R5 := R2
 72 [-]: MOVE      R6 R0        ; R6 := R0
 73 [-]: MOVE      R7 R1        ; R7 := R1
 74 [-]: CALL      R3 5 3       ; R3,R4 := R3(R4,R5,R6,R7)
 75 [-]: MOVE      R1 R4        ; R1 := R4
 76 [-]: MOVE      R0 R3        ; R0 := R3
 77 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 78 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0x0c33ebb2]
 79 [-]: LOADK     R5 K17       ; R5 := "Window"
 80 [-]: LOADK     R6 K18       ; R6 := "noMenuSelection"
 81 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 82 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 83 [-]: GETUPVAL  R3 U1        ; R3 := U1
 84 [-]: MOVE      R4 R0        ; R4 := R0
 85 [-]: MOVE      R5 R1        ; R5 := R1
 86 [-]: LOADNIL   R6 R6        ; R6 := nil
 87 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 88 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 89 [-]: GETGLOBAL R3 K5        ; R3 := 0x34291f5c
 90 [-]: GETTABLE  R3 R3 K19    ; R82 := R3[0x1467d5f4]
 91 [-]: CALL      R3 1 2       ; R3 := R3()
 92 [-]: TEST      R3 0         ; if not R3 then PC := 114
 93 [-]: JMP       114          ; PC := 114
 94 [-]: GETGLOBAL R3 K20       ; R3 := mContextMenu
 95 [-]: SELF      R3 R3 K21    ; R4 := R3; R3 := R3[0x5fbddc1a]
 96 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 97 [-]: LE        0 K22 R3     ; if 1.000000 > R3 then PC := 114
 98 [-]: JMP       114          ; PC := 114
 99 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
100 [-]: GETGLOBAL R4 K11       ; R4 := mWindow
101 [-]: CALL      R3 2 2       ; R3 := R3(R4)
102 [-]: TEST      R3 1         ; if R3 then PC := 114
103 [-]: JMP       114          ; PC := 114
104 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
105 [-]: GETGLOBAL R4 K11       ; R4 := mWindow
106 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["mUserPanel"]
107 [-]: CALL      R3 2 2       ; R3 := R3(R4)
108 [-]: TEST      R3 1         ; if R3 then PC := 114
109 [-]: JMP       114          ; PC := 114
110 [-]: GETGLOBAL R3 K11       ; R3 := mWindow
111 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mUserPanel"]
112 [-]: SELF      R3 R3 K23    ; R4 := R3; R3 := R3[0x3867cef1]
113 [-]: CALL      R3 2 1       ; R3(R4)
114 [-]: RETURN    R0 1         ; return 


; Function #19:
;
; Name:            
; Defined at line: 678
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  3 [-]: LOADK     R2 K2        ; R2 := "ContextMenu"
  4 [-]: CONST     R3 59        ; R3 := 59.000000
  5 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  8 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xaade900e]
  9 [-]: LOADK     R2 K2        ; R2 := "ContextMenu"
 10 [-]: CONST     R3 11        ; R3 := 11.000000
 11 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
 12 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 13 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 14 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x0c33ebb2]
 15 [-]: LOADK     R2 K4        ; R2 := "Window"
 16 [-]: LOADK     R3 K5        ; R3 := "noMenuSelection"
 17 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
 18 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 19 [-]: GETGLOBAL R0 K6        ; R0 := 0x7b998233
 20 [-]: GETGLOBAL R1 K7        ; R1 := mWindow
 21 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 22 [-]: TEST      R0 1         ; if R0 then PC := 87
 23 [-]: JMP       87           ; PC := 87
 24 [-]: GETGLOBAL R0 K6        ; R0 := 0x7b998233
 25 [-]: GETGLOBAL R1 K7        ; R1 := mWindow
 26 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mUserPanel"]
 27 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 28 [-]: TEST      R0 1         ; if R0 then PC := 87
 29 [-]: JMP       87           ; PC := 87
 30 [-]: GETGLOBAL R0 K6        ; R0 := 0x7b998233
 31 [-]: GETGLOBAL R1 K7        ; R1 := mWindow
 32 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mUserPanel"]
 33 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["mListControl"]
 34 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 35 [-]: TEST      R0 1         ; if R0 then PC := 87
 36 [-]: JMP       87           ; PC := 87
 37 [-]: GETGLOBAL R0 K7        ; R0 := mWindow
 38 [-]: GETTABLE  R0 R0 K8     ; R0 := R0["mUserPanel"]
 39 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["mListControl"]
 40 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0xed1ab921]
 41 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 42 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 43 [-]: GETGLOBAL R2 K7        ; R2 := mWindow
 44 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mUserPanel"]
 45 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mStoredUserFocusId"]
 46 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 47 [-]: TEST      R1 0         ; if not R1 then PC := 61
 48 [-]: JMP       61           ; PC := 61
 49 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 50 [-]: MOVE      R2 R0        ; R2 := R0
 51 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 52 [-]: TEST      R1 1         ; if R1 then PC := 61
 53 [-]: JMP       61           ; PC := 61
 54 [-]: GETGLOBAL R1 K7        ; R1 := mWindow
 55 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mUserPanel"]
 56 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["mListControl"]
 57 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0xbce5a201]
 58 [-]: GETTABLE  R3 R0 K13    ; R3 := R0["Id"]
 59 [-]: CALL      R1 3 1       ; R1(R2,R3)
 60 [-]: JMP       87           ; PC := 87
 61 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 62 [-]: GETGLOBAL R2 K7        ; R2 := mWindow
 63 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mUserPanel"]
 64 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mStoredUserFocusId"]
 65 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 66 [-]: TEST      R1 1         ; if R1 then PC := 87
 67 [-]: JMP       87           ; PC := 87
 68 [-]: GETGLOBAL R1 K6        ; R1 := 0x7b998233
 69 [-]: MOVE      R2 R0        ; R2 := R0
 70 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 71 [-]: TEST      R1 1         ; if R1 then PC := 79
 72 [-]: JMP       79           ; PC := 79
 73 [-]: GETGLOBAL R1 K7        ; R1 := mWindow
 74 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mUserPanel"]
 75 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["mStoredUserFocusId"]
 76 [-]: GETTABLE  R2 R0 K13    ; R2 := R0["Id"]
 77 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 87
 78 [-]: JMP       87           ; PC := 87
 79 [-]: GETGLOBAL R1 K7        ; R1 := mWindow
 80 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mUserPanel"]
 81 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["mListControl"]
 82 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0xdf42446e]
 83 [-]: GETGLOBAL R3 K7        ; R3 := mWindow
 84 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mUserPanel"]
 85 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mStoredUserFocusId"]
 86 [-]: CALL      R1 3 1       ; R1(R2,R3)
 87 [-]: RETURN    R0 1         ; return 


; Function #20:
;
; Name:            
; Defined at line: 695
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R82 := R0[0x2ffd43ff]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  6 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x54a95d6f]
  7 [-]: GETGLOBAL R3 K3        ; R3 := mWindow
  8 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mInputPanel"]
  9 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mClipPath"]
 10 [-]: LOADK     R4 K6        ; R4 := ".MessageBox"
 11 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 12 [-]: CONST     R4 29        ; R4 := 29.000000
 13 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x54a95d6f]
 16 [-]: LOADK     R4 K7        ; R4 := "Tip.InputFeedbackLeft"
 17 [-]: CONST     R5 29        ; R5 := 29.000000
 18 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 19 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 20 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x91a24e4b]
 21 [-]: GETGLOBAL R5 K3        ; R5 := mWindow
 22 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mInputPanel"]
 23 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mClipPath"]
 24 [-]: LOADK     R6 K6        ; R6 := ".MessageBox"
 25 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 26 [-]: CONST     R6 71        ; R6 := 71.000000
 27 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 28 [-]: GETGLOBAL R4 K9        ; R4 := 0x8a0252a7
 29 [-]: MOVE      R5 R1        ; R5 := R1
 30 [-]: MOVE      R6 R3        ; R6 := R3
 31 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 32 [-]: GETGLOBAL R5 K10       ; R5 := 0x7f5022cf
 33 [-]: GETTABLE  R5 R5 K11    ; R82 := R5[0x1a94c9cc]
 34 [-]: MOVE      R6 R1        ; R6 := R1
 35 [-]: CONST     R7 0         ; R7 := 0.000000
 36 [-]: GETGLOBAL R8 K10       ; R8 := 0x7f5022cf
 37 [-]: GETTABLE  R8 R8 K12    ; R82 := R8[0x41e2ae25]
 38 [-]: MOVE      R9 R2        ; R9 := R2
 39 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 40 [-]: SUB       R8 R4 R8     ; R8 := R4 - R8
 41 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 42 [-]: GETGLOBAL R6 K10       ; R6 := 0x7f5022cf
 43 [-]: GETTABLE  R6 R6 K11    ; R82 := R6[0x1a94c9cc]
 44 [-]: MOVE      R7 R1        ; R7 := R1
 45 [-]: ADD       R8 R4 K13    ; R8 := R4 + 1.000000
 46 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 47 [-]: GETGLOBAL R7 K1        ; R7 := 0xae91e43b
 48 [-]: SELF      R7 R7 K14    ; R8 := R7; R7 := R7[0x42b04007]
 49 [-]: LOADK     R9 K15       ; R9 := "/Lotus/Language/Menu/Whitespace"
 50 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
 51 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 52 [-]: EQ        0 R7 K16     ; if R7 ~= "-" then PC := 55
 53 [-]: JMP       55           ; PC := 55
 54 [-]: LOADK     R7 K17       ; R7 := ""
 55 [-]: MOVE      R8 R5        ; R8 := R5
 56 [-]: MOVE      R9 R0        ; R9 := R0
 57 [-]: MOVE      R10 R7       ; R10 := R7
 58 [-]: MOVE      R11 R6       ; R11 := R6
 59 [-]: CONCAT    R8 R8 R11    ; R8 := R8 .. R9 .. R10 .. R11
 60 [-]: GETGLOBAL R9 K1        ; R9 := 0xae91e43b
 61 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9[0x5f56eeab]
 62 [-]: GETGLOBAL R11 K3       ; R11 := mWindow
 63 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["mInputPanel"]
 64 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["mClipPath"]
 65 [-]: LOADK     R12 K6       ; R12 := ".MessageBox"
 66 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 67 [-]: CONST     R12 29       ; R12 := 29.000000
 68 [-]: MOVE      R13 R8       ; R13 := R8
 69 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 70 [-]: GETUPVAL  R9 U0        ; R9 := U0
 71 [-]: GETTABLE  R9 R9 K19    ; R82 := R9[0xc074491b]
 72 [-]: GETUPVAL  R10 U1       ; R10 := U1
 73 [-]: CALL      R9 2 1       ; R9(R10)
 74 [-]: GETGLOBAL R9 K1        ; R9 := 0xae91e43b
 75 [-]: SELF      R9 R9 K20    ; R10 := R9; R9 := R9[0xe75766cb]
 76 [-]: GETGLOBAL R11 K3       ; R11 := mWindow
 77 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["mInputPanel"]
 78 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["mClipPath"]
 79 [-]: LOADK     R12 K6       ; R12 := ".MessageBox"
 80 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 81 [-]: CALL      R9 3 1       ; R9(R10,R11)
 82 [-]: GETGLOBAL R9 K3        ; R9 := mWindow
 83 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["mInputPanel"]
 84 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9[0x0417ad4a]
 85 [-]: OP_LOADBOOL R11 1 0      ; R11 := true
 86 [-]: CALL      R9 3 1       ; R9(R10,R11)
 87 [-]: GETGLOBAL R9 K1        ; R9 := 0xae91e43b
 88 [-]: SELF      R9 R9 K22    ; R10 := R9; R9 := R9[0xf64b7262]
 89 [-]: GETGLOBAL R11 K3       ; R11 := mWindow
 90 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["mInputPanel"]
 91 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["mClipPath"]
 92 [-]: LOADK     R12 K23      ; R12 := "MessageBox"
 93 [-]: CONST     R13 71       ; R13 := 71.000000
 94 [-]: GETGLOBAL R14 K10      ; R14 := 0x7f5022cf
 95 [-]: GETTABLE  R14 R14 K12  ; R82 := R14[0x41e2ae25]
 96 [-]: MOVE      R15 R0       ; R15 := R0
 97 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 98 [-]: GETGLOBAL R15 K10      ; R15 := 0x7f5022cf
 99 [-]: GETTABLE  R15 R15 K12  ; R82 := R15[0x41e2ae25]
100 [-]: MOVE      R16 R2       ; R16 := R2
101 [-]: CALL      R15 2 2      ; R15 := R15(R16)
102 [-]: SUB       R14 R14 R15  ; R14 := R14 - R15
103 [-]: GETGLOBAL R15 K10      ; R15 := 0x7f5022cf
104 [-]: GETTABLE  R15 R15 K12  ; R82 := R15[0x41e2ae25]
105 [-]: MOVE      R16 R7       ; R16 := R7
106 [-]: CALL      R15 2 2      ; R15 := R15(R16)
107 [-]: ADD       R14 R14 R15  ; R14 := R14 + R15
108 [-]: ADD       R14 R3 R14   ; R14 := R3 + R14
109 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
110 [-]: GETGLOBAL R9 K1        ; R9 := 0xae91e43b
111 [-]: SELF      R9 R9 K24    ; R10 := R9; R9 := R9[0xc0a3774b]
112 [-]: GETGLOBAL R11 K3       ; R11 := mWindow
113 [-]: GETTABLE  R11 R11 K4   ; R11 := R11["mInputPanel"]
114 [-]: GETTABLE  R11 R11 K5   ; R11 := R11["mClipPath"]
115 [-]: LOADK     R12 K23      ; R12 := "MessageBox"
116 [-]: CONST     R13 73       ; R13 := 73.000000
117 [-]: OP_LOADBOOL R14 0 0      ; R14 := false
118 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
119 [-]: GETUPVAL  R9 U0        ; R9 := U0
120 [-]: GETTABLE  R9 R9 K25    ; R82 := R9[0x2e84930f]
121 [-]: CONST     R10 1        ; R10 := 1.000000
122 [-]: GETUPVAL  R11 U1       ; R11 := U1
123 [-]: CALL      R9 3 1       ; R9(R10,R11)
124 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
125 [-]: SETUPVAL  R9 U2        ; U82 := 	
126 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
127 [-]: SETUPVAL  R9 U3        ; U82 := 	
128 [-]: RETURN    R0 1         ; return 


; Function #21:
;
; Name:            
; Defined at line: 722
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #22:
;
; Name:            
; Defined at line: 727
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R0 K2        ; R0 := mInputBlocked
  7 [-]: TEST      R0 1         ; if R0 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 10 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x9317b706]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #23:
;
; Name:            
; Defined at line: 732
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x1e772104]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #24:
;
; Name:            
; Defined at line: 737
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R0 K2        ; R0 := mInputBlocked
  7 [-]: TEST      R0 1         ; if R0 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 10 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x538ede3a]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #25:
;
; Name:            
; Defined at line: 742
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x16d7d774]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #26:
;
; Name:            
; Defined at line: 749
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: GETGLOBAL R0 K2        ; R0 := mInputBlocked
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x54f49c46]
  9 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mBottomResizeClipName"]
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #27:
;
; Name:            
; Defined at line: 754
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  5 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x094be744]
  6 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mBottomResizeClipName"]
  8 [-]: CALL      R0 3 1       ; R0(R1,R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #28:
;
; Name:            
; Defined at line: 759
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: GETGLOBAL R0 K2        ; R0 := mInputBlocked
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xd0eff17a]
  9 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mBottomResizeClipName"]
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #29:
;
; Name:            
; Defined at line: 764
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  5 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xc4bd11b4]
  6 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mBottomResizeClipName"]
  8 [-]: CALL      R0 3 1       ; R0(R1,R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #30:
;
; Name:            
; Defined at line: 770
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: GETGLOBAL R0 K2        ; R0 := mInputBlocked
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x54f49c46]
  9 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mTopResizeClipName"]
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #31:
;
; Name:            
; Defined at line: 775
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  5 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x094be744]
  6 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mTopResizeClipName"]
  8 [-]: CALL      R0 3 1       ; R0(R1,R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #32:
;
; Name:            
; Defined at line: 780
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 12
  3 [-]: JMP       12           ; PC := 12
  4 [-]: GETGLOBAL R0 K2        ; R0 := mInputBlocked
  5 [-]: TEST      R0 1         ; if R0 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xd0eff17a]
  9 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mTopResizeClipName"]
 11 [-]: CALL      R0 3 1       ; R0(R1,R2)
 12 [-]: RETURN    R0 1         ; return 


; Function #33:
;
; Name:            
; Defined at line: 785
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  5 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xc4bd11b4]
  6 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mTopResizeClipName"]
  8 [-]: CALL      R0 3 1       ; R0(R1,R2)
  9 [-]: RETURN    R0 1         ; return 


; Function #34:
;
; Name:            
; Defined at line: 791
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: EQ        1 R0 K1      ; if R0 == nil then PC := 4
  3 [-]: JMP       4            ; PC := 4
  4 [-]: RETURN    R0 1         ; return 


; Function #35:
;
; Name:            
; Defined at line: 798
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 22
  5 [-]: JMP       22           ; PC := 22
  6 [-]: GETGLOBAL R1 K2        ; R1 := mInputBlocked
  7 [-]: TEST      R1 1         ; if R1 then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 16 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 17 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mListControl"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 0         ; if not R1 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 24 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 25 [-]: GETGLOBAL R2 K6        ; R2 := 0x03f57322
 26 [-]: MOVE      R3 R0        ; R3 := R0
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: SETTABLE  R1 K5 R2     ; R1["mStoredUserFocusId"] := R2
 29 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 30 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x5b0290d2]
 31 [-]: LOADK     R3 K9        ; R3 := "ContextMenu"
 32 [-]: CONST     R4 59        ; R4 := 59.000000
 33 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 34 [-]: TEST      R1 0         ; if not R1 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 38 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 39 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mListControl"]
 40 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xdf42446e]
 41 [-]: GETGLOBAL R3 K6        ; R3 := 0x03f57322
 42 [-]: MOVE      R4 R0        ; R4 := R0
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 45 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 46 [-]: RETURN    R0 1         ; return 


; Function #36:
;
; Name:            
; Defined at line: 808
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mUserPanel"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 13 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mUserPanel"]
 15 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mListControl"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 21 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserPanel"]
 22 [-]: SETTABLE  R1 K4 K5     ; R1["mStoredUserFocusId"] := nil
 23 [-]: GETGLOBAL R1 K6        ; R1 := 0xae91e43b
 24 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x5b0290d2]
 25 [-]: LOADK     R3 K8        ; R3 := "ContextMenu"
 26 [-]: CONST     R4 59        ; R4 := 59.000000
 27 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 28 [-]: TEST      R1 0         ; if not R1 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 32 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserPanel"]
 33 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mListControl"]
 34 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xbce5a201]
 35 [-]: GETGLOBAL R3 K10       ; R3 := 0x03f57322
 36 [-]: MOVE      R4 R0        ; R4 := R0
 37 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 38 [-]: CALL      R1 0 1       ; R1(R2,...)
 39 [-]: RETURN    R0 1         ; return 


; Function #37:
;
; Name:            
; Defined at line: 818
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R1 K2        ; R1 := mInputBlocked
  7 [-]: TEST      R1 1         ; if R1 then PC := 29
  8 [-]: JMP       29           ; PC := 29
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 16 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 17 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mListControl"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 29
 21 [-]: JMP       29           ; PC := 29
 22 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 23 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x5b0290d2]
 24 [-]: LOADK     R3 K7        ; R3 := "ContextMenu"
 25 [-]: CONST     R4 59        ; R4 := 59.000000
 26 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 27 [-]: TEST      R1 0         ; if not R1 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 31 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 32 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mListControl"]
 33 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x070daa5a]
 34 [-]: GETGLOBAL R3 K9        ; R3 := 0x03f57322
 35 [-]: MOVE      R4 R0        ; R4 := R0
 36 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 37 [-]: CALL      R1 0 1       ; R1(R2,...)
 38 [-]: RETURN    R0 1         ; return 


; Function #38:
;
; Name:            
; Defined at line: 824
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 22
  5 [-]: JMP       22           ; PC := 22
  6 [-]: GETGLOBAL R1 K2        ; R1 := mInputBlocked
  7 [-]: TEST      R1 1         ; if R1 then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 16 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 17 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mEmoteGrid"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 0         ; if not R1 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 24 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 25 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mEmoteGrid"]
 26 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xdf42446e]
 27 [-]: GETGLOBAL R3 K6        ; R3 := 0x03f57322
 28 [-]: MOVE      R4 R0        ; R4 := R0
 29 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 30 [-]: CALL      R1 0 1       ; R1(R2,...)
 31 [-]: RETURN    R0 1         ; return 


; Function #39:
;
; Name:            
; Defined at line: 830
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mUserPanel"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 13 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mUserPanel"]
 15 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mEmoteGrid"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 0         ; if not R1 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 21 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserPanel"]
 22 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mEmoteGrid"]
 23 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xbce5a201]
 24 [-]: GETGLOBAL R3 K5        ; R3 := 0x03f57322
 25 [-]: MOVE      R4 R0        ; R4 := R0
 26 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 27 [-]: CALL      R1 0 1       ; R1(R2,...)
 28 [-]: RETURN    R0 1         ; return 


; Function #40:
;
; Name:            
; Defined at line: 836
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETGLOBAL R1 K2        ; R1 := mInputBlocked
  7 [-]: TEST      R1 1         ; if R1 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 17 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 18 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mEmoteGrid"]
 19 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x070daa5a]
 20 [-]: GETGLOBAL R3 K6        ; R3 := 0x03f57322
 21 [-]: MOVE      R4 R0        ; R4 := R0
 22 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 23 [-]: CALL      R1 0 1       ; R1(R2,...)
 24 [-]: GETUPVAL  R1 U0        ; R1 := U0
 25 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0x659d451f]
 26 [-]: GETGLOBAL R2 K8        ; R2 := 0x0032441c
 27 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["UISound_ItemTipSection"]
 28 [-]: CALL      R1 2 1       ; R1(R2)
 29 [-]: RETURN    R0 1         ; return 


; Function #41:
;
; Name:            
; Defined at line: 845
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0xfe8039a9]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
  6 [-]: GETGLOBAL R2 K2        ; R2 := 0xcfc01047
  7 [-]: GETGLOBAL R3 K0        ; R3 := mWindow
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mPanelList"]
  9 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 10 [-]: JMP       17           ; PC := 17
 11 [-]: EQ        1 R6 K4      ; if R6 == nil then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETTABLE  R7 R6 K5     ; R7 := R6["mChannelName"]
 14 [-]: EQ        0 R7 R1      ; if R7 ~= R1 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R6 2         ; return R6
 17 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 11; R4 := R5 end
 18 [-]: JMP       11           ; PC := 11
 19 [-]: LOADNIL   R7 R7        ; R7 := nil
 20 [-]: RETURN    R7 2         ; return R7
 21 [-]: RETURN    R0 1         ; return 


; Function #42:
;
; Name:            
; Defined at line: 857
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7f5022cf
  2 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0xa5c556b9]
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: LOADK     R4 K2        ; R4 := "_"
  5 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  6 [-]: EQ        1 R2 K3      ; if R2 == nil then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R3 K0        ; R3 := 0x7f5022cf
  9 [-]: GETTABLE  R3 R3 K4     ; R82 := R3[0x1a94c9cc]
 10 [-]: MOVE      R4 R1        ; R4 := R1
 11 [-]: CONST     R5 1         ; R5 := 1.000000
 12 [-]: SUB       R6 R2 K5     ; R6 := R2 - 1.000000
 13 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 14 [-]: MOVE      R1 R3        ; R1 := R3
 15 [-]: GETGLOBAL R3 K6        ; R3 := mWindow
 16 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["mNextPrivateChatId"]
 17 [-]: LOADK     R4 K8        ; R4 := "#"
 18 [-]: GETGLOBAL R5 K6        ; R5 := mWindow
 19 [-]: GETTABLE  R5 R5 K9     ; R82 := R5[0xfe8039a9]
 20 [-]: CALL      R5 1 2       ; R5 := R5()
 21 [-]: MOVE      R6 R0        ; R6 := R0
 22 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 23 [-]: GETGLOBAL R5 K6        ; R5 := mWindow
 24 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0x9f16d8a1]
 25 [-]: GETGLOBAL R7 K6        ; R7 := mWindow
 26 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["CHANNEL_ENTER"]
 27 [-]: MOVE      R8 R4        ; R8 := R4
 28 [-]: MOVE      R9 R0        ; R9 := R0
 29 [-]: MOVE      R10 R3       ; R10 := R3
 30 [-]: CALL      R5 6 2       ; R5 := R5(R6,R7,R8,R9,R10)
 31 [-]: GETGLOBAL R6 K12       ; R6 := 0x7b998233
 32 [-]: GETGLOBAL R7 K13       ; R7 := mGameData
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: TEST      R6 1         ; if R6 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: GETGLOBAL R6 K13       ; R6 := mGameData
 37 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0xaa1c58ef]
 38 [-]: MOVE      R8 R0        ; R8 := R0
 39 [-]: MOVE      R9 R1        ; R9 := R1
 40 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 41 [-]: SETTABLE  R5 K14 R6    ; R5[0xad1e0b4b] := R6
 42 [-]: GETGLOBAL R6 K6        ; R6 := mWindow
 43 [-]: GETGLOBAL R7 K6        ; R7 := mWindow
 44 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["mNextPrivateChatId"]
 45 [-]: ADD       R7 R7 K5     ; R7 := R7 + 1.000000
 46 [-]: SETTABLE  R6 K7 R7     ; R6["mNextPrivateChatId"] := R7
 47 [-]: RETURN    R5 2         ; return R5
 48 [-]: RETURN    R0 1         ; return 


; Function #43:
;
; Name:            
; Defined at line: 878
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: MOVE      R4 R0        ; R4 := R0
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  5 [-]: MOVE      R5 R3        ; R5 := R3
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: TEST      R4 0         ; if not R4 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: TEST      R2 1         ; if R2 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: MOVE      R5 R0        ; R5 := R0
 13 [-]: MOVE      R6 R1        ; R6 := R1
 14 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 15 [-]: MOVE      R3 R4        ; R3 := R4
 16 [-]: RETURN    R3 2         ; return R3
 17 [-]: RETURN    R0 1         ; return 


; Function #44:
;
; Name:            
; Defined at line: 888
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
  5 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  6 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
  7 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  8 [-]: MOVE      R5 R2        ; R5 := R2
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: TEST      R4 0         ; if not R4 then PC := 77
 11 [-]: JMP       77           ; PC := 77
 12 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 13 [-]: GETGLOBAL R5 K1        ; R5 := mGameData
 14 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 15 [-]: TEST      R4 1         ; if R4 then PC := 61
 16 [-]: JMP       61           ; PC := 61
 17 [-]: GETGLOBAL R4 K1        ; R4 := mGameData
 18 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4[0xefee6c91]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: LT        1 K3 R4      ; if 0.000000 < R4 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: OP_LOADBOOL R3 0 1       ; R3 := false; PC := 23
 23 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 24 [-]: TEST      R3 1         ; if R3 then PC := 61
 25 [-]: JMP       61           ; PC := 61
 26 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 27 [-]: GETGLOBAL R5 K1        ; R5 := mGameData
 28 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5[0x2e37a704]
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: GETGLOBAL R6 K1        ; R6 := mGameData
 31 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0x6ca27630]
 32 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 33 [-]: GETGLOBAL R7 K1        ; R7 := mGameData
 34 [-]: SELF      R7 R7 K6     ; R8 := R7; R7 := R7[0x9eada7e1]
 35 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 36 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
 37 [-]: CONST     R5 1         ; R5 := 1.000000
 38 [-]: LEN       R6 R4        ; R6 := # R4
 39 [-]: CONST     R7 1         ; R7 := 1.000000
 40 [-]: FORPREP   R5 60        ; R5 -= R7; PC := 60
 41 [-]: GETTABLE  R9 R4 R8     ; R9 := R4[R8]
 42 [-]: CONST     R10 1        ; R10 := 1.000000
 43 [-]: LEN       R11 R9       ; R11 := # R9
 44 [-]: CONST     R12 1        ; R12 := 1.000000
 45 [-]: FORPREP   R10 56       ; R10 -= R12; PC := 56
 46 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
 47 [-]: GETTABLE  R14 R14 K7   ; R14 := R14["mDisplayName"]
 48 [-]: EQ        0 R14 R0     ; if R14 ~= R0 then PC := 56
 49 [-]: JMP       56           ; PC := 56
 50 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
 51 [-]: GETTABLE  R14 R14 K8   ; R14 := R14["mStatus"]
 52 [-]: EQ        0 R14 K3     ; if R14 ~= 0.000000 then PC := 56
 53 [-]: JMP       56           ; PC := 56
 54 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 55 [-]: JMP       57           ; PC := 57
 56 [-]: FORLOOP   R10 46       ; R10 += R12; if R10 <= R11 then begin PC := 46; R13 := R10 end
 57 [-]: TEST      R3 0         ; if not R3 then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: JMP       61           ; PC := 61
 60 [-]: FORLOOP   R5 41        ; R5 += R7; if R5 <= R6 then begin PC := 41; R8 := R5 end
 61 [-]: TEST      R3 0         ; if not R3 then PC := 69
 62 [-]: JMP       69           ; PC := 69
 63 [-]: GETUPVAL  R14 U1       ; R14 := U1
 64 [-]: MOVE      R15 R0       ; R15 := R0
 65 [-]: MOVE      R16 R1       ; R16 := R1
 66 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
 67 [-]: MOVE      R2 R14       ; R2 := R14
 68 [-]: JMP       77           ; PC := 77
 69 [-]: GETGLOBAL R14 K9       ; R14 := mWindow
 70 [-]: SELF      R14 R14 K10  ; R15 := R14; R14 := R14[0xd4f2405e]
 71 [-]: GETGLOBAL R16 K11      ; R16 := 0xae91e43b
 72 [-]: SELF      R16 R16 K12  ; R17 := R16; R16 := R16[0x42b04007]
 73 [-]: LOADK     R18 K13      ; R18 := "/Lotus/Language/Menu/Chat_InitiatePMFailed"
 74 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
 75 [-]: CALL      R16 4 0      ; R16,... := R16(R17,R18,R19)
 76 [-]: CALL      R14 0 1      ; R14(R15,...)
 77 [-]: GETGLOBAL R14 K0       ; R14 := 0x7b998233
 78 [-]: MOVE      R15 R2       ; R15 := R2
 79 [-]: CALL      R14 2 2      ; R14 := R14(R15)
 80 [-]: TEST      R14 1        ; if R14 then PC := 86
 81 [-]: JMP       86           ; PC := 86
 82 [-]: GETGLOBAL R14 K9       ; R14 := mWindow
 83 [-]: SELF      R14 R14 K14  ; R15 := R14; R14 := R14[0x46610c50]
 84 [-]: MOVE      R16 R2       ; R16 := R2
 85 [-]: CALL      R14 3 1      ; R14(R15,R16)
 86 [-]: RETURN    R3 2         ; return R3
 87 [-]: RETURN    R0 1         ; return 


; Function #45:
;
; Name:            
; Defined at line: 930
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K3        ; R1 := _T
  8 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["ForegroundMovie"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 22
 11 [-]: JMP       22           ; PC := 22
 12 [-]: GETGLOBAL R0 K3        ; R0 := _T
 13 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["CanShowPlayTypeDropDown"]
 14 [-]: TEST      R0 0         ; if not R0 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R0 K3        ; R0 := _T
 17 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["ForegroundMovie"]
 18 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xe4162eed]
 19 [-]: LOADK     R2 K7        ; R2 := "TogglePlayTypeDropDown"
 20 [-]: LOADK     R3 K8        ; R3 := "true"
 21 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 22 [-]: GETGLOBAL R0 K3        ; R0 := _T
 23 [-]: SETTABLE  R0 K9 K10    ; R0["gToolTip"] := nil
 24 [-]: GETGLOBAL R0 K11       ; R0 := mWindow
 25 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0xc2b5e351]
 26 [-]: GETGLOBAL R2 K11       ; R2 := mWindow
 27 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 28 [-]: CALL      R0 3 1       ; R0(R1,R2)
 29 [-]: GETUPVAL  R0 U0        ; R0 := U0
 30 [-]: CALL      R0 1 1       ; R0()
 31 [-]: RETURN    R0 1         ; return 


; Function #46:
;
; Name:            
; Defined at line: 944
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x89326c93
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 8
  5 [-]: JMP       8            ; PC := 8
  6 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["HIDDEN_PLAYER_NAME"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: GETGLOBAL R1 K3        ; R1 := mUIMode
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["UI_MODE_IN_GAME"]
 17 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 36
 18 [-]: JMP       36           ; PC := 36
 19 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 20 [-]: GETGLOBAL R2 K5        ; R2 := 0xbe190284
 21 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 22 [-]: TEST      R1 1         ; if R1 then PC := 36
 23 [-]: JMP       36           ; PC := 36
 24 [-]: GETGLOBAL R1 K5        ; R1 := 0xbe190284
 25 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xf2deaf69]
 26 [-]: GETGLOBAL R3 K7        ; R3 := gLotusPvpGameRulesType
 27 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 28 [-]: TEST      R1 0         ; if not R1 then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R1 K5        ; R1 := 0xbe190284
 31 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xf2deaf69]
 32 [-]: GETGLOBAL R3 K8        ; R3 := gLotusFightingGameRulesType
 33 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 34 [-]: TEST      R1 0         ; if not R1 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 37 [-]: RETURN    R1 2         ; return R1
 38 [-]: GETGLOBAL R1 K1        ; R1 := 0x89326c93
 39 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xfb64e76c]
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 42 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 43 [-]: MOVE      R4 R1        ; R4 := R1
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: TEST      R3 1         ; if R3 then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: SELF      R3 R1 K10    ; R4 := R1; R3 := R1[0xad1e0b4b]
 48 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 49 [-]: EQ        0 R3 K11     ; if R3 ~= 255.000000 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 52 [-]: JMP       83           ; PC := 83
 53 [-]: GETGLOBAL R3 K1        ; R3 := 0x89326c93
 54 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x7d108ddb]
 55 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 56 [-]: CONST     R4 1         ; R4 := 1.000000
 57 [-]: LEN       R5 R3        ; R5 := # R3
 58 [-]: CONST     R6 1         ; R6 := 1.000000
 59 [-]: FORPREP   R4 82        ; R4 -= R6; PC := 82
 60 [-]: GETTABLE  R8 R3 R7     ; R8 := R3[R7]
 61 [-]: SELF      R9 R8 K13    ; R10 := R8; R9 := R8[0x5ca33548]
 62 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 63 [-]: EQ        0 R9 R0      ; if R9 ~= R0 then PC := 82
 64 [-]: JMP       82           ; PC := 82
 65 [-]: SELF      R9 R8 K10    ; R10 := R8; R9 := R8[0xad1e0b4b]
 66 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 67 [-]: SELF      R10 R1 K10   ; R11 := R1; R10 := R1[0xad1e0b4b]
 68 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 69 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 80
 70 [-]: JMP       80           ; PC := 80
 71 [-]: GETGLOBAL R9 K14       ; R9 := _T
 72 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["PvpMode"]
 73 [-]: TESTSET   R2 R9 0      ; if not R9 then PC := 81 else R2 := R9
 74 [-]: JMP       81           ; PC := 81
 75 [-]: GETGLOBAL R9 K14       ; R9 := _T
 76 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["PvpMode"]
 77 [-]: EQ        1 R9 K17     ; if R9 == 3.000000 then PC := 80
 78 [-]: JMP       80           ; PC := 80
 79 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 80
 80 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 81 [-]: JMP       83           ; PC := 83
 82 [-]: FORLOOP   R4 60        ; R4 += R6; if R4 <= R5 then begin PC := 60; R7 := R4 end
 83 [-]: RETURN    R2 2         ; return R2
 84 [-]: RETURN    R0 1         ; return 


; Function #47:
;
; Name:            
; Defined at line: 977
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R1 K3        ; R1 := _T
  7 [-]: GETTABLE  R1 R1 K4     ; R82 := R1[0x297e93ca]
  8 [-]: CALL      R1 1 1       ; R1()
  9 [-]: RETURN    R0 1         ; return 


; Function #48:
;
; Name:            
; Defined at line: 983
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInputBlocked
  2 [-]: TEST      R0 1         ; if R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: RETURN    R0 1         ; return 


; Function #49:
;
; Name:            
; Defined at line: 989
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisualMode"]
  3 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["VISUAL_MODE_MENU_SIMPLE"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: OP_LOADBOOL R0 0 1       ; R0 := false; PC := 8
  8 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
  9 [-]: RETURN    R0 2         ; return R0
 10 [-]: RETURN    R0 1         ; return 


; Function #50:
;
; Name:            
; Defined at line: 993
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  3 [-]: RETURN    R0 0         ; return R0,...
  4 [-]: RETURN    R0 1         ; return 


; Function #51:
;
; Name:            
; Defined at line: 998
; #Upvalues:       18
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: SETTABLE  R2 K0 R0     ; R2["mParent"] := R0
  3 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  4 [-]: SETTABLE  R2 K1 R3     ; R2["mWindow"] := R3
  5 [-]: SETTABLE  R2 K2 R1     ; R2["mClipName"] := R1
  6 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  7 [-]: SETTABLE  R2 K3 R3     ; R2["mClipParent"] := R3
  8 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  9 [-]: LOADK     R4 K5        ; R4 := "."
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 12 [-]: SETTABLE  R2 K4 R3     ; R2["mClipPath"] := R3
 13 [-]: SETTABLE  R2 K6 K7     ; R2["mListControl"] := nil
 14 [-]: SETTABLE  R2 K8 K7     ; R2["mStoredUserFocusId"] := nil
 15 [-]: SETTABLE  R2 K9 K7     ; R2["mUserLocator"] := nil
 16 [-]: SETTABLE  R2 K10 K11   ; R2["mIsExpanded"] := false
 17 [-]: SETTABLE  R2 K12 K11   ; R2["mUserListInterpolating"] := false
 18 [-]: CLOSURE   R3 0         ; R3 := closure(Function #51.1)
 19 [-]: GETUPVAL  R0 U0        ; R0 := U0
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: GETUPVAL  R0 U2        ; R0 := U2
 22 [-]: GETUPVAL  R0 U3        ; R0 := U3
 23 [-]: GETUPVAL  R0 U4        ; R0 := U4
 24 [-]: GETUPVAL  R0 U5        ; R0 := U5
 25 [-]: GETUPVAL  R0 U6        ; R0 := U6
 26 [-]: GETUPVAL  R0 U7        ; R0 := U7
 27 [-]: SETTABLE  R2 K13 R3    ; R2[0xed1ab921] := R3
 28 [-]: CLOSURE   R3 1         ; R3 := closure(Function #51.2)
 29 [-]: SETTABLE  R2 K14 R3    ; R2[0x7b998233] := R3
 30 [-]: CLOSURE   R3 2         ; R3 := closure(Function #51.3)
 31 [-]: SETTABLE  R2 K15 R3    ; R2[0xb15e6aca] := R3
 32 [-]: CLOSURE   R3 3         ; R3 := closure(Function #51.4)
 33 [-]: SETTABLE  R2 K16 R3    ; R2["Clear"] := R3
 34 [-]: CLOSURE   R3 4         ; R3 := closure(Function #51.5)
 35 [-]: GETUPVAL  R0 U8        ; R0 := U8
 36 [-]: GETUPVAL  R0 U9        ; R0 := U9
 37 [-]: GETUPVAL  R0 U10       ; R0 := U10
 38 [-]: SETTABLE  R2 K17 R3    ; R2["Update"] := R3
 39 [-]: CLOSURE   R3 5         ; R3 := closure(Function #51.6)
 40 [-]: GETUPVAL  R0 U9        ; R0 := U9
 41 [-]: GETUPVAL  R0 U11       ; R0 := U11
 42 [-]: GETUPVAL  R0 U8        ; R0 := U8
 43 [-]: GETUPVAL  R0 U12       ; R0 := U12
 44 [-]: GETUPVAL  R0 U13       ; R0 := U13
 45 [-]: GETUPVAL  R0 U14       ; R0 := U14
 46 [-]: GETUPVAL  R0 U5        ; R0 := U5
 47 [-]: GETUPVAL  R0 U15       ; R0 := U15
 48 [-]: GETUPVAL  R0 U16       ; R0 := U16
 49 [-]: GETUPVAL  R0 U2        ; R0 := U2
 50 [-]: GETUPVAL  R0 U17       ; R0 := U17
 51 [-]: SETTABLE  R2 K18 R3    ; R2["UpdateTextSuggestion"] := R3
 52 [-]: CLOSURE   R3 6         ; R3 := closure(Function #51.7)
 53 [-]: SETTABLE  R2 K19 R3    ; R2["UpdateElementVisibilityRange"] := R3
 54 [-]: CLOSURE   R3 7         ; R3 := closure(Function #51.8)
 55 [-]: SETTABLE  R2 K20 R3    ; R2["OnUserJoin"] := R3
 56 [-]: CLOSURE   R3 8         ; R3 := closure(Function #51.9)
 57 [-]: SETTABLE  R2 K21 R3    ; R2["OnUserLeave"] := R3
 58 [-]: CLOSURE   R3 9         ; R3 := closure(Function #51.10)
 59 [-]: SETTABLE  R2 K22 R3    ; R2["SetSize"] := R3
 60 [-]: CLOSURE   R3 10        ; R3 := closure(Function #51.11)
 61 [-]: GETUPVAL  R0 U2        ; R0 := U2
 62 [-]: SETTABLE  R2 K23 R3    ; R2["ToggleLocator"] := R3
 63 [-]: CLOSURE   R3 11        ; R3 := closure(Function #51.12)
 64 [-]: GETUPVAL  R0 U2        ; R0 := U2
 65 [-]: SETTABLE  R2 K24 R3    ; R2["ToggleList"] := R3
 66 [-]: CLOSURE   R3 12        ; R3 := closure(Function #51.13)
 67 [-]: GETUPVAL  R0 U2        ; R0 := U2
 68 [-]: SETTABLE  R2 K25 R3    ; R2["ToggleListVis"] := R3
 69 [-]: RETURN    R2 2         ; return R2
 70 [-]: RETURN    R0 1         ; return 


; Function #51.1:
;
; Name:            
; Defined at line: 1011
; #Upvalues:       8
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  2 [-]: SETTABLE  R3 K1 K2     ; R3["x"] := 0.000000
  3 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  4 [-]: SETTABLE  R3 K3 K4     ; R3["ReverseX"] := true
  5 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  6 [-]: SETTABLE  R3 K5 K2     ; R3["y"] := 0.000000
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  8 [-]: SETTABLE  R3 K6 K7     ; R3["width"] := 194.000000
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
 10 [-]: SETTABLE  R3 K8 K9     ; R3["height"] := 27.000000
 11 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
 12 [-]: SETTABLE  R3 K10 K4    ; R3["ReverseHeight"] := true
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K11    ; R82 := R3[0x9383bc56]
 15 [-]: GETGLOBAL R4 K12       ; R4 := 0xae91e43b
 16 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mClipPath"]
 17 [-]: LOADK     R6 K14       ; R6 := ".Panel.UserList.User1"
 18 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 19 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 20 [-]: SELF      R4 R3 K15    ; R5 := R3; R4 := R3[0x1e5b5cfe]
 21 [-]: LOADK     R6 K16       ; R6 := "UserLinePressed"
 22 [-]: LOADK     R7 K17       ; R7 := "UserLineRollOver"
 23 [-]: LOADK     R8 K18       ; R8 := "UserLineRollOut"
 24 [-]: LOADNIL   R9 R11       ; R9 := R10 := R11 := nil
 25 [-]: LOADK     R12 K18      ; R12 := "UserLineRollOut"
 26 [-]: CALL      R4 9 1       ; R4(R5,R6,R7,R8,R9,R10,R11,R12)
 27 [-]: SETTABLE  R3 K19 K2    ; R3["mElementTransitionTime"] := 0.000000
 28 [-]: CLOSURE   R4 0         ; R4 := closure(Function #51.1.1)
 29 [-]: SETTABLE  R3 K20 R4    ; R3[0xaade900e] := R4
 30 [-]: SETTABLE  R0 K21 R3    ; R0["mListControl"] := R3
 31 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 32 [-]: SETTABLE  R4 K22 K23   ; R4["mVisibleElements"] := 10.000000
 33 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 34 [-]: SETTABLE  R4 K24 K25   ; R4["mForcedVerticalSeparation"] := 29.000000
 35 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 36 [-]: SETTABLE  R4 K26 K27   ; R4["mIsVisible"] := false
 37 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 38 [-]: CLOSURE   R5 1         ; R5 := closure(Function #51.1.2)
 39 [-]: SETTABLE  R4 K28 R5    ; R4["OnElementTransitionStarted"] := R5
 40 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 41 [-]: CLOSURE   R5 2         ; R5 := closure(Function #51.1.3)
 42 [-]: GETUPVAL  R0 U1        ; R0 := U1
 43 [-]: SETTABLE  R4 K29 R5    ; R4["OnElementTransitionEnded"] := R5
 44 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 45 [-]: CLOSURE   R5 3         ; R5 := closure(Function #51.1.4)
 46 [-]: MOVE      R0 R0        ; R0 := R0
 47 [-]: SETTABLE  R4 K30 R5    ; R4["ToggleFocus"] := R5
 48 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 49 [-]: CLOSURE   R5 4         ; R5 := closure(Function #51.1.5)
 50 [-]: GETUPVAL  R0 U2        ; R0 := U2
 51 [-]: MOVE      R0 R0        ; R0 := R0
 52 [-]: GETUPVAL  R0 U3        ; R0 := U3
 53 [-]: SETTABLE  R4 K31 R5    ; R4["mElementDrawCallback"] := R5
 54 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 55 [-]: CLOSURE   R5 5         ; R5 := closure(Function #51.1.6)
 56 [-]: MOVE      R0 R0        ; R0 := R0
 57 [-]: SETTABLE  R4 K32 R5    ; R4["mOnFocusedCallback"] := R5
 58 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 59 [-]: CLOSURE   R5 6         ; R5 := closure(Function #51.1.7)
 60 [-]: MOVE      R0 R0        ; R0 := R0
 61 [-]: SETTABLE  R4 K33 R5    ; R4["mOnUnfocusedCallback"] := R5
 62 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 63 [-]: CLOSURE   R5 7         ; R5 := closure(Function #51.1.8)
 64 [-]: SETTABLE  R4 K34 R5    ; R4["mOnSelectedCallback"] := R5
 65 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 66 [-]: GETTABLE  R5 R0 K21    ; R5 := R0["mListControl"]
 67 [-]: GETTABLE  R5 R5 K36    ; R5 := R5["Redraw"]
 68 [-]: SETTABLE  R4 K35 R5    ; R4["_ListControl_Redraw"] := R5
 69 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 70 [-]: CLOSURE   R5 8         ; R5 := closure(Function #51.1.9)
 71 [-]: SETTABLE  R4 K36 R5    ; R4["Redraw"] := R5
 72 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 73 [-]: SELF      R4 R4 K37    ; R5 := R4; R4 := R4[0x3bc79f4f]
 74 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 75 [-]: LOADK     R7 K38       ; R7 := ".Panel.UserList.ScrollBar"
 76 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 77 [-]: CALL      R4 3 1       ; R4(R5,R6)
 78 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 79 [-]: SETTABLE  R4 K39 K4    ; R4["mScrollAlwaysVisible"] := true
 80 [-]: GETGLOBAL R4 K40       ; R4 := 0x34291f5c
 81 [-]: GETTABLE  R4 R4 K41    ; R82 := R4[0xe6b41adb]
 82 [-]: CALL      R4 1 2       ; R4 := R4()
 83 [-]: TEST      R4 0         ; if not R4 then PC := 96
 84 [-]: JMP       96           ; PC := 96
 85 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 86 [-]: SELF      R4 R4 K42    ; R5 := R4; R4 := R4[0xf4fed7fe]
 87 [-]: CALL      R4 2 1       ; R4(R5)
 88 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 89 [-]: SELF      R4 R4 K43    ; R5 := R4; R4 := R4[0x7220acb6]
 90 [-]: CALL      R4 2 1       ; R4(R5)
 91 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 92 [-]: SELF      R4 R4 K44    ; R5 := R4; R4 := R4[0x4c4f8717]
 93 [-]: CONST     R6 1         ; R6 := 1.000000
 94 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 95 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 96 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mListControl"]
 97 [-]: GETTABLE  R4 R4 K45    ; R4 := R4["mScrollBar"]
 98 [-]: CLOSURE   R5 9         ; R5 := closure(Function #51.1.10)
 99 [-]: MOVE      R0 R3        ; R0 := R3
100 [-]: GETUPVAL  R0 U2        ; R0 := U2
101 [-]: MOVE      R0 R0        ; R0 := R0
102 [-]: SETTABLE  R4 K46 R5    ; R4["mScrubStopDragCallback"] := R5
103 [-]: GETGLOBAL R4 K47       ; R4 := 0x2d0fad09
104 [-]: LOADK     R5 K48       ; R5 := "EE.Interface.Components.Grid"
105 [-]: CALL      R4 2 2       ; R4 := R4(R5)
106 [-]: GETTABLE  R5 R4 K50    ; R82 := R5[0xda0c93a2]
107 [-]: GETGLOBAL R6 K12       ; R6 := 0xae91e43b
108 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["mClipPath"]
109 [-]: LOADK     R8 K51       ; R8 := ".AlphabetIndex.Grid.Element"
110 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
111 [-]: LOADNIL   R8 R8        ; R8 := nil
112 [-]: CONST     R9 5         ; R9 := 5.000000
113 [-]: CONST     R10 6        ; R10 := 6.000000
114 [-]: CALL      R5 6 2       ; R5 := R5(R6,R7,R8,R9,R10)
115 [-]: SETTABLE  R0 K49 R5    ; R0["mUserLocator"] := R5
116 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
117 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5[0x1e5b5cfe]
118 [-]: LOADK     R7 K52       ; R7 := "AlphabetIndexPressed"
119 [-]: LOADK     R8 K53       ; R8 := "AlphabetIndexRollOver"
120 [-]: LOADK     R9 K54       ; R9 := "AlphabetIndexRollOut"
121 [-]: LOADNIL   R10 R12      ; R10 := R11 := R12 := nil
122 [-]: LOADK     R13 K54      ; R13 := "AlphabetIndexRollOut"
123 [-]: CALL      R5 9 1       ; R5(R6,R7,R8,R9,R10,R11,R12,R13)
124 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
125 [-]: SETTABLE  R5 K55 K27   ; R5["mIsExpanded"] := false
126 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
127 [-]: SETTABLE  R5 K56 K57   ; R5["mColumnSeparation"] := 15.000000
128 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
129 [-]: SETTABLE  R5 K58 K57   ; R5["mRowSeparation"] := 15.000000
130 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
131 [-]: GETGLOBAL R6 K12       ; R6 := 0xae91e43b
132 [-]: SELF      R6 R6 K60    ; R7 := R6; R6 := R6[0x91a24e4b]
133 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["mClipPath"]
134 [-]: LOADK     R9 K61       ; R9 := ".AlphabetIndex.Grid.Bg"
135 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
136 [-]: CONST     R9 12        ; R9 := 12.000000
137 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
138 [-]: ADD       R6 R6 K62    ; R6 := R6 + 1.000000
139 [-]: SETTABLE  R5 K59 R6    ; R5["mGridWidth"] := R6
140 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
141 [-]: CLOSURE   R6 10        ; R6 := closure(Function #51.1.11)
142 [-]: GETUPVAL  R0 U2        ; R0 := U2
143 [-]: MOVE      R0 R0        ; R0 := R0
144 [-]: SETTABLE  R5 K63 R6    ; R5["ToggleExpanded"] := R6
145 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
146 [-]: CLOSURE   R6 11        ; R6 := closure(Function #51.1.12)
147 [-]: SETTABLE  R5 K28 R6    ; R5["OnElementTransitionStarted"] := R6
148 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
149 [-]: CLOSURE   R6 12        ; R6 := closure(Function #51.1.13)
150 [-]: GETUPVAL  R0 U1        ; R0 := U1
151 [-]: SETTABLE  R5 K29 R6    ; R5["OnElementTransitionEnded"] := R6
152 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
153 [-]: CLOSURE   R6 13        ; R6 := closure(Function #51.1.14)
154 [-]: SETTABLE  R5 K32 R6    ; R5["mOnFocusedCallback"] := R6
155 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
156 [-]: CLOSURE   R6 14        ; R6 := closure(Function #51.1.15)
157 [-]: SETTABLE  R5 K33 R6    ; R5["mOnUnfocusedCallback"] := R6
158 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
159 [-]: CLOSURE   R6 15        ; R6 := closure(Function #51.1.16)
160 [-]: MOVE      R0 R0        ; R0 := R0
161 [-]: SETTABLE  R5 K34 R6    ; R5["mOnSelectedCallback"] := R6
162 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
163 [-]: CLOSURE   R6 16        ; R6 := closure(Function #51.1.17)
164 [-]: MOVE      R0 R0        ; R0 := R0
165 [-]: GETUPVAL  R0 U2        ; R0 := U2
166 [-]: SETTABLE  R5 K31 R6    ; R5["mElementDrawCallback"] := R6
167 [-]: GETGLOBAL R5 K12       ; R5 := 0xae91e43b
168 [-]: SELF      R5 R5 K64    ; R6 := R5; R5 := R5[0x19ad3f57]
169 [-]: GETTABLE  R7 R0 K13    ; R7 := R0["mClipPath"]
170 [-]: LOADK     R8 K65       ; R8 := "AlphabetIndex.Grid.Bg"
171 [-]: LOADK     R9 K66       ; R9 := "noMenuSelection"
172 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
173 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
174 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
175 [-]: SELF      R5 R5 K67    ; R6 := R5; R5 := R5[0xbad4316f]
176 [-]: NEWTABLE  R7 0 2       ; R7 := {}
177 [-]: SETTABLE  R7 K68 K69   ; R7["Letter"] := "#"
178 [-]: SETTABLE  R7 K70 K62   ; R7["index"] := 1.000000
179 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
180 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
181 [-]: GETTABLE  R5 R0 K49    ; R5 := R0["mUserLocator"]
182 [-]: SELF      R5 R5 K67    ; R6 := R5; R5 := R5[0xbad4316f]
183 [-]: NEWTABLE  R7 0 2       ; R7 := {}
184 [-]: SETTABLE  R7 K68 K71   ; R7["Letter"] := "@"
185 [-]: SETTABLE  R7 K70 K72   ; R7["index"] := 12.000000
186 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
187 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
188 [-]: CONST     R5 15        ; R5 := 15.000000
189 [-]: GETUPVAL  R6 U4        ; R6 := U4
190 [-]: LEN       R6 R6        ; R6 := # R6
191 [-]: CONST     R7 1         ; R7 := 1.000000
192 [-]: FORPREP   R5 202       ; R5 -= R7; PC := 202
193 [-]: GETTABLE  R9 R0 K49    ; R9 := R0["mUserLocator"]
194 [-]: SELF      R9 R9 K67    ; R10 := R9; R9 := R9[0xbad4316f]
195 [-]: NEWTABLE  R11 0 2      ; R11 := {}
196 [-]: GETUPVAL  R12 U4       ; R12 := U4
197 [-]: GETTABLE  R12 R12 R8   ; R12 := R12[R8]
198 [-]: SETTABLE  R11 K68 R12  ; R11["Letter"] := R12
199 [-]: SETTABLE  R11 K70 R8   ; R11["index"] := R8
200 [-]: OP_LOADBOOL R12 1 0      ; R12 := true
201 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
202 [-]: FORLOOP   R5 193       ; R5 += R7; if R5 <= R6 then begin PC := 193; R8 := R5 end
203 [-]: GETTABLE  R9 R0 K49    ; R9 := R0["mUserLocator"]
204 [-]: SELF      R9 R9 K73    ; R10 := R9; R9 := R9[0x71e9ac81]
205 [-]: CALL      R9 2 1       ; R9(R10)
206 [-]: GETGLOBAL R9 K12       ; R9 := 0xae91e43b
207 [-]: SELF      R9 R9 K74    ; R10 := R9; R9 := R9[0xc0a3774b]
208 [-]: GETTABLE  R11 R0 K13   ; R11 := R0["mClipPath"]
209 [-]: LOADK     R12 K75      ; R12 := "AlphabetIndex"
210 [-]: CONST     R13 11       ; R13 := 11.000000
211 [-]: OP_LOADBOOL R14 0 0      ; R14 := false
212 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
213 [-]: GETTABLE  R9 R4 K50    ; R82 := R9[0xda0c93a2]
214 [-]: GETGLOBAL R10 K12      ; R10 := 0xae91e43b
215 [-]: GETTABLE  R11 R0 K13   ; R11 := R0["mClipPath"]
216 [-]: LOADK     R12 K77      ; R12 := ".Panel.EmoteGrid.EmoteElement"
217 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
218 [-]: LOADNIL   R12 R12      ; R12 := nil
219 [-]: CONST     R13 5        ; R13 := 5.000000
220 [-]: CONST     R14 7        ; R14 := 7.000000
221 [-]: CALL      R9 6 2       ; R9 := R9(R10,R11,R12,R13,R14)
222 [-]: SETTABLE  R0 K76 R9    ; R0["mEmoteGrid"] := R9
223 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
224 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9[0x1e5b5cfe]
225 [-]: LOADK     R11 K78      ; R11 := "EmotePressed"
226 [-]: LOADK     R12 K79      ; R12 := "EmoteRollOver"
227 [-]: LOADK     R13 K80      ; R13 := "EmoteRollOut"
228 [-]: LOADNIL   R14 R16      ; R14 := R15 := R16 := nil
229 [-]: LOADK     R17 K80      ; R17 := "EmoteRollOut"
230 [-]: CALL      R9 9 1       ; R9(R10,R11,R12,R13,R14,R15,R16,R17)
231 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
232 [-]: GETTABLE  R10 R0 K76   ; R10 := R0["mEmoteGrid"]
233 [-]: GETTABLE  R10 R10 K81  ; R10 := R10["mInitialX"]
234 [-]: ADD       R10 R10 K82  ; R10 := R10 + 3.000000
235 [-]: SETTABLE  R9 K81 R10   ; R9["mInitialX"] := R10
236 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
237 [-]: SETTABLE  R9 K26 K27   ; R9["mIsVisible"] := false
238 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
239 [-]: SETTABLE  R9 K56 K83   ; R9["mColumnSeparation"] := 35.000000
240 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
241 [-]: SETTABLE  R9 K58 K84   ; R9["mRowSeparation"] := 33.000000
242 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
243 [-]: SETTABLE  R9 K39 K4    ; R9["mScrollAlwaysVisible"] := true
244 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
245 [-]: GETTABLE  R10 R0 K76   ; R10 := R0["mEmoteGrid"]
246 [-]: GETTABLE  R10 R10 K86  ; R10 := R10["RedrawScrollBar"]
247 [-]: SETTABLE  R9 K85 R10   ; R9["_RedrawScrollBar"] := R10
248 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
249 [-]: CLOSURE   R10 17       ; R10 := closure(Function #51.1.18)
250 [-]: MOVE      R0 R0        ; R0 := R0
251 [-]: GETUPVAL  R0 U2        ; R0 := U2
252 [-]: SETTABLE  R9 K86 R10   ; R9["RedrawScrollBar"] := R10
253 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
254 [-]: CLOSURE   R10 18       ; R10 := closure(Function #51.1.19)
255 [-]: SETTABLE  R9 K28 R10   ; R9["OnElementTransitionStarted"] := R10
256 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
257 [-]: CLOSURE   R10 19       ; R10 := closure(Function #51.1.20)
258 [-]: GETUPVAL  R0 U1        ; R0 := U1
259 [-]: SETTABLE  R9 K29 R10   ; R9["OnElementTransitionEnded"] := R10
260 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
261 [-]: CLOSURE   R10 20       ; R10 := closure(Function #51.1.21)
262 [-]: SETTABLE  R9 K32 R10   ; R9["mOnFocusedCallback"] := R10
263 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
264 [-]: CLOSURE   R10 21       ; R10 := closure(Function #51.1.22)
265 [-]: SETTABLE  R9 K33 R10   ; R9["mOnUnfocusedCallback"] := R10
266 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
267 [-]: CLOSURE   R10 22       ; R10 := closure(Function #51.1.23)
268 [-]: SETTABLE  R9 K34 R10   ; R9["mOnSelectedCallback"] := R10
269 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
270 [-]: CLOSURE   R10 23       ; R10 := closure(Function #51.1.24)
271 [-]: MOVE      R0 R0        ; R0 := R0
272 [-]: SETTABLE  R9 K31 R10   ; R9["mElementDrawCallback"] := R10
273 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
274 [-]: SELF      R9 R9 K37    ; R10 := R9; R9 := R9[0x3bc79f4f]
275 [-]: GETTABLE  R11 R0 K13   ; R11 := R0["mClipPath"]
276 [-]: LOADK     R12 K87      ; R12 := ".Panel.EmoteGrid.ScrollBar"
277 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
278 [-]: CONST     R12 27       ; R12 := 27.000000
279 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
280 [-]: GETGLOBAL R9 K40       ; R9 := 0x34291f5c
281 [-]: GETTABLE  R9 R9 K41    ; R82 := R9[0xe6b41adb]
282 [-]: CALL      R9 1 2       ; R9 := R9()
283 [-]: TEST      R9 0         ; if not R9 then PC := 296
284 [-]: JMP       296          ; PC := 296
285 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
286 [-]: SELF      R9 R9 K42    ; R10 := R9; R9 := R9[0xf4fed7fe]
287 [-]: CALL      R9 2 1       ; R9(R10)
288 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
289 [-]: SELF      R9 R9 K43    ; R10 := R9; R9 := R9[0x7220acb6]
290 [-]: CALL      R9 2 1       ; R9(R10)
291 [-]: GETTABLE  R9 R0 K76    ; R9 := R0["mEmoteGrid"]
292 [-]: SELF      R9 R9 K44    ; R10 := R9; R9 := R9[0x4c4f8717]
293 [-]: CONST     R11 1        ; R11 := 1.000000
294 [-]: OP_LOADBOOL R12 1 0      ; R12 := true
295 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
296 [-]: CONST     R9 1         ; R9 := 1.000000
297 [-]: GETUPVAL  R10 U5       ; R10 := U5
298 [-]: LEN       R10 R10      ; R10 := # R10
299 [-]: CONST     R11 1        ; R11 := 1.000000
300 [-]: FORPREP   R9 309       ; R9 -= R11; PC := 309
301 [-]: GETTABLE  R13 R0 K76   ; R13 := R0["mEmoteGrid"]
302 [-]: SELF      R13 R13 K67  ; R14 := R13; R13 := R13[0xbad4316f]
303 [-]: NEWTABLE  R15 0 1      ; R15 := {}
304 [-]: GETUPVAL  R16 U5       ; R16 := U5
305 [-]: GETTABLE  R16 R16 R12  ; R16 := R16[R12]
306 [-]: SETTABLE  R15 K88 R16  ; R15["mTag"] := R16
307 [-]: OP_LOADBOOL R16 1 0      ; R16 := true
308 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
309 [-]: FORLOOP   R9 301       ; R9 += R11; if R9 <= R10 then begin PC := 301; R12 := R9 end
310 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
311 [-]: SELF      R13 R13 K74  ; R14 := R13; R13 := R13[0xc0a3774b]
312 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
313 [-]: LOADK     R16 K89      ; R16 := "Panel.EmoteGrid"
314 [-]: CONST     R17 11       ; R17 := 11.000000
315 [-]: OP_LOADBOOL R18 0 0      ; R18 := false
316 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
317 [-]: SELF      R13 R0 K90   ; R14 := R0; R13 := R0[0xcbf89887]
318 [-]: MOVE      R15 R1       ; R15 := R1
319 [-]: MOVE      R16 R2       ; R16 := R2
320 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
321 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
322 [-]: SELF      R13 R13 K91  ; R14 := R13; R13 := R13[0xf64b7262]
323 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
324 [-]: LOADK     R16 K92      ; R16 := "Panel.Fill"
325 [-]: CONST     R17 10       ; R17 := 10.000000
326 [-]: CONST     R18 75       ; R18 := 75.000000
327 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
328 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
329 [-]: SELF      R13 R13 K91  ; R14 := R13; R13 := R13[0xf64b7262]
330 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
331 [-]: LOADK     R16 K92      ; R16 := "Panel.Fill"
332 [-]: CONST     R17 9        ; R17 := 9.000000
333 [-]: GETUPVAL  R18 U6       ; R18 := U6
334 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
335 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
336 [-]: SELF      R13 R13 K91  ; R14 := R13; R13 := R13[0xf64b7262]
337 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
338 [-]: LOADK     R16 K93      ; R16 := "Panel.EdgeTop"
339 [-]: CONST     R17 9        ; R17 := 9.000000
340 [-]: GETUPVAL  R18 U7       ; R18 := U7
341 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
342 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
343 [-]: SELF      R13 R13 K91  ; R14 := R13; R13 := R13[0xf64b7262]
344 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
345 [-]: LOADK     R16 K93      ; R16 := "Panel.EdgeTop"
346 [-]: CONST     R17 10       ; R17 := 10.000000
347 [-]: CONST     R18 25       ; R18 := 25.000000
348 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
349 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
350 [-]: SELF      R13 R13 K91  ; R14 := R13; R13 := R13[0xf64b7262]
351 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
352 [-]: LOADK     R16 K94      ; R16 := "Panel.EdgeRight"
353 [-]: CONST     R17 9        ; R17 := 9.000000
354 [-]: GETUPVAL  R18 U7       ; R18 := U7
355 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
356 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
357 [-]: SELF      R13 R13 K91  ; R14 := R13; R13 := R13[0xf64b7262]
358 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
359 [-]: LOADK     R16 K94      ; R16 := "Panel.EdgeRight"
360 [-]: CONST     R17 10       ; R17 := 10.000000
361 [-]: CONST     R18 25       ; R18 := 25.000000
362 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
363 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
364 [-]: SELF      R13 R13 K91  ; R14 := R13; R13 := R13[0xf64b7262]
365 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
366 [-]: LOADK     R16 K95      ; R16 := "Panel.EdgeBottom"
367 [-]: CONST     R17 9        ; R17 := 9.000000
368 [-]: GETUPVAL  R18 U7       ; R18 := U7
369 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
370 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
371 [-]: SELF      R13 R13 K91  ; R14 := R13; R13 := R13[0xf64b7262]
372 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
373 [-]: LOADK     R16 K95      ; R16 := "Panel.EdgeBottom"
374 [-]: CONST     R17 10       ; R17 := 10.000000
375 [-]: CONST     R18 25       ; R18 := 25.000000
376 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
377 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
378 [-]: SELF      R13 R13 K91  ; R14 := R13; R13 := R13[0xf64b7262]
379 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
380 [-]: LOADK     R16 K96      ; R16 := "Panel.LocatorSeparator"
381 [-]: CONST     R17 9        ; R17 := 9.000000
382 [-]: GETUPVAL  R18 U7       ; R18 := U7
383 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
384 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
385 [-]: SELF      R13 R13 K91  ; R14 := R13; R13 := R13[0xf64b7262]
386 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
387 [-]: LOADK     R16 K96      ; R16 := "Panel.LocatorSeparator"
388 [-]: CONST     R17 10       ; R17 := 10.000000
389 [-]: CONST     R18 40       ; R18 := 40.000000
390 [-]: CALL      R13 6 1      ; R13(R14,R15,R16,R17,R18)
391 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
392 [-]: SELF      R13 R13 K15  ; R14 := R13; R13 := R13[0x1e5b5cfe]
393 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
394 [-]: LOADK     R16 K97      ; R16 := ".Panel.LocatorBtn.Btn"
395 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
396 [-]: LOADK     R16 K98      ; R16 := "AlphabetExpanderFocused"
397 [-]: LOADK     R17 K99      ; R17 := "AlphabetExpanderUnfocused"
398 [-]: LOADK     R18 K100     ; R18 := "AlphabetExpanderPressed"
399 [-]: LOADNIL   R19 R19      ; R19 := nil
400 [-]: CALL      R13 7 1      ; R13(R14,R15,R16,R17,R18,R19)
401 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
402 [-]: SELF      R13 R13 K91  ; R14 := R13; R13 := R13[0xf64b7262]
403 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
404 [-]: LOADK     R16 K101     ; R16 := "Panel.LocatorBtn"
405 [-]: CONST     R17 10       ; R17 := 10.000000
406 [-]: GETUPVAL  R18 U2       ; R18 := U2
407 [-]: GETTABLE  R18 R18 K102 ; R82 := R18[0x06d055f9]
408 [-]: GETGLOBAL R19 K40      ; R19 := 0x34291f5c
409 [-]: GETTABLE  R19 R19 K103 ; R82 := R19[0x1467d5f4]
410 [-]: CALL      R19 1 2      ; R19 := R19()
411 [-]: CONST     R20 100      ; R20 := 100.000000
412 [-]: CONST     R21 50       ; R21 := 50.000000
413 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
414 [-]: CALL      R13 0 1      ; R13(R14,...)
415 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
416 [-]: SELF      R13 R13 K104 ; R14 := R13; R13 := R13[0x20b98db3]
417 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
418 [-]: LOADK     R16 K105     ; R16 := ".Panel.LocatorBtn.Callout.Tf.text"
419 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
420 [-]: LOADK     R16 K106     ; R16 := "<MENU_RTHUMB>"
421 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
422 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
423 [-]: SELF      R13 R13 K74  ; R14 := R13; R13 := R13[0xc0a3774b]
424 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
425 [-]: LOADK     R16 K107     ; R16 := "Panel.LocatorBtn.Callout"
426 [-]: CONST     R17 11       ; R17 := 11.000000
427 [-]: GETGLOBAL R18 K40      ; R18 := 0x34291f5c
428 [-]: GETTABLE  R18 R18 K103 ; R82 := R18[0x1467d5f4]
429 [-]: CALL      R18 1 0      ; R18,... := R18()
430 [-]: CALL      R13 0 1      ; R13(R14,...)
431 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
432 [-]: SELF      R13 R13 K104 ; R14 := R13; R13 := R13[0x20b98db3]
433 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
434 [-]: LOADK     R16 K108     ; R16 := ".Panel.LocatorBtn.Label.text"
435 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
436 [-]: LOADK     R16 K109     ; R16 := "/Lotus/Language/Menu/Chat_AlphabetGridBtn"
437 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
438 [-]: GETGLOBAL R13 K12      ; R13 := 0xae91e43b
439 [-]: SELF      R13 R13 K60  ; R14 := R13; R13 := R13[0x91a24e4b]
440 [-]: GETTABLE  R15 R0 K13   ; R15 := R0["mClipPath"]
441 [-]: LOADK     R16 K110     ; R16 := ".Panel.LocatorBtn.Label"
442 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
443 [-]: CONST     R16 33       ; R16 := 33.000000
444 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
445 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
446 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0xf64b7262]
447 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
448 [-]: LOADK     R17 K111     ; R17 := "Panel.LocatorBtn.Arrow"
449 [-]: CONST     R18 0        ; R18 := 0.000000
450 [-]: DIV       R19 R13 K112 ; R19 := R13 / 2.000000
451 [-]: ADD       R19 R19 K113 ; R19 := R19 + 5.000000
452 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
453 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
454 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0xf64b7262]
455 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
456 [-]: LOADK     R17 K114     ; R17 := "Panel.LocatorBtn.Btn"
457 [-]: CONST     R18 12       ; R18 := 12.000000
458 [-]: ADD       R19 R13 K115 ; R19 := R13 + 20.000000
459 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
460 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
461 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0xf64b7262]
462 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
463 [-]: LOADK     R17 K107     ; R17 := "Panel.LocatorBtn.Callout"
464 [-]: CONST     R18 0        ; R18 := 0.000000
465 [-]: DIV       R19 R13 K112 ; R19 := R13 / 2.000000
466 [-]: UNM       R19 R19      ; R19 := ^ R19
467 [-]: SUB       R19 R19 K116 ; R19 := R19 - 13.000000
468 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
469 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
470 [-]: SELF      R14 R14 K15  ; R15 := R14; R14 := R14[0x1e5b5cfe]
471 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
472 [-]: LOADK     R17 K61      ; R17 := ".AlphabetIndex.Grid.Bg"
473 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
474 [-]: LOADK     R17 K117     ; R17 := "AlphabetIndexBgFocused"
475 [-]: LOADNIL   R18 R20      ; R18 := R19 := R20 := nil
476 [-]: CALL      R14 7 1      ; R14(R15,R16,R17,R18,R19,R20)
477 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
478 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0xf64b7262]
479 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
480 [-]: LOADK     R17 K65      ; R17 := "AlphabetIndex.Grid.Bg"
481 [-]: CONST     R18 9        ; R18 := 9.000000
482 [-]: GETUPVAL  R19 U6       ; R19 := U6
483 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
484 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
485 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0xf64b7262]
486 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
487 [-]: LOADK     R17 K65      ; R17 := "AlphabetIndex.Grid.Bg"
488 [-]: CONST     R18 10       ; R18 := 10.000000
489 [-]: CONST     R19 75       ; R19 := 75.000000
490 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
491 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
492 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0xf64b7262]
493 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
494 [-]: LOADK     R17 K118     ; R17 := "AlphabetIndex.Grid.EdgeTop"
495 [-]: CONST     R18 9        ; R18 := 9.000000
496 [-]: GETUPVAL  R19 U7       ; R19 := U7
497 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
498 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
499 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0xf64b7262]
500 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
501 [-]: LOADK     R17 K118     ; R17 := "AlphabetIndex.Grid.EdgeTop"
502 [-]: CONST     R18 10       ; R18 := 10.000000
503 [-]: CONST     R19 25       ; R19 := 25.000000
504 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
505 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
506 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0xf64b7262]
507 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
508 [-]: LOADK     R17 K119     ; R17 := "AlphabetIndex.Grid.EdgeRight"
509 [-]: CONST     R18 9        ; R18 := 9.000000
510 [-]: GETUPVAL  R19 U7       ; R19 := U7
511 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
512 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
513 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0xf64b7262]
514 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
515 [-]: LOADK     R17 K119     ; R17 := "AlphabetIndex.Grid.EdgeRight"
516 [-]: CONST     R18 10       ; R18 := 10.000000
517 [-]: CONST     R19 25       ; R19 := 25.000000
518 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
519 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
520 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0xf64b7262]
521 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
522 [-]: LOADK     R17 K120     ; R17 := "AlphabetIndex.Grid.EdgeBottom"
523 [-]: CONST     R18 9        ; R18 := 9.000000
524 [-]: GETUPVAL  R19 U7       ; R19 := U7
525 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
526 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
527 [-]: SELF      R14 R14 K91  ; R15 := R14; R14 := R14[0xf64b7262]
528 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
529 [-]: LOADK     R17 K120     ; R17 := "AlphabetIndex.Grid.EdgeBottom"
530 [-]: CONST     R18 10       ; R18 := 10.000000
531 [-]: CONST     R19 25       ; R19 := 25.000000
532 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
533 [-]: GETGLOBAL R14 K40      ; R14 := 0x34291f5c
534 [-]: GETTABLE  R14 R14 K41  ; R82 := R14[0xe6b41adb]
535 [-]: CALL      R14 1 2      ; R14 := R14()
536 [-]: TEST      R14 0        ; if not R14 then PC := 608
537 [-]: JMP       608          ; PC := 608
538 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
539 [-]: SELF      R14 R14 K121 ; R15 := R14; R14 := R14[0x67bc869f]
540 [-]: LOADK     R16 K122     ; R16 := "Blacker"
541 [-]: CONST     R17 10       ; R17 := 10.000000
542 [-]: CONST     R18 80       ; R18 := 80.000000
543 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
544 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
545 [-]: SELF      R14 R14 K121 ; R15 := R14; R14 := R14[0x67bc869f]
546 [-]: LOADK     R16 K122     ; R16 := "Blacker"
547 [-]: CONST     R17 9        ; R17 := 9.000000
548 [-]: GETUPVAL  R18 U6       ; R18 := U6
549 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
550 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
551 [-]: SELF      R14 R14 K121 ; R15 := R14; R14 := R14[0x67bc869f]
552 [-]: LOADK     R16 K122     ; R16 := "Blacker"
553 [-]: CONST     R17 12       ; R17 := 12.000000
554 [-]: GETGLOBAL R18 K12      ; R18 := 0xae91e43b
555 [-]: SELF      R18 R18 K123 ; R19 := R18; R18 := R18[0x6b837788]
556 [-]: CALL      R18 2 2      ; R18 := R18(R19)
557 [-]: GETGLOBAL R19 K12      ; R19 := 0xae91e43b
558 [-]: SELF      R19 R19 K60  ; R20 := R19; R19 := R19[0x91a24e4b]
559 [-]: LOADK     R21 K124     ; R21 := "_root"
560 [-]: CONST     R22 5        ; R22 := 5.000000
561 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
562 [-]: MUL       R18 R18 R19  ; R18 := R18 * R19
563 [-]: DIV       R18 R18 K125 ; R18 := R18 / 100.000000
564 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
565 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
566 [-]: SELF      R14 R14 K121 ; R15 := R14; R14 := R14[0x67bc869f]
567 [-]: LOADK     R16 K122     ; R16 := "Blacker"
568 [-]: CONST     R17 13       ; R17 := 13.000000
569 [-]: GETGLOBAL R18 K12      ; R18 := 0xae91e43b
570 [-]: SELF      R18 R18 K126 ; R19 := R18; R18 := R18[0xaf9fda9f]
571 [-]: CALL      R18 2 2      ; R18 := R18(R19)
572 [-]: GETGLOBAL R19 K12      ; R19 := 0xae91e43b
573 [-]: SELF      R19 R19 K60  ; R20 := R19; R19 := R19[0x91a24e4b]
574 [-]: LOADK     R21 K124     ; R21 := "_root"
575 [-]: CONST     R22 6        ; R22 := 6.000000
576 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
577 [-]: MUL       R18 R18 R19  ; R18 := R18 * R19
578 [-]: DIV       R18 R18 K125 ; R18 := R18 / 100.000000
579 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
580 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
581 [-]: SELF      R14 R14 K121 ; R15 := R14; R14 := R14[0x67bc869f]
582 [-]: LOADK     R16 K122     ; R16 := "Blacker"
583 [-]: CONST     R17 0        ; R17 := 0.000000
584 [-]: CONST     R18 0        ; R18 := 0.000000
585 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
586 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
587 [-]: SELF      R14 R14 K121 ; R15 := R14; R14 := R14[0x67bc869f]
588 [-]: LOADK     R16 K122     ; R16 := "Blacker"
589 [-]: CONST     R17 1        ; R17 := 1.000000
590 [-]: CONST     R18 0        ; R18 := 0.000000
591 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
592 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
593 [-]: SELF      R14 R14 K121 ; R15 := R14; R14 := R14[0x67bc869f]
594 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
595 [-]: LOADK     R17 K127     ; R17 := ".AlphabetIndex"
596 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
597 [-]: CONST     R17 5        ; R17 := 5.000000
598 [-]: CONST     R18 170      ; R18 := 170.000000
599 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
600 [-]: GETGLOBAL R14 K12      ; R14 := 0xae91e43b
601 [-]: SELF      R14 R14 K121 ; R15 := R14; R14 := R14[0x67bc869f]
602 [-]: GETTABLE  R16 R0 K13   ; R16 := R0["mClipPath"]
603 [-]: LOADK     R17 K127     ; R17 := ".AlphabetIndex"
604 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
605 [-]: CONST     R17 6        ; R17 := 6.000000
606 [-]: CONST     R18 170      ; R18 := 170.000000
607 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
608 [-]: RETURN    R0 1         ; return 


; Function #51.1.1:
;
; Name:            
; Defined at line: 1025
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: LOADK     R3 K1        ; R3 := 13421772.000000
  5 [-]: TEST      R2 0         ; if not R2 then PC := 10
  6 [-]: JMP       10           ; PC := 10
  7 [-]: GETGLOBAL R4 K2        ; R4 := 0x0032441c
  8 [-]: GETTABLE  R3 R4 K3     ; R3 := R4["UIColor_Yellow"]
  9 [-]: JMP       22           ; PC := 22
 10 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 11 [-]: GETGLOBAL R5 K5        ; R5 := mGameData
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETGLOBAL R4 K5        ; R4 := mGameData
 16 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x273a2275]
 17 [-]: GETTABLE  R6 R1 K7     ; R6 := R1["User"]
 18 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 19 [-]: TEST      R4 0         ; if not R4 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: LOADK     R3 K8        ; R3 := 6710886.000000
 22 [-]: GETGLOBAL R4 K9        ; R4 := 0xae91e43b
 23 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xf64b7262]
 24 [-]: GETTABLE  R6 R1 K11    ; R6 := R1["mClipName"]
 25 [-]: LOADK     R7 K12       ; R7 := "Name"
 26 [-]: CONST     R8 36        ; R8 := 36.000000
 27 [-]: MOVE      R9 R3        ; R9 := R3
 28 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 29 [-]: RETURN    R0 1         ; return 


; Function #51.1.2:
;
; Name:            
; Defined at line: 1043
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xaade900e]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
  4 [-]: CONST     R5 59        ; R5 := 59.000000
  5 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mDrawnElements"]
  8 [-]: ADD       R2 R2 K4     ; R2 := R2 + 1.000000
  9 [-]: SETTABLE  R0 K3 R2     ; R0["mDrawnElements"] := R2
 10 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mDrawnElements"]
 11 [-]: SETTABLE  R1 K5 R2     ; R1["mDrawnIndex"] := R2
 12 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 13 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xaade900e]
 14 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
 15 [-]: CONST     R5 59        ; R5 := 59.000000
 16 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: RETURN    R0 1         ; return 


; Function #51.1.3:
;
; Name:            
; Defined at line: 1051
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R1 0         ; if not R1 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mClipName"]
  4 [-]: TEST      R2 0         ; if not R2 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xbd2e96ea]
  8 [-]: LOADK     R4 K2        ; R4 := 0.100000
  9 [-]: CLOSURE   R5 0         ; R5 := closure(Function #51.1.3.1)
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 12 [-]: LOADNIL   R7 R7        ; R7 := nil
 13 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 14 [-]: RETURN    R0 1         ; return 


; Function #51.1.3.1:
;
; Name:            
; Defined at line: 1054
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mClipName"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xaade900e]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mClipName"]
 12 [-]: CONST     R3 59        ; R3 := 59.000000
 13 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 14 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #51.1.4:
;
; Name:            
; Defined at line: 1062
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mParent"]
  3 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mVisualMode"]
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["mParent"]
  6 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["VISUAL_MODE_GAMEPLAY_SIMPLE"]
  7 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: OP_LOADBOOL R3 0 1       ; R3 := false; PC := 10
 10 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 11 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mIsVisible"]
 12 [-]: TEST      R4 0         ; if not R4 then PC := 28
 13 [-]: JMP       28           ; PC := 28
 14 [-]: GETUPVAL  R4 U0        ; R4 := U0
 15 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mUserLocator"]
 16 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mIsExpanded"]
 17 [-]: TEST      R4 1         ; if R4 then PC := 26
 18 [-]: JMP       26           ; PC := 26
 19 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 20 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x5b0290d2]
 21 [-]: LOADK     R6 K8        ; R6 := "ContextMenu"
 22 [-]: CONST     R7 11        ; R7 := 11.000000
 23 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 24 [-]: NOT       R4 R4        ; R4 := not R4
 25 [-]: JMP       28           ; PC := 28
 26 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 27
 27 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 28 [-]: GETGLOBAL R5 K6        ; R5 := 0xae91e43b
 29 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5[0xc0a3774b]
 30 [-]: GETTABLE  R7 R1 K10    ; R7 := R1["mClipName"]
 31 [-]: LOADK     R8 K11       ; R8 := "Callout"
 32 [-]: CONST     R9 11        ; R9 := 11.000000
 33 [-]: GETGLOBAL R10 K12      ; R10 := 0x34291f5c
 34 [-]: GETTABLE  R10 R10 K13  ; R82 := R10[0x1467d5f4]
 35 [-]: CALL      R10 1 2      ; R10 := R10()
 36 [-]: TEST      R10 0        ; if not R10 then PC := 51
 37 [-]: JMP       51           ; PC := 51
 38 [-]: TESTSET   R10 R2 0     ; if not R2 then PC := 51 else R10 := R2
 39 [-]: JMP       51           ; PC := 51
 40 [-]: TESTSET   R10 R4 0     ; if not R4 then PC := 51 else R10 := R4
 41 [-]: JMP       51           ; PC := 51
 42 [-]: TESTSET   R10 R3 0     ; if not R3 then PC := 51 else R10 := R3
 43 [-]: JMP       51           ; PC := 51
 44 [-]: GETTABLE  R10 R1 K14   ; R10 := R1["User"]
 45 [-]: GETGLOBAL R11 K15      ; R11 := mWindow
 46 [-]: GETTABLE  R11 R11 K16  ; R11 := R11["mUser"]
 47 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: OP_LOADBOOL R10 0 1      ; R10 := false; PC := 50
 50 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
 51 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 52 [-]: SELF      R5 R0 K17    ; R6 := R0; R5 := R0[0xed33b98d]
 53 [-]: MOVE      R7 R1        ; R7 := R1
 54 [-]: MOVE      R8 R2        ; R8 := R2
 55 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 56 [-]: RETURN    R0 1         ; return 


; Function #51.1.5:
;
; Name:            
; Defined at line: 1070
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R82 := R1[0xc340ce91]
  9 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 10 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 11 [-]: LOADK     R4 K4        ; R4 := ".Name"
 12 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 13 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["User"]
 14 [-]: LOADK     R5 K6        ; R5 := "..."
 15 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mParent"]
 18 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mFontName"]
 19 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 30
 20 [-]: JMP       30           ; PC := 30
 21 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 22 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xe261aa96]
 23 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
 24 [-]: LOADK     R4 K10       ; R4 := "Name"
 25 [-]: CONST     R5 41        ; R5 := 41.000000
 26 [-]: GETUPVAL  R6 U1        ; R6 := U1
 27 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["mParent"]
 28 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mFontName"]
 29 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 30 [-]: GETUPVAL  R1 U1        ; R1 := U1
 31 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["mListControl"]
 32 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0xed1ab921]
 33 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 34 [-]: GETUPVAL  R2 U1        ; R2 := U1
 35 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mListControl"]
 36 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x6f63358a]
 37 [-]: MOVE      R4 R0        ; R4 := R0
 38 [-]: GETGLOBAL R5 K14       ; R5 := 0x7b998233
 39 [-]: MOVE      R6 R1        ; R6 := R1
 40 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 41 [-]: TEST      R5 1         ; if R5 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 46
 44 [-]: JMP       46           ; PC := 46
 45 [-]: OP_LOADBOOL R5 0 1       ; R5 := false; PC := 46
 46 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 47 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 48 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 49 [-]: SELF      R2 R2 K15    ; R3 := R2; R2 := R2[0x20b98db3]
 50 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 51 [-]: LOADK     R5 K16       ; R5 := ".Callout.Tf.text"
 52 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 53 [-]: LOADK     R5 K17       ; R5 := "<MENU_SELECT>"
 54 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 55 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 56 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0xc0a3774b]
 57 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 58 [-]: LOADK     R5 K19       ; R5 := "Bg"
 59 [-]: CONST     R6 11        ; R6 := 11.000000
 60 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["mDrawnIndex"]
 61 [-]: MOD       R7 R7 K21    ; R7 := R7 % 2.000000
 62 [-]: EQ        0 R7 K22     ; if R7 ~= 0.000000 then PC := 65
 63 [-]: JMP       65           ; PC := 65
 64 [-]: OP_LOADBOOL R7 0 1       ; R7 := false; PC := 65
 65 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 66 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 67 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 68 [-]: SELF      R2 R2 K23    ; R3 := R2; R2 := R2[0xf64b7262]
 69 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 70 [-]: LOADK     R5 K19       ; R5 := "Bg"
 71 [-]: CONST     R6 10        ; R6 := 10.000000
 72 [-]: CONST     R7 20        ; R7 := 20.000000
 73 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 74 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 75 [-]: SELF      R2 R2 K23    ; R3 := R2; R2 := R2[0xf64b7262]
 76 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mClipName"]
 77 [-]: LOADK     R5 K19       ; R5 := "Bg"
 78 [-]: CONST     R6 9         ; R6 := 9.000000
 79 [-]: GETUPVAL  R7 U2        ; R7 := U2
 80 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 81 [-]: RETURN    R0 1         ; return 


; Function #51.1.6:
;
; Name:            
; Defined at line: 1089
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mListControl"]
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x6f63358a]
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 12 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 13 [-]: RETURN    R0 1         ; return 


; Function #51.1.7:
;
; Name:            
; Defined at line: 1098
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K2        ; R1 := _T
  8 [-]: SETTABLE  R1 K3 K0     ; R1["gToolTip"] := nil
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mListControl"]
 11 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x6f63358a]
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
 14 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #51.1.8:
;
; Name:            
; Defined at line: 1106
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 6
  2 [-]: JMP       6            ; PC := 6
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["AccountId"]
  4 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: RETURN    R0 1         ; return 


; Function #51.1.9:
;
; Name:            
; Defined at line: 1113
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: SETTABLE  R0 K0 K1     ; R0["mDrawnElements"] := 0.000000
  2 [-]: SELF      R4 R0 K2     ; R5 := R0; R4 := R0[0xa85f5dee]
  3 [-]: MOVE      R6 R1        ; R6 := R1
  4 [-]: MOVE      R7 R2        ; R7 := R2
  5 [-]: MOVE      R8 R3        ; R8 := R3
  6 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
  7 [-]: TEST      R2 1         ; if R2 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: SETTABLE  R0 K0 K1     ; R0["mDrawnElements"] := 0.000000
 10 [-]: SELF      R4 R0 K3     ; R5 := R0; R4 := R0[0x741d078c]
 11 [-]: CLOSURE   R6 0         ; R6 := closure(Function #51.1.9.1)
 12 [-]: MOVE      R0 R0        ; R0 := R0
 13 [-]: CALL      R4 3 1       ; R4(R5,R6)
 14 [-]: RETURN    R0 1         ; return 


; Function #51.1.9.1:
;
; Name:            
; Defined at line: 1121
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mDrawnElements"]
  4 [-]: ADD       R2 R2 K1     ; R2 := R2 + 1.000000
  5 [-]: SETTABLE  R1 K0 R2     ; R1["mDrawnElements"] := R2
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mDrawnElements"]
  8 [-]: SETTABLE  R0 K2 R1     ; R0["mDrawnIndex"] := R1
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 10 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xc0a3774b]
 11 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mClipName"]
 12 [-]: LOADK     R4 K6        ; R4 := "Btn"
 13 [-]: CONST     R5 59        ; R5 := 59.000000
 14 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 15 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 16 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xc0a3774b]
 18 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mClipName"]
 19 [-]: LOADK     R4 K7        ; R4 := "Bg"
 20 [-]: CONST     R5 11        ; R5 := 11.000000
 21 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mDrawnIndex"]
 22 [-]: MOD       R6 R6 K8     ; R6 := R6 % 2.000000
 23 [-]: EQ        0 R6 K9      ; if R6 ~= 0.000000 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: OP_LOADBOOL R6 0 1       ; R6 := false; PC := 26
 26 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 27 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 28 [-]: RETURN    R0 1         ; return 


; Function #51.1.10:
;
; Name:            
; Defined at line: 1139
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x5fbddc1a]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETUPVAL  R1 U0        ; R1 := U0
  5 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mVisibleElements"]
  6 [-]: SUB       R0 R0 R1     ; R0 := R0 - R1
  7 [-]: GETGLOBAL R1 K2        ; R1 := 0x42dcc9f5
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0x74a11ec6]
 10 [-]: GETUPVAL  R3 U2        ; R3 := U2
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mListControl"]
 12 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScrollBar"]
 13 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mCurrentScroll"]
 14 [-]: MUL       R3 R0 R3     ; R3 := R0 * R3
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: CONST     R3 0         ; R3 := 0.000000
 17 [-]: MOVE      R4 R0        ; R4 := R0
 18 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 19 [-]: DIV       R2 R1 R0     ; R2 := R1 / R0
 20 [-]: GETUPVAL  R3 U2        ; R3 := U2
 21 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mListControl"]
 22 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScrollBar"]
 23 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mCurrentScroll"]
 24 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mListControl"]
 28 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mScrollBar"]
 29 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x44aa79ac]
 30 [-]: MOVE      R5 R2        ; R5 := R2
 31 [-]: CALL      R3 3 1       ; R3(R4,R5)
 32 [-]: RETURN    R0 1         ; return 


; Function #51.1.11:
;
; Name:            
; Defined at line: 1157
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mIsExpanded"]
  2 [-]: NOT       R1 R1        ; R1 := not R1
  3 [-]: SETTABLE  R0 K0 R1     ; R0["mIsExpanded"] := R1
  4 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  5 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x9307aa51]
  6 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
  7 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mWindow"]
  8 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["x"]
  9 [-]: GETGLOBAL R4 K1        ; R4 := mWindow
 10 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mWindow"]
 11 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["y"]
 12 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 13 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 14 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x67bc869f]
 15 [-]: LOADK     R3 K7        ; R3 := "Window.UserPanel.Panel.LocatorBtn.Arrow"
 16 [-]: CONST     R4 14        ; R4 := 14.000000
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K8     ; R82 := R5[0x06d055f9]
 19 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mIsExpanded"]
 20 [-]: CONST     R7 180       ; R7 := 180.000000
 21 [-]: CONST     R8 0         ; R8 := 0.000000
 22 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 23 [-]: CALL      R1 0 1       ; R1(R2,...)
 24 [-]: GETGLOBAL R1 K9        ; R1 := 0x7b998233
 25 [-]: GETGLOBAL R2 K10       ; R2 := mProfileSettings
 26 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 27 [-]: TEST      R1 1         ; if R1 then PC := 33
 28 [-]: JMP       33           ; PC := 33
 29 [-]: GETGLOBAL R1 K10       ; R1 := mProfileSettings
 30 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0x63c390e6]
 31 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mIsExpanded"]
 32 [-]: CALL      R1 3 1       ; R1(R2,R3)
 33 [-]: GETUPVAL  R1 U1        ; R1 := U1
 34 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0x3867cef1]
 35 [-]: CALL      R1 2 1       ; R1(R2)
 36 [-]: RETURN    R0 1         ; return 


; Function #51.1.12:
;
; Name:            
; Defined at line: 1171
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xaade900e]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
  4 [-]: CONST     R5 59        ; R5 := 59.000000
  5 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: RETURN    R0 1         ; return 


; Function #51.1.13:
;
; Name:            
; Defined at line: 1175
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R1 0         ; if not R1 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mClipName"]
  4 [-]: TEST      R2 0         ; if not R2 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xbd2e96ea]
  8 [-]: LOADK     R4 K2        ; R4 := 0.100000
  9 [-]: CLOSURE   R5 0         ; R5 := closure(Function #51.1.13.1)
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 12 [-]: LOADNIL   R7 R7        ; R7 := nil
 13 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 14 [-]: RETURN    R0 1         ; return 


; Function #51.1.13.1:
;
; Name:            
; Defined at line: 1178
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mClipName"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xaade900e]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mClipName"]
 12 [-]: CONST     R3 59        ; R3 := 59.000000
 13 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 14 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #51.1.14:
;
; Name:            
; Defined at line: 1186
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  6 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf64b7262]
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  8 [-]: LOADK     R4 K4        ; R4 := "Letter"
  9 [-]: CONST     R5 36        ; R5 := 36.000000
 10 [-]: GETGLOBAL R6 K5        ; R6 := 0x0032441c
 11 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["UIColor_Yellow"]
 12 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 13 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf64b7262]
 15 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 16 [-]: LOADK     R4 K4        ; R4 := "Letter"
 17 [-]: CONST     R5 10        ; R5 := 10.000000
 18 [-]: CONST     R6 100       ; R6 := 100.000000
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: RETURN    R0 1         ; return 


; Function #51.1.15:
;
; Name:            
; Defined at line: 1195
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  6 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf64b7262]
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  8 [-]: LOADK     R4 K4        ; R4 := "Letter"
  9 [-]: CONST     R5 36        ; R5 := 36.000000
 10 [-]: GETGLOBAL R6 K5        ; R6 := 0x0032441c
 11 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["UIColor_White"]
 12 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 13 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xf64b7262]
 15 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 16 [-]: LOADK     R4 K4        ; R4 := "Letter"
 17 [-]: CONST     R5 10        ; R5 := 10.000000
 18 [-]: CONST     R6 50        ; R6 := 50.000000
 19 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 20 [-]: RETURN    R0 1         ; return 


; Function #51.1.16:
;
; Name:            
; Defined at line: 1204
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mListControl"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 0         ; if not R1 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x8b75da5a]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 29
 15 [-]: JMP       29           ; PC := 29
 16 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 17 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mAlphabetIndex"]
 18 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["index"]
 19 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x1e63ac7a]
 25 [-]: GETTABLE  R4 R1 K4     ; R4 := R1["mAlphabetIndex"]
 26 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["index"]
 27 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 28 [-]: CALL      R2 3 1       ; R2(R3,R4)
 29 [-]: RETURN    R0 1         ; return 


; Function #51.1.17:
;
; Name:            
; Defined at line: 1215
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserLocator"]
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xed1ab921]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETTABLE  R2 R1 K5     ; R2 := R1["mId"]
 15 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mId"]
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 19
 19 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 20 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 21 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xe261aa96]
 22 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 23 [-]: LOADK     R6 K8        ; R6 := "Letter"
 24 [-]: CONST     R7 29        ; R7 := 29.000000
 25 [-]: GETTABLE  R8 R0 K8     ; R8 := R0["Letter"]
 26 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 27 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 28 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0xf64b7262]
 29 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 30 [-]: LOADK     R6 K8        ; R6 := "Letter"
 31 [-]: CONST     R7 36        ; R7 := 36.000000
 32 [-]: GETUPVAL  R8 U1        ; R8 := U1
 33 [-]: GETTABLE  R8 R8 K10    ; R82 := R8[0x06d055f9]
 34 [-]: MOVE      R9 R2        ; R9 := R2
 35 [-]: GETGLOBAL R10 K11      ; R10 := 0x0032441c
 36 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["UIColor_Yellow"]
 37 [-]: GETGLOBAL R11 K11      ; R11 := 0x0032441c
 38 [-]: GETTABLE  R11 R11 K13  ; R11 := R11["UIColor_White"]
 39 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 40 [-]: CALL      R3 0 1       ; R3(R4,...)
 41 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 42 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0xf64b7262]
 43 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 44 [-]: LOADK     R6 K8        ; R6 := "Letter"
 45 [-]: CONST     R7 10        ; R7 := 10.000000
 46 [-]: GETUPVAL  R8 U1        ; R8 := U1
 47 [-]: GETTABLE  R8 R8 K10    ; R82 := R8[0x06d055f9]
 48 [-]: MOVE      R9 R2        ; R9 := R2
 49 [-]: CONST     R10 100      ; R10 := 100.000000
 50 [-]: CONST     R11 50       ; R11 := 50.000000
 51 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 52 [-]: CALL      R3 0 1       ; R3(R4,...)
 53 [-]: RETURN    R0 1         ; return 


; Function #51.1.18:
;
; Name:            
; Defined at line: 1249
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xffd7a6fa]
  2 [-]: CALL      R1 2 1       ; R1(R2)
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  4 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x5b0290d2]
  5 [-]: GETUPVAL  R3 U0        ; R3 := U0
  6 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mClipPath"]
  7 [-]: LOADK     R4 K4        ; R4 := ".Panel.EmoteGrid.ScrollBar.Scrub"
  8 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  9 [-]: CONST     R4 11        ; R4 := 11.000000
 10 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 11 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 12 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mClipPath"]
 15 [-]: LOADK     R5 K6        ; R5 := "Panel.EmoteGrid.ScrollBar"
 16 [-]: CONST     R6 10        ; R6 := 10.000000
 17 [-]: GETUPVAL  R7 U1        ; R7 := U1
 18 [-]: GETTABLE  R7 R7 K7     ; R82 := R7[0x06d055f9]
 19 [-]: MOVE      R8 R1        ; R8 := R1
 20 [-]: CONST     R9 100       ; R9 := 100.000000
 21 [-]: CONST     R10 50       ; R10 := 50.000000
 22 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 23 [-]: CALL      R2 0 1       ; R2(R3,...)
 24 [-]: RETURN    R0 1         ; return 


; Function #51.1.19:
;
; Name:            
; Defined at line: 1256
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xaade900e]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
  4 [-]: CONST     R5 59        ; R5 := 59.000000
  5 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: RETURN    R0 1         ; return 


; Function #51.1.20:
;
; Name:            
; Defined at line: 1260
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R1 0         ; if not R1 then PC := 14
  2 [-]: JMP       14           ; PC := 14
  3 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["mClipName"]
  4 [-]: TEST      R2 0         ; if not R2 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R2 U0        ; R2 := U0
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xbd2e96ea]
  8 [-]: LOADK     R4 K2        ; R4 := 0.100000
  9 [-]: CLOSURE   R5 0         ; R5 := closure(Function #51.1.20.1)
 10 [-]: MOVE      R0 R1        ; R0 := R1
 11 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 12 [-]: LOADNIL   R7 R7        ; R7 := nil
 13 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 14 [-]: RETURN    R0 1         ; return 


; Function #51.1.20.1:
;
; Name:            
; Defined at line: 1263
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: TEST      R0 0         ; if not R0 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mClipName"]
  6 [-]: TEST      R0 0         ; if not R0 then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
  9 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xaade900e]
 10 [-]: GETUPVAL  R2 U0        ; R2 := U0
 11 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mClipName"]
 12 [-]: CONST     R3 59        ; R3 := 59.000000
 13 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 14 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #51.1.21:
;
; Name:            
; Defined at line: 1271
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mVisualMode"]
  7 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VISUAL_MODE_MENU_FULL"]
  9 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 22
 10 [-]: JMP       22           ; PC := 22
 11 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 12 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mVisualMode"]
 13 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 14 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
 15 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 25
 16 [-]: JMP       25           ; PC := 25
 17 [-]: GETGLOBAL R1 K6        ; R1 := 0x34291f5c
 18 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0xe6b41adb]
 19 [-]: CALL      R1 1 2       ; R1 := R1()
 20 [-]: TEST      R1 1         ; if R1 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETGLOBAL R1 K8        ; R1 := _T
 23 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mTag"]
 24 [-]: SETTABLE  R1 K9 R2     ; R1["gToolTip"] := R2
 25 [-]: GETGLOBAL R1 K11       ; R1 := 0xae91e43b
 26 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0xc0a3774b]
 27 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 28 [-]: LOADK     R4 K13       ; R4 := "Bg"
 29 [-]: CONST     R5 11        ; R5 := 11.000000
 30 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 31 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 32 [-]: RETURN    R0 1         ; return 


; Function #51.1.22:
;
; Name:            
; Defined at line: 1283
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := _T
  6 [-]: SETTABLE  R1 K3 K1     ; R1["gToolTip"] := nil
  7 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
  8 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xc0a3774b]
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 10 [-]: LOADK     R4 K6        ; R4 := "Bg"
 11 [-]: CONST     R5 11        ; R5 := 11.000000
 12 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 13 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 14 [-]: RETURN    R0 1         ; return 


; Function #51.1.23:
;
; Name:            
; Defined at line: 1292
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x91a24e4b]
  3 [-]: LOADK     R3 K2        ; R3 := "Window.SendMessageBar.MessageBox"
  4 [-]: CONST     R4 71        ; R4 := 71.000000
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x54a95d6f]
  8 [-]: LOADK     R4 K2        ; R4 := "Window.SendMessageBar.MessageBox"
  9 [-]: CONST     R5 29        ; R5 := 29.000000
 10 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 11 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 12 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x5f56eeab]
 13 [-]: LOADK     R5 K2        ; R5 := "Window.SendMessageBar.MessageBox"
 14 [-]: CONST     R6 29        ; R6 := 29.000000
 15 [-]: GETGLOBAL R7 K5        ; R7 := 0x5979a2d8
 16 [-]: MOVE      R8 R2        ; R8 := R2
 17 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["mTag"]
 18 [-]: MOVE      R10 R1       ; R10 := R1
 19 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 20 [-]: CALL      R3 0 1       ; R3(R4,...)
 21 [-]: GETGLOBAL R3 K7        ; R3 := 0x34291f5c
 22 [-]: GETTABLE  R3 R3 K8     ; R82 := R3[0x1467d5f4]
 23 [-]: CALL      R3 1 2       ; R3 := R3()
 24 [-]: TEST      R3 1         ; if R3 then PC := 35
 25 [-]: JMP       35           ; PC := 35
 26 [-]: GETGLOBAL R3 K7        ; R3 := 0x34291f5c
 27 [-]: GETTABLE  R3 R3 K9     ; R82 := R3[0xe6b41adb]
 28 [-]: CALL      R3 1 2       ; R3 := R3()
 29 [-]: TEST      R3 1         ; if R3 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETGLOBAL R3 K10       ; R3 := mWindow
 32 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mInputPanel"]
 33 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x8a543a3f]
 34 [-]: CALL      R3 2 1       ; R3(R4)
 35 [-]: RETURN    R0 1         ; return 


; Function #51.1.24:
;
; Name:            
; Defined at line: 1304
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mEmoteGrid"]
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xed1ab921]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 18
 13 [-]: JMP       18           ; PC := 18
 14 [-]: GETTABLE  R2 R1 K5     ; R2 := R1["Id"]
 15 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["Id"]
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 19
 19 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 20 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 21 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xdca61cfa]
 22 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mTag"]
 23 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 24 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 25 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 26 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0xe261aa96]
 27 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 28 [-]: LOADK     R7 K10       ; R7 := "Emoji"
 29 [-]: CONST     R8 29        ; R8 := 29.000000
 30 [-]: MOVE      R9 R3        ; R9 := R3
 31 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 32 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 33 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
 34 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 35 [-]: LOADK     R7 K12       ; R7 := "Bg"
 36 [-]: CONST     R8 10        ; R8 := 10.000000
 37 [-]: CONST     R9 25        ; R9 := 25.000000
 38 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 39 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 40 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4[0xc0a3774b]
 41 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 42 [-]: LOADK     R7 K12       ; R7 := "Bg"
 43 [-]: CONST     R8 11        ; R8 := 11.000000
 44 [-]: MOVE      R9 R2        ; R9 := R2
 45 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 46 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 47 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4[0xc0a3774b]
 48 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 49 [-]: LOADK     R7 K14       ; R7 := "Tag"
 50 [-]: CONST     R8 11        ; R8 := 11.000000
 51 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 52 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 53 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 54 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0x5f56eeab]
 55 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 56 [-]: LOADK     R7 K16       ; R7 := ".Tag"
 57 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 58 [-]: CONST     R7 29        ; R7 := 29.000000
 59 [-]: GETTABLE  R8 R0 K8     ; R8 := R0["mTag"]
 60 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 61 [-]: GETUPVAL  R4 U0        ; R4 := U0
 62 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["mParent"]
 63 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["mFontName"]
 64 [-]: EQ        1 R4 K1      ; if R4 == nil then PC := 75
 65 [-]: JMP       75           ; PC := 75
 66 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 67 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0xe261aa96]
 68 [-]: GETTABLE  R6 R0 K0     ; R6 := R0["mClipName"]
 69 [-]: LOADK     R7 K14       ; R7 := "Tag"
 70 [-]: CONST     R8 41        ; R8 := 41.000000
 71 [-]: GETUPVAL  R9 U0        ; R9 := U0
 72 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["mParent"]
 73 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["mFontName"]
 74 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 75 [-]: RETURN    R0 1         ; return 


; Function #51.2:
;
; Name:            
; Defined at line: 1387
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mListControl"]
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x1e63ac7a]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #51.3:
;
; Name:            
; Defined at line: 1391
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mListControl"]
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xed1ab921]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mListControl"]
 10 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0xb15e6aca]
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 1       ; R2(R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #51.4:
;
; Name:            
; Defined at line: 1399
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mListControl"]
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x5fbddc1a]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: LT        0 K2 R1      ; if 0.000000 >= R1 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mListControl"]
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x4c4f8717]
  8 [-]: CONST     R3 0         ; R3 := 0.000000
  9 [-]: CALL      R1 3 1       ; R1(R2,R3)
 10 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mListControl"]
 11 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x7c09c373]
 12 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 13 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 14 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 15 [-]: RETURN    R0 1         ; return 


; Function #51.5:
;
; Name:            
; Defined at line: 1407
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  8 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mScrollBar"]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mListControl"]
 13 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mScrollBar"]
 14 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xfaa69527]
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: CALL      R2 3 1       ; R2(R3,R4)
 17 [-]: GETGLOBAL R2 K4        ; R2 := 0x34291f5c
 18 [-]: GETTABLE  R2 R2 K5     ; R82 := R2[0x056bfe8b]
 19 [-]: CALL      R2 1 2       ; R2 := R2()
 20 [-]: TEST      R2 1         ; if R2 then PC := 49
 21 [-]: JMP       49           ; PC := 49
 22 [-]: GETGLOBAL R2 K4        ; R2 := 0x34291f5c
 23 [-]: GETTABLE  R2 R2 K6     ; R82 := R2[0xe6b41adb]
 24 [-]: CALL      R2 1 2       ; R2 := R2()
 25 [-]: TEST      R2 1         ; if R2 then PC := 49
 26 [-]: JMP       49           ; PC := 49
 27 [-]: GETGLOBAL R2 K7        ; R2 := 0x9ba7909f
 28 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x8fe6be1d]
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: TEST      R2 1         ; if R2 then PC := 49
 31 [-]: JMP       49           ; PC := 49
 32 [-]: GETGLOBAL R2 K9        ; R2 := mWindow
 33 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["mInputPanel"]
 34 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mIsFocused"]
 35 [-]: TEST      R2 0         ; if not R2 then PC := 49
 36 [-]: JMP       49           ; PC := 49
 37 [-]: GETUPVAL  R2 U0        ; R2 := U0
 38 [-]: GETTABLE  R2 R2 K12    ; R82 := R2[0x742babac]
 39 [-]: CALL      R2 1 2       ; R2 := R2()
 40 [-]: TEST      R2 0         ; if not R2 then PC := 47
 41 [-]: JMP       47           ; PC := 47
 42 [-]: GETUPVAL  R2 U1        ; R2 := U1
 43 [-]: TEST      R2 0         ; if not R2 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: GETUPVAL  R2 U2        ; R2 := U2
 46 [-]: CALL      R2 1 1       ; R2()
 47 [-]: SELF      R2 R0 K13    ; R3 := R0; R2 := R0[0x205b8a54]
 48 [-]: CALL      R2 2 1       ; R2(R3)
 49 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 50 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["mEmoteGrid"]
 51 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 52 [-]: TEST      R2 1         ; if R2 then PC := 93
 53 [-]: JMP       93           ; PC := 93
 54 [-]: GETTABLE  R2 R0 K14    ; R2 := R0["mEmoteGrid"]
 55 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xfaa69527]
 56 [-]: MOVE      R4 R1        ; R4 := R1
 57 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 58 [-]: GETGLOBAL R3 K4        ; R3 := 0x34291f5c
 59 [-]: GETTABLE  R3 R3 K6     ; R82 := R3[0xe6b41adb]
 60 [-]: CALL      R3 1 2       ; R3 := R3()
 61 [-]: TEST      R3 0         ; if not R3 then PC := 93
 62 [-]: JMP       93           ; PC := 93
 63 [-]: TEST      R2 0         ; if not R2 then PC := 93
 64 [-]: JMP       93           ; PC := 93
 65 [-]: GETGLOBAL R3 K15       ; R3 := 0x42dcc9f5
 66 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["mEmoteGrid"]
 67 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mScroll"]
 68 [-]: CONST     R5 1         ; R5 := 1.000000
 69 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["mEmoteGrid"]
 70 [-]: SELF      R6 R6 K17    ; R7 := R6; R6 := R6[0x5fbddc1a]
 71 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 72 [-]: GETTABLE  R7 R0 K14    ; R7 := R0["mEmoteGrid"]
 73 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0xc419c8f6]
 74 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 75 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
 76 [-]: ADD       R6 R6 K19    ; R6 := R6 + 1.000000
 77 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 78 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["mEmoteGrid"]
 79 [-]: GETTABLE  R4 R4 K16    ; R4 := R4["mScroll"]
 80 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 87
 81 [-]: JMP       87           ; PC := 87
 82 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["mEmoteGrid"]
 83 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4[0x4c4f8717]
 84 [-]: MOVE      R6 R3        ; R6 := R3
 85 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 86 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 87 [-]: GETTABLE  R4 R0 K14    ; R4 := R0["mEmoteGrid"]
 88 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4[0x71e9ac81]
 89 [-]: LOADNIL   R6 R6        ; R6 := nil
 90 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 91 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 92 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 93 [-]: RETURN    R0 1         ; return 


; Function #51.6:
;
; Name:            
; Defined at line: 1432
; #Upvalues:       11
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  57

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x5b0290d2]
  3 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mInputPanel"]
  5 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mClipPath"]
  6 [-]: LOADK     R4 K5        ; R4 := ".MessageBox"
  7 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  8 [-]: CONST     R4 73        ; R4 := 73.000000
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: SETUPVAL  R1 U0        ; U82 := 
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: TEST      R1 0         ; if not R1 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 15 [-]: SETUPVAL  R1 U1        ; U82 := 
 16 [-]: GETUPVAL  R1 U1        ; R1 := U1
 17 [-]: EQ        0 R1 K6      ; if R1 ~= false then PC := 25
 18 [-]: JMP       25           ; PC := 25
 19 [-]: GETUPVAL  R1 U2        ; R1 := U2
 20 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0xc074491b]
 21 [-]: GETUPVAL  R2 U3        ; R2 := U3
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 24 [-]: SETUPVAL  R1 U0        ; U82 := 
 25 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 26 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x91a24e4b]
 27 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
 28 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mInputPanel"]
 29 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mClipPath"]
 30 [-]: LOADK     R4 K5        ; R4 := ".MessageBox"
 31 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 32 [-]: CONST     R4 71        ; R4 := 71.000000
 33 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 34 [-]: EQ        0 R1 K9      ; if R1 ~= nil then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 37 [-]: RETURN    R2 2         ; return R2
 38 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 39 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x54a95d6f]
 40 [-]: GETGLOBAL R4 K2        ; R4 := mWindow
 41 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mInputPanel"]
 42 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mClipPath"]
 43 [-]: LOADK     R5 K5        ; R5 := ".MessageBox"
 44 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 45 [-]: CONST     R5 29        ; R5 := 29.000000
 46 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 47 [-]: LT        0 K11 R1     ; if 0.000000 >= R1 then PC := 54
 48 [-]: JMP       54           ; PC := 54
 49 [-]: GETGLOBAL R3 K12       ; R3 := 0x8a0252a7
 50 [-]: MOVE      R4 R2        ; R4 := R2
 51 [-]: MOVE      R5 R1        ; R5 := R1
 52 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 53 [-]: MOVE      R1 R3        ; R1 := R3
 54 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
 55 [-]: GETGLOBAL R4 K13       ; R4 := 0x7f5022cf
 56 [-]: GETTABLE  R4 R4 K14    ; R82 := R4[0x1a94c9cc]
 57 [-]: MOVE      R5 R2        ; R5 := R2
 58 [-]: MOVE      R6 R1        ; R6 := R1
 59 [-]: MOVE      R7 R1        ; R7 := R1
 60 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 61 [-]: GETUPVAL  R5 U4        ; R5 := U4
 62 [-]: TEST      R5 0         ; if not R5 then PC := 102
 63 [-]: JMP       102          ; PC := 102
 64 [-]: GETGLOBAL R5 K13       ; R5 := 0x7f5022cf
 65 [-]: GETTABLE  R5 R5 K15    ; R82 := R5[0x41e2ae25]
 66 [-]: MOVE      R6 R2        ; R6 := R2
 67 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 68 [-]: GETUPVAL  R6 U4        ; R6 := U4
 69 [-]: LT        0 R5 R6      ; if R5 >= R6 then PC := 102
 70 [-]: JMP       102          ; PC := 102
 71 [-]: GETUPVAL  R5 U2        ; R5 := U2
 72 [-]: GETTABLE  R5 R5 K7     ; R82 := R5[0xc074491b]
 73 [-]: GETUPVAL  R6 U3        ; R6 := U3
 74 [-]: CALL      R5 2 1       ; R5(R6)
 75 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 76 [-]: SETUPVAL  R5 U0        ; U82 := 
 77 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 78 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0xc0a3774b]
 79 [-]: GETGLOBAL R7 K2        ; R7 := mWindow
 80 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["mInputPanel"]
 81 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["mClipPath"]
 82 [-]: LOADK     R8 K17       ; R8 := "MessageBox"
 83 [-]: CONST     R9 73        ; R9 := 73.000000
 84 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
 85 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 86 [-]: GETUPVAL  R5 U2        ; R5 := U2
 87 [-]: GETTABLE  R5 R5 K18    ; R82 := R5[0x088839fd]
 88 [-]: LOADK     R6 K19       ; R6 := ""
 89 [-]: GETUPVAL  R7 U3        ; R7 := U3
 90 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 91 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 92 [-]: LOADK     R5 K19       ; R5 := ""
 93 [-]: SETUPVAL  R5 U5        ; U82 := 
 94 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 95 [-]: SETUPVAL  R5 U1        ; U82 := 
 96 [-]: GETGLOBAL R5 K13       ; R5 := 0x7f5022cf
 97 [-]: GETTABLE  R5 R5 K15    ; R82 := R5[0x41e2ae25]
 98 [-]: MOVE      R6 R2        ; R6 := R2
 99 [-]: CALL      R5 2 2       ; R5 := R5(R6)
100 [-]: SETUPVAL  R5 U4        ; U82 := 
101 [-]: JMP       140          ; PC := 140
102 [-]: GETUPVAL  R5 U0        ; R5 := U0
103 [-]: TEST      R5 1         ; if R5 then PC := 140
104 [-]: JMP       140          ; PC := 140
105 [-]: GETUPVAL  R5 U1        ; R5 := U1
106 [-]: TEST      R5 0         ; if not R5 then PC := 140
107 [-]: JMP       140          ; PC := 140
108 [-]: EQ        1 R4 K20     ; if R4 == ":" then PC := 116
109 [-]: JMP       116          ; PC := 116
110 [-]: EQ        1 R4 K21     ; if R4 == "@" then PC := 116
111 [-]: JMP       116          ; PC := 116
112 [-]: EQ        1 R4 K22     ; if R4 == "[" then PC := 116
113 [-]: JMP       116          ; PC := 116
114 [-]: EQ        0 R4 K23     ; if R4 ~= "{" then PC := 140
115 [-]: JMP       140          ; PC := 140
116 [-]: GETGLOBAL R5 K13       ; R5 := 0x7f5022cf
117 [-]: GETTABLE  R5 R5 K14    ; R82 := R5[0x1a94c9cc]
118 [-]: MOVE      R6 R2        ; R6 := R2
119 [-]: GETUPVAL  R7 U4        ; R7 := U4
120 [-]: MOVE      R8 R1        ; R8 := R1
121 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
122 [-]: GETGLOBAL R6 K24       ; R6 := 0xcfc01047
123 [-]: GETUPVAL  R7 U6        ; R7 := U6
124 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
125 [-]: JMP       134          ; PC := 134
126 [-]: GETGLOBAL R11 K13      ; R11 := 0x7f5022cf
127 [-]: GETTABLE  R11 R11 K25  ; R82 := R11[0x04981ab3]
128 [-]: MOVE      R12 R5       ; R12 := R5
129 [-]: CALL      R11 2 2      ; R11 := R11(R12)
130 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 134
131 [-]: JMP       134          ; PC := 134
132 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
133 [-]: JMP       136          ; PC := 136
134 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 126; R8 := R9 end
135 [-]: JMP       126          ; PC := 126
136 [-]: TEST      R3 1         ; if R3 then PC := 140
137 [-]: JMP       140          ; PC := 140
138 [-]: SETUPVAL  R1 U4        ; U82 := 
139 [-]: SETUPVAL  R4 U5        ; U82 := 
140 [-]: GETGLOBAL R11 K13      ; R11 := 0x7f5022cf
141 [-]: GETTABLE  R11 R11 K14  ; R82 := R11[0x1a94c9cc]
142 [-]: MOVE      R12 R2       ; R12 := R2
143 [-]: GETUPVAL  R13 U4       ; R13 := U4
144 [-]: MOVE      R14 R1       ; R14 := R1
145 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
146 [-]: GETUPVAL  R12 U7       ; R12 := U7
147 [-]: EQ        0 R12 R11    ; if R12 ~= R11 then PC := 151
148 [-]: JMP       151          ; PC := 151
149 [-]: RETURN    R0 1         ; return 
150 [-]: JMP       152          ; PC := 152
151 [-]: SETUPVAL  R11 U7       ; U82 := 
152 [-]: GETGLOBAL R12 K13      ; R12 := 0x7f5022cf
153 [-]: GETTABLE  R12 R12 K15  ; R82 := R12[0x41e2ae25]
154 [-]: MOVE      R13 R11      ; R13 := R11
155 [-]: CALL      R12 2 2      ; R12 := R12(R13)
156 [-]: EQ        0 R12 K11    ; if R12 ~= 0.000000 then PC := 186
157 [-]: JMP       186          ; PC := 186
158 [-]: GETUPVAL  R12 U0       ; R12 := U0
159 [-]: TEST      R12 0        ; if not R12 then PC := 186
160 [-]: JMP       186          ; PC := 186
161 [-]: GETUPVAL  R12 U2       ; R12 := U2
162 [-]: GETTABLE  R12 R12 K7   ; R82 := R12[0xc074491b]
163 [-]: GETUPVAL  R13 U3       ; R13 := U3
164 [-]: CALL      R12 2 1      ; R12(R13)
165 [-]: OP_LOADBOOL R12 0 0      ; R12 := false
166 [-]: SETUPVAL  R12 U0       ; U82 := 
167 [-]: GETGLOBAL R12 K0       ; R12 := 0xae91e43b
168 [-]: SELF      R12 R12 K16  ; R13 := R12; R12 := R12[0xc0a3774b]
169 [-]: GETGLOBAL R14 K2       ; R14 := mWindow
170 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["mInputPanel"]
171 [-]: GETTABLE  R14 R14 K4   ; R14 := R14["mClipPath"]
172 [-]: LOADK     R15 K17      ; R15 := "MessageBox"
173 [-]: CONST     R16 73       ; R16 := 73.000000
174 [-]: OP_LOADBOOL R17 0 0      ; R17 := false
175 [-]: CALL      R12 6 1      ; R12(R13,R14,R15,R16,R17)
176 [-]: GETUPVAL  R12 U2       ; R12 := U2
177 [-]: GETTABLE  R12 R12 K18  ; R82 := R12[0x088839fd]
178 [-]: LOADK     R13 K19      ; R13 := ""
179 [-]: GETUPVAL  R14 U3       ; R14 := U3
180 [-]: OP_LOADBOOL R15 0 0      ; R15 := false
181 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
182 [-]: LOADK     R12 K19      ; R12 := ""
183 [-]: SETUPVAL  R12 U5       ; U82 := 
184 [-]: OP_LOADBOOL R12 0 0      ; R12 := false
185 [-]: SETUPVAL  R12 U1       ; U82 := 
186 [-]: GETGLOBAL R12 K26      ; R12 := 0x83e41587
187 [-]: MOVE      R13 R11      ; R13 := R11
188 [-]: CALL      R12 2 2      ; R12 := R12(R13)
189 [-]: NEWTABLE  R13 0 0      ; R13 := {}
190 [-]: CONST     R14 0        ; R14 := 0.000000
191 [-]: LOADK     R15 K19      ; R15 := ""
192 [-]: TEST      R3 1         ; if R3 then PC := 489
193 [-]: JMP       489          ; PC := 489
194 [-]: GETUPVAL  R16 U5       ; R16 := U5
195 [-]: EQ        0 R16 K21    ; if R16 ~= "@" then PC := 269
196 [-]: JMP       269          ; PC := 269
197 [-]: NEWTABLE  R16 0 0      ; R16 := {}
198 [-]: LOADNIL   R17 R18      ; R17 := R18 := nil
199 [-]: GETGLOBAL R19 K27      ; R19 := 0x7b998233
200 [-]: GETGLOBAL R20 K2       ; R20 := mWindow
201 [-]: SELF      R20 R20 K28  ; R21 := R20; R20 := R20[0x8b75da5a]
202 [-]: CALL      R20 2 0      ; R20,... := R20(R21)
203 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
204 [-]: TEST      R19 1        ; if R19 then PC := 214
205 [-]: JMP       214          ; PC := 214
206 [-]: GETGLOBAL R19 K2       ; R19 := mWindow
207 [-]: SELF      R19 R19 K28  ; R20 := R19; R19 := R19[0x8b75da5a]
208 [-]: CALL      R19 2 2      ; R19 := R19(R20)
209 [-]: GETTABLE  R17 R19 K29  ; R17 := R19["mChannelType"]
210 [-]: GETGLOBAL R19 K2       ; R19 := mWindow
211 [-]: SELF      R19 R19 K28  ; R20 := R19; R19 := R19[0x8b75da5a]
212 [-]: CALL      R19 2 2      ; R19 := R19(R20)
213 [-]: GETTABLE  R18 R19 K30  ; R18 := R19["mUserList"]
214 [-]: GETGLOBAL R19 K2       ; R19 := mWindow
215 [-]: GETTABLE  R19 R19 K31  ; R19 := R19["CHANNEL_SESSION"]
216 [-]: EQ        1 R17 R19    ; if R17 == R19 then PC := 226
217 [-]: JMP       226          ; PC := 226
218 [-]: GETGLOBAL R19 K2       ; R19 := mWindow
219 [-]: GETTABLE  R19 R19 K32  ; R19 := R19["CHANNEL_CLAN"]
220 [-]: EQ        1 R17 R19    ; if R17 == R19 then PC := 226
221 [-]: JMP       226          ; PC := 226
222 [-]: GETGLOBAL R19 K2       ; R19 := mWindow
223 [-]: GETTABLE  R19 R19 K33  ; R19 := R19["CHANNEL_ALLIANCE"]
224 [-]: EQ        0 R17 R19    ; if R17 ~= R19 then PC := 228
225 [-]: JMP       228          ; PC := 228
226 [-]: MOVE      R16 R18      ; R16 := R18
227 [-]: JMP       229          ; PC := 229
228 [-]: GETUPVAL  R16 U8       ; R16 := U8
229 [-]: EQ        1 R18 K9     ; if R18 == nil then PC := 433
230 [-]: JMP       433          ; PC := 433
231 [-]: GETGLOBAL R19 K24      ; R19 := 0xcfc01047
232 [-]: MOVE      R20 R16      ; R20 := R16
233 [-]: CALL      R19 2 4      ; R19,R20,R21 := R19(R20)
234 [-]: JMP       266          ; PC := 266
235 [-]: GETTABLE  R24 R18 R22  ; R24 := R18[R22]
236 [-]: EQ        1 R24 K9     ; if R24 == nil then PC := 266
237 [-]: JMP       266          ; PC := 266
238 [-]: GETTABLE  R24 R18 R22  ; R24 := R18[R22]
239 [-]: GETTABLE  R24 R24 K34  ; R24 := R24["isOnline"]
240 [-]: TEST      R24 0        ; if not R24 then PC := 266
241 [-]: JMP       266          ; PC := 266
242 [-]: GETGLOBAL R24 K13      ; R24 := 0x7f5022cf
243 [-]: GETTABLE  R24 R24 K35  ; R82 := R24[0xa5c556b9]
244 [-]: LOADK     R25 K21      ; R25 := "@"
245 [-]: GETGLOBAL R26 K26      ; R26 := 0x83e41587
246 [-]: MOVE      R27 R22      ; R27 := R22
247 [-]: CALL      R26 2 2      ; R26 := R26(R27)
248 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
249 [-]: MOVE      R26 R12      ; R26 := R12
250 [-]: CONST     R27 1        ; R27 := 1.000000
251 [-]: OP_LOADBOOL R28 1 0      ; R28 := true
252 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
253 [-]: EQ        1 R24 K9     ; if R24 == nil then PC := 266
254 [-]: JMP       266          ; PC := 266
255 [-]: GETGLOBAL R24 K36      ; R24 := 0x33bdd652
256 [-]: GETTABLE  R24 R24 K37  ; R82 := R24[0x23d5322f]
257 [-]: MOVE      R25 R13      ; R25 := R13
258 [-]: LOADK     R26 K21      ; R26 := "@"
259 [-]: MOVE      R27 R22      ; R27 := R22
260 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
261 [-]: CALL      R24 3 1      ; R24(R25,R26)
262 [-]: ADD       R14 R14 K38  ; R14 := R14 + 1.000000
263 [-]: LE        0 K39 R14    ; if 8.000000 > R14 then PC := 266
264 [-]: JMP       266          ; PC := 266
265 [-]: JMP       433          ; PC := 433
266 [-]: TFORLOOP  R19 2        ; R22,R23 :=  R19(R20,R21); if R22 ~= nil then begin PC = 235; R21 := R22 end
267 [-]: JMP       235          ; PC := 235
268 [-]: JMP       433          ; PC := 433
269 [-]: GETUPVAL  R24 U5       ; R24 := U5
270 [-]: EQ        0 R24 K20    ; if R24 ~= ":" then PC := 297
271 [-]: JMP       297          ; PC := 297
272 [-]: GETGLOBAL R24 K40      ; R24 := 0xc8802016
273 [-]: GETUPVAL  R25 U6       ; R25 := U6
274 [-]: CALL      R24 2 4      ; R24,R25,R26 := R24(R25)
275 [-]: JMP       294          ; PC := 294
276 [-]: GETGLOBAL R29 K13      ; R29 := 0x7f5022cf
277 [-]: GETTABLE  R29 R29 K35  ; R82 := R29[0xa5c556b9]
278 [-]: MOVE      R30 R28      ; R30 := R28
279 [-]: GETUPVAL  R31 U9       ; R31 := U9
280 [-]: GETTABLE  R31 R31 K41  ; R82 := R31[0xbb698104]
281 [-]: MOVE      R32 R12      ; R32 := R12
282 [-]: CALL      R31 2 0      ; R31,... := R31(R32)
283 [-]: CALL      R29 0 2      ; R29 := R29(R30,...)
284 [-]: EQ        0 R29 K38    ; if R29 ~= 1.000000 then PC := 294
285 [-]: JMP       294          ; PC := 294
286 [-]: LT        0 R14 K39    ; if R14 >= 8.000000 then PC := 294
287 [-]: JMP       294          ; PC := 294
288 [-]: GETGLOBAL R29 K36      ; R29 := 0x33bdd652
289 [-]: GETTABLE  R29 R29 K37  ; R82 := R29[0x23d5322f]
290 [-]: MOVE      R30 R13      ; R30 := R13
291 [-]: MOVE      R31 R28      ; R31 := R28
292 [-]: CALL      R29 3 1      ; R29(R30,R31)
293 [-]: ADD       R14 R14 K38  ; R14 := R14 + 1.000000
294 [-]: TFORLOOP  R24 2        ; R27,R28 :=  R24(R25,R26); if R27 ~= nil then begin PC = 276; R26 := R27 end
295 [-]: JMP       276          ; PC := 276
296 [-]: JMP       433          ; PC := 433
297 [-]: GETUPVAL  R29 U5       ; R29 := U5
298 [-]: EQ        0 R29 K22    ; if R29 ~= "[" then PC := 392
299 [-]: JMP       392          ; PC := 392
300 [-]: LEN       R29 R12      ; R29 := # R12
301 [-]: LE        0 K42 R29    ; if 2.000000 > R29 then PC := 392
302 [-]: JMP       392          ; PC := 392
303 [-]: LOADK     R29 K43      ; R29 := "^"
304 [-]: SELF      R30 R12 K44  ; R31 := R12; R30 := R12[0x66edf04f]
305 [-]: LOADK     R32 K45      ; R32 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
306 [-]: LOADK     R33 K46      ; R33 := "%%%0"
307 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
308 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
309 [-]: NEWTABLE  R30 0 0      ; R30 := {}
310 [-]: CLOSURE   R31 0        ; R31 := closure(Function #51.6.1)
311 [-]: MOVE      R0 R12       ; R0 := R12
312 [-]: MOVE      R0 R29       ; R0 := R29
313 [-]: MOVE      R0 R30       ; R0 := R30
314 [-]: GETGLOBAL R32 K27      ; R32 := 0x7b998233
315 [-]: GETUPVAL  R33 U10      ; R33 := U10
316 [-]: CALL      R32 2 2      ; R32 := R32(R33)
317 [-]: TEST      R32 1        ; if R32 then PC := 372
318 [-]: JMP       372          ; PC := 372
319 [-]: GETGLOBAL R32 K13      ; R32 := 0x7f5022cf
320 [-]: GETTABLE  R32 R32 K14  ; R82 := R32[0x1a94c9cc]
321 [-]: MOVE      R33 R12      ; R33 := R12
322 [-]: CONST     R34 2        ; R34 := 2.000000
323 [-]: CONST     R35 2        ; R35 := 2.000000
324 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
325 [-]: MOVE      R33 R31      ; R33 := R31
326 [-]: GETUPVAL  R34 U10      ; R34 := U10
327 [-]: SELF      R34 R34 K47  ; R35 := R34; R34 := R34[0xca2be703]
328 [-]: MOVE      R36 R32      ; R36 := R32
329 [-]: CALL      R34 3 0      ; R34,... := R34(R35,R36)
330 [-]: CALL      R33 0 1      ; R33(R34,...)
331 [-]: MOVE      R33 R31      ; R33 := R31
332 [-]: GETUPVAL  R34 U10      ; R34 := U10
333 [-]: SELF      R34 R34 K48  ; R35 := R34; R34 := R34[0x66c9e7cf]
334 [-]: MOVE      R36 R32      ; R36 := R32
335 [-]: CALL      R34 3 0      ; R34,... := R34(R35,R36)
336 [-]: CALL      R33 0 1      ; R33(R34,...)
337 [-]: MOVE      R33 R31      ; R33 := R31
338 [-]: GETUPVAL  R34 U10      ; R34 := U10
339 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34[0xfacda23e]
340 [-]: MOVE      R36 R32      ; R36 := R32
341 [-]: CONST     R37 0        ; R37 := 0.000000
342 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
343 [-]: CALL      R33 0 1      ; R33(R34,...)
344 [-]: MOVE      R33 R31      ; R33 := R31
345 [-]: GETUPVAL  R34 U10      ; R34 := U10
346 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34[0xfacda23e]
347 [-]: MOVE      R36 R32      ; R36 := R32
348 [-]: CONST     R37 1        ; R37 := 1.000000
349 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
350 [-]: CALL      R33 0 1      ; R33(R34,...)
351 [-]: MOVE      R33 R31      ; R33 := R31
352 [-]: GETUPVAL  R34 U10      ; R34 := U10
353 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34[0xfacda23e]
354 [-]: MOVE      R36 R32      ; R36 := R32
355 [-]: CONST     R37 6        ; R37 := 6.000000
356 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
357 [-]: CALL      R33 0 1      ; R33(R34,...)
358 [-]: MOVE      R33 R31      ; R33 := R31
359 [-]: GETUPVAL  R34 U10      ; R34 := U10
360 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34[0xfacda23e]
361 [-]: MOVE      R36 R32      ; R36 := R32
362 [-]: CONST     R37 7        ; R37 := 7.000000
363 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
364 [-]: CALL      R33 0 1      ; R33(R34,...)
365 [-]: MOVE      R33 R31      ; R33 := R31
366 [-]: GETUPVAL  R34 U10      ; R34 := U10
367 [-]: SELF      R34 R34 K49  ; R35 := R34; R34 := R34[0xfacda23e]
368 [-]: MOVE      R36 R32      ; R36 := R32
369 [-]: CONST     R37 2        ; R37 := 2.000000
370 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
371 [-]: CALL      R33 0 1      ; R33(R34,...)
372 [-]: CONST     R33 1        ; R33 := 1.000000
373 [-]: LEN       R34 R30      ; R34 := # R30
374 [-]: CONST     R35 1        ; R35 := 1.000000
375 [-]: FORPREP   R33 389      ; R33 -= R35; PC := 389
376 [-]: LT        0 R14 K39    ; if R14 >= 8.000000 then PC := 390
377 [-]: JMP       390          ; PC := 390
378 [-]: GETGLOBAL R37 K51      ; R37 := 0x5f0788c4
379 [-]: GETTABLE  R38 R30 R36  ; R38 := R30[R36]
380 [-]: CALL      R37 2 2      ; R37 := R37(R38)
381 [-]: GETGLOBAL R38 K36      ; R38 := 0x33bdd652
382 [-]: GETTABLE  R38 R38 K37  ; R82 := R38[0x23d5322f]
383 [-]: MOVE      R39 R13      ; R39 := R13
384 [-]: MOVE      R40 R37      ; R40 := R37
385 [-]: CALL      R38 3 1      ; R38(R39,R40)
386 [-]: ADD       R14 R14 K38  ; R14 := R14 + 1.000000
387 [-]: JMP       389          ; PC := 389
388 [-]: JMP       390          ; PC := 390
389 [-]: FORLOOP   R33 376      ; R33 += R35; if R33 <= R34 then begin PC := 376; R36 := R33 end
390 [-]: CLOSE     R29          ; SAVE R29,...
391 [-]: JMP       433          ; PC := 433
392 [-]: GETUPVAL  R29 U5       ; R29 := U5
393 [-]: EQ        0 R29 K23    ; if R29 ~= "{" then PC := 433
394 [-]: JMP       433          ; PC := 433
395 [-]: LOADK     R29 K43      ; R29 := "^"
396 [-]: SELF      R30 R12 K44  ; R31 := R12; R30 := R12[0x66edf04f]
397 [-]: LOADK     R32 K45      ; R32 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
398 [-]: LOADK     R33 K46      ; R33 := "%%%0"
399 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
400 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
401 [-]: NEWTABLE  R30 0 0      ; R30 := {}
402 [-]: GETGLOBAL R31 K40      ; R31 := 0xc8802016
403 [-]: GETGLOBAL R32 K2       ; R32 := mWindow
404 [-]: GETTABLE  R32 R32 K52  ; R32 := R32["mGuildSuggest"]
405 [-]: CALL      R31 2 4      ; R31,R32,R33 := R31(R32)
406 [-]: JMP       431          ; PC := 431
407 [-]: GETGLOBAL R36 K13      ; R36 := 0x7f5022cf
408 [-]: GETTABLE  R36 R36 K35  ; R82 := R36[0xa5c556b9]
409 [-]: MOVE      R37 R35      ; R37 := R35
410 [-]: MOVE      R38 R29      ; R38 := R29
411 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
412 [-]: TEST      R36 0        ; if not R36 then PC := 431
413 [-]: JMP       431          ; PC := 431
414 [-]: GETGLOBAL R36 K36      ; R36 := 0x33bdd652
415 [-]: GETTABLE  R36 R36 K37  ; R82 := R36[0x23d5322f]
416 [-]: MOVE      R37 R30      ; R37 := R30
417 [-]: MOVE      R38 R35      ; R38 := R35
418 [-]: CALL      R36 3 1      ; R36(R37,R38)
419 [-]: LT        0 R14 K39    ; if R14 >= 8.000000 then PC := 431
420 [-]: JMP       431          ; PC := 431
421 [-]: SELF      R36 R35 K44  ; R37 := R35; R36 := R35[0x66edf04f]
422 [-]: LOADK     R38 K53      ; R38 := "(%l)([^%s^%-]*)"
423 [-]: CLOSURE   R39 1        ; R39 := closure(Function #51.6.2)
424 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
425 [-]: GETGLOBAL R37 K36      ; R37 := 0x33bdd652
426 [-]: GETTABLE  R37 R37 K37  ; R82 := R37[0x23d5322f]
427 [-]: MOVE      R38 R13      ; R38 := R13
428 [-]: MOVE      R39 R36      ; R39 := R36
429 [-]: CALL      R37 3 1      ; R37(R38,R39)
430 [-]: ADD       R14 R14 K38  ; R14 := R14 + 1.000000
431 [-]: TFORLOOP  R31 2        ; R34,R35 :=  R31(R32,R33); if R34 ~= nil then begin PC = 407; R33 := R34 end
432 [-]: JMP       407          ; PC := 407
433 [-]: GETUPVAL  R37 U5       ; R37 := U5
434 [-]: EQ        0 R37 K22    ; if R37 ~= "[" then PC := 452
435 [-]: JMP       452          ; PC := 452
436 [-]: CONST     R37 1        ; R37 := 1.000000
437 [-]: LEN       R38 R13      ; R38 := # R13
438 [-]: CONST     R39 1        ; R39 := 1.000000
439 [-]: FORPREP   R37 451      ; R37 -= R39; PC := 451
440 [-]: GETGLOBAL R41 K13      ; R41 := 0x7f5022cf
441 [-]: GETTABLE  R41 R41 K14  ; R82 := R41[0x1a94c9cc]
442 [-]: GETTABLE  R42 R13 R40  ; R42 := R13[R40]
443 [-]: CONST     R43 1        ; R43 := 1.000000
444 [-]: GETGLOBAL R44 K13      ; R44 := 0x7f5022cf
445 [-]: GETTABLE  R44 R44 K15  ; R82 := R44[0x41e2ae25]
446 [-]: GETTABLE  R45 R13 R40  ; R45 := R13[R40]
447 [-]: CALL      R44 2 2      ; R44 := R44(R45)
448 [-]: SUB       R44 R44 K38  ; R44 := R44 - 1.000000
449 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
450 [-]: SETTABLE  R13 R40 R41  ; R13[R40] := R41
451 [-]: FORLOOP   R37 440      ; R37 += R39; if R37 <= R38 then begin PC := 440; R40 := R37 end
452 [-]: GETGLOBAL R41 K36      ; R41 := 0x33bdd652
453 [-]: GETTABLE  R41 R41 K54  ; R82 := R41[0xf21b1d8e]
454 [-]: MOVE      R42 R13      ; R42 := R13
455 [-]: CLOSURE   R43 2        ; R43 := closure(Function #51.6.3)
456 [-]: CALL      R41 3 1      ; R41(R42,R43)
457 [-]: GETUPVAL  R41 U5       ; R41 := U5
458 [-]: EQ        0 R41 K22    ; if R41 ~= "[" then PC := 469
459 [-]: JMP       469          ; PC := 469
460 [-]: CONST     R41 1        ; R41 := 1.000000
461 [-]: LEN       R42 R13      ; R42 := # R13
462 [-]: CONST     R43 1        ; R43 := 1.000000
463 [-]: FORPREP   R41 468      ; R41 -= R43; PC := 468
464 [-]: GETTABLE  R45 R13 R44  ; R45 := R13[R44]
465 [-]: LOADK     R46 K55      ; R46 := "]"
466 [-]: CONCAT    R45 R45 R46  ; R45 := R45 .. R46
467 [-]: SETTABLE  R13 R44 R45  ; R13[R44] := R45
468 [-]: FORLOOP   R41 464      ; R41 += R43; if R41 <= R42 then begin PC := 464; R44 := R41 end
469 [-]: GETGLOBAL R45 K40      ; R45 := 0xc8802016
470 [-]: MOVE      R46 R13      ; R46 := R13
471 [-]: CALL      R45 2 4      ; R45,R46,R47 := R45(R46)
472 [-]: JMP       477          ; PC := 477
473 [-]: MOVE      R50 R49      ; R50 := R49
474 [-]: LOADK     R51 K56      ; R51 := "|"
475 [-]: MOVE      R52 R15      ; R52 := R15
476 [-]: CONCAT    R15 R50 R52  ; R15 := R50 .. R51 .. R52
477 [-]: TFORLOOP  R45 2        ; R48,R49 :=  R45(R46,R47); if R48 ~= nil then begin PC = 473; R47 := R48 end
478 [-]: JMP       473          ; PC := 473
479 [-]: EQ        0 R14 K38    ; if R14 ~= 1.000000 then PC := 483
480 [-]: JMP       483          ; PC := 483
481 [-]: TEST      R3 1         ; if R3 then PC := 487
482 [-]: JMP       487          ; PC := 487
483 [-]: MOVE      R50 R15      ; R50 := R15
484 [-]: MOVE      R51 R11      ; R51 := R11
485 [-]: CONCAT    R15 R50 R51  ; R15 := R50 .. R51
486 [-]: JMP       512          ; PC := 512
487 [-]: CONST     R14 0        ; R14 := 0.000000
488 [-]: JMP       512          ; PC := 512
489 [-]: GETUPVAL  R50 U2       ; R50 := U2
490 [-]: GETTABLE  R50 R50 K7   ; R82 := R50[0xc074491b]
491 [-]: GETUPVAL  R51 U3       ; R51 := U3
492 [-]: CALL      R50 2 1      ; R50(R51)
493 [-]: OP_LOADBOOL R50 0 0      ; R50 := false
494 [-]: SETUPVAL  R50 U0       ; U82 := 2
495 [-]: GETGLOBAL R50 K0       ; R50 := 0xae91e43b
496 [-]: SELF      R50 R50 K16  ; R51 := R50; R50 := R50[0xc0a3774b]
497 [-]: GETGLOBAL R52 K2       ; R52 := mWindow
498 [-]: GETTABLE  R52 R52 K3   ; R52 := R52["mInputPanel"]
499 [-]: GETTABLE  R52 R52 K4   ; R52 := R52["mClipPath"]
500 [-]: LOADK     R53 K17      ; R53 := "MessageBox"
501 [-]: CONST     R54 73       ; R54 := 73.000000
502 [-]: OP_LOADBOOL R55 0 0      ; R55 := false
503 [-]: CALL      R50 6 1      ; R50(R51,R52,R53,R54,R55)
504 [-]: GETUPVAL  R50 U2       ; R50 := U2
505 [-]: GETTABLE  R50 R50 K18  ; R82 := R50[0x088839fd]
506 [-]: LOADK     R51 K19      ; R51 := ""
507 [-]: GETUPVAL  R52 U3       ; R52 := U3
508 [-]: OP_LOADBOOL R53 0 0      ; R53 := false
509 [-]: CALL      R50 4 1      ; R50(R51,R52,R53)
510 [-]: OP_LOADBOOL R50 0 0      ; R50 := false
511 [-]: SETUPVAL  R50 U1       ; U82 := 2
512 [-]: GETGLOBAL R50 K13      ; R50 := 0x7f5022cf
513 [-]: GETTABLE  R50 R50 K15  ; R82 := R50[0x41e2ae25]
514 [-]: MOVE      R51 R15      ; R51 := R15
515 [-]: CALL      R50 2 2      ; R50 := R50(R51)
516 [-]: GETUPVAL  R51 U1       ; R51 := U1
517 [-]: TEST      R51 0        ; if not R51 then PC := 563
518 [-]: JMP       563          ; PC := 563
519 [-]: LT        0 K11 R14    ; if 0.000000 >= R14 then PC := 563
520 [-]: JMP       563          ; PC := 563
521 [-]: GETUPVAL  R51 U5       ; R51 := U5
522 [-]: EQ        0 R51 K20    ; if R51 ~= ":" then PC := 527
523 [-]: JMP       527          ; PC := 527
524 [-]: LEN       R51 R11      ; R51 := # R11
525 [-]: LT        0 K42 R51    ; if 2.000000 >= R51 then PC := 563
526 [-]: JMP       563          ; PC := 563
527 [-]: GETUPVAL  R51 U2       ; R51 := U2
528 [-]: GETTABLE  R51 R51 K57  ; R82 := R51[0x638926f7]
529 [-]: GETUPVAL  R52 U3       ; R52 := U3
530 [-]: CALL      R51 2 1      ; R51(R52)
531 [-]: GETGLOBAL R51 K0       ; R51 := 0xae91e43b
532 [-]: SELF      R51 R51 K16  ; R52 := R51; R51 := R51[0xc0a3774b]
533 [-]: GETGLOBAL R53 K2       ; R53 := mWindow
534 [-]: GETTABLE  R53 R53 K3   ; R53 := R53["mInputPanel"]
535 [-]: GETTABLE  R53 R53 K4   ; R53 := R53["mClipPath"]
536 [-]: LOADK     R54 K17      ; R54 := "MessageBox"
537 [-]: CONST     R55 73       ; R55 := 73.000000
538 [-]: OP_LOADBOOL R56 1 0      ; R56 := true
539 [-]: CALL      R51 6 1      ; R51(R52,R53,R54,R55,R56)
540 [-]: OP_LOADBOOL R51 1 0      ; R51 := true
541 [-]: SETUPVAL  R51 U0       ; U82 := 3
542 [-]: GETUPVAL  R51 U2       ; R51 := U2
543 [-]: GETTABLE  R51 R51 K58  ; R82 := R51[0xfc6541b2]
544 [-]: MOVE      R52 R11      ; R52 := R11
545 [-]: GETUPVAL  R53 U3       ; R53 := U3
546 [-]: CALL      R51 3 1      ; R51(R52,R53)
547 [-]: GETUPVAL  R51 U2       ; R51 := U2
548 [-]: GETTABLE  R51 R51 K59  ; R82 := R51[0xadd16fb0]
549 [-]: MOVE      R52 R50      ; R52 := R50
550 [-]: GETUPVAL  R53 U3       ; R53 := U3
551 [-]: CALL      R51 3 1      ; R51(R52,R53)
552 [-]: GETUPVAL  R51 U2       ; R51 := U2
553 [-]: GETTABLE  R51 R51 K18  ; R82 := R51[0x088839fd]
554 [-]: MOVE      R52 R15      ; R52 := R15
555 [-]: GETUPVAL  R53 U3       ; R53 := U3
556 [-]: OP_LOADBOOL R54 0 0      ; R54 := false
557 [-]: CALL      R51 4 1      ; R51(R52,R53,R54)
558 [-]: GETUPVAL  R51 U2       ; R51 := U2
559 [-]: GETTABLE  R51 R51 K60  ; R82 := R51[0xfaa69527]
560 [-]: GETUPVAL  R52 U3       ; R52 := U3
561 [-]: CALL      R51 2 1      ; R51(R52)
562 [-]: JMP       599          ; PC := 599
563 [-]: GETUPVAL  R51 U1       ; R51 := U1
564 [-]: TEST      R51 0        ; if not R51 then PC := 599
565 [-]: JMP       599          ; PC := 599
566 [-]: EQ        1 R14 K11    ; if R14 == 0.000000 then PC := 574
567 [-]: JMP       574          ; PC := 574
568 [-]: GETUPVAL  R51 U5       ; R51 := U5
569 [-]: EQ        0 R51 K20    ; if R51 ~= ":" then PC := 599
570 [-]: JMP       599          ; PC := 599
571 [-]: LEN       R51 R11      ; R51 := # R11
572 [-]: LE        0 R51 K42    ; if R51 > 2.000000 then PC := 599
573 [-]: JMP       599          ; PC := 599
574 [-]: GETUPVAL  R51 U2       ; R51 := U2
575 [-]: GETTABLE  R51 R51 K18  ; R82 := R51[0x088839fd]
576 [-]: LOADK     R52 K19      ; R52 := ""
577 [-]: GETUPVAL  R53 U3       ; R53 := U3
578 [-]: OP_LOADBOOL R54 0 0      ; R54 := false
579 [-]: CALL      R51 4 1      ; R51(R52,R53,R54)
580 [-]: GETUPVAL  R51 U2       ; R51 := U2
581 [-]: GETTABLE  R51 R51 K7   ; R82 := R51[0xc074491b]
582 [-]: GETUPVAL  R52 U3       ; R52 := U3
583 [-]: CALL      R51 2 1      ; R51(R52)
584 [-]: GETUPVAL  R51 U2       ; R51 := U2
585 [-]: GETTABLE  R51 R51 K60  ; R82 := R51[0xfaa69527]
586 [-]: GETUPVAL  R52 U3       ; R52 := U3
587 [-]: CALL      R51 2 1      ; R51(R52)
588 [-]: GETGLOBAL R51 K0       ; R51 := 0xae91e43b
589 [-]: SELF      R51 R51 K16  ; R52 := R51; R51 := R51[0xc0a3774b]
590 [-]: GETGLOBAL R53 K2       ; R53 := mWindow
591 [-]: GETTABLE  R53 R53 K3   ; R53 := R53["mInputPanel"]
592 [-]: GETTABLE  R53 R53 K4   ; R53 := R53["mClipPath"]
593 [-]: LOADK     R54 K17      ; R54 := "MessageBox"
594 [-]: CONST     R55 73       ; R55 := 73.000000
595 [-]: OP_LOADBOOL R56 0 0      ; R56 := false
596 [-]: CALL      R51 6 1      ; R51(R52,R53,R54,R55,R56)
597 [-]: OP_LOADBOOL R51 0 0      ; R51 := false
598 [-]: SETUPVAL  R51 U0       ; U82 := 3
599 [-]: RETURN    R0 1         ; return 


; Function #51.6.1:
;
; Name:            
; Defined at line: 1537
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: CONST     R1 1         ; R1 := 1.000000
  2 [-]: LEN       R2 R0        ; R2 := # R0
  3 [-]: CONST     R3 1         ; R3 := 1.000000
  4 [-]: FORPREP   R1 32        ; R1 -= R3; PC := 32
  5 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
  6 [-]: GETGLOBAL R6 K0        ; R6 := 0x83e41587
  7 [-]: MOVE      R7 R5        ; R7 := R5
  8 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  9 [-]: GETGLOBAL R7 K1        ; R7 := 0x7f5022cf
 10 [-]: GETTABLE  R7 R7 K2     ; R82 := R7[0x66edf04f]
 11 [-]: MOVE      R8 R6        ; R8 := R6
 12 [-]: LOADK     R9 K3        ; R9 := "%]"
 13 [-]: LOADK     R10 K4       ; R10 := ""
 14 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 15 [-]: GETUPVAL  R8 U0        ; R8 := U0
 16 [-]: LE        0 R8 R7      ; if R8 > R7 then PC := 32
 17 [-]: JMP       32           ; PC := 32
 18 [-]: GETGLOBAL R8 K1        ; R8 := 0x7f5022cf
 19 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 20 [-]: MOVE      R9 R6        ; R9 := R6
 21 [-]: GETUPVAL  R10 U1       ; R10 := U1
 22 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 23 [-]: TEST      R8 0         ; if not R8 then PC := 33
 24 [-]: JMP       33           ; PC := 33
 25 [-]: GETGLOBAL R8 K6        ; R8 := 0x33bdd652
 26 [-]: GETTABLE  R8 R8 K7     ; R82 := R8[0x23d5322f]
 27 [-]: GETUPVAL  R9 U2        ; R9 := U2
 28 [-]: MOVE      R10 R5       ; R10 := R5
 29 [-]: CALL      R8 3 1       ; R8(R9,R10)
 30 [-]: JMP       32           ; PC := 32
 31 [-]: JMP       33           ; PC := 33
 32 [-]: FORLOOP   R1 5         ; R1 += R3; if R1 <= R2 then begin PC := 5; R4 := R1 end
 33 [-]: RETURN    R0 1         ; return 


; Function #51.6.2:
;
; Name:            
; Defined at line: 1579
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7f5022cf
  2 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x3f3e4d12]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #51.6.3:
;
; Name:            
; Defined at line: 1594
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LT        1 R1 R0      ; if R1 < R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 4
  4 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
  5 [-]: RETURN    R2 2         ; return R2
  6 [-]: RETURN    R0 1         ; return 


; Function #51.7:
;
; Name:            
; Defined at line: 1638
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mListControl"]
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mScrollBar"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x425b8f0d]
  4 [-]: SUB       R4 R1 K3     ; R4 := R1 - 28.000000
  5 [-]: CALL      R2 3 1       ; R2(R3,R4)
  6 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mListControl"]
  7 [-]: GETGLOBAL R3 K5        ; R3 := 0x5bced4c4
  8 [-]: GETTABLE  R3 R3 K6     ; R82 := R3[0x55f27c30]
  9 [-]: GETGLOBAL R4 K5        ; R4 := 0x5bced4c4
 10 [-]: GETTABLE  R4 R4 K6     ; R82 := R4[0x55f27c30]
 11 [-]: SUB       R5 R1 K7     ; R5 := R1 - 31.000000
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mListControl"]
 14 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mForcedVerticalSeparation"]
 15 [-]: DIV       R4 R4 R5     ; R4 := R4 / R5
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: SETTABLE  R2 K4 R3     ; R2["mVisibleElements"] := R3
 18 [-]: RETURN    R0 1         ; return 


; Function #51.8:
;
; Name:            
; Defined at line: 1643
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mScroll"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 27
  6 [-]: JMP       27           ; PC := 27
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mScrollBar"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 27
 12 [-]: JMP       27           ; PC := 27
 13 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mListControl"]
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mScroll"]
 15 [-]: LT        1 R1 R2      ; if R1 < R2 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 18 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mScrollBar"]
 19 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x70fc2d50]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: EQ        0 R3 K5      ; if R3 ~= 1.000000 then PC := 27
 22 [-]: JMP       27           ; PC := 27
 23 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 24 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x4c4f8717]
 25 [-]: ADD       R5 R2 K5     ; R5 := R2 + 1.000000
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 28 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xc704a9b7]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 31 [-]: MOVE      R5 R3        ; R5 := R3
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: TEST      R4 1         ; if R4 then PC := 47
 34 [-]: JMP       47           ; PC := 47
 35 [-]: LE        0 R1 R3      ; if R1 > R3 then PC := 47
 36 [-]: JMP       47           ; PC := 47
 37 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0[0x1e63ac7a]
 38 [-]: GETGLOBAL R6 K9        ; R6 := 0x42dcc9f5
 39 [-]: ADD       R7 R3 K5     ; R7 := R3 + 1.000000
 40 [-]: CONST     R8 1         ; R8 := 1.000000
 41 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mListControl"]
 42 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9[0x5fbddc1a]
 43 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 44 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 45 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 46 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 47 [-]: RETURN    R0 1         ; return 


; Function #51.9:
;
; Name:            
; Defined at line: 1658
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mScroll"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 21
  6 [-]: JMP       21           ; PC := 21
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  9 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mScrollBar"]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 21
 12 [-]: JMP       21           ; PC := 21
 13 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mListControl"]
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mScroll"]
 15 [-]: LT        0 R1 R2      ; if R1 >= R2 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 18 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x4c4f8717]
 19 [-]: SUB       R5 R2 K5     ; R5 := R2 - 1.000000
 20 [-]: CALL      R3 3 1       ; R3(R4,R5)
 21 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 22 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xc704a9b7]
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
 25 [-]: MOVE      R5 R3        ; R5 := R3
 26 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 27 [-]: TEST      R4 1         ; if R4 then PC := 41
 28 [-]: JMP       41           ; PC := 41
 29 [-]: LT        0 R1 R3      ; if R1 >= R3 then PC := 41
 30 [-]: JMP       41           ; PC := 41
 31 [-]: SELF      R4 R0 K7     ; R5 := R0; R4 := R0[0x1e63ac7a]
 32 [-]: GETGLOBAL R6 K8        ; R6 := 0x42dcc9f5
 33 [-]: SUB       R7 R3 K5     ; R7 := R3 - 1.000000
 34 [-]: CONST     R8 1         ; R8 := 1.000000
 35 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mListControl"]
 36 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9[0x5fbddc1a]
 37 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 38 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 39 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 40 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 41 [-]: RETURN    R0 1         ; return 


; Function #51.10:
;
; Name:            
; Defined at line: 1672
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mParent"]
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x8ec8f0d5]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mWindow"]
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: SETTABLE  R0 K3 R1     ; R0["mActiveRect"] := R1
  6 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0x81eabcd2]
  7 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mIsExpanded"]
  8 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
  9 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 10 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 11 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 12 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 13 [-]: LOADK     R5 K9        ; R5 := "Panel.Fill"
 14 [-]: CONST     R6 12        ; R6 := 12.000000
 15 [-]: GETTABLE  R7 R1 K10    ; R7 := R1["width"]
 16 [-]: SUB       R7 R7 K11    ; R7 := R7 - 1.000000
 17 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 18 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 19 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 20 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 21 [-]: LOADK     R5 K9        ; R5 := "Panel.Fill"
 22 [-]: CONST     R6 13        ; R6 := 13.000000
 23 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["height"]
 24 [-]: SUB       R7 R7 K13    ; R7 := R7 - 2.000000
 25 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 26 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 27 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 28 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 29 [-]: LOADK     R5 K14       ; R5 := "Blurer"
 30 [-]: CONST     R6 12        ; R6 := 12.000000
 31 [-]: GETTABLE  R7 R1 K10    ; R7 := R1["width"]
 32 [-]: SUB       R7 R7 K11    ; R7 := R7 - 1.000000
 33 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 34 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 35 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 36 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 37 [-]: LOADK     R5 K14       ; R5 := "Blurer"
 38 [-]: CONST     R6 13        ; R6 := 13.000000
 39 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["height"]
 40 [-]: SUB       R7 R7 K13    ; R7 := R7 - 2.000000
 41 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 42 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 43 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 44 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 45 [-]: LOADK     R5 K15       ; R5 := "Mask"
 46 [-]: CONST     R6 12        ; R6 := 12.000000
 47 [-]: GETTABLE  R7 R1 K10    ; R7 := R1["width"]
 48 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 49 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 50 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 51 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 52 [-]: LOADK     R5 K15       ; R5 := "Mask"
 53 [-]: CONST     R6 13        ; R6 := 13.000000
 54 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["height"]
 55 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 56 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 57 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 58 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 59 [-]: LOADK     R5 K16       ; R5 := "Panel.EdgeBottom"
 60 [-]: CONST     R6 1         ; R6 := 1.000000
 61 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["height"]
 62 [-]: SUB       R7 R7 K11    ; R7 := R7 - 1.000000
 63 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 64 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 65 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 66 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 67 [-]: LOADK     R5 K17       ; R5 := "Panel.EdgeRight"
 68 [-]: CONST     R6 0         ; R6 := 0.000000
 69 [-]: GETTABLE  R7 R1 K10    ; R7 := R1["width"]
 70 [-]: SUB       R7 R7 K11    ; R7 := R7 - 1.000000
 71 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 72 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 73 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 74 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 75 [-]: LOADK     R5 K17       ; R5 := "Panel.EdgeRight"
 76 [-]: CONST     R6 13        ; R6 := 13.000000
 77 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["height"]
 78 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 79 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 80 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 81 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 82 [-]: LOADK     R5 K18       ; R5 := "Panel.LocatorSeparator"
 83 [-]: CONST     R6 1         ; R6 := 1.000000
 84 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["height"]
 85 [-]: SUB       R7 R7 K19    ; R7 := R7 - 27.000000
 86 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 87 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 88 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 89 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 90 [-]: LOADK     R5 K20       ; R5 := "Panel.LocatorBtn"
 91 [-]: CONST     R6 1         ; R6 := 1.000000
 92 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["height"]
 93 [-]: SUB       R7 R7 K21    ; R7 := R7 - 25.000000
 94 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 95 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 96 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
 97 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
 98 [-]: LOADK     R5 K22       ; R5 := "Panel.LeftShadow"
 99 [-]: CONST     R6 13        ; R6 := 13.000000
100 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["height"]
101 [-]: SUB       R7 R7 K13    ; R7 := R7 - 2.000000
102 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
103 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
104 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
105 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
106 [-]: LOADK     R5 K23       ; R5 := "Panel.TopShadow"
107 [-]: CONST     R6 12        ; R6 := 12.000000
108 [-]: GETTABLE  R7 R1 K10    ; R7 := R1["width"]
109 [-]: SUB       R7 R7 K13    ; R7 := R7 - 2.000000
110 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
111 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
112 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
113 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
114 [-]: LOADK     R5 K24       ; R5 := "Panel.RightShadow"
115 [-]: CONST     R6 0         ; R6 := 0.000000
116 [-]: GETTABLE  R7 R1 K10    ; R7 := R1["width"]
117 [-]: SUB       R7 R7 K11    ; R7 := R7 - 1.000000
118 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
119 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
120 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
121 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
122 [-]: LOADK     R5 K24       ; R5 := "Panel.RightShadow"
123 [-]: CONST     R6 13        ; R6 := 13.000000
124 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["height"]
125 [-]: SUB       R7 R7 K13    ; R7 := R7 - 2.000000
126 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
127 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
128 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
129 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
130 [-]: LOADK     R5 K25       ; R5 := "Panel.BottomShadow"
131 [-]: CONST     R6 1         ; R6 := 1.000000
132 [-]: GETTABLE  R7 R1 K12    ; R7 := R1["height"]
133 [-]: SUB       R7 R7 K11    ; R7 := R7 - 1.000000
134 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
135 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
136 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0xf64b7262]
137 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
138 [-]: LOADK     R5 K25       ; R5 := "Panel.BottomShadow"
139 [-]: CONST     R6 12        ; R6 := 12.000000
140 [-]: GETTABLE  R7 R1 K10    ; R7 := R1["width"]
141 [-]: SUB       R7 R7 K13    ; R7 := R7 - 2.000000
142 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
143 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
144 [-]: SELF      R2 R2 K26    ; R3 := R2; R2 := R2[0x91a24e4b]
145 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mClipPath"]
146 [-]: LOADK     R5 K27       ; R5 := ".Panel.UserList.ScrollBar"
147 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
148 [-]: CONST     R5 12        ; R5 := 12.000000
149 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
150 [-]: GETGLOBAL R3 K28       ; R3 := 0x7b998233
151 [-]: MOVE      R4 R2        ; R4 := R2
152 [-]: CALL      R3 2 2       ; R3 := R3(R4)
153 [-]: TEST      R3 1         ; if R3 then PC := 165
154 [-]: JMP       165          ; PC := 165
155 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
156 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xf64b7262]
157 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
158 [-]: LOADK     R6 K29       ; R6 := "Panel.UserList.ScrollBar"
159 [-]: CONST     R7 0         ; R7 := 0.000000
160 [-]: GETTABLE  R8 R1 K10    ; R8 := R1["width"]
161 [-]: DIV       R9 R2 K13    ; R9 := R2 / 2.000000
162 [-]: SUB       R8 R8 R9     ; R8 := R8 - R9
163 [-]: ADD       R8 R8 K13    ; R8 := R8 + 2.000000
164 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
165 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
166 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3[0x67bc869f]
167 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
168 [-]: CONST     R6 0         ; R6 := 0.000000
169 [-]: GETTABLE  R7 R1 K31    ; R7 := R1["x"]
170 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
171 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
172 [-]: SELF      R3 R3 K30    ; R4 := R3; R3 := R3[0x67bc869f]
173 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
174 [-]: CONST     R6 1         ; R6 := 1.000000
175 [-]: GETTABLE  R7 R1 K32    ; R7 := R1["y"]
176 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
177 [-]: GETTABLE  R3 R0 K33    ; R3 := R0["mEmoteGrid"]
178 [-]: GETGLOBAL R4 K35       ; R4 := 0x5bced4c4
179 [-]: GETTABLE  R4 R4 K36    ; R82 := R4[0x55f27c30]
180 [-]: GETTABLE  R5 R1 K12    ; R5 := R1["height"]
181 [-]: GETTABLE  R6 R0 K33    ; R6 := R0["mEmoteGrid"]
182 [-]: GETTABLE  R6 R6 K37    ; R6 := R6["mRowSeparation"]
183 [-]: DIV       R5 R5 R6     ; R5 := R5 / R6
184 [-]: CALL      R4 2 2       ; R4 := R4(R5)
185 [-]: SETTABLE  R3 K34 R4    ; R3["mRows"] := R4
186 [-]: GETTABLE  R3 R0 K33    ; R3 := R0["mEmoteGrid"]
187 [-]: GETTABLE  R4 R0 K33    ; R4 := R0["mEmoteGrid"]
188 [-]: GETTABLE  R4 R4 K34    ; R4 := R4["mRows"]
189 [-]: GETTABLE  R5 R0 K33    ; R5 := R0["mEmoteGrid"]
190 [-]: GETTABLE  R5 R5 K39    ; R5 := R5["mColumns"]
191 [-]: MUL       R4 R4 R5     ; R4 := R4 * R5
192 [-]: SETTABLE  R3 K38 R4    ; R3["mVisibleElements"] := R4
193 [-]: GETTABLE  R3 R0 K33    ; R3 := R0["mEmoteGrid"]
194 [-]: GETTABLE  R3 R3 K40    ; R3 := R3["mScrollBar"]
195 [-]: SELF      R3 R3 K41    ; R4 := R3; R3 := R3[0x425b8f0d]
196 [-]: GETTABLE  R5 R1 K12    ; R5 := R1["height"]
197 [-]: SUB       R5 R5 K13    ; R5 := R5 - 2.000000
198 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
199 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
200 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
201 [-]: GETTABLE  R3 R0 K33    ; R3 := R0["mEmoteGrid"]
202 [-]: SELF      R3 R3 K42    ; R4 := R3; R3 := R3[0x71e9ac81]
203 [-]: LOADNIL   R5 R5        ; R5 := nil
204 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
205 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
206 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
207 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mParent"]
208 [-]: GETTABLE  R3 R3 K43    ; R3 := R3["mVisualMode"]
209 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mParent"]
210 [-]: GETTABLE  R4 R4 K44    ; R4 := R4["VISUAL_MODE_MENU_SIMPLE"]
211 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 228
212 [-]: JMP       228          ; PC := 228
213 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mParent"]
214 [-]: GETTABLE  R3 R3 K43    ; R3 := R3["mVisualMode"]
215 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mParent"]
216 [-]: GETTABLE  R4 R4 K45    ; R4 := R4["VISUAL_MODE_GAMEPLAY_SIMPLE"]
217 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 228
218 [-]: JMP       228          ; PC := 228
219 [-]: SELF      R3 R0 K46    ; R4 := R0; R3 := R0[0xf1243bbe]
220 [-]: GETTABLE  R5 R1 K12    ; R5 := R1["height"]
221 [-]: CALL      R3 3 1       ; R3(R4,R5)
222 [-]: GETTABLE  R3 R0 K47    ; R3 := R0["mListControl"]
223 [-]: SELF      R3 R3 K42    ; R4 := R3; R3 := R3[0x71e9ac81]
224 [-]: LOADNIL   R5 R5        ; R5 := nil
225 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
226 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
227 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
228 [-]: RETURN    R0 1         ; return 


; Function #51.11:
;
; Name:            
; Defined at line: 1718
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R82 := R2[0x06d055f9]
  3 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mUserLocator"]
  4 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mIsExpanded"]
  5 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mUserLocator"]
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mGridWidth"]
  7 [-]: UNM       R4 R4        ; R4 := ^ R4
  8 [-]: CONST     R5 0         ; R5 := 0.000000
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: GETGLOBAL R3 K4        ; R3 := mWindow
 11 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mUserPanel"]
 12 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mUserLocator"]
 13 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mIsExpanded"]
 14 [-]: TEST      R3 1         ; if R3 then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 17 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xc0a3774b]
 18 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 19 [-]: LOADK     R6 K9        ; R6 := "AlphabetIndex"
 20 [-]: CONST     R7 11        ; R7 := 11.000000
 21 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 22 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 23 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 24 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x19ad3f57]
 25 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 26 [-]: LOADK     R6 K9        ; R6 := "AlphabetIndex"
 27 [-]: LOADK     R7 K11       ; R7 := "noMenuSelection"
 28 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 29 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 30 [-]: GETGLOBAL R3 K12       ; R3 := 0x25312c9b
 31 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 32 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 33 [-]: LOADK     R6 K13       ; R6 := ".AlphabetIndex.Grid"
 34 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 35 [-]: CONST     R6 8         ; R6 := 8.000000
 36 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 37 [-]: CONST     R8 0         ; R8 := 0.000000
 38 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 39 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 40 [-]: MOVE      R9 R2        ; R9 := R2
 41 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 42 [-]: CONST     R9 0         ; R9 := 0.250000
 43 [-]: CONST     R10 0        ; R10 := 0.000000
 44 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 45 [-]: GETGLOBAL R3 K12       ; R3 := 0x25312c9b
 46 [-]: GETGLOBAL R4 K6        ; R4 := 0xae91e43b
 47 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 48 [-]: LOADK     R6 K15       ; R6 := ".AlphabetIndex.Blurer"
 49 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 50 [-]: CONST     R6 8         ; R6 := 8.000000
 51 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 52 [-]: CONST     R8 0         ; R8 := 0.000000
 53 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 54 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 55 [-]: MOVE      R9 R2        ; R9 := R2
 56 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 57 [-]: CONST     R9 0         ; R9 := 0.250000
 58 [-]: CONST     R10 0        ; R10 := 0.000000
 59 [-]: CLOSURE   R11 0        ; R11 := closure(Function #51.11.1)
 60 [-]: MOVE      R0 R0        ; R0 := R0
 61 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 62 [-]: GETGLOBAL R3 K4        ; R3 := mWindow
 63 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["mUserPanel"]
 64 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mUserLocator"]
 65 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0x7e361753]
 66 [-]: CALL      R3 2 1       ; R3(R4)
 67 [-]: RETURN    R0 1         ; return 


; Function #51.11.1:
;
; Name:            
; Defined at line: 1727
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mUserPanel"]
  3 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mUserLocator"]
  4 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mIsExpanded"]
  5 [-]: TEST      R0 1         ; if R0 then PC := 15
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
  8 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0xc0a3774b]
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mClipPath"]
 11 [-]: LOADK     R3 K7        ; R3 := "AlphabetIndex"
 12 [-]: CONST     R4 11        ; R4 := 11.000000
 13 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 14 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 15 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
 16 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0x19ad3f57]
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mClipPath"]
 19 [-]: LOADK     R3 K7        ; R3 := "AlphabetIndex"
 20 [-]: LOADK     R4 K9        ; R4 := "noMenuSelection"
 21 [-]: GETGLOBAL R5 K0        ; R5 := mWindow
 22 [-]: GETTABLE  R5 R5 K1     ; R5 := R5["mUserPanel"]
 23 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mUserLocator"]
 24 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["mIsExpanded"]
 25 [-]: NOT       R5 R5        ; R5 := not R5
 26 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 27 [-]: RETURN    R0 1         ; return 


; Function #51.12:
;
; Name:            
; Defined at line: 1737
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0xaf5300dc]
  3 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipPath"]
  4 [-]: LOADK     R6 K3        ; R6 := ".Panel"
  5 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  6 [-]: CALL      R3 3 1       ; R3(R4,R5)
  7 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
  8 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0xaf5300dc]
  9 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipPath"]
 10 [-]: LOADK     R6 K4        ; R6 := ".AlphabetIndex"
 11 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 12 [-]: CALL      R3 3 1       ; R3(R4,R5)
 13 [-]: EQ        1 R1 K5      ; if R1 == nil then PC := 17
 14 [-]: JMP       17           ; PC := 17
 15 [-]: SETTABLE  R0 K6 R1     ; R0["mIsExpanded"] := R1
 16 [-]: JMP       20           ; PC := 20
 17 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mIsExpanded"]
 18 [-]: NOT       R3 R3        ; R3 := not R3
 19 [-]: SETTABLE  R0 K6 R3     ; R0["mIsExpanded"] := R3
 20 [-]: GETGLOBAL R3 K7        ; R3 := mWindow
 21 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x9307aa51]
 22 [-]: GETGLOBAL R5 K7        ; R5 := mWindow
 23 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mWindow"]
 24 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["x"]
 25 [-]: GETGLOBAL R6 K7        ; R6 := mWindow
 26 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["mWindow"]
 27 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["y"]
 28 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 29 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mIsExpanded"]
 30 [-]: TEST      R3 1         ; if R3 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["mUserLocator"]
 33 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mIsExpanded"]
 34 [-]: TEST      R3 0         ; if not R3 then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: SELF      R3 R0 K12    ; R4 := R0; R3 := R0[0xcc9c1404]
 37 [-]: CALL      R3 2 1       ; R3(R4)
 38 [-]: GETUPVAL  R3 U0        ; R3 := U0
 39 [-]: GETTABLE  R3 R3 K13    ; R82 := R3[0x06d055f9]
 40 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mIsExpanded"]
 41 [-]: CONST     R5 0         ; R5 := 0.000000
 42 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["mActiveRect"]
 43 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["width"]
 44 [-]: UNM       R6 R6        ; R6 := ^ R6
 45 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 46 [-]: GETUPVAL  R4 U0        ; R4 := U0
 47 [-]: GETTABLE  R4 R4 K13    ; R82 := R4[0x06d055f9]
 48 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mIsExpanded"]
 49 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["mActiveRect"]
 50 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["width"]
 51 [-]: CONST     R7 0         ; R7 := 0.000000
 52 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 53 [-]: TEST      R2 0         ; if not R2 then PC := 107
 54 [-]: JMP       107          ; PC := 107
 55 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 56 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0xc0a3774b]
 57 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
 58 [-]: LOADK     R8 K17       ; R8 := "Panel"
 59 [-]: CONST     R9 11        ; R9 := 11.000000
 60 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["mIsExpanded"]
 61 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 62 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 63 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5[0xf64b7262]
 64 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
 65 [-]: LOADK     R8 K17       ; R8 := "Panel"
 66 [-]: CONST     R9 0         ; R9 := 0.000000
 67 [-]: MOVE      R10 R3       ; R10 := R3
 68 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 69 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 70 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0xc0a3774b]
 71 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
 72 [-]: LOADK     R8 K19       ; R8 := "Blurer"
 73 [-]: CONST     R9 11        ; R9 := 11.000000
 74 [-]: GETTABLE  R10 R0 K6    ; R10 := R0["mIsExpanded"]
 75 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 76 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 77 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5[0xf64b7262]
 78 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
 79 [-]: LOADK     R8 K19       ; R8 := "Blurer"
 80 [-]: CONST     R9 0         ; R9 := 0.000000
 81 [-]: MOVE      R10 R3       ; R10 := R3
 82 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 83 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 84 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0xc0a3774b]
 85 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
 86 [-]: LOADK     R8 K20       ; R8 := "AlphabetIndex"
 87 [-]: CONST     R9 11        ; R9 := 11.000000
 88 [-]: GETGLOBAL R10 K21      ; R10 := 0x7b998233
 89 [-]: GETTABLE  R11 R0 K11   ; R11 := R0["mUserLocator"]
 90 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 91 [-]: TEST      R10 1        ; if R10 then PC := 96
 92 [-]: JMP       96           ; PC := 96
 93 [-]: GETTABLE  R10 R0 K11   ; R10 := R0["mUserLocator"]
 94 [-]: GETTABLE  R10 R10 K6   ; R10 := R10["mIsExpanded"]
 95 [-]: JMP       98           ; PC := 98
 96 [-]: OP_LOADBOOL R10 0 1      ; R10 := false; PC := 97
 97 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
 98 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 99 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
100 [-]: SELF      R5 R5 K18    ; R6 := R5; R5 := R5[0xf64b7262]
101 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
102 [-]: LOADK     R8 K20       ; R8 := "AlphabetIndex"
103 [-]: CONST     R9 0         ; R9 := 0.000000
104 [-]: MOVE      R10 R4       ; R10 := R4
105 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
106 [-]: JMP       188          ; PC := 188
107 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mIsExpanded"]
108 [-]: TEST      R5 0         ; if not R5 then PC := 140
109 [-]: JMP       140          ; PC := 140
110 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
111 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0xc0a3774b]
112 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
113 [-]: LOADK     R8 K17       ; R8 := "Panel"
114 [-]: CONST     R9 11        ; R9 := 11.000000
115 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
116 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
117 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
118 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0xc0a3774b]
119 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
120 [-]: LOADK     R8 K19       ; R8 := "Blurer"
121 [-]: CONST     R9 11        ; R9 := 11.000000
122 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
123 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
124 [-]: GETGLOBAL R5 K21       ; R5 := 0x7b998233
125 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mUserLocator"]
126 [-]: CALL      R5 2 2       ; R5 := R5(R6)
127 [-]: TEST      R5 1         ; if R5 then PC := 140
128 [-]: JMP       140          ; PC := 140
129 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["mUserLocator"]
130 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["mIsExpanded"]
131 [-]: TEST      R5 0         ; if not R5 then PC := 140
132 [-]: JMP       140          ; PC := 140
133 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
134 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0xc0a3774b]
135 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
136 [-]: LOADK     R8 K20       ; R8 := "AlphabetIndex"
137 [-]: CONST     R9 11        ; R9 := 11.000000
138 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
139 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
140 [-]: SETTABLE  R0 K22 K23   ; R0["mUserListInterpolating"] := true
141 [-]: GETGLOBAL R5 K24       ; R5 := 0x25312c9b
142 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
143 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
144 [-]: LOADK     R8 K3        ; R8 := ".Panel"
145 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
146 [-]: CONST     R8 2         ; R8 := 2.000000
147 [-]: NEWTABLE  R9 1 0       ; R9 := {}
148 [-]: CONST     R10 0        ; R10 := 0.000000
149 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
150 [-]: NEWTABLE  R10 1 0      ; R10 := {}
151 [-]: MOVE      R11 R3       ; R11 := R3
152 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
153 [-]: CONST     R11 0        ; R11 := 0.250000
154 [-]: CONST     R12 0        ; R12 := 0.000000
155 [-]: CLOSURE   R13 0        ; R13 := closure(Function #51.12.1)
156 [-]: MOVE      R0 R0        ; R0 := R0
157 [-]: CALL      R5 9 1       ; R5(R6,R7,R8,R9,R10,R11,R12,R13)
158 [-]: GETGLOBAL R5 K24       ; R5 := 0x25312c9b
159 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
160 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
161 [-]: LOADK     R8 K26       ; R8 := ".Blurer"
162 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
163 [-]: CONST     R8 2         ; R8 := 2.000000
164 [-]: NEWTABLE  R9 1 0       ; R9 := {}
165 [-]: CONST     R10 0        ; R10 := 0.000000
166 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
167 [-]: NEWTABLE  R10 1 0      ; R10 := {}
168 [-]: MOVE      R11 R3       ; R11 := R3
169 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
170 [-]: CONST     R11 0        ; R11 := 0.250000
171 [-]: CONST     R12 0        ; R12 := 0.000000
172 [-]: CALL      R5 8 1       ; R5(R6,R7,R8,R9,R10,R11,R12)
173 [-]: GETGLOBAL R5 K24       ; R5 := 0x25312c9b
174 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
175 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipPath"]
176 [-]: LOADK     R8 K4        ; R8 := ".AlphabetIndex"
177 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
178 [-]: CONST     R8 2         ; R8 := 2.000000
179 [-]: NEWTABLE  R9 1 0       ; R9 := {}
180 [-]: CONST     R10 0        ; R10 := 0.000000
181 [-]: SETLIST   R9 1 1       ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
182 [-]: NEWTABLE  R10 1 0      ; R10 := {}
183 [-]: MOVE      R11 R4       ; R11 := R4
184 [-]: SETLIST   R10 1 1      ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 1
185 [-]: CONST     R11 0        ; R11 := 0.250000
186 [-]: CONST     R12 0        ; R12 := 0.000000
187 [-]: CALL      R5 8 1       ; R5(R6,R7,R8,R9,R10,R11,R12)
188 [-]: RETURN    R0 1         ; return 


; Function #51.12.1:
;
; Name:            
; Defined at line: 1777
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R0 := R0["mIsExpanded"]
  3 [-]: TEST      R0 1         ; if R0 then PC := 29
  4 [-]: JMP       29           ; PC := 29
  5 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xc0a3774b]
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mClipPath"]
  9 [-]: LOADK     R3 K4        ; R3 := "Panel"
 10 [-]: CONST     R4 11        ; R4 := 11.000000
 11 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 12 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 13 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
 14 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xc0a3774b]
 15 [-]: GETUPVAL  R2 U0        ; R2 := U0
 16 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mClipPath"]
 17 [-]: LOADK     R3 K5        ; R3 := "Blurer"
 18 [-]: CONST     R4 11        ; R4 := 11.000000
 19 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 20 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 21 [-]: GETGLOBAL R0 K1        ; R0 := 0xae91e43b
 22 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xc0a3774b]
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mClipPath"]
 25 [-]: LOADK     R3 K6        ; R3 := "AlphabetIndex"
 26 [-]: CONST     R4 11        ; R4 := 11.000000
 27 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 28 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 29 [-]: GETUPVAL  R0 U0        ; R0 := U0
 30 [-]: SETTABLE  R0 K7 K8     ; R0["mUserListInterpolating"] := false
 31 [-]: RETURN    R0 1         ; return 


; Function #51.13:
;
; Name:            
; Defined at line: 1792
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mIsExpanded"]
  2 [-]: TEST      R3 0         ; if not R3 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
  5 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mIsVisible"]
  6 [-]: EQ        0 R3 R1      ; if R3 ~= R1 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0[0x81eabcd2]
  9 [-]: LOADNIL   R5 R5        ; R5 := nil
 10 [-]: MOVE      R6 R2        ; R6 := R2
 11 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 12 [-]: JMP       21           ; PC := 21
 13 [-]: TEST      R1 1         ; if R1 then PC := 21
 14 [-]: JMP       21           ; PC := 21
 15 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mUserLocator"]
 16 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mIsExpanded"]
 17 [-]: TEST      R3 0         ; if not R3 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: SELF      R3 R0 K5     ; R4 := R0; R3 := R0[0xcc9c1404]
 20 [-]: CALL      R3 2 1       ; R3(R4)
 21 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 22 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xc0a3774b]
 23 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 24 [-]: LOADK     R6 K9        ; R6 := "Panel.LocatorSeparator"
 25 [-]: CONST     R7 11        ; R7 := 11.000000
 26 [-]: MOVE      R8 R1        ; R8 := R1
 27 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 28 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 29 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xc0a3774b]
 30 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 31 [-]: LOADK     R6 K10       ; R6 := "Panel.LocatorBtn"
 32 [-]: CONST     R7 11        ; R7 := 11.000000
 33 [-]: MOVE      R8 R1        ; R8 := R1
 34 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 35 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mListControl"]
 36 [-]: TESTSET   R4 R1 0      ; if not R1 then PC := 39 else R4 := R1
 37 [-]: JMP       39           ; PC := 39
 38 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mIsExpanded"]
 39 [-]: SETTABLE  R3 K2 R4     ; R3["mIsVisible"] := R4
 40 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 41 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xc0a3774b]
 42 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 43 [-]: LOADK     R6 K11       ; R6 := "Panel.UserList"
 44 [-]: CONST     R7 11        ; R7 := 11.000000
 45 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mListControl"]
 46 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
 47 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 48 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 49 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x67bc869f]
 50 [-]: LOADK     R5 K13       ; R5 := "Window.SendMessageBar.UserListBtn.Arrow"
 51 [-]: CONST     R6 14        ; R6 := 14.000000
 52 [-]: GETUPVAL  R7 U0        ; R7 := U0
 53 [-]: GETTABLE  R7 R7 K14    ; R82 := R7[0x06d055f9]
 54 [-]: TESTSET   R8 R1 0      ; if not R1 then PC := 57 else R8 := R1
 55 [-]: JMP       57           ; PC := 57
 56 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mIsExpanded"]
 57 [-]: CONST     R9 180       ; R9 := 180.000000
 58 [-]: CONST     R10 0        ; R10 := 0.000000
 59 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 60 [-]: CALL      R3 0 1       ; R3(R4,...)
 61 [-]: GETTABLE  R3 R0 K15    ; R3 := R0["mEmoteGrid"]
 62 [-]: TEST      R1 1         ; if R1 then PC := 66
 63 [-]: JMP       66           ; PC := 66
 64 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mIsExpanded"]
 65 [-]: JMP       68           ; PC := 68
 66 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 67
 67 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 68 [-]: SETTABLE  R3 K2 R4     ; R3["mIsVisible"] := R4
 69 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 70 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xc0a3774b]
 71 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mClipPath"]
 72 [-]: LOADK     R6 K16       ; R6 := "Panel.EmoteGrid"
 73 [-]: CONST     R7 11        ; R7 := 11.000000
 74 [-]: GETTABLE  R8 R0 K15    ; R8 := R0["mEmoteGrid"]
 75 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
 76 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 77 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 78 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x67bc869f]
 79 [-]: LOADK     R5 K17       ; R5 := "Window.SendMessageBar.EmojiBtn.Arrow"
 80 [-]: CONST     R6 14        ; R6 := 14.000000
 81 [-]: GETUPVAL  R7 U0        ; R7 := U0
 82 [-]: GETTABLE  R7 R7 K14    ; R82 := R7[0x06d055f9]
 83 [-]: TEST      R1 1         ; if R1 then PC := 87
 84 [-]: JMP       87           ; PC := 87
 85 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mIsExpanded"]
 86 [-]: JMP       89           ; PC := 89
 87 [-]: OP_LOADBOOL R8 0 1       ; R8 := false; PC := 88
 88 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 89 [-]: CONST     R9 180       ; R9 := 180.000000
 90 [-]: CONST     R10 0        ; R10 := 0.000000
 91 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 92 [-]: CALL      R3 0 1       ; R3(R4,...)
 93 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 94 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x67bc869f]
 95 [-]: LOADK     R5 K18       ; R5 := "Window.MouseCatcherBtn"
 96 [-]: CONST     R6 12        ; R6 := 12.000000
 97 [-]: GETGLOBAL R7 K19       ; R7 := mWindow
 98 [-]: GETTABLE  R7 R7 K19    ; R7 := R7["mWindow"]
 99 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["width"]
100 [-]: GETUPVAL  R8 U0        ; R8 := U0
101 [-]: GETTABLE  R8 R8 K14    ; R82 := R8[0x06d055f9]
102 [-]: GETTABLE  R9 R0 K1     ; R9 := R0["mListControl"]
103 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["mIsVisible"]
104 [-]: TEST      R9 1         ; if R9 then PC := 108
105 [-]: JMP       108          ; PC := 108
106 [-]: GETTABLE  R9 R0 K15    ; R9 := R0["mEmoteGrid"]
107 [-]: GETTABLE  R9 R9 K2     ; R9 := R9["mIsVisible"]
108 [-]: GETTABLE  R10 R0 K21   ; R10 := R0["mActiveRect"]
109 [-]: GETTABLE  R10 R10 K20  ; R10 := R10["width"]
110 [-]: CONST     R11 0        ; R11 := 0.000000
111 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
112 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
113 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
114 [-]: GETGLOBAL R3 K22       ; R3 := 0x34291f5c
115 [-]: GETTABLE  R3 R3 K23    ; R82 := R3[0x1467d5f4]
116 [-]: CALL      R3 1 2       ; R3 := R3()
117 [-]: TEST      R3 0         ; if not R3 then PC := 192
118 [-]: JMP       192          ; PC := 192
119 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
120 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3[0xaade900e]
121 [-]: LOADK     R5 K25       ; R5 := "Window.SendMessageBar.EmojiBtn.Highlight"
122 [-]: CONST     R6 11        ; R6 := 11.000000
123 [-]: GETTABLE  R7 R0 K15    ; R7 := R0["mEmoteGrid"]
124 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mIsVisible"]
125 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
126 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
127 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x67bc869f]
128 [-]: LOADK     R5 K26       ; R5 := "Window.SendMessageBar.EmojiBtn"
129 [-]: CONST     R6 10        ; R6 := 10.000000
130 [-]: GETUPVAL  R7 U0        ; R7 := U0
131 [-]: GETTABLE  R7 R7 K14    ; R82 := R7[0x06d055f9]
132 [-]: GETTABLE  R8 R0 K15    ; R8 := R0["mEmoteGrid"]
133 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
134 [-]: CONST     R9 100       ; R9 := 100.000000
135 [-]: CONST     R10 50       ; R10 := 50.000000
136 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
137 [-]: CALL      R3 0 1       ; R3(R4,...)
138 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
139 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3[0xaade900e]
140 [-]: LOADK     R5 K27       ; R5 := "Window.SendMessageBar.UserListBtn.Highlight"
141 [-]: CONST     R6 11        ; R6 := 11.000000
142 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mListControl"]
143 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mIsVisible"]
144 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
145 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
146 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x67bc869f]
147 [-]: LOADK     R5 K28       ; R5 := "Window.SendMessageBar.UserListBtn"
148 [-]: CONST     R6 10        ; R6 := 10.000000
149 [-]: GETUPVAL  R7 U0        ; R7 := U0
150 [-]: GETTABLE  R7 R7 K14    ; R82 := R7[0x06d055f9]
151 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mListControl"]
152 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
153 [-]: CONST     R9 100       ; R9 := 100.000000
154 [-]: CONST     R10 50       ; R10 := 50.000000
155 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
156 [-]: CALL      R3 0 1       ; R3(R4,...)
157 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
158 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3[0xaade900e]
159 [-]: LOADK     R5 K29       ; R5 := "Window.SendMessageBar.HideWindowBtn.Highlight"
160 [-]: CONST     R6 11        ; R6 := 11.000000
161 [-]: GETTABLE  R7 R0 K15    ; R7 := R0["mEmoteGrid"]
162 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mIsVisible"]
163 [-]: TEST      R7 1         ; if R7 then PC := 169
164 [-]: JMP       169          ; PC := 169
165 [-]: GETTABLE  R7 R0 K1     ; R7 := R0["mListControl"]
166 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mIsVisible"]
167 [-]: NOT       R7 R7        ; R7 := not R7
168 [-]: JMP       171          ; PC := 171
169 [-]: OP_LOADBOOL R7 0 1       ; R7 := false; PC := 170
170 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
171 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
172 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
173 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x67bc869f]
174 [-]: LOADK     R5 K30       ; R5 := "Window.SendMessageBar.HideWindowBtn"
175 [-]: CONST     R6 10        ; R6 := 10.000000
176 [-]: GETUPVAL  R7 U0        ; R7 := U0
177 [-]: GETTABLE  R7 R7 K14    ; R82 := R7[0x06d055f9]
178 [-]: GETTABLE  R8 R0 K15    ; R8 := R0["mEmoteGrid"]
179 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
180 [-]: TEST      R8 1         ; if R8 then PC := 186
181 [-]: JMP       186          ; PC := 186
182 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mListControl"]
183 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mIsVisible"]
184 [-]: NOT       R8 R8        ; R8 := not R8
185 [-]: JMP       188          ; PC := 188
186 [-]: OP_LOADBOOL R8 0 1       ; R8 := false; PC := 187
187 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
188 [-]: CONST     R9 100       ; R9 := 100.000000
189 [-]: CONST     R10 50       ; R10 := 50.000000
190 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
191 [-]: CALL      R3 0 1       ; R3(R4,...)
192 [-]: GETGLOBAL R3 K31       ; R3 := 0x7b998233
193 [-]: GETGLOBAL R4 K32       ; R4 := mProfileSettings
194 [-]: CALL      R3 2 2       ; R3 := R3(R4)
195 [-]: TEST      R3 1         ; if R3 then PC := 207
196 [-]: JMP       207          ; PC := 207
197 [-]: GETGLOBAL R3 K32       ; R3 := mProfileSettings
198 [-]: SELF      R3 R3 K33    ; R4 := R3; R3 := R3[0xf0f86a6e]
199 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mListControl"]
200 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mIsVisible"]
201 [-]: CALL      R3 3 1       ; R3(R4,R5)
202 [-]: GETGLOBAL R3 K32       ; R3 := mProfileSettings
203 [-]: SELF      R3 R3 K34    ; R4 := R3; R3 := R3[0xcf61fc85]
204 [-]: GETTABLE  R5 R0 K15    ; R5 := R0["mEmoteGrid"]
205 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mIsVisible"]
206 [-]: CALL      R3 3 1       ; R3(R4,R5)
207 [-]: GETUPVAL  R3 U0        ; R3 := U0
208 [-]: GETTABLE  R3 R3 K35    ; R82 := R3[0x659d451f]
209 [-]: GETGLOBAL R4 K36       ; R4 := 0x0032441c
210 [-]: GETTABLE  R4 R4 K37    ; R4 := R4["UISound_ItemTip"]
211 [-]: CALL      R3 2 1       ; R3(R4)
212 [-]: SELF      R3 R0 K38    ; R4 := R0; R3 := R0[0x3867cef1]
213 [-]: CALL      R3 2 1       ; R3(R4)
214 [-]: RETURN    R0 1         ; return 


; Function #52:
;
; Name:            
; Defined at line: 1836
; #Upvalues:       5
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: SETTABLE  R2 K0 R0     ; R2["mParent"] := R0
  3 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  4 [-]: SETTABLE  R2 K1 R3     ; R2["mWindow"] := R3
  5 [-]: SETTABLE  R2 K2 R1     ; R2["mClipName"] := R1
  6 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  7 [-]: SETTABLE  R2 K3 R3     ; R2["mClipParent"] := R3
  8 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  9 [-]: LOADK     R4 K5        ; R4 := "."
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 12 [-]: SETTABLE  R2 K4 R3     ; R2["mClipPath"] := R3
 13 [-]: SETTABLE  R2 K6 K7     ; R2["mIsFocused"] := false
 14 [-]: SETTABLE  R2 K8 K9     ; R2["MAX_MSG_LIMIT"] := 400.000000
 15 [-]: SETTABLE  R2 K10 K11   ; R2["MAX_MSG_LENGTH_NORMAL"] := 300.000000
 16 [-]: SETTABLE  R2 K12 K13   ; R2["MAX_MSG_LENGTH_RECRUIT_TRADE"] := 180.000000
 17 [-]: GETTABLE  R3 R2 K10    ; R3 := R2["MAX_MSG_LENGTH_NORMAL"]
 18 [-]: SETTABLE  R2 K14 R3    ; R2["mMaxMsgLength"] := R3
 19 [-]: GETGLOBAL R3 K16       ; R3 := 0xae91e43b
 20 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3[0x91a24e4b]
 21 [-]: GETTABLE  R5 R2 K4     ; R5 := R2["mClipPath"]
 22 [-]: LOADK     R6 K18       ; R6 := ".Prompt"
 23 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 24 [-]: CONST     R6 0         ; R6 := 0.000000
 25 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 26 [-]: SETTABLE  R2 K15 R3    ; R2["mInitPromptXPos"] := R3
 27 [-]: GETGLOBAL R3 K16       ; R3 := 0xae91e43b
 28 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3[0x42b04007]
 29 [-]: LOADK     R5 K21       ; R5 := "<WARNING>"
 30 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 31 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 32 [-]: SETTABLE  R2 K19 R3    ; R2["CharLimitWarning"] := R3
 33 [-]: GETGLOBAL R3 K16       ; R3 := 0xae91e43b
 34 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3[0x42b04007]
 35 [-]: LOADK     R5 K23       ; R5 := "<PROBLEM>"
 36 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 37 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 38 [-]: SETTABLE  R2 K22 R3    ; R2["CharLimitError"] := R3
 39 [-]: GETGLOBAL R3 K16       ; R3 := 0xae91e43b
 40 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3[0x42b04007]
 41 [-]: LOADK     R5 K25       ; R5 := "<TIMER>"
 42 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 43 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 44 [-]: SETTABLE  R2 K24 R3    ; R2["TimerIcon"] := R3
 45 [-]: SETTABLE  R2 K26 K27   ; R2["CharLimitFlashTime"] := 0.000000
 46 [-]: CLOSURE   R3 0         ; R3 := closure(Function #52.1)
 47 [-]: GETUPVAL  R0 U0        ; R0 := U0
 48 [-]: GETUPVAL  R0 U1        ; R0 := U1
 49 [-]: GETUPVAL  R0 U2        ; R0 := U2
 50 [-]: GETUPVAL  R0 U3        ; R0 := U3
 51 [-]: GETUPVAL  R0 U4        ; R0 := U4
 52 [-]: SETTABLE  R2 K28 R3    ; R2["Initialize"] := R3
 53 [-]: CLOSURE   R3 1         ; R3 := closure(Function #52.2)
 54 [-]: GETUPVAL  R0 U0        ; R0 := U0
 55 [-]: SETTABLE  R2 K29 R3    ; R2["SetSize"] := R3
 56 [-]: CLOSURE   R3 2         ; R3 := closure(Function #52.3)
 57 [-]: SETTABLE  R2 K30 R3    ; R2["SetFocus"] := R3
 58 [-]: CLOSURE   R3 3         ; R3 := closure(Function #52.4)
 59 [-]: SETTABLE  R2 K31 R3    ; R2["UpdateDefaultText"] := R3
 60 [-]: CLOSURE   R3 4         ; R3 := closure(Function #52.5)
 61 [-]: SETTABLE  R2 K32 R3    ; R2["GiveChatFocus"] := R3
 62 [-]: RETURN    R2 2         ; return R2
 63 [-]: RETURN    R0 1         ; return 


; Function #52.1:
;
; Name:            
; Defined at line: 1854
; #Upvalues:       5
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  2 [-]: SETTABLE  R3 K1 K2     ; R3["x"] := 0.000000
  3 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  4 [-]: SETTABLE  R3 K3 K2     ; R3["y"] := 0.000000
  5 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  6 [-]: SETTABLE  R3 K4 K5     ; R3["ReverseY"] := true
  7 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
  8 [-]: SETTABLE  R3 K6 K2     ; R3["width"] := 0.000000
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
 10 [-]: SETTABLE  R3 K7 K5     ; R3["ReverseWidth"] := true
 11 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mWindow"]
 12 [-]: SETTABLE  R3 K8 K9     ; R3["height"] := 35.000000
 13 [-]: SELF      R3 R0 K10    ; R4 := R0; R3 := R0[0xcbf89887]
 14 [-]: MOVE      R5 R1        ; R5 := R1
 15 [-]: MOVE      R6 R2        ; R6 := R2
 16 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 17 [-]: CLOSURE   R3 0         ; R3 := closure(Function #52.1.1)
 18 [-]: GETUPVAL  R0 U0        ; R0 := U0
 19 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
 20 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
 21 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 22 [-]: LOADK     R7 K14       ; R7 := "Arrow"
 23 [-]: CONST     R8 9         ; R8 := 9.000000
 24 [-]: GETUPVAL  R9 U1        ; R9 := U1
 25 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 26 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
 27 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
 28 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 29 [-]: LOADK     R7 K14       ; R7 := "Arrow"
 30 [-]: CONST     R8 10        ; R8 := 10.000000
 31 [-]: CONST     R9 25        ; R9 := 25.000000
 32 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 33 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
 34 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0x1e5b5cfe]
 35 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 36 [-]: LOADK     R7 K16       ; R7 := ".EmojiBtn"
 37 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 38 [-]: LOADK     R7 K17       ; R7 := "EmojiBtnFocused"
 39 [-]: LOADK     R8 K18       ; R8 := "EmojiBtnUnfocused"
 40 [-]: LOADK     R9 K19       ; R9 := "EmojiBtnPressed"
 41 [-]: LOADNIL   R10 R10      ; R10 := nil
 42 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 43 [-]: MOVE      R4 R3        ; R4 := R3
 44 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mClipPath"]
 45 [-]: LOADK     R6 K16       ; R6 := ".EmojiBtn"
 46 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 47 [-]: LOADK     R6 K20       ; R6 := "<MENU_RTRIGGER1>"
 48 [-]: GETGLOBAL R7 K21       ; R7 := 0x9aa05fa1
 49 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 50 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
 51 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
 52 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 53 [-]: LOADK     R7 K22       ; R7 := "EmojiBtn.Callout"
 54 [-]: CONST     R8 0         ; R8 := 0.000000
 55 [-]: GETGLOBAL R9 K11       ; R9 := 0xae91e43b
 56 [-]: SELF      R9 R9 K23    ; R10 := R9; R9 := R9[0x91a24e4b]
 57 [-]: GETTABLE  R11 R0 K13   ; R11 := R0["mClipPath"]
 58 [-]: LOADK     R12 K24      ; R12 := ".EmojiBtn.Callout"
 59 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 60 [-]: CONST     R12 0        ; R12 := 0.000000
 61 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 62 [-]: SUB       R9 R9 K25    ; R9 := R9 - 5.000000
 63 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 64 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
 65 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0x1e5b5cfe]
 66 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 67 [-]: LOADK     R7 K26       ; R7 := ".UserListBtn"
 68 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 69 [-]: LOADK     R7 K27       ; R7 := "UserListBtnFocused"
 70 [-]: LOADK     R8 K28       ; R8 := "UserListBtnUnfocused"
 71 [-]: LOADK     R9 K29       ; R9 := "UserListBtnPressed"
 72 [-]: LOADNIL   R10 R10      ; R10 := nil
 73 [-]: CALL      R4 7 1       ; R4(R5,R6,R7,R8,R9,R10)
 74 [-]: MOVE      R4 R3        ; R4 := R3
 75 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mClipPath"]
 76 [-]: LOADK     R6 K26       ; R6 := ".UserListBtn"
 77 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 78 [-]: LOADK     R6 K30       ; R6 := ""
 79 [-]: GETGLOBAL R7 K31       ; R7 := 0x7db1db7e
 80 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 81 [-]: MOVE      R4 R3        ; R4 := R3
 82 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mClipPath"]
 83 [-]: LOADK     R6 K32       ; R6 := ".HyperlinkBtn"
 84 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 85 [-]: LOADK     R6 K33       ; R6 := "<MENU_LTHUMB>"
 86 [-]: GETGLOBAL R7 K34       ; R7 := 0x45afe089
 87 [-]: CONST     R8 32        ; R8 := 32.000000
 88 [-]: CONST     R9 32        ; R9 := 32.000000
 89 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 90 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
 91 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4[0xc0a3774b]
 92 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
 93 [-]: LOADK     R7 K36       ; R7 := "HyperlinkBtn"
 94 [-]: CONST     R8 11        ; R8 := 11.000000
 95 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 96 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 97 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
 98 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4[0xc0a3774b]
 99 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
100 [-]: LOADK     R7 K37       ; R7 := "HyperlinkBtn.Callout"
101 [-]: CONST     R8 11        ; R8 := 11.000000
102 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
103 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
104 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
105 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4[0xc0a3774b]
106 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
107 [-]: LOADK     R7 K38       ; R7 := "HyperlinkBtn.Arrow"
108 [-]: CONST     R8 11        ; R8 := 11.000000
109 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
110 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
111 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
112 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
113 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
114 [-]: LOADK     R7 K39       ; R7 := "HyperlinkBtn.Icon"
115 [-]: CONST     R8 10        ; R8 := 10.000000
116 [-]: CONST     R9 100       ; R9 := 100.000000
117 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
118 [-]: MOVE      R4 R3        ; R4 := R3
119 [-]: GETTABLE  R5 R0 K13    ; R5 := R0["mClipPath"]
120 [-]: LOADK     R6 K40       ; R6 := ".HideWindowBtn"
121 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
122 [-]: LOADK     R6 K30       ; R6 := ""
123 [-]: GETGLOBAL R7 K41       ; R7 := 0x109c39a0
124 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
125 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
126 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4[0xc0a3774b]
127 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
128 [-]: LOADK     R7 K42       ; R7 := "HideWindowBtn"
129 [-]: CONST     R8 11        ; R8 := 11.000000
130 [-]: GETGLOBAL R9 K43       ; R9 := 0x34291f5c
131 [-]: GETTABLE  R9 R9 K44    ; R82 := R9[0x1467d5f4]
132 [-]: CALL      R9 1 0       ; R9,... := R9()
133 [-]: CALL      R4 0 1       ; R4(R5,...)
134 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
135 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4[0xc0a3774b]
136 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
137 [-]: LOADK     R7 K45       ; R7 := "HideWindowBtn.Highlight"
138 [-]: CONST     R8 11        ; R8 := 11.000000
139 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
140 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
141 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
142 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
143 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
144 [-]: LOADK     R7 K46       ; R7 := "HideWindowBtn.Icon"
145 [-]: CONST     R8 10        ; R8 := 10.000000
146 [-]: CONST     R9 100       ; R9 := 100.000000
147 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
148 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
149 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
150 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
151 [-]: LOADK     R7 K47       ; R7 := "EdgeBottomLeft"
152 [-]: CONST     R8 9         ; R8 := 9.000000
153 [-]: GETUPVAL  R9 U1        ; R9 := U1
154 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
155 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
156 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
157 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
158 [-]: LOADK     R7 K47       ; R7 := "EdgeBottomLeft"
159 [-]: CONST     R8 10        ; R8 := 10.000000
160 [-]: CONST     R9 25        ; R9 := 25.000000
161 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
162 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
163 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
164 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
165 [-]: LOADK     R7 K48       ; R7 := "EdgeTriangle"
166 [-]: CONST     R8 9         ; R8 := 9.000000
167 [-]: GETUPVAL  R9 U1        ; R9 := U1
168 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
169 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
170 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
171 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
172 [-]: LOADK     R7 K48       ; R7 := "EdgeTriangle"
173 [-]: CONST     R8 10        ; R8 := 10.000000
174 [-]: CONST     R9 25        ; R9 := 25.000000
175 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
176 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
177 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
178 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
179 [-]: LOADK     R7 K49       ; R7 := "EdgeFill"
180 [-]: CONST     R8 9         ; R8 := 9.000000
181 [-]: GETUPVAL  R9 U2        ; R9 := U2
182 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
183 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
184 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
185 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
186 [-]: LOADK     R7 K49       ; R7 := "EdgeFill"
187 [-]: CONST     R8 10        ; R8 := 10.000000
188 [-]: CONST     R9 75        ; R9 := 75.000000
189 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
190 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
191 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
192 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
193 [-]: LOADK     R7 K50       ; R7 := "EdgeBottom"
194 [-]: CONST     R8 9         ; R8 := 9.000000
195 [-]: GETUPVAL  R9 U1        ; R9 := U1
196 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
197 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
198 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
199 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
200 [-]: LOADK     R7 K50       ; R7 := "EdgeBottom"
201 [-]: CONST     R8 10        ; R8 := 10.000000
202 [-]: CONST     R9 25        ; R9 := 25.000000
203 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
204 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
205 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
206 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
207 [-]: LOADK     R7 K51       ; R7 := "EdgeTop"
208 [-]: CONST     R8 9         ; R8 := 9.000000
209 [-]: GETUPVAL  R9 U1        ; R9 := U1
210 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
211 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
212 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
213 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
214 [-]: LOADK     R7 K51       ; R7 := "EdgeTop"
215 [-]: CONST     R8 10        ; R8 := 10.000000
216 [-]: CONST     R9 40        ; R9 := 40.000000
217 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
218 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
219 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
220 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
221 [-]: LOADK     R7 K52       ; R7 := "EdgeRight"
222 [-]: CONST     R8 9         ; R8 := 9.000000
223 [-]: GETUPVAL  R9 U1        ; R9 := U1
224 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
225 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
226 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
227 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
228 [-]: LOADK     R7 K52       ; R7 := "EdgeRight"
229 [-]: CONST     R8 10        ; R8 := 10.000000
230 [-]: CONST     R9 25        ; R9 := 25.000000
231 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
232 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
233 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
234 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
235 [-]: LOADK     R7 K53       ; R7 := "DecoLine"
236 [-]: CONST     R8 9         ; R8 := 9.000000
237 [-]: GETUPVAL  R9 U1        ; R9 := U1
238 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
239 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
240 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
241 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
242 [-]: LOADK     R7 K53       ; R7 := "DecoLine"
243 [-]: CONST     R8 10        ; R8 := 10.000000
244 [-]: CONST     R9 25        ; R9 := 25.000000
245 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
246 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
247 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
248 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
249 [-]: LOADK     R7 K54       ; R7 := "Bg"
250 [-]: CONST     R8 9         ; R8 := 9.000000
251 [-]: GETUPVAL  R9 U2        ; R9 := U2
252 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
253 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
254 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
255 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
256 [-]: LOADK     R7 K54       ; R7 := "Bg"
257 [-]: CONST     R8 10        ; R8 := 10.000000
258 [-]: CONST     R9 75        ; R9 := 75.000000
259 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
260 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
261 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
262 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
263 [-]: LOADK     R7 K55       ; R7 := "MessageBox"
264 [-]: CONST     R8 69        ; R8 := 69.000000
265 [-]: GETGLOBAL R9 K56       ; R9 := 0x0032441c
266 [-]: GETTABLE  R9 R9 K57    ; R9 := R9["UIColor_White"]
267 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
268 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
269 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
270 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
271 [-]: LOADK     R7 K58       ; R7 := "Prompt"
272 [-]: CONST     R8 10        ; R8 := 10.000000
273 [-]: GETUPVAL  R9 U0        ; R9 := U0
274 [-]: GETTABLE  R9 R9 K59    ; R82 := R9[0x06d055f9]
275 [-]: GETGLOBAL R10 K43      ; R10 := 0x34291f5c
276 [-]: GETTABLE  R10 R10 K44  ; R82 := R10[0x1467d5f4]
277 [-]: CALL      R10 1 2      ; R10 := R10()
278 [-]: CONST     R11 100      ; R11 := 100.000000
279 [-]: CONST     R12 50       ; R12 := 50.000000
280 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
281 [-]: CALL      R4 0 1       ; R4(R5,...)
282 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
283 [-]: SELF      R4 R4 K60    ; R5 := R4; R4 := R4[0x5f56eeab]
284 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
285 [-]: LOADK     R7 K61       ; R7 := ".Prompt"
286 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
287 [-]: CONST     R7 29        ; R7 := 29.000000
288 [-]: LOADK     R8 K30       ; R8 := ""
289 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
290 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
291 [-]: SELF      R4 R4 K62    ; R5 := R4; R4 := R4[0x20b98db3]
292 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
293 [-]: LOADK     R7 K63       ; R7 := ".Callout.Tf.text"
294 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
295 [-]: LOADK     R7 K64       ; R7 := "<MENU_GENERIC1>"
296 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
297 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
298 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4[0xc0a3774b]
299 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
300 [-]: LOADK     R7 K65       ; R7 := "Callout"
301 [-]: CONST     R8 11        ; R8 := 11.000000
302 [-]: GETGLOBAL R9 K43       ; R9 := 0x34291f5c
303 [-]: GETTABLE  R9 R9 K44    ; R82 := R9[0x1467d5f4]
304 [-]: CALL      R9 1 0       ; R9,... := R9()
305 [-]: CALL      R4 0 1       ; R4(R5,...)
306 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
307 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4[0xc0a3774b]
308 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
309 [-]: LOADK     R7 K66       ; R7 := "CharLimit"
310 [-]: CONST     R8 11        ; R8 := 11.000000
311 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
312 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
313 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
314 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4[0xc0a3774b]
315 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
316 [-]: LOADK     R7 K67       ; R7 := "CharLimit.Warning"
317 [-]: CONST     R8 11        ; R8 := 11.000000
318 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
319 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
320 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
321 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4[0xc0a3774b]
322 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
323 [-]: LOADK     R7 K67       ; R7 := "CharLimit.Warning"
324 [-]: CONST     R8 75        ; R8 := 75.000000
325 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
326 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
327 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
328 [-]: SELF      R4 R4 K35    ; R5 := R4; R4 := R4[0xc0a3774b]
329 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
330 [-]: LOADK     R7 K68       ; R7 := "CharLimit.SpamTime"
331 [-]: CONST     R8 75        ; R8 := 75.000000
332 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
333 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
334 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
335 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
336 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
337 [-]: LOADK     R7 K68       ; R7 := "CharLimit.SpamTime"
338 [-]: CONST     R8 9         ; R8 := 9.000000
339 [-]: GETGLOBAL R9 K56       ; R9 := 0x0032441c
340 [-]: GETTABLE  R9 R9 K69    ; R9 := R9["UIColor_Black"]
341 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
342 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
343 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
344 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
345 [-]: LOADK     R7 K70       ; R7 := "CharLimit.Bg"
346 [-]: CONST     R8 10        ; R8 := 10.000000
347 [-]: CONST     R9 75        ; R9 := 75.000000
348 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
349 [-]: GETGLOBAL R4 K43       ; R4 := 0x34291f5c
350 [-]: GETTABLE  R4 R4 K44    ; R82 := R4[0x1467d5f4]
351 [-]: CALL      R4 1 2       ; R4 := R4()
352 [-]: TEST      R4 0         ; if not R4 then PC := 378
353 [-]: JMP       378          ; PC := 378
354 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
355 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
356 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
357 [-]: LOADK     R7 K55       ; R7 := "MessageBox"
358 [-]: CONST     R8 36        ; R8 := 36.000000
359 [-]: GETUPVAL  R9 U3        ; R9 := U3
360 [-]: GETTABLE  R9 R9 K71    ; R9 := R9["Teal"]
361 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
362 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
363 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
364 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
365 [-]: LOADK     R7 K58       ; R7 := "Prompt"
366 [-]: CONST     R8 0         ; R8 := 0.000000
367 [-]: GETTABLE  R9 R0 K72    ; R9 := R0["mInitPromptXPos"]
368 [-]: ADD       R9 R9 K73    ; R9 := R9 + 25.000000
369 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
370 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
371 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0xf64b7262]
372 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
373 [-]: LOADK     R7 K55       ; R7 := "MessageBox"
374 [-]: CONST     R8 0         ; R8 := 0.000000
375 [-]: GETTABLE  R9 R0 K72    ; R9 := R0["mInitPromptXPos"]
376 [-]: ADD       R9 R9 K73    ; R9 := R9 + 25.000000
377 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
378 [-]: GETGLOBAL R4 K43       ; R4 := 0x34291f5c
379 [-]: GETTABLE  R4 R4 K74    ; R82 := R4[0x056bfe8b]
380 [-]: CALL      R4 1 2       ; R4 := R4()
381 [-]: TEST      R4 0         ; if not R4 then PC := 393
382 [-]: JMP       393          ; PC := 393
383 [-]: GETUPVAL  R4 U4        ; R4 := U4
384 [-]: CALL      R4 1 2       ; R4 := R4()
385 [-]: TEST      R4 0         ; if not R4 then PC := 393
386 [-]: JMP       393          ; PC := 393
387 [-]: GETGLOBAL R4 K11       ; R4 := 0xae91e43b
388 [-]: SELF      R4 R4 K75    ; R5 := R4; R4 := R4[0xaade900e]
389 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mClipPath"]
390 [-]: CONST     R7 11        ; R7 := 11.000000
391 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
392 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
393 [-]: RETURN    R0 1         ; return 


; Function #52.1.1:
;
; Name:            
; Defined at line: 1866
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
  2 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0x67bc869f]
  3 [-]: MOVE      R7 R0        ; R7 := R0
  4 [-]: CONST     R8 10        ; R8 := 10.000000
  5 [-]: GETUPVAL  R9 U0        ; R9 := U0
  6 [-]: GETTABLE  R9 R9 K2     ; R82 := R9[0x06d055f9]
  7 [-]: GETGLOBAL R10 K3       ; R10 := 0x34291f5c
  8 [-]: GETTABLE  R10 R10 K4   ; R82 := R10[0x1467d5f4]
  9 [-]: CALL      R10 1 2      ; R10 := R10()
 10 [-]: CONST     R11 100      ; R11 := 100.000000
 11 [-]: CONST     R12 50       ; R12 := 50.000000
 12 [-]: CALL      R9 4 0       ; R9,... := R9(R10,R11,R12)
 13 [-]: CALL      R5 0 1       ; R5(R6,...)
 14 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 15 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x20b98db3]
 16 [-]: MOVE      R7 R0        ; R7 := R0
 17 [-]: LOADK     R8 K6        ; R8 := ".Callout.Tf.text"
 18 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 19 [-]: MOVE      R8 R1        ; R8 := R1
 20 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 21 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 22 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0xc0a3774b]
 23 [-]: MOVE      R7 R0        ; R7 := R0
 24 [-]: LOADK     R8 K8        ; R8 := "Callout"
 25 [-]: CONST     R9 11        ; R9 := 11.000000
 26 [-]: GETGLOBAL R10 K3       ; R10 := 0x34291f5c
 27 [-]: GETTABLE  R10 R10 K4   ; R82 := R10[0x1467d5f4]
 28 [-]: CALL      R10 1 0      ; R10,... := R10()
 29 [-]: CALL      R5 0 1       ; R5(R6,...)
 30 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 31 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5[0x1cb415c1]
 32 [-]: MOVE      R7 R0        ; R7 := R0
 33 [-]: LOADK     R8 K10       ; R8 := ".Icon"
 34 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 35 [-]: MOVE      R8 R2        ; R8 := R2
 36 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 37 [-]: EQ        1 R3 K11     ; if R3 == nil then PC := 55
 38 [-]: JMP       55           ; PC := 55
 39 [-]: EQ        1 R4 K11     ; if R4 == nil then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 42 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5[0xf64b7262]
 43 [-]: MOVE      R7 R0        ; R7 := R0
 44 [-]: LOADK     R8 K13       ; R8 := "Icon"
 45 [-]: CONST     R9 12        ; R9 := 12.000000
 46 [-]: MOVE      R10 R3       ; R10 := R3
 47 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 48 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 49 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5[0xf64b7262]
 50 [-]: MOVE      R7 R0        ; R7 := R0
 51 [-]: LOADK     R8 K13       ; R8 := "Icon"
 52 [-]: CONST     R9 13        ; R9 := 13.000000
 53 [-]: MOVE      R10 R4       ; R10 := R4
 54 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 55 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 56 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0xc0a3774b]
 57 [-]: MOVE      R7 R0        ; R7 := R0
 58 [-]: LOADK     R8 K14       ; R8 := "Arrow"
 59 [-]: CONST     R9 11        ; R9 := 11.000000
 60 [-]: GETGLOBAL R10 K3       ; R10 := 0x34291f5c
 61 [-]: GETTABLE  R10 R10 K4   ; R82 := R10[0x1467d5f4]
 62 [-]: CALL      R10 1 2      ; R10 := R10()
 63 [-]: NOT       R10 R10      ; R10 := not R10
 64 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 65 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 66 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5[0xd5181643]
 67 [-]: MOVE      R7 R0        ; R7 := R0
 68 [-]: LOADK     R8 K16       ; R8 := ".Highlight"
 69 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 70 [-]: GETGLOBAL R8 K17       ; R8 := 0x0032441c
 71 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["UIMaterial_RectangleNoDepth"]
 72 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 73 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 74 [-]: SELF      R5 R5 K19    ; R6 := R5; R5 := R5[0x91e13703]
 75 [-]: MOVE      R7 R0        ; R7 := R0
 76 [-]: LOADK     R8 K16       ; R8 := ".Highlight"
 77 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 78 [-]: LOADK     R8 K20       ; R8 := "RectInnerColor"
 79 [-]: CONST     R9 0         ; R9 := 0.000000
 80 [-]: CONST     R10 0        ; R10 := 0.000000
 81 [-]: CONST     R11 0        ; R11 := 0.000000
 82 [-]: CONST     R12 0        ; R12 := 0.000000
 83 [-]: CALL      R5 8 1       ; R5(R6,R7,R8,R9,R10,R11,R12)
 84 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 85 [-]: SELF      R5 R5 K19    ; R6 := R5; R5 := R5[0x91e13703]
 86 [-]: MOVE      R7 R0        ; R7 := R0
 87 [-]: LOADK     R8 K21       ; R8 := ".Hightlight"
 88 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 89 [-]: LOADK     R8 K22       ; R8 := "RectEdgeColor"
 90 [-]: GETGLOBAL R9 K17       ; R9 := 0x0032441c
 91 [-]: GETTABLE  R9 R9 K23    ; R9 := R9["UIColorObject_White"]
 92 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["r"]
 93 [-]: GETGLOBAL R10 K17      ; R10 := 0x0032441c
 94 [-]: GETTABLE  R10 R10 K23  ; R10 := R10["UIColorObject_White"]
 95 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["g"]
 96 [-]: GETGLOBAL R11 K17      ; R11 := 0x0032441c
 97 [-]: GETTABLE  R11 R11 K23  ; R11 := R11["UIColorObject_White"]
 98 [-]: GETTABLE  R11 R11 K26  ; R11 := R11["b"]
 99 [-]: LOADK     R12 K27      ; R12 := 0.800000
100 [-]: CALL      R5 8 1       ; R5(R6,R7,R8,R9,R10,R11,R12)
101 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
102 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0xc0a3774b]
103 [-]: MOVE      R7 R0        ; R7 := R0
104 [-]: LOADK     R8 K28       ; R8 := "Highlight"
105 [-]: CONST     R9 11        ; R9 := 11.000000
106 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
107 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
108 [-]: RETURN    R0 1         ; return 


; Function #52.2:
;
; Name:            
; Defined at line: 1940
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mParent"]
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x8ec8f0d5]
  3 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mWindow"]
  4 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  5 [-]: GETGLOBAL R4 K3        ; R4 := 0xae91e43b
  6 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x67bc869f]
  7 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mClipPath"]
  8 [-]: CONST     R7 0         ; R7 := 0.000000
  9 [-]: GETTABLE  R8 R3 K6     ; R8 := R3["x"]
 10 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 11 [-]: GETGLOBAL R4 K3        ; R4 := 0xae91e43b
 12 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x67bc869f]
 13 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mClipPath"]
 14 [-]: CONST     R7 1         ; R7 := 1.000000
 15 [-]: GETTABLE  R8 R3 K7     ; R8 := R3["y"]
 16 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 17 [-]: GETTABLE  R4 R3 K8     ; R4 := R3["width"]
 18 [-]: GETGLOBAL R5 K3        ; R5 := 0xae91e43b
 19 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5[0x91a24e4b]
 20 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["mClipPath"]
 21 [-]: LOADK     R8 K10       ; R8 := ".Bg"
 22 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 23 [-]: CONST     R8 0         ; R8 := 0.000000
 24 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 25 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 26 [-]: SUB       R4 R4 K11    ; R4 := R4 - 1.000000
 27 [-]: GETGLOBAL R5 K3        ; R5 := 0xae91e43b
 28 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5[0xf64b7262]
 29 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["mClipPath"]
 30 [-]: LOADK     R8 K13       ; R8 := "Bg"
 31 [-]: CONST     R9 12        ; R9 := 12.000000
 32 [-]: MOVE      R10 R4       ; R10 := R4
 33 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 34 [-]: GETGLOBAL R5 K3        ; R5 := 0xae91e43b
 35 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5[0xf64b7262]
 36 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["mClipPath"]
 37 [-]: LOADK     R8 K14       ; R8 := "BgBlurer"
 38 [-]: CONST     R9 12        ; R9 := 12.000000
 39 [-]: MOVE      R10 R4       ; R10 := R4
 40 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 41 [-]: GETGLOBAL R5 K15       ; R5 := 0x34291f5c
 42 [-]: GETTABLE  R5 R5 K16    ; R82 := R5[0x1467d5f4]
 43 [-]: CALL      R5 1 2       ; R5 := R5()
 44 [-]: GETUPVAL  R6 U0        ; R6 := U0
 45 [-]: GETTABLE  R6 R6 K17    ; R82 := R6[0x06d055f9]
 46 [-]: MOVE      R7 R5        ; R7 := R5
 47 [-]: CONST     R8 73        ; R8 := 73.000000
 48 [-]: CONST     R9 66        ; R9 := 66.000000
 49 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 50 [-]: GETUPVAL  R7 U0        ; R7 := U0
 51 [-]: GETTABLE  R7 R7 K17    ; R82 := R7[0x06d055f9]
 52 [-]: MOVE      R8 R5        ; R8 := R5
 53 [-]: CONST     R9 51        ; R9 := 51.000000
 54 [-]: CONST     R10 36       ; R10 := 36.000000
 55 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 56 [-]: GETUPVAL  R8 U0        ; R8 := U0
 57 [-]: GETTABLE  R8 R8 K17    ; R82 := R8[0x06d055f9]
 58 [-]: MOVE      R9 R5        ; R9 := R5
 59 [-]: CONST     R10 28       ; R10 := 28.000000
 60 [-]: CONST     R11 0        ; R11 := 0.000000
 61 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 62 [-]: GETGLOBAL R9 K15       ; R9 := 0x34291f5c
 63 [-]: GETTABLE  R9 R9 K18    ; R82 := R9[0xe6b41adb]
 64 [-]: CALL      R9 1 2       ; R9 := R9()
 65 [-]: TEST      R9 0         ; if not R9 then PC := 119
 66 [-]: JMP       119          ; PC := 119
 67 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
 68 [-]: SELF      R9 R9 K4     ; R10 := R9; R9 := R9[0x67bc869f]
 69 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
 70 [-]: LOADK     R12 K19      ; R12 := ".EmojiBtn"
 71 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 72 [-]: CONST     R12 5        ; R12 := 5.000000
 73 [-]: CONST     R13 133      ; R13 := 133.000000
 74 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 75 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
 76 [-]: SELF      R9 R9 K4     ; R10 := R9; R9 := R9[0x67bc869f]
 77 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
 78 [-]: LOADK     R12 K19      ; R12 := ".EmojiBtn"
 79 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 80 [-]: CONST     R12 6        ; R12 := 6.000000
 81 [-]: CONST     R13 133      ; R13 := 133.000000
 82 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 83 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
 84 [-]: SELF      R9 R9 K4     ; R10 := R9; R9 := R9[0x67bc869f]
 85 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
 86 [-]: LOADK     R12 K20      ; R12 := ".UserListBtn"
 87 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 88 [-]: CONST     R12 5        ; R12 := 5.000000
 89 [-]: CONST     R13 133      ; R13 := 133.000000
 90 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 91 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
 92 [-]: SELF      R9 R9 K4     ; R10 := R9; R9 := R9[0x67bc869f]
 93 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
 94 [-]: LOADK     R12 K20      ; R12 := ".UserListBtn"
 95 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 96 [-]: CONST     R12 6        ; R12 := 6.000000
 97 [-]: CONST     R13 133      ; R13 := 133.000000
 98 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 99 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
100 [-]: SELF      R9 R9 K4     ; R10 := R9; R9 := R9[0x67bc869f]
101 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
102 [-]: LOADK     R12 K19      ; R12 := ".EmojiBtn"
103 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
104 [-]: CONST     R12 1        ; R12 := 1.000000
105 [-]: GETTABLE  R13 R3 K21   ; R13 := R3["height"]
106 [-]: SUB       R13 R13 K22  ; R13 := R13 - 36.000000
107 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
108 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
109 [-]: SELF      R9 R9 K4     ; R10 := R9; R9 := R9[0x67bc869f]
110 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
111 [-]: LOADK     R12 K20      ; R12 := ".UserListBtn"
112 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
113 [-]: CONST     R12 1        ; R12 := 1.000000
114 [-]: GETTABLE  R13 R3 K21   ; R13 := R3["height"]
115 [-]: SUB       R13 R13 K22  ; R13 := R13 - 36.000000
116 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
117 [-]: CONST     R6 80        ; R6 := 80.000000
118 [-]: CONST     R7 40        ; R7 := 40.000000
119 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
120 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xf64b7262]
121 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
122 [-]: LOADK     R12 K23      ; R12 := "EmojiBtn"
123 [-]: CONST     R13 0        ; R13 := 0.000000
124 [-]: GETTABLE  R14 R3 K8    ; R14 := R3["width"]
125 [-]: SUB       R14 R14 R6   ; R14 := R14 - R6
126 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
127 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
128 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xf64b7262]
129 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
130 [-]: LOADK     R12 K24      ; R12 := "UserListBtn"
131 [-]: CONST     R13 0        ; R13 := 0.000000
132 [-]: GETTABLE  R14 R3 K8    ; R14 := R3["width"]
133 [-]: SUB       R14 R14 R7   ; R14 := R14 - R7
134 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
135 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
136 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xf64b7262]
137 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
138 [-]: LOADK     R12 K25      ; R12 := "HideWindowBtn"
139 [-]: CONST     R13 0        ; R13 := 0.000000
140 [-]: GETTABLE  R14 R3 K8    ; R14 := R3["width"]
141 [-]: SUB       R14 R14 R8   ; R14 := R14 - R8
142 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
143 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
144 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xf64b7262]
145 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
146 [-]: LOADK     R12 K26      ; R12 := "HyperlinkBtn"
147 [-]: CONST     R13 0        ; R13 := 0.000000
148 [-]: GETTABLE  R14 R3 K8    ; R14 := R3["width"]
149 [-]: SUB       R14 R14 K27  ; R14 := R14 - 140.000000
150 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
151 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
152 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xf64b7262]
153 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
154 [-]: LOADK     R12 K28      ; R12 := "EdgeTop"
155 [-]: CONST     R13 12       ; R13 := 12.000000
156 [-]: GETTABLE  R14 R3 K8    ; R14 := R3["width"]
157 [-]: GETGLOBAL R15 K3       ; R15 := 0xae91e43b
158 [-]: SELF      R15 R15 K9   ; R16 := R15; R15 := R15[0x91a24e4b]
159 [-]: GETTABLE  R17 R0 K5    ; R17 := R0["mClipPath"]
160 [-]: LOADK     R18 K29      ; R18 := ".EdgeTop"
161 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
162 [-]: CONST     R18 0        ; R18 := 0.000000
163 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
164 [-]: SUB       R14 R14 R15  ; R14 := R14 - R15
165 [-]: SUB       R14 R14 K11  ; R14 := R14 - 1.000000
166 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
167 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
168 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xf64b7262]
169 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
170 [-]: LOADK     R12 K30      ; R12 := "EdgeBottom"
171 [-]: CONST     R13 12       ; R13 := 12.000000
172 [-]: GETTABLE  R14 R3 K8    ; R14 := R3["width"]
173 [-]: GETGLOBAL R15 K3       ; R15 := 0xae91e43b
174 [-]: SELF      R15 R15 K9   ; R16 := R15; R15 := R15[0x91a24e4b]
175 [-]: GETTABLE  R17 R0 K5    ; R17 := R0["mClipPath"]
176 [-]: LOADK     R18 K31      ; R18 := ".EdgeBottom"
177 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
178 [-]: CONST     R18 0        ; R18 := 0.000000
179 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
180 [-]: SUB       R14 R14 R15  ; R14 := R14 - R15
181 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
182 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
183 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xf64b7262]
184 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
185 [-]: LOADK     R12 K32      ; R12 := "EdgeRight"
186 [-]: CONST     R13 0        ; R13 := 0.000000
187 [-]: GETTABLE  R14 R3 K8    ; R14 := R3["width"]
188 [-]: SUB       R14 R14 K11  ; R14 := R14 - 1.000000
189 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
190 [-]: GETGLOBAL R9 K3        ; R9 := 0xae91e43b
191 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0xf64b7262]
192 [-]: GETTABLE  R11 R0 K5    ; R11 := R0["mClipPath"]
193 [-]: LOADK     R12 K33      ; R12 := "CharLimit"
194 [-]: CONST     R13 0        ; R13 := 0.000000
195 [-]: GETTABLE  R14 R3 K8    ; R14 := R3["width"]
196 [-]: SUB       R14 R14 K34  ; R14 := R14 - 11.000000
197 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
198 [-]: GETTABLE  R9 R0 K0     ; R9 := R0["mParent"]
199 [-]: SELF      R9 R9 K35    ; R10 := R9; R9 := R9[0x8b75da5a]
200 [-]: CALL      R9 2 2       ; R9 := R9(R10)
201 [-]: CONST     R10 100      ; R10 := 100.000000
202 [-]: TEST      R5 0         ; if not R5 then PC := 219
203 [-]: JMP       219          ; PC := 219
204 [-]: GETUPVAL  R11 U0       ; R11 := U0
205 [-]: GETTABLE  R11 R11 K17  ; R82 := R11[0x06d055f9]
206 [-]: GETGLOBAL R12 K36      ; R12 := 0x7b998233
207 [-]: MOVE      R13 R9       ; R13 := R9
208 [-]: CALL      R12 2 2      ; R12 := R12(R13)
209 [-]: TEST      R12 1        ; if R12 then PC := 213
210 [-]: JMP       213          ; PC := 213
211 [-]: GETTABLE  R12 R9 K37   ; R12 := R9["mHasHyperlink"]
212 [-]: JMP       215          ; PC := 215
213 [-]: OP_LOADBOOL R12 0 1      ; R12 := false; PC := 214
214 [-]: OP_LOADBOOL R12 1 0      ; R12 := true
215 [-]: CONST     R13 230      ; R13 := 230.000000
216 [-]: CONST     R14 175      ; R14 := 175.000000
217 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
218 [-]: MOVE      R10 R11      ; R10 := R11
219 [-]: GETGLOBAL R11 K3       ; R11 := 0xae91e43b
220 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11[0xf64b7262]
221 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["mClipPath"]
222 [-]: LOADK     R14 K38      ; R14 := "MessageBox"
223 [-]: CONST     R15 12       ; R15 := 12.000000
224 [-]: GETTABLE  R16 R3 K8    ; R16 := R3["width"]
225 [-]: SUB       R16 R16 R10  ; R16 := R16 - R10
226 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
227 [-]: GETGLOBAL R11 K39      ; R11 := 0x38f10e85
228 [-]: GETGLOBAL R12 K3       ; R12 := 0xae91e43b
229 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["mClipPath"]
230 [-]: LOADK     R14 K40      ; R14 := ".MessageBox.updateTextFormat"
231 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
232 [-]: CALL      R11 3 1      ; R11(R12,R13)
233 [-]: GETGLOBAL R11 K3       ; R11 := 0xae91e43b
234 [-]: SELF      R11 R11 K12  ; R12 := R11; R11 := R11[0xf64b7262]
235 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["mClipPath"]
236 [-]: LOADK     R14 K41      ; R14 := "FocusButton"
237 [-]: CONST     R15 12       ; R15 := 12.000000
238 [-]: GETTABLE  R16 R3 K8    ; R16 := R3["width"]
239 [-]: SUB       R16 R16 K42  ; R16 := R16 - 100.000000
240 [-]: CALL      R11 6 1      ; R11(R12,R13,R14,R15,R16)
241 [-]: GETGLOBAL R11 K15      ; R11 := 0x34291f5c
242 [-]: GETTABLE  R11 R11 K18  ; R82 := R11[0xe6b41adb]
243 [-]: CALL      R11 1 2      ; R11 := R11()
244 [-]: TEST      R11 0        ; if not R11 then PC := 255
245 [-]: JMP       255          ; PC := 255
246 [-]: GETGLOBAL R11 K3       ; R11 := 0xae91e43b
247 [-]: SELF      R11 R11 K4   ; R12 := R11; R11 := R11[0x67bc869f]
248 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["mClipPath"]
249 [-]: LOADK     R14 K43      ; R14 := ".FocusButton"
250 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
251 [-]: CONST     R14 12       ; R14 := 12.000000
252 [-]: GETTABLE  R15 R3 K8    ; R15 := R3["width"]
253 [-]: SUB       R15 R15 K27  ; R15 := R15 - 140.000000
254 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
255 [-]: RETURN    R0 1         ; return 


; Function #52.3:
;
; Name:            
; Defined at line: 1990
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: SETTABLE  R0 K0 R1     ; R0["mIsFocused"] := R1
  2 [-]: RETURN    R0 1         ; return 


; Function #52.4:
;
; Name:            
; Defined at line: 1994
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mParent"]
  4 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mTabMenu"]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 30
  7 [-]: JMP       30           ; PC := 30
  8 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  9 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mParent"]
 10 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mTabMenu"]
 11 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mSelectedElement"]
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 1         ; if R2 then PC := 30
 14 [-]: JMP       30           ; PC := 30
 15 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mParent"]
 16 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mTabMenu"]
 17 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mSelectedElement"]
 18 [-]: GETTABLE  R1 R2 K5     ; R1 := R2["Name"]
 19 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mParent"]
 20 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mMode"]
 21 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mParent"]
 22 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["CHANNEL_PRIVATE_CHAT"]
 23 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 30
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETGLOBAL R2 K8        ; R2 := 0x7f5022cf
 26 [-]: GETTABLE  R2 R2 K9     ; R82 := R2[0x3f3e4d12]
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: MOVE      R1 R2        ; R1 := R2
 30 [-]: GETGLOBAL R2 K10       ; R2 := 0xae91e43b
 31 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 32 [-]: LOADK     R4 K12       ; R4 := "/Lotus/Language/Menu/Chat_DefaultText"
 33 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 34 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 35 [-]: SETTABLE  R6 K13 R1    ; R6["CHANNEL"] := R1
 36 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 37 [-]: GETGLOBAL R3 K10       ; R3 := 0xae91e43b
 38 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0x5f56eeab]
 39 [-]: GETTABLE  R5 R0 K15    ; R5 := R0["mClipPath"]
 40 [-]: LOADK     R6 K16       ; R6 := ".Prompt"
 41 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 42 [-]: CONST     R6 29        ; R6 := 29.000000
 43 [-]: MOVE      R7 R2        ; R7 := R2
 44 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 45 [-]: RETURN    R0 1         ; return 


; Function #52.5:
;
; Name:            
; Defined at line: 2008
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xe75766cb]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipPath"]
  4 [-]: LOADK     R4 K3        ; R4 := ".MessageBox"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: CALL      R1 3 1       ; R1(R2,R3)
  7 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  8 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xe4162eed]
  9 [-]: LOADK     R3 K5        ; R3 := "MessageBoxFocused"
 10 [-]: LOADK     R4 K6        ; R4 := ""
 11 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 12 [-]: RETURN    R0 1         ; return 


; Function #53:
;
; Name:            
; Defined at line: 2018
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: CONST     R3 1         ; R3 := 1.000000
  2 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
  3 [-]: CONST     R6 1         ; R6 := 1.000000
  4 [-]: CLOSURE   R7 0         ; R7 := closure(Function #53.1)
  5 [-]: MOVE      R0 R4        ; R0 := R4
  6 [-]: MOVE      R0 R5        ; R0 := R5
  7 [-]: MOVE      R0 R0        ; R0 := R0
  8 [-]: MOVE      R0 R3        ; R0 := R3
  9 [-]: CLOSURE   R8 1         ; R8 := closure(Function #53.2)
 10 [-]: MOVE      R0 R0        ; R0 := R0
 11 [-]: MOVE      R0 R3        ; R0 := R3
 12 [-]: MOVE      R0 R5        ; R0 := R5
 13 [-]: SELF      R9 R0 K0     ; R10 := R0; R9 := R0[0x41e2ae25]
 14 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 15 [-]: LE        0 R3 R9      ; if R3 > R9 then PC := 77
 16 [-]: JMP       77           ; PC := 77
 17 [-]: MOVE      R9 R7        ; R9 := R7
 18 [-]: LOADK     R10 K1       ; R10 := "^%s+"
 19 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 20 [-]: TEST      R9 0         ; if not R9 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: JMP       75           ; PC := 75
 23 [-]: MOVE      R9 R7        ; R9 := R7
 24 [-]: LOADK     R10 K2       ; R10 := "^\"[^\"]*\""
 25 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 26 [-]: TEST      R9 1         ; if R9 then PC := 33
 27 [-]: JMP       33           ; PC := 33
 28 [-]: MOVE      R9 R7        ; R9 := R7
 29 [-]: LOADK     R10 K3       ; R10 := "^'[^']*'"
 30 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 31 [-]: TEST      R9 0         ; if not R9 then PC := 53
 32 [-]: JMP       53           ; PC := 53
 33 [-]: GETGLOBAL R9 K4        ; R9 := 0x33bdd652
 34 [-]: GETTABLE  R9 R9 K5     ; R82 := R9[0x23d5322f]
 35 [-]: MOVE      R10 R1       ; R10 := R1
 36 [-]: MOVE      R11 R6       ; R11 := R6
 37 [-]: MOVE      R12 R8       ; R12 := R8
 38 [-]: CALL      R12 1 0      ; R12,... := R12()
 39 [-]: CALL      R9 0 1       ; R9(R10,...)
 40 [-]: GETGLOBAL R9 K4        ; R9 := 0x33bdd652
 41 [-]: GETTABLE  R9 R9 K5     ; R82 := R9[0x23d5322f]
 42 [-]: MOVE      R10 R2       ; R10 := R2
 43 [-]: MOVE      R11 R6       ; R11 := R6
 44 [-]: MOVE      R12 R8       ; R12 := R8
 45 [-]: CALL      R12 1 2      ; R12 := R12()
 46 [-]: SELF      R12 R12 K6   ; R13 := R12; R12 := R12[0x1a94c9cc]
 47 [-]: CONST     R14 2        ; R14 := 2.000000
 48 [-]: CONST     R15 -2       ; R15 := -2.000000
 49 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
 50 [-]: CALL      R9 0 1       ; R9(R10,...)
 51 [-]: ADD       R6 R6 K7     ; R6 := R6 + 1.000000
 52 [-]: JMP       75           ; PC := 75
 53 [-]: MOVE      R9 R7        ; R9 := R7
 54 [-]: LOADK     R10 K8       ; R10 := "[^%s%z]+"
 55 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 56 [-]: TEST      R9 0         ; if not R9 then PC := 74
 57 [-]: JMP       74           ; PC := 74
 58 [-]: GETGLOBAL R9 K4        ; R9 := 0x33bdd652
 59 [-]: GETTABLE  R9 R9 K5     ; R82 := R9[0x23d5322f]
 60 [-]: MOVE      R10 R1       ; R10 := R1
 61 [-]: MOVE      R11 R6       ; R11 := R6
 62 [-]: MOVE      R12 R8       ; R12 := R8
 63 [-]: CALL      R12 1 0      ; R12,... := R12()
 64 [-]: CALL      R9 0 1       ; R9(R10,...)
 65 [-]: GETGLOBAL R9 K4        ; R9 := 0x33bdd652
 66 [-]: GETTABLE  R9 R9 K5     ; R82 := R9[0x23d5322f]
 67 [-]: MOVE      R10 R2       ; R10 := R2
 68 [-]: MOVE      R11 R6       ; R11 := R6
 69 [-]: MOVE      R12 R8       ; R12 := R8
 70 [-]: CALL      R12 1 0      ; R12,... := R12()
 71 [-]: CALL      R9 0 1       ; R9(R10,...)
 72 [-]: ADD       R6 R6 K7     ; R6 := R6 + 1.000000
 73 [-]: JMP       75           ; PC := 75
 74 [-]: MOVE      R5 R3        ; R5 := R3
 75 [-]: ADD       R3 R5 K7     ; R3 := R5 + 1.000000
 76 [-]: JMP       13           ; PC := 13
 77 [-]: RETURN    R0 1         ; return 


; Function #53.1:
;
; Name:            
; Defined at line: 2025
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U2        ; R1 := U2
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0xa5c556b9]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: GETUPVAL  R4 U3        ; R4 := U3
  5 [-]: CALL      R1 4 3       ; R1,R2 := R1(R2,R3,R4)
  6 [-]: SETUPVAL  R2 U1        ; U82 := 
  7 [-]: SETUPVAL  R1 U0        ; U82 := 
  8 [-]: GETUPVAL  R1 U0        ; R1 := U0
  9 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: OP_LOADBOOL R1 0 1       ; R1 := false; PC := 12
 12 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 13 [-]: RETURN    R1 2         ; return R1
 14 [-]: RETURN    R0 1         ; return 


; Function #53.2:
;
; Name:            
; Defined at line: 2030
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SELF      R0 R0 K0     ; R1 := R0; R0 := R0[0x1a94c9cc]
  3 [-]: GETUPVAL  R2 U1        ; R2 := U1
  4 [-]: GETUPVAL  R3 U2        ; R3 := U2
  5 [-]: TAILCALL  R0 4 0       ; R0,... := R0(R1,R2,R3)
  6 [-]: RETURN    R0 0         ; return R0,...
  7 [-]: RETURN    R0 1         ; return 


; Function #54:
;
; Name:            
; Defined at line: 2052
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x54a95d6f]
  3 [-]: GETGLOBAL R4 K2        ; R4 := mWindow
  4 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mInputPanel"]
  5 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mClipPath"]
  6 [-]: LOADK     R5 K5        ; R5 := ".MessageBox"
  7 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  8 [-]: CONST     R5 29        ; R5 := 29.000000
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: GETGLOBAL R3 K6        ; R3 := 0x34291f5c
 11 [-]: GETTABLE  R3 R3 K7     ; R82 := R3[0x1467d5f4]
 12 [-]: CALL      R3 1 2       ; R3 := R3()
 13 [-]: TEST      R3 0         ; if not R3 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: MOVE      R2 R0        ; R2 := R0
 16 [-]: GETGLOBAL R3 K6        ; R3 := 0x34291f5c
 17 [-]: GETTABLE  R3 R3 K8     ; R82 := R3[0xe6b41adb]
 18 [-]: CALL      R3 1 2       ; R3 := R3()
 19 [-]: TEST      R3 0         ; if not R3 then PC := 24
 20 [-]: JMP       24           ; PC := 24
 21 [-]: TEST      R0 0         ; if not R0 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: MOVE      R2 R0        ; R2 := R0
 24 [-]: GETUPVAL  R3 U0        ; R3 := U0
 25 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["Msg"]
 26 [-]: EQ        1 R3 K10     ; if R3 == "" then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: GETUPVAL  R3 U0        ; R3 := U0
 29 [-]: GETTABLE  R2 R3 K9     ; R2 := R3["Msg"]
 30 [-]: GETGLOBAL R3 K11       ; R3 := 0x7f5022cf
 31 [-]: GETTABLE  R3 R3 K12    ; R82 := R3[0x66edf04f]
 32 [-]: MOVE      R4 R2        ; R4 := R2
 33 [-]: LOADK     R5 K13       ; R5 := "\239\188\187"
 34 [-]: LOADK     R6 K14       ; R6 := "["
 35 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 36 [-]: MOVE      R2 R3        ; R2 := R3
 37 [-]: GETGLOBAL R3 K11       ; R3 := 0x7f5022cf
 38 [-]: GETTABLE  R3 R3 K12    ; R82 := R3[0x66edf04f]
 39 [-]: MOVE      R4 R2        ; R4 := R2
 40 [-]: LOADK     R5 K15       ; R5 := "\239\188\189"
 41 [-]: LOADK     R6 K16       ; R6 := "]"
 42 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 43 [-]: MOVE      R2 R3        ; R2 := R3
 44 [-]: GETUPVAL  R3 U1        ; R3 := U1
 45 [-]: GETTABLE  R3 R3 K17    ; R82 := R3[0xf6853c9e]
 46 [-]: MOVE      R4 R2        ; R4 := R2
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: MOVE      R2 R3        ; R2 := R3
 49 [-]: GETGLOBAL R3 K18       ; R3 := mEmojiSettings
 50 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["Enabled"]
 51 [-]: TEST      R3 0         ; if not R3 then PC := 86
 52 [-]: JMP       86           ; PC := 86
 53 [-]: GETGLOBAL R3 K18       ; R3 := mEmojiSettings
 54 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["EmoticonConversion"]
 55 [-]: TEST      R3 0         ; if not R3 then PC := 86
 56 [-]: JMP       86           ; PC := 86
 57 [-]: LOADK     R3 K21       ; R3 := " "
 58 [-]: MOVE      R4 R2        ; R4 := R2
 59 [-]: LOADK     R5 K21       ; R5 := " "
 60 [-]: CONCAT    R2 R3 R5     ; R2 := R3 .. R4 .. R5
 61 [-]: GETGLOBAL R3 K22       ; R3 := 0xcfc01047
 62 [-]: GETUPVAL  R4 U2        ; R4 := U2
 63 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 64 [-]: JMP       84           ; PC := 84
 65 [-]: GETGLOBAL R8 K23       ; R8 := 0x015284cd
 66 [-]: LOADK     R9 K24       ; R9 := ","
 67 [-]: MOVE      R10 R7       ; R10 := R7
 68 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 69 [-]: CONST     R9 1         ; R9 := 1.000000
 70 [-]: LEN       R10 R8       ; R10 := # R8
 71 [-]: CONST     R11 1        ; R11 := 1.000000
 72 [-]: FORPREP   R9 83        ; R9 -= R11; PC := 83
 73 [-]: GETGLOBAL R13 K11      ; R13 := 0x7f5022cf
 74 [-]: GETTABLE  R13 R13 K12  ; R82 := R13[0x66edf04f]
 75 [-]: MOVE      R14 R2       ; R14 := R2
 76 [-]: LOADK     R15 K25      ; R15 := "%f[%S]"
 77 [-]: GETTABLE  R16 R8 R12   ; R16 := R8[R12]
 78 [-]: LOADK     R17 K26      ; R17 := "%f[%s]"
 79 [-]: CONCAT    R15 R15 R17  ; R15 := R15 .. R16 .. R17
 80 [-]: MOVE      R16 R6       ; R16 := R6
 81 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 82 [-]: MOVE      R2 R13       ; R2 := R13
 83 [-]: FORLOOP   R9 73        ; R9 += R11; if R9 <= R10 then begin PC := 73; R12 := R9 end
 84 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 65; R5 := R6 end
 85 [-]: JMP       65           ; PC := 65
 86 [-]: GETGLOBAL R13 K27      ; R13 := 0x7db5f856
 87 [-]: MOVE      R14 R2       ; R14 := R2
 88 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 89 [-]: MOVE      R2 R13       ; R2 := R13
 90 [-]: TEST      R1 0         ; if not R1 then PC := 102
 91 [-]: JMP       102          ; PC := 102
 92 [-]: GETGLOBAL R13 K0       ; R13 := 0xae91e43b
 93 [-]: SELF      R13 R13 K28  ; R14 := R13; R13 := R13[0x5f56eeab]
 94 [-]: GETGLOBAL R15 K2       ; R15 := mWindow
 95 [-]: GETTABLE  R15 R15 K3   ; R15 := R15["mInputPanel"]
 96 [-]: GETTABLE  R15 R15 K4   ; R15 := R15["mClipPath"]
 97 [-]: LOADK     R16 K5       ; R16 := ".MessageBox"
 98 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
 99 [-]: CONST     R16 29       ; R16 := 29.000000
100 [-]: LOADK     R17 K10      ; R17 := ""
101 [-]: CALL      R13 5 1      ; R13(R14,R15,R16,R17)
102 [-]: GETGLOBAL R13 K29      ; R13 := 0x727f259f
103 [-]: MOVE      R14 R2       ; R14 := R2
104 [-]: CALL      R13 2 2      ; R13 := R13(R14)
105 [-]: MOVE      R2 R13       ; R2 := R13
106 [-]: NEWTABLE  R13 0 0      ; R13 := {}
107 [-]: NEWTABLE  R14 0 0      ; R14 := {}
108 [-]: GETGLOBAL R15 K30      ; R15 := 0x7b998233
109 [-]: MOVE      R16 R2       ; R16 := R2
110 [-]: CALL      R15 2 2      ; R15 := R15(R16)
111 [-]: TEST      R15 1        ; if R15 then PC := 120
112 [-]: JMP       120          ; PC := 120
113 [-]: EQ        1 R2 K10     ; if R2 == "" then PC := 120
114 [-]: JMP       120          ; PC := 120
115 [-]: GETUPVAL  R15 U3       ; R15 := U3
116 [-]: MOVE      R16 R2       ; R16 := R2
117 [-]: MOVE      R17 R13      ; R17 := R13
118 [-]: MOVE      R18 R14      ; R18 := R14
119 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
120 [-]: MOVE      R15 R2       ; R15 := R2
121 [-]: MOVE      R16 R13      ; R16 := R13
122 [-]: MOVE      R17 R14      ; R17 := R14
123 [-]: RETURN    R15 4        ; return R15,R16,R17
124 [-]: RETURN    R0 1         ; return 


; Function #55:
;
; Name:            
; Defined at line: 2103
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := mUIMode
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["UI_MODE_IN_GAME"]
  4 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xd4f2405e]
  8 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
  9 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x42b04007]
 10 [-]: LOADK     R5 K6        ; R5 := "/Lotus/Language/Menu/Chat_UnstuckWrongChannelError"
 11 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 12 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 16 [-]: GETGLOBAL R2 K8        ; R2 := 0xbe190284
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R1 K8        ; R1 := 0xbe190284
 21 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xa80c8431]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 29
 24 [-]: JMP       29           ; PC := 29
 25 [-]: GETGLOBAL R1 K10       ; R1 := 0x3d106989
 26 [-]: LOADK     R2 K11       ; R2 := "ChatRedux: Unstuck command failed!"
 27 [-]: CALL      R1 2 1       ; R1(R2)
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: EQ        1 R1 K12     ; if R1 == nil then PC := 37
 31 [-]: JMP       37           ; PC := 37
 32 [-]: GETUPVAL  R1 U1        ; R1 := U1
 33 [-]: SUB       R1 R0 R1     ; R1 := R0 - R1
 34 [-]: GETUPVAL  R2 U2        ; R2 := U2
 35 [-]: LT        0 R2 R1      ; if R2 >= R1 then PC := 52
 36 [-]: JMP       52           ; PC := 52
 37 [-]: GETGLOBAL R1 K13       ; R1 := 0x0a8f62a7
 38 [-]: CALL      R1 1 2       ; R1 := R1()
 39 [-]: SETUPVAL  R1 U1        ; U82 := 
 40 [-]: GETGLOBAL R1 K8        ; R1 := 0xbe190284
 41 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0xda5f0e27]
 42 [-]: CALL      R1 2 1       ; R1(R2)
 43 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 44 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xd4f2405e]
 45 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 46 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x42b04007]
 47 [-]: LOADK     R5 K15       ; R5 := "/Lotus/Language/Menu/Chat_UnstuckExecuted"
 48 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 49 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 50 [-]: CALL      R1 0 1       ; R1(R2,...)
 51 [-]: JMP       60           ; PC := 60
 52 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 53 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xd4f2405e]
 54 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 55 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x42b04007]
 56 [-]: LOADK     R5 K16       ; R5 := "/Lotus/Language/Menu/Chat_UnstuckCooldown"
 57 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 58 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 59 [-]: CALL      R1 0 1       ; R1(R2,...)
 60 [-]: RETURN    R0 1         ; return 


; Function #56:
;
; Name:            
; Defined at line: 2124
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0x84648f26]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x3d106989
  4 [-]: LOADK     R3 K2        ; R3 := ">> ITEM LIST - How many items? "
  5 [-]: GETGLOBAL R4 K3        ; R4 := 0x64fb1586
  6 [-]: LEN       R5 R1        ; R5 := # R1
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  9 [-]: CALL      R2 2 1       ; R2(R3)
 10 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 11 [-]: CONST     R3 1         ; R3 := 1.000000
 12 [-]: LEN       R4 R1        ; R4 := # R1
 13 [-]: CONST     R5 1         ; R5 := 1.000000
 14 [-]: FORPREP   R3 37        ; R3 -= R5; PC := 37
 15 [-]: GETGLOBAL R7 K4        ; R7 := 0x33bdd652
 16 [-]: GETTABLE  R7 R7 K5     ; R82 := R7[0x23d5322f]
 17 [-]: MOVE      R8 R2        ; R8 := R2
 18 [-]: NEWTABLE  R9 0 2       ; R9 := {}
 19 [-]: GETGLOBAL R10 K7       ; R10 := 0x7f5022cf
 20 [-]: GETTABLE  R10 R10 K8   ; R82 := R10[0x66edf04f]
 21 [-]: GETGLOBAL R11 K9       ; R11 := 0xae91e43b
 22 [-]: SELF      R11 R11 K10  ; R12 := R11; R11 := R11[0x42b04007]
 23 [-]: GETTABLE  R13 R1 R6    ; R13 := R1[R6]
 24 [-]: GETTABLE  R13 R13 K11  ; R13 := R13["locName"]
 25 [-]: SELF      R13 R13 K12  ; R14 := R13; R13 := R13[0x6d604ba7]
 26 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 27 [-]: OP_LOADBOOL R14 0 0      ; R14 := false
 28 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 29 [-]: LOADK     R12 K13      ; R12 := "<ARCHWING%> "
 30 [-]: LOADK     R13 K14      ; R13 := ""
 31 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 32 [-]: SETTABLE  R9 K6 R10    ; R9["Name"] := R10
 33 [-]: GETTABLE  R10 R1 R6    ; R10 := R1[R6]
 34 [-]: GETTABLE  R10 R10 K16  ; R10 := R10["storeItem"]
 35 [-]: SETTABLE  R9 K15 R10   ; R9["Type"] := R10
 36 [-]: CALL      R7 3 1       ; R7(R8,R9)
 37 [-]: FORLOOP   R3 15        ; R3 += R5; if R3 <= R4 then begin PC := 15; R6 := R3 end
 38 [-]: GETGLOBAL R7 K4        ; R7 := 0x33bdd652
 39 [-]: GETTABLE  R7 R7 K17    ; R82 := R7[0xf21b1d8e]
 40 [-]: MOVE      R8 R2        ; R8 := R2
 41 [-]: CLOSURE   R9 0         ; R9 := closure(Function #56.1)
 42 [-]: CALL      R7 3 1       ; R7(R8,R9)
 43 [-]: GETGLOBAL R7 K18       ; R7 := 0xce225efa
 44 [-]: CONST     R8 0         ; R8 := 0.000000
 45 [-]: CALL      R7 2 1       ; R7(R8)
 46 [-]: GETGLOBAL R7 K19       ; R7 := 0xc8802016
 47 [-]: MOVE      R8 R2        ; R8 := R2
 48 [-]: CALL      R7 2 4       ; R7,R8,R9 := R7(R8)
 49 [-]: JMP       62           ; PC := 62
 50 [-]: GETGLOBAL R12 K1       ; R12 := 0x3d106989
 51 [-]: MOVE      R13 R10      ; R13 := R10
 52 [-]: LOADK     R14 K20      ; R14 := ". "
 53 [-]: GETTABLE  R15 R11 K6   ; R15 := R11["Name"]
 54 [-]: LOADK     R16 K21      ; R16 := " -> "
 55 [-]: GETGLOBAL R17 K3       ; R17 := 0x64fb1586
 56 [-]: GETTABLE  R18 R11 K15  ; R18 := R11["Type"]
 57 [-]: SELF      R18 R18 K22  ; R19 := R18; R18 := R18[0xed4e0128]
 58 [-]: CALL      R18 2 0      ; R18,... := R18(R19)
 59 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
 60 [-]: CONCAT    R13 R13 R17  ; R13 := R13 .. R14 .. R15 .. R16 .. R17
 61 [-]: CALL      R12 2 1      ; R12(R13)
 62 [-]: TFORLOOP  R7 2         ; R10,R11 :=  R7(R8,R9); if R10 ~= nil then begin PC = 50; R9 := R10 end
 63 [-]: JMP       50           ; PC := 50
 64 [-]: RETURN    R0 1         ; return 


; Function #56.1:
;
; Name:            
; Defined at line: 2132
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["Name"]
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["Name"]
  3 [-]: LT        1 R2 R3      ; if R2 < R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 6
  6 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #57:
;
; Name:            
; Defined at line: 2143
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x80563238]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0x25a6e75e]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
 29 [-]: RETURN    R3 2         ; return R3
 30 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2[0x98b1bb53]
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 33 [-]: GETGLOBAL R5 K6        ; R5 := gRandomizedArtifactUpgradeType
 34 [-]: CONST     R6 1         ; R6 := 1.000000
 35 [-]: LEN       R7 R3        ; R7 := # R3
 36 [-]: CONST     R8 1         ; R8 := 1.000000
 37 [-]: FORPREP   R6 66        ; R6 -= R8; PC := 66
 38 [-]: GETGLOBAL R10 K7       ; R10 := 0xce225efa
 39 [-]: CONST     R11 0        ; R11 := 0.000000
 40 [-]: CALL      R10 2 1      ; R10(R11)
 41 [-]: GETTABLE  R10 R3 R9    ; R10 := R3[R9]
 42 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["mItemType"]
 43 [-]: GETGLOBAL R11 K2       ; R11 := 0x7b998233
 44 [-]: MOVE      R12 R10      ; R12 := R10
 45 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 46 [-]: TEST      R11 1        ; if R11 then PC := 66
 47 [-]: JMP       66           ; PC := 66
 48 [-]: SELF      R11 R10 K9   ; R12 := R10; R11 := R10[0xf2deaf69]
 49 [-]: MOVE      R13 R5       ; R13 := R5
 50 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 51 [-]: TEST      R11 0        ; if not R11 then PC := 66
 52 [-]: JMP       66           ; PC := 66
 53 [-]: GETUPVAL  R11 U0       ; R11 := U0
 54 [-]: GETTABLE  R11 R11 K10  ; R82 := R11[0xfc31b69e]
 55 [-]: GETTABLE  R12 R3 R9    ; R12 := R3[R9]
 56 [-]: MOVE      R13 R9       ; R13 := R9
 57 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 58 [-]: GETGLOBAL R12 K11      ; R12 := 0x33bdd652
 59 [-]: GETTABLE  R12 R12 K12  ; R82 := R12[0x23d5322f]
 60 [-]: MOVE      R13 R4       ; R13 := R4
 61 [-]: NEWTABLE  R14 0 3      ; R14 := {}
 62 [-]: SETTABLE  R14 K13 R11  ; R14["Card"] := R11
 63 [-]: SETTABLE  R14 K14 R9   ; R14["mCardIndex"] := R9
 64 [-]: SETTABLE  R14 K15 K16  ; R14["Count"] := 1.000000
 65 [-]: CALL      R12 3 1      ; R12(R13,R14)
 66 [-]: FORLOOP   R6 38        ; R6 += R8; if R6 <= R7 then begin PC := 38; R9 := R6 end
 67 [-]: RETURN    R4 2         ; return R4
 68 [-]: RETURN    R0 1         ; return 


; Function #58:
;
; Name:            
; Defined at line: 2175
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x80563238]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0x25a6e75e]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 24 [-]: MOVE      R4 R2        ; R4 := R2
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: TEST      R3 0         ; if not R3 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
 29 [-]: RETURN    R3 2         ; return R3
 30 [-]: GETUPVAL  R3 U0        ; R3 := U0
 31 [-]: GETTABLE  R3 R3 K5     ; R82 := R3[0x1be8b875]
 32 [-]: GETGLOBAL R4 K6        ; R4 := 0x639ad296
 33 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 34 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 35 [-]: GETGLOBAL R5 K7        ; R5 := mGameData
 36 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5[0x25a6e75e]
 37 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 38 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5[0xb139c962]
 39 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 40 [-]: GETGLOBAL R6 K9        ; R6 := 0xc8802016
 41 [-]: MOVE      R7 R5        ; R7 := R5
 42 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 43 [-]: JMP       68           ; PC := 68
 44 [-]: LT        0 R3 R9      ; if R3 >= R9 then PC := 47
 45 [-]: JMP       47           ; PC := 47
 46 [-]: JMP       70           ; PC := 70
 47 [-]: GETTABLE  R11 R10 K10  ; R11 := R10["mName"]
 48 [-]: EQ        1 R11 K11    ; if R11 == nil then PC := 52
 49 [-]: JMP       52           ; PC := 52
 50 [-]: EQ        0 R11 K12    ; if R11 ~= "" then PC := 60
 51 [-]: JMP       60           ; PC := 60
 52 [-]: GETGLOBAL R12 K13      ; R12 := 0xae91e43b
 53 [-]: SELF      R12 R12 K14  ; R13 := R12; R12 := R12[0x42b04007]
 54 [-]: LOADK     R14 K15      ; R14 := "/Lotus/Language/Menu/Composition_SaveSong"
 55 [-]: OP_LOADBOOL R15 0 0      ; R15 := false
 56 [-]: NEWTABLE  R16 0 1      ; R16 := {}
 57 [-]: SETTABLE  R16 K16 R9   ; R16["INDEX"] := R9
 58 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
 59 [-]: MOVE      R11 R12      ; R11 := R12
 60 [-]: GETGLOBAL R12 K17      ; R12 := 0x33bdd652
 61 [-]: GETTABLE  R12 R12 K18  ; R82 := R12[0x23d5322f]
 62 [-]: MOVE      R13 R4       ; R13 := R4
 63 [-]: NEWTABLE  R14 0 3      ; R14 := {}
 64 [-]: SETTABLE  R14 K10 R11  ; R14["mName"] := R11
 65 [-]: SETTABLE  R14 K19 R10  ; R14["Song"] := R10
 66 [-]: SETTABLE  R14 K20 K21  ; R14["mTintIcons"] := true
 67 [-]: CALL      R12 3 1      ; R12(R13,R14)
 68 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 44; R8 := R9 end
 69 [-]: JMP       44           ; PC := 44
 70 [-]: RETURN    R4 2         ; return R4
 71 [-]: RETURN    R0 1         ; return 


; Function #59:
;
; Name:            
; Defined at line: 2211
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  38

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  3 [-]: GETGLOBAL R3 K1        ; R3 := mGameData
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R1 2         ; return R1
  8 [-]: GETGLOBAL R2 K1        ; R2 := mGameData
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x25a6e75e]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 12 [-]: MOVE      R4 R2        ; R4 := R2
 13 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 14 [-]: TEST      R3 0         ; if not R3 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: LOADNIL   R3 R4        ; R3 := R4 := nil
 18 [-]: EQ        0 R0 K4      ; if R0 ~= 0.000000 then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: SELF      R5 R2 K5     ; R6 := R2; R5 := R2[0x0bf14f02]
 21 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 22 [-]: MOVE      R3 R5        ; R3 := R5
 23 [-]: GETUPVAL  R5 U0        ; R5 := U0
 24 [-]: GETTABLE  R4 R5 K6     ; R4 := R5["zawStoreItem"]
 25 [-]: JMP       75           ; PC := 75
 26 [-]: EQ        0 R0 K7      ; if R0 ~= 1.000000 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: SELF      R5 R2 K8     ; R6 := R2; R5 := R2[0x99718a3d]
 29 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 30 [-]: MOVE      R3 R5        ; R3 := R5
 31 [-]: GETUPVAL  R5 U0        ; R5 := U0
 32 [-]: GETTABLE  R4 R5 K9     ; R4 := R5["ampStoreItem"]
 33 [-]: JMP       75           ; PC := 75
 34 [-]: EQ        0 R0 K10     ; if R0 ~= 6.000000 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: SELF      R5 R2 K11    ; R6 := R2; R5 := R2[0x91a3eddf]
 37 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 38 [-]: MOVE      R3 R5        ; R3 := R5
 39 [-]: GETUPVAL  R5 U0        ; R5 := U0
 40 [-]: GETTABLE  R4 R5 K12    ; R4 := R5["moaPetStoreItem"]
 41 [-]: JMP       75           ; PC := 75
 42 [-]: EQ        0 R0 K13     ; if R0 ~= 7.000000 then PC := 50
 43 [-]: JMP       50           ; PC := 50
 44 [-]: SELF      R5 R2 K14    ; R6 := R2; R5 := R2[0x738deb95]
 45 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 46 [-]: MOVE      R3 R5        ; R3 := R5
 47 [-]: GETUPVAL  R5 U0        ; R5 := U0
 48 [-]: GETTABLE  R4 R5 K15    ; R4 := R5["kdriveStoreItem"]
 49 [-]: JMP       75           ; PC := 75
 50 [-]: EQ        1 R0 K16     ; if R0 == 2.000000 then PC := 54
 51 [-]: JMP       54           ; PC := 54
 52 [-]: EQ        0 R0 K17     ; if R0 ~= 3.000000 then PC := 75
 53 [-]: JMP       75           ; PC := 75
 54 [-]: SELF      R5 R2 K18    ; R6 := R2; R5 := R2[0x57d88957]
 55 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 56 [-]: MOVE      R3 R5        ; R3 := R5
 57 [-]: EQ        0 R3 K19     ; if R3 ~= nil then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 60 [-]: MOVE      R3 R5        ; R3 := R5
 61 [-]: SELF      R5 R2 K20    ; R6 := R2; R5 := R2[0x215bf396]
 62 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 63 [-]: GETGLOBAL R6 K21       ; R6 := 0xcfc01047
 64 [-]: MOVE      R7 R5        ; R7 := R5
 65 [-]: CALL      R6 2 4       ; R6,R7,R8 := R6(R7)
 66 [-]: JMP       72           ; PC := 72
 67 [-]: GETGLOBAL R11 K22      ; R11 := 0x33bdd652
 68 [-]: GETTABLE  R11 R11 K23  ; R82 := R11[0x23d5322f]
 69 [-]: MOVE      R12 R3       ; R12 := R3
 70 [-]: MOVE      R13 R10      ; R13 := R10
 71 [-]: CALL      R11 3 1      ; R11(R12,R13)
 72 [-]: TFORLOOP  R6 2         ; R9,R10 :=  R6(R7,R8); if R9 ~= nil then begin PC = 67; R8 := R9 end
 73 [-]: JMP       67           ; PC := 67
 74 [-]: LOADNIL   R4 R4        ; R4 := nil
 75 [-]: CONST     R11 1        ; R11 := 1.000000
 76 [-]: LEN       R12 R3       ; R12 := # R3
 77 [-]: CONST     R13 1        ; R13 := 1.000000
 78 [-]: FORPREP   R11 256      ; R11 -= R13; PC := 256
 79 [-]: GETTABLE  R15 R3 R14   ; R15 := R3[R14]
 80 [-]: GETTABLE  R16 R15 K24  ; R16 := R15["mModularParts"]
 81 [-]: LEN       R16 R16      ; R16 := # R16
 82 [-]: LT        0 K4 R16     ; if 0.000000 >= R16 then PC := 256
 83 [-]: JMP       256          ; PC := 256
 84 [-]: GETGLOBAL R16 K25      ; R16 := 0xa94df70b
 85 [-]: SELF      R16 R16 K26  ; R17 := R16; R16 := R16[0x757f0100]
 86 [-]: GETTABLE  R18 R15 K27  ; R18 := R15["mItemType"]
 87 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
 88 [-]: GETGLOBAL R17 K25      ; R17 := 0xa94df70b
 89 [-]: SELF      R17 R17 K28  ; R18 := R17; R17 := R17[0x8427bf69]
 90 [-]: GETTABLE  R19 R15 K29  ; R19 := R15["mXP"]
 91 [-]: GETTABLE  R20 R15 K27  ; R20 := R15["mItemType"]
 92 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 93 [-]: LE        1 R16 R17    ; if R16 <= R17 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: OP_LOADBOOL R18 0 1      ; R18 := false; PC := 96
 96 [-]: OP_LOADBOOL R18 1 0      ; R18 := true
 97 [-]: LOADK     R19 K30      ; R19 := "Owned"
 98 [-]: GETTABLE  R20 R15 K31  ; R20 := R15["mPolarized"]
 99 [-]: LT        0 K4 R20     ; if 0.000000 >= R20 then PC := 103
100 [-]: JMP       103          ; PC := 103
101 [-]: LOADK     R19 K32      ; R19 := "Forma"
102 [-]: JMP       106          ; PC := 106
103 [-]: TEST      R18 0        ; if not R18 then PC := 106
104 [-]: JMP       106          ; PC := 106
105 [-]: LOADK     R19 K33      ; R19 := "Max"
106 [-]: EQ        0 R4 K19     ; if R4 ~= nil then PC := 235
107 [-]: JMP       235          ; PC := 235
108 [-]: CONST     R20 10       ; R20 := 10.000000
109 [-]: CONST     R21 1        ; R21 := 1.000000
110 [-]: GETTABLE  R22 R15 K24  ; R22 := R15["mModularParts"]
111 [-]: LEN       R22 R22      ; R22 := # R22
112 [-]: CONST     R23 1        ; R23 := 1.000000
113 [-]: FORPREP   R21 138      ; R21 -= R23; PC := 138
114 [-]: GETGLOBAL R25 K0       ; R25 := 0x7b998233
115 [-]: GETTABLE  R26 R15 K24  ; R26 := R15["mModularParts"]
116 [-]: GETTABLE  R26 R26 R24  ; R26 := R26[R24]
117 [-]: CALL      R25 2 2      ; R25 := R25(R26)
118 [-]: TEST      R25 1        ; if R25 then PC := 138
119 [-]: JMP       138          ; PC := 138
120 [-]: GETTABLE  R25 R15 K24  ; R25 := R15["mModularParts"]
121 [-]: GETTABLE  R25 R25 R24  ; R25 := R25[R24]
122 [-]: SELF      R25 R25 K34  ; R26 := R25; R25 := R25[0xf2deaf69]
123 [-]: GETGLOBAL R27 K35      ; R27 := gLotusGunHandleType
124 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
125 [-]: TEST      R25 0        ; if not R25 then PC := 138
126 [-]: JMP       138          ; PC := 138
127 [-]: GETTABLE  R25 R15 K24  ; R25 := R15["mModularParts"]
128 [-]: GETTABLE  R25 R25 R24  ; R25 := R25[R24]
129 [-]: SELF      R25 R25 K34  ; R26 := R25; R25 := R25[0xf2deaf69]
130 [-]: GETGLOBAL R27 K36      ; R27 := gLotusGunPrimaryHandleType
131 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
132 [-]: TEST      R25 0        ; if not R25 then PC := 136
133 [-]: JMP       136          ; PC := 136
134 [-]: CONST     R20 2        ; R20 := 2.000000
135 [-]: JMP       139          ; PC := 139
136 [-]: CONST     R20 3        ; R20 := 3.000000
137 [-]: JMP       139          ; PC := 139
138 [-]: FORLOOP   R21 114      ; R21 += R23; if R21 <= R22 then begin PC := 114; R24 := R21 end
139 [-]: EQ        1 R20 K37    ; if R20 == 10.000000 then PC := 235
140 [-]: JMP       235          ; PC := 235
141 [-]: CONST     R25 1        ; R25 := 1.000000
142 [-]: GETTABLE  R26 R15 K24  ; R26 := R15["mModularParts"]
143 [-]: LEN       R26 R26      ; R26 := # R26
144 [-]: CONST     R27 1        ; R27 := 1.000000
145 [-]: FORPREP   R25 234      ; R25 -= R27; PC := 234
146 [-]: GETTABLE  R29 R15 K24  ; R29 := R15["mModularParts"]
147 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
148 [-]: SELF      R29 R29 K34  ; R30 := R29; R29 := R29[0xf2deaf69]
149 [-]: GETGLOBAL R31 K38      ; R31 := gLotusGunBarrelType
150 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
151 [-]: TEST      R29 0        ; if not R29 then PC := 234
152 [-]: JMP       234          ; PC := 234
153 [-]: GETGLOBAL R29 K39      ; R29 := 0xb009bbc6
154 [-]: GETTABLE  R30 R15 K24  ; R30 := R15["mModularParts"]
155 [-]: GETTABLE  R30 R30 R28  ; R30 := R30[R28]
156 [-]: CALL      R29 2 2      ; R29 := R29(R30)
157 [-]: SELF      R30 R29 K40  ; R31 := R29; R30 := R29[0xc8b94e30]
158 [-]: CALL      R30 2 2      ; R30 := R30(R31)
159 [-]: EQ        0 R30 K4     ; if R30 ~= 0.000000 then PC := 174
160 [-]: JMP       174          ; PC := 174
161 [-]: GETUPVAL  R31 U1       ; R31 := U1
162 [-]: GETTABLE  R31 R31 K41  ; R82 := R31[0x06d055f9]
163 [-]: EQ        1 R20 K16    ; if R20 == 2.000000 then PC := 166
164 [-]: JMP       166          ; PC := 166
165 [-]: OP_LOADBOOL R32 0 1      ; R32 := false; PC := 166
166 [-]: OP_LOADBOOL R32 1 0      ; R32 := true
167 [-]: GETUPVAL  R33 U0       ; R33 := U0
168 [-]: GETTABLE  R33 R33 K42  ; R33 := R33["primaryRifleType"]
169 [-]: GETUPVAL  R34 U0       ; R34 := U0
170 [-]: GETTABLE  R34 R34 K43  ; R34 := R34["secondaryRifleType"]
171 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
172 [-]: MOVE      R4 R31       ; R4 := R31
173 [-]: JMP       235          ; PC := 235
174 [-]: EQ        0 R30 K7     ; if R30 ~= 1.000000 then PC := 189
175 [-]: JMP       189          ; PC := 189
176 [-]: GETUPVAL  R31 U1       ; R31 := U1
177 [-]: GETTABLE  R31 R31 K41  ; R82 := R31[0x06d055f9]
178 [-]: EQ        1 R20 K16    ; if R20 == 2.000000 then PC := 181
179 [-]: JMP       181          ; PC := 181
180 [-]: OP_LOADBOOL R32 0 1      ; R32 := false; PC := 181
181 [-]: OP_LOADBOOL R32 1 0      ; R32 := true
182 [-]: GETUPVAL  R33 U0       ; R33 := U0
183 [-]: GETTABLE  R33 R33 K44  ; R33 := R33["primaryShotgunType"]
184 [-]: GETUPVAL  R34 U0       ; R34 := U0
185 [-]: GETTABLE  R34 R34 K45  ; R34 := R34["secondaryShotgunType"]
186 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
187 [-]: MOVE      R4 R31       ; R4 := R31
188 [-]: JMP       235          ; PC := 235
189 [-]: EQ        0 R30 K16    ; if R30 ~= 2.000000 then PC := 204
190 [-]: JMP       204          ; PC := 204
191 [-]: GETUPVAL  R31 U1       ; R31 := U1
192 [-]: GETTABLE  R31 R31 K41  ; R82 := R31[0x06d055f9]
193 [-]: EQ        1 R20 K16    ; if R20 == 2.000000 then PC := 196
194 [-]: JMP       196          ; PC := 196
195 [-]: OP_LOADBOOL R32 0 1      ; R32 := false; PC := 196
196 [-]: OP_LOADBOOL R32 1 0      ; R32 := true
197 [-]: GETUPVAL  R33 U0       ; R33 := U0
198 [-]: GETTABLE  R33 R33 K46  ; R33 := R33["primarySniperType"]
199 [-]: GETUPVAL  R34 U0       ; R34 := U0
200 [-]: GETTABLE  R34 R34 K47  ; R34 := R34["secondarySniperType"]
201 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
202 [-]: MOVE      R4 R31       ; R4 := R31
203 [-]: JMP       235          ; PC := 235
204 [-]: EQ        0 R30 K17    ; if R30 ~= 3.000000 then PC := 219
205 [-]: JMP       219          ; PC := 219
206 [-]: GETUPVAL  R31 U1       ; R31 := U1
207 [-]: GETTABLE  R31 R31 K41  ; R82 := R31[0x06d055f9]
208 [-]: EQ        1 R20 K16    ; if R20 == 2.000000 then PC := 211
209 [-]: JMP       211          ; PC := 211
210 [-]: OP_LOADBOOL R32 0 1      ; R32 := false; PC := 211
211 [-]: OP_LOADBOOL R32 1 0      ; R32 := true
212 [-]: GETUPVAL  R33 U0       ; R33 := U0
213 [-]: GETTABLE  R33 R33 K48  ; R33 := R33["primaryLauncherType"]
214 [-]: GETUPVAL  R34 U0       ; R34 := U0
215 [-]: GETTABLE  R34 R34 K49  ; R34 := R34["secondaryLauncherType"]
216 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
217 [-]: MOVE      R4 R31       ; R4 := R31
218 [-]: JMP       235          ; PC := 235
219 [-]: EQ        0 R30 K50    ; if R30 ~= 4.000000 then PC := 235
220 [-]: JMP       235          ; PC := 235
221 [-]: GETUPVAL  R31 U1       ; R31 := U1
222 [-]: GETTABLE  R31 R31 K41  ; R82 := R31[0x06d055f9]
223 [-]: EQ        1 R20 K16    ; if R20 == 2.000000 then PC := 226
224 [-]: JMP       226          ; PC := 226
225 [-]: OP_LOADBOOL R32 0 1      ; R32 := false; PC := 226
226 [-]: OP_LOADBOOL R32 1 0      ; R32 := true
227 [-]: GETUPVAL  R33 U0       ; R33 := U0
228 [-]: GETTABLE  R33 R33 K51  ; R33 := R33["primaryBeamType"]
229 [-]: GETUPVAL  R34 U0       ; R34 := U0
230 [-]: GETTABLE  R34 R34 K52  ; R34 := R34["secondaryBeamType"]
231 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
232 [-]: MOVE      R4 R31       ; R4 := R31
233 [-]: JMP       235          ; PC := 235
234 [-]: FORLOOP   R25 146      ; R25 += R27; if R25 <= R26 then begin PC := 146; R28 := R25 end
235 [-]: GETGLOBAL R31 K22      ; R31 := 0x33bdd652
236 [-]: GETTABLE  R31 R31 K23  ; R82 := R31[0x23d5322f]
237 [-]: MOVE      R32 R1       ; R32 := R1
238 [-]: NEWTABLE  R33 0 5      ; R33 := {}
239 [-]: SETTABLE  R33 K53 R19  ; R33["OwnedStatus"] := R19
240 [-]: GETTABLE  R34 R15 K31  ; R34 := R15["mPolarized"]
241 [-]: SETTABLE  R33 K54 R34  ; R33["Polarized"] := R34
242 [-]: GETUPVAL  R34 U1       ; R34 := U1
243 [-]: GETTABLE  R34 R34 K41  ; R82 := R34[0x06d055f9]
244 [-]: GETTABLE  R35 R15 K56  ; R35 := R15["mItemName"]
245 [-]: EQ        0 R35 K57    ; if R35 ~= "" then PC := 248
246 [-]: JMP       248          ; PC := 248
247 [-]: OP_LOADBOOL R35 0 1      ; R35 := false; PC := 248
248 [-]: OP_LOADBOOL R35 1 0      ; R35 := true
249 [-]: GETTABLE  R36 R15 K56  ; R36 := R15["mItemName"]
250 [-]: LOADNIL   R37 R37      ; R37 := nil
251 [-]: CALL      R34 4 2      ; R34 := R34(R35,R36,R37)
252 [-]: SETTABLE  R33 K55 R34  ; R33["Name"] := R34
253 [-]: SETTABLE  R33 K58 R4   ; R33["StoreItem"] := R4
254 [-]: SETTABLE  R33 K59 R15  ; R33["RawItem"] := R15
255 [-]: CALL      R31 3 1      ; R31(R32,R33)
256 [-]: FORLOOP   R11 79       ; R11 += R13; if R11 <= R12 then begin PC := 79; R14 := R11 end
257 [-]: RETURN    R1 2         ; return R1
258 [-]: RETURN    R0 1         ; return 


; Function #60:
;
; Name:            
; Defined at line: 2304
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x3f3ae64c]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  6 [-]: MOVE      R2 R0        ; R2 := R0
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 12
  9 [-]: JMP       12           ; PC := 12
 10 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x80563238]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 0         ; if not R2 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: SELF      R2 R1 K4     ; R3 := R1; R2 := R1[0x62c81b76]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: NEWTABLE  R3 3 0       ; R3 := {}
 24 [-]: CONST     R4 0         ; R4 := 0.000000
 25 [-]: CONST     R5 1         ; R5 := 1.000000
 26 [-]: CONST     R6 2         ; R6 := 2.000000
 27 [-]: SETLIST   R3 3 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 3
 28 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 29 [-]: GETGLOBAL R5 K6        ; R5 := 0xc8802016
 30 [-]: MOVE      R6 R3        ; R6 := R3
 31 [-]: CALL      R5 2 4       ; R5,R6,R7 := R5(R6)
 32 [-]: JMP       81           ; PC := 81
 33 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
 34 [-]: CONST     R11 0        ; R11 := 0.000000
 35 [-]: GETGLOBAL R12 K5       ; R12 := 0x6c97a788
 36 [-]: GETTABLE  R12 R12 K7   ; R12 := R12["NUM_NORMAL_LOADOUT_SLOTS"]
 37 [-]: CONST     R13 1        ; R13 := 1.000000
 38 [-]: FORPREP   R11 80       ; R11 -= R13; PC := 80
 39 [-]: SELF      R15 R2 K8    ; R16 := R2; R15 := R2[0xc1a84a4b]
 40 [-]: MOVE      R17 R9       ; R17 := R9
 41 [-]: MOVE      R18 R14      ; R18 := R14
 42 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 43 [-]: GETGLOBAL R16 K2       ; R16 := 0x7b998233
 44 [-]: GETTABLE  R17 R15 K9   ; R17 := R15["mItem"]
 45 [-]: GETTABLE  R17 R17 K10  ; R17 := R17["mItemType"]
 46 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 47 [-]: TEST      R16 1        ; if R16 then PC := 80
 48 [-]: JMP       80           ; PC := 80
 49 [-]: EQ        0 R14 K11    ; if R14 ~= 0.000000 then PC := 52
 50 [-]: JMP       52           ; PC := 52
 51 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
 52 [-]: TEST      R10 0        ; if not R10 then PC := 80
 53 [-]: JMP       80           ; PC := 80
 54 [-]: GETGLOBAL R16 K12      ; R16 := 0xb009bbc6
 55 [-]: GETTABLE  R17 R15 K9   ; R17 := R15["mItem"]
 56 [-]: GETTABLE  R17 R17 K10  ; R17 := R17["mItemType"]
 57 [-]: CALL      R16 2 2      ; R16 := R16(R17)
 58 [-]: GETGLOBAL R17 K2       ; R17 := 0x7b998233
 59 [-]: MOVE      R18 R16      ; R18 := R16
 60 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 61 [-]: TEST      R17 1        ; if R17 then PC := 80
 62 [-]: JMP       80           ; PC := 80
 63 [-]: GETGLOBAL R17 K13      ; R17 := 0xae91e43b
 64 [-]: SELF      R17 R17 K14  ; R18 := R17; R17 := R17[0x42b04007]
 65 [-]: SELF      R19 R16 K15  ; R20 := R16; R19 := R16[0xd3a9d01f]
 66 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 67 [-]: SELF      R19 R19 K16  ; R20 := R19; R19 := R19[0x6d604ba7]
 68 [-]: CALL      R19 2 2      ; R19 := R19(R20)
 69 [-]: OP_LOADBOOL R20 0 0      ; R20 := false
 70 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
 71 [-]: GETGLOBAL R18 K17      ; R18 := 0x33bdd652
 72 [-]: GETTABLE  R18 R18 K18  ; R82 := R18[0x23d5322f]
 73 [-]: MOVE      R19 R4       ; R19 := R4
 74 [-]: NEWTABLE  R20 0 4      ; R20 := {}
 75 [-]: SETTABLE  R20 K19 R17  ; R20["mName"] := R17
 76 [-]: SETTABLE  R20 K20 R15  ; R20["mStoredItem"] := R15
 77 [-]: SETTABLE  R20 K21 R9   ; R20["mLoadoutType"] := R9
 78 [-]: SETTABLE  R20 K22 R14  ; R20["mLoadoutSlot"] := R14
 79 [-]: CALL      R18 3 1      ; R18(R19,R20)
 80 [-]: FORLOOP   R11 39       ; R11 += R13; if R11 <= R12 then begin PC := 39; R14 := R11 end
 81 [-]: TFORLOOP  R5 2         ; R8,R9 :=  R5(R6,R7); if R8 ~= nil then begin PC = 33; R7 := R8 end
 82 [-]: JMP       33           ; PC := 33
 83 [-]: RETURN    R4 2         ; return R4
 84 [-]: RETURN    R0 1         ; return 


; Function #61:
;
; Name:            
; Defined at line: 2343
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x89326c93
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x89326c93
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x18d05d30]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 28
 10 [-]: JMP       28           ; PC := 28
 11 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 12 [-]: GETGLOBAL R1 K3        ; R1 := 0xbe190284
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R0 K3        ; R0 := 0xbe190284
 17 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xf2deaf69]
 18 [-]: GETGLOBAL R2 K5        ; R2 := gLotusAttractModeGameRulesType
 19 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 20 [-]: TEST      R0 1         ; if R0 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R0 K3        ; R0 := 0xbe190284
 23 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xffe25891]
 24 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 25 [-]: JMP       28           ; PC := 28
 26 [-]: OP_LOADBOOL R0 0 1       ; R0 := false; PC := 27
 27 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 28 [-]: RETURN    R0 2         ; return R0
 29 [-]: RETURN    R0 1         ; return 


; Function #62:
;
; Name:            
; Defined at line: 2347
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: SELF      R4 R1 K0     ; R5 := R1; R4 := R1[0x66edf04f]
  2 [-]: LOADK     R6 K1        ; R6 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
  3 [-]: LOADK     R7 K2        ; R7 := "%%%0"
  4 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  5 [-]: GETUPVAL  R5 U0        ; R5 := U0
  6 [-]: GETGLOBAL R6 K4        ; R6 := 0x7f5022cf
  7 [-]: GETTABLE  R6 R6 K0     ; R82 := R6[0x66edf04f]
  8 [-]: MOVE      R7 R0        ; R7 := R0
  9 [-]: LOADK     R8 K5        ; R8 := "%["
 10 [-]: MOVE      R9 R4        ; R9 := R4
 11 [-]: LOADK     R10 K6       ; R10 := "%]"
 12 [-]: CONCAT    R8 R8 R10    ; R8 := R8 .. R9 .. R10
 13 [-]: LOADK     R9 K7        ; R9 := "["
 14 [-]: MOVE      R10 R2       ; R10 := R2
 15 [-]: LOADK     R11 K8       ; R11 := "]"
 16 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 17 [-]: CONST     R10 1        ; R10 := 1.000000
 18 [-]: CALL      R6 5 2       ; R6 := R6(R7,R8,R9,R10)
 19 [-]: SETTABLE  R5 K3 R6     ; R5["Msg"] := R6
 20 [-]: LOADK     R5 K9        ; R5 := "{"
 21 [-]: MOVE      R6 R2        ; R6 := R2
 22 [-]: LOADK     R7 K10       ; R7 := "}"
 23 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 24 [-]: GETUPVAL  R6 U1        ; R6 := U1
 25 [-]: GETTABLE  R6 R6 K11    ; R82 := R6[0x06d055f9]
 26 [-]: GETTABLE  R7 R3 R5     ; R7 := R3[R5]
 27 [-]: EQ        1 R7 K12     ; if R7 == nil then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: OP_LOADBOOL R7 0 1       ; R7 := false; PC := 30
 30 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 31 [-]: CONST     R8 0         ; R8 := 0.000000
 32 [-]: GETTABLE  R9 R3 R5     ; R9 := R3[R5]
 33 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 34 [-]: ADD       R6 R6 K13    ; R6 := R6 + 1.000000
 35 [-]: SETTABLE  R3 R5 R6     ; R3[R5] := R6
 36 [-]: GETGLOBAL R6 K14       ; R6 := mWindow
 37 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["mActivePanelName"]
 38 [-]: EQ        1 R6 K16     ; if R6 == "" then PC := 71
 39 [-]: JMP       71           ; PC := 71
 40 [-]: GETGLOBAL R6 K14       ; R6 := mWindow
 41 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["mInputPanel"]
 42 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["mMaxMsgLength"]
 43 [-]: GETGLOBAL R7 K14       ; R7 := mWindow
 44 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["mInputPanel"]
 45 [-]: GETGLOBAL R8 K14       ; R8 := mWindow
 46 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["mInputPanel"]
 47 [-]: GETTABLE  R8 R8 K19    ; R8 := R8["MAX_MSG_LIMIT"]
 48 [-]: SETTABLE  R7 K18 R8    ; R7["mMaxMsgLength"] := R8
 49 [-]: GETGLOBAL R7 K14       ; R7 := mWindow
 50 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["mPanelList"]
 51 [-]: GETGLOBAL R8 K14       ; R8 := mWindow
 52 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["mActivePanelName"]
 53 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 54 [-]: SELF      R7 R7 K21    ; R8 := R7; R7 := R7[0x83b2653c]
 55 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 56 [-]: TEST      R7 1         ; if R7 then PC := 68
 57 [-]: JMP       68           ; PC := 68
 58 [-]: GETGLOBAL R7 K22       ; R7 := 0xae91e43b
 59 [-]: SELF      R7 R7 K23    ; R8 := R7; R7 := R7[0x5f56eeab]
 60 [-]: GETGLOBAL R9 K14       ; R9 := mWindow
 61 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["mInputPanel"]
 62 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["mClipPath"]
 63 [-]: LOADK     R10 K25      ; R10 := ".MessageBox"
 64 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 65 [-]: CONST     R10 29       ; R10 := 29.000000
 66 [-]: LOADK     R11 K16      ; R11 := ""
 67 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 68 [-]: GETGLOBAL R7 K14       ; R7 := mWindow
 69 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["mInputPanel"]
 70 [-]: SETTABLE  R7 K18 R6    ; R7["mMaxMsgLength"] := R6
 71 [-]: RETURN    R0 1         ; return 


; Function #63:
;
; Name:            
; Defined at line: 2367
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["OmegaLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #64:
;
; Name:            
; Defined at line: 2371
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["SongLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #65:
;
; Name:            
; Defined at line: 2375
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["ZawLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #66:
;
; Name:            
; Defined at line: 2379
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["AmpLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #67:
;
; Name:            
; Defined at line: 2383
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["MoaPetLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #68:
;
; Name:            
; Defined at line: 2387
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["KdriveLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #69:
;
; Name:            
; Defined at line: 2391
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["KitgunLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #70:
;
; Name:            
; Defined at line: 2395
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["AppearanceLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #71:
;
; Name:            
; Defined at line: 2399
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["ModConfigLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #72:
;
; Name:            
; Defined at line: 2403
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETUPVAL  R2 U1        ; R2 := U1
  3 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["Msg"]
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["CurrItemString"]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: GETUPVAL  R5 U1        ; R5 := U1
  8 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["ShawzinLinks"]
  9 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 10 [-]: RETURN    R0 1         ; return 


; Function #73:
;
; Name:            
; Defined at line: 2407
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  31

  1 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x8b75da5a]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 0         ; if not R3 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 10 [-]: RETURN    R3 2         ; return R3
 11 [-]: GETGLOBAL R3 K3        ; R3 := 0x0a8f62a7
 12 [-]: CALL      R3 1 2       ; R3 := R3()
 13 [-]: GETTABLE  R4 R2 K4     ; R4 := R2["mParent"]
 14 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mPanelShortcuts"]
 15 [-]: GETGLOBAL R5 K0        ; R5 := mWindow
 16 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["CHANNEL_TRADE"]
 17 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 18 [-]: EQ        1 R1 R4      ; if R1 == R4 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 21
 21 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 22 [-]: TEST      R4 0         ; if not R4 then PC := 46
 23 [-]: JMP       46           ; PC := 46
 24 [-]: GETGLOBAL R5 K7        ; R5 := 0x0032441c
 25 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["TradeSpamBlockTime"]
 26 [-]: EQ        1 R5 K9      ; if R5 == nil then PC := 46
 27 [-]: JMP       46           ; PC := 46
 28 [-]: GETGLOBAL R5 K7        ; R5 := 0x0032441c
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["TradeSpamBlockTime"]
 30 [-]: SUB       R5 R3 R5     ; R5 := R3 - R5
 31 [-]: GETUPVAL  R6 U0        ; R6 := U0
 32 [-]: GETTABLE  R6 R6 K10    ; R6 := R6["TRADE_SPAM_DETECTION_PERIOD"]
 33 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETGLOBAL R5 K7        ; R5 := 0x0032441c
 36 [-]: SETTABLE  R5 K8 K9     ; R5["TradeSpamBlockTime"] := nil
 37 [-]: SETTABLE  R2 K11 K9    ; R2["mSpamBlockTime"] := nil
 38 [-]: JMP       63           ; PC := 63
 39 [-]: GETTABLE  R5 R2 K12    ; R82 := R5[0x1b01220c]
 40 [-]: MOVE      R6 R2        ; R6 := R2
 41 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 42 [-]: CALL      R5 3 1       ; R5(R6,R7)
 43 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 44 [-]: RETURN    R5 2         ; return R5
 45 [-]: JMP       63           ; PC := 63
 46 [-]: GETTABLE  R5 R2 K11    ; R5 := R2["mSpamBlockTime"]
 47 [-]: EQ        1 R5 K9      ; if R5 == nil then PC := 63
 48 [-]: JMP       63           ; PC := 63
 49 [-]: GETTABLE  R5 R2 K11    ; R5 := R2["mSpamBlockTime"]
 50 [-]: SUB       R5 R3 R5     ; R5 := R3 - R5
 51 [-]: GETUPVAL  R6 U0        ; R6 := U0
 52 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["SPAM_LOCKOUT_TIME"]
 53 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 57
 54 [-]: JMP       57           ; PC := 57
 55 [-]: SETTABLE  R2 K11 K9    ; R2["mSpamBlockTime"] := nil
 56 [-]: JMP       63           ; PC := 63
 57 [-]: GETTABLE  R5 R2 K12    ; R82 := R5[0x1b01220c]
 58 [-]: MOVE      R6 R2        ; R6 := R2
 59 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 60 [-]: CALL      R5 3 1       ; R5(R6,R7)
 61 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 62 [-]: RETURN    R5 2         ; return R5
 63 [-]: GETGLOBAL R5 K14       ; R5 := 0x7f5022cf
 64 [-]: GETTABLE  R5 R5 K15    ; R82 := R5[0x04981ab3]
 65 [-]: MOVE      R6 R0        ; R6 := R0
 66 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 67 [-]: NEWTABLE  R6 2 0       ; R6 := {}
 68 [-]: LOADK     R7 K16       ; R7 := "%s+"
 69 [-]: LOADK     R8 K17       ; R8 := "%p+"
 70 [-]: SETLIST   R6 2 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
 71 [-]: CONST     R7 1         ; R7 := 1.000000
 72 [-]: LEN       R8 R6        ; R8 := # R6
 73 [-]: CONST     R9 1         ; R9 := 1.000000
 74 [-]: FORPREP   R7 82        ; R7 -= R9; PC := 82
 75 [-]: GETGLOBAL R11 K14      ; R11 := 0x7f5022cf
 76 [-]: GETTABLE  R11 R11 K18  ; R82 := R11[0x66edf04f]
 77 [-]: MOVE      R12 R5       ; R12 := R5
 78 [-]: GETTABLE  R13 R6 R10   ; R13 := R6[R10]
 79 [-]: LOADK     R14 K19      ; R14 := ""
 80 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 81 [-]: MOVE      R5 R11       ; R5 := R11
 82 [-]: FORLOOP   R7 75        ; R7 += R9; if R7 <= R8 then begin PC := 75; R10 := R7 end
 83 [-]: CONST     R11 97       ; R11 := 97.000000
 84 [-]: CONST     R12 122      ; R12 := 122.000000
 85 [-]: CONST     R13 1        ; R13 := 1.000000
 86 [-]: FORPREP   R11 101      ; R11 -= R13; PC := 101
 87 [-]: GETGLOBAL R15 K14      ; R15 := 0x7f5022cf
 88 [-]: GETTABLE  R15 R15 K20  ; R82 := R15[0x0da4acb2]
 89 [-]: MOVE      R16 R14      ; R16 := R14
 90 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 91 [-]: GETGLOBAL R16 K14      ; R16 := 0x7f5022cf
 92 [-]: GETTABLE  R16 R16 K18  ; R82 := R16[0x66edf04f]
 93 [-]: MOVE      R17 R5       ; R17 := R5
 94 [-]: MOVE      R18 R15      ; R18 := R15
 95 [-]: MOVE      R19 R15      ; R19 := R15
 96 [-]: LOADK     R20 K21      ; R20 := "+"
 97 [-]: CONCAT    R18 R18 R20  ; R18 := R18 .. R19 .. R20
 98 [-]: MOVE      R19 R15      ; R19 := R15
 99 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
100 [-]: MOVE      R5 R16       ; R5 := R16
101 [-]: FORLOOP   R11 87       ; R11 += R13; if R11 <= R12 then begin PC := 87; R14 := R11 end
102 [-]: LOADNIL   R16 R16      ; R16 := nil
103 [-]: TEST      R4 1         ; if R4 then PC := 137
104 [-]: JMP       137          ; PC := 137
105 [-]: CONST     R17 1        ; R17 := 1.000000
106 [-]: GETTABLE  R18 R2 K22   ; R18 := R2["mLastMessageData"]
107 [-]: LEN       R18 R18      ; R18 := # R18
108 [-]: CONST     R19 1        ; R19 := 1.000000
109 [-]: FORPREP   R17 136      ; R17 -= R19; PC := 136
110 [-]: GETTABLE  R21 R2 K22   ; R21 := R2["mLastMessageData"]
111 [-]: GETTABLE  R21 R21 R20  ; R21 := R21[R20]
112 [-]: GETTABLE  R22 R21 K23  ; R22 := R21["Message"]
113 [-]: EQ        0 R5 R22     ; if R5 ~= R22 then PC := 136
114 [-]: JMP       136          ; PC := 136
115 [-]: GETTABLE  R22 R21 K24  ; R22 := R21["Time"]
116 [-]: SUB       R22 R3 R22   ; R22 := R3 - R22
117 [-]: GETUPVAL  R23 U0       ; R23 := U0
118 [-]: GETTABLE  R23 R23 K25  ; R23 := R23["SPAM_REPEATED_MESSAGE_DETECTION_PERIOD"]
119 [-]: LT        0 R22 R23    ; if R22 >= R23 then PC := 136
120 [-]: JMP       136          ; PC := 136
121 [-]: GETGLOBAL R22 K26      ; R22 := 0x5bced4c4
122 [-]: GETTABLE  R22 R22 K27  ; R82 := R22[0xb62ecfe0]
123 [-]: CONST     R23 1        ; R23 := 1.000000
124 [-]: GETGLOBAL R24 K26      ; R24 := 0x5bced4c4
125 [-]: GETTABLE  R24 R24 K28  ; R82 := R24[0x55f27c30]
126 [-]: GETUPVAL  R25 U0       ; R25 := U0
127 [-]: GETTABLE  R25 R25 K25  ; R25 := R25["SPAM_REPEATED_MESSAGE_DETECTION_PERIOD"]
128 [-]: GETTABLE  R26 R21 K24  ; R26 := R21["Time"]
129 [-]: SUB       R26 R3 R26   ; R26 := R3 - R26
130 [-]: SUB       R25 R25 R26  ; R25 := R25 - R26
131 [-]: ADD       R25 K29 R25  ; R25 := 0.500000 + R25
132 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
133 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
134 [-]: MOVE      R16 R22      ; R16 := R22
135 [-]: JMP       137          ; PC := 137
136 [-]: FORLOOP   R17 110      ; R17 += R19; if R17 <= R18 then begin PC := 110; R20 := R17 end
137 [-]: GETTABLE  R22 R2 K4    ; R22 := R2["mParent"]
138 [-]: GETTABLE  R22 R22 K5   ; R22 := R22["mPanelShortcuts"]
139 [-]: GETGLOBAL R23 K0       ; R23 := mWindow
140 [-]: GETTABLE  R23 R23 K30  ; R23 := R23["CHANNEL_GLOBAL"]
141 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
142 [-]: EQ        1 R1 R22     ; if R1 == R22 then PC := 153
143 [-]: JMP       153          ; PC := 153
144 [-]: GETTABLE  R22 R2 K4    ; R22 := R2["mParent"]
145 [-]: GETTABLE  R22 R22 K5   ; R22 := R22["mPanelShortcuts"]
146 [-]: GETGLOBAL R23 K0       ; R23 := mWindow
147 [-]: GETTABLE  R23 R23 K31  ; R23 := R23["CHANNEL_RECRUITING"]
148 [-]: GETTABLE  R22 R22 R23  ; R22 := R22[R23]
149 [-]: EQ        1 R1 R22     ; if R1 == R22 then PC := 153
150 [-]: JMP       153          ; PC := 153
151 [-]: TEST      R4 0         ; if not R4 then PC := 226
152 [-]: JMP       226          ; PC := 226
153 [-]: EQ        1 R16 K9     ; if R16 == nil then PC := 175
154 [-]: JMP       175          ; PC := 175
155 [-]: GETGLOBAL R22 K2       ; R22 := 0x7b998233
156 [-]: MOVE      R23 R2       ; R23 := R2
157 [-]: CALL      R22 2 2      ; R22 := R22(R23)
158 [-]: TEST      R22 1        ; if R22 then PC := 172
159 [-]: JMP       172          ; PC := 172
160 [-]: SELF      R22 R2 K32   ; R23 := R2; R22 := R2[0xd4f2405e]
161 [-]: GETGLOBAL R24 K33      ; R24 := 0xae91e43b
162 [-]: SELF      R24 R24 K34  ; R25 := R24; R24 := R24[0x42b04007]
163 [-]: LOADK     R26 K35      ; R26 := "/Lotus/Language/Menu/Chat_DupMessageBlock"
164 [-]: OP_LOADBOOL R27 0 0      ; R27 := false
165 [-]: NEWTABLE  R28 0 1      ; R28 := {}
166 [-]: GETGLOBAL R29 K37      ; R29 := 0x64fb1586
167 [-]: MOVE      R30 R16      ; R30 := R16
168 [-]: CALL      R29 2 2      ; R29 := R29(R30)
169 [-]: SETTABLE  R28 K36 R29  ; R28["TIME"] := R29
170 [-]: CALL      R24 5 0      ; R24,... := R24(R25,R26,R27,R28)
171 [-]: CALL      R22 0 1      ; R22(R23,...)
172 [-]: OP_LOADBOOL R22 1 0      ; R22 := true
173 [-]: RETURN    R22 2        ; return R22
174 [-]: JMP       226          ; PC := 226
175 [-]: GETUPVAL  R22 U1       ; R22 := U1
176 [-]: GETTABLE  R22 R22 K38  ; R82 := R22[0x06d055f9]
177 [-]: MOVE      R23 R4       ; R23 := R4
178 [-]: GETUPVAL  R24 U0       ; R24 := U0
179 [-]: GETTABLE  R24 R24 K39  ; R24 := R24["TRADE_MSGS_PER_PERIOD"]
180 [-]: GETUPVAL  R25 U0       ; R25 := U0
181 [-]: GETTABLE  R25 R25 K40  ; R25 := R25["MSGS_PER_PERIOD"]
182 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
183 [-]: GETTABLE  R23 R2 K22   ; R23 := R2["mLastMessageData"]
184 [-]: LEN       R23 R23      ; R23 := # R23
185 [-]: LE        0 R22 R23    ; if R22 > R23 then PC := 192
186 [-]: JMP       192          ; PC := 192
187 [-]: GETGLOBAL R23 K41      ; R23 := 0x33bdd652
188 [-]: GETTABLE  R23 R23 K42  ; R82 := R23[0x9c1f3b5a]
189 [-]: GETTABLE  R24 R2 K22   ; R24 := R2["mLastMessageData"]
190 [-]: CONST     R25 1        ; R25 := 1.000000
191 [-]: CALL      R23 3 1      ; R23(R24,R25)
192 [-]: GETGLOBAL R23 K41      ; R23 := 0x33bdd652
193 [-]: GETTABLE  R23 R23 K43  ; R82 := R23[0x23d5322f]
194 [-]: GETTABLE  R24 R2 K22   ; R24 := R2["mLastMessageData"]
195 [-]: NEWTABLE  R25 0 2      ; R25 := {}
196 [-]: SETTABLE  R25 K23 R5   ; R25["Message"] := R5
197 [-]: SETTABLE  R25 K24 R3   ; R25["Time"] := R3
198 [-]: CALL      R23 3 1      ; R23(R24,R25)
199 [-]: GETTABLE  R23 R2 K22   ; R23 := R2["mLastMessageData"]
200 [-]: LEN       R23 R23      ; R23 := # R23
201 [-]: LE        0 R22 R23    ; if R22 > R23 then PC := 226
202 [-]: JMP       226          ; PC := 226
203 [-]: GETTABLE  R23 R2 K22   ; R23 := R2["mLastMessageData"]
204 [-]: GETTABLE  R23 R23 K44  ; R23 := R23[1.000000]
205 [-]: GETTABLE  R23 R23 K24  ; R23 := R23["Time"]
206 [-]: SUB       R24 R3 R23   ; R24 := R3 - R23
207 [-]: TEST      R4 0         ; if not R4 then PC := 219
208 [-]: JMP       219          ; PC := 219
209 [-]: GETUPVAL  R25 U0       ; R25 := U0
210 [-]: GETTABLE  R25 R25 K10  ; R25 := R25["TRADE_SPAM_DETECTION_PERIOD"]
211 [-]: LT        0 R24 R25    ; if R24 >= R25 then PC := 226
212 [-]: JMP       226          ; PC := 226
213 [-]: GETGLOBAL R25 K7       ; R25 := 0x0032441c
214 [-]: SETTABLE  R25 K8 R23   ; R25["TradeSpamBlockTime"] := R23
215 [-]: SETTABLE  R2 K11 R23   ; R2["mSpamBlockTime"] := R23
216 [-]: NEWTABLE  R25 0 0      ; R25 := {}
217 [-]: SETTABLE  R2 K22 R25   ; R2["mLastMessageData"] := R25
218 [-]: JMP       226          ; PC := 226
219 [-]: GETUPVAL  R25 U0       ; R25 := U0
220 [-]: GETTABLE  R25 R25 K45  ; R25 := R25["SPAM_DETECTION_PERIOD"]
221 [-]: LT        0 R24 R25    ; if R24 >= R25 then PC := 226
222 [-]: JMP       226          ; PC := 226
223 [-]: SETTABLE  R2 K11 R23   ; R2["mSpamBlockTime"] := R23
224 [-]: NEWTABLE  R25 0 0      ; R25 := {}
225 [-]: SETTABLE  R2 K22 R25   ; R2["mLastMessageData"] := R25
226 [-]: OP_LOADBOOL R25 0 0      ; R25 := false
227 [-]: RETURN    R25 2        ; return R25
228 [-]: RETURN    R0 1         ; return 


; Function #74:
;
; Name:            
; Defined at line: 2492
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x8b75da5a]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0x7f5022cf
  5 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0x1a94c9cc]
  6 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["mChannelName"]
  7 [-]: CONST     R4 1         ; R4 := 1.000000
  8 [-]: CONST     R5 1         ; R5 := 1.000000
  9 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 10 [-]: NEWTABLE  R3 0 6       ; R3 := {}
 11 [-]: SETTABLE  R3 K5 K6     ; R3["G"] := "/Lotus/Language/Menu/Chat_GlobalTitle"
 12 [-]: SETTABLE  R3 K7 K8     ; R3["Q"] := "/Lotus/Language/Menu/Chat_QandATitle"
 13 [-]: SETTABLE  R3 K9 K10    ; R3["R"] := "/Lotus/Language/Menu/Chat_RecruitingTitle"
 14 [-]: SETTABLE  R3 K11 K12   ; R3["T"] := "/Lotus/Language/Menu/Chat_TradeTitle"
 15 [-]: SETTABLE  R3 K13 K14   ; R3["D"] := "/Lotus/Language/Menu/Chat_CouncilTitle"
 16 [-]: SETTABLE  R3 K15 K16   ; R3["H"] := "/Lotus/Language/Menu/Chat_HubTitle"
 17 [-]: EQ        0 R0 K17     ; if R0 ~= nil then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: LOADK     R0 K18       ; R0 := ""
 20 [-]: JMP       44           ; PC := 44
 21 [-]: GETTABLE  R4 R3 R2     ; R4 := R3[R2]
 22 [-]: EQ        1 R4 K17     ; if R4 == nil then PC := 38
 23 [-]: JMP       38           ; PC := 38
 24 [-]: GETGLOBAL R4 K19       ; R4 := 0xae91e43b
 25 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4[0x42b04007]
 26 [-]: GETTABLE  R6 R3 R2     ; R6 := R3[R2]
 27 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 28 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 29 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
 30 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5[0x42b04007]
 31 [-]: MOVE      R7 R0        ; R7 := R0
 32 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 33 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 34 [-]: SETTABLE  R9 K21 R4    ; R9["CHANNEL"] := R4
 35 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 36 [-]: MOVE      R0 R5        ; R0 := R5
 37 [-]: JMP       44           ; PC := 44
 38 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
 39 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5[0x42b04007]
 40 [-]: MOVE      R7 R0        ; R7 := R0
 41 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 42 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 43 [-]: MOVE      R0 R5        ; R0 := R5
 44 [-]: RETURN    R0 2         ; return R0
 45 [-]: RETURN    R0 1         ; return 


; Function #75:
;
; Name:            
; Defined at line: 2518
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xe7f2b02f
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x0b151d80]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
  5 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x8b75da5a]
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: LOADK     R4 K4        ; R4 := "#"
  8 [-]: GETTABLE  R5 R3 K5     ; R5 := R3["mChannelName"]
  9 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 10 [-]: GETUPVAL  R5 U0        ; R5 := U0
 11 [-]: MOVE      R6 R1        ; R6 := R1
 12 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 13 [-]: MOVE      R1 R5        ; R1 := R5
 14 [-]: SELF      R5 R2 K6     ; R6 := R2; R5 := R2[0x7f72b051]
 15 [-]: MOVE      R7 R4        ; R7 := R4
 16 [-]: MOVE      R8 R0        ; R8 := R0
 17 [-]: MOVE      R9 R1        ; R9 := R1
 18 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 19 [-]: SELF      R5 R3 K7     ; R6 := R3; R5 := R3[0x3b4b4da2]
 20 [-]: MOVE      R7 R0        ; R7 := R0
 21 [-]: CALL      R5 3 1       ; R5(R6,R7)
 22 [-]: GETGLOBAL R5 K8        ; R5 := mGameData
 23 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5[0xa9c4b40c]
 24 [-]: MOVE      R7 R0        ; R7 := R0
 25 [-]: MOVE      R8 R4        ; R8 := R4
 26 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 27 [-]: RETURN    R0 1         ; return 


; Function #76:
;
; Name:            
; Defined at line: 2530
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R5 K0        ; R5 := mWindow
  2 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0x8b75da5a]
  3 [-]: CALL      R5 2 2       ; R5 := R5(R6)
  4 [-]: GETGLOBAL R6 K2        ; R6 := 0xe7f2b02f
  5 [-]: SELF      R6 R6 K3     ; R7 := R6; R6 := R6[0x0b151d80]
  6 [-]: CALL      R6 2 2       ; R6 := R6(R7)
  7 [-]: LOADK     R7 K4        ; R7 := "#"
  8 [-]: GETTABLE  R8 R5 K5     ; R8 := R5["mChannelName"]
  9 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 10 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 11 [-]: LOADK     R9 K6        ; R9 := ""
 12 [-]: GETTABLE  R10 R5 K7    ; R10 := R5["mChannelType"]
 13 [-]: GETGLOBAL R11 K0       ; R11 := mWindow
 14 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["CHANNEL_CLAN"]
 15 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 37
 16 [-]: JMP       37           ; PC := 37
 17 [-]: GETGLOBAL R10 K9       ; R10 := mGameData
 18 [-]: SELF      R10 R10 K10  ; R11 := R10; R10 := R10[0x6ca27630]
 19 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 20 [-]: CONST     R11 1        ; R11 := 1.000000
 21 [-]: LEN       R12 R10      ; R12 := # R10
 22 [-]: CONST     R13 1        ; R13 := 1.000000
 23 [-]: FORPREP   R11 35       ; R11 -= R13; PC := 35
 24 [-]: GETTABLE  R15 R10 R14  ; R15 := R10[R14]
 25 [-]: GETTABLE  R15 R15 K11  ; R15 := R15["mDisplayName"]
 26 [-]: EQ        0 R15 R0     ; if R15 ~= R0 then PC := 35
 27 [-]: JMP       35           ; PC := 35
 28 [-]: GETTABLE  R15 R10 R14  ; R15 := R10[R14]
 29 [-]: GETTABLE  R15 R15 K12  ; R15 := R15["mRank"]
 30 [-]: EQ        0 R15 K13    ; if R15 ~= 1.000000 then PC := 70
 31 [-]: JMP       70           ; PC := 70
 32 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 33 [-]: LOADK     R9 K14       ; R9 := "/Lotus/Language/Menu/Chat_KickWarlordFromClanError"
 34 [-]: JMP       70           ; PC := 70
 35 [-]: FORLOOP   R11 24       ; R11 += R13; if R11 <= R12 then begin PC := 24; R14 := R11 end
 36 [-]: JMP       70           ; PC := 70
 37 [-]: GETTABLE  R15 R5 K7    ; R15 := R5["mChannelType"]
 38 [-]: GETGLOBAL R16 K0       ; R16 := mWindow
 39 [-]: GETTABLE  R16 R16 K15  ; R16 := R16["CHANNEL_ALLIANCE"]
 40 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 70
 41 [-]: JMP       70           ; PC := 70
 42 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 43 [-]: GETUPVAL  R15 U0       ; R15 := U0
 44 [-]: EQ        1 R15 K16    ; if R15 == nil then PC := 48
 45 [-]: JMP       48           ; PC := 48
 46 [-]: LOADK     R9 K17       ; R9 := "/Lotus/Language/Menu/Chat_KickInProgress"
 47 [-]: JMP       70           ; PC := 70
 48 [-]: GETGLOBAL R15 K18      ; R15 := 0x7b998233
 49 [-]: GETGLOBAL R16 K9       ; R16 := mGameData
 50 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 51 [-]: TEST      R15 1        ; if R15 then PC := 69
 52 [-]: JMP       69           ; PC := 69
 53 [-]: NEWTABLE  R15 0 6      ; R15 := {}
 54 [-]: SETTABLE  R15 K19 R0   ; R15["Name"] := R0
 55 [-]: SETTABLE  R15 K20 R1   ; R15["Kick"] := R1
 56 [-]: SETTABLE  R15 K21 R2   ; R15["Duration"] := R2
 57 [-]: LOADK     R16 K4       ; R16 := "#"
 58 [-]: GETTABLE  R17 R5 K5    ; R17 := R5["mChannelName"]
 59 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
 60 [-]: SETTABLE  R15 K22 R16  ; R15["ChannelName"] := R16
 61 [-]: SETTABLE  R15 K23 R3   ; R15["Reason"] := R3
 62 [-]: SETTABLE  R15 K24 R4   ; R15["Message"] := R4
 63 [-]: SETUPVAL  R15 U0       ; U82 := 
 64 [-]: GETGLOBAL R15 K9       ; R15 := mGameData
 65 [-]: SELF      R15 R15 K25  ; R16 := R15; R15 := R15[0xd20f757a]
 66 [-]: MOVE      R17 R0       ; R17 := R0
 67 [-]: LOADK     R18 K26      ; R18 := "RemoveFromChatPlayerIDResult"
 68 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
 69 [-]: RETURN    R0 1         ; return 
 70 [-]: GETUPVAL  R15 U0       ; R15 := U0
 71 [-]: EQ        1 R15 K16    ; if R15 == nil then PC := 75
 72 [-]: JMP       75           ; PC := 75
 73 [-]: LOADK     R9 K17       ; R9 := "/Lotus/Language/Menu/Chat_KickInProgress"
 74 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 75 [-]: TEST      R8 0         ; if not R8 then PC := 94
 76 [-]: JMP       94           ; PC := 94
 77 [-]: TEST      R1 0         ; if not R1 then PC := 85
 78 [-]: JMP       85           ; PC := 85
 79 [-]: SELF      R15 R6 K27   ; R16 := R6; R15 := R6[0xaa343c38]
 80 [-]: MOVE      R17 R0       ; R17 := R0
 81 [-]: MOVE      R18 R7       ; R18 := R7
 82 [-]: MOVE      R19 R4       ; R19 := R4
 83 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
 84 [-]: JMP       104          ; PC := 104
 85 [-]: SELF      R15 R6 K28   ; R16 := R6; R15 := R6[0x1f268b73]
 86 [-]: MOVE      R17 R0       ; R17 := R0
 87 [-]: MOVE      R18 R7       ; R18 := R7
 88 [-]: MOVE      R19 R2       ; R19 := R2
 89 [-]: CONST     R20 0        ; R20 := 0.000000
 90 [-]: MOVE      R21 R3       ; R21 := R3
 91 [-]: MOVE      R22 R4       ; R22 := R4
 92 [-]: CALL      R15 8 1      ; R15(R16,R17,R18,R19,R20,R21,R22)
 93 [-]: JMP       104          ; PC := 104
 94 [-]: EQ        1 R9 K6      ; if R9 == "" then PC := 104
 95 [-]: JMP       104          ; PC := 104
 96 [-]: GETGLOBAL R15 K0       ; R15 := mWindow
 97 [-]: SELF      R15 R15 K30  ; R16 := R15; R15 := R15[0xd4f2405e]
 98 [-]: GETGLOBAL R17 K31      ; R17 := 0xae91e43b
 99 [-]: SELF      R17 R17 K32  ; R18 := R17; R17 := R17[0x42b04007]
100 [-]: MOVE      R19 R9       ; R19 := R9
101 [-]: OP_LOADBOOL R20 0 0      ; R20 := false
102 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
103 [-]: CALL      R15 0 1      ; R15(R16,...)
104 [-]: RETURN    R0 1         ; return 


; Function #77:
;
; Name:            
; Defined at line: 2582
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETUPVAL  R2 U1        ; R2 := U1
  8 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["NAME"]
  9 [-]: GETUPVAL  R3 U1        ; R3 := U1
 10 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["KICK"]
 11 [-]: GETUPVAL  R4 U1        ; R4 := U1
 12 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["DURATION"]
 13 [-]: GETUPVAL  R5 U1        ; R5 := U1
 14 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["REASON"]
 15 [-]: GETUPVAL  R6 U1        ; R6 := U1
 16 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["MSG"]
 17 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 18 [-]: RETURN    R0 1         ; return 


; Function #78:
;
; Name:            
; Defined at line: 2588
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x42b04007]
  3 [-]: LOADK     R5 K2        ; R5 := "/Lotus/Language/Clan/Chat_ConfirmModeratorKick"
  4 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
  5 [-]: NEWTABLE  R7 0 1       ; R7 := {}
  6 [-]: SETTABLE  R7 K3 R0     ; R7["NAME"] := R0
  7 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
  8 [-]: TEST      R1 1         ; if R1 then PC := 19
  9 [-]: JMP       19           ; PC := 19
 10 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 11 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0x42b04007]
 12 [-]: LOADK     R6 K4        ; R6 := "/Lotus/Language/Clan/Chat_ConfirmModeratorBan"
 13 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 14 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 15 [-]: SETTABLE  R8 K3 R0     ; R8["NAME"] := R0
 16 [-]: SETTABLE  R8 K5 R2     ; R8["DURATION"] := R2
 17 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
 18 [-]: MOVE      R3 R4        ; R3 := R4
 19 [-]: GETUPVAL  R4 U0        ; R4 := U0
 20 [-]: GETTABLE  R4 R4 K6     ; R82 := R4[0xdedfded7]
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: LOADK     R6 K7        ; R6 := "ConfirmModeratorKickBan"
 23 [-]: CALL      R4 3 1       ; R4(R5,R6)
 24 [-]: RETURN    R0 1         ; return 


; Function #79:
;
; Name:            
; Defined at line: 2596
; #Upvalues:       4
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  2 [-]: MOVE      R5 R0        ; R5 := R0
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: TEST      R4 0         ; if not R4 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R4 K0        ; R4 := 0x7b998233
  7 [-]: GETGLOBAL R5 K1        ; R5 := mSelectedUser
  8 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  9 [-]: TEST      R4 1         ; if R4 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETGLOBAL R4 K1        ; R4 := mSelectedUser
 12 [-]: GETTABLE  R0 R4 K2     ; R0 := R4["User"]
 13 [-]: GETGLOBAL R4 K3        ; R4 := mWindow
 14 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x8b75da5a]
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: GETGLOBAL R5 K5        ; R5 := 0xe7f2b02f
 17 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0x0b151d80]
 18 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 19 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 20 [-]: MOVE      R7 R0        ; R7 := R0
 21 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 22 [-]: TEST      R6 1         ; if R6 then PC := 34
 23 [-]: JMP       34           ; PC := 34
 24 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 25 [-]: MOVE      R7 R4        ; R7 := R4
 26 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 27 [-]: TEST      R6 1         ; if R6 then PC := 34
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETGLOBAL R6 K0        ; R6 := 0x7b998233
 30 [-]: MOVE      R7 R5        ; R7 := R5
 31 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 32 [-]: TEST      R6 0         ; if not R6 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: RETURN    R0 1         ; return 
 35 [-]: LOADK     R6 K7        ; R6 := ""
 36 [-]: GETUPVAL  R7 U0        ; R7 := U0
 37 [-]: MOVE      R8 R3        ; R8 := R3
 38 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 39 [-]: MOVE      R3 R7        ; R3 := R7
 40 [-]: GETTABLE  R7 R4 K8     ; R7 := R4["mChannelType"]
 41 [-]: GETGLOBAL R8 K3        ; R8 := mWindow
 42 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["CHANNEL_CLAN"]
 43 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 50
 44 [-]: JMP       50           ; PC := 50
 45 [-]: GETTABLE  R7 R4 K8     ; R7 := R4["mChannelType"]
 46 [-]: GETGLOBAL R8 K3        ; R8 := mWindow
 47 [-]: GETTABLE  R8 R8 K10    ; R8 := R8["CHANNEL_ALLIANCE"]
 48 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 63
 49 [-]: JMP       63           ; PC := 63
 50 [-]: NEWTABLE  R7 0 5       ; R7 := {}
 51 [-]: SETTABLE  R7 K11 R0    ; R7["NAME"] := R0
 52 [-]: SETTABLE  R7 K12 R1    ; R7["KICK"] := R1
 53 [-]: SETTABLE  R7 K13 R2    ; R7["DURATION"] := R2
 54 [-]: SETTABLE  R7 K14 R6    ; R7["REASON"] := R6
 55 [-]: SETTABLE  R7 K15 R3    ; R7["MSG"] := R3
 56 [-]: SETUPVAL  R7 U1        ; U82 := 
 57 [-]: GETUPVAL  R7 U2        ; R7 := U2
 58 [-]: MOVE      R8 R0        ; R8 := R0
 59 [-]: MOVE      R9 R1        ; R9 := R1
 60 [-]: MOVE      R10 R2       ; R10 := R2
 61 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 62 [-]: RETURN    R0 1         ; return 
 63 [-]: GETUPVAL  R7 U3        ; R7 := U3
 64 [-]: MOVE      R8 R0        ; R8 := R0
 65 [-]: MOVE      R9 R1        ; R9 := R1
 66 [-]: MOVE      R10 R2       ; R10 := R2
 67 [-]: MOVE      R11 R6       ; R11 := R6
 68 [-]: MOVE      R12 R3       ; R12 := R3
 69 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 70 [-]: RETURN    R0 1         ; return 


; Function #80:
;
; Name:            
; Defined at line: 2620
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: TEST      R0 1         ; if R0 then PC := 22
  2 [-]: JMP       22           ; PC := 22
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  4 [-]: LOADK     R3 K1        ; R3 := "FAILURE: "
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
  9 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xd4f2405e]
 10 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 11 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x42b04007]
 12 [-]: GETUPVAL  R6 U0        ; R6 := U0
 13 [-]: GETTABLE  R6 R6 K6     ; R82 := R6[0x3230dc3e]
 14 [-]: MOVE      R7 R1        ; R7 := R1
 15 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 16 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 17 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 18 [-]: CALL      R2 0 1       ; R2(R3,...)
 19 [-]: LOADNIL   R2 R2        ; R2 := nil
 20 [-]: SETUPVAL  R2 U1        ; U82 := 
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: GETGLOBAL R2 K7        ; R2 := 0x015284cd
 23 [-]: LOADK     R3 K8        ; R3 := ","
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 26 [-]: GETGLOBAL R3 K9        ; R3 := 0x76ea806b
 27 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x3f3ae64c]
 28 [-]: CONST     R5 0         ; R5 := 0.000000
 29 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 30 [-]: GETGLOBAL R4 K11       ; R4 := 0x7b998233
 31 [-]: MOVE      R5 R3        ; R5 := R3
 32 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 33 [-]: TEST      R4 0         ; if not R4 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: LOADNIL   R4 R4        ; R4 := nil
 36 [-]: SETUPVAL  R4 U1        ; U82 := 
 37 [-]: RETURN    R0 1         ; return 
 38 [-]: SELF      R4 R3 K12    ; R5 := R3; R4 := R3[0x1012c7ec]
 39 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 40 [-]: GETTABLE  R5 R2 K13    ; R5 := R2[1.000000]
 41 [-]: GETGLOBAL R6 K14       ; R6 := 0x34291f5c
 42 [-]: GETTABLE  R6 R6 K15    ; R82 := R6[0x9ad21ae9]
 43 [-]: CALL      R6 1 2       ; R6 := R6()
 44 [-]: TEST      R6 0         ; if not R6 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETGLOBAL R6 K7        ; R6 := 0x015284cd
 47 [-]: LOADK     R7 K16       ; R7 := "_"
 48 [-]: MOVE      R8 R5        ; R8 := R5
 49 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 50 [-]: GETTABLE  R5 R6 K13    ; R5 := R6[1.000000]
 51 [-]: GETGLOBAL R7 K17       ; R7 := 0xa94df70b
 52 [-]: SELF      R7 R7 K18    ; R8 := R7; R7 := R7[0x2608b62f]
 53 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 54 [-]: LOADK     R8 K19       ; R8 := "getGuildRank.php?"
 55 [-]: MOVE      R9 R4        ; R9 := R4
 56 [-]: LOADK     R10 K20      ; R10 := "&checkeeId="
 57 [-]: MOVE      R11 R5       ; R11 := R5
 58 [-]: CONCAT    R7 R7 R11    ; R7 := R7 .. R8 .. R9 .. R10 .. R11
 59 [-]: GETGLOBAL R8 K14       ; R8 := 0x34291f5c
 60 [-]: GETTABLE  R8 R8 K21    ; R82 := R8[0x63d9fd12]
 61 [-]: MOVE      R9 R7        ; R9 := R7
 62 [-]: LOADK     R10 K22      ; R10 := ""
 63 [-]: LOADK     R11 K23      ; R11 := "OnGetPlayerGuildRank"
 64 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
 65 [-]: RETURN    R0 1         ; return 


; Function #81:
;
; Name:            
; Defined at line: 2646
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: TEST      R0 0         ; if not R0 then PC := 58
  2 [-]: JMP       58           ; PC := 58
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x03f57322
  4 [-]: MOVE      R3 R1        ; R3 := R1
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: GETGLOBAL R3 K1        ; R3 := 0xe7f2b02f
  7 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0x0b151d80]
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: GETGLOBAL R4 K3        ; R4 := 0x7b998233
 10 [-]: MOVE      R5 R3        ; R5 := R3
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: TEST      R4 1         ; if R4 then PC := 75
 13 [-]: JMP       75           ; PC := 75
 14 [-]: GETUPVAL  R4 U0        ; R4 := U0
 15 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 75
 16 [-]: JMP       75           ; PC := 75
 17 [-]: GETUPVAL  R4 U1        ; R4 := U1
 18 [-]: GETTABLE  R4 R4 K5     ; R82 := R4[0xd3e25f7d]
 19 [-]: MOVE      R5 R2        ; R5 := R2
 20 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 21 [-]: TEST      R4 1         ; if R4 then PC := 49
 22 [-]: JMP       49           ; PC := 49
 23 [-]: GETUPVAL  R4 U0        ; R4 := U0
 24 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["Kick"]
 25 [-]: TEST      R4 0         ; if not R4 then PC := 35
 26 [-]: JMP       35           ; PC := 35
 27 [-]: SELF      R4 R3 K7     ; R5 := R3; R4 := R3[0xaa343c38]
 28 [-]: GETUPVAL  R6 U0        ; R6 := U0
 29 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["Name"]
 30 [-]: GETUPVAL  R7 U0        ; R7 := U0
 31 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["ChannelName"]
 32 [-]: LOADK     R8 K10       ; R8 := ""
 33 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 34 [-]: JMP       75           ; PC := 75
 35 [-]: SELF      R4 R3 K11    ; R5 := R3; R4 := R3[0x1f268b73]
 36 [-]: GETUPVAL  R6 U0        ; R6 := U0
 37 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["Name"]
 38 [-]: GETUPVAL  R7 U0        ; R7 := U0
 39 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["ChannelName"]
 40 [-]: GETUPVAL  R8 U0        ; R8 := U0
 41 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["Duration"]
 42 [-]: CONST     R9 0         ; R9 := 0.000000
 43 [-]: GETUPVAL  R10 U0       ; R10 := U0
 44 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["Reason"]
 45 [-]: GETUPVAL  R11 U0       ; R11 := U0
 46 [-]: GETTABLE  R11 R11 K15  ; R11 := R11["Message"]
 47 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
 48 [-]: JMP       75           ; PC := 75
 49 [-]: GETGLOBAL R4 K16       ; R4 := mWindow
 50 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4[0xd4f2405e]
 51 [-]: GETGLOBAL R6 K18       ; R6 := 0xae91e43b
 52 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6[0x42b04007]
 53 [-]: LOADK     R8 K20       ; R8 := "/Lotus/Language/Menu/Chat_KickWarlordFromClanError"
 54 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 55 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 56 [-]: CALL      R4 0 1       ; R4(R5,...)
 57 [-]: JMP       75           ; PC := 75
 58 [-]: GETGLOBAL R4 K21       ; R4 := 0x3d106989
 59 [-]: LOADK     R5 K22       ; R5 := "FAILURE: "
 60 [-]: MOVE      R6 R1        ; R6 := R1
 61 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 62 [-]: CALL      R4 2 1       ; R4(R5)
 63 [-]: GETGLOBAL R4 K16       ; R4 := mWindow
 64 [-]: SELF      R4 R4 K17    ; R5 := R4; R4 := R4[0xd4f2405e]
 65 [-]: GETGLOBAL R6 K18       ; R6 := 0xae91e43b
 66 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6[0x42b04007]
 67 [-]: LOADK     R8 K23       ; R8 := "/Lotus/Language/Menu/Chat_CouldntFindGuildIdError"
 68 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 69 [-]: NEWTABLE  R10 0 1      ; R10 := {}
 70 [-]: GETUPVAL  R11 U0       ; R11 := U0
 71 [-]: GETTABLE  R11 R11 K8   ; R11 := R11["Name"]
 72 [-]: SETTABLE  R10 K24 R11  ; R10["NAME"] := R11
 73 [-]: CALL      R6 5 0       ; R6,... := R6(R7,R8,R9,R10)
 74 [-]: CALL      R4 0 1       ; R4(R5,...)
 75 [-]: LOADNIL   R4 R4        ; R4 := nil
 76 [-]: SETUPVAL  R4 U0        ; U82 := 
 77 [-]: RETURN    R0 1         ; return 


; Function #82:
;
; Name:            
; Defined at line: 2669
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: GETGLOBAL R3 K1        ; R3 := mSelectedUser
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETGLOBAL R2 K1        ; R2 := mSelectedUser
 12 [-]: GETTABLE  R0 R2 K2     ; R0 := R2["User"]
 13 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x91a24e4b]
 15 [-]: LOADK     R4 K5        ; R4 := "_root"
 16 [-]: CONST     R5 25        ; R5 := 25.000000
 17 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 18 [-]: ADD       R2 R2 K6     ; R2 := R2 + 4.000000
 19 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 20 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x91a24e4b]
 21 [-]: LOADK     R5 K5        ; R5 := "_root"
 22 [-]: CONST     R6 26        ; R6 := 26.000000
 23 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 24 [-]: SUB       R3 R3 K6     ; R3 := R3 - 4.000000
 25 [-]: GETGLOBAL R4 K7        ; R4 := mContextMenu
 26 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0x7c09c373]
 27 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 28 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 29 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 30 [-]: NEWTABLE  R4 5 0       ; R4 := {}
 31 [-]: LOADK     R5 K9        ; R5 := "Caps"
 32 [-]: LOADK     R6 K10       ; R6 := "Spam"
 33 [-]: LOADK     R7 K11       ; R7 := "Topic"
 34 [-]: LOADK     R8 K12       ; R8 := "Abuse"
 35 [-]: LOADK     R9 K13       ; R9 := "UsePrivateMessages"
 36 [-]: SETLIST   R4 5 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 5
 37 [-]: GETGLOBAL R5 K14       ; R5 := 0x7f5022cf
 38 [-]: GETTABLE  R5 R5 K15    ; R82 := R5[0x1a94c9cc]
 39 [-]: MOVE      R6 R1        ; R6 := R1
 40 [-]: CONST     R7 1         ; R7 := 1.000000
 41 [-]: CONST     R8 1         ; R8 := 1.000000
 42 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 43 [-]: EQ        0 R5 K16     ; if R5 ~= "T" then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETGLOBAL R6 K17       ; R6 := 0x33bdd652
 46 [-]: GETTABLE  R6 R6 K18    ; R82 := R6[0x23d5322f]
 47 [-]: MOVE      R7 R4        ; R7 := R4
 48 [-]: LOADK     R8 K19       ; R8 := "TradeEULA"
 49 [-]: CALL      R6 3 1       ; R6(R7,R8)
 50 [-]: JMP       56           ; PC := 56
 51 [-]: GETGLOBAL R6 K17       ; R6 := 0x33bdd652
 52 [-]: GETTABLE  R6 R6 K18    ; R82 := R6[0x23d5322f]
 53 [-]: MOVE      R7 R4        ; R7 := R4
 54 [-]: LOADK     R8 K20       ; R8 := "Trading"
 55 [-]: CALL      R6 3 1       ; R6(R7,R8)
 56 [-]: EQ        1 R5 K21     ; if R5 == "R" then PC := 63
 57 [-]: JMP       63           ; PC := 63
 58 [-]: GETGLOBAL R6 K17       ; R6 := 0x33bdd652
 59 [-]: GETTABLE  R6 R6 K18    ; R82 := R6[0x23d5322f]
 60 [-]: MOVE      R7 R4        ; R7 := R4
 61 [-]: LOADK     R8 K22       ; R8 := "Recruiting"
 62 [-]: CALL      R6 3 1       ; R6(R7,R8)
 63 [-]: EQ        1 R5 K23     ; if R5 == "G" then PC := 70
 64 [-]: JMP       70           ; PC := 70
 65 [-]: GETGLOBAL R6 K17       ; R6 := 0x33bdd652
 66 [-]: GETTABLE  R6 R6 K18    ; R82 := R6[0x23d5322f]
 67 [-]: MOVE      R7 R4        ; R7 := R4
 68 [-]: LOADK     R8 K24       ; R8 := "UseRegion"
 69 [-]: CALL      R6 3 1       ; R6(R7,R8)
 70 [-]: GETGLOBAL R6 K7        ; R6 := mContextMenu
 71 [-]: SELF      R6 R6 K25    ; R7 := R6; R6 := R6[0xbad4316f]
 72 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 73 [-]: SETTABLE  R8 K26 K27   ; R8["Name"] := "/Lotus/Language/IRC/Silent"
 74 [-]: CLOSURE   R9 0         ; R9 := closure(Function #82.1)
 75 [-]: GETUPVAL  R0 U0        ; R0 := U0
 76 [-]: MOVE      R0 R0        ; R0 := R0
 77 [-]: SETTABLE  R8 K28 R9    ; R8["PressedCallback"] := R9
 78 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
 79 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 80 [-]: CONST     R6 1         ; R6 := 1.000000
 81 [-]: LEN       R7 R4        ; R7 := # R4
 82 [-]: CONST     R8 1         ; R8 := 1.000000
 83 [-]: FORPREP   R6 102       ; R6 -= R8; PC := 102
 84 [-]: LOADK     R10 K29      ; R10 := "/Lotus/Language/IRC/"
 85 [-]: GETTABLE  R11 R4 R9    ; R11 := R4[R9]
 86 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 87 [-]: LOADK     R11 K30      ; R11 := "/Lotus/Language/IRC/Flush_"
 88 [-]: GETTABLE  R12 R4 R9    ; R12 := R4[R9]
 89 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 90 [-]: GETGLOBAL R12 K7       ; R12 := mContextMenu
 91 [-]: SELF      R12 R12 K25  ; R13 := R12; R12 := R12[0xbad4316f]
 92 [-]: NEWTABLE  R14 0 2      ; R14 := {}
 93 [-]: SETTABLE  R14 K26 R10  ; R14["Name"] := R10
 94 [-]: CLOSURE   R15 1        ; R15 := closure(Function #82.2)
 95 [-]: GETUPVAL  R0 U0        ; R0 := U0
 96 [-]: MOVE      R0 R0        ; R0 := R0
 97 [-]: MOVE      R0 R11       ; R0 := R11
 98 [-]: SETTABLE  R14 K28 R15  ; R14["PressedCallback"] := R15
 99 [-]: OP_LOADBOOL R15 1 0      ; R15 := true
100 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
101 [-]: CLOSE     R10          ; SAVE R10,...
102 [-]: FORLOOP   R6 84        ; R6 += R8; if R6 <= R7 then begin PC := 84; R9 := R6 end
103 [-]: GETUPVAL  R10 U1       ; R10 := U1
104 [-]: MOVE      R11 R2       ; R11 := R2
105 [-]: MOVE      R12 R3       ; R12 := R3
106 [-]: CALL      R10 3 1      ; R10(R11,R12)
107 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
108 [-]: RETURN    R10 2        ; return R10
109 [-]: RETURN    R0 1         ; return 


; Function #82.1:
;
; Name:            
; Defined at line: 2697
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: LOADNIL   R2 R2        ; R2 := nil
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #82.2:
;
; Name:            
; Defined at line: 2702
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETUPVAL  R2 U2        ; R2 := U2
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #83:
;
; Name:            
; Defined at line: 2710
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 13
  5 [-]: JMP       13           ; PC := 13
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: GETGLOBAL R3 K1        ; R3 := mSelectedUser
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: GETGLOBAL R2 K1        ; R2 := mSelectedUser
 12 [-]: GETTABLE  R0 R2 K2     ; R0 := R2["User"]
 13 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x91a24e4b]
 15 [-]: LOADK     R4 K5        ; R4 := "_root"
 16 [-]: CONST     R5 25        ; R5 := 25.000000
 17 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 18 [-]: ADD       R2 R2 K6     ; R2 := R2 + 4.000000
 19 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 20 [-]: SELF      R3 R3 K4     ; R4 := R3; R3 := R3[0x91a24e4b]
 21 [-]: LOADK     R5 K5        ; R5 := "_root"
 22 [-]: CONST     R6 26        ; R6 := 26.000000
 23 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 24 [-]: SUB       R3 R3 K6     ; R3 := R3 - 4.000000
 25 [-]: GETGLOBAL R4 K7        ; R4 := mContextMenu
 26 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0x7c09c373]
 27 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 28 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 29 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 30 [-]: GETGLOBAL R4 K7        ; R4 := mContextMenu
 31 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0xbad4316f]
 32 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 33 [-]: SETTABLE  R6 K10 K11   ; R6["Name"] := "/Lotus/Language/IRC/Silent"
 34 [-]: CLOSURE   R7 0         ; R7 := closure(Function #83.1)
 35 [-]: GETUPVAL  R0 U0        ; R0 := U0
 36 [-]: MOVE      R0 R0        ; R0 := R0
 37 [-]: SETTABLE  R6 K12 R7    ; R6["PressedCallback"] := R7
 38 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 39 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 40 [-]: NEWTABLE  R4 4 0       ; R4 := {}
 41 [-]: LOADK     R5 K13       ; R5 := "Caps"
 42 [-]: LOADK     R6 K14       ; R6 := "Spam"
 43 [-]: LOADK     R7 K15       ; R7 := "Topic"
 44 [-]: LOADK     R8 K16       ; R8 := "UsePrivateMessages"
 45 [-]: SETLIST   R4 4 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
 46 [-]: GETGLOBAL R5 K17       ; R5 := 0x7f5022cf
 47 [-]: GETTABLE  R5 R5 K18    ; R82 := R5[0x1a94c9cc]
 48 [-]: MOVE      R6 R1        ; R6 := R1
 49 [-]: CONST     R7 1         ; R7 := 1.000000
 50 [-]: CONST     R8 1         ; R8 := 1.000000
 51 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 52 [-]: EQ        0 R5 K19     ; if R5 ~= "T" then PC := 60
 53 [-]: JMP       60           ; PC := 60
 54 [-]: GETGLOBAL R6 K20       ; R6 := 0x33bdd652
 55 [-]: GETTABLE  R6 R6 K21    ; R82 := R6[0x23d5322f]
 56 [-]: MOVE      R7 R4        ; R7 := R4
 57 [-]: LOADK     R8 K22       ; R8 := "TradeEULA"
 58 [-]: CALL      R6 3 1       ; R6(R7,R8)
 59 [-]: JMP       65           ; PC := 65
 60 [-]: GETGLOBAL R6 K20       ; R6 := 0x33bdd652
 61 [-]: GETTABLE  R6 R6 K21    ; R82 := R6[0x23d5322f]
 62 [-]: MOVE      R7 R4        ; R7 := R4
 63 [-]: LOADK     R8 K23       ; R8 := "Trading"
 64 [-]: CALL      R6 3 1       ; R6(R7,R8)
 65 [-]: EQ        1 R5 K24     ; if R5 == "R" then PC := 72
 66 [-]: JMP       72           ; PC := 72
 67 [-]: GETGLOBAL R6 K20       ; R6 := 0x33bdd652
 68 [-]: GETTABLE  R6 R6 K21    ; R82 := R6[0x23d5322f]
 69 [-]: MOVE      R7 R4        ; R7 := R4
 70 [-]: LOADK     R8 K25       ; R8 := "Recruiting"
 71 [-]: CALL      R6 3 1       ; R6(R7,R8)
 72 [-]: EQ        1 R5 K26     ; if R5 == "G" then PC := 79
 73 [-]: JMP       79           ; PC := 79
 74 [-]: GETGLOBAL R6 K20       ; R6 := 0x33bdd652
 75 [-]: GETTABLE  R6 R6 K21    ; R82 := R6[0x23d5322f]
 76 [-]: MOVE      R7 R4        ; R7 := R4
 77 [-]: LOADK     R8 K27       ; R8 := "UseRegion"
 78 [-]: CALL      R6 3 1       ; R6(R7,R8)
 79 [-]: CONST     R6 1         ; R6 := 1.000000
 80 [-]: LEN       R7 R4        ; R7 := # R4
 81 [-]: CONST     R8 1         ; R8 := 1.000000
 82 [-]: FORPREP   R6 101       ; R6 -= R8; PC := 101
 83 [-]: LOADK     R10 K28      ; R10 := "/Lotus/Language/IRC/"
 84 [-]: GETTABLE  R11 R4 R9    ; R11 := R4[R9]
 85 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 86 [-]: LOADK     R11 K29      ; R11 := "/Lotus/Language/IRC/Kicked_"
 87 [-]: GETTABLE  R12 R4 R9    ; R12 := R4[R9]
 88 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 89 [-]: GETGLOBAL R12 K7       ; R12 := mContextMenu
 90 [-]: SELF      R12 R12 K9   ; R13 := R12; R12 := R12[0xbad4316f]
 91 [-]: NEWTABLE  R14 0 2      ; R14 := {}
 92 [-]: SETTABLE  R14 K10 R10  ; R14["Name"] := R10
 93 [-]: CLOSURE   R15 1        ; R15 := closure(Function #83.2)
 94 [-]: GETUPVAL  R0 U0        ; R0 := U0
 95 [-]: MOVE      R0 R0        ; R0 := R0
 96 [-]: MOVE      R0 R11       ; R0 := R11
 97 [-]: SETTABLE  R14 K12 R15  ; R14["PressedCallback"] := R15
 98 [-]: OP_LOADBOOL R15 1 0      ; R15 := true
 99 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
100 [-]: CLOSE     R10          ; SAVE R10,...
101 [-]: FORLOOP   R6 83        ; R6 += R8; if R6 <= R7 then begin PC := 83; R9 := R6 end
102 [-]: GETUPVAL  R10 U1       ; R10 := U1
103 [-]: MOVE      R11 R2       ; R11 := R2
104 [-]: MOVE      R12 R3       ; R12 := R3
105 [-]: CALL      R10 3 1      ; R10(R11,R12)
106 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
107 [-]: RETURN    R10 2        ; return R10
108 [-]: RETURN    R0 1         ; return 


; Function #83.1:
;
; Name:            
; Defined at line: 2720
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
  4 [-]: LOADK     R3 K0        ; R3 := "5m"
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: RETURN    R0 1         ; return 


; Function #83.2:
;
; Name:            
; Defined at line: 2743
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
  4 [-]: LOADK     R3 K0        ; R3 := "5m"
  5 [-]: GETUPVAL  R4 U2        ; R4 := U2
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #84:
;
; Name:            
; Defined at line: 2751
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: SETGLOBALHASH R0 K2        ; mInSubScreen := R0
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0x34291f5c
  9 [-]: GETTABLE  R1 R1 K4     ; R82 := R1[0x1467d5f4]
 10 [-]: CALL      R1 1 2       ; R1 := R1()
 11 [-]: TEST      R1 0         ; if not R1 then PC := 43
 12 [-]: JMP       43           ; PC := 43
 13 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 14 [-]: GETGLOBAL R2 K5        ; R2 := _T
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["SetButtonBarEnabled"]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: TEST      R1 1         ; if R1 then PC := 43
 18 [-]: JMP       43           ; PC := 43
 19 [-]: TEST      R0 0         ; if not R0 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETGLOBAL R1 K5        ; R1 := _T
 22 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0x0f9e0f24]
 23 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: JMP       43           ; PC := 43
 26 [-]: GETGLOBAL R1 K5        ; R1 := _T
 27 [-]: GETTABLE  R1 R1 K7     ; R82 := R1[0x0f9e0f24]
 28 [-]: GETGLOBAL R2 K8        ; R2 := mWindow
 29 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mVisualMode"]
 30 [-]: GETGLOBAL R3 K8        ; R3 := mWindow
 31 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 32 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 41
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R2 K8        ; R2 := mWindow
 35 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mVisualMode"]
 36 [-]: GETGLOBAL R3 K8        ; R3 := mWindow
 37 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["VISUAL_MODE_MENU_SIMPLE"]
 38 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 41
 41 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 42 [-]: CALL      R1 2 1       ; R1(R2)
 43 [-]: GETGLOBAL R1 K8        ; R1 := mWindow
 44 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["mVisualMode"]
 45 [-]: GETGLOBAL R2 K8        ; R2 := mWindow
 46 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 47 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 50
 48 [-]: JMP       50           ; PC := 50
 49 [-]: OP_LOADBOOL R1 0 1       ; R1 := false; PC := 50
 50 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 51 [-]: TESTSET   R2 R0 1      ; if R0 then PC := 56 else R2 := R0
 52 [-]: JMP       56           ; PC := 56
 53 [-]: TESTSET   R2 R1 1      ; if R1 then PC := 56 else R2 := R1
 54 [-]: JMP       56           ; PC := 56
 55 [-]: GETGLOBAL R2 K12       ; R2 := mChatHidden
 56 [-]: SETGLOBALHASH R0 K13       ; mInputBlocked := R0
 57 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 58 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0xbed40e9c]
 59 [-]: MOVE      R5 R2        ; R5 := R2
 60 [-]: CALL      R3 3 1       ; R3(R4,R5)
 61 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 62 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0xbc838db9]
 63 [-]: NOT       R5 R2        ; R5 := not R2
 64 [-]: CALL      R3 3 1       ; R3(R4,R5)
 65 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 66 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0x67bc869f]
 67 [-]: LOADK     R5 K17       ; R5 := "_root"
 68 [-]: CONST     R6 10        ; R6 := 10.000000
 69 [-]: GETUPVAL  R7 U0        ; R7 := U0
 70 [-]: GETTABLE  R7 R7 K18    ; R82 := R7[0x06d055f9]
 71 [-]: MOVE      R8 R0        ; R8 := R0
 72 [-]: CONST     R9 0         ; R9 := 0.000000
 73 [-]: CONST     R10 100      ; R10 := 100.000000
 74 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 75 [-]: CALL      R3 0 1       ; R3(R4,...)
 76 [-]: GETUPVAL  R3 U0        ; R3 := U0
 77 [-]: GETTABLE  R3 R3 K18    ; R82 := R3[0x06d055f9]
 78 [-]: TEST      R0 1         ; if R0 then PC := 95
 79 [-]: JMP       95           ; PC := 95
 80 [-]: GETGLOBAL R4 K3        ; R4 := 0x34291f5c
 81 [-]: GETTABLE  R4 R4 K4     ; R82 := R4[0x1467d5f4]
 82 [-]: CALL      R4 1 2       ; R4 := R4()
 83 [-]: TEST      R4 0         ; if not R4 then PC := 97
 84 [-]: JMP       97           ; PC := 97
 85 [-]: GETGLOBAL R4 K5        ; R4 := _T
 86 [-]: GETTABLE  R4 R4 K19    ; R4 := R4["TopMenuOpen"]
 87 [-]: TEST      R4 0         ; if not R4 then PC := 97
 88 [-]: JMP       97           ; PC := 97
 89 [-]: GETGLOBAL R4 K8        ; R4 := mWindow
 90 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mVisualMode"]
 91 [-]: GETGLOBAL R5 K8        ; R5 := mWindow
 92 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["VISUAL_MODE_MENU_FULL"]
 93 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 96
 96 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 97 [-]: LOADK     R5 K21       ; R5 := 0.600000
 98 [-]: CONST     R6 0         ; R6 := 0.000000
 99 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
100 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
101 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0x58bec6d6]
102 [-]: MOVE      R6 R3        ; R6 := R3
103 [-]: CALL      R4 3 1       ; R4(R5,R6)
104 [-]: RETURN    R0 1         ; return 


; Function #85:
;
; Name:            
; Defined at line: 2776
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xe7f2b02f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x0b151d80]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 0         ; if not R1 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: LOADNIL   R1 R1        ; R1 := nil
 10 [-]: SETUPVAL  R1 U0        ; U82 := 
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: SELF      R1 R0 K3     ; R2 := R0; R1 := R0[0x1f268b73]
 13 [-]: GETUPVAL  R3 U0        ; R3 := U0
 14 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Name"]
 15 [-]: GETUPVAL  R4 U0        ; R4 := U0
 16 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["ChannelName"]
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["Duration"]
 19 [-]: GETUPVAL  R6 U0        ; R6 := U0
 20 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["Mode"]
 21 [-]: GETUPVAL  R7 U0        ; R7 := U0
 22 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["Reason"]
 23 [-]: GETUPVAL  R8 U0        ; R8 := U0
 24 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["Message"]
 25 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 26 [-]: LOADNIL   R1 R1        ; R1 := nil
 27 [-]: SETUPVAL  R1 U0        ; U82 := 
 28 [-]: RETURN    R0 1         ; return 


; Function #86:
;
; Name:            
; Defined at line: 2788
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 27
  6 [-]: JMP       27           ; PC := 27
  7 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  8 [-]: GETGLOBAL R3 K2        ; R3 := mSelectedUser
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 27
 11 [-]: JMP       27           ; PC := 27
 12 [-]: GETGLOBAL R2 K2        ; R2 := mSelectedUser
 13 [-]: GETTABLE  R0 R2 K3     ; R0 := R2["User"]
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: GETTABLE  R2 R2 K4     ; R82 := R2[0x06d055f9]
 16 [-]: GETGLOBAL R3 K2        ; R3 := mSelectedUser
 17 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["Reason"]
 18 [-]: EQ        0 R3 K6      ; if R3 ~= nil then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: OP_LOADBOOL R3 0 1       ; R3 := false; PC := 21
 21 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 22 [-]: GETGLOBAL R4 K2        ; R4 := mSelectedUser
 23 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["Reason"]
 24 [-]: LOADK     R5 K0        ; R5 := ""
 25 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 26 [-]: MOVE      R1 R2        ; R1 := R2
 27 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 28 [-]: MOVE      R3 R0        ; R3 := R0
 29 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 30 [-]: TEST      R2 0         ; if not R2 then PC := 33
 31 [-]: JMP       33           ; PC := 33
 32 [-]: RETURN    R0 1         ; return 
 33 [-]: GETUPVAL  R2 U1        ; R2 := U1
 34 [-]: EQ        1 R2 K6      ; if R2 == nil then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETGLOBAL R2 K7        ; R2 := mWindow
 37 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xd4f2405e]
 38 [-]: GETGLOBAL R4 K9        ; R4 := 0xae91e43b
 39 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0x42b04007]
 40 [-]: LOADK     R6 K11       ; R6 := "/Lotus/Language/Menu/Chat_KickInProgress"
 41 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 42 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 43 [-]: CALL      R2 0 1       ; R2(R3,...)
 44 [-]: RETURN    R0 1         ; return 
 45 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 46 [-]: GETGLOBAL R3 K12       ; R3 := mChildMovie
 47 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 48 [-]: TEST      R2 1         ; if R2 then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: GETGLOBAL R2 K12       ; R2 := mChildMovie
 51 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x32302b4a]
 52 [-]: CALL      R2 2 1       ; R2(R3)
 53 [-]: GETUPVAL  R2 U2        ; R2 := U2
 54 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 55 [-]: CALL      R2 2 1       ; R2(R3)
 56 [-]: GETGLOBAL R2 K9        ; R2 := 0xae91e43b
 57 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0x1fd6abd0]
 58 [-]: GETGLOBAL R4 K15       ; R4 := 0xb009bbc6
 59 [-]: GETGLOBAL R5 K16       ; R5 := 0x4baca03a
 60 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 61 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 62 [-]: SETGLOBALHASH R2 K12       ; mChildMovie := R2
 63 [-]: GETGLOBAL R2 K12       ; R2 := mChildMovie
 64 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xe4162eed]
 65 [-]: LOADK     R4 K18       ; R4 := "SetTitle"
 66 [-]: GETGLOBAL R5 K9        ; R5 := 0xae91e43b
 67 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0x42b04007]
 68 [-]: LOADK     R7 K19       ; R7 := "/Lotus/Language/Menu/Chat_BanPlayer"
 69 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 70 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 71 [-]: SETTABLE  R9 K20 R0    ; R9["NAME"] := R0
 72 [-]: CALL      R5 5 0       ; R5,... := R5(R6,R7,R8,R9)
 73 [-]: CALL      R2 0 1       ; R2(R3,...)
 74 [-]: GETGLOBAL R2 K12       ; R2 := mChildMovie
 75 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xe4162eed]
 76 [-]: LOADK     R4 K21       ; R4 := "SetConfirmButtonActive"
 77 [-]: LOADK     R5 K22       ; R5 := "true"
 78 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 79 [-]: GETGLOBAL R2 K23       ; R2 := _T
 80 [-]: CLOSURE   R3 0         ; R3 := closure(Function #86.1)
 81 [-]: GETUPVAL  R0 U2        ; R0 := U2
 82 [-]: MOVE      R0 R0        ; R0 := R0
 83 [-]: GETUPVAL  R0 U1        ; R0 := U1
 84 [-]: MOVE      R0 R1        ; R0 := R1
 85 [-]: SETTABLE  R2 K24 R3    ; R2["BanPlayerSettingsDone"] := R3
 86 [-]: GETGLOBAL R2 K12       ; R2 := mChildMovie
 87 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xe4162eed]
 88 [-]: LOADK     R4 K25       ; R4 := "SetCallBack"
 89 [-]: LOADK     R5 K24       ; R5 := "BanPlayerSettingsDone"
 90 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 91 [-]: GETGLOBAL R2 K23       ; R2 := _T
 92 [-]: CLOSURE   R3 1         ; R3 := closure(Function #86.2)
 93 [-]: GETUPVAL  R0 U3        ; R0 := U3
 94 [-]: SETTABLE  R2 K26 R3    ; R2["GetSettings"] := R3
 95 [-]: GETGLOBAL R2 K12       ; R2 := mChildMovie
 96 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xe4162eed]
 97 [-]: LOADK     R4 K27       ; R4 := "SetElementsFunction"
 98 [-]: LOADK     R5 K26       ; R5 := "GetSettings"
 99 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
100 [-]: RETURN    R0 1         ; return 


; Function #86.1:
;
; Name:            
; Defined at line: 2814
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := _T
  2 [-]: SETTABLE  R2 K1 K2     ; R2["BanPlayerSettingsDone"] := nil
  3 [-]: GETGLOBAL R2 K0        ; R2 := _T
  4 [-]: SETTABLE  R2 K3 K2     ; R2["GetSettings"] := nil
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
  9 [-]: MOVE      R3 R1        ; R3 := R1
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R2 U1        ; R2 := U1
 15 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 71
 16 [-]: JMP       71           ; PC := 71
 17 [-]: GETUPVAL  R2 U1        ; R2 := U1
 18 [-]: EQ        1 R2 K5      ; if R2 == "" then PC := 71
 19 [-]: JMP       71           ; PC := 71
 20 [-]: GETGLOBAL R2 K6        ; R2 := mWindow
 21 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x8b75da5a]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETGLOBAL R3 K8        ; R3 := 0xe7f2b02f
 24 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x0b151d80]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 27 [-]: MOVE      R5 R2        ; R5 := R2
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: TEST      R4 1         ; if R4 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 32 [-]: MOVE      R5 R3        ; R5 := R3
 33 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 34 [-]: TEST      R4 0         ; if not R4 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETTABLE  R4 R2 K10    ; R4 := R2["mChannelType"]
 38 [-]: GETGLOBAL R5 K6        ; R5 := mWindow
 39 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["CHANNEL_CLAN"]
 40 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 47
 41 [-]: JMP       47           ; PC := 47
 42 [-]: GETTABLE  R4 R2 K10    ; R4 := R2["mChannelType"]
 43 [-]: GETGLOBAL R5 K6        ; R5 := mWindow
 44 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["CHANNEL_ALLIANCE"]
 45 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 48
 46 [-]: JMP       48           ; PC := 48
 47 [-]: RETURN    R0 1         ; return 
 48 [-]: GETTABLE  R4 R0 K13    ; R4 := R0[1.000000]
 49 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mValue"]
 50 [-]: GETTABLE  R5 R0 K15    ; R5 := R0[2.000000]
 51 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["mValue"]
 52 [-]: LOADK     R6 K16       ; R6 := "#"
 53 [-]: GETTABLE  R7 R2 K17    ; R7 := R2["mChannelName"]
 54 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 55 [-]: NEWTABLE  R7 0 7       ; R7 := {}
 56 [-]: GETUPVAL  R8 U1        ; R8 := U1
 57 [-]: SETTABLE  R7 K18 R8    ; R7["Name"] := R8
 58 [-]: SETTABLE  R7 K19 K20   ; R7["Kick"] := false
 59 [-]: SETTABLE  R7 K21 R4    ; R7["Mode"] := R4
 60 [-]: SETTABLE  R7 K22 R5    ; R7["Duration"] := R5
 61 [-]: SETTABLE  R7 K23 R6    ; R7["ChannelName"] := R6
 62 [-]: GETUPVAL  R8 U3        ; R8 := U3
 63 [-]: SETTABLE  R7 K24 R8    ; R7["Reason"] := R8
 64 [-]: SETTABLE  R7 K25 K5    ; R7["Message"] := ""
 65 [-]: SETUPVAL  R7 U2        ; U82 := 
 66 [-]: GETGLOBAL R7 K26       ; R7 := 0xae91e43b
 67 [-]: SELF      R7 R7 K27    ; R8 := R7; R7 := R7[0xe4162eed]
 68 [-]: LOADK     R9 K28       ; R9 := "BanPlayer"
 69 [-]: LOADK     R10 K5       ; R10 := ""
 70 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 71 [-]: RETURN    R0 1         ; return 


; Function #86.2:
;
; Name:            
; Defined at line: 2849
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: NEWTABLE  R0 0 0       ; R0 := {}
  2 [-]: NEWTABLE  R1 0 4       ; R1 := {}
  3 [-]: SETTABLE  R1 K1 K2     ; R1["mLabel"] := "/Lotus/Language/Menu/Chat_BanMenu_Mode"
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["TOGGLE"]
  6 [-]: SETTABLE  R1 K3 R2     ; R1[0x2c53eb41] := R2
  7 [-]: SETTABLE  R1 K5 K7     ; R1["mValue"] := 0.000000
  8 [-]: NEWTABLE  R2 3 0       ; R2 := {}
  9 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 10 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 11 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0x42b04007]
 12 [-]: LOADK     R6 K12       ; R6 := "/Lotus/Language/Menu/Chat_BanOption_Channel"
 13 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 14 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 15 [-]: SETTABLE  R3 K9 R4     ; R3["Label"] := R4
 16 [-]: SETTABLE  R3 K13 K7    ; R3["Value"] := 0.000000
 17 [-]: NEWTABLE  R4 0 2       ; R4 := {}
 18 [-]: GETGLOBAL R5 K10       ; R5 := 0xae91e43b
 19 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0x42b04007]
 20 [-]: LOADK     R7 K14       ; R7 := "/Lotus/Language/Menu/Chat_BanOption_Id"
 21 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 22 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 23 [-]: SETTABLE  R4 K9 R5     ; R4["Label"] := R5
 24 [-]: SETTABLE  R4 K13 K0    ; R4["Value"] := 1.000000
 25 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 26 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
 27 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0x42b04007]
 28 [-]: LOADK     R8 K15       ; R8 := "/Lotus/Language/Menu/Chat_BanOption_Ip"
 29 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 30 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 31 [-]: SETTABLE  R5 K9 R6     ; R5["Label"] := R6
 32 [-]: SETTABLE  R5 K13 K16   ; R5["Value"] := 3.000000
 33 [-]: SETLIST   R2 3 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 3
 34 [-]: SETTABLE  R1 K8 R2     ; R1["mToggleValues"] := R2
 35 [-]: SETTABLE  R0 K0 R1     ; R0[1.000000] := R1
 36 [-]: NEWTABLE  R1 0 4       ; R1 := {}
 37 [-]: SETTABLE  R1 K1 K18    ; R1["mLabel"] := "/Lotus/Language/Menu/Chat_BanMenu_Duration"
 38 [-]: GETUPVAL  R2 U0        ; R2 := U0
 39 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["TOGGLE"]
 40 [-]: SETTABLE  R1 K3 R2     ; R1[0x2c53eb41] := R2
 41 [-]: SETTABLE  R1 K5 K19    ; R1["mValue"] := "1h"
 42 [-]: NEWTABLE  R2 3 0       ; R2 := {}
 43 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 44 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 45 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0x42b04007]
 46 [-]: LOADK     R6 K20       ; R6 := "/Lotus/Language/Menu/Chat_BanDuration_1H"
 47 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 48 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 49 [-]: SETTABLE  R3 K9 R4     ; R3["Label"] := R4
 50 [-]: SETTABLE  R3 K13 K19   ; R3["Value"] := "1h"
 51 [-]: NEWTABLE  R4 0 2       ; R4 := {}
 52 [-]: GETGLOBAL R5 K10       ; R5 := 0xae91e43b
 53 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0x42b04007]
 54 [-]: LOADK     R7 K21       ; R7 := "/Lotus/Language/Menu/Chat_BanDuration_1D"
 55 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 56 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 57 [-]: SETTABLE  R4 K9 R5     ; R4["Label"] := R5
 58 [-]: SETTABLE  R4 K13 K22   ; R4["Value"] := "1d"
 59 [-]: NEWTABLE  R5 0 2       ; R5 := {}
 60 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
 61 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0x42b04007]
 62 [-]: LOADK     R8 K23       ; R8 := "/Lotus/Language/Menu/Chat_BanDuration_1W"
 63 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 64 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 65 [-]: SETTABLE  R5 K9 R6     ; R5["Label"] := R6
 66 [-]: SETTABLE  R5 K13 K24   ; R5["Value"] := "1w"
 67 [-]: SETLIST   R2 3 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 3
 68 [-]: SETTABLE  R1 K8 R2     ; R1["mToggleValues"] := R2
 69 [-]: SETTABLE  R0 K17 R1    ; R0[2.000000] := R1
 70 [-]: RETURN    R0 2         ; return R0
 71 [-]: RETURN    R0 1         ; return 


; Function #87:
;
; Name:            
; Defined at line: 2874
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x1a94c9cc]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: CONST     R3 1         ; R3 := 1.000000
  5 [-]: CONST     R4 1         ; R4 := 1.000000
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: EQ        1 R1 K2      ; if R1 == "G" then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: EQ        1 R1 K3      ; if R1 == "R" then PC := 22
 10 [-]: JMP       22           ; PC := 22
 11 [-]: EQ        1 R1 K4      ; if R1 == "T" then PC := 22
 12 [-]: JMP       22           ; PC := 22
 13 [-]: EQ        1 R1 K5      ; if R1 == "D" then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: EQ        1 R1 K6      ; if R1 == "H" then PC := 22
 16 [-]: JMP       22           ; PC := 22
 17 [-]: EQ        1 R1 K7      ; if R1 == "O" then PC := 22
 18 [-]: JMP       22           ; PC := 22
 19 [-]: EQ        1 R1 K8      ; if R1 == "Q" then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 22
 22 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 23 [-]: RETURN    R2 2         ; return R2
 24 [-]: RETURN    R0 1         ; return 


; Function #88:
;
; Name:            
; Defined at line: 2888
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  8 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  9 [-]: EQ        0 R1 K2      ; if R1 ~= 0.000000 then PC := 30
 10 [-]: JMP       30           ; PC := 30
 11 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 12 [-]: GETGLOBAL R5 K3        ; R5 := 0x7ed0a956
 13 [-]: LOADK     R6 K4        ; R6 := "/Lotus/Types/Weapon/LotusWeaponBlade"
 14 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 15 [-]: GETGLOBAL R6 K3        ; R6 := 0x7ed0a956
 16 [-]: LOADK     R7 K5        ; R7 := "/Lotus/Types/Weapon/LotusWeaponHilt"
 17 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 18 [-]: GETGLOBAL R7 K3        ; R7 := 0x7ed0a956
 19 [-]: LOADK     R8 K6        ; R8 := "/Lotus/Types/Weapon/LotusWeaponWeight"
 20 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 21 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
 22 [-]: MOVE      R3 R4        ; R3 := R4
 23 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 24 [-]: GETGLOBAL R5 K7        ; R5 := 0x9c023f17
 25 [-]: GETGLOBAL R6 K8        ; R6 := 0xbd493ed1
 26 [-]: GETGLOBAL R7 K9        ; R7 := 0x1da1be95
 27 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 28 [-]: MOVE      R2 R4        ; R2 := R4
 29 [-]: JMP       123          ; PC := 123
 30 [-]: EQ        0 R1 K10     ; if R1 ~= 1.000000 then PC := 51
 31 [-]: JMP       51           ; PC := 51
 32 [-]: NEWTABLE  R4 2 0       ; R4 := {}
 33 [-]: GETGLOBAL R5 K3        ; R5 := 0x7ed0a956
 34 [-]: LOADK     R6 K11       ; R6 := "/Lotus/Types/Weapon/LotusWeaponAmpOculus"
 35 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 36 [-]: GETGLOBAL R6 K3        ; R6 := 0x7ed0a956
 37 [-]: LOADK     R7 K12       ; R7 := "/Lotus/Types/Weapon/LotusWeaponAmpCore"
 38 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 39 [-]: GETGLOBAL R7 K3        ; R7 := 0x7ed0a956
 40 [-]: LOADK     R8 K13       ; R8 := "/Lotus/Types/Weapon/LotusWeaponAmpBrace"
 41 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 42 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
 43 [-]: MOVE      R3 R4        ; R3 := R4
 44 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 45 [-]: GETGLOBAL R5 K14       ; R5 := 0x079ca045
 46 [-]: GETGLOBAL R6 K15       ; R6 := 0x31047143
 47 [-]: GETGLOBAL R7 K16       ; R7 := 0xdccd285d
 48 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 49 [-]: MOVE      R2 R4        ; R2 := R4
 50 [-]: JMP       123          ; PC := 123
 51 [-]: EQ        0 R1 K17     ; if R1 ~= 6.000000 then PC := 76
 52 [-]: JMP       76           ; PC := 76
 53 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 54 [-]: GETGLOBAL R5 K3        ; R5 := 0x7ed0a956
 55 [-]: LOADK     R6 K18       ; R6 := "/Lotus/Types/Game/MoaPetParts/LotusMoaPetLeg"
 56 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 57 [-]: GETGLOBAL R6 K3        ; R6 := 0x7ed0a956
 58 [-]: LOADK     R7 K19       ; R7 := "/Lotus/Types/Game/MoaPetParts/LotusMoaPetHead"
 59 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 60 [-]: GETGLOBAL R7 K3        ; R7 := 0x7ed0a956
 61 [-]: LOADK     R8 K20       ; R8 := "/Lotus/Types/Game/MoaPetParts/LotusMoaPetEngine"
 62 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 63 [-]: GETGLOBAL R8 K3        ; R8 := 0x7ed0a956
 64 [-]: LOADK     R9 K21       ; R9 := "/Lotus/Types/Game/MoaPetParts/LotusMoaPetPayload"
 65 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 66 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
 67 [-]: MOVE      R3 R4        ; R3 := R4
 68 [-]: NEWTABLE  R4 4 0       ; R4 := {}
 69 [-]: GETGLOBAL R5 K22       ; R5 := 0x2c53eb41
 70 [-]: GETGLOBAL R6 K23       ; R6 := 0x3cf8b1e7
 71 [-]: GETGLOBAL R7 K24       ; R7 := 0xbaa5088f
 72 [-]: GETGLOBAL R8 K25       ; R8 := 0x0704bc8b
 73 [-]: SETLIST   R4 4 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
 74 [-]: MOVE      R2 R4        ; R2 := R4
 75 [-]: JMP       123          ; PC := 123
 76 [-]: EQ        0 R1 K26     ; if R1 ~= 7.000000 then PC := 101
 77 [-]: JMP       101          ; PC := 101
 78 [-]: NEWTABLE  R4 3 0       ; R4 := {}
 79 [-]: GETGLOBAL R5 K3        ; R5 := 0x7ed0a956
 80 [-]: LOADK     R6 K27       ; R6 := "/Lotus/Types/Game/HoverboardParts/LotusHoverboardDeck"
 81 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 82 [-]: GETGLOBAL R6 K3        ; R6 := 0x7ed0a956
 83 [-]: LOADK     R7 K28       ; R7 := "/Lotus/Types/Game/HoverboardParts/LotusHoverboardEngine"
 84 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 85 [-]: GETGLOBAL R7 K3        ; R7 := 0x7ed0a956
 86 [-]: LOADK     R8 K29       ; R8 := "/Lotus/Types/Game/HoverboardParts/LotusHoverboardFront"
 87 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 88 [-]: GETGLOBAL R8 K3        ; R8 := 0x7ed0a956
 89 [-]: LOADK     R9 K30       ; R9 := "/Lotus/Types/Game/HoverboardParts/LotusHoverboardJet"
 90 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 91 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
 92 [-]: MOVE      R3 R4        ; R3 := R4
 93 [-]: NEWTABLE  R4 4 0       ; R4 := {}
 94 [-]: GETGLOBAL R5 K31       ; R5 := 0xc40a6da3
 95 [-]: GETGLOBAL R6 K32       ; R6 := 0xe85256f6
 96 [-]: GETGLOBAL R7 K33       ; R7 := 0x9ab3ce7f
 97 [-]: GETGLOBAL R8 K34       ; R8 := 0x39ea2417
 98 [-]: SETLIST   R4 4 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 4
 99 [-]: MOVE      R2 R4        ; R2 := R4
100 [-]: JMP       123          ; PC := 123
101 [-]: EQ        1 R1 K35     ; if R1 == 2.000000 then PC := 105
102 [-]: JMP       105          ; PC := 105
103 [-]: EQ        0 R1 K36     ; if R1 ~= 3.000000 then PC := 123
104 [-]: JMP       123          ; PC := 123
105 [-]: NEWTABLE  R4 2 0       ; R4 := {}
106 [-]: GETGLOBAL R5 K3        ; R5 := 0x7ed0a956
107 [-]: LOADK     R6 K37       ; R6 := "/Lotus/Types/Weapon/LotusGunHandle"
108 [-]: CALL      R5 2 2       ; R5 := R5(R6)
109 [-]: GETGLOBAL R6 K3        ; R6 := 0x7ed0a956
110 [-]: LOADK     R7 K38       ; R7 := "/Lotus/Types/Weapon/LotusGunBarrel"
111 [-]: CALL      R6 2 2       ; R6 := R6(R7)
112 [-]: GETGLOBAL R7 K3        ; R7 := 0x7ed0a956
113 [-]: LOADK     R8 K39       ; R8 := "/Lotus/Types/Weapon/LotusGunClip"
114 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
115 [-]: SETLIST   R4 0 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
116 [-]: MOVE      R3 R4        ; R3 := R4
117 [-]: NEWTABLE  R4 3 0       ; R4 := {}
118 [-]: GETGLOBAL R5 K40       ; R5 := 0x54d06231
119 [-]: GETGLOBAL R6 K41       ; R6 := 0x925a60af
120 [-]: GETGLOBAL R7 K42       ; R7 := 0x0f7c3ad1
121 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
122 [-]: MOVE      R2 R4        ; R2 := R4
123 [-]: NEWTABLE  R4 0 0       ; R4 := {}
124 [-]: CONST     R5 1         ; R5 := 1.000000
125 [-]: LEN       R6 R2        ; R6 := # R2
126 [-]: CONST     R7 1         ; R7 := 1.000000
127 [-]: FORPREP   R5 190       ; R5 -= R7; PC := 190
128 [-]: LOADNIL   R9 R9        ; R9 := nil
129 [-]: CONST     R10 1        ; R10 := 1.000000
130 [-]: GETTABLE  R11 R0 K43   ; R11 := R0["mModularParts"]
131 [-]: LEN       R11 R11      ; R11 := # R11
132 [-]: CONST     R12 1        ; R12 := 1.000000
133 [-]: FORPREP   R10 144      ; R10 -= R12; PC := 144
134 [-]: GETTABLE  R14 R0 K43   ; R14 := R0["mModularParts"]
135 [-]: GETTABLE  R14 R14 R13  ; R14 := R14[R13]
136 [-]: SELF      R14 R14 K44  ; R15 := R14; R14 := R14[0xf2deaf69]
137 [-]: GETTABLE  R16 R3 R8    ; R16 := R3[R8]
138 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
139 [-]: TEST      R14 0        ; if not R14 then PC := 144
140 [-]: JMP       144          ; PC := 144
141 [-]: GETTABLE  R14 R0 K43   ; R14 := R0["mModularParts"]
142 [-]: GETTABLE  R9 R14 R13   ; R9 := R14[R13]
143 [-]: JMP       145          ; PC := 145
144 [-]: FORLOOP   R10 134      ; R10 += R12; if R10 <= R11 then begin PC := 134; R13 := R10 end
145 [-]: EQ        0 R9 K45     ; if R9 ~= nil then PC := 159
146 [-]: JMP       159          ; PC := 159
147 [-]: GETGLOBAL R14 K46      ; R14 := 0x3d106989
148 [-]: LOADK     R15 K47      ; R15 := "ChatRedux::ModularLink: Could not find part of type: "
149 [-]: GETTABLE  R16 R3 R8    ; R16 := R3[R8]
150 [-]: SELF      R16 R16 K48  ; R17 := R16; R16 := R16[0xed4e0128]
151 [-]: CALL      R16 2 2      ; R16 := R16(R17)
152 [-]: CONCAT    R15 R15 R16  ; R15 := R15 .. R16
153 [-]: CALL      R14 2 1      ; R14(R15)
154 [-]: GETUPVAL  R14 U0       ; R14 := U0
155 [-]: GETTABLE  R14 R14 K49  ; R82 := R14[0xe0cba3ca]
156 [-]: LOADK     R15 K50      ; R15 := "/Lotus/Language/Menu/Chat_LinkModularWeaponFailed"
157 [-]: CALL      R14 2 1      ; R14(R15)
158 [-]: RETURN    R0 1         ; return 
159 [-]: GETTABLE  R14 R2 R8    ; R14 := R2[R8]
160 [-]: LOADNIL   R15 R15      ; R15 := nil
161 [-]: CONST     R16 1        ; R16 := 1.000000
162 [-]: LEN       R17 R14      ; R17 := # R14
163 [-]: CONST     R18 1        ; R18 := 1.000000
164 [-]: FORPREP   R16 170      ; R16 -= R18; PC := 170
165 [-]: GETTABLE  R20 R14 R19  ; R20 := R14[R19]
166 [-]: EQ        0 R9 R20     ; if R9 ~= R20 then PC := 170
167 [-]: JMP       170          ; PC := 170
168 [-]: SUB       R15 R19 K10  ; R15 := R19 - 1.000000
169 [-]: JMP       171          ; PC := 171
170 [-]: FORLOOP   R16 165      ; R16 += R18; if R16 <= R17 then begin PC := 165; R19 := R16 end
171 [-]: EQ        0 R15 K45    ; if R15 ~= nil then PC := 185
172 [-]: JMP       185          ; PC := 185
173 [-]: GETGLOBAL R20 K46      ; R20 := 0x3d106989
174 [-]: LOADK     R21 K51      ; R21 := "ChatRedux::ModularLink: Could not find: "
175 [-]: SELF      R22 R9 K48   ; R23 := R9; R22 := R9[0xed4e0128]
176 [-]: CALL      R22 2 2      ; R22 := R22(R23)
177 [-]: LOADK     R23 K52      ; R23 := " in part tables"
178 [-]: CONCAT    R21 R21 R23  ; R21 := R21 .. R22 .. R23
179 [-]: CALL      R20 2 1      ; R20(R21)
180 [-]: GETUPVAL  R20 U0       ; R20 := U0
181 [-]: GETTABLE  R20 R20 K49  ; R82 := R20[0xe0cba3ca]
182 [-]: LOADK     R21 K50      ; R21 := "/Lotus/Language/Menu/Chat_LinkModularWeaponFailed"
183 [-]: CALL      R20 2 1      ; R20(R21)
184 [-]: RETURN    R0 1         ; return 
185 [-]: GETGLOBAL R20 K53      ; R20 := 0x33bdd652
186 [-]: GETTABLE  R20 R20 K54  ; R82 := R20[0x23d5322f]
187 [-]: MOVE      R21 R4       ; R21 := R4
188 [-]: MOVE      R22 R15      ; R22 := R15
189 [-]: CALL      R20 3 1      ; R20(R21,R22)
190 [-]: FORLOOP   R5 128       ; R5 += R7; if R5 <= R6 then begin PC := 128; R8 := R5 end
191 [-]: RETURN    R4 2         ; return R4
192 [-]: RETURN    R0 1         ; return 


; Function #89:
;
; Name:            
; Defined at line: 2955
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        1 R0 K1      ; if R0 == 6.000000 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: EQ        0 R0 K2      ; if R0 ~= 7.000000 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: CONST     R1 4         ; R1 := 4.000000
  6 [-]: RETURN    R1 2         ; return R1
  7 [-]: CONST     R1 3         ; R1 := 3.000000
  8 [-]: RETURN    R1 2         ; return R1
  9 [-]: RETURN    R0 1         ; return 


; Function #90:
;
; Name:            
; Defined at line: 2963
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: NEWTABLE  R2 3 0       ; R2 := {}
  2 [-]: GETGLOBAL R3 K0        ; R3 := 0x9c023f17
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0xbd493ed1
  4 [-]: GETGLOBAL R5 K2        ; R5 := 0x1da1be95
  5 [-]: SETLIST   R2 3 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 3
  6 [-]: EQ        0 R1 K4      ; if R1 ~= 6.000000 then PC := 16
  7 [-]: JMP       16           ; PC := 16
  8 [-]: NEWTABLE  R3 4 0       ; R3 := {}
  9 [-]: GETGLOBAL R4 K5        ; R4 := 0x2c53eb41
 10 [-]: GETGLOBAL R5 K6        ; R5 := 0x3cf8b1e7
 11 [-]: GETGLOBAL R6 K7        ; R6 := 0xbaa5088f
 12 [-]: GETGLOBAL R7 K8        ; R7 := 0x0704bc8b
 13 [-]: SETLIST   R3 4 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 4
 14 [-]: MOVE      R2 R3        ; R2 := R3
 15 [-]: JMP       45           ; PC := 45
 16 [-]: EQ        0 R1 K9      ; if R1 ~= 7.000000 then PC := 26
 17 [-]: JMP       26           ; PC := 26
 18 [-]: NEWTABLE  R3 4 0       ; R3 := {}
 19 [-]: GETGLOBAL R4 K10       ; R4 := 0xc40a6da3
 20 [-]: GETGLOBAL R5 K11       ; R5 := 0xe85256f6
 21 [-]: GETGLOBAL R6 K12       ; R6 := 0x9ab3ce7f
 22 [-]: GETGLOBAL R7 K13       ; R7 := 0x39ea2417
 23 [-]: SETLIST   R3 4 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 4
 24 [-]: MOVE      R2 R3        ; R2 := R3
 25 [-]: JMP       45           ; PC := 45
 26 [-]: EQ        0 R1 K14     ; if R1 ~= 1.000000 then PC := 35
 27 [-]: JMP       35           ; PC := 35
 28 [-]: NEWTABLE  R3 3 0       ; R3 := {}
 29 [-]: GETGLOBAL R4 K15       ; R4 := 0x079ca045
 30 [-]: GETGLOBAL R5 K16       ; R5 := 0x31047143
 31 [-]: GETGLOBAL R6 K17       ; R6 := 0xdccd285d
 32 [-]: SETLIST   R3 3 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 3
 33 [-]: MOVE      R2 R3        ; R2 := R3
 34 [-]: JMP       45           ; PC := 45
 35 [-]: EQ        1 R1 K18     ; if R1 == 2.000000 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: EQ        0 R1 K19     ; if R1 ~= 3.000000 then PC := 45
 38 [-]: JMP       45           ; PC := 45
 39 [-]: NEWTABLE  R3 3 0       ; R3 := {}
 40 [-]: GETGLOBAL R4 K20       ; R4 := 0x54d06231
 41 [-]: GETGLOBAL R5 K21       ; R5 := 0x925a60af
 42 [-]: GETGLOBAL R6 K22       ; R6 := 0x0f7c3ad1
 43 [-]: SETLIST   R3 3 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 3
 44 [-]: MOVE      R2 R3        ; R2 := R3
 45 [-]: NEWTABLE  R3 0 2       ; R3 := {}
 46 [-]: SETTABLE  R3 K23 K24   ; R3["Gild"] := false
 47 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 48 [-]: SETTABLE  R3 K25 R4    ; R3["Parts"] := R4
 49 [-]: LEN       R4 R0        ; R4 := # R0
 50 [-]: GETUPVAL  R5 U0        ; R5 := U0
 51 [-]: MOVE      R6 R1        ; R6 := R1
 52 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 53 [-]: LT        0 R4 R5      ; if R4 >= R5 then PC := 59
 54 [-]: JMP       59           ; PC := 59
 55 [-]: GETGLOBAL R4 K26       ; R4 := 0x3d106989
 56 [-]: LOADK     R5 K27       ; R5 := "ChatRedux::ModularLink: DecodeModularWeapon did not return the correct number of parts."
 57 [-]: CALL      R4 2 1       ; R4(R5)
 58 [-]: RETURN    R0 1         ; return 
 59 [-]: GETGLOBAL R4 K28       ; R4 := 0x03f57322
 60 [-]: GETTABLE  R5 R0 K14    ; R5 := R0[1.000000]
 61 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 62 [-]: EQ        1 R4 K14     ; if R4 == 1.000000 then PC := 65
 63 [-]: JMP       65           ; PC := 65
 64 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 65
 65 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 66 [-]: SETTABLE  R3 K23 R4    ; R3["Gild"] := R4
 67 [-]: CONST     R4 1         ; R4 := 1.000000
 68 [-]: LEN       R5 R2        ; R5 := # R2
 69 [-]: CONST     R6 1         ; R6 := 1.000000
 70 [-]: FORPREP   R4 91        ; R4 -= R6; PC := 91
 71 [-]: GETTABLE  R8 R2 R7     ; R8 := R2[R7]
 72 [-]: GETGLOBAL R9 K28       ; R9 := 0x03f57322
 73 [-]: ADD       R10 R7 K14   ; R10 := R7 + 1.000000
 74 [-]: GETTABLE  R10 R0 R10   ; R10 := R0[R10]
 75 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 76 [-]: EQ        1 R9 K29     ; if R9 == nil then PC := 81
 77 [-]: JMP       81           ; PC := 81
 78 [-]: LEN       R10 R8       ; R10 := # R8
 79 [-]: LE        0 R10 R9     ; if R10 > R9 then PC := 85
 80 [-]: JMP       85           ; PC := 85
 81 [-]: GETGLOBAL R10 K26      ; R10 := 0x3d106989
 82 [-]: LOADK     R11 K30      ; R11 := "ChatRedux::ModularLink: Index could not be found in part table."
 83 [-]: CALL      R10 2 1      ; R10(R11)
 84 [-]: RETURN    R0 1         ; return 
 85 [-]: GETGLOBAL R10 K31      ; R10 := 0x33bdd652
 86 [-]: GETTABLE  R10 R10 K32  ; R82 := R10[0x23d5322f]
 87 [-]: GETTABLE  R11 R3 K25   ; R11 := R3["Parts"]
 88 [-]: ADD       R12 R9 K14   ; R12 := R9 + 1.000000
 89 [-]: GETTABLE  R12 R8 R12   ; R12 := R8[R12]
 90 [-]: CALL      R10 3 1      ; R10(R11,R12)
 91 [-]: FORLOOP   R4 71        ; R4 += R6; if R4 <= R5 then begin PC := 71; R7 := R4 end
 92 [-]: RETURN    R3 2         ; return R3
 93 [-]: RETURN    R0 1         ; return 


; Function #91:
;
; Name:            
; Defined at line: 3001
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["AppearanceStoredItem"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETTABLE  R0 R0 K3     ; R82 := R0[0x5c283271]
 10 [-]: GETGLOBAL R1 K1        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["AppearanceStoredItem"]
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["StoredItem"]
 13 [-]: GETGLOBAL R2 K1        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["AppearanceStoredItem"]
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["LoadOutType"]
 16 [-]: GETGLOBAL R3 K1        ; R3 := _T
 17 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["AppearanceStoredItem"]
 18 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["LoadOutSlot"]
 19 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 20 [-]: TEST      R0 1         ; if R0 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETUPVAL  R1 U1        ; R1 := U1
 24 [-]: SETTABLE  R1 K7 R0     ; R1["CachedAppearanceLink"] := R0
 25 [-]: GETGLOBAL R1 K8        ; R1 := 0xae91e43b
 26 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x54a95d6f]
 27 [-]: LOADK     R3 K10       ; R3 := "Window.SendMessageBar.MessageBox"
 28 [-]: CONST     R4 29        ; R4 := 29.000000
 29 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 30 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 31 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 32 [-]: GETUPVAL  R4 U2        ; R4 := U2
 33 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["APPEARANCE_STRING_LOC"]
 34 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 35 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 36 [-]: GETGLOBAL R3 K13       ; R3 := 0x7f5022cf
 37 [-]: GETTABLE  R3 R3 K14    ; R82 := R3[0xa5c556b9]
 38 [-]: MOVE      R4 R1        ; R4 := R1
 39 [-]: LOADK     R5 K15       ; R5 := "%["
 40 [-]: MOVE      R6 R2        ; R6 := R2
 41 [-]: LOADK     R7 K16       ; R7 := "%]"
 42 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 43 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 44 [-]: TEST      R3 1         ; if R3 then PC := 57
 45 [-]: JMP       57           ; PC := 57
 46 [-]: MOVE      R3 R1        ; R3 := R1
 47 [-]: LOADK     R4 K17       ; R4 := " ["
 48 [-]: MOVE      R5 R2        ; R5 := R2
 49 [-]: LOADK     R6 K18       ; R6 := "]"
 50 [-]: CONCAT    R1 R3 R6     ; R1 := R3 .. R4 .. R5 .. R6
 51 [-]: GETGLOBAL R3 K8        ; R3 := 0xae91e43b
 52 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3[0x5f56eeab]
 53 [-]: LOADK     R5 K10       ; R5 := "Window.SendMessageBar.MessageBox"
 54 [-]: CONST     R6 29        ; R6 := 29.000000
 55 [-]: MOVE      R7 R1        ; R7 := R1
 56 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 57 [-]: GETGLOBAL R3 K1        ; R3 := _T
 58 [-]: SETTABLE  R3 K2 K20    ; R3["AppearanceStoredItem"] := nil
 59 [-]: GETUPVAL  R3 U3        ; R3 := U3
 60 [-]: GETTABLE  R3 R3 K21    ; R82 := R3[0x659d451f]
 61 [-]: GETGLOBAL R4 K22       ; R4 := 0x0032441c
 62 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["UISound_Select"]
 63 [-]: CALL      R3 2 1       ; R3(R4)
 64 [-]: GETUPVAL  R3 U4        ; R3 := U4
 65 [-]: CALL      R3 1 2       ; R3 := R3()
 66 [-]: TEST      R3 0         ; if not R3 then PC := 70
 67 [-]: JMP       70           ; PC := 70
 68 [-]: GETUPVAL  R3 U5        ; R3 := U5
 69 [-]: CALL      R3 1 1       ; R3()
 70 [-]: RETURN    R0 1         ; return 


; Function #92:
;
; Name:            
; Defined at line: 3028
; #Upvalues:       6
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := _T
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ModConfigStoredItem"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETTABLE  R0 R0 K3     ; R82 := R0[0x13920bc9]
 10 [-]: GETGLOBAL R1 K1        ; R1 := _T
 11 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ModConfigStoredItem"]
 12 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["StoredItem"]
 13 [-]: GETGLOBAL R2 K1        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["ModConfigStoredItem"]
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["LoadOutType"]
 16 [-]: GETGLOBAL R3 K1        ; R3 := _T
 17 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["ModConfigStoredItem"]
 18 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["LoadOutSlot"]
 19 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 20 [-]: TEST      R0 1         ; if R0 then PC := 23
 21 [-]: JMP       23           ; PC := 23
 22 [-]: RETURN    R0 1         ; return 
 23 [-]: GETUPVAL  R1 U1        ; R1 := U1
 24 [-]: SETTABLE  R1 K7 R0     ; R1["CachedModConfigLink"] := R0
 25 [-]: GETGLOBAL R1 K8        ; R1 := 0xae91e43b
 26 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x54a95d6f]
 27 [-]: LOADK     R3 K10       ; R3 := "Window.SendMessageBar.MessageBox"
 28 [-]: CONST     R4 29        ; R4 := 29.000000
 29 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 30 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 31 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 32 [-]: GETUPVAL  R4 U2        ; R4 := U2
 33 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["MOD_CONFIG_STRING_LOC"]
 34 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 35 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 36 [-]: GETGLOBAL R3 K13       ; R3 := 0x7f5022cf
 37 [-]: GETTABLE  R3 R3 K14    ; R82 := R3[0xa5c556b9]
 38 [-]: MOVE      R4 R1        ; R4 := R1
 39 [-]: LOADK     R5 K15       ; R5 := "%["
 40 [-]: MOVE      R6 R2        ; R6 := R2
 41 [-]: LOADK     R7 K16       ; R7 := "%]"
 42 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 43 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 44 [-]: TEST      R3 1         ; if R3 then PC := 57
 45 [-]: JMP       57           ; PC := 57
 46 [-]: MOVE      R3 R1        ; R3 := R1
 47 [-]: LOADK     R4 K17       ; R4 := " ["
 48 [-]: MOVE      R5 R2        ; R5 := R2
 49 [-]: LOADK     R6 K18       ; R6 := "]"
 50 [-]: CONCAT    R1 R3 R6     ; R1 := R3 .. R4 .. R5 .. R6
 51 [-]: GETGLOBAL R3 K8        ; R3 := 0xae91e43b
 52 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3[0x5f56eeab]
 53 [-]: LOADK     R5 K10       ; R5 := "Window.SendMessageBar.MessageBox"
 54 [-]: CONST     R6 29        ; R6 := 29.000000
 55 [-]: MOVE      R7 R1        ; R7 := R1
 56 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 57 [-]: GETGLOBAL R3 K1        ; R3 := _T
 58 [-]: SETTABLE  R3 K2 K20    ; R3["ModConfigStoredItem"] := nil
 59 [-]: GETUPVAL  R3 U3        ; R3 := U3
 60 [-]: GETTABLE  R3 R3 K21    ; R82 := R3[0x659d451f]
 61 [-]: GETGLOBAL R4 K22       ; R4 := 0x0032441c
 62 [-]: GETTABLE  R4 R4 K23    ; R4 := R4["UISound_Select"]
 63 [-]: CALL      R3 2 1       ; R3(R4)
 64 [-]: GETUPVAL  R3 U4        ; R3 := U4
 65 [-]: CALL      R3 1 2       ; R3 := R3()
 66 [-]: TEST      R3 0         ; if not R3 then PC := 70
 67 [-]: JMP       70           ; PC := 70
 68 [-]: GETUPVAL  R3 U5        ; R3 := U5
 69 [-]: CALL      R3 1 1       ; R3()
 70 [-]: RETURN    R0 1         ; return 


; Function #93:
;
; Name:            
; Defined at line: 3055
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x0032441c
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["RecordedSong"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 0         ; if not R0 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: LOADK     R1 K4        ; R1 := "SHZN-"
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0x0032441c
 11 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["RecordedSong"]
 12 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 13 [-]: SETTABLE  R0 K3 R1     ; R0["CachedShawzinLink"] := R1
 14 [-]: GETGLOBAL R0 K5        ; R0 := 0xae91e43b
 15 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x54a95d6f]
 16 [-]: LOADK     R2 K7        ; R2 := "Window.SendMessageBar.MessageBox"
 17 [-]: CONST     R3 29        ; R3 := 29.000000
 18 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 19 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 20 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0x42b04007]
 21 [-]: GETUPVAL  R3 U1        ; R3 := U1
 22 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["SHAWZIN_STRING_LOC"]
 23 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
 24 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 25 [-]: GETGLOBAL R2 K10       ; R2 := 0x7f5022cf
 26 [-]: GETTABLE  R2 R2 K11    ; R82 := R2[0xa5c556b9]
 27 [-]: MOVE      R3 R0        ; R3 := R0
 28 [-]: LOADK     R4 K12       ; R4 := "%["
 29 [-]: MOVE      R5 R1        ; R5 := R1
 30 [-]: LOADK     R6 K13       ; R6 := "%]"
 31 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 32 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 33 [-]: TEST      R2 1         ; if R2 then PC := 46
 34 [-]: JMP       46           ; PC := 46
 35 [-]: MOVE      R2 R0        ; R2 := R0
 36 [-]: LOADK     R3 K14       ; R3 := " ["
 37 [-]: MOVE      R4 R1        ; R4 := R1
 38 [-]: LOADK     R5 K15       ; R5 := "]"
 39 [-]: CONCAT    R0 R2 R5     ; R0 := R2 .. R3 .. R4 .. R5
 40 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 41 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0x5f56eeab]
 42 [-]: LOADK     R4 K7        ; R4 := "Window.SendMessageBar.MessageBox"
 43 [-]: CONST     R5 29        ; R5 := 29.000000
 44 [-]: MOVE      R6 R0        ; R6 := R0
 45 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 46 [-]: GETUPVAL  R2 U2        ; R2 := U2
 47 [-]: GETTABLE  R2 R2 K17    ; R82 := R2[0x659d451f]
 48 [-]: GETGLOBAL R3 K1        ; R3 := 0x0032441c
 49 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["UISound_Select"]
 50 [-]: CALL      R2 2 1       ; R2(R3)
 51 [-]: GETUPVAL  R2 U3        ; R2 := U3
 52 [-]: CALL      R2 1 2       ; R2 := R2()
 53 [-]: TEST      R2 0         ; if not R2 then PC := 57
 54 [-]: JMP       57           ; PC := 57
 55 [-]: GETUPVAL  R2 U4        ; R2 := U4
 56 [-]: CALL      R2 1 1       ; R2()
 57 [-]: RETURN    R0 1         ; return 


; Function #94:
;
; Name:            
; Defined at line: 3076
; #Upvalues:       37
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: NEWTABLE  R5 0 0       ; R5 := {}
  2 [-]: SETTABLE  R5 K0 K1     ; R5["MESSAGE_TYPE_INVALID"] := -1.000000
  3 [-]: SETTABLE  R5 K2 K3     ; R5["MESSAGE_TYPE_REGION"] := 0.000000
  4 [-]: SETTABLE  R5 K4 K5     ; R5["MESSAGE_TYPE_CLAN"] := 1.000000
  5 [-]: SETTABLE  R5 K6 K7     ; R5["MESSAGE_TYPE_SQUAD"] := 2.000000
  6 [-]: SETTABLE  R5 K8 K9     ; R5["MESSAGE_TYPE_TRADE"] := 3.000000
  7 [-]: SETTABLE  R5 K10 K11   ; R5["MESSAGE_TYPE_HUB"] := 4.000000
  8 [-]: SETTABLE  R5 K12 K13   ; R5["MESSAGE_TYPE_JOIN_CHANNEL"] := 5.000000
  9 [-]: SETTABLE  R5 K14 K15   ; R5["MESSAGE_TYPE_LEAVE_CHANNEL"] := 6.000000
 10 [-]: SETTABLE  R5 K16 K17   ; R5["MESSAGE_TYPE_COUNCIL"] := 7.000000
 11 [-]: SETTABLE  R5 K18 K19   ; R5["MESSAGE_TYPE_SYSTEM"] := 8.000000
 12 [-]: SETTABLE  R5 K20 K21   ; R5["MESSAGE_TYPE_BROADCAST"] := 9.000000
 13 [-]: SETTABLE  R5 K22 K23   ; R5["MESSAGE_TYPE_RECRUITING"] := 10.000000
 14 [-]: SETTABLE  R5 K24 K25   ; R5["MESSAGE_TYPE_ALLIANCE"] := 11.000000
 15 [-]: SETTABLE  R5 K26 K27   ; R5["MESSAGE_TYPE_FRIEND"] := 12.000000
 16 [-]: SETTABLE  R5 K28 K29   ; R5["MESSAGE_TYPE_INGAME_WHISPER"] := 13.000000
 17 [-]: SETTABLE  R5 K30 K31   ; R5["MESSAGE_TYPE_NOTIFICATION"] := 14.000000
 18 [-]: SETTABLE  R5 K32 K33   ; R5["MESSAGE_TYPE_STAFF"] := 15.000000
 19 [-]: SETTABLE  R5 K34 K35   ; R5["MESSAGE_TYPE_WG_MOD"] := 16.000000
 20 [-]: SETTABLE  R5 K36 R0    ; R5["mParent"] := R0
 21 [-]: SETTABLE  R5 K37 K38   ; R5["mIsActive"] := false
 22 [-]: SETTABLE  R5 K39 R4    ; R5["mIsChatEnabled"] := R4
 23 [-]: GETGLOBAL R6 K41       ; R6 := mWindow
 24 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["CHANNEL_GLOBAL"]
 25 [-]: EQ        1 R2 R6      ; if R2 == R6 then PC := 39
 26 [-]: JMP       39           ; PC := 39
 27 [-]: GETGLOBAL R6 K41       ; R6 := mWindow
 28 [-]: GETTABLE  R6 R6 K43    ; R6 := R6["CHANNEL_RECRUITING"]
 29 [-]: EQ        1 R2 R6      ; if R2 == R6 then PC := 39
 30 [-]: JMP       39           ; PC := 39
 31 [-]: GETGLOBAL R6 K41       ; R6 := mWindow
 32 [-]: GETTABLE  R6 R6 K44    ; R6 := R6["CHANNEL_TRADE"]
 33 [-]: EQ        1 R2 R6      ; if R2 == R6 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: GETGLOBAL R6 K41       ; R6 := mWindow
 36 [-]: GETTABLE  R6 R6 K45    ; R6 := R6["CHANNEL_QA"]
 37 [-]: EQ        0 R2 R6      ; if R2 ~= R6 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: OP_LOADBOOL R6 0 1       ; R6 := false; PC := 40
 40 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 41 [-]: SETTABLE  R5 K40 R6    ; R5["mIsFlashingEnabled"] := R6
 42 [-]: SETTABLE  R5 K46 K38   ; R5["mCanFlash"] := false
 43 [-]: GETGLOBAL R6 K47       ; R6 := 0x7f5022cf
 44 [-]: GETTABLE  R6 R6 K48    ; R82 := R6[0x66edf04f]
 45 [-]: MOVE      R7 R1        ; R7 := R1
 46 [-]: LOADK     R8 K49       ; R8 := "#"
 47 [-]: LOADK     R9 K50       ; R9 := ""
 48 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 49 [-]: MOVE      R1 R6        ; R1 := R6
 50 [-]: SETTABLE  R5 K51 R3    ; R5["mFriendlyName"] := R3
 51 [-]: SETTABLE  R5 K52 R1    ; R5["mChannelName"] := R1
 52 [-]: SETTABLE  R5 K53 R1    ; R5["mClipName"] := R1
 53 [-]: GETTABLE  R6 R0 K53    ; R6 := R0["mClipName"]
 54 [-]: LOADK     R7 K55       ; R7 := ".TabbedChatPanel"
 55 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 56 [-]: SETTABLE  R5 K54 R6    ; R5["mClipTemplate"] := R6
 57 [-]: GETTABLE  R6 R5 K54    ; R6 := R5["mClipTemplate"]
 58 [-]: SETTABLE  R5 K56 R6    ; R5["mClipPath"] := R6
 59 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 60 [-]: SETTABLE  R5 K57 R6    ; R5["mUserList"] := R6
 61 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 62 [-]: SETTABLE  R5 K58 R6    ; R5["mChatHistory"] := R6
 63 [-]: SETTABLE  R5 K59 K38   ; R5["mHasHyperlink"] := false
 64 [-]: SETTABLE  R5 K60 K3    ; R5["mRegularMessageCount"] := 0.000000
 65 [-]: SETTABLE  R5 K61 K3    ; R5["mMaxVisibleChatLines"] := 0.000000
 66 [-]: SETTABLE  R5 K62 K63   ; R5["mMaxChatHistory"] := 200.000000
 67 [-]: SETTABLE  R5 K64 K65   ; R5["mTextScroll"] := nil
 68 [-]: SETTABLE  R5 K66 K3    ; R5["mScrollBack"] := 0.000000
 69 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 70 [-]: SETTABLE  R5 K67 R6    ; R5["mCachedLines"] := R6
 71 [-]: SETTABLE  R5 K68 K3    ; R5["mChannelType"] := 0.000000
 72 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 73 [-]: SETTABLE  R5 K69 R6    ; R5["mLastMessageData"] := R6
 74 [-]: SETTABLE  R5 K70 K65   ; R5["mSpamBlockTime"] := nil
 75 [-]: SETTABLE  R5 K71 K65   ; R5["mStoredFocusIndex"] := nil
 76 [-]: SETTABLE  R5 K72 K65   ; R5["mPreviousPresState"] := nil
 77 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 78 [-]: SETTABLE  R5 K73 R6    ; R5["mAlphabetIndex"] := R6
 79 [-]: CLOSURE   R6 0         ; R6 := closure(Function #94.1)
 80 [-]: SETTABLE  R5 K74 R6    ; R5["ClearHistory"] := R6
 81 [-]: CLOSURE   R6 1         ; R6 := closure(Function #94.2)
 82 [-]: GETUPVAL  R0 U0        ; R0 := U0
 83 [-]: GETUPVAL  R0 U1        ; R0 := U1
 84 [-]: SETTABLE  R5 K75 R6    ; R5["PopulateFilterList"] := R6
 85 [-]: CLOSURE   R6 2         ; R6 := closure(Function #94.3)
 86 [-]: MOVE      R0 R2        ; R0 := R2
 87 [-]: GETUPVAL  R0 U2        ; R0 := U2
 88 [-]: GETUPVAL  R0 U1        ; R0 := U1
 89 [-]: SETTABLE  R5 K76 R6    ; R5["Initialize"] := R6
 90 [-]: CLOSURE   R6 3         ; R6 := closure(Function #94.4)
 91 [-]: SETTABLE  R5 K77 R6    ; R5["Update"] := R6
 92 [-]: CLOSURE   R6 4         ; R6 := closure(Function #94.5)
 93 [-]: GETUPVAL  R0 U3        ; R0 := U3
 94 [-]: GETUPVAL  R0 U1        ; R0 := U1
 95 [-]: GETUPVAL  R0 U0        ; R0 := U0
 96 [-]: GETUPVAL  R0 U4        ; R0 := U4
 97 [-]: GETUPVAL  R0 U5        ; R0 := U5
 98 [-]: GETUPVAL  R0 U6        ; R0 := U6
 99 [-]: GETUPVAL  R0 U7        ; R0 := U7
100 [-]: GETUPVAL  R0 U8        ; R0 := U8
101 [-]: GETUPVAL  R0 U9        ; R0 := U9
102 [-]: GETUPVAL  R0 U10       ; R0 := U10
103 [-]: GETUPVAL  R0 U11       ; R0 := U11
104 [-]: GETUPVAL  R0 U12       ; R0 := U12
105 [-]: GETUPVAL  R0 U13       ; R0 := U13
106 [-]: GETUPVAL  R0 U14       ; R0 := U14
107 [-]: GETUPVAL  R0 U15       ; R0 := U15
108 [-]: GETUPVAL  R0 U16       ; R0 := U16
109 [-]: GETUPVAL  R0 U17       ; R0 := U17
110 [-]: GETUPVAL  R0 U18       ; R0 := U18
111 [-]: GETUPVAL  R0 U19       ; R0 := U19
112 [-]: GETUPVAL  R0 U20       ; R0 := U20
113 [-]: GETUPVAL  R0 U21       ; R0 := U21
114 [-]: GETUPVAL  R0 U22       ; R0 := U22
115 [-]: GETUPVAL  R0 U23       ; R0 := U23
116 [-]: GETUPVAL  R0 U24       ; R0 := U24
117 [-]: GETUPVAL  R0 U25       ; R0 := U25
118 [-]: GETUPVAL  R0 U26       ; R0 := U26
119 [-]: GETUPVAL  R0 U27       ; R0 := U27
120 [-]: GETUPVAL  R0 U28       ; R0 := U28
121 [-]: GETUPVAL  R0 U29       ; R0 := U29
122 [-]: SETTABLE  R5 K78 R6    ; R5["OnMessageSent"] := R6
123 [-]: CLOSURE   R6 5         ; R6 := closure(Function #94.6)
124 [-]: GETUPVAL  R0 U1        ; R0 := U1
125 [-]: GETUPVAL  R0 U5        ; R0 := U5
126 [-]: SETTABLE  R5 K79 R6    ; R5["DisplaySpamMessage"] := R6
127 [-]: CLOSURE   R6 6         ; R6 := closure(Function #94.7)
128 [-]: SETTABLE  R5 K80 R6    ; R5["_makeUserEntry"] := R6
129 [-]: CLOSURE   R6 7         ; R6 := closure(Function #94.8)
130 [-]: GETUPVAL  R0 U19       ; R0 := U19
131 [-]: GETUPVAL  R0 U22       ; R0 := U22
132 [-]: SETTABLE  R5 K81 R6    ; R5["OnUserInChannelCommon"] := R6
133 [-]: CLOSURE   R6 8         ; R6 := closure(Function #94.9)
134 [-]: GETUPVAL  R0 U30       ; R0 := U30
135 [-]: GETUPVAL  R0 U31       ; R0 := U31
136 [-]: GETUPVAL  R0 U19       ; R0 := U19
137 [-]: GETUPVAL  R0 U22       ; R0 := U22
138 [-]: SETTABLE  R5 K82 R6    ; R5["PopulateUserList"] := R6
139 [-]: CLOSURE   R6 9         ; R6 := closure(Function #94.10)
140 [-]: SETTABLE  R5 K83 R6    ; R5["OnUserJoin"] := R6
141 [-]: CLOSURE   R6 10        ; R6 := closure(Function #94.11)
142 [-]: SETTABLE  R5 K84 R6    ; R5["OnUserLeave"] := R6
143 [-]: CLOSURE   R6 11        ; R6 := closure(Function #94.12)
144 [-]: GETUPVAL  R0 U32       ; R0 := U32
145 [-]: SETTABLE  R5 K85 R6    ; R5["_getLineVars"] := R6
146 [-]: CLOSURE   R6 12        ; R6 := closure(Function #94.13)
147 [-]: GETUPVAL  R0 U1        ; R0 := U1
148 [-]: GETUPVAL  R0 U0        ; R0 := U0
149 [-]: GETUPVAL  R0 U33       ; R0 := U33
150 [-]: GETUPVAL  R0 U34       ; R0 := U34
151 [-]: GETUPVAL  R0 U7        ; R0 := U7
152 [-]: SETTABLE  R5 K86 R6    ; R5["_makeLineEntry"] := R6
153 [-]: CLOSURE   R6 13        ; R6 := closure(Function #94.14)
154 [-]: GETUPVAL  R0 U35       ; R0 := U35
155 [-]: GETUPVAL  R0 U1        ; R0 := U1
156 [-]: GETUPVAL  R0 U33       ; R0 := U33
157 [-]: SETTABLE  R5 K87 R6    ; R5["RefreshText"] := R6
158 [-]: CLOSURE   R6 14        ; R6 := closure(Function #94.15)
159 [-]: SETTABLE  R5 K88 R6    ; R5["OnDeactivated"] := R6
160 [-]: CLOSURE   R6 15        ; R6 := closure(Function #94.16)
161 [-]: GETUPVAL  R0 U30       ; R0 := U30
162 [-]: SETTABLE  R5 K89 R6    ; R5["OnActivated"] := R6
163 [-]: CLOSURE   R6 16        ; R6 := closure(Function #94.17)
164 [-]: SETTABLE  R5 K90 R6    ; R5["_removeUserMsgs"] := R6
165 [-]: CLOSURE   R6 17        ; R6 := closure(Function #94.18)
166 [-]: GETUPVAL  R0 U30       ; R0 := U30
167 [-]: GETUPVAL  R0 U1        ; R0 := U1
168 [-]: GETUPVAL  R0 U35       ; R0 := U35
169 [-]: SETTABLE  R5 K91 R6    ; R5["_onLineAdded"] := R6
170 [-]: CLOSURE   R6 18        ; R6 := closure(Function #94.19)
171 [-]: SETTABLE  R5 K92 R6    ; R5["SystemMessage"] := R6
172 [-]: CLOSURE   R6 19        ; R6 := closure(Function #94.20)
173 [-]: SETTABLE  R5 K93 R6    ; R5["NotificationMessage"] := R6
174 [-]: CLOSURE   R6 20        ; R6 := closure(Function #94.21)
175 [-]: GETUPVAL  R0 U19       ; R0 := U19
176 [-]: GETUPVAL  R0 U36       ; R0 := U36
177 [-]: GETUPVAL  R0 U31       ; R0 := U31
178 [-]: SETTABLE  R5 K94 R6    ; R5["OnChatMessageReceived"] := R6
179 [-]: CLOSURE   R6 21        ; R6 := closure(Function #94.22)
180 [-]: SETTABLE  R5 K95 R6    ; R5["OnResizePress"] := R6
181 [-]: CLOSURE   R6 22        ; R6 := closure(Function #94.23)
182 [-]: SETTABLE  R5 K96 R6    ; R5["OnResizeRelease"] := R6
183 [-]: RETURN    R5 2         ; return R5
184 [-]: RETURN    R0 1         ; return 


; Function #94.1:
;
; Name:            
; Defined at line: 3124
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: SETTABLE  R0 K0 R1     ; R0["mChatHistory"] := R1
  3 [-]: SETTABLE  R0 K1 K2     ; R0["mHasHyperlink"] := false
  4 [-]: RETURN    R0 1         ; return 


; Function #94.2:
;
; Name:            
; Defined at line: 3129
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mFilterList"]
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x7c09c373]
  4 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
  5 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
  6 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  8 [-]: GETGLOBAL R2 K4        ; R2 := mProfileSettings
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 105
 11 [-]: JMP       105          ; PC := 105
 12 [-]: GETGLOBAL R1 K5        ; R1 := 0x3d106989
 13 [-]: LOADK     R2 K6        ; R2 := "Chat: Filters for "
 14 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mChannelName"]
 15 [-]: LOADK     R4 K8        ; R4 := ":"
 16 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
 17 [-]: CALL      R1 2 1       ; R1(R2)
 18 [-]: GETGLOBAL R1 K4        ; R1 := mProfileSettings
 19 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x9f238e3d]
 20 [-]: GETGLOBAL R3 K10       ; R3 := 0x7f5022cf
 21 [-]: GETTABLE  R3 R3 K11    ; R82 := R3[0x1a94c9cc]
 22 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mChannelName"]
 23 [-]: CONST     R5 1         ; R5 := 1.000000
 24 [-]: CONST     R6 1         ; R6 := 1.000000
 25 [-]: CALL      R3 4 0       ; R3,... := R3(R4,R5,R6)
 26 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 27 [-]: GETGLOBAL R2 K12       ; R2 := 0x83e41587
 28 [-]: LOADK     R3 K13       ; R3 := "["
 29 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
 30 [-]: SELF      R4 R4 K15    ; R5 := R4; R4 := R4[0x42b04007]
 31 [-]: GETUPVAL  R6 U0        ; R6 := U0
 32 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["APPEARANCE_STRING_LOC"]
 33 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 34 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 35 [-]: LOADK     R5 K8        ; R5 := ":"
 36 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 37 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 38 [-]: GETGLOBAL R3 K12       ; R3 := 0x83e41587
 39 [-]: LOADK     R4 K13       ; R4 := "["
 40 [-]: GETGLOBAL R5 K14       ; R5 := 0xae91e43b
 41 [-]: SELF      R5 R5 K15    ; R6 := R5; R5 := R5[0x42b04007]
 42 [-]: GETUPVAL  R7 U0        ; R7 := U0
 43 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["MOD_CONFIG_STRING_PREFIX"]
 44 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 45 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 46 [-]: LOADK     R6 K8        ; R6 := ":"
 47 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 48 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 49 [-]: GETGLOBAL R4 K12       ; R4 := 0x83e41587
 50 [-]: LOADK     R5 K13       ; R5 := "["
 51 [-]: GETGLOBAL R6 K14       ; R6 := 0xae91e43b
 52 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0x42b04007]
 53 [-]: GETUPVAL  R8 U0        ; R8 := U0
 54 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["SHAWZIN_STRING_LOC"]
 55 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 56 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 57 [-]: LOADK     R7 K8        ; R7 := ":"
 58 [-]: CONCAT    R5 R5 R7     ; R5 := R5 .. R6 .. R7
 59 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 60 [-]: CONST     R5 1         ; R5 := 1.000000
 61 [-]: LEN       R6 R1        ; R6 := # R1
 62 [-]: CONST     R7 1         ; R7 := 1.000000
 63 [-]: FORPREP   R5 104       ; R5 -= R7; PC := 104
 64 [-]: GETGLOBAL R9 K12       ; R9 := 0x83e41587
 65 [-]: GETTABLE  R10 R1 R8    ; R10 := R1[R8]
 66 [-]: GETTABLE  R10 R10 K19  ; R10 := R10["filter"]
 67 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 68 [-]: MOVE      R10 R9       ; R10 := R9
 69 [-]: EQ        0 R10 K20    ; if R10 ~= "[ff-" then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: MOVE      R10 R2       ; R10 := R2
 72 [-]: JMP       80           ; PC := 80
 73 [-]: EQ        0 R10 K21    ; if R10 ~= "[mod-" then PC := 77
 74 [-]: JMP       77           ; PC := 77
 75 [-]: MOVE      R10 R3       ; R10 := R3
 76 [-]: JMP       80           ; PC := 80
 77 [-]: EQ        0 R10 K22    ; if R10 ~= "[song-" then PC := 80
 78 [-]: JMP       80           ; PC := 80
 79 [-]: MOVE      R10 R4       ; R10 := R4
 80 [-]: NEWTABLE  R11 0 3      ; R11 := {}
 81 [-]: SETTABLE  R11 K23 R10  ; R11["Label"] := R10
 82 [-]: SETTABLE  R11 K24 R9   ; R11["Filter"] := R9
 83 [-]: GETTABLE  R12 R1 R8    ; R12 := R1[R8]
 84 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["include"]
 85 [-]: SETTABLE  R11 K25 R12  ; R11["Include"] := R12
 86 [-]: GETGLOBAL R12 K0       ; R12 := mWindow
 87 [-]: GETTABLE  R12 R12 K1   ; R12 := R12["mFilterList"]
 88 [-]: SELF      R12 R12 K27  ; R13 := R12; R12 := R12[0xbad4316f]
 89 [-]: MOVE      R14 R11      ; R14 := R11
 90 [-]: OP_LOADBOOL R15 1 0      ; R15 := true
 91 [-]: CALL      R12 4 1      ; R12(R13,R14,R15)
 92 [-]: GETGLOBAL R12 K5       ; R12 := 0x3d106989
 93 [-]: LOADK     R13 K28      ; R13 := "Filter: "
 94 [-]: GETTABLE  R14 R11 K24  ; R14 := R11["Filter"]
 95 [-]: LOADK     R15 K29      ; R15 := ", "
 96 [-]: GETUPVAL  R16 U1       ; R16 := U1
 97 [-]: GETTABLE  R16 R16 K30  ; R82 := R16[0x06d055f9]
 98 [-]: GETTABLE  R17 R11 K25  ; R17 := R11["Include"]
 99 [-]: LOADK     R18 K25      ; R18 := "Include"
100 [-]: LOADK     R19 K31      ; R19 := "Exclude"
101 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
102 [-]: CONCAT    R13 R13 R16  ; R13 := R13 .. R14 .. R15 .. R16
103 [-]: CALL      R12 2 1      ; R12(R13)
104 [-]: FORLOOP   R5 64        ; R5 += R7; if R5 <= R6 then begin PC := 64; R8 := R5 end
105 [-]: GETGLOBAL R12 K0       ; R12 := mWindow
106 [-]: GETTABLE  R12 R12 K1   ; R12 := R12["mFilterList"]
107 [-]: SELF      R12 R12 K32  ; R13 := R12; R12 := R12[0x71e9ac81]
108 [-]: LOADNIL   R14 R15      ; R14 := R15 := nil
109 [-]: OP_LOADBOOL R16 1 0      ; R16 := true
110 [-]: CALL      R12 5 1      ; R12(R13,R14,R15,R16)
111 [-]: RETURN    R0 1         ; return 


; Function #94.3:
;
; Name:            
; Defined at line: 3159
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: SETTABLE  R0 K0 R3     ; R0["mChannelType"] := R3
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETTABLE  R3 R3 K2     ; R82 := R3[0x3b3ea08c]
  5 [-]: GETGLOBAL R4 K3        ; R4 := 0xae91e43b
  6 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mClipPath"]
  7 [-]: LOADK     R6 K5        ; R6 := ".ScrollBar"
  8 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
  9 [-]: CONST     R6 100       ; R6 := 100.000000
 10 [-]: CONST     R7 0         ; R7 := 0.500000
 11 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 12 [-]: SETTABLE  R0 K1 R3     ; R0["mTextScroll"] := R3
 13 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 14 [-]: SETTABLE  R3 K6 K7     ; R3["mInitialY"] := 0.000000
 15 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 16 [-]: GETGLOBAL R4 K9        ; R4 := mWindow
 17 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["mInitChatPanelScrollXScale"]
 18 [-]: TEST      R4 1         ; if R4 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: CONST     R4 1         ; R4 := 1.000000
 21 [-]: SETTABLE  R3 K8 R4     ; R3["mInitialHitzoneScaleX"] := R4
 22 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 23 [-]: CLOSURE   R4 0         ; R4 := closure(Function #94.3.1)
 24 [-]: MOVE      R0 R0        ; R0 := R0
 25 [-]: GETUPVAL  R0 U2        ; R0 := U2
 26 [-]: SETTABLE  R3 K11 R4    ; R3["mScrollValueChangedCallback"] := R4
 27 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 28 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mTextScroll"]
 29 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["StartDrag"]
 30 [-]: SETTABLE  R3 K12 R4    ; R3["_TextScroll_StartDrag"] := R4
 31 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 32 [-]: CLOSURE   R4 1         ; R4 := closure(Function #94.3.2)
 33 [-]: SETTABLE  R3 K13 R4    ; R3["StartDrag"] := R4
 34 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 35 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mTextScroll"]
 36 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["StopDrag"]
 37 [-]: SETTABLE  R3 K14 R4    ; R3["_TextScroll_StopDrag"] := R4
 38 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 39 [-]: CLOSURE   R4 2         ; R4 := closure(Function #94.3.3)
 40 [-]: SETTABLE  R3 K15 R4    ; R3["StopDrag"] := R4
 41 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 42 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mTextScroll"]
 43 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["ClickScrollBar"]
 44 [-]: SETTABLE  R3 K16 R4    ; R3["_TextScroll_ClickScrollBar"] := R4
 45 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 46 [-]: CLOSURE   R4 3         ; R4 := closure(Function #94.3.4)
 47 [-]: SETTABLE  R3 K17 R4    ; R3["ClickScrollBar"] := R4
 48 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 49 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0x557b7601]
 50 [-]: GETGLOBAL R5 K19       ; R5 := 0x34291f5c
 51 [-]: GETTABLE  R5 R5 K20    ; R82 := R5[0x1467d5f4]
 52 [-]: CALL      R5 1 2       ; R5 := R5()
 53 [-]: NOT       R5 R5        ; R5 := not R5
 54 [-]: CALL      R3 3 1       ; R3(R4,R5)
 55 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 56 [-]: SELF      R3 R3 K21    ; R4 := R3; R3 := R3[0xe91c55ec]
 57 [-]: CALL      R3 2 1       ; R3(R4)
 58 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 59 [-]: SELF      R3 R3 K22    ; R4 := R3; R3 := R3[0x687ae094]
 60 [-]: CALL      R3 2 1       ; R3(R4)
 61 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 62 [-]: SELF      R3 R3 K23    ; R4 := R3; R3 := R3[0x16138b0a]
 63 [-]: CALL      R3 2 1       ; R3(R4)
 64 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
 65 [-]: SELF      R3 R3 K24    ; R4 := R3; R3 := R3[0x44aa79ac]
 66 [-]: CONST     R5 1         ; R5 := 1.000000
 67 [-]: CALL      R3 3 1       ; R3(R4,R5)
 68 [-]: RETURN    R0 1         ; return 


; Function #94.3.1:
;
; Name:            
; Defined at line: 3168
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mChatHistory"]
  3 [-]: LEN       R2 R2        ; R2 := # R2
  4 [-]: GETUPVAL  R3 U0        ; R3 := U0
  5 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mMaxVisibleChatLines"]
  6 [-]: SUB       R2 R2 R3     ; R2 := R2 - R3
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0x42dcc9f5
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: GETTABLE  R4 R4 K3     ; R82 := R4[0x74a11ec6]
 10 [-]: SUB       R5 K4 R0     ; R5 := 1.000000 - R0
 11 [-]: MUL       R5 R2 R5     ; R5 := R2 * R5
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: CONST     R5 0         ; R5 := 0.000000
 14 [-]: MOVE      R6 R2        ; R6 := R2
 15 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 16 [-]: GETUPVAL  R4 U0        ; R4 := U0
 17 [-]: SETTABLE  R4 K5 R3     ; R4["mScrollBack"] := R3
 18 [-]: GETUPVAL  R4 U0        ; R4 := U0
 19 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["mIsActive"]
 20 [-]: TEST      R4 0         ; if not R4 then PC := 25
 21 [-]: JMP       25           ; PC := 25
 22 [-]: GETUPVAL  R4 U0        ; R4 := U0
 23 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x3bd10f9e]
 24 [-]: CALL      R4 2 1       ; R4(R5)
 25 [-]: RETURN    R0 1         ; return 


; Function #94.3.2:
;
; Name:            
; Defined at line: 3179
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x8b75da5a]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 10 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mTextScroll"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETTABLE  R2 R1 K3     ; R2 := R1["mTextScroll"]
 15 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x49b9b540]
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: RETURN    R0 1         ; return 


; Function #94.3.3:
;
; Name:            
; Defined at line: 3187
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x8b75da5a]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 10 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mTextScroll"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETTABLE  R2 R1 K3     ; R2 := R1["mTextScroll"]
 15 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xdf2af2c8]
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: RETURN    R0 1         ; return 


; Function #94.3.4:
;
; Name:            
; Defined at line: 3195
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x8b75da5a]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 10 [-]: GETTABLE  R3 R1 K3     ; R3 := R1["mTextScroll"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 17
 13 [-]: JMP       17           ; PC := 17
 14 [-]: GETTABLE  R2 R1 K3     ; R2 := R1["mTextScroll"]
 15 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xc7495518]
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: RETURN    R0 1         ; return 


; Function #94.4:
;
; Name:            
; Defined at line: 3208
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTextScroll"]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mTextScroll"]
  7 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xfaa69527]
  8 [-]: MOVE      R4 R1        ; R4 := R1
  9 [-]: CALL      R2 3 1       ; R2(R3,R4)
 10 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["queuedBroadcastMessage"]
 11 [-]: TEST      R2 0         ; if not R2 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: SELF      R2 R0 K4     ; R3 := R0; R2 := R0[0x566ff49e]
 14 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["queuedBroadcastMessage"]
 15 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["MESSAGE_TYPE_BROADCAST"]
 16 [-]: LOADK     R6 K6        ; R6 := ""
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: SETTABLE  R0 K3 K7     ; R0["queuedBroadcastMessage"] := nil
 19 [-]: RETURN    R0 1         ; return 


; Function #94.5:
;
; Name:            
; Defined at line: 3218
; #Upvalues:       29
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  68

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x76ea806b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x3f3ae64c]
  3 [-]: CONST     R4 0         ; R4 := 0.000000
  4 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  6 [-]: MOVE      R4 R2        ; R4 := R2
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: TEST      R3 1         ; if R3 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mIsChatEnabled"]
 11 [-]: TEST      R3 1         ; if R3 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R3 U0        ; R3 := U0
 15 [-]: MOVE      R4 R1        ; R4 := R1
 16 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 17 [-]: CALL      R3 3 4       ; R3,R4,R5 := R3(R4,R5)
 18 [-]: EQ        1 R3 K4      ; if R3 == "" then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETGLOBAL R6 K2        ; R6 := 0x7b998233
 21 [-]: MOVE      R7 R3        ; R7 := R3
 22 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 23 [-]: TEST      R6 0         ; if not R6 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: RETURN    R0 1         ; return 
 26 [-]: GETGLOBAL R6 K5        ; R6 := 0x7f5022cf
 27 [-]: GETTABLE  R6 R6 K6     ; R82 := R6[0x41e2ae25]
 28 [-]: MOVE      R7 R3        ; R7 := R3
 29 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 30 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["mParent"]
 31 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["mInputPanel"]
 32 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["mMaxMsgLength"]
 33 [-]: LT        0 R7 R6      ; if R7 >= R6 then PC := 77
 34 [-]: JMP       77           ; PC := 77
 35 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["mParent"]
 36 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mInputPanel"]
 37 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["mMaxMsgLength"]
 38 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["mParent"]
 39 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["mInputPanel"]
 40 [-]: GETTABLE  R7 R7 K10    ; R7 := R7["MAX_MSG_LIMIT"]
 41 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 53
 42 [-]: JMP       53           ; PC := 53
 43 [-]: SELF      R6 R0 K11    ; R7 := R0; R6 := R0[0x566ff49e]
 44 [-]: GETGLOBAL R8 K12       ; R8 := 0xae91e43b
 45 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0x42b04007]
 46 [-]: LOADK     R10 K14      ; R10 := "/Lotus/Language/Menu/Chat_ExceededMsgIRCLengthLimitError"
 47 [-]: OP_LOADBOOL R11 0 0      ; R11 := false
 48 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 49 [-]: GETTABLE  R9 R0 K15    ; R9 := R0["MESSAGE_TYPE_SYSTEM"]
 50 [-]: LOADK     R10 K4       ; R10 := ""
 51 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 52 [-]: JMP       67           ; PC := 67
 53 [-]: SELF      R6 R0 K11    ; R7 := R0; R6 := R0[0x566ff49e]
 54 [-]: GETGLOBAL R8 K12       ; R8 := 0xae91e43b
 55 [-]: SELF      R8 R8 K13    ; R9 := R8; R8 := R8[0x42b04007]
 56 [-]: LOADK     R10 K16      ; R10 := "/Lotus/Language/Menu/Chat_ExceededMsgLengthLimitError"
 57 [-]: OP_LOADBOOL R11 0 0      ; R11 := false
 58 [-]: NEWTABLE  R12 0 1      ; R12 := {}
 59 [-]: GETTABLE  R13 R0 K7    ; R13 := R0["mParent"]
 60 [-]: GETTABLE  R13 R13 K8   ; R13 := R13["mInputPanel"]
 61 [-]: GETTABLE  R13 R13 K9   ; R13 := R13["mMaxMsgLength"]
 62 [-]: SETTABLE  R12 K17 R13  ; R12["LIMIT"] := R13
 63 [-]: CALL      R8 5 2       ; R8 := R8(R9,R10,R11,R12)
 64 [-]: GETTABLE  R9 R0 K15    ; R9 := R0["MESSAGE_TYPE_SYSTEM"]
 65 [-]: LOADK     R10 K4       ; R10 := ""
 66 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 67 [-]: GETUPVAL  R6 U1        ; R6 := U1
 68 [-]: GETTABLE  R6 R6 K18    ; R82 := R6[0x659d451f]
 69 [-]: GETGLOBAL R7 K19       ; R7 := 0x0032441c
 70 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["UISound_Error"]
 71 [-]: CALL      R6 2 1       ; R6(R7)
 72 [-]: GETTABLE  R6 R0 K7     ; R6 := R0["mParent"]
 73 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["mInputPanel"]
 74 [-]: SETTABLE  R6 K21 K22   ; R6["CharLimitFlashTime"] := 2.500000
 75 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 76 [-]: RETURN    R6 2         ; return R6
 77 [-]: CLOSURE   R6 0         ; R6 := closure(Function #94.5.1)
 78 [-]: CLOSURE   R7 1         ; R7 := closure(Function #94.5.2)
 79 [-]: GETUPVAL  R0 U2        ; R0 := U2
 80 [-]: CLOSURE   R8 2         ; R8 := closure(Function #94.5.3)
 81 [-]: GETUPVAL  R0 U3        ; R0 := U3
 82 [-]: MOVE      R0 R0        ; R0 := R0
 83 [-]: GETUPVAL  R0 U4        ; R0 := U4
 84 [-]: GETUPVAL  R0 U1        ; R0 := U1
 85 [-]: GETUPVAL  R9 U5        ; R9 := U5
 86 [-]: MOVE      R10 R3       ; R10 := R3
 87 [-]: CALL      R9 2 1       ; R9(R10)
 88 [-]: GETGLOBAL R9 K23       ; R9 := 0x0a8f62a7
 89 [-]: CALL      R9 1 2       ; R9 := R9()
 90 [-]: CONST     R10 1        ; R10 := 1.000000
 91 [-]: LEN       R11 R3       ; R11 := # R3
 92 [-]: LT        0 R10 R11    ; if R10 >= R11 then PC := 1213
 93 [-]: JMP       1213         ; PC := 1213
 94 [-]: GETGLOBAL R11 K5       ; R11 := 0x7f5022cf
 95 [-]: GETTABLE  R11 R11 K24  ; R82 := R11[0xa5c556b9]
 96 [-]: MOVE      R12 R3       ; R12 := R3
 97 [-]: LOADK     R13 K25      ; R13 := "%[[^%]%[]*%]"
 98 [-]: MOVE      R14 R10      ; R14 := R10
 99 [-]: CALL      R11 4 3      ; R11,R12 := R11(R12,R13,R14)
100 [-]: TEST      R11 0        ; if not R11 then PC := 1213
101 [-]: JMP       1213         ; PC := 1213
102 [-]: GETGLOBAL R13 K5       ; R13 := 0x7f5022cf
103 [-]: GETTABLE  R13 R13 K26  ; R82 := R13[0x1a94c9cc]
104 [-]: MOVE      R14 R3       ; R14 := R3
105 [-]: ADD       R15 R11 K27  ; R15 := R11 + 1.000000
106 [-]: SUB       R16 R12 K27  ; R16 := R12 - 1.000000
107 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
108 [-]: GETGLOBAL R14 K28      ; R14 := 0x83e41587
109 [-]: MOVE      R15 R13      ; R15 := R13
110 [-]: CALL      R14 2 2      ; R14 := R14(R15)
111 [-]: CONST     R15 10       ; R15 := 10.000000
112 [-]: GETGLOBAL R16 K2       ; R16 := 0x7b998233
113 [-]: GETUPVAL  R17 U6       ; R17 := U6
114 [-]: CALL      R16 2 2      ; R16 := R16(R17)
115 [-]: TEST      R16 1        ; if R16 then PC := 122
116 [-]: JMP       122          ; PC := 122
117 [-]: GETUPVAL  R16 U6       ; R16 := U6
118 [-]: SELF      R16 R16 K30  ; R17 := R16; R16 := R16[0xeae98f40]
119 [-]: MOVE      R18 R14      ; R18 := R14
120 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
121 [-]: MOVE      R15 R16      ; R15 := R16
122 [-]: GETUPVAL  R16 U2       ; R16 := U2
123 [-]: GETTABLE  R16 R16 K31  ; R16 := R16["OmegaSearchable"]
124 [-]: EQ        0 R14 R16    ; if R14 ~= R16 then PC := 238
125 [-]: JMP       238          ; PC := 238
126 [-]: GETUPVAL  R16 U7       ; R16 := U7
127 [-]: LOADK     R17 K32      ; R17 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
128 [-]: NEWTABLE  R18 0 1      ; R18 := {}
129 [-]: LOADK     R19 K34      ; R19 := "["
130 [-]: MOVE      R20 R14      ; R20 := R14
131 [-]: LOADK     R21 K35      ; R21 := "]"
132 [-]: CONCAT    R19 R19 R21  ; R19 := R19 .. R20 .. R21
133 [-]: SETTABLE  R18 K33 R19  ; R18[0x1e63ac7a] := R19
134 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
135 [-]: TEST      R16 0        ; if not R16 then PC := 138
136 [-]: JMP       138          ; PC := 138
137 [-]: RETURN    R0 1         ; return 
138 [-]: GETUPVAL  R16 U8       ; R16 := U8
139 [-]: GETTABLE  R16 R16 K36  ; R82 := R16[0xbe87a400]
140 [-]: CALL      R16 1 2      ; R16 := R16()
141 [-]: LEN       R16 R16      ; R16 := # R16
142 [-]: LT        0 K37 R16    ; if 0.000000 >= R16 then PC := 227
143 [-]: JMP       227          ; PC := 227
144 [-]: MOVE      R16 R6       ; R16 := R6
145 [-]: GETUPVAL  R17 U9       ; R17 := U9
146 [-]: GETTABLE  R17 R17 K38  ; R17 := R17["OmegaLinks"]
147 [-]: CALL      R16 2 2      ; R16 := R16(R17)
148 [-]: GETUPVAL  R17 U2       ; R17 := U2
149 [-]: GETTABLE  R17 R17 K39  ; R17 := R17["OMEGA_MAX_LINKS"]
150 [-]: LE        0 R17 R16    ; if R17 > R16 then PC := 167
151 [-]: JMP       167          ; PC := 167
152 [-]: SELF      R16 R0 K11   ; R17 := R0; R16 := R0[0x566ff49e]
153 [-]: GETGLOBAL R18 K12      ; R18 := 0xae91e43b
154 [-]: SELF      R18 R18 K13  ; R19 := R18; R18 := R18[0x42b04007]
155 [-]: LOADK     R20 K40      ; R20 := "/Lotus/Language/Menu/Chat_ExceededOmegaLimitError"
156 [-]: OP_LOADBOOL R21 0 0      ; R21 := false
157 [-]: NEWTABLE  R22 0 1      ; R22 := {}
158 [-]: GETUPVAL  R23 U2       ; R23 := U2
159 [-]: GETTABLE  R23 R23 K39  ; R23 := R23["OMEGA_MAX_LINKS"]
160 [-]: SETTABLE  R22 K17 R23  ; R22["LIMIT"] := R23
161 [-]: CALL      R18 5 2      ; R18 := R18(R19,R20,R21,R22)
162 [-]: GETTABLE  R19 R0 K15   ; R19 := R0["MESSAGE_TYPE_SYSTEM"]
163 [-]: LOADK     R20 K4       ; R20 := ""
164 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
165 [-]: OP_LOADBOOL R16 1 0      ; R16 := true
166 [-]: RETURN    R16 2        ; return R16
167 [-]: GETGLOBAL R16 K2       ; R16 := 0x7b998233
168 [-]: GETGLOBAL R17 K41      ; R17 := _T
169 [-]: GETTABLE  R17 R17 K42  ; R17 := R17["OpenScreen"]
170 [-]: CALL      R16 2 2      ; R16 := R16(R17)
171 [-]: TEST      R16 1        ; if R16 then PC := 1209
172 [-]: JMP       1209         ; PC := 1209
173 [-]: GETGLOBAL R16 K41      ; R16 := _T
174 [-]: GETTABLE  R16 R16 K44  ; R82 := R16[0x67f7bf32]
175 [-]: LOADK     R17 K45      ; R17 := "ItemBrowsing"
176 [-]: CALL      R16 2 2      ; R16 := R16(R17)
177 [-]: SETGLOBALHASH R16 K43      ; mChildMovie := R16
178 [-]: GETGLOBAL R16 K2       ; R16 := 0x7b998233
179 [-]: GETGLOBAL R17 K43      ; R17 := mChildMovie
180 [-]: CALL      R16 2 2      ; R16 := R16(R17)
181 [-]: TEST      R16 1        ; if R16 then PC := 1209
182 [-]: JMP       1209         ; PC := 1209
183 [-]: OP_LOADBOOL R16 1 0      ; R16 := true
184 [-]: SETGLOBALHASH R16 K46      ; mInputBlocked := R16
185 [-]: GETUPVAL  R16 U9       ; R16 := U9
186 [-]: SETTABLE  R16 K47 R3   ; R16["Msg"] := R3
187 [-]: GETUPVAL  R16 U9       ; R16 := U9
188 [-]: SETTABLE  R16 K48 R13  ; R16["CurrItemString"] := R13
189 [-]: GETGLOBAL R16 K43      ; R16 := mChildMovie
190 [-]: SELF      R16 R16 K49  ; R17 := R16; R16 := R16[0xe4162eed]
191 [-]: LOADK     R18 K50      ; R18 := "SetTitle"
192 [-]: GETGLOBAL R19 K12      ; R19 := 0xae91e43b
193 [-]: SELF      R19 R19 K13  ; R20 := R19; R19 := R19[0x42b04007]
194 [-]: LOADK     R21 K51      ; R21 := "/Lotus/Language/Menu/OmegaLink_Title"
195 [-]: OP_LOADBOOL R22 0 0      ; R22 := false
196 [-]: CALL      R19 4 0      ; R19,... := R19(R20,R21,R22)
197 [-]: CALL      R16 0 1      ; R16(R17,...)
198 [-]: GETGLOBAL R16 K43      ; R16 := mChildMovie
199 [-]: SELF      R16 R16 K49  ; R17 := R16; R16 := R16[0xe4162eed]
200 [-]: LOADK     R18 K52      ; R18 := "SetRequiredSelections"
201 [-]: CONST     R19 1        ; R19 := 1.000000
202 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
203 [-]: GETGLOBAL R16 K41      ; R16 := _T
204 [-]: CLOSURE   R17 3        ; R17 := closure(Function #94.5.4)
205 [-]: GETUPVAL  R0 U10       ; R0 := U10
206 [-]: SETTABLE  R16 K53 R17  ; R16["OmegaSelectionDone"] := R17
207 [-]: GETGLOBAL R16 K43      ; R16 := mChildMovie
208 [-]: SELF      R16 R16 K49  ; R17 := R16; R16 := R16[0xe4162eed]
209 [-]: LOADK     R18 K54      ; R18 := "SetCallBack"
210 [-]: LOADK     R19 K53      ; R19 := "OmegaSelectionDone"
211 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
212 [-]: GETGLOBAL R16 K41      ; R16 := _T
213 [-]: CLOSURE   R17 4        ; R17 := closure(Function #94.5.5)
214 [-]: GETUPVAL  R0 U8        ; R0 := U8
215 [-]: SETTABLE  R16 K55 R17  ; R16["GetOmegaCards"] := R17
216 [-]: GETGLOBAL R16 K43      ; R16 := mChildMovie
217 [-]: SELF      R16 R16 K49  ; R17 := R16; R16 := R16[0xe4162eed]
218 [-]: LOADK     R18 K56      ; R18 := "SetElementsFunction"
219 [-]: LOADK     R19 K55      ; R19 := "GetOmegaCards"
220 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
221 [-]: GETUPVAL  R16 U10      ; R16 := U10
222 [-]: OP_LOADBOOL R17 1 0      ; R17 := true
223 [-]: CALL      R16 2 1      ; R16(R17)
224 [-]: OP_LOADBOOL R16 1 0      ; R16 := true
225 [-]: RETURN    R16 2        ; return R16
226 [-]: JMP       1209         ; PC := 1209
227 [-]: GETGLOBAL R16 K12      ; R16 := 0xae91e43b
228 [-]: SELF      R16 R16 K13  ; R17 := R16; R16 := R16[0x42b04007]
229 [-]: LOADK     R18 K57      ; R18 := "/Lotus/Language/Menu/Omega_NoneOwned"
230 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
231 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
232 [-]: GETUPVAL  R17 U1       ; R17 := U1
233 [-]: GETTABLE  R17 R17 K58  ; R82 := R17[0xe0cba3ca]
234 [-]: MOVE      R18 R16      ; R18 := R16
235 [-]: CALL      R17 2 1      ; R17(R18)
236 [-]: RETURN    R0 1         ; return 
237 [-]: JMP       1209         ; PC := 1209
238 [-]: GETGLOBAL R17 K2       ; R17 := 0x7b998233
239 [-]: GETUPVAL  R18 U6       ; R18 := U6
240 [-]: CALL      R17 2 2      ; R17 := R17(R18)
241 [-]: TEST      R17 1        ; if R17 then PC := 335
242 [-]: JMP       335          ; PC := 335
243 [-]: GETUPVAL  R17 U6       ; R17 := U6
244 [-]: SELF      R17 R17 K59  ; R18 := R17; R17 := R17[0x60b26101]
245 [-]: MOVE      R19 R14      ; R19 := R14
246 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
247 [-]: TEST      R17 0        ; if not R17 then PC := 335
248 [-]: JMP       335          ; PC := 335
249 [-]: MOVE      R17 R6       ; R17 := R6
250 [-]: GETUPVAL  R18 U9       ; R18 := U9
251 [-]: GETTABLE  R18 R18 K38  ; R18 := R18["OmegaLinks"]
252 [-]: CALL      R17 2 2      ; R17 := R17(R18)
253 [-]: GETUPVAL  R18 U2       ; R18 := U2
254 [-]: GETTABLE  R18 R18 K39  ; R18 := R18["OMEGA_MAX_LINKS"]
255 [-]: LE        0 R18 R17    ; if R18 > R17 then PC := 272
256 [-]: JMP       272          ; PC := 272
257 [-]: SELF      R17 R0 K11   ; R18 := R0; R17 := R0[0x566ff49e]
258 [-]: GETGLOBAL R19 K12      ; R19 := 0xae91e43b
259 [-]: SELF      R19 R19 K13  ; R20 := R19; R19 := R19[0x42b04007]
260 [-]: LOADK     R21 K40      ; R21 := "/Lotus/Language/Menu/Chat_ExceededOmegaLimitError"
261 [-]: OP_LOADBOOL R22 0 0      ; R22 := false
262 [-]: NEWTABLE  R23 0 1      ; R23 := {}
263 [-]: GETUPVAL  R24 U2       ; R24 := U2
264 [-]: GETTABLE  R24 R24 K39  ; R24 := R24["OMEGA_MAX_LINKS"]
265 [-]: SETTABLE  R23 K17 R24  ; R23["LIMIT"] := R24
266 [-]: CALL      R19 5 2      ; R19 := R19(R20,R21,R22,R23)
267 [-]: GETTABLE  R20 R0 K15   ; R20 := R0["MESSAGE_TYPE_SYSTEM"]
268 [-]: LOADK     R21 K4       ; R21 := ""
269 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
270 [-]: OP_LOADBOOL R17 1 0      ; R17 := true
271 [-]: RETURN    R17 2        ; return R17
272 [-]: GETUPVAL  R17 U8       ; R17 := U8
273 [-]: GETTABLE  R17 R17 K36  ; R82 := R17[0xbe87a400]
274 [-]: CALL      R17 1 2      ; R17 := R17()
275 [-]: LOADNIL   R18 R18      ; R18 := nil
276 [-]: GETGLOBAL R19 K60      ; R19 := 0xc8802016
277 [-]: MOVE      R20 R17      ; R20 := R17
278 [-]: CALL      R19 2 4      ; R19,R20,R21 := R19(R20)
279 [-]: JMP       320          ; PC := 320
280 [-]: GETGLOBAL R24 K61      ; R24 := 0xb009bbc6
281 [-]: GETTABLE  R25 R23 K62  ; R25 := R23["Card"]
282 [-]: GETTABLE  R25 R25 K63  ; R25 := R25["mUpgradeItemType"]
283 [-]: CALL      R24 2 2      ; R24 := R24(R25)
284 [-]: GETGLOBAL R25 K2       ; R25 := 0x7b998233
285 [-]: MOVE      R26 R24      ; R26 := R24
286 [-]: CALL      R25 2 2      ; R25 := R25(R26)
287 [-]: TEST      R25 1        ; if R25 then PC := 318
288 [-]: JMP       318          ; PC := 318
289 [-]: GETTABLE  R25 R23 K62  ; R25 := R23["Card"]
290 [-]: GETTABLE  R25 R25 K64  ; R25 := R25["mUpgrade"]
291 [-]: GETTABLE  R25 R25 K65  ; R25 := R25["mUpgradeFingerprint"]
292 [-]: SELF      R26 R24 K66  ; R27 := R24; R26 := R24[0x0d4a92a7]
293 [-]: MOVE      R28 R25      ; R28 := R25
294 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
295 [-]: TEST      R26 0        ; if not R26 then PC := 318
296 [-]: JMP       318          ; PC := 318
297 [-]: GETGLOBAL R26 K5       ; R26 := 0x7f5022cf
298 [-]: GETTABLE  R26 R26 K67  ; R82 := R26[0x04981ab3]
299 [-]: SELF      R27 R24 K68  ; R28 := R24; R27 := R24[0x73f9dc2f]
300 [-]: MOVE      R29 R25      ; R29 := R25
301 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
302 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
303 [-]: GETGLOBAL R27 K5       ; R27 := 0x7f5022cf
304 [-]: GETTABLE  R27 R27 K67  ; R82 := R27[0x04981ab3]
305 [-]: MOVE      R28 R13      ; R28 := R13
306 [-]: CALL      R27 2 2      ; R27 := R27(R28)
307 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 318
308 [-]: JMP       318          ; PC := 318
309 [-]: LOADK     R26 K69      ; R26 := "OMG-"
310 [-]: SELF      R27 R24 K70  ; R28 := R24; R27 := R24[0xe223e2b1]
311 [-]: CALL      R27 2 2      ; R27 := R27(R28)
312 [-]: LOADK     R28 K71      ; R28 := ":"
313 [-]: SELF      R29 R24 K72  ; R30 := R24; R29 := R24[0xb8f1df18]
314 [-]: MOVE      R31 R25      ; R31 := R25
315 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
316 [-]: CONCAT    R18 R26 R29  ; R18 := R26 .. R27 .. R28 .. R29
317 [-]: JMP       322          ; PC := 322
318 [-]: GETGLOBAL R26 K73      ; R26 := 0xce225efa
319 [-]: CALL      R26 1 1      ; R26()
320 [-]: TFORLOOP  R19 2        ; R22,R23 :=  R19(R20,R21); if R22 ~= nil then begin PC = 280; R21 := R22 end
321 [-]: JMP       280          ; PC := 280
322 [-]: EQ        1 R18 K74    ; if R18 == nil then PC := 333
323 [-]: JMP       333          ; PC := 333
324 [-]: GETUPVAL  R26 U11      ; R26 := U11
325 [-]: MOVE      R27 R3       ; R27 := R3
326 [-]: MOVE      R28 R13      ; R28 := R13
327 [-]: MOVE      R29 R18      ; R29 := R18
328 [-]: GETUPVAL  R30 U9       ; R30 := U9
329 [-]: GETTABLE  R30 R30 K38  ; R30 := R30["OmegaLinks"]
330 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
331 [-]: RETURN    R0 1         ; return 
332 [-]: JMP       1209         ; PC := 1209
333 [-]: ADD       R10 R12 K27  ; R10 := R12 + 1.000000
334 [-]: JMP       1209         ; PC := 1209
335 [-]: GETUPVAL  R26 U2       ; R26 := U2
336 [-]: GETTABLE  R26 R26 K75  ; R26 := R26["StepSequencerSearchable"]
337 [-]: EQ        0 R14 R26    ; if R14 ~= R26 then PC := 454
338 [-]: JMP       454          ; PC := 454
339 [-]: GETUPVAL  R26 U7       ; R26 := U7
340 [-]: LOADK     R27 K32      ; R27 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
341 [-]: NEWTABLE  R28 0 1      ; R28 := {}
342 [-]: LOADK     R29 K34      ; R29 := "["
343 [-]: MOVE      R30 R14      ; R30 := R14
344 [-]: LOADK     R31 K35      ; R31 := "]"
345 [-]: CONCAT    R29 R29 R31  ; R29 := R29 .. R30 .. R31
346 [-]: SETTABLE  R28 K33 R29  ; R28[0x1e63ac7a] := R29
347 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
348 [-]: TEST      R26 0        ; if not R26 then PC := 351
349 [-]: JMP       351          ; PC := 351
350 [-]: RETURN    R0 1         ; return 
351 [-]: GETUPVAL  R26 U8       ; R26 := U8
352 [-]: GETTABLE  R26 R26 K76  ; R82 := R26[0xb139c962]
353 [-]: CALL      R26 1 2      ; R26 := R26()
354 [-]: LEN       R26 R26      ; R26 := # R26
355 [-]: LT        0 K37 R26    ; if 0.000000 >= R26 then PC := 444
356 [-]: JMP       444          ; PC := 444
357 [-]: MOVE      R26 R6       ; R26 := R6
358 [-]: GETUPVAL  R27 U9       ; R27 := U9
359 [-]: GETTABLE  R27 R27 K77  ; R27 := R27["SongLinks"]
360 [-]: CALL      R26 2 2      ; R26 := R26(R27)
361 [-]: GETUPVAL  R27 U2       ; R27 := U2
362 [-]: GETTABLE  R27 R27 K78  ; R27 := R27["STEP_SEQUENCER_MAX_LINKS"]
363 [-]: LE        0 R27 R26    ; if R27 > R26 then PC := 379
364 [-]: JMP       379          ; PC := 379
365 [-]: SELF      R26 R0 K11   ; R27 := R0; R26 := R0[0x566ff49e]
366 [-]: GETGLOBAL R28 K12      ; R28 := 0xae91e43b
367 [-]: SELF      R28 R28 K13  ; R29 := R28; R28 := R28[0x42b04007]
368 [-]: LOADK     R30 K79      ; R30 := "/Lotus/Language/Menu/Chat_ExceededSongLimitError"
369 [-]: OP_LOADBOOL R31 0 0      ; R31 := false
370 [-]: NEWTABLE  R32 0 1      ; R32 := {}
371 [-]: GETUPVAL  R33 U2       ; R33 := U2
372 [-]: GETTABLE  R33 R33 K78  ; R33 := R33["STEP_SEQUENCER_MAX_LINKS"]
373 [-]: SETTABLE  R32 K17 R33  ; R32["LIMIT"] := R33
374 [-]: CALL      R28 5 2      ; R28 := R28(R29,R30,R31,R32)
375 [-]: GETTABLE  R29 R0 K15   ; R29 := R0["MESSAGE_TYPE_SYSTEM"]
376 [-]: LOADK     R30 K4       ; R30 := ""
377 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
378 [-]: RETURN    R0 1         ; return 
379 [-]: GETGLOBAL R26 K12      ; R26 := 0xae91e43b
380 [-]: SELF      R26 R26 K80  ; R27 := R26; R26 := R26[0x1fd6abd0]
381 [-]: GETGLOBAL R28 K19      ; R28 := 0x0032441c
382 [-]: GETTABLE  R28 R28 K81  ; R28 := R28["UIMovie_GenericMenu"]
383 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
384 [-]: SETGLOBALHASH R26 K43      ; mChildMovie := R26
385 [-]: GETGLOBAL R26 K2       ; R26 := 0x7b998233
386 [-]: GETGLOBAL R27 K43      ; R27 := mChildMovie
387 [-]: CALL      R26 2 2      ; R26 := R26(R27)
388 [-]: TEST      R26 1        ; if R26 then PC := 1209
389 [-]: JMP       1209         ; PC := 1209
390 [-]: OP_LOADBOOL R26 1 0      ; R26 := true
391 [-]: SETGLOBALHASH R26 K46      ; mInputBlocked := R26
392 [-]: GETGLOBAL R26 K43      ; R26 := mChildMovie
393 [-]: SELF      R26 R26 K49  ; R27 := R26; R26 := R26[0xe4162eed]
394 [-]: LOADK     R28 K50      ; R28 := "SetTitle"
395 [-]: LOADK     R29 K82      ; R29 := "/Lotus/Language/Menu/Composition_SelectSong"
396 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
397 [-]: GETGLOBAL R26 K41      ; R26 := _T
398 [-]: CLOSURE   R27 5        ; R27 := closure(Function #94.5.6)
399 [-]: GETUPVAL  R0 U2        ; R0 := U2
400 [-]: GETUPVAL  R0 U9        ; R0 := U9
401 [-]: MOVE      R0 R3        ; R0 := R3
402 [-]: MOVE      R0 R13       ; R0 := R13
403 [-]: GETUPVAL  R0 U10       ; R0 := U10
404 [-]: GETUPVAL  R0 U1        ; R0 := U1
405 [-]: SETTABLE  R26 K83 R27  ; R26["SongSelectionDone"] := R27
406 [-]: GETGLOBAL R26 K43      ; R26 := mChildMovie
407 [-]: SELF      R26 R26 K49  ; R27 := R26; R26 := R26[0xe4162eed]
408 [-]: LOADK     R28 K54      ; R28 := "SetCallBack"
409 [-]: LOADK     R29 K83      ; R29 := "SongSelectionDone"
410 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
411 [-]: GETGLOBAL R26 K41      ; R26 := _T
412 [-]: CLOSURE   R27 6        ; R27 := closure(Function #94.5.7)
413 [-]: GETUPVAL  R0 U8        ; R0 := U8
414 [-]: SETTABLE  R26 K84 R27  ; R26["GetSongList"] := R27
415 [-]: GETGLOBAL R26 K43      ; R26 := mChildMovie
416 [-]: SELF      R26 R26 K49  ; R27 := R26; R26 := R26[0xe4162eed]
417 [-]: LOADK     R28 K56      ; R28 := "SetElementsFunction"
418 [-]: LOADK     R29 K84      ; R29 := "GetSongList"
419 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
420 [-]: GETGLOBAL R26 K41      ; R26 := _T
421 [-]: CLOSURE   R27 7        ; R27 := closure(Function #94.5.8)
422 [-]: GETUPVAL  R0 U2        ; R0 := U2
423 [-]: GETUPVAL  R0 U12       ; R0 := U12
424 [-]: SETTABLE  R26 K85 R27  ; R26[0x5ac1155c] := R27
425 [-]: GETGLOBAL R26 K43      ; R26 := mChildMovie
426 [-]: SELF      R26 R26 K49  ; R27 := R26; R26 := R26[0xe4162eed]
427 [-]: LOADK     R28 K86      ; R28 := "SetOnFocusedCallback"
428 [-]: LOADK     R29 K85      ; R29 := "OnSongFocused"
429 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
430 [-]: GETGLOBAL R26 K41      ; R26 := _T
431 [-]: CLOSURE   R27 8        ; R27 := closure(Function #94.5.9)
432 [-]: GETUPVAL  R0 U2        ; R0 := U2
433 [-]: SETTABLE  R26 K87 R27  ; R26[0xfe8039a9] := R27
434 [-]: GETGLOBAL R26 K43      ; R26 := mChildMovie
435 [-]: SELF      R26 R26 K49  ; R27 := R26; R26 := R26[0xe4162eed]
436 [-]: LOADK     R28 K88      ; R28 := "SetOnUnfocusedCallback"
437 [-]: LOADK     R29 K87      ; R29 := "OnSongUnfocused"
438 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
439 [-]: GETUPVAL  R26 U10      ; R26 := U10
440 [-]: OP_LOADBOOL R27 1 0      ; R27 := true
441 [-]: CALL      R26 2 1      ; R26(R27)
442 [-]: RETURN    R0 1         ; return 
443 [-]: JMP       1209         ; PC := 1209
444 [-]: GETUPVAL  R26 U1       ; R26 := U1
445 [-]: GETTABLE  R26 R26 K58  ; R82 := R26[0xe0cba3ca]
446 [-]: GETGLOBAL R27 K12      ; R27 := 0xae91e43b
447 [-]: SELF      R27 R27 K13  ; R28 := R27; R27 := R27[0x42b04007]
448 [-]: LOADK     R29 K89      ; R29 := "/Lotus/Language/Menu/Song_NoneOwned"
449 [-]: OP_LOADBOOL R30 0 0      ; R30 := false
450 [-]: CALL      R27 4 0      ; R27,... := R27(R28,R29,R30)
451 [-]: CALL      R26 0 1      ; R26(R27,...)
452 [-]: RETURN    R0 1         ; return 
453 [-]: JMP       1209         ; PC := 1209
454 [-]: GETUPVAL  R26 U2       ; R26 := U2
455 [-]: GETTABLE  R26 R26 K90  ; R26 := R26["ZawSearchable"]
456 [-]: EQ        1 R14 R26    ; if R14 == R26 then PC := 474
457 [-]: JMP       474          ; PC := 474
458 [-]: GETUPVAL  R26 U2       ; R26 := U2
459 [-]: GETTABLE  R26 R26 K91  ; R26 := R26["AmpSearchable"]
460 [-]: EQ        1 R14 R26    ; if R14 == R26 then PC := 474
461 [-]: JMP       474          ; PC := 474
462 [-]: GETUPVAL  R26 U2       ; R26 := U2
463 [-]: GETTABLE  R26 R26 K92  ; R26 := R26["MoaPetSearchable"]
464 [-]: EQ        1 R14 R26    ; if R14 == R26 then PC := 474
465 [-]: JMP       474          ; PC := 474
466 [-]: GETUPVAL  R26 U2       ; R26 := U2
467 [-]: GETTABLE  R26 R26 K93  ; R26 := R26["KDriveSearchable"]
468 [-]: EQ        1 R14 R26    ; if R14 == R26 then PC := 474
469 [-]: JMP       474          ; PC := 474
470 [-]: GETUPVAL  R26 U2       ; R26 := U2
471 [-]: GETTABLE  R26 R26 K94  ; R26 := R26["KitgunSearchable"]
472 [-]: EQ        0 R14 R26    ; if R14 ~= R26 then PC := 660
473 [-]: JMP       660          ; PC := 660
474 [-]: GETUPVAL  R26 U7       ; R26 := U7
475 [-]: LOADK     R27 K32      ; R27 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
476 [-]: NEWTABLE  R28 0 1      ; R28 := {}
477 [-]: LOADK     R29 K34      ; R29 := "["
478 [-]: MOVE      R30 R14      ; R30 := R14
479 [-]: LOADK     R31 K35      ; R31 := "]"
480 [-]: CONCAT    R29 R29 R31  ; R29 := R29 .. R30 .. R31
481 [-]: SETTABLE  R28 K33 R29  ; R28[0x1e63ac7a] := R29
482 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
483 [-]: TEST      R26 0        ; if not R26 then PC := 486
484 [-]: JMP       486          ; PC := 486
485 [-]: RETURN    R0 1         ; return 
486 [-]: CONST     R15 0        ; R15 := 0.000000
487 [-]: GETUPVAL  R26 U9       ; R26 := U9
488 [-]: GETTABLE  R26 R26 K95  ; R26 := R26["ZawLinks"]
489 [-]: LOADK     R27 K96      ; R27 := "/Lotus/Language/Menu/Chat_ExceededZawLimitError"
490 [-]: LOADK     R28 K97      ; R28 := "ZAW-"
491 [-]: LOADK     R29 K98      ; R29 := "RecursiveZawReplace"
492 [-]: GETUPVAL  R30 U2       ; R30 := U2
493 [-]: GETTABLE  R30 R30 K91  ; R30 := R30["AmpSearchable"]
494 [-]: EQ        0 R14 R30    ; if R14 ~= R30 then PC := 503
495 [-]: JMP       503          ; PC := 503
496 [-]: CONST     R15 1        ; R15 := 1.000000
497 [-]: GETUPVAL  R30 U9       ; R30 := U9
498 [-]: GETTABLE  R26 R30 K99  ; R26 := R30["AmpLinks"]
499 [-]: LOADK     R27 K100     ; R27 := "/Lotus/Language/Menu/Chat_ExceededAmpLimitError"
500 [-]: LOADK     R28 K101     ; R28 := "AMP-"
501 [-]: LOADK     R29 K102     ; R29 := "RecursiveAmpReplace"
502 [-]: JMP       535          ; PC := 535
503 [-]: GETUPVAL  R30 U2       ; R30 := U2
504 [-]: GETTABLE  R30 R30 K92  ; R30 := R30["MoaPetSearchable"]
505 [-]: EQ        0 R14 R30    ; if R14 ~= R30 then PC := 514
506 [-]: JMP       514          ; PC := 514
507 [-]: CONST     R15 6        ; R15 := 6.000000
508 [-]: GETUPVAL  R30 U9       ; R30 := U9
509 [-]: GETTABLE  R26 R30 K103 ; R26 := R30["MoaPetLinks"]
510 [-]: LOADK     R27 K104     ; R27 := "/Lotus/Language/SolarisVenus/Chat_ExceededMoaPetLimitError"
511 [-]: LOADK     R28 K105     ; R28 := "MOA-"
512 [-]: LOADK     R29 K106     ; R29 := "RecursiveMoaPetReplace"
513 [-]: JMP       535          ; PC := 535
514 [-]: GETUPVAL  R30 U2       ; R30 := U2
515 [-]: GETTABLE  R30 R30 K93  ; R30 := R30["KDriveSearchable"]
516 [-]: EQ        0 R14 R30    ; if R14 ~= R30 then PC := 525
517 [-]: JMP       525          ; PC := 525
518 [-]: CONST     R15 7        ; R15 := 7.000000
519 [-]: GETUPVAL  R30 U9       ; R30 := U9
520 [-]: GETTABLE  R26 R30 K107 ; R26 := R30["KdriveLinks"]
521 [-]: LOADK     R27 K108     ; R27 := "/Lotus/Language/SolarisVenus/Chat_ExceededHBLimitError"
522 [-]: LOADK     R28 K109     ; R28 := "KDR-"
523 [-]: LOADK     R29 K110     ; R29 := "RecursiveKDriveReplace"
524 [-]: JMP       535          ; PC := 535
525 [-]: GETUPVAL  R30 U2       ; R30 := U2
526 [-]: GETTABLE  R30 R30 K94  ; R30 := R30["KitgunSearchable"]
527 [-]: EQ        0 R14 R30    ; if R14 ~= R30 then PC := 535
528 [-]: JMP       535          ; PC := 535
529 [-]: CONST     R15 2        ; R15 := 2.000000
530 [-]: GETUPVAL  R30 U9       ; R30 := U9
531 [-]: GETTABLE  R26 R30 K111 ; R26 := R30["KitgunLinks"]
532 [-]: LOADK     R27 K112     ; R27 := "/Lotus/Language/SolarisVenus/Chat_ExceededKitgunLimitError"
533 [-]: LOADK     R28 K113     ; R28 := "KIT-"
534 [-]: LOADK     R29 K114     ; R29 := "RecursiveKitgunReplace"
535 [-]: GETUPVAL  R30 U8       ; R30 := U8
536 [-]: GETTABLE  R30 R30 K115 ; R82 := R30[0x257627f5]
537 [-]: MOVE      R31 R15      ; R31 := R15
538 [-]: CALL      R30 2 2      ; R30 := R30(R31)
539 [-]: LEN       R30 R30      ; R30 := # R30
540 [-]: LT        0 K37 R30    ; if 0.000000 >= R30 then PC := 621
541 [-]: JMP       621          ; PC := 621
542 [-]: MOVE      R30 R7       ; R30 := R7
543 [-]: MOVE      R31 R15      ; R31 := R15
544 [-]: CALL      R30 2 2      ; R30 := R30(R31)
545 [-]: MOVE      R31 R6       ; R31 := R6
546 [-]: MOVE      R32 R26      ; R32 := R26
547 [-]: CALL      R31 2 2      ; R31 := R31(R32)
548 [-]: LE        0 R30 R31    ; if R30 > R31 then PC := 562
549 [-]: JMP       562          ; PC := 562
550 [-]: SELF      R31 R0 K11   ; R32 := R0; R31 := R0[0x566ff49e]
551 [-]: GETGLOBAL R33 K12      ; R33 := 0xae91e43b
552 [-]: SELF      R33 R33 K13  ; R34 := R33; R33 := R33[0x42b04007]
553 [-]: MOVE      R35 R27      ; R35 := R27
554 [-]: OP_LOADBOOL R36 0 0      ; R36 := false
555 [-]: NEWTABLE  R37 0 1      ; R37 := {}
556 [-]: SETTABLE  R37 K17 R30  ; R37["LIMIT"] := R30
557 [-]: CALL      R33 5 2      ; R33 := R33(R34,R35,R36,R37)
558 [-]: GETTABLE  R34 R0 K15   ; R34 := R0["MESSAGE_TYPE_SYSTEM"]
559 [-]: LOADK     R35 K4       ; R35 := ""
560 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
561 [-]: RETURN    R0 1         ; return 
562 [-]: GETGLOBAL R31 K41      ; R31 := _T
563 [-]: GETTABLE  R31 R31 K44  ; R82 := R31[0x67f7bf32]
564 [-]: LOADK     R32 K45      ; R32 := "ItemBrowsing"
565 [-]: CALL      R31 2 2      ; R31 := R31(R32)
566 [-]: SETGLOBALHASH R31 K43      ; mChildMovie := R31
567 [-]: GETGLOBAL R31 K2       ; R31 := 0x7b998233
568 [-]: GETGLOBAL R32 K43      ; R32 := mChildMovie
569 [-]: CALL      R31 2 2      ; R31 := R31(R32)
570 [-]: TEST      R31 1        ; if R31 then PC := 658
571 [-]: JMP       658          ; PC := 658
572 [-]: OP_LOADBOOL R31 1 0      ; R31 := true
573 [-]: SETGLOBALHASH R31 K46      ; mInputBlocked := R31
574 [-]: GETUPVAL  R31 U9       ; R31 := U9
575 [-]: SETTABLE  R31 K47 R3   ; R31["Msg"] := R3
576 [-]: GETUPVAL  R31 U9       ; R31 := U9
577 [-]: SETTABLE  R31 K48 R13  ; R31["CurrItemString"] := R13
578 [-]: GETGLOBAL R31 K43      ; R31 := mChildMovie
579 [-]: SELF      R31 R31 K49  ; R32 := R31; R31 := R31[0xe4162eed]
580 [-]: LOADK     R33 K50      ; R33 := "SetTitle"
581 [-]: GETGLOBAL R34 K12      ; R34 := 0xae91e43b
582 [-]: SELF      R34 R34 K13  ; R35 := R34; R34 := R34[0x42b04007]
583 [-]: LOADK     R36 K116     ; R36 := "/Lotus/Language/OstronCrafting/Crafting_WeapSelectTitle"
584 [-]: OP_LOADBOOL R37 0 0      ; R37 := false
585 [-]: CALL      R34 4 0      ; R34,... := R34(R35,R36,R37)
586 [-]: CALL      R31 0 1      ; R31(R32,...)
587 [-]: GETGLOBAL R31 K43      ; R31 := mChildMovie
588 [-]: SELF      R31 R31 K49  ; R32 := R31; R31 := R31[0xe4162eed]
589 [-]: LOADK     R33 K52      ; R33 := "SetRequiredSelections"
590 [-]: CONST     R34 1        ; R34 := 1.000000
591 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
592 [-]: GETGLOBAL R31 K41      ; R31 := _T
593 [-]: CLOSURE   R32 9        ; R32 := closure(Function #94.5.10)
594 [-]: GETUPVAL  R0 U10       ; R0 := U10
595 [-]: GETUPVAL  R0 U13       ; R0 := U13
596 [-]: MOVE      R0 R15       ; R0 := R15
597 [-]: MOVE      R0 R28       ; R0 := R28
598 [-]: MOVE      R0 R29       ; R0 := R29
599 [-]: SETTABLE  R31 K117 R32 ; R31["WeaponSelectionDone"] := R32
600 [-]: GETGLOBAL R31 K43      ; R31 := mChildMovie
601 [-]: SELF      R31 R31 K49  ; R32 := R31; R31 := R31[0xe4162eed]
602 [-]: LOADK     R33 K54      ; R33 := "SetCallBack"
603 [-]: LOADK     R34 K117     ; R34 := "WeaponSelectionDone"
604 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
605 [-]: GETGLOBAL R31 K41      ; R31 := _T
606 [-]: CLOSURE   R32 10       ; R32 := closure(Function #94.5.11)
607 [-]: GETUPVAL  R0 U8        ; R0 := U8
608 [-]: MOVE      R0 R15       ; R0 := R15
609 [-]: SETTABLE  R31 K118 R32 ; R31["GetWeapons"] := R32
610 [-]: GETGLOBAL R31 K43      ; R31 := mChildMovie
611 [-]: SELF      R31 R31 K49  ; R32 := R31; R31 := R31[0xe4162eed]
612 [-]: LOADK     R33 K56      ; R33 := "SetElementsFunction"
613 [-]: LOADK     R34 K118     ; R34 := "GetWeapons"
614 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
615 [-]: GETUPVAL  R31 U10      ; R31 := U10
616 [-]: OP_LOADBOOL R32 1 0      ; R32 := true
617 [-]: CALL      R31 2 1      ; R31(R32)
618 [-]: OP_LOADBOOL R31 1 0      ; R31 := true
619 [-]: RETURN    R31 2        ; return R31
620 [-]: JMP       658          ; PC := 658
621 [-]: EQ        0 R15 K37    ; if R15 ~= 0.000000 then PC := 628
622 [-]: JMP       628          ; PC := 628
623 [-]: GETUPVAL  R31 U1       ; R31 := U1
624 [-]: GETTABLE  R31 R31 K58  ; R82 := R31[0xe0cba3ca]
625 [-]: LOADK     R32 K119     ; R32 := "/Lotus/Language/Menu/Chat_NoModularWeapons"
626 [-]: CALL      R31 2 1      ; R31(R32)
627 [-]: JMP       657          ; PC := 657
628 [-]: EQ        0 R15 K27    ; if R15 ~= 1.000000 then PC := 635
629 [-]: JMP       635          ; PC := 635
630 [-]: GETUPVAL  R31 U1       ; R31 := U1
631 [-]: GETTABLE  R31 R31 K58  ; R82 := R31[0xe0cba3ca]
632 [-]: LOADK     R32 K120     ; R32 := "/Lotus/Language/OstronCrafting/Chat_NoModularWeapons_Amp"
633 [-]: CALL      R31 2 1      ; R31(R32)
634 [-]: JMP       657          ; PC := 657
635 [-]: EQ        0 R15 K121   ; if R15 ~= 6.000000 then PC := 642
636 [-]: JMP       642          ; PC := 642
637 [-]: GETUPVAL  R31 U1       ; R31 := U1
638 [-]: GETTABLE  R31 R31 K58  ; R82 := R31[0xe0cba3ca]
639 [-]: LOADK     R32 K122     ; R32 := "/Lotus/Language/SolarisVenus/Chat_NoModularWeapons_Moa"
640 [-]: CALL      R31 2 1      ; R31(R32)
641 [-]: JMP       657          ; PC := 657
642 [-]: EQ        0 R15 K123   ; if R15 ~= 7.000000 then PC := 649
643 [-]: JMP       649          ; PC := 649
644 [-]: GETUPVAL  R31 U1       ; R31 := U1
645 [-]: GETTABLE  R31 R31 K58  ; R82 := R31[0xe0cba3ca]
646 [-]: LOADK     R32 K124     ; R32 := "/Lotus/Language/SolarisVenus/Chat_NoModularWeapons_HB"
647 [-]: CALL      R31 2 1      ; R31(R32)
648 [-]: JMP       657          ; PC := 657
649 [-]: EQ        1 R15 K125   ; if R15 == 2.000000 then PC := 653
650 [-]: JMP       653          ; PC := 653
651 [-]: EQ        0 R15 K126   ; if R15 ~= 3.000000 then PC := 657
652 [-]: JMP       657          ; PC := 657
653 [-]: GETUPVAL  R31 U1       ; R31 := U1
654 [-]: GETTABLE  R31 R31 K58  ; R82 := R31[0xe0cba3ca]
655 [-]: LOADK     R32 K127     ; R32 := "/Lotus/Language/SolarisVenus/Chat_NoModularWeapons_Kitgun"
656 [-]: CALL      R31 2 1      ; R31(R32)
657 [-]: RETURN    R0 1         ; return 
658 [-]: CLOSE     R26          ; SAVE R26,...
659 [-]: JMP       1209         ; PC := 1209
660 [-]: GETUPVAL  R26 U2       ; R26 := U2
661 [-]: GETTABLE  R26 R26 K128 ; R26 := R26["AppearanceSearchable"]
662 [-]: EQ        0 R14 R26    ; if R14 ~= R26 then PC := 801
663 [-]: JMP       801          ; PC := 801
664 [-]: GETUPVAL  R26 U7       ; R26 := U7
665 [-]: LOADK     R27 K32      ; R27 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
666 [-]: NEWTABLE  R28 0 1      ; R28 := {}
667 [-]: LOADK     R29 K34      ; R29 := "["
668 [-]: MOVE      R30 R14      ; R30 := R14
669 [-]: LOADK     R31 K35      ; R31 := "]"
670 [-]: CONCAT    R29 R29 R31  ; R29 := R29 .. R30 .. R31
671 [-]: SETTABLE  R28 K33 R29  ; R28[0x1e63ac7a] := R29
672 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
673 [-]: TEST      R26 0        ; if not R26 then PC := 676
674 [-]: JMP       676          ; PC := 676
675 [-]: RETURN    R0 1         ; return 
676 [-]: MOVE      R26 R8       ; R26 := R8
677 [-]: MOVE      R27 R9       ; R27 := R9
678 [-]: CALL      R26 2 2      ; R26 := R26(R27)
679 [-]: EQ        1 R26 K4     ; if R26 == "" then PC := 688
680 [-]: JMP       688          ; PC := 688
681 [-]: SELF      R27 R0 K11   ; R28 := R0; R27 := R0[0x566ff49e]
682 [-]: MOVE      R29 R26      ; R29 := R26
683 [-]: GETTABLE  R30 R0 K15   ; R30 := R0["MESSAGE_TYPE_SYSTEM"]
684 [-]: LOADK     R31 K4       ; R31 := ""
685 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
686 [-]: OP_LOADBOOL R27 1 0      ; R27 := true
687 [-]: RETURN    R27 2        ; return R27
688 [-]: MOVE      R27 R6       ; R27 := R6
689 [-]: GETUPVAL  R28 U9       ; R28 := U9
690 [-]: GETTABLE  R28 R28 K129 ; R28 := R28["AppearanceLinks"]
691 [-]: CALL      R27 2 2      ; R27 := R27(R28)
692 [-]: GETUPVAL  R28 U2       ; R28 := U2
693 [-]: GETTABLE  R28 R28 K130 ; R28 := R28["APPEARANCE_MAX_LINKS"]
694 [-]: LE        0 R28 R27    ; if R28 > R27 then PC := 710
695 [-]: JMP       710          ; PC := 710
696 [-]: SELF      R27 R0 K11   ; R28 := R0; R27 := R0[0x566ff49e]
697 [-]: GETGLOBAL R29 K12      ; R29 := 0xae91e43b
698 [-]: SELF      R29 R29 K13  ; R30 := R29; R29 := R29[0x42b04007]
699 [-]: LOADK     R31 K131     ; R31 := "/Lotus/Language/Menu/Chat_ExceededLoadoutLimitError"
700 [-]: OP_LOADBOOL R32 0 0      ; R32 := false
701 [-]: NEWTABLE  R33 0 1      ; R33 := {}
702 [-]: GETUPVAL  R34 U2       ; R34 := U2
703 [-]: GETTABLE  R34 R34 K130 ; R34 := R34["APPEARANCE_MAX_LINKS"]
704 [-]: SETTABLE  R33 K17 R34  ; R33["LIMIT"] := R34
705 [-]: CALL      R29 5 2      ; R29 := R29(R30,R31,R32,R33)
706 [-]: GETTABLE  R30 R0 K15   ; R30 := R0["MESSAGE_TYPE_SYSTEM"]
707 [-]: LOADK     R31 K4       ; R31 := ""
708 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
709 [-]: RETURN    R0 1         ; return 
710 [-]: GETUPVAL  R27 U9       ; R27 := U9
711 [-]: GETTABLE  R27 R27 K132 ; R27 := R27["CachedAppearanceLink"]
712 [-]: EQ        0 R27 K74    ; if R27 ~= nil then PC := 787
713 [-]: JMP       787          ; PC := 787
714 [-]: GETUPVAL  R27 U8       ; R27 := U8
715 [-]: GETTABLE  R27 R27 K133 ; R82 := R27[0xb6718d04]
716 [-]: CALL      R27 1 2      ; R27 := R27()
717 [-]: TEST      R27 1        ; if R27 then PC := 730
718 [-]: JMP       730          ; PC := 730
719 [-]: GETUPVAL  R27 U14      ; R27 := U14
720 [-]: GETGLOBAL R28 K12      ; R28 := 0xae91e43b
721 [-]: SELF      R28 R28 K13  ; R29 := R28; R28 := R28[0x42b04007]
722 [-]: LOADK     R30 K134     ; R30 := "/Lotus/Language/Menu/NotAllowedInMission"
723 [-]: OP_LOADBOOL R31 0 0      ; R31 := false
724 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
725 [-]: LOADK     R29 K4       ; R29 := ""
726 [-]: CONST     R30 1        ; R30 := 1.000000
727 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
728 [-]: RETURN    R0 1         ; return 
729 [-]: JMP       779          ; PC := 779
730 [-]: GETUPVAL  R27 U8       ; R27 := U8
731 [-]: GETTABLE  R27 R27 K135 ; R82 := R27[0xfbaa31d5]
732 [-]: CALL      R27 1 2      ; R27 := R27()
733 [-]: LEN       R27 R27      ; R27 := # R27
734 [-]: LT        0 K37 R27    ; if 0.000000 >= R27 then PC := 779
735 [-]: JMP       779          ; PC := 779
736 [-]: GETGLOBAL R27 K12      ; R27 := 0xae91e43b
737 [-]: SELF      R27 R27 K80  ; R28 := R27; R27 := R27[0x1fd6abd0]
738 [-]: GETGLOBAL R29 K19      ; R29 := 0x0032441c
739 [-]: GETTABLE  R29 R29 K81  ; R29 := R29["UIMovie_GenericMenu"]
740 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
741 [-]: SETGLOBALHASH R27 K43      ; mChildMovie := R27
742 [-]: GETGLOBAL R27 K2       ; R27 := 0x7b998233
743 [-]: GETGLOBAL R28 K43      ; R28 := mChildMovie
744 [-]: CALL      R27 2 2      ; R27 := R27(R28)
745 [-]: TEST      R27 1        ; if R27 then PC := 778
746 [-]: JMP       778          ; PC := 778
747 [-]: OP_LOADBOOL R27 1 0      ; R27 := true
748 [-]: SETGLOBALHASH R27 K46      ; mInputBlocked := R27
749 [-]: GETGLOBAL R27 K43      ; R27 := mChildMovie
750 [-]: SELF      R27 R27 K49  ; R28 := R27; R27 := R27[0xe4162eed]
751 [-]: LOADK     R29 K50      ; R29 := "SetTitle"
752 [-]: LOADK     R30 K136     ; R30 := "/Lotus/Language/Menu/Select_Item_To_Link"
753 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
754 [-]: GETGLOBAL R27 K41      ; R27 := _T
755 [-]: CLOSURE   R28 11       ; R28 := closure(Function #94.5.12)
756 [-]: GETUPVAL  R0 U9        ; R0 := U9
757 [-]: MOVE      R0 R3        ; R0 := R3
758 [-]: MOVE      R0 R13       ; R0 := R13
759 [-]: GETUPVAL  R0 U10       ; R0 := U10
760 [-]: SETTABLE  R27 K137 R28 ; R27["LoadoutSelectionDone"] := R28
761 [-]: GETGLOBAL R27 K43      ; R27 := mChildMovie
762 [-]: SELF      R27 R27 K49  ; R28 := R27; R27 := R27[0xe4162eed]
763 [-]: LOADK     R29 K54      ; R29 := "SetCallBack"
764 [-]: LOADK     R30 K137     ; R30 := "LoadoutSelectionDone"
765 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
766 [-]: GETGLOBAL R27 K41      ; R27 := _T
767 [-]: CLOSURE   R28 12       ; R28 := closure(Function #94.5.13)
768 [-]: GETUPVAL  R0 U8        ; R0 := U8
769 [-]: SETTABLE  R27 K138 R28 ; R27["GetLoadoutList"] := R28
770 [-]: GETGLOBAL R27 K43      ; R27 := mChildMovie
771 [-]: SELF      R27 R27 K49  ; R28 := R27; R27 := R27[0xe4162eed]
772 [-]: LOADK     R29 K56      ; R29 := "SetElementsFunction"
773 [-]: LOADK     R30 K138     ; R30 := "GetLoadoutList"
774 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
775 [-]: GETUPVAL  R27 U10      ; R27 := U10
776 [-]: OP_LOADBOOL R28 1 0      ; R28 := true
777 [-]: CALL      R27 2 1      ; R27(R28)
778 [-]: RETURN    R0 1         ; return 
779 [-]: SELF      R27 R0 K11   ; R28 := R0; R27 := R0[0x566ff49e]
780 [-]: GETGLOBAL R29 K12      ; R29 := 0xae91e43b
781 [-]: SELF      R29 R29 K13  ; R30 := R29; R29 := R29[0x42b04007]
782 [-]: LOADK     R31 K139     ; R31 := "/Lotus/Language/Menu/Chat_NoAppearanceLink"
783 [-]: OP_LOADBOOL R32 0 0      ; R32 := false
784 [-]: CALL      R29 4 0      ; R29,... := R29(R30,R31,R32)
785 [-]: CALL      R27 0 1      ; R27(R28,...)
786 [-]: RETURN    R0 1         ; return 
787 [-]: GETUPVAL  R27 U9       ; R27 := U9
788 [-]: SETTABLE  R27 K47 R3   ; R27["Msg"] := R3
789 [-]: GETUPVAL  R27 U9       ; R27 := U9
790 [-]: SETTABLE  R27 K48 R13  ; R27["CurrItemString"] := R13
791 [-]: GETGLOBAL R27 K12      ; R27 := 0xae91e43b
792 [-]: SELF      R27 R27 K49  ; R28 := R27; R27 := R27[0xe4162eed]
793 [-]: LOADK     R29 K140     ; R29 := "RecursiveAppearanceReplace"
794 [-]: GETUPVAL  R30 U9       ; R30 := U9
795 [-]: GETTABLE  R30 R30 K132 ; R30 := R30["CachedAppearanceLink"]
796 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
797 [-]: GETUPVAL  R27 U9       ; R27 := U9
798 [-]: SETTABLE  R27 K132 K74 ; R27["CachedAppearanceLink"] := nil
799 [-]: RETURN    R0 1         ; return 
800 [-]: JMP       1209         ; PC := 1209
801 [-]: GETUPVAL  R27 U2       ; R27 := U2
802 [-]: GETTABLE  R27 R27 K141 ; R27 := R27["ModConfigSearchable"]
803 [-]: EQ        0 R14 R27    ; if R14 ~= R27 then PC := 944
804 [-]: JMP       944          ; PC := 944
805 [-]: GETUPVAL  R27 U7       ; R27 := U7
806 [-]: LOADK     R28 K32      ; R28 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
807 [-]: NEWTABLE  R29 0 1      ; R29 := {}
808 [-]: LOADK     R30 K34      ; R30 := "["
809 [-]: MOVE      R31 R14      ; R31 := R14
810 [-]: LOADK     R32 K35      ; R32 := "]"
811 [-]: CONCAT    R30 R30 R32  ; R30 := R30 .. R31 .. R32
812 [-]: SETTABLE  R29 K33 R30  ; R29[0x1e63ac7a] := R30
813 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
814 [-]: TEST      R27 0        ; if not R27 then PC := 817
815 [-]: JMP       817          ; PC := 817
816 [-]: RETURN    R0 1         ; return 
817 [-]: MOVE      R27 R8       ; R27 := R8
818 [-]: MOVE      R28 R9       ; R28 := R9
819 [-]: CALL      R27 2 2      ; R27 := R27(R28)
820 [-]: EQ        1 R27 K4     ; if R27 == "" then PC := 829
821 [-]: JMP       829          ; PC := 829
822 [-]: SELF      R28 R0 K11   ; R29 := R0; R28 := R0[0x566ff49e]
823 [-]: MOVE      R30 R27      ; R30 := R27
824 [-]: GETTABLE  R31 R0 K15   ; R31 := R0["MESSAGE_TYPE_SYSTEM"]
825 [-]: LOADK     R32 K4       ; R32 := ""
826 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
827 [-]: OP_LOADBOOL R28 1 0      ; R28 := true
828 [-]: RETURN    R28 2        ; return R28
829 [-]: MOVE      R28 R6       ; R28 := R6
830 [-]: GETUPVAL  R29 U9       ; R29 := U9
831 [-]: GETTABLE  R29 R29 K142 ; R29 := R29["ModConfigLinks"]
832 [-]: CALL      R28 2 2      ; R28 := R28(R29)
833 [-]: GETUPVAL  R29 U2       ; R29 := U2
834 [-]: GETTABLE  R29 R29 K143 ; R29 := R29["MOD_CONFIG_MAX_LINKS"]
835 [-]: LE        0 R29 R28    ; if R29 > R28 then PC := 851
836 [-]: JMP       851          ; PC := 851
837 [-]: SELF      R28 R0 K11   ; R29 := R0; R28 := R0[0x566ff49e]
838 [-]: GETGLOBAL R30 K12      ; R30 := 0xae91e43b
839 [-]: SELF      R30 R30 K13  ; R31 := R30; R30 := R30[0x42b04007]
840 [-]: LOADK     R32 K131     ; R32 := "/Lotus/Language/Menu/Chat_ExceededLoadoutLimitError"
841 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
842 [-]: NEWTABLE  R34 0 1      ; R34 := {}
843 [-]: GETUPVAL  R35 U2       ; R35 := U2
844 [-]: GETTABLE  R35 R35 K143 ; R35 := R35["MOD_CONFIG_MAX_LINKS"]
845 [-]: SETTABLE  R34 K17 R35  ; R34["LIMIT"] := R35
846 [-]: CALL      R30 5 2      ; R30 := R30(R31,R32,R33,R34)
847 [-]: GETTABLE  R31 R0 K15   ; R31 := R0["MESSAGE_TYPE_SYSTEM"]
848 [-]: LOADK     R32 K4       ; R32 := ""
849 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
850 [-]: RETURN    R0 1         ; return 
851 [-]: GETUPVAL  R28 U9       ; R28 := U9
852 [-]: GETTABLE  R28 R28 K144 ; R28 := R28["CachedModConfigLink"]
853 [-]: EQ        0 R28 K74    ; if R28 ~= nil then PC := 930
854 [-]: JMP       930          ; PC := 930
855 [-]: GETUPVAL  R28 U8       ; R28 := U8
856 [-]: GETTABLE  R28 R28 K133 ; R82 := R28[0xb6718d04]
857 [-]: CALL      R28 1 2      ; R28 := R28()
858 [-]: TEST      R28 1        ; if R28 then PC := 871
859 [-]: JMP       871          ; PC := 871
860 [-]: GETUPVAL  R28 U14      ; R28 := U14
861 [-]: GETGLOBAL R29 K12      ; R29 := 0xae91e43b
862 [-]: SELF      R29 R29 K13  ; R30 := R29; R29 := R29[0x42b04007]
863 [-]: LOADK     R31 K134     ; R31 := "/Lotus/Language/Menu/NotAllowedInMission"
864 [-]: OP_LOADBOOL R32 0 0      ; R32 := false
865 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
866 [-]: LOADK     R30 K4       ; R30 := ""
867 [-]: CONST     R31 1        ; R31 := 1.000000
868 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
869 [-]: RETURN    R0 1         ; return 
870 [-]: JMP       920          ; PC := 920
871 [-]: GETUPVAL  R28 U8       ; R28 := U8
872 [-]: GETTABLE  R28 R28 K135 ; R82 := R28[0xfbaa31d5]
873 [-]: CALL      R28 1 2      ; R28 := R28()
874 [-]: LEN       R28 R28      ; R28 := # R28
875 [-]: LT        0 K37 R28    ; if 0.000000 >= R28 then PC := 920
876 [-]: JMP       920          ; PC := 920
877 [-]: GETGLOBAL R28 K12      ; R28 := 0xae91e43b
878 [-]: SELF      R28 R28 K80  ; R29 := R28; R28 := R28[0x1fd6abd0]
879 [-]: GETGLOBAL R30 K19      ; R30 := 0x0032441c
880 [-]: GETTABLE  R30 R30 K81  ; R30 := R30["UIMovie_GenericMenu"]
881 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
882 [-]: SETGLOBALHASH R28 K43      ; mChildMovie := R28
883 [-]: GETGLOBAL R28 K2       ; R28 := 0x7b998233
884 [-]: GETGLOBAL R29 K43      ; R29 := mChildMovie
885 [-]: CALL      R28 2 2      ; R28 := R28(R29)
886 [-]: TEST      R28 1        ; if R28 then PC := 919
887 [-]: JMP       919          ; PC := 919
888 [-]: OP_LOADBOOL R28 1 0      ; R28 := true
889 [-]: SETGLOBALHASH R28 K46      ; mInputBlocked := R28
890 [-]: GETGLOBAL R28 K43      ; R28 := mChildMovie
891 [-]: SELF      R28 R28 K49  ; R29 := R28; R28 := R28[0xe4162eed]
892 [-]: LOADK     R30 K50      ; R30 := "SetTitle"
893 [-]: LOADK     R31 K136     ; R31 := "/Lotus/Language/Menu/Select_Item_To_Link"
894 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
895 [-]: GETGLOBAL R28 K41      ; R28 := _T
896 [-]: CLOSURE   R29 13       ; R29 := closure(Function #94.5.14)
897 [-]: GETUPVAL  R0 U9        ; R0 := U9
898 [-]: MOVE      R0 R3        ; R0 := R3
899 [-]: MOVE      R0 R13       ; R0 := R13
900 [-]: GETUPVAL  R0 U10       ; R0 := U10
901 [-]: SETTABLE  R28 K145 R29 ; R28["ModConfigSelectionDone"] := R29
902 [-]: GETGLOBAL R28 K43      ; R28 := mChildMovie
903 [-]: SELF      R28 R28 K49  ; R29 := R28; R28 := R28[0xe4162eed]
904 [-]: LOADK     R30 K54      ; R30 := "SetCallBack"
905 [-]: LOADK     R31 K145     ; R31 := "ModConfigSelectionDone"
906 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
907 [-]: GETGLOBAL R28 K41      ; R28 := _T
908 [-]: CLOSURE   R29 14       ; R29 := closure(Function #94.5.15)
909 [-]: GETUPVAL  R0 U8        ; R0 := U8
910 [-]: SETTABLE  R28 K146 R29 ; R28["GetModConfigList"] := R29
911 [-]: GETGLOBAL R28 K43      ; R28 := mChildMovie
912 [-]: SELF      R28 R28 K49  ; R29 := R28; R28 := R28[0xe4162eed]
913 [-]: LOADK     R30 K56      ; R30 := "SetElementsFunction"
914 [-]: LOADK     R31 K146     ; R31 := "GetModConfigList"
915 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
916 [-]: GETUPVAL  R28 U10      ; R28 := U10
917 [-]: OP_LOADBOOL R29 1 0      ; R29 := true
918 [-]: CALL      R28 2 1      ; R28(R29)
919 [-]: RETURN    R0 1         ; return 
920 [-]: SELF      R28 R0 K11   ; R29 := R0; R28 := R0[0x566ff49e]
921 [-]: GETGLOBAL R30 K12      ; R30 := 0xae91e43b
922 [-]: SELF      R30 R30 K13  ; R31 := R30; R30 := R30[0x42b04007]
923 [-]: LOADK     R32 K147     ; R32 := "/Lotus/Language/Menu/Chat_NoModLink"
924 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
925 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
926 [-]: GETTABLE  R31 R0 K15   ; R31 := R0["MESSAGE_TYPE_SYSTEM"]
927 [-]: LOADK     R32 K4       ; R32 := ""
928 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
929 [-]: RETURN    R0 1         ; return 
930 [-]: GETUPVAL  R28 U9       ; R28 := U9
931 [-]: SETTABLE  R28 K47 R3   ; R28["Msg"] := R3
932 [-]: GETUPVAL  R28 U9       ; R28 := U9
933 [-]: SETTABLE  R28 K48 R13  ; R28["CurrItemString"] := R13
934 [-]: GETGLOBAL R28 K12      ; R28 := 0xae91e43b
935 [-]: SELF      R28 R28 K49  ; R29 := R28; R28 := R28[0xe4162eed]
936 [-]: LOADK     R30 K148     ; R30 := "RecursiveModConfigReplace"
937 [-]: GETUPVAL  R31 U9       ; R31 := U9
938 [-]: GETTABLE  R31 R31 K144 ; R31 := R31["CachedModConfigLink"]
939 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
940 [-]: GETUPVAL  R28 U9       ; R28 := U9
941 [-]: SETTABLE  R28 K144 K74 ; R28["CachedModConfigLink"] := nil
942 [-]: RETURN    R0 1         ; return 
943 [-]: JMP       1209         ; PC := 1209
944 [-]: GETUPVAL  R28 U2       ; R28 := U2
945 [-]: GETTABLE  R28 R28 K149 ; R28 := R28["ShawzinSearchable"]
946 [-]: EQ        0 R14 R28    ; if R14 ~= R28 then PC := 1010
947 [-]: JMP       1010         ; PC := 1010
948 [-]: GETUPVAL  R28 U7       ; R28 := U7
949 [-]: LOADK     R29 K32      ; R29 := "/Lotus/Language/Menu/Chat_LoadingScreenBlockedLink"
950 [-]: NEWTABLE  R30 0 1      ; R30 := {}
951 [-]: LOADK     R31 K34      ; R31 := "["
952 [-]: MOVE      R32 R14      ; R32 := R14
953 [-]: LOADK     R33 K35      ; R33 := "]"
954 [-]: CONCAT    R31 R31 R33  ; R31 := R31 .. R32 .. R33
955 [-]: SETTABLE  R30 K33 R31  ; R30[0x1e63ac7a] := R31
956 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
957 [-]: TEST      R28 0        ; if not R28 then PC := 960
958 [-]: JMP       960          ; PC := 960
959 [-]: RETURN    R0 1         ; return 
960 [-]: GETUPVAL  R28 U9       ; R28 := U9
961 [-]: GETTABLE  R28 R28 K150 ; R28 := R28["CachedShawzinLink"]
962 [-]: EQ        0 R28 K74    ; if R28 ~= nil then PC := 974
963 [-]: JMP       974          ; PC := 974
964 [-]: SELF      R28 R0 K11   ; R29 := R0; R28 := R0[0x566ff49e]
965 [-]: GETGLOBAL R30 K12      ; R30 := 0xae91e43b
966 [-]: SELF      R30 R30 K13  ; R31 := R30; R30 := R30[0x42b04007]
967 [-]: LOADK     R32 K151     ; R32 := "/Lotus/Language/Menu/Chat_NoShawzinLink"
968 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
969 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
970 [-]: GETTABLE  R31 R0 K15   ; R31 := R0["MESSAGE_TYPE_SYSTEM"]
971 [-]: LOADK     R32 K4       ; R32 := ""
972 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
973 [-]: RETURN    R0 1         ; return 
974 [-]: MOVE      R28 R6       ; R28 := R6
975 [-]: GETUPVAL  R29 U9       ; R29 := U9
976 [-]: GETTABLE  R29 R29 K152 ; R29 := R29["ShawzinLinks"]
977 [-]: CALL      R28 2 2      ; R28 := R28(R29)
978 [-]: GETUPVAL  R29 U2       ; R29 := U2
979 [-]: GETTABLE  R29 R29 K153 ; R29 := R29["SHAWZIN_MAX_LINKS"]
980 [-]: LE        0 R29 R28    ; if R29 > R28 then PC := 996
981 [-]: JMP       996          ; PC := 996
982 [-]: SELF      R28 R0 K11   ; R29 := R0; R28 := R0[0x566ff49e]
983 [-]: GETGLOBAL R30 K12      ; R30 := 0xae91e43b
984 [-]: SELF      R30 R30 K13  ; R31 := R30; R30 := R30[0x42b04007]
985 [-]: LOADK     R32 K79      ; R32 := "/Lotus/Language/Menu/Chat_ExceededSongLimitError"
986 [-]: OP_LOADBOOL R33 0 0      ; R33 := false
987 [-]: NEWTABLE  R34 0 1      ; R34 := {}
988 [-]: GETUPVAL  R35 U2       ; R35 := U2
989 [-]: GETTABLE  R35 R35 K153 ; R35 := R35["SHAWZIN_MAX_LINKS"]
990 [-]: SETTABLE  R34 K17 R35  ; R34["LIMIT"] := R35
991 [-]: CALL      R30 5 2      ; R30 := R30(R31,R32,R33,R34)
992 [-]: GETTABLE  R31 R0 K15   ; R31 := R0["MESSAGE_TYPE_SYSTEM"]
993 [-]: LOADK     R32 K4       ; R32 := ""
994 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
995 [-]: RETURN    R0 1         ; return 
996 [-]: GETUPVAL  R28 U9       ; R28 := U9
997 [-]: SETTABLE  R28 K47 R3   ; R28["Msg"] := R3
998 [-]: GETUPVAL  R28 U9       ; R28 := U9
999 [-]: SETTABLE  R28 K48 R13  ; R28["CurrItemString"] := R13
1000 [-]: GETGLOBAL R28 K12      ; R28 := 0xae91e43b
1001 [-]: SELF      R28 R28 K49  ; R29 := R28; R28 := R28[0xe4162eed]
1002 [-]: LOADK     R30 K154     ; R30 := "RecursiveShawzinReplace"
1003 [-]: GETUPVAL  R31 U9       ; R31 := U9
1004 [-]: GETTABLE  R31 R31 K150 ; R31 := R31["CachedShawzinLink"]
1005 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
1006 [-]: GETUPVAL  R28 U9       ; R28 := U9
1007 [-]: SETTABLE  R28 K150 K74 ; R28["CachedShawzinLink"] := nil
1008 [-]: RETURN    R0 1         ; return 
1009 [-]: JMP       1209         ; PC := 1209
1010 [-]: EQ        1 R15 K155   ; if R15 == 10.000000 then PC := 1208
1011 [-]: JMP       1208         ; PC := 1208
1012 [-]: LOADK     R28 K96      ; R28 := "/Lotus/Language/Menu/Chat_ExceededZawLimitError"
1013 [-]: GETUPVAL  R29 U9       ; R29 := U9
1014 [-]: GETTABLE  R29 R29 K95  ; R29 := R29["ZawLinks"]
1015 [-]: LOADK     R30 K97      ; R30 := "ZAW-"
1016 [-]: EQ        0 R15 K27    ; if R15 ~= 1.000000 then PC := 1023
1017 [-]: JMP       1023         ; PC := 1023
1018 [-]: GETUPVAL  R31 U9       ; R31 := U9
1019 [-]: GETTABLE  R29 R31 K99  ; R29 := R31["AmpLinks"]
1020 [-]: LOADK     R28 K100     ; R28 := "/Lotus/Language/Menu/Chat_ExceededAmpLimitError"
1021 [-]: LOADK     R30 K101     ; R30 := "AMP-"
1022 [-]: JMP       1043         ; PC := 1043
1023 [-]: EQ        0 R15 K121   ; if R15 ~= 6.000000 then PC := 1030
1024 [-]: JMP       1030         ; PC := 1030
1025 [-]: GETUPVAL  R31 U9       ; R31 := U9
1026 [-]: GETTABLE  R29 R31 K103 ; R29 := R31["MoaPetLinks"]
1027 [-]: LOADK     R28 K104     ; R28 := "/Lotus/Language/SolarisVenus/Chat_ExceededMoaPetLimitError"
1028 [-]: LOADK     R30 K105     ; R30 := "MOA-"
1029 [-]: JMP       1043         ; PC := 1043
1030 [-]: EQ        0 R15 K123   ; if R15 ~= 7.000000 then PC := 1037
1031 [-]: JMP       1037         ; PC := 1037
1032 [-]: GETUPVAL  R31 U9       ; R31 := U9
1033 [-]: GETTABLE  R29 R31 K107 ; R29 := R31["KdriveLinks"]
1034 [-]: LOADK     R28 K108     ; R28 := "/Lotus/Language/SolarisVenus/Chat_ExceededHBLimitError"
1035 [-]: LOADK     R30 K109     ; R30 := "KDR-"
1036 [-]: JMP       1043         ; PC := 1043
1037 [-]: EQ        0 R15 K125   ; if R15 ~= 2.000000 then PC := 1043
1038 [-]: JMP       1043         ; PC := 1043
1039 [-]: GETUPVAL  R31 U9       ; R31 := U9
1040 [-]: GETTABLE  R29 R31 K111 ; R29 := R31["KitgunLinks"]
1041 [-]: LOADK     R28 K112     ; R28 := "/Lotus/Language/SolarisVenus/Chat_ExceededKitgunLimitError"
1042 [-]: LOADK     R30 K113     ; R30 := "KIT-"
1043 [-]: MOVE      R31 R7       ; R31 := R7
1044 [-]: MOVE      R32 R15      ; R32 := R15
1045 [-]: CALL      R31 2 2      ; R31 := R31(R32)
1046 [-]: MOVE      R32 R6       ; R32 := R6
1047 [-]: MOVE      R33 R29      ; R33 := R29
1048 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1049 [-]: LE        0 R31 R32    ; if R31 > R32 then PC := 1063
1050 [-]: JMP       1063         ; PC := 1063
1051 [-]: SELF      R32 R0 K11   ; R33 := R0; R32 := R0[0x566ff49e]
1052 [-]: GETGLOBAL R34 K12      ; R34 := 0xae91e43b
1053 [-]: SELF      R34 R34 K13  ; R35 := R34; R34 := R34[0x42b04007]
1054 [-]: MOVE      R36 R28      ; R36 := R28
1055 [-]: OP_LOADBOOL R37 0 0      ; R37 := false
1056 [-]: NEWTABLE  R38 0 1      ; R38 := {}
1057 [-]: SETTABLE  R38 K17 R31  ; R38["LIMIT"] := R31
1058 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
1059 [-]: GETTABLE  R35 R0 K15   ; R35 := R0["MESSAGE_TYPE_SYSTEM"]
1060 [-]: LOADK     R36 K4       ; R36 := ""
1061 [-]: CALL      R32 5 1      ; R32(R33,R34,R35,R36)
1062 [-]: RETURN    R0 1         ; return 
1063 [-]: GETUPVAL  R32 U8       ; R32 := U8
1064 [-]: GETTABLE  R32 R32 K115 ; R82 := R32[0x257627f5]
1065 [-]: MOVE      R33 R15      ; R33 := R15
1066 [-]: CALL      R32 2 2      ; R32 := R32(R33)
1067 [-]: LOADNIL   R33 R33      ; R33 := nil
1068 [-]: GETGLOBAL R34 K60      ; R34 := 0xc8802016
1069 [-]: MOVE      R35 R32      ; R35 := R32
1070 [-]: CALL      R34 2 4      ; R34,R35,R36 := R34(R35)
1071 [-]: JMP       1194         ; PC := 1194
1072 [-]: GETTABLE  R39 R38 K156 ; R39 := R38["Name"]
1073 [-]: EQ        1 R39 K74    ; if R39 == nil then PC := 1194
1074 [-]: JMP       1194         ; PC := 1194
1075 [-]: GETGLOBAL R39 K28      ; R39 := 0x83e41587
1076 [-]: GETTABLE  R40 R38 K156 ; R40 := R38["Name"]
1077 [-]: CALL      R39 2 2      ; R39 := R39(R40)
1078 [-]: EQ        0 R39 R14    ; if R39 ~= R14 then PC := 1194
1079 [-]: JMP       1194         ; PC := 1194
1080 [-]: GETUPVAL  R39 U13      ; R39 := U13
1081 [-]: GETTABLE  R40 R38 K157 ; R40 := R38["RawItem"]
1082 [-]: MOVE      R41 R15      ; R41 := R15
1083 [-]: CALL      R39 3 2      ; R39 := R39(R40,R41)
1084 [-]: EQ        0 R39 K74    ; if R39 ~= nil then PC := 1087
1085 [-]: JMP       1087         ; PC := 1087
1086 [-]: RETURN    R0 1         ; return 
1087 [-]: LOADNIL   R40 R40      ; R40 := nil
1088 [-]: EQ        0 R15 K121   ; if R15 ~= 6.000000 then PC := 1110
1089 [-]: JMP       1110         ; PC := 1110
1090 [-]: GETGLOBAL R41 K158     ; R41 := 0x50c37abe
1091 [-]: GETTABLE  R42 R38 K157 ; R42 := R38["RawItem"]
1092 [-]: SELF      R42 R42 K159 ; R43 := R42; R42 := R42[0xdbfbf6c0]
1093 [-]: CONST     R44 3        ; R44 := 3.000000
1094 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
1095 [-]: GETTABLE  R43 R39 K27  ; R43 := R39[1.000000]
1096 [-]: GETGLOBAL R44 K160     ; R44 := 0x2c53eb41
1097 [-]: LEN       R44 R44      ; R44 := # R44
1098 [-]: GETTABLE  R45 R39 K125 ; R45 := R39[2.000000]
1099 [-]: GETGLOBAL R46 K161     ; R46 := 0x3cf8b1e7
1100 [-]: LEN       R46 R46      ; R46 := # R46
1101 [-]: GETTABLE  R47 R39 K126 ; R47 := R39[3.000000]
1102 [-]: GETGLOBAL R48 K162     ; R48 := 0xbaa5088f
1103 [-]: LEN       R48 R48      ; R48 := # R48
1104 [-]: GETTABLE  R49 R39 K163 ; R49 := R39[4.000000]
1105 [-]: GETGLOBAL R50 K164     ; R50 := 0x0704bc8b
1106 [-]: LEN       R50 R50      ; R50 := # R50
1107 [-]: CALL      R41 10 2     ; R41 := R41(R42,R43,R44,R45,R46,R47,R48,R49,R50)
1108 [-]: MOVE      R40 R41      ; R40 := R41
1109 [-]: JMP       1188         ; PC := 1188
1110 [-]: EQ        0 R15 K123   ; if R15 ~= 7.000000 then PC := 1132
1111 [-]: JMP       1132         ; PC := 1132
1112 [-]: GETGLOBAL R41 K158     ; R41 := 0x50c37abe
1113 [-]: GETTABLE  R42 R38 K157 ; R42 := R38["RawItem"]
1114 [-]: SELF      R42 R42 K159 ; R43 := R42; R42 := R42[0xdbfbf6c0]
1115 [-]: CONST     R44 3        ; R44 := 3.000000
1116 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
1117 [-]: GETTABLE  R43 R39 K27  ; R43 := R39[1.000000]
1118 [-]: GETGLOBAL R44 K165     ; R44 := 0xc40a6da3
1119 [-]: LEN       R44 R44      ; R44 := # R44
1120 [-]: GETTABLE  R45 R39 K125 ; R45 := R39[2.000000]
1121 [-]: GETGLOBAL R46 K166     ; R46 := 0xe85256f6
1122 [-]: LEN       R46 R46      ; R46 := # R46
1123 [-]: GETTABLE  R47 R39 K126 ; R47 := R39[3.000000]
1124 [-]: GETGLOBAL R48 K167     ; R48 := 0x9ab3ce7f
1125 [-]: LEN       R48 R48      ; R48 := # R48
1126 [-]: GETTABLE  R49 R39 K163 ; R49 := R39[4.000000]
1127 [-]: GETGLOBAL R50 K168     ; R50 := 0x39ea2417
1128 [-]: LEN       R50 R50      ; R50 := # R50
1129 [-]: CALL      R41 10 2     ; R41 := R41(R42,R43,R44,R45,R46,R47,R48,R49,R50)
1130 [-]: MOVE      R40 R41      ; R40 := R41
1131 [-]: JMP       1188         ; PC := 1188
1132 [-]: EQ        0 R15 K27    ; if R15 ~= 1.000000 then PC := 1151
1133 [-]: JMP       1151         ; PC := 1151
1134 [-]: GETGLOBAL R41 K158     ; R41 := 0x50c37abe
1135 [-]: GETTABLE  R42 R38 K157 ; R42 := R38["RawItem"]
1136 [-]: SELF      R42 R42 K159 ; R43 := R42; R42 := R42[0xdbfbf6c0]
1137 [-]: CONST     R44 3        ; R44 := 3.000000
1138 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
1139 [-]: GETTABLE  R43 R39 K27  ; R43 := R39[1.000000]
1140 [-]: GETGLOBAL R44 K169     ; R44 := 0x079ca045
1141 [-]: LEN       R44 R44      ; R44 := # R44
1142 [-]: GETTABLE  R45 R39 K125 ; R45 := R39[2.000000]
1143 [-]: GETGLOBAL R46 K170     ; R46 := 0x31047143
1144 [-]: LEN       R46 R46      ; R46 := # R46
1145 [-]: GETTABLE  R47 R39 K126 ; R47 := R39[3.000000]
1146 [-]: GETGLOBAL R48 K171     ; R48 := 0xdccd285d
1147 [-]: LEN       R48 R48      ; R48 := # R48
1148 [-]: CALL      R41 8 2      ; R41 := R41(R42,R43,R44,R45,R46,R47,R48)
1149 [-]: MOVE      R40 R41      ; R40 := R41
1150 [-]: JMP       1188         ; PC := 1188
1151 [-]: EQ        1 R15 K125   ; if R15 == 2.000000 then PC := 1155
1152 [-]: JMP       1155         ; PC := 1155
1153 [-]: EQ        0 R15 K126   ; if R15 ~= 3.000000 then PC := 1172
1154 [-]: JMP       1172         ; PC := 1172
1155 [-]: GETGLOBAL R41 K158     ; R41 := 0x50c37abe
1156 [-]: GETTABLE  R42 R38 K157 ; R42 := R38["RawItem"]
1157 [-]: SELF      R42 R42 K159 ; R43 := R42; R42 := R42[0xdbfbf6c0]
1158 [-]: CONST     R44 3        ; R44 := 3.000000
1159 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
1160 [-]: GETTABLE  R43 R39 K27  ; R43 := R39[1.000000]
1161 [-]: GETGLOBAL R44 K172     ; R44 := 0x54d06231
1162 [-]: LEN       R44 R44      ; R44 := # R44
1163 [-]: GETTABLE  R45 R39 K125 ; R45 := R39[2.000000]
1164 [-]: GETGLOBAL R46 K173     ; R46 := 0x925a60af
1165 [-]: LEN       R46 R46      ; R46 := # R46
1166 [-]: GETTABLE  R47 R39 K126 ; R47 := R39[3.000000]
1167 [-]: GETGLOBAL R48 K174     ; R48 := 0x0f7c3ad1
1168 [-]: LEN       R48 R48      ; R48 := # R48
1169 [-]: CALL      R41 8 2      ; R41 := R41(R42,R43,R44,R45,R46,R47,R48)
1170 [-]: MOVE      R40 R41      ; R40 := R41
1171 [-]: JMP       1188         ; PC := 1188
1172 [-]: GETGLOBAL R41 K158     ; R41 := 0x50c37abe
1173 [-]: GETTABLE  R42 R38 K157 ; R42 := R38["RawItem"]
1174 [-]: SELF      R42 R42 K159 ; R43 := R42; R42 := R42[0xdbfbf6c0]
1175 [-]: CONST     R44 3        ; R44 := 3.000000
1176 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
1177 [-]: GETTABLE  R43 R39 K27  ; R43 := R39[1.000000]
1178 [-]: GETGLOBAL R44 K175     ; R44 := 0x9c023f17
1179 [-]: LEN       R44 R44      ; R44 := # R44
1180 [-]: GETTABLE  R45 R39 K125 ; R45 := R39[2.000000]
1181 [-]: GETGLOBAL R46 K176     ; R46 := 0xbd493ed1
1182 [-]: LEN       R46 R46      ; R46 := # R46
1183 [-]: GETTABLE  R47 R39 K126 ; R47 := R39[3.000000]
1184 [-]: GETGLOBAL R48 K177     ; R48 := 0x1da1be95
1185 [-]: LEN       R48 R48      ; R48 := # R48
1186 [-]: CALL      R41 8 2      ; R41 := R41(R42,R43,R44,R45,R46,R47,R48)
1187 [-]: MOVE      R40 R41      ; R40 := R41
1188 [-]: MOVE      R41 R30      ; R41 := R30
1189 [-]: GETTABLE  R42 R38 K156 ; R42 := R38["Name"]
1190 [-]: LOADK     R43 K71      ; R43 := ":"
1191 [-]: MOVE      R44 R40      ; R44 := R40
1192 [-]: CONCAT    R33 R41 R44  ; R33 := R41 .. R42 .. R43 .. R44
1193 [-]: JMP       1196         ; PC := 1196
1194 [-]: TFORLOOP  R34 2        ; R37,R38 :=  R34(R35,R36); if R37 ~= nil then begin PC = 1072; R36 := R37 end
1195 [-]: JMP       1072         ; PC := 1072
1196 [-]: EQ        1 R33 K74    ; if R33 == nil then PC := 1206
1197 [-]: JMP       1206         ; PC := 1206
1198 [-]: GETUPVAL  R41 U11      ; R41 := U11
1199 [-]: MOVE      R42 R3       ; R42 := R3
1200 [-]: MOVE      R43 R13      ; R43 := R13
1201 [-]: MOVE      R44 R33      ; R44 := R33
1202 [-]: MOVE      R45 R29      ; R45 := R29
1203 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1204 [-]: RETURN    R0 1         ; return 
1205 [-]: JMP       1209         ; PC := 1209
1206 [-]: ADD       R10 R12 K27  ; R10 := R12 + 1.000000
1207 [-]: JMP       1209         ; PC := 1209
1208 [-]: ADD       R10 R12 K27  ; R10 := R12 + 1.000000
1209 [-]: CLOSE     R13          ; SAVE R13,...
1210 [-]: JMP       91           ; PC := 91
1211 [-]: JMP       1213         ; PC := 1213
1212 [-]: JMP       91           ; PC := 91
1213 [-]: MOVE      R13 R6       ; R13 := R6
1214 [-]: GETUPVAL  R14 U9       ; R14 := U9
1215 [-]: GETTABLE  R14 R14 K38  ; R14 := R14["OmegaLinks"]
1216 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1217 [-]: LT        1 K37 R13    ; if 0.000000 < R13 then PC := 1273
1218 [-]: JMP       1273         ; PC := 1273
1219 [-]: MOVE      R13 R6       ; R13 := R6
1220 [-]: GETUPVAL  R14 U9       ; R14 := U9
1221 [-]: GETTABLE  R14 R14 K77  ; R14 := R14["SongLinks"]
1222 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1223 [-]: LT        1 K37 R13    ; if 0.000000 < R13 then PC := 1273
1224 [-]: JMP       1273         ; PC := 1273
1225 [-]: MOVE      R13 R6       ; R13 := R6
1226 [-]: GETUPVAL  R14 U9       ; R14 := U9
1227 [-]: GETTABLE  R14 R14 K95  ; R14 := R14["ZawLinks"]
1228 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1229 [-]: LT        1 K37 R13    ; if 0.000000 < R13 then PC := 1273
1230 [-]: JMP       1273         ; PC := 1273
1231 [-]: MOVE      R13 R6       ; R13 := R6
1232 [-]: GETUPVAL  R14 U9       ; R14 := U9
1233 [-]: GETTABLE  R14 R14 K99  ; R14 := R14["AmpLinks"]
1234 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1235 [-]: LT        1 K37 R13    ; if 0.000000 < R13 then PC := 1273
1236 [-]: JMP       1273         ; PC := 1273
1237 [-]: MOVE      R13 R6       ; R13 := R6
1238 [-]: GETUPVAL  R14 U9       ; R14 := U9
1239 [-]: GETTABLE  R14 R14 K103 ; R14 := R14["MoaPetLinks"]
1240 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1241 [-]: LT        1 K37 R13    ; if 0.000000 < R13 then PC := 1273
1242 [-]: JMP       1273         ; PC := 1273
1243 [-]: MOVE      R13 R6       ; R13 := R6
1244 [-]: GETUPVAL  R14 U9       ; R14 := U9
1245 [-]: GETTABLE  R14 R14 K107 ; R14 := R14["KdriveLinks"]
1246 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1247 [-]: LT        1 K37 R13    ; if 0.000000 < R13 then PC := 1273
1248 [-]: JMP       1273         ; PC := 1273
1249 [-]: MOVE      R13 R6       ; R13 := R6
1250 [-]: GETUPVAL  R14 U9       ; R14 := U9
1251 [-]: GETTABLE  R14 R14 K111 ; R14 := R14["KitgunLinks"]
1252 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1253 [-]: LT        1 K37 R13    ; if 0.000000 < R13 then PC := 1273
1254 [-]: JMP       1273         ; PC := 1273
1255 [-]: MOVE      R13 R6       ; R13 := R6
1256 [-]: GETUPVAL  R14 U9       ; R14 := U9
1257 [-]: GETTABLE  R14 R14 K129 ; R14 := R14["AppearanceLinks"]
1258 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1259 [-]: LT        1 K37 R13    ; if 0.000000 < R13 then PC := 1273
1260 [-]: JMP       1273         ; PC := 1273
1261 [-]: MOVE      R13 R6       ; R13 := R6
1262 [-]: GETUPVAL  R14 U9       ; R14 := U9
1263 [-]: GETTABLE  R14 R14 K142 ; R14 := R14["ModConfigLinks"]
1264 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1265 [-]: LT        1 K37 R13    ; if 0.000000 < R13 then PC := 1273
1266 [-]: JMP       1273         ; PC := 1273
1267 [-]: MOVE      R13 R6       ; R13 := R6
1268 [-]: GETUPVAL  R14 U9       ; R14 := U9
1269 [-]: GETTABLE  R14 R14 K152 ; R14 := R14["ShawzinLinks"]
1270 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1271 [-]: LT        0 K37 R13    ; if 0.000000 >= R13 then PC := 1289
1272 [-]: JMP       1289         ; PC := 1289
1273 [-]: NEWTABLE  R13 0 0      ; R13 := {}
1274 [-]: MOVE      R4 R13       ; R4 := R13
1275 [-]: NEWTABLE  R13 0 0      ; R13 := {}
1276 [-]: MOVE      R5 R13       ; R5 := R13
1277 [-]: GETGLOBAL R13 K2       ; R13 := 0x7b998233
1278 [-]: MOVE      R14 R3       ; R14 := R3
1279 [-]: CALL      R13 2 2      ; R13 := R13(R14)
1280 [-]: TEST      R13 1        ; if R13 then PC := 1289
1281 [-]: JMP       1289         ; PC := 1289
1282 [-]: EQ        1 R3 K4      ; if R3 == "" then PC := 1289
1283 [-]: JMP       1289         ; PC := 1289
1284 [-]: GETUPVAL  R13 U15      ; R13 := U15
1285 [-]: MOVE      R14 R3       ; R14 := R3
1286 [-]: MOVE      R15 R4       ; R15 := R4
1287 [-]: MOVE      R16 R5       ; R16 := R5
1288 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
1289 [-]: GETUPVAL  R13 U9       ; R13 := U9
1290 [-]: GETTABLE  R13 R13 K178 ; R13 := R13["GuildReplacement"]
1291 [-]: TEST      R13 1        ; if R13 then PC := 1316
1292 [-]: JMP       1316         ; PC := 1316
1293 [-]: GETGLOBAL R13 K5       ; R13 := 0x7f5022cf
1294 [-]: GETTABLE  R13 R13 K24  ; R82 := R13[0xa5c556b9]
1295 [-]: MOVE      R14 R3       ; R14 := R3
1296 [-]: LOADK     R15 K179     ; R15 := "{GUILD=.*}"
1297 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
1298 [-]: TEST      R13 0        ; if not R13 then PC := 1316
1299 [-]: JMP       1316         ; PC := 1316
1300 [-]: GETGLOBAL R14 K180     ; R14 := mWindow
1301 [-]: SELF      R14 R14 K181 ; R15 := R14; R14 := R14[0x8b75da5a]
1302 [-]: CALL      R14 2 2      ; R14 := R14(R15)
1303 [-]: GETGLOBAL R15 K2       ; R15 := 0x7b998233
1304 [-]: MOVE      R16 R14      ; R16 := R14
1305 [-]: CALL      R15 2 2      ; R15 := R15(R16)
1306 [-]: TEST      R15 1        ; if R15 then PC := 1315
1307 [-]: JMP       1315         ; PC := 1315
1308 [-]: SELF      R15 R14 K182 ; R16 := R14; R15 := R14[0xd4f2405e]
1309 [-]: GETGLOBAL R17 K12      ; R17 := 0xae91e43b
1310 [-]: SELF      R17 R17 K13  ; R18 := R17; R17 := R17[0x42b04007]
1311 [-]: LOADK     R19 K183     ; R19 := "/Lotus/Language/Menu/Chat_InvalidClanLink"
1312 [-]: OP_LOADBOOL R20 0 0      ; R20 := false
1313 [-]: CALL      R17 4 0      ; R17,... := R17(R18,R19,R20)
1314 [-]: CALL      R15 0 1      ; R15(R16,...)
1315 [-]: RETURN    R0 1         ; return 
1316 [-]: GETUPVAL  R15 U9       ; R15 := U9
1317 [-]: GETTABLE  R15 R15 K178 ; R15 := R15["GuildReplacement"]
1318 [-]: TEST      R15 1        ; if R15 then PC := 1442
1319 [-]: JMP       1442         ; PC := 1442
1320 [-]: GETGLOBAL R15 K180     ; R15 := mWindow
1321 [-]: GETTABLE  R15 R15 K184 ; R15 := R15["mCachedGuildId"]
1322 [-]: EQ        1 R15 K74    ; if R15 == nil then PC := 1442
1323 [-]: JMP       1442         ; PC := 1442
1324 [-]: GETGLOBAL R15 K180     ; R15 := mWindow
1325 [-]: GETTABLE  R15 R15 K184 ; R15 := R15["mCachedGuildId"]
1326 [-]: EQ        1 R15 K4     ; if R15 == "" then PC := 1442
1327 [-]: JMP       1442         ; PC := 1442
1328 [-]: CONST     R10 1        ; R10 := 1.000000
1329 [-]: LEN       R15 R3       ; R15 := # R3
1330 [-]: LT        0 R10 R15    ; if R10 >= R15 then PC := 1400
1331 [-]: JMP       1400         ; PC := 1400
1332 [-]: GETGLOBAL R15 K5       ; R15 := 0x7f5022cf
1333 [-]: GETTABLE  R15 R15 K24  ; R82 := R15[0xa5c556b9]
1334 [-]: MOVE      R16 R3       ; R16 := R3
1335 [-]: LOADK     R17 K185     ; R17 := "{[^%]%[{}]*}"
1336 [-]: MOVE      R18 R10      ; R18 := R10
1337 [-]: CALL      R15 4 3      ; R15,R16 := R15(R16,R17,R18)
1338 [-]: TEST      R15 0        ; if not R15 then PC := 1400
1339 [-]: JMP       1400         ; PC := 1400
1340 [-]: GETGLOBAL R17 K5       ; R17 := 0x7f5022cf
1341 [-]: GETTABLE  R17 R17 K26  ; R82 := R17[0x1a94c9cc]
1342 [-]: MOVE      R18 R3       ; R18 := R3
1343 [-]: ADD       R19 R15 K27  ; R19 := R15 + 1.000000
1344 [-]: SUB       R20 R16 K27  ; R20 := R16 - 1.000000
1345 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
1346 [-]: GETGLOBAL R18 K5       ; R18 := 0x7f5022cf
1347 [-]: GETTABLE  R18 R18 K67  ; R82 := R18[0x04981ab3]
1348 [-]: MOVE      R19 R17      ; R19 := R17
1349 [-]: CALL      R18 2 2      ; R18 := R18(R19)
1350 [-]: LOADNIL   R19 R19      ; R19 := nil
1351 [-]: GETGLOBAL R20 K186     ; R20 := mGameData
1352 [-]: SELF      R20 R20 K187 ; R21 := R20; R20 := R20[0x6da6e186]
1353 [-]: CALL      R20 2 2      ; R20 := R20(R21)
1354 [-]: GETGLOBAL R21 K5       ; R21 := 0x7f5022cf
1355 [-]: GETTABLE  R21 R21 K67  ; R82 := R21[0x04981ab3]
1356 [-]: GETGLOBAL R22 K12      ; R22 := 0xae91e43b
1357 [-]: SELF      R22 R22 K13  ; R23 := R22; R22 := R22[0x42b04007]
1358 [-]: LOADK     R24 K188     ; R24 := "/Lotus/Language/Menu/Chat_ClanTitle"
1359 [-]: OP_LOADBOOL R25 0 0      ; R25 := false
1360 [-]: CALL      R22 4 0      ; R22,... := R22(R23,R24,R25)
1361 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
1362 [-]: EQ        1 R18 R21    ; if R18 == R21 then PC := 1370
1363 [-]: JMP       1370         ; PC := 1370
1364 [-]: GETGLOBAL R21 K5       ; R21 := 0x7f5022cf
1365 [-]: GETTABLE  R21 R21 K67  ; R82 := R21[0x04981ab3]
1366 [-]: MOVE      R22 R20      ; R22 := R20
1367 [-]: CALL      R21 2 2      ; R21 := R21(R22)
1368 [-]: EQ        0 R18 R21    ; if R18 ~= R21 then PC := 1371
1369 [-]: JMP       1371         ; PC := 1371
1370 [-]: MOVE      R19 R20      ; R19 := R20
1371 [-]: TEST      R19 0        ; if not R19 then PC := 1396
1372 [-]: JMP       1396         ; PC := 1396
1373 [-]: SELF      R21 R17 K189 ; R22 := R17; R21 := R17[0x66edf04f]
1374 [-]: LOADK     R23 K190     ; R23 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
1375 [-]: LOADK     R24 K191     ; R24 := "%%%0"
1376 [-]: CALL      R21 4 2      ; R21 := R21(R22,R23,R24)
1377 [-]: GETGLOBAL R22 K5       ; R22 := 0x7f5022cf
1378 [-]: GETTABLE  R22 R22 K189 ; R82 := R22[0x66edf04f]
1379 [-]: MOVE      R23 R3       ; R23 := R3
1380 [-]: LOADK     R24 K192     ; R24 := "{"
1381 [-]: MOVE      R25 R21      ; R25 := R21
1382 [-]: LOADK     R26 K193     ; R26 := "}"
1383 [-]: CONCAT    R24 R24 R26  ; R24 := R24 .. R25 .. R26
1384 [-]: LOADK     R25 K194     ; R25 := "{GUILD="
1385 [-]: GETGLOBAL R26 K180     ; R26 := mWindow
1386 [-]: GETTABLE  R26 R26 K184 ; R26 := R26["mCachedGuildId"]
1387 [-]: LOADK     R27 K71      ; R27 := ":"
1388 [-]: MOVE      R28 R19      ; R28 := R19
1389 [-]: LOADK     R29 K193     ; R29 := "}"
1390 [-]: CONCAT    R25 R25 R29  ; R25 := R25 .. R26 .. R27 .. R28 .. R29
1391 [-]: CONST     R26 1        ; R26 := 1.000000
1392 [-]: CALL      R22 5 2      ; R22 := R22(R23,R24,R25,R26)
1393 [-]: MOVE      R3 R22       ; R3 := R22
1394 [-]: GETUPVAL  R22 U9       ; R22 := U9
1395 [-]: SETTABLE  R22 K178 K195; R22["GuildReplacement"] := true
1396 [-]: ADD       R10 R16 K27  ; R10 := R16 + 1.000000
1397 [-]: JMP       1329         ; PC := 1329
1398 [-]: JMP       1400         ; PC := 1400
1399 [-]: JMP       1329         ; PC := 1329
1400 [-]: GETUPVAL  R22 U9       ; R22 := U9
1401 [-]: GETTABLE  R22 R22 K178 ; R22 := R22["GuildReplacement"]
1402 [-]: TEST      R22 0        ; if not R22 then PC := 1442
1403 [-]: JMP       1442         ; PC := 1442
1404 [-]: GETGLOBAL R22 K180     ; R22 := mWindow
1405 [-]: GETTABLE  R22 R22 K196 ; R22 := R22["mActivePanelName"]
1406 [-]: EQ        1 R22 K4     ; if R22 == "" then PC := 1442
1407 [-]: JMP       1442         ; PC := 1442
1408 [-]: GETUPVAL  R22 U9       ; R22 := U9
1409 [-]: SETTABLE  R22 K47 R3   ; R22["Msg"] := R3
1410 [-]: GETTABLE  R22 R0 K7    ; R22 := R0["mParent"]
1411 [-]: GETTABLE  R22 R22 K8   ; R22 := R22["mInputPanel"]
1412 [-]: GETTABLE  R22 R22 K9   ; R22 := R22["mMaxMsgLength"]
1413 [-]: GETTABLE  R23 R0 K7    ; R23 := R0["mParent"]
1414 [-]: GETTABLE  R23 R23 K8   ; R23 := R23["mInputPanel"]
1415 [-]: GETTABLE  R24 R0 K7    ; R24 := R0["mParent"]
1416 [-]: GETTABLE  R24 R24 K8   ; R24 := R24["mInputPanel"]
1417 [-]: GETTABLE  R24 R24 K10  ; R24 := R24["MAX_MSG_LIMIT"]
1418 [-]: SETTABLE  R23 K9 R24   ; R23[0x98453b6b] := R24
1419 [-]: GETGLOBAL R23 K180     ; R23 := mWindow
1420 [-]: GETTABLE  R23 R23 K197 ; R23 := R23["mPanelList"]
1421 [-]: GETGLOBAL R24 K180     ; R24 := mWindow
1422 [-]: GETTABLE  R24 R24 K196 ; R24 := R24["mActivePanelName"]
1423 [-]: GETTABLE  R23 R23 R24  ; R23 := R23[R24]
1424 [-]: SELF      R23 R23 K198 ; R24 := R23; R23 := R23[0x83b2653c]
1425 [-]: CALL      R23 2 2      ; R23 := R23(R24)
1426 [-]: TEST      R23 1        ; if R23 then PC := 1438
1427 [-]: JMP       1438         ; PC := 1438
1428 [-]: GETGLOBAL R23 K12      ; R23 := 0xae91e43b
1429 [-]: SELF      R23 R23 K199 ; R24 := R23; R23 := R23[0x5f56eeab]
1430 [-]: GETGLOBAL R25 K180     ; R25 := mWindow
1431 [-]: GETTABLE  R25 R25 K8   ; R25 := R25["mInputPanel"]
1432 [-]: GETTABLE  R25 R25 K200 ; R25 := R25["mClipPath"]
1433 [-]: LOADK     R26 K201     ; R26 := ".MessageBox"
1434 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
1435 [-]: CONST     R26 29       ; R26 := 29.000000
1436 [-]: LOADK     R27 K4       ; R27 := ""
1437 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
1438 [-]: GETTABLE  R23 R0 K7    ; R23 := R0["mParent"]
1439 [-]: GETTABLE  R23 R23 K8   ; R23 := R23["mInputPanel"]
1440 [-]: SETTABLE  R23 K9 R22   ; R23[0x98453b6b] := R22
1441 [-]: RETURN    R0 1         ; return 
1442 [-]: GETUPVAL  R23 U9       ; R23 := U9
1443 [-]: SETTABLE  R23 K178 K202; R23["GuildReplacement"] := false
1444 [-]: LOADK     R23 K203     ; R23 := "#"
1445 [-]: GETTABLE  R24 R0 K204  ; R24 := R0["mChannelName"]
1446 [-]: CONCAT    R23 R23 R24  ; R23 := R23 .. R24
1447 [-]: LEN       R24 R4       ; R24 := # R4
1448 [-]: GETGLOBAL R25 K5       ; R25 := 0x7f5022cf
1449 [-]: GETTABLE  R25 R25 K67  ; R82 := R25[0x04981ab3]
1450 [-]: GETTABLE  R26 R4 K27   ; R26 := R4[1.000000]
1451 [-]: CALL      R25 2 2      ; R25 := R25(R26)
1452 [-]: SETTABLE  R4 K27 R25   ; R4[0xd20f757a] := R25
1453 [-]: GETGLOBAL R25 K180     ; R25 := mWindow
1454 [-]: SELF      R25 R25 K181 ; R26 := R25; R25 := R25[0x8b75da5a]
1455 [-]: CALL      R25 2 2      ; R25 := R25(R26)
1456 [-]: GETGLOBAL R26 K205     ; R26 := 0xe7f2b02f
1457 [-]: SELF      R26 R26 K206 ; R27 := R26; R26 := R26[0x0b151d80]
1458 [-]: CALL      R26 2 2      ; R26 := R26(R27)
1459 [-]: CLOSURE   R27 15       ; R27 := closure(Function #94.5.16)
1460 [-]: MOVE      R0 R10       ; R0 := R10
1461 [-]: MOVE      R0 R3        ; R0 := R3
1462 [-]: GETUPVAL  R0 U6        ; R0 := U6
1463 [-]: GETUPVAL  R0 U9        ; R0 := U9
1464 [-]: OP_LOADBOOL R28 0 0      ; R28 := false
1465 [-]: GETTABLE  R29 R4 K27   ; R29 := R4[1.000000]
1466 [-]: EQ        1 R29 K207   ; if R29 == "/w" then PC := 1471
1467 [-]: JMP       1471         ; PC := 1471
1468 [-]: GETTABLE  R29 R4 K27   ; R29 := R4[1.000000]
1469 [-]: EQ        0 R29 K208   ; if R29 ~= "/whisper" then PC := 1593
1470 [-]: JMP       1593         ; PC := 1593
1471 [-]: GETGLOBAL R29 K19      ; R29 := 0x0032441c
1472 [-]: GETTABLE  R29 R29 K209 ; R29 := R29["StalkerMode"]
1473 [-]: TEST      R29 1        ; if R29 then PC := 1593
1474 [-]: JMP       1593         ; PC := 1593
1475 [-]: MOVE      R29 R27      ; R29 := R27
1476 [-]: CALL      R29 1 2      ; R29 := R29()
1477 [-]: TEST      R29 1        ; if R29 then PC := 1480
1478 [-]: JMP       1480         ; PC := 1480
1479 [-]: RETURN    R0 1         ; return 
1480 [-]: LE        0 K126 R24   ; if 3.000000 > R24 then PC := 1582
1481 [-]: JMP       1582         ; PC := 1582
1482 [-]: GETTABLE  R23 R5 K125  ; R23 := R5[2.000000]
1483 [-]: GETGLOBAL R29 K2       ; R29 := 0x7b998233
1484 [-]: GETGLOBAL R30 K186     ; R30 := mGameData
1485 [-]: CALL      R29 2 2      ; R29 := R29(R30)
1486 [-]: TEST      R29 1        ; if R29 then PC := 1507
1487 [-]: JMP       1507         ; PC := 1507
1488 [-]: GETGLOBAL R29 K186     ; R29 := mGameData
1489 [-]: SELF      R29 R29 K210 ; R30 := R29; R29 := R29[0x273a2275]
1490 [-]: MOVE      R31 R23      ; R31 := R23
1491 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
1492 [-]: TEST      R29 0        ; if not R29 then PC := 1507
1493 [-]: JMP       1507         ; PC := 1507
1494 [-]: SELF      R29 R0 K11   ; R30 := R0; R29 := R0[0x566ff49e]
1495 [-]: GETGLOBAL R31 K12      ; R31 := 0xae91e43b
1496 [-]: SELF      R31 R31 K13  ; R32 := R31; R31 := R31[0x42b04007]
1497 [-]: LOADK     R33 K211     ; R33 := "/Lotus/Language/Menu/Chat_CannotWhisperIgnoredPlayer"
1498 [-]: OP_LOADBOOL R34 0 0      ; R34 := false
1499 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
1500 [-]: MOVE      R32 R23      ; R32 := R23
1501 [-]: LOADK     R33 K212     ; R33 := "."
1502 [-]: CONCAT    R31 R31 R33  ; R31 := R31 .. R32 .. R33
1503 [-]: GETTABLE  R32 R0 K15   ; R32 := R0["MESSAGE_TYPE_SYSTEM"]
1504 [-]: LOADK     R33 K4       ; R33 := ""
1505 [-]: CALL      R29 5 1      ; R29(R30,R31,R32,R33)
1506 [-]: JMP       1591         ; PC := 1591
1507 [-]: GETGLOBAL R29 K2       ; R29 := 0x7b998233
1508 [-]: GETTABLE  R30 R0 K7    ; R30 := R0["mParent"]
1509 [-]: GETTABLE  R30 R30 K213 ; R30 := R30["mUser"]
1510 [-]: CALL      R29 2 2      ; R29 := R29(R30)
1511 [-]: TEST      R29 1        ; if R29 then PC := 1534
1512 [-]: JMP       1534         ; PC := 1534
1513 [-]: GETGLOBAL R29 K5       ; R29 := 0x7f5022cf
1514 [-]: GETTABLE  R29 R29 K67  ; R82 := R29[0x04981ab3]
1515 [-]: GETTABLE  R30 R0 K7    ; R30 := R0["mParent"]
1516 [-]: GETTABLE  R30 R30 K213 ; R30 := R30["mUser"]
1517 [-]: CALL      R29 2 2      ; R29 := R29(R30)
1518 [-]: GETGLOBAL R30 K5       ; R30 := 0x7f5022cf
1519 [-]: GETTABLE  R30 R30 K67  ; R82 := R30[0x04981ab3]
1520 [-]: MOVE      R31 R23      ; R31 := R23
1521 [-]: CALL      R30 2 2      ; R30 := R30(R31)
1522 [-]: EQ        0 R29 R30    ; if R29 ~= R30 then PC := 1534
1523 [-]: JMP       1534         ; PC := 1534
1524 [-]: SELF      R29 R0 K11   ; R30 := R0; R29 := R0[0x566ff49e]
1525 [-]: GETGLOBAL R31 K12      ; R31 := 0xae91e43b
1526 [-]: SELF      R31 R31 K13  ; R32 := R31; R31 := R31[0x42b04007]
1527 [-]: LOADK     R33 K214     ; R33 := "/Lotus/Language/Menu/Chat_CannotWhisperSelf"
1528 [-]: OP_LOADBOOL R34 0 0      ; R34 := false
1529 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
1530 [-]: GETTABLE  R32 R0 K15   ; R32 := R0["MESSAGE_TYPE_SYSTEM"]
1531 [-]: LOADK     R33 K4       ; R33 := ""
1532 [-]: CALL      R29 5 1      ; R29(R30,R31,R32,R33)
1533 [-]: JMP       1591         ; PC := 1591
1534 [-]: GETUPVAL  R29 U1       ; R29 := U1
1535 [-]: GETTABLE  R29 R29 K215 ; R82 := R29[0x5d3d561a]
1536 [-]: MOVE      R30 R23      ; R30 := R23
1537 [-]: LOADK     R31 K216     ; R31 := "[]"
1538 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
1539 [-]: EQ        1 R29 K37    ; if R29 == 0.000000 then PC := 1551
1540 [-]: JMP       1551         ; PC := 1551
1541 [-]: SELF      R29 R0 K11   ; R30 := R0; R29 := R0[0x566ff49e]
1542 [-]: GETGLOBAL R31 K12      ; R31 := 0xae91e43b
1543 [-]: SELF      R31 R31 K13  ; R32 := R31; R31 := R31[0x42b04007]
1544 [-]: LOADK     R33 K217     ; R33 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
1545 [-]: OP_LOADBOOL R34 0 0      ; R34 := false
1546 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
1547 [-]: GETTABLE  R32 R0 K15   ; R32 := R0["MESSAGE_TYPE_SYSTEM"]
1548 [-]: LOADK     R33 K4       ; R33 := ""
1549 [-]: CALL      R29 5 1      ; R29(R30,R31,R32,R33)
1550 [-]: JMP       1591         ; PC := 1591
1551 [-]: GETGLOBAL R29 K5       ; R29 := 0x7f5022cf
1552 [-]: GETTABLE  R29 R29 K24  ; R82 := R29[0xa5c556b9]
1553 [-]: MOVE      R30 R3       ; R30 := R3
1554 [-]: GETTABLE  R31 R4 K125  ; R31 := R4[2.000000]
1555 [-]: LOADK     R32 K218     ; R32 := " "
1556 [-]: CONCAT    R31 R31 R32  ; R31 := R31 .. R32
1557 [-]: CONST     R32 0        ; R32 := 0.000000
1558 [-]: OP_LOADBOOL R33 1 0      ; R33 := true
1559 [-]: CALL      R29 5 3      ; R29,R30 := R29(R30,R31,R32,R33)
1560 [-]: EQ        0 R30 K74    ; if R30 ~= nil then PC := 1563
1561 [-]: JMP       1563         ; PC := 1563
1562 [-]: RETURN    R0 1         ; return 
1563 [-]: GETGLOBAL R31 K5       ; R31 := 0x7f5022cf
1564 [-]: GETTABLE  R31 R31 K26  ; R82 := R31[0x1a94c9cc]
1565 [-]: MOVE      R32 R3       ; R32 := R3
1566 [-]: ADD       R33 R30 K27  ; R33 := R30 + 1.000000
1567 [-]: CONST     R34 -1       ; R34 := -1.000000
1568 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
1569 [-]: MOVE      R3 R31       ; R3 := R31
1570 [-]: GETGLOBAL R31 K2       ; R31 := 0x7b998233
1571 [-]: MOVE      R32 R26      ; R32 := R26
1572 [-]: CALL      R31 2 2      ; R31 := R31(R32)
1573 [-]: TEST      R31 1        ; if R31 then PC := 1591
1574 [-]: JMP       1591         ; PC := 1591
1575 [-]: SETUPVAL  R3 U16       ; U82 := 
1576 [-]: SETUPVAL  R23 U17      ; U82 := 
1577 [-]: SELF      R31 R26 K219 ; R32 := R26; R31 := R26[0x00dc7406]
1578 [-]: MOVE      R33 R23      ; R33 := R23
1579 [-]: LOADK     R34 K220     ; R34 := "PrivateConvoPlayerIDResultOutgoing"
1580 [-]: CALL      R31 4 1      ; R31(R32,R33,R34)
1581 [-]: JMP       1591         ; PC := 1591
1582 [-]: SELF      R31 R0 K11   ; R32 := R0; R31 := R0[0x566ff49e]
1583 [-]: GETGLOBAL R33 K12      ; R33 := 0xae91e43b
1584 [-]: SELF      R33 R33 K13  ; R34 := R33; R33 := R33[0x42b04007]
1585 [-]: LOADK     R35 K221     ; R35 := "/Lotus/Language/Menu/Chat_HelpWhisper"
1586 [-]: OP_LOADBOOL R36 0 0      ; R36 := false
1587 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
1588 [-]: GETTABLE  R34 R0 K15   ; R34 := R0["MESSAGE_TYPE_SYSTEM"]
1589 [-]: LOADK     R35 K4       ; R35 := ""
1590 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
1591 [-]: RETURN    R0 1         ; return 
1592 [-]: JMP       2795         ; PC := 2795
1593 [-]: GETTABLE  R31 R4 K27   ; R31 := R4[1.000000]
1594 [-]: EQ        0 R31 K222   ; if R31 ~= "/c" then PC := 1629
1595 [-]: JMP       1629         ; PC := 1629
1596 [-]: GETTABLE  R31 R0 K7    ; R31 := R0["mParent"]
1597 [-]: GETTABLE  R31 R31 K223 ; R31 := R31["mPanelShortcuts"]
1598 [-]: GETGLOBAL R32 K180     ; R32 := mWindow
1599 [-]: GETTABLE  R32 R32 K224 ; R32 := R32["CHANNEL_CLAN"]
1600 [-]: GETTABLE  R23 R31 R32  ; R23 := R31[R32]
1601 [-]: EQ        0 R23 K74    ; if R23 ~= nil then PC := 1604
1602 [-]: JMP       1604         ; PC := 1604
1603 [-]: RETURN    R0 1         ; return 
1604 [-]: GETTABLE  R31 R0 K7    ; R31 := R0["mParent"]
1605 [-]: SELF      R31 R31 K225 ; R32 := R31; R31 := R31[0x50fe191a]
1606 [-]: GETGLOBAL R33 K180     ; R33 := mWindow
1607 [-]: GETTABLE  R33 R33 K224 ; R33 := R33["CHANNEL_CLAN"]
1608 [-]: CALL      R31 3 1      ; R31(R32,R33)
1609 [-]: LT        0 K27 R24    ; if 1.000000 >= R24 then PC := 1627
1610 [-]: JMP       1627         ; PC := 1627
1611 [-]: GETGLOBAL R31 K5       ; R31 := 0x7f5022cf
1612 [-]: GETTABLE  R31 R31 K24  ; R82 := R31[0xa5c556b9]
1613 [-]: MOVE      R32 R3       ; R32 := R3
1614 [-]: LOADK     R33 K218     ; R33 := " "
1615 [-]: CALL      R31 3 3      ; R31,R32 := R31(R32,R33)
1616 [-]: EQ        0 R32 K74    ; if R32 ~= nil then PC := 1619
1617 [-]: JMP       1619         ; PC := 1619
1618 [-]: RETURN    R0 1         ; return 
1619 [-]: GETGLOBAL R33 K5       ; R33 := 0x7f5022cf
1620 [-]: GETTABLE  R33 R33 K26  ; R82 := R33[0x1a94c9cc]
1621 [-]: MOVE      R34 R3       ; R34 := R3
1622 [-]: ADD       R35 R32 K27  ; R35 := R32 + 1.000000
1623 [-]: CONST     R36 -1       ; R36 := -1.000000
1624 [-]: CALL      R33 4 2      ; R33 := R33(R34,R35,R36)
1625 [-]: MOVE      R3 R33       ; R3 := R33
1626 [-]: JMP       2795         ; PC := 2795
1627 [-]: RETURN    R0 1         ; return 
1628 [-]: JMP       2795         ; PC := 2795
1629 [-]: GETTABLE  R33 R4 K27   ; R33 := R4[1.000000]
1630 [-]: EQ        0 R33 K226   ; if R33 ~= "/d" then PC := 1665
1631 [-]: JMP       1665         ; PC := 1665
1632 [-]: GETTABLE  R33 R0 K7    ; R33 := R0["mParent"]
1633 [-]: GETTABLE  R33 R33 K223 ; R33 := R33["mPanelShortcuts"]
1634 [-]: GETGLOBAL R34 K180     ; R34 := mWindow
1635 [-]: GETTABLE  R34 R34 K227 ; R34 := R34["CHANNEL_COUNCIL"]
1636 [-]: GETTABLE  R23 R33 R34  ; R23 := R33[R34]
1637 [-]: EQ        0 R23 K74    ; if R23 ~= nil then PC := 1640
1638 [-]: JMP       1640         ; PC := 1640
1639 [-]: RETURN    R0 1         ; return 
1640 [-]: GETTABLE  R33 R0 K7    ; R33 := R0["mParent"]
1641 [-]: SELF      R33 R33 K225 ; R34 := R33; R33 := R33[0x50fe191a]
1642 [-]: GETGLOBAL R35 K180     ; R35 := mWindow
1643 [-]: GETTABLE  R35 R35 K227 ; R35 := R35["CHANNEL_COUNCIL"]
1644 [-]: CALL      R33 3 1      ; R33(R34,R35)
1645 [-]: LT        0 K27 R24    ; if 1.000000 >= R24 then PC := 1663
1646 [-]: JMP       1663         ; PC := 1663
1647 [-]: GETGLOBAL R33 K5       ; R33 := 0x7f5022cf
1648 [-]: GETTABLE  R33 R33 K24  ; R82 := R33[0xa5c556b9]
1649 [-]: MOVE      R34 R3       ; R34 := R3
1650 [-]: LOADK     R35 K218     ; R35 := " "
1651 [-]: CALL      R33 3 3      ; R33,R34 := R33(R34,R35)
1652 [-]: EQ        0 R34 K74    ; if R34 ~= nil then PC := 1655
1653 [-]: JMP       1655         ; PC := 1655
1654 [-]: RETURN    R0 1         ; return 
1655 [-]: GETGLOBAL R35 K5       ; R35 := 0x7f5022cf
1656 [-]: GETTABLE  R35 R35 K26  ; R82 := R35[0x1a94c9cc]
1657 [-]: MOVE      R36 R3       ; R36 := R3
1658 [-]: ADD       R37 R34 K27  ; R37 := R34 + 1.000000
1659 [-]: CONST     R38 -1       ; R38 := -1.000000
1660 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
1661 [-]: MOVE      R3 R35       ; R3 := R35
1662 [-]: JMP       2795         ; PC := 2795
1663 [-]: RETURN    R0 1         ; return 
1664 [-]: JMP       2795         ; PC := 2795
1665 [-]: GETTABLE  R35 R4 K27   ; R35 := R4[1.000000]
1666 [-]: EQ        0 R35 K228   ; if R35 ~= "/s" then PC := 1701
1667 [-]: JMP       1701         ; PC := 1701
1668 [-]: GETTABLE  R35 R0 K7    ; R35 := R0["mParent"]
1669 [-]: GETTABLE  R35 R35 K223 ; R35 := R35["mPanelShortcuts"]
1670 [-]: GETGLOBAL R36 K180     ; R36 := mWindow
1671 [-]: GETTABLE  R36 R36 K229 ; R36 := R36["CHANNEL_SESSION"]
1672 [-]: GETTABLE  R23 R35 R36  ; R23 := R35[R36]
1673 [-]: EQ        0 R23 K74    ; if R23 ~= nil then PC := 1676
1674 [-]: JMP       1676         ; PC := 1676
1675 [-]: RETURN    R0 1         ; return 
1676 [-]: GETTABLE  R35 R0 K7    ; R35 := R0["mParent"]
1677 [-]: SELF      R35 R35 K225 ; R36 := R35; R35 := R35[0x50fe191a]
1678 [-]: GETGLOBAL R37 K180     ; R37 := mWindow
1679 [-]: GETTABLE  R37 R37 K229 ; R37 := R37["CHANNEL_SESSION"]
1680 [-]: CALL      R35 3 1      ; R35(R36,R37)
1681 [-]: LT        0 K27 R24    ; if 1.000000 >= R24 then PC := 1699
1682 [-]: JMP       1699         ; PC := 1699
1683 [-]: GETGLOBAL R35 K5       ; R35 := 0x7f5022cf
1684 [-]: GETTABLE  R35 R35 K24  ; R82 := R35[0xa5c556b9]
1685 [-]: MOVE      R36 R3       ; R36 := R3
1686 [-]: LOADK     R37 K218     ; R37 := " "
1687 [-]: CALL      R35 3 3      ; R35,R36 := R35(R36,R37)
1688 [-]: EQ        0 R36 K74    ; if R36 ~= nil then PC := 1691
1689 [-]: JMP       1691         ; PC := 1691
1690 [-]: RETURN    R0 1         ; return 
1691 [-]: GETGLOBAL R37 K5       ; R37 := 0x7f5022cf
1692 [-]: GETTABLE  R37 R37 K26  ; R82 := R37[0x1a94c9cc]
1693 [-]: MOVE      R38 R3       ; R38 := R3
1694 [-]: ADD       R39 R36 K27  ; R39 := R36 + 1.000000
1695 [-]: CONST     R40 -1       ; R40 := -1.000000
1696 [-]: CALL      R37 4 2      ; R37 := R37(R38,R39,R40)
1697 [-]: MOVE      R3 R37       ; R3 := R37
1698 [-]: JMP       2795         ; PC := 2795
1699 [-]: RETURN    R0 1         ; return 
1700 [-]: JMP       2795         ; PC := 2795
1701 [-]: GETTABLE  R37 R4 K27   ; R37 := R4[1.000000]
1702 [-]: EQ        0 R37 K230   ; if R37 ~= "/r" then PC := 1737
1703 [-]: JMP       1737         ; PC := 1737
1704 [-]: GETTABLE  R37 R0 K7    ; R37 := R0["mParent"]
1705 [-]: GETTABLE  R37 R37 K223 ; R37 := R37["mPanelShortcuts"]
1706 [-]: GETGLOBAL R38 K180     ; R38 := mWindow
1707 [-]: GETTABLE  R38 R38 K231 ; R38 := R38["CHANNEL_HUB"]
1708 [-]: GETTABLE  R23 R37 R38  ; R23 := R37[R38]
1709 [-]: EQ        0 R23 K74    ; if R23 ~= nil then PC := 1712
1710 [-]: JMP       1712         ; PC := 1712
1711 [-]: RETURN    R0 1         ; return 
1712 [-]: GETTABLE  R37 R0 K7    ; R37 := R0["mParent"]
1713 [-]: SELF      R37 R37 K225 ; R38 := R37; R37 := R37[0x50fe191a]
1714 [-]: GETGLOBAL R39 K180     ; R39 := mWindow
1715 [-]: GETTABLE  R39 R39 K231 ; R39 := R39["CHANNEL_HUB"]
1716 [-]: CALL      R37 3 1      ; R37(R38,R39)
1717 [-]: LT        0 K27 R24    ; if 1.000000 >= R24 then PC := 1735
1718 [-]: JMP       1735         ; PC := 1735
1719 [-]: GETGLOBAL R37 K5       ; R37 := 0x7f5022cf
1720 [-]: GETTABLE  R37 R37 K24  ; R82 := R37[0xa5c556b9]
1721 [-]: MOVE      R38 R3       ; R38 := R3
1722 [-]: LOADK     R39 K218     ; R39 := " "
1723 [-]: CALL      R37 3 3      ; R37,R38 := R37(R38,R39)
1724 [-]: EQ        0 R38 K74    ; if R38 ~= nil then PC := 1727
1725 [-]: JMP       1727         ; PC := 1727
1726 [-]: RETURN    R0 1         ; return 
1727 [-]: GETGLOBAL R39 K5       ; R39 := 0x7f5022cf
1728 [-]: GETTABLE  R39 R39 K26  ; R82 := R39[0x1a94c9cc]
1729 [-]: MOVE      R40 R3       ; R40 := R3
1730 [-]: ADD       R41 R38 K27  ; R41 := R38 + 1.000000
1731 [-]: CONST     R42 -1       ; R42 := -1.000000
1732 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
1733 [-]: MOVE      R3 R39       ; R3 := R39
1734 [-]: JMP       2795         ; PC := 2795
1735 [-]: RETURN    R0 1         ; return 
1736 [-]: JMP       2795         ; PC := 2795
1737 [-]: GETTABLE  R39 R4 K27   ; R39 := R4[1.000000]
1738 [-]: EQ        0 R39 K232   ; if R39 ~= "/g" then PC := 1773
1739 [-]: JMP       1773         ; PC := 1773
1740 [-]: GETTABLE  R39 R0 K7    ; R39 := R0["mParent"]
1741 [-]: GETTABLE  R39 R39 K223 ; R39 := R39["mPanelShortcuts"]
1742 [-]: GETGLOBAL R40 K180     ; R40 := mWindow
1743 [-]: GETTABLE  R40 R40 K233 ; R40 := R40["CHANNEL_GLOBAL"]
1744 [-]: GETTABLE  R23 R39 R40  ; R23 := R39[R40]
1745 [-]: EQ        0 R23 K74    ; if R23 ~= nil then PC := 1748
1746 [-]: JMP       1748         ; PC := 1748
1747 [-]: RETURN    R0 1         ; return 
1748 [-]: GETTABLE  R39 R0 K7    ; R39 := R0["mParent"]
1749 [-]: SELF      R39 R39 K225 ; R40 := R39; R39 := R39[0x50fe191a]
1750 [-]: GETGLOBAL R41 K180     ; R41 := mWindow
1751 [-]: GETTABLE  R41 R41 K233 ; R41 := R41["CHANNEL_GLOBAL"]
1752 [-]: CALL      R39 3 1      ; R39(R40,R41)
1753 [-]: LT        0 K27 R24    ; if 1.000000 >= R24 then PC := 1771
1754 [-]: JMP       1771         ; PC := 1771
1755 [-]: GETGLOBAL R39 K5       ; R39 := 0x7f5022cf
1756 [-]: GETTABLE  R39 R39 K24  ; R82 := R39[0xa5c556b9]
1757 [-]: MOVE      R40 R3       ; R40 := R3
1758 [-]: LOADK     R41 K218     ; R41 := " "
1759 [-]: CALL      R39 3 3      ; R39,R40 := R39(R40,R41)
1760 [-]: EQ        0 R40 K74    ; if R40 ~= nil then PC := 1763
1761 [-]: JMP       1763         ; PC := 1763
1762 [-]: RETURN    R0 1         ; return 
1763 [-]: GETGLOBAL R41 K5       ; R41 := 0x7f5022cf
1764 [-]: GETTABLE  R41 R41 K26  ; R82 := R41[0x1a94c9cc]
1765 [-]: MOVE      R42 R3       ; R42 := R3
1766 [-]: ADD       R43 R40 K27  ; R43 := R40 + 1.000000
1767 [-]: CONST     R44 -1       ; R44 := -1.000000
1768 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
1769 [-]: MOVE      R3 R41       ; R3 := R41
1770 [-]: JMP       2795         ; PC := 2795
1771 [-]: RETURN    R0 1         ; return 
1772 [-]: JMP       2795         ; PC := 2795
1773 [-]: GETTABLE  R41 R4 K27   ; R41 := R4[1.000000]
1774 [-]: EQ        1 R41 K234   ; if R41 == "/?" then PC := 1782
1775 [-]: JMP       1782         ; PC := 1782
1776 [-]: GETTABLE  R41 R4 K27   ; R41 := R4[1.000000]
1777 [-]: EQ        1 R41 K235   ; if R41 == "/help" then PC := 1782
1778 [-]: JMP       1782         ; PC := 1782
1779 [-]: GETTABLE  R41 R4 K27   ; R41 := R4[1.000000]
1780 [-]: EQ        0 R41 K236   ; if R41 ~= "/h" then PC := 1988
1781 [-]: JMP       1988         ; PC := 1988
1782 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1783 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1784 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1785 [-]: LOADK     R45 K237     ; R45 := "/Lotus/Language/Menu/Chat_HelpGlobal"
1786 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1787 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1788 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1789 [-]: LOADK     R45 K4       ; R45 := ""
1790 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1791 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1792 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1793 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1794 [-]: LOADK     R45 K238     ; R45 := "/Lotus/Language/Menu/Chat_HelpClan"
1795 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1796 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1797 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1798 [-]: LOADK     R45 K4       ; R45 := ""
1799 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1800 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1801 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1802 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1803 [-]: LOADK     R45 K239     ; R45 := "/Lotus/Language/Menu/Chat_HelpSquad"
1804 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1805 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1806 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1807 [-]: LOADK     R45 K4       ; R45 := ""
1808 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1809 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1810 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1811 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1812 [-]: LOADK     R45 K240     ; R45 := "/Lotus/Language/Menu/Chat_HelpHub"
1813 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1814 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1815 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1816 [-]: LOADK     R45 K4       ; R45 := ""
1817 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1818 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1819 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1820 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1821 [-]: LOADK     R45 K241     ; R45 := "/Lotus/Language/Menu/Chat_HelpCouncil"
1822 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1823 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1824 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1825 [-]: LOADK     R45 K4       ; R45 := ""
1826 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1827 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1828 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1829 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1830 [-]: LOADK     R45 K221     ; R45 := "/Lotus/Language/Menu/Chat_HelpWhisper"
1831 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1832 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1833 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1834 [-]: LOADK     R45 K4       ; R45 := ""
1835 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1836 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1837 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1838 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1839 [-]: LOADK     R45 K242     ; R45 := "/Lotus/Language/Menu/Chat_HelpIgnore"
1840 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1841 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1842 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1843 [-]: LOADK     R45 K4       ; R45 := ""
1844 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1845 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1846 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1847 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1848 [-]: LOADK     R45 K243     ; R45 := "/Lotus/Language/Menu/Chat_HelpTabSwitch"
1849 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1850 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1851 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1852 [-]: LOADK     R45 K4       ; R45 := ""
1853 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1854 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1855 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1856 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1857 [-]: LOADK     R45 K244     ; R45 := "/Lotus/Language/Menu/Chat_AddFriendHelp_Windows"
1858 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1859 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1860 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1861 [-]: LOADK     R45 K4       ; R45 := ""
1862 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1863 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1864 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1865 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1866 [-]: LOADK     R45 K245     ; R45 := "/Lotus/Language/Menu/Chat_RemoveFriendHelp"
1867 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1868 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1869 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1870 [-]: LOADK     R45 K4       ; R45 := ""
1871 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1872 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1873 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1874 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1875 [-]: LOADK     R45 K246     ; R45 := "/Lotus/Language/Menu/Chat_HelpMotd"
1876 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1877 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1878 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1879 [-]: LOADK     R45 K4       ; R45 := ""
1880 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1881 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1882 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1883 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1884 [-]: LOADK     R45 K247     ; R45 := "/Lotus/Language/Menu/Chat_HelpInvite"
1885 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1886 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1887 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1888 [-]: LOADK     R45 K4       ; R45 := ""
1889 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1890 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1891 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1892 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1893 [-]: LOADK     R45 K248     ; R45 := "/Lotus/Language/Menu/Chat_HelpProfile"
1894 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1895 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1896 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1897 [-]: LOADK     R45 K4       ; R45 := ""
1898 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1899 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1900 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1901 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1902 [-]: LOADK     R45 K249     ; R45 := "/Lotus/Language/Menu/Chat_HelpGoto"
1903 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1904 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1905 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1906 [-]: LOADK     R45 K4       ; R45 := ""
1907 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1908 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1909 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1910 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1911 [-]: LOADK     R45 K250     ; R45 := "/Lotus/Language/Menu/Chat_HelpUnstuck"
1912 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1913 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1914 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1915 [-]: LOADK     R45 K4       ; R45 := ""
1916 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1917 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1918 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1919 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1920 [-]: LOADK     R45 K251     ; R45 := "/Lotus/Language/Menu/Chat_HelpJoin"
1921 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1922 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1923 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1924 [-]: LOADK     R45 K4       ; R45 := ""
1925 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1926 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1927 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1928 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1929 [-]: LOADK     R45 K252     ; R45 := "/Lotus/Language/SystemMessages/Chat_HelpDND"
1930 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1931 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1932 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1933 [-]: LOADK     R45 K4       ; R45 := ""
1934 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1935 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1936 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1937 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1938 [-]: LOADK     R45 K253     ; R45 := "/Lotus/Language/SystemMessages/Chat_HelpNormal"
1939 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1940 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1941 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1942 [-]: LOADK     R45 K4       ; R45 := ""
1943 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1944 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1945 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1946 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1947 [-]: LOADK     R45 K254     ; R45 := "/Lotus/Language/Menu/Chat_HelpItemLink"
1948 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1949 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1950 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1951 [-]: LOADK     R45 K4       ; R45 := ""
1952 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1953 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1954 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1955 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1956 [-]: LOADK     R45 K255     ; R45 := "/Lotus/Language/Menu/Chat_HelpGuildLink"
1957 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1958 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1959 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1960 [-]: LOADK     R45 K4       ; R45 := ""
1961 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1962 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1963 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1964 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1965 [-]: LOADK     R45 K256     ; R45 := "/Lotus/Language/Menu/Chat_HelpUserLink"
1966 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1967 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1968 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1969 [-]: LOADK     R45 K4       ; R45 := ""
1970 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1971 [-]: GETGLOBAL R41 K257     ; R41 := 0x34291f5c
1972 [-]: LOADK     R42 K258     ; R42 := true
1973 [-]: GETTABLE  R41 R41 R42  ; R41 := R41[R42]
1974 [-]: CALL      R41 1 2      ; R41 := R41()
1975 [-]: TEST      R41 0        ; if not R41 then PC := 1986
1976 [-]: JMP       1986         ; PC := 1986
1977 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
1978 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
1979 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
1980 [-]: LOADK     R45 K259     ; R45 := "/Lotus/Language/Menu/Chat_HelpGamertags"
1981 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
1982 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
1983 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
1984 [-]: LOADK     R45 K4       ; R45 := ""
1985 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
1986 [-]: RETURN    R0 1         ; return 
1987 [-]: JMP       2795         ; PC := 2795
1988 [-]: CONST     R41 1        ; R41 := 1.000000
1989 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
1990 [-]: LOADK     R42 K260     ; R42 := "/t"
1991 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2002
1992 [-]: JMP       2002         ; PC := 2002
1993 [-]: GETTABLE  R41 R0 K7    ; R41 := R0["mParent"]
1994 [-]: LOADK     R43 K261     ; R43 := true
1995 [-]: SELF      R41 R41 R43  ; R42 := R41; R41 := R41[R43]
1996 [-]: GETUPVAL  R43 U1       ; R43 := U1
1997 [-]: LOADK     R44 K262     ; R44 := "INCREMENT"
1998 [-]: GETTABLE  R43 R43 R44  ; R43 := R43[R44]
1999 [-]: CALL      R41 3 1      ; R41(R42,R43)
2000 [-]: RETURN    R0 1         ; return 
2001 [-]: JMP       2795         ; PC := 2795
2002 [-]: CONST     R41 1        ; R41 := 1.000000
2003 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2004 [-]: LOADK     R42 K263     ; R42 := "/i"
2005 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2012
2006 [-]: JMP       2012         ; PC := 2012
2007 [-]: CONST     R41 1        ; R41 := 1.000000
2008 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2009 [-]: LOADK     R42 K264     ; R42 := "/ignore"
2010 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2052
2011 [-]: JMP       2052         ; PC := 2052
2012 [-]: LEN       R41 R4       ; R41 := # R4
2013 [-]: CONST     R42 2        ; R42 := 2.000000
2014 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2041
2015 [-]: JMP       2041         ; PC := 2041
2016 [-]: GETUPVAL  R41 U1       ; R41 := U1
2017 [-]: GETTABLE  R41 R41 K215 ; R82 := R41[0x5d3d561a]
2018 [-]: CONST     R42 2        ; R42 := 2.000000
2019 [-]: GETTABLE  R42 R5 R42   ; R42 := R5[R42]
2020 [-]: LOADK     R43 K216     ; R43 := "[]"
2021 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
2022 [-]: CONST     R42 0        ; R42 := 0.000000
2023 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2034
2024 [-]: JMP       2034         ; PC := 2034
2025 [-]: GETGLOBAL R41 K180     ; R41 := mWindow
2026 [-]: SELF      R41 R41 K182 ; R42 := R41; R41 := R41[0xd4f2405e]
2027 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
2028 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
2029 [-]: LOADK     R45 K217     ; R45 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
2030 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
2031 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2032 [-]: CALL      R41 0 1      ; R41(R42,...)
2033 [-]: JMP       2050         ; PC := 2050
2034 [-]: GETTABLE  R41 R0 K7    ; R41 := R0["mParent"]
2035 [-]: LOADK     R43 K265     ; R43 := true
2036 [-]: SELF      R41 R41 R43  ; R42 := R41; R41 := R41[R43]
2037 [-]: CONST     R43 2        ; R43 := 2.000000
2038 [-]: GETTABLE  R43 R5 R43   ; R43 := R5[R43]
2039 [-]: CALL      R41 3 1      ; R41(R42,R43)
2040 [-]: JMP       2050         ; PC := 2050
2041 [-]: SELF      R41 R0 K11   ; R42 := R0; R41 := R0[0x566ff49e]
2042 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
2043 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
2044 [-]: LOADK     R45 K242     ; R45 := "/Lotus/Language/Menu/Chat_HelpIgnore"
2045 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
2046 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
2047 [-]: GETTABLE  R44 R0 K15   ; R44 := R0["MESSAGE_TYPE_SYSTEM"]
2048 [-]: LOADK     R45 K4       ; R45 := ""
2049 [-]: CALL      R41 5 1      ; R41(R42,R43,R44,R45)
2050 [-]: RETURN    R0 1         ; return 
2051 [-]: JMP       2795         ; PC := 2795
2052 [-]: CONST     R41 1        ; R41 := 1.000000
2053 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2054 [-]: LOADK     R42 K266     ; R42 := "/f"
2055 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2062
2056 [-]: JMP       2062         ; PC := 2062
2057 [-]: CONST     R41 1        ; R41 := 1.000000
2058 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2059 [-]: LOADK     R42 K267     ; R42 := "/friend"
2060 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2195
2061 [-]: JMP       2195         ; PC := 2195
2062 [-]: GETGLOBAL R41 K19      ; R41 := 0x0032441c
2063 [-]: GETTABLE  R41 R41 K209 ; R41 := R41["StalkerMode"]
2064 [-]: TEST      R41 1        ; if R41 then PC := 2195
2065 [-]: JMP       2195         ; PC := 2195
2066 [-]: LEN       R41 R4       ; R41 := # R4
2067 [-]: CONST     R42 3        ; R42 := 3.000000
2068 [-]: LT        1 R41 R42    ; if R41 < R42 then PC := 2074
2069 [-]: JMP       2074         ; PC := 2074
2070 [-]: LEN       R41 R4       ; R41 := # R4
2071 [-]: CONST     R42 4        ; R42 := 4.000000
2072 [-]: LT        0 R42 R41    ; if R42 >= R41 then PC := 2091
2073 [-]: JMP       2091         ; PC := 2091
2074 [-]: GETGLOBAL R41 K180     ; R41 := mWindow
2075 [-]: SELF      R41 R41 K182 ; R42 := R41; R41 := R41[0xd4f2405e]
2076 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
2077 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
2078 [-]: LOADK     R45 K244     ; R45 := "/Lotus/Language/Menu/Chat_AddFriendHelp_Windows"
2079 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
2080 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2081 [-]: CALL      R41 0 1      ; R41(R42,...)
2082 [-]: GETGLOBAL R41 K180     ; R41 := mWindow
2083 [-]: SELF      R41 R41 K182 ; R42 := R41; R41 := R41[0xd4f2405e]
2084 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
2085 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
2086 [-]: LOADK     R45 K245     ; R45 := "/Lotus/Language/Menu/Chat_RemoveFriendHelp"
2087 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
2088 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2089 [-]: CALL      R41 0 1      ; R41(R42,...)
2090 [-]: JMP       2193         ; PC := 2193
2091 [-]: CONST     R41 2        ; R41 := 2.000000
2092 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2093 [-]: LOADK     R42 K268     ; R42 := "a"
2094 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2101
2095 [-]: JMP       2101         ; PC := 2101
2096 [-]: CONST     R41 2        ; R41 := 2.000000
2097 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2098 [-]: LOADK     R42 K269     ; R42 := "add"
2099 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2150
2100 [-]: JMP       2150         ; PC := 2150
2101 [-]: GETGLOBAL R41 K5       ; R41 := 0x7f5022cf
2102 [-]: GETTABLE  R41 R41 K67  ; R82 := R41[0x04981ab3]
2103 [-]: CONST     R42 3        ; R42 := 3.000000
2104 [-]: GETTABLE  R42 R5 R42   ; R42 := R5[R42]
2105 [-]: CALL      R41 2 2      ; R41 := R41(R42)
2106 [-]: GETGLOBAL R42 K5       ; R42 := 0x7f5022cf
2107 [-]: GETTABLE  R42 R42 K67  ; R82 := R42[0x04981ab3]
2108 [-]: GETTABLE  R43 R0 K7    ; R43 := R0["mParent"]
2109 [-]: GETTABLE  R43 R43 K213 ; R43 := R43["mUser"]
2110 [-]: CALL      R42 2 2      ; R42 := R42(R43)
2111 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2122
2112 [-]: JMP       2122         ; PC := 2122
2113 [-]: GETGLOBAL R41 K180     ; R41 := mWindow
2114 [-]: SELF      R41 R41 K182 ; R42 := R41; R41 := R41[0xd4f2405e]
2115 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
2116 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
2117 [-]: LOADK     R45 K270     ; R45 := "/Lotus/Language/Menu/SocialOverlay_FriendAddSelfError"
2118 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
2119 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2120 [-]: CALL      R41 0 1      ; R41(R42,...)
2121 [-]: JMP       2193         ; PC := 2193
2122 [-]: GETUPVAL  R41 U1       ; R41 := U1
2123 [-]: GETTABLE  R41 R41 K215 ; R82 := R41[0x5d3d561a]
2124 [-]: CONST     R42 3        ; R42 := 3.000000
2125 [-]: GETTABLE  R42 R5 R42   ; R42 := R5[R42]
2126 [-]: LOADK     R43 K216     ; R43 := "[]"
2127 [-]: CALL      R41 3 2      ; R41 := R41(R42,R43)
2128 [-]: CONST     R42 0        ; R42 := 0.000000
2129 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2140
2130 [-]: JMP       2140         ; PC := 2140
2131 [-]: GETGLOBAL R41 K180     ; R41 := mWindow
2132 [-]: SELF      R41 R41 K182 ; R42 := R41; R41 := R41[0xd4f2405e]
2133 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
2134 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
2135 [-]: LOADK     R45 K217     ; R45 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
2136 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
2137 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2138 [-]: CALL      R41 0 1      ; R41(R42,...)
2139 [-]: JMP       2193         ; PC := 2193
2140 [-]: GETUPVAL  R41 U18      ; R41 := U18
2141 [-]: LOADK     R42 K271     ; R42 := true
2142 [-]: GETTABLE  R41 R41 R42  ; R41 := R41[R42]
2143 [-]: CONST     R42 3        ; R42 := 3.000000
2144 [-]: GETTABLE  R42 R5 R42   ; R42 := R5[R42]
2145 [-]: LOADK     R43 K272     ; R43 := "OnAddFriendResultToPanel"
2146 [-]: CONST     R44 4        ; R44 := 4.000000
2147 [-]: GETTABLE  R44 R5 R44   ; R44 := R5[R44]
2148 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
2149 [-]: JMP       2193         ; PC := 2193
2150 [-]: LEN       R41 R4       ; R41 := # R4
2151 [-]: CONST     R42 3        ; R42 := 3.000000
2152 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2177
2153 [-]: JMP       2177         ; PC := 2177
2154 [-]: CONST     R41 2        ; R41 := 2.000000
2155 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2156 [-]: LOADK     R42 K273     ; R42 := "r"
2157 [-]: EQ        1 R41 R42    ; if R41 == R42 then PC := 2164
2158 [-]: JMP       2164         ; PC := 2164
2159 [-]: CONST     R41 2        ; R41 := 2.000000
2160 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2161 [-]: LOADK     R42 K274     ; R42 := "remove"
2162 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2177
2163 [-]: JMP       2177         ; PC := 2177
2164 [-]: GETGLOBAL R41 K2       ; R41 := 0x7b998233
2165 [-]: GETGLOBAL R42 K186     ; R42 := mGameData
2166 [-]: CALL      R41 2 2      ; R41 := R41(R42)
2167 [-]: TEST      R41 1        ; if R41 then PC := 2193
2168 [-]: JMP       2193         ; PC := 2193
2169 [-]: GETGLOBAL R41 K186     ; R41 := mGameData
2170 [-]: LOADK     R43 K275     ; R43 := true
2171 [-]: SELF      R41 R41 R43  ; R42 := R41; R41 := R41[R43]
2172 [-]: CONST     R43 3        ; R43 := 3.000000
2173 [-]: GETTABLE  R43 R5 R43   ; R43 := R5[R43]
2174 [-]: LOADK     R44 K276     ; R44 := "OnRemoveFriendResultToPanel"
2175 [-]: CALL      R41 4 1      ; R41(R42,R43,R44)
2176 [-]: JMP       2193         ; PC := 2193
2177 [-]: GETGLOBAL R41 K180     ; R41 := mWindow
2178 [-]: SELF      R41 R41 K182 ; R42 := R41; R41 := R41[0xd4f2405e]
2179 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
2180 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
2181 [-]: LOADK     R45 K244     ; R45 := "/Lotus/Language/Menu/Chat_AddFriendHelp_Windows"
2182 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
2183 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2184 [-]: CALL      R41 0 1      ; R41(R42,...)
2185 [-]: GETGLOBAL R41 K180     ; R41 := mWindow
2186 [-]: SELF      R41 R41 K182 ; R42 := R41; R41 := R41[0xd4f2405e]
2187 [-]: GETGLOBAL R43 K12      ; R43 := 0xae91e43b
2188 [-]: SELF      R43 R43 K13  ; R44 := R43; R43 := R43[0x42b04007]
2189 [-]: LOADK     R45 K245     ; R45 := "/Lotus/Language/Menu/Chat_RemoveFriendHelp"
2190 [-]: OP_LOADBOOL R46 0 0      ; R46 := false
2191 [-]: CALL      R43 4 0      ; R43,... := R43(R44,R45,R46)
2192 [-]: CALL      R41 0 1      ; R41(R42,...)
2193 [-]: RETURN    R0 1         ; return 
2194 [-]: JMP       2795         ; PC := 2795
2195 [-]: CONST     R41 1        ; R41 := 1.000000
2196 [-]: GETTABLE  R41 R4 R41   ; R41 := R4[R41]
2197 [-]: LOADK     R42 K277     ; R42 := "/motd"
2198 [-]: EQ        0 R41 R42    ; if R41 ~= R42 then PC := 2247
2199 [-]: JMP       2247         ; PC := 2247
2200 [-]: CONST     R41 1        ; R41 := 1.000000
2201 [-]: LT        0 R41 R24    ; if R41 >= R24 then PC := 2237
2202 [-]: JMP       2237         ; PC := 2237
2203 [-]: GETGLOBAL R41 K5       ; R41 := 0x7f5022cf
2204 [-]: GETTABLE  R41 R41 K24  ; R82 := R41[0xa5c556b9]
2205 [-]: MOVE      R42 R3       ; R42 := R3
2206 [-]: LOADK     R43 K218     ; R43 := " "
2207 [-]: CALL      R41 3 3      ; R41,R42 := R41(R42,R43)
2208 [-]: GETGLOBAL R43 K5       ; R43 := 0x7f5022cf
2209 [-]: GETTABLE  R43 R43 K26  ; R82 := R43[0x1a94c9cc]
2210 [-]: MOVE      R44 R3       ; R44 := R3
2211 [-]: CONST     R45 1        ; R45 := 1.000000
2212 [-]: ADD       R45 R42 R45  ; R45 := R42 + R45
2213 [-]: CONST     R46 -1       ; R46 := -1.000000
2214 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
2215 [-]: MOVE      R3 R43       ; R3 := R43
2216 [-]: GETGLOBAL R43 K5       ; R43 := 0x7f5022cf
2217 [-]: GETTABLE  R43 R43 K6   ; R82 := R43[0x41e2ae25]
2218 [-]: MOVE      R44 R3       ; R44 := R3
2219 [-]: CALL      R43 2 2      ; R43 := R43(R44)
2220 [-]: CONST     R44 256      ; R44 := 256.000000
2221 [-]: LT        0 R44 R43    ; if R44 >= R43 then PC := 2230
2222 [-]: JMP       2230         ; PC := 2230
2223 [-]: GETGLOBAL R43 K5       ; R43 := 0x7f5022cf
2224 [-]: GETTABLE  R43 R43 K26  ; R82 := R43[0x1a94c9cc]
2225 [-]: MOVE      R44 R3       ; R44 := R3
2226 [-]: CONST     R45 1        ; R45 := 1.000000
2227 [-]: CONST     R46 256      ; R46 := 256.000000
2228 [-]: CALL      R43 4 2      ; R43 := R43(R44,R45,R46)
2229 [-]: MOVE      R3 R43       ; R3 := R43
2230 [-]: GETUPVAL  R43 U18      ; R43 := U18
2231 [-]: LOADK     R44 K278     ; R44 := true
2232 [-]: GETTABLE  R43 R43 R44  ; R43 := R43[R44]
2233 [-]: MOVE      R44 R3       ; R44 := R3
2234 [-]: OP_LOADBOOL R45 0 0      ; R45 := false
2235 [-]: CALL      R43 3 1      ; R43(R44,R45)
2236 [-]: JMP       2245         ; PC := 2245
2237 [-]: GETGLOBAL R43 K180     ; R43 := mWindow
2238 [-]: SELF      R43 R43 K182 ; R44 := R43; R43 := R43[0xd4f2405e]
2239 [-]: GETGLOBAL R45 K12      ; R45 := 0xae91e43b
2240 [-]: SELF      R45 R45 K13  ; R46 := R45; R45 := R45[0x42b04007]
2241 [-]: LOADK     R47 K246     ; R47 := "/Lotus/Language/Menu/Chat_HelpMotd"
2242 [-]: OP_LOADBOOL R48 0 0      ; R48 := false
2243 [-]: CALL      R45 4 0      ; R45,... := R45(R46,R47,R48)
2244 [-]: CALL      R43 0 1      ; R43(R44,...)
2245 [-]: RETURN    R0 1         ; return 
2246 [-]: JMP       2795         ; PC := 2795
2247 [-]: CONST     R43 1        ; R43 := 1.000000
2248 [-]: GETTABLE  R43 R4 R43   ; R43 := R4[R43]
2249 [-]: LOADK     R44 K279     ; R44 := "/invite"
2250 [-]: EQ        1 R43 R44    ; if R43 == R44 then PC := 2257
2251 [-]: JMP       2257         ; PC := 2257
2252 [-]: CONST     R43 1        ; R43 := 1.000000
2253 [-]: GETTABLE  R43 R4 R43   ; R43 := R4[R43]
2254 [-]: LOADK     R44 K280     ; R44 := "/inv"
2255 [-]: EQ        0 R43 R44    ; if R43 ~= R44 then PC := 2309
2256 [-]: JMP       2309         ; PC := 2309
2257 [-]: GETGLOBAL R43 K19      ; R43 := 0x0032441c
2258 [-]: GETTABLE  R43 R43 K209 ; R43 := R43["StalkerMode"]
2259 [-]: TEST      R43 1        ; if R43 then PC := 2309
2260 [-]: JMP       2309         ; PC := 2309
2261 [-]: CONST     R43 2        ; R43 := 2.000000
2262 [-]: EQ        0 R24 R43    ; if R24 ~= R43 then PC := 2299
2263 [-]: JMP       2299         ; PC := 2299
2264 [-]: CONST     R43 2        ; R43 := 2.000000
2265 [-]: GETTABLE  R43 R5 R43   ; R43 := R5[R43]
2266 [-]: LOADNIL   R44 R44      ; R44 := nil
2267 [-]: GETUPVAL  R45 U1       ; R45 := U1
2268 [-]: GETTABLE  R45 R45 K215 ; R82 := R45[0x5d3d561a]
2269 [-]: MOVE      R46 R43      ; R46 := R43
2270 [-]: LOADK     R47 K216     ; R47 := "[]"
2271 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
2272 [-]: CONST     R46 0        ; R46 := 0.000000
2273 [-]: EQ        1 R45 R46    ; if R45 == R46 then PC := 2277
2274 [-]: JMP       2277         ; PC := 2277
2275 [-]: LOADK     R44 K217     ; R44 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
2276 [-]: JMP       2284         ; PC := 2284
2277 [-]: GETUPVAL  R45 U19      ; R45 := U19
2278 [-]: LOADK     R46 K281     ; R46 := true
2279 [-]: GETTABLE  R45 R45 R46  ; R45 := R45[R46]
2280 [-]: LOADNIL   R46 R46      ; R46 := nil
2281 [-]: MOVE      R47 R43      ; R47 := R43
2282 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
2283 [-]: MOVE      R44 R45      ; R44 := R45
2284 [-]: TEST      R44 0        ; if not R44 then PC := 2295
2285 [-]: JMP       2295         ; PC := 2295
2286 [-]: GETGLOBAL R45 K180     ; R45 := mWindow
2287 [-]: SELF      R45 R45 K182 ; R46 := R45; R45 := R45[0xd4f2405e]
2288 [-]: GETGLOBAL R47 K12      ; R47 := 0xae91e43b
2289 [-]: SELF      R47 R47 K13  ; R48 := R47; R47 := R47[0x42b04007]
2290 [-]: MOVE      R49 R44      ; R49 := R44
2291 [-]: OP_LOADBOOL R50 0 0      ; R50 := false
2292 [-]: CALL      R47 4 0      ; R47,... := R47(R48,R49,R50)
2293 [-]: CALL      R45 0 1      ; R45(R46,...)
2294 [-]: JMP       2307         ; PC := 2307
2295 [-]: GETUPVAL  R45 U20      ; R45 := U20
2296 [-]: MOVE      R46 R43      ; R46 := R43
2297 [-]: CALL      R45 2 1      ; R45(R46)
2298 [-]: JMP       2307         ; PC := 2307
2299 [-]: GETGLOBAL R45 K180     ; R45 := mWindow
2300 [-]: SELF      R45 R45 K182 ; R46 := R45; R45 := R45[0xd4f2405e]
2301 [-]: GETGLOBAL R47 K12      ; R47 := 0xae91e43b
2302 [-]: SELF      R47 R47 K13  ; R48 := R47; R47 := R47[0x42b04007]
2303 [-]: LOADK     R49 K247     ; R49 := "/Lotus/Language/Menu/Chat_HelpInvite"
2304 [-]: OP_LOADBOOL R50 0 0      ; R50 := false
2305 [-]: CALL      R47 4 0      ; R47,... := R47(R48,R49,R50)
2306 [-]: CALL      R45 0 1      ; R45(R46,...)
2307 [-]: RETURN    R0 1         ; return 
2308 [-]: JMP       2795         ; PC := 2795
2309 [-]: CONST     R45 1        ; R45 := 1.000000
2310 [-]: GETTABLE  R45 R4 R45   ; R45 := R4[R45]
2311 [-]: LOADK     R46 K282     ; R46 := "/profile"
2312 [-]: EQ        0 R45 R46    ; if R45 ~= R46 then PC := 2362
2313 [-]: JMP       2362         ; PC := 2362
2314 [-]: CONST     R45 2        ; R45 := 2.000000
2315 [-]: EQ        0 R24 R45    ; if R24 ~= R45 then PC := 2352
2316 [-]: JMP       2352         ; PC := 2352
2317 [-]: LOADNIL   R45 R45      ; R45 := nil
2318 [-]: GETUPVAL  R46 U1       ; R46 := U1
2319 [-]: GETTABLE  R46 R46 K215 ; R82 := R46[0x5d3d561a]
2320 [-]: CONST     R47 2        ; R47 := 2.000000
2321 [-]: GETTABLE  R47 R5 R47   ; R47 := R5[R47]
2322 [-]: LOADK     R48 K216     ; R48 := "[]"
2323 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
2324 [-]: CONST     R47 0        ; R47 := 0.000000
2325 [-]: EQ        1 R46 R47    ; if R46 == R47 then PC := 2328
2326 [-]: JMP       2328         ; PC := 2328
2327 [-]: LOADK     R45 K217     ; R45 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
2328 [-]: TEST      R45 0        ; if not R45 then PC := 2339
2329 [-]: JMP       2339         ; PC := 2339
2330 [-]: GETGLOBAL R46 K180     ; R46 := mWindow
2331 [-]: SELF      R46 R46 K182 ; R47 := R46; R46 := R46[0xd4f2405e]
2332 [-]: GETGLOBAL R48 K12      ; R48 := 0xae91e43b
2333 [-]: SELF      R48 R48 K13  ; R49 := R48; R48 := R48[0x42b04007]
2334 [-]: MOVE      R50 R45      ; R50 := R45
2335 [-]: OP_LOADBOOL R51 0 0      ; R51 := false
2336 [-]: CALL      R48 4 0      ; R48,... := R48(R49,R50,R51)
2337 [-]: CALL      R46 0 1      ; R46(R47,...)
2338 [-]: JMP       2360         ; PC := 2360
2339 [-]: GETGLOBAL R46 K2       ; R46 := 0x7b998233
2340 [-]: GETGLOBAL R47 K186     ; R47 := mGameData
2341 [-]: CALL      R46 2 2      ; R46 := R46(R47)
2342 [-]: TEST      R46 1        ; if R46 then PC := 2360
2343 [-]: JMP       2360         ; PC := 2360
2344 [-]: GETGLOBAL R46 K186     ; R46 := mGameData
2345 [-]: LOADK     R48 K283     ; R48 := true
2346 [-]: SELF      R46 R46 R48  ; R47 := R46; R46 := R46[R48]
2347 [-]: CONST     R48 2        ; R48 := 2.000000
2348 [-]: GETTABLE  R48 R5 R48   ; R48 := R5[R48]
2349 [-]: LOADK     R49 K284     ; R49 := "ViewWarframeProfileAccountIdResult"
2350 [-]: CALL      R46 4 1      ; R46(R47,R48,R49)
2351 [-]: JMP       2360         ; PC := 2360
2352 [-]: GETGLOBAL R46 K180     ; R46 := mWindow
2353 [-]: SELF      R46 R46 K182 ; R47 := R46; R46 := R46[0xd4f2405e]
2354 [-]: GETGLOBAL R48 K12      ; R48 := 0xae91e43b
2355 [-]: SELF      R48 R48 K13  ; R49 := R48; R48 := R48[0x42b04007]
2356 [-]: LOADK     R50 K248     ; R50 := "/Lotus/Language/Menu/Chat_HelpProfile"
2357 [-]: OP_LOADBOOL R51 0 0      ; R51 := false
2358 [-]: CALL      R48 4 0      ; R48,... := R48(R49,R50,R51)
2359 [-]: CALL      R46 0 1      ; R46(R47,...)
2360 [-]: RETURN    R0 1         ; return 
2361 [-]: JMP       2795         ; PC := 2795
2362 [-]: CONST     R46 1        ; R46 := 1.000000
2363 [-]: GETTABLE  R46 R4 R46   ; R46 := R4[R46]
2364 [-]: LOADK     R47 K285     ; R47 := "/goto"
2365 [-]: EQ        0 R46 R47    ; if R46 ~= R47 then PC := 2438
2366 [-]: JMP       2438         ; PC := 2438
2367 [-]: MOVE      R46 R27      ; R46 := R27
2368 [-]: CALL      R46 1 2      ; R46 := R46()
2369 [-]: TEST      R46 1        ; if R46 then PC := 2372
2370 [-]: JMP       2372         ; PC := 2372
2371 [-]: RETURN    R0 1         ; return 
2372 [-]: CONST     R46 2        ; R46 := 2.000000
2373 [-]: EQ        0 R24 R46    ; if R24 ~= R46 then PC := 2428
2374 [-]: JMP       2428         ; PC := 2428
2375 [-]: GETGLOBAL R46 K2       ; R46 := 0x7b998233
2376 [-]: GETGLOBAL R47 K180     ; R47 := mWindow
2377 [-]: LOADK     R48 K286     ; R48 := "mUserPanel"
2378 [-]: GETTABLE  R47 R47 R48  ; R47 := R47[R48]
2379 [-]: CALL      R46 2 2      ; R46 := R46(R47)
2380 [-]: TEST      R46 1        ; if R46 then PC := 2428
2381 [-]: JMP       2428         ; PC := 2428
2382 [-]: GETGLOBAL R46 K5       ; R46 := 0x7f5022cf
2383 [-]: LOADK     R47 K287     ; R47 := true
2384 [-]: GETTABLE  R46 R46 R47  ; R46 := R46[R47]
2385 [-]: CONST     R47 2        ; R47 := 2.000000
2386 [-]: GETTABLE  R47 R4 R47   ; R47 := R4[R47]
2387 [-]: CALL      R46 2 2      ; R46 := R46(R47)
2388 [-]: OP_LOADBOOL R47 0 0      ; R47 := false
2389 [-]: CONST     R48 1        ; R48 := 1.000000
2390 [-]: LOADK     R49 K288     ; R49 := "mAlphabetIndex"
2391 [-]: GETTABLE  R49 R0 R49   ; R49 := R0[R49]
2392 [-]: LEN       R49 R49      ; R49 := # R49
2393 [-]: CONST     R50 1        ; R50 := 1.000000
2394 [-]: FORPREP   R48 2410     ; R48 -= R50; PC := 2410
2395 [-]: GETUPVAL  R52 U21      ; R52 := U21
2396 [-]: GETTABLE  R52 R52 R51  ; R52 := R52[R51]
2397 [-]: EQ        0 R46 R52    ; if R46 ~= R52 then PC := 2410
2398 [-]: JMP       2410         ; PC := 2410
2399 [-]: GETGLOBAL R52 K180     ; R52 := mWindow
2400 [-]: LOADK     R53 K286     ; R53 := "mUserPanel"
2401 [-]: GETTABLE  R52 R52 R53  ; R52 := R52[R53]
2402 [-]: LOADK     R54 K289     ; R54 := true
2403 [-]: SELF      R52 R52 R54  ; R53 := R52; R52 := R52[R54]
2404 [-]: LOADK     R54 K288     ; R54 := "mAlphabetIndex"
2405 [-]: GETTABLE  R54 R0 R54   ; R54 := R0[R54]
2406 [-]: GETTABLE  R54 R54 R51  ; R54 := R54[R51]
2407 [-]: CALL      R52 3 1      ; R52(R53,R54)
2408 [-]: OP_LOADBOOL R47 1 0      ; R47 := true
2409 [-]: JMP       2411         ; PC := 2411
2410 [-]: FORLOOP   R48 2395     ; R48 += R50; if R48 <= R49 then begin PC := 2395; R51 := R48 end
2411 [-]: TEST      R47 1        ; if R47 then PC := 2436
2412 [-]: JMP       2436         ; PC := 2436
2413 [-]: GETGLOBAL R52 K12      ; R52 := 0xae91e43b
2414 [-]: SELF      R52 R52 K13  ; R53 := R52; R52 := R52[0x42b04007]
2415 [-]: LOADK     R54 K290     ; R54 := "/Lotus/Language/Menu/Chat_GotoUnknownIndex"
2416 [-]: OP_LOADBOOL R55 0 0      ; R55 := false
2417 [-]: NEWTABLE  R56 0 1      ; R56 := {}
2418 [-]: LOADK     R57 K291     ; R57 := "LETTER"
2419 [-]: CONST     R58 2        ; R58 := 2.000000
2420 [-]: GETTABLE  R58 R4 R58   ; R58 := R4[R58]
2421 [-]: SETTABLE  R56 R57 R58  ; R56[R57] := R58
2422 [-]: CALL      R52 5 2      ; R52 := R52(R53,R54,R55,R56)
2423 [-]: GETGLOBAL R53 K180     ; R53 := mWindow
2424 [-]: SELF      R53 R53 K182 ; R54 := R53; R53 := R53[0xd4f2405e]
2425 [-]: MOVE      R55 R52      ; R55 := R52
2426 [-]: CALL      R53 3 1      ; R53(R54,R55)
2427 [-]: JMP       2436         ; PC := 2436
2428 [-]: GETGLOBAL R53 K180     ; R53 := mWindow
2429 [-]: SELF      R53 R53 K182 ; R54 := R53; R53 := R53[0xd4f2405e]
2430 [-]: GETGLOBAL R55 K12      ; R55 := 0xae91e43b
2431 [-]: SELF      R55 R55 K13  ; R56 := R55; R55 := R55[0x42b04007]
2432 [-]: LOADK     R57 K249     ; R57 := "/Lotus/Language/Menu/Chat_HelpGoto"
2433 [-]: OP_LOADBOOL R58 0 0      ; R58 := false
2434 [-]: CALL      R55 4 0      ; R55,... := R55(R56,R57,R58)
2435 [-]: CALL      R53 0 1      ; R53(R54,...)
2436 [-]: RETURN    R0 1         ; return 
2437 [-]: JMP       2795         ; PC := 2795
2438 [-]: CONST     R53 1        ; R53 := 1.000000
2439 [-]: GETTABLE  R53 R4 R53   ; R53 := R4[R53]
2440 [-]: LOADK     R54 K292     ; R54 := "/unstuck"
2441 [-]: EQ        0 R53 R54    ; if R53 ~= R54 then PC := 2448
2442 [-]: JMP       2448         ; PC := 2448
2443 [-]: GETUPVAL  R53 U22      ; R53 := U22
2444 [-]: MOVE      R54 R9       ; R54 := R9
2445 [-]: CALL      R53 2 1      ; R53(R54)
2446 [-]: RETURN    R0 1         ; return 
2447 [-]: JMP       2795         ; PC := 2795
2448 [-]: CONST     R53 1        ; R53 := 1.000000
2449 [-]: GETTABLE  R53 R4 R53   ; R53 := R4[R53]
2450 [-]: LOADK     R54 K293     ; R54 := "/join"
2451 [-]: EQ        1 R53 R54    ; if R53 == R54 then PC := 2462
2452 [-]: JMP       2462         ; PC := 2462
2453 [-]: GETGLOBAL R53 K19      ; R53 := 0x0032441c
2454 [-]: GETTABLE  R53 R53 K209 ; R53 := R53["StalkerMode"]
2455 [-]: TEST      R53 0        ; if not R53 then PC := 2603
2456 [-]: JMP       2603         ; PC := 2603
2457 [-]: CONST     R53 1        ; R53 := 1.000000
2458 [-]: GETTABLE  R53 R4 R53   ; R53 := R4[R53]
2459 [-]: LOADK     R54 K294     ; R54 := "/stalk"
2460 [-]: EQ        0 R53 R54    ; if R53 ~= R54 then PC := 2603
2461 [-]: JMP       2603         ; PC := 2603
2462 [-]: CONST     R53 2        ; R53 := 2.000000
2463 [-]: EQ        0 R24 R53    ; if R24 ~= R53 then PC := 2593
2464 [-]: JMP       2593         ; PC := 2593
2465 [-]: LOADNIL   R53 R53      ; R53 := nil
2466 [-]: GETUPVAL  R54 U23      ; R54 := U23
2467 [-]: LOADK     R55 K295     ; R55 := "InProgress"
2468 [-]: GETTABLE  R54 R54 R55  ; R54 := R54[R55]
2469 [-]: TEST      R54 0        ; if not R54 then PC := 2473
2470 [-]: JMP       2473         ; PC := 2473
2471 [-]: LOADK     R53 K296     ; R53 := "/Lotus/Language/Menu/Chat_JoinInProgress"
2472 [-]: JMP       2498         ; PC := 2498
2473 [-]: GETUPVAL  R54 U1       ; R54 := U1
2474 [-]: GETTABLE  R54 R54 K215 ; R82 := R54[0x5d3d561a]
2475 [-]: CONST     R55 2        ; R55 := 2.000000
2476 [-]: GETTABLE  R55 R5 R55   ; R55 := R5[R55]
2477 [-]: LOADK     R56 K216     ; R56 := "[]"
2478 [-]: CALL      R54 3 2      ; R54 := R54(R55,R56)
2479 [-]: CONST     R55 0        ; R55 := 0.000000
2480 [-]: EQ        1 R54 R55    ; if R54 == R55 then PC := 2484
2481 [-]: JMP       2484         ; PC := 2484
2482 [-]: LOADK     R53 K217     ; R53 := "/Lotus/Language/Menu/SocialOverlay_NonExistentUserError"
2483 [-]: JMP       2498         ; PC := 2498
2484 [-]: GETUPVAL  R54 U18      ; R54 := U18
2485 [-]: LOADK     R55 K297     ; R55 := true
2486 [-]: GETTABLE  R54 R54 R55  ; R54 := R54[R55]
2487 [-]: GETGLOBAL R55 K298     ; R55 := 0x25d99d89
2488 [-]: CALL      R54 2 2      ; R54 := R54(R55)
2489 [-]: TEST      R54 0        ; if not R54 then PC := 2498
2490 [-]: JMP       2498         ; PC := 2498
2491 [-]: GETUPVAL  R54 U18      ; R54 := U18
2492 [-]: LOADK     R55 K299     ; R55 := true
2493 [-]: GETTABLE  R54 R54 R55  ; R54 := R54[R55]
2494 [-]: CALL      R54 1 2      ; R54 := R54()
2495 [-]: TEST      R54 0        ; if not R54 then PC := 2498
2496 [-]: JMP       2498         ; PC := 2498
2497 [-]: LOADK     R53 K300     ; R53 := "/Lotus/Language/Menu/SocialOverlay_SessionJoinFail"
2498 [-]: TEST      R53 0        ; if not R53 then PC := 2509
2499 [-]: JMP       2509         ; PC := 2509
2500 [-]: GETGLOBAL R54 K180     ; R54 := mWindow
2501 [-]: SELF      R54 R54 K182 ; R55 := R54; R54 := R54[0xd4f2405e]
2502 [-]: GETGLOBAL R56 K12      ; R56 := 0xae91e43b
2503 [-]: SELF      R56 R56 K13  ; R57 := R56; R56 := R56[0x42b04007]
2504 [-]: MOVE      R58 R53      ; R58 := R53
2505 [-]: OP_LOADBOOL R59 0 0      ; R59 := false
2506 [-]: CALL      R56 4 0      ; R56,... := R56(R57,R58,R59)
2507 [-]: CALL      R54 0 1      ; R54(R55,...)
2508 [-]: JMP       2601         ; PC := 2601
2509 [-]: GETGLOBAL R54 K2       ; R54 := 0x7b998233
2510 [-]: GETGLOBAL R55 K186     ; R55 := mGameData
2511 [-]: CALL      R54 2 2      ; R54 := R54(R55)
2512 [-]: TEST      R54 1        ; if R54 then PC := 2601
2513 [-]: JMP       2601         ; PC := 2601
2514 [-]: GETUPVAL  R54 U23      ; R54 := U23
2515 [-]: LOADK     R55 K295     ; R55 := "InProgress"
2516 [-]: OP_LOADBOOL R56 1 0      ; R56 := true
2517 [-]: SETTABLE  R54 R55 R56  ; R54[R55] := R56
2518 [-]: GETUPVAL  R54 U23      ; R54 := U23
2519 [-]: LOADK     R55 K301     ; R55 := "PlayerId"
2520 [-]: LOADNIL   R56 R56      ; R56 := nil
2521 [-]: SETTABLE  R54 R55 R56  ; R54[R55] := R56
2522 [-]: GETUPVAL  R54 U23      ; R54 := U23
2523 [-]: LOADK     R55 K302     ; R55 := "PlayerName"
2524 [-]: SETTABLE  R54 R55 K4   ; R54[R55] := ""
2525 [-]: GETUPVAL  R54 U23      ; R54 := U23
2526 [-]: LOADK     R55 K303     ; R55 := "TempAddToChatPartners"
2527 [-]: OP_LOADBOOL R56 0 0      ; R56 := false
2528 [-]: SETTABLE  R54 R55 R56  ; R54[R55] := R56
2529 [-]: GETUPVAL  R54 U23      ; R54 := U23
2530 [-]: LOADK     R55 K304     ; R55 := "Presence"
2531 [-]: LOADNIL   R56 R56      ; R56 := nil
2532 [-]: SETTABLE  R54 R55 R56  ; R54[R55] := R56
2533 [-]: GETGLOBAL R54 K186     ; R54 := mGameData
2534 [-]: LOADK     R56 K305     ; R56 := true
2535 [-]: SELF      R54 R54 R56  ; R55 := R54; R54 := R54[R56]
2536 [-]: CALL      R54 2 2      ; R54 := R54(R55)
2537 [-]: CONST     R55 1        ; R55 := 1.000000
2538 [-]: LEN       R56 R54      ; R56 := # R54
2539 [-]: CONST     R57 1        ; R57 := 1.000000
2540 [-]: FORPREP   R55 2567     ; R55 -= R57; PC := 2567
2541 [-]: GETGLOBAL R59 K5       ; R59 := 0x7f5022cf
2542 [-]: GETTABLE  R59 R59 K67  ; R82 := R59[0x04981ab3]
2543 [-]: GETTABLE  R60 R54 R58  ; R60 := R54[R58]
2544 [-]: LOADK     R61 K306     ; R61 := "mDisplayName"
2545 [-]: GETTABLE  R60 R60 R61  ; R60 := R60[R61]
2546 [-]: CALL      R59 2 2      ; R59 := R59(R60)
2547 [-]: GETGLOBAL R60 K5       ; R60 := 0x7f5022cf
2548 [-]: GETTABLE  R60 R60 K67  ; R82 := R60[0x04981ab3]
2549 [-]: CONST     R61 2        ; R61 := 2.000000
2550 [-]: GETTABLE  R61 R5 R61   ; R61 := R5[R61]
2551 [-]: CALL      R60 2 2      ; R60 := R60(R61)
2552 [-]: EQ        0 R59 R60    ; if R59 ~= R60 then PC := 2567
2553 [-]: JMP       2567         ; PC := 2567
2554 [-]: GETUPVAL  R59 U23      ; R59 := U23
2555 [-]: LOADK     R60 K301     ; R60 := "PlayerId"
2556 [-]: GETTABLE  R61 R54 R58  ; R61 := R54[R58]
2557 [-]: LOADK     R62 K307     ; R62 := "mId"
2558 [-]: GETTABLE  R61 R61 R62  ; R61 := R61[R62]
2559 [-]: SETTABLE  R59 R60 R61  ; R59[R60] := R61
2560 [-]: GETUPVAL  R59 U23      ; R59 := U23
2561 [-]: LOADK     R60 K302     ; R60 := "PlayerName"
2562 [-]: GETTABLE  R61 R54 R58  ; R61 := R54[R58]
2563 [-]: LOADK     R62 K306     ; R62 := "mDisplayName"
2564 [-]: GETTABLE  R61 R61 R62  ; R61 := R61[R62]
2565 [-]: SETTABLE  R59 R60 R61  ; R59[R60] := R61
2566 [-]: JMP       2568         ; PC := 2568
2567 [-]: FORLOOP   R55 2541     ; R55 += R57; if R55 <= R56 then begin PC := 2541; R58 := R55 end
2568 [-]: GETUPVAL  R59 U23      ; R59 := U23
2569 [-]: LOADK     R60 K301     ; R60 := "PlayerId"
2570 [-]: GETTABLE  R59 R59 R60  ; R59 := R59[R60]
2571 [-]: LOADNIL   R60 R60      ; R60 := nil
2572 [-]: EQ        1 R59 R60    ; if R59 == R60 then PC := 2585
2573 [-]: JMP       2585         ; PC := 2585
2574 [-]: GETGLOBAL R59 K186     ; R59 := mGameData
2575 [-]: LOADK     R61 K308     ; R61 := true
2576 [-]: SELF      R59 R59 R61  ; R60 := R59; R59 := R59[R61]
2577 [-]: NEWTABLE  R61 1 0      ; R61 := {}
2578 [-]: GETUPVAL  R62 U23      ; R62 := U23
2579 [-]: LOADK     R63 K301     ; R63 := "PlayerId"
2580 [-]: GETTABLE  R62 R62 R63  ; R62 := R62[R63]
2581 [-]: SETLIST   R61 1 1      ; R61[(1-1)*FPF+i] := R(61+i), 1 <= i <= 1
2582 [-]: LOADK     R62 K309     ; R62 := "OnGetPresenceForJoin"
2583 [-]: CALL      R59 4 1      ; R59(R60,R61,R62)
2584 [-]: JMP       2601         ; PC := 2601
2585 [-]: GETGLOBAL R59 K186     ; R59 := mGameData
2586 [-]: LOADK     R61 K283     ; R61 := true
2587 [-]: SELF      R59 R59 R61  ; R60 := R59; R59 := R59[R61]
2588 [-]: CONST     R61 2        ; R61 := 2.000000
2589 [-]: GETTABLE  R61 R5 R61   ; R61 := R5[R61]
2590 [-]: LOADK     R62 K310     ; R62 := "JoinPlayerIDResult"
2591 [-]: CALL      R59 4 1      ; R59(R60,R61,R62)
2592 [-]: JMP       2601         ; PC := 2601
2593 [-]: GETGLOBAL R59 K180     ; R59 := mWindow
2594 [-]: SELF      R59 R59 K182 ; R60 := R59; R59 := R59[0xd4f2405e]
2595 [-]: GETGLOBAL R61 K12      ; R61 := 0xae91e43b
2596 [-]: SELF      R61 R61 K13  ; R62 := R61; R61 := R61[0x42b04007]
2597 [-]: LOADK     R63 K251     ; R63 := "/Lotus/Language/Menu/Chat_HelpJoin"
2598 [-]: OP_LOADBOOL R64 0 0      ; R64 := false
2599 [-]: CALL      R61 4 0      ; R61,... := R61(R62,R63,R64)
2600 [-]: CALL      R59 0 1      ; R59(R60,...)
2601 [-]: RETURN    R0 1         ; return 
2602 [-]: JMP       2795         ; PC := 2795
2603 [-]: CONST     R59 1        ; R59 := 1.000000
2604 [-]: GETTABLE  R59 R4 R59   ; R59 := R4[R59]
2605 [-]: LOADK     R60 K311     ; R60 := "/dnd"
2606 [-]: EQ        0 R59 R60    ; if R59 ~= R60 then PC := 2636
2607 [-]: JMP       2636         ; PC := 2636
2608 [-]: GETGLOBAL R59 K19      ; R59 := 0x0032441c
2609 [-]: LOADK     R60 K312     ; R60 := "mDoNotDisturb"
2610 [-]: GETGLOBAL R61 K19      ; R61 := 0x0032441c
2611 [-]: LOADK     R62 K312     ; R62 := "mDoNotDisturb"
2612 [-]: GETTABLE  R61 R61 R62  ; R61 := R61[R62]
2613 [-]: NOT       R61 R61      ; R61 := not R61
2614 [-]: SETTABLE  R59 R60 R61  ; R59[R60] := R61
2615 [-]: LOADK     R59 K313     ; R59 := "/Lotus/Language/SystemMessages/"
2616 [-]: GETUPVAL  R60 U1       ; R60 := U1
2617 [-]: LOADK     R61 K314     ; R61 := true
2618 [-]: GETTABLE  R60 R60 R61  ; R60 := R60[R61]
2619 [-]: GETGLOBAL R61 K19      ; R61 := 0x0032441c
2620 [-]: LOADK     R62 K312     ; R62 := "mDoNotDisturb"
2621 [-]: GETTABLE  R61 R61 R62  ; R61 := R61[R62]
2622 [-]: LOADK     R62 K315     ; R62 := "DoNotDisturb"
2623 [-]: LOADK     R63 K316     ; R63 := "Normal"
2624 [-]: CALL      R60 4 2      ; R60 := R60(R61,R62,R63)
2625 [-]: CONCAT    R59 R59 R60  ; R59 := R59 .. R60
2626 [-]: GETGLOBAL R60 K180     ; R60 := mWindow
2627 [-]: SELF      R60 R60 K182 ; R61 := R60; R60 := R60[0xd4f2405e]
2628 [-]: GETGLOBAL R62 K12      ; R62 := 0xae91e43b
2629 [-]: SELF      R62 R62 K13  ; R63 := R62; R62 := R62[0x42b04007]
2630 [-]: MOVE      R64 R59      ; R64 := R59
2631 [-]: OP_LOADBOOL R65 0 0      ; R65 := false
2632 [-]: CALL      R62 4 0      ; R62,... := R62(R63,R64,R65)
2633 [-]: CALL      R60 0 1      ; R60(R61,...)
2634 [-]: RETURN    R0 1         ; return 
2635 [-]: JMP       2795         ; PC := 2795
2636 [-]: CONST     R60 1        ; R60 := 1.000000
2637 [-]: GETTABLE  R60 R4 R60   ; R60 := R4[R60]
2638 [-]: LOADK     R61 K317     ; R61 := "/normal"
2639 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2655
2640 [-]: JMP       2655         ; PC := 2655
2641 [-]: GETGLOBAL R60 K19      ; R60 := 0x0032441c
2642 [-]: LOADK     R61 K312     ; R61 := "mDoNotDisturb"
2643 [-]: OP_LOADBOOL R62 0 0      ; R62 := false
2644 [-]: SETTABLE  R60 R61 R62  ; R60[R61] := R62
2645 [-]: GETGLOBAL R60 K180     ; R60 := mWindow
2646 [-]: SELF      R60 R60 K182 ; R61 := R60; R60 := R60[0xd4f2405e]
2647 [-]: GETGLOBAL R62 K12      ; R62 := 0xae91e43b
2648 [-]: SELF      R62 R62 K13  ; R63 := R62; R62 := R62[0x42b04007]
2649 [-]: LOADK     R64 K318     ; R64 := "/Lotus/Language/SystemMessages/Normal"
2650 [-]: OP_LOADBOOL R65 0 0      ; R65 := false
2651 [-]: CALL      R62 4 0      ; R62,... := R62(R63,R64,R65)
2652 [-]: CALL      R60 0 1      ; R60(R61,...)
2653 [-]: RETURN    R0 1         ; return 
2654 [-]: JMP       2795         ; PC := 2795
2655 [-]: CONST     R60 1        ; R60 := 1.000000
2656 [-]: GETTABLE  R60 R4 R60   ; R60 := R4[R60]
2657 [-]: LOADK     R61 K319     ; R61 := "/deop"
2658 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2689
2659 [-]: JMP       2689         ; PC := 2689
2660 [-]: GETGLOBAL R60 K2       ; R60 := 0x7b998233
2661 [-]: MOVE      R61 R25      ; R61 := R25
2662 [-]: CALL      R60 2 2      ; R60 := R60(R61)
2663 [-]: TEST      R60 1        ; if R60 then PC := 2689
2664 [-]: JMP       2689         ; PC := 2689
2665 [-]: GETGLOBAL R60 K2       ; R60 := 0x7b998233
2666 [-]: MOVE      R61 R26      ; R61 := R26
2667 [-]: CALL      R60 2 2      ; R60 := R60(R61)
2668 [-]: TEST      R60 1        ; if R60 then PC := 2689
2669 [-]: JMP       2689         ; PC := 2689
2670 [-]: LOADK     R62 K320     ; R62 := true
2671 [-]: SELF      R60 R26 R62  ; R61 := R26; R60 := R26[R62]
2672 [-]: LOADK     R62 K203     ; R62 := "#"
2673 [-]: GETTABLE  R63 R25 K204 ; R63 := R25["mChannelName"]
2674 [-]: CONCAT    R62 R62 R63  ; R62 := R62 .. R63
2675 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
2676 [-]: TEST      R60 0        ; if not R60 then PC := 2683
2677 [-]: JMP       2683         ; PC := 2683
2678 [-]: GETGLOBAL R60 K180     ; R60 := mWindow
2679 [-]: SELF      R60 R60 K182 ; R61 := R60; R60 := R60[0xd4f2405e]
2680 [-]: LOADK     R62 K321     ; R62 := "DeOperator succeeded!"
2681 [-]: CALL      R60 3 1      ; R60(R61,R62)
2682 [-]: JMP       2687         ; PC := 2687
2683 [-]: GETGLOBAL R60 K180     ; R60 := mWindow
2684 [-]: SELF      R60 R60 K182 ; R61 := R60; R60 := R60[0xd4f2405e]
2685 [-]: LOADK     R62 K322     ; R62 := "DeOperator failed."
2686 [-]: CALL      R60 3 1      ; R60(R61,R62)
2687 [-]: RETURN    R0 1         ; return 
2688 [-]: JMP       2795         ; PC := 2795
2689 [-]: CONST     R60 1        ; R60 := 1.000000
2690 [-]: GETTABLE  R60 R4 R60   ; R60 := R4[R60]
2691 [-]: LOADK     R61 K323     ; R61 := "/kick"
2692 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2706
2693 [-]: JMP       2706         ; PC := 2706
2694 [-]: LEN       R60 R4       ; R60 := # R4
2695 [-]: CONST     R61 2        ; R61 := 2.000000
2696 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2706
2697 [-]: JMP       2706         ; PC := 2706
2698 [-]: GETUPVAL  R60 U24      ; R60 := U24
2699 [-]: CONST     R61 2        ; R61 := 2.000000
2700 [-]: GETTABLE  R61 R4 R61   ; R61 := R4[R61]
2701 [-]: OP_LOADBOOL R62 0 0      ; R62 := false
2702 [-]: LOADK     R63 K324     ; R63 := "5m"
2703 [-]: CALL      R60 4 1      ; R60(R61,R62,R63)
2704 [-]: RETURN    R0 1         ; return 
2705 [-]: JMP       2795         ; PC := 2795
2706 [-]: CONST     R60 1        ; R60 := 1.000000
2707 [-]: GETTABLE  R60 R4 R60   ; R60 := R4[R60]
2708 [-]: LOADK     R61 K325     ; R61 := "/ban"
2709 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2744
2710 [-]: JMP       2744         ; PC := 2744
2711 [-]: LEN       R60 R4       ; R60 := # R4
2712 [-]: CONST     R61 2        ; R61 := 2.000000
2713 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2744
2714 [-]: JMP       2744         ; PC := 2744
2715 [-]: GETGLOBAL R60 K2       ; R60 := 0x7b998233
2716 [-]: MOVE      R61 R25      ; R61 := R25
2717 [-]: CALL      R60 2 2      ; R60 := R60(R61)
2718 [-]: TEST      R60 1        ; if R60 then PC := 2744
2719 [-]: JMP       2744         ; PC := 2744
2720 [-]: GETGLOBAL R60 K2       ; R60 := 0x7b998233
2721 [-]: MOVE      R61 R26      ; R61 := R26
2722 [-]: CALL      R60 2 2      ; R60 := R60(R61)
2723 [-]: TEST      R60 1        ; if R60 then PC := 2744
2724 [-]: JMP       2744         ; PC := 2744
2725 [-]: LOADK     R62 K326     ; R62 := true
2726 [-]: SELF      R60 R26 R62  ; R61 := R26; R60 := R26[R62]
2727 [-]: LOADK     R62 K203     ; R62 := "#"
2728 [-]: GETTABLE  R63 R25 K204 ; R63 := R25["mChannelName"]
2729 [-]: CONCAT    R62 R62 R63  ; R62 := R62 .. R63
2730 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
2731 [-]: TEST      R60 0        ; if not R60 then PC := 2744
2732 [-]: JMP       2744         ; PC := 2744
2733 [-]: GETUPVAL  R60 U3       ; R60 := U3
2734 [-]: GETTABLE  R61 R25 K204 ; R61 := R25["mChannelName"]
2735 [-]: CALL      R60 2 2      ; R60 := R60(R61)
2736 [-]: TEST      R60 0        ; if not R60 then PC := 2744
2737 [-]: JMP       2744         ; PC := 2744
2738 [-]: GETUPVAL  R60 U25      ; R60 := U25
2739 [-]: CONST     R61 2        ; R61 := 2.000000
2740 [-]: GETTABLE  R61 R4 R61   ; R61 := R4[R61]
2741 [-]: CALL      R60 2 1      ; R60(R61)
2742 [-]: RETURN    R0 1         ; return 
2743 [-]: JMP       2795         ; PC := 2795
2744 [-]: CONST     R60 1        ; R60 := 1.000000
2745 [-]: GETTABLE  R60 R4 R60   ; R60 := R4[R60]
2746 [-]: LOADK     R61 K327     ; R61 := "/itemlist"
2747 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2757
2748 [-]: JMP       2757         ; PC := 2757
2749 [-]: OP_LOADBOOL R60 0 0      ; R60 := false
2750 [-]: TEST      R60 0        ; if not R60 then PC := 2757
2751 [-]: JMP       2757         ; PC := 2757
2752 [-]: GETUPVAL  R60 U26      ; R60 := U26
2753 [-]: GETGLOBAL R61 K328     ; R61 := 0xacddb88b
2754 [-]: CALL      R60 2 1      ; R60(R61)
2755 [-]: RETURN    R0 1         ; return 
2756 [-]: JMP       2795         ; PC := 2795
2757 [-]: CONST     R60 1        ; R60 := 1.000000
2758 [-]: GETTABLE  R60 R4 R60   ; R60 := R4[R60]
2759 [-]: LOADK     R61 K329     ; R61 := "/secretitemlist"
2760 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2770
2761 [-]: JMP       2770         ; PC := 2770
2762 [-]: OP_LOADBOOL R60 0 0      ; R60 := false
2763 [-]: TEST      R60 0        ; if not R60 then PC := 2770
2764 [-]: JMP       2770         ; PC := 2770
2765 [-]: GETUPVAL  R60 U26      ; R60 := U26
2766 [-]: GETGLOBAL R61 K330     ; R61 := 0xf8bccaf7
2767 [-]: CALL      R60 2 1      ; R60(R61)
2768 [-]: RETURN    R0 1         ; return 
2769 [-]: JMP       2795         ; PC := 2795
2770 [-]: CONST     R60 1        ; R60 := 1.000000
2771 [-]: GETTABLE  R60 R4 R60   ; R60 := R4[R60]
2772 [-]: LOADK     R61 K331     ; R61 := "/relaunch"
2773 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2794
2774 [-]: JMP       2794         ; PC := 2794
2775 [-]: LEN       R60 R4       ; R60 := # R4
2776 [-]: CONST     R61 1        ; R61 := 1.000000
2777 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2794
2778 [-]: JMP       2794         ; PC := 2794
2779 [-]: GETGLOBAL R60 K257     ; R60 := 0x34291f5c
2780 [-]: LOADK     R61 K332     ; R61 := true
2781 [-]: GETTABLE  R60 R60 R61  ; R60 := R60[R61]
2782 [-]: CALL      R60 1 2      ; R60 := R60()
2783 [-]: TEST      R60 1        ; if R60 then PC := 2794
2784 [-]: JMP       2794         ; PC := 2794
2785 [-]: GETGLOBAL R60 K333     ; R60 := 0x9ba7909f
2786 [-]: LOADK     R62 K334     ; R62 := true
2787 [-]: SELF      R60 R60 R62  ; R61 := R60; R60 := R60[R62]
2788 [-]: GETGLOBAL R62 K61      ; R62 := 0xb009bbc6
2789 [-]: LOADK     R63 K335     ; R63 := "/EE/Editor/ToolMenus/Commands/CmdRelaunch"
2790 [-]: CALL      R62 2 0      ; R62,... := R62(R63)
2791 [-]: CALL      R60 0 1      ; R60(R61,...)
2792 [-]: RETURN    R0 1         ; return 
2793 [-]: JMP       2795         ; PC := 2795
2794 [-]: OP_LOADBOOL R28 1 0      ; R28 := true
2795 [-]: MOVE      R60 R27      ; R60 := R27
2796 [-]: CALL      R60 1 2      ; R60 := R60()
2797 [-]: TEST      R60 1        ; if R60 then PC := 2800
2798 [-]: JMP       2800         ; PC := 2800
2799 [-]: RETURN    R0 1         ; return 
2800 [-]: TEST      R28 0        ; if not R28 then PC := 2839
2801 [-]: JMP       2839         ; PC := 2839
2802 [-]: GETGLOBAL R60 K5       ; R60 := 0x7f5022cf
2803 [-]: GETTABLE  R60 R60 K26  ; R82 := R60[0x1a94c9cc]
2804 [-]: CONST     R61 1        ; R61 := 1.000000
2805 [-]: GETTABLE  R61 R4 R61   ; R61 := R4[R61]
2806 [-]: CONST     R62 1        ; R62 := 1.000000
2807 [-]: CONST     R63 1        ; R63 := 1.000000
2808 [-]: CALL      R60 4 2      ; R60 := R60(R61,R62,R63)
2809 [-]: LOADK     R61 K336     ; R61 := "/"
2810 [-]: EQ        1 R60 R61    ; if R60 == R61 then PC := 2815
2811 [-]: JMP       2815         ; PC := 2815
2812 [-]: LOADK     R61 K337     ; R61 := "!"
2813 [-]: EQ        0 R60 R61    ; if R60 ~= R61 then PC := 2839
2814 [-]: JMP       2839         ; PC := 2839
2815 [-]: GETGLOBAL R61 K180     ; R61 := mWindow
2816 [-]: SELF      R61 R61 K182 ; R62 := R61; R61 := R61[0xd4f2405e]
2817 [-]: GETGLOBAL R63 K12      ; R63 := 0xae91e43b
2818 [-]: SELF      R63 R63 K13  ; R64 := R63; R63 := R63[0x42b04007]
2819 [-]: LOADK     R65 K338     ; R65 := "/Lotus/Language/Menu/Chat_UnknownCommand"
2820 [-]: OP_LOADBOOL R66 0 0      ; R66 := false
2821 [-]: CALL      R63 4 2      ; R63 := R63(R64,R65,R66)
2822 [-]: LOADK     R64 K218     ; R64 := " "
2823 [-]: GETGLOBAL R65 K5       ; R65 := 0x7f5022cf
2824 [-]: GETTABLE  R65 R65 K26  ; R82 := R65[0x1a94c9cc]
2825 [-]: MOVE      R66 R3       ; R66 := R3
2826 [-]: CONST     R67 2        ; R67 := 2.000000
2827 [-]: CALL      R65 3 2      ; R65 := R65(R66,R67)
2828 [-]: CONCAT    R63 R63 R65  ; R63 := R63 .. R64 .. R65
2829 [-]: CALL      R61 3 1      ; R61(R62,R63)
2830 [-]: GETGLOBAL R61 K180     ; R61 := mWindow
2831 [-]: SELF      R61 R61 K182 ; R62 := R61; R61 := R61[0xd4f2405e]
2832 [-]: GETGLOBAL R63 K12      ; R63 := 0xae91e43b
2833 [-]: SELF      R63 R63 K13  ; R64 := R63; R63 := R63[0x42b04007]
2834 [-]: LOADK     R65 K339     ; R65 := "/Lotus/Language/Menu/Chat_HelpPrompt"
2835 [-]: OP_LOADBOOL R66 0 0      ; R66 := false
2836 [-]: CALL      R63 4 0      ; R63,... := R63(R64,R65,R66)
2837 [-]: CALL      R61 0 1      ; R61(R62,...)
2838 [-]: RETURN    R0 1         ; return 
2839 [-]: GETGLOBAL R61 K41      ; R61 := _T
2840 [-]: LOADK     R62 K340     ; R62 := "WareframeMiniGameChatCallback"
2841 [-]: GETTABLE  R61 R61 R62  ; R61 := R61[R62]
2842 [-]: TEST      R61 0        ; if not R61 then PC := 2851
2843 [-]: JMP       2851         ; PC := 2851
2844 [-]: GETGLOBAL R61 K41      ; R61 := _T
2845 [-]: LOADK     R62 K341     ; R62 := true
2846 [-]: GETTABLE  R61 R61 R62  ; R61 := R61[R62]
2847 [-]: MOVE      R62 R0       ; R62 := R0
2848 [-]: MOVE      R63 R3       ; R63 := R3
2849 [-]: TAILCALL  R61 3 0      ; R61,... := R61(R62,R63)
2850 [-]: RETURN    R61 0        ; return R61,...
2851 [-]: GETUPVAL  R61 U27      ; R61 := U27
2852 [-]: MOVE      R62 R3       ; R62 := R3
2853 [-]: MOVE      R63 R23      ; R63 := R23
2854 [-]: CALL      R61 3 2      ; R61 := R61(R62,R63)
2855 [-]: TEST      R61 0        ; if not R61 then PC := 2859
2856 [-]: JMP       2859         ; PC := 2859
2857 [-]: OP_LOADBOOL R61 1 0      ; R61 := true
2858 [-]: RETURN    R61 2        ; return R61
2859 [-]: GETUPVAL  R61 U3       ; R61 := U3
2860 [-]: GETTABLE  R62 R0 K204  ; R62 := R0["mChannelName"]
2861 [-]: CALL      R61 2 2      ; R61 := R61(R62)
2862 [-]: TEST      R61 0        ; if not R61 then PC := 2883
2863 [-]: JMP       2883         ; PC := 2883
2864 [-]: MOVE      R61 R6       ; R61 := R6
2865 [-]: GETUPVAL  R62 U9       ; R62 := U9
2866 [-]: GETTABLE  R62 R62 K129 ; R62 := R62["AppearanceLinks"]
2867 [-]: CALL      R61 2 2      ; R61 := R61(R62)
2868 [-]: CONST     R62 0        ; R62 := 0.000000
2869 [-]: LT        1 R62 R61    ; if R62 < R61 then PC := 2878
2870 [-]: JMP       2878         ; PC := 2878
2871 [-]: MOVE      R61 R6       ; R61 := R6
2872 [-]: GETUPVAL  R62 U9       ; R62 := U9
2873 [-]: GETTABLE  R62 R62 K142 ; R62 := R62["ModConfigLinks"]
2874 [-]: CALL      R61 2 2      ; R61 := R61(R62)
2875 [-]: CONST     R62 0        ; R62 := 0.000000
2876 [-]: LT        0 R62 R61    ; if R62 >= R61 then PC := 2883
2877 [-]: JMP       2883         ; PC := 2883
2878 [-]: GETGLOBAL R61 K19      ; R61 := 0x0032441c
2879 [-]: LOADK     R62 K342     ; R62 := "Chat_GlobalLinkCooldown"
2880 [-]: GETGLOBAL R63 K23      ; R63 := 0x0a8f62a7
2881 [-]: CALL      R63 1 2      ; R63 := R63()
2882 [-]: SETTABLE  R61 R62 R63  ; R61[R62] := R63
2883 [-]: GETGLOBAL R61 K5       ; R61 := 0x7f5022cf
2884 [-]: GETTABLE  R61 R61 K26  ; R82 := R61[0x1a94c9cc]
2885 [-]: MOVE      R62 R23      ; R62 := R23
2886 [-]: CONST     R63 1        ; R63 := 1.000000
2887 [-]: CONST     R64 1        ; R64 := 1.000000
2888 [-]: CALL      R61 4 2      ; R61 := R61(R62,R63,R64)
2889 [-]: EQ        1 R61 K203   ; if R61 == "#" then PC := 2892
2890 [-]: JMP       2892         ; PC := 2892
2891 [-]: OP_LOADBOOL R61 0 1      ; R61 := false; PC := 2892
2892 [-]: OP_LOADBOOL R61 1 0      ; R61 := true
2893 [-]: TEST      R61 0        ; if not R61 then PC := 2937
2894 [-]: JMP       2937         ; PC := 2937
2895 [-]: GETGLOBAL R62 K5       ; R62 := 0x7f5022cf
2896 [-]: GETTABLE  R62 R62 K26  ; R82 := R62[0x1a94c9cc]
2897 [-]: MOVE      R63 R23      ; R63 := R23
2898 [-]: CONST     R64 2        ; R64 := 2.000000
2899 [-]: CONST     R65 2        ; R65 := 2.000000
2900 [-]: CALL      R62 4 2      ; R62 := R62(R63,R64,R65)
2901 [-]: GETGLOBAL R63 K180     ; R63 := mWindow
2902 [-]: LOADK     R64 K343     ; R64 := true
2903 [-]: GETTABLE  R63 R63 R64  ; R63 := R63[R64]
2904 [-]: CALL      R63 1 2      ; R63 := R63()
2905 [-]: EQ        0 R62 R63    ; if R62 ~= R63 then PC := 2937
2906 [-]: JMP       2937         ; PC := 2937
2907 [-]: GETGLOBAL R62 K5       ; R62 := 0x7f5022cf
2908 [-]: GETTABLE  R62 R62 K26  ; R82 := R62[0x1a94c9cc]
2909 [-]: GETTABLE  R63 R0 K204  ; R63 := R0["mChannelName"]
2910 [-]: CONST     R64 2        ; R64 := 2.000000
2911 [-]: CALL      R62 3 2      ; R62 := R62(R63,R64)
2912 [-]: MOVE      R23 R62      ; R23 := R62
2913 [-]: GETGLOBAL R62 K2       ; R62 := 0x7b998233
2914 [-]: GETGLOBAL R63 K186     ; R63 := mGameData
2915 [-]: CALL      R62 2 2      ; R62 := R62(R63)
2916 [-]: TEST      R62 1        ; if R62 then PC := 2937
2917 [-]: JMP       2937         ; PC := 2937
2918 [-]: GETGLOBAL R62 K186     ; R62 := mGameData
2919 [-]: SELF      R62 R62 K210 ; R63 := R62; R62 := R62[0x273a2275]
2920 [-]: MOVE      R64 R23      ; R64 := R23
2921 [-]: CALL      R62 3 2      ; R62 := R62(R63,R64)
2922 [-]: TEST      R62 0        ; if not R62 then PC := 2937
2923 [-]: JMP       2937         ; PC := 2937
2924 [-]: SELF      R62 R0 K11   ; R63 := R0; R62 := R0[0x566ff49e]
2925 [-]: GETGLOBAL R64 K12      ; R64 := 0xae91e43b
2926 [-]: SELF      R64 R64 K13  ; R65 := R64; R64 := R64[0x42b04007]
2927 [-]: LOADK     R66 K211     ; R66 := "/Lotus/Language/Menu/Chat_CannotWhisperIgnoredPlayer"
2928 [-]: OP_LOADBOOL R67 0 0      ; R67 := false
2929 [-]: CALL      R64 4 2      ; R64 := R64(R65,R66,R67)
2930 [-]: MOVE      R65 R23      ; R65 := R23
2931 [-]: LOADK     R66 K212     ; R66 := "."
2932 [-]: CONCAT    R64 R64 R66  ; R64 := R64 .. R65 .. R66
2933 [-]: GETTABLE  R65 R0 K15   ; R65 := R0["MESSAGE_TYPE_SYSTEM"]
2934 [-]: LOADK     R66 K4       ; R66 := ""
2935 [-]: CALL      R62 5 1      ; R62(R63,R64,R65,R66)
2936 [-]: RETURN    R0 1         ; return 
2937 [-]: GETGLOBAL R62 K2       ; R62 := 0x7b998233
2938 [-]: MOVE      R63 R26      ; R63 := R26
2939 [-]: CALL      R62 2 2      ; R62 := R62(R63)
2940 [-]: TEST      R62 1        ; if R62 then PC := 2965
2941 [-]: JMP       2965         ; PC := 2965
2942 [-]: GETGLOBAL R62 K19      ; R62 := 0x0032441c
2943 [-]: GETTABLE  R62 R62 K209 ; R62 := R62["StalkerMode"]
2944 [-]: TEST      R62 1        ; if R62 then PC := 2965
2945 [-]: JMP       2965         ; PC := 2965
2946 [-]: LOADK     R64 K344     ; R64 := true
2947 [-]: SELF      R62 R26 R64  ; R63 := R26; R62 := R26[R64]
2948 [-]: MOVE      R64 R3       ; R64 := R3
2949 [-]: MOVE      R65 R23      ; R65 := R23
2950 [-]: OP_LOADBOOL R66 1 0      ; R66 := true
2951 [-]: CALL      R62 5 1      ; R62(R63,R64,R65,R66)
2952 [-]: GETUPVAL  R62 U28      ; R62 := U28
2953 [-]: CALL      R62 1 2      ; R62 := R62()
2954 [-]: LOADNIL   R63 R63      ; R63 := nil
2955 [-]: EQ        1 R62 R63    ; if R62 == R63 then PC := 2965
2956 [-]: JMP       2965         ; PC := 2965
2957 [-]: GETGLOBAL R63 K345     ; R63 := 0xcb79539e
2958 [-]: LOADK     R65 K346     ; R65 := true
2959 [-]: SELF      R63 R63 R65  ; R64 := R63; R63 := R63[R65]
2960 [-]: GETGLOBAL R65 K347     ; R65 := 0x0469f296
2961 [-]: LOADK     R66 K348     ; R66 := "CHAT_MESSAGE_SENT"
2962 [-]: CALL      R65 2 2      ; R65 := R65(R66)
2963 [-]: MOVE      R66 R62      ; R66 := R62
2964 [-]: CALL      R63 4 1      ; R63(R64,R65,R66)
2965 [-]: RETURN    R0 1         ; return 


; Function #94.5.1:
;
; Name:            
; Defined at line: 3246
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: CONST     R1 0         ; R1 := 0.000000
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0xcfc01047
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  5 [-]: JMP       7            ; PC := 7
  6 [-]: ADD       R1 R1 R6     ; R1 := R1 + R6
  7 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 6; R4 := R5 end
  8 [-]: JMP       6            ; PC := 6
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: RETURN    R0 1         ; return 


; Function #94.5.2:
;
; Name:            
; Defined at line: 3254
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: EQ        0 R0 K1      ; if R0 ~= 1.000000 then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["AMP_MAX_LINKS"]
  5 [-]: RETURN    R1 2         ; return R1
  6 [-]: JMP       32           ; PC := 32
  7 [-]: EQ        0 R0 K3      ; if R0 ~= 6.000000 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["MOA_MAX_LINKS"]
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: JMP       32           ; PC := 32
 13 [-]: EQ        0 R0 K5      ; if R0 ~= 7.000000 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETUPVAL  R1 U0        ; R1 := U0
 16 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["KDRIVE_MAX_LINKS"]
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: JMP       32           ; PC := 32
 19 [-]: EQ        0 R0 K7      ; if R0 ~= 0.000000 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R1 U0        ; R1 := U0
 22 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["ZAW_MAX_LINKS"]
 23 [-]: RETURN    R1 2         ; return R1
 24 [-]: JMP       32           ; PC := 32
 25 [-]: EQ        1 R0 K9      ; if R0 == 2.000000 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: EQ        0 R0 K10     ; if R0 ~= 3.000000 then PC := 32
 28 [-]: JMP       32           ; PC := 32
 29 [-]: GETUPVAL  R1 U0        ; R1 := U0
 30 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["KITGUN_MAX_LINKS"]
 31 [-]: RETURN    R1 2         ; return R1
 32 [-]: RETURN    R0 1         ; return 


; Function #94.5.3:
;
; Name:            
; Defined at line: 3270
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LOADK     R1 K0        ; R1 := ""
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["mChannelName"]
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 0         ; if not R2 then PC := 39
  7 [-]: JMP       39           ; PC := 39
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
  9 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Chat_GlobalLinkCooldown"]
 10 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 39
 11 [-]: JMP       39           ; PC := 39
 12 [-]: GETGLOBAL R2 K2        ; R2 := 0x0032441c
 13 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["Chat_GlobalLinkCooldown"]
 14 [-]: SUB       R2 R0 R2     ; R2 := R0 - R2
 15 [-]: GETUPVAL  R3 U2        ; R3 := U2
 16 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["GLOBAL_LINK_PERIOD"]
 17 [-]: LE        0 R2 R3      ; if R2 > R3 then PC := 39
 18 [-]: JMP       39           ; PC := 39
 19 [-]: GETGLOBAL R3 K6        ; R3 := 0xae91e43b
 20 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x42b04007]
 21 [-]: LOADK     R5 K8        ; R5 := "/Lotus/Language/Menu/Chat_LinkGlobal"
 22 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 23 [-]: NEWTABLE  R7 0 2       ; R7 := {}
 24 [-]: GETUPVAL  R8 U3        ; R8 := U3
 25 [-]: GETTABLE  R8 R8 K10    ; R82 := R8[0x1142c7a8]
 26 [-]: GETUPVAL  R9 U2        ; R9 := U2
 27 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["GLOBAL_LINK_PERIOD"]
 28 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 29 [-]: SETTABLE  R7 K9 R8     ; R7["COOLDOWN"] := R8
 30 [-]: GETGLOBAL R8 K12       ; R8 := 0x5bced4c4
 31 [-]: GETTABLE  R8 R8 K13    ; R82 := R8[0x99675e23]
 32 [-]: GETUPVAL  R9 U2        ; R9 := U2
 33 [-]: GETTABLE  R9 R9 K5     ; R9 := R9["GLOBAL_LINK_PERIOD"]
 34 [-]: SUB       R9 R9 R2     ; R9 := R9 - R2
 35 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 36 [-]: SETTABLE  R7 K11 R8    ; R7["TIME"] := R8
 37 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 38 [-]: MOVE      R1 R3        ; R1 := R3
 39 [-]: RETURN    R1 2         ; return R1
 40 [-]: RETURN    R0 1         ; return 


; Function #94.5.4:
;
; Name:            
; Defined at line: 3318
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["GetOmegaCards"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["OmegaSelectionDone"] := nil
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
  7 [-]: CALL      R1 2 1       ; R1(R2)
  8 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
  9 [-]: SETGLOBALHASH R1 K4        ; mInputBlocked := R1
 10 [-]: LOADNIL   R1 R1        ; R1 := nil
 11 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 70
 15 [-]: JMP       70           ; PC := 70
 16 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 17 [-]: GETTABLE  R3 R0 K6     ; R3 := R0[1.000000]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 70
 20 [-]: JMP       70           ; PC := 70
 21 [-]: GETTABLE  R1 R0 K6     ; R1 := R0[1.000000]
 22 [-]: GETTABLE  R2 R1 K7     ; R2 := R1["Card"]
 23 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mUpgrade"]
 24 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mUpgradeFingerprint"]
 25 [-]: GETGLOBAL R3 K10       ; R3 := 0xb009bbc6
 26 [-]: GETTABLE  R4 R1 K7     ; R4 := R1["Card"]
 27 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["mUpgradeItemType"]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: GETGLOBAL R4 K12       ; R4 := 0x7f5022cf
 30 [-]: GETTABLE  R4 R4 K13    ; R82 := R4[0xa5c556b9]
 31 [-]: MOVE      R5 R2        ; R5 := R2
 32 [-]: LOADK     R6 K14       ; R6 := "\"IsSentinel\":true"
 33 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 34 [-]: EQ        1 R4 K2      ; if R4 == nil then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: SELF      R4 R3 K15    ; R5 := R3; R4 := R3[0x0d4a92a7]
 37 [-]: MOVE      R6 R2        ; R6 := R2
 38 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 39 [-]: NOT       R4 R4        ; R4 := not R4
 40 [-]: JMP       43           ; PC := 43
 41 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 42
 42 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 43 [-]: LOADNIL   R5 R5        ; R5 := nil
 44 [-]: TEST      R4 0         ; if not R4 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETGLOBAL R6 K10       ; R6 := 0xb009bbc6
 47 [-]: GETGLOBAL R7 K16       ; R7 := 0x9c617be6
 48 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 49 [-]: MOVE      R5 R6        ; R5 := R6
 50 [-]: JMP       52           ; PC := 52
 51 [-]: MOVE      R5 R3        ; R5 := R3
 52 [-]: LOADK     R6 K17       ; R6 := "OMG-"
 53 [-]: SELF      R7 R5 K18    ; R8 := R5; R7 := R5[0xe223e2b1]
 54 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 55 [-]: LOADK     R8 K19       ; R8 := ":"
 56 [-]: SELF      R9 R5 K20    ; R10 := R5; R9 := R5[0xb8f1df18]
 57 [-]: MOVE      R11 R2       ; R11 := R2
 58 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 59 [-]: CONCAT    R6 R6 R9     ; R6 := R6 .. R7 .. R8 .. R9
 60 [-]: GETGLOBAL R7 K5        ; R7 := 0x7b998233
 61 [-]: GETGLOBAL R8 K21       ; R8 := 0xae91e43b
 62 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 63 [-]: TEST      R7 1         ; if R7 then PC := 70
 64 [-]: JMP       70           ; PC := 70
 65 [-]: GETGLOBAL R7 K21       ; R7 := 0xae91e43b
 66 [-]: SELF      R7 R7 K22    ; R8 := R7; R7 := R7[0xe4162eed]
 67 [-]: LOADK     R9 K23       ; R9 := "RecursiveOmegaReplace"
 68 [-]: MOVE      R10 R6       ; R10 := R6
 69 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 70 [-]: RETURN    R0 1         ; return 


; Function #94.5.5:
;
; Name:            
; Defined at line: 3348
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R82 := R0[0xbe87a400]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: RETURN    R0 2         ; return R0
  5 [-]: RETURN    R0 1         ; return 


; Function #94.5.6:
;
; Name:            
; Defined at line: 3405
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["SongSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["GetSongList"] := nil
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: SETTABLE  R1 K4 K2     ; R1["OnSongFocused"] := nil
  7 [-]: GETGLOBAL R1 K0        ; R1 := _T
  8 [-]: SETTABLE  R1 K5 K2     ; R1["OnSongUnfocused"] := nil
  9 [-]: GETUPVAL  R1 U0        ; R1 := U0
 10 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 11 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 27
 12 [-]: JMP       27           ; PC := 27
 13 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["StepSequencerLoader"]
 16 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["StepSequencer"]
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 25
 19 [-]: JMP       25           ; PC := 25
 20 [-]: GETUPVAL  R1 U0        ; R1 := U0
 21 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 22 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["StepSequencer"]
 23 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xa2880940]
 24 [-]: CALL      R1 2 1       ; R1(R2)
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: SETTABLE  R1 K6 K2     ; R1["StepSequencerLoader"] := nil
 27 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 28 [-]: SETGLOBALHASH R1 K10       ; mInputBlocked := R1
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: GETUPVAL  R2 U2        ; R2 := U2
 31 [-]: SETTABLE  R1 K11 R2    ; R1["Msg"] := R2
 32 [-]: GETUPVAL  R1 U1        ; R1 := U1
 33 [-]: GETUPVAL  R2 U3        ; R2 := U3
 34 [-]: SETTABLE  R1 K12 R2    ; R1["CurrItemString"] := R2
 35 [-]: GETUPVAL  R1 U4        ; R1 := U4
 36 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 37 [-]: CALL      R1 2 1       ; R1(R2)
 38 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 39 [-]: MOVE      R2 R0        ; R2 := R0
 40 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 41 [-]: TEST      R1 1         ; if R1 then PC := 92
 42 [-]: JMP       92           ; PC := 92
 43 [-]: GETTABLE  R1 R0 K13    ; R1 := R0[1.000000]
 44 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 92
 45 [-]: JMP       92           ; PC := 92
 46 [-]: GETUPVAL  R1 U5        ; R1 := U5
 47 [-]: GETTABLE  R1 R1 K14    ; R82 := R1[0x5d3d561a]
 48 [-]: GETTABLE  R2 R0 K13    ; R2 := R0[1.000000]
 49 [-]: GETTABLE  R2 R2 K15    ; R2 := R2["mName"]
 50 [-]: LOADK     R3 K16       ; R3 := " "
 51 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 52 [-]: LT        0 K17 R1     ; if 0.000000 >= R1 then PC := 59
 53 [-]: JMP       59           ; PC := 59
 54 [-]: GETUPVAL  R2 U5        ; R2 := U5
 55 [-]: GETTABLE  R2 R2 K18    ; R82 := R2[0xe0cba3ca]
 56 [-]: LOADK     R3 K19       ; R3 := "/Lotus/Language/Menu/Chat_SongInvalidCharacters"
 57 [-]: CALL      R2 2 1       ; R2(R3)
 58 [-]: RETURN    R0 1         ; return 
 59 [-]: GETTABLE  R2 R0 K13    ; R2 := R0[1.000000]
 60 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["Song"]
 61 [-]: LOADK     R3 K21       ; R3 := "SONG-"
 62 [-]: GETTABLE  R4 R0 K13    ; R4 := R0[1.000000]
 63 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mName"]
 64 [-]: LOADK     R5 K22       ; R5 := ":"
 65 [-]: GETTABLE  R6 R2 K23    ; R6 := R2["mFingerPrint"]
 66 [-]: CONCAT    R3 R3 R6     ; R3 := R3 .. R4 .. R5 .. R6
 67 [-]: CONST     R4 0         ; R4 := 0.000000
 68 [-]: CONST     R5 2         ; R5 := 2.000000
 69 [-]: CONST     R6 1         ; R6 := 1.000000
 70 [-]: FORPREP   R4 86        ; R4 -= R6; PC := 86
 71 [-]: MOVE      R8 R3        ; R8 := R3
 72 [-]: LOADK     R9 K22       ; R9 := ":"
 73 [-]: CONCAT    R3 R8 R9     ; R3 := R8 .. R9
 74 [-]: SELF      R8 R2 K25    ; R9 := R2; R8 := R2[0x4d7a0caf]
 75 [-]: MOVE      R10 R7       ; R10 := R7
 76 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 77 [-]: GETGLOBAL R9 K7        ; R9 := 0x7b998233
 78 [-]: MOVE      R10 R8       ; R10 := R8
 79 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 80 [-]: TEST      R9 1         ; if R9 then PC := 86
 81 [-]: JMP       86           ; PC := 86
 82 [-]: MOVE      R9 R3        ; R9 := R3
 83 [-]: SELF      R10 R8 K26   ; R11 := R8; R10 := R8[0xe223e2b1]
 84 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 85 [-]: CONCAT    R3 R9 R10    ; R3 := R9 .. R10
 86 [-]: FORLOOP   R4 71        ; R4 += R6; if R4 <= R5 then begin PC := 71; R7 := R4 end
 87 [-]: GETGLOBAL R9 K27       ; R9 := 0xae91e43b
 88 [-]: SELF      R9 R9 K28    ; R10 := R9; R9 := R9[0xe4162eed]
 89 [-]: LOADK     R11 K29      ; R11 := "RecursiveSongReplace"
 90 [-]: MOVE      R12 R3       ; R12 := R3
 91 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 92 [-]: RETURN    R0 1         ; return 


; Function #94.5.7:
;
; Name:            
; Defined at line: 3448
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R82 := R0[0xb139c962]
  3 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  4 [-]: RETURN    R0 0         ; return R0,...
  5 [-]: RETURN    R0 1         ; return 


; Function #94.5.8:
;
; Name:            
; Defined at line: 3454
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["StepSequencerLoader"]
  3 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: GETUPVAL  R2 U1        ; R2 := U1
  7 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0x21ea49b2]
  8 [-]: CALL      R2 1 2       ; R2 := R2()
  9 [-]: SETTABLE  R1 K0 R2     ; R1["StepSequencerLoader"] := R2
 10 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 11 [-]: CONST     R2 0         ; R2 := 0.000000
 12 [-]: CONST     R3 2         ; R3 := 2.000000
 13 [-]: CONST     R4 1         ; R4 := 1.000000
 14 [-]: FORPREP   R2 26        ; R2 -= R4; PC := 26
 15 [-]: GETGLOBAL R6 K4        ; R6 := 0x33bdd652
 16 [-]: GETTABLE  R6 R6 K5     ; R82 := R6[0x23d5322f]
 17 [-]: MOVE      R7 R1        ; R7 := R1
 18 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 19 [-]: SETTABLE  R8 K6 R5     ; R8["NoteType"] := R5
 20 [-]: GETTABLE  R9 R0 K8     ; R9 := R0["Song"]
 21 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9[0x4d7a0caf]
 22 [-]: MOVE      R11 R5       ; R11 := R5
 23 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 24 [-]: SETTABLE  R8 K7 R9     ; R8["NotePack"] := R9
 25 [-]: CALL      R6 3 1       ; R6(R7,R8)
 26 [-]: FORLOOP   R2 15        ; R2 += R4; if R2 <= R3 then begin PC := 15; R5 := R2 end
 27 [-]: GETUPVAL  R6 U1        ; R6 := U1
 28 [-]: GETTABLE  R6 R6 K10    ; R82 := R6[0xfd3b438e]
 29 [-]: GETUPVAL  R7 U0        ; R7 := U0
 30 [-]: GETTABLE  R7 R7 K0     ; R7 := R7["StepSequencerLoader"]
 31 [-]: MOVE      R8 R1        ; R8 := R1
 32 [-]: GETTABLE  R9 R0 K8     ; R9 := R0["Song"]
 33 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["mFingerPrint"]
 34 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 35 [-]: GETGLOBAL R6 K12       ; R6 := mChildMovie
 36 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0xe261aa96]
 37 [-]: GETTABLE  R8 R0 K14    ; R8 := R0["mClipName"]
 38 [-]: LOADK     R9 K15       ; R9 := "Label"
 39 [-]: CONST     R10 29       ; R10 := 29.000000
 40 [-]: GETTABLE  R11 R0 K16   ; R11 := R0["mName"]
 41 [-]: LOADK     R12 K17      ; R12 := "  "
 42 [-]: GETGLOBAL R13 K18      ; R13 := 0xae91e43b
 43 [-]: SELF      R13 R13 K19  ; R14 := R13; R13 := R13[0x42b04007]
 44 [-]: LOADK     R15 K20      ; R15 := "<SPEAKER>"
 45 [-]: OP_LOADBOOL R16 1 0      ; R16 := true
 46 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 47 [-]: CONCAT    R11 R11 R13  ; R11 := R11 .. R12 .. R13
 48 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 49 [-]: RETURN    R0 1         ; return 


; Function #94.5.9:
;
; Name:            
; Defined at line: 3470
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETGLOBAL R1 K2        ; R1 := mChildMovie
  5 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xe261aa96]
  6 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  7 [-]: LOADK     R4 K4        ; R4 := "Label"
  8 [-]: CONST     R5 29        ; R5 := 29.000000
  9 [-]: GETTABLE  R6 R0 K5     ; R6 := R0["mName"]
 10 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 13 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 37
 14 [-]: JMP       37           ; PC := 37
 15 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 16 [-]: GETUPVAL  R2 U0        ; R2 := U0
 17 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["StepSequencerLoader"]
 18 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["StepSequencer"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 35
 21 [-]: JMP       35           ; PC := 35
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 24 [-]: SETTABLE  R1 K9 K1     ; R1["Loader"] := nil
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 27 [-]: SETTABLE  R1 K10 K11   ; R1["IsLoading"] := false
 28 [-]: GETUPVAL  R1 U0        ; R1 := U0
 29 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["StepSequencerLoader"]
 30 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["StepSequencer"]
 31 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0x55e9211c]
 32 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 33 [-]: CALL      R1 3 1       ; R1(R2,R3)
 34 [-]: JMP       37           ; PC := 37
 35 [-]: GETUPVAL  R1 U0        ; R1 := U0
 36 [-]: SETTABLE  R1 K6 K1     ; R1["StepSequencerLoader"] := nil
 37 [-]: RETURN    R0 1         ; return 


; Function #94.5.10:
;
; Name:            
; Defined at line: 3549
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["GetWeapons"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["WeaponSelectionDone"] := nil
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
  7 [-]: CALL      R1 2 1       ; R1(R2)
  8 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
  9 [-]: SETGLOBALHASH R1 K4        ; mInputBlocked := R1
 10 [-]: LOADNIL   R1 R1        ; R1 := nil
 11 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 145
 15 [-]: JMP       145          ; PC := 145
 16 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 17 [-]: GETTABLE  R3 R0 K6     ; R3 := R0[1.000000]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 145
 20 [-]: JMP       145          ; PC := 145
 21 [-]: GETTABLE  R1 R0 K6     ; R1 := R0[1.000000]
 22 [-]: GETUPVAL  R2 U1        ; R2 := U1
 23 [-]: GETTABLE  R3 R1 K7     ; R3 := R1["RawItem"]
 24 [-]: GETUPVAL  R4 U2        ; R4 := U2
 25 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 26 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: LOADNIL   R3 R3        ; R3 := nil
 30 [-]: GETUPVAL  R4 U2        ; R4 := U2
 31 [-]: EQ        0 R4 K9      ; if R4 ~= 6.000000 then PC := 53
 32 [-]: JMP       53           ; PC := 53
 33 [-]: GETGLOBAL R4 K10       ; R4 := 0x50c37abe
 34 [-]: GETTABLE  R5 R1 K7     ; R5 := R1["RawItem"]
 35 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0xdbfbf6c0]
 36 [-]: CONST     R7 3         ; R7 := 3.000000
 37 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 38 [-]: GETTABLE  R6 R2 K6     ; R6 := R2[1.000000]
 39 [-]: GETGLOBAL R7 K12       ; R7 := 0x2c53eb41
 40 [-]: LEN       R7 R7        ; R7 := # R7
 41 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[2.000000]
 42 [-]: GETGLOBAL R9 K14       ; R9 := 0x3cf8b1e7
 43 [-]: LEN       R9 R9        ; R9 := # R9
 44 [-]: GETTABLE  R10 R2 K15   ; R10 := R2[3.000000]
 45 [-]: GETGLOBAL R11 K16      ; R11 := 0xbaa5088f
 46 [-]: LEN       R11 R11      ; R11 := # R11
 47 [-]: GETTABLE  R12 R2 K17   ; R12 := R2[4.000000]
 48 [-]: GETGLOBAL R13 K18      ; R13 := 0x0704bc8b
 49 [-]: LEN       R13 R13      ; R13 := # R13
 50 [-]: CALL      R4 10 2      ; R4 := R4(R5,R6,R7,R8,R9,R10,R11,R12,R13)
 51 [-]: MOVE      R3 R4        ; R3 := R4
 52 [-]: JMP       135          ; PC := 135
 53 [-]: GETUPVAL  R4 U2        ; R4 := U2
 54 [-]: EQ        0 R4 K19     ; if R4 ~= 7.000000 then PC := 76
 55 [-]: JMP       76           ; PC := 76
 56 [-]: GETGLOBAL R4 K10       ; R4 := 0x50c37abe
 57 [-]: GETTABLE  R5 R1 K7     ; R5 := R1["RawItem"]
 58 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0xdbfbf6c0]
 59 [-]: CONST     R7 3         ; R7 := 3.000000
 60 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 61 [-]: GETTABLE  R6 R2 K6     ; R6 := R2[1.000000]
 62 [-]: GETGLOBAL R7 K20       ; R7 := 0xc40a6da3
 63 [-]: LEN       R7 R7        ; R7 := # R7
 64 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[2.000000]
 65 [-]: GETGLOBAL R9 K21       ; R9 := 0xe85256f6
 66 [-]: LEN       R9 R9        ; R9 := # R9
 67 [-]: GETTABLE  R10 R2 K15   ; R10 := R2[3.000000]
 68 [-]: GETGLOBAL R11 K22      ; R11 := 0x9ab3ce7f
 69 [-]: LEN       R11 R11      ; R11 := # R11
 70 [-]: GETTABLE  R12 R2 K17   ; R12 := R2[4.000000]
 71 [-]: GETGLOBAL R13 K23      ; R13 := 0x39ea2417
 72 [-]: LEN       R13 R13      ; R13 := # R13
 73 [-]: CALL      R4 10 2      ; R4 := R4(R5,R6,R7,R8,R9,R10,R11,R12,R13)
 74 [-]: MOVE      R3 R4        ; R3 := R4
 75 [-]: JMP       135          ; PC := 135
 76 [-]: GETUPVAL  R4 U2        ; R4 := U2
 77 [-]: EQ        0 R4 K6      ; if R4 ~= 1.000000 then PC := 96
 78 [-]: JMP       96           ; PC := 96
 79 [-]: GETGLOBAL R4 K10       ; R4 := 0x50c37abe
 80 [-]: GETTABLE  R5 R1 K7     ; R5 := R1["RawItem"]
 81 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0xdbfbf6c0]
 82 [-]: CONST     R7 3         ; R7 := 3.000000
 83 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 84 [-]: GETTABLE  R6 R2 K6     ; R6 := R2[1.000000]
 85 [-]: GETGLOBAL R7 K24       ; R7 := 0x079ca045
 86 [-]: LEN       R7 R7        ; R7 := # R7
 87 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[2.000000]
 88 [-]: GETGLOBAL R9 K25       ; R9 := 0x31047143
 89 [-]: LEN       R9 R9        ; R9 := # R9
 90 [-]: GETTABLE  R10 R2 K15   ; R10 := R2[3.000000]
 91 [-]: GETGLOBAL R11 K26      ; R11 := 0xdccd285d
 92 [-]: LEN       R11 R11      ; R11 := # R11
 93 [-]: CALL      R4 8 2       ; R4 := R4(R5,R6,R7,R8,R9,R10,R11)
 94 [-]: MOVE      R3 R4        ; R3 := R4
 95 [-]: JMP       135          ; PC := 135
 96 [-]: GETUPVAL  R4 U2        ; R4 := U2
 97 [-]: EQ        1 R4 K13     ; if R4 == 2.000000 then PC := 102
 98 [-]: JMP       102          ; PC := 102
 99 [-]: GETUPVAL  R4 U2        ; R4 := U2
100 [-]: EQ        0 R4 K15     ; if R4 ~= 3.000000 then PC := 119
101 [-]: JMP       119          ; PC := 119
102 [-]: GETGLOBAL R4 K10       ; R4 := 0x50c37abe
103 [-]: GETTABLE  R5 R1 K7     ; R5 := R1["RawItem"]
104 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0xdbfbf6c0]
105 [-]: CONST     R7 3         ; R7 := 3.000000
106 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
107 [-]: GETTABLE  R6 R2 K6     ; R6 := R2[1.000000]
108 [-]: GETGLOBAL R7 K27       ; R7 := 0x54d06231
109 [-]: LEN       R7 R7        ; R7 := # R7
110 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[2.000000]
111 [-]: GETGLOBAL R9 K28       ; R9 := 0x925a60af
112 [-]: LEN       R9 R9        ; R9 := # R9
113 [-]: GETTABLE  R10 R2 K15   ; R10 := R2[3.000000]
114 [-]: GETGLOBAL R11 K29      ; R11 := 0x0f7c3ad1
115 [-]: LEN       R11 R11      ; R11 := # R11
116 [-]: CALL      R4 8 2       ; R4 := R4(R5,R6,R7,R8,R9,R10,R11)
117 [-]: MOVE      R3 R4        ; R3 := R4
118 [-]: JMP       135          ; PC := 135
119 [-]: GETGLOBAL R4 K10       ; R4 := 0x50c37abe
120 [-]: GETTABLE  R5 R1 K7     ; R5 := R1["RawItem"]
121 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0xdbfbf6c0]
122 [-]: CONST     R7 3         ; R7 := 3.000000
123 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
124 [-]: GETTABLE  R6 R2 K6     ; R6 := R2[1.000000]
125 [-]: GETGLOBAL R7 K30       ; R7 := 0x9c023f17
126 [-]: LEN       R7 R7        ; R7 := # R7
127 [-]: GETTABLE  R8 R2 K13    ; R8 := R2[2.000000]
128 [-]: GETGLOBAL R9 K31       ; R9 := 0xbd493ed1
129 [-]: LEN       R9 R9        ; R9 := # R9
130 [-]: GETTABLE  R10 R2 K15   ; R10 := R2[3.000000]
131 [-]: GETGLOBAL R11 K32      ; R11 := 0x1da1be95
132 [-]: LEN       R11 R11      ; R11 := # R11
133 [-]: CALL      R4 8 2       ; R4 := R4(R5,R6,R7,R8,R9,R10,R11)
134 [-]: MOVE      R3 R4        ; R3 := R4
135 [-]: GETUPVAL  R4 U3        ; R4 := U3
136 [-]: GETTABLE  R5 R1 K33    ; R5 := R1["Name"]
137 [-]: LOADK     R6 K34       ; R6 := ":"
138 [-]: MOVE      R7 R3        ; R7 := R3
139 [-]: CONCAT    R4 R4 R7     ; R4 := R4 .. R5 .. R6 .. R7
140 [-]: GETGLOBAL R5 K35       ; R5 := 0xae91e43b
141 [-]: SELF      R5 R5 K36    ; R6 := R5; R5 := R5[0xe4162eed]
142 [-]: GETUPVAL  R7 U4        ; R7 := U4
143 [-]: MOVE      R8 R4        ; R8 := R4
144 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
145 [-]: RETURN    R0 1         ; return 


; Function #94.5.11:
;
; Name:            
; Defined at line: 3585
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R82 := R0[0x257627f5]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: RETURN    R0 2         ; return R0
  6 [-]: RETURN    R0 1         ; return 


; Function #94.5.12:
;
; Name:            
; Defined at line: 3635
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["LoadoutSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["GetLoadoutList"] := nil
  5 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
  6 [-]: SETGLOBALHASH R1 K4        ; mInputBlocked := R1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: SETTABLE  R1 K5 R2     ; R1["Msg"] := R2
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: SETTABLE  R1 K6 R2     ; R1["CurrItemString"] := R2
 13 [-]: GETUPVAL  R1 U3        ; R1 := U3
 14 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 49
 20 [-]: JMP       49           ; PC := 49
 21 [-]: GETTABLE  R1 R0 K8     ; R1 := R0[1.000000]
 22 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 49
 23 [-]: JMP       49           ; PC := 49
 24 [-]: GETGLOBAL R1 K0        ; R1 := _T
 25 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 26 [-]: GETTABLE  R3 R0 K8     ; R3 := R0[1.000000]
 27 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mStoredItem"]
 28 [-]: SETTABLE  R2 K10 R3    ; R2["StoredItem"] := R3
 29 [-]: GETTABLE  R3 R0 K8     ; R3 := R0[1.000000]
 30 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mLoadoutType"]
 31 [-]: SETTABLE  R2 K12 R3    ; R2["LoadOutType"] := R3
 32 [-]: GETTABLE  R3 R0 K8     ; R3 := R0[1.000000]
 33 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mLoadoutSlot"]
 34 [-]: SETTABLE  R2 K14 R3    ; R2["LoadOutSlot"] := R3
 35 [-]: SETTABLE  R1 K9 R2     ; R1["AppearanceStoredItem"] := R2
 36 [-]: GETGLOBAL R1 K16       ; R1 := 0xae91e43b
 37 [-]: SELF      R1 R1 K17    ; R2 := R1; R1 := R1[0xe4162eed]
 38 [-]: LOADK     R3 K18       ; R3 := "LinkAppearance"
 39 [-]: LOADK     R4 K19       ; R4 := ""
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: GETGLOBAL R1 K16       ; R1 := 0xae91e43b
 42 [-]: SELF      R1 R1 K17    ; R2 := R1; R1 := R1[0xe4162eed]
 43 [-]: LOADK     R3 K20       ; R3 := "RecursiveAppearanceReplace"
 44 [-]: GETUPVAL  R4 U0        ; R4 := U0
 45 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["CachedAppearanceLink"]
 46 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 47 [-]: GETUPVAL  R1 U0        ; R1 := U0
 48 [-]: SETTABLE  R1 K21 K2    ; R1["CachedAppearanceLink"] := nil
 49 [-]: RETURN    R0 1         ; return 


; Function #94.5.13:
;
; Name:            
; Defined at line: 3656
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R82 := R0[0xfbaa31d5]
  3 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  4 [-]: RETURN    R0 0         ; return R0,...
  5 [-]: RETURN    R0 1         ; return 


; Function #94.5.14:
;
; Name:            
; Defined at line: 3705
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["ModConfigSelectionDone"] := nil
  3 [-]: GETGLOBAL R1 K0        ; R1 := _T
  4 [-]: SETTABLE  R1 K3 K2     ; R1["GetModConfigList"] := nil
  5 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
  6 [-]: SETGLOBALHASH R1 K4        ; mInputBlocked := R1
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETUPVAL  R2 U1        ; R2 := U1
  9 [-]: SETTABLE  R1 K5 R2     ; R1["Msg"] := R2
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: GETUPVAL  R2 U2        ; R2 := U2
 12 [-]: SETTABLE  R1 K6 R2     ; R1["CurrItemString"] := R2
 13 [-]: GETUPVAL  R1 U3        ; R1 := U3
 14 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 15 [-]: CALL      R1 2 1       ; R1(R2)
 16 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 17 [-]: MOVE      R2 R0        ; R2 := R0
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 1         ; if R1 then PC := 49
 20 [-]: JMP       49           ; PC := 49
 21 [-]: GETTABLE  R1 R0 K8     ; R1 := R0[1.000000]
 22 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 49
 23 [-]: JMP       49           ; PC := 49
 24 [-]: GETGLOBAL R1 K0        ; R1 := _T
 25 [-]: NEWTABLE  R2 0 3       ; R2 := {}
 26 [-]: GETTABLE  R3 R0 K8     ; R3 := R0[1.000000]
 27 [-]: GETTABLE  R3 R3 K11    ; R3 := R3["mStoredItem"]
 28 [-]: SETTABLE  R2 K10 R3    ; R2["StoredItem"] := R3
 29 [-]: GETTABLE  R3 R0 K8     ; R3 := R0[1.000000]
 30 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mLoadoutType"]
 31 [-]: SETTABLE  R2 K12 R3    ; R2["LoadOutType"] := R3
 32 [-]: GETTABLE  R3 R0 K8     ; R3 := R0[1.000000]
 33 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mLoadoutSlot"]
 34 [-]: SETTABLE  R2 K14 R3    ; R2["LoadOutSlot"] := R3
 35 [-]: SETTABLE  R1 K9 R2     ; R1["ModConfigStoredItem"] := R2
 36 [-]: GETGLOBAL R1 K16       ; R1 := 0xae91e43b
 37 [-]: SELF      R1 R1 K17    ; R2 := R1; R1 := R1[0xe4162eed]
 38 [-]: LOADK     R3 K18       ; R3 := "LinkModConfig"
 39 [-]: LOADK     R4 K19       ; R4 := ""
 40 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 41 [-]: GETGLOBAL R1 K16       ; R1 := 0xae91e43b
 42 [-]: SELF      R1 R1 K17    ; R2 := R1; R1 := R1[0xe4162eed]
 43 [-]: LOADK     R3 K20       ; R3 := "RecursiveModConfigReplace"
 44 [-]: GETUPVAL  R4 U0        ; R4 := U0
 45 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["CachedModConfigLink"]
 46 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 47 [-]: GETUPVAL  R1 U0        ; R1 := U0
 48 [-]: SETTABLE  R1 K21 K2    ; R1["CachedModConfigLink"] := nil
 49 [-]: RETURN    R0 1         ; return 


; Function #94.5.15:
;
; Name:            
; Defined at line: 3726
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R82 := R0[0xfbaa31d5]
  3 [-]: TAILCALL  R0 1 0       ; R0,... := R0()
  4 [-]: RETURN    R0 0         ; return R0,...
  5 [-]: RETURN    R0 1         ; return 


; Function #94.5.16:
;
; Name:            
; Defined at line: 3917
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: CONST     R0 1         ; R0 := 1.000000
  2 [-]: SETUPVAL  R0 U0        ; U82 := 
  3 [-]: GETUPVAL  R0 U0        ; R0 := U0
  4 [-]: GETUPVAL  R1 U1        ; R1 := U1
  5 [-]: LEN       R1 R1        ; R1 := # R1
  6 [-]: LT        0 R0 R1      ; if R0 >= R1 then PC := 140
  7 [-]: JMP       140          ; PC := 140
  8 [-]: GETGLOBAL R0 K0        ; R0 := 0x7f5022cf
  9 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0xa5c556b9]
 10 [-]: GETUPVAL  R1 U1        ; R1 := U1
 11 [-]: LOADK     R2 K2        ; R2 := "%[[^%]%[]*%]"
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: CALL      R0 4 3       ; R0,R1 := R0(R1,R2,R3)
 14 [-]: TEST      R0 0         ; if not R0 then PC := 140
 15 [-]: JMP       140          ; PC := 140
 16 [-]: GETGLOBAL R2 K0        ; R2 := 0x7f5022cf
 17 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0x1a94c9cc]
 18 [-]: GETUPVAL  R3 U1        ; R3 := U1
 19 [-]: ADD       R4 R0 K4     ; R4 := R0 + 1.000000
 20 [-]: SUB       R5 R1 K4     ; R5 := R1 - 1.000000
 21 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 22 [-]: LOADK     R3 K5        ; R3 := "{"
 23 [-]: MOVE      R4 R2        ; R4 := R2
 24 [-]: LOADK     R5 K6        ; R5 := "}"
 25 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 26 [-]: GETGLOBAL R4 K7        ; R4 := 0x7b998233
 27 [-]: GETUPVAL  R5 U2        ; R5 := U2
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: TEST      R4 1         ; if R4 then PC := 63
 30 [-]: JMP       63           ; PC := 63
 31 [-]: GETUPVAL  R4 U2        ; R4 := U2
 32 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0x2a39090b]
 33 [-]: GETGLOBAL R6 K9        ; R6 := 0x83e41587
 34 [-]: MOVE      R7 R2        ; R7 := R2
 35 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 36 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 37 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 38 [-]: EQ        1 R4 K10     ; if R4 == "" then PC := 63
 39 [-]: JMP       63           ; PC := 63
 40 [-]: GETGLOBAL R4 K11       ; R4 := 0x5f0788c4
 41 [-]: MOVE      R5 R2        ; R5 := R2
 42 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 43 [-]: SELF      R5 R2 K12    ; R6 := R2; R5 := R2[0x66edf04f]
 44 [-]: LOADK     R7 K13       ; R7 := "[%(%)%.%%%+%-%*%?%[%]%^%$]"
 45 [-]: LOADK     R8 K14       ; R8 := "%%%0"
 46 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 47 [-]: GETGLOBAL R6 K0        ; R6 := 0x7f5022cf
 48 [-]: GETTABLE  R6 R6 K12    ; R82 := R6[0x66edf04f]
 49 [-]: GETUPVAL  R7 U1        ; R7 := U1
 50 [-]: LOADK     R8 K15       ; R8 := "%["
 51 [-]: MOVE      R9 R5        ; R9 := R5
 52 [-]: LOADK     R10 K16      ; R10 := "%]"
 53 [-]: CONCAT    R8 R8 R10    ; R8 := R8 .. R9 .. R10
 54 [-]: LOADK     R9 K17       ; R9 := "["
 55 [-]: MOVE      R10 R4       ; R10 := R4
 56 [-]: LOADK     R11 K18      ; R11 := "]"
 57 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 58 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 59 [-]: SETUPVAL  R6 U1        ; U82 := 
 60 [-]: ADD       R6 R1 K4     ; R6 := R1 + 1.000000
 61 [-]: SETUPVAL  R6 U0        ; U82 := 
 62 [-]: JMP       3            ; PC := 3
 63 [-]: GETUPVAL  R6 U3        ; R6 := U3
 64 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["OmegaLinks"]
 65 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 66 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 115
 67 [-]: JMP       115          ; PC := 115
 68 [-]: GETUPVAL  R6 U3        ; R6 := U3
 69 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["SongLinks"]
 70 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 71 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 115
 72 [-]: JMP       115          ; PC := 115
 73 [-]: GETUPVAL  R6 U3        ; R6 := U3
 74 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["ZawLinks"]
 75 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 76 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 115
 77 [-]: JMP       115          ; PC := 115
 78 [-]: GETUPVAL  R6 U3        ; R6 := U3
 79 [-]: GETTABLE  R6 R6 K23    ; R6 := R6["AmpLinks"]
 80 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 81 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 115
 82 [-]: JMP       115          ; PC := 115
 83 [-]: GETUPVAL  R6 U3        ; R6 := U3
 84 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["MoaPetLinks"]
 85 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 86 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 115
 87 [-]: JMP       115          ; PC := 115
 88 [-]: GETUPVAL  R6 U3        ; R6 := U3
 89 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["KdriveLinks"]
 90 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 91 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 115
 92 [-]: JMP       115          ; PC := 115
 93 [-]: GETUPVAL  R6 U3        ; R6 := U3
 94 [-]: GETTABLE  R6 R6 K26    ; R6 := R6["KitgunLinks"]
 95 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
 96 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 115
 97 [-]: JMP       115          ; PC := 115
 98 [-]: GETUPVAL  R6 U3        ; R6 := U3
 99 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["AppearanceLinks"]
100 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
101 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 115
102 [-]: JMP       115          ; PC := 115
103 [-]: GETUPVAL  R6 U3        ; R6 := U3
104 [-]: GETTABLE  R6 R6 K28    ; R6 := R6["ModConfigLinks"]
105 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
106 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 115
107 [-]: JMP       115          ; PC := 115
108 [-]: GETUPVAL  R6 U3        ; R6 := U3
109 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["ShawzinLinks"]
110 [-]: GETTABLE  R6 R6 R3     ; R6 := R6[R3]
111 [-]: EQ        0 R6 K20     ; if R6 ~= nil then PC := 115
112 [-]: JMP       115          ; PC := 115
113 [-]: EQ        0 R2 K30     ; if R2 ~= "DE" then PC := 118
114 [-]: JMP       118          ; PC := 118
115 [-]: ADD       R6 R1 K4     ; R6 := R1 + 1.000000
116 [-]: SETUPVAL  R6 U0        ; U82 := 
117 [-]: JMP       3            ; PC := 3
118 [-]: GETGLOBAL R6 K31       ; R6 := mWindow
119 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0x8b75da5a]
120 [-]: CALL      R6 2 2       ; R6 := R6(R7)
121 [-]: GETGLOBAL R7 K7        ; R7 := 0x7b998233
122 [-]: MOVE      R8 R6        ; R8 := R6
123 [-]: CALL      R7 2 2       ; R7 := R7(R8)
124 [-]: TEST      R7 1         ; if R7 then PC := 135
125 [-]: JMP       135          ; PC := 135
126 [-]: SELF      R7 R6 K33    ; R8 := R6; R7 := R6[0xd4f2405e]
127 [-]: GETGLOBAL R9 K34       ; R9 := 0xae91e43b
128 [-]: SELF      R9 R9 K35    ; R10 := R9; R9 := R9[0x42b04007]
129 [-]: LOADK     R11 K36      ; R11 := "/Lotus/Language/Menu/Chat_InvalidLinkedItem"
130 [-]: OP_LOADBOOL R12 0 0      ; R12 := false
131 [-]: NEWTABLE  R13 0 1      ; R13 := {}
132 [-]: SETTABLE  R13 K37 R2   ; R13["ITEMNAME"] := R2
133 [-]: CALL      R9 5 0       ; R9,... := R9(R10,R11,R12,R13)
134 [-]: CALL      R7 0 1       ; R7(R8,...)
135 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
136 [-]: RETURN    R7 2         ; return R7
137 [-]: JMP       3            ; PC := 3
138 [-]: JMP       140          ; PC := 140
139 [-]: JMP       3            ; PC := 3
140 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
141 [-]: RETURN    R7 2         ; return R7
142 [-]: RETURN    R0 1         ; return 


; Function #94.6:
;
; Name:            
; Defined at line: 4371
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R82 := R2[0x06d055f9]
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: LOADK     R4 K1        ; R4 := "/Lotus/Language/Menu/Chat_SpamBlockTrade"
  5 [-]: LOADK     R5 K2        ; R5 := "/Lotus/Language/Menu/Chat_SpamBlock"
  6 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  7 [-]: GETGLOBAL R3 K3        ; R3 := 0x5bced4c4
  8 [-]: GETTABLE  R3 R3 K4     ; R82 := R3[0x55f27c30]
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: GETTABLE  R4 R4 K0     ; R82 := R4[0x06d055f9]
 11 [-]: MOVE      R5 R1        ; R5 := R1
 12 [-]: GETUPVAL  R6 U1        ; R6 := U1
 13 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["TRADE_SPAM_DETECTION_PERIOD"]
 14 [-]: GETUPVAL  R7 U1        ; R7 := U1
 15 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["SPAM_LOCKOUT_TIME"]
 16 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 17 [-]: GETGLOBAL R5 K7        ; R5 := 0x0a8f62a7
 18 [-]: CALL      R5 1 2       ; R5 := R5()
 19 [-]: GETUPVAL  R6 U0        ; R6 := U0
 20 [-]: GETTABLE  R6 R6 K0     ; R82 := R6[0x06d055f9]
 21 [-]: MOVE      R7 R1        ; R7 := R1
 22 [-]: GETGLOBAL R8 K8        ; R8 := 0x0032441c
 23 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["TradeSpamBlockTime"]
 24 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mSpamBlockTime"]
 25 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 26 [-]: SUB       R5 R5 R6     ; R5 := R5 - R6
 27 [-]: SUB       R4 R4 R5     ; R4 := R4 - R5
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: GETGLOBAL R4 K11       ; R4 := mWindow
 30 [-]: SELF      R4 R4 K12    ; R5 := R4; R4 := R4[0x8b75da5a]
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: GETGLOBAL R5 K13       ; R5 := 0x7b998233
 33 [-]: MOVE      R6 R4        ; R6 := R4
 34 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 35 [-]: TEST      R5 1         ; if R5 then PC := 46
 36 [-]: JMP       46           ; PC := 46
 37 [-]: SELF      R5 R4 K14    ; R6 := R4; R5 := R4[0xd4f2405e]
 38 [-]: GETGLOBAL R7 K15       ; R7 := 0xae91e43b
 39 [-]: SELF      R7 R7 K16    ; R8 := R7; R7 := R7[0x42b04007]
 40 [-]: MOVE      R9 R2        ; R9 := R2
 41 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
 42 [-]: NEWTABLE  R11 0 1      ; R11 := {}
 43 [-]: SETTABLE  R11 K17 R3   ; R11["TIME"] := R3
 44 [-]: CALL      R7 5 0       ; R7,... := R7(R8,R9,R10,R11)
 45 [-]: CALL      R5 0 1       ; R5(R6,...)
 46 [-]: GETUPVAL  R5 U0        ; R5 := U0
 47 [-]: GETTABLE  R5 R5 K18    ; R82 := R5[0x659d451f]
 48 [-]: GETGLOBAL R6 K8        ; R6 := 0x0032441c
 49 [-]: GETTABLE  R6 R6 K19    ; R6 := R6["UISound_Error"]
 50 [-]: CALL      R5 2 1       ; R5(R6)
 51 [-]: GETGLOBAL R5 K11       ; R5 := mWindow
 52 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["mInputPanel"]
 53 [-]: SETTABLE  R5 K21 K22   ; R5["CharLimitFlashTime"] := 2.500000
 54 [-]: RETURN    R0 1         ; return 


; Function #94.7:
;
; Name:            
; Defined at line: 4383
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: NEWTABLE  R3 0 3       ; R3 := {}
  2 [-]: SETTABLE  R3 K0 R2     ; R3["isOnline"] := R2
  3 [-]: SETTABLE  R3 K1 R1     ; R3["name"] := R1
  4 [-]: GETGLOBAL R4 K3        ; R4 := 0x7f5022cf
  5 [-]: GETTABLE  R4 R4 K4     ; R82 := R4[0x04981ab3]
  6 [-]: MOVE      R5 R1        ; R5 := R1
  7 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  8 [-]: SETTABLE  R3 K2 R4     ; R3["lowercaseName"] := R4
  9 [-]: RETURN    R3 2         ; return R3
 10 [-]: RETURN    R0 1         ; return 


; Function #94.8:
;
; Name:            
; Defined at line: 4388
; #Upvalues:       2
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: JMP       6            ; PC := 6
  4 [-]: OP_LOADBOOL R3 0 1       ; R3 := false; PC := 5
  5 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
  6 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mChannelName"]
  7 [-]: EQ        0 R4 R2      ; if R4 ~= R2 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R4 U0        ; R4 := U0
 10 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["HIDDEN_PLAYER_NAME"]
 11 [-]: EQ        0 R1 R4      ; if R1 ~= R4 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETGLOBAL R4 K3        ; R4 := 0x7f5022cf
 15 [-]: GETTABLE  R4 R4 K4     ; R82 := R4[0xa5c556b9]
 16 [-]: MOVE      R5 R1        ; R5 := R1
 17 [-]: LOADK     R6 K5        ; R6 := "@"
 18 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 19 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R4 K3        ; R4 := 0x7f5022cf
 22 [-]: GETTABLE  R4 R4 K6     ; R82 := R4[0x1a94c9cc]
 23 [-]: MOVE      R5 R1        ; R5 := R1
 24 [-]: CONST     R6 2         ; R6 := 2.000000
 25 [-]: CONST     R7 -1        ; R7 := -1.000000
 26 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 27 [-]: MOVE      R1 R4        ; R1 := R4
 28 [-]: SELF      R4 R0 K7     ; R5 := R0; R4 := R0[0x161714b6]
 29 [-]: MOVE      R6 R1        ; R6 := R1
 30 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 31 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 32 [-]: GETTABLE  R5 R0 K8     ; R5 := R0["mIsActive"]
 33 [-]: TEST      R5 0         ; if not R5 then PC := 162
 34 [-]: JMP       162          ; PC := 162
 35 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 36 [-]: GETTABLE  R6 R4 K10    ; R6 := R4["name"]
 37 [-]: SETTABLE  R5 K9 R6     ; R5["User"] := R6
 38 [-]: GETTABLE  R6 R4 K12    ; R6 := R4["lowercaseName"]
 39 [-]: SETTABLE  R5 K11 R6    ; R5["UserLower"] := R6
 40 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["mChannelName"]
 41 [-]: SETTABLE  R5 K13 R6    ; R5["Channel"] := R6
 42 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["mParent"]
 43 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["mUserPanel"]
 44 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["mListControl"]
 45 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["mElements"]
 46 [-]: LEN       R6 R6        ; R6 := # R6
 47 [-]: CONST     R7 0         ; R7 := 0.000000
 48 [-]: CONST     R8 1         ; R8 := 1.000000
 49 [-]: ADD       R9 R6 K18    ; R9 := R6 + 1.000000
 50 [-]: GETTABLE  R10 R5 K11   ; R10 := R5["UserLower"]
 51 [-]: LT        0 R8 R9      ; if R8 >= R9 then PC := 76
 52 [-]: JMP       76           ; PC := 76
 53 [-]: GETGLOBAL R11 K19      ; R11 := 0xce225efa
 54 [-]: CONST     R12 0        ; R12 := 0.000000
 55 [-]: CALL      R11 2 1      ; R11(R12)
 56 [-]: GETGLOBAL R11 K20      ; R11 := 0x5bced4c4
 57 [-]: GETTABLE  R11 R11 K21  ; R82 := R11[0x55f27c30]
 58 [-]: ADD       R12 R8 R9    ; R12 := R8 + R9
 59 [-]: DIV       R12 R12 K22  ; R12 := R12 / 2.000000
 60 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 61 [-]: GETTABLE  R12 R0 K14   ; R12 := R0["mParent"]
 62 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["mUserPanel"]
 63 [-]: GETTABLE  R12 R12 K16  ; R12 := R12["mListControl"]
 64 [-]: GETTABLE  R12 R12 K17  ; R12 := R12["mElements"]
 65 [-]: GETTABLE  R12 R12 R11  ; R12 := R12[R11]
 66 [-]: GETTABLE  R12 R12 K11  ; R12 := R12["UserLower"]
 67 [-]: EQ        0 R12 R10    ; if R12 ~= R10 then PC := 70
 68 [-]: JMP       70           ; PC := 70
 69 [-]: RETURN    R0 1         ; return 
 70 [-]: LT        0 R10 R12    ; if R10 >= R12 then PC := 74
 71 [-]: JMP       74           ; PC := 74
 72 [-]: MOVE      R9 R11       ; R9 := R11
 73 [-]: JMP       51           ; PC := 51
 74 [-]: ADD       R8 R11 K18   ; R8 := R11 + 1.000000
 75 [-]: JMP       51           ; PC := 51
 76 [-]: MOVE      R7 R9        ; R7 := R9
 77 [-]: CONST     R13 1        ; R13 := 1.000000
 78 [-]: GETTABLE  R14 R0 K23   ; R14 := R0["mAlphabetIndex"]
 79 [-]: LEN       R14 R14      ; R14 := # R14
 80 [-]: CONST     R15 1        ; R15 := 1.000000
 81 [-]: FORPREP   R13 108      ; R13 -= R15; PC := 108
 82 [-]: GETTABLE  R17 R0 K23   ; R17 := R0["mAlphabetIndex"]
 83 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
 84 [-]: LT        1 R7 R17     ; if R7 < R17 then PC := 103
 85 [-]: JMP       103          ; PC := 103
 86 [-]: GETTABLE  R17 R0 K23   ; R17 := R0["mAlphabetIndex"]
 87 [-]: GETTABLE  R17 R17 R16  ; R17 := R17[R16]
 88 [-]: EQ        0 R7 R17     ; if R7 ~= R17 then PC := 108
 89 [-]: JMP       108          ; PC := 108
 90 [-]: GETGLOBAL R17 K3       ; R17 := 0x7f5022cf
 91 [-]: GETTABLE  R17 R17 K24  ; R82 := R17[0x3f3e4d12]
 92 [-]: GETGLOBAL R18 K3       ; R18 := 0x7f5022cf
 93 [-]: GETTABLE  R18 R18 K6   ; R82 := R18[0x1a94c9cc]
 94 [-]: GETTABLE  R19 R5 K11   ; R19 := R5["UserLower"]
 95 [-]: CONST     R20 1        ; R20 := 1.000000
 96 [-]: CONST     R21 1        ; R21 := 1.000000
 97 [-]: CALL      R18 4 0      ; R18,... := R18(R19,R20,R21)
 98 [-]: CALL      R17 0 2      ; R17 := R17(R18,...)
 99 [-]: GETUPVAL  R18 U1       ; R18 := U1
100 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
101 [-]: LT        0 R17 R18    ; if R17 >= R18 then PC := 108
102 [-]: JMP       108          ; PC := 108
103 [-]: GETTABLE  R17 R0 K23   ; R17 := R0["mAlphabetIndex"]
104 [-]: GETTABLE  R18 R0 K23   ; R18 := R0["mAlphabetIndex"]
105 [-]: GETTABLE  R18 R18 R16  ; R18 := R18[R16]
106 [-]: ADD       R18 R18 K18  ; R18 := R18 + 1.000000
107 [-]: SETTABLE  R17 R16 R18  ; R17[R16] := R18
108 [-]: FORLOOP   R13 82       ; R13 += R15; if R13 <= R14 then begin PC := 82; R16 := R13 end
109 [-]: GETTABLE  R17 R0 K14   ; R17 := R0["mParent"]
110 [-]: GETTABLE  R17 R17 K15  ; R17 := R17["mUserPanel"]
111 [-]: GETTABLE  R17 R17 K16  ; R17 := R17["mListControl"]
112 [-]: SELF      R17 R17 K25  ; R18 := R17; R17 := R17[0x45082a31]
113 [-]: MOVE      R19 R7       ; R19 := R7
114 [-]: MOVE      R20 R5       ; R20 := R5
115 [-]: OP_LOADBOOL R21 1 0      ; R21 := true
116 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
117 [-]: TEST      R3 1         ; if R3 then PC := 162
118 [-]: JMP       162          ; PC := 162
119 [-]: GETTABLE  R17 R0 K14   ; R17 := R0["mParent"]
120 [-]: GETTABLE  R17 R17 K26  ; R17 := R17["mVisualMode"]
121 [-]: GETTABLE  R18 R0 K14   ; R18 := R0["mParent"]
122 [-]: GETTABLE  R18 R18 K27  ; R18 := R18["VISUAL_MODE_MENU_SIMPLE"]
123 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 162
124 [-]: JMP       162          ; PC := 162
125 [-]: GETTABLE  R17 R0 K14   ; R17 := R0["mParent"]
126 [-]: GETTABLE  R17 R17 K26  ; R17 := R17["mVisualMode"]
127 [-]: GETTABLE  R18 R0 K14   ; R18 := R0["mParent"]
128 [-]: GETTABLE  R18 R18 K28  ; R18 := R18["VISUAL_MODE_GAMEPLAY_SIMPLE"]
129 [-]: EQ        1 R17 R18    ; if R17 == R18 then PC := 162
130 [-]: JMP       162          ; PC := 162
131 [-]: GETTABLE  R17 R0 K14   ; R17 := R0["mParent"]
132 [-]: SELF      R17 R17 K29  ; R18 := R17; R17 := R17[0x8ec8f0d5]
133 [-]: GETTABLE  R19 R0 K14   ; R19 := R0["mParent"]
134 [-]: GETTABLE  R19 R19 K15  ; R19 := R19["mUserPanel"]
135 [-]: GETTABLE  R19 R19 K30  ; R19 := R19["mWindow"]
136 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
137 [-]: GETTABLE  R18 R0 K14   ; R18 := R0["mParent"]
138 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["mUserPanel"]
139 [-]: SELF      R18 R18 K31  ; R19 := R18; R18 := R18[0xf1243bbe]
140 [-]: GETTABLE  R20 R17 K32  ; R20 := R17["height"]
141 [-]: CALL      R18 3 1      ; R18(R19,R20)
142 [-]: GETTABLE  R18 R0 K14   ; R18 := R0["mParent"]
143 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["mUserPanel"]
144 [-]: SELF      R18 R18 K33  ; R19 := R18; R18 := R18[0xfe723404]
145 [-]: MOVE      R20 R7       ; R20 := R7
146 [-]: CALL      R18 3 1      ; R18(R19,R20)
147 [-]: GETTABLE  R18 R0 K14   ; R18 := R0["mParent"]
148 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["mUserPanel"]
149 [-]: GETTABLE  R18 R18 K16  ; R18 := R18["mListControl"]
150 [-]: SELF      R18 R18 K34  ; R19 := R18; R18 := R18[0x71e9ac81]
151 [-]: LOADNIL   R20 R20      ; R20 := nil
152 [-]: OP_LOADBOOL R21 0 0      ; R21 := false
153 [-]: OP_LOADBOOL R22 1 0      ; R22 := true
154 [-]: CALL      R18 5 1      ; R18(R19,R20,R21,R22)
155 [-]: GETTABLE  R18 R0 K14   ; R18 := R0["mParent"]
156 [-]: GETTABLE  R18 R18 K15  ; R18 := R18["mUserPanel"]
157 [-]: GETTABLE  R18 R18 K16  ; R18 := R18["mListControl"]
158 [-]: SELF      R18 R18 K35  ; R19 := R18; R18 := R18[0x741d078c]
159 [-]: CLOSURE   R20 0        ; R20 := closure(Function #94.8.1)
160 [-]: MOVE      R0 R0        ; R0 := R0
161 [-]: CALL      R18 3 1      ; R18(R19,R20)
162 [-]: GETTABLE  R18 R0 K36   ; R18 := R0["mUserList"]
163 [-]: SETTABLE  R18 R1 R4    ; R18[R1] := R4
164 [-]: OP_LOADBOOL R18 1 0      ; R18 := true
165 [-]: RETURN    R18 2        ; return R18
166 [-]: RETURN    R0 1         ; return 


; Function #94.8.1:
;
; Name:            
; Defined at line: 4447
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: EQ        1 R0 K0      ; if R0 == nil then PC := 18
  2 [-]: JMP       18           ; PC := 18
  3 [-]: GETTABLE  R1 R0 K1     ; R1 := R0["mClipName"]
  4 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x67bc869f]
  8 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mClipName"]
  9 [-]: CONST     R4 1         ; R4 := 1.000000
 10 [-]: GETUPVAL  R5 U0        ; R5 := U0
 11 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["mParent"]
 12 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mUserPanel"]
 13 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["mListControl"]
 14 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0x68e36b8d]
 15 [-]: MOVE      R7 R0        ; R7 := R0
 16 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 17 [-]: CALL      R1 0 1       ; R1(R2,...)
 18 [-]: RETURN    R0 1         ; return 


; Function #94.9:
;
; Name:            
; Defined at line: 4459
; #Upvalues:       4
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  33

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mIsActive"]
  2 [-]: TEST      R2 1         ; if R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: EQ        0 R1 K1      ; if R1 ~= false then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R2 K3        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mUserPanel"]
  9 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mListControl"]
 10 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0xc704a9b7]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: SETTABLE  R0 K2 R2     ; R0["mStoredFocusIndex"] := R2
 13 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mParent"]
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mUserPanel"]
 15 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xf596420f]
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: GETGLOBAL R2 K9        ; R2 := 0x34291f5c
 18 [-]: GETTABLE  R2 R2 K10    ; R82 := R2[0x056bfe8b]
 19 [-]: CALL      R2 1 2       ; R2 := R2()
 20 [-]: TEST      R2 0         ; if not R2 then PC := 27
 21 [-]: JMP       27           ; PC := 27
 22 [-]: GETUPVAL  R2 U0        ; R2 := U0
 23 [-]: CALL      R2 1 2       ; R2 := R2()
 24 [-]: TEST      R2 0         ; if not R2 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: RETURN    R0 1         ; return 
 27 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["mVisualMode"]
 28 [-]: GETTABLE  R3 R0 K12    ; R3 := R0["VISUAL_MODE_MENU_SIMPLE"]
 29 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 46
 30 [-]: JMP       46           ; PC := 46
 31 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["mVisualMode"]
 32 [-]: GETTABLE  R3 R0 K13    ; R3 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 33 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 46
 34 [-]: JMP       46           ; PC := 46
 35 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mParent"]
 36 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0x8ec8f0d5]
 37 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mParent"]
 38 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mUserPanel"]
 39 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mWindow"]
 40 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 41 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mParent"]
 42 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mUserPanel"]
 43 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0xf1243bbe]
 44 [-]: GETTABLE  R5 R2 K16    ; R5 := R2["height"]
 45 [-]: CALL      R3 3 1       ; R3(R4,R5)
 46 [-]: GETTABLE  R3 R0 K17    ; R3 := R0["mChannelType"]
 47 [-]: GETGLOBAL R4 K3        ; R4 := mWindow
 48 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["CHANNEL_PRIVATE_CHAT"]
 49 [-]: LE        0 R4 R3      ; if R4 > R3 then PC := 73
 50 [-]: JMP       73           ; PC := 73
 51 [-]: GETGLOBAL R3 K19       ; R3 := 0x7f5022cf
 52 [-]: GETTABLE  R3 R3 K20    ; R82 := R3[0x1a94c9cc]
 53 [-]: GETTABLE  R4 R0 K21    ; R4 := R0["mChannelName"]
 54 [-]: CONST     R5 2         ; R5 := 2.000000
 55 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 56 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mParent"]
 57 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["mUserPanel"]
 58 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mListControl"]
 59 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0xbad4316f]
 60 [-]: NEWTABLE  R6 0 4       ; R6 := {}
 61 [-]: SETTABLE  R6 K23 K24   ; R6["Id"] := 1.000000
 62 [-]: SETTABLE  R6 K25 R3    ; R6["User"] := R3
 63 [-]: GETGLOBAL R7 K19       ; R7 := 0x7f5022cf
 64 [-]: GETTABLE  R7 R7 K27    ; R82 := R7[0x04981ab3]
 65 [-]: MOVE      R8 R3        ; R8 := R3
 66 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 67 [-]: SETTABLE  R6 K26 R7    ; R6["UserLower"] := R7
 68 [-]: GETTABLE  R7 R0 K21    ; R7 := R0["mChannelName"]
 69 [-]: SETTABLE  R6 K28 R7    ; R6["Channel"] := R7
 70 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 71 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 72 [-]: JMP       205          ; PC := 205
 73 [-]: GETGLOBAL R4 K29       ; R4 := 0xe7f2b02f
 74 [-]: SELF      R4 R4 K30    ; R5 := R4; R4 := R4[0x0b151d80]
 75 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 76 [-]: GETGLOBAL R5 K31       ; R5 := 0x7b998233
 77 [-]: MOVE      R6 R4        ; R6 := R4
 78 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 79 [-]: TEST      R5 1         ; if R5 then PC := 205
 80 [-]: JMP       205          ; PC := 205
 81 [-]: SELF      R5 R4 K32    ; R6 := R4; R5 := R4[0xafb16d98]
 82 [-]: LOADK     R7 K33       ; R7 := "#"
 83 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["mChannelName"]
 84 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 85 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 86 [-]: GETGLOBAL R6 K31       ; R6 := 0x7b998233
 87 [-]: MOVE      R7 R5        ; R7 := R5
 88 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 89 [-]: TEST      R6 1         ; if R6 then PC := 205
 90 [-]: JMP       205          ; PC := 205
 91 [-]: LEN       R6 R5        ; R6 := # R5
 92 [-]: LT        0 K34 R6     ; if 0.000000 >= R6 then PC := 205
 93 [-]: JMP       205          ; PC := 205
 94 [-]: SETTABLE  R0 K35 K36   ; R0["mInitialPopulationDone"] := true
 95 [-]: LEN       R6 R5        ; R6 := # R5
 96 [-]: LOADNIL   R7 R7        ; R7 := nil
 97 [-]: CONST     R8 1         ; R8 := 1.000000
 98 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["mChannelType"]
 99 [-]: GETGLOBAL R10 K3       ; R10 := mWindow
100 [-]: GETTABLE  R10 R10 K37  ; R10 := R10["CHANNEL_SESSION"]
101 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 104
102 [-]: JMP       104          ; PC := 104
103 [-]: OP_LOADBOOL R9 0 1       ; R9 := false; PC := 104
104 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
105 [-]: NEWTABLE  R10 0 0      ; R10 := {}
106 [-]: SETTABLE  R0 K38 R10   ; R0["mAlphabetIndex"] := R10
107 [-]: CONST     R10 1        ; R10 := 1.000000
108 [-]: MOVE      R11 R6       ; R11 := R6
109 [-]: CONST     R12 1        ; R12 := 1.000000
110 [-]: FORPREP   R10 191      ; R10 -= R12; PC := 191
111 [-]: GETGLOBAL R14 K39      ; R14 := 0xce225efa
112 [-]: CONST     R15 0        ; R15 := 0.000000
113 [-]: CALL      R14 2 1      ; R14(R15)
114 [-]: GETTABLE  R14 R5 R13   ; R14 := R5[R13]
115 [-]: GETTABLE  R14 R14 K40  ; R14 := R14["member"]
116 [-]: TEST      R9 0         ; if not R9 then PC := 123
117 [-]: JMP       123          ; PC := 123
118 [-]: GETUPVAL  R15 U1       ; R15 := U1
119 [-]: MOVE      R16 R14      ; R16 := R14
120 [-]: CALL      R15 2 2      ; R15 := R15(R16)
121 [-]: TEST      R15 0        ; if not R15 then PC := 191
122 [-]: JMP       191          ; PC := 191
123 [-]: GETUPVAL  R15 U2       ; R15 := U2
124 [-]: GETTABLE  R15 R15 K41  ; R15 := R15["HIDDEN_PLAYER_NAME"]
125 [-]: EQ        1 R14 R15    ; if R14 == R15 then PC := 191
126 [-]: JMP       191          ; PC := 191
127 [-]: SELF      R15 R0 K42   ; R16 := R0; R15 := R0[0x161714b6]
128 [-]: MOVE      R17 R14      ; R17 := R14
129 [-]: OP_LOADBOOL R18 1 0      ; R18 := true
130 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
131 [-]: MOVE      R7 R15       ; R7 := R15
132 [-]: GETTABLE  R15 R0 K43   ; R15 := R0["mUserList"]
133 [-]: SETTABLE  R15 R14 R7   ; R15[R14] := R7
134 [-]: GETGLOBAL R15 K3       ; R15 := mWindow
135 [-]: GETTABLE  R15 R15 K4   ; R15 := R15["mUserPanel"]
136 [-]: GETTABLE  R15 R15 K5   ; R15 := R15["mListControl"]
137 [-]: SELF      R15 R15 K22  ; R16 := R15; R15 := R15[0xbad4316f]
138 [-]: NEWTABLE  R17 0 4      ; R17 := {}
139 [-]: SETTABLE  R17 K23 R13  ; R17["Id"] := R13
140 [-]: GETTABLE  R18 R7 K44   ; R18 := R7["name"]
141 [-]: SETTABLE  R17 K25 R18  ; R17["User"] := R18
142 [-]: GETTABLE  R18 R7 K45   ; R18 := R7["lowercaseName"]
143 [-]: SETTABLE  R17 K26 R18  ; R17["UserLower"] := R18
144 [-]: GETTABLE  R18 R0 K21   ; R18 := R0["mChannelName"]
145 [-]: SETTABLE  R17 K28 R18  ; R17["Channel"] := R18
146 [-]: OP_LOADBOOL R18 1 0      ; R18 := true
147 [-]: CALL      R15 4 1      ; R15(R16,R17,R18)
148 [-]: EQ        1 R8 K24     ; if R8 == 1.000000 then PC := 161
149 [-]: JMP       161          ; PC := 161
150 [-]: GETGLOBAL R15 K19      ; R15 := 0x7f5022cf
151 [-]: GETTABLE  R15 R15 K20  ; R82 := R15[0x1a94c9cc]
152 [-]: GETTABLE  R16 R7 K45   ; R16 := R7["lowercaseName"]
153 [-]: CONST     R17 1        ; R17 := 1.000000
154 [-]: CONST     R18 1        ; R18 := 1.000000
155 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
156 [-]: GETUPVAL  R16 U3       ; R16 := U3
157 [-]: SUB       R17 R8 K24   ; R17 := R8 - 1.000000
158 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
159 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 191
160 [-]: JMP       191          ; PC := 191
161 [-]: MOVE      R15 R8       ; R15 := R8
162 [-]: GETUPVAL  R16 U3       ; R16 := U3
163 [-]: LEN       R16 R16      ; R16 := # R16
164 [-]: CONST     R17 1        ; R17 := 1.000000
165 [-]: FORPREP   R15 190      ; R15 -= R17; PC := 190
166 [-]: GETGLOBAL R19 K19      ; R19 := 0x7f5022cf
167 [-]: GETTABLE  R19 R19 K46  ; R82 := R19[0x3f3e4d12]
168 [-]: GETGLOBAL R20 K19      ; R20 := 0x7f5022cf
169 [-]: GETTABLE  R20 R20 K20  ; R82 := R20[0x1a94c9cc]
170 [-]: GETTABLE  R21 R7 K45   ; R21 := R7["lowercaseName"]
171 [-]: CONST     R22 1        ; R22 := 1.000000
172 [-]: CONST     R23 1        ; R23 := 1.000000
173 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
174 [-]: CALL      R19 0 2      ; R19 := R19(R20,...)
175 [-]: GETUPVAL  R20 U3       ; R20 := U3
176 [-]: GETTABLE  R20 R20 R18  ; R20 := R20[R18]
177 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 190
178 [-]: JMP       190          ; PC := 190
179 [-]: MOVE      R19 R8       ; R19 := R8
180 [-]: SUB       R20 R18 K24  ; R20 := R18 - 1.000000
181 [-]: CONST     R21 1        ; R21 := 1.000000
182 [-]: FORPREP   R19 185      ; R19 -= R21; PC := 185
183 [-]: GETTABLE  R23 R0 K38   ; R23 := R0["mAlphabetIndex"]
184 [-]: SETTABLE  R23 R22 R13  ; R23[R22] := R13
185 [-]: FORLOOP   R19 183      ; R19 += R21; if R19 <= R20 then begin PC := 183; R22 := R19 end
186 [-]: GETTABLE  R23 R0 K38   ; R23 := R0["mAlphabetIndex"]
187 [-]: SETTABLE  R23 R18 R13  ; R23[R18] := R13
188 [-]: ADD       R8 R18 K24   ; R8 := R18 + 1.000000
189 [-]: JMP       191          ; PC := 191
190 [-]: FORLOOP   R15 166      ; R15 += R17; if R15 <= R16 then begin PC := 166; R18 := R15 end
191 [-]: FORLOOP   R10 111      ; R10 += R12; if R10 <= R11 then begin PC := 111; R13 := R10 end
192 [-]: GETGLOBAL R23 K3       ; R23 := mWindow
193 [-]: GETTABLE  R23 R23 K4   ; R23 := R23["mUserPanel"]
194 [-]: GETTABLE  R23 R23 K5   ; R23 := R23["mListControl"]
195 [-]: SELF      R23 R23 K47  ; R24 := R23; R23 := R23[0x5fbddc1a]
196 [-]: CALL      R23 2 2      ; R23 := R23(R24)
197 [-]: MOVE      R24 R8       ; R24 := R8
198 [-]: GETUPVAL  R25 U3       ; R25 := U3
199 [-]: LEN       R25 R25      ; R25 := # R25
200 [-]: CONST     R26 1        ; R26 := 1.000000
201 [-]: FORPREP   R24 204      ; R24 -= R26; PC := 204
202 [-]: GETTABLE  R28 R0 K38   ; R28 := R0["mAlphabetIndex"]
203 [-]: SETTABLE  R28 R27 R23  ; R28[R27] := R23
204 [-]: FORLOOP   R24 202      ; R24 += R26; if R24 <= R25 then begin PC := 202; R27 := R24 end
205 [-]: GETTABLE  R28 R0 K7    ; R28 := R0["mParent"]
206 [-]: GETTABLE  R28 R28 K4   ; R28 := R28["mUserPanel"]
207 [-]: GETTABLE  R28 R28 K5   ; R28 := R28["mListControl"]
208 [-]: SELF      R28 R28 K48  ; R29 := R28; R28 := R28[0x71e9ac81]
209 [-]: LOADNIL   R30 R30      ; R30 := nil
210 [-]: OP_LOADBOOL R31 1 0      ; R31 := true
211 [-]: OP_LOADBOOL R32 1 0      ; R32 := true
212 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
213 [-]: GETGLOBAL R28 K3       ; R28 := mWindow
214 [-]: GETTABLE  R28 R28 K4   ; R28 := R28["mUserPanel"]
215 [-]: GETTABLE  R28 R28 K5   ; R28 := R28["mListControl"]
216 [-]: SELF      R28 R28 K47  ; R29 := R28; R28 := R28[0x5fbddc1a]
217 [-]: CALL      R28 2 2      ; R28 := R28(R29)
218 [-]: GETGLOBAL R29 K9       ; R29 := 0x34291f5c
219 [-]: GETTABLE  R29 R29 K49  ; R82 := R29[0x1467d5f4]
220 [-]: CALL      R29 1 2      ; R29 := R29()
221 [-]: TEST      R29 0        ; if not R29 then PC := 244
222 [-]: JMP       244          ; PC := 244
223 [-]: GETGLOBAL R29 K31      ; R29 := 0x7b998233
224 [-]: GETTABLE  R30 R0 K2    ; R30 := R0["mStoredFocusIndex"]
225 [-]: CALL      R29 2 2      ; R29 := R29(R30)
226 [-]: TEST      R29 1        ; if R29 then PC := 244
227 [-]: JMP       244          ; PC := 244
228 [-]: LT        0 K34 R28    ; if 0.000000 >= R28 then PC := 244
229 [-]: JMP       244          ; PC := 244
230 [-]: GETTABLE  R29 R0 K2    ; R29 := R0["mStoredFocusIndex"]
231 [-]: LT        0 R28 R29    ; if R28 >= R29 then PC := 239
232 [-]: JMP       239          ; PC := 239
233 [-]: GETGLOBAL R29 K3       ; R29 := mWindow
234 [-]: GETTABLE  R29 R29 K4   ; R29 := R29["mUserPanel"]
235 [-]: SELF      R29 R29 K50  ; R30 := R29; R29 := R29[0x1e63ac7a]
236 [-]: MOVE      R31 R28      ; R31 := R28
237 [-]: CALL      R29 3 1      ; R29(R30,R31)
238 [-]: JMP       244          ; PC := 244
239 [-]: GETGLOBAL R29 K3       ; R29 := mWindow
240 [-]: GETTABLE  R29 R29 K4   ; R29 := R29["mUserPanel"]
241 [-]: SELF      R29 R29 K50  ; R30 := R29; R29 := R29[0x1e63ac7a]
242 [-]: GETTABLE  R31 R0 K2    ; R31 := R0["mStoredFocusIndex"]
243 [-]: CALL      R29 3 1      ; R29(R30,R31)
244 [-]: RETURN    R0 1         ; return 


; Function #94.10:
;
; Name:            
; Defined at line: 4549
; #Upvalues:       0
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mChannelName"]
  2 [-]: EQ        1 R5 R2      ; if R5 == R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mInitialPopulationDone"]
  6 [-]: TEST      R5 1         ; if R5 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: SELF      R5 R0 K2     ; R6 := R0; R5 := R0[0x5e63828f]
  9 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 10 [-]: CALL      R5 3 1       ; R5(R6,R7)
 11 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["mInitialPopulationDone"]
 12 [-]: TEST      R5 0         ; if not R5 then PC := 42
 13 [-]: JMP       42           ; PC := 42
 14 [-]: SELF      R5 R0 K3     ; R6 := R0; R5 := R0[0xced29e0b]
 15 [-]: MOVE      R7 R1        ; R7 := R1
 16 [-]: MOVE      R8 R2        ; R8 := R2
 17 [-]: MOVE      R9 R4        ; R9 := R4
 18 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 19 [-]: TEST      R5 0         ; if not R5 then PC := 42
 20 [-]: JMP       42           ; PC := 42
 21 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mWelcome"]
 22 [-]: EQ        0 R5 K5      ; if R5 ~= nil then PC := 42
 23 [-]: JMP       42           ; PC := 42
 24 [-]: GETGLOBAL R5 K6        ; R5 := 0x0032441c
 25 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["StalkerMode"]
 26 [-]: TEST      R5 1         ; if R5 then PC := 37
 27 [-]: JMP       37           ; PC := 37
 28 [-]: SELF      R5 R0 K8     ; R6 := R0; R5 := R0[0x566ff49e]
 29 [-]: GETGLOBAL R7 K9        ; R7 := 0xae91e43b
 30 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0x42b04007]
 31 [-]: LOADK     R9 K11       ; R9 := "/Lotus/Language/Menu/Chat_HelpPrompt"
 32 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
 33 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 34 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["MESSAGE_TYPE_SYSTEM"]
 35 [-]: LOADK     R9 K13       ; R9 := ""
 36 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 37 [-]: NEWTABLE  R5 0 0       ; R5 := {}
 38 [-]: SETTABLE  R0 K14 R5    ; R0["mCachedLines"] := R5
 39 [-]: NEWTABLE  R5 0 1       ; R5 := {}
 40 [-]: SETTABLE  R5 K15 K16   ; R5["done"] := 1.000000
 41 [-]: SETTABLE  R0 K4 R5     ; R0["mWelcome"] := R5
 42 [-]: RETURN    R0 1         ; return 


; Function #94.11:
;
; Name:            
; Defined at line: 4577
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mChannelName"]
  2 [-]: EQ        0 R4 R2      ; if R4 ~= R2 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mChannelType"]
  5 [-]: GETGLOBAL R5 K2        ; R5 := mWindow
  6 [-]: GETTABLE  R5 R5 K3     ; R5 := R5["CHANNEL_PRIVATE_CHAT"]
  7 [-]: LE        0 R5 R4      ; if R5 > R4 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mUserList"]
 11 [-]: SELF      R5 R0 K5     ; R6 := R0; R5 := R0[0x161714b6]
 12 [-]: MOVE      R7 R1        ; R7 := R1
 13 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 14 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 15 [-]: SETTABLE  R4 R1 R5     ; R4[R1] := R5
 16 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mIsActive"]
 17 [-]: TEST      R4 0         ; if not R4 then PC := 146
 18 [-]: JMP       146          ; PC := 146
 19 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mParent"]
 20 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["mUserPanel"]
 21 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mListControl"]
 22 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0x5fbddc1a]
 23 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 24 [-]: LOADNIL   R5 R5        ; R5 := nil
 25 [-]: CONST     R6 1         ; R6 := 1.000000
 26 [-]: MOVE      R7 R4        ; R7 := R4
 27 [-]: LT        0 R6 R7      ; if R6 >= R7 then PC := 66
 28 [-]: JMP       66           ; PC := 66
 29 [-]: GETGLOBAL R8 K11       ; R8 := 0xce225efa
 30 [-]: CONST     R9 0         ; R9 := 0.000000
 31 [-]: CALL      R8 2 1       ; R8(R9)
 32 [-]: GETGLOBAL R8 K12       ; R8 := 0x5bced4c4
 33 [-]: GETTABLE  R8 R8 K13    ; R82 := R8[0x55f27c30]
 34 [-]: ADD       R9 R6 R7     ; R9 := R6 + R7
 35 [-]: DIV       R9 R9 K14    ; R9 := R9 / 2.000000
 36 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 37 [-]: GETTABLE  R9 R0 K7     ; R9 := R0["mParent"]
 38 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["mUserPanel"]
 39 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mListControl"]
 40 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["mElements"]
 41 [-]: GETTABLE  R9 R9 R8     ; R9 := R9[R8]
 42 [-]: GETGLOBAL R10 K16      ; R10 := 0x7b998233
 43 [-]: MOVE      R11 R9       ; R11 := R9
 44 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 45 [-]: TEST      R10 1        ; if R10 then PC := 50
 46 [-]: JMP       50           ; PC := 50
 47 [-]: GETTABLE  R10 R9 K17   ; R10 := R9["User"]
 48 [-]: EQ        0 R10 R1     ; if R10 ~= R1 then PC := 53
 49 [-]: JMP       53           ; PC := 53
 50 [-]: MOVE      R5 R8        ; R5 := R8
 51 [-]: JMP       66           ; PC := 66
 52 [-]: JMP       27           ; PC := 27
 53 [-]: GETTABLE  R10 R9 K18   ; R10 := R9["UserLower"]
 54 [-]: GETGLOBAL R11 K19      ; R11 := 0x7f5022cf
 55 [-]: GETTABLE  R11 R11 K20  ; R82 := R11[0x04981ab3]
 56 [-]: MOVE      R12 R1       ; R12 := R1
 57 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 58 [-]: LT        0 R11 R10    ; if R11 >= R10 then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: MOVE      R7 R8        ; R7 := R8
 61 [-]: MOVE      R5 R7        ; R5 := R7
 62 [-]: JMP       27           ; PC := 27
 63 [-]: ADD       R6 R8 K21    ; R6 := R8 + 1.000000
 64 [-]: MOVE      R5 R6        ; R5 := R6
 65 [-]: JMP       27           ; PC := 27
 66 [-]: EQ        1 R5 K22     ; if R5 == nil then PC := 146
 67 [-]: JMP       146          ; PC := 146
 68 [-]: GETTABLE  R10 R0 K7    ; R10 := R0["mParent"]
 69 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["mUserPanel"]
 70 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["mListControl"]
 71 [-]: GETTABLE  R10 R10 K15  ; R10 := R10["mElements"]
 72 [-]: GETTABLE  R10 R10 R5   ; R10 := R10[R5]
 73 [-]: GETGLOBAL R11 K16      ; R11 := 0x7b998233
 74 [-]: MOVE      R12 R10      ; R12 := R10
 75 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 76 [-]: TEST      R11 1        ; if R11 then PC := 146
 77 [-]: JMP       146          ; PC := 146
 78 [-]: GETTABLE  R11 R10 K17  ; R11 := R10["User"]
 79 [-]: EQ        0 R11 R1     ; if R11 ~= R1 then PC := 146
 80 [-]: JMP       146          ; PC := 146
 81 [-]: CONST     R11 1        ; R11 := 1.000000
 82 [-]: GETTABLE  R12 R0 K23   ; R12 := R0["mAlphabetIndex"]
 83 [-]: LEN       R12 R12      ; R12 := # R12
 84 [-]: CONST     R13 1        ; R13 := 1.000000
 85 [-]: FORPREP   R11 101      ; R11 -= R13; PC := 101
 86 [-]: GETTABLE  R15 R0 K23   ; R15 := R0["mAlphabetIndex"]
 87 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
 88 [-]: LT        1 R5 R15     ; if R5 < R15 then PC := 96
 89 [-]: JMP       96           ; PC := 96
 90 [-]: GETTABLE  R15 R0 K23   ; R15 := R0["mAlphabetIndex"]
 91 [-]: GETTABLE  R15 R15 R14  ; R15 := R15[R14]
 92 [-]: EQ        0 R5 R15     ; if R5 ~= R15 then PC := 101
 93 [-]: JMP       101          ; PC := 101
 94 [-]: EQ        0 R5 R4      ; if R5 ~= R4 then PC := 101
 95 [-]: JMP       101          ; PC := 101
 96 [-]: GETTABLE  R15 R0 K23   ; R15 := R0["mAlphabetIndex"]
 97 [-]: GETTABLE  R16 R0 K23   ; R16 := R0["mAlphabetIndex"]
 98 [-]: GETTABLE  R16 R16 R14  ; R16 := R16[R14]
 99 [-]: SUB       R16 R16 K21  ; R16 := R16 - 1.000000
100 [-]: SETTABLE  R15 R14 R16  ; R15[R14] := R16
101 [-]: FORLOOP   R11 86       ; R11 += R13; if R11 <= R12 then begin PC := 86; R14 := R11 end
102 [-]: GETTABLE  R15 R0 K7    ; R15 := R0["mParent"]
103 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["mUserPanel"]
104 [-]: GETTABLE  R15 R15 K9   ; R15 := R15["mListControl"]
105 [-]: SELF      R15 R15 K24  ; R16 := R15; R15 := R15[0x9ae7e2d2]
106 [-]: MOVE      R17 R5       ; R17 := R5
107 [-]: OP_LOADBOOL R18 1 0      ; R18 := true
108 [-]: OP_LOADBOOL R19 1 0      ; R19 := true
109 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
110 [-]: GETTABLE  R15 R0 K7    ; R15 := R0["mParent"]
111 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["mVisualMode"]
112 [-]: GETTABLE  R16 R0 K7    ; R16 := R0["mParent"]
113 [-]: GETTABLE  R16 R16 K26  ; R16 := R16["VISUAL_MODE_MENU_SIMPLE"]
114 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 146
115 [-]: JMP       146          ; PC := 146
116 [-]: GETTABLE  R15 R0 K7    ; R15 := R0["mParent"]
117 [-]: GETTABLE  R15 R15 K25  ; R15 := R15["mVisualMode"]
118 [-]: GETTABLE  R16 R0 K7    ; R16 := R0["mParent"]
119 [-]: GETTABLE  R16 R16 K27  ; R16 := R16["VISUAL_MODE_GAMEPLAY_SIMPLE"]
120 [-]: EQ        1 R15 R16    ; if R15 == R16 then PC := 146
121 [-]: JMP       146          ; PC := 146
122 [-]: GETTABLE  R15 R0 K7    ; R15 := R0["mParent"]
123 [-]: SELF      R15 R15 K28  ; R16 := R15; R15 := R15[0x8ec8f0d5]
124 [-]: GETTABLE  R17 R0 K7    ; R17 := R0["mParent"]
125 [-]: GETTABLE  R17 R17 K8   ; R17 := R17["mUserPanel"]
126 [-]: GETTABLE  R17 R17 K2   ; R17 := R17["mWindow"]
127 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
128 [-]: GETTABLE  R16 R0 K7    ; R16 := R0["mParent"]
129 [-]: GETTABLE  R16 R16 K8   ; R16 := R16["mUserPanel"]
130 [-]: SELF      R16 R16 K29  ; R17 := R16; R16 := R16[0xf1243bbe]
131 [-]: GETTABLE  R18 R15 K30  ; R18 := R15["height"]
132 [-]: CALL      R16 3 1      ; R16(R17,R18)
133 [-]: GETTABLE  R16 R0 K7    ; R16 := R0["mParent"]
134 [-]: GETTABLE  R16 R16 K8   ; R16 := R16["mUserPanel"]
135 [-]: SELF      R16 R16 K31  ; R17 := R16; R16 := R16[0x089f95cb]
136 [-]: MOVE      R18 R5       ; R18 := R5
137 [-]: CALL      R16 3 1      ; R16(R17,R18)
138 [-]: GETTABLE  R16 R0 K7    ; R16 := R0["mParent"]
139 [-]: GETTABLE  R16 R16 K8   ; R16 := R16["mUserPanel"]
140 [-]: GETTABLE  R16 R16 K9   ; R16 := R16["mListControl"]
141 [-]: SELF      R16 R16 K32  ; R17 := R16; R16 := R16[0x71e9ac81]
142 [-]: LOADNIL   R18 R18      ; R18 := nil
143 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
144 [-]: OP_LOADBOOL R20 1 0      ; R20 := true
145 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
146 [-]: TEST      R3 0         ; if not R3 then PC := 151
147 [-]: JMP       151          ; PC := 151
148 [-]: SELF      R16 R0 K33   ; R17 := R0; R16 := R0[0x3b4b4da2]
149 [-]: MOVE      R18 R1       ; R18 := R1
150 [-]: CALL      R16 3 1      ; R16(R17,R18)
151 [-]: RETURN    R0 1         ; return 


; Function #94.12:
;
; Name:            
; Defined at line: 4638
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: MOVE      R4 R1        ; R4 := R1
  2 [-]: LOADNIL   R5 R5        ; R5 := nil
  3 [-]: GETUPVAL  R6 U0        ; R6 := U0
  4 [-]: GETTABLE  R6 R6 K0     ; R6 := R6["Teal"]
  5 [-]: GETGLOBAL R7 K1        ; R7 := 0x0032441c
  6 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["UIColor_White"]
  7 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["MESSAGE_TYPE_SYSTEM"]
  8 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETGLOBAL R8 K1        ; R8 := 0x0032441c
 11 [-]: GETTABLE  R6 R8 K2     ; R6 := R8["UIColor_White"]
 12 [-]: JMP       128          ; PC := 128
 13 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["MESSAGE_TYPE_BROADCAST"]
 14 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETUPVAL  R8 U0        ; R8 := U0
 17 [-]: GETTABLE  R6 R8 K5     ; R6 := R8["Red"]
 18 [-]: GETUPVAL  R8 U0        ; R8 := U0
 19 [-]: GETTABLE  R7 R8 K5     ; R7 := R8["Red"]
 20 [-]: JMP       128          ; PC := 128
 21 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["MESSAGE_TYPE_NOTIFICATION"]
 22 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 42
 23 [-]: JMP       42           ; PC := 42
 24 [-]: GETTABLE  R8 R0 K7     ; R8 := R0["mChannelType"]
 25 [-]: GETGLOBAL R9 K8        ; R9 := mWindow
 26 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["CHANNEL_HUB"]
 27 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 39
 28 [-]: JMP       39           ; PC := 39
 29 [-]: GETGLOBAL R8 K10       ; R8 := 0xe7f2b02f
 30 [-]: SELF      R8 R8 K11    ; R9 := R8; R8 := R8[0xca33534d]
 31 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 32 [-]: TEST      R8 0         ; if not R8 then PC := 39
 33 [-]: JMP       39           ; PC := 39
 34 [-]: GETGLOBAL R8 K1        ; R8 := 0x0032441c
 35 [-]: GETTABLE  R6 R8 K12    ; R6 := R8["UIColor_Gold"]
 36 [-]: GETGLOBAL R8 K1        ; R8 := 0x0032441c
 37 [-]: GETTABLE  R7 R8 K12    ; R7 := R8["UIColor_Gold"]
 38 [-]: JMP       128          ; PC := 128
 39 [-]: GETGLOBAL R8 K1        ; R8 := 0x0032441c
 40 [-]: GETTABLE  R6 R8 K2     ; R6 := R8["UIColor_White"]
 41 [-]: JMP       128          ; PC := 128
 42 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["MESSAGE_TYPE_CLAN"]
 43 [-]: EQ        1 R3 R8      ; if R3 == R8 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: GETTABLE  R8 R0 K14    ; R8 := R0["MESSAGE_TYPE_ALLIANCE"]
 46 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 51
 47 [-]: JMP       51           ; PC := 51
 48 [-]: GETUPVAL  R8 U0        ; R8 := U0
 49 [-]: GETTABLE  R6 R8 K15    ; R6 := R8["Green"]
 50 [-]: JMP       83           ; PC := 83
 51 [-]: GETTABLE  R8 R0 K16    ; R8 := R0["MESSAGE_TYPE_SQUAD"]
 52 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 57
 53 [-]: JMP       57           ; PC := 57
 54 [-]: GETUPVAL  R8 U0        ; R8 := U0
 55 [-]: GETTABLE  R6 R8 K17    ; R6 := R8["Blue"]
 56 [-]: JMP       83           ; PC := 83
 57 [-]: GETTABLE  R8 R0 K18    ; R8 := R0["MESSAGE_TYPE_COUNCIL"]
 58 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 63
 59 [-]: JMP       63           ; PC := 63
 60 [-]: GETUPVAL  R8 U0        ; R8 := U0
 61 [-]: GETTABLE  R6 R8 K19    ; R6 := R8["Orange"]
 62 [-]: JMP       83           ; PC := 83
 63 [-]: GETTABLE  R8 R0 K20    ; R8 := R0["MESSAGE_TYPE_FRIEND"]
 64 [-]: EQ        1 R3 R8      ; if R3 == R8 then PC := 69
 65 [-]: JMP       69           ; PC := 69
 66 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["MESSAGE_TYPE_INGAME_WHISPER"]
 67 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 72
 68 [-]: JMP       72           ; PC := 72
 69 [-]: GETUPVAL  R8 U0        ; R8 := U0
 70 [-]: GETTABLE  R6 R8 K22    ; R6 := R8["Pink"]
 71 [-]: JMP       83           ; PC := 83
 72 [-]: GETTABLE  R8 R0 K23    ; R8 := R0["MESSAGE_TYPE_STAFF"]
 73 [-]: EQ        1 R3 R8      ; if R3 == R8 then PC := 78
 74 [-]: JMP       78           ; PC := 78
 75 [-]: GETTABLE  R8 R0 K24    ; R8 := R0["MESSAGE_TYPE_WG_MOD"]
 76 [-]: EQ        0 R3 R8      ; if R3 ~= R8 then PC := 83
 77 [-]: JMP       83           ; PC := 83
 78 [-]: GETUPVAL  R8 U0        ; R8 := U0
 79 [-]: GETTABLE  R6 R8 K25    ; R6 := R8["Purple"]
 80 [-]: GETUPVAL  R8 U0        ; R8 := U0
 81 [-]: GETTABLE  R7 R8 K25    ; R7 := R8["Purple"]
 82 [-]: JMP       83           ; PC := 83
 83 [-]: TEST      R2 0         ; if not R2 then PC := 127
 84 [-]: JMP       127          ; PC := 127
 85 [-]: GETGLOBAL R8 K26       ; R8 := 0x7f5022cf
 86 [-]: GETTABLE  R8 R8 K27    ; R82 := R8[0xa5c556b9]
 87 [-]: MOVE      R9 R1        ; R9 := R1
 88 [-]: LOADK     R10 K28      ; R10 := ":"
 89 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 90 [-]: GETTABLE  R9 R0 K29    ; R9 := R0["mParent"]
 91 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["mShowTimeStamps"]
 92 [-]: EQ        1 R9 K31     ; if R9 == nil then PC := 105
 93 [-]: JMP       105          ; PC := 105
 94 [-]: GETTABLE  R9 R0 K29    ; R9 := R0["mParent"]
 95 [-]: GETTABLE  R9 R9 K30    ; R9 := R9["mShowTimeStamps"]
 96 [-]: TEST      R9 0         ; if not R9 then PC := 105
 97 [-]: JMP       105          ; PC := 105
 98 [-]: GETGLOBAL R9 K26       ; R9 := 0x7f5022cf
 99 [-]: GETTABLE  R9 R9 K27    ; R82 := R9[0xa5c556b9]
100 [-]: MOVE      R10 R1       ; R10 := R1
101 [-]: LOADK     R11 K28      ; R11 := ":"
102 [-]: CONST     R12 8        ; R12 := 8.000000
103 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
104 [-]: MOVE      R8 R9        ; R8 := R9
105 [-]: EQ        0 R8 K31     ; if R8 ~= nil then PC := 113
106 [-]: JMP       113          ; PC := 113
107 [-]: CONST     R8 1         ; R8 := 1.000000
108 [-]: GETTABLE  R9 R0 K13    ; R9 := R0["MESSAGE_TYPE_CLAN"]
109 [-]: EQ        0 R3 R9      ; if R3 ~= R9 then PC := 113
110 [-]: JMP       113          ; PC := 113
111 [-]: GETUPVAL  R9 U0        ; R9 := U0
112 [-]: GETTABLE  R7 R9 K15    ; R7 := R9["Green"]
113 [-]: GETGLOBAL R9 K26       ; R9 := 0x7f5022cf
114 [-]: GETTABLE  R9 R9 K32    ; R82 := R9[0x1a94c9cc]
115 [-]: MOVE      R10 R1       ; R10 := R1
116 [-]: CONST     R11 0        ; R11 := 0.000000
117 [-]: SUB       R12 R8 K33   ; R12 := R8 - 1.000000
118 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
119 [-]: MOVE      R4 R9        ; R4 := R9
120 [-]: GETGLOBAL R9 K26       ; R9 := 0x7f5022cf
121 [-]: GETTABLE  R9 R9 K32    ; R82 := R9[0x1a94c9cc]
122 [-]: MOVE      R10 R1       ; R10 := R1
123 [-]: MOVE      R11 R8       ; R11 := R8
124 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
125 [-]: MOVE      R5 R9        ; R5 := R9
126 [-]: JMP       128          ; PC := 128
127 [-]: MOVE      R6 R7        ; R6 := R7
128 [-]: MOVE      R9 R4        ; R9 := R4
129 [-]: MOVE      R10 R5       ; R10 := R5
130 [-]: MOVE      R11 R6       ; R11 := R6
131 [-]: MOVE      R12 R7       ; R12 := R7
132 [-]: RETURN    R9 5         ; return R9,R10,R11,R12
133 [-]: RETURN    R0 1         ; return 


; Function #94.13:
;
; Name:            
; Defined at line: 4692
; #Upvalues:       5
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  100

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: GETTABLE  R4 R4 K0     ; R82 := R4[0x4ace5f64]
  3 [-]: MOVE      R5 R1        ; R5 := R1
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: MOVE      R1 R4        ; R1 := R4
  6 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
  7 [-]: NEWTABLE  R5 0 2       ; R5 := {}
  8 [-]: NEWTABLE  R6 0 0       ; R6 := {}
  9 [-]: SETTABLE  R5 K1 R6     ; R5["Item"] := R6
 10 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 11 [-]: SETTABLE  R5 K2 R6     ; R5["Guild"] := R6
 12 [-]: NEWTABLE  R6 0 2       ; R6 := {}
 13 [-]: SETTABLE  R6 K1 K3     ; R6["Item"] := 1.000000
 14 [-]: SETTABLE  R6 K2 K3     ; R6["Guild"] := 1.000000
 15 [-]: LOADNIL   R7 R7        ; R7 := nil
 16 [-]: GETGLOBAL R8 K4        ; R8 := 0x7f5022cf
 17 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 18 [-]: MOVE      R9 R1        ; R9 := R1
 19 [-]: LOADK     R10 K6       ; R10 := "%[OMG%-.*%]"
 20 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 21 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 94
 22 [-]: JMP       94           ; PC := 94
 23 [-]: GETGLOBAL R8 K4        ; R8 := 0x7f5022cf
 24 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 25 [-]: MOVE      R9 R1        ; R9 := R1
 26 [-]: LOADK     R10 K8       ; R10 := "%[SONG%-.*%]"
 27 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 28 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 94
 29 [-]: JMP       94           ; PC := 94
 30 [-]: GETGLOBAL R8 K4        ; R8 := 0x7f5022cf
 31 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 32 [-]: MOVE      R9 R1        ; R9 := R1
 33 [-]: LOADK     R10 K9       ; R10 := "%[ZAW%-.*%]"
 34 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 35 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 94
 36 [-]: JMP       94           ; PC := 94
 37 [-]: GETGLOBAL R8 K4        ; R8 := 0x7f5022cf
 38 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 39 [-]: MOVE      R9 R1        ; R9 := R1
 40 [-]: LOADK     R10 K10      ; R10 := "%[AMP%-.*%]"
 41 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 42 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 94
 43 [-]: JMP       94           ; PC := 94
 44 [-]: GETGLOBAL R8 K4        ; R8 := 0x7f5022cf
 45 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 46 [-]: MOVE      R9 R1        ; R9 := R1
 47 [-]: LOADK     R10 K11      ; R10 := "%[MOA%-.*%]"
 48 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 49 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 94
 50 [-]: JMP       94           ; PC := 94
 51 [-]: GETGLOBAL R8 K4        ; R8 := 0x7f5022cf
 52 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 53 [-]: MOVE      R9 R1        ; R9 := R1
 54 [-]: LOADK     R10 K12      ; R10 := "%[KDR%-.*%]"
 55 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 56 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 94
 57 [-]: JMP       94           ; PC := 94
 58 [-]: GETGLOBAL R8 K4        ; R8 := 0x7f5022cf
 59 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 60 [-]: MOVE      R9 R1        ; R9 := R1
 61 [-]: LOADK     R10 K13      ; R10 := "%[KIT%-.*%]"
 62 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 63 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 94
 64 [-]: JMP       94           ; PC := 94
 65 [-]: GETGLOBAL R8 K4        ; R8 := 0x7f5022cf
 66 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 67 [-]: MOVE      R9 R1        ; R9 := R1
 68 [-]: LOADK     R10 K14      ; R10 := "%[FF%-.*%]"
 69 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 70 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 94
 71 [-]: JMP       94           ; PC := 94
 72 [-]: GETGLOBAL R8 K4        ; R8 := 0x7f5022cf
 73 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 74 [-]: MOVE      R9 R1        ; R9 := R1
 75 [-]: LOADK     R10 K15      ; R10 := "%[MOD%-.*%]"
 76 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 77 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 94
 78 [-]: JMP       94           ; PC := 94
 79 [-]: GETGLOBAL R8 K4        ; R8 := 0x7f5022cf
 80 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 81 [-]: MOVE      R9 R1        ; R9 := R1
 82 [-]: LOADK     R10 K16      ; R10 := "%[SHZN%-.*%]"
 83 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 84 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 94
 85 [-]: JMP       94           ; PC := 94
 86 [-]: GETGLOBAL R8 K4        ; R8 := 0x7f5022cf
 87 [-]: GETTABLE  R8 R8 K5     ; R82 := R8[0xa5c556b9]
 88 [-]: MOVE      R9 R1        ; R9 := R1
 89 [-]: LOADK     R10 K17      ; R10 := "{GUILD=.*}"
 90 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 91 [-]: EQ        0 R8 K7      ; if R8 ~= nil then PC := 94
 92 [-]: JMP       94           ; PC := 94
 93 [-]: OP_LOADBOOL R8 0 1       ; R8 := false; PC := 94
 94 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 95 [-]: TEST      R8 0         ; if not R8 then PC := 684
 96 [-]: JMP       684          ; PC := 684
 97 [-]: LOADNIL   R9 R9        ; R9 := nil
 98 [-]: LOADK     R10 K18      ; R10 := ""
 99 [-]: CONST     R11 0        ; R11 := 0.000000
100 [-]: LEN       R12 R1       ; R12 := # R1
101 [-]: LE        0 R11 R12    ; if R11 > R12 then PC := 684
102 [-]: JMP       684          ; PC := 684
103 [-]: GETGLOBAL R12 K4       ; R12 := 0x7f5022cf
104 [-]: GETTABLE  R12 R12 K5   ; R82 := R12[0xa5c556b9]
105 [-]: MOVE      R13 R1       ; R13 := R1
106 [-]: LOADK     R14 K19      ; R14 := "[%[{%]}]"
107 [-]: ADD       R15 R11 K3   ; R15 := R11 + 1.000000
108 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
109 [-]: MOVE      R11 R12      ; R11 := R12
110 [-]: GETGLOBAL R12 K20      ; R12 := 0x7b998233
111 [-]: MOVE      R13 R11      ; R13 := R11
112 [-]: CALL      R12 2 2      ; R12 := R12(R13)
113 [-]: TEST      R12 0        ; if not R12 then PC := 116
114 [-]: JMP       116          ; PC := 116
115 [-]: JMP       684          ; PC := 684
116 [-]: GETGLOBAL R12 K4       ; R12 := 0x7f5022cf
117 [-]: GETTABLE  R12 R12 K21  ; R82 := R12[0x1a94c9cc]
118 [-]: MOVE      R13 R1       ; R13 := R1
119 [-]: MOVE      R14 R11      ; R14 := R11
120 [-]: MOVE      R15 R11      ; R15 := R11
121 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
122 [-]: EQ        0 R12 K22    ; if R12 ~= "[" then PC := 127
123 [-]: JMP       127          ; PC := 127
124 [-]: MOVE      R9 R11       ; R9 := R11
125 [-]: LOADK     R10 K23      ; R10 := "item"
126 [-]: JMP       100          ; PC := 100
127 [-]: EQ        0 R12 K24    ; if R12 ~= "{" then PC := 132
128 [-]: JMP       132          ; PC := 132
129 [-]: MOVE      R9 R11       ; R9 := R11
130 [-]: LOADK     R10 K25      ; R10 := "clan"
131 [-]: JMP       100          ; PC := 100
132 [-]: GETGLOBAL R13 K20      ; R13 := 0x7b998233
133 [-]: MOVE      R14 R9       ; R14 := R9
134 [-]: CALL      R13 2 2      ; R13 := R13(R14)
135 [-]: TEST      R13 1        ; if R13 then PC := 141
136 [-]: JMP       141          ; PC := 141
137 [-]: EQ        0 R10 K23    ; if R10 ~= "item" then PC := 141
138 [-]: JMP       141          ; PC := 141
139 [-]: EQ        1 R12 K26    ; if R12 == "]" then PC := 145
140 [-]: JMP       145          ; PC := 145
141 [-]: EQ        0 R10 K25    ; if R10 ~= "clan" then PC := 100
142 [-]: JMP       100          ; PC := 100
143 [-]: EQ        0 R12 K27    ; if R12 ~= "}" then PC := 100
144 [-]: JMP       100          ; PC := 100
145 [-]: GETGLOBAL R13 K4       ; R13 := 0x7f5022cf
146 [-]: GETTABLE  R13 R13 K21  ; R82 := R13[0x1a94c9cc]
147 [-]: MOVE      R14 R1       ; R14 := R1
148 [-]: ADD       R15 R9 K3    ; R15 := R9 + 1.000000
149 [-]: SUB       R16 R11 K3   ; R16 := R11 - 1.000000
150 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
151 [-]: MOVE      R7 R13       ; R7 := R13
152 [-]: EQ        0 R10 K23    ; if R10 ~= "item" then PC := 618
153 [-]: JMP       618          ; PC := 618
154 [-]: GETGLOBAL R13 K28      ; R13 := 0x83e41587
155 [-]: MOVE      R14 R7       ; R14 := R7
156 [-]: CALL      R13 2 2      ; R13 := R13(R14)
157 [-]: GETGLOBAL R14 K4       ; R14 := 0x7f5022cf
158 [-]: GETTABLE  R14 R14 K21  ; R82 := R14[0x1a94c9cc]
159 [-]: MOVE      R15 R13      ; R15 := R13
160 [-]: CONST     R16 1        ; R16 := 1.000000
161 [-]: CONST     R17 4        ; R17 := 4.000000
162 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
163 [-]: EQ        0 R14 K29    ; if R14 ~= "omg-" then PC := 244
164 [-]: JMP       244          ; PC := 244
165 [-]: GETGLOBAL R14 K4       ; R14 := 0x7f5022cf
166 [-]: GETTABLE  R14 R14 K5   ; R82 := R14[0xa5c556b9]
167 [-]: MOVE      R15 R7       ; R15 := R7
168 [-]: LOADK     R16 K30      ; R16 := ":"
169 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
170 [-]: EQ        1 R14 K7     ; if R14 == nil then PC := 681
171 [-]: JMP       681          ; PC := 681
172 [-]: GETGLOBAL R15 K31      ; R15 := 0xb009bbc6
173 [-]: GETUPVAL  R16 U1       ; R16 := U1
174 [-]: GETTABLE  R16 R16 K32  ; R16 := R16["OMEGA_TYPE_PREFIX"]
175 [-]: GETGLOBAL R17 K4       ; R17 := 0x7f5022cf
176 [-]: GETTABLE  R17 R17 K21  ; R82 := R17[0x1a94c9cc]
177 [-]: MOVE      R18 R7       ; R18 := R7
178 [-]: CONST     R19 5        ; R19 := 5.000000
179 [-]: SUB       R20 R14 K3   ; R20 := R14 - 1.000000
180 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
181 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
182 [-]: CALL      R15 2 2      ; R15 := R15(R16)
183 [-]: GETGLOBAL R16 K20      ; R16 := 0x7b998233
184 [-]: MOVE      R17 R15      ; R17 := R15
185 [-]: CALL      R16 2 2      ; R16 := R16(R17)
186 [-]: TEST      R16 1        ; if R16 then PC := 681
187 [-]: JMP       681          ; PC := 681
188 [-]: SELF      R16 R15 K33  ; R17 := R15; R16 := R15[0x6f4df5bc]
189 [-]: GETGLOBAL R18 K4       ; R18 := 0x7f5022cf
190 [-]: GETTABLE  R18 R18 K21  ; R82 := R18[0x1a94c9cc]
191 [-]: MOVE      R19 R7       ; R19 := R7
192 [-]: ADD       R20 R14 K3   ; R20 := R14 + 1.000000
193 [-]: CALL      R18 3 0      ; R18,... := R18(R19,R20)
194 [-]: CALL      R16 0 2      ; R16 := R16(R17,...)
195 [-]: SELF      R17 R15 K34  ; R18 := R15; R17 := R15[0x73f9dc2f]
196 [-]: MOVE      R19 R16      ; R19 := R16
197 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
198 [-]: SELF      R18 R15 K35  ; R19 := R15; R18 := R15[0x0d4a92a7]
199 [-]: MOVE      R20 R16      ; R20 := R16
200 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
201 [-]: TEST      R18 1        ; if R18 then PC := 213
202 [-]: JMP       213          ; PC := 213
203 [-]: GETGLOBAL R18 K36      ; R18 := 0x5f0788c4
204 [-]: GETGLOBAL R19 K37      ; R19 := 0xae91e43b
205 [-]: SELF      R19 R19 K38  ; R20 := R19; R19 := R19[0x42b04007]
206 [-]: LOADK     R21 K39      ; R21 := "/Lotus/Language/Omega/OmegaUnidentified"
207 [-]: OP_LOADBOOL R22 0 0      ; R22 := false
208 [-]: CALL      R19 4 0      ; R19,... := R19(R20,R21,R22)
209 [-]: CALL      R18 0 2      ; R18 := R18(R19,...)
210 [-]: LOADK     R19 K40      ; R19 := " "
211 [-]: MOVE      R20 R17      ; R20 := R17
212 [-]: CONCAT    R17 R18 R20  ; R17 := R18 .. R19 .. R20
213 [-]: LOADK     R18 K41      ; R18 := "<a color=\"#33ccff\" hovercolor=\""
214 [-]: GETUPVAL  R19 U2       ; R19 := U2
215 [-]: LOADK     R20 K42      ; R20 := "\" href=\"#onHyperlinkPressed:"
216 [-]: MOVE      R21 R7       ; R21 := R7
217 [-]: LOADK     R22 K43      ; R22 := "\">"
218 [-]: CONCAT    R18 R18 R22  ; R18 := R18 .. R19 .. R20 .. R21 .. R22
219 [-]: GETGLOBAL R19 K44      ; R19 := 0x33bdd652
220 [-]: GETTABLE  R19 R19 K45  ; R82 := R19[0x23d5322f]
221 [-]: GETTABLE  R20 R5 K1    ; R20 := R5["Item"]
222 [-]: NEWTABLE  R21 0 3      ; R21 := {}
223 [-]: SETTABLE  R21 K46 R17  ; R21["Name"] := R17
224 [-]: SETTABLE  R21 K47 R18  ; R21["LinkStart"] := R18
225 [-]: SETTABLE  R21 K48 R7   ; R21["LinkString"] := R7
226 [-]: CALL      R19 3 1      ; R19(R20,R21)
227 [-]: GETGLOBAL R19 K4       ; R19 := 0x7f5022cf
228 [-]: GETTABLE  R19 R19 K49  ; R82 := R19[0x66edf04f]
229 [-]: MOVE      R20 R1       ; R20 := R1
230 [-]: LOADK     R21 K50      ; R21 := "%[OMG%-[^%]]+%]"
231 [-]: LOADK     R22 K22      ; R22 := "["
232 [-]: MOVE      R23 R17      ; R23 := R17
233 [-]: LOADK     R24 K26      ; R24 := "]"
234 [-]: CONCAT    R22 R22 R24  ; R22 := R22 .. R23 .. R24
235 [-]: CONST     R23 1        ; R23 := 1.000000
236 [-]: CALL      R19 5 2      ; R19 := R19(R20,R21,R22,R23)
237 [-]: LEN       R20 R19      ; R20 := # R19
238 [-]: ADD       R20 R11 R20  ; R20 := R11 + R20
239 [-]: LEN       R21 R1       ; R21 := # R1
240 [-]: SUB       R11 R20 R21  ; R11 := R20 - R21
241 [-]: MOVE      R1 R19       ; R1 := R19
242 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
243 [-]: JMP       681          ; PC := 681
244 [-]: GETGLOBAL R20 K4       ; R20 := 0x7f5022cf
245 [-]: GETTABLE  R20 R20 K21  ; R82 := R20[0x1a94c9cc]
246 [-]: MOVE      R21 R13      ; R21 := R13
247 [-]: CONST     R22 1        ; R22 := 1.000000
248 [-]: CONST     R23 5        ; R23 := 5.000000
249 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
250 [-]: EQ        0 R20 K51    ; if R20 ~= "song-" then PC := 299
251 [-]: JMP       299          ; PC := 299
252 [-]: LOADK     R20 K41      ; R20 := "<a color=\"#33ccff\" hovercolor=\""
253 [-]: GETUPVAL  R21 U2       ; R21 := U2
254 [-]: LOADK     R22 K42      ; R22 := "\" href=\"#onHyperlinkPressed:"
255 [-]: MOVE      R23 R7       ; R23 := R7
256 [-]: LOADK     R24 K43      ; R24 := "\">"
257 [-]: CONCAT    R20 R20 R24  ; R20 := R20 .. R21 .. R22 .. R23 .. R24
258 [-]: GETGLOBAL R21 K4       ; R21 := 0x7f5022cf
259 [-]: GETTABLE  R21 R21 K5   ; R82 := R21[0xa5c556b9]
260 [-]: MOVE      R22 R7       ; R22 := R7
261 [-]: LOADK     R23 K30      ; R23 := ":"
262 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
263 [-]: EQ        1 R21 K7     ; if R21 == nil then PC := 681
264 [-]: JMP       681          ; PC := 681
265 [-]: GETUPVAL  R22 U1       ; R22 := U1
266 [-]: GETTABLE  R22 R22 K52  ; R22 := R22["StepSequencerPrefixString"]
267 [-]: GETGLOBAL R23 K4       ; R23 := 0x7f5022cf
268 [-]: GETTABLE  R23 R23 K21  ; R82 := R23[0x1a94c9cc]
269 [-]: MOVE      R24 R7       ; R24 := R7
270 [-]: CONST     R25 6        ; R25 := 6.000000
271 [-]: SUB       R26 R21 K3   ; R26 := R21 - 1.000000
272 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
273 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
274 [-]: GETGLOBAL R23 K44      ; R23 := 0x33bdd652
275 [-]: GETTABLE  R23 R23 K45  ; R82 := R23[0x23d5322f]
276 [-]: GETTABLE  R24 R5 K1    ; R24 := R5["Item"]
277 [-]: NEWTABLE  R25 0 3      ; R25 := {}
278 [-]: SETTABLE  R25 K46 R22  ; R25["Name"] := R22
279 [-]: SETTABLE  R25 K47 R20  ; R25["LinkStart"] := R20
280 [-]: SETTABLE  R25 K48 R7   ; R25["LinkString"] := R7
281 [-]: CALL      R23 3 1      ; R23(R24,R25)
282 [-]: GETGLOBAL R23 K4       ; R23 := 0x7f5022cf
283 [-]: GETTABLE  R23 R23 K49  ; R82 := R23[0x66edf04f]
284 [-]: MOVE      R24 R1       ; R24 := R1
285 [-]: LOADK     R25 K53      ; R25 := "%[SONG%-[^%]]+%]"
286 [-]: LOADK     R26 K22      ; R26 := "["
287 [-]: MOVE      R27 R22      ; R27 := R22
288 [-]: LOADK     R28 K26      ; R28 := "]"
289 [-]: CONCAT    R26 R26 R28  ; R26 := R26 .. R27 .. R28
290 [-]: CONST     R27 1        ; R27 := 1.000000
291 [-]: CALL      R23 5 2      ; R23 := R23(R24,R25,R26,R27)
292 [-]: LEN       R24 R23      ; R24 := # R23
293 [-]: ADD       R24 R11 R24  ; R24 := R11 + R24
294 [-]: LEN       R25 R1       ; R25 := # R1
295 [-]: SUB       R11 R24 R25  ; R11 := R24 - R25
296 [-]: MOVE      R1 R23       ; R1 := R23
297 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
298 [-]: JMP       681          ; PC := 681
299 [-]: GETGLOBAL R24 K4       ; R24 := 0x7f5022cf
300 [-]: GETTABLE  R24 R24 K21  ; R82 := R24[0x1a94c9cc]
301 [-]: MOVE      R25 R13      ; R25 := R13
302 [-]: CONST     R26 1        ; R26 := 1.000000
303 [-]: CONST     R27 4        ; R27 := 4.000000
304 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
305 [-]: EQ        1 R24 K54    ; if R24 == "zaw-" then PC := 339
306 [-]: JMP       339          ; PC := 339
307 [-]: GETGLOBAL R24 K4       ; R24 := 0x7f5022cf
308 [-]: GETTABLE  R24 R24 K21  ; R82 := R24[0x1a94c9cc]
309 [-]: MOVE      R25 R13      ; R25 := R13
310 [-]: CONST     R26 1        ; R26 := 1.000000
311 [-]: CONST     R27 4        ; R27 := 4.000000
312 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
313 [-]: EQ        1 R24 K55    ; if R24 == "amp-" then PC := 339
314 [-]: JMP       339          ; PC := 339
315 [-]: GETGLOBAL R24 K4       ; R24 := 0x7f5022cf
316 [-]: GETTABLE  R24 R24 K21  ; R82 := R24[0x1a94c9cc]
317 [-]: MOVE      R25 R13      ; R25 := R13
318 [-]: CONST     R26 1        ; R26 := 1.000000
319 [-]: CONST     R27 4        ; R27 := 4.000000
320 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
321 [-]: EQ        1 R24 K56    ; if R24 == "moa-" then PC := 339
322 [-]: JMP       339          ; PC := 339
323 [-]: GETGLOBAL R24 K4       ; R24 := 0x7f5022cf
324 [-]: GETTABLE  R24 R24 K21  ; R82 := R24[0x1a94c9cc]
325 [-]: MOVE      R25 R13      ; R25 := R13
326 [-]: CONST     R26 1        ; R26 := 1.000000
327 [-]: CONST     R27 4        ; R27 := 4.000000
328 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
329 [-]: EQ        1 R24 K57    ; if R24 == "kdr-" then PC := 339
330 [-]: JMP       339          ; PC := 339
331 [-]: GETGLOBAL R24 K4       ; R24 := 0x7f5022cf
332 [-]: GETTABLE  R24 R24 K21  ; R82 := R24[0x1a94c9cc]
333 [-]: MOVE      R25 R13      ; R25 := R13
334 [-]: CONST     R26 1        ; R26 := 1.000000
335 [-]: CONST     R27 4        ; R27 := 4.000000
336 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
337 [-]: EQ        0 R24 K58    ; if R24 ~= "kit-" then PC := 443
338 [-]: JMP       443          ; PC := 443
339 [-]: CONST     R24 0        ; R24 := 0.000000
340 [-]: GETUPVAL  R25 U1       ; R25 := U1
341 [-]: GETTABLE  R25 R25 K60  ; R25 := R25["ZawPrefixString"]
342 [-]: LOADK     R26 K61      ; R26 := "ZAW%-"
343 [-]: GETGLOBAL R27 K4       ; R27 := 0x7f5022cf
344 [-]: GETTABLE  R27 R27 K21  ; R82 := R27[0x1a94c9cc]
345 [-]: MOVE      R28 R13      ; R28 := R13
346 [-]: CONST     R29 1        ; R29 := 1.000000
347 [-]: CONST     R30 4        ; R30 := 4.000000
348 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
349 [-]: EQ        0 R27 K55    ; if R27 ~= "amp-" then PC := 356
350 [-]: JMP       356          ; PC := 356
351 [-]: CONST     R24 1        ; R24 := 1.000000
352 [-]: GETUPVAL  R27 U1       ; R27 := U1
353 [-]: GETTABLE  R25 R27 K62  ; R25 := R27["AmpPrefixString"]
354 [-]: LOADK     R26 K63      ; R26 := "AMP%-"
355 [-]: JMP       394          ; PC := 394
356 [-]: GETGLOBAL R27 K4       ; R27 := 0x7f5022cf
357 [-]: GETTABLE  R27 R27 K21  ; R82 := R27[0x1a94c9cc]
358 [-]: MOVE      R28 R13      ; R28 := R13
359 [-]: CONST     R29 1        ; R29 := 1.000000
360 [-]: CONST     R30 4        ; R30 := 4.000000
361 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
362 [-]: EQ        0 R27 K56    ; if R27 ~= "moa-" then PC := 369
363 [-]: JMP       369          ; PC := 369
364 [-]: CONST     R24 6        ; R24 := 6.000000
365 [-]: GETUPVAL  R27 U1       ; R27 := U1
366 [-]: GETTABLE  R25 R27 K64  ; R25 := R27["MoaPetPrefixString"]
367 [-]: LOADK     R26 K65      ; R26 := "MOA%-"
368 [-]: JMP       394          ; PC := 394
369 [-]: GETGLOBAL R27 K4       ; R27 := 0x7f5022cf
370 [-]: GETTABLE  R27 R27 K21  ; R82 := R27[0x1a94c9cc]
371 [-]: MOVE      R28 R13      ; R28 := R13
372 [-]: CONST     R29 1        ; R29 := 1.000000
373 [-]: CONST     R30 4        ; R30 := 4.000000
374 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
375 [-]: EQ        0 R27 K57    ; if R27 ~= "kdr-" then PC := 382
376 [-]: JMP       382          ; PC := 382
377 [-]: CONST     R24 7        ; R24 := 7.000000
378 [-]: GETUPVAL  R27 U1       ; R27 := U1
379 [-]: GETTABLE  R25 R27 K66  ; R25 := R27["KDrivePrefixString"]
380 [-]: LOADK     R26 K67      ; R26 := "KDR%-"
381 [-]: JMP       394          ; PC := 394
382 [-]: GETGLOBAL R27 K4       ; R27 := 0x7f5022cf
383 [-]: GETTABLE  R27 R27 K21  ; R82 := R27[0x1a94c9cc]
384 [-]: MOVE      R28 R13      ; R28 := R13
385 [-]: CONST     R29 1        ; R29 := 1.000000
386 [-]: CONST     R30 4        ; R30 := 4.000000
387 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
388 [-]: EQ        0 R27 K58    ; if R27 ~= "kit-" then PC := 394
389 [-]: JMP       394          ; PC := 394
390 [-]: CONST     R24 2        ; R24 := 2.000000
391 [-]: GETUPVAL  R27 U1       ; R27 := U1
392 [-]: GETTABLE  R25 R27 K68  ; R25 := R27["KitgunPrefixString"]
393 [-]: LOADK     R26 K69      ; R26 := "KIT%-"
394 [-]: LOADK     R27 K41      ; R27 := "<a color=\"#33ccff\" hovercolor=\""
395 [-]: GETUPVAL  R28 U2       ; R28 := U2
396 [-]: LOADK     R29 K42      ; R29 := "\" href=\"#onHyperlinkPressed:"
397 [-]: MOVE      R30 R7       ; R30 := R7
398 [-]: LOADK     R31 K43      ; R31 := "\">"
399 [-]: CONCAT    R27 R27 R31  ; R27 := R27 .. R28 .. R29 .. R30 .. R31
400 [-]: GETGLOBAL R28 K4       ; R28 := 0x7f5022cf
401 [-]: GETTABLE  R28 R28 K5   ; R82 := R28[0xa5c556b9]
402 [-]: MOVE      R29 R7       ; R29 := R7
403 [-]: LOADK     R30 K30      ; R30 := ":"
404 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
405 [-]: EQ        1 R28 K7     ; if R28 == nil then PC := 681
406 [-]: JMP       681          ; PC := 681
407 [-]: MOVE      R29 R25      ; R29 := R25
408 [-]: GETGLOBAL R30 K4       ; R30 := 0x7f5022cf
409 [-]: GETTABLE  R30 R30 K21  ; R82 := R30[0x1a94c9cc]
410 [-]: MOVE      R31 R7       ; R31 := R7
411 [-]: CONST     R32 5        ; R32 := 5.000000
412 [-]: SUB       R33 R28 K3   ; R33 := R28 - 1.000000
413 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
414 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
415 [-]: GETGLOBAL R30 K44      ; R30 := 0x33bdd652
416 [-]: GETTABLE  R30 R30 K45  ; R82 := R30[0x23d5322f]
417 [-]: GETTABLE  R31 R5 K1    ; R31 := R5["Item"]
418 [-]: NEWTABLE  R32 0 3      ; R32 := {}
419 [-]: SETTABLE  R32 K46 R29  ; R32["Name"] := R29
420 [-]: SETTABLE  R32 K47 R27  ; R32["LinkStart"] := R27
421 [-]: SETTABLE  R32 K48 R7   ; R32["LinkString"] := R7
422 [-]: CALL      R30 3 1      ; R30(R31,R32)
423 [-]: GETGLOBAL R30 K4       ; R30 := 0x7f5022cf
424 [-]: GETTABLE  R30 R30 K49  ; R82 := R30[0x66edf04f]
425 [-]: MOVE      R31 R1       ; R31 := R1
426 [-]: LOADK     R32 K70      ; R32 := "%["
427 [-]: MOVE      R33 R26      ; R33 := R26
428 [-]: LOADK     R34 K71      ; R34 := "[^%]]+%]"
429 [-]: CONCAT    R32 R32 R34  ; R32 := R32 .. R33 .. R34
430 [-]: LOADK     R33 K22      ; R33 := "["
431 [-]: MOVE      R34 R29      ; R34 := R29
432 [-]: LOADK     R35 K26      ; R35 := "]"
433 [-]: CONCAT    R33 R33 R35  ; R33 := R33 .. R34 .. R35
434 [-]: CONST     R34 1        ; R34 := 1.000000
435 [-]: CALL      R30 5 2      ; R30 := R30(R31,R32,R33,R34)
436 [-]: LEN       R31 R30      ; R31 := # R30
437 [-]: ADD       R31 R11 R31  ; R31 := R11 + R31
438 [-]: LEN       R32 R1       ; R32 := # R1
439 [-]: SUB       R11 R31 R32  ; R11 := R31 - R32
440 [-]: MOVE      R1 R30       ; R1 := R30
441 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
442 [-]: JMP       681          ; PC := 681
443 [-]: GETGLOBAL R31 K4       ; R31 := 0x7f5022cf
444 [-]: GETTABLE  R31 R31 K21  ; R82 := R31[0x1a94c9cc]
445 [-]: MOVE      R32 R13      ; R32 := R13
446 [-]: CONST     R33 1        ; R33 := 1.000000
447 [-]: CONST     R34 3        ; R34 := 3.000000
448 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
449 [-]: EQ        0 R31 K72    ; if R31 ~= "ff-" then PC := 510
450 [-]: JMP       510          ; PC := 510
451 [-]: GETUPVAL  R31 U1       ; R31 := U1
452 [-]: GETTABLE  R31 R31 K73  ; R31 := R31["AppearancePrefixString"]
453 [-]: GETUPVAL  R32 U3       ; R32 := U3
454 [-]: GETTABLE  R32 R32 K74  ; R82 := R32[0x60e7aec4]
455 [-]: MOVE      R33 R7       ; R33 := R7
456 [-]: CALL      R32 2 2      ; R32 := R32(R33)
457 [-]: GETGLOBAL R33 K20      ; R33 := 0x7b998233
458 [-]: MOVE      R34 R32      ; R34 := R32
459 [-]: CALL      R33 2 2      ; R33 := R33(R34)
460 [-]: TEST      R33 1        ; if R33 then PC := 473
461 [-]: JMP       473          ; PC := 473
462 [-]: MOVE      R33 R31      ; R33 := R31
463 [-]: LOADK     R34 K75      ; R34 := ": "
464 [-]: GETGLOBAL R35 K37      ; R35 := 0xae91e43b
465 [-]: SELF      R35 R35 K38  ; R36 := R35; R35 := R35[0x42b04007]
466 [-]: SELF      R37 R32 K76  ; R38 := R32; R37 := R32[0xd3a9d01f]
467 [-]: CALL      R37 2 2      ; R37 := R37(R38)
468 [-]: SELF      R37 R37 K77  ; R38 := R37; R37 := R37[0x6d604ba7]
469 [-]: CALL      R37 2 2      ; R37 := R37(R38)
470 [-]: OP_LOADBOOL R38 0 0      ; R38 := false
471 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
472 [-]: CONCAT    R31 R33 R35  ; R31 := R33 .. R34 .. R35
473 [-]: GETUPVAL  R33 U3       ; R33 := U3
474 [-]: GETTABLE  R33 R33 K78  ; R82 := R33[0x419eb6ea]
475 [-]: MOVE      R34 R7       ; R34 := R7
476 [-]: MOVE      R35 R3       ; R35 := R3
477 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
478 [-]: MOVE      R7 R33       ; R7 := R33
479 [-]: LOADK     R33 K41      ; R33 := "<a color=\"#33ccff\" hovercolor=\""
480 [-]: GETUPVAL  R34 U2       ; R34 := U2
481 [-]: LOADK     R35 K42      ; R35 := "\" href=\"#onHyperlinkPressed:"
482 [-]: MOVE      R36 R7       ; R36 := R7
483 [-]: LOADK     R37 K43      ; R37 := "\">"
484 [-]: CONCAT    R33 R33 R37  ; R33 := R33 .. R34 .. R35 .. R36 .. R37
485 [-]: GETGLOBAL R34 K44      ; R34 := 0x33bdd652
486 [-]: GETTABLE  R34 R34 K45  ; R82 := R34[0x23d5322f]
487 [-]: GETTABLE  R35 R5 K1    ; R35 := R5["Item"]
488 [-]: NEWTABLE  R36 0 3      ; R36 := {}
489 [-]: SETTABLE  R36 K46 R31  ; R36["Name"] := R31
490 [-]: SETTABLE  R36 K47 R33  ; R36["LinkStart"] := R33
491 [-]: SETTABLE  R36 K48 R7   ; R36["LinkString"] := R7
492 [-]: CALL      R34 3 1      ; R34(R35,R36)
493 [-]: GETGLOBAL R34 K4       ; R34 := 0x7f5022cf
494 [-]: GETTABLE  R34 R34 K49  ; R82 := R34[0x66edf04f]
495 [-]: MOVE      R35 R1       ; R35 := R1
496 [-]: LOADK     R36 K79      ; R36 := "%[FF%-[^%]]+%]"
497 [-]: LOADK     R37 K22      ; R37 := "["
498 [-]: MOVE      R38 R31      ; R38 := R31
499 [-]: LOADK     R39 K26      ; R39 := "]"
500 [-]: CONCAT    R37 R37 R39  ; R37 := R37 .. R38 .. R39
501 [-]: CONST     R38 1        ; R38 := 1.000000
502 [-]: CALL      R34 5 2      ; R34 := R34(R35,R36,R37,R38)
503 [-]: LEN       R35 R34      ; R35 := # R34
504 [-]: ADD       R35 R11 R35  ; R35 := R11 + R35
505 [-]: LEN       R36 R1       ; R36 := # R1
506 [-]: SUB       R11 R35 R36  ; R11 := R35 - R36
507 [-]: MOVE      R1 R34       ; R1 := R34
508 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
509 [-]: JMP       681          ; PC := 681
510 [-]: GETGLOBAL R35 K4       ; R35 := 0x7f5022cf
511 [-]: GETTABLE  R35 R35 K21  ; R82 := R35[0x1a94c9cc]
512 [-]: MOVE      R36 R13      ; R36 := R13
513 [-]: CONST     R37 1        ; R37 := 1.000000
514 [-]: CONST     R38 4        ; R38 := 4.000000
515 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
516 [-]: EQ        0 R35 K80    ; if R35 ~= "mod-" then PC := 577
517 [-]: JMP       577          ; PC := 577
518 [-]: GETUPVAL  R35 U1       ; R35 := U1
519 [-]: GETTABLE  R35 R35 K81  ; R35 := R35["ModConfigPrefixString"]
520 [-]: GETUPVAL  R36 U3       ; R36 := U3
521 [-]: GETTABLE  R36 R36 K74  ; R82 := R36[0x60e7aec4]
522 [-]: MOVE      R37 R7       ; R37 := R7
523 [-]: CALL      R36 2 2      ; R36 := R36(R37)
524 [-]: GETGLOBAL R37 K20      ; R37 := 0x7b998233
525 [-]: MOVE      R38 R36      ; R38 := R36
526 [-]: CALL      R37 2 2      ; R37 := R37(R38)
527 [-]: TEST      R37 1        ; if R37 then PC := 540
528 [-]: JMP       540          ; PC := 540
529 [-]: MOVE      R37 R35      ; R37 := R35
530 [-]: LOADK     R38 K75      ; R38 := ": "
531 [-]: GETGLOBAL R39 K37      ; R39 := 0xae91e43b
532 [-]: SELF      R39 R39 K38  ; R40 := R39; R39 := R39[0x42b04007]
533 [-]: SELF      R41 R36 K76  ; R42 := R36; R41 := R36[0xd3a9d01f]
534 [-]: CALL      R41 2 2      ; R41 := R41(R42)
535 [-]: SELF      R41 R41 K77  ; R42 := R41; R41 := R41[0x6d604ba7]
536 [-]: CALL      R41 2 2      ; R41 := R41(R42)
537 [-]: OP_LOADBOOL R42 0 0      ; R42 := false
538 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
539 [-]: CONCAT    R35 R37 R39  ; R35 := R37 .. R38 .. R39
540 [-]: GETUPVAL  R37 U3       ; R37 := U3
541 [-]: GETTABLE  R37 R37 K78  ; R82 := R37[0x419eb6ea]
542 [-]: MOVE      R38 R7       ; R38 := R7
543 [-]: LOADNIL   R39 R39      ; R39 := nil
544 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
545 [-]: MOVE      R7 R37       ; R7 := R37
546 [-]: LOADK     R37 K41      ; R37 := "<a color=\"#33ccff\" hovercolor=\""
547 [-]: GETUPVAL  R38 U2       ; R38 := U2
548 [-]: LOADK     R39 K42      ; R39 := "\" href=\"#onHyperlinkPressed:"
549 [-]: MOVE      R40 R7       ; R40 := R7
550 [-]: LOADK     R41 K43      ; R41 := "\">"
551 [-]: CONCAT    R37 R37 R41  ; R37 := R37 .. R38 .. R39 .. R40 .. R41
552 [-]: GETGLOBAL R38 K44      ; R38 := 0x33bdd652
553 [-]: GETTABLE  R38 R38 K45  ; R82 := R38[0x23d5322f]
554 [-]: GETTABLE  R39 R5 K1    ; R39 := R5["Item"]
555 [-]: NEWTABLE  R40 0 3      ; R40 := {}
556 [-]: SETTABLE  R40 K46 R35  ; R40["Name"] := R35
557 [-]: SETTABLE  R40 K47 R37  ; R40["LinkStart"] := R37
558 [-]: SETTABLE  R40 K48 R7   ; R40["LinkString"] := R7
559 [-]: CALL      R38 3 1      ; R38(R39,R40)
560 [-]: GETGLOBAL R38 K4       ; R38 := 0x7f5022cf
561 [-]: GETTABLE  R38 R38 K49  ; R82 := R38[0x66edf04f]
562 [-]: MOVE      R39 R1       ; R39 := R1
563 [-]: LOADK     R40 K82      ; R40 := "%[MOD%-[^%]]+%]"
564 [-]: LOADK     R41 K22      ; R41 := "["
565 [-]: MOVE      R42 R35      ; R42 := R35
566 [-]: LOADK     R43 K26      ; R43 := "]"
567 [-]: CONCAT    R41 R41 R43  ; R41 := R41 .. R42 .. R43
568 [-]: CONST     R42 1        ; R42 := 1.000000
569 [-]: CALL      R38 5 2      ; R38 := R38(R39,R40,R41,R42)
570 [-]: LEN       R39 R38      ; R39 := # R38
571 [-]: ADD       R39 R11 R39  ; R39 := R11 + R39
572 [-]: LEN       R40 R1       ; R40 := # R1
573 [-]: SUB       R11 R39 R40  ; R11 := R39 - R40
574 [-]: MOVE      R1 R38       ; R1 := R38
575 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
576 [-]: JMP       681          ; PC := 681
577 [-]: GETGLOBAL R39 K4       ; R39 := 0x7f5022cf
578 [-]: GETTABLE  R39 R39 K21  ; R82 := R39[0x1a94c9cc]
579 [-]: MOVE      R40 R13      ; R40 := R13
580 [-]: CONST     R41 1        ; R41 := 1.000000
581 [-]: CONST     R42 5        ; R42 := 5.000000
582 [-]: CALL      R39 4 2      ; R39 := R39(R40,R41,R42)
583 [-]: EQ        0 R39 K83    ; if R39 ~= "shzn-" then PC := 681
584 [-]: JMP       681          ; PC := 681
585 [-]: LOADK     R39 K41      ; R39 := "<a color=\"#33ccff\" hovercolor=\""
586 [-]: GETUPVAL  R40 U2       ; R40 := U2
587 [-]: LOADK     R41 K42      ; R41 := "\" href=\"#onHyperlinkPressed:"
588 [-]: MOVE      R42 R7       ; R42 := R7
589 [-]: LOADK     R43 K43      ; R43 := "\">"
590 [-]: CONCAT    R39 R39 R43  ; R39 := R39 .. R40 .. R41 .. R42 .. R43
591 [-]: GETUPVAL  R40 U1       ; R40 := U1
592 [-]: GETTABLE  R40 R40 K84  ; R40 := R40["ShawzinPrefixString"]
593 [-]: GETGLOBAL R41 K44      ; R41 := 0x33bdd652
594 [-]: GETTABLE  R41 R41 K45  ; R82 := R41[0x23d5322f]
595 [-]: GETTABLE  R42 R5 K1    ; R42 := R5["Item"]
596 [-]: NEWTABLE  R43 0 3      ; R43 := {}
597 [-]: SETTABLE  R43 K46 R40  ; R43["Name"] := R40
598 [-]: SETTABLE  R43 K47 R39  ; R43["LinkStart"] := R39
599 [-]: SETTABLE  R43 K48 R7   ; R43["LinkString"] := R7
600 [-]: CALL      R41 3 1      ; R41(R42,R43)
601 [-]: GETGLOBAL R41 K4       ; R41 := 0x7f5022cf
602 [-]: GETTABLE  R41 R41 K49  ; R82 := R41[0x66edf04f]
603 [-]: MOVE      R42 R1       ; R42 := R1
604 [-]: LOADK     R43 K85      ; R43 := "%[SHZN%-[^%]]+%]"
605 [-]: LOADK     R44 K22      ; R44 := "["
606 [-]: MOVE      R45 R40      ; R45 := R40
607 [-]: LOADK     R46 K26      ; R46 := "]"
608 [-]: CONCAT    R44 R44 R46  ; R44 := R44 .. R45 .. R46
609 [-]: CONST     R45 1        ; R45 := 1.000000
610 [-]: CALL      R41 5 2      ; R41 := R41(R42,R43,R44,R45)
611 [-]: LEN       R42 R41      ; R42 := # R41
612 [-]: ADD       R42 R11 R42  ; R42 := R11 + R42
613 [-]: LEN       R43 R1       ; R43 := # R1
614 [-]: SUB       R11 R42 R43  ; R11 := R42 - R43
615 [-]: MOVE      R1 R41       ; R1 := R41
616 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
617 [-]: JMP       681          ; PC := 681
618 [-]: GETGLOBAL R42 K4       ; R42 := 0x7f5022cf
619 [-]: GETTABLE  R42 R42 K21  ; R82 := R42[0x1a94c9cc]
620 [-]: MOVE      R43 R1       ; R43 := R1
621 [-]: ADD       R44 R9 K3    ; R44 := R9 + 1.000000
622 [-]: SUB       R45 R11 K3   ; R45 := R11 - 1.000000
623 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
624 [-]: MOVE      R7 R42       ; R7 := R42
625 [-]: GETGLOBAL R42 K4       ; R42 := 0x7f5022cf
626 [-]: GETTABLE  R42 R42 K21  ; R82 := R42[0x1a94c9cc]
627 [-]: MOVE      R43 R7       ; R43 := R7
628 [-]: CONST     R44 1        ; R44 := 1.000000
629 [-]: CONST     R45 6        ; R45 := 6.000000
630 [-]: CALL      R42 4 2      ; R42 := R42(R43,R44,R45)
631 [-]: EQ        0 R42 K86    ; if R42 ~= "GUILD=" then PC := 681
632 [-]: JMP       681          ; PC := 681
633 [-]: GETGLOBAL R42 K4       ; R42 := 0x7f5022cf
634 [-]: GETTABLE  R42 R42 K5   ; R82 := R42[0xa5c556b9]
635 [-]: MOVE      R43 R7       ; R43 := R7
636 [-]: LOADK     R44 K30      ; R44 := ":"
637 [-]: CALL      R42 3 2      ; R42 := R42(R43,R44)
638 [-]: EQ        1 R42 K7     ; if R42 == nil then PC := 676
639 [-]: JMP       676          ; PC := 676
640 [-]: GETGLOBAL R43 K4       ; R43 := 0x7f5022cf
641 [-]: GETTABLE  R43 R43 K21  ; R82 := R43[0x1a94c9cc]
642 [-]: MOVE      R44 R7       ; R44 := R7
643 [-]: ADD       R45 R42 K3   ; R45 := R42 + 1.000000
644 [-]: CALL      R43 3 2      ; R43 := R43(R44,R45)
645 [-]: LOADK     R44 K41      ; R44 := "<a color=\"#33ccff\" hovercolor=\""
646 [-]: GETUPVAL  R45 U2       ; R45 := U2
647 [-]: LOADK     R46 K42      ; R46 := "\" href=\"#onHyperlinkPressed:"
648 [-]: MOVE      R47 R7       ; R47 := R7
649 [-]: LOADK     R48 K43      ; R48 := "\">"
650 [-]: CONCAT    R44 R44 R48  ; R44 := R44 .. R45 .. R46 .. R47 .. R48
651 [-]: GETGLOBAL R45 K44      ; R45 := 0x33bdd652
652 [-]: GETTABLE  R45 R45 K45  ; R82 := R45[0x23d5322f]
653 [-]: GETTABLE  R46 R5 K2    ; R46 := R5["Guild"]
654 [-]: NEWTABLE  R47 0 3      ; R47 := {}
655 [-]: SETTABLE  R47 K46 R43  ; R47["Name"] := R43
656 [-]: SETTABLE  R47 K47 R44  ; R47["LinkStart"] := R44
657 [-]: SETTABLE  R47 K48 R7   ; R47["LinkString"] := R7
658 [-]: CALL      R45 3 1      ; R45(R46,R47)
659 [-]: GETGLOBAL R45 K4       ; R45 := 0x7f5022cf
660 [-]: GETTABLE  R45 R45 K49  ; R82 := R45[0x66edf04f]
661 [-]: MOVE      R46 R1       ; R46 := R1
662 [-]: LOADK     R47 K87      ; R47 := "{GUILD=[^}]+}"
663 [-]: LOADK     R48 K24      ; R48 := "{"
664 [-]: MOVE      R49 R43      ; R49 := R43
665 [-]: LOADK     R50 K27      ; R50 := "}"
666 [-]: CONCAT    R48 R48 R50  ; R48 := R48 .. R49 .. R50
667 [-]: CONST     R49 1        ; R49 := 1.000000
668 [-]: CALL      R45 5 2      ; R45 := R45(R46,R47,R48,R49)
669 [-]: LEN       R46 R45      ; R46 := # R45
670 [-]: ADD       R46 R11 R46  ; R46 := R11 + R46
671 [-]: LEN       R47 R1       ; R47 := # R1
672 [-]: SUB       R11 R46 R47  ; R11 := R46 - R47
673 [-]: MOVE      R1 R45       ; R1 := R45
674 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
675 [-]: JMP       681          ; PC := 681
676 [-]: GETGLOBAL R46 K88      ; R46 := 0x3d106989
677 [-]: LOADK     R47 K89      ; R47 := "Invalid guild link: "
678 [-]: MOVE      R48 R7       ; R48 := R7
679 [-]: CONCAT    R47 R47 R48  ; R47 := R47 .. R48
680 [-]: CALL      R46 2 1      ; R46(R47)
681 [-]: LOADK     R10 K18      ; R10 := ""
682 [-]: LOADNIL   R9 R9        ; R9 := nil
683 [-]: JMP       100          ; PC := 100
684 [-]: TEST      R4 0         ; if not R4 then PC := 820
685 [-]: JMP       820          ; PC := 820
686 [-]: GETGLOBAL R46 K90      ; R46 := mDoFilter
687 [-]: TEST      R46 0        ; if not R46 then PC := 820
688 [-]: JMP       820          ; PC := 820
689 [-]: GETTABLE  R46 R0 K91   ; R46 := R0["MESSAGE_TYPE_BROADCAST"]
690 [-]: EQ        1 R2 R46     ; if R2 == R46 then PC := 820
691 [-]: JMP       820          ; PC := 820
692 [-]: GETGLOBAL R46 K4       ; R46 := 0x7f5022cf
693 [-]: GETTABLE  R46 R46 K5   ; R82 := R46[0xa5c556b9]
694 [-]: MOVE      R47 R1       ; R47 := R1
695 [-]: LOADK     R48 K30      ; R48 := ":"
696 [-]: CALL      R46 3 2      ; R46 := R46(R47,R48)
697 [-]: LOADK     R47 K18      ; R47 := ""
698 [-]: GETTABLE  R48 R0 K92   ; R48 := R0["mParent"]
699 [-]: GETTABLE  R48 R48 K93  ; R48 := R48["mShowTimeStamps"]
700 [-]: EQ        1 R48 K7     ; if R48 == nil then PC := 738
701 [-]: JMP       738          ; PC := 738
702 [-]: GETTABLE  R48 R0 K92   ; R48 := R0["mParent"]
703 [-]: GETTABLE  R48 R48 K93  ; R48 := R48["mShowTimeStamps"]
704 [-]: TEST      R48 0        ; if not R48 then PC := 738
705 [-]: JMP       738          ; PC := 738
706 [-]: GETGLOBAL R48 K4       ; R48 := 0x7f5022cf
707 [-]: GETTABLE  R48 R48 K5   ; R82 := R48[0xa5c556b9]
708 [-]: MOVE      R49 R1       ; R49 := R1
709 [-]: LOADK     R50 K26      ; R50 := "]"
710 [-]: MOVE      R51 R46      ; R51 := R46
711 [-]: CALL      R48 4 2      ; R48 := R48(R49,R50,R51)
712 [-]: EQ        1 R48 K7     ; if R48 == nil then PC := 738
713 [-]: JMP       738          ; PC := 738
714 [-]: ADD       R48 R48 K3   ; R48 := R48 + 1.000000
715 [-]: GETGLOBAL R49 K4       ; R49 := 0x7f5022cf
716 [-]: GETTABLE  R49 R49 K21  ; R82 := R49[0x1a94c9cc]
717 [-]: MOVE      R50 R1       ; R50 := R1
718 [-]: CONST     R51 1        ; R51 := 1.000000
719 [-]: MOVE      R52 R48      ; R52 := R48
720 [-]: CALL      R49 4 2      ; R49 := R49(R50,R51,R52)
721 [-]: MOVE      R47 R49      ; R47 := R49
722 [-]: GETGLOBAL R49 K4       ; R49 := 0x7f5022cf
723 [-]: GETTABLE  R49 R49 K21  ; R82 := R49[0x1a94c9cc]
724 [-]: MOVE      R50 R1       ; R50 := R1
725 [-]: ADD       R51 R48 K3   ; R51 := R48 + 1.000000
726 [-]: GETGLOBAL R52 K4       ; R52 := 0x7f5022cf
727 [-]: GETTABLE  R52 R52 K94  ; R82 := R52[0x41e2ae25]
728 [-]: MOVE      R53 R1       ; R53 := R1
729 [-]: CALL      R52 2 0      ; R52,... := R52(R53)
730 [-]: CALL      R49 0 2      ; R49 := R49(R50,...)
731 [-]: MOVE      R1 R49       ; R1 := R49
732 [-]: GETGLOBAL R49 K4       ; R49 := 0x7f5022cf
733 [-]: GETTABLE  R49 R49 K5   ; R82 := R49[0xa5c556b9]
734 [-]: MOVE      R50 R1       ; R50 := R1
735 [-]: LOADK     R51 K30      ; R51 := ":"
736 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
737 [-]: MOVE      R46 R49      ; R46 := R49
738 [-]: LOADK     R49 K18      ; R49 := ""
739 [-]: TEST      R46 0        ; if not R46 then PC := 820
740 [-]: JMP       820          ; PC := 820
741 [-]: GETGLOBAL R50 K4       ; R50 := 0x7f5022cf
742 [-]: GETTABLE  R50 R50 K94  ; R82 := R50[0x41e2ae25]
743 [-]: MOVE      R51 R1       ; R51 := R1
744 [-]: CALL      R50 2 2      ; R50 := R50(R51)
745 [-]: LT        0 R46 R50    ; if R46 >= R50 then PC := 820
746 [-]: JMP       820          ; PC := 820
747 [-]: GETGLOBAL R50 K95      ; R50 := 0xeb8fddd7
748 [-]: CALL      R50 1 2      ; R50 := R50()
749 [-]: TEST      R50 0        ; if not R50 then PC := 762
750 [-]: JMP       762          ; PC := 762
751 [-]: GETGLOBAL R50 K96      ; R50 := 0x09423272
752 [-]: GETGLOBAL R51 K4       ; R51 := 0x7f5022cf
753 [-]: GETTABLE  R51 R51 K21  ; R82 := R51[0x1a94c9cc]
754 [-]: MOVE      R52 R1       ; R52 := R1
755 [-]: CONST     R53 1        ; R53 := 1.000000
756 [-]: SUB       R54 R46 K3   ; R54 := R46 - 1.000000
757 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
758 [-]: CONST     R52 0        ; R52 := 0.000000
759 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
760 [-]: MOVE      R49 R50      ; R49 := R50
761 [-]: JMP       769          ; PC := 769
762 [-]: GETGLOBAL R50 K4       ; R50 := 0x7f5022cf
763 [-]: GETTABLE  R50 R50 K21  ; R82 := R50[0x1a94c9cc]
764 [-]: MOVE      R51 R1       ; R51 := R1
765 [-]: CONST     R52 1        ; R52 := 1.000000
766 [-]: SUB       R53 R46 K3   ; R53 := R46 - 1.000000
767 [-]: CALL      R50 4 2      ; R50 := R50(R51,R52,R53)
768 [-]: MOVE      R49 R50      ; R49 := R50
769 [-]: GETGLOBAL R50 K4       ; R50 := 0x7f5022cf
770 [-]: GETTABLE  R50 R50 K21  ; R82 := R50[0x1a94c9cc]
771 [-]: MOVE      R51 R1       ; R51 := R1
772 [-]: ADD       R52 R46 K3   ; R52 := R46 + 1.000000
773 [-]: GETGLOBAL R53 K4       ; R53 := 0x7f5022cf
774 [-]: GETTABLE  R53 R53 K94  ; R82 := R53[0x41e2ae25]
775 [-]: MOVE      R54 R1       ; R54 := R1
776 [-]: CALL      R53 2 0      ; R53,... := R53(R54)
777 [-]: CALL      R50 0 2      ; R50 := R50(R51,...)
778 [-]: MOVE      R1 R50       ; R1 := R50
779 [-]: SELF      R50 R1 K5    ; R51 := R1; R50 := R1[0xa5c556b9]
780 [-]: LOADK     R52 K98      ; R52 := "%[.-%-.-:.*%]"
781 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
782 [-]: TEST      R50 0        ; if not R50 then PC := 810
783 [-]: JMP       810          ; PC := 810
784 [-]: NEWTABLE  R50 0 0      ; R50 := {}
785 [-]: CONST     R51 0        ; R51 := 0.000000
786 [-]: GETGLOBAL R52 K4       ; R52 := 0x7f5022cf
787 [-]: GETTABLE  R52 R52 K49  ; R82 := R52[0x66edf04f]
788 [-]: MOVE      R53 R1       ; R53 := R1
789 [-]: LOADK     R54 K99      ; R54 := "(%[.-%-.-:)(.*)(%])"
790 [-]: CLOSURE   R55 0        ; R55 := closure(Function #94.13.1)
791 [-]: MOVE      R0 R51       ; R0 := R51
792 [-]: MOVE      R0 R50       ; R0 := R50
793 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
794 [-]: MOVE      R1 R52       ; R1 := R52
795 [-]: GETGLOBAL R52 K96      ; R52 := 0x09423272
796 [-]: MOVE      R53 R1       ; R53 := R1
797 [-]: CONST     R54 0        ; R54 := 0.000000
798 [-]: CALL      R52 3 2      ; R52 := R52(R53,R54)
799 [-]: MOVE      R1 R52       ; R1 := R52
800 [-]: GETGLOBAL R52 K4       ; R52 := 0x7f5022cf
801 [-]: GETTABLE  R52 R52 K49  ; R82 := R52[0x66edf04f]
802 [-]: MOVE      R53 R1       ; R53 := R1
803 [-]: LOADK     R54 K100     ; R54 := "%[REP%d-%]"
804 [-]: CLOSURE   R55 1        ; R55 := closure(Function #94.13.2)
805 [-]: MOVE      R0 R50       ; R0 := R50
806 [-]: CALL      R52 4 2      ; R52 := R52(R53,R54,R55)
807 [-]: MOVE      R1 R52       ; R1 := R52
808 [-]: CLOSE     R50          ; SAVE R50,...
809 [-]: JMP       815          ; PC := 815
810 [-]: GETGLOBAL R50 K96      ; R50 := 0x09423272
811 [-]: MOVE      R51 R1       ; R51 := R1
812 [-]: CONST     R52 0        ; R52 := 0.000000
813 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
814 [-]: MOVE      R1 R50       ; R1 := R50
815 [-]: MOVE      R50 R47      ; R50 := R47
816 [-]: MOVE      R51 R49      ; R51 := R49
817 [-]: LOADK     R52 K30      ; R52 := ":"
818 [-]: MOVE      R53 R1       ; R53 := R1
819 [-]: CONCAT    R1 R50 R53   ; R1 := R50 .. R51 .. R52 .. R53
820 [-]: GETGLOBAL R50 K37      ; R50 := 0xae91e43b
821 [-]: SELF      R50 R50 K101 ; R51 := R50; R50 := R50[0x5f56eeab]
822 [-]: GETTABLE  R52 R0 K102  ; R52 := R0["mClipPath"]
823 [-]: LOADK     R53 K103     ; R53 := ".ChatArea"
824 [-]: CONCAT    R52 R52 R53  ; R52 := R52 .. R53
825 [-]: CONST     R53 29       ; R53 := 29.000000
826 [-]: MOVE      R54 R1       ; R54 := R1
827 [-]: CALL      R50 5 1      ; R50(R51,R52,R53,R54)
828 [-]: NEWTABLE  R50 0 0      ; R50 := {}
829 [-]: GETGLOBAL R51 K37      ; R51 := 0xae91e43b
830 [-]: SELF      R51 R51 K104 ; R52 := R51; R51 := R51[0x91a24e4b]
831 [-]: GETTABLE  R53 R0 K102  ; R53 := R0["mClipPath"]
832 [-]: LOADK     R54 K103     ; R54 := ".ChatArea"
833 [-]: CONCAT    R53 R53 R54  ; R53 := R53 .. R54
834 [-]: CONST     R54 35       ; R54 := 35.000000
835 [-]: CALL      R51 4 2      ; R51 := R51(R52,R53,R54)
836 [-]: MOVE      R52 R1       ; R52 := R1
837 [-]: CONST     R53 1        ; R53 := 1.000000
838 [-]: MOVE      R54 R51      ; R54 := R51
839 [-]: CONST     R55 1        ; R55 := 1.000000
840 [-]: FORPREP   R53 880      ; R53 -= R55; PC := 880
841 [-]: GETGLOBAL R57 K105     ; R57 := 0x38f10e85
842 [-]: GETGLOBAL R58 K37      ; R58 := 0xae91e43b
843 [-]: GETTABLE  R59 R0 K102  ; R59 := R0["mClipPath"]
844 [-]: LOADK     R60 K106     ; R60 := ".ChatArea.getLine"
845 [-]: CONCAT    R59 R59 R60  ; R59 := R59 .. R60
846 [-]: SUB       R60 R56 K3   ; R60 := R56 - 1.000000
847 [-]: CALL      R57 4 2      ; R57 := R57(R58,R59,R60)
848 [-]: SELF      R58 R57 K94  ; R59 := R57; R58 := R57[0x41e2ae25]
849 [-]: CALL      R58 2 2      ; R58 := R58(R59)
850 [-]: LOADNIL   R59 R59      ; R59 := nil
851 [-]: LT        0 R56 R51    ; if R56 >= R51 then PC := 868
852 [-]: JMP       868          ; PC := 868
853 [-]: SELF      R60 R52 K21  ; R61 := R52; R60 := R52[0x1a94c9cc]
854 [-]: ADD       R62 R58 K3   ; R62 := R58 + 1.000000
855 [-]: ADD       R63 R58 K3   ; R63 := R58 + 1.000000
856 [-]: CALL      R60 4 2      ; R60 := R60(R61,R62,R63)
857 [-]: EQ        1 R60 K40    ; if R60 == " " then PC := 860
858 [-]: JMP       860          ; PC := 860
859 [-]: OP_LOADBOOL R59 0 1      ; R59 := false; PC := 860
860 [-]: OP_LOADBOOL R59 1 0      ; R59 := true
861 [-]: TEST      R59 0        ; if not R59 then PC := 864
862 [-]: JMP       864          ; PC := 864
863 [-]: ADD       R58 R58 K3   ; R58 := R58 + 1.000000
864 [-]: SELF      R60 R52 K21  ; R61 := R52; R60 := R52[0x1a94c9cc]
865 [-]: ADD       R62 R58 K3   ; R62 := R58 + 1.000000
866 [-]: CALL      R60 3 2      ; R60 := R60(R61,R62)
867 [-]: MOVE      R52 R60      ; R52 := R60
868 [-]: NEWTABLE  R60 0 5      ; R60 := {}
869 [-]: SETTABLE  R60 K107 R57 ; R60["text"] := R57
870 [-]: SETTABLE  R60 K108 R2  ; R60["messageType"] := R2
871 [-]: EQ        1 R56 K3     ; if R56 == 1.000000 then PC := 874
872 [-]: JMP       874          ; PC := 874
873 [-]: OP_LOADBOOL R61 0 1      ; R61 := false; PC := 874
874 [-]: OP_LOADBOOL R61 1 0      ; R61 := true
875 [-]: SETTABLE  R60 K109 R61 ; R60["firstLine"] := R61
876 [-]: NEWTABLE  R61 0 0      ; R61 := {}
877 [-]: SETTABLE  R60 K110 R61 ; R60["hyperLinks"] := R61
878 [-]: SETTABLE  R60 K111 R59 ; R60["endSpace"] := R59
879 [-]: SETTABLE  R50 R56 R60  ; R50[R56] := R60
880 [-]: FORLOOP   R53 841      ; R53 += R55; if R53 <= R54 then begin PC := 841; R56 := R53 end
881 [-]: GETGLOBAL R60 K112     ; R60 := mWindow
882 [-]: SELF      R60 R60 K113 ; R61 := R60; R60 := R60[0x8b75da5a]
883 [-]: CALL      R60 2 2      ; R60 := R60(R61)
884 [-]: NEWTABLE  R61 0 0      ; R61 := {}
885 [-]: GETGLOBAL R62 K20      ; R62 := 0x7b998233
886 [-]: MOVE      R63 R60      ; R63 := R60
887 [-]: CALL      R62 2 2      ; R62 := R62(R63)
888 [-]: TEST      R62 1        ; if R62 then PC := 891
889 [-]: JMP       891          ; PC := 891
890 [-]: GETTABLE  R61 R60 K114 ; R61 := R60["mUserList"]
891 [-]: CONST     R62 1        ; R62 := 1.000000
892 [-]: MOVE      R63 R51      ; R63 := R51
893 [-]: CONST     R64 1        ; R64 := 1.000000
894 [-]: FORPREP   R62 1545     ; R62 -= R64; PC := 1545
895 [-]: GETTABLE  R66 R50 R65  ; R66 := R50[R65]
896 [-]: GETTABLE  R66 R66 K107 ; R66 := R66["text"]
897 [-]: GETGLOBAL R67 K4       ; R67 := 0x7f5022cf
898 [-]: GETTABLE  R67 R67 K5   ; R82 := R67[0xa5c556b9]
899 [-]: MOVE      R68 R1       ; R68 := R1
900 [-]: LOADK     R69 K115     ; R69 := "%[.*%]"
901 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
902 [-]: EQ        0 R67 K7     ; if R67 ~= nil then PC := 918
903 [-]: JMP       918          ; PC := 918
904 [-]: GETGLOBAL R67 K4       ; R67 := 0x7f5022cf
905 [-]: GETTABLE  R67 R67 K5   ; R82 := R67[0xa5c556b9]
906 [-]: MOVE      R68 R1       ; R68 := R1
907 [-]: LOADK     R69 K116     ; R69 := "{.*}"
908 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
909 [-]: EQ        0 R67 K7     ; if R67 ~= nil then PC := 918
910 [-]: JMP       918          ; PC := 918
911 [-]: GETGLOBAL R67 K4       ; R67 := 0x7f5022cf
912 [-]: GETTABLE  R67 R67 K5   ; R82 := R67[0xa5c556b9]
913 [-]: MOVE      R68 R1       ; R68 := R1
914 [-]: LOADK     R69 K117     ; R69 := "@"
915 [-]: CALL      R67 3 2      ; R67 := R67(R68,R69)
916 [-]: EQ        1 R67 K7     ; if R67 == nil then PC := 1543
917 [-]: JMP       1543         ; PC := 1543
918 [-]: LOADNIL   R67 R67      ; R67 := nil
919 [-]: NEWTABLE  R68 0 0      ; R68 := {}
920 [-]: CONST     R69 0        ; R69 := 0.000000
921 [-]: LOADK     R70 K18      ; R70 := ""
922 [-]: CONST     R71 0        ; R71 := 0.000000
923 [-]: GETTABLE  R72 R50 R65  ; R72 := R50[R65]
924 [-]: GETTABLE  R72 R72 K107 ; R72 := R72["text"]
925 [-]: LEN       R72 R72      ; R72 := # R72
926 [-]: LE        0 R71 R72    ; if R71 > R72 then PC := 1282
927 [-]: JMP       1282         ; PC := 1282
928 [-]: EQ        1 R70 K118   ; if R70 == "username" then PC := 945
929 [-]: JMP       945          ; PC := 945
930 [-]: GETGLOBAL R72 K4       ; R72 := 0x7f5022cf
931 [-]: GETTABLE  R72 R72 K5   ; R82 := R72[0xa5c556b9]
932 [-]: GETTABLE  R73 R50 R65  ; R73 := R50[R65]
933 [-]: GETTABLE  R73 R73 K107 ; R73 := R73["text"]
934 [-]: LOADK     R74 K119     ; R74 := "[@%[{%]}]"
935 [-]: ADD       R75 R71 K3   ; R75 := R71 + 1.000000
936 [-]: CALL      R72 4 2      ; R72 := R72(R73,R74,R75)
937 [-]: MOVE      R71 R72      ; R71 := R72
938 [-]: GETGLOBAL R72 K20      ; R72 := 0x7b998233
939 [-]: MOVE      R73 R71      ; R73 := R71
940 [-]: CALL      R72 2 2      ; R72 := R72(R73)
941 [-]: TEST      R72 0        ; if not R72 then PC := 946
942 [-]: JMP       946          ; PC := 946
943 [-]: JMP       1282         ; PC := 1282
944 [-]: JMP       946          ; PC := 946
945 [-]: ADD       R71 R71 K3   ; R71 := R71 + 1.000000
946 [-]: GETGLOBAL R72 K4       ; R72 := 0x7f5022cf
947 [-]: GETTABLE  R72 R72 K21  ; R82 := R72[0x1a94c9cc]
948 [-]: GETTABLE  R73 R50 R65  ; R73 := R50[R65]
949 [-]: GETTABLE  R73 R73 K107 ; R73 := R73["text"]
950 [-]: MOVE      R74 R71      ; R74 := R71
951 [-]: MOVE      R75 R71      ; R75 := R71
952 [-]: CALL      R72 4 2      ; R72 := R72(R73,R74,R75)
953 [-]: EQ        0 R72 K117   ; if R72 ~= "@" then PC := 979
954 [-]: JMP       979          ; PC := 979
955 [-]: MOVE      R67 R71      ; R67 := R71
956 [-]: GETGLOBAL R73 K44      ; R73 := 0x33bdd652
957 [-]: GETTABLE  R73 R73 K45  ; R82 := R73[0x23d5322f]
958 [-]: MOVE      R74 R68      ; R74 := R68
959 [-]: MOVE      R75 R67      ; R75 := R67
960 [-]: CALL      R73 3 1      ; R73(R74,R75)
961 [-]: ADD       R73 R71 K120 ; R73 := R71 + 4.000000
962 [-]: GETTABLE  R74 R50 R65  ; R74 := R50[R65]
963 [-]: GETTABLE  R74 R74 K107 ; R74 := R74["text"]
964 [-]: LEN       R74 R74      ; R74 := # R74
965 [-]: LT        0 R73 R74    ; if R73 >= R74 then PC := 977
966 [-]: JMP       977          ; PC := 977
967 [-]: GETGLOBAL R73 K4       ; R73 := 0x7f5022cf
968 [-]: GETTABLE  R73 R73 K21  ; R82 := R73[0x1a94c9cc]
969 [-]: GETTABLE  R74 R50 R65  ; R74 := R50[R65]
970 [-]: GETTABLE  R74 R74 K107 ; R74 := R74["text"]
971 [-]: ADD       R75 R71 K3   ; R75 := R71 + 1.000000
972 [-]: ADD       R76 R71 K120 ; R76 := R71 + 4.000000
973 [-]: CALL      R73 4 2      ; R73 := R73(R74,R75,R76)
974 [-]: EQ        0 R73 K121   ; if R73 ~= "[DE]" then PC := 977
975 [-]: JMP       977          ; PC := 977
976 [-]: ADD       R71 R71 K120 ; R71 := R71 + 4.000000
977 [-]: LOADK     R70 K118     ; R70 := "username"
978 [-]: JMP       923          ; PC := 923
979 [-]: GETGLOBAL R73 K20      ; R73 := 0x7b998233
980 [-]: MOVE      R74 R67      ; R74 := R67
981 [-]: CALL      R73 2 2      ; R73 := R73(R74)
982 [-]: TEST      R73 1        ; if R73 then PC := 1061
983 [-]: JMP       1061         ; PC := 1061
984 [-]: EQ        0 R70 K118   ; if R70 ~= "username" then PC := 1061
985 [-]: JMP       1061         ; PC := 1061
986 [-]: GETTABLE  R73 R50 R65  ; R73 := R50[R65]
987 [-]: GETTABLE  R73 R73 K107 ; R73 := R73["text"]
988 [-]: LEN       R73 R73      ; R73 := # R73
989 [-]: EQ        1 R71 R73    ; if R71 == R73 then PC := 1004
990 [-]: JMP       1004         ; PC := 1004
991 [-]: GETGLOBAL R73 K4       ; R73 := 0x7f5022cf
992 [-]: GETTABLE  R73 R73 K5   ; R82 := R73[0xa5c556b9]
993 [-]: GETGLOBAL R74 K4       ; R74 := 0x7f5022cf
994 [-]: GETTABLE  R74 R74 K21  ; R82 := R74[0x1a94c9cc]
995 [-]: GETTABLE  R75 R50 R65  ; R75 := R50[R65]
996 [-]: GETTABLE  R75 R75 K107 ; R75 := R75["text"]
997 [-]: ADD       R76 R71 K3   ; R76 := R71 + 1.000000
998 [-]: ADD       R77 R71 K3   ; R77 := R71 + 1.000000
999 [-]: CALL      R74 4 2      ; R74 := R74(R75,R76,R77)
1000 [-]: LOADK     R75 K122     ; R75 := "[%a%d_%-%.]"
1001 [-]: CALL      R73 3 2      ; R73 := R73(R74,R75)
1002 [-]: TEST      R73 1        ; if R73 then PC := 1061
1003 [-]: JMP       1061         ; PC := 1061
1004 [-]: GETGLOBAL R73 K4       ; R73 := 0x7f5022cf
1005 [-]: GETTABLE  R73 R73 K21  ; R82 := R73[0x1a94c9cc]
1006 [-]: GETTABLE  R74 R50 R65  ; R74 := R50[R65]
1007 [-]: GETTABLE  R74 R74 K107 ; R74 := R74["text"]
1008 [-]: MOVE      R75 R67      ; R75 := R67
1009 [-]: MOVE      R76 R71      ; R76 := R71
1010 [-]: CALL      R73 4 2      ; R73 := R73(R74,R75,R76)
1011 [-]: MOVE      R7 R73       ; R7 := R73
1012 [-]: GETGLOBAL R73 K4       ; R73 := 0x7f5022cf
1013 [-]: GETTABLE  R73 R73 K21  ; R82 := R73[0x1a94c9cc]
1014 [-]: MOVE      R74 R7       ; R74 := R7
1015 [-]: CONST     R75 2        ; R75 := 2.000000
1016 [-]: CALL      R73 3 2      ; R73 := R73(R74,R75)
1017 [-]: GETTABLE  R73 R61 R73  ; R73 := R61[R73]
1018 [-]: TEST      R73 0        ; if not R73 then PC := 1056
1019 [-]: JMP       1056         ; PC := 1056
1020 [-]: GETGLOBAL R73 K4       ; R73 := 0x7f5022cf
1021 [-]: GETTABLE  R73 R73 K21  ; R82 := R73[0x1a94c9cc]
1022 [-]: MOVE      R74 R7       ; R74 := R7
1023 [-]: CONST     R75 2        ; R75 := 2.000000
1024 [-]: CALL      R73 3 2      ; R73 := R73(R74,R75)
1025 [-]: GETTABLE  R73 R61 R73  ; R73 := R61[R73]
1026 [-]: GETTABLE  R73 R73 K123 ; R73 := R73["isOnline"]
1027 [-]: TEST      R73 0        ; if not R73 then PC := 1056
1028 [-]: JMP       1056         ; PC := 1056
1029 [-]: LOADK     R73 K41      ; R73 := "<a color=\"#33ccff\" hovercolor=\""
1030 [-]: GETUPVAL  R74 U2       ; R74 := U2
1031 [-]: LOADK     R75 K42      ; R75 := "\" href=\"#onHyperlinkPressed:"
1032 [-]: MOVE      R76 R7       ; R76 := R7
1033 [-]: LOADK     R77 K43      ; R77 := "\">"
1034 [-]: MOVE      R78 R7       ; R78 := R7
1035 [-]: LOADK     R79 K124     ; R79 := "</a>"
1036 [-]: CONCAT    R73 R73 R79  ; R73 := R73 .. R74 .. R75 .. R76 .. R77 .. R78 .. R79
1037 [-]: GETGLOBAL R74 K4       ; R74 := 0x7f5022cf
1038 [-]: GETTABLE  R74 R74 K21  ; R82 := R74[0x1a94c9cc]
1039 [-]: MOVE      R75 R66      ; R75 := R66
1040 [-]: CONST     R76 0        ; R76 := 0.000000
1041 [-]: ADD       R77 R67 R69  ; R77 := R67 + R69
1042 [-]: SUB       R77 R77 K3   ; R77 := R77 - 1.000000
1043 [-]: CALL      R74 4 2      ; R74 := R74(R75,R76,R77)
1044 [-]: MOVE      R75 R73      ; R75 := R73
1045 [-]: GETGLOBAL R76 K4       ; R76 := 0x7f5022cf
1046 [-]: GETTABLE  R76 R76 K21  ; R82 := R76[0x1a94c9cc]
1047 [-]: MOVE      R77 R66      ; R77 := R66
1048 [-]: ADD       R78 R71 R69  ; R78 := R71 + R69
1049 [-]: ADD       R78 R78 K3   ; R78 := R78 + 1.000000
1050 [-]: CALL      R76 3 2      ; R76 := R76(R77,R78)
1051 [-]: CONCAT    R66 R74 R76  ; R66 := R74 .. R75 .. R76
1052 [-]: LEN       R74 R73      ; R74 := # R73
1053 [-]: LEN       R75 R7       ; R75 := # R7
1054 [-]: SUB       R74 R74 R75  ; R74 := R74 - R75
1055 [-]: ADD       R69 R69 R74  ; R69 := R69 + R74
1056 [-]: LOADNIL   R67 R67      ; R67 := nil
1057 [-]: NEWTABLE  R74 0 0      ; R74 := {}
1058 [-]: MOVE      R68 R74      ; R68 := R74
1059 [-]: LOADK     R70 K18      ; R70 := ""
1060 [-]: JMP       923          ; PC := 923
1061 [-]: EQ        0 R72 K22    ; if R72 ~= "[" then PC := 1071
1062 [-]: JMP       1071         ; PC := 1071
1063 [-]: MOVE      R67 R71      ; R67 := R71
1064 [-]: GETGLOBAL R74 K44      ; R74 := 0x33bdd652
1065 [-]: GETTABLE  R74 R74 K45  ; R82 := R74[0x23d5322f]
1066 [-]: MOVE      R75 R68      ; R75 := R68
1067 [-]: MOVE      R76 R67      ; R76 := R67
1068 [-]: CALL      R74 3 1      ; R74(R75,R76)
1069 [-]: LOADK     R70 K23      ; R70 := "item"
1070 [-]: JMP       923          ; PC := 923
1071 [-]: EQ        0 R72 K24    ; if R72 ~= "{" then PC := 1081
1072 [-]: JMP       1081         ; PC := 1081
1073 [-]: MOVE      R67 R71      ; R67 := R71
1074 [-]: GETGLOBAL R74 K44      ; R74 := 0x33bdd652
1075 [-]: GETTABLE  R74 R74 K45  ; R82 := R74[0x23d5322f]
1076 [-]: MOVE      R75 R68      ; R75 := R68
1077 [-]: MOVE      R76 R67      ; R76 := R67
1078 [-]: CALL      R74 3 1      ; R74(R75,R76)
1079 [-]: LOADK     R70 K25      ; R70 := "clan"
1080 [-]: JMP       923          ; PC := 923
1081 [-]: GETGLOBAL R74 K20      ; R74 := 0x7b998233
1082 [-]: MOVE      R75 R67      ; R75 := R67
1083 [-]: CALL      R74 2 2      ; R74 := R74(R75)
1084 [-]: TEST      R74 1        ; if R74 then PC := 923
1085 [-]: JMP       923          ; PC := 923
1086 [-]: EQ        0 R70 K23    ; if R70 ~= "item" then PC := 1090
1087 [-]: JMP       1090         ; PC := 1090
1088 [-]: EQ        1 R72 K26    ; if R72 == "]" then PC := 1094
1089 [-]: JMP       1094         ; PC := 1094
1090 [-]: EQ        0 R70 K25    ; if R70 ~= "clan" then PC := 923
1091 [-]: JMP       923          ; PC := 923
1092 [-]: EQ        0 R72 K27    ; if R72 ~= "}" then PC := 923
1093 [-]: JMP       923          ; PC := 923
1094 [-]: GETUPVAL  R74 U0       ; R74 := U0
1095 [-]: GETTABLE  R74 R74 K125 ; R82 := R74[0x06d055f9]
1096 [-]: EQ        1 R72 K26    ; if R72 == "]" then PC := 1099
1097 [-]: JMP       1099         ; PC := 1099
1098 [-]: OP_LOADBOOL R75 0 1      ; R75 := false; PC := 1099
1099 [-]: OP_LOADBOOL R75 1 0      ; R75 := true
1100 [-]: LOADK     R76 K1       ; R76 := "Item"
1101 [-]: LOADK     R77 K2       ; R77 := "Guild"
1102 [-]: CALL      R74 4 2      ; R74 := R74(R75,R76,R77)
1103 [-]: GETUPVAL  R75 U0       ; R75 := U0
1104 [-]: GETTABLE  R75 R75 K125 ; R82 := R75[0x06d055f9]
1105 [-]: EQ        1 R74 K1     ; if R74 == "Item" then PC := 1108
1106 [-]: JMP       1108         ; PC := 1108
1107 [-]: OP_LOADBOOL R76 0 1      ; R76 := false; PC := 1108
1108 [-]: OP_LOADBOOL R76 1 0      ; R76 := true
1109 [-]: LOADK     R77 K22      ; R77 := "["
1110 [-]: LOADK     R78 K24      ; R78 := "{"
1111 [-]: CALL      R75 4 2      ; R75 := R75(R76,R77,R78)
1112 [-]: GETUPVAL  R76 U0       ; R76 := U0
1113 [-]: GETTABLE  R76 R76 K125 ; R82 := R76[0x06d055f9]
1114 [-]: EQ        1 R74 K1     ; if R74 == "Item" then PC := 1117
1115 [-]: JMP       1117         ; PC := 1117
1116 [-]: OP_LOADBOOL R77 0 1      ; R77 := false; PC := 1117
1117 [-]: OP_LOADBOOL R77 1 0      ; R77 := true
1118 [-]: LOADK     R78 K26      ; R78 := "]"
1119 [-]: LOADK     R79 K27      ; R79 := "}"
1120 [-]: CALL      R76 4 2      ; R76 := R76(R77,R78,R79)
1121 [-]: GETGLOBAL R77 K4       ; R77 := 0x7f5022cf
1122 [-]: GETTABLE  R77 R77 K21  ; R82 := R77[0x1a94c9cc]
1123 [-]: GETTABLE  R78 R50 R65  ; R78 := R50[R65]
1124 [-]: GETTABLE  R78 R78 K107 ; R78 := R78["text"]
1125 [-]: ADD       R79 R67 K3   ; R79 := R67 + 1.000000
1126 [-]: SUB       R80 R71 K3   ; R80 := R71 - 1.000000
1127 [-]: CALL      R77 4 2      ; R77 := R77(R78,R79,R80)
1128 [-]: MOVE      R7 R77       ; R7 := R77
1129 [-]: LOADNIL   R77 R77      ; R77 := nil
1130 [-]: OP_LOADBOOL R78 1 0      ; R78 := true
1131 [-]: GETTABLE  R79 R5 R74   ; R79 := R5[R74]
1132 [-]: LEN       R79 R79      ; R79 := # R79
1133 [-]: GETTABLE  R80 R6 R74   ; R80 := R6[R74]
1134 [-]: LE        0 R80 R79    ; if R80 > R79 then PC := 1139
1135 [-]: JMP       1139         ; PC := 1139
1136 [-]: GETTABLE  R79 R5 R74   ; R79 := R5[R74]
1137 [-]: GETTABLE  R80 R6 R74   ; R80 := R6[R74]
1138 [-]: GETTABLE  R77 R79 R80  ; R77 := R79[R80]
1139 [-]: EQ        1 R77 K7     ; if R77 == nil then PC := 1221
1140 [-]: JMP       1221         ; PC := 1221
1141 [-]: GETTABLE  R79 R77 K46  ; R79 := R77["Name"]
1142 [-]: EQ        1 R7 R79     ; if R7 == R79 then PC := 1168
1143 [-]: JMP       1168         ; PC := 1168
1144 [-]: EQ        0 R74 K1     ; if R74 ~= "Item" then PC := 1156
1145 [-]: JMP       1156         ; PC := 1156
1146 [-]: GETGLOBAL R79 K4       ; R79 := 0x7f5022cf
1147 [-]: GETTABLE  R79 R79 K5   ; R82 := R79[0xa5c556b9]
1148 [-]: GETTABLE  R80 R77 K46  ; R80 := R77["Name"]
1149 [-]: LOADK     R81 K70      ; R81 := "%["
1150 [-]: MOVE      R82 R7       ; R82 := R7
1151 [-]: LOADK     R83 K126     ; R83 := "%]"
1152 [-]: CONCAT    R81 R81 R83  ; R81 := R81 .. R82 .. R83
1153 [-]: CALL      R79 3 2      ; R79 := R79(R80,R81)
1154 [-]: TEST      R79 1        ; if R79 then PC := 1168
1155 [-]: JMP       1168         ; PC := 1168
1156 [-]: EQ        0 R74 K2     ; if R74 ~= "Guild" then PC := 1221
1157 [-]: JMP       1221         ; PC := 1221
1158 [-]: GETGLOBAL R79 K4       ; R79 := 0x7f5022cf
1159 [-]: GETTABLE  R79 R79 K5   ; R82 := R79[0xa5c556b9]
1160 [-]: GETTABLE  R80 R77 K46  ; R80 := R77["Name"]
1161 [-]: LOADK     R81 K24      ; R81 := "{"
1162 [-]: MOVE      R82 R7       ; R82 := R7
1163 [-]: LOADK     R83 K27      ; R83 := "}"
1164 [-]: CONCAT    R81 R81 R83  ; R81 := R81 .. R82 .. R83
1165 [-]: CALL      R79 3 2      ; R79 := R79(R80,R81)
1166 [-]: TEST      R79 0        ; if not R79 then PC := 1221
1167 [-]: JMP       1221         ; PC := 1221
1168 [-]: GETTABLE  R79 R77 K46  ; R79 := R77["Name"]
1169 [-]: EQ        0 R7 R79     ; if R7 ~= R79 then PC := 1212
1170 [-]: JMP       1212         ; PC := 1212
1171 [-]: GETTABLE  R79 R77 K47  ; R79 := R77["LinkStart"]
1172 [-]: MOVE      R80 R75      ; R80 := R75
1173 [-]: GETTABLE  R81 R77 K46  ; R81 := R77["Name"]
1174 [-]: MOVE      R82 R76      ; R82 := R76
1175 [-]: LOADK     R83 K124     ; R83 := "</a>"
1176 [-]: CONCAT    R79 R79 R83  ; R79 := R79 .. R80 .. R81 .. R82 .. R83
1177 [-]: GETGLOBAL R80 K4       ; R80 := 0x7f5022cf
1178 [-]: GETTABLE  R80 R80 K21  ; R82 := R80[0x1a94c9cc]
1179 [-]: MOVE      R81 R66      ; R81 := R66
1180 [-]: CONST     R82 0        ; R82 := 0.000000
1181 [-]: ADD       R83 R67 R69  ; R83 := R67 + R69
1182 [-]: SUB       R83 R83 K3   ; R83 := R83 - 1.000000
1183 [-]: CALL      R80 4 2      ; R80 := R80(R81,R82,R83)
1184 [-]: MOVE      R81 R79      ; R81 := R79
1185 [-]: GETGLOBAL R82 K4       ; R82 := 0x7f5022cf
1186 [-]: GETTABLE  R82 R82 K21  ; R82 := R82[0x1a94c9cc]
1187 [-]: MOVE      R83 R66      ; R83 := R66
1188 [-]: ADD       R84 R71 R69  ; R84 := R71 + R69
1189 [-]: ADD       R84 R84 K3   ; R84 := R84 + 1.000000
1190 [-]: CALL      R82 3 2      ; R82 := R82(R83,R84)
1191 [-]: CONCAT    R66 R80 R82  ; R66 := R80 .. R81 .. R82
1192 [-]: LEN       R80 R79      ; R80 := # R79
1193 [-]: LEN       R81 R7       ; R81 := # R7
1194 [-]: SUB       R80 R80 R81  ; R80 := R80 - R81
1195 [-]: SUB       R80 R80 K127 ; R80 := R80 - 2.000000
1196 [-]: ADD       R69 R69 R80  ; R69 := R69 + R80
1197 [-]: GETTABLE  R80 R6 R74   ; R80 := R6[R74]
1198 [-]: ADD       R80 R80 K3   ; R80 := R80 + 1.000000
1199 [-]: SETTABLE  R6 R74 R80   ; R6[R74] := R80
1200 [-]: GETGLOBAL R80 K44      ; R80 := 0x33bdd652
1201 [-]: GETTABLE  R80 R80 K45  ; R82 := R80[0x23d5322f]
1202 [-]: GETTABLE  R81 R50 R65  ; R81 := R50[R65]
1203 [-]: GETTABLE  R81 R81 K110 ; R81 := R81["hyperLinks"]
1204 [-]: NEWTABLE  R82 0 3      ; R82 := {}
1205 [-]: GETTABLE  R83 R77 K46  ; R83 := R77["Name"]
1206 [-]: SETTABLE  R82 K46 R83  ; R82["Name"] := R83
1207 [-]: GETTABLE  R83 R77 K48  ; R83 := R77["LinkString"]
1208 [-]: SETTABLE  R82 K1 R83   ; R82["Item"] := R83
1209 [-]: SETTABLE  R82 K128 R74 ; R82["LinkType"] := R74
1210 [-]: CALL      R80 3 1      ; R80(R81,R82)
1211 [-]: JMP       1275         ; PC := 1275
1212 [-]: OP_LOADBOOL R78 0 0      ; R78 := false
1213 [-]: LEN       R80 R68      ; R80 := # R68
1214 [-]: SETTABLE  R68 R80 K7   ; R68[R80] := nil
1215 [-]: LEN       R80 R68      ; R80 := # R68
1216 [-]: LT        0 K129 R80   ; if 0.000000 >= R80 then PC := 1275
1217 [-]: JMP       1275         ; PC := 1275
1218 [-]: LEN       R80 R68      ; R80 := # R68
1219 [-]: GETTABLE  R67 R68 R80  ; R67 := R68[R80]
1220 [-]: JMP       1275         ; PC := 1275
1221 [-]: EQ        0 R74 K1     ; if R74 ~= "Item" then PC := 1275
1222 [-]: JMP       1275         ; PC := 1275
1223 [-]: GETGLOBAL R80 K20      ; R80 := 0x7b998233
1224 [-]: GETUPVAL  R81 U4       ; R81 := U4
1225 [-]: CALL      R80 2 2      ; R80 := R80(R81)
1226 [-]: TEST      R80 1        ; if R80 then PC := 1275
1227 [-]: JMP       1275         ; PC := 1275
1228 [-]: GETUPVAL  R80 U4       ; R80 := U4
1229 [-]: SELF      R80 R80 K130 ; R81 := R80; R80 := R80[0x2a39090b]
1230 [-]: GETGLOBAL R82 K28      ; R82 := 0x83e41587
1231 [-]: MOVE      R83 R7       ; R83 := R7
1232 [-]: CALL      R82 2 0      ; R82,... := R82(R83)
1233 [-]: CALL      R80 0 2      ; R80 := R80(R81,...)
1234 [-]: EQ        1 R80 K18    ; if R80 == "" then PC := 1275
1235 [-]: JMP       1275         ; PC := 1275
1236 [-]: LOADK     R81 K41      ; R81 := "<a color=\"#33ccff\" hovercolor=\""
1237 [-]: GETUPVAL  R82 U2       ; R82 := U2
1238 [-]: LOADK     R83 K42      ; R83 := "\" href=\"#onHyperlinkPressed:"
1239 [-]: MOVE      R84 R80      ; R84 := R80
1240 [-]: LOADK     R85 K43      ; R85 := "\">"
1241 [-]: MOVE      R86 R75      ; R86 := R75
1242 [-]: MOVE      R87 R7       ; R87 := R7
1243 [-]: MOVE      R88 R76      ; R88 := R76
1244 [-]: LOADK     R89 K124     ; R89 := "</a>"
1245 [-]: CONCAT    R81 R81 R89  ; R81 := R81 .. R82 .. R83 .. R84 .. R85 .. R86 .. R87 .. R88 .. R89
1246 [-]: GETGLOBAL R82 K4       ; R82 := 0x7f5022cf
1247 [-]: GETTABLE  R82 R82 K21  ; R82 := R82[0x1a94c9cc]
1248 [-]: MOVE      R83 R66      ; R83 := R66
1249 [-]: CONST     R84 0        ; R84 := 0.000000
1250 [-]: ADD       R85 R67 R69  ; R85 := R67 + R69
1251 [-]: SUB       R85 R85 K3   ; R85 := R85 - 1.000000
1252 [-]: CALL      R82 4 2      ; R82 := R82(R83,R84,R85)
1253 [-]: MOVE      R83 R81      ; R83 := R81
1254 [-]: GETGLOBAL R84 K4       ; R84 := 0x7f5022cf
1255 [-]: GETTABLE  R84 R84 K21  ; R82 := R84[0x1a94c9cc]
1256 [-]: MOVE      R85 R66      ; R85 := R66
1257 [-]: ADD       R86 R71 R69  ; R86 := R71 + R69
1258 [-]: ADD       R86 R86 K3   ; R86 := R86 + 1.000000
1259 [-]: CALL      R84 3 2      ; R84 := R84(R85,R86)
1260 [-]: CONCAT    R66 R82 R84  ; R66 := R82 .. R83 .. R84
1261 [-]: LEN       R82 R81      ; R82 := # R81
1262 [-]: LEN       R83 R7       ; R83 := # R7
1263 [-]: SUB       R82 R82 R83  ; R82 := R82 - R83
1264 [-]: SUB       R82 R82 K127 ; R82 := R82 - 2.000000
1265 [-]: ADD       R69 R69 R82  ; R69 := R69 + R82
1266 [-]: GETGLOBAL R82 K44      ; R82 := 0x33bdd652
1267 [-]: GETTABLE  R82 R82 K45  ; R82 := R82[0x23d5322f]
1268 [-]: GETTABLE  R83 R50 R65  ; R83 := R50[R65]
1269 [-]: GETTABLE  R83 R83 K110 ; R83 := R83["hyperLinks"]
1270 [-]: NEWTABLE  R84 0 3      ; R84 := {}
1271 [-]: SETTABLE  R84 K46 R7   ; R84["Name"] := R7
1272 [-]: SETTABLE  R84 K1 R80   ; R84["Item"] := R80
1273 [-]: SETTABLE  R84 K128 R74 ; R84["LinkType"] := R74
1274 [-]: CALL      R82 3 1      ; R82(R83,R84)
1275 [-]: TEST      R78 0        ; if not R78 then PC := 923
1276 [-]: JMP       923          ; PC := 923
1277 [-]: LOADK     R70 K18      ; R70 := ""
1278 [-]: LOADNIL   R67 R67      ; R67 := nil
1279 [-]: NEWTABLE  R82 0 0      ; R82 := {}
1280 [-]: MOVE      R68 R82      ; R68 := R82
1281 [-]: JMP       923          ; PC := 923
1282 [-]: EQ        1 R70 K23    ; if R70 == "item" then PC := 1286
1283 [-]: JMP       1286         ; PC := 1286
1284 [-]: EQ        0 R70 K25    ; if R70 ~= "clan" then PC := 1543
1285 [-]: JMP       1543         ; PC := 1543
1286 [-]: GETGLOBAL R82 K131     ; R82 := 0x03f57322
1287 [-]: MOVE      R83 R51      ; R83 := R51
1288 [-]: CALL      R82 2 2      ; R82 := R82(R83)
1289 [-]: EQ        1 R65 R82    ; if R65 == R82 then PC := 1543
1290 [-]: JMP       1543         ; PC := 1543
1291 [-]: GETGLOBAL R82 K20      ; R82 := 0x7b998233
1292 [-]: MOVE      R83 R67      ; R83 := R67
1293 [-]: CALL      R82 2 2      ; R82 := R82(R83)
1294 [-]: TEST      R82 1        ; if R82 then PC := 1543
1295 [-]: JMP       1543         ; PC := 1543
1296 [-]: CONST     R82 0        ; R82 := 0.000000
1297 [-]: ADD       R83 R65 K3   ; R83 := R65 + 1.000000
1298 [-]: GETTABLE  R83 R50 R83  ; R83 := R50[R83]
1299 [-]: GETTABLE  R83 R83 K107 ; R83 := R83["text"]
1300 [-]: LEN       R83 R83      ; R83 := # R83
1301 [-]: LE        0 R82 R83    ; if R82 > R83 then PC := 1543
1302 [-]: JMP       1543         ; PC := 1543
1303 [-]: GETGLOBAL R83 K4       ; R83 := 0x7f5022cf
1304 [-]: GETTABLE  R83 R83 K5   ; R82 := R83[0xa5c556b9]
1305 [-]: ADD       R84 R65 K3   ; R84 := R65 + 1.000000
1306 [-]: GETTABLE  R84 R50 R84  ; R84 := R50[R84]
1307 [-]: GETTABLE  R84 R84 K107 ; R84 := R84["text"]
1308 [-]: LOADK     R85 K19      ; R85 := "[%[{%]}]"
1309 [-]: ADD       R86 R82 K3   ; R86 := R82 + 1.000000
1310 [-]: CALL      R83 4 2      ; R83 := R83(R84,R85,R86)
1311 [-]: MOVE      R82 R83      ; R82 := R83
1312 [-]: GETGLOBAL R83 K20      ; R83 := 0x7b998233
1313 [-]: MOVE      R84 R82      ; R84 := R82
1314 [-]: CALL      R83 2 2      ; R83 := R83(R84)
1315 [-]: TEST      R83 0        ; if not R83 then PC := 1318
1316 [-]: JMP       1318         ; PC := 1318
1317 [-]: JMP       1543         ; PC := 1543
1318 [-]: GETGLOBAL R83 K4       ; R83 := 0x7f5022cf
1319 [-]: GETTABLE  R83 R83 K21  ; R82 := R83[0x1a94c9cc]
1320 [-]: ADD       R84 R65 K3   ; R84 := R65 + 1.000000
1321 [-]: GETTABLE  R84 R50 R84  ; R84 := R50[R84]
1322 [-]: GETTABLE  R84 R84 K107 ; R84 := R84["text"]
1323 [-]: MOVE      R85 R82      ; R85 := R82
1324 [-]: MOVE      R86 R82      ; R86 := R82
1325 [-]: CALL      R83 4 2      ; R83 := R83(R84,R85,R86)
1326 [-]: EQ        1 R83 K22    ; if R83 == "[" then PC := 1543
1327 [-]: JMP       1543         ; PC := 1543
1328 [-]: EQ        0 R83 K24    ; if R83 ~= "{" then PC := 1332
1329 [-]: JMP       1332         ; PC := 1332
1330 [-]: JMP       1543         ; PC := 1543
1331 [-]: JMP       1297         ; PC := 1297
1332 [-]: EQ        1 R83 K26    ; if R83 == "]" then PC := 1336
1333 [-]: JMP       1336         ; PC := 1336
1334 [-]: EQ        0 R83 K27    ; if R83 ~= "}" then PC := 1297
1335 [-]: JMP       1297         ; PC := 1297
1336 [-]: GETUPVAL  R84 U0       ; R84 := U0
1337 [-]: GETTABLE  R84 R84 K125 ; R82 := R84[0x06d055f9]
1338 [-]: EQ        1 R83 K26    ; if R83 == "]" then PC := 1341
1339 [-]: JMP       1341         ; PC := 1341
1340 [-]: OP_LOADBOOL R85 0 1      ; R85 := false; PC := 1341
1341 [-]: OP_LOADBOOL R85 1 0      ; R85 := true
1342 [-]: LOADK     R86 K1       ; R86 := "Item"
1343 [-]: LOADK     R87 K2       ; R87 := "Guild"
1344 [-]: CALL      R84 4 2      ; R84 := R84(R85,R86,R87)
1345 [-]: GETUPVAL  R85 U0       ; R85 := U0
1346 [-]: GETTABLE  R85 R85 K125 ; R82 := R85[0x06d055f9]
1347 [-]: EQ        1 R84 K1     ; if R84 == "Item" then PC := 1350
1348 [-]: JMP       1350         ; PC := 1350
1349 [-]: OP_LOADBOOL R86 0 1      ; R86 := false; PC := 1350
1350 [-]: OP_LOADBOOL R86 1 0      ; R86 := true
1351 [-]: LOADK     R87 K22      ; R87 := "["
1352 [-]: LOADK     R88 K24      ; R88 := "{"
1353 [-]: CALL      R85 4 2      ; R85 := R85(R86,R87,R88)
1354 [-]: GETUPVAL  R86 U0       ; R86 := U0
1355 [-]: GETTABLE  R86 R86 K125 ; R82 := R86[0x06d055f9]
1356 [-]: EQ        1 R84 K1     ; if R84 == "Item" then PC := 1359
1357 [-]: JMP       1359         ; PC := 1359
1358 [-]: OP_LOADBOOL R87 0 1      ; R87 := false; PC := 1359
1359 [-]: OP_LOADBOOL R87 1 0      ; R87 := true
1360 [-]: LOADK     R88 K26      ; R88 := "]"
1361 [-]: LOADK     R89 K27      ; R89 := "}"
1362 [-]: CALL      R86 4 2      ; R86 := R86(R87,R88,R89)
1363 [-]: GETGLOBAL R87 K4       ; R87 := 0x7f5022cf
1364 [-]: GETTABLE  R87 R87 K21  ; R82 := R87[0x1a94c9cc]
1365 [-]: GETTABLE  R88 R50 R65  ; R88 := R50[R65]
1366 [-]: GETTABLE  R88 R88 K107 ; R88 := R88["text"]
1367 [-]: ADD       R89 R67 K3   ; R89 := R67 + 1.000000
1368 [-]: CALL      R87 3 2      ; R87 := R87(R88,R89)
1369 [-]: GETGLOBAL R88 K4       ; R88 := 0x7f5022cf
1370 [-]: GETTABLE  R88 R88 K21  ; R82 := R88[0x1a94c9cc]
1371 [-]: ADD       R89 R65 K3   ; R89 := R65 + 1.000000
1372 [-]: GETTABLE  R89 R50 R89  ; R89 := R50[R89]
1373 [-]: GETTABLE  R89 R89 K107 ; R89 := R89["text"]
1374 [-]: CONST     R90 0        ; R90 := 0.000000
1375 [-]: SUB       R91 R82 K3   ; R91 := R82 - 1.000000
1376 [-]: CALL      R88 4 2      ; R88 := R88(R89,R90,R91)
1377 [-]: GETTABLE  R89 R50 R65  ; R89 := R50[R65]
1378 [-]: GETTABLE  R89 R89 K111 ; R89 := R89["endSpace"]
1379 [-]: TEST      R89 0        ; if not R89 then PC := 1386
1380 [-]: JMP       1386         ; PC := 1386
1381 [-]: MOVE      R89 R87      ; R89 := R87
1382 [-]: LOADK     R90 K40      ; R90 := " "
1383 [-]: MOVE      R91 R88      ; R91 := R88
1384 [-]: CONCAT    R7 R89 R91   ; R7 := R89 .. R90 .. R91
1385 [-]: JMP       1389         ; PC := 1389
1386 [-]: MOVE      R89 R87      ; R89 := R87
1387 [-]: MOVE      R90 R88      ; R90 := R88
1388 [-]: CONCAT    R7 R89 R90   ; R7 := R89 .. R90
1389 [-]: LOADNIL   R89 R89      ; R89 := nil
1390 [-]: GETTABLE  R90 R5 R84   ; R90 := R5[R84]
1391 [-]: LEN       R90 R90      ; R90 := # R90
1392 [-]: GETTABLE  R91 R6 R84   ; R91 := R6[R84]
1393 [-]: LE        0 R91 R90    ; if R91 > R90 then PC := 1398
1394 [-]: JMP       1398         ; PC := 1398
1395 [-]: GETTABLE  R90 R5 R84   ; R90 := R5[R84]
1396 [-]: GETTABLE  R91 R6 R84   ; R91 := R6[R84]
1397 [-]: GETTABLE  R89 R90 R91  ; R89 := R90[R91]
1398 [-]: EQ        0 R84 K1     ; if R84 ~= "Item" then PC := 1474
1399 [-]: JMP       1474         ; PC := 1474
1400 [-]: GETGLOBAL R90 K20      ; R90 := 0x7b998233
1401 [-]: GETUPVAL  R91 U4       ; R91 := U4
1402 [-]: CALL      R90 2 2      ; R90 := R90(R91)
1403 [-]: TEST      R90 1        ; if R90 then PC := 1474
1404 [-]: JMP       1474         ; PC := 1474
1405 [-]: GETUPVAL  R90 U4       ; R90 := U4
1406 [-]: SELF      R90 R90 K130 ; R91 := R90; R90 := R90[0x2a39090b]
1407 [-]: GETGLOBAL R92 K28      ; R92 := 0x83e41587
1408 [-]: MOVE      R93 R7       ; R93 := R7
1409 [-]: CALL      R92 2 0      ; R92,... := R92(R93)
1410 [-]: CALL      R90 0 2      ; R90 := R90(R91,...)
1411 [-]: EQ        1 R90 K18    ; if R90 == "" then PC := 1474
1412 [-]: JMP       1474         ; PC := 1474
1413 [-]: GETGLOBAL R91 K4       ; R91 := 0x7f5022cf
1414 [-]: GETTABLE  R91 R91 K132 ; R82 := R91[0x04981ab3]
1415 [-]: MOVE      R92 R7       ; R92 := R7
1416 [-]: CALL      R91 2 2      ; R91 := R91(R92)
1417 [-]: SELF      R91 R91 K49  ; R92 := R91; R91 := R91[0x66edf04f]
1418 [-]: LOADK     R93 K133     ; R93 := "(%l)([^%s^%-]*)"
1419 [-]: CLOSURE   R94 2        ; R94 := closure(Function #94.13.3)
1420 [-]: CALL      R91 4 2      ; R91 := R91(R92,R93,R94)
1421 [-]: MOVE      R7 R91       ; R7 := R91
1422 [-]: LOADK     R91 K41      ; R91 := "<a color=\"#33ccff\" hovercolor=\""
1423 [-]: GETUPVAL  R92 U2       ; R92 := U2
1424 [-]: LOADK     R93 K42      ; R93 := "\" href=\"#onHyperlinkPressed:"
1425 [-]: MOVE      R94 R90      ; R94 := R90
1426 [-]: LOADK     R95 K43      ; R95 := "\">"
1427 [-]: CONCAT    R91 R91 R95  ; R91 := R91 .. R92 .. R93 .. R94 .. R95
1428 [-]: GETGLOBAL R92 K4       ; R92 := 0x7f5022cf
1429 [-]: GETTABLE  R92 R92 K21  ; R82 := R92[0x1a94c9cc]
1430 [-]: MOVE      R93 R66      ; R93 := R66
1431 [-]: CONST     R94 0        ; R94 := 0.000000
1432 [-]: ADD       R95 R67 R69  ; R95 := R67 + R69
1433 [-]: SUB       R95 R95 K3   ; R95 := R95 - 1.000000
1434 [-]: CALL      R92 4 2      ; R92 := R92(R93,R94,R95)
1435 [-]: MOVE      R93 R91      ; R93 := R91
1436 [-]: LOADK     R94 K22      ; R94 := "["
1437 [-]: GETGLOBAL R95 K4       ; R95 := 0x7f5022cf
1438 [-]: GETTABLE  R95 R95 K21  ; R82 := R95[0x1a94c9cc]
1439 [-]: MOVE      R96 R66      ; R96 := R66
1440 [-]: ADD       R97 R67 K3   ; R97 := R67 + 1.000000
1441 [-]: ADD       R97 R97 R69  ; R97 := R97 + R69
1442 [-]: CALL      R95 3 2      ; R95 := R95(R96,R97)
1443 [-]: CONCAT    R66 R92 R95  ; R66 := R92 .. R93 .. R94 .. R95
1444 [-]: ADD       R92 R65 K3   ; R92 := R65 + 1.000000
1445 [-]: GETTABLE  R92 R50 R92  ; R92 := R50[R92]
1446 [-]: GETGLOBAL R93 K4       ; R93 := 0x7f5022cf
1447 [-]: GETTABLE  R93 R93 K21  ; R82 := R93[0x1a94c9cc]
1448 [-]: ADD       R94 R65 K3   ; R94 := R65 + 1.000000
1449 [-]: GETTABLE  R94 R50 R94  ; R94 := R50[R94]
1450 [-]: GETTABLE  R94 R94 K107 ; R94 := R94["text"]
1451 [-]: CONST     R95 0        ; R95 := 0.000000
1452 [-]: SUB       R96 R82 K3   ; R96 := R82 - 1.000000
1453 [-]: CALL      R93 4 2      ; R93 := R93(R94,R95,R96)
1454 [-]: LOADK     R94 K134     ; R94 := "]</a>"
1455 [-]: GETGLOBAL R95 K4       ; R95 := 0x7f5022cf
1456 [-]: GETTABLE  R95 R95 K21  ; R82 := R95[0x1a94c9cc]
1457 [-]: ADD       R96 R65 K3   ; R96 := R65 + 1.000000
1458 [-]: GETTABLE  R96 R50 R96  ; R96 := R50[R96]
1459 [-]: GETTABLE  R96 R96 K107 ; R96 := R96["text"]
1460 [-]: ADD       R97 R82 K3   ; R97 := R82 + 1.000000
1461 [-]: CALL      R95 3 2      ; R95 := R95(R96,R97)
1462 [-]: CONCAT    R93 R93 R95  ; R93 := R93 .. R94 .. R95
1463 [-]: SETTABLE  R92 K107 R93 ; R92["text"] := R93
1464 [-]: GETGLOBAL R92 K44      ; R92 := 0x33bdd652
1465 [-]: GETTABLE  R92 R92 K45  ; R82 := R92[0x23d5322f]
1466 [-]: GETTABLE  R93 R50 R65  ; R93 := R50[R65]
1467 [-]: GETTABLE  R93 R93 K110 ; R93 := R93["hyperLinks"]
1468 [-]: NEWTABLE  R94 0 3      ; R94 := {}
1469 [-]: SETTABLE  R94 K46 R7   ; R94["Name"] := R7
1470 [-]: SETTABLE  R94 K1 R90   ; R94["Item"] := R90
1471 [-]: SETTABLE  R94 K128 R84 ; R94["LinkType"] := R84
1472 [-]: CALL      R92 3 1      ; R92(R93,R94)
1473 [-]: JMP       1543         ; PC := 1543
1474 [-]: EQ        1 R89 K7     ; if R89 == nil then PC := 1297
1475 [-]: JMP       1297         ; PC := 1297
1476 [-]: GETTABLE  R92 R89 K46  ; R92 := R89["Name"]
1477 [-]: EQ        0 R7 R92     ; if R7 ~= R92 then PC := 1297
1478 [-]: JMP       1297         ; PC := 1297
1479 [-]: GETTABLE  R92 R89 K47  ; R92 := R89["LinkStart"]
1480 [-]: MOVE      R93 R85      ; R93 := R85
1481 [-]: GETTABLE  R94 R89 K46  ; R94 := R89["Name"]
1482 [-]: MOVE      R95 R86      ; R95 := R86
1483 [-]: LOADK     R96 K124     ; R96 := "</a>"
1484 [-]: CONCAT    R92 R92 R96  ; R92 := R92 .. R93 .. R94 .. R95 .. R96
1485 [-]: GETGLOBAL R93 K4       ; R93 := 0x7f5022cf
1486 [-]: GETTABLE  R93 R93 K21  ; R82 := R93[0x1a94c9cc]
1487 [-]: MOVE      R94 R66      ; R94 := R66
1488 [-]: CONST     R95 0        ; R95 := 0.000000
1489 [-]: ADD       R96 R67 R69  ; R96 := R67 + R69
1490 [-]: SUB       R96 R96 K3   ; R96 := R96 - 1.000000
1491 [-]: CALL      R93 4 2      ; R93 := R93(R94,R95,R96)
1492 [-]: GETTABLE  R94 R89 K47  ; R94 := R89["LinkStart"]
1493 [-]: MOVE      R95 R85      ; R95 := R85
1494 [-]: GETGLOBAL R96 K4       ; R96 := 0x7f5022cf
1495 [-]: GETTABLE  R96 R96 K21  ; R82 := R96[0x1a94c9cc]
1496 [-]: MOVE      R97 R66      ; R97 := R66
1497 [-]: ADD       R98 R67 R69  ; R98 := R67 + R69
1498 [-]: ADD       R98 R98 K3   ; R98 := R98 + 1.000000
1499 [-]: CALL      R96 3 2      ; R96 := R96(R97,R98)
1500 [-]: CONCAT    R66 R93 R96  ; R66 := R93 .. R94 .. R95 .. R96
1501 [-]: LEN       R93 R92      ; R93 := # R92
1502 [-]: LEN       R94 R7       ; R94 := # R7
1503 [-]: SUB       R93 R93 R94  ; R93 := R93 - R94
1504 [-]: SUB       R93 R93 K127 ; R93 := R93 - 2.000000
1505 [-]: ADD       R69 R69 R93  ; R69 := R69 + R93
1506 [-]: GETTABLE  R93 R6 R84   ; R93 := R6[R84]
1507 [-]: ADD       R93 R93 K3   ; R93 := R93 + 1.000000
1508 [-]: SETTABLE  R6 R84 R93   ; R6[R84] := R93
1509 [-]: ADD       R93 R65 K3   ; R93 := R65 + 1.000000
1510 [-]: GETTABLE  R93 R50 R93  ; R93 := R50[R93]
1511 [-]: GETGLOBAL R94 K4       ; R94 := 0x7f5022cf
1512 [-]: GETTABLE  R94 R94 K21  ; R82 := R94[0x1a94c9cc]
1513 [-]: ADD       R95 R65 K3   ; R95 := R65 + 1.000000
1514 [-]: GETTABLE  R95 R50 R95  ; R95 := R50[R95]
1515 [-]: GETTABLE  R95 R95 K107 ; R95 := R95["text"]
1516 [-]: CONST     R96 0        ; R96 := 0.000000
1517 [-]: SUB       R97 R82 K3   ; R97 := R82 - 1.000000
1518 [-]: CALL      R94 4 2      ; R94 := R94(R95,R96,R97)
1519 [-]: MOVE      R95 R86      ; R95 := R86
1520 [-]: LOADK     R96 K124     ; R96 := "</a>"
1521 [-]: GETGLOBAL R97 K4       ; R97 := 0x7f5022cf
1522 [-]: GETTABLE  R97 R97 K21  ; R82 := R97[0x1a94c9cc]
1523 [-]: ADD       R98 R65 K3   ; R98 := R65 + 1.000000
1524 [-]: GETTABLE  R98 R50 R98  ; R98 := R50[R98]
1525 [-]: GETTABLE  R98 R98 K107 ; R98 := R98["text"]
1526 [-]: ADD       R99 R82 K3   ; R99 := R82 + 1.000000
1527 [-]: CALL      R97 3 2      ; R97 := R97(R98,R99)
1528 [-]: CONCAT    R94 R94 R97  ; R94 := R94 .. R95 .. R96 .. R97
1529 [-]: SETTABLE  R93 K107 R94 ; R93["text"] := R94
1530 [-]: GETGLOBAL R93 K44      ; R93 := 0x33bdd652
1531 [-]: GETTABLE  R93 R93 K45  ; R82 := R93[0x23d5322f]
1532 [-]: GETTABLE  R94 R50 R65  ; R94 := R50[R65]
1533 [-]: GETTABLE  R94 R94 K110 ; R94 := R94["hyperLinks"]
1534 [-]: NEWTABLE  R95 0 3      ; R95 := {}
1535 [-]: GETTABLE  R96 R89 K46  ; R96 := R89["Name"]
1536 [-]: SETTABLE  R95 K46 R96  ; R95["Name"] := R96
1537 [-]: GETTABLE  R96 R89 K48  ; R96 := R89["LinkString"]
1538 [-]: SETTABLE  R95 K1 R96   ; R95["Item"] := R96
1539 [-]: SETTABLE  R95 K128 R84 ; R95["LinkType"] := R84
1540 [-]: CALL      R93 3 1      ; R93(R94,R95)
1541 [-]: JMP       1543         ; PC := 1543
1542 [-]: JMP       1297         ; PC := 1297
1543 [-]: GETTABLE  R93 R50 R65  ; R93 := R50[R65]
1544 [-]: SETTABLE  R93 K107 R66 ; R93["text"] := R66
1545 [-]: FORLOOP   R62 895      ; R62 += R64; if R62 <= R63 then begin PC := 895; R65 := R62 end
1546 [-]: RETURN    R50 2        ; return R50
1547 [-]: RETURN    R0 1         ; return 


; Function #94.13.1:
;
; Name:            
; Defined at line: 4894
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: ADD       R3 R3 K0     ; R3 := R3 + 1.000000
  3 [-]: SETUPVAL  R3 U0        ; U82 := 
  4 [-]: LOADK     R3 K1        ; R3 := "[REP"
  5 [-]: GETUPVAL  R4 U0        ; R4 := U0
  6 [-]: LOADK     R5 K2        ; R5 := "]"
  7 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
  8 [-]: GETUPVAL  R4 U1        ; R4 := U1
  9 [-]: SETTABLE  R4 R3 R1     ; R4[R3] := R1
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: MOVE      R5 R3        ; R5 := R3
 12 [-]: MOVE      R6 R2        ; R6 := R2
 13 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 14 [-]: RETURN    R4 2         ; return R4
 15 [-]: RETURN    R0 1         ; return 


; Function #94.13.2:
;
; Name:            
; Defined at line: 4901
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 R0     ; R1 := R1[R0]
  3 [-]: RETURN    R1 2         ; return R1
  4 [-]: RETURN    R0 1         ; return 


; Function #94.13.3:
;
; Name:            
; Defined at line: 5047
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7f5022cf
  2 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x3f3e4d12]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  7 [-]: RETURN    R2 2         ; return R2
  8 [-]: RETURN    R0 1         ; return 


; Function #94.14:
;
; Name:            
; Defined at line: 5076
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  75

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xce225efa
  2 [-]: CONST     R3 0         ; R3 := 0.000000
  3 [-]: CALL      R2 2 1       ; R2(R3)
  4 [-]: CONST     R2 0         ; R2 := 0.000000
  5 [-]: LOADK     R3 K1        ; R3 := ""
  6 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mLineLog"]
  7 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 98
  8 [-]: JMP       98           ; PC := 98
  9 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mLineLog"]
 10 [-]: LEN       R4 R4        ; R4 := # R4
 11 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mChatHistory"]
 12 [-]: LEN       R5 R5        ; R5 := # R5
 13 [-]: LT        0 K5 R4      ; if 0.000000 >= R4 then PC := 98
 14 [-]: JMP       98           ; PC := 98
 15 [-]: MOVE      R6 R4        ; R6 := R4
 16 [-]: CONST     R7 1         ; R7 := 1.000000
 17 [-]: CONST     R8 -1        ; R8 := -1.000000
 18 [-]: FORPREP   R6 97        ; R6 -= R8; PC := 97
 19 [-]: GETTABLE  R10 R0 K4    ; R10 := R0["mChatHistory"]
 20 [-]: LEN       R10 R10      ; R10 := # R10
 21 [-]: GETTABLE  R11 R0 K6    ; R11 := R0["mMaxChatHistory"]
 22 [-]: LE        0 R11 R10    ; if R11 > R10 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: JMP       98           ; PC := 98
 25 [-]: MOD       R10 R9 K7    ; R10 := R9 % 50.000000
 26 [-]: EQ        0 R10 K5     ; if R10 ~= 0.000000 then PC := 31
 27 [-]: JMP       31           ; PC := 31
 28 [-]: GETGLOBAL R10 K0       ; R10 := 0xce225efa
 29 [-]: CONST     R11 0        ; R11 := 0.000000
 30 [-]: CALL      R10 2 1      ; R10(R11)
 31 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mLineLog"]
 32 [-]: GETTABLE  R10 R10 R9   ; R10 := R10[R9]
 33 [-]: GETTABLE  R11 R10 K8   ; R11 := R10["text"]
 34 [-]: GETTABLE  R12 R10 K9   ; R12 := R10["sender"]
 35 [-]: GETTABLE  R13 R0 K10   ; R13 := R0["mHasHyperlink"]
 36 [-]: TEST      R13 1        ; if R13 then PC := 44
 37 [-]: JMP       44           ; PC := 44
 38 [-]: GETTABLE  R13 R10 K11  ; R13 := R10["hyperLinks"]
 39 [-]: LEN       R13 R13      ; R13 := # R13
 40 [-]: LT        1 K5 R13     ; if 0.000000 < R13 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: OP_LOADBOOL R13 0 1      ; R13 := false; PC := 43
 43 [-]: OP_LOADBOOL R13 1 0      ; R13 := true
 44 [-]: SETTABLE  R0 K10 R13   ; R0["mHasHyperlink"] := R13
 45 [-]: EQ        1 R12 K3     ; if R12 == nil then PC := 51
 46 [-]: JMP       51           ; PC := 51
 47 [-]: EQ        1 R12 K1     ; if R12 == "" then PC := 51
 48 [-]: JMP       51           ; PC := 51
 49 [-]: GETUPVAL  R13 U0       ; R13 := U0
 50 [-]: SETTABLE  R13 R12 K12  ; R13[R12] := true
 51 [-]: EQ        0 R5 K5      ; if R5 ~= 0.000000 then PC := 97
 52 [-]: JMP       97           ; PC := 97
 53 [-]: GETUPVAL  R13 U1       ; R13 := U1
 54 [-]: GETTABLE  R13 R13 K13  ; R82 := R13[0x06d055f9]
 55 [-]: GETGLOBAL R14 K14      ; R14 := mEmojiSettings
 56 [-]: GETTABLE  R14 R14 K15  ; R14 := R14["Enabled"]
 57 [-]: GETGLOBAL R15 K16      ; R15 := 0xae91e43b
 58 [-]: SELF      R15 R15 K17  ; R16 := R15; R15 := R15[0xdca61cfa]
 59 [-]: MOVE      R17 R11      ; R17 := R11
 60 [-]: OP_LOADBOOL R18 1 0      ; R18 := true
 61 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
 62 [-]: MOVE      R16 R11      ; R16 := R11
 63 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 64 [-]: MOVE      R11 R13      ; R11 := R13
 65 [-]: GETTABLE  R13 R0 K18   ; R13 := R0["mParent"]
 66 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["mShowTimeStamps"]
 67 [-]: EQ        1 R13 K3     ; if R13 == nil then PC := 76
 68 [-]: JMP       76           ; PC := 76
 69 [-]: GETTABLE  R13 R0 K18   ; R13 := R0["mParent"]
 70 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["mShowTimeStamps"]
 71 [-]: TEST      R13 0        ; if not R13 then PC := 76
 72 [-]: JMP       76           ; PC := 76
 73 [-]: GETTABLE  R13 R10 K20  ; R13 := R10["timeStamp"]
 74 [-]: MOVE      R14 R11      ; R14 := R11
 75 [-]: CONCAT    R11 R13 R14  ; R11 := R13 .. R14
 76 [-]: SELF      R13 R0 K21   ; R14 := R0; R13 := R0[0x0d2baf85]
 77 [-]: MOVE      R15 R11      ; R15 := R11
 78 [-]: GETTABLE  R16 R10 K22  ; R16 := R10["messageType"]
 79 [-]: GETTABLE  R17 R10 K9   ; R17 := R10["sender"]
 80 [-]: CALL      R13 5 2      ; R13 := R13(R14,R15,R16,R17)
 81 [-]: LEN       R14 R13      ; R14 := # R13
 82 [-]: MOVE      R15 R14      ; R15 := R14
 83 [-]: CONST     R16 1        ; R16 := 1.000000
 84 [-]: CONST     R17 -1       ; R17 := -1.000000
 85 [-]: FORPREP   R15 96       ; R15 -= R17; PC := 96
 86 [-]: GETTABLE  R19 R13 R18  ; R19 := R13[R18]
 87 [-]: GETTABLE  R19 R19 K8   ; R19 := R19["text"]
 88 [-]: EQ        1 R19 K1     ; if R19 == "" then PC := 96
 89 [-]: JMP       96           ; PC := 96
 90 [-]: GETGLOBAL R19 K23      ; R19 := 0x33bdd652
 91 [-]: GETTABLE  R19 R19 K24  ; R82 := R19[0x23d5322f]
 92 [-]: GETTABLE  R20 R0 K4    ; R20 := R0["mChatHistory"]
 93 [-]: CONST     R21 1        ; R21 := 1.000000
 94 [-]: GETTABLE  R22 R13 R18  ; R22 := R13[R18]
 95 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
 96 [-]: FORLOOP   R15 86       ; R15 += R17; if R15 <= R16 then begin PC := 86; R18 := R15 end
 97 [-]: FORLOOP   R6 19        ; R6 += R8; if R6 <= R7 then begin PC := 19; R9 := R6 end
 98 [-]: GETGLOBAL R19 K25      ; R19 := 0x34291f5c
 99 [-]: GETTABLE  R19 R19 K26  ; R82 := R19[0x1467d5f4]
100 [-]: CALL      R19 1 2      ; R19 := R19()
101 [-]: TEST      R19 0        ; if not R19 then PC := 109
102 [-]: JMP       109          ; PC := 109
103 [-]: GETGLOBAL R19 K16      ; R19 := 0xae91e43b
104 [-]: SELF      R19 R19 K27  ; R20 := R19; R19 := R19[0xaade900e]
105 [-]: LOADK     R21 K28      ; R21 := "Window.SendMessageBar.HyperlinkBtn"
106 [-]: CONST     R22 11       ; R22 := 11.000000
107 [-]: GETTABLE  R23 R0 K10   ; R23 := R0["mHasHyperlink"]
108 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
109 [-]: GETGLOBAL R19 K16      ; R19 := 0xae91e43b
110 [-]: SELF      R19 R19 K29  ; R20 := R19; R19 := R19[0x91a24e4b]
111 [-]: GETTABLE  R21 R0 K30   ; R21 := R0["mClipPath"]
112 [-]: LOADK     R22 K31      ; R22 := ".ChatArea"
113 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
114 [-]: CONST     R22 42       ; R22 := 42.000000
115 [-]: CALL      R19 4 2      ; R19 := R19(R20,R21,R22)
116 [-]: GETTABLE  R20 R0 K18   ; R20 := R0["mParent"]
117 [-]: SELF      R20 R20 K32  ; R21 := R20; R20 := R20[0x8ec8f0d5]
118 [-]: GETTABLE  R22 R0 K18   ; R22 := R0["mParent"]
119 [-]: GETTABLE  R22 R22 K33  ; R22 := R22["mChatPanelWindow"]
120 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
121 [-]: GETTABLE  R21 R0 K4    ; R21 := R0["mChatHistory"]
122 [-]: LEN       R21 R21      ; R21 := # R21
123 [-]: GETTABLE  R22 R0 K34   ; R22 := R0["mMaxVisibleChatLines"]
124 [-]: SUB       R22 R21 R22  ; R22 := R21 - R22
125 [-]: ADD       R22 R22 K35  ; R22 := R22 + 1.000000
126 [-]: GETGLOBAL R23 K36      ; R23 := 0x5bced4c4
127 [-]: GETTABLE  R23 R23 K37  ; R82 := R23[0xb62ecfe0]
128 [-]: CONST     R24 0        ; R24 := 0.000000
129 [-]: GETTABLE  R25 R0 K38   ; R25 := R0["mScrollBack"]
130 [-]: CALL      R23 3 2      ; R23 := R23(R24,R25)
131 [-]: SUB       R22 R22 R23  ; R22 := R22 - R23
132 [-]: GETGLOBAL R23 K39      ; R23 := 0x42dcc9f5
133 [-]: MOVE      R24 R22      ; R24 := R22
134 [-]: CONST     R25 1        ; R25 := 1.000000
135 [-]: MOVE      R26 R21      ; R26 := R21
136 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
137 [-]: MOVE      R22 R23      ; R22 := R23
138 [-]: GETGLOBAL R23 K25      ; R23 := 0x34291f5c
139 [-]: GETTABLE  R23 R23 K40  ; R82 := R23[0xe6b41adb]
140 [-]: CALL      R23 1 2      ; R23 := R23()
141 [-]: TEST      R23 0        ; if not R23 then PC := 145
142 [-]: JMP       145          ; PC := 145
143 [-]: SETTABLE  R0 K34 K41   ; R0["mMaxVisibleChatLines"] := 2.000000
144 [-]: JMP       162          ; PC := 162
145 [-]: GETGLOBAL R23 K16      ; R23 := 0xae91e43b
146 [-]: SELF      R23 R23 K29  ; R24 := R23; R23 := R23[0x91a24e4b]
147 [-]: GETTABLE  R25 R0 K30   ; R25 := R0["mClipPath"]
148 [-]: LOADK     R26 K31      ; R26 := ".ChatArea"
149 [-]: CONCAT    R25 R25 R26  ; R25 := R25 .. R26
150 [-]: CONST     R26 13       ; R26 := 13.000000
151 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
152 [-]: GETGLOBAL R24 K36      ; R24 := 0x5bced4c4
153 [-]: GETTABLE  R24 R24 K37  ; R82 := R24[0xb62ecfe0]
154 [-]: GETGLOBAL R25 K36      ; R25 := 0x5bced4c4
155 [-]: GETTABLE  R25 R25 K42  ; R82 := R25[0x55f27c30]
156 [-]: MUL       R26 R19 K43  ; R26 := R19 * 1.550000
157 [-]: DIV       R26 R23 R26  ; R26 := R23 / R26
158 [-]: CALL      R25 2 2      ; R25 := R25(R26)
159 [-]: CONST     R26 0        ; R26 := 0.000000
160 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
161 [-]: SETTABLE  R0 K34 R24   ; R0["mMaxVisibleChatLines"] := R24
162 [-]: LOADNIL   R24 R28      ; R24 := R25 := R26 := R27 := R28 := nil
163 [-]: NEWTABLE  R29 0 0      ; R29 := {}
164 [-]: LOADK     R30 K44      ; R30 := "<a color=\"#%X\" hovercolor=\""
165 [-]: GETUPVAL  R31 U2       ; R31 := U2
166 [-]: LOADK     R32 K45      ; R32 := "\" href=\"#onHyperlinkPressed:@"
167 [-]: CONCAT    R30 R30 R32  ; R30 := R30 .. R31 .. R32
168 [-]: LOADK     R31 K46      ; R31 := "</a><font color=\"#%X\">"
169 [-]: LOADK     R32 K47      ; R32 := "<font color=\"#%X\">"
170 [-]: CONST     R33 0        ; R33 := 0.000000
171 [-]: LT        0 K5 R22     ; if 0.000000 >= R22 then PC := 438
172 [-]: JMP       438          ; PC := 438
173 [-]: LE        0 R22 R21    ; if R22 > R21 then PC := 438
174 [-]: JMP       438          ; PC := 438
175 [-]: GETTABLE  R34 R0 K34   ; R34 := R0["mMaxVisibleChatLines"]
176 [-]: LT        0 R2 R34     ; if R2 >= R34 then PC := 438
177 [-]: JMP       438          ; PC := 438
178 [-]: GETTABLE  R34 R0 K4    ; R34 := R0["mChatHistory"]
179 [-]: GETTABLE  R34 R34 R22  ; R34 := R34[R22]
180 [-]: SELF      R35 R0 K48   ; R36 := R0; R35 := R0[0x647f5245]
181 [-]: GETTABLE  R37 R34 K8   ; R37 := R34["text"]
182 [-]: GETTABLE  R38 R34 K49  ; R38 := R34["firstLine"]
183 [-]: GETTABLE  R39 R34 K22  ; R39 := R34["messageType"]
184 [-]: CALL      R35 5 5      ; R35,R36,R37,R38 := R35(R36,R37,R38,R39)
185 [-]: MOVE      R28 R38      ; R28 := R38
186 [-]: MOVE      R27 R37      ; R27 := R37
187 [-]: MOVE      R26 R36      ; R26 := R36
188 [-]: MOVE      R25 R35      ; R25 := R35
189 [-]: LOADNIL   R35 R35      ; R35 := nil
190 [-]: GETGLOBAL R36 K50      ; R36 := 0x4ec73e73
191 [-]: MOVE      R37 R29      ; R37 := R29
192 [-]: CALL      R36 2 2      ; R36 := R36(R37)
193 [-]: EQ        1 R36 K3     ; if R36 == nil then PC := 200
194 [-]: JMP       200          ; PC := 200
195 [-]: GETGLOBAL R36 K23      ; R36 := 0x33bdd652
196 [-]: GETTABLE  R36 R36 K24  ; R82 := R36[0x23d5322f]
197 [-]: MOVE      R37 R29      ; R37 := R29
198 [-]: LOADK     R38 K51      ; R38 := "<br>"
199 [-]: CALL      R36 3 1      ; R36(R37,R38)
200 [-]: GETTABLE  R36 R0 K34   ; R36 := R0["mMaxVisibleChatLines"]
201 [-]: SUB       R36 R36 K35  ; R36 := R36 - 1.000000
202 [-]: EQ        1 R2 R36     ; if R2 == R36 then PC := 206
203 [-]: JMP       206          ; PC := 206
204 [-]: EQ        0 R22 R21    ; if R22 ~= R21 then PC := 208
205 [-]: JMP       208          ; PC := 208
206 [-]: LEN       R36 R29      ; R36 := # R29
207 [-]: ADD       R35 R36 K35  ; R35 := R36 + 1.000000
208 [-]: EQ        1 R26 K3     ; if R26 == nil then PC := 254
209 [-]: JMP       254          ; PC := 254
210 [-]: GETGLOBAL R36 K23      ; R36 := 0x33bdd652
211 [-]: GETTABLE  R36 R36 K24  ; R82 := R36[0x23d5322f]
212 [-]: MOVE      R37 R29      ; R37 := R29
213 [-]: GETGLOBAL R38 K52      ; R38 := 0x7f5022cf
214 [-]: GETTABLE  R38 R38 K53  ; R82 := R38[0xe8072ded]
215 [-]: MOVE      R39 R30      ; R39 := R30
216 [-]: MOVE      R40 R27      ; R40 := R27
217 [-]: CALL      R38 3 0      ; R38,... := R38(R39,R40)
218 [-]: CALL      R36 0 1      ; R36(R37,...)
219 [-]: GETGLOBAL R36 K23      ; R36 := 0x33bdd652
220 [-]: GETTABLE  R36 R36 K24  ; R82 := R36[0x23d5322f]
221 [-]: MOVE      R37 R29      ; R37 := R29
222 [-]: MOVE      R38 R25      ; R38 := R25
223 [-]: LOADK     R39 K54      ; R39 := "|"
224 [-]: GETGLOBAL R40 K55      ; R40 := 0x64fb1586
225 [-]: MOVE      R41 R22      ; R41 := R22
226 [-]: CALL      R40 2 2      ; R40 := R40(R41)
227 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
228 [-]: CALL      R36 3 1      ; R36(R37,R38)
229 [-]: GETGLOBAL R36 K23      ; R36 := 0x33bdd652
230 [-]: GETTABLE  R36 R36 K24  ; R82 := R36[0x23d5322f]
231 [-]: MOVE      R37 R29      ; R37 := R29
232 [-]: LOADK     R38 K56      ; R38 := "\">"
233 [-]: CALL      R36 3 1      ; R36(R37,R38)
234 [-]: GETGLOBAL R36 K23      ; R36 := 0x33bdd652
235 [-]: GETTABLE  R36 R36 K24  ; R82 := R36[0x23d5322f]
236 [-]: MOVE      R37 R29      ; R37 := R29
237 [-]: MOVE      R38 R25      ; R38 := R25
238 [-]: CALL      R36 3 1      ; R36(R37,R38)
239 [-]: GETGLOBAL R36 K23      ; R36 := 0x33bdd652
240 [-]: GETTABLE  R36 R36 K24  ; R82 := R36[0x23d5322f]
241 [-]: MOVE      R37 R29      ; R37 := R29
242 [-]: GETGLOBAL R38 K52      ; R38 := 0x7f5022cf
243 [-]: GETTABLE  R38 R38 K53  ; R82 := R38[0xe8072ded]
244 [-]: MOVE      R39 R31      ; R39 := R31
245 [-]: MOVE      R40 R28      ; R40 := R28
246 [-]: CALL      R38 3 0      ; R38,... := R38(R39,R40)
247 [-]: CALL      R36 0 1      ; R36(R37,...)
248 [-]: GETGLOBAL R36 K23      ; R36 := 0x33bdd652
249 [-]: GETTABLE  R36 R36 K24  ; R82 := R36[0x23d5322f]
250 [-]: MOVE      R37 R29      ; R37 := R29
251 [-]: MOVE      R38 R26      ; R38 := R26
252 [-]: CALL      R36 3 1      ; R36(R37,R38)
253 [-]: JMP       289          ; PC := 289
254 [-]: GETTABLE  R36 R34 K22  ; R36 := R34["messageType"]
255 [-]: GETTABLE  R37 R0 K57   ; R37 := R0["MESSAGE_TYPE_SYSTEM"]
256 [-]: EQ        1 R36 R37    ; if R36 == R37 then PC := 266
257 [-]: JMP       266          ; PC := 266
258 [-]: GETTABLE  R36 R34 K22  ; R36 := R34["messageType"]
259 [-]: GETTABLE  R37 R0 K58   ; R37 := R0["MESSAGE_TYPE_BROADCAST"]
260 [-]: EQ        1 R36 R37    ; if R36 == R37 then PC := 266
261 [-]: JMP       266          ; PC := 266
262 [-]: GETTABLE  R36 R34 K22  ; R36 := R34["messageType"]
263 [-]: GETTABLE  R37 R0 K59   ; R37 := R0["MESSAGE_TYPE_NOTIFICATION"]
264 [-]: EQ        0 R36 R37    ; if R36 ~= R37 then PC := 284
265 [-]: JMP       284          ; PC := 284
266 [-]: GETTABLE  R36 R34 K49  ; R36 := R34["firstLine"]
267 [-]: TEST      R36 0        ; if not R36 then PC := 278
268 [-]: JMP       278          ; PC := 278
269 [-]: GETGLOBAL R36 K23      ; R36 := 0x33bdd652
270 [-]: GETTABLE  R36 R36 K24  ; R82 := R36[0x23d5322f]
271 [-]: MOVE      R37 R29      ; R37 := R29
272 [-]: GETGLOBAL R38 K52      ; R38 := 0x7f5022cf
273 [-]: GETTABLE  R38 R38 K53  ; R82 := R38[0xe8072ded]
274 [-]: MOVE      R39 R32      ; R39 := R32
275 [-]: MOVE      R40 R27      ; R40 := R27
276 [-]: CALL      R38 3 0      ; R38,... := R38(R39,R40)
277 [-]: CALL      R36 0 1      ; R36(R37,...)
278 [-]: GETGLOBAL R36 K23      ; R36 := 0x33bdd652
279 [-]: GETTABLE  R36 R36 K24  ; R82 := R36[0x23d5322f]
280 [-]: MOVE      R37 R29      ; R37 := R29
281 [-]: MOVE      R38 R25      ; R38 := R25
282 [-]: CALL      R36 3 1      ; R36(R37,R38)
283 [-]: JMP       289          ; PC := 289
284 [-]: GETGLOBAL R36 K23      ; R36 := 0x33bdd652
285 [-]: GETTABLE  R36 R36 K24  ; R82 := R36[0x23d5322f]
286 [-]: MOVE      R37 R29      ; R37 := R29
287 [-]: MOVE      R38 R25      ; R38 := R25
288 [-]: CALL      R36 3 1      ; R36(R37,R38)
289 [-]: GETGLOBAL R36 K60      ; R36 := 0x7b998233
290 [-]: MOVE      R37 R35      ; R37 := R35
291 [-]: CALL      R36 2 2      ; R36 := R36(R37)
292 [-]: TEST      R36 1        ; if R36 then PC := 342
293 [-]: JMP       342          ; PC := 342
294 [-]: OP_LOADBOOL R36 0 0      ; R36 := false
295 [-]: CONST     R37 0        ; R37 := 0.000000
296 [-]: CONST     R38 0        ; R38 := 0.000000
297 [-]: MOVE      R39 R35      ; R39 := R35
298 [-]: LEN       R40 R29      ; R40 := # R29
299 [-]: CONST     R41 1        ; R41 := 1.000000
300 [-]: FORPREP   R39 333      ; R39 -= R41; PC := 333
301 [-]: GETTABLE  R43 R29 R42  ; R43 := R29[R42]
302 [-]: TEST      R36 1        ; if R36 then PC := 321
303 [-]: JMP       321          ; PC := 321
304 [-]: SELF      R44 R43 K61  ; R45 := R43; R44 := R43[0xa5c556b9]
305 [-]: LOADK     R46 K62      ; R46 := "</a>"
306 [-]: CALL      R44 3 2      ; R44 := R44(R45,R46)
307 [-]: EQ        1 R44 K3     ; if R44 == nil then PC := 315
308 [-]: JMP       315          ; PC := 315
309 [-]: SELF      R45 R43 K63  ; R46 := R43; R45 := R43[0x1a94c9cc]
310 [-]: ADD       R47 R44 K64  ; R47 := R44 + 4.000000
311 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
312 [-]: MOVE      R43 R45      ; R43 := R45
313 [-]: OP_LOADBOOL R36 1 0      ; R36 := true
314 [-]: JMP       321          ; PC := 321
315 [-]: SELF      R45 R43 K61  ; R46 := R43; R45 := R43[0xa5c556b9]
316 [-]: LOADK     R47 K65      ; R47 := "<a"
317 [-]: CALL      R45 3 2      ; R45 := R45(R46,R47)
318 [-]: TEST      R45 0        ; if not R45 then PC := 321
319 [-]: JMP       321          ; PC := 321
320 [-]: OP_LOADBOOL R36 1 0      ; R36 := true
321 [-]: TEST      R36 0        ; if not R36 then PC := 333
322 [-]: JMP       333          ; PC := 333
323 [-]: SELF      R45 R43 K66  ; R46 := R43; R45 := R43[0x66edf04f]
324 [-]: LOADK     R47 K65      ; R47 := "<a"
325 [-]: LOADK     R48 K1       ; R48 := ""
326 [-]: CALL      R45 4 3      ; R45,R46 := R45(R46,R47,R48)
327 [-]: SELF      R47 R43 K66  ; R48 := R43; R47 := R43[0x66edf04f]
328 [-]: LOADK     R49 K67      ; R49 := "</a"
329 [-]: LOADK     R50 K1       ; R50 := ""
330 [-]: CALL      R47 4 3      ; R47,R48 := R47(R48,R49,R50)
331 [-]: ADD       R37 R37 R46  ; R37 := R37 + R46
332 [-]: ADD       R38 R38 R48  ; R38 := R38 + R48
333 [-]: FORLOOP   R39 301      ; R39 += R41; if R39 <= R40 then begin PC := 301; R42 := R39 end
334 [-]: LT        0 R38 R37    ; if R38 >= R37 then PC := 434
335 [-]: JMP       434          ; PC := 434
336 [-]: GETGLOBAL R49 K23      ; R49 := 0x33bdd652
337 [-]: GETTABLE  R49 R49 K24  ; R82 := R49[0x23d5322f]
338 [-]: MOVE      R50 R29      ; R50 := R29
339 [-]: LOADK     R51 K62      ; R51 := "</a>"
340 [-]: CALL      R49 3 1      ; R49(R50,R51)
341 [-]: JMP       434          ; PC := 434
342 [-]: EQ        0 R2 K5      ; if R2 ~= 0.000000 then PC := 434
343 [-]: JMP       434          ; PC := 434
344 [-]: EQ        0 R26 K3     ; if R26 ~= nil then PC := 434
345 [-]: JMP       434          ; PC := 434
346 [-]: SELF      R49 R25 K61  ; R50 := R25; R49 := R25[0xa5c556b9]
347 [-]: LOADK     R51 K65      ; R51 := "<a"
348 [-]: CALL      R49 3 2      ; R49 := R49(R50,R51)
349 [-]: SELF      R50 R25 K61  ; R51 := R25; R50 := R25[0xa5c556b9]
350 [-]: LOADK     R52 K67      ; R52 := "</a"
351 [-]: CALL      R50 3 2      ; R50 := R50(R51,R52)
352 [-]: OP_LOADBOOL R51 1 0      ; R51 := true
353 [-]: SELF      R52 R25 K66  ; R53 := R25; R52 := R25[0x66edf04f]
354 [-]: LOADK     R54 K65      ; R54 := "<a"
355 [-]: LOADK     R55 K1       ; R55 := ""
356 [-]: CALL      R52 4 3      ; R52,R53 := R52(R53,R54,R55)
357 [-]: SELF      R54 R25 K66  ; R55 := R25; R54 := R25[0x66edf04f]
358 [-]: LOADK     R56 K67      ; R56 := "</a"
359 [-]: LOADK     R57 K1       ; R57 := ""
360 [-]: CALL      R54 4 3      ; R54,R55 := R54(R55,R56,R57)
361 [-]: EQ        0 R53 R55    ; if R53 ~= R55 then PC := 371
362 [-]: JMP       371          ; PC := 371
363 [-]: EQ        1 R49 K3     ; if R49 == nil then PC := 371
364 [-]: JMP       371          ; PC := 371
365 [-]: EQ        1 R50 K3     ; if R50 == nil then PC := 371
366 [-]: JMP       371          ; PC := 371
367 [-]: LT        1 R49 R50    ; if R49 < R50 then PC := 370
368 [-]: JMP       370          ; PC := 370
369 [-]: OP_LOADBOOL R51 0 1      ; R51 := false; PC := 370
370 [-]: OP_LOADBOOL R51 1 0      ; R51 := true
371 [-]: TEST      R51 0        ; if not R51 then PC := 375
372 [-]: JMP       375          ; PC := 375
373 [-]: LT        0 R53 R55    ; if R53 >= R55 then PC := 412
374 [-]: JMP       412          ; PC := 412
375 [-]: LT        0 K35 R22    ; if 1.000000 >= R22 then PC := 412
376 [-]: JMP       412          ; PC := 412
377 [-]: GETTABLE  R56 R0 K4    ; R56 := R0["mChatHistory"]
378 [-]: SUB       R57 R22 K35  ; R57 := R22 - 1.000000
379 [-]: GETTABLE  R56 R56 R57  ; R56 := R56[R57]
380 [-]: GETTABLE  R56 R56 K8   ; R56 := R56["text"]
381 [-]: LEN       R57 R56      ; R57 := # R56
382 [-]: LT        0 K5 R57     ; if 0.000000 >= R57 then PC := 434
383 [-]: JMP       434          ; PC := 434
384 [-]: LOADNIL   R57 R57      ; R57 := nil
385 [-]: CONST     R58 0        ; R58 := 0.000000
386 [-]: EQ        1 R58 K3     ; if R58 == nil then PC := 398
387 [-]: JMP       398          ; PC := 398
388 [-]: SELF      R59 R56 K61  ; R60 := R56; R59 := R56[0xa5c556b9]
389 [-]: LOADK     R61 K65      ; R61 := "<a"
390 [-]: MOVE      R62 R58      ; R62 := R58
391 [-]: CALL      R59 4 2      ; R59 := R59(R60,R61,R62)
392 [-]: MOVE      R58 R59      ; R58 := R59
393 [-]: EQ        1 R58 K3     ; if R58 == nil then PC := 386
394 [-]: JMP       386          ; PC := 386
395 [-]: MOVE      R57 R58      ; R57 := R58
396 [-]: ADD       R58 R58 K35  ; R58 := R58 + 1.000000
397 [-]: JMP       386          ; PC := 386
398 [-]: SELF      R59 R56 K61  ; R60 := R56; R59 := R56[0xa5c556b9]
399 [-]: LOADK     R61 K68      ; R61 := ">"
400 [-]: MOVE      R62 R57      ; R62 := R57
401 [-]: CALL      R59 4 2      ; R59 := R59(R60,R61,R62)
402 [-]: GETGLOBAL R60 K23      ; R60 := 0x33bdd652
403 [-]: GETTABLE  R60 R60 K24  ; R82 := R60[0x23d5322f]
404 [-]: MOVE      R61 R29      ; R61 := R29
405 [-]: LEN       R62 R29      ; R62 := # R29
406 [-]: SELF      R63 R56 K63  ; R64 := R56; R63 := R56[0x1a94c9cc]
407 [-]: MOVE      R65 R57      ; R65 := R57
408 [-]: MOVE      R66 R59      ; R66 := R59
409 [-]: CALL      R63 4 0      ; R63,... := R63(R64,R65,R66)
410 [-]: CALL      R60 0 1      ; R60(R61,...)
411 [-]: JMP       434          ; PC := 434
412 [-]: EQ        0 R22 K35    ; if R22 ~= 1.000000 then PC := 434
413 [-]: JMP       434          ; PC := 434
414 [-]: GETGLOBAL R60 K60      ; R60 := 0x7b998233
415 [-]: MOVE      R61 R50      ; R61 := R50
416 [-]: CALL      R60 2 2      ; R60 := R60(R61)
417 [-]: TEST      R60 1        ; if R60 then PC := 434
418 [-]: JMP       434          ; PC := 434
419 [-]: GETGLOBAL R60 K60      ; R60 := 0x7b998233
420 [-]: MOVE      R61 R49      ; R61 := R49
421 [-]: CALL      R60 2 2      ; R60 := R60(R61)
422 [-]: TEST      R60 1        ; if R60 then PC := 426
423 [-]: JMP       426          ; PC := 426
424 [-]: LT        0 R50 R49    ; if R50 >= R49 then PC := 434
425 [-]: JMP       434          ; PC := 434
426 [-]: GETGLOBAL R60 K52      ; R60 := 0x7f5022cf
427 [-]: GETTABLE  R60 R60 K66  ; R82 := R60[0x66edf04f]
428 [-]: GETTABLE  R61 R29 R22  ; R61 := R29[R22]
429 [-]: LOADK     R62 K62      ; R62 := "</a>"
430 [-]: LOADK     R63 K1       ; R63 := ""
431 [-]: CONST     R64 1        ; R64 := 1.000000
432 [-]: CALL      R60 5 2      ; R60 := R60(R61,R62,R63,R64)
433 [-]: SETTABLE  R29 R22 R60  ; R29[R22] := R60
434 [-]: ADD       R33 R33 K35  ; R33 := R33 + 1.000000
435 [-]: ADD       R2 R2 K35    ; R2 := R2 + 1.000000
436 [-]: ADD       R22 R22 K35  ; R22 := R22 + 1.000000
437 [-]: JMP       171          ; PC := 171
438 [-]: CONST     R60 1        ; R60 := 1.000000
439 [-]: MOVE      R61 R33      ; R61 := R33
440 [-]: CONST     R62 1        ; R62 := 1.000000
441 [-]: FORPREP   R60 447      ; R60 -= R62; PC := 447
442 [-]: GETGLOBAL R64 K23      ; R64 := 0x33bdd652
443 [-]: GETTABLE  R64 R64 K24  ; R82 := R64[0x23d5322f]
444 [-]: MOVE      R65 R29      ; R65 := R29
445 [-]: LOADK     R66 K69      ; R66 := "</font>"
446 [-]: CALL      R64 3 1      ; R64(R65,R66)
447 [-]: FORLOOP   R60 442      ; R60 += R62; if R60 <= R61 then begin PC := 442; R63 := R60 end
448 [-]: GETGLOBAL R64 K23      ; R64 := 0x33bdd652
449 [-]: GETTABLE  R64 R64 K70  ; R82 := R64[0x76960806]
450 [-]: MOVE      R65 R29      ; R65 := R29
451 [-]: CALL      R64 2 2      ; R64 := R64(R65)
452 [-]: MOVE      R3 R64       ; R3 := R64
453 [-]: LOADK     R64 K71      ; R64 := "<p><font >"
454 [-]: MOVE      R65 R3       ; R65 := R3
455 [-]: LOADK     R66 K72      ; R66 := "</font></p>"
456 [-]: CONCAT    R3 R64 R66   ; R3 := R64 .. R65 .. R66
457 [-]: GETGLOBAL R64 K16      ; R64 := 0xae91e43b
458 [-]: SELF      R64 R64 K73  ; R65 := R64; R64 := R64[0x5f56eeab]
459 [-]: GETTABLE  R66 R0 K30   ; R66 := R0["mClipPath"]
460 [-]: LOADK     R67 K31      ; R67 := ".ChatArea"
461 [-]: CONCAT    R66 R66 R67  ; R66 := R66 .. R67
462 [-]: CONST     R67 29       ; R67 := 29.000000
463 [-]: MOVE      R68 R3       ; R68 := R3
464 [-]: CALL      R64 5 1      ; R64(R65,R66,R67,R68)
465 [-]: GETTABLE  R64 R0 K34   ; R64 := R0["mMaxVisibleChatLines"]
466 [-]: GETTABLE  R65 R0 K4    ; R65 := R0["mChatHistory"]
467 [-]: LEN       R65 R65      ; R65 := # R65
468 [-]: DIV       R64 R64 R65  ; R64 := R64 / R65
469 [-]: LT        0 K5 R64     ; if 0.000000 >= R64 then PC := 473
470 [-]: JMP       473          ; PC := 473
471 [-]: LT        1 R64 K35    ; if R64 < 1.000000 then PC := 474
472 [-]: JMP       474          ; PC := 474
473 [-]: OP_LOADBOOL R65 0 1      ; R65 := false; PC := 474
474 [-]: OP_LOADBOOL R65 1 0      ; R65 := true
475 [-]: GETGLOBAL R66 K16      ; R66 := 0xae91e43b
476 [-]: SELF      R66 R66 K74  ; R67 := R66; R66 := R66[0xc0a3774b]
477 [-]: GETTABLE  R68 R0 K30   ; R68 := R0["mClipPath"]
478 [-]: LOADK     R69 K75      ; R69 := "ScrollBar.Scrub"
479 [-]: CONST     R70 11       ; R70 := 11.000000
480 [-]: MOVE      R71 R65      ; R71 := R65
481 [-]: CALL      R66 6 1      ; R66(R67,R68,R69,R70,R71)
482 [-]: GETGLOBAL R66 K16      ; R66 := 0xae91e43b
483 [-]: SELF      R66 R66 K76  ; R67 := R66; R66 := R66[0xf64b7262]
484 [-]: GETTABLE  R68 R0 K30   ; R68 := R0["mClipPath"]
485 [-]: LOADK     R69 K77      ; R69 := "ScrollBar"
486 [-]: CONST     R70 10       ; R70 := 10.000000
487 [-]: GETUPVAL  R71 U1       ; R71 := U1
488 [-]: GETTABLE  R71 R71 K13  ; R82 := R71[0x06d055f9]
489 [-]: MOVE      R72 R65      ; R72 := R65
490 [-]: CONST     R73 100      ; R73 := 100.000000
491 [-]: CONST     R74 50       ; R74 := 50.000000
492 [-]: CALL      R71 4 0      ; R71,... := R71(R72,R73,R74)
493 [-]: CALL      R66 0 1      ; R66(R67,...)
494 [-]: GETTABLE  R66 R20 K78  ; R66 := R20["height"]
495 [-]: EQ        1 R66 K3     ; if R66 == nil then PC := 502
496 [-]: JMP       502          ; PC := 502
497 [-]: GETTABLE  R66 R0 K79   ; R66 := R0["mTextScroll"]
498 [-]: SELF      R66 R66 K80  ; R67 := R66; R66 := R66[0x425b8f0d]
499 [-]: GETTABLE  R68 R20 K78  ; R68 := R20["height"]
500 [-]: ADD       R68 R68 K81  ; R68 := R68 + 5.000000
501 [-]: CALL      R66 3 1      ; R66(R67,R68)
502 [-]: RETURN    R0 1         ; return 


; Function #94.15:
;
; Name:            
; Defined at line: 5264
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: SETTABLE  R0 K0 K1     ; R0["mIsActive"] := false
  2 [-]: GETGLOBAL R1 K3        ; R1 := mWindow
  3 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mUserPanel"]
  4 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mListControl"]
  5 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xc704a9b7]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: SETTABLE  R0 K2 R1     ; R0["mStoredFocusIndex"] := R1
  8 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
  9 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mStoredFocusIndex"]
 10 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 11 [-]: TEST      R1 0         ; if not R1 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R1 K3        ; R1 := mWindow
 14 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mUserPanel"]
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mListControl"]
 16 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mScroll"]
 17 [-]: SETTABLE  R0 K2 R1     ; R0["mStoredFocusIndex"] := R1
 18 [-]: RETURN    R0 1         ; return 


; Function #94.16:
;
; Name:            
; Defined at line: 5273
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mIsActive"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: SETTABLE  R0 K0 K1     ; R0["mIsActive"] := true
  6 [-]: SELF      R2 R0 K2     ; R3 := R0; R2 := R0[0x3bd10f9e]
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mCachedLines"]
  9 [-]: LEN       R2 R2        ; R2 := # R2
 10 [-]: LT        0 K4 R2      ; if 0.000000 >= R2 then PC := 29
 11 [-]: JMP       29           ; PC := 29
 12 [-]: CONST     R3 1         ; R3 := 1.000000
 13 [-]: MOVE      R4 R2        ; R4 := R2
 14 [-]: CONST     R5 1         ; R5 := 1.000000
 15 [-]: FORPREP   R3 26        ; R3 -= R5; PC := 26
 16 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["mCachedLines"]
 17 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 18 [-]: SELF      R8 R0 K5     ; R9 := R0; R8 := R0[0x566ff49e]
 19 [-]: GETTABLE  R10 R7 K6    ; R10 := R7["Line"]
 20 [-]: GETTABLE  R11 R7 K7    ; R11 := R7["MsgType"]
 21 [-]: GETTABLE  R12 R7 K8    ; R12 := R7["TimeStamp"]
 22 [-]: OP_LOADBOOL R13 0 0      ; R13 := false
 23 [-]: OP_LOADBOOL R14 1 0      ; R14 := true
 24 [-]: GETTABLE  R15 R7 K9    ; R15 := R7["sender"]
 25 [-]: CALL      R8 8 1       ; R8(R9,R10,R11,R12,R13,R14,R15)
 26 [-]: FORLOOP   R3 16        ; R3 += R5; if R3 <= R4 then begin PC := 16; R6 := R3 end
 27 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 28 [-]: SETTABLE  R0 K3 R8     ; R0["mCachedLines"] := R8
 29 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mParent"]
 30 [-]: GETTABLE  R9 R0 K12    ; R9 := R0["mChannelType"]
 31 [-]: SETTABLE  R8 K11 R9    ; R8["mMode"] := R9
 32 [-]: SELF      R8 R0 K13    ; R9 := R0; R8 := R0[0x085abf92]
 33 [-]: CALL      R8 2 1       ; R8(R9)
 34 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mParent"]
 35 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["mTabMenu"]
 36 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8[0x0ba91236]
 37 [-]: GETTABLE  R10 R0 K16   ; R10 := R0["mTabElement"]
 38 [-]: CALL      R8 3 1       ; R8(R9,R10)
 39 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mParent"]
 40 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["mVisualMode"]
 41 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mParent"]
 42 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["VISUAL_MODE_MENU_SIMPLE"]
 43 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 72
 44 [-]: JMP       72           ; PC := 72
 45 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mParent"]
 46 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["mVisualMode"]
 47 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mParent"]
 48 [-]: GETTABLE  R9 R9 K19    ; R9 := R9["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 49 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 72
 50 [-]: JMP       72           ; PC := 72
 51 [-]: GETTABLE  R8 R0 K20    ; R8 := R0["mIsChatEnabled"]
 52 [-]: TEST      R8 0         ; if not R8 then PC := 72
 53 [-]: JMP       72           ; PC := 72
 54 [-]: GETGLOBAL R8 K21       ; R8 := 0x34291f5c
 55 [-]: GETTABLE  R8 R8 K22    ; R82 := R8[0x056bfe8b]
 56 [-]: CALL      R8 1 2       ; R8 := R8()
 57 [-]: TEST      R8 0         ; if not R8 then PC := 63
 58 [-]: JMP       63           ; PC := 63
 59 [-]: GETUPVAL  R8 U0        ; R8 := U0
 60 [-]: CALL      R8 1 2       ; R8 := R8()
 61 [-]: TEST      R8 1         ; if R8 then PC := 72
 62 [-]: JMP       72           ; PC := 72
 63 [-]: GETGLOBAL R8 K23       ; R8 := 0xae91e43b
 64 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8[0xc0a3774b]
 65 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["mParent"]
 66 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mClipName"]
 67 [-]: LOADK     R11 K26      ; R11 := "SendMessageBar"
 68 [-]: CONST     R12 11       ; R12 := 11.000000
 69 [-]: OP_LOADBOOL R13 1 0      ; R13 := true
 70 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 71 [-]: JMP       80           ; PC := 80
 72 [-]: GETGLOBAL R8 K23       ; R8 := 0xae91e43b
 73 [-]: SELF      R8 R8 K24    ; R9 := R8; R8 := R8[0xc0a3774b]
 74 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["mParent"]
 75 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mClipName"]
 76 [-]: LOADK     R11 K26      ; R11 := "SendMessageBar"
 77 [-]: CONST     R12 11       ; R12 := 11.000000
 78 [-]: OP_LOADBOOL R13 0 0      ; R13 := false
 79 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 80 [-]: GETGLOBAL R8 K21       ; R8 := 0x34291f5c
 81 [-]: GETTABLE  R8 R8 K27    ; R82 := R8[0x1467d5f4]
 82 [-]: CALL      R8 1 2       ; R8 := R8()
 83 [-]: TEST      R8 1         ; if R8 then PC := 114
 84 [-]: JMP       114          ; PC := 114
 85 [-]: GETGLOBAL R8 K21       ; R8 := 0x34291f5c
 86 [-]: GETTABLE  R8 R8 K28    ; R82 := R8[0xe6b41adb]
 87 [-]: CALL      R8 1 2       ; R8 := R8()
 88 [-]: TEST      R8 1         ; if R8 then PC := 114
 89 [-]: JMP       114          ; PC := 114
 90 [-]: GETGLOBAL R8 K21       ; R8 := 0x34291f5c
 91 [-]: GETTABLE  R8 R8 K29    ; R82 := R8[0x399826a5]
 92 [-]: CALL      R8 1 2       ; R8 := R8()
 93 [-]: TEST      R8 1         ; if R8 then PC := 114
 94 [-]: JMP       114          ; PC := 114
 95 [-]: GETGLOBAL R8 K30       ; R8 := 0x7b998233
 96 [-]: GETGLOBAL R9 K31       ; R9 := mWindow
 97 [-]: GETTABLE  R9 R9 K32    ; R9 := R9["mInputPanel"]
 98 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 99 [-]: TEST      R8 1         ; if R8 then PC := 114
100 [-]: JMP       114          ; PC := 114
101 [-]: GETGLOBAL R8 K23       ; R8 := 0xae91e43b
102 [-]: SELF      R8 R8 K33    ; R9 := R8; R8 := R8[0x5b0290d2]
103 [-]: GETGLOBAL R10 K31      ; R10 := mWindow
104 [-]: GETTABLE  R10 R10 K32  ; R10 := R10["mInputPanel"]
105 [-]: GETTABLE  R10 R10 K34  ; R10 := R10["mClipPath"]
106 [-]: CONST     R11 11       ; R11 := 11.000000
107 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
108 [-]: TEST      R8 0         ; if not R8 then PC := 114
109 [-]: JMP       114          ; PC := 114
110 [-]: GETGLOBAL R8 K31       ; R8 := mWindow
111 [-]: GETTABLE  R8 R8 K32    ; R8 := R8["mInputPanel"]
112 [-]: SELF      R8 R8 K35    ; R9 := R8; R8 := R8[0x8a543a3f]
113 [-]: CALL      R8 2 1       ; R8(R9)
114 [-]: SELF      R8 R0 K36    ; R9 := R0; R8 := R0[0x5e63828f]
115 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
116 [-]: CALL      R8 3 1       ; R8(R9,R10)
117 [-]: RETURN    R0 1         ; return 


; Function #94.17:
;
; Name:            
; Defined at line: 5315
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: NEWTABLE  R2 2 0       ; R2 := {}
  2 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mLineLog"]
  3 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mCachedLines"]
  4 [-]: SETLIST   R2 2 1       ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 2
  5 [-]: CONST     R3 1         ; R3 := 1.000000
  6 [-]: LEN       R4 R2        ; R4 := # R2
  7 [-]: CONST     R5 1         ; R5 := 1.000000
  8 [-]: FORPREP   R3 36        ; R3 -= R5; PC := 36
  9 [-]: GETTABLE  R7 R2 R6     ; R7 := R2[R6]
 10 [-]: EQ        1 R7 K2      ; if R7 == nil then PC := 36
 11 [-]: JMP       36           ; PC := 36
 12 [-]: CONST     R7 1         ; R7 := 1.000000
 13 [-]: GETTABLE  R8 R2 R6     ; R8 := R2[R6]
 14 [-]: LEN       R9 R8        ; R9 := # R8
 15 [-]: LE        0 R7 R9      ; if R7 > R9 then PC := 36
 16 [-]: JMP       36           ; PC := 36
 17 [-]: GETGLOBAL R9 K3        ; R9 := 0xce225efa
 18 [-]: CONST     R10 0        ; R10 := 0.000000
 19 [-]: CALL      R9 2 1       ; R9(R10)
 20 [-]: GETTABLE  R9 R8 R7     ; R9 := R8[R7]
 21 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["sender"]
 22 [-]: EQ        1 R9 K2      ; if R9 == nil then PC := 34
 23 [-]: JMP       34           ; PC := 34
 24 [-]: GETTABLE  R9 R8 R7     ; R9 := R8[R7]
 25 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["sender"]
 26 [-]: EQ        0 R9 R1      ; if R9 ~= R1 then PC := 34
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R9 K5        ; R9 := 0x33bdd652
 29 [-]: GETTABLE  R9 R9 K6     ; R82 := R9[0x9c1f3b5a]
 30 [-]: MOVE      R10 R8       ; R10 := R8
 31 [-]: MOVE      R11 R7       ; R11 := R7
 32 [-]: CALL      R9 3 1       ; R9(R10,R11)
 33 [-]: JMP       14           ; PC := 14
 34 [-]: ADD       R7 R7 K7     ; R7 := R7 + 1.000000
 35 [-]: JMP       14           ; PC := 14
 36 [-]: FORLOOP   R3 9         ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
 37 [-]: SELF      R9 R0 K8     ; R10 := R0; R9 := R0[0xe176d731]
 38 [-]: CALL      R9 2 1       ; R9(R10)
 39 [-]: GETTABLE  R9 R0 K9     ; R9 := R0["mIsActive"]
 40 [-]: TEST      R9 0         ; if not R9 then PC := 44
 41 [-]: JMP       44           ; PC := 44
 42 [-]: SELF      R9 R0 K10    ; R10 := R0; R9 := R0[0x3bd10f9e]
 43 [-]: CALL      R9 2 1       ; R9(R10)
 44 [-]: RETURN    R0 1         ; return 


; Function #94.18:
;
; Name:            
; Defined at line: 5339
; #Upvalues:       3
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mIsChatEnabled"]
  2 [-]: TEST      R7 0         ; if not R7 then PC := 16
  3 [-]: JMP       16           ; PC := 16
  4 [-]: GETGLOBAL R7 K1        ; R7 := 0x34291f5c
  5 [-]: GETTABLE  R7 R7 K2     ; R82 := R7[0x056bfe8b]
  6 [-]: CALL      R7 1 2       ; R7 := R7()
  7 [-]: TEST      R7 0         ; if not R7 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETUPVAL  R7 U0        ; R7 := U0
 10 [-]: CALL      R7 1 2       ; R7 := R7()
 11 [-]: TEST      R7 0         ; if not R7 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["MESSAGE_TYPE_BROADCAST"]
 14 [-]: EQ        1 R2 R7      ; if R2 == R7 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: EQ        0 R2 K4      ; if R2 ~= nil then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["MESSAGE_TYPE_INVALID"]
 20 [-]: GETTABLE  R7 R0 K6     ; R7 := R0["MESSAGE_TYPE_JOIN_CHANNEL"]
 21 [-]: EQ        1 R2 R7      ; if R2 == R7 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETTABLE  R7 R0 K7     ; R7 := R0["MESSAGE_TYPE_LEAVE_CHANNEL"]
 24 [-]: EQ        0 R2 R7      ; if R2 ~= R7 then PC := 27
 25 [-]: JMP       27           ; PC := 27
 26 [-]: RETURN    R0 1         ; return 
 27 [-]: TEST      R5 1         ; if R5 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: SETTABLE  R0 K8 K9     ; R0["mCanFlash"] := true
 30 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["mIsActive"]
 31 [-]: TEST      R7 0         ; if not R7 then PC := 39
 32 [-]: JMP       39           ; PC := 39
 33 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["mParent"]
 34 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["mVisualMode"]
 35 [-]: GETTABLE  R8 R0 K11    ; R8 := R0["mParent"]
 36 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["VISUAL_MODE_MENU_SIMPLE"]
 37 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 102
 38 [-]: JMP       102          ; PC := 102
 39 [-]: GETTABLE  R7 R0 K14    ; R7 := R0["MESSAGE_TYPE_SYSTEM"]
 40 [-]: EQ        1 R2 R7      ; if R2 == R7 then PC := 102
 41 [-]: JMP       102          ; PC := 102
 42 [-]: GETTABLE  R7 R0 K3     ; R7 := R0["MESSAGE_TYPE_BROADCAST"]
 43 [-]: EQ        1 R2 R7      ; if R2 == R7 then PC := 102
 44 [-]: JMP       102          ; PC := 102
 45 [-]: GETGLOBAL R7 K15       ; R7 := 0x7b998233
 46 [-]: GETTABLE  R8 R0 K16    ; R8 := R0["mTabElement"]
 47 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 48 [-]: TEST      R7 1         ; if R7 then PC := 102
 49 [-]: JMP       102          ; PC := 102
 50 [-]: GETTABLE  R7 R0 K17    ; R7 := R0["mIsFlashingEnabled"]
 51 [-]: TEST      R7 0         ; if not R7 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["mParent"]
 54 [-]: GETTABLE  R7 R7 K18    ; R7 := R7["mTabMenu"]
 55 [-]: SELF      R7 R7 K19    ; R8 := R7; R7 := R7[0x4e65573c]
 56 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["mTabElement"]
 57 [-]: CALL      R7 3 1       ; R7(R8,R9)
 58 [-]: GETTABLE  R7 R0 K20    ; R7 := R0["MESSAGE_TYPE_FRIEND"]
 59 [-]: EQ        1 R2 R7      ; if R2 == R7 then PC := 102
 60 [-]: JMP       102          ; PC := 102
 61 [-]: GETGLOBAL R7 K21       ; R7 := 0x7f5022cf
 62 [-]: GETTABLE  R7 R7 K22    ; R82 := R7[0x04981ab3]
 63 [-]: MOVE      R8 R1        ; R8 := R1
 64 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 65 [-]: GETGLOBAL R8 K21       ; R8 := 0x7f5022cf
 66 [-]: GETTABLE  R8 R8 K23    ; R82 := R8[0xa5c556b9]
 67 [-]: MOVE      R9 R7        ; R9 := R7
 68 [-]: GETTABLE  R10 R0 K11   ; R10 := R0["mParent"]
 69 [-]: GETTABLE  R10 R10 K24  ; R10 := R10["mSearchUserName"]
 70 [-]: CONST     R11 0        ; R11 := 0.000000
 71 [-]: OP_LOADBOOL R12 1 0      ; R12 := true
 72 [-]: CALL      R8 5 3       ; R8,R9 := R8(R9,R10,R11,R12)
 73 [-]: EQ        1 R8 K4      ; if R8 == nil then PC := 102
 74 [-]: JMP       102          ; PC := 102
 75 [-]: GETGLOBAL R10 K21      ; R10 := 0x7f5022cf
 76 [-]: GETTABLE  R10 R10 K23  ; R82 := R10[0xa5c556b9]
 77 [-]: MOVE      R11 R7       ; R11 := R7
 78 [-]: LOADK     R12 K25      ; R12 := "^[^%s%p]"
 79 [-]: ADD       R13 R9 K26   ; R13 := R9 + 1.000000
 80 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 81 [-]: EQ        0 R10 K4     ; if R10 ~= nil then PC := 102
 82 [-]: JMP       102          ; PC := 102
 83 [-]: GETGLOBAL R10 K27      ; R10 := mMuteNotificationSounds
 84 [-]: TEST      R10 1        ; if R10 then PC := 97
 85 [-]: JMP       97           ; PC := 97
 86 [-]: GETGLOBAL R10 K15      ; R10 := 0x7b998233
 87 [-]: GETGLOBAL R11 K28      ; R11 := 0x0032441c
 88 [-]: GETTABLE  R11 R11 K29  ; R11 := R11["UISound_ChatDM"]
 89 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 90 [-]: TEST      R10 1        ; if R10 then PC := 97
 91 [-]: JMP       97           ; PC := 97
 92 [-]: GETUPVAL  R10 U1       ; R10 := U1
 93 [-]: GETTABLE  R10 R10 K30  ; R82 := R10[0x659d451f]
 94 [-]: GETGLOBAL R11 K28      ; R11 := 0x0032441c
 95 [-]: GETTABLE  R11 R11 K29  ; R11 := R11["UISound_ChatDM"]
 96 [-]: CALL      R10 2 1      ; R10(R11)
 97 [-]: GETTABLE  R10 R0 K11   ; R10 := R0["mParent"]
 98 [-]: GETTABLE  R10 R10 K18  ; R10 := R10["mTabMenu"]
 99 [-]: SELF      R10 R10 K31  ; R11 := R10; R10 := R10[0xe9bda48c]
100 [-]: GETTABLE  R12 R0 K16   ; R12 := R0["mTabElement"]
101 [-]: CALL      R10 3 1      ; R10(R11,R12)
102 [-]: GETTABLE  R10 R0 K10   ; R10 := R0["mIsActive"]
103 [-]: TEST      R10 1        ; if R10 then PC := 117
104 [-]: JMP       117          ; PC := 117
105 [-]: NEWTABLE  R10 0 4      ; R10 := {}
106 [-]: SETTABLE  R10 K32 R1   ; R10["Line"] := R1
107 [-]: SETTABLE  R10 K33 R2   ; R10["MsgType"] := R2
108 [-]: SETTABLE  R10 K34 R3   ; R10["TimeStamp"] := R3
109 [-]: SETTABLE  R10 K35 R6   ; R10["sender"] := R6
110 [-]: GETTABLE  R11 R0 K36   ; R11 := R0["mCachedLines"]
111 [-]: GETTABLE  R12 R0 K36   ; R12 := R0["mCachedLines"]
112 [-]: LEN       R12 R12      ; R12 := # R12
113 [-]: ADD       R12 R12 K26  ; R12 := R12 + 1.000000
114 [-]: SETTABLE  R11 R12 R10  ; R11[R12] := R10
115 [-]: RETURN    R0 1         ; return 
116 [-]: JMP       122          ; PC := 122
117 [-]: TEST      R5 1         ; if R5 then PC := 122
118 [-]: JMP       122          ; PC := 122
119 [-]: GETTABLE  R11 R0 K11   ; R11 := R0["mParent"]
120 [-]: SELF      R11 R11 K37  ; R12 := R11; R11 := R11[0x3914d936]
121 [-]: CALL      R11 2 1      ; R11(R12)
122 [-]: GETTABLE  R11 R0 K38   ; R11 := R0["mLineLog"]
123 [-]: EQ        0 R11 K4     ; if R11 ~= nil then PC := 127
124 [-]: JMP       127          ; PC := 127
125 [-]: NEWTABLE  R11 0 0      ; R11 := {}
126 [-]: SETTABLE  R0 K38 R11   ; R0["mLineLog"] := R11
127 [-]: GETTABLE  R11 R0 K38   ; R11 := R0["mLineLog"]
128 [-]: LEN       R11 R11      ; R11 := # R11
129 [-]: GETTABLE  R12 R0 K39   ; R12 := R0["mMaxChatHistory"]
130 [-]: LT        0 R12 R11    ; if R12 >= R11 then PC := 138
131 [-]: JMP       138          ; PC := 138
132 [-]: GETGLOBAL R11 K40      ; R11 := 0x33bdd652
133 [-]: GETTABLE  R11 R11 K41  ; R82 := R11[0x9c1f3b5a]
134 [-]: GETTABLE  R12 R0 K38   ; R12 := R0["mLineLog"]
135 [-]: CONST     R13 1        ; R13 := 1.000000
136 [-]: CALL      R11 3 1      ; R11(R12,R13)
137 [-]: JMP       127          ; PC := 127
138 [-]: GETTABLE  R11 R0 K38   ; R11 := R0["mLineLog"]
139 [-]: LEN       R11 R11      ; R11 := # R11
140 [-]: ADD       R11 R11 K26  ; R11 := R11 + 1.000000
141 [-]: GETTABLE  R12 R0 K38   ; R12 := R0["mLineLog"]
142 [-]: NEWTABLE  R13 0 5      ; R13 := {}
143 [-]: SETTABLE  R13 K42 R1   ; R13["text"] := R1
144 [-]: SETTABLE  R13 K43 R2   ; R13["messageType"] := R2
145 [-]: SETTABLE  R13 K44 R3   ; R13["timeStamp"] := R3
146 [-]: SETTABLE  R13 K35 R6   ; R13["sender"] := R6
147 [-]: NEWTABLE  R14 0 0      ; R14 := {}
148 [-]: SETTABLE  R13 K45 R14  ; R13["hyperLinks"] := R14
149 [-]: SETTABLE  R12 R11 R13  ; R12[R11] := R13
150 [-]: GETUPVAL  R12 U1       ; R12 := U1
151 [-]: GETTABLE  R12 R12 K46  ; R82 := R12[0x06d055f9]
152 [-]: GETGLOBAL R13 K47      ; R13 := mEmojiSettings
153 [-]: GETTABLE  R13 R13 K48  ; R13 := R13["Enabled"]
154 [-]: GETGLOBAL R14 K49      ; R14 := 0xae91e43b
155 [-]: SELF      R14 R14 K50  ; R15 := R14; R14 := R14[0xdca61cfa]
156 [-]: MOVE      R16 R1       ; R16 := R1
157 [-]: OP_LOADBOOL R17 1 0      ; R17 := true
158 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
159 [-]: MOVE      R15 R1       ; R15 := R1
160 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
161 [-]: MOVE      R1 R12       ; R1 := R12
162 [-]: GETTABLE  R12 R0 K11   ; R12 := R0["mParent"]
163 [-]: GETTABLE  R12 R12 K51  ; R12 := R12["mShowTimeStamps"]
164 [-]: EQ        1 R12 K4     ; if R12 == nil then PC := 173
165 [-]: JMP       173          ; PC := 173
166 [-]: GETTABLE  R12 R0 K11   ; R12 := R0["mParent"]
167 [-]: GETTABLE  R12 R12 K51  ; R12 := R12["mShowTimeStamps"]
168 [-]: TEST      R12 0        ; if not R12 then PC := 173
169 [-]: JMP       173          ; PC := 173
170 [-]: MOVE      R12 R3       ; R12 := R3
171 [-]: MOVE      R13 R1       ; R13 := R1
172 [-]: CONCAT    R1 R12 R13   ; R1 := R12 .. R13
173 [-]: SELF      R12 R0 K52   ; R13 := R0; R12 := R0[0x0d2baf85]
174 [-]: MOVE      R14 R1       ; R14 := R1
175 [-]: MOVE      R15 R2       ; R15 := R2
176 [-]: MOVE      R16 R6       ; R16 := R6
177 [-]: CALL      R12 5 2      ; R12 := R12(R13,R14,R15,R16)
178 [-]: GETTABLE  R13 R0 K53   ; R13 := R0["mChatHistory"]
179 [-]: LEN       R13 R13      ; R13 := # R13
180 [-]: LEN       R14 R12      ; R14 := # R12
181 [-]: ADD       R13 R13 R14  ; R13 := R13 + R14
182 [-]: GETTABLE  R14 R0 K39   ; R14 := R0["mMaxChatHistory"]
183 [-]: LT        0 R14 R13    ; if R14 >= R13 then PC := 191
184 [-]: JMP       191          ; PC := 191
185 [-]: GETGLOBAL R13 K40      ; R13 := 0x33bdd652
186 [-]: GETTABLE  R13 R13 K41  ; R82 := R13[0x9c1f3b5a]
187 [-]: GETTABLE  R14 R0 K53   ; R14 := R0["mChatHistory"]
188 [-]: CONST     R15 1        ; R15 := 1.000000
189 [-]: CALL      R13 3 1      ; R13(R14,R15)
190 [-]: JMP       178          ; PC := 178
191 [-]: CONST     R13 1        ; R13 := 1.000000
192 [-]: LEN       R14 R12      ; R14 := # R12
193 [-]: CONST     R15 1        ; R15 := 1.000000
194 [-]: FORPREP   R13 220      ; R13 -= R15; PC := 220
195 [-]: GETTABLE  R17 R12 R16  ; R17 := R12[R16]
196 [-]: GETTABLE  R17 R17 K42  ; R17 := R17["text"]
197 [-]: EQ        1 R17 K54    ; if R17 == "" then PC := 220
198 [-]: JMP       220          ; PC := 220
199 [-]: GETGLOBAL R17 K40      ; R17 := 0x33bdd652
200 [-]: GETTABLE  R17 R17 K55  ; R82 := R17[0x23d5322f]
201 [-]: GETTABLE  R18 R0 K53   ; R18 := R0["mChatHistory"]
202 [-]: GETTABLE  R19 R12 R16  ; R19 := R12[R16]
203 [-]: CALL      R17 3 1      ; R17(R18,R19)
204 [-]: CONST     R17 1        ; R17 := 1.000000
205 [-]: GETTABLE  R18 R12 R16  ; R18 := R12[R16]
206 [-]: GETTABLE  R18 R18 K45  ; R18 := R18["hyperLinks"]
207 [-]: LEN       R18 R18      ; R18 := # R18
208 [-]: CONST     R19 1        ; R19 := 1.000000
209 [-]: FORPREP   R17 219      ; R17 -= R19; PC := 219
210 [-]: GETGLOBAL R21 K40      ; R21 := 0x33bdd652
211 [-]: GETTABLE  R21 R21 K55  ; R82 := R21[0x23d5322f]
212 [-]: GETTABLE  R22 R0 K38   ; R22 := R0["mLineLog"]
213 [-]: GETTABLE  R22 R22 R11  ; R22 := R22[R11]
214 [-]: GETTABLE  R22 R22 K45  ; R22 := R22["hyperLinks"]
215 [-]: GETTABLE  R23 R12 R16  ; R23 := R12[R16]
216 [-]: GETTABLE  R23 R23 K45  ; R23 := R23["hyperLinks"]
217 [-]: GETTABLE  R23 R23 R20  ; R23 := R23[R20]
218 [-]: CALL      R21 3 1      ; R21(R22,R23)
219 [-]: FORLOOP   R17 210      ; R17 += R19; if R17 <= R18 then begin PC := 210; R20 := R17 end
220 [-]: FORLOOP   R13 195      ; R13 += R15; if R13 <= R14 then begin PC := 195; R16 := R13 end
221 [-]: EQ        1 R6 K4      ; if R6 == nil then PC := 227
222 [-]: JMP       227          ; PC := 227
223 [-]: EQ        1 R6 K54     ; if R6 == "" then PC := 227
224 [-]: JMP       227          ; PC := 227
225 [-]: GETUPVAL  R21 U2       ; R21 := U2
226 [-]: SETTABLE  R21 R6 K9    ; R21[R6] := true
227 [-]: GETTABLE  R21 R0 K56   ; R21 := R0["mHasHyperlink"]
228 [-]: TEST      R21 1        ; if R21 then PC := 238
229 [-]: JMP       238          ; PC := 238
230 [-]: GETTABLE  R21 R0 K38   ; R21 := R0["mLineLog"]
231 [-]: GETTABLE  R21 R21 R11  ; R21 := R21[R11]
232 [-]: GETTABLE  R21 R21 K45  ; R21 := R21["hyperLinks"]
233 [-]: LEN       R21 R21      ; R21 := # R21
234 [-]: LT        1 K57 R21    ; if 0.000000 < R21 then PC := 237
235 [-]: JMP       237          ; PC := 237
236 [-]: OP_LOADBOOL R21 0 1      ; R21 := false; PC := 237
237 [-]: OP_LOADBOOL R21 1 0      ; R21 := true
238 [-]: SETTABLE  R0 K56 R21   ; R0["mHasHyperlink"] := R21
239 [-]: GETTABLE  R21 R0 K53   ; R21 := R0["mChatHistory"]
240 [-]: LEN       R21 R21      ; R21 := # R21
241 [-]: GETTABLE  R22 R0 K58   ; R22 := R0["mMaxVisibleChatLines"]
242 [-]: DIV       R22 R22 R21  ; R22 := R22 / R21
243 [-]: GETTABLE  R23 R0 K59   ; R23 := R0["mTextScroll"]
244 [-]: GETTABLE  R24 R0 K58   ; R24 := R0["mMaxVisibleChatLines"]
245 [-]: SUB       R24 R21 R24  ; R24 := R21 - R24
246 [-]: DIV       R24 K26 R24  ; R24 := 1.000000 / R24
247 [-]: SETTABLE  R23 K60 R24  ; R23["mScrollStep"] := R24
248 [-]: GETTABLE  R23 R0 K59   ; R23 := R0["mTextScroll"]
249 [-]: SELF      R23 R23 K61  ; R24 := R23; R23 := R23[0xe6f974a9]
250 [-]: MOVE      R25 R22      ; R25 := R22
251 [-]: OP_LOADBOOL R26 1 0      ; R26 := true
252 [-]: CALL      R23 4 1      ; R23(R24,R25,R26)
253 [-]: GETTABLE  R23 R0 K62   ; R23 := R0["mScrollBack"]
254 [-]: LT        0 K57 R23    ; if 0.000000 >= R23 then PC := 281
255 [-]: JMP       281          ; PC := 281
256 [-]: GETGLOBAL R23 K63      ; R23 := 0x42dcc9f5
257 [-]: GETTABLE  R24 R0 K62   ; R24 := R0["mScrollBack"]
258 [-]: LEN       R25 R12      ; R25 := # R12
259 [-]: ADD       R24 R24 R25  ; R24 := R24 + R25
260 [-]: CONST     R25 0        ; R25 := 0.000000
261 [-]: GETTABLE  R26 R0 K39   ; R26 := R0["mMaxChatHistory"]
262 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
263 [-]: SETTABLE  R0 K62 R23   ; R0["mScrollBack"] := R23
264 [-]: GETTABLE  R23 R0 K53   ; R23 := R0["mChatHistory"]
265 [-]: LEN       R23 R23      ; R23 := # R23
266 [-]: GETTABLE  R24 R0 K62   ; R24 := R0["mScrollBack"]
267 [-]: GETTABLE  R25 R0 K58   ; R25 := R0["mMaxVisibleChatLines"]
268 [-]: SUB       R25 R23 R25  ; R25 := R23 - R25
269 [-]: DIV       R24 R24 R25  ; R24 := R24 / R25
270 [-]: GETTABLE  R25 R0 K59   ; R25 := R0["mTextScroll"]
271 [-]: SELF      R25 R25 K64  ; R26 := R25; R25 := R25[0x44aa79ac]
272 [-]: SUB       R27 K26 R24  ; R27 := 1.000000 - R24
273 [-]: LOADNIL   R28 R28      ; R28 := nil
274 [-]: GETTABLE  R29 R0 K39   ; R29 := R0["mMaxChatHistory"]
275 [-]: EQ        1 R23 R29    ; if R23 == R29 then PC := 278
276 [-]: JMP       278          ; PC := 278
277 [-]: OP_LOADBOOL R29 0 1      ; R29 := false; PC := 278
278 [-]: OP_LOADBOOL R29 1 0      ; R29 := true
279 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
280 [-]: JMP       285          ; PC := 285
281 [-]: GETTABLE  R25 R0 K59   ; R25 := R0["mTextScroll"]
282 [-]: SELF      R25 R25 K64  ; R26 := R25; R25 := R25[0x44aa79ac]
283 [-]: CONST     R27 1        ; R27 := 1.000000
284 [-]: CALL      R25 3 1      ; R25(R26,R27)
285 [-]: TEST      R4 1         ; if R4 then PC := 289
286 [-]: JMP       289          ; PC := 289
287 [-]: SELF      R25 R0 K65   ; R26 := R0; R25 := R0[0x3bd10f9e]
288 [-]: CALL      R25 2 1      ; R25(R26)
289 [-]: RETURN    R0 1         ; return 


; Function #94.19:
;
; Name:            
; Defined at line: 5447
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0[0x566ff49e]
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["MESSAGE_TYPE_SYSTEM"]
  4 [-]: LOADK     R7 K2        ; R7 := ""
  5 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
  6 [-]: MOVE      R9 R2        ; R9 := R2
  7 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
  8 [-]: RETURN    R0 1         ; return 


; Function #94.20:
;
; Name:            
; Defined at line: 5451
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x566ff49e]
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: GETTABLE  R5 R0 K1     ; R5 := R0["MESSAGE_TYPE_NOTIFICATION"]
  4 [-]: LOADK     R6 K2        ; R6 := ""
  5 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  6 [-]: RETURN    R0 1         ; return 


; Function #94.21:
;
; Name:            
; Defined at line: 5455
; #Upvalues:       3
; #Parameters:     8
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mIsChatEnabled"]
  2 [-]: TEST      R8 1         ; if R8 then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: LOADNIL   R8 R8        ; R8 := nil
  6 [-]: LOADK     R9 K1        ; R9 := ""
  7 [-]: LOADK     R10 K1       ; R10 := ""
  8 [-]: GETGLOBAL R11 K2       ; R11 := 0x7f5022cf
  9 [-]: GETTABLE  R11 R11 K3   ; R82 := R11[0xa5c556b9]
 10 [-]: MOVE      R12 R2       ; R12 := R2
 11 [-]: LOADK     R13 K4       ; R13 := "#"
 12 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 13 [-]: EQ        1 R11 K5     ; if R11 == nil then PC := 194
 14 [-]: JMP       194          ; PC := 194
 15 [-]: LOADK     R11 K4       ; R11 := "#"
 16 [-]: GETTABLE  R12 R0 K6    ; R12 := R0["mChannelName"]
 17 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 18 [-]: EQ        1 R2 R11     ; if R2 == R11 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: RETURN    R0 1         ; return 
 21 [-]: EQ        0 R1 K1      ; if R1 ~= "" then PC := 64
 22 [-]: JMP       64           ; PC := 64
 23 [-]: EQ        1 R3 K1      ; if R3 == "" then PC := 45
 24 [-]: JMP       45           ; PC := 45
 25 [-]: GETGLOBAL R11 K2       ; R11 := 0x7f5022cf
 26 [-]: GETTABLE  R11 R11 K7   ; R82 := R11[0x1a94c9cc]
 27 [-]: MOVE      R12 R2       ; R12 := R2
 28 [-]: CONST     R13 2        ; R13 := 2.000000
 29 [-]: CONST     R14 2        ; R14 := 2.000000
 30 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 31 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
 32 [-]: SELF      R12 R12 K9   ; R13 := R12; R12 := R12[0x9016a3d0]
 33 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 34 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 45
 35 [-]: JMP       45           ; PC := 45
 36 [-]: GETGLOBAL R11 K10      ; R11 := 0xae91e43b
 37 [-]: SELF      R11 R11 K11  ; R12 := R11; R11 := R11[0x42b04007]
 38 [-]: MOVE      R13 R3       ; R13 := R3
 39 [-]: OP_LOADBOOL R14 0 0      ; R14 := false
 40 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 41 [-]: MOVE      R3 R11       ; R3 := R11
 42 [-]: MOVE      R9 R3        ; R9 := R3
 43 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["MESSAGE_TYPE_CLAN"]
 44 [-]: JMP       205          ; PC := 205
 45 [-]: EQ        1 R3 K1      ; if R3 == "" then PC := 61
 46 [-]: JMP       61           ; PC := 61
 47 [-]: GETGLOBAL R11 K2       ; R11 := 0x7f5022cf
 48 [-]: GETTABLE  R11 R11 K7   ; R82 := R11[0x1a94c9cc]
 49 [-]: MOVE      R12 R3       ; R12 := R3
 50 [-]: CONST     R13 1        ; R13 := 1.000000
 51 [-]: CONST     R14 1        ; R14 := 1.000000
 52 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 53 [-]: EQ        0 R11 K13    ; if R11 ~= "/" then PC := 61
 54 [-]: JMP       61           ; PC := 61
 55 [-]: GETGLOBAL R11 K10      ; R11 := 0xae91e43b
 56 [-]: SELF      R11 R11 K11  ; R12 := R11; R11 := R11[0x42b04007]
 57 [-]: MOVE      R13 R3       ; R13 := R3
 58 [-]: OP_LOADBOOL R14 0 0      ; R14 := false
 59 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 60 [-]: MOVE      R3 R11       ; R3 := R11
 61 [-]: MOVE      R9 R3        ; R9 := R3
 62 [-]: GETTABLE  R8 R0 K14    ; R8 := R0["MESSAGE_TYPE_SYSTEM"]
 63 [-]: JMP       205          ; PC := 205
 64 [-]: GETGLOBAL R11 K2       ; R11 := 0x7f5022cf
 65 [-]: GETTABLE  R11 R11 K7   ; R82 := R11[0x1a94c9cc]
 66 [-]: MOVE      R12 R2       ; R12 := R2
 67 [-]: CONST     R13 2        ; R13 := 2.000000
 68 [-]: CONST     R14 2        ; R14 := 2.000000
 69 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 70 [-]: LE        0 K16 R7     ; if 3.000000 > R7 then PC := 94
 71 [-]: JMP       94           ; PC := 94
 72 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
 73 [-]: SELF      R12 R12 K9   ; R13 := R12; R12 := R12[0x9016a3d0]
 74 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 75 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 94
 76 [-]: JMP       94           ; PC := 94
 77 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
 78 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12[0x5992e5e7]
 79 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 80 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 94
 81 [-]: JMP       94           ; PC := 94
 82 [-]: GETGLOBAL R12 K18      ; R12 := mUIMode
 83 [-]: GETUPVAL  R13 U0       ; R13 := U0
 84 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["UI_MODE_IN_DOJO"]
 85 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 92
 86 [-]: JMP       92           ; PC := 92
 87 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
 88 [-]: SELF      R12 R12 K20  ; R13 := R12; R12 := R12[0x9729efeb]
 89 [-]: CALL      R12 2 2      ; R12 := R12(R13)
 90 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 94
 91 [-]: JMP       94           ; PC := 94
 92 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["MESSAGE_TYPE_STAFF"]
 93 [-]: JMP       182          ; PC := 182
 94 [-]: GETUPVAL  R12 U1       ; R12 := U1
 95 [-]: TEST      R12 0        ; if not R12 then PC := 121
 96 [-]: JMP       121          ; PC := 121
 97 [-]: LE        0 K22 R7     ; if 2.000000 > R7 then PC := 121
 98 [-]: JMP       121          ; PC := 121
 99 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
100 [-]: SELF      R12 R12 K9   ; R13 := R12; R12 := R12[0x9016a3d0]
101 [-]: CALL      R12 2 2      ; R12 := R12(R13)
102 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 121
103 [-]: JMP       121          ; PC := 121
104 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
105 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12[0x5992e5e7]
106 [-]: CALL      R12 2 2      ; R12 := R12(R13)
107 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 121
108 [-]: JMP       121          ; PC := 121
109 [-]: GETGLOBAL R12 K18      ; R12 := mUIMode
110 [-]: GETUPVAL  R13 U0       ; R13 := U0
111 [-]: GETTABLE  R13 R13 K19  ; R13 := R13["UI_MODE_IN_DOJO"]
112 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 119
113 [-]: JMP       119          ; PC := 119
114 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
115 [-]: SELF      R12 R12 K20  ; R13 := R12; R12 := R12[0x9729efeb]
116 [-]: CALL      R12 2 2      ; R12 := R12(R13)
117 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 121
118 [-]: JMP       121          ; PC := 121
119 [-]: GETTABLE  R8 R0 K23    ; R8 := R0["MESSAGE_TYPE_WG_MOD"]
120 [-]: JMP       182          ; PC := 182
121 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
122 [-]: SELF      R12 R12 K24  ; R13 := R12; R12 := R12[0x18618000]
123 [-]: CALL      R12 2 2      ; R12 := R12(R13)
124 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 128
125 [-]: JMP       128          ; PC := 128
126 [-]: GETTABLE  R8 R0 K25    ; R8 := R0["MESSAGE_TYPE_REGION"]
127 [-]: JMP       182          ; PC := 182
128 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
129 [-]: SELF      R12 R12 K9   ; R13 := R12; R12 := R12[0x9016a3d0]
130 [-]: CALL      R12 2 2      ; R12 := R12(R13)
131 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 135
132 [-]: JMP       135          ; PC := 135
133 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["MESSAGE_TYPE_CLAN"]
134 [-]: JMP       182          ; PC := 182
135 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
136 [-]: SELF      R12 R12 K26  ; R13 := R12; R12 := R12[0x2566038c]
137 [-]: CALL      R12 2 2      ; R12 := R12(R13)
138 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 148
139 [-]: JMP       148          ; PC := 148
140 [-]: GETUPVAL  R12 U2       ; R12 := U2
141 [-]: MOVE      R13 R1       ; R13 := R1
142 [-]: CALL      R12 2 2      ; R12 := R12(R13)
143 [-]: TEST      R12 1        ; if R12 then PC := 146
144 [-]: JMP       146          ; PC := 146
145 [-]: RETURN    R0 1         ; return 
146 [-]: GETTABLE  R8 R0 K27    ; R8 := R0["MESSAGE_TYPE_SQUAD"]
147 [-]: JMP       182          ; PC := 182
148 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
149 [-]: SELF      R12 R12 K28  ; R13 := R12; R12 := R12[0xb730c67b]
150 [-]: CALL      R12 2 2      ; R12 := R12(R13)
151 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 155
152 [-]: JMP       155          ; PC := 155
153 [-]: GETTABLE  R8 R0 K29    ; R8 := R0["MESSAGE_TYPE_COUNCIL"]
154 [-]: JMP       182          ; PC := 182
155 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
156 [-]: SELF      R12 R12 K30  ; R13 := R12; R12 := R12[0x4ddd2f2a]
157 [-]: CALL      R12 2 2      ; R12 := R12(R13)
158 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 162
159 [-]: JMP       162          ; PC := 162
160 [-]: GETTABLE  R8 R0 K31    ; R8 := R0["MESSAGE_TYPE_RECRUITING"]
161 [-]: JMP       182          ; PC := 182
162 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
163 [-]: SELF      R12 R12 K32  ; R13 := R12; R12 := R12[0x5a1b5444]
164 [-]: CALL      R12 2 2      ; R12 := R12(R13)
165 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 169
166 [-]: JMP       169          ; PC := 169
167 [-]: GETTABLE  R8 R0 K33    ; R8 := R0["MESSAGE_TYPE_TRADE"]
168 [-]: JMP       182          ; PC := 182
169 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
170 [-]: SELF      R12 R12 K17  ; R13 := R12; R12 := R12[0x5992e5e7]
171 [-]: CALL      R12 2 2      ; R12 := R12(R13)
172 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 176
173 [-]: JMP       176          ; PC := 176
174 [-]: GETTABLE  R8 R0 K34    ; R8 := R0["MESSAGE_TYPE_ALLIANCE"]
175 [-]: JMP       182          ; PC := 182
176 [-]: GETTABLE  R12 R0 K8    ; R12 := R0["mParent"]
177 [-]: SELF      R12 R12 K20  ; R13 := R12; R12 := R12[0x9729efeb]
178 [-]: CALL      R12 2 2      ; R12 := R12(R13)
179 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 182
180 [-]: JMP       182          ; PC := 182
181 [-]: GETTABLE  R8 R0 K35    ; R8 := R0["MESSAGE_TYPE_HUB"]
182 [-]: GETGLOBAL R12 K10      ; R12 := 0xae91e43b
183 [-]: SELF      R12 R12 K11  ; R13 := R12; R12 := R12[0x42b04007]
184 [-]: MOVE      R14 R10      ; R14 := R10
185 [-]: OP_LOADBOOL R15 1 0      ; R15 := true
186 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
187 [-]: MOVE      R10 R12      ; R10 := R12
188 [-]: MOVE      R12 R10      ; R12 := R10
189 [-]: MOVE      R13 R1       ; R13 := R1
190 [-]: LOADK     R14 K36      ; R14 := ": "
191 [-]: MOVE      R15 R3       ; R15 := R3
192 [-]: CONCAT    R9 R12 R15   ; R9 := R12 .. R13 .. R14 .. R15
193 [-]: JMP       205          ; PC := 205
194 [-]: EQ        0 R1 K1      ; if R1 ~= "" then PC := 199
195 [-]: JMP       199          ; PC := 199
196 [-]: MOVE      R9 R3        ; R9 := R3
197 [-]: GETTABLE  R8 R0 K37    ; R8 := R0["MESSAGE_TYPE_BROADCAST"]
198 [-]: JMP       205          ; PC := 205
199 [-]: GETTABLE  R12 R0 K38   ; R12 := R0["mChannelType"]
200 [-]: GETTABLE  R13 R0 K8    ; R13 := R0["mParent"]
201 [-]: GETTABLE  R13 R13 K39  ; R13 := R13["CHANNEL_PRIVATE_CHAT"]
202 [-]: LE        0 R13 R12    ; if R13 > R12 then PC := 205
203 [-]: JMP       205          ; PC := 205
204 [-]: RETURN    R0 1         ; return 
205 [-]: SELF      R12 R0 K40   ; R13 := R0; R12 := R0[0x566ff49e]
206 [-]: MOVE      R14 R9       ; R14 := R9
207 [-]: MOVE      R15 R8       ; R15 := R8
208 [-]: MOVE      R16 R4       ; R16 := R4
209 [-]: MOVE      R17 R5       ; R17 := R5
210 [-]: MOVE      R18 R6       ; R18 := R6
211 [-]: MOVE      R19 R1       ; R19 := R1
212 [-]: CALL      R12 8 1      ; R12(R13,R14,R15,R16,R17,R18,R19)
213 [-]: RETURN    R0 1         ; return 


; Function #94.22:
;
; Name:            
; Defined at line: 5544
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: SETTABLE  R0 K0 K1     ; R0["Resizing"] := true
  2 [-]: GETTABLE  R1 R0 K2     ; R1 := R0["mParent"]
  3 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
  4 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xf596420f]
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #94.23:
;
; Name:            
; Defined at line: 5549
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["Resizing"]
  2 [-]: TEST      R1 0         ; if not R1 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: SETTABLE  R0 K0 K1     ; R0["Resizing"] := false
  5 [-]: SELF      R1 R0 K2     ; R2 := R0; R1 := R0[0x5e63828f]
  6 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
  7 [-]: CALL      R1 3 1       ; R1(R2,R3)
  8 [-]: RETURN    R0 1         ; return 


; Function #95:
;
; Name:            
; Defined at line: 5559
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  7 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xc33018fb]
  8 [-]: MOVE      R4 R0        ; R4 := R0
  9 [-]: MOVE      R5 R1        ; R5 := R1
 10 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 11 [-]: RETURN    R0 1         ; return 


; Function #96:
;
; Name:            
; Defined at line: 5565
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 12 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xfe723404]
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: MOVE      R5 R1        ; R5 := R1
 15 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 16 [-]: RETURN    R0 1         ; return 


; Function #97:
;
; Name:            
; Defined at line: 5571
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 32
  5 [-]: JMP       32           ; PC := 32
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 32
 10 [-]: JMP       32           ; PC := 32
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0x015284cd
 12 [-]: LOADK     R3 K4        ; R3 := ","
 13 [-]: MOVE      R4 R1        ; R4 := R1
 14 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 15 [-]: LOADK     R3 K5        ; R3 := ""
 16 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
 17 [-]: LEN       R5 R2        ; R5 := # R2
 18 [-]: EQ        0 R5 K6      ; if R5 ~= 2.000000 then PC := 26
 19 [-]: JMP       26           ; PC := 26
 20 [-]: GETTABLE  R3 R2 K7     ; R3 := R2[1.000000]
 21 [-]: GETTABLE  R5 R2 K6     ; R5 := R2[2.000000]
 22 [-]: EQ        1 R5 K8      ; if R5 == "true" then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 25
 25 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 26 [-]: GETGLOBAL R5 K1        ; R5 := mWindow
 27 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5[0x089f95cb]
 28 [-]: MOVE      R7 R0        ; R7 := R0
 29 [-]: MOVE      R8 R3        ; R8 := R3
 30 [-]: MOVE      R9 R4        ; R9 := R4
 31 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 32 [-]: RETURN    R0 1         ; return 


; Function #98:
;
; Name:            
; Defined at line: 5585
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 30
  5 [-]: JMP       30           ; PC := 30
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 30
 10 [-]: JMP       30           ; PC := 30
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0x0032441c
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["StalkerMode"]
 13 [-]: TEST      R2 0         ; if not R2 then PC := 25
 14 [-]: JMP       25           ; PC := 25
 15 [-]: TEST      R1 0         ; if not R1 then PC := 25
 16 [-]: JMP       25           ; PC := 25
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0x7f5022cf
 18 [-]: GETTABLE  R2 R2 K6     ; R82 := R2[0xa5c556b9]
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: LOADK     R4 K7        ; R4 := "Welcome, Tenno."
 21 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 22 [-]: TEST      R2 0         ; if not R2 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 26 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xf88a689b]
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: MOVE      R5 R1        ; R5 := R1
 29 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 30 [-]: RETURN    R0 1         ; return 


; Function #99:
;
; Name:            
; Defined at line: 5594
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x331051b1]
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R1 3 1       ; R1(R2,R3)
 10 [-]: RETURN    R0 1         ; return 


; Function #100:
;
; Name:            
; Defined at line: 5601
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K2     ; R82 := R1[0x23a862e6]
  8 [-]: CALL      R1 1 2       ; R1 := R1()
  9 [-]: TEST      R1 1         ; if R1 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: LOADK     R1 K3        ; R1 := "#C"
 12 [-]: LOADK     R2 K4        ; R2 := "clanname"
 13 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 14 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 15 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x9f16d8a1]
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: MOVE      R5 R1        ; R5 := R1
 18 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 19 [-]: RETURN    R0 1         ; return 


; Function #101:
;
; Name:            
; Defined at line: 5609
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 22
  5 [-]: JMP       22           ; PC := 22
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mGrid"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 22
 11 [-]: JMP       22           ; PC := 22
 12 [-]: GETGLOBAL R1 K3        ; R1 := mInputBlocked
 13 [-]: TEST      R1 1         ; if R1 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 16 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mGrid"]
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x070daa5a]
 18 [-]: GETGLOBAL R3 K5        ; R3 := 0x03f57322
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R1 0 1       ; R1(R2,...)
 22 [-]: RETURN    R0 1         ; return 


; Function #102:
;
; Name:            
; Defined at line: 5614
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 22
  5 [-]: JMP       22           ; PC := 22
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mGrid"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 22
 11 [-]: JMP       22           ; PC := 22
 12 [-]: GETGLOBAL R1 K3        ; R1 := mInputBlocked
 13 [-]: TEST      R1 1         ; if R1 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 16 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mGrid"]
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xdf42446e]
 18 [-]: GETGLOBAL R3 K5        ; R3 := 0x03f57322
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R1 0 1       ; R1(R2,...)
 22 [-]: RETURN    R0 1         ; return 


; Function #103:
;
; Name:            
; Defined at line: 5619
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mGrid"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 13 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mGrid"]
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xbce5a201]
 15 [-]: GETGLOBAL R3 K4        ; R3 := 0x03f57322
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #104:
;
; Name:            
; Defined at line: 5626
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 45
  5 [-]: JMP       45           ; PC := 45
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTabMenu"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 45
 11 [-]: JMP       45           ; PC := 45
 12 [-]: GETGLOBAL R1 K3        ; R1 := mInputBlocked
 13 [-]: TEST      R1 1         ; if R1 then PC := 45
 14 [-]: JMP       45           ; PC := 45
 15 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 16 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mTabMenu"]
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xca30dfb6]
 18 [-]: GETGLOBAL R3 K5        ; R3 := 0x03f57322
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 22 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 23 [-]: MOVE      R3 R1        ; R3 := R1
 24 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 25 [-]: TEST      R2 1         ; if R2 then PC := 45
 26 [-]: JMP       45           ; PC := 45
 27 [-]: GETGLOBAL R2 K6        ; R2 := 0x34291f5c
 28 [-]: GETTABLE  R2 R2 K7     ; R82 := R2[0x1467d5f4]
 29 [-]: CALL      R2 1 2       ; R2 := R2()
 30 [-]: TEST      R2 1         ; if R2 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 33 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTabMenu"]
 34 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x39d4598d]
 35 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 36 [-]: TEST      R2 0         ; if not R2 then PC := 45
 37 [-]: JMP       45           ; PC := 45
 38 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 39 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTabMenu"]
 40 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xdf42446e]
 41 [-]: GETGLOBAL R4 K5        ; R4 := 0x03f57322
 42 [-]: MOVE      R5 R0        ; R5 := R0
 43 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 44 [-]: CALL      R2 0 1       ; R2(R3,...)
 45 [-]: RETURN    R0 1         ; return 


; Function #105:
;
; Name:            
; Defined at line: 5635
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTabMenu"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 13 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mTabMenu"]
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xbce5a201]
 15 [-]: GETGLOBAL R3 K4        ; R3 := 0x03f57322
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #106:
;
; Name:            
; Defined at line: 5641
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 80
  5 [-]: JMP       80           ; PC := 80
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTabMenu"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 80
 11 [-]: JMP       80           ; PC := 80
 12 [-]: GETGLOBAL R1 K3        ; R1 := mInputBlocked
 13 [-]: TEST      R1 1         ; if R1 then PC := 80
 14 [-]: JMP       80           ; PC := 80
 15 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 16 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x9317b706]
 17 [-]: CALL      R1 2 1       ; R1(R2)
 18 [-]: GETUPVAL  R1 U0        ; R1 := U0
 19 [-]: GETTABLE  R1 R1 K5     ; R82 := R1[0x659d451f]
 20 [-]: GETGLOBAL R2 K6        ; R2 := 0x0032441c
 21 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["UISound_ItemTipSection"]
 22 [-]: CALL      R1 2 1       ; R1(R2)
 23 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 24 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mTabMenu"]
 25 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xca30dfb6]
 26 [-]: GETGLOBAL R3 K9        ; R3 := 0x03f57322
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 29 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 30 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 80
 34 [-]: JMP       80           ; PC := 80
 35 [-]: GETGLOBAL R2 K10       ; R2 := 0x34291f5c
 36 [-]: GETTABLE  R2 R2 K11    ; R82 := R2[0x1467d5f4]
 37 [-]: CALL      R2 1 2       ; R2 := R2()
 38 [-]: TEST      R2 1         ; if R2 then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 41 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTabMenu"]
 42 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0x39d4598d]
 43 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 44 [-]: TEST      R2 0         ; if not R2 then PC := 80
 45 [-]: JMP       80           ; PC := 80
 46 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 47 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x46610c50]
 48 [-]: GETGLOBAL R4 K1        ; R4 := mWindow
 49 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mPanelList"]
 50 [-]: GETTABLE  R5 R1 K15    ; R5 := R1["ChannelName"]
 51 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 52 [-]: CALL      R2 3 1       ; R2(R3,R4)
 53 [-]: GETUPVAL  R2 U1        ; R2 := U1
 54 [-]: CALL      R2 1 2       ; R2 := R2()
 55 [-]: TEST      R2 0         ; if not R2 then PC := 72
 56 [-]: JMP       72           ; PC := 72
 57 [-]: GETUPVAL  R2 U2        ; R2 := U2
 58 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
 59 [-]: CALL      R2 2 1       ; R2(R3)
 60 [-]: GETGLOBAL R2 K10       ; R2 := 0x34291f5c
 61 [-]: GETTABLE  R2 R2 K11    ; R82 := R2[0x1467d5f4]
 62 [-]: CALL      R2 1 2       ; R2 := R2()
 63 [-]: TEST      R2 1         ; if R2 then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 66 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTabMenu"]
 67 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0xbce5a201]
 68 [-]: GETGLOBAL R4 K9        ; R4 := 0x03f57322
 69 [-]: MOVE      R5 R0        ; R5 := R0
 70 [-]: CALL      R4 2 0       ; R4,... := R4(R5)
 71 [-]: CALL      R2 0 1       ; R2(R3,...)
 72 [-]: GETGLOBAL R2 K10       ; R2 := 0x34291f5c
 73 [-]: GETTABLE  R2 R2 K17    ; R82 := R2[0xe6b41adb]
 74 [-]: CALL      R2 1 2       ; R2 := R2()
 75 [-]: TEST      R2 0         ; if not R2 then PC := 80
 76 [-]: JMP       80           ; PC := 80
 77 [-]: GETGLOBAL R2 K19       ; R2 := 0x0a8f62a7
 78 [-]: CALL      R2 1 2       ; R2 := R2()
 79 [-]: SETGLOBALHASH R2 K18       ; mFocusTabDownStart := R2
 80 [-]: RETURN    R0 1         ; return 


; Function #107:
;
; Name:            
; Defined at line: 5662
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x1e772104]
  8 [-]: CALL      R1 2 1       ; R1(R2)
  9 [-]: GETGLOBAL R1 K3        ; R1 := 0x34291f5c
 10 [-]: GETTABLE  R1 R1 K4     ; R82 := R1[0xe6b41adb]
 11 [-]: CALL      R1 1 2       ; R1 := R1()
 12 [-]: TEST      R1 0         ; if not R1 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: LOADNIL   R1 R1        ; R1 := nil
 15 [-]: SETGLOBALHASH R1 K5        ; mFocusTabDownStart := R1
 16 [-]: RETURN    R0 1         ; return 


; Function #108:
;
; Name:            
; Defined at line: 5673
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mVisualMode"]
  3 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
  5 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 16
  6 [-]: JMP       16           ; PC := 16
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0xf76783e5]
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 10 [-]: LOADK     R3 K5        ; R3 := "Window.TabMenu.ExpandCallout"
 11 [-]: GETGLOBAL R4 K6        ; R4 := 0x0032441c
 12 [-]: GETTABLE  R4 R4 K7     ; R4 := R4["UIFx_ConsolePress"]
 13 [-]: CONST     R5 6         ; R5 := 6.000000
 14 [-]: CONST     R6 2         ; R6 := 2.000000
 15 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 16 [-]: GETGLOBAL R1 K8        ; R1 := 0x34291f5c
 17 [-]: GETTABLE  R1 R1 K9     ; R82 := R1[0x1467d5f4]
 18 [-]: CALL      R1 1 2       ; R1 := R1()
 19 [-]: TEST      R1 0         ; if not R1 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: GETGLOBAL R1 K10       ; R1 := _T
 22 [-]: SETTABLE  R1 K11 K12   ; R1["gToolTip"] := nil
 23 [-]: GETGLOBAL R1 K8        ; R1 := 0x34291f5c
 24 [-]: GETTABLE  R1 R1 K13    ; R82 := R1[0xe6b41adb]
 25 [-]: CALL      R1 1 2       ; R1 := R1()
 26 [-]: TEST      R1 1         ; if R1 then PC := 35
 27 [-]: JMP       35           ; PC := 35
 28 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
 29 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0xc2b5e351]
 30 [-]: GETGLOBAL R3 K0        ; R3 := mWindow
 31 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["VISUAL_MODE_MENU_FULL"]
 32 [-]: MOVE      R4 R0        ; R4 := R0
 33 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 34 [-]: JMP       96           ; PC := 96
 35 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
 36 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mVisualMode"]
 37 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 38 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 39 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 42
 40 [-]: JMP       42           ; PC := 42
 41 [-]: OP_LOADBOOL R1 0 1       ; R1 := false; PC := 42
 42 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 43 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 44 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xc2b5e351]
 45 [-]: GETGLOBAL R4 K0        ; R4 := mWindow
 46 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["VISUAL_MODE_MENU_FULL"]
 47 [-]: MOVE      R5 R0        ; R5 := R0
 48 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 49 [-]: TEST      R1 0         ; if not R1 then PC := 96
 50 [-]: JMP       96           ; PC := 96
 51 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 52 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0x91a24e4b]
 53 [-]: LOADK     R4 K17       ; R4 := "Window.TabMenu.MinMaxBtn"
 54 [-]: CONST     R5 12        ; R5 := 12.000000
 55 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 56 [-]: DIV       R2 R2 K18    ; R2 := R2 / 2.000000
 57 [-]: SUB       R2 R2 K19    ; R2 := R2 - 9.000000
 58 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 59 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0x91a24e4b]
 60 [-]: LOADK     R5 K17       ; R5 := "Window.TabMenu.MinMaxBtn"
 61 [-]: CONST     R6 13        ; R6 := 13.000000
 62 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 63 [-]: DIV       R3 R3 K18    ; R3 := R3 / 2.000000
 64 [-]: ADD       R3 R3 K20    ; R3 := R3 + 4.000000
 65 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 66 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4[0x67bc869f]
 67 [-]: LOADK     R6 K5        ; R6 := "Window.TabMenu.ExpandCallout"
 68 [-]: CONST     R7 0         ; R7 := 0.000000
 69 [-]: GETGLOBAL R8 K4        ; R8 := 0xae91e43b
 70 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8[0x91a24e4b]
 71 [-]: LOADK     R10 K17      ; R10 := "Window.TabMenu.MinMaxBtn"
 72 [-]: CONST     R11 0        ; R11 := 0.000000
 73 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 74 [-]: ADD       R8 R8 R2     ; R8 := R8 + R2
 75 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 76 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 77 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4[0x67bc869f]
 78 [-]: LOADK     R6 K5        ; R6 := "Window.TabMenu.ExpandCallout"
 79 [-]: CONST     R7 1         ; R7 := 1.000000
 80 [-]: GETGLOBAL R8 K4        ; R8 := 0xae91e43b
 81 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8[0x91a24e4b]
 82 [-]: LOADK     R10 K17      ; R10 := "Window.TabMenu.MinMaxBtn"
 83 [-]: CONST     R11 1        ; R11 := 1.000000
 84 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 85 [-]: ADD       R8 R8 R3     ; R8 := R8 + R3
 86 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 87 [-]: GETUPVAL  R4 U0        ; R4 := U0
 88 [-]: GETTABLE  R4 R4 K3     ; R82 := R4[0xf76783e5]
 89 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 90 [-]: LOADK     R6 K22       ; R6 := "Window.SendMessageBar"
 91 [-]: GETGLOBAL R7 K6        ; R7 := 0x0032441c
 92 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["UIFx_ConsolePress"]
 93 [-]: CONST     R8 60        ; R8 := 60.000000
 94 [-]: CONST     R9 20        ; R9 := 20.000000
 95 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 96 [-]: GETGLOBAL R4 K23       ; R4 := 0x7b998233
 97 [-]: GETGLOBAL R5 K10       ; R5 := _T
 98 [-]: GETTABLE  R5 R5 K24    ; R5 := R5["ForegroundMovie"]
 99 [-]: CALL      R4 2 2       ; R4 := R4(R5)
100 [-]: TEST      R4 1         ; if R4 then PC := 108
101 [-]: JMP       108          ; PC := 108
102 [-]: GETGLOBAL R4 K10       ; R4 := _T
103 [-]: GETTABLE  R4 R4 K24    ; R4 := R4["ForegroundMovie"]
104 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0xe4162eed]
105 [-]: LOADK     R6 K26       ; R6 := "TogglePlayTypeDropDown"
106 [-]: LOADK     R7 K27       ; R7 := "false"
107 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
108 [-]: RETURN    R0 1         ; return 


; Function #109:
;
; Name:            
; Defined at line: 5704
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInputBlocked
  2 [-]: TEST      R0 1         ; if R0 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: CALL      R0 1 1       ; R0()
  6 [-]: RETURN    R0 1         ; return 


; Function #110:
;
; Name:            
; Defined at line: 5710
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 12
  5 [-]: JMP       12           ; PC := 12
  6 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: OP_LOADBOOL R0 0 1       ; R0 := false; PC := 13
 13 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #111:
;
; Name:            
; Defined at line: 5714
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mVisualMode"]
 14 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 15 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: OP_LOADBOOL R0 0 1       ; R0 := false; PC := 19
 19 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 20 [-]: RETURN    R0 2         ; return R0
 21 [-]: RETURN    R0 1         ; return 


; Function #112:
;
; Name:            
; Defined at line: 5719
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.UserPanel.Panel.LocatorBtn"
  4 [-]: CONST     R3 10        ; R3 := 10.000000
  5 [-]: CONST     R4 100       ; R4 := 100.000000
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #113:
;
; Name:            
; Defined at line: 5723
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.UserPanel.Panel.LocatorBtn"
  4 [-]: CONST     R3 10        ; R3 := 10.000000
  5 [-]: CONST     R4 50        ; R4 := 50.000000
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #114:
;
; Name:            
; Defined at line: 5727
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInputBlocked
  2 [-]: TEST      R0 1         ; if R0 then PC := 45
  3 [-]: JMP       45           ; PC := 45
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
  5 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: TEST      R0 1         ; if R0 then PC := 45
  9 [-]: JMP       45           ; PC := 45
 10 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
 11 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 12 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mUserLocator"]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 45
 16 [-]: JMP       45           ; PC := 45
 17 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 18 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mUserPanel"]
 19 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mIsExpanded"]
 20 [-]: TEST      R0 0         ; if not R0 then PC := 45
 21 [-]: JMP       45           ; PC := 45
 22 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 23 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mUserPanel"]
 24 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["mUserListInterpolating"]
 25 [-]: TEST      R0 1         ; if R0 then PC := 45
 26 [-]: JMP       45           ; PC := 45
 27 [-]: GETGLOBAL R0 K7        ; R0 := 0x34291f5c
 28 [-]: GETTABLE  R0 R0 K8     ; R82 := R0[0x1467d5f4]
 29 [-]: CALL      R0 1 2       ; R0 := R0()
 30 [-]: TEST      R0 0         ; if not R0 then PC := 41
 31 [-]: JMP       41           ; PC := 41
 32 [-]: GETUPVAL  R0 U0        ; R0 := U0
 33 [-]: GETTABLE  R0 R0 K9     ; R82 := R0[0xf76783e5]
 34 [-]: GETGLOBAL R1 K10       ; R1 := 0xae91e43b
 35 [-]: LOADK     R2 K11       ; R2 := "Window.UserPanel.Panel.LocatorBtn.Callout"
 36 [-]: GETGLOBAL R3 K12       ; R3 := 0x0032441c
 37 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["UIFx_ConsolePress"]
 38 [-]: CONST     R4 0         ; R4 := 0.000000
 39 [-]: CONST     R5 0         ; R5 := 0.000000
 40 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 41 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 42 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mUserPanel"]
 43 [-]: SELF      R0 R0 K14    ; R1 := R0; R0 := R0[0xcc9c1404]
 44 [-]: CALL      R0 2 1       ; R0(R1)
 45 [-]: RETURN    R0 1         ; return 


; Function #115:
;
; Name:            
; Defined at line: 5740
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #116:
;
; Name:            
; Defined at line: 5745
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mInputBlocked
  2 [-]: TEST      R1 1         ; if R1 then PC := 28
  3 [-]: JMP       28           ; PC := 28
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 28
  8 [-]: JMP       28           ; PC := 28
  9 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 16 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 17 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mUserLocator"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 23 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 24 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mUserLocator"]
 25 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mIsExpanded"]
 26 [-]: TEST      R1 1         ; if R1 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 30 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 31 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mUserLocator"]
 32 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xdf42446e]
 33 [-]: GETGLOBAL R3 K7        ; R3 := 0x03f57322
 34 [-]: MOVE      R4 R0        ; R4 := R0
 35 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 36 [-]: CALL      R1 0 1       ; R1(R2,...)
 37 [-]: RETURN    R0 1         ; return 


; Function #117:
;
; Name:            
; Defined at line: 5752
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mInputBlocked
  2 [-]: TEST      R1 1         ; if R1 then PC := 28
  3 [-]: JMP       28           ; PC := 28
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 28
  8 [-]: JMP       28           ; PC := 28
  9 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 16 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 17 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mUserLocator"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 23 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 24 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mUserLocator"]
 25 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mIsExpanded"]
 26 [-]: TEST      R1 1         ; if R1 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 30 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 31 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mUserLocator"]
 32 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xbce5a201]
 33 [-]: GETGLOBAL R3 K7        ; R3 := 0x03f57322
 34 [-]: MOVE      R4 R0        ; R4 := R0
 35 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 36 [-]: CALL      R1 0 1       ; R1(R2,...)
 37 [-]: RETURN    R0 1         ; return 


; Function #118:
;
; Name:            
; Defined at line: 5759
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mInputBlocked
  2 [-]: TEST      R1 1         ; if R1 then PC := 28
  3 [-]: JMP       28           ; PC := 28
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 28
  8 [-]: JMP       28           ; PC := 28
  9 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 28
 14 [-]: JMP       28           ; PC := 28
 15 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 16 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 17 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mUserPanel"]
 18 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mUserLocator"]
 19 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 20 [-]: TEST      R1 1         ; if R1 then PC := 28
 21 [-]: JMP       28           ; PC := 28
 22 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 23 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 24 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mUserLocator"]
 25 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mIsExpanded"]
 26 [-]: TEST      R1 1         ; if R1 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 30 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mUserPanel"]
 31 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mUserLocator"]
 32 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x070daa5a]
 33 [-]: GETGLOBAL R3 K7        ; R3 := 0x03f57322
 34 [-]: MOVE      R4 R0        ; R4 := R0
 35 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 36 [-]: CALL      R1 0 1       ; R1(R2,...)
 37 [-]: RETURN    R0 1         ; return 


; Function #119:
;
; Name:            
; Defined at line: 5767
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 1         ; if R2 then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 12 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x82c88a5d]
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: MOVE      R5 R1        ; R5 := R1
 15 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 16 [-]: RETURN    R0 1         ; return 


; Function #120:
;
; Name:            
; Defined at line: 5775
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        1 R1 K0      ; if R1 == "nil" then PC := 26
  2 [-]: JMP       26           ; PC := 26
  3 [-]: EQ        0 R1 K1      ; if R1 ~= "true" then PC := 16
  4 [-]: JMP       16           ; PC := 16
  5 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
  6 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xd4f2405e]
  7 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
  8 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x42b04007]
  9 [-]: LOADK     R6 K6        ; R6 := "/Lotus/Language/Menu/Chat_IgnoringUser"
 10 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 11 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 12 [-]: SETTABLE  R8 K7 R0     ; R8["USER"] := R0
 13 [-]: CALL      R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
 14 [-]: CALL      R2 0 1       ; R2(R3,...)
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 17 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xd4f2405e]
 18 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 19 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x42b04007]
 20 [-]: LOADK     R6 K8        ; R6 := "/Lotus/Language/Menu/Chat_ListeningUser"
 21 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 22 [-]: NEWTABLE  R8 0 1       ; R8 := {}
 23 [-]: SETTABLE  R8 K7 R0     ; R8["USER"] := R0
 24 [-]: CALL      R4 5 0       ; R4,... := R4(R5,R6,R7,R8)
 25 [-]: CALL      R2 0 1       ; R2(R3,...)
 26 [-]: RETURN    R0 1         ; return 


; Function #121:
;
; Name:            
; Defined at line: 5785
; #Upvalues:       37
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: NEWTABLE  R1 0 0       ; R1 := {}
  2 [-]: SETTABLE  R1 K0 K1     ; R1["VISUAL_MODE_INVALID"] := -1.000000
  3 [-]: SETTABLE  R1 K2 K3     ; R1["VISUAL_MODE_MENU_FULL"] := 0.000000
  4 [-]: SETTABLE  R1 K4 K5     ; R1["VISUAL_MODE_MENU_SIMPLE"] := 1.000000
  5 [-]: SETTABLE  R1 K6 K7     ; R1["VISUAL_MODE_GAMEPLAY_SIMPLE"] := 2.000000
  6 [-]: SETTABLE  R1 K8 K9     ; R1["VISUAL_MODE_GAMEPLAY_FULL"] := 3.000000
  7 [-]: SETTABLE  R1 K10 K3    ; R1["CHANNEL_EXIT"] := 0.000000
  8 [-]: SETTABLE  R1 K11 K5    ; R1["CHANNEL_ENTER"] := 1.000000
  9 [-]: SETTABLE  R1 K12 K3    ; R1["CHANNEL_SESSION"] := 0.000000
 10 [-]: SETTABLE  R1 K13 K5    ; R1["CHANNEL_HUB"] := 1.000000
 11 [-]: SETTABLE  R1 K14 K7    ; R1["CHANNEL_CLAN"] := 2.000000
 12 [-]: SETTABLE  R1 K15 K9    ; R1["CHANNEL_ALLIANCE"] := 3.000000
 13 [-]: SETTABLE  R1 K16 K17   ; R1["CHANNEL_COUNCIL"] := 4.000000
 14 [-]: SETTABLE  R1 K18 K19   ; R1["CHANNEL_GLOBAL"] := 5.000000
 15 [-]: SETTABLE  R1 K20 K21   ; R1["CHANNEL_QA"] := 6.000000
 16 [-]: SETTABLE  R1 K22 K23   ; R1["CHANNEL_RECRUITING"] := 7.000000
 17 [-]: SETTABLE  R1 K24 K25   ; R1["CHANNEL_TRADE"] := 8.000000
 18 [-]: SETTABLE  R1 K26 K27   ; R1["CHANNEL_PRIVATE_CHAT"] := 9.000000
 19 [-]: SETTABLE  R1 K28 R0    ; R1["mClipName"] := R0
 20 [-]: SETTABLE  R1 K29 K30   ; R1["mUser"] := ""
 21 [-]: SETTABLE  R1 K31 K3    ; R1["mMouseX"] := 0.000000
 22 [-]: SETTABLE  R1 K32 K3    ; R1["mMouseY"] := 0.000000
 23 [-]: SETTABLE  R1 K33 K34   ; R1["mMouseIsDragging"] := false
 24 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 25 [-]: SETTABLE  R1 K35 R2    ; R1["mWindow"] := R2
 26 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 27 [-]: SETTABLE  R1 K36 R2    ; R1["mChatPanelWindow"] := R2
 28 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 29 [-]: SETTABLE  R1 K37 R2    ; R1["mWindowTitle"] := R2
 30 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 31 [-]: SETTABLE  R1 K38 R2    ; R1["mWindowStatus"] := R2
 32 [-]: SETTABLE  R1 K39 K40   ; R1["mCachedGuildId"] := nil
 33 [-]: SETTABLE  R1 K41 K30   ; R1["mCachedGuildMotd"] := ""
 34 [-]: SETTABLE  R1 K42 K40   ; R1["mCachedAllianceId"] := nil
 35 [-]: SETTABLE  R1 K43 K30   ; R1["mCachedAllianceMotd"] := ""
 36 [-]: SETTABLE  R1 K44 K40   ; R1["mCachedSessionID"] := nil
 37 [-]: SETTABLE  R1 K45 K30   ; R1["mCachedCurSessionName"] := ""
 38 [-]: SETTABLE  R1 K46 K30   ; R1["mCachedOldSessionName"] := ""
 39 [-]: SETTABLE  R1 K47 K5    ; R1["mCachedHostHistoryCount"] := 1.000000
 40 [-]: SETTABLE  R1 K48 K3    ; R1["mCachedCouncilLevel"] := 0.000000
 41 [-]: SETTABLE  R1 K49 K34   ; R1["mCachedRecruiting"] := false
 42 [-]: SETTABLE  R1 K50 K40   ; R1["mCachedHubID"] := nil
 43 [-]: SETTABLE  R1 K51 K40   ; R1["mCachedUIMode"] := nil
 44 [-]: SETTABLE  R1 K52 K34   ; R1["mCachedPersistentRelayHubActive"] := false
 45 [-]: SETTABLE  R1 K53 K34   ; R1["mIsScenarioChannel"] := false
 46 [-]: SETTABLE  R1 K54 K55   ; R1["mFocusHubOnActive"] := true
 47 [-]: SETTABLE  R1 K56 K5    ; R1["mFontIndex"] := 1.000000
 48 [-]: SETTABLE  R1 K57 K40   ; R1["mInputPanel"] := nil
 49 [-]: SETTABLE  R1 K58 K40   ; R1["mUserPanel"] := nil
 50 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 51 [-]: SETTABLE  R1 K59 R2    ; R1[0x00000001] := R2
 52 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 53 [-]: SETTABLE  R1 K60 R2    ; R1[0x7b998233] := R2
 54 [-]: SETTABLE  R1 K61 K30   ; R1["mActivePanelName"] := ""
 55 [-]: SETTABLE  R1 K62 K30   ; R1["mPrevPanelName"] := ""
 56 [-]: SETTABLE  R1 K63 K3    ; R1["mFontButtonWidth"] := 0.000000
 57 [-]: SETTABLE  R1 K64 K40   ; R1["mTabMenu"] := nil
 58 [-]: GETTABLE  R2 R1 K26    ; R2 := R1["CHANNEL_PRIVATE_CHAT"]
 59 [-]: SETTABLE  R1 K65 R2    ; R1[0x42b04007] := R2
 60 [-]: GETUPVAL  R2 U0        ; R2 := U0
 61 [-]: GETTABLE  R2 R2 K67    ; R82 := R2[0x06d055f9]
 62 [-]: GETGLOBAL R3 K68       ; R3 := 0x9ba7909f
 63 [-]: SELF      R3 R3 K69    ; R4 := R3; R3 := R3[0xbf9494fc]
 64 [-]: LOADK     R5 K70       ; R5 := "HUD.UseAlternateHud"
 65 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 66 [-]: LOADK     R4 K71       ; R4 := 0.010000
 67 [-]: CONST     R5 8         ; R5 := 8.000000
 68 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 69 [-]: SETTABLE  R1 K66 R2    ; R1["mDelayedFadeOutTimer"] := R2
 70 [-]: SETTABLE  R1 K72 K3    ; R1["mActiveTabListFadeOutTimer"] := 0.000000
 71 [-]: SETTABLE  R1 K73 K3    ; R1["mActiveChatFadeOutTimer"] := 0.000000
 72 [-]: SETTABLE  R1 K74 K34   ; R1["mIsConnected"] := false
 73 [-]: NEWTABLE  R2 0 0       ; R2 := {}
 74 [-]: SETTABLE  R1 K75 R2    ; R1["mPendingChannels"] := R2
 75 [-]: SETTABLE  R1 K76 K40   ; R1["mPendingGlobalChannelName"] := nil
 76 [-]: SETTABLE  R1 K77 K40   ; R1["mPendingRecruitingChannelName"] := nil
 77 [-]: SETTABLE  R1 K78 K40   ; R1["mPendingTradeChannelName"] := nil
 78 [-]: SETTABLE  R1 K79 K40   ; R1["mPendingCouncilChannelName"] := nil
 79 [-]: SETTABLE  R1 K80 K40   ; R1["mPendingQAChannelName"] := nil
 80 [-]: GETTABLE  R2 R1 K0     ; R2 := R1["VISUAL_MODE_INVALID"]
 81 [-]: SETTABLE  R1 K81 R2    ; R1["mVisualMode"] := R2
 82 [-]: GETTABLE  R2 R1 K18    ; R2 := R1["CHANNEL_GLOBAL"]
 83 [-]: SETTABLE  R1 K82 R2    ; R1["mMode"] := R2
 84 [-]: SETTABLE  R1 K83 K84   ; R1["mTopResizeClipName"] := "Window.TabMenu.Resize"
 85 [-]: SETTABLE  R1 K85 K86   ; R1["mBottomResizeClipName"] := "Window.WindowStatus.Resize"
 86 [-]: SETTABLE  R1 K87 K34   ; R1["mHasRecievedBroadcast"] := false
 87 [-]: SETTABLE  R1 K88 K34   ; R1["mReconnecting"] := false
 88 [-]: SETTABLE  R1 K89 K3    ; R1["mMenuPanelXPos"] := 0.000000
 89 [-]: SETTABLE  R1 K90 K34   ; R1["mLeftArrowFocused"] := false
 90 [-]: SETTABLE  R1 K91 K34   ; R1["mLeftArrowFlashing"] := false
 91 [-]: SETTABLE  R1 K92 K34   ; R1["mRightArrowFocused"] := false
 92 [-]: SETTABLE  R1 K93 K34   ; R1["mRightArrowFlashing"] := false
 93 [-]: SETTABLE  R1 K94 K40   ; R1["mFilterList"] := nil
 94 [-]: SETTABLE  R1 K95 K96   ; R1["mFilterBtnOffset"] := 20.000000
 95 [-]: GETGLOBAL R2 K98       ; R2 := 0xae91e43b
 96 [-]: SELF      R2 R2 K99    ; R3 := R2; R2 := R2[0x91a24e4b]
 97 [-]: MOVE      R4 R0        ; R4 := R0
 98 [-]: LOADK     R5 K100      ; R5 := ".TabbedChatPanel.ScrollBar.HitZone"
 99 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
100 [-]: CONST     R5 5         ; R5 := 5.000000
101 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
102 [-]: SETTABLE  R1 K97 R2    ; R1[0x23d5322f] := R2
103 [-]: GETUPVAL  R2 U1        ; R2 := U1
104 [-]: GETTABLE  R2 R2 K102   ; R82 := R2[0x293ec9c4]
105 [-]: CALL      R2 1 2       ; R2 := R2()
106 [-]: SETTABLE  R1 K101 R2   ; R1["mInQuestCommitment"] := R2
107 [-]: CLOSURE   R2 0         ; R2 := closure(Function #121.1)
108 [-]: GETUPVAL  R0 U0        ; R0 := U0
109 [-]: SETTABLE  R1 K103 R2   ; R1["OnConnectionChanged"] := R2
110 [-]: CLOSURE   R2 1         ; R2 := closure(Function #121.2)
111 [-]: GETUPVAL  R0 U2        ; R0 := U2
112 [-]: SETTABLE  R1 K104 R2   ; R1["SetVisualMode"] := R2
113 [-]: CLOSURE   R2 2         ; R2 := closure(Function #121.3)
114 [-]: SETTABLE  R1 K105 R2   ; R1["OnWindowTitlePress"] := R2
115 [-]: CLOSURE   R2 3         ; R2 := closure(Function #121.4)
116 [-]: SETTABLE  R1 K106 R2   ; R1["OnWindowTitleRelease"] := R2
117 [-]: CLOSURE   R2 4         ; R2 := closure(Function #121.5)
118 [-]: SETTABLE  R1 K107 R2   ; R1["OnWindowTitleRollOver"] := R2
119 [-]: CLOSURE   R2 5         ; R2 := closure(Function #121.6)
120 [-]: SETTABLE  R1 K108 R2   ; R1["OnWindowTitleRollOut"] := R2
121 [-]: CLOSURE   R2 6         ; R2 := closure(Function #121.7)
122 [-]: SETTABLE  R1 K109 R2   ; R1["OnResizePress"] := R2
123 [-]: CLOSURE   R2 7         ; R2 := closure(Function #121.8)
124 [-]: SETTABLE  R1 K110 R2   ; R1["OnResizeRelease"] := R2
125 [-]: CLOSURE   R2 8         ; R2 := closure(Function #121.9)
126 [-]: SETTABLE  R1 K111 R2   ; R1["OnResizeRollOver"] := R2
127 [-]: CLOSURE   R2 9         ; R2 := closure(Function #121.10)
128 [-]: SETTABLE  R1 K112 R2   ; R1["OnResizeRollOut"] := R2
129 [-]: CLOSURE   R2 10        ; R2 := closure(Function #121.11)
130 [-]: GETUPVAL  R0 U0        ; R0 := U0
131 [-]: SETTABLE  R1 K113 R2   ; R1["GetCoordsRelativeToParent"] := R2
132 [-]: CLOSURE   R2 11        ; R2 := closure(Function #121.12)
133 [-]: GETUPVAL  R0 U3        ; R0 := U3
134 [-]: GETUPVAL  R0 U4        ; R0 := U4
135 [-]: SETTABLE  R1 K114 R2   ; R1["CreateSimpleTabList"] := R2
136 [-]: CLOSURE   R2 12        ; R2 := closure(Function #121.13)
137 [-]: SETTABLE  R1 K115 R2   ; R1["SetArrowVisibilities"] := R2
138 [-]: CLOSURE   R2 13        ; R2 := closure(Function #121.14)
139 [-]: GETUPVAL  R0 U5        ; R0 := U5
140 [-]: SETTABLE  R1 K116 R2   ; R1["AddTab"] := R2
141 [-]: CLOSURE   R2 14        ; R2 := closure(Function #121.15)
142 [-]: SETTABLE  R1 K117 R2   ; R1["RemoveTab"] := R2
143 [-]: CLOSURE   R2 15        ; R2 := closure(Function #121.16)
144 [-]: GETUPVAL  R0 U3        ; R0 := U3
145 [-]: GETUPVAL  R0 U0        ; R0 := U0
146 [-]: GETUPVAL  R0 U4        ; R0 := U4
147 [-]: SETTABLE  R1 K118 R2   ; R1["_initializeTabs"] := R2
148 [-]: CLOSURE   R2 16        ; R2 := closure(Function #121.17)
149 [-]: SETTABLE  R1 K119 R2   ; R1["SetTabMenuPanelPos"] := R2
150 [-]: CLOSURE   R2 17        ; R2 := closure(Function #121.18)
151 [-]: GETUPVAL  R0 U6        ; R0 := U6
152 [-]: SETTABLE  R1 K120 R2   ; R1["InitializeTabArrows"] := R2
153 [-]: CLOSURE   R2 18        ; R2 := closure(Function #121.19)
154 [-]: GETUPVAL  R0 U2        ; R0 := U2
155 [-]: GETUPVAL  R0 U7        ; R0 := U7
156 [-]: SETTABLE  R1 K121 R2   ; R1["SetActive"] := R2
157 [-]: CLOSURE   R2 19        ; R2 := closure(Function #121.20)
158 [-]: SETTABLE  R1 K122 R2   ; R1["Shutdown"] := R2
159 [-]: CLOSURE   R2 20        ; R2 := closure(Function #121.21)
160 [-]: SETTABLE  R1 K123 R2   ; R1["SystemMessage"] := R2
161 [-]: CLOSURE   R2 21        ; R2 := closure(Function #121.22)
162 [-]: SETTABLE  R1 K124 R2   ; R1["ChannelSystemMessage"] := R2
163 [-]: CLOSURE   R2 22        ; R2 := closure(Function #121.23)
164 [-]: SETTABLE  R1 K125 R2   ; R1["NotificationMessage"] := R2
165 [-]: CLOSURE   R2 23        ; R2 := closure(Function #121.24)
166 [-]: SETTABLE  R1 K126 R2   ; R1["ChannelNotificationMessage"] := R2
167 [-]: CLOSURE   R2 24        ; R2 := closure(Function #121.25)
168 [-]: SETTABLE  R1 K127 R2   ; R1["SwitchModes"] := R2
169 [-]: CLOSURE   R2 25        ; R2 := closure(Function #121.26)
170 [-]: GETUPVAL  R0 U0        ; R0 := U0
171 [-]: GETUPVAL  R0 U1        ; R0 := U1
172 [-]: SETTABLE  R1 K128 R2   ; R1["ToggleIgnoreUser"] := R2
173 [-]: CLOSURE   R2 26        ; R2 := closure(Function #121.27)
174 [-]: GETUPVAL  R0 U0        ; R0 := U0
175 [-]: SETTABLE  R1 K129 R2   ; R1["SetInitWindowPosition"] := R2
176 [-]: CLOSURE   R2 27        ; R2 := closure(Function #121.28)
177 [-]: GETUPVAL  R0 U0        ; R0 := U0
178 [-]: SETTABLE  R1 K130 R2   ; R1["SetInitWindowSize"] := R2
179 [-]: CLOSURE   R2 28        ; R2 := closure(Function #121.29)
180 [-]: GETUPVAL  R0 U0        ; R0 := U0
181 [-]: SETTABLE  R1 K131 R2   ; R1["UpdateFilterPositions"] := R2
182 [-]: CLOSURE   R2 29        ; R2 := closure(Function #121.30)
183 [-]: GETUPVAL  R0 U3        ; R0 := U3
184 [-]: GETUPVAL  R0 U8        ; R0 := U8
185 [-]: GETUPVAL  R0 U6        ; R0 := U6
186 [-]: SETTABLE  R1 K132 R2   ; R1["InitializeChatArea"] := R2
187 [-]: CLOSURE   R2 30        ; R2 := closure(Function #121.31)
188 [-]: GETUPVAL  R0 U8        ; R0 := U8
189 [-]: GETUPVAL  R0 U6        ; R0 := U6
190 [-]: GETUPVAL  R0 U9        ; R0 := U9
191 [-]: GETUPVAL  R0 U10       ; R0 := U10
192 [-]: GETUPVAL  R0 U11       ; R0 := U11
193 [-]: GETUPVAL  R0 U12       ; R0 := U12
194 [-]: GETUPVAL  R0 U0        ; R0 := U0
195 [-]: SETTABLE  R1 K133 R2   ; R1["Initialize"] := R2
196 [-]: CLOSURE   R2 31        ; R2 := closure(Function #121.32)
197 [-]: GETUPVAL  R0 U13       ; R0 := U13
198 [-]: GETUPVAL  R0 U14       ; R0 := U14
199 [-]: GETUPVAL  R0 U15       ; R0 := U15
200 [-]: SETTABLE  R1 K134 R2   ; R1["OnMessageSent"] := R2
201 [-]: CLOSURE   R2 32        ; R2 := closure(Function #121.33)
202 [-]: GETUPVAL  R0 U16       ; R0 := U16
203 [-]: SETTABLE  R1 K135 R2   ; R1["OnUserJoin"] := R2
204 [-]: CLOSURE   R2 33        ; R2 := closure(Function #121.34)
205 [-]: SETTABLE  R1 K136 R2   ; R1["OnUserLeave"] := R2
206 [-]: CLOSURE   R2 34        ; R2 := closure(Function #121.35)
207 [-]: GETUPVAL  R0 U0        ; R0 := U0
208 [-]: SETTABLE  R1 K137 R2   ; R1["cycleActiveTab"] := R2
209 [-]: CLOSURE   R2 35        ; R2 := closure(Function #121.36)
210 [-]: GETUPVAL  R0 U0        ; R0 := U0
211 [-]: GETUPVAL  R0 U17       ; R0 := U17
212 [-]: GETUPVAL  R0 U5        ; R0 := U5
213 [-]: GETUPVAL  R0 U18       ; R0 := U18
214 [-]: SETTABLE  R1 K138 R2   ; R1["OnChannelStateChanged"] := R2
215 [-]: CLOSURE   R2 36        ; R2 := closure(Function #121.37)
216 [-]: GETUPVAL  R0 U0        ; R0 := U0
217 [-]: GETUPVAL  R0 U12       ; R0 := U12
218 [-]: GETUPVAL  R0 U19       ; R0 := U19
219 [-]: SETTABLE  R1 K139 R2   ; R1["OnChatMessageReceived"] := R2
220 [-]: CLOSURE   R2 37        ; R2 := closure(Function #121.38)
221 [-]: GETUPVAL  R0 U20       ; R0 := U20
222 [-]: GETUPVAL  R0 U21       ; R0 := U21
223 [-]: SETTABLE  R1 K140 R2   ; R1["OnInvalidWhisperTarget"] := R2
224 [-]: CLOSURE   R2 38        ; R2 := closure(Function #121.39)
225 [-]: GETUPVAL  R0 U16       ; R0 := U16
226 [-]: SETTABLE  R1 K141 R2   ; R1["OnChatChannelJoinUserList"] := R2
227 [-]: CLOSURE   R2 39        ; R2 := closure(Function #121.40)
228 [-]: SETTABLE  R1 K142 R2   ; R1["_getRegionChannelPrefix"] := R2
229 [-]: CLOSURE   R2 40        ; R2 := closure(Function #121.41)
230 [-]: GETUPVAL  R0 U22       ; R0 := U22
231 [-]: SETTABLE  R1 K143 R2   ; R1["_getGlobalChannelName"] := R2
232 [-]: CLOSURE   R2 41        ; R2 := closure(Function #121.42)
233 [-]: SETTABLE  R1 K144 R2   ; R1["_getRegionChannel"] := R2
234 [-]: CLOSURE   R2 42        ; R2 := closure(Function #121.43)
235 [-]: SETTABLE  R1 K145 R2   ; R1["_getSquadChannelPrefix"] := R2
236 [-]: CLOSURE   R2 43        ; R2 := closure(Function #121.44)
237 [-]: SETTABLE  R1 K146 R2   ; R1["_joinSquadChannel"] := R2
238 [-]: CLOSURE   R2 44        ; R2 := closure(Function #121.45)
239 [-]: SETTABLE  R1 K147 R2   ; R1["_updateSquad"] := R2
240 [-]: CLOSURE   R2 45        ; R2 := closure(Function #121.46)
241 [-]: GETUPVAL  R0 U1        ; R0 := U1
242 [-]: SETTABLE  R1 K148 R2   ; R1["_updateHub"] := R2
243 [-]: CLOSURE   R2 46        ; R2 := closure(Function #121.47)
244 [-]: SETTABLE  R1 K149 R2   ; R1["_getClanChannelPrefix"] := R2
245 [-]: CLOSURE   R2 47        ; R2 := closure(Function #121.48)
246 [-]: SETTABLE  R1 K150 R2   ; R1["_getCouncilChannelPrefix"] := R2
247 [-]: CLOSURE   R2 48        ; R2 := closure(Function #121.49)
248 [-]: SETTABLE  R1 K151 R2   ; R1["_getRecruitingChannelPrefix"] := R2
249 [-]: CLOSURE   R2 49        ; R2 := closure(Function #121.50)
250 [-]: SETTABLE  R1 K152 R2   ; R1["_getTradeChannelPrefix"] := R2
251 [-]: CLOSURE   R2 50        ; R2 := closure(Function #121.51)
252 [-]: SETTABLE  R1 K153 R2   ; R1["_getQAChannelPrefix"] := R2
253 [-]: CLOSURE   R2 51        ; R2 := closure(Function #121.52)
254 [-]: SETTABLE  R1 K154 R2   ; R1["_getAllianceChannelPrefix"] := R2
255 [-]: CLOSURE   R2 52        ; R2 := closure(Function #121.53)
256 [-]: SETTABLE  R1 K155 R2   ; R1["_getPrivateChatChannelPrefix"] := R2
257 [-]: CLOSURE   R2 53        ; R2 := closure(Function #121.54)
258 [-]: GETUPVAL  R0 U0        ; R0 := U0
259 [-]: GETUPVAL  R0 U1        ; R0 := U1
260 [-]: SETTABLE  R1 K156 R2   ; R1["_getHubChannelPrefix"] := R2
261 [-]: CLOSURE   R2 54        ; R2 := closure(Function #121.55)
262 [-]: SETTABLE  R1 K157 R2   ; R1["_updateCouncil"] := R2
263 [-]: CLOSURE   R2 55        ; R2 := closure(Function #121.56)
264 [-]: SETTABLE  R1 K158 R2   ; R1["_getRecruitingChannel"] := R2
265 [-]: CLOSURE   R2 56        ; R2 := closure(Function #121.57)
266 [-]: SETTABLE  R1 K159 R2   ; R1["_getTradeChannel"] := R2
267 [-]: CLOSURE   R2 57        ; R2 := closure(Function #121.58)
268 [-]: SETTABLE  R1 K160 R2   ; R1["_getQAChannel"] := R2
269 [-]: CLOSURE   R2 58        ; R2 := closure(Function #121.59)
270 [-]: SETTABLE  R1 K161 R2   ; R1["SetPendingChannelName"] := R2
271 [-]: CLOSURE   R2 59        ; R2 := closure(Function #121.60)
272 [-]: SETTABLE  R1 K162 R2   ; R1["SetIsChannelEnabled"] := R2
273 [-]: CLOSURE   R2 60        ; R2 := closure(Function #121.61)
274 [-]: GETUPVAL  R0 U23       ; R0 := U23
275 [-]: SETTABLE  R1 K163 R2   ; R1["_updateGlobalChat"] := R2
276 [-]: CLOSURE   R2 61        ; R2 := closure(Function #121.62)
277 [-]: GETUPVAL  R0 U24       ; R0 := U24
278 [-]: GETUPVAL  R0 U0        ; R0 := U0
279 [-]: SETTABLE  R1 K164 R2   ; R1["_updateAlliance"] := R2
280 [-]: CLOSURE   R2 62        ; R2 := closure(Function #121.63)
281 [-]: GETUPVAL  R0 U25       ; R0 := U25
282 [-]: GETUPVAL  R0 U0        ; R0 := U0
283 [-]: SETTABLE  R1 K165 R2   ; R1["_updateClan"] := R2
284 [-]: CLOSURE   R2 63        ; R2 := closure(Function #121.64)
285 [-]: SETTABLE  R1 K166 R2   ; R1["UpdateFadeOut"] := R2
286 [-]: CLOSURE   R2 64        ; R2 := closure(Function #121.65)
287 [-]: GETUPVAL  R0 U0        ; R0 := U0
288 [-]: SETTABLE  R1 K167 R2   ; R1["UpdateFlashingElement"] := R2
289 [-]: CLOSURE   R2 65        ; R2 := closure(Function #121.66)
290 [-]: GETUPVAL  R0 U26       ; R0 := U26
291 [-]: GETUPVAL  R0 U27       ; R0 := U27
292 [-]: GETUPVAL  R0 U28       ; R0 := U28
293 [-]: GETUPVAL  R0 U29       ; R0 := U29
294 [-]: GETUPVAL  R0 U30       ; R0 := U30
295 [-]: GETUPVAL  R0 U0        ; R0 := U0
296 [-]: GETUPVAL  R0 U31       ; R0 := U31
297 [-]: GETUPVAL  R0 U32       ; R0 := U32
298 [-]: GETUPVAL  R0 U33       ; R0 := U33
299 [-]: GETUPVAL  R0 U34       ; R0 := U34
300 [-]: GETUPVAL  R0 U35       ; R0 := U35
301 [-]: SETTABLE  R1 K168 R2   ; R1["Update"] := R2
302 [-]: CLOSURE   R2 66        ; R2 := closure(Function #121.67)
303 [-]: GETUPVAL  R0 U0        ; R0 := U0
304 [-]: SETTABLE  R1 K169 R2   ; R1["SetCompressed"] := R2
305 [-]: CLOSURE   R2 67        ; R2 := closure(Function #121.68)
306 [-]: GETUPVAL  R0 U0        ; R0 := U0
307 [-]: GETUPVAL  R0 U36       ; R0 := U36
308 [-]: SETTABLE  R1 K170 R2   ; R1["SetPosition"] := R2
309 [-]: CLOSURE   R2 68        ; R2 := closure(Function #121.69)
310 [-]: GETUPVAL  R0 U0        ; R0 := U0
311 [-]: SETTABLE  R1 K171 R2   ; R1["SetMinMaxBtnPos"] := R2
312 [-]: CLOSURE   R2 69        ; R2 := closure(Function #121.70)
313 [-]: GETUPVAL  R0 U34       ; R0 := U34
314 [-]: SETTABLE  R1 K172 R2   ; R1["SetSize"] := R2
315 [-]: CLOSURE   R2 70        ; R2 := closure(Function #121.71)
316 [-]: SETTABLE  R1 K173 R2   ; R1["GetActivePanel"] := R2
317 [-]: CLOSURE   R2 71        ; R2 := closure(Function #121.72)
318 [-]: SETTABLE  R1 K174 R2   ; R1["SetFontSize"] := R2
319 [-]: CLOSURE   R2 72        ; R2 := closure(Function #121.73)
320 [-]: SETTABLE  R1 K175 R2   ; R1["ResetFadeOutTimer"] := R2
321 [-]: CLOSURE   R2 73        ; R2 := closure(Function #121.74)
322 [-]: GETUPVAL  R0 U0        ; R0 := U0
323 [-]: SETTABLE  R1 K176 R2   ; R1["ToggleSelectedElement"] := R2
324 [-]: RETURN    R1 2         ; return R1
325 [-]: RETURN    R0 1         ; return 


; Function #121.1:
;
; Name:            
; Defined at line: 5864
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x03f57322
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: EQ        0 R3 K1      ; if R3 ~= 0.000000 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: OP_LOADBOOL R3 0 1       ; R3 := false; PC := 7
  7 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
  8 [-]: CONST     R4 0         ; R4 := 0.000000
  9 [-]: TEST      R3 1         ; if R3 then PC := 42
 10 [-]: JMP       42           ; PC := 42
 11 [-]: EQ        0 R2 K2      ; if R2 ~= "Reconnect" then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: SETTABLE  R0 K3 K4     ; R0["mReconnecting"] := false
 14 [-]: JMP       24           ; PC := 24
 15 [-]: EQ        1 R2 K5      ; if R2 == "" then PC := 24
 16 [-]: JMP       24           ; PC := 24
 17 [-]: SELF      R5 R0 K6     ; R6 := R0; R5 := R0[0xd4f2405e]
 18 [-]: MOVE      R7 R2        ; R7 := R2
 19 [-]: CALL      R5 3 1       ; R5(R6,R7)
 20 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["mIsConnected"]
 21 [-]: TEST      R5 0         ; if not R5 then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: SETTABLE  R0 K3 K8     ; R0["mReconnecting"] := true
 24 [-]: GETGLOBAL R5 K9        ; R5 := 0x7b998233
 25 [-]: GETGLOBAL R6 K10       ; R6 := 0xe7f2b02f
 26 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 27 [-]: TEST      R5 0         ; if not R5 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: GETGLOBAL R5 K10       ; R5 := 0xe7f2b02f
 31 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0x0b151d80]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: GETGLOBAL R6 K9        ; R6 := 0x7b998233
 34 [-]: MOVE      R7 R5        ; R7 := R5
 35 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 36 [-]: TEST      R6 1         ; if R6 then PC := 53
 37 [-]: JMP       53           ; PC := 53
 38 [-]: SELF      R6 R5 K12    ; R7 := R5; R6 := R5[0x4f2bd636]
 39 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 40 [-]: MOVE      R4 R6        ; R4 := R6
 41 [-]: JMP       53           ; PC := 53
 42 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mReconnecting"]
 43 [-]: TEST      R6 0         ; if not R6 then PC := 53
 44 [-]: JMP       53           ; PC := 53
 45 [-]: SELF      R6 R0 K6     ; R7 := R0; R6 := R0[0xd4f2405e]
 46 [-]: GETGLOBAL R8 K13       ; R8 := 0xae91e43b
 47 [-]: SELF      R8 R8 K14    ; R9 := R8; R8 := R8[0x42b04007]
 48 [-]: LOADK     R10 K15      ; R10 := "/Lotus/Language/Menu/Chat_Reconnected"
 49 [-]: OP_LOADBOOL R11 0 0      ; R11 := false
 50 [-]: CALL      R8 4 0       ; R8,... := R8(R9,R10,R11)
 51 [-]: CALL      R6 0 1       ; R6(R7,...)
 52 [-]: SETTABLE  R0 K3 K4     ; R0["mReconnecting"] := false
 53 [-]: SETTABLE  R0 K7 R3     ; R0["mIsConnected"] := R3
 54 [-]: GETGLOBAL R6 K13       ; R6 := 0xae91e43b
 55 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6[0xc0a3774b]
 56 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["mClipName"]
 57 [-]: LOADK     R9 K18       ; R9 := "TabMenu.WindowTitle.Arrows"
 58 [-]: CONST     R10 11       ; R10 := 11.000000
 59 [-]: GETTABLE  R11 R0 K7    ; R11 := R0["mIsConnected"]
 60 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 61 [-]: GETGLOBAL R6 K13       ; R6 := 0xae91e43b
 62 [-]: SELF      R6 R6 K16    ; R7 := R6; R6 := R6[0xc0a3774b]
 63 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["mClipName"]
 64 [-]: LOADK     R9 K19       ; R9 := "TabMenu.WindowTitle.Spinner"
 65 [-]: CONST     R10 11       ; R10 := 11.000000
 66 [-]: GETTABLE  R11 R0 K7    ; R11 := R0["mIsConnected"]
 67 [-]: TEST      R11 1        ; if R11 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: LT        1 R4 K20     ; if R4 < 120.000000 then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: OP_LOADBOOL R11 0 1      ; R11 := false; PC := 72
 72 [-]: OP_LOADBOOL R11 1 0      ; R11 := true
 73 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 74 [-]: TEST      R3 0         ; if not R3 then PC := 101
 75 [-]: JMP       101          ; PC := 101
 76 [-]: GETTABLE  R6 R0 K21    ; R6 := R0["mPendingChannels"]
 77 [-]: LEN       R6 R6        ; R6 := # R6
 78 [-]: LT        0 K1 R6      ; if 0.000000 >= R6 then PC := 179
 79 [-]: JMP       179          ; PC := 179
 80 [-]: GETGLOBAL R6 K10       ; R6 := 0xe7f2b02f
 81 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0x0b151d80]
 82 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 83 [-]: GETGLOBAL R7 K9        ; R7 := 0x7b998233
 84 [-]: MOVE      R8 R6        ; R8 := R6
 85 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 86 [-]: TEST      R7 1         ; if R7 then PC := 98
 87 [-]: JMP       98           ; PC := 98
 88 [-]: CONST     R7 1         ; R7 := 1.000000
 89 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["mPendingChannels"]
 90 [-]: LEN       R8 R8        ; R8 := # R8
 91 [-]: CONST     R9 1         ; R9 := 1.000000
 92 [-]: FORPREP   R7 97        ; R7 -= R9; PC := 97
 93 [-]: SELF      R11 R6 K22   ; R12 := R6; R11 := R6[0x3d07d47d]
 94 [-]: GETTABLE  R13 R0 K21   ; R13 := R0["mPendingChannels"]
 95 [-]: GETTABLE  R13 R13 R10  ; R13 := R13[R10]
 96 [-]: CALL      R11 3 1      ; R11(R12,R13)
 97 [-]: FORLOOP   R7 93        ; R7 += R9; if R7 <= R8 then begin PC := 93; R10 := R7 end
 98 [-]: NEWTABLE  R11 0 0      ; R11 := {}
 99 [-]: SETTABLE  R0 K21 R11   ; R0["mPendingChannels"] := R11
100 [-]: JMP       179          ; PC := 179
101 [-]: GETGLOBAL R11 K9       ; R11 := 0x7b998233
102 [-]: GETGLOBAL R12 K23      ; R12 := mWindow
103 [-]: GETTABLE  R12 R12 K24  ; R12 := R12["mPanelList"]
104 [-]: CALL      R11 2 2      ; R11 := R11(R12)
105 [-]: TEST      R11 1        ; if R11 then PC := 179
106 [-]: JMP       179          ; PC := 179
107 [-]: GETGLOBAL R11 K25      ; R11 := 0xcfc01047
108 [-]: GETGLOBAL R12 K23      ; R12 := mWindow
109 [-]: GETTABLE  R12 R12 K24  ; R12 := R12["mPanelList"]
110 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
111 [-]: JMP       177          ; PC := 177
112 [-]: LOADK     R16 K26      ; R16 := "#"
113 [-]: GETTABLE  R17 R15 K27  ; R17 := R15["mChannelName"]
114 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
115 [-]: GETTABLE  R17 R15 K28  ; R17 := R15["mChannelType"]
116 [-]: GETTABLE  R18 R0 K29   ; R18 := R0["CHANNEL_GLOBAL"]
117 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 122
118 [-]: JMP       122          ; PC := 122
119 [-]: GETTABLE  R17 R0 K30   ; R17 := R0["mPendingGlobalChannelName"]
120 [-]: EQ        0 R17 K31    ; if R17 ~= nil then PC := 151
121 [-]: JMP       151          ; PC := 151
122 [-]: GETTABLE  R17 R15 K28  ; R17 := R15["mChannelType"]
123 [-]: GETTABLE  R18 R0 K32   ; R18 := R0["CHANNEL_RECRUITING"]
124 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 129
125 [-]: JMP       129          ; PC := 129
126 [-]: GETTABLE  R17 R0 K33   ; R17 := R0["mPendingRecruitingChannelName"]
127 [-]: EQ        0 R17 K31    ; if R17 ~= nil then PC := 151
128 [-]: JMP       151          ; PC := 151
129 [-]: GETTABLE  R17 R15 K28  ; R17 := R15["mChannelType"]
130 [-]: GETTABLE  R18 R0 K34   ; R18 := R0["CHANNEL_TRADE"]
131 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 136
132 [-]: JMP       136          ; PC := 136
133 [-]: GETTABLE  R17 R0 K35   ; R17 := R0["mPendingTradeChannelName"]
134 [-]: EQ        0 R17 K31    ; if R17 ~= nil then PC := 151
135 [-]: JMP       151          ; PC := 151
136 [-]: GETTABLE  R17 R15 K28  ; R17 := R15["mChannelType"]
137 [-]: GETTABLE  R18 R0 K36   ; R18 := R0["CHANNEL_QA"]
138 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 143
139 [-]: JMP       143          ; PC := 143
140 [-]: GETTABLE  R17 R0 K37   ; R17 := R0["mPendingQAChannelName"]
141 [-]: EQ        0 R17 K31    ; if R17 ~= nil then PC := 151
142 [-]: JMP       151          ; PC := 151
143 [-]: GETTABLE  R17 R15 K28  ; R17 := R15["mChannelType"]
144 [-]: GETTABLE  R18 R0 K38   ; R18 := R0["CHANNEL_COUNCIL"]
145 [-]: EQ        0 R17 R18    ; if R17 ~= R18 then PC := 150
146 [-]: JMP       150          ; PC := 150
147 [-]: GETTABLE  R17 R0 K39   ; R17 := R0["mPendingCouncilChannelName"]
148 [-]: EQ        0 R17 K31    ; if R17 ~= nil then PC := 151
149 [-]: JMP       151          ; PC := 151
150 [-]: OP_LOADBOOL R17 0 1      ; R17 := false; PC := 151
151 [-]: OP_LOADBOOL R17 1 0      ; R17 := true
152 [-]: TEST      R17 1        ; if R17 then PC := 176
153 [-]: JMP       176          ; PC := 176
154 [-]: GETGLOBAL R18 K40      ; R18 := 0x7f5022cf
155 [-]: GETTABLE  R18 R18 K41  ; R82 := R18[0x1a94c9cc]
156 [-]: MOVE      R19 R16      ; R19 := R16
157 [-]: CONST     R20 2        ; R20 := 2.000000
158 [-]: CONST     R21 2        ; R21 := 2.000000
159 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
160 [-]: GETTABLE  R19 R0 K42   ; R82 := R19[0xfe8039a9]
161 [-]: CALL      R19 1 2      ; R19 := R19()
162 [-]: EQ        1 R18 R19    ; if R18 == R19 then PC := 176
163 [-]: JMP       176          ; PC := 176
164 [-]: GETUPVAL  R18 U0       ; R18 := U0
165 [-]: GETTABLE  R18 R18 K43  ; R82 := R18[0x609b196e]
166 [-]: GETTABLE  R19 R0 K21   ; R19 := R0["mPendingChannels"]
167 [-]: MOVE      R20 R16      ; R20 := R16
168 [-]: CALL      R18 3 2      ; R18 := R18(R19,R20)
169 [-]: EQ        0 R18 K44    ; if R18 ~= -1.000000 then PC := 176
170 [-]: JMP       176          ; PC := 176
171 [-]: GETGLOBAL R18 K45      ; R18 := 0x33bdd652
172 [-]: GETTABLE  R18 R18 K46  ; R82 := R18[0x23d5322f]
173 [-]: GETTABLE  R19 R0 K21   ; R19 := R0["mPendingChannels"]
174 [-]: MOVE      R20 R16      ; R20 := R16
175 [-]: CALL      R18 3 1      ; R18(R19,R20)
176 [-]: SETTABLE  R15 K47 K4   ; R15["mInitialPopulationDone"] := false
177 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 112; R13 := R14 end
178 [-]: JMP       112          ; PC := 112
179 [-]: RETURN    R0 1         ; return 


; Function #121.2:
;
; Name:            
; Defined at line: 5936
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  37

  1 [-]: CONST     R3 100       ; R3 := 100.000000
  2 [-]: NEWTABLE  R4 2 0       ; R4 := {}
  3 [-]: LOADK     R5 K0        ; R5 := "Window.TabMenu"
  4 [-]: LOADK     R6 K1        ; R6 := "Window.WindowStatus"
  5 [-]: SETLIST   R4 2 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
  6 [-]: NEWTABLE  R5 14 0      ; R5 := {}
  7 [-]: LOADK     R6 K2        ; R6 := "Window.FontIncrease"
  8 [-]: LOADK     R7 K3        ; R7 := "Window.TabbedChatPanel.ScrollBar"
  9 [-]: LOADK     R8 K4        ; R8 := "Window.TabbedChatPanel.Fill"
 10 [-]: LOADK     R9 K5        ; R9 := "Window.TabbedChatPanel.FillBlurer"
 11 [-]: LOADK     R10 K6       ; R10 := "Window.TabbedChatPanel.EdgeLeft"
 12 [-]: LOADK     R11 K7       ; R11 := "Window.TabbedChatPanel.EdgeRight"
 13 [-]: LOADK     R12 K8       ; R12 := "Window.TabbedChatPanel.DecoLine"
 14 [-]: LOADK     R13 K9       ; R13 := "Window.TabbedChatPanel.DecoCurve"
 15 [-]: LOADK     R14 K10      ; R14 := "Window.TabbedChatPanel.FilterBtn"
 16 [-]: LOADK     R15 K11      ; R15 := "Window.TabbedChatPanel.FilterList"
 17 [-]: LOADK     R16 K12      ; R16 := "Window.TabbedChatPanel.FilterListMask"
 18 [-]: LOADK     R17 K13      ; R17 := "Window.SendMessageBar"
 19 [-]: LOADK     R18 K14      ; R18 := "Window.UserPanel"
 20 [-]: LOADK     R19 K15      ; R19 := "Window.MouseCatcherBtn"
 21 [-]: SETLIST   R5 14 1      ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 14
 22 [-]: GETGLOBAL R6 K16       ; R6 := mChatHidden
 23 [-]: TEST      R6 0         ; if not R6 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: GETTABLE  R1 R0 K17    ; R1 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 26 [-]: GETGLOBAL R6 K18       ; R6 := 0x9ba7909f
 27 [-]: SELF      R6 R6 K19    ; R7 := R6; R6 := R6[0xbf9494fc]
 28 [-]: LOADK     R8 K20       ; R8 := "Lotus.EnableTraceLogging"
 29 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 30 [-]: TEST      R6 0         ; if not R6 then PC := 38
 31 [-]: JMP       38           ; PC := 38
 32 [-]: GETGLOBAL R6 K21       ; R6 := 0x3d106989
 33 [-]: LOADK     R7 K22       ; R7 := "SetVisualMode("
 34 [-]: MOVE      R8 R1        ; R8 := R1
 35 [-]: LOADK     R9 K23       ; R9 := ")"
 36 [-]: CONCAT    R7 R7 R9     ; R7 := R7 .. R8 .. R9
 37 [-]: CALL      R6 2 1       ; R6(R7)
 38 [-]: GETGLOBAL R6 K24       ; R6 := 0x34291f5c
 39 [-]: GETTABLE  R6 R6 K25    ; R82 := R6[0x1467d5f4]
 40 [-]: CALL      R6 1 2       ; R6 := R6()
 41 [-]: TEST      R6 0         ; if not R6 then PC := 64
 42 [-]: JMP       64           ; PC := 64
 43 [-]: GETGLOBAL R6 K26       ; R6 := 0x33bdd652
 44 [-]: GETTABLE  R6 R6 K27    ; R82 := R6[0x23d5322f]
 45 [-]: MOVE      R7 R5        ; R7 := R5
 46 [-]: LOADK     R8 K28       ; R8 := "Window.TabbedChatPanel.FilterCallout"
 47 [-]: CALL      R6 3 1       ; R6(R7,R8)
 48 [-]: GETGLOBAL R6 K29       ; R6 := _T
 49 [-]: GETTABLE  R6 R6 K30    ; R6 := R6["TopMenuOpen"]
 50 [-]: TEST      R6 0         ; if not R6 then PC := 60
 51 [-]: JMP       60           ; PC := 60
 52 [-]: GETTABLE  R6 R0 K31    ; R6 := R0["VISUAL_MODE_MENU_FULL"]
 53 [-]: EQ        0 R1 R6      ; if R1 ~= R6 then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETGLOBAL R6 K32       ; R6 := 0xae91e43b
 56 [-]: SELF      R6 R6 K33    ; R7 := R6; R6 := R6[0x58bec6d6]
 57 [-]: LOADK     R8 K34       ; R8 := 0.600000
 58 [-]: CALL      R6 3 1       ; R6(R7,R8)
 59 [-]: JMP       64           ; PC := 64
 60 [-]: GETGLOBAL R6 K32       ; R6 := 0xae91e43b
 61 [-]: SELF      R6 R6 K33    ; R7 := R6; R6 := R6[0x58bec6d6]
 62 [-]: CONST     R8 0         ; R8 := 0.000000
 63 [-]: CALL      R6 3 1       ; R6(R7,R8)
 64 [-]: LOADNIL   R6 R6        ; R6 := nil
 65 [-]: GETGLOBAL R7 K35       ; R7 := mWindow
 66 [-]: SELF      R7 R7 K36    ; R8 := R7; R7 := R7[0x8b75da5a]
 67 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 68 [-]: TEST      R7 0         ; if not R7 then PC := 73
 69 [-]: JMP       73           ; PC := 73
 70 [-]: GETUPVAL  R7 U0        ; R7 := U0
 71 [-]: CALL      R7 1 2       ; R7 := R7()
 72 [-]: MOVE      R6 R7        ; R6 := R7
 73 [-]: GETTABLE  R7 R0 K31    ; R7 := R0["VISUAL_MODE_MENU_FULL"]
 74 [-]: EQ        1 R1 R7      ; if R1 == R7 then PC := 79
 75 [-]: JMP       79           ; PC := 79
 76 [-]: GETTABLE  R7 R0 K37    ; R7 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
 77 [-]: EQ        0 R1 R7      ; if R1 ~= R7 then PC := 104
 78 [-]: JMP       104          ; PC := 104
 79 [-]: GETGLOBAL R7 K32       ; R7 := 0xae91e43b
 80 [-]: SELF      R7 R7 K38    ; R8 := R7; R7 := R7[0x0c33ebb2]
 81 [-]: LOADK     R9 K39       ; R9 := "Window"
 82 [-]: LOADK     R10 K40      ; R10 := "noMenuSelection"
 83 [-]: OP_LOADBOOL R11 0 0      ; R11 := false
 84 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 85 [-]: GETGLOBAL R7 K32       ; R7 := 0xae91e43b
 86 [-]: SELF      R7 R7 K38    ; R8 := R7; R7 := R7[0x0c33ebb2]
 87 [-]: LOADK     R9 K0        ; R9 := "Window.TabMenu"
 88 [-]: LOADK     R10 K40      ; R10 := "noMenuSelection"
 89 [-]: OP_LOADBOOL R11 0 0      ; R11 := false
 90 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 91 [-]: GETGLOBAL R7 K41       ; R7 := 0xcb79539e
 92 [-]: EQ        1 R7 K42     ; if R7 == nil then PC := 128
 93 [-]: JMP       128          ; PC := 128
 94 [-]: EQ        1 R6 K42     ; if R6 == nil then PC := 128
 95 [-]: JMP       128          ; PC := 128
 96 [-]: GETGLOBAL R7 K41       ; R7 := 0xcb79539e
 97 [-]: SELF      R7 R7 K43    ; R8 := R7; R7 := R7[0xa9136b2f]
 98 [-]: GETGLOBAL R9 K44       ; R9 := 0x0469f296
 99 [-]: LOADK     R10 K45      ; R10 := "IN_CHAT_VIEW_TIME"
100 [-]: CALL      R9 2 2       ; R9 := R9(R10)
101 [-]: MOVE      R10 R6       ; R10 := R6
102 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
103 [-]: JMP       128          ; PC := 128
104 [-]: GETGLOBAL R7 K32       ; R7 := 0xae91e43b
105 [-]: SELF      R7 R7 K38    ; R8 := R7; R7 := R7[0x0c33ebb2]
106 [-]: LOADK     R9 K39       ; R9 := "Window"
107 [-]: LOADK     R10 K40      ; R10 := "noMenuSelection"
108 [-]: OP_LOADBOOL R11 1 0      ; R11 := true
109 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
110 [-]: GETGLOBAL R7 K32       ; R7 := 0xae91e43b
111 [-]: SELF      R7 R7 K38    ; R8 := R7; R7 := R7[0x0c33ebb2]
112 [-]: LOADK     R9 K0        ; R9 := "Window.TabMenu"
113 [-]: LOADK     R10 K40      ; R10 := "noMenuSelection"
114 [-]: OP_LOADBOOL R11 1 0      ; R11 := true
115 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
116 [-]: GETGLOBAL R7 K41       ; R7 := 0xcb79539e
117 [-]: EQ        1 R7 K42     ; if R7 == nil then PC := 128
118 [-]: JMP       128          ; PC := 128
119 [-]: EQ        1 R6 K42     ; if R6 == nil then PC := 128
120 [-]: JMP       128          ; PC := 128
121 [-]: GETGLOBAL R7 K41       ; R7 := 0xcb79539e
122 [-]: SELF      R7 R7 K46    ; R8 := R7; R7 := R7[0xa9188a47]
123 [-]: GETGLOBAL R9 K44       ; R9 := 0x0469f296
124 [-]: LOADK     R10 K45      ; R10 := "IN_CHAT_VIEW_TIME"
125 [-]: CALL      R9 2 2       ; R9 := R9(R10)
126 [-]: MOVE      R10 R6       ; R10 := R6
127 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
128 [-]: GETTABLE  R7 R0 K31    ; R7 := R0["VISUAL_MODE_MENU_FULL"]
129 [-]: EQ        1 R1 R7      ; if R1 == R7 then PC := 135
130 [-]: JMP       135          ; PC := 135
131 [-]: GETTABLE  R7 R0 K37    ; R7 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
132 [-]: EQ        1 R1 R7      ; if R1 == R7 then PC := 135
133 [-]: JMP       135          ; PC := 135
134 [-]: OP_LOADBOOL R7 0 1       ; R7 := false; PC := 135
135 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
136 [-]: GETGLOBAL R8 K29       ; R8 := _T
137 [-]: SETTABLE  R8 K47 R7    ; R8["ChatMaximized"] := R7
138 [-]: GETGLOBAL R8 K48       ; R8 := mInSubScreen
139 [-]: TEST      R8 1         ; if R8 then PC := 173
140 [-]: JMP       173          ; PC := 173
141 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
142 [-]: EQ        1 R1 R8      ; if R1 == R8 then PC := 147
143 [-]: JMP       147          ; PC := 147
144 [-]: GETGLOBAL R8 K16       ; R8 := mChatHidden
145 [-]: TEST      R8 0         ; if not R8 then PC := 156
146 [-]: JMP       156          ; PC := 156
147 [-]: GETGLOBAL R8 K32       ; R8 := 0xae91e43b
148 [-]: SELF      R8 R8 K49    ; R9 := R8; R8 := R8[0xbed40e9c]
149 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
150 [-]: CALL      R8 3 1       ; R8(R9,R10)
151 [-]: GETGLOBAL R8 K32       ; R8 := 0xae91e43b
152 [-]: SELF      R8 R8 K50    ; R9 := R8; R8 := R8[0xbc838db9]
153 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
154 [-]: CALL      R8 3 1       ; R8(R9,R10)
155 [-]: JMP       173          ; PC := 173
156 [-]: GETTABLE  R8 R0 K31    ; R8 := R0["VISUAL_MODE_MENU_FULL"]
157 [-]: EQ        1 R1 R8      ; if R1 == R8 then PC := 165
158 [-]: JMP       165          ; PC := 165
159 [-]: GETTABLE  R8 R0 K37    ; R8 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
160 [-]: EQ        1 R1 R8      ; if R1 == R8 then PC := 165
161 [-]: JMP       165          ; PC := 165
162 [-]: GETTABLE  R8 R0 K51    ; R8 := R0["VISUAL_MODE_MENU_SIMPLE"]
163 [-]: EQ        0 R1 R8      ; if R1 ~= R8 then PC := 173
164 [-]: JMP       173          ; PC := 173
165 [-]: GETGLOBAL R8 K32       ; R8 := 0xae91e43b
166 [-]: SELF      R8 R8 K49    ; R9 := R8; R8 := R8[0xbed40e9c]
167 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
168 [-]: CALL      R8 3 1       ; R8(R9,R10)
169 [-]: GETGLOBAL R8 K32       ; R8 := 0xae91e43b
170 [-]: SELF      R8 R8 K50    ; R9 := R8; R8 := R8[0xbc838db9]
171 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
172 [-]: CALL      R8 3 1       ; R8(R9,R10)
173 [-]: TEST      R7 0         ; if not R7 then PC := 211
174 [-]: JMP       211          ; PC := 211
175 [-]: GETGLOBAL R8 K52       ; R8 := 0x7b998233
176 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["mUserPanel"]
177 [-]: CALL      R8 2 2       ; R8 := R8(R9)
178 [-]: TEST      R8 1         ; if R8 then PC := 194
179 [-]: JMP       194          ; PC := 194
180 [-]: SELF      R8 R0 K54    ; R9 := R0; R8 := R0[0x8ec8f0d5]
181 [-]: GETTABLE  R10 R0 K53   ; R10 := R0["mUserPanel"]
182 [-]: GETTABLE  R10 R10 K35  ; R10 := R10["mWindow"]
183 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
184 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["mUserPanel"]
185 [-]: SELF      R9 R9 K55    ; R10 := R9; R9 := R9[0xf1243bbe]
186 [-]: GETTABLE  R11 R8 K56   ; R11 := R8["height"]
187 [-]: CALL      R9 3 1       ; R9(R10,R11)
188 [-]: GETTABLE  R9 R0 K53    ; R9 := R0["mUserPanel"]
189 [-]: GETTABLE  R9 R9 K57    ; R9 := R9["mListControl"]
190 [-]: SELF      R9 R9 K58    ; R10 := R9; R9 := R9[0x71e9ac81]
191 [-]: LOADNIL   R11 R12      ; R11 := R12 := nil
192 [-]: OP_LOADBOOL R13 1 0      ; R13 := true
193 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
194 [-]: SELF      R9 R0 K36    ; R10 := R0; R9 := R0[0x8b75da5a]
195 [-]: CALL      R9 2 2       ; R9 := R9(R10)
196 [-]: GETGLOBAL R10 K52      ; R10 := 0x7b998233
197 [-]: MOVE      R11 R9       ; R11 := R9
198 [-]: CALL      R10 2 2      ; R10 := R10(R11)
199 [-]: TEST      R10 1        ; if R10 then PC := 224
200 [-]: JMP       224          ; PC := 224
201 [-]: GETGLOBAL R10 K52      ; R10 := 0x7b998233
202 [-]: GETTABLE  R11 R0 K59   ; R11 := R0["mTabMenu"]
203 [-]: CALL      R10 2 2      ; R10 := R10(R11)
204 [-]: TEST      R10 1        ; if R10 then PC := 224
205 [-]: JMP       224          ; PC := 224
206 [-]: GETTABLE  R10 R0 K59   ; R10 := R0["mTabMenu"]
207 [-]: SELF      R10 R10 K60  ; R11 := R10; R10 := R10[0x3bda3404]
208 [-]: GETTABLE  R12 R9 K61   ; R12 := R9["mTabElement"]
209 [-]: CALL      R10 3 1      ; R10(R11,R12)
210 [-]: JMP       224          ; PC := 224
211 [-]: GETGLOBAL R10 K32      ; R10 := 0xae91e43b
212 [-]: SELF      R10 R10 K62  ; R11 := R10; R10 := R10[0x40eb8ac7]
213 [-]: CALL      R10 2 2      ; R10 := R10(R11)
214 [-]: GETGLOBAL R11 K52      ; R11 := 0x7b998233
215 [-]: MOVE      R12 R10      ; R12 := R10
216 [-]: CALL      R11 2 2      ; R11 := R11(R12)
217 [-]: TEST      R11 1        ; if R11 then PC := 224
218 [-]: JMP       224          ; PC := 224
219 [-]: EQ        0 R10 K63    ; if R10 ~= "MessageBox" then PC := 224
220 [-]: JMP       224          ; PC := 224
221 [-]: GETGLOBAL R11 K32      ; R11 := 0xae91e43b
222 [-]: SELF      R11 R11 K64  ; R12 := R11; R11 := R11[0x80dc5f76]
223 [-]: CALL      R11 2 1      ; R11(R12)
224 [-]: GETTABLE  R11 R0 K31   ; R11 := R0["VISUAL_MODE_MENU_FULL"]
225 [-]: EQ        1 R1 R11     ; if R1 == R11 then PC := 233
226 [-]: JMP       233          ; PC := 233
227 [-]: GETTABLE  R11 R0 K37   ; R11 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
228 [-]: EQ        1 R1 R11     ; if R1 == R11 then PC := 233
229 [-]: JMP       233          ; PC := 233
230 [-]: GETTABLE  R11 R0 K51   ; R11 := R0["VISUAL_MODE_MENU_SIMPLE"]
231 [-]: EQ        0 R1 R11     ; if R1 ~= R11 then PC := 239
232 [-]: JMP       239          ; PC := 239
233 [-]: GETGLOBAL R11 K32      ; R11 := 0xae91e43b
234 [-]: SELF      R11 R11 K65  ; R12 := R11; R11 := R11[0x67bc869f]
235 [-]: LOADK     R13 K66      ; R13 := "Window.Hint"
236 [-]: CONST     R14 10       ; R14 := 10.000000
237 [-]: CONST     R15 0        ; R15 := 0.000000
238 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
239 [-]: GETTABLE  R11 R0 K31   ; R11 := R0["VISUAL_MODE_MENU_FULL"]
240 [-]: EQ        0 R1 R11     ; if R1 ~= R11 then PC := 246
241 [-]: JMP       246          ; PC := 246
242 [-]: GETTABLE  R11 R0 K67   ; R11 := R0["mVisualMode"]
243 [-]: GETTABLE  R12 R0 K31   ; R12 := R0["VISUAL_MODE_MENU_FULL"]
244 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 253
245 [-]: JMP       253          ; PC := 253
246 [-]: GETTABLE  R11 R0 K37   ; R11 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
247 [-]: EQ        0 R1 R11     ; if R1 ~= R11 then PC := 341
248 [-]: JMP       341          ; PC := 341
249 [-]: GETTABLE  R11 R0 K67   ; R11 := R0["mVisualMode"]
250 [-]: GETTABLE  R12 R0 K37   ; R12 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
251 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 341
252 [-]: JMP       341          ; PC := 341
253 [-]: SETTABLE  R0 K67 R1    ; R0["mVisualMode"] := R1
254 [-]: SELF      R11 R0 K68   ; R12 := R0; R11 := R0[0x94b441ef]
255 [-]: OP_LOADBOOL R13 0 0      ; R13 := false
256 [-]: NOT       R14 R2       ; R14 := not R2
257 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
258 [-]: GETGLOBAL R11 K69      ; R11 := 0xcfc01047
259 [-]: GETTABLE  R12 R0 K70   ; R12 := R0["mPanelList"]
260 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
261 [-]: JMP       272          ; PC := 272
262 [-]: GETGLOBAL R16 K52      ; R16 := 0x7b998233
263 [-]: MOVE      R17 R15      ; R17 := R15
264 [-]: CALL      R16 2 2      ; R16 := R16(R17)
265 [-]: TEST      R16 1        ; if R16 then PC := 272
266 [-]: JMP       272          ; PC := 272
267 [-]: GETTABLE  R16 R0 K71   ; R16 := R0["mActivePanelName"]
268 [-]: EQ        1 R14 R16    ; if R14 == R16 then PC := 272
269 [-]: JMP       272          ; PC := 272
270 [-]: SELF      R16 R15 K72  ; R17 := R15; R16 := R15[0x3bd10f9e]
271 [-]: CALL      R16 2 1      ; R16(R17)
272 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 262; R13 := R14 end
273 [-]: JMP       262          ; PC := 262
274 [-]: GETGLOBAL R16 K52      ; R16 := 0x7b998233
275 [-]: GETTABLE  R17 R0 K70   ; R17 := R0["mPanelList"]
276 [-]: GETTABLE  R18 R0 K71   ; R18 := R0["mActivePanelName"]
277 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
278 [-]: CALL      R16 2 2      ; R16 := R16(R17)
279 [-]: TEST      R16 1        ; if R16 then PC := 287
280 [-]: JMP       287          ; PC := 287
281 [-]: GETTABLE  R16 R0 K70   ; R16 := R0["mPanelList"]
282 [-]: GETTABLE  R17 R0 K71   ; R17 := R0["mActivePanelName"]
283 [-]: GETTABLE  R16 R16 R17  ; R16 := R16[R17]
284 [-]: SELF      R16 R16 K72  ; R17 := R16; R16 := R16[0x3bd10f9e]
285 [-]: CALL      R16 2 1      ; R16(R17)
286 [-]: JMP       311          ; PC := 311
287 [-]: GETGLOBAL R16 K52      ; R16 := 0x7b998233
288 [-]: GETTABLE  R17 R0 K59   ; R17 := R0["mTabMenu"]
289 [-]: CALL      R16 2 2      ; R16 := R16(R17)
290 [-]: TEST      R16 1        ; if R16 then PC := 311
291 [-]: JMP       311          ; PC := 311
292 [-]: GETTABLE  R16 R0 K59   ; R16 := R0["mTabMenu"]
293 [-]: SELF      R16 R16 K73  ; R17 := R16; R16 := R16[0x5fbddc1a]
294 [-]: CALL      R16 2 2      ; R16 := R16(R17)
295 [-]: LT        0 K74 R16    ; if 0.000000 >= R16 then PC := 311
296 [-]: JMP       311          ; PC := 311
297 [-]: GETTABLE  R16 R0 K59   ; R16 := R0["mTabMenu"]
298 [-]: SELF      R16 R16 K75  ; R17 := R16; R16 := R16[0x5465f8f3]
299 [-]: CONST     R18 1        ; R18 := 1.000000
300 [-]: CALL      R16 3 2      ; R16 := R16(R17,R18)
301 [-]: GETGLOBAL R17 K52      ; R17 := 0x7b998233
302 [-]: MOVE      R18 R16      ; R18 := R16
303 [-]: CALL      R17 2 2      ; R17 := R17(R18)
304 [-]: TEST      R17 1        ; if R17 then PC := 311
305 [-]: JMP       311          ; PC := 311
306 [-]: SELF      R17 R0 K76   ; R18 := R0; R17 := R0[0x46610c50]
307 [-]: GETTABLE  R19 R0 K70   ; R19 := R0["mPanelList"]
308 [-]: GETTABLE  R20 R16 K77  ; R20 := R16["ChannelName"]
309 [-]: GETTABLE  R19 R19 R20  ; R19 := R19[R20]
310 [-]: CALL      R17 3 1      ; R17(R18,R19)
311 [-]: GETGLOBAL R17 K24      ; R17 := 0x34291f5c
312 [-]: GETTABLE  R17 R17 K25  ; R82 := R17[0x1467d5f4]
313 [-]: CALL      R17 1 2      ; R17 := R17()
314 [-]: TEST      R17 1        ; if R17 then PC := 349
315 [-]: JMP       349          ; PC := 349
316 [-]: GETGLOBAL R17 K24      ; R17 := 0x34291f5c
317 [-]: GETTABLE  R17 R17 K78  ; R82 := R17[0xe6b41adb]
318 [-]: CALL      R17 1 2      ; R17 := R17()
319 [-]: TEST      R17 1        ; if R17 then PC := 349
320 [-]: JMP       349          ; PC := 349
321 [-]: GETGLOBAL R17 K24      ; R17 := 0x34291f5c
322 [-]: GETTABLE  R17 R17 K79  ; R82 := R17[0x399826a5]
323 [-]: CALL      R17 1 2      ; R17 := R17()
324 [-]: TEST      R17 1        ; if R17 then PC := 349
325 [-]: JMP       349          ; PC := 349
326 [-]: GETGLOBAL R17 K52      ; R17 := 0x7b998233
327 [-]: GETTABLE  R18 R0 K80   ; R18 := R0["mInputPanel"]
328 [-]: CALL      R17 2 2      ; R17 := R17(R18)
329 [-]: TEST      R17 1        ; if R17 then PC := 349
330 [-]: JMP       349          ; PC := 349
331 [-]: GETTABLE  R17 R0 K31   ; R17 := R0["VISUAL_MODE_MENU_FULL"]
332 [-]: EQ        1 R1 R17     ; if R1 == R17 then PC := 337
333 [-]: JMP       337          ; PC := 337
334 [-]: GETTABLE  R17 R0 K37   ; R17 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
335 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 349
336 [-]: JMP       349          ; PC := 349
337 [-]: GETTABLE  R17 R0 K80   ; R17 := R0["mInputPanel"]
338 [-]: SELF      R17 R17 K81  ; R18 := R17; R17 := R17[0x8a543a3f]
339 [-]: CALL      R17 2 1      ; R17(R18)
340 [-]: JMP       349          ; PC := 349
341 [-]: GETTABLE  R17 R0 K51   ; R17 := R0["VISUAL_MODE_MENU_SIMPLE"]
342 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 349
343 [-]: JMP       349          ; PC := 349
344 [-]: SETTABLE  R0 K67 R1    ; R0["mVisualMode"] := R1
345 [-]: SELF      R17 R0 K68   ; R18 := R0; R17 := R0[0x94b441ef]
346 [-]: OP_LOADBOOL R19 1 0      ; R19 := true
347 [-]: NOT       R20 R2       ; R20 := not R2
348 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
349 [-]: GETTABLE  R17 R0 K17   ; R17 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
350 [-]: EQ        0 R1 R17     ; if R1 ~= R17 then PC := 356
351 [-]: JMP       356          ; PC := 356
352 [-]: CONST     R3 0         ; R3 := 0.000000
353 [-]: GETGLOBAL R17 K29      ; R17 := _T
354 [-]: SETTABLE  R17 K82 K42  ; R17["gToolTip"] := nil
355 [-]: JMP       364          ; PC := 364
356 [-]: SELF      R17 R0 K83   ; R18 := R0; R17 := R0[0x3914d936]
357 [-]: CALL      R17 2 1      ; R17(R18)
358 [-]: GETGLOBAL R17 K32      ; R17 := 0xae91e43b
359 [-]: SELF      R17 R17 K65  ; R18 := R17; R17 := R17[0x67bc869f]
360 [-]: LOADK     R19 K84      ; R19 := "Window.TabbedChatPanel"
361 [-]: CONST     R20 10       ; R20 := 10.000000
362 [-]: CONST     R21 100      ; R21 := 100.000000
363 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
364 [-]: SETTABLE  R0 K67 R1    ; R0["mVisualMode"] := R1
365 [-]: CONST     R17 1        ; R17 := 1.000000
366 [-]: LEN       R18 R4       ; R18 := # R4
367 [-]: CONST     R19 1        ; R19 := 1.000000
368 [-]: FORPREP   R17 375      ; R17 -= R19; PC := 375
369 [-]: GETGLOBAL R21 K32      ; R21 := 0xae91e43b
370 [-]: SELF      R21 R21 K65  ; R22 := R21; R21 := R21[0x67bc869f]
371 [-]: GETTABLE  R23 R4 R20   ; R23 := R4[R20]
372 [-]: CONST     R24 10       ; R24 := 10.000000
373 [-]: MOVE      R25 R3       ; R25 := R3
374 [-]: CALL      R21 5 1      ; R21(R22,R23,R24,R25)
375 [-]: FORLOOP   R17 369      ; R17 += R19; if R17 <= R18 then begin PC := 369; R20 := R17 end
376 [-]: CONST     R21 1        ; R21 := 1.000000
377 [-]: LEN       R22 R5       ; R22 := # R5
378 [-]: CONST     R23 1        ; R23 := 1.000000
379 [-]: FORPREP   R21 386      ; R21 -= R23; PC := 386
380 [-]: GETGLOBAL R25 K32      ; R25 := 0xae91e43b
381 [-]: SELF      R25 R25 K85  ; R26 := R25; R25 := R25[0xaade900e]
382 [-]: GETTABLE  R27 R5 R24   ; R27 := R5[R24]
383 [-]: CONST     R28 11       ; R28 := 11.000000
384 [-]: MOVE      R29 R7       ; R29 := R7
385 [-]: CALL      R25 5 1      ; R25(R26,R27,R28,R29)
386 [-]: FORLOOP   R21 380      ; R21 += R23; if R21 <= R22 then begin PC := 380; R24 := R21 end
387 [-]: GETTABLE  R25 R0 K51   ; R25 := R0["VISUAL_MODE_MENU_SIMPLE"]
388 [-]: EQ        0 R1 R25     ; if R1 ~= R25 then PC := 391
389 [-]: JMP       391          ; PC := 391
390 [-]: OP_LOADBOOL R25 0 1      ; R25 := false; PC := 391
391 [-]: OP_LOADBOOL R25 1 0      ; R25 := true
392 [-]: GETGLOBAL R26 K18      ; R26 := 0x9ba7909f
393 [-]: SELF      R26 R26 K19  ; R27 := R26; R26 := R26[0xbf9494fc]
394 [-]: LOADK     R28 K86      ; R28 := "HUD.UseAlternateHud"
395 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
396 [-]: TEST      R26 0        ; if not R26 then PC := 399
397 [-]: JMP       399          ; PC := 399
398 [-]: MOVE      R25 R7       ; R25 := R7
399 [-]: GETGLOBAL R26 K32      ; R26 := 0xae91e43b
400 [-]: SELF      R26 R26 K85  ; R27 := R26; R26 := R26[0xaade900e]
401 [-]: LOADK     R28 K84      ; R28 := "Window.TabbedChatPanel"
402 [-]: CONST     R29 11       ; R29 := 11.000000
403 [-]: MOVE      R30 R25      ; R30 := R25
404 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
405 [-]: GETGLOBAL R26 K32      ; R26 := 0xae91e43b
406 [-]: SELF      R26 R26 K85  ; R27 := R26; R26 := R26[0xaade900e]
407 [-]: LOADK     R28 K87      ; R28 := "Window.TabMenu.MenuPanel"
408 [-]: CONST     R29 11       ; R29 := 11.000000
409 [-]: GETTABLE  R30 R0 K17   ; R30 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
410 [-]: EQ        0 R1 R30     ; if R1 ~= R30 then PC := 413
411 [-]: JMP       413          ; PC := 413
412 [-]: OP_LOADBOOL R30 0 1      ; R30 := false; PC := 413
413 [-]: OP_LOADBOOL R30 1 0      ; R30 := true
414 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
415 [-]: GETGLOBAL R26 K52      ; R26 := 0x7b998233
416 [-]: GETTABLE  R27 R0 K59   ; R27 := R0["mTabMenu"]
417 [-]: CALL      R26 2 2      ; R26 := R26(R27)
418 [-]: TEST      R26 1        ; if R26 then PC := 445
419 [-]: JMP       445          ; PC := 445
420 [-]: GETGLOBAL R26 K52      ; R26 := 0x7b998233
421 [-]: GETTABLE  R27 R0 K59   ; R27 := R0["mTabMenu"]
422 [-]: GETTABLE  R27 R27 K88  ; R27 := R27["mSelectedElement"]
423 [-]: CALL      R26 2 2      ; R26 := R26(R27)
424 [-]: TEST      R26 1        ; if R26 then PC := 445
425 [-]: JMP       445          ; PC := 445
426 [-]: GETTABLE  R26 R0 K17   ; R26 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
427 [-]: EQ        0 R1 R26     ; if R1 ~= R26 then PC := 439
428 [-]: JMP       439          ; PC := 439
429 [-]: GETTABLE  R26 R0 K59   ; R26 := R0["mTabMenu"]
430 [-]: GETTABLE  R26 R26 K88  ; R26 := R26["mSelectedElement"]
431 [-]: GETTABLE  R26 R26 K89  ; R26 := R26["isFlashing"]
432 [-]: TEST      R26 0        ; if not R26 then PC := 439
433 [-]: JMP       439          ; PC := 439
434 [-]: GETTABLE  R26 R0 K59   ; R26 := R0["mTabMenu"]
435 [-]: SELF      R26 R26 K60  ; R27 := R26; R26 := R26[0x3bda3404]
436 [-]: GETTABLE  R28 R0 K59   ; R28 := R0["mTabMenu"]
437 [-]: GETTABLE  R28 R28 K88  ; R28 := R28["mSelectedElement"]
438 [-]: CALL      R26 3 1      ; R26(R27,R28)
439 [-]: GETTABLE  R26 R0 K59   ; R26 := R0["mTabMenu"]
440 [-]: SELF      R26 R26 K90  ; R27 := R26; R26 := R26[0xbb8e320d]
441 [-]: GETTABLE  R28 R0 K59   ; R28 := R0["mTabMenu"]
442 [-]: GETTABLE  R28 R28 K88  ; R28 := R28["mSelectedElement"]
443 [-]: OP_LOADBOOL R29 0 0      ; R29 := false
444 [-]: CALL      R26 4 1      ; R26(R27,R28,R29)
445 [-]: GETTABLE  R26 R0 K67   ; R26 := R0["mVisualMode"]
446 [-]: GETTABLE  R27 R0 K17   ; R27 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
447 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 455
448 [-]: JMP       455          ; PC := 455
449 [-]: GETTABLE  R26 R0 K91   ; R26 := R0["mSimpleTabList"]
450 [-]: SELF      R26 R26 K58  ; R27 := R26; R26 := R26[0x71e9ac81]
451 [-]: LOADNIL   R28 R28      ; R28 := nil
452 [-]: OP_LOADBOOL R29 1 0      ; R29 := true
453 [-]: OP_LOADBOOL R30 1 0      ; R30 := true
454 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
455 [-]: GETGLOBAL R26 K24      ; R26 := 0x34291f5c
456 [-]: GETTABLE  R26 R26 K78  ; R82 := R26[0xe6b41adb]
457 [-]: CALL      R26 1 2      ; R26 := R26()
458 [-]: TEST      R26 0        ; if not R26 then PC := 528
459 [-]: JMP       528          ; PC := 528
460 [-]: GETGLOBAL R26 K32      ; R26 := 0xae91e43b
461 [-]: SELF      R26 R26 K85  ; R27 := R26; R26 := R26[0xaade900e]
462 [-]: LOADK     R28 K66      ; R28 := "Window.Hint"
463 [-]: CONST     R29 11       ; R29 := 11.000000
464 [-]: OP_LOADBOOL R30 0 0      ; R30 := false
465 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
466 [-]: GETGLOBAL R26 K32      ; R26 := 0xae91e43b
467 [-]: SELF      R26 R26 K85  ; R27 := R26; R26 := R26[0xaade900e]
468 [-]: LOADK     R28 K92      ; R28 := "Window.TabMenu.ExpandCallout"
469 [-]: CONST     R29 11       ; R29 := 11.000000
470 [-]: OP_LOADBOOL R30 0 0      ; R30 := false
471 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
472 [-]: GETGLOBAL R26 K32      ; R26 := 0xae91e43b
473 [-]: SELF      R26 R26 K85  ; R27 := R26; R26 := R26[0xaade900e]
474 [-]: LOADK     R28 K93      ; R28 := "Window.TabMenu.MinMaxBtn.Separator"
475 [-]: CONST     R29 11       ; R29 := 11.000000
476 [-]: OP_LOADBOOL R30 0 0      ; R30 := false
477 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
478 [-]: GETGLOBAL R26 K32      ; R26 := 0xae91e43b
479 [-]: SELF      R26 R26 K85  ; R27 := R26; R26 := R26[0xaade900e]
480 [-]: LOADK     R28 K94      ; R28 := "Window.TabMenu.Resize"
481 [-]: CONST     R29 11       ; R29 := 11.000000
482 [-]: OP_LOADBOOL R30 0 0      ; R30 := false
483 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
484 [-]: GETGLOBAL R26 K32      ; R26 := 0xae91e43b
485 [-]: SELF      R26 R26 K85  ; R27 := R26; R26 := R26[0xaade900e]
486 [-]: LOADK     R28 K95      ; R28 := "Window.WindowStatus.Resize"
487 [-]: CONST     R29 11       ; R29 := 11.000000
488 [-]: OP_LOADBOOL R30 0 0      ; R30 := false
489 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
490 [-]: GETGLOBAL R26 K32      ; R26 := 0xae91e43b
491 [-]: SELF      R26 R26 K85  ; R27 := R26; R26 := R26[0xaade900e]
492 [-]: LOADK     R28 K96      ; R28 := "Blacker"
493 [-]: CONST     R29 11       ; R29 := 11.000000
494 [-]: MOVE      R30 R7       ; R30 := R7
495 [-]: CALL      R26 5 1      ; R26(R27,R28,R29,R30)
496 [-]: GETTABLE  R26 R0 K67   ; R26 := R0["mVisualMode"]
497 [-]: GETTABLE  R27 R0 K17   ; R27 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
498 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 528
499 [-]: JMP       528          ; PC := 528
500 [-]: GETGLOBAL R26 K69      ; R26 := 0xcfc01047
501 [-]: GETTABLE  R27 R0 K70   ; R27 := R0["mPanelList"]
502 [-]: CALL      R26 2 4      ; R26,R27,R28 := R26(R27)
503 [-]: JMP       514          ; PC := 514
504 [-]: GETGLOBAL R31 K52      ; R31 := 0x7b998233
505 [-]: MOVE      R32 R30      ; R32 := R30
506 [-]: CALL      R31 2 2      ; R31 := R31(R32)
507 [-]: TEST      R31 1        ; if R31 then PC := 514
508 [-]: JMP       514          ; PC := 514
509 [-]: GETTABLE  R31 R0 K71   ; R31 := R0["mActivePanelName"]
510 [-]: EQ        1 R29 R31    ; if R29 == R31 then PC := 514
511 [-]: JMP       514          ; PC := 514
512 [-]: SELF      R31 R30 K72  ; R32 := R30; R31 := R30[0x3bd10f9e]
513 [-]: CALL      R31 2 1      ; R31(R32)
514 [-]: TFORLOOP  R26 2        ; R29,R30 :=  R26(R27,R28); if R29 ~= nil then begin PC = 504; R28 := R29 end
515 [-]: JMP       504          ; PC := 504
516 [-]: GETGLOBAL R31 K52      ; R31 := 0x7b998233
517 [-]: GETTABLE  R32 R0 K70   ; R32 := R0["mPanelList"]
518 [-]: GETTABLE  R33 R0 K71   ; R33 := R0["mActivePanelName"]
519 [-]: GETTABLE  R32 R32 R33  ; R32 := R32[R33]
520 [-]: CALL      R31 2 2      ; R31 := R31(R32)
521 [-]: TEST      R31 1        ; if R31 then PC := 528
522 [-]: JMP       528          ; PC := 528
523 [-]: GETTABLE  R31 R0 K70   ; R31 := R0["mPanelList"]
524 [-]: GETTABLE  R32 R0 K71   ; R32 := R0["mActivePanelName"]
525 [-]: GETTABLE  R31 R31 R32  ; R31 := R31[R32]
526 [-]: SELF      R31 R31 K72  ; R32 := R31; R31 := R31[0x3bd10f9e]
527 [-]: CALL      R31 2 1      ; R31(R32)
528 [-]: SELF      R31 R0 K97   ; R32 := R0; R31 := R0[0x5a1170ee]
529 [-]: CALL      R31 2 1      ; R31(R32)
530 [-]: GETGLOBAL R31 K52      ; R31 := 0x7b998233
531 [-]: GETTABLE  R32 R0 K80   ; R32 := R0["mInputPanel"]
532 [-]: CALL      R31 2 2      ; R31 := R31(R32)
533 [-]: TEST      R31 1        ; if R31 then PC := 543
534 [-]: JMP       543          ; PC := 543
535 [-]: GETGLOBAL R31 K32      ; R31 := 0xae91e43b
536 [-]: SELF      R31 R31 K98  ; R32 := R31; R31 := R31[0xf64b7262]
537 [-]: GETTABLE  R33 R0 K80   ; R33 := R0["mInputPanel"]
538 [-]: GETTABLE  R33 R33 K99  ; R33 := R33["mClipPath"]
539 [-]: LOADK     R34 K100     ; R34 := "Callout"
540 [-]: CONST     R35 10       ; R35 := 10.000000
541 [-]: MOVE      R36 R3       ; R36 := R3
542 [-]: CALL      R31 6 1      ; R31(R32,R33,R34,R35,R36)
543 [-]: GETGLOBAL R31 K48      ; R31 := mInSubScreen
544 [-]: TEST      R31 1        ; if R31 then PC := 570
545 [-]: JMP       570          ; PC := 570
546 [-]: GETGLOBAL R31 K24      ; R31 := 0x34291f5c
547 [-]: GETTABLE  R31 R31 K25  ; R82 := R31[0x1467d5f4]
548 [-]: CALL      R31 1 2      ; R31 := R31()
549 [-]: TEST      R31 0        ; if not R31 then PC := 570
550 [-]: JMP       570          ; PC := 570
551 [-]: GETGLOBAL R31 K29      ; R31 := _T
552 [-]: GETTABLE  R31 R31 K101 ; R31 := R31["SetButtonBarEnabled"]
553 [-]: TEST      R31 0        ; if not R31 then PC := 570
554 [-]: JMP       570          ; PC := 570
555 [-]: GETTABLE  R31 R0 K37   ; R31 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
556 [-]: EQ        1 R1 R31     ; if R1 == R31 then PC := 561
557 [-]: JMP       561          ; PC := 561
558 [-]: GETTABLE  R31 R0 K31   ; R31 := R0["VISUAL_MODE_MENU_FULL"]
559 [-]: EQ        0 R1 R31     ; if R1 ~= R31 then PC := 566
560 [-]: JMP       566          ; PC := 566
561 [-]: GETGLOBAL R31 K29      ; R31 := _T
562 [-]: GETTABLE  R31 R31 K102 ; R82 := R31[0x0f9e0f24]
563 [-]: OP_LOADBOOL R32 0 0      ; R32 := false
564 [-]: CALL      R31 2 1      ; R31(R32)
565 [-]: JMP       570          ; PC := 570
566 [-]: GETGLOBAL R31 K29      ; R31 := _T
567 [-]: GETTABLE  R31 R31 K102 ; R82 := R31[0x0f9e0f24]
568 [-]: OP_LOADBOOL R32 1 0      ; R32 := true
569 [-]: CALL      R31 2 1      ; R31(R32)
570 [-]: RETURN    R0 1         ; return 


; Function #121.3:
;
; Name:            
; Defined at line: 6144
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x0c33ebb2]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "trackAsMenu"
  5 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mWindowTitle"]
  8 [-]: SETTABLE  R1 K5 K6     ; R1["isDragging"] := true
  9 [-]: RETURN    R0 1         ; return 


; Function #121.4:
;
; Name:            
; Defined at line: 6149
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x0c33ebb2]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "trackAsMenu"
  5 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
  6 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
  7 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mWindowTitle"]
  8 [-]: SETTABLE  R1 K5 K6     ; R1["isDragging"] := false
  9 [-]: RETURN    R0 1         ; return 


; Function #121.5:
;
; Name:            
; Defined at line: 6154
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #121.6:
;
; Name:            
; Defined at line: 6157
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #121.7:
;
; Name:            
; Defined at line: 6160
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mVisualMode"]
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["VISUAL_MODE_MENU_SIMPLE"]
  3 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x0c33ebb2]
  8 [-]: MOVE      R4 R1        ; R4 := R1
  9 [-]: LOADK     R5 K4        ; R5 := "trackAsMenu"
 10 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 11 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 12 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 13 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x67bc869f]
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: CONST     R5 10        ; R5 := 10.000000
 16 [-]: CONST     R6 100       ; R6 := 100.000000
 17 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 18 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mWindowStatus"]
 19 [-]: SETTABLE  R2 K7 K8     ; R2["isDragging"] := true
 20 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mWindowStatus"]
 21 [-]: SETTABLE  R2 K9 R1     ; R2["ResizeClipName"] := R1
 22 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mPanelList"]
 23 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["mActivePanelName"]
 24 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 25 [-]: EQ        1 R2 K12     ; if R2 == nil then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["mPanelList"]
 28 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["mActivePanelName"]
 29 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 30 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x54f49c46]
 31 [-]: CALL      R2 2 1       ; R2(R3)
 32 [-]: RETURN    R0 1         ; return 


; Function #121.8:
;
; Name:            
; Defined at line: 6175
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x0c33ebb2]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: LOADK     R5 K2        ; R5 := "trackAsMenu"
  5 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x67bc869f]
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CONST     R5 10        ; R5 := 10.000000
 11 [-]: CONST     R6 50        ; R6 := 50.000000
 12 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 13 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mWindowStatus"]
 14 [-]: GETGLOBAL R3 K6        ; R3 := mMouseDown
 15 [-]: SETTABLE  R2 K5 R3     ; R2["isDragging"] := R3
 16 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mPanelList"]
 17 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["mActivePanelName"]
 18 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 19 [-]: EQ        1 R2 K9      ; if R2 == nil then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mPanelList"]
 22 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["mActivePanelName"]
 23 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 24 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x094be744]
 25 [-]: CALL      R2 2 1       ; R2(R3)
 26 [-]: JMP       31           ; PC := 31
 27 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["Resizing"]
 28 [-]: TEST      R2 0         ; if not R2 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: SETTABLE  R0 K11 K12   ; R0["Resizing"] := false
 31 [-]: RETURN    R0 1         ; return 


; Function #121.9:
;
; Name:            
; Defined at line: 6188
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x67bc869f]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CONST     R5 10        ; R5 := 10.000000
  5 [-]: CONST     R6 75        ; R6 := 75.000000
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: RETURN    R0 1         ; return 


; Function #121.10:
;
; Name:            
; Defined at line: 6192
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x67bc869f]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CONST     R5 10        ; R5 := 10.000000
  5 [-]: CONST     R6 50        ; R6 := 50.000000
  6 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
  7 [-]: RETURN    R0 1         ; return 


; Function #121.11:
;
; Name:            
; Defined at line: 6196
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: NEWTABLE  R2 0 0       ; R2 := {}
  2 [-]: GETTABLE  R3 R1 K0     ; R3 := R1["x"]
  3 [-]: GETUPVAL  R4 U0        ; R4 := U0
  4 [-]: GETTABLE  R4 R4 K1     ; R82 := R4[0x06d055f9]
  5 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["ReverseX"]
  6 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mWindow"]
  7 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["width"]
  8 [-]: CONST     R7 0         ; R7 := 0.000000
  9 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 10 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 11 [-]: SETTABLE  R2 K0 R3     ; R2["x"] := R3
 12 [-]: GETTABLE  R3 R1 K5     ; R3 := R1["y"]
 13 [-]: GETUPVAL  R4 U0        ; R4 := U0
 14 [-]: GETTABLE  R4 R4 K1     ; R82 := R4[0x06d055f9]
 15 [-]: GETTABLE  R5 R1 K6     ; R5 := R1["ReverseY"]
 16 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mWindow"]
 17 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["height"]
 18 [-]: CONST     R7 0         ; R7 := 0.000000
 19 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 20 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 21 [-]: SETTABLE  R2 K5 R3     ; R2["y"] := R3
 22 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["width"]
 23 [-]: GETUPVAL  R4 U0        ; R4 := U0
 24 [-]: GETTABLE  R4 R4 K1     ; R82 := R4[0x06d055f9]
 25 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["ReverseWidth"]
 26 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mWindow"]
 27 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["width"]
 28 [-]: CONST     R7 0         ; R7 := 0.000000
 29 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 30 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 31 [-]: SETTABLE  R2 K4 R3     ; R2["width"] := R3
 32 [-]: GETTABLE  R3 R1 K7     ; R3 := R1["height"]
 33 [-]: GETUPVAL  R4 U0        ; R4 := U0
 34 [-]: GETTABLE  R4 R4 K1     ; R82 := R4[0x06d055f9]
 35 [-]: GETTABLE  R5 R1 K9     ; R5 := R1["ReverseHeight"]
 36 [-]: GETTABLE  R6 R0 K3     ; R6 := R0["mWindow"]
 37 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["height"]
 38 [-]: CONST     R7 0         ; R7 := 0.000000
 39 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 40 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 41 [-]: SETTABLE  R2 K7 R3     ; R2["height"] := R3
 42 [-]: RETURN    R2 2         ; return R2
 43 [-]: RETURN    R0 1         ; return 


; Function #121.12:
;
; Name:            
; Defined at line: 6210
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x9383bc56]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  4 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mClipName"]
  5 [-]: LOADK     R4 K4        ; R4 := ".Hint.SimpleTabList.SimpleElement"
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: SETTABLE  R0 K0 R1     ; R0["mSimpleTabList"] := R1
  9 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 10 [-]: SETTABLE  R1 K5 K6     ; R1["mForcedHorizontalSeparation"] := 0.000000
 11 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 12 [-]: SETTABLE  R1 K7 K6     ; R1["mForcedVerticalSeparation"] := 0.000000
 13 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 14 [-]: SETTABLE  R1 K8 K9     ; R1["mFlashDuration"] := 3.000000
 15 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 16 [-]: CLOSURE   R2 0         ; R2 := closure(Function #121.12.1)
 17 [-]: SETTABLE  R1 K10 R2    ; R1["GetIndexForTabId"] := R2
 18 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 19 [-]: CLOSURE   R2 1         ; R2 := closure(Function #121.12.2)
 20 [-]: SETTABLE  R1 K11 R2    ; R1["GetElementByTabId"] := R2
 21 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 22 [-]: CLOSURE   R2 2         ; R2 := closure(Function #121.12.3)
 23 [-]: SETTABLE  R1 K12 R2    ; R1["ShowPersonalNotification"] := R2
 24 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 25 [-]: CLOSURE   R2 3         ; R2 := closure(Function #121.12.4)
 26 [-]: SETTABLE  R1 K13 R2    ; R1["FlashTab"] := R2
 27 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 28 [-]: CLOSURE   R2 4         ; R2 := closure(Function #121.12.5)
 29 [-]: SETTABLE  R1 K14 R2    ; R1["AddTab"] := R2
 30 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 31 [-]: CLOSURE   R2 5         ; R2 := closure(Function #121.12.6)
 32 [-]: SETTABLE  R1 K15 R2    ; R1["RemoveTab"] := R2
 33 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 34 [-]: CLOSURE   R2 6         ; R2 := closure(Function #121.12.7)
 35 [-]: SETTABLE  R1 K16 R2    ; R1["CalculateX"] := R2
 36 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mSimpleTabList"]
 37 [-]: CLOSURE   R2 7         ; R2 := closure(Function #121.12.8)
 38 [-]: MOVE      R0 R0        ; R0 := R0
 39 [-]: GETUPVAL  R0 U1        ; R0 := U1
 40 [-]: SETTABLE  R1 K17 R2    ; R1["mElementDrawCallback"] := R2
 41 [-]: GETGLOBAL R1 K18       ; R1 := 0x34291f5c
 42 [-]: GETTABLE  R1 R1 K19    ; R82 := R1[0x1467d5f4]
 43 [-]: CALL      R1 1 2       ; R1 := R1()
 44 [-]: TEST      R1 0         ; if not R1 then PC := 60
 45 [-]: JMP       60           ; PC := 60
 46 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 47 [-]: SELF      R1 R1 K20    ; R2 := R1; R1 := R1[0x91a24e4b]
 48 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mClipName"]
 49 [-]: LOADK     R4 K21       ; R4 := ".Hint.SimpleTabList"
 50 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 51 [-]: CONST     R4 0         ; R4 := 0.000000
 52 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 53 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 54 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0xf64b7262]
 55 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
 56 [-]: LOADK     R5 K23       ; R5 := "Hint.SimpleTabList"
 57 [-]: CONST     R6 0         ; R6 := 0.000000
 58 [-]: ADD       R7 R1 K24    ; R7 := R1 + 5.000000
 59 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 60 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mSimpleTabList"]
 61 [-]: SELF      R2 R2 K25    ; R3 := R2; R2 := R2[0xbad4316f]
 62 [-]: NEWTABLE  R4 0 1       ; R4 := {}
 63 [-]: SETTABLE  R4 K26 K27   ; R4["mTabId"] := nil
 64 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 65 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 66 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 67 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0xf64b7262]
 68 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
 69 [-]: LOADK     R5 K28       ; R5 := "Hint.SimpleTabListMask"
 70 [-]: CONST     R6 1         ; R6 := 1.000000
 71 [-]: CONST     R7 -50       ; R7 := -50.000000
 72 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 73 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 74 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0xf64b7262]
 75 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mClipName"]
 76 [-]: LOADK     R5 K28       ; R5 := "Hint.SimpleTabListMask"
 77 [-]: CONST     R6 13        ; R6 := 13.000000
 78 [-]: CONST     R7 100       ; R7 := 100.000000
 79 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 80 [-]: RETURN    R0 1         ; return 


; Function #121.12.1:
;
; Name:            
; Defined at line: 6220
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: CONST     R2 2         ; R2 := 2.000000
  2 [-]: CONST     R3 2         ; R3 := 2.000000
  3 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0[0x5fbddc1a]
  4 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  5 [-]: CONST     R5 1         ; R5 := 1.000000
  6 [-]: FORPREP   R3 15        ; R3 -= R5; PC := 15
  7 [-]: SELF      R7 R0 K1     ; R8 := R0; R7 := R0[0x5465f8f3]
  8 [-]: MOVE      R9 R6        ; R9 := R6
  9 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 10 [-]: GETTABLE  R8 R7 K2     ; R8 := R7["mTabId"]
 11 [-]: LE        0 R1 R8      ; if R1 > R8 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: JMP       16           ; PC := 16
 14 [-]: ADD       R2 R2 K3     ; R2 := R2 + 1.000000
 15 [-]: FORLOOP   R3 7         ; R3 += R5; if R3 <= R4 then begin PC := 7; R6 := R3 end
 16 [-]: RETURN    R2 2         ; return R2
 17 [-]: RETURN    R0 1         ; return 


; Function #121.12.2:
;
; Name:            
; Defined at line: 6235
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: CONST     R3 1         ; R3 := 1.000000
  2 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0[0x5fbddc1a]
  3 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  4 [-]: CONST     R5 1         ; R5 := 1.000000
  5 [-]: FORPREP   R3 16        ; R3 -= R5; PC := 16
  6 [-]: SELF      R7 R0 K1     ; R8 := R0; R7 := R0[0x5465f8f3]
  7 [-]: MOVE      R9 R6        ; R9 := R6
  8 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
  9 [-]: MOVE      R2 R7        ; R2 := R7
 10 [-]: GETTABLE  R7 R2 K2     ; R7 := R2["mTabId"]
 11 [-]: EQ        0 R7 R1      ; if R7 ~= R1 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: JMP       17           ; PC := 17
 14 [-]: JMP       16           ; PC := 16
 15 [-]: LOADNIL   R2 R2        ; R2 := nil
 16 [-]: FORLOOP   R3 6         ; R3 += R5; if R3 <= R4 then begin PC := 6; R6 := R3 end
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: RETURN    R0 1         ; return 


; Function #121.12.3:
;
; Name:            
; Defined at line: 6250
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0[0x010bf6cf]
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  4 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  5 [-]: MOVE      R5 R3        ; R5 := R3
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: TEST      R4 1         ; if R4 then PC := 23
  8 [-]: JMP       23           ; PC := 23
  9 [-]: SETTABLE  R3 K2 K3     ; R3["mHasPersonalNotification"] := true
 10 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
 11 [-]: GETTABLE  R5 R3 K4     ; R5 := R3["mClipName"]
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 43
 14 [-]: JMP       43           ; PC := 43
 15 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 16 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0xc0a3774b]
 17 [-]: GETTABLE  R6 R3 K4     ; R6 := R3["mClipName"]
 18 [-]: LOADK     R7 K7        ; R7 := "Dot"
 19 [-]: CONST     R8 11        ; R8 := 11.000000
 20 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
 21 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 22 [-]: JMP       43           ; PC := 43
 23 [-]: TEST      R2 0         ; if not R2 then PC := 43
 24 [-]: JMP       43           ; PC := 43
 25 [-]: SELF      R4 R0 K8     ; R5 := R0; R4 := R0[0xfe8930f1]
 26 [-]: MOVE      R6 R1        ; R6 := R1
 27 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 28 [-]: SELF      R5 R0 K9     ; R6 := R0; R5 := R0[0x45082a31]
 29 [-]: MOVE      R7 R4        ; R7 := R4
 30 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 31 [-]: SETTABLE  R8 K10 R1    ; R8["mTabId"] := R1
 32 [-]: SETTABLE  R8 K2 K3     ; R8["mHasPersonalNotification"] := true
 33 [-]: GETGLOBAL R9 K11       ; R9 := mWindow
 34 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["mVisualMode"]
 35 [-]: GETGLOBAL R10 K11      ; R10 := mWindow
 36 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 37 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 40
 38 [-]: JMP       40           ; PC := 40
 39 [-]: OP_LOADBOOL R9 0 1       ; R9 := false; PC := 40
 40 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
 41 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
 42 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 43 [-]: RETURN    R0 1         ; return 


; Function #121.12.4:
;
; Name:            
; Defined at line: 6266
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0xfe8930f1]
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  4 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0x5465f8f3]
  5 [-]: MOVE      R5 R2        ; R5 := R2
  6 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  7 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
  8 [-]: MOVE      R5 R3        ; R5 := R3
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: TEST      R4 1         ; if R4 then PC := 16
 11 [-]: JMP       16           ; PC := 16
 12 [-]: GETGLOBAL R4 K4        ; R4 := mWindow
 13 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mDelayedFadeOutTimer"]
 14 [-]: SETTABLE  R3 K3 R4     ; R3["mFlashingTimer"] := R4
 15 [-]: SETTABLE  R3 K6 K7     ; R3["mBouncing"] := false
 16 [-]: RETURN    R0 1         ; return 


; Function #121.12.5:
;
; Name:            
; Defined at line: 6275
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0xfe8930f1]
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  4 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0x45082a31]
  5 [-]: MOVE      R5 R2        ; R5 := R2
  6 [-]: NEWTABLE  R6 0 1       ; R6 := {}
  7 [-]: SETTABLE  R6 K2 R1     ; R6["mTabId"] := R1
  8 [-]: GETGLOBAL R7 K3        ; R7 := mWindow
  9 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["mVisualMode"]
 10 [-]: GETGLOBAL R8 K3        ; R8 := mWindow
 11 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 12 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: OP_LOADBOOL R7 0 1       ; R7 := false; PC := 15
 15 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 16 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 17 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 18 [-]: RETURN    R0 1         ; return 


; Function #121.12.6:
;
; Name:            
; Defined at line: 6281
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0[0x010bf6cf]
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  4 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
  5 [-]: MOVE      R5 R3        ; R5 := R3
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: TEST      R4 1         ; if R4 then PC := 48
  8 [-]: JMP       48           ; PC := 48
  9 [-]: GETTABLE  R4 R3 K2     ; R4 := R3["mIndex"]
 10 [-]: EQ        1 R4 K3      ; if R4 == 1.000000 then PC := 26
 11 [-]: JMP       26           ; PC := 26
 12 [-]: GETGLOBAL R4 K4        ; R4 := mWindow
 13 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["mVisualMode"]
 14 [-]: GETGLOBAL R5 K4        ; R5 := mWindow
 15 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 16 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 19
 19 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 20 [-]: SELF      R5 R0 K7     ; R6 := R0; R5 := R0[0x9ae7e2d2]
 21 [-]: GETTABLE  R7 R3 K2     ; R7 := R3["mIndex"]
 22 [-]: MOVE      R8 R4        ; R8 := R4
 23 [-]: MOVE      R9 R4        ; R9 := R4
 24 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 25 [-]: JMP       48           ; PC := 48
 26 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
 27 [-]: GETTABLE  R6 R3 K8     ; R6 := R3["mClipName"]
 28 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 29 [-]: TEST      R5 1         ; if R5 then PC := 48
 30 [-]: JMP       48           ; PC := 48
 31 [-]: SETTABLE  R3 K9 K10    ; R3["mHasPersonalNotification"] := false
 32 [-]: GETGLOBAL R5 K11       ; R5 := 0xae91e43b
 33 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5[0xc0a3774b]
 34 [-]: GETTABLE  R7 R3 K8     ; R7 := R3["mClipName"]
 35 [-]: LOADK     R8 K13       ; R8 := "Dot"
 36 [-]: CONST     R9 11        ; R9 := 11.000000
 37 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
 38 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 39 [-]: TEST      R2 0         ; if not R2 then PC := 48
 40 [-]: JMP       48           ; PC := 48
 41 [-]: SETTABLE  R3 K14 K15   ; R3["mTabId"] := nil
 42 [-]: GETGLOBAL R5 K11       ; R5 := 0xae91e43b
 43 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0xaade900e]
 44 [-]: GETTABLE  R7 R3 K8     ; R7 := R3["mClipName"]
 45 [-]: CONST     R8 11        ; R8 := 11.000000
 46 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 47 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 48 [-]: RETURN    R0 1         ; return 


; Function #121.12.7:
;
; Name:            
; Defined at line: 6303
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mInitialX"]
  2 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["mIndex"]
  3 [-]: LT        0 K2 R3      ; if 1.000000 >= R3 then PC := 28
  4 [-]: JMP       28           ; PC := 28
  5 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0[0x5465f8f3]
  6 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mIndex"]
  7 [-]: SUB       R5 R5 K2     ; R5 := R5 - 1.000000
  8 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  9 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 10 [-]: MOVE      R5 R3        ; R5 := R3
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: TEST      R4 1         ; if R4 then PC := 28
 13 [-]: JMP       28           ; PC := 28
 14 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 15 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x91a24e4b]
 16 [-]: GETTABLE  R6 R3 K7     ; R6 := R3["mClipName"]
 17 [-]: CONST     R7 0         ; R7 := 0.000000
 18 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 19 [-]: GETGLOBAL R5 K5        ; R5 := 0xae91e43b
 20 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0x91a24e4b]
 21 [-]: GETTABLE  R7 R3 K7     ; R7 := R3["mClipName"]
 22 [-]: LOADK     R8 K8        ; R8 := ".SelectedLine"
 23 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 24 [-]: CONST     R8 12        ; R8 := 12.000000
 25 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 26 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 27 [-]: ADD       R2 R4 K9     ; R2 := R4 + 5.000000
 28 [-]: RETURN    R2 2         ; return R2
 29 [-]: RETURN    R0 1         ; return 


; Function #121.12.8:
;
; Name:            
; Defined at line: 6316
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mTabMenu"]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 12 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xaade900e]
 13 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
 14 [-]: CONST     R4 11        ; R4 := 11.000000
 15 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mTabId"]
 16 [-]: EQ        0 R5 K1      ; if R5 ~= nil then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: OP_LOADBOOL R5 0 1       ; R5 := false; PC := 19
 19 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 20 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 21 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["mTabId"]
 22 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: RETURN    R0 1         ; return 
 25 [-]: GETUPVAL  R1 U0        ; R1 := U0
 26 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mTabMenu"]
 27 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xca30dfb6]
 28 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mTabId"]
 29 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 30 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 0         ; if not R2 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: RETURN    R0 1         ; return 
 36 [-]: CONST     R2 1         ; R2 := 1.000000
 37 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 38 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xc0a3774b]
 39 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 40 [-]: LOADK     R6 K9        ; R6 := "Label"
 41 [-]: CONST     R7 44        ; R7 := 44.000000
 42 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 43 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 44 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 45 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xc0a3774b]
 46 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 47 [-]: LOADK     R6 K10       ; R6 := "Icon"
 48 [-]: CONST     R7 11        ; R7 := 11.000000
 49 [-]: GETGLOBAL R8 K2        ; R8 := 0x7b998233
 50 [-]: GETTABLE  R9 R1 K10    ; R9 := R1["Icon"]
 51 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 52 [-]: NOT       R8 R8        ; R8 := not R8
 53 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 54 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 55 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xc0a3774b]
 56 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 57 [-]: LOADK     R6 K9        ; R6 := "Label"
 58 [-]: CONST     R7 11        ; R7 := 11.000000
 59 [-]: GETGLOBAL R8 K2        ; R8 := 0x7b998233
 60 [-]: GETTABLE  R9 R1 K10    ; R9 := R1["Icon"]
 61 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 62 [-]: CALL      R3 0 1       ; R3(R4,...)
 63 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 64 [-]: GETTABLE  R4 R1 K10    ; R4 := R1["Icon"]
 65 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 66 [-]: TEST      R3 1         ; if R3 then PC := 77
 67 [-]: JMP       77           ; PC := 77
 68 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 69 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0x1cb415c1]
 70 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 71 [-]: LOADK     R6 K12       ; R6 := ".Icon"
 72 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 73 [-]: GETTABLE  R6 R1 K10    ; R6 := R1["Icon"]
 74 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 75 [-]: CONST     R2 16        ; R2 := 16.000000
 76 [-]: JMP       92           ; PC := 92
 77 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 78 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0x20b98db3]
 79 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 80 [-]: LOADK     R6 K14       ; R6 := ".Label.text"
 81 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 82 [-]: GETTABLE  R6 R1 K15    ; R6 := R1["Name"]
 83 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 84 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 85 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0x91a24e4b]
 86 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 87 [-]: LOADK     R6 K17       ; R6 := ".Label"
 88 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 89 [-]: CONST     R6 33        ; R6 := 33.000000
 90 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 91 [-]: MOVE      R2 R3        ; R2 := R3
 92 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 93 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xf64b7262]
 94 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 95 [-]: LOADK     R6 K19       ; R6 := "Dot"
 96 [-]: CONST     R7 9         ; R7 := 9.000000
 97 [-]: GETGLOBAL R8 K20       ; R8 := 0x0032441c
 98 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["UIColor_Red"]
 99 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
100 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
101 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xc0a3774b]
102 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
103 [-]: LOADK     R6 K19       ; R6 := "Dot"
104 [-]: CONST     R7 11        ; R7 := 11.000000
105 [-]: GETTABLE  R8 R0 K22    ; R8 := R0["mHasPersonalNotification"]
106 [-]: EQ        1 R8 K23     ; if R8 == true then PC := 109
107 [-]: JMP       109          ; PC := 109
108 [-]: OP_LOADBOOL R8 0 1       ; R8 := false; PC := 109
109 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
110 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
111 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
112 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xf64b7262]
113 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
114 [-]: LOADK     R6 K19       ; R6 := "Dot"
115 [-]: CONST     R7 0         ; R7 := 0.000000
116 [-]: MOVE      R8 R2        ; R8 := R2
117 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
118 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
119 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xf64b7262]
120 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
121 [-]: LOADK     R6 K24       ; R6 := "SelectedLine"
122 [-]: CONST     R7 9         ; R7 := 9.000000
123 [-]: GETUPVAL  R8 U1        ; R8 := U1
124 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
125 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
126 [-]: SELF      R3 R3 K18    ; R4 := R3; R3 := R3[0xf64b7262]
127 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
128 [-]: LOADK     R6 K24       ; R6 := "SelectedLine"
129 [-]: CONST     R7 12        ; R7 := 12.000000
130 [-]: MOVE      R8 R2        ; R8 := R2
131 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
132 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
133 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xc0a3774b]
134 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
135 [-]: LOADK     R6 K24       ; R6 := "SelectedLine"
136 [-]: CONST     R7 11        ; R7 := 11.000000
137 [-]: GETTABLE  R8 R0 K25    ; R8 := R0["mIndex"]
138 [-]: EQ        1 R8 K26     ; if R8 == 1.000000 then PC := 141
139 [-]: JMP       141          ; PC := 141
140 [-]: OP_LOADBOOL R8 0 1       ; R8 := false; PC := 141
141 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
142 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
143 [-]: RETURN    R0 1         ; return 


; Function #121.13:
;
; Name:            
; Defined at line: 6366
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: TEST      R1 1         ; if R1 then PC := 21
  2 [-]: JMP       21           ; PC := 21
  3 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mVisualMode"]
  4 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["VISUAL_MODE_MENU_FULL"]
  5 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 11
  6 [-]: JMP       11           ; PC := 11
  7 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mVisualMode"]
  8 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["VISUAL_MODE_GAMEPLAY_FULL"]
  9 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 21
 10 [-]: JMP       21           ; PC := 21
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0x7b998233
 12 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mTabMenu"]
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mTabMenu"]
 17 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x5fbddc1a]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: LT        1 K6 R2      ; if 1.000000 < R2 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 22
 22 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 23 [-]: GETGLOBAL R3 K7        ; R3 := 0x34291f5c
 24 [-]: GETTABLE  R3 R3 K8     ; R82 := R3[0x1467d5f4]
 25 [-]: CALL      R3 1 2       ; R3 := R3()
 26 [-]: GETGLOBAL R4 K9        ; R4 := 0xae91e43b
 27 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xc0a3774b]
 28 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mClipName"]
 29 [-]: LOADK     R7 K12       ; R7 := "TabMenu.LeftBumper"
 30 [-]: CONST     R8 11        ; R8 := 11.000000
 31 [-]: TESTSET   R9 R3 0      ; if not R3 then PC := 34 else R9 := R3
 32 [-]: JMP       34           ; PC := 34
 33 [-]: MOVE      R9 R2        ; R9 := R2
 34 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 35 [-]: GETGLOBAL R4 K9        ; R4 := 0xae91e43b
 36 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xc0a3774b]
 37 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mClipName"]
 38 [-]: LOADK     R7 K13       ; R7 := "TabMenu.RightBumper"
 39 [-]: CONST     R8 11        ; R8 := 11.000000
 40 [-]: TESTSET   R9 R3 0      ; if not R3 then PC := 43 else R9 := R3
 41 [-]: JMP       43           ; PC := 43
 42 [-]: MOVE      R9 R2        ; R9 := R2
 43 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 44 [-]: GETGLOBAL R4 K9        ; R4 := 0xae91e43b
 45 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xc0a3774b]
 46 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mClipName"]
 47 [-]: LOADK     R7 K14       ; R7 := "TabMenu.LeftArrow"
 48 [-]: CONST     R8 11        ; R8 := 11.000000
 49 [-]: TEST      R3 1         ; if R3 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: MOVE      R9 R2        ; R9 := R2
 52 [-]: JMP       55           ; PC := 55
 53 [-]: OP_LOADBOOL R9 0 1       ; R9 := false; PC := 54
 54 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
 55 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 56 [-]: GETGLOBAL R4 K9        ; R4 := 0xae91e43b
 57 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xc0a3774b]
 58 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mClipName"]
 59 [-]: LOADK     R7 K15       ; R7 := "TabMenu.RightArrow"
 60 [-]: CONST     R8 11        ; R8 := 11.000000
 61 [-]: TEST      R3 1         ; if R3 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: MOVE      R9 R2        ; R9 := R2
 64 [-]: JMP       67           ; PC := 67
 65 [-]: OP_LOADBOOL R9 0 1       ; R9 := false; PC := 66
 66 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
 67 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 68 [-]: RETURN    R0 1         ; return 


; Function #121.14:
;
; Name:            
; Defined at line: 6379
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  20

  1 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mPanelList"]
  2 [-]: GETTABLE  R4 R4 R2     ; R4 := R4[R2]
  3 [-]: GETTABLE  R5 R4 K1     ; R5 := R4["mChannelType"]
  4 [-]: LOADNIL   R6 R6        ; R6 := nil
  5 [-]: GETGLOBAL R7 K2        ; R7 := 0x942ebef5
  6 [-]: GETTABLE  R8 R4 K1     ; R8 := R4["mChannelType"]
  7 [-]: ADD       R8 R8 K3     ; R8 := R8 + 1.000000
  8 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
  9 [-]: EQ        1 R7 K4      ; if R7 == nil then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETGLOBAL R7 K2        ; R7 := 0x942ebef5
 12 [-]: GETTABLE  R8 R4 K1     ; R8 := R4["mChannelType"]
 13 [-]: ADD       R8 R8 K3     ; R8 := R8 + 1.000000
 14 [-]: GETTABLE  R6 R7 R8     ; R6 := R7[R8]
 15 [-]: NEWTABLE  R7 0 6       ; R7 := {}
 16 [-]: SETTABLE  R7 K5 R6     ; R7["Icon"] := R6
 17 [-]: SETTABLE  R7 K6 R1     ; R7["Name"] := R1
 18 [-]: SETTABLE  R7 K7 R2     ; R7["ChannelName"] := R2
 19 [-]: SETTABLE  R7 K8 R3     ; R7["IsActive"] := R3
 20 [-]: SETTABLE  R7 K9 R5     ; R7["Id"] := R5
 21 [-]: SETTABLE  R7 K10 K11   ; R7["isFlashing"] := false
 22 [-]: CONST     R8 1         ; R8 := 1.000000
 23 [-]: CONST     R9 1         ; R9 := 1.000000
 24 [-]: GETTABLE  R10 R0 K12   ; R10 := R0["mTabMenu"]
 25 [-]: SELF      R10 R10 K13  ; R11 := R10; R10 := R10[0x5fbddc1a]
 26 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 27 [-]: CONST     R11 1        ; R11 := 1.000000
 28 [-]: FORPREP   R9 39        ; R9 -= R11; PC := 39
 29 [-]: GETTABLE  R13 R0 K12   ; R13 := R0["mTabMenu"]
 30 [-]: SELF      R13 R13 K14  ; R14 := R13; R13 := R13[0x5465f8f3]
 31 [-]: MOVE      R15 R8       ; R15 := R8
 32 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 33 [-]: GETTABLE  R14 R7 K9    ; R14 := R7["Id"]
 34 [-]: GETTABLE  R15 R13 K9   ; R15 := R13["Id"]
 35 [-]: LT        0 R14 R15    ; if R14 >= R15 then PC := 38
 36 [-]: JMP       38           ; PC := 38
 37 [-]: JMP       40           ; PC := 40
 38 [-]: ADD       R8 R8 K3     ; R8 := R8 + 1.000000
 39 [-]: FORLOOP   R9 29        ; R9 += R11; if R9 <= R10 then begin PC := 29; R12 := R9 end
 40 [-]: GETGLOBAL R14 K15      ; R14 := 0x3d106989
 41 [-]: LOADK     R15 K16      ; R15 := "ChatRedux::AddTab: Adding tab with channel name: "
 42 [-]: MOVE      R16 R2       ; R16 := R2
 43 [-]: LOADK     R17 K17      ; R17 := " to index "
 44 [-]: GETGLOBAL R18 K18      ; R18 := 0x64fb1586
 45 [-]: MOVE      R19 R8       ; R19 := R8
 46 [-]: CALL      R18 2 2      ; R18 := R18(R19)
 47 [-]: CONCAT    R15 R15 R18  ; R15 := R15 .. R16 .. R17 .. R18
 48 [-]: CALL      R14 2 1      ; R14(R15)
 49 [-]: GETTABLE  R14 R0 K12   ; R14 := R0["mTabMenu"]
 50 [-]: SELF      R14 R14 K19  ; R15 := R14; R14 := R14[0x45082a31]
 51 [-]: MOVE      R16 R8       ; R16 := R8
 52 [-]: MOVE      R17 R7       ; R17 := R7
 53 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 54 [-]: GETTABLE  R15 R4 K20   ; R15 := R4["mIsFlashingEnabled"]
 55 [-]: TEST      R15 0        ; if not R15 then PC := 77
 56 [-]: JMP       77           ; PC := 77
 57 [-]: GETTABLE  R15 R4 K21   ; R15 := R4["mCanFlash"]
 58 [-]: TEST      R15 0        ; if not R15 then PC := 77
 59 [-]: JMP       77           ; PC := 77
 60 [-]: GETTABLE  R15 R4 K22   ; R15 := R4["mCachedLines"]
 61 [-]: LEN       R15 R15      ; R15 := # R15
 62 [-]: LT        0 K23 R15    ; if 0.000000 >= R15 then PC := 77
 63 [-]: JMP       77           ; PC := 77
 64 [-]: GETGLOBAL R15 K24      ; R15 := 0x34291f5c
 65 [-]: GETTABLE  R15 R15 K25  ; R82 := R15[0x056bfe8b]
 66 [-]: CALL      R15 1 2      ; R15 := R15()
 67 [-]: TEST      R15 0        ; if not R15 then PC := 73
 68 [-]: JMP       73           ; PC := 73
 69 [-]: GETUPVAL  R15 U0       ; R15 := U0
 70 [-]: CALL      R15 1 2      ; R15 := R15()
 71 [-]: TEST      R15 1        ; if R15 then PC := 77
 72 [-]: JMP       77           ; PC := 77
 73 [-]: GETTABLE  R15 R0 K12   ; R15 := R0["mTabMenu"]
 74 [-]: SELF      R15 R15 K26  ; R16 := R15; R15 := R15[0x4e65573c]
 75 [-]: MOVE      R17 R14      ; R17 := R14
 76 [-]: CALL      R15 3 1      ; R15(R16,R17)
 77 [-]: GETGLOBAL R15 K24      ; R15 := 0x34291f5c
 78 [-]: GETTABLE  R15 R15 K27  ; R82 := R15[0xe6b41adb]
 79 [-]: CALL      R15 1 2      ; R15 := R15()
 80 [-]: TEST      R15 0        ; if not R15 then PC := 94
 81 [-]: JMP       94           ; PC := 94
 82 [-]: GETGLOBAL R15 K28      ; R15 := mWindow
 83 [-]: GETTABLE  R15 R15 K29  ; R15 := R15["mVisualMode"]
 84 [-]: GETGLOBAL R16 K28      ; R16 := mWindow
 85 [-]: GETTABLE  R16 R16 K30  ; R16 := R16["VISUAL_MODE_MENU_SIMPLE"]
 86 [-]: EQ        0 R15 R16    ; if R15 ~= R16 then PC := 94
 87 [-]: JMP       94           ; PC := 94
 88 [-]: GETGLOBAL R15 K31      ; R15 := 0xae91e43b
 89 [-]: SELF      R15 R15 K32  ; R16 := R15; R15 := R15[0xaade900e]
 90 [-]: GETTABLE  R17 R14 K33  ; R17 := R14["mClipName"]
 91 [-]: CONST     R18 11       ; R18 := 11.000000
 92 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
 93 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
 94 [-]: SELF      R15 R0 K34   ; R16 := R0; R15 := R0[0x161dbc67]
 95 [-]: CALL      R15 2 1      ; R15(R16)
 96 [-]: RETURN    R7 2         ; return R7
 97 [-]: RETURN    R0 1         ; return 


; Function #121.15:
;
; Name:            
; Defined at line: 6416
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7f5022cf
  2 [-]: GETTABLE  R3 R3 K1     ; R82 := R3[0x1a94c9cc]
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CONST     R5 2         ; R5 := 2.000000
  5 [-]: CONST     R6 -1        ; R6 := -1.000000
  6 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
  7 [-]: MOVE      R1 R3        ; R1 := R3
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0x3d106989
  9 [-]: LOADK     R4 K3        ; R4 := "ChatRedux::RemoveTab: Removing tab with name "
 10 [-]: MOVE      R5 R1        ; R5 := R1
 11 [-]: LOADK     R6 K4        ; R6 := ", pSkipRedraw: "
 12 [-]: GETGLOBAL R7 K5        ; R7 := 0x64fb1586
 13 [-]: MOVE      R8 R2        ; R8 := R2
 14 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 15 [-]: CONCAT    R4 R4 R7     ; R4 := R4 .. R5 .. R6 .. R7
 16 [-]: CALL      R3 2 1       ; R3(R4)
 17 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mTabMenu"]
 18 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["mElements"]
 19 [-]: LEN       R3 R3        ; R3 := # R3
 20 [-]: CONST     R4 1         ; R4 := 1.000000
 21 [-]: MOVE      R5 R3        ; R5 := R3
 22 [-]: CONST     R6 1         ; R6 := 1.000000
 23 [-]: FORPREP   R4 51        ; R4 -= R6; PC := 51
 24 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["mTabMenu"]
 25 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["mElements"]
 26 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 27 [-]: GETTABLE  R9 R8 K8     ; R9 := R8["ChannelName"]
 28 [-]: EQ        0 R9 R1      ; if R9 ~= R1 then PC := 51
 29 [-]: JMP       51           ; PC := 51
 30 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["mTabMenu"]
 31 [-]: SELF      R9 R9 K9     ; R10 := R9; R9 := R9[0x3bda3404]
 32 [-]: MOVE      R11 R8       ; R11 := R8
 33 [-]: OP_LOADBOOL R12 1 0      ; R12 := true
 34 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 35 [-]: LT        0 K10 R3     ; if 1.000000 >= R3 then PC := 44
 36 [-]: JMP       44           ; PC := 44
 37 [-]: TEST      R2 1         ; if R2 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["mTabMenu"]
 40 [-]: SELF      R9 R9 K11    ; R10 := R9; R9 := R9[0x0450ec4d]
 41 [-]: MOVE      R11 R8       ; R11 := R8
 42 [-]: MOVE      R12 R7       ; R12 := R7
 43 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 44 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["mTabMenu"]
 45 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0x9ae7e2d2]
 46 [-]: MOVE      R11 R7       ; R11 := R7
 47 [-]: MOVE      R12 R2       ; R12 := R2
 48 [-]: MOVE      R13 R2       ; R13 := R2
 49 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 50 [-]: JMP       52           ; PC := 52
 51 [-]: FORLOOP   R4 24        ; R4 += R6; if R4 <= R5 then begin PC := 24; R7 := R4 end
 52 [-]: SELF      R9 R0 K13    ; R10 := R0; R9 := R0[0x161dbc67]
 53 [-]: CALL      R9 2 1       ; R9(R10)
 54 [-]: RETURN    R0 1         ; return 


; Function #121.16:
;
; Name:            
; Defined at line: 6438
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x9383bc56]
  3 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  4 [-]: LOADK     R3 K3        ; R3 := "Window.TabMenu.MenuPanel.MenuEntry"
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: SETTABLE  R0 K0 R1     ; R0["mTabMenu"] := R1
  7 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
  8 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x1e5b5cfe]
  9 [-]: LOADK     R3 K5        ; R3 := "EntryReleased"
 10 [-]: LOADK     R4 K6        ; R4 := "EntryFocused"
 11 [-]: LOADK     R5 K7        ; R5 := "EntryUnfocused"
 12 [-]: LOADK     R6 K8        ; R6 := "EntryPressed"
 13 [-]: LOADNIL   R7 R8        ; R7 := R8 := nil
 14 [-]: LOADK     R9 K5        ; R9 := "EntryReleased"
 15 [-]: CALL      R1 9 1       ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
 16 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 17 [-]: SETTABLE  R1 K9 K10    ; R1["mForcedVerticalSeparation"] := 0.000000
 18 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 19 [-]: SETTABLE  R1 K11 K10   ; R1["mForcedHorizontalSeparation"] := 0.000000
 20 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 21 [-]: SETTABLE  R1 K12 K10   ; R1["mInitialX"] := 0.000000
 22 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 23 [-]: SETTABLE  R1 K13 R0    ; R1["mParent"] := R0
 24 [-]: GETGLOBAL R1 K14       ; R1 := 0x38f10e85
 25 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 26 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mTabMenu"]
 27 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["mClipName"]
 28 [-]: LOADK     R4 K16       ; R4 := ".swapDepths"
 29 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 30 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mTabMenu"]
 31 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["mInitialDepth"]
 32 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mTabMenu"]
 33 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["mDepthDirection"]
 34 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
 35 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 36 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 37 [-]: CLOSURE   R2 0         ; R2 := closure(Function #121.16.1)
 38 [-]: SETTABLE  R1 K19 R2    ; R1["OnRemoveElement"] := R2
 39 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 40 [-]: CLOSURE   R2 1         ; R2 := closure(Function #121.16.2)
 41 [-]: SETTABLE  R1 K20 R2    ; R1["ShowPersonalNotification"] := R2
 42 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 43 [-]: CLOSURE   R2 2         ; R2 := closure(Function #121.16.3)
 44 [-]: SETTABLE  R1 K21 R2    ; R1["HidePersonalNotification"] := R2
 45 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 46 [-]: CLOSURE   R2 3         ; R2 := closure(Function #121.16.4)
 47 [-]: GETUPVAL  R0 U1        ; R0 := U1
 48 [-]: SETTABLE  R1 K22 R2    ; R1["StartFlashing"] := R2
 49 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 50 [-]: CLOSURE   R2 4         ; R2 := closure(Function #121.16.5)
 51 [-]: SETTABLE  R1 K23 R2    ; R1["StopFlashing"] := R2
 52 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 53 [-]: CLOSURE   R2 5         ; R2 := closure(Function #121.16.6)
 54 [-]: SETTABLE  R1 K24 R2    ; R1["SetTabColour"] := R2
 55 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 56 [-]: CLOSURE   R2 6         ; R2 := closure(Function #121.16.7)
 57 [-]: GETUPVAL  R0 U2        ; R0 := U2
 58 [-]: SETTABLE  R1 K25 R2    ; R1["DrawDecoLine"] := R2
 59 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 60 [-]: CLOSURE   R2 7         ; R2 := closure(Function #121.16.8)
 61 [-]: SETTABLE  R1 K26 R2    ; R1["SetDivLinePos"] := R2
 62 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 63 [-]: CLOSURE   R2 8         ; R2 := closure(Function #121.16.9)
 64 [-]: SETTABLE  R1 K27 R2    ; R1["SetRightBumperPos"] := R2
 65 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 66 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mTabMenu"]
 67 [-]: GETTABLE  R2 R2 K29    ; R2 := R2["Redraw"]
 68 [-]: SETTABLE  R1 K28 R2    ; R1["_TabMenu_Redraw"] := R2
 69 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 70 [-]: CLOSURE   R2 9         ; R2 := closure(Function #121.16.10)
 71 [-]: SETTABLE  R1 K29 R2    ; R1["Redraw"] := R2
 72 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 73 [-]: CLOSURE   R2 10        ; R2 := closure(Function #121.16.11)
 74 [-]: SETTABLE  R1 K30 R2    ; R1["CalculateX"] := R2
 75 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 76 [-]: CLOSURE   R2 11        ; R2 := closure(Function #121.16.12)
 77 [-]: MOVE      R0 R0        ; R0 := R0
 78 [-]: GETUPVAL  R0 U1        ; R0 := U1
 79 [-]: SETTABLE  R1 K31 R2    ; R1["mElementDrawCallback"] := R2
 80 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 81 [-]: CLOSURE   R2 12        ; R2 := closure(Function #121.16.13)
 82 [-]: SETTABLE  R1 K32 R2    ; R1["IsMouseInTabMask"] := R2
 83 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 84 [-]: CLOSURE   R2 13        ; R2 := closure(Function #121.16.14)
 85 [-]: SETTABLE  R1 K33 R2    ; R1["mOnFocusedCallback"] := R2
 86 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 87 [-]: CLOSURE   R2 14        ; R2 := closure(Function #121.16.15)
 88 [-]: SETTABLE  R1 K34 R2    ; R1[0x0085f8f0] := R2
 89 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 90 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mTabMenu"]
 91 [-]: GETTABLE  R2 R2 K36    ; R2 := R2["OnSelected"]
 92 [-]: SETTABLE  R1 K35 R2    ; R1["_TabMenu_OnSelected"] := R2
 93 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 94 [-]: CLOSURE   R2 15        ; R2 := closure(Function #121.16.16)
 95 [-]: MOVE      R0 R0        ; R0 := R0
 96 [-]: SETTABLE  R1 K36 R2    ; R1["OnSelected"] := R2
 97 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mTabMenu"]
 98 [-]: CLOSURE   R2 16        ; R2 := closure(Function #121.16.17)
 99 [-]: MOVE      R0 R0        ; R0 := R0
100 [-]: GETUPVAL  R0 U1        ; R0 := U1
101 [-]: SETTABLE  R1 K37 R2    ; R1["mOnSelectedCallback"] := R2
102 [-]: SELF      R1 R0 K38    ; R2 := R0; R1 := R0[0x48d0b431]
103 [-]: CALL      R1 2 1       ; R1(R2)
104 [-]: RETURN    R0 1         ; return 


; Function #121.16.1:
;
; Name:            
; Defined at line: 6448
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0[0x5465f8f3]
  2 [-]: SELF      R5 R0 K1     ; R6 := R0; R5 := R0[0x5fbddc1a]
  3 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
  4 [-]: CALL      R3 0 2       ; R3 := R3(R4,...)
  5 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mInitialX"]
  6 [-]: LE        1 K3 R4      ; if 0.000000 <= R4 then PC := 13
  7 [-]: JMP       13           ; PC := 13
  8 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
  9 [-]: MOVE      R5 R3        ; R5 := R3
 10 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 11 [-]: TEST      R4 0         ; if not R4 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: LOADNIL   R4 R4        ; R4 := nil
 15 [-]: GETTABLE  R5 R3 K5     ; R5 := R3["Id"]
 16 [-]: GETTABLE  R6 R1 K5     ; R6 := R1["Id"]
 17 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 42
 18 [-]: JMP       42           ; PC := 42
 19 [-]: SELF      R5 R0 K0     ; R6 := R0; R5 := R0[0x5465f8f3]
 20 [-]: SUB       R7 R2 K6     ; R7 := R2 - 1.000000
 21 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 22 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 23 [-]: MOVE      R7 R5        ; R7 := R5
 24 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 25 [-]: TEST      R6 0         ; if not R6 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: GETGLOBAL R6 K7        ; R6 := 0xae91e43b
 29 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x91a24e4b]
 30 [-]: GETTABLE  R8 R5 K9     ; R8 := R5["mClipName"]
 31 [-]: CONST     R9 0         ; R9 := 0.000000
 32 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 33 [-]: GETGLOBAL R7 K7        ; R7 := 0xae91e43b
 34 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x91a24e4b]
 35 [-]: GETTABLE  R9 R5 K9     ; R9 := R5["mClipName"]
 36 [-]: LOADK     R10 K10      ; R10 := ".Bg"
 37 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 38 [-]: CONST     R10 12       ; R10 := 12.000000
 39 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 40 [-]: ADD       R4 R6 R7     ; R4 := R6 + R7
 41 [-]: JMP       77           ; PC := 77
 42 [-]: SELF      R6 R0 K0     ; R7 := R0; R6 := R0[0x5465f8f3]
 43 [-]: ADD       R8 R2 K6     ; R8 := R2 + 1.000000
 44 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 45 [-]: GETGLOBAL R7 K4        ; R7 := 0x7b998233
 46 [-]: MOVE      R8 R6        ; R8 := R6
 47 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 48 [-]: TEST      R7 0         ; if not R7 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: RETURN    R0 1         ; return 
 51 [-]: GETGLOBAL R7 K7        ; R7 := 0xae91e43b
 52 [-]: SELF      R7 R7 K8     ; R8 := R7; R7 := R7[0x91a24e4b]
 53 [-]: GETTABLE  R9 R6 K9     ; R9 := R6["mClipName"]
 54 [-]: CONST     R10 0        ; R10 := 0.000000
 55 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 56 [-]: GETGLOBAL R8 K7        ; R8 := 0xae91e43b
 57 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8[0x91a24e4b]
 58 [-]: GETTABLE  R10 R1 K9    ; R10 := R1["mClipName"]
 59 [-]: CONST     R11 0        ; R11 := 0.000000
 60 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 61 [-]: GETGLOBAL R9 K7        ; R9 := 0xae91e43b
 62 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9[0x91a24e4b]
 63 [-]: GETTABLE  R11 R3 K9    ; R11 := R3["mClipName"]
 64 [-]: CONST     R12 0        ; R12 := 0.000000
 65 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 66 [-]: GETGLOBAL R10 K7       ; R10 := 0xae91e43b
 67 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10[0x91a24e4b]
 68 [-]: GETTABLE  R12 R3 K9    ; R12 := R3["mClipName"]
 69 [-]: LOADK     R13 K10      ; R13 := ".Bg"
 70 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 71 [-]: CONST     R13 12       ; R13 := 12.000000
 72 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 73 [-]: SUB       R10 R10 K11  ; R10 := R10 - 10.000000
 74 [-]: SUB       R11 R7 R8    ; R11 := R7 - R8
 75 [-]: SUB       R11 R9 R11   ; R11 := R9 - R11
 76 [-]: ADD       R4 R11 R10   ; R4 := R11 + R10
 77 [-]: GETGLOBAL R11 K7       ; R11 := 0xae91e43b
 78 [-]: SELF      R11 R11 K8   ; R12 := R11; R11 := R11[0x91a24e4b]
 79 [-]: LOADK     R13 K12      ; R13 := "Window.TabMenu.TabMask"
 80 [-]: CONST     R14 12       ; R14 := 12.000000
 81 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 82 [-]: LT        0 R4 R11     ; if R4 >= R11 then PC := 95
 83 [-]: JMP       95           ; PC := 95
 84 [-]: GETTABLE  R12 R0 K2    ; R12 := R0["mInitialX"]
 85 [-]: GETGLOBAL R13 K13      ; R13 := 0x5bced4c4
 86 [-]: GETTABLE  R13 R13 K14  ; R82 := R13[0xac1b386a]
 87 [-]: SUB       R14 R11 R4   ; R14 := R11 - R4
 88 [-]: GETGLOBAL R15 K13      ; R15 := 0x5bced4c4
 89 [-]: GETTABLE  R15 R15 K15  ; R82 := R15[0xe4a5b3ca]
 90 [-]: GETTABLE  R16 R0 K2    ; R16 := R0["mInitialX"]
 91 [-]: CALL      R15 2 0      ; R15,... := R15(R16)
 92 [-]: CALL      R13 0 2      ; R13 := R13(R14,...)
 93 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
 94 [-]: SETTABLE  R0 K2 R12    ; R0["mInitialX"] := R12
 95 [-]: RETURN    R0 1         ; return 


; Function #121.16.2:
;
; Name:            
; Defined at line: 6478
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["hasPersonalNotification"]
  8 [-]: TEST      R2 1         ; if R2 then PC := 30
  9 [-]: JMP       30           ; PC := 30
 10 [-]: SETTABLE  R1 K1 K2     ; R1["hasPersonalNotification"] := true
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 12 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xc0a3774b]
 13 [-]: GETTABLE  R4 R1 K5     ; R4 := R1["mClipName"]
 14 [-]: LOADK     R5 K6        ; R5 := "Dot"
 15 [-]: CONST     R6 11        ; R6 := 11.000000
 16 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 17 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 19 [-]: GETGLOBAL R3 K7        ; R3 := mWindow
 20 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mSimpleTabList"]
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: TEST      R2 1         ; if R2 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETGLOBAL R2 K7        ; R2 := mWindow
 25 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mSimpleTabList"]
 26 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xe9bda48c]
 27 [-]: GETTABLE  R4 R1 K10    ; R4 := R1["Id"]
 28 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 29 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 30 [-]: RETURN    R0 1         ; return 


; Function #121.16.3:
;
; Name:            
; Defined at line: 6494
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["hasPersonalNotification"]
  8 [-]: TEST      R2 0         ; if not R2 then PC := 18
  9 [-]: JMP       18           ; PC := 18
 10 [-]: SETTABLE  R1 K1 K2     ; R1["hasPersonalNotification"] := false
 11 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 12 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xc0a3774b]
 13 [-]: GETTABLE  R4 R1 K5     ; R4 := R1["mClipName"]
 14 [-]: LOADK     R5 K6        ; R5 := "Dot"
 15 [-]: CONST     R6 11        ; R6 := 11.000000
 16 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 17 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 18 [-]: RETURN    R0 1         ; return 


; Function #121.16.4:
;
; Name:            
; Defined at line: 6506
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 101
  5 [-]: JMP       101          ; PC := 101
  6 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["isFlashing"]
  7 [-]: TEST      R2 1         ; if R2 then PC := 65
  8 [-]: JMP       65           ; PC := 65
  9 [-]: SETTABLE  R1 K1 K2     ; R1["isFlashing"] := true
 10 [-]: GETGLOBAL R2 K3        ; R2 := mMuteNotificationSounds
 11 [-]: TEST      R2 1         ; if R2 then PC := 46
 12 [-]: JMP       46           ; PC := 46
 13 [-]: GETTABLE  R2 R1 K4     ; R2 := R1["Id"]
 14 [-]: GETGLOBAL R3 K5        ; R3 := mWindow
 15 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["CHANNEL_SESSION"]
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETTABLE  R2 R1 K4     ; R2 := R1["Id"]
 19 [-]: GETGLOBAL R3 K5        ; R3 := mWindow
 20 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["CHANNEL_PRIVATE_CHAT"]
 21 [-]: LE        0 R3 R2      ; if R3 > R2 then PC := 46
 22 [-]: JMP       46           ; PC := 46
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: GETTABLE  R2 R2 K8     ; R82 := R2[0x06d055f9]
 25 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["Id"]
 26 [-]: GETGLOBAL R4 K5        ; R4 := mWindow
 27 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["CHANNEL_SESSION"]
 28 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: OP_LOADBOOL R3 0 1       ; R3 := false; PC := 31
 31 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 32 [-]: GETGLOBAL R4 K9        ; R4 := 0x0032441c
 33 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["UISound_ChatSquad"]
 34 [-]: GETGLOBAL R5 K9        ; R5 := 0x0032441c
 35 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["UISound_ChatPM"]
 36 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 37 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 38 [-]: MOVE      R4 R2        ; R4 := R2
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: TEST      R3 1         ; if R3 then PC := 46
 41 [-]: JMP       46           ; PC := 46
 42 [-]: GETUPVAL  R3 U0        ; R3 := U0
 43 [-]: GETTABLE  R3 R3 K12    ; R82 := R3[0x659d451f]
 44 [-]: MOVE      R4 R2        ; R4 := R2
 45 [-]: CALL      R3 2 1       ; R3(R4)
 46 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 47 [-]: GETGLOBAL R4 K5        ; R4 := mWindow
 48 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["mSimpleTabList"]
 49 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 50 [-]: TEST      R3 1         ; if R3 then PC := 65
 51 [-]: JMP       65           ; PC := 65
 52 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["mSelectedElement"]
 53 [-]: EQ        1 R3 K15     ; if R3 == nil then PC := 60
 54 [-]: JMP       60           ; PC := 60
 55 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["mSelectedElement"]
 56 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Id"]
 57 [-]: GETTABLE  R4 R1 K4     ; R4 := R1["Id"]
 58 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 65
 59 [-]: JMP       65           ; PC := 65
 60 [-]: GETGLOBAL R3 K5        ; R3 := mWindow
 61 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mSimpleTabList"]
 62 [-]: SELF      R3 R3 K16    ; R4 := R3; R3 := R3[0xb9fd7a94]
 63 [-]: GETTABLE  R5 R1 K4     ; R5 := R1["Id"]
 64 [-]: CALL      R3 3 1       ; R3(R4,R5)
 65 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 66 [-]: GETGLOBAL R4 K5        ; R4 := mWindow
 67 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["mSimpleTabList"]
 68 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 69 [-]: TEST      R3 1         ; if R3 then PC := 101
 70 [-]: JMP       101          ; PC := 101
 71 [-]: GETGLOBAL R3 K5        ; R3 := mWindow
 72 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["mVisualMode"]
 73 [-]: GETGLOBAL R4 K5        ; R4 := mWindow
 74 [-]: GETTABLE  R4 R4 K18    ; R4 := R4["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 75 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 101
 76 [-]: JMP       101          ; PC := 101
 77 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["mSelectedElement"]
 78 [-]: EQ        1 R3 K15     ; if R3 == nil then PC := 85
 79 [-]: JMP       85           ; PC := 85
 80 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["mSelectedElement"]
 81 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["Id"]
 82 [-]: GETTABLE  R4 R1 K4     ; R4 := R1["Id"]
 83 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 86
 84 [-]: JMP       86           ; PC := 86
 85 [-]: OP_LOADBOOL R3 0 1       ; R3 := false; PC := 86
 86 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 87 [-]: GETGLOBAL R4 K19       ; R4 := mActiveTabNotificationsOnly
 88 [-]: TEST      R4 0         ; if not R4 then PC := 92
 89 [-]: JMP       92           ; PC := 92
 90 [-]: TEST      R3 0         ; if not R3 then PC := 96
 91 [-]: JMP       96           ; PC := 96
 92 [-]: GETGLOBAL R4 K5        ; R4 := mWindow
 93 [-]: SELF      R4 R4 K20    ; R5 := R4; R4 := R4[0x3914d936]
 94 [-]: NOT       R6 R3        ; R6 := not R3
 95 [-]: CALL      R4 3 1       ; R4(R5,R6)
 96 [-]: GETGLOBAL R4 K5        ; R4 := mWindow
 97 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["mSimpleTabList"]
 98 [-]: SELF      R4 R4 K21    ; R5 := R4; R4 := R4[0x5a78de8b]
 99 [-]: GETTABLE  R6 R1 K4     ; R6 := R1["Id"]
100 [-]: CALL      R4 3 1       ; R4(R5,R6)
101 [-]: RETURN    R0 1         ; return 


; Function #121.16.5:
;
; Name:            
; Defined at line: 6536
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R1        ; R4 := R1
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0xbd8bf3b5]
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: CALL      R3 3 1       ; R3(R4,R5)
  9 [-]: GETTABLE  R3 R1 K2     ; R3 := R1["isFlashing"]
 10 [-]: TEST      R3 0         ; if not R3 then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: SETTABLE  R1 K2 K3     ; R1["isFlashing"] := false
 13 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0[0xbb8e320d]
 14 [-]: MOVE      R5 R1        ; R5 := R1
 15 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 16 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 17 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 18 [-]: GETGLOBAL R4 K5        ; R4 := mWindow
 19 [-]: GETTABLE  R4 R4 K6     ; R4 := R4["mSimpleTabList"]
 20 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 21 [-]: TEST      R3 1         ; if R3 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R3 K5        ; R3 := mWindow
 24 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mSimpleTabList"]
 25 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xa0a0ed09]
 26 [-]: GETTABLE  R5 R1 K8     ; R5 := R1["Id"]
 27 [-]: MOVE      R6 R2        ; R6 := R2
 28 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 29 [-]: RETURN    R0 1         ; return 


; Function #121.16.6:
;
; Name:            
; Defined at line: 6551
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: EQ        0 R1 K0      ; if R1 ~= nil then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: CONST     R4 50        ; R4 := 50.000000
  5 [-]: GETGLOBAL R5 K1        ; R5 := 0x0032441c
  6 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["UIColor_White"]
  7 [-]: GETGLOBAL R6 K1        ; R6 := 0x0032441c
  8 [-]: GETTABLE  R6 R6 K3     ; R6 := R6["UIColorObject_Black"]
  9 [-]: SELF      R7 R0 K4     ; R8 := R0; R7 := R0[0xed1ab921]
 10 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 11 [-]: GETGLOBAL R8 K5        ; R8 := 0x7b998233
 12 [-]: MOVE      R9 R7        ; R9 := R7
 13 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 14 [-]: TEST      R8 1         ; if R8 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETTABLE  R8 R7 K6     ; R8 := R7["Id"]
 17 [-]: GETTABLE  R9 R1 K6     ; R9 := R1["Id"]
 18 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: NOT       R8 R2        ; R8 := not R2
 21 [-]: JMP       24           ; PC := 24
 22 [-]: OP_LOADBOOL R8 0 1       ; R8 := false; PC := 23
 23 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 24 [-]: GETTABLE  R9 R0 K7     ; R9 := R0["mSelectedElement"]
 25 [-]: EQ        1 R9 K0      ; if R9 == nil then PC := 59
 26 [-]: JMP       59           ; PC := 59
 27 [-]: GETTABLE  R9 R0 K7     ; R9 := R0["mSelectedElement"]
 28 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["Id"]
 29 [-]: GETTABLE  R10 R1 K6    ; R10 := R1["Id"]
 30 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 59
 31 [-]: JMP       59           ; PC := 59
 32 [-]: GETGLOBAL R9 K8        ; R9 := mWindow
 33 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mVisualMode"]
 34 [-]: GETGLOBAL R10 K8       ; R10 := mWindow
 35 [-]: GETTABLE  R10 R10 K10  ; R10 := R10["VISUAL_MODE_MENU_SIMPLE"]
 36 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 41
 37 [-]: JMP       41           ; PC := 41
 38 [-]: GETTABLE  R9 R1 K11    ; R9 := R1["isFlashing"]
 39 [-]: TEST      R9 1         ; if R9 then PC := 59
 40 [-]: JMP       59           ; PC := 59
 41 [-]: GETGLOBAL R9 K8        ; R9 := mWindow
 42 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mVisualMode"]
 43 [-]: GETGLOBAL R10 K8       ; R10 := mWindow
 44 [-]: GETTABLE  R10 R10 K12  ; R10 := R10["VISUAL_MODE_MENU_FULL"]
 45 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 53
 46 [-]: JMP       53           ; PC := 53
 47 [-]: GETGLOBAL R9 K8        ; R9 := mWindow
 48 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mVisualMode"]
 49 [-]: GETGLOBAL R10 K8       ; R10 := mWindow
 50 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["VISUAL_MODE_GAMEPLAY_FULL"]
 51 [-]: EQ        0 R9 R10     ; if R9 ~= R10 then PC := 57
 52 [-]: JMP       57           ; PC := 57
 53 [-]: GETGLOBAL R9 K1        ; R9 := 0x0032441c
 54 [-]: GETTABLE  R6 R9 K14    ; R6 := R9["UIColorObject_White"]
 55 [-]: GETGLOBAL R9 K1        ; R9 := 0x0032441c
 56 [-]: GETTABLE  R5 R9 K15    ; R5 := R9["UIColor_Black"]
 57 [-]: CONST     R4 100       ; R4 := 100.000000
 58 [-]: JMP       72           ; PC := 72
 59 [-]: TEST      R8 0         ; if not R8 then PC := 63
 60 [-]: JMP       63           ; PC := 63
 61 [-]: CONST     R4 100       ; R4 := 100.000000
 62 [-]: JMP       72           ; PC := 72
 63 [-]: GETTABLE  R9 R1 K11    ; R9 := R1["isFlashing"]
 64 [-]: TEST      R9 0         ; if not R9 then PC := 72
 65 [-]: JMP       72           ; PC := 72
 66 [-]: GETGLOBAL R9 K5        ; R9 := 0x7b998233
 67 [-]: MOVE      R10 R3       ; R10 := R3
 68 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 69 [-]: TEST      R9 1         ; if R9 then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: MOVE      R4 R3        ; R4 := R3
 72 [-]: GETGLOBAL R9 K16       ; R9 := 0xae91e43b
 73 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9[0xf64b7262]
 74 [-]: GETTABLE  R11 R1 K18   ; R11 := R1["mClipName"]
 75 [-]: LOADK     R12 K19      ; R12 := "Icon"
 76 [-]: CONST     R13 10       ; R13 := 10.000000
 77 [-]: MOVE      R14 R4       ; R14 := R4
 78 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 79 [-]: GETGLOBAL R9 K16       ; R9 := 0xae91e43b
 80 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9[0xf64b7262]
 81 [-]: GETTABLE  R11 R1 K18   ; R11 := R1["mClipName"]
 82 [-]: LOADK     R12 K19      ; R12 := "Icon"
 83 [-]: CONST     R13 9        ; R13 := 9.000000
 84 [-]: MOVE      R14 R5       ; R14 := R5
 85 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 86 [-]: GETGLOBAL R9 K16       ; R9 := 0xae91e43b
 87 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9[0xf64b7262]
 88 [-]: GETTABLE  R11 R1 K18   ; R11 := R1["mClipName"]
 89 [-]: LOADK     R12 K20      ; R12 := "Label"
 90 [-]: CONST     R13 10       ; R13 := 10.000000
 91 [-]: MOVE      R14 R4       ; R14 := R4
 92 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
 93 [-]: GETGLOBAL R9 K16       ; R9 := 0xae91e43b
 94 [-]: SELF      R9 R9 K17    ; R10 := R9; R9 := R9[0xf64b7262]
 95 [-]: GETTABLE  R11 R1 K18   ; R11 := R1["mClipName"]
 96 [-]: LOADK     R12 K20      ; R12 := "Label"
 97 [-]: CONST     R13 36       ; R13 := 36.000000
 98 [-]: MOVE      R14 R5       ; R14 := R5
 99 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
100 [-]: GETGLOBAL R9 K16       ; R9 := 0xae91e43b
101 [-]: SELF      R9 R9 K21    ; R10 := R9; R9 := R9[0x91e13703]
102 [-]: GETTABLE  R11 R1 K18   ; R11 := R1["mClipName"]
103 [-]: LOADK     R12 K22      ; R12 := ".Bg"
104 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
105 [-]: LOADK     R12 K23      ; R12 := "RectInnerColor"
106 [-]: GETTABLE  R13 R6 K24   ; R13 := R6["r"]
107 [-]: GETTABLE  R14 R6 K25   ; R14 := R6["g"]
108 [-]: GETTABLE  R15 R6 K26   ; R15 := R6["b"]
109 [-]: CONST     R16 1        ; R16 := 1.000000
110 [-]: CALL      R9 8 1       ; R9(R10,R11,R12,R13,R14,R15,R16)
111 [-]: RETURN    R0 1         ; return 


; Function #121.16.7:
;
; Name:            
; Defined at line: 6583
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 1         ; if R2 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["mClipName"]
  7 [-]: EQ        0 R2 K2      ; if R2 ~= nil then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mSelectedElement"]
 11 [-]: EQ        1 R2 K2      ; if R2 == nil then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mSelectedElement"]
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["Id"]
 15 [-]: GETTABLE  R3 R1 K4     ; R3 := R1["Id"]
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 19
 17 [-]: JMP       19           ; PC := 19
 18 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 19
 19 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 20 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 21 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xc0a3774b]
 22 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mClipName"]
 23 [-]: LOADK     R6 K7        ; R6 := "DecoLine"
 24 [-]: CONST     R7 11        ; R7 := 11.000000
 25 [-]: MOVE      R8 R2        ; R8 := R2
 26 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 27 [-]: TEST      R2 1         ; if R2 then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: RETURN    R0 1         ; return 
 30 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 31 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x91a24e4b]
 32 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mClipName"]
 33 [-]: LOADK     R6 K9        ; R6 := ".Bg"
 34 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 35 [-]: CONST     R6 12        ; R6 := 12.000000
 36 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 37 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 38 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xf64b7262]
 39 [-]: GETTABLE  R6 R1 K1     ; R6 := R1["mClipName"]
 40 [-]: LOADK     R7 K7        ; R7 := "DecoLine"
 41 [-]: CONST     R8 12        ; R8 := 12.000000
 42 [-]: SUB       R9 R3 K11    ; R9 := R3 - 4.000000
 43 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 44 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 45 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0xf64b7262]
 46 [-]: GETTABLE  R6 R1 K1     ; R6 := R1["mClipName"]
 47 [-]: LOADK     R7 K7        ; R7 := "DecoLine"
 48 [-]: CONST     R8 9         ; R8 := 9.000000
 49 [-]: GETUPVAL  R9 U0        ; R9 := U0
 50 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 51 [-]: RETURN    R0 1         ; return 


; Function #121.16.8:
;
; Name:            
; Defined at line: 6600
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: CONST     R1 0         ; R1 := 0.000000
  2 [-]: CONST     R2 0         ; R2 := 0.000000
  3 [-]: GETGLOBAL R3 K0        ; R3 := 0x34291f5c
  4 [-]: GETTABLE  R3 R3 K1     ; R82 := R3[0x1467d5f4]
  5 [-]: CALL      R3 1 2       ; R3 := R3()
  6 [-]: TEST      R3 0         ; if not R3 then PC := 27
  7 [-]: JMP       27           ; PC := 27
  8 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
  9 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x91a24e4b]
 10 [-]: GETGLOBAL R5 K4        ; R5 := mWindow
 11 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mClipName"]
 12 [-]: LOADK     R6 K6        ; R6 := ".TabMenu.RightBumper"
 13 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 14 [-]: CONST     R6 0         ; R6 := 0.000000
 15 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 16 [-]: MOVE      R1 R3        ; R1 := R3
 17 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 18 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x91a24e4b]
 19 [-]: GETGLOBAL R5 K4        ; R5 := mWindow
 20 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mClipName"]
 21 [-]: LOADK     R6 K7        ; R6 := ".TabMenu.RightBumper.Tf"
 22 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 23 [-]: CONST     R6 33        ; R6 := 33.000000
 24 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 25 [-]: MOVE      R2 R3        ; R2 := R3
 26 [-]: JMP       45           ; PC := 45
 27 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 28 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x91a24e4b]
 29 [-]: GETGLOBAL R5 K4        ; R5 := mWindow
 30 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mClipName"]
 31 [-]: LOADK     R6 K8        ; R6 := ".TabMenu.RightArrow"
 32 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 33 [-]: CONST     R6 0         ; R6 := 0.000000
 34 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 35 [-]: MOVE      R1 R3        ; R1 := R3
 36 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 37 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x91a24e4b]
 38 [-]: GETGLOBAL R5 K4        ; R5 := mWindow
 39 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mClipName"]
 40 [-]: LOADK     R6 K8        ; R6 := ".TabMenu.RightArrow"
 41 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 42 [-]: CONST     R6 12        ; R6 := 12.000000
 43 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 44 [-]: MOVE      R2 R3        ; R2 := R3
 45 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 46 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0xf64b7262]
 47 [-]: GETGLOBAL R5 K4        ; R5 := mWindow
 48 [-]: GETTABLE  R5 R5 K5     ; R5 := R5["mClipName"]
 49 [-]: LOADK     R6 K10       ; R6 := "TabMenu.TabDivLine"
 50 [-]: CONST     R7 0         ; R7 := 0.000000
 51 [-]: DIV       R8 R2 K11    ; R8 := R2 / 2.000000
 52 [-]: ADD       R8 R1 R8     ; R8 := R1 + R8
 53 [-]: ADD       R8 R8 K12    ; R8 := R8 + 5.000000
 54 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 55 [-]: RETURN    R0 1         ; return 


; Function #121.16.9:
;
; Name:            
; Defined at line: 6614
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  22

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0x5fbddc1a]
  2 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  3 [-]: EQ        0 R1 K1      ; if R1 ~= 0.000000 then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: RETURN    R0 1         ; return 
  6 [-]: LOADNIL   R2 R2        ; R2 := nil
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CONST     R4 1         ; R4 := 1.000000
  9 [-]: CONST     R5 -1        ; R5 := -1.000000
 10 [-]: FORPREP   R3 30        ; R3 -= R5; PC := 30
 11 [-]: SELF      R7 R0 K2     ; R8 := R0; R7 := R0[0x5465f8f3]
 12 [-]: MOVE      R9 R6        ; R9 := R6
 13 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 14 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
 15 [-]: MOVE      R9 R7        ; R9 := R7
 16 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 17 [-]: TEST      R8 1         ; if R8 then PC := 30
 18 [-]: JMP       30           ; PC := 30
 19 [-]: GETTABLE  R8 R7 K4     ; R8 := R7["mClipName"]
 20 [-]: EQ        1 R8 K5      ; if R8 == nil then PC := 30
 21 [-]: JMP       30           ; PC := 30
 22 [-]: GETGLOBAL R8 K6        ; R8 := 0xae91e43b
 23 [-]: SELF      R8 R8 K7     ; R9 := R8; R8 := R8[0xa7ec3e8a]
 24 [-]: GETTABLE  R10 R7 K4    ; R10 := R7["mClipName"]
 25 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 26 [-]: TEST      R8 0         ; if not R8 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: MOVE      R2 R7        ; R2 := R7
 29 [-]: JMP       31           ; PC := 31
 30 [-]: FORLOOP   R3 11        ; R3 += R5; if R3 <= R4 then begin PC := 11; R6 := R3 end
 31 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
 32 [-]: MOVE      R9 R2        ; R9 := R2
 33 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 34 [-]: TEST      R8 0         ; if not R8 then PC := 37
 35 [-]: JMP       37           ; PC := 37
 36 [-]: RETURN    R0 1         ; return 
 37 [-]: GETGLOBAL R8 K6        ; R8 := 0xae91e43b
 38 [-]: SELF      R8 R8 K8     ; R9 := R8; R8 := R8[0x91a24e4b]
 39 [-]: GETTABLE  R10 R2 K4    ; R10 := R2["mClipName"]
 40 [-]: CONST     R11 0        ; R11 := 0.000000
 41 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 42 [-]: GETGLOBAL R9 K6        ; R9 := 0xae91e43b
 43 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9[0x91a24e4b]
 44 [-]: GETTABLE  R11 R2 K4    ; R11 := R2["mClipName"]
 45 [-]: LOADK     R12 K9       ; R12 := ".Bg"
 46 [-]: CONCAT    R11 R11 R12  ; R11 := R11 .. R12
 47 [-]: CONST     R12 12       ; R12 := 12.000000
 48 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 49 [-]: GETGLOBAL R10 K6       ; R10 := 0xae91e43b
 50 [-]: SELF      R10 R10 K8   ; R11 := R10; R10 := R10[0x91a24e4b]
 51 [-]: GETGLOBAL R12 K10      ; R12 := mWindow
 52 [-]: GETTABLE  R12 R12 K4   ; R12 := R12["mClipName"]
 53 [-]: LOADK     R13 K11      ; R13 := ".TabMenu.TabMask"
 54 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 55 [-]: CONST     R13 0        ; R13 := 0.000000
 56 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 57 [-]: GETGLOBAL R11 K6       ; R11 := 0xae91e43b
 58 [-]: SELF      R11 R11 K8   ; R12 := R11; R11 := R11[0x91a24e4b]
 59 [-]: GETGLOBAL R13 K10      ; R13 := mWindow
 60 [-]: GETTABLE  R13 R13 K4   ; R13 := R13["mClipName"]
 61 [-]: LOADK     R14 K11      ; R14 := ".TabMenu.TabMask"
 62 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
 63 [-]: CONST     R14 12       ; R14 := 12.000000
 64 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 65 [-]: GETGLOBAL R12 K6       ; R12 := 0xae91e43b
 66 [-]: SELF      R12 R12 K8   ; R13 := R12; R12 := R12[0x91a24e4b]
 67 [-]: GETGLOBAL R14 K10      ; R14 := mWindow
 68 [-]: GETTABLE  R14 R14 K4   ; R14 := R14["mClipName"]
 69 [-]: LOADK     R15 K12      ; R15 := ".TabMenu.RightBumper.Tf"
 70 [-]: CONCAT    R14 R14 R15  ; R14 := R14 .. R15
 71 [-]: CONST     R15 33       ; R15 := 33.000000
 72 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 73 [-]: ADD       R13 R8 R9    ; R13 := R8 + R9
 74 [-]: ADD       R13 R13 R12  ; R13 := R13 + R12
 75 [-]: ADD       R13 R13 K13  ; R13 := R13 + 36.000000
 76 [-]: DIV       R14 R12 K14  ; R14 := R12 / 2.000000
 77 [-]: ADD       R14 R11 R14  ; R14 := R11 + R14
 78 [-]: ADD       R14 R14 K14  ; R14 := R14 + 2.000000
 79 [-]: ADD       R14 R10 R14  ; R14 := R10 + R14
 80 [-]: LT        0 R14 R13    ; if R14 >= R13 then PC := 86
 81 [-]: JMP       86           ; PC := 86
 82 [-]: DIV       R14 R12 K14  ; R14 := R12 / 2.000000
 83 [-]: ADD       R14 R11 R14  ; R14 := R11 + R14
 84 [-]: ADD       R14 R14 K14  ; R14 := R14 + 2.000000
 85 [-]: ADD       R13 R10 R14  ; R13 := R10 + R14
 86 [-]: GETGLOBAL R14 K6       ; R14 := 0xae91e43b
 87 [-]: SELF      R14 R14 K15  ; R15 := R14; R14 := R14[0xf64b7262]
 88 [-]: GETGLOBAL R16 K10      ; R16 := mWindow
 89 [-]: GETTABLE  R16 R16 K4   ; R16 := R16["mClipName"]
 90 [-]: LOADK     R17 K16      ; R17 := "TabMenu.RightBumper"
 91 [-]: CONST     R18 0        ; R18 := 0.000000
 92 [-]: MOVE      R19 R13      ; R19 := R13
 93 [-]: CALL      R14 6 1      ; R14(R15,R16,R17,R18,R19)
 94 [-]: GETGLOBAL R14 K6       ; R14 := 0xae91e43b
 95 [-]: SELF      R14 R14 K8   ; R15 := R14; R14 := R14[0x91a24e4b]
 96 [-]: GETGLOBAL R16 K10      ; R16 := mWindow
 97 [-]: GETTABLE  R16 R16 K4   ; R16 := R16["mClipName"]
 98 [-]: LOADK     R17 K17      ; R17 := ".TabMenu.RightArrow"
 99 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
100 [-]: CONST     R17 12       ; R17 := 12.000000
101 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
102 [-]: ADD       R15 R8 R9    ; R15 := R8 + R9
103 [-]: ADD       R15 R15 R14  ; R15 := R15 + R14
104 [-]: ADD       R15 R15 K18  ; R15 := R15 + 24.000000
105 [-]: ADD       R16 R11 R14  ; R16 := R11 + R14
106 [-]: SUB       R16 R16 K14  ; R16 := R16 - 2.000000
107 [-]: ADD       R16 R10 R16  ; R16 := R10 + R16
108 [-]: LT        0 R16 R15    ; if R16 >= R15 then PC := 113
109 [-]: JMP       113          ; PC := 113
110 [-]: ADD       R16 R11 R14  ; R16 := R11 + R14
111 [-]: SUB       R16 R16 K14  ; R16 := R16 - 2.000000
112 [-]: ADD       R15 R10 R16  ; R15 := R10 + R16
113 [-]: GETGLOBAL R16 K6       ; R16 := 0xae91e43b
114 [-]: SELF      R16 R16 K15  ; R17 := R16; R16 := R16[0xf64b7262]
115 [-]: GETGLOBAL R18 K10      ; R18 := mWindow
116 [-]: GETTABLE  R18 R18 K4   ; R18 := R18["mClipName"]
117 [-]: LOADK     R19 K19      ; R19 := "TabMenu.RightArrow"
118 [-]: CONST     R20 0        ; R20 := 0.000000
119 [-]: MOVE      R21 R15      ; R21 := R15
120 [-]: CALL      R16 6 1      ; R16(R17,R18,R19,R20,R21)
121 [-]: SELF      R16 R0 K20   ; R17 := R0; R16 := R0[0xddcbd3fb]
122 [-]: CALL      R16 2 1      ; R16(R17)
123 [-]: GETGLOBAL R16 K10      ; R16 := mWindow
124 [-]: SELF      R16 R16 K21  ; R17 := R16; R16 := R16[0x5a1170ee]
125 [-]: CALL      R16 2 1      ; R16(R17)
126 [-]: RETURN    R0 1         ; return 


; Function #121.16.10:
;
; Name:            
; Defined at line: 6660
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: SELF      R4 R0 K0     ; R5 := R0; R4 := R0[0x502b0639]
  2 [-]: MOVE      R6 R1        ; R6 := R1
  3 [-]: MOVE      R7 R2        ; R7 := R2
  4 [-]: MOVE      R8 R3        ; R8 := R3
  5 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
  6 [-]: SELF      R4 R0 K1     ; R5 := R0; R4 := R0[0x99c20c27]
  7 [-]: CALL      R4 2 1       ; R4(R5)
  8 [-]: RETURN    R0 1         ; return 


; Function #121.16.11:
;
; Name:            
; Defined at line: 6666
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mInitialX"]
  2 [-]: GETTABLE  R3 R1 K1     ; R3 := R1["Id"]
  3 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mElements"]
  4 [-]: GETTABLE  R4 R4 K3     ; R4 := R4[1.000000]
  5 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Id"]
  6 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 47
  7 [-]: JMP       47           ; PC := 47
  8 [-]: SELF      R3 R0 K4     ; R4 := R0; R3 := R0[0x1d246732]
  9 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["Id"]
 10 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 11 [-]: SELF      R4 R0 K5     ; R5 := R0; R4 := R0[0x5465f8f3]
 12 [-]: SUB       R6 R3 K3     ; R6 := R3 - 1.000000
 13 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 14 [-]: GETGLOBAL R5 K6        ; R5 := 0x7b998233
 15 [-]: MOVE      R6 R4        ; R6 := R4
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: TEST      R5 1         ; if R5 then PC := 47
 18 [-]: JMP       47           ; PC := 47
 19 [-]: GETTABLE  R5 R4 K7     ; R5 := R4["mClipName"]
 20 [-]: GETGLOBAL R6 K6        ; R6 := 0x7b998233
 21 [-]: MOVE      R7 R5        ; R7 := R5
 22 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 23 [-]: TEST      R6 0         ; if not R6 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: JMP       33           ; PC := 33
 26 [-]: GETGLOBAL R6 K8        ; R6 := 0xae91e43b
 27 [-]: SELF      R6 R6 K9     ; R7 := R6; R6 := R6[0xa7ec3e8a]
 28 [-]: MOVE      R8 R5        ; R8 := R5
 29 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 30 [-]: TEST      R6 1         ; if R6 then PC := 33
 31 [-]: JMP       33           ; PC := 33
 32 [-]: JMP       33           ; PC := 33
 33 [-]: GETGLOBAL R6 K8        ; R6 := 0xae91e43b
 34 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6[0x91a24e4b]
 35 [-]: GETTABLE  R8 R4 K7     ; R8 := R4["mClipName"]
 36 [-]: LOADK     R9 K11       ; R9 := ".Bg"
 37 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 38 [-]: CONST     R9 12        ; R9 := 12.000000
 39 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 40 [-]: GETGLOBAL R7 K8        ; R7 := 0xae91e43b
 41 [-]: SELF      R7 R7 K10    ; R8 := R7; R7 := R7[0x91a24e4b]
 42 [-]: GETTABLE  R9 R4 K7     ; R9 := R4["mClipName"]
 43 [-]: CONST     R10 0        ; R10 := 0.000000
 44 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 45 [-]: ADD       R7 R7 R6     ; R7 := R7 + R6
 46 [-]: ADD       R2 R7 K3     ; R2 := R7 + 1.000000
 47 [-]: RETURN    R2 2         ; return R2
 48 [-]: RETURN    R0 1         ; return 


; Function #121.16.12:
;
; Name:            
; Defined at line: 6692
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x38f10e85
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := ".setMask"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: LOADK     R4 K4        ; R4 := "Window.TabMenu.TabMask"
  7 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  8 [-]: GETGLOBAL R1 K5        ; R1 := 0x7b998233
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mPanelList"]
 11 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["ChannelName"]
 12 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mPanelList"]
 18 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["ChannelName"]
 19 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 20 [-]: SETTABLE  R1 K8 R0     ; R1["mTabElement"] := R0
 21 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 22 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xc0a3774b]
 23 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 24 [-]: LOADK     R4 K10       ; R4 := "Icon"
 25 [-]: CONST     R5 11        ; R5 := 11.000000
 26 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["Icon"]
 27 [-]: EQ        0 R6 K11     ; if R6 ~= nil then PC := 30
 28 [-]: JMP       30           ; PC := 30
 29 [-]: OP_LOADBOOL R6 0 1       ; R6 := false; PC := 30
 30 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 31 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 32 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 33 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0xc0a3774b]
 34 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 35 [-]: LOADK     R4 K12       ; R4 := "Label"
 36 [-]: CONST     R5 11        ; R5 := 11.000000
 37 [-]: GETTABLE  R6 R0 K10    ; R6 := R0["Icon"]
 38 [-]: EQ        1 R6 K11     ; if R6 == nil then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: OP_LOADBOOL R6 0 1       ; R6 := false; PC := 41
 41 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 42 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 43 [-]: GETTABLE  R1 R0 K10    ; R1 := R0["Icon"]
 44 [-]: EQ        1 R1 K11     ; if R1 == nil then PC := 54
 45 [-]: JMP       54           ; PC := 54
 46 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 47 [-]: SELF      R1 R1 K13    ; R2 := R1; R1 := R1[0x1cb415c1]
 48 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 49 [-]: LOADK     R4 K14       ; R4 := ".Icon"
 50 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 51 [-]: GETTABLE  R4 R0 K10    ; R4 := R0["Icon"]
 52 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 53 [-]: JMP       61           ; PC := 61
 54 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 55 [-]: SELF      R1 R1 K15    ; R2 := R1; R1 := R1[0x20b98db3]
 56 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 57 [-]: LOADK     R4 K16       ; R4 := ".Label.text"
 58 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 59 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["Name"]
 60 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 61 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 62 [-]: SELF      R1 R1 K18    ; R2 := R1; R1 := R1[0xd5181643]
 63 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 64 [-]: LOADK     R4 K19       ; R4 := ".Bg"
 65 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 66 [-]: GETGLOBAL R4 K20       ; R4 := 0x0032441c
 67 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["UIMaterial_RectangleNoDepth"]
 68 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 69 [-]: GETGLOBAL R1 K22       ; R1 := mWindow
 70 [-]: GETTABLE  R1 R1 K23    ; R1 := R1["mTabMenu"]
 71 [-]: SELF      R1 R1 K24    ; R2 := R1; R1 := R1[0xbb8e320d]
 72 [-]: MOVE      R3 R0        ; R3 := R0
 73 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
 74 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 75 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 76 [-]: SELF      R1 R1 K25    ; R2 := R1; R1 := R1[0x91e13703]
 77 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 78 [-]: LOADK     R4 K19       ; R4 := ".Bg"
 79 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 80 [-]: LOADK     R4 K26       ; R4 := "RectEdgeColor"
 81 [-]: GETGLOBAL R5 K20       ; R5 := 0x0032441c
 82 [-]: GETTABLE  R5 R5 K27    ; R5 := R5["UIColorObject_White"]
 83 [-]: GETTABLE  R5 R5 K28    ; R5 := R5["r"]
 84 [-]: GETGLOBAL R6 K20       ; R6 := 0x0032441c
 85 [-]: GETTABLE  R6 R6 K27    ; R6 := R6["UIColorObject_White"]
 86 [-]: GETTABLE  R6 R6 K29    ; R6 := R6["g"]
 87 [-]: GETGLOBAL R7 K20       ; R7 := 0x0032441c
 88 [-]: GETTABLE  R7 R7 K27    ; R7 := R7["UIColorObject_White"]
 89 [-]: GETTABLE  R7 R7 K30    ; R7 := R7["b"]
 90 [-]: LOADK     R8 K31       ; R8 := 0.050000
 91 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 92 [-]: GETUPVAL  R1 U1        ; R1 := U1
 93 [-]: GETTABLE  R1 R1 K32    ; R82 := R1[0x06d055f9]
 94 [-]: GETTABLE  R2 R0 K10    ; R2 := R0["Icon"]
 95 [-]: EQ        1 R2 K11     ; if R2 == nil then PC := 98
 96 [-]: JMP       98           ; PC := 98
 97 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 98
 98 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 99 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
100 [-]: SELF      R3 R3 K33    ; R4 := R3; R3 := R3[0x91a24e4b]
101 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
102 [-]: LOADK     R6 K34       ; R6 := ".Label"
103 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
104 [-]: CONST     R6 33        ; R6 := 33.000000
105 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
106 [-]: ADD       R3 R3 K35    ; R3 := R3 + 14.000000
107 [-]: CONST     R4 35        ; R4 := 35.000000
108 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
109 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
110 [-]: SELF      R2 R2 K36    ; R3 := R2; R2 := R2[0xf64b7262]
111 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
112 [-]: LOADK     R5 K37       ; R5 := "Btn"
113 [-]: CONST     R6 12        ; R6 := 12.000000
114 [-]: MOVE      R7 R1        ; R7 := R1
115 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
116 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
117 [-]: SELF      R2 R2 K36    ; R3 := R2; R2 := R2[0xf64b7262]
118 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
119 [-]: LOADK     R5 K38       ; R5 := "Bg"
120 [-]: CONST     R6 12        ; R6 := 12.000000
121 [-]: MOVE      R7 R1        ; R7 := R1
122 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
123 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
124 [-]: SELF      R2 R2 K36    ; R3 := R2; R2 := R2[0xf64b7262]
125 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
126 [-]: LOADK     R5 K39       ; R5 := "Dot"
127 [-]: CONST     R6 9         ; R6 := 9.000000
128 [-]: GETGLOBAL R7 K20       ; R7 := 0x0032441c
129 [-]: GETTABLE  R7 R7 K40    ; R7 := R7["UIColor_Red"]
130 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
131 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
132 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0xc0a3774b]
133 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
134 [-]: LOADK     R5 K39       ; R5 := "Dot"
135 [-]: CONST     R6 11        ; R6 := 11.000000
136 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["hasPersonalNotificion"]
137 [-]: EQ        1 R7 K42     ; if R7 == true then PC := 140
138 [-]: JMP       140          ; PC := 140
139 [-]: OP_LOADBOOL R7 0 1       ; R7 := false; PC := 140
140 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
141 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
142 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
143 [-]: SELF      R2 R2 K36    ; R3 := R2; R2 := R2[0xf64b7262]
144 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
145 [-]: LOADK     R5 K39       ; R5 := "Dot"
146 [-]: CONST     R6 0         ; R6 := 0.000000
147 [-]: SUB       R7 R1 K43    ; R7 := R1 - 8.000000
148 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
149 [-]: GETUPVAL  R2 U0        ; R2 := U0
150 [-]: GETTABLE  R2 R2 K23    ; R2 := R2["mTabMenu"]
151 [-]: SELF      R2 R2 K44    ; R3 := R2; R2 := R2[0x75292d1f]
152 [-]: MOVE      R4 R0        ; R4 := R0
153 [-]: CALL      R2 3 1       ; R2(R3,R4)
154 [-]: RETURN    R0 1         ; return 


; Function #121.16.13:
;
; Name:            
; Defined at line: 6722
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x91a24e4b]
  3 [-]: LOADK     R3 K2        ; R3 := "_root"
  4 [-]: CONST     R4 25        ; R4 := 25.000000
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x91a24e4b]
  8 [-]: LOADK     R4 K3        ; R4 := "Window.TabMenu"
  9 [-]: CONST     R5 0         ; R5 := 0.000000
 10 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 11 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 12 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x91a24e4b]
 13 [-]: LOADK     R5 K4        ; R5 := "Window.TabMenu.TabMask"
 14 [-]: CONST     R6 0         ; R6 := 0.000000
 15 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 16 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 17 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0x91a24e4b]
 18 [-]: LOADK     R6 K4        ; R6 := "Window.TabMenu.TabMask"
 19 [-]: CONST     R7 12        ; R7 := 12.000000
 20 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 21 [-]: GETGLOBAL R5 K5        ; R5 := 0x34291f5c
 22 [-]: GETTABLE  R5 R5 K6     ; R82 := R5[0xe6b41adb]
 23 [-]: CALL      R5 1 2       ; R5 := R5()
 24 [-]: TEST      R5 0         ; if not R5 then PC := 28
 25 [-]: JMP       28           ; PC := 28
 26 [-]: GETGLOBAL R5 K7        ; R5 := miOSChatScale
 27 [-]: MUL       R4 R4 R5     ; R4 := R4 * R5
 28 [-]: GETGLOBAL R5 K8        ; R5 := mWindow
 29 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mWindow"]
 30 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["x"]
 31 [-]: ADD       R5 R5 R2     ; R5 := R5 + R2
 32 [-]: ADD       R5 R5 R3     ; R5 := R5 + R3
 33 [-]: LT        1 R1 R5      ; if R1 < R5 then PC := 43
 34 [-]: JMP       43           ; PC := 43
 35 [-]: GETGLOBAL R5 K8        ; R5 := mWindow
 36 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["mWindow"]
 37 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["x"]
 38 [-]: ADD       R5 R5 R2     ; R5 := R5 + R2
 39 [-]: ADD       R5 R5 R3     ; R5 := R5 + R3
 40 [-]: ADD       R5 R5 R4     ; R5 := R5 + R4
 41 [-]: LT        0 R5 R1      ; if R5 >= R1 then PC := 45
 42 [-]: JMP       45           ; PC := 45
 43 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 44 [-]: RETURN    R5 2         ; return R5
 45 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 46 [-]: RETURN    R5 2         ; return R5
 47 [-]: RETURN    R0 1         ; return 


; Function #121.16.14:
;
; Name:            
; Defined at line: 6741
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mTabMenu"]
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xbb8e320d]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
  6 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x7b998233
  8 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["Icon"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 26
 11 [-]: JMP       26           ; PC := 26
 12 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
 13 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mVisualMode"]
 14 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 15 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 16 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 26
 17 [-]: JMP       26           ; PC := 26
 18 [-]: GETGLOBAL R1 K7        ; R1 := 0x34291f5c
 19 [-]: GETTABLE  R1 R1 K8     ; R82 := R1[0xe6b41adb]
 20 [-]: CALL      R1 1 2       ; R1 := R1()
 21 [-]: TEST      R1 1         ; if R1 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETGLOBAL R1 K9        ; R1 := _T
 24 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["Name"]
 25 [-]: SETTABLE  R1 K10 R2    ; R1["gToolTip"] := R2
 26 [-]: RETURN    R0 1         ; return 


; Function #121.16.15:
;
; Name:            
; Defined at line: 6749
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mTabMenu"]
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xbb8e320d]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
  6 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  7 [-]: GETGLOBAL R1 K3        ; R1 := _T
  8 [-]: SETTABLE  R1 K4 K5     ; R1["gToolTip"] := nil
  9 [-]: RETURN    R0 1         ; return 


; Function #121.16.16:
;
; Name:            
; Defined at line: 6756
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x91a24e4b]
  3 [-]: GETTABLE  R4 R1 K2     ; R4 := R1["mClipName"]
  4 [-]: LOADK     R5 K3        ; R5 := ".Bg"
  5 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  6 [-]: CONST     R5 12        ; R5 := 12.000000
  7 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  8 [-]: SUB       R2 R2 K4     ; R2 := R2 - 5.000000
  9 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 10 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x91a24e4b]
 11 [-]: GETTABLE  R5 R1 K2     ; R5 := R1["mClipName"]
 12 [-]: CONST     R6 0         ; R6 := 0.000000
 13 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 14 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 15 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0x91a24e4b]
 16 [-]: LOADK     R6 K5        ; R6 := "Window.TabMenu.TabMask"
 17 [-]: CONST     R7 12        ; R7 := 12.000000
 18 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 19 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 20 [-]: GETUPVAL  R6 U0        ; R6 := U0
 21 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["mTabMenu"]
 22 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6[0x3bda3404]
 23 [-]: MOVE      R8 R1        ; R8 := R1
 24 [-]: CALL      R6 3 1       ; R6(R7,R8)
 25 [-]: LT        0 R3 K8      ; if R3 >= 0.000000 then PC := 36
 26 [-]: JMP       36           ; PC := 36
 27 [-]: UNM       R6 R3        ; R6 := ^ R3
 28 [-]: GETUPVAL  R7 U0        ; R7 := U0
 29 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["mTabMenu"]
 30 [-]: GETUPVAL  R8 U0        ; R8 := U0
 31 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["mTabMenu"]
 32 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["mInitialX"]
 33 [-]: ADD       R8 R8 R6     ; R8 := R8 + R6
 34 [-]: SETTABLE  R7 K9 R8     ; R7["mInitialX"] := R8
 35 [-]: JMP       50           ; PC := 50
 36 [-]: ADD       R7 R3 R2     ; R7 := R3 + R2
 37 [-]: LT        0 R4 R7      ; if R4 >= R7 then PC := 49
 38 [-]: JMP       49           ; PC := 49
 39 [-]: ADD       R7 R3 R2     ; R7 := R3 + R2
 40 [-]: SUB       R7 R7 R4     ; R7 := R7 - R4
 41 [-]: GETUPVAL  R8 U0        ; R8 := U0
 42 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["mTabMenu"]
 43 [-]: GETUPVAL  R9 U0        ; R9 := U0
 44 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["mTabMenu"]
 45 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["mInitialX"]
 46 [-]: SUB       R9 R9 R7     ; R9 := R9 - R7
 47 [-]: SETTABLE  R8 K9 R9     ; R8["mInitialX"] := R9
 48 [-]: JMP       50           ; PC := 50
 49 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 50 [-]: LOADNIL   R8 R8        ; R8 := nil
 51 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mSelectedElement"]
 52 [-]: EQ        1 R9 K11     ; if R9 == nil then PC := 56
 53 [-]: JMP       56           ; PC := 56
 54 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mSelectedElement"]
 55 [-]: GETTABLE  R8 R9 K12    ; R8 := R9["Id"]
 56 [-]: SELF      R9 R0 K13    ; R10 := R0; R9 := R0[0x7f1f19de]
 57 [-]: MOVE      R11 R1       ; R11 := R1
 58 [-]: CALL      R9 3 1       ; R9(R10,R11)
 59 [-]: TEST      R5 0         ; if not R5 then PC := 68
 60 [-]: JMP       68           ; PC := 68
 61 [-]: GETGLOBAL R9 K14       ; R9 := mWindow
 62 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["mTabMenu"]
 63 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9[0x71e9ac81]
 64 [-]: LOADNIL   R11 R11      ; R11 := nil
 65 [-]: OP_LOADBOOL R12 1 0      ; R12 := true
 66 [-]: CALL      R9 4 1       ; R9(R10,R11,R12)
 67 [-]: JMP       87           ; PC := 87
 68 [-]: EQ        1 R8 K11     ; if R8 == nil then PC := 87
 69 [-]: JMP       87           ; PC := 87
 70 [-]: GETTABLE  R9 R1 K12    ; R9 := R1["Id"]
 71 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 87
 72 [-]: JMP       87           ; PC := 87
 73 [-]: SELF      R9 R0 K16    ; R10 := R0; R9 := R0[0xca30dfb6]
 74 [-]: MOVE      R11 R8       ; R11 := R8
 75 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 76 [-]: GETGLOBAL R10 K17      ; R10 := 0x7b998233
 77 [-]: MOVE      R11 R9       ; R11 := R9
 78 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 79 [-]: TEST      R10 1        ; if R10 then PC := 87
 80 [-]: JMP       87           ; PC := 87
 81 [-]: GETTABLE  R10 R0 K18   ; R82 := R10[0xd838387b]
 82 [-]: MOVE      R11 R9       ; R11 := R9
 83 [-]: CALL      R10 2 1      ; R10(R11)
 84 [-]: SELF      R10 R0 K19   ; R11 := R0; R10 := R0[0x75292d1f]
 85 [-]: MOVE      R12 R9       ; R12 := R9
 86 [-]: CALL      R10 3 1      ; R10(R11,R12)
 87 [-]: RETURN    R0 1         ; return 


; Function #121.16.17:
;
; Name:            
; Defined at line: 6793
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mTabMenu"]
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xbb8e320d]
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
  6 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mTabMenu"]
  9 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x75292d1f]
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: CALL      R1 3 1       ; R1(R2,R3)
 12 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
 13 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["mPanelList"]
 14 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["ChannelName"]
 15 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 16 [-]: GETTABLE  R2 R1 K6     ; R2 := R1["mIsActive"]
 17 [-]: TEST      R2 1         ; if R2 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x46610c50]
 21 [-]: MOVE      R4 R1        ; R4 := R1
 22 [-]: CALL      R2 3 1       ; R2(R3,R4)
 23 [-]: GETGLOBAL R2 K8        ; R2 := 0x7b998233
 24 [-]: GETUPVAL  R3 U0        ; R3 := U0
 25 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mSimpleTabList"]
 26 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 27 [-]: TEST      R2 1         ; if R2 then PC := 49
 28 [-]: JMP       49           ; PC := 49
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mSimpleTabList"]
 31 [-]: GETTABLE  R2 R2 K10    ; R2 := R2["mElements"]
 32 [-]: GETTABLE  R2 R2 K11    ; R2 := R2[1.000000]
 33 [-]: GETTABLE  R3 R0 K13    ; R3 := R0["Id"]
 34 [-]: SETTABLE  R2 K12 R3    ; R2["mTabId"] := R3
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["mVisualMode"]
 37 [-]: GETUPVAL  R3 U0        ; R3 := U0
 38 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 39 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 49
 40 [-]: JMP       49           ; PC := 49
 41 [-]: GETUPVAL  R2 U0        ; R2 := U0
 42 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mSimpleTabList"]
 43 [-]: GETTABLE  R2 R2 K16    ; R82 := R2[0xb15e6aca]
 44 [-]: GETUPVAL  R3 U0        ; R3 := U0
 45 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["mSimpleTabList"]
 46 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["mElements"]
 47 [-]: GETTABLE  R3 R3 K11    ; R3 := R3[1.000000]
 48 [-]: CALL      R2 2 1       ; R2(R3)
 49 [-]: GETGLOBAL R2 K8        ; R2 := 0x7b998233
 50 [-]: GETUPVAL  R3 U0        ; R3 := U0
 51 [-]: GETTABLE  R3 R3 K17    ; R3 := R3["mInputPanel"]
 52 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 53 [-]: TEST      R2 1         ; if R2 then PC := 85
 54 [-]: JMP       85           ; PC := 85
 55 [-]: GETUPVAL  R2 U0        ; R2 := U0
 56 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["mInputPanel"]
 57 [-]: GETUPVAL  R3 U1        ; R3 := U1
 58 [-]: GETTABLE  R3 R3 K19    ; R82 := R3[0x06d055f9]
 59 [-]: GETUPVAL  R4 U0        ; R4 := U0
 60 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["mMode"]
 61 [-]: GETUPVAL  R5 U0        ; R5 := U0
 62 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["CHANNEL_RECRUITING"]
 63 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETUPVAL  R4 U0        ; R4 := U0
 66 [-]: GETTABLE  R4 R4 K20    ; R4 := R4["mMode"]
 67 [-]: GETUPVAL  R5 U0        ; R5 := U0
 68 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["CHANNEL_TRADE"]
 69 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 72
 70 [-]: JMP       72           ; PC := 72
 71 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 72
 72 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 73 [-]: GETUPVAL  R5 U0        ; R5 := U0
 74 [-]: GETTABLE  R5 R5 K17    ; R5 := R5["mInputPanel"]
 75 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["MAX_MSG_LENGTH_RECRUIT_TRADE"]
 76 [-]: GETUPVAL  R6 U0        ; R6 := U0
 77 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["mInputPanel"]
 78 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["MAX_MSG_LENGTH_NORMAL"]
 79 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 80 [-]: SETTABLE  R2 K18 R3    ; R2["mMaxMsgLength"] := R3
 81 [-]: GETUPVAL  R2 U0        ; R2 := U0
 82 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["mInputPanel"]
 83 [-]: SELF      R2 R2 K25    ; R3 := R2; R2 := R2[0xa0a14127]
 84 [-]: CALL      R2 2 1       ; R2(R3)
 85 [-]: RETURN    R0 1         ; return 


; Function #121.17:
;
; Name:            
; Defined at line: 6823
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: TEST      R1 0         ; if not R1 then PC := 30
  2 [-]: JMP       30           ; PC := 30
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x34291f5c
  4 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0x1467d5f4]
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: TEST      R2 0         ; if not R2 then PC := 20
  7 [-]: JMP       20           ; PC := 20
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  9 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x91a24e4b]
 10 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mClipName"]
 11 [-]: LOADK     R5 K5        ; R5 := ".TabMenu.LeftBumper.Tf"
 12 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 13 [-]: CONST     R5 33        ; R5 := 33.000000
 14 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 15 [-]: DIV       R3 R2 K7     ; R3 := R2 / 2.000000
 16 [-]: ADD       R3 K8 R3     ; R3 := 24.000000 + R3
 17 [-]: ADD       R3 R3 K9     ; R3 := R3 + 6.000000
 18 [-]: SETTABLE  R0 K6 R3     ; R0[0x565be9ee] := R3
 19 [-]: JMP       30           ; PC := 30
 20 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 21 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x91a24e4b]
 22 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mClipName"]
 23 [-]: LOADK     R6 K10       ; R6 := ".TabMenu.LeftArrow"
 24 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 25 [-]: CONST     R6 12        ; R6 := 12.000000
 26 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 27 [-]: SUB       R4 R3 K11    ; R4 := R3 - 4.000000
 28 [-]: ADD       R4 K12 R4    ; R4 := 15.000000 + R4
 29 [-]: SETTABLE  R0 K6 R4     ; R0[0x565be9ee] := R4
 30 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mMenuPanelXPos"]
 31 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 32 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xf64b7262]
 33 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mClipName"]
 34 [-]: LOADK     R8 K14       ; R8 := "TabMenu.TabMask"
 35 [-]: CONST     R9 0         ; R9 := 0.000000
 36 [-]: MOVE      R10 R4       ; R10 := R4
 37 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 38 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 39 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0xf64b7262]
 40 [-]: GETTABLE  R7 R0 K4     ; R7 := R0["mClipName"]
 41 [-]: LOADK     R8 K15       ; R8 := "TabMenu.MenuPanel"
 42 [-]: CONST     R9 0         ; R9 := 0.000000
 43 [-]: MOVE      R10 R4       ; R10 := R4
 44 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 45 [-]: RETURN    R0 1         ; return 


; Function #121.18:
;
; Name:            
; Defined at line: 6839
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mTabMenu"]
  2 [-]: SETTABLE  R2 K1 K2     ; R2["mInitialX"] := 0.000000
  3 [-]: SELF      R2 R0 K3     ; R3 := R0; R2 := R0[0x161dbc67]
  4 [-]: NOT       R4 R1        ; R4 := not R1
  5 [-]: CALL      R2 3 1       ; R2(R3,R4)
  6 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
  7 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
  8 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
  9 [-]: LOADK     R5 K7        ; R5 := "TabMenu.LeftArrow"
 10 [-]: CONST     R6 10        ; R6 := 10.000000
 11 [-]: CONST     R7 50        ; R7 := 50.000000
 12 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 13 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 14 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x1e5b5cfe]
 15 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 16 [-]: LOADK     R5 K9        ; R5 := ".TabMenu.LeftArrow.Btn"
 17 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 18 [-]: LOADK     R5 K10       ; R5 := "LeftArrowFocused"
 19 [-]: LOADK     R6 K11       ; R6 := "LeftArrowUnfocused"
 20 [-]: LOADK     R7 K12       ; R7 := "LeftArrowClicked"
 21 [-]: LOADNIL   R8 R8        ; R8 := nil
 22 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 23 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 24 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x1e5b5cfe]
 25 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 26 [-]: LOADK     R5 K13       ; R5 := ".TabMenu.RightArrow.Btn"
 27 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 28 [-]: LOADK     R5 K14       ; R5 := "RightArrowFocused"
 29 [-]: LOADK     R6 K15       ; R6 := "RightArrowUnfocused"
 30 [-]: LOADK     R7 K16       ; R7 := "RightArrowClicked"
 31 [-]: LOADNIL   R8 R8        ; R8 := nil
 32 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 33 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 34 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 35 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 36 [-]: LOADK     R5 K17       ; R5 := "TabMenu.RightArrow"
 37 [-]: CONST     R6 10        ; R6 := 10.000000
 38 [-]: CONST     R7 50        ; R7 := 50.000000
 39 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 40 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 41 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 42 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 43 [-]: LOADK     R5 K18       ; R5 := "TabMenu.TabDivLine"
 44 [-]: CONST     R6 9         ; R6 := 9.000000
 45 [-]: GETUPVAL  R7 U0        ; R7 := U0
 46 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 47 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 48 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 49 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 50 [-]: LOADK     R5 K18       ; R5 := "TabMenu.TabDivLine"
 51 [-]: CONST     R6 10        ; R6 := 10.000000
 52 [-]: CONST     R7 40        ; R7 := 40.000000
 53 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 54 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 55 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 56 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 57 [-]: LOADK     R5 K19       ; R5 := "TabMenu.ExpandCallout"
 58 [-]: CONST     R6 0         ; R6 := 0.000000
 59 [-]: CONST     R7 10        ; R7 := 10.000000
 60 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 61 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 62 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2[0x20b98db3]
 63 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 64 [-]: LOADK     R5 K21       ; R5 := ".TabMenu.LeftBumper.Tf.text"
 65 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 66 [-]: LOADK     R5 K22       ; R5 := "<MENU_LTRIGGER2>"
 67 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 68 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 69 [-]: SELF      R2 R2 K20    ; R3 := R2; R2 := R2[0x20b98db3]
 70 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 71 [-]: LOADK     R5 K23       ; R5 := ".TabMenu.RightBumper.Tf.text"
 72 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 73 [-]: LOADK     R5 K24       ; R5 := "<MENU_RTRIGGER2>"
 74 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 75 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 76 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 77 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 78 [-]: LOADK     R5 K25       ; R5 := "TabMenu.LeftBumper"
 79 [-]: CONST     R6 0         ; R6 := 0.000000
 80 [-]: CONST     R7 24        ; R7 := 24.000000
 81 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 82 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 83 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 84 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 85 [-]: LOADK     R5 K25       ; R5 := "TabMenu.LeftBumper"
 86 [-]: CONST     R6 1         ; R6 := 1.000000
 87 [-]: CONST     R7 15        ; R7 := 15.000000
 88 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 89 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 90 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 91 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 92 [-]: LOADK     R5 K26       ; R5 := "TabMenu.RightBumper"
 93 [-]: CONST     R6 1         ; R6 := 1.000000
 94 [-]: CONST     R7 15        ; R7 := 15.000000
 95 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 96 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 97 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 98 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 99 [-]: LOADK     R5 K7        ; R5 := "TabMenu.LeftArrow"
100 [-]: CONST     R6 0         ; R6 := 0.000000
101 [-]: CONST     R7 15        ; R7 := 15.000000
102 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
103 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
104 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
105 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
106 [-]: LOADK     R5 K7        ; R5 := "TabMenu.LeftArrow"
107 [-]: CONST     R6 1         ; R6 := 1.000000
108 [-]: CONST     R7 17        ; R7 := 17.000000
109 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
110 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
111 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
112 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
113 [-]: LOADK     R5 K17       ; R5 := "TabMenu.RightArrow"
114 [-]: CONST     R6 1         ; R6 := 1.000000
115 [-]: CONST     R7 17        ; R7 := 17.000000
116 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
117 [-]: SELF      R2 R0 K27    ; R3 := R0; R2 := R0[0x6a0585d2]
118 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
119 [-]: CALL      R2 3 1       ; R2(R3,R4)
120 [-]: RETURN    R0 1         ; return 


; Function #121.19:
;
; Name:            
; Defined at line: 6862
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETTABLE  R2 R1 K1     ; R2 := R1["mChannelName"]
  4 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mActivePanelName"]
  5 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 8
  6 [-]: JMP       8            ; PC := 8
  7 [-]: RETURN    R0 1         ; return 
  8 [-]: LOADNIL   R2 R2        ; R2 := nil
  9 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mActivePanelName"]
 10 [-]: EQ        1 R3 K3      ; if R3 == "" then PC := 56
 11 [-]: JMP       56           ; PC := 56
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0x7b998233
 13 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mPanelList"]
 14 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mActivePanelName"]
 15 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 1         ; if R3 then PC := 56
 18 [-]: JMP       56           ; PC := 56
 19 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mPanelList"]
 20 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mActivePanelName"]
 21 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 22 [-]: GETTABLE  R2 R3 K6     ; R2 := R3["mChannelType"]
 23 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mActivePanelName"]
 24 [-]: SETTABLE  R0 K7 R3     ; R0["mPrevPanelName"] := R3
 25 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["mPanelList"]
 26 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mActivePanelName"]
 27 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 28 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x6f621d83]
 29 [-]: CALL      R3 2 1       ; R3(R4)
 30 [-]: GETGLOBAL R3 K9        ; R3 := mWindow
 31 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["mVisualMode"]
 32 [-]: GETGLOBAL R4 K9        ; R4 := mWindow
 33 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["VISUAL_MODE_MENU_FULL"]
 34 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 42
 35 [-]: JMP       42           ; PC := 42
 36 [-]: GETGLOBAL R3 K9        ; R3 := mWindow
 37 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["mVisualMode"]
 38 [-]: GETGLOBAL R4 K9        ; R4 := mWindow
 39 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["VISUAL_MODE_GAMEPLAY_FULL"]
 40 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 56
 41 [-]: JMP       56           ; PC := 56
 42 [-]: GETUPVAL  R3 U0        ; R3 := U0
 43 [-]: CALL      R3 1 2       ; R3 := R3()
 44 [-]: GETGLOBAL R4 K13       ; R4 := 0xcb79539e
 45 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 56
 46 [-]: JMP       56           ; PC := 56
 47 [-]: EQ        1 R3 K0      ; if R3 == nil then PC := 56
 48 [-]: JMP       56           ; PC := 56
 49 [-]: GETGLOBAL R4 K13       ; R4 := 0xcb79539e
 50 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0xa9188a47]
 51 [-]: GETGLOBAL R6 K15       ; R6 := 0x0469f296
 52 [-]: LOADK     R7 K16       ; R7 := "IN_CHAT_VIEW_TIME"
 53 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 54 [-]: MOVE      R7 R3        ; R7 := R3
 55 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 56 [-]: EQ        1 R1 K0      ; if R1 == nil then PC := 96
 57 [-]: JMP       96           ; PC := 96
 58 [-]: NEWTABLE  R4 0 0       ; R4 := {}
 59 [-]: SETUPVAL  R4 U1        ; U82 := 
 60 [-]: SELF      R4 R1 K17    ; R5 := R1; R4 := R1[0x3bd10f9e]
 61 [-]: CALL      R4 2 1       ; R4(R5)
 62 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mChannelName"]
 63 [-]: SETTABLE  R0 K2 R4     ; R0[0x06d055f9] := R4
 64 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mPanelList"]
 65 [-]: GETTABLE  R5 R1 K1     ; R5 := R1["mChannelName"]
 66 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 67 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4[0xf3f5bc52]
 68 [-]: MOVE      R6 R2        ; R6 := R2
 69 [-]: CALL      R4 3 1       ; R4(R5,R6)
 70 [-]: GETGLOBAL R4 K9        ; R4 := mWindow
 71 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["mVisualMode"]
 72 [-]: GETGLOBAL R5 K9        ; R5 := mWindow
 73 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["VISUAL_MODE_MENU_FULL"]
 74 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 82
 75 [-]: JMP       82           ; PC := 82
 76 [-]: GETGLOBAL R4 K9        ; R4 := mWindow
 77 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["mVisualMode"]
 78 [-]: GETGLOBAL R5 K9        ; R5 := mWindow
 79 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["VISUAL_MODE_GAMEPLAY_FULL"]
 80 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 96
 81 [-]: JMP       96           ; PC := 96
 82 [-]: GETUPVAL  R4 U0        ; R4 := U0
 83 [-]: CALL      R4 1 2       ; R4 := R4()
 84 [-]: GETGLOBAL R5 K13       ; R5 := 0xcb79539e
 85 [-]: EQ        1 R5 K0      ; if R5 == nil then PC := 96
 86 [-]: JMP       96           ; PC := 96
 87 [-]: EQ        1 R4 K0      ; if R4 == nil then PC := 96
 88 [-]: JMP       96           ; PC := 96
 89 [-]: GETGLOBAL R5 K13       ; R5 := 0xcb79539e
 90 [-]: SELF      R5 R5 K19    ; R6 := R5; R5 := R5[0xa9136b2f]
 91 [-]: GETGLOBAL R7 K15       ; R7 := 0x0469f296
 92 [-]: LOADK     R8 K16       ; R8 := "IN_CHAT_VIEW_TIME"
 93 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 94 [-]: MOVE      R8 R4        ; R8 := R4
 95 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
 96 [-]: RETURN    R0 1         ; return 


; Function #121.20:
;
; Name:            
; Defined at line: 6902
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := 0xe7f2b02f
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0xe7f2b02f
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x0b151d80]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R2 K3        ; R2 := 0xcfc01047
 17 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mPanelList"]
 18 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
 19 [-]: JMP       46           ; PC := 46
 20 [-]: GETGLOBAL R7 K0        ; R7 := 0x7b998233
 21 [-]: MOVE      R8 R6        ; R8 := R6
 22 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 23 [-]: TEST      R7 1         ; if R7 then PC := 46
 24 [-]: JMP       46           ; PC := 46
 25 [-]: GETTABLE  R7 R6 K5     ; R7 := R6["mChannelType"]
 26 [-]: GETTABLE  R8 R0 K6     ; R8 := R0["CHANNEL_GLOBAL"]
 27 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 41
 28 [-]: JMP       41           ; PC := 41
 29 [-]: GETTABLE  R7 R6 K5     ; R7 := R6["mChannelType"]
 30 [-]: GETTABLE  R8 R0 K7     ; R8 := R0["CHANNEL_RECRUITING"]
 31 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 41
 32 [-]: JMP       41           ; PC := 41
 33 [-]: GETTABLE  R7 R6 K5     ; R7 := R6["mChannelType"]
 34 [-]: GETTABLE  R8 R0 K8     ; R8 := R0["CHANNEL_TRADE"]
 35 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 41
 36 [-]: JMP       41           ; PC := 41
 37 [-]: GETTABLE  R7 R6 K5     ; R7 := R6["mChannelType"]
 38 [-]: GETTABLE  R8 R0 K9     ; R8 := R0["CHANNEL_QA"]
 39 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 46
 40 [-]: JMP       46           ; PC := 46
 41 [-]: SELF      R7 R1 K10    ; R8 := R1; R7 := R1[0xba30dacc]
 42 [-]: LOADK     R9 K11       ; R9 := "#"
 43 [-]: GETTABLE  R10 R6 K12   ; R10 := R6["mChannelName"]
 44 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 45 [-]: CALL      R7 3 1       ; R7(R8,R9)
 46 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 20; R4 := R5 end
 47 [-]: JMP       20           ; PC := 20
 48 [-]: RETURN    R0 1         ; return 


; Function #121.21:
;
; Name:            
; Defined at line: 6920
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x3914d936]
  2 [-]: CALL      R2 2 1       ; R2(R3)
  3 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0xcfc01047
  5 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mPanelList"]
  6 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
  9 [-]: MOVE      R9 R7        ; R9 := R7
 10 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 11 [-]: TEST      R8 1         ; if R8 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: SELF      R8 R7 K4     ; R9 := R7; R8 := R7[0xd4f2405e]
 14 [-]: MOVE      R10 R1       ; R10 := R1
 15 [-]: CALL      R8 3 1       ; R8(R9,R10)
 16 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 17 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 8; R5 := R6 end
 18 [-]: JMP       8            ; PC := 8
 19 [-]: TEST      R2 1         ; if R2 then PC := 42
 20 [-]: JMP       42           ; PC := 42
 21 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["mClipName"]
 22 [-]: LOADK     R9 K6        ; R9 := ".TabbedChatPanel"
 23 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 24 [-]: GETGLOBAL R9 K7        ; R9 := 0x7f5022cf
 25 [-]: GETTABLE  R9 R9 K8     ; R82 := R9[0xe8072ded]
 26 [-]: LOADK     R10 K9       ; R10 := "<p><font color=\"#%X\">"
 27 [-]: GETGLOBAL R11 K10      ; R11 := 0x0032441c
 28 [-]: GETTABLE  R11 R11 K11  ; R11 := R11["UIColor_White"]
 29 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 30 [-]: MOVE      R10 R1       ; R10 := R1
 31 [-]: LOADK     R11 K12      ; R11 := "</font></p>"
 32 [-]: CONCAT    R9 R9 R11    ; R9 := R9 .. R10 .. R11
 33 [-]: GETGLOBAL R10 K13      ; R10 := 0xae91e43b
 34 [-]: SELF      R10 R10 K14  ; R11 := R10; R10 := R10[0x5f56eeab]
 35 [-]: MOVE      R12 R8       ; R12 := R8
 36 [-]: LOADK     R13 K15      ; R13 := ".ChatArea"
 37 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
 38 [-]: CONST     R13 29       ; R13 := 29.000000
 39 [-]: MOVE      R14 R9       ; R14 := R9
 40 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 41 [-]: RETURN    R0 1         ; return 
 42 [-]: RETURN    R0 1         ; return 


; Function #121.22:
;
; Name:            
; Defined at line: 6942
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0[0x3914d936]
  2 [-]: CALL      R3 2 1       ; R3(R4)
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xcfc01047
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mPanelList"]
  5 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
  8 [-]: MOVE      R9 R7        ; R9 := R7
  9 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 10 [-]: TEST      R8 1         ; if R8 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETTABLE  R8 R7 K4     ; R8 := R7["mChannelType"]
 13 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: SELF      R8 R7 K5     ; R9 := R7; R8 := R7[0xd4f2405e]
 16 [-]: MOVE      R10 R1       ; R10 := R1
 17 [-]: CALL      R8 3 1       ; R8(R9,R10)
 18 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 7; R5 := R6 end
 19 [-]: JMP       7            ; PC := 7
 20 [-]: RETURN    R0 1         ; return 


; Function #121.23:
;
; Name:            
; Defined at line: 6951
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x3914d936]
  2 [-]: CALL      R2 2 1       ; R2(R3)
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0xcfc01047
  4 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mPanelList"]
  5 [-]: CALL      R2 2 4       ; R2,R3,R4 := R2(R3)
  6 [-]: JMP       15           ; PC := 15
  7 [-]: GETGLOBAL R7 K3        ; R7 := 0x7b998233
  8 [-]: MOVE      R8 R6        ; R8 := R6
  9 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 10 [-]: TEST      R7 1         ; if R7 then PC := 15
 11 [-]: JMP       15           ; PC := 15
 12 [-]: SELF      R7 R6 K4     ; R8 := R6; R7 := R6[0xd55cad54]
 13 [-]: MOVE      R9 R1        ; R9 := R1
 14 [-]: CALL      R7 3 1       ; R7(R8,R9)
 15 [-]: TFORLOOP  R2 2         ; R5,R6 :=  R2(R3,R4); if R5 ~= nil then begin PC = 7; R4 := R5 end
 16 [-]: JMP       7            ; PC := 7
 17 [-]: RETURN    R0 1         ; return 


; Function #121.24:
;
; Name:            
; Defined at line: 6960
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: SELF      R3 R0 K0     ; R4 := R0; R3 := R0[0x3914d936]
  2 [-]: CALL      R3 2 1       ; R3(R4)
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xcfc01047
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mPanelList"]
  5 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
  8 [-]: MOVE      R9 R7        ; R9 := R7
  9 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 10 [-]: TEST      R8 1         ; if R8 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETTABLE  R8 R7 K4     ; R8 := R7["mChannelType"]
 13 [-]: EQ        0 R8 R2      ; if R8 ~= R2 then PC := 18
 14 [-]: JMP       18           ; PC := 18
 15 [-]: SELF      R8 R7 K5     ; R9 := R7; R8 := R7[0xd55cad54]
 16 [-]: MOVE      R10 R1       ; R10 := R1
 17 [-]: CALL      R8 3 1       ; R8(R9,R10)
 18 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 7; R5 := R6 end
 19 [-]: JMP       7            ; PC := 7
 20 [-]: RETURN    R0 1         ; return 


; Function #121.25:
;
; Name:            
; Defined at line: 6969
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: SETTABLE  R0 K0 R1     ; R0["mMode"] := R1
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 32
  3 [-]: JMP       32           ; PC := 32
  4 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mPanelShortcuts"]
  5 [-]: GETTABLE  R2 R2 R1     ; R2 := R2[R1]
  6 [-]: EQ        0 R2 K1      ; if R2 ~= nil then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R3 K3        ; R3 := 0x7f5022cf
 10 [-]: GETTABLE  R3 R3 K4     ; R82 := R3[0xa5c556b9]
 11 [-]: MOVE      R4 R2        ; R4 := R2
 12 [-]: LOADK     R5 K5        ; R5 := "#"
 13 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 14 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 23
 15 [-]: JMP       23           ; PC := 23
 16 [-]: GETGLOBAL R4 K3        ; R4 := 0x7f5022cf
 17 [-]: GETTABLE  R4 R4 K6     ; R82 := R4[0x1a94c9cc]
 18 [-]: MOVE      R5 R2        ; R5 := R2
 19 [-]: ADD       R6 R3 K7     ; R6 := R3 + 1.000000
 20 [-]: CONST     R7 -1        ; R7 := -1.000000
 21 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 22 [-]: MOVE      R2 R4        ; R2 := R4
 23 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mPanelList"]
 24 [-]: GETTABLE  R4 R4 R2     ; R4 := R4[R2]
 25 [-]: EQ        0 R4 K1      ; if R4 ~= nil then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: RETURN    R0 1         ; return 
 28 [-]: SELF      R4 R0 K9     ; R5 := R0; R4 := R0[0x46610c50]
 29 [-]: GETTABLE  R6 R0 K8     ; R6 := R0["mPanelList"]
 30 [-]: GETTABLE  R6 R6 R2     ; R6 := R6[R2]
 31 [-]: CALL      R4 3 1       ; R4(R5,R6)
 32 [-]: RETURN    R0 1         ; return 


; Function #121.26:
;
; Name:            
; Defined at line: 6991
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: GETTABLE  R2 R2 K0     ; R82 := R2[0x5d3d561a]
  3 [-]: MOVE      R3 R1        ; R3 := R1
  4 [-]: LOADK     R4 K1        ; R4 := "[]"
  5 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  6 [-]: EQ        1 R2 K2      ; if R2 == 0.000000 then PC := 17
  7 [-]: JMP       17           ; PC := 17
  8 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0[0xd4f2405e]
  9 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 10 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x42b04007]
 11 [-]: LOADK     R7 K6        ; R7 := "/Lotus/Language/Menu/SocialOverlay_InvalidCharacter"
 12 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 13 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 14 [-]: CALL      R3 0 1       ; R3(R4,...)
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: JMP       52           ; PC := 52
 17 [-]: GETGLOBAL R3 K7        ; R3 := 0x7b998233
 18 [-]: GETGLOBAL R4 K8        ; R4 := mGameData
 19 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 20 [-]: TEST      R3 1         ; if R3 then PC := 52
 21 [-]: JMP       52           ; PC := 52
 22 [-]: GETGLOBAL R3 K9        ; R3 := 0x7f5022cf
 23 [-]: GETTABLE  R3 R3 K10    ; R82 := R3[0x04981ab3]
 24 [-]: MOVE      R4 R1        ; R4 := R1
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: GETGLOBAL R4 K9        ; R4 := 0x7f5022cf
 27 [-]: GETTABLE  R4 R4 K10    ; R82 := R4[0x04981ab3]
 28 [-]: GETGLOBAL R5 K11       ; R5 := mWindow
 29 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["mUser"]
 30 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 31 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 47
 32 [-]: JMP       47           ; PC := 47
 33 [-]: GETGLOBAL R3 K8        ; R3 := mGameData
 34 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0x273a2275]
 35 [-]: MOVE      R5 R1        ; R5 := R1
 36 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 37 [-]: TEST      R3 1         ; if R3 then PC := 47
 38 [-]: JMP       47           ; PC := 47
 39 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0[0xd4f2405e]
 40 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 41 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x42b04007]
 42 [-]: LOADK     R7 K14       ; R7 := "/Lotus/Language/Menu/Chat_CannotIgnoreSelf"
 43 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 44 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 45 [-]: CALL      R3 0 1       ; R3(R4,...)
 46 [-]: RETURN    R0 1         ; return 
 47 [-]: GETUPVAL  R3 U1        ; R3 := U1
 48 [-]: GETTABLE  R3 R3 K15    ; R82 := R3[0x98453b6b]
 49 [-]: MOVE      R4 R1        ; R4 := R1
 50 [-]: LOADK     R5 K16       ; R5 := "OnIgnoreUser"
 51 [-]: CALL      R3 3 1       ; R3(R4,R5)
 52 [-]: GETTABLE  R3 R0 K17    ; R3 := R0["mUserPanel"]
 53 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["mListControl"]
 54 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3[0x5fbddc1a]
 55 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 56 [-]: CONST     R4 1         ; R4 := 1.000000
 57 [-]: MOVE      R5 R3        ; R5 := R3
 58 [-]: CONST     R6 1         ; R6 := 1.000000
 59 [-]: FORPREP   R4 82        ; R4 -= R6; PC := 82
 60 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["mUserPanel"]
 61 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mListControl"]
 62 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["mElements"]
 63 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 64 [-]: EQ        1 R8 K21     ; if R8 == nil then PC := 82
 65 [-]: JMP       82           ; PC := 82
 66 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["mUserPanel"]
 67 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mListControl"]
 68 [-]: GETTABLE  R8 R8 K20    ; R8 := R8["mElements"]
 69 [-]: GETTABLE  R8 R8 R7     ; R8 := R8[R7]
 70 [-]: GETTABLE  R8 R8 K22    ; R8 := R8["User"]
 71 [-]: EQ        0 R8 R1      ; if R8 ~= R1 then PC := 82
 72 [-]: JMP       82           ; PC := 82
 73 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["mUserPanel"]
 74 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mListControl"]
 75 [-]: GETTABLE  R8 R8 K23    ; R82 := R8[0xb15e6aca]
 76 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["mUserPanel"]
 77 [-]: GETTABLE  R9 R9 K18    ; R9 := R9["mListControl"]
 78 [-]: GETTABLE  R9 R9 K20    ; R9 := R9["mElements"]
 79 [-]: GETTABLE  R9 R9 R7     ; R9 := R9[R7]
 80 [-]: CALL      R8 2 1       ; R8(R9)
 81 [-]: JMP       83           ; PC := 83
 82 [-]: FORLOOP   R4 60        ; R4 += R6; if R4 <= R5 then begin PC := 60; R7 := R4 end
 83 [-]: RETURN    R0 1         ; return 


; Function #121.27:
;
; Name:            
; Defined at line: 7020
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: CONST     R2 0         ; R2 := 0.000000
  2 [-]: GETGLOBAL R3 K0        ; R3 := mViewportHeight
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x34291f5c
  4 [-]: GETTABLE  R4 R4 K2     ; R82 := R4[0x056bfe8b]
  5 [-]: CALL      R4 1 2       ; R4 := R4()
  6 [-]: TEST      R4 1         ; if R4 then PC := 94
  7 [-]: JMP       94           ; PC := 94
  8 [-]: GETGLOBAL R4 K1        ; R4 := 0x34291f5c
  9 [-]: GETTABLE  R4 R4 K3     ; R82 := R4[0xe6b41adb]
 10 [-]: CALL      R4 1 2       ; R4 := R4()
 11 [-]: TEST      R4 1         ; if R4 then PC := 94
 12 [-]: JMP       94           ; PC := 94
 13 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 14 [-]: GETGLOBAL R5 K5        ; R5 := mProfileSettings
 15 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 16 [-]: TEST      R4 1         ; if R4 then PC := 94
 17 [-]: JMP       94           ; PC := 94
 18 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 19 [-]: GETGLOBAL R6 K6        ; R6 := mIsInFrontEnd
 20 [-]: TEST      R6 0         ; if not R6 then PC := 41
 21 [-]: JMP       41           ; PC := 41
 22 [-]: GETGLOBAL R6 K5        ; R6 := mProfileSettings
 23 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6[0x2d1154a6]
 24 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 25 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 26 [-]: TEST      R6 0         ; if not R6 then PC := 41
 27 [-]: JMP       41           ; PC := 41
 28 [-]: GETGLOBAL R6 K5        ; R6 := mProfileSettings
 29 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x535f491b]
 30 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 31 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
 32 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 33 [-]: MOVE      R4 R6        ; R4 := R6
 34 [-]: GETGLOBAL R6 K5        ; R6 := mProfileSettings
 35 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x535f491b]
 36 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 37 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 38 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 39 [-]: MOVE      R5 R6        ; R5 := R6
 40 [-]: JMP       62           ; PC := 62
 41 [-]: GETGLOBAL R6 K9        ; R6 := mIsInGameplay
 42 [-]: TEST      R6 0         ; if not R6 then PC := 62
 43 [-]: JMP       62           ; PC := 62
 44 [-]: GETGLOBAL R6 K5        ; R6 := mProfileSettings
 45 [-]: SELF      R6 R6 K7     ; R7 := R6; R6 := R6[0x2d1154a6]
 46 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 47 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 48 [-]: TEST      R6 0         ; if not R6 then PC := 62
 49 [-]: JMP       62           ; PC := 62
 50 [-]: GETGLOBAL R6 K5        ; R6 := mProfileSettings
 51 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x535f491b]
 52 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 53 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
 54 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 55 [-]: MOVE      R4 R6        ; R4 := R6
 56 [-]: GETGLOBAL R6 K5        ; R6 := mProfileSettings
 57 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x535f491b]
 58 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 59 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 60 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 61 [-]: MOVE      R5 R6        ; R5 := R6
 62 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 63 [-]: MOVE      R7 R4        ; R7 := R4
 64 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 65 [-]: TEST      R6 1         ; if R6 then PC := 94
 66 [-]: JMP       94           ; PC := 94
 67 [-]: GETGLOBAL R6 K4        ; R6 := 0x7b998233
 68 [-]: MOVE      R7 R5        ; R7 := R5
 69 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 70 [-]: TEST      R6 1         ; if R6 then PC := 94
 71 [-]: JMP       94           ; PC := 94
 72 [-]: GETGLOBAL R6 K10       ; R6 := 0x03f57322
 73 [-]: MOVE      R7 R4        ; R7 := R4
 74 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 75 [-]: GETGLOBAL R7 K11       ; R7 := mViewportWidth
 76 [-]: MUL       R2 R6 R7     ; R2 := R6 * R7
 77 [-]: TEST      R1 0         ; if not R1 then PC := 82
 78 [-]: JMP       82           ; PC := 82
 79 [-]: LE        0 K12 R5     ; if 0.950000 > R5 then PC := 82
 80 [-]: JMP       82           ; PC := 82
 81 [-]: CONST     R5 1         ; R5 := 1.000000
 82 [-]: GETGLOBAL R6 K10       ; R6 := 0x03f57322
 83 [-]: MOVE      R7 R5        ; R7 := R5
 84 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 85 [-]: GETGLOBAL R7 K0        ; R7 := mViewportHeight
 86 [-]: MUL       R3 R6 R7     ; R3 := R6 * R7
 87 [-]: GETGLOBAL R6 K0        ; R6 := mViewportHeight
 88 [-]: DIV       R6 R6 K13    ; R6 := R6 / 2.000000
 89 [-]: LT        0 R6 R3      ; if R6 >= R3 then PC := 94
 90 [-]: JMP       94           ; PC := 94
 91 [-]: GETTABLE  R6 R0 K14    ; R6 := R0["mWindow"]
 92 [-]: GETTABLE  R6 R6 K15    ; R6 := R6["height"]
 93 [-]: SUB       R3 R3 R6     ; R3 := R3 - R6
 94 [-]: SELF      R6 R0 K16    ; R7 := R0; R6 := R0[0x9307aa51]
 95 [-]: GETUPVAL  R8 U0        ; R8 := U0
 96 [-]: GETTABLE  R8 R8 K17    ; R82 := R8[0x74a11ec6]
 97 [-]: MOVE      R9 R2        ; R9 := R2
 98 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 99 [-]: GETUPVAL  R9 U0        ; R9 := U0
100 [-]: GETTABLE  R9 R9 K17    ; R82 := R9[0x74a11ec6]
101 [-]: MOVE      R10 R3       ; R10 := R3
102 [-]: CALL      R9 2 2       ; R9 := R9(R10)
103 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
104 [-]: OP_LOADBOOL R11 0 0      ; R11 := false
105 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
106 [-]: RETURN    R0 1         ; return 


; Function #121.28:
;
; Name:            
; Defined at line: 7055
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: CONST     R1 0         ; R1 := 0.000000
  2 [-]: CONST     R2 0         ; R2 := 0.000000
  3 [-]: GETGLOBAL R3 K0        ; R3 := 0x34291f5c
  4 [-]: GETTABLE  R3 R3 K1     ; R82 := R3[0x056bfe8b]
  5 [-]: CALL      R3 1 2       ; R3 := R3()
  6 [-]: TEST      R3 1         ; if R3 then PC := 34
  7 [-]: JMP       34           ; PC := 34
  8 [-]: GETGLOBAL R3 K0        ; R3 := 0x34291f5c
  9 [-]: GETTABLE  R3 R3 K2     ; R82 := R3[0xe6b41adb]
 10 [-]: CALL      R3 1 2       ; R3 := R3()
 11 [-]: TEST      R3 1         ; if R3 then PC := 34
 12 [-]: JMP       34           ; PC := 34
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 14 [-]: GETGLOBAL R4 K4        ; R4 := mProfileSettings
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: TEST      R3 1         ; if R3 then PC := 34
 17 [-]: JMP       34           ; PC := 34
 18 [-]: GETGLOBAL R3 K4        ; R3 := mProfileSettings
 19 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0xa5341b39]
 20 [-]: GETGLOBAL R5 K6        ; R5 := mIsInFrontEnd
 21 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 22 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 23 [-]: MOVE      R1 R3        ; R1 := R3
 24 [-]: GETGLOBAL R3 K4        ; R3 := mProfileSettings
 25 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0xa5341b39]
 26 [-]: GETGLOBAL R5 K6        ; R5 := mIsInFrontEnd
 27 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 28 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 29 [-]: MOVE      R2 R3        ; R2 := R3
 30 [-]: GETGLOBAL R3 K7        ; R3 := mViewportWidth
 31 [-]: MUL       R1 R1 R3     ; R1 := R1 * R3
 32 [-]: GETGLOBAL R3 K8        ; R3 := mViewportHeight
 33 [-]: MUL       R2 R2 R3     ; R2 := R2 * R3
 34 [-]: SELF      R3 R0 K9     ; R4 := R0; R3 := R0[0xcbf89887]
 35 [-]: GETUPVAL  R5 U0        ; R5 := U0
 36 [-]: GETTABLE  R5 R5 K10    ; R82 := R5[0x74a11ec6]
 37 [-]: MOVE      R6 R1        ; R6 := R1
 38 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 39 [-]: GETUPVAL  R6 U0        ; R6 := U0
 40 [-]: GETTABLE  R6 R6 K10    ; R82 := R6[0x74a11ec6]
 41 [-]: MOVE      R7 R2        ; R7 := R2
 42 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 43 [-]: CALL      R3 0 1       ; R3(R4,...)
 44 [-]: RETURN    R0 1         ; return 


; Function #121.29:
;
; Name:            
; Defined at line: 7068
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R82 := R1[0x06d055f9]
  3 [-]: GETGLOBAL R2 K1        ; R2 := 0x34291f5c
  4 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0x1467d5f4]
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mFilterBtnOffset"]
  7 [-]: CONST     R4 0         ; R4 := 0.000000
  8 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  9 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 11 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 12 [-]: LOADK     R5 K7        ; R5 := "TabbedChatPanel.FilterBtn"
 13 [-]: CONST     R6 0         ; R6 := 0.000000
 14 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["mOrigFilterPos"]
 15 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["Btn"]
 16 [-]: ADD       R7 R7 R1     ; R7 := R7 + R1
 17 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 19 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 20 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 21 [-]: LOADK     R5 K10       ; R5 := "TabbedChatPanel.FilterList"
 22 [-]: CONST     R6 0         ; R6 := 0.000000
 23 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["mOrigFilterPos"]
 24 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["List"]
 25 [-]: ADD       R7 R7 R1     ; R7 := R7 + R1
 26 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 27 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 28 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf64b7262]
 29 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 30 [-]: LOADK     R5 K12       ; R5 := "TabbedChatPanel.FilterListMask"
 31 [-]: CONST     R6 0         ; R6 := 0.000000
 32 [-]: GETTABLE  R7 R0 K8     ; R7 := R0["mOrigFilterPos"]
 33 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["Mask"]
 34 [-]: ADD       R7 R7 R1     ; R7 := R7 + R1
 35 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 36 [-]: RETURN    R0 1         ; return 


; Function #121.30:
;
; Name:            
; Defined at line: 7075
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: LOADK     R2 K1        ; R2 := ".TabbedChatPanel"
  3 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
  5 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x1e5b5cfe]
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: LOADK     R5 K4        ; R5 := ".FilterBtn"
  8 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  9 [-]: LOADK     R5 K5        ; R5 := "FilterBtnFocused"
 10 [-]: LOADK     R6 K6        ; R6 := "FilterBtnUnfocused"
 11 [-]: LOADNIL   R7 R7        ; R7 := nil
 12 [-]: LOADK     R8 K7        ; R8 := "FilterBtnPressed"
 13 [-]: CALL      R2 7 1       ; R2(R3,R4,R5,R6,R7,R8)
 14 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 15 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x1cb415c1]
 16 [-]: MOVE      R4 R1        ; R4 := R1
 17 [-]: LOADK     R5 K4        ; R5 := ".FilterBtn"
 18 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 19 [-]: GETGLOBAL R5 K9        ; R5 := 0x81e45c65
 20 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 21 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 22 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x20b98db3]
 23 [-]: MOVE      R4 R1        ; R4 := R1
 24 [-]: LOADK     R5 K11       ; R5 := ".FilterCallout.Tf.text"
 25 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 26 [-]: LOADK     R5 K12       ; R5 := "<MENU_GENERIC2>"
 27 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 28 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 29 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0xc0a3774b]
 30 [-]: MOVE      R4 R1        ; R4 := R1
 31 [-]: LOADK     R5 K14       ; R5 := "FilterCallout"
 32 [-]: CONST     R6 11        ; R6 := 11.000000
 33 [-]: GETGLOBAL R7 K15       ; R7 := 0x34291f5c
 34 [-]: GETTABLE  R7 R7 K16    ; R82 := R7[0x1467d5f4]
 35 [-]: CALL      R7 1 0       ; R7,... := R7()
 36 [-]: CALL      R2 0 1       ; R2(R3,...)
 37 [-]: SELF      R2 R0 K17    ; R3 := R0; R2 := R0[0xdf0b2e2f]
 38 [-]: CALL      R2 2 1       ; R2(R3)
 39 [-]: GETUPVAL  R2 U0        ; R2 := U0
 40 [-]: GETTABLE  R2 R2 K19    ; R82 := R2[0x9383bc56]
 41 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 42 [-]: MOVE      R4 R1        ; R4 := R1
 43 [-]: LOADK     R5 K20       ; R5 := ".FilterList.Element"
 44 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 45 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 46 [-]: SETTABLE  R0 K18 R2    ; R0["mFilterList"] := R2
 47 [-]: GETTABLE  R2 R0 K18    ; R2 := R0["mFilterList"]
 48 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x1e5b5cfe]
 49 [-]: LOADK     R4 K21       ; R4 := "FilterSelected"
 50 [-]: LOADK     R5 K22       ; R5 := "FilterFocused"
 51 [-]: LOADK     R6 K23       ; R6 := "FilterUnfocused"
 52 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 53 [-]: GETTABLE  R2 R0 K18    ; R2 := R0["mFilterList"]
 54 [-]: SETTABLE  R2 K24 K25   ; R2["mForcedVerticalSeparation"] := 0.000000
 55 [-]: GETTABLE  R2 R0 K18    ; R2 := R0["mFilterList"]
 56 [-]: SETTABLE  R2 K26 K27   ; R2["mForcedHorizontalSeparation"] := 5.000000
 57 [-]: GETTABLE  R2 R0 K18    ; R2 := R0["mFilterList"]
 58 [-]: CLOSURE   R3 0         ; R3 := closure(Function #121.30.1)
 59 [-]: SETTABLE  R2 K28 R3    ; R2["mOnFocusedCallback"] := R3
 60 [-]: GETTABLE  R2 R0 K18    ; R2 := R0["mFilterList"]
 61 [-]: CLOSURE   R3 1         ; R3 := closure(Function #121.30.2)
 62 [-]: SETTABLE  R2 K29 R3    ; R2["mOnUnfocusedCallback"] := R3
 63 [-]: GETTABLE  R2 R0 K18    ; R2 := R0["mFilterList"]
 64 [-]: CLOSURE   R3 2         ; R3 := closure(Function #121.30.3)
 65 [-]: MOVE      R0 R0        ; R0 := R0
 66 [-]: SETTABLE  R2 K30 R3    ; R2["mOnSelectedCallback"] := R3
 67 [-]: GETTABLE  R2 R0 K18    ; R2 := R0["mFilterList"]
 68 [-]: CLOSURE   R3 3         ; R3 := closure(Function #121.30.4)
 69 [-]: SETTABLE  R2 K31 R3    ; R2["AdjustBtnWidth"] := R3
 70 [-]: GETTABLE  R2 R0 K18    ; R2 := R0["mFilterList"]
 71 [-]: CLOSURE   R3 4         ; R3 := closure(Function #121.30.5)
 72 [-]: MOVE      R0 R0        ; R0 := R0
 73 [-]: SETTABLE  R2 K32 R3    ; R2["mElementDrawCallback"] := R3
 74 [-]: GETTABLE  R2 R0 K18    ; R2 := R0["mFilterList"]
 75 [-]: CLOSURE   R3 5         ; R3 := closure(Function #121.30.6)
 76 [-]: SETTABLE  R2 K33 R3    ; R2["CalculateX"] := R3
 77 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 78 [-]: SELF      R2 R2 K34    ; R3 := R2; R2 := R2[0xee6d3b33]
 79 [-]: MOVE      R4 R1        ; R4 := R1
 80 [-]: LOADK     R5 K35       ; R5 := ".ChatArea"
 81 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 82 [-]: LOADK     R5 K36       ; R5 := "ShowHyperlinkItem"
 83 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 84 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 85 [-]: SELF      R2 R2 K37    ; R3 := R2; R2 := R2[0x19ad3f57]
 86 [-]: MOVE      R4 R1        ; R4 := R1
 87 [-]: LOADK     R5 K38       ; R5 := "ChatArea"
 88 [-]: LOADK     R6 K39       ; R6 := "ignoreIconOffset"
 89 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 90 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 91 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 92 [-]: SELF      R2 R2 K40    ; R3 := R2; R2 := R2[0xf64b7262]
 93 [-]: MOVE      R4 R1        ; R4 := R1
 94 [-]: LOADK     R5 K41       ; R5 := "Fill"
 95 [-]: CONST     R6 9         ; R6 := 9.000000
 96 [-]: GETUPVAL  R7 U1        ; R7 := U1
 97 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 98 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 99 [-]: SELF      R2 R2 K40    ; R3 := R2; R2 := R2[0xf64b7262]
100 [-]: MOVE      R4 R1        ; R4 := R1
101 [-]: LOADK     R5 K41       ; R5 := "Fill"
102 [-]: CONST     R6 10        ; R6 := 10.000000
103 [-]: CONST     R7 75        ; R7 := 75.000000
104 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
105 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
106 [-]: SELF      R2 R2 K40    ; R3 := R2; R2 := R2[0xf64b7262]
107 [-]: MOVE      R4 R1        ; R4 := R1
108 [-]: LOADK     R5 K42       ; R5 := "EdgeLeft"
109 [-]: CONST     R6 9         ; R6 := 9.000000
110 [-]: GETUPVAL  R7 U2        ; R7 := U2
111 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
112 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
113 [-]: SELF      R2 R2 K40    ; R3 := R2; R2 := R2[0xf64b7262]
114 [-]: MOVE      R4 R1        ; R4 := R1
115 [-]: LOADK     R5 K42       ; R5 := "EdgeLeft"
116 [-]: CONST     R6 10        ; R6 := 10.000000
117 [-]: CONST     R7 25        ; R7 := 25.000000
118 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
119 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
120 [-]: SELF      R2 R2 K40    ; R3 := R2; R2 := R2[0xf64b7262]
121 [-]: MOVE      R4 R1        ; R4 := R1
122 [-]: LOADK     R5 K43       ; R5 := "EdgeRight"
123 [-]: CONST     R6 9         ; R6 := 9.000000
124 [-]: GETUPVAL  R7 U2        ; R7 := U2
125 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
126 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
127 [-]: SELF      R2 R2 K40    ; R3 := R2; R2 := R2[0xf64b7262]
128 [-]: MOVE      R4 R1        ; R4 := R1
129 [-]: LOADK     R5 K43       ; R5 := "EdgeRight"
130 [-]: CONST     R6 10        ; R6 := 10.000000
131 [-]: CONST     R7 25        ; R7 := 25.000000
132 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
133 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
134 [-]: SELF      R2 R2 K40    ; R3 := R2; R2 := R2[0xf64b7262]
135 [-]: MOVE      R4 R1        ; R4 := R1
136 [-]: LOADK     R5 K44       ; R5 := "DecoLine"
137 [-]: CONST     R6 9         ; R6 := 9.000000
138 [-]: GETUPVAL  R7 U2        ; R7 := U2
139 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
140 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
141 [-]: SELF      R2 R2 K40    ; R3 := R2; R2 := R2[0xf64b7262]
142 [-]: MOVE      R4 R1        ; R4 := R1
143 [-]: LOADK     R5 K44       ; R5 := "DecoLine"
144 [-]: CONST     R6 10        ; R6 := 10.000000
145 [-]: CONST     R7 25        ; R7 := 25.000000
146 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
147 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
148 [-]: SELF      R2 R2 K40    ; R3 := R2; R2 := R2[0xf64b7262]
149 [-]: MOVE      R4 R1        ; R4 := R1
150 [-]: LOADK     R5 K45       ; R5 := "DecoCurve"
151 [-]: CONST     R6 9         ; R6 := 9.000000
152 [-]: GETUPVAL  R7 U2        ; R7 := U2
153 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
154 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
155 [-]: SELF      R2 R2 K40    ; R3 := R2; R2 := R2[0xf64b7262]
156 [-]: MOVE      R4 R1        ; R4 := R1
157 [-]: LOADK     R5 K45       ; R5 := "DecoCurve"
158 [-]: CONST     R6 10        ; R6 := 10.000000
159 [-]: CONST     R7 25        ; R7 := 25.000000
160 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
161 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
162 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0xc0a3774b]
163 [-]: MOVE      R4 R1        ; R4 := R1
164 [-]: LOADK     R5 K46       ; R5 := "ScrollBar.Scrub"
165 [-]: CONST     R6 11        ; R6 := 11.000000
166 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
167 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
168 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
169 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0xc0a3774b]
170 [-]: MOVE      R4 R1        ; R4 := R1
171 [-]: LOADK     R5 K47       ; R5 := "ScrollBar"
172 [-]: CONST     R6 11        ; R6 := 11.000000
173 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
174 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
175 [-]: RETURN    R0 1         ; return 


; Function #121.30.1:
;
; Name:            
; Defined at line: 7089
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x91e13703]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := ".Bg"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: LOADK     R4 K4        ; R4 := "RectEdgeColor"
  7 [-]: GETGLOBAL R5 K5        ; R5 := 0x0032441c
  8 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UIColorObject_Yellow"]
  9 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["r"]
 10 [-]: GETGLOBAL R6 K5        ; R6 := 0x0032441c
 11 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["UIColorObject_Yellow"]
 12 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["g"]
 13 [-]: GETGLOBAL R7 K5        ; R7 := 0x0032441c
 14 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIColorObject_Yellow"]
 15 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["b"]
 16 [-]: LOADK     R8 K10       ; R8 := 0.900000
 17 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 18 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 19 [-]: SELF      R1 R1 K11    ; R2 := R1; R1 := R1[0xf64b7262]
 20 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 21 [-]: LOADK     R4 K12       ; R4 := "CrossIcon"
 22 [-]: CONST     R5 9         ; R5 := 9.000000
 23 [-]: GETGLOBAL R6 K5        ; R6 := 0x0032441c
 24 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["UIColor_Yellow"]
 25 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 26 [-]: RETURN    R0 1         ; return 


; Function #121.30.2:
;
; Name:            
; Defined at line: 7094
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x91e13703]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := ".Bg"
  5 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  6 [-]: LOADK     R4 K4        ; R4 := "RectEdgeColor"
  7 [-]: GETGLOBAL R5 K5        ; R5 := 0x0032441c
  8 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UIColorObject_White"]
  9 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["r"]
 10 [-]: GETGLOBAL R6 K5        ; R6 := 0x0032441c
 11 [-]: GETTABLE  R6 R6 K6     ; R6 := R6["UIColorObject_White"]
 12 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["g"]
 13 [-]: GETGLOBAL R7 K5        ; R7 := 0x0032441c
 14 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UIColorObject_White"]
 15 [-]: GETTABLE  R7 R7 K9     ; R7 := R7["b"]
 16 [-]: CONST     R8 0         ; R8 := 0.250000
 17 [-]: CALL      R1 8 1       ; R1(R2,R3,R4,R5,R6,R7,R8)
 18 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 19 [-]: SELF      R1 R1 K10    ; R2 := R1; R1 := R1[0xf64b7262]
 20 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
 21 [-]: LOADK     R4 K11       ; R4 := "CrossIcon"
 22 [-]: CONST     R5 9         ; R5 := 9.000000
 23 [-]: GETGLOBAL R6 K5        ; R6 := 0x0032441c
 24 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["UIColor_White"]
 25 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 26 [-]: RETURN    R0 1         ; return 


; Function #121.30.3:
;
; Name:            
; Defined at line: 7099
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: SELF      R1 R1 K0     ; R2 := R1; R1 := R1[0x8b75da5a]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  5 [-]: MOVE      R3 R1        ; R3 := R1
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 33
  8 [-]: JMP       33           ; PC := 33
  9 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 10 [-]: GETGLOBAL R3 K2        ; R3 := mProfileSettings
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 1         ; if R2 then PC := 33
 13 [-]: JMP       33           ; PC := 33
 14 [-]: GETGLOBAL R2 K2        ; R2 := mProfileSettings
 15 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xde798e4a]
 16 [-]: GETGLOBAL R4 K4        ; R4 := 0x7f5022cf
 17 [-]: GETTABLE  R4 R4 K5     ; R82 := R4[0x1a94c9cc]
 18 [-]: GETTABLE  R5 R1 K6     ; R5 := R1["mChannelName"]
 19 [-]: CONST     R6 1         ; R6 := 1.000000
 20 [-]: CONST     R7 1         ; R7 := 1.000000
 21 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 22 [-]: GETGLOBAL R5 K7        ; R5 := 0x34291f5c
 23 [-]: GETTABLE  R5 R5 K8     ; R82 := R5[0x24010192]
 24 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["Filter"]
 25 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["Include"]
 26 [-]: CALL      R5 3 0       ; R5,... := R5(R6,R7)
 27 [-]: CALL      R2 0 1       ; R2(R3,...)
 28 [-]: GETUPVAL  R2 U0        ; R2 := U0
 29 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mFilterList"]
 30 [-]: SELF      R2 R2 K12    ; R3 := R2; R2 := R2[0x9ae7e2d2]
 31 [-]: GETTABLE  R4 R0 K13    ; R4 := R0["mIndex"]
 32 [-]: CALL      R2 3 1       ; R2(R3,R4)
 33 [-]: RETURN    R0 1         ; return 


; Function #121.30.4:
;
; Name:            
; Defined at line: 7109
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        0 R1 K1      ; if R1 ~= nil then PC := 5
  3 [-]: JMP       5            ; PC := 5
  4 [-]: RETURN    R0 1         ; return 
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  6 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x91a24e4b]
  7 [-]: LOADK     R3 K4        ; R3 := "Window.TabbedChatPanel.FilterListMask"
  8 [-]: CONST     R4 12        ; R4 := 12.000000
  9 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 10 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 11 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x91a24e4b]
 12 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mClipName"]
 13 [-]: CONST     R5 0         ; R5 := 0.000000
 14 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 15 [-]: GETGLOBAL R3 K2        ; R3 := 0xae91e43b
 16 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x91a24e4b]
 17 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mClipName"]
 18 [-]: LOADK     R6 K5        ; R6 := ".Bg"
 19 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 20 [-]: CONST     R6 12        ; R6 := 12.000000
 21 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 22 [-]: LT        1 R2 R1      ; if R2 < R1 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 25
 25 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 26 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 27 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0xc0a3774b]
 28 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mClipName"]
 29 [-]: LOADK     R8 K7        ; R8 := "Btn"
 30 [-]: CONST     R9 11        ; R9 := 11.000000
 31 [-]: MOVE      R10 R4       ; R10 := R4
 32 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 33 [-]: TEST      R4 0         ; if not R4 then PC := 47
 34 [-]: JMP       47           ; PC := 47
 35 [-]: GETGLOBAL R5 K8        ; R5 := 0x5bced4c4
 36 [-]: GETTABLE  R5 R5 K9     ; R82 := R5[0xac1b386a]
 37 [-]: MOVE      R6 R3        ; R6 := R3
 38 [-]: SUB       R7 R1 R2     ; R7 := R1 - R2
 39 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 40 [-]: GETGLOBAL R6 K2        ; R6 := 0xae91e43b
 41 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6[0xf64b7262]
 42 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mClipName"]
 43 [-]: LOADK     R9 K7        ; R9 := "Btn"
 44 [-]: CONST     R10 12       ; R10 := 12.000000
 45 [-]: MOVE      R11 R5       ; R11 := R5
 46 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
 47 [-]: RETURN    R0 1         ; return 


; Function #121.30.5:
;
; Name:            
; Defined at line: 7127
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R1 K0        ; R1 := "<p>"
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["Include"]
  3 [-]: TEST      R2 1         ; if R2 then PC := 15
  4 [-]: JMP       15           ; PC := 15
  5 [-]: MOVE      R2 R1        ; R2 := R1
  6 [-]: LOADK     R3 K2        ; R3 := "<font color=\"#C80406\">"
  7 [-]: GETGLOBAL R4 K3        ; R4 := 0xae91e43b
  8 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x42b04007]
  9 [-]: LOADK     R6 K5        ; R6 := "/Lotus/Language/Menu/FilterMgr_ExcludeTag"
 10 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 11 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 12 [-]: LOADK     R5 K6        ; R5 := " "
 13 [-]: LOADK     R6 K7        ; R6 := "</font>"
 14 [-]: CONCAT    R1 R2 R6     ; R1 := R2 .. R3 .. R4 .. R5 .. R6
 15 [-]: MOVE      R2 R1        ; R2 := R1
 16 [-]: LOADK     R3 K8        ; R3 := "<font color=\"#FFFFFF\">"
 17 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["Label"]
 18 [-]: LOADK     R5 K10       ; R5 := "</font></p>"
 19 [-]: CONCAT    R1 R2 R5     ; R1 := R2 .. R3 .. R4 .. R5
 20 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 21 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0xe261aa96]
 22 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["mClipName"]
 23 [-]: LOADK     R5 K9        ; R5 := "Label"
 24 [-]: CONST     R6 29        ; R6 := 29.000000
 25 [-]: MOVE      R7 R1        ; R7 := R1
 26 [-]: CALL      R2 6 1       ; R2(R3,R4,R5,R6,R7)
 27 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 28 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0x91a24e4b]
 29 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["mClipName"]
 30 [-]: LOADK     R5 K14       ; R5 := ".Label"
 31 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 32 [-]: CONST     R5 33        ; R5 := 33.000000
 33 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 34 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 35 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0xd5181643]
 36 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 37 [-]: LOADK     R6 K16       ; R6 := ".Bg"
 38 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 39 [-]: GETGLOBAL R6 K17       ; R6 := 0x0032441c
 40 [-]: GETTABLE  R6 R6 K18    ; R6 := R6["UIMaterial_RectangleNoDepth"]
 41 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 42 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 43 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3[0x91e13703]
 44 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 45 [-]: LOADK     R6 K16       ; R6 := ".Bg"
 46 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 47 [-]: LOADK     R6 K20       ; R6 := "RectEdgeColor"
 48 [-]: GETGLOBAL R7 K17       ; R7 := 0x0032441c
 49 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["UIColorObject_White"]
 50 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["r"]
 51 [-]: GETGLOBAL R8 K17       ; R8 := 0x0032441c
 52 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["UIColorObject_White"]
 53 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["g"]
 54 [-]: GETGLOBAL R9 K17       ; R9 := 0x0032441c
 55 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["UIColorObject_White"]
 56 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["b"]
 57 [-]: CONST     R10 0        ; R10 := 0.250000
 58 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 59 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 60 [-]: SELF      R3 R3 K19    ; R4 := R3; R3 := R3[0x91e13703]
 61 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 62 [-]: LOADK     R6 K16       ; R6 := ".Bg"
 63 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 64 [-]: LOADK     R6 K25       ; R6 := "RectInnerColor"
 65 [-]: GETGLOBAL R7 K17       ; R7 := 0x0032441c
 66 [-]: GETTABLE  R7 R7 K26    ; R7 := R7["UIColorObject_Black"]
 67 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["r"]
 68 [-]: GETGLOBAL R8 K17       ; R8 := 0x0032441c
 69 [-]: GETTABLE  R8 R8 K26    ; R8 := R8["UIColorObject_Black"]
 70 [-]: GETTABLE  R8 R8 K23    ; R8 := R8["g"]
 71 [-]: GETGLOBAL R9 K17       ; R9 := 0x0032441c
 72 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["UIColorObject_Black"]
 73 [-]: GETTABLE  R9 R9 K24    ; R9 := R9["b"]
 74 [-]: LOADK     R10 K27      ; R10 := 0.950000
 75 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 76 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 77 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3[0xf64b7262]
 78 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 79 [-]: LOADK     R6 K29       ; R6 := "Bg"
 80 [-]: CONST     R7 12        ; R7 := 12.000000
 81 [-]: ADD       R8 R2 K30    ; R8 := R2 + 42.000000
 82 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 83 [-]: GETUPVAL  R3 U0        ; R3 := U0
 84 [-]: GETTABLE  R3 R3 K31    ; R3 := R3["mFilterList"]
 85 [-]: GETTABLE  R3 R3 K32    ; R82 := R3[0xec7f8619]
 86 [-]: MOVE      R4 R0        ; R4 := R0
 87 [-]: CALL      R3 2 1       ; R3(R4)
 88 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 89 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3[0xf64b7262]
 90 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 91 [-]: LOADK     R6 K33       ; R6 := "Separator"
 92 [-]: CONST     R7 10        ; R7 := 10.000000
 93 [-]: CONST     R8 25        ; R8 := 25.000000
 94 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 95 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 96 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3[0xf64b7262]
 97 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
 98 [-]: LOADK     R6 K33       ; R6 := "Separator"
 99 [-]: CONST     R7 0         ; R7 := 0.000000
100 [-]: ADD       R8 R2 K34    ; R8 := R2 + 15.000000
101 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
102 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
103 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3[0xf64b7262]
104 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
105 [-]: LOADK     R6 K35       ; R6 := "CrossIcon"
106 [-]: CONST     R7 9         ; R7 := 9.000000
107 [-]: GETGLOBAL R8 K17       ; R8 := 0x0032441c
108 [-]: GETTABLE  R8 R8 K36    ; R8 := R8["UIColor_White"]
109 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
110 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
111 [-]: SELF      R3 R3 K28    ; R4 := R3; R3 := R3[0xf64b7262]
112 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mClipName"]
113 [-]: LOADK     R6 K35       ; R6 := "CrossIcon"
114 [-]: CONST     R7 0         ; R7 := 0.000000
115 [-]: ADD       R8 R2 K34    ; R8 := R2 + 15.000000
116 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
117 [-]: RETURN    R0 1         ; return 


; Function #121.30.6:
;
; Name:            
; Defined at line: 7150
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mInitialX"]
  2 [-]: CONST     R3 1         ; R3 := 1.000000
  3 [-]: GETTABLE  R4 R1 K1     ; R4 := R1["mIndex"]
  4 [-]: SUB       R4 R4 K2     ; R4 := R4 - 1.000000
  5 [-]: CONST     R5 1         ; R5 := 1.000000
  6 [-]: FORPREP   R3 19        ; R3 -= R5; PC := 19
  7 [-]: GETGLOBAL R7 K3        ; R7 := 0xae91e43b
  8 [-]: SELF      R7 R7 K4     ; R8 := R7; R7 := R7[0x91a24e4b]
  9 [-]: GETTABLE  R9 R0 K5     ; R9 := R0["mElements"]
 10 [-]: GETTABLE  R9 R9 R6     ; R9 := R9[R6]
 11 [-]: GETTABLE  R9 R9 K6     ; R9 := R9["mClipName"]
 12 [-]: LOADK     R10 K7       ; R10 := ".Bg"
 13 [-]: CONCAT    R9 R9 R10    ; R9 := R9 .. R10
 14 [-]: CONST     R10 12       ; R10 := 12.000000
 15 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 16 [-]: ADD       R8 R2 R7     ; R8 := R2 + R7
 17 [-]: GETTABLE  R9 R0 K8     ; R9 := R0["mForcedHorizontalSeparation"]
 18 [-]: ADD       R2 R8 R9     ; R2 := R8 + R9
 19 [-]: FORLOOP   R3 7         ; R3 += R5; if R3 <= R4 then begin PC := 7; R6 := R3 end
 20 [-]: RETURN    R2 2         ; return R2
 21 [-]: RETURN    R0 1         ; return 


; Function #121.31:
;
; Name:            
; Defined at line: 7181
; #Upvalues:       7
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  35

  1 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
  2 [-]: SETTABLE  R5 K1 K2     ; R5["x"] := 0.000000
  3 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
  4 [-]: SETTABLE  R5 K3 K2     ; R5["y"] := 0.000000
  5 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
  6 [-]: SETTABLE  R5 K4 K2     ; R5["width"] := 0.000000
  7 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
  8 [-]: SETTABLE  R5 K5 K2     ; R5["height"] := 0.000000
  9 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 10 [-]: SETTABLE  R5 K6 K7     ; R5["minWidth"] := 460.000000
 11 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 12 [-]: SETTABLE  R5 K8 K9     ; R5["minHeight"] := 255.000000
 13 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 14 [-]: SETTABLE  R5 K10 K11   ; R5["maxWidth"] := 0.800000
 15 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 16 [-]: SETTABLE  R5 K12 K13   ; R5["maxHeight"] := 0.700000
 17 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 18 [-]: SETTABLE  R5 K14 K15   ; R5["minimizeY"] := -40.000000
 19 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 20 [-]: SETTABLE  R5 K16 K17   ; R5["minimizeX"] := 120.000000
 21 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 22 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
 23 [-]: SELF      R6 R6 K20    ; R7 := R6; R6 := R6[0x091c120e]
 24 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 25 [-]: SETTABLE  R5 K18 R6    ; R5["stageWidth"] := R6
 26 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mWindow"]
 27 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
 28 [-]: SELF      R6 R6 K22    ; R7 := R6; R6 := R6[0x2cc9d281]
 29 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 30 [-]: SETTABLE  R5 K21 R6    ; R5["stageHeight"] := R6
 31 [-]: GETTABLE  R5 R0 K23    ; R5 := R0["mChatPanelWindow"]
 32 [-]: SETTABLE  R5 K1 K24    ; R5["x"] := 1.000000
 33 [-]: GETTABLE  R5 R0 K23    ; R5 := R0["mChatPanelWindow"]
 34 [-]: SETTABLE  R5 K3 K25    ; R5["y"] := 33.000000
 35 [-]: GETTABLE  R5 R0 K23    ; R5 := R0["mChatPanelWindow"]
 36 [-]: SETTABLE  R5 K4 K26    ; R5["width"] := -2.000000
 37 [-]: GETTABLE  R5 R0 K23    ; R5 := R0["mChatPanelWindow"]
 38 [-]: SETTABLE  R5 K27 K28   ; R5["ReverseWidth"] := true
 39 [-]: GETTABLE  R5 R0 K23    ; R5 := R0["mChatPanelWindow"]
 40 [-]: SETTABLE  R5 K5 K29    ; R5["height"] := -33.000000
 41 [-]: GETTABLE  R5 R0 K23    ; R5 := R0["mChatPanelWindow"]
 42 [-]: SETTABLE  R5 K30 K28   ; R5["ReverseHeight"] := true
 43 [-]: NEWTABLE  R5 0 3       ; R5 := {}
 44 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
 45 [-]: SELF      R6 R6 K33    ; R7 := R6; R6 := R6[0x91a24e4b]
 46 [-]: LOADK     R8 K34       ; R8 := "Window.TabbedChatPanel.FilterList"
 47 [-]: CONST     R9 0         ; R9 := 0.000000
 48 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 49 [-]: SETTABLE  R5 K32 R6    ; R5["List"] := R6
 50 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
 51 [-]: SELF      R6 R6 K33    ; R7 := R6; R6 := R6[0x91a24e4b]
 52 [-]: LOADK     R8 K36       ; R8 := "Window.TabbedChatPanel.FilterListMask"
 53 [-]: CONST     R9 0         ; R9 := 0.000000
 54 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 55 [-]: SETTABLE  R5 K35 R6    ; R5["Mask"] := R6
 56 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
 57 [-]: SELF      R6 R6 K33    ; R7 := R6; R6 := R6[0x91a24e4b]
 58 [-]: LOADK     R8 K38       ; R8 := "Window.TabbedChatPanel.FilterBtn"
 59 [-]: CONST     R9 0         ; R9 := 0.000000
 60 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 61 [-]: SETTABLE  R5 K37 R6    ; R5["Btn"] := R6
 62 [-]: SETTABLE  R0 K31 R5    ; R0["mOrigFilterPos"] := R5
 63 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
 64 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
 65 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
 66 [-]: LOADK     R8 K41       ; R8 := "TabMenu"
 67 [-]: CONST     R9 0         ; R9 := 0.000000
 68 [-]: CONST     R10 0        ; R10 := 0.000000
 69 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
 70 [-]: GETTABLE  R5 R0 K42    ; R5 := R0["mWindowTitle"]
 71 [-]: SETTABLE  R5 K43 K44   ; R5["isDragging"] := false
 72 [-]: GETTABLE  R5 R0 K42    ; R5 := R0["mWindowTitle"]
 73 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
 74 [-]: SELF      R6 R6 K33    ; R7 := R6; R6 := R6[0x91a24e4b]
 75 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
 76 [-]: LOADK     R9 K45       ; R9 := ".TabMenu.WindowTitle"
 77 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 78 [-]: CONST     R9 13        ; R9 := 13.000000
 79 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 80 [-]: SETTABLE  R5 K5 R6     ; R5["height"] := R6
 81 [-]: GETTABLE  R5 R0 K46    ; R5 := R0["mWindowStatus"]
 82 [-]: SETTABLE  R5 K43 K44   ; R5["isDragging"] := false
 83 [-]: GETTABLE  R5 R0 K46    ; R5 := R0["mWindowStatus"]
 84 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
 85 [-]: SELF      R6 R6 K33    ; R7 := R6; R6 := R6[0x91a24e4b]
 86 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
 87 [-]: LOADK     R9 K47       ; R9 := ".WindowStatus"
 88 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
 89 [-]: CONST     R9 13        ; R9 := 13.000000
 90 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 91 [-]: SETTABLE  R5 K5 R6     ; R5["height"] := R6
 92 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
 93 [-]: SELF      R5 R5 K48    ; R6 := R5; R5 := R5[0x0c33ebb2]
 94 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
 95 [-]: LOADK     R8 K49       ; R8 := "Id"
 96 [-]: LOADK     R9 K50       ; R9 := "Window"
 97 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 98 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
 99 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
100 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
101 [-]: LOADK     R8 K51       ; R8 := "MouseCatcherBtn"
102 [-]: CONST     R9 0         ; R9 := 0.000000
103 [-]: CONST     R10 0        ; R10 := 0.000000
104 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
105 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
106 [-]: SELF      R5 R5 K52    ; R6 := R5; R5 := R5[0x1e5b5cfe]
107 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
108 [-]: LOADK     R8 K53       ; R8 := ".TabMenu.WindowTitle.Fill"
109 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
110 [-]: LOADK     R8 K54       ; R8 := "WindowTitleRollOver"
111 [-]: LOADK     R9 K55       ; R9 := "WindowTitleRollOut"
112 [-]: LOADK     R10 K56      ; R10 := "WindowTitleRelease"
113 [-]: LOADK     R11 K57      ; R11 := "WindowTitlePress"
114 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
115 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
116 [-]: SELF      R5 R5 K58    ; R6 := R5; R5 := R5[0x337dac6d]
117 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
118 [-]: LOADK     R8 K53       ; R8 := ".TabMenu.WindowTitle.Fill"
119 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
120 [-]: LOADK     R8 K56       ; R8 := "WindowTitleRelease"
121 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
122 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
123 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
124 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
125 [-]: LOADK     R8 K59       ; R8 := "TabMenu.WindowTitle.Fill"
126 [-]: CONST     R9 9         ; R9 := 9.000000
127 [-]: GETUPVAL  R10 U0       ; R10 := U0
128 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
129 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
130 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
131 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
132 [-]: LOADK     R8 K59       ; R8 := "TabMenu.WindowTitle.Fill"
133 [-]: CONST     R9 10        ; R9 := 10.000000
134 [-]: CONST     R10 75       ; R10 := 75.000000
135 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
136 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
137 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
138 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
139 [-]: LOADK     R8 K60       ; R8 := "TabMenu.WindowTitle.EdgeTop"
140 [-]: CONST     R9 9         ; R9 := 9.000000
141 [-]: GETUPVAL  R10 U1       ; R10 := U1
142 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
143 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
144 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
145 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
146 [-]: LOADK     R8 K60       ; R8 := "TabMenu.WindowTitle.EdgeTop"
147 [-]: CONST     R9 10        ; R9 := 10.000000
148 [-]: CONST     R10 25       ; R10 := 25.000000
149 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
150 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
151 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
152 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
153 [-]: LOADK     R8 K61       ; R8 := "TabMenu.WindowTitle.EdgeLeft"
154 [-]: CONST     R9 9         ; R9 := 9.000000
155 [-]: GETUPVAL  R10 U1       ; R10 := U1
156 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
157 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
158 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
159 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
160 [-]: LOADK     R8 K61       ; R8 := "TabMenu.WindowTitle.EdgeLeft"
161 [-]: CONST     R9 10        ; R9 := 10.000000
162 [-]: CONST     R10 25       ; R10 := 25.000000
163 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
164 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
165 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
166 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
167 [-]: LOADK     R8 K62       ; R8 := "TabMenu.WindowTitle.EdgeRight"
168 [-]: CONST     R9 9         ; R9 := 9.000000
169 [-]: GETUPVAL  R10 U1       ; R10 := U1
170 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
171 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
172 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
173 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
174 [-]: LOADK     R8 K62       ; R8 := "TabMenu.WindowTitle.EdgeRight"
175 [-]: CONST     R9 10        ; R9 := 10.000000
176 [-]: CONST     R10 25       ; R10 := 25.000000
177 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
178 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
179 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
180 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
181 [-]: LOADK     R8 K63       ; R8 := "TabMenu.WindowTitle.EdgeBottom"
182 [-]: CONST     R9 9         ; R9 := 9.000000
183 [-]: GETUPVAL  R10 U1       ; R10 := U1
184 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
185 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
186 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
187 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
188 [-]: LOADK     R8 K63       ; R8 := "TabMenu.WindowTitle.EdgeBottom"
189 [-]: CONST     R9 10        ; R9 := 10.000000
190 [-]: CONST     R10 40       ; R10 := 40.000000
191 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
192 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
193 [-]: SELF      R5 R5 K52    ; R6 := R5; R5 := R5[0x1e5b5cfe]
194 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
195 [-]: LOADK     R8 K64       ; R8 := ".WindowStatus.Resize"
196 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
197 [-]: LOADK     R8 K65       ; R8 := "BottomResizeRollOver"
198 [-]: LOADK     R9 K66       ; R9 := "BottomResizeRollOut"
199 [-]: LOADK     R10 K67      ; R10 := "BottomResizeRelease"
200 [-]: LOADK     R11 K68      ; R11 := "BottomResizePress"
201 [-]: CALL      R5 7 1       ; R5(R6,R7,R8,R9,R10,R11)
202 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
203 [-]: SELF      R5 R5 K58    ; R6 := R5; R5 := R5[0x337dac6d]
204 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
205 [-]: LOADK     R8 K64       ; R8 := ".WindowStatus.Resize"
206 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
207 [-]: LOADK     R8 K67       ; R8 := "BottomResizeRelease"
208 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
209 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
210 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
211 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
212 [-]: LOADK     R8 K69       ; R8 := "WindowStatus.Resize"
213 [-]: CONST     R9 0         ; R9 := 0.000000
214 [-]: CONST     R10 0        ; R10 := 0.000000
215 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
216 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
217 [-]: SELF      R5 R5 K39    ; R6 := R5; R5 := R5[0xf64b7262]
218 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
219 [-]: LOADK     R8 K69       ; R8 := "WindowStatus.Resize"
220 [-]: CONST     R9 10        ; R9 := 10.000000
221 [-]: CONST     R10 50       ; R10 := 50.000000
222 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
223 [-]: GETGLOBAL R5 K19       ; R5 := 0xae91e43b
224 [-]: SELF      R5 R5 K70    ; R6 := R5; R5 := R5[0xc0a3774b]
225 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mClipName"]
226 [-]: LOADK     R8 K71       ; R8 := "TabbedChatPanel.ScrollBar"
227 [-]: CONST     R9 11        ; R9 := 11.000000
228 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
229 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
230 [-]: SELF      R5 R0 K72    ; R6 := R0; R5 := R0[0x652fa097]
231 [-]: CALL      R5 2 1       ; R5(R6)
232 [-]: GETUPVAL  R5 U2        ; R5 := U2
233 [-]: MOVE      R6 R0        ; R6 := R0
234 [-]: LOADK     R7 K74       ; R7 := "UserPanel"
235 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
236 [-]: SETTABLE  R0 K73 R5    ; R0["mUserPanel"] := R5
237 [-]: GETTABLE  R5 R0 K73    ; R5 := R0["mUserPanel"]
238 [-]: SELF      R5 R5 K75    ; R6 := R5; R5 := R5[0x687ae094]
239 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mWindow"]
240 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["width"]
241 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mWindow"]
242 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["height"]
243 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
244 [-]: GETUPVAL  R5 U3        ; R5 := U3
245 [-]: MOVE      R6 R0        ; R6 := R0
246 [-]: LOADK     R7 K77       ; R7 := "SendMessageBar"
247 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
248 [-]: SETTABLE  R0 K76 R5    ; R0["mInputPanel"] := R5
249 [-]: GETTABLE  R5 R0 K76    ; R5 := R0["mInputPanel"]
250 [-]: SELF      R5 R5 K75    ; R6 := R5; R5 := R5[0x687ae094]
251 [-]: GETTABLE  R7 R0 K0     ; R7 := R0["mWindow"]
252 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["width"]
253 [-]: GETTABLE  R8 R0 K0     ; R8 := R0["mWindow"]
254 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["height"]
255 [-]: CALL      R5 4 1       ; R5(R6,R7,R8)
256 [-]: GETGLOBAL R5 K78       ; R5 := 0x76ea806b
257 [-]: SELF      R5 R5 K79    ; R6 := R5; R5 := R5[0x3f3ae64c]
258 [-]: CONST     R7 0         ; R7 := 0.000000
259 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
260 [-]: GETGLOBAL R6 K80       ; R6 := 0x7b998233
261 [-]: MOVE      R7 R5        ; R7 := R5
262 [-]: CALL      R6 2 2       ; R6 := R6(R7)
263 [-]: TEST      R6 1         ; if R6 then PC := 275
264 [-]: JMP       275          ; PC := 275
265 [-]: SELF      R6 R5 K82    ; R7 := R5; R6 := R5[0x5ca33548]
266 [-]: CALL      R6 2 2       ; R6 := R6(R7)
267 [-]: SETTABLE  R0 K81 R6    ; R0["mUser"] := R6
268 [-]: LOADK     R6 K84       ; R6 := "@"
269 [-]: GETGLOBAL R7 K85       ; R7 := 0x7f5022cf
270 [-]: GETTABLE  R7 R7 K86    ; R82 := R7[0x04981ab3]
271 [-]: GETTABLE  R8 R0 K81    ; R8 := R0["mUser"]
272 [-]: CALL      R7 2 2       ; R7 := R7(R8)
273 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
274 [-]: SETTABLE  R0 K83 R6    ; R0["mSearchUserName"] := R6
275 [-]: SETTABLE  R0 K87 K2    ; R0["mCachedIsCounselor"] := 0.000000
276 [-]: SELF      R6 R0 K88    ; R7 := R0; R6 := R0[0xf0446509]
277 [-]: CALL      R6 2 1       ; R6(R7)
278 [-]: SELF      R6 R0 K89    ; R7 := R0; R6 := R0[0x1d7df46f]
279 [-]: CALL      R6 2 1       ; R6(R7)
280 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
281 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6[0x1e5b5cfe]
282 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
283 [-]: LOADK     R9 K90       ; R9 := ".TabMenu.Resize"
284 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
285 [-]: LOADK     R9 K91       ; R9 := "TopResizeRollOver"
286 [-]: LOADK     R10 K92      ; R10 := "TopResizeRollOut"
287 [-]: LOADK     R11 K93      ; R11 := "TopResizeRelease"
288 [-]: LOADK     R12 K94      ; R12 := "TopResizePressed"
289 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
290 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
291 [-]: SELF      R6 R6 K58    ; R7 := R6; R6 := R6[0x337dac6d]
292 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
293 [-]: LOADK     R9 K90       ; R9 := ".TabMenu.Resize"
294 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
295 [-]: LOADK     R9 K93       ; R9 := "TopResizeRelease"
296 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
297 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
298 [-]: SELF      R6 R6 K39    ; R7 := R6; R6 := R6[0xf64b7262]
299 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
300 [-]: LOADK     R9 K95       ; R9 := "TabMenu.Resize"
301 [-]: CONST     R10 10       ; R10 := 10.000000
302 [-]: CONST     R11 50       ; R11 := 50.000000
303 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
304 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
305 [-]: SELF      R6 R6 K52    ; R7 := R6; R6 := R6[0x1e5b5cfe]
306 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
307 [-]: LOADK     R9 K96       ; R9 := ".TabMenu.MinMaxBtn"
308 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
309 [-]: LOADK     R9 K97       ; R9 := "MinMaxBtnFocused"
310 [-]: LOADK     R10 K98      ; R10 := "MinMaxBtnUnfocused"
311 [-]: LOADK     R11 K99      ; R11 := "MinMaxBtnClicked"
312 [-]: LOADNIL   R12 R12      ; R12 := nil
313 [-]: CALL      R6 7 1       ; R6(R7,R8,R9,R10,R11,R12)
314 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
315 [-]: SELF      R6 R6 K70    ; R7 := R6; R6 := R6[0xc0a3774b]
316 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
317 [-]: LOADK     R9 K100      ; R9 := "TabMenu.MinMaxBtn"
318 [-]: CONST     R10 11       ; R10 := 11.000000
319 [-]: GETGLOBAL R11 K101     ; R11 := 0x34291f5c
320 [-]: GETTABLE  R11 R11 K102 ; R82 := R11[0x1467d5f4]
321 [-]: CALL      R11 1 2      ; R11 := R11()
322 [-]: NOT       R11 R11      ; R11 := not R11
323 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
324 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
325 [-]: SELF      R6 R6 K39    ; R7 := R6; R6 := R6[0xf64b7262]
326 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
327 [-]: LOADK     R9 K103      ; R9 := "TabMenu.MinMaxBtn.Icon"
328 [-]: CONST     R10 10       ; R10 := 10.000000
329 [-]: CONST     R11 50       ; R11 := 50.000000
330 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
331 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
332 [-]: SELF      R6 R6 K104   ; R7 := R6; R6 := R6[0xd5181643]
333 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
334 [-]: LOADK     R9 K105      ; R9 := ".TabMenu.MinMaxBtn.Bg"
335 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
336 [-]: GETGLOBAL R9 K106      ; R9 := 0x0032441c
337 [-]: GETTABLE  R9 R9 K107   ; R9 := R9["UIMaterial_RectangleNoDepth"]
338 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
339 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
340 [-]: SELF      R6 R6 K108   ; R7 := R6; R6 := R6[0x91e13703]
341 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
342 [-]: LOADK     R9 K105      ; R9 := ".TabMenu.MinMaxBtn.Bg"
343 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
344 [-]: LOADK     R9 K109      ; R9 := "RectEdgeColor"
345 [-]: GETGLOBAL R10 K106     ; R10 := 0x0032441c
346 [-]: GETTABLE  R10 R10 K110 ; R10 := R10["UIColorObject_White"]
347 [-]: GETTABLE  R10 R10 K111 ; R10 := R10["r"]
348 [-]: GETGLOBAL R11 K106     ; R11 := 0x0032441c
349 [-]: GETTABLE  R11 R11 K110 ; R11 := R11["UIColorObject_White"]
350 [-]: GETTABLE  R11 R11 K112 ; R11 := R11["g"]
351 [-]: GETGLOBAL R12 K106     ; R12 := 0x0032441c
352 [-]: GETTABLE  R12 R12 K110 ; R12 := R12["UIColorObject_White"]
353 [-]: GETTABLE  R12 R12 K113 ; R12 := R12["b"]
354 [-]: LOADK     R13 K114     ; R13 := 0.050000
355 [-]: CALL      R6 8 1       ; R6(R7,R8,R9,R10,R11,R12,R13)
356 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
357 [-]: SELF      R6 R6 K108   ; R7 := R6; R6 := R6[0x91e13703]
358 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
359 [-]: LOADK     R9 K105      ; R9 := ".TabMenu.MinMaxBtn.Bg"
360 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
361 [-]: LOADK     R9 K115      ; R9 := "RectInnerColor"
362 [-]: GETGLOBAL R10 K106     ; R10 := 0x0032441c
363 [-]: GETTABLE  R10 R10 K116 ; R10 := R10["UIColorObject_Black"]
364 [-]: GETTABLE  R10 R10 K111 ; R10 := R10["r"]
365 [-]: GETGLOBAL R11 K106     ; R11 := 0x0032441c
366 [-]: GETTABLE  R11 R11 K116 ; R11 := R11["UIColorObject_Black"]
367 [-]: GETTABLE  R11 R11 K112 ; R11 := R11["g"]
368 [-]: GETGLOBAL R12 K106     ; R12 := 0x0032441c
369 [-]: GETTABLE  R12 R12 K116 ; R12 := R12["UIColorObject_Black"]
370 [-]: GETTABLE  R12 R12 K113 ; R12 := R12["b"]
371 [-]: CONST     R13 1        ; R13 := 1.000000
372 [-]: CALL      R6 8 1       ; R6(R7,R8,R9,R10,R11,R12,R13)
373 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
374 [-]: SELF      R6 R6 K39    ; R7 := R6; R6 := R6[0xf64b7262]
375 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
376 [-]: LOADK     R9 K117      ; R9 := "TabMenu.MinMaxBtn.Separator"
377 [-]: CONST     R10 10       ; R10 := 10.000000
378 [-]: CONST     R11 25       ; R11 := 25.000000
379 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
380 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
381 [-]: SELF      R6 R6 K39    ; R7 := R6; R6 := R6[0xf64b7262]
382 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
383 [-]: LOADK     R9 K117      ; R9 := "TabMenu.MinMaxBtn.Separator"
384 [-]: CONST     R10 9        ; R10 := 9.000000
385 [-]: GETUPVAL  R11 U1       ; R11 := U1
386 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
387 [-]: GETGLOBAL R6 K19       ; R6 := 0xae91e43b
388 [-]: SELF      R6 R6 K70    ; R7 := R6; R6 := R6[0xc0a3774b]
389 [-]: GETTABLE  R8 R0 K40    ; R8 := R0["mClipName"]
390 [-]: LOADK     R9 K118      ; R9 := "TabMenu.ExpandCallout"
391 [-]: CONST     R10 11       ; R10 := 11.000000
392 [-]: OP_LOADBOOL R11 0 0      ; R11 := false
393 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
394 [-]: GETUPVAL  R6 U4        ; R6 := U4
395 [-]: CALL      R6 1 1       ; R6()
396 [-]: GETGLOBAL R6 K119      ; R6 := 0xe7f2b02f
397 [-]: SELF      R6 R6 K120   ; R7 := R6; R6 := R6[0x0b151d80]
398 [-]: CALL      R6 2 2       ; R6 := R6(R7)
399 [-]: GETGLOBAL R7 K80       ; R7 := 0x7b998233
400 [-]: MOVE      R8 R6        ; R8 := R6
401 [-]: CALL      R7 2 2       ; R7 := R7(R8)
402 [-]: TEST      R7 1         ; if R7 then PC := 520
403 [-]: JMP       520          ; PC := 520
404 [-]: GETGLOBAL R7 K80       ; R7 := 0x7b998233
405 [-]: MOVE      R8 R5        ; R8 := R5
406 [-]: CALL      R7 2 2       ; R7 := R7(R8)
407 [-]: TEST      R7 1         ; if R7 then PC := 520
408 [-]: JMP       520          ; PC := 520
409 [-]: GETGLOBAL R7 K80       ; R7 := 0x7b998233
410 [-]: GETGLOBAL R8 K121      ; R8 := mGameData
411 [-]: CALL      R7 2 2       ; R7 := R7(R8)
412 [-]: TEST      R7 1         ; if R7 then PC := 520
413 [-]: JMP       520          ; PC := 520
414 [-]: GETGLOBAL R7 K121      ; R7 := mGameData
415 [-]: SELF      R7 R7 K122   ; R8 := R7; R7 := R7[0x9680dbee]
416 [-]: LOADK     R9 K123      ; R9 := "ChatChannelJoin"
417 [-]: CALL      R7 3 1       ; R7(R8,R9)
418 [-]: GETGLOBAL R7 K121      ; R7 := mGameData
419 [-]: SELF      R7 R7 K124   ; R8 := R7; R7 := R7[0x613f6b5f]
420 [-]: LOADK     R9 K125      ; R9 := "ChatChannelLeft"
421 [-]: CALL      R7 3 1       ; R7(R8,R9)
422 [-]: GETGLOBAL R7 K121      ; R7 := mGameData
423 [-]: SELF      R7 R7 K126   ; R8 := R7; R7 := R7[0xec713aff]
424 [-]: LOADK     R9 K127      ; R9 := "ChatChannelJoinUserList"
425 [-]: CALL      R7 3 1       ; R7(R8,R9)
426 [-]: GETGLOBAL R7 K121      ; R7 := mGameData
427 [-]: SELF      R7 R7 K128   ; R8 := R7; R7 := R7[0x6a0a5c85]
428 [-]: LOADK     R9 K129      ; R9 := "ChatMessageReceived"
429 [-]: CALL      R7 3 1       ; R7(R8,R9)
430 [-]: GETGLOBAL R7 K121      ; R7 := mGameData
431 [-]: SELF      R7 R7 K130   ; R8 := R7; R7 := R7[0x09a14b6b]
432 [-]: LOADK     R9 K131      ; R9 := "InvalidWhisperTarget"
433 [-]: CALL      R7 3 1       ; R7(R8,R9)
434 [-]: GETGLOBAL R7 K121      ; R7 := mGameData
435 [-]: SELF      R7 R7 K132   ; R8 := R7; R7 := R7[0xcb82b656]
436 [-]: LOADK     R9 K133      ; R9 := "SystemMessage"
437 [-]: CALL      R7 3 1       ; R7(R8,R9)
438 [-]: GETGLOBAL R7 K121      ; R7 := mGameData
439 [-]: SELF      R7 R7 K134   ; R8 := R7; R7 := R7[0x6be0f169]
440 [-]: LOADK     R9 K135      ; R9 := "ChatConnectionChanged"
441 [-]: CALL      R7 3 1       ; R7(R8,R9)
442 [-]: SELF      R7 R6 K137   ; R8 := R6; R7 := R6[0xac0a30b1]
443 [-]: CALL      R7 2 2       ; R7 := R7(R8)
444 [-]: SETTABLE  R0 K136 R7   ; R0["mIsConnected"] := R7
445 [-]: GETTABLE  R7 R0 K136   ; R7 := R0["mIsConnected"]
446 [-]: TEST      R7 0         ; if not R7 then PC := 501
447 [-]: JMP       501          ; PC := 501
448 [-]: LOADK     R7 K138      ; R7 := ""
449 [-]: GETGLOBAL R8 K119      ; R8 := 0xe7f2b02f
450 [-]: SELF      R8 R8 K139   ; R9 := R8; R8 := R8[0x565be9ee]
451 [-]: CALL      R8 2 2       ; R8 := R8(R9)
452 [-]: GETGLOBAL R9 K80       ; R9 := 0x7b998233
453 [-]: MOVE      R10 R8       ; R10 := R8
454 [-]: CALL      R9 2 2       ; R9 := R9(R10)
455 [-]: TEST      R9 1         ; if R9 then PC := 460
456 [-]: JMP       460          ; PC := 460
457 [-]: SELF      R9 R8 K140   ; R10 := R8; R9 := R8[0x7259ce13]
458 [-]: CALL      R9 2 2       ; R9 := R9(R10)
459 [-]: MOVE      R7 R9        ; R7 := R9
460 [-]: LOADK     R9 K141      ; R9 := "#"
461 [-]: GETTABLE  R10 R0 K142  ; R82 := R10[0x2566038c]
462 [-]: CALL      R10 1 2      ; R10 := R10()
463 [-]: MOVE      R11 R7       ; R11 := R7
464 [-]: CONCAT    R7 R9 R11    ; R7 := R9 .. R10 .. R11
465 [-]: GETGLOBAL R9 K80       ; R9 := 0x7b998233
466 [-]: MOVE      R10 R6       ; R10 := R6
467 [-]: CALL      R9 2 2       ; R9 := R9(R10)
468 [-]: TEST      R9 1         ; if R9 then PC := 501
469 [-]: JMP       501          ; PC := 501
470 [-]: SELF      R9 R6 K143   ; R10 := R6; R9 := R6[0x1a725684]
471 [-]: CALL      R9 2 2       ; R9 := R9(R10)
472 [-]: GETGLOBAL R10 K80      ; R10 := 0x7b998233
473 [-]: MOVE      R11 R9       ; R11 := R9
474 [-]: CALL      R10 2 2      ; R10 := R10(R11)
475 [-]: TEST      R10 1        ; if R10 then PC := 501
476 [-]: JMP       501          ; PC := 501
477 [-]: LEN       R10 R9       ; R10 := # R9
478 [-]: LT        0 K2 R10     ; if 0.000000 >= R10 then PC := 501
479 [-]: JMP       501          ; PC := 501
480 [-]: CONST     R10 1        ; R10 := 1.000000
481 [-]: LEN       R11 R9       ; R11 := # R9
482 [-]: CONST     R12 1        ; R12 := 1.000000
483 [-]: FORPREP   R10 500      ; R10 -= R12; PC := 500
484 [-]: GETGLOBAL R14 K85      ; R14 := 0x7f5022cf
485 [-]: GETTABLE  R14 R14 K144 ; R82 := R14[0x1a94c9cc]
486 [-]: GETTABLE  R15 R9 R13   ; R15 := R9[R13]
487 [-]: CONST     R16 2        ; R16 := 2.000000
488 [-]: CONST     R17 2        ; R17 := 2.000000
489 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
490 [-]: GETTABLE  R15 R0 K142  ; R82 := R15[0x2566038c]
491 [-]: CALL      R15 1 2      ; R15 := R15()
492 [-]: EQ        0 R14 R15    ; if R14 ~= R15 then PC := 500
493 [-]: JMP       500          ; PC := 500
494 [-]: GETTABLE  R14 R9 R13   ; R14 := R9[R13]
495 [-]: EQ        1 R7 R14     ; if R7 == R14 then PC := 500
496 [-]: JMP       500          ; PC := 500
497 [-]: SELF      R14 R6 K145  ; R15 := R6; R14 := R6[0xba30dacc]
498 [-]: GETTABLE  R16 R9 R13   ; R16 := R9[R13]
499 [-]: CALL      R14 3 1      ; R14(R15,R16)
500 [-]: FORLOOP   R10 484      ; R10 += R12; if R10 <= R11 then begin PC := 484; R13 := R10 end
501 [-]: GETGLOBAL R14 K121     ; R14 := mGameData
502 [-]: SELF      R14 R14 K146 ; R15 := R14; R14 := R14[0x20693eb7]
503 [-]: CALL      R14 2 2      ; R14 := R14(R15)
504 [-]: GETGLOBAL R15 K80      ; R15 := 0x7b998233
505 [-]: MOVE      R16 R14      ; R16 := R14
506 [-]: CALL      R15 2 2      ; R15 := R15(R16)
507 [-]: TEST      R15 1        ; if R15 then PC := 520
508 [-]: JMP       520          ; PC := 520
509 [-]: CONST     R15 1        ; R15 := 1.000000
510 [-]: LEN       R16 R14      ; R16 := # R14
511 [-]: CONST     R17 1        ; R17 := 1.000000
512 [-]: FORPREP   R15 519      ; R15 -= R17; PC := 519
513 [-]: GETUPVAL  R19 U5       ; R19 := U5
514 [-]: GETTABLE  R20 R14 R18  ; R20 := R14[R18]
515 [-]: GETTABLE  R20 R20 K147 ; R20 := R20["mDisplayName"]
516 [-]: GETTABLE  R21 R14 R18  ; R21 := R14[R18]
517 [-]: GETTABLE  R21 R21 K148 ; R21 := R21["mId"]
518 [-]: CALL      R19 3 1      ; R19(R20,R21)
519 [-]: FORLOOP   R15 513      ; R15 += R17; if R15 <= R16 then begin PC := 513; R18 := R15 end
520 [-]: GETGLOBAL R19 K19      ; R19 := 0xae91e43b
521 [-]: SELF      R19 R19 K70  ; R20 := R19; R19 := R19[0xc0a3774b]
522 [-]: GETTABLE  R21 R0 K40   ; R21 := R0["mClipName"]
523 [-]: LOADK     R22 K149     ; R22 := "TabMenu.WindowTitle.Arrows"
524 [-]: CONST     R23 11       ; R23 := 11.000000
525 [-]: GETTABLE  R24 R0 K136  ; R24 := R0["mIsConnected"]
526 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
527 [-]: GETGLOBAL R19 K19      ; R19 := 0xae91e43b
528 [-]: SELF      R19 R19 K70  ; R20 := R19; R19 := R19[0xc0a3774b]
529 [-]: GETTABLE  R21 R0 K40   ; R21 := R0["mClipName"]
530 [-]: LOADK     R22 K150     ; R22 := "TabMenu.WindowTitle.Spinner"
531 [-]: CONST     R23 11       ; R23 := 11.000000
532 [-]: GETTABLE  R24 R0 K136  ; R24 := R0["mIsConnected"]
533 [-]: NOT       R24 R24      ; R24 := not R24
534 [-]: CALL      R19 6 1      ; R19(R20,R21,R22,R23,R24)
535 [-]: GETGLOBAL R19 K19      ; R19 := 0xae91e43b
536 [-]: SELF      R19 R19 K151 ; R20 := R19; R19 := R19[0x67bc869f]
537 [-]: LOADK     R21 K152     ; R21 := "Window.TabbedChatPanel"
538 [-]: CONST     R22 10       ; R22 := 10.000000
539 [-]: CONST     R23 0        ; R23 := 0.000000
540 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
541 [-]: GETGLOBAL R19 K19      ; R19 := 0xae91e43b
542 [-]: SELF      R19 R19 K151 ; R20 := R19; R19 := R19[0x67bc869f]
543 [-]: LOADK     R21 K153     ; R21 := "Window.Hint"
544 [-]: CONST     R22 10       ; R22 := 10.000000
545 [-]: CONST     R23 0        ; R23 := 0.000000
546 [-]: CALL      R19 5 1      ; R19(R20,R21,R22,R23)
547 [-]: SELF      R19 R0 K154  ; R20 := R0; R19 := R0[0x96a27931]
548 [-]: CALL      R19 2 1      ; R19(R20)
549 [-]: SELF      R19 R0 K155  ; R20 := R0; R19 := R0[0x22c2c023]
550 [-]: CALL      R19 2 1      ; R19(R20)
551 [-]: SELF      R19 R0 K156  ; R20 := R0; R19 := R0[0xc2b5e351]
552 [-]: GETTABLE  R21 R0 K157  ; R21 := R0["mVisualMode"]
553 [-]: CALL      R19 3 1      ; R19(R20,R21)
554 [-]: GETGLOBAL R19 K80      ; R19 := 0x7b998233
555 [-]: GETGLOBAL R20 K158     ; R20 := mProfileSettings
556 [-]: CALL      R19 2 2      ; R19 := R19(R20)
557 [-]: TEST      R19 1        ; if R19 then PC := 611
558 [-]: JMP       611          ; PC := 611
559 [-]: GETGLOBAL R19 K158     ; R19 := mProfileSettings
560 [-]: SELF      R19 R19 K159 ; R20 := R19; R19 := R19[0x6eee4d42]
561 [-]: CALL      R19 2 2      ; R19 := R19(R20)
562 [-]: GETGLOBAL R20 K158     ; R20 := mProfileSettings
563 [-]: SELF      R20 R20 K160 ; R21 := R20; R20 := R20[0x24c02b59]
564 [-]: CALL      R20 2 2      ; R20 := R20(R21)
565 [-]: GETGLOBAL R21 K158     ; R21 := mProfileSettings
566 [-]: SELF      R21 R21 K161 ; R22 := R21; R21 := R21[0x65d638e2]
567 [-]: CALL      R21 2 2      ; R21 := R21(R22)
568 [-]: TEST      R19 1        ; if R19 then PC := 572
569 [-]: JMP       572          ; PC := 572
570 [-]: TEST      R20 0        ; if not R20 then PC := 578
571 [-]: JMP       578          ; PC := 578
572 [-]: GETTABLE  R22 R0 K73   ; R22 := R0["mUserPanel"]
573 [-]: SELF      R22 R22 K162 ; R23 := R22; R22 := R22[0xcaccf524]
574 [-]: MOVE      R24 R19      ; R24 := R19
575 [-]: OP_LOADBOOL R25 1 0      ; R25 := true
576 [-]: CALL      R22 4 1      ; R22(R23,R24,R25)
577 [-]: JMP       602          ; PC := 602
578 [-]: GETGLOBAL R22 K19      ; R22 := 0xae91e43b
579 [-]: SELF      R22 R22 K151 ; R23 := R22; R22 := R22[0x67bc869f]
580 [-]: LOADK     R24 K163     ; R24 := "Window.MouseCatcherBtn"
581 [-]: CONST     R25 12       ; R25 := 12.000000
582 [-]: GETGLOBAL R26 K0       ; R26 := mWindow
583 [-]: GETTABLE  R26 R26 K0   ; R26 := R26["mWindow"]
584 [-]: GETTABLE  R26 R26 K4   ; R26 := R26["width"]
585 [-]: GETUPVAL  R27 U6       ; R27 := U6
586 [-]: GETTABLE  R27 R27 K164 ; R82 := R27[0x06d055f9]
587 [-]: GETTABLE  R28 R0 K73   ; R28 := R0["mUserPanel"]
588 [-]: GETTABLE  R28 R28 K165 ; R28 := R28["mListControl"]
589 [-]: GETTABLE  R28 R28 K166 ; R28 := R28["mIsVisible"]
590 [-]: TEST      R28 1        ; if R28 then PC := 595
591 [-]: JMP       595          ; PC := 595
592 [-]: GETTABLE  R28 R0 K73   ; R28 := R0["mUserPanel"]
593 [-]: GETTABLE  R28 R28 K167 ; R28 := R28["mEmoteGrid"]
594 [-]: GETTABLE  R28 R28 K166 ; R28 := R28["mIsVisible"]
595 [-]: GETTABLE  R29 R0 K73   ; R29 := R0["mUserPanel"]
596 [-]: GETTABLE  R29 R29 K168 ; R29 := R29["mActiveRect"]
597 [-]: GETTABLE  R29 R29 K4   ; R29 := R29["width"]
598 [-]: CONST     R30 0        ; R30 := 0.000000
599 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
600 [-]: ADD       R26 R26 R27  ; R26 := R26 + R27
601 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
602 [-]: TEST      R20 1        ; if R20 then PC := 611
603 [-]: JMP       611          ; PC := 611
604 [-]: TEST      R19 0        ; if not R19 then PC := 611
605 [-]: JMP       611          ; PC := 611
606 [-]: TEST      R21 0        ; if not R21 then PC := 611
607 [-]: JMP       611          ; PC := 611
608 [-]: GETTABLE  R22 R0 K73   ; R22 := R0["mUserPanel"]
609 [-]: SELF      R22 R22 K169 ; R23 := R22; R22 := R22[0xcc9c1404]
610 [-]: CALL      R22 2 1      ; R22(R23)
611 [-]: GETGLOBAL R22 K101     ; R22 := 0x34291f5c
612 [-]: GETTABLE  R22 R22 K170 ; R82 := R22[0xe6b41adb]
613 [-]: CALL      R22 1 2      ; R22 := R22()
614 [-]: TEST      R22 0        ; if not R22 then PC := 889
615 [-]: JMP       889          ; PC := 889
616 [-]: GETTABLE  R22 R0 K40   ; R22 := R0["mClipName"]
617 [-]: LOADK     R23 K171     ; R23 := ".SendMessageBar"
618 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
619 [-]: CONST     R23 6        ; R23 := 6.000000
620 [-]: CONST     R24 2        ; R24 := 2.000000
621 [-]: GETGLOBAL R25 K172     ; R25 := 0x03f57322
622 [-]: GETGLOBAL R26 K173     ; R26 := 0x38f10e85
623 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
624 [-]: MOVE      R28 R22      ; R28 := R22
625 [-]: LOADK     R29 K174     ; R29 := ".EdgeTop.getDepth"
626 [-]: CONCAT    R28 R28 R29  ; R28 := R28 .. R29
627 [-]: CALL      R26 3 0      ; R26,... := R26(R27,R28)
628 [-]: CALL      R25 0 2      ; R25 := R25(R26,...)
629 [-]: GETGLOBAL R26 K172     ; R26 := 0x03f57322
630 [-]: GETGLOBAL R27 K173     ; R27 := 0x38f10e85
631 [-]: GETGLOBAL R28 K19      ; R28 := 0xae91e43b
632 [-]: MOVE      R29 R22      ; R29 := R22
633 [-]: LOADK     R30 K175     ; R30 := ".EdgeFill.getDepth"
634 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
635 [-]: CALL      R27 3 0      ; R27,... := R27(R28,R29)
636 [-]: CALL      R26 0 2      ; R26 := R26(R27,...)
637 [-]: LT        0 R25 R26    ; if R25 >= R26 then PC := 653
638 [-]: JMP       653          ; PC := 653
639 [-]: GETGLOBAL R27 K173     ; R27 := 0x38f10e85
640 [-]: GETGLOBAL R28 K19      ; R28 := 0xae91e43b
641 [-]: MOVE      R29 R22      ; R29 := R22
642 [-]: LOADK     R30 K176     ; R30 := ".EdgeTop.swapDepths"
643 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
644 [-]: MOVE      R30 R26      ; R30 := R26
645 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
646 [-]: GETGLOBAL R27 K173     ; R27 := 0x38f10e85
647 [-]: GETGLOBAL R28 K19      ; R28 := 0xae91e43b
648 [-]: MOVE      R29 R22      ; R29 := R22
649 [-]: LOADK     R30 K177     ; R30 := ".EdgeFill.swapDepths"
650 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
651 [-]: MOVE      R30 R25      ; R30 := R25
652 [-]: CALL      R27 4 1      ; R27(R28,R29,R30)
653 [-]: GETTABLE  R27 R0 K23   ; R27 := R0["mChatPanelWindow"]
654 [-]: GETTABLE  R28 R0 K23   ; R28 := R0["mChatPanelWindow"]
655 [-]: GETTABLE  R28 R28 K5   ; R28 := R28["height"]
656 [-]: SUB       R28 R28 R23  ; R28 := R28 - R23
657 [-]: SETTABLE  R27 K5 R28   ; R27["height"] := R28
658 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
659 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
660 [-]: MOVE      R29 R22      ; R29 := R22
661 [-]: LOADK     R30 K178     ; R30 := ".Bg"
662 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
663 [-]: CONST     R30 13       ; R30 := 13.000000
664 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
665 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
666 [-]: MOVE      R33 R22      ; R33 := R22
667 [-]: LOADK     R34 K178     ; R34 := ".Bg"
668 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
669 [-]: CONST     R34 13       ; R34 := 13.000000
670 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
671 [-]: ADD       R31 R31 R23  ; R31 := R31 + R23
672 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
673 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
674 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
675 [-]: MOVE      R29 R22      ; R29 := R22
676 [-]: LOADK     R30 K179     ; R30 := ".BgBlurer"
677 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
678 [-]: CONST     R30 13       ; R30 := 13.000000
679 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
680 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
681 [-]: MOVE      R33 R22      ; R33 := R22
682 [-]: LOADK     R34 K179     ; R34 := ".BgBlurer"
683 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
684 [-]: CONST     R34 13       ; R34 := 13.000000
685 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
686 [-]: ADD       R31 R31 R23  ; R31 := R31 + R23
687 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
688 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
689 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
690 [-]: MOVE      R29 R22      ; R29 := R22
691 [-]: LOADK     R30 K178     ; R30 := ".Bg"
692 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
693 [-]: CONST     R30 1        ; R30 := 1.000000
694 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
695 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
696 [-]: MOVE      R33 R22      ; R33 := R22
697 [-]: LOADK     R34 K178     ; R34 := ".Bg"
698 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
699 [-]: CONST     R34 1        ; R34 := 1.000000
700 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
701 [-]: SUB       R31 R31 R23  ; R31 := R31 - R23
702 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
703 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
704 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
705 [-]: MOVE      R29 R22      ; R29 := R22
706 [-]: LOADK     R30 K179     ; R30 := ".BgBlurer"
707 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
708 [-]: CONST     R30 1        ; R30 := 1.000000
709 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
710 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
711 [-]: MOVE      R33 R22      ; R33 := R22
712 [-]: LOADK     R34 K179     ; R34 := ".BgBlurer"
713 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
714 [-]: CONST     R34 1        ; R34 := 1.000000
715 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
716 [-]: SUB       R31 R31 R23  ; R31 := R31 - R23
717 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
718 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
719 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
720 [-]: MOVE      R29 R22      ; R29 := R22
721 [-]: LOADK     R30 K180     ; R30 := ".EdgeTop"
722 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
723 [-]: CONST     R30 12       ; R30 := 12.000000
724 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
725 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
726 [-]: MOVE      R33 R22      ; R33 := R22
727 [-]: LOADK     R34 K180     ; R34 := ".EdgeTop"
728 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
729 [-]: CONST     R34 12       ; R34 := 12.000000
730 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
731 [-]: ADD       R31 R31 R24  ; R31 := R31 + R24
732 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
733 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
734 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
735 [-]: MOVE      R29 R22      ; R29 := R22
736 [-]: LOADK     R30 K180     ; R30 := ".EdgeTop"
737 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
738 [-]: CONST     R30 13       ; R30 := 13.000000
739 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
740 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
741 [-]: MOVE      R33 R22      ; R33 := R22
742 [-]: LOADK     R34 K180     ; R34 := ".EdgeTop"
743 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
744 [-]: CONST     R34 13       ; R34 := 13.000000
745 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
746 [-]: ADD       R31 R31 K24  ; R31 := R31 + 1.000000
747 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
748 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
749 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
750 [-]: MOVE      R29 R22      ; R29 := R22
751 [-]: LOADK     R30 K180     ; R30 := ".EdgeTop"
752 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
753 [-]: CONST     R30 0        ; R30 := 0.000000
754 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
755 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
756 [-]: MOVE      R33 R22      ; R33 := R22
757 [-]: LOADK     R34 K180     ; R34 := ".EdgeTop"
758 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
759 [-]: CONST     R34 0        ; R34 := 0.000000
760 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
761 [-]: MUL       R32 R24 K181 ; R32 := R24 * 2.000000
762 [-]: SUB       R31 R31 R32  ; R31 := R31 - R32
763 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
764 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
765 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
766 [-]: MOVE      R29 R22      ; R29 := R22
767 [-]: LOADK     R30 K180     ; R30 := ".EdgeTop"
768 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
769 [-]: CONST     R30 1        ; R30 := 1.000000
770 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
771 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
772 [-]: MOVE      R33 R22      ; R33 := R22
773 [-]: LOADK     R34 K180     ; R34 := ".EdgeTop"
774 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
775 [-]: CONST     R34 1        ; R34 := 1.000000
776 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
777 [-]: SUB       R31 R31 R23  ; R31 := R31 - R23
778 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
779 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
780 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
781 [-]: MOVE      R29 R22      ; R29 := R22
782 [-]: LOADK     R30 K182     ; R30 := ".EdgeFill"
783 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
784 [-]: CONST     R30 12       ; R30 := 12.000000
785 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
786 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
787 [-]: MOVE      R33 R22      ; R33 := R22
788 [-]: LOADK     R34 K182     ; R34 := ".EdgeFill"
789 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
790 [-]: CONST     R34 12       ; R34 := 12.000000
791 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
792 [-]: MUL       R32 R23 K183 ; R32 := R23 * 1.333333
793 [-]: ADD       R31 R31 R32  ; R31 := R31 + R32
794 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
795 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
796 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
797 [-]: MOVE      R29 R22      ; R29 := R22
798 [-]: LOADK     R30 K182     ; R30 := ".EdgeFill"
799 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
800 [-]: CONST     R30 13       ; R30 := 13.000000
801 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
802 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
803 [-]: MOVE      R33 R22      ; R33 := R22
804 [-]: LOADK     R34 K182     ; R34 := ".EdgeFill"
805 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
806 [-]: CONST     R34 13       ; R34 := 13.000000
807 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
808 [-]: MUL       R32 R23 K183 ; R32 := R23 * 1.333333
809 [-]: ADD       R31 R31 R32  ; R31 := R31 + R32
810 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
811 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
812 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
813 [-]: MOVE      R29 R22      ; R29 := R22
814 [-]: LOADK     R30 K182     ; R30 := ".EdgeFill"
815 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
816 [-]: CONST     R30 0        ; R30 := 0.000000
817 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
818 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
819 [-]: MOVE      R33 R22      ; R33 := R22
820 [-]: LOADK     R34 K182     ; R34 := ".EdgeFill"
821 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
822 [-]: CONST     R34 0        ; R34 := 0.000000
823 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
824 [-]: SUB       R31 R31 R23  ; R31 := R31 - R23
825 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
826 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
827 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
828 [-]: MOVE      R29 R22      ; R29 := R22
829 [-]: LOADK     R30 K182     ; R30 := ".EdgeFill"
830 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
831 [-]: CONST     R30 1        ; R30 := 1.000000
832 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
833 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
834 [-]: MOVE      R33 R22      ; R33 := R22
835 [-]: LOADK     R34 K182     ; R34 := ".EdgeFill"
836 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
837 [-]: CONST     R34 1        ; R34 := 1.000000
838 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
839 [-]: MUL       R32 R23 K183 ; R32 := R23 * 1.333333
840 [-]: SUB       R31 R31 R32  ; R31 := R31 - R32
841 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
842 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
843 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
844 [-]: MOVE      R29 R22      ; R29 := R22
845 [-]: LOADK     R30 K184     ; R30 := ".EdgeTriangle"
846 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
847 [-]: CONST     R30 0        ; R30 := 0.000000
848 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
849 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
850 [-]: MOVE      R33 R22      ; R33 := R22
851 [-]: LOADK     R34 K184     ; R34 := ".EdgeTriangle"
852 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
853 [-]: CONST     R34 0        ; R34 := 0.000000
854 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
855 [-]: DIV       R32 R23 K181 ; R32 := R23 / 2.000000
856 [-]: SUB       R31 R31 R32  ; R31 := R31 - R32
857 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
858 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
859 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
860 [-]: MOVE      R29 R22      ; R29 := R22
861 [-]: LOADK     R30 K184     ; R30 := ".EdgeTriangle"
862 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
863 [-]: CONST     R30 1        ; R30 := 1.000000
864 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
865 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
866 [-]: MOVE      R33 R22      ; R33 := R22
867 [-]: LOADK     R34 K184     ; R34 := ".EdgeTriangle"
868 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
869 [-]: CONST     R34 1        ; R34 := 1.000000
870 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
871 [-]: DIV       R32 R23 K181 ; R32 := R23 / 2.000000
872 [-]: SUB       R31 R31 R32  ; R31 := R31 - R32
873 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
874 [-]: GETGLOBAL R27 K19      ; R27 := 0xae91e43b
875 [-]: SELF      R27 R27 K151 ; R28 := R27; R27 := R27[0x67bc869f]
876 [-]: MOVE      R29 R22      ; R29 := R22
877 [-]: LOADK     R30 K185     ; R30 := ".Prompt"
878 [-]: CONCAT    R29 R29 R30  ; R29 := R29 .. R30
879 [-]: CONST     R30 0        ; R30 := 0.000000
880 [-]: GETGLOBAL R31 K19      ; R31 := 0xae91e43b
881 [-]: SELF      R31 R31 K33  ; R32 := R31; R31 := R31[0x91a24e4b]
882 [-]: MOVE      R33 R22      ; R33 := R22
883 [-]: LOADK     R34 K185     ; R34 := ".Prompt"
884 [-]: CONCAT    R33 R33 R34  ; R33 := R33 .. R34
885 [-]: CONST     R34 0        ; R34 := 0.000000
886 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
887 [-]: ADD       R31 R31 K181 ; R31 := R31 + 2.000000
888 [-]: CALL      R27 5 1      ; R27(R28,R29,R30,R31)
889 [-]: RETURN    R0 1         ; return 


; Function #121.32:
;
; Name:            
; Defined at line: 7404
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: SETTABLE  R2 K0 K1     ; R2["Msg"] := ""
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: SETTABLE  R2 K2 K1     ; R2["CurrItemString"] := ""
  5 [-]: GETUPVAL  R2 U0        ; R2 := U0
  6 [-]: NEWTABLE  R3 0 0       ; R3 := {}
  7 [-]: SETTABLE  R2 K3 R3     ; R2["OmegaLinks"] := R3
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 10 [-]: SETTABLE  R2 K4 R3     ; R2["SongLinks"] := R3
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 13 [-]: SETTABLE  R2 K5 R3     ; R2["ZawLinks"] := R3
 14 [-]: GETUPVAL  R2 U0        ; R2 := U0
 15 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 16 [-]: SETTABLE  R2 K6 R3     ; R2["AmpLinks"] := R3
 17 [-]: GETUPVAL  R2 U0        ; R2 := U0
 18 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 19 [-]: SETTABLE  R2 K7 R3     ; R2["MoaPetLinks"] := R3
 20 [-]: GETUPVAL  R2 U0        ; R2 := U0
 21 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 22 [-]: SETTABLE  R2 K8 R3     ; R2["KdriveLinks"] := R3
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 25 [-]: SETTABLE  R2 K9 R3     ; R2["KitgunLinks"] := R3
 26 [-]: GETUPVAL  R2 U0        ; R2 := U0
 27 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 28 [-]: SETTABLE  R2 K10 R3    ; R2["AppearanceLinks"] := R3
 29 [-]: GETUPVAL  R2 U0        ; R2 := U0
 30 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 31 [-]: SETTABLE  R2 K11 R3    ; R2["ModConfigLinks"] := R3
 32 [-]: GETUPVAL  R2 U0        ; R2 := U0
 33 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 34 [-]: SETTABLE  R2 K12 R3    ; R2["ShawzinLinks"] := R3
 35 [-]: GETUPVAL  R2 U0        ; R2 := U0
 36 [-]: SETTABLE  R2 K13 K14   ; R2["GuildReplacement"] := false
 37 [-]: GETTABLE  R2 R0 K15    ; R2 := R0["mActivePanelName"]
 38 [-]: EQ        1 R2 K1      ; if R2 == "" then PC := 58
 39 [-]: JMP       58           ; PC := 58
 40 [-]: GETTABLE  R2 R0 K16    ; R2 := R0["mPanelList"]
 41 [-]: GETTABLE  R3 R0 K15    ; R3 := R0["mActivePanelName"]
 42 [-]: GETTABLE  R2 R2 R3     ; R2 := R2[R3]
 43 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0x83b2653c]
 44 [-]: MOVE      R4 R1        ; R4 := R1
 45 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 46 [-]: TEST      R2 1         ; if R2 then PC := 72
 47 [-]: JMP       72           ; PC := 72
 48 [-]: GETGLOBAL R2 K18       ; R2 := 0xae91e43b
 49 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0x5f56eeab]
 50 [-]: GETTABLE  R4 R0 K20    ; R4 := R0["mInputPanel"]
 51 [-]: GETTABLE  R4 R4 K21    ; R4 := R4["mClipPath"]
 52 [-]: LOADK     R5 K22       ; R5 := ".MessageBox"
 53 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 54 [-]: CONST     R5 29        ; R5 := 29.000000
 55 [-]: LOADK     R6 K1        ; R6 := ""
 56 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 57 [-]: JMP       72           ; PC := 72
 58 [-]: GETUPVAL  R2 U1        ; R2 := U1
 59 [-]: MOVE      R3 R1        ; R3 := R1
 60 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 61 [-]: CALL      R2 3 4       ; R2,R3,R4 := R2(R3,R4)
 62 [-]: LEN       R5 R3        ; R5 := # R3
 63 [-]: EQ        0 R5 K23     ; if R5 ~= 1.000000 then PC := 72
 64 [-]: JMP       72           ; PC := 72
 65 [-]: GETTABLE  R5 R3 K23    ; R5 := R3[1.000000]
 66 [-]: EQ        0 R5 K24     ; if R5 ~= "/unstuck" then PC := 72
 67 [-]: JMP       72           ; PC := 72
 68 [-]: GETUPVAL  R5 U2        ; R5 := U2
 69 [-]: GETGLOBAL R6 K25       ; R6 := 0x0a8f62a7
 70 [-]: CALL      R6 1 0       ; R6,... := R6()
 71 [-]: CALL      R5 0 1       ; R5(R6,...)
 72 [-]: SELF      R5 R0 K26    ; R6 := R0; R5 := R0[0x3914d936]
 73 [-]: CALL      R5 2 1       ; R5(R6)
 74 [-]: RETURN    R0 1         ; return 


; Function #121.33:
;
; Name:            
; Defined at line: 7436
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7f5022cf
  2 [-]: GETTABLE  R3 R3 K1     ; R82 := R3[0xa5c556b9]
  3 [-]: MOVE      R4 R2        ; R4 := R2
  4 [-]: LOADK     R5 K2        ; R5 := "#"
  5 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  6 [-]: EQ        1 R3 K3      ; if R3 == nil then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R3 K0        ; R3 := 0x7f5022cf
  9 [-]: GETTABLE  R3 R3 K4     ; R82 := R3[0x1a94c9cc]
 10 [-]: MOVE      R4 R2        ; R4 := R2
 11 [-]: CONST     R5 2         ; R5 := 2.000000
 12 [-]: CONST     R6 -1        ; R6 := -1.000000
 13 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 14 [-]: MOVE      R2 R3        ; R2 := R3
 15 [-]: GETGLOBAL R3 K0        ; R3 := 0x7f5022cf
 16 [-]: GETTABLE  R3 R3 K4     ; R82 := R3[0x1a94c9cc]
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CONST     R5 1         ; R5 := 1.000000
 19 [-]: CONST     R6 1         ; R6 := 1.000000
 20 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 21 [-]: GETTABLE  R4 R0 K5     ; R82 := R4[0x2566038c]
 22 [-]: CALL      R4 1 2       ; R4 := R4()
 23 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 31
 24 [-]: JMP       31           ; PC := 31
 25 [-]: GETUPVAL  R4 U0        ; R4 := U0
 26 [-]: MOVE      R5 R1        ; R5 := R1
 27 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 28 [-]: TEST      R4 1         ; if R4 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: RETURN    R0 1         ; return 
 31 [-]: GETGLOBAL R4 K6        ; R4 := 0x7b998233
 32 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["mPanelList"]
 33 [-]: GETTABLE  R5 R5 R2     ; R5 := R5[R2]
 34 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 35 [-]: TEST      R4 1         ; if R4 then PC := 43
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETTABLE  R4 R0 K7     ; R4 := R0["mPanelList"]
 38 [-]: GETTABLE  R4 R4 R2     ; R4 := R4[R2]
 39 [-]: SELF      R4 R4 K8     ; R5 := R4; R4 := R4[0xfe723404]
 40 [-]: MOVE      R6 R1        ; R6 := R1
 41 [-]: MOVE      R7 R2        ; R7 := R2
 42 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 43 [-]: RETURN    R0 1         ; return 


; Function #121.34:
;
; Name:            
; Defined at line: 7452
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x7f5022cf
  2 [-]: GETTABLE  R4 R4 K1     ; R82 := R4[0xa5c556b9]
  3 [-]: MOVE      R5 R2        ; R5 := R2
  4 [-]: LOADK     R6 K2        ; R6 := "#"
  5 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
  6 [-]: EQ        1 R4 K3      ; if R4 == nil then PC := 15
  7 [-]: JMP       15           ; PC := 15
  8 [-]: GETGLOBAL R4 K0        ; R4 := 0x7f5022cf
  9 [-]: GETTABLE  R4 R4 K4     ; R82 := R4[0x1a94c9cc]
 10 [-]: MOVE      R5 R2        ; R5 := R2
 11 [-]: CONST     R6 2         ; R6 := 2.000000
 12 [-]: CONST     R7 -1        ; R7 := -1.000000
 13 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 14 [-]: MOVE      R2 R4        ; R2 := R4
 15 [-]: GETGLOBAL R4 K5        ; R4 := 0x7b998233
 16 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mPanelList"]
 17 [-]: GETTABLE  R5 R5 R2     ; R5 := R5[R2]
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 1         ; if R4 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mPanelList"]
 22 [-]: GETTABLE  R4 R4 R2     ; R4 := R4[R2]
 23 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x089f95cb]
 24 [-]: MOVE      R6 R1        ; R6 := R1
 25 [-]: MOVE      R7 R2        ; R7 := R2
 26 [-]: MOVE      R8 R3        ; R8 := R3
 27 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 28 [-]: RETURN    R0 1         ; return 


; Function #121.35:
;
; Name:            
; Defined at line: 7461
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETTABLE  R3 R0 K1     ; R3 := R0["mTabMenu"]
  3 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["mSelectedElement"]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 1         ; if R2 then PC := 12
  6 [-]: JMP       12           ; PC := 12
  7 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mTabMenu"]
  8 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x5fbddc1a]
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: LE        0 R2 K4      ; if R2 > 1.000000 then PC := 13
 11 [-]: JMP       13           ; PC := 13
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mTabMenu"]
 14 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mSelectedElement"]
 15 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mIndex"]
 16 [-]: ADD       R3 R2 R1     ; R3 := R2 + R1
 17 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mTabMenu"]
 18 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x5fbddc1a]
 19 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 20 [-]: LT        0 R4 R3      ; if R4 >= R3 then PC := 24
 21 [-]: JMP       24           ; PC := 24
 22 [-]: CONST     R3 1         ; R3 := 1.000000
 23 [-]: JMP       30           ; PC := 30
 24 [-]: LE        0 R3 K6      ; if R3 > 0.000000 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mTabMenu"]
 27 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x5fbddc1a]
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: MOVE      R3 R4        ; R3 := R4
 30 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mTabMenu"]
 31 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x5465f8f3]
 32 [-]: MOVE      R6 R3        ; R6 := R3
 33 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 34 [-]: GETGLOBAL R5 K0        ; R5 := 0x7b998233
 35 [-]: MOVE      R6 R4        ; R6 := R4
 36 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 37 [-]: TEST      R5 1         ; if R5 then PC := 44
 38 [-]: JMP       44           ; PC := 44
 39 [-]: SELF      R5 R0 K8     ; R6 := R0; R5 := R0[0x46610c50]
 40 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["mPanelList"]
 41 [-]: GETTABLE  R8 R4 K10    ; R8 := R4["ChannelName"]
 42 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
 43 [-]: CALL      R5 3 1       ; R5(R6,R7)
 44 [-]: GETUPVAL  R5 U0        ; R5 := U0
 45 [-]: GETTABLE  R5 R5 K11    ; R82 := R5[0x659d451f]
 46 [-]: GETGLOBAL R6 K12       ; R6 := 0x0032441c
 47 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["UISound_ItemTipSection"]
 48 [-]: CALL      R5 2 1       ; R5(R6)
 49 [-]: RETURN    R0 1         ; return 


; Function #121.36:
;
; Name:            
; Defined at line: 7482
; #Upvalues:       4
; #Parameters:     7
; Is_vararg:       0
; Max Stack Size:  36

  1 [-]: GETGLOBAL R7 K0        ; R7 := 0xe7f2b02f
  2 [-]: SELF      R7 R7 K1     ; R8 := R7; R7 := R7[0x0b151d80]
  3 [-]: CALL      R7 2 2       ; R7 := R7(R8)
  4 [-]: GETGLOBAL R8 K2        ; R8 := 0x7b998233
  5 [-]: MOVE      R9 R7        ; R9 := R7
  6 [-]: CALL      R8 2 2       ; R8 := R8(R9)
  7 [-]: TEST      R8 0         ; if not R8 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETTABLE  R8 R0 K3     ; R8 := R0["CHANNEL_ENTER"]
 11 [-]: EQ        0 R1 R8      ; if R1 ~= R8 then PC := 38
 12 [-]: JMP       38           ; PC := 38
 13 [-]: GETGLOBAL R8 K2        ; R8 := 0x7b998233
 14 [-]: GETGLOBAL R9 K4        ; R9 := 0x89326c93
 15 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 16 [-]: TEST      R8 1         ; if R8 then PC := 38
 17 [-]: JMP       38           ; PC := 38
 18 [-]: GETGLOBAL R8 K4        ; R8 := 0x89326c93
 19 [-]: SELF      R8 R8 K5     ; R9 := R8; R8 := R8[0x7d108ddb]
 20 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 21 [-]: GETGLOBAL R9 K2        ; R9 := 0x7b998233
 22 [-]: MOVE      R10 R8       ; R10 := R8
 23 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 24 [-]: TEST      R9 1         ; if R9 then PC := 38
 25 [-]: JMP       38           ; PC := 38
 26 [-]: LEN       R9 R8        ; R9 := # R8
 27 [-]: LT        0 K6 R9      ; if 0.000000 >= R9 then PC := 38
 28 [-]: JMP       38           ; PC := 38
 29 [-]: GETTABLE  R9 R8 K7     ; R9 := R8[1.000000]
 30 [-]: SELF      R9 R9 K8     ; R10 := R9; R9 := R9[0xdcc3e539]
 31 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 32 [-]: TEST      R9 0         ; if not R9 then PC := 38
 33 [-]: JMP       38           ; PC := 38
 34 [-]: GETGLOBAL R9 K9        ; R9 := 0x3d106989
 35 [-]: LOADK     R10 K10      ; R10 := "Ghost player, not joining channel"
 36 [-]: CALL      R9 2 1       ; R9(R10)
 37 [-]: RETURN    R0 1         ; return 
 38 [-]: EQ        0 R3 K11     ; if R3 ~= nil then PC := 41
 39 [-]: JMP       41           ; PC := 41
 40 [-]: MOVE      R3 R2        ; R3 := R2
 41 [-]: LOADNIL   R9 R9        ; R9 := nil
 42 [-]: GETGLOBAL R10 K12      ; R10 := 0x03f57322
 43 [-]: MOVE      R11 R1       ; R11 := R1
 44 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 45 [-]: MOVE      R1 R10       ; R1 := R10
 46 [-]: EQ        0 R1 K7      ; if R1 ~= 1.000000 then PC := 364
 47 [-]: JMP       364          ; PC := 364
 48 [-]: GETTABLE  R10 R0 K13   ; R10 := R0["CHANNEL_GLOBAL"]
 49 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 53
 50 [-]: JMP       53           ; PC := 53
 51 [-]: SETTABLE  R0 K14 R2    ; R0["mPendingGlobalChannelName"] := R2
 52 [-]: JMP       102          ; PC := 102
 53 [-]: GETTABLE  R10 R0 K15   ; R10 := R0["CHANNEL_RECRUITING"]
 54 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 58
 55 [-]: JMP       58           ; PC := 58
 56 [-]: SETTABLE  R0 K16 R2    ; R0["mPendingRecruitingChannelName"] := R2
 57 [-]: JMP       102          ; PC := 102
 58 [-]: GETTABLE  R10 R0 K17   ; R10 := R0["CHANNEL_TRADE"]
 59 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 63
 60 [-]: JMP       63           ; PC := 63
 61 [-]: SETTABLE  R0 K18 R2    ; R0["mPendingTradeChannelName"] := R2
 62 [-]: JMP       102          ; PC := 102
 63 [-]: GETTABLE  R10 R0 K19   ; R10 := R0["CHANNEL_QA"]
 64 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 68
 65 [-]: JMP       68           ; PC := 68
 66 [-]: SETTABLE  R0 K20 R2    ; R0["mPendingQAChannelName"] := R2
 67 [-]: JMP       102          ; PC := 102
 68 [-]: GETTABLE  R10 R0 K21   ; R10 := R0["CHANNEL_COUNCIL"]
 69 [-]: EQ        0 R4 R10     ; if R4 ~= R10 then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: SETTABLE  R0 K22 R2    ; R0["mPendingCouncilChannelName"] := R2
 72 [-]: JMP       102          ; PC := 102
 73 [-]: GETGLOBAL R10 K23      ; R10 := 0x7f5022cf
 74 [-]: GETTABLE  R10 R10 K24  ; R82 := R10[0x1a94c9cc]
 75 [-]: MOVE      R11 R2       ; R11 := R2
 76 [-]: CONST     R12 2        ; R12 := 2.000000
 77 [-]: CONST     R13 2        ; R13 := 2.000000
 78 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 79 [-]: GETTABLE  R11 R0 K25   ; R82 := R11[0xfe8039a9]
 80 [-]: CALL      R11 1 2      ; R11 := R11()
 81 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 102
 82 [-]: JMP       102          ; PC := 102
 83 [-]: GETTABLE  R10 R0 K26   ; R10 := R0["mIsConnected"]
 84 [-]: TEST      R10 0        ; if not R10 then PC := 90
 85 [-]: JMP       90           ; PC := 90
 86 [-]: SELF      R10 R7 K27   ; R11 := R7; R10 := R7[0x3d07d47d]
 87 [-]: MOVE      R12 R2       ; R12 := R2
 88 [-]: CALL      R10 3 1      ; R10(R11,R12)
 89 [-]: JMP       102          ; PC := 102
 90 [-]: GETUPVAL  R10 U0       ; R10 := U0
 91 [-]: GETTABLE  R10 R10 K28  ; R82 := R10[0x609b196e]
 92 [-]: GETTABLE  R11 R0 K29   ; R11 := R0["mPendingChannels"]
 93 [-]: MOVE      R12 R2       ; R12 := R2
 94 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 95 [-]: EQ        0 R10 K30    ; if R10 ~= -1.000000 then PC := 102
 96 [-]: JMP       102          ; PC := 102
 97 [-]: GETGLOBAL R10 K31      ; R10 := 0x33bdd652
 98 [-]: GETTABLE  R10 R10 K32  ; R82 := R10[0x23d5322f]
 99 [-]: GETTABLE  R11 R0 K29   ; R11 := R0["mPendingChannels"]
100 [-]: MOVE      R12 R2       ; R12 := R2
101 [-]: CALL      R10 3 1      ; R10(R11,R12)
102 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
103 [-]: GETUPVAL  R11 U1       ; R11 := U1
104 [-]: MOVE      R12 R0       ; R12 := R0
105 [-]: MOVE      R13 R2       ; R13 := R2
106 [-]: MOVE      R14 R4       ; R14 := R4
107 [-]: MOVE      R15 R3       ; R15 := R3
108 [-]: MOVE      R16 R10      ; R16 := R10
109 [-]: CALL      R11 6 2      ; R11 := R11(R12,R13,R14,R15,R16)
110 [-]: MOVE      R9 R11       ; R9 := R11
111 [-]: SELF      R11 R9 K33   ; R12 := R9; R11 := R9[0x687ae094]
112 [-]: GETTABLE  R13 R0 K34   ; R13 := R0["mWindow"]
113 [-]: GETTABLE  R13 R13 K35  ; R13 := R13["width"]
114 [-]: GETTABLE  R14 R0 K34   ; R14 := R0["mWindow"]
115 [-]: GETTABLE  R14 R14 K36  ; R14 := R14["height"]
116 [-]: CALL      R11 4 1      ; R11(R12,R13,R14)
117 [-]: GETTABLE  R11 R0 K37   ; R11 := R0["mPanelList"]
118 [-]: GETTABLE  R12 R9 K38   ; R12 := R9["mChannelName"]
119 [-]: SETTABLE  R11 R12 R9   ; R11[R12] := R9
120 [-]: NEWTABLE  R11 0 0      ; R11 := {}
121 [-]: GETGLOBAL R12 K2       ; R12 := 0x7b998233
122 [-]: GETGLOBAL R13 K39      ; R13 := mGameData
123 [-]: CALL      R12 2 2      ; R12 := R12(R13)
124 [-]: TEST      R12 1        ; if R12 then PC := 130
125 [-]: JMP       130          ; PC := 130
126 [-]: GETGLOBAL R12 K39      ; R12 := mGameData
127 [-]: SELF      R12 R12 K40  ; R13 := R12; R12 := R12[0x2c1c37d4]
128 [-]: CALL      R12 2 2      ; R12 := R12(R13)
129 [-]: MOVE      R11 R12      ; R11 := R12
130 [-]: CONST     R12 1        ; R12 := 1.000000
131 [-]: LEN       R13 R11      ; R13 := # R11
132 [-]: CONST     R14 1        ; R14 := 1.000000
133 [-]: FORPREP   R12 217      ; R12 -= R14; PC := 217
134 [-]: GETTABLE  R16 R11 R15  ; R16 := R11[R15]
135 [-]: GETTABLE  R16 R16 K41  ; R16 := R16["channel"]
136 [-]: GETGLOBAL R17 K23      ; R17 := 0x7f5022cf
137 [-]: GETTABLE  R17 R17 K24  ; R82 := R17[0x1a94c9cc]
138 [-]: MOVE      R18 R16      ; R18 := R16
139 [-]: CONST     R19 1        ; R19 := 1.000000
140 [-]: CONST     R20 1        ; R20 := 1.000000
141 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
142 [-]: EQ        1 R17 K42    ; if R17 == "#" then PC := 145
143 [-]: JMP       145          ; PC := 145
144 [-]: OP_LOADBOOL R17 0 1      ; R17 := false; PC := 145
145 [-]: OP_LOADBOOL R17 1 0      ; R17 := true
146 [-]: GETTABLE  R18 R11 R15  ; R18 := R11[R15]
147 [-]: GETTABLE  R18 R18 K43  ; R18 := R18["entries"]
148 [-]: CONST     R19 1        ; R19 := 1.000000
149 [-]: LEN       R20 R18      ; R20 := # R18
150 [-]: CONST     R21 1        ; R21 := 1.000000
151 [-]: FORPREP   R19 216      ; R19 -= R21; PC := 216
152 [-]: GETGLOBAL R23 K44      ; R23 := 0xce225efa
153 [-]: CONST     R24 0        ; R24 := 0.000000
154 [-]: CALL      R23 2 1      ; R23(R24)
155 [-]: GETTABLE  R23 R18 R22  ; R23 := R18[R22]
156 [-]: GETTABLE  R23 R23 K45  ; R23 := R23["timeStamp"]
157 [-]: GETTABLE  R24 R18 R22  ; R24 := R18[R22]
158 [-]: GETTABLE  R24 R24 K46  ; R24 := R24["content"]
159 [-]: EQ        0 R23 K11    ; if R23 ~= nil then PC := 162
160 [-]: JMP       162          ; PC := 162
161 [-]: LOADK     R23 K47      ; R23 := ""
162 [-]: TEST      R17 1        ; if R17 then PC := 168
163 [-]: JMP       168          ; PC := 168
164 [-]: GETTABLE  R25 R18 R22  ; R25 := R18[R22]
165 [-]: GETTABLE  R25 R25 K48  ; R25 := R25["source"]
166 [-]: EQ        0 R25 K47    ; if R25 ~= "" then PC := 180
167 [-]: JMP       180          ; PC := 180
168 [-]: SELF      R25 R9 K49   ; R26 := R9; R25 := R9[0xf88a689b]
169 [-]: GETTABLE  R27 R18 R22  ; R27 := R18[R22]
170 [-]: GETTABLE  R27 R27 K48  ; R27 := R27["source"]
171 [-]: MOVE      R28 R16      ; R28 := R16
172 [-]: MOVE      R29 R24      ; R29 := R24
173 [-]: MOVE      R30 R23      ; R30 := R23
174 [-]: OP_LOADBOOL R31 1 0      ; R31 := true
175 [-]: OP_LOADBOOL R32 1 0      ; R32 := true
176 [-]: GETTABLE  R33 R18 R22  ; R33 := R18[R22]
177 [-]: GETTABLE  R33 R33 K50  ; R33 := R33["userType"]
178 [-]: CALL      R25 9 1      ; R25(R26,R27,R28,R29,R30,R31,R32,R33)
179 [-]: JMP       216          ; PC := 216
180 [-]: GETGLOBAL R25 K51      ; R25 := 0x015284cd
181 [-]: LOADK     R26 K52      ; R26 := ","
182 [-]: MOVE      R27 R16      ; R27 := R16
183 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
184 [-]: EQ        1 R25 K11    ; if R25 == nil then PC := 216
185 [-]: JMP       216          ; PC := 216
186 [-]: LEN       R26 R25      ; R26 := # R25
187 [-]: EQ        0 R26 K53    ; if R26 ~= 2.000000 then PC := 216
188 [-]: JMP       216          ; PC := 216
189 [-]: GETTABLE  R26 R0 K25   ; R82 := R26[0xfe8039a9]
190 [-]: CALL      R26 1 2      ; R26 := R26()
191 [-]: GETTABLE  R27 R25 K7   ; R27 := R25[1.000000]
192 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
193 [-]: GETTABLE  R27 R9 K38   ; R27 := R9["mChannelName"]
194 [-]: EQ        1 R26 R27    ; if R26 == R27 then PC := 203
195 [-]: JMP       203          ; PC := 203
196 [-]: GETTABLE  R26 R0 K25   ; R82 := R26[0xfe8039a9]
197 [-]: CALL      R26 1 2      ; R26 := R26()
198 [-]: GETTABLE  R27 R25 K53  ; R27 := R25[2.000000]
199 [-]: CONCAT    R26 R26 R27  ; R26 := R26 .. R27
200 [-]: GETTABLE  R27 R9 K38   ; R27 := R9["mChannelName"]
201 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 216
202 [-]: JMP       216          ; PC := 216
203 [-]: SELF      R26 R9 K54   ; R27 := R9; R26 := R9[0x566ff49e]
204 [-]: GETTABLE  R28 R18 R22  ; R28 := R18[R22]
205 [-]: GETTABLE  R28 R28 K48  ; R28 := R28["source"]
206 [-]: LOADK     R29 K55      ; R29 := ": "
207 [-]: MOVE      R30 R24      ; R30 := R24
208 [-]: CONCAT    R28 R28 R30  ; R28 := R28 .. R29 .. R30
209 [-]: GETTABLE  R29 R9 K56   ; R29 := R9["MESSAGE_TYPE_FRIEND"]
210 [-]: MOVE      R30 R23      ; R30 := R23
211 [-]: OP_LOADBOOL R31 0 0      ; R31 := false
212 [-]: OP_LOADBOOL R32 1 0      ; R32 := true
213 [-]: GETTABLE  R33 R18 R22  ; R33 := R18[R22]
214 [-]: GETTABLE  R33 R33 K48  ; R33 := R33["source"]
215 [-]: CALL      R26 8 1      ; R26(R27,R28,R29,R30,R31,R32,R33)
216 [-]: FORLOOP   R19 152      ; R19 += R21; if R19 <= R20 then begin PC := 152; R22 := R19 end
217 [-]: FORLOOP   R12 134      ; R12 += R14; if R12 <= R13 then begin PC := 134; R15 := R12 end
218 [-]: GETGLOBAL R26 K57      ; R26 := 0x34291f5c
219 [-]: GETTABLE  R26 R26 K58  ; R82 := R26[0x056bfe8b]
220 [-]: CALL      R26 1 2      ; R26 := R26()
221 [-]: TEST      R26 0        ; if not R26 then PC := 269
222 [-]: JMP       269          ; PC := 269
223 [-]: GETUPVAL  R26 U2       ; R26 := U2
224 [-]: CALL      R26 1 2      ; R26 := R26()
225 [-]: TEST      R26 0        ; if not R26 then PC := 269
226 [-]: JMP       269          ; PC := 269
227 [-]: GETGLOBAL R26 K57      ; R26 := 0x34291f5c
228 [-]: GETTABLE  R26 R26 K59  ; R82 := R26[0x9ad21ae9]
229 [-]: CALL      R26 1 2      ; R26 := R26()
230 [-]: TEST      R26 0        ; if not R26 then PC := 243
231 [-]: JMP       243          ; PC := 243
232 [-]: SELF      R26 R9 K54   ; R27 := R9; R26 := R9[0x566ff49e]
233 [-]: GETGLOBAL R28 K60      ; R28 := 0xae91e43b
234 [-]: SELF      R28 R28 K61  ; R29 := R28; R28 := R28[0x42b04007]
235 [-]: LOADK     R30 K62      ; R30 := "/Lotus/Language/Menu/SocialOverlay_ContentRestriction_XBone"
236 [-]: OP_LOADBOOL R31 0 0      ; R31 := false
237 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
238 [-]: GETTABLE  R29 R9 K63   ; R29 := R9["MESSAGE_TYPE_BROADCAST"]
239 [-]: LOADK     R30 K47      ; R30 := ""
240 [-]: OP_LOADBOOL R31 1 0      ; R31 := true
241 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
242 [-]: JMP       269          ; PC := 269
243 [-]: GETGLOBAL R26 K57      ; R26 := 0x34291f5c
244 [-]: GETTABLE  R26 R26 K64  ; R82 := R26[0xc84fa15a]
245 [-]: CALL      R26 1 2      ; R26 := R26()
246 [-]: TEST      R26 0        ; if not R26 then PC := 259
247 [-]: JMP       259          ; PC := 259
248 [-]: SELF      R26 R9 K54   ; R27 := R9; R26 := R9[0x566ff49e]
249 [-]: GETGLOBAL R28 K60      ; R28 := 0xae91e43b
250 [-]: SELF      R28 R28 K61  ; R29 := R28; R28 := R28[0x42b04007]
251 [-]: LOADK     R30 K65      ; R30 := "/Lotus/Language/Menu/SocialOverlay_ContentRestriction_Switch"
252 [-]: OP_LOADBOOL R31 0 0      ; R31 := false
253 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
254 [-]: GETTABLE  R29 R9 K63   ; R29 := R9["MESSAGE_TYPE_BROADCAST"]
255 [-]: LOADK     R30 K47      ; R30 := ""
256 [-]: OP_LOADBOOL R31 1 0      ; R31 := true
257 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
258 [-]: JMP       269          ; PC := 269
259 [-]: SELF      R26 R9 K54   ; R27 := R9; R26 := R9[0x566ff49e]
260 [-]: GETGLOBAL R28 K60      ; R28 := 0xae91e43b
261 [-]: SELF      R28 R28 K61  ; R29 := R28; R28 := R28[0x42b04007]
262 [-]: LOADK     R30 K66      ; R30 := "/Lotus/Language/Menu/SocialOverlay_ContentRestriction"
263 [-]: OP_LOADBOOL R31 0 0      ; R31 := false
264 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
265 [-]: GETTABLE  R29 R9 K63   ; R29 := R9["MESSAGE_TYPE_BROADCAST"]
266 [-]: LOADK     R30 K47      ; R30 := ""
267 [-]: OP_LOADBOOL R31 1 0      ; R31 := true
268 [-]: CALL      R26 6 1      ; R26(R27,R28,R29,R30,R31)
269 [-]: SELF      R26 R0 K67   ; R27 := R0; R26 := R0[0xb9fd7a94]
270 [-]: MOVE      R28 R3       ; R28 := R3
271 [-]: GETTABLE  R29 R9 K38   ; R29 := R9["mChannelName"]
272 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
273 [-]: GETTABLE  R27 R0 K37   ; R27 := R0["mPanelList"]
274 [-]: GETTABLE  R28 R9 K38   ; R28 := R9["mChannelName"]
275 [-]: GETTABLE  R27 R27 R28  ; R27 := R27[R28]
276 [-]: SETTABLE  R27 K68 R26  ; R27["mTabElement"] := R26
277 [-]: GETGLOBAL R27 K69      ; R27 := 0x76ea806b
278 [-]: SELF      R27 R27 K70  ; R28 := R27; R27 := R27[0x3f3ae64c]
279 [-]: CONST     R29 0        ; R29 := 0.000000
280 [-]: CALL      R27 3 2      ; R27 := R27(R28,R29)
281 [-]: SELF      R28 R27 K71  ; R29 := R27; R28 := R27[0xfe6131c3]
282 [-]: LOADK     R30 K72      ; R30 := "default_qa"
283 [-]: CALL      R28 3 2      ; R28 := R28(R29,R30)
284 [-]: TEST      R28 0        ; if not R28 then PC := 335
285 [-]: JMP       335          ; PC := 335
286 [-]: GETGLOBAL R28 K2       ; R28 := 0x7b998233
287 [-]: SELF      R29 R0 K73   ; R30 := R0; R29 := R0[0x8b75da5a]
288 [-]: CALL      R29 2 0      ; R29,... := R29(R30)
289 [-]: CALL      R28 0 2      ; R28 := R28(R29,...)
290 [-]: TEST      R28 0        ; if not R28 then PC := 306
291 [-]: JMP       306          ; PC := 306
292 [-]: GETTABLE  R28 R9 K74   ; R28 := R9["mChannelType"]
293 [-]: GETGLOBAL R29 K34      ; R29 := mWindow
294 [-]: GETTABLE  R29 R29 K19  ; R29 := R29["CHANNEL_QA"]
295 [-]: EQ        1 R28 R29    ; if R28 == R29 then PC := 300
296 [-]: JMP       300          ; PC := 300
297 [-]: GETGLOBAL R28 K75      ; R28 := mEnableQAChat
298 [-]: TEST      R28 1        ; if R28 then PC := 537
299 [-]: JMP       537          ; PC := 537
300 [-]: SELF      R28 R0 K76   ; R29 := R0; R28 := R0[0x46610c50]
301 [-]: GETTABLE  R30 R0 K37   ; R30 := R0["mPanelList"]
302 [-]: GETTABLE  R31 R9 K38   ; R31 := R9["mChannelName"]
303 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
304 [-]: CALL      R28 3 1      ; R28(R29,R30)
305 [-]: JMP       537          ; PC := 537
306 [-]: GETUPVAL  R28 U3       ; R28 := U3
307 [-]: CALL      R28 1 2      ; R28 := R28()
308 [-]: TEST      R28 1        ; if R28 then PC := 325
309 [-]: JMP       325          ; PC := 325
310 [-]: TEST      R5 1         ; if R5 then PC := 325
311 [-]: JMP       325          ; PC := 325
312 [-]: GETTABLE  R28 R0 K77   ; R28 := R0["mActivePanelName"]
313 [-]: EQ        0 R28 K47    ; if R28 ~= "" then PC := 325
314 [-]: JMP       325          ; PC := 325
315 [-]: GETGLOBAL R28 K78      ; R28 := 0x0032441c
316 [-]: GETTABLE  R28 R28 K79  ; R28 := R28["StalkerMode"]
317 [-]: TEST      R28 1        ; if R28 then PC := 325
318 [-]: JMP       325          ; PC := 325
319 [-]: SELF      R28 R0 K76   ; R29 := R0; R28 := R0[0x46610c50]
320 [-]: GETTABLE  R30 R0 K37   ; R30 := R0["mPanelList"]
321 [-]: GETTABLE  R31 R9 K38   ; R31 := R9["mChannelName"]
322 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
323 [-]: CALL      R28 3 1      ; R28(R29,R30)
324 [-]: JMP       537          ; PC := 537
325 [-]: GETGLOBAL R28 K34      ; R28 := mWindow
326 [-]: SELF      R28 R28 K80  ; R29 := R28; R28 := R28[0xcbf89887]
327 [-]: GETGLOBAL R30 K34      ; R30 := mWindow
328 [-]: GETTABLE  R30 R30 K34  ; R30 := R30["mWindow"]
329 [-]: GETTABLE  R30 R30 K35  ; R30 := R30["width"]
330 [-]: GETGLOBAL R31 K34      ; R31 := mWindow
331 [-]: GETTABLE  R31 R31 K34  ; R31 := R31["mWindow"]
332 [-]: GETTABLE  R31 R31 K36  ; R31 := R31["height"]
333 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
334 [-]: JMP       537          ; PC := 537
335 [-]: GETUPVAL  R28 U3       ; R28 := U3
336 [-]: CALL      R28 1 2      ; R28 := R28()
337 [-]: TEST      R28 1        ; if R28 then PC := 354
338 [-]: JMP       354          ; PC := 354
339 [-]: TEST      R5 1         ; if R5 then PC := 354
340 [-]: JMP       354          ; PC := 354
341 [-]: GETTABLE  R28 R0 K77   ; R28 := R0["mActivePanelName"]
342 [-]: EQ        0 R28 K47    ; if R28 ~= "" then PC := 354
343 [-]: JMP       354          ; PC := 354
344 [-]: GETGLOBAL R28 K78      ; R28 := 0x0032441c
345 [-]: GETTABLE  R28 R28 K79  ; R28 := R28["StalkerMode"]
346 [-]: TEST      R28 1        ; if R28 then PC := 354
347 [-]: JMP       354          ; PC := 354
348 [-]: SELF      R28 R0 K76   ; R29 := R0; R28 := R0[0x46610c50]
349 [-]: GETTABLE  R30 R0 K37   ; R30 := R0["mPanelList"]
350 [-]: GETTABLE  R31 R9 K38   ; R31 := R9["mChannelName"]
351 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
352 [-]: CALL      R28 3 1      ; R28(R29,R30)
353 [-]: JMP       537          ; PC := 537
354 [-]: GETGLOBAL R28 K34      ; R28 := mWindow
355 [-]: SELF      R28 R28 K80  ; R29 := R28; R28 := R28[0xcbf89887]
356 [-]: GETGLOBAL R30 K34      ; R30 := mWindow
357 [-]: GETTABLE  R30 R30 K34  ; R30 := R30["mWindow"]
358 [-]: GETTABLE  R30 R30 K35  ; R30 := R30["width"]
359 [-]: GETGLOBAL R31 K34      ; R31 := mWindow
360 [-]: GETTABLE  R31 R31 K34  ; R31 := R31["mWindow"]
361 [-]: GETTABLE  R31 R31 K36  ; R31 := R31["height"]
362 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
363 [-]: JMP       537          ; PC := 537
364 [-]: MOVE      R28 R2       ; R28 := R2
365 [-]: GETGLOBAL R29 K23      ; R29 := 0x7f5022cf
366 [-]: GETTABLE  R29 R29 K81  ; R82 := R29[0xa5c556b9]
367 [-]: MOVE      R30 R28      ; R30 := R28
368 [-]: LOADK     R31 K42      ; R31 := "#"
369 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
370 [-]: EQ        1 R29 K11    ; if R29 == nil then PC := 379
371 [-]: JMP       379          ; PC := 379
372 [-]: GETGLOBAL R29 K23      ; R29 := 0x7f5022cf
373 [-]: GETTABLE  R29 R29 K24  ; R82 := R29[0x1a94c9cc]
374 [-]: MOVE      R30 R28      ; R30 := R28
375 [-]: CONST     R31 2        ; R31 := 2.000000
376 [-]: CONST     R32 -1       ; R32 := -1.000000
377 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
378 [-]: MOVE      R28 R29      ; R28 := R29
379 [-]: GETTABLE  R29 R0 K77   ; R29 := R0["mActivePanelName"]
380 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 403
381 [-]: JMP       403          ; PC := 403
382 [-]: GETGLOBAL R29 K2       ; R29 := 0x7b998233
383 [-]: GETTABLE  R30 R0 K37   ; R30 := R0["mPanelList"]
384 [-]: GETTABLE  R31 R0 K82   ; R31 := R0["mPrevPanelName"]
385 [-]: GETTABLE  R30 R30 R31  ; R30 := R30[R31]
386 [-]: CALL      R29 2 2      ; R29 := R29(R30)
387 [-]: TEST      R29 1        ; if R29 then PC := 395
388 [-]: JMP       395          ; PC := 395
389 [-]: SELF      R29 R0 K76   ; R30 := R0; R29 := R0[0x46610c50]
390 [-]: GETTABLE  R31 R0 K37   ; R31 := R0["mPanelList"]
391 [-]: GETTABLE  R32 R0 K82   ; R32 := R0["mPrevPanelName"]
392 [-]: GETTABLE  R31 R31 R32  ; R31 := R31[R32]
393 [-]: CALL      R29 3 1      ; R29(R30,R31)
394 [-]: JMP       399          ; PC := 399
395 [-]: SELF      R29 R0 K83   ; R30 := R0; R29 := R0[0xa5a346c9]
396 [-]: GETUPVAL  R31 U0       ; R31 := U0
397 [-]: GETTABLE  R31 R31 K84  ; R31 := R31["INCREMENT"]
398 [-]: CALL      R29 3 1      ; R29(R30,R31)
399 [-]: GETTABLE  R29 R0 K77   ; R29 := R0["mActivePanelName"]
400 [-]: EQ        0 R28 R29    ; if R28 ~= R29 then PC := 403
401 [-]: JMP       403          ; PC := 403
402 [-]: SETTABLE  R0 K77 K47   ; R0["mActivePanelName"] := ""
403 [-]: GETTABLE  R29 R0 K37   ; R29 := R0["mPanelList"]
404 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
405 [-]: EQ        1 R29 K11    ; if R29 == nil then PC := 414
406 [-]: JMP       414          ; PC := 414
407 [-]: GETTABLE  R29 R0 K85   ; R29 := R0["mPanelShortcuts"]
408 [-]: GETTABLE  R30 R0 K37   ; R30 := R0["mPanelList"]
409 [-]: GETTABLE  R30 R30 R28  ; R30 := R30[R28]
410 [-]: GETTABLE  R30 R30 K74  ; R30 := R30["mChannelType"]
411 [-]: SETTABLE  R29 R30 K11  ; R29[R30] := nil
412 [-]: GETTABLE  R29 R0 K37   ; R29 := R0["mPanelList"]
413 [-]: SETTABLE  R29 R28 K11  ; R29[R28] := nil
414 [-]: SELF      R29 R0 K86   ; R30 := R0; R29 := R0[0xa0a0ed09]
415 [-]: MOVE      R31 R2       ; R31 := R2
416 [-]: MOVE      R32 R6       ; R32 := R6
417 [-]: CALL      R29 4 1      ; R29(R30,R31,R32)
418 [-]: GETGLOBAL R29 K23      ; R29 := 0x7f5022cf
419 [-]: GETTABLE  R29 R29 K81  ; R82 := R29[0xa5c556b9]
420 [-]: MOVE      R30 R2       ; R30 := R2
421 [-]: LOADK     R31 K42      ; R31 := "#"
422 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
423 [-]: EQ        0 R29 K11    ; if R29 ~= nil then PC := 428
424 [-]: JMP       428          ; PC := 428
425 [-]: LOADK     R29 K42      ; R29 := "#"
426 [-]: MOVE      R30 R2       ; R30 := R2
427 [-]: CONCAT    R2 R29 R30   ; R2 := R29 .. R30
428 [-]: GETGLOBAL R29 K23      ; R29 := 0x7f5022cf
429 [-]: GETTABLE  R29 R29 K24  ; R82 := R29[0x1a94c9cc]
430 [-]: MOVE      R30 R2       ; R30 := R2
431 [-]: CONST     R31 2        ; R31 := 2.000000
432 [-]: CONST     R32 2        ; R32 := 2.000000
433 [-]: CALL      R29 4 2      ; R29 := R29(R30,R31,R32)
434 [-]: GETTABLE  R30 R0 K87   ; R82 := R30[0x9729efeb]
435 [-]: MOVE      R31 R0       ; R31 := R0
436 [-]: CALL      R30 2 2      ; R30 := R30(R31)
437 [-]: EQ        1 R29 R30    ; if R29 == R30 then PC := 440
438 [-]: JMP       440          ; PC := 440
439 [-]: OP_LOADBOOL R29 0 1      ; R29 := false; PC := 440
440 [-]: OP_LOADBOOL R29 1 0      ; R29 := true
441 [-]: GETGLOBAL R30 K23      ; R30 := 0x7f5022cf
442 [-]: GETTABLE  R30 R30 K24  ; R82 := R30[0x1a94c9cc]
443 [-]: MOVE      R31 R2       ; R31 := R2
444 [-]: CONST     R32 2        ; R32 := 2.000000
445 [-]: CONST     R33 2        ; R33 := 2.000000
446 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
447 [-]: GETTABLE  R31 R0 K25   ; R82 := R31[0xfe8039a9]
448 [-]: CALL      R31 1 2      ; R31 := R31()
449 [-]: EQ        1 R30 R31    ; if R30 == R31 then PC := 456
450 [-]: JMP       456          ; PC := 456
451 [-]: TEST      R29 1        ; if R29 then PC := 456
452 [-]: JMP       456          ; PC := 456
453 [-]: SELF      R30 R7 K88   ; R31 := R7; R30 := R7[0xba30dacc]
454 [-]: MOVE      R32 R2       ; R32 := R2
455 [-]: CALL      R30 3 1      ; R30(R31,R32)
456 [-]: TEST      R29 0        ; if not R29 then PC := 463
457 [-]: JMP       463          ; PC := 463
458 [-]: GETTABLE  R30 R0 K89   ; R30 := R0["mIsScenarioChannel"]
459 [-]: TEST      R30 0        ; if not R30 then PC := 463
460 [-]: JMP       463          ; PC := 463
461 [-]: SETTABLE  R0 K89 K90   ; R0["mIsScenarioChannel"] := false
462 [-]: SETTABLE  R0 K91 K90   ; R0["mCachedPersistentRelayHubActive"] := false
463 [-]: GETTABLE  R30 R0 K13   ; R30 := R0["CHANNEL_GLOBAL"]
464 [-]: EQ        0 R4 R30     ; if R4 ~= R30 then PC := 471
465 [-]: JMP       471          ; PC := 471
466 [-]: GETTABLE  R30 R0 K14   ; R30 := R0["mPendingGlobalChannelName"]
467 [-]: EQ        1 R30 K11    ; if R30 == nil then PC := 471
468 [-]: JMP       471          ; PC := 471
469 [-]: SETTABLE  R0 K14 K11   ; R0["mPendingGlobalChannelName"] := nil
470 [-]: JMP       502          ; PC := 502
471 [-]: GETTABLE  R30 R0 K15   ; R30 := R0["CHANNEL_RECRUITING"]
472 [-]: EQ        0 R4 R30     ; if R4 ~= R30 then PC := 479
473 [-]: JMP       479          ; PC := 479
474 [-]: GETTABLE  R30 R0 K16   ; R30 := R0["mPendingRecruitingChannelName"]
475 [-]: EQ        1 R30 K11    ; if R30 == nil then PC := 479
476 [-]: JMP       479          ; PC := 479
477 [-]: SETTABLE  R0 K16 K11   ; R0["mPendingRecruitingChannelName"] := nil
478 [-]: JMP       502          ; PC := 502
479 [-]: GETTABLE  R30 R0 K17   ; R30 := R0["CHANNEL_TRADE"]
480 [-]: EQ        0 R4 R30     ; if R4 ~= R30 then PC := 487
481 [-]: JMP       487          ; PC := 487
482 [-]: GETTABLE  R30 R0 K18   ; R30 := R0["mPendingTradeChannelName"]
483 [-]: EQ        1 R30 K11    ; if R30 == nil then PC := 487
484 [-]: JMP       487          ; PC := 487
485 [-]: SETTABLE  R0 K18 K11   ; R0["mPendingTradeChannelName"] := nil
486 [-]: JMP       502          ; PC := 502
487 [-]: GETTABLE  R30 R0 K19   ; R30 := R0["CHANNEL_QA"]
488 [-]: EQ        0 R4 R30     ; if R4 ~= R30 then PC := 495
489 [-]: JMP       495          ; PC := 495
490 [-]: GETTABLE  R30 R0 K20   ; R30 := R0["mPendingQAChannelName"]
491 [-]: EQ        1 R30 K11    ; if R30 == nil then PC := 495
492 [-]: JMP       495          ; PC := 495
493 [-]: SETTABLE  R0 K20 K11   ; R0["mPendingQAChannelName"] := nil
494 [-]: JMP       502          ; PC := 502
495 [-]: GETTABLE  R30 R0 K21   ; R30 := R0["CHANNEL_COUNCIL"]
496 [-]: EQ        0 R4 R30     ; if R4 ~= R30 then PC := 502
497 [-]: JMP       502          ; PC := 502
498 [-]: GETTABLE  R30 R0 K22   ; R30 := R0["mPendingCouncilChannelName"]
499 [-]: EQ        1 R30 K11    ; if R30 == nil then PC := 502
500 [-]: JMP       502          ; PC := 502
501 [-]: SETTABLE  R0 K22 K11   ; R0["mPendingCouncilChannelName"] := nil
502 [-]: GETUPVAL  R30 U0       ; R30 := U0
503 [-]: GETTABLE  R30 R30 K28  ; R82 := R30[0x609b196e]
504 [-]: GETTABLE  R31 R0 K29   ; R31 := R0["mPendingChannels"]
505 [-]: MOVE      R32 R2       ; R32 := R2
506 [-]: CALL      R30 3 2      ; R30 := R30(R31,R32)
507 [-]: EQ        0 R30 K30    ; if R30 ~= -1.000000 then PC := 514
508 [-]: JMP       514          ; PC := 514
509 [-]: GETGLOBAL R31 K31      ; R31 := 0x33bdd652
510 [-]: GETTABLE  R31 R31 K92  ; R82 := R31[0x9c1f3b5a]
511 [-]: GETTABLE  R32 R0 K29   ; R32 := R0["mPendingChannels"]
512 [-]: MOVE      R33 R30      ; R33 := R30
513 [-]: CALL      R31 3 1      ; R31(R32,R33)
514 [-]: GETTABLE  R31 R0 K77   ; R31 := R0["mActivePanelName"]
515 [-]: EQ        0 R31 K47    ; if R31 ~= "" then PC := 537
516 [-]: JMP       537          ; PC := 537
517 [-]: GETGLOBAL R31 K2       ; R31 := 0x7b998233
518 [-]: GETTABLE  R32 R0 K93   ; R32 := R0["mUserPanel"]
519 [-]: CALL      R31 2 2      ; R31 := R31(R32)
520 [-]: TEST      R31 1        ; if R31 then PC := 531
521 [-]: JMP       531          ; PC := 531
522 [-]: GETTABLE  R31 R0 K93   ; R31 := R0["mUserPanel"]
523 [-]: SELF      R31 R31 K94  ; R32 := R31; R31 := R31[0xf596420f]
524 [-]: CALL      R31 2 1      ; R31(R32)
525 [-]: GETGLOBAL R31 K60      ; R31 := 0xae91e43b
526 [-]: SELF      R31 R31 K95  ; R32 := R31; R31 := R31[0x5f56eeab]
527 [-]: LOADK     R33 K96      ; R33 := "Window.SendMessageBar.Prompt"
528 [-]: CONST     R34 29       ; R34 := 29.000000
529 [-]: LOADK     R35 K47      ; R35 := ""
530 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
531 [-]: GETGLOBAL R31 K60      ; R31 := 0xae91e43b
532 [-]: SELF      R31 R31 K95  ; R32 := R31; R31 := R31[0x5f56eeab]
533 [-]: LOADK     R33 K97      ; R33 := "Window.TabbedChatPanel.ChatArea"
534 [-]: CONST     R34 29       ; R34 := 29.000000
535 [-]: LOADK     R35 K47      ; R35 := ""
536 [-]: CALL      R31 5 1      ; R31(R32,R33,R34,R35)
537 [-]: RETURN    R9 2         ; return R9
538 [-]: RETURN    R0 1         ; return 


; Function #121.37:
;
; Name:            
; Defined at line: 7679
; #Upvalues:       3
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  45

  1 [-]: EQ        0 R1 K0      ; if R1 ~= "" then PC := 153
  2 [-]: JMP       153          ; PC := 153
  3 [-]: GETGLOBAL R3 K1        ; R3 := 0xcfc01047
  4 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mPanelList"]
  5 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
  6 [-]: JMP       18           ; PC := 18
  7 [-]: GETGLOBAL R8 K3        ; R8 := 0x7b998233
  8 [-]: MOVE      R9 R7        ; R9 := R7
  9 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 10 [-]: TEST      R8 1         ; if R8 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: SELF      R8 R7 K4     ; R9 := R7; R8 := R7[0xf88a689b]
 13 [-]: LOADK     R10 K0       ; R10 := ""
 14 [-]: LOADK     R11 K0       ; R11 := ""
 15 [-]: MOVE      R12 R2       ; R12 := R2
 16 [-]: LOADK     R13 K0       ; R13 := ""
 17 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 18 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 7; R5 := R6 end
 19 [-]: JMP       7            ; PC := 7
 20 [-]: GETGLOBAL R8 K5        ; R8 := 0x83e41587
 21 [-]: MOVE      R9 R2        ; R9 := R2
 22 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 23 [-]: GETGLOBAL R9 K6        ; R9 := 0x7f5022cf
 24 [-]: GETTABLE  R9 R9 K7     ; R82 := R9[0x348c01f7]
 25 [-]: MOVE      R10 R8       ; R10 := R8
 26 [-]: LOADK     R11 K8       ; R11 := "hotfix.*(%d+)%s*minute"
 27 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
 28 [-]: EQ        0 R9 K9      ; if R9 ~= nil then PC := 36
 29 [-]: JMP       36           ; PC := 36
 30 [-]: GETGLOBAL R10 K6       ; R10 := 0x7f5022cf
 31 [-]: GETTABLE  R10 R10 K7   ; R82 := R10[0x348c01f7]
 32 [-]: MOVE      R11 R8       ; R11 := R8
 33 [-]: LOADK     R12 K10      ; R12 := "update.*(%d+)%s*minute"
 34 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 35 [-]: MOVE      R9 R10       ; R9 := R10
 36 [-]: GETGLOBAL R10 K6       ; R10 := 0x7f5022cf
 37 [-]: GETTABLE  R10 R10 K7   ; R82 := R10[0x348c01f7]
 38 [-]: MOVE      R11 R8       ; R11 := R8
 39 [-]: LOADK     R12 K11      ; R12 := "deploy.*%s.*remain"
 40 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 41 [-]: EQ        0 R10 K9     ; if R10 ~= nil then PC := 51
 42 [-]: JMP       51           ; PC := 51
 43 [-]: GETGLOBAL R10 K6       ; R10 := 0x7f5022cf
 44 [-]: GETTABLE  R10 R10 K7   ; R82 := R10[0x348c01f7]
 45 [-]: MOVE      R11 R8       ; R11 := R8
 46 [-]: LOADK     R12 K12      ; R12 := "deploy.*%s.*stay"
 47 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
 48 [-]: EQ        0 R10 K9     ; if R10 ~= nil then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: OP_LOADBOOL R10 0 1      ; R10 := false; PC := 51
 51 [-]: OP_LOADBOOL R10 1 0      ; R10 := true
 52 [-]: GETGLOBAL R11 K6       ; R11 := 0x7f5022cf
 53 [-]: GETTABLE  R11 R11 K7   ; R82 := R11[0x348c01f7]
 54 [-]: MOVE      R12 R8       ; R12 := R8
 55 [-]: LOADK     R13 K13      ; R13 := "deploy.*%s.*restart"
 56 [-]: CALL      R11 3 2      ; R11 := R11(R12,R13)
 57 [-]: EQ        0 R11 K9     ; if R11 ~= nil then PC := 60
 58 [-]: JMP       60           ; PC := 60
 59 [-]: OP_LOADBOOL R11 0 1      ; R11 := false; PC := 60
 60 [-]: OP_LOADBOOL R11 1 0      ; R11 := true
 61 [-]: GETGLOBAL R12 K14      ; R12 := _T
 62 [-]: GETTABLE  R12 R12 K15  ; R12 := R12["ShowNotification"]
 63 [-]: EQ        1 R12 K9     ; if R12 == nil then PC := 400
 64 [-]: JMP       400          ; PC := 400
 65 [-]: TEST      R10 1        ; if R10 then PC := 71
 66 [-]: JMP       71           ; PC := 71
 67 [-]: TEST      R11 1        ; if R11 then PC := 71
 68 [-]: JMP       71           ; PC := 71
 69 [-]: EQ        1 R9 K9      ; if R9 == nil then PC := 400
 70 [-]: JMP       400          ; PC := 400
 71 [-]: GETGLOBAL R12 K6       ; R12 := 0x7f5022cf
 72 [-]: GETTABLE  R12 R12 K7   ; R82 := R12[0x348c01f7]
 73 [-]: MOVE      R13 R8       ; R13 := R8
 74 [-]: LOADK     R14 K16      ; R14 := "updat"
 75 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
 76 [-]: EQ        0 R12 K9     ; if R12 ~= nil then PC := 79
 77 [-]: JMP       79           ; PC := 79
 78 [-]: OP_LOADBOOL R12 0 1      ; R12 := false; PC := 79
 79 [-]: OP_LOADBOOL R12 1 0      ; R12 := true
 80 [-]: LOADK     R13 K0       ; R13 := ""
 81 [-]: CONST     R14 10       ; R14 := 10.000000
 82 [-]: OP_LOADBOOL R15 0 0      ; R15 := false
 83 [-]: TEST      R10 0        ; if not R10 then PC := 102
 84 [-]: JMP       102          ; PC := 102
 85 [-]: TEST      R12 0        ; if not R12 then PC := 94
 86 [-]: JMP       94           ; PC := 94
 87 [-]: GETGLOBAL R16 K17      ; R16 := 0xae91e43b
 88 [-]: SELF      R16 R16 K18  ; R17 := R16; R16 := R16[0x42b04007]
 89 [-]: LOADK     R18 K19      ; R18 := "/Lotus/Language/Menu/Notification_UpdateDeploying"
 90 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
 91 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 92 [-]: MOVE      R13 R16      ; R13 := R16
 93 [-]: JMP       100          ; PC := 100
 94 [-]: GETGLOBAL R16 K17      ; R16 := 0xae91e43b
 95 [-]: SELF      R16 R16 K18  ; R17 := R16; R16 := R16[0x42b04007]
 96 [-]: LOADK     R18 K20      ; R18 := "/Lotus/Language/Menu/Notification_HotfixDeploying"
 97 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
 98 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
 99 [-]: MOVE      R13 R16      ; R13 := R16
100 [-]: CONST     R14 600      ; R14 := 600.000000
101 [-]: JMP       142          ; PC := 142
102 [-]: TEST      R11 0        ; if not R11 then PC := 112
103 [-]: JMP       112          ; PC := 112
104 [-]: GETGLOBAL R16 K17      ; R16 := 0xae91e43b
105 [-]: SELF      R16 R16 K18  ; R17 := R16; R16 := R16[0x42b04007]
106 [-]: LOADK     R18 K21      ; R18 := "/Lotus/Language/Menu/Notification_PatchDeployed"
107 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
108 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
109 [-]: MOVE      R13 R16      ; R13 := R16
110 [-]: OP_LOADBOOL R15 1 0      ; R15 := true
111 [-]: JMP       142          ; PC := 142
112 [-]: TEST      R12 0        ; if not R12 then PC := 123
113 [-]: JMP       123          ; PC := 123
114 [-]: GETGLOBAL R16 K17      ; R16 := 0xae91e43b
115 [-]: SELF      R16 R16 K18  ; R17 := R16; R16 := R16[0x42b04007]
116 [-]: LOADK     R18 K22      ; R18 := "/Lotus/Language/Menu/Notification_UpdateTimeLeft"
117 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
118 [-]: NEWTABLE  R20 0 1      ; R20 := {}
119 [-]: SETTABLE  R20 K23 R9   ; R20["TIME"] := R9
120 [-]: CALL      R16 5 2      ; R16 := R16(R17,R18,R19,R20)
121 [-]: MOVE      R13 R16      ; R13 := R16
122 [-]: JMP       142          ; PC := 142
123 [-]: LOADK     R16 K24      ; R16 := "/Lotus/Language/Menu/"
124 [-]: GETUPVAL  R17 U0       ; R17 := U0
125 [-]: GETTABLE  R17 R17 K25  ; R82 := R17[0x06d055f9]
126 [-]: EQ        1 R9 K26     ; if R9 == "1" then PC := 129
127 [-]: JMP       129          ; PC := 129
128 [-]: OP_LOADBOOL R18 0 1      ; R18 := false; PC := 129
129 [-]: OP_LOADBOOL R18 1 0      ; R18 := true
130 [-]: LOADK     R19 K27      ; R19 := "Notification_HotfixTimeLeft1Minute"
131 [-]: LOADK     R20 K28      ; R20 := "Notification_HotfixTimeLeft"
132 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
133 [-]: CONCAT    R16 R16 R17  ; R16 := R16 .. R17
134 [-]: GETGLOBAL R17 K17      ; R17 := 0xae91e43b
135 [-]: SELF      R17 R17 K18  ; R18 := R17; R17 := R17[0x42b04007]
136 [-]: MOVE      R19 R16      ; R19 := R16
137 [-]: OP_LOADBOOL R20 0 0      ; R20 := false
138 [-]: NEWTABLE  R21 0 1      ; R21 := {}
139 [-]: SETTABLE  R21 K23 R9   ; R21["TIME"] := R9
140 [-]: CALL      R17 5 2      ; R17 := R17(R18,R19,R20,R21)
141 [-]: MOVE      R13 R17      ; R13 := R17
142 [-]: GETGLOBAL R17 K14      ; R17 := _T
143 [-]: GETTABLE  R17 R17 K29  ; R82 := R17[0x7dce37bc]
144 [-]: MOVE      R18 R13      ; R18 := R13
145 [-]: LOADK     R19 K30      ; R19 := "NewBuild"
146 [-]: OP_LOADBOOL R20 1 0      ; R20 := true
147 [-]: MOVE      R21 R14      ; R21 := R14
148 [-]: GETGLOBAL R22 K31      ; R22 := 0x0032441c
149 [-]: GETTABLE  R22 R22 K32  ; R22 := R22["UIColor_Red"]
150 [-]: MOVE      R23 R15      ; R23 := R15
151 [-]: CALL      R17 7 1      ; R17(R18,R19,R20,R21,R22,R23)
152 [-]: JMP       400          ; PC := 400
153 [-]: GETGLOBAL R17 K33      ; R17 := 0x015284cd
154 [-]: LOADK     R18 K34      ; R18 := ","
155 [-]: MOVE      R19 R1       ; R19 := R1
156 [-]: CALL      R17 3 2      ; R17 := R17(R18,R19)
157 [-]: GETTABLE  R18 R17 K35  ; R18 := R17[1.000000]
158 [-]: GETTABLE  R19 R17 K36  ; R19 := R17[2.000000]
159 [-]: GETTABLE  R20 R17 K37  ; R20 := R17[3.000000]
160 [-]: GETUPVAL  R21 U0       ; R21 := U0
161 [-]: GETTABLE  R21 R21 K25  ; R82 := R21[0x06d055f9]
162 [-]: GETTABLE  R22 R17 K38  ; R22 := R17[4.000000]
163 [-]: EQ        1 R22 K9     ; if R22 == nil then PC := 166
164 [-]: JMP       166          ; PC := 166
165 [-]: OP_LOADBOOL R22 0 1      ; R22 := false; PC := 166
166 [-]: OP_LOADBOOL R22 1 0      ; R22 := true
167 [-]: CONST     R23 0        ; R23 := 0.000000
168 [-]: GETGLOBAL R24 K40      ; R24 := 0x03f57322
169 [-]: GETTABLE  R25 R17 K38  ; R25 := R17[4.000000]
170 [-]: CALL      R24 2 0      ; R24,... := R24(R25)
171 [-]: CALL      R21 0 2      ; R21 := R21(R22,...)
172 [-]: GETTABLE  R22 R17 K41  ; R22 := R17[5.000000]
173 [-]: GETGLOBAL R23 K6       ; R23 := 0x7f5022cf
174 [-]: GETTABLE  R23 R23 K42  ; R82 := R23[0x1a94c9cc]
175 [-]: MOVE      R24 R19      ; R24 := R19
176 [-]: CONST     R25 1        ; R25 := 1.000000
177 [-]: CONST     R26 1        ; R26 := 1.000000
178 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
179 [-]: EQ        1 R23 K43    ; if R23 == "#" then PC := 182
180 [-]: JMP       182          ; PC := 182
181 [-]: OP_LOADBOOL R23 0 1      ; R23 := false; PC := 182
182 [-]: OP_LOADBOOL R23 1 0      ; R23 := true
183 [-]: EQ        0 R20 K9     ; if R20 ~= nil then PC := 186
184 [-]: JMP       186          ; PC := 186
185 [-]: LOADK     R20 K0       ; R20 := ""
186 [-]: EQ        0 R18 K0     ; if R18 ~= "" then PC := 238
187 [-]: JMP       238          ; PC := 238
188 [-]: GETGLOBAL R24 K33      ; R24 := 0x015284cd
189 [-]: LOADK     R25 K34      ; R25 := ","
190 [-]: MOVE      R26 R2       ; R26 := R2
191 [-]: CONST     R27 3        ; R27 := 3.000000
192 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
193 [-]: LEN       R25 R24      ; R25 := # R24
194 [-]: LT        0 K35 R25    ; if 1.000000 >= R25 then PC := 380
195 [-]: JMP       380          ; PC := 380
196 [-]: TEST      R23 0        ; if not R23 then PC := 380
197 [-]: JMP       380          ; PC := 380
198 [-]: GETTABLE  R25 R24 K35  ; R25 := R24[1.000000]
199 [-]: EQ        0 R25 K44    ; if R25 ~= "clear" then PC := 380
200 [-]: JMP       380          ; PC := 380
201 [-]: GETTABLE  R25 R24 K36  ; R25 := R24[2.000000]
202 [-]: GETGLOBAL R26 K6       ; R26 := 0x7f5022cf
203 [-]: GETTABLE  R26 R26 K45  ; R82 := R26[0xa5c556b9]
204 [-]: MOVE      R27 R19      ; R27 := R19
205 [-]: LOADK     R28 K43      ; R28 := "#"
206 [-]: CALL      R26 3 2      ; R26 := R26(R27,R28)
207 [-]: EQ        1 R26 K9     ; if R26 == nil then PC := 214
208 [-]: JMP       214          ; PC := 214
209 [-]: SELF      R26 R19 K42  ; R27 := R19; R26 := R19[0x1a94c9cc]
210 [-]: CONST     R28 2        ; R28 := 2.000000
211 [-]: CONST     R29 -1       ; R29 := -1.000000
212 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
213 [-]: MOVE      R19 R26      ; R19 := R26
214 [-]: GETGLOBAL R26 K3       ; R26 := 0x7b998233
215 [-]: GETTABLE  R27 R0 K2    ; R27 := R0["mPanelList"]
216 [-]: GETTABLE  R27 R27 R19  ; R27 := R27[R19]
217 [-]: CALL      R26 2 2      ; R26 := R26(R27)
218 [-]: TEST      R26 1        ; if R26 then PC := 225
219 [-]: JMP       225          ; PC := 225
220 [-]: GETTABLE  R26 R0 K2    ; R26 := R0["mPanelList"]
221 [-]: GETTABLE  R26 R26 R19  ; R26 := R26[R19]
222 [-]: SELF      R26 R26 K46  ; R27 := R26; R26 := R26[0x3b4b4da2]
223 [-]: MOVE      R28 R25      ; R28 := R25
224 [-]: CALL      R26 3 1      ; R26(R27,R28)
225 [-]: LEN       R26 R24      ; R26 := # R24
226 [-]: EQ        0 R26 K37    ; if R26 ~= 3.000000 then PC := 236
227 [-]: JMP       236          ; PC := 236
228 [-]: GETTABLE  R26 R0 K47   ; R26 := R0["mUser"]
229 [-]: EQ        0 R25 R26    ; if R25 ~= R26 then PC := 236
230 [-]: JMP       236          ; PC := 236
231 [-]: GETTABLE  R26 R0 K2    ; R26 := R0["mPanelList"]
232 [-]: GETTABLE  R26 R26 R19  ; R26 := R26[R19]
233 [-]: SELF      R26 R26 K48  ; R27 := R26; R26 := R26[0xd55cad54]
234 [-]: GETTABLE  R28 R24 K37  ; R28 := R24[3.000000]
235 [-]: CALL      R26 3 1      ; R26(R27,R28)
236 [-]: RETURN    R0 1         ; return 
237 [-]: JMP       380          ; PC := 380
238 [-]: TEST      R23 1        ; if R23 then PC := 380
239 [-]: JMP       380          ; PC := 380
240 [-]: MOVE      R26 R19      ; R26 := R19
241 [-]: GETTABLE  R27 R0 K47   ; R27 := R0["mUser"]
242 [-]: EQ        0 R26 R27    ; if R26 ~= R27 then PC := 245
243 [-]: JMP       245          ; PC := 245
244 [-]: MOVE      R26 R18      ; R26 := R18
245 [-]: GETUPVAL  R27 U1       ; R27 := U1
246 [-]: MOVE      R28 R26      ; R28 := R26
247 [-]: LOADNIL   R29 R29      ; R29 := nil
248 [-]: OP_LOADBOOL R30 1 0      ; R30 := true
249 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
250 [-]: GETTABLE  R28 R0 K47   ; R28 := R0["mUser"]
251 [-]: EQ        1 R18 R28    ; if R18 == R28 then PC := 262
252 [-]: JMP       262          ; PC := 262
253 [-]: GETGLOBAL R28 K31      ; R28 := 0x0032441c
254 [-]: GETTABLE  R28 R28 K49  ; R28 := R28["mDoNotDisturb"]
255 [-]: TEST      R28 0        ; if not R28 then PC := 262
256 [-]: JMP       262          ; PC := 262
257 [-]: GETGLOBAL R28 K3       ; R28 := 0x7b998233
258 [-]: MOVE      R29 R27      ; R29 := R27
259 [-]: CALL      R28 2 2      ; R28 := R28(R29)
260 [-]: TEST      R28 1        ; if R28 then PC := 313
261 [-]: JMP       313          ; PC := 313
262 [-]: GETGLOBAL R28 K3       ; R28 := 0x7b998233
263 [-]: MOVE      R29 R27      ; R29 := R27
264 [-]: CALL      R28 2 2      ; R28 := R28(R29)
265 [-]: TEST      R28 0        ; if not R28 then PC := 297
266 [-]: JMP       297          ; PC := 297
267 [-]: EQ        1 R22 K9     ; if R22 == nil then PC := 284
268 [-]: JMP       284          ; PC := 284
269 [-]: GETUPVAL  R28 U2       ; R28 := U2
270 [-]: OP_LOADBOOL R29 1 0      ; R29 := true
271 [-]: MOVE      R30 R22      ; R30 := R22
272 [-]: LOADK     R31 K34      ; R31 := ","
273 [-]: MOVE      R32 R18      ; R32 := R18
274 [-]: CONCAT    R30 R30 R32  ; R30 := R30 .. R31 .. R32
275 [-]: OP_LOADBOOL R31 1 0      ; R31 := true
276 [-]: CALL      R28 4 1      ; R28(R29,R30,R31)
277 [-]: GETUPVAL  R28 U1       ; R28 := U1
278 [-]: MOVE      R29 R26      ; R29 := R26
279 [-]: LOADNIL   R30 R30      ; R30 := nil
280 [-]: OP_LOADBOOL R31 1 0      ; R31 := true
281 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
282 [-]: MOVE      R27 R28      ; R27 := R28
283 [-]: JMP       313          ; PC := 313
284 [-]: GETGLOBAL R28 K50      ; R28 := 0xe7f2b02f
285 [-]: SELF      R28 R28 K51  ; R29 := R28; R28 := R28[0x0b151d80]
286 [-]: CALL      R28 2 2      ; R28 := R28(R29)
287 [-]: GETGLOBAL R29 K3       ; R29 := 0x7b998233
288 [-]: MOVE      R30 R28      ; R30 := R28
289 [-]: CALL      R29 2 2      ; R29 := R29(R30)
290 [-]: TEST      R29 1        ; if R29 then PC := 313
291 [-]: JMP       313          ; PC := 313
292 [-]: SELF      R29 R28 K52  ; R30 := R28; R29 := R28[0x00dc7406]
293 [-]: MOVE      R31 R18      ; R31 := R18
294 [-]: LOADK     R32 K53      ; R32 := "PrivateConvoPlayerIDResultIncoming"
295 [-]: CALL      R29 4 1      ; R29(R30,R31,R32)
296 [-]: JMP       313          ; PC := 313
297 [-]: GETGLOBAL R29 K3       ; R29 := 0x7b998233
298 [-]: MOVE      R30 R27      ; R30 := R27
299 [-]: CALL      R29 2 2      ; R29 := R29(R30)
300 [-]: TEST      R29 1        ; if R29 then PC := 313
301 [-]: JMP       313          ; PC := 313
302 [-]: SELF      R29 R27 K54  ; R30 := R27; R29 := R27[0x566ff49e]
303 [-]: MOVE      R31 R18      ; R31 := R18
304 [-]: LOADK     R32 K55      ; R32 := ": "
305 [-]: MOVE      R33 R2       ; R33 := R2
306 [-]: CONCAT    R31 R31 R33  ; R31 := R31 .. R32 .. R33
307 [-]: GETTABLE  R32 R27 K56  ; R32 := R27["MESSAGE_TYPE_FRIEND"]
308 [-]: MOVE      R33 R20      ; R33 := R20
309 [-]: OP_LOADBOOL R34 0 0      ; R34 := false
310 [-]: OP_LOADBOOL R35 0 0      ; R35 := false
311 [-]: MOVE      R36 R18      ; R36 := R18
312 [-]: CALL      R29 8 1      ; R29(R30,R31,R32,R33,R34,R35,R36)
313 [-]: GETTABLE  R29 R0 K57   ; R29 := R0["User"]
314 [-]: EQ        1 R18 R29    ; if R18 == R29 then PC := 342
315 [-]: JMP       342          ; PC := 342
316 [-]: GETGLOBAL R29 K31      ; R29 := 0x0032441c
317 [-]: GETTABLE  R29 R29 K49  ; R29 := R29["mDoNotDisturb"]
318 [-]: TEST      R29 0        ; if not R29 then PC := 342
319 [-]: JMP       342          ; PC := 342
320 [-]: GETGLOBAL R29 K3       ; R29 := 0x7b998233
321 [-]: MOVE      R30 R27      ; R30 := R27
322 [-]: CALL      R29 2 2      ; R29 := R29(R30)
323 [-]: TEST      R29 0        ; if not R29 then PC := 342
324 [-]: JMP       342          ; PC := 342
325 [-]: GETGLOBAL R29 K50      ; R29 := 0xe7f2b02f
326 [-]: SELF      R29 R29 K51  ; R30 := R29; R29 := R29[0x0b151d80]
327 [-]: CALL      R29 2 2      ; R29 := R29(R30)
328 [-]: GETGLOBAL R30 K3       ; R30 := 0x7b998233
329 [-]: MOVE      R31 R29      ; R31 := R29
330 [-]: CALL      R30 2 2      ; R30 := R30(R31)
331 [-]: TEST      R30 1        ; if R30 then PC := 342
332 [-]: JMP       342          ; PC := 342
333 [-]: SELF      R30 R29 K58  ; R31 := R29; R30 := R29[0xc329e249]
334 [-]: GETGLOBAL R32 K17      ; R32 := 0xae91e43b
335 [-]: SELF      R32 R32 K18  ; R33 := R32; R32 := R32[0x42b04007]
336 [-]: LOADK     R34 K59      ; R34 := "/Lotus/Language/SystemMessages/Chat_AutoReply"
337 [-]: OP_LOADBOOL R35 0 0      ; R35 := false
338 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
339 [-]: MOVE      R33 R18      ; R33 := R18
340 [-]: OP_LOADBOOL R34 0 0      ; R34 := false
341 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
342 [-]: GETGLOBAL R30 K60      ; R30 := mInlinePrivateMessages
343 [-]: TEST      R30 0        ; if not R30 then PC := 379
344 [-]: JMP       379          ; PC := 379
345 [-]: GETTABLE  R30 R0 K47   ; R30 := R0["mUser"]
346 [-]: EQ        1 R18 R30    ; if R18 == R30 then PC := 379
347 [-]: JMP       379          ; PC := 379
348 [-]: GETGLOBAL R30 K31      ; R30 := 0x0032441c
349 [-]: GETTABLE  R30 R30 K49  ; R30 := R30["mDoNotDisturb"]
350 [-]: TEST      R30 1        ; if R30 then PC := 379
351 [-]: JMP       379          ; PC := 379
352 [-]: SELF      R30 R0 K61   ; R31 := R0; R30 := R0[0x8b75da5a]
353 [-]: CALL      R30 2 2      ; R30 := R30(R31)
354 [-]: GETGLOBAL R31 K3       ; R31 := 0x7b998233
355 [-]: MOVE      R32 R30      ; R32 := R30
356 [-]: CALL      R31 2 2      ; R31 := R31(R32)
357 [-]: TEST      R31 1        ; if R31 then PC := 379
358 [-]: JMP       379          ; PC := 379
359 [-]: GETGLOBAL R31 K3       ; R31 := 0x7b998233
360 [-]: MOVE      R32 R27      ; R32 := R27
361 [-]: CALL      R31 2 2      ; R31 := R31(R32)
362 [-]: TEST      R31 1        ; if R31 then PC := 379
363 [-]: JMP       379          ; PC := 379
364 [-]: GETTABLE  R31 R30 K62  ; R31 := R30["mChannelName"]
365 [-]: GETTABLE  R32 R27 K62  ; R32 := R27["mChannelName"]
366 [-]: EQ        1 R31 R32    ; if R31 == R32 then PC := 379
367 [-]: JMP       379          ; PC := 379
368 [-]: SELF      R31 R30 K54  ; R32 := R30; R31 := R30[0x566ff49e]
369 [-]: MOVE      R33 R18      ; R33 := R18
370 [-]: LOADK     R34 K55      ; R34 := ": "
371 [-]: MOVE      R35 R2       ; R35 := R2
372 [-]: CONCAT    R33 R33 R35  ; R33 := R33 .. R34 .. R35
373 [-]: GETTABLE  R34 R30 K63  ; R34 := R30["MESSAGE_TYPE_INGAME_WHISPER"]
374 [-]: MOVE      R35 R20      ; R35 := R20
375 [-]: OP_LOADBOOL R36 0 0      ; R36 := false
376 [-]: OP_LOADBOOL R37 0 0      ; R37 := false
377 [-]: MOVE      R38 R18      ; R38 := R18
378 [-]: CALL      R31 8 1      ; R31(R32,R33,R34,R35,R36,R37,R38)
379 [-]: RETURN    R0 1         ; return 
380 [-]: GETGLOBAL R31 K1       ; R31 := 0xcfc01047
381 [-]: GETTABLE  R32 R0 K2    ; R32 := R0["mPanelList"]
382 [-]: CALL      R31 2 4      ; R31,R32,R33 := R31(R32)
383 [-]: JMP       398          ; PC := 398
384 [-]: GETGLOBAL R36 K3       ; R36 := 0x7b998233
385 [-]: MOVE      R37 R35      ; R37 := R35
386 [-]: CALL      R36 2 2      ; R36 := R36(R37)
387 [-]: TEST      R36 1        ; if R36 then PC := 398
388 [-]: JMP       398          ; PC := 398
389 [-]: SELF      R36 R35 K4   ; R37 := R35; R36 := R35[0xf88a689b]
390 [-]: MOVE      R38 R18      ; R38 := R18
391 [-]: MOVE      R39 R19      ; R39 := R19
392 [-]: MOVE      R40 R2       ; R40 := R2
393 [-]: MOVE      R41 R20      ; R41 := R20
394 [-]: OP_LOADBOOL R42 0 0      ; R42 := false
395 [-]: OP_LOADBOOL R43 0 0      ; R43 := false
396 [-]: MOVE      R44 R21      ; R44 := R21
397 [-]: CALL      R36 9 1      ; R36(R37,R38,R39,R40,R41,R42,R43,R44)
398 [-]: TFORLOOP  R31 2        ; R34,R35 :=  R31(R32,R33); if R34 ~= nil then begin PC = 384; R33 := R34 end
399 [-]: JMP       384          ; PC := 384
400 [-]: RETURN    R0 1         ; return 


; Function #121.38:
;
; Name:            
; Defined at line: 7818
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: GETUPVAL  R2 U1        ; R2 := U1
  5 [-]: CALL      R2 1 1       ; R2()
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7f5022cf
  7 [-]: GETTABLE  R2 R2 K1     ; R82 := R2[0xa5c556b9]
  8 [-]: MOVE      R3 R1        ; R3 := R1
  9 [-]: LOADK     R4 K2        ; R4 := "#"
 10 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 11 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 37
 12 [-]: JMP       37           ; PC := 37
 13 [-]: GETGLOBAL R2 K4        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["WareframeMiniGameChatCallback"]
 15 [-]: EQ        0 R2 K3      ; if R2 ~= nil then PC := 37
 16 [-]: JMP       37           ; PC := 37
 17 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 18 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x42b04007]
 19 [-]: LOADK     R4 K8        ; R4 := "/Lotus/Language/Menu/Chat_FriendOffline"
 20 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 21 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 22 [-]: SETTABLE  R6 K9 R1     ; R6["FRIEND"] := R1
 23 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 24 [-]: GETGLOBAL R3 K10       ; R3 := 0x7b998233
 25 [-]: GETTABLE  R4 R0 K11    ; R4 := R0["mPanelList"]
 26 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mActivePanelName"]
 27 [-]: GETTABLE  R4 R4 R5     ; R4 := R4[R5]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 37
 30 [-]: JMP       37           ; PC := 37
 31 [-]: GETTABLE  R3 R0 K11    ; R3 := R0["mPanelList"]
 32 [-]: GETTABLE  R4 R0 K12    ; R4 := R0["mActivePanelName"]
 33 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
 34 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0xd4f2405e]
 35 [-]: MOVE      R5 R2        ; R5 := R2
 36 [-]: CALL      R3 3 1       ; R3(R4,R5)
 37 [-]: RETURN    R0 1         ; return 


; Function #121.39:
;
; Name:            
; Defined at line: 7834
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x015284cd
  2 [-]: LOADK     R4 K1        ; R4 := ","
  3 [-]: MOVE      R5 R2        ; R5 := R2
  4 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
  5 [-]: GETGLOBAL R4 K2        ; R4 := 0x7f5022cf
  6 [-]: GETTABLE  R4 R4 K3     ; R82 := R4[0xa5c556b9]
  7 [-]: MOVE      R5 R1        ; R5 := R1
  8 [-]: LOADK     R6 K4        ; R6 := "#"
  9 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 10 [-]: EQ        1 R4 K5      ; if R4 == nil then PC := 17
 11 [-]: JMP       17           ; PC := 17
 12 [-]: SELF      R4 R1 K6     ; R5 := R1; R4 := R1[0x1a94c9cc]
 13 [-]: CONST     R6 2         ; R6 := 2.000000
 14 [-]: CONST     R7 -1        ; R7 := -1.000000
 15 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 16 [-]: MOVE      R1 R4        ; R1 := R4
 17 [-]: GETGLOBAL R4 K2        ; R4 := 0x7f5022cf
 18 [-]: GETTABLE  R4 R4 K6     ; R82 := R4[0x1a94c9cc]
 19 [-]: MOVE      R5 R1        ; R5 := R1
 20 [-]: CONST     R6 1         ; R6 := 1.000000
 21 [-]: CONST     R7 1         ; R7 := 1.000000
 22 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 23 [-]: GETTABLE  R5 R0 K7     ; R82 := R5[0x2566038c]
 24 [-]: CALL      R5 1 2       ; R5 := R5()
 25 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 28
 26 [-]: JMP       28           ; PC := 28
 27 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 28
 28 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 29 [-]: GETGLOBAL R5 K8        ; R5 := 0x7b998233
 30 [-]: GETTABLE  R6 R0 K9     ; R6 := R0["mPanelList"]
 31 [-]: GETTABLE  R6 R6 R1     ; R6 := R6[R1]
 32 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 33 [-]: TEST      R5 1         ; if R5 then PC := 69
 34 [-]: JMP       69           ; PC := 69
 35 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["mPanelList"]
 36 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 37 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["mInitialPopulationDone"]
 38 [-]: TEST      R5 1         ; if R5 then PC := 46
 39 [-]: JMP       46           ; PC := 46
 40 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["mPanelList"]
 41 [-]: GETTABLE  R5 R5 R1     ; R5 := R5[R1]
 42 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0x5e63828f]
 43 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 44 [-]: CALL      R5 3 1       ; R5(R6,R7)
 45 [-]: JMP       69           ; PC := 69
 46 [-]: LEN       R5 R3        ; R5 := # R3
 47 [-]: CONST     R6 1         ; R6 := 1.000000
 48 [-]: MOVE      R7 R5        ; R7 := R5
 49 [-]: CONST     R8 1         ; R8 := 1.000000
 50 [-]: FORPREP   R6 68        ; R6 -= R8; PC := 68
 51 [-]: TEST      R4 0         ; if not R4 then PC := 58
 52 [-]: JMP       58           ; PC := 58
 53 [-]: GETUPVAL  R10 U0       ; R10 := U0
 54 [-]: GETTABLE  R11 R3 R9    ; R11 := R3[R9]
 55 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 56 [-]: TEST      R10 0        ; if not R10 then PC := 68
 57 [-]: JMP       68           ; PC := 68
 58 [-]: GETTABLE  R10 R0 K9    ; R10 := R0["mPanelList"]
 59 [-]: GETTABLE  R10 R10 R1   ; R10 := R10[R1]
 60 [-]: SELF      R10 R10 K12  ; R11 := R10; R10 := R10[0xfe723404]
 61 [-]: GETTABLE  R12 R3 R9    ; R12 := R3[R9]
 62 [-]: MOVE      R13 R1       ; R13 := R1
 63 [-]: LT        1 R9 R5      ; if R9 < R5 then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: OP_LOADBOOL R14 0 1      ; R14 := false; PC := 66
 66 [-]: OP_LOADBOOL R14 1 0      ; R14 := true
 67 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 68 [-]: FORLOOP   R6 51        ; R6 += R8; if R6 <= R7 then begin PC := 51; R9 := R6 end
 69 [-]: RETURN    R0 1         ; return 


; Function #121.40:
;
; Name:            
; Defined at line: 7859
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R0 K0        ; R0 := "G"
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #121.41:
;
; Name:            
; Defined at line: 7863
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: LOADK     R2 K0        ; R2 := "#"
  2 [-]: MOVE      R3 R1        ; R3 := R1
  3 [-]: GETGLOBAL R4 K1        ; R4 := 0x7f5022cf
  4 [-]: GETTABLE  R4 R4 K2     ; R82 := R4[0x3f3e4d12]
  5 [-]: GETGLOBAL R5 K3        ; R5 := 0x67513231
  6 [-]: CALL      R5 1 2       ; R5 := R5()
  7 [-]: SELF      R5 R5 K4     ; R6 := R5; R5 := R5[0x6d604ba7]
  8 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
  9 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 10 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
 11 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 12 [-]: TEST      R3 0         ; if not R3 then PC := 28
 13 [-]: JMP       28           ; PC := 28
 14 [-]: GETGLOBAL R4 K5        ; R4 := 0x7b998233
 15 [-]: GETGLOBAL R5 K6        ; R5 := mProfileSettings
 16 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 17 [-]: TEST      R4 1         ; if R4 then PC := 28
 18 [-]: JMP       28           ; PC := 28
 19 [-]: GETGLOBAL R4 K6        ; R4 := mProfileSettings
 20 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x4b988699]
 21 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 22 [-]: MOVE      R5 R2        ; R5 := R2
 23 [-]: GETUPVAL  R6 U0        ; R6 := U0
 24 [-]: SELF      R7 R4 K8     ; R8 := R4; R7 := R4[0x9564f7d5]
 25 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 26 [-]: CALL      R6 0 2       ; R6 := R6(R7,...)
 27 [-]: CONCAT    R2 R5 R6     ; R2 := R5 .. R6
 28 [-]: RETURN    R2 2         ; return R2
 29 [-]: RETURN    R0 1         ; return 


; Function #121.42:
;
; Name:            
; Defined at line: 7878
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xc3efe18a]
  2 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0x18618000]
  3 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  4 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
  5 [-]: RETURN    R1 0         ; return R1,...
  6 [-]: RETURN    R0 1         ; return 


; Function #121.43:
;
; Name:            
; Defined at line: 7882
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "S"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #121.44:
;
; Name:            
; Defined at line: 7887
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x42b04007]
  3 [-]: LOADK     R4 K2        ; R4 := "/Lotus/Language/Menu/Chat_SquadTitle"
  4 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
  5 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
  6 [-]: SELF      R3 R0 K3     ; R4 := R0; R3 := R0[0x9f16d8a1]
  7 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["CHANNEL_ENTER"]
  8 [-]: MOVE      R6 R1        ; R6 := R1
  9 [-]: MOVE      R7 R2        ; R7 := R2
 10 [-]: GETTABLE  R8 R0 K5     ; R8 := R0["CHANNEL_SESSION"]
 11 [-]: CALL      R3 6 2       ; R3 := R3(R4,R5,R6,R7,R8)
 12 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mPanelShortcuts"]
 13 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["CHANNEL_SESSION"]
 14 [-]: SETTABLE  R4 R5 R1     ; R4[R5] := R1
 15 [-]: GETGLOBAL R4 K7        ; R4 := 0x7b998233
 16 [-]: MOVE      R5 R3        ; R5 := R3
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 1         ; if R4 then PC := 28
 19 [-]: JMP       28           ; PC := 28
 20 [-]: GETGLOBAL R4 K8        ; R4 := 0xe7f2b02f
 21 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0xca33534d]
 22 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 23 [-]: TEST      R4 1         ; if R4 then PC := 28
 24 [-]: JMP       28           ; PC := 28
 25 [-]: SELF      R4 R0 K10    ; R5 := R0; R4 := R0[0x46610c50]
 26 [-]: MOVE      R6 R3        ; R6 := R3
 27 [-]: CALL      R4 3 1       ; R4(R5,R6)
 28 [-]: RETURN    R0 1         ; return 


; Function #121.45:
;
; Name:            
; Defined at line: 7897
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0xe7f2b02f
  2 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x565be9ee]
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
  5 [-]: MOVE      R4 R2        ; R4 := R2
  6 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  7 [-]: TEST      R3 1         ; if R3 then PC := 12
  8 [-]: JMP       12           ; PC := 12
  9 [-]: SELF      R3 R2 K3     ; R4 := R2; R3 := R2[0x7259ce13]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: MOVE      R1 R3        ; R1 := R3
 12 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mCachedSessionID"]
 13 [-]: EQ        1 R1 R3      ; if R1 == R3 then PC := 87
 14 [-]: JMP       87           ; PC := 87
 15 [-]: GETGLOBAL R3 K5        ; R3 := 0x3d106989
 16 [-]: LOADK     R4 K6        ; R4 := "CHATREDUX - SessionId does not match cached id;"
 17 [-]: CALL      R3 2 1       ; R3(R4)
 18 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mCachedSessionID"]
 19 [-]: EQ        0 R3 K7      ; if R3 ~= nil then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETGLOBAL R3 K5        ; R3 := 0x3d106989
 22 [-]: LOADK     R4 K8        ; R4 := "CHATREDUX - No cached session id."
 23 [-]: CALL      R3 2 1       ; R3(R4)
 24 [-]: JMP       30           ; PC := 30
 25 [-]: GETGLOBAL R3 K5        ; R3 := 0x3d106989
 26 [-]: LOADK     R4 K9        ; R4 := "CHATREDUX - CachedSessionID: "
 27 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mCachedSessionID"]
 28 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 29 [-]: CALL      R3 2 1       ; R3(R4)
 30 [-]: EQ        0 R1 K7      ; if R1 ~= nil then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: GETGLOBAL R3 K5        ; R3 := 0x3d106989
 33 [-]: LOADK     R4 K10       ; R4 := "CHATREDUX - No session id."
 34 [-]: CALL      R3 2 1       ; R3(R4)
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETGLOBAL R3 K5        ; R3 := 0x3d106989
 37 [-]: LOADK     R4 K11       ; R4 := "CHATREDUX - SessionID: "
 38 [-]: MOVE      R5 R1        ; R5 := R1
 39 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 40 [-]: CALL      R3 2 1       ; R3(R4)
 41 [-]: CLOSURE   R3 0         ; R3 := closure(Function #121.45.1)
 42 [-]: MOVE      R0 R0        ; R0 := R0
 43 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mCachedSessionID"]
 44 [-]: EQ        1 R4 K7      ; if R4 == nil then PC := 66
 45 [-]: JMP       66           ; PC := 66
 46 [-]: GETTABLE  R4 R0 K4     ; R4 := R0["mCachedSessionID"]
 47 [-]: EQ        1 R4 K12     ; if R4 == "" then PC := 66
 48 [-]: JMP       66           ; PC := 66
 49 [-]: GETGLOBAL R4 K5        ; R4 := 0x3d106989
 50 [-]: LOADK     R5 K13       ; R5 := "CHATREDUX - CachedSessionID2: "
 51 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["mCachedSessionID"]
 52 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 53 [-]: CALL      R4 2 1       ; R4(R5)
 54 [-]: MOVE      R4 R3        ; R4 := R3
 55 [-]: GETTABLE  R5 R0 K4     ; R5 := R0["mCachedSessionID"]
 56 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 57 [-]: SETTABLE  R0 K14 R4    ; R0["mCachedOldSessionName"] := R4
 58 [-]: SELF      R4 R0 K15    ; R5 := R0; R4 := R0[0x9f16d8a1]
 59 [-]: GETTABLE  R6 R0 K16    ; R6 := R0["CHANNEL_EXIT"]
 60 [-]: GETTABLE  R7 R0 K14    ; R7 := R0["mCachedOldSessionName"]
 61 [-]: LOADK     R8 K12       ; R8 := ""
 62 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 63 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mPanelShortcuts"]
 64 [-]: GETTABLE  R5 R0 K18    ; R5 := R0["CHANNEL_SESSION"]
 65 [-]: SETTABLE  R4 R5 K7     ; R4[R5] := nil
 66 [-]: EQ        1 R1 K7      ; if R1 == nil then PC := 86
 67 [-]: JMP       86           ; PC := 86
 68 [-]: EQ        1 R1 K12     ; if R1 == "" then PC := 86
 69 [-]: JMP       86           ; PC := 86
 70 [-]: GETGLOBAL R4 K5        ; R4 := 0x3d106989
 71 [-]: LOADK     R5 K19       ; R5 := "CHATREDUX - SessionID2: "
 72 [-]: MOVE      R6 R1        ; R6 := R1
 73 [-]: LOADK     R7 K20       ; R7 := " - "
 74 [-]: GETGLOBAL R8 K21       ; R8 := 0x64fb1586
 75 [-]: MOVE      R9 R1        ; R9 := R1
 76 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 77 [-]: CONCAT    R5 R5 R8     ; R5 := R5 .. R6 .. R7 .. R8
 78 [-]: CALL      R4 2 1       ; R4(R5)
 79 [-]: MOVE      R4 R3        ; R4 := R3
 80 [-]: MOVE      R5 R1        ; R5 := R1
 81 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 82 [-]: SETTABLE  R0 K22 R4    ; R0["mCachedCurSessionName"] := R4
 83 [-]: SELF      R4 R0 K23    ; R5 := R0; R4 := R0[0x83877c76]
 84 [-]: GETTABLE  R6 R0 K22    ; R6 := R0["mCachedCurSessionName"]
 85 [-]: CALL      R4 3 1       ; R4(R5,R6)
 86 [-]: SETTABLE  R0 K4 R1     ; R0["mCachedSessionID"] := R1
 87 [-]: CONST     R4 1         ; R4 := 1.000000
 88 [-]: GETGLOBAL R5 K24       ; R5 := 0x14459a1c
 89 [-]: TEST      R5 1         ; if R5 then PC := 118
 90 [-]: JMP       118          ; PC := 118
 91 [-]: GETGLOBAL R6 K2        ; R6 := 0x7b998233
 92 [-]: GETGLOBAL R7 K25       ; R7 := 0xbe190284
 93 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 94 [-]: TEST      R6 1         ; if R6 then PC := 118
 95 [-]: JMP       118          ; PC := 118
 96 [-]: GETGLOBAL R6 K25       ; R6 := 0xbe190284
 97 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6[0xf2deaf69]
 98 [-]: GETGLOBAL R8 K27       ; R8 := gLotusBaseGameRulesType
 99 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
100 [-]: TEST      R6 0         ; if not R6 then PC := 118
101 [-]: JMP       118          ; PC := 118
102 [-]: GETGLOBAL R6 K25       ; R6 := 0xbe190284
103 [-]: SELF      R6 R6 K28    ; R7 := R6; R6 := R6[0x1fbe8d2b]
104 [-]: CALL      R6 2 2       ; R6 := R6(R7)
105 [-]: MOVE      R4 R6        ; R4 := R6
106 [-]: EQ        0 R4 K29     ; if R4 ~= 1.000000 then PC := 113
107 [-]: JMP       113          ; PC := 113
108 [-]: GETTABLE  R6 R0 K30    ; R6 := R0["mCachedHostHistoryCount"]
109 [-]: LT        0 K29 R6     ; if 1.000000 >= R6 then PC := 113
110 [-]: JMP       113          ; PC := 113
111 [-]: SETTABLE  R0 K30 K29   ; R0["mCachedHostHistoryCount"] := 1.000000
112 [-]: JMP       118          ; PC := 118
113 [-]: GETTABLE  R6 R0 K30    ; R6 := R0["mCachedHostHistoryCount"]
114 [-]: LT        1 R6 R4      ; if R6 < R4 then PC := 117
115 [-]: JMP       117          ; PC := 117
116 [-]: OP_LOADBOOL R5 0 1       ; R5 := false; PC := 117
117 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
118 [-]: TEST      R5 0         ; if not R5 then PC := 142
119 [-]: JMP       142          ; PC := 142
120 [-]: GETTABLE  R6 R0 K22    ; R6 := R0["mCachedCurSessionName"]
121 [-]: GETTABLE  R7 R0 K14    ; R7 := R0["mCachedOldSessionName"]
122 [-]: EQ        1 R6 K12     ; if R6 == "" then PC := 142
123 [-]: JMP       142          ; PC := 142
124 [-]: EQ        1 R7 K12     ; if R7 == "" then PC := 142
125 [-]: JMP       142          ; PC := 142
126 [-]: SETTABLE  R0 K30 R4    ; R0["mCachedHostHistoryCount"] := R4
127 [-]: SETTABLE  R0 K22 K12   ; R0["mCachedCurSessionName"] := ""
128 [-]: SETTABLE  R0 K14 K12   ; R0["mCachedOldSessionName"] := ""
129 [-]: SELF      R8 R0 K15    ; R9 := R0; R8 := R0[0x9f16d8a1]
130 [-]: GETTABLE  R10 R0 K16   ; R10 := R0["CHANNEL_EXIT"]
131 [-]: MOVE      R11 R6       ; R11 := R6
132 [-]: LOADK     R12 K12      ; R12 := ""
133 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
134 [-]: GETGLOBAL R8 K31       ; R8 := mGameData
135 [-]: SELF      R8 R8 K32    ; R9 := R8; R8 := R8[0x3a59250b]
136 [-]: MOVE      R10 R6       ; R10 := R6
137 [-]: MOVE      R11 R7       ; R11 := R7
138 [-]: CALL      R8 4 1       ; R8(R9,R10,R11)
139 [-]: SELF      R8 R0 K23    ; R9 := R0; R8 := R0[0x83877c76]
140 [-]: MOVE      R10 R6       ; R10 := R6
141 [-]: CALL      R8 3 1       ; R8(R9,R10)
142 [-]: RETURN    R0 1         ; return 


; Function #121.45.1:
;
; Name:            
; Defined at line: 7920
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: LOADK     R1 K0        ; R1 := "#"
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x2566038c]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: GETGLOBAL R3 K2        ; R3 := 0x64fb1586
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  8 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
  9 [-]: RETURN    R1 2         ; return R1
 10 [-]: RETURN    R0 1         ; return 


; Function #121.46:
;
; Name:            
; Defined at line: 7975
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xe7f2b02f
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xca33534d]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mCachedPersistentRelayHubActive"]
  7 [-]: TEST      R2 0         ; if not R2 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETGLOBAL R2 K3        ; R2 := _T
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["HubChannel"]
 11 [-]: EQ        0 R2 K5      ; if R2 ~= nil then PC := 16
 12 [-]: JMP       16           ; PC := 16
 13 [-]: GETGLOBAL R2 K3        ; R2 := _T
 14 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["mCachedHubID"]
 15 [-]: SETTABLE  R2 K4 R3     ; R2["HubChannel"] := R3
 16 [-]: GETGLOBAL R2 K3        ; R2 := _T
 17 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["HubChannel"]
 18 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 23
 19 [-]: JMP       23           ; PC := 23
 20 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mCachedHubID"]
 21 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 24
 22 [-]: JMP       24           ; PC := 24
 23 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 24
 24 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 25 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mCachedUIMode"]
 26 [-]: GETUPVAL  R4 U0        ; R4 := U0
 27 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["UI_MODE_IN_SPACE_HUB"]
 28 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 37
 29 [-]: JMP       37           ; PC := 37
 30 [-]: GETGLOBAL R3 K9        ; R3 := mUIMode
 31 [-]: GETUPVAL  R4 U0        ; R4 := U0
 32 [-]: GETTABLE  R4 R4 K8     ; R4 := R4["UI_MODE_IN_SPACE_HUB"]
 33 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 37
 34 [-]: JMP       37           ; PC := 37
 35 [-]: TEST      R1 0         ; if not R1 then PC := 40
 36 [-]: JMP       40           ; PC := 40
 37 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mCachedPersistentRelayHubActive"]
 38 [-]: EQ        1 R3 R1      ; if R3 == R1 then PC := 44
 39 [-]: JMP       44           ; PC := 44
 40 [-]: GETGLOBAL R3 K3        ; R3 := _T
 41 [-]: SETTABLE  R3 K4 K5     ; R3["HubChannel"] := nil
 42 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 43 [-]: JMP       56           ; PC := 56
 44 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mCachedUIMode"]
 45 [-]: GETGLOBAL R4 K9        ; R4 := mUIMode
 46 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 56
 47 [-]: JMP       56           ; PC := 56
 48 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mCachedUIMode"]
 49 [-]: GETUPVAL  R4 U0        ; R4 := U0
 50 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["UI_MODE_IN_GAME"]
 51 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 54
 52 [-]: JMP       54           ; PC := 54
 53 [-]: OP_LOADBOOL R3 0 1       ; R3 := false; PC := 54
 54 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 55 [-]: SETTABLE  R0 K10 R3    ; R0["mFocusHubOnActive"] := R3
 56 [-]: GETGLOBAL R3 K9        ; R3 := mUIMode
 57 [-]: SETTABLE  R0 K7 R3     ; R0["mCachedUIMode"] := R3
 58 [-]: SETTABLE  R0 K2 R1     ; R0["mCachedPersistentRelayHubActive"] := R1
 59 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mCachedPersistentRelayHubActive"]
 60 [-]: TEST      R3 0         ; if not R3 then PC := 79
 61 [-]: JMP       79           ; PC := 79
 62 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mCachedUIMode"]
 63 [-]: GETUPVAL  R4 U0        ; R4 := U0
 64 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["UI_MODE_IN_GAME"]
 65 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 79
 66 [-]: JMP       79           ; PC := 79
 67 [-]: GETGLOBAL R3 K3        ; R3 := _T
 68 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["HubChannel"]
 69 [-]: EQ        0 R3 K5      ; if R3 ~= nil then PC := 79
 70 [-]: JMP       79           ; PC := 79
 71 [-]: GETGLOBAL R3 K0        ; R3 := 0xe7f2b02f
 72 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x6cac7e30]
 73 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 74 [-]: EQ        1 R3 K13     ; if R3 == "" then PC := 79
 75 [-]: JMP       79           ; PC := 79
 76 [-]: GETGLOBAL R4 K3        ; R4 := _T
 77 [-]: SETTABLE  R4 K4 R3     ; R4["HubChannel"] := R3
 78 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 79 [-]: TEST      R2 1         ; if R2 then PC := 99
 80 [-]: JMP       99           ; PC := 99
 81 [-]: GETGLOBAL R4 K9        ; R4 := mUIMode
 82 [-]: GETUPVAL  R5 U0        ; R5 := U0
 83 [-]: GETTABLE  R5 R5 K8     ; R5 := R5["UI_MODE_IN_SPACE_HUB"]
 84 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 93
 85 [-]: JMP       93           ; PC := 93
 86 [-]: GETGLOBAL R4 K9        ; R4 := mUIMode
 87 [-]: GETUPVAL  R5 U0        ; R5 := U0
 88 [-]: GETTABLE  R5 R5 K14    ; R5 := R5["UI_MODE_IN_DOJO"]
 89 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 93
 90 [-]: JMP       93           ; PC := 93
 91 [-]: TEST      R1 0         ; if not R1 then PC := 98
 92 [-]: JMP       98           ; PC := 98
 93 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mCachedHubID"]
 94 [-]: GETGLOBAL R5 K3        ; R5 := _T
 95 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["HubChannel"]
 96 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 99
 97 [-]: JMP       99           ; PC := 99
 98 [-]: RETURN    R0 1         ; return 
 99 [-]: GETTABLE  R4 R0 K15    ; R4 := R0["mIsScenarioChannel"]
100 [-]: TEST      R4 1         ; if R4 then PC := 103
101 [-]: JMP       103          ; PC := 103
102 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mCachedPersistentRelayHubActive"]
103 [-]: SETTABLE  R0 K15 R4    ; R0["mIsScenarioChannel"] := R4
104 [-]: CLOSURE   R4 0         ; R4 := closure(Function #121.46.1)
105 [-]: MOVE      R0 R0        ; R0 := R0
106 [-]: GETTABLE  R5 R0 K6     ; R5 := R0["mCachedHubID"]
107 [-]: EQ        1 R5 K5      ; if R5 == nil then PC := 120
108 [-]: JMP       120          ; PC := 120
109 [-]: MOVE      R5 R4        ; R5 := R4
110 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mCachedHubID"]
111 [-]: CALL      R5 2 2       ; R5 := R5(R6)
112 [-]: SELF      R6 R0 K16    ; R7 := R0; R6 := R0[0x9f16d8a1]
113 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["CHANNEL_EXIT"]
114 [-]: MOVE      R9 R5        ; R9 := R5
115 [-]: LOADK     R10 K13      ; R10 := ""
116 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
117 [-]: GETTABLE  R6 R0 K18    ; R6 := R0["mPanelShortcuts"]
118 [-]: GETTABLE  R7 R0 K19    ; R7 := R0["CHANNEL_HUB"]
119 [-]: SETTABLE  R6 R7 K5     ; R6[R7] := nil
120 [-]: GETGLOBAL R6 K3        ; R6 := _T
121 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["HubChannel"]
122 [-]: EQ        1 R6 K5      ; if R6 == nil then PC := 180
123 [-]: JMP       180          ; PC := 180
124 [-]: LOADNIL   R6 R6        ; R6 := nil
125 [-]: GETGLOBAL R7 K20       ; R7 := 0x7f5022cf
126 [-]: GETTABLE  R7 R7 K21    ; R82 := R7[0xa5c556b9]
127 [-]: GETGLOBAL R8 K20       ; R8 := 0x7f5022cf
128 [-]: GETTABLE  R8 R8 K22    ; R82 := R8[0x04981ab3]
129 [-]: GETGLOBAL R9 K3        ; R9 := _T
130 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["HubChannel"]
131 [-]: CALL      R8 2 2       ; R8 := R8(R9)
132 [-]: LOADK     R9 K23       ; R9 := "scenario"
133 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
134 [-]: TEST      R7 0         ; if not R7 then PC := 138
135 [-]: JMP       138          ; PC := 138
136 [-]: LOADK     R6 K24       ; R6 := "/Lotus/Language/Game/Scenario"
137 [-]: JMP       144          ; PC := 144
138 [-]: GETGLOBAL R7 K25       ; R7 := mIsInDojo
139 [-]: TEST      R7 0         ; if not R7 then PC := 143
140 [-]: JMP       143          ; PC := 143
141 [-]: LOADK     R6 K26       ; R6 := "/Lotus/Language/Locations/Dojo"
142 [-]: JMP       144          ; PC := 144
143 [-]: LOADK     R6 K27       ; R6 := "/Lotus/Language/Menu/Chat_HubTitle"
144 [-]: GETGLOBAL R7 K28       ; R7 := 0xae91e43b
145 [-]: SELF      R7 R7 K29    ; R8 := R7; R7 := R7[0x42b04007]
146 [-]: MOVE      R9 R6        ; R9 := R6
147 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
148 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
149 [-]: MOVE      R6 R7        ; R6 := R7
150 [-]: MOVE      R7 R4        ; R7 := R4
151 [-]: GETGLOBAL R8 K3        ; R8 := _T
152 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["HubChannel"]
153 [-]: CALL      R7 2 2       ; R7 := R7(R8)
154 [-]: SELF      R8 R0 K16    ; R9 := R0; R8 := R0[0x9f16d8a1]
155 [-]: GETTABLE  R10 R0 K30   ; R10 := R0["CHANNEL_ENTER"]
156 [-]: MOVE      R11 R7       ; R11 := R7
157 [-]: MOVE      R12 R6       ; R12 := R6
158 [-]: GETTABLE  R13 R0 K19   ; R13 := R0["CHANNEL_HUB"]
159 [-]: CALL      R8 6 2       ; R8 := R8(R9,R10,R11,R12,R13)
160 [-]: GETTABLE  R9 R0 K18    ; R9 := R0["mPanelShortcuts"]
161 [-]: GETTABLE  R10 R0 K19   ; R10 := R0["CHANNEL_HUB"]
162 [-]: SETTABLE  R9 R10 R7    ; R9[R10] := R7
163 [-]: GETGLOBAL R9 K31       ; R9 := 0x7b998233
164 [-]: MOVE      R10 R8       ; R10 := R8
165 [-]: CALL      R9 2 2       ; R9 := R9(R10)
166 [-]: TEST      R9 1         ; if R9 then PC := 180
167 [-]: JMP       180          ; PC := 180
168 [-]: GETTABLE  R9 R8 K32    ; R9 := R8["mIsActive"]
169 [-]: TEST      R9 1         ; if R9 then PC := 180
170 [-]: JMP       180          ; PC := 180
171 [-]: GETTABLE  R9 R0 K6     ; R9 := R0["mCachedHubID"]
172 [-]: EQ        0 R9 K5      ; if R9 ~= nil then PC := 180
173 [-]: JMP       180          ; PC := 180
174 [-]: GETTABLE  R9 R0 K10    ; R9 := R0["mFocusHubOnActive"]
175 [-]: TEST      R9 0         ; if not R9 then PC := 180
176 [-]: JMP       180          ; PC := 180
177 [-]: SELF      R9 R0 K33    ; R10 := R0; R9 := R0[0x46610c50]
178 [-]: MOVE      R11 R8       ; R11 := R8
179 [-]: CALL      R9 3 1       ; R9(R10,R11)
180 [-]: GETGLOBAL R9 K3        ; R9 := _T
181 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["HubChannel"]
182 [-]: SETTABLE  R0 K6 R9     ; R0["mCachedHubID"] := R9
183 [-]: RETURN    R0 1         ; return 


; Function #121.46.1:
;
; Name:            
; Defined at line: 8013
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: LOADK     R1 K0        ; R1 := "#"
  2 [-]: GETUPVAL  R2 U0        ; R2 := U0
  3 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x9729efeb]
  4 [-]: GETUPVAL  R4 U0        ; R4 := U0
  5 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  6 [-]: LOADK     R3 K2        ; R3 := "_"
  7 [-]: GETGLOBAL R4 K3        ; R4 := 0x64fb1586
  8 [-]: MOVE      R5 R0        ; R5 := R0
  9 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 10 [-]: CONCAT    R1 R1 R4     ; R1 := R1 .. R2 .. R3 .. R4
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: RETURN    R0 1         ; return 


; Function #121.47:
;
; Name:            
; Defined at line: 8048
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R0 K0        ; R0 := "C"
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #121.48:
;
; Name:            
; Defined at line: 8052
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "D"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #121.49:
;
; Name:            
; Defined at line: 8056
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "R"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #121.50:
;
; Name:            
; Defined at line: 8060
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "T"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #121.51:
;
; Name:            
; Defined at line: 8064
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "Q"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #121.52:
;
; Name:            
; Defined at line: 8068
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "A"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #121.53:
;
; Name:            
; Defined at line: 8072
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: LOADK     R1 K0        ; R1 := "F"
  2 [-]: RETURN    R1 2         ; return R1
  3 [-]: RETURN    R0 1         ; return 


; Function #121.54:
;
; Name:            
; Defined at line: 8076
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["HubChannel"]
  3 [-]: TEST      R1 0         ; if not R1 then PC := 16
  4 [-]: JMP       16           ; PC := 16
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0x7f5022cf
  6 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0xa5c556b9]
  7 [-]: GETGLOBAL R2 K2        ; R2 := 0x7f5022cf
  8 [-]: GETTABLE  R2 R2 K4     ; R82 := R2[0x04981ab3]
  9 [-]: GETGLOBAL R3 K0        ; R3 := _T
 10 [-]: GETTABLE  R3 R3 K1     ; R3 := R3["HubChannel"]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: LOADK     R3 K5        ; R3 := "scenario"
 13 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 14 [-]: TEST      R1 1         ; if R1 then PC := 21
 15 [-]: JMP       21           ; PC := 21
 16 [-]: TEST      R0 0         ; if not R0 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETTABLE  R1 R0 K6     ; R1 := R0["mIsScenarioChannel"]
 19 [-]: TEST      R1 0         ; if not R1 then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: LOADK     R1 K7        ; R1 := "O"
 22 [-]: RETURN    R1 2         ; return R1
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: GETTABLE  R1 R1 K8     ; R82 := R1[0x06d055f9]
 25 [-]: GETGLOBAL R2 K9        ; R2 := mUIMode
 26 [-]: GETUPVAL  R3 U1        ; R3 := U1
 27 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["UI_MODE_IN_DOJO"]
 28 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 31
 29 [-]: JMP       31           ; PC := 31
 30 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 31
 31 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 32 [-]: LOADK     R3 K11       ; R3 := "J"
 33 [-]: LOADK     R4 K12       ; R4 := "H"
 34 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 35 [-]: RETURN    R1 2         ; return R1
 36 [-]: RETURN    R0 1         ; return 


; Function #121.55:
;
; Name:            
; Defined at line: 8083
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETGLOBAL R1 K0        ; R1 := mEnableCouncilChat
  2 [-]: TEST      R1 0         ; if not R1 then PC := 15
  3 [-]: JMP       15           ; PC := 15
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K2        ; R2 := mGameData
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETGLOBAL R1 K2        ; R1 := mGameData
 10 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xd4483824]
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: JMP       15           ; PC := 15
 13 [-]: OP_LOADBOOL R1 0 1       ; R1 := false; PC := 14
 14 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 15 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mPendingCouncilChannelName"]
 16 [-]: EQ        1 R2 K5      ; if R2 == nil then PC := 49
 17 [-]: JMP       49           ; PC := 49
 18 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["mIsConnected"]
 19 [-]: TEST      R2 0         ; if not R2 then PC := 49
 20 [-]: JMP       49           ; PC := 49
 21 [-]: GETTABLE  R2 R0 K7     ; R2 := R0["mVisualMode"]
 22 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["VISUAL_MODE_MENU_SIMPLE"]
 23 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 49
 24 [-]: JMP       49           ; PC := 49
 25 [-]: LOADK     R2 K9        ; R2 := "#"
 26 [-]: GETTABLE  R3 R0 K10    ; R3 := R0["mActivePanelName"]
 27 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 28 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mPendingCouncilChannelName"]
 29 [-]: EQ        1 R3 R2      ; if R3 == R2 then PC := 35
 30 [-]: JMP       35           ; PC := 35
 31 [-]: GETGLOBAL R3 K11       ; R3 := 0x0032441c
 32 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["hasJoinedCouncilChat"]
 33 [-]: TEST      R3 0         ; if not R3 then PC := 49
 34 [-]: JMP       49           ; PC := 49
 35 [-]: GETGLOBAL R3 K13       ; R3 := 0xe7f2b02f
 36 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0x0b151d80]
 37 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 38 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
 39 [-]: MOVE      R5 R3        ; R5 := R3
 40 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 41 [-]: TEST      R4 1         ; if R4 then PC := 46
 42 [-]: JMP       46           ; PC := 46
 43 [-]: SELF      R4 R3 K15    ; R5 := R3; R4 := R3[0x3d07d47d]
 44 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["mPendingCouncilChannelName"]
 45 [-]: CALL      R4 3 1       ; R4(R5,R6)
 46 [-]: SETTABLE  R0 K4 K5     ; R0["mPendingCouncilChannelName"] := nil
 47 [-]: GETGLOBAL R4 K11       ; R4 := 0x0032441c
 48 [-]: SETTABLE  R4 K12 K16   ; R4["hasJoinedCouncilChat"] := true
 49 [-]: GETTABLE  R4 R0 K17    ; R4 := R0["mCachedIsCounselor"]
 50 [-]: EQ        1 R1 R4      ; if R1 == R4 then PC := 88
 51 [-]: JMP       88           ; PC := 88
 52 [-]: CLOSURE   R4 0         ; R4 := closure(Function #121.55.1)
 53 [-]: MOVE      R0 R0        ; R0 := R0
 54 [-]: GETTABLE  R5 R0 K17    ; R5 := R0["mCachedIsCounselor"]
 55 [-]: TEST      R5 0         ; if not R5 then PC := 68
 56 [-]: JMP       68           ; PC := 68
 57 [-]: MOVE      R5 R4        ; R5 := R4
 58 [-]: LOADK     R6 K18       ; R6 := ""
 59 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 60 [-]: SELF      R6 R0 K19    ; R7 := R0; R6 := R0[0x9f16d8a1]
 61 [-]: GETTABLE  R8 R0 K20    ; R8 := R0["CHANNEL_EXIT"]
 62 [-]: MOVE      R9 R5        ; R9 := R5
 63 [-]: LOADK     R10 K18      ; R10 := ""
 64 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
 65 [-]: GETTABLE  R6 R0 K21    ; R6 := R0["mPanelShortcuts"]
 66 [-]: GETTABLE  R7 R0 K22    ; R7 := R0["CHANNEL_COUNCIL"]
 67 [-]: SETTABLE  R6 R7 K5     ; R6[R7] := nil
 68 [-]: TEST      R1 0         ; if not R1 then PC := 87
 69 [-]: JMP       87           ; PC := 87
 70 [-]: MOVE      R6 R4        ; R6 := R4
 71 [-]: LOADK     R7 K18       ; R7 := ""
 72 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 73 [-]: GETGLOBAL R7 K23       ; R7 := 0xae91e43b
 74 [-]: SELF      R7 R7 K24    ; R8 := R7; R7 := R7[0x42b04007]
 75 [-]: LOADK     R9 K25       ; R9 := "/Lotus/Language/Menu/Chat_CouncilTitle"
 76 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
 77 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 78 [-]: SELF      R8 R0 K19    ; R9 := R0; R8 := R0[0x9f16d8a1]
 79 [-]: GETTABLE  R10 R0 K26   ; R10 := R0["CHANNEL_ENTER"]
 80 [-]: MOVE      R11 R6       ; R11 := R6
 81 [-]: MOVE      R12 R7       ; R12 := R7
 82 [-]: GETTABLE  R13 R0 K22   ; R13 := R0["CHANNEL_COUNCIL"]
 83 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
 84 [-]: GETTABLE  R8 R0 K21    ; R8 := R0["mPanelShortcuts"]
 85 [-]: GETTABLE  R9 R0 K22    ; R9 := R0["CHANNEL_COUNCIL"]
 86 [-]: SETTABLE  R8 R9 R6     ; R8[R9] := R6
 87 [-]: SETTABLE  R0 K17 R1    ; R0["mCachedIsCounselor"] := R1
 88 [-]: RETURN    R0 1         ; return 


; Function #121.55.1:
;
; Name:            
; Defined at line: 8104
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x66edf04f]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := " "
  5 [-]: LOADK     R4 K3        ; R4 := "_"
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: LOADK     R1 K4        ; R1 := "#"
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xb730c67b]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: GETGLOBAL R3 K6        ; R3 := 0x64fb1586
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #121.56:
;
; Name:            
; Defined at line: 8126
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xc3efe18a]
  2 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0x4ddd2f2a]
  3 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  4 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
  5 [-]: RETURN    R1 0         ; return R1,...
  6 [-]: RETURN    R0 1         ; return 


; Function #121.57:
;
; Name:            
; Defined at line: 8130
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xc3efe18a]
  2 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0x5a1b5444]
  3 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  4 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
  5 [-]: RETURN    R1 0         ; return R1,...
  6 [-]: RETURN    R0 1         ; return 


; Function #121.58:
;
; Name:            
; Defined at line: 8134
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: SELF      R1 R0 K0     ; R2 := R0; R1 := R0[0xc3efe18a]
  2 [-]: SELF      R3 R0 K1     ; R4 := R0; R3 := R0[0x42355af2]
  3 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  4 [-]: TAILCALL  R1 0 0       ; R1,... := R1(R2,...)
  5 [-]: RETURN    R1 0         ; return R1,...
  6 [-]: RETURN    R0 1         ; return 


; Function #121.59:
;
; Name:            
; Defined at line: 8138
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["CHANNEL_GLOBAL"]
  2 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: SETTABLE  R0 K1 R1     ; R0["mPendingGlobalChannelName"] := R1
  5 [-]: JMP       20           ; PC := 20
  6 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["CHANNEL_RECRUITING"]
  7 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: SETTABLE  R0 K3 R1     ; R0["mPendingRecruitingChannelName"] := R1
 10 [-]: JMP       20           ; PC := 20
 11 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["CHANNEL_TRADE"]
 12 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: SETTABLE  R0 K5 R1     ; R0["mPendingTradeChannelName"] := R1
 15 [-]: JMP       20           ; PC := 20
 16 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["CHANNEL_QA"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: SETTABLE  R0 K7 R1     ; R0["mPendingQAChannelName"] := R1
 20 [-]: RETURN    R0 1         ; return 


; Function #121.60:
;
; Name:            
; Defined at line: 8151
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["CHANNEL_GLOBAL"]
  2 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 6
  3 [-]: JMP       6            ; PC := 6
  4 [-]: SETTABLE  R0 K1 R1     ; R0["mRegionChatEnabled"] := R1
  5 [-]: JMP       35           ; PC := 35
  6 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["CHANNEL_RECRUITING"]
  7 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: TESTSET   R3 R1 0      ; if not R1 then PC := 14 else R3 := R1
 10 [-]: JMP       14           ; PC := 14
 11 [-]: GETGLOBAL R3 K4        ; R3 := 0x0032441c
 12 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["StalkerMode"]
 13 [-]: NOT       R3 R3        ; R3 := not R3
 14 [-]: SETTABLE  R0 K3 R3     ; R0["mRecruitingChatEnabled"] := R3
 15 [-]: JMP       35           ; PC := 35
 16 [-]: GETTABLE  R3 R0 K6     ; R3 := R0["CHANNEL_TRADE"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 26
 18 [-]: JMP       26           ; PC := 26
 19 [-]: TESTSET   R3 R1 0      ; if not R1 then PC := 24 else R3 := R1
 20 [-]: JMP       24           ; PC := 24
 21 [-]: GETGLOBAL R3 K4        ; R3 := 0x0032441c
 22 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["StalkerMode"]
 23 [-]: NOT       R3 R3        ; R3 := not R3
 24 [-]: SETTABLE  R0 K7 R3     ; R0["mTradeChatEnabled"] := R3
 25 [-]: JMP       35           ; PC := 35
 26 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["CHANNEL_QA"]
 27 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 35
 28 [-]: JMP       35           ; PC := 35
 29 [-]: TESTSET   R3 R1 0      ; if not R1 then PC := 34 else R3 := R1
 30 [-]: JMP       34           ; PC := 34
 31 [-]: GETGLOBAL R3 K4        ; R3 := 0x0032441c
 32 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["StalkerMode"]
 33 [-]: NOT       R3 R3        ; R3 := not R3
 34 [-]: SETTABLE  R0 K9 R3     ; R0["mQAChatEnabled"] := R3
 35 [-]: RETURN    R0 1         ; return 


; Function #121.61:
;
; Name:            
; Defined at line: 8164
; #Upvalues:       1
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  16

  1 [-]: TEST      R3 0         ; if not R3 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: GETTABLE  R5 R0 K0     ; R5 := R0["mInQuestCommitment"]
  4 [-]: NOT       R3 R5        ; R3 := not R5
  5 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 34
  6 [-]: JMP       34           ; PC := 34
  7 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mIsConnected"]
  8 [-]: TEST      R5 0         ; if not R5 then PC := 34
  9 [-]: JMP       34           ; PC := 34
 10 [-]: GETTABLE  R5 R0 K3     ; R5 := R0["mVisualMode"]
 11 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["VISUAL_MODE_MENU_SIMPLE"]
 12 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 34
 13 [-]: JMP       34           ; PC := 34
 14 [-]: LOADK     R5 K5        ; R5 := "#"
 15 [-]: GETTABLE  R6 R0 K6     ; R6 := R0["mActivePanelName"]
 16 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 17 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 34
 18 [-]: JMP       34           ; PC := 34
 19 [-]: GETGLOBAL R6 K7        ; R6 := 0xe7f2b02f
 20 [-]: SELF      R6 R6 K8     ; R7 := R6; R6 := R6[0x0b151d80]
 21 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 22 [-]: GETGLOBAL R7 K9        ; R7 := 0x7b998233
 23 [-]: MOVE      R8 R6        ; R8 := R6
 24 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 25 [-]: TEST      R7 1         ; if R7 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: SELF      R7 R6 K10    ; R8 := R6; R7 := R6[0x3d07d47d]
 28 [-]: MOVE      R9 R1        ; R9 := R1
 29 [-]: CALL      R7 3 1       ; R7(R8,R9)
 30 [-]: SELF      R7 R0 K11    ; R8 := R0; R7 := R0[0xd35bde63]
 31 [-]: LOADNIL   R9 R9        ; R9 := nil
 32 [-]: MOVE      R10 R4       ; R10 := R4
 33 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 34 [-]: EQ        1 R2 K1      ; if R2 == nil then PC := 38
 35 [-]: JMP       38           ; PC := 38
 36 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 129
 37 [-]: JMP       129          ; PC := 129
 38 [-]: SELF      R7 R0 K12    ; R8 := R0; R7 := R0[0xb191db46]
 39 [-]: MOVE      R9 R3        ; R9 := R3
 40 [-]: MOVE      R10 R4       ; R10 := R4
 41 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 42 [-]: SELF      R7 R0 K13    ; R8 := R0; R7 := R0[0x69689b44]
 43 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 44 [-]: GETGLOBAL R8 K14       ; R8 := 0xae91e43b
 45 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8[0x42b04007]
 46 [-]: LOADK     R10 K16      ; R10 := "/Lotus/Language/Menu/Chat_GlobalTitle"
 47 [-]: OP_LOADBOOL R11 0 0      ; R11 := false
 48 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 49 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["CHANNEL_RECRUITING"]
 50 [-]: EQ        0 R4 R9      ; if R4 ~= R9 then PC := 62
 51 [-]: JMP       62           ; PC := 62
 52 [-]: SELF      R9 R0 K18    ; R10 := R0; R9 := R0[0xc4ae96f6]
 53 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 54 [-]: MOVE      R7 R9        ; R7 := R9
 55 [-]: GETGLOBAL R9 K14       ; R9 := 0xae91e43b
 56 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9[0x42b04007]
 57 [-]: LOADK     R11 K19      ; R11 := "/Lotus/Language/Menu/Chat_RecruitingTitle"
 58 [-]: OP_LOADBOOL R12 0 0      ; R12 := false
 59 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 60 [-]: MOVE      R8 R9        ; R8 := R9
 61 [-]: JMP       87           ; PC := 87
 62 [-]: GETTABLE  R9 R0 K20    ; R9 := R0["CHANNEL_TRADE"]
 63 [-]: EQ        0 R4 R9      ; if R4 ~= R9 then PC := 75
 64 [-]: JMP       75           ; PC := 75
 65 [-]: SELF      R9 R0 K21    ; R10 := R0; R9 := R0[0x02912a08]
 66 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 67 [-]: MOVE      R7 R9        ; R7 := R9
 68 [-]: GETGLOBAL R9 K14       ; R9 := 0xae91e43b
 69 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9[0x42b04007]
 70 [-]: LOADK     R11 K22      ; R11 := "/Lotus/Language/Menu/Chat_TradeTitle"
 71 [-]: OP_LOADBOOL R12 0 0      ; R12 := false
 72 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 73 [-]: MOVE      R8 R9        ; R8 := R9
 74 [-]: JMP       87           ; PC := 87
 75 [-]: GETTABLE  R9 R0 K23    ; R9 := R0["CHANNEL_QA"]
 76 [-]: EQ        0 R4 R9      ; if R4 ~= R9 then PC := 87
 77 [-]: JMP       87           ; PC := 87
 78 [-]: SELF      R9 R0 K24    ; R10 := R0; R9 := R0[0xbb4e1ffe]
 79 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 80 [-]: MOVE      R7 R9        ; R7 := R9
 81 [-]: GETGLOBAL R9 K14       ; R9 := 0xae91e43b
 82 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9[0x42b04007]
 83 [-]: LOADK     R11 K25      ; R11 := "/Lotus/Language/Menu/Chat_QandATitle"
 84 [-]: OP_LOADBOOL R12 0 0      ; R12 := false
 85 [-]: CALL      R9 4 2       ; R9 := R9(R10,R11,R12)
 86 [-]: MOVE      R8 R9        ; R8 := R9
 87 [-]: GETTABLE  R9 R0 K26    ; R9 := R0["mPanelShortcuts"]
 88 [-]: GETTABLE  R9 R9 R4     ; R9 := R9[R4]
 89 [-]: EQ        1 R9 K1      ; if R9 == nil then PC := 104
 90 [-]: JMP       104          ; PC := 104
 91 [-]: TEST      R3 0         ; if not R3 then PC := 97
 92 [-]: JMP       97           ; PC := 97
 93 [-]: GETTABLE  R9 R0 K26    ; R9 := R0["mPanelShortcuts"]
 94 [-]: GETTABLE  R9 R9 R4     ; R9 := R9[R4]
 95 [-]: EQ        1 R7 R9      ; if R7 == R9 then PC := 104
 96 [-]: JMP       104          ; PC := 104
 97 [-]: SELF      R9 R0 K27    ; R10 := R0; R9 := R0[0x9f16d8a1]
 98 [-]: GETTABLE  R11 R0 K28   ; R11 := R0["CHANNEL_EXIT"]
 99 [-]: GETTABLE  R12 R0 K26   ; R12 := R0["mPanelShortcuts"]
100 [-]: GETTABLE  R12 R12 R4   ; R12 := R12[R4]
101 [-]: MOVE      R13 R8       ; R13 := R8
102 [-]: MOVE      R14 R4       ; R14 := R4
103 [-]: CALL      R9 6 1       ; R9(R10,R11,R12,R13,R14)
104 [-]: TEST      R3 0         ; if not R3 then PC := 129
105 [-]: JMP       129          ; PC := 129
106 [-]: GETTABLE  R9 R0 K26    ; R9 := R0["mPanelShortcuts"]
107 [-]: GETTABLE  R9 R9 R4     ; R9 := R9[R4]
108 [-]: EQ        0 R9 K1      ; if R9 ~= nil then PC := 129
109 [-]: JMP       129          ; PC := 129
110 [-]: SELF      R9 R0 K27    ; R10 := R0; R9 := R0[0x9f16d8a1]
111 [-]: GETTABLE  R11 R0 K29   ; R11 := R0["CHANNEL_ENTER"]
112 [-]: MOVE      R12 R7       ; R12 := R7
113 [-]: MOVE      R13 R8       ; R13 := R8
114 [-]: MOVE      R14 R4       ; R14 := R4
115 [-]: OP_LOADBOOL R15 1 0      ; R15 := true
116 [-]: CALL      R9 7 1       ; R9(R10,R11,R12,R13,R14,R15)
117 [-]: GETTABLE  R9 R0 K26    ; R9 := R0["mPanelShortcuts"]
118 [-]: SETTABLE  R9 R4 R7     ; R9[R4] := R7
119 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mIsConnected"]
120 [-]: TEST      R9 1         ; if R9 then PC := 129
121 [-]: JMP       129          ; PC := 129
122 [-]: SELF      R9 R0 K30    ; R10 := R0; R9 := R0[0xd4f2405e]
123 [-]: GETGLOBAL R11 K14      ; R11 := 0xae91e43b
124 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11[0x42b04007]
125 [-]: LOADK     R13 K31      ; R13 := "/Lotus/Language/Menu/Chat_ConnectingTitle"
126 [-]: OP_LOADBOOL R14 0 0      ; R14 := false
127 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
128 [-]: CALL      R9 0 1       ; R9(R10,...)
129 [-]: GETGLOBAL R9 K32       ; R9 := 0x76ea806b
130 [-]: SELF      R9 R9 K33    ; R10 := R9; R9 := R9[0x3f3ae64c]
131 [-]: CONST     R11 0        ; R11 := 0.000000
132 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
133 [-]: GETTABLE  R10 R0 K26   ; R10 := R0["mPanelShortcuts"]
134 [-]: GETTABLE  R10 R10 R4   ; R10 := R10[R4]
135 [-]: EQ        1 R10 K1     ; if R10 == nil then PC := 186
136 [-]: JMP       186          ; PC := 186
137 [-]: GETGLOBAL R10 K9       ; R10 := 0x7b998233
138 [-]: SELF      R11 R0 K34   ; R12 := R0; R11 := R0[0x8b75da5a]
139 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
140 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
141 [-]: TEST      R10 0        ; if not R10 then PC := 186
142 [-]: JMP       186          ; PC := 186
143 [-]: GETUPVAL  R10 U0       ; R10 := U0
144 [-]: TEST      R10 0        ; if not R10 then PC := 186
145 [-]: JMP       186          ; PC := 186
146 [-]: GETGLOBAL R10 K35      ; R10 := 0x0032441c
147 [-]: GETTABLE  R10 R10 K36  ; R10 := R10["StalkerMode"]
148 [-]: TEST      R10 1        ; if R10 then PC := 186
149 [-]: JMP       186          ; PC := 186
150 [-]: SELF      R10 R9 K37   ; R11 := R9; R10 := R9[0xfe6131c3]
151 [-]: LOADK     R12 K38      ; R12 := "default_qa"
152 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
153 [-]: TEST      R10 0        ; if not R10 then PC := 174
154 [-]: JMP       174          ; PC := 174
155 [-]: GETTABLE  R10 R0 K23   ; R10 := R0["CHANNEL_QA"]
156 [-]: EQ        1 R4 R10     ; if R4 == R10 then PC := 161
157 [-]: JMP       161          ; PC := 161
158 [-]: GETGLOBAL R10 K39      ; R10 := mEnableQAChat
159 [-]: TEST      R10 1        ; if R10 then PC := 186
160 [-]: JMP       186          ; PC := 186
161 [-]: GETTABLE  R10 R0 K40   ; R10 := R0["mPanelList"]
162 [-]: GETGLOBAL R11 K41      ; R11 := 0x7f5022cf
163 [-]: GETTABLE  R11 R11 K42  ; R82 := R11[0x66edf04f]
164 [-]: GETTABLE  R12 R0 K26   ; R12 := R0["mPanelShortcuts"]
165 [-]: GETTABLE  R12 R12 R4   ; R12 := R12[R4]
166 [-]: LOADK     R13 K5       ; R13 := "#"
167 [-]: LOADK     R14 K43      ; R14 := ""
168 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
169 [-]: GETTABLE  R10 R10 R11  ; R10 := R10[R11]
170 [-]: SELF      R11 R0 K44   ; R12 := R0; R11 := R0[0x46610c50]
171 [-]: MOVE      R13 R10      ; R13 := R10
172 [-]: CALL      R11 3 1      ; R11(R12,R13)
173 [-]: JMP       186          ; PC := 186
174 [-]: GETTABLE  R11 R0 K40   ; R11 := R0["mPanelList"]
175 [-]: GETGLOBAL R12 K41      ; R12 := 0x7f5022cf
176 [-]: GETTABLE  R12 R12 K42  ; R82 := R12[0x66edf04f]
177 [-]: GETTABLE  R13 R0 K26   ; R13 := R0["mPanelShortcuts"]
178 [-]: GETTABLE  R13 R13 R4   ; R13 := R13[R4]
179 [-]: LOADK     R14 K5       ; R14 := "#"
180 [-]: LOADK     R15 K43      ; R15 := ""
181 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
182 [-]: GETTABLE  R11 R11 R12  ; R11 := R11[R12]
183 [-]: SELF      R12 R0 K44   ; R13 := R0; R12 := R0[0x46610c50]
184 [-]: MOVE      R14 R11      ; R14 := R11
185 [-]: CALL      R12 3 1      ; R12(R13,R14)
186 [-]: RETURN    R0 1         ; return 


; Function #121.62:
;
; Name:            
; Defined at line: 8228
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mGameData
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := mGameData
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xf9d7598e]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mCachedAllianceId"]
 11 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 68
 12 [-]: JMP       68           ; PC := 68
 13 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["mCachedAllianceId"]
 14 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 27
 15 [-]: JMP       27           ; PC := 27
 16 [-]: GETGLOBAL R2 K5        ; R2 := 0xe7f2b02f
 17 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x0b151d80]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 20 [-]: MOVE      R4 R2        ; R4 := R2
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: TEST      R3 1         ; if R3 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: SELF      R3 R2 K7     ; R4 := R2; R3 := R2[0xedc1beab]
 25 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: CLOSURE   R3 0         ; R3 := closure(Function #121.62.1)
 28 [-]: MOVE      R0 R0        ; R0 := R0
 29 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mCachedAllianceId"]
 30 [-]: EQ        1 R4 K4      ; if R4 == nil then PC := 46
 31 [-]: JMP       46           ; PC := 46
 32 [-]: GETTABLE  R4 R0 K3     ; R4 := R0["mCachedAllianceId"]
 33 [-]: EQ        1 R4 K8      ; if R4 == "" then PC := 46
 34 [-]: JMP       46           ; PC := 46
 35 [-]: MOVE      R4 R3        ; R4 := R3
 36 [-]: GETTABLE  R5 R0 K3     ; R5 := R0["mCachedAllianceId"]
 37 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 38 [-]: SELF      R5 R0 K9     ; R6 := R0; R5 := R0[0x9f16d8a1]
 39 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["CHANNEL_EXIT"]
 40 [-]: MOVE      R8 R4        ; R8 := R4
 41 [-]: LOADK     R9 K8        ; R9 := ""
 42 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 43 [-]: GETTABLE  R5 R0 K11    ; R5 := R0["mPanelShortcuts"]
 44 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["CHANNEL_CLAN"]
 45 [-]: SETTABLE  R5 R6 K4     ; R5[R6] := nil
 46 [-]: EQ        1 R1 K8      ; if R1 == "" then PC := 65
 47 [-]: JMP       65           ; PC := 65
 48 [-]: MOVE      R5 R3        ; R5 := R3
 49 [-]: MOVE      R6 R1        ; R6 := R1
 50 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 51 [-]: GETGLOBAL R6 K13       ; R6 := 0xae91e43b
 52 [-]: SELF      R6 R6 K14    ; R7 := R6; R6 := R6[0x42b04007]
 53 [-]: LOADK     R8 K15       ; R8 := "/Lotus/Language/Menu/Chat_AllianceTitle"
 54 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 55 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 56 [-]: SELF      R7 R0 K9     ; R8 := R0; R7 := R0[0x9f16d8a1]
 57 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["CHANNEL_ENTER"]
 58 [-]: MOVE      R10 R5       ; R10 := R5
 59 [-]: MOVE      R11 R6       ; R11 := R6
 60 [-]: GETTABLE  R12 R0 K17   ; R12 := R0["CHANNEL_ALLIANCE"]
 61 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 62 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["mPanelShortcuts"]
 63 [-]: GETTABLE  R8 R0 K17    ; R8 := R0["CHANNEL_ALLIANCE"]
 64 [-]: SETTABLE  R7 R8 R5     ; R7[R8] := R5
 65 [-]: SETTABLE  R0 K3 R1     ; R0["mCachedAllianceId"] := R1
 66 [-]: JMP       68           ; PC := 68
 67 [-]: SETTABLE  R0 K3 K8     ; R0["mCachedAllianceId"] := ""
 68 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["mCachedAllianceMotd"]
 69 [-]: GETUPVAL  R8 U0        ; R8 := U0
 70 [-]: EQ        1 R7 R8      ; if R7 == R8 then PC := 112
 71 [-]: JMP       112          ; PC := 112
 72 [-]: GETTABLE  R7 R0 K18    ; R7 := R0["mCachedAllianceMotd"]
 73 [-]: EQ        1 R7 K8      ; if R7 == "" then PC := 76
 74 [-]: JMP       76           ; PC := 76
 75 [-]: OP_LOADBOOL R7 0 1       ; R7 := false; PC := 76
 76 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 77 [-]: EQ        1 R1 K8      ; if R1 == "" then PC := 84
 78 [-]: JMP       84           ; PC := 84
 79 [-]: GETUPVAL  R8 U1        ; R8 := U1
 80 [-]: GETTABLE  R8 R8 K19    ; R82 := R8[0x23a862e6]
 81 [-]: CALL      R8 1 2       ; R8 := R8()
 82 [-]: TEST      R8 0         ; if not R8 then PC := 87
 83 [-]: JMP       87           ; PC := 87
 84 [-]: GETUPVAL  R8 U0        ; R8 := U0
 85 [-]: SETTABLE  R0 K18 R8    ; R0["mCachedAllianceMotd"] := R8
 86 [-]: JMP       112          ; PC := 112
 87 [-]: GETGLOBAL R8 K20       ; R8 := 0xcfc01047
 88 [-]: GETTABLE  R9 R0 K21    ; R9 := R0["mPanelList"]
 89 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 90 [-]: JMP       110          ; PC := 110
 91 [-]: GETGLOBAL R13 K0       ; R13 := 0x7b998233
 92 [-]: MOVE      R14 R12      ; R14 := R12
 93 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 94 [-]: TEST      R13 1        ; if R13 then PC := 110
 95 [-]: JMP       110          ; PC := 110
 96 [-]: GETTABLE  R13 R12 K22  ; R13 := R12["mChannelType"]
 97 [-]: GETTABLE  R14 R0 K17   ; R14 := R0["CHANNEL_ALLIANCE"]
 98 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 110
 99 [-]: JMP       110          ; PC := 110
100 [-]: GETTABLE  R13 R0 K23   ; R13 := R0["mActivePanelName"]
101 [-]: EQ        0 R13 R11    ; if R13 ~= R11 then PC := 110
102 [-]: JMP       110          ; PC := 110
103 [-]: SELF      R13 R12 K24  ; R14 := R12; R13 := R12[0xd4f2405e]
104 [-]: GETUPVAL  R15 U0       ; R15 := U0
105 [-]: MOVE      R16 R7       ; R16 := R7
106 [-]: CALL      R13 4 1      ; R13(R14,R15,R16)
107 [-]: GETUPVAL  R13 U0       ; R13 := U0
108 [-]: SETTABLE  R0 K18 R13   ; R0["mCachedAllianceMotd"] := R13
109 [-]: JMP       112          ; PC := 112
110 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 91; R10 := R11 end
111 [-]: JMP       91           ; PC := 91
112 [-]: RETURN    R0 1         ; return 


; Function #121.62.1:
;
; Name:            
; Defined at line: 8246
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x66edf04f]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := " "
  5 [-]: LOADK     R4 K3        ; R4 := "_"
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: LOADK     R1 K4        ; R1 := "#"
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x5992e5e7]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: GETGLOBAL R3 K6        ; R3 := 0x64fb1586
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #121.63:
;
; Name:            
; Defined at line: 8291
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  23

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mGameData
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: LOADNIL   R1 R1        ; R1 := nil
  8 [-]: GETGLOBAL R2 K1        ; R2 := mGameData
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xf8a454a7]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R2 K1        ; R2 := mGameData
 14 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0x713ce380]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: MOVE      R1 R2        ; R1 := R2
 17 [-]: JMP       19           ; PC := 19
 18 [-]: LOADK     R1 K4        ; R1 := ""
 19 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mCachedGuildId"]
 20 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 107
 21 [-]: JMP       107          ; PC := 107
 22 [-]: GETTABLE  R2 R0 K5     ; R2 := R0["mCachedGuildId"]
 23 [-]: EQ        1 R2 K6      ; if R2 == nil then PC := 36
 24 [-]: JMP       36           ; PC := 36
 25 [-]: GETGLOBAL R2 K7        ; R2 := 0xe7f2b02f
 26 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x0b151d80]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 29 [-]: MOVE      R4 R2        ; R4 := R2
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: TEST      R3 1         ; if R3 then PC := 36
 32 [-]: JMP       36           ; PC := 36
 33 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0xedc1beab]
 34 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 35 [-]: CALL      R3 3 1       ; R3(R4,R5)
 36 [-]: CLOSURE   R3 0         ; R3 := closure(Function #121.63.1)
 37 [-]: MOVE      R0 R0        ; R0 := R0
 38 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mCachedGuildId"]
 39 [-]: EQ        1 R4 K6      ; if R4 == nil then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: GETTABLE  R4 R0 K5     ; R4 := R0["mCachedGuildId"]
 42 [-]: EQ        1 R4 K4      ; if R4 == "" then PC := 55
 43 [-]: JMP       55           ; PC := 55
 44 [-]: MOVE      R4 R3        ; R4 := R3
 45 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["mCachedGuildId"]
 46 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 47 [-]: SELF      R5 R0 K10    ; R6 := R0; R5 := R0[0x9f16d8a1]
 48 [-]: GETTABLE  R7 R0 K11    ; R7 := R0["CHANNEL_EXIT"]
 49 [-]: MOVE      R8 R4        ; R8 := R4
 50 [-]: LOADK     R9 K4        ; R9 := ""
 51 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 52 [-]: GETTABLE  R5 R0 K12    ; R5 := R0["mPanelShortcuts"]
 53 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["CHANNEL_CLAN"]
 54 [-]: SETTABLE  R5 R6 K6     ; R5[R6] := nil
 55 [-]: EQ        1 R1 K4      ; if R1 == "" then PC := 74
 56 [-]: JMP       74           ; PC := 74
 57 [-]: MOVE      R5 R3        ; R5 := R3
 58 [-]: MOVE      R6 R1        ; R6 := R1
 59 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 60 [-]: GETGLOBAL R6 K14       ; R6 := 0xae91e43b
 61 [-]: SELF      R6 R6 K15    ; R7 := R6; R6 := R6[0x42b04007]
 62 [-]: LOADK     R8 K16       ; R8 := "/Lotus/Language/Menu/Chat_ClanTitle"
 63 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 64 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 65 [-]: SELF      R7 R0 K10    ; R8 := R0; R7 := R0[0x9f16d8a1]
 66 [-]: GETTABLE  R9 R0 K17    ; R9 := R0["CHANNEL_ENTER"]
 67 [-]: MOVE      R10 R5       ; R10 := R5
 68 [-]: MOVE      R11 R6       ; R11 := R6
 69 [-]: GETTABLE  R12 R0 K13   ; R12 := R0["CHANNEL_CLAN"]
 70 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
 71 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["mPanelShortcuts"]
 72 [-]: GETTABLE  R8 R0 K13    ; R8 := R0["CHANNEL_CLAN"]
 73 [-]: SETTABLE  R7 R8 R5     ; R7[R8] := R5
 74 [-]: SETTABLE  R0 K5 R1     ; R0["mCachedGuildId"] := R1
 75 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 76 [-]: GETGLOBAL R8 K14       ; R8 := 0xae91e43b
 77 [-]: SELF      R8 R8 K15    ; R9 := R8; R8 := R8[0x42b04007]
 78 [-]: LOADK     R10 K16      ; R10 := "/Lotus/Language/Menu/Chat_ClanTitle"
 79 [-]: OP_LOADBOOL R11 0 0      ; R11 := false
 80 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
 81 [-]: GETGLOBAL R9 K1        ; R9 := mGameData
 82 [-]: SELF      R9 R9 K18    ; R10 := R9; R9 := R9[0x6da6e186]
 83 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
 84 [-]: SETLIST   R7 0 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 0
 85 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 86 [-]: SETTABLE  R0 K19 R8    ; R0["mGuildSuggest"] := R8
 87 [-]: GETTABLE  R8 R7 K20    ; R8 := R7[2.000000]
 88 [-]: EQ        1 R8 K4      ; if R8 == "" then PC := 107
 89 [-]: JMP       107          ; PC := 107
 90 [-]: GETGLOBAL R8 K21       ; R8 := 0xc8802016
 91 [-]: MOVE      R9 R7        ; R9 := R7
 92 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
 93 [-]: JMP       105          ; PC := 105
 94 [-]: GETGLOBAL R13 K22      ; R13 := 0x33bdd652
 95 [-]: GETTABLE  R13 R13 K23  ; R82 := R13[0x23d5322f]
 96 [-]: GETTABLE  R14 R0 K19   ; R14 := R0["mGuildSuggest"]
 97 [-]: LOADK     R15 K24      ; R15 := "{"
 98 [-]: GETGLOBAL R16 K25      ; R16 := 0x7f5022cf
 99 [-]: GETTABLE  R16 R16 K26  ; R82 := R16[0x04981ab3]
100 [-]: MOVE      R17 R12      ; R17 := R12
101 [-]: CALL      R16 2 2      ; R16 := R16(R17)
102 [-]: LOADK     R17 K27      ; R17 := "}"
103 [-]: CONCAT    R15 R15 R17  ; R15 := R15 .. R16 .. R17
104 [-]: CALL      R13 3 1      ; R13(R14,R15)
105 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 94; R10 := R11 end
106 [-]: JMP       94           ; PC := 94
107 [-]: GETTABLE  R13 R0 K28   ; R13 := R0["mCachedGuildMotd"]
108 [-]: GETUPVAL  R14 U0       ; R14 := U0
109 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 151
110 [-]: JMP       151          ; PC := 151
111 [-]: GETTABLE  R13 R0 K28   ; R13 := R0["mCachedGuildMotd"]
112 [-]: EQ        1 R13 K4     ; if R13 == "" then PC := 115
113 [-]: JMP       115          ; PC := 115
114 [-]: OP_LOADBOOL R13 0 1      ; R13 := false; PC := 115
115 [-]: OP_LOADBOOL R13 1 0      ; R13 := true
116 [-]: EQ        1 R1 K4      ; if R1 == "" then PC := 123
117 [-]: JMP       123          ; PC := 123
118 [-]: GETUPVAL  R14 U1       ; R14 := U1
119 [-]: GETTABLE  R14 R14 K29  ; R82 := R14[0x23a862e6]
120 [-]: CALL      R14 1 2      ; R14 := R14()
121 [-]: TEST      R14 0        ; if not R14 then PC := 126
122 [-]: JMP       126          ; PC := 126
123 [-]: GETUPVAL  R14 U0       ; R14 := U0
124 [-]: SETTABLE  R0 K28 R14   ; R0["mCachedGuildMotd"] := R14
125 [-]: JMP       151          ; PC := 151
126 [-]: GETGLOBAL R14 K30      ; R14 := 0xcfc01047
127 [-]: GETTABLE  R15 R0 K31   ; R15 := R0["mPanelList"]
128 [-]: CALL      R14 2 4      ; R14,R15,R16 := R14(R15)
129 [-]: JMP       147          ; PC := 147
130 [-]: GETGLOBAL R19 K0       ; R19 := 0x7b998233
131 [-]: MOVE      R20 R18      ; R20 := R18
132 [-]: CALL      R19 2 2      ; R19 := R19(R20)
133 [-]: TEST      R19 1        ; if R19 then PC := 147
134 [-]: JMP       147          ; PC := 147
135 [-]: GETTABLE  R19 R18 K32  ; R19 := R18["mChannelType"]
136 [-]: GETTABLE  R20 R0 K13   ; R20 := R0["CHANNEL_CLAN"]
137 [-]: EQ        0 R19 R20    ; if R19 ~= R20 then PC := 147
138 [-]: JMP       147          ; PC := 147
139 [-]: GETTABLE  R19 R0 K33   ; R19 := R0["mActivePanelName"]
140 [-]: EQ        0 R19 R17    ; if R19 ~= R17 then PC := 147
141 [-]: JMP       147          ; PC := 147
142 [-]: SELF      R19 R18 K34  ; R20 := R18; R19 := R18[0xd4f2405e]
143 [-]: GETUPVAL  R21 U0       ; R21 := U0
144 [-]: MOVE      R22 R13      ; R22 := R13
145 [-]: CALL      R19 4 1      ; R19(R20,R21,R22)
146 [-]: JMP       149          ; PC := 149
147 [-]: TFORLOOP  R14 2        ; R17,R18 :=  R14(R15,R16); if R17 ~= nil then begin PC = 130; R16 := R17 end
148 [-]: JMP       130          ; PC := 130
149 [-]: GETUPVAL  R19 U0       ; R19 := U0
150 [-]: SETTABLE  R0 K28 R19   ; R0["mCachedGuildMotd"] := R19
151 [-]: RETURN    R0 1         ; return 


; Function #121.63.1:
;
; Name:            
; Defined at line: 8317
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7f5022cf
  2 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0x66edf04f]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: LOADK     R3 K2        ; R3 := " "
  5 [-]: LOADK     R4 K3        ; R4 := "_"
  6 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  7 [-]: MOVE      R0 R1        ; R0 := R1
  8 [-]: LOADK     R1 K4        ; R1 := "#"
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x9016a3d0]
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: GETGLOBAL R3 K6        ; R3 := 0x64fb1586
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 15 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 16 [-]: RETURN    R1 2         ; return R1
 17 [-]: RETURN    R0 1         ; return 


; Function #121.64:
;
; Name:            
; Defined at line: 8367
; #Upvalues:       0
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: LT        0 K0 R2      ; if 0.000000 >= R2 then PC := 22
  2 [-]: JMP       22           ; PC := 22
  3 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mVisualMode"]
  4 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["VISUAL_MODE_GAMEPLAY_SIMPLE"]
  5 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 22
  6 [-]: JMP       22           ; PC := 22
  7 [-]: SUB       R2 R2 R1     ; R2 := R2 - R1
  8 [-]: CONST     R4 100       ; R4 := 100.000000
  9 [-]: LE        0 R2 K0      ; if R2 > 0.000000 then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: CONST     R4 0         ; R4 := 0.000000
 12 [-]: JMP       16           ; PC := 16
 13 [-]: LE        0 R2 K3      ; if R2 > 1.000000 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: MUL       R4 R2 K4     ; R4 := R2 * 100.000000
 16 [-]: GETGLOBAL R5 K5        ; R5 := 0xae91e43b
 17 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0x67bc869f]
 18 [-]: MOVE      R7 R3        ; R7 := R3
 19 [-]: CONST     R8 10        ; R8 := 10.000000
 20 [-]: MOVE      R9 R4        ; R9 := R4
 21 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 22 [-]: RETURN    R2 2         ; return R2
 23 [-]: RETURN    R0 1         ; return 


; Function #121.65:
;
; Name:            
; Defined at line: 8384
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mFlashingTimer"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 71
  3 [-]: JMP       71           ; PC := 71
  4 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mFlashingTimer"]
  5 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
  6 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mDelayedFadeOutTimer"]
  7 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: OP_LOADBOOL R1 0 1       ; R1 := false; PC := 10
 10 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 11 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["mFlashAlpha"]
 13 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mFlashingTimer"]
 14 [-]: GETGLOBAL R4 K5        ; R4 := 0xb693b6c1
 15 [-]: CALL      R4 1 2       ; R4 := R4()
 16 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
 17 [-]: SETTABLE  R0 K0 R3     ; R0["mFlashingTimer"] := R3
 18 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mFlashingTimer"]
 19 [-]: LE        0 R3 K6      ; if R3 > 0.000000 then PC := 36
 20 [-]: JMP       36           ; PC := 36
 21 [-]: GETGLOBAL R3 K7        ; R3 := 0xae91e43b
 22 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0xaf5300dc]
 23 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["mClipName"]
 24 [-]: LOADK     R6 K10       ; R6 := ".Icon"
 25 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 26 [-]: CALL      R3 3 1       ; R3(R4,R5)
 27 [-]: GETGLOBAL R3 K7        ; R3 := 0xae91e43b
 28 [-]: SELF      R3 R3 K11    ; R4 := R3; R3 := R3[0xf64b7262]
 29 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["mClipName"]
 30 [-]: LOADK     R6 K12       ; R6 := "Icon"
 31 [-]: CONST     R7 1         ; R7 := 1.000000
 32 [-]: CONST     R8 8         ; R8 := 8.000000
 33 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 34 [-]: SETTABLE  R0 K0 K1     ; R0["mFlashingTimer"] := nil
 35 [-]: CONST     R2 100       ; R2 := 100.000000
 36 [-]: GETGLOBAL R3 K7        ; R3 := 0xae91e43b
 37 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0x67bc869f]
 38 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["mClipName"]
 39 [-]: CONST     R6 10        ; R6 := 10.000000
 40 [-]: MOVE      R7 R2        ; R7 := R2
 41 [-]: CALL      R3 5 1       ; R3(R4,R5,R6,R7)
 42 [-]: GETTABLE  R3 R0 K14    ; R3 := R0["mBouncing"]
 43 [-]: TEST      R3 1         ; if R3 then PC := 71
 44 [-]: JMP       71           ; PC := 71
 45 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mFlashingTimer"]
 46 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 71
 47 [-]: JMP       71           ; PC := 71
 48 [-]: SETTABLE  R0 K14 K15   ; R0["mBouncing"] := true
 49 [-]: GETGLOBAL R3 K16       ; R3 := 0x25312c9b
 50 [-]: GETGLOBAL R4 K7        ; R4 := 0xae91e43b
 51 [-]: GETTABLE  R5 R0 K9     ; R5 := R0["mClipName"]
 52 [-]: LOADK     R6 K10       ; R6 := ".Icon"
 53 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 54 [-]: CONST     R6 8         ; R6 := 8.000000
 55 [-]: NEWTABLE  R7 1 0       ; R7 := {}
 56 [-]: CONST     R8 1         ; R8 := 1.000000
 57 [-]: SETLIST   R7 1 1       ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
 58 [-]: NEWTABLE  R8 1 0       ; R8 := {}
 59 [-]: CONST     R9 0         ; R9 := 0.000000
 60 [-]: SETLIST   R8 1 1       ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
 61 [-]: CONST     R9 0         ; R9 := 0.250000
 62 [-]: GETUPVAL  R10 U0       ; R10 := U0
 63 [-]: GETTABLE  R10 R10 K18  ; R82 := R10[0x06d055f9]
 64 [-]: MOVE      R11 R1       ; R11 := R1
 65 [-]: CONST     R12 0        ; R12 := 0.000000
 66 [-]: CONST     R13 1        ; R13 := 1.000000
 67 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 68 [-]: CLOSURE   R11 0        ; R11 := closure(Function #121.65.1)
 69 [-]: MOVE      R0 R0        ; R0 := R0
 70 [-]: CALL      R3 9 1       ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
 71 [-]: RETURN    R0 1         ; return 


; Function #121.65.1:
;
; Name:            
; Defined at line: 8403
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x25312c9b
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mClipName"]
  5 [-]: LOADK     R3 K3        ; R3 := ".Icon"
  6 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  7 [-]: CONST     R3 4         ; R3 := 4.000000
  8 [-]: NEWTABLE  R4 1 0       ; R4 := {}
  9 [-]: CONST     R5 1         ; R5 := 1.000000
 10 [-]: SETLIST   R4 1 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
 11 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 12 [-]: CONST     R6 8         ; R6 := 8.000000
 13 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 14 [-]: CONST     R6 0         ; R6 := 0.500000
 15 [-]: CONST     R7 0         ; R7 := 0.000000
 16 [-]: CLOSURE   R8 0         ; R8 := closure(Function #121.65.1.1)
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: CALL      R0 9 1       ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
 19 [-]: RETURN    R0 1         ; return 


; Function #121.65.1.1:
;
; Name:            
; Defined at line: 8404
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: SETTABLE  R0 K0 K1     ; R0["mBouncing"] := false
  3 [-]: RETURN    R0 1         ; return 


; Function #121.66:
;
; Name:            
; Defined at line: 8411
; #Upvalues:       11
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  53

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mIsConnected"]
  2 [-]: TEST      R2 0         ; if not R2 then PC := 157
  3 [-]: JMP       157          ; PC := 157
  4 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
  5 [-]: GETGLOBAL R3 K2        ; R3 := mGameData
  6 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  7 [-]: TEST      R2 1         ; if R2 then PC := 14
  8 [-]: JMP       14           ; PC := 14
  9 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 10 [-]: GETGLOBAL R3 K3        ; R3 := mProfileSettings
 11 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 12 [-]: TEST      R2 0         ; if not R2 then PC := 43
 13 [-]: JMP       43           ; PC := 43
 14 [-]: GETGLOBAL R2 K4        ; R2 := 0x3d106989
 15 [-]: LOADK     R3 K5        ; R3 := "ChatRedux::Update GameData and profilesettings dead"
 16 [-]: CALL      R2 2 1       ; R2(R3)
 17 [-]: GETGLOBAL R2 K6        ; R2 := 0x76ea806b
 18 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x3f3ae64c]
 19 [-]: CONST     R4 0         ; R4 := 0.000000
 20 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 21 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 22 [-]: MOVE      R4 R2        ; R4 := R2
 23 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 24 [-]: TEST      R3 1         ; if R3 then PC := 32
 25 [-]: JMP       32           ; PC := 32
 26 [-]: SELF      R3 R2 K8     ; R4 := R2; R3 := R2[0x80563238]
 27 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 28 [-]: SETGLOBALHASH R3 K2        ; mGameData := R3
 29 [-]: SELF      R3 R2 K9     ; R4 := R2; R3 := R2[0x40e9c32b]
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: SETGLOBALHASH R3 K3        ; mProfileSettings := R3
 32 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 33 [-]: GETGLOBAL R4 K2        ; R4 := mGameData
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: TEST      R3 1         ; if R3 then PC := 42
 36 [-]: JMP       42           ; PC := 42
 37 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 38 [-]: GETGLOBAL R4 K3        ; R4 := mProfileSettings
 39 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 40 [-]: TEST      R3 0         ; if not R3 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: RETURN    R0 1         ; return 
 43 [-]: SELF      R3 R0 K10    ; R4 := R0; R3 := R0[0x0c08dc79]
 44 [-]: CALL      R3 2 1       ; R3(R4)
 45 [-]: SELF      R3 R0 K11    ; R4 := R0; R3 := R0[0xbeb137b4]
 46 [-]: CALL      R3 2 1       ; R3(R4)
 47 [-]: SELF      R3 R0 K12    ; R4 := R0; R3 := R0[0x620f162e]
 48 [-]: CALL      R3 2 1       ; R3(R4)
 49 [-]: SELF      R3 R0 K13    ; R4 := R0; R3 := R0[0x6bdb7f8b]
 50 [-]: CALL      R3 2 1       ; R3(R4)
 51 [-]: SELF      R3 R0 K14    ; R4 := R0; R3 := R0[0xa8a540b9]
 52 [-]: CALL      R3 2 1       ; R3(R4)
 53 [-]: GETGLOBAL R3 K15       ; R3 := mIsInFrontEnd
 54 [-]: TEST      R3 0         ; if not R3 then PC := 63
 55 [-]: JMP       63           ; PC := 63
 56 [-]: SELF      R3 R0 K16    ; R4 := R0; R3 := R0[0x4e618543]
 57 [-]: GETTABLE  R5 R0 K17    ; R5 := R0["mPendingGlobalChannelName"]
 58 [-]: GETTABLE  R6 R0 K18    ; R6 := R0["mRegionChatEnabled"]
 59 [-]: GETGLOBAL R7 K19       ; R7 := mEnableRegionChat
 60 [-]: GETTABLE  R8 R0 K20    ; R8 := R0["CHANNEL_GLOBAL"]
 61 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 62 [-]: JMP       72           ; PC := 72
 63 [-]: GETTABLE  R3 R0 K18    ; R3 := R0["mRegionChatEnabled"]
 64 [-]: TEST      R3 0         ; if not R3 then PC := 72
 65 [-]: JMP       72           ; PC := 72
 66 [-]: SELF      R3 R0 K16    ; R4 := R0; R3 := R0[0x4e618543]
 67 [-]: GETTABLE  R5 R0 K17    ; R5 := R0["mPendingGlobalChannelName"]
 68 [-]: GETTABLE  R6 R0 K18    ; R6 := R0["mRegionChatEnabled"]
 69 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 70 [-]: GETTABLE  R8 R0 K20    ; R8 := R0["CHANNEL_GLOBAL"]
 71 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 72 [-]: GETGLOBAL R3 K15       ; R3 := mIsInFrontEnd
 73 [-]: TEST      R3 1         ; if R3 then PC := 81
 74 [-]: JMP       81           ; PC := 81
 75 [-]: GETGLOBAL R3 K21       ; R3 := mIsInDojo
 76 [-]: TEST      R3 1         ; if R3 then PC := 81
 77 [-]: JMP       81           ; PC := 81
 78 [-]: GETGLOBAL R3 K22       ; R3 := mIsInPVP
 79 [-]: TEST      R3 0         ; if not R3 then PC := 103
 80 [-]: JMP       103          ; PC := 103
 81 [-]: GETGLOBAL R3 K23       ; R3 := mEnableRecruitingChat
 82 [-]: GETGLOBAL R4 K22       ; R4 := mIsInPVP
 83 [-]: TEST      R4 0         ; if not R4 then PC := 96
 84 [-]: JMP       96           ; PC := 96
 85 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
 86 [-]: GETGLOBAL R5 K24       ; R5 := 0xbe190284
 87 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 88 [-]: TEST      R4 1         ; if R4 then PC := 96
 89 [-]: JMP       96           ; PC := 96
 90 [-]: GETGLOBAL R4 K24       ; R4 := 0xbe190284
 91 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0x529b110d]
 92 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 93 [-]: EQ        1 R4 K27     ; if R4 == 0.000000 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
 96 [-]: SELF      R4 R0 K16    ; R5 := R0; R4 := R0[0x4e618543]
 97 [-]: GETTABLE  R6 R0 K28    ; R6 := R0["mPendingRecruitingChannelName"]
 98 [-]: GETTABLE  R7 R0 K29    ; R7 := R0["mRecruitingChatEnabled"]
 99 [-]: MOVE      R8 R3        ; R8 := R3
100 [-]: GETTABLE  R9 R0 K30    ; R9 := R0["CHANNEL_RECRUITING"]
101 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
102 [-]: JMP       112          ; PC := 112
103 [-]: GETTABLE  R4 R0 K29    ; R4 := R0["mRecruitingChatEnabled"]
104 [-]: TEST      R4 0         ; if not R4 then PC := 112
105 [-]: JMP       112          ; PC := 112
106 [-]: SELF      R4 R0 K16    ; R5 := R0; R4 := R0[0x4e618543]
107 [-]: GETTABLE  R6 R0 K28    ; R6 := R0["mPendingRecruitingChannelName"]
108 [-]: GETTABLE  R7 R0 K29    ; R7 := R0["mRecruitingChatEnabled"]
109 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
110 [-]: GETTABLE  R9 R0 K30    ; R9 := R0["CHANNEL_RECRUITING"]
111 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
112 [-]: GETGLOBAL R4 K15       ; R4 := mIsInFrontEnd
113 [-]: TEST      R4 1         ; if R4 then PC := 118
114 [-]: JMP       118          ; PC := 118
115 [-]: GETGLOBAL R4 K21       ; R4 := mIsInDojo
116 [-]: TEST      R4 0         ; if not R4 then PC := 129
117 [-]: JMP       129          ; PC := 129
118 [-]: GETGLOBAL R4 K31       ; R4 := 0xeb8fddd7
119 [-]: CALL      R4 1 2       ; R4 := R4()
120 [-]: TEST      R4 1         ; if R4 then PC := 129
121 [-]: JMP       129          ; PC := 129
122 [-]: SELF      R4 R0 K16    ; R5 := R0; R4 := R0[0x4e618543]
123 [-]: GETTABLE  R6 R0 K32    ; R6 := R0["mPendingTradeChannelName"]
124 [-]: GETTABLE  R7 R0 K33    ; R7 := R0["mTradeChatEnabled"]
125 [-]: GETGLOBAL R8 K34       ; R8 := mEnableTradeChat
126 [-]: GETTABLE  R9 R0 K35    ; R9 := R0["CHANNEL_TRADE"]
127 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
128 [-]: JMP       138          ; PC := 138
129 [-]: GETTABLE  R4 R0 K33    ; R4 := R0["mTradeChatEnabled"]
130 [-]: TEST      R4 0         ; if not R4 then PC := 138
131 [-]: JMP       138          ; PC := 138
132 [-]: SELF      R4 R0 K16    ; R5 := R0; R4 := R0[0x4e618543]
133 [-]: GETTABLE  R6 R0 K32    ; R6 := R0["mPendingTradeChannelName"]
134 [-]: GETTABLE  R7 R0 K33    ; R7 := R0["mTradeChatEnabled"]
135 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
136 [-]: GETTABLE  R9 R0 K35    ; R9 := R0["CHANNEL_TRADE"]
137 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
138 [-]: GETGLOBAL R4 K15       ; R4 := mIsInFrontEnd
139 [-]: TEST      R4 0         ; if not R4 then PC := 148
140 [-]: JMP       148          ; PC := 148
141 [-]: SELF      R4 R0 K16    ; R5 := R0; R4 := R0[0x4e618543]
142 [-]: GETTABLE  R6 R0 K36    ; R6 := R0["mPendingQAChannelName"]
143 [-]: GETTABLE  R7 R0 K37    ; R7 := R0["mQAChatEnabled"]
144 [-]: GETGLOBAL R8 K38       ; R8 := mEnableQAChat
145 [-]: GETTABLE  R9 R0 K39    ; R9 := R0["CHANNEL_QA"]
146 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
147 [-]: JMP       157          ; PC := 157
148 [-]: GETTABLE  R4 R0 K37    ; R4 := R0["mQAChatEnabled"]
149 [-]: TEST      R4 0         ; if not R4 then PC := 157
150 [-]: JMP       157          ; PC := 157
151 [-]: SELF      R4 R0 K16    ; R5 := R0; R4 := R0[0x4e618543]
152 [-]: GETTABLE  R6 R0 K36    ; R6 := R0["mPendingQAChannelName"]
153 [-]: GETTABLE  R7 R0 K37    ; R7 := R0["mQAChatEnabled"]
154 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
155 [-]: GETTABLE  R9 R0 K39    ; R9 := R0["CHANNEL_QA"]
156 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
157 [-]: GETTABLE  R4 R0 K40    ; R4 := R0["mFadeActive"]
158 [-]: TEST      R4 0         ; if not R4 then PC := 183
159 [-]: JMP       183          ; PC := 183
160 [-]: SELF      R4 R0 K42    ; R5 := R0; R4 := R0[0xb0d6bf43]
161 [-]: MOVE      R6 R1        ; R6 := R1
162 [-]: GETTABLE  R7 R0 K41    ; R7 := R0["mActiveTabListFadeOutTimer"]
163 [-]: LOADK     R8 K43       ; R8 := "Window.Hint"
164 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
165 [-]: SETTABLE  R0 K41 R4    ; R0["mActiveTabListFadeOutTimer"] := R4
166 [-]: SELF      R4 R0 K42    ; R5 := R0; R4 := R0[0xb0d6bf43]
167 [-]: MOVE      R6 R1        ; R6 := R1
168 [-]: GETTABLE  R7 R0 K44    ; R7 := R0["mActiveChatFadeOutTimer"]
169 [-]: LOADK     R8 K45       ; R8 := "Window.TabbedChatPanel"
170 [-]: CALL      R4 5 2       ; R4 := R4(R5,R6,R7,R8)
171 [-]: SETTABLE  R0 K44 R4    ; R0["mActiveChatFadeOutTimer"] := R4
172 [-]: GETTABLE  R4 R0 K41    ; R4 := R0["mActiveTabListFadeOutTimer"]
173 [-]: LE        0 R4 K27     ; if R4 > 0.000000 then PC := 183
174 [-]: JMP       183          ; PC := 183
175 [-]: GETTABLE  R4 R0 K44    ; R4 := R0["mActiveChatFadeOutTimer"]
176 [-]: LE        0 R4 K27     ; if R4 > 0.000000 then PC := 183
177 [-]: JMP       183          ; PC := 183
178 [-]: SETTABLE  R0 K40 K46   ; R0["mFadeActive"] := false
179 [-]: GETGLOBAL R4 K47       ; R4 := 0xae91e43b
180 [-]: SELF      R4 R4 K48    ; R5 := R4; R4 := R4[0x368ad758]
181 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
182 [-]: CALL      R4 3 1       ; R4(R5,R6)
183 [-]: GETUPVAL  R4 U0        ; R4 := U0
184 [-]: GETUPVAL  R5 U1        ; R5 := U1
185 [-]: MUL       R5 R5 R1     ; R5 := R5 * R1
186 [-]: ADD       R4 R4 R5     ; R4 := R4 + R5
187 [-]: SETUPVAL  R4 U0        ; U82 := 
188 [-]: GETUPVAL  R4 U0        ; R4 := U0
189 [-]: LT        1 R4 K27     ; if R4 < 0.000000 then PC := 195
190 [-]: JMP       195          ; PC := 195
191 [-]: GETUPVAL  R4 U0        ; R4 := U0
192 [-]: GETUPVAL  R5 U2        ; R5 := U2
193 [-]: LT        0 R5 R4      ; if R5 >= R4 then PC := 204
194 [-]: JMP       204          ; PC := 204
195 [-]: GETGLOBAL R4 K49       ; R4 := 0x42dcc9f5
196 [-]: GETUPVAL  R5 U0        ; R5 := U0
197 [-]: CONST     R6 0         ; R6 := 0.000000
198 [-]: GETUPVAL  R7 U2        ; R7 := U2
199 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
200 [-]: SETUPVAL  R4 U0        ; U82 := 
201 [-]: GETUPVAL  R4 U1        ; R4 := U1
202 [-]: MUL       R4 R4 K50    ; R4 := R4 * -1.000000
203 [-]: SETUPVAL  R4 U1        ; U82 := 
204 [-]: GETUPVAL  R4 U0        ; R4 := U0
205 [-]: GETUPVAL  R5 U2        ; R5 := U2
206 [-]: DIV       R4 R4 R5     ; R4 := R4 / R5
207 [-]: GETGLOBAL R5 K51       ; R5 := 0x9bafffe3
208 [-]: GETUPVAL  R6 U3        ; R6 := U3
209 [-]: GETUPVAL  R7 U4        ; R7 := U4
210 [-]: MOVE      R8 R4        ; R8 := R4
211 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
212 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
213 [-]: GETTABLE  R7 R0 K52    ; R7 := R0["mSimpleTabList"]
214 [-]: CALL      R6 2 2       ; R6 := R6(R7)
215 [-]: TEST      R6 1         ; if R6 then PC := 222
216 [-]: JMP       222          ; PC := 222
217 [-]: SETTABLE  R0 K53 R5    ; R0["mFlashAlpha"] := R5
218 [-]: GETTABLE  R6 R0 K52    ; R6 := R0["mSimpleTabList"]
219 [-]: SELF      R6 R6 K54    ; R7 := R6; R6 := R6[0xea061e98]
220 [-]: GETTABLE  R8 R0 K55    ; R8 := R0["UpdateFlashingElementDelegate"]
221 [-]: CALL      R6 3 1       ; R6(R7,R8)
222 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
223 [-]: GETTABLE  R7 R0 K56    ; R7 := R0["mInputPanel"]
224 [-]: CALL      R6 2 2       ; R6 := R6(R7)
225 [-]: TEST      R6 1         ; if R6 then PC := 259
226 [-]: JMP       259          ; PC := 259
227 [-]: GETTABLE  R6 R0 K56    ; R6 := R0["mInputPanel"]
228 [-]: GETTABLE  R6 R6 K57    ; R6 := R6["CharLimitFlashTime"]
229 [-]: LT        0 K27 R6     ; if 0.000000 >= R6 then PC := 259
230 [-]: JMP       259          ; PC := 259
231 [-]: GETTABLE  R6 R0 K56    ; R6 := R0["mInputPanel"]
232 [-]: GETTABLE  R7 R0 K56    ; R7 := R0["mInputPanel"]
233 [-]: GETTABLE  R7 R7 K57    ; R7 := R7["CharLimitFlashTime"]
234 [-]: SUB       R7 R7 R1     ; R7 := R7 - R1
235 [-]: SETTABLE  R6 K57 R7    ; R6["CharLimitFlashTime"] := R7
236 [-]: GETTABLE  R6 R0 K56    ; R6 := R0["mInputPanel"]
237 [-]: GETTABLE  R6 R6 K57    ; R6 := R6["CharLimitFlashTime"]
238 [-]: LE        0 R6 K27     ; if R6 > 0.000000 then PC := 249
239 [-]: JMP       249          ; PC := 249
240 [-]: GETGLOBAL R6 K47       ; R6 := 0xae91e43b
241 [-]: SELF      R6 R6 K58    ; R7 := R6; R6 := R6[0x67bc869f]
242 [-]: LOADK     R8 K59       ; R8 := "Window.SendMessageBar.CharLimit"
243 [-]: CONST     R9 10        ; R9 := 10.000000
244 [-]: CONST     R10 100      ; R10 := 100.000000
245 [-]: CALL      R6 5 1       ; R6(R7,R8,R9,R10)
246 [-]: GETTABLE  R6 R0 K56    ; R6 := R0["mInputPanel"]
247 [-]: SETTABLE  R6 K57 K27   ; R6["CharLimitFlashTime"] := 0.000000
248 [-]: JMP       259          ; PC := 259
249 [-]: GETGLOBAL R6 K47       ; R6 := 0xae91e43b
250 [-]: SELF      R6 R6 K58    ; R7 := R6; R6 := R6[0x67bc869f]
251 [-]: LOADK     R8 K59       ; R8 := "Window.SendMessageBar.CharLimit"
252 [-]: CONST     R9 10        ; R9 := 10.000000
253 [-]: GETGLOBAL R10 K51      ; R10 := 0x9bafffe3
254 [-]: CONST     R11 50       ; R11 := 50.000000
255 [-]: CONST     R12 100      ; R12 := 100.000000
256 [-]: MOVE      R13 R4       ; R13 := R4
257 [-]: CALL      R10 4 0      ; R10,... := R10(R11,R12,R13)
258 [-]: CALL      R6 0 1       ; R6(R7,...)
259 [-]: GETGLOBAL R6 K60       ; R6 := mWindow
260 [-]: GETTABLE  R6 R6 K61    ; R6 := R6["mVisualMode"]
261 [-]: GETGLOBAL R7 K60       ; R7 := mWindow
262 [-]: GETTABLE  R7 R7 K62    ; R7 := R7["VISUAL_MODE_GAMEPLAY_SIMPLE"]
263 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 266
264 [-]: JMP       266          ; PC := 266
265 [-]: RETURN    R0 1         ; return 
266 [-]: GETGLOBAL R6 K1        ; R6 := 0x7b998233
267 [-]: GETTABLE  R7 R0 K63    ; R7 := R0["mTabMenu"]
268 [-]: CALL      R6 2 2       ; R6 := R6(R7)
269 [-]: TEST      R6 1         ; if R6 then PC := 418
270 [-]: JMP       418          ; PC := 418
271 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
272 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
273 [-]: GETGLOBAL R8 K47       ; R8 := 0xae91e43b
274 [-]: SELF      R8 R8 K64    ; R9 := R8; R8 := R8[0x91a24e4b]
275 [-]: LOADK     R10 K65      ; R10 := "Window.TabMenu.TabMask"
276 [-]: CONST     R11 12       ; R11 := 12.000000
277 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
278 [-]: CONST     R9 1         ; R9 := 1.000000
279 [-]: GETTABLE  R10 R0 K63   ; R10 := R0["mTabMenu"]
280 [-]: SELF      R10 R10 K66  ; R11 := R10; R10 := R10[0x5fbddc1a]
281 [-]: CALL      R10 2 2      ; R10 := R10(R11)
282 [-]: CONST     R11 1        ; R11 := 1.000000
283 [-]: FORPREP   R9 333       ; R9 -= R11; PC := 333
284 [-]: GETTABLE  R13 R0 K63   ; R13 := R0["mTabMenu"]
285 [-]: SELF      R13 R13 K67  ; R14 := R13; R13 := R13[0x5465f8f3]
286 [-]: MOVE      R15 R12      ; R15 := R12
287 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
288 [-]: GETGLOBAL R14 K1       ; R14 := 0x7b998233
289 [-]: MOVE      R15 R13      ; R15 := R13
290 [-]: CALL      R14 2 2      ; R14 := R14(R15)
291 [-]: TEST      R14 1        ; if R14 then PC := 333
292 [-]: JMP       333          ; PC := 333
293 [-]: GETTABLE  R14 R13 K68  ; R14 := R13["isFlashing"]
294 [-]: TEST      R14 0        ; if not R14 then PC := 333
295 [-]: JMP       333          ; PC := 333
296 [-]: GETGLOBAL R14 K60      ; R14 := mWindow
297 [-]: GETTABLE  R14 R14 K63  ; R14 := R14["mTabMenu"]
298 [-]: SELF      R14 R14 K69  ; R15 := R14; R14 := R14[0xbb8e320d]
299 [-]: MOVE      R16 R13      ; R16 := R13
300 [-]: OP_LOADBOOL R17 0 0      ; R17 := false
301 [-]: MOVE      R18 R5       ; R18 := R5
302 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
303 [-]: GETGLOBAL R14 K47      ; R14 := 0xae91e43b
304 [-]: SELF      R14 R14 K64  ; R15 := R14; R14 := R14[0x91a24e4b]
305 [-]: GETTABLE  R16 R13 K70  ; R16 := R13["mClipName"]
306 [-]: CONST     R17 0        ; R17 := 0.000000
307 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
308 [-]: EQ        0 R14 K71    ; if R14 ~= nil then PC := 311
309 [-]: JMP       311          ; PC := 311
310 [-]: CONST     R14 0        ; R14 := 0.000000
311 [-]: GETGLOBAL R15 K47      ; R15 := 0xae91e43b
312 [-]: SELF      R15 R15 K64  ; R16 := R15; R15 := R15[0x91a24e4b]
313 [-]: GETTABLE  R17 R13 K70  ; R17 := R13["mClipName"]
314 [-]: LOADK     R18 K72      ; R18 := ".Bg"
315 [-]: CONCAT    R17 R17 R18  ; R17 := R17 .. R18
316 [-]: CONST     R18 12       ; R18 := 12.000000
317 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
318 [-]: EQ        0 R15 K71    ; if R15 ~= nil then PC := 321
319 [-]: JMP       321          ; PC := 321
320 [-]: CONST     R15 0        ; R15 := 0.000000
321 [-]: TEST      R6 1         ; if R6 then PC := 328
322 [-]: JMP       328          ; PC := 328
323 [-]: ADD       R16 R14 R15  ; R16 := R14 + R15
324 [-]: LT        0 R16 K27    ; if R16 >= 0.000000 then PC := 328
325 [-]: JMP       328          ; PC := 328
326 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
327 [-]: JMP       333          ; PC := 333
328 [-]: TEST      R7 1         ; if R7 then PC := 333
329 [-]: JMP       333          ; PC := 333
330 [-]: LT        0 R8 R14     ; if R8 >= R14 then PC := 333
331 [-]: JMP       333          ; PC := 333
332 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
333 [-]: FORLOOP   R9 284       ; R9 += R11; if R9 <= R10 then begin PC := 284; R12 := R9 end
334 [-]: GETGLOBAL R16 K60      ; R16 := mWindow
335 [-]: GETTABLE  R16 R16 K73  ; R16 := R16["mLeftArrowFocused"]
336 [-]: TEST      R16 1        ; if R16 then PC := 362
337 [-]: JMP       362          ; PC := 362
338 [-]: GETGLOBAL R16 K60      ; R16 := mWindow
339 [-]: GETTABLE  R16 R16 K74  ; R16 := R16["mLeftArrowFlashing"]
340 [-]: EQ        0 R6 R16     ; if R6 ~= R16 then PC := 344
341 [-]: JMP       344          ; PC := 344
342 [-]: TEST      R6 0         ; if not R6 then PC := 362
343 [-]: JMP       362          ; PC := 362
344 [-]: GETGLOBAL R16 K47      ; R16 := 0xae91e43b
345 [-]: SELF      R16 R16 K58  ; R17 := R16; R16 := R16[0x67bc869f]
346 [-]: GETUPVAL  R18 U5       ; R18 := U5
347 [-]: GETTABLE  R18 R18 K75  ; R82 := R18[0x06d055f9]
348 [-]: GETGLOBAL R19 K76      ; R19 := 0x34291f5c
349 [-]: GETTABLE  R19 R19 K77  ; R82 := R19[0x1467d5f4]
350 [-]: CALL      R19 1 2      ; R19 := R19()
351 [-]: LOADK     R20 K78      ; R20 := "Window.TabMenu.LeftBumper"
352 [-]: LOADK     R21 K79      ; R21 := "Window.TabMenu.LeftArrow"
353 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
354 [-]: CONST     R19 10       ; R19 := 10.000000
355 [-]: GETUPVAL  R20 U5       ; R20 := U5
356 [-]: GETTABLE  R20 R20 K75  ; R82 := R20[0x06d055f9]
357 [-]: MOVE      R21 R6       ; R21 := R6
358 [-]: MOVE      R22 R5       ; R22 := R5
359 [-]: CONST     R23 50       ; R23 := 50.000000
360 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
361 [-]: CALL      R16 0 1      ; R16(R17,...)
362 [-]: GETGLOBAL R16 K60      ; R16 := mWindow
363 [-]: GETTABLE  R16 R16 K80  ; R16 := R16["mRightArrowFocused"]
364 [-]: TEST      R16 1        ; if R16 then PC := 390
365 [-]: JMP       390          ; PC := 390
366 [-]: GETGLOBAL R16 K60      ; R16 := mWindow
367 [-]: GETTABLE  R16 R16 K81  ; R16 := R16["mRightArrowFlashing"]
368 [-]: EQ        0 R7 R16     ; if R7 ~= R16 then PC := 372
369 [-]: JMP       372          ; PC := 372
370 [-]: TEST      R7 0         ; if not R7 then PC := 390
371 [-]: JMP       390          ; PC := 390
372 [-]: GETGLOBAL R16 K47      ; R16 := 0xae91e43b
373 [-]: SELF      R16 R16 K58  ; R17 := R16; R16 := R16[0x67bc869f]
374 [-]: GETUPVAL  R18 U5       ; R18 := U5
375 [-]: GETTABLE  R18 R18 K75  ; R82 := R18[0x06d055f9]
376 [-]: GETGLOBAL R19 K76      ; R19 := 0x34291f5c
377 [-]: GETTABLE  R19 R19 K77  ; R82 := R19[0x1467d5f4]
378 [-]: CALL      R19 1 2      ; R19 := R19()
379 [-]: LOADK     R20 K82      ; R20 := "Window.TabMenu.RightBumper"
380 [-]: LOADK     R21 K83      ; R21 := "Window.TabMenu.RightArrow"
381 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
382 [-]: CONST     R19 10       ; R19 := 10.000000
383 [-]: GETUPVAL  R20 U5       ; R20 := U5
384 [-]: GETTABLE  R20 R20 K75  ; R82 := R20[0x06d055f9]
385 [-]: MOVE      R21 R7       ; R21 := R7
386 [-]: MOVE      R22 R5       ; R22 := R5
387 [-]: CONST     R23 100      ; R23 := 100.000000
388 [-]: CALL      R20 4 0      ; R20,... := R20(R21,R22,R23)
389 [-]: CALL      R16 0 1      ; R16(R17,...)
390 [-]: GETGLOBAL R16 K60      ; R16 := mWindow
391 [-]: SETTABLE  R16 K74 R6   ; R16["mLeftArrowFlashing"] := R6
392 [-]: GETGLOBAL R16 K60      ; R16 := mWindow
393 [-]: SETTABLE  R16 K81 R7   ; R16["mRightArrowFlashing"] := R7
394 [-]: GETUPVAL  R16 U6       ; R16 := U6
395 [-]: EQ        1 R16 K27    ; if R16 == 0.000000 then PC := 418
396 [-]: JMP       418          ; PC := 418
397 [-]: GETUPVAL  R16 U7       ; R16 := U7
398 [-]: EQ        1 R16 K27    ; if R16 == 0.000000 then PC := 404
399 [-]: JMP       404          ; PC := 404
400 [-]: GETUPVAL  R16 U7       ; R16 := U7
401 [-]: SUB       R16 R16 K84  ; R16 := R16 - 1.000000
402 [-]: SETUPVAL  R16 U7       ; U82 := 
403 [-]: JMP       418          ; PC := 418
404 [-]: GETGLOBAL R16 K76      ; R16 := 0x34291f5c
405 [-]: GETTABLE  R16 R16 K85  ; R82 := R16[0x318fd4bc]
406 [-]: CALL      R16 1 2      ; R16 := R16()
407 [-]: TEST      R16 0        ; if not R16 then PC := 412
408 [-]: JMP       412          ; PC := 412
409 [-]: CONST     R16 0        ; R16 := 0.000000
410 [-]: SETUPVAL  R16 U6       ; U82 := 
411 [-]: JMP       418          ; PC := 418
412 [-]: GETGLOBAL R16 K60      ; R16 := mWindow
413 [-]: SELF      R16 R16 K86  ; R17 := R16; R16 := R16[0xa5a346c9]
414 [-]: GETUPVAL  R18 U6       ; R18 := U6
415 [-]: CALL      R16 3 1      ; R16(R17,R18)
416 [-]: CONST     R16 0        ; R16 := 0.000000
417 [-]: SETUPVAL  R16 U6       ; U82 := 
418 [-]: GETGLOBAL R16 K47      ; R16 := 0xae91e43b
419 [-]: SELF      R16 R16 K87  ; R17 := R16; R16 := R16[0x54a95d6f]
420 [-]: LOADK     R18 K88      ; R18 := "Window.SendMessageBar.MessageBox"
421 [-]: CONST     R19 29       ; R19 := 29.000000
422 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
423 [-]: GETGLOBAL R17 K47      ; R17 := 0xae91e43b
424 [-]: SELF      R17 R17 K89  ; R18 := R17; R17 := R17[0xaade900e]
425 [-]: LOADK     R19 K90      ; R19 := "Window.SendMessageBar.Prompt"
426 [-]: CONST     R20 11       ; R20 := 11.000000
427 [-]: EQ        1 R16 K91    ; if R16 == "" then PC := 430
428 [-]: JMP       430          ; PC := 430
429 [-]: OP_LOADBOOL R21 0 1      ; R21 := false; PC := 430
430 [-]: OP_LOADBOOL R21 1 0      ; R21 := true
431 [-]: CALL      R17 5 1      ; R17(R18,R19,R20,R21)
432 [-]: GETGLOBAL R17 K1       ; R17 := 0x7b998233
433 [-]: GETGLOBAL R18 K60      ; R18 := mWindow
434 [-]: CALL      R17 2 2      ; R17 := R17(R18)
435 [-]: TEST      R17 1        ; if R17 then PC := 630
436 [-]: JMP       630          ; PC := 630
437 [-]: OP_LOADBOOL R17 0 0      ; R17 := false
438 [-]: OP_LOADBOOL R18 0 0      ; R18 := false
439 [-]: CONST     R19 0        ; R19 := 0.000000
440 [-]: CONST     R20 0        ; R20 := 0.000000
441 [-]: GETGLOBAL R21 K76      ; R21 := 0x34291f5c
442 [-]: GETTABLE  R21 R21 K77  ; R82 := R21[0x1467d5f4]
443 [-]: CALL      R21 1 2      ; R21 := R21()
444 [-]: TEST      R21 1        ; if R21 then PC := 512
445 [-]: JMP       512          ; PC := 512
446 [-]: GETGLOBAL R21 K60      ; R21 := mWindow
447 [-]: GETTABLE  R21 R21 K56  ; R21 := R21["mInputPanel"]
448 [-]: GETTABLE  R21 R21 K92  ; R21 := R21["mMaxMsgLength"]
449 [-]: GETGLOBAL R22 K93      ; R22 := 0x7f5022cf
450 [-]: GETTABLE  R22 R22 K94  ; R82 := R22[0x41e2ae25]
451 [-]: MOVE      R23 R16      ; R23 := R16
452 [-]: CALL      R22 2 2      ; R22 := R22(R23)
453 [-]: SUB       R21 R21 R22  ; R21 := R21 - R22
454 [-]: LE        1 R21 K95    ; if R21 <= 20.000000 then PC := 457
455 [-]: JMP       457          ; PC := 457
456 [-]: OP_LOADBOOL R17 0 1      ; R17 := false; PC := 457
457 [-]: OP_LOADBOOL R17 1 0      ; R17 := true
458 [-]: GETGLOBAL R22 K47      ; R22 := 0xae91e43b
459 [-]: SELF      R22 R22 K89  ; R23 := R22; R22 := R22[0xaade900e]
460 [-]: LOADK     R24 K96      ; R24 := "Window.SendMessageBar.CharLimit.Warning"
461 [-]: CONST     R25 11       ; R25 := 11.000000
462 [-]: MOVE      R26 R17      ; R26 := R17
463 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
464 [-]: TEST      R17 0        ; if not R17 then PC := 512
465 [-]: JMP       512          ; PC := 512
466 [-]: GETUPVAL  R22 U5       ; R22 := U5
467 [-]: GETTABLE  R22 R22 K75  ; R82 := R22[0x06d055f9]
468 [-]: LE        1 K27 R21    ; if 0.000000 <= R21 then PC := 471
469 [-]: JMP       471          ; PC := 471
470 [-]: OP_LOADBOOL R23 0 1      ; R23 := false; PC := 471
471 [-]: OP_LOADBOOL R23 1 0      ; R23 := true
472 [-]: GETGLOBAL R24 K60      ; R24 := mWindow
473 [-]: GETTABLE  R24 R24 K56  ; R24 := R24["mInputPanel"]
474 [-]: GETTABLE  R24 R24 K97  ; R24 := R24["CharLimitWarning"]
475 [-]: GETGLOBAL R25 K60      ; R25 := mWindow
476 [-]: GETTABLE  R25 R25 K56  ; R25 := R25["mInputPanel"]
477 [-]: GETTABLE  R25 R25 K98  ; R25 := R25["CharLimitError"]
478 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
479 [-]: GETGLOBAL R23 K47      ; R23 := 0xae91e43b
480 [-]: SELF      R23 R23 K99  ; R24 := R23; R23 := R23[0x5f56eeab]
481 [-]: LOADK     R25 K96      ; R25 := "Window.SendMessageBar.CharLimit.Warning"
482 [-]: CONST     R26 29       ; R26 := 29.000000
483 [-]: MOVE      R27 R22      ; R27 := R22
484 [-]: LOADK     R28 K100     ; R28 := " "
485 [-]: GETGLOBAL R29 K101     ; R29 := 0x64fb1586
486 [-]: MOVE      R30 R21      ; R30 := R21
487 [-]: CALL      R29 2 2      ; R29 := R29(R30)
488 [-]: CONCAT    R27 R27 R29  ; R27 := R27 .. R28 .. R29
489 [-]: CALL      R23 5 1      ; R23(R24,R25,R26,R27)
490 [-]: GETGLOBAL R23 K47      ; R23 := 0xae91e43b
491 [-]: SELF      R23 R23 K58  ; R24 := R23; R23 := R23[0x67bc869f]
492 [-]: LOADK     R25 K96      ; R25 := "Window.SendMessageBar.CharLimit.Warning"
493 [-]: CONST     R26 36       ; R26 := 36.000000
494 [-]: GETUPVAL  R27 U5       ; R27 := U5
495 [-]: GETTABLE  R27 R27 K75  ; R82 := R27[0x06d055f9]
496 [-]: LE        1 K27 R21    ; if 0.000000 <= R21 then PC := 499
497 [-]: JMP       499          ; PC := 499
498 [-]: OP_LOADBOOL R28 0 1      ; R28 := false; PC := 499
499 [-]: OP_LOADBOOL R28 1 0      ; R28 := true
500 [-]: GETGLOBAL R29 K102     ; R29 := 0x0032441c
501 [-]: GETTABLE  R29 R29 K103 ; R29 := R29["UIColor_Black"]
502 [-]: GETGLOBAL R30 K102     ; R30 := 0x0032441c
503 [-]: GETTABLE  R30 R30 K104 ; R30 := R30["UIColor_Red"]
504 [-]: CALL      R27 4 0      ; R27,... := R27(R28,R29,R30)
505 [-]: CALL      R23 0 1      ; R23(R24,...)
506 [-]: GETGLOBAL R23 K47      ; R23 := 0xae91e43b
507 [-]: SELF      R23 R23 K64  ; R24 := R23; R23 := R23[0x91a24e4b]
508 [-]: LOADK     R25 K96      ; R25 := "Window.SendMessageBar.CharLimit.Warning"
509 [-]: CONST     R26 33       ; R26 := 33.000000
510 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
511 [-]: ADD       R19 R23 K105 ; R19 := R23 + 16.000000
512 [-]: GETGLOBAL R23 K60      ; R23 := mWindow
513 [-]: SELF      R23 R23 K106 ; R24 := R23; R23 := R23[0x8b75da5a]
514 [-]: CALL      R23 2 2      ; R23 := R23(R24)
515 [-]: GETGLOBAL R24 K1       ; R24 := 0x7b998233
516 [-]: MOVE      R25 R23      ; R25 := R23
517 [-]: CALL      R24 2 2      ; R24 := R24(R25)
518 [-]: TEST      R24 1        ; if R24 then PC := 592
519 [-]: JMP       592          ; PC := 592
520 [-]: GETTABLE  R24 R23 K107 ; R24 := R23["mChannelType"]
521 [-]: GETGLOBAL R25 K60      ; R25 := mWindow
522 [-]: GETTABLE  R25 R25 K35  ; R25 := R25["CHANNEL_TRADE"]
523 [-]: EQ        1 R24 R25    ; if R24 == R25 then PC := 526
524 [-]: JMP       526          ; PC := 526
525 [-]: OP_LOADBOOL R24 0 1      ; R24 := false; PC := 526
526 [-]: OP_LOADBOOL R24 1 0      ; R24 := true
527 [-]: GETUPVAL  R25 U5       ; R25 := U5
528 [-]: GETTABLE  R25 R25 K75  ; R82 := R25[0x06d055f9]
529 [-]: MOVE      R26 R24      ; R26 := R24
530 [-]: GETGLOBAL R27 K102     ; R27 := 0x0032441c
531 [-]: GETTABLE  R27 R27 K108 ; R27 := R27["TradeSpamBlockTime"]
532 [-]: GETTABLE  R28 R23 K109 ; R28 := R23["mSpamBlockTime"]
533 [-]: CALL      R25 4 2      ; R25 := R25(R26,R27,R28)
534 [-]: EQ        1 R25 K71    ; if R25 == nil then PC := 592
535 [-]: JMP       592          ; PC := 592
536 [-]: GETUPVAL  R26 U5       ; R26 := U5
537 [-]: GETTABLE  R26 R26 K75  ; R82 := R26[0x06d055f9]
538 [-]: MOVE      R27 R24      ; R27 := R24
539 [-]: GETUPVAL  R28 U8       ; R28 := U8
540 [-]: GETTABLE  R28 R28 K110 ; R28 := R28["TRADE_SPAM_DETECTION_PERIOD"]
541 [-]: GETUPVAL  R29 U8       ; R29 := U8
542 [-]: GETTABLE  R29 R29 K111 ; R29 := R29["SPAM_LOCKOUT_TIME"]
543 [-]: CALL      R26 4 2      ; R26 := R26(R27,R28,R29)
544 [-]: GETGLOBAL R27 K112     ; R27 := 0x0a8f62a7
545 [-]: CALL      R27 1 2      ; R27 := R27()
546 [-]: SUB       R27 R27 R25  ; R27 := R27 - R25
547 [-]: SUB       R26 R26 R27  ; R26 := R26 - R27
548 [-]: LT        0 K27 R26    ; if 0.000000 >= R26 then PC := 592
549 [-]: JMP       592          ; PC := 592
550 [-]: GETUPVAL  R27 U5       ; R27 := U5
551 [-]: GETTABLE  R27 R27 K75  ; R82 := R27[0x06d055f9]
552 [-]: MOVE      R28 R17      ; R28 := R17
553 [-]: CONST     R29 -20      ; R29 := -20.000000
554 [-]: CONST     R30 3        ; R30 := 3.000000
555 [-]: CALL      R27 4 2      ; R27 := R27(R28,R29,R30)
556 [-]: GETGLOBAL R28 K47      ; R28 := 0xae91e43b
557 [-]: SELF      R28 R28 K58  ; R29 := R28; R28 := R28[0x67bc869f]
558 [-]: LOADK     R30 K113     ; R30 := "Window.SendMessageBar.CharLimit.SpamTime"
559 [-]: CONST     R31 1        ; R31 := 1.000000
560 [-]: MOVE      R32 R27      ; R32 := R27
561 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
562 [-]: GETGLOBAL R28 K47      ; R28 := 0xae91e43b
563 [-]: SELF      R28 R28 K99  ; R29 := R28; R28 := R28[0x5f56eeab]
564 [-]: LOADK     R30 K113     ; R30 := "Window.SendMessageBar.CharLimit.SpamTime"
565 [-]: CONST     R31 29       ; R31 := 29.000000
566 [-]: GETGLOBAL R32 K60      ; R32 := mWindow
567 [-]: GETTABLE  R32 R32 K56  ; R32 := R32["mInputPanel"]
568 [-]: GETTABLE  R32 R32 K114 ; R32 := R32["TimerIcon"]
569 [-]: LOADK     R33 K100     ; R33 := " "
570 [-]: GETGLOBAL R34 K101     ; R34 := 0x64fb1586
571 [-]: GETGLOBAL R35 K115     ; R35 := 0x5bced4c4
572 [-]: GETTABLE  R35 R35 K116 ; R82 := R35[0x55f27c30]
573 [-]: MOVE      R36 R26      ; R36 := R26
574 [-]: CALL      R35 2 0      ; R35,... := R35(R36)
575 [-]: CALL      R34 0 2      ; R34 := R34(R35,...)
576 [-]: LOADK     R35 K117     ; R35 := "s"
577 [-]: CONCAT    R32 R32 R35  ; R32 := R32 .. R33 .. R34 .. R35
578 [-]: CALL      R28 5 1      ; R28(R29,R30,R31,R32)
579 [-]: GETGLOBAL R28 K47      ; R28 := 0xae91e43b
580 [-]: SELF      R28 R28 K64  ; R29 := R28; R28 := R28[0x91a24e4b]
581 [-]: LOADK     R30 K113     ; R30 := "Window.SendMessageBar.CharLimit.SpamTime"
582 [-]: CONST     R31 33       ; R31 := 33.000000
583 [-]: CALL      R28 4 2      ; R28 := R28(R29,R30,R31)
584 [-]: ADD       R28 R28 K105 ; R28 := R28 + 16.000000
585 [-]: GETGLOBAL R29 K115     ; R29 := 0x5bced4c4
586 [-]: GETTABLE  R29 R29 K118 ; R82 := R29[0xb62ecfe0]
587 [-]: MOVE      R30 R19      ; R30 := R19
588 [-]: MOVE      R31 R28      ; R31 := R28
589 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
590 [-]: MOVE      R19 R29      ; R19 := R29
591 [-]: OP_LOADBOOL R18 1 0      ; R18 := true
592 [-]: GETGLOBAL R29 K47      ; R29 := 0xae91e43b
593 [-]: SELF      R29 R29 K89  ; R30 := R29; R29 := R29[0xaade900e]
594 [-]: LOADK     R31 K113     ; R31 := "Window.SendMessageBar.CharLimit.SpamTime"
595 [-]: CONST     R32 11       ; R32 := 11.000000
596 [-]: MOVE      R33 R18      ; R33 := R18
597 [-]: CALL      R29 5 1      ; R29(R30,R31,R32,R33)
598 [-]: TESTSET   R29 R17 1    ; if R17 then PC := 601 else R29 := R17
599 [-]: JMP       601          ; PC := 601
600 [-]: MOVE      R29 R18      ; R29 := R18
601 [-]: GETGLOBAL R30 K47      ; R30 := 0xae91e43b
602 [-]: SELF      R30 R30 K89  ; R31 := R30; R30 := R30[0xaade900e]
603 [-]: LOADK     R32 K59      ; R32 := "Window.SendMessageBar.CharLimit"
604 [-]: CONST     R33 11       ; R33 := 11.000000
605 [-]: MOVE      R34 R29      ; R34 := R29
606 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
607 [-]: TEST      R29 0        ; if not R29 then PC := 630
608 [-]: JMP       630          ; PC := 630
609 [-]: GETUPVAL  R30 U5       ; R30 := U5
610 [-]: GETTABLE  R30 R30 K75  ; R82 := R30[0x06d055f9]
611 [-]: TESTSET   R31 R17 0    ; if not R17 then PC := 614 else R31 := R17
612 [-]: JMP       614          ; PC := 614
613 [-]: MOVE      R31 R18      ; R31 := R18
614 [-]: CONST     R32 2        ; R32 := 2.000000
615 [-]: CONST     R33 1        ; R33 := 1.000000
616 [-]: CALL      R30 4 2      ; R30 := R30(R31,R32,R33)
617 [-]: MUL       R20 K119 R30 ; R20 := 23.000000 * R30
618 [-]: GETGLOBAL R30 K47      ; R30 := 0xae91e43b
619 [-]: SELF      R30 R30 K58  ; R31 := R30; R30 := R30[0x67bc869f]
620 [-]: LOADK     R32 K120     ; R32 := "Window.SendMessageBar.CharLimit.Bg"
621 [-]: CONST     R33 12       ; R33 := 12.000000
622 [-]: MOVE      R34 R19      ; R34 := R19
623 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
624 [-]: GETGLOBAL R30 K47      ; R30 := 0xae91e43b
625 [-]: SELF      R30 R30 K58  ; R31 := R30; R30 := R30[0x67bc869f]
626 [-]: LOADK     R32 K120     ; R32 := "Window.SendMessageBar.CharLimit.Bg"
627 [-]: CONST     R33 13       ; R33 := 13.000000
628 [-]: MOVE      R34 R20      ; R34 := R20
629 [-]: CALL      R30 5 1      ; R30(R31,R32,R33,R34)
630 [-]: GETUPVAL  R30 U9       ; R30 := U9
631 [-]: GETTABLE  R30 R30 K121 ; R30 := R30["RefreshChatHistoryCooldown"]
632 [-]: LT        0 K27 R30    ; if 0.000000 >= R30 then PC := 639
633 [-]: JMP       639          ; PC := 639
634 [-]: GETUPVAL  R30 U9       ; R30 := U9
635 [-]: GETUPVAL  R31 U9       ; R31 := U9
636 [-]: GETTABLE  R31 R31 K121 ; R31 := R31["RefreshChatHistoryCooldown"]
637 [-]: SUB       R31 R31 R1   ; R31 := R31 - R1
638 [-]: SETTABLE  R30 K121 R31 ; R30["RefreshChatHistoryCooldown"] := R31
639 [-]: GETGLOBAL R30 K122     ; R30 := _T
640 [-]: GETUPVAL  R31 U10      ; R31 := U10
641 [-]: CALL      R31 1 2      ; R31 := R31()
642 [-]: SETTABLE  R30 K123 R31 ; R30["MouseInChatArea"] := R31
643 [-]: GETTABLE  R30 R0 K124  ; R30 := R0["mWindowTitle"]
644 [-]: GETTABLE  R30 R30 K125 ; R30 := R30["isDragging"]
645 [-]: TEST      R30 1        ; if R30 then PC := 651
646 [-]: JMP       651          ; PC := 651
647 [-]: GETTABLE  R30 R0 K126  ; R30 := R0["mWindowStatus"]
648 [-]: GETTABLE  R30 R30 K125 ; R30 := R30["isDragging"]
649 [-]: TEST      R30 0        ; if not R30 then PC := 655
650 [-]: JMP       655          ; PC := 655
651 [-]: GETGLOBAL R30 K76      ; R30 := 0x34291f5c
652 [-]: GETTABLE  R30 R30 K127 ; R82 := R30[0xe6b41adb]
653 [-]: CALL      R30 1 2      ; R30 := R30()
654 [-]: NOT       R30 R30      ; R30 := not R30
655 [-]: TEST      R30 0        ; if not R30 then PC := 785
656 [-]: JMP       785          ; PC := 785
657 [-]: GETGLOBAL R31 K47      ; R31 := 0xae91e43b
658 [-]: SELF      R31 R31 K64  ; R32 := R31; R31 := R31[0x91a24e4b]
659 [-]: LOADK     R33 K128     ; R33 := "_root"
660 [-]: CONST     R34 25       ; R34 := 25.000000
661 [-]: CALL      R31 4 2      ; R31 := R31(R32,R33,R34)
662 [-]: GETGLOBAL R32 K47      ; R32 := 0xae91e43b
663 [-]: SELF      R32 R32 K64  ; R33 := R32; R32 := R32[0x91a24e4b]
664 [-]: LOADK     R34 K128     ; R34 := "_root"
665 [-]: CONST     R35 26       ; R35 := 26.000000
666 [-]: CALL      R32 4 2      ; R32 := R32(R33,R34,R35)
667 [-]: GETTABLE  R33 R0 K129  ; R33 := R0["mInitMouseX"]
668 [-]: EQ        0 R33 K71    ; if R33 ~= nil then PC := 684
669 [-]: JMP       684          ; PC := 684
670 [-]: SETTABLE  R0 K129 R31  ; R0["mInitMouseX"] := R31
671 [-]: SETTABLE  R0 K130 R32  ; R0["mInitMouseY"] := R32
672 [-]: GETTABLE  R33 R0 K60   ; R33 := R0["mWindow"]
673 [-]: GETTABLE  R33 R33 K132 ; R33 := R33["x"]
674 [-]: SETTABLE  R0 K131 R33  ; R0["mInitWindowX"] := R33
675 [-]: GETTABLE  R33 R0 K60   ; R33 := R0["mWindow"]
676 [-]: GETTABLE  R33 R33 K134 ; R33 := R33["y"]
677 [-]: SETTABLE  R0 K133 R33  ; R0["mInitWindowY"] := R33
678 [-]: GETTABLE  R33 R0 K60   ; R33 := R0["mWindow"]
679 [-]: GETTABLE  R33 R33 K136 ; R33 := R33["width"]
680 [-]: SETTABLE  R0 K135 R33  ; R0["mInitWindowW"] := R33
681 [-]: GETTABLE  R33 R0 K60   ; R33 := R0["mWindow"]
682 [-]: GETTABLE  R33 R33 K138 ; R33 := R33["height"]
683 [-]: SETTABLE  R0 K137 R33  ; R0["mInitWindowH"] := R33
684 [-]: GETTABLE  R33 R0 K139  ; R33 := R0["mPrevMouseX"]
685 [-]: EQ        0 R33 R31    ; if R33 ~= R31 then PC := 690
686 [-]: JMP       690          ; PC := 690
687 [-]: GETTABLE  R33 R0 K140  ; R33 := R0["mPrevMouseY"]
688 [-]: EQ        1 R33 R32    ; if R33 == R32 then PC := 751
689 [-]: JMP       751          ; PC := 751
690 [-]: GETTABLE  R33 R0 K131  ; R33 := R0["mInitWindowX"]
691 [-]: SUB       R33 R31 R33  ; R33 := R31 - R33
692 [-]: GETTABLE  R34 R0 K129  ; R34 := R0["mInitMouseX"]
693 [-]: GETTABLE  R35 R0 K131  ; R35 := R0["mInitWindowX"]
694 [-]: SUB       R34 R34 R35  ; R34 := R34 - R35
695 [-]: SUB       R33 R33 R34  ; R33 := R33 - R34
696 [-]: GETTABLE  R34 R0 K133  ; R34 := R0["mInitWindowY"]
697 [-]: SUB       R34 R32 R34  ; R34 := R32 - R34
698 [-]: GETTABLE  R35 R0 K130  ; R35 := R0["mInitMouseY"]
699 [-]: GETTABLE  R36 R0 K133  ; R36 := R0["mInitWindowY"]
700 [-]: SUB       R35 R35 R36  ; R35 := R35 - R36
701 [-]: SUB       R34 R34 R35  ; R34 := R34 - R35
702 [-]: GETTABLE  R35 R0 K124  ; R35 := R0["mWindowTitle"]
703 [-]: GETTABLE  R35 R35 K125 ; R35 := R35["isDragging"]
704 [-]: TEST      R35 0        ; if not R35 then PC := 715
705 [-]: JMP       715          ; PC := 715
706 [-]: SELF      R35 R0 K141  ; R36 := R0; R35 := R0[0x9307aa51]
707 [-]: GETTABLE  R37 R0 K131  ; R37 := R0["mInitWindowX"]
708 [-]: ADD       R37 R37 R33  ; R37 := R37 + R33
709 [-]: GETTABLE  R38 R0 K133  ; R38 := R0["mInitWindowY"]
710 [-]: ADD       R38 R38 R34  ; R38 := R38 + R34
711 [-]: OP_LOADBOOL R39 1 0      ; R39 := true
712 [-]: OP_LOADBOOL R40 0 0      ; R40 := false
713 [-]: CALL      R35 6 1      ; R35(R36,R37,R38,R39,R40)
714 [-]: JMP       782          ; PC := 782
715 [-]: GETTABLE  R35 R0 K126  ; R35 := R0["mWindowStatus"]
716 [-]: GETTABLE  R35 R35 K125 ; R35 := R35["isDragging"]
717 [-]: TEST      R35 0        ; if not R35 then PC := 782
718 [-]: JMP       782          ; PC := 782
719 [-]: GETUPVAL  R35 U9       ; R35 := U9
720 [-]: SETTABLE  R35 K142 K143; R35["ResizingWindow"] := true
721 [-]: GETTABLE  R35 R0 K126  ; R35 := R0["mWindowStatus"]
722 [-]: GETTABLE  R35 R35 K144 ; R35 := R35["ResizeClipName"]
723 [-]: GETTABLE  R36 R0 K145  ; R36 := R0["mTopResizeClipName"]
724 [-]: EQ        0 R35 R36    ; if R35 ~= R36 then PC := 734
725 [-]: JMP       734          ; PC := 734
726 [-]: SELF      R35 R0 K141  ; R36 := R0; R35 := R0[0x9307aa51]
727 [-]: GETTABLE  R37 R0 K131  ; R37 := R0["mInitWindowX"]
728 [-]: GETTABLE  R38 R0 K133  ; R38 := R0["mInitWindowY"]
729 [-]: ADD       R38 R38 R34  ; R38 := R38 + R34
730 [-]: OP_LOADBOOL R39 1 0      ; R39 := true
731 [-]: OP_LOADBOOL R40 0 0      ; R40 := false
732 [-]: CALL      R35 6 1      ; R35(R36,R37,R38,R39,R40)
733 [-]: UNM       R34 R34      ; R34 := ^ R34
734 [-]: SELF      R35 R0 K146  ; R36 := R0; R35 := R0[0xcbf89887]
735 [-]: GETGLOBAL R37 K115     ; R37 := 0x5bced4c4
736 [-]: GETTABLE  R37 R37 K147 ; R82 := R37[0xac1b386a]
737 [-]: GETTABLE  R38 R0 K135  ; R38 := R0["mInitWindowW"]
738 [-]: ADD       R38 R38 R33  ; R38 := R38 + R33
739 [-]: CONST     R39 1738     ; R39 := 1738.000000
740 [-]: CALL      R37 3 2      ; R37 := R37(R38,R39)
741 [-]: GETTABLE  R38 R0 K137  ; R38 := R0["mInitWindowH"]
742 [-]: ADD       R38 R38 R34  ; R38 := R38 + R34
743 [-]: GETUPVAL  R39 U9       ; R39 := U9
744 [-]: GETTABLE  R39 R39 K121 ; R39 := R39["RefreshChatHistoryCooldown"]
745 [-]: LE        1 R39 K27    ; if R39 <= 0.000000 then PC := 748
746 [-]: JMP       748          ; PC := 748
747 [-]: OP_LOADBOOL R39 0 1      ; R39 := false; PC := 748
748 [-]: OP_LOADBOOL R39 1 0      ; R39 := true
749 [-]: CALL      R35 5 1      ; R35(R36,R37,R38,R39)
750 [-]: JMP       782          ; PC := 782
751 [-]: GETUPVAL  R35 U9       ; R35 := U9
752 [-]: GETTABLE  R35 R35 K148 ; R35 := R35["ResizeRequired"]
753 [-]: TEST      R35 0        ; if not R35 then PC := 782
754 [-]: JMP       782          ; PC := 782
755 [-]: GETUPVAL  R35 U9       ; R35 := U9
756 [-]: GETTABLE  R35 R35 K121 ; R35 := R35["RefreshChatHistoryCooldown"]
757 [-]: LE        0 R35 K27    ; if R35 > 0.000000 then PC := 782
758 [-]: JMP       782          ; PC := 782
759 [-]: GETUPVAL  R35 U9       ; R35 := U9
760 [-]: SETTABLE  R35 K148 K46 ; R35["ResizeRequired"] := false
761 [-]: GETGLOBAL R35 K149     ; R35 := 0xcfc01047
762 [-]: GETTABLE  R36 R0 K150  ; R36 := R0["mPanelList"]
763 [-]: CALL      R35 2 4      ; R35,R36,R37 := R35(R36)
764 [-]: JMP       767          ; PC := 767
765 [-]: SELF      R40 R39 K151 ; R41 := R39; R40 := R39[0xe176d731]
766 [-]: CALL      R40 2 1      ; R40(R41)
767 [-]: TFORLOOP  R35 2        ; R38,R39 :=  R35(R36,R37); if R38 ~= nil then begin PC = 765; R37 := R38 end
768 [-]: JMP       765          ; PC := 765
769 [-]: GETGLOBAL R40 K1       ; R40 := 0x7b998233
770 [-]: GETTABLE  R41 R0 K150  ; R41 := R0["mPanelList"]
771 [-]: GETTABLE  R42 R0 K152  ; R42 := R0["mActivePanelName"]
772 [-]: GETTABLE  R41 R41 R42  ; R41 := R41[R42]
773 [-]: CALL      R40 2 2      ; R40 := R40(R41)
774 [-]: TEST      R40 1        ; if R40 then PC := 782
775 [-]: JMP       782          ; PC := 782
776 [-]: GETTABLE  R40 R0 K150  ; R40 := R0["mPanelList"]
777 [-]: GETTABLE  R41 R0 K152  ; R41 := R0["mActivePanelName"]
778 [-]: GETTABLE  R40 R40 R41  ; R40 := R40[R41]
779 [-]: SELF      R40 R40 K153 ; R41 := R40; R40 := R40[0x3bd10f9e]
780 [-]: OP_LOADBOOL R42 1 0      ; R42 := true
781 [-]: CALL      R40 3 1      ; R40(R41,R42)
782 [-]: SETTABLE  R0 K139 R31  ; R0["mPrevMouseX"] := R31
783 [-]: SETTABLE  R0 K140 R32  ; R0["mPrevMouseY"] := R32
784 [-]: JMP       824          ; PC := 824
785 [-]: SETTABLE  R0 K129 K71  ; R0["mInitMouseX"] := nil
786 [-]: SETTABLE  R0 K130 K71  ; R0["mInitMouseY"] := nil
787 [-]: SETTABLE  R0 K139 K71  ; R0["mPrevMouseX"] := nil
788 [-]: SETTABLE  R0 K140 K71  ; R0["mPrevMouseY"] := nil
789 [-]: SETTABLE  R0 K131 K71  ; R0["mInitWindowX"] := nil
790 [-]: SETTABLE  R0 K133 K71  ; R0["mInitWindowY"] := nil
791 [-]: SETTABLE  R0 K135 K71  ; R0["mInitWindowW"] := nil
792 [-]: SETTABLE  R0 K137 K71  ; R0["mInitWindowH"] := nil
793 [-]: GETUPVAL  R40 U9       ; R40 := U9
794 [-]: GETTABLE  R40 R40 K142 ; R40 := R40["ResizingWindow"]
795 [-]: TEST      R40 0        ; if not R40 then PC := 824
796 [-]: JMP       824          ; PC := 824
797 [-]: GETUPVAL  R40 U9       ; R40 := U9
798 [-]: SETTABLE  R40 K142 K46 ; R40["ResizingWindow"] := false
799 [-]: GETUPVAL  R40 U9       ; R40 := U9
800 [-]: SETTABLE  R40 K148 K46 ; R40["ResizeRequired"] := false
801 [-]: GETUPVAL  R40 U9       ; R40 := U9
802 [-]: SETTABLE  R40 K121 K27 ; R40["RefreshChatHistoryCooldown"] := 0.000000
803 [-]: GETGLOBAL R40 K149     ; R40 := 0xcfc01047
804 [-]: GETTABLE  R41 R0 K150  ; R41 := R0["mPanelList"]
805 [-]: CALL      R40 2 4      ; R40,R41,R42 := R40(R41)
806 [-]: JMP       809          ; PC := 809
807 [-]: SELF      R45 R44 K151 ; R46 := R44; R45 := R44[0xe176d731]
808 [-]: CALL      R45 2 1      ; R45(R46)
809 [-]: TFORLOOP  R40 2        ; R43,R44 :=  R40(R41,R42); if R43 ~= nil then begin PC = 807; R42 := R43 end
810 [-]: JMP       807          ; PC := 807
811 [-]: GETGLOBAL R45 K1       ; R45 := 0x7b998233
812 [-]: GETTABLE  R46 R0 K150  ; R46 := R0["mPanelList"]
813 [-]: GETTABLE  R47 R0 K152  ; R47 := R0["mActivePanelName"]
814 [-]: GETTABLE  R46 R46 R47  ; R46 := R46[R47]
815 [-]: CALL      R45 2 2      ; R45 := R45(R46)
816 [-]: TEST      R45 1        ; if R45 then PC := 824
817 [-]: JMP       824          ; PC := 824
818 [-]: GETTABLE  R45 R0 K150  ; R45 := R0["mPanelList"]
819 [-]: GETTABLE  R46 R0 K152  ; R46 := R0["mActivePanelName"]
820 [-]: GETTABLE  R45 R45 R46  ; R45 := R45[R46]
821 [-]: SELF      R45 R45 K153 ; R46 := R45; R45 := R45[0x3bd10f9e]
822 [-]: OP_LOADBOOL R47 1 0      ; R47 := true
823 [-]: CALL      R45 3 1      ; R45(R46,R47)
824 [-]: GETTABLE  R45 R0 K154  ; R45 := R0["mMouseIsDragging"]
825 [-]: EQ        1 R45 R30    ; if R45 == R30 then PC := 835
826 [-]: JMP       835          ; PC := 835
827 [-]: SELF      R45 R0 K141  ; R46 := R0; R45 := R0[0x9307aa51]
828 [-]: GETTABLE  R47 R0 K60   ; R47 := R0["mWindow"]
829 [-]: GETTABLE  R47 R47 K132 ; R47 := R47["x"]
830 [-]: GETTABLE  R48 R0 K60   ; R48 := R0["mWindow"]
831 [-]: GETTABLE  R48 R48 K134 ; R48 := R48["y"]
832 [-]: OP_LOADBOOL R49 1 0      ; R49 := true
833 [-]: OP_LOADBOOL R50 0 0      ; R50 := false
834 [-]: CALL      R45 6 1      ; R45(R46,R47,R48,R49,R50)
835 [-]: SETTABLE  R0 K154 R30  ; R0["mMouseIsDragging"] := R30
836 [-]: TEST      R30 0        ; if not R30 then PC := 840
837 [-]: JMP       840          ; PC := 840
838 [-]: GETGLOBAL R45 K122     ; R45 := _T
839 [-]: SETTABLE  R45 K123 K143; R45["MouseInChatArea"] := true
840 [-]: GETTABLE  R45 R0 K155  ; R45 := R0["mUserPanel"]
841 [-]: SELF      R45 R45 K156 ; R46 := R45; R45 := R45[0xfaa69527]
842 [-]: MOVE      R47 R1       ; R47 := R1
843 [-]: CALL      R45 3 1      ; R45(R46,R47)
844 [-]: GETGLOBAL R45 K149     ; R45 := 0xcfc01047
845 [-]: GETTABLE  R46 R0 K150  ; R46 := R0["mPanelList"]
846 [-]: CALL      R45 2 4      ; R45,R46,R47 := R45(R46)
847 [-]: JMP       856          ; PC := 856
848 [-]: GETGLOBAL R50 K1       ; R50 := 0x7b998233
849 [-]: MOVE      R51 R49      ; R51 := R49
850 [-]: CALL      R50 2 2      ; R50 := R50(R51)
851 [-]: TEST      R50 1        ; if R50 then PC := 856
852 [-]: JMP       856          ; PC := 856
853 [-]: SELF      R50 R49 K156 ; R51 := R49; R50 := R49[0xfaa69527]
854 [-]: MOVE      R52 R1       ; R52 := R1
855 [-]: CALL      R50 3 1      ; R50(R51,R52)
856 [-]: TFORLOOP  R45 2        ; R48,R49 :=  R45(R46,R47); if R48 ~= nil then begin PC = 848; R47 := R48 end
857 [-]: JMP       848          ; PC := 848
858 [-]: RETURN    R0 1         ; return 


; Function #121.67:
;
; Name:            
; Defined at line: 8706
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: NEWTABLE  R3 4 0       ; R3 := {}
  2 [-]: LOADK     R4 K0        ; R4 := "Window.TabMenu.WindowTitle"
  3 [-]: LOADK     R5 K1        ; R5 := "Window.TabMenu.TabDivLine"
  4 [-]: LOADK     R6 K2        ; R6 := "Window.WindowStatus"
  5 [-]: LOADK     R7 K3        ; R7 := "Window.TabMenu.Resize"
  6 [-]: SETLIST   R3 4 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 4
  7 [-]: TEST      R2 0         ; if not R2 then PC := 32
  8 [-]: JMP       32           ; PC := 32
  9 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 10 [-]: GETGLOBAL R5 K5        ; R5 := 0x0032441c
 11 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["UISound_WindowOpen"]
 12 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 13 [-]: TEST      R4 1         ; if R4 then PC := 32
 14 [-]: JMP       32           ; PC := 32
 15 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 16 [-]: GETGLOBAL R5 K5        ; R5 := 0x0032441c
 17 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["UISound_WindowClose"]
 18 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 19 [-]: TEST      R4 1         ; if R4 then PC := 32
 20 [-]: JMP       32           ; PC := 32
 21 [-]: GETUPVAL  R4 U0        ; R4 := U0
 22 [-]: GETTABLE  R4 R4 K8     ; R82 := R4[0x659d451f]
 23 [-]: GETUPVAL  R5 U0        ; R5 := U0
 24 [-]: GETTABLE  R5 R5 K9     ; R82 := R5[0x06d055f9]
 25 [-]: NOT       R6 R1        ; R6 := not R1
 26 [-]: GETGLOBAL R7 K5        ; R7 := 0x0032441c
 27 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["UISound_WindowOpen"]
 28 [-]: GETGLOBAL R8 K5        ; R8 := 0x0032441c
 29 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["UISound_WindowClose"]
 30 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 31 [-]: CALL      R4 0 1       ; R4(R5,...)
 32 [-]: CONST     R4 0         ; R4 := 0.000000
 33 [-]: TEST      R1 0         ; if not R1 then PC := 48
 34 [-]: JMP       48           ; PC := 48
 35 [-]: GETTABLE  R5 R0 K10    ; R5 := R0["mWindow"]
 36 [-]: GETTABLE  R5 R5 K11    ; R5 := R5["y"]
 37 [-]: GETGLOBAL R6 K12       ; R6 := mViewportHeight
 38 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["mWindow"]
 39 [-]: GETTABLE  R7 R7 K11    ; R7 := R7["y"]
 40 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mWindow"]
 41 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["height"]
 42 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 43 [-]: SUB       R6 R6 R7     ; R6 := R6 - R7
 44 [-]: LT        0 R6 R5      ; if R6 >= R5 then PC := 48
 45 [-]: JMP       48           ; PC := 48
 46 [-]: GETTABLE  R7 R0 K10    ; R7 := R0["mWindow"]
 47 [-]: GETTABLE  R4 R7 K13    ; R4 := R7["height"]
 48 [-]: GETGLOBAL R7 K14       ; R7 := 0xae91e43b
 49 [-]: SELF      R7 R7 K15    ; R8 := R7; R7 := R7[0xaade900e]
 50 [-]: LOADK     R9 K16       ; R9 := "Window.TabMenu.ExpandCallout"
 51 [-]: CONST     R10 11       ; R10 := 11.000000
 52 [-]: MOVE      R11 R1       ; R11 := R1
 53 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 54 [-]: GETGLOBAL R7 K14       ; R7 := 0xae91e43b
 55 [-]: SELF      R7 R7 K17    ; R8 := R7; R7 := R7[0x67bc869f]
 56 [-]: LOADK     R9 K18       ; R9 := "Window.TabMenu"
 57 [-]: CONST     R10 1        ; R10 := 1.000000
 58 [-]: MOVE      R11 R4       ; R11 := R4
 59 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
 60 [-]: GETGLOBAL R7 K19       ; R7 := 0x34291f5c
 61 [-]: GETTABLE  R7 R7 K20    ; R82 := R7[0xe6b41adb]
 62 [-]: CALL      R7 1 2       ; R7 := R7()
 63 [-]: TEST      R7 0         ; if not R7 then PC := 84
 64 [-]: JMP       84           ; PC := 84
 65 [-]: CONST     R7 1         ; R7 := 1.000000
 66 [-]: GETGLOBAL R8 K10       ; R8 := mWindow
 67 [-]: GETTABLE  R8 R8 K21    ; R8 := R8["mTabMenu"]
 68 [-]: SELF      R8 R8 K22    ; R9 := R8; R8 := R8[0x5fbddc1a]
 69 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 70 [-]: CONST     R9 1         ; R9 := 1.000000
 71 [-]: FORPREP   R7 83        ; R7 -= R9; PC := 83
 72 [-]: GETGLOBAL R11 K14      ; R11 := 0xae91e43b
 73 [-]: SELF      R11 R11 K15  ; R12 := R11; R11 := R11[0xaade900e]
 74 [-]: GETGLOBAL R13 K10      ; R13 := mWindow
 75 [-]: GETTABLE  R13 R13 K21  ; R13 := R13["mTabMenu"]
 76 [-]: SELF      R13 R13 K23  ; R14 := R13; R13 := R13[0x5465f8f3]
 77 [-]: MOVE      R15 R10      ; R15 := R10
 78 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
 79 [-]: GETTABLE  R13 R13 K24  ; R13 := R13["mClipName"]
 80 [-]: CONST     R14 11       ; R14 := 11.000000
 81 [-]: NOT       R15 R1       ; R15 := not R1
 82 [-]: CALL      R11 5 1      ; R11(R12,R13,R14,R15)
 83 [-]: FORLOOP   R7 72        ; R7 += R9; if R7 <= R8 then begin PC := 72; R10 := R7 end
 84 [-]: CONST     R11 1        ; R11 := 1.000000
 85 [-]: LEN       R12 R3       ; R12 := # R3
 86 [-]: CONST     R13 1        ; R13 := 1.000000
 87 [-]: FORPREP   R11 94       ; R11 -= R13; PC := 94
 88 [-]: GETGLOBAL R15 K14      ; R15 := 0xae91e43b
 89 [-]: SELF      R15 R15 K15  ; R16 := R15; R15 := R15[0xaade900e]
 90 [-]: GETTABLE  R17 R3 R14   ; R17 := R3[R14]
 91 [-]: CONST     R18 11       ; R18 := 11.000000
 92 [-]: NOT       R19 R1       ; R19 := not R1
 93 [-]: CALL      R15 5 1      ; R15(R16,R17,R18,R19)
 94 [-]: FORLOOP   R11 88       ; R11 += R13; if R11 <= R12 then begin PC := 88; R14 := R11 end
 95 [-]: SELF      R15 R0 K25   ; R16 := R0; R15 := R0[0x161dbc67]
 96 [-]: CALL      R15 2 1      ; R15(R16)
 97 [-]: SELF      R15 R0 K26   ; R16 := R0; R15 := R0[0x9307aa51]
 98 [-]: GETTABLE  R17 R0 K10   ; R17 := R0["mWindow"]
 99 [-]: GETTABLE  R17 R17 K27  ; R17 := R17["x"]
100 [-]: GETTABLE  R18 R0 K10   ; R18 := R0["mWindow"]
101 [-]: GETTABLE  R18 R18 K11  ; R18 := R18["y"]
102 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
103 [-]: MOVE      R20 R2       ; R20 := R2
104 [-]: CALL      R15 6 1      ; R15(R16,R17,R18,R19,R20)
105 [-]: RETURN    R0 1         ; return 


; Function #121.68:
;
; Name:            
; Defined at line: 8750
; #Upvalues:       2
; #Parameters:     5
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: CONST     R5 10        ; R5 := 10.000000
  2 [-]: GETGLOBAL R6 K0        ; R6 := mViewportWidth
  3 [-]: GETGLOBAL R7 K1        ; R7 := mViewportHeight
  4 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["mWindow"]
  5 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["width"]
  6 [-]: GETTABLE  R9 R0 K2     ; R9 := R0["mWindow"]
  7 [-]: GETTABLE  R9 R9 K4     ; R9 := R9["height"]
  8 [-]: GETUPVAL  R10 U0       ; R10 := U0
  9 [-]: GETTABLE  R10 R10 K5   ; R82 := R10[0x06d055f9]
 10 [-]: GETUPVAL  R11 U0       ; R11 := U0
 11 [-]: GETTABLE  R11 R11 K6   ; R82 := R11[0x37443bd9]
 12 [-]: CALL      R11 1 2      ; R11 := R11()
 13 [-]: GETUPVAL  R12 U1       ; R12 := U1
 14 [-]: DIV       R12 R12 K7   ; R12 := R12 / 2.000000
 15 [-]: MUL       R12 R6 R12   ; R12 := R6 * R12
 16 [-]: CONST     R13 0        ; R13 := 0.000000
 17 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
 18 [-]: GETUPVAL  R11 U0       ; R11 := U0
 19 [-]: GETTABLE  R11 R11 K5   ; R82 := R11[0x06d055f9]
 20 [-]: GETUPVAL  R12 U0       ; R12 := U0
 21 [-]: GETTABLE  R12 R12 K6   ; R82 := R12[0x37443bd9]
 22 [-]: CALL      R12 1 2      ; R12 := R12()
 23 [-]: GETUPVAL  R13 U1       ; R13 := U1
 24 [-]: DIV       R13 R13 K7   ; R13 := R13 / 2.000000
 25 [-]: MUL       R13 R7 R13   ; R13 := R7 * R13
 26 [-]: CONST     R14 0        ; R14 := 0.000000
 27 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
 28 [-]: GETGLOBAL R12 K8       ; R12 := 0x34291f5c
 29 [-]: GETTABLE  R12 R12 K9   ; R82 := R12[0xe6b41adb]
 30 [-]: CALL      R12 1 2      ; R12 := R12()
 31 [-]: TEST      R12 0        ; if not R12 then PC := 39
 32 [-]: JMP       39           ; PC := 39
 33 [-]: GETGLOBAL R12 K10      ; R12 := miOSChatScale
 34 [-]: MUL       R10 R10 R12  ; R10 := R10 * R12
 35 [-]: GETGLOBAL R12 K10      ; R12 := miOSChatScale
 36 [-]: MUL       R11 R11 R12  ; R11 := R11 * R12
 37 [-]: GETGLOBAL R12 K10      ; R12 := miOSChatScale
 38 [-]: MUL       R5 R5 R12    ; R5 := R5 * R12
 39 [-]: GETTABLE  R12 R0 K11   ; R12 := R0["mVisualMode"]
 40 [-]: GETTABLE  R13 R0 K12   ; R13 := R0["VISUAL_MODE_MENU_SIMPLE"]
 41 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 58
 42 [-]: JMP       58           ; PC := 58
 43 [-]: GETGLOBAL R12 K13      ; R12 := 0xae91e43b
 44 [-]: SELF      R12 R12 K14  ; R13 := R12; R12 := R12[0x91a24e4b]
 45 [-]: LOADK     R14 K15      ; R14 := "Window.TabMenu"
 46 [-]: CONST     R15 1        ; R15 := 1.000000
 47 [-]: CALL      R12 4 2      ; R12 := R12(R13,R14,R15)
 48 [-]: ADD       R12 R2 R12   ; R12 := R2 + R12
 49 [-]: GETGLOBAL R13 K16      ; R13 := 0x42dcc9f5
 50 [-]: MOVE      R14 R12      ; R14 := R12
 51 [-]: MOVE      R15 R11      ; R15 := R11
 52 [-]: SUB       R16 R7 K17   ; R16 := R7 - 33.000000
 53 [-]: SUB       R16 R16 R11  ; R16 := R16 - R11
 54 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
 55 [-]: SUB       R14 R13 R12  ; R14 := R13 - R12
 56 [-]: ADD       R2 R2 R14    ; R2 := R2 + R14
 57 [-]: JMP       67           ; PC := 67
 58 [-]: GETGLOBAL R14 K16      ; R14 := 0x42dcc9f5
 59 [-]: MOVE      R15 R2       ; R15 := R2
 60 [-]: MOVE      R16 R11      ; R16 := R11
 61 [-]: SUB       R17 R7 R9    ; R17 := R7 - R9
 62 [-]: MUL       R18 R5 K18   ; R18 := R5 * 3.000000
 63 [-]: ADD       R18 R18 R11  ; R18 := R18 + R11
 64 [-]: SUB       R17 R17 R18  ; R17 := R17 - R18
 65 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 66 [-]: MOVE      R2 R14       ; R2 := R14
 67 [-]: GETTABLE  R14 R0 K19   ; R14 := R0["mUserPanel"]
 68 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["mIsExpanded"]
 69 [-]: TEST      R14 0        ; if not R14 then PC := 84
 70 [-]: JMP       84           ; PC := 84
 71 [-]: GETTABLE  R14 R0 K19   ; R14 := R0["mUserPanel"]
 72 [-]: GETTABLE  R14 R14 K2   ; R14 := R14["mWindow"]
 73 [-]: GETTABLE  R14 R14 K3   ; R14 := R14["width"]
 74 [-]: ADD       R8 R8 R14    ; R8 := R8 + R14
 75 [-]: GETTABLE  R14 R0 K19   ; R14 := R0["mUserPanel"]
 76 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["mUserLocator"]
 77 [-]: GETTABLE  R14 R14 K20  ; R14 := R14["mIsExpanded"]
 78 [-]: TEST      R14 0        ; if not R14 then PC := 84
 79 [-]: JMP       84           ; PC := 84
 80 [-]: GETTABLE  R14 R0 K19   ; R14 := R0["mUserPanel"]
 81 [-]: GETTABLE  R14 R14 K21  ; R14 := R14["mUserLocator"]
 82 [-]: GETTABLE  R14 R14 K22  ; R14 := R14["mGridWidth"]
 83 [-]: ADD       R8 R8 R14    ; R8 := R8 + R14
 84 [-]: GETGLOBAL R14 K16      ; R14 := 0x42dcc9f5
 85 [-]: MOVE      R15 R1       ; R15 := R1
 86 [-]: MOVE      R16 R10      ; R16 := R10
 87 [-]: SUB       R17 R6 R8    ; R17 := R6 - R8
 88 [-]: SUB       R17 R17 R10  ; R17 := R17 - R10
 89 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
 90 [-]: MOVE      R1 R14       ; R1 := R14
 91 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mWindow"]
 92 [-]: SETTABLE  R14 K23 R1   ; R14["x"] := R1
 93 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mWindow"]
 94 [-]: SETTABLE  R14 K24 R2   ; R14["y"] := R2
 95 [-]: GETGLOBAL R14 K13      ; R14 := 0xae91e43b
 96 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
 97 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["mClipName"]
 98 [-]: CONST     R17 0        ; R17 := 0.000000
 99 [-]: MOVE      R18 R1       ; R18 := R1
100 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
101 [-]: GETGLOBAL R14 K13      ; R14 := 0xae91e43b
102 [-]: SELF      R14 R14 K25  ; R15 := R14; R14 := R14[0x67bc869f]
103 [-]: GETTABLE  R16 R0 K26   ; R16 := R0["mClipName"]
104 [-]: CONST     R17 1        ; R17 := 1.000000
105 [-]: MOVE      R18 R2       ; R18 := R2
106 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
107 [-]: GETGLOBAL R14 K8       ; R14 := 0x34291f5c
108 [-]: GETTABLE  R14 R14 K27  ; R82 := R14[0x1467d5f4]
109 [-]: CALL      R14 1 2      ; R14 := R14()
110 [-]: TEST      R14 1        ; if R14 then PC := 155
111 [-]: JMP       155          ; PC := 155
112 [-]: GETGLOBAL R14 K8       ; R14 := 0x34291f5c
113 [-]: GETTABLE  R14 R14 K9   ; R82 := R14[0xe6b41adb]
114 [-]: CALL      R14 1 2      ; R14 := R14()
115 [-]: TEST      R14 1        ; if R14 then PC := 155
116 [-]: JMP       155          ; PC := 155
117 [-]: TEST      R3 0         ; if not R3 then PC := 155
118 [-]: JMP       155          ; PC := 155
119 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mWindow"]
120 [-]: GETTABLE  R14 R14 K24  ; R14 := R14["y"]
121 [-]: GETGLOBAL R15 K1       ; R15 := mViewportHeight
122 [-]: DIV       R15 R15 K7   ; R15 := R15 / 2.000000
123 [-]: LT        0 R15 R14    ; if R15 >= R14 then PC := 128
124 [-]: JMP       128          ; PC := 128
125 [-]: GETTABLE  R14 R0 K2    ; R14 := R0["mWindow"]
126 [-]: GETTABLE  R14 R14 K4   ; R14 := R14["height"]
127 [-]: ADD       R2 R2 R14    ; R2 := R2 + R14
128 [-]: GETGLOBAL R14 K16      ; R14 := 0x42dcc9f5
129 [-]: DIV       R15 R1 R6    ; R15 := R1 / R6
130 [-]: CONST     R16 0        ; R16 := 0.000000
131 [-]: CONST     R17 1        ; R17 := 1.000000
132 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
133 [-]: GETGLOBAL R15 K16      ; R15 := 0x42dcc9f5
134 [-]: DIV       R16 R2 R7    ; R16 := R2 / R7
135 [-]: CONST     R17 0        ; R17 := 0.000000
136 [-]: CONST     R18 1        ; R18 := 1.000000
137 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
138 [-]: GETGLOBAL R16 K28      ; R16 := 0x7b998233
139 [-]: GETGLOBAL R17 K29      ; R17 := mProfileSettings
140 [-]: CALL      R16 2 2      ; R16 := R16(R17)
141 [-]: TEST      R16 1        ; if R16 then PC := 155
142 [-]: JMP       155          ; PC := 155
143 [-]: GETGLOBAL R16 K29      ; R16 := mProfileSettings
144 [-]: SELF      R16 R16 K30  ; R17 := R16; R16 := R16[0xea6e21b7]
145 [-]: GETGLOBAL R18 K31      ; R18 := mIsInFrontEnd
146 [-]: OP_LOADBOOL R19 1 0      ; R19 := true
147 [-]: MOVE      R20 R14      ; R20 := R14
148 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
149 [-]: GETGLOBAL R16 K29      ; R16 := mProfileSettings
150 [-]: SELF      R16 R16 K30  ; R17 := R16; R16 := R16[0xea6e21b7]
151 [-]: GETGLOBAL R18 K31      ; R18 := mIsInFrontEnd
152 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
153 [-]: MOVE      R20 R15      ; R20 := R15
154 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
155 [-]: RETURN    R0 1         ; return 


; Function #121.69:
;
; Name:            
; Defined at line: 8802
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xc0a3774b]
  3 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["mClipName"]
  4 [-]: LOADK     R4 K3        ; R4 := "TabMenu.MinMaxBtn.Separator"
  5 [-]: CONST     R5 11        ; R5 := 11.000000
  6 [-]: GETTABLE  R6 R0 K4     ; R6 := R0["mVisualMode"]
  7 [-]: GETTABLE  R7 R0 K5     ; R7 := R0["VISUAL_MODE_MENU_SIMPLE"]
  8 [-]: EQ        0 R6 R7      ; if R6 ~= R7 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R6 K6        ; R6 := 0x34291f5c
 11 [-]: GETTABLE  R6 R6 K7     ; R82 := R6[0xe6b41adb]
 12 [-]: CALL      R6 1 2       ; R6 := R6()
 13 [-]: NOT       R6 R6        ; R6 := not R6
 14 [-]: JMP       17           ; PC := 17
 15 [-]: OP_LOADBOOL R6 0 1       ; R6 := false; PC := 16
 16 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 17 [-]: CALL      R1 6 1       ; R1(R2,R3,R4,R5,R6)
 18 [-]: GETTABLE  R1 R0 K8     ; R1 := R0["mWindow"]
 19 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["width"]
 20 [-]: SUB       R1 R1 K10    ; R1 := R1 - 27.000000
 21 [-]: GETTABLE  R2 R0 K4     ; R2 := R0["mVisualMode"]
 22 [-]: GETTABLE  R3 R0 K5     ; R3 := R0["VISUAL_MODE_MENU_SIMPLE"]
 23 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 47
 24 [-]: JMP       47           ; PC := 47
 25 [-]: GETGLOBAL R2 K6        ; R2 := 0x34291f5c
 26 [-]: GETTABLE  R2 R2 K7     ; R82 := R2[0xe6b41adb]
 27 [-]: CALL      R2 1 2       ; R2 := R2()
 28 [-]: TEST      R2 1         ; if R2 then PC := 47
 29 [-]: JMP       47           ; PC := 47
 30 [-]: GETUPVAL  R2 U0        ; R2 := U0
 31 [-]: GETTABLE  R2 R2 K11    ; R82 := R2[0x06d055f9]
 32 [-]: GETGLOBAL R3 K6        ; R3 := 0x34291f5c
 33 [-]: GETTABLE  R3 R3 K12    ; R82 := R3[0x1467d5f4]
 34 [-]: CALL      R3 1 2       ; R3 := R3()
 35 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 36 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4[0x91a24e4b]
 37 [-]: LOADK     R6 K14       ; R6 := "Window.TabMenu.RightBumper"
 38 [-]: CONST     R7 0         ; R7 := 0.000000
 39 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 40 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 41 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0x91a24e4b]
 42 [-]: LOADK     R7 K15       ; R7 := "Window.TabMenu.RightArrow"
 43 [-]: CONST     R8 0         ; R8 := 0.000000
 44 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 45 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 46 [-]: SUB       R1 R2 K16    ; R1 := R2 - 6.000000
 47 [-]: GETGLOBAL R3 K6        ; R3 := 0x34291f5c
 48 [-]: GETTABLE  R3 R3 K7     ; R82 := R3[0xe6b41adb]
 49 [-]: CALL      R3 1 2       ; R3 := R3()
 50 [-]: TEST      R3 0         ; if not R3 then PC := 93
 51 [-]: JMP       93           ; PC := 93
 52 [-]: CONST     R3 49        ; R3 := 49.000000
 53 [-]: GETTABLE  R4 R0 K8     ; R4 := R0["mWindow"]
 54 [-]: GETTABLE  R4 R4 K17    ; R4 := R4["height"]
 55 [-]: SUB       R4 R4 K18    ; R4 := R4 - 101.000000
 56 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 57 [-]: SELF      R5 R5 K19    ; R6 := R5; R5 := R5[0xaade900e]
 58 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
 59 [-]: LOADK     R8 K20       ; R8 := ".TabMenu.MinMaxBtn"
 60 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 61 [-]: CONST     R8 11        ; R8 := 11.000000
 62 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 63 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 64 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 65 [-]: SELF      R5 R5 K13    ; R6 := R5; R5 := R5[0x91a24e4b]
 66 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mClipName"]
 67 [-]: CONST     R8 0         ; R8 := 0.000000
 68 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 69 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
 70 [-]: SELF      R6 R6 K13    ; R7 := R6; R6 := R6[0x91a24e4b]
 71 [-]: GETTABLE  R8 R0 K2     ; R8 := R0["mClipName"]
 72 [-]: CONST     R9 1         ; R9 := 1.000000
 73 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 74 [-]: UNM       R7 R5        ; R7 := ^ R5
 75 [-]: ADD       R1 R7 R3     ; R1 := R7 + R3
 76 [-]: UNM       R7 R6        ; R7 := ^ R6
 77 [-]: ADD       R7 R7 R4     ; R7 := R7 + R4
 78 [-]: GETTABLE  R8 R0 K4     ; R8 := R0["mVisualMode"]
 79 [-]: GETTABLE  R9 R0 K5     ; R9 := R0["VISUAL_MODE_MENU_SIMPLE"]
 80 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 85
 81 [-]: JMP       85           ; PC := 85
 82 [-]: GETTABLE  R8 R0 K8     ; R8 := R0["mWindow"]
 83 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["height"]
 84 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 85 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
 86 [-]: SELF      R8 R8 K21    ; R9 := R8; R8 := R8[0x67bc869f]
 87 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
 88 [-]: LOADK     R11 K20      ; R11 := ".TabMenu.MinMaxBtn"
 89 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 90 [-]: CONST     R11 1        ; R11 := 1.000000
 91 [-]: MOVE      R12 R7       ; R12 := R7
 92 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 93 [-]: GETGLOBAL R8 K22       ; R8 := 0x38f10e85
 94 [-]: GETGLOBAL R9 K0        ; R9 := 0xae91e43b
 95 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
 96 [-]: LOADK     R11 K23      ; R11 := ".TabMenu.MinMaxBtn.Icon.gotoAndStop"
 97 [-]: CONCAT    R10 R10 R11  ; R10 := R10 .. R11
 98 [-]: GETUPVAL  R11 U0       ; R11 := U0
 99 [-]: GETTABLE  R11 R11 K11  ; R82 := R11[0x06d055f9]
100 [-]: GETTABLE  R12 R0 K4    ; R12 := R0["mVisualMode"]
101 [-]: GETTABLE  R13 R0 K5    ; R13 := R0["VISUAL_MODE_MENU_SIMPLE"]
102 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 109
103 [-]: JMP       109          ; PC := 109
104 [-]: GETGLOBAL R12 K6       ; R12 := 0x34291f5c
105 [-]: GETTABLE  R12 R12 K7   ; R82 := R12[0xe6b41adb]
106 [-]: CALL      R12 1 2      ; R12 := R12()
107 [-]: NOT       R12 R12      ; R12 := not R12
108 [-]: JMP       111          ; PC := 111
109 [-]: OP_LOADBOOL R12 0 1      ; R12 := false; PC := 110
110 [-]: OP_LOADBOOL R12 1 0      ; R12 := true
111 [-]: LOADK     R13 K24      ; R13 := "Min"
112 [-]: LOADK     R14 K25      ; R14 := "Max"
113 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
114 [-]: CALL      R8 0 1       ; R8(R9,...)
115 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
116 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xf64b7262]
117 [-]: GETTABLE  R10 R0 K2    ; R10 := R0["mClipName"]
118 [-]: LOADK     R11 K27      ; R11 := "TabMenu.MinMaxBtn"
119 [-]: CONST     R12 0        ; R12 := 0.000000
120 [-]: MOVE      R13 R1       ; R13 := R1
121 [-]: CALL      R8 6 1       ; R8(R9,R10,R11,R12,R13)
122 [-]: RETURN    R0 1         ; return 


; Function #121.70:
;
; Name:            
; Defined at line: 8838
; #Upvalues:       1
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  21

  1 [-]: GETGLOBAL R4 K0        ; R4 := 0x42dcc9f5
  2 [-]: MOVE      R5 R1        ; R5 := R1
  3 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["mWindow"]
  4 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["minWidth"]
  5 [-]: GETGLOBAL R7 K3        ; R7 := mViewportWidth
  6 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mWindow"]
  7 [-]: GETTABLE  R8 R8 K4     ; R8 := R8["maxWidth"]
  8 [-]: MUL       R7 R7 R8     ; R7 := R7 * R8
  9 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 10 [-]: MOVE      R1 R4        ; R1 := R4
 11 [-]: GETGLOBAL R4 K0        ; R4 := 0x42dcc9f5
 12 [-]: MOVE      R5 R2        ; R5 := R2
 13 [-]: GETTABLE  R6 R0 K1     ; R6 := R0["mWindow"]
 14 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["minHeight"]
 15 [-]: GETGLOBAL R7 K6        ; R7 := mViewportHeight
 16 [-]: GETTABLE  R8 R0 K1     ; R8 := R0["mWindow"]
 17 [-]: GETTABLE  R8 R8 K7     ; R8 := R8["maxHeight"]
 18 [-]: MUL       R7 R7 R8     ; R7 := R7 * R8
 19 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 20 [-]: MOVE      R2 R4        ; R2 := R4
 21 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mWindow"]
 22 [-]: SETTABLE  R4 K8 R1     ; R4["width"] := R1
 23 [-]: GETTABLE  R4 R0 K1     ; R4 := R0["mWindow"]
 24 [-]: SETTABLE  R4 K9 R2     ; R4["height"] := R2
 25 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 26 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
 27 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
 28 [-]: LOADK     R7 K13       ; R7 := "TabMenu.WindowTitle.Fill"
 29 [-]: CONST     R8 12        ; R8 := 12.000000
 30 [-]: SUB       R9 R1 K14    ; R9 := R1 - 2.000000
 31 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 32 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 33 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
 34 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
 35 [-]: LOADK     R7 K15       ; R7 := "TabMenu.WindowTitle.FillBlurer"
 36 [-]: CONST     R8 12        ; R8 := 12.000000
 37 [-]: SUB       R9 R1 K14    ; R9 := R1 - 2.000000
 38 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 39 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 40 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
 41 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
 42 [-]: LOADK     R7 K16       ; R7 := "TabMenu.WindowTitle.EdgeTop"
 43 [-]: CONST     R8 12        ; R8 := 12.000000
 44 [-]: SUB       R9 R1 K14    ; R9 := R1 - 2.000000
 45 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 46 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 47 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
 48 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
 49 [-]: LOADK     R7 K17       ; R7 := "TabMenu.WindowTitle.EdgeBottom"
 50 [-]: CONST     R8 12        ; R8 := 12.000000
 51 [-]: SUB       R9 R1 K14    ; R9 := R1 - 2.000000
 52 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 53 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 54 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
 55 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
 56 [-]: LOADK     R7 K18       ; R7 := "TabMenu.WindowTitle.EdgeRight"
 57 [-]: CONST     R8 0         ; R8 := 0.000000
 58 [-]: SUB       R9 R1 K19    ; R9 := R1 - 1.000000
 59 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 60 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 61 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
 62 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
 63 [-]: LOADK     R7 K20       ; R7 := "WindowStatus"
 64 [-]: CONST     R8 1         ; R8 := 1.000000
 65 [-]: ADD       R9 R2 K21    ; R9 := R2 + 18.000000
 66 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 67 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 68 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
 69 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
 70 [-]: LOADK     R7 K20       ; R7 := "WindowStatus"
 71 [-]: CONST     R8 0         ; R8 := 0.000000
 72 [-]: SUB       R9 R1 K22    ; R9 := R1 - 9.000000
 73 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 74 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 75 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
 76 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
 77 [-]: LOADK     R7 K23       ; R7 := "Hint"
 78 [-]: CONST     R8 1         ; R8 := 1.000000
 79 [-]: ADD       R9 R2 K24    ; R9 := R2 + 6.000000
 80 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 81 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 82 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
 83 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
 84 [-]: LOADK     R7 K25       ; R7 := "Hint.SimpleTabListMask"
 85 [-]: CONST     R8 12        ; R8 := 12.000000
 86 [-]: MOVE      R9 R1        ; R9 := R1
 87 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 88 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 89 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
 90 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
 91 [-]: LOADK     R7 K26       ; R7 := "FontIncrease"
 92 [-]: CONST     R8 0         ; R8 := 0.000000
 93 [-]: GETTABLE  R9 R0 K27    ; R9 := R0["mFontButtonWidth"]
 94 [-]: ADD       R9 R9 K28    ; R9 := R9 + 3.000000
 95 [-]: MUL       R9 R9 K14    ; R9 := R9 * 2.000000
 96 [-]: SUB       R9 R1 R9     ; R9 := R1 - R9
 97 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 98 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
 99 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
100 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
101 [-]: LOADK     R7 K29       ; R7 := "MouseCatcherBtn"
102 [-]: CONST     R8 1         ; R8 := 1.000000
103 [-]: CONST     R9 0         ; R9 := 0.000000
104 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
105 [-]: GETGLOBAL R4 K10       ; R4 := 0xae91e43b
106 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0xf64b7262]
107 [-]: GETTABLE  R6 R0 K12    ; R6 := R0["mClipName"]
108 [-]: LOADK     R7 K29       ; R7 := "MouseCatcherBtn"
109 [-]: CONST     R8 13        ; R8 := 13.000000
110 [-]: GETTABLE  R9 R0 K30    ; R9 := R0["mWindowTitle"]
111 [-]: GETTABLE  R9 R9 K9     ; R9 := R9["height"]
112 [-]: ADD       R9 R2 R9     ; R9 := R2 + R9
113 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
114 [-]: CONST     R4 70        ; R4 := 70.000000
115 [-]: GETGLOBAL R5 K10       ; R5 := 0xae91e43b
116 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0xf64b7262]
117 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["mClipName"]
118 [-]: LOADK     R8 K31       ; R8 := "TabMenu.TabMask"
119 [-]: CONST     R9 12        ; R9 := 12.000000
120 [-]: GETTABLE  R10 R0 K1    ; R10 := R0["mWindow"]
121 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["width"]
122 [-]: SUB       R10 R10 R4   ; R10 := R10 - R4
123 [-]: GETGLOBAL R11 K10      ; R11 := 0xae91e43b
124 [-]: SELF      R11 R11 K32  ; R12 := R11; R11 := R11[0x91a24e4b]
125 [-]: GETTABLE  R13 R0 K12   ; R13 := R0["mClipName"]
126 [-]: LOADK     R14 K33      ; R14 := ".TabMenu.TabMask"
127 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
128 [-]: CONST     R14 0        ; R14 := 0.000000
129 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
130 [-]: SUB       R10 R10 R11  ; R10 := R10 - R11
131 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
132 [-]: GETGLOBAL R5 K34       ; R5 := 0x7b998233
133 [-]: GETGLOBAL R6 K1        ; R6 := mWindow
134 [-]: GETTABLE  R6 R6 K35    ; R6 := R6["mTabMenu"]
135 [-]: CALL      R5 2 2       ; R5 := R5(R6)
136 [-]: TEST      R5 1         ; if R5 then PC := 142
137 [-]: JMP       142          ; PC := 142
138 [-]: GETGLOBAL R5 K1        ; R5 := mWindow
139 [-]: GETTABLE  R5 R5 K35    ; R5 := R5["mTabMenu"]
140 [-]: SELF      R5 R5 K36    ; R6 := R5; R5 := R5[0x99c20c27]
141 [-]: CALL      R5 2 1       ; R5(R6)
142 [-]: GETGLOBAL R5 K10       ; R5 := 0xae91e43b
143 [-]: SELF      R5 R5 K11    ; R6 := R5; R5 := R5[0xf64b7262]
144 [-]: GETTABLE  R7 R0 K12    ; R7 := R0["mClipName"]
145 [-]: LOADK     R8 K37       ; R8 := "TabMenu.Resize"
146 [-]: CONST     R9 0         ; R9 := 0.000000
147 [-]: GETTABLE  R10 R0 K1    ; R10 := R0["mWindow"]
148 [-]: GETTABLE  R10 R10 K8   ; R10 := R10["width"]
149 [-]: GETGLOBAL R11 K10      ; R11 := 0xae91e43b
150 [-]: SELF      R11 R11 K32  ; R12 := R11; R11 := R11[0x91a24e4b]
151 [-]: GETTABLE  R13 R0 K12   ; R13 := R0["mClipName"]
152 [-]: LOADK     R14 K38      ; R14 := ".TabMenu.Resize"
153 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
154 [-]: CONST     R14 12       ; R14 := 12.000000
155 [-]: CALL      R11 4 2      ; R11 := R11(R12,R13,R14)
156 [-]: SUB       R10 R10 R11  ; R10 := R10 - R11
157 [-]: SUB       R10 R10 K19  ; R10 := R10 - 1.000000
158 [-]: CALL      R5 6 1       ; R5(R6,R7,R8,R9,R10)
159 [-]: SELF      R5 R0 K39    ; R6 := R0; R5 := R0[0x8ec8f0d5]
160 [-]: GETTABLE  R7 R0 K40    ; R7 := R0["mChatPanelWindow"]
161 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
162 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
163 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
164 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
165 [-]: LOADK     R9 K41       ; R9 := "TabbedChatPanel"
166 [-]: CONST     R10 0        ; R10 := 0.000000
167 [-]: GETTABLE  R11 R0 K40   ; R11 := R0["mChatPanelWindow"]
168 [-]: GETTABLE  R11 R11 K42  ; R11 := R11["x"]
169 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
170 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
171 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
172 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
173 [-]: LOADK     R9 K41       ; R9 := "TabbedChatPanel"
174 [-]: CONST     R10 1        ; R10 := 1.000000
175 [-]: GETTABLE  R11 R0 K40   ; R11 := R0["mChatPanelWindow"]
176 [-]: GETTABLE  R11 R11 K43  ; R11 := R11["y"]
177 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
178 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
179 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
180 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
181 [-]: LOADK     R9 K44       ; R9 := "TabbedChatPanel.Fill"
182 [-]: CONST     R10 12       ; R10 := 12.000000
183 [-]: GETTABLE  R11 R5 K8    ; R11 := R5["width"]
184 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
185 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
186 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
187 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
188 [-]: LOADK     R9 K44       ; R9 := "TabbedChatPanel.Fill"
189 [-]: CONST     R10 13       ; R10 := 13.000000
190 [-]: GETTABLE  R11 R5 K9    ; R11 := R5["height"]
191 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
192 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
193 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
194 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
195 [-]: LOADK     R9 K45       ; R9 := "TabbedChatPanel.FillBlurer"
196 [-]: CONST     R10 12       ; R10 := 12.000000
197 [-]: GETTABLE  R11 R5 K8    ; R11 := R5["width"]
198 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
199 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
200 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
201 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
202 [-]: LOADK     R9 K45       ; R9 := "TabbedChatPanel.FillBlurer"
203 [-]: CONST     R10 13       ; R10 := 13.000000
204 [-]: GETTABLE  R11 R5 K9    ; R11 := R5["height"]
205 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
206 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
207 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
208 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
209 [-]: LOADK     R9 K46       ; R9 := "TabbedChatPanel.EdgeRight"
210 [-]: CONST     R10 0        ; R10 := 0.000000
211 [-]: GETTABLE  R11 R5 K8    ; R11 := R5["width"]
212 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
213 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
214 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
215 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
216 [-]: LOADK     R9 K46       ; R9 := "TabbedChatPanel.EdgeRight"
217 [-]: CONST     R10 13       ; R10 := 13.000000
218 [-]: GETTABLE  R11 R5 K9    ; R11 := R5["height"]
219 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
220 [-]: GETGLOBAL R6 K47       ; R6 := 0x34291f5c
221 [-]: GETTABLE  R6 R6 K48    ; R82 := R6[0xe6b41adb]
222 [-]: CALL      R6 1 2       ; R6 := R6()
223 [-]: TEST      R6 1         ; if R6 then PC := 242
224 [-]: JMP       242          ; PC := 242
225 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
226 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
227 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
228 [-]: LOADK     R9 K49       ; R9 := "TabbedChatPanel.EdgeLeft"
229 [-]: CONST     R10 13       ; R10 := 13.000000
230 [-]: GETTABLE  R11 R5 K9    ; R11 := R5["height"]
231 [-]: SUB       R11 R11 K50  ; R11 := R11 - 31.000000
232 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
233 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
234 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
235 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
236 [-]: LOADK     R9 K51       ; R9 := "TabbedChatPanel.DecoLine"
237 [-]: CONST     R10 13       ; R10 := 13.000000
238 [-]: GETTABLE  R11 R5 K9    ; R11 := R5["height"]
239 [-]: SUB       R11 R11 K52  ; R11 := R11 - 17.000000
240 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
241 [-]: JMP       256          ; PC := 256
242 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
243 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
244 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
245 [-]: LOADK     R9 K49       ; R9 := "TabbedChatPanel.EdgeLeft"
246 [-]: CONST     R10 13       ; R10 := 13.000000
247 [-]: CONST     R11 191      ; R11 := 191.000000
248 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
249 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
250 [-]: SELF      R6 R6 K11    ; R7 := R6; R6 := R6[0xf64b7262]
251 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
252 [-]: LOADK     R9 K51       ; R9 := "TabbedChatPanel.DecoLine"
253 [-]: CONST     R10 13       ; R10 := 13.000000
254 [-]: CONST     R11 205      ; R11 := 205.000000
255 [-]: CALL      R6 6 1       ; R6(R7,R8,R9,R10,R11)
256 [-]: GETGLOBAL R6 K10       ; R6 := 0xae91e43b
257 [-]: SELF      R6 R6 K32    ; R7 := R6; R6 := R6[0x91a24e4b]
258 [-]: GETTABLE  R8 R0 K12    ; R8 := R0["mClipName"]
259 [-]: LOADK     R9 K53       ; R9 := ".TabbedChatPanel.ScrollBar"
260 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
261 [-]: CONST     R9 12        ; R9 := 12.000000
262 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
263 [-]: GETGLOBAL R7 K10       ; R7 := 0xae91e43b
264 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7[0xf64b7262]
265 [-]: GETTABLE  R9 R0 K12    ; R9 := R0["mClipName"]
266 [-]: LOADK     R10 K54      ; R10 := "TabbedChatPanel.ScrollBar"
267 [-]: CONST     R11 0        ; R11 := 0.000000
268 [-]: GETTABLE  R12 R5 K8    ; R12 := R5["width"]
269 [-]: DIV       R13 R6 K14   ; R13 := R6 / 2.000000
270 [-]: SUB       R12 R12 R13  ; R12 := R12 - R13
271 [-]: ADD       R12 R12 K28  ; R12 := R12 + 3.000000
272 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
273 [-]: GETGLOBAL R7 K47       ; R7 := 0x34291f5c
274 [-]: GETTABLE  R7 R7 K55    ; R82 := R7[0xa7a2e381]
275 [-]: CALL      R7 1 2       ; R7 := R7()
276 [-]: TEST      R7 0         ; if not R7 then PC := 285
277 [-]: JMP       285          ; PC := 285
278 [-]: GETGLOBAL R7 K10       ; R7 := 0xae91e43b
279 [-]: SELF      R7 R7 K56    ; R8 := R7; R7 := R7[0xe261aa96]
280 [-]: GETTABLE  R9 R0 K12    ; R9 := R0["mClipName"]
281 [-]: LOADK     R10 K57      ; R10 := "TabbedChatPanel.ChatArea"
282 [-]: CONST     R11 41       ; R11 := 41.000000
283 [-]: LOADK     R12 K58      ; R12 := "Arial Unicode MS"
284 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
285 [-]: GETGLOBAL R7 K10       ; R7 := 0xae91e43b
286 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7[0xf64b7262]
287 [-]: GETTABLE  R9 R0 K12    ; R9 := R0["mClipName"]
288 [-]: LOADK     R10 K57      ; R10 := "TabbedChatPanel.ChatArea"
289 [-]: CONST     R11 12       ; R11 := 12.000000
290 [-]: GETTABLE  R12 R5 K8    ; R12 := R5["width"]
291 [-]: SUB       R12 R12 K59  ; R12 := R12 - 10.000000
292 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
293 [-]: GETGLOBAL R7 K10       ; R7 := 0xae91e43b
294 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7[0xf64b7262]
295 [-]: GETTABLE  R9 R0 K12    ; R9 := R0["mClipName"]
296 [-]: LOADK     R10 K57      ; R10 := "TabbedChatPanel.ChatArea"
297 [-]: CONST     R11 13       ; R11 := 13.000000
298 [-]: GETTABLE  R12 R5 K9    ; R12 := R5["height"]
299 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
300 [-]: GETGLOBAL R7 K10       ; R7 := 0xae91e43b
301 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7[0xf64b7262]
302 [-]: GETTABLE  R9 R0 K12    ; R9 := R0["mClipName"]
303 [-]: LOADK     R10 K57      ; R10 := "TabbedChatPanel.ChatArea"
304 [-]: CONST     R11 1        ; R11 := 1.000000
305 [-]: GETTABLE  R12 R5 K9    ; R12 := R5["height"]
306 [-]: SUB       R12 R12 K60  ; R12 := R12 - 25.000000
307 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
308 [-]: GETGLOBAL R7 K10       ; R7 := 0xae91e43b
309 [-]: SELF      R7 R7 K56    ; R8 := R7; R7 := R7[0xe261aa96]
310 [-]: GETTABLE  R9 R0 K12    ; R9 := R0["mClipName"]
311 [-]: LOADK     R10 K57      ; R10 := "TabbedChatPanel.ChatArea"
312 [-]: CONST     R11 38       ; R11 := 38.000000
313 [-]: LOADK     R12 K61      ; R12 := "bottom"
314 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
315 [-]: GETGLOBAL R7 K10       ; R7 := 0xae91e43b
316 [-]: SELF      R7 R7 K11    ; R8 := R7; R7 := R7[0xf64b7262]
317 [-]: GETTABLE  R9 R0 K12    ; R9 := R0["mClipName"]
318 [-]: LOADK     R10 K62      ; R10 := "TabbedChatPanel.FilterListMask"
319 [-]: CONST     R11 12       ; R11 := 12.000000
320 [-]: GETTABLE  R12 R5 K8    ; R12 := R5["width"]
321 [-]: SUB       R12 R12 K63  ; R12 := R12 - 49.000000
322 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
323 [-]: GETGLOBAL R7 K34       ; R7 := 0x7b998233
324 [-]: GETTABLE  R8 R0 K64    ; R8 := R0["mFilterList"]
325 [-]: CALL      R7 2 2       ; R7 := R7(R8)
326 [-]: TEST      R7 1         ; if R7 then PC := 333
327 [-]: JMP       333          ; PC := 333
328 [-]: GETTABLE  R7 R0 K64    ; R7 := R0["mFilterList"]
329 [-]: SELF      R7 R7 K65    ; R8 := R7; R7 := R7[0xea061e98]
330 [-]: CLOSURE   R9 0         ; R9 := closure(Function #121.70.1)
331 [-]: MOVE      R0 R0        ; R0 := R0
332 [-]: CALL      R7 3 1       ; R7(R8,R9)
333 [-]: CONST     R7 0         ; R7 := 0.250000
334 [-]: GETUPVAL  R8 U0        ; R8 := U0
335 [-]: NOT       R9 R3        ; R9 := not R3
336 [-]: SETTABLE  R8 K66 R9    ; R8["ResizeRequired"] := R9
337 [-]: TEST      R3 0         ; if not R3 then PC := 341
338 [-]: JMP       341          ; PC := 341
339 [-]: GETUPVAL  R8 U0        ; R8 := U0
340 [-]: SETTABLE  R8 K67 R7    ; R8["RefreshChatHistoryCooldown"] := R7
341 [-]: GETGLOBAL R8 K68       ; R8 := 0xcfc01047
342 [-]: GETTABLE  R9 R0 K69    ; R9 := R0["mPanelList"]
343 [-]: CALL      R8 2 4       ; R8,R9,R10 := R8(R9)
344 [-]: JMP       372          ; PC := 372
345 [-]: TEST      R3 1         ; if R3 then PC := 370
346 [-]: JMP       370          ; PC := 370
347 [-]: GETTABLE  R13 R12 K70  ; R13 := R12["mIsActive"]
348 [-]: TEST      R13 0        ; if not R13 then PC := 370
349 [-]: JMP       370          ; PC := 370
350 [-]: GETGLOBAL R13 K10      ; R13 := 0xae91e43b
351 [-]: SELF      R13 R13 K32  ; R14 := R13; R13 := R13[0x91a24e4b]
352 [-]: GETTABLE  R15 R0 K12   ; R15 := R0["mClipName"]
353 [-]: LOADK     R16 K71      ; R16 := ".TabbedChatPanel."
354 [-]: LOADK     R17 K72      ; R17 := "ChatArea"
355 [-]: CONCAT    R15 R15 R17  ; R15 := R15 .. R16 .. R17
356 [-]: CONST     R16 35       ; R16 := 35.000000
357 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
358 [-]: SUB       R13 R13 K19  ; R13 := R13 - 1.000000
359 [-]: GETTABLE  R14 R0 K73   ; R14 := R0["numLines"]
360 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 365
361 [-]: JMP       365          ; PC := 365
362 [-]: GETTABLE  R14 R12 K74  ; R14 := R12["mMaxVisibleChatLines"]
363 [-]: LT        0 R14 R13    ; if R14 >= R13 then PC := 372
364 [-]: JMP       372          ; PC := 372
365 [-]: GETUPVAL  R14 U0       ; R14 := U0
366 [-]: SETTABLE  R14 K67 R7   ; R14["RefreshChatHistoryCooldown"] := R7
367 [-]: SELF      R14 R12 K75  ; R15 := R12; R14 := R12[0xe176d731]
368 [-]: CALL      R14 2 1      ; R14(R15)
369 [-]: JMP       372          ; PC := 372
370 [-]: SELF      R14 R12 K75  ; R15 := R12; R14 := R12[0xe176d731]
371 [-]: CALL      R14 2 1      ; R14(R15)
372 [-]: TFORLOOP  R8 2         ; R11,R12 :=  R8(R9,R10); if R11 ~= nil then begin PC = 345; R10 := R11 end
373 [-]: JMP       345          ; PC := 345
374 [-]: GETGLOBAL R14 K34      ; R14 := 0x7b998233
375 [-]: GETTABLE  R15 R0 K69   ; R15 := R0["mPanelList"]
376 [-]: GETTABLE  R16 R0 K76   ; R16 := R0["mActivePanelName"]
377 [-]: GETTABLE  R15 R15 R16  ; R15 := R15[R16]
378 [-]: CALL      R14 2 2      ; R14 := R14(R15)
379 [-]: TEST      R14 1        ; if R14 then PC := 397
380 [-]: JMP       397          ; PC := 397
381 [-]: GETTABLE  R14 R0 K69   ; R14 := R0["mPanelList"]
382 [-]: GETTABLE  R15 R0 K76   ; R15 := R0["mActivePanelName"]
383 [-]: GETTABLE  R14 R14 R15  ; R14 := R14[R15]
384 [-]: SELF      R14 R14 K77  ; R15 := R14; R14 := R14[0x3bd10f9e]
385 [-]: OP_LOADBOOL R16 1 0      ; R16 := true
386 [-]: CALL      R14 3 1      ; R14(R15,R16)
387 [-]: GETGLOBAL R14 K10      ; R14 := 0xae91e43b
388 [-]: SELF      R14 R14 K32  ; R15 := R14; R14 := R14[0x91a24e4b]
389 [-]: GETTABLE  R16 R0 K12   ; R16 := R0["mClipName"]
390 [-]: LOADK     R17 K71      ; R17 := ".TabbedChatPanel."
391 [-]: LOADK     R18 K72      ; R18 := "ChatArea"
392 [-]: CONCAT    R16 R16 R18  ; R16 := R16 .. R17 .. R18
393 [-]: CONST     R17 35       ; R17 := 35.000000
394 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
395 [-]: SUB       R14 R14 K19  ; R14 := R14 - 1.000000
396 [-]: SETTABLE  R0 K73 R14   ; R0["numLines"] := R14
397 [-]: GETTABLE  R14 R0 K78   ; R14 := R0["mUserPanel"]
398 [-]: SELF      R14 R14 K79  ; R15 := R14; R14 := R14[0xcbf89887]
399 [-]: MOVE      R16 R1       ; R16 := R1
400 [-]: MOVE      R17 R2       ; R17 := R2
401 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
402 [-]: GETTABLE  R14 R0 K80   ; R14 := R0["mInputPanel"]
403 [-]: SELF      R14 R14 K79  ; R15 := R14; R14 := R14[0xcbf89887]
404 [-]: MOVE      R16 R1       ; R16 := R1
405 [-]: MOVE      R17 R2       ; R17 := R2
406 [-]: CALL      R14 4 1      ; R14(R15,R16,R17)
407 [-]: GETGLOBAL R14 K47      ; R14 := 0x34291f5c
408 [-]: GETTABLE  R14 R14 K81  ; R82 := R14[0x1467d5f4]
409 [-]: CALL      R14 1 2      ; R14 := R14()
410 [-]: TEST      R14 1        ; if R14 then PC := 450
411 [-]: JMP       450          ; PC := 450
412 [-]: GETGLOBAL R14 K47      ; R14 := 0x34291f5c
413 [-]: GETTABLE  R14 R14 K48  ; R82 := R14[0xe6b41adb]
414 [-]: CALL      R14 1 2      ; R14 := R14()
415 [-]: TEST      R14 1        ; if R14 then PC := 450
416 [-]: JMP       450          ; PC := 450
417 [-]: GETGLOBAL R14 K0       ; R14 := 0x42dcc9f5
418 [-]: GETTABLE  R15 R0 K1    ; R15 := R0["mWindow"]
419 [-]: GETTABLE  R15 R15 K8   ; R15 := R15["width"]
420 [-]: GETGLOBAL R16 K3       ; R16 := mViewportWidth
421 [-]: DIV       R15 R15 R16  ; R15 := R15 / R16
422 [-]: CONST     R16 0        ; R16 := 0.000000
423 [-]: CONST     R17 1        ; R17 := 1.000000
424 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
425 [-]: GETGLOBAL R15 K0       ; R15 := 0x42dcc9f5
426 [-]: GETTABLE  R16 R0 K1    ; R16 := R0["mWindow"]
427 [-]: GETTABLE  R16 R16 K9   ; R16 := R16["height"]
428 [-]: GETGLOBAL R17 K6       ; R17 := mViewportHeight
429 [-]: DIV       R16 R16 R17  ; R16 := R16 / R17
430 [-]: CONST     R17 0        ; R17 := 0.000000
431 [-]: CONST     R18 1        ; R18 := 1.000000
432 [-]: CALL      R15 4 2      ; R15 := R15(R16,R17,R18)
433 [-]: GETGLOBAL R16 K34      ; R16 := 0x7b998233
434 [-]: GETGLOBAL R17 K82      ; R17 := mProfileSettings
435 [-]: CALL      R16 2 2      ; R16 := R16(R17)
436 [-]: TEST      R16 1        ; if R16 then PC := 450
437 [-]: JMP       450          ; PC := 450
438 [-]: GETGLOBAL R16 K82      ; R16 := mProfileSettings
439 [-]: SELF      R16 R16 K83  ; R17 := R16; R16 := R16[0x6e7915bd]
440 [-]: GETGLOBAL R18 K84      ; R18 := mIsInFrontEnd
441 [-]: OP_LOADBOOL R19 1 0      ; R19 := true
442 [-]: MOVE      R20 R14      ; R20 := R14
443 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
444 [-]: GETGLOBAL R16 K82      ; R16 := mProfileSettings
445 [-]: SELF      R16 R16 K83  ; R17 := R16; R16 := R16[0x6e7915bd]
446 [-]: GETGLOBAL R18 K84      ; R18 := mIsInFrontEnd
447 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
448 [-]: MOVE      R20 R15      ; R20 := R15
449 [-]: CALL      R16 5 1      ; R16(R17,R18,R19,R20)
450 [-]: RETURN    R0 1         ; return 


; Function #121.70.1:
;
; Name:            
; Defined at line: 8908
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mFilterList"]
  3 [-]: GETTABLE  R1 R1 K1     ; R82 := R1[0xec7f8619]
  4 [-]: MOVE      R2 R0        ; R2 := R0
  5 [-]: CALL      R1 2 1       ; R1(R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #121.71:
;
; Name:            
; Defined at line: 8950
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mPanelList"]
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mActivePanelName"]
  3 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
  4 [-]: RETURN    R1 2         ; return R1
  5 [-]: RETURN    R0 1         ; return 


; Function #121.72:
;
; Name:            
; Defined at line: 8955
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  27

  1 [-]: SELF      R2 R0 K0     ; R3 := R0; R2 := R0[0x8b75da5a]
  2 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  3 [-]: NEWTABLE  R3 3 0       ; R3 := {}
  4 [-]: CONST     R4 13        ; R4 := 13.000000
  5 [-]: CONST     R5 15        ; R5 := 15.000000
  6 [-]: CONST     R6 17        ; R6 := 17.000000
  7 [-]: SETLIST   R3 3 1       ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 3
  8 [-]: NEWTABLE  R4 3 0       ; R4 := {}
  9 [-]: LOADK     R5 K1        ; R5 := "FixedSize"
 10 [-]: LOADK     R6 K2        ; R6 := "Arial Unicode MS"
 11 [-]: LOADK     R7 K2        ; R7 := "Arial Unicode MS"
 12 [-]: SETLIST   R4 3 1       ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
 13 [-]: NEWTABLE  R5 3 0       ; R5 := {}
 14 [-]: LOADK     R6 K3        ; R6 := 20.100000
 15 [-]: LOADK     R7 K4        ; R7 := 23.049999
 16 [-]: LOADK     R8 K5        ; R8 := 25.799999
 17 [-]: SETLIST   R5 3 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
 18 [-]: NEWTABLE  R6 3 0       ; R6 := {}
 19 [-]: CONST     R7 4         ; R7 := 4.000000
 20 [-]: CONST     R8 3         ; R8 := 3.000000
 21 [-]: CONST     R9 2         ; R9 := 2.000000
 22 [-]: SETLIST   R6 3 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
 23 [-]: GETTABLE  R7 R3 R1     ; R7 := R3[R1]
 24 [-]: GETTABLE  R8 R4 R1     ; R8 := R4[R1]
 25 [-]: GETGLOBAL R9 K6        ; R9 := 0x34291f5c
 26 [-]: GETTABLE  R9 R9 K7     ; R82 := R9[0x056bfe8b]
 27 [-]: CALL      R9 1 2       ; R9 := R9()
 28 [-]: TEST      R9 1         ; if R9 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETGLOBAL R9 K6        ; R9 := 0x34291f5c
 31 [-]: GETTABLE  R9 R9 K8     ; R82 := R9[0xe6b41adb]
 32 [-]: CALL      R9 1 2       ; R9 := R9()
 33 [-]: TEST      R9 0         ; if not R9 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: LOADK     R8 K2        ; R8 := "Arial Unicode MS"
 36 [-]: GETGLOBAL R9 K9        ; R9 := 0xae91e43b
 37 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9[0x5f56eeab]
 38 [-]: LOADK     R11 K11      ; R11 := "Window.TabbedChatPanel.ChatArea"
 39 [-]: CONST     R12 41       ; R12 := 41.000000
 40 [-]: MOVE      R13 R8       ; R13 := R8
 41 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 42 [-]: GETGLOBAL R9 K9        ; R9 := 0xae91e43b
 43 [-]: SELF      R9 R9 K12    ; R10 := R9; R9 := R9[0x67bc869f]
 44 [-]: LOADK     R11 K11      ; R11 := "Window.TabbedChatPanel.ChatArea"
 45 [-]: CONST     R12 42       ; R12 := 42.000000
 46 [-]: MOVE      R13 R7       ; R13 := R7
 47 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 48 [-]: GETGLOBAL R9 K9        ; R9 := 0xae91e43b
 49 [-]: SELF      R9 R9 K10    ; R10 := R9; R9 := R9[0x5f56eeab]
 50 [-]: LOADK     R11 K11      ; R11 := "Window.TabbedChatPanel.ChatArea"
 51 [-]: CONST     R12 29       ; R12 := 29.000000
 52 [-]: LOADK     R13 K13      ; R13 := ""
 53 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 54 [-]: GETGLOBAL R9 K9        ; R9 := 0xae91e43b
 55 [-]: SELF      R9 R9 K14    ; R10 := R9; R9 := R9[0x0c33ebb2]
 56 [-]: LOADK     R11 K15      ; R11 := "Window.Hint"
 57 [-]: LOADK     R12 K16      ; R12 := "Callout"
 58 [-]: MOVE      R13 R8       ; R13 := R8
 59 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
 60 [-]: SETTABLE  R0 K17 R8    ; R0["mFontName"] := R8
 61 [-]: GETGLOBAL R9 K18       ; R9 := 0xa28dcbfd
 62 [-]: EQ        0 R1 K19     ; if R1 ~= 1.000000 then PC := 74
 63 [-]: JMP       74           ; PC := 74
 64 [-]: GETGLOBAL R10 K6       ; R10 := 0x34291f5c
 65 [-]: GETTABLE  R10 R10 K7   ; R82 := R10[0x056bfe8b]
 66 [-]: CALL      R10 1 2      ; R10 := R10()
 67 [-]: TEST      R10 1        ; if R10 then PC := 74
 68 [-]: JMP       74           ; PC := 74
 69 [-]: GETGLOBAL R10 K6       ; R10 := 0x34291f5c
 70 [-]: GETTABLE  R10 R10 K8   ; R82 := R10[0xe6b41adb]
 71 [-]: CALL      R10 1 2      ; R10 := R10()
 72 [-]: TEST      R10 0        ; if not R10 then PC := 89
 73 [-]: JMP       89           ; PC := 89
 74 [-]: NEWTABLE  R10 0 4      ; R10 := {}
 75 [-]: SETTABLE  R10 K20 K21  ; R10["_ko"] := true
 76 [-]: SETTABLE  R10 K22 K21  ; R10["_ja"] := true
 77 [-]: SETTABLE  R10 K23 K21  ; R10["_zh"] := true
 78 [-]: SETTABLE  R10 K24 K21  ; R10["_tc"] := true
 79 [-]: GETGLOBAL R11 K25      ; R11 := 0x67513231
 80 [-]: CALL      R11 1 2      ; R11 := R11()
 81 [-]: SELF      R11 R11 K26  ; R12 := R11; R11 := R11[0x6d604ba7]
 82 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 83 [-]: GETTABLE  R11 R10 R11  ; R11 := R10[R11]
 84 [-]: TEST      R11 0        ; if not R11 then PC := 88
 85 [-]: JMP       88           ; PC := 88
 86 [-]: GETGLOBAL R9 K27       ; R9 := 0x27ead489
 87 [-]: JMP       89           ; PC := 89
 88 [-]: GETGLOBAL R9 K28       ; R9 := 0x32c14877
 89 [-]: GETGLOBAL R11 K9       ; R11 := 0xae91e43b
 90 [-]: SELF      R11 R11 K29  ; R12 := R11; R11 := R11[0x97f16b44]
 91 [-]: MOVE      R13 R9       ; R13 := R9
 92 [-]: CALL      R11 3 1      ; R11(R12,R13)
 93 [-]: GETGLOBAL R11 K30      ; R11 := 0xcfc01047
 94 [-]: GETTABLE  R12 R0 K31   ; R12 := R0["mPanelList"]
 95 [-]: CALL      R11 2 4      ; R11,R12,R13 := R11(R12)
 96 [-]: JMP       99           ; PC := 99
 97 [-]: SELF      R16 R15 K32  ; R17 := R15; R16 := R15[0xe176d731]
 98 [-]: CALL      R16 2 1      ; R16(R17)
 99 [-]: TFORLOOP  R11 2        ; R14,R15 :=  R11(R12,R13); if R14 ~= nil then begin PC = 97; R13 := R14 end
100 [-]: JMP       97           ; PC := 97
101 [-]: GETGLOBAL R16 K33      ; R16 := 0x7b998233
102 [-]: MOVE      R17 R2       ; R17 := R2
103 [-]: CALL      R16 2 2      ; R16 := R16(R17)
104 [-]: TEST      R16 1        ; if R16 then PC := 109
105 [-]: JMP       109          ; PC := 109
106 [-]: SELF      R16 R2 K34   ; R17 := R2; R16 := R2[0x3bd10f9e]
107 [-]: OP_LOADBOOL R18 1 0      ; R18 := true
108 [-]: CALL      R16 3 1      ; R16(R17,R18)
109 [-]: GETGLOBAL R16 K30      ; R16 := 0xcfc01047
110 [-]: NEWTABLE  R17 2 0      ; R17 := {}
111 [-]: LOADK     R18 K35      ; R18 := ".MessageBox"
112 [-]: LOADK     R19 K36      ; R19 := ".Prompt"
113 [-]: SETLIST   R17 2 1      ; R17[(1-1)*FPF+i] := R(17+i), 1 <= i <= 2
114 [-]: CALL      R16 2 4      ; R16,R17,R18 := R16(R17)
115 [-]: JMP       144          ; PC := 144
116 [-]: GETTABLE  R21 R0 K37   ; R21 := R0["mInputPanel"]
117 [-]: GETTABLE  R21 R21 K38  ; R21 := R21["mClipPath"]
118 [-]: MOVE      R22 R20      ; R22 := R20
119 [-]: CONCAT    R21 R21 R22  ; R21 := R21 .. R22
120 [-]: GETGLOBAL R22 K9       ; R22 := 0xae91e43b
121 [-]: SELF      R22 R22 K10  ; R23 := R22; R22 := R22[0x5f56eeab]
122 [-]: MOVE      R24 R21      ; R24 := R21
123 [-]: CONST     R25 41       ; R25 := 41.000000
124 [-]: MOVE      R26 R8       ; R26 := R8
125 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
126 [-]: GETGLOBAL R22 K9       ; R22 := 0xae91e43b
127 [-]: SELF      R22 R22 K12  ; R23 := R22; R22 := R22[0x67bc869f]
128 [-]: MOVE      R24 R21      ; R24 := R21
129 [-]: CONST     R25 42       ; R25 := 42.000000
130 [-]: MOVE      R26 R7       ; R26 := R7
131 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
132 [-]: GETGLOBAL R22 K9       ; R22 := 0xae91e43b
133 [-]: SELF      R22 R22 K12  ; R23 := R22; R22 := R22[0x67bc869f]
134 [-]: MOVE      R24 R21      ; R24 := R21
135 [-]: CONST     R25 13       ; R25 := 13.000000
136 [-]: GETTABLE  R26 R5 R1    ; R26 := R5[R1]
137 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
138 [-]: GETGLOBAL R22 K9       ; R22 := 0xae91e43b
139 [-]: SELF      R22 R22 K12  ; R23 := R22; R22 := R22[0x67bc869f]
140 [-]: MOVE      R24 R21      ; R24 := R21
141 [-]: CONST     R25 1        ; R25 := 1.000000
142 [-]: GETTABLE  R26 R6 R1    ; R26 := R6[R1]
143 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
144 [-]: TFORLOOP  R16 2        ; R19,R20 :=  R16(R17,R18); if R19 ~= nil then begin PC = 116; R18 := R19 end
145 [-]: JMP       116          ; PC := 116
146 [-]: GETGLOBAL R22 K33      ; R22 := 0x7b998233
147 [-]: GETTABLE  R23 R0 K39   ; R23 := R0["mUserPanel"]
148 [-]: CALL      R22 2 2      ; R22 := R22(R23)
149 [-]: TEST      R22 1        ; if R22 then PC := 163
150 [-]: JMP       163          ; PC := 163
151 [-]: GETGLOBAL R22 K33      ; R22 := 0x7b998233
152 [-]: GETTABLE  R23 R0 K39   ; R23 := R0["mUserPanel"]
153 [-]: GETTABLE  R23 R23 K40  ; R23 := R23["mListControl"]
154 [-]: CALL      R22 2 2      ; R22 := R22(R23)
155 [-]: TEST      R22 1        ; if R22 then PC := 163
156 [-]: JMP       163          ; PC := 163
157 [-]: GETTABLE  R22 R0 K39   ; R22 := R0["mUserPanel"]
158 [-]: GETTABLE  R22 R22 K40  ; R22 := R22["mListControl"]
159 [-]: SELF      R22 R22 K41  ; R23 := R22; R22 := R22[0x741d078c]
160 [-]: CLOSURE   R24 0        ; R24 := closure(Function #121.72.1)
161 [-]: MOVE      R0 R0        ; R0 := R0
162 [-]: CALL      R22 3 1      ; R22(R23,R24)
163 [-]: GETGLOBAL R22 K33      ; R22 := 0x7b998233
164 [-]: GETTABLE  R23 R0 K39   ; R23 := R0["mUserPanel"]
165 [-]: CALL      R22 2 2      ; R22 := R22(R23)
166 [-]: TEST      R22 1        ; if R22 then PC := 180
167 [-]: JMP       180          ; PC := 180
168 [-]: GETGLOBAL R22 K33      ; R22 := 0x7b998233
169 [-]: GETTABLE  R23 R0 K39   ; R23 := R0["mUserPanel"]
170 [-]: GETTABLE  R23 R23 K42  ; R23 := R23["mEmoteGrid"]
171 [-]: CALL      R22 2 2      ; R22 := R22(R23)
172 [-]: TEST      R22 1        ; if R22 then PC := 180
173 [-]: JMP       180          ; PC := 180
174 [-]: GETTABLE  R22 R0 K39   ; R22 := R0["mUserPanel"]
175 [-]: GETTABLE  R22 R22 K42  ; R22 := R22["mEmoteGrid"]
176 [-]: SELF      R22 R22 K41  ; R23 := R22; R22 := R22[0x741d078c]
177 [-]: CLOSURE   R24 1        ; R24 := closure(Function #121.72.2)
178 [-]: MOVE      R0 R0        ; R0 := R0
179 [-]: CALL      R22 3 1      ; R22(R23,R24)
180 [-]: GETGLOBAL R22 K9       ; R22 := 0xae91e43b
181 [-]: SELF      R22 R22 K10  ; R23 := R22; R22 := R22[0x5f56eeab]
182 [-]: LOADK     R24 K43      ; R24 := "Window.UserPanel.Panel.LocatorBtn.Label"
183 [-]: CONST     R25 41       ; R25 := 41.000000
184 [-]: MOVE      R26 R8       ; R26 := R8
185 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
186 [-]: GETGLOBAL R22 K9       ; R22 := 0xae91e43b
187 [-]: SELF      R22 R22 K12  ; R23 := R22; R22 := R22[0x67bc869f]
188 [-]: LOADK     R24 K43      ; R24 := "Window.UserPanel.Panel.LocatorBtn.Label"
189 [-]: CONST     R25 36       ; R25 := 36.000000
190 [-]: LOADK     R26 K44      ; R26 := 13421772.000000
191 [-]: CALL      R22 5 1      ; R22(R23,R24,R25,R26)
192 [-]: RETURN    R0 1         ; return 


; Function #121.72.1:
;
; Name:            
; Defined at line: 9009
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mUserPanel"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mListControl"]
  4 [-]: GETTABLE  R1 R1 K2     ; R82 := R1[0xb15e6aca]
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #121.72.2:
;
; Name:            
; Defined at line: 9016
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["mUserPanel"]
  3 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mEmoteGrid"]
  4 [-]: GETTABLE  R1 R1 K2     ; R82 := R1[0xb15e6aca]
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #121.73:
;
; Name:            
; Defined at line: 9026
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mDelayedFadeOutTimer"]
  2 [-]: SETTABLE  R0 K0 R2     ; R0["mActiveTabListFadeOutTimer"] := R2
  3 [-]: TEST      R1 1         ; if R1 then PC := 7
  4 [-]: JMP       7            ; PC := 7
  5 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mDelayedFadeOutTimer"]
  6 [-]: SETTABLE  R0 K2 R2     ; R0["mActiveChatFadeOutTimer"] := R2
  7 [-]: SETTABLE  R0 K3 K4     ; R0["mFadeActive"] := true
  8 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
  9 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x368ad758]
 10 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 11 [-]: CALL      R2 3 1       ; R2(R3,R4)
 12 [-]: RETURN    R0 1         ; return 


; Function #121.74:
;
; Name:            
; Defined at line: 9037
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETTABLE  R2 R0 K0     ; R2 := R0["mUserPanel"]
  2 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mListControl"]
  3 [-]: LOADNIL   R3 R3        ; R3 := nil
  4 [-]: GETGLOBAL R4 K2        ; R4 := 0xae91e43b
  5 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x5b0290d2]
  6 [-]: LOADK     R6 K4        ; R6 := "ContextMenu"
  7 [-]: CONST     R7 11        ; R7 := 11.000000
  8 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
  9 [-]: TEST      R4 0         ; if not R4 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: GETGLOBAL R2 K5        ; R2 := mContextMenu
 12 [-]: SELF      R4 R2 K6     ; R5 := R2; R4 := R2[0xc704a9b7]
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: MOVE      R3 R4        ; R3 := R4
 15 [-]: GETGLOBAL R4 K7        ; R4 := 0x7b998233
 16 [-]: MOVE      R5 R3        ; R5 := R3
 17 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 18 [-]: TEST      R4 0         ; if not R4 then PC := 21
 19 [-]: JMP       21           ; PC := 21
 20 [-]: CONST     R3 0         ; R3 := 0.000000
 21 [-]: GETTABLE  R4 R2 K8     ; R4 := R2["mWrapAroundNavigation"]
 22 [-]: TEST      R4 0         ; if not R4 then PC := 34
 23 [-]: JMP       34           ; PC := 34
 24 [-]: GETUPVAL  R4 U0        ; R4 := U0
 25 [-]: GETTABLE  R4 R4 K9     ; R82 := R4[0x38a41ce7]
 26 [-]: MOVE      R5 R3        ; R5 := R3
 27 [-]: MOVE      R6 R1        ; R6 := R1
 28 [-]: CONST     R7 1         ; R7 := 1.000000
 29 [-]: SELF      R8 R2 K10    ; R9 := R2; R8 := R2[0x5fbddc1a]
 30 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 31 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 32 [-]: MOVE      R3 R4        ; R3 := R4
 33 [-]: JMP       41           ; PC := 41
 34 [-]: GETGLOBAL R4 K11       ; R4 := 0x42dcc9f5
 35 [-]: ADD       R5 R3 R1     ; R5 := R3 + R1
 36 [-]: CONST     R6 1         ; R6 := 1.000000
 37 [-]: SELF      R7 R2 K10    ; R8 := R2; R7 := R2[0x5fbddc1a]
 38 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 39 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 40 [-]: MOVE      R3 R4        ; R3 := R4
 41 [-]: GETTABLE  R4 R0 K0     ; R4 := R0["mUserPanel"]
 42 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["mListControl"]
 43 [-]: EQ        0 R2 R4      ; if R2 ~= R4 then PC := 51
 44 [-]: JMP       51           ; PC := 51
 45 [-]: GETGLOBAL R4 K12       ; R4 := mWindow
 46 [-]: GETTABLE  R4 R4 K0     ; R4 := R4["mUserPanel"]
 47 [-]: SELF      R4 R4 K13    ; R5 := R4; R4 := R4[0x1e63ac7a]
 48 [-]: MOVE      R6 R3        ; R6 := R3
 49 [-]: CALL      R4 3 1       ; R4(R5,R6)
 50 [-]: JMP       54           ; PC := 54
 51 [-]: SELF      R4 R2 K13    ; R5 := R2; R4 := R2[0x1e63ac7a]
 52 [-]: MOVE      R6 R3        ; R6 := R3
 53 [-]: CALL      R4 3 1       ; R4(R5,R6)
 54 [-]: RETURN    R0 1         ; return 


; Function #122:
;
; Name:            
; Defined at line: 9068
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  30

  1 [-]: GETGLOBAL R3 K0        ; R3 := mChatScale
  2 [-]: GETUPVAL  R4 U0        ; R4 := U0
  3 [-]: GETTABLE  R4 R4 K1     ; R82 := R4[0x06d055f9]
  4 [-]: GETGLOBAL R5 K2        ; R5 := 0x34291f5c
  5 [-]: GETTABLE  R5 R5 K3     ; R82 := R5[0xe6b41adb]
  6 [-]: CALL      R5 1 2       ; R5 := R5()
  7 [-]: NOT       R5 R5        ; R5 := not R5
  8 [-]: CONST     R6 1         ; R6 := 1.000000
  9 [-]: LOADK     R7 K4        ; R7 := 0.900000
 10 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 11 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 12 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 13 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x67bc869f]
 14 [-]: LOADK     R6 K7        ; R6 := "_root"
 15 [-]: CONST     R7 5         ; R7 := 5.000000
 16 [-]: MUL       R8 R3 K8     ; R8 := R3 * 100.000000
 17 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 18 [-]: GETGLOBAL R4 K5        ; R4 := 0xae91e43b
 19 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x67bc869f]
 20 [-]: LOADK     R6 K7        ; R6 := "_root"
 21 [-]: CONST     R7 6         ; R7 := 6.000000
 22 [-]: MUL       R8 R3 K8     ; R8 := R3 * 100.000000
 23 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
 24 [-]: GETGLOBAL R4 K9        ; R4 := mViewportWidth
 25 [-]: GETGLOBAL R5 K0        ; R5 := mChatScale
 26 [-]: DIV       R4 R4 R5     ; R4 := R4 / R5
 27 [-]: SETGLOBALHASH R4 K9        ; mViewportWidth := R4
 28 [-]: GETGLOBAL R4 K10       ; R4 := mViewportHeight
 29 [-]: GETGLOBAL R5 K0        ; R5 := mChatScale
 30 [-]: DIV       R4 R4 R5     ; R4 := R4 / R5
 31 [-]: SETGLOBALHASH R4 K10       ; mViewportHeight := R4
 32 [-]: GETGLOBAL R4 K11       ; R4 := 0x7b998233
 33 [-]: GETGLOBAL R5 K12       ; R5 := mWindow
 34 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 35 [-]: TEST      R4 1         ; if R4 then PC := 132
 36 [-]: JMP       132          ; PC := 132
 37 [-]: TEST      R2 0         ; if not R2 then PC := 132
 38 [-]: JMP       132          ; PC := 132
 39 [-]: GETGLOBAL R4 K12       ; R4 := mWindow
 40 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["mWindow"]
 41 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["x"]
 42 [-]: SUB       R4 R0 R4     ; R4 := R0 - R4
 43 [-]: DIV       R4 R4 R0     ; R4 := R4 / R0
 44 [-]: SUB       R4 K14 R4    ; R4 := 1.000000 - R4
 45 [-]: GETGLOBAL R5 K12       ; R5 := mWindow
 46 [-]: GETTABLE  R5 R5 K12    ; R5 := R5["mWindow"]
 47 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["y"]
 48 [-]: SUB       R5 R1 R5     ; R5 := R1 - R5
 49 [-]: DIV       R5 R5 R1     ; R5 := R5 / R1
 50 [-]: SUB       R5 K14 R5    ; R5 := 1.000000 - R5
 51 [-]: GETGLOBAL R6 K12       ; R6 := mWindow
 52 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["mWindow"]
 53 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["width"]
 54 [-]: GETGLOBAL R7 K12       ; R7 := mWindow
 55 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["mWindow"]
 56 [-]: GETTABLE  R7 R7 K17    ; R7 := R7["height"]
 57 [-]: GETGLOBAL R8 K12       ; R8 := mWindow
 58 [-]: GETTABLE  R8 R8 K18    ; R8 := R8["mWindowTitle"]
 59 [-]: GETTABLE  R8 R8 K17    ; R8 := R8["height"]
 60 [-]: ADD       R7 R7 R8     ; R7 := R7 + R8
 61 [-]: DIV       R8 R6 R0     ; R8 := R6 / R0
 62 [-]: GETGLOBAL R9 K9        ; R9 := mViewportWidth
 63 [-]: DIV       R9 R6 R9     ; R9 := R6 / R9
 64 [-]: DIV       R10 R7 R1    ; R10 := R7 / R1
 65 [-]: GETGLOBAL R11 K10      ; R11 := mViewportHeight
 66 [-]: DIV       R11 R7 R11   ; R11 := R7 / R11
 67 [-]: CONST     R12 0        ; R12 := 0.000000
 68 [-]: LE        1 R4 K19     ; if R4 <= 0.500000 then PC := 71
 69 [-]: JMP       71           ; PC := 71
 70 [-]: OP_LOADBOOL R13 0 1      ; R13 := false; PC := 71
 71 [-]: OP_LOADBOOL R13 1 0      ; R13 := true
 72 [-]: ADD       R14 R4 R8    ; R14 := R4 + R8
 73 [-]: LE        1 R14 K19    ; if R14 <= 0.500000 then PC := 76
 74 [-]: JMP       76           ; PC := 76
 75 [-]: OP_LOADBOOL R14 0 1      ; R14 := false; PC := 76
 76 [-]: OP_LOADBOOL R14 1 0      ; R14 := true
 77 [-]: MOVE      R15 R13      ; R15 := R13
 78 [-]: EQ        1 R13 R14    ; if R13 == R14 then PC := 87
 79 [-]: JMP       87           ; PC := 87
 80 [-]: SUB       R16 K19 R4   ; R16 := 0.500000 - R4
 81 [-]: ADD       R17 R4 R8    ; R17 := R4 + R8
 82 [-]: SUB       R17 R17 R16  ; R17 := R17 - R16
 83 [-]: LT        1 R17 R16    ; if R17 < R16 then PC := 86
 84 [-]: JMP       86           ; PC := 86
 85 [-]: OP_LOADBOOL R15 0 1      ; R15 := false; PC := 86
 86 [-]: OP_LOADBOOL R15 1 0      ; R15 := true
 87 [-]: TEST      R15 0        ; if not R15 then PC := 92
 88 [-]: JMP       92           ; PC := 92
 89 [-]: GETGLOBAL R18 K9       ; R18 := mViewportWidth
 90 [-]: MUL       R12 R18 R4   ; R12 := R18 * R4
 91 [-]: JMP       96           ; PC := 96
 92 [-]: GETGLOBAL R18 K9       ; R18 := mViewportWidth
 93 [-]: SUB       R19 R8 R9    ; R19 := R8 - R9
 94 [-]: ADD       R19 R19 R4   ; R19 := R19 + R4
 95 [-]: MUL       R12 R18 R19  ; R12 := R18 * R19
 96 [-]: CONST     R18 0        ; R18 := 0.000000
 97 [-]: LE        1 R5 K19     ; if R5 <= 0.500000 then PC := 100
 98 [-]: JMP       100          ; PC := 100
 99 [-]: OP_LOADBOOL R19 0 1      ; R19 := false; PC := 100
100 [-]: OP_LOADBOOL R19 1 0      ; R19 := true
101 [-]: ADD       R20 R5 R10   ; R20 := R5 + R10
102 [-]: LE        1 R20 K19    ; if R20 <= 0.500000 then PC := 105
103 [-]: JMP       105          ; PC := 105
104 [-]: OP_LOADBOOL R20 0 1      ; R20 := false; PC := 105
105 [-]: OP_LOADBOOL R20 1 0      ; R20 := true
106 [-]: MOVE      R21 R19      ; R21 := R19
107 [-]: EQ        1 R19 R20    ; if R19 == R20 then PC := 116
108 [-]: JMP       116          ; PC := 116
109 [-]: SUB       R22 K19 R5   ; R22 := 0.500000 - R5
110 [-]: ADD       R23 R5 R8    ; R23 := R5 + R8
111 [-]: SUB       R23 R23 R22  ; R23 := R23 - R22
112 [-]: LT        1 R23 R22    ; if R23 < R22 then PC := 115
113 [-]: JMP       115          ; PC := 115
114 [-]: OP_LOADBOOL R21 0 1      ; R21 := false; PC := 115
115 [-]: OP_LOADBOOL R21 1 0      ; R21 := true
116 [-]: TEST      R21 0        ; if not R21 then PC := 121
117 [-]: JMP       121          ; PC := 121
118 [-]: GETGLOBAL R24 K10      ; R24 := mViewportHeight
119 [-]: MUL       R18 R24 R5   ; R18 := R24 * R5
120 [-]: JMP       125          ; PC := 125
121 [-]: GETGLOBAL R24 K10      ; R24 := mViewportHeight
122 [-]: SUB       R25 R10 R11  ; R25 := R10 - R11
123 [-]: ADD       R25 R25 R5   ; R25 := R25 + R5
124 [-]: MUL       R18 R24 R25  ; R18 := R24 * R25
125 [-]: GETGLOBAL R24 K12      ; R24 := mWindow
126 [-]: SELF      R24 R24 K20  ; R25 := R24; R24 := R24[0x9307aa51]
127 [-]: MOVE      R26 R12      ; R26 := R12
128 [-]: MOVE      R27 R18      ; R27 := R18
129 [-]: OP_LOADBOOL R28 1 0      ; R28 := true
130 [-]: OP_LOADBOOL R29 0 0      ; R29 := false
131 [-]: CALL      R24 6 1      ; R24(R25,R26,R27,R28,R29)
132 [-]: RETURN    R0 1         ; return 


; Function #123:
;
; Name:            
; Defined at line: 9125
; #Upvalues:       1
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
  2 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x091c120e]
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
  5 [-]: SELF      R4 R4 K2     ; R5 := R4; R4 := R4[0x2cc9d281]
  6 [-]: CALL      R4 2 2       ; R4 := R4(R5)
  7 [-]: GETGLOBAL R5 K3        ; R5 := mViewportWidth
  8 [-]: GETGLOBAL R6 K4        ; R6 := mViewportHeight
  9 [-]: GETGLOBAL R7 K5        ; R7 := 0x03f57322
 10 [-]: MOVE      R8 R0        ; R8 := R0
 11 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 12 [-]: MOVE      R0 R7        ; R0 := R7
 13 [-]: GETGLOBAL R7 K5        ; R7 := 0x03f57322
 14 [-]: MOVE      R8 R1        ; R8 := R1
 15 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 16 [-]: MOVE      R1 R7        ; R1 := R7
 17 [-]: GETGLOBAL R7 K6        ; R7 := 0x34291f5c
 18 [-]: GETTABLE  R7 R7 K7     ; R82 := R7[0x056bfe8b]
 19 [-]: CALL      R7 1 2       ; R7 := R7()
 20 [-]: TEST      R7 1         ; if R7 then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: LT        1 R0 R3      ; if R0 < R3 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: LT        0 R1 R4      ; if R1 >= R4 then PC := 29
 25 [-]: JMP       29           ; PC := 29
 26 [-]: SETGLOBALHASH R3 K3        ; mViewportWidth := R3
 27 [-]: SETGLOBALHASH R4 K4        ; mViewportHeight := R4
 28 [-]: JMP       41           ; PC := 41
 29 [-]: GETGLOBAL R7 K8        ; R7 := 0x5bced4c4
 30 [-]: GETTABLE  R7 R7 K9     ; R82 := R7[0xb62ecfe0]
 31 [-]: MOVE      R8 R0        ; R8 := R0
 32 [-]: MOVE      R9 R3        ; R9 := R3
 33 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 34 [-]: SETGLOBALHASH R7 K3        ; mViewportWidth := R7
 35 [-]: GETGLOBAL R7 K8        ; R7 := 0x5bced4c4
 36 [-]: GETTABLE  R7 R7 K9     ; R82 := R7[0xb62ecfe0]
 37 [-]: MOVE      R8 R1        ; R8 := R1
 38 [-]: MOVE      R9 R4        ; R9 := R4
 39 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 40 [-]: SETGLOBALHASH R7 K4        ; mViewportHeight := R7
 41 [-]: GETUPVAL  R7 U0        ; R7 := U0
 42 [-]: MOVE      R8 R5        ; R8 := R5
 43 [-]: MOVE      R9 R6        ; R9 := R6
 44 [-]: MOVE      R10 R2       ; R10 := R2
 45 [-]: CALL      R7 4 1       ; R7(R8,R9,R10)
 46 [-]: RETURN    R0 1         ; return 


; Function #124:
;
; Name:            
; Defined at line: 9150
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x34291f5c
  7 [-]: GETTABLE  R0 R0 K3     ; R82 := R0[0x1467d5f4]
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: TEST      R0 0         ; if not R0 then PC := 28
 10 [-]: JMP       28           ; PC := 28
 11 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 12 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x22c2c023]
 13 [-]: CALL      R0 2 1       ; R0(R1)
 14 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 15 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x96a27931]
 16 [-]: CALL      R0 2 1       ; R0(R1)
 17 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 18 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["mVisualMode"]
 19 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 20 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["VISUAL_MODE_MENU_SIMPLE"]
 21 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 24 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xc2b5e351]
 25 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 26 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 27 [-]: CALL      R0 3 1       ; R0(R1,R2)
 28 [-]: RETURN    R0 1         ; return 


; Function #125:
;
; Name:            
; Defined at line: 9160
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := mViewportHeight
  2 [-]: GETUPVAL  R3 U0        ; R3 := U0
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: MOVE      R5 R1        ; R5 := R1
  5 [-]: CALL      R3 3 1       ; R3(R4,R5)
  6 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
  7 [-]: GETGLOBAL R4 K2        ; R4 := mWindow
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: TEST      R3 1         ; if R3 then PC := 42
 10 [-]: JMP       42           ; PC := 42
 11 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
 12 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0xcbf89887]
 13 [-]: GETGLOBAL R5 K2        ; R5 := mWindow
 14 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mWindow"]
 15 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["width"]
 16 [-]: GETGLOBAL R6 K2        ; R6 := mWindow
 17 [-]: GETTABLE  R6 R6 K2     ; R6 := R6["mWindow"]
 18 [-]: GETTABLE  R6 R6 K5     ; R6 := R6["height"]
 19 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 20 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
 21 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x22c2c023]
 22 [-]: GETGLOBAL R5 K0        ; R5 := mViewportHeight
 23 [-]: LT        1 R2 R5      ; if R2 < R5 then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: OP_LOADBOOL R5 0 1       ; R5 := false; PC := 26
 26 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 27 [-]: CALL      R3 3 1       ; R3(R4,R5)
 28 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
 29 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x96a27931]
 30 [-]: CALL      R3 2 1       ; R3(R4)
 31 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
 32 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mVisualMode"]
 33 [-]: GETGLOBAL R4 K2        ; R4 := mWindow
 34 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["VISUAL_MODE_MENU_SIMPLE"]
 35 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 42
 36 [-]: JMP       42           ; PC := 42
 37 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
 38 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0xc2b5e351]
 39 [-]: GETGLOBAL R5 K2        ; R5 := mWindow
 40 [-]: GETTABLE  R5 R5 K9     ; R5 := R5["VISUAL_MODE_MENU_SIMPLE"]
 41 [-]: CALL      R3 3 1       ; R3(R4,R5)
 42 [-]: RETURN    R0 1         ; return 


; Function #126:
;
; Name:            
; Defined at line: 9176
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xdb371820]
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 10 [-]: GETGLOBAL R1 K3        ; R1 := mGameData
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: TEST      R0 0         ; if not R0 then PC := 26
 13 [-]: JMP       26           ; PC := 26
 14 [-]: GETGLOBAL R0 K4        ; R0 := 0x76ea806b
 15 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x3f3ae64c]
 16 [-]: CONST     R2 0         ; R2 := 0.000000
 17 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 18 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 19 [-]: MOVE      R2 R0        ; R2 := R0
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 1         ; if R1 then PC := 26
 22 [-]: JMP       26           ; PC := 26
 23 [-]: SELF      R1 R0 K6     ; R2 := R0; R1 := R0[0x80563238]
 24 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 25 [-]: SETGLOBALHASH R1 K3        ; mGameData := R1
 26 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 27 [-]: GETGLOBAL R2 K3        ; R2 := mGameData
 28 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 29 [-]: TEST      R1 1         ; if R1 then PC := 36
 30 [-]: JMP       36           ; PC := 36
 31 [-]: GETGLOBAL R1 K3        ; R1 := mGameData
 32 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xa552fd85]
 33 [-]: LOADK     R3 K8        ; R3 := "OnSyncWorldState"
 34 [-]: GETUPVAL  R4 U0        ; R4 := U0
 35 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 36 [-]: RETURN    R0 1         ; return 


; Function #127:
;
; Name:            
; Defined at line: 9195
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mContextMenu
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R1 K2        ; R1 := mInputBlocked
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K1        ; R1 := mContextMenu
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xdf42446e]
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0x03f57322
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 15 [-]: CALL      R1 0 1       ; R1(R2,...)
 16 [-]: RETURN    R0 1         ; return 


; Function #128:
;
; Name:            
; Defined at line: 9202
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mContextMenu
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := mContextMenu
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xbce5a201]
  9 [-]: GETGLOBAL R3 K3        ; R3 := 0x03f57322
 10 [-]: MOVE      R4 R0        ; R4 := R0
 11 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 12 [-]: CALL      R1 0 1       ; R1(R2,...)
 13 [-]: RETURN    R0 1         ; return 


; Function #129:
;
; Name:            
; Defined at line: 9209
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mContextMenu
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R1 K2        ; R1 := mInputBlocked
  7 [-]: TEST      R1 0         ; if not R1 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R1 K1        ; R1 := mContextMenu
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x070daa5a]
 12 [-]: GETGLOBAL R3 K4        ; R3 := 0x03f57322
 13 [-]: MOVE      R4 R0        ; R4 := R0
 14 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 15 [-]: CALL      R1 0 1       ; R1(R2,...)
 16 [-]: RETURN    R0 1         ; return 


; Function #130:
;
; Name:            
; Defined at line: 9216
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x9383bc56]
  3 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  4 [-]: LOADK     R2 K3        ; R2 := "ContextMenu.Btn1"
  5 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
  6 [-]: SETGLOBALHASH R0 K0        ; mContextMenu := R0
  7 [-]: GETGLOBAL R0 K0        ; R0 := mContextMenu
  8 [-]: SETTABLE  R0 K4 K5     ; R0["mLongestElement"] := 0.000000
  9 [-]: GETGLOBAL R0 K0        ; R0 := mContextMenu
 10 [-]: SETTABLE  R0 K6 K7     ; R0["mForcedVerticalSeparation"] := 32.000000
 11 [-]: GETGLOBAL R0 K0        ; R0 := mContextMenu
 12 [-]: SETTABLE  R0 K8 K9     ; R0["mWrapAroundNavigation"] := false
 13 [-]: GETGLOBAL R0 K0        ; R0 := mContextMenu
 14 [-]: SETTABLE  R0 K10 K11   ; R0["mVisibleElements"] := 8.000000
 15 [-]: GETGLOBAL R0 K0        ; R0 := mContextMenu
 16 [-]: CLOSURE   R1 0         ; R1 := closure(Function #130.1)
 17 [-]: GETUPVAL  R0 U1        ; R0 := U1
 18 [-]: SETTABLE  R0 K12 R1    ; R0["mOnSelectedCallback"] := R1
 19 [-]: GETGLOBAL R0 K0        ; R0 := mContextMenu
 20 [-]: CLOSURE   R1 1         ; R1 := closure(Function #130.2)
 21 [-]: SETTABLE  R0 K13 R1    ; R0["mElementDrawCallback"] := R1
 22 [-]: GETUPVAL  R0 U2        ; R0 := U2
 23 [-]: GETTABLE  R0 R0 K14    ; R82 := R0[0x8bcd12b6]
 24 [-]: GETUPVAL  R1 U3        ; R1 := U3
 25 [-]: GETTABLE  R1 R1 K15    ; R82 := R1[0x5d10207d]
 26 [-]: CONST     R2 9         ; R2 := 9.000000
 27 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 28 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
 29 [-]: CALL      R1 4 0       ; R1,... := R1(R2,R3,R4)
 30 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
 31 [-]: GETUPVAL  R1 U2        ; R1 := U2
 32 [-]: GETTABLE  R1 R1 K14    ; R82 := R1[0x8bcd12b6]
 33 [-]: GETUPVAL  R2 U3        ; R2 := U3
 34 [-]: GETTABLE  R2 R2 K15    ; R82 := R2[0x5d10207d]
 35 [-]: CONST     R3 2         ; R3 := 2.000000
 36 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 37 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 38 [-]: CALL      R2 4 0       ; R2,... := R2(R3,R4,R5)
 39 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 40 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 41 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0xd5181643]
 42 [-]: LOADK     R4 K18       ; R4 := "ContextMenu.Bg"
 43 [-]: GETGLOBAL R5 K19       ; R5 := 0x0032441c
 44 [-]: GETTABLE  R5 R5 K20    ; R5 := R5["UIMaterial_RectangleNoDepth"]
 45 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 46 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 47 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2[0x91e13703]
 48 [-]: LOADK     R4 K18       ; R4 := "ContextMenu.Bg"
 49 [-]: LOADK     R5 K22       ; R5 := "RectEdgeColor"
 50 [-]: GETTABLE  R6 R0 K23    ; R6 := R0["r"]
 51 [-]: GETTABLE  R7 R0 K24    ; R7 := R0["g"]
 52 [-]: GETTABLE  R8 R0 K25    ; R8 := R0["b"]
 53 [-]: LOADK     R9 K26       ; R9 := 0.300000
 54 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 55 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 56 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2[0x91e13703]
 57 [-]: LOADK     R4 K18       ; R4 := "ContextMenu.Bg"
 58 [-]: LOADK     R5 K27       ; R5 := "RectInnerColor"
 59 [-]: GETTABLE  R6 R1 K23    ; R6 := R1["r"]
 60 [-]: GETTABLE  R7 R1 K24    ; R7 := R1["g"]
 61 [-]: GETTABLE  R8 R1 K25    ; R8 := R1["b"]
 62 [-]: LOADK     R9 K28       ; R9 := 0.900000
 63 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 64 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 65 [-]: SELF      R2 R2 K29    ; R3 := R2; R2 := R2[0xaade900e]
 66 [-]: LOADK     R4 K30       ; R4 := "ContextMenu"
 67 [-]: CONST     R5 59        ; R5 := 59.000000
 68 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 69 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 70 [-]: GETGLOBAL R2 K2        ; R2 := 0xae91e43b
 71 [-]: SELF      R2 R2 K29    ; R3 := R2; R2 := R2[0xaade900e]
 72 [-]: LOADK     R4 K30       ; R4 := "ContextMenu"
 73 [-]: CONST     R5 11        ; R5 := 11.000000
 74 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 75 [-]: CALL      R2 5 1       ; R2(R3,R4,R5,R6)
 76 [-]: RETURN    R0 1         ; return 


; Function #130.1:
;
; Name:            
; Defined at line: 9223
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["PressedCallback"]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: LOADNIL   R1 R1        ; R1 := nil
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 14 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["callbackParam"]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 23
 17 [-]: JMP       23           ; PC := 23
 18 [-]: GETTABLE  R2 R0 K3     ; R82 := R2[0x372f38bf]
 19 [-]: GETTABLE  R3 R0 K2     ; R3 := R0["callbackParam"]
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: MOVE      R1 R2        ; R1 := R2
 22 [-]: JMP       26           ; PC := 26
 23 [-]: GETTABLE  R2 R0 K3     ; R82 := R2[0x372f38bf]
 24 [-]: CALL      R2 1 2       ; R2 := R2()
 25 [-]: MOVE      R1 R2        ; R1 := R2
 26 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 27 [-]: MOVE      R3 R1        ; R3 := R1
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: TEST      R2 1         ; if R2 then PC := 33
 30 [-]: JMP       33           ; PC := 33
 31 [-]: TEST      R1 0         ; if not R1 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: GETUPVAL  R2 U0        ; R2 := U0
 34 [-]: CALL      R2 1 1       ; R2()
 35 [-]: RETURN    R0 1         ; return 


; Function #130.2:
;
; Name:            
; Defined at line: 9240
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0x2d0fad09
  8 [-]: LOADK     R2 K2        ; R2 := "Lotus.Interface.Components.ThemedButton"
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETTABLE  R2 R1 K4     ; R82 := R2[0xae6791ba]
 11 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 12 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 13 [-]: GETTABLE  R5 R0 K7     ; R5 := R0["Name"]
 14 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 15 [-]: SETTABLE  R0 K3 R2     ; R0["Button"] := R2
 16 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Button"]
 17 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0x1403231b]
 18 [-]: GETTABLE  R4 R0 K9     ; R4 := R0["Id"]
 19 [-]: CALL      R2 3 1       ; R2(R3,R4)
 20 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Button"]
 21 [-]: SETTABLE  R2 K10 K11   ; R2["mMinSize"] := 200.000000
 22 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Button"]
 23 [-]: SETTABLE  R2 K12 K13   ; R2["mAlignment"] := "left"
 24 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Button"]
 25 [-]: SETTABLE  R2 K14 K15   ; R2["mTextBuffer"] := 10.000000
 26 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Button"]
 27 [-]: CLOSURE   R3 0         ; R3 := closure(Function #130.2.1)
 28 [-]: MOVE      R0 R0        ; R0 := R0
 29 [-]: SETTABLE  R2 K16 R3    ; R2["mOnReleasedCallback"] := R3
 30 [-]: GETTABLE  R2 R0 K3     ; R2 := R0["Button"]
 31 [-]: SELF      R2 R2 K17    ; R3 := R2; R2 := R2[0x71e9ac81]
 32 [-]: CALL      R2 2 1       ; R2(R3)
 33 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 34 [-]: SELF      R2 R2 K18    ; R3 := R2; R2 := R2[0xd5181643]
 35 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 36 [-]: LOADK     R5 K19       ; R5 := ".Label"
 37 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 38 [-]: GETGLOBAL R5 K20       ; R5 := 0x0032441c
 39 [-]: GETTABLE  R5 R5 K21    ; R5 := R5["UIMaterial_PlainText"]
 40 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 41 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 42 [-]: SELF      R2 R2 K22    ; R3 := R2; R2 := R2[0x2ce15376]
 43 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mClipName"]
 44 [-]: LOADK     R5 K23       ; R5 := "Label"
 45 [-]: CONST     R6 33        ; R6 := 33.000000
 46 [-]: CALL      R2 5 2       ; R2 := R2(R3,R4,R5,R6)
 47 [-]: GETGLOBAL R3 K24       ; R3 := mContextMenu
 48 [-]: GETGLOBAL R4 K26       ; R4 := 0x5bced4c4
 49 [-]: GETTABLE  R4 R4 K27    ; R82 := R4[0xb62ecfe0]
 50 [-]: GETGLOBAL R5 K24       ; R5 := mContextMenu
 51 [-]: GETTABLE  R5 R5 K25    ; R5 := R5["mLongestElement"]
 52 [-]: MOVE      R6 R2        ; R6 := R2
 53 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 54 [-]: SETTABLE  R3 K25 R4    ; R3["mLongestElement"] := R4
 55 [-]: RETURN    R0 1         ; return 


; Function #130.2.1:
;
; Name:            
; Defined at line: 9252
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mContextMenu
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x0274aa4e]
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #131:
;
; Name:            
; Defined at line: 9273
; #Upvalues:       2
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["NEWS"]
  3 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 27
  4 [-]: JMP       27           ; PC := 27
  5 [-]: CONST     R3 1         ; R3 := 1.000000
  6 [-]: LEN       R4 R1        ; R4 := # R1
  7 [-]: CONST     R5 1         ; R5 := 1.000000
  8 [-]: FORPREP   R3 25        ; R3 -= R5; PC := 25
  9 [-]: GETUPVAL  R7 U1        ; R7 := U1
 10 [-]: NEWTABLE  R8 0 0       ; R8 := {}
 11 [-]: SETTABLE  R7 R6 R8     ; R7[R6] := R8
 12 [-]: GETUPVAL  R7 U1        ; R7 := U1
 13 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 14 [-]: GETTABLE  R8 R1 R6     ; R8 := R1[R6]
 15 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["mId"]
 16 [-]: SELF      R8 R8 K3     ; R9 := R8; R8 := R8[0xf537cfc7]
 17 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 18 [-]: SETTABLE  R7 K1 R8     ; R7["id"] := R8
 19 [-]: GETUPVAL  R7 U1        ; R7 := U1
 20 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 21 [-]: GETTABLE  R8 R1 R6     ; R8 := R1[R6]
 22 [-]: GETTABLE  R8 R8 K5     ; R8 := R8["mDate"]
 23 [-]: GETTABLE  R8 R8 K6     ; R8 := R8["sec"]
 24 [-]: SETTABLE  R7 K4 R8     ; R7["dateSec"] := R8
 25 [-]: FORLOOP   R3 9         ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
 26 [-]: JMP       52           ; PC := 52
 27 [-]: GETUPVAL  R7 U0        ; R7 := U0
 28 [-]: GETTABLE  R7 R7 K7     ; R7 := R7["PVPAFFECTOR"]
 29 [-]: EQ        0 R2 R7      ; if R2 ~= R7 then PC := 42
 30 [-]: JMP       42           ; PC := 42
 31 [-]: CONST     R7 1         ; R7 := 1.000000
 32 [-]: LEN       R8 R1        ; R8 := # R1
 33 [-]: CONST     R9 1         ; R9 := 1.000000
 34 [-]: FORPREP   R7 40        ; R7 -= R9; PC := 40
 35 [-]: GETTABLE  R11 R1 R10   ; R11 := R1[R10]
 36 [-]: GETTABLE  R11 R11 K2   ; R11 := R11["mId"]
 37 [-]: SELF      R11 R11 K8   ; R12 := R11; R11 := R11[0xfe7704c3]
 38 [-]: CALL      R11 2 2      ; R11 := R11(R12)
 39 [-]: SETTABLE  R0 R10 R11   ; R0[R10] := R11
 40 [-]: FORLOOP   R7 35        ; R7 += R9; if R7 <= R8 then begin PC := 35; R10 := R7 end
 41 [-]: JMP       52           ; PC := 52
 42 [-]: CONST     R11 1        ; R11 := 1.000000
 43 [-]: LEN       R12 R1       ; R12 := # R1
 44 [-]: CONST     R13 1        ; R13 := 1.000000
 45 [-]: FORPREP   R11 51       ; R11 -= R13; PC := 51
 46 [-]: GETTABLE  R15 R1 R14   ; R15 := R1[R14]
 47 [-]: GETTABLE  R15 R15 K2   ; R15 := R15["mId"]
 48 [-]: SELF      R15 R15 K3   ; R16 := R15; R15 := R15[0xf537cfc7]
 49 [-]: CALL      R15 2 2      ; R15 := R15(R16)
 50 [-]: SETTABLE  R0 R14 R15   ; R0[R14] := R15
 51 [-]: FORLOOP   R11 46       ; R11 += R13; if R11 <= R12 then begin PC := 46; R14 := R11 end
 52 [-]: RETURN    R0 1         ; return 


; Function #132:
;
; Name:            
; Defined at line: 9291
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  18

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R82 := R1[0x5e35d4d6]
  3 [-]: CALL      R1 1 2       ; R1 := R1()
  4 [-]: SELF      R2 R1 K1     ; R3 := R1; R2 := R1[0x3ad9ed31]
  5 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mMissionInfo"]
  6 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["location"]
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: GETGLOBAL R3 K4        ; R3 := 0x603636ad
  9 [-]: GETTABLE  R4 R2 K5     ; R4 := R2["locTag"]
 10 [-]: SELF      R4 R4 K6     ; R5 := R4; R4 := R4[0x6d604ba7]
 11 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 12 [-]: LOADNIL   R5 R5        ; R5 := nil
 13 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 14 [-]: GETGLOBAL R4 K4        ; R4 := 0x603636ad
 15 [-]: SELF      R5 R1 K7     ; R6 := R1; R5 := R1[0xc1dee03f]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: GETTABLE  R6 R2 K8     ; R6 := R2["region"]
 18 [-]: ADD       R6 R6 K9     ; R6 := R6 + 1.000000
 19 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 20 [-]: GETTABLE  R5 R5 K10    ; R5 := R5["name"]
 21 [-]: LOADNIL   R6 R6        ; R6 := nil
 22 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 23 [-]: GETUPVAL  R5 U0        ; R5 := U0
 24 [-]: GETTABLE  R5 R5 K11    ; R82 := R5[0xfbe41490]
 25 [-]: GETGLOBAL R6 K12       ; R6 := 0xae91e43b
 26 [-]: GETTABLE  R7 R0 K2     ; R7 := R0["mMissionInfo"]
 27 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["missionReward"]
 28 [-]: LOADNIL   R8 R8        ; R8 := nil
 29 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
 30 [-]: CALL      R5 5 2       ; R5 := R5(R6,R7,R8,R9)
 31 [-]: GETGLOBAL R6 K14       ; R6 := 0x34291f5c
 32 [-]: GETTABLE  R6 R6 K15    ; R82 := R6[0x397b920f]
 33 [-]: GETTABLE  R7 R0 K16    ; R7 := R0["mExpiry"]
 34 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 35 [-]: GETGLOBAL R7 K4        ; R7 := 0x603636ad
 36 [-]: LOADK     R8 K17       ; R8 := "/Lotus/Language/Menu/Notification_Expiry"
 37 [-]: LOADNIL   R9 R9        ; R9 := nil
 38 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 39 [-]: GETGLOBAL R8 K18       ; R8 := 0x7f5022cf
 40 [-]: GETTABLE  R8 R8 K19    ; R82 := R8[0xe8072ded]
 41 [-]: MOVE      R9 R7        ; R9 := R7
 42 [-]: GETUPVAL  R10 U0       ; R10 := U0
 43 [-]: GETTABLE  R10 R10 K20  ; R82 := R10[0xcfe63447]
 44 [-]: MOVE      R11 R6       ; R11 := R6
 45 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
 46 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
 47 [-]: MOVE      R7 R8        ; R7 := R8
 48 [-]: GETGLOBAL R8 K4        ; R8 := 0x603636ad
 49 [-]: LOADK     R9 K21       ; R9 := "/Lotus/Language/Menu/Notification_Alert"
 50 [-]: LOADNIL   R10 R10      ; R10 := nil
 51 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 52 [-]: MOVE      R9 R8        ; R9 := R8
 53 [-]: LOADK     R10 K22      ; R10 := ": "
 54 [-]: MOVE      R11 R3       ; R11 := R3
 55 [-]: LOADK     R12 K23      ; R12 := " ("
 56 [-]: MOVE      R13 R4       ; R13 := R4
 57 [-]: LOADK     R14 K24      ; R14 := ") - "
 58 [-]: MOVE      R15 R5       ; R15 := R5
 59 [-]: LOADK     R16 K25      ; R16 := ", "
 60 [-]: MOVE      R17 R7       ; R17 := R7
 61 [-]: CONCAT    R8 R9 R17    ; R8 := R9 .. R10 .. R11 .. R12 .. R13 .. R14 .. R15 .. R16 .. R17
 62 [-]: RETURN    R8 2         ; return R8
 63 [-]: RETURN    R0 1         ; return 


; Function #133:
;
; Name:            
; Defined at line: 9305
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mMsg"]
  2 [-]: EQ        1 R1 K1      ; if R1 == "" then PC := 13
  3 [-]: JMP       13           ; PC := 13
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x603636ad
  5 [-]: LOADK     R2 K3        ; R2 := "/Lotus/Language/Menu/Notification_News"
  6 [-]: LOADNIL   R3 R3        ; R3 := nil
  7 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  8 [-]: LOADK     R2 K4        ; R2 := ": "
  9 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mMsg"]
 10 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 11 [-]: RETURN    R1 2         ; return R1
 12 [-]: JMP       15           ; PC := 15
 13 [-]: LOADNIL   R2 R2        ; R2 := nil
 14 [-]: RETURN    R2 2         ; return R2
 15 [-]: RETURN    R0 1         ; return 


; Function #134:
;
; Name:            
; Defined at line: 9314
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R82 := R0[0x06d055f9]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: LOADK     R2 K1        ; R2 := "/Lotus/Language/Menu/Notification_NewBuildSubjectReminder"
  5 [-]: LOADK     R3 K2        ; R3 := "/Lotus/Language/Menu/Notification_NewBuildSubject"
  6 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0x603636ad
  8 [-]: MOVE      R2 R0        ; R2 := R0
  9 [-]: LOADNIL   R3 R3        ; R3 := nil
 10 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 11 [-]: LOADK     R2 K4        ; R2 := ": "
 12 [-]: GETGLOBAL R3 K3        ; R3 := 0x603636ad
 13 [-]: LOADK     R4 K5        ; R4 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableInGame"
 14 [-]: LOADNIL   R5 R5        ; R5 := nil
 15 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 16 [-]: CONCAT    R1 R1 R3     ; R1 := R1 .. R2 .. R3
 17 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 18 [-]: SETUPVAL  R2 U1        ; U82 := 
 19 [-]: RETURN    R1 2         ; return R1
 20 [-]: RETURN    R0 1         ; return 


; Function #135:
;
; Name:            
; Defined at line: 9322
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x603636ad
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mDesc"]
  3 [-]: LOADNIL   R3 R3        ; R3 := nil
  4 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  5 [-]: LOADK     R2 K2        ; R2 := ""
  6 [-]: GETTABLE  R3 R0 K3     ; R3 := R0["mTypes"]
  7 [-]: LEN       R3 R3        ; R3 := # R3
  8 [-]: LT        1 K4 R3      ; if 0.000000 < R3 then PC := 15
  9 [-]: JMP       15           ; PC := 15
 10 [-]: GETGLOBAL R3 K5        ; R3 := 0x7b998233
 11 [-]: GETTABLE  R4 R0 K6     ; R4 := R0["mItemType"]
 12 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 13 [-]: TEST      R3 1         ; if R3 then PC := 37
 14 [-]: JMP       37           ; PC := 37
 15 [-]: GETTABLE  R3 R0 K7     ; R3 := R0["mBounty"]
 16 [-]: TEST      R3 1         ; if R3 then PC := 21
 17 [-]: JMP       21           ; PC := 21
 18 [-]: GETTABLE  R3 R0 K8     ; R3 := R0["mMaxConclave"]
 19 [-]: LT        0 K4 R3      ; if 0.000000 >= R3 then PC := 34
 20 [-]: JMP       34           ; PC := 34
 21 [-]: GETUPVAL  R3 U0        ; R3 := U0
 22 [-]: GETTABLE  R3 R3 K9     ; R82 := R3[0x06d055f9]
 23 [-]: GETGLOBAL R4 K10       ; R4 := 0x7f5022cf
 24 [-]: GETTABLE  R4 R4 K11    ; R82 := R4[0xa5c556b9]
 25 [-]: GETGLOBAL R5 K12       ; R5 := 0x64fb1586
 26 [-]: GETTABLE  R6 R0 K13    ; R6 := R0["mNode"]
 27 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 28 [-]: LOADK     R6 K14       ; R6 := "Pvp"
 29 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 30 [-]: LOADK     R5 K15       ; R5 := "/Lotus/Language/Menu/Notification_Conclave"
 31 [-]: LOADK     R6 K16       ; R6 := "/Lotus/Language/Menu/Notification_Bounty"
 32 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 33 [-]: MOVE      R2 R3        ; R2 := R3
 34 [-]: MOVE      R3 R2        ; R3 := R2
 35 [-]: LOADK     R4 K17       ; R4 := ": "
 36 [-]: CONCAT    R2 R3 R4     ; R2 := R3 .. R4
 37 [-]: GETGLOBAL R3 K0        ; R3 := 0x603636ad
 38 [-]: MOVE      R4 R2        ; R4 := R2
 39 [-]: LOADNIL   R5 R5        ; R5 := nil
 40 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 41 [-]: MOVE      R4 R1        ; R4 := R1
 42 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
 43 [-]: RETURN    R3 2         ; return R3
 44 [-]: RETURN    R0 1         ; return 


; Function #136:
;
; Name:            
; Defined at line: 9336
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x603636ad
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mLocTag"]
  3 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x6d604ba7]
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: LOADNIL   R3 R3        ; R3 := nil
  6 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  7 [-]: GETUPVAL  R2 U0        ; R2 := U0
  8 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0x5e35d4d6]
  9 [-]: CALL      R2 1 2       ; R2 := R2()
 10 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0x3ad9ed31]
 11 [-]: GETTABLE  R5 R0 K5     ; R5 := R0["mNode"]
 12 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 13 [-]: GETGLOBAL R4 K0        ; R4 := 0x603636ad
 14 [-]: GETTABLE  R5 R3 K6     ; R5 := R3["locTag"]
 15 [-]: SELF      R5 R5 K2     ; R6 := R5; R5 := R5[0x6d604ba7]
 16 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 17 [-]: LOADNIL   R6 R6        ; R6 := nil
 18 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 19 [-]: GETUPVAL  R5 U0        ; R5 := U0
 20 [-]: GETTABLE  R5 R5 K7     ; R82 := R5[0xfbe41490]
 21 [-]: GETGLOBAL R6 K8        ; R6 := 0xae91e43b
 22 [-]: GETTABLE  R7 R0 K9     ; R7 := R0["mAttackerReward"]
 23 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 24 [-]: GETUPVAL  R6 U0        ; R6 := U0
 25 [-]: GETTABLE  R6 R6 K7     ; R82 := R6[0xfbe41490]
 26 [-]: GETGLOBAL R7 K8        ; R7 := 0xae91e43b
 27 [-]: GETTABLE  R8 R0 K10    ; R8 := R0["mDefenderReward"]
 28 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 29 [-]: GETGLOBAL R7 K0        ; R7 := 0x603636ad
 30 [-]: SELF      R8 R2 K11    ; R9 := R2; R8 := R2[0xc1dee03f]
 31 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 32 [-]: GETTABLE  R9 R3 K12    ; R9 := R3["region"]
 33 [-]: ADD       R9 R9 K13    ; R9 := R9 + 1.000000
 34 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
 35 [-]: GETTABLE  R8 R8 K14    ; R8 := R8["name"]
 36 [-]: LOADNIL   R9 R9        ; R9 := nil
 37 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 38 [-]: GETGLOBAL R8 K0        ; R8 := 0x603636ad
 39 [-]: LOADK     R9 K15       ; R9 := "/Lotus/Language/Menu/MissionBoard_InvasionRewardCompare"
 40 [-]: LOADNIL   R10 R10      ; R10 := nil
 41 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 42 [-]: GETTABLE  R9 R0 K16    ; R9 := R0["mFaction"]
 43 [-]: EQ        0 R9 K18     ; if R9 ~= 2.000000 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: LOADK     R5 K19       ; R5 := ""
 46 [-]: JMP       52           ; PC := 52
 47 [-]: MOVE      R9 R5        ; R9 := R5
 48 [-]: LOADK     R10 K20      ; R10 := " "
 49 [-]: MOVE      R11 R8       ; R11 := R8
 50 [-]: LOADK     R12 K20      ; R12 := " "
 51 [-]: CONCAT    R5 R9 R12    ; R5 := R9 .. R10 .. R11 .. R12
 52 [-]: MOVE      R9 R1        ; R9 := R1
 53 [-]: LOADK     R10 K21      ; R10 := ": "
 54 [-]: MOVE      R11 R4       ; R11 := R4
 55 [-]: LOADK     R12 K22      ; R12 := " ("
 56 [-]: MOVE      R13 R7       ; R13 := R7
 57 [-]: LOADK     R14 K23      ; R14 := ") - "
 58 [-]: MOVE      R15 R5       ; R15 := R5
 59 [-]: MOVE      R16 R6       ; R16 := R6
 60 [-]: CONCAT    R9 R9 R16    ; R9 := R9 .. R10 .. R11 .. R12 .. R13 .. R14 .. R15 .. R16
 61 [-]: RETURN    R9 2         ; return R9
 62 [-]: RETURN    R0 1         ; return 


; Function #137:
;
; Name:            
; Defined at line: 9357
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0xb009bbc6
  2 [-]: GETTABLE  R2 R0 K1     ; R2 := R0["mChallengeTypeRefID"]
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: GETGLOBAL R2 K2        ; R2 := 0x34291f5c
  5 [-]: GETTABLE  R2 R2 K3     ; R82 := R2[0x397b920f]
  6 [-]: GETTABLE  R3 R0 K4     ; R3 := R0["mEndDate"]
  7 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  8 [-]: GETGLOBAL R3 K5        ; R3 := 0x603636ad
  9 [-]: LOADK     R4 K6        ; R4 := "/Lotus/Language/Menu/Notification_Expiry"
 10 [-]: LOADNIL   R5 R5        ; R5 := nil
 11 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 12 [-]: GETGLOBAL R4 K7        ; R4 := 0x7f5022cf
 13 [-]: GETTABLE  R4 R4 K8     ; R82 := R4[0xe8072ded]
 14 [-]: MOVE      R5 R3        ; R5 := R3
 15 [-]: GETUPVAL  R6 U0        ; R6 := U0
 16 [-]: GETTABLE  R6 R6 K9     ; R82 := R6[0xcfe63447]
 17 [-]: MOVE      R7 R2        ; R7 := R2
 18 [-]: CALL      R6 2 0       ; R6,... := R6(R7)
 19 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 20 [-]: MOVE      R3 R4        ; R3 := R4
 21 [-]: GETGLOBAL R4 K5        ; R4 := 0x603636ad
 22 [-]: GETGLOBAL R5 K10       ; R5 := 0x64fb1586
 23 [-]: GETTABLE  R6 R1 K11    ; R6 := R1["mLocName"]
 24 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 25 [-]: LOADNIL   R6 R6        ; R6 := nil
 26 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 27 [-]: MOVE      R5 R4        ; R5 := R4
 28 [-]: LOADK     R6 K12       ; R6 := ": "
 29 [-]: MOVE      R7 R3        ; R7 := R3
 30 [-]: CONCAT    R4 R5 R7     ; R4 := R5 .. R6 .. R7
 31 [-]: RETURN    R4 2         ; return R4
 32 [-]: RETURN    R0 1         ; return 


; Function #138:
;
; Name:            
; Defined at line: 9368
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mGameData
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R0 K1        ; R0 := mGameData
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x63a9c319]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: LT        0 K3 R0      ; if 0.000000 >= R0 then PC := 19
 10 [-]: JMP       19           ; PC := 19
 11 [-]: GETGLOBAL R1 K4        ; R1 := _T
 12 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["gLastHighPriorityMessageCount"]
 13 [-]: EQ        1 R1 R0      ; if R1 == R0 then PC := 19
 14 [-]: JMP       19           ; PC := 19
 15 [-]: GETGLOBAL R1 K4        ; R1 := _T
 16 [-]: SETTABLE  R1 K6 K7     ; R1["gQueueMailbox"] := true
 17 [-]: GETGLOBAL R1 K4        ; R1 := _T
 18 [-]: SETTABLE  R1 K5 R0     ; R1["gLastHighPriorityMessageCount"] := R0
 19 [-]: RETURN    R0 1         ; return 


; Function #139:
;
; Name:            
; Defined at line: 9378
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
  2 [-]: TEST      R2 0         ; if not R2 then PC := 9
  3 [-]: JMP       9            ; PC := 9
  4 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xd55cad54]
  6 [-]: MOVE      R4 R0        ; R4 := R0
  7 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
  8 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  9 [-]: GETGLOBAL R2 K2        ; R2 := _T
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["ShowNotification"]
 11 [-]: EQ        1 R2 K4      ; if R2 == nil then PC := 18
 12 [-]: JMP       18           ; PC := 18
 13 [-]: GETGLOBAL R2 K2        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K5     ; R82 := R2[0x7dce37bc]
 15 [-]: MOVE      R3 R0        ; R3 := R0
 16 [-]: MOVE      R4 R1        ; R4 := R1
 17 [-]: CALL      R2 3 1       ; R2(R3,R4)
 18 [-]: RETURN    R0 1         ; return 


; Function #140:
;
; Name:            
; Defined at line: 9387
; #Upvalues:       10
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  44

  1 [-]: GETUPVAL  R3 U0        ; R3 := U0
  2 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["BUILD"]
  3 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 68
  4 [-]: JMP       68           ; PC := 68
  5 [-]: LEN       R3 R0        ; R3 := # R0
  6 [-]: CONST     R4 1         ; R4 := 1.000000
  7 [-]: CONST     R5 -1        ; R5 := -1.000000
  8 [-]: FORPREP   R3 67        ; R3 -= R5; PC := 67
  9 [-]: GETGLOBAL R7 K1        ; R7 := 0xce225efa
 10 [-]: CONST     R8 0         ; R8 := 0.000000
 11 [-]: CALL      R7 2 1       ; R7(R8)
 12 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 13 [-]: GETUPVAL  R8 U0        ; R8 := U0
 14 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["NEWS"]
 15 [-]: EQ        0 R2 R8      ; if R2 ~= R8 then PC := 34
 16 [-]: JMP       34           ; PC := 34
 17 [-]: CONST     R8 1         ; R8 := 1.000000
 18 [-]: LEN       R9 R1        ; R9 := # R1
 19 [-]: CONST     R10 1        ; R10 := 1.000000
 20 [-]: FORPREP   R8 32        ; R8 -= R10; PC := 32
 21 [-]: GETUPVAL  R12 U1       ; R12 := U1
 22 [-]: GETTABLE  R12 R12 R6   ; R12 := R12[R6]
 23 [-]: GETTABLE  R12 R12 K3   ; R12 := R12["id"]
 24 [-]: GETTABLE  R13 R1 R11   ; R13 := R1[R11]
 25 [-]: GETTABLE  R13 R13 K4   ; R13 := R13["mId"]
 26 [-]: SELF      R13 R13 K5   ; R14 := R13; R13 := R13[0xf537cfc7]
 27 [-]: CALL      R13 2 2      ; R13 := R13(R14)
 28 [-]: EQ        0 R12 R13    ; if R12 ~= R13 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 31 [-]: JMP       60           ; PC := 60
 32 [-]: FORLOOP   R8 21        ; R8 += R10; if R8 <= R9 then begin PC := 21; R11 := R8 end
 33 [-]: JMP       60           ; PC := 60
 34 [-]: CONST     R12 1        ; R12 := 1.000000
 35 [-]: LEN       R13 R1       ; R13 := # R1
 36 [-]: CONST     R14 1        ; R14 := 1.000000
 37 [-]: FORPREP   R12 59       ; R12 -= R14; PC := 59
 38 [-]: LOADNIL   R16 R16      ; R16 := nil
 39 [-]: GETUPVAL  R17 U0       ; R17 := U0
 40 [-]: GETTABLE  R17 R17 K6   ; R17 := R17["PVPAFFECTOR"]
 41 [-]: EQ        0 R2 R17     ; if R2 ~= R17 then PC := 49
 42 [-]: JMP       49           ; PC := 49
 43 [-]: GETTABLE  R17 R1 R15   ; R17 := R1[R15]
 44 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["mId"]
 45 [-]: SELF      R17 R17 K7   ; R18 := R17; R17 := R17[0xfe7704c3]
 46 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 47 [-]: MOVE      R16 R17      ; R16 := R17
 48 [-]: JMP       54           ; PC := 54
 49 [-]: GETTABLE  R17 R1 R15   ; R17 := R1[R15]
 50 [-]: GETTABLE  R17 R17 K4   ; R17 := R17["mId"]
 51 [-]: SELF      R17 R17 K5   ; R18 := R17; R17 := R17[0xf537cfc7]
 52 [-]: CALL      R17 2 2      ; R17 := R17(R18)
 53 [-]: MOVE      R16 R17      ; R16 := R17
 54 [-]: GETTABLE  R17 R0 R6    ; R17 := R0[R6]
 55 [-]: EQ        0 R17 R16    ; if R17 ~= R16 then PC := 59
 56 [-]: JMP       59           ; PC := 59
 57 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 58 [-]: JMP       60           ; PC := 60
 59 [-]: FORLOOP   R12 38       ; R12 += R14; if R12 <= R13 then begin PC := 38; R15 := R12 end
 60 [-]: TEST      R7 0         ; if not R7 then PC := 67
 61 [-]: JMP       67           ; PC := 67
 62 [-]: GETGLOBAL R17 K8       ; R17 := 0x33bdd652
 63 [-]: GETTABLE  R17 R17 K9   ; R82 := R17[0x9c1f3b5a]
 64 [-]: MOVE      R18 R0       ; R18 := R0
 65 [-]: MOVE      R19 R6       ; R19 := R6
 66 [-]: CALL      R17 3 1      ; R17(R18,R19)
 67 [-]: FORLOOP   R3 9         ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
 68 [-]: LEN       R17 R0       ; R17 := # R0
 69 [-]: CONST     R18 1        ; R18 := 1.000000
 70 [-]: LEN       R19 R1       ; R19 := # R1
 71 [-]: CONST     R20 1        ; R20 := 1.000000
 72 [-]: FORPREP   R18 293      ; R18 -= R20; PC := 293
 73 [-]: GETGLOBAL R22 K1       ; R22 := 0xce225efa
 74 [-]: CONST     R23 0        ; R23 := 0.000000
 75 [-]: CALL      R22 2 1      ; R22(R23)
 76 [-]: OP_LOADBOOL R22 1 0      ; R22 := true
 77 [-]: LOADNIL   R23 R23      ; R23 := nil
 78 [-]: GETUPVAL  R24 U0       ; R24 := U0
 79 [-]: GETTABLE  R24 R24 K6   ; R24 := R24["PVPAFFECTOR"]
 80 [-]: EQ        0 R2 R24     ; if R2 ~= R24 then PC := 88
 81 [-]: JMP       88           ; PC := 88
 82 [-]: GETTABLE  R24 R1 R21   ; R24 := R1[R21]
 83 [-]: GETTABLE  R24 R24 K4   ; R24 := R24["mId"]
 84 [-]: SELF      R24 R24 K7   ; R25 := R24; R24 := R24[0xfe7704c3]
 85 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 86 [-]: MOVE      R23 R24      ; R23 := R24
 87 [-]: JMP       93           ; PC := 93
 88 [-]: GETTABLE  R24 R1 R21   ; R24 := R1[R21]
 89 [-]: GETTABLE  R24 R24 K4   ; R24 := R24["mId"]
 90 [-]: SELF      R24 R24 K5   ; R25 := R24; R24 := R24[0xf537cfc7]
 91 [-]: CALL      R24 2 2      ; R24 := R24(R25)
 92 [-]: MOVE      R23 R24      ; R23 := R24
 93 [-]: GETUPVAL  R24 U0       ; R24 := U0
 94 [-]: GETTABLE  R24 R24 K2   ; R24 := R24["NEWS"]
 95 [-]: EQ        0 R2 R24     ; if R2 ~= R24 then PC := 118
 96 [-]: JMP       118          ; PC := 118
 97 [-]: GETTABLE  R24 R1 R21   ; R24 := R1[R21]
 98 [-]: GETTABLE  R24 R24 K10  ; R24 := R24["mDate"]
 99 [-]: GETTABLE  R24 R24 K11  ; R24 := R24["sec"]
100 [-]: CONST     R25 1        ; R25 := 1.000000
101 [-]: MOVE      R26 R17      ; R26 := R17
102 [-]: CONST     R27 1        ; R27 := 1.000000
103 [-]: FORPREP   R25 116      ; R25 -= R27; PC := 116
104 [-]: GETUPVAL  R29 U1       ; R29 := U1
105 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
106 [-]: GETTABLE  R29 R29 K3   ; R29 := R29["id"]
107 [-]: EQ        0 R23 R29    ; if R23 ~= R29 then PC := 116
108 [-]: JMP       116          ; PC := 116
109 [-]: GETUPVAL  R29 U1       ; R29 := U1
110 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
111 [-]: GETTABLE  R29 R29 K12  ; R29 := R29["dateSec"]
112 [-]: EQ        0 R24 R29    ; if R24 ~= R29 then PC := 116
113 [-]: JMP       116          ; PC := 116
114 [-]: OP_LOADBOOL R22 0 0      ; R22 := false
115 [-]: JMP       134          ; PC := 134
116 [-]: FORLOOP   R25 104      ; R25 += R27; if R25 <= R26 then begin PC := 104; R28 := R25 end
117 [-]: JMP       134          ; PC := 134
118 [-]: GETUPVAL  R29 U0       ; R29 := U0
119 [-]: GETTABLE  R29 R29 K0   ; R29 := R29["BUILD"]
120 [-]: EQ        0 R2 R29     ; if R2 ~= R29 then PC := 124
121 [-]: JMP       124          ; PC := 124
122 [-]: OP_LOADBOOL R22 1 0      ; R22 := true
123 [-]: JMP       134          ; PC := 134
124 [-]: CONST     R29 1        ; R29 := 1.000000
125 [-]: MOVE      R30 R17      ; R30 := R17
126 [-]: CONST     R31 1        ; R31 := 1.000000
127 [-]: FORPREP   R29 133      ; R29 -= R31; PC := 133
128 [-]: GETTABLE  R33 R0 R32   ; R33 := R0[R32]
129 [-]: EQ        0 R23 R33    ; if R23 ~= R33 then PC := 133
130 [-]: JMP       133          ; PC := 133
131 [-]: OP_LOADBOOL R22 0 0      ; R22 := false
132 [-]: JMP       134          ; PC := 134
133 [-]: FORLOOP   R29 128      ; R29 += R31; if R29 <= R30 then begin PC := 128; R32 := R29 end
134 [-]: TEST      R22 0        ; if not R22 then PC := 293
135 [-]: JMP       293          ; PC := 293
136 [-]: GETGLOBAL R33 K13      ; R33 := 0x7b998233
137 [-]: GETGLOBAL R34 K14      ; R34 := mGameData
138 [-]: CALL      R33 2 2      ; R33 := R33(R34)
139 [-]: TEST      R33 1        ; if R33 then PC := 293
140 [-]: JMP       293          ; PC := 293
141 [-]: CONST     R33 0        ; R33 := 0.000000
142 [-]: LOADNIL   R34 R35      ; R34 := R35 := nil
143 [-]: GETUPVAL  R36 U0       ; R36 := U0
144 [-]: GETTABLE  R36 R36 K2   ; R36 := R36["NEWS"]
145 [-]: EQ        0 R2 R36     ; if R2 ~= R36 then PC := 162
146 [-]: JMP       162          ; PC := 162
147 [-]: LEN       R36 R0       ; R36 := # R0
148 [-]: ADD       R36 R36 K15  ; R36 := R36 + 1.000000
149 [-]: GETUPVAL  R37 U1       ; R37 := U1
150 [-]: NEWTABLE  R38 0 0      ; R38 := {}
151 [-]: SETTABLE  R37 R36 R38  ; R37[R36] := R38
152 [-]: GETUPVAL  R37 U1       ; R37 := U1
153 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
154 [-]: SETTABLE  R37 K3 R23   ; R37["id"] := R23
155 [-]: GETUPVAL  R37 U1       ; R37 := U1
156 [-]: GETTABLE  R37 R37 R36  ; R37 := R37[R36]
157 [-]: GETTABLE  R38 R1 R21   ; R38 := R1[R21]
158 [-]: GETTABLE  R38 R38 K10  ; R38 := R38["mDate"]
159 [-]: GETTABLE  R38 R38 K11  ; R38 := R38["sec"]
160 [-]: SETTABLE  R37 K12 R38  ; R37["dateSec"] := R38
161 [-]: JMP       170          ; PC := 170
162 [-]: GETUPVAL  R37 U0       ; R37 := U0
163 [-]: GETTABLE  R37 R37 K0   ; R37 := R37["BUILD"]
164 [-]: EQ        0 R2 R37     ; if R2 ~= R37 then PC := 167
165 [-]: JMP       167          ; PC := 167
166 [-]: JMP       170          ; PC := 170
167 [-]: LEN       R37 R0       ; R37 := # R0
168 [-]: ADD       R37 R37 K15  ; R37 := R37 + 1.000000
169 [-]: SETTABLE  R0 R37 R23   ; R0[R37] := R23
170 [-]: OP_LOADBOOL R37 0 0      ; R37 := false
171 [-]: GETUPVAL  R38 U0       ; R38 := U0
172 [-]: GETTABLE  R38 R38 K16  ; R38 := R38["ALERT"]
173 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 187
174 [-]: JMP       187          ; PC := 187
175 [-]: GETUPVAL  R38 U2       ; R38 := U2
176 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
177 [-]: CALL      R38 2 2      ; R38 := R38(R39)
178 [-]: MOVE      R34 R38      ; R34 := R38
179 [-]: GETGLOBAL R38 K17      ; R38 := 0x34291f5c
180 [-]: GETTABLE  R38 R38 K18  ; R82 := R38[0x397b920f]
181 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
182 [-]: GETTABLE  R39 R39 K19  ; R39 := R39["mActivation"]
183 [-]: CALL      R38 2 2      ; R38 := R38(R39)
184 [-]: MOVE      R33 R38      ; R33 := R38
185 [-]: LOADK     R35 K20      ; R35 := "Alert"
186 [-]: JMP       269          ; PC := 269
187 [-]: GETUPVAL  R38 U0       ; R38 := U0
188 [-]: GETTABLE  R38 R38 K2   ; R38 := R38["NEWS"]
189 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 196
190 [-]: JMP       196          ; PC := 196
191 [-]: GETUPVAL  R38 U3       ; R38 := U3
192 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
193 [-]: CALL      R38 2 2      ; R38 := R38(R39)
194 [-]: MOVE      R34 R38      ; R34 := R38
195 [-]: JMP       269          ; PC := 269
196 [-]: GETUPVAL  R38 U0       ; R38 := U0
197 [-]: GETTABLE  R38 R38 K21  ; R38 := R38["GOAL"]
198 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 211
199 [-]: JMP       211          ; PC := 211
200 [-]: GETUPVAL  R38 U4       ; R38 := U4
201 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
202 [-]: CALL      R38 2 2      ; R38 := R38(R39)
203 [-]: MOVE      R34 R38      ; R34 := R38
204 [-]: GETGLOBAL R38 K17      ; R38 := 0x34291f5c
205 [-]: GETTABLE  R38 R38 K18  ; R82 := R38[0x397b920f]
206 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
207 [-]: GETTABLE  R39 R39 K19  ; R39 := R39["mActivation"]
208 [-]: CALL      R38 2 2      ; R38 := R38(R39)
209 [-]: MOVE      R33 R38      ; R33 := R38
210 [-]: JMP       269          ; PC := 269
211 [-]: GETUPVAL  R38 U0       ; R38 := U0
212 [-]: GETTABLE  R38 R38 K22  ; R38 := R38["INVASION"]
213 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 227
214 [-]: JMP       227          ; PC := 227
215 [-]: GETUPVAL  R38 U5       ; R38 := U5
216 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
217 [-]: CALL      R38 2 2      ; R38 := R38(R39)
218 [-]: MOVE      R34 R38      ; R34 := R38
219 [-]: GETGLOBAL R38 K17      ; R38 := 0x34291f5c
220 [-]: GETTABLE  R38 R38 K18  ; R82 := R38[0x397b920f]
221 [-]: GETTABLE  R39 R1 R21   ; R39 := R1[R21]
222 [-]: GETTABLE  R39 R39 K19  ; R39 := R39["mActivation"]
223 [-]: CALL      R38 2 2      ; R38 := R38(R39)
224 [-]: MOVE      R33 R38      ; R33 := R38
225 [-]: LOADK     R35 K23      ; R35 := "Invasion"
226 [-]: JMP       269          ; PC := 269
227 [-]: GETUPVAL  R38 U0       ; R38 := U0
228 [-]: GETTABLE  R38 R38 K0   ; R38 := R38["BUILD"]
229 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 237
230 [-]: JMP       237          ; PC := 237
231 [-]: GETUPVAL  R38 U6       ; R38 := U6
232 [-]: CALL      R38 1 2      ; R38 := R38()
233 [-]: MOVE      R34 R38      ; R34 := R38
234 [-]: CONST     R33 0        ; R33 := 0.000000
235 [-]: LOADK     R35 K24      ; R35 := "NewBuild"
236 [-]: JMP       269          ; PC := 269
237 [-]: GETUPVAL  R38 U0       ; R38 := U0
238 [-]: GETTABLE  R38 R38 K6   ; R38 := R38["PVPAFFECTOR"]
239 [-]: EQ        0 R2 R38     ; if R2 ~= R38 then PC := 269
240 [-]: JMP       269          ; PC := 269
241 [-]: GETTABLE  R38 R1 R21   ; R38 := R1[R21]
242 [-]: GETTABLE  R39 R38 K25  ; R39 := R38["mCategory"]
243 [-]: EQ        0 R39 K27    ; if R39 ~= 3.000000 then PC := 269
244 [-]: JMP       269          ; PC := 269
245 [-]: GETUPVAL  R39 U7       ; R39 := U7
246 [-]: MOVE      R40 R38      ; R40 := R38
247 [-]: CALL      R39 2 2      ; R39 := R39(R40)
248 [-]: MOVE      R34 R39      ; R34 := R39
249 [-]: GETGLOBAL R39 K17      ; R39 := 0x34291f5c
250 [-]: GETTABLE  R39 R39 K18  ; R82 := R39[0x397b920f]
251 [-]: GETTABLE  R40 R38 K28  ; R40 := R38["mStartDate"]
252 [-]: CALL      R39 2 2      ; R39 := R39(R40)
253 [-]: MOVE      R33 R39      ; R33 := R39
254 [-]: GETGLOBAL R39 K17      ; R39 := 0x34291f5c
255 [-]: GETTABLE  R39 R39 K18  ; R82 := R39[0x397b920f]
256 [-]: GETTABLE  R40 R38 K29  ; R40 := R38["mEndDate"]
257 [-]: CALL      R39 2 2      ; R39 := R39(R40)
258 [-]: LT        0 R33 K30    ; if R33 >= 0.000000 then PC := 261
259 [-]: JMP       261          ; PC := 261
260 [-]: CONST     R33 1        ; R33 := 1.000000
261 [-]: LT        0 R39 K30    ; if R39 >= 0.000000 then PC := 264
262 [-]: JMP       264          ; PC := 264
263 [-]: CONST     R33 0        ; R33 := 0.000000
264 [-]: GETGLOBAL R40 K26      ; R40 := 0x6c97a788
265 [-]: GETTABLE  R40 R40 K31  ; R82 := R40[0xc87894c4]
266 [-]: GETTABLE  R41 R38 K32  ; R41 := R38["mPVPMode"]
267 [-]: CALL      R40 2 2      ; R40 := R40(R41)
268 [-]: MOVE      R35 R40      ; R35 := R40
269 [-]: TEST      R34 0        ; if not R34 then PC := 286
270 [-]: JMP       286          ; PC := 286
271 [-]: LT        0 K30 R33    ; if 0.000000 >= R33 then PC := 282
272 [-]: JMP       282          ; PC := 282
273 [-]: GETUPVAL  R40 U8       ; R40 := U8
274 [-]: SELF      R40 R40 K33  ; R41 := R40; R40 := R40[0xbd2e96ea]
275 [-]: MOVE      R42 R33      ; R42 := R33
276 [-]: CLOSURE   R43 0        ; R43 := closure(Function #140.1)
277 [-]: GETUPVAL  R0 U9        ; R0 := U9
278 [-]: MOVE      R0 R34       ; R0 := R34
279 [-]: MOVE      R0 R35       ; R0 := R35
280 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
281 [-]: JMP       286          ; PC := 286
282 [-]: GETUPVAL  R40 U9       ; R40 := U9
283 [-]: MOVE      R41 R34      ; R41 := R34
284 [-]: MOVE      R42 R35      ; R42 := R35
285 [-]: CALL      R40 3 1      ; R40(R41,R42)
286 [-]: TEST      R37 0        ; if not R37 then PC := 292
287 [-]: JMP       292          ; PC := 292
288 [-]: GETGLOBAL R40 K14      ; R40 := mGameData
289 [-]: SELF      R40 R40 K34  ; R41 := R40; R40 := R40[0x24389ec3]
290 [-]: LOADK     R42 K35      ; R42 := "OnSyncInbox"
291 [-]: CALL      R40 3 1      ; R40(R41,R42)
292 [-]: CLOSE     R33          ; SAVE R33,...
293 [-]: FORLOOP   R18 73       ; R18 += R20; if R18 <= R19 then begin PC := 73; R21 := R18 end
294 [-]: RETURN    R0 1         ; return 


; Function #140.1:
;
; Name:            
; Defined at line: 9518
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETUPVAL  R2 U2        ; R2 := U2
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: RETURN    R0 1         ; return 


; Function #141:
;
; Name:            
; Defined at line: 9533
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := mIsInFrontEnd
  2 [-]: TEST      R0 1         ; if R0 then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
  5 [-]: GETGLOBAL R1 K2        ; R1 := 0xbe190284
  6 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  7 [-]: TEST      R0 1         ; if R0 then PC := 15
  8 [-]: JMP       15           ; PC := 15
  9 [-]: GETGLOBAL R0 K2        ; R0 := 0xbe190284
 10 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x99f38c13]
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: TEST      R0 1         ; if R0 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETUPVAL  R0 U0        ; R0 := U0
 16 [-]: LT        0 K4 R0      ; if 0.000000 >= R0 then PC := 44
 17 [-]: JMP       44           ; PC := 44
 18 [-]: GETUPVAL  R0 U0        ; R0 := U0
 19 [-]: GETUPVAL  R1 U1        ; R1 := U1
 20 [-]: MUL       R0 R0 R1     ; R0 := R0 * R1
 21 [-]: GETGLOBAL R1 K5        ; R1 := 0xae91e43b
 22 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x42b04007]
 23 [-]: LOADK     R3 K7        ; R3 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableCountdown"
 24 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
 25 [-]: NEWTABLE  R5 0 1       ; R5 := {}
 26 [-]: SETTABLE  R5 K8 R0     ; R5["MINUTES"] := R0
 27 [-]: CALL      R1 5 2       ; R1 := R1(R2,R3,R4,R5)
 28 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 29 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x42b04007]
 30 [-]: LOADK     R4 K9        ; R4 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailable"
 31 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 32 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 33 [-]: LOADK     R3 K10       ; R3 := "\r\n\r\n"
 34 [-]: MOVE      R4 R1        ; R4 := R1
 35 [-]: CONCAT    R2 R2 R4     ; R2 := R2 .. R3 .. R4
 36 [-]: GETUPVAL  R3 U2        ; R3 := U2
 37 [-]: GETTABLE  R3 R3 K11    ; R82 := R3[0xe0cba3ca]
 38 [-]: MOVE      R4 R2        ; R4 := R2
 39 [-]: CALL      R3 2 1       ; R3(R4)
 40 [-]: GETUPVAL  R3 U0        ; R3 := U0
 41 [-]: SUB       R3 R3 K12    ; R3 := R3 - 1.000000
 42 [-]: SETUPVAL  R3 U0        ; U82 := 
 43 [-]: JMP       67           ; PC := 67
 44 [-]: GETGLOBAL R3 K5        ; R3 := 0xae91e43b
 45 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x42b04007]
 46 [-]: LOADK     R5 K9        ; R5 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailable"
 47 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 48 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 49 [-]: LOADK     R4 K10       ; R4 := "\r\n\r\n"
 50 [-]: GETGLOBAL R5 K5        ; R5 := 0xae91e43b
 51 [-]: SELF      R5 R5 K6     ; R6 := R5; R5 := R5[0x42b04007]
 52 [-]: LOADK     R7 K13       ; R7 := "/Lotus/Language/Menu/MainMenu_NewBuildAvailableKicked"
 53 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 54 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 55 [-]: CONCAT    R3 R3 R5     ; R3 := R3 .. R4 .. R5
 56 [-]: GETUPVAL  R4 U2        ; R4 := U2
 57 [-]: GETTABLE  R4 R4 K11    ; R82 := R4[0xe0cba3ca]
 58 [-]: MOVE      R5 R3        ; R5 := R3
 59 [-]: CALL      R4 2 1       ; R4(R5)
 60 [-]: GETUPVAL  R4 U3        ; R4 := U3
 61 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0xbd2e96ea]
 62 [-]: CONST     R6 2         ; R6 := 2.000000
 63 [-]: CLOSURE   R7 0         ; R7 := closure(Function #141.1)
 64 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 65 [-]: LOADNIL   R9 R9        ; R9 := nil
 66 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 67 [-]: RETURN    R0 1         ; return 


; Function #141.1:
;
; Name:            
; Defined at line: 9552
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x524772b5]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: GETGLOBAL R0 K0        ; R0 := 0x76ea806b
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x63e78018]
  7 [-]: CALL      R0 2 1       ; R0(R1)
  8 [-]: GETGLOBAL R0 K3        ; R0 := 0x34291f5c
  9 [-]: GETTABLE  R0 R0 K4     ; R82 := R0[0x8ee24660]
 10 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #142:
;
; Name:            
; Defined at line: 9561
; #Upvalues:       11
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 0         ; if not R0 then PC := 17
  2 [-]: JMP       17           ; PC := 17
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  4 [-]: GETGLOBAL R3 K1        ; R3 := mGameData
  5 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  6 [-]: TEST      R2 1         ; if R2 then PC := 17
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  9 [-]: GETGLOBAL R3 K2        ; R3 := 0xbe190284
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: GETGLOBAL R2 K3        ; R2 := _T
 14 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["DisableChatWorldStateNotifications"]
 15 [-]: TEST      R2 0         ; if not R2 then PC := 18
 16 [-]: JMP       18           ; PC := 18
 17 [-]: RETURN    R0 1         ; return 
 18 [-]: GETUPVAL  R2 U0        ; R2 := U0
 19 [-]: CALL      R2 1 1       ; R2()
 20 [-]: GETGLOBAL R2 K1        ; R2 := mGameData
 21 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x69727e0b]
 22 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 23 [-]: GETUPVAL  R3 U1        ; R3 := U1
 24 [-]: TEST      R3 1         ; if R3 then PC := 56
 25 [-]: JMP       56           ; PC := 56
 26 [-]: GETUPVAL  R3 U2        ; R3 := U2
 27 [-]: TEST      R3 0         ; if not R3 then PC := 53
 28 [-]: JMP       53           ; PC := 53
 29 [-]: GETUPVAL  R3 U3        ; R3 := U3
 30 [-]: GETUPVAL  R4 U4        ; R4 := U4
 31 [-]: GETTABLE  R5 R2 K6     ; R5 := R2["mAlerts"]
 32 [-]: GETUPVAL  R6 U5        ; R6 := U5
 33 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["ALERT"]
 34 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 35 [-]: GETUPVAL  R3 U3        ; R3 := U3
 36 [-]: GETUPVAL  R4 U6        ; R4 := U6
 37 [-]: GETTABLE  R5 R2 K8     ; R5 := R2["mEvents"]
 38 [-]: GETUPVAL  R6 U5        ; R6 := U5
 39 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["NEWS"]
 40 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 41 [-]: GETUPVAL  R3 U3        ; R3 := U3
 42 [-]: GETUPVAL  R4 U7        ; R4 := U7
 43 [-]: GETTABLE  R5 R2 K10    ; R5 := R2["mGoals"]
 44 [-]: GETUPVAL  R6 U5        ; R6 := U5
 45 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["GOAL"]
 46 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 47 [-]: GETUPVAL  R3 U3        ; R3 := U3
 48 [-]: GETUPVAL  R4 U8        ; R4 := U8
 49 [-]: GETTABLE  R5 R2 K12    ; R5 := R2["mInvasions"]
 50 [-]: GETUPVAL  R6 U5        ; R6 := U5
 51 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["INVASION"]
 52 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 53 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 54 [-]: SETUPVAL  R3 U1        ; U82 := 
 55 [-]: JMP       110          ; PC := 110
 56 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 57 [-]: MOVE      R4 R2        ; R4 := R2
 58 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 59 [-]: TEST      R3 1         ; if R3 then PC := 110
 60 [-]: JMP       110          ; PC := 110
 61 [-]: GETUPVAL  R3 U2        ; R3 := U2
 62 [-]: TEST      R3 0         ; if not R3 then PC := 88
 63 [-]: JMP       88           ; PC := 88
 64 [-]: GETUPVAL  R3 U9        ; R3 := U9
 65 [-]: GETUPVAL  R4 U4        ; R4 := U4
 66 [-]: GETTABLE  R5 R2 K6     ; R5 := R2["mAlerts"]
 67 [-]: GETUPVAL  R6 U5        ; R6 := U5
 68 [-]: GETTABLE  R6 R6 K7     ; R6 := R6["ALERT"]
 69 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 70 [-]: GETUPVAL  R3 U9        ; R3 := U9
 71 [-]: GETUPVAL  R4 U6        ; R4 := U6
 72 [-]: GETTABLE  R5 R2 K8     ; R5 := R2["mEvents"]
 73 [-]: GETUPVAL  R6 U5        ; R6 := U5
 74 [-]: GETTABLE  R6 R6 K9     ; R6 := R6["NEWS"]
 75 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 76 [-]: GETUPVAL  R3 U9        ; R3 := U9
 77 [-]: GETUPVAL  R4 U7        ; R4 := U7
 78 [-]: GETTABLE  R5 R2 K10    ; R5 := R2["mGoals"]
 79 [-]: GETUPVAL  R6 U5        ; R6 := U5
 80 [-]: GETTABLE  R6 R6 K11    ; R6 := R6["GOAL"]
 81 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 82 [-]: GETUPVAL  R3 U9        ; R3 := U9
 83 [-]: GETUPVAL  R4 U8        ; R4 := U8
 84 [-]: GETTABLE  R5 R2 K12    ; R5 := R2["mInvasions"]
 85 [-]: GETUPVAL  R6 U5        ; R6 := U5
 86 [-]: GETTABLE  R6 R6 K13    ; R6 := R6["INVASION"]
 87 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 88 [-]: GETGLOBAL R3 K14       ; R3 := 0xa94df70b
 89 [-]: SELF      R3 R3 K15    ; R4 := R3; R3 := R3[0xf87f9433]
 90 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 91 [-]: TEST      R3 0         ; if not R3 then PC := 110
 92 [-]: JMP       110          ; PC := 110
 93 [-]: NEWTABLE  R3 0 0       ; R3 := {}
 94 [-]: GETGLOBAL R4 K16       ; R4 := 0x33bdd652
 95 [-]: GETTABLE  R4 R4 K17    ; R82 := R4[0x23d5322f]
 96 [-]: MOVE      R5 R3        ; R5 := R3
 97 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 98 [-]: GETGLOBAL R7 K19       ; R7 := 0x8650181f
 99 [-]: CALL      R7 1 2       ; R7 := R7()
100 [-]: SETTABLE  R6 K18 R7    ; R6["mId"] := R7
101 [-]: CALL      R4 3 1       ; R4(R5,R6)
102 [-]: GETUPVAL  R4 U9        ; R4 := U9
103 [-]: NEWTABLE  R5 0 0       ; R5 := {}
104 [-]: MOVE      R6 R3        ; R6 := R3
105 [-]: GETUPVAL  R7 U5        ; R7 := U5
106 [-]: GETTABLE  R7 R7 K20    ; R7 := R7["BUILD"]
107 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
108 [-]: GETUPVAL  R4 U10       ; R4 := U10
109 [-]: CALL      R4 1 1       ; R4()
110 [-]: RETURN    R0 1         ; return 


; Function #143:
;
; Name:            
; Defined at line: 9600
; #Upvalues:       6
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  24

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K2        ; R2 := mProfileSettings
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 0         ; if not R1 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: CALL      R2 1 1       ; R2()
 15 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 16 [-]: SETUPVAL  R2 U1        ; U82 := 
 17 [-]: GETGLOBAL R2 K3        ; R2 := 0x9ba7909f
 18 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x9e473958]
 19 [-]: LOADK     R4 K5        ; R4 := "TOGGLE_CHAT_WINDOW"
 20 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 21 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 22 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 23 [-]: CALL      R2 6 2       ; R2 := R2(R3,R4,R5,R6,R7)
 24 [-]: GETGLOBAL R3 K6        ; R3 := 0xc8802016
 25 [-]: MOVE      R4 R2        ; R4 := R2
 26 [-]: CALL      R3 2 4       ; R3,R4,R5 := R3(R4)
 27 [-]: JMP       38           ; PC := 38
 28 [-]: GETGLOBAL R8 K7        ; R8 := 0x7f5022cf
 29 [-]: GETTABLE  R8 R8 K8     ; R82 := R8[0xa5c556b9]
 30 [-]: MOVE      R9 R7        ; R9 := R7
 31 [-]: LOADK     R10 K9       ; R10 := "KEY_RETURN"
 32 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 33 [-]: TEST      R8 0         ; if not R8 then PC := 38
 34 [-]: JMP       38           ; PC := 38
 35 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 36 [-]: SETUPVAL  R8 U1        ; U82 := 
 37 [-]: JMP       40           ; PC := 40
 38 [-]: TFORLOOP  R3 2         ; R6,R7 :=  R3(R4,R5); if R6 ~= nil then begin PC = 28; R5 := R6 end
 39 [-]: JMP       28           ; PC := 28
 40 [-]: GETGLOBAL R8 K2        ; R8 := mProfileSettings
 41 [-]: SELF      R8 R8 K10    ; R9 := R8; R8 := R8[0xadef40da]
 42 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 43 [-]: GETGLOBAL R9 K2        ; R9 := mProfileSettings
 44 [-]: SELF      R9 R9 K11    ; R10 := R9; R9 := R9[0xd509c47e]
 45 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 46 [-]: TEST      R1 1         ; if R1 then PC := 58
 47 [-]: JMP       58           ; PC := 58
 48 [-]: GETGLOBAL R10 K12      ; R10 := mEmojiSettings
 49 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["Enabled"]
 50 [-]: EQ        0 R10 R8     ; if R10 ~= R8 then PC := 57
 51 [-]: JMP       57           ; PC := 57
 52 [-]: GETGLOBAL R10 K12      ; R10 := mEmojiSettings
 53 [-]: GETTABLE  R10 R10 K14  ; R10 := R10["EmoticonConversion"]
 54 [-]: EQ        0 R10 R9     ; if R10 ~= R9 then PC := 57
 55 [-]: JMP       57           ; PC := 57
 56 [-]: OP_LOADBOOL R1 0 1       ; R1 := false; PC := 57
 57 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 58 [-]: GETGLOBAL R10 K12      ; R10 := mEmojiSettings
 59 [-]: SETTABLE  R10 K13 R8   ; R10["Enabled"] := R8
 60 [-]: GETGLOBAL R10 K12      ; R10 := mEmojiSettings
 61 [-]: SETTABLE  R10 K14 R9   ; R10["EmoticonConversion"] := R9
 62 [-]: GETGLOBAL R10 K12      ; R10 := mEmojiSettings
 63 [-]: GETTABLE  R10 R10 K13  ; R10 := R10["Enabled"]
 64 [-]: TEST      R10 0        ; if not R10 then PC := 82
 65 [-]: JMP       82           ; PC := 82
 66 [-]: GETGLOBAL R10 K15      ; R10 := 0xae91e43b
 67 [-]: SELF      R10 R10 K16  ; R11 := R10; R10 := R10[0x5f56eeab]
 68 [-]: LOADK     R12 K17      ; R12 := "Window.SendMessageBar.MessageBox"
 69 [-]: CONST     R13 74       ; R13 := 74.000000
 70 [-]: LOADK     R14 K18      ; R14 := ":@[{"
 71 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 72 [-]: GETGLOBAL R10 K15      ; R10 := 0xae91e43b
 73 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10[0xc0a3774b]
 74 [-]: GETGLOBAL R12 K1       ; R12 := mWindow
 75 [-]: GETTABLE  R12 R12 K20  ; R12 := R12["mInputPanel"]
 76 [-]: GETTABLE  R12 R12 K21  ; R12 := R12["mClipPath"]
 77 [-]: LOADK     R13 K22      ; R13 := "MessageBox"
 78 [-]: CONST     R14 73       ; R14 := 73.000000
 79 [-]: OP_LOADBOOL R15 0 0      ; R15 := false
 80 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 81 [-]: JMP       97           ; PC := 97
 82 [-]: GETGLOBAL R10 K15      ; R10 := 0xae91e43b
 83 [-]: SELF      R10 R10 K16  ; R11 := R10; R10 := R10[0x5f56eeab]
 84 [-]: LOADK     R12 K17      ; R12 := "Window.SendMessageBar.MessageBox"
 85 [-]: CONST     R13 74       ; R13 := 74.000000
 86 [-]: LOADK     R14 K23      ; R14 := "@[{"
 87 [-]: CALL      R10 5 1      ; R10(R11,R12,R13,R14)
 88 [-]: GETGLOBAL R10 K15      ; R10 := 0xae91e43b
 89 [-]: SELF      R10 R10 K19  ; R11 := R10; R10 := R10[0xc0a3774b]
 90 [-]: GETGLOBAL R12 K1       ; R12 := mWindow
 91 [-]: GETTABLE  R12 R12 K20  ; R12 := R12["mInputPanel"]
 92 [-]: GETTABLE  R12 R12 K21  ; R12 := R12["mClipPath"]
 93 [-]: LOADK     R13 K22      ; R13 := "MessageBox"
 94 [-]: CONST     R14 73       ; R14 := 73.000000
 95 [-]: OP_LOADBOOL R15 0 0      ; R15 := false
 96 [-]: CALL      R10 6 1      ; R10(R11,R12,R13,R14,R15)
 97 [-]: GETGLOBAL R10 K2       ; R10 := mProfileSettings
 98 [-]: SELF      R10 R10 K24  ; R11 := R10; R10 := R10[0x578e5237]
 99 [-]: CALL      R10 2 2      ; R10 := R10(R11)
100 [-]: GETGLOBAL R11 K0       ; R11 := 0x7b998233
101 [-]: GETGLOBAL R12 K25      ; R12 := 0x0032441c
102 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["UIMaterial_EmojiColors"]
103 [-]: GETTABLE  R12 R12 R10  ; R12 := R12[R10]
104 [-]: CALL      R11 2 2      ; R11 := R11(R12)
105 [-]: TEST      R11 1        ; if R11 then PC := 113
106 [-]: JMP       113          ; PC := 113
107 [-]: GETGLOBAL R11 K15      ; R11 := 0xae91e43b
108 [-]: SELF      R11 R11 K27  ; R12 := R11; R11 := R11[0x4ad11788]
109 [-]: GETGLOBAL R13 K25      ; R13 := 0x0032441c
110 [-]: GETTABLE  R13 R13 K26  ; R13 := R13["UIMaterial_EmojiColors"]
111 [-]: GETTABLE  R13 R13 R10  ; R13 := R13[R10]
112 [-]: CALL      R11 3 1      ; R11(R12,R13)
113 [-]: GETGLOBAL R11 K2       ; R11 := mProfileSettings
114 [-]: SELF      R11 R11 K29  ; R12 := R11; R11 := R11[0x862582b4]
115 [-]: CALL      R11 2 2      ; R11 := R11(R12)
116 [-]: SETGLOBALHASH R11 K28      ; mEnableRegionChat := R11
117 [-]: GETGLOBAL R11 K2       ; R11 := mProfileSettings
118 [-]: SELF      R11 R11 K31  ; R12 := R11; R11 := R11[0x590a1b4a]
119 [-]: CALL      R11 2 2      ; R11 := R11(R12)
120 [-]: TEST      R11 0        ; if not R11 then PC := 125
121 [-]: JMP       125          ; PC := 125
122 [-]: GETGLOBAL R11 K25      ; R11 := 0x0032441c
123 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["StalkerMode"]
124 [-]: NOT       R11 R11      ; R11 := not R11
125 [-]: SETGLOBALHASH R11 K30      ; mEnableRecruitingChat := R11
126 [-]: GETGLOBAL R11 K2       ; R11 := mProfileSettings
127 [-]: SELF      R11 R11 K34  ; R12 := R11; R11 := R11[0xb8e0b13a]
128 [-]: CALL      R11 2 2      ; R11 := R11(R12)
129 [-]: TEST      R11 0        ; if not R11 then PC := 134
130 [-]: JMP       134          ; PC := 134
131 [-]: GETGLOBAL R11 K25      ; R11 := 0x0032441c
132 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["StalkerMode"]
133 [-]: NOT       R11 R11      ; R11 := not R11
134 [-]: SETGLOBALHASH R11 K33      ; mEnableTradeChat := R11
135 [-]: GETGLOBAL R11 K2       ; R11 := mProfileSettings
136 [-]: SELF      R11 R11 K36  ; R12 := R11; R11 := R11[0x37f25103]
137 [-]: CALL      R11 2 2      ; R11 := R11(R12)
138 [-]: TEST      R11 0        ; if not R11 then PC := 143
139 [-]: JMP       143          ; PC := 143
140 [-]: GETGLOBAL R11 K25      ; R11 := 0x0032441c
141 [-]: GETTABLE  R11 R11 K32  ; R11 := R11["StalkerMode"]
142 [-]: NOT       R11 R11      ; R11 := not R11
143 [-]: SETGLOBALHASH R11 K35      ; mEnableQAChat := R11
144 [-]: GETGLOBAL R11 K2       ; R11 := mProfileSettings
145 [-]: SELF      R11 R11 K38  ; R12 := R11; R11 := R11[0x058f0363]
146 [-]: CALL      R11 2 2      ; R11 := R11(R12)
147 [-]: SETGLOBALHASH R11 K37      ; mEnableCouncilChat := R11
148 [-]: GETGLOBAL R11 K39      ; R11 := 0x34291f5c
149 [-]: GETTABLE  R11 R11 K40  ; R82 := R11[0x056bfe8b]
150 [-]: CALL      R11 1 2      ; R11 := R11()
151 [-]: TEST      R11 1        ; if R11 then PC := 157
152 [-]: JMP       157          ; PC := 157
153 [-]: GETGLOBAL R11 K2       ; R11 := mProfileSettings
154 [-]: SELF      R11 R11 K42  ; R12 := R11; R11 := R11[0x57991882]
155 [-]: CALL      R11 2 2      ; R11 := R11(R12)
156 [-]: SETGLOBALHASH R11 K41      ; mChatScale := R11
157 [-]: GETGLOBAL R11 K39      ; R11 := 0x34291f5c
158 [-]: GETTABLE  R11 R11 K43  ; R82 := R11[0xe6b41adb]
159 [-]: CALL      R11 1 2      ; R11 := R11()
160 [-]: TEST      R11 0        ; if not R11 then PC := 164
161 [-]: JMP       164          ; PC := 164
162 [-]: GETGLOBAL R11 K44      ; R11 := miOSChatScale
163 [-]: SETGLOBALHASH R11 K41      ; mChatScale := R11
164 [-]: GETGLOBAL R11 K2       ; R11 := mProfileSettings
165 [-]: SELF      R11 R11 K46  ; R12 := R11; R11 := R11[0xdeaf56d8]
166 [-]: CALL      R11 2 2      ; R11 := R11(R12)
167 [-]: SETGLOBALHASH R11 K45      ; mChatWorldNotifications := R11
168 [-]: GETGLOBAL R11 K2       ; R11 := mProfileSettings
169 [-]: SELF      R11 R11 K47  ; R12 := R11; R11 := R11[0xc69f841d]
170 [-]: CALL      R11 2 2      ; R11 := R11(R12)
171 [-]: TEST      R1 1         ; if R1 then PC := 183
172 [-]: JMP       183          ; PC := 183
173 [-]: GETGLOBAL R12 K1       ; R12 := mWindow
174 [-]: GETTABLE  R12 R12 K48  ; R12 := R12["mShowTimeStamps"]
175 [-]: EQ        1 R12 K49    ; if R12 == nil then PC := 182
176 [-]: JMP       182          ; PC := 182
177 [-]: GETGLOBAL R12 K1       ; R12 := mWindow
178 [-]: GETTABLE  R12 R12 K48  ; R12 := R12["mShowTimeStamps"]
179 [-]: EQ        0 R12 R11    ; if R12 ~= R11 then PC := 182
180 [-]: JMP       182          ; PC := 182
181 [-]: OP_LOADBOOL R1 0 1       ; R1 := false; PC := 182
182 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
183 [-]: TEST      R1 0         ; if not R1 then PC := 230
184 [-]: JMP       230          ; PC := 230
185 [-]: GETGLOBAL R12 K1       ; R12 := mWindow
186 [-]: SETTABLE  R12 K48 R11  ; R12["mShowTimeStamps"] := R11
187 [-]: GETGLOBAL R12 K50      ; R12 := 0xcfc01047
188 [-]: GETGLOBAL R13 K1       ; R13 := mWindow
189 [-]: GETTABLE  R13 R13 K51  ; R13 := R13["mPanelList"]
190 [-]: CALL      R12 2 4      ; R12,R13,R14 := R12(R13)
191 [-]: JMP       205          ; PC := 205
192 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
193 [-]: MOVE      R18 R16      ; R18 := R16
194 [-]: CALL      R17 2 2      ; R17 := R17(R18)
195 [-]: TEST      R17 1        ; if R17 then PC := 205
196 [-]: JMP       205          ; PC := 205
197 [-]: GETGLOBAL R17 K1       ; R17 := mWindow
198 [-]: GETTABLE  R17 R17 K52  ; R17 := R17["mActivePanelName"]
199 [-]: EQ        1 R15 R17    ; if R15 == R17 then PC := 205
200 [-]: JMP       205          ; PC := 205
201 [-]: SELF      R17 R16 K53  ; R18 := R16; R17 := R16[0xe176d731]
202 [-]: CALL      R17 2 1      ; R17(R18)
203 [-]: SELF      R17 R16 K54  ; R18 := R16; R17 := R16[0x3bd10f9e]
204 [-]: CALL      R17 2 1      ; R17(R18)
205 [-]: TFORLOOP  R12 2        ; R15,R16 :=  R12(R13,R14); if R15 ~= nil then begin PC = 192; R14 := R15 end
206 [-]: JMP       192          ; PC := 192
207 [-]: GETGLOBAL R17 K0       ; R17 := 0x7b998233
208 [-]: GETGLOBAL R18 K1       ; R18 := mWindow
209 [-]: GETTABLE  R18 R18 K51  ; R18 := R18["mPanelList"]
210 [-]: GETGLOBAL R19 K1       ; R19 := mWindow
211 [-]: GETTABLE  R19 R19 K52  ; R19 := R19["mActivePanelName"]
212 [-]: GETTABLE  R18 R18 R19  ; R18 := R18[R19]
213 [-]: CALL      R17 2 2      ; R17 := R17(R18)
214 [-]: TEST      R17 1        ; if R17 then PC := 230
215 [-]: JMP       230          ; PC := 230
216 [-]: GETGLOBAL R17 K1       ; R17 := mWindow
217 [-]: GETTABLE  R17 R17 K51  ; R17 := R17["mPanelList"]
218 [-]: GETGLOBAL R18 K1       ; R18 := mWindow
219 [-]: GETTABLE  R18 R18 K52  ; R18 := R18["mActivePanelName"]
220 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
221 [-]: SELF      R17 R17 K53  ; R18 := R17; R17 := R17[0xe176d731]
222 [-]: CALL      R17 2 1      ; R17(R18)
223 [-]: GETGLOBAL R17 K1       ; R17 := mWindow
224 [-]: GETTABLE  R17 R17 K51  ; R17 := R17["mPanelList"]
225 [-]: GETGLOBAL R18 K1       ; R18 := mWindow
226 [-]: GETTABLE  R18 R18 K52  ; R18 := R18["mActivePanelName"]
227 [-]: GETTABLE  R17 R17 R18  ; R17 := R17[R18]
228 [-]: SELF      R17 R17 K54  ; R18 := R17; R17 := R17[0x3bd10f9e]
229 [-]: CALL      R17 2 1      ; R17(R18)
230 [-]: GETGLOBAL R17 K2       ; R17 := mProfileSettings
231 [-]: SELF      R17 R17 K55  ; R18 := R17; R17 := R17[0x4b988699]
232 [-]: CALL      R17 2 2      ; R17 := R17(R18)
233 [-]: GETGLOBAL R18 K0       ; R18 := 0x7b998233
234 [-]: MOVE      R19 R17      ; R19 := R17
235 [-]: CALL      R18 2 2      ; R18 := R18(R19)
236 [-]: TEST      R18 1        ; if R18 then PC := 254
237 [-]: JMP       254          ; PC := 254
238 [-]: GETTABLE  R18 R17 K56  ; R18 := R17["regionId"]
239 [-]: EQ        0 R18 K57    ; if R18 ~= 7.000000 then PC := 252
240 [-]: JMP       252          ; PC := 252
241 [-]: GETUPVAL  R18 U3       ; R18 := U3
242 [-]: SETUPVAL  R18 U2       ; U82 := 
243 [-]: GETGLOBAL R18 K25      ; R18 := 0x0032441c
244 [-]: GETTABLE  R18 R18 K58  ; R18 := R18["LAST_BREAK_MSG"]
245 [-]: EQ        0 R18 K49    ; if R18 ~= nil then PC := 254
246 [-]: JMP       254          ; PC := 254
247 [-]: GETGLOBAL R18 K25      ; R18 := 0x0032441c
248 [-]: GETGLOBAL R19 K59      ; R19 := 0x0a8f62a7
249 [-]: CALL      R19 1 2      ; R19 := R19()
250 [-]: SETTABLE  R18 K58 R19  ; R18["LAST_BREAK_MSG"] := R19
251 [-]: JMP       254          ; PC := 254
252 [-]: LOADNIL   R18 R18      ; R18 := nil
253 [-]: SETUPVAL  R18 U2       ; U82 := 
254 [-]: GETGLOBAL R18 K2       ; R18 := mProfileSettings
255 [-]: SELF      R18 R18 K61  ; R19 := R18; R18 := R18[0xb1d9bcb1]
256 [-]: CALL      R18 2 2      ; R18 := R18(R19)
257 [-]: SETGLOBALHASH R18 K60      ; mDoFilter := R18
258 [-]: GETGLOBAL R18 K60      ; R18 := mDoFilter
259 [-]: TEST      R18 1        ; if R18 then PC := 267
260 [-]: JMP       267          ; PC := 267
261 [-]: GETUPVAL  R18 U4       ; R18 := U4
262 [-]: TEST      R18 1        ; if R18 then PC := 267
263 [-]: JMP       267          ; PC := 267
264 [-]: GETGLOBAL R18 K39      ; R18 := 0x34291f5c
265 [-]: GETTABLE  R18 R18 K63  ; R82 := R18[0x9ad21ae9]
266 [-]: CALL      R18 1 2      ; R18 := R18()
267 [-]: SETGLOBALHASH R18 K62      ; mDoMotdFilter := R18
268 [-]: GETGLOBAL R18 K2       ; R18 := mProfileSettings
269 [-]: SELF      R18 R18 K64  ; R19 := R18; R18 := R18[0xe03a6172]
270 [-]: CALL      R18 2 2      ; R18 := R18(R19)
271 [-]: GETGLOBAL R19 K65      ; R19 := mTextSizeIndex
272 [-]: EQ        0 R18 R19    ; if R18 ~= R19 then PC := 276
273 [-]: JMP       276          ; PC := 276
274 [-]: TEST      R0 0         ; if not R0 then PC := 281
275 [-]: JMP       281          ; PC := 281
276 [-]: SETGLOBALHASH R18 K65      ; mTextSizeIndex := R18
277 [-]: GETGLOBAL R19 K1       ; R19 := mWindow
278 [-]: SELF      R19 R19 K66  ; R20 := R19; R19 := R19[0x6e27e6be]
279 [-]: GETGLOBAL R21 K65      ; R21 := mTextSizeIndex
280 [-]: CALL      R19 3 1      ; R19(R20,R21)
281 [-]: GETGLOBAL R19 K15      ; R19 := 0xae91e43b
282 [-]: SELF      R19 R19 K67  ; R20 := R19; R19 := R19[0x63140f98]
283 [-]: EQ        1 R18 K68    ; if R18 == 1.000000 then PC := 286
284 [-]: JMP       286          ; PC := 286
285 [-]: OP_LOADBOOL R21 0 1      ; R21 := false; PC := 286
286 [-]: OP_LOADBOOL R21 1 0      ; R21 := true
287 [-]: CALL      R19 3 1      ; R19(R20,R21)
288 [-]: TEST      R0 1         ; if R0 then PC := 326
289 [-]: JMP       326          ; PC := 326
290 [-]: GETGLOBAL R19 K1       ; R19 := mWindow
291 [-]: GETUPVAL  R20 U5       ; R20 := U5
292 [-]: GETTABLE  R20 R20 K70  ; R82 := R20[0x06d055f9]
293 [-]: GETGLOBAL R21 K28      ; R21 := mEnableRegionChat
294 [-]: LOADNIL   R22 R22      ; R22 := nil
295 [-]: GETGLOBAL R23 K1       ; R23 := mWindow
296 [-]: GETTABLE  R23 R23 K69  ; R23 := R23["mRegionChatEnabled"]
297 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
298 [-]: SETTABLE  R19 K69 R20  ; R19["mRegionChatEnabled"] := R20
299 [-]: GETGLOBAL R19 K1       ; R19 := mWindow
300 [-]: GETUPVAL  R20 U5       ; R20 := U5
301 [-]: GETTABLE  R20 R20 K70  ; R82 := R20[0x06d055f9]
302 [-]: GETGLOBAL R21 K30      ; R21 := mEnableRecruitingChat
303 [-]: LOADNIL   R22 R22      ; R22 := nil
304 [-]: GETGLOBAL R23 K1       ; R23 := mWindow
305 [-]: GETTABLE  R23 R23 K71  ; R23 := R23["mRecruitingChatEnabled"]
306 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
307 [-]: SETTABLE  R19 K71 R20  ; R19["mRecruitingChatEnabled"] := R20
308 [-]: GETGLOBAL R19 K1       ; R19 := mWindow
309 [-]: GETUPVAL  R20 U5       ; R20 := U5
310 [-]: GETTABLE  R20 R20 K70  ; R82 := R20[0x06d055f9]
311 [-]: GETGLOBAL R21 K33      ; R21 := mEnableTradeChat
312 [-]: LOADNIL   R22 R22      ; R22 := nil
313 [-]: GETGLOBAL R23 K1       ; R23 := mWindow
314 [-]: GETTABLE  R23 R23 K72  ; R23 := R23["mTradeChatEnabled"]
315 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
316 [-]: SETTABLE  R19 K72 R20  ; R19["mTradeChatEnabled"] := R20
317 [-]: GETGLOBAL R19 K1       ; R19 := mWindow
318 [-]: GETUPVAL  R20 U5       ; R20 := U5
319 [-]: GETTABLE  R20 R20 K70  ; R82 := R20[0x06d055f9]
320 [-]: GETGLOBAL R21 K35      ; R21 := mEnableQAChat
321 [-]: LOADNIL   R22 R22      ; R22 := nil
322 [-]: GETGLOBAL R23 K1       ; R23 := mWindow
323 [-]: GETTABLE  R23 R23 K73  ; R23 := R23["mQAChatEnabled"]
324 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
325 [-]: SETTABLE  R19 K73 R20  ; R19["mQAChatEnabled"] := R20
326 [-]: GETGLOBAL R19 K2       ; R19 := mProfileSettings
327 [-]: SELF      R19 R19 K75  ; R20 := R19; R19 := R19[0xde73ddc2]
328 [-]: CALL      R19 2 2      ; R19 := R19(R20)
329 [-]: SETGLOBALHASH R19 K74      ; mInlinePrivateMessages := R19
330 [-]: GETGLOBAL R19 K2       ; R19 := mProfileSettings
331 [-]: SELF      R19 R19 K77  ; R20 := R19; R19 := R19[0x5b4eeceb]
332 [-]: CALL      R19 2 2      ; R19 := R19(R20)
333 [-]: SETGLOBALHASH R19 K76      ; mActiveTabNotificationsOnly := R19
334 [-]: GETGLOBAL R19 K2       ; R19 := mProfileSettings
335 [-]: SELF      R19 R19 K79  ; R20 := R19; R19 := R19[0x2e12f0f4]
336 [-]: CALL      R19 2 2      ; R19 := R19(R20)
337 [-]: SETGLOBALHASH R19 K78      ; mMuteNotificationSounds := R19
338 [-]: RETURN    R0 1         ; return 


; Function #144:
;
; Name:            
; Defined at line: 9708
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: GETUPVAL  R0 U1        ; R0 := U1
  5 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  6 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x6b837788]
  7 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  8 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xaf9fda9f]
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #145:
;
; Name:            
; Defined at line: 9715
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #146:
;
; Name:            
; Defined at line: 9718
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R82 := R0[0xbe87a400]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x598e8bc4]
 11 [-]: MOVE      R3 R0        ; R3 := R0
 12 [-]: CALL      R1 3 1       ; R1(R2,R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #147:
;
; Name:            
; Defined at line: 9726
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #148:
;
; Name:            
; Defined at line: 9730
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mGameData
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R1 K1        ; R1 := mGameData
  8 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x25a6e75e]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: TEST      R2 0         ; if not R2 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 17 [-]: GETUPVAL  R3 U0        ; R3 := U0
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 1         ; if R2 then PC := 26
 20 [-]: JMP       26           ; PC := 26
 21 [-]: GETUPVAL  R2 U0        ; R2 := U0
 22 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xb49f28df]
 23 [-]: MOVE      R4 R1        ; R4 := R1
 24 [-]: MOVE      R5 R0        ; R5 := R0
 25 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 26 [-]: RETURN    R0 1         ; return 


; Function #149:
;
; Name:            
; Defined at line: 9745
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #150:
;
; Name:            
; Defined at line: 9749
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K1        ; R0 := 0xbe190284
  2 [-]: SETGLOBALHASH R0 K0        ; mGameRules := R0
  3 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
  4 [-]: GETGLOBAL R1 K0        ; R1 := mGameRules
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 1         ; if R0 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: GETTABLE  R0 R0 K4     ; R82 := R0[0xf2104b9a]
 10 [-]: CALL      R0 1 2       ; R0 := R0()
 11 [-]: JMP       14           ; PC := 14
 12 [-]: OP_LOADBOOL R0 0 1       ; R0 := false; PC := 13
 13 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 14 [-]: SETGLOBALHASH R0 K2        ; mIsInGameplay := R0
 15 [-]: GETGLOBAL R0 K2        ; R0 := mIsInGameplay
 16 [-]: NOT       R0 R0        ; R0 := not R0
 17 [-]: SETGLOBALHASH R0 K5        ; mIsInFrontEnd := R0
 18 [-]: GETUPVAL  R0 U0        ; R0 := U0
 19 [-]: GETTABLE  R0 R0 K7     ; R82 := R0[0xb73d420f]
 20 [-]: CALL      R0 1 2       ; R0 := R0()
 21 [-]: SETGLOBALHASH R0 K6        ; mUIMode := R0
 22 [-]: GETGLOBAL R0 K6        ; R0 := mUIMode
 23 [-]: GETUPVAL  R1 U0        ; R1 := U0
 24 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["UI_MODE_IN_DOJO"]
 25 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 42
 26 [-]: JMP       42           ; PC := 42
 27 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 28 [-]: GETGLOBAL R1 K0        ; R1 := mGameRules
 29 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 30 [-]: TEST      R0 1         ; if R0 then PC := 42
 31 [-]: JMP       42           ; PC := 42
 32 [-]: GETGLOBAL R0 K0        ; R0 := mGameRules
 33 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0x32316a21]
 34 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 35 [-]: TEST      R0 0         ; if not R0 then PC := 44
 36 [-]: JMP       44           ; PC := 44
 37 [-]: GETGLOBAL R0 K0        ; R0 := mGameRules
 38 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0[0x529b110d]
 39 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 40 [-]: EQ        0 R0 K13     ; if R0 ~= 5.000000 then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: OP_LOADBOOL R0 0 1       ; R0 := false; PC := 43
 43 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 44 [-]: SETGLOBALHASH R0 K8        ; mIsInPVP := R0
 45 [-]: GETGLOBAL R0 K6        ; R0 := mUIMode
 46 [-]: GETUPVAL  R1 U0        ; R1 := U0
 47 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["UI_MODE_IN_DOJO"]
 48 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 51
 49 [-]: JMP       51           ; PC := 51
 50 [-]: OP_LOADBOOL R0 0 1       ; R0 := false; PC := 51
 51 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 52 [-]: SETGLOBALHASH R0 K14       ; mIsInDojo := R0
 53 [-]: RETURN    R0 1         ; return 


; Function #151:
;
; Name:            
; Defined at line: 9758
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x83e41587
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0x9ba7909f
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xff66e826]
  4 [-]: CALL      R1 2 0       ; R1,... := R1(R2)
  5 [-]: CALL      R0 0 2       ; R0 := R0(R1,...)
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0x015284cd
  7 [-]: LOADK     R2 K4        ; R2 := ","
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 10 [-]: SETUPVAL  R1 U0        ; U82 := 
 11 [-]: GETUPVAL  R1 U0        ; R1 := U0
 12 [-]: LEN       R1 R1        ; R1 := # R1
 13 [-]: CONST     R2 1         ; R2 := 1.000000
 14 [-]: CONST     R3 -1        ; R3 := -1.000000
 15 [-]: FORPREP   R1 39        ; R1 -= R3; PC := 39
 16 [-]: GETUPVAL  R5 U1        ; R5 := U1
 17 [-]: GETUPVAL  R6 U0        ; R6 := U0
 18 [-]: GETTABLE  R6 R6 R4     ; R6 := R6[R4]
 19 [-]: GETTABLE  R5 R5 R6     ; R5 := R5[R6]
 20 [-]: EQ        1 R5 K5      ; if R5 == nil then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETTABLE  R6 R5 K6     ; R82 := R6[0x96f81eb8]
 23 [-]: CALL      R6 1 2       ; R6 := R6()
 24 [-]: TEST      R6 0         ; if not R6 then PC := 34
 25 [-]: JMP       34           ; PC := 34
 26 [-]: GETUPVAL  R6 U0        ; R6 := U0
 27 [-]: LOADK     R7 K7        ; R7 := ":"
 28 [-]: GETUPVAL  R8 U0        ; R8 := U0
 29 [-]: GETTABLE  R8 R8 R4     ; R8 := R8[R4]
 30 [-]: LOADK     R9 K7        ; R9 := ":"
 31 [-]: CONCAT    R7 R7 R9     ; R7 := R7 .. R8 .. R9
 32 [-]: SETTABLE  R6 R4 R7     ; R6[R4] := R7
 33 [-]: JMP       39           ; PC := 39
 34 [-]: GETGLOBAL R6 K8        ; R6 := 0x33bdd652
 35 [-]: GETTABLE  R6 R6 K9     ; R82 := R6[0x9c1f3b5a]
 36 [-]: GETUPVAL  R7 U0        ; R7 := U0
 37 [-]: MOVE      R8 R4        ; R8 := R4
 38 [-]: CALL      R6 3 1       ; R6(R7,R8)
 39 [-]: FORLOOP   R1 16        ; R1 += R3; if R1 <= R2 then begin PC := 16; R4 := R1 end
 40 [-]: GETGLOBAL R6 K8        ; R6 := 0x33bdd652
 41 [-]: GETTABLE  R6 R6 K10    ; R82 := R6[0xf21b1d8e]
 42 [-]: GETUPVAL  R7 U0        ; R7 := U0
 43 [-]: CLOSURE   R8 0         ; R8 := closure(Function #151.1)
 44 [-]: CALL      R6 3 1       ; R6(R7,R8)
 45 [-]: RETURN    R0 1         ; return 


; Function #151.1:
;
; Name:            
; Defined at line: 9770
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: LT        1 R0 R1      ; if R0 < R1 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 4
  4 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
  5 [-]: RETURN    R2 2         ; return R2
  6 [-]: RETURN    R0 1         ; return 


; Function #152:
;
; Name:            
; Defined at line: 9773
; #Upvalues:       23
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xc6a10ab1]
  3 [-]: CONST     R2 0         ; R2 := 0.000000
  4 [-]: CALL      R0 3 1       ; R0(R1,R2)
  5 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  6 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x63140f98]
  7 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
  8 [-]: CALL      R0 3 1       ; R0(R1,R2)
  9 [-]: GETGLOBAL R0 K3        ; R0 := 0x0032441c
 10 [-]: SETTABLE  R0 K4 K5     ; R0["mDoNotDisturb"] := false
 11 [-]: GETGLOBAL R0 K6        ; R0 := 0x34291f5c
 12 [-]: GETTABLE  R0 R0 K7     ; R82 := R0[0xa7a2e381]
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: SETUPVAL  R0 U0        ; U82 := 
 15 [-]: GETGLOBAL R0 K8        ; R0 := 0x2d0fad09
 16 [-]: LOADK     R1 K9        ; R1 := "Lotus.Interface.Libs.TimerMgr"
 17 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 18 [-]: GETTABLE  R1 R0 K10    ; R82 := R1[0xde474187]
 19 [-]: CALL      R1 1 2       ; R1 := R1()
 20 [-]: SETUPVAL  R1 U1        ; U82 := 
 21 [-]: GETUPVAL  R1 U2        ; R1 := U2
 22 [-]: CALL      R1 1 1       ; R1()
 23 [-]: GETUPVAL  R1 U4        ; R1 := U4
 24 [-]: GETTABLE  R1 R1 K11    ; R82 := R1[0xc00479a5]
 25 [-]: CALL      R1 1 2       ; R1 := R1()
 26 [-]: SETUPVAL  R1 U3        ; U82 := 
 27 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 28 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0x865700f5]
 29 [-]: LOADK     R3 K13       ; R3 := "Window.SendMessageBar.MessageBox"
 30 [-]: LOADK     R4 K14       ; R4 := "MessageBoxFocused"
 31 [-]: LOADK     R5 K15       ; R5 := "MessageBoxUnfocused"
 32 [-]: LOADNIL   R6 R7        ; R6 := R7 := nil
 33 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 34 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 35 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1[0x1e5b5cfe]
 36 [-]: LOADK     R3 K17       ; R3 := "Window.SendMessageBar.FocusButton"
 37 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 38 [-]: LOADK     R6 K18       ; R6 := "SendMessageBarClicked"
 39 [-]: LOADNIL   R7 R7        ; R7 := nil
 40 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 41 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 42 [-]: SELF      R1 R1 K19    ; R2 := R1; R1 := R1[0xaade900e]
 43 [-]: LOADK     R3 K13       ; R3 := "Window.SendMessageBar.MessageBox"
 44 [-]: CONST     R4 83        ; R4 := 83.000000
 45 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 46 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 47 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 48 [-]: SELF      R1 R1 K16    ; R2 := R1; R1 := R1[0x1e5b5cfe]
 49 [-]: LOADK     R3 K20       ; R3 := "Window.MouseCatcherBtn"
 50 [-]: LOADNIL   R4 R5        ; R4 := R5 := nil
 51 [-]: LOADK     R6 K21       ; R6 := "MouseCatcherPressed"
 52 [-]: LOADNIL   R7 R7        ; R7 := nil
 53 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 54 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 55 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0x0c33ebb2]
 56 [-]: LOADK     R3 K20       ; R3 := "Window.MouseCatcherBtn"
 57 [-]: LOADK     R4 K23       ; R4 := "noMenuSelection"
 58 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 59 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 60 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 61 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0x0c33ebb2]
 62 [-]: LOADK     R3 K24       ; R3 := "Window.TabMenu.WindowTitle.Fill"
 63 [-]: LOADK     R4 K23       ; R4 := "noMenuSelection"
 64 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 65 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 66 [-]: GETUPVAL  R1 U6        ; R1 := U6
 67 [-]: GETTABLE  R1 R1 K25    ; R82 := R1[0xae6791ba]
 68 [-]: CALL      R1 1 2       ; R1 := R1()
 69 [-]: SETUPVAL  R1 U5        ; U82 := 
 70 [-]: GETGLOBAL R1 K26       ; R1 := 0x33bdd652
 71 [-]: GETTABLE  R1 R1 K27    ; R82 := R1[0x23d5322f]
 72 [-]: GETUPVAL  R2 U5        ; R2 := U5
 73 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["mMoviesToSync"]
 74 [-]: GETGLOBAL R3 K29       ; R3 := 0x37779262
 75 [-]: CALL      R1 3 1       ; R1(R2,R3)
 76 [-]: GETGLOBAL R1 K26       ; R1 := 0x33bdd652
 77 [-]: GETTABLE  R1 R1 K27    ; R82 := R1[0x23d5322f]
 78 [-]: GETUPVAL  R2 U5        ; R2 := U5
 79 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["mMoviesToSync"]
 80 [-]: GETGLOBAL R3 K30       ; R3 := 0x8d3c3891
 81 [-]: CALL      R1 3 1       ; R1(R2,R3)
 82 [-]: GETGLOBAL R1 K26       ; R1 := 0x33bdd652
 83 [-]: GETTABLE  R1 R1 K27    ; R82 := R1[0x23d5322f]
 84 [-]: GETUPVAL  R2 U5        ; R2 := U5
 85 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["mMoviesToSync"]
 86 [-]: GETGLOBAL R3 K31       ; R3 := 0x7ed0a956
 87 [-]: LOADK     R4 K32       ; R4 := "/Lotus/Interface/InvitePanel.swf"
 88 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 89 [-]: CALL      R1 0 1       ; R1(R2,...)
 90 [-]: GETGLOBAL R1 K26       ; R1 := 0x33bdd652
 91 [-]: GETTABLE  R1 R1 K27    ; R82 := R1[0x23d5322f]
 92 [-]: GETUPVAL  R2 U5        ; R2 := U5
 93 [-]: GETTABLE  R2 R2 K28    ; R2 := R2["mMoviesToSync"]
 94 [-]: GETUPVAL  R3 U7        ; R3 := U7
 95 [-]: GETTABLE  R3 R3 K33    ; R82 := R3[0xc472e470]
 96 [-]: CALL      R3 1 0       ; R3,... := R3()
 97 [-]: CALL      R1 0 1       ; R1(R2,...)
 98 [-]: GETUPVAL  R1 U8        ; R1 := U8
 99 [-]: CALL      R1 1 1       ; R1()
100 [-]: GETGLOBAL R1 K6        ; R1 := 0x34291f5c
101 [-]: GETTABLE  R1 R1 K34    ; R82 := R1[0x056bfe8b]
102 [-]: CALL      R1 1 2       ; R1 := R1()
103 [-]: TEST      R1 1         ; if R1 then PC := 130
104 [-]: JMP       130          ; PC := 130
105 [-]: GETGLOBAL R1 K6        ; R1 := 0x34291f5c
106 [-]: GETTABLE  R1 R1 K35    ; R82 := R1[0xe6b41adb]
107 [-]: CALL      R1 1 2       ; R1 := R1()
108 [-]: TEST      R1 1         ; if R1 then PC := 130
109 [-]: JMP       130          ; PC := 130
110 [-]: GETGLOBAL R1 K36       ; R1 := 0x9ba7909f
111 [-]: SELF      R1 R1 K37    ; R2 := R1; R1 := R1[0xbcfb64ab]
112 [-]: GETGLOBAL R3 K38       ; R3 := 0x16a51607
113 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
114 [-]: SETUPVAL  R1 U9        ; U82 := 
115 [-]: GETGLOBAL R1 K39       ; R1 := 0x7b998233
116 [-]: GETUPVAL  R2 U9        ; R2 := U9
117 [-]: CALL      R1 2 2       ; R1 := R1(R2)
118 [-]: TEST      R1 0         ; if not R1 then PC := 130
119 [-]: JMP       130          ; PC := 130
120 [-]: GETGLOBAL R1 K39       ; R1 := 0x7b998233
121 [-]: GETGLOBAL R2 K38       ; R2 := 0x16a51607
122 [-]: CALL      R1 2 2       ; R1 := R1(R2)
123 [-]: TEST      R1 1         ; if R1 then PC := 130
124 [-]: JMP       130          ; PC := 130
125 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
126 [-]: SELF      R1 R1 K40    ; R2 := R1; R1 := R1[0x1fd6abd0]
127 [-]: GETGLOBAL R3 K38       ; R3 := 0x16a51607
128 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
129 [-]: SETUPVAL  R1 U9        ; U82 := 
130 [-]: LOADNIL   R1 R1        ; R1 := nil
131 [-]: SETGLOBALHASH R1 K41       ; mGameData := R1
132 [-]: GETGLOBAL R1 K42       ; R1 := 0x76ea806b
133 [-]: SELF      R1 R1 K43    ; R2 := R1; R1 := R1[0x3f3ae64c]
134 [-]: CONST     R3 0         ; R3 := 0.000000
135 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
136 [-]: GETGLOBAL R2 K39       ; R2 := 0x7b998233
137 [-]: MOVE      R3 R1        ; R3 := R1
138 [-]: CALL      R2 2 2       ; R2 := R2(R3)
139 [-]: TEST      R2 1         ; if R2 then PC := 147
140 [-]: JMP       147          ; PC := 147
141 [-]: SELF      R2 R1 K44    ; R3 := R1; R2 := R1[0x80563238]
142 [-]: CALL      R2 2 2       ; R2 := R2(R3)
143 [-]: SETGLOBALHASH R2 K41       ; mGameData := R2
144 [-]: SELF      R2 R1 K46    ; R3 := R1; R2 := R1[0x40e9c32b]
145 [-]: CALL      R2 2 2       ; R2 := R2(R3)
146 [-]: SETGLOBALHASH R2 K45       ; mProfileSettings := R2
147 [-]: GETGLOBAL R2 K39       ; R2 := 0x7b998233
148 [-]: GETGLOBAL R3 K41       ; R3 := mGameData
149 [-]: CALL      R2 2 2       ; R2 := R2(R3)
150 [-]: TEST      R2 1         ; if R2 then PC := 162
151 [-]: JMP       162          ; PC := 162
152 [-]: GETGLOBAL R2 K41       ; R2 := mGameData
153 [-]: SELF      R2 R2 K47    ; R3 := R2; R2 := R2[0x25a6e75e]
154 [-]: CALL      R2 2 2       ; R2 := R2(R3)
155 [-]: GETGLOBAL R3 K48       ; R3 := 0x6c97a788
156 [-]: GETTABLE  R3 R3 K49    ; R82 := R3[0x53144800]
157 [-]: GETGLOBAL R4 K50       ; R4 := 0xacddb88b
158 [-]: GETGLOBAL R5 K51       ; R5 := 0xf8bccaf7
159 [-]: MOVE      R6 R2        ; R6 := R2
160 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
161 [-]: SETUPVAL  R3 U10       ; U82 := 
162 [-]: GETUPVAL  R3 U11       ; R3 := U11
163 [-]: GETGLOBAL R4 K53       ; R4 := 0x83e41587
164 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
165 [-]: SELF      R5 R5 K54    ; R6 := R5; R5 := R5[0x42b04007]
166 [-]: GETUPVAL  R7 U11       ; R7 := U11
167 [-]: GETTABLE  R7 R7 K55    ; R7 := R7["OMEGA_STRING_LOC"]
168 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
169 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
170 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
171 [-]: SETTABLE  R3 K52 R4    ; R3["OmegaSearchable"] := R4
172 [-]: GETUPVAL  R3 U11       ; R3 := U11
173 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
174 [-]: SELF      R4 R4 K54    ; R5 := R4; R4 := R4[0x42b04007]
175 [-]: GETUPVAL  R6 U11       ; R6 := U11
176 [-]: GETTABLE  R6 R6 K57    ; R6 := R6["STEP_SEQUENCER_STRING_PREFIX"]
177 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
178 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
179 [-]: SETTABLE  R3 K56 R4    ; R3["StepSequencerPrefixString"] := R4
180 [-]: GETUPVAL  R3 U11       ; R3 := U11
181 [-]: GETGLOBAL R4 K53       ; R4 := 0x83e41587
182 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
183 [-]: SELF      R5 R5 K54    ; R6 := R5; R5 := R5[0x42b04007]
184 [-]: GETUPVAL  R7 U11       ; R7 := U11
185 [-]: GETTABLE  R7 R7 K59    ; R7 := R7["STEP_SEQUENCER_STRING_LOC"]
186 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
187 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
188 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
189 [-]: SETTABLE  R3 K58 R4    ; R3["StepSequencerSearchable"] := R4
190 [-]: GETUPVAL  R3 U11       ; R3 := U11
191 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
192 [-]: SELF      R4 R4 K54    ; R5 := R4; R4 := R4[0x42b04007]
193 [-]: GETUPVAL  R6 U11       ; R6 := U11
194 [-]: GETTABLE  R6 R6 K61    ; R6 := R6["ZAW_STRING_PREFIX"]
195 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
196 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
197 [-]: SETTABLE  R3 K60 R4    ; R3["ZawPrefixString"] := R4
198 [-]: GETUPVAL  R3 U11       ; R3 := U11
199 [-]: GETGLOBAL R4 K53       ; R4 := 0x83e41587
200 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
201 [-]: SELF      R5 R5 K54    ; R6 := R5; R5 := R5[0x42b04007]
202 [-]: GETUPVAL  R7 U11       ; R7 := U11
203 [-]: GETTABLE  R7 R7 K63    ; R7 := R7["ZAW_STRING_LOC"]
204 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
205 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
206 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
207 [-]: SETTABLE  R3 K62 R4    ; R3[0xae91e43b] := R4
208 [-]: GETUPVAL  R3 U11       ; R3 := U11
209 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
210 [-]: SELF      R4 R4 K54    ; R5 := R4; R4 := R4[0x42b04007]
211 [-]: GETUPVAL  R6 U11       ; R6 := U11
212 [-]: GETTABLE  R6 R6 K65    ; R6 := R6["AMP_STRING_PREFIX"]
213 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
214 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
215 [-]: SETTABLE  R3 K64 R4    ; R3["AmpPrefixString"] := R4
216 [-]: GETUPVAL  R3 U11       ; R3 := U11
217 [-]: GETGLOBAL R4 K53       ; R4 := 0x83e41587
218 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
219 [-]: SELF      R5 R5 K54    ; R6 := R5; R5 := R5[0x42b04007]
220 [-]: GETUPVAL  R7 U11       ; R7 := U11
221 [-]: GETTABLE  R7 R7 K67    ; R7 := R7["AMP_STRING_LOC"]
222 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
223 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
224 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
225 [-]: SETTABLE  R3 K66 R4    ; R3["AmpSearchable"] := R4
226 [-]: GETUPVAL  R3 U11       ; R3 := U11
227 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
228 [-]: SELF      R4 R4 K54    ; R5 := R4; R4 := R4[0x42b04007]
229 [-]: GETUPVAL  R6 U11       ; R6 := U11
230 [-]: GETTABLE  R6 R6 K69    ; R6 := R6["MOA_PET_STRING_PREFIX"]
231 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
232 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
233 [-]: SETTABLE  R3 K68 R4    ; R3["MoaPetPrefixString"] := R4
234 [-]: GETUPVAL  R3 U11       ; R3 := U11
235 [-]: GETGLOBAL R4 K53       ; R4 := 0x83e41587
236 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
237 [-]: SELF      R5 R5 K54    ; R6 := R5; R5 := R5[0x42b04007]
238 [-]: GETUPVAL  R7 U11       ; R7 := U11
239 [-]: GETTABLE  R7 R7 K71    ; R7 := R7["MOA_PET_STRING_LOC"]
240 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
241 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
242 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
243 [-]: SETTABLE  R3 K70 R4    ; R3["MoaPetSearchable"] := R4
244 [-]: GETUPVAL  R3 U11       ; R3 := U11
245 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
246 [-]: SELF      R4 R4 K54    ; R5 := R4; R4 := R4[0x42b04007]
247 [-]: GETUPVAL  R6 U11       ; R6 := U11
248 [-]: GETTABLE  R6 R6 K73    ; R6 := R6["KDRIVE_STRING_PREFIX"]
249 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
250 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
251 [-]: SETTABLE  R3 K72 R4    ; R3["KDrivePrefixString"] := R4
252 [-]: GETUPVAL  R3 U11       ; R3 := U11
253 [-]: GETGLOBAL R4 K53       ; R4 := 0x83e41587
254 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
255 [-]: SELF      R5 R5 K54    ; R6 := R5; R5 := R5[0x42b04007]
256 [-]: GETUPVAL  R7 U11       ; R7 := U11
257 [-]: GETTABLE  R7 R7 K75    ; R7 := R7["KDRIVE_STRING_LOC"]
258 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
259 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
260 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
261 [-]: SETTABLE  R3 K74 R4    ; R3["KDriveSearchable"] := R4
262 [-]: GETUPVAL  R3 U11       ; R3 := U11
263 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
264 [-]: SELF      R4 R4 K54    ; R5 := R4; R4 := R4[0x42b04007]
265 [-]: GETUPVAL  R6 U11       ; R6 := U11
266 [-]: GETTABLE  R6 R6 K77    ; R6 := R6["KITGUN_STRING_PREFIX"]
267 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
268 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
269 [-]: SETTABLE  R3 K76 R4    ; R3["KitgunPrefixString"] := R4
270 [-]: GETUPVAL  R3 U11       ; R3 := U11
271 [-]: GETGLOBAL R4 K53       ; R4 := 0x83e41587
272 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
273 [-]: SELF      R5 R5 K54    ; R6 := R5; R5 := R5[0x42b04007]
274 [-]: GETUPVAL  R7 U11       ; R7 := U11
275 [-]: GETTABLE  R7 R7 K79    ; R7 := R7["KITGUN_STRING_LOC"]
276 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
277 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
278 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
279 [-]: SETTABLE  R3 K78 R4    ; R3[0xae91e43b] := R4
280 [-]: GETUPVAL  R3 U11       ; R3 := U11
281 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
282 [-]: SELF      R4 R4 K54    ; R5 := R4; R4 := R4[0x42b04007]
283 [-]: GETUPVAL  R6 U11       ; R6 := U11
284 [-]: GETTABLE  R6 R6 K81    ; R6 := R6["APPEARANCE_STRING_PREFIX"]
285 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
286 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
287 [-]: SETTABLE  R3 K80 R4    ; R3["AppearancePrefixString"] := R4
288 [-]: GETUPVAL  R3 U11       ; R3 := U11
289 [-]: GETGLOBAL R4 K53       ; R4 := 0x83e41587
290 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
291 [-]: SELF      R5 R5 K54    ; R6 := R5; R5 := R5[0x42b04007]
292 [-]: GETUPVAL  R7 U11       ; R7 := U11
293 [-]: GETTABLE  R7 R7 K83    ; R7 := R7["APPEARANCE_STRING_LOC"]
294 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
295 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
296 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
297 [-]: SETTABLE  R3 K82 R4    ; R3[0xae91e43b] := R4
298 [-]: GETUPVAL  R3 U11       ; R3 := U11
299 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
300 [-]: SELF      R4 R4 K54    ; R5 := R4; R4 := R4[0x42b04007]
301 [-]: GETUPVAL  R6 U11       ; R6 := U11
302 [-]: GETTABLE  R6 R6 K85    ; R6 := R6["MOD_CONFIG_STRING_PREFIX"]
303 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
304 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
305 [-]: SETTABLE  R3 K84 R4    ; R3["ModConfigPrefixString"] := R4
306 [-]: GETUPVAL  R3 U11       ; R3 := U11
307 [-]: GETGLOBAL R4 K53       ; R4 := 0x83e41587
308 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
309 [-]: SELF      R5 R5 K54    ; R6 := R5; R5 := R5[0x42b04007]
310 [-]: GETUPVAL  R7 U11       ; R7 := U11
311 [-]: GETTABLE  R7 R7 K87    ; R7 := R7["MOD_CONFIG_STRING_LOC"]
312 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
313 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
314 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
315 [-]: SETTABLE  R3 K86 R4    ; R3[0xae91e43b] := R4
316 [-]: GETUPVAL  R3 U11       ; R3 := U11
317 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
318 [-]: SELF      R4 R4 K54    ; R5 := R4; R4 := R4[0x42b04007]
319 [-]: GETUPVAL  R6 U11       ; R6 := U11
320 [-]: GETTABLE  R6 R6 K89    ; R6 := R6["SHAWZIN_STRING_PREFIX"]
321 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
322 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
323 [-]: SETTABLE  R3 K88 R4    ; R3["ShawzinPrefixString"] := R4
324 [-]: GETUPVAL  R3 U11       ; R3 := U11
325 [-]: GETGLOBAL R4 K53       ; R4 := 0x83e41587
326 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
327 [-]: SELF      R5 R5 K54    ; R6 := R5; R5 := R5[0x42b04007]
328 [-]: GETUPVAL  R7 U11       ; R7 := U11
329 [-]: GETTABLE  R7 R7 K91    ; R7 := R7["SHAWZIN_STRING_LOC"]
330 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
331 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
332 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
333 [-]: SETTABLE  R3 K90 R4    ; R3["ShawzinSearchable"] := R4
334 [-]: GETUPVAL  R3 U12       ; R3 := U12
335 [-]: CALL      R3 1 1       ; R3()
336 [-]: GETUPVAL  R3 U13       ; R3 := U13
337 [-]: CONST     R4 0         ; R4 := 0.000000
338 [-]: CALL      R3 2 1       ; R3(R4)
339 [-]: GETUPVAL  R3 U13       ; R3 := U13
340 [-]: CONST     R4 1         ; R4 := 1.000000
341 [-]: CALL      R3 2 1       ; R3(R4)
342 [-]: GETUPVAL  R3 U13       ; R3 := U13
343 [-]: CONST     R4 6         ; R4 := 6.000000
344 [-]: CALL      R3 2 1       ; R3(R4)
345 [-]: GETUPVAL  R3 U13       ; R3 := U13
346 [-]: CONST     R4 7         ; R4 := 7.000000
347 [-]: CALL      R3 2 1       ; R3(R4)
348 [-]: GETUPVAL  R3 U13       ; R3 := U13
349 [-]: CONST     R4 2         ; R4 := 2.000000
350 [-]: CALL      R3 2 1       ; R3(R4)
351 [-]: GETUPVAL  R3 U14       ; R3 := U14
352 [-]: SETTABLE  R3 K92 K93   ; R3[":angry:"] := ">:%("
353 [-]: GETUPVAL  R3 U14       ; R3 := U14
354 [-]: SETTABLE  R3 K94 K95   ; R3[":awe:"] := ":o,:O"
355 [-]: GETUPVAL  R3 U14       ; R3 := U14
356 [-]: SETTABLE  R3 K96 K97   ; R3[":awkward:"] := ":|"
357 [-]: GETUPVAL  R3 U14       ; R3 := U14
358 [-]: SETTABLE  R3 K98 K99   ; R3[":cool:"] := "8%)"
359 [-]: GETUPVAL  R3 U14       ; R3 := U14
360 [-]: SETTABLE  R3 K100 K101 ; R3[":heart:"] := "<3"
361 [-]: GETUPVAL  R3 U14       ; R3 := U14
362 [-]: SETTABLE  R3 K102 K103 ; R3[":heartbroken:"] := "</3"
363 [-]: GETUPVAL  R3 U14       ; R3 := U14
364 [-]: SETTABLE  R3 K104 K105 ; R3[":kiss:"] := ":%*"
365 [-]: GETUPVAL  R3 U14       ; R3 := U14
366 [-]: SETTABLE  R3 K106 K107 ; R3[":laugh:"] := ":D"
367 [-]: GETUPVAL  R3 U14       ; R3 := U14
368 [-]: SETTABLE  R3 K108 K109 ; R3[":nerd:"] := "8|"
369 [-]: GETUPVAL  R3 U14       ; R3 := U14
370 [-]: SETTABLE  R3 K110 K111 ; R3[":sad:"] := ":%("
371 [-]: GETUPVAL  R3 U14       ; R3 := U14
372 [-]: SETTABLE  R3 K112 K113 ; R3[":sadcry:"] := ":'%("
373 [-]: GETUPVAL  R3 U14       ; R3 := U14
374 [-]: SETTABLE  R3 K114 K115 ; R3[":shock:"] := "o.O,O.o"
375 [-]: GETUPVAL  R3 U14       ; R3 := U14
376 [-]: SETTABLE  R3 K116 K117 ; R3[":smile:"] := ":%)"
377 [-]: GETUPVAL  R3 U14       ; R3 := U14
378 [-]: SETTABLE  R3 K118 K119 ; R3[":suspicion:"] := ":\\,:/"
379 [-]: GETUPVAL  R3 U14       ; R3 := U14
380 [-]: SETTABLE  R3 K120 K121 ; R3[":tongue:"] := ":P"
381 [-]: GETUPVAL  R3 U14       ; R3 := U14
382 [-]: SETTABLE  R3 K122 K123 ; R3[":wink:"] := ";%)"
383 [-]: GETGLOBAL R3 K6        ; R3 := 0x34291f5c
384 [-]: GETTABLE  R3 R3 K34    ; R82 := R3[0x056bfe8b]
385 [-]: CALL      R3 1 2       ; R3 := R3()
386 [-]: TEST      R3 1         ; if R3 then PC := 397
387 [-]: JMP       397          ; PC := 397
388 [-]: GETGLOBAL R3 K39       ; R3 := 0x7b998233
389 [-]: GETGLOBAL R4 K45       ; R4 := mProfileSettings
390 [-]: CALL      R3 2 2       ; R3 := R3(R4)
391 [-]: TEST      R3 1         ; if R3 then PC := 397
392 [-]: JMP       397          ; PC := 397
393 [-]: GETGLOBAL R3 K45       ; R3 := mProfileSettings
394 [-]: SELF      R3 R3 K125   ; R4 := R3; R3 := R3[0x57991882]
395 [-]: CALL      R3 2 2       ; R3 := R3(R4)
396 [-]: SETGLOBALHASH R3 K124      ; mChatScale := R3
397 [-]: GETGLOBAL R3 K6        ; R3 := 0x34291f5c
398 [-]: GETTABLE  R3 R3 K35    ; R82 := R3[0xe6b41adb]
399 [-]: CALL      R3 1 2       ; R3 := R3()
400 [-]: TEST      R3 0         ; if not R3 then PC := 404
401 [-]: JMP       404          ; PC := 404
402 [-]: GETGLOBAL R3 K126      ; R3 := miOSChatScale
403 [-]: SETGLOBALHASH R3 K124      ; mChatScale := R3
404 [-]: GETUPVAL  R3 U15       ; R3 := U15
405 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
406 [-]: SELF      R4 R4 K127   ; R5 := R4; R4 := R4[0x6b837788]
407 [-]: CALL      R4 2 2       ; R4 := R4(R5)
408 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
409 [-]: SELF      R5 R5 K128   ; R6 := R5; R5 := R5[0xaf9fda9f]
410 [-]: CALL      R5 2 0       ; R5,... := R5(R6)
411 [-]: CALL      R3 0 1       ; R3(R4,...)
412 [-]: GETUPVAL  R3 U1        ; R3 := U1
413 [-]: SELF      R3 R3 K129   ; R4 := R3; R3 := R3[0xbd2e96ea]
414 [-]: CONST     R5 2         ; R5 := 2.000000
415 [-]: CLOSURE   R6 0         ; R6 := closure(Function #152.1)
416 [-]: GETUPVAL  R0 U16       ; R0 := U16
417 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
418 [-]: CONST     R3 10        ; R3 := 10.000000
419 [-]: CONST     R4 400       ; R4 := 400.000000
420 [-]: CONST     R5 460       ; R5 := 460.000000
421 [-]: CONST     R6 240       ; R6 := 240.000000
422 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
423 [-]: SELF      R7 R7 K130   ; R8 := R7; R7 := R7[0x767c0947]
424 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
425 [-]: CALL      R7 3 1       ; R7(R8,R9)
426 [-]: GETUPVAL  R7 U17       ; R7 := U17
427 [-]: LOADK     R8 K132      ; R8 := "Window"
428 [-]: CALL      R7 2 2       ; R7 := R7(R8)
429 [-]: SETGLOBALHASH R7 K131      ; mWindow := R7
430 [-]: GETGLOBAL R7 K131      ; R7 := mWindow
431 [-]: GETUPVAL  R8 U7        ; R8 := U7
432 [-]: GETTABLE  R8 R8 K134   ; R82 := R8[0x06d055f9]
433 [-]: GETGLOBAL R9 K39       ; R9 := 0x7b998233
434 [-]: GETGLOBAL R10 K135     ; R10 := _T
435 [-]: GETTABLE  R10 R10 K136 ; R10 := R10["UIInputEnabled"]
436 [-]: CALL      R9 2 2       ; R9 := R9(R10)
437 [-]: TEST      R9 1         ; if R9 then PC := 442
438 [-]: JMP       442          ; PC := 442
439 [-]: GETGLOBAL R9 K135      ; R9 := _T
440 [-]: GETTABLE  R9 R9 K136   ; R9 := R9["UIInputEnabled"]
441 [-]: JMP       444          ; PC := 444
442 [-]: OP_LOADBOOL R9 0 1       ; R9 := false; PC := 443
443 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
444 [-]: GETGLOBAL R10 K131     ; R10 := mWindow
445 [-]: GETTABLE  R10 R10 K137 ; R10 := R10["VISUAL_MODE_MENU_SIMPLE"]
446 [-]: GETGLOBAL R11 K131     ; R11 := mWindow
447 [-]: GETTABLE  R11 R11 K138 ; R11 := R11["VISUAL_MODE_GAMEPLAY_SIMPLE"]
448 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
449 [-]: SETTABLE  R7 K133 R8   ; R7["mVisualMode"] := R8
450 [-]: GETGLOBAL R7 K36       ; R7 := 0x9ba7909f
451 [-]: SELF      R7 R7 K139   ; R8 := R7; R7 := R7[0xbf9494fc]
452 [-]: LOADK     R9 K140      ; R9 := "Lotus.EnableTraceLogging"
453 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
454 [-]: TEST      R7 0         ; if not R7 then PC := 462
455 [-]: JMP       462          ; PC := 462
456 [-]: GETGLOBAL R7 K141      ; R7 := 0x3d106989
457 [-]: LOADK     R8 K142      ; R8 := "InitChatVisualMode: "
458 [-]: GETGLOBAL R9 K131      ; R9 := mWindow
459 [-]: GETTABLE  R9 R9 K133   ; R9 := R9["mVisualMode"]
460 [-]: CONCAT    R8 R8 R9     ; R8 := R8 .. R9
461 [-]: CALL      R7 2 1       ; R7(R8)
462 [-]: GETGLOBAL R7 K131      ; R7 := mWindow
463 [-]: SELF      R7 R7 K143   ; R8 := R7; R7 := R7[0x687ae094]
464 [-]: MOVE      R9 R3        ; R9 := R3
465 [-]: MOVE      R10 R4       ; R10 := R4
466 [-]: MOVE      R11 R5       ; R11 := R5
467 [-]: MOVE      R12 R6       ; R12 := R6
468 [-]: CALL      R7 6 1       ; R7(R8,R9,R10,R11,R12)
469 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
470 [-]: SELF      R7 R7 K144   ; R8 := R7; R7 := R7[0x5f56eeab]
471 [-]: LOADK     R9 K13       ; R9 := "Window.SendMessageBar.MessageBox"
472 [-]: CONST     R10 29       ; R10 := 29.000000
473 [-]: LOADK     R11 K145     ; R11 := ""
474 [-]: CALL      R7 5 1       ; R7(R8,R9,R10,R11)
475 [-]: GETUPVAL  R7 U18       ; R7 := U18
476 [-]: CALL      R7 1 1       ; R7()
477 [-]: GETUPVAL  R7 U4        ; R7 := U4
478 [-]: GETTABLE  R7 R7 K146   ; R82 := R7[0x938a8128]
479 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
480 [-]: CALL      R7 2 1       ; R7(R8)
481 [-]: GETGLOBAL R7 K6        ; R7 := 0x34291f5c
482 [-]: GETTABLE  R7 R7 K147   ; R82 := R7[0x1467d5f4]
483 [-]: CALL      R7 1 2       ; R7 := R7()
484 [-]: TEST      R7 1         ; if R7 then PC := 490
485 [-]: JMP       490          ; PC := 490
486 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
487 [-]: SELF      R7 R7 K148   ; R8 := R7; R7 := R7[0xbc838db9]
488 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
489 [-]: CALL      R7 3 1       ; R7(R8,R9)
490 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
491 [-]: SETGLOBALHASH R7 K149      ; mInitialized := R7
492 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
493 [-]: SETGLOBALHASH R7 K150      ; mInputBlocked := R7
494 [-]: GETUPVAL  R7 U19       ; R7 := U19
495 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
496 [-]: CALL      R7 2 1       ; R7(R8)
497 [-]: GETGLOBAL R7 K0        ; R7 := 0xae91e43b
498 [-]: SELF      R7 R7 K151   ; R8 := R7; R7 := R7[0x78f32995]
499 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
500 [-]: CALL      R7 3 1       ; R7(R8,R9)
501 [-]: GETUPVAL  R7 U20       ; R7 := U20
502 [-]: CALL      R7 1 1       ; R7()
503 [-]: GETGLOBAL R7 K42       ; R7 := 0x76ea806b
504 [-]: SELF      R7 R7 K43    ; R8 := R7; R7 := R7[0x3f3ae64c]
505 [-]: CONST     R9 0         ; R9 := 0.000000
506 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
507 [-]: GETGLOBAL R8 K39       ; R8 := 0x7b998233
508 [-]: MOVE      R9 R7        ; R9 := R7
509 [-]: CALL      R8 2 2       ; R8 := R8(R9)
510 [-]: TEST      R8 1         ; if R8 then PC := 517
511 [-]: JMP       517          ; PC := 517
512 [-]: GETGLOBAL R8 K152      ; R8 := 0x11a19c5e
513 [-]: SELF      R9 R7 K44    ; R10 := R7; R9 := R7[0x80563238]
514 [-]: CALL      R9 2 2       ; R9 := R9(R10)
515 [-]: LOADK     R10 K153     ; R10 := "OnProfileSaved"
516 [-]: CALL      R8 3 1       ; R8(R9,R10)
517 [-]: GETGLOBAL R8 K39       ; R8 := 0x7b998233
518 [-]: GETGLOBAL R9 K41       ; R9 := mGameData
519 [-]: CALL      R8 2 2       ; R8 := R8(R9)
520 [-]: TEST      R8 1         ; if R8 then PC := 528
521 [-]: JMP       528          ; PC := 528
522 [-]: GETGLOBAL R8 K41       ; R8 := mGameData
523 [-]: SELF      R8 R8 K154   ; R9 := R8; R8 := R8[0x0e0439c0]
524 [-]: LOADK     R10 K155     ; R10 := "OnSyncWorldState"
525 [-]: GETUPVAL  R11 U21      ; R11 := U21
526 [-]: OP_LOADBOOL R12 0 0      ; R12 := false
527 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
528 [-]: GETGLOBAL R8 K135      ; R8 := _T
529 [-]: GETUPVAL  R9 U22       ; R9 := U22
530 [-]: SETTABLE  R8 K156 R9   ; R8["ChatOnSubScreenChanged"] := R9
531 [-]: GETGLOBAL R8 K135      ; R8 := _T
532 [-]: SETTABLE  R8 K157 K5   ; R8["ChatReinit"] := false
533 [-]: GETGLOBAL R8 K6        ; R8 := 0x34291f5c
534 [-]: GETTABLE  R8 R8 K35    ; R82 := R8[0xe6b41adb]
535 [-]: CALL      R8 1 2       ; R8 := R8()
536 [-]: TEST      R8 0         ; if not R8 then PC := 545
537 [-]: JMP       545          ; PC := 545
538 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
539 [-]: SELF      R8 R8 K19    ; R9 := R8; R8 := R8[0xaade900e]
540 [-]: LOADK     R10 K158     ; R10 := "Window.TabMenu.WindowTitle"
541 [-]: CONST     R11 59       ; R11 := 59.000000
542 [-]: OP_LOADBOOL R12 0 0      ; R12 := false
543 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
544 [-]: JMP       545          ; PC := 545
545 [-]: RETURN    R0 1         ; return 


; Function #152.1:
;
; Name:            
; Defined at line: 9909
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
  2 [-]: SETUPVAL  R0 U0        ; U82 := 
  3 [-]: RETURN    R0 1         ; return 


; Function #153:
;
; Name:            
; Defined at line: 9966
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #154:
;
; Name:            
; Defined at line: 9970
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #155:
;
; Name:            
; Defined at line: 9973
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "undefined" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETGLOBAL R1 K1        ; R1 := _T
  5 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["ContextMenu"]
  6 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mListItems"]
  7 [-]: GETGLOBAL R2 K4        ; R2 := 0x03f57322
  8 [-]: MOVE      R3 R0        ; R3 := R0
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 11 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: SELF      R2 R1 K6     ; R3 := R1; R2 := R1[0x372f38bf]
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: GETGLOBAL R3 K5        ; R3 := 0x7b998233
 20 [-]: MOVE      R4 R2        ; R4 := R2
 21 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 22 [-]: TEST      R3 1         ; if R3 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: TEST      R2 0         ; if not R2 then PC := 30
 25 [-]: JMP       30           ; PC := 30
 26 [-]: GETGLOBAL R3 K1        ; R3 := _T
 27 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["ContextMenu"]
 28 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0xe0f7ce9e]
 29 [-]: CALL      R3 2 1       ; R3(R4)
 30 [-]: RETURN    R0 1         ; return 


; Function #156:
;
; Name:            
; Defined at line: 9993
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mSelectedUser
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x98453b6b]
  8 [-]: GETGLOBAL R2 K1        ; R2 := mSelectedUser
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["User"]
 10 [-]: CALL      R0 3 1       ; R0(R1,R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #157:
;
; Name:            
; Defined at line: 10000
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: MOVE      R1 R0        ; R1 := R0
  2 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  5 [-]: TEST      R2 0         ; if not R2 then PC := 14
  6 [-]: JMP       14           ; PC := 14
  7 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  8 [-]: GETGLOBAL R3 K1        ; R3 := mSelectedUser
  9 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 10 [-]: TEST      R2 1         ; if R2 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETGLOBAL R2 K1        ; R2 := mSelectedUser
 13 [-]: GETTABLE  R1 R2 K2     ; R1 := R2["User"]
 14 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 15 [-]: MOVE      R3 R1        ; R3 := R1
 16 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 17 [-]: TEST      R2 1         ; if R2 then PC := 40
 18 [-]: JMP       40           ; PC := 40
 19 [-]: GETGLOBAL R2 K3        ; R2 := 0xe7f2b02f
 20 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x0b151d80]
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 23 [-]: MOVE      R4 R2        ; R4 := R2
 24 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 25 [-]: TEST      R3 1         ; if R3 then PC := 32
 26 [-]: JMP       32           ; PC := 32
 27 [-]: SETUPVAL  R1 U0        ; U82 := 
 28 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2[0x00dc7406]
 29 [-]: MOVE      R5 R1        ; R5 := R1
 30 [-]: LOADK     R6 K6        ; R6 := "PrivateConvoPlayerIDResultOutgoing"
 31 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 32 [-]: GETGLOBAL R3 K7        ; R3 := mWindow
 33 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["mVisualMode"]
 34 [-]: GETGLOBAL R4 K7        ; R4 := mWindow
 35 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["VISUAL_MODE_MENU_SIMPLE"]
 36 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 40
 37 [-]: JMP       40           ; PC := 40
 38 [-]: GETUPVAL  R3 U1        ; R3 := U1
 39 [-]: CALL      R3 1 1       ; R3()
 40 [-]: RETURN    R0 1         ; return 


; Function #158:
;
; Name:            
; Defined at line: 10018
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: LOADNIL   R3 R3        ; R3 := nil
  4 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
  5 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
  6 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  7 [-]: MOVE      R3 R1        ; R3 := R1
  8 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  9 [-]: TEST      R2 0         ; if not R2 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETUPVAL  R2 U1        ; R2 := U1
 12 [-]: MOVE      R3 R0        ; R3 := R0
 13 [-]: CALL      R2 2 1       ; R2(R3)
 14 [-]: JMP       27           ; PC := 27
 15 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 16 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x46610c50]
 17 [-]: MOVE      R4 R1        ; R4 := R1
 18 [-]: CALL      R2 3 1       ; R2(R3,R4)
 19 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 20 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mVisualMode"]
 21 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
 22 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["VISUAL_MODE_MENU_SIMPLE"]
 23 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 27
 24 [-]: JMP       27           ; PC := 27
 25 [-]: GETUPVAL  R2 U2        ; R2 := U2
 26 [-]: CALL      R2 1 1       ; R2()
 27 [-]: RETURN    R0 1         ; return 


; Function #159:
;
; Name:            
; Defined at line: 10032
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R82 := R1[0x6c02dd2a]
  3 [-]: LOADNIL   R2 R2        ; R2 := nil
  4 [-]: MOVE      R3 R0        ; R3 := R0
  5 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
  6 [-]: TEST      R1 0         ; if not R1 then PC := 17
  7 [-]: JMP       17           ; PC := 17
  8 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  9 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xd4f2405e]
 10 [-]: GETGLOBAL R4 K3        ; R4 := 0xae91e43b
 11 [-]: SELF      R4 R4 K4     ; R5 := R4; R4 := R4[0x42b04007]
 12 [-]: MOVE      R6 R1        ; R6 := R1
 13 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 14 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 15 [-]: CALL      R2 0 1       ; R2(R3,...)
 16 [-]: RETURN    R0 1         ; return 
 17 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 18 [-]: GETGLOBAL R3 K6        ; R3 := 0xe7f2b02f
 19 [-]: SELF      R3 R3 K7     ; R4 := R3; R3 := R3[0x565be9ee]
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R2 0 2       ; R2 := R2(R3,...)
 22 [-]: TEST      R2 0         ; if not R2 then PC := 41
 23 [-]: JMP       41           ; PC := 41
 24 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 25 [-]: GETGLOBAL R3 K8        ; R3 := _T
 26 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["SquadOverlay"]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: TEST      R2 1         ; if R2 then PC := 40
 29 [-]: JMP       40           ; PC := 40
 30 [-]: GETGLOBAL R2 K8        ; R2 := _T
 31 [-]: CLOSURE   R3 0         ; R3 := closure(Function #159.1)
 32 [-]: MOVE      R0 R0        ; R0 := R0
 33 [-]: SETTABLE  R2 K10 R3    ; R2[0x0032441c] := R3
 34 [-]: GETGLOBAL R2 K8        ; R2 := _T
 35 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["SquadOverlay"]
 36 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0xe4162eed]
 37 [-]: LOADK     R4 K12       ; R4 := "HostLobby"
 38 [-]: LOADK     R5 K10       ; R5 := "OnLobbyReady"
 39 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 40 [-]: RETURN    R0 1         ; return 
 41 [-]: GETGLOBAL R2 K5        ; R2 := 0x7b998233
 42 [-]: GETGLOBAL R3 K13       ; R3 := mGameData
 43 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 44 [-]: TEST      R2 1         ; if R2 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETGLOBAL R2 K13       ; R2 := mGameData
 47 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0xd20f757a]
 48 [-]: MOVE      R4 R0        ; R4 := R0
 49 [-]: LOADK     R5 K15       ; R5 := "GameInvitePlayerIDResults"
 50 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 51 [-]: RETURN    R0 1         ; return 


; Function #159.1:
;
; Name:            
; Defined at line: 10043
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: SETTABLE  R1 K1 K2     ; R1["OnLobbyReady"] := nil
  3 [-]: TEST      R0 0         ; if not R0 then PC := 10
  4 [-]: JMP       10           ; PC := 10
  5 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  6 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0xe4162eed]
  7 [-]: LOADK     R3 K5        ; R3 := "InviteUser"
  8 [-]: GETUPVAL  R4 U0        ; R4 := U0
  9 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 10 [-]: RETURN    R0 1         ; return 


; Function #160:
;
; Name:            
; Defined at line: 10062
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: RETURN    R0 1         ; return 


; Function #161:
;
; Name:            
; Defined at line: 10066
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mSelectedUser
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETGLOBAL R1 K1        ; R1 := mSelectedUser
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["User"]
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: RETURN    R0 1         ; return 


; Function #162:
;
; Name:            
; Defined at line: 10075
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R1 0         ; if not R1 then PC := 24
  2 [-]: JMP       24           ; PC := 24
  3 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
  4 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mVisualMode"]
  5 [-]: GETGLOBAL R3 K0        ; R3 := mWindow
  6 [-]: GETTABLE  R3 R3 K2     ; R3 := R3["VISUAL_MODE_MENU_SIMPLE"]
  7 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: JMP       24           ; PC := 24
 13 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 14 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mVisualMode"]
 15 [-]: GETGLOBAL R3 K0        ; R3 := mWindow
 16 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 17 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 24
 18 [-]: JMP       24           ; PC := 24
 19 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 20 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0xc2b5e351]
 21 [-]: GETGLOBAL R4 K0        ; R4 := mWindow
 22 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["VISUAL_MODE_GAMEPLAY_FULL"]
 23 [-]: CALL      R2 3 1       ; R2(R3,R4)
 24 [-]: EQ        1 R0 K6      ; if R0 == nil then PC := 68
 25 [-]: JMP       68           ; PC := 68
 26 [-]: EQ        1 R0 K7      ; if R0 == "" then PC := 68
 27 [-]: JMP       68           ; PC := 68
 28 [-]: GETGLOBAL R2 K8        ; R2 := 0x015284cd
 29 [-]: LOADK     R3 K9        ; R3 := "!"
 30 [-]: MOVE      R4 R0        ; R4 := R0
 31 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 32 [-]: GETGLOBAL R3 K10       ; R3 := 0x7b998233
 33 [-]: GETTABLE  R4 R2 K11    ; R4 := R2[2.000000]
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: TEST      R3 0         ; if not R3 then PC := 39
 36 [-]: JMP       39           ; PC := 39
 37 [-]: GETTABLE  R3 R2 K12    ; R3 := R2[1.000000]
 38 [-]: SETTABLE  R2 K11 R3    ; R2[2.000000] := R3
 39 [-]: LEN       R3 R2        ; R3 := # R2
 40 [-]: EQ        0 R3 K11     ; if R3 ~= 2.000000 then PC := 68
 41 [-]: JMP       68           ; PC := 68
 42 [-]: GETGLOBAL R3 K10       ; R3 := 0x7b998233
 43 [-]: GETTABLE  R4 R2 K12    ; R4 := R2[1.000000]
 44 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 45 [-]: TEST      R3 1         ; if R3 then PC := 68
 46 [-]: JMP       68           ; PC := 68
 47 [-]: GETGLOBAL R3 K10       ; R3 := 0x7b998233
 48 [-]: GETTABLE  R4 R2 K11    ; R4 := R2[2.000000]
 49 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 50 [-]: TEST      R3 1         ; if R3 then PC := 68
 51 [-]: JMP       68           ; PC := 68
 52 [-]: GETUPVAL  R3 U1        ; R3 := U1
 53 [-]: GETTABLE  R4 R2 K12    ; R4 := R2[1.000000]
 54 [-]: GETTABLE  R5 R2 K11    ; R5 := R2[2.000000]
 55 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 56 [-]: GETGLOBAL R4 K10       ; R4 := 0x7b998233
 57 [-]: MOVE      R5 R3        ; R5 := R3
 58 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 59 [-]: TEST      R4 1         ; if R4 then PC := 68
 60 [-]: JMP       68           ; PC := 68
 61 [-]: GETTABLE  R4 R3 K13    ; R4 := R3["mIsActive"]
 62 [-]: TEST      R4 1         ; if R4 then PC := 68
 63 [-]: JMP       68           ; PC := 68
 64 [-]: GETGLOBAL R4 K0        ; R4 := mWindow
 65 [-]: SELF      R4 R4 K14    ; R5 := R4; R4 := R4[0x46610c50]
 66 [-]: MOVE      R6 R3        ; R6 := R3
 67 [-]: CALL      R4 3 1       ; R4(R5,R6)
 68 [-]: RETURN    R0 1         ; return 


; Function #163:
;
; Name:            
; Defined at line: 10099
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #164:
;
; Name:            
; Defined at line: 10103
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
  4 [-]: CALL      R1 3 1       ; R1(R2,R3)
  5 [-]: RETURN    R0 1         ; return 


; Function #165:
;
; Name:            
; Defined at line: 10108
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisualMode"]
  3 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  8 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xc2b5e351]
  9 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 10 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 11 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 12 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 13 [-]: RETURN    R0 1         ; return 


; Function #166:
;
; Name:            
; Defined at line: 10114
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: EQ        0 R0 K0      ; if R0 ~= 1.000000 then PC := 10
  3 [-]: JMP       10           ; PC := 10
  4 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
  5 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0xc2b5e351]
  6 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  7 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["VISUAL_MODE_GAMEPLAY_SIMPLE"]
  8 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
  9 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 10 [-]: RETURN    R0 1         ; return 


; Function #167:
;
; Name:            
; Defined at line: 10120
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: TEST      R0 0         ; if not R0 then PC := 22
  3 [-]: JMP       22           ; PC := 22
  4 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  5 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisualMode"]
  6 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
  8 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 22
  9 [-]: JMP       22           ; PC := 22
 10 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
 11 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisualMode"]
 12 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 14 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 22
 15 [-]: JMP       22           ; PC := 22
 16 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
 17 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xc2b5e351]
 18 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
 19 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 20 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 21 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 22 [-]: RETURN    R0 1         ; return 


; Function #168:
;
; Name:            
; Defined at line: 10126
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 34
  5 [-]: JMP       34           ; PC := 34
  6 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: OP_LOADBOOL R0 0 0       ; R0 := false
  9 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mVisualMode"]
 11 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 12 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VISUAL_MODE_MENU_FULL"]
 13 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 21
 14 [-]: JMP       21           ; PC := 21
 15 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 16 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mVisualMode"]
 17 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 18 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
 19 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 22 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xc2b5e351]
 23 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
 24 [-]: GETTABLE  R3 R3 K5     ; R3 := R3["VISUAL_MODE_GAMEPLAY_FULL"]
 25 [-]: MOVE      R4 R0        ; R4 := R0
 26 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 27 [-]: JMP       34           ; PC := 34
 28 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 29 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0xc2b5e351]
 30 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
 31 [-]: GETTABLE  R3 R3 K7     ; R3 := R3["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 32 [-]: MOVE      R4 R0        ; R4 := R0
 33 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 34 [-]: RETURN    R0 1         ; return 


; Function #169:
;
; Name:            
; Defined at line: 10139
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
  3 [-]: CALL      R0 2 1       ; R0(R1)
  4 [-]: RETURN    R0 1         ; return 


; Function #170:
;
; Name:            
; Defined at line: 10144
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: LOADK     R2 K0        ; R2 := ""
  2 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
  3 [-]: MOVE      R4 R0        ; R4 := R0
  4 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  5 [-]: TEST      R3 1         ; if R3 then PC := 26
  6 [-]: JMP       26           ; PC := 26
  7 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
  8 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x9f16d8a1]
  9 [-]: GETGLOBAL R5 K2        ; R5 := mWindow
 10 [-]: GETTABLE  R5 R5 K4     ; R5 := R5["CHANNEL_EXIT"]
 11 [-]: LOADK     R6 K5        ; R6 := "#"
 12 [-]: MOVE      R7 R0        ; R7 := R0
 13 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 14 [-]: LOADK     R7 K0        ; R7 := ""
 15 [-]: LOADNIL   R8 R9        ; R8 := R9 := nil
 16 [-]: MOVE      R10 R1       ; R10 := R1
 17 [-]: CALL      R3 8 1       ; R3(R4,R5,R6,R7,R8,R9,R10)
 18 [-]: GETGLOBAL R3 K6        ; R3 := 0x7f5022cf
 19 [-]: GETTABLE  R3 R3 K7     ; R82 := R3[0x1a94c9cc]
 20 [-]: MOVE      R4 R0        ; R4 := R0
 21 [-]: CONST     R5 2         ; R5 := 2.000000
 22 [-]: CONST     R6 -1        ; R6 := -1.000000
 23 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 24 [-]: MOVE      R2 R3        ; R2 := R3
 25 [-]: JMP       52           ; PC := 52
 26 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
 27 [-]: SELF      R3 R3 K8     ; R4 := R3; R3 := R3[0x8b75da5a]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
 30 [-]: MOVE      R5 R3        ; R5 := R3
 31 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 32 [-]: TEST      R4 1         ; if R4 then PC := 52
 33 [-]: JMP       52           ; PC := 52
 34 [-]: GETGLOBAL R4 K6        ; R4 := 0x7f5022cf
 35 [-]: GETTABLE  R4 R4 K7     ; R82 := R4[0x1a94c9cc]
 36 [-]: GETTABLE  R5 R3 K9     ; R5 := R3["mChannelName"]
 37 [-]: CONST     R6 2         ; R6 := 2.000000
 38 [-]: CONST     R7 -1        ; R7 := -1.000000
 39 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 40 [-]: MOVE      R2 R4        ; R2 := R4
 41 [-]: GETGLOBAL R4 K2        ; R4 := mWindow
 42 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0x9f16d8a1]
 43 [-]: GETGLOBAL R6 K2        ; R6 := mWindow
 44 [-]: GETTABLE  R6 R6 K4     ; R6 := R6["CHANNEL_EXIT"]
 45 [-]: LOADK     R7 K5        ; R7 := "#"
 46 [-]: GETTABLE  R8 R3 K9     ; R8 := R3["mChannelName"]
 47 [-]: CONCAT    R7 R7 R8     ; R7 := R7 .. R8
 48 [-]: LOADK     R8 K0        ; R8 := ""
 49 [-]: LOADNIL   R9 R10       ; R9 := R10 := nil
 50 [-]: MOVE      R11 R1       ; R11 := R1
 51 [-]: CALL      R4 8 1       ; R4(R5,R6,R7,R8,R9,R10,R11)
 52 [-]: GETGLOBAL R4 K1        ; R4 := 0x7b998233
 53 [-]: GETGLOBAL R5 K10       ; R5 := mGameData
 54 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 55 [-]: TEST      R4 1         ; if R4 then PC := 61
 56 [-]: JMP       61           ; PC := 61
 57 [-]: GETGLOBAL R4 K10       ; R4 := mGameData
 58 [-]: SELF      R4 R4 K11    ; R5 := R4; R4 := R4[0x4cfa611a]
 59 [-]: MOVE      R6 R2        ; R6 := R2
 60 [-]: CALL      R4 3 1       ; R4(R5,R6)
 61 [-]: RETURN    R0 1         ; return 


; Function #171:
;
; Name:            
; Defined at line: 10164
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xcfc01047
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mPanelList"]
  4 [-]: CALL      R0 2 4       ; R0,R1,R2 := R0(R1)
  5 [-]: JMP       21           ; PC := 21
  6 [-]: GETGLOBAL R5 K3        ; R5 := 0x7f5022cf
  7 [-]: GETTABLE  R5 R5 K4     ; R82 := R5[0x1a94c9cc]
  8 [-]: GETTABLE  R6 R4 K5     ; R6 := R4["mChannelName"]
  9 [-]: CONST     R7 1         ; R7 := 1.000000
 10 [-]: CONST     R8 1         ; R8 := 1.000000
 11 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 12 [-]: GETGLOBAL R6 K1        ; R6 := mWindow
 13 [-]: GETTABLE  R6 R6 K6     ; R82 := R6[0xfe8039a9]
 14 [-]: CALL      R6 1 2       ; R6 := R6()
 15 [-]: EQ        0 R5 R6      ; if R5 ~= R6 then PC := 21
 16 [-]: JMP       21           ; PC := 21
 17 [-]: GETUPVAL  R5 U0        ; R5 := U0
 18 [-]: GETTABLE  R6 R4 K5     ; R6 := R4["mChannelName"]
 19 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 20 [-]: CALL      R5 3 1       ; R5(R6,R7)
 21 [-]: TFORLOOP  R0 2         ; R3,R4 :=  R0(R1,R2); if R3 ~= nil then begin PC = 6; R2 := R3 end
 22 [-]: JMP       6            ; PC := 6
 23 [-]: GETGLOBAL R5 K1        ; R5 := mWindow
 24 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mTabMenu"]
 25 [-]: SETTABLE  R5 K8 K9     ; R5["mInitialX"] := 0.000000
 26 [-]: GETGLOBAL R5 K1        ; R5 := mWindow
 27 [-]: GETTABLE  R5 R5 K7     ; R5 := R5["mTabMenu"]
 28 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0x71e9ac81]
 29 [-]: LOADNIL   R7 R7        ; R7 := nil
 30 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 31 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
 32 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
 33 [-]: RETURN    R0 1         ; return 


; Function #172:
;
; Name:            
; Defined at line: 10178
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #173:
;
; Name:            
; Defined at line: 10184
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
  2 [-]: GETGLOBAL R3 K1        ; R3 := mGameData
  3 [-]: CALL      R2 2 2       ; R2 := R2(R3)
  4 [-]: TEST      R2 0         ; if not R2 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: TEST      R0 1         ; if R0 then PC := 27
  8 [-]: JMP       27           ; PC := 27
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: GETTABLE  R2 R2 K2     ; R82 := R2[0x895cc727]
 11 [-]: MOVE      R3 R1        ; R3 := R1
 12 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 13 [-]: GETGLOBAL R3 K3        ; R3 := 0x3d106989
 14 [-]: LOADK     R4 K4        ; R4 := "FAILURE: "
 15 [-]: MOVE      R5 R1        ; R5 := R1
 16 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 17 [-]: CALL      R3 2 1       ; R3(R4)
 18 [-]: GETGLOBAL R3 K5        ; R3 := mWindow
 19 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xd4f2405e]
 20 [-]: GETGLOBAL R5 K7        ; R5 := 0xae91e43b
 21 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5[0x42b04007]
 22 [-]: MOVE      R7 R2        ; R7 := R2
 23 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 24 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 25 [-]: CALL      R3 0 1       ; R3(R4,...)
 26 [-]: JMP       41           ; PC := 41
 27 [-]: GETUPVAL  R3 U1        ; R3 := U1
 28 [-]: EQ        1 R3 K9      ; if R3 == nil then PC := 41
 29 [-]: JMP       41           ; PC := 41
 30 [-]: GETGLOBAL R3 K5        ; R3 := mWindow
 31 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xd4f2405e]
 32 [-]: GETGLOBAL R5 K7        ; R5 := 0xae91e43b
 33 [-]: SELF      R5 R5 K8     ; R6 := R5; R5 := R5[0x42b04007]
 34 [-]: LOADK     R7 K10       ; R7 := "/Lotus/Language/Menu/OrderInvite_Success"
 35 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 36 [-]: NEWTABLE  R9 0 1       ; R9 := {}
 37 [-]: GETUPVAL  R10 U1       ; R10 := U1
 38 [-]: SETTABLE  R9 K11 R10   ; R9[0xbd496aa1] := R10
 39 [-]: CALL      R5 5 0       ; R5,... := R5(R6,R7,R8,R9)
 40 [-]: CALL      R3 0 1       ; R3(R4,...)
 41 [-]: LOADNIL   R3 R3        ; R3 := nil
 42 [-]: SETUPVAL  R3 U1        ; U82 := 
 43 [-]: RETURN    R0 1         ; return 


; Function #174:
;
; Name:            
; Defined at line: 10201
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mGameData
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 0         ; if not R1 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: SETUPVAL  R0 U0        ; U82 := 
  8 [-]: GETGLOBAL R1 K1        ; R1 := mGameData
  9 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x9cb8fad7]
 10 [-]: MOVE      R3 R0        ; R3 := R0
 11 [-]: LOADK     R4 K3        ; R4 := "OnGuildChanges"
 12 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 13 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 14 [-]: GETGLOBAL R2 K4        ; R2 := mWindow
 15 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 16 [-]: TEST      R1 1         ; if R1 then PC := 29
 17 [-]: JMP       29           ; PC := 29
 18 [-]: GETGLOBAL R1 K4        ; R1 := mWindow
 19 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mVisualMode"]
 20 [-]: GETGLOBAL R2 K4        ; R2 := mWindow
 21 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 22 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 29
 23 [-]: JMP       29           ; PC := 29
 24 [-]: GETGLOBAL R1 K4        ; R1 := mWindow
 25 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0xc2b5e351]
 26 [-]: GETGLOBAL R3 K4        ; R3 := mWindow
 27 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["VISUAL_MODE_MENU_FULL"]
 28 [-]: CALL      R1 3 1       ; R1(R2,R3)
 29 [-]: RETURN    R0 1         ; return 


; Function #175:
;
; Name:            
; Defined at line: 10214
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mSelectedUser
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETGLOBAL R1 K1        ; R1 := mSelectedUser
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["User"]
  9 [-]: CALL      R0 2 1       ; R0(R1)
 10 [-]: RETURN    R0 1         ; return 


; Function #176:
;
; Name:            
; Defined at line: 10220
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETGLOBAL R2 K0        ; R2 := 0xe7f2b02f
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xe7696f24]
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: CALL      R2 3 1       ; R2(R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #177:
;
; Name:            
; Defined at line: 10228
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mSelectedUser
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 34
  5 [-]: JMP       34           ; PC := 34
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K1        ; R1 := mSelectedUser
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["User"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 34
 11 [-]: JMP       34           ; PC := 34
 12 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
 13 [-]: GETGLOBAL R1 K3        ; R1 := mGameData
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 34
 16 [-]: JMP       34           ; PC := 34
 17 [-]: GETGLOBAL R0 K4        ; R0 := 0x34291f5c
 18 [-]: GETTABLE  R0 R0 K5     ; R82 := R0[0x9ad21ae9]
 19 [-]: CALL      R0 1 2       ; R0 := R0()
 20 [-]: TEST      R0 0         ; if not R0 then PC := 29
 21 [-]: JMP       29           ; PC := 29
 22 [-]: GETGLOBAL R0 K3        ; R0 := mGameData
 23 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x27af4576]
 24 [-]: GETGLOBAL R2 K1        ; R2 := mSelectedUser
 25 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["User"]
 26 [-]: LOADK     R3 K7        ; R3 := "ViewXBLiveAccountIdResult"
 27 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 28 [-]: JMP       34           ; PC := 34
 29 [-]: GETGLOBAL R0 K8        ; R0 := 0xe7f2b02f
 30 [-]: SELF      R0 R0 K9     ; R1 := R0; R0 := R0[0xe7696f24]
 31 [-]: GETGLOBAL R2 K1        ; R2 := mSelectedUser
 32 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["User"]
 33 [-]: CALL      R0 3 1       ; R0(R1,R2)
 34 [-]: RETURN    R0 1         ; return 


; Function #178:
;
; Name:            
; Defined at line: 10238
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: TEST      R0 1         ; if R0 then PC := 32
  2 [-]: JMP       32           ; PC := 32
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  4 [-]: LOADK     R3 K1        ; R3 := "FAILURE: "
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETGLOBAL R2 K2        ; R2 := 0x7b998233
  9 [-]: GETGLOBAL R3 K3        ; R3 := mWindow
 10 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 11 [-]: TEST      R2 1         ; if R2 then PC := 31
 12 [-]: JMP       31           ; PC := 31
 13 [-]: GETGLOBAL R2 K3        ; R2 := mWindow
 14 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x8b75da5a]
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: GETGLOBAL R3 K2        ; R3 := 0x7b998233
 17 [-]: MOVE      R4 R2        ; R4 := R2
 18 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 19 [-]: TEST      R3 1         ; if R3 then PC := 31
 20 [-]: JMP       31           ; PC := 31
 21 [-]: SELF      R3 R2 K5     ; R4 := R2; R3 := R2[0xd4f2405e]
 22 [-]: GETGLOBAL R5 K6        ; R5 := 0xae91e43b
 23 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0x42b04007]
 24 [-]: GETUPVAL  R7 U0        ; R7 := U0
 25 [-]: GETTABLE  R7 R7 K8     ; R82 := R7[0x3230dc3e]
 26 [-]: MOVE      R8 R1        ; R8 := R1
 27 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 28 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 29 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 30 [-]: CALL      R3 0 1       ; R3(R4,...)
 31 [-]: RETURN    R0 1         ; return 
 32 [-]: GETGLOBAL R3 K9        ; R3 := 0x015284cd
 33 [-]: LOADK     R4 K10       ; R4 := ","
 34 [-]: MOVE      R5 R1        ; R5 := R1
 35 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 36 [-]: LEN       R4 R3        ; R4 := # R3
 37 [-]: EQ        0 R4 K11     ; if R4 ~= 2.000000 then PC := 70
 38 [-]: JMP       70           ; PC := 70
 39 [-]: GETTABLE  R4 R3 K12    ; R4 := R3[1.000000]
 40 [-]: EQ        1 R4 K13     ; if R4 == "" then PC := 70
 41 [-]: JMP       70           ; PC := 70
 42 [-]: GETTABLE  R4 R3 K11    ; R4 := R3[2.000000]
 43 [-]: EQ        1 R4 K13     ; if R4 == "" then PC := 70
 44 [-]: JMP       70           ; PC := 70
 45 [-]: GETGLOBAL R4 K2        ; R4 := 0x7b998233
 46 [-]: GETGLOBAL R5 K14       ; R5 := _T
 47 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["OpenScreenAsync"]
 48 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 49 [-]: TEST      R4 1         ; if R4 then PC := 70
 50 [-]: JMP       70           ; PC := 70
 51 [-]: GETGLOBAL R4 K14       ; R4 := _T
 52 [-]: GETTABLE  R5 R3 K12    ; R5 := R3[1.000000]
 53 [-]: SETTABLE  R4 K16 R5    ; R4["SelectedProfileId"] := R5
 54 [-]: GETGLOBAL R4 K14       ; R4 := _T
 55 [-]: GETTABLE  R5 R3 K11    ; R5 := R3[2.000000]
 56 [-]: SETTABLE  R4 K17 R5    ; R4["SelectedProfileName"] := R5
 57 [-]: GETGLOBAL R4 K14       ; R4 := _T
 58 [-]: SETTABLE  R4 K18 K19   ; R4["SelectedProfileImage"] := nil
 59 [-]: GETGLOBAL R4 K14       ; R4 := _T
 60 [-]: GETTABLE  R4 R4 K20    ; R82 := R4[0x32bb15a6]
 61 [-]: LOADK     R5 K21       ; R5 := "Profile"
 62 [-]: CALL      R4 2 1       ; R4(R5)
 63 [-]: GETGLOBAL R4 K22       ; R4 := 0x34291f5c
 64 [-]: GETTABLE  R4 R4 K23    ; R82 := R4[0xe6b41adb]
 65 [-]: CALL      R4 1 2       ; R4 := R4()
 66 [-]: TEST      R4 0         ; if not R4 then PC := 70
 67 [-]: JMP       70           ; PC := 70
 68 [-]: GETUPVAL  R4 U1        ; R4 := U1
 69 [-]: CALL      R4 1 1       ; R4()
 70 [-]: RETURN    R0 1         ; return 


; Function #179:
;
; Name:            
; Defined at line: 10263
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADK     R1 K0        ; R1 := "/Lotus/Language/Menu/Chat_LoadingScreenBlocked"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
  8 [-]: GETGLOBAL R1 K2        ; R1 := mSelectedUser
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 29
 11 [-]: JMP       29           ; PC := 29
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
 13 [-]: GETGLOBAL R1 K2        ; R1 := mSelectedUser
 14 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["User"]
 15 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 16 [-]: TEST      R0 1         ; if R0 then PC := 29
 17 [-]: JMP       29           ; PC := 29
 18 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
 19 [-]: GETGLOBAL R1 K4        ; R1 := mGameData
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R0 K4        ; R0 := mGameData
 24 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0xd20f757a]
 25 [-]: GETGLOBAL R2 K2        ; R2 := mSelectedUser
 26 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["User"]
 27 [-]: LOADK     R3 K6        ; R3 := "ViewWarframeProfileAccountIdResult"
 28 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 29 [-]: RETURN    R0 1         ; return 


; Function #180:
;
; Name:            
; Defined at line: 10273
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: LOADK     R1 K0        ; R1 := "/Lotus/Language/Menu/Chat_LoadingScreenBlocked"
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K2        ; R1 := mGameData
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
 13 [-]: GETGLOBAL R1 K3        ; R1 := mSelectedUser
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: TEST      R0 1         ; if R0 then PC := 50
 16 [-]: JMP       50           ; PC := 50
 17 [-]: GETGLOBAL R0 K1        ; R0 := 0x7b998233
 18 [-]: GETGLOBAL R1 K3        ; R1 := mSelectedUser
 19 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["User"]
 20 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 21 [-]: TEST      R0 1         ; if R0 then PC := 50
 22 [-]: JMP       50           ; PC := 50
 23 [-]: GETGLOBAL R0 K3        ; R0 := mSelectedUser
 24 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["User"]
 25 [-]: LOADK     R1 K5        ; R1 := ""
 26 [-]: GETGLOBAL R2 K6        ; R2 := mWindow
 27 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x8b75da5a]
 28 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 29 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 30 [-]: MOVE      R4 R2        ; R4 := R2
 31 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 32 [-]: TEST      R3 1         ; if R3 then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: GETTABLE  R1 R2 K8     ; R1 := R2["mChannelName"]
 35 [-]: CLOSURE   R3 0         ; R3 := closure(Function #180.1)
 36 [-]: GETUPVAL  R0 U1        ; R0 := U1
 37 [-]: GETUPVAL  R0 U2        ; R0 := U2
 38 [-]: MOVE      R0 R1        ; R0 := R1
 39 [-]: MOVE      R0 R0        ; R0 := R0
 40 [-]: GETUPVAL  R4 U3        ; R4 := U3
 41 [-]: GETTABLE  R4 R4 K9     ; R82 := R4[0xcc86a2b2]
 42 [-]: GETGLOBAL R5 K10       ; R5 := 0xae91e43b
 43 [-]: MOVE      R6 R0        ; R6 := R0
 44 [-]: MOVE      R7 R3        ; R7 := R3
 45 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 46 [-]: GETUPVAL  R4 U1        ; R4 := U1
 47 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 48 [-]: CALL      R4 2 1       ; R4(R5)
 49 [-]: CLOSE     R0           ; SAVE R0,...
 50 [-]: RETURN    R0 1         ; return 


; Function #180.1:
;
; Name:            
; Defined at line: 10288
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
  3 [-]: CALL      R1 2 1       ; R1(R2)
  4 [-]: GETGLOBAL R1 K0        ; R1 := 0xe7f2b02f
  5 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x0b151d80]
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 36
  8 [-]: JMP       36           ; PC := 36
  9 [-]: EQ        0 R0 K3      ; if R0 ~= "OffensiveName" then PC := 36
 10 [-]: JMP       36           ; PC := 36
 11 [-]: GETGLOBAL R2 K4        ; R2 := 0x7b998233
 12 [-]: MOVE      R3 R1        ; R3 := R1
 13 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 14 [-]: TEST      R2 1         ; if R2 then PC := 36
 15 [-]: JMP       36           ; PC := 36
 16 [-]: GETUPVAL  R2 U1        ; R2 := U1
 17 [-]: GETUPVAL  R3 U2        ; R3 := U2
 18 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 19 [-]: TEST      R2 0         ; if not R2 then PC := 36
 20 [-]: JMP       36           ; PC := 36
 21 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1[0xa75cd47d]
 22 [-]: LOADK     R4 K6        ; R4 := "#"
 23 [-]: GETUPVAL  R5 U2        ; R5 := U2
 24 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 25 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 26 [-]: TEST      R2 0         ; if not R2 then PC := 36
 27 [-]: JMP       36           ; PC := 36
 28 [-]: SELF      R2 R1 K7     ; R3 := R1; R2 := R1[0x1f268b73]
 29 [-]: GETUPVAL  R4 U3        ; R4 := U3
 30 [-]: LOADK     R5 K8        ; R5 := ""
 31 [-]: LOADK     R6 K9        ; R6 := "1m"
 32 [-]: CONST     R7 1         ; R7 := 1.000000
 33 [-]: MOVE      R8 R0        ; R8 := R0
 34 [-]: LOADK     R9 K8        ; R9 := ""
 35 [-]: CALL      R2 8 1       ; R2(R3,R4,R5,R6,R7,R8,R9)
 36 [-]: RETURN    R0 1         ; return 


; Function #181:
;
; Name:            
; Defined at line: 10303
; #Upvalues:       19
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  28

  1 [-]: GETUPVAL  R4 U0        ; R4 := U0
  2 [-]: GETTABLE  R4 R4 K0     ; R82 := R4[0x06d055f9]
  3 [-]: EQ        0 R3 K1      ; if R3 ~= nil then PC := 6
  4 [-]: JMP       6            ; PC := 6
  5 [-]: OP_LOADBOOL R5 0 1       ; R5 := false; PC := 6
  6 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
  7 [-]: MOVE      R6 R3        ; R6 := R3
  8 [-]: GETGLOBAL R7 K2        ; R7 := mWindow
  9 [-]: SELF      R7 R7 K3     ; R8 := R7; R7 := R7[0x8b75da5a]
 10 [-]: CALL      R7 2 0       ; R7,... := R7(R8)
 11 [-]: CALL      R4 0 2       ; R4 := R4(R5,...)
 12 [-]: EQ        1 R3 K1      ; if R3 == nil then PC := 31
 13 [-]: JMP       31           ; PC := 31
 14 [-]: GETGLOBAL R5 K4        ; R5 := 0x7f5022cf
 15 [-]: GETTABLE  R5 R5 K5     ; R82 := R5[0x1a94c9cc]
 16 [-]: GETTABLE  R6 R4 K6     ; R6 := R4["mChannelName"]
 17 [-]: CONST     R7 2         ; R7 := 2.000000
 18 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 19 [-]: NEWTABLE  R6 0 4       ; R6 := {}
 20 [-]: SETTABLE  R6 K8 K9     ; R6["Id"] := 1.000000
 21 [-]: SETTABLE  R6 K10 R5    ; R6["User"] := R5
 22 [-]: GETGLOBAL R7 K4        ; R7 := 0x7f5022cf
 23 [-]: GETTABLE  R7 R7 K12    ; R82 := R7[0x04981ab3]
 24 [-]: MOVE      R8 R5        ; R8 := R5
 25 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 26 [-]: SETTABLE  R6 K11 R7    ; R6["UserLower"] := R7
 27 [-]: GETTABLE  R7 R4 K6     ; R7 := R4["mChannelName"]
 28 [-]: SETTABLE  R6 K13 R7    ; R6["Channel"] := R7
 29 [-]: SETGLOBALHASH R6 K7        ; mSelectedUser := R6
 30 [-]: JMP       80           ; PC := 80
 31 [-]: GETGLOBAL R6 K14       ; R6 := 0x0b96777e
 32 [-]: MOVE      R7 R0        ; R7 := R0
 33 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 34 [-]: EQ        0 R6 K15     ; if R6 ~= "string" then PC := 71
 35 [-]: JMP       71           ; PC := 71
 36 [-]: GETGLOBAL R6 K16       ; R6 := 0x015284cd
 37 [-]: LOADK     R7 K17       ; R7 := "|"
 38 [-]: MOVE      R8 R0        ; R8 := R0
 39 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 40 [-]: LOADK     R7 K18       ; R7 := ""
 41 [-]: LEN       R8 R6        ; R8 := # R6
 42 [-]: LT        0 K9 R8      ; if 1.000000 >= R8 then PC := 59
 43 [-]: JMP       59           ; PC := 59
 44 [-]: GETGLOBAL R8 K19       ; R8 := 0x7b998233
 45 [-]: MOVE      R9 R4        ; R9 := R4
 46 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 47 [-]: TEST      R8 1         ; if R8 then PC := 59
 48 [-]: JMP       59           ; PC := 59
 49 [-]: GETTABLE  R8 R4 K20    ; R8 := R4["mChatHistory"]
 50 [-]: GETGLOBAL R9 K21       ; R9 := 0x03f57322
 51 [-]: GETTABLE  R10 R6 K22   ; R10 := R6[2.000000]
 52 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 53 [-]: GETTABLE  R8 R8 R9     ; R8 := R8[R9]
 54 [-]: EQ        1 R8 K1      ; if R8 == nil then PC := 59
 55 [-]: JMP       59           ; PC := 59
 56 [-]: LOADK     R9 K23       ; R9 := "#"
 57 [-]: GETTABLE  R10 R4 K6    ; R10 := R4["mChannelName"]
 58 [-]: CONCAT    R7 R9 R10    ; R7 := R9 .. R10
 59 [-]: NEWTABLE  R9 0 4       ; R9 := {}
 60 [-]: SETTABLE  R9 K8 K9     ; R9["Id"] := 1.000000
 61 [-]: GETTABLE  R10 R6 K9    ; R10 := R6[1.000000]
 62 [-]: SETTABLE  R9 K10 R10   ; R9["User"] := R10
 63 [-]: GETGLOBAL R10 K4       ; R10 := 0x7f5022cf
 64 [-]: GETTABLE  R10 R10 K12  ; R82 := R10[0x04981ab3]
 65 [-]: GETTABLE  R11 R6 K9    ; R11 := R6[1.000000]
 66 [-]: CALL      R10 2 2      ; R10 := R10(R11)
 67 [-]: SETTABLE  R9 K11 R10   ; R9["UserLower"] := R10
 68 [-]: SETTABLE  R9 K24 R7    ; R9["Reason"] := R7
 69 [-]: SETGLOBALHASH R9 K7        ; mSelectedUser := R9
 70 [-]: JMP       80           ; PC := 80
 71 [-]: GETGLOBAL R9 K2        ; R9 := mWindow
 72 [-]: GETTABLE  R9 R9 K25    ; R9 := R9["mUserPanel"]
 73 [-]: GETTABLE  R9 R9 K26    ; R9 := R9["mListControl"]
 74 [-]: SELF      R9 R9 K27    ; R10 := R9; R9 := R9[0xca30dfb6]
 75 [-]: GETGLOBAL R11 K21      ; R11 := 0x03f57322
 76 [-]: MOVE      R12 R0       ; R12 := R0
 77 [-]: CALL      R11 2 0      ; R11,... := R11(R12)
 78 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
 79 [-]: SETGLOBALHASH R9 K7        ; mSelectedUser := R9
 80 [-]: GETGLOBAL R9 K19       ; R9 := 0x7b998233
 81 [-]: MOVE      R10 R4       ; R10 := R4
 82 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 83 [-]: TEST      R9 1         ; if R9 then PC := 88
 84 [-]: JMP       88           ; PC := 88
 85 [-]: GETGLOBAL R9 K7        ; R9 := mSelectedUser
 86 [-]: EQ        0 R9 K1      ; if R9 ~= nil then PC := 89
 87 [-]: JMP       89           ; PC := 89
 88 [-]: RETURN    R0 1         ; return 
 89 [-]: GETGLOBAL R9 K7        ; R9 := mSelectedUser
 90 [-]: GETTABLE  R9 R9 K10    ; R9 := R9["User"]
 91 [-]: GETGLOBAL R10 K2       ; R10 := mWindow
 92 [-]: GETTABLE  R10 R10 K28  ; R10 := R10["mUser"]
 93 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 96
 94 [-]: JMP       96           ; PC := 96
 95 [-]: OP_LOADBOOL R11 0 1      ; R11 := false; PC := 96
 96 [-]: OP_LOADBOOL R11 1 0      ; R11 := true
 97 [-]: TEST      R11 0        ; if not R11 then PC := 100
 98 [-]: JMP       100          ; PC := 100
 99 [-]: RETURN    R0 1         ; return 
100 [-]: GETGLOBAL R12 K19      ; R12 := 0x7b998233
101 [-]: GETGLOBAL R13 K29      ; R13 := 0x25d99d89
102 [-]: CALL      R12 2 2      ; R12 := R12(R13)
103 [-]: TEST      R12 1        ; if R12 then PC := 110
104 [-]: JMP       110          ; PC := 110
105 [-]: GETGLOBAL R13 K29      ; R13 := 0x25d99d89
106 [-]: SELF      R13 R13 K30  ; R14 := R13; R13 := R13[0x55243b27]
107 [-]: MOVE      R15 R9       ; R15 := R9
108 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
109 [-]: JMP       112          ; PC := 112
110 [-]: OP_LOADBOOL R13 0 1      ; R13 := false; PC := 111
111 [-]: OP_LOADBOOL R13 1 0      ; R13 := true
112 [-]: TEST      R12 1        ; if R12 then PC := 119
113 [-]: JMP       119          ; PC := 119
114 [-]: GETGLOBAL R14 K29      ; R14 := 0x25d99d89
115 [-]: SELF      R14 R14 K31  ; R15 := R14; R14 := R14[0x713ce380]
116 [-]: CALL      R14 2 2      ; R14 := R14(R15)
117 [-]: EQ        0 R14 K18    ; if R14 ~= "" then PC := 120
118 [-]: JMP       120          ; PC := 120
119 [-]: OP_LOADBOOL R14 0 1      ; R14 := false; PC := 120
120 [-]: OP_LOADBOOL R14 1 0      ; R14 := true
121 [-]: TEST      R12 1        ; if R12 then PC := 128
122 [-]: JMP       128          ; PC := 128
123 [-]: GETGLOBAL R15 K29      ; R15 := 0x25d99d89
124 [-]: SELF      R15 R15 K32  ; R16 := R15; R15 := R15[0xeecdd99d]
125 [-]: MOVE      R17 R9       ; R17 := R9
126 [-]: CALL      R15 3 2      ; R15 := R15(R16,R17)
127 [-]: JMP       130          ; PC := 130
128 [-]: OP_LOADBOOL R15 0 1      ; R15 := false; PC := 129
129 [-]: OP_LOADBOOL R15 1 0      ; R15 := true
130 [-]: GETGLOBAL R16 K33      ; R16 := mContextMenu
131 [-]: SELF      R16 R16 K34  ; R17 := R16; R16 := R16[0x7c09c373]
132 [-]: OP_LOADBOOL R18 1 0      ; R18 := true
133 [-]: OP_LOADBOOL R19 1 0      ; R19 := true
134 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
135 [-]: TEST      R11 1        ; if R11 then PC := 194
136 [-]: JMP       194          ; PC := 194
137 [-]: GETGLOBAL R16 K35      ; R16 := 0x34291f5c
138 [-]: GETTABLE  R16 R16 K36  ; R82 := R16[0x056bfe8b]
139 [-]: CALL      R16 1 2      ; R16 := R16()
140 [-]: TEST      R16 0        ; if not R16 then PC := 146
141 [-]: JMP       146          ; PC := 146
142 [-]: GETUPVAL  R16 U1       ; R16 := U1
143 [-]: CALL      R16 1 2      ; R16 := R16()
144 [-]: TEST      R16 1        ; if R16 then PC := 194
145 [-]: JMP       194          ; PC := 194
146 [-]: GETGLOBAL R16 K4       ; R16 := 0x7f5022cf
147 [-]: GETTABLE  R16 R16 K5   ; R82 := R16[0x1a94c9cc]
148 [-]: GETTABLE  R17 R4 K6    ; R17 := R4["mChannelName"]
149 [-]: CONST     R18 1        ; R18 := 1.000000
150 [-]: CONST     R19 1        ; R19 := 1.000000
151 [-]: CALL      R16 4 2      ; R16 := R16(R17,R18,R19)
152 [-]: GETGLOBAL R17 K2       ; R17 := mWindow
153 [-]: GETTABLE  R17 R17 K37  ; R82 := R17[0xfe8039a9]
154 [-]: CALL      R17 1 2      ; R17 := R17()
155 [-]: EQ        1 R16 R17    ; if R16 == R17 then PC := 166
156 [-]: JMP       166          ; PC := 166
157 [-]: GETGLOBAL R16 K33      ; R16 := mContextMenu
158 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16[0xbad4316f]
159 [-]: NEWTABLE  R18 0 2      ; R18 := {}
160 [-]: SETTABLE  R18 K39 K40  ; R18["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Talk"
161 [-]: GETUPVAL  R19 U2       ; R19 := U2
162 [-]: SETTABLE  R18 K41 R19  ; R18["PressedCallback"] := R19
163 [-]: OP_LOADBOOL R19 1 0      ; R19 := true
164 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
165 [-]: JMP       194          ; PC := 194
166 [-]: GETGLOBAL R16 K19      ; R16 := 0x7b998233
167 [-]: MOVE      R17 R3       ; R17 := R3
168 [-]: CALL      R16 2 2      ; R16 := R16(R17)
169 [-]: TEST      R16 0        ; if not R16 then PC := 176
170 [-]: JMP       176          ; PC := 176
171 [-]: GETGLOBAL R16 K35      ; R16 := 0x34291f5c
172 [-]: GETTABLE  R16 R16 K42  ; R82 := R16[0x1467d5f4]
173 [-]: CALL      R16 1 2      ; R16 := R16()
174 [-]: TEST      R16 0        ; if not R16 then PC := 194
175 [-]: JMP       194          ; PC := 194
176 [-]: GETGLOBAL R16 K33      ; R16 := mContextMenu
177 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16[0xbad4316f]
178 [-]: NEWTABLE  R18 0 3      ; R18 := {}
179 [-]: SETTABLE  R18 K39 K43  ; R18["Name"] := "/Lotus/Language/Menu/SocialOverlay_CloseFriendsTabBtn"
180 [-]: GETUPVAL  R19 U3       ; R19 := U3
181 [-]: SETTABLE  R18 K41 R19  ; R18["PressedCallback"] := R19
182 [-]: GETTABLE  R19 R4 K6    ; R19 := R4["mChannelName"]
183 [-]: SETTABLE  R18 K44 R19  ; R18["callbackParam"] := R19
184 [-]: OP_LOADBOOL R19 1 0      ; R19 := true
185 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
186 [-]: GETGLOBAL R16 K33      ; R16 := mContextMenu
187 [-]: SELF      R16 R16 K38  ; R17 := R16; R16 := R16[0xbad4316f]
188 [-]: NEWTABLE  R18 0 2      ; R18 := {}
189 [-]: SETTABLE  R18 K39 K45  ; R18["Name"] := "/Lotus/Language/Menu/SocialOverlay_CloseAllFriendTabsBtn"
190 [-]: GETUPVAL  R19 U4       ; R19 := U4
191 [-]: SETTABLE  R18 K41 R19  ; R18["PressedCallback"] := R19
192 [-]: OP_LOADBOOL R19 1 0      ; R19 := true
193 [-]: CALL      R16 4 1      ; R16(R17,R18,R19)
194 [-]: GETTABLE  R16 R4 K46   ; R16 := R4["mHasAccount"]
195 [-]: EQ        1 R16 K1     ; if R16 == nil then PC := 200
196 [-]: JMP       200          ; PC := 200
197 [-]: GETTABLE  R16 R4 K46   ; R16 := R4["mHasAccount"]
198 [-]: TEST      R16 0        ; if not R16 then PC := 419
199 [-]: JMP       419          ; PC := 419
200 [-]: GETGLOBAL R16 K47      ; R16 := 0xe7f2b02f
201 [-]: SELF      R16 R16 K48  ; R17 := R16; R16 := R16[0x565be9ee]
202 [-]: CALL      R16 2 2      ; R16 := R16(R17)
203 [-]: GETGLOBAL R17 K19      ; R17 := 0x7b998233
204 [-]: MOVE      R18 R16      ; R18 := R16
205 [-]: CALL      R17 2 2      ; R17 := R17(R18)
206 [-]: TEST      R17 1        ; if R17 then PC := 213
207 [-]: JMP       213          ; PC := 213
208 [-]: GETUPVAL  R17 U5       ; R17 := U5
209 [-]: GETTABLE  R17 R17 K49  ; R82 := R17[0x5a0ed16f]
210 [-]: CALL      R17 1 2      ; R17 := R17()
211 [-]: TEST      R17 0        ; if not R17 then PC := 221
212 [-]: JMP       221          ; PC := 221
213 [-]: GETGLOBAL R17 K33      ; R17 := mContextMenu
214 [-]: SELF      R17 R17 K38  ; R18 := R17; R17 := R17[0xbad4316f]
215 [-]: NEWTABLE  R19 0 2      ; R19 := {}
216 [-]: SETTABLE  R19 K39 K50  ; R19["Name"] := "/Lotus/Language/Menu/SocialOverlay_ContextInvite"
217 [-]: GETUPVAL  R20 U6       ; R20 := U6
218 [-]: SETTABLE  R19 K41 R20  ; R19["PressedCallback"] := R20
219 [-]: OP_LOADBOOL R20 1 0      ; R20 := true
220 [-]: CALL      R17 4 1      ; R17(R18,R19,R20)
221 [-]: GETGLOBAL R17 K4       ; R17 := 0x7f5022cf
222 [-]: GETTABLE  R17 R17 K5   ; R82 := R17[0x1a94c9cc]
223 [-]: MOVE      R18 R9       ; R18 := R9
224 [-]: LEN       R19 R9       ; R19 := # R9
225 [-]: SUB       R19 R19 K22  ; R19 := R19 - 2.000000
226 [-]: LEN       R20 R9       ; R20 := # R9
227 [-]: CALL      R17 4 2      ; R17 := R17(R18,R19,R20)
228 [-]: GETGLOBAL R18 K4       ; R18 := 0x7f5022cf
229 [-]: GETTABLE  R18 R18 K5   ; R82 := R18[0x1a94c9cc]
230 [-]: MOVE      R19 R10      ; R19 := R10
231 [-]: LEN       R20 R10      ; R20 := # R10
232 [-]: SUB       R20 R20 K22  ; R20 := R20 - 2.000000
233 [-]: LEN       R21 R10      ; R21 := # R10
234 [-]: CALL      R18 4 2      ; R18 := R18(R19,R20,R21)
235 [-]: OP_LOADBOOL R19 0 0      ; R19 := false
236 [-]: TEST      R19 1        ; if R19 then PC := 297
237 [-]: JMP       297          ; PC := 297
238 [-]: GETGLOBAL R20 K35      ; R20 := 0x34291f5c
239 [-]: GETTABLE  R20 R20 K36  ; R82 := R20[0x056bfe8b]
240 [-]: CALL      R20 1 2      ; R20 := R20()
241 [-]: TEST      R20 0        ; if not R20 then PC := 257
242 [-]: JMP       257          ; PC := 257
243 [-]: GETGLOBAL R20 K35      ; R20 := 0x34291f5c
244 [-]: GETTABLE  R20 R20 K51  ; R82 := R20[0xc84fa15a]
245 [-]: CALL      R20 1 2      ; R20 := R20()
246 [-]: TEST      R20 1        ; if R20 then PC := 257
247 [-]: JMP       257          ; PC := 257
248 [-]: GETGLOBAL R20 K33      ; R20 := mContextMenu
249 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20[0xbad4316f]
250 [-]: NEWTABLE  R22 0 2      ; R22 := {}
251 [-]: SETTABLE  R22 K39 K52  ; R22["Name"] := "/Lotus/Language/Menu/ShowGamerCard_Windows"
252 [-]: GETUPVAL  R23 U7       ; R23 := U7
253 [-]: SETTABLE  R22 K41 R23  ; R22["PressedCallback"] := R23
254 [-]: OP_LOADBOOL R23 1 0      ; R23 := true
255 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
256 [-]: JMP       265          ; PC := 265
257 [-]: GETGLOBAL R20 K33      ; R20 := mContextMenu
258 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20[0xbad4316f]
259 [-]: NEWTABLE  R22 0 2      ; R22 := {}
260 [-]: SETTABLE  R22 K39 K53  ; R22["Name"] := "/Lotus/Language/Menu/SocialOverlay_ViewProfile"
261 [-]: GETUPVAL  R23 U8       ; R23 := U8
262 [-]: SETTABLE  R22 K41 R23  ; R22["PressedCallback"] := R23
263 [-]: OP_LOADBOOL R23 1 0      ; R23 := true
264 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
265 [-]: TEST      R13 1        ; if R13 then PC := 277
266 [-]: JMP       277          ; PC := 277
267 [-]: GETGLOBAL R20 K33      ; R20 := mContextMenu
268 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20[0xbad4316f]
269 [-]: NEWTABLE  R22 0 2      ; R22 := {}
270 [-]: SETTABLE  R22 K39 K54  ; R22["Name"] := "/Lotus/Language/Menu/SocialOverlay_AddFriend"
271 [-]: CLOSURE   R23 0        ; R23 := closure(Function #181.1)
272 [-]: GETUPVAL  R0 U9        ; R0 := U9
273 [-]: MOVE      R0 R9        ; R0 := R9
274 [-]: SETTABLE  R22 K41 R23  ; R22["PressedCallback"] := R23
275 [-]: OP_LOADBOOL R23 1 0      ; R23 := true
276 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
277 [-]: TEST      R14 0        ; if not R14 then PC := 297
278 [-]: JMP       297          ; PC := 297
279 [-]: TEST      R15 1        ; if R15 then PC := 297
280 [-]: JMP       297          ; PC := 297
281 [-]: TEST      R12 1        ; if R12 then PC := 297
282 [-]: JMP       297          ; PC := 297
283 [-]: GETGLOBAL R20 K29      ; R20 := 0x25d99d89
284 [-]: SELF      R20 R20 K55  ; R21 := R20; R20 := R20[0x3a57bc9f]
285 [-]: CONST     R22 2        ; R22 := 2.000000
286 [-]: CALL      R20 3 2      ; R20 := R20(R21,R22)
287 [-]: TEST      R20 0        ; if not R20 then PC := 297
288 [-]: JMP       297          ; PC := 297
289 [-]: GETGLOBAL R20 K33      ; R20 := mContextMenu
290 [-]: SELF      R20 R20 K38  ; R21 := R20; R20 := R20[0xbad4316f]
291 [-]: NEWTABLE  R22 0 2      ; R22 := {}
292 [-]: SETTABLE  R22 K39 K57  ; R22["Name"] := "/Lotus/Language/Menu/SocialOverlay_OrderInvite"
293 [-]: GETUPVAL  R23 U10      ; R23 := U10
294 [-]: SETTABLE  R22 K41 R23  ; R22["PressedCallback"] := R23
295 [-]: OP_LOADBOOL R23 1 0      ; R23 := true
296 [-]: CALL      R20 4 1      ; R20(R21,R22,R23)
297 [-]: LOADK     R20 K18      ; R20 := ""
298 [-]: TEST      R12 1        ; if R12 then PC := 308
299 [-]: JMP       308          ; PC := 308
300 [-]: GETGLOBAL R21 K29      ; R21 := 0x25d99d89
301 [-]: SELF      R21 R21 K58  ; R22 := R21; R21 := R21[0x273a2275]
302 [-]: MOVE      R23 R9       ; R23 := R9
303 [-]: CALL      R21 3 2      ; R21 := R21(R22,R23)
304 [-]: TEST      R21 0        ; if not R21 then PC := 308
305 [-]: JMP       308          ; PC := 308
306 [-]: LOADK     R20 K59      ; R20 := "/Lotus/Language/Menu/Chat_ContextMenu_Listen"
307 [-]: JMP       309          ; PC := 309
308 [-]: LOADK     R20 K60      ; R20 := "/Lotus/Language/Menu/Chat_ContextMenu_Ignore"
309 [-]: GETGLOBAL R21 K33      ; R21 := mContextMenu
310 [-]: SELF      R21 R21 K38  ; R22 := R21; R21 := R21[0xbad4316f]
311 [-]: NEWTABLE  R23 0 2      ; R23 := {}
312 [-]: SETTABLE  R23 K39 R20  ; R23["Name"] := R20
313 [-]: GETUPVAL  R24 U11      ; R24 := U11
314 [-]: SETTABLE  R23 K41 R24  ; R23["PressedCallback"] := R24
315 [-]: OP_LOADBOOL R24 1 0      ; R24 := true
316 [-]: CALL      R21 4 1      ; R21(R22,R23,R24)
317 [-]: GETGLOBAL R21 K47      ; R21 := 0xe7f2b02f
318 [-]: SELF      R21 R21 K61  ; R22 := R21; R21 := R21[0x0b151d80]
319 [-]: CALL      R21 2 2      ; R21 := R21(R22)
320 [-]: LOADK     R22 K23      ; R22 := "#"
321 [-]: GETTABLE  R23 R4 K6    ; R23 := R4["mChannelName"]
322 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
323 [-]: GETTABLE  R23 R4 K62   ; R23 := R4["mUserList"]
324 [-]: GETTABLE  R23 R23 R9   ; R23 := R23[R9]
325 [-]: EQ        0 R23 K1     ; if R23 ~= nil then PC := 328
326 [-]: JMP       328          ; PC := 328
327 [-]: OP_LOADBOOL R23 0 1      ; R23 := false; PC := 328
328 [-]: OP_LOADBOOL R23 1 0      ; R23 := true
329 [-]: TEST      R23 0        ; if not R23 then PC := 408
330 [-]: JMP       408          ; PC := 408
331 [-]: GETGLOBAL R24 K19      ; R24 := 0x7b998233
332 [-]: MOVE      R25 R21      ; R25 := R21
333 [-]: CALL      R24 2 2      ; R24 := R24(R25)
334 [-]: TEST      R24 1        ; if R24 then PC := 408
335 [-]: JMP       408          ; PC := 408
336 [-]: SELF      R24 R21 K63  ; R25 := R21; R24 := R21[0xa75cd47d]
337 [-]: MOVE      R26 R22      ; R26 := R22
338 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
339 [-]: TEST      R24 0        ; if not R24 then PC := 408
340 [-]: JMP       408          ; PC := 408
341 [-]: SELF      R24 R21 K64  ; R25 := R21; R24 := R21[0xbf7bfbe5]
342 [-]: MOVE      R26 R22      ; R26 := R22
343 [-]: MOVE      R27 R9       ; R27 := R9
344 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
345 [-]: EQ        0 R24 K65    ; if R24 ~= 0.000000 then PC := 408
346 [-]: JMP       408          ; PC := 408
347 [-]: GETUPVAL  R24 U12      ; R24 := U12
348 [-]: GETTABLE  R25 R4 K6    ; R25 := R4["mChannelName"]
349 [-]: CALL      R24 2 2      ; R24 := R24(R25)
350 [-]: TEST      R24 0        ; if not R24 then PC := 381
351 [-]: JMP       381          ; PC := 381
352 [-]: GETGLOBAL R24 K33      ; R24 := mContextMenu
353 [-]: SELF      R24 R24 K38  ; R25 := R24; R24 := R24[0xbad4316f]
354 [-]: NEWTABLE  R26 0 2      ; R26 := {}
355 [-]: SETTABLE  R26 K39 K66  ; R26["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Flush"
356 [-]: CLOSURE   R27 1        ; R27 := closure(Function #181.2)
357 [-]: GETUPVAL  R0 U13       ; R0 := U13
358 [-]: MOVE      R0 R4        ; R0 := R4
359 [-]: SETTABLE  R26 K41 R27  ; R26["PressedCallback"] := R27
360 [-]: OP_LOADBOOL R27 1 0      ; R27 := true
361 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
362 [-]: GETGLOBAL R24 K33      ; R24 := mContextMenu
363 [-]: SELF      R24 R24 K38  ; R25 := R24; R24 := R24[0xbad4316f]
364 [-]: NEWTABLE  R26 0 2      ; R26 := {}
365 [-]: SETTABLE  R26 K39 K67  ; R26["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Kick"
366 [-]: CLOSURE   R27 2        ; R27 := closure(Function #181.3)
367 [-]: GETUPVAL  R0 U14       ; R0 := U14
368 [-]: MOVE      R0 R4        ; R0 := R4
369 [-]: SETTABLE  R26 K41 R27  ; R26["PressedCallback"] := R27
370 [-]: OP_LOADBOOL R27 1 0      ; R27 := true
371 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
372 [-]: GETGLOBAL R24 K33      ; R24 := mContextMenu
373 [-]: SELF      R24 R24 K38  ; R25 := R24; R24 := R24[0xbad4316f]
374 [-]: NEWTABLE  R26 0 2      ; R26 := {}
375 [-]: SETTABLE  R26 K39 K68  ; R26["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Ban"
376 [-]: GETUPVAL  R27 U15      ; R27 := U15
377 [-]: SETTABLE  R26 K41 R27  ; R26["PressedCallback"] := R27
378 [-]: OP_LOADBOOL R27 1 0      ; R27 := true
379 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
380 [-]: JMP       408          ; PC := 408
381 [-]: GETGLOBAL R24 K33      ; R24 := mContextMenu
382 [-]: SELF      R24 R24 K38  ; R25 := R24; R24 := R24[0xbad4316f]
383 [-]: NEWTABLE  R26 0 2      ; R26 := {}
384 [-]: SETTABLE  R26 K39 K69  ; R26["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_SimpleKick"
385 [-]: CLOSURE   R27 3        ; R27 := closure(Function #181.4)
386 [-]: GETUPVAL  R0 U16       ; R0 := U16
387 [-]: SETTABLE  R26 K41 R27  ; R26["PressedCallback"] := R27
388 [-]: OP_LOADBOOL R27 1 0      ; R27 := true
389 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
390 [-]: GETGLOBAL R24 K33      ; R24 := mContextMenu
391 [-]: SELF      R24 R24 K38  ; R25 := R24; R24 := R24[0xbad4316f]
392 [-]: NEWTABLE  R26 0 2      ; R26 := {}
393 [-]: SETTABLE  R26 K39 K70  ; R26["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Ban1H"
394 [-]: CLOSURE   R27 4        ; R27 := closure(Function #181.5)
395 [-]: GETUPVAL  R0 U16       ; R0 := U16
396 [-]: SETTABLE  R26 K41 R27  ; R26["PressedCallback"] := R27
397 [-]: OP_LOADBOOL R27 1 0      ; R27 := true
398 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
399 [-]: GETGLOBAL R24 K33      ; R24 := mContextMenu
400 [-]: SELF      R24 R24 K38  ; R25 := R24; R24 := R24[0xbad4316f]
401 [-]: NEWTABLE  R26 0 2      ; R26 := {}
402 [-]: SETTABLE  R26 K39 K71  ; R26["Name"] := "/Lotus/Language/Menu/Chat_ContextMenu_Ban1D"
403 [-]: CLOSURE   R27 5        ; R27 := closure(Function #181.6)
404 [-]: GETUPVAL  R0 U16       ; R0 := U16
405 [-]: SETTABLE  R26 K41 R27  ; R26["PressedCallback"] := R27
406 [-]: OP_LOADBOOL R27 1 0      ; R27 := true
407 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
408 [-]: TEST      R19 1        ; if R19 then PC := 419
409 [-]: JMP       419          ; PC := 419
410 [-]: GETGLOBAL R24 K33      ; R24 := mContextMenu
411 [-]: SELF      R24 R24 K38  ; R25 := R24; R24 := R24[0xbad4316f]
412 [-]: NEWTABLE  R26 0 2      ; R26 := {}
413 [-]: SETTABLE  R26 K39 K72  ; R26["Name"] := "/Lotus/Language/Menu/SocialOverlay_ReportPlayer"
414 [-]: CLOSURE   R27 6        ; R27 := closure(Function #181.7)
415 [-]: GETUPVAL  R0 U17       ; R0 := U17
416 [-]: SETTABLE  R26 K41 R27  ; R26["PressedCallback"] := R27
417 [-]: OP_LOADBOOL R27 1 0      ; R27 := true
418 [-]: CALL      R24 4 1      ; R24(R25,R26,R27)
419 [-]: GETUPVAL  R24 U18      ; R24 := U18
420 [-]: MOVE      R25 R1       ; R25 := R1
421 [-]: MOVE      R26 R2       ; R26 := R2
422 [-]: CALL      R24 3 1      ; R24(R25,R26)
423 [-]: RETURN    R0 1         ; return 


; Function #181.1:
;
; Name:            
; Defined at line: 10375
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R82 := R0[0x31543b05]
  3 [-]: GETUPVAL  R1 U1        ; R1 := U1
  4 [-]: LOADK     R2 K1        ; R2 := "OnAddFriendResultToDialog"
  5 [-]: CALL      R0 3 1       ; R0(R1,R2)
  6 [-]: RETURN    R0 1         ; return 


; Function #181.2:
;
; Name:            
; Defined at line: 10402
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mChannelName"]
  5 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
  6 [-]: RETURN    R1 0         ; return R1,...
  7 [-]: RETURN    R0 1         ; return 


; Function #181.3:
;
; Name:            
; Defined at line: 10403
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: GETUPVAL  R3 U1        ; R3 := U1
  4 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mChannelName"]
  5 [-]: TAILCALL  R1 3 0       ; R1,... := R1(R2,R3)
  6 [-]: RETURN    R1 0         ; return R1,...
  7 [-]: RETURN    R0 1         ; return 


; Function #181.4:
;
; Name:            
; Defined at line: 10406
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
  4 [-]: LOADK     R4 K0        ; R4 := "5m"
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #181.5:
;
; Name:            
; Defined at line: 10407
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
  4 [-]: LOADK     R4 K0        ; R4 := "1h"
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #181.6:
;
; Name:            
; Defined at line: 10408
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
  4 [-]: LOADK     R4 K0        ; R4 := "1d"
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #181.7:
;
; Name:            
; Defined at line: 10413
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: CALL      R1 1 1       ; R1()
  3 [-]: RETURN    R0 1         ; return 


; Function #182:
;
; Name:            
; Defined at line: 10421
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
  2 [-]: SETGLOBALHASH R0 K0        ; mInputBlocked := R0
  3 [-]: RETURN    R0 1         ; return 


; Function #183:
;
; Name:            
; Defined at line: 10425
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #184:
;
; Name:            
; Defined at line: 10431
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["HideChat"]
  3 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 9
  4 [-]: JMP       9            ; PC := 9
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["HideChat"]
  7 [-]: LT        1 K3 R0      ; if 0.000000 < R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: OP_LOADBOOL R0 0 1       ; R0 := false; PC := 10
 10 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 11 [-]: GETGLOBAL R1 K4        ; R1 := mChatHidden
 12 [-]: EQ        0 R1 R0      ; if R1 ~= R0 then PC := 15
 13 [-]: JMP       15           ; PC := 15
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: SETGLOBALHASH R0 K4        ; mChatHidden := R0
 16 [-]: GETGLOBAL R1 K4        ; R1 := mChatHidden
 17 [-]: TEST      R1 0         ; if not R1 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: GETUPVAL  R1 U0        ; R1 := U0
 20 [-]: CALL      R1 1 1       ; R1()
 21 [-]: GETGLOBAL R1 K5        ; R1 := 0x25312c9b
 22 [-]: GETGLOBAL R2 K6        ; R2 := 0xae91e43b
 23 [-]: LOADK     R3 K7        ; R3 := "_root"
 24 [-]: CONST     R4 2         ; R4 := 2.000000
 25 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 26 [-]: CONST     R6 10        ; R6 := 10.000000
 27 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 28 [-]: NEWTABLE  R6 0 0       ; R6 := {}
 29 [-]: GETUPVAL  R7 U1        ; R7 := U1
 30 [-]: GETTABLE  R7 R7 K9     ; R82 := R7[0x06d055f9]
 31 [-]: MOVE      R8 R0        ; R8 := R0
 32 [-]: CONST     R9 0         ; R9 := 0.000000
 33 [-]: CONST     R10 100      ; R10 := 100.000000
 34 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 35 [-]: SETLIST   R6 0 1       ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 0
 36 [-]: LOADK     R7 K10       ; R7 := 0.200000
 37 [-]: CALL      R1 7 1       ; R1(R2,R3,R4,R5,R6,R7)
 38 [-]: RETURN    R0 1         ; return 


; Function #185:
;
; Name:            
; Defined at line: 10445
; #Upvalues:       14
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 9
  5 [-]: JMP       9            ; PC := 9
  6 [-]: GETGLOBAL R0 K2        ; R0 := mInitialized
  7 [-]: TEST      R0 1         ; if R0 then PC := 10
  8 [-]: JMP       10           ; PC := 10
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R0 K3        ; R0 := 0xb693b6c1
 11 [-]: CALL      R0 1 2       ; R0 := R0()
 12 [-]: GETGLOBAL R1 K4        ; R1 := 0x0a8f62a7
 13 [-]: CALL      R1 1 2       ; R1 := R1()
 14 [-]: GETGLOBAL R2 K5        ; R2 := mGameRules
 15 [-]: GETGLOBAL R3 K6        ; R3 := 0xbe190284
 16 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 25
 17 [-]: JMP       25           ; PC := 25
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 19 [-]: GETGLOBAL R3 K6        ; R3 := 0xbe190284
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 25
 22 [-]: JMP       25           ; PC := 25
 23 [-]: GETUPVAL  R2 U0        ; R2 := U0
 24 [-]: CALL      R2 1 1       ; R2()
 25 [-]: GETGLOBAL R2 K7        ; R2 := mWindow
 26 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xfaa69527]
 27 [-]: MOVE      R4 R0        ; R4 := R0
 28 [-]: CALL      R2 3 1       ; R2(R3,R4)
 29 [-]: GETUPVAL  R2 U1        ; R2 := U1
 30 [-]: CALL      R2 1 1       ; R2()
 31 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 32 [-]: GETGLOBAL R3 K9        ; R3 := _T
 33 [-]: GETTABLE  R3 R3 K10    ; R3 := R3["ChatReinit"]
 34 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 35 [-]: TEST      R2 0         ; if not R2 then PC := 46
 36 [-]: JMP       46           ; PC := 46
 37 [-]: GETGLOBAL R2 K11       ; R2 := 0x2e393117
 38 [-]: CALL      R2 1 1       ; R2()
 39 [-]: GETUPVAL  R2 U2        ; R2 := U2
 40 [-]: CALL      R2 1 1       ; R2()
 41 [-]: GETGLOBAL R2 K9        ; R2 := _T
 42 [-]: GETUPVAL  R3 U3        ; R3 := U3
 43 [-]: SETTABLE  R2 K12 R3    ; R2["ChatOnSubScreenChanged"] := R3
 44 [-]: GETGLOBAL R2 K9        ; R2 := _T
 45 [-]: SETTABLE  R2 K10 K13   ; R2["ChatReinit"] := false
 46 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 47 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0x8a8c8d5a]
 48 [-]: MOVE      R4 R0        ; R4 := R0
 49 [-]: CALL      R2 3 1       ; R2(R3,R4)
 50 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 51 [-]: GETUPVAL  R3 U4        ; R3 := U4
 52 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 53 [-]: TEST      R2 1         ; if R2 then PC := 59
 54 [-]: JMP       59           ; PC := 59
 55 [-]: GETUPVAL  R2 U4        ; R2 := U4
 56 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xfaa69527]
 57 [-]: MOVE      R4 R0        ; R4 := R0
 58 [-]: CALL      R2 3 1       ; R2(R3,R4)
 59 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 60 [-]: GETUPVAL  R3 U5        ; R3 := U5
 61 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 62 [-]: TEST      R2 1         ; if R2 then PC := 68
 63 [-]: JMP       68           ; PC := 68
 64 [-]: GETUPVAL  R2 U5        ; R2 := U5
 65 [-]: SELF      R2 R2 K8     ; R3 := R2; R2 := R2[0xfaa69527]
 66 [-]: MOVE      R4 R1        ; R4 := R1
 67 [-]: CALL      R2 3 1       ; R2(R3,R4)
 68 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 69 [-]: GETGLOBAL R3 K15       ; R3 := mGameData
 70 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 71 [-]: TEST      R2 1         ; if R2 then PC := 83
 72 [-]: JMP       83           ; PC := 83
 73 [-]: GETUPVAL  R2 U6        ; R2 := U6
 74 [-]: TEST      R2 0         ; if not R2 then PC := 83
 75 [-]: JMP       83           ; PC := 83
 76 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 77 [-]: SETUPVAL  R2 U6        ; U82 := 
 78 [-]: GETGLOBAL R2 K15       ; R2 := mGameData
 79 [-]: SELF      R2 R2 K16    ; R3 := R2; R2 := R2[0x4b5ffef6]
 80 [-]: LOADK     R4 K17       ; R4 := "OnLitePresenceUpdated"
 81 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 82 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 83 [-]: GETUPVAL  R2 U7        ; R2 := U7
 84 [-]: EQ        1 R2 K18     ; if R2 == nil then PC := 102
 85 [-]: JMP       102          ; PC := 102
 86 [-]: GETGLOBAL R2 K19       ; R2 := 0x0032441c
 87 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["LAST_BREAK_MSG"]
 88 [-]: SUB       R2 R1 R2     ; R2 := R1 - R2
 89 [-]: GETUPVAL  R3 U7        ; R3 := U7
 90 [-]: LE        0 R3 R2      ; if R3 > R2 then PC := 102
 91 [-]: JMP       102          ; PC := 102
 92 [-]: GETGLOBAL R2 K7        ; R2 := mWindow
 93 [-]: SELF      R2 R2 K21    ; R3 := R2; R2 := R2[0xd4f2405e]
 94 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
 95 [-]: SELF      R4 R4 K22    ; R5 := R4; R4 := R4[0x42b04007]
 96 [-]: LOADK     R6 K23       ; R6 := "/Lotus/Language/Menu/BreakAdvice"
 97 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 98 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 99 [-]: CALL      R2 3 1       ; R2(R3,R4)
100 [-]: GETGLOBAL R2 K19       ; R2 := 0x0032441c
101 [-]: SETTABLE  R2 K20 R1    ; R2["LAST_BREAK_MSG"] := R1
102 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
103 [-]: GETGLOBAL R3 K9        ; R3 := _T
104 [-]: GETTABLE  R3 R3 K24    ; R3 := R3["ContextMenu"]
105 [-]: CALL      R2 2 2       ; R2 := R2(R3)
106 [-]: TEST      R2 0         ; if not R2 then PC := 112
107 [-]: JMP       112          ; PC := 112
108 [-]: GETUPVAL  R2 U8        ; R2 := U8
109 [-]: GETTABLE  R2 R2 K25    ; R82 := R2[0x938a8128]
110 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
111 [-]: CALL      R2 2 1       ; R2(R3)
112 [-]: GETUPVAL  R2 U9        ; R2 := U9
113 [-]: GETTABLE  R2 R2 K26    ; R82 := R2[0x2fb43a9e]
114 [-]: GETUPVAL  R3 U10       ; R3 := U10
115 [-]: GETTABLE  R3 R3 K27    ; R3 := R3["StepSequencerLoader"]
116 [-]: CALL      R2 2 1       ; R2(R3)
117 [-]: GETUPVAL  R2 U11       ; R2 := U11
118 [-]: GETTABLE  R2 R2 K8     ; R82 := R2[0xfaa69527]
119 [-]: GETUPVAL  R3 U12       ; R3 := U12
120 [-]: CALL      R2 2 1       ; R2(R3)
121 [-]: GETGLOBAL R2 K28       ; R2 := 0x34291f5c
122 [-]: GETTABLE  R2 R2 K29    ; R82 := R2[0xe6b41adb]
123 [-]: CALL      R2 1 2       ; R2 := R2()
124 [-]: TEST      R2 0         ; if not R2 then PC := 165
125 [-]: JMP       165          ; PC := 165
126 [-]: GETGLOBAL R2 K30       ; R2 := mFocusTabDownStart
127 [-]: TEST      R2 0         ; if not R2 then PC := 165
128 [-]: JMP       165          ; PC := 165
129 [-]: GETGLOBAL R2 K30       ; R2 := mFocusTabDownStart
130 [-]: SUB       R2 R1 R2     ; R2 := R1 - R2
131 [-]: LT        0 K31 R2     ; if 0.250000 >= R2 then PC := 165
132 [-]: JMP       165          ; PC := 165
133 [-]: GETGLOBAL R2 K7        ; R2 := mWindow
134 [-]: GETTABLE  R2 R2 K32    ; R2 := R2["mTabMenu"]
135 [-]: SELF      R2 R2 K33    ; R3 := R2; R2 := R2[0xed1ab921]
136 [-]: CALL      R2 2 2       ; R2 := R2(R3)
137 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
138 [-]: MOVE      R4 R2        ; R4 := R2
139 [-]: CALL      R3 2 2       ; R3 := R3(R4)
140 [-]: TEST      R3 1         ; if R3 then PC := 163
141 [-]: JMP       163          ; PC := 163
142 [-]: GETGLOBAL R3 K34       ; R3 := 0x7f5022cf
143 [-]: GETTABLE  R3 R3 K35    ; R82 := R3[0x1a94c9cc]
144 [-]: GETTABLE  R4 R2 K36    ; R4 := R2["ChannelName"]
145 [-]: CONST     R5 1         ; R5 := 1.000000
146 [-]: CONST     R6 1         ; R6 := 1.000000
147 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
148 [-]: GETGLOBAL R4 K7        ; R4 := mWindow
149 [-]: GETTABLE  R4 R4 K37    ; R82 := R4[0xfe8039a9]
150 [-]: CALL      R4 1 2       ; R4 := R4()
151 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 163
152 [-]: JMP       163          ; PC := 163
153 [-]: GETGLOBAL R3 K7        ; R3 := mWindow
154 [-]: GETTABLE  R3 R3 K38    ; R3 := R3["mPanelList"]
155 [-]: GETTABLE  R4 R2 K36    ; R4 := R2["ChannelName"]
156 [-]: GETTABLE  R3 R3 R4     ; R3 := R3[R4]
157 [-]: EQ        1 R3 K18     ; if R3 == nil then PC := 163
158 [-]: JMP       163          ; PC := 163
159 [-]: GETUPVAL  R4 U13       ; R4 := U13
160 [-]: LOADNIL   R5 R7        ; R5 := R6 := R7 := nil
161 [-]: MOVE      R8 R3        ; R8 := R3
162 [-]: CALL      R4 5 1       ; R4(R5,R6,R7,R8)
163 [-]: LOADNIL   R4 R4        ; R4 := nil
164 [-]: SETGLOBALHASH R4 K30       ; mFocusTabDownStart := R4
165 [-]: RETURN    R0 1         ; return 


; Function #186:
;
; Name:            
; Defined at line: 10518
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 11
  8 [-]: JMP       11           ; PC := 11
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: CALL      R0 1 1       ; R0()
 11 [-]: RETURN    R0 1         ; return 


; Function #187:
;
; Name:            
; Defined at line: 10524
; #Upvalues:       5
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x056bfe8b]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 29
  5 [-]: JMP       29           ; PC := 29
  6 [-]: GETGLOBAL R0 K2        ; R0 := _T
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["IsButtonBarInputBlocked"]
  8 [-]: TEST      R0 0         ; if not R0 then PC := 23
  9 [-]: JMP       23           ; PC := 23
 10 [-]: GETGLOBAL R0 K2        ; R0 := _T
 11 [-]: GETTABLE  R0 R0 K4     ; R82 := R0[0x5a89033f]
 12 [-]: CALL      R0 1 2       ; R0 := R0()
 13 [-]: TEST      R0 0         ; if not R0 then PC := 23
 14 [-]: JMP       23           ; PC := 23
 15 [-]: GETGLOBAL R0 K2        ; R0 := _T
 16 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["SpectatorHudOpen"]
 17 [-]: TEST      R0 1         ; if R0 then PC := 23
 18 [-]: JMP       23           ; PC := 23
 19 [-]: GETGLOBAL R0 K2        ; R0 := _T
 20 [-]: GETTABLE  R0 R0 K6     ; R0 := R0["TRADING_POST_OPEN"]
 21 [-]: TEST      R0 0         ; if not R0 then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: GETGLOBAL R0 K7        ; R0 := 0x7b998233
 24 [-]: GETUPVAL  R1 U0        ; R1 := U0
 25 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 26 [-]: TEST      R0 1         ; if R0 then PC := 29
 27 [-]: JMP       29           ; PC := 29
 28 [-]: RETURN    R0 1         ; return 
 29 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 30 [-]: SETUPVAL  R0 U1        ; U82 := 
 31 [-]: GETGLOBAL R0 K7        ; R0 := 0x7b998233
 32 [-]: GETGLOBAL R1 K8        ; R1 := mWindow
 33 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 34 [-]: TEST      R0 1         ; if R0 then PC := 113
 35 [-]: JMP       113          ; PC := 113
 36 [-]: GETGLOBAL R0 K8        ; R0 := mWindow
 37 [-]: GETTABLE  R0 R0 K9     ; R0 := R0["mVisualMode"]
 38 [-]: GETGLOBAL R1 K8        ; R1 := mWindow
 39 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 40 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 60
 41 [-]: JMP       60           ; PC := 60
 42 [-]: GETGLOBAL R0 K8        ; R0 := mWindow
 43 [-]: SELF      R0 R0 K11    ; R1 := R0; R0 := R0[0xc2b5e351]
 44 [-]: GETGLOBAL R2 K8        ; R2 := mWindow
 45 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
 46 [-]: CALL      R0 3 1       ; R0(R1,R2)
 47 [-]: GETGLOBAL R0 K13       ; R0 := 0x76ea806b
 48 [-]: SELF      R0 R0 K14    ; R1 := R0; R0 := R0[0x3f3ae64c]
 49 [-]: CONST     R2 0         ; R2 := 0.000000
 50 [-]: CALL      R0 3 2       ; R0 := R0(R1,R2)
 51 [-]: GETGLOBAL R1 K7        ; R1 := 0x7b998233
 52 [-]: MOVE      R2 R0        ; R2 := R0
 53 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 54 [-]: TEST      R1 1         ; if R1 then PC := 113
 55 [-]: JMP       113          ; PC := 113
 56 [-]: SELF      R1 R0 K15    ; R2 := R0; R1 := R0[0xd2c048c6]
 57 [-]: CONST     R3 0         ; R3 := 0.000000
 58 [-]: CALL      R1 3 1       ; R1(R2,R3)
 59 [-]: JMP       113          ; PC := 113
 60 [-]: GETGLOBAL R1 K8        ; R1 := mWindow
 61 [-]: GETTABLE  R1 R1 K9     ; R1 := R1["mVisualMode"]
 62 [-]: GETGLOBAL R2 K8        ; R2 := mWindow
 63 [-]: GETTABLE  R2 R2 K16    ; R2 := R2["VISUAL_MODE_MENU_SIMPLE"]
 64 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 81
 65 [-]: JMP       81           ; PC := 81
 66 [-]: GETGLOBAL R1 K13       ; R1 := 0x76ea806b
 67 [-]: SELF      R1 R1 K14    ; R2 := R1; R1 := R1[0x3f3ae64c]
 68 [-]: CONST     R3 0         ; R3 := 0.000000
 69 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 70 [-]: GETGLOBAL R2 K7        ; R2 := 0x7b998233
 71 [-]: MOVE      R3 R1        ; R3 := R1
 72 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 73 [-]: TEST      R2 1         ; if R2 then PC := 78
 74 [-]: JMP       78           ; PC := 78
 75 [-]: SELF      R2 R1 K15    ; R3 := R1; R2 := R1[0xd2c048c6]
 76 [-]: CONST     R4 0         ; R4 := 0.000000
 77 [-]: CALL      R2 3 1       ; R2(R3,R4)
 78 [-]: GETUPVAL  R2 U2        ; R2 := U2
 79 [-]: CALL      R2 1 1       ; R2()
 80 [-]: JMP       113          ; PC := 113
 81 [-]: GETGLOBAL R2 K0        ; R2 := 0x34291f5c
 82 [-]: GETTABLE  R2 R2 K17    ; R82 := R2[0x1467d5f4]
 83 [-]: CALL      R2 1 2       ; R2 := R2()
 84 [-]: TEST      R2 1         ; if R2 then PC := 91
 85 [-]: JMP       91           ; PC := 91
 86 [-]: GETGLOBAL R2 K0        ; R2 := 0x34291f5c
 87 [-]: GETTABLE  R2 R2 K18    ; R82 := R2[0xe6b41adb]
 88 [-]: CALL      R2 1 2       ; R2 := R2()
 89 [-]: TEST      R2 0         ; if not R2 then PC := 113
 90 [-]: JMP       113          ; PC := 113
 91 [-]: GETGLOBAL R2 K8        ; R2 := mWindow
 92 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mVisualMode"]
 93 [-]: GETGLOBAL R3 K8        ; R3 := mWindow
 94 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["VISUAL_MODE_GAMEPLAY_FULL"]
 95 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 105
 96 [-]: JMP       105          ; PC := 105
 97 [-]: GETUPVAL  R2 U3        ; R2 := U3
 98 [-]: CALL      R2 1 1       ; R2()
 99 [-]: GETGLOBAL R2 K8        ; R2 := mWindow
100 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0xc2b5e351]
101 [-]: GETGLOBAL R4 K8        ; R4 := mWindow
102 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["VISUAL_MODE_GAMEPLAY_SIMPLE"]
103 [-]: CALL      R2 3 1       ; R2(R3,R4)
104 [-]: JMP       113          ; PC := 113
105 [-]: GETGLOBAL R2 K8        ; R2 := mWindow
106 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["mVisualMode"]
107 [-]: GETGLOBAL R3 K8        ; R3 := mWindow
108 [-]: GETTABLE  R3 R3 K19    ; R3 := R3["VISUAL_MODE_MENU_FULL"]
109 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 113
110 [-]: JMP       113          ; PC := 113
111 [-]: GETUPVAL  R2 U4        ; R2 := U4
112 [-]: CALL      R2 1 1       ; R2()
113 [-]: RETURN    R0 1         ; return 


; Function #188:
;
; Name:            
; Defined at line: 10563
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mTabMenu"]
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mTabMenu"]
  9 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mElements"]
 10 [-]: LEN       R1 R1        ; R1 := # R1
 11 [-]: LE        0 R1 K4      ; if R1 > 1.000000 then PC := 14
 12 [-]: JMP       14           ; PC := 14
 13 [-]: RETURN    R0 1         ; return 
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: CALL      R1 1 1       ; R1()
 16 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 17 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0xa5a346c9]
 18 [-]: MOVE      R3 R0        ; R3 := R0
 19 [-]: CALL      R1 3 1       ; R1(R2,R3)
 20 [-]: LOADK     R1 K6        ; R1 := "Window.TabMenu.LeftBumper"
 21 [-]: LOADK     R2 K7        ; R2 := "Window.TabMenu.RightBumper"
 22 [-]: GETGLOBAL R3 K8        ; R3 := 0x34291f5c
 23 [-]: GETTABLE  R3 R3 K9     ; R82 := R3[0x1467d5f4]
 24 [-]: CALL      R3 1 2       ; R3 := R3()
 25 [-]: TEST      R3 1         ; if R3 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: LOADK     R1 K10       ; R1 := "Window.TabMenu.LeftArrow"
 28 [-]: LOADK     R2 K11       ; R2 := "Window.TabMenu.RightArrow"
 29 [-]: GETUPVAL  R3 U1        ; R3 := U1
 30 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["DECREMENT"]
 31 [-]: EQ        0 R0 R3      ; if R0 ~= R3 then PC := 43
 32 [-]: JMP       43           ; PC := 43
 33 [-]: GETUPVAL  R3 U1        ; R3 := U1
 34 [-]: GETTABLE  R3 R3 K13    ; R82 := R3[0xf76783e5]
 35 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
 36 [-]: MOVE      R5 R1        ; R5 := R1
 37 [-]: GETGLOBAL R6 K15       ; R6 := 0x0032441c
 38 [-]: GETTABLE  R6 R6 K16    ; R6 := R6["UIFx_LeftBumperPress"]
 39 [-]: CONST     R7 0         ; R7 := 0.000000
 40 [-]: CONST     R8 0         ; R8 := 0.000000
 41 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 42 [-]: JMP       52           ; PC := 52
 43 [-]: GETUPVAL  R3 U1        ; R3 := U1
 44 [-]: GETTABLE  R3 R3 K13    ; R82 := R3[0xf76783e5]
 45 [-]: GETGLOBAL R4 K14       ; R4 := 0xae91e43b
 46 [-]: MOVE      R5 R2        ; R5 := R2
 47 [-]: GETGLOBAL R6 K15       ; R6 := 0x0032441c
 48 [-]: GETTABLE  R6 R6 K17    ; R6 := R6["UIFx_RightBumperPress"]
 49 [-]: CONST     R7 0         ; R7 := 0.000000
 50 [-]: CONST     R8 0         ; R8 := 0.000000
 51 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 52 [-]: RETURN    R0 1         ; return 


; Function #189:
;
; Name:            
; Defined at line: 10586
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: SETTABLE  R0 K1 K2     ; R0["mLeftArrowFocused"] := true
  3 [-]: GETGLOBAL R0 K3        ; R0 := 0xae91e43b
  4 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x67bc869f]
  5 [-]: LOADK     R2 K5        ; R2 := "Window.TabMenu.LeftArrow"
  6 [-]: CONST     R3 10        ; R3 := 10.000000
  7 [-]: CONST     R4 100       ; R4 := 100.000000
  8 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #190:
;
; Name:            
; Defined at line: 10591
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: SETTABLE  R0 K1 K2     ; R0["mLeftArrowFocused"] := false
  3 [-]: GETGLOBAL R0 K3        ; R0 := 0xae91e43b
  4 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x67bc869f]
  5 [-]: LOADK     R2 K5        ; R2 := "Window.TabMenu.LeftArrow"
  6 [-]: CONST     R3 10        ; R3 := 10.000000
  7 [-]: CONST     R4 50        ; R4 := 50.000000
  8 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #191:
;
; Name:            
; Defined at line: 10596
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["DECREMENT"]
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #192:
;
; Name:            
; Defined at line: 10600
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: SETTABLE  R0 K1 K2     ; R0["mRightArrowFocused"] := true
  3 [-]: GETGLOBAL R0 K3        ; R0 := 0xae91e43b
  4 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x67bc869f]
  5 [-]: LOADK     R2 K5        ; R2 := "Window.TabMenu.RightArrow"
  6 [-]: CONST     R3 10        ; R3 := 10.000000
  7 [-]: CONST     R4 100       ; R4 := 100.000000
  8 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #193:
;
; Name:            
; Defined at line: 10605
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: SETTABLE  R0 K1 K2     ; R0["mRightArrowFocused"] := false
  3 [-]: GETGLOBAL R0 K3        ; R0 := 0xae91e43b
  4 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x67bc869f]
  5 [-]: LOADK     R2 K5        ; R2 := "Window.TabMenu.RightArrow"
  6 [-]: CONST     R3 10        ; R3 := 10.000000
  7 [-]: CONST     R4 50        ; R4 := 50.000000
  8 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  9 [-]: RETURN    R0 1         ; return 


; Function #194:
;
; Name:            
; Defined at line: 10610
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETUPVAL  R1 U1        ; R1 := U1
  3 [-]: GETTABLE  R1 R1 K0     ; R1 := R1["INCREMENT"]
  4 [-]: CALL      R0 2 1       ; R0(R1)
  5 [-]: RETURN    R0 1         ; return 


; Function #195:
;
; Name:            
; Defined at line: 10614
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.TabMenu.MinMaxBtn.Icon"
  4 [-]: CONST     R3 10        ; R3 := 10.000000
  5 [-]: CONST     R4 100       ; R4 := 100.000000
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: GETUPVAL  R0 U0        ; R0 := U0
  8 [-]: GETTABLE  R0 R0 K3     ; R82 := R0[0x659d451f]
  9 [-]: GETGLOBAL R1 K4        ; R1 := 0x0032441c
 10 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["UISound_Focus"]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: RETURN    R0 1         ; return 


; Function #196:
;
; Name:            
; Defined at line: 10619
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.TabMenu.MinMaxBtn.Icon"
  4 [-]: CONST     R3 10        ; R3 := 10.000000
  5 [-]: CONST     R4 50        ; R4 := 50.000000
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #197:
;
; Name:            
; Defined at line: 10623
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mInputBlocked
  2 [-]: TEST      R0 1         ; if R0 then PC := 14
  3 [-]: JMP       14           ; PC := 14
  4 [-]: GETUPVAL  R0 U0        ; R0 := U0
  5 [-]: CALL      R0 1 2       ; R0 := R0()
  6 [-]: TEST      R0 0         ; if not R0 then PC := 12
  7 [-]: JMP       12           ; PC := 12
  8 [-]: GETUPVAL  R0 U1        ; R0 := U1
  9 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 10 [-]: CALL      R0 2 1       ; R0(R1)
 11 [-]: JMP       14           ; PC := 14
 12 [-]: GETUPVAL  R0 U2        ; R0 := U2
 13 [-]: CALL      R0 1 1       ; R0()
 14 [-]: RETURN    R0 1         ; return 


; Function #198:
;
; Name:            
; Defined at line: 10633
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 20
  5 [-]: JMP       20           ; PC := 20
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 14 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 19 [-]: RETURN    R0 2         ; return R0
 20 [-]: RETURN    R0 1         ; return 


; Function #199:
;
; Name:            
; Defined at line: 10639
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 20
  5 [-]: JMP       20           ; PC := 20
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 14 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 20
 17 [-]: JMP       20           ; PC := 20
 18 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 19 [-]: RETURN    R0 2         ; return R0
 20 [-]: RETURN    R0 1         ; return 


; Function #200:
;
; Name:            
; Defined at line: 10645
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x40eb8ac7]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 13
  8 [-]: JMP       13           ; PC := 13
  9 [-]: EQ        0 R0 K3      ; if R0 ~= "MessageBox" then PC := 13
 10 [-]: JMP       13           ; PC := 13
 11 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 12 [-]: RETURN    R1 2         ; return R1
 13 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 14 [-]: RETURN    R1 2         ; return R1
 15 [-]: RETURN    R0 1         ; return 


; Function #201:
;
; Name:            
; Defined at line: 10654
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 1         ; if R0 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: CALL      R0 1 2       ; R0 := R0()
  8 [-]: TEST      R0 1         ; if R0 then PC := 27
  9 [-]: JMP       27           ; PC := 27
 10 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
 11 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
 12 [-]: CALL      R0 1 2       ; R0 := R0()
 13 [-]: TEST      R0 0         ; if not R0 then PC := 29
 14 [-]: JMP       29           ; PC := 29
 15 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 16 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 17 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 18 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 19 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 22 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 23 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 24 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 25 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 29
 26 [-]: JMP       29           ; PC := 29
 27 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 28 [-]: RETURN    R0 2         ; return R0
 29 [-]: RETURN    R0 1         ; return 


; Function #202:
;
; Name:            
; Defined at line: 10661
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 18
  5 [-]: JMP       18           ; PC := 18
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 33
 11 [-]: JMP       33           ; PC := 33
 12 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 14 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 33
 17 [-]: JMP       33           ; PC := 33
 18 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
 19 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
 20 [-]: CALL      R0 1 2       ; R0 := R0()
 21 [-]: TEST      R0 1         ; if R0 then PC := 35
 22 [-]: JMP       35           ; PC := 35
 23 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 24 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 25 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 26 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 27 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 35
 28 [-]: JMP       35           ; PC := 35
 29 [-]: GETUPVAL  R0 U0        ; R0 := U0
 30 [-]: CALL      R0 1 2       ; R0 := R0()
 31 [-]: TEST      R0 0         ; if not R0 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 34 [-]: RETURN    R0 2         ; return R0
 35 [-]: RETURN    R0 1         ; return 


; Function #203:
;
; Name:            
; Defined at line: 10668
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 51
  5 [-]: JMP       51           ; PC := 51
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0x03f57322
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: SETUPVAL  R1 U0        ; U82 := 
 10 [-]: GETGLOBAL R1 K2        ; R1 := 0x9ba7909f
 11 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xc12c4f71]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 14 [-]: MOVE      R3 R1        ; R3 := R1
 15 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 16 [-]: TEST      R2 1         ; if R2 then PC := 51
 17 [-]: JMP       51           ; PC := 51
 18 [-]: GETGLOBAL R2 K0        ; R2 := 0x7b998233
 19 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: TEST      R2 1         ; if R2 then PC := 51
 22 [-]: JMP       51           ; PC := 51
 23 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 24 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 51
 25 [-]: JMP       51           ; PC := 51
 26 [-]: SELF      R2 R1 K5     ; R3 := R1; R2 := R1[0x21cc0bcc]
 27 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 28 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 29 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x21cc0bcc]
 30 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 31 [-]: LE        0 R3 R2      ; if R3 > R2 then PC := 51
 32 [-]: JMP       51           ; PC := 51
 33 [-]: GETUPVAL  R2 U1        ; R2 := U1
 34 [-]: CALL      R2 1 2       ; R2 := R2()
 35 [-]: TEST      R2 1         ; if R2 then PC := 51
 36 [-]: JMP       51           ; PC := 51
 37 [-]: GETGLOBAL R2 K6        ; R2 := mWindow
 38 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mVisualMode"]
 39 [-]: GETGLOBAL R3 K6        ; R3 := mWindow
 40 [-]: GETTABLE  R3 R3 K8     ; R3 := R3["VISUAL_MODE_GAMEPLAY_FULL"]
 41 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 51
 42 [-]: JMP       51           ; PC := 51
 43 [-]: GETGLOBAL R2 K6        ; R2 := mWindow
 44 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mVisualMode"]
 45 [-]: GETGLOBAL R3 K6        ; R3 := mWindow
 46 [-]: GETTABLE  R3 R3 K9     ; R3 := R3["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 47 [-]: EQ        1 R2 R3      ; if R2 == R3 then PC := 51
 48 [-]: JMP       51           ; PC := 51
 49 [-]: GETUPVAL  R2 U2        ; R2 := U2
 50 [-]: CALL      R2 1 1       ; R2()
 51 [-]: RETURN    R0 1         ; return 


; Function #204:
;
; Name:            
; Defined at line: 10681
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x5b0290d2]
  3 [-]: LOADK     R2 K2        ; R2 := "ContextMenu"
  4 [-]: CONST     R3 11        ; R3 := 11.000000
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: TEST      R0 0         ; if not R0 then PC := 11
  7 [-]: JMP       11           ; PC := 11
  8 [-]: GETUPVAL  R0 U0        ; R0 := U0
  9 [-]: CALL      R0 1 1       ; R0()
 10 [-]: JMP       30           ; PC := 30
 11 [-]: GETGLOBAL R0 K3        ; R0 := mWindow
 12 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["mVisualMode"]
 13 [-]: GETGLOBAL R1 K3        ; R1 := mWindow
 14 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 15 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 28
 16 [-]: JMP       28           ; PC := 28
 17 [-]: GETGLOBAL R0 K3        ; R0 := mWindow
 18 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xc2b5e351]
 19 [-]: GETGLOBAL R2 K3        ; R2 := mWindow
 20 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 21 [-]: CALL      R0 3 1       ; R0(R1,R2)
 22 [-]: GETUPVAL  R0 U1        ; R0 := U1
 23 [-]: GETTABLE  R0 R0 K8     ; R82 := R0[0x659d451f]
 24 [-]: GETGLOBAL R1 K9        ; R1 := 0x0032441c
 25 [-]: GETTABLE  R1 R1 K10    ; R1 := R1["UISound_WindowClose"]
 26 [-]: CALL      R0 2 1       ; R0(R1)
 27 [-]: JMP       30           ; PC := 30
 28 [-]: GETUPVAL  R0 U2        ; R0 := U2
 29 [-]: CALL      R0 1 1       ; R0()
 30 [-]: RETURN    R0 1         ; return 


; Function #205:
;
; Name:            
; Defined at line: 10693
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisualMode"]
  3 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisualMode"]
  9 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 11 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 15
 12 [-]: JMP       15           ; PC := 15
 13 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 14 [-]: RETURN    R0 2         ; return R0
 15 [-]: RETURN    R0 1         ; return 


; Function #206:
;
; Name:            
; Defined at line: 10699
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisualMode"]
  3 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
  5 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 13
  6 [-]: JMP       13           ; PC := 13
  7 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  8 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mVisualMode"]
  9 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 11 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 20
 12 [-]: JMP       20           ; PC := 20
 13 [-]: GETGLOBAL R0 K4        ; R0 := mInputBlocked
 14 [-]: TEST      R0 1         ; if R0 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: GETUPVAL  R0 U0        ; R0 := U0
 17 [-]: CALL      R0 1 1       ; R0()
 18 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 19 [-]: RETURN    R0 2         ; return R0
 20 [-]: RETURN    R0 1         ; return 


; Function #207:
;
; Name:            
; Defined at line: 10708
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: TEST      R0 1         ; if R0 then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
  4 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x83b2653c]
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CALL      R2 3 1       ; R2(R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #208:
;
; Name:            
; Defined at line: 10714
; #Upvalues:       0
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: MOVE      R4 R2        ; R4 := R2
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 15
  5 [-]: JMP       15           ; PC := 15
  6 [-]: GETGLOBAL R3 K1        ; R3 := 0x03f57322
  7 [-]: MOVE      R4 R2        ; R4 := R2
  8 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  9 [-]: EQ        0 R3 K3      ; if R3 ~= 4.000000 then PC := 15
 10 [-]: JMP       15           ; PC := 15
 11 [-]: GETGLOBAL R3 K4        ; R3 := mWindow
 12 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x83b2653c]
 13 [-]: MOVE      R5 R0        ; R5 := R0
 14 [-]: CALL      R3 3 1       ; R3(R4,R5)
 15 [-]: RETURN    R0 1         ; return 


; Function #209:
;
; Name:            
; Defined at line: 10720
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 23
  5 [-]: JMP       23           ; PC := 23
  6 [-]: GETUPVAL  R0 U0        ; R0 := U0
  7 [-]: GETTABLE  R0 R0 K2     ; R82 := R0[0xef3e3165]
  8 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
  9 [-]: LOADK     R2 K4        ; R2 := "/Lotus/Language/Menu/SocialOverlay_Btn"
 10 [-]: GETGLOBAL R3 K3        ; R3 := 0xae91e43b
 11 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x54a95d6f]
 12 [-]: LOADK     R5 K6        ; R5 := "Window.SendMessageBar.MessageBox"
 13 [-]: CONST     R6 29        ; R6 := 29.000000
 14 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 15 [-]: CONST     R4 0         ; R4 := 0.000000
 16 [-]: LOADK     R5 K7        ; R5 := "SendMessageCallback"
 17 [-]: LOADK     R6 K8        ; R6 := "OSKSendMessageCallback"
 18 [-]: NEWTABLE  R7 0 3       ; R7 := {}
 19 [-]: SETTABLE  R7 K9 K10    ; R7["isMultiline"] := false
 20 [-]: SETTABLE  R7 K11 K10   ; R7["cancelDisabled"] := false
 21 [-]: SETTABLE  R7 K12 K13   ; R7["forChat"] := true
 22 [-]: CALL      R0 8 1       ; R0(R1,R2,R3,R4,R5,R6,R7)
 23 [-]: RETURN    R0 1         ; return 


; Function #210:
;
; Name:            
; Defined at line: 10726
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 43
  5 [-]: JMP       43           ; PC := 43
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 14 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 43
 17 [-]: JMP       43           ; PC := 43
 18 [-]: GETGLOBAL R0 K6        ; R0 := mInputBlocked
 19 [-]: TEST      R0 1         ; if R0 then PC := 41
 20 [-]: JMP       41           ; PC := 41
 21 [-]: GETGLOBAL R0 K7        ; R0 := 0x7b998233
 22 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 23 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["mInputPanel"]
 24 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 25 [-]: TEST      R0 1         ; if R0 then PC := 41
 26 [-]: JMP       41           ; PC := 41
 27 [-]: GETGLOBAL R0 K9        ; R0 := 0xae91e43b
 28 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0x5b0290d2]
 29 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 30 [-]: GETTABLE  R2 R2 K8     ; R2 := R2["mInputPanel"]
 31 [-]: GETTABLE  R2 R2 K11    ; R2 := R2["mClipPath"]
 32 [-]: CONST     R3 11        ; R3 := 11.000000
 33 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 34 [-]: TEST      R0 0         ; if not R0 then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETGLOBAL R0 K9        ; R0 := 0xae91e43b
 37 [-]: SELF      R0 R0 K12    ; R1 := R0; R0 := R0[0xe4162eed]
 38 [-]: LOADK     R2 K13       ; R2 := "SendMessageWithOSK"
 39 [-]: LOADK     R3 K14       ; R3 := ""
 40 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 41 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 42 [-]: RETURN    R0 2         ; return R0
 43 [-]: RETURN    R0 1         ; return 


; Function #211:
;
; Name:            
; Defined at line: 10736
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #212:
;
; Name:            
; Defined at line: 10744
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 28
  5 [-]: JMP       28           ; PC := 28
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 14 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 28
 17 [-]: JMP       28           ; PC := 28
 18 [-]: GETGLOBAL R0 K6        ; R0 := mInputBlocked
 19 [-]: TEST      R0 1         ; if R0 then PC := 28
 20 [-]: JMP       28           ; PC := 28
 21 [-]: GETGLOBAL R0 K7        ; R0 := 0xae91e43b
 22 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0xe4162eed]
 23 [-]: LOADK     R2 K9        ; R2 := "FilterBtnPressed"
 24 [-]: LOADK     R3 K10       ; R3 := ""
 25 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 26 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 27 [-]: RETURN    R0 2         ; return R0
 28 [-]: RETURN    R0 1         ; return 


; Function #213:
;
; Name:            
; Defined at line: 10751
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #214:
;
; Name:            
; Defined at line: 10760
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #215:
;
; Name:            
; Defined at line: 10768
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 101
  5 [-]: JMP       101          ; PC := 101
  6 [-]: GETGLOBAL R0 K2        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K3        ; R1 := 0xedd6386e
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 1         ; if R0 then PC := 101
 10 [-]: JMP       101          ; PC := 101
 11 [-]: GETGLOBAL R0 K4        ; R0 := mWindow
 12 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mVisualMode"]
 13 [-]: GETGLOBAL R1 K4        ; R1 := mWindow
 14 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 15 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 23
 16 [-]: JMP       23           ; PC := 23
 17 [-]: GETGLOBAL R0 K4        ; R0 := mWindow
 18 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mVisualMode"]
 19 [-]: GETGLOBAL R1 K4        ; R1 := mWindow
 20 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 21 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 101
 22 [-]: JMP       101          ; PC := 101
 23 [-]: GETGLOBAL R0 K8        ; R0 := mInputBlocked
 24 [-]: TEST      R0 1         ; if R0 then PC := 101
 25 [-]: JMP       101          ; PC := 101
 26 [-]: GETUPVAL  R0 U0        ; R0 := U0
 27 [-]: LOADK     R1 K9        ; R1 := "/Lotus/Language/Menu/Chat_LoadingScreenBlocked"
 28 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 29 [-]: TEST      R0 0         ; if not R0 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: RETURN    R0 1         ; return 
 32 [-]: GETGLOBAL R0 K4        ; R0 := mWindow
 33 [-]: SELF      R0 R0 K10    ; R1 := R0; R0 := R0[0x8b75da5a]
 34 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 35 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 36 [-]: MOVE      R2 R0        ; R2 := R0
 37 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 38 [-]: TEST      R1 1         ; if R1 then PC := 101
 39 [-]: JMP       101          ; PC := 101
 40 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 41 [-]: GETTABLE  R2 R0 K11    ; R2 := R0["mLineLog"]
 42 [-]: LEN       R2 R2        ; R2 := # R2
 43 [-]: CONST     R3 1         ; R3 := 1.000000
 44 [-]: CONST     R4 -1        ; R4 := -1.000000
 45 [-]: FORPREP   R2 69        ; R2 -= R4; PC := 69
 46 [-]: GETTABLE  R6 R0 K11    ; R6 := R0["mLineLog"]
 47 [-]: GETTABLE  R6 R6 R5     ; R6 := R6[R5]
 48 [-]: GETTABLE  R6 R6 K12    ; R6 := R6["hyperLinks"]
 49 [-]: LEN       R6 R6        ; R6 := # R6
 50 [-]: LT        0 K13 R6     ; if 0.000000 >= R6 then PC := 69
 51 [-]: JMP       69           ; PC := 69
 52 [-]: GETGLOBAL R6 K14       ; R6 := 0x33bdd652
 53 [-]: GETTABLE  R6 R6 K15    ; R82 := R6[0x23d5322f]
 54 [-]: MOVE      R7 R1        ; R7 := R1
 55 [-]: NEWTABLE  R8 0 2       ; R8 := {}
 56 [-]: GETTABLE  R9 R0 K11    ; R9 := R0["mLineLog"]
 57 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 58 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["text"]
 59 [-]: SETTABLE  R8 K16 R9    ; R8["Text"] := R9
 60 [-]: GETTABLE  R9 R0 K11    ; R9 := R0["mLineLog"]
 61 [-]: GETTABLE  R9 R9 R5     ; R9 := R9[R5]
 62 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["hyperLinks"]
 63 [-]: SETTABLE  R8 K18 R9    ; R8["Hyperlinks"] := R9
 64 [-]: CALL      R6 3 1       ; R6(R7,R8)
 65 [-]: LEN       R6 R1        ; R6 := # R1
 66 [-]: EQ        0 R6 K19     ; if R6 ~= 10.000000 then PC := 69
 67 [-]: JMP       69           ; PC := 69
 68 [-]: JMP       70           ; PC := 70
 69 [-]: FORLOOP   R2 46        ; R2 += R4; if R2 <= R3 then begin PC := 46; R5 := R2 end
 70 [-]: LEN       R6 R1        ; R6 := # R1
 71 [-]: LT        0 K13 R6     ; if 0.000000 >= R6 then PC := 100
 72 [-]: JMP       100          ; PC := 100
 73 [-]: GETGLOBAL R6 K20       ; R6 := 0xae91e43b
 74 [-]: SELF      R6 R6 K21    ; R7 := R6; R6 := R6[0x1fd6abd0]
 75 [-]: GETGLOBAL R8 K3        ; R8 := 0xedd6386e
 76 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 77 [-]: SETUPVAL  R6 U1        ; U82 := 
 78 [-]: GETGLOBAL R6 K22       ; R6 := _T
 79 [-]: CLOSURE   R7 0         ; R7 := closure(Function #215.1)
 80 [-]: MOVE      R0 R1        ; R0 := R1
 81 [-]: SETTABLE  R6 K23 R7    ; R6["GetMessagesWithHyperlinks"] := R7
 82 [-]: GETUPVAL  R6 U1        ; R6 := U1
 83 [-]: SELF      R6 R6 K24    ; R7 := R6; R6 := R6[0xe4162eed]
 84 [-]: LOADK     R8 K25       ; R8 := "SetElementsFunction"
 85 [-]: LOADK     R9 K23       ; R9 := "GetMessagesWithHyperlinks"
 86 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 87 [-]: GETGLOBAL R6 K22       ; R6 := _T
 88 [-]: CLOSURE   R7 1         ; R7 := closure(Function #215.2)
 89 [-]: GETUPVAL  R0 U2        ; R0 := U2
 90 [-]: GETUPVAL  R0 U3        ; R0 := U3
 91 [-]: SETTABLE  R6 K26 R7    ; R6["OnHyperlinkSelectionClosed"] := R7
 92 [-]: GETUPVAL  R6 U1        ; R6 := U1
 93 [-]: SELF      R6 R6 K24    ; R7 := R6; R6 := R6[0xe4162eed]
 94 [-]: LOADK     R8 K27       ; R8 := "SetOnCloseFunction"
 95 [-]: LOADK     R9 K26       ; R9 := "OnHyperlinkSelectionClosed"
 96 [-]: CALL      R6 4 1       ; R6(R7,R8,R9)
 97 [-]: GETUPVAL  R6 U3        ; R6 := U3
 98 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 99 [-]: CALL      R6 2 1       ; R6(R7)
100 [-]: CLOSE     R1           ; SAVE R1,...
101 [-]: RETURN    R0 1         ; return 


; Function #215.1:
;
; Name:            
; Defined at line: 10797
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: RETURN    R0 2         ; return R0
  3 [-]: RETURN    R0 1         ; return 


; Function #215.2:
;
; Name:            
; Defined at line: 10802
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["GetMessagesWithHyperlinks"] := nil
  3 [-]: GETGLOBAL R0 K0        ; R0 := _T
  4 [-]: SETTABLE  R0 K3 K2     ; R0["OnHyperlinkSelectionClosed"] := nil
  5 [-]: GETGLOBAL R0 K4        ; R0 := 0x7b998233
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  8 [-]: TEST      R0 0         ; if not R0 then PC := 13
  9 [-]: JMP       13           ; PC := 13
 10 [-]: GETUPVAL  R0 U1        ; R0 := U1
 11 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 12 [-]: CALL      R0 2 1       ; R0(R1)
 13 [-]: RETURN    R0 1         ; return 


; Function #216:
;
; Name:            
; Defined at line: 10819
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #217:
;
; Name:            
; Defined at line: 10827
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 47
  5 [-]: JMP       47           ; PC := 47
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 14 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 47
 17 [-]: JMP       47           ; PC := 47
 18 [-]: GETGLOBAL R0 K6        ; R0 := mInputBlocked
 19 [-]: TEST      R0 1         ; if R0 then PC := 47
 20 [-]: JMP       47           ; PC := 47
 21 [-]: GETGLOBAL R0 K7        ; R0 := 0xae91e43b
 22 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0x5b0290d2]
 23 [-]: LOADK     R2 K9        ; R2 := "ContextMenu"
 24 [-]: CONST     R3 59        ; R3 := 59.000000
 25 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 26 [-]: TEST      R0 1         ; if R0 then PC := 47
 27 [-]: JMP       47           ; PC := 47
 28 [-]: GETGLOBAL R0 K10       ; R0 := 0x7b998233
 29 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 30 [-]: GETTABLE  R1 R1 K11    ; R1 := R1["mUserPanel"]
 31 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 32 [-]: TEST      R0 1         ; if R0 then PC := 47
 33 [-]: JMP       47           ; PC := 47
 34 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 35 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["mUserPanel"]
 36 [-]: GETTABLE  R0 R0 K12    ; R0 := R0["mIsExpanded"]
 37 [-]: TEST      R0 0         ; if not R0 then PC := 47
 38 [-]: JMP       47           ; PC := 47
 39 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 40 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["mUserPanel"]
 41 [-]: GETTABLE  R0 R0 K13    ; R0 := R0["mListControl"]
 42 [-]: GETTABLE  R0 R0 K14    ; R0 := R0["mIsVisible"]
 43 [-]: TEST      R0 0         ; if not R0 then PC := 47
 44 [-]: JMP       47           ; PC := 47
 45 [-]: GETUPVAL  R0 U0        ; R0 := U0
 46 [-]: CALL      R0 1 1       ; R0()
 47 [-]: RETURN    R0 1         ; return 


; Function #218:
;
; Name:            
; Defined at line: 10836
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 27
  5 [-]: JMP       27           ; PC := 27
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 14 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 27
 17 [-]: JMP       27           ; PC := 27
 18 [-]: GETGLOBAL R0 K6        ; R0 := mInputBlocked
 19 [-]: TEST      R0 1         ; if R0 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["DECREMENT"]
 24 [-]: CALL      R0 2 1       ; R0(R1)
 25 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 26 [-]: RETURN    R0 2         ; return R0
 27 [-]: RETURN    R0 1         ; return 


; Function #219:
;
; Name:            
; Defined at line: 10845
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 27
  5 [-]: JMP       27           ; PC := 27
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 14 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 27
 17 [-]: JMP       27           ; PC := 27
 18 [-]: GETGLOBAL R0 K6        ; R0 := mInputBlocked
 19 [-]: TEST      R0 1         ; if R0 then PC := 25
 20 [-]: JMP       25           ; PC := 25
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: GETUPVAL  R1 U1        ; R1 := U1
 23 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["INCREMENT"]
 24 [-]: CALL      R0 2 1       ; R0(R1)
 25 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 26 [-]: RETURN    R0 2         ; return R0
 27 [-]: RETURN    R0 1         ; return 


; Function #220:
;
; Name:            
; Defined at line: 10854
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 14
 11 [-]: JMP       14           ; PC := 14
 12 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
 13 [-]: RETURN    R0 2         ; return R0
 14 [-]: RETURN    R0 1         ; return 


; Function #221:
;
; Name:            
; Defined at line: 10862
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 0         ; if not R0 then PC := 66
  5 [-]: JMP       66           ; PC := 66
  6 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
  8 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K4     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 10 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 18
 11 [-]: JMP       18           ; PC := 18
 12 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mVisualMode"]
 14 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 15 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 16 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 66
 17 [-]: JMP       66           ; PC := 66
 18 [-]: GETGLOBAL R0 K6        ; R0 := mInputBlocked
 19 [-]: TEST      R0 1         ; if R0 then PC := 66
 20 [-]: JMP       66           ; PC := 66
 21 [-]: GETGLOBAL R0 K7        ; R0 := 0xae91e43b
 22 [-]: SELF      R0 R0 K8     ; R1 := R0; R0 := R0[0x5b0290d2]
 23 [-]: LOADK     R2 K9        ; R2 := "ContextMenu"
 24 [-]: CONST     R3 59        ; R3 := 59.000000
 25 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 26 [-]: TEST      R0 1         ; if R0 then PC := 66
 27 [-]: JMP       66           ; PC := 66
 28 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 29 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["mUserPanel"]
 30 [-]: GETTABLE  R0 R0 K11    ; R0 := R0["mEmoteGrid"]
 31 [-]: GETTABLE  R0 R0 K12    ; R0 := R0["mIsVisible"]
 32 [-]: TEST      R0 0         ; if not R0 then PC := 40
 33 [-]: JMP       40           ; PC := 40
 34 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 35 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["mUserPanel"]
 36 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0xcaccf524]
 37 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 38 [-]: CALL      R0 3 1       ; R0(R1,R2)
 39 [-]: JMP       57           ; PC := 57
 40 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 41 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["mUserPanel"]
 42 [-]: GETTABLE  R0 R0 K14    ; R0 := R0["mListControl"]
 43 [-]: GETTABLE  R0 R0 K12    ; R0 := R0["mIsVisible"]
 44 [-]: TEST      R0 0         ; if not R0 then PC := 52
 45 [-]: JMP       52           ; PC := 52
 46 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 47 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["mUserPanel"]
 48 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0xcaccf524]
 49 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 50 [-]: CALL      R0 3 1       ; R0(R1,R2)
 51 [-]: JMP       57           ; PC := 57
 52 [-]: GETGLOBAL R0 K2        ; R0 := mWindow
 53 [-]: GETTABLE  R0 R0 K10    ; R0 := R0["mUserPanel"]
 54 [-]: SELF      R0 R0 K13    ; R1 := R0; R0 := R0[0xcaccf524]
 55 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 56 [-]: CALL      R0 3 1       ; R0(R1,R2)
 57 [-]: GETUPVAL  R0 U0        ; R0 := U0
 58 [-]: GETTABLE  R0 R0 K15    ; R82 := R0[0xf76783e5]
 59 [-]: GETGLOBAL R1 K7        ; R1 := 0xae91e43b
 60 [-]: LOADK     R2 K16       ; R2 := "Window.SendMessageBar.EmojiBtn.Callout"
 61 [-]: GETGLOBAL R3 K17       ; R3 := 0x0032441c
 62 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["UIFx_ConsolePress"]
 63 [-]: CONST     R4 0         ; R4 := 0.000000
 64 [-]: CONST     R5 0         ; R5 := 0.000000
 65 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 66 [-]: RETURN    R0 1         ; return 


; Function #222:
;
; Name:            
; Defined at line: 10879
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 100
  5 [-]: JMP       100          ; PC := 100
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserPanel"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 100
 11 [-]: JMP       100          ; PC := 100
 12 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mUserPanel"]
 14 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mIsExpanded"]
 15 [-]: TEST      R0 0         ; if not R0 then PC := 100
 16 [-]: JMP       100          ; PC := 100
 17 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 18 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["mVisualMode"]
 19 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 20 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["VISUAL_MODE_MENU_FULL"]
 21 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 29
 22 [-]: JMP       29           ; PC := 29
 23 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 24 [-]: GETTABLE  R0 R0 K4     ; R0 := R0["mVisualMode"]
 25 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 26 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["VISUAL_MODE_GAMEPLAY_FULL"]
 27 [-]: EQ        0 R0 R1      ; if R0 ~= R1 then PC := 100
 28 [-]: JMP       100          ; PC := 100
 29 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 30 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["mWindow"]
 31 [-]: GETTABLE  R0 R0 K7     ; R0 := R0["x"]
 32 [-]: GETGLOBAL R1 K8        ; R1 := 0xae91e43b
 33 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x91a24e4b]
 34 [-]: LOADK     R3 K10       ; R3 := "Window.UserPanel"
 35 [-]: CONST     R4 0         ; R4 := 0.000000
 36 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 37 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
 38 [-]: GETGLOBAL R1 K8        ; R1 := 0xae91e43b
 39 [-]: SELF      R1 R1 K9     ; R2 := R1; R1 := R1[0x91a24e4b]
 40 [-]: LOADK     R3 K11       ; R3 := "Window.UserPanel.Panel"
 41 [-]: CONST     R4 0         ; R4 := 0.000000
 42 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 43 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
 44 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 45 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mWindow"]
 46 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["y"]
 47 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 48 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x91a24e4b]
 49 [-]: LOADK     R4 K10       ; R4 := "Window.UserPanel"
 50 [-]: CONST     R5 1         ; R5 := 1.000000
 51 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 52 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 53 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 54 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x91a24e4b]
 55 [-]: LOADK     R4 K11       ; R4 := "Window.UserPanel.Panel"
 56 [-]: CONST     R5 1         ; R5 := 1.000000
 57 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 58 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 59 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 60 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x91a24e4b]
 61 [-]: LOADK     R4 K11       ; R4 := "Window.UserPanel.Panel"
 62 [-]: CONST     R5 12        ; R5 := 12.000000
 63 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 64 [-]: GETGLOBAL R3 K8        ; R3 := 0xae91e43b
 65 [-]: SELF      R3 R3 K9     ; R4 := R3; R3 := R3[0x91a24e4b]
 66 [-]: LOADK     R5 K11       ; R5 := "Window.UserPanel.Panel"
 67 [-]: CONST     R6 13        ; R6 := 13.000000
 68 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 69 [-]: GETGLOBAL R4 K8        ; R4 := 0xae91e43b
 70 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0x91a24e4b]
 71 [-]: LOADK     R6 K13       ; R6 := "_root"
 72 [-]: CONST     R7 25        ; R7 := 25.000000
 73 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 74 [-]: GETGLOBAL R5 K8        ; R5 := 0xae91e43b
 75 [-]: SELF      R5 R5 K9     ; R6 := R5; R5 := R5[0x91a24e4b]
 76 [-]: LOADK     R7 K13       ; R7 := "_root"
 77 [-]: CONST     R8 26        ; R8 := 26.000000
 78 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 79 [-]: GETGLOBAL R6 K14       ; R6 := 0x34291f5c
 80 [-]: GETTABLE  R6 R6 K15    ; R82 := R6[0xe6b41adb]
 81 [-]: CALL      R6 1 2       ; R6 := R6()
 82 [-]: TEST      R6 0         ; if not R6 then PC := 88
 83 [-]: JMP       88           ; PC := 88
 84 [-]: GETGLOBAL R6 K16       ; R6 := miOSChatScale
 85 [-]: MUL       R2 R2 R6     ; R2 := R2 * R6
 86 [-]: GETGLOBAL R6 K16       ; R6 := miOSChatScale
 87 [-]: MUL       R3 R3 R6     ; R3 := R3 * R6
 88 [-]: LE        0 R0 R4      ; if R0 > R4 then PC := 100
 89 [-]: JMP       100          ; PC := 100
 90 [-]: ADD       R6 R0 R2     ; R6 := R0 + R2
 91 [-]: LE        0 R4 R6      ; if R4 > R6 then PC := 100
 92 [-]: JMP       100          ; PC := 100
 93 [-]: LE        0 R1 R5      ; if R1 > R5 then PC := 100
 94 [-]: JMP       100          ; PC := 100
 95 [-]: ADD       R6 R1 R3     ; R6 := R1 + R3
 96 [-]: LE        0 R5 R6      ; if R5 > R6 then PC := 100
 97 [-]: JMP       100          ; PC := 100
 98 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 99 [-]: RETURN    R6 2         ; return R6
100 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
101 [-]: RETURN    R6 2         ; return R6
102 [-]: RETURN    R0 1         ; return 


; Function #223:
;
; Name:            
; Defined at line: 10905
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 119
  5 [-]: JMP       119          ; PC := 119
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: TEST      R1 1         ; if R1 then PC := 119
 10 [-]: JMP       119          ; PC := 119
 11 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 12 [-]: GETTABLE  R2 R0 K2     ; R2 := R0["mClipName"]
 13 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 14 [-]: TEST      R1 1         ; if R1 then PC := 119
 15 [-]: JMP       119          ; PC := 119
 16 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 17 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mWindow"]
 18 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["x"]
 19 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 20 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x91a24e4b]
 21 [-]: LOADK     R4 K6        ; R4 := "Window.UserPanel"
 22 [-]: CONST     R5 0         ; R5 := 0.000000
 23 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 24 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 25 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 26 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x91a24e4b]
 27 [-]: LOADK     R4 K7        ; R4 := "Window.UserPanel.Panel"
 28 [-]: CONST     R5 0         ; R5 := 0.000000
 29 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 30 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 31 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 32 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x91a24e4b]
 33 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 34 [-]: CONST     R5 0         ; R5 := 0.000000
 35 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 36 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 37 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 38 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x91a24e4b]
 39 [-]: GETTABLE  R4 R0 K2     ; R4 := R0["mClipName"]
 40 [-]: LOADK     R5 K8        ; R5 := ".Btn"
 41 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
 42 [-]: CONST     R5 0         ; R5 := 0.000000
 43 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 44 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 45 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 46 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mWindow"]
 47 [-]: GETTABLE  R2 R2 K9     ; R2 := R2["y"]
 48 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 49 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x91a24e4b]
 50 [-]: LOADK     R5 K6        ; R5 := "Window.UserPanel"
 51 [-]: CONST     R6 1         ; R6 := 1.000000
 52 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 53 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 54 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 55 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x91a24e4b]
 56 [-]: LOADK     R5 K7        ; R5 := "Window.UserPanel.Panel"
 57 [-]: CONST     R6 1         ; R6 := 1.000000
 58 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 59 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 60 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 61 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x91a24e4b]
 62 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
 63 [-]: CONST     R6 1         ; R6 := 1.000000
 64 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 65 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 66 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 67 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x91a24e4b]
 68 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
 69 [-]: LOADK     R6 K8        ; R6 := ".Btn"
 70 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 71 [-]: CONST     R6 1         ; R6 := 1.000000
 72 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 73 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 74 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 75 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x91a24e4b]
 76 [-]: GETTABLE  R5 R0 K2     ; R5 := R0["mClipName"]
 77 [-]: LOADK     R6 K8        ; R6 := ".Btn"
 78 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 79 [-]: CONST     R6 12        ; R6 := 12.000000
 80 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 81 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 82 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x91a24e4b]
 83 [-]: GETTABLE  R6 R0 K2     ; R6 := R0["mClipName"]
 84 [-]: LOADK     R7 K8        ; R7 := ".Btn"
 85 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 86 [-]: CONST     R7 13        ; R7 := 13.000000
 87 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 88 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 89 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x91a24e4b]
 90 [-]: LOADK     R7 K10       ; R7 := "_root"
 91 [-]: CONST     R8 25        ; R8 := 25.000000
 92 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 93 [-]: GETGLOBAL R6 K4        ; R6 := 0xae91e43b
 94 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0x91a24e4b]
 95 [-]: LOADK     R8 K10       ; R8 := "_root"
 96 [-]: CONST     R9 26        ; R9 := 26.000000
 97 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 98 [-]: GETGLOBAL R7 K11       ; R7 := 0x34291f5c
 99 [-]: GETTABLE  R7 R7 K12    ; R82 := R7[0xe6b41adb]
100 [-]: CALL      R7 1 2       ; R7 := R7()
101 [-]: TEST      R7 0         ; if not R7 then PC := 107
102 [-]: JMP       107          ; PC := 107
103 [-]: GETGLOBAL R7 K13       ; R7 := miOSChatScale
104 [-]: MUL       R3 R3 R7     ; R3 := R3 * R7
105 [-]: GETGLOBAL R7 K13       ; R7 := miOSChatScale
106 [-]: MUL       R4 R4 R7     ; R4 := R4 * R7
107 [-]: LE        0 R1 R5      ; if R1 > R5 then PC := 119
108 [-]: JMP       119          ; PC := 119
109 [-]: ADD       R7 R1 R3     ; R7 := R1 + R3
110 [-]: LE        0 R5 R7      ; if R5 > R7 then PC := 119
111 [-]: JMP       119          ; PC := 119
112 [-]: LE        0 R2 R6      ; if R2 > R6 then PC := 119
113 [-]: JMP       119          ; PC := 119
114 [-]: ADD       R7 R2 R4     ; R7 := R2 + R4
115 [-]: LE        0 R6 R7      ; if R6 > R7 then PC := 119
116 [-]: JMP       119          ; PC := 119
117 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
118 [-]: RETURN    R7 2         ; return R7
119 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
120 [-]: RETURN    R7 2         ; return R7
121 [-]: RETURN    R0 1         ; return 


; Function #224:
;
; Name:            
; Defined at line: 10931
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: OP_LOADBOOL R0 0 0       ; R0 := false
  2 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  3 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  4 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  5 [-]: TEST      R1 1         ; if R1 then PC := 115
  6 [-]: JMP       115          ; PC := 115
  7 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mVisualMode"]
  9 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 10 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["VISUAL_MODE_MENU_FULL"]
 11 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 19
 12 [-]: JMP       19           ; PC := 19
 13 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 14 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mVisualMode"]
 15 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 16 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
 17 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 115
 18 [-]: JMP       115          ; PC := 115
 19 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 20 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 21 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mUserPanel"]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: TEST      R1 1         ; if R1 then PC := 115
 24 [-]: JMP       115          ; PC := 115
 25 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 26 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 27 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["mUserPanel"]
 28 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mUserLocator"]
 29 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 30 [-]: TEST      R1 1         ; if R1 then PC := 115
 31 [-]: JMP       115          ; PC := 115
 32 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 33 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mUserPanel"]
 34 [-]: GETTABLE  R1 R1 K6     ; R1 := R1["mUserLocator"]
 35 [-]: GETTABLE  R1 R1 K7     ; R1 := R1["mIsExpanded"]
 36 [-]: TEST      R1 0         ; if not R1 then PC := 115
 37 [-]: JMP       115          ; PC := 115
 38 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 39 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mWindow"]
 40 [-]: GETTABLE  R1 R1 K8     ; R1 := R1["x"]
 41 [-]: GETGLOBAL R2 K9        ; R2 := 0xae91e43b
 42 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x91a24e4b]
 43 [-]: LOADK     R4 K11       ; R4 := "Window.UserPanel"
 44 [-]: CONST     R5 0         ; R5 := 0.000000
 45 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 46 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 47 [-]: GETGLOBAL R2 K9        ; R2 := 0xae91e43b
 48 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x91a24e4b]
 49 [-]: LOADK     R4 K12       ; R4 := "Window.UserPanel.AlphabetIndex"
 50 [-]: CONST     R5 0         ; R5 := 0.000000
 51 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 52 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 53 [-]: GETGLOBAL R2 K9        ; R2 := 0xae91e43b
 54 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x91a24e4b]
 55 [-]: LOADK     R4 K13       ; R4 := "Window.UserPanel.AlphabetIndex.Grid"
 56 [-]: CONST     R5 0         ; R5 := 0.000000
 57 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 58 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 59 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 60 [-]: GETTABLE  R2 R2 K1     ; R2 := R2["mWindow"]
 61 [-]: GETTABLE  R2 R2 K14    ; R2 := R2["y"]
 62 [-]: GETGLOBAL R3 K9        ; R3 := 0xae91e43b
 63 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x91a24e4b]
 64 [-]: LOADK     R5 K11       ; R5 := "Window.UserPanel"
 65 [-]: CONST     R6 1         ; R6 := 1.000000
 66 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 67 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 68 [-]: GETGLOBAL R3 K9        ; R3 := 0xae91e43b
 69 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x91a24e4b]
 70 [-]: LOADK     R5 K12       ; R5 := "Window.UserPanel.AlphabetIndex"
 71 [-]: CONST     R6 1         ; R6 := 1.000000
 72 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 73 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 74 [-]: GETGLOBAL R3 K9        ; R3 := 0xae91e43b
 75 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0x91a24e4b]
 76 [-]: LOADK     R5 K12       ; R5 := "Window.UserPanel.AlphabetIndex"
 77 [-]: CONST     R6 12        ; R6 := 12.000000
 78 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 79 [-]: GETGLOBAL R4 K9        ; R4 := 0xae91e43b
 80 [-]: SELF      R4 R4 K10    ; R5 := R4; R4 := R4[0x91a24e4b]
 81 [-]: LOADK     R6 K12       ; R6 := "Window.UserPanel.AlphabetIndex"
 82 [-]: CONST     R7 13        ; R7 := 13.000000
 83 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 84 [-]: GETGLOBAL R5 K9        ; R5 := 0xae91e43b
 85 [-]: SELF      R5 R5 K10    ; R6 := R5; R5 := R5[0x91a24e4b]
 86 [-]: LOADK     R7 K15       ; R7 := "_root"
 87 [-]: CONST     R8 25        ; R8 := 25.000000
 88 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 89 [-]: GETGLOBAL R6 K9        ; R6 := 0xae91e43b
 90 [-]: SELF      R6 R6 K10    ; R7 := R6; R6 := R6[0x91a24e4b]
 91 [-]: LOADK     R8 K15       ; R8 := "_root"
 92 [-]: CONST     R9 26        ; R9 := 26.000000
 93 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 94 [-]: GETGLOBAL R7 K16       ; R7 := 0x34291f5c
 95 [-]: GETTABLE  R7 R7 K17    ; R82 := R7[0xe6b41adb]
 96 [-]: CALL      R7 1 2       ; R7 := R7()
 97 [-]: TEST      R7 0         ; if not R7 then PC := 103
 98 [-]: JMP       103          ; PC := 103
 99 [-]: GETGLOBAL R7 K18       ; R7 := miOSChatScale
100 [-]: MUL       R3 R3 R7     ; R3 := R3 * R7
101 [-]: GETGLOBAL R7 K18       ; R7 := miOSChatScale
102 [-]: MUL       R4 R4 R7     ; R4 := R4 * R7
103 [-]: LE        0 R1 R5      ; if R1 > R5 then PC := 115
104 [-]: JMP       115          ; PC := 115
105 [-]: ADD       R7 R1 R3     ; R7 := R1 + R3
106 [-]: LE        0 R5 R7      ; if R5 > R7 then PC := 115
107 [-]: JMP       115          ; PC := 115
108 [-]: LE        0 R2 R6      ; if R2 > R6 then PC := 115
109 [-]: JMP       115          ; PC := 115
110 [-]: ADD       R7 R2 R4     ; R7 := R2 + R4
111 [-]: LE        0 R6 R7      ; if R6 > R7 then PC := 115
112 [-]: JMP       115          ; PC := 115
113 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
114 [-]: RETURN    R7 2         ; return R7
115 [-]: RETURN    R0 2         ; return R0
116 [-]: RETURN    R0 1         ; return 


; Function #225:
;
; Name:            
; Defined at line: 10961
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mContextMenu
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 65
  5 [-]: JMP       65           ; PC := 65
  6 [-]: GETGLOBAL R0 K1        ; R0 := mContextMenu
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x5fbddc1a]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: LT        0 K3 R0      ; if 0.000000 >= R0 then PC := 65
 10 [-]: JMP       65           ; PC := 65
 11 [-]: GETGLOBAL R0 K4        ; R0 := 0xae91e43b
 12 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x91a24e4b]
 13 [-]: LOADK     R2 K6        ; R2 := "ContextMenu"
 14 [-]: CONST     R3 0         ; R3 := 0.000000
 15 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
 16 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 17 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x91a24e4b]
 18 [-]: LOADK     R3 K7        ; R3 := "ContextMenu.Bg"
 19 [-]: CONST     R4 0         ; R4 := 0.000000
 20 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 21 [-]: ADD       R0 R0 R1     ; R0 := R0 + R1
 22 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
 23 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x91a24e4b]
 24 [-]: LOADK     R3 K6        ; R3 := "ContextMenu"
 25 [-]: CONST     R4 1         ; R4 := 1.000000
 26 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 27 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 28 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x91a24e4b]
 29 [-]: LOADK     R4 K7        ; R4 := "ContextMenu.Bg"
 30 [-]: CONST     R5 1         ; R5 := 1.000000
 31 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 32 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 33 [-]: GETGLOBAL R2 K4        ; R2 := 0xae91e43b
 34 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0x91a24e4b]
 35 [-]: LOADK     R4 K7        ; R4 := "ContextMenu.Bg"
 36 [-]: CONST     R5 12        ; R5 := 12.000000
 37 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 38 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 39 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x91a24e4b]
 40 [-]: LOADK     R5 K7        ; R5 := "ContextMenu.Bg"
 41 [-]: CONST     R6 13        ; R6 := 13.000000
 42 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 43 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 44 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x91a24e4b]
 45 [-]: LOADK     R6 K8        ; R6 := "_root"
 46 [-]: CONST     R7 25        ; R7 := 25.000000
 47 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 48 [-]: GETGLOBAL R5 K4        ; R5 := 0xae91e43b
 49 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x91a24e4b]
 50 [-]: LOADK     R7 K8        ; R7 := "_root"
 51 [-]: CONST     R8 26        ; R8 := 26.000000
 52 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 53 [-]: LE        0 R0 R4      ; if R0 > R4 then PC := 65
 54 [-]: JMP       65           ; PC := 65
 55 [-]: ADD       R6 R0 R2     ; R6 := R0 + R2
 56 [-]: LE        0 R4 R6      ; if R4 > R6 then PC := 65
 57 [-]: JMP       65           ; PC := 65
 58 [-]: LE        0 R1 R5      ; if R1 > R5 then PC := 65
 59 [-]: JMP       65           ; PC := 65
 60 [-]: ADD       R6 R1 R3     ; R6 := R1 + R3
 61 [-]: LE        0 R5 R6      ; if R5 > R6 then PC := 65
 62 [-]: JMP       65           ; PC := 65
 63 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 64 [-]: RETURN    R6 2         ; return R6
 65 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 66 [-]: RETURN    R6 2         ; return R6
 67 [-]: RETURN    R0 1         ; return 


; Function #226:
;
; Name:            
; Defined at line: 10981
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  12

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x91a24e4b]
  3 [-]: LOADK     R2 K2        ; R2 := "_root"
  4 [-]: CONST     R3 25        ; R3 := 25.000000
  5 [-]: CALL      R0 4 2       ; R0 := R0(R1,R2,R3)
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
  7 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x91a24e4b]
  8 [-]: LOADK     R3 K2        ; R3 := "_root"
  9 [-]: CONST     R4 26        ; R4 := 26.000000
 10 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 11 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 12 [-]: GETGLOBAL R3 K3        ; R3 := mWindow
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["mVisualMode"]
 14 [-]: GETGLOBAL R4 K3        ; R4 := mWindow
 15 [-]: GETTABLE  R4 R4 K5     ; R4 := R4["VISUAL_MODE_MENU_SIMPLE"]
 16 [-]: EQ        0 R3 R4      ; if R3 ~= R4 then PC := 78
 17 [-]: JMP       78           ; PC := 78
 18 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 19 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0xa7ec3e8a]
 20 [-]: LOADK     R5 K7        ; R5 := "Window.TabMenu"
 21 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 22 [-]: TEST      R3 1         ; if R3 then PC := 26
 23 [-]: JMP       26           ; PC := 26
 24 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
 25 [-]: RETURN    R3 2         ; return R3
 26 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 27 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x91a24e4b]
 28 [-]: LOADK     R5 K7        ; R5 := "Window.TabMenu"
 29 [-]: CONST     R6 0         ; R6 := 0.000000
 30 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 31 [-]: ADD       R3 R3 K8     ; R3 := R3 + 23.000000
 32 [-]: GETGLOBAL R4 K0        ; R4 := 0xae91e43b
 33 [-]: SELF      R4 R4 K1     ; R5 := R4; R4 := R4[0x91a24e4b]
 34 [-]: LOADK     R6 K7        ; R6 := "Window.TabMenu"
 35 [-]: CONST     R7 1         ; R7 := 1.000000
 36 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 37 [-]: ADD       R4 R4 K9     ; R4 := R4 + 3.000000
 38 [-]: GETGLOBAL R5 K0        ; R5 := 0xae91e43b
 39 [-]: SELF      R5 R5 K1     ; R6 := R5; R5 := R5[0x91a24e4b]
 40 [-]: LOADK     R7 K10       ; R7 := "Window.TabMenu.WindowTitle.Fill"
 41 [-]: CONST     R8 12        ; R8 := 12.000000
 42 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 43 [-]: GETGLOBAL R6 K0        ; R6 := 0xae91e43b
 44 [-]: SELF      R6 R6 K1     ; R7 := R6; R6 := R6[0x91a24e4b]
 45 [-]: LOADK     R8 K10       ; R8 := "Window.TabMenu.WindowTitle.Fill"
 46 [-]: CONST     R9 13        ; R9 := 13.000000
 47 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 48 [-]: SUB       R6 R6 K11    ; R6 := R6 - 5.000000
 49 [-]: GETGLOBAL R7 K3        ; R7 := mWindow
 50 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["mWindow"]
 51 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["x"]
 52 [-]: ADD       R7 R7 R3     ; R7 := R7 + R3
 53 [-]: LE        0 R7 R0      ; if R7 > R0 then PC := 75
 54 [-]: JMP       75           ; PC := 75
 55 [-]: GETGLOBAL R7 K3        ; R7 := mWindow
 56 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["mWindow"]
 57 [-]: GETTABLE  R7 R7 K12    ; R7 := R7["x"]
 58 [-]: ADD       R7 R7 R3     ; R7 := R7 + R3
 59 [-]: ADD       R7 R7 R5     ; R7 := R7 + R5
 60 [-]: LE        0 R0 R7      ; if R0 > R7 then PC := 75
 61 [-]: JMP       75           ; PC := 75
 62 [-]: GETGLOBAL R7 K3        ; R7 := mWindow
 63 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["mWindow"]
 64 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["y"]
 65 [-]: ADD       R7 R7 R4     ; R7 := R7 + R4
 66 [-]: LE        0 R7 R1      ; if R7 > R1 then PC := 75
 67 [-]: JMP       75           ; PC := 75
 68 [-]: GETGLOBAL R7 K3        ; R7 := mWindow
 69 [-]: GETTABLE  R7 R7 K3     ; R7 := R7["mWindow"]
 70 [-]: GETTABLE  R7 R7 K13    ; R7 := R7["y"]
 71 [-]: ADD       R7 R7 R4     ; R7 := R7 + R4
 72 [-]: ADD       R7 R7 R6     ; R7 := R7 + R6
 73 [-]: LE        1 R1 R7      ; if R1 <= R7 then PC := 76
 74 [-]: JMP       76           ; PC := 76
 75 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 76
 76 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 77 [-]: JMP       145          ; PC := 145
 78 [-]: GETUPVAL  R7 U0        ; R7 := U0
 79 [-]: GETTABLE  R7 R7 K14    ; R82 := R7[0x06d055f9]
 80 [-]: GETGLOBAL R8 K3        ; R8 := mWindow
 81 [-]: GETTABLE  R8 R8 K15    ; R8 := R8["mUserPanel"]
 82 [-]: GETTABLE  R8 R8 K16    ; R8 := R8["mIsExpanded"]
 83 [-]: GETGLOBAL R9 K3        ; R9 := mWindow
 84 [-]: GETTABLE  R9 R9 K15    ; R9 := R9["mUserPanel"]
 85 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["mWindow"]
 86 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["width"]
 87 [-]: CONST     R10 0        ; R10 := 0.000000
 88 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 89 [-]: GETGLOBAL R8 K18       ; R8 := 0x34291f5c
 90 [-]: GETTABLE  R8 R8 K19    ; R82 := R8[0xe6b41adb]
 91 [-]: CALL      R8 1 2       ; R8 := R8()
 92 [-]: TEST      R8 0         ; if not R8 then PC := 96
 93 [-]: JMP       96           ; PC := 96
 94 [-]: GETGLOBAL R8 K20       ; R8 := miOSChatScale
 95 [-]: MUL       R7 R7 R8     ; R7 := R7 * R8
 96 [-]: GETGLOBAL R8 K3        ; R8 := mWindow
 97 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["mWindow"]
 98 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["x"]
 99 [-]: LE        0 R8 R0      ; if R8 > R0 then PC := 126
100 [-]: JMP       126          ; PC := 126
101 [-]: GETGLOBAL R8 K3        ; R8 := mWindow
102 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["mWindow"]
103 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["x"]
104 [-]: GETGLOBAL R9 K3        ; R9 := mWindow
105 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["mWindow"]
106 [-]: GETTABLE  R9 R9 K17    ; R9 := R9["width"]
107 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
108 [-]: ADD       R8 R8 R7     ; R8 := R8 + R7
109 [-]: LE        0 R0 R8      ; if R0 > R8 then PC := 126
110 [-]: JMP       126          ; PC := 126
111 [-]: GETGLOBAL R8 K3        ; R8 := mWindow
112 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["mWindow"]
113 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["y"]
114 [-]: LE        0 R8 R1      ; if R8 > R1 then PC := 126
115 [-]: JMP       126          ; PC := 126
116 [-]: GETGLOBAL R8 K3        ; R8 := mWindow
117 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["mWindow"]
118 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["y"]
119 [-]: GETGLOBAL R9 K3        ; R9 := mWindow
120 [-]: GETTABLE  R9 R9 K3     ; R9 := R9["mWindow"]
121 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["height"]
122 [-]: ADD       R8 R8 R9     ; R8 := R8 + R9
123 [-]: ADD       R8 R8 K22    ; R8 := R8 + 35.000000
124 [-]: LE        1 R1 R8      ; if R1 <= R8 then PC := 127
125 [-]: JMP       127          ; PC := 127
126 [-]: OP_LOADBOOL R2 0 1       ; R2 := false; PC := 127
127 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
128 [-]: TEST      R2 1         ; if R2 then PC := 133
129 [-]: JMP       133          ; PC := 133
130 [-]: GETUPVAL  R8 U1        ; R8 := U1
131 [-]: CALL      R8 1 2       ; R8 := R8()
132 [-]: MOVE      R2 R8        ; R2 := R8
133 [-]: GETGLOBAL R8 K0        ; R8 := 0xae91e43b
134 [-]: SELF      R8 R8 K23    ; R9 := R8; R8 := R8[0x5b0290d2]
135 [-]: LOADK     R10 K24      ; R10 := "ContextMenu"
136 [-]: CONST     R11 59       ; R11 := 59.000000
137 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
138 [-]: TEST      R8 0         ; if not R8 then PC := 145
139 [-]: JMP       145          ; PC := 145
140 [-]: TEST      R2 1         ; if R2 then PC := 145
141 [-]: JMP       145          ; PC := 145
142 [-]: GETUPVAL  R8 U2        ; R8 := U2
143 [-]: CALL      R8 1 2       ; R8 := R8()
144 [-]: MOVE      R2 R8        ; R2 := R8
145 [-]: RETURN    R2 2         ; return R2
146 [-]: RETURN    R0 1         ; return 


; Function #227:
;
; Name:            
; Defined at line: 11016
; #Upvalues:       18
; #Parameters:     4
; Is_vararg:       0
; Max Stack Size:  19

  1 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
  2 [-]: LOADK     R5 K0        ; R5 := "EN_GAMEPAD_BUTTON_BOTTOM"
  3 [-]: GETGLOBAL R6 K1        ; R6 := 0x34291f5c
  4 [-]: GETTABLE  R6 R6 K2     ; R82 := R6[0xc84fa15a]
  5 [-]: CALL      R6 1 2       ; R6 := R6()
  6 [-]: TEST      R6 0         ; if not R6 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: LOADK     R5 K3        ; R5 := "EN_GAMEPAD_BUTTON_RIGHT"
  9 [-]: EQ        0 R1 R5      ; if R1 ~= R5 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: LOADK     R1 K4        ; R1 := "EN_MOUSE_B0"
 12 [-]: EQ        0 R1 K4      ; if R1 ~= "EN_MOUSE_B0" then PC := 19
 13 [-]: JMP       19           ; PC := 19
 14 [-]: EQ        1 R2 K6      ; if R2 == "1" then PC := 17
 15 [-]: JMP       17           ; PC := 17
 16 [-]: OP_LOADBOOL R6 0 1       ; R6 := false; PC := 17
 17 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 18 [-]: SETGLOBALHASH R6 K5        ; mMouseDown := R6
 19 [-]: EQ        1 R1 K7      ; if R1 == "EN_LSHIFT" then PC := 23
 20 [-]: JMP       23           ; PC := 23
 21 [-]: EQ        0 R1 K8      ; if R1 ~= "EN_RSHIFT" then PC := 28
 22 [-]: JMP       28           ; PC := 28
 23 [-]: EQ        1 R2 K6      ; if R2 == "1" then PC := 26
 24 [-]: JMP       26           ; PC := 26
 25 [-]: OP_LOADBOOL R6 0 1       ; R6 := false; PC := 26
 26 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 27 [-]: SETUPVAL  R6 U0        ; U82 := 
 28 [-]: EQ        1 R1 K9      ; if R1 == "EN_LALT" then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: EQ        0 R1 K10     ; if R1 ~= "EN_RALT" then PC := 36
 31 [-]: JMP       36           ; PC := 36
 32 [-]: EQ        1 R2 K6      ; if R2 == "1" then PC := 35
 33 [-]: JMP       35           ; PC := 35
 34 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 35
 35 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 36 [-]: GETGLOBAL R6 K1        ; R6 := 0x34291f5c
 37 [-]: GETTABLE  R6 R6 K11    ; R82 := R6[0xe6b41adb]
 38 [-]: CALL      R6 1 2       ; R6 := R6()
 39 [-]: TEST      R6 0         ; if not R6 then PC := 131
 40 [-]: JMP       131          ; PC := 131
 41 [-]: GETGLOBAL R6 K12       ; R6 := 0x7f5022cf
 42 [-]: GETTABLE  R6 R6 K13    ; R82 := R6[0xa5c556b9]
 43 [-]: MOVE      R7 R1        ; R7 := R1
 44 [-]: LOADK     R8 K14       ; R8 := "MOUSE_B0"
 45 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 46 [-]: EQ        1 R6 K15     ; if R6 == nil then PC := 90
 47 [-]: JMP       90           ; PC := 90
 48 [-]: EQ        0 R2 K16     ; if R2 ~= "0" then PC := 90
 49 [-]: JMP       90           ; PC := 90
 50 [-]: GETGLOBAL R6 K17       ; R6 := 0x03f57322
 51 [-]: MOVE      R7 R3        ; R7 := R3
 52 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 53 [-]: EQ        0 R6 K18     ; if R6 ~= 0.000000 then PC := 90
 54 [-]: JMP       90           ; PC := 90
 55 [-]: GETGLOBAL R6 K19       ; R6 := 0x7b998233
 56 [-]: GETGLOBAL R7 K20       ; R7 := mWindow
 57 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 58 [-]: TEST      R6 1         ; if R6 then PC := 90
 59 [-]: JMP       90           ; PC := 90
 60 [-]: GETGLOBAL R6 K19       ; R6 := 0x7b998233
 61 [-]: GETGLOBAL R7 K20       ; R7 := mWindow
 62 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["mUserPanel"]
 63 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 64 [-]: TEST      R6 1         ; if R6 then PC := 90
 65 [-]: JMP       90           ; PC := 90
 66 [-]: GETGLOBAL R6 K19       ; R6 := 0x7b998233
 67 [-]: GETGLOBAL R7 K20       ; R7 := mWindow
 68 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["mUserPanel"]
 69 [-]: GETTABLE  R7 R7 K22    ; R7 := R7["mEmoteGrid"]
 70 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 71 [-]: TEST      R6 1         ; if R6 then PC := 78
 72 [-]: JMP       78           ; PC := 78
 73 [-]: GETGLOBAL R6 K20       ; R6 := mWindow
 74 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["mUserPanel"]
 75 [-]: GETTABLE  R6 R6 K22    ; R6 := R6["mEmoteGrid"]
 76 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6[0xafefd935]
 77 [-]: CALL      R6 2 1       ; R6(R7)
 78 [-]: GETGLOBAL R6 K19       ; R6 := 0x7b998233
 79 [-]: GETGLOBAL R7 K20       ; R7 := mWindow
 80 [-]: GETTABLE  R7 R7 K21    ; R7 := R7["mUserPanel"]
 81 [-]: GETTABLE  R7 R7 K24    ; R7 := R7["mListControl"]
 82 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 83 [-]: TEST      R6 1         ; if R6 then PC := 90
 84 [-]: JMP       90           ; PC := 90
 85 [-]: GETGLOBAL R6 K20       ; R6 := mWindow
 86 [-]: GETTABLE  R6 R6 K21    ; R6 := R6["mUserPanel"]
 87 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["mListControl"]
 88 [-]: SELF      R6 R6 K23    ; R7 := R6; R6 := R6[0xafefd935]
 89 [-]: CALL      R6 2 1       ; R6(R7)
 90 [-]: GETGLOBAL R6 K19       ; R6 := 0x7b998233
 91 [-]: GETGLOBAL R7 K20       ; R7 := mWindow
 92 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 93 [-]: TEST      R6 1         ; if R6 then PC := 131
 94 [-]: JMP       131          ; PC := 131
 95 [-]: GETGLOBAL R6 K12       ; R6 := 0x7f5022cf
 96 [-]: GETTABLE  R6 R6 K13    ; R82 := R6[0xa5c556b9]
 97 [-]: MOVE      R7 R1        ; R7 := R1
 98 [-]: LOADK     R8 K4        ; R8 := "EN_MOUSE_B0"
 99 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
100 [-]: EQ        1 R6 K15     ; if R6 == nil then PC := 131
101 [-]: JMP       131          ; PC := 131
102 [-]: GETGLOBAL R6 K20       ; R6 := mWindow
103 [-]: GETTABLE  R6 R6 K25    ; R6 := R6["mTabMenu"]
104 [-]: SELF      R6 R6 K26    ; R7 := R6; R6 := R6[0xed1ab921]
105 [-]: CALL      R6 2 2       ; R6 := R6(R7)
106 [-]: EQ        0 R2 K16     ; if R2 ~= "0" then PC := 131
107 [-]: JMP       131          ; PC := 131
108 [-]: GETGLOBAL R7 K19       ; R7 := 0x7b998233
109 [-]: MOVE      R8 R6        ; R8 := R6
110 [-]: CALL      R7 2 2       ; R7 := R7(R8)
111 [-]: TEST      R7 1         ; if R7 then PC := 131
112 [-]: JMP       131          ; PC := 131
113 [-]: GETGLOBAL R7 K27       ; R7 := mSelectedUser
114 [-]: TEST      R7 0         ; if not R7 then PC := 131
115 [-]: JMP       131          ; PC := 131
116 [-]: GETGLOBAL R7 K20       ; R7 := mWindow
117 [-]: GETTABLE  R7 R7 K28    ; R7 := R7["mPanelList"]
118 [-]: GETTABLE  R8 R6 K29    ; R8 := R6["ChannelName"]
119 [-]: GETTABLE  R7 R7 R8     ; R7 := R7[R8]
120 [-]: GETGLOBAL R8 K19       ; R8 := 0x7b998233
121 [-]: MOVE      R9 R6        ; R9 := R6
122 [-]: CALL      R8 2 2       ; R8 := R8(R9)
123 [-]: TEST      R8 1         ; if R8 then PC := 131
124 [-]: JMP       131          ; PC := 131
125 [-]: GETGLOBAL R8 K27       ; R8 := mSelectedUser
126 [-]: GETTABLE  R8 R8 K30    ; R8 := R8["Channel"]
127 [-]: GETTABLE  R9 R7 K31    ; R9 := R7["mChannelName"]
128 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 131
129 [-]: JMP       131          ; PC := 131
130 [-]: RETURN    R0 1         ; return 
131 [-]: TEST      R4 1         ; if R4 then PC := 172
132 [-]: JMP       172          ; PC := 172
133 [-]: GETGLOBAL R8 K12       ; R8 := 0x7f5022cf
134 [-]: GETTABLE  R8 R8 K13    ; R82 := R8[0xa5c556b9]
135 [-]: MOVE      R9 R1        ; R9 := R1
136 [-]: LOADK     R10 K32      ; R10 := "_TAB"
137 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
138 [-]: TEST      R8 0         ; if not R8 then PC := 172
139 [-]: JMP       172          ; PC := 172
140 [-]: EQ        0 R2 K16     ; if R2 ~= "0" then PC := 172
141 [-]: JMP       172          ; PC := 172
142 [-]: GETGLOBAL R8 K20       ; R8 := mWindow
143 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["mVisualMode"]
144 [-]: GETGLOBAL R9 K20       ; R9 := mWindow
145 [-]: GETTABLE  R9 R9 K34    ; R9 := R9["VISUAL_MODE_MENU_FULL"]
146 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 154
147 [-]: JMP       154          ; PC := 154
148 [-]: GETGLOBAL R8 K20       ; R8 := mWindow
149 [-]: GETTABLE  R8 R8 K33    ; R8 := R8["mVisualMode"]
150 [-]: GETGLOBAL R9 K20       ; R9 := mWindow
151 [-]: GETTABLE  R9 R9 K35    ; R9 := R9["VISUAL_MODE_GAMEPLAY_FULL"]
152 [-]: EQ        0 R8 R9      ; if R8 ~= R9 then PC := 172
153 [-]: JMP       172          ; PC := 172
154 [-]: GETGLOBAL R8 K36       ; R8 := mInputBlocked
155 [-]: TEST      R8 1         ; if R8 then PC := 172
156 [-]: JMP       172          ; PC := 172
157 [-]: GETUPVAL  R8 U1        ; R8 := U1
158 [-]: CALL      R8 1 1       ; R8()
159 [-]: GETUPVAL  R8 U0        ; R8 := U0
160 [-]: TEST      R8 0         ; if not R8 then PC := 168
161 [-]: JMP       168          ; PC := 168
162 [-]: CONST     R8 1         ; R8 := 1.000000
163 [-]: SETUPVAL  R8 U2        ; U82 := 
164 [-]: GETUPVAL  R8 U4        ; R8 := U4
165 [-]: GETTABLE  R8 R8 K37    ; R8 := R8["DECREMENT"]
166 [-]: SETUPVAL  R8 U3        ; U82 := 
167 [-]: JMP       525          ; PC := 525
168 [-]: GETUPVAL  R8 U4        ; R8 := U4
169 [-]: GETTABLE  R8 R8 K38    ; R8 := R8["INCREMENT"]
170 [-]: SETUPVAL  R8 U3        ; U82 := 
171 [-]: JMP       525          ; PC := 525
172 [-]: EQ        0 R2 K16     ; if R2 ~= "0" then PC := 239
173 [-]: JMP       239          ; PC := 239
174 [-]: GETUPVAL  R8 U5        ; R8 := U5
175 [-]: TEST      R8 0         ; if not R8 then PC := 239
176 [-]: JMP       239          ; PC := 239
177 [-]: GETUPVAL  R8 U6        ; R8 := U6
178 [-]: TEST      R8 0         ; if not R8 then PC := 239
179 [-]: JMP       239          ; PC := 239
180 [-]: GETGLOBAL R8 K36       ; R8 := mInputBlocked
181 [-]: TEST      R8 1         ; if R8 then PC := 239
182 [-]: JMP       239          ; PC := 239
183 [-]: GETGLOBAL R8 K12       ; R8 := 0x7f5022cf
184 [-]: GETTABLE  R8 R8 K13    ; R82 := R8[0xa5c556b9]
185 [-]: MOVE      R9 R1        ; R9 := R1
186 [-]: LOADK     R10 K39      ; R10 := "_ENTER"
187 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
188 [-]: TEST      R8 0         ; if not R8 then PC := 193
189 [-]: JMP       193          ; PC := 193
190 [-]: GETUPVAL  R8 U7        ; R8 := U7
191 [-]: CALL      R8 1 1       ; R8()
192 [-]: JMP       525          ; PC := 525
193 [-]: GETGLOBAL R8 K12       ; R8 := 0x7f5022cf
194 [-]: GETTABLE  R8 R8 K13    ; R82 := R8[0xa5c556b9]
195 [-]: MOVE      R9 R1        ; R9 := R1
196 [-]: LOADK     R10 K40      ; R10 := "EN_LEFT"
197 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
198 [-]: TEST      R8 0         ; if not R8 then PC := 214
199 [-]: JMP       214          ; PC := 214
200 [-]: GETGLOBAL R8 K17       ; R8 := 0x03f57322
201 [-]: GETUPVAL  R9 U8        ; R9 := U8
202 [-]: GETTABLE  R9 R9 K41    ; R82 := R9[0x2da0d9a2]
203 [-]: GETUPVAL  R10 U9       ; R10 := U9
204 [-]: CALL      R9 2 0       ; R9,... := R9(R10)
205 [-]: CALL      R8 0 2       ; R8 := R8(R9,...)
206 [-]: EQ        1 R8 K42     ; if R8 == 1.000000 then PC := 525
207 [-]: JMP       525          ; PC := 525
208 [-]: GETUPVAL  R9 U8        ; R9 := U8
209 [-]: GETTABLE  R9 R9 K43    ; R82 := R9[0x2e84930f]
210 [-]: SUB       R10 R8 K42   ; R10 := R8 - 1.000000
211 [-]: GETUPVAL  R11 U9       ; R11 := U9
212 [-]: CALL      R9 3 1       ; R9(R10,R11)
213 [-]: JMP       525          ; PC := 525
214 [-]: GETGLOBAL R9 K12       ; R9 := 0x7f5022cf
215 [-]: GETTABLE  R9 R9 K13    ; R82 := R9[0xa5c556b9]
216 [-]: MOVE      R10 R1       ; R10 := R1
217 [-]: LOADK     R11 K44      ; R11 := "EN_RIGHT"
218 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
219 [-]: TEST      R9 0         ; if not R9 then PC := 525
220 [-]: JMP       525          ; PC := 525
221 [-]: GETGLOBAL R9 K17       ; R9 := 0x03f57322
222 [-]: GETUPVAL  R10 U8       ; R10 := U8
223 [-]: GETTABLE  R10 R10 K41  ; R82 := R10[0x2da0d9a2]
224 [-]: GETUPVAL  R11 U9       ; R11 := U9
225 [-]: CALL      R10 2 0      ; R10,... := R10(R11)
226 [-]: CALL      R9 0 2       ; R9 := R9(R10,...)
227 [-]: GETUPVAL  R10 U8       ; R10 := U8
228 [-]: GETTABLE  R10 R10 K45  ; R82 := R10[0x07078f4b]
229 [-]: GETUPVAL  R11 U9       ; R11 := U9
230 [-]: CALL      R10 2 2      ; R10 := R10(R11)
231 [-]: EQ        1 R9 R10     ; if R9 == R10 then PC := 525
232 [-]: JMP       525          ; PC := 525
233 [-]: GETUPVAL  R10 U8       ; R10 := U8
234 [-]: GETTABLE  R10 R10 K43  ; R82 := R10[0x2e84930f]
235 [-]: ADD       R11 R9 K42   ; R11 := R9 + 1.000000
236 [-]: GETUPVAL  R12 U9       ; R12 := U9
237 [-]: CALL      R10 3 1      ; R10(R11,R12)
238 [-]: JMP       525          ; PC := 525
239 [-]: EQ        0 R2 K16     ; if R2 ~= "0" then PC := 525
240 [-]: JMP       525          ; PC := 525
241 [-]: GETGLOBAL R10 K36      ; R10 := mInputBlocked
242 [-]: TEST      R10 1        ; if R10 then PC := 525
243 [-]: JMP       525          ; PC := 525
244 [-]: GETGLOBAL R10 K12      ; R10 := 0x7f5022cf
245 [-]: GETTABLE  R10 R10 K13  ; R82 := R10[0xa5c556b9]
246 [-]: MOVE      R11 R1       ; R11 := R1
247 [-]: LOADK     R12 K39      ; R12 := "_ENTER"
248 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
249 [-]: EQ        1 R10 K15    ; if R10 == nil then PC := 310
250 [-]: JMP       310          ; PC := 310
251 [-]: GETGLOBAL R10 K19      ; R10 := 0x7b998233
252 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
253 [-]: CALL      R10 2 2      ; R10 := R10(R11)
254 [-]: TEST      R10 1        ; if R10 then PC := 525
255 [-]: JMP       525          ; PC := 525
256 [-]: GETGLOBAL R10 K1       ; R10 := 0x34291f5c
257 [-]: GETTABLE  R10 R10 K46  ; R82 := R10[0x1467d5f4]
258 [-]: CALL      R10 1 2      ; R10 := R10()
259 [-]: TEST      R10 1        ; if R10 then PC := 525
260 [-]: JMP       525          ; PC := 525
261 [-]: GETUPVAL  R10 U10      ; R10 := U10
262 [-]: TEST      R10 0        ; if not R10 then PC := 270
263 [-]: JMP       270          ; PC := 270
264 [-]: GETUPVAL  R10 U11      ; R10 := U11
265 [-]: TEST      R10 0        ; if not R10 then PC := 270
266 [-]: JMP       270          ; PC := 270
267 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
268 [-]: SETUPVAL  R10 U11      ; U82 := 

269 [-]: JMP       525          ; PC := 525
270 [-]: GETGLOBAL R10 K19      ; R10 := 0x7b998233
271 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
272 [-]: GETTABLE  R11 R11 K47  ; R11 := R11["mInputPanel"]
273 [-]: CALL      R10 2 2      ; R10 := R10(R11)
274 [-]: TEST      R10 1        ; if R10 then PC := 525
275 [-]: JMP       525          ; PC := 525
276 [-]: GETGLOBAL R10 K20      ; R10 := mWindow
277 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["mVisualMode"]
278 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
279 [-]: GETTABLE  R11 R11 K35  ; R11 := R11["VISUAL_MODE_GAMEPLAY_FULL"]
280 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 288
281 [-]: JMP       288          ; PC := 288
282 [-]: GETGLOBAL R10 K20      ; R10 := mWindow
283 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["mVisualMode"]
284 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
285 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["VISUAL_MODE_MENU_FULL"]
286 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 525
287 [-]: JMP       525          ; PC := 525
288 [-]: GETGLOBAL R10 K20      ; R10 := mWindow
289 [-]: SELF      R10 R10 K48  ; R11 := R10; R10 := R10[0x83b2653c]
290 [-]: CALL      R10 2 1      ; R10(R11)
291 [-]: GETUPVAL  R10 U12      ; R10 := U12
292 [-]: GETTABLE  R10 R10 K49  ; R82 := R10[0xb73d420f]
293 [-]: CALL      R10 1 2      ; R10 := R10()
294 [-]: GETUPVAL  R11 U12      ; R11 := U12
295 [-]: GETTABLE  R11 R11 K50  ; R11 := R11["UI_MODE_IN_SPACE_SHIP"]
296 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 525
297 [-]: JMP       525          ; PC := 525
298 [-]: GETGLOBAL R10 K20      ; R10 := mWindow
299 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["mVisualMode"]
300 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
301 [-]: GETTABLE  R11 R11 K35  ; R11 := R11["VISUAL_MODE_GAMEPLAY_FULL"]
302 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 525
303 [-]: JMP       525          ; PC := 525
304 [-]: GETGLOBAL R10 K20      ; R10 := mWindow
305 [-]: SELF      R10 R10 K51  ; R11 := R10; R10 := R10[0xc2b5e351]
306 [-]: GETGLOBAL R12 K20      ; R12 := mWindow
307 [-]: GETTABLE  R12 R12 K52  ; R12 := R12["VISUAL_MODE_GAMEPLAY_SIMPLE"]
308 [-]: CALL      R10 3 1      ; R10(R11,R12)
309 [-]: JMP       525          ; PC := 525
310 [-]: GETGLOBAL R10 K12      ; R10 := 0x7f5022cf
311 [-]: GETTABLE  R10 R10 K13  ; R82 := R10[0xa5c556b9]
312 [-]: MOVE      R11 R1       ; R11 := R1
313 [-]: LOADK     R12 K4       ; R12 := "EN_MOUSE_B0"
314 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
315 [-]: EQ        0 R10 K15    ; if R10 ~= nil then PC := 324
316 [-]: JMP       324          ; PC := 324
317 [-]: GETGLOBAL R10 K12      ; R10 := 0x7f5022cf
318 [-]: GETTABLE  R10 R10 K13  ; R82 := R10[0xa5c556b9]
319 [-]: MOVE      R11 R1       ; R11 := R1
320 [-]: LOADK     R12 K53      ; R12 := "EN_MOUSE_B1"
321 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
322 [-]: TEST      R10 0        ; if not R10 then PC := 499
323 [-]: JMP       499          ; PC := 499
324 [-]: GETGLOBAL R10 K20      ; R10 := mWindow
325 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["mVisualMode"]
326 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
327 [-]: GETTABLE  R11 R11 K35  ; R11 := R11["VISUAL_MODE_GAMEPLAY_FULL"]
328 [-]: EQ        1 R10 R11    ; if R10 == R11 then PC := 336
329 [-]: JMP       336          ; PC := 336
330 [-]: GETGLOBAL R10 K20      ; R10 := mWindow
331 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["mVisualMode"]
332 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
333 [-]: GETTABLE  R11 R11 K34  ; R11 := R11["VISUAL_MODE_MENU_FULL"]
334 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 349
335 [-]: JMP       349          ; PC := 349
336 [-]: GETGLOBAL R10 K54      ; R10 := 0xae91e43b
337 [-]: SELF      R10 R10 K55  ; R11 := R10; R10 := R10[0x5b0290d2]
338 [-]: LOADK     R12 K56      ; R12 := "ContextMenu"
339 [-]: CONST     R13 59       ; R13 := 59.000000
340 [-]: CALL      R10 4 2      ; R10 := R10(R11,R12,R13)
341 [-]: TEST      R10 0        ; if not R10 then PC := 349
342 [-]: JMP       349          ; PC := 349
343 [-]: GETUPVAL  R10 U13      ; R10 := U13
344 [-]: CALL      R10 1 2      ; R10 := R10()
345 [-]: TEST      R10 1        ; if R10 then PC := 349
346 [-]: JMP       349          ; PC := 349
347 [-]: GETUPVAL  R10 U1       ; R10 := U1
348 [-]: CALL      R10 1 1      ; R10()
349 [-]: GETGLOBAL R10 K19      ; R10 := 0x7b998233
350 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
351 [-]: CALL      R10 2 2      ; R10 := R10(R11)
352 [-]: TEST      R10 1        ; if R10 then PC := 390
353 [-]: JMP       390          ; PC := 390
354 [-]: GETGLOBAL R10 K20      ; R10 := mWindow
355 [-]: GETTABLE  R10 R10 K33  ; R10 := R10["mVisualMode"]
356 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
357 [-]: GETTABLE  R11 R11 K35  ; R11 := R11["VISUAL_MODE_GAMEPLAY_FULL"]
358 [-]: EQ        0 R10 R11    ; if R10 ~= R11 then PC := 390
359 [-]: JMP       390          ; PC := 390
360 [-]: GETUPVAL  R10 U14      ; R10 := U14
361 [-]: CALL      R10 1 2      ; R10 := R10()
362 [-]: TEST      R10 1        ; if R10 then PC := 390
363 [-]: JMP       390          ; PC := 390
364 [-]: GETGLOBAL R10 K20      ; R10 := mWindow
365 [-]: GETTABLE  R10 R10 K57  ; R10 := R10["mWindowTitle"]
366 [-]: GETTABLE  R10 R10 K58  ; R10 := R10["isDragging"]
367 [-]: TEST      R10 1        ; if R10 then PC := 525
368 [-]: JMP       525          ; PC := 525
369 [-]: GETGLOBAL R10 K20      ; R10 := mWindow
370 [-]: GETTABLE  R10 R10 K59  ; R10 := R10["mWindowStatus"]
371 [-]: GETTABLE  R10 R10 K58  ; R10 := R10["isDragging"]
372 [-]: TEST      R10 1        ; if R10 then PC := 525
373 [-]: JMP       525          ; PC := 525
374 [-]: GETGLOBAL R10 K1       ; R10 := 0x34291f5c
375 [-]: GETTABLE  R10 R10 K11  ; R82 := R10[0xe6b41adb]
376 [-]: CALL      R10 1 2      ; R10 := R10()
377 [-]: TEST      R10 1        ; if R10 then PC := 525
378 [-]: JMP       525          ; PC := 525
379 [-]: GETGLOBAL R10 K54      ; R10 := 0xae91e43b
380 [-]: SELF      R10 R10 K60  ; R11 := R10; R10 := R10[0x40eb8ac7]
381 [-]: CALL      R10 2 2      ; R10 := R10(R11)
382 [-]: EQ        0 R10 K15    ; if R10 ~= nil then PC := 525
383 [-]: JMP       525          ; PC := 525
384 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
385 [-]: SELF      R11 R11 K51  ; R12 := R11; R11 := R11[0xc2b5e351]
386 [-]: GETGLOBAL R13 K20      ; R13 := mWindow
387 [-]: GETTABLE  R13 R13 K52  ; R13 := R13["VISUAL_MODE_GAMEPLAY_SIMPLE"]
388 [-]: CALL      R11 3 1      ; R11(R12,R13)
389 [-]: JMP       525          ; PC := 525
390 [-]: GETGLOBAL R11 K19      ; R11 := 0x7b998233
391 [-]: GETGLOBAL R12 K20      ; R12 := mWindow
392 [-]: CALL      R11 2 2      ; R11 := R11(R12)
393 [-]: TEST      R11 1        ; if R11 then PC := 525
394 [-]: JMP       525          ; PC := 525
395 [-]: GETGLOBAL R11 K19      ; R11 := 0x7b998233
396 [-]: GETGLOBAL R12 K20      ; R12 := mWindow
397 [-]: GETTABLE  R12 R12 K21  ; R12 := R12["mUserPanel"]
398 [-]: CALL      R11 2 2      ; R11 := R11(R12)
399 [-]: TEST      R11 1        ; if R11 then PC := 525
400 [-]: JMP       525          ; PC := 525
401 [-]: GETGLOBAL R11 K19      ; R11 := 0x7b998233
402 [-]: GETGLOBAL R12 K20      ; R12 := mWindow
403 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["mTabMenu"]
404 [-]: CALL      R11 2 2      ; R11 := R11(R12)
405 [-]: TEST      R11 1        ; if R11 then PC := 525
406 [-]: JMP       525          ; PC := 525
407 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
408 [-]: GETTABLE  R11 R11 K33  ; R11 := R11["mVisualMode"]
409 [-]: GETGLOBAL R12 K20      ; R12 := mWindow
410 [-]: GETTABLE  R12 R12 K35  ; R12 := R12["VISUAL_MODE_GAMEPLAY_FULL"]
411 [-]: EQ        1 R11 R12    ; if R11 == R12 then PC := 419
412 [-]: JMP       419          ; PC := 419
413 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
414 [-]: GETTABLE  R11 R11 K33  ; R11 := R11["mVisualMode"]
415 [-]: GETGLOBAL R12 K20      ; R12 := mWindow
416 [-]: GETTABLE  R12 R12 K34  ; R12 := R12["VISUAL_MODE_MENU_FULL"]
417 [-]: EQ        0 R11 R12    ; if R11 ~= R12 then PC := 525
418 [-]: JMP       525          ; PC := 525
419 [-]: GETGLOBAL R11 K20      ; R11 := mWindow
420 [-]: GETTABLE  R11 R11 K21  ; R11 := R11["mUserPanel"]
421 [-]: GETTABLE  R11 R11 K24  ; R11 := R11["mListControl"]
422 [-]: SELF      R11 R11 K26  ; R12 := R11; R11 := R11[0xed1ab921]
423 [-]: CALL      R11 2 2      ; R11 := R11(R12)
424 [-]: GETGLOBAL R12 K20      ; R12 := mWindow
425 [-]: GETTABLE  R12 R12 K25  ; R12 := R12["mTabMenu"]
426 [-]: SELF      R12 R12 K26  ; R13 := R12; R12 := R12[0xed1ab921]
427 [-]: CALL      R12 2 2      ; R12 := R12(R13)
428 [-]: GETGLOBAL R13 K19      ; R13 := 0x7b998233
429 [-]: MOVE      R14 R11      ; R14 := R11
430 [-]: CALL      R13 2 2      ; R13 := R13(R14)
431 [-]: TEST      R13 1        ; if R13 then PC := 465
432 [-]: JMP       465          ; PC := 465
433 [-]: GETUPVAL  R13 U15      ; R13 := U15
434 [-]: MOVE      R14 R11      ; R14 := R11
435 [-]: CALL      R13 2 2      ; R13 := R13(R14)
436 [-]: TEST      R13 0        ; if not R13 then PC := 465
437 [-]: JMP       465          ; PC := 465
438 [-]: GETGLOBAL R13 K12      ; R13 := 0x7f5022cf
439 [-]: GETTABLE  R13 R13 K13  ; R82 := R13[0xa5c556b9]
440 [-]: MOVE      R14 R1       ; R14 := R1
441 [-]: LOADK     R15 K53      ; R15 := "EN_MOUSE_B1"
442 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
443 [-]: EQ        0 R13 K15    ; if R13 ~= nil then PC := 459
444 [-]: JMP       459          ; PC := 459
445 [-]: GETGLOBAL R13 K12      ; R13 := 0x7f5022cf
446 [-]: GETTABLE  R13 R13 K13  ; R82 := R13[0xa5c556b9]
447 [-]: MOVE      R14 R1       ; R14 := R1
448 [-]: LOADK     R15 K4       ; R15 := "EN_MOUSE_B0"
449 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
450 [-]: EQ        1 R13 K15    ; if R13 == nil then PC := 465
451 [-]: JMP       465          ; PC := 465
452 [-]: GETGLOBAL R13 K54      ; R13 := 0xae91e43b
453 [-]: SELF      R13 R13 K55  ; R14 := R13; R13 := R13[0x5b0290d2]
454 [-]: LOADK     R15 K56      ; R15 := "ContextMenu"
455 [-]: CONST     R16 59       ; R16 := 59.000000
456 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
457 [-]: TEST      R13 1        ; if R13 then PC := 465
458 [-]: JMP       465          ; PC := 465
459 [-]: GETUPVAL  R13 U16      ; R13 := U16
460 [-]: GETGLOBAL R14 K17      ; R14 := 0x03f57322
461 [-]: GETTABLE  R15 R11 K61  ; R15 := R11["Id"]
462 [-]: CALL      R14 2 0      ; R14,... := R14(R15)
463 [-]: CALL      R13 0 1      ; R13(R14,...)
464 [-]: JMP       525          ; PC := 525
465 [-]: GETGLOBAL R13 K12      ; R13 := 0x7f5022cf
466 [-]: GETTABLE  R13 R13 K13  ; R82 := R13[0xa5c556b9]
467 [-]: MOVE      R14 R1       ; R14 := R1
468 [-]: LOADK     R15 K53      ; R15 := "EN_MOUSE_B1"
469 [-]: CALL      R13 3 2      ; R13 := R13(R14,R15)
470 [-]: TEST      R13 0        ; if not R13 then PC := 525
471 [-]: JMP       525          ; PC := 525
472 [-]: GETGLOBAL R13 K19      ; R13 := 0x7b998233
473 [-]: MOVE      R14 R12      ; R14 := R12
474 [-]: CALL      R13 2 2      ; R13 := R13(R14)
475 [-]: TEST      R13 1        ; if R13 then PC := 525
476 [-]: JMP       525          ; PC := 525
477 [-]: GETGLOBAL R13 K12      ; R13 := 0x7f5022cf
478 [-]: GETTABLE  R13 R13 K62  ; R82 := R13[0x1a94c9cc]
479 [-]: GETTABLE  R14 R12 K29  ; R14 := R12["ChannelName"]
480 [-]: CONST     R15 1        ; R15 := 1.000000
481 [-]: CONST     R16 1        ; R16 := 1.000000
482 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
483 [-]: GETGLOBAL R14 K20      ; R14 := mWindow
484 [-]: GETTABLE  R14 R14 K63  ; R82 := R14[0xfe8039a9]
485 [-]: CALL      R14 1 2      ; R14 := R14()
486 [-]: EQ        0 R13 R14    ; if R13 ~= R14 then PC := 525
487 [-]: JMP       525          ; PC := 525
488 [-]: GETGLOBAL R13 K20      ; R13 := mWindow
489 [-]: GETTABLE  R13 R13 K28  ; R13 := R13["mPanelList"]
490 [-]: GETTABLE  R14 R12 K29  ; R14 := R12["ChannelName"]
491 [-]: GETTABLE  R13 R13 R14  ; R13 := R13[R14]
492 [-]: EQ        1 R13 K15    ; if R13 == nil then PC := 525
493 [-]: JMP       525          ; PC := 525
494 [-]: GETUPVAL  R14 U16      ; R14 := U16
495 [-]: LOADNIL   R15 R17      ; R15 := R16 := R17 := nil
496 [-]: MOVE      R18 R13      ; R18 := R13
497 [-]: CALL      R14 5 1      ; R14(R15,R16,R17,R18)
498 [-]: JMP       525          ; PC := 525
499 [-]: GETGLOBAL R14 K12      ; R14 := 0x7f5022cf
500 [-]: GETTABLE  R14 R14 K13  ; R82 := R14[0xa5c556b9]
501 [-]: MOVE      R15 R1       ; R15 := R1
502 [-]: LOADK     R16 K64      ; R16 := "EN_UP"
503 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
504 [-]: EQ        0 R14 K15    ; if R14 ~= nil then PC := 513
505 [-]: JMP       513          ; PC := 513
506 [-]: GETGLOBAL R14 K12      ; R14 := 0x7f5022cf
507 [-]: GETTABLE  R14 R14 K13  ; R82 := R14[0xa5c556b9]
508 [-]: MOVE      R15 R1       ; R15 := R1
509 [-]: LOADK     R16 K65      ; R16 := "EN_DOWN"
510 [-]: CALL      R14 3 2      ; R14 := R14(R15,R16)
511 [-]: EQ        1 R14 K15    ; if R14 == nil then PC := 525
512 [-]: JMP       525          ; PC := 525
513 [-]: GETUPVAL  R14 U4       ; R14 := U4
514 [-]: GETTABLE  R14 R14 K66  ; R82 := R14[0x06d055f9]
515 [-]: EQ        1 R1 K64     ; if R1 == "EN_UP" then PC := 518
516 [-]: JMP       518          ; PC := 518
517 [-]: OP_LOADBOOL R15 0 1      ; R15 := false; PC := 518
518 [-]: OP_LOADBOOL R15 1 0      ; R15 := true
519 [-]: CONST     R16 -1       ; R16 := -1.000000
520 [-]: CONST     R17 1        ; R17 := 1.000000
521 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
522 [-]: GETUPVAL  R15 U17      ; R15 := U17
523 [-]: MOVE      R16 R14      ; R16 := R14
524 [-]: CALL      R15 2 1      ; R15(R16)
525 [-]: CONST     R15 1        ; R15 := 1.000000
526 [-]: RETURN    R15 2        ; return R15
527 [-]: RETURN    R0 1         ; return 


; Function #228:
;
; Name:            
; Defined at line: 11133
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R2 K0        ; R2 := mInputBlocked
  2 [-]: TEST      R2 1         ; if R2 then PC := 8
  3 [-]: JMP       8            ; PC := 8
  4 [-]: GETUPVAL  R2 U0        ; R2 := U0
  5 [-]: CALL      R2 1 2       ; R2 := R2()
  6 [-]: TEST      R2 1         ; if R2 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 10 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x5b0290d2]
 11 [-]: LOADK     R4 K3        ; R4 := "ContextMenu"
 12 [-]: CONST     R5 59        ; R5 := 59.000000
 13 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 14 [-]: TEST      R2 0         ; if not R2 then PC := 18
 15 [-]: JMP       18           ; PC := 18
 16 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 17 [-]: RETURN    R2 2         ; return R2
 18 [-]: GETGLOBAL R2 K4        ; R2 := 0x03f57322
 19 [-]: MOVE      R3 R1        ; R3 := R1
 20 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 21 [-]: MOVE      R1 R2        ; R1 := R2
 22 [-]: LOADNIL   R2 R2        ; R2 := nil
 23 [-]: GETGLOBAL R3 K5        ; R3 := mWindow
 24 [-]: SELF      R3 R3 K6     ; R4 := R3; R3 := R3[0x8b75da5a]
 25 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 26 [-]: GETGLOBAL R4 K7        ; R4 := 0x7b998233
 27 [-]: MOVE      R5 R3        ; R5 := R3
 28 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 29 [-]: TEST      R4 1         ; if R4 then PC := 32
 30 [-]: JMP       32           ; PC := 32
 31 [-]: GETTABLE  R2 R3 K8     ; R2 := R3["mTextScroll"]
 32 [-]: GETUPVAL  R4 U1        ; R4 := U1
 33 [-]: CALL      R4 1 2       ; R4 := R4()
 34 [-]: TEST      R4 0         ; if not R4 then PC := 52
 35 [-]: JMP       52           ; PC := 52
 36 [-]: GETGLOBAL R4 K5        ; R4 := mWindow
 37 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mUserPanel"]
 38 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["mListControl"]
 39 [-]: GETTABLE  R4 R4 K11    ; R4 := R4["mIsVisible"]
 40 [-]: TEST      R4 0         ; if not R4 then PC := 47
 41 [-]: JMP       47           ; PC := 47
 42 [-]: GETGLOBAL R4 K5        ; R4 := mWindow
 43 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mUserPanel"]
 44 [-]: GETTABLE  R4 R4 K10    ; R4 := R4["mListControl"]
 45 [-]: GETTABLE  R2 R4 K12    ; R2 := R4["mScrollBar"]
 46 [-]: JMP       60           ; PC := 60
 47 [-]: GETGLOBAL R4 K5        ; R4 := mWindow
 48 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mUserPanel"]
 49 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["mEmoteGrid"]
 50 [-]: GETTABLE  R2 R4 K12    ; R2 := R4["mScrollBar"]
 51 [-]: JMP       60           ; PC := 60
 52 [-]: GETUPVAL  R4 U2        ; R4 := U2
 53 [-]: CALL      R4 1 2       ; R4 := R4()
 54 [-]: TEST      R4 0         ; if not R4 then PC := 60
 55 [-]: JMP       60           ; PC := 60
 56 [-]: GETGLOBAL R4 K5        ; R4 := mWindow
 57 [-]: GETTABLE  R4 R4 K9     ; R4 := R4["mUserPanel"]
 58 [-]: GETTABLE  R4 R4 K14    ; R4 := R4["mUserLocator"]
 59 [-]: GETTABLE  R2 R4 K12    ; R2 := R4["mScrollBar"]
 60 [-]: GETGLOBAL R4 K7        ; R4 := 0x7b998233
 61 [-]: MOVE      R5 R2        ; R5 := R2
 62 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 63 [-]: TEST      R4 1         ; if R4 then PC := 69
 64 [-]: JMP       69           ; PC := 69
 65 [-]: SELF      R4 R2 K15    ; R5 := R2; R4 := R2[0xd2c6305a]
 66 [-]: GETTABLE  R6 R2 K16    ; R6 := R2["mScrollStep"]
 67 [-]: MUL       R6 R1 R6     ; R6 := R1 * R6
 68 [-]: CALL      R4 3 1       ; R4(R5,R6)
 69 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 70 [-]: RETURN    R4 2         ; return R4
 71 [-]: RETURN    R0 1         ; return 


; Function #229:
;
; Name:            
; Defined at line: 11165
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 1         ; if R0 then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: RETURN    R0 1         ; return 
  4 [-]: GETGLOBAL R2 K0        ; R2 := 0x9ba7909f
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0xbcfb64ab]
  6 [-]: GETGLOBAL R4 K2        ; R4 := 0x8d3c3891
  7 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
  8 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
  9 [-]: MOVE      R4 R2        ; R4 := R2
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: TEST      R3 1         ; if R3 then PC := 17
 12 [-]: JMP       17           ; PC := 17
 13 [-]: SELF      R3 R2 K4     ; R4 := R2; R3 := R2[0xe4162eed]
 14 [-]: LOADK     R5 K5        ; R5 := "RefreshFriendsWindow"
 15 [-]: LOADK     R6 K6        ; R6 := ""
 16 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 17 [-]: RETURN    R0 1         ; return 


; Function #230:
;
; Name:            
; Defined at line: 11176
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "true" then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETGLOBAL R2 K1        ; R2 := mGameData
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x50f18d6c]
  5 [-]: LOADK     R4 K3        ; R4 := "OnGetFriendsResult"
  6 [-]: CALL      R2 3 1       ; R2(R3,R4)
  7 [-]: GETGLOBAL R2 K4        ; R2 := mWindow
  8 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xd4f2405e]
  9 [-]: MOVE      R4 R1        ; R4 := R1
 10 [-]: CALL      R2 3 1       ; R2(R3,R4)
 11 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 12 [-]: RETURN    R2 2         ; return R2
 13 [-]: RETURN    R0 1         ; return 


; Function #231:
;
; Name:            
; Defined at line: 11184
; #Upvalues:       0
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: EQ        0 R0 K0      ; if R0 ~= "true" then PC := 7
  2 [-]: JMP       7            ; PC := 7
  3 [-]: GETGLOBAL R2 K1        ; R2 := mGameData
  4 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0x50f18d6c]
  5 [-]: LOADK     R4 K3        ; R4 := "OnGetFriendsResult"
  6 [-]: CALL      R2 3 1       ; R2(R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #232:
;
; Name:            
; Defined at line: 11190
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: TEST      R0 1         ; if R0 then PC := 20
  2 [-]: JMP       20           ; PC := 20
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  4 [-]: LOADK     R3 K1        ; R3 := "FAILURE: "
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
  9 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xd4f2405e]
 10 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 11 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x42b04007]
 12 [-]: GETUPVAL  R6 U0        ; R6 := U0
 13 [-]: GETTABLE  R6 R6 K6     ; R82 := R6[0x3230dc3e]
 14 [-]: MOVE      R7 R1        ; R7 := R1
 15 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 16 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 17 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 18 [-]: CALL      R2 0 1       ; R2(R3,...)
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 21 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xd4f2405e]
 22 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 23 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x42b04007]
 24 [-]: LOADK     R6 K7        ; R6 := "/Lotus/Language/Menu/SocialOverlay_FriendRemoveConfirm"
 25 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 26 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 27 [-]: CALL      R2 0 1       ; R2(R3,...)
 28 [-]: RETURN    R0 1         ; return 


; Function #233:
;
; Name:            
; Defined at line: 11200
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0xd4f2405e]
  3 [-]: MOVE      R3 R0        ; R3 := R0
  4 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
  5 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  6 [-]: RETURN    R0 1         ; return 


; Function #234:
;
; Name:            
; Defined at line: 11204
; #Upvalues:       6
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  14

  1 [-]: TEST      R0 1         ; if R0 then PC := 62
  2 [-]: JMP       62           ; PC := 62
  3 [-]: GETGLOBAL R3 K0        ; R3 := 0x3d106989
  4 [-]: LOADK     R4 K1        ; R4 := "FAILURE: "
  5 [-]: MOVE      R5 R1        ; R5 := R1
  6 [-]: CONCAT    R4 R4 R5     ; R4 := R4 .. R5
  7 [-]: CALL      R3 2 1       ; R3(R4)
  8 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
  9 [-]: SELF      R3 R3 K3     ; R4 := R3; R3 := R3[0x8b75da5a]
 10 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 11 [-]: GETGLOBAL R4 K4        ; R4 := 0x7b998233
 12 [-]: MOVE      R5 R3        ; R5 := R3
 13 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 14 [-]: TEST      R4 1         ; if R4 then PC := 57
 15 [-]: JMP       57           ; PC := 57
 16 [-]: LOADNIL   R4 R4        ; R4 := nil
 17 [-]: LOADK     R5 K5        ; R5 := "NOSUCHNICK "
 18 [-]: TEST      R2 1         ; if R2 then PC := 45
 19 [-]: JMP       45           ; PC := 45
 20 [-]: GETGLOBAL R6 K6        ; R6 := 0x7f5022cf
 21 [-]: GETTABLE  R6 R6 K7     ; R82 := R6[0xa5c556b9]
 22 [-]: MOVE      R7 R1        ; R7 := R1
 23 [-]: MOVE      R8 R5        ; R8 := R5
 24 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 25 [-]: EQ        0 R6 K8      ; if R6 ~= 1.000000 then PC := 45
 26 [-]: JMP       45           ; PC := 45
 27 [-]: GETGLOBAL R6 K6        ; R6 := 0x7f5022cf
 28 [-]: GETTABLE  R6 R6 K9     ; R82 := R6[0x1a94c9cc]
 29 [-]: MOVE      R7 R1        ; R7 := R1
 30 [-]: GETGLOBAL R8 K6        ; R8 := 0x7f5022cf
 31 [-]: GETTABLE  R8 R8 K10    ; R82 := R8[0x41e2ae25]
 32 [-]: MOVE      R9 R5        ; R9 := R5
 33 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 34 [-]: ADD       R8 R8 K8     ; R8 := R8 + 1.000000
 35 [-]: CALL      R6 3 2       ; R6 := R6(R7,R8)
 36 [-]: GETGLOBAL R7 K11       ; R7 := 0xae91e43b
 37 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7[0x42b04007]
 38 [-]: LOADK     R9 K13       ; R9 := "/Lotus/Language/Menu/Chat_FriendOffline"
 39 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
 40 [-]: NEWTABLE  R11 0 1      ; R11 := {}
 41 [-]: SETTABLE  R11 K14 R6   ; R11["FRIEND"] := R6
 42 [-]: CALL      R7 5 2       ; R7 := R7(R8,R9,R10,R11)
 43 [-]: MOVE      R4 R7        ; R4 := R7
 44 [-]: JMP       54           ; PC := 54
 45 [-]: GETGLOBAL R7 K11       ; R7 := 0xae91e43b
 46 [-]: SELF      R7 R7 K12    ; R8 := R7; R7 := R7[0x42b04007]
 47 [-]: GETUPVAL  R9 U0        ; R9 := U0
 48 [-]: GETTABLE  R9 R9 K15    ; R82 := R9[0x3230dc3e]
 49 [-]: MOVE      R10 R1       ; R10 := R1
 50 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 51 [-]: OP_LOADBOOL R10 0 0      ; R10 := false
 52 [-]: CALL      R7 4 2       ; R7 := R7(R8,R9,R10)
 53 [-]: MOVE      R4 R7        ; R4 := R7
 54 [-]: SELF      R7 R3 K16    ; R8 := R3; R7 := R3[0xd4f2405e]
 55 [-]: MOVE      R9 R4        ; R9 := R4
 56 [-]: CALL      R7 3 1       ; R7(R8,R9)
 57 [-]: TEST      R2 1         ; if R2 then PC := 61
 58 [-]: JMP       61           ; PC := 61
 59 [-]: GETUPVAL  R7 U1        ; R7 := U1
 60 [-]: CALL      R7 1 1       ; R7()
 61 [-]: RETURN    R0 1         ; return 
 62 [-]: GETGLOBAL R7 K17       ; R7 := 0x015284cd
 63 [-]: LOADK     R8 K18       ; R8 := ","
 64 [-]: MOVE      R9 R1        ; R9 := R1
 65 [-]: CALL      R7 3 2       ; R7 := R7(R8,R9)
 66 [-]: GETGLOBAL R8 K4        ; R8 := 0x7b998233
 67 [-]: GETTABLE  R9 R7 K8     ; R9 := R7[1.000000]
 68 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 69 [-]: TEST      R8 0         ; if not R8 then PC := 73
 70 [-]: JMP       73           ; PC := 73
 71 [-]: GETTABLE  R8 R7 K19    ; R8 := R7[2.000000]
 72 [-]: SETTABLE  R7 K8 R8     ; R7[1.000000] := R8
 73 [-]: LEN       R8 R7        ; R8 := # R7
 74 [-]: EQ        0 R8 K19     ; if R8 ~= 2.000000 then PC := 143
 75 [-]: JMP       143          ; PC := 143
 76 [-]: GETGLOBAL R8 K4        ; R8 := 0x7b998233
 77 [-]: GETTABLE  R9 R7 K8     ; R9 := R7[1.000000]
 78 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 79 [-]: TEST      R8 1         ; if R8 then PC := 143
 80 [-]: JMP       143          ; PC := 143
 81 [-]: GETGLOBAL R8 K4        ; R8 := 0x7b998233
 82 [-]: GETTABLE  R9 R7 K19    ; R9 := R7[2.000000]
 83 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 84 [-]: TEST      R8 1         ; if R8 then PC := 143
 85 [-]: JMP       143          ; PC := 143
 86 [-]: TEST      R2 1         ; if R2 then PC := 121
 87 [-]: JMP       121          ; PC := 121
 88 [-]: GETUPVAL  R8 U2        ; R8 := U2
 89 [-]: GETTABLE  R9 R7 K19    ; R9 := R7[2.000000]
 90 [-]: GETTABLE  R10 R7 K8    ; R10 := R7[1.000000]
 91 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 92 [-]: TEST      R8 0         ; if not R8 then PC := 143
 93 [-]: JMP       143          ; PC := 143
 94 [-]: GETGLOBAL R8 K4        ; R8 := 0x7b998233
 95 [-]: GETUPVAL  R9 U3        ; R9 := U3
 96 [-]: CALL      R8 2 2       ; R8 := R8(R9)
 97 [-]: TEST      R8 1         ; if R8 then PC := 143
 98 [-]: JMP       143          ; PC := 143
 99 [-]: GETGLOBAL R8 K20       ; R8 := 0xe7f2b02f
100 [-]: SELF      R8 R8 K21    ; R9 := R8; R8 := R8[0x0b151d80]
101 [-]: CALL      R8 2 2       ; R8 := R8(R9)
102 [-]: GETGLOBAL R9 K4        ; R9 := 0x7b998233
103 [-]: MOVE      R10 R8       ; R10 := R8
104 [-]: CALL      R9 2 2       ; R9 := R9(R10)
105 [-]: TEST      R9 1         ; if R9 then PC := 143
106 [-]: JMP       143          ; PC := 143
107 [-]: GETUPVAL  R9 U4        ; R9 := U4
108 [-]: GETUPVAL  R10 U3       ; R10 := U3
109 [-]: GETTABLE  R11 R7 K19   ; R11 := R7[2.000000]
110 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
111 [-]: TEST      R9 1         ; if R9 then PC := 143
112 [-]: JMP       143          ; PC := 143
113 [-]: SELF      R9 R8 K22    ; R10 := R8; R9 := R8[0xc329e249]
114 [-]: GETUPVAL  R11 U3       ; R11 := U3
115 [-]: GETTABLE  R12 R7 K19   ; R12 := R7[2.000000]
116 [-]: OP_LOADBOOL R13 1 0      ; R13 := true
117 [-]: CALL      R9 5 1       ; R9(R10,R11,R12,R13)
118 [-]: GETUPVAL  R9 U1        ; R9 := U1
119 [-]: CALL      R9 1 1       ; R9()
120 [-]: JMP       143          ; PC := 143
121 [-]: GETUPVAL  R9 U5        ; R9 := U5
122 [-]: GETTABLE  R10 R7 K19   ; R10 := R7[2.000000]
123 [-]: GETTABLE  R11 R7 K8    ; R11 := R7[1.000000]
124 [-]: CALL      R9 3 2       ; R9 := R9(R10,R11)
125 [-]: GETTABLE  R10 R9 K23   ; R10 := R9["mIsActive"]
126 [-]: TEST      R10 1        ; if R10 then PC := 143
127 [-]: JMP       143          ; PC := 143
128 [-]: GETGLOBAL R10 K4       ; R10 := 0x7b998233
129 [-]: GETTABLE  R11 R9 K24   ; R11 := R9["mTabElement"]
130 [-]: CALL      R10 2 2      ; R10 := R10(R11)
131 [-]: TEST      R10 1        ; if R10 then PC := 143
132 [-]: JMP       143          ; PC := 143
133 [-]: GETGLOBAL R10 K4       ; R10 := 0x7b998233
134 [-]: GETGLOBAL R11 K2       ; R11 := mWindow
135 [-]: CALL      R10 2 2      ; R10 := R10(R11)
136 [-]: TEST      R10 1        ; if R10 then PC := 143
137 [-]: JMP       143          ; PC := 143
138 [-]: GETGLOBAL R10 K2       ; R10 := mWindow
139 [-]: GETTABLE  R10 R10 K25  ; R10 := R10["mTabMenu"]
140 [-]: SELF      R10 R10 K26  ; R11 := R10; R10 := R10[0x4e65573c]
141 [-]: GETTABLE  R12 R9 K24   ; R12 := R9["mTabElement"]
142 [-]: CALL      R10 3 1      ; R10(R11,R12)
143 [-]: RETURN    R0 1         ; return 


; Function #235:
;
; Name:            
; Defined at line: 11252
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #236:
;
; Name:            
; Defined at line: 11256
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
  5 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
  6 [-]: RETURN    R0 1         ; return 


; Function #237:
;
; Name:            
; Defined at line: 11260
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: TEST      R0 1         ; if R0 then PC := 20
  2 [-]: JMP       20           ; PC := 20
  3 [-]: GETGLOBAL R2 K0        ; R2 := 0x3d106989
  4 [-]: LOADK     R3 K1        ; R3 := "FAILURE: "
  5 [-]: MOVE      R4 R1        ; R4 := R1
  6 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  7 [-]: CALL      R2 2 1       ; R2(R3)
  8 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
  9 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xd4f2405e]
 10 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 11 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0x42b04007]
 12 [-]: GETUPVAL  R6 U0        ; R6 := U0
 13 [-]: GETTABLE  R6 R6 K6     ; R82 := R6[0x3230dc3e]
 14 [-]: MOVE      R7 R1        ; R7 := R1
 15 [-]: CALL      R6 2 2       ; R6 := R6(R7)
 16 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 17 [-]: CALL      R4 4 0       ; R4,... := R4(R5,R6,R7)
 18 [-]: CALL      R2 0 1       ; R2(R3,...)
 19 [-]: RETURN    R0 1         ; return 
 20 [-]: GETGLOBAL R2 K7        ; R2 := 0x015284cd
 21 [-]: LOADK     R3 K8        ; R3 := ","
 22 [-]: MOVE      R4 R1        ; R4 := R1
 23 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 24 [-]: LEN       R3 R2        ; R3 := # R2
 25 [-]: LE        0 K9 R3      ; if 1.000000 > R3 then PC := 67
 26 [-]: JMP       67           ; PC := 67
 27 [-]: GETGLOBAL R3 K10       ; R3 := 0x7b998233
 28 [-]: GETTABLE  R4 R2 K9     ; R4 := R2[1.000000]
 29 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 30 [-]: TEST      R3 1         ; if R3 then PC := 67
 31 [-]: JMP       67           ; PC := 67
 32 [-]: GETGLOBAL R3 K11       ; R3 := 0x76ea806b
 33 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0x3f3ae64c]
 34 [-]: CONST     R5 0         ; R5 := 0.000000
 35 [-]: CALL      R3 3 2       ; R3 := R3(R4,R5)
 36 [-]: GETGLOBAL R4 K10       ; R4 := 0x7b998233
 37 [-]: MOVE      R5 R3        ; R5 := R3
 38 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 39 [-]: TEST      R4 1         ; if R4 then PC := 55
 40 [-]: JMP       55           ; PC := 55
 41 [-]: SELF      R4 R3 K13    ; R5 := R3; R4 := R3[0xcac617c9]
 42 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 43 [-]: GETTABLE  R5 R2 K9     ; R5 := R2[1.000000]
 44 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 55
 45 [-]: JMP       55           ; PC := 55
 46 [-]: GETGLOBAL R4 K2        ; R4 := mWindow
 47 [-]: SELF      R4 R4 K3     ; R5 := R4; R4 := R4[0xd4f2405e]
 48 [-]: GETGLOBAL R6 K4        ; R6 := 0xae91e43b
 49 [-]: SELF      R6 R6 K5     ; R7 := R6; R6 := R6[0x42b04007]
 50 [-]: LOADK     R8 K14       ; R8 := "/Lotus/Language/Menu/SocialOverlay_PlayerAlreadyInGame"
 51 [-]: OP_LOADBOOL R9 0 0       ; R9 := false
 52 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
 53 [-]: CALL      R4 0 1       ; R4(R5,...)
 54 [-]: RETURN    R0 1         ; return 
 55 [-]: GETTABLE  R4 R2 K15    ; R4 := R2[2.000000]
 56 [-]: EQ        1 R4 K16     ; if R4 == nil then PC := 67
 57 [-]: JMP       67           ; PC := 67
 58 [-]: GETGLOBAL R4 K17       ; R4 := 0xe7f2b02f
 59 [-]: SELF      R4 R4 K18    ; R5 := R4; R4 := R4[0xd76c454f]
 60 [-]: GETTABLE  R6 R2 K9     ; R6 := R2[1.000000]
 61 [-]: GETTABLE  R7 R2 K15    ; R7 := R2[2.000000]
 62 [-]: GETUPVAL  R8 U1        ; R8 := U1
 63 [-]: GETTABLE  R8 R8 K19    ; R82 := R8[0x79138344]
 64 [-]: CALL      R8 1 2       ; R8 := R8()
 65 [-]: LOADK     R9 K20       ; R9 := "SendGameInviteCallback"
 66 [-]: CALL      R4 6 1       ; R4(R5,R6,R7,R8,R9)
 67 [-]: RETURN    R0 1         ; return 


; Function #238:
;
; Name:            
; Defined at line: 11284
; #Upvalues:       1
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETUPVAL  R2 U0        ; R2 := U0
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: MOVE      R4 R1        ; R4 := R1
  4 [-]: CALL      R2 3 1       ; R2(R3,R4)
  5 [-]: RETURN    R0 1         ; return 


; Function #239:
;
; Name:            
; Defined at line: 11288
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x20b98db3]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.TabMenu.LeftBumper.Tf.text"
  4 [-]: LOADK     R3 K3        ; R3 := "<MENU_LTRIGGER2>"
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x20b98db3]
  8 [-]: LOADK     R2 K4        ; R2 := "Window.TabMenu.RightBumper.Tf.text"
  9 [-]: LOADK     R3 K5        ; R3 := "<MENU_RTRIGGER2>"
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: GETGLOBAL R0 K6        ; R0 := 0x34291f5c
 12 [-]: GETTABLE  R0 R0 K7     ; R82 := R0[0x1467d5f4]
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: GETTABLE  R1 R1 K8     ; R82 := R1[0x06d055f9]
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: LOADK     R3 K9        ; R3 := "<TOGGLE_CHAT_WINDOW_ALT>"
 18 [-]: LOADK     R4 K10       ; R4 := "<TOGGLE_CHAT_WINDOW>"
 19 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 20 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
 21 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x42b04007]
 22 [-]: MOVE      R4 R1        ; R4 := R1
 23 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
 24 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 25 [-]: EQ        0 R2 R1      ; if R2 ~= R1 then PC := 30
 26 [-]: JMP       30           ; PC := 30
 27 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 28 [-]: TEST      R3 1         ; if R3 then PC := 35
 29 [-]: JMP       35           ; PC := 35
 30 [-]: GETGLOBAL R3 K6        ; R3 := 0x34291f5c
 31 [-]: GETTABLE  R3 R3 K12    ; R82 := R3[0x781669d7]
 32 [-]: CALL      R3 1 2       ; R3 := R3()
 33 [-]: TEST      R3 0         ; if not R3 then PC := 36
 34 [-]: JMP       36           ; PC := 36
 35 [-]: LOADK     R2 K13       ; R2 := ""
 36 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 37 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x20b98db3]
 38 [-]: LOADK     R5 K14       ; R5 := "Window.Hint.Callout.text"
 39 [-]: MOVE      R6 R2        ; R6 := R2
 40 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 41 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 42 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x20b98db3]
 43 [-]: LOADK     R5 K15       ; R5 := "Window.TabMenu.ExpandCallout.Tf.text"
 44 [-]: MOVE      R6 R2        ; R6 := R2
 45 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 46 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 47 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x20b98db3]
 48 [-]: LOADK     R5 K16       ; R5 := "Window.TabbedChatPanel.FilterCallout.Tf.text"
 49 [-]: LOADK     R6 K17       ; R6 := "<MENU_GENERIC2>"
 50 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 51 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 52 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x20b98db3]
 53 [-]: LOADK     R5 K18       ; R5 := "Window.SendMessageBar.EmojiBtn.Callout.Tf.text"
 54 [-]: LOADK     R6 K19       ; R6 := "<MENU_RTRIGGER1>"
 55 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 56 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 57 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x20b98db3]
 58 [-]: LOADK     R5 K20       ; R5 := "Window.SendMessageBar.HyperlinkBtn.Callout.Tf.text"
 59 [-]: LOADK     R6 K21       ; R6 := "<MENU_LTHUMB>"
 60 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 61 [-]: GETGLOBAL R3 K0        ; R3 := 0xae91e43b
 62 [-]: SELF      R3 R3 K1     ; R4 := R3; R3 := R3[0x20b98db3]
 63 [-]: LOADK     R5 K22       ; R5 := "Window.UserPanel.Panel.LocatorBtn.Callout.Tf.text"
 64 [-]: LOADK     R6 K23       ; R6 := "<MENU_RTHUMB>"
 65 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 66 [-]: RETURN    R0 1         ; return 


; Function #240:
;
; Name:            
; Defined at line: 11307
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  8

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserPanel"]
  4 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  5 [-]: TEST      R0 1         ; if R0 then PC := 43
  6 [-]: JMP       43           ; PC := 43
  7 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  8 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  9 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserPanel"]
 10 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mEmoteGrid"]
 11 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 12 [-]: TEST      R0 1         ; if R0 then PC := 43
 13 [-]: JMP       43           ; PC := 43
 14 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 15 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mUserPanel"]
 16 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["mEmoteGrid"]
 17 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0x7c09c373]
 18 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 19 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 20 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 21 [-]: CONST     R0 1         ; R0 := 1.000000
 22 [-]: GETUPVAL  R1 U0        ; R1 := U0
 23 [-]: LEN       R1 R1        ; R1 := # R1
 24 [-]: CONST     R2 1         ; R2 := 1.000000
 25 [-]: FORPREP   R0 36        ; R0 -= R2; PC := 36
 26 [-]: GETGLOBAL R4 K1        ; R4 := mWindow
 27 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mUserPanel"]
 28 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mEmoteGrid"]
 29 [-]: SELF      R4 R4 K5     ; R5 := R4; R4 := R4[0xbad4316f]
 30 [-]: NEWTABLE  R6 0 1       ; R6 := {}
 31 [-]: GETUPVAL  R7 U0        ; R7 := U0
 32 [-]: GETTABLE  R7 R7 R3     ; R7 := R7[R3]
 33 [-]: SETTABLE  R6 K6 R7     ; R6["mTag"] := R7
 34 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 35 [-]: CALL      R4 4 1       ; R4(R5,R6,R7)
 36 [-]: FORLOOP   R0 26        ; R0 += R2; if R0 <= R1 then begin PC := 26; R3 := R0 end
 37 [-]: GETGLOBAL R4 K1        ; R4 := mWindow
 38 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["mUserPanel"]
 39 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mEmoteGrid"]
 40 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x741d078c]
 41 [-]: CLOSURE   R6 0         ; R6 := closure(Function #240.1)
 42 [-]: CALL      R4 3 1       ; R4(R5,R6)
 43 [-]: RETURN    R0 1         ; return 


; Function #240.1:
;
; Name:            
; Defined at line: 11315
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mEmoteGrid"]
  4 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0xb15e6aca]
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #241:
;
; Name:            
; Defined at line: 11321
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: GETUPVAL  R0 U1        ; R0 := U1
  4 [-]: CALL      R0 1 1       ; R0()
  5 [-]: GETGLOBAL R0 K0        ; R0 := mWindow
  6 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xcbf89887]
  7 [-]: GETGLOBAL R2 K0        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K0     ; R2 := R2["mWindow"]
  9 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["width"]
 10 [-]: GETGLOBAL R3 K0        ; R3 := mWindow
 11 [-]: GETTABLE  R3 R3 K0     ; R3 := R3["mWindow"]
 12 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["height"]
 13 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 14 [-]: RETURN    R0 1         ; return 


; Function #242:
;
; Name:            
; Defined at line: 11328
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x20b98db3]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.Hint.Callout.text"
  4 [-]: LOADK     R3 K3        ; R3 := ""
  5 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  7 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x20b98db3]
  8 [-]: LOADK     R2 K4        ; R2 := "Window.TabMenu.ExpandCallout.Tf.text"
  9 [-]: LOADK     R3 K3        ; R3 := ""
 10 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 11 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 12 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x20b98db3]
 13 [-]: LOADK     R2 K5        ; R2 := "Window.TabMenu.LeftBumper.Tf.text"
 14 [-]: LOADK     R3 K3        ; R3 := ""
 15 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 16 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 17 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x20b98db3]
 18 [-]: LOADK     R2 K6        ; R2 := "Window.TabMenu.RightBumper.Tf.text"
 19 [-]: LOADK     R3 K3        ; R3 := ""
 20 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 21 [-]: GETUPVAL  R0 U0        ; R0 := U0
 22 [-]: CALL      R0 1 1       ; R0()
 23 [-]: GETGLOBAL R0 K7        ; R0 := 0x34291f5c
 24 [-]: GETTABLE  R0 R0 K8     ; R82 := R0[0x1467d5f4]
 25 [-]: CALL      R0 1 2       ; R0 := R0()
 26 [-]: TEST      R0 0         ; if not R0 then PC := 79
 27 [-]: JMP       79           ; PC := 79
 28 [-]: GETGLOBAL R0 K9        ; R0 := 0x7b998233
 29 [-]: GETUPVAL  R1 U1        ; R1 := U1
 30 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 31 [-]: TEST      R0 1         ; if R0 then PC := 36
 32 [-]: JMP       36           ; PC := 36
 33 [-]: GETUPVAL  R0 U1        ; R0 := U1
 34 [-]: NEWTABLE  R1 0 0       ; R1 := {}
 35 [-]: SETTABLE  R0 K10 R1    ; R0["mTimers"] := R1
 36 [-]: GETGLOBAL R0 K9        ; R0 := 0x7b998233
 37 [-]: GETGLOBAL R1 K11       ; R1 := mWindow
 38 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 39 [-]: TEST      R0 1         ; if R0 then PC := 79
 40 [-]: JMP       79           ; PC := 79
 41 [-]: GETGLOBAL R0 K9        ; R0 := 0x7b998233
 42 [-]: GETGLOBAL R1 K11       ; R1 := mWindow
 43 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["mInputPanel"]
 44 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 45 [-]: TEST      R0 1         ; if R0 then PC := 56
 46 [-]: JMP       56           ; PC := 56
 47 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
 48 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x20b98db3]
 49 [-]: GETGLOBAL R2 K11       ; R2 := mWindow
 50 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mInputPanel"]
 51 [-]: GETTABLE  R2 R2 K13    ; R2 := R2["mClipPath"]
 52 [-]: LOADK     R3 K14       ; R3 := ".Callout.Tf.text"
 53 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
 54 [-]: LOADK     R3 K15       ; R3 := "<MENU_GENERIC1>"
 55 [-]: CALL      R0 4 1       ; R0(R1,R2,R3)
 56 [-]: GETGLOBAL R0 K9        ; R0 := 0x7b998233
 57 [-]: GETGLOBAL R1 K11       ; R1 := mWindow
 58 [-]: GETTABLE  R1 R1 K16    ; R1 := R1["mPanelList"]
 59 [-]: GETGLOBAL R2 K11       ; R2 := mWindow
 60 [-]: GETTABLE  R2 R2 K17    ; R2 := R2["mActivePanelName"]
 61 [-]: GETTABLE  R1 R1 R2     ; R1 := R1[R2]
 62 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 63 [-]: TEST      R0 1         ; if R0 then PC := 73
 64 [-]: JMP       73           ; PC := 73
 65 [-]: GETGLOBAL R0 K11       ; R0 := mWindow
 66 [-]: GETTABLE  R0 R0 K16    ; R0 := R0["mPanelList"]
 67 [-]: GETGLOBAL R1 K11       ; R1 := mWindow
 68 [-]: GETTABLE  R1 R1 K17    ; R1 := R1["mActivePanelName"]
 69 [-]: GETTABLE  R0 R0 R1     ; R0 := R0[R1]
 70 [-]: SELF      R1 R0 K18    ; R2 := R0; R1 := R0[0x3bd10f9e]
 71 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 72 [-]: CALL      R1 3 1       ; R1(R2,R3)
 73 [-]: GETGLOBAL R1 K11       ; R1 := mWindow
 74 [-]: GETTABLE  R1 R1 K19    ; R1 := R1["mUserPanel"]
 75 [-]: GETTABLE  R1 R1 K20    ; R1 := R1["mListControl"]
 76 [-]: SELF      R1 R1 K21    ; R2 := R1; R1 := R1[0xea061e98]
 77 [-]: CLOSURE   R3 0         ; R3 := closure(Function #242.1)
 78 [-]: CALL      R1 3 1       ; R1(R2,R3)
 79 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 80 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0xaade900e]
 81 [-]: LOADK     R3 K23       ; R3 := "Window.SendMessageBar.EmojiBtn.Callout"
 82 [-]: CONST     R4 11        ; R4 := 11.000000
 83 [-]: GETGLOBAL R5 K7        ; R5 := 0x34291f5c
 84 [-]: GETTABLE  R5 R5 K8     ; R82 := R5[0x1467d5f4]
 85 [-]: CALL      R5 1 0       ; R5,... := R5()
 86 [-]: CALL      R1 0 1       ; R1(R2,...)
 87 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 88 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0xaade900e]
 89 [-]: LOADK     R3 K24       ; R3 := "Window.UserPanel.Panel.LocatorBtn.Callout"
 90 [-]: CONST     R4 11        ; R4 := 11.000000
 91 [-]: GETGLOBAL R5 K7        ; R5 := 0x34291f5c
 92 [-]: GETTABLE  R5 R5 K8     ; R82 := R5[0x1467d5f4]
 93 [-]: CALL      R5 1 0       ; R5,... := R5()
 94 [-]: CALL      R1 0 1       ; R1(R2,...)
 95 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
 96 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0xaade900e]
 97 [-]: LOADK     R3 K25       ; R3 := "Window.TabbedChatPanel.FilterCallout"
 98 [-]: CONST     R4 11        ; R4 := 11.000000
 99 [-]: GETGLOBAL R5 K7        ; R5 := 0x34291f5c
100 [-]: GETTABLE  R5 R5 K8     ; R82 := R5[0x1467d5f4]
101 [-]: CALL      R5 1 0       ; R5,... := R5()
102 [-]: CALL      R1 0 1       ; R1(R2,...)
103 [-]: GETGLOBAL R1 K9        ; R1 := 0x7b998233
104 [-]: GETGLOBAL R2 K11       ; R2 := mWindow
105 [-]: CALL      R1 2 2       ; R1 := R1(R2)
106 [-]: TEST      R1 1         ; if R1 then PC := 170
107 [-]: JMP       170          ; PC := 170
108 [-]: GETGLOBAL R1 K9        ; R1 := 0x7b998233
109 [-]: GETGLOBAL R2 K11       ; R2 := mWindow
110 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mInputPanel"]
111 [-]: CALL      R1 2 2       ; R1 := R1(R2)
112 [-]: TEST      R1 1         ; if R1 then PC := 170
113 [-]: JMP       170          ; PC := 170
114 [-]: GETGLOBAL R1 K11       ; R1 := mWindow
115 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["mInputPanel"]
116 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
117 [-]: SELF      R2 R2 K27    ; R3 := R2; R2 := R2[0x42b04007]
118 [-]: LOADK     R4 K28       ; R4 := "<WARNING>"
119 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
120 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
121 [-]: SETTABLE  R1 K26 R2    ; R1[0x34291f5c] := R2
122 [-]: GETGLOBAL R1 K11       ; R1 := mWindow
123 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["mInputPanel"]
124 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
125 [-]: SELF      R2 R2 K27    ; R3 := R2; R2 := R2[0x42b04007]
126 [-]: LOADK     R4 K30       ; R4 := "<PROBLEM>"
127 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
128 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
129 [-]: SETTABLE  R1 K29 R2    ; R1[0x42b04007] := R2
130 [-]: GETGLOBAL R1 K11       ; R1 := mWindow
131 [-]: GETTABLE  R1 R1 K12    ; R1 := R1["mInputPanel"]
132 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
133 [-]: SELF      R2 R2 K27    ; R3 := R2; R2 := R2[0x42b04007]
134 [-]: LOADK     R4 K32       ; R4 := "<TIMER>"
135 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
136 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
137 [-]: SETTABLE  R1 K31 R2    ; R1["TimerIcon"] := R2
138 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
139 [-]: SELF      R1 R1 K33    ; R2 := R1; R1 := R1[0xf64b7262]
140 [-]: GETGLOBAL R3 K11       ; R3 := mWindow
141 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mInputPanel"]
142 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mClipPath"]
143 [-]: LOADK     R4 K34       ; R4 := "Prompt"
144 [-]: CONST     R5 0         ; R5 := 0.000000
145 [-]: GETUPVAL  R6 U2        ; R6 := U2
146 [-]: GETTABLE  R6 R6 K35    ; R82 := R6[0x06d055f9]
147 [-]: GETGLOBAL R7 K7        ; R7 := 0x34291f5c
148 [-]: GETTABLE  R7 R7 K8     ; R82 := R7[0x1467d5f4]
149 [-]: CALL      R7 1 2       ; R7 := R7()
150 [-]: GETGLOBAL R8 K11       ; R8 := mWindow
151 [-]: GETTABLE  R8 R8 K12    ; R8 := R8["mInputPanel"]
152 [-]: GETTABLE  R8 R8 K36    ; R8 := R8["mInitPromptXPos"]
153 [-]: ADD       R8 R8 K37    ; R8 := R8 + 25.000000
154 [-]: GETGLOBAL R9 K11       ; R9 := mWindow
155 [-]: GETTABLE  R9 R9 K12    ; R9 := R9["mInputPanel"]
156 [-]: GETTABLE  R9 R9 K36    ; R9 := R9["mInitPromptXPos"]
157 [-]: CALL      R6 4 0       ; R6,... := R6(R7,R8,R9)
158 [-]: CALL      R1 0 1       ; R1(R2,...)
159 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
160 [-]: SELF      R1 R1 K38    ; R2 := R1; R1 := R1[0xc0a3774b]
161 [-]: GETGLOBAL R3 K11       ; R3 := mWindow
162 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mInputPanel"]
163 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["mClipPath"]
164 [-]: LOADK     R4 K39       ; R4 := "Callout"
165 [-]: CONST     R5 11        ; R5 := 11.000000
166 [-]: GETGLOBAL R6 K7        ; R6 := 0x34291f5c
167 [-]: GETTABLE  R6 R6 K8     ; R82 := R6[0x1467d5f4]
168 [-]: CALL      R6 1 0       ; R6,... := R6()
169 [-]: CALL      R1 0 1       ; R1(R2,...)
170 [-]: GETGLOBAL R1 K0        ; R1 := 0xae91e43b
171 [-]: SELF      R1 R1 K22    ; R2 := R1; R1 := R1[0xaade900e]
172 [-]: LOADK     R3 K40       ; R3 := "Window.TabMenu.ExpandCallout"
173 [-]: CONST     R4 11        ; R4 := 11.000000
174 [-]: GETGLOBAL R5 K11       ; R5 := mWindow
175 [-]: GETTABLE  R5 R5 K41    ; R5 := R5["mVisualMode"]
176 [-]: GETGLOBAL R6 K11       ; R6 := mWindow
177 [-]: GETTABLE  R6 R6 K42    ; R6 := R6["VISUAL_MODE_MENU_SIMPLE"]
178 [-]: EQ        1 R5 R6      ; if R5 == R6 then PC := 181
179 [-]: JMP       181          ; PC := 181
180 [-]: OP_LOADBOOL R5 0 1       ; R5 := false; PC := 181
181 [-]: OP_LOADBOOL R5 1 0       ; R5 := true
182 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
183 [-]: GETGLOBAL R1 K11       ; R1 := mWindow
184 [-]: GETTABLE  R1 R1 K41    ; R1 := R1["mVisualMode"]
185 [-]: GETGLOBAL R2 K11       ; R2 := mWindow
186 [-]: GETTABLE  R2 R2 K43    ; R2 := R2["VISUAL_MODE_MENU_FULL"]
187 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 195
188 [-]: JMP       195          ; PC := 195
189 [-]: GETGLOBAL R1 K11       ; R1 := mWindow
190 [-]: GETTABLE  R1 R1 K41    ; R1 := R1["mVisualMode"]
191 [-]: GETGLOBAL R2 K11       ; R2 := mWindow
192 [-]: GETTABLE  R2 R2 K44    ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
193 [-]: EQ        0 R1 R2      ; if R1 ~= R2 then PC := 199
194 [-]: JMP       199          ; PC := 199
195 [-]: GETGLOBAL R1 K11       ; R1 := mWindow
196 [-]: SELF      R1 R1 K45    ; R2 := R1; R1 := R1[0x48d0b431]
197 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
198 [-]: CALL      R1 3 1       ; R1(R2,R3)
199 [-]: GETUPVAL  R1 U3        ; R1 := U3
200 [-]: CALL      R1 1 1       ; R1()
201 [-]: RETURN    R0 1         ; return 


; Function #242.1:
;
; Name:            
; Defined at line: 11352
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETTABLE  R1 R0 K0     ; R1 := R0["mClipName"]
  2 [-]: EQ        1 R1 K1      ; if R1 == nil then PC := 11
  3 [-]: JMP       11           ; PC := 11
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  5 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x20b98db3]
  6 [-]: GETTABLE  R3 R0 K0     ; R3 := R0["mClipName"]
  7 [-]: LOADK     R4 K4        ; R4 := ".Callout.Tf.text"
  8 [-]: CONCAT    R3 R3 R4     ; R3 := R3 .. R4
  9 [-]: LOADK     R4 K5        ; R4 := "<MENU_SELECT>"
 10 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 11 [-]: RETURN    R0 1         ; return 


; Function #243:
;
; Name:            
; Defined at line: 11384
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 75
  5 [-]: JMP       75           ; PC := 75
  6 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
  7 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x67bc869f]
  8 [-]: LOADK     R3 K4        ; R3 := "Window.TabbedChatPanel.FilterBtn"
  9 [-]: CONST     R4 0         ; R4 := 0.000000
 10 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 11 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x91a24e4b]
 12 [-]: LOADK     R7 K4        ; R7 := "Window.TabbedChatPanel.FilterBtn"
 13 [-]: CONST     R8 0         ; R8 := 0.000000
 14 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 15 [-]: GETUPVAL  R6 U0        ; R6 := U0
 16 [-]: GETTABLE  R6 R6 K6     ; R82 := R6[0x06d055f9]
 17 [-]: EQ        1 R0 K7      ; if R0 == "true" then PC := 20
 18 [-]: JMP       20           ; PC := 20
 19 [-]: OP_LOADBOOL R7 0 1       ; R7 := false; PC := 20
 20 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 21 [-]: GETGLOBAL R8 K1        ; R8 := mWindow
 22 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["mFilterBtnOffset"]
 23 [-]: GETGLOBAL R9 K1        ; R9 := mWindow
 24 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["mFilterBtnOffset"]
 25 [-]: UNM       R9 R9        ; R9 := ^ R9
 26 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 27 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 28 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 29 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 30 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x67bc869f]
 31 [-]: LOADK     R3 K9        ; R3 := "Window.TabbedChatPanel.FilterList"
 32 [-]: CONST     R4 0         ; R4 := 0.000000
 33 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 34 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x91a24e4b]
 35 [-]: LOADK     R7 K9        ; R7 := "Window.TabbedChatPanel.FilterList"
 36 [-]: CONST     R8 0         ; R8 := 0.000000
 37 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 38 [-]: GETUPVAL  R6 U0        ; R6 := U0
 39 [-]: GETTABLE  R6 R6 K6     ; R82 := R6[0x06d055f9]
 40 [-]: EQ        1 R0 K7      ; if R0 == "true" then PC := 43
 41 [-]: JMP       43           ; PC := 43
 42 [-]: OP_LOADBOOL R7 0 1       ; R7 := false; PC := 43
 43 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 44 [-]: GETGLOBAL R8 K1        ; R8 := mWindow
 45 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["mFilterBtnOffset"]
 46 [-]: GETGLOBAL R9 K1        ; R9 := mWindow
 47 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["mFilterBtnOffset"]
 48 [-]: UNM       R9 R9        ; R9 := ^ R9
 49 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 50 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 51 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 52 [-]: GETGLOBAL R1 K2        ; R1 := 0xae91e43b
 53 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0x67bc869f]
 54 [-]: LOADK     R3 K10       ; R3 := "Window.TabbedChatPanel.FilterListMask"
 55 [-]: CONST     R4 0         ; R4 := 0.000000
 56 [-]: GETGLOBAL R5 K2        ; R5 := 0xae91e43b
 57 [-]: SELF      R5 R5 K5     ; R6 := R5; R5 := R5[0x91a24e4b]
 58 [-]: LOADK     R7 K10       ; R7 := "Window.TabbedChatPanel.FilterListMask"
 59 [-]: CONST     R8 0         ; R8 := 0.000000
 60 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 61 [-]: GETUPVAL  R6 U0        ; R6 := U0
 62 [-]: GETTABLE  R6 R6 K6     ; R82 := R6[0x06d055f9]
 63 [-]: EQ        1 R0 K7      ; if R0 == "true" then PC := 66
 64 [-]: JMP       66           ; PC := 66
 65 [-]: OP_LOADBOOL R7 0 1       ; R7 := false; PC := 66
 66 [-]: OP_LOADBOOL R7 1 0       ; R7 := true
 67 [-]: GETGLOBAL R8 K1        ; R8 := mWindow
 68 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["mFilterBtnOffset"]
 69 [-]: GETGLOBAL R9 K1        ; R9 := mWindow
 70 [-]: GETTABLE  R9 R9 K8     ; R9 := R9["mFilterBtnOffset"]
 71 [-]: UNM       R9 R9        ; R9 := ^ R9
 72 [-]: CALL      R6 4 2       ; R6 := R6(R7,R8,R9)
 73 [-]: ADD       R5 R5 R6     ; R5 := R5 + R6
 74 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 75 [-]: RETURN    R0 1         ; return 


; Function #244:
;
; Name:            
; Defined at line: 11392
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  2 [-]: GETTABLE  R0 R0 K1     ; R82 := R0[0x1467d5f4]
  3 [-]: CALL      R0 1 2       ; R0 := R0()
  4 [-]: TEST      R0 1         ; if R0 then PC := 26
  5 [-]: JMP       26           ; PC := 26
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x34291f5c
  7 [-]: GETTABLE  R0 R0 K2     ; R82 := R0[0x399826a5]
  8 [-]: CALL      R0 1 2       ; R0 := R0()
  9 [-]: TEST      R0 1         ; if R0 then PC := 26
 10 [-]: JMP       26           ; PC := 26
 11 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 12 [-]: GETGLOBAL R1 K4        ; R1 := mWindow
 13 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 14 [-]: TEST      R0 1         ; if R0 then PC := 26
 15 [-]: JMP       26           ; PC := 26
 16 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
 17 [-]: GETGLOBAL R1 K4        ; R1 := mWindow
 18 [-]: GETTABLE  R1 R1 K5     ; R1 := R1["mInputPanel"]
 19 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 20 [-]: TEST      R0 1         ; if R0 then PC := 26
 21 [-]: JMP       26           ; PC := 26
 22 [-]: GETGLOBAL R0 K4        ; R0 := mWindow
 23 [-]: GETTABLE  R0 R0 K5     ; R0 := R0["mInputPanel"]
 24 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0x8a543a3f]
 25 [-]: CALL      R0 2 1       ; R0(R1)
 26 [-]: RETURN    R0 1         ; return 


; Function #245:
;
; Name:            
; Defined at line: 11399
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  15

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K2        ; R1 := mGameData
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: TEST      R0 0         ; if not R0 then PC := 12
 10 [-]: JMP       12           ; PC := 12
 11 [-]: RETURN    R0 1         ; return 
 12 [-]: GETGLOBAL R0 K2        ; R0 := mGameData
 13 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x20693eb7]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: CONST     R1 1         ; R1 := 1.000000
 16 [-]: LEN       R2 R0        ; R2 := # R0
 17 [-]: CONST     R3 1         ; R3 := 1.000000
 18 [-]: FORPREP   R1 83        ; R1 -= R3; PC := 83
 19 [-]: GETTABLE  R5 R0 R4     ; R5 := R0[R4]
 20 [-]: GETGLOBAL R6 K1        ; R6 := mWindow
 21 [-]: GETTABLE  R6 R6 K4     ; R82 := R6[0xfe8039a9]
 22 [-]: CALL      R6 1 2       ; R6 := R6()
 23 [-]: GETTABLE  R7 R5 K5     ; R7 := R5["mDisplayName"]
 24 [-]: CONCAT    R6 R6 R7     ; R6 := R6 .. R7
 25 [-]: GETGLOBAL R7 K1        ; R7 := mWindow
 26 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["mPanelList"]
 27 [-]: GETTABLE  R7 R7 R6     ; R7 := R7[R6]
 28 [-]: EQ        1 R7 K7      ; if R7 == nil then PC := 83
 29 [-]: JMP       83           ; PC := 83
 30 [-]: GETTABLE  R8 R5 K8     ; R8 := R5["mHasAccount"]
 31 [-]: TEST      R8 0         ; if not R8 then PC := 83
 32 [-]: JMP       83           ; PC := 83
 33 [-]: GETTABLE  R8 R7 K9     ; R8 := R7["mPreviousPresState"]
 34 [-]: EQ        1 R8 K7      ; if R8 == nil then PC := 80
 35 [-]: JMP       80           ; PC := 80
 36 [-]: GETTABLE  R8 R7 K9     ; R8 := R7["mPreviousPresState"]
 37 [-]: GETTABLE  R9 R5 K10    ; R9 := R5["mPresence"]
 38 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["state"]
 39 [-]: EQ        1 R8 R9      ; if R8 == R9 then PC := 80
 40 [-]: JMP       80           ; PC := 80
 41 [-]: LOADNIL   R8 R8        ; R8 := nil
 42 [-]: GETTABLE  R9 R7 K9     ; R9 := R7["mPreviousPresState"]
 43 [-]: EQ        0 R9 K13     ; if R9 ~= 0.000000 then PC := 59
 44 [-]: JMP       59           ; PC := 59
 45 [-]: GETTABLE  R9 R5 K10    ; R9 := R5["mPresence"]
 46 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["state"]
 47 [-]: EQ        1 R9 K13     ; if R9 == 0.000000 then PC := 59
 48 [-]: JMP       59           ; PC := 59
 49 [-]: GETGLOBAL R9 K14       ; R9 := 0xae91e43b
 50 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9[0x42b04007]
 51 [-]: LOADK     R11 K16      ; R11 := "/Lotus/Language/Menu/Chat_PrivateConvoOnline"
 52 [-]: OP_LOADBOOL R12 0 0      ; R12 := false
 53 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 54 [-]: GETTABLE  R14 R5 K5    ; R14 := R5["mDisplayName"]
 55 [-]: SETTABLE  R13 K17 R14  ; R13["PARTNER"] := R14
 56 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 57 [-]: MOVE      R8 R9        ; R8 := R9
 58 [-]: JMP       75           ; PC := 75
 59 [-]: GETTABLE  R9 R7 K9     ; R9 := R7["mPreviousPresState"]
 60 [-]: EQ        1 R9 K13     ; if R9 == 0.000000 then PC := 75
 61 [-]: JMP       75           ; PC := 75
 62 [-]: GETTABLE  R9 R5 K10    ; R9 := R5["mPresence"]
 63 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["state"]
 64 [-]: EQ        0 R9 K13     ; if R9 ~= 0.000000 then PC := 75
 65 [-]: JMP       75           ; PC := 75
 66 [-]: GETGLOBAL R9 K14       ; R9 := 0xae91e43b
 67 [-]: SELF      R9 R9 K15    ; R10 := R9; R9 := R9[0x42b04007]
 68 [-]: LOADK     R11 K18      ; R11 := "/Lotus/Language/Menu/Chat_PrivateConvoOffline"
 69 [-]: OP_LOADBOOL R12 0 0      ; R12 := false
 70 [-]: NEWTABLE  R13 0 1      ; R13 := {}
 71 [-]: GETTABLE  R14 R5 K5    ; R14 := R5["mDisplayName"]
 72 [-]: SETTABLE  R13 K17 R14  ; R13["PARTNER"] := R14
 73 [-]: CALL      R9 5 2       ; R9 := R9(R10,R11,R12,R13)
 74 [-]: MOVE      R8 R9        ; R8 := R9
 75 [-]: EQ        1 R8 K7      ; if R8 == nil then PC := 80
 76 [-]: JMP       80           ; PC := 80
 77 [-]: SELF      R9 R7 K19    ; R10 := R7; R9 := R7[0xd4f2405e]
 78 [-]: MOVE      R11 R8       ; R11 := R8
 79 [-]: CALL      R9 3 1       ; R9(R10,R11)
 80 [-]: GETTABLE  R9 R5 K10    ; R9 := R5["mPresence"]
 81 [-]: GETTABLE  R9 R9 K11    ; R9 := R9["state"]
 82 [-]: SETTABLE  R7 K9 R9     ; R7["mPreviousPresState"] := R9
 83 [-]: FORLOOP   R1 19        ; R1 += R3; if R1 <= R2 then begin PC := 19; R4 := R1 end
 84 [-]: RETURN    R0 1         ; return 


; Function #246:
;
; Name:            
; Defined at line: 11429
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETTABLE  R0 R0 K1     ; R0 := R0["NextRichPresenceResync"]
  3 [-]: EQ        0 R0 K2      ; if R0 ~= nil then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETGLOBAL R0 K0        ; R0 := _T
  6 [-]: GETGLOBAL R1 K3        ; R1 := 0x0a8f62a7
  7 [-]: CALL      R1 1 2       ; R1 := R1()
  8 [-]: GETUPVAL  R2 U0        ; R2 := U0
  9 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["RICH_PRESENCE_RESYNC_INTERVAL"]
 10 [-]: ADD       R1 R1 R2     ; R1 := R1 + R2
 11 [-]: SETTABLE  R0 K1 R1     ; R0["NextRichPresenceResync"] := R1
 12 [-]: RETURN    R0 1         ; return 


; Function #247:
;
; Name:            
; Defined at line: 11436
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: TEST      R0 0         ; if not R0 then PC := 5
  2 [-]: JMP       5            ; PC := 5
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: CALL      R1 1 1       ; R1()
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["NextLitePresenceResync"]
  7 [-]: EQ        0 R1 K2      ; if R1 ~= nil then PC := 16
  8 [-]: JMP       16           ; PC := 16
  9 [-]: GETGLOBAL R1 K0        ; R1 := _T
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0x0a8f62a7
 11 [-]: CALL      R2 1 2       ; R2 := R2()
 12 [-]: GETUPVAL  R3 U1        ; R3 := U1
 13 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["LITE_PRESENCE_RESYNC_INTERVAL"]
 14 [-]: ADD       R2 R2 R3     ; R2 := R2 + R3
 15 [-]: SETTABLE  R1 K1 R2     ; R1["NextLitePresenceResync"] := R2
 16 [-]: RETURN    R0 1         ; return 


; Function #248:
;
; Name:            
; Defined at line: 11447
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
  2 [-]: SETUPVAL  R0 U0        ; U82 := 
  3 [-]: RETURN    R0 1         ; return 


; Function #249:
;
; Name:            
; Defined at line: 11451
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mGameData
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 16
  5 [-]: JMP       16           ; PC := 16
  6 [-]: GETGLOBAL R0 K1        ; R0 := mGameData
  7 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x20693eb7]
  8 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  9 [-]: EQ        1 R0 K3      ; if R0 == nil then PC := 16
 10 [-]: JMP       16           ; PC := 16
 11 [-]: LEN       R1 R0        ; R1 := # R0
 12 [-]: LT        0 K4 R1      ; if 0.000000 >= R1 then PC := 16
 13 [-]: JMP       16           ; PC := 16
 14 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 15 [-]: RETURN    R1 2         ; return R1
 16 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 17 [-]: RETURN    R1 2         ; return R1
 18 [-]: RETURN    R0 1         ; return 


; Function #250:
;
; Name:            
; Defined at line: 11463
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["BackgroundMovie"]
  3 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xe4162eed]
  4 [-]: LOADK     R3 K3        ; R3 := "RefreshLoadout"
  5 [-]: LOADK     R4 K4        ; R4 := ""
  6 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
  7 [-]: GETGLOBAL R1 K0        ; R1 := _T
  8 [-]: NEWTABLE  R2 0 2       ; R2 := {}
  9 [-]: SETTABLE  R2 K6 K7     ; R2["ITEM"] := nil
 10 [-]: GETUPVAL  R3 U0        ; R3 := U0
 11 [-]: SETTABLE  R2 K8 R3     ; R2["CALLBACK"] := R3
 12 [-]: SETTABLE  R1 K5 R2     ; R1["marketDetailedViewParms"] := R2
 13 [-]: RETURN    R0 1         ; return 


; Function #251:
;
; Name:            
; Defined at line: 11468
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: SETUPVAL  R1 U0        ; U82 := 
  2 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
  3 [-]: SETGLOBALHASH R1 K0        ; mInputBlocked := R1
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETUPVAL  R2 U1        ; R2 := U1
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 17
  8 [-]: JMP       17           ; PC := 17
  9 [-]: GETUPVAL  R1 U1        ; R1 := U1
 10 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0xe4162eed]
 11 [-]: LOADK     R3 K3        ; R3 := "HideScreen"
 12 [-]: LOADK     R4 K4        ; R4 := "false"
 13 [-]: CALL      R1 4 1       ; R1(R2,R3,R4)
 14 [-]: LOADNIL   R1 R1        ; R1 := nil
 15 [-]: SETUPVAL  R1 U1        ; U82 := 
 16 [-]: JMP       39           ; PC := 39
 17 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 18 [-]: GETGLOBAL R2 K5        ; R2 := _T
 19 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["GetScreenRes"]
 20 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 21 [-]: TEST      R1 1         ; if R1 then PC := 39
 22 [-]: JMP       39           ; PC := 39
 23 [-]: GETGLOBAL R1 K7        ; R1 := 0x9ba7909f
 24 [-]: SELF      R1 R1 K8     ; R2 := R1; R1 := R1[0xbcfb64ab]
 25 [-]: GETGLOBAL R3 K5        ; R3 := _T
 26 [-]: GETTABLE  R3 R3 K9     ; R82 := R3[0x14e3a848]
 27 [-]: LOADK     R4 K10       ; R4 := "Store"
 28 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 29 [-]: CALL      R1 0 2       ; R1 := R1(R2,...)
 30 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 31 [-]: MOVE      R3 R1        ; R3 := R1
 32 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 33 [-]: TEST      R2 1         ; if R2 then PC := 39
 34 [-]: JMP       39           ; PC := 39
 35 [-]: SELF      R2 R1 K2     ; R3 := R1; R2 := R1[0xe4162eed]
 36 [-]: LOADK     R4 K11       ; R4 := "RefreshVisibilityMaterials"
 37 [-]: LOADK     R5 K12       ; R5 := ""
 38 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 39 [-]: GETGLOBAL R2 K13       ; R2 := 0x34291f5c
 40 [-]: GETTABLE  R2 R2 K14    ; R82 := R2[0x1467d5f4]
 41 [-]: CALL      R2 1 2       ; R2 := R2()
 42 [-]: TEST      R2 1         ; if R2 then PC := 58
 43 [-]: JMP       58           ; PC := 58
 44 [-]: GETGLOBAL R2 K13       ; R2 := 0x34291f5c
 45 [-]: GETTABLE  R2 R2 K15    ; R82 := R2[0xe6b41adb]
 46 [-]: CALL      R2 1 2       ; R2 := R2()
 47 [-]: TEST      R2 1         ; if R2 then PC := 58
 48 [-]: JMP       58           ; PC := 58
 49 [-]: GETGLOBAL R2 K13       ; R2 := 0x34291f5c
 50 [-]: GETTABLE  R2 R2 K16    ; R82 := R2[0x399826a5]
 51 [-]: CALL      R2 1 2       ; R2 := R2()
 52 [-]: TEST      R2 1         ; if R2 then PC := 58
 53 [-]: JMP       58           ; PC := 58
 54 [-]: GETGLOBAL R2 K17       ; R2 := mWindow
 55 [-]: GETTABLE  R2 R2 K18    ; R2 := R2["mInputPanel"]
 56 [-]: SELF      R2 R2 K19    ; R3 := R2; R2 := R2[0x8a543a3f]
 57 [-]: CALL      R2 2 1       ; R2(R3)
 58 [-]: GETUPVAL  R2 U2        ; R2 := U2
 59 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
 60 [-]: CALL      R2 2 1       ; R2(R3)
 61 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 62 [-]: GETGLOBAL R3 K5        ; R3 := _T
 63 [-]: GETTABLE  R3 R3 K20    ; R3 := R3["BackgroundMovie"]
 64 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 65 [-]: TEST      R2 1         ; if R2 then PC := 73
 66 [-]: JMP       73           ; PC := 73
 67 [-]: GETGLOBAL R2 K5        ; R2 := _T
 68 [-]: GETTABLE  R2 R2 K20    ; R2 := R2["BackgroundMovie"]
 69 [-]: SELF      R2 R2 K2     ; R3 := R2; R2 := R2[0xe4162eed]
 70 [-]: LOADK     R4 K21       ; R4 := "RefreshLoadout"
 71 [-]: LOADK     R5 K12       ; R5 := ""
 72 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 73 [-]: GETGLOBAL R2 K5        ; R2 := _T
 74 [-]: SETTABLE  R2 K22 K23   ; R2["ChatLinkOpen"] := false
 75 [-]: RETURN    R0 1         ; return 


; Function #252:
;
; Name:            
; Defined at line: 11496
; #Upvalues:       19
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  45

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: LOADK     R2 K0        ; R2 := "/Lotus/Language/Menu/Chat_LoadingScreenBlocked"
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 10
  5 [-]: JMP       10           ; PC := 10
  6 [-]: GETGLOBAL R1 K1        ; R1 := 0x0032441c
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["StalkerMode"]
  8 [-]: TEST      R1 0         ; if not R1 then PC := 11
  9 [-]: JMP       11           ; PC := 11
 10 [-]: RETURN    R0 1         ; return 
 11 [-]: GETGLOBAL R1 K3        ; R1 := 0x7f5022cf
 12 [-]: GETTABLE  R1 R1 K4     ; R82 := R1[0x1a94c9cc]
 13 [-]: MOVE      R2 R0        ; R2 := R0
 14 [-]: CONST     R3 1         ; R3 := 1.000000
 15 [-]: CONST     R4 1         ; R4 := 1.000000
 16 [-]: CALL      R1 4 2       ; R1 := R1(R2,R3,R4)
 17 [-]: EQ        0 R1 K5      ; if R1 ~= "@" then PC := 47
 18 [-]: JMP       47           ; PC := 47
 19 [-]: LOADNIL   R1 R1        ; R1 := nil
 20 [-]: SELF      R2 R0 K6     ; R3 := R0; R2 := R0[0x348c01f7]
 21 [-]: LOADK     R4 K7        ; R4 := "^@%[[0-9][0-9]:[0-9][0-9]%] "
 22 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 23 [-]: EQ        1 R2 K8      ; if R2 == nil then PC := 37
 24 [-]: JMP       37           ; PC := 37
 25 [-]: GETGLOBAL R2 K3        ; R2 := 0x7f5022cf
 26 [-]: GETTABLE  R2 R2 K4     ; R82 := R2[0x1a94c9cc]
 27 [-]: MOVE      R3 R0        ; R3 := R0
 28 [-]: GETGLOBAL R4 K3        ; R4 := 0x7f5022cf
 29 [-]: GETTABLE  R4 R4 K9     ; R82 := R4[0xa5c556b9]
 30 [-]: MOVE      R5 R0        ; R5 := R0
 31 [-]: LOADK     R6 K10       ; R6 := " "
 32 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 33 [-]: ADD       R4 R4 K11    ; R4 := R4 + 1.000000
 34 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 35 [-]: MOVE      R1 R2        ; R1 := R2
 36 [-]: JMP       43           ; PC := 43
 37 [-]: GETGLOBAL R2 K3        ; R2 := 0x7f5022cf
 38 [-]: GETTABLE  R2 R2 K4     ; R82 := R2[0x1a94c9cc]
 39 [-]: MOVE      R3 R0        ; R3 := R0
 40 [-]: CONST     R4 2         ; R4 := 2.000000
 41 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 42 [-]: MOVE      R1 R2        ; R1 := R2
 43 [-]: GETUPVAL  R2 U1        ; R2 := U1
 44 [-]: MOVE      R3 R1        ; R3 := R1
 45 [-]: CALL      R2 2 1       ; R2(R3)
 46 [-]: JMP       953          ; PC := 953
 47 [-]: GETGLOBAL R2 K3        ; R2 := 0x7f5022cf
 48 [-]: GETTABLE  R2 R2 K4     ; R82 := R2[0x1a94c9cc]
 49 [-]: MOVE      R3 R0        ; R3 := R0
 50 [-]: CONST     R4 1         ; R4 := 1.000000
 51 [-]: CONST     R5 6         ; R5 := 6.000000
 52 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 53 [-]: EQ        0 R2 K12     ; if R2 ~= "GUILD=" then PC := 82
 54 [-]: JMP       82           ; PC := 82
 55 [-]: GETGLOBAL R2 K3        ; R2 := 0x7f5022cf
 56 [-]: GETTABLE  R2 R2 K9     ; R82 := R2[0xa5c556b9]
 57 [-]: MOVE      R3 R0        ; R3 := R0
 58 [-]: LOADK     R4 K13       ; R4 := ":"
 59 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 60 [-]: GETGLOBAL R3 K3        ; R3 := 0x7f5022cf
 61 [-]: GETTABLE  R3 R3 K4     ; R82 := R3[0x1a94c9cc]
 62 [-]: MOVE      R4 R0        ; R4 := R0
 63 [-]: CONST     R5 7         ; R5 := 7.000000
 64 [-]: SUB       R6 R2 K11    ; R6 := R2 - 1.000000
 65 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 66 [-]: GETGLOBAL R4 K3        ; R4 := 0x7f5022cf
 67 [-]: GETTABLE  R4 R4 K4     ; R82 := R4[0x1a94c9cc]
 68 [-]: MOVE      R5 R0        ; R5 := R0
 69 [-]: ADD       R6 R2 K11    ; R6 := R2 + 1.000000
 70 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 71 [-]: GETGLOBAL R5 K14       ; R5 := _T
 72 [-]: SETTABLE  R5 K15 K16   ; R5["SelectedIsGuild"] := true
 73 [-]: GETGLOBAL R5 K14       ; R5 := _T
 74 [-]: SETTABLE  R5 K17 R4    ; R5["SelectedProfileName"] := R4
 75 [-]: GETGLOBAL R5 K14       ; R5 := _T
 76 [-]: SETTABLE  R5 K18 R3    ; R5["SelectedProfileId"] := R3
 77 [-]: GETGLOBAL R5 K14       ; R5 := _T
 78 [-]: GETTABLE  R5 R5 K19    ; R82 := R5[0x32bb15a6]
 79 [-]: LOADK     R6 K20       ; R6 := "Profile"
 80 [-]: CALL      R5 2 1       ; R5(R6)
 81 [-]: JMP       953          ; PC := 953
 82 [-]: GETGLOBAL R5 K21       ; R5 := 0x7b998233
 83 [-]: GETUPVAL  R6 U2        ; R6 := U2
 84 [-]: CALL      R5 2 2       ; R5 := R5(R6)
 85 [-]: TEST      R5 1         ; if R5 then PC := 88
 86 [-]: JMP       88           ; PC := 88
 87 [-]: RETURN    R0 1         ; return 
 88 [-]: LOADNIL   R5 R8        ; R5 := R6 := R7 := R8 := nil
 89 [-]: LOADK     R9 K22       ; R9 := ""
 90 [-]: GETGLOBAL R10 K3       ; R10 := 0x7f5022cf
 91 [-]: GETTABLE  R10 R10 K23  ; R82 := R10[0x04981ab3]
 92 [-]: GETGLOBAL R11 K3       ; R11 := 0x7f5022cf
 93 [-]: GETTABLE  R11 R11 K4   ; R82 := R11[0x1a94c9cc]
 94 [-]: MOVE      R12 R0       ; R12 := R0
 95 [-]: CONST     R13 1        ; R13 := 1.000000
 96 [-]: CONST     R14 4        ; R14 := 4.000000
 97 [-]: CALL      R11 4 0      ; R11,... := R11(R12,R13,R14)
 98 [-]: CALL      R10 0 2      ; R10 := R10(R11,...)
 99 [-]: EQ        0 R10 K24    ; if R10 ~= "omg-" then PC := 143
100 [-]: JMP       143          ; PC := 143
101 [-]: GETGLOBAL R10 K3       ; R10 := 0x7f5022cf
102 [-]: GETTABLE  R10 R10 K9   ; R82 := R10[0xa5c556b9]
103 [-]: MOVE      R11 R0       ; R11 := R0
104 [-]: LOADK     R12 K13      ; R12 := ":"
105 [-]: CALL      R10 3 2      ; R10 := R10(R11,R12)
106 [-]: GETGLOBAL R11 K25      ; R11 := 0xb009bbc6
107 [-]: GETUPVAL  R12 U3       ; R12 := U3
108 [-]: GETTABLE  R12 R12 K26  ; R12 := R12["OMEGA_TYPE_PREFIX"]
109 [-]: GETGLOBAL R13 K3       ; R13 := 0x7f5022cf
110 [-]: GETTABLE  R13 R13 K4   ; R82 := R13[0x1a94c9cc]
111 [-]: MOVE      R14 R0       ; R14 := R0
112 [-]: CONST     R15 5        ; R15 := 5.000000
113 [-]: SUB       R16 R10 K11  ; R16 := R10 - 1.000000
114 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
115 [-]: CONCAT    R12 R12 R13  ; R12 := R12 .. R13
116 [-]: CALL      R11 2 2      ; R11 := R11(R12)
117 [-]: GETGLOBAL R12 K21      ; R12 := 0x7b998233
118 [-]: MOVE      R13 R11      ; R13 := R11
119 [-]: CALL      R12 2 2      ; R12 := R12(R13)
120 [-]: TEST      R12 1        ; if R12 then PC := 841
121 [-]: JMP       841          ; PC := 841
122 [-]: SELF      R12 R11 K27  ; R13 := R11; R12 := R11[0x6f4df5bc]
123 [-]: GETGLOBAL R14 K3       ; R14 := 0x7f5022cf
124 [-]: GETTABLE  R14 R14 K4   ; R82 := R14[0x1a94c9cc]
125 [-]: MOVE      R15 R0       ; R15 := R0
126 [-]: ADD       R16 R10 K11  ; R16 := R10 + 1.000000
127 [-]: CALL      R14 3 0      ; R14,... := R14(R15,R16)
128 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
129 [-]: MOVE      R6 R12       ; R6 := R12
130 [-]: GETGLOBAL R12 K25      ; R12 := 0xb009bbc6
131 [-]: GETUPVAL  R13 U3       ; R13 := U3
132 [-]: GETTABLE  R13 R13 K28  ; R13 := R13["OMEGA_STOREITEM_PREFIX"]
133 [-]: GETGLOBAL R14 K3       ; R14 := 0x7f5022cf
134 [-]: GETTABLE  R14 R14 K4   ; R82 := R14[0x1a94c9cc]
135 [-]: MOVE      R15 R0       ; R15 := R0
136 [-]: CONST     R16 5        ; R16 := 5.000000
137 [-]: SUB       R17 R10 K11  ; R17 := R10 - 1.000000
138 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
139 [-]: CONCAT    R13 R13 R14  ; R13 := R13 .. R14
140 [-]: CALL      R12 2 2      ; R12 := R12(R13)
141 [-]: MOVE      R5 R12       ; R5 := R12
142 [-]: JMP       841          ; PC := 841
143 [-]: GETGLOBAL R12 K3       ; R12 := 0x7f5022cf
144 [-]: GETTABLE  R12 R12 K23  ; R82 := R12[0x04981ab3]
145 [-]: GETGLOBAL R13 K3       ; R13 := 0x7f5022cf
146 [-]: GETTABLE  R13 R13 K4   ; R82 := R13[0x1a94c9cc]
147 [-]: MOVE      R14 R0       ; R14 := R0
148 [-]: CONST     R15 1        ; R15 := 1.000000
149 [-]: CONST     R16 5        ; R16 := 5.000000
150 [-]: CALL      R13 4 0      ; R13,... := R13(R14,R15,R16)
151 [-]: CALL      R12 0 2      ; R12 := R12(R13,...)
152 [-]: EQ        0 R12 K29    ; if R12 ~= "song-" then PC := 250
153 [-]: JMP       250          ; PC := 250
154 [-]: GETGLOBAL R12 K3       ; R12 := 0x7f5022cf
155 [-]: GETTABLE  R12 R12 K9   ; R82 := R12[0xa5c556b9]
156 [-]: MOVE      R13 R0       ; R13 := R0
157 [-]: LOADK     R14 K13      ; R14 := ":"
158 [-]: CALL      R12 3 2      ; R12 := R12(R13,R14)
159 [-]: EQ        0 R12 K8     ; if R12 ~= nil then PC := 162
160 [-]: JMP       162          ; PC := 162
161 [-]: RETURN    R0 1         ; return 
162 [-]: ADD       R12 R12 K11  ; R12 := R12 + 1.000000
163 [-]: GETGLOBAL R13 K3       ; R13 := 0x7f5022cf
164 [-]: GETTABLE  R13 R13 K9   ; R82 := R13[0xa5c556b9]
165 [-]: MOVE      R14 R0       ; R14 := R0
166 [-]: LOADK     R15 K13      ; R15 := ":"
167 [-]: MOVE      R16 R12      ; R16 := R12
168 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
169 [-]: EQ        0 R13 K8     ; if R13 ~= nil then PC := 172
170 [-]: JMP       172          ; PC := 172
171 [-]: RETURN    R0 1         ; return 
172 [-]: GETGLOBAL R14 K3       ; R14 := 0x7f5022cf
173 [-]: GETTABLE  R14 R14 K4   ; R82 := R14[0x1a94c9cc]
174 [-]: MOVE      R15 R0       ; R15 := R0
175 [-]: MOVE      R16 R12      ; R16 := R12
176 [-]: SUB       R17 R13 K11  ; R17 := R13 - 1.000000
177 [-]: CALL      R14 4 2      ; R14 := R14(R15,R16,R17)
178 [-]: NEWTABLE  R15 0 0      ; R15 := {}
179 [-]: CONST     R16 0        ; R16 := 0.000000
180 [-]: CONST     R17 2        ; R17 := 2.000000
181 [-]: CONST     R18 1        ; R18 := 1.000000
182 [-]: FORPREP   R16 220      ; R16 -= R18; PC := 220
183 [-]: GETGLOBAL R20 K3       ; R20 := 0x7f5022cf
184 [-]: GETTABLE  R20 R20 K9   ; R82 := R20[0xa5c556b9]
185 [-]: MOVE      R21 R0       ; R21 := R0
186 [-]: LOADK     R22 K13      ; R22 := ":"
187 [-]: ADD       R23 R13 K11  ; R23 := R13 + 1.000000
188 [-]: CALL      R20 4 2      ; R20 := R20(R21,R22,R23)
189 [-]: EQ        0 R20 K8     ; if R20 ~= nil then PC := 196
190 [-]: JMP       196          ; PC := 196
191 [-]: GETGLOBAL R21 K3       ; R21 := 0x7f5022cf
192 [-]: GETTABLE  R21 R21 K31  ; R82 := R21[0x41e2ae25]
193 [-]: MOVE      R22 R0       ; R22 := R0
194 [-]: CALL      R21 2 2      ; R21 := R21(R22)
195 [-]: ADD       R20 R21 K11  ; R20 := R21 + 1.000000
196 [-]: GETGLOBAL R21 K32      ; R21 := 0x7ed0a956
197 [-]: GETUPVAL  R22 U3       ; R22 := U3
198 [-]: GETTABLE  R22 R22 K33  ; R22 := R22["STEP_SEQUENCER_NOTEPACK_PREFIX"]
199 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
200 [-]: GETTABLE  R23 R23 K4   ; R82 := R23[0x1a94c9cc]
201 [-]: MOVE      R24 R0       ; R24 := R0
202 [-]: ADD       R25 R13 K11  ; R25 := R13 + 1.000000
203 [-]: SUB       R26 R20 K11  ; R26 := R20 - 1.000000
204 [-]: CALL      R23 4 2      ; R23 := R23(R24,R25,R26)
205 [-]: CONCAT    R22 R22 R23  ; R22 := R22 .. R23
206 [-]: CALL      R21 2 2      ; R21 := R21(R22)
207 [-]: GETGLOBAL R22 K21      ; R22 := 0x7b998233
208 [-]: MOVE      R23 R21      ; R23 := R21
209 [-]: CALL      R22 2 2      ; R22 := R22(R23)
210 [-]: TEST      R22 1        ; if R22 then PC := 219
211 [-]: JMP       219          ; PC := 219
212 [-]: GETGLOBAL R22 K34      ; R22 := 0x33bdd652
213 [-]: GETTABLE  R22 R22 K35  ; R82 := R22[0x23d5322f]
214 [-]: MOVE      R23 R15      ; R23 := R15
215 [-]: NEWTABLE  R24 0 2      ; R24 := {}
216 [-]: SETTABLE  R24 K36 R19  ; R24["NoteType"] := R19
217 [-]: SETTABLE  R24 K37 R21  ; R24["NotePack"] := R21
218 [-]: CALL      R22 3 1      ; R22(R23,R24)
219 [-]: MOVE      R13 R20      ; R13 := R20
220 [-]: FORLOOP   R16 183      ; R16 += R18; if R16 <= R17 then begin PC := 183; R19 := R16 end
221 [-]: GETGLOBAL R22 K14      ; R22 := _T
222 [-]: GETTABLE  R22 R22 K38  ; R22 := R22["ComposeToolOpen"]
223 [-]: EQ        1 R22 K8     ; if R22 == nil then PC := 236
224 [-]: JMP       236          ; PC := 236
225 [-]: GETUPVAL  R22 U3       ; R22 := U3
226 [-]: NEWTABLE  R23 0 2      ; R23 := {}
227 [-]: SETTABLE  R23 K40 R15  ; R23["NotePackInfo"] := R15
228 [-]: SETTABLE  R23 K41 R14  ; R23["FingerPrint"] := R14
229 [-]: SETTABLE  R22 K39 R23  ; R22["StepSequencerPendingRequest"] := R23
230 [-]: GETUPVAL  R22 U4       ; R22 := U4
231 [-]: GETTABLE  R22 R22 K42  ; R82 := R22[0xdedfded7]
232 [-]: LOADK     R23 K43      ; R23 := "/Lotus/Language/Menu/Composition_ConfirmLoad"
233 [-]: LOADK     R24 K44      ; R24 := "ConfirmLoadSong"
234 [-]: CALL      R22 3 1      ; R22(R23,R24)
235 [-]: JMP       841          ; PC := 841
236 [-]: GETGLOBAL R22 K1       ; R22 := 0x0032441c
237 [-]: GETTABLE  R22 R22 K45  ; R22 := R22["UIMovie_DetailedPurchaseDialog"]
238 [-]: EQ        1 R22 K8     ; if R22 == nil then PC := 841
239 [-]: JMP       841          ; PC := 841
240 [-]: GETGLOBAL R22 K25      ; R22 := 0xb009bbc6
241 [-]: GETUPVAL  R23 U3       ; R23 := U3
242 [-]: GETTABLE  R23 R23 K46  ; R23 := R23["STEP_SEQUENCER_PREVIEW"]
243 [-]: CALL      R22 2 2      ; R22 := R22(R23)
244 [-]: MOVE      R5 R22       ; R5 := R22
245 [-]: NEWTABLE  R22 0 2      ; R22 := {}
246 [-]: SETTABLE  R22 K40 R15  ; R22["NotePackInfo"] := R15
247 [-]: SETTABLE  R22 K41 R14  ; R22["FingerPrint"] := R14
248 [-]: MOVE      R7 R22       ; R7 := R22
249 [-]: JMP       841          ; PC := 841
250 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
251 [-]: GETTABLE  R22 R22 K23  ; R82 := R22[0x04981ab3]
252 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
253 [-]: GETTABLE  R23 R23 K4   ; R82 := R23[0x1a94c9cc]
254 [-]: MOVE      R24 R0       ; R24 := R0
255 [-]: CONST     R25 1        ; R25 := 1.000000
256 [-]: CONST     R26 4        ; R26 := 4.000000
257 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
258 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
259 [-]: EQ        1 R22 K47    ; if R22 == "zaw-" then PC := 305
260 [-]: JMP       305          ; PC := 305
261 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
262 [-]: GETTABLE  R22 R22 K23  ; R82 := R22[0x04981ab3]
263 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
264 [-]: GETTABLE  R23 R23 K4   ; R82 := R23[0x1a94c9cc]
265 [-]: MOVE      R24 R0       ; R24 := R0
266 [-]: CONST     R25 1        ; R25 := 1.000000
267 [-]: CONST     R26 4        ; R26 := 4.000000
268 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
269 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
270 [-]: EQ        1 R22 K48    ; if R22 == "amp-" then PC := 305
271 [-]: JMP       305          ; PC := 305
272 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
273 [-]: GETTABLE  R22 R22 K23  ; R82 := R22[0x04981ab3]
274 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
275 [-]: GETTABLE  R23 R23 K4   ; R82 := R23[0x1a94c9cc]
276 [-]: MOVE      R24 R0       ; R24 := R0
277 [-]: CONST     R25 1        ; R25 := 1.000000
278 [-]: CONST     R26 4        ; R26 := 4.000000
279 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
280 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
281 [-]: EQ        1 R22 K49    ; if R22 == "moa-" then PC := 305
282 [-]: JMP       305          ; PC := 305
283 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
284 [-]: GETTABLE  R22 R22 K23  ; R82 := R22[0x04981ab3]
285 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
286 [-]: GETTABLE  R23 R23 K4   ; R82 := R23[0x1a94c9cc]
287 [-]: MOVE      R24 R0       ; R24 := R0
288 [-]: CONST     R25 1        ; R25 := 1.000000
289 [-]: CONST     R26 4        ; R26 := 4.000000
290 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
291 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
292 [-]: EQ        1 R22 K50    ; if R22 == "kdr-" then PC := 305
293 [-]: JMP       305          ; PC := 305
294 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
295 [-]: GETTABLE  R22 R22 K23  ; R82 := R22[0x04981ab3]
296 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
297 [-]: GETTABLE  R23 R23 K4   ; R82 := R23[0x1a94c9cc]
298 [-]: MOVE      R24 R0       ; R24 := R0
299 [-]: CONST     R25 1        ; R25 := 1.000000
300 [-]: CONST     R26 4        ; R26 := 4.000000
301 [-]: CALL      R23 4 0      ; R23,... := R23(R24,R25,R26)
302 [-]: CALL      R22 0 2      ; R22 := R22(R23,...)
303 [-]: EQ        0 R22 K51    ; if R22 ~= "kit-" then PC := 664
304 [-]: JMP       664          ; PC := 664
305 [-]: GETUPVAL  R22 U5       ; R22 := U5
306 [-]: GETTABLE  R5 R22 K52   ; R5 := R22["zawStoreItem"]
307 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
308 [-]: GETTABLE  R22 R22 K4   ; R82 := R22[0x1a94c9cc]
309 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
310 [-]: GETTABLE  R23 R23 K23  ; R82 := R23[0x04981ab3]
311 [-]: MOVE      R24 R0       ; R24 := R0
312 [-]: CALL      R23 2 2      ; R23 := R23(R24)
313 [-]: CONST     R24 1        ; R24 := 1.000000
314 [-]: CONST     R25 4        ; R25 := 4.000000
315 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
316 [-]: EQ        0 R22 K48    ; if R22 ~= "amp-" then PC := 321
317 [-]: JMP       321          ; PC := 321
318 [-]: GETUPVAL  R22 U5       ; R22 := U5
319 [-]: GETTABLE  R5 R22 K53   ; R5 := R22["ampStoreItem"]
320 [-]: JMP       361          ; PC := 361
321 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
322 [-]: GETTABLE  R22 R22 K4   ; R82 := R22[0x1a94c9cc]
323 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
324 [-]: GETTABLE  R23 R23 K23  ; R82 := R23[0x04981ab3]
325 [-]: MOVE      R24 R0       ; R24 := R0
326 [-]: CALL      R23 2 2      ; R23 := R23(R24)
327 [-]: CONST     R24 1        ; R24 := 1.000000
328 [-]: CONST     R25 4        ; R25 := 4.000000
329 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
330 [-]: EQ        0 R22 K49    ; if R22 ~= "moa-" then PC := 335
331 [-]: JMP       335          ; PC := 335
332 [-]: GETUPVAL  R22 U5       ; R22 := U5
333 [-]: GETTABLE  R5 R22 K54   ; R5 := R22["moaPetStoreItem"]
334 [-]: JMP       361          ; PC := 361
335 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
336 [-]: GETTABLE  R22 R22 K4   ; R82 := R22[0x1a94c9cc]
337 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
338 [-]: GETTABLE  R23 R23 K23  ; R82 := R23[0x04981ab3]
339 [-]: MOVE      R24 R0       ; R24 := R0
340 [-]: CALL      R23 2 2      ; R23 := R23(R24)
341 [-]: CONST     R24 1        ; R24 := 1.000000
342 [-]: CONST     R25 4        ; R25 := 4.000000
343 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
344 [-]: EQ        0 R22 K50    ; if R22 ~= "kdr-" then PC := 349
345 [-]: JMP       349          ; PC := 349
346 [-]: GETUPVAL  R22 U5       ; R22 := U5
347 [-]: GETTABLE  R5 R22 K55   ; R5 := R22["kdriveStoreItem"]
348 [-]: JMP       361          ; PC := 361
349 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
350 [-]: GETTABLE  R22 R22 K4   ; R82 := R22[0x1a94c9cc]
351 [-]: GETGLOBAL R23 K3       ; R23 := 0x7f5022cf
352 [-]: GETTABLE  R23 R23 K23  ; R82 := R23[0x04981ab3]
353 [-]: MOVE      R24 R0       ; R24 := R0
354 [-]: CALL      R23 2 2      ; R23 := R23(R24)
355 [-]: CONST     R24 1        ; R24 := 1.000000
356 [-]: CONST     R25 4        ; R25 := 4.000000
357 [-]: CALL      R22 4 2      ; R22 := R22(R23,R24,R25)
358 [-]: EQ        0 R22 K51    ; if R22 ~= "kit-" then PC := 361
359 [-]: JMP       361          ; PC := 361
360 [-]: LOADNIL   R5 R5        ; R5 := nil
361 [-]: GETGLOBAL R22 K3       ; R22 := 0x7f5022cf
362 [-]: GETTABLE  R22 R22 K9   ; R82 := R22[0xa5c556b9]
363 [-]: MOVE      R23 R0       ; R23 := R0
364 [-]: LOADK     R24 K13      ; R24 := ":"
365 [-]: CALL      R22 3 2      ; R22 := R22(R23,R24)
366 [-]: ADD       R22 R22 K11  ; R22 := R22 + 1.000000
367 [-]: LOADNIL   R23 R23      ; R23 := nil
368 [-]: GETGLOBAL R24 K3       ; R24 := 0x7f5022cf
369 [-]: GETTABLE  R24 R24 K4   ; R82 := R24[0x1a94c9cc]
370 [-]: GETGLOBAL R25 K3       ; R25 := 0x7f5022cf
371 [-]: GETTABLE  R25 R25 K23  ; R82 := R25[0x04981ab3]
372 [-]: MOVE      R26 R0       ; R26 := R0
373 [-]: CALL      R25 2 2      ; R25 := R25(R26)
374 [-]: CONST     R26 1        ; R26 := 1.000000
375 [-]: CONST     R27 4        ; R27 := 4.000000
376 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
377 [-]: EQ        0 R24 K49    ; if R24 ~= "moa-" then PC := 404
378 [-]: JMP       404          ; PC := 404
379 [-]: GETGLOBAL R24 K56      ; R24 := 0xf28a43ca
380 [-]: GETGLOBAL R25 K3       ; R25 := 0x7f5022cf
381 [-]: GETTABLE  R25 R25 K4   ; R82 := R25[0x1a94c9cc]
382 [-]: MOVE      R26 R0       ; R26 := R0
383 [-]: MOVE      R27 R22      ; R27 := R22
384 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
385 [-]: GETGLOBAL R26 K57      ; R26 := 0x2c53eb41
386 [-]: LEN       R26 R26      ; R26 := # R26
387 [-]: GETGLOBAL R27 K58      ; R27 := 0x3cf8b1e7
388 [-]: LEN       R27 R27      ; R27 := # R27
389 [-]: GETGLOBAL R28 K59      ; R28 := 0xbaa5088f
390 [-]: LEN       R28 R28      ; R28 := # R28
391 [-]: GETGLOBAL R29 K60      ; R29 := 0x0704bc8b
392 [-]: LEN       R29 R29      ; R29 := # R29
393 [-]: CALL      R24 6 2      ; R24 := R24(R25,R26,R27,R28,R29)
394 [-]: MOVE      R23 R24      ; R23 := R24
395 [-]: GETUPVAL  R24 U6       ; R24 := U6
396 [-]: GETGLOBAL R25 K61      ; R25 := 0x015284cd
397 [-]: LOADK     R26 K62      ; R26 := ","
398 [-]: MOVE      R27 R23      ; R27 := R23
399 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
400 [-]: CONST     R26 6        ; R26 := 6.000000
401 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
402 [-]: MOVE      R8 R24       ; R8 := R24
403 [-]: JMP       529          ; PC := 529
404 [-]: GETGLOBAL R24 K3       ; R24 := 0x7f5022cf
405 [-]: GETTABLE  R24 R24 K4   ; R82 := R24[0x1a94c9cc]
406 [-]: GETGLOBAL R25 K3       ; R25 := 0x7f5022cf
407 [-]: GETTABLE  R25 R25 K23  ; R82 := R25[0x04981ab3]
408 [-]: MOVE      R26 R0       ; R26 := R0
409 [-]: CALL      R25 2 2      ; R25 := R25(R26)
410 [-]: CONST     R26 1        ; R26 := 1.000000
411 [-]: CONST     R27 4        ; R27 := 4.000000
412 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
413 [-]: EQ        0 R24 K50    ; if R24 ~= "kdr-" then PC := 440
414 [-]: JMP       440          ; PC := 440
415 [-]: GETGLOBAL R24 K56      ; R24 := 0xf28a43ca
416 [-]: GETGLOBAL R25 K3       ; R25 := 0x7f5022cf
417 [-]: GETTABLE  R25 R25 K4   ; R82 := R25[0x1a94c9cc]
418 [-]: MOVE      R26 R0       ; R26 := R0
419 [-]: MOVE      R27 R22      ; R27 := R22
420 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
421 [-]: GETGLOBAL R26 K63      ; R26 := 0xc40a6da3
422 [-]: LEN       R26 R26      ; R26 := # R26
423 [-]: GETGLOBAL R27 K64      ; R27 := 0xe85256f6
424 [-]: LEN       R27 R27      ; R27 := # R27
425 [-]: GETGLOBAL R28 K65      ; R28 := 0x9ab3ce7f
426 [-]: LEN       R28 R28      ; R28 := # R28
427 [-]: GETGLOBAL R29 K66      ; R29 := 0x39ea2417
428 [-]: LEN       R29 R29      ; R29 := # R29
429 [-]: CALL      R24 6 2      ; R24 := R24(R25,R26,R27,R28,R29)
430 [-]: MOVE      R23 R24      ; R23 := R24
431 [-]: GETUPVAL  R24 U6       ; R24 := U6
432 [-]: GETGLOBAL R25 K61      ; R25 := 0x015284cd
433 [-]: LOADK     R26 K62      ; R26 := ","
434 [-]: MOVE      R27 R23      ; R27 := R23
435 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
436 [-]: CONST     R26 7        ; R26 := 7.000000
437 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
438 [-]: MOVE      R8 R24       ; R8 := R24
439 [-]: JMP       529          ; PC := 529
440 [-]: GETGLOBAL R24 K3       ; R24 := 0x7f5022cf
441 [-]: GETTABLE  R24 R24 K4   ; R82 := R24[0x1a94c9cc]
442 [-]: GETGLOBAL R25 K3       ; R25 := 0x7f5022cf
443 [-]: GETTABLE  R25 R25 K23  ; R82 := R25[0x04981ab3]
444 [-]: MOVE      R26 R0       ; R26 := R0
445 [-]: CALL      R25 2 2      ; R25 := R25(R26)
446 [-]: CONST     R26 1        ; R26 := 1.000000
447 [-]: CONST     R27 4        ; R27 := 4.000000
448 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
449 [-]: EQ        0 R24 K48    ; if R24 ~= "amp-" then PC := 474
450 [-]: JMP       474          ; PC := 474
451 [-]: GETGLOBAL R24 K56      ; R24 := 0xf28a43ca
452 [-]: GETGLOBAL R25 K3       ; R25 := 0x7f5022cf
453 [-]: GETTABLE  R25 R25 K4   ; R82 := R25[0x1a94c9cc]
454 [-]: MOVE      R26 R0       ; R26 := R0
455 [-]: MOVE      R27 R22      ; R27 := R22
456 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
457 [-]: GETGLOBAL R26 K67      ; R26 := 0x079ca045
458 [-]: LEN       R26 R26      ; R26 := # R26
459 [-]: GETGLOBAL R27 K68      ; R27 := 0x31047143
460 [-]: LEN       R27 R27      ; R27 := # R27
461 [-]: GETGLOBAL R28 K69      ; R28 := 0xdccd285d
462 [-]: LEN       R28 R28      ; R28 := # R28
463 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
464 [-]: MOVE      R23 R24      ; R23 := R24
465 [-]: GETUPVAL  R24 U6       ; R24 := U6
466 [-]: GETGLOBAL R25 K61      ; R25 := 0x015284cd
467 [-]: LOADK     R26 K62      ; R26 := ","
468 [-]: MOVE      R27 R23      ; R27 := R23
469 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
470 [-]: CONST     R26 1        ; R26 := 1.000000
471 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
472 [-]: MOVE      R8 R24       ; R8 := R24
473 [-]: JMP       529          ; PC := 529
474 [-]: GETGLOBAL R24 K3       ; R24 := 0x7f5022cf
475 [-]: GETTABLE  R24 R24 K4   ; R82 := R24[0x1a94c9cc]
476 [-]: GETGLOBAL R25 K3       ; R25 := 0x7f5022cf
477 [-]: GETTABLE  R25 R25 K23  ; R82 := R25[0x04981ab3]
478 [-]: MOVE      R26 R0       ; R26 := R0
479 [-]: CALL      R25 2 2      ; R25 := R25(R26)
480 [-]: CONST     R26 1        ; R26 := 1.000000
481 [-]: CONST     R27 4        ; R27 := 4.000000
482 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
483 [-]: EQ        0 R24 K51    ; if R24 ~= "kit-" then PC := 508
484 [-]: JMP       508          ; PC := 508
485 [-]: GETGLOBAL R24 K56      ; R24 := 0xf28a43ca
486 [-]: GETGLOBAL R25 K3       ; R25 := 0x7f5022cf
487 [-]: GETTABLE  R25 R25 K4   ; R82 := R25[0x1a94c9cc]
488 [-]: MOVE      R26 R0       ; R26 := R0
489 [-]: MOVE      R27 R22      ; R27 := R22
490 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
491 [-]: GETGLOBAL R26 K70      ; R26 := 0x54d06231
492 [-]: LEN       R26 R26      ; R26 := # R26
493 [-]: GETGLOBAL R27 K71      ; R27 := 0x925a60af
494 [-]: LEN       R27 R27      ; R27 := # R27
495 [-]: GETGLOBAL R28 K72      ; R28 := 0x0f7c3ad1
496 [-]: LEN       R28 R28      ; R28 := # R28
497 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
498 [-]: MOVE      R23 R24      ; R23 := R24
499 [-]: GETUPVAL  R24 U6       ; R24 := U6
500 [-]: GETGLOBAL R25 K61      ; R25 := 0x015284cd
501 [-]: LOADK     R26 K62      ; R26 := ","
502 [-]: MOVE      R27 R23      ; R27 := R23
503 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
504 [-]: CONST     R26 2        ; R26 := 2.000000
505 [-]: CALL      R24 3 2      ; R24 := R24(R25,R26)
506 [-]: MOVE      R8 R24       ; R8 := R24
507 [-]: JMP       529          ; PC := 529
508 [-]: GETGLOBAL R24 K56      ; R24 := 0xf28a43ca
509 [-]: GETGLOBAL R25 K3       ; R25 := 0x7f5022cf
510 [-]: GETTABLE  R25 R25 K4   ; R82 := R25[0x1a94c9cc]
511 [-]: MOVE      R26 R0       ; R26 := R0
512 [-]: MOVE      R27 R22      ; R27 := R22
513 [-]: CALL      R25 3 2      ; R25 := R25(R26,R27)
514 [-]: GETGLOBAL R26 K73      ; R26 := 0x9c023f17
515 [-]: LEN       R26 R26      ; R26 := # R26
516 [-]: GETGLOBAL R27 K74      ; R27 := 0xbd493ed1
517 [-]: LEN       R27 R27      ; R27 := # R27
518 [-]: GETGLOBAL R28 K75      ; R28 := 0x1da1be95
519 [-]: LEN       R28 R28      ; R28 := # R28
520 [-]: CALL      R24 5 2      ; R24 := R24(R25,R26,R27,R28)
521 [-]: MOVE      R23 R24      ; R23 := R24
522 [-]: GETUPVAL  R24 U6       ; R24 := U6
523 [-]: GETGLOBAL R25 K61      ; R25 := 0x015284cd
524 [-]: LOADK     R26 K62      ; R26 := ","
525 [-]: MOVE      R27 R23      ; R27 := R23
526 [-]: CALL      R25 3 0      ; R25,... := R25(R26,R27)
527 [-]: CALL      R24 0 2      ; R24 := R24(R25,...)
528 [-]: MOVE      R8 R24       ; R8 := R24
529 [-]: EQ        1 R23 K22    ; if R23 == "" then PC := 841
530 [-]: JMP       841          ; PC := 841
531 [-]: EQ        1 R8 K8      ; if R8 == nil then PC := 841
532 [-]: JMP       841          ; PC := 841
533 [-]: GETGLOBAL R24 K3       ; R24 := 0x7f5022cf
534 [-]: GETTABLE  R24 R24 K4   ; R82 := R24[0x1a94c9cc]
535 [-]: MOVE      R25 R0       ; R25 := R0
536 [-]: CONST     R26 5        ; R26 := 5.000000
537 [-]: SUB       R27 R22 K77  ; R27 := R22 - 2.000000
538 [-]: CALL      R24 4 2      ; R24 := R24(R25,R26,R27)
539 [-]: SETTABLE  R8 K76 R24   ; R8["Name"] := R24
540 [-]: EQ        0 R5 K8      ; if R5 ~= nil then PC := 841
541 [-]: JMP       841          ; PC := 841
542 [-]: CONST     R24 10       ; R24 := 10.000000
543 [-]: CONST     R25 1        ; R25 := 1.000000
544 [-]: GETTABLE  R26 R8 K78   ; R26 := R8["Parts"]
545 [-]: LEN       R26 R26      ; R26 := # R26
546 [-]: CONST     R27 1        ; R27 := 1.000000
547 [-]: FORPREP   R25 566      ; R25 -= R27; PC := 566
548 [-]: GETTABLE  R29 R8 K78   ; R29 := R8["Parts"]
549 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
550 [-]: SELF      R29 R29 K79  ; R30 := R29; R29 := R29[0xf2deaf69]
551 [-]: GETGLOBAL R31 K80      ; R31 := gLotusGunHandleType
552 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
553 [-]: TEST      R29 0        ; if not R29 then PC := 566
554 [-]: JMP       566          ; PC := 566
555 [-]: GETTABLE  R29 R8 K78   ; R29 := R8["Parts"]
556 [-]: GETTABLE  R29 R29 R28  ; R29 := R29[R28]
557 [-]: SELF      R29 R29 K79  ; R30 := R29; R29 := R29[0xf2deaf69]
558 [-]: GETGLOBAL R31 K81      ; R31 := gLotusGunPrimaryHandleType
559 [-]: CALL      R29 3 2      ; R29 := R29(R30,R31)
560 [-]: TEST      R29 0        ; if not R29 then PC := 564
561 [-]: JMP       564          ; PC := 564
562 [-]: CONST     R24 2        ; R24 := 2.000000
563 [-]: JMP       567          ; PC := 567
564 [-]: CONST     R24 3        ; R24 := 3.000000
565 [-]: JMP       567          ; PC := 567
566 [-]: FORLOOP   R25 548      ; R25 += R27; if R25 <= R26 then begin PC := 548; R28 := R25 end
567 [-]: EQ        1 R24 K82    ; if R24 == 10.000000 then PC := 841
568 [-]: JMP       841          ; PC := 841
569 [-]: CONST     R29 1        ; R29 := 1.000000
570 [-]: GETTABLE  R30 R8 K78   ; R30 := R8["Parts"]
571 [-]: LEN       R30 R30      ; R30 := # R30
572 [-]: CONST     R31 1        ; R31 := 1.000000
573 [-]: FORPREP   R29 662      ; R29 -= R31; PC := 662
574 [-]: GETTABLE  R33 R8 K78   ; R33 := R8["Parts"]
575 [-]: GETTABLE  R33 R33 R32  ; R33 := R33[R32]
576 [-]: SELF      R33 R33 K79  ; R34 := R33; R33 := R33[0xf2deaf69]
577 [-]: GETGLOBAL R35 K83      ; R35 := gLotusGunBarrelType
578 [-]: CALL      R33 3 2      ; R33 := R33(R34,R35)
579 [-]: TEST      R33 0        ; if not R33 then PC := 662
580 [-]: JMP       662          ; PC := 662
581 [-]: GETGLOBAL R33 K25      ; R33 := 0xb009bbc6
582 [-]: GETTABLE  R34 R8 K78   ; R34 := R8["Parts"]
583 [-]: GETTABLE  R34 R34 R32  ; R34 := R34[R32]
584 [-]: CALL      R33 2 2      ; R33 := R33(R34)
585 [-]: SELF      R34 R33 K84  ; R35 := R33; R34 := R33[0xc8b94e30]
586 [-]: CALL      R34 2 2      ; R34 := R34(R35)
587 [-]: EQ        0 R34 K85    ; if R34 ~= 0.000000 then PC := 602
588 [-]: JMP       602          ; PC := 602
589 [-]: GETUPVAL  R35 U4       ; R35 := U4
590 [-]: GETTABLE  R35 R35 K86  ; R82 := R35[0x06d055f9]
591 [-]: EQ        1 R24 K77    ; if R24 == 2.000000 then PC := 594
592 [-]: JMP       594          ; PC := 594
593 [-]: OP_LOADBOOL R36 0 1      ; R36 := false; PC := 594
594 [-]: OP_LOADBOOL R36 1 0      ; R36 := true
595 [-]: GETUPVAL  R37 U5       ; R37 := U5
596 [-]: GETTABLE  R37 R37 K87  ; R37 := R37["primaryRifleType"]
597 [-]: GETUPVAL  R38 U5       ; R38 := U5
598 [-]: GETTABLE  R38 R38 K88  ; R38 := R38["secondaryRifleType"]
599 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
600 [-]: MOVE      R5 R35       ; R5 := R35
601 [-]: JMP       841          ; PC := 841
602 [-]: EQ        0 R34 K11    ; if R34 ~= 1.000000 then PC := 617
603 [-]: JMP       617          ; PC := 617
604 [-]: GETUPVAL  R35 U4       ; R35 := U4
605 [-]: GETTABLE  R35 R35 K86  ; R82 := R35[0x06d055f9]
606 [-]: EQ        1 R24 K77    ; if R24 == 2.000000 then PC := 609
607 [-]: JMP       609          ; PC := 609
608 [-]: OP_LOADBOOL R36 0 1      ; R36 := false; PC := 609
609 [-]: OP_LOADBOOL R36 1 0      ; R36 := true
610 [-]: GETUPVAL  R37 U5       ; R37 := U5
611 [-]: GETTABLE  R37 R37 K89  ; R37 := R37["primaryShotgunType"]
612 [-]: GETUPVAL  R38 U5       ; R38 := U5
613 [-]: GETTABLE  R38 R38 K90  ; R38 := R38["secondaryShotgunType"]
614 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
615 [-]: MOVE      R5 R35       ; R5 := R35
616 [-]: JMP       841          ; PC := 841
617 [-]: EQ        0 R34 K77    ; if R34 ~= 2.000000 then PC := 632
618 [-]: JMP       632          ; PC := 632
619 [-]: GETUPVAL  R35 U4       ; R35 := U4
620 [-]: GETTABLE  R35 R35 K86  ; R82 := R35[0x06d055f9]
621 [-]: EQ        1 R24 K77    ; if R24 == 2.000000 then PC := 624
622 [-]: JMP       624          ; PC := 624
623 [-]: OP_LOADBOOL R36 0 1      ; R36 := false; PC := 624
624 [-]: OP_LOADBOOL R36 1 0      ; R36 := true
625 [-]: GETUPVAL  R37 U5       ; R37 := U5
626 [-]: GETTABLE  R37 R37 K91  ; R37 := R37["primarySniperType"]
627 [-]: GETUPVAL  R38 U5       ; R38 := U5
628 [-]: GETTABLE  R38 R38 K92  ; R38 := R38["secondarySniperType"]
629 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
630 [-]: MOVE      R5 R35       ; R5 := R35
631 [-]: JMP       841          ; PC := 841
632 [-]: EQ        0 R34 K93    ; if R34 ~= 3.000000 then PC := 647
633 [-]: JMP       647          ; PC := 647
634 [-]: GETUPVAL  R35 U4       ; R35 := U4
635 [-]: GETTABLE  R35 R35 K86  ; R82 := R35[0x06d055f9]
636 [-]: EQ        1 R24 K77    ; if R24 == 2.000000 then PC := 639
637 [-]: JMP       639          ; PC := 639
638 [-]: OP_LOADBOOL R36 0 1      ; R36 := false; PC := 639
639 [-]: OP_LOADBOOL R36 1 0      ; R36 := true
640 [-]: GETUPVAL  R37 U5       ; R37 := U5
641 [-]: GETTABLE  R37 R37 K94  ; R37 := R37["primaryLauncherType"]
642 [-]: GETUPVAL  R38 U5       ; R38 := U5
643 [-]: GETTABLE  R38 R38 K95  ; R38 := R38["secondaryLauncherType"]
644 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
645 [-]: MOVE      R5 R35       ; R5 := R35
646 [-]: JMP       841          ; PC := 841
647 [-]: EQ        0 R34 K96    ; if R34 ~= 4.000000 then PC := 841
648 [-]: JMP       841          ; PC := 841
649 [-]: GETUPVAL  R35 U4       ; R35 := U4
650 [-]: GETTABLE  R35 R35 K86  ; R82 := R35[0x06d055f9]
651 [-]: EQ        1 R24 K77    ; if R24 == 2.000000 then PC := 654
652 [-]: JMP       654          ; PC := 654
653 [-]: OP_LOADBOOL R36 0 1      ; R36 := false; PC := 654
654 [-]: OP_LOADBOOL R36 1 0      ; R36 := true
655 [-]: GETUPVAL  R37 U5       ; R37 := U5
656 [-]: GETTABLE  R37 R37 K97  ; R37 := R37["primaryBeamType"]
657 [-]: GETUPVAL  R38 U5       ; R38 := U5
658 [-]: GETTABLE  R38 R38 K98  ; R38 := R38["secondaryBeamType"]
659 [-]: CALL      R35 4 2      ; R35 := R35(R36,R37,R38)
660 [-]: MOVE      R5 R35       ; R5 := R35
661 [-]: JMP       841          ; PC := 841
662 [-]: FORLOOP   R29 574      ; R29 += R31; if R29 <= R30 then begin PC := 574; R32 := R29 end
663 [-]: JMP       841          ; PC := 841
664 [-]: GETGLOBAL R35 K3       ; R35 := 0x7f5022cf
665 [-]: GETTABLE  R35 R35 K23  ; R82 := R35[0x04981ab3]
666 [-]: GETGLOBAL R36 K3       ; R36 := 0x7f5022cf
667 [-]: GETTABLE  R36 R36 K4   ; R82 := R36[0x1a94c9cc]
668 [-]: MOVE      R37 R0       ; R37 := R0
669 [-]: CONST     R38 1        ; R38 := 1.000000
670 [-]: CONST     R39 5        ; R39 := 5.000000
671 [-]: CALL      R36 4 0      ; R36,... := R36(R37,R38,R39)
672 [-]: CALL      R35 0 2      ; R35 := R35(R36,...)
673 [-]: EQ        0 R35 K99    ; if R35 ~= "shzn-" then PC := 727
674 [-]: JMP       727          ; PC := 727
675 [-]: GETGLOBAL R35 K21      ; R35 := 0x7b998233
676 [-]: GETGLOBAL R36 K14      ; R36 := _T
677 [-]: GETTABLE  R36 R36 K100 ; R36 := R36["ShawzinMovie"]
678 [-]: CALL      R35 2 2      ; R35 := R35(R36)
679 [-]: TEST      R35 0        ; if not R35 then PC := 691
680 [-]: JMP       691          ; PC := 691
681 [-]: GETUPVAL  R35 U7       ; R35 := U7
682 [-]: GETGLOBAL R36 K101     ; R36 := 0xae91e43b
683 [-]: SELF      R36 R36 K102 ; R37 := R36; R36 := R36[0x42b04007]
684 [-]: LOADK     R38 K103     ; R38 := "/Lotus/Language/Menu/MustUseShawzin"
685 [-]: OP_LOADBOOL R39 0 0      ; R39 := false
686 [-]: CALL      R36 4 2      ; R36 := R36(R37,R38,R39)
687 [-]: LOADK     R37 K22      ; R37 := ""
688 [-]: CONST     R38 1        ; R38 := 1.000000
689 [-]: CALL      R35 4 1      ; R35(R36,R37,R38)
690 [-]: JMP       841          ; PC := 841
691 [-]: GETUPVAL  R35 U8       ; R35 := U8
692 [-]: CALL      R35 1 2      ; R35 := R35()
693 [-]: TEST      R35 1        ; if R35 then PC := 697
694 [-]: JMP       697          ; PC := 697
695 [-]: GETUPVAL  R35 U9       ; R35 := U9
696 [-]: CALL      R35 1 1      ; R35()
697 [-]: GETGLOBAL R35 K104     ; R35 := 0x34291f5c
698 [-]: GETTABLE  R35 R35 K105 ; R82 := R35[0x056bfe8b]
699 [-]: CALL      R35 1 2      ; R35 := R35()
700 [-]: TEST      R35 0        ; if not R35 then PC := 716
701 [-]: JMP       716          ; PC := 716
702 [-]: GETGLOBAL R35 K14      ; R35 := _T
703 [-]: GETTABLE  R35 R35 K100 ; R35 := R35["ShawzinMovie"]
704 [-]: SELF      R35 R35 K106 ; R36 := R35; R35 := R35[0xe4162eed]
705 [-]: LOADK     R37 K107     ; R37 := "SetLoadedSong"
706 [-]: GETGLOBAL R38 K3       ; R38 := 0x7f5022cf
707 [-]: GETTABLE  R38 R38 K4   ; R82 := R38[0x1a94c9cc]
708 [-]: MOVE      R39 R0       ; R39 := R0
709 [-]: CONST     R40 6        ; R40 := 6.000000
710 [-]: CALL      R38 3 2      ; R38 := R38(R39,R40)
711 [-]: LOADK     R39 K108     ; R39 := ",nil,"
712 [-]: CONST     R40 4        ; R40 := 4.000000
713 [-]: CONCAT    R38 R38 R40  ; R38 := R38 .. R39 .. R40
714 [-]: CALL      R35 4 1      ; R35(R36,R37,R38)
715 [-]: JMP       841          ; PC := 841
716 [-]: GETGLOBAL R35 K14      ; R35 := _T
717 [-]: GETTABLE  R35 R35 K100 ; R35 := R35["ShawzinMovie"]
718 [-]: SELF      R35 R35 K106 ; R36 := R35; R35 := R35[0xe4162eed]
719 [-]: LOADK     R37 K109     ; R37 := "LoadSongToMemory"
720 [-]: GETGLOBAL R38 K3       ; R38 := 0x7f5022cf
721 [-]: GETTABLE  R38 R38 K4   ; R82 := R38[0x1a94c9cc]
722 [-]: MOVE      R39 R0       ; R39 := R0
723 [-]: CONST     R40 6        ; R40 := 6.000000
724 [-]: CALL      R38 3 0      ; R38,... := R38(R39,R40)
725 [-]: CALL      R35 0 1      ; R35(R36,...)
726 [-]: JMP       841          ; PC := 841
727 [-]: GETGLOBAL R35 K110     ; R35 := 0x4209ddac
728 [-]: LOADK     R36 K111     ; R36 := "AppearancePreviewDone"
729 [-]: GETUPVAL  R37 U10      ; R37 := U10
730 [-]: GETTABLE  R37 R37 K112 ; R82 := R37[0x3b05de19]
731 [-]: MOVE      R38 R0       ; R38 := R0
732 [-]: OP_LOADBOOL R39 1 0      ; R39 := true
733 [-]: CALL      R37 3 3      ; R37,R38 := R37(R38,R39)
734 [-]: TEST      R37 1        ; if R37 then PC := 747
735 [-]: JMP       747          ; PC := 747
736 [-]: TEST      R38 1        ; if R38 then PC := 747
737 [-]: JMP       747          ; PC := 747
738 [-]: GETGLOBAL R35 K113     ; R35 := 0xdeb439ee
739 [-]: LOADK     R36 K114     ; R36 := "ModPreviewDone"
740 [-]: GETUPVAL  R39 U10      ; R39 := U10
741 [-]: GETTABLE  R39 R39 K115 ; R82 := R39[0x233d2f71]
742 [-]: MOVE      R40 R0       ; R40 := R0
743 [-]: OP_LOADBOOL R41 1 0      ; R41 := true
744 [-]: CALL      R39 3 3      ; R39,R40 := R39(R40,R41)
745 [-]: MOVE      R38 R40      ; R38 := R40
746 [-]: MOVE      R37 R39      ; R37 := R39
747 [-]: TEST      R37 0        ; if not R37 then PC := 810
748 [-]: JMP       810          ; PC := 810
749 [-]: GETUPVAL  R39 U11      ; R39 := U11
750 [-]: GETTABLE  R39 R39 K116 ; R82 := R39[0xb6718d04]
751 [-]: CALL      R39 1 2      ; R39 := R39()
752 [-]: TEST      R39 0        ; if not R39 then PC := 800
753 [-]: JMP       800          ; PC := 800
754 [-]: GETGLOBAL R39 K117     ; R39 := 0x9ba7909f
755 [-]: SELF      R39 R39 K118 ; R40 := R39; R39 := R39[0xbcfb64ab]
756 [-]: GETGLOBAL R41 K32      ; R41 := 0x7ed0a956
757 [-]: LOADK     R42 K119     ; R42 := "/Lotus/Interface/ColorPicker.swf"
758 [-]: CALL      R41 2 0      ; R41,... := R41(R42)
759 [-]: CALL      R39 0 2      ; R39 := R39(R40,...)
760 [-]: GETGLOBAL R40 K21      ; R40 := 0x7b998233
761 [-]: MOVE      R41 R39      ; R41 := R39
762 [-]: CALL      R40 2 2      ; R40 := R40(R41)
763 [-]: TEST      R40 1        ; if R40 then PC := 769
764 [-]: JMP       769          ; PC := 769
765 [-]: SELF      R40 R39 K106 ; R41 := R39; R40 := R39[0xe4162eed]
766 [-]: LOADK     R42 K120     ; R42 := "Close"
767 [-]: LOADK     R43 K121     ; R43 := "true"
768 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
769 [-]: GETGLOBAL R40 K101     ; R40 := 0xae91e43b
770 [-]: SELF      R40 R40 K123 ; R41 := R40; R40 := R40[0x1fd6abd0]
771 [-]: MOVE      R42 R35      ; R42 := R35
772 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
773 [-]: SETGLOBALHASH R40 K122     ; mChildMovie := R40
774 [-]: GETGLOBAL R40 K21      ; R40 := 0x7b998233
775 [-]: GETGLOBAL R41 K122     ; R41 := mChildMovie
776 [-]: CALL      R40 2 2      ; R40 := R40(R41)
777 [-]: TEST      R40 1        ; if R40 then PC := 840
778 [-]: JMP       840          ; PC := 840
779 [-]: OP_LOADBOOL R40 1 0      ; R40 := true
780 [-]: SETGLOBALHASH R40 K124     ; mInputBlocked := R40
781 [-]: GETUPVAL  R40 U12      ; R40 := U12
782 [-]: OP_LOADBOOL R41 1 0      ; R41 := true
783 [-]: CALL      R40 2 1      ; R40(R41)
784 [-]: GETGLOBAL R40 K14      ; R40 := _T
785 [-]: CLOSURE   R41 0        ; R41 := closure(Function #252.1)
786 [-]: MOVE      R0 R36       ; R0 := R36
787 [-]: GETUPVAL  R0 U12       ; R0 := U12
788 [-]: SETTABLE  R40 R36 R41  ; R40[R36] := R41
789 [-]: GETGLOBAL R40 K122     ; R40 := mChildMovie
790 [-]: SELF      R40 R40 K106 ; R41 := R40; R40 := R40[0xe4162eed]
791 [-]: LOADK     R42 K125     ; R42 := "SetOnCloseCallback"
792 [-]: MOVE      R43 R36      ; R43 := R36
793 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
794 [-]: GETGLOBAL R40 K122     ; R40 := mChildMovie
795 [-]: SELF      R40 R40 K106 ; R41 := R40; R40 := R40[0xe4162eed]
796 [-]: LOADK     R42 K126     ; R42 := "SetLink"
797 [-]: MOVE      R43 R0       ; R43 := R0
798 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
799 [-]: JMP       840          ; PC := 840
800 [-]: GETUPVAL  R40 U7       ; R40 := U7
801 [-]: GETGLOBAL R41 K101     ; R41 := 0xae91e43b
802 [-]: SELF      R41 R41 K102 ; R42 := R41; R41 := R41[0x42b04007]
803 [-]: LOADK     R43 K127     ; R43 := "/Lotus/Language/Menu/NotAllowedInMission"
804 [-]: OP_LOADBOOL R44 0 0      ; R44 := false
805 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
806 [-]: LOADK     R42 K22      ; R42 := ""
807 [-]: CONST     R43 1        ; R43 := 1.000000
808 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
809 [-]: JMP       840          ; PC := 840
810 [-]: TEST      R38 0        ; if not R38 then PC := 822
811 [-]: JMP       822          ; PC := 822
812 [-]: GETUPVAL  R40 U7       ; R40 := U7
813 [-]: GETGLOBAL R41 K101     ; R41 := 0xae91e43b
814 [-]: SELF      R41 R41 K102 ; R42 := R41; R41 := R41[0x42b04007]
815 [-]: MOVE      R43 R38      ; R43 := R38
816 [-]: OP_LOADBOOL R44 0 0      ; R44 := false
817 [-]: CALL      R41 4 2      ; R41 := R41(R42,R43,R44)
818 [-]: LOADK     R42 K22      ; R42 := ""
819 [-]: CONST     R43 1        ; R43 := 1.000000
820 [-]: CALL      R40 4 1      ; R40(R41,R42,R43)
821 [-]: JMP       840          ; PC := 840
822 [-]: GETGLOBAL R40 K21      ; R40 := 0x7b998233
823 [-]: GETUPVAL  R41 U13      ; R41 := U13
824 [-]: CALL      R40 2 2      ; R40 := R40(R41)
825 [-]: TEST      R40 1        ; if R40 then PC := 840
826 [-]: JMP       840          ; PC := 840
827 [-]: GETUPVAL  R40 U13      ; R40 := U13
828 [-]: SELF      R40 R40 K128 ; R41 := R40; R40 := R40[0xe0a5a426]
829 [-]: MOVE      R42 R0       ; R42 := R0
830 [-]: CALL      R40 3 2      ; R40 := R40(R41,R42)
831 [-]: GETGLOBAL R41 K21      ; R41 := 0x7b998233
832 [-]: MOVE      R42 R40      ; R42 := R40
833 [-]: CALL      R41 2 2      ; R41 := R41(R42)
834 [-]: TEST      R41 1        ; if R41 then PC := 840
835 [-]: JMP       840          ; PC := 840
836 [-]: GETGLOBAL R41 K25      ; R41 := 0xb009bbc6
837 [-]: MOVE      R42 R40      ; R42 := R40
838 [-]: CALL      R41 2 2      ; R41 := R41(R42)
839 [-]: MOVE      R5 R41       ; R5 := R41
840 [-]: CLOSE     R35          ; SAVE R35,...
841 [-]: GETGLOBAL R35 K21      ; R35 := 0x7b998233
842 [-]: MOVE      R36 R5       ; R36 := R5
843 [-]: CALL      R35 2 2      ; R35 := R35(R36)
844 [-]: TEST      R35 1        ; if R35 then PC := 953
845 [-]: JMP       953          ; PC := 953
846 [-]: GETGLOBAL R35 K129     ; R35 := 0x88efc25e
847 [-]: SELF      R36 R5 K130  ; R37 := R5; R36 := R5[0xed4e0128]
848 [-]: CALL      R36 2 0      ; R36,... := R36(R37)
849 [-]: CALL      R35 0 2      ; R35 := R35(R36,...)
850 [-]: GETGLOBAL R36 K117     ; R36 := 0x9ba7909f
851 [-]: SELF      R36 R36 K118 ; R37 := R36; R36 := R36[0xbcfb64ab]
852 [-]: GETGLOBAL R38 K1       ; R38 := 0x0032441c
853 [-]: GETTABLE  R38 R38 K45  ; R38 := R38["UIMovie_DetailedPurchaseDialog"]
854 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
855 [-]: SETUPVAL  R36 U14      ; U82 := $
856 [-]: GETGLOBAL R36 K21      ; R36 := 0x7b998233
857 [-]: GETUPVAL  R37 U14      ; R37 := U14
858 [-]: CALL      R36 2 2      ; R36 := R36(R37)
859 [-]: TEST      R36 1        ; if R36 then PC := 866
860 [-]: JMP       866          ; PC := 866
861 [-]: GETUPVAL  R36 U14      ; R36 := U14
862 [-]: SELF      R36 R36 K106 ; R37 := R36; R36 := R36[0xe4162eed]
863 [-]: LOADK     R38 K131     ; R38 := "HideScreen"
864 [-]: LOADK     R39 K121     ; R39 := "true"
865 [-]: CALL      R36 4 1      ; R36(R37,R38,R39)
866 [-]: GETGLOBAL R36 K101     ; R36 := 0xae91e43b
867 [-]: SELF      R36 R36 K123 ; R37 := R36; R36 := R36[0x1fd6abd0]
868 [-]: GETGLOBAL R38 K1       ; R38 := 0x0032441c
869 [-]: GETTABLE  R38 R38 K45  ; R38 := R38["UIMovie_DetailedPurchaseDialog"]
870 [-]: CALL      R36 3 2      ; R36 := R36(R37,R38)
871 [-]: SETUPVAL  R36 U2       ; U82 := $
872 [-]: EQ        1 R8 K8      ; if R8 == nil then PC := 892
873 [-]: JMP       892          ; PC := 892
874 [-]: GETGLOBAL R36 K132     ; R36 := 0xbe190284
875 [-]: SELF      R36 R36 K133 ; R37 := R36; R36 := R36[0xa1c390fe]
876 [-]: CALL      R36 2 2      ; R36 := R36(R37)
877 [-]: GETGLOBAL R37 K21      ; R37 := 0x7b998233
878 [-]: MOVE      R38 R36      ; R38 := R36
879 [-]: CALL      R37 2 2      ; R37 := R37(R38)
880 [-]: TEST      R37 1        ; if R37 then PC := 892
881 [-]: JMP       892          ; PC := 892
882 [-]: LOADK     R37 K134     ; R37 := "<br>"
883 [-]: GETUPVAL  R38 U15      ; R38 := U15
884 [-]: GETTABLE  R38 R38 K135 ; R82 := R38[0xf2a6b82f]
885 [-]: GETUPVAL  R39 U2       ; R39 := U2
886 [-]: GETTABLE  R40 R8 K78   ; R40 := R8["Parts"]
887 [-]: MOVE      R41 R36      ; R41 := R36
888 [-]: OP_LOADBOOL R42 1 0      ; R42 := true
889 [-]: OP_LOADBOOL R43 1 0      ; R43 := true
890 [-]: CALL      R38 6 2      ; R38 := R38(R39,R40,R41,R42,R43)
891 [-]: CONCAT    R9 R37 R38   ; R9 := R37 .. R38
892 [-]: SELF      R37 R5 K136  ; R38 := R5; R37 := R5[0xc055cef8]
893 [-]: CALL      R37 2 2      ; R37 := R37(R38)
894 [-]: TEST      R37 0        ; if not R37 then PC := 909
895 [-]: JMP       909          ; PC := 909
896 [-]: GETUPVAL  R37 U16      ; R37 := U16
897 [-]: GETTABLE  R37 R37 K137 ; R82 := R37[0xb73d420f]
898 [-]: CALL      R37 1 2      ; R37 := R37()
899 [-]: GETUPVAL  R38 U16      ; R38 := U16
900 [-]: GETTABLE  R38 R38 K138 ; R38 := R38["UI_MODE_IN_GAME"]
901 [-]: EQ        1 R37 R38    ; if R37 == R38 then PC := 909
902 [-]: JMP       909          ; PC := 909
903 [-]: GETUPVAL  R37 U16      ; R37 := U16
904 [-]: GETTABLE  R37 R37 K139 ; R82 := R37[0x9df9be7e]
905 [-]: MOVE      R38 R5       ; R38 := R5
906 [-]: CALL      R37 2 2      ; R37 := R37(R38)
907 [-]: EQ        0 R37 K140   ; if R37 ~= "UNAVAILABLE" then PC := 923
908 [-]: JMP       923          ; PC := 923
909 [-]: GETGLOBAL R37 K14      ; R37 := _T
910 [-]: NEWTABLE  R38 0 1      ; R38 := {}
911 [-]: NEWTABLE  R39 0 8      ; R39 := {}
912 [-]: SETTABLE  R39 K143 R5  ; R39["StoreItem"] := R5
913 [-]: SETTABLE  R39 K144 R9  ; R39["AdditionalDesc"] := R9
914 [-]: SETTABLE  R39 K145 R8  ; R39["ModularInfo"] := R8
915 [-]: SETTABLE  R39 K146 K147; R39["CanGiftOverride"] := false
916 [-]: SETTABLE  R39 K148 K147; R39["CanPurchaseOverride"] := false
917 [-]: SETTABLE  R39 K149 R6  ; R39["UpgradeFingerprint"] := R6
918 [-]: SETTABLE  R39 K150 R7  ; R39["Song"] := R7
919 [-]: SETTABLE  R39 K151 R35 ; R39["Anchor"] := R35
920 [-]: SETTABLE  R38 K142 R39 ; R38["ITEM"] := R39
921 [-]: SETTABLE  R37 K141 R38 ; R37["marketDetailedViewParms"] := R38
922 [-]: JMP       940          ; PC := 940
923 [-]: GETGLOBAL R37 K14      ; R37 := _T
924 [-]: NEWTABLE  R38 0 3      ; R38 := {}
925 [-]: NEWTABLE  R39 0 5      ; R39 := {}
926 [-]: SETTABLE  R39 K143 R5  ; R39["StoreItem"] := R5
927 [-]: SETTABLE  R39 K144 R9  ; R39["AdditionalDesc"] := R9
928 [-]: SETTABLE  R39 K145 R8  ; R39["ModularInfo"] := R8
929 [-]: SETTABLE  R39 K149 R6  ; R39["UpgradeFingerprint"] := R6
930 [-]: GETUPVAL  R40 U16      ; R40 := U16
931 [-]: GETTABLE  R40 R40 K153 ; R82 := R40[0xcd71f5a1]
932 [-]: MOVE      R41 R5       ; R41 := R5
933 [-]: CALL      R40 2 2      ; R40 := R40(R41)
934 [-]: SETTABLE  R39 K152 R40 ; R39["Sale"] := R40
935 [-]: SETTABLE  R38 K142 R39 ; R38["ITEM"] := R39
936 [-]: GETUPVAL  R39 U17      ; R39 := U17
937 [-]: SETTABLE  R38 K154 R39 ; R38["CALLBACK"] := R39
938 [-]: SETTABLE  R38 K151 R35 ; R38["Anchor"] := R35
939 [-]: SETTABLE  R37 K141 R38 ; R37["marketDetailedViewParms"] := R38
940 [-]: GETUPVAL  R37 U2       ; R37 := U2
941 [-]: SELF      R37 R37 K106 ; R38 := R37; R37 := R37[0xe4162eed]
942 [-]: LOADK     R39 K155     ; R39 := "SetIgnoreTopMenu"
943 [-]: LOADK     R40 K121     ; R40 := "true"
944 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
945 [-]: GETUPVAL  R37 U2       ; R37 := U2
946 [-]: SELF      R37 R37 K106 ; R38 := R37; R37 := R37[0xe4162eed]
947 [-]: LOADK     R39 K156     ; R39 := "SetExitCallback"
948 [-]: LOADK     R40 K157     ; R40 := "OnDetailedViewComplete"
949 [-]: CALL      R37 4 1      ; R37(R38,R39,R40)
950 [-]: GETUPVAL  R37 U12      ; R37 := U12
951 [-]: OP_LOADBOOL R38 1 0      ; R38 := true
952 [-]: CALL      R37 2 1      ; R37(R38)
953 [-]: GETUPVAL  R37 U18      ; R37 := U18
954 [-]: GETTABLE  R37 R37 K158 ; R82 := R37[0x90ca007f]
955 [-]: GETGLOBAL R38 K101     ; R38 := 0xae91e43b
956 [-]: CALL      R37 2 1      ; R37(R38)
957 [-]: GETGLOBAL R37 K14      ; R37 := _T
958 [-]: SETTABLE  R37 K159 K16 ; R37["ChatLinkOpen"] := true
959 [-]: RETURN    R0 1         ; return 


; Function #252.1:
;
; Name:            
; Defined at line: 11680
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: GETUPVAL  R1 U0        ; R1 := U0
  3 [-]: SETTABLE  R0 R1 K1     ; R0[R1] := nil
  4 [-]: OP_LOADBOOL R0 0 0       ; R0 := false
  5 [-]: SETGLOBALHASH R0 K2        ; mInputBlocked := R0
  6 [-]: GETUPVAL  R0 U1        ; R0 := U1
  7 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
  8 [-]: CALL      R0 2 1       ; R0(R1)
  9 [-]: RETURN    R0 1         ; return 


; Function #253:
;
; Name:            
; Defined at line: 11741
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: GETTABLE  R0 R0 K0     ; R82 := R0[0x659d451f]
  3 [-]: GETGLOBAL R1 K1        ; R1 := 0x0032441c
  4 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["UISound_Focus"]
  5 [-]: CALL      R0 2 1       ; R0(R1)
  6 [-]: RETURN    R0 1         ; return 


; Function #254:
;
; Name:            
; Defined at line: 11745
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.SendMessageBar.UserListBtn"
  4 [-]: CONST     R3 10        ; R3 := 10.000000
  5 [-]: CONST     R4 100       ; R4 := 100.000000
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #255:
;
; Name:            
; Defined at line: 11749
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.SendMessageBar.UserListBtn"
  4 [-]: CONST     R3 10        ; R3 := 10.000000
  5 [-]: CONST     R4 50        ; R4 := 50.000000
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #256:
;
; Name:            
; Defined at line: 11753
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserPanel"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: TEST      R0 0         ; if not R0 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R0 U1        ; R0 := U1
 17 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 18 [-]: CALL      R0 2 1       ; R0(R1)
 19 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 20 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mUserPanel"]
 21 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xcaccf524]
 22 [-]: OP_LOADBOOL R2 1 0       ; R2 := true
 23 [-]: CALL      R0 3 1       ; R0(R1,R2)
 24 [-]: RETURN    R0 1         ; return 


; Function #257:
;
; Name:            
; Defined at line: 11763
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #258:
;
; Name:            
; Defined at line: 11767
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.SendMessageBar.EmojiBtn"
  4 [-]: CONST     R3 10        ; R3 := 10.000000
  5 [-]: CONST     R4 100       ; R4 := 100.000000
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #259:
;
; Name:            
; Defined at line: 11771
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.SendMessageBar.EmojiBtn"
  4 [-]: CONST     R3 10        ; R3 := 10.000000
  5 [-]: CONST     R4 40        ; R4 := 40.000000
  6 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  7 [-]: RETURN    R0 1         ; return 


; Function #260:
;
; Name:            
; Defined at line: 11775
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 24
  5 [-]: JMP       24           ; PC := 24
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mUserPanel"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 24
 11 [-]: JMP       24           ; PC := 24
 12 [-]: GETUPVAL  R0 U0        ; R0 := U0
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: TEST      R0 0         ; if not R0 then PC := 19
 15 [-]: JMP       19           ; PC := 19
 16 [-]: GETUPVAL  R0 U1        ; R0 := U1
 17 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 18 [-]: CALL      R0 2 1       ; R0(R1)
 19 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 20 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mUserPanel"]
 21 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0xcaccf524]
 22 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 23 [-]: CALL      R0 3 1       ; R0(R1,R2)
 24 [-]: RETURN    R0 1         ; return 


; Function #261:
;
; Name:            
; Defined at line: 11785
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETUPVAL  R0 U0        ; R0 := U0
  2 [-]: CALL      R0 1 1       ; R0()
  3 [-]: RETURN    R0 1         ; return 


; Function #262:
;
; Name:            
; Defined at line: 11789
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.TabbedChatPanel.FilterBtn"
  4 [-]: CONST     R3 9         ; R3 := 9.000000
  5 [-]: GETGLOBAL R4 K3        ; R4 := 0x0032441c
  6 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["UIColor_Yellow"]
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #263:
;
; Name:            
; Defined at line: 11793
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0xae91e43b
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0x67bc869f]
  3 [-]: LOADK     R2 K2        ; R2 := "Window.TabbedChatPanel.FilterBtn"
  4 [-]: CONST     R3 9         ; R3 := 9.000000
  5 [-]: GETGLOBAL R4 K3        ; R4 := 0x0032441c
  6 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["UIColor_White"]
  7 [-]: CALL      R0 5 1       ; R0(R1,R2,R3,R4)
  8 [-]: RETURN    R0 1         ; return 


; Function #264:
;
; Name:            
; Defined at line: 11797
; #Upvalues:       3
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
  8 [-]: SELF      R0 R0 K2     ; R1 := R0; R0 := R0[0x8b75da5a]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 0         ; if not R1 then PC := 16
 14 [-]: JMP       16           ; PC := 16
 15 [-]: RETURN    R0 1         ; return 
 16 [-]: GETUPVAL  R1 U0        ; R1 := U0
 17 [-]: LOADK     R2 K3        ; R2 := "/Lotus/Language/Menu/Chat_LoadingScreenBlocked"
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: TEST      R1 0         ; if not R1 then PC := 22
 20 [-]: JMP       22           ; PC := 22
 21 [-]: RETURN    R0 1         ; return 
 22 [-]: GETTABLE  R1 R0 K4     ; R1 := R0["mFriendlyName"]
 23 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 24 [-]: SELF      R2 R2 K6     ; R3 := R2; R2 := R2[0x1fd6abd0]
 25 [-]: GETGLOBAL R4 K7        ; R4 := 0xa3b1ba20
 26 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 27 [-]: SETUPVAL  R2 U1        ; U82 := 
 28 [-]: GETGLOBAL R2 K8        ; R2 := _T
 29 [-]: CLOSURE   R3 0         ; R3 := closure(Function #264.1)
 30 [-]: MOVE      R0 R0        ; R0 := R0
 31 [-]: GETUPVAL  R0 U2        ; R0 := U2
 32 [-]: SETTABLE  R2 K9 R3     ; R2["OnChatFilterMgrClosed"] := R3
 33 [-]: GETUPVAL  R2 U1        ; R2 := U1
 34 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0xe4162eed]
 35 [-]: LOADK     R4 K11       ; R4 := "SetOnCloseFunction"
 36 [-]: LOADK     R5 K9        ; R5 := "OnChatFilterMgrClosed"
 37 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 38 [-]: GETTABLE  R2 R0 K12    ; R2 := R0["mChannelType"]
 39 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
 40 [-]: GETTABLE  R3 R3 K13    ; R3 := R3["CHANNEL_PRIVATE_CHAT"]
 41 [-]: EQ        0 R2 R3      ; if R2 ~= R3 then PC := 49
 42 [-]: JMP       49           ; PC := 49
 43 [-]: GETGLOBAL R2 K5        ; R2 := 0xae91e43b
 44 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0x42b04007]
 45 [-]: LOADK     R4 K15       ; R4 := "/Lotus/Language/Menu/Chat_PrivateTitle"
 46 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 47 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 48 [-]: MOVE      R1 R2        ; R1 := R2
 49 [-]: GETUPVAL  R2 U1        ; R2 := U1
 50 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0xe4162eed]
 51 [-]: LOADK     R4 K16       ; R4 := "SetChannelName"
 52 [-]: MOVE      R5 R1        ; R5 := R1
 53 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 54 [-]: GETUPVAL  R2 U1        ; R2 := U1
 55 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0xe4162eed]
 56 [-]: LOADK     R4 K17       ; R4 := "SetChannel"
 57 [-]: GETGLOBAL R5 K18       ; R5 := 0x7f5022cf
 58 [-]: GETTABLE  R5 R5 K19    ; R82 := R5[0x1a94c9cc]
 59 [-]: GETTABLE  R6 R0 K20    ; R6 := R0["mChannelName"]
 60 [-]: CONST     R7 1         ; R7 := 1.000000
 61 [-]: CONST     R8 1         ; R8 := 1.000000
 62 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 63 [-]: CALL      R2 0 1       ; R2(R3,...)
 64 [-]: GETUPVAL  R2 U2        ; R2 := U2
 65 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 66 [-]: CALL      R2 2 1       ; R2(R3)
 67 [-]: RETURN    R0 1         ; return 


; Function #264.1:
;
; Name:            
; Defined at line: 11815
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := _T
  2 [-]: SETTABLE  R0 K1 K2     ; R0["OnChatFilterMgrClosed"] := nil
  3 [-]: GETGLOBAL R0 K3        ; R0 := 0x7b998233
  4 [-]: GETGLOBAL R1 K4        ; R1 := 0xae91e43b
  5 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  6 [-]: TEST      R0 0         ; if not R0 then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: RETURN    R0 1         ; return 
  9 [-]: GETUPVAL  R0 U0        ; R0 := U0
 10 [-]: SELF      R0 R0 K5     ; R1 := R0; R0 := R0[0x085abf92]
 11 [-]: CALL      R0 2 1       ; R0(R1)
 12 [-]: GETUPVAL  R0 U1        ; R0 := U1
 13 [-]: OP_LOADBOOL R1 0 0       ; R1 := false
 14 [-]: CALL      R0 2 1       ; R0(R1)
 15 [-]: RETURN    R0 1         ; return 


; Function #265:
;
; Name:            
; Defined at line: 11837
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := mInputBlocked
  2 [-]: TEST      R1 1         ; if R1 then PC := 22
  3 [-]: JMP       22           ; PC := 22
  4 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  5 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 22
  8 [-]: JMP       22           ; PC := 22
  9 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 11 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["mFilterList"]
 12 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 13 [-]: TEST      R1 1         ; if R1 then PC := 22
 14 [-]: JMP       22           ; PC := 22
 15 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 16 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mFilterList"]
 17 [-]: SELF      R1 R1 K4     ; R2 := R1; R1 := R1[0x070daa5a]
 18 [-]: GETGLOBAL R3 K5        ; R3 := 0x03f57322
 19 [-]: MOVE      R4 R0        ; R4 := R0
 20 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 21 [-]: CALL      R1 0 1       ; R1(R2,...)
 22 [-]: RETURN    R0 1         ; return 


; Function #266:
;
; Name:            
; Defined at line: 11843
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mFilterList"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 13 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mFilterList"]
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xdf42446e]
 15 [-]: GETGLOBAL R3 K4        ; R3 := 0x03f57322
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #267:
;
; Name:            
; Defined at line: 11849
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  5

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 19
  5 [-]: JMP       19           ; PC := 19
  6 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  7 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  8 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mFilterList"]
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 13 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mFilterList"]
 14 [-]: SELF      R1 R1 K3     ; R2 := R1; R1 := R1[0xbce5a201]
 15 [-]: GETGLOBAL R3 K4        ; R3 := 0x03f57322
 16 [-]: MOVE      R4 R0        ; R4 := R0
 17 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
 18 [-]: CALL      R1 0 1       ; R1(R2,...)
 19 [-]: RETURN    R0 1         ; return 


; Function #268:
;
; Name:            
; Defined at line: 11855
; #Upvalues:       2
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 63
  5 [-]: JMP       63           ; PC := 63
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mInputPanel"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 63
 11 [-]: JMP       63           ; PC := 63
 12 [-]: GETGLOBAL R0 K3        ; R0 := 0x9ba7909f
 13 [-]: SELF      R0 R0 K4     ; R1 := R0; R0 := R0[0xd5a21778]
 14 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 15 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
 16 [-]: MOVE      R2 R0        ; R2 := R0
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 22
 19 [-]: JMP       22           ; PC := 22
 20 [-]: SELF      R1 R0 K5     ; R2 := R0; R1 := R0[0x80dc5f76]
 21 [-]: CALL      R1 2 1       ; R1(R2)
 22 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
 23 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mInputPanel"]
 24 [-]: SELF      R1 R1 K6     ; R2 := R1; R1 := R1[0x0417ad4a]
 25 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 26 [-]: CALL      R1 3 1       ; R1(R2,R3)
 27 [-]: GETUPVAL  R1 U0        ; R1 := U0
 28 [-]: TEST      R1 0         ; if not R1 then PC := 32
 29 [-]: JMP       32           ; PC := 32
 30 [-]: LOADK     R1 K7        ; R1 := ""
 31 [-]: SETUPVAL  R1 U1        ; U82 := 
 32 [-]: GETGLOBAL R1 K8        ; R1 := 0x34291f5c
 33 [-]: GETTABLE  R1 R1 K9     ; R82 := R1[0xe6b41adb]
 34 [-]: CALL      R1 1 2       ; R1 := R1()
 35 [-]: TEST      R1 0         ; if not R1 then PC := 63
 36 [-]: JMP       63           ; PC := 63
 37 [-]: GETGLOBAL R1 K8        ; R1 := 0x34291f5c
 38 [-]: GETTABLE  R1 R1 K10    ; R82 := R1[0x94617168]
 39 [-]: CALL      R1 1 2       ; R1 := R1()
 40 [-]: TEST      R1 0         ; if not R1 then PC := 63
 41 [-]: JMP       63           ; PC := 63
 42 [-]: GETGLOBAL R1 K11       ; R1 := 0x89326c93
 43 [-]: SELF      R1 R1 K12    ; R2 := R1; R1 := R1[0xa3eb3f6b]
 44 [-]: GETGLOBAL R3 K13       ; R3 := 0xae91e43b
 45 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0x5b638cce]
 46 [-]: GETGLOBAL R5 K1        ; R5 := mWindow
 47 [-]: GETTABLE  R5 R5 K2     ; R5 := R5["mInputPanel"]
 48 [-]: GETTABLE  R5 R5 K15    ; R5 := R5["mClipPath"]
 49 [-]: LOADK     R6 K16       ; R6 := ".MessageBox"
 50 [-]: CONCAT    R5 R5 R6     ; R5 := R5 .. R6
 51 [-]: LOADK     R6 K17       ; R6 := "text"
 52 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 53 [-]: LOADK     R4 K18       ; R4 := "title"
 54 [-]: LOADK     R5 K19       ; R5 := "hint"
 55 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 56 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 57 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 58 [-]: LOADK     R9 K20       ; R9 := "OSKSendMessageCallback"
 59 [-]: GETGLOBAL R10 K1       ; R10 := mWindow
 60 [-]: GETTABLE  R10 R10 K2   ; R10 := R10["mInputPanel"]
 61 [-]: GETTABLE  R10 R10 K21  ; R10 := R10["mMaxMsgLength"]
 62 [-]: CALL      R1 10 1      ; R1(R2,R3,R4,R5,R6,R7,R8,R9,R10)
 63 [-]: RETURN    R0 1         ; return 


; Function #269:
;
; Name:            
; Defined at line: 11879
; #Upvalues:       4
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 35
  5 [-]: JMP       35           ; PC := 35
  6 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  7 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  8 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mInputPanel"]
  9 [-]: CALL      R0 2 2       ; R0 := R0(R1)
 10 [-]: TEST      R0 1         ; if R0 then PC := 35
 11 [-]: JMP       35           ; PC := 35
 12 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
 13 [-]: GETTABLE  R0 R0 K2     ; R0 := R0["mInputPanel"]
 14 [-]: SELF      R0 R0 K3     ; R1 := R0; R0 := R0[0x0417ad4a]
 15 [-]: OP_LOADBOOL R2 0 0       ; R2 := false
 16 [-]: CALL      R0 3 1       ; R0(R1,R2)
 17 [-]: GETUPVAL  R0 U0        ; R0 := U0
 18 [-]: TEST      R0 0         ; if not R0 then PC := 35
 19 [-]: JMP       35           ; PC := 35
 20 [-]: GETUPVAL  R0 U1        ; R0 := U1
 21 [-]: GETTABLE  R0 R0 K4     ; R82 := R0[0xc074491b]
 22 [-]: GETUPVAL  R1 U2        ; R1 := U2
 23 [-]: CALL      R0 2 1       ; R0(R1)
 24 [-]: GETGLOBAL R0 K5        ; R0 := 0xae91e43b
 25 [-]: SELF      R0 R0 K6     ; R1 := R0; R0 := R0[0xc0a3774b]
 26 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 27 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mInputPanel"]
 28 [-]: GETTABLE  R2 R2 K7     ; R2 := R2["mClipPath"]
 29 [-]: LOADK     R3 K8        ; R3 := "MessageBox"
 30 [-]: CONST     R4 73        ; R4 := 73.000000
 31 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 32 [-]: CALL      R0 6 1       ; R0(R1,R2,R3,R4,R5)
 33 [-]: OP_LOADBOOL R0 0 0       ; R0 := false
 34 [-]: SETUPVAL  R0 U3        ; U82 := 
 35 [-]: RETURN    R0 1         ; return 


; Function #270:
;
; Name:            
; Defined at line: 11890
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x03f57322
  2 [-]: MOVE      R2 R0        ; R2 := R0
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: EQ        0 R1 K2      ; if R1 ~= 4.000000 then PC := 14
  5 [-]: JMP       14           ; PC := 14
  6 [-]: GETUPVAL  R1 U0        ; R1 := U0
  7 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["StepSequencerPendingRequest"]
  8 [-]: EQ        1 R1 K4      ; if R1 == nil then PC := 14
  9 [-]: JMP       14           ; PC := 14
 10 [-]: GETGLOBAL R1 K5        ; R1 := _T
 11 [-]: GETUPVAL  R2 U0        ; R2 := U0
 12 [-]: GETTABLE  R2 R2 K3     ; R2 := R2["StepSequencerPendingRequest"]
 13 [-]: SETTABLE  R1 K6 R2     ; R1["ComposeToolRequest"] := R2
 14 [-]: GETUPVAL  R1 U0        ; R1 := U0
 15 [-]: SETTABLE  R1 K3 K4     ; R1["StepSequencerPendingRequest"] := nil
 16 [-]: RETURN    R0 1         ; return 


; Function #271:
;
; Name:            
; Defined at line: 11897
; #Upvalues:       4
; #Parameters:     3
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
  2 [-]: GETGLOBAL R4 K1        ; R4 := mWindow
  3 [-]: CALL      R3 2 2       ; R3 := R3(R4)
  4 [-]: TEST      R3 1         ; if R3 then PC := 84
  5 [-]: JMP       84           ; PC := 84
  6 [-]: EQ        1 R0 K2      ; if R0 == nil then PC := 35
  7 [-]: JMP       35           ; PC := 35
  8 [-]: GETGLOBAL R3 K3        ; R3 := 0x0032441c
  9 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["StalkerMode"]
 10 [-]: TEST      R3 0         ; if not R3 then PC := 19
 11 [-]: JMP       19           ; PC := 19
 12 [-]: GETUPVAL  R3 U0        ; R3 := U0
 13 [-]: GETTABLE  R3 R3 K5     ; R82 := R3[0x06d055f9]
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: LOADK     R5 K6        ; R5 := "Acquiring target..."
 16 [-]: LOADK     R6 K7        ; R6 := "Target not in mission..."
 17 [-]: CALL      R3 4 2       ; R3 := R3(R4,R5,R6)
 18 [-]: MOVE      R0 R3        ; R0 := R3
 19 [-]: TEST      R2 0         ; if not R2 then PC := 27
 20 [-]: JMP       27           ; PC := 27
 21 [-]: GETTABLE  R3 R2 K8     ; R3 := R2["customDialogFunction"]
 22 [-]: TEST      R3 0         ; if not R3 then PC := 27
 23 [-]: JMP       27           ; PC := 27
 24 [-]: GETTABLE  R3 R2 K9     ; R82 := R3[0x65b64ecd]
 25 [-]: CALL      R3 1 1       ; R3()
 26 [-]: JMP       35           ; PC := 35
 27 [-]: GETGLOBAL R3 K1        ; R3 := mWindow
 28 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0xd4f2405e]
 29 [-]: GETGLOBAL R5 K11       ; R5 := 0xae91e43b
 30 [-]: SELF      R5 R5 K12    ; R6 := R5; R5 := R5[0x42b04007]
 31 [-]: MOVE      R7 R0        ; R7 := R0
 32 [-]: OP_LOADBOOL R8 0 0       ; R8 := false
 33 [-]: CALL      R5 4 0       ; R5,... := R5(R6,R7,R8)
 34 [-]: CALL      R3 0 1       ; R3(R4,...)
 35 [-]: GETUPVAL  R3 U1        ; R3 := U1
 36 [-]: SETTABLE  R3 K13 K14   ; R3["InProgress"] := false
 37 [-]: GETUPVAL  R3 U1        ; R3 := U1
 38 [-]: GETTABLE  R3 R3 K15    ; R3 := R3["TempAddToChatPartners"]
 39 [-]: TEST      R3 0         ; if not R3 then PC := 51
 40 [-]: JMP       51           ; PC := 51
 41 [-]: GETGLOBAL R3 K0        ; R3 := 0x7b998233
 42 [-]: GETGLOBAL R4 K16       ; R4 := mGameData
 43 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 44 [-]: TEST      R3 1         ; if R3 then PC := 51
 45 [-]: JMP       51           ; PC := 51
 46 [-]: GETGLOBAL R3 K16       ; R3 := mGameData
 47 [-]: SELF      R3 R3 K17    ; R4 := R3; R3 := R3[0x4cfa611a]
 48 [-]: GETUPVAL  R5 U1        ; R5 := U1
 49 [-]: GETTABLE  R5 R5 K18    ; R5 := R5["PlayerName"]
 50 [-]: CALL      R3 3 1       ; R3(R4,R5)
 51 [-]: GETGLOBAL R3 K3        ; R3 := 0x0032441c
 52 [-]: GETTABLE  R3 R3 K4     ; R3 := R3["StalkerMode"]
 53 [-]: TEST      R3 0         ; if not R3 then PC := 59
 54 [-]: JMP       59           ; PC := 59
 55 [-]: TEST      R1 0         ; if not R1 then PC := 59
 56 [-]: JMP       59           ; PC := 59
 57 [-]: GETUPVAL  R3 U2        ; R3 := U2
 58 [-]: CALL      R3 1 1       ; R3()
 59 [-]: GETUPVAL  R3 U3        ; R3 := U3
 60 [-]: TEST      R3 0         ; if not R3 then PC := 84
 61 [-]: JMP       84           ; PC := 84
 62 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
 63 [-]: SETUPVAL  R3 U3        ; U82 := 
 64 [-]: GETGLOBAL R3 K19       ; R3 := 0xe7f2b02f
 65 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3[0xca33534d]
 66 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 67 [-]: TEST      R3 0         ; if not R3 then PC := 84
 68 [-]: JMP       84           ; PC := 84
 69 [-]: GETGLOBAL R3 K21       ; R3 := _T
 70 [-]: GETTABLE  R3 R3 K22    ; R3 := R3["ScenarioSquadMembersChanged"]
 71 [-]: TEST      R3 0         ; if not R3 then PC := 84
 72 [-]: JMP       84           ; PC := 84
 73 [-]: GETGLOBAL R3 K21       ; R3 := _T
 74 [-]: GETTABLE  R3 R3 K23    ; R82 := R3[0xeb5c810f]
 75 [-]: GETGLOBAL R4 K24       ; R4 := 0x76ea806b
 76 [-]: SELF      R4 R4 K25    ; R5 := R4; R4 := R4[0x3f3ae64c]
 77 [-]: CONST     R6 0         ; R6 := 0.000000
 78 [-]: CALL      R4 3 2       ; R4 := R4(R5,R6)
 79 [-]: SELF      R4 R4 K26    ; R5 := R4; R4 := R4[0x5ca33548]
 80 [-]: CALL      R4 2 2       ; R4 := R4(R5)
 81 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 82 [-]: OP_LOADBOOL R6 1 0       ; R6 := true
 83 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 84 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
 85 [-]: SETUPVAL  R3 U3        ; U82 := 
 86 [-]: RETURN    R0 1         ; return 


; Function #272:
;
; Name:            
; Defined at line: 11930
; #Upvalues:       2
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  9

  1 [-]: TEST      R0 1         ; if R0 then PC := 13
  2 [-]: JMP       13           ; PC := 13
  3 [-]: GETGLOBAL R1 K0        ; R1 := 0xe7f2b02f
  4 [-]: SELF      R1 R1 K1     ; R2 := R1; R1 := R1[0x286f72d4]
  5 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  6 [-]: EQ        0 R1 K2      ; if R1 ~= "" then PC := 9
  7 [-]: JMP       9            ; PC := 9
  8 [-]: LOADK     R1 K3        ; R1 := "/Lotus/Language/Menu/SocialOverlay_SessionJoinFail"
  9 [-]: GETUPVAL  R2 U0        ; R2 := U0
 10 [-]: MOVE      R3 R1        ; R3 := R1
 11 [-]: CALL      R2 2 1       ; R2(R3)
 12 [-]: RETURN    R0 1         ; return 
 13 [-]: GETUPVAL  R2 U0        ; R2 := U0
 14 [-]: GETGLOBAL R3 K4        ; R3 := 0xae91e43b
 15 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x42b04007]
 16 [-]: LOADK     R5 K6        ; R5 := "/Lotus/Language/Menu/Chat_JoinSuccess"
 17 [-]: OP_LOADBOOL R6 0 0       ; R6 := false
 18 [-]: NEWTABLE  R7 0 1       ; R7 := {}
 19 [-]: GETUPVAL  R8 U1        ; R8 := U1
 20 [-]: GETTABLE  R8 R8 K8     ; R8 := R8["PlayerName"]
 21 [-]: SETTABLE  R7 K7 R8     ; R7["PLAYER_NAME"] := R8
 22 [-]: CALL      R3 5 2       ; R3 := R3(R4,R5,R6,R7)
 23 [-]: MOVE      R4 R0        ; R4 := R0
 24 [-]: CALL      R2 3 1       ; R2(R3,R4)
 25 [-]: RETURN    R0 1         ; return 


; Function #273:
;
; Name:            
; Defined at line: 11946
; #Upvalues:       4
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETUPVAL  R1 U0        ; R1 := U0
  2 [-]: GETTABLE  R1 R1 K0     ; R82 := R1[0x756837f0]
  3 [-]: MOVE      R2 R0        ; R2 := R0
  4 [-]: OP_LOADBOOL R3 0 0       ; R3 := false
  5 [-]: GETUPVAL  R4 U1        ; R4 := U1
  6 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Presence"]
  7 [-]: GETTABLE  R4 R4 K2     ; R4 := R4["session"]
  8 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["teamId"]
  9 [-]: LOADNIL   R5 R5        ; R5 := nil
 10 [-]: GETGLOBAL R6 K4        ; R6 := 0xae91e43b
 11 [-]: LOADK     R7 K5        ; R7 := "OnFindSessionComplete"
 12 [-]: CALL      R1 7 3       ; R1,R2 := R1(R2,R3,R4,R5,R6,R7)
 13 [-]: GETGLOBAL R3 K6        ; R3 := 0x0b96777e
 14 [-]: MOVE      R4 R1        ; R4 := R1
 15 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 16 [-]: EQ        0 R3 K7      ; if R3 ~= "string" then PC := 24
 17 [-]: JMP       24           ; PC := 24
 18 [-]: GETUPVAL  R3 U2        ; R3 := U2
 19 [-]: MOVE      R4 R1        ; R4 := R1
 20 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
 21 [-]: MOVE      R6 R2        ; R6 := R2
 22 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 23 [-]: RETURN    R0 1         ; return 
 24 [-]: GETUPVAL  R3 U0        ; R3 := U0
 25 [-]: GETTABLE  R3 R3 K8     ; R82 := R3[0x49f70b0a]
 26 [-]: GETUPVAL  R4 U1        ; R4 := U1
 27 [-]: GETTABLE  R4 R4 K1     ; R4 := R4["Presence"]
 28 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 29 [-]: TEST      R3 1         ; if R3 then PC := 40
 30 [-]: JMP       40           ; PC := 40
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: GETGLOBAL R4 K4        ; R4 := 0xae91e43b
 33 [-]: SELF      R4 R4 K9     ; R5 := R4; R4 := R4[0x42b04007]
 34 [-]: LOADK     R6 K10       ; R6 := "/Lotus/Language/Menu/Session_LeaveMission"
 35 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 36 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 37 [-]: MOVE      R5 R0        ; R5 := R0
 38 [-]: CALL      R3 3 1       ; R3(R4,R5)
 39 [-]: RETURN    R0 1         ; return 
 40 [-]: GETGLOBAL R3 K11       ; R3 := 0xe7f2b02f
 41 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0xca33534d]
 42 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 43 [-]: TEST      R3 0         ; if not R3 then PC := 48
 44 [-]: JMP       48           ; PC := 48
 45 [-]: GETGLOBAL R3 K11       ; R3 := 0xe7f2b02f
 46 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0xb321d806]
 47 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 48 [-]: SETUPVAL  R3 U3        ; U82 := 
 49 [-]: GETGLOBAL R3 K11       ; R3 := 0xe7f2b02f
 50 [-]: SELF      R3 R3 K14    ; R4 := R3; R3 := R3[0x272f1858]
 51 [-]: GETGLOBAL R5 K15       ; R5 := 0x76ea806b
 52 [-]: SELF      R5 R5 K16    ; R6 := R5; R5 := R5[0x3f3ae64c]
 53 [-]: CONST     R7 0         ; R7 := 0.000000
 54 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
 55 [-]: MOVE      R6 R1        ; R6 := R1
 56 [-]: OP_LOADBOOL R7 0 0       ; R7 := false
 57 [-]: GETUPVAL  R8 U1        ; R8 := U1
 58 [-]: GETTABLE  R8 R8 K1     ; R8 := R8["Presence"]
 59 [-]: GETTABLE  R8 R8 K2     ; R8 := R8["session"]
 60 [-]: GETTABLE  R8 R8 K3     ; R8 := R8["teamId"]
 61 [-]: LOADK     R9 K17       ; R9 := "OnJoinLobbyComplete"
 62 [-]: CALL      R3 7 1       ; R3(R4,R5,R6,R7,R8,R9)
 63 [-]: RETURN    R0 1         ; return 


; Function #274:
;
; Name:            
; Defined at line: 11964
; #Upvalues:       3
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  13

  1 [-]: TEST      R0 1         ; if R0 then PC := 15
  2 [-]: JMP       15           ; PC := 15
  3 [-]: GETUPVAL  R1 U0        ; R1 := U0
  4 [-]: GETGLOBAL R2 K0        ; R2 := 0xae91e43b
  5 [-]: SELF      R2 R2 K1     ; R3 := R2; R2 := R2[0x42b04007]
  6 [-]: LOADK     R4 K2        ; R4 := "/Lotus/Language/Menu/Chat_GetPresenceFail"
  7 [-]: OP_LOADBOOL R5 0 0       ; R5 := false
  8 [-]: NEWTABLE  R6 0 1       ; R6 := {}
  9 [-]: GETUPVAL  R7 U1        ; R7 := U1
 10 [-]: GETTABLE  R7 R7 K4     ; R7 := R7["PlayerName"]
 11 [-]: SETTABLE  R6 K3 R7     ; R6[0xe4162eed] := R7
 12 [-]: CALL      R2 5 0       ; R2,... := R2(R3,R4,R5,R6)
 13 [-]: CALL      R1 0 1       ; R1(R2,...)
 14 [-]: RETURN    R0 1         ; return 
 15 [-]: GETGLOBAL R1 K5        ; R1 := 0x7b998233
 16 [-]: GETGLOBAL R2 K6        ; R2 := mGameData
 17 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 18 [-]: TEST      R1 1         ; if R1 then PC := 74
 19 [-]: JMP       74           ; PC := 74
 20 [-]: GETGLOBAL R1 K6        ; R1 := mGameData
 21 [-]: SELF      R1 R1 K7     ; R2 := R1; R1 := R1[0x20693eb7]
 22 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 23 [-]: LOADNIL   R2 R2        ; R2 := nil
 24 [-]: CONST     R3 1         ; R3 := 1.000000
 25 [-]: LEN       R4 R1        ; R4 := # R1
 26 [-]: CONST     R5 1         ; R5 := 1.000000
 27 [-]: FORPREP   R3 37        ; R3 -= R5; PC := 37
 28 [-]: GETTABLE  R7 R1 R6     ; R7 := R1[R6]
 29 [-]: GETTABLE  R7 R7 K8     ; R7 := R7["mId"]
 30 [-]: GETUPVAL  R8 U1        ; R8 := U1
 31 [-]: GETTABLE  R8 R8 K9     ; R8 := R8["PlayerId"]
 32 [-]: EQ        0 R7 R8      ; if R7 ~= R8 then PC := 37
 33 [-]: JMP       37           ; PC := 37
 34 [-]: GETTABLE  R7 R1 R6     ; R7 := R1[R6]
 35 [-]: GETTABLE  R2 R7 K10    ; R2 := R7["mPresence"]
 36 [-]: JMP       38           ; PC := 38
 37 [-]: FORLOOP   R3 28        ; R3 += R5; if R3 <= R4 then begin PC := 28; R6 := R3 end
 38 [-]: GETUPVAL  R7 U2        ; R7 := U2
 39 [-]: GETTABLE  R7 R7 K11    ; R82 := R7[0x208a9191]
 40 [-]: MOVE      R8 R2        ; R8 := R2
 41 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 42 [-]: TEST      R7 1         ; if R7 then PC := 56
 43 [-]: JMP       56           ; PC := 56
 44 [-]: GETTABLE  R8 R2 K12    ; R8 := R2["session"]
 45 [-]: GETTABLE  R8 R8 K13    ; R8 := R8["regionId"]
 46 [-]: EQ        0 R8 K15     ; if R8 ~= 3.000000 then PC := 56
 47 [-]: JMP       56           ; PC := 56
 48 [-]: GETGLOBAL R8 K6        ; R8 := mGameData
 49 [-]: SELF      R8 R8 K16    ; R9 := R8; R8 := R8[0x545f4ab4]
 50 [-]: GETUPVAL  R10 U1       ; R10 := U1
 51 [-]: GETTABLE  R10 R10 K9   ; R10 := R10["PlayerId"]
 52 [-]: CALL      R8 3 2       ; R8 := R8(R9,R10)
 53 [-]: TEST      R8 1         ; if R8 then PC := 56
 54 [-]: JMP       56           ; PC := 56
 55 [-]: LOADK     R7 K17       ; R7 := "/Lotus/Language/Menu/SocialOverlay_SessionRequiresInvite"
 56 [-]: TEST      R7 0         ; if not R7 then PC := 62
 57 [-]: JMP       62           ; PC := 62
 58 [-]: GETUPVAL  R8 U0        ; R8 := U0
 59 [-]: MOVE      R9 R7        ; R9 := R7
 60 [-]: CALL      R8 2 1       ; R8(R9)
 61 [-]: RETURN    R0 1         ; return 
 62 [-]: GETUPVAL  R8 U1        ; R8 := U1
 63 [-]: SELF      R9 R2 K19    ; R10 := R2; R9 := R2[0x8f89d633]
 64 [-]: CALL      R9 2 2       ; R9 := R9(R10)
 65 [-]: SETTABLE  R8 K18 R9    ; R8["Presence"] := R9
 66 [-]: GETUPVAL  R8 U2        ; R8 := U2
 67 [-]: GETTABLE  R8 R8 K20    ; R82 := R8[0x8131b8db]
 68 [-]: GETTABLE  R9 R2 K12    ; R9 := R2["session"]
 69 [-]: GETTABLE  R9 R9 K21    ; R9 := R9["id"]
 70 [-]: LOADK     R10 K22      ; R10 := "OnFindSessionComplete"
 71 [-]: OP_LOADBOOL R11 0 0      ; R11 := false
 72 [-]: OP_LOADBOOL R12 1 0      ; R12 := true
 73 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
 74 [-]: RETURN    R0 1         ; return 


; Function #275:
;
; Name:            
; Defined at line: 12003
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: RETURN    R0 1         ; return 


; Function #276:
;
; Name:            
; Defined at line: 12006
; #Upvalues:       3
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: TEST      R0 1         ; if R0 then PC := 10
  2 [-]: JMP       10           ; PC := 10
  3 [-]: GETUPVAL  R2 U0        ; R2 := U0
  4 [-]: GETUPVAL  R3 U1        ; R3 := U1
  5 [-]: GETTABLE  R3 R3 K0     ; R82 := R3[0x3230dc3e]
  6 [-]: MOVE      R4 R1        ; R4 := R1
  7 [-]: CALL      R3 2 0       ; R3,... := R3(R4)
  8 [-]: CALL      R2 0 1       ; R2(R3,...)
  9 [-]: RETURN    R0 1         ; return 
 10 [-]: GETGLOBAL R2 K1        ; R2 := 0x015284cd
 11 [-]: LOADK     R3 K2        ; R3 := ","
 12 [-]: MOVE      R4 R1        ; R4 := R1
 13 [-]: CALL      R2 3 2       ; R2 := R2(R3,R4)
 14 [-]: GETGLOBAL R3 K3        ; R3 := 0x7b998233
 15 [-]: GETGLOBAL R4 K4        ; R4 := mGameData
 16 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 17 [-]: TEST      R3 1         ; if R3 then PC := 49
 18 [-]: JMP       49           ; PC := 49
 19 [-]: LEN       R3 R2        ; R3 := # R2
 20 [-]: EQ        0 R3 K5      ; if R3 ~= 2.000000 then PC := 49
 21 [-]: JMP       49           ; PC := 49
 22 [-]: GETTABLE  R3 R2 K6     ; R3 := R2[1.000000]
 23 [-]: EQ        1 R3 K7      ; if R3 == "" then PC := 49
 24 [-]: JMP       49           ; PC := 49
 25 [-]: GETTABLE  R3 R2 K5     ; R3 := R2[2.000000]
 26 [-]: EQ        1 R3 K7      ; if R3 == "" then PC := 49
 27 [-]: JMP       49           ; PC := 49
 28 [-]: GETUPVAL  R3 U2        ; R3 := U2
 29 [-]: GETTABLE  R4 R2 K6     ; R4 := R2[1.000000]
 30 [-]: SETTABLE  R3 K8 R4     ; R3["PlayerId"] := R4
 31 [-]: GETUPVAL  R3 U2        ; R3 := U2
 32 [-]: GETTABLE  R4 R2 K5     ; R4 := R2[2.000000]
 33 [-]: SETTABLE  R3 K9 R4     ; R3["PlayerName"] := R4
 34 [-]: GETUPVAL  R3 U2        ; R3 := U2
 35 [-]: SETTABLE  R3 K10 K11   ; R3["TempAddToChatPartners"] := true
 36 [-]: GETGLOBAL R3 K4        ; R3 := mGameData
 37 [-]: SELF      R3 R3 K12    ; R4 := R3; R3 := R3[0xaa1c58ef]
 38 [-]: GETTABLE  R5 R2 K5     ; R5 := R2[2.000000]
 39 [-]: GETTABLE  R6 R2 K6     ; R6 := R2[1.000000]
 40 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 41 [-]: GETGLOBAL R3 K4        ; R3 := mGameData
 42 [-]: SELF      R3 R3 K13    ; R4 := R3; R3 := R3[0x979c6085]
 43 [-]: NEWTABLE  R5 1 0       ; R5 := {}
 44 [-]: GETUPVAL  R6 U2        ; R6 := U2
 45 [-]: GETTABLE  R6 R6 K8     ; R6 := R6["PlayerId"]
 46 [-]: SETLIST   R5 1 1       ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
 47 [-]: LOADK     R6 K14       ; R6 := "OnGetPresenceForJoin"
 48 [-]: CALL      R3 4 1       ; R3(R4,R5,R6)
 49 [-]: RETURN    R0 1         ; return 


; Function #277:
;
; Name:            
; Defined at line: 12025
; #Upvalues:       5
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  17

  1 [-]: EQ        1 R0 K0      ; if R0 == "true" then PC := 4
  2 [-]: JMP       4            ; PC := 4
  3 [-]: OP_LOADBOOL R0 0 1       ; R0 := false; PC := 4
  4 [-]: OP_LOADBOOL R0 1 0       ; R0 := true
  5 [-]: GETUPVAL  R1 U0        ; R1 := U0
  6 [-]: CALL      R1 1 1       ; R1()
  7 [-]: GETGLOBAL R1 K1        ; R1 := 0x7b998233
  8 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
  9 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 10 [-]: TEST      R1 1         ; if R1 then PC := 327
 11 [-]: JMP       327          ; PC := 327
 12 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 13 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mVisualMode"]
 14 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 15 [-]: GETTABLE  R2 R2 K4     ; R2 := R2["VISUAL_MODE_MENU_FULL"]
 16 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 25
 17 [-]: JMP       25           ; PC := 25
 18 [-]: GETGLOBAL R1 K2        ; R1 := mWindow
 19 [-]: GETTABLE  R1 R1 K3     ; R1 := R1["mVisualMode"]
 20 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 21 [-]: GETTABLE  R2 R2 K5     ; R2 := R2["VISUAL_MODE_GAMEPLAY_FULL"]
 22 [-]: EQ        1 R1 R2      ; if R1 == R2 then PC := 25
 23 [-]: JMP       25           ; PC := 25
 24 [-]: OP_LOADBOOL R1 0 1       ; R1 := false; PC := 25
 25 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 26 [-]: TEST      R0 0         ; if not R0 then PC := 41
 27 [-]: JMP       41           ; PC := 41
 28 [-]: TEST      R1 0         ; if not R1 then PC := 41
 29 [-]: JMP       41           ; PC := 41
 30 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 31 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
 32 [-]: GETTABLE  R3 R3 K6     ; R3 := R3["mInputPanel"]
 33 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 34 [-]: TEST      R2 1         ; if R2 then PC := 41
 35 [-]: JMP       41           ; PC := 41
 36 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 37 [-]: GETTABLE  R2 R2 K6     ; R2 := R2["mInputPanel"]
 38 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x8a543a3f]
 39 [-]: CALL      R2 2 1       ; R2(R3)
 40 [-]: JMP       46           ; PC := 46
 41 [-]: TEST      R0 1         ; if R0 then PC := 46
 42 [-]: JMP       46           ; PC := 46
 43 [-]: GETGLOBAL R2 K8        ; R2 := 0xae91e43b
 44 [-]: SELF      R2 R2 K9     ; R3 := R2; R2 := R2[0x80dc5f76]
 45 [-]: CALL      R2 2 1       ; R2(R3)
 46 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 47 [-]: SELF      R2 R2 K10    ; R3 := R2; R2 := R2[0x6a0585d2]
 48 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
 49 [-]: CALL      R2 3 1       ; R2(R3,R4)
 50 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 51 [-]: SELF      R2 R2 K11    ; R3 := R2; R2 := R2[0x161dbc67]
 52 [-]: CALL      R2 2 1       ; R2(R3)
 53 [-]: GETGLOBAL R2 K1        ; R2 := 0x7b998233
 54 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
 55 [-]: GETTABLE  R3 R3 K12    ; R3 := R3["mTabMenu"]
 56 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 57 [-]: TEST      R2 1         ; if R2 then PC := 63
 58 [-]: JMP       63           ; PC := 63
 59 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 60 [-]: GETTABLE  R2 R2 K12    ; R2 := R2["mTabMenu"]
 61 [-]: SELF      R2 R2 K13    ; R3 := R2; R2 := R2[0xddcbd3fb]
 62 [-]: CALL      R2 2 1       ; R2(R3)
 63 [-]: GETGLOBAL R2 K2        ; R2 := mWindow
 64 [-]: SELF      R2 R2 K14    ; R3 := R2; R2 := R2[0x5a1170ee]
 65 [-]: CALL      R2 2 1       ; R2(R3)
 66 [-]: GETUPVAL  R2 U1        ; R2 := U1
 67 [-]: GETTABLE  R2 R2 K15    ; R82 := R2[0x06d055f9]
 68 [-]: GETGLOBAL R3 K16       ; R3 := mInputBlocked
 69 [-]: TEST      R3 1         ; if R3 then PC := 83
 70 [-]: JMP       83           ; PC := 83
 71 [-]: TEST      R0 1         ; if R0 then PC := 83
 72 [-]: JMP       83           ; PC := 83
 73 [-]: GETGLOBAL R3 K17       ; R3 := _T
 74 [-]: GETTABLE  R3 R3 K18    ; R3 := R3["TopMenuOpen"]
 75 [-]: TEST      R3 0         ; if not R3 then PC := 85
 76 [-]: JMP       85           ; PC := 85
 77 [-]: GETGLOBAL R3 K2        ; R3 := mWindow
 78 [-]: GETTABLE  R3 R3 K3     ; R3 := R3["mVisualMode"]
 79 [-]: GETGLOBAL R4 K2        ; R4 := mWindow
 80 [-]: GETTABLE  R4 R4 K4     ; R4 := R4["VISUAL_MODE_MENU_FULL"]
 81 [-]: EQ        1 R3 R4      ; if R3 == R4 then PC := 84
 82 [-]: JMP       84           ; PC := 84
 83 [-]: OP_LOADBOOL R3 0 1       ; R3 := false; PC := 84
 84 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 85 [-]: LOADK     R4 K19       ; R4 := 0.600000
 86 [-]: CONST     R5 0         ; R5 := 0.000000
 87 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 88 [-]: GETGLOBAL R3 K8        ; R3 := 0xae91e43b
 89 [-]: SELF      R3 R3 K20    ; R4 := R3; R3 := R3[0x58bec6d6]
 90 [-]: MOVE      R5 R2        ; R5 := R2
 91 [-]: CALL      R3 3 1       ; R3(R4,R5)
 92 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 93 [-]: GETUPVAL  R4 U2        ; R4 := U2
 94 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 95 [-]: TEST      R3 0         ; if not R3 then PC := 113
 96 [-]: JMP       113          ; PC := 113
 97 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
 98 [-]: GETUPVAL  R4 U3        ; R4 := U3
 99 [-]: CALL      R3 2 2       ; R3 := R3(R4)
100 [-]: TEST      R3 0         ; if not R3 then PC := 113
101 [-]: JMP       113          ; PC := 113
102 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
103 [-]: GETUPVAL  R4 U4        ; R4 := U4
104 [-]: CALL      R3 2 2       ; R3 := R3(R4)
105 [-]: TEST      R3 0         ; if not R3 then PC := 113
106 [-]: JMP       113          ; PC := 113
107 [-]: GETGLOBAL R3 K1        ; R3 := 0x7b998233
108 [-]: GETGLOBAL R4 K21       ; R4 := mChildMovie
109 [-]: CALL      R3 2 2       ; R3 := R3(R4)
110 [-]: NOT       R3 R3        ; R3 := not R3
111 [-]: JMP       114          ; PC := 114
112 [-]: OP_LOADBOOL R3 0 1       ; R3 := false; PC := 113
113 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
114 [-]: TESTSET   R4 R0 1      ; if R0 then PC := 132 else R4 := R0
115 [-]: JMP       132          ; PC := 132
116 [-]: GETGLOBAL R4 K2        ; R4 := mWindow
117 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mVisualMode"]
118 [-]: GETGLOBAL R5 K2        ; R5 := mWindow
119 [-]: GETTABLE  R5 R5 K22    ; R5 := R5["VISUAL_MODE_GAMEPLAY_SIMPLE"]
120 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 131
121 [-]: JMP       131          ; PC := 131
122 [-]: GETGLOBAL R4 K2        ; R4 := mWindow
123 [-]: GETTABLE  R4 R4 K3     ; R4 := R4["mVisualMode"]
124 [-]: GETGLOBAL R5 K2        ; R5 := mWindow
125 [-]: GETTABLE  R5 R5 K23    ; R5 := R5["VISUAL_MODE_MENU_SIMPLE"]
126 [-]: EQ        1 R4 R5      ; if R4 == R5 then PC := 131
127 [-]: JMP       131          ; PC := 131
128 [-]: MOVE      R4 R3        ; R4 := R3
129 [-]: JMP       132          ; PC := 132
130 [-]: OP_LOADBOOL R4 0 1       ; R4 := false; PC := 131
131 [-]: OP_LOADBOOL R4 1 0       ; R4 := true
132 [-]: GETGLOBAL R5 K1        ; R5 := 0x7b998233
133 [-]: GETGLOBAL R6 K17       ; R6 := _T
134 [-]: GETTABLE  R6 R6 K24    ; R6 := R6["SetButtonBarEnabled"]
135 [-]: CALL      R5 2 2       ; R5 := R5(R6)
136 [-]: TEST      R5 1         ; if R5 then PC := 142
137 [-]: JMP       142          ; PC := 142
138 [-]: GETGLOBAL R5 K17       ; R5 := _T
139 [-]: GETTABLE  R5 R5 K25    ; R82 := R5[0x0f9e0f24]
140 [-]: MOVE      R6 R4        ; R6 := R4
141 [-]: CALL      R5 2 1       ; R5(R6)
142 [-]: GETGLOBAL R5 K8        ; R5 := 0xae91e43b
143 [-]: SELF      R5 R5 K26    ; R6 := R5; R5 := R5[0xaade900e]
144 [-]: LOADK     R7 K27       ; R7 := "Window.TabbedChatPanel.FilterCallout"
145 [-]: CONST     R8 11        ; R8 := 11.000000
146 [-]: TEST      R0 1         ; if R0 then PC := 150
147 [-]: JMP       150          ; PC := 150
148 [-]: MOVE      R9 R1        ; R9 := R1
149 [-]: JMP       152          ; PC := 152
150 [-]: OP_LOADBOOL R9 0 1       ; R9 := false; PC := 151
151 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
152 [-]: CALL      R5 5 1       ; R5(R6,R7,R8,R9)
153 [-]: GETGLOBAL R5 K2        ; R5 := mWindow
154 [-]: SELF      R5 R5 K28    ; R6 := R5; R5 := R5[0xdf0b2e2f]
155 [-]: CALL      R5 2 1       ; R5(R6)
156 [-]: GETGLOBAL R5 K2        ; R5 := mWindow
157 [-]: GETTABLE  R5 R5 K6     ; R5 := R5["mInputPanel"]
158 [-]: SELF      R5 R5 K29    ; R6 := R5; R5 := R5[0xcbf89887]
159 [-]: CALL      R5 2 1       ; R5(R6)
160 [-]: GETGLOBAL R5 K2        ; R5 := mWindow
161 [-]: SELF      R5 R5 K30    ; R6 := R5; R5 := R5[0x8ec8f0d5]
162 [-]: GETGLOBAL R7 K2        ; R7 := mWindow
163 [-]: GETTABLE  R7 R7 K6     ; R7 := R7["mInputPanel"]
164 [-]: GETTABLE  R7 R7 K2     ; R7 := R7["mWindow"]
165 [-]: CALL      R5 3 2       ; R5 := R5(R6,R7)
166 [-]: GETGLOBAL R6 K2        ; R6 := mWindow
167 [-]: SELF      R6 R6 K31    ; R7 := R6; R6 := R6[0x8b75da5a]
168 [-]: CALL      R6 2 2       ; R6 := R6(R7)
169 [-]: CONST     R7 100       ; R7 := 100.000000
170 [-]: TEST      R0 1         ; if R0 then PC := 187
171 [-]: JMP       187          ; PC := 187
172 [-]: GETUPVAL  R8 U1        ; R8 := U1
173 [-]: GETTABLE  R8 R8 K15    ; R82 := R8[0x06d055f9]
174 [-]: GETGLOBAL R9 K1        ; R9 := 0x7b998233
175 [-]: MOVE      R10 R6       ; R10 := R6
176 [-]: CALL      R9 2 2       ; R9 := R9(R10)
177 [-]: TEST      R9 1         ; if R9 then PC := 181
178 [-]: JMP       181          ; PC := 181
179 [-]: GETTABLE  R9 R6 K32    ; R9 := R6["mHasHyperlink"]
180 [-]: JMP       183          ; PC := 183
181 [-]: OP_LOADBOOL R9 0 1       ; R9 := false; PC := 182
182 [-]: OP_LOADBOOL R9 1 0       ; R9 := true
183 [-]: CONST     R10 230      ; R10 := 230.000000
184 [-]: CONST     R11 175      ; R11 := 175.000000
185 [-]: CALL      R8 4 2       ; R8 := R8(R9,R10,R11)
186 [-]: MOVE      R7 R8        ; R7 := R8
187 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
188 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xaade900e]
189 [-]: LOADK     R10 K33      ; R10 := "Window.SendMessageBar.HideWindowBtn"
190 [-]: CONST     R11 11       ; R11 := 11.000000
191 [-]: NOT       R12 R0       ; R12 := not R0
192 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
193 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
194 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xaade900e]
195 [-]: LOADK     R10 K34      ; R10 := "Window.SendMessageBar.EmojiBtn.Callout"
196 [-]: CONST     R11 11       ; R11 := 11.000000
197 [-]: NOT       R12 R0       ; R12 := not R0
198 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
199 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
200 [-]: SELF      R8 R8 K35    ; R9 := R8; R8 := R8[0x67bc869f]
201 [-]: LOADK     R10 K36      ; R10 := "Window.SendMessageBar.Prompt"
202 [-]: CONST     R11 0        ; R11 := 0.000000
203 [-]: GETGLOBAL R12 K2       ; R12 := mWindow
204 [-]: GETTABLE  R12 R12 K6   ; R12 := R12["mInputPanel"]
205 [-]: GETTABLE  R12 R12 K37  ; R12 := R12["mInitPromptXPos"]
206 [-]: GETUPVAL  R13 U1       ; R13 := U1
207 [-]: GETTABLE  R13 R13 K15  ; R82 := R13[0x06d055f9]
208 [-]: MOVE      R14 R0       ; R14 := R0
209 [-]: CONST     R15 0        ; R15 := 0.000000
210 [-]: CONST     R16 25       ; R16 := 25.000000
211 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
212 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
213 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
214 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
215 [-]: SELF      R8 R8 K35    ; R9 := R8; R8 := R8[0x67bc869f]
216 [-]: LOADK     R10 K38      ; R10 := "Window.SendMessageBar.MessageBox"
217 [-]: CONST     R11 0        ; R11 := 0.000000
218 [-]: GETGLOBAL R12 K2       ; R12 := mWindow
219 [-]: GETTABLE  R12 R12 K6   ; R12 := R12["mInputPanel"]
220 [-]: GETTABLE  R12 R12 K37  ; R12 := R12["mInitPromptXPos"]
221 [-]: GETUPVAL  R13 U1       ; R13 := U1
222 [-]: GETTABLE  R13 R13 K15  ; R82 := R13[0x06d055f9]
223 [-]: MOVE      R14 R0       ; R14 := R0
224 [-]: CONST     R15 0        ; R15 := 0.000000
225 [-]: CONST     R16 25       ; R16 := 25.000000
226 [-]: CALL      R13 4 2      ; R13 := R13(R14,R15,R16)
227 [-]: ADD       R12 R12 R13  ; R12 := R12 + R13
228 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
229 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
230 [-]: SELF      R8 R8 K35    ; R9 := R8; R8 := R8[0x67bc869f]
231 [-]: LOADK     R10 K38      ; R10 := "Window.SendMessageBar.MessageBox"
232 [-]: CONST     R11 12       ; R11 := 12.000000
233 [-]: GETTABLE  R12 R5 K39   ; R12 := R5["width"]
234 [-]: SUB       R12 R12 R7   ; R12 := R12 - R7
235 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
236 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
237 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xaade900e]
238 [-]: LOADK     R10 K40      ; R10 := "Window.SendMessageBar.Callout"
239 [-]: CONST     R11 11       ; R11 := 11.000000
240 [-]: NOT       R12 R0       ; R12 := not R0
241 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
242 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
243 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xaade900e]
244 [-]: LOADK     R10 K38      ; R10 := "Window.SendMessageBar.MessageBox"
245 [-]: CONST     R11 59       ; R11 := 59.000000
246 [-]: MOVE      R12 R0       ; R12 := R0
247 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
248 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
249 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xaade900e]
250 [-]: LOADK     R10 K41      ; R10 := "Window.UserPanel.Panel.LocatorBtn.Callout"
251 [-]: CONST     R11 11       ; R11 := 11.000000
252 [-]: NOT       R12 R0       ; R12 := not R0
253 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
254 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
255 [-]: SELF      R8 R8 K35    ; R9 := R8; R8 := R8[0x67bc869f]
256 [-]: LOADK     R10 K42      ; R10 := "Window.UserPanel.Panel.LocatorBtn"
257 [-]: CONST     R11 10       ; R11 := 10.000000
258 [-]: GETUPVAL  R12 U1       ; R12 := U1
259 [-]: GETTABLE  R12 R12 K15  ; R82 := R12[0x06d055f9]
260 [-]: MOVE      R13 R0       ; R13 := R0
261 [-]: CONST     R14 50       ; R14 := 50.000000
262 [-]: CONST     R15 100      ; R15 := 100.000000
263 [-]: CALL      R12 4 0      ; R12,... := R12(R13,R14,R15)
264 [-]: CALL      R8 0 1       ; R8(R9,...)
265 [-]: GETGLOBAL R8 K1        ; R8 := 0x7b998233
266 [-]: MOVE      R9 R6        ; R9 := R6
267 [-]: CALL      R8 2 2       ; R8 := R8(R9)
268 [-]: TEST      R8 1         ; if R8 then PC := 281
269 [-]: JMP       281          ; PC := 281
270 [-]: GETGLOBAL R8 K8        ; R8 := 0xae91e43b
271 [-]: SELF      R8 R8 K26    ; R9 := R8; R8 := R8[0xaade900e]
272 [-]: LOADK     R10 K43      ; R10 := "Window.SendMessageBar.HyperlinkBtn"
273 [-]: CONST     R11 11       ; R11 := 11.000000
274 [-]: TEST      R0 1         ; if R0 then PC := 278
275 [-]: JMP       278          ; PC := 278
276 [-]: GETTABLE  R12 R6 K32   ; R12 := R6["mHasHyperlink"]
277 [-]: JMP       280          ; PC := 280
278 [-]: OP_LOADBOOL R12 0 1      ; R12 := false; PC := 279
279 [-]: OP_LOADBOOL R12 1 0      ; R12 := true
280 [-]: CALL      R8 5 1       ; R8(R9,R10,R11,R12)
281 [-]: GETGLOBAL R8 K1        ; R8 := 0x7b998233
282 [-]: GETGLOBAL R9 K2        ; R9 := mWindow
283 [-]: GETTABLE  R9 R9 K44    ; R9 := R9["mUserPanel"]
284 [-]: CALL      R8 2 2       ; R8 := R8(R9)
285 [-]: TEST      R8 1         ; if R8 then PC := 327
286 [-]: JMP       327          ; PC := 327
287 [-]: CLOSURE   R8 0         ; R8 := closure(Function #277.1)
288 [-]: MOVE      R0 R0        ; R0 := R0
289 [-]: GETUPVAL  R0 U1        ; R0 := U1
290 [-]: MOVE      R9 R8        ; R9 := R8
291 [-]: LOADK     R10 K45      ; R10 := "HideWindowBtn"
292 [-]: GETGLOBAL R11 K2       ; R11 := mWindow
293 [-]: GETTABLE  R11 R11 K44  ; R11 := R11["mUserPanel"]
294 [-]: GETTABLE  R11 R11 K46  ; R11 := R11["mEmoteGrid"]
295 [-]: GETTABLE  R11 R11 K47  ; R11 := R11["mIsVisible"]
296 [-]: TEST      R11 1        ; if R11 then PC := 304
297 [-]: JMP       304          ; PC := 304
298 [-]: GETGLOBAL R11 K2       ; R11 := mWindow
299 [-]: GETTABLE  R11 R11 K44  ; R11 := R11["mUserPanel"]
300 [-]: GETTABLE  R11 R11 K48  ; R11 := R11["mListControl"]
301 [-]: GETTABLE  R11 R11 K47  ; R11 := R11["mIsVisible"]
302 [-]: NOT       R11 R11      ; R11 := not R11
303 [-]: JMP       306          ; PC := 306
304 [-]: OP_LOADBOOL R11 0 1      ; R11 := false; PC := 305
305 [-]: OP_LOADBOOL R11 1 0      ; R11 := true
306 [-]: CALL      R9 3 1       ; R9(R10,R11)
307 [-]: MOVE      R9 R8        ; R9 := R8
308 [-]: LOADK     R10 K49      ; R10 := "UserListBtn"
309 [-]: GETGLOBAL R11 K2       ; R11 := mWindow
310 [-]: GETTABLE  R11 R11 K44  ; R11 := R11["mUserPanel"]
311 [-]: GETTABLE  R11 R11 K48  ; R11 := R11["mListControl"]
312 [-]: GETTABLE  R11 R11 K47  ; R11 := R11["mIsVisible"]
313 [-]: CALL      R9 3 1       ; R9(R10,R11)
314 [-]: MOVE      R9 R8        ; R9 := R8
315 [-]: LOADK     R10 K50      ; R10 := "EmojiBtn"
316 [-]: GETGLOBAL R11 K2       ; R11 := mWindow
317 [-]: GETTABLE  R11 R11 K44  ; R11 := R11["mUserPanel"]
318 [-]: GETTABLE  R11 R11 K46  ; R11 := R11["mEmoteGrid"]
319 [-]: GETTABLE  R11 R11 K47  ; R11 := R11["mIsVisible"]
320 [-]: CALL      R9 3 1       ; R9(R10,R11)
321 [-]: GETGLOBAL R9 K2        ; R9 := mWindow
322 [-]: GETTABLE  R9 R9 K44    ; R9 := R9["mUserPanel"]
323 [-]: GETTABLE  R9 R9 K48    ; R9 := R9["mListControl"]
324 [-]: SELF      R9 R9 K51    ; R10 := R9; R9 := R9[0x741d078c]
325 [-]: CLOSURE   R11 1        ; R11 := closure(Function #277.2)
326 [-]: CALL      R9 3 1       ; R9(R10,R11)
327 [-]: RETURN    R0 1         ; return 


; Function #277.1:
;
; Name:            
; Defined at line: 12081
; #Upvalues:       2
; #Parameters:     2
; Is_vararg:       0
; Max Stack Size:  11

  1 [-]: LOADK     R2 K0        ; R2 := "Window.SendMessageBar."
  2 [-]: MOVE      R3 R0        ; R3 := R0
  3 [-]: CONCAT    R2 R2 R3     ; R2 := R2 .. R3
  4 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
  5 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0xc0a3774b]
  6 [-]: MOVE      R5 R2        ; R5 := R2
  7 [-]: LOADK     R6 K3        ; R6 := "Arrow"
  8 [-]: CONST     R7 11        ; R7 := 11.000000
  9 [-]: GETUPVAL  R8 U0        ; R8 := U0
 10 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 11 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 12 [-]: SELF      R3 R3 K2     ; R4 := R3; R3 := R3[0xc0a3774b]
 13 [-]: MOVE      R5 R2        ; R5 := R2
 14 [-]: LOADK     R6 K4        ; R6 := "Highlight"
 15 [-]: CONST     R7 11        ; R7 := 11.000000
 16 [-]: GETUPVAL  R8 U0        ; R8 := U0
 17 [-]: TEST      R8 1         ; if R8 then PC := 21
 18 [-]: JMP       21           ; PC := 21
 19 [-]: MOVE      R8 R1        ; R8 := R1
 20 [-]: JMP       23           ; PC := 23
 21 [-]: OP_LOADBOOL R8 0 1       ; R8 := false; PC := 22
 22 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 23 [-]: CALL      R3 6 1       ; R3(R4,R5,R6,R7,R8)
 24 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 25 [-]: SELF      R3 R3 K5     ; R4 := R3; R3 := R3[0x67bc869f]
 26 [-]: MOVE      R5 R2        ; R5 := R2
 27 [-]: CONST     R6 10        ; R6 := 10.000000
 28 [-]: GETUPVAL  R7 U1        ; R7 := U1
 29 [-]: GETTABLE  R7 R7 K6     ; R82 := R7[0x06d055f9]
 30 [-]: GETUPVAL  R8 U0        ; R8 := U0
 31 [-]: TEST      R8 1         ; if R8 then PC := 35
 32 [-]: JMP       35           ; PC := 35
 33 [-]: MOVE      R8 R1        ; R8 := R1
 34 [-]: JMP       37           ; PC := 37
 35 [-]: OP_LOADBOOL R8 0 1       ; R8 := false; PC := 36
 36 [-]: OP_LOADBOOL R8 1 0       ; R8 := true
 37 [-]: CONST     R9 100       ; R9 := 100.000000
 38 [-]: CONST     R10 50       ; R10 := 50.000000
 39 [-]: CALL      R7 4 0       ; R7,... := R7(R8,R9,R10)
 40 [-]: CALL      R3 0 1       ; R3(R4,...)
 41 [-]: RETURN    R0 1         ; return 


; Function #277.2:
;
; Name:            
; Defined at line: 12093
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R1 K0        ; R1 := mWindow
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["mUserPanel"]
  3 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mListControl"]
  4 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0xb15e6aca]
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 1       ; R1(R2)
  7 [-]: RETURN    R0 1         ; return 


; Function #278:
;
; Name:            
; Defined at line: 12101
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  4

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x9ba7909f
  2 [-]: SELF      R0 R0 K1     ; R1 := R0; R0 := R0[0xc12c4f71]
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
  5 [-]: MOVE      R2 R0        ; R2 := R0
  6 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  7 [-]: TEST      R1 1         ; if R1 then PC := 30
  8 [-]: JMP       30           ; PC := 30
  9 [-]: GETGLOBAL R1 K2        ; R1 := 0x7b998233
 10 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 11 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 12 [-]: TEST      R1 1         ; if R1 then PC := 30
 13 [-]: JMP       30           ; PC := 30
 14 [-]: GETGLOBAL R1 K3        ; R1 := 0xae91e43b
 15 [-]: EQ        1 R0 R1      ; if R0 == R1 then PC := 30
 16 [-]: JMP       30           ; PC := 30
 17 [-]: SELF      R1 R0 K4     ; R2 := R0; R1 := R0[0x21cc0bcc]
 18 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 19 [-]: GETGLOBAL R2 K3        ; R2 := 0xae91e43b
 20 [-]: SELF      R2 R2 K4     ; R3 := R2; R2 := R2[0x21cc0bcc]
 21 [-]: CALL      R2 2 2       ; R2 := R2(R3)
 22 [-]: LE        0 R2 R1      ; if R2 > R1 then PC := 30
 23 [-]: JMP       30           ; PC := 30
 24 [-]: GETUPVAL  R1 U0        ; R1 := U0
 25 [-]: CALL      R1 1 2       ; R1 := R1()
 26 [-]: TEST      R1 0         ; if not R1 then PC := 30
 27 [-]: JMP       30           ; PC := 30
 28 [-]: OP_LOADBOOL R1 1 0       ; R1 := true
 29 [-]: RETURN    R1 2         ; return R1
 30 [-]: RETURN    R0 1         ; return 


; Function #279:
;
; Name:            
; Defined at line: 12110
; #Upvalues:       0
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  3

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
  7 [-]: GETTABLE  R0 R0 K2     ; R82 := R0[0x6e27e6be]
  8 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  9 [-]: CONST     R2 3         ; R2 := 3.000000
 10 [-]: CALL      R0 3 1       ; R0(R1,R2)
 11 [-]: RETURN    R0 1         ; return 


; Function #280:
;
; Name:            
; Defined at line: 12116
; #Upvalues:       1
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 27
  5 [-]: JMP       27           ; PC := 27
  6 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  7 [-]: GETTABLE  R1 R1 K2     ; R1 := R1["mCachedGuildId"]
  8 [-]: EQ        1 R1 K3      ; if R1 == nil then PC := 27
  9 [-]: JMP       27           ; PC := 27
 10 [-]: GETUPVAL  R1 U0        ; R1 := U0
 11 [-]: MOVE      R2 R0        ; R2 := R0
 12 [-]: OP_LOADBOOL R3 1 0       ; R3 := true
 13 [-]: CALL      R1 3 2       ; R1 := R1(R2,R3)
 14 [-]: MOVE      R0 R1        ; R0 := R1
 15 [-]: LOADK     R1 K4        ; R1 := "#C"
 16 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 17 [-]: GETTABLE  R2 R2 K2     ; R2 := R2["mCachedGuildId"]
 18 [-]: CONCAT    R1 R1 R2     ; R1 := R1 .. R2
 19 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 20 [-]: SELF      R2 R2 K5     ; R3 := R2; R2 := R2[0xf88a689b]
 21 [-]: LOADK     R4 K6        ; R4 := ","
 22 [-]: MOVE      R5 R1        ; R5 := R1
 23 [-]: LOADK     R6 K7        ; R6 := ",,,"
 24 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 25 [-]: MOVE      R5 R0        ; R5 := R0
 26 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 27 [-]: RETURN    R0 1         ; return 


; Function #281:
;
; Name:            
; Defined at line: 12128
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  7

  1 [-]: GETGLOBAL R1 K0        ; R1 := 0x7b998233
  2 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
  3 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  4 [-]: TEST      R1 1         ; if R1 then PC := 17
  5 [-]: JMP       17           ; PC := 17
  6 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  7 [-]: SELF      R1 R1 K2     ; R2 := R1; R1 := R1[0x69689b44]
  8 [-]: CALL      R1 2 2       ; R1 := R1(R2)
  9 [-]: GETGLOBAL R2 K1        ; R2 := mWindow
 10 [-]: SELF      R2 R2 K3     ; R3 := R2; R2 := R2[0xf88a689b]
 11 [-]: LOADK     R4 K4        ; R4 := ","
 12 [-]: MOVE      R5 R1        ; R5 := R1
 13 [-]: LOADK     R6 K5        ; R6 := ",,,"
 14 [-]: CONCAT    R4 R4 R6     ; R4 := R4 .. R5 .. R6
 15 [-]: MOVE      R5 R0        ; R5 := R0
 16 [-]: CALL      R2 4 1       ; R2(R3,R4,R5)
 17 [-]: GETGLOBAL R2 K6        ; R2 := _T
 18 [-]: GETTABLE  R2 R2 K7     ; R82 := R2[0x7dce37bc]
 19 [-]: MOVE      R3 R0        ; R3 := R0
 20 [-]: CALL      R2 2 1       ; R2(R3)
 21 [-]: RETURN    R0 1         ; return 


; Function #282:
;
; Name:            
; Defined at line: 12136
; #Upvalues:       0
; #Parameters:     1
; Is_vararg:       0
; Max Stack Size:  6

  1 [-]: GETGLOBAL R1 K0        ; R1 := _T
  2 [-]: GETTABLE  R1 R1 K1     ; R1 := R1["ShowNotification"]
  3 [-]: EQ        1 R1 K2      ; if R1 == nil then PC := 12
  4 [-]: JMP       12           ; PC := 12
  5 [-]: GETGLOBAL R1 K0        ; R1 := _T
  6 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0x7dce37bc]
  7 [-]: MOVE      R2 R0        ; R2 := R0
  8 [-]: LOADK     R3 K4        ; R3 := "EventReminder"
  9 [-]: OP_LOADBOOL R4 0 0       ; R4 := false
 10 [-]: CONST     R5 8         ; R5 := 8.000000
 11 [-]: CALL      R1 5 1       ; R1(R2,R3,R4,R5)
 12 [-]: RETURN    R0 1         ; return 


; Function #283:
;
; Name:            
; Defined at line: 12142
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  2

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := mWindow
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 1         ; if R0 then PC := 11
  5 [-]: JMP       11           ; PC := 11
  6 [-]: GETGLOBAL R0 K1        ; R0 := mWindow
  7 [-]: GETUPVAL  R1 U0        ; R1 := U0
  8 [-]: GETTABLE  R1 R1 K3     ; R82 := R1[0x293ec9c4]
  9 [-]: CALL      R1 1 2       ; R1 := R1()
 10 [-]: SETTABLE  R0 K2 R1     ; R0["mInQuestCommitment"] := R1
 11 [-]: RETURN    R0 1         ; return 


; Function #284:
;
; Name:            
; Defined at line: 12149
; #Upvalues:       1
; #Parameters:     0
; Is_vararg:       0
; Max Stack Size:  10

  1 [-]: GETGLOBAL R0 K0        ; R0 := 0x7b998233
  2 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
  3 [-]: CALL      R0 2 2       ; R0 := R0(R1)
  4 [-]: TEST      R0 0         ; if not R0 then PC := 7
  5 [-]: JMP       7            ; PC := 7
  6 [-]: RETURN    R0 1         ; return 
  7 [-]: GETGLOBAL R0 K2        ; R0 := _T
  8 [-]: GETTABLE  R0 R0 K3     ; R0 := R0["Touch_GetChatOffset"]
  9 [-]: TEST      R0 0         ; if not R0 then PC := 81
 10 [-]: JMP       81           ; PC := 81
 11 [-]: GETGLOBAL R0 K2        ; R0 := _T
 12 [-]: GETTABLE  R0 R0 K4     ; R82 := R0[0x5845d21b]
 13 [-]: CALL      R0 1 2       ; R0 := R0()
 14 [-]: GETGLOBAL R1 K1        ; R1 := 0xae91e43b
 15 [-]: SELF      R1 R1 K5     ; R2 := R1; R1 := R1[0x6b837788]
 16 [-]: CALL      R1 2 2       ; R1 := R1(R2)
 17 [-]: GETTABLE  R2 R0 K6     ; R2 := R0["x"]
 18 [-]: MUL       R1 R1 R2     ; R1 := R1 * R2
 19 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 20 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x91a24e4b]
 21 [-]: LOADK     R4 K8        ; R4 := "_root"
 22 [-]: CONST     R5 5         ; R5 := 5.000000
 23 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 24 [-]: DIV       R2 R2 K9     ; R2 := R2 / 100.000000
 25 [-]: DIV       R1 R1 R2     ; R1 := R1 / R2
 26 [-]: GETGLOBAL R2 K1        ; R2 := 0xae91e43b
 27 [-]: SELF      R2 R2 K7     ; R3 := R2; R2 := R2[0x91a24e4b]
 28 [-]: LOADK     R4 K8        ; R4 := "_root"
 29 [-]: CONST     R5 6         ; R5 := 6.000000
 30 [-]: CALL      R2 4 2       ; R2 := R2(R3,R4,R5)
 31 [-]: DIV       R2 R2 K9     ; R2 := R2 / 100.000000
 32 [-]: GETGLOBAL R3 K1        ; R3 := 0xae91e43b
 33 [-]: SELF      R3 R3 K10    ; R4 := R3; R3 := R3[0xaf9fda9f]
 34 [-]: CALL      R3 2 2       ; R3 := R3(R4)
 35 [-]: GETTABLE  R4 R0 K11    ; R4 := R0["y"]
 36 [-]: MUL       R3 R3 R4     ; R3 := R3 * R4
 37 [-]: DIV       R3 R3 R2     ; R3 := R3 / R2
 38 [-]: GETGLOBAL R4 K12       ; R4 := mWindow
 39 [-]: GETTABLE  R4 R4 K12    ; R4 := R4["mWindow"]
 40 [-]: GETTABLE  R4 R4 K13    ; R4 := R4["height"]
 41 [-]: DIV       R4 R4 R2     ; R4 := R4 / R2
 42 [-]: SUB       R3 R3 R4     ; R3 := R3 - R4
 43 [-]: SUB       R3 R3 K14    ; R3 := R3 - 128.000000
 44 [-]: GETGLOBAL R4 K12       ; R4 := mWindow
 45 [-]: GETTABLE  R4 R4 K15    ; R4 := R4["mVisualMode"]
 46 [-]: GETGLOBAL R5 K12       ; R5 := mWindow
 47 [-]: GETTABLE  R5 R5 K16    ; R5 := R5["VISUAL_MODE_GAMEPLAY_SIMPLE"]
 48 [-]: EQ        0 R4 R5      ; if R4 ~= R5 then PC := 70
 49 [-]: JMP       70           ; PC := 70
 50 [-]: GETGLOBAL R4 K1        ; R4 := 0xae91e43b
 51 [-]: SELF      R4 R4 K7     ; R5 := R4; R4 := R4[0x91a24e4b]
 52 [-]: LOADK     R6 K17       ; R6 := "Window.SendMessageBar.MessageBox"
 53 [-]: CONST     R7 13        ; R7 := 13.000000
 54 [-]: CALL      R4 4 2       ; R4 := R4(R5,R6,R7)
 55 [-]: GETGLOBAL R5 K1        ; R5 := 0xae91e43b
 56 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0x91a24e4b]
 57 [-]: LOADK     R7 K18       ; R7 := "Window.SendMessageBar"
 58 [-]: CONST     R8 5         ; R8 := 5.000000
 59 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 60 [-]: MUL       R5 R4 R5     ; R5 := R4 * R5
 61 [-]: DIV       R4 R5 K9     ; R4 := R5 / 100.000000
 62 [-]: GETGLOBAL R5 K1        ; R5 := 0xae91e43b
 63 [-]: SELF      R5 R5 K7     ; R6 := R5; R5 := R5[0x91a24e4b]
 64 [-]: LOADK     R7 K19       ; R7 := "Window"
 65 [-]: CONST     R8 5         ; R8 := 5.000000
 66 [-]: CALL      R5 4 2       ; R5 := R5(R6,R7,R8)
 67 [-]: MUL       R5 R4 R5     ; R5 := R4 * R5
 68 [-]: DIV       R4 R5 K9     ; R4 := R5 / 100.000000
 69 [-]: ADD       R3 R3 R4     ; R3 := R3 + R4
 70 [-]: GETGLOBAL R5 K12       ; R5 := mWindow
 71 [-]: SELF      R5 R5 K20    ; R6 := R5; R5 := R5[0x9307aa51]
 72 [-]: GETUPVAL  R7 U0        ; R7 := U0
 73 [-]: GETTABLE  R7 R7 K21    ; R82 := R7[0x74a11ec6]
 74 [-]: MOVE      R8 R1        ; R8 := R1
 75 [-]: CALL      R7 2 2       ; R7 := R7(R8)
 76 [-]: GETUPVAL  R8 U0        ; R8 := U0
 77 [-]: GETTABLE  R8 R8 K21    ; R82 := R8[0x74a11ec6]
 78 [-]: MOVE      R9 R3        ; R9 := R3
 79 [-]: CALL      R8 2 0       ; R8,... := R8(R9)
 80 [-]: CALL      R5 0 1       ; R5(R6,...)
 81 [-]: RETURN    R0 1         ; return 


